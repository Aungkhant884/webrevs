{"files":[{"patch":"@@ -3507,1 +3507,1 @@\n-      jcc(Assembler::notZero, COMPARE_WIDE_VECTORS);\n+      jccb(Assembler::notZero, COMPARE_WIDE_VECTORS);\n@@ -3509,0 +3509,4 @@\n+      testl(result, 0x0000001f);   \/\/ any bytes remaining?\n+      jcc(Assembler::zero, DONE);\n+\n+      \/\/ Quick test using the already prepared vector mask\n@@ -3510,1 +3514,3 @@\n-      andl(len, 0x0000001f);   \/\/ tail count (in bytes)\n+      andl(len, 0x0000001f);\n+      vmovdqu(vec1, Address(ary1, len, Address::times_1, -32));\n+      vptest(vec1, vec2);\n@@ -3512,0 +3518,1 @@\n+      \/\/ There are zeros, jump to the tail to determine exactly where\n@@ -3544,1 +3551,1 @@\n-      jcc(Assembler::notZero, BREAK_LOOP);\n+      jccb(Assembler::notZero, BREAK_LOOP);\n@@ -3546,1 +3553,1 @@\n-      jcc(Assembler::notZero, COMPARE_WIDE_VECTORS);\n+      jccb(Assembler::notZero, COMPARE_WIDE_VECTORS);\n@@ -3548,0 +3555,4 @@\n+      testl(result, 0x0000000f); \/\/ len is zero, any bytes remaining?\n+      jcc(Assembler::zero, DONE);\n+\n+      \/\/ Quick test using the already prepared vector mask\n@@ -3550,0 +3561,2 @@\n+      movdqu(vec1, Address(ary1, len, Address::times_1, -16));\n+      ptest(vec1, vec2);\n","filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp","additions":17,"deletions":4,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,0 +44,1 @@\n+    private byte[] mediumAsciiString;\n@@ -55,1 +56,11 @@\n-        asciiString = \"ascii string\".getBytes(charset);\n+        asciiString = \"ascii string\".repeat(3).getBytes(charset);\n+        mediumAsciiString = \"\"\"\n+             Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam ac sem eu\n+             urna egestas placerat. Etiam finibus ipsum nulla, non mattis dolor cursus a.\n+             Nulla nec nisl consectetur, lacinia neque id, accumsan ante. Curabitur et\n+             sapien in magna porta ultricies. Sed vel pellentesque nibh. Pellentesque dictum\n+             dignissim diam eu ultricies. Class aptent taciti sociosqu ad litora torquent\n+             per conubia nostra, per inceptos himenaeos. Suspendisse erat diam, fringilla\n+             sed massa sed, posuere viverra orci. Suspendisse tempor libero non gravida\n+             efficitur. Vivamus lacinia risus non orci viverra, at consectetur odio laoreet.\n+             Suspendisse potenti.\"\"\".repeat(2).getBytes(charset);\n@@ -65,11 +76,1 @@\n-             Suspendisse potenti.\n-\n-             Phasellus vel nisi iaculis, accumsan quam sed, bibendum eros. Sed venenatis\n-             nulla tortor, et eleifend urna sodales id. Nullam tempus ac metus sit amet\n-             sollicitudin. Nam sed ex diam. Praesent vitae eros et neque condimentum\n-             consectetur eget non tortor. Praesent bibendum vel felis nec dignissim.\n-             Maecenas a enim diam. Suspendisse quis ligula at nisi accumsan lacinia id\n-             hendrerit sapien. Donec aliquam mattis lectus eu ultrices. Duis eu nisl\n-             euismod, blandit mauris vel, placerat urna. Etiam malesuada enim purus,\n-             tristique mollis odio blandit quis. Vivamus posuere.\n-            \"\"\".getBytes(charset);\n+             Suspendisse potenti.\"\"\".repeat(200).getBytes(charset);\n@@ -171,2 +172,4 @@\n-    public String decodeAsciiCharsetName() throws Exception {\n-        return new String(asciiString, charsetName);\n+    public void decodeAsciiShort(Blackhole bh) throws Exception {\n+        bh.consume(new String(asciiString, charset));\n+        bh.consume(new String(asciiString, 0, 31, charset));\n+        bh.consume(new String(asciiString, 0, 15, charset));\n@@ -177,2 +180,5 @@\n-    public String decodeAscii() throws Exception {\n-        return new String(asciiString, charset);\n+    public void decodeAsciiMedium(Blackhole bh) throws Exception {\n+        bh.consume(new String(mediumAsciiString, charset));\n+        bh.consume(new String(mediumAsciiString, 0, 31, charset));\n+        bh.consume(new String(mediumAsciiString, 0, 63, charset));\n+        bh.consume(new String(mediumAsciiString, 0, 95, charset));\n@@ -183,2 +189,5 @@\n-    public String decodeAsciiLong() throws Exception {\n-        return new String(longAsciiString, charset);\n+    public void decodeAsciiLongMix(Blackhole bh) throws Exception {\n+        bh.consume(new String(longAsciiString, charset));\n+        bh.consume(new String(longAsciiString, 0, 1024 + 31, charset));\n+        bh.consume(new String(longAsciiString, 0, 1024 + 63, charset));\n+        bh.consume(new String(longAsciiString, 0, 1024 + 95, charset));\n@@ -195,2 +204,2 @@\n-    public String decodeLatin1StartLong() throws Exception {\n-        return new String(longLatin1StartString, charset);\n+    public String decodeLatin1LongStart() throws Exception {\n+        return new String(longLatin1StartString, 0, 95, charset);\n@@ -201,2 +210,2 @@\n-    public String decodeLatin1EndLong() throws Exception {\n-        return new String(longLatin1EndString, charset);\n+    public String decodeLatin1LongEnd() throws Exception {\n+        return new String(longLatin1EndString, 0, 95, charset);\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/StringDecode.java","additions":32,"deletions":23,"binary":false,"changes":55,"status":"modified"}]}