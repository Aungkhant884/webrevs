{"files":[{"patch":"@@ -4375,2 +4375,2 @@\n-    sub(len, zr, len, LSL, 3); \/\/ LSL 3 is to get bits from bytes\n-    lslv(rscratch1, rscratch1, len);\n+    sub(rscratch2, zr, len, LSL, 3); \/\/ LSL 3 is to get bits from bytes\n+    lslv(rscratch1, rscratch1, rscratch2);\n@@ -4378,1 +4378,2 @@\n-    b(SET_RESULT);\n+    br(NE, SET_RESULT);\n+    b(DONE);\n@@ -4403,1 +4404,3 @@\n-    csel(result, zr, result, NE); \/\/ set len or 0\n+\n+    add(len, len, wordSize);\n+    sub(result, result, len);\n","filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.cpp","additions":7,"deletions":4,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -4677,1 +4677,1 @@\n-  Label RET_TRUE, RET_TRUE_NO_POP, RET_FALSE, ALIGNED, LOOP16, CHECK_16,\n+  Label RET_ADJUST, RET_ADJUST_16, RET_ADJUST_LONG, RET_NO_POP, RET_LEN, ALIGNED, LOOP16, CHECK_16,\n@@ -4698,1 +4698,1 @@\n-  __ br(Assembler::NE, RET_TRUE_NO_POP);\n+  __ br(Assembler::NE, RET_NO_POP);\n@@ -4702,0 +4702,1 @@\n+  __ bind(RET_NO_POP);\n@@ -4721,1 +4722,0 @@\n-    __ sub(len, len, rscratch1);\n@@ -4724,1 +4724,2 @@\n-    __ br(Assembler::NE, RET_TRUE);\n+    __ br(Assembler::NE, RET_ADJUST);\n+    __ sub(len, len, rscratch1);\n@@ -4739,1 +4740,1 @@\n-    __ br(Assembler::NE, RET_TRUE);\n+    __ br(Assembler::NE, RET_ADJUST_16);\n@@ -4771,1 +4772,1 @@\n-    __ br(Assembler::NE, RET_TRUE);\n+    __ br(Assembler::NE, RET_ADJUST_LONG);\n@@ -4784,1 +4785,1 @@\n-    __ br(Assembler::NE, RET_TRUE);\n+    __ br(Assembler::NE, RET_ADJUST_16);\n@@ -4792,1 +4793,0 @@\n-    __ sub(len, len, 8);\n@@ -4794,1 +4794,2 @@\n-    __ br(Assembler::NE, RET_TRUE);\n+    __ br(Assembler::NE, RET_ADJUST);\n+    __ sub(len, len, 8);\n@@ -4797,1 +4798,1 @@\n-    __ cbz(len, RET_FALSE); \/\/ Can't shift left by 64 when len==0\n+    __ cbz(len, RET_LEN); \/\/ Can't shift left by 64 when len==0\n@@ -4803,1 +4804,1 @@\n-    __ br(Assembler::NE, RET_TRUE);\n+    __ br(Assembler::NE, RET_ADJUST);\n@@ -4806,1 +4807,1 @@\n-  __ bind(RET_FALSE);\n+  __ bind(RET_LEN);\n@@ -4811,1 +4812,8 @@\n-  __ bind(RET_TRUE);\n+    \/\/ difference result - len is the count of guaranteed to be\n+    \/\/ positive bytes\n+\n+  __ bind(RET_ADJUST_LONG);\n+    __ add(len, len, (u1)(large_loop_size - 16));\n+  __ bind(RET_ADJUST_16);\n+    __ add(len, len, 16);\n+  __ bind(RET_ADJUST);\n@@ -4813,1 +4821,0 @@\n-  __ bind(RET_TRUE_NO_POP);\n@@ -4815,1 +4822,1 @@\n-    __ mov(result, zr);\n+    __ sub(result, result, len);\n","filename":"src\/hotspot\/cpu\/aarch64\/stubGenerator_aarch64.cpp","additions":22,"deletions":15,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -90,1 +90,1 @@\n-        bh.consume(new String(longAsciiString, 512, 512 + 7, charset));\n+        bh.consume(new String(longAsciiString, 512, 7, charset));\n@@ -106,1 +106,1 @@\n-        bh.consume(new String(longLatin1OnlyString, 512, 512 + 7, charset));\n+        bh.consume(new String(longLatin1OnlyString, 512, 7, charset));\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/StringDecode.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}