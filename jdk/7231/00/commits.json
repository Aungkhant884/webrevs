[{"commit":{"message":"Let countPositives use hasNegatives to allow ports not implementing the countPositives intrinsic to stay neutral"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/StringCoding.java"}],"sha":"2a855eb60c12b92617c7e543cada7a9194bc4e80"},{"commit":{"message":"Simplify changes to encodeUTF8"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/String.java"}],"sha":"251fe382b0c0200afe4c345ace601767ab295626"},{"commit":{"message":"Fix little-endian error caught by testing"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp"}],"sha":"37813aff5ed34f387ea4be3d133b737ae707d9c4"},{"commit":{"message":"Reduce jumps in the ascii path"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp"}],"sha":"0b12c1a9f0906547e093135af2e8091afa36c453"},{"commit":{"message":"Remove unused tail_mask"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp"}],"sha":"c25315732b8c5421d2ac8f8409960b23af60e425"},{"commit":{"message":"Remove has_negatives intrinsic on x86 (and hook up 32-bit x86 to use count_positives)"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.hpp"},{"filename":"src\/hotspot\/cpu\/x86\/x86_32.ad"},{"filename":"src\/hotspot\/cpu\/x86\/x86_64.ad"}],"sha":"175a6500bbfbc69846ba4fb2b4f6ffed98a6faab"},{"commit":{"message":"Add more comments, simplify tail branching in AVX512 variant"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp"}],"sha":"49602d23198c67f38801e7da1d02ce31ac4afc7f"},{"commit":{"message":"Resolve issues in the precise implementation"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp"},{"filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/string\/TestCountPositives.java"}],"sha":"fc01b89a9de09e443945cae2f78ff310d80194b0"},{"commit":{"message":"Add shortMixed micros, cleanups"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/StringCoding.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/StringDecode.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/StringEncode.java"}],"sha":"6f2aed3b14c43887007d740470fb1f5366010191"},{"commit":{"message":"Adjust the countPositives intrinsic to count the bytes exactly."},"files":[{"filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/StringCoding.java"},{"filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/string\/TestCountPositives.java"}],"sha":"3e3e451be78a8b68eaeb2017ca18f37dfe810f15"},{"commit":{"message":"Further tuning of intrinsic to improve precision on short strings with negatives. Revert cosmetic changes to String, fix StringEncode micro."},"files":[{"filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/String.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/StringEncode.java"}],"sha":"b87d534f087a8e335bd0619c98e2e6f37277ea86"},{"commit":{"message":"Improve benchmark, fine-tune intrinsic code"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/String.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/StringDecode.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/StringEncode.java"}],"sha":"6ca30be3ff19226940de30b8eb70f8d9fb181ca6"},{"commit":{"message":"Add latin1 StringEncode micros"},"files":[{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/StringEncode.java"}],"sha":"0049d332c1b66347793027766339ec3cb82db26a"},{"commit":{"message":"Cleanup, minor improvements"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/String.java"}],"sha":"b8fd8ddbf90ae846484a8f19f48a8b8ed83104bb"},{"commit":{"message":"Fix incorrectly encoding latin1 to utf-8"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/String.java"}],"sha":"bdaa322872332227dc08c14d0a45ba08ac9506e0"},{"commit":{"message":"Merge branch 'master' into count_positives"},"files":[],"sha":"622774cb4449b8a652d6533e3b13705a860b4548"},{"commit":{"message":"Fix outdated ref in shenandoahSupport"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/c2\/shenandoahSupport.cpp"}],"sha":"2e5a5d14fbb2e13d7376dbb00a0285e434878c4e"},{"commit":{"message":"Merge branch 'master' into count_positives"},"files":[],"sha":"fde25abfeac7597a1eaacad4147169be705ba147"},{"commit":{"message":"Various tweaks and improvements"},"files":[{"filename":"src\/hotspot\/share\/classfile\/vmIntrinsics.hpp"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/String.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/StringDecode.java"}],"sha":"030eb786d9adae53e4f262b090c3ae2e730725d1"},{"commit":{"message":"Merge branch 'master' of https:\/\/github.com\/openjdk\/jdk into count_positives"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.hpp"}],"sha":"cc5d864980a5d78a752b437b65556366ae6b0e27"},{"commit":{"message":"Add StringCoding.countPositives, enabling optimizing decoding\/encoding of ASCII prefixed Strings"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.hpp"},{"filename":"src\/hotspot\/cpu\/x86\/x86_64.ad"},{"filename":"src\/hotspot\/share\/adlc\/formssel.cpp"},{"filename":"src\/hotspot\/share\/classfile\/vmIntrinsics.cpp"},{"filename":"src\/hotspot\/share\/classfile\/vmIntrinsics.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/c2\/shenandoahSupport.cpp"},{"filename":"src\/hotspot\/share\/opto\/c2compiler.cpp"},{"filename":"src\/hotspot\/share\/opto\/classes.hpp"},{"filename":"src\/hotspot\/share\/opto\/escape.cpp"},{"filename":"src\/hotspot\/share\/opto\/intrinsicnode.hpp"},{"filename":"src\/hotspot\/share\/opto\/lcm.cpp"},{"filename":"src\/hotspot\/share\/opto\/library_call.cpp"},{"filename":"src\/hotspot\/share\/opto\/library_call.hpp"},{"filename":"src\/hotspot\/share\/opto\/loopTransform.cpp"},{"filename":"src\/hotspot\/share\/opto\/loopnode.cpp"},{"filename":"src\/hotspot\/share\/opto\/matcher.cpp"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/String.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/StringCoding.java"},{"filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/string\/TestCountPositives.java"},{"filename":"test\/hotspot\/jtreg\/compiler\/patches\/java.base\/java\/lang\/Helper.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/StringDecode.java"}],"sha":"d59de3819d1033a60cef11f17008ba4ac7716fad"}]