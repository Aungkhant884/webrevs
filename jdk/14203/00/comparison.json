{"files":[{"patch":"@@ -761,2 +761,2 @@\n-void MacroAssembler::li16u(Register Rd, int32_t imm) {\n-  lui(Rd, imm << 12);\n+void MacroAssembler::li16u(Register Rd, uint16_t imm) {\n+  lui(Rd, (uint32_t)imm << 12);\n@@ -1415,2 +1415,2 @@\n-static int patch_imm_in_li16u(address branch, int32_t target) {\n-  Assembler::patch(branch, 31, 12, target & 0xfffff); \/\/ patch lui only\n+static int patch_imm_in_li16u(address branch, uint16_t target) {\n+  Assembler::patch(branch, 31, 12, target); \/\/ patch lui only\n@@ -1511,1 +1511,1 @@\n-    return patch_imm_in_li16u(branch, (int32_t)imm);\n+    return patch_imm_in_li16u(branch, (uint16_t)imm);\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -696,1 +696,1 @@\n-  void li16u(Register Rd, int32_t imm);\n+  void li16u(Register Rd, uint16_t imm);\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-  _initial_stubs_code_size      = 19000,\n+  _initial_stubs_code_size      = 10000,\n@@ -42,2 +42,2 @@\n-  _compiler_stubs_code_size     = 128000,\n-  _final_stubs_code_size        = 128000\n+  _compiler_stubs_code_size     = 15000 ZGC_ONLY(+5000),\n+  _final_stubs_code_size        = 20000 ZGC_ONLY(+10000)\n","filename":"src\/hotspot\/cpu\/riscv\/stubRoutines_riscv.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}