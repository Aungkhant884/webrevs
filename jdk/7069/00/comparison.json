{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -70,0 +70,1 @@\n+#include \"oops\/objArrayKlass.hpp\"\n@@ -361,2 +362,16 @@\n-    \/\/ Do not filter ArrayKlass oops here...\n-    if (k->is_array_klass() || (k->is_instance_klass() && InstanceKlass::cast(k)->is_loaded())) {\n+    \/\/ Filter out InstanceKlasses (or their ObjArrayKlasses) that have not entered the\n+    \/\/ loaded state.\n+    if (k->is_instance_klass()) {\n+      if (!InstanceKlass::cast(k)->is_loaded()) {\n+        continue;\n+      }\n+    } else if (k->is_objArray_klass()) {\n+      Klass* bottom = ObjArrayKlass::cast(k)->bottom_klass();\n+      if (bottom->is_instance_klass() && !InstanceKlass::cast(bottom)->is_loaded()) {\n+        \/\/ This could happen if <bottom> is a shared class that has been restored\n+        \/\/ but is not yet marked as loaded. All archived array classes of the\n+        \/\/ bottom class are already restored and placed in the _klasses list.\n+        continue;\n+      }\n+    }\n+\n@@ -364,3 +379,3 @@\n-      oop m = k->java_mirror();\n-      assert(m != NULL, \"NULL mirror\");\n-      assert(m->is_a(vmClasses::Class_klass()), \"invalid mirror\");\n+    oop m = k->java_mirror();\n+    assert(m != NULL, \"NULL mirror\");\n+    assert(m->is_a(vmClasses::Class_klass()), \"invalid mirror\");\n@@ -368,2 +383,1 @@\n-      klass_closure->do_klass(k);\n-    }\n+    klass_closure->do_klass(k);\n","filename":"src\/hotspot\/share\/classfile\/classLoaderData.cpp","additions":22,"deletions":8,"binary":false,"changes":30,"status":"modified"}]}