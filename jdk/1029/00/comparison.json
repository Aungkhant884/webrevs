{"files":[{"patch":"@@ -2072,2 +2072,0 @@\n-            \/\/ If the TLAB isn't pre-zeroed then we'll have to do it\n-            bool need_zero = !ZeroTLAB;\n@@ -2077,16 +2075,0 @@\n-            \/\/ Disable non-TLAB-based fast-path, because profiling requires that all\n-            \/\/ allocations go through InterpreterRuntime::_new() if THREAD->tlab().allocate\n-            \/\/ returns NULL.\n-            if (result == NULL) {\n-              need_zero = true;\n-              \/\/ Try allocate in shared eden\n-            retry:\n-              HeapWord* compare_to = *Universe::heap()->top_addr();\n-              HeapWord* new_top = compare_to + obj_size;\n-              if (new_top <= *Universe::heap()->end_addr()) {\n-                if (Atomic::cmpxchg(Universe::heap()->top_addr(), compare_to, new_top) != compare_to) {\n-                  goto retry;\n-                }\n-                result = (oop) compare_to;\n-              }\n-            }\n@@ -2094,2 +2076,3 @@\n-              \/\/ Initialize object (if nonzero size and need) and then the header\n-              if (need_zero ) {\n+              \/\/ Initialize object (if nonzero size and need) and then the header.\n+              \/\/ If the TLAB isn't pre-zeroed then we'll have to do it.\n+              if (!ZeroTLAB) {\n","filename":"src\/hotspot\/share\/interpreter\/zero\/bytecodeInterpreter.cpp","additions":3,"deletions":20,"binary":false,"changes":23,"status":"modified"}]}