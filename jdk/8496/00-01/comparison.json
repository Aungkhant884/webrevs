{"files":[{"patch":"@@ -331,0 +331,1 @@\n+                System.out.println(\"INTERRUPTED while loading Image\");\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/ImageIcon.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,120 +0,0 @@\n-\/* @test\n-   @bug 5047379\n-   @summary Checks that tooltips are rendered properly\n-   @author Shannon Hickey\n-   @library ..\/..\/regtesthelpers\n-   @run main\/manual bug5047379\n-*\/\n-import java.awt.BorderLayout;\n-import java.awt.FlowLayout;\n-import java.awt.GridLayout;\n-\n-import javax.swing.JButton;\n-import javax.swing.JComponent;\n-import javax.swing.JFrame;\n-import javax.swing.JPanel;\n-import javax.swing.JTextArea;\n-import javax.swing.KeyStroke;\n-import javax.swing.SwingUtilities;\n-\n-import java.util.concurrent.atomic.AtomicBoolean;\n-\n-public class bug5047379 {\n-    private static final AtomicBoolean testCompleted = new AtomicBoolean(false);\n-    private static final long TIMEOUT =  5 * 60 * 1000;\n-    static JFrame frame;\n-\n-    public static void main(String[] args) throws Throwable {\n-        SwingUtilities.invokeLater(new Runnable() {\n-            public void run() {\n-                runTest();\n-            }\n-        });\n-        waitForCompleting();\n-    }\n-\n-    private static void runTest() {\n-        frame = new JFrame();\n-        JTextArea area = new JTextArea();\n-        JPanel p = new JPanel();\n-        JPanel resPanel = new JPanel(new FlowLayout());\n-\n-        String text  = \"Place your mouse over each button (A, B, C, D) in sequence\\n\";\n-               text += \"and wait for the tooltip to appear. Here is what should\\n\";\n-               text += \"be shown for each button:\\n\";\n-               text += \"\\n\";\n-               text += \"    A: The word \\\"TEXT\\\"\\n\";\n-               text += \"    B: The word \\\"TEXT\\\" and then in a different size\/color, \\\"CTRL B\\\"\\n\";\n-               text += \"    C: The word \\\"TEXT\\\"\\n\";\n-               text += \"    D: The word \\\"TEXT\\\" and then in a different size\/color, \\\"CTRL D\\\"\\n\";\n-               text += \"\\n\";\n-               text += \"If this is the case, hit PASS. If you see anything else,\\n\";\n-               text += \"including extra space to the right (as if the tooltip is too large\\n\";\n-               text += \"or something is missing), hit FAIL.\";\n-\n-        area.setText(text);\n-        area.setEditable(false);\n-        area.setFocusable(false);\n-        frame.add(area, BorderLayout.CENTER);\n-\n-        p.setLayout(new GridLayout(1, 5));\n-\n-        JButton a = new JButton(\"A\");\n-        a.setMnemonic(java.awt.event.KeyEvent.VK_A);\n-        a.setToolTipText(\"TEXT\");\n-        p.add(a);\n-\n-        JButton b = new JButton(\"B\");\n-        b.setMnemonic(java.awt.event.KeyEvent.VK_B);\n-        b.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(KeyStroke.getKeyStroke(\"ctrl B\"), \"foo\");\n-        b.setToolTipText(\"TEXT\");\n-        p.add(b);\n-\n-        JButton c = new JButton(\"C\");\n-        c.setMnemonic(java.awt.event.KeyEvent.VK_C);\n-        c.setToolTipText(\"<html>TEXT\");\n-        p.add(c);\n-\n-        JButton d = new JButton(\"D\");\n-        d.setMnemonic(java.awt.event.KeyEvent.VK_D);\n-        d.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(KeyStroke.getKeyStroke(\"ctrl D\"), \"foo\");\n-        d.setToolTipText(\"<html>TEXT\");\n-        p.add(d);\n-\n-        final JButton passButton = new JButton(\"PASS\");\n-        passButton.setEnabled(true);\n-        passButton.addActionListener((e) -> {\n-            frame.dispose();\n-            testCompleted.set(true);\n-        });\n-        final JButton failButton = new JButton(\"FAIL\");\n-        failButton.setEnabled(true);\n-        failButton.addActionListener((e) -> {\n-            frame.dispose();\n-            testCompleted.set(true);\n-            throw new RuntimeException(\"Test Case Failed\");\n-        });\n-\n-        resPanel.add(passButton);\n-        resPanel.add(failButton);\n-        frame.add(p, BorderLayout.NORTH);\n-        frame.add(resPanel,BorderLayout.SOUTH);\n-        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n-        frame.pack();\n-        frame.setVisible(true);\n-    }\n-\n-    private static void waitForCompleting() throws Exception {\n-\n-        synchronized (testCompleted) {\n-            long startTime = System.currentTimeMillis();\n-            while (!testCompleted.get()) {\n-                testCompleted.wait(TIMEOUT);\n-                if (System.currentTimeMillis() - startTime >= TIMEOUT) {\n-                    frame.dispose();\n-                    throw new RuntimeException(\"Test Case Failed\");\n-                }\n-            }\n-        }\n-    }\n-}\n","filename":"test\/jdk\/javax\/swing\/JToolTip\/5047379\/bug5047379.java","additions":0,"deletions":120,"binary":false,"changes":120,"status":"deleted"}]}