{"files":[{"patch":"@@ -107,2 +107,2 @@\n-  \/\/ Mark the given range of cards to \"which\". All of these cards must be Dirty.\n-  inline void mark_dirty_as(size_t start_card_index, size_t num_cards, CardValue which);\n+  \/\/ Change the given range of dirty cards to \"which\". All of these cards must be Dirty.\n+  inline void change_dirty_cards_to(size_t start_card_index, size_t num_cards, CardValue which);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CardTable.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -80,1 +80,1 @@\n-inline void G1CardTable::mark_dirty_as(size_t start_card_index, size_t num_cards, CardValue which) {\n+inline void G1CardTable::change_dirty_cards_to(size_t start_card_index, size_t num_cards, CardValue which) {\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CardTable.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -3824,1 +3824,1 @@\n-  bool _may_do_optional_evacuation;\n+  bool _has_optional_evacuation_work;\n@@ -3828,1 +3828,1 @@\n-    _g1h->rem_set()->scan_heap_roots(pss, worker_id, G1GCPhaseTimes::ScanHR, G1GCPhaseTimes::ObjCopy, _may_do_optional_evacuation);\n+    _g1h->rem_set()->scan_heap_roots(pss, worker_id, G1GCPhaseTimes::ScanHR, G1GCPhaseTimes::ObjCopy, _has_optional_evacuation_work);\n@@ -3850,1 +3850,1 @@\n-                        bool may_do_optional_evacuation) :\n+                        bool has_optional_evacuation_work) :\n@@ -3853,1 +3853,1 @@\n-    _may_do_optional_evacuation(may_do_optional_evacuation)\n+    _has_optional_evacuation_work(has_optional_evacuation_work)\n@@ -3858,1 +3858,1 @@\n-                                                      bool may_do_optional_evacuation) {\n+                                                      bool has_optional_evacuation_work) {\n@@ -3878,1 +3878,1 @@\n-                                      may_do_optional_evacuation);\n+                                      has_optional_evacuation_work);\n@@ -3889,1 +3889,1 @@\n-  rem_set()->complete_evac_phase(may_do_optional_evacuation);\n+  rem_set()->complete_evac_phase(has_optional_evacuation_work);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -785,2 +785,15 @@\n-  \/\/ The may_do_optional_evacuation flag indicates whether some or more optional evacuation\n-  \/\/ steps will follow.\n+  \/\/ The has_optional_evacuation_work flag for the initial collection set\n+  \/\/ evacuation indicates whether some or more optional evacuation steps may\n+  \/\/ follow.\n+  \/\/ If not set, G1 can avoid clearing the card tables of regions that we scan\n+  \/\/ for roots from the heap: when scanning the card table for dirty cards after\n+  \/\/ all remembered sets have been dumped onto it, for optional evacuation we\n+  \/\/ mark these cards as \"Scanned\" to know that we do not need to re-scan them\n+  \/\/ in the additional optional evacuation passes. This means that in the \"Clear\n+  \/\/ Card Table\" phase we need to clear those marks. However, if there is no\n+  \/\/ optional evacuation, g1 can immediately clean the dirty cards it encounters\n+  \/\/ as nobody else will be looking at them again, saving the clear card table\n+  \/\/ work later.\n+  \/\/ This case is very common (young only collections and most mixed gcs), so\n+  \/\/ depending on the ratio between scanned and evacuated regions (which g1 always\n+  \/\/ needs to clear), this is a big win.\n@@ -788,1 +801,1 @@\n-                                       bool may_do_optional_evacuation);\n+                                       bool has_optional_evacuation_work);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.hpp","additions":16,"deletions":3,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -694,1 +694,1 @@\n-    _ct->mark_dirty_as(first_card, num_cards, _scanned_card_value);\n+    _ct->change_dirty_cards_to(first_card, num_cards, _scanned_card_value);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1RemSet.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}