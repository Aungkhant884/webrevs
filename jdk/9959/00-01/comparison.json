{"files":[{"patch":"@@ -296,1 +296,1 @@\n-G1PLABAllocator::PerDestinationPLABData::PerDestinationPLABData() :\n+G1PLABAllocator::PLABData::PLABData() :\n@@ -305,1 +305,1 @@\n-G1PLABAllocator::PerDestinationPLABData::~PerDestinationPLABData() {\n+G1PLABAllocator::PLABData::~PLABData() {\n@@ -314,1 +314,1 @@\n-void G1PLABAllocator::PerDestinationPLABData::initialize(uint num_alloc_buffers, size_t desired_plab_size, size_t tolerated_refills) {\n+void G1PLABAllocator::PLABData::initialize(uint num_alloc_buffers, size_t desired_plab_size, size_t tolerated_refills) {\n@@ -326,1 +326,1 @@\n-void G1PLABAllocator::PerDestinationPLABData::notify_plab_refill(size_t tolerated_refills, size_t next_plab_size) {\n+void G1PLABAllocator::PLABData::notify_plab_refill(size_t tolerated_refills, size_t next_plab_size) {\n@@ -358,1 +358,1 @@\n-    _data[state].initialize(alloc_buffers_length(state), _g1h->desired_plab_sz(state), initial_tolerated_refills);\n+    _dest_data[state].initialize(alloc_buffers_length(state), _g1h->desired_plab_sz(state), initial_tolerated_refills);\n@@ -373,1 +373,1 @@\n-  PerDestinationPLABData* plab_data = &_data[dest.type()];\n+  PLABData* plab_data = &_dest_data[dest.type()];\n@@ -440,1 +440,1 @@\n-    PerDestinationPLABData* plab_data = &_data[state];\n+    PLABData* plab_data = &_dest_data[state];\n@@ -449,1 +449,1 @@\n-                      _data[G1HeapRegionAttr::Young]._num_plab_fills,\n+                      _dest_data[G1HeapRegionAttr::Young]._num_plab_fills,\n@@ -453,1 +453,1 @@\n-                      _data[G1HeapRegionAttr::Old]._num_plab_fills,\n+                      _dest_data[G1HeapRegionAttr::Old]._num_plab_fills,\n@@ -471,1 +471,1 @@\n-  return _data[which.type()]._cur_desired_plab_size;\n+  return _dest_data[which.type()]._cur_desired_plab_size;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Allocator.cpp","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -161,1 +161,1 @@\n-  struct PerDestinationPLABData {\n+  struct PLABData {\n@@ -173,2 +173,2 @@\n-    PerDestinationPLABData();\n-    ~PerDestinationPLABData();\n+    PLABData();\n+    ~PLABData();\n@@ -185,1 +185,1 @@\n-  } _data[G1HeapRegionAttr::Num];\n+  } _dest_data[G1HeapRegionAttr::Num];\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Allocator.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -92,1 +92,1 @@\n-  assert(_data[dest.type()]._alloc_buffer != nullptr,\n+  assert(_dest_data[dest.type()]._alloc_buffer != nullptr,\n@@ -104,1 +104,1 @@\n-    return _data[dest]._alloc_buffer[node_index];\n+    return _dest_data[dest]._alloc_buffer[node_index];\n@@ -106,1 +106,1 @@\n-    return _data[dest]._alloc_buffer[0];\n+    return _dest_data[dest]._alloc_buffer[0];\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Allocator.inline.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}