{"files":[{"patch":"@@ -748,1 +748,1 @@\n-  ObjectMonitor* _current_pending_monitor;              \/\/ ObjectMonitor this thread is waiting to lock\n+  ObjectMonitor* volatile _current_pending_monitor;     \/\/ ObjectMonitor this thread is waiting to lock\n@@ -750,1 +750,1 @@\n-  ObjectMonitor* _current_waiting_monitor;              \/\/ ObjectMonitor on which this thread called Object.wait()\n+  ObjectMonitor* volatile _current_waiting_monitor;     \/\/ ObjectMonitor on which this thread called Object.wait()\n@@ -756,1 +756,4 @@\n-    return _current_pending_monitor;\n+    \/\/ Use Atomic::load() to prevent data race between concurrent modification and\n+    \/\/ concurrent readers, e.g. ThreadService::get_current_contended_monitor().\n+    \/\/ Especially, reloading pointer from thread after NULL check must be prevented.\n+    return Atomic::load(&_current_pending_monitor);\n@@ -759,1 +762,1 @@\n-    _current_pending_monitor = monitor;\n+    Atomic::store(&_current_pending_monitor, monitor);\n@@ -768,1 +771,2 @@\n-    return _current_waiting_monitor;\n+    \/\/ See the comment in current_pending_monitor() above.\n+    return Atomic::load(&_current_waiting_monitor);\n@@ -771,1 +775,1 @@\n-    _current_waiting_monitor = monitor;\n+    Atomic::store(&_current_waiting_monitor, monitor);\n","filename":"src\/hotspot\/share\/runtime\/thread.hpp","additions":10,"deletions":6,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -742,1 +742,1 @@\n-  nonstatic_field(JavaThread,                  _current_pending_monitor,                      ObjectMonitor*)                        \\\n+  volatile_nonstatic_field(JavaThread,         _current_pending_monitor,                      ObjectMonitor*)                        \\\n@@ -744,1 +744,1 @@\n-  nonstatic_field(JavaThread,                  _current_waiting_monitor,                      ObjectMonitor*)                        \\\n+  volatile_nonstatic_field(JavaThread,         _current_waiting_monitor,                      ObjectMonitor*)                        \\\n","filename":"src\/hotspot\/share\/runtime\/vmStructs.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}