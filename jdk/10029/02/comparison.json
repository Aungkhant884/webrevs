{"files":[{"patch":"@@ -293,1 +293,1 @@\n-     * of the the source <code>Entity<\/code> are recursively imported and\n+     * of the source <code>Entity<\/code> are recursively imported and\n","filename":"src\/java.xml\/share\/classes\/org\/w3c\/dom\/Document.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -650,1 +650,1 @@\n-   The element element can be used either\n+   The element can be used either\n","filename":"test\/jaxp\/javax\/xml\/jaxp\/unittest\/stream\/XMLStreamReaderTest\/XMLSchema.xsd","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n-            System.out.println(\"Warning: No js engine engine found; test vacuously passes.\");\n+            System.out.println(\"Warning: No js engine found; test vacuously passes.\");\n","filename":"test\/jdk\/javax\/script\/GetInterfaceTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1404,1 +1404,1 @@\n-        try ( \/\/ Get the original original RowSet and validate that the changes\n+        try ( \/\/ Get the original RowSet and validate that the changes\n@@ -1447,1 +1447,1 @@\n-        try ( \/\/ Get the original original row and validate that the changes\n+        try ( \/\/ Get the original row and validate that the changes\n","filename":"test\/jdk\/javax\/sql\/testng\/test\/rowset\/cachedrowset\/CommonCachedRowSetTests.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -102,1 +102,1 @@\n-     * to to a SerialDatalink created using a different URL\n+     * to a SerialDatalink created using a different URL\n","filename":"test\/jdk\/javax\/sql\/testng\/test\/rowset\/serial\/SerialDataLinkTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n- * JDK-8061550: XMLEntityScanner can corrupt corrupt content during parsing\n+ * JDK-8061550: XMLEntityScanner can corrupt content during parsing\n","filename":"test\/jdk\/javax\/xml\/jaxp\/testng\/parse\/XMLEntityScannerLoad.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -181,1 +181,1 @@\n-            # it's still lingering, now it it hard\n+            # it's still lingering, now it is hard\n","filename":"test\/jdk\/sun\/jvmstat\/testlibrary\/utils.sh","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -168,1 +168,1 @@\n-                    System.err.println(\"Test FAILURE on \" + name + \" reason: run out of retries to to pick free ports\");\n+                    System.err.println(\"Test FAILURE on \" + name + \" reason: run out of retries to pick free ports\");\n","filename":"test\/jdk\/sun\/management\/jmxremote\/bootstrap\/JMXInterfaceBindingTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -98,1 +98,1 @@\n-    \/\/ -Xrs restricted signals signals the VM will not handle SIGINT, SIGTERM, SIGHUP and others\n+    \/\/ -Xrs restricted signals the VM will not handle SIGINT, SIGTERM, SIGHUP and others\n","filename":"test\/jdk\/sun\/misc\/SunMiscSignalTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n- * *does* get optimized to something a little faster than than arraycopy.\n+ * *does* get optimized to something a little faster than arraycopy.\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/ArrayFiddle.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}