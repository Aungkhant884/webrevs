{"files":[{"patch":"@@ -219,1 +219,1 @@\n-        or the Negotiate authentication scheme using Kerberos are employed over HTTPS with \n+        or the Negotiate authentication scheme using Kerberos are employed over HTTPS with\n@@ -230,0 +230,2 @@\n+\t<P>The channel binding tokens generated are of the type \"tls-server-end-point\" as defined in\n+           RFC 5929.<\/P>\n","filename":"src\/java.base\/share\/classes\/java\/net\/doc-files\/net-properties.html","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -49,8 +49,0 @@\n-    \/\/ TLS channel binding type property\n-    public static final String CHANNEL_BINDING_TYPE =\n-            \"com.sun.jndi.ldap.tls.cbtype\";\n-\n-    \/\/ internal TLS channel binding property\n-    public static final String CHANNEL_BINDING =\n-            \"jdk.internal.sasl.tlschannelbinding\";\n-\n@@ -81,19 +73,0 @@\n-    \/**\n-     * Parse value of \"com.sun.jndi.ldap.tls.cbtype\" property\n-     * @param  cbType\n-     * @return TLS Channel Binding type or null if\n-     *         \"com.sun.jndi.ldap.tls.cbtype\" property has not been set.\n-     * @throws ChannelBindingException\n-     *\/\n-    public static TlsChannelBindingType parseType(String cbType) throws ChannelBindingException {\n-        if (cbType != null) {\n-            if (cbType.equals(TlsChannelBindingType.TLS_SERVER_END_POINT.getName())) {\n-                return TlsChannelBindingType.TLS_SERVER_END_POINT;\n-            } else {\n-                throw new ChannelBindingException(\"Illegal value for \" +\n-                        CHANNEL_BINDING_TYPE + \" property.\");\n-            }\n-        }\n-        return null;\n-    }\n-\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/TlsChannelBinding.java","additions":0,"deletions":27,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -67,0 +67,8 @@\n+    \/\/ TLS channel binding type property\n+    private static final String CHANNEL_BINDING_TYPE =\n+            \"com.sun.jndi.ldap.tls.cbtype\";\n+\n+    \/\/ internal TLS channel binding property\n+    private static final String CHANNEL_BINDING =\n+            \"jdk.internal.sasl.tlschannelbinding\";\n+\n@@ -118,2 +126,2 @@\n-        if (env.get(TlsChannelBinding.CHANNEL_BINDING) != null) {\n-            throw new NamingException(TlsChannelBinding.CHANNEL_BINDING +\n+        if (env.get(CHANNEL_BINDING) != null) {\n+            throw new NamingException(CHANNEL_BINDING +\n@@ -130,2 +138,1 @@\n-                    cbType = TlsChannelBinding.parseType(\n-                                (String)env.get(TlsChannelBinding.CHANNEL_BINDING_TYPE));\n+                    cbType = parseType((String)env.get(CHANNEL_BINDING_TYPE));\n@@ -146,1 +153,1 @@\n-                        envProps.put(TlsChannelBinding.CHANNEL_BINDING, tlsCB.getData());\n+                        envProps.put(CHANNEL_BINDING, tlsCB.getData());\n@@ -246,0 +253,19 @@\n+    \/**\n+     * Parse value of \"com.sun.jndi.ldap.tls.cbtype\" property\n+     * @param  cbType\n+     * @return TLS Channel Binding type or null if\n+     *         \"com.sun.jndi.ldap.tls.cbtype\" property has not been set.\n+     * @throws ChannelBindingException\n+     *\/\n+    private static TlsChannelBindingType parseType(String cbType) throws ChannelBindingException {\n+        if (cbType != null) {\n+            if (cbType.equals(TlsChannelBindingType.TLS_SERVER_END_POINT.getName())) {\n+                return TlsChannelBindingType.TLS_SERVER_END_POINT;\n+            } else {\n+                throw new ChannelBindingException(\"Illegal value for \" +\n+                        CHANNEL_BINDING_TYPE + \" property.\");\n+            }\n+        }\n+        return null;\n+    }\n+\n","filename":"src\/java.naming\/share\/classes\/com\/sun\/jndi\/ldap\/sasl\/LdapSasl.java","additions":31,"deletions":5,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-import java.security.cert.Certificate;\n","filename":"src\/java.security.jgss\/share\/classes\/sun\/net\/www\/protocol\/http\/spnego\/NegotiatorImpl.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,4 @@\n+ * @run main\/othervm LdapCBPropertiesTest true  true  com.sun.jndi.ldap.tls.cbtype tls-server-end-point\n+ * @run main\/othervm LdapCBPropertiesTest false false com.sun.jndi.ldap.tls.cbtype tls-server-end-point\n+ * @run main\/othervm LdapCBPropertiesTest true  true  com.sun.jndi.ldap.tls.cbtype tls-server-end-point com.sun.jndi.ldap.connect.timeout 2000\n+ * @run main\/othervm LdapCBPropertiesTest false false com.sun.jndi.ldap.tls.cbtype tls-server-end-point com.sun.jndi.ldap.connect.timeout 2000\n@@ -30,0 +34,1 @@\n+ * @run main\/othervm LdapCBPropertiesTest false true  jdk.internal.sasl.tlschannelbinding value\n@@ -188,1 +193,2 @@\n-        if (!shouldPass && ne.getRootCause() instanceof ChannelBindingException) {\n+        Throwable rc = ne.getRootCause();\n+        if (!shouldPass && (rc == null || rc instanceof ChannelBindingException)) {\n","filename":"test\/jdk\/com\/sun\/jndi\/ldap\/LdapCBPropertiesTest.java","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"}]}