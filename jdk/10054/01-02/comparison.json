{"files":[{"patch":"@@ -2,2 +2,2 @@\n-  font: 14px sans-serif;\n-  font-size: 14;\n+  font: 16px sans-serif;\n+  font-size: 16;\n@@ -13,1 +13,1 @@\n-  font-size: 85%;\n+  font-size: 75%;\n","filename":"test\/jdk\/javax\/swing\/text\/html\/StyleSheet\/TestExternalCSSFontSize.css","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -12,1 +12,1 @@\n-  <p class=\"bigger\">Bigger text (21)<\/p>\n+  <p class=\"bigger\">Bigger text (24)<\/p>\n@@ -14,1 +14,1 @@\n-  <p>Normal size text (14)<\/p>\n+  <p>Normal size text (16)<\/p>\n","filename":"test\/jdk\/javax\/swing\/text\/html\/StyleSheet\/TestExternalCSSFontSize.html","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -25,1 +25,0 @@\n-import java.io.FileNotFoundException;\n@@ -27,0 +26,2 @@\n+import java.io.UncheckedIOException;\n+import java.net.URL;\n@@ -30,1 +31,0 @@\n-import java.util.concurrent.atomic.AtomicReference;\n@@ -32,1 +32,0 @@\n-import java.awt.Component;\n@@ -44,1 +43,1 @@\n- * @summary  Tests font-size declarations from external style sheet.\n+ * @summary Tests font-size declarations from an external style sheet.\n@@ -49,1 +48,1 @@\n-    private static final int[] expectedFontSizes = { 21, 14, 12 };\n+    private static final int[] expectedFontSizes = { 24, 16, 12 };\n@@ -51,1 +50,1 @@\n-    private JEditorPane editor;\n+    private volatile JEditorPane editor;\n@@ -53,1 +52,1 @@\n-    private volatile Throwable failure;\n+    private volatile CountDownLatch loadLatch;\n@@ -57,4 +56,5 @@\n-    CountDownLatch setUp() throws Exception {\n-        File htmlFile = new File(\"TestExternalCSSFontSize.html\");\n-        if (!htmlFile.exists()) {\n-            throw new FileNotFoundException(htmlFile.getAbsolutePath());\n+    void setUp() {\n+        String fileName = getClass().getName().replace('.', '\/') + \".html\";\n+        URL htmlFile = getClass().getClassLoader().getResource(fileName);\n+        if (htmlFile == null) {\n+            throw new IllegalStateException(\"Resource not found: \" + fileName);\n@@ -63,1 +63,1 @@\n-        CountDownLatch finishLatch = new CountDownLatch(1);\n+        loadLatch = new CountDownLatch(1);\n@@ -67,8 +67,2 @@\n-            System.out.append(\"loaded: \").println(evt.getNewValue());\n-            try {\n-                run();\n-            } catch (Throwable e) {\n-                failure = e;\n-            } finally {\n-                finishLatch.countDown();\n-            }\n+            System.out.append(\"Loaded: \").println(evt.getNewValue());\n+            loadLatch.countDown();\n@@ -76,2 +70,5 @@\n-        editor.setPage(htmlFile.toURI().toURL());\n-        return finishLatch;\n+        try {\n+            editor.setPage(htmlFile);\n+        } catch (IOException e) {\n+            throw new UncheckedIOException(e);\n+        }\n@@ -80,1 +77,1 @@\n-    void run() {\n+    void verify() {\n@@ -106,1 +103,1 @@\n-            throw new AssertionError(\"unexpected text run #\"\n+            throw new AssertionError(\"Unexpected text run #\"\n@@ -112,1 +109,1 @@\n-            throw new AssertionError(\"font size expected [\"\n+            throw new AssertionError(\"Font size expected [\"\n@@ -127,18 +124,6 @@\n-    void start() throws Throwable {\n-        AtomicReference<CountDownLatch> finishLatch = new AtomicReference<>();\n-        SwingUtilities.invokeAndWait(() -> {\n-            try {\n-                finishLatch.set(setUp());\n-            } catch (Throwable e) {\n-                failure = e;\n-            }\n-        });\n-\n-        if (finishLatch.get() != null\n-                && !finishLatch.get().await(5, TimeUnit.SECONDS)\n-                && failure == null) {\n-            throw new IllegalStateException(\"page loading timed out\");\n-        }\n-\n-        if (failure != null) {\n-            throw failure;\n+    void run() throws Throwable {\n+        SwingUtilities.invokeAndWait(this::setUp);\n+        if (loadLatch.await(5, TimeUnit.SECONDS)) {\n+            SwingUtilities.invokeAndWait(this::verify);\n+        } else {\n+            throw new IllegalStateException(\"Page loading timed out\");\n@@ -152,1 +137,1 @@\n-            test.start();\n+            test.run();\n@@ -155,4 +140,7 @@\n-            if (!success && test.editor != null) {\n-                SwingUtilities.invokeAndWait(() -> captureImage(test.editor, \"-failure\"));\n-            } else if (hasOpt(args, \"-capture\")) {\n-                SwingUtilities.invokeAndWait(() -> captureImage(test.editor, \"-success\"));\n+            if (!success || hasOpt(args, \"-capture\")) {\n+                if (test.editor == null) {\n+                    System.err.println(\"Can't save image (test.editor is null)\");\n+                } else {\n+                    String suffix = success ? \"-success\" : \"-failure\";\n+                    SwingUtilities.invokeAndWait(() -> test.captureImage(suffix));\n+                }\n@@ -167,1 +155,1 @@\n-    static void captureImage(Component comp, String suffix) {\n+    private void captureImage(String suffix) {\n@@ -169,2 +157,3 @@\n-            BufferedImage capture = new BufferedImage(comp.getWidth(),\n-                                comp.getHeight(), BufferedImage.TYPE_INT_ARGB);\n+            BufferedImage capture =\n+                    new BufferedImage(editor.getWidth(), editor.getHeight(),\n+                                      BufferedImage.TYPE_INT_ARGB);\n@@ -172,1 +161,1 @@\n-            comp.paint(g);\n+            editor.paint(g);\n@@ -176,2 +165,1 @@\n-                    new File(TestExternalCSSFontSize.class\n-                                .getSimpleName() + suffix + \".png\"));\n+                    new File(getClass().getSimpleName() + suffix + \".png\"));\n","filename":"test\/jdk\/javax\/swing\/text\/html\/StyleSheet\/TestExternalCSSFontSize.java","additions":42,"deletions":54,"binary":false,"changes":96,"status":"modified"}]}