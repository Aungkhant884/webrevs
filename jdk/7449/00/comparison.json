{"files":[{"patch":"@@ -36,0 +36,1 @@\n+import java.awt.geom.Rectangle2D;\n@@ -353,4 +354,4 @@\n-                        path.append(new Rectangle(borderX, borderY, borderW, labelY - borderY), false);\n-                        path.append(new Rectangle(borderX, labelY, labelX - borderX - TEXT_SPACING, labelH), false);\n-                        path.append(new Rectangle(labelX + labelW + TEXT_SPACING, labelY, borderX - labelX + borderW - labelW - TEXT_SPACING, labelH), false);\n-                        path.append(new Rectangle(borderX, labelY + labelH, borderW, borderY - labelY + borderH - labelH), false);\n+                        path.append(new Rectangle2D.Float((float) borderX, borderY, borderW, labelY - borderY), false);\n+                        path.append(new Rectangle2D.Float((float) (borderX - 0.5), labelY, labelX - borderX - TEXT_SPACING, labelH), false);\n+                        path.append(new Rectangle2D.Float((float) (labelX + labelW + TEXT_SPACING - 0.5), labelY, borderX - labelX + borderW - labelW - TEXT_SPACING, labelH), false);\n+                        path.append(new Rectangle2D.Float((float) (borderX - 0.5), labelY + labelH, borderW, borderY - labelY + borderH - labelH), false);\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/border\/TitledBorder.java","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -0,0 +1,97 @@\n+import javax.imageio.ImageIO;\n+import javax.swing.BorderFactory;\n+import javax.swing.JCheckBox;\n+import javax.swing.JFrame;\n+import javax.swing.JPanel;\n+import javax.swing.SwingUtilities;\n+import javax.swing.UIManager;\n+import javax.swing.UIManager.LookAndFeelInfo;\n+import javax.swing.UnsupportedLookAndFeelException;\n+import java.awt.BorderLayout;\n+import java.awt.Graphics2D;\n+import java.awt.Robot;\n+import java.awt.image.BufferedImage;\n+import java.io.File;\n+import java.io.IOException;\n+\n+\/*\n+ * @test\n+ * @key headful\n+ * @bug 8279614\n+ * @summary The left line of the TitledBorder is not painted on 150 scale factor\n+ * @requires (os.family == \"windows\")\n+ * @run main TitledBorderTest\n+ *\/\n+public class TitledBorderTest {\n+\n+  public static JFrame frame;\n+  public static JPanel parentPanel;\n+  public static JPanel childPanel;\n+\n+  public static void main(String[] args) throws Exception {\n+    LookAndFeelInfo laf = UIManager.getInstalledLookAndFeels()[3];\n+    System.out.println(laf);\n+    SwingUtilities.invokeAndWait(() -> setLookAndFeel(laf));\n+    SwingUtilities.invokeAndWait(() -> createAndShowGUI());\n+\n+    Robot robot = new Robot();\n+\n+    BufferedImage buff = new BufferedImage(frame.getWidth()*2, frame.getHeight()*2,\n+            BufferedImage.TYPE_INT_ARGB);\n+    Graphics2D graph = buff.createGraphics();\n+    graph.scale(1.5, 1.5);\n+    frame.paint(graph);\n+    graph.dispose();\n+\n+    robot.waitForIdle();\n+    if (buff.getRGB(20,80) != -6250336) {\n+      System.out.println(\"Color \" + buff.getRGB(21, 80));\n+      saveImage(buff, \"test.png\");\n+      throw new RuntimeException(\"Border was clipped or overdrawn.\");\n+    }\n+\n+    frame.dispose();\n+  }\n+\n+  private static void createAndShowGUI() {\n+    frame = new JFrame(\"Swing Test\");\n+    frame.setSize(new java.awt.Dimension(300, 200));\n+    frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n+\n+    parentPanel = new JPanel(new BorderLayout());\n+    parentPanel.setBorder(BorderFactory.createEmptyBorder(5, 5, 5, 5));\n+\n+    childPanel = new JPanel(new BorderLayout());\n+    childPanel.setBorder(BorderFactory.createTitledBorder(\"Title\"));\n+    childPanel.add(new JCheckBox(), BorderLayout.CENTER);\n+\n+    parentPanel.add(childPanel, BorderLayout.CENTER);\n+\n+    frame.getContentPane().add(parentPanel, BorderLayout.CENTER);\n+\n+    frame.pack();\n+    frame.setLocationRelativeTo(null);\n+    frame.setVisible(true);\n+  }\n+\n+  private static void saveImage(BufferedImage image, String filename) {\n+    try {\n+      ImageIO.write(image, \"png\", new File(filename));\n+    } catch (IOException e) {\n+      \/\/ Donâ€™t propagate the exception\n+      e.printStackTrace();\n+    }\n+  }\n+\n+  private static void setLookAndFeel(UIManager.LookAndFeelInfo laf) {\n+    try {\n+      UIManager.setLookAndFeel(laf.getClassName());\n+      System.out.println(laf.getName());\n+    } catch (UnsupportedLookAndFeelException ignored){\n+      System.out.println(\"Unsupported LookAndFeel: \" + laf.getClassName());\n+    } catch (ClassNotFoundException | InstantiationException |\n+            IllegalAccessException e) {\n+      throw new RuntimeException(e);\n+    }\n+  }\n+}\n","filename":"test\/jdk\/java\/awt\/TitledBorder\/TitledBorderTest.java","additions":97,"deletions":0,"binary":false,"changes":97,"status":"added"}]}