{"files":[{"patch":"@@ -162,0 +162,2 @@\n+\/\/ log_fmt can be different than scan_fmt. For example\n+\/\/ cpu_period() for cgv2 uses log_fmt='%d' and scan_fmt='%*s %d'\n@@ -163,1 +165,1 @@\n-                           logstring, scan_fmt, variable)                 \\\n+                           logstring, log_fmt, scan_fmt, variable)        \\\n@@ -173,1 +175,1 @@\n-    log_trace(os, container)(logstring, (return_type) OSCONTAINER_ERROR); \\\n+    log_trace(os, container)(logstring \"%d\", OSCONTAINER_ERROR);          \\\n@@ -177,1 +179,1 @@\n-  log_trace(os, container)(logstring, variable);                          \\\n+  log_trace(os, container)(logstring log_fmt, variable);                  \\\n","filename":"src\/hotspot\/os\/linux\/cgroupSubsystem_linux.hpp","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -79,1 +79,1 @@\n-                    \"Use Hierarchy is: \" JLONG_FORMAT, JLONG_FORMAT, use_hierarchy);\n+                    \"Use Hierarchy is: \", JLONG_FORMAT, JLONG_FORMAT, use_hierarchy);\n@@ -92,4 +92,4 @@\n-  GET_CONTAINER_INFO(jlong, _memory->controller(), \"\/memory.limit_in_bytes\",\n-                     \"Memory Limit is: \" JLONG_FORMAT, JLONG_FORMAT, memlimit);\n-  assert(memlimit > 0, \"invariant\");\n-  if ((julong)memlimit >= os::Linux::physical_memory()) {\n+  GET_CONTAINER_INFO(julong, _memory->controller(), \"\/memory.limit_in_bytes\",\n+                     \"Memory Limit is: \", JULONG_FORMAT, JULONG_FORMAT, memlimit);\n+\n+  if (memlimit >= os::Linux::physical_memory()) {\n@@ -99,4 +99,3 @@\n-      GET_CONTAINER_INFO_LINE(jlong, _memory->controller(), \"\/memory.stat\", \"hierarchical_memory_limit\",\n-                             \"Hierarchical Memory Limit is: \" JLONG_FORMAT, JLONG_FORMAT, hier_memlimit)\n-      assert(hier_memlimit > 0, \"invariant\");\n-      if ((julong)hier_memlimit >= os::Linux::physical_memory()) {\n+      GET_CONTAINER_INFO_LINE(julong, _memory->controller(), \"\/memory.stat\", \"hierarchical_memory_limit\",\n+                             \"Hierarchical Memory Limit is: \" JULONG_FORMAT, JULONG_FORMAT, hier_memlimit)\n+      if (hier_memlimit >= os::Linux::physical_memory()) {\n@@ -105,1 +104,1 @@\n-        return hier_memlimit;\n+        return (jlong)hier_memlimit;\n@@ -111,1 +110,1 @@\n-    return memlimit;\n+    return (jlong)memlimit;\n@@ -116,3 +115,0 @@\n-  GET_CONTAINER_INFO(jlong, _memory->controller(), \"\/memory.memsw.limit_in_bytes\",\n-                     \"Memory and Swap Limit is: \" JLONG_FORMAT, JLONG_FORMAT, memswlimit);\n-  assert(memswlimit > 0, \"invariant\");\n@@ -120,0 +116,2 @@\n+  GET_CONTAINER_INFO(julong, _memory->controller(), \"\/memory.memsw.limit_in_bytes\",\n+                     \"Memory and Swap Limit is: \", JULONG_FORMAT, JULONG_FORMAT, memswlimit);\n@@ -121,1 +119,1 @@\n-  if ((julong)memswlimit >= host_total_memsw) {\n+  if (memswlimit >= host_total_memsw) {\n@@ -126,4 +124,3 @@\n-      GET_CONTAINER_INFO_LINE(jlong, _memory->controller(), \"\/memory.stat\", matchline,\n-                             \"Hierarchical Memory and Swap Limit is : \" JLONG_FORMAT, JLONG_FORMAT, hier_memswlimit)\n-      assert(hier_memswlimit > 0, \"invariant\");\n-      if ((julong)hier_memswlimit >= host_total_memsw) {\n+      GET_CONTAINER_INFO_LINE(julong, _memory->controller(), \"\/memory.stat\", matchline,\n+                             \"Hierarchical Memory and Swap Limit is : \" JULONG_FORMAT, JULONG_FORMAT, hier_memswlimit)\n+      if (hier_memswlimit >= host_total_memsw) {\n@@ -135,4 +132,4 @@\n-            GET_CONTAINER_INFO_LINE(jlong, _memory->controller(), \"\/memory.stat\", matchmemline,\n-                             \"Hierarchical Memory Limit is : \" JLONG_FORMAT, JLONG_FORMAT, hier_memlimit)\n-            log_trace(os, container)(\"Memory and Swap Limit has been reset to \" JLONG_FORMAT \" because swappiness is 0\", hier_memlimit);\n-            return hier_memlimit;\n+            GET_CONTAINER_INFO_LINE(julong, _memory->controller(), \"\/memory.stat\", matchmemline,\n+                             \"Hierarchical Memory Limit is : \" JULONG_FORMAT, JULONG_FORMAT, hier_memlimit)\n+            log_trace(os, container)(\"Memory and Swap Limit has been reset to \" JULONG_FORMAT \" because swappiness is 0\", hier_memlimit);\n+            return (jlong)hier_memlimit;\n@@ -140,1 +137,1 @@\n-        return hier_memswlimit;\n+        return (jlong)hier_memswlimit;\n@@ -148,1 +145,1 @@\n-      log_trace(os, container)(\"Memory and Swap Limit has been reset to \" JLONG_FORMAT \" because swappiness is 0\", memlimit);\n+      log_trace(os, container)(\"Memory and Swap Limit has been reset to \" JULONG_FORMAT \" because swappiness is 0\", memlimit);\n@@ -151,1 +148,1 @@\n-    return memswlimit;\n+    return (jlong)memswlimit;\n@@ -156,2 +153,2 @@\n-  GET_CONTAINER_INFO(jlong, _memory->controller(), \"\/memory.swappiness\",\n-                     \"Swappiness is: \" JLONG_FORMAT, JLONG_FORMAT, swappiness);\n+  GET_CONTAINER_INFO(julong, _memory->controller(), \"\/memory.swappiness\",\n+                     \"Swappiness is: \", JULONG_FORMAT, JULONG_FORMAT, swappiness);\n@@ -162,4 +159,3 @@\n-  GET_CONTAINER_INFO(jlong, _memory->controller(), \"\/memory.soft_limit_in_bytes\",\n-                     \"Memory Soft Limit is: \" JLONG_FORMAT, JLONG_FORMAT, memsoftlimit);\n-  assert(memsoftlimit > 0, \"invariant\");\n-  if ((julong)memsoftlimit >= os::Linux::physical_memory()) {\n+  GET_CONTAINER_INFO(julong, _memory->controller(), \"\/memory.soft_limit_in_bytes\",\n+                     \"Memory Soft Limit is: \", JULONG_FORMAT, JULONG_FORMAT, memsoftlimit);\n+  if (memsoftlimit >= os::Linux::physical_memory()) {\n@@ -169,1 +165,1 @@\n-    return memsoftlimit;\n+    return (jlong)memsoftlimit;\n@@ -184,1 +180,1 @@\n-                     \"Memory Usage is: \" JLONG_FORMAT, JLONG_FORMAT, memusage);\n+                     \"Memory Usage is: \", JLONG_FORMAT, JLONG_FORMAT, memusage);\n@@ -198,1 +194,1 @@\n-                     \"Maximum Memory Usage is: \" JLONG_FORMAT, JLONG_FORMAT, memmaxusage);\n+                     \"Maximum Memory Usage is: \", JLONG_FORMAT, JLONG_FORMAT, memmaxusage);\n@@ -205,1 +201,1 @@\n-                     \"Kernel Memory Usage is: \" JLONG_FORMAT, JLONG_FORMAT, kmem_usage);\n+                     \"Kernel Memory Usage is: \", JLONG_FORMAT, JLONG_FORMAT, kmem_usage);\n@@ -210,4 +206,3 @@\n-  GET_CONTAINER_INFO(jlong, _memory->controller(), \"\/memory.kmem.limit_in_bytes\",\n-                     \"Kernel Memory Limit is: \" JLONG_FORMAT, JLONG_FORMAT, kmem_limit);\n-  assert(kmem_limit > 0, \"invariant\");\n-  if ((julong)kmem_limit >= os::Linux::physical_memory()) {\n+  GET_CONTAINER_INFO(julong, _memory->controller(), \"\/memory.kmem.limit_in_bytes\",\n+                     \"Kernel Memory Limit is: \", JULONG_FORMAT, JULONG_FORMAT, kmem_limit);\n+  if (kmem_limit >= os::Linux::physical_memory()) {\n@@ -216,1 +211,1 @@\n-  return kmem_limit;\n+  return (jlong)kmem_limit;\n@@ -221,1 +216,1 @@\n-                     \"Maximum Kernel Memory Usage is: \" JLONG_FORMAT, JLONG_FORMAT, kmem_max_usage);\n+                     \"Maximum Kernel Memory Usage is: \", JLONG_FORMAT, JLONG_FORMAT, kmem_max_usage);\n@@ -259,1 +254,1 @@\n-                     \"CPU Quota is: %d\", \"%d\", quota);\n+                     \"CPU Quota is: \", \"%d\", \"%d\", quota);\n@@ -265,1 +260,1 @@\n-                     \"CPU Period is: %d\", \"%d\", period);\n+                     \"CPU Period is: \", \"%d\", \"%d\", period);\n@@ -281,1 +276,1 @@\n-                     \"CPU Shares is: %d\", \"%d\", shares);\n+                     \"CPU Shares is: \", \"%d\", \"%d\", shares);\n@@ -321,1 +316,1 @@\n-                     \"Current number of tasks is: \" JLONG_FORMAT, JLONG_FORMAT, pids_current);\n+                     \"Current number of tasks is: \", JLONG_FORMAT, JLONG_FORMAT, pids_current);\n","filename":"src\/hotspot\/os\/linux\/cgroupV1Subsystem_linux.cpp","additions":41,"deletions":46,"binary":false,"changes":87,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-                     \"Raw value for CPU Shares is: %d\", \"%d\", shares);\n+                     \"Raw value for CPU Shares is: \", \"%d\", \"%d\", shares);\n@@ -112,1 +112,1 @@\n-                     \"CPU Period is: %d\", \"%*s %d\", period);\n+                     \"CPU Period is: \", \"%d\", \"%*s %d\", period);\n@@ -127,1 +127,1 @@\n-                     \"Memory Usage is: \" JLONG_FORMAT, JLONG_FORMAT, memusage);\n+                     \"Memory Usage is: \", JLONG_FORMAT, JLONG_FORMAT, memusage);\n@@ -161,3 +161,1 @@\n-  if (log_is_enabled(Trace, os, container)) {\n-    log_trace(os, container)(\"Memory and Swap Limit is: \" JLONG_FORMAT, swap_limit);\n-  }\n+  log_trace(os, container)(\"Memory and Swap Limit is: \" JLONG_FORMAT, swap_limit);\n@@ -257,1 +255,1 @@\n-                     \"Current number of tasks is: \" JLONG_FORMAT, JLONG_FORMAT, pids_current);\n+                     \"Current number of tasks is: \", JLONG_FORMAT, JLONG_FORMAT, pids_current);\n","filename":"src\/hotspot\/os\/linux\/cgroupV2Subsystem_linux.cpp","additions":5,"deletions":7,"binary":false,"changes":12,"status":"modified"}]}