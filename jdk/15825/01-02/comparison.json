{"files":[{"patch":"@@ -489,0 +489,19 @@\n+\/\/ We are going to check if any of the SafePointScalarMerge entries\n+\/\/ in the SafePoint reference the Phi that we are checking.\n+bool ConnectionGraph::has_been_reduced(PhiNode* n, SafePointNode* sfpt) const {\n+  JVMState *jvms = sfpt->jvms();\n+\n+  for (uint i = jvms->debug_start(); i < jvms->debug_end(); i++) {\n+    Node* sfpt_in = sfpt->in(i);\n+    if (sfpt_in->is_SafePointScalarMerge()) {\n+      SafePointScalarMergeNode* smerge = sfpt_in->as_SafePointScalarMerge();\n+      Node* nsr_ptr = sfpt->in(smerge->merge_pointer_idx(jvms));\n+      if (nsr_ptr == n) {\n+        return true;\n+      }\n+    }\n+  }\n+\n+  return false;\n+}\n+\n@@ -504,0 +523,3 @@\n+      } else if (has_been_reduced(n->is_Phi() ? n->as_Phi() : n->as_CastPP()->in(1)->as_Phi(), use->as_SafePoint())) {\n+        NOT_PRODUCT(if (TraceReduceAllocationMerges) tty->print_cr(\"Can NOT reduce Phi %d on invocation %d. It has already been reduced.\", n->_idx, _invocation);)\n+        return false;\n","filename":"src\/hotspot\/share\/opto\/escape.cpp","additions":22,"deletions":0,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -601,0 +601,1 @@\n+  bool has_been_reduced(PhiNode* n, SafePointNode* sfpt) const;\n","filename":"src\/hotspot\/share\/opto\/escape.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}