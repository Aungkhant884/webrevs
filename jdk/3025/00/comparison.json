{"files":[{"patch":"@@ -781,0 +781,1 @@\n+       !strcmp(_matrule->_rChild->_opType,\"StrInflatedCopy\") ||\n","filename":"src\/hotspot\/share\/adlc\/formssel.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -0,0 +1,64 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test\n+ * @bug 8262739\n+ * @summary Test correct insertion of anti-dependencies after String inflation.\n+ * @run main\/othervm -Xbatch\n+ *                   compiler.controldependency.TestAntiDependencyAfterStringInflation\n+ *\/\n+\n+package compiler.controldependency;\n+\n+public class TestAntiDependencyAfterStringInflation {\n+\n+    static String reverseString(String str) {\n+        int size = str.length();\n+        char[] buffer = new char[size];\n+        reverse(str, buffer, size);\n+        return new String(buffer, 0, size);\n+    }\n+\n+    static void reverse(String str, char[] buffer, int size) {\n+        \/\/ Inflate String.value byte[] to char[]\n+        str.getChars(0, size, buffer, 0);\n+        \/\/ Reverse String by copying buffer elements. This will fail\n+        \/\/ if C2 does not insert anti-dependencies between loads\/stores.\n+        int half = size \/ 2;\n+        for (int l = 0, r = size - 1; l < half; l++, r--) {\n+            char tmp = buffer[l];\n+            buffer[l] = buffer[r];\n+            buffer[r] = tmp;\n+        }\n+    }\n+\n+    public static void main(String[] args) throws Exception {\n+        for (int i = 0; i < 50_000; i++) {\n+            String res = reverseString(\"0123456789\");\n+            if (!res.equals(\"9876543210\")) {\n+                throw new RuntimeException(\"Unexpected result: \" + res);\n+            }\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/controldependency\/TestAntiDependencyAfterStringInflation.java","additions":64,"deletions":0,"binary":false,"changes":64,"status":"added"}]}