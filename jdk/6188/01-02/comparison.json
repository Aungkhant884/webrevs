{"files":[{"patch":"@@ -3157,0 +3157,3 @@\n+        \/\/ only instantiated and used if there's ever a value outside the allowed range\n+        private FractionPrinterParser fallback;\n+\n@@ -3259,1 +3262,9 @@\n-            int val = value.intValue(); \/\/ NANO_OF_SECOND must fit in an int and can't be negative\n+            \/\/ While values of ChronoField.NANO_OF_SECOND should be in the range\n+            \/\/ [0-999999999], we can't assume that holds for any custom Temporal\n+            if (!field.range().isValidIntValue(value)) {\n+                if (fallback == null) {\n+                    fallback = new FractionPrinterParser(field, minWidth, maxWidth, decimalPoint, subsequentWidth);\n+                }\n+                return fallback.format(context, buf);\n+            }\n+            int val = value.intValue();\n","filename":"src\/java.base\/share\/classes\/java\/time\/format\/DateTimeFormatterBuilder.java","additions":12,"deletions":1,"binary":false,"changes":13,"status":"modified"}]}