{"files":[{"patch":"@@ -33,3 +33,3 @@\n-\/\/ not (i.e. RISC-V, PowerPC). Compilers are free to assume that all memory accesses of a type T are\n-\/\/ done at a suitably aligned address for type T, that is an address aligned to alignof(T). This is\n-\/\/ not always the case, as there are use cases where we may want to access type T at a non-suitably\n+\/\/ not (i.e. RISC-V). Compilers are free to assume that all memory accesses of a type T are done at\n+\/\/ a suitably aligned address for type T, that is an address aligned to alignof(T). This is not\n+\/\/ always the case, as there are use cases where we may want to access type T at a non-suitably\n","filename":"src\/hotspot\/share\/utilities\/unalignedAccess.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}