{"files":[{"patch":"@@ -240,1 +240,1 @@\n-\/\/ To our knowledge XL C\/C++ does not have a compiler intrinsic for byteswapping.\n+#include <builtins.h>\n@@ -242,2 +242,60 @@\n-template <typename T, size_t N>\n-struct ByteswapImpl final : public ByteswapFallbackImpl<T, N> {};\n+\/\/ We support 8-bit integer types to be compatible with C++23's std::byteswap.\n+template <typename T>\n+struct ByteswapImpl<T, 1> final {\n+  STATIC_ASSERT(CanByteswapImpl<T>::value);\n+  STATIC_ASSERT(sizeof(T) == 1);\n+\n+  ALWAYSINLINE T operator()(T x) const {\n+    return x;\n+  }\n+};\n+\n+template <typename T>\n+struct ByteswapImpl<T, 2> final {\n+  STATIC_ASSERT(CanByteswapImpl<T>::value);\n+  STATIC_ASSERT(sizeof(unsigned short) == 2);\n+  STATIC_ASSERT(sizeof(T) == sizeof(unsigned short));\n+\n+  ALWAYSINLINE T operator()(T x) const {\n+    unsigned short y;\n+    __store2r(static_cast<unsigned short>(x), &y);\n+    return y;\n+  }\n+};\n+\n+template <typename T>\n+struct ByteswapImpl<T, 4> final {\n+  STATIC_ASSERT(CanByteswapImpl<T>::value);\n+  STATIC_ASSERT(sizeof(unsigned int) == 4);\n+  STATIC_ASSERT(sizeof(T) == sizeof(unsigned int));\n+\n+  ALWAYSINLINE T operator()(T x) const {\n+    unsigned int y;\n+    __store4r(static_cast<unsigned int>(x), &y);\n+    return y;\n+  }\n+};\n+\n+#if defined(_ARCH_PWR7) && defined(_ARCH_PPC64)\n+\n+\/\/ __store8r is only available on POWER7 and newer in 64-bit mode.\n+\n+template <typename T>\n+struct ByteswapImpl<T, 8> final {\n+  STATIC_ASSERT(CanByteswapImpl<T>::value);\n+  STATIC_ASSERT(sizeof(unsigned long long) == 8);\n+  STATIC_ASSERT(sizeof(T) == sizeof(unsigned long long));\n+\n+  ALWAYSINLINE T operator()(T x) const {\n+    unsigned long long y;\n+    __store8r(static_cast<unsigned long long>(x), &y);\n+    return y;\n+  }\n+};\n+\n+#else\n+\n+template <typename T>\n+struct ByteswapImpl<T, 8> final : public ByteswapFallbackImpl<T, 8> {};\n+\n+#endif\n","filename":"src\/hotspot\/share\/utilities\/byteswap.hpp","additions":61,"deletions":3,"binary":false,"changes":64,"status":"modified"}]}