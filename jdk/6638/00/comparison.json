{"files":[{"patch":"@@ -41,1 +41,1 @@\n-            return new Integer(id).compareTo(new Integer(f.id));\n+            return Integer.valueOf(id).compareTo(Integer.valueOf(f.id));\n","filename":"test\/lib-test\/jdk\/test\/lib\/AssertsTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -42,0 +42,1 @@\n+        @SuppressWarnings(\"deprecation\")\n","filename":"test\/lib-test\/jdk\/test\/lib\/TestPlatformIsTieredSupported.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -277,0 +277,1 @@\n+            public int hashCode() { return value.hashCode(); }\n@@ -366,1 +367,1 @@\n-            ArrayDiff diff;\n+            ArrayDiff<?> diff;\n","filename":"test\/lib-test\/jdk\/test\/lib\/format\/ArrayDiffTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -46,0 +46,1 @@\n+        @SuppressWarnings(\"deprecation\")\n","filename":"test\/lib-test\/jdk\/test\/whitebox\/OldWhiteBox.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -75,1 +75,1 @@\n-            new VmFlagTest(existentFlag, set, get, true).test(tests, results);\n+            new VmFlagTest<T>(existentFlag, set, get, true).test(tests, results);\n@@ -77,1 +77,1 @@\n-        new VmFlagTest(NONEXISTENT_FLAG, set, get, false).test(tests, results);\n+        new VmFlagTest<T>(NONEXISTENT_FLAG, set, get, false).test(tests, results);\n","filename":"test\/lib-test\/jdk\/test\/whitebox\/vm_flags\/VmFlagTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -50,1 +50,1 @@\n-    public static void redefineClass(Class clazz, String javacode) throws Exception {\n+    public static void redefineClass(Class<?> clazz, String javacode) throws Exception {\n@@ -61,1 +61,1 @@\n-    public static void redefineClass(Class clazz, byte[] bytecode) throws Exception {\n+    public static void redefineClass(Class<?> clazz, byte[] bytecode) throws Exception {\n","filename":"test\/lib\/RedefineClassHelper.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -454,0 +454,1 @@\n+    @SuppressWarnings(\"removal\")\n","filename":"test\/lib\/jdk\/test\/lib\/NetworkConfiguration.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -39,0 +39,1 @@\n+import javax.tools.JavaFileManager;\n@@ -109,1 +110,1 @@\n-    private static class FileManagerWrapper extends ForwardingJavaFileManager {\n+    private static class FileManagerWrapper extends ForwardingJavaFileManager<JavaFileManager> {\n","filename":"test\/lib\/jdk\/test\/lib\/compiler\/InMemoryJavaCompiler.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -144,1 +144,1 @@\n-    public static ArrayCodec of(Object array) {\n+    public static ArrayCodec<?> of(Object array) {\n","filename":"test\/lib\/jdk\/test\/lib\/format\/ArrayCodec.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -96,1 +96,1 @@\n-    public static ArrayDiff of(Object first, Object second) {\n+    public static ArrayDiff<?> of(Object first, Object second) {\n@@ -112,1 +112,2 @@\n-    public static ArrayDiff of(Object first, Object second, int width, int contextBefore) {\n+    @SuppressWarnings(\"rawtypes\")\n+    public static ArrayDiff<?> of(Object first, Object second, int width, int contextBefore) {\n@@ -207,1 +208,0 @@\n-\n","filename":"test\/lib\/jdk\/test\/lib\/format\/ArrayDiff.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -629,0 +629,1 @@\n+    @SuppressWarnings(\"deprecation\")\n","filename":"test\/lib\/jdk\/test\/lib\/hexdump\/ASN1Formatter.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -168,0 +168,1 @@\n+    @SuppressWarnings(\"deprecation\")\n","filename":"test\/lib\/jdk\/test\/lib\/hexdump\/StreamDump.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -116,2 +116,2 @@\n-    private Map<String,String> prop = new HashMap();\n-    private Map<String,String> secprop = new HashMap();\n+    private Map<String,String> prop = new HashMap<>();\n+    private Map<String,String> secprop = new HashMap<>();\n","filename":"test\/lib\/jdk\/test\/lib\/process\/Proc.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -435,0 +435,1 @@\n+    @SuppressWarnings(\"removal\")\n@@ -607,0 +608,1 @@\n+    @SuppressWarnings(\"removal\")\n","filename":"test\/lib\/jdk\/test\/lib\/process\/ProcessTools.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"}]}