{"files":[{"patch":"@@ -1549,1 +1549,1 @@\n-  Node *main_exit = insert_post_loop(loop, old_new, main_head, main_end, post_incr, limit, post_head);\n+  Node* main_exit = insert_post_loop(loop, old_new, main_head, main_end, post_incr, limit, post_head);\n@@ -1648,1 +1648,1 @@\n-  insert_post_loop_skeleton_predicates(outer_main_head, post_head, post_incr, stride);\n+  copy_skeleton_predicates_to_post_loop(outer_main_head, post_head, post_incr, stride);\n@@ -1771,1 +1771,1 @@\n-  insert_post_loop_skeleton_predicates(main_head->skip_strip_mined(), post_head, incr, main_head->stride());\n+  copy_skeleton_predicates_to_post_loop(main_head->skip_strip_mined(), post_head, incr, main_head->stride());\n@@ -1818,1 +1818,1 @@\n-  insert_post_loop_skeleton_predicates(main_head->skip_strip_mined(), post_head, incr, main_head->stride());\n+  copy_skeleton_predicates_to_post_loop(main_head->skip_strip_mined(), post_head, incr, main_head->stride());\n@@ -1921,3 +1921,2 @@\n-  Node* castii = cast_incr_before_loop(zer_opaq->in(1), zer_taken, post_head);\n-  assert(castii != NULL, \"no castII inserted\");\n-  incr = castii;\n+  incr = cast_incr_before_loop(zer_opaq->in(1), zer_taken, post_head);\n+  assert(incr != NULL, \"no castII inserted\");\n@@ -1978,1 +1977,1 @@\n-void PhaseIdealLoop::insert_post_loop_skeleton_predicates(LoopNode* main_loop_head, CountedLoopNode* post_loop_head, Node* init, Node* stride) {\n+void PhaseIdealLoop::copy_skeleton_predicates_to_post_loop(LoopNode* main_loop_head, CountedLoopNode* post_loop_head, Node* init, Node* stride) {\n@@ -1994,4 +1993,4 @@\n-        prev_proj = clone_skeleton_predicate_for_main_or_post_loop(iff, init, stride, ctrl, proj, post_loop_entry,\n-                                                                   post_loop, prev_proj);\n-        assert(!skeleton_predicate_has_opaque(prev_proj->in(0)->as_If()), \"unexpected\");\n-      }\n+      prev_proj = clone_skeleton_predicate_for_main_or_post_loop(iff, init, stride, ctrl, proj, post_loop_entry,\n+                                                                 post_loop, prev_proj);\n+      assert(!skeleton_predicate_has_opaque(prev_proj->in(0)->as_If()), \"unexpected\");\n+    }\n","filename":"src\/hotspot\/share\/opto\/loopTransform.cpp","additions":11,"deletions":12,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -926,1 +926,1 @@\n-  void insert_post_loop_skeleton_predicates(LoopNode* main_loop_head, CountedLoopNode* post_loop_head, Node* init, Node* stride);\n+  void copy_skeleton_predicates_to_post_loop(LoopNode* main_loop_head, CountedLoopNode* post_loop_head, Node* init, Node* stride);\n","filename":"src\/hotspot\/share\/opto\/loopnode.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}