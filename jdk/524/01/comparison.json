{"files":[{"patch":"@@ -115,12 +115,2 @@\n-  switch (ShenandoahCodeRootsStyle) {\n-    case 0:\n-    case 1:\n-      break;\n-    case 2: {\n-      assert_locked_or_safepoint(CodeCache_lock);\n-      _nmethod_table->register_nmethod(nm);\n-      break;\n-    }\n-    default:\n-      ShouldNotReachHere();\n-  }\n+  assert_locked_or_safepoint(CodeCache_lock);\n+  _nmethod_table->register_nmethod(nm);\n@@ -130,13 +120,2 @@\n-  switch (ShenandoahCodeRootsStyle) {\n-    case 0:\n-    case 1: {\n-      break;\n-    }\n-    case 2: {\n-      assert_locked_or_safepoint(CodeCache_lock);\n-      _nmethod_table->unregister_nmethod(nm);\n-      break;\n-    }\n-    default:\n-      ShouldNotReachHere();\n-  }\n+  assert_locked_or_safepoint(CodeCache_lock);\n+  _nmethod_table->unregister_nmethod(nm);\n@@ -146,13 +125,2 @@\n-  switch (ShenandoahCodeRootsStyle) {\n-    case 0:\n-    case 1: {\n-      break;\n-    }\n-    case 2: {\n-      assert_locked_or_safepoint(CodeCache_lock);\n-      _nmethod_table->flush_nmethod(nm);\n-      break;\n-    }\n-    default:\n-      ShouldNotReachHere();\n-  }\n+  assert_locked_or_safepoint(CodeCache_lock);\n+  _nmethod_table->flush_nmethod(nm);\n@@ -392,14 +360,2 @@\n-  switch (ShenandoahCodeRootsStyle) {\n-    case 0:\n-    case 1: {\n-      \/\/ No need to do anything here\n-      break;\n-    }\n-    case 2: {\n-      CodeCache_lock->lock_without_safepoint_check();\n-      _table_snapshot = ShenandoahCodeRoots::table()->snapshot_for_iteration();\n-      break;\n-    }\n-    default:\n-      ShouldNotReachHere();\n-  }\n+  CodeCache_lock->lock_without_safepoint_check();\n+  _table_snapshot = ShenandoahCodeRoots::table()->snapshot_for_iteration();\n@@ -409,15 +365,3 @@\n-  switch (ShenandoahCodeRootsStyle) {\n-    case 0:\n-    case 1: {\n-      \/\/ No need to do anything here\n-      break;\n-    }\n-    case 2: {\n-      ShenandoahCodeRoots::table()->finish_iteration(_table_snapshot);\n-      _table_snapshot = NULL;\n-      CodeCache_lock->unlock();\n-      break;\n-    }\n-    default:\n-      ShouldNotReachHere();\n-  }\n+  ShenandoahCodeRoots::table()->finish_iteration(_table_snapshot);\n+  _table_snapshot = NULL;\n+  CodeCache_lock->unlock();\n@@ -427,21 +371,0 @@\n-  switch (ShenandoahCodeRootsStyle) {\n-    case 0: {\n-      if (_seq_claimed.try_set()) {\n-        CodeCache::blobs_do(f);\n-      }\n-      break;\n-    }\n-    case 1: {\n-      _par_iterator.parallel_blobs_do(f);\n-      break;\n-    }\n-    case 2: {\n-      ShenandoahCodeRootsIterator::fast_parallel_blobs_do(f);\n-      break;\n-    }\n-    default:\n-      ShouldNotReachHere();\n-  }\n-}\n-\n-void ShenandoahCodeRootsIterator::fast_parallel_blobs_do(CodeBlobClosure *f) {\n@@ -452,1 +375,0 @@\n-\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahCodeRoots.cpp","additions":11,"deletions":89,"binary":false,"changes":100,"status":"modified"},{"patch":"@@ -81,1 +81,0 @@\n-  void fast_parallel_blobs_do(CodeBlobClosure *f);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahCodeRoots.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -40,6 +40,1 @@\n-#if (defined(X86) || defined(AARCH64))\n-  return ShenandoahCodeRootsStyle == 2 &&\n-         ClassUnloading;\n-#else\n-  return false;\n-#endif\n+  return ClassUnloading;\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentRoots.cpp","additions":1,"deletions":6,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -339,6 +339,0 @@\n-  product(uintx, ShenandoahCodeRootsStyle, 2, DIAGNOSTIC,                   \\\n-          \"Use this style to scan the code cache roots:\"                    \\\n-          \" 0 - sequential iterator;\"                                       \\\n-          \" 1 - parallel iterator;\"                                         \\\n-          \" 2 - parallel iterator with cset filters;\")                      \\\n-                                                                            \\\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoah_globals.hpp","additions":0,"deletions":6,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1,39 +0,0 @@\n-\/*\n- * Copyright (c) 2017, 2020, Red Hat, Inc. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-\/* @test TestCodeCacheRootStyles\n- * @requires vm.gc.Shenandoah\n- * @run main\/othervm -XX:+UnlockExperimentalVMOptions -XX:+UnlockDiagnosticVMOptions\n- *                   -XX:+UseShenandoahGC -XX:ShenandoahCodeRootsStyle=0 TestCodeCacheRootStyles\n- * @run main\/othervm -XX:+UnlockExperimentalVMOptions -XX:+UnlockDiagnosticVMOptions\n- *                   -XX:+UseShenandoahGC -XX:ShenandoahCodeRootsStyle=1 TestCodeCacheRootStyles\n- * @run main\/othervm -XX:+UnlockExperimentalVMOptions -XX:+UnlockDiagnosticVMOptions\n- *                   -XX:+UseShenandoahGC -XX:ShenandoahCodeRootsStyle=2 TestCodeCacheRootStyles\n- *\/\n-\n-public class TestCodeCacheRootStyles {\n-    public static void main(String[] args) {\n-        \/\/ Bug should crash before we get here.\n-    }\n-}\n","filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/options\/TestCodeCacheRootStyles.java","additions":0,"deletions":39,"binary":false,"changes":39,"status":"deleted"}]}