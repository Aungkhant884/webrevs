{"files":[{"patch":"@@ -3635,1 +3635,3 @@\n-    static const unsigned char VEC_ALIGN pack_lshift_val[16] = { 2, 4, 6, 0, 2, 4, 6, 0, 2, 4, 6, 0, 2, 4, 6, 0 };\n+    static const unsigned char VEC_ALIGN pack_lshift_val[16] = {\n+      ARRAY_TO_LXV_ORDER(\n+      0, 6, 4, 2, 0, 6, 4, 2, 0, 6, 4, 2, 0, 6, 4, 2 ) };\n@@ -3637,1 +3639,3 @@\n-    static const unsigned char VEC_ALIGN pack_rshift_val[16] = { 0, 4, 2, 0, 0, 4, 2, 0, 0, 4, 2, 0, 0, 4, 2, 0 };\n+    static const unsigned char VEC_ALIGN pack_rshift_val[16] = {\n+      ARRAY_TO_LXV_ORDER(\n+      0, 2, 4, 0, 0, 2, 4, 0, 0, 2, 4, 0, 0, 2, 4, 0 ) };\n@@ -3639,1 +3643,1 @@\n-    \/\/ The last 4 index values are \"don't care\" because\n+    \/\/ The first 4 index values are \"don't care\" because\n@@ -3643,5 +3647,6 @@\n-      14, 13, 12,\n-      10,  9,  8,\n-       6,  5,  4,\n-       2,  1,  0,\n-       0,  0,  0, 0 };\n+      ARRAY_TO_LXV_ORDER(\n+       0, 0, 0, 0,\n+       0,  1,  2,\n+       4,  5,  6,\n+       8,  9, 10,\n+      12, 13, 14 ) };\n@@ -3650,3 +3655,3 @@\n-      10, 11, 12, 13, 14, 15,\n-       2,  3,  4,  5,  6,  7,\n-       0,  0,  0,  0 };\n+      ARRAY_TO_LXV_ORDER(\n+       0,  0,  0,  0,  7,  6,  5,  4, \n+       3,  2, 15, 14, 13, 12, 11, 10 ) };\n@@ -3736,1 +3741,1 @@\n-    Label not_URL, calculate_size, unrolled_loop_start, skip_xxsel[loop_unrolls], unrolled_loop_exit, return_zero;\n+    Label not_URL, calculate_size, unrolled_loop_start, unrolled_loop_exit, return_zero;\n@@ -3840,7 +3845,1 @@\n-        __ vcmpequb_(eq_special_case_char, input, vec_special_case_char);\n-        \/\/\n-        \/\/ There's a (63\/64)^16 = 77.7% chance that there are no special\n-        \/\/ case chars in this 16 bytes of input.  When we detect this case\n-        \/\/ (CCR6-EQ, all comparisons are false), we can skip the xxsel\n-        \/\/ step.\n-        __ beq_predict_taken(CCR6, skip_xxsel[unroll_cnt]);\n+        __ vcmpequb(eq_special_case_char, input, vec_special_case_char);\n@@ -3853,6 +3852,0 @@\n-        \/\/ Note that skip_xxsel is indexed because this code is contained\n-        \/\/ in a C++ loop (the emitted code in this unroll loop doesn't\n-        \/\/ loop).  The indexing allows the creation of a unique labels for\n-        \/\/ each iteration of the unrolled loop.\n-        __ bind(skip_xxsel[unroll_cnt]);\n-\n@@ -3884,7 +3877,14 @@\n-        \/\/ Legend for the tables below: b0, b1, .. b15 are the bytes of\n-        \/\/ decoded binary data.  The specifier after the colon depicts\n-        \/\/ which bits are there.  The bit numbering is big endian style\n-        \/\/ (bit 0 is the most significant).  The || is a concatenate\n-        \/\/ operator (same terminology as used in the Power ISA 3.x\n-        \/\/ document).  Strings of 0's are a field of zeros with the shown\n-        \/\/ length.\n+        \/\/ In the tables below, b0, b1, .. b15 are the bytes of decoded\n+        \/\/ binary data, the first line of each of the cells (except for\n+        \/\/ the constants) uses the bit-field nomenclature from the\n+        \/\/ above-linked paper, whereas the second line is more specific\n+        \/\/ about which exact bits are present, and is constructed using the\n+        \/\/ Power ISA 3.x document style, where:\n+        \/\/\n+        \/\/ * The specifier after the colon depicts which bits are there.\n+        \/\/ * The bit numbering is big endian style (bit 0 is the most\n+        \/\/   significant).\n+        \/\/ * || is a concatenate operator.\n+        \/\/ * Strings of 0's are a field of zeros with the shown length, and\n+        \/\/   likewise for strings of 1's.\n+        \/\/  \n@@ -3893,2 +3893,2 @@\n-            \/\/ Note that only e15..e8 are shown here because the extract\n-            \/\/ bit pattern is the same in e7..e0.\n+            \/\/ Note that only e8..e15 are shown here because the extract bit\n+            \/\/ pattern is the same in e0..e7.\n@@ -3897,1 +3897,1 @@\n-            \/\/ |    Vector     |     e15     |         e14          |         e13          |     e12     |     e11     |         e10          |          e9          |     e8      |\n+            \/\/ |    Vector     |     e8      |          e9          |         e10          |     e11     |     e12     |         e13          |         e14          |     e15     |\n@@ -3900,1 +3900,2 @@\n-            \/\/ | after vaddubm | 00||b0:0..5 | 00||b0:6..7||b1:0..3 | 00||b1:4..7||b2:0..1 | 00||b2:2..7 | 00||b3:0..5 | 00||b3:6..7||b4:0..3 | 00||b4:4..7||b5:0..1 | 00||b5:2..7 |\n+            \/\/ | after vaddudb |  00hhhhhh   |       00gggggg       |       00ffffff       |  00eeeeee   |  00dddddd   |       00cccccc       |       00bbbbbb       |  00aaaaaa   |\n+            \/\/ |               | 00||b5:2..7 | 00||b4:4..7||b5:0..1 | 00||b3:6..7||b4:0..3 | 00||b3:0..5 | 00||b2:2..7 | 00||b1:4..7||b2:0..1 | 00||b0:6..7||b1:0..3 | 00||b0:0..5 |\n@@ -3902,1 +3903,2 @@\n-            \/\/ |  after xxbrd  | 00||b5:2..7 | 00||b4:4..7||b5:0..1 | 00||b3:6..7||b4:0..3 | 00||b3:0..5 | 00||b2:2..7 | 00||b1:4..7||b2:0..1 | 00||b0:6..7||b1:0..3 | 00||b0:0..5 |\n+            \/\/ |  after xxbrd  |  00aaaaaa   |       00bbbbbb       |       00cccccc       |  00dddddd   |  00eeeeee   |       00ffffff       |       00gggggg       |  00hhhhhh   |\n+            \/\/ |               | 00||b0:0..5 | 00||b0:6..7||b1:0..3 | 00||b1:4..7||b2:0..1 | 00||b2:2..7 | 00||b3:0..5 | 00||b3:6..7||b4:0..3 | 00||b4:4..7||b5:0..1 | 00||b5:2..7 |\n@@ -3906,1 +3908,2 @@\n-            \/\/ | after vpextd  |   b5:0..7   |       b4:0..7        |       b3:0..7        |   b2:0..7   |   b1:0..7   |       b0:0..7        |       00000000       |  00000000   |\n+            \/\/ | after vpextd  |  00000000   |       00000000       |       aaaaaabb       |  bbbbcccc   |  ccdddddd   |       eeeeeeff       |       ffffgggg       |  gghhhhhh   |\n+            \/\/ |               |  00000000   |       00000000       |       b0:0..7        |   b1:0..7   |   b2:0..7   |       b3:0..7        |       b4:0..7        |   b5:0..7   |\n@@ -3912,11 +3915,12 @@\n-            \/\/ Final jostling of bytes into their correct positions.\n-            \/\/ +==================+=====+=====+=====+=====+=====+=====+====+====+=====+=====+=====+=====+====+====+====+====+\n-            \/\/ |      Vector      | e15 | e14 | e13 | e12 | e11 | e10 | e9 | e8 | e7  | e6  | e5  | e4  | e3 | e2 | e1 | e0 |\n-            \/\/ |     Elements     |     |     |     |     |     |     |    |    |     |     |     |     |    |    |    |    |\n-            \/\/ +==================+=====+=====+=====+=====+=====+=====+====+====+=====+=====+=====+=====+====+====+====+====+\n-            \/\/ |   after vpextd   | b5  | b4  | b3  | b2  | b1  | b0  | 0  | 0  | b11 | b10 | b9  | b8  | b7 | b6 | 0  | 0  |\n-            \/\/ +------------------+-----+-----+-----+-----+-----+-----+----+----+-----+-----+-----+-----+----+----+----+----+\n-            \/\/ | p10_pack_permute | 10  | 11  | 12  | 13  | 14  | 15  | 2  | 3  |  4  |  5  |  6  |  7  | 0  | 0  | 0  | 0  |\n-            \/\/ +------------------+-----+-----+-----+-----+-----+-----+----+----+-----+-----+-----+-----+----+----+----+----+\n-            \/\/ |   after xxperm   | b0  | b1  | b2  | b3  | b4  | b5  | b6 | b7 | b8  | b9  | b10 | b11 | 0  | 0  | 0  | 0  |\n-            \/\/ +==================+=====+=====+=====+=====+=====+=====+====+====+=====+=====+=====+=====+====+====+====+====+\n+            \/\/ Final rearrangement of bytes into their correct positions.\n+            \/\/ +==================+====+====+====+====+=====+=====+=====+=====+====+====+=====+=====+=====+=====+=====+=====+\n+            \/\/ |      Vector      | e0 | e1 | e2 | e3 | e4  | e5  | e6  | e7  | e8 | e9 | e10 | e11 | e12 | e13 | e14 | e15 |\n+            \/\/ |     Elements     |    |    |    |    |     |     |     |     |    |    |     |     |     |     |     |     |\n+            \/\/ +==================+====+====+====+====+=====+=====+=====+=====+====+====+=====+=====+=====+=====+=====+=====+\n+            \/\/ |   after vpextd   | 0  | 0  | b6 | b7 | b8  | b9  | b10 | b11 | 0  | 0  | b0  | b1  | b2  | b3  | b4  | b5  |\n+            \/\/ +------------------+----+----+----+----+-----+-----+-----+-----+----+----+-----+-----+-----+-----+-----+-----+\n+            \/\/ | p10_pack_permute | 0  | 0  | 0  | 0  |  7  |  6  |  5  |  4  | 3  | 2  | 15  | 14  | 13  | 12  | 11  | 10  |\n+            \/\/ +------------------+----+----+----+----+-----+-----+-----+-----+----+----+-----+-----+-----+-----+-----+-----+\n+            \/\/ |   after xxperm   | 0  | 0  | 0  | 0  | b11 | b10 | b9  | b8  | b7 | b6 | b5  | b4  | b3  | b2  | b1  | b0  |\n+            \/\/ +==================+====+====+====+====+=====+=====+=====+=====+====+====+=====+=====+=====+=====+=====+=====+\n+\n@@ -3924,3 +3928,3 @@\n-            \/\/ Note that only e15..e12 are shown here because the shifting\n-            \/\/ and OR'ing pattern replicates for e11..e8, e7..e4, and\n-            \/\/ e3..e0.\n+            \/\/ Note that only e12..e15 are shown here because the shifting\n+            \/\/ and OR'ing pattern replicates for e8..e11, e4..7, and\n+            \/\/ e0..e3.\n@@ -3928,18 +3932,23 @@\n-            \/\/ +======================+=============+======================+======================+=================+\n-            \/\/ |        Vector        |     e15     |         e14          |         e13          |       e12       |\n-            \/\/ |       Element        |             |                      |                      |                 |\n-            \/\/ +======================+=============+======================+======================+=================+\n-            \/\/ |    after vaddubm     | 00||b0:0..5 | 00||b0:6..7||b1:0..3 | 00||b1:4..7||b2:0..1 |   00||b2:2..7   |\n-            \/\/ +----------------------+-------------+----------------------+----------------------+-----------------+\n-            \/\/ |     pack_lshift      |    << 2     |         << 4         |         << 6         |                 |\n-            \/\/ +----------------------+-------------+----------------------+----------------------+-----------------+\n-            \/\/ |     l after vslb     | b0:0..5||00 |    b1:0..3||0000     |   b2:0..1||000000    |   00||b2:2..7   |\n-            \/\/ +----------------------+-------------+----------------------+----------------------+-----------------+\n-            \/\/ |     l after vslo     |  00000000   |     b0:0..5||00      |    b1:0..3||0000     | b2:0..1||000000 |\n-            \/\/ +----------------------+-------------+----------------------+----------------------+-----------------+\n-            \/\/ |     pack_rshift      |             |         >> 4         |         >> 2         |                 |\n-            \/\/ +----------------------+-------------+----------------------+----------------------+-----------------+\n-            \/\/ |     r after vsrb     | 00||b0:0..5 |   000000||b0:6..7    |    0000||b1:4..7     |   00||b2:2..7   |\n-            \/\/ +----------------------+-------------+----------------------+----------------------+-----------------+\n-            \/\/ | gathered after xxlor | 00||b0:0..5 |       b0:0..7        |       b1:0..7        |     b2:0..7     |\n-            \/\/ +======================+=============+======================+======================+=================+\n+            \/\/ +======================+=================+======================+======================+=============+\n+            \/\/ |        Vector        |       e12       |         e13          |         e14          |     e15     |\n+            \/\/ |       Element        |                 |                      |                      |             |\n+            \/\/ +======================+=================+======================+======================+=============+\n+            \/\/ |    after vaddubm     |    00dddddd     |       00cccccc       |       00bbbbbb       |  00aaaaaa   |\n+            \/\/ |                      |   00||b2:2..7   | 00||b1:4..7||b2:0..1 | 00||b0:6..7||b1:0..3 | 00||b0:0..5 |\n+            \/\/ +----------------------+-----------------+----------------------+----------------------+-------------+\n+            \/\/ |     pack_lshift      |                 |         << 6         |         << 4         |    << 2     |\n+            \/\/ +----------------------+-----------------+----------------------+----------------------+-------------+\n+            \/\/ |     l after vslb     |    00dddddd     |       cc000000       |       bbbb0000       |  aaaaaa00   |\n+            \/\/ |                      |   00||b2:2..7   |   b2:0..1||000000    |    b1:0..3||0000     | b0:0..5||00 |\n+            \/\/ +----------------------+-----------------+----------------------+----------------------+-------------+\n+            \/\/ |     l after vslo     |    cc000000     |       bbbb0000       |       aaaaaa00       |  00000000   |\n+            \/\/ |                      | b2:0..1||000000 |    b1:0..3||0000     |     b0:0..5||00      |  00000000   |\n+            \/\/ +----------------------+-----------------+----------------------+----------------------+-------------+\n+            \/\/ |     pack_rshift      |                 |         >> 2         |         >> 4         |             |\n+            \/\/ +----------------------+-----------------+----------------------+----------------------+-------------+\n+            \/\/ |     r after vsrb     |    00dddddd     |       0000cccc       |       000000bb       |  00aaaaaa   |\n+            \/\/ |                      |   00||b2:2..7   |    0000||b1:4..7     |   000000||b0:6..7    | 00||b0:0..5 |\n+            \/\/ +----------------------+-----------------+----------------------+----------------------+-------------+\n+            \/\/ | gathered after xxlor |    ccdddddd     |       bbbbcccc       |       aaaaaabb       |  00aaaaaa   |\n+            \/\/ |                      |     b2:0..7     |       b1:0..7        |       b0:0..7        | 00||b0:0..5 |\n+            \/\/ +======================+=================+======================+======================+=============+\n@@ -3947,0 +3956,4 @@\n+            \/\/ Note: there is a typo in the above-linked paper that shows the result of the gathering process is:\n+            \/\/ [ddddddcc|bbbbcccc|aaaaaabb]\n+            \/\/ but should be:\n+            \/\/ [ccdddddd|bbbbcccc|aaaaaabb]\n@@ -3957,11 +3970,11 @@\n-            \/\/ Final jostling of bytes into their correct positions.\n-            \/\/ +==============+=====+=====+=====+=====+=====+=====+====+====+====+====+=====+=====+======+======+======+======+\n-            \/\/ |    Vector    | e15 | e14 | e13 | e12 | e11 | e10 | e9 | e8 | e7 | e6 | e5  | e4  |  e3  |  e2  |  e1  |  e0  |\n-            \/\/ |   Elements   |     |     |     |     |     |     |    |    |    |    |     |     |      |      |      |      |\n-            \/\/ +==============+=====+=====+=====+=====+=====+=====+====+====+====+====+=====+=====+======+======+======+======+\n-            \/\/ | after xxlor  | xx  | b0  | b1  | b2  | xx  | b3  | b4 | b5 | xx | b6 | b7  | b8  |  xx  |  b9  | b10  | b11  |\n-            \/\/ +--------------+-----+-----+-----+-----+-----+-----+----+----+----+----+-----+-----+------+------+------+------+\n-            \/\/ | pack_permute | 14  | 13  | 12  | 10  |  9  |  8  | 6  | 5  | 4  | 2  |  1  |  0  |  0   |  0   |  0   |  0   |\n-            \/\/ +--------------+-----+-----+-----+-----+-----+-----+----+----+----+----+-----+-----+------+------+------+------+\n-            \/\/ | after xxperm | b0  | b1  | b2  | b3  | b4  | b5  | b6 | b7 | b8 | b9 | b10 | b11 | b11* | b11* | b11* | b11* |\n-            \/\/ +==============+=====+=====+=====+=====+=====+=====+====+====+====+====+=====+=====+======+======+======+======+\n+            \/\/ Final rearrangement of bytes into their correct positions.\n+            \/\/ +==============+======+======+======+======+=====+=====+====+====+====+====+=====+=====+=====+=====+=====+=====+\n+            \/\/ |    Vector    |  e0  |  e1  |  e2  |  e3  | e4  | e5  | e6 | e7 | e8 | e9 | e10 | e11 | e12 | e13 | e14 | e15 |\n+            \/\/ |   Elements   |      |      |      |      |     |     |    |    |    |    |     |     |     |     |     |     |\n+            \/\/ +==============+======+======+======+======+=====+=====+====+====+====+====+=====+=====+=====+=====+=====+=====+\n+            \/\/ | after xxlor  | b11  | b10  |  b9  |  xx  | b8  | b7  | b6 | xx | b5 | b4 | b3  | xx  | b2  | b1  | b0  | xx  |\n+            \/\/ +--------------+------+------+------+------+-----+-----+----+----+----+----+-----+-----+-----+-----+-----+-----+\n+            \/\/ | pack_permute |  0   |  0   |  0   |  0   |  0  |  1  | 2  | 4  | 5  | 6  |  8  |  9  | 10  | 12  | 13  | 14  |\n+            \/\/ +--------------+------+------+------+------+-----+-----+----+----+----+----+-----+-----+-----+-----+-----+-----+\n+            \/\/ | after xxperm | b11* | b11* | b11* | b11* | b11 | b10 | b9 | b8 | b7 | b6 | b5  | b4  | b3  | b2  | b1  | b0  |\n+            \/\/ +==============+======+======+======+======+=====+=====+====+====+====+====+=====+=====+=====+=====+=====+=====+\n","filename":"src\/hotspot\/cpu\/ppc\/stubGenerator_ppc.cpp","additions":94,"deletions":81,"binary":false,"changes":175,"status":"modified"}]}