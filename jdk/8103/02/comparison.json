{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,0 +44,25 @@\n+    private long tmpInode;\n+    private long tmpDev;\n+\n+    public PlatformSupportImpl() {\n+        super();\n+        try {\n+            var tmpPath = Path.of(getTemporaryDirectory());\n+            tmpInode = (Long)Files.getAttribute(tmpPath, \"unix:ino\");\n+            tmpDev = (Long)Files.getAttribute(tmpPath, \"unix:dev\");\n+        } catch (IOException e) {\n+            tmpInode = -1L;\n+            tmpDev = -1L;\n+        }\n+    }\n+\n+    private boolean tempDirectoryEquals(Path p) {\n+        try {\n+            long ino = (Long)Files.getAttribute(p, \"unix:ino\");\n+            long dev = (Long)Files.getAttribute(p, \"unix:dev\");\n+            return (ino == tmpInode) && (dev == tmpDev);\n+        } catch (IOException e) {\n+            return false;\n+        }\n+    }\n+\n@@ -86,5 +111,6 @@\n-     * \/proc\/{hostpid}\/root\/tmp directories exist for many processes\n-     * that are running on a Linux kernel that has cgroups enabled even\n-     * if they are not running in a container.  To avoid this duplication,\n-     * we compare the inode of the \/proc tmp directories to \/tmp and\n-     * skip these duplicated directories.\n+     * When cgroups is enabled, the directory \/proc\/{pid}\/root\/tmp may\n+     * exist even if the given pid is not running inside a container. In\n+     * this case, this directory is usually the same as \/tmp and should\n+     * be skipped, or else we would get duplicated hsperfdata files.\n+     * This case can be detected if the inode and device id of\n+     * \/proc\/{pid}\/root\/tmp are the same as \/tmp.\n@@ -104,1 +130,0 @@\n-        long tmpInode = 0;\n@@ -120,6 +145,0 @@\n-        try {\n-            File f = new File(getTemporaryDirectory());\n-            tmpInode = (Long)Files.getAttribute(f.toPath(), \"unix:ino\");\n-        }\n-        catch (IOException e) {}\n-\n@@ -142,6 +161,4 @@\n-            try {\n-                long procInode = (Long)Files.getAttribute(containerFile.toPath(), \"unix:ino\");\n-                if (containerFile.exists() && containerFile.isDirectory() &&\n-                    containerFile.canRead() && procInode != tmpInode) {\n-                    v.add(containerTmpDir);\n-                }\n+            if (containerFile.exists() && containerFile.isDirectory() &&\n+                containerFile.canRead() &&\n+                !tempDirectoryEquals(containerFile.toPath())) {\n+                v.add(containerTmpDir);\n@@ -149,1 +166,0 @@\n-            catch (IOException e) {}\n","filename":"src\/jdk.internal.jvmstat\/linux\/classes\/sun\/jvmstat\/PlatformSupportImpl.java","additions":36,"deletions":20,"binary":false,"changes":56,"status":"modified"}]}