{"files":[{"patch":"@@ -524,0 +524,1 @@\n+        chk.checkDeprecated(left, env.info.scope.owner, method);\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Annotate.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -0,0 +1,15 @@\n+\/*\n+ * @test \/nodynamiccopyright\/\n+ * @bug 8293519\n+ * @summary deprecation warnings should be emitted for uses of annotation methods inside other annotations\n+ * @compile\/fail\/ref=DeprecationWarningTest.out -deprecation -Werror -XDrawDiagnostics DeprecationWarningTest.java\n+ *\/\n+\n+\/\/ both classes can't be inside the same outermost class or the compiler wont emit the warning as `9.6.4.6 @Deprecated` mandates\n+@interface Anno {\n+    @Deprecated\n+    boolean b() default false;\n+}\n+\n+@Anno(b = true)\n+class Foo {}\n","filename":"test\/langtools\/tools\/javac\/annotations\/DeprecationWarningTest.java","additions":15,"deletions":0,"binary":false,"changes":15,"status":"added"},{"patch":"@@ -0,0 +1,4 @@\n+DeprecationWarningTest.java:14:7: compiler.warn.has.been.deprecated: b(), Anno\n+- compiler.err.warnings.and.werror\n+1 error\n+1 warning\n","filename":"test\/langtools\/tools\/javac\/annotations\/DeprecationWarningTest.out","additions":4,"deletions":0,"binary":false,"changes":4,"status":"added"}]}