{"files":[{"patch":"@@ -627,0 +627,3 @@\n+                if (peekToken(LBRACKET)) {\n+                    log.error(DiagnosticFlag.SYNTAX, token.pos, Errors.UseOfUnderscoreNotAllowedWithBrackets);\n+                }\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/parser\/JavacParser.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -3165,0 +3165,3 @@\n+compiler.err.use.of.underscore.not.allowed.with.brackets=\\\n+    the underscore keyword ''_'' is not allowed to be followed by brackets\n+\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/compiler.properties","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -0,0 +1,33 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/\/ key: compiler.err.use.of.underscore.not.allowed.with.brackets\n+\/\/ key: compiler.misc.feature.unnamed.variables\n+\/\/ key: compiler.warn.preview.feature.use.plural\n+\/\/ options: --enable-preview -source ${jdk.version} -Xlint:preview\n+\n+class UseOfUnderscoreNotAllowedWithBrackets {\n+    void test() {\n+        int[] _[] = new int[][]{new int[]{1}, new int[]{2}};\n+    }\n+}\n","filename":"test\/langtools\/tools\/javac\/diags\/examples\/UseOfUnderscoreNotAllowedWithBrackets.java","additions":33,"deletions":0,"binary":false,"changes":33,"status":"added"},{"patch":"@@ -32,0 +32,1 @@\n+IdentifierTest.java:158:16: compiler.err.use.of.underscore.not.allowed.with.brackets\n@@ -39,1 +40,1 @@\n-36 errors\n\\ No newline at end of file\n+37 errors\n\\ No newline at end of file\n","filename":"test\/langtools\/tools\/javac\/lambda\/IdentifierTest21.out","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- * @bug 8304246\n+ * @bug 8304246 8309093\n@@ -109,0 +109,5 @@\n+    void testUnderscoreWithBrackets() {\n+        int _[] = new int[]{1};\n+        for (int _[] : new int[][]{new int[]{1}, new int[]{2}}) { }\n+    }\n+\n","filename":"test\/langtools\/tools\/javac\/patterns\/UnnamedErrors.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -24,0 +24,2 @@\n+UnnamedErrors.java:110:13: compiler.err.use.of.underscore.not.allowed.with.brackets\n+UnnamedErrors.java:111:18: compiler.err.use.of.underscore.not.allowed.with.brackets\n@@ -35,1 +37,1 @@\n-32 errors\n\\ No newline at end of file\n+34 errors\n\\ No newline at end of file\n","filename":"test\/langtools\/tools\/javac\/patterns\/UnnamedErrors.out","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"}]}