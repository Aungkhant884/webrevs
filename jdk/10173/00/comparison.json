{"files":[{"patch":"@@ -132,3 +132,1 @@\n-            listenerWrappers =\n-                new WeakHashMap<ListenerWrapper,\n-                                WeakReference<ListenerWrapper>>();\n+            listenerWrappers = new WeakHashMap<>();\n@@ -343,2 +341,1 @@\n-    private final Set<ObjectName> beingUnregistered =\n-        new HashSet<ObjectName>();\n+    private final Set<ObjectName> beingUnregistered = new HashSet<>();\n@@ -479,2 +476,1 @@\n-            Set<ObjectInstance> allowedList =\n-                new HashSet<ObjectInstance>(list.size());\n+            Set<ObjectInstance> allowedList = new HashSet<>(list.size());\n@@ -526,2 +522,1 @@\n-            Set<ObjectInstance> allowedList =\n-                new HashSet<ObjectInstance>(list.size());\n+            Set<ObjectInstance> allowedList = new HashSet<>(list.size());\n@@ -542,1 +537,1 @@\n-            queryList = new HashSet<ObjectName>(queryObjectInstanceList.size());\n+            queryList = new HashSet<>(queryObjectInstanceList.size());\n@@ -592,1 +587,1 @@\n-            List<String> result = new ArrayList<String>(domains.length);\n+            List<String> result = new ArrayList<>(domains.length);\n@@ -687,2 +682,1 @@\n-            List<String> allowedList =\n-                new ArrayList<String>(attributes.length);\n+            List<String> allowedList = new ArrayList<>(attributes.length);\n@@ -1476,1 +1470,1 @@\n-        Set<ObjectName> result = new HashSet<ObjectName>();\n+        Set<ObjectName> result = new HashSet<>();\n@@ -1520,1 +1514,1 @@\n-        Set<ObjectInstance> result = new HashSet<ObjectInstance>();\n+        Set<ObjectInstance> result = new HashSet<>();\n@@ -1585,1 +1579,1 @@\n-            Set<ObjectInstance> result = new HashSet<ObjectInstance>();\n+            Set<ObjectInstance> result = new HashSet<>();\n@@ -1646,1 +1640,1 @@\n-                ref = new WeakReference<ListenerWrapper>(wrapper);\n+                ref = new WeakReference<>(wrapper);\n@@ -1794,1 +1788,1 @@\n-                new PrivilegedAction<ProtectionDomain>() {\n+                new PrivilegedAction<>() {\n@@ -2017,1 +2011,1 @@\n-        return AccessController.doPrivileged(new PrivilegedAction<ModifiableClassLoaderRepository>() {\n+        return AccessController.doPrivileged(new PrivilegedAction<>() {\n","filename":"src\/java.management\/share\/classes\/com\/sun\/jmx\/interceptor\/DefaultMBeanServerInterceptor.java","additions":13,"deletions":19,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -89,2 +89,1 @@\n-        List<LoaderEntry> l =\n-            new ArrayList<LoaderEntry>(Arrays.asList(loaders));\n+        List<LoaderEntry> l = new ArrayList<>(Arrays.asList(loaders));\n@@ -133,1 +132,1 @@\n-        new Hashtable<String,List<ClassLoader>>(10);\n+        new Hashtable<>(10);\n@@ -139,1 +138,1 @@\n-        new Hashtable<ObjectName,ClassLoader>(10);\n+        new Hashtable<>(10);\n@@ -249,1 +248,1 @@\n-            excluded = new ArrayList<ClassLoader>(1);\n+            excluded = new ArrayList<>(1);\n","filename":"src\/java.management\/share\/classes\/com\/sun\/jmx\/mbeanserver\/ClassLoaderRepositorySupport.java","additions":5,"deletions":6,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -180,2 +180,1 @@\n-        WeakReference<MXBeanMapping> wr =\n-            new WeakReference<MXBeanMapping>(mapping);\n+        WeakReference<MXBeanMapping> wr = new WeakReference<>(mapping);\n@@ -306,1 +305,1 @@\n-        return new EnumMapping<T>(Util.<Class<T>>cast(enumClass));\n+        return new EnumMapping<>(Util.<Class<T>>cast(enumClass));\n@@ -1289,1 +1288,1 @@\n-                            Set<String> names = new TreeSet<String>();\n+                            Set<String> names = new TreeSet<>();\n","filename":"src\/java.management\/share\/classes\/com\/sun\/jmx\/mbeanserver\/DefaultMXBeanMappingFactory.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,1 +54,1 @@\n-        map.put(descriptor, new WeakReference<ImmutableDescriptor>(descriptor));\n+        map.put(descriptor, new WeakReference<>(descriptor));\n@@ -65,2 +65,1 @@\n-        map = new WeakHashMap<ImmutableDescriptor,\n-                              WeakReference<ImmutableDescriptor>>();\n+        map = new WeakHashMap<>();\n","filename":"src\/java.management\/share\/classes\/com\/sun\/jmx\/mbeanserver\/DescriptorCache.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -400,1 +400,1 @@\n-        Map<String, Object> descriptorMap = new HashMap<String, Object>();\n+        Map<String, Object> descriptorMap = new HashMap<>();\n@@ -595,2 +595,1 @@\n-            Collections.synchronizedMap(\n-                new WeakHashMap<Class<?>,SoftReference<List<Method>>> ());\n+            Collections.synchronizedMap(new WeakHashMap<>());\n@@ -657,1 +656,1 @@\n-            List<Method> result = new LinkedList<Method>();\n+            List<Method> result = new LinkedList<>();\n@@ -670,1 +669,1 @@\n-            cache.put(clazz, new SoftReference<List<Method>>(result));\n+            cache.put(clazz, new SoftReference<>(result));\n","filename":"src\/java.management\/share\/classes\/com\/sun\/jmx\/mbeanserver\/Introspector.java","additions":5,"deletions":6,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -235,1 +235,1 @@\n-            SecureClassLoaderRepository(AccessController.doPrivileged(new PrivilegedAction<ClassLoaderRepository>() {\n+            SecureClassLoaderRepository(AccessController.doPrivileged(new PrivilegedAction<>() {\n@@ -1225,1 +1225,1 @@\n-            AccessController.doPrivileged(new PrivilegedExceptionAction<Object>() {\n+            AccessController.doPrivileged(new PrivilegedExceptionAction<>() {\n@@ -1254,1 +1254,1 @@\n-        final ModifiableClassLoaderRepository loaders = AccessController.doPrivileged(new PrivilegedAction<ModifiableClassLoaderRepository>() {\n+        final ModifiableClassLoaderRepository loaders = AccessController.doPrivileged(new PrivilegedAction<>() {\n","filename":"src\/java.management\/share\/classes\/com\/sun\/jmx\/mbeanserver\/JmxMBeanServer.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,1 +32,0 @@\n-import java.security.AccessController;\n@@ -102,1 +101,1 @@\n-        return new MBeanAnalyzer<M>(mbeanType, introspector);\n+        return new MBeanAnalyzer<>(mbeanType, introspector);\n@@ -152,1 +151,1 @@\n-                    am = new AttrMethods<M>();\n+                    am = new AttrMethods<>();\n@@ -169,1 +168,1 @@\n-                    am = new AttrMethods<M>();\n+                    am = new AttrMethods<>();\n","filename":"src\/java.management\/share\/classes\/com\/sun\/jmx\/mbeanserver\/MBeanAnalyzer.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -764,1 +764,1 @@\n-        ClassLoader loader = AccessController.doPrivileged(new PrivilegedAction<ClassLoader>() {\n+        ClassLoader loader = AccessController.doPrivileged(new PrivilegedAction<>() {\n","filename":"src\/java.management\/share\/classes\/com\/sun\/jmx\/mbeanserver\/MBeanInstantiator.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,0 @@\n-import javax.management.IntrospectionException;\n@@ -195,1 +194,1 @@\n-                    pi = new PerInterface<M>(mbeanInterface, this, analyzer,\n+                    pi = new PerInterface<>(mbeanInterface, this, analyzer,\n@@ -197,1 +196,1 @@\n-                    wr = new WeakReference<PerInterface<M>>(pi);\n+                    wr = new WeakReference<>(pi);\n@@ -420,1 +419,1 @@\n-                intfMap = new WeakHashMap<Class<?>, MBeanInfo>();\n+                intfMap = new WeakHashMap<>();\n","filename":"src\/java.management\/share\/classes\/com\/sun\/jmx\/mbeanserver\/MBeanIntrospector.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2008, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,2 +28,0 @@\n-import com.sun.jmx.mbeanserver.MBeanIntrospector.MBeanInfoMap;\n-import com.sun.jmx.mbeanserver.MBeanIntrospector.PerInterfaceMap;\n@@ -362,1 +360,1 @@\n-        perInterfaceMap = new PerInterfaceMap<ConvertingMethod>();\n+        perInterfaceMap = new PerInterfaceMap<>();\n","filename":"src\/java.management\/share\/classes\/com\/sun\/jmx\/mbeanserver\/MXBeanIntrospector.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -98,1 +98,1 @@\n-                mbscToLookup.put(mbsc, new WeakReference<MXBeanLookup>(lookup));\n+                mbscToLookup.put(mbsc, new WeakReference<>(lookup));\n@@ -112,1 +112,1 @@\n-        objectNameToProxy.put(name, new WeakReference<Object>(proxy));\n+        objectNameToProxy.put(name, new WeakReference<>(proxy));\n@@ -179,1 +179,1 @@\n-            new ThreadLocal<MXBeanLookup>();\n+            new ThreadLocal<>();\n","filename":"src\/java.management\/share\/classes\/com\/sun\/jmx\/mbeanserver\/MXBeanLookup.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -242,2 +242,1 @@\n-        final Map<String,NamedObject> moiTb =\n-            new HashMap<String,NamedObject>();\n+        final Map<String,NamedObject> moiTb = new HashMap<>();\n@@ -328,1 +327,1 @@\n-        domainTb = new HashMap<String,Map<String,NamedObject>>(5);\n+        domainTb = new HashMap<>(5);\n@@ -336,1 +335,1 @@\n-        domainTb.put(this.domain, new HashMap<String,NamedObject>());\n+        domainTb.put(this.domain, new HashMap<>());\n@@ -350,1 +349,1 @@\n-            result = new ArrayList<String>(domainTb.size());\n+            result = new ArrayList<>(domainTb.size());\n@@ -510,1 +509,1 @@\n-        final Set<NamedObject> result = new HashSet<NamedObject>();\n+        final Set<NamedObject> result = new HashSet<>();\n@@ -644,1 +643,1 @@\n-                    domainTb.put(domain, new HashMap<String,NamedObject>());\n+                    domainTb.put(domain, new HashMap<>());\n","filename":"src\/java.management\/share\/classes\/com\/sun\/jmx\/mbeanserver\/Repository.java","additions":6,"deletions":7,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -187,1 +187,1 @@\n-            new WeakHashMap<Class<?>, Boolean>();\n+            new WeakHashMap<>();\n@@ -190,1 +190,1 @@\n-        perInterfaceMap = new PerInterfaceMap<Method>();\n+        perInterfaceMap = new PerInterfaceMap<>();\n","filename":"src\/java.management\/share\/classes\/com\/sun\/jmx\/mbeanserver\/StandardMBeanIntrospector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2008, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -55,1 +55,1 @@\n-        return new HashMap<K, V>();\n+        return new HashMap<>();\n@@ -63,1 +63,1 @@\n-        return new IdentityHashMap<K, V>();\n+        return new IdentityHashMap<>();\n@@ -72,1 +72,1 @@\n-        return new TreeMap<K, V>();\n+        return new TreeMap<>();\n@@ -76,1 +76,1 @@\n-        return new TreeMap<K, V>(comp);\n+        return new TreeMap<>(comp);\n@@ -80,1 +80,1 @@\n-        return new LinkedHashMap<K, V>();\n+        return new LinkedHashMap<>();\n@@ -84,1 +84,1 @@\n-        return new HashSet<E>();\n+        return new HashSet<>();\n@@ -88,1 +88,1 @@\n-        return new HashSet<E>(c);\n+        return new HashSet<>(c);\n@@ -92,1 +92,1 @@\n-        return new ArrayList<E>();\n+        return new ArrayList<>();\n@@ -96,1 +96,1 @@\n-        return new ArrayList<E>(c);\n+        return new ArrayList<>(c);\n","filename":"src\/java.management\/share\/classes\/com\/sun\/jmx\/mbeanserver\/Util.java","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -63,1 +63,1 @@\n-        return new WeakIdentityHashMap<K, V>();\n+        return new WeakIdentityHashMap<>();\n@@ -93,1 +93,1 @@\n-        return new IdentityWeakReference<K>(referent);\n+        return new IdentityWeakReference<>(referent);\n@@ -97,1 +97,1 @@\n-        return new IdentityWeakReference<K>(referent, q);\n+        return new IdentityWeakReference<>(referent, q);\n@@ -137,1 +137,1 @@\n-    private ReferenceQueue<K> refQueue = new ReferenceQueue<K>();\n+    private ReferenceQueue<K> refQueue = new ReferenceQueue<>();\n","filename":"src\/java.management\/share\/classes\/com\/sun\/jmx\/mbeanserver\/WeakIdentityHashMap.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -119,2 +119,2 @@\n-        new HashMap<MBeanServer,ArrayNotificationBuffer>(1);\n-    private final Collection<ShareBuffer> sharers = new HashSet<ShareBuffer>(1);\n+        new HashMap<>(1);\n+    private final Collection<ShareBuffer> sharers = new HashSet<>(1);\n@@ -254,1 +254,1 @@\n-        this.queue = new ArrayQueue<NamedNotification>(queueSize);\n+        this.queue = new ArrayQueue<>(queueSize);\n@@ -356,2 +356,1 @@\n-        List<TargetedNotification> notifs =\n-            new ArrayList<TargetedNotification>();\n+        List<TargetedNotification> notifs = new ArrayList<>();\n@@ -462,2 +461,1 @@\n-            List<TargetedNotification> matchedNotifs =\n-                new ArrayList<TargetedNotification>();\n+            List<TargetedNotification> matchedNotifs = new ArrayList<>();\n@@ -604,1 +602,1 @@\n-            createdDuringQuery = new HashSet<ObjectName>();\n+            createdDuringQuery = new HashSet<>();\n@@ -621,1 +619,1 @@\n-        names = new HashSet<ObjectName>(names);\n+        names = new HashSet<>(names);\n@@ -699,1 +697,1 @@\n-            new PrivilegedAction<Set<ObjectName>>() {\n+            new PrivilegedAction<>() {\n@@ -718,1 +716,1 @@\n-            new PrivilegedExceptionAction<Boolean>() {\n+            new PrivilegedExceptionAction<>() {\n","filename":"src\/java.management\/share\/classes\/com\/sun\/jmx\/remote\/internal\/ArrayNotificationBuffer.java","additions":9,"deletions":11,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -196,3 +196,2 @@\n-        List<Integer> ids = new ArrayList<Integer>();\n-        List<ClientListenerInfo> values =\n-                new ArrayList<ClientListenerInfo>(infoList.values());\n+        List<Integer> ids = new ArrayList<>();\n+        List<ClientListenerInfo> values = new ArrayList<>(infoList.values());\n@@ -222,2 +221,1 @@\n-        List<ClientListenerInfo> values =\n-                new ArrayList<ClientListenerInfo>(infoList.values());\n+        List<ClientListenerInfo> values = new ArrayList<>(infoList.values());\n@@ -283,1 +281,1 @@\n-        List<Integer> ids = new ArrayList<Integer>();\n+        List<Integer> ids = new ArrayList<>();\n@@ -285,2 +283,1 @@\n-        List<ClientListenerInfo> values =\n-                new ArrayList<ClientListenerInfo>(infoList.values());\n+        List<ClientListenerInfo> values = new ArrayList<>(infoList.values());\n@@ -438,1 +435,1 @@\n-                new PrivilegedAction<ClassLoader>() {\n+                new PrivilegedAction<>() {\n@@ -512,1 +509,1 @@\n-                    listeners = new HashMap<Integer, ClientListenerInfo>();\n+                    listeners = new HashMap<>();\n@@ -912,2 +909,1 @@\n-    private final Map<Integer, ClientListenerInfo> infoList =\n-            new HashMap<Integer, ClientListenerInfo>();\n+    private final Map<Integer, ClientListenerInfo> infoList = new HashMap<>();\n","filename":"src\/java.management\/share\/classes\/com\/sun\/jmx\/remote\/internal\/ClientNotifForwarder.java","additions":8,"deletions":12,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -99,1 +99,1 @@\n-                    new PrivilegedExceptionAction<Boolean>() {\n+                    new PrivilegedExceptionAction<>() {\n@@ -137,1 +137,1 @@\n-                    set = new HashSet<IdAndFilter>(set);\n+                    set = new HashSet<>(set);\n@@ -387,1 +387,1 @@\n-                    new PrivilegedExceptionAction<ObjectInstance>() {\n+                    new PrivilegedExceptionAction<>() {\n@@ -493,1 +493,1 @@\n-            new HashMap<ObjectName, Set<IdAndFilter>>();\n+            new HashMap<>();\n","filename":"src\/java.management\/share\/classes\/com\/sun\/jmx\/remote\/internal\/ServerNotifForwarder.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -320,1 +320,1 @@\n-            options = new HashMap<String, String>(1);\n+            options = new HashMap<>(1);\n","filename":"src\/java.management\/share\/classes\/com\/sun\/jmx\/remote\/security\/JMXPluggableAuthenticator.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -308,1 +308,1 @@\n-            AccessController.doPrivileged(new PrivilegedAction<Subject>() {\n+            AccessController.doPrivileged(new PrivilegedAction<>() {\n@@ -391,1 +391,1 @@\n-        this.accessMap = new HashMap<String, Access>();\n+        this.accessMap = new HashMap<>();\n@@ -450,1 +450,1 @@\n-            List<String> createClasses = new ArrayList<String>();\n+            List<String> createClasses = new ArrayList<>();\n","filename":"src\/java.management\/share\/classes\/com\/sun\/jmx\/remote\/security\/MBeanServerFileAccessController.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -66,1 +66,1 @@\n-            new PrivilegedAction<Void>() {\n+            new PrivilegedAction<>() {\n","filename":"src\/java.management\/share\/classes\/com\/sun\/jmx\/remote\/security\/SubjectDelegator.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -442,1 +442,1 @@\n-        SortedMap<String, V> map = new TreeMap<String, V>(attributes);\n+        SortedMap<String, V> map = new TreeMap<>(attributes);\n@@ -527,1 +527,1 @@\n-            new TreeSet<String>();\n+            new TreeSet<>();\n@@ -529,1 +529,1 @@\n-            new TreeSet<String>();\n+            new TreeSet<>();\n@@ -544,2 +544,2 @@\n-            hiddenStrings = new TreeSet<String>();\n-            hiddenPrefixes = new TreeSet<String>();\n+            hiddenStrings = new TreeSet<>();\n+            hiddenPrefixes = new TreeSet<>();\n","filename":"src\/java.management\/share\/classes\/com\/sun\/jmx\/remote\/util\/EnvHelp.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -27,0 +27,1 @@\n+\n@@ -929,1 +930,1 @@\n-                new PrivilegedAction<List<PlatformMBeanProvider>>() {\n+                new PrivilegedAction<>() {\n","filename":"src\/java.management\/share\/classes\/java\/lang\/management\/ManagementFactory.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,1 +51,1 @@\n-    private Vector<String> enabledAttributes = new Vector<String>();\n+    private Vector<String> enabledAttributes = new Vector<>();\n","filename":"src\/java.management\/share\/classes\/javax\/management\/AttributeChangeNotificationFilter.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -111,1 +111,1 @@\n-                new TreeMap<String, Object>(String.CASE_INSENSITIVE_ORDER);\n+                new TreeMap<>(String.CASE_INSENSITIVE_ORDER);\n@@ -167,1 +167,1 @@\n-                new TreeMap<String, Object>(String.CASE_INSENSITIVE_ORDER);\n+                new TreeMap<>(String.CASE_INSENSITIVE_ORDER);\n@@ -241,2 +241,1 @@\n-        Map<String, Object> map =\n-            new TreeMap<String, Object>(String.CASE_INSENSITIVE_ORDER);\n+        Map<String, Object> map = new TreeMap<>(String.CASE_INSENSITIVE_ORDER);\n","filename":"src\/java.management\/share\/classes\/javax\/management\/ImmutableDescriptor.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -534,1 +534,1 @@\n-        new WeakHashMap<Class<?>, Boolean>();\n+        new WeakHashMap<>();\n","filename":"src\/java.management\/share\/classes\/javax\/management\/MBeanInfo.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -364,1 +364,1 @@\n-            return new ArrayList<MBeanServer>(mBeanServerList);\n+            return new ArrayList<>(mBeanServerList);\n@@ -366,1 +366,1 @@\n-        ArrayList<MBeanServer> result = new ArrayList<MBeanServer>();\n+        ArrayList<MBeanServer> result = new ArrayList<>();\n@@ -432,1 +432,1 @@\n-            new ArrayList<MBeanServer>();\n+            new ArrayList<>();\n","filename":"src\/java.management\/share\/classes\/javax\/management\/MBeanServerFactory.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -338,2 +338,1 @@\n-                mxbeanProxies.put(mxbeanInterface,\n-                                  new WeakReference<MXBeanProxy>(p));\n+                mxbeanProxies.put(mxbeanInterface, new WeakReference<>(p));\n@@ -345,1 +344,1 @@\n-            mxbeanProxies = new WeakHashMap<Class<?>, WeakReference<MXBeanProxy>>();\n+            mxbeanProxies = new WeakHashMap<>();\n","filename":"src\/java.management\/share\/classes\/javax\/management\/MBeanServerInvocationHandler.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -327,2 +327,1 @@\n-    private List<ListenerInfo> listenerList =\n-        new CopyOnWriteArrayList<ListenerInfo>();\n+    private List<ListenerInfo> listenerList = new CopyOnWriteArrayList<>();\n","filename":"src\/java.management\/share\/classes\/javax\/management\/NotificationBroadcasterSupport.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -68,1 +68,1 @@\n-    private List<String> enabledTypes = new Vector<String>();\n+    private List<String> enabledTypes = new Vector<>();\n","filename":"src\/java.management\/share\/classes\/javax\/management\/NotificationFilterSupport.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -497,1 +497,1 @@\n-        Map<String,Property> keys_map = new HashMap<String,Property>();\n+        Map<String,Property> keys_map = new HashMap<>();\n@@ -711,1 +711,1 @@\n-        final Map<String,Property> keys_map = new HashMap<String,Property>();\n+        final Map<String,Property> keys_map = new HashMap<>();\n@@ -1659,1 +1659,1 @@\n-                _propertyList = new HashMap<String,String>();\n+                _propertyList = new HashMap<>();\n@@ -1685,1 +1685,1 @@\n-        return new Hashtable<String,String>(_getKeyPropertyList());\n+        return new Hashtable<>(_getKeyPropertyList());\n","filename":"src\/java.management\/share\/classes\/javax\/management\/ObjectName.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n-\/\/ java import\n@@ -42,1 +41,1 @@\n-        new InheritableThreadLocal<MBeanServer>();\n+        new InheritableThreadLocal<>();\n","filename":"src\/java.management\/share\/classes\/javax\/management\/QueryEval.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -762,1 +762,1 @@\n-            Map<String,Object> fields = new HashMap<String,Object>();\n+            Map<String,Object> fields = new HashMap<>();\n@@ -1148,1 +1148,1 @@\n-        new WeakHashMap<Class<?>, Boolean>();\n+        new WeakHashMap<>();\n","filename":"src\/java.management\/share\/classes\/javax\/management\/StandardMBean.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -192,1 +192,1 @@\n-     private List<MLetContent> mletList = new ArrayList<MLetContent>();\n+     private List<MLetContent> mletList = new ArrayList<>();\n@@ -229,2 +229,1 @@\n-     private Map<String,Class<?>> primitiveClasses =\n-         new HashMap<String,Class<?>>(8) ;\n+     private Map<String,Class<?>> primitiveClasses = new HashMap<>(8) ;\n@@ -518,1 +517,1 @@\n-         Set<Object> mbeans = new HashSet<Object>();\n+         Set<Object> mbeans = new HashSet<>();\n@@ -612,1 +611,1 @@\n-                     List<Object> objectPars = new ArrayList<Object>();\n+                     List<Object> objectPars = new ArrayList<>();\n@@ -1278,1 +1277,1 @@\n-            new PrivilegedAction<ClassLoaderRepository>() {\n+            new PrivilegedAction<>() {\n","filename":"src\/java.management\/share\/classes\/javax\/management\/loading\/MLet.java","additions":5,"deletions":6,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -117,1 +117,1 @@\n-        Map<String,String> atts = new HashMap<String,String>();\n+        Map<String,String> atts = new HashMap<>();\n@@ -175,1 +175,1 @@\n-        List<MLetContent> mlets = new ArrayList<MLetContent>();\n+        List<MLetContent> mlets = new ArrayList<>();\n@@ -178,2 +178,2 @@\n-        List<String> types = new ArrayList<String>();\n-        List<String> values = new ArrayList<String>();\n+        List<String> types = new ArrayList<>();\n+        List<String> values = new ArrayList<>();\n@@ -198,2 +198,2 @@\n-                        types = new ArrayList<String>();\n-                        values = new ArrayList<String>();\n+                        types = new ArrayList<>();\n+                        values = new ArrayList<>();\n","filename":"src\/java.management\/share\/classes\/javax\/management\/loading\/MLetParser.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -496,2 +496,1 @@\n-        descriptorMap =\n-                new TreeMap<String, Object>(String.CASE_INSENSITIVE_ORDER);\n+        descriptorMap = new TreeMap<>(String.CASE_INSENSITIVE_ORDER);\n@@ -1065,1 +1064,1 @@\n-        new HashMap<String,Character>();\n+        new HashMap<>();\n@@ -1322,1 +1321,1 @@\n-            startMap = new TreeMap<String, Object>(descriptorMap);\n+            startMap = new TreeMap<>(descriptorMap);\n@@ -1329,1 +1328,1 @@\n-            descriptor = new HashMap<String, Object>();\n+            descriptor = new HashMap<>();\n@@ -1333,1 +1332,1 @@\n-            descriptor = new HashMap<String, Object>(startMap);\n+            descriptor = new HashMap<>(startMap);\n","filename":"src\/java.management\/share\/classes\/javax\/management\/modelmbean\/DescriptorSupport.java","additions":6,"deletions":7,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -34,2 +34,0 @@\n-\/* java imports *\/\n-\n@@ -979,1 +977,1 @@\n-                    targetClass = javaSecurityAccess.doIntersectionPrivilege(new PrivilegedAction<Class<?>>() {\n+                    targetClass = javaSecurityAccess.doIntersectionPrivilege(new PrivilegedAction<>() {\n@@ -1101,1 +1099,1 @@\n-        new HashMap<String,Class<?>>();\n+        new HashMap<>();\n@@ -1135,1 +1133,1 @@\n-            targetClass = javaSecurityAccess.doIntersectionPrivilege(new PrivilegedAction<Class<?>>() {\n+            targetClass = javaSecurityAccess.doIntersectionPrivilege(new PrivilegedAction<>() {\n@@ -1172,1 +1170,1 @@\n-            Object rslt = javaSecurityAccess.doIntersectionPrivilege(new PrivilegedAction<Object>() {\n+            Object rslt = javaSecurityAccess.doIntersectionPrivilege(new PrivilegedAction<>() {\n@@ -1293,1 +1291,1 @@\n-                Set<String> names = new HashSet<String>();\n+                Set<String> names = new HashSet<>();\n@@ -1585,1 +1583,1 @@\n-                                Class<?> c = javaSecurityAccess.doIntersectionPrivilege(new PrivilegedAction<Class<?>>() {\n+                                Class<?> c = javaSecurityAccess.doIntersectionPrivilege(new PrivilegedAction<>() {\n@@ -2669,1 +2667,1 @@\n-        Class<?> c = javaSecurityAccess.doIntersectionPrivilege(new PrivilegedAction<Class<?>>() {\n+        Class<?> c = javaSecurityAccess.doIntersectionPrivilege(new PrivilegedAction<>() {\n","filename":"src\/java.management\/share\/classes\/javax\/management\/modelmbean\/RequiredModelMBean.java","additions":7,"deletions":9,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -169,1 +169,1 @@\n-        new CopyOnWriteArrayList<String>();\n+        new CopyOnWriteArrayList<>();\n@@ -192,1 +192,1 @@\n-            new WeakHashMap<ThreadPoolExecutor, Void>();\n+            new WeakHashMap<>();\n@@ -356,1 +356,1 @@\n-        new CopyOnWriteArrayList<ObservedObject>();\n+        new CopyOnWriteArrayList<>();\n@@ -1493,1 +1493,1 @@\n-                            new LinkedBlockingQueue<Runnable>(),\n+                            new LinkedBlockingQueue<>(),\n@@ -1520,1 +1520,1 @@\n-            PrivilegedAction<Void> action = new PrivilegedAction<Void>() {\n+            PrivilegedAction<Void> action = new PrivilegedAction<>() {\n","filename":"src\/java.management\/share\/classes\/javax\/management\/monitor\/Monitor.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -833,1 +833,1 @@\n-        return new ArrayType<E[]>(1, elementType);\n+        return new ArrayType<>(1, elementType);\n@@ -979,1 +979,1 @@\n-        return new ArrayType<T>(cn, tn, d,\n+        return new ArrayType<>(cn, tn, d,\n@@ -1047,1 +1047,1 @@\n-        return new ArrayType<T>(cn, tn, d,\n+        return new ArrayType<>(cn, tn, d,\n","filename":"src\/java.management\/share\/classes\/javax\/management\/openmbean\/ArrayType.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,3 +29,0 @@\n-\n-\/\/ java import\n-\/\/\n@@ -36,1 +33,0 @@\n-import java.util.LinkedHashMap;\n@@ -41,2 +37,0 @@\n-\n-\/\/ jmx import\n@@ -44,1 +38,0 @@\n-\/\/\n@@ -136,1 +129,1 @@\n-        SortedMap<String, Object> map = new TreeMap<String, Object>();\n+        SortedMap<String, Object> map = new TreeMap<>();\n@@ -185,1 +178,1 @@\n-        SortedMap<String, Object> map = new TreeMap<String, Object>();\n+        SortedMap<String, Object> map = new TreeMap<>();\n@@ -217,1 +210,1 @@\n-            Set<String> extraFromType = new TreeSet<String>(namesFromType);\n+            Set<String> extraFromType = new TreeSet<>(namesFromType);\n@@ -219,1 +212,1 @@\n-            Set<String> extraFromItems = new TreeSet<String>(namesFromItems);\n+            Set<String> extraFromItems = new TreeSet<>(namesFromItems);\n","filename":"src\/java.management\/share\/classes\/javax\/management\/openmbean\/CompositeDataSupport.java","additions":5,"deletions":12,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -29,3 +29,0 @@\n-\n-\/\/ java import\n-\/\/\n@@ -37,3 +34,0 @@\n-\/\/ jmx import\n-\/\/\n-\n@@ -147,2 +141,2 @@\n-        nameToDescription = new TreeMap<String,String>();\n-        nameToType        = new TreeMap<String,OpenType<?>>();\n+        nameToDescription = new TreeMap<>();\n+        nameToType        = new TreeMap<>();\n","filename":"src\/java.management\/share\/classes\/javax\/management\/openmbean\/CompositeType.java","additions":2,"deletions":8,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -578,1 +578,1 @@\n-        Map<String, Object> map = new HashMap<String, Object>();\n+        Map<String, Object> map = new HashMap<>();\n@@ -582,1 +582,1 @@\n-            Set<T> set = new HashSet<T>();\n+            Set<T> set = new HashSet<>();\n@@ -657,1 +657,1 @@\n-        Set<T> result = new HashSet<T>();\n+        Set<T> result = new HashSet<>();\n","filename":"src\/java.management\/share\/classes\/javax\/management\/openmbean\/OpenMBeanAttributeInfoSupport.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,3 +29,0 @@\n-\n-\/\/ java import\n-\/\/\n@@ -304,2 +301,2 @@\n-        return (new HashSet<T>(Arrays.asList(a1))\n-                .equals(new HashSet<T>(Arrays.asList(a2))));\n+        return (new HashSet<>(Arrays.asList(a1))\n+                .equals(new HashSet<>(Arrays.asList(a2))));\n@@ -363,1 +360,1 @@\n-        return new HashSet<T>(Arrays.asList(a)).hashCode();\n+        return new HashSet<>(Arrays.asList(a)).hashCode();\n","filename":"src\/java.management\/share\/classes\/javax\/management\/openmbean\/OpenMBeanInfoSupport.java","additions":4,"deletions":7,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -212,1 +212,1 @@\n-        return AccessController.doPrivileged(new PrivilegedAction<Boolean>() {\n+        return AccessController.doPrivileged(new PrivilegedAction<>() {\n","filename":"src\/java.management\/share\/classes\/javax\/management\/openmbean\/OpenType.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -76,1 +76,1 @@\n-        new SimpleType<Void>(Void.class);\n+        new SimpleType<>(Void.class);\n@@ -83,1 +83,1 @@\n-        new SimpleType<Boolean>(Boolean.class);\n+        new SimpleType<>(Boolean.class);\n@@ -90,1 +90,1 @@\n-        new SimpleType<Character>(Character.class);\n+        new SimpleType<>(Character.class);\n@@ -97,1 +97,1 @@\n-        new SimpleType<Byte>(Byte.class);\n+        new SimpleType<>(Byte.class);\n@@ -104,1 +104,1 @@\n-        new SimpleType<Short>(Short.class);\n+        new SimpleType<>(Short.class);\n@@ -111,1 +111,1 @@\n-        new SimpleType<Integer>(Integer.class);\n+        new SimpleType<>(Integer.class);\n@@ -118,1 +118,1 @@\n-        new SimpleType<Long>(Long.class);\n+        new SimpleType<>(Long.class);\n@@ -125,1 +125,1 @@\n-        new SimpleType<Float>(Float.class);\n+        new SimpleType<>(Float.class);\n@@ -132,1 +132,1 @@\n-        new SimpleType<Double>(Double.class);\n+        new SimpleType<>(Double.class);\n@@ -139,1 +139,1 @@\n-        new SimpleType<String>(String.class);\n+        new SimpleType<>(String.class);\n@@ -146,1 +146,1 @@\n-        new SimpleType<BigDecimal>(BigDecimal.class);\n+        new SimpleType<>(BigDecimal.class);\n@@ -153,1 +153,1 @@\n-        new SimpleType<BigInteger>(BigInteger.class);\n+        new SimpleType<>(BigInteger.class);\n@@ -160,1 +160,1 @@\n-        new SimpleType<Date>(Date.class);\n+        new SimpleType<>(Date.class);\n@@ -167,1 +167,1 @@\n-        new SimpleType<ObjectName>(ObjectName.class);\n+        new SimpleType<>(ObjectName.class);\n@@ -297,1 +297,1 @@\n-        new HashMap<SimpleType<?>,SimpleType<?>>();\n+        new HashMap<>();\n","filename":"src\/java.management\/share\/classes\/javax\/management\/openmbean\/SimpleType.java","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -29,3 +29,0 @@\n-\n-\/\/ java import\n-\/\/\n@@ -50,3 +47,0 @@\n-\/\/ jmx import\n-\/\/\n-\n@@ -165,2 +159,2 @@\n-            new HashMap<Object,CompositeData>(initialCapacity, loadFactor) :\n-            new LinkedHashMap<Object, CompositeData>(initialCapacity, loadFactor);\n+            new HashMap<>(initialCapacity, loadFactor) :\n+            new LinkedHashMap<>(initialCapacity, loadFactor);\n@@ -515,1 +509,1 @@\n-            new ArrayList<List<?>>(values.length + 1);\n+            new ArrayList<>(values.length + 1);\n@@ -680,1 +674,1 @@\n-            c.dataMap = new HashMap<Object,CompositeData>(c.dataMap);\n+            c.dataMap = new HashMap<>(c.dataMap);\n","filename":"src\/java.management\/share\/classes\/javax\/management\/openmbean\/TabularDataSupport.java","additions":4,"deletions":10,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -29,3 +29,0 @@\n-\n-\/\/ java import\n-\/\/\n@@ -34,1 +31,0 @@\n-import java.util.Iterator;\n@@ -37,3 +33,0 @@\n-\/\/ jmx import\n-\/\/\n-\n@@ -142,1 +135,1 @@\n-        List<String> tmpList = new ArrayList<String>(indexNames.length + 1);\n+        List<String> tmpList = new ArrayList<>(indexNames.length + 1);\n","filename":"src\/java.management\/share\/classes\/javax\/management\/openmbean\/TabularType.java","additions":1,"deletions":8,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,1 +47,0 @@\n-import java.util.List;\n@@ -49,1 +48,0 @@\n-import java.util.Vector;\n@@ -141,1 +139,1 @@\n-    private List<ObjectName> selectedNames = new Vector<ObjectName>();\n+    private List<ObjectName> selectedNames = new Vector<>();\n@@ -185,1 +183,1 @@\n-        selectedNames = new Vector<ObjectName>();\n+        selectedNames = new Vector<>();\n@@ -237,1 +235,1 @@\n-        deselectedNames = new Vector<ObjectName>();\n+        deselectedNames = new Vector<>();\n@@ -291,1 +289,1 @@\n-            return new Vector<ObjectName>(selectedNames);\n+            return new Vector<>(selectedNames);\n@@ -308,1 +306,1 @@\n-            return new Vector<ObjectName>(deselectedNames);\n+            return new Vector<>(deselectedNames);\n","filename":"src\/java.management\/share\/classes\/javax\/management\/relation\/MBeanServerNotificationFilter.java","additions":6,"deletions":8,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -38,1 +38,0 @@\n-import java.security.PrivilegedAction;\n@@ -368,1 +367,1 @@\n-            result = new ArrayList<ObjectName>(unregisterMBeanList);\n+            result = new ArrayList<>(unregisterMBeanList);\n@@ -396,1 +395,1 @@\n-            result = new ArrayList<ObjectName>(oldRoleValue);\n+            result = new ArrayList<>(oldRoleValue);\n@@ -411,1 +410,1 @@\n-            result = new ArrayList<ObjectName>(newRoleValue);\n+            result = new ArrayList<>(newRoleValue);\n@@ -493,1 +492,1 @@\n-        Set<String> ctSet = new HashSet<String>(Arrays.asList(validTypes));\n+        Set<String> ctSet = new HashSet<>(Arrays.asList(validTypes));\n@@ -515,1 +514,1 @@\n-            dest = new ArrayList<ObjectName>();\n+            dest = new ArrayList<>();\n","filename":"src\/java.management\/share\/classes\/javax\/management\/relation\/RelationNotification.java","additions":5,"deletions":6,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -83,1 +83,1 @@\n-    private Map<String,Object> myRelId2ObjMap = new HashMap<String,Object>();\n+    private Map<String,Object> myRelId2ObjMap = new HashMap<>();\n@@ -87,1 +87,1 @@\n-    private Map<String,String> myRelId2RelTypeMap = new HashMap<String,String>();\n+    private Map<String,String> myRelId2RelTypeMap = new HashMap<>();\n@@ -92,1 +92,1 @@\n-        new HashMap<ObjectName,String>();\n+        new HashMap<>();\n@@ -97,1 +97,1 @@\n-        new HashMap<String,RelationType>();\n+        new HashMap<>();\n@@ -103,1 +103,1 @@\n-        new HashMap<String,List<String>>();\n+        new HashMap<>();\n@@ -112,1 +112,1 @@\n-            new HashMap<ObjectName,Map<String,List<String>>>();\n+            new HashMap<>();\n@@ -141,1 +141,1 @@\n-        new ArrayList<MBeanServerNotification>();\n+        new ArrayList<>();\n@@ -355,1 +355,1 @@\n-            result = new ArrayList<String>(myRelType2ObjMap.keySet());\n+            result = new ArrayList<>(myRelType2ObjMap.keySet());\n@@ -468,1 +468,1 @@\n-                relIdList = new ArrayList<String>(relIdList1);\n+                relIdList = new ArrayList<>(relIdList1);\n@@ -769,1 +769,1 @@\n-        List<ObjectName> newRefList = new ArrayList<ObjectName>();\n+        List<ObjectName> newRefList = new ArrayList<>();\n@@ -880,1 +880,1 @@\n-            result = new ArrayList<String>(myRelId2ObjMap.keySet());\n+            result = new ArrayList<>(myRelId2ObjMap.keySet());\n@@ -1084,1 +1084,1 @@\n-            oldValue = new ArrayList<ObjectName>(oldValue);\n+            oldValue = new ArrayList<>(oldValue);\n@@ -1208,2 +1208,1 @@\n-        List<ObjectName> oldRoleValue =\n-            new ArrayList<ObjectName>(oldValue);\n+        List<ObjectName> oldRoleValue = new ArrayList<>(oldValue);\n@@ -1212,1 +1211,1 @@\n-        List<ObjectName> newRefList = new ArrayList<ObjectName>();\n+        List<ObjectName> newRefList = new ArrayList<>();\n@@ -1247,1 +1246,1 @@\n-        List<ObjectName> obsRefList = new ArrayList<ObjectName>();\n+        List<ObjectName> obsRefList = new ArrayList<>();\n@@ -1313,1 +1312,1 @@\n-            List<ObjectName> obsRefList = new ArrayList<ObjectName>();\n+            List<ObjectName> obsRefList = new ArrayList<>();\n@@ -1342,1 +1341,1 @@\n-        List<ObjectName> refMBeanList = new ArrayList<ObjectName>();\n+        List<ObjectName> refMBeanList = new ArrayList<>();\n@@ -1345,1 +1344,1 @@\n-        List<ObjectName> nonRefObjNameList = new ArrayList<ObjectName>();\n+        List<ObjectName> nonRefObjNameList = new ArrayList<>();\n@@ -1457,2 +1456,1 @@\n-            localUnregNtfList =\n-                new ArrayList<MBeanServerNotification>(myUnregNtfList);\n+            localUnregNtfList = new ArrayList<>(myUnregNtfList);\n@@ -1460,1 +1458,1 @@\n-            myUnregNtfList = new ArrayList<MBeanServerNotification>();\n+            myUnregNtfList = new ArrayList<>();\n@@ -1470,1 +1468,1 @@\n-        List<ObjectName> obsRefList = new ArrayList<ObjectName>();\n+        List<ObjectName> obsRefList = new ArrayList<>();\n@@ -1474,1 +1472,1 @@\n-            new HashMap<ObjectName,Map<String,List<String>>>();\n+            new HashMap<>();\n@@ -1574,1 +1572,1 @@\n-        Map<String,List<String>> result = new HashMap<String,List<String>>();\n+        Map<String,List<String>> result = new HashMap<>();\n@@ -1592,1 +1590,1 @@\n-                    relIdList = new ArrayList<String>(allRelIdSet);\n+                    relIdList = new ArrayList<>(allRelIdSet);\n@@ -1596,1 +1594,1 @@\n-                    relIdList = new ArrayList<String>();\n+                    relIdList = new ArrayList<>();\n@@ -1631,1 +1629,1 @@\n-                                   new ArrayList<String>(currRoleNameList));\n+                                new ArrayList<>(currRoleNameList));\n@@ -1636,1 +1634,1 @@\n-                        List<String> dummyList = new ArrayList<String>();\n+                        List<String> dummyList = new ArrayList<>();\n@@ -1689,2 +1687,1 @@\n-        Map<ObjectName,List<String>> result =\n-            new HashMap<ObjectName,List<String>>();\n+        Map<ObjectName,List<String>> result = new HashMap<>();\n@@ -1716,1 +1713,1 @@\n-                        currRelIdList = new ArrayList<String>();\n+                        currRelIdList = new ArrayList<>();\n@@ -1760,1 +1757,1 @@\n-                result = new ArrayList<String>();\n+                result = new ArrayList<>();\n@@ -1762,1 +1759,1 @@\n-                result = new ArrayList<String>(result1);\n+                result = new ArrayList<>(result1);\n@@ -1839,1 +1836,1 @@\n-                    result = new ArrayList<ObjectName>(invokeResult);\n+                    result = new ArrayList<>(invokeResult);\n@@ -2629,1 +2626,1 @@\n-                List<String> roleNames = new ArrayList<String>();\n+                List<String> roleNames = new ArrayList<>();\n@@ -2633,1 +2630,1 @@\n-                mbeanRefMap = new HashMap<String,List<String>>();\n+                mbeanRefMap = new HashMap<>();\n@@ -2649,1 +2646,1 @@\n-                    roleNames = new ArrayList<String>();\n+                    roleNames = new ArrayList<>();\n@@ -2956,1 +2953,1 @@\n-        List<RoleInfo> roleInfoList = new ArrayList<RoleInfo>(relType.getRoleInfos());\n+        List<RoleInfo> roleInfoList = new ArrayList<>(relType.getRoleInfos());\n@@ -3029,1 +3026,1 @@\n-                relIdList = new ArrayList<String>();\n+                relIdList = new ArrayList<>();\n@@ -3044,1 +3041,1 @@\n-            List<ObjectName> dummyList = new ArrayList<ObjectName>();\n+            List<ObjectName> dummyList = new ArrayList<>();\n@@ -3253,1 +3250,1 @@\n-            List<ObjectName> emptyValue = new ArrayList<ObjectName>();\n+            List<ObjectName> emptyValue = new ArrayList<>();\n","filename":"src\/java.management\/share\/classes\/javax\/management\/relation\/RelationService.java","additions":39,"deletions":42,"binary":false,"changes":81,"status":"modified"},{"patch":"@@ -110,1 +110,1 @@\n-    private final Map<String,Role> myRoleName2ValueMap = new HashMap<String,Role>();\n+    private final Map<String,Role> myRoleName2ValueMap = new HashMap<>();\n@@ -368,1 +368,1 @@\n-                new RoleList(new ArrayList<Role>(myRoleName2ValueMap.values()));\n+                new RoleList(new ArrayList<>(myRoleName2ValueMap.values()));\n@@ -583,2 +583,1 @@\n-        Map<ObjectName,List<String>> refMBeanMap =\n-            new HashMap<ObjectName,List<String>>();\n+        Map<ObjectName,List<String>> refMBeanMap = new HashMap<>();\n@@ -604,1 +603,1 @@\n-                        mbeanRoleNameList = new ArrayList<String>();\n+                        mbeanRoleNameList = new ArrayList<>();\n@@ -839,1 +838,1 @@\n-                result = new ArrayList<ObjectName>(role.getRoleValue());\n+                result = new ArrayList<>(role.getRoleValue());\n@@ -977,2 +976,1 @@\n-            roleNameList =\n-                new ArrayList<String>(myRoleName2ValueMap.keySet());\n+            roleNameList = new ArrayList<>(myRoleName2ValueMap.keySet());\n@@ -1085,1 +1083,1 @@\n-            oldRoleValue = new ArrayList<ObjectName>();\n+            oldRoleValue = new ArrayList<>();\n@@ -1686,1 +1684,1 @@\n-        List<ObjectName> newRoleValue = new ArrayList<ObjectName>(currRoleValue);\n+        List<ObjectName> newRoleValue = new ArrayList<>(currRoleValue);\n","filename":"src\/java.management\/share\/classes\/javax\/management\/relation\/RelationSupport.java","additions":8,"deletions":10,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -141,2 +141,1 @@\n-    private Map<String,RoleInfo> roleName2InfoMap =\n-        new HashMap<String,RoleInfo>();\n+    private Map<String,RoleInfo> roleName2InfoMap = new HashMap<>();\n@@ -226,1 +225,1 @@\n-        return new ArrayList<RoleInfo>(roleName2InfoMap.values());\n+        return new ArrayList<>(roleName2InfoMap.values());\n@@ -393,1 +392,1 @@\n-        Set<String> roleNames = new HashSet<String>();\n+        Set<String> roleNames = new HashSet<>();\n","filename":"src\/java.management\/share\/classes\/javax\/management\/relation\/RelationTypeSupport.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -123,1 +123,1 @@\n-    private List<ObjectName> objectNameList = new ArrayList<ObjectName>();\n+    private List<ObjectName> objectNameList = new ArrayList<>();\n@@ -220,1 +220,1 @@\n-        objectNameList = new ArrayList<ObjectName>(roleValue);\n+        objectNameList = new ArrayList<>(roleValue);\n","filename":"src\/java.management\/share\/classes\/javax\/management\/relation\/Role.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -238,1 +238,1 @@\n-            roleValue = new ArrayList<ObjectName>(value);\n+            roleValue = new ArrayList<>(value);\n","filename":"src\/java.management\/share\/classes\/javax\/management\/relation\/RoleUnresolved.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -275,1 +275,1 @@\n-        return new HashMap<K,V>();\n+        return new HashMap<>();\n@@ -279,1 +279,1 @@\n-        return new HashMap<K,Object>(map);\n+        return new HashMap<>(map);\n@@ -452,1 +452,1 @@\n-        return parent != null ? AccessController.doPrivileged(new PrivilegedAction<ClassLoader>() {\n+        return parent != null ? AccessController.doPrivileged(new PrivilegedAction<>() {\n","filename":"src\/java.management\/share\/classes\/javax\/management\/remote\/JMXConnectorFactory.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2008, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -410,1 +410,1 @@\n-    private final List<String> connectionIds = new ArrayList<String>();\n+    private final List<String> connectionIds = new ArrayList<>();\n","filename":"src\/java.management\/share\/classes\/javax\/management\/remote\/JMXConnectorServer.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,1 +33,0 @@\n-import java.io.UncheckedIOException;\n@@ -265,1 +264,1 @@\n-            envcopy = new HashMap<String, Object>();\n+            envcopy = new HashMap<>();\n@@ -268,1 +267,1 @@\n-            envcopy = new HashMap<String, Object>(environment);\n+            envcopy = new HashMap<>(environment);\n","filename":"src\/java.management\/share\/classes\/javax\/management\/remote\/JMXConnectorServerFactory.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -249,1 +249,1 @@\n-        Set<String> notifTypes = new TreeSet<String>();\n+        Set<String> notifTypes = new TreeSet<>();\n@@ -774,1 +774,1 @@\n-        return new Vector<Integer>(timerTable.keySet());\n+        return new Vector<>(timerTable.keySet());\n@@ -791,1 +791,1 @@\n-        Vector<Integer> v = new Vector<Integer>();\n+        Vector<Integer> v = new Vector<>();\n@@ -991,2 +991,1 @@\n-        ArrayList<Object[]> values =\n-            new ArrayList<Object[]>(timerTable.values());\n+        ArrayList<Object[]> values = new ArrayList<>(timerTable.values());\n","filename":"src\/java.management\/share\/classes\/javax\/management\/timer\/Timer.java","additions":5,"deletions":6,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n-import java.util.regex.*;\n@@ -30,2 +29,0 @@\n-import java.util.ListIterator;\n-import java.util.Iterator;\n@@ -153,1 +150,1 @@\n-        threads = new ArrayList<CompilerThreadInfo>();\n+        threads = new ArrayList<>();\n","filename":"src\/java.management\/share\/classes\/sun\/management\/HotspotCompilation.java","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -27,0 +27,1 @@\n+\n@@ -619,1 +620,1 @@\n-                fromMethod = AccessController.doPrivileged(new PrivilegedExceptionAction<Method>() {\n+                fromMethod = AccessController.doPrivileged(new PrivilegedExceptionAction<>() {\n@@ -640,1 +641,1 @@\n-                    AccessController.doPrivileged(new PrivilegedAction<Method[]>() {\n+                    AccessController.doPrivileged(new PrivilegedAction<>() {\n","filename":"src\/java.management\/share\/classes\/sun\/management\/MappedMXBeanType.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -208,1 +208,1 @@\n-            new PrivilegedAction<String>() {\n+            new PrivilegedAction<>() {\n","filename":"src\/java.management\/share\/classes\/sun\/management\/VMManagementImpl.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}