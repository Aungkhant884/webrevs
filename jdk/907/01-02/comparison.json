{"files":[{"patch":"@@ -1685,0 +1685,1 @@\n+  inline void setbc( Register d, ConditionRegister cr, Condition cc);\n@@ -1686,0 +1687,1 @@\n+  inline void setnbc(Register d, ConditionRegister cr, Condition cc);\n","filename":"src\/hotspot\/cpu\/ppc\/assembler_ppc.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -386,0 +386,3 @@\n+inline void Assembler::setbc(Register d, ConditionRegister cr, Condition cc) {\n+    setbc(d, bi0(cr, cc));\n+}\n@@ -388,0 +391,3 @@\n+inline void Assembler::setnbc(Register d, ConditionRegister cr, Condition cc) {\n+    setnbc(d, bi0(cr, cc));\n+}\n","filename":"src\/hotspot\/cpu\/ppc\/assembler_ppc.inline.hpp","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -11358,0 +11358,10 @@\n+instruct cmpL_reg_reg(flagsReg crx, iRegLsrc src1, iRegLsrc src2) %{\n+  match(Set crx (CmpL src1 src2));\n+  format %{ \"CMPD    $crx, $src1, $src2\" %}\n+  size(4);\n+  ins_encode %{\n+    __ cmpd($crx$$CondRegister, $src1$$Register, $src2$$Register);\n+  %}\n+  ins_pipe(pipe_class_compare);\n+%}\n+\n@@ -11412,1 +11422,1 @@\n-instruct cmpL3_reg_reg_Ex(iRegIdst dst, iRegLsrc src1, iRegLsrc src2, flagsReg crx) %{\n+instruct cmpL3_reg_reg_Ex(iRegIdst dst, iRegLsrc src1, iRegLsrc src2) %{\n@@ -11414,1 +11424,0 @@\n-  effect(TEMP crx);\n@@ -11421,1 +11430,1 @@\n-    __ cmpd($crx$$CondRegister, $src1$$Register, $src2$$Register);\n+    __ cmpd(CCR0, $src1$$Register, $src2$$Register);\n@@ -11424,2 +11433,2 @@\n-      __ setbc(R0, cc_to_biint(Assembler::greater, $crx$$reg));\n-      __ setnbc($dst$$Register, cc_to_biint(Assembler::less, $crx$$reg));\n+      __ setbc(R0, CCR0, Assembler::greater);\n+      __ setnbc($dst$$Register, CCR0, Assembler::less);\n@@ -11757,1 +11766,1 @@\n-instruct cmpF3_reg_reg_Ex(iRegIdst dst, regF src1, regF src2, flagsReg crx) %{\n+instruct cmpF3_reg_reg_Ex(iRegIdst dst, regF src1, regF src2) %{\n@@ -11759,2 +11768,1 @@\n-  effect(TEMP crx);\n-  ins_cost(DEFAULT_COST * 5);\n+  ins_cost(DEFAULT_COST*5);\n@@ -11766,1 +11774,1 @@\n-    __ fcmpu($crx$$CondRegister, $src1$$FloatRegister, $src2$$FloatRegister);\n+    __ fcmpu(CCR0, $src1$$FloatRegister, $src2$$FloatRegister);\n@@ -11769,2 +11777,2 @@\n-      __ setbc(R0, cc_to_biint(Assembler::greater, $crx$$reg));\n-      __ setnbc($dst$$Register, cc_to_biint(Assembler::less, $crx$$reg));\n+      __ setbc(R0, CCR0, Assembler::greater);\n+      __ setnbc($dst$$Register, CCR0, Assembler::less);\n@@ -11851,1 +11859,1 @@\n-instruct cmpD3_reg_reg_Ex(iRegIdst dst, regD src1, regD src2, flagsReg crx) %{\n+instruct cmpD3_reg_reg_Ex(iRegIdst dst, regD src1, regD src2) %{\n@@ -11853,2 +11861,1 @@\n-  effect(TEMP crx);\n-  ins_cost(DEFAULT_COST * 5);\n+  ins_cost(DEFAULT_COST*5);\n@@ -11860,1 +11867,1 @@\n-    __ fcmpu($crx$$CondRegister, $src1$$FloatRegister, $src2$$FloatRegister);\n+    __ fcmpu(CCR0, $src1$$FloatRegister, $src2$$FloatRegister);\n@@ -11863,2 +11870,2 @@\n-      __ setbc(R0, cc_to_biint(Assembler::greater, $crx$$reg));\n-      __ setnbc($dst$$Register, cc_to_biint(Assembler::less, $crx$$reg));\n+      __ setbc(R0, CCR0, Assembler::greater);\n+      __ setnbc($dst$$Register, CCR0, Assembler::less);\n","filename":"src\/hotspot\/cpu\/ppc\/ppc.ad","additions":24,"deletions":17,"binary":false,"changes":41,"status":"modified"}]}