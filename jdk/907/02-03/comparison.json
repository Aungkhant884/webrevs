{"files":[{"patch":"@@ -1547,4 +1547,2 @@\n-  __ mfcr(R0); \/\/ set bit 32..33 as follows: <: 0b10, =: 0b00, >: 0b01\n-  __ srwi(Rdst, R0, 30);\n-  __ srawi(R0, R0, 31);\n-  __ orr(Rdst, R0, Rdst); \/\/ set result as follows: <: -1, =: 0, >: 1\n+\n+  __ set_cmp3(Rdst);  \/\/ set result as follows: <: -1, =: 0, >: 1\n","filename":"src\/hotspot\/cpu\/ppc\/c1_LIRAssembler_ppc.cpp","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -164,0 +164,2 @@\n+  void inline set_cmp3(Register dst); \/\/ set dst to -1, 0, +1\n+  void inline set_cmpu3(Register dst); \/\/ set dst to -1, 0, +1\n","filename":"src\/hotspot\/cpu\/ppc\/macroAssembler_ppc.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -239,0 +239,30 @@\n+\/\/ set dst to -1, 0, +1\n+inline void MacroAssembler::set_cmp3(Register dst) {\n+    \/\/ P10, prefer using setbc intructions\n+    if (VM_Version::has_brw()) {\n+      setbc(R0, CCR0, Assembler::greater);\n+      setnbc(dst, CCR0, Assembler::less);\n+    }\n+    else {\n+      mfcr(R0); \/\/ set bit 32..33 as follows: <: 0b10, =: 0b00, >: 0b01\n+      srwi(dst, R0, 30);\n+      srawi(R0, R0, 31);\n+    }\n+    orr(dst, dst, R0);\n+}\n+\n+\/\/ set dst to -1, 0, +1\n+inline void MacroAssembler::set_cmpu3(Register dst) {\n+    set_cmp3(dst);\n+    \/\/ P10, prefer using setbc intructions\n+    if (VM_Version::has_brw()) {\n+      setnbc(R0, CCR0, Assembler::summary_overflow);\n+      orr(dst, dst, R0);\n+    }\n+    else {\n+      Label done;\n+      bns(CCR0, done);\n+      li(dst, -1);\n+      bind(done);\n+    }\n+}\n","filename":"src\/hotspot\/cpu\/ppc\/macroAssembler_ppc.inline.hpp","additions":30,"deletions":0,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -11422,1 +11422,1 @@\n-instruct cmpL3_reg_reg_Ex(iRegIdst dst, iRegLsrc src1, iRegLsrc src2) %{\n+instruct cmpL3_reg_reg(iRegIdst dst, iRegLsrc src1, iRegLsrc src2) %{\n@@ -11424,2 +11424,2 @@\n-  ins_cost(DEFAULT_COST*5);\n-  size(20);\n+  ins_cost(DEFAULT_COST * (VM_Version::has_brw() ? 4 : 5));\n+  size(VM_Version::has_brw() ? 16 : 20);\n@@ -11427,1 +11427,1 @@\n-  format %{ \"cmpL3_reg_reg_Ex $dst, $src1, $src2\" %}\n+  format %{ \"cmpL3_reg_reg $dst, $src1, $src2\" %}\n@@ -11431,11 +11431,1 @@\n-    \/\/ P10, prefer using setbc intructions\n-    if (VM_Version::has_brw()) {\n-      __ setbc(R0, CCR0, Assembler::greater);\n-      __ setnbc($dst$$Register, CCR0, Assembler::less);\n-    }\n-    else {\n-      __ mfcr(R0); \/\/ set bit 32..33 as follows: <: 0b10, =: 0b00, >: 0b01\n-      __ srwi($dst$$Register, R0, 30);\n-      __ srawi(R0, R0, 31);\n-    }\n-    __ orr($dst$$Register, $dst$$Register, R0);\n+    __ set_cmp3($dst$$Register);\n@@ -11766,1 +11756,1 @@\n-instruct cmpF3_reg_reg_Ex(iRegIdst dst, regF src1, regF src2) %{\n+instruct cmpF3_reg_reg(iRegIdst dst, regF src1, regF src2) %{\n@@ -11768,2 +11758,2 @@\n-  ins_cost(DEFAULT_COST*5);\n-  size(20);\n+  ins_cost(DEFAULT_COST * (VM_Version::has_brw() ? 6 : 7));\n+  size(VM_Version::has_brw() ? 24 : 28);\n@@ -11771,1 +11761,1 @@\n-  format %{ \"cmpF3_reg_reg_Ex $dst, $src1, $src2\" %}\n+  format %{ \"cmpF3_reg_reg $dst, $src1, $src2\" %}\n@@ -11775,11 +11765,1 @@\n-    \/\/ P10, prefer using setbc intructions\n-    if (VM_Version::has_brw()) {\n-      __ setbc(R0, CCR0, Assembler::greater);\n-      __ setnbc($dst$$Register, CCR0, Assembler::less);\n-    }\n-    else {\n-      __ mfcr(R0); \/\/ set bit 32..33 as follows: <: 0b10, =: 0b00, >: 0b01\n-      __ srwi($dst$$Register, R0, 30);\n-      __ srawi(R0, R0, 31);\n-    }\n-    __ orr($dst$$Register, $dst$$Register, R0);\n+    __ set_cmpu3($dst$$Register);\n@@ -11859,1 +11839,1 @@\n-instruct cmpD3_reg_reg_Ex(iRegIdst dst, regD src1, regD src2) %{\n+instruct cmpD3_reg_reg(iRegIdst dst, regD src1, regD src2) %{\n@@ -11861,2 +11841,2 @@\n-  ins_cost(DEFAULT_COST*5);\n-  size(20);\n+  ins_cost(DEFAULT_COST * (VM_Version::has_brw() ? 6 : 7));\n+  size(VM_Version::has_brw() ? 24 : 28);\n@@ -11864,1 +11844,1 @@\n-  format %{ \"cmpD3_reg_reg_Ex $dst, $src1, $src2\" %}\n+  format %{ \"cmpD3_reg_reg $dst, $src1, $src2\" %}\n@@ -11868,11 +11848,1 @@\n-    \/\/ P10, prefer using setbc intructions\n-    if (VM_Version::has_brw()) {\n-      __ setbc(R0, CCR0, Assembler::greater);\n-      __ setnbc($dst$$Register, CCR0, Assembler::less);\n-    }\n-    else {\n-      __ mfcr(R0); \/\/ set bit 32..33 as follows: <: 0b10, =: 0b00, >: 0b01\n-      __ srwi($dst$$Register, R0, 30);\n-      __ srawi(R0, R0, 31);\n-    }\n-    __ orr($dst$$Register, $dst$$Register, R0);\n+    __ set_cmpu3($dst$$Register);\n","filename":"src\/hotspot\/cpu\/ppc\/ppc.ad","additions":15,"deletions":45,"binary":false,"changes":60,"status":"modified"},{"patch":"@@ -1593,4 +1593,1 @@\n-  __ mfcr(R17_tos); \/\/ set bit 32..33 as follows: <: 0b10, =: 0b00, >: 0b01\n-  __ srwi(Rscratch, R17_tos, 30);\n-  __ srawi(R17_tos, R17_tos, 31);\n-  __ orr(R17_tos, Rscratch, R17_tos); \/\/ set result as follows: <: -1, =: 0, >: 1\n+  __ set_cmp3(R17_tos); \/\/ set result as follows: <: -1, =: 0, >: 1\n@@ -1618,4 +1615,1 @@\n-  __ mfcr(R17_tos); \/\/ set bit 32..33 as follows: <: 0b10, =: 0b00, >: 0b01\n-  __ srwi(Rscratch, R17_tos, 30);\n-  __ srawi(R17_tos, R17_tos, 31);\n-  __ orr(R17_tos, Rscratch, R17_tos); \/\/ set result as follows: <: -1, =: 0, >: 1\n+  __ set_cmp3(R17_tos); \/\/ set result as follows: <: -1, =: 0, >: 1\n","filename":"src\/hotspot\/cpu\/ppc\/templateTable_ppc_64.cpp","additions":2,"deletions":8,"binary":false,"changes":10,"status":"modified"}]}