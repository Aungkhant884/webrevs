[{"commit":{"message":"8255553: [PPC64] Exploit branchless comparison in C2"},"files":[{"filename":"src\/hotspot\/cpu\/ppc\/ppc.ad"}],"sha":"fed1b46bb776d0bd63a9a4b1b9d55d248d3fecfc"},{"commit":{"message":"8255553: [PPC64] Introduce and use setbc and setnbc P10 instructions\n\n- setbc RT,BI: sets RT to 1 if CR(BI) is 1, otherwise 0.\n- setnbc RT,BI: sets RT to -1 if CR(BI) is 1, otherwise 0.\nRef: PowerISA 3.1, page 129.\n\nThese instructions are particularly interesting to improve the following\npattern `(src1<src2)? -1: ((src1>src2)? 1: 0)`, which can be found in\n`instruct cmpL3_reg_reg_ExEx()@ppc.ad`, by removing its branches.\n\nLong.toString, that generate such pattern in getChars, has showed a\ngood performance gain by using these new instructions.\n\nExample:\nfor (int i = 0; i < 200_000; i++)\n  res = Long.toString((long)i);\n\njava -Xcomp -XX:CompileThreshold=1 -XX:-TieredCompilation TestToString\n\nWithout setbc (average): 0.1178 seconds\nWith setbc (average): 0.0396 seconds"},"files":[{"filename":"src\/hotspot\/cpu\/ppc\/assembler_ppc.hpp"},{"filename":"src\/hotspot\/cpu\/ppc\/assembler_ppc.inline.hpp"},{"filename":"src\/hotspot\/cpu\/ppc\/ppc.ad"}],"sha":"4257fd207938b7d4953ce1c362e7cdfe97868f9c"}]