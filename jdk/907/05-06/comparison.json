{"files":[{"patch":"@@ -11422,1 +11422,1 @@\n-instruct cmpL3_reg_reg(iRegIdst dst, iRegLsrc src1, iRegLsrc src2) %{\n+instruct cmpL3_reg_reg(iRegIdst dst, iRegLsrc src1, iRegLsrc src2, flagsRegCR0 cr0) %{\n@@ -11424,0 +11424,1 @@\n+  effect(KILL cr0);\n@@ -11756,1 +11757,1 @@\n-instruct cmpF3_reg_reg(iRegIdst dst, regF src1, regF src2) %{\n+instruct cmpF3_reg_reg(iRegIdst dst, regF src1, regF src2, flagsRegCR0 cr0) %{\n@@ -11758,0 +11759,1 @@\n+  effect(KILL cr0);\n@@ -11765,2 +11767,1 @@\n-    __ cror(CCR0, Assembler::less, CCR0, Assembler::summary_overflow);\n-    __ set_cmp3($dst$$Register);\n+    __ set_cmpu3($dst$$Register, true); \/\/ C2 requires unordered to get treated like less\n@@ -11840,1 +11841,1 @@\n-instruct cmpD3_reg_reg(iRegIdst dst, regD src1, regD src2) %{\n+instruct cmpD3_reg_reg(iRegIdst dst, regD src1, regD src2, flagsRegCR0 cr0) %{\n@@ -11842,0 +11843,1 @@\n+  effect(KILL cr0);\n@@ -11849,2 +11851,1 @@\n-    __ cror(CCR0, Assembler::less, CCR0, Assembler::summary_overflow);\n-    __ set_cmp3($dst$$Register);\n+    __ set_cmpu3($dst$$Register, true); \/\/ C2 requires unordered to get treated like less\n","filename":"src\/hotspot\/cpu\/ppc\/ppc.ad","additions":8,"deletions":7,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -1612,0 +1612,1 @@\n+  assert(unordered_result == 1 || unordered_result == -1, \"only supported\");\n","filename":"src\/hotspot\/cpu\/ppc\/templateTable_ppc_64.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}