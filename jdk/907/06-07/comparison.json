{"files":[{"patch":"@@ -387,1 +387,1 @@\n-    setbc(d, bi0(cr, cc));\n+  setbc(d, bi0(cr, cc));\n@@ -392,1 +392,1 @@\n-    setnbc(d, bi0(cr, cc));\n+  setnbc(d, bi0(cr, cc));\n","filename":"src\/hotspot\/cpu\/ppc\/assembler_ppc.inline.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -164,1 +164,2 @@\n-  \/\/ set dst to -1, 0, +1\n+  \/\/ set dst to -1, 0, +1 as follows: if CCR0bi is \"greater than\", dst is set to 1,\n+  \/\/ if CCR0bi is \"equal\", dst is set to 0, otherwise it's set to -1.\n","filename":"src\/hotspot\/cpu\/ppc\/macroAssembler_ppc.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -239,1 +239,2 @@\n-\/\/ set dst to -1, 0, +1\n+\/\/ set dst to -1, 0, +1 as follows: if CCR0bi is \"greater than\", dst is set to 1,\n+\/\/ if CCR0bi is \"equal\", dst is set to 0, otherwise it's set to -1.\n@@ -244,2 +245,2 @@\n-    setbc(R0, CCR0, Assembler::greater);\n-    setnbc(dst, CCR0, Assembler::less);\n+    setbc(R0, CCR0, Assembler::greater); \/\/ Set 1 to R0 if CCR0bi is \"greater than\", otherwise 0\n+    setnbc(dst, CCR0, Assembler::less); \/\/ Set -1 to dst if CCR0bi is \"less than\", otherwise 0\n@@ -247,3 +248,3 @@\n-    mfcr(R0); \/\/ set bit 32..33 as follows: <: 0b10, =: 0b00, >: 0b01\n-    srwi(dst, R0, 30);\n-    srawi(R0, R0, 31);\n+    mfcr(R0); \/\/ copy CR register to R0\n+    srwi(dst, R0, 30); \/\/ copy the first two bits to dst\n+    srawi(R0, R0, 31); \/\/ move the first bit to last position - sign extended\n@@ -251,1 +252,1 @@\n-  orr(dst, dst, R0);\n+  orr(dst, dst, R0); \/\/ dst | R0 will be -1, 0, or +1\n","filename":"src\/hotspot\/cpu\/ppc\/macroAssembler_ppc.inline.hpp","additions":8,"deletions":7,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -1612,2 +1612,2 @@\n-  assert(unordered_result == 1 || unordered_result == -1, \"only supported\");\n-  __ set_cmpu3(R17_tos, (unordered_result == 1) ? false : true);\n+  assert(unordered_result == 1 || unordered_result == -1, \"unordered_result can be either 1 or -1\");\n+  __ set_cmpu3(R17_tos, unordered_result != 1);\n","filename":"src\/hotspot\/cpu\/ppc\/templateTable_ppc_64.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}