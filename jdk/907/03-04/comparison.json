{"files":[{"patch":"@@ -1530,1 +1530,0 @@\n-  Label done;\n@@ -1540,2 +1539,1 @@\n-    __ li(Rdst, is_unordered_less ? -1 : 1);\n-    __ bso(CCR0, done);\n+    __ set_cmpu3(Rdst, is_unordered_less); \/\/ is_unordered_less ? -1 : 1\n@@ -1544,0 +1542,1 @@\n+    __ set_cmp3(Rdst);  \/\/ set result as follows: <: -1, =: 0, >: 1\n@@ -1547,3 +1546,0 @@\n-\n-  __ set_cmp3(Rdst);  \/\/ set result as follows: <: -1, =: 0, >: 1\n-  __ bind(done);\n","filename":"src\/hotspot\/cpu\/ppc\/c1_LIRAssembler_ppc.cpp","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -164,2 +164,4 @@\n-  void inline set_cmp3(Register dst); \/\/ set dst to -1, 0, +1\n-  void inline set_cmpu3(Register dst); \/\/ set dst to -1, 0, +1\n+  \/\/ set dst to -1, 0, +1\n+  void inline set_cmp3(Register dst);\n+  \/\/ set dst to (treat_unordered_like_less ? -1 : +1)\n+  void inline set_cmpu3(Register dst, bool treat_unordered_like_less);\n","filename":"src\/hotspot\/cpu\/ppc\/macroAssembler_ppc.hpp","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -241,11 +241,11 @@\n-    \/\/ P10, prefer using setbc intructions\n-    if (VM_Version::has_brw()) {\n-      setbc(R0, CCR0, Assembler::greater);\n-      setnbc(dst, CCR0, Assembler::less);\n-    }\n-    else {\n-      mfcr(R0); \/\/ set bit 32..33 as follows: <: 0b10, =: 0b00, >: 0b01\n-      srwi(dst, R0, 30);\n-      srawi(R0, R0, 31);\n-    }\n-    orr(dst, dst, R0);\n+  assert_different_registers(dst, R0);\n+  \/\/ P10, prefer using setbc intructions\n+  if (VM_Version::has_brw()) {\n+    setbc(R0, CCR0, Assembler::greater);\n+    setnbc(dst, CCR0, Assembler::less);\n+  } else {\n+    mfcr(R0); \/\/ set bit 32..33 as follows: <: 0b10, =: 0b00, >: 0b01\n+    srwi(dst, R0, 30);\n+    srawi(R0, R0, 31);\n+  }\n+  orr(dst, dst, R0);\n@@ -254,14 +254,9 @@\n-\/\/ set dst to -1, 0, +1\n-inline void MacroAssembler::set_cmpu3(Register dst) {\n-    set_cmp3(dst);\n-    \/\/ P10, prefer using setbc intructions\n-    if (VM_Version::has_brw()) {\n-      setnbc(R0, CCR0, Assembler::summary_overflow);\n-      orr(dst, dst, R0);\n-    }\n-    else {\n-      Label done;\n-      bns(CCR0, done);\n-      li(dst, -1);\n-      bind(done);\n-    }\n+\/\/ set dst to (treat_unordered_like_less ? -1 : +1)\n+inline void MacroAssembler::set_cmpu3(Register dst, bool treat_unordered_like_less) {\n+  if (treat_unordered_like_less) {\n+    cror(CCR0, Assembler::less, CCR0, Assembler::summary_overflow); \/\/ treat unordered like less\n+  }\n+  else {\n+    cror(CCR0, Assembler::greater, CCR0, Assembler::summary_overflow); \/\/ treat unordered like greater\n+  }\n+  set_cmp3(dst);\n","filename":"src\/hotspot\/cpu\/ppc\/macroAssembler_ppc.inline.hpp","additions":20,"deletions":25,"binary":false,"changes":45,"status":"modified"},{"patch":"@@ -11424,1 +11424,1 @@\n-  ins_cost(DEFAULT_COST * (VM_Version::has_brw() ? 4 : 5));\n+  ins_cost(DEFAULT_COST * 5);\n@@ -11758,2 +11758,2 @@\n-  ins_cost(DEFAULT_COST * (VM_Version::has_brw() ? 6 : 7));\n-  size(VM_Version::has_brw() ? 24 : 28);\n+  ins_cost(DEFAULT_COST * 6);\n+  size(VM_Version::has_brw() ? 20 : 24);\n@@ -11765,1 +11765,2 @@\n-    __ set_cmpu3($dst$$Register);\n+    __ cror(CCR0, Assembler::less, CCR0, Assembler::summary_overflow);\n+    __ set_cmp3($dst$$Register);\n@@ -11841,2 +11842,2 @@\n-  ins_cost(DEFAULT_COST * (VM_Version::has_brw() ? 6 : 7));\n-  size(VM_Version::has_brw() ? 24 : 28);\n+  ins_cost(DEFAULT_COST * 6);\n+  size(VM_Version::has_brw() ? 20 : 24);\n@@ -11848,1 +11849,2 @@\n-    __ set_cmpu3($dst$$Register);\n+    __ cror(CCR0, Assembler::less, CCR0, Assembler::summary_overflow);\n+    __ set_cmp3($dst$$Register);\n","filename":"src\/hotspot\/cpu\/ppc\/ppc.ad","additions":9,"deletions":7,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -1610,1 +1610,0 @@\n-  Label Lunordered, Ldone;\n@@ -1612,10 +1611,2 @@\n-  if (unordered_result) {\n-    __ bso(CCR0, Lunordered);\n-  }\n-  __ set_cmp3(R17_tos); \/\/ set result as follows: <: -1, =: 0, >: 1\n-  if (unordered_result) {\n-    __ b(Ldone);\n-    __ bind(Lunordered);\n-    __ load_const_optimized(R17_tos, unordered_result);\n-  }\n-  __ bind(Ldone);\n+  \/\/ if unordered_result is 1, treat unordered_result like 'greater than'\n+  __ set_cmpu3(R17_tos, (unordered_result == 1) ? false : true);\n","filename":"src\/hotspot\/cpu\/ppc\/templateTable_ppc_64.cpp","additions":2,"deletions":11,"binary":false,"changes":13,"status":"modified"}]}