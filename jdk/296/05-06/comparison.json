{"files":[{"patch":"@@ -513,1 +513,1 @@\n-  if (thread->last_frame().is_runtime_frame()) {\n+  if (thread->last_frame().cb() == Runtime1::blob_for(Runtime1::handle_exception_from_callee_id)) {\n","filename":"src\/hotspot\/share\/c1\/c1_Runtime1.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -89,3 +89,0 @@\n-    if (thread->is_Java_thread()) {\n-      StackWatermarkSet::finish_processing(thread->as_Java_thread(), NULL \/* context *\/, StackWatermarkKind::gc);\n-    }\n","filename":"src\/hotspot\/share\/gc\/z\/zHeapIterator.cpp","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -362,1 +362,1 @@\n-  fr.oops_do(&verify_cl, NULL, &register_map);\n+  fr.oops_do(&verify_cl, NULL, &register_map, DerivedPointerIterationMode::_ignore);\n@@ -376,1 +376,1 @@\n-      fst.current()->oops_do(&verify_cl, NULL \/* code_cl *\/, fst.register_map());\n+      fst.current()->oops_do(&verify_cl, NULL \/* code_cl *\/, fst.register_map(), DerivedPointerIterationMode::_ignore);\n","filename":"src\/hotspot\/share\/gc\/z\/zVerify.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -35,0 +35,7 @@\n+\/\/ A thread may have multiple StackWatermarks installed, for different unrelated client\n+\/\/ applications of lazy stack processing. The StackWatermarks class is the thread-local\n+\/\/ data structure used to store said watermarks. The StackWatermarkSet is the corresponding\n+\/\/ AllStatic class you use to interact with watermarks from shared runtime code. It allows\n+\/\/ hooks for all watermarks, or requesting specific action for specific client StackWatermark\n+\/\/ instances (if they have been installed).\n+\n","filename":"src\/hotspot\/share\/runtime\/stackWatermarkSet.hpp","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -3027,0 +3027,2 @@\n+  \/\/ Finish any pending lazy GC activity for the frames\n+  StackWatermarkSet::finish_processing(this, NULL \/* context *\/, StackWatermarkKind::gc);\n","filename":"src\/hotspot\/share\/runtime\/thread.cpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"}]}