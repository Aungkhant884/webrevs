{"files":[{"patch":"@@ -1590,3 +1590,3 @@\n-C2V_VMENTRY_0(int, invokeDynamicOperandToCPIndex, (JNIEnv* env, jobject, ARGUMENT_PAIR(cp), jint operand, jboolean resolve))\n-  if (!ConstantPool::is_invokedynamic_index(operand)) {\n-    JVMCI_THROW_MSG_0(IllegalStateException, err_msg(\"not an invokedynamic index %d\", operand));\n+C2V_VMENTRY_0(int, decodeIndyIndexToCPIndex, (JNIEnv* env, jobject, ARGUMENT_PAIR(cp), jint encoded_indy_index, jboolean resolve))\n+  if (!ConstantPool::is_invokedynamic_index(encoded_indy_index)) {\n+    JVMCI_THROW_MSG_0(IllegalStateException, err_msg(\"not an encoded indy index %d\", encoded_indy_index));\n@@ -1597,1 +1597,1 @@\n-  int indy_index = cp->decode_invokedynamic_index(operand);\n+  int indy_index = cp->decode_invokedynamic_index(encoded_indy_index);\n@@ -1599,1 +1599,1 @@\n-    LinkResolver::resolve_invoke(callInfo, Handle(), cp, operand, Bytecodes::_invokedynamic, CHECK_0);\n+    LinkResolver::resolve_invoke(callInfo, Handle(), cp, encoded_indy_index, Bytecodes::_invokedynamic, CHECK_0);\n@@ -3128,1 +3128,1 @@\n-  {CC \"invokeDynamicOperandToCPIndex\",                CC \"(\" HS_CONSTANT_POOL2 \"IZ)I\",                                                      FN_PTR(invokeDynamicOperandToCPIndex)},\n+  {CC \"decodeIndyIndexToCPIndex\",                     CC \"(\" HS_CONSTANT_POOL2 \"IZ)I\",                                                      FN_PTR(decodeIndyIndexToCPIndex)},\n","filename":"src\/hotspot\/share\/jvmci\/jvmciCompilerToVM.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -274,1 +274,1 @@\n-     * Resolves the entry at index {@code cpi} in {@code constantPool} to an object, looking in the\n+     * Gets the entry at index {@code cpi} in {@code constantPool}, looking in the\n@@ -281,0 +281,3 @@\n+     *\n+     * @param resolve specifies if a resolved entry is expected. If {@code false},\n+     *                {@code null} is returned for an unresolved entry.\n@@ -390,1 +393,1 @@\n-     * Converts the operand of an invokedynamic instruction in {@code operand}\n+     * Converts the encoded indy index operand of an invokedynamic instruction\n@@ -393,2 +396,2 @@\n-     * @param resolve if {@true}, then resolve the entry (which may call the bootstrap method)\n-     * @throws IllegalArgumentException if {@code operand} is not a valid invokedynamic operand\n+     * @param resolve if {@true}, then resolve the entry (which may call a bootstrap method)\n+     * @throws IllegalArgumentException if {@code encoded_indy_index} is not an encoded indy index\n@@ -397,2 +400,2 @@\n-    int invokeDynamicOperandToCPIndex(HotSpotConstantPool constantPool, int operand, boolean resolve) {\n-        return invokeDynamicOperandToCPIndex(constantPool, constantPool.getConstantPoolPointer(), operand, resolve);\n+    int decodeIndyIndexToCPIndex(HotSpotConstantPool constantPool, int encoded_indy_index, boolean resolve) {\n+        return decodeIndyIndexToCPIndex(constantPool, constantPool.getConstantPoolPointer(), encoded_indy_index, resolve);\n@@ -401,1 +404,1 @@\n-    private native int invokeDynamicOperandToCPIndex(HotSpotConstantPool constantPool, long constantPoolPointer, int operand, boolean resolve);\n+    private native int decodeIndyIndexToCPIndex(HotSpotConstantPool constantPool, long constantPoolPointer, int encoded_indy_index, boolean resolve);\n@@ -444,1 +447,1 @@\n-     * {@link #invokeDynamicOperandToCPIndex} and {@link #resolveInvokeHandleInPool}), return the\n+     * {@link #decodeIndyIndexToCPIndex} and {@link #resolveInvokeHandleInPool}), return the\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk\/vm\/ci\/hotspot\/CompilerToVM.java","additions":11,"deletions":8,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -831,1 +831,1 @@\n-            return compilerToVM().invokeDynamicOperandToCPIndex(this, rawIndex, false);\n+            return compilerToVM().decodeIndyIndexToCPIndex(this, rawIndex, false);\n@@ -865,1 +865,1 @@\n-                index = compilerToVM().invokeDynamicOperandToCPIndex(this, cpi, true);\n+                index = compilerToVM().decodeIndyIndexToCPIndex(this, cpi, true);\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk\/vm\/ci\/hotspot\/HotSpotConstantPool.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}