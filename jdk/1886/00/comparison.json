{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -121,3 +121,3 @@\n-    HeapWord* new_top = obj + size;\n-    \/\/ The 'new_top>obj' check is needed to detect overflow of obj+size.\n-    if (new_top > obj && new_top <= end()) {\n+    \/\/ Pointer overflow check is needed here.\n+    if (end() >= obj && size <= (size_t) (end() - obj)) {\n+      HeapWord* new_top = obj + size;\n","filename":"src\/hotspot\/share\/gc\/parallel\/psPromotionLAB.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,3 +36,3 @@\n-  HeapWord* new_top = obj + size;\n-  \/\/ The 'new_top>obj' check is needed to detect overflow of obj+size.\n-  if (new_top > obj && new_top <= end()) {\n+  \/\/ Pointer overflow check is needed here.\n+  if (end() >= obj && size <= (size_t)(end() - obj)) {\n+    HeapWord* new_top = obj + size;\n","filename":"src\/hotspot\/share\/gc\/parallel\/psPromotionLAB.inline.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -634,1 +634,1 @@\n-              if (hi - 1 < hi) {\n+              if (hi != min_jint) {\n@@ -642,1 +642,1 @@\n-              if (lo + 1 > lo) {\n+              if (lo != max_jint) {\n","filename":"src\/hotspot\/share\/opto\/ifnode.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -915,1 +915,1 @@\n-        if (iv_type->_lo + next_stride <= iv_type->_lo || \/\/ overflow\n+        if (iv_type->_lo > max_jint - next_stride || \/\/ overflow\n@@ -920,1 +920,1 @@\n-        if (iv_type->_hi + next_stride >= iv_type->_hi || \/\/ overflow\n+        if (iv_type->_hi < min_jint - next_stride || \/\/ overflow\n@@ -931,2 +931,2 @@\n-  if ((stride_con > 0 && ((limit_type->_hi - stride_con) >= limit_type->_hi)) ||\n-      (stride_con < 0 && ((limit_type->_lo - stride_con) <= limit_type->_lo)))\n+  if ((stride_con > 0 && ((min_jint + stride_con) > limit_type->_hi)) ||\n+      (stride_con < 0 && ((max_jint + stride_con) < limit_type->_lo)))\n","filename":"src\/hotspot\/share\/opto\/loopTransform.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -539,1 +539,1 @@\n-  if (prev-1 != max_jint) {\n+  if (prev != min_jint) {\n","filename":"src\/hotspot\/share\/opto\/parse2.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}