{"files":[{"patch":"@@ -237,2 +237,1 @@\n-    assert(min_jint <= x && x <= max_jint, \"in range\");\n-    r = LIR_OprFact::intConst((jint)x);\n+    r = LIR_OprFact::intConst(checked_cast<jint>(x));\n","filename":"src\/hotspot\/cpu\/aarch64\/c1_LIRGenerator_aarch64.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -291,1 +291,2 @@\n-  bool imm_in_range = AsmOperand::is_rotated_imm(x);\n+  bool imm_in_range = (x >= 0) && (x <= UINT_MAX) &&\n+          AsmOperand::is_rotated_imm(checked_cast<unsigned int>(x));\n","filename":"src\/hotspot\/cpu\/arm\/c1_LIRGenerator_arm.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -250,2 +250,1 @@\n-    assert(min_jint <= x && x <= max_jint, \"in range\");\n-    r = LIR_OprFact::intConst((jint)x);\n+    r = LIR_OprFact::intConst(checked_cast<jint>(x));\n","filename":"src\/hotspot\/cpu\/ppc\/c1_LIRGenerator_ppc.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -199,2 +199,1 @@\n-    assert(min_jint <= x && x <= max_jint, \"in range\");\n-    r = LIR_OprFact::intConst((jint)x);\n+    r = LIR_OprFact::intConst(checked_cast<jint>(x));\n","filename":"src\/hotspot\/cpu\/s390\/c1_LIRGenerator_s390.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -219,2 +219,1 @@\n-    assert(min_jint <= x && x <= max_jint, \"in range\");\n-    r = LIR_OprFact::intConst((jint)x);\n+    r = LIR_OprFact::intConst(checked_cast<jint>(x));\n","filename":"src\/hotspot\/cpu\/x86\/c1_LIRGenerator_x86.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"}]}