{"files":[{"patch":"@@ -640,1 +640,1 @@\n-        boolean haveSourcePath = includeSourcePath && fileManager.hasLocation(SOURCE_PATH);\n+        boolean haveSourcePath = fileManager.hasLocation(SOURCE_PATH);\n@@ -672,6 +672,27 @@\n-        if (wantSourceFiles && !haveSourcePath) {\n-            fillIn(p, CLASS_PATH,\n-                   list(CLASS_PATH,\n-                        p,\n-                        packageName,\n-                        kinds));\n+        if (!haveSourcePath) {\n+            \/\/ The `hasSourcePath` is false, so we have no source path.\n+            \/\/ We always scans source files and class files from class path.\n+            if (wantClassFiles)\n+                fillIn(p, CLASS_PATH,\n+                       list(CLASS_PATH,\n+                            p,\n+                            packageName,\n+                            classKinds));\n+            if (wantSourceFiles)\n+                fillIn(p, CLASS_PATH,\n+                       list(CLASS_PATH,\n+                            p,\n+                            packageName,\n+                            sourceKinds));\n+        } else if (!includeSourcePath) {\n+            \/\/ The `hasSourcePath` is true and the `includeSourcePath` is false.\n+            \/\/ The `hasSourcePath` == true means that we have source path.\n+            \/\/ So we should scan source files from source path instead of class path.\n+            \/\/ And the `includeSourcePath` == false means that we should skip the source path.\n+            \/\/ So we actually don't need the source path and source files here.\n+            if (wantClassFiles)\n+                fillIn(p, CLASS_PATH,\n+                       list(CLASS_PATH,\n+                            p,\n+                            packageName,\n+                            classKinds));\n@@ -679,0 +700,2 @@\n+            \/\/ Both the `hasSourcePath` and `includeSourcePath` are true.\n+            \/\/ We scan source files from source path and scan class files from class path.\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/ClassFinder.java","additions":30,"deletions":7,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -117,3 +117,3 @@\n-                \"TestUnnamedModule.java:1:1: compiler.err.file.sb.on.source.or.patch.path.for.module\",\n-                \"TestUse.java:1:12: compiler.err.doesnt.exist: test\",\n-                \"2 errors\");\n+                \"TestUse.java:1:8: compiler.err.package.not.visible: test, \" +\n+                        \"(compiler.misc.not.def.access.does.not.read.unnamed: test, use)\",\n+                \"1 error\");\n","filename":"test\/langtools\/tools\/javac\/modules\/SourceLocationNotExist.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}