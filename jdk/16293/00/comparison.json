{"files":[{"patch":"@@ -325,0 +325,20 @@\n+    \/**\n+     * {@return the {@code Locale} of this ListFormat}\n+     *\n+     * The {@code locale} is defined by {@link #getInstance(Locale, Type, Style)} or\n+     * {@link #getInstance(String[])}.\n+     *\/\n+    public Locale getLocale() {\n+        return locale;\n+    }\n+\n+    \/**\n+     * {@return the patterns used in this ListFormat}\n+     *\n+     * The {@code patterns} are defined by {@link #getInstance(Locale, Type, Style)} or\n+     * {@link #getInstance(String[])}.\n+     *\/\n+    public String[] getPatterns() {\n+        return Arrays.copyOf(patterns, patterns.length);\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/java\/text\/ListFormat.java","additions":20,"deletions":0,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 8041488 8316974\n+ * @bug 8041488 8316974 8318569\n@@ -203,0 +203,1 @@\n+\n@@ -216,0 +217,11 @@\n+\n+    static Arguments[] getLocale_localeDependent() {\n+        return new Arguments[] {\n+                arguments(Locale.ROOT),\n+                arguments(Locale.US),\n+                arguments(Locale.GERMANY),\n+                arguments(Locale.JAPAN),\n+                arguments(Locale.SIMPLIFIED_CHINESE),\n+        };\n+    }\n+\n@@ -238,0 +250,27 @@\n+    @Test\n+    void getLocale_invariant() {\n+        var f = ListFormat.getInstance(CUSTOM_PATTERNS_FULL);\n+        assertEquals(Locale.ROOT, f.getLocale());\n+    }\n+\n+    @Test\n+    void getLocale_default() {\n+        var f = ListFormat.getInstance();\n+        assertEquals(Locale.getDefault(Locale.Category.FORMAT), f.getLocale());\n+    }\n+\n+    @ParameterizedTest\n+    @MethodSource\n+    void getLocale_localeDependent(Locale l) {\n+        var f = ListFormat.getInstance(l, ListFormat.Type.STANDARD, ListFormat.Style.FULL);\n+        assertEquals(l, f.getLocale());\n+    }\n+\n+    @Test\n+    void getPatterns_immutability() {\n+        var f = ListFormat.getInstance(CUSTOM_PATTERNS_FULL);\n+        var p = f.getPatterns();\n+        p[0] = null;\n+        assertArrayEquals(CUSTOM_PATTERNS_FULL, f.getPatterns());\n+    }\n+\n","filename":"test\/jdk\/java\/text\/Format\/ListFormat\/TestListFormat.java","additions":40,"deletions":1,"binary":false,"changes":41,"status":"modified"}]}