{"files":[{"patch":"@@ -178,2 +178,1 @@\n-    narrowOop noop = CompressedOops::encode((oop)o);\n-    uint32_t n = CompressedOops::narrow_oop_value(noop);\n+    uint32_t n = CompressedOops::narrow_oop_value((oop)o);\n","filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -62,1 +62,1 @@\n-          \/\/ FIXME: Cheating! Treating narrowKlass as a narrowOop.\n+          \/\/ Type punning compressed klass pointer as narrowOop.\n","filename":"src\/hotspot\/cpu\/ppc\/relocInfo_ppc.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1276,3 +1276,1 @@\n-\n-  narrowOop no = CompressedOops::encode(o);\n-  return patch_load_const_32to64(pos, CompressedOops::narrow_oop_value(no));\n+  return patch_load_const_32to64(pos, CompressedOops::narrow_oop_value(o));\n@@ -1294,3 +1292,1 @@\n-\n-  narrowOop no = CompressedOops::encode(o);\n-  return patch_compare_immediate_32(pos, CompressedOops::narrow_oop_value(no));\n+  return patch_compare_immediate_32(pos, CompressedOops::narrow_oop_value(o));\n","filename":"src\/hotspot\/cpu\/s390\/macroAssembler_s390.cpp","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -55,2 +55,1 @@\n-      narrowOop narrow_oop = CompressedOops::encode((oop)x);\n-      uint32_t encoded = CompressedOops::narrow_oop_value(narrow_oop);\n+      uint32_t encoded = CompressedOops::narrow_oop_value((oop)x);\n","filename":"src\/hotspot\/cpu\/x86\/relocInfo_x86.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -753,1 +753,1 @@\n-    _writer->add(hash, CompressedOops::narrow_oop_value(CompressedOops::encode(new_s)));\n+    _writer->add(hash, CompressedOops::narrow_oop_value(new_s));\n","filename":"src\/hotspot\/share\/classfile\/stringTable.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -385,1 +385,1 @@\n-  _subgraph_entry_fields->append(CompressedOops::narrow_oop_value(CompressedOops::encode(v)));\n+  _subgraph_entry_fields->append(CompressedOops::narrow_oop_value(v));\n","filename":"src\/hotspot\/share\/memory\/heapShared.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -134,3 +134,2 @@\n-  static uint32_t narrow_oop_value(narrowOop o) {\n-    return static_cast<uint32_t>(o);\n-  }\n+  static uint32_t narrow_oop_value(oop o);\n+  static uint32_t narrow_oop_value(narrowOop o);\n@@ -139,6 +138,1 @@\n-  static narrowOop narrow_oop_cast(T i) {\n-    static_assert(std::is_integral<T>::value, \"precondition\");\n-    static_assert(sizeof(T) >= sizeof(narrowOop), \"precondition\");\n-    assert(i == static_cast<T>(static_cast<uint32_t>(i)), \"narrowOop overflow\");\n-    return static_cast<narrowOop>(static_cast<uint32_t>(i));\n-  }\n+  static narrowOop narrow_oop_cast(T i);\n","filename":"src\/hotspot\/share\/oops\/compressedOops.hpp","additions":3,"deletions":9,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -74,0 +74,17 @@\n+inline uint32_t CompressedOops::narrow_oop_value(oop o) {\n+  return narrow_oop_value(encode(o));\n+}\n+\n+inline uint32_t CompressedOops::narrow_oop_value(narrowOop o) {\n+  return static_cast<uint32_t>(o);\n+}\n+\n+template<typename T>\n+inline narrowOop CompressedOops::narrow_oop_cast(T i) {\n+  static_assert(std::is_integral<T>::value, \"precondition\");\n+  uint32_t narrow_value = static_cast<uint32_t>(i);\n+  \/\/ Ensure no bits lost in conversion to uint32_t.\n+  assert(i == static_cast<T>(narrow_value), \"narrowOop overflow\");\n+  return static_cast<narrowOop>(narrow_value);\n+}\n+\n","filename":"src\/hotspot\/share\/oops\/compressedOops.inline.hpp","additions":17,"deletions":0,"binary":false,"changes":17,"status":"modified"}]}