{"files":[{"patch":"@@ -166,1 +166,1 @@\n-    public static final Source MIN = Source.JDK7;\n+    public static final Source MIN = Source.JDK8;\n@@ -210,1 +210,1 @@\n-        DIAMOND(JDK7, Fragments.FeatureDiamond, DiagKind.NORMAL),\n+        DIAMOND(MIN, Fragments.FeatureDiamond, DiagKind.NORMAL), \/\/ Used in Analyzer\n@@ -216,1 +216,0 @@\n-        METHOD_REFERENCES(JDK8, Fragments.FeatureMethodReferences, DiagKind.PLURAL),\n@@ -218,2 +217,0 @@\n-        STATIC_INTERFACE_METHODS(JDK8, Fragments.FeatureStaticIntfMethods, DiagKind.PLURAL),\n-        STATIC_INTERFACE_METHODS_INVOKE(JDK8, Fragments.FeatureStaticIntfMethodInvoke, DiagKind.PLURAL),\n@@ -221,9 +218,1 @@\n-        EFFECTIVELY_FINAL_IN_INNER_CLASSES(JDK8),\n-        TYPE_ANNOTATIONS(JDK8, Fragments.FeatureTypeAnnotations, DiagKind.PLURAL),\n-        ANNOTATIONS_AFTER_TYPE_PARAMS(JDK8, Fragments.FeatureAnnotationsAfterTypeParams, DiagKind.PLURAL),\n-        REPEATED_ANNOTATIONS(JDK8, Fragments.FeatureRepeatableAnnotations, DiagKind.PLURAL),\n-        INTERSECTION_TYPES_IN_CAST(JDK8, Fragments.FeatureIntersectionTypesInCast, DiagKind.PLURAL),\n-        GRAPH_INFERENCE(JDK8),\n-        FUNCTIONAL_INTERFACE_MOST_SPECIFIC(JDK8),\n-        POST_APPLICABILITY_VARARGS_ACCESS_CHECK(JDK8),\n-        MAP_CAPTURES_TO_BOUNDS(MIN, JDK7),\n+        GRAPH_INFERENCE(JDK8), \/\/ Used in Analyzer\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Source.java","additions":3,"deletions":14,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -2128,15 +2128,0 @@\n-            \/\/ Per JDK-8075793: in pre-8 sources, follow legacy javac behavior\n-            \/\/ when capture variables are inferred as bounds: for lower bounds,\n-            \/\/ map to the capture variable's upper bound; for upper bounds,\n-            \/\/ if the capture variable has a lower bound, map to that type\n-            if (types.mapCapturesToBounds) {\n-                switch (ib) {\n-                    case LOWER:\n-                        bound = types.cvarUpperBound(bound);\n-                        break;\n-                    case UPPER:\n-                        Type altBound = types.cvarLowerBound(bound);\n-                        if (!altBound.hasTag(TypeTag.BOT)) bound = altBound;\n-                        break;\n-                }\n-            }\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Type.java","additions":1,"deletions":16,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -95,2 +95,0 @@\n-    final boolean allowDefaultMethods;\n-    final boolean mapCapturesToBounds;\n@@ -118,2 +116,0 @@\n-        allowDefaultMethods = Feature.DEFAULT_METHODS.allowedInSource(source);\n-        mapCapturesToBounds = Feature.MAP_CAPTURES_TO_BOUNDS.allowedInSource(source);\n@@ -3129,5 +3125,3 @@\n-                            if (allowDefaultMethods) {\n-                                MethodSymbol prov = interfaceCandidates(impl.type, absmeth).head;\n-                                if (prov != null && prov.overrides(absmeth, impl, this, true)) {\n-                                    implmeth = prov;\n-                                }\n+                            MethodSymbol prov = interfaceCandidates(impl.type, absmeth).head;\n+                            if (prov != null && prov.overrides(absmeth, impl, this, true)) {\n+                                implmeth = prov;\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Types.java","additions":3,"deletions":9,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -104,1 +104,0 @@\n-    private final boolean allowRepeatedAnnos;\n@@ -127,1 +126,0 @@\n-        allowRepeatedAnnos = Feature.REPEATED_ANNOTATIONS.allowedInSource(source);\n@@ -350,3 +348,0 @@\n-                    if (!allowRepeatedAnnos) {\n-                        log.error(DiagnosticFlag.SOURCE_LEVEL, a.pos(), Feature.REPEATED_ANNOTATIONS.error(sourceName));\n-                    }\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Annotate.java","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -170,1 +170,0 @@\n-        allowTypeAnnos = Feature.TYPE_ANNOTATIONS.allowedInSource(source);\n@@ -172,2 +171,0 @@\n-        allowDefaultMethods = Feature.DEFAULT_METHODS.allowedInSource(source);\n-        allowStaticInterfaceMethods = Feature.STATIC_INTERFACE_METHODS.allowedInSource(source);\n@@ -196,4 +193,0 @@\n-    \/** Switch: support type annotations.\n-     *\/\n-    boolean allowTypeAnnos;\n-\n@@ -204,8 +197,0 @@\n-    \/** Switch: support default methods ?\n-     *\/\n-    boolean allowDefaultMethods;\n-\n-    \/** Switch: static interface methods enabled?\n-     *\/\n-    boolean allowStaticInterfaceMethods;\n-\n@@ -4467,4 +4452,0 @@\n-            if (!allowStaticInterfaceMethods && sitesym.isInterface() &&\n-                    sym.isStatic() && sym.kind == MTH) {\n-                log.error(DiagnosticFlag.SOURCE_LEVEL, tree.pos(), Feature.STATIC_INTERFACE_METHODS_INVOKE.error(sourceName));\n-            }\n@@ -5576,3 +5557,1 @@\n-            if (allowDefaultMethods) {\n-                chk.checkDefaultMethodClashes(tree.pos(), c.type);\n-            }\n+            chk.checkDefaultMethodClashes(tree.pos(), c.type);\n@@ -5634,3 +5613,2 @@\n-        if (allowTypeAnnos) {\n-            \/\/ Correctly organize the positions of the type annotations\n-            typeAnnotations.organizeTypeAnnotationsBodies(tree);\n+        \/\/ Correctly organize the positions of the type annotations\n+        typeAnnotations.organizeTypeAnnotationsBodies(tree);\n@@ -5638,3 +5616,2 @@\n-            \/\/ Check type annotations applicability rules\n-            validateTypeAnnotations(tree, false);\n-        }\n+        \/\/ Check type annotations applicability rules\n+        validateTypeAnnotations(tree, false);\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java","additions":5,"deletions":28,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -2727,1 +2727,0 @@\n-                Feature.DEFAULT_METHODS.allowedInSource(source) &&\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Check.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -213,1 +213,0 @@\n-    private final boolean allowEffectivelyFinalInInnerClasses;\n@@ -338,1 +337,0 @@\n-        allowEffectivelyFinalInInnerClasses = Feature.EFFECTIVELY_FINAL_IN_INNER_CLASSES.allowedInSource(source);\n@@ -3076,6 +3074,0 @@\n-                        if (!allowEffectivelyFinalInInnerClasses) {\n-                            if ((sym.flags() & FINAL) == 0) {\n-                                reportInnerClsNeedsFinalError(pos, sym);\n-                            }\n-                            break;\n-                        }\n@@ -3102,4 +3094,0 @@\n-                            if (!allowEffectivelyFinalInInnerClasses) {\n-                                reportInnerClsNeedsFinalError(tree, sym);\n-                                break;\n-                            }\n@@ -3124,5 +3112,0 @@\n-        void reportInnerClsNeedsFinalError(DiagnosticPosition pos, Symbol sym) {\n-            log.error(pos,\n-                      Errors.LocalVarAccessedFromIclsNeedsFinal(sym));\n-        }\n-\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Flow.java","additions":0,"deletions":17,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -109,1 +109,0 @@\n-    public final boolean allowFunctionalInterfaceMostSpecific;\n@@ -112,1 +111,0 @@\n-    public final boolean checkVarargsAccessAfterResolution;\n@@ -148,1 +146,0 @@\n-        allowFunctionalInterfaceMostSpecific = Feature.FUNCTIONAL_INTERFACE_MOST_SPECIFIC.allowedInSource(source);\n@@ -151,2 +148,0 @@\n-        checkVarargsAccessAfterResolution =\n-                Feature.POST_APPLICABILITY_VARARGS_ACCESS_CHECK.allowedInSource(source);\n@@ -918,1 +913,1 @@\n-                if (deferredAttrContext.mode == AttrMode.CHECK || !checkVarargsAccessAfterResolution) {\n+                if (deferredAttrContext.mode == AttrMode.CHECK) {\n@@ -1173,3 +1168,2 @@\n-                if (allowFunctionalInterfaceMostSpecific &&\n-                        unrelatedFunctionalInterfaces(found, req) &&\n-                        (actual != null && actual.getTag() == DEFERRED)) {\n+                if (unrelatedFunctionalInterfaces(found, req) &&\n+                    (actual != null && actual.getTag() == DEFERRED)) {\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Resolve.java","additions":3,"deletions":9,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -82,3 +82,0 @@\n-    \/** Switch: are default methods supported? *\/\n-    private final boolean allowInterfaceBridges;\n-\n@@ -96,1 +93,0 @@\n-        allowInterfaceBridges = Feature.DEFAULT_METHODS.allowedInSource(source);\n@@ -974,3 +970,1 @@\n-                if (allowInterfaceBridges || (tree.sym.flags() & INTERFACE) == 0) {\n-                    addBridges(tree.pos(), c, bridges);\n-                }\n+                addBridges(tree.pos(), c, bridges);\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/TransTypes.java","additions":1,"deletions":7,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -145,1 +145,0 @@\n-        allowTypeAnnos = Feature.TYPE_ANNOTATIONS.allowedInSource(source);\n@@ -149,4 +148,0 @@\n-    \/** Switch: support type annotations.\n-     *\/\n-    boolean allowTypeAnnos;\n-\n@@ -1069,4 +1064,2 @@\n-            if (allowTypeAnnos) {\n-                typeAnnotations.organizeTypeAnnotationsSignatures(env, (JCClassDecl)env.tree);\n-                typeAnnotations.validateTypeAnnotationsSignatures(env, (JCClassDecl)env.tree);\n-            }\n+            typeAnnotations.organizeTypeAnnotationsSignatures(env, (JCClassDecl)env.tree);\n+            typeAnnotations.validateTypeAnnotationsSignatures(env, (JCClassDecl)env.tree);\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/TypeEnter.java","additions":2,"deletions":9,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -113,1 +113,1 @@\n-    public static final Target MIN = Target.JDK1_7;\n+    public static final Target MIN = Target.JDK1_8;\n@@ -117,0 +117,2 @@\n+    public static final Target DEFAULT = MAX;\n+\n@@ -139,2 +141,0 @@\n-    public static final Target DEFAULT = values()[values().length - 1];\n-\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/jvm\/Target.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -612,4 +612,0 @@\n-        if (lintOptions && options.isSet(Option.PARAMETERS) && !target.hasMethodParameters()) {\n-            log.warning(Warnings.OptionParametersUnsupported(target, Target.JDK1_8));\n-        }\n-\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/main\/Arguments.java","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -589,2 +589,0 @@\n-                \/\/ Make sure we're using a supported source version.\n-                checkSourceLevel(Feature.TYPE_ANNOTATIONS);\n@@ -1022,1 +1020,0 @@\n-                            checkSourceLevel(mods.annotations.head.pos, Feature.TYPE_ANNOTATIONS);\n@@ -1225,1 +1222,0 @@\n-                           checkSourceLevel(Feature.INTERSECTION_TYPES_IN_CAST);\n@@ -2320,1 +2316,0 @@\n-        checkSourceLevel(Feature.METHOD_REFERENCES);\n@@ -3364,3 +3359,0 @@\n-        if (kind == Tag.TYPE_ANNOTATION) {\n-            checkSourceLevel(Feature.TYPE_ANNOTATIONS);\n-        }\n@@ -4359,1 +4351,0 @@\n-                    checkSourceLevel(annosAfterParams.head.pos, Feature.ANNOTATIONS_AFTER_TYPE_PARAMS);\n@@ -4522,3 +4513,0 @@\n-            if ((mods.flags & Flags.STATIC) != 0) {\n-                checkSourceLevel(Feature.STATIC_INTERFACE_METHODS);\n-            }\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/parser\/JavacParser.java","additions":0,"deletions":12,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -766,4 +766,0 @@\n-# 0: symbol\n-compiler.err.local.var.accessed.from.icls.needs.final=\\\n-    local variable {0} is accessed from within inner class; needs to be declared final\n-\n@@ -2041,5 +2037,0 @@\n-\n-# 0: target, 1: target\n-compiler.warn.option.parameters.unsupported=\\\n-    -parameters is not supported for target value {0}. Use {1} or later.\n-\n@@ -3033,9 +3024,0 @@\n-compiler.misc.feature.type.annotations=\\\n-    type annotations\n-\n-compiler.misc.feature.annotations.after.type.params=\\\n-    annotations after method type parameters\n-\n-compiler.misc.feature.repeatable.annotations=\\\n-    repeated annotations\n-\n@@ -3048,3 +3030,0 @@\n-compiler.misc.feature.method.references=\\\n-    method references\n-\n@@ -3054,9 +3033,0 @@\n-compiler.misc.feature.intersection.types.in.cast=\\\n-    intersection types\n-\n-compiler.misc.feature.static.intf.methods=\\\n-    static interface methods\n-\n-compiler.misc.feature.static.intf.method.invoke=\\\n-    static interface method invocations\n-\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/compiler.properties","additions":0,"deletions":30,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -1,1634 +0,0 @@\n-#\n-# Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.  Oracle designates this\n-# particular file as subject to the \"Classpath\" exception as provided\n-# by Oracle in the LICENSE file that accompanied this code.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-# ##########################################################\n-# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n-# ##########################################################\n-#\n-class name java\/io\/BufferedReader\n--method name lines descriptor ()Ljava\/util\/stream\/Stream;\n-\n-class name java\/io\/FileFilter\n-header extends java\/lang\/Object flags 601\n-\n-class name java\/io\/FilenameFilter\n-header extends java\/lang\/Object flags 601\n-\n-class name java\/io\/ObjectStreamClass\n--method name forClass descriptor ()Ljava\/lang\/Class;\n-method name forClass descriptor ()Ljava\/lang\/Class; flags 1 signature ()Ljava\/lang\/Class<*>;\n-\n-class name java\/io\/ObjectStreamField\n--method name getType descriptor ()Ljava\/lang\/Class;\n-method name getType descriptor ()Ljava\/lang\/Class; flags 1 signature ()Ljava\/lang\/Class<*>;\n-\n-class name java\/io\/RandomAccessFile\n--method name seek descriptor (J)V\n-method name seek descriptor (J)V thrownTypes java\/io\/IOException flags 101\n-\n--class name java\/io\/UncheckedIOException\n-\n-class name java\/lang\/Boolean\n--method name hashCode descriptor (Z)I\n--method name logicalAnd descriptor (ZZ)Z\n--method name logicalOr descriptor (ZZ)Z\n--method name logicalXor descriptor (ZZ)Z\n-\n-class name java\/lang\/Byte\n--field name BYTES descriptor I\n--method name hashCode descriptor (B)I\n--method name toUnsignedInt descriptor (B)I\n--method name toUnsignedLong descriptor (B)J\n-\n-class name java\/lang\/CharSequence\n-header extends java\/lang\/Object flags 601\n--method name chars descriptor ()Ljava\/util\/stream\/IntStream;\n--method name codePoints descriptor ()Ljava\/util\/stream\/IntStream;\n-\n-class name java\/lang\/Character\n--field name BYTES descriptor I\n--method name hashCode descriptor (C)I\n-\n-class name java\/lang\/Character$UnicodeBlock\n--field name ARABIC_EXTENDED_A descriptor Ljava\/lang\/Character$UnicodeBlock;\n--field name SUNDANESE_SUPPLEMENT descriptor Ljava\/lang\/Character$UnicodeBlock;\n--field name MEETEI_MAYEK_EXTENSIONS descriptor Ljava\/lang\/Character$UnicodeBlock;\n--field name MEROITIC_HIEROGLYPHS descriptor Ljava\/lang\/Character$UnicodeBlock;\n--field name MEROITIC_CURSIVE descriptor Ljava\/lang\/Character$UnicodeBlock;\n--field name SORA_SOMPENG descriptor Ljava\/lang\/Character$UnicodeBlock;\n--field name CHAKMA descriptor Ljava\/lang\/Character$UnicodeBlock;\n--field name SHARADA descriptor Ljava\/lang\/Character$UnicodeBlock;\n--field name TAKRI descriptor Ljava\/lang\/Character$UnicodeBlock;\n--field name MIAO descriptor Ljava\/lang\/Character$UnicodeBlock;\n--field name ARABIC_MATHEMATICAL_ALPHABETIC_SYMBOLS descriptor Ljava\/lang\/Character$UnicodeBlock;\n-\n-class name java\/lang\/Character$UnicodeScript\n--field name MEROITIC_HIEROGLYPHS descriptor Ljava\/lang\/Character$UnicodeScript;\n--field name MEROITIC_CURSIVE descriptor Ljava\/lang\/Character$UnicodeScript;\n--field name SORA_SOMPENG descriptor Ljava\/lang\/Character$UnicodeScript;\n--field name CHAKMA descriptor Ljava\/lang\/Character$UnicodeScript;\n--field name SHARADA descriptor Ljava\/lang\/Character$UnicodeScript;\n--field name TAKRI descriptor Ljava\/lang\/Character$UnicodeScript;\n--field name MIAO descriptor Ljava\/lang\/Character$UnicodeScript;\n-\n-class name java\/lang\/Class\n--method name toGenericString descriptor ()Ljava\/lang\/String;\n--method name forName descriptor (Ljava\/lang\/String;)Ljava\/lang\/Class;\n--method name forName descriptor (Ljava\/lang\/String;ZLjava\/lang\/ClassLoader;)Ljava\/lang\/Class;\n--method name newInstance descriptor ()Ljava\/lang\/Object;\n--method name getClassLoader descriptor ()Ljava\/lang\/ClassLoader;\n--method name getInterfaces descriptor ()[Ljava\/lang\/Class;\n--method name getEnclosingMethod descriptor ()Ljava\/lang\/reflect\/Method;\n--method name getEnclosingConstructor descriptor ()Ljava\/lang\/reflect\/Constructor;\n--method name getDeclaringClass descriptor ()Ljava\/lang\/Class;\n--method name getEnclosingClass descriptor ()Ljava\/lang\/Class;\n--method name getTypeName descriptor ()Ljava\/lang\/String;\n--method name getClasses descriptor ()[Ljava\/lang\/Class;\n--method name getFields descriptor ()[Ljava\/lang\/reflect\/Field;\n--method name getMethods descriptor ()[Ljava\/lang\/reflect\/Method;\n--method name getConstructors descriptor ()[Ljava\/lang\/reflect\/Constructor;\n--method name getField descriptor (Ljava\/lang\/String;)Ljava\/lang\/reflect\/Field;\n--method name getMethod descriptor (Ljava\/lang\/String;[Ljava\/lang\/Class;)Ljava\/lang\/reflect\/Method;\n--method name getConstructor descriptor ([Ljava\/lang\/Class;)Ljava\/lang\/reflect\/Constructor;\n--method name getDeclaredClasses descriptor ()[Ljava\/lang\/Class;\n--method name getDeclaredFields descriptor ()[Ljava\/lang\/reflect\/Field;\n--method name getDeclaredMethods descriptor ()[Ljava\/lang\/reflect\/Method;\n--method name getDeclaredConstructors descriptor ()[Ljava\/lang\/reflect\/Constructor;\n--method name getDeclaredField descriptor (Ljava\/lang\/String;)Ljava\/lang\/reflect\/Field;\n--method name getDeclaredMethod descriptor (Ljava\/lang\/String;[Ljava\/lang\/Class;)Ljava\/lang\/reflect\/Method;\n--method name getDeclaredConstructor descriptor ([Ljava\/lang\/Class;)Ljava\/lang\/reflect\/Constructor;\n--method name getAnnotationsByType descriptor (Ljava\/lang\/Class;)[Ljava\/lang\/annotation\/Annotation;\n--method name getDeclaredAnnotation descriptor (Ljava\/lang\/Class;)Ljava\/lang\/annotation\/Annotation;\n--method name getDeclaredAnnotationsByType descriptor (Ljava\/lang\/Class;)[Ljava\/lang\/annotation\/Annotation;\n--method name getAnnotatedSuperclass descriptor ()Ljava\/lang\/reflect\/AnnotatedType;\n--method name getAnnotatedInterfaces descriptor ()[Ljava\/lang\/reflect\/AnnotatedType;\n-method name forName descriptor (Ljava\/lang\/String;)Ljava\/lang\/Class; thrownTypes java\/lang\/ClassNotFoundException flags 9 signature (Ljava\/lang\/String;)Ljava\/lang\/Class<*>;\n-method name forName descriptor (Ljava\/lang\/String;ZLjava\/lang\/ClassLoader;)Ljava\/lang\/Class; thrownTypes java\/lang\/ClassNotFoundException flags 9 signature (Ljava\/lang\/String;ZLjava\/lang\/ClassLoader;)Ljava\/lang\/Class<*>;\n-method name newInstance descriptor ()Ljava\/lang\/Object; thrownTypes java\/lang\/InstantiationException,java\/lang\/IllegalAccessException flags 1 signature ()TT;\n-method name getClassLoader descriptor ()Ljava\/lang\/ClassLoader; flags 1\n-method name getInterfaces descriptor ()[Ljava\/lang\/Class; flags 101 signature ()[Ljava\/lang\/Class<*>;\n-method name getEnclosingMethod descriptor ()Ljava\/lang\/reflect\/Method; flags 1\n-method name getEnclosingConstructor descriptor ()Ljava\/lang\/reflect\/Constructor; flags 1 signature ()Ljava\/lang\/reflect\/Constructor<*>;\n-method name getDeclaringClass descriptor ()Ljava\/lang\/Class; flags 101 signature ()Ljava\/lang\/Class<*>;\n-method name getEnclosingClass descriptor ()Ljava\/lang\/Class; flags 1 signature ()Ljava\/lang\/Class<*>;\n-method name getClasses descriptor ()[Ljava\/lang\/Class; flags 1 signature ()[Ljava\/lang\/Class<*>;\n-method name getFields descriptor ()[Ljava\/lang\/reflect\/Field; thrownTypes java\/lang\/SecurityException flags 1\n-method name getMethods descriptor ()[Ljava\/lang\/reflect\/Method; thrownTypes java\/lang\/SecurityException flags 1\n-method name getConstructors descriptor ()[Ljava\/lang\/reflect\/Constructor; thrownTypes java\/lang\/SecurityException flags 1 signature ()[Ljava\/lang\/reflect\/Constructor<*>;\n-method name getField descriptor (Ljava\/lang\/String;)Ljava\/lang\/reflect\/Field; thrownTypes java\/lang\/NoSuchFieldException,java\/lang\/SecurityException flags 1\n-method name getMethod descriptor (Ljava\/lang\/String;[Ljava\/lang\/Class;)Ljava\/lang\/reflect\/Method; thrownTypes java\/lang\/NoSuchMethodException,java\/lang\/SecurityException flags 81 signature (Ljava\/lang\/String;[Ljava\/lang\/Class<*>;)Ljava\/lang\/reflect\/Method;\n-method name getConstructor descriptor ([Ljava\/lang\/Class;)Ljava\/lang\/reflect\/Constructor; thrownTypes java\/lang\/NoSuchMethodException,java\/lang\/SecurityException flags 81 signature ([Ljava\/lang\/Class<*>;)Ljava\/lang\/reflect\/Constructor<TT;>;\n-method name getDeclaredClasses descriptor ()[Ljava\/lang\/Class; thrownTypes java\/lang\/SecurityException flags 1 signature ()[Ljava\/lang\/Class<*>;\n-method name getDeclaredFields descriptor ()[Ljava\/lang\/reflect\/Field; thrownTypes java\/lang\/SecurityException flags 1\n-method name getDeclaredMethods descriptor ()[Ljava\/lang\/reflect\/Method; thrownTypes java\/lang\/SecurityException flags 1\n-method name getDeclaredConstructors descriptor ()[Ljava\/lang\/reflect\/Constructor; thrownTypes java\/lang\/SecurityException flags 1 signature ()[Ljava\/lang\/reflect\/Constructor<*>;\n-method name getDeclaredField descriptor (Ljava\/lang\/String;)Ljava\/lang\/reflect\/Field; thrownTypes java\/lang\/NoSuchFieldException,java\/lang\/SecurityException flags 1\n-method name getDeclaredMethod descriptor (Ljava\/lang\/String;[Ljava\/lang\/Class;)Ljava\/lang\/reflect\/Method; thrownTypes java\/lang\/NoSuchMethodException,java\/lang\/SecurityException flags 81 signature (Ljava\/lang\/String;[Ljava\/lang\/Class<*>;)Ljava\/lang\/reflect\/Method;\n-method name getDeclaredConstructor descriptor ([Ljava\/lang\/Class;)Ljava\/lang\/reflect\/Constructor; thrownTypes java\/lang\/NoSuchMethodException,java\/lang\/SecurityException flags 81 signature ([Ljava\/lang\/Class<*>;)Ljava\/lang\/reflect\/Constructor<TT;>;\n-\n-class name java\/lang\/ClassLoader\n--method name registerAsParallelCapable descriptor ()Z\n--method name getParent descriptor ()Ljava\/lang\/ClassLoader;\n--method name getSystemClassLoader descriptor ()Ljava\/lang\/ClassLoader;\n-method name registerAsParallelCapable descriptor ()Z flags c\n-method name getParent descriptor ()Ljava\/lang\/ClassLoader; flags 11\n-method name getSystemClassLoader descriptor ()Ljava\/lang\/ClassLoader; flags 9\n-\n-class name java\/lang\/Double\n--field name BYTES descriptor I\n--method name isFinite descriptor (D)Z\n--method name hashCode descriptor (D)I\n--method name sum descriptor (DD)D\n--method name max descriptor (DD)D\n--method name min descriptor (DD)D\n-\n-class name java\/lang\/Float\n--field name BYTES descriptor I\n--method name isFinite descriptor (F)Z\n--method name hashCode descriptor (F)I\n--method name sum descriptor (FF)F\n--method name max descriptor (FF)F\n--method name min descriptor (FF)F\n-\n--class name java\/lang\/FunctionalInterface\n-\n-class name java\/lang\/Integer\n--field name BYTES descriptor I\n--method name toUnsignedString descriptor (II)Ljava\/lang\/String;\n--method name toUnsignedString descriptor (I)Ljava\/lang\/String;\n--method name parseUnsignedInt descriptor (Ljava\/lang\/String;I)I\n--method name parseUnsignedInt descriptor (Ljava\/lang\/String;)I\n--method name hashCode descriptor (I)I\n--method name compareUnsigned descriptor (II)I\n--method name toUnsignedLong descriptor (I)J\n--method name divideUnsigned descriptor (II)I\n--method name remainderUnsigned descriptor (II)I\n--method name sum descriptor (II)I\n--method name max descriptor (II)I\n--method name min descriptor (II)I\n-\n-class name java\/lang\/InternalError\n--method name <init> descriptor (Ljava\/lang\/String;Ljava\/lang\/Throwable;)V\n--method name <init> descriptor (Ljava\/lang\/Throwable;)V\n-\n-class name java\/lang\/Iterable\n--method name forEach descriptor (Ljava\/util\/function\/Consumer;)V\n--method name spliterator descriptor ()Ljava\/util\/Spliterator;\n-\n-class name java\/lang\/Long\n--field name BYTES descriptor I\n--method name toUnsignedString descriptor (JI)Ljava\/lang\/String;\n--method name toUnsignedString descriptor (J)Ljava\/lang\/String;\n--method name parseUnsignedLong descriptor (Ljava\/lang\/String;I)J\n--method name parseUnsignedLong descriptor (Ljava\/lang\/String;)J\n--method name hashCode descriptor (J)I\n--method name compareUnsigned descriptor (JJ)I\n--method name divideUnsigned descriptor (JJ)J\n--method name remainderUnsigned descriptor (JJ)J\n--method name sum descriptor (JJ)J\n--method name max descriptor (JJ)J\n--method name min descriptor (JJ)J\n-\n-class name java\/lang\/Math\n--method name addExact descriptor (II)I\n--method name addExact descriptor (JJ)J\n--method name subtractExact descriptor (II)I\n--method name subtractExact descriptor (JJ)J\n--method name multiplyExact descriptor (II)I\n--method name multiplyExact descriptor (JJ)J\n--method name incrementExact descriptor (I)I\n--method name incrementExact descriptor (J)J\n--method name decrementExact descriptor (I)I\n--method name decrementExact descriptor (J)J\n--method name negateExact descriptor (I)I\n--method name negateExact descriptor (J)J\n--method name toIntExact descriptor (J)I\n--method name floorDiv descriptor (II)I\n--method name floorDiv descriptor (JJ)J\n--method name floorMod descriptor (II)I\n--method name floorMod descriptor (JJ)J\n--method name nextDown descriptor (D)D\n--method name nextDown descriptor (F)F\n-\n-class name java\/lang\/Package\n--method name getPackage descriptor (Ljava\/lang\/String;)Ljava\/lang\/Package;\n--method name getPackages descriptor ()[Ljava\/lang\/Package;\n--method name getAnnotationsByType descriptor (Ljava\/lang\/Class;)[Ljava\/lang\/annotation\/Annotation;\n--method name getDeclaredAnnotation descriptor (Ljava\/lang\/Class;)Ljava\/lang\/annotation\/Annotation;\n--method name getDeclaredAnnotationsByType descriptor (Ljava\/lang\/Class;)[Ljava\/lang\/annotation\/Annotation;\n-method name getPackage descriptor (Ljava\/lang\/String;)Ljava\/lang\/Package; flags 9\n-method name getPackages descriptor ()[Ljava\/lang\/Package; flags 9\n-\n-class name java\/lang\/Process\n--method name waitFor descriptor (JLjava\/util\/concurrent\/TimeUnit;)Z\n--method name destroyForcibly descriptor ()Ljava\/lang\/Process;\n--method name isAlive descriptor ()Z\n-\n-class name java\/lang\/Runnable\n-header extends java\/lang\/Object flags 601\n-\n-class name java\/lang\/Runtime\n--method name load descriptor (Ljava\/lang\/String;)V\n--method name loadLibrary descriptor (Ljava\/lang\/String;)V\n-method name load descriptor (Ljava\/lang\/String;)V flags 1\n-method name loadLibrary descriptor (Ljava\/lang\/String;)V flags 1\n-\n-class name java\/lang\/SecurityManager\n--method name checkTopLevelWindow descriptor (Ljava\/lang\/Object;)Z\n--method name checkSystemClipboardAccess descriptor ()V\n--method name checkAwtEventQueueAccess descriptor ()V\n--method name checkMemberAccess descriptor (Ljava\/lang\/Class;I)V\n-method name checkTopLevelWindow descriptor (Ljava\/lang\/Object;)Z flags 1\n-method name checkSystemClipboardAccess descriptor ()V flags 1\n-method name checkAwtEventQueueAccess descriptor ()V flags 1\n-method name checkMemberAccess descriptor (Ljava\/lang\/Class;I)V flags 1 signature (Ljava\/lang\/Class<*>;I)V\n-\n-class name java\/lang\/Short\n--field name BYTES descriptor I\n--method name hashCode descriptor (S)I\n--method name toUnsignedInt descriptor (S)I\n--method name toUnsignedLong descriptor (S)J\n-\n-class name java\/lang\/StrictMath\n--method name addExact descriptor (II)I\n--method name addExact descriptor (JJ)J\n--method name subtractExact descriptor (II)I\n--method name subtractExact descriptor (JJ)J\n--method name multiplyExact descriptor (II)I\n--method name multiplyExact descriptor (JJ)J\n--method name toIntExact descriptor (J)I\n--method name floorDiv descriptor (II)I\n--method name floorDiv descriptor (JJ)J\n--method name floorMod descriptor (II)I\n--method name floorMod descriptor (JJ)J\n--method name nextDown descriptor (D)D\n--method name nextDown descriptor (F)F\n-\n-class name java\/lang\/String\n--method name join descriptor (Ljava\/lang\/CharSequence;[Ljava\/lang\/CharSequence;)Ljava\/lang\/String;\n--method name join descriptor (Ljava\/lang\/CharSequence;Ljava\/lang\/Iterable;)Ljava\/lang\/String;\n-\n-class name java\/lang\/StringBuffer\n--method name append descriptor (Ljava\/lang\/CharSequence;)Ljava\/lang\/StringBuffer;\n-method name append descriptor (Ljava\/lang\/CharSequence;)Ljava\/lang\/StringBuffer; flags 1\n-\n-class name java\/lang\/System\n--method name load descriptor (Ljava\/lang\/String;)V\n--method name loadLibrary descriptor (Ljava\/lang\/String;)V\n-method name load descriptor (Ljava\/lang\/String;)V flags 9\n-method name loadLibrary descriptor (Ljava\/lang\/String;)V flags 9\n-\n-class name java\/lang\/Thread\n--method name setName descriptor (Ljava\/lang\/String;)V\n--method name getContextClassLoader descriptor ()Ljava\/lang\/ClassLoader;\n-method name setName descriptor (Ljava\/lang\/String;)V flags 11\n-method name getContextClassLoader descriptor ()Ljava\/lang\/ClassLoader; flags 1\n-\n-class name java\/lang\/Thread$UncaughtExceptionHandler\n-header extends java\/lang\/Object flags 601\n-innerclass innerClass java\/lang\/Thread$UncaughtExceptionHandler outerClass java\/lang\/Thread innerClassName UncaughtExceptionHandler flags 609\n-\n-class name java\/lang\/ThreadLocal\n--method name withInitial descriptor (Ljava\/util\/function\/Supplier;)Ljava\/lang\/ThreadLocal;\n-\n-class name java\/lang\/VirtualMachineError\n--method name <init> descriptor (Ljava\/lang\/String;Ljava\/lang\/Throwable;)V\n--method name <init> descriptor (Ljava\/lang\/Throwable;)V\n-\n-class name java\/lang\/annotation\/ElementType\n--field name TYPE_PARAMETER descriptor Ljava\/lang\/annotation\/ElementType;\n--field name TYPE_USE descriptor Ljava\/lang\/annotation\/ElementType;\n-\n--class name java\/lang\/annotation\/Native\n-\n--class name java\/lang\/annotation\/Repeatable\n-\n--class name java\/lang\/invoke\/LambdaConversionException\n-\n--class name java\/lang\/invoke\/LambdaMetafactory\n-\n--class name java\/lang\/invoke\/MethodHandleInfo\n-\n-class name java\/lang\/invoke\/MethodHandleProxies\n--method name asInterfaceInstance descriptor (Ljava\/lang\/Class;Ljava\/lang\/invoke\/MethodHandle;)Ljava\/lang\/Object;\n-method name asInterfaceInstance descriptor (Ljava\/lang\/Class;Ljava\/lang\/invoke\/MethodHandle;)Ljava\/lang\/Object; flags 9 signature <T:Ljava\/lang\/Object;>(Ljava\/lang\/Class<TT;>;Ljava\/lang\/invoke\/MethodHandle;)TT;\n-\n-class name java\/lang\/invoke\/MethodHandles\n--method name lookup descriptor ()Ljava\/lang\/invoke\/MethodHandles$Lookup;\n--method name reflectAs descriptor (Ljava\/lang\/Class;Ljava\/lang\/invoke\/MethodHandle;)Ljava\/lang\/reflect\/Member;\n--method name collectArguments descriptor (Ljava\/lang\/invoke\/MethodHandle;ILjava\/lang\/invoke\/MethodHandle;)Ljava\/lang\/invoke\/MethodHandle;\n-method name lookup descriptor ()Ljava\/lang\/invoke\/MethodHandles$Lookup; flags 9\n-\n-class name java\/lang\/invoke\/MethodHandles$Lookup\n--method name unreflectConstructor descriptor (Ljava\/lang\/reflect\/Constructor;)Ljava\/lang\/invoke\/MethodHandle;\n--method name revealDirect descriptor (Ljava\/lang\/invoke\/MethodHandle;)Ljava\/lang\/invoke\/MethodHandleInfo;\n-method name unreflectConstructor descriptor (Ljava\/lang\/reflect\/Constructor;)Ljava\/lang\/invoke\/MethodHandle; thrownTypes java\/lang\/IllegalAccessException flags 1\n-\n--class name java\/lang\/invoke\/SerializedLambda\n-\n-class name java\/lang\/reflect\/AccessibleObject\n--method name getAnnotationsByType descriptor (Ljava\/lang\/Class;)[Ljava\/lang\/annotation\/Annotation;\n--method name getDeclaredAnnotation descriptor (Ljava\/lang\/Class;)Ljava\/lang\/annotation\/Annotation;\n--method name getDeclaredAnnotationsByType descriptor (Ljava\/lang\/Class;)[Ljava\/lang\/annotation\/Annotation;\n-\n--class name java\/lang\/reflect\/AnnotatedArrayType\n-\n-class name java\/lang\/reflect\/AnnotatedElement\n--method name isAnnotationPresent descriptor (Ljava\/lang\/Class;)Z\n--method name getAnnotationsByType descriptor (Ljava\/lang\/Class;)[Ljava\/lang\/annotation\/Annotation;\n--method name getDeclaredAnnotation descriptor (Ljava\/lang\/Class;)Ljava\/lang\/annotation\/Annotation;\n--method name getDeclaredAnnotationsByType descriptor (Ljava\/lang\/Class;)[Ljava\/lang\/annotation\/Annotation;\n-method name isAnnotationPresent descriptor (Ljava\/lang\/Class;)Z flags 401 signature (Ljava\/lang\/Class<+Ljava\/lang\/annotation\/Annotation;>;)Z\n-\n--class name java\/lang\/reflect\/AnnotatedParameterizedType\n-\n--class name java\/lang\/reflect\/AnnotatedType\n-\n--class name java\/lang\/reflect\/AnnotatedTypeVariable\n-\n--class name java\/lang\/reflect\/AnnotatedWildcardType\n-\n-class name java\/lang\/reflect\/Constructor\n-header extends java\/lang\/reflect\/AccessibleObject implements java\/lang\/reflect\/GenericDeclaration,java\/lang\/reflect\/Member flags 31 signature <T:Ljava\/lang\/Object;>Ljava\/lang\/reflect\/AccessibleObject;Ljava\/lang\/reflect\/GenericDeclaration;Ljava\/lang\/reflect\/Member;\n--method name getParameterCount descriptor ()I\n--method name newInstance descriptor ([Ljava\/lang\/Object;)Ljava\/lang\/Object;\n--method name getAnnotatedReturnType descriptor ()Ljava\/lang\/reflect\/AnnotatedType;\n--method name getAnnotatedReceiverType descriptor ()Ljava\/lang\/reflect\/AnnotatedType;\n-method name newInstance descriptor ([Ljava\/lang\/Object;)Ljava\/lang\/Object; thrownTypes java\/lang\/InstantiationException,java\/lang\/IllegalAccessException,java\/lang\/IllegalArgumentException,java\/lang\/reflect\/InvocationTargetException flags 81 signature ([Ljava\/lang\/Object;)TT;\n-\n--class name java\/lang\/reflect\/Executable\n-\n-class name java\/lang\/reflect\/Field\n--method name get descriptor (Ljava\/lang\/Object;)Ljava\/lang\/Object;\n--method name getBoolean descriptor (Ljava\/lang\/Object;)Z\n--method name getByte descriptor (Ljava\/lang\/Object;)B\n--method name getChar descriptor (Ljava\/lang\/Object;)C\n--method name getShort descriptor (Ljava\/lang\/Object;)S\n--method name getInt descriptor (Ljava\/lang\/Object;)I\n--method name getLong descriptor (Ljava\/lang\/Object;)J\n--method name getFloat descriptor (Ljava\/lang\/Object;)F\n--method name getDouble descriptor (Ljava\/lang\/Object;)D\n--method name set descriptor (Ljava\/lang\/Object;Ljava\/lang\/Object;)V\n--method name setBoolean descriptor (Ljava\/lang\/Object;Z)V\n--method name setByte descriptor (Ljava\/lang\/Object;B)V\n--method name setChar descriptor (Ljava\/lang\/Object;C)V\n--method name setShort descriptor (Ljava\/lang\/Object;S)V\n--method name setInt descriptor (Ljava\/lang\/Object;I)V\n--method name setLong descriptor (Ljava\/lang\/Object;J)V\n--method name setFloat descriptor (Ljava\/lang\/Object;F)V\n--method name setDouble descriptor (Ljava\/lang\/Object;D)V\n--method name getAnnotationsByType descriptor (Ljava\/lang\/Class;)[Ljava\/lang\/annotation\/Annotation;\n--method name getAnnotatedType descriptor ()Ljava\/lang\/reflect\/AnnotatedType;\n-method name get descriptor (Ljava\/lang\/Object;)Ljava\/lang\/Object; thrownTypes java\/lang\/IllegalArgumentException,java\/lang\/IllegalAccessException flags 1\n-method name getBoolean descriptor (Ljava\/lang\/Object;)Z thrownTypes java\/lang\/IllegalArgumentException,java\/lang\/IllegalAccessException flags 1\n-method name getByte descriptor (Ljava\/lang\/Object;)B thrownTypes java\/lang\/IllegalArgumentException,java\/lang\/IllegalAccessException flags 1\n-method name getChar descriptor (Ljava\/lang\/Object;)C thrownTypes java\/lang\/IllegalArgumentException,java\/lang\/IllegalAccessException flags 1\n-method name getShort descriptor (Ljava\/lang\/Object;)S thrownTypes java\/lang\/IllegalArgumentException,java\/lang\/IllegalAccessException flags 1\n-method name getInt descriptor (Ljava\/lang\/Object;)I thrownTypes java\/lang\/IllegalArgumentException,java\/lang\/IllegalAccessException flags 1\n-method name getLong descriptor (Ljava\/lang\/Object;)J thrownTypes java\/lang\/IllegalArgumentException,java\/lang\/IllegalAccessException flags 1\n-method name getFloat descriptor (Ljava\/lang\/Object;)F thrownTypes java\/lang\/IllegalArgumentException,java\/lang\/IllegalAccessException flags 1\n-method name getDouble descriptor (Ljava\/lang\/Object;)D thrownTypes java\/lang\/IllegalArgumentException,java\/lang\/IllegalAccessException flags 1\n-method name set descriptor (Ljava\/lang\/Object;Ljava\/lang\/Object;)V thrownTypes java\/lang\/IllegalArgumentException,java\/lang\/IllegalAccessException flags 1\n-method name setBoolean descriptor (Ljava\/lang\/Object;Z)V thrownTypes java\/lang\/IllegalArgumentException,java\/lang\/IllegalAccessException flags 1\n-method name setByte descriptor (Ljava\/lang\/Object;B)V thrownTypes java\/lang\/IllegalArgumentException,java\/lang\/IllegalAccessException flags 1\n-method name setChar descriptor (Ljava\/lang\/Object;C)V thrownTypes java\/lang\/IllegalArgumentException,java\/lang\/IllegalAccessException flags 1\n-method name setShort descriptor (Ljava\/lang\/Object;S)V thrownTypes java\/lang\/IllegalArgumentException,java\/lang\/IllegalAccessException flags 1\n-method name setInt descriptor (Ljava\/lang\/Object;I)V thrownTypes java\/lang\/IllegalArgumentException,java\/lang\/IllegalAccessException flags 1\n-method name setLong descriptor (Ljava\/lang\/Object;J)V thrownTypes java\/lang\/IllegalArgumentException,java\/lang\/IllegalAccessException flags 1\n-method name setFloat descriptor (Ljava\/lang\/Object;F)V thrownTypes java\/lang\/IllegalArgumentException,java\/lang\/IllegalAccessException flags 1\n-method name setDouble descriptor (Ljava\/lang\/Object;D)V thrownTypes java\/lang\/IllegalArgumentException,java\/lang\/IllegalAccessException flags 1\n-\n-class name java\/lang\/reflect\/GenericDeclaration\n-header extends java\/lang\/Object flags 601\n-\n-class name java\/lang\/reflect\/GenericSignatureFormatError\n--method name <init> descriptor (Ljava\/lang\/String;)V\n-\n--class name java\/lang\/reflect\/MalformedParametersException\n-\n-class name java\/lang\/reflect\/Method\n-header extends java\/lang\/reflect\/AccessibleObject implements java\/lang\/reflect\/GenericDeclaration,java\/lang\/reflect\/Member flags 31\n--method name getParameterCount descriptor ()I\n--method name invoke descriptor (Ljava\/lang\/Object;[Ljava\/lang\/Object;)Ljava\/lang\/Object;\n--method name isDefault descriptor ()Z\n--method name getAnnotatedReturnType descriptor ()Ljava\/lang\/reflect\/AnnotatedType;\n-method name invoke descriptor (Ljava\/lang\/Object;[Ljava\/lang\/Object;)Ljava\/lang\/Object; thrownTypes java\/lang\/IllegalAccessException,java\/lang\/IllegalArgumentException,java\/lang\/reflect\/InvocationTargetException flags 81\n-\n-class name java\/lang\/reflect\/Modifier\n--method name parameterModifiers descriptor ()I\n-\n--class name java\/lang\/reflect\/Parameter\n-\n-class name java\/lang\/reflect\/Proxy\n--method name getProxyClass descriptor (Ljava\/lang\/ClassLoader;[Ljava\/lang\/Class;)Ljava\/lang\/Class;\n--method name newProxyInstance descriptor (Ljava\/lang\/ClassLoader;[Ljava\/lang\/Class;Ljava\/lang\/reflect\/InvocationHandler;)Ljava\/lang\/Object;\n--method name getInvocationHandler descriptor (Ljava\/lang\/Object;)Ljava\/lang\/reflect\/InvocationHandler;\n-method name getProxyClass descriptor (Ljava\/lang\/ClassLoader;[Ljava\/lang\/Class;)Ljava\/lang\/Class; thrownTypes java\/lang\/IllegalArgumentException flags 89 signature (Ljava\/lang\/ClassLoader;[Ljava\/lang\/Class<*>;)Ljava\/lang\/Class<*>;\n-method name newProxyInstance descriptor (Ljava\/lang\/ClassLoader;[Ljava\/lang\/Class;Ljava\/lang\/reflect\/InvocationHandler;)Ljava\/lang\/Object; thrownTypes java\/lang\/IllegalArgumentException flags 9 signature (Ljava\/lang\/ClassLoader;[Ljava\/lang\/Class<*>;Ljava\/lang\/reflect\/InvocationHandler;)Ljava\/lang\/Object;\n-method name getInvocationHandler descriptor (Ljava\/lang\/Object;)Ljava\/lang\/reflect\/InvocationHandler; thrownTypes java\/lang\/IllegalArgumentException flags 9\n-\n-class name java\/lang\/reflect\/Type\n--method name getTypeName descriptor ()Ljava\/lang\/String;\n-\n-class name java\/lang\/reflect\/TypeVariable\n-header extends java\/lang\/Object implements java\/lang\/reflect\/Type flags 601 signature <D::Ljava\/lang\/reflect\/GenericDeclaration;>Ljava\/lang\/Object;Ljava\/lang\/reflect\/Type;\n--method name getAnnotatedBounds descriptor ()[Ljava\/lang\/reflect\/AnnotatedType;\n-\n-class name java\/math\/BigInteger\n--method name longValueExact descriptor ()J\n--method name intValueExact descriptor ()I\n--method name shortValueExact descriptor ()S\n--method name byteValueExact descriptor ()B\n-\n-class name java\/net\/DatagramPacket\n--method name <init> descriptor ([BIILjava\/net\/SocketAddress;)V\n--method name <init> descriptor ([BILjava\/net\/SocketAddress;)V\n-method name <init> descriptor ([BIILjava\/net\/SocketAddress;)V thrownTypes java\/net\/SocketException flags 1\n-method name <init> descriptor ([BILjava\/net\/SocketAddress;)V thrownTypes java\/net\/SocketException flags 1\n-\n-class name java\/net\/URL\n-method name set descriptor (Ljava\/lang\/String;Ljava\/lang\/String;ILjava\/lang\/String;Ljava\/lang\/String;)V flags 4\n-method name set descriptor (Ljava\/lang\/String;Ljava\/lang\/String;ILjava\/lang\/String;Ljava\/lang\/String;Ljava\/lang\/String;Ljava\/lang\/String;Ljava\/lang\/String;)V flags 4\n-\n--class name java\/net\/URLPermission\n-\n-class name java\/nio\/CharBuffer\n-header extends java\/nio\/Buffer implements java\/lang\/Comparable,java\/lang\/Appendable,java\/lang\/CharSequence,java\/lang\/Readable flags 421 signature Ljava\/nio\/Buffer;Ljava\/lang\/Comparable<Ljava\/nio\/CharBuffer;>;Ljava\/lang\/Appendable;Ljava\/lang\/CharSequence;Ljava\/lang\/Readable;\n--method name chars descriptor ()Ljava\/util\/stream\/IntStream;\n-\n-class name java\/nio\/channels\/AsynchronousServerSocketChannel\n--method name getLocalAddress descriptor ()Ljava\/net\/SocketAddress;\n-\n-class name java\/nio\/channels\/AsynchronousSocketChannel\n--method name getLocalAddress descriptor ()Ljava\/net\/SocketAddress;\n-\n-class name java\/nio\/channels\/DatagramChannel\n--method name getLocalAddress descriptor ()Ljava\/net\/SocketAddress;\n-\n-class name java\/nio\/channels\/ServerSocketChannel\n--method name getLocalAddress descriptor ()Ljava\/net\/SocketAddress;\n-\n-class name java\/nio\/channels\/SocketChannel\n--method name getLocalAddress descriptor ()Ljava\/net\/SocketAddress;\n-\n-class name java\/nio\/file\/DirectoryStream$Filter\n-header extends java\/lang\/Object flags 601 signature <T:Ljava\/lang\/Object;>Ljava\/lang\/Object;\n-innerclass innerClass java\/nio\/file\/DirectoryStream$Filter outerClass java\/nio\/file\/DirectoryStream innerClassName Filter flags 609\n-\n-class name java\/nio\/file\/Files\n--method name newBufferedReader descriptor (Ljava\/nio\/file\/Path;)Ljava\/io\/BufferedReader;\n--method name newBufferedWriter descriptor (Ljava\/nio\/file\/Path;[Ljava\/nio\/file\/OpenOption;)Ljava\/io\/BufferedWriter;\n--method name readAllLines descriptor (Ljava\/nio\/file\/Path;)Ljava\/util\/List;\n--method name write descriptor (Ljava\/nio\/file\/Path;Ljava\/lang\/Iterable;[Ljava\/nio\/file\/OpenOption;)Ljava\/nio\/file\/Path;\n--method name list descriptor (Ljava\/nio\/file\/Path;)Ljava\/util\/stream\/Stream;\n--method name walk descriptor (Ljava\/nio\/file\/Path;I[Ljava\/nio\/file\/FileVisitOption;)Ljava\/util\/stream\/Stream;\n--method name walk descriptor (Ljava\/nio\/file\/Path;[Ljava\/nio\/file\/FileVisitOption;)Ljava\/util\/stream\/Stream;\n--method name find descriptor (Ljava\/nio\/file\/Path;ILjava\/util\/function\/BiPredicate;[Ljava\/nio\/file\/FileVisitOption;)Ljava\/util\/stream\/Stream;\n--method name lines descriptor (Ljava\/nio\/file\/Path;Ljava\/nio\/charset\/Charset;)Ljava\/util\/stream\/Stream;\n--method name lines descriptor (Ljava\/nio\/file\/Path;)Ljava\/util\/stream\/Stream;\n-\n-class name java\/nio\/file\/Path\n--method name compareTo descriptor (Ljava\/lang\/Object;)I\n-\n-class name java\/nio\/file\/PathMatcher\n-header extends java\/lang\/Object flags 601\n-\n-class name java\/nio\/file\/attribute\/DosFileAttributeView\n--method name readAttributes descriptor ()Ljava\/nio\/file\/attribute\/BasicFileAttributes;\n-\n-class name java\/nio\/file\/attribute\/FileTime\n--method name from descriptor (Ljava\/time\/Instant;)Ljava\/nio\/file\/attribute\/FileTime;\n--method name toInstant descriptor ()Ljava\/time\/Instant;\n-\n-class name java\/nio\/file\/attribute\/PosixFileAttributeView\n--method name readAttributes descriptor ()Ljava\/nio\/file\/attribute\/BasicFileAttributes;\n-\n-class name java\/security\/AccessController\n--method name doPrivileged descriptor (Ljava\/security\/PrivilegedAction;)Ljava\/lang\/Object;\n--method name doPrivilegedWithCombiner descriptor (Ljava\/security\/PrivilegedAction;)Ljava\/lang\/Object;\n--method name doPrivileged descriptor (Ljava\/security\/PrivilegedAction;Ljava\/security\/AccessControlContext;)Ljava\/lang\/Object;\n--method name doPrivileged descriptor (Ljava\/security\/PrivilegedAction;Ljava\/security\/AccessControlContext;[Ljava\/security\/Permission;)Ljava\/lang\/Object;\n--method name doPrivilegedWithCombiner descriptor (Ljava\/security\/PrivilegedAction;Ljava\/security\/AccessControlContext;[Ljava\/security\/Permission;)Ljava\/lang\/Object;\n--method name doPrivileged descriptor (Ljava\/security\/PrivilegedExceptionAction;)Ljava\/lang\/Object;\n--method name doPrivilegedWithCombiner descriptor (Ljava\/security\/PrivilegedExceptionAction;)Ljava\/lang\/Object;\n--method name doPrivileged descriptor (Ljava\/security\/PrivilegedExceptionAction;Ljava\/security\/AccessControlContext;)Ljava\/lang\/Object;\n--method name doPrivileged descriptor (Ljava\/security\/PrivilegedExceptionAction;Ljava\/security\/AccessControlContext;[Ljava\/security\/Permission;)Ljava\/lang\/Object;\n--method name doPrivilegedWithCombiner descriptor (Ljava\/security\/PrivilegedExceptionAction;Ljava\/security\/AccessControlContext;[Ljava\/security\/Permission;)Ljava\/lang\/Object;\n-method name doPrivileged descriptor (Ljava\/security\/PrivilegedAction;)Ljava\/lang\/Object; flags 109 signature <T:Ljava\/lang\/Object;>(Ljava\/security\/PrivilegedAction<TT;>;)TT;\n-method name doPrivilegedWithCombiner descriptor (Ljava\/security\/PrivilegedAction;)Ljava\/lang\/Object; flags 9 signature <T:Ljava\/lang\/Object;>(Ljava\/security\/PrivilegedAction<TT;>;)TT;\n-method name doPrivileged descriptor (Ljava\/security\/PrivilegedAction;Ljava\/security\/AccessControlContext;)Ljava\/lang\/Object; flags 109 signature <T:Ljava\/lang\/Object;>(Ljava\/security\/PrivilegedAction<TT;>;Ljava\/security\/AccessControlContext;)TT;\n-method name doPrivileged descriptor (Ljava\/security\/PrivilegedExceptionAction;)Ljava\/lang\/Object; thrownTypes java\/security\/PrivilegedActionException flags 109 signature <T:Ljava\/lang\/Object;>(Ljava\/security\/PrivilegedExceptionAction<TT;>;)TT;\n-method name doPrivilegedWithCombiner descriptor (Ljava\/security\/PrivilegedExceptionAction;)Ljava\/lang\/Object; thrownTypes java\/security\/PrivilegedActionException flags 9 signature <T:Ljava\/lang\/Object;>(Ljava\/security\/PrivilegedExceptionAction<TT;>;)TT;\n-method name doPrivileged descriptor (Ljava\/security\/PrivilegedExceptionAction;Ljava\/security\/AccessControlContext;)Ljava\/lang\/Object; thrownTypes java\/security\/PrivilegedActionException flags 109 signature <T:Ljava\/lang\/Object;>(Ljava\/security\/PrivilegedExceptionAction<TT;>;Ljava\/security\/AccessControlContext;)TT;\n-\n--class name java\/security\/DomainLoadStoreParameter\n-\n-class name java\/security\/KeyStore$Entry\n-header extends java\/lang\/Object flags 601\n-innerclass innerClass java\/security\/KeyStore$Entry outerClass java\/security\/KeyStore innerClassName Entry flags 609\n--method name getAttributes descriptor ()Ljava\/util\/Set;\n-\n--class name java\/security\/KeyStore$Entry$Attribute\n-\n-class name java\/security\/KeyStore$PasswordProtection\n--method name <init> descriptor ([CLjava\/lang\/String;Ljava\/security\/spec\/AlgorithmParameterSpec;)V\n--method name getProtectionAlgorithm descriptor ()Ljava\/lang\/String;\n--method name getProtectionParameters descriptor ()Ljava\/security\/spec\/AlgorithmParameterSpec;\n-\n-class name java\/security\/KeyStore$PrivateKeyEntry\n-header extends java\/lang\/Object implements java\/security\/KeyStore$Entry flags 31\n-innerclass innerClass java\/security\/KeyStore$PrivateKeyEntry outerClass java\/security\/KeyStore innerClassName PrivateKeyEntry flags 19\n-innerclass innerClass java\/security\/KeyStore$Entry outerClass java\/security\/KeyStore innerClassName Entry flags 609\n--method name <init> descriptor (Ljava\/security\/PrivateKey;[Ljava\/security\/cert\/Certificate;Ljava\/util\/Set;)V\n--method name getAttributes descriptor ()Ljava\/util\/Set;\n-\n-class name java\/security\/KeyStore$SecretKeyEntry\n-header extends java\/lang\/Object implements java\/security\/KeyStore$Entry flags 31\n-innerclass innerClass java\/security\/KeyStore$SecretKeyEntry outerClass java\/security\/KeyStore innerClassName SecretKeyEntry flags 19\n-innerclass innerClass java\/security\/KeyStore$Entry outerClass java\/security\/KeyStore innerClassName Entry flags 609\n--method name <init> descriptor (Ljavax\/crypto\/SecretKey;Ljava\/util\/Set;)V\n--method name getAttributes descriptor ()Ljava\/util\/Set;\n-\n-class name java\/security\/KeyStore$TrustedCertificateEntry\n-header extends java\/lang\/Object implements java\/security\/KeyStore$Entry flags 31\n-innerclass innerClass java\/security\/KeyStore$TrustedCertificateEntry outerClass java\/security\/KeyStore innerClassName TrustedCertificateEntry flags 19\n-innerclass innerClass java\/security\/KeyStore$Entry outerClass java\/security\/KeyStore innerClassName Entry flags 609\n--method name <init> descriptor (Ljava\/security\/cert\/Certificate;Ljava\/util\/Set;)V\n--method name getAttributes descriptor ()Ljava\/util\/Set;\n-\n--class name java\/security\/PKCS12Attribute\n-\n-class name java\/security\/Principal\n--method name implies descriptor (Ljavax\/security\/auth\/Subject;)Z\n-\n-class name java\/security\/PrivateKey\n-header extends java\/lang\/Object implements java\/security\/Key flags 601\n-\n-class name java\/security\/Provider\n--method name putIfAbsent descriptor (Ljava\/lang\/Object;Ljava\/lang\/Object;)Ljava\/lang\/Object;\n--method name remove descriptor (Ljava\/lang\/Object;Ljava\/lang\/Object;)Z\n--method name replace descriptor (Ljava\/lang\/Object;Ljava\/lang\/Object;Ljava\/lang\/Object;)Z\n--method name replace descriptor (Ljava\/lang\/Object;Ljava\/lang\/Object;)Ljava\/lang\/Object;\n--method name replaceAll descriptor (Ljava\/util\/function\/BiFunction;)V\n--method name compute descriptor (Ljava\/lang\/Object;Ljava\/util\/function\/BiFunction;)Ljava\/lang\/Object;\n--method name computeIfAbsent descriptor (Ljava\/lang\/Object;Ljava\/util\/function\/Function;)Ljava\/lang\/Object;\n--method name computeIfPresent descriptor (Ljava\/lang\/Object;Ljava\/util\/function\/BiFunction;)Ljava\/lang\/Object;\n--method name merge descriptor (Ljava\/lang\/Object;Ljava\/lang\/Object;Ljava\/util\/function\/BiFunction;)Ljava\/lang\/Object;\n--method name getOrDefault descriptor (Ljava\/lang\/Object;Ljava\/lang\/Object;)Ljava\/lang\/Object;\n--method name forEach descriptor (Ljava\/util\/function\/BiConsumer;)V\n-\n-class name java\/security\/SecureRandom\n--method name getInstanceStrong descriptor ()Ljava\/security\/SecureRandom;\n-\n-class name java\/security\/cert\/CertPathBuilder\n--method name getRevocationChecker descriptor ()Ljava\/security\/cert\/CertPathChecker;\n-\n-class name java\/security\/cert\/CertPathBuilderSpi\n--method name engineGetRevocationChecker descriptor ()Ljava\/security\/cert\/CertPathChecker;\n-\n--class name java\/security\/cert\/CertPathChecker\n-\n-class name java\/security\/cert\/CertPathValidator\n--method name getRevocationChecker descriptor ()Ljava\/security\/cert\/CertPathChecker;\n-\n-class name java\/security\/cert\/CertPathValidatorSpi\n--method name engineGetRevocationChecker descriptor ()Ljava\/security\/cert\/CertPathChecker;\n-\n-class name java\/security\/cert\/Certificate\n--method name verify descriptor (Ljava\/security\/PublicKey;Ljava\/security\/Provider;)V\n-\n-class name java\/security\/cert\/PKIXCertPathChecker\n-header extends java\/lang\/Object implements java\/lang\/Cloneable flags 421\n--method name check descriptor (Ljava\/security\/cert\/Certificate;)V\n-\n--class name java\/security\/cert\/PKIXRevocationChecker\n-\n--class name java\/security\/cert\/PKIXRevocationChecker$Option\n-\n-class name java\/security\/cert\/X509CRL\n--method name verify descriptor (Ljava\/security\/PublicKey;Ljava\/security\/Provider;)V\n-\n-class name java\/security\/cert\/X509Certificate\n--method name verify descriptor (Ljava\/security\/PublicKey;Ljava\/security\/Provider;)V\n-\n-class name java\/security\/interfaces\/RSAKey\n--method name getParams descriptor ()Ljava\/security\/spec\/AlgorithmParameterSpec;\n-\n--class name java\/security\/spec\/DSAGenParameterSpec\n-\n-class name java\/security\/spec\/MGF1ParameterSpec\n--field name SHA224 descriptor Ljava\/security\/spec\/MGF1ParameterSpec;\n--field name SHA512_224 descriptor Ljava\/security\/spec\/MGF1ParameterSpec;\n--field name SHA512_256 descriptor Ljava\/security\/spec\/MGF1ParameterSpec;\n-\n-class name java\/security\/spec\/PSSParameterSpec\n--field name TRAILER_FIELD_BC descriptor I\n--method name toString descriptor ()Ljava\/lang\/String;\n-\n-class name java\/security\/spec\/RSAKeyGenParameterSpec\n--method name <init> descriptor (ILjava\/math\/BigInteger;Ljava\/security\/spec\/AlgorithmParameterSpec;)V\n--method name getKeyParams descriptor ()Ljava\/security\/spec\/AlgorithmParameterSpec;\n-\n-class name java\/security\/spec\/RSAMultiPrimePrivateCrtKeySpec\n--method name <init> descriptor (Ljava\/math\/BigInteger;Ljava\/math\/BigInteger;Ljava\/math\/BigInteger;Ljava\/math\/BigInteger;Ljava\/math\/BigInteger;Ljava\/math\/BigInteger;Ljava\/math\/BigInteger;Ljava\/math\/BigInteger;[Ljava\/security\/spec\/RSAOtherPrimeInfo;Ljava\/security\/spec\/AlgorithmParameterSpec;)V\n-\n-class name java\/security\/spec\/RSAPrivateCrtKeySpec\n--method name <init> descriptor (Ljava\/math\/BigInteger;Ljava\/math\/BigInteger;Ljava\/math\/BigInteger;Ljava\/math\/BigInteger;Ljava\/math\/BigInteger;Ljava\/math\/BigInteger;Ljava\/math\/BigInteger;Ljava\/math\/BigInteger;Ljava\/security\/spec\/AlgorithmParameterSpec;)V\n-\n-class name java\/security\/spec\/RSAPrivateKeySpec\n--method name <init> descriptor (Ljava\/math\/BigInteger;Ljava\/math\/BigInteger;Ljava\/security\/spec\/AlgorithmParameterSpec;)V\n--method name getParams descriptor ()Ljava\/security\/spec\/AlgorithmParameterSpec;\n-\n-class name java\/security\/spec\/RSAPublicKeySpec\n--method name <init> descriptor (Ljava\/math\/BigInteger;Ljava\/math\/BigInteger;Ljava\/security\/spec\/AlgorithmParameterSpec;)V\n--method name getParams descriptor ()Ljava\/security\/spec\/AlgorithmParameterSpec;\n-\n-class name java\/text\/Collator\n--method name getInstance descriptor (Ljava\/util\/Locale;)Ljava\/text\/Collator;\n-method name getInstance descriptor (Ljava\/util\/Locale;)Ljava\/text\/Collator; flags 29\n-\n-class name java\/text\/DecimalFormat\n--method name setGroupingUsed descriptor (Z)V\n-\n--class name java\/time\/Clock\n-\n--class name java\/time\/DateTimeException\n-\n--class name java\/time\/DayOfWeek\n-\n--class name java\/time\/Duration\n-\n--class name java\/time\/Instant\n-\n--class name java\/time\/LocalDate\n-\n--class name java\/time\/LocalDateTime\n-\n--class name java\/time\/LocalTime\n-\n--class name java\/time\/Month\n-\n--class name java\/time\/MonthDay\n-\n--class name java\/time\/OffsetDateTime\n-\n--class name java\/time\/OffsetTime\n-\n--class name java\/time\/Period\n-\n--class name java\/time\/Year\n-\n--class name java\/time\/YearMonth\n-\n--class name java\/time\/ZoneId\n-\n--class name java\/time\/ZoneOffset\n-\n--class name java\/time\/ZonedDateTime\n-\n--class name java\/time\/chrono\/AbstractChronology\n-\n--class name java\/time\/chrono\/ChronoLocalDate\n-\n--class name java\/time\/chrono\/ChronoLocalDateImpl\n-\n--class name java\/time\/chrono\/ChronoLocalDateTime\n-\n--class name java\/time\/chrono\/ChronoPeriod\n-\n--class name java\/time\/chrono\/ChronoZonedDateTime\n-\n--class name java\/time\/chrono\/Chronology\n-\n--class name java\/time\/chrono\/Era\n-\n--class name java\/time\/chrono\/HijrahChronology\n-\n--class name java\/time\/chrono\/HijrahDate\n-\n--class name java\/time\/chrono\/HijrahEra\n-\n--class name java\/time\/chrono\/IsoChronology\n-\n--class name java\/time\/chrono\/IsoEra\n-\n--class name java\/time\/chrono\/JapaneseChronology\n-\n--class name java\/time\/chrono\/JapaneseDate\n-\n--class name java\/time\/chrono\/JapaneseEra\n-\n--class name java\/time\/chrono\/MinguoChronology\n-\n--class name java\/time\/chrono\/MinguoDate\n-\n--class name java\/time\/chrono\/MinguoEra\n-\n--class name java\/time\/chrono\/ThaiBuddhistChronology\n-\n--class name java\/time\/chrono\/ThaiBuddhistDate\n-\n--class name java\/time\/chrono\/ThaiBuddhistEra\n-\n--class name java\/time\/format\/DateTimeFormatter\n-\n--class name java\/time\/format\/DateTimeFormatterBuilder\n-\n--class name java\/time\/format\/DateTimeParseException\n-\n--class name java\/time\/format\/DecimalStyle\n-\n--class name java\/time\/format\/FormatStyle\n-\n--class name java\/time\/format\/ResolverStyle\n-\n--class name java\/time\/format\/SignStyle\n-\n--class name java\/time\/format\/TextStyle\n-\n--class name java\/time\/temporal\/ChronoField\n-\n--class name java\/time\/temporal\/ChronoUnit\n-\n--class name java\/time\/temporal\/IsoFields\n-\n--class name java\/time\/temporal\/JulianFields\n-\n--class name java\/time\/temporal\/Temporal\n-\n--class name java\/time\/temporal\/TemporalAccessor\n-\n--class name java\/time\/temporal\/TemporalAdjuster\n-\n--class name java\/time\/temporal\/TemporalAdjusters\n-\n--class name java\/time\/temporal\/TemporalAmount\n-\n--class name java\/time\/temporal\/TemporalField\n-\n--class name java\/time\/temporal\/TemporalQueries\n-\n--class name java\/time\/temporal\/TemporalQuery\n-\n--class name java\/time\/temporal\/TemporalUnit\n-\n--class name java\/time\/temporal\/UnsupportedTemporalTypeException\n-\n--class name java\/time\/temporal\/ValueRange\n-\n--class name java\/time\/temporal\/WeekFields\n-\n--class name java\/time\/zone\/ZoneOffsetTransition\n-\n--class name java\/time\/zone\/ZoneOffsetTransitionRule\n-\n--class name java\/time\/zone\/ZoneOffsetTransitionRule$TimeDefinition\n-\n--class name java\/time\/zone\/ZoneRules\n-\n--class name java\/time\/zone\/ZoneRulesException\n-\n--class name java\/time\/zone\/ZoneRulesProvider\n-\n-class name java\/util\/ArrayDeque\n--method name spliterator descriptor ()Ljava\/util\/Spliterator;\n-\n-class name java\/util\/ArrayList\n--method name forEach descriptor (Ljava\/util\/function\/Consumer;)V\n--method name spliterator descriptor ()Ljava\/util\/Spliterator;\n--method name removeIf descriptor (Ljava\/util\/function\/Predicate;)Z\n--method name replaceAll descriptor (Ljava\/util\/function\/UnaryOperator;)V\n--method name sort descriptor (Ljava\/util\/Comparator;)V\n-\n-class name java\/util\/Arrays\n-header extends java\/lang\/Object flags 21\n--method name parallelSort descriptor ([B)V\n--method name parallelSort descriptor ([BII)V\n--method name parallelSort descriptor ([C)V\n--method name parallelSort descriptor ([CII)V\n--method name parallelSort descriptor ([S)V\n--method name parallelSort descriptor ([SII)V\n--method name parallelSort descriptor ([I)V\n--method name parallelSort descriptor ([III)V\n--method name parallelSort descriptor ([J)V\n--method name parallelSort descriptor ([JII)V\n--method name parallelSort descriptor ([F)V\n--method name parallelSort descriptor ([FII)V\n--method name parallelSort descriptor ([D)V\n--method name parallelSort descriptor ([DII)V\n--method name parallelSort descriptor ([Ljava\/lang\/Comparable;)V\n--method name parallelSort descriptor ([Ljava\/lang\/Comparable;II)V\n--method name parallelSort descriptor ([Ljava\/lang\/Object;Ljava\/util\/Comparator;)V\n--method name parallelSort descriptor ([Ljava\/lang\/Object;IILjava\/util\/Comparator;)V\n--method name parallelPrefix descriptor ([Ljava\/lang\/Object;Ljava\/util\/function\/BinaryOperator;)V\n--method name parallelPrefix descriptor ([Ljava\/lang\/Object;IILjava\/util\/function\/BinaryOperator;)V\n--method name parallelPrefix descriptor ([JLjava\/util\/function\/LongBinaryOperator;)V\n--method name parallelPrefix descriptor ([JIILjava\/util\/function\/LongBinaryOperator;)V\n--method name parallelPrefix descriptor ([DLjava\/util\/function\/DoubleBinaryOperator;)V\n--method name parallelPrefix descriptor ([DIILjava\/util\/function\/DoubleBinaryOperator;)V\n--method name parallelPrefix descriptor ([ILjava\/util\/function\/IntBinaryOperator;)V\n--method name parallelPrefix descriptor ([IIILjava\/util\/function\/IntBinaryOperator;)V\n--method name setAll descriptor ([Ljava\/lang\/Object;Ljava\/util\/function\/IntFunction;)V\n--method name parallelSetAll descriptor ([Ljava\/lang\/Object;Ljava\/util\/function\/IntFunction;)V\n--method name setAll descriptor ([ILjava\/util\/function\/IntUnaryOperator;)V\n--method name parallelSetAll descriptor ([ILjava\/util\/function\/IntUnaryOperator;)V\n--method name setAll descriptor ([JLjava\/util\/function\/IntToLongFunction;)V\n--method name parallelSetAll descriptor ([JLjava\/util\/function\/IntToLongFunction;)V\n--method name setAll descriptor ([DLjava\/util\/function\/IntToDoubleFunction;)V\n--method name parallelSetAll descriptor ([DLjava\/util\/function\/IntToDoubleFunction;)V\n--method name spliterator descriptor ([Ljava\/lang\/Object;)Ljava\/util\/Spliterator;\n--method name spliterator descriptor ([Ljava\/lang\/Object;II)Ljava\/util\/Spliterator;\n--method name spliterator descriptor ([I)Ljava\/util\/Spliterator$OfInt;\n--method name spliterator descriptor ([III)Ljava\/util\/Spliterator$OfInt;\n--method name spliterator descriptor ([J)Ljava\/util\/Spliterator$OfLong;\n--method name spliterator descriptor ([JII)Ljava\/util\/Spliterator$OfLong;\n--method name spliterator descriptor ([D)Ljava\/util\/Spliterator$OfDouble;\n--method name spliterator descriptor ([DII)Ljava\/util\/Spliterator$OfDouble;\n--method name stream descriptor ([Ljava\/lang\/Object;)Ljava\/util\/stream\/Stream;\n--method name stream descriptor ([Ljava\/lang\/Object;II)Ljava\/util\/stream\/Stream;\n--method name stream descriptor ([I)Ljava\/util\/stream\/IntStream;\n--method name stream descriptor ([III)Ljava\/util\/stream\/IntStream;\n--method name stream descriptor ([J)Ljava\/util\/stream\/LongStream;\n--method name stream descriptor ([JII)Ljava\/util\/stream\/LongStream;\n--method name stream descriptor ([D)Ljava\/util\/stream\/DoubleStream;\n--method name stream descriptor ([DII)Ljava\/util\/stream\/DoubleStream;\n-\n--class name java\/util\/Base64\n-\n--class name java\/util\/Base64$Decoder\n-\n--class name java\/util\/Base64$Encoder\n-\n-class name java\/util\/BitSet\n-header extends java\/lang\/Object implements java\/lang\/Cloneable,java\/io\/Serializable flags 21\n--method name stream descriptor ()Ljava\/util\/stream\/IntStream;\n-\n-class name java\/util\/Calendar\n-header extends java\/lang\/Object implements java\/io\/Serializable,java\/lang\/Cloneable,java\/lang\/Comparable flags 421 signature Ljava\/lang\/Object;Ljava\/io\/Serializable;Ljava\/lang\/Cloneable;Ljava\/lang\/Comparable<Ljava\/util\/Calendar;>;\n--field name NARROW_FORMAT descriptor I\n--field name NARROW_STANDALONE descriptor I\n--field name SHORT_FORMAT descriptor I\n--field name LONG_FORMAT descriptor I\n--field name SHORT_STANDALONE descriptor I\n--field name LONG_STANDALONE descriptor I\n--method name getAvailableCalendarTypes descriptor ()Ljava\/util\/Set;\n--method name getCalendarType descriptor ()Ljava\/lang\/String;\n--method name toInstant descriptor ()Ljava\/time\/Instant;\n-\n--class name java\/util\/Calendar$Builder\n-\n-class name java\/util\/Collection\n--method name removeIf descriptor (Ljava\/util\/function\/Predicate;)Z\n--method name spliterator descriptor ()Ljava\/util\/Spliterator;\n--method name stream descriptor ()Ljava\/util\/stream\/Stream;\n--method name parallelStream descriptor ()Ljava\/util\/stream\/Stream;\n-\n-class name java\/util\/Collections\n--method name unmodifiableNavigableSet descriptor (Ljava\/util\/NavigableSet;)Ljava\/util\/NavigableSet;\n--method name unmodifiableNavigableMap descriptor (Ljava\/util\/NavigableMap;)Ljava\/util\/NavigableMap;\n--method name synchronizedNavigableSet descriptor (Ljava\/util\/NavigableSet;)Ljava\/util\/NavigableSet;\n--method name synchronizedNavigableMap descriptor (Ljava\/util\/NavigableMap;)Ljava\/util\/NavigableMap;\n--method name checkedQueue descriptor (Ljava\/util\/Queue;Ljava\/lang\/Class;)Ljava\/util\/Queue;\n--method name checkedNavigableSet descriptor (Ljava\/util\/NavigableSet;Ljava\/lang\/Class;)Ljava\/util\/NavigableSet;\n--method name checkedNavigableMap descriptor (Ljava\/util\/NavigableMap;Ljava\/lang\/Class;Ljava\/lang\/Class;)Ljava\/util\/NavigableMap;\n--method name emptySortedSet descriptor ()Ljava\/util\/SortedSet;\n--method name emptyNavigableSet descriptor ()Ljava\/util\/NavigableSet;\n--method name emptySortedMap descriptor ()Ljava\/util\/SortedMap;\n--method name emptyNavigableMap descriptor ()Ljava\/util\/NavigableMap;\n-\n-class name java\/util\/Comparator\n-header extends java\/lang\/Object flags 601 signature <T:Ljava\/lang\/Object;>Ljava\/lang\/Object;\n--method name reversed descriptor ()Ljava\/util\/Comparator;\n--method name thenComparing descriptor (Ljava\/util\/Comparator;)Ljava\/util\/Comparator;\n--method name thenComparing descriptor (Ljava\/util\/function\/Function;Ljava\/util\/Comparator;)Ljava\/util\/Comparator;\n--method name thenComparing descriptor (Ljava\/util\/function\/Function;)Ljava\/util\/Comparator;\n--method name thenComparingInt descriptor (Ljava\/util\/function\/ToIntFunction;)Ljava\/util\/Comparator;\n--method name thenComparingLong descriptor (Ljava\/util\/function\/ToLongFunction;)Ljava\/util\/Comparator;\n--method name thenComparingDouble descriptor (Ljava\/util\/function\/ToDoubleFunction;)Ljava\/util\/Comparator;\n--method name reverseOrder descriptor ()Ljava\/util\/Comparator;\n--method name naturalOrder descriptor ()Ljava\/util\/Comparator;\n--method name nullsFirst descriptor (Ljava\/util\/Comparator;)Ljava\/util\/Comparator;\n--method name nullsLast descriptor (Ljava\/util\/Comparator;)Ljava\/util\/Comparator;\n--method name comparing descriptor (Ljava\/util\/function\/Function;Ljava\/util\/Comparator;)Ljava\/util\/Comparator;\n--method name comparing descriptor (Ljava\/util\/function\/Function;)Ljava\/util\/Comparator;\n--method name comparingInt descriptor (Ljava\/util\/function\/ToIntFunction;)Ljava\/util\/Comparator;\n--method name comparingLong descriptor (Ljava\/util\/function\/ToLongFunction;)Ljava\/util\/Comparator;\n--method name comparingDouble descriptor (Ljava\/util\/function\/ToDoubleFunction;)Ljava\/util\/Comparator;\n-\n-class name java\/util\/Date\n--method name from descriptor (Ljava\/time\/Instant;)Ljava\/util\/Date;\n--method name toInstant descriptor ()Ljava\/time\/Instant;\n-\n--class name java\/util\/DoubleSummaryStatistics\n-\n-class name java\/util\/GregorianCalendar\n--method name getCalendarType descriptor ()Ljava\/lang\/String;\n--method name toZonedDateTime descriptor ()Ljava\/time\/ZonedDateTime;\n--method name from descriptor (Ljava\/time\/ZonedDateTime;)Ljava\/util\/GregorianCalendar;\n-\n-class name java\/util\/HashMap\n--method name getOrDefault descriptor (Ljava\/lang\/Object;Ljava\/lang\/Object;)Ljava\/lang\/Object;\n--method name putIfAbsent descriptor (Ljava\/lang\/Object;Ljava\/lang\/Object;)Ljava\/lang\/Object;\n--method name remove descriptor (Ljava\/lang\/Object;Ljava\/lang\/Object;)Z\n--method name replace descriptor (Ljava\/lang\/Object;Ljava\/lang\/Object;Ljava\/lang\/Object;)Z\n--method name replace descriptor (Ljava\/lang\/Object;Ljava\/lang\/Object;)Ljava\/lang\/Object;\n--method name computeIfAbsent descriptor (Ljava\/lang\/Object;Ljava\/util\/function\/Function;)Ljava\/lang\/Object;\n--method name computeIfPresent descriptor (Ljava\/lang\/Object;Ljava\/util\/function\/BiFunction;)Ljava\/lang\/Object;\n--method name compute descriptor (Ljava\/lang\/Object;Ljava\/util\/function\/BiFunction;)Ljava\/lang\/Object;\n--method name merge descriptor (Ljava\/lang\/Object;Ljava\/lang\/Object;Ljava\/util\/function\/BiFunction;)Ljava\/lang\/Object;\n--method name forEach descriptor (Ljava\/util\/function\/BiConsumer;)V\n--method name replaceAll descriptor (Ljava\/util\/function\/BiFunction;)V\n-\n-class name java\/util\/HashSet\n--method name spliterator descriptor ()Ljava\/util\/Spliterator;\n-\n-class name java\/util\/Hashtable\n--method name getOrDefault descriptor (Ljava\/lang\/Object;Ljava\/lang\/Object;)Ljava\/lang\/Object;\n--method name forEach descriptor (Ljava\/util\/function\/BiConsumer;)V\n--method name replaceAll descriptor (Ljava\/util\/function\/BiFunction;)V\n--method name putIfAbsent descriptor (Ljava\/lang\/Object;Ljava\/lang\/Object;)Ljava\/lang\/Object;\n--method name remove descriptor (Ljava\/lang\/Object;Ljava\/lang\/Object;)Z\n--method name replace descriptor (Ljava\/lang\/Object;Ljava\/lang\/Object;Ljava\/lang\/Object;)Z\n--method name replace descriptor (Ljava\/lang\/Object;Ljava\/lang\/Object;)Ljava\/lang\/Object;\n--method name computeIfAbsent descriptor (Ljava\/lang\/Object;Ljava\/util\/function\/Function;)Ljava\/lang\/Object;\n--method name computeIfPresent descriptor (Ljava\/lang\/Object;Ljava\/util\/function\/BiFunction;)Ljava\/lang\/Object;\n--method name compute descriptor (Ljava\/lang\/Object;Ljava\/util\/function\/BiFunction;)Ljava\/lang\/Object;\n--method name merge descriptor (Ljava\/lang\/Object;Ljava\/lang\/Object;Ljava\/util\/function\/BiFunction;)Ljava\/lang\/Object;\n-\n-class name java\/util\/IdentityHashMap\n--method name forEach descriptor (Ljava\/util\/function\/BiConsumer;)V\n--method name replaceAll descriptor (Ljava\/util\/function\/BiFunction;)V\n-\n--class name java\/util\/IntSummaryStatistics\n-\n-class name java\/util\/Iterator\n--method name remove descriptor ()V\n--method name forEachRemaining descriptor (Ljava\/util\/function\/Consumer;)V\n-method name remove descriptor ()V flags 401\n-\n-class name java\/util\/LinkedHashMap\n--method name getOrDefault descriptor (Ljava\/lang\/Object;Ljava\/lang\/Object;)Ljava\/lang\/Object;\n--method name keySet descriptor ()Ljava\/util\/Set;\n--method name values descriptor ()Ljava\/util\/Collection;\n--method name entrySet descriptor ()Ljava\/util\/Set;\n--method name forEach descriptor (Ljava\/util\/function\/BiConsumer;)V\n--method name replaceAll descriptor (Ljava\/util\/function\/BiFunction;)V\n-\n-class name java\/util\/LinkedHashSet\n--method name spliterator descriptor ()Ljava\/util\/Spliterator;\n-\n-class name java\/util\/LinkedList\n--method name spliterator descriptor ()Ljava\/util\/Spliterator;\n-\n-class name java\/util\/List\n--method name replaceAll descriptor (Ljava\/util\/function\/UnaryOperator;)V\n--method name sort descriptor (Ljava\/util\/Comparator;)V\n--method name spliterator descriptor ()Ljava\/util\/Spliterator;\n-\n-class name java\/util\/Locale\n-header extends java\/lang\/Object implements java\/lang\/Cloneable,java\/io\/Serializable flags 31\n-innerclass innerClass java\/util\/Locale$Category outerClass java\/util\/Locale innerClassName Category flags 4019\n-innerclass innerClass java\/util\/Locale$Builder outerClass java\/util\/Locale innerClassName Builder flags 19\n--method name hasExtensions descriptor ()Z\n--method name stripExtensions descriptor ()Ljava\/util\/Locale;\n--method name filter descriptor (Ljava\/util\/List;Ljava\/util\/Collection;Ljava\/util\/Locale$FilteringMode;)Ljava\/util\/List;\n--method name filter descriptor (Ljava\/util\/List;Ljava\/util\/Collection;)Ljava\/util\/List;\n--method name filterTags descriptor (Ljava\/util\/List;Ljava\/util\/Collection;Ljava\/util\/Locale$FilteringMode;)Ljava\/util\/List;\n--method name filterTags descriptor (Ljava\/util\/List;Ljava\/util\/Collection;)Ljava\/util\/List;\n--method name lookup descriptor (Ljava\/util\/List;Ljava\/util\/Collection;)Ljava\/util\/Locale;\n--method name lookupTag descriptor (Ljava\/util\/List;Ljava\/util\/Collection;)Ljava\/lang\/String;\n-\n--class name java\/util\/Locale$FilteringMode\n-\n--class name java\/util\/Locale$LanguageRange\n-\n--class name java\/util\/LongSummaryStatistics\n-\n-class name java\/util\/Map\n--method name getOrDefault descriptor (Ljava\/lang\/Object;Ljava\/lang\/Object;)Ljava\/lang\/Object;\n--method name forEach descriptor (Ljava\/util\/function\/BiConsumer;)V\n--method name replaceAll descriptor (Ljava\/util\/function\/BiFunction;)V\n--method name putIfAbsent descriptor (Ljava\/lang\/Object;Ljava\/lang\/Object;)Ljava\/lang\/Object;\n--method name remove descriptor (Ljava\/lang\/Object;Ljava\/lang\/Object;)Z\n--method name replace descriptor (Ljava\/lang\/Object;Ljava\/lang\/Object;Ljava\/lang\/Object;)Z\n--method name replace descriptor (Ljava\/lang\/Object;Ljava\/lang\/Object;)Ljava\/lang\/Object;\n--method name computeIfAbsent descriptor (Ljava\/lang\/Object;Ljava\/util\/function\/Function;)Ljava\/lang\/Object;\n--method name computeIfPresent descriptor (Ljava\/lang\/Object;Ljava\/util\/function\/BiFunction;)Ljava\/lang\/Object;\n--method name compute descriptor (Ljava\/lang\/Object;Ljava\/util\/function\/BiFunction;)Ljava\/lang\/Object;\n--method name merge descriptor (Ljava\/lang\/Object;Ljava\/lang\/Object;Ljava\/util\/function\/BiFunction;)Ljava\/lang\/Object;\n-\n-class name java\/util\/Map$Entry\n--method name comparingByKey descriptor ()Ljava\/util\/Comparator;\n--method name comparingByValue descriptor ()Ljava\/util\/Comparator;\n--method name comparingByKey descriptor (Ljava\/util\/Comparator;)Ljava\/util\/Comparator;\n--method name comparingByValue descriptor (Ljava\/util\/Comparator;)Ljava\/util\/Comparator;\n-\n-class name java\/util\/Objects\n--method name isNull descriptor (Ljava\/lang\/Object;)Z\n--method name nonNull descriptor (Ljava\/lang\/Object;)Z\n--method name requireNonNull descriptor (Ljava\/lang\/Object;Ljava\/util\/function\/Supplier;)Ljava\/lang\/Object;\n-\n--class name java\/util\/Optional\n-\n--class name java\/util\/OptionalDouble\n-\n--class name java\/util\/OptionalInt\n-\n--class name java\/util\/OptionalLong\n-\n--class name java\/util\/PrimitiveIterator\n-\n--class name java\/util\/PrimitiveIterator$OfDouble\n-\n--class name java\/util\/PrimitiveIterator$OfInt\n-\n--class name java\/util\/PrimitiveIterator$OfLong\n-\n-class name java\/util\/PriorityQueue\n--method name <init> descriptor (Ljava\/util\/Comparator;)V\n--method name spliterator descriptor ()Ljava\/util\/Spliterator;\n-\n-class name java\/util\/Random\n--method name ints descriptor (J)Ljava\/util\/stream\/IntStream;\n--method name ints descriptor ()Ljava\/util\/stream\/IntStream;\n--method name ints descriptor (JII)Ljava\/util\/stream\/IntStream;\n--method name ints descriptor (II)Ljava\/util\/stream\/IntStream;\n--method name longs descriptor (J)Ljava\/util\/stream\/LongStream;\n--method name longs descriptor ()Ljava\/util\/stream\/LongStream;\n--method name longs descriptor (JJJ)Ljava\/util\/stream\/LongStream;\n--method name longs descriptor (JJ)Ljava\/util\/stream\/LongStream;\n--method name doubles descriptor (J)Ljava\/util\/stream\/DoubleStream;\n--method name doubles descriptor ()Ljava\/util\/stream\/DoubleStream;\n--method name doubles descriptor (JDD)Ljava\/util\/stream\/DoubleStream;\n--method name doubles descriptor (DD)Ljava\/util\/stream\/DoubleStream;\n-\n-class name java\/util\/ResourceBundle\n--method name getBaseBundleName descriptor ()Ljava\/lang\/String;\n--method name getBundle descriptor (Ljava\/lang\/String;)Ljava\/util\/ResourceBundle;\n--method name getBundle descriptor (Ljava\/lang\/String;Ljava\/util\/ResourceBundle$Control;)Ljava\/util\/ResourceBundle;\n--method name getBundle descriptor (Ljava\/lang\/String;Ljava\/util\/Locale;)Ljava\/util\/ResourceBundle;\n--method name getBundle descriptor (Ljava\/lang\/String;Ljava\/util\/Locale;Ljava\/util\/ResourceBundle$Control;)Ljava\/util\/ResourceBundle;\n--method name clearCache descriptor ()V\n-method name getBundle descriptor (Ljava\/lang\/String;)Ljava\/util\/ResourceBundle; flags 19\n-method name getBundle descriptor (Ljava\/lang\/String;Ljava\/util\/ResourceBundle$Control;)Ljava\/util\/ResourceBundle; flags 19\n-method name getBundle descriptor (Ljava\/lang\/String;Ljava\/util\/Locale;)Ljava\/util\/ResourceBundle; flags 19\n-method name getBundle descriptor (Ljava\/lang\/String;Ljava\/util\/Locale;Ljava\/util\/ResourceBundle$Control;)Ljava\/util\/ResourceBundle; flags 19\n-method name clearCache descriptor ()V flags 19\n-\n-class name java\/util\/Set\n--method name spliterator descriptor ()Ljava\/util\/Spliterator;\n-\n-class name java\/util\/SortedSet\n--method name spliterator descriptor ()Ljava\/util\/Spliterator;\n-\n--class name java\/util\/Spliterator\n-\n--class name java\/util\/Spliterator$OfDouble\n-\n--class name java\/util\/Spliterator$OfInt\n-\n--class name java\/util\/Spliterator$OfLong\n-\n--class name java\/util\/Spliterator$OfPrimitive\n-\n--class name java\/util\/Spliterators\n-\n--class name java\/util\/Spliterators$AbstractDoubleSpliterator\n-\n--class name java\/util\/Spliterators$AbstractIntSpliterator\n-\n--class name java\/util\/Spliterators$AbstractLongSpliterator\n-\n--class name java\/util\/Spliterators$AbstractSpliterator\n-\n--class name java\/util\/SplittableRandom\n-\n--class name java\/util\/StringJoiner\n-\n-class name java\/util\/TimeZone\n--method name getTimeZone descriptor (Ljava\/time\/ZoneId;)Ljava\/util\/TimeZone;\n--method name toZoneId descriptor ()Ljava\/time\/ZoneId;\n-\n-class name java\/util\/TreeMap\n--method name replace descriptor (Ljava\/lang\/Object;Ljava\/lang\/Object;Ljava\/lang\/Object;)Z\n--method name replace descriptor (Ljava\/lang\/Object;Ljava\/lang\/Object;)Ljava\/lang\/Object;\n--method name forEach descriptor (Ljava\/util\/function\/BiConsumer;)V\n--method name replaceAll descriptor (Ljava\/util\/function\/BiFunction;)V\n-\n-class name java\/util\/TreeSet\n--method name spliterator descriptor ()Ljava\/util\/Spliterator;\n-\n-class name java\/util\/Vector\n--method name forEach descriptor (Ljava\/util\/function\/Consumer;)V\n--method name removeIf descriptor (Ljava\/util\/function\/Predicate;)Z\n--method name replaceAll descriptor (Ljava\/util\/function\/UnaryOperator;)V\n--method name sort descriptor (Ljava\/util\/Comparator;)V\n--method name spliterator descriptor ()Ljava\/util\/Spliterator;\n-\n-class name java\/util\/WeakHashMap\n--method name forEach descriptor (Ljava\/util\/function\/BiConsumer;)V\n--method name replaceAll descriptor (Ljava\/util\/function\/BiFunction;)V\n-\n-class name java\/util\/concurrent\/ArrayBlockingQueue\n--method name spliterator descriptor ()Ljava\/util\/Spliterator;\n-\n-class name java\/util\/concurrent\/Callable\n-header extends java\/lang\/Object flags 601 signature <V:Ljava\/lang\/Object;>Ljava\/lang\/Object;\n-\n--class name java\/util\/concurrent\/CompletableFuture\n-\n--class name java\/util\/concurrent\/CompletableFuture$AsynchronousCompletionTask\n-\n--class name java\/util\/concurrent\/CompletionException\n-\n--class name java\/util\/concurrent\/CompletionStage\n-\n-class name java\/util\/concurrent\/ConcurrentHashMap\n-header extends java\/util\/AbstractMap implements java\/util\/concurrent\/ConcurrentMap,java\/io\/Serializable flags 21 signature <K:Ljava\/lang\/Object;V:Ljava\/lang\/Object;>Ljava\/util\/AbstractMap<TK;TV;>;Ljava\/util\/concurrent\/ConcurrentMap<TK;TV;>;Ljava\/io\/Serializable;\n-innerclass innerClass java\/util\/Map$Entry outerClass java\/util\/Map innerClassName Entry flags 609\n--method name keySet descriptor ()Ljava\/util\/concurrent\/ConcurrentHashMap$KeySetView;\n--method name hashCode descriptor ()I\n--method name toString descriptor ()Ljava\/lang\/String;\n--method name equals descriptor (Ljava\/lang\/Object;)Z\n--method name getOrDefault descriptor (Ljava\/lang\/Object;Ljava\/lang\/Object;)Ljava\/lang\/Object;\n--method name forEach descriptor (Ljava\/util\/function\/BiConsumer;)V\n--method name replaceAll descriptor (Ljava\/util\/function\/BiFunction;)V\n--method name computeIfAbsent descriptor (Ljava\/lang\/Object;Ljava\/util\/function\/Function;)Ljava\/lang\/Object;\n--method name computeIfPresent descriptor (Ljava\/lang\/Object;Ljava\/util\/function\/BiFunction;)Ljava\/lang\/Object;\n--method name compute descriptor (Ljava\/lang\/Object;Ljava\/util\/function\/BiFunction;)Ljava\/lang\/Object;\n--method name merge descriptor (Ljava\/lang\/Object;Ljava\/lang\/Object;Ljava\/util\/function\/BiFunction;)Ljava\/lang\/Object;\n--method name mappingCount descriptor ()J\n--method name newKeySet descriptor ()Ljava\/util\/concurrent\/ConcurrentHashMap$KeySetView;\n--method name newKeySet descriptor (I)Ljava\/util\/concurrent\/ConcurrentHashMap$KeySetView;\n--method name keySet descriptor (Ljava\/lang\/Object;)Ljava\/util\/concurrent\/ConcurrentHashMap$KeySetView;\n--method name forEach descriptor (JLjava\/util\/function\/BiConsumer;)V\n--method name forEach descriptor (JLjava\/util\/function\/BiFunction;Ljava\/util\/function\/Consumer;)V\n--method name search descriptor (JLjava\/util\/function\/BiFunction;)Ljava\/lang\/Object;\n--method name reduce descriptor (JLjava\/util\/function\/BiFunction;Ljava\/util\/function\/BiFunction;)Ljava\/lang\/Object;\n--method name reduceToDouble descriptor (JLjava\/util\/function\/ToDoubleBiFunction;DLjava\/util\/function\/DoubleBinaryOperator;)D\n--method name reduceToLong descriptor (JLjava\/util\/function\/ToLongBiFunction;JLjava\/util\/function\/LongBinaryOperator;)J\n--method name reduceToInt descriptor (JLjava\/util\/function\/ToIntBiFunction;ILjava\/util\/function\/IntBinaryOperator;)I\n--method name forEachKey descriptor (JLjava\/util\/function\/Consumer;)V\n--method name forEachKey descriptor (JLjava\/util\/function\/Function;Ljava\/util\/function\/Consumer;)V\n--method name searchKeys descriptor (JLjava\/util\/function\/Function;)Ljava\/lang\/Object;\n--method name reduceKeys descriptor (JLjava\/util\/function\/BiFunction;)Ljava\/lang\/Object;\n--method name reduceKeys descriptor (JLjava\/util\/function\/Function;Ljava\/util\/function\/BiFunction;)Ljava\/lang\/Object;\n--method name reduceKeysToDouble descriptor (JLjava\/util\/function\/ToDoubleFunction;DLjava\/util\/function\/DoubleBinaryOperator;)D\n--method name reduceKeysToLong descriptor (JLjava\/util\/function\/ToLongFunction;JLjava\/util\/function\/LongBinaryOperator;)J\n--method name reduceKeysToInt descriptor (JLjava\/util\/function\/ToIntFunction;ILjava\/util\/function\/IntBinaryOperator;)I\n--method name forEachValue descriptor (JLjava\/util\/function\/Consumer;)V\n--method name forEachValue descriptor (JLjava\/util\/function\/Function;Ljava\/util\/function\/Consumer;)V\n--method name searchValues descriptor (JLjava\/util\/function\/Function;)Ljava\/lang\/Object;\n--method name reduceValues descriptor (JLjava\/util\/function\/BiFunction;)Ljava\/lang\/Object;\n--method name reduceValues descriptor (JLjava\/util\/function\/Function;Ljava\/util\/function\/BiFunction;)Ljava\/lang\/Object;\n--method name reduceValuesToDouble descriptor (JLjava\/util\/function\/ToDoubleFunction;DLjava\/util\/function\/DoubleBinaryOperator;)D\n--method name reduceValuesToLong descriptor (JLjava\/util\/function\/ToLongFunction;JLjava\/util\/function\/LongBinaryOperator;)J\n--method name reduceValuesToInt descriptor (JLjava\/util\/function\/ToIntFunction;ILjava\/util\/function\/IntBinaryOperator;)I\n--method name forEachEntry descriptor (JLjava\/util\/function\/Consumer;)V\n--method name forEachEntry descriptor (JLjava\/util\/function\/Function;Ljava\/util\/function\/Consumer;)V\n--method name searchEntries descriptor (JLjava\/util\/function\/Function;)Ljava\/lang\/Object;\n--method name reduceEntries descriptor (JLjava\/util\/function\/BiFunction;)Ljava\/util\/Map$Entry;\n--method name reduceEntries descriptor (JLjava\/util\/function\/Function;Ljava\/util\/function\/BiFunction;)Ljava\/lang\/Object;\n--method name reduceEntriesToDouble descriptor (JLjava\/util\/function\/ToDoubleFunction;DLjava\/util\/function\/DoubleBinaryOperator;)D\n--method name reduceEntriesToLong descriptor (JLjava\/util\/function\/ToLongFunction;JLjava\/util\/function\/LongBinaryOperator;)J\n--method name reduceEntriesToInt descriptor (JLjava\/util\/function\/ToIntFunction;ILjava\/util\/function\/IntBinaryOperator;)I\n--method name keySet descriptor ()Ljava\/util\/Set;\n-method name keySet descriptor ()Ljava\/util\/Set; flags 1 signature ()Ljava\/util\/Set<TK;>;\n-\n--class name java\/util\/concurrent\/ConcurrentHashMap$CollectionView\n-\n--class name java\/util\/concurrent\/ConcurrentHashMap$KeySetView\n-\n-class name java\/util\/concurrent\/ConcurrentLinkedDeque\n--method name spliterator descriptor ()Ljava\/util\/Spliterator;\n-\n-class name java\/util\/concurrent\/ConcurrentLinkedQueue\n--method name spliterator descriptor ()Ljava\/util\/Spliterator;\n-\n-class name java\/util\/concurrent\/ConcurrentMap\n--method name getOrDefault descriptor (Ljava\/lang\/Object;Ljava\/lang\/Object;)Ljava\/lang\/Object;\n--method name forEach descriptor (Ljava\/util\/function\/BiConsumer;)V\n--method name replaceAll descriptor (Ljava\/util\/function\/BiFunction;)V\n--method name computeIfAbsent descriptor (Ljava\/lang\/Object;Ljava\/util\/function\/Function;)Ljava\/lang\/Object;\n--method name computeIfPresent descriptor (Ljava\/lang\/Object;Ljava\/util\/function\/BiFunction;)Ljava\/lang\/Object;\n--method name compute descriptor (Ljava\/lang\/Object;Ljava\/util\/function\/BiFunction;)Ljava\/lang\/Object;\n--method name merge descriptor (Ljava\/lang\/Object;Ljava\/lang\/Object;Ljava\/util\/function\/BiFunction;)Ljava\/lang\/Object;\n-\n-class name java\/util\/concurrent\/ConcurrentNavigableMap\n--method name keySet descriptor ()Ljava\/util\/Set;\n--method name tailMap descriptor (Ljava\/lang\/Object;)Ljava\/util\/SortedMap;\n--method name headMap descriptor (Ljava\/lang\/Object;)Ljava\/util\/SortedMap;\n--method name subMap descriptor (Ljava\/lang\/Object;Ljava\/lang\/Object;)Ljava\/util\/SortedMap;\n--method name tailMap descriptor (Ljava\/lang\/Object;Z)Ljava\/util\/NavigableMap;\n--method name headMap descriptor (Ljava\/lang\/Object;Z)Ljava\/util\/NavigableMap;\n--method name subMap descriptor (Ljava\/lang\/Object;ZLjava\/lang\/Object;Z)Ljava\/util\/NavigableMap;\n--method name descendingMap descriptor ()Ljava\/util\/NavigableMap;\n-\n-class name java\/util\/concurrent\/ConcurrentSkipListMap\n--method name getOrDefault descriptor (Ljava\/lang\/Object;Ljava\/lang\/Object;)Ljava\/lang\/Object;\n--method name computeIfAbsent descriptor (Ljava\/lang\/Object;Ljava\/util\/function\/Function;)Ljava\/lang\/Object;\n--method name computeIfPresent descriptor (Ljava\/lang\/Object;Ljava\/util\/function\/BiFunction;)Ljava\/lang\/Object;\n--method name compute descriptor (Ljava\/lang\/Object;Ljava\/util\/function\/BiFunction;)Ljava\/lang\/Object;\n--method name merge descriptor (Ljava\/lang\/Object;Ljava\/lang\/Object;Ljava\/util\/function\/BiFunction;)Ljava\/lang\/Object;\n--method name forEach descriptor (Ljava\/util\/function\/BiConsumer;)V\n--method name replaceAll descriptor (Ljava\/util\/function\/BiFunction;)V\n-\n-class name java\/util\/concurrent\/ConcurrentSkipListSet\n--method name spliterator descriptor ()Ljava\/util\/Spliterator;\n-\n-class name java\/util\/concurrent\/CopyOnWriteArrayList\n--method name forEach descriptor (Ljava\/util\/function\/Consumer;)V\n--method name removeIf descriptor (Ljava\/util\/function\/Predicate;)Z\n--method name replaceAll descriptor (Ljava\/util\/function\/UnaryOperator;)V\n--method name sort descriptor (Ljava\/util\/Comparator;)V\n--method name spliterator descriptor ()Ljava\/util\/Spliterator;\n-\n-class name java\/util\/concurrent\/CopyOnWriteArraySet\n--method name removeIf descriptor (Ljava\/util\/function\/Predicate;)Z\n--method name forEach descriptor (Ljava\/util\/function\/Consumer;)V\n--method name spliterator descriptor ()Ljava\/util\/Spliterator;\n-\n--class name java\/util\/concurrent\/CountedCompleter\n-\n-class name java\/util\/concurrent\/Executors\n--method name newWorkStealingPool descriptor (I)Ljava\/util\/concurrent\/ExecutorService;\n--method name newWorkStealingPool descriptor ()Ljava\/util\/concurrent\/ExecutorService;\n-\n-class name java\/util\/concurrent\/ForkJoinPool\n-header extends java\/util\/concurrent\/AbstractExecutorService flags 21\n-innerclass innerClass java\/util\/concurrent\/ForkJoinPool$ForkJoinWorkerThreadFactory outerClass java\/util\/concurrent\/ForkJoinPool innerClassName ForkJoinWorkerThreadFactory flags 609\n-innerclass innerClass java\/util\/concurrent\/ForkJoinPool$ManagedBlocker outerClass java\/util\/concurrent\/ForkJoinPool innerClassName ManagedBlocker flags 609\n-innerclass innerClass java\/lang\/Thread$UncaughtExceptionHandler outerClass java\/lang\/Thread innerClassName UncaughtExceptionHandler flags 609\n--method name commonPool descriptor ()Ljava\/util\/concurrent\/ForkJoinPool;\n--method name getCommonPoolParallelism descriptor ()I\n--method name awaitQuiescence descriptor (JLjava\/util\/concurrent\/TimeUnit;)Z\n-\n-class name java\/util\/concurrent\/ForkJoinTask\n--method name quietlyComplete descriptor ()V\n--method name getForkJoinTaskTag descriptor ()S\n--method name setForkJoinTaskTag descriptor (S)S\n--method name compareAndSetForkJoinTaskTag descriptor (SS)Z\n-\n-class name java\/util\/concurrent\/LinkedBlockingDeque\n--method name spliterator descriptor ()Ljava\/util\/Spliterator;\n-\n-class name java\/util\/concurrent\/LinkedBlockingQueue\n--method name spliterator descriptor ()Ljava\/util\/Spliterator;\n-\n-class name java\/util\/concurrent\/LinkedTransferQueue\n--method name spliterator descriptor ()Ljava\/util\/Spliterator;\n-\n-class name java\/util\/concurrent\/PriorityBlockingQueue\n--method name spliterator descriptor ()Ljava\/util\/Spliterator;\n-\n-class name java\/util\/concurrent\/SynchronousQueue\n--method name spliterator descriptor ()Ljava\/util\/Spliterator;\n-\n-class name java\/util\/concurrent\/ThreadLocalRandom\n--method name nextInt descriptor ()I\n--method name nextInt descriptor (I)I\n--method name nextLong descriptor ()J\n--method name nextDouble descriptor ()D\n--method name nextBoolean descriptor ()Z\n--method name nextFloat descriptor ()F\n--method name nextGaussian descriptor ()D\n--method name ints descriptor (J)Ljava\/util\/stream\/IntStream;\n--method name ints descriptor ()Ljava\/util\/stream\/IntStream;\n--method name ints descriptor (JII)Ljava\/util\/stream\/IntStream;\n--method name ints descriptor (II)Ljava\/util\/stream\/IntStream;\n--method name longs descriptor (J)Ljava\/util\/stream\/LongStream;\n--method name longs descriptor ()Ljava\/util\/stream\/LongStream;\n--method name longs descriptor (JJJ)Ljava\/util\/stream\/LongStream;\n--method name longs descriptor (JJ)Ljava\/util\/stream\/LongStream;\n--method name doubles descriptor (J)Ljava\/util\/stream\/DoubleStream;\n--method name doubles descriptor ()Ljava\/util\/stream\/DoubleStream;\n--method name doubles descriptor (JDD)Ljava\/util\/stream\/DoubleStream;\n--method name doubles descriptor (DD)Ljava\/util\/stream\/DoubleStream;\n-\n-class name java\/util\/concurrent\/atomic\/AtomicInteger\n--method name getAndUpdate descriptor (Ljava\/util\/function\/IntUnaryOperator;)I\n--method name updateAndGet descriptor (Ljava\/util\/function\/IntUnaryOperator;)I\n--method name getAndAccumulate descriptor (ILjava\/util\/function\/IntBinaryOperator;)I\n--method name accumulateAndGet descriptor (ILjava\/util\/function\/IntBinaryOperator;)I\n-\n-class name java\/util\/concurrent\/atomic\/AtomicIntegerArray\n--method name getAndUpdate descriptor (ILjava\/util\/function\/IntUnaryOperator;)I\n--method name updateAndGet descriptor (ILjava\/util\/function\/IntUnaryOperator;)I\n--method name getAndAccumulate descriptor (IILjava\/util\/function\/IntBinaryOperator;)I\n--method name accumulateAndGet descriptor (IILjava\/util\/function\/IntBinaryOperator;)I\n-\n-class name java\/util\/concurrent\/atomic\/AtomicIntegerFieldUpdater\n--method name newUpdater descriptor (Ljava\/lang\/Class;Ljava\/lang\/String;)Ljava\/util\/concurrent\/atomic\/AtomicIntegerFieldUpdater;\n--method name getAndUpdate descriptor (Ljava\/lang\/Object;Ljava\/util\/function\/IntUnaryOperator;)I\n--method name updateAndGet descriptor (Ljava\/lang\/Object;Ljava\/util\/function\/IntUnaryOperator;)I\n--method name getAndAccumulate descriptor (Ljava\/lang\/Object;ILjava\/util\/function\/IntBinaryOperator;)I\n--method name accumulateAndGet descriptor (Ljava\/lang\/Object;ILjava\/util\/function\/IntBinaryOperator;)I\n-method name newUpdater descriptor (Ljava\/lang\/Class;Ljava\/lang\/String;)Ljava\/util\/concurrent\/atomic\/AtomicIntegerFieldUpdater; flags 9 signature <U:Ljava\/lang\/Object;>(Ljava\/lang\/Class<TU;>;Ljava\/lang\/String;)Ljava\/util\/concurrent\/atomic\/AtomicIntegerFieldUpdater<TU;>;\n-\n-class name java\/util\/concurrent\/atomic\/AtomicLong\n--method name getAndUpdate descriptor (Ljava\/util\/function\/LongUnaryOperator;)J\n--method name updateAndGet descriptor (Ljava\/util\/function\/LongUnaryOperator;)J\n--method name getAndAccumulate descriptor (JLjava\/util\/function\/LongBinaryOperator;)J\n--method name accumulateAndGet descriptor (JLjava\/util\/function\/LongBinaryOperator;)J\n-\n-class name java\/util\/concurrent\/atomic\/AtomicLongArray\n--method name getAndUpdate descriptor (ILjava\/util\/function\/LongUnaryOperator;)J\n--method name updateAndGet descriptor (ILjava\/util\/function\/LongUnaryOperator;)J\n--method name getAndAccumulate descriptor (IJLjava\/util\/function\/LongBinaryOperator;)J\n--method name accumulateAndGet descriptor (IJLjava\/util\/function\/LongBinaryOperator;)J\n-\n-class name java\/util\/concurrent\/atomic\/AtomicLongFieldUpdater\n--method name newUpdater descriptor (Ljava\/lang\/Class;Ljava\/lang\/String;)Ljava\/util\/concurrent\/atomic\/AtomicLongFieldUpdater;\n--method name getAndUpdate descriptor (Ljava\/lang\/Object;Ljava\/util\/function\/LongUnaryOperator;)J\n--method name updateAndGet descriptor (Ljava\/lang\/Object;Ljava\/util\/function\/LongUnaryOperator;)J\n--method name getAndAccumulate descriptor (Ljava\/lang\/Object;JLjava\/util\/function\/LongBinaryOperator;)J\n--method name accumulateAndGet descriptor (Ljava\/lang\/Object;JLjava\/util\/function\/LongBinaryOperator;)J\n-method name newUpdater descriptor (Ljava\/lang\/Class;Ljava\/lang\/String;)Ljava\/util\/concurrent\/atomic\/AtomicLongFieldUpdater; flags 9 signature <U:Ljava\/lang\/Object;>(Ljava\/lang\/Class<TU;>;Ljava\/lang\/String;)Ljava\/util\/concurrent\/atomic\/AtomicLongFieldUpdater<TU;>;\n-\n-class name java\/util\/concurrent\/atomic\/AtomicReference\n--method name getAndUpdate descriptor (Ljava\/util\/function\/UnaryOperator;)Ljava\/lang\/Object;\n--method name updateAndGet descriptor (Ljava\/util\/function\/UnaryOperator;)Ljava\/lang\/Object;\n--method name getAndAccumulate descriptor (Ljava\/lang\/Object;Ljava\/util\/function\/BinaryOperator;)Ljava\/lang\/Object;\n--method name accumulateAndGet descriptor (Ljava\/lang\/Object;Ljava\/util\/function\/BinaryOperator;)Ljava\/lang\/Object;\n-\n-class name java\/util\/concurrent\/atomic\/AtomicReferenceArray\n--method name getAndUpdate descriptor (ILjava\/util\/function\/UnaryOperator;)Ljava\/lang\/Object;\n--method name updateAndGet descriptor (ILjava\/util\/function\/UnaryOperator;)Ljava\/lang\/Object;\n--method name getAndAccumulate descriptor (ILjava\/lang\/Object;Ljava\/util\/function\/BinaryOperator;)Ljava\/lang\/Object;\n--method name accumulateAndGet descriptor (ILjava\/lang\/Object;Ljava\/util\/function\/BinaryOperator;)Ljava\/lang\/Object;\n-\n-class name java\/util\/concurrent\/atomic\/AtomicReferenceFieldUpdater\n--method name newUpdater descriptor (Ljava\/lang\/Class;Ljava\/lang\/Class;Ljava\/lang\/String;)Ljava\/util\/concurrent\/atomic\/AtomicReferenceFieldUpdater;\n--method name getAndUpdate descriptor (Ljava\/lang\/Object;Ljava\/util\/function\/UnaryOperator;)Ljava\/lang\/Object;\n--method name updateAndGet descriptor (Ljava\/lang\/Object;Ljava\/util\/function\/UnaryOperator;)Ljava\/lang\/Object;\n--method name getAndAccumulate descriptor (Ljava\/lang\/Object;Ljava\/lang\/Object;Ljava\/util\/function\/BinaryOperator;)Ljava\/lang\/Object;\n--method name accumulateAndGet descriptor (Ljava\/lang\/Object;Ljava\/lang\/Object;Ljava\/util\/function\/BinaryOperator;)Ljava\/lang\/Object;\n-method name newUpdater descriptor (Ljava\/lang\/Class;Ljava\/lang\/Class;Ljava\/lang\/String;)Ljava\/util\/concurrent\/atomic\/AtomicReferenceFieldUpdater; flags 9 signature <U:Ljava\/lang\/Object;W:Ljava\/lang\/Object;>(Ljava\/lang\/Class<TU;>;Ljava\/lang\/Class<TW;>;Ljava\/lang\/String;)Ljava\/util\/concurrent\/atomic\/AtomicReferenceFieldUpdater<TU;TW;>;\n-\n--class name java\/util\/concurrent\/atomic\/DoubleAccumulator\n-\n--class name java\/util\/concurrent\/atomic\/DoubleAdder\n-\n--class name java\/util\/concurrent\/atomic\/LongAccumulator\n-\n--class name java\/util\/concurrent\/atomic\/LongAdder\n-\n--class name java\/util\/concurrent\/atomic\/Striped64\n-\n--class name java\/util\/concurrent\/locks\/StampedLock\n-\n--class name java\/util\/function\/BiConsumer\n-\n--class name java\/util\/function\/BiFunction\n-\n--class name java\/util\/function\/BiPredicate\n-\n--class name java\/util\/function\/BinaryOperator\n-\n--class name java\/util\/function\/BooleanSupplier\n-\n--class name java\/util\/function\/Consumer\n-\n--class name java\/util\/function\/DoubleBinaryOperator\n-\n--class name java\/util\/function\/DoubleConsumer\n-\n--class name java\/util\/function\/DoubleFunction\n-\n--class name java\/util\/function\/DoublePredicate\n-\n--class name java\/util\/function\/DoubleSupplier\n-\n--class name java\/util\/function\/DoubleToIntFunction\n-\n--class name java\/util\/function\/DoubleToLongFunction\n-\n--class name java\/util\/function\/DoubleUnaryOperator\n-\n--class name java\/util\/function\/Function\n-\n--class name java\/util\/function\/IntBinaryOperator\n-\n--class name java\/util\/function\/IntConsumer\n-\n--class name java\/util\/function\/IntFunction\n-\n--class name java\/util\/function\/IntPredicate\n-\n--class name java\/util\/function\/IntSupplier\n-\n--class name java\/util\/function\/IntToDoubleFunction\n-\n--class name java\/util\/function\/IntToLongFunction\n-\n--class name java\/util\/function\/IntUnaryOperator\n-\n--class name java\/util\/function\/LongBinaryOperator\n-\n--class name java\/util\/function\/LongConsumer\n-\n--class name java\/util\/function\/LongFunction\n-\n--class name java\/util\/function\/LongPredicate\n-\n--class name java\/util\/function\/LongSupplier\n-\n--class name java\/util\/function\/LongToDoubleFunction\n-\n--class name java\/util\/function\/LongToIntFunction\n-\n--class name java\/util\/function\/LongUnaryOperator\n-\n--class name java\/util\/function\/ObjDoubleConsumer\n-\n--class name java\/util\/function\/ObjIntConsumer\n-\n--class name java\/util\/function\/ObjLongConsumer\n-\n--class name java\/util\/function\/Predicate\n-\n--class name java\/util\/function\/Supplier\n-\n--class name java\/util\/function\/ToDoubleBiFunction\n-\n--class name java\/util\/function\/ToDoubleFunction\n-\n--class name java\/util\/function\/ToIntBiFunction\n-\n--class name java\/util\/function\/ToIntFunction\n-\n--class name java\/util\/function\/ToLongBiFunction\n-\n--class name java\/util\/function\/ToLongFunction\n-\n--class name java\/util\/function\/UnaryOperator\n-\n-class name java\/util\/jar\/Attributes$Name\n--field name EXTENSION_INSTALLATION descriptor Ljava\/util\/jar\/Attributes$Name;\n--field name IMPLEMENTATION_VENDOR_ID descriptor Ljava\/util\/jar\/Attributes$Name;\n--field name IMPLEMENTATION_URL descriptor Ljava\/util\/jar\/Attributes$Name;\n-field name EXTENSION_INSTALLATION descriptor Ljava\/util\/jar\/Attributes$Name; flags 19\n-field name IMPLEMENTATION_VENDOR_ID descriptor Ljava\/util\/jar\/Attributes$Name; flags 19\n-field name IMPLEMENTATION_URL descriptor Ljava\/util\/jar\/Attributes$Name; flags 19\n-\n-class name java\/util\/jar\/JarFile\n--method name stream descriptor ()Ljava\/util\/stream\/Stream;\n-\n-class name java\/util\/jar\/Pack200$Packer\n--method name addPropertyChangeListener descriptor (Ljava\/beans\/PropertyChangeListener;)V\n--method name removePropertyChangeListener descriptor (Ljava\/beans\/PropertyChangeListener;)V\n-method name addPropertyChangeListener descriptor (Ljava\/beans\/PropertyChangeListener;)V flags 401\n-method name removePropertyChangeListener descriptor (Ljava\/beans\/PropertyChangeListener;)V flags 401\n-\n-class name java\/util\/jar\/Pack200$Unpacker\n--method name addPropertyChangeListener descriptor (Ljava\/beans\/PropertyChangeListener;)V\n--method name removePropertyChangeListener descriptor (Ljava\/beans\/PropertyChangeListener;)V\n-method name addPropertyChangeListener descriptor (Ljava\/beans\/PropertyChangeListener;)V flags 401\n-method name removePropertyChangeListener descriptor (Ljava\/beans\/PropertyChangeListener;)V flags 401\n-\n-class name java\/util\/regex\/Matcher\n--method name start descriptor (Ljava\/lang\/String;)I\n--method name end descriptor (Ljava\/lang\/String;)I\n-\n-class name java\/util\/regex\/Pattern\n--method name asPredicate descriptor ()Ljava\/util\/function\/Predicate;\n--method name splitAsStream descriptor (Ljava\/lang\/CharSequence;)Ljava\/util\/stream\/Stream;\n-\n--class name java\/util\/spi\/CalendarDataProvider\n-\n--class name java\/util\/spi\/CalendarNameProvider\n-\n-class name java\/util\/spi\/LocaleServiceProvider\n--method name isSupportedLocale descriptor (Ljava\/util\/Locale;)Z\n-\n--class name java\/util\/spi\/ResourceBundleControlProvider\n-\n-class name java\/util\/spi\/TimeZoneNameProvider\n--method name getGenericDisplayName descriptor (Ljava\/lang\/String;ILjava\/util\/Locale;)Ljava\/lang\/String;\n-\n--class name java\/util\/stream\/BaseStream\n-\n--class name java\/util\/stream\/Collector\n-\n--class name java\/util\/stream\/Collector$Characteristics\n-\n--class name java\/util\/stream\/Collectors\n-\n--class name java\/util\/stream\/DoubleStream\n-\n--class name java\/util\/stream\/DoubleStream$Builder\n-\n--class name java\/util\/stream\/IntStream\n-\n--class name java\/util\/stream\/IntStream$Builder\n-\n--class name java\/util\/stream\/LongStream\n-\n--class name java\/util\/stream\/LongStream$Builder\n-\n--class name java\/util\/stream\/Stream\n-\n--class name java\/util\/stream\/Stream$Builder\n-\n--class name java\/util\/stream\/StreamSupport\n-\n-class name java\/util\/zip\/Adler32\n--method name update descriptor (Ljava\/nio\/ByteBuffer;)V\n-\n-class name java\/util\/zip\/CRC32\n--method name update descriptor (Ljava\/nio\/ByteBuffer;)V\n-\n-class name java\/util\/zip\/ZipEntry\n--method name setLastModifiedTime descriptor (Ljava\/nio\/file\/attribute\/FileTime;)Ljava\/util\/zip\/ZipEntry;\n--method name getLastModifiedTime descriptor ()Ljava\/nio\/file\/attribute\/FileTime;\n--method name setLastAccessTime descriptor (Ljava\/nio\/file\/attribute\/FileTime;)Ljava\/util\/zip\/ZipEntry;\n--method name getLastAccessTime descriptor ()Ljava\/nio\/file\/attribute\/FileTime;\n--method name setCreationTime descriptor (Ljava\/nio\/file\/attribute\/FileTime;)Ljava\/util\/zip\/ZipEntry;\n--method name getCreationTime descriptor ()Ljava\/nio\/file\/attribute\/FileTime;\n-\n-class name java\/util\/zip\/ZipFile\n--method name stream descriptor ()Ljava\/util\/stream\/Stream;\n-\n-class name javax\/crypto\/SealedObject\n-header extends java\/lang\/Object implements java\/io\/Serializable flags 21\n-\n-class name javax\/crypto\/SecretKey\n-header extends java\/lang\/Object implements java\/security\/Key flags 601\n-\n-class name javax\/crypto\/SecretKeyFactory\n--method name getKeySpec descriptor (Ljavax\/crypto\/SecretKey;Ljava\/lang\/Class;)Ljava\/security\/spec\/KeySpec;\n-method name getKeySpec descriptor (Ljavax\/crypto\/SecretKey;Ljava\/lang\/Class;)Ljava\/security\/spec\/KeySpec; thrownTypes java\/security\/spec\/InvalidKeySpecException flags 11\n-\n-class name javax\/crypto\/SecretKeyFactorySpi\n--method name engineGetKeySpec descriptor (Ljavax\/crypto\/SecretKey;Ljava\/lang\/Class;)Ljava\/security\/spec\/KeySpec;\n-method name engineGetKeySpec descriptor (Ljavax\/crypto\/SecretKey;Ljava\/lang\/Class;)Ljava\/security\/spec\/KeySpec; thrownTypes java\/security\/spec\/InvalidKeySpecException flags 404\n-\n-class name javax\/crypto\/spec\/PBEParameterSpec\n--method name <init> descriptor ([BILjava\/security\/spec\/AlgorithmParameterSpec;)V\n--method name getParameterSpec descriptor ()Ljava\/security\/spec\/AlgorithmParameterSpec;\n-\n-class name javax\/net\/ssl\/ExtendedSSLSession\n--method name getRequestedServerNames descriptor ()Ljava\/util\/List;\n-\n--class name javax\/net\/ssl\/SNIHostName\n-\n--class name javax\/net\/ssl\/SNIMatcher\n-\n--class name javax\/net\/ssl\/SNIServerName\n-\n-class name javax\/net\/ssl\/SSLEngine\n--method name getApplicationProtocol descriptor ()Ljava\/lang\/String;\n--method name getHandshakeApplicationProtocol descriptor ()Ljava\/lang\/String;\n--method name setHandshakeApplicationProtocolSelector descriptor (Ljava\/util\/function\/BiFunction;)V\n--method name getHandshakeApplicationProtocolSelector descriptor ()Ljava\/util\/function\/BiFunction;\n-\n-class name javax\/net\/ssl\/SSLParameters\n--method name setServerNames descriptor (Ljava\/util\/List;)V\n--method name getServerNames descriptor ()Ljava\/util\/List;\n--method name setSNIMatchers descriptor (Ljava\/util\/Collection;)V\n--method name getSNIMatchers descriptor ()Ljava\/util\/Collection;\n--method name setUseCipherSuitesOrder descriptor (Z)V\n--method name getUseCipherSuitesOrder descriptor ()Z\n--method name getApplicationProtocols descriptor ()[Ljava\/lang\/String;\n--method name setApplicationProtocols descriptor ([Ljava\/lang\/String;)V\n-\n-class name javax\/net\/ssl\/SSLSocket\n--method name getApplicationProtocol descriptor ()Ljava\/lang\/String;\n--method name getHandshakeApplicationProtocol descriptor ()Ljava\/lang\/String;\n--method name setHandshakeApplicationProtocolSelector descriptor (Ljava\/util\/function\/BiFunction;)V\n--method name getHandshakeApplicationProtocolSelector descriptor ()Ljava\/util\/function\/BiFunction;\n-\n-class name javax\/net\/ssl\/SSLSocketFactory\n--method name createSocket descriptor (Ljava\/net\/Socket;Ljava\/io\/InputStream;Z)Ljava\/net\/Socket;\n-\n--class name javax\/net\/ssl\/StandardConstants\n-\n-class name javax\/security\/auth\/Destroyable\n--method name destroy descriptor ()V\n--method name isDestroyed descriptor ()Z\n-method name destroy descriptor ()V thrownTypes javax\/security\/auth\/DestroyFailedException flags 401\n-method name isDestroyed descriptor ()Z flags 401\n-\n--class name jdk\/Exported\n-\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/java.base-7.sym.txt","additions":0,"deletions":1634,"binary":false,"changes":1634,"status":"deleted"},{"patch":"@@ -1,103 +0,0 @@\n-#\n-# Copyright (c) 2015, 2017, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.  Oracle designates this\n-# particular file as subject to the \"Classpath\" exception as provided\n-# by Oracle in the LICENSE file that accompanied this code.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-# ##########################################################\n-# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n-# ##########################################################\n-#\n--class name javax\/lang\/model\/AnnotatedConstruct\n-\n-class name javax\/lang\/model\/SourceVersion\n--field name RELEASE_8 descriptor Ljavax\/lang\/model\/SourceVersion;\n-\n-class name javax\/lang\/model\/element\/Element\n-header extends java\/lang\/Object flags 601\n-\n-class name javax\/lang\/model\/element\/ExecutableElement\n--method name getReceiverType descriptor ()Ljavax\/lang\/model\/type\/TypeMirror;\n--method name isDefault descriptor ()Z\n-\n-class name javax\/lang\/model\/element\/Modifier\n--field name DEFAULT descriptor Ljavax\/lang\/model\/element\/Modifier;\n-\n-class name javax\/lang\/model\/element\/PackageElement\n--method name getEnclosedElements descriptor ()Ljava\/util\/List;\n-\n-class name javax\/lang\/model\/element\/VariableElement\n--method name getSimpleName descriptor ()Ljavax\/lang\/model\/element\/Name;\n--method name getEnclosingElement descriptor ()Ljavax\/lang\/model\/element\/Element;\n-\n-class name javax\/lang\/model\/type\/ExecutableType\n--method name getReceiverType descriptor ()Ljavax\/lang\/model\/type\/TypeMirror;\n-\n--class name javax\/lang\/model\/type\/IntersectionType\n-\n-class name javax\/lang\/model\/type\/TypeKind\n--field name INTERSECTION descriptor Ljavax\/lang\/model\/type\/TypeKind;\n-\n-class name javax\/lang\/model\/type\/TypeMirror\n-header extends java\/lang\/Object flags 601\n-\n-class name javax\/lang\/model\/type\/TypeVisitor\n--method name visitIntersection descriptor (Ljavax\/lang\/model\/type\/IntersectionType;Ljava\/lang\/Object;)Ljava\/lang\/Object;\n-\n--class name javax\/lang\/model\/util\/AbstractAnnotationValueVisitor8\n-\n--class name javax\/lang\/model\/util\/AbstractElementVisitor8\n-\n-class name javax\/lang\/model\/util\/AbstractTypeVisitor6\n--method name visitIntersection descriptor (Ljavax\/lang\/model\/type\/IntersectionType;Ljava\/lang\/Object;)Ljava\/lang\/Object;\n-\n--class name javax\/lang\/model\/util\/AbstractTypeVisitor8\n-\n--class name javax\/lang\/model\/util\/ElementKindVisitor8\n-\n--class name javax\/lang\/model\/util\/ElementScanner8\n-\n-class name javax\/lang\/model\/util\/Elements\n--method name isFunctionalInterface descriptor (Ljavax\/lang\/model\/element\/TypeElement;)Z\n-\n--class name javax\/lang\/model\/util\/SimpleAnnotationValueVisitor8\n-\n--class name javax\/lang\/model\/util\/SimpleElementVisitor8\n-\n--class name javax\/lang\/model\/util\/SimpleTypeVisitor8\n-\n--class name javax\/lang\/model\/util\/TypeKindVisitor8\n-\n--class name javax\/tools\/DocumentationTool\n-\n--class name javax\/tools\/DocumentationTool$DocumentationTask\n-\n--class name javax\/tools\/DocumentationTool$Location\n-\n-class name javax\/tools\/JavaCompiler$CompilationTask\n--method name call descriptor ()Ljava\/lang\/Object;\n-\n-class name javax\/tools\/StandardLocation\n--field name NATIVE_HEADER_OUTPUT descriptor Ljavax\/tools\/StandardLocation;\n-\n-class name javax\/tools\/ToolProvider\n--method name getSystemDocumentationTool descriptor ()Ljavax\/tools\/DocumentationTool;\n-\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/java.compiler-7.sym.txt","additions":0,"deletions":103,"binary":false,"changes":103,"status":"deleted"},{"patch":"@@ -1,33 +0,0 @@\n-#\n-# Copyright (c) 2015, 2017, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.  Oracle designates this\n-# particular file as subject to the \"Classpath\" exception as provided\n-# by Oracle in the LICENSE file that accompanied this code.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-# ##########################################################\n-# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n-# ##########################################################\n-#\n-class name java\/awt\/datatransfer\/DataFlavor\n--field name selectionHtmlFlavor descriptor Ljava\/awt\/datatransfer\/DataFlavor;\n--field name fragmentHtmlFlavor descriptor Ljava\/awt\/datatransfer\/DataFlavor;\n--field name allHtmlFlavor descriptor Ljava\/awt\/datatransfer\/DataFlavor;\n-\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/java.datatransfer-7.sym.txt","additions":0,"deletions":33,"binary":false,"changes":33,"status":"deleted"},{"patch":"@@ -1,110 +0,0 @@\n-#\n-# Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.  Oracle designates this\n-# particular file as subject to the \"Classpath\" exception as provided\n-# by Oracle in the LICENSE file that accompanied this code.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-# ##########################################################\n-# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n-# ##########################################################\n-#\n-class name java\/awt\/Component\n--field name accessibleContext descriptor Ljavax\/accessibility\/AccessibleContext;\n-\n-class name java\/awt\/Container$AccessibleAWTContainer\n--method name removePropertyChangeListener descriptor (Ljava\/beans\/PropertyChangeListener;)V\n-\n-class name java\/awt\/KeyEventDispatcher\n-header extends java\/lang\/Object flags 601\n-\n-class name java\/awt\/KeyEventPostProcessor\n-header extends java\/lang\/Object flags 601\n-\n-class name java\/awt\/KeyboardFocusManager\n--method name setGlobalFocusOwner descriptor (Ljava\/awt\/Component;)V\n--method name clearFocusOwner descriptor ()V\n--method name clearGlobalFocusOwner descriptor ()V\n--method name setGlobalPermanentFocusOwner descriptor (Ljava\/awt\/Component;)V\n--method name setGlobalFocusedWindow descriptor (Ljava\/awt\/Window;)V\n--method name setGlobalActiveWindow descriptor (Ljava\/awt\/Window;)V\n--method name setGlobalCurrentFocusCycleRoot descriptor (Ljava\/awt\/Container;)V\n-method name setGlobalFocusOwner descriptor (Ljava\/awt\/Component;)V flags 4\n-method name clearGlobalFocusOwner descriptor ()V flags 1\n-method name setGlobalPermanentFocusOwner descriptor (Ljava\/awt\/Component;)V flags 4\n-method name setGlobalFocusedWindow descriptor (Ljava\/awt\/Window;)V flags 4\n-method name setGlobalActiveWindow descriptor (Ljava\/awt\/Window;)V flags 4\n-method name setGlobalCurrentFocusCycleRoot descriptor (Ljava\/awt\/Container;)V flags 1\n-\n-class name java\/awt\/event\/InvocationEvent\n--field name notifier descriptor Ljava\/lang\/Object;\n-field name notifier descriptor Ljava\/lang\/Object; flags 4\n--method name <init> descriptor (Ljava\/lang\/Object;Ljava\/lang\/Runnable;Ljava\/lang\/Runnable;Z)V\n-\n-class name java\/awt\/peer\/ComponentPeer\n-method name getToolkit descriptor ()Ljava\/awt\/Toolkit; flags 401\n-\n-class name java\/awt\/peer\/FramePeer\n--method name emulateActivation descriptor (Z)V\n-\n-class name java\/awt\/peer\/KeyboardFocusManagerPeer\n--method name setCurrentFocusedWindow descriptor (Ljava\/awt\/Window;)V\n-\n-class name java\/awt\/peer\/WindowPeer\n--method name updateAlwaysOnTopState descriptor ()V\n-method name setAlwaysOnTop descriptor (Z)V flags 401\n-\n-class name javax\/swing\/ImageIcon\n--field name component descriptor Ljava\/awt\/Component;\n--field name tracker descriptor Ljava\/awt\/MediaTracker;\n-field name component descriptor Ljava\/awt\/Component; flags 1c\n-field name tracker descriptor Ljava\/awt\/MediaTracker; flags 1c\n-\n-class name javax\/swing\/JComboBox\n--method name processKeyBinding descriptor (Ljavax\/swing\/KeyStroke;Ljava\/awt\/event\/KeyEvent;IZ)Z\n-\n-class name javax\/swing\/JComponent\n-field name accessibleContext descriptor Ljavax\/accessibility\/AccessibleContext; flags 4\n--method name hide descriptor ()V\n-method name getAccessibleContext descriptor ()Ljavax\/accessibility\/AccessibleContext; flags 1\n-\n-class name javax\/swing\/JComponent$AccessibleJComponent\n--field name accessibleFocusHandler descriptor Ljava\/awt\/event\/FocusListener;\n-field name accessibleContainerHandler descriptor Ljava\/awt\/event\/ContainerListener; flags 4\n-field name accessibleFocusHandler descriptor Ljava\/awt\/event\/FocusListener; flags 4\n-\n-class name javax\/swing\/JDesktopPane\n--method name remove descriptor (Ljava\/awt\/Component;)V\n-\n-class name javax\/swing\/JList$AccessibleJList$AccessibleJListChild\n-method name getAccessibleAction descriptor ()Ljavax\/accessibility\/AccessibleAction; flags 1\n-\n-class name javax\/swing\/plaf\/basic\/BasicRadioButtonUI\n--method name installListeners descriptor (Ljavax\/swing\/AbstractButton;)V\n--method name uninstallListeners descriptor (Ljavax\/swing\/AbstractButton;)V\n-\n-class name javax\/swing\/tree\/DefaultMutableTreeNode\n--method name setParent descriptor (Ljavax\/swing\/tree\/MutableTreeNode;)V\n-method name setParent descriptor (Ljavax\/swing\/tree\/MutableTreeNode;)V flags 1\n-\n-class name javax\/swing\/tree\/DefaultTreeSelectionModel\n--method name notifyPathChange descriptor (Ljava\/util\/Vector;Ljavax\/swing\/tree\/TreePath;)V\n-method name notifyPathChange descriptor (Ljava\/util\/Vector;Ljavax\/swing\/tree\/TreePath;)V flags 4 deprecated true runtimeAnnotations @Ljava\/lang\/Deprecated;\n-\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/java.desktop-7.sym.txt","additions":0,"deletions":110,"binary":false,"changes":110,"status":"deleted"},{"patch":"@@ -1,95 +0,0 @@\n-#\n-# Copyright (c) 2015, 2017, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.  Oracle designates this\n-# particular file as subject to the \"Classpath\" exception as provided\n-# by Oracle in the LICENSE file that accompanied this code.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-# ##########################################################\n-# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n-# ##########################################################\n-#\n-class name java\/util\/logging\/Filter\n-header extends java\/lang\/Object flags 601\n-\n-class name java\/util\/logging\/Handler\n--method name setFormatter descriptor (Ljava\/util\/logging\/Formatter;)V\n--method name setEncoding descriptor (Ljava\/lang\/String;)V\n--method name setFilter descriptor (Ljava\/util\/logging\/Filter;)V\n--method name setErrorManager descriptor (Ljava\/util\/logging\/ErrorManager;)V\n--method name getLevel descriptor ()Ljava\/util\/logging\/Level;\n-method name setFormatter descriptor (Ljava\/util\/logging\/Formatter;)V thrownTypes java\/lang\/SecurityException flags 1\n-method name setEncoding descriptor (Ljava\/lang\/String;)V thrownTypes java\/lang\/SecurityException,java\/io\/UnsupportedEncodingException flags 1\n-method name setFilter descriptor (Ljava\/util\/logging\/Filter;)V thrownTypes java\/lang\/SecurityException flags 1\n-method name setErrorManager descriptor (Ljava\/util\/logging\/ErrorManager;)V flags 1\n-method name getLevel descriptor ()Ljava\/util\/logging\/Level; flags 21\n-\n-class name java\/util\/logging\/LogManager\n--method name addPropertyChangeListener descriptor (Ljava\/beans\/PropertyChangeListener;)V\n--method name removePropertyChangeListener descriptor (Ljava\/beans\/PropertyChangeListener;)V\n--method name addLogger descriptor (Ljava\/util\/logging\/Logger;)Z\n--method name getLogger descriptor (Ljava\/lang\/String;)Ljava\/util\/logging\/Logger;\n--method name getLoggerNames descriptor ()Ljava\/util\/Enumeration;\n-method name addPropertyChangeListener descriptor (Ljava\/beans\/PropertyChangeListener;)V thrownTypes java\/lang\/SecurityException flags 1\n-method name removePropertyChangeListener descriptor (Ljava\/beans\/PropertyChangeListener;)V thrownTypes java\/lang\/SecurityException flags 1\n-method name addLogger descriptor (Ljava\/util\/logging\/Logger;)Z flags 21\n-method name getLogger descriptor (Ljava\/lang\/String;)Ljava\/util\/logging\/Logger; flags 21\n-method name getLoggerNames descriptor ()Ljava\/util\/Enumeration; flags 21 signature ()Ljava\/util\/Enumeration<Ljava\/lang\/String;>;\n-\n-class name java\/util\/logging\/Logger\n--method name getLogger descriptor (Ljava\/lang\/String;)Ljava\/util\/logging\/Logger;\n--method name getLogger descriptor (Ljava\/lang\/String;Ljava\/lang\/String;)Ljava\/util\/logging\/Logger;\n--method name getAnonymousLogger descriptor (Ljava\/lang\/String;)Ljava\/util\/logging\/Logger;\n--method name log descriptor (Ljava\/util\/logging\/Level;Ljava\/util\/function\/Supplier;)V\n--method name log descriptor (Ljava\/util\/logging\/Level;Ljava\/lang\/Throwable;Ljava\/util\/function\/Supplier;)V\n--method name logp descriptor (Ljava\/util\/logging\/Level;Ljava\/lang\/String;Ljava\/lang\/String;Ljava\/util\/function\/Supplier;)V\n--method name logp descriptor (Ljava\/util\/logging\/Level;Ljava\/lang\/String;Ljava\/lang\/String;Ljava\/lang\/Throwable;Ljava\/util\/function\/Supplier;)V\n--method name logrb descriptor (Ljava\/util\/logging\/Level;Ljava\/lang\/String;Ljava\/lang\/String;Ljava\/lang\/String;Ljava\/lang\/String;)V\n--method name logrb descriptor (Ljava\/util\/logging\/Level;Ljava\/lang\/String;Ljava\/lang\/String;Ljava\/lang\/String;Ljava\/lang\/String;Ljava\/lang\/Object;)V\n--method name logrb descriptor (Ljava\/util\/logging\/Level;Ljava\/lang\/String;Ljava\/lang\/String;Ljava\/lang\/String;Ljava\/lang\/String;[Ljava\/lang\/Object;)V\n--method name logrb descriptor (Ljava\/util\/logging\/Level;Ljava\/lang\/String;Ljava\/lang\/String;Ljava\/util\/ResourceBundle;Ljava\/lang\/String;[Ljava\/lang\/Object;)V\n--method name logrb descriptor (Ljava\/util\/logging\/Level;Ljava\/lang\/String;Ljava\/lang\/String;Ljava\/lang\/String;Ljava\/lang\/String;Ljava\/lang\/Throwable;)V\n--method name logrb descriptor (Ljava\/util\/logging\/Level;Ljava\/lang\/String;Ljava\/lang\/String;Ljava\/util\/ResourceBundle;Ljava\/lang\/String;Ljava\/lang\/Throwable;)V\n--method name severe descriptor (Ljava\/util\/function\/Supplier;)V\n--method name warning descriptor (Ljava\/util\/function\/Supplier;)V\n--method name info descriptor (Ljava\/util\/function\/Supplier;)V\n--method name config descriptor (Ljava\/util\/function\/Supplier;)V\n--method name fine descriptor (Ljava\/util\/function\/Supplier;)V\n--method name finer descriptor (Ljava\/util\/function\/Supplier;)V\n--method name finest descriptor (Ljava\/util\/function\/Supplier;)V\n--method name setResourceBundle descriptor (Ljava\/util\/ResourceBundle;)V\n-method name getLogger descriptor (Ljava\/lang\/String;)Ljava\/util\/logging\/Logger; flags 9\n-method name getLogger descriptor (Ljava\/lang\/String;Ljava\/lang\/String;)Ljava\/util\/logging\/Logger; flags 9\n-method name getAnonymousLogger descriptor (Ljava\/lang\/String;)Ljava\/util\/logging\/Logger; flags 9\n-method name logrb descriptor (Ljava\/util\/logging\/Level;Ljava\/lang\/String;Ljava\/lang\/String;Ljava\/lang\/String;Ljava\/lang\/String;)V flags 1\n-method name logrb descriptor (Ljava\/util\/logging\/Level;Ljava\/lang\/String;Ljava\/lang\/String;Ljava\/lang\/String;Ljava\/lang\/String;Ljava\/lang\/Object;)V flags 1\n-method name logrb descriptor (Ljava\/util\/logging\/Level;Ljava\/lang\/String;Ljava\/lang\/String;Ljava\/lang\/String;Ljava\/lang\/String;[Ljava\/lang\/Object;)V flags 1\n-method name logrb descriptor (Ljava\/util\/logging\/Level;Ljava\/lang\/String;Ljava\/lang\/String;Ljava\/lang\/String;Ljava\/lang\/String;Ljava\/lang\/Throwable;)V flags 1\n-\n-class name java\/util\/logging\/MemoryHandler\n--method name setPushLevel descriptor (Ljava\/util\/logging\/Level;)V\n--method name getPushLevel descriptor ()Ljava\/util\/logging\/Level;\n-method name setPushLevel descriptor (Ljava\/util\/logging\/Level;)V thrownTypes java\/lang\/SecurityException flags 1\n-method name getPushLevel descriptor ()Ljava\/util\/logging\/Level; flags 21\n-\n-class name java\/util\/logging\/StreamHandler\n--method name setEncoding descriptor (Ljava\/lang\/String;)V\n-method name setEncoding descriptor (Ljava\/lang\/String;)V thrownTypes java\/lang\/SecurityException,java\/io\/UnsupportedEncodingException flags 1\n-\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/java.logging-7.sym.txt","additions":0,"deletions":95,"binary":false,"changes":95,"status":"deleted"},{"patch":"@@ -1,53 +0,0 @@\n-#\n-# Copyright (c) 2015, 2017, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.  Oracle designates this\n-# particular file as subject to the \"Classpath\" exception as provided\n-# by Oracle in the LICENSE file that accompanied this code.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-# ##########################################################\n-# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n-# ##########################################################\n-#\n-class name java\/lang\/management\/LockInfo\n--method name <init> descriptor (Ljava\/lang\/String;I)V\n--method name from descriptor (Ljavax\/management\/openmbean\/CompositeData;)Ljava\/lang\/management\/LockInfo;\n-method name <init> descriptor (Ljava\/lang\/String;I)V flags 1 runtimeAnnotations @Ljava\/beans\/ConstructorProperties;(value={\"className\"\"identityHashCode\"})\n-\n-class name javax\/management\/timer\/Timer\n--method name getNbNotifications descriptor ()I\n--method name getNotificationType descriptor (Ljava\/lang\/Integer;)Ljava\/lang\/String;\n--method name getNotificationMessage descriptor (Ljava\/lang\/Integer;)Ljava\/lang\/String;\n--method name getNotificationUserData descriptor (Ljava\/lang\/Integer;)Ljava\/lang\/Object;\n--method name getDate descriptor (Ljava\/lang\/Integer;)Ljava\/util\/Date;\n--method name getPeriod descriptor (Ljava\/lang\/Integer;)Ljava\/lang\/Long;\n--method name getNbOccurences descriptor (Ljava\/lang\/Integer;)Ljava\/lang\/Long;\n--method name getFixedRate descriptor (Ljava\/lang\/Integer;)Ljava\/lang\/Boolean;\n--method name isEmpty descriptor ()Z\n-method name getNbNotifications descriptor ()I flags 1\n-method name getNotificationType descriptor (Ljava\/lang\/Integer;)Ljava\/lang\/String; flags 1\n-method name getNotificationMessage descriptor (Ljava\/lang\/Integer;)Ljava\/lang\/String; flags 1\n-method name getNotificationUserData descriptor (Ljava\/lang\/Integer;)Ljava\/lang\/Object; flags 1\n-method name getDate descriptor (Ljava\/lang\/Integer;)Ljava\/util\/Date; flags 1\n-method name getPeriod descriptor (Ljava\/lang\/Integer;)Ljava\/lang\/Long; flags 1\n-method name getNbOccurences descriptor (Ljava\/lang\/Integer;)Ljava\/lang\/Long; flags 1\n-method name getFixedRate descriptor (Ljava\/lang\/Integer;)Ljava\/lang\/Boolean; flags 1\n-method name isEmpty descriptor ()Z flags 1\n-\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/java.management-7.sym.txt","additions":0,"deletions":53,"binary":false,"changes":53,"status":"deleted"},{"patch":"@@ -1,44 +0,0 @@\n-#\n-# Copyright (c) 2015, 2017, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.  Oracle designates this\n-# particular file as subject to the \"Classpath\" exception as provided\n-# by Oracle in the LICENSE file that accompanied this code.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-# ##########################################################\n-# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n-# ##########################################################\n-#\n-class name javax\/naming\/NameImpl\n--method name getAll descriptor ()Ljava\/util\/Enumeration;\n--method name getPrefix descriptor (I)Ljava\/util\/Enumeration;\n--method name getSuffix descriptor (I)Ljava\/util\/Enumeration;\n--method name startsWith descriptor (ILjava\/util\/Enumeration;)Z\n--method name endsWith descriptor (ILjava\/util\/Enumeration;)Z\n--method name addAll descriptor (Ljava\/util\/Enumeration;)Z\n--method name addAll descriptor (ILjava\/util\/Enumeration;)Z\n-method name getAll descriptor ()Ljava\/util\/Enumeration; flags 1\n-method name getPrefix descriptor (I)Ljava\/util\/Enumeration; flags 1\n-method name getSuffix descriptor (I)Ljava\/util\/Enumeration; flags 1\n-method name startsWith descriptor (ILjava\/util\/Enumeration;)Z flags 1\n-method name endsWith descriptor (ILjava\/util\/Enumeration;)Z flags 1\n-method name addAll descriptor (Ljava\/util\/Enumeration;)Z thrownTypes javax\/naming\/InvalidNameException flags 1\n-method name addAll descriptor (ILjava\/util\/Enumeration;)Z thrownTypes javax\/naming\/InvalidNameException flags 1\n-\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/java.naming-7.sym.txt","additions":0,"deletions":44,"binary":false,"changes":44,"status":"deleted"},{"patch":"@@ -1,31 +0,0 @@\n-#\n-# Copyright (c) 2015, 2017, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.  Oracle designates this\n-# particular file as subject to the \"Classpath\" exception as provided\n-# by Oracle in the LICENSE file that accompanied this code.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-# ##########################################################\n-# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n-# ##########################################################\n-#\n-class name java\/util\/prefs\/PreferenceChangeListener\n-header extends java\/lang\/Object implements java\/util\/EventListener flags 601\n-\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/java.prefs-7.sym.txt","additions":0,"deletions":31,"binary":false,"changes":31,"status":"deleted"},{"patch":"@@ -1,44 +0,0 @@\n-#\n-# Copyright (c) 2015, 2017, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.  Oracle designates this\n-# particular file as subject to the \"Classpath\" exception as provided\n-# by Oracle in the LICENSE file that accompanied this code.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-# ##########################################################\n-# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n-# ##########################################################\n-#\n-class name java\/rmi\/RMISecurityManager\n-header extends java\/lang\/SecurityManager flags 21\n-\n-class name java\/rmi\/server\/RemoteStub\n-header extends java\/rmi\/server\/RemoteObject flags 421\n-\n-class name java\/rmi\/server\/ServerRef\n-header extends java\/lang\/Object implements java\/rmi\/server\/RemoteRef flags 601\n-\n-class name java\/rmi\/server\/SocketSecurityException\n-header extends java\/rmi\/server\/ExportException flags 21\n-\n-class name java\/rmi\/server\/UnicastRemoteObject\n--method name exportObject descriptor (Ljava\/rmi\/Remote;)Ljava\/rmi\/server\/RemoteStub;\n-method name exportObject descriptor (Ljava\/rmi\/Remote;)Ljava\/rmi\/server\/RemoteStub; thrownTypes java\/rmi\/RemoteException flags 9\n-\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/java.rmi-7.sym.txt","additions":0,"deletions":44,"binary":false,"changes":44,"status":"deleted"},{"patch":"@@ -1,31 +0,0 @@\n-#\n-# Copyright (c) 2015, 2017, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.  Oracle designates this\n-# particular file as subject to the \"Classpath\" exception as provided\n-# by Oracle in the LICENSE file that accompanied this code.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-# ##########################################################\n-# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n-# ##########################################################\n-#\n-class name javax\/script\/Bindings\n--method name put descriptor (Ljava\/lang\/Object;Ljava\/lang\/Object;)Ljava\/lang\/Object;\n-\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/java.scripting-7.sym.txt","additions":0,"deletions":31,"binary":false,"changes":31,"status":"deleted"},{"patch":"@@ -1,36 +0,0 @@\n-#\n-# Copyright (c) 2015, 2017, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.  Oracle designates this\n-# particular file as subject to the \"Classpath\" exception as provided\n-# by Oracle in the LICENSE file that accompanied this code.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-# ##########################################################\n-# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n-# ##########################################################\n-#\n-class name javax\/security\/auth\/kerberos\/KeyTab\n--method name getUnboundInstance descriptor (Ljava\/io\/File;)Ljavax\/security\/auth\/kerberos\/KeyTab;\n--method name getInstance descriptor (Ljavax\/security\/auth\/kerberos\/KerberosPrincipal;Ljava\/io\/File;)Ljavax\/security\/auth\/kerberos\/KeyTab;\n--method name getUnboundInstance descriptor ()Ljavax\/security\/auth\/kerberos\/KeyTab;\n--method name getInstance descriptor (Ljavax\/security\/auth\/kerberos\/KerberosPrincipal;)Ljavax\/security\/auth\/kerberos\/KeyTab;\n--method name getPrincipal descriptor ()Ljavax\/security\/auth\/kerberos\/KerberosPrincipal;\n--method name isBound descriptor ()Z\n-\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/java.security.jgss-7.sym.txt","additions":0,"deletions":36,"binary":false,"changes":36,"status":"deleted"},{"patch":"@@ -1,31 +0,0 @@\n-#\n-# Copyright (c) 2015, 2017, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.  Oracle designates this\n-# particular file as subject to the \"Classpath\" exception as provided\n-# by Oracle in the LICENSE file that accompanied this code.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-# ##########################################################\n-# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n-# ##########################################################\n-#\n-class name javax\/security\/sasl\/Sasl\n--field name BOUND_SERVER_NAME descriptor Ljava\/lang\/String;\n-\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/java.security.sasl-7.sym.txt","additions":0,"deletions":31,"binary":false,"changes":31,"status":"deleted"},{"patch":"@@ -1,145 +0,0 @@\n-#\n-# Copyright (c) 2015, 2017, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.  Oracle designates this\n-# particular file as subject to the \"Classpath\" exception as provided\n-# by Oracle in the LICENSE file that accompanied this code.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-# ##########################################################\n-# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n-# ##########################################################\n-#\n-class name java\/sql\/BatchUpdateException\n--method name <init> descriptor (Ljava\/lang\/String;Ljava\/lang\/String;I[JLjava\/lang\/Throwable;)V\n--method name getLargeUpdateCounts descriptor ()[J\n-\n-class name java\/sql\/CallableStatement\n--method name getBigDecimal descriptor (II)Ljava\/math\/BigDecimal;\n--method name setObject descriptor (Ljava\/lang\/String;Ljava\/lang\/Object;Ljava\/sql\/SQLType;I)V\n--method name setObject descriptor (Ljava\/lang\/String;Ljava\/lang\/Object;Ljava\/sql\/SQLType;)V\n--method name registerOutParameter descriptor (ILjava\/sql\/SQLType;)V\n--method name registerOutParameter descriptor (ILjava\/sql\/SQLType;I)V\n--method name registerOutParameter descriptor (ILjava\/sql\/SQLType;Ljava\/lang\/String;)V\n--method name registerOutParameter descriptor (Ljava\/lang\/String;Ljava\/sql\/SQLType;)V\n--method name registerOutParameter descriptor (Ljava\/lang\/String;Ljava\/sql\/SQLType;I)V\n--method name registerOutParameter descriptor (Ljava\/lang\/String;Ljava\/sql\/SQLType;Ljava\/lang\/String;)V\n-method name getBigDecimal descriptor (II)Ljava\/math\/BigDecimal; thrownTypes java\/sql\/SQLException flags 401 deprecated true\n-\n-class name java\/sql\/DatabaseMetaData\n--method name getMaxLogicalLobSize descriptor ()J\n--method name supportsRefCursors descriptor ()Z\n-\n-class name java\/sql\/Date\n--method name <init> descriptor (III)V\n--method name getHours descriptor ()I\n--method name getMinutes descriptor ()I\n--method name getSeconds descriptor ()I\n--method name setHours descriptor (I)V\n--method name setMinutes descriptor (I)V\n--method name setSeconds descriptor (I)V\n--method name valueOf descriptor (Ljava\/time\/LocalDate;)Ljava\/sql\/Date;\n--method name toLocalDate descriptor ()Ljava\/time\/LocalDate;\n--method name toInstant descriptor ()Ljava\/time\/Instant;\n-method name <init> descriptor (III)V flags 1 deprecated true\n-method name getHours descriptor ()I flags 1 deprecated true\n-method name getMinutes descriptor ()I flags 1 deprecated true\n-method name getSeconds descriptor ()I flags 1 deprecated true\n-method name setHours descriptor (I)V flags 1 deprecated true\n-method name setMinutes descriptor (I)V flags 1 deprecated true\n-method name setSeconds descriptor (I)V flags 1 deprecated true\n-\n--class name java\/sql\/DriverAction\n-\n-class name java\/sql\/DriverManager\n--method name getConnection descriptor (Ljava\/lang\/String;Ljava\/util\/Properties;)Ljava\/sql\/Connection;\n--method name getConnection descriptor (Ljava\/lang\/String;Ljava\/lang\/String;Ljava\/lang\/String;)Ljava\/sql\/Connection;\n--method name getConnection descriptor (Ljava\/lang\/String;)Ljava\/sql\/Connection;\n--method name getDriver descriptor (Ljava\/lang\/String;)Ljava\/sql\/Driver;\n--method name registerDriver descriptor (Ljava\/sql\/Driver;Ljava\/sql\/DriverAction;)V\n--method name deregisterDriver descriptor (Ljava\/sql\/Driver;)V\n--method name getDrivers descriptor ()Ljava\/util\/Enumeration;\n--method name setLogStream descriptor (Ljava\/io\/PrintStream;)V\n--method name getLogStream descriptor ()Ljava\/io\/PrintStream;\n-method name getConnection descriptor (Ljava\/lang\/String;Ljava\/util\/Properties;)Ljava\/sql\/Connection; thrownTypes java\/sql\/SQLException flags 9\n-method name getConnection descriptor (Ljava\/lang\/String;Ljava\/lang\/String;Ljava\/lang\/String;)Ljava\/sql\/Connection; thrownTypes java\/sql\/SQLException flags 9\n-method name getConnection descriptor (Ljava\/lang\/String;)Ljava\/sql\/Connection; thrownTypes java\/sql\/SQLException flags 9\n-method name getDriver descriptor (Ljava\/lang\/String;)Ljava\/sql\/Driver; thrownTypes java\/sql\/SQLException flags 9\n-method name deregisterDriver descriptor (Ljava\/sql\/Driver;)V thrownTypes java\/sql\/SQLException flags 29\n-method name getDrivers descriptor ()Ljava\/util\/Enumeration; flags 9 signature ()Ljava\/util\/Enumeration<Ljava\/sql\/Driver;>;\n-method name setLogStream descriptor (Ljava\/io\/PrintStream;)V flags 9 deprecated true\n-method name getLogStream descriptor ()Ljava\/io\/PrintStream; flags 9 deprecated true\n-\n--class name java\/sql\/JDBCType\n-\n-class name java\/sql\/PreparedStatement\n--method name setUnicodeStream descriptor (ILjava\/io\/InputStream;I)V\n--method name setObject descriptor (ILjava\/lang\/Object;Ljava\/sql\/SQLType;I)V\n--method name setObject descriptor (ILjava\/lang\/Object;Ljava\/sql\/SQLType;)V\n--method name executeLargeUpdate descriptor ()J\n-method name setUnicodeStream descriptor (ILjava\/io\/InputStream;I)V thrownTypes java\/sql\/SQLException flags 401 deprecated true\n-\n-class name java\/sql\/ResultSet\n--method name getBigDecimal descriptor (II)Ljava\/math\/BigDecimal;\n--method name getUnicodeStream descriptor (I)Ljava\/io\/InputStream;\n--method name getBigDecimal descriptor (Ljava\/lang\/String;I)Ljava\/math\/BigDecimal;\n--method name getUnicodeStream descriptor (Ljava\/lang\/String;)Ljava\/io\/InputStream;\n--method name updateObject descriptor (ILjava\/lang\/Object;Ljava\/sql\/SQLType;I)V\n--method name updateObject descriptor (Ljava\/lang\/String;Ljava\/lang\/Object;Ljava\/sql\/SQLType;I)V\n--method name updateObject descriptor (ILjava\/lang\/Object;Ljava\/sql\/SQLType;)V\n--method name updateObject descriptor (Ljava\/lang\/String;Ljava\/lang\/Object;Ljava\/sql\/SQLType;)V\n-method name getBigDecimal descriptor (II)Ljava\/math\/BigDecimal; thrownTypes java\/sql\/SQLException flags 401 deprecated true\n-method name getUnicodeStream descriptor (I)Ljava\/io\/InputStream; thrownTypes java\/sql\/SQLException flags 401 deprecated true\n-method name getBigDecimal descriptor (Ljava\/lang\/String;I)Ljava\/math\/BigDecimal; thrownTypes java\/sql\/SQLException flags 401 deprecated true\n-method name getUnicodeStream descriptor (Ljava\/lang\/String;)Ljava\/io\/InputStream; thrownTypes java\/sql\/SQLException flags 401 deprecated true\n-\n-class name java\/sql\/SQLInput\n--method name readObject descriptor (Ljava\/lang\/Class;)Ljava\/lang\/Object;\n-\n-class name java\/sql\/SQLOutput\n--method name writeObject descriptor (Ljava\/lang\/Object;Ljava\/sql\/SQLType;)V\n-\n--class name java\/sql\/SQLType\n-\n-class name java\/sql\/Statement\n--method name getLargeUpdateCount descriptor ()J\n--method name setLargeMaxRows descriptor (J)V\n--method name getLargeMaxRows descriptor ()J\n--method name executeLargeBatch descriptor ()[J\n--method name executeLargeUpdate descriptor (Ljava\/lang\/String;)J\n--method name executeLargeUpdate descriptor (Ljava\/lang\/String;I)J\n--method name executeLargeUpdate descriptor (Ljava\/lang\/String;[I)J\n--method name executeLargeUpdate descriptor (Ljava\/lang\/String;[Ljava\/lang\/String;)J\n-\n-class name java\/sql\/Time\n--method name valueOf descriptor (Ljava\/time\/LocalTime;)Ljava\/sql\/Time;\n--method name toLocalTime descriptor ()Ljava\/time\/LocalTime;\n--method name toInstant descriptor ()Ljava\/time\/Instant;\n-\n-class name java\/sql\/Timestamp\n--method name valueOf descriptor (Ljava\/time\/LocalDateTime;)Ljava\/sql\/Timestamp;\n--method name toLocalDateTime descriptor ()Ljava\/time\/LocalDateTime;\n--method name from descriptor (Ljava\/time\/Instant;)Ljava\/sql\/Timestamp;\n--method name toInstant descriptor ()Ljava\/time\/Instant;\n-\n-class name java\/sql\/Types\n--field name REF_CURSOR descriptor I\n--field name TIME_WITH_TIMEZONE descriptor I\n--field name TIMESTAMP_WITH_TIMEZONE descriptor I\n-\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/java.sql-7.sym.txt","additions":0,"deletions":145,"binary":false,"changes":145,"status":"deleted"},{"patch":"@@ -1,69 +0,0 @@\n-#\n-# Copyright (c) 2015, 2017, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.  Oracle designates this\n-# particular file as subject to the \"Classpath\" exception as provided\n-# by Oracle in the LICENSE file that accompanied this code.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-# ##########################################################\n-# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n-# ##########################################################\n-#\n-class name javax\/sql\/rowset\/BaseRowSet\n--method name setUnicodeStream descriptor (ILjava\/io\/InputStream;I)V\n-method name setUnicodeStream descriptor (ILjava\/io\/InputStream;I)V thrownTypes java\/sql\/SQLException flags 1 deprecated true\n-\n-class name javax\/sql\/rowset\/serial\/SerialArray\n--method name equals descriptor (Ljava\/lang\/Object;)Z\n--method name hashCode descriptor ()I\n--method name clone descriptor ()Ljava\/lang\/Object;\n-\n-class name javax\/sql\/rowset\/serial\/SerialBlob\n--method name equals descriptor (Ljava\/lang\/Object;)Z\n--method name hashCode descriptor ()I\n--method name clone descriptor ()Ljava\/lang\/Object;\n-\n-class name javax\/sql\/rowset\/serial\/SerialClob\n--method name equals descriptor (Ljava\/lang\/Object;)Z\n--method name hashCode descriptor ()I\n--method name clone descriptor ()Ljava\/lang\/Object;\n-\n-class name javax\/sql\/rowset\/serial\/SerialDatalink\n--method name equals descriptor (Ljava\/lang\/Object;)Z\n--method name hashCode descriptor ()I\n--method name clone descriptor ()Ljava\/lang\/Object;\n-\n-class name javax\/sql\/rowset\/serial\/SerialJavaObject\n--method name getFields descriptor ()[Ljava\/lang\/reflect\/Field;\n--method name equals descriptor (Ljava\/lang\/Object;)Z\n--method name hashCode descriptor ()I\n--method name clone descriptor ()Ljava\/lang\/Object;\n-method name getFields descriptor ()[Ljava\/lang\/reflect\/Field; thrownTypes javax\/sql\/rowset\/serial\/SerialException flags 1\n-\n-class name javax\/sql\/rowset\/serial\/SerialRef\n--method name equals descriptor (Ljava\/lang\/Object;)Z\n--method name hashCode descriptor ()I\n--method name clone descriptor ()Ljava\/lang\/Object;\n-\n-class name javax\/sql\/rowset\/serial\/SerialStruct\n--method name equals descriptor (Ljava\/lang\/Object;)Z\n--method name hashCode descriptor ()I\n--method name clone descriptor ()Ljava\/lang\/Object;\n-\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/java.sql.rowset-7.sym.txt","additions":0,"deletions":69,"binary":false,"changes":69,"status":"deleted"},{"patch":"@@ -1,45 +0,0 @@\n-#\n-# Copyright (c) 2015, 2017, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.  Oracle designates this\n-# particular file as subject to the \"Classpath\" exception as provided\n-# by Oracle in the LICENSE file that accompanied this code.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-# ##########################################################\n-# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n-# ##########################################################\n-#\n-class name javax\/xml\/XMLConstants\n--field name ACCESS_EXTERNAL_DTD descriptor Ljava\/lang\/String;\n--field name ACCESS_EXTERNAL_SCHEMA descriptor Ljava\/lang\/String;\n--field name ACCESS_EXTERNAL_STYLESHEET descriptor Ljava\/lang\/String;\n-\n-class name javax\/xml\/validation\/SchemaFactory\n--method name newInstance descriptor (Ljava\/lang\/String;)Ljavax\/xml\/validation\/SchemaFactory;\n-method name newInstance descriptor (Ljava\/lang\/String;)Ljavax\/xml\/validation\/SchemaFactory; flags 19\n-\n--class name javax\/xml\/validation\/SchemaFactoryConfigurationError\n-\n-class name javax\/xml\/xpath\/XPathFactory\n--method name newInstance descriptor ()Ljavax\/xml\/xpath\/XPathFactory;\n--method name newInstance descriptor (Ljava\/lang\/String;)Ljavax\/xml\/xpath\/XPathFactory;\n-method name newInstance descriptor ()Ljavax\/xml\/xpath\/XPathFactory; flags 19\n-method name newInstance descriptor (Ljava\/lang\/String;)Ljavax\/xml\/xpath\/XPathFactory; thrownTypes javax\/xml\/xpath\/XPathFactoryConfigurationException flags 19\n-\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/java.xml-7.sym.txt","additions":0,"deletions":45,"binary":false,"changes":45,"status":"deleted"},{"patch":"@@ -1,36 +0,0 @@\n-#\n-# Copyright (c) 2015, 2017, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.  Oracle designates this\n-# particular file as subject to the \"Classpath\" exception as provided\n-# by Oracle in the LICENSE file that accompanied this code.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-# ##########################################################\n-# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n-# ##########################################################\n-#\n-class name javax\/xml\/bind\/JAXBException\n--method name setLinkedException descriptor (Ljava\/lang\/Throwable;)V\n-method name setLinkedException descriptor (Ljava\/lang\/Throwable;)V flags 21\n-\n-class name javax\/xml\/bind\/TypeConstraintException\n--method name setLinkedException descriptor (Ljava\/lang\/Throwable;)V\n-method name setLinkedException descriptor (Ljava\/lang\/Throwable;)V flags 21\n-\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/java.xml.bind-7.sym.txt","additions":0,"deletions":36,"binary":false,"changes":36,"status":"deleted"},{"patch":"@@ -1,32 +0,0 @@\n-#\n-# Copyright (c) 2015, 2017, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.  Oracle designates this\n-# particular file as subject to the \"Classpath\" exception as provided\n-# by Oracle in the LICENSE file that accompanied this code.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-# ##########################################################\n-# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n-# ##########################################################\n-#\n-class name javax\/annotation\/Resource\n--method name type descriptor ()Ljava\/lang\/Class;\n-method name type descriptor ()Ljava\/lang\/Class; annotationDefaultValue cLjava\/lang\/Object; flags 401\n-\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/java.xml.ws.annotation-7.sym.txt","additions":0,"deletions":32,"binary":false,"changes":32,"status":"deleted"},{"patch":"@@ -1,96 +0,0 @@\n-#\n-# Copyright (c) 2015, 2017, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.  Oracle designates this\n-# particular file as subject to the \"Classpath\" exception as provided\n-# by Oracle in the LICENSE file that accompanied this code.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-# ##########################################################\n-# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n-# ##########################################################\n-#\n-class name com\/sun\/net\/httpserver\/Authenticator\n-header extends java\/lang\/Object flags 421\n-innerclass innerClass com\/sun\/net\/httpserver\/Authenticator$Result outerClass com\/sun\/net\/httpserver\/Authenticator innerClassName Result flags 409\n-innerclass innerClass com\/sun\/net\/httpserver\/Authenticator$Failure outerClass com\/sun\/net\/httpserver\/Authenticator innerClassName Failure flags 9\n-innerclass innerClass com\/sun\/net\/httpserver\/Authenticator$Success outerClass com\/sun\/net\/httpserver\/Authenticator innerClassName Success flags 9\n-innerclass innerClass com\/sun\/net\/httpserver\/Authenticator$Retry outerClass com\/sun\/net\/httpserver\/Authenticator innerClassName Retry flags 9\n-\n-class name com\/sun\/net\/httpserver\/Authenticator$Failure\n-header extends com\/sun\/net\/httpserver\/Authenticator$Result flags 21\n-innerclass innerClass com\/sun\/net\/httpserver\/Authenticator$Failure outerClass com\/sun\/net\/httpserver\/Authenticator innerClassName Failure flags 9\n-innerclass innerClass com\/sun\/net\/httpserver\/Authenticator$Result outerClass com\/sun\/net\/httpserver\/Authenticator innerClassName Result flags 409\n-\n-class name com\/sun\/net\/httpserver\/Authenticator$Retry\n-header extends com\/sun\/net\/httpserver\/Authenticator$Result flags 21\n-innerclass innerClass com\/sun\/net\/httpserver\/Authenticator$Retry outerClass com\/sun\/net\/httpserver\/Authenticator innerClassName Retry flags 9\n-innerclass innerClass com\/sun\/net\/httpserver\/Authenticator$Result outerClass com\/sun\/net\/httpserver\/Authenticator innerClassName Result flags 409\n-\n-class name com\/sun\/net\/httpserver\/Authenticator$Success\n-header extends com\/sun\/net\/httpserver\/Authenticator$Result flags 21\n-innerclass innerClass com\/sun\/net\/httpserver\/Authenticator$Success outerClass com\/sun\/net\/httpserver\/Authenticator innerClassName Success flags 9\n-innerclass innerClass com\/sun\/net\/httpserver\/Authenticator$Result outerClass com\/sun\/net\/httpserver\/Authenticator innerClassName Result flags 409\n-\n-class name com\/sun\/net\/httpserver\/BasicAuthenticator\n-header extends com\/sun\/net\/httpserver\/Authenticator flags 421\n-innerclass innerClass com\/sun\/net\/httpserver\/Authenticator$Result outerClass com\/sun\/net\/httpserver\/Authenticator innerClassName Result flags 409\n-\n-class name com\/sun\/net\/httpserver\/Filter\n-header extends java\/lang\/Object flags 421\n-innerclass innerClass com\/sun\/net\/httpserver\/Filter$Chain outerClass com\/sun\/net\/httpserver\/Filter innerClassName Chain flags 9\n-\n-class name com\/sun\/net\/httpserver\/Filter$Chain\n-header extends java\/lang\/Object flags 21\n-innerclass innerClass com\/sun\/net\/httpserver\/Filter$Chain outerClass com\/sun\/net\/httpserver\/Filter innerClassName Chain flags 9\n-\n-class name com\/sun\/net\/httpserver\/Headers\n-header extends java\/lang\/Object implements java\/util\/Map flags 21 signature Ljava\/lang\/Object;Ljava\/util\/Map<Ljava\/lang\/String;Ljava\/util\/List<Ljava\/lang\/String;>;>;\n-innerclass innerClass java\/util\/Map$Entry outerClass java\/util\/Map innerClassName Entry flags 609\n-\n-class name com\/sun\/net\/httpserver\/HttpContext\n-header extends java\/lang\/Object flags 421\n-\n-class name com\/sun\/net\/httpserver\/HttpExchange\n-header extends java\/lang\/Object flags 421\n-\n-class name com\/sun\/net\/httpserver\/HttpHandler\n-header extends java\/lang\/Object flags 601\n-\n-class name com\/sun\/net\/httpserver\/HttpPrincipal\n-header extends java\/lang\/Object implements java\/security\/Principal flags 21\n-\n-class name com\/sun\/net\/httpserver\/HttpServer\n-header extends java\/lang\/Object flags 421\n-\n-class name com\/sun\/net\/httpserver\/HttpsConfigurator\n-header extends java\/lang\/Object flags 21\n-\n-class name com\/sun\/net\/httpserver\/HttpsExchange\n-header extends com\/sun\/net\/httpserver\/HttpExchange flags 421\n-\n-class name com\/sun\/net\/httpserver\/HttpsParameters\n-header extends java\/lang\/Object flags 421\n-\n-class name com\/sun\/net\/httpserver\/HttpsServer\n-header extends com\/sun\/net\/httpserver\/HttpServer flags 421\n-\n-class name com\/sun\/net\/httpserver\/spi\/HttpServerProvider\n-header extends java\/lang\/Object flags 421\n-\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/jdk.httpserver-7.sym.txt","additions":0,"deletions":96,"binary":false,"changes":96,"status":"deleted"},{"patch":"@@ -1,63 +0,0 @@\n-#\n-# Copyright (c) 2015, 2017, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.  Oracle designates this\n-# particular file as subject to the \"Classpath\" exception as provided\n-# by Oracle in the LICENSE file that accompanied this code.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-# ##########################################################\n-# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n-# ##########################################################\n-#\n--class name com\/sun\/management\/DiagnosticCommandMBean\n-\n-class name com\/sun\/management\/GarbageCollectionNotificationInfo\n-header extends java\/lang\/Object implements javax\/management\/openmbean\/CompositeDataView flags 21\n-\n-class name com\/sun\/management\/GarbageCollectorMXBean\n-header extends java\/lang\/Object implements java\/lang\/management\/GarbageCollectorMXBean flags 601\n-\n-class name com\/sun\/management\/GcInfo\n-header extends java\/lang\/Object implements javax\/management\/openmbean\/CompositeData,javax\/management\/openmbean\/CompositeDataView flags 21\n-\n-class name com\/sun\/management\/HotSpotDiagnosticMXBean\n-header extends java\/lang\/Object implements java\/lang\/management\/PlatformManagedObject flags 601\n-\n-class name com\/sun\/management\/OSMBeanFactory\n-header extends java\/lang\/Object flags 21\n-method name getOperatingSystemMXBean descriptor (Lsun\/management\/VMManagement;)Ljava\/lang\/management\/OperatingSystemMXBean; flags 29\n-\n-class name com\/sun\/management\/OperatingSystemMXBean\n-header extends java\/lang\/Object implements java\/lang\/management\/OperatingSystemMXBean flags 601\n-\n-class name com\/sun\/management\/ThreadMXBean\n-header extends java\/lang\/Object implements java\/lang\/management\/ThreadMXBean flags 601\n-\n-class name com\/sun\/management\/UnixOperatingSystemMXBean\n-header extends java\/lang\/Object implements com\/sun\/management\/OperatingSystemMXBean flags 601\n-\n-class name com\/sun\/management\/VMOption\n-header extends java\/lang\/Object flags 21\n-innerclass innerClass com\/sun\/management\/VMOption$Origin outerClass com\/sun\/management\/VMOption innerClassName Origin flags 4019\n-\n-class name com\/sun\/management\/VMOption$Origin\n-header extends java\/lang\/Enum flags 4031 signature Ljava\/lang\/Enum<Lcom\/sun\/management\/VMOption$Origin;>;\n-innerclass innerClass com\/sun\/management\/VMOption$Origin outerClass com\/sun\/management\/VMOption innerClassName Origin flags 4019\n-\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/jdk.management-7.sym.txt","additions":0,"deletions":63,"binary":false,"changes":63,"status":"deleted"},{"patch":"@@ -1,46 +0,0 @@\n-#\n-# Copyright (c) 2015, 2018, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.  Oracle designates this\n-# particular file as subject to the \"Classpath\" exception as provided\n-# by Oracle in the LICENSE file that accompanied this code.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-# ##########################################################\n-# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n-# ##########################################################\n-#\n--class name jdk\/nashorn\/api\/scripting\/AbstractJSObject\n-\n--class name jdk\/nashorn\/api\/scripting\/ClassFilter\n-\n--class name jdk\/nashorn\/api\/scripting\/JSObject\n-\n--class name jdk\/nashorn\/api\/scripting\/NashornException\n-\n--class name jdk\/nashorn\/api\/scripting\/NashornScriptEngine\n-\n--class name jdk\/nashorn\/api\/scripting\/NashornScriptEngineFactory\n-\n--class name jdk\/nashorn\/api\/scripting\/ScriptObjectMirror\n-\n--class name jdk\/nashorn\/api\/scripting\/ScriptUtils\n-\n--class name jdk\/nashorn\/api\/scripting\/URLReader\n-\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/jdk.scripting.nashorn-7.sym.txt","additions":0,"deletions":46,"binary":false,"changes":46,"status":"deleted"},{"patch":"@@ -1,97 +0,0 @@\n-#\n-# Copyright (c) 2015, 2017, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.  Oracle designates this\n-# particular file as subject to the \"Classpath\" exception as provided\n-# by Oracle in the LICENSE file that accompanied this code.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-# ##########################################################\n-# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n-# ##########################################################\n-#\n-class name com\/sun\/nio\/sctp\/AbstractNotificationHandler\n-header extends java\/lang\/Object implements com\/sun\/nio\/sctp\/NotificationHandler flags 21 signature <T:Ljava\/lang\/Object;>Ljava\/lang\/Object;Lcom\/sun\/nio\/sctp\/NotificationHandler<TT;>;\n-\n-class name com\/sun\/nio\/sctp\/Association\n-header extends java\/lang\/Object flags 21\n-\n-class name com\/sun\/nio\/sctp\/AssociationChangeNotification\n-header extends java\/lang\/Object implements com\/sun\/nio\/sctp\/Notification flags 421\n-innerclass innerClass com\/sun\/nio\/sctp\/AssociationChangeNotification$AssocChangeEvent outerClass com\/sun\/nio\/sctp\/AssociationChangeNotification innerClassName AssocChangeEvent flags 4019\n-\n-class name com\/sun\/nio\/sctp\/AssociationChangeNotification$AssocChangeEvent\n-header extends java\/lang\/Enum flags 4031 signature Ljava\/lang\/Enum<Lcom\/sun\/nio\/sctp\/AssociationChangeNotification$AssocChangeEvent;>;\n-innerclass innerClass com\/sun\/nio\/sctp\/AssociationChangeNotification$AssocChangeEvent outerClass com\/sun\/nio\/sctp\/AssociationChangeNotification innerClassName AssocChangeEvent flags 4019\n-\n-class name com\/sun\/nio\/sctp\/HandlerResult\n-header extends java\/lang\/Enum flags 4031 signature Ljava\/lang\/Enum<Lcom\/sun\/nio\/sctp\/HandlerResult;>;\n-\n-class name com\/sun\/nio\/sctp\/IllegalReceiveException\n-header extends java\/lang\/IllegalStateException flags 21\n-\n-class name com\/sun\/nio\/sctp\/IllegalUnbindException\n-header extends java\/lang\/IllegalStateException flags 21\n-\n-class name com\/sun\/nio\/sctp\/InvalidStreamException\n-header extends java\/lang\/IllegalArgumentException flags 21\n-\n-class name com\/sun\/nio\/sctp\/MessageInfo\n-header extends java\/lang\/Object flags 421\n-\n-class name com\/sun\/nio\/sctp\/Notification\n-header extends java\/lang\/Object flags 601\n-\n-class name com\/sun\/nio\/sctp\/NotificationHandler\n-header extends java\/lang\/Object flags 601 signature <T:Ljava\/lang\/Object;>Ljava\/lang\/Object;\n-\n-class name com\/sun\/nio\/sctp\/PeerAddressChangeNotification\n-header extends java\/lang\/Object implements com\/sun\/nio\/sctp\/Notification flags 421\n-innerclass innerClass com\/sun\/nio\/sctp\/PeerAddressChangeNotification$AddressChangeEvent outerClass com\/sun\/nio\/sctp\/PeerAddressChangeNotification innerClassName AddressChangeEvent flags 4019\n-\n-class name com\/sun\/nio\/sctp\/PeerAddressChangeNotification$AddressChangeEvent\n-header extends java\/lang\/Enum flags 4031 signature Ljava\/lang\/Enum<Lcom\/sun\/nio\/sctp\/PeerAddressChangeNotification$AddressChangeEvent;>;\n-innerclass innerClass com\/sun\/nio\/sctp\/PeerAddressChangeNotification$AddressChangeEvent outerClass com\/sun\/nio\/sctp\/PeerAddressChangeNotification innerClassName AddressChangeEvent flags 4019\n-\n-class name com\/sun\/nio\/sctp\/SctpChannel\n-header extends java\/nio\/channels\/spi\/AbstractSelectableChannel flags 421\n-\n-class name com\/sun\/nio\/sctp\/SctpMultiChannel\n-header extends java\/nio\/channels\/spi\/AbstractSelectableChannel flags 421\n-\n-class name com\/sun\/nio\/sctp\/SctpServerChannel\n-header extends java\/nio\/channels\/spi\/AbstractSelectableChannel flags 421\n-\n-class name com\/sun\/nio\/sctp\/SctpSocketOption\n-header extends java\/lang\/Object implements java\/net\/SocketOption flags 601 signature <T:Ljava\/lang\/Object;>Ljava\/lang\/Object;Ljava\/net\/SocketOption<TT;>;\n-\n-class name com\/sun\/nio\/sctp\/SctpStandardSocketOptions\n-header extends java\/lang\/Object flags 21\n-innerclass innerClass com\/sun\/nio\/sctp\/SctpStandardSocketOptions$InitMaxStreams outerClass com\/sun\/nio\/sctp\/SctpStandardSocketOptions innerClassName InitMaxStreams flags 9\n-\n-class name com\/sun\/nio\/sctp\/SctpStandardSocketOptions$InitMaxStreams\n-header extends java\/lang\/Object flags 21\n-innerclass innerClass com\/sun\/nio\/sctp\/SctpStandardSocketOptions$InitMaxStreams outerClass com\/sun\/nio\/sctp\/SctpStandardSocketOptions innerClassName InitMaxStreams flags 9\n-\n-class name com\/sun\/nio\/sctp\/SendFailedNotification\n-header extends java\/lang\/Object implements com\/sun\/nio\/sctp\/Notification flags 421\n-\n-class name com\/sun\/nio\/sctp\/ShutdownNotification\n-header extends java\/lang\/Object implements com\/sun\/nio\/sctp\/Notification flags 421\n-\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/jdk.sctp-7.sym.txt","additions":0,"deletions":97,"binary":false,"changes":97,"status":"deleted"},{"patch":"@@ -1,90 +0,0 @@\n-#\n-# Copyright (c) 2015, 2017, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.  Oracle designates this\n-# particular file as subject to the \"Classpath\" exception as provided\n-# by Oracle in the LICENSE file that accompanied this code.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-# ##########################################################\n-# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n-# ##########################################################\n-#\n-class name com\/sun\/security\/auth\/LdapPrincipal\n-header extends java\/lang\/Object implements java\/security\/Principal,java\/io\/Serializable flags 31\n-\n-class name com\/sun\/security\/auth\/NTDomainPrincipal\n-header extends java\/lang\/Object implements java\/security\/Principal,java\/io\/Serializable flags 21\n-\n-class name com\/sun\/security\/auth\/NTNumericCredential\n-header extends java\/lang\/Object flags 21\n-\n-class name com\/sun\/security\/auth\/NTSid\n-header extends java\/lang\/Object implements java\/security\/Principal,java\/io\/Serializable flags 21\n-\n-class name com\/sun\/security\/auth\/NTSidDomainPrincipal\n-header extends com\/sun\/security\/auth\/NTSid flags 21\n-\n-class name com\/sun\/security\/auth\/NTSidGroupPrincipal\n-header extends com\/sun\/security\/auth\/NTSid flags 21\n-\n-class name com\/sun\/security\/auth\/NTSidPrimaryGroupPrincipal\n-header extends com\/sun\/security\/auth\/NTSid flags 21\n-\n-class name com\/sun\/security\/auth\/NTSidUserPrincipal\n-header extends com\/sun\/security\/auth\/NTSid flags 21\n-\n-class name com\/sun\/security\/auth\/NTUserPrincipal\n-header extends java\/lang\/Object implements java\/security\/Principal,java\/io\/Serializable flags 21\n-\n-class name com\/sun\/security\/auth\/PrincipalComparator\n-header extends java\/lang\/Object flags 601\n-\n-class name com\/sun\/security\/auth\/UnixNumericGroupPrincipal\n-header extends java\/lang\/Object implements java\/security\/Principal,java\/io\/Serializable flags 21\n-\n-class name com\/sun\/security\/auth\/UnixNumericUserPrincipal\n-header extends java\/lang\/Object implements java\/security\/Principal,java\/io\/Serializable flags 21\n-\n-class name com\/sun\/security\/auth\/UnixPrincipal\n-header extends java\/lang\/Object implements java\/security\/Principal,java\/io\/Serializable flags 21\n-\n-class name com\/sun\/security\/auth\/UserPrincipal\n-header extends java\/lang\/Object implements java\/security\/Principal,java\/io\/Serializable flags 31\n-\n-class name com\/sun\/security\/auth\/callback\/TextCallbackHandler\n-header extends java\/lang\/Object implements javax\/security\/auth\/callback\/CallbackHandler flags 21\n-\n-class name com\/sun\/security\/auth\/login\/ConfigFile\n-header extends javax\/security\/auth\/login\/Configuration flags 21\n--method name refresh descriptor ()V\n-method name refresh descriptor ()V flags 21\n-\n-class name com\/sun\/security\/auth\/module\/JndiLoginModule\n-header extends java\/lang\/Object implements javax\/security\/auth\/spi\/LoginModule flags 21\n-\n-class name com\/sun\/security\/auth\/module\/KeyStoreLoginModule\n-header extends java\/lang\/Object implements javax\/security\/auth\/spi\/LoginModule flags 21\n-\n-class name com\/sun\/security\/auth\/module\/Krb5LoginModule\n-header extends java\/lang\/Object implements javax\/security\/auth\/spi\/LoginModule flags 21\n-\n-class name com\/sun\/security\/auth\/module\/LdapLoginModule\n-header extends java\/lang\/Object implements javax\/security\/auth\/spi\/LoginModule flags 21\n-\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/jdk.security.auth-7.sym.txt","additions":0,"deletions":90,"binary":false,"changes":90,"status":"deleted"},{"patch":"@@ -1,45 +0,0 @@\n-#\n-# Copyright (c) 2015, 2017, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.  Oracle designates this\n-# particular file as subject to the \"Classpath\" exception as provided\n-# by Oracle in the LICENSE file that accompanied this code.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-# ##########################################################\n-# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n-# ##########################################################\n-#\n-class name com\/sun\/security\/jgss\/AuthorizationDataEntry\n-header extends java\/lang\/Object flags 31\n-\n-class name com\/sun\/security\/jgss\/ExtendedGSSContext\n-header extends java\/lang\/Object implements org\/ietf\/jgss\/GSSContext flags 601\n-\n--class name com\/sun\/security\/jgss\/ExtendedGSSCredential\n-\n-class name com\/sun\/security\/jgss\/GSSUtil\n-header extends java\/lang\/Object flags 21\n-\n-class name com\/sun\/security\/jgss\/InquireSecContextPermission\n-header extends java\/security\/BasicPermission flags 31\n-\n-class name com\/sun\/security\/jgss\/InquireType\n-header extends java\/lang\/Enum flags 4031 signature Ljava\/lang\/Enum<Lcom\/sun\/security\/jgss\/InquireType;>;\n-\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/jdk.security.jgss-7.sym.txt","additions":0,"deletions":45,"binary":false,"changes":45,"status":"deleted"},{"patch":"@@ -32,1 +32,1 @@\n-generate platforms 7:8:9:A:B:C:D:E:F:G:H:I:J\n+generate platforms 8:9:A:B:C:D:E:F:G:H:I:J\n@@ -34,1 +34,0 @@\n-platform version 7 base 8 files java.base-7.sym.txt:java.compiler-7.sym.txt:java.datatransfer-7.sym.txt:java.desktop-7.sym.txt:java.logging-7.sym.txt:java.management-7.sym.txt:java.naming-7.sym.txt:java.prefs-7.sym.txt:java.rmi-7.sym.txt:java.scripting-7.sym.txt:java.security.jgss-7.sym.txt:java.security.sasl-7.sym.txt:java.sql-7.sym.txt:java.sql.rowset-7.sym.txt:java.xml-7.sym.txt:java.xml.bind-7.sym.txt:java.xml.ws.annotation-7.sym.txt:jdk.httpserver-7.sym.txt:jdk.management-7.sym.txt:jdk.scripting.nashorn-7.sym.txt:jdk.sctp-7.sym.txt:jdk.security.auth-7.sym.txt:jdk.security.jgss-7.sym.txt\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/symbols","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -204,1 +204,0 @@\n-                        checkSourceLevel(annosAfterParams.head.pos, Feature.ANNOTATIONS_AFTER_TYPE_PARAMS);\n","filename":"src\/jdk.jshell\/share\/classes\/jdk\/jshell\/ReplParser.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,0 +42,2 @@\n+    static final int BASE_VERSION = 8;\n+    static final String BASE_VERSION_STRING = Integer.toString(BASE_VERSION);\n@@ -105,2 +107,4 @@\n-        writeFile(fileVersion, getVersion(7));\n-        JarBuilder.compile(baseDir.getAbsolutePath(), fileVersion.getAbsolutePath(), \"--release\", \"7\");\n+        writeFile(fileVersion, getVersion(BASE_VERSION));\n+        JarBuilder.compile(baseDir.getAbsolutePath(),\n+                           fileVersion.getAbsolutePath(),\n+                           \"--release\", BASE_VERSION_STRING);\n@@ -149,1 +153,1 @@\n-        \/\/ Version.class has two versions: 8 and the current version.\n+        \/\/ Version.class has two versions: base version and the current version.\n@@ -171,1 +175,1 @@\n-        \/\/ 2. Test versions 7 and the current major version.\n+        \/\/ 2. Test versions base and the current major version.\n@@ -173,2 +177,2 @@\n-        \/\/    a) -Djdk.util.jar.version=7 does not exist in jar.\n-        \/\/        It will fallback to the root version which is also 7 in this test.\n+        \/\/    a) -Djdk.util.jar.version=BASE_VERSION does not exist in jar.\n+        \/\/        It will fallback to the root version which is also BASE_VERSION in this test.\n@@ -176,1 +180,1 @@\n-        for (int i : new int[] {7, MAJOR_VERSION}) {\n+        for (int i : new int[] {BASE_VERSION, MAJOR_VERSION}) {\n@@ -199,1 +203,1 @@\n-                checkExecOutput(output, \"I am running on version 7\");\n+                checkExecOutput(output, \"I am running on version \" + BASE_VERSION_STRING);\n@@ -213,1 +217,1 @@\n-            expectedOutput = \"I am running on version 7\";\n+            expectedOutput = \"I am running on version \" + BASE_VERSION_STRING;\n@@ -225,1 +229,1 @@\n-        checkExecOutput(output, \"I am running on version 7\");\n+        checkExecOutput(output, \"I am running on version \" + BASE_VERSION_STRING);\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/MultiReleaseJars.java","additions":15,"deletions":11,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -1,52 +0,0 @@\n-\/*\n- * Copyright (c) 2013, 2014, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/*\n- * @test\n- * @bug 8009267\n- * @summary Verify uses of isAnnotationPresent compile under older source versions\n- * @compile -source 1.7 -target 1.7 OldenCompilingWithDefaults.java\n- * @compile                         OldenCompilingWithDefaults.java\n- *\/\n-\n-import java.lang.reflect.*;\n-\n-public class OldenCompilingWithDefaults {\n-    public OldenCompilingWithDefaults(){}\n-    static Object f;\n-\n-    public static void main(String... args) throws Exception {\n-        Class<OldenCompilingWithDefaults> clazz = OldenCompilingWithDefaults.class;\n-        Package pkg = clazz.getPackage();\n-        Constructor<OldenCompilingWithDefaults> ctor = clazz.getConstructor();\n-        Method m = clazz.getMethod(\"main\", String[].class);\n-        Field f = clazz.getField(\"f\");\n-\n-        if(clazz.isAnnotationPresent(SuppressWarnings.class) ||\n-           pkg.isAnnotationPresent(SuppressWarnings.class) ||\n-           ctor.isAnnotationPresent(SuppressWarnings.class) ||\n-           m.isAnnotationPresent(SuppressWarnings.class) ||\n-           f.isAnnotationPresent(SuppressWarnings.class))\n-            System.out.println(\"An annotation is present.\");\n-    }\n-}\n","filename":"test\/jdk\/java\/lang\/reflect\/OldenCompilingWithDefaults.java","additions":0,"deletions":52,"binary":false,"changes":52,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -247,24 +247,0 @@\n-    public void testDocFilesInPackagesSource7() {\n-        javadoc(\"-d\", \"packages-out-src7\",\n-                \"-source\", \"7\",\n-                \"-sourcepath\", testSrc(\"packages\"),\n-                \"p1\");\n-        checkExit(Exit.OK);\n-        checkOutput(\"p1\/doc-files\/inpackage.html\", true,\n-                \"A named package in an unnamed module\"\n-        );\n-    }\n-\n-    @Test\n-    public void testDocFilesInPackagesSource7UsingClassPath() {\n-        javadoc(\"-d\", \"packages-out-src7-cp\",\n-                \"-source\", \"7\",\n-                \"-classpath\", testSrc(\"packages\"),\n-                \"p1\");\n-        checkExit(Exit.OK);\n-        checkOutput(\"p1\/doc-files\/inpackage.html\", true,\n-                \"A named package in an unnamed module\"\n-        );\n-    }\n-\n-    @Test\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testCopyFiles\/TestCopyFiles.java","additions":1,"deletions":25,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -1,134 +0,0 @@\n-\/*\n- * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/*\n- * @test\n- * @bug      8004893 8022738 8029143 8175200 8186332 8184205\n- * @summary  Make sure that the lambda feature changes work fine in\n- *           javadoc.\n- * @library  ..\/..\/lib\/\n- * @modules jdk.javadoc\/jdk.javadoc.internal.tool\n- * @build    javadoc.tester.* TestLambdaFeature\n- * @run main TestLambdaFeature\n- *\/\n-\n-\/*\n- * NOTE : This test should be elided when version 1.7 support is removed from the JDK\n- *              or the negative part of the test showing 1.7's non-support should be\n- *              removed [ 8022738 ]\n- *\/\n-\n-import javadoc.tester.JavadocTester;\n-\n-public class TestLambdaFeature extends JavadocTester {\n-\n-    public static void main(String... args) throws Exception {\n-        TestLambdaFeature tester = new TestLambdaFeature();\n-        tester.runTests();\n-    }\n-\n-    @Test\n-    public void testDefault() {\n-        javadoc(\"-d\", \"out-default\",\n-                \"-sourcepath\", testSrc,\n-                \"pkg\", \"pkg1\");\n-        checkExit(Exit.OK);\n-\n-        checkOutput(\"pkg\/A.html\", true,\n-                \"\"\"\n-                    <div class=\"col-first even-row-color method-summary-table method-summary-table-t\\\n-                    ab2 method-summary-table-tab5\"><code>default void<\/code><\/div>\"\"\",\n-                \"\"\"\n-                    <div class=\"member-signature\"><span class=\"modifiers\">default<\/span>&nbsp;<span \\\n-                    class=\"return-type\">void<\/span>&nbsp;<span class=\"element-name\">defaultMethod<\/span>()<\/\\\n-                    div>\n-                    \"\"\",\n-                \"\"\"\n-                    <div class=\"table-tabs\" role=\"tablist\" aria-orientation=\"horizontal\">\\\n-                    <button id=\"method-summary-table-tab0\" role=\"tab\" aria-selected=\"true\" aria-cont\\\n-                    rols=\"method-summary-table.tabpanel\" tabindex=\"0\" onkeydown=\"switchTab(event)\" o\\\n-                    nclick=\"show('method-summary-table', 'method-summary-table', 3)\" class=\"active-t\\\n-                    able-tab\">All Methods<\/button>\\\n-                    <button id=\"method-summary-table-tab2\" role=\"tab\" aria-selected=\"false\" aria-con\\\n-                    trols=\"method-summary-table.tabpanel\" tabindex=\"-1\" onkeydown=\"switchTab(event)\"\\\n-                     onclick=\"show('method-summary-table', 'method-summary-table-tab2', 3)\" class=\"t\\\n-                    able-tab\">Instance Methods<\/button>\\\n-                    <button id=\"method-summary-table-tab3\" role=\"tab\" aria-selected=\"false\" aria-con\\\n-                    trols=\"method-summary-table.tabpanel\" tabindex=\"-1\" onkeydown=\"switchTab(event)\"\\\n-                     onclick=\"show('method-summary-table', 'method-summary-table-tab3', 3)\" class=\"t\\\n-                    able-tab\">Abstract Methods<\/button>\\\n-                    <button id=\"method-summary-table-tab5\" role=\"tab\" aria-selected=\"false\" aria-con\\\n-                    trols=\"method-summary-table.tabpanel\" tabindex=\"-1\" onkeydown=\"switchTab(event)\"\\\n-                     onclick=\"show('method-summary-table', 'method-summary-table-tab5', 3)\" class=\"t\\\n-                    able-tab\">Default Methods<\/button>\\\n-                    <\/div>\"\"\",\n-                \"\"\"\n-                    <dl class=\"notes\">\n-                    <dt>Functional Interface:<\/dt>\n-                    <dd>This is a functional interface and can therefore be used as the assignment t\\\n-                    arget for a lambda expression or method reference.<\/dd>\n-                    <\/dl>\"\"\");\n-\n-        checkOutput(\"pkg1\/FuncInf.html\", true,\n-                \"\"\"\n-                    <dl class=\"notes\">\n-                    <dt>Functional Interface:<\/dt>\n-                    <dd>This is a functional interface and can therefore be used as the assignment t\\\n-                    arget for a lambda expression or method reference.<\/dd>\n-                    <\/dl>\"\"\");\n-\n-        checkOutput(\"pkg\/A.html\", false,\n-                \"\"\"\n-                    <td class=\"col-first\"><code>default default void<\/code><\/td>\"\"\",\n-                \"<pre>default&nbsp;default&nbsp;void&nbsp;defaultMethod()<\/pre>\");\n-\n-        checkOutput(\"pkg\/B.html\", false,\n-                \"\"\"\n-                    <td class=\"col-first\"><code>default void<\/code><\/td>\"\"\",\n-                \"\"\"\n-                    <dl class=\"notes\">\n-                    <dt>Functional Interface:<\/dt>\"\"\");\n-\n-        checkOutput(\"pkg1\/NotAFuncInf.html\", false,\n-                \"\"\"\n-                    <dl class=\"notes\">\n-                    <dt>Functional Interface:<\/dt>\n-                    <dd>This is a functional interface and can therefore be used as the assignment t\\\n-                    arget for a lambda expression or method reference.<\/dd>\n-                    <\/dl>\"\"\");\n-    }\n-\n-    @Test\n-    public void testSource7() {\n-        javadoc(\"-d\", \"out-7\",\n-                \"-sourcepath\", testSrc,\n-                \"-source\", \"1.7\",\n-                \"pkg1\");\n-        checkExit(Exit.OK);\n-\n-        checkOutput(\"pkg1\/FuncInf.html\", false,\n-                \"\"\"\n-                    <dl class=\"notes\">\n-                    <dt>Functional Interface:<\/dt>\"\"\");\n-    }\n-}\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testLambdaFeature\/TestLambdaFeature.java","additions":0,"deletions":134,"binary":false,"changes":134,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -61,1 +61,1 @@\n-    final static int EARLIEST_VERSION = 7;\n+    final static int EARLIEST_VERSION = 8;\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testLinkPlatform\/TestLinkPlatform.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,1 +50,0 @@\n-        doRunTest(ERROR, out -> out.contains(\"compiler.err.doesnt.exist: java.util.stream\"), \"--release\", \"7\");\n@@ -52,2 +51,2 @@\n-        doRunTest(CMDERR, out -> true, \"--release\", \"7\", \"-source\", \"7\");\n-        doRunTest(CMDERR, out -> true, \"--release\", \"7\", \"-bootclasspath\", \"any\");\n+        doRunTest(CMDERR, out -> true, \"--release\", \"8\", \"-source\", \"8\");\n+        doRunTest(CMDERR, out -> true, \"--release\", \"8\", \"-bootclasspath\", \"any\");\n","filename":"test\/langtools\/jdk\/javadoc\/tool\/ReleaseOption.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,1 @@\n-        setUp(b -> b.compilerOptions(\"-source\", \"7\", \"-Xlint:cast,-options\"));\n+        setUp(b -> b.compilerOptions(\"-source\", \"8\", \"-Xlint:cast,-options\"));\n@@ -52,3 +52,4 @@\n-        assertEval(\"import java.util.function.*;\", added(VALID));\n-        assertDeclareFail(\"Function<Integer,Integer> f = x -> x*2;\",\n-                new ExpectedDiagnostic(\"compiler.err.feature.not.supported.in.source.plural\", 32, 32, 32, -1, -1, Diagnostic.Kind.ERROR));\n+        assertEval(\"import java.util.ArrayList;\", added(VALID));\n+        \/\/ Diamond with anonymous classes allowed in 9\n+        assertDeclareFail(\"ArrayList<Integer> list = new ArrayList<>(){};\",\n+                new ExpectedDiagnostic(\"compiler.err.cant.apply.diamond.1\", 30, 41, 39, -1, -1, Diagnostic.Kind.ERROR));\n","filename":"test\/langtools\/jdk\/jshell\/CompilerOptionsTest.java","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -28,3 +28,0 @@\n- * @compile --release 7 TestSyntheticNullChecks.java\n- * @run main TestSyntheticNullChecks 7\n- * @clean *\n","filename":"test\/langtools\/tools\/javac\/8074306\/TestSyntheticNullChecks.java","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -60,1 +60,0 @@\n-        release7();\n@@ -64,8 +63,0 @@\n-    void release7() throws Exception {\n-        List<String> names = getParameterNames(\"7\");\n-        if (names != null) {\n-            throw new AssertionError(\n-                    \"expected no MethodParameters for --release 7, actual: \" + names);\n-        }\n-    }\n-\n","filename":"test\/langtools\/tools\/javac\/MethodParameters\/LegacyOutputTest\/LegacyOutputTest.java","additions":0,"deletions":9,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -4,1 +4,1 @@\n-# Copyright (c) 2003, 2016, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -96,1 +96,1 @@\n-SRCTRG8=\"-source 8 -target 8\"\n+SRCTRG8=\"-source 8 -target 8 -Xlint:-options\"\n","filename":"test\/langtools\/tools\/javac\/Paths\/Diagnostics.sh","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -38,4 +38,0 @@\n- * @compile -source 7 -target 7 TestIndyStringConcat.java\n- * @run main TestIndyStringConcat false\n- *\n- * @clean *\n","filename":"test\/langtools\/tools\/javac\/StringConcat\/TestIndyStringConcat.java","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1,31 +0,0 @@\n-\/*\n- * Copyright (c) 2016, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/*\n- * @test\n- * bug 8139474\n- * @summary --release 7 -verbose causes Javac exception\n- * @compile --release 7 -verbose DashRelease7DashVerboseTest.java\n-*\/\n-\n-public class DashRelease7DashVerboseTest {}\n","filename":"test\/langtools\/tools\/javac\/T8139474\/DashRelease7DashVerboseTest.java","additions":0,"deletions":31,"binary":false,"changes":31,"status":"deleted"},{"patch":"@@ -4,1 +4,1 @@\n- * @compile\/fail\/ref=TwrForVariable1.out --release 8 -XDrawDiagnostics TwrForVariable1.java\n+ * @compile\/fail\/ref=TwrForVariable1.out --release 8 -XDrawDiagnostics -Xlint:-options TwrForVariable1.java\n","filename":"test\/langtools\/tools\/javac\/TryWithResources\/TwrForVariable1.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * @compile -Werror --release 7 -Xlint:-options -XDfind=lambda AnalyzersCheckSourceLevel.java\n+ *\n","filename":"test\/langtools\/tools\/javac\/analyzer\/AnalyzersCheckSourceLevel.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,37 +0,0 @@\n-\/*\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/**\n- * @test\n- * @bug 8211102\n- * @summary Verify javac does not crash in lambda analyzer\n- * @compile -Werror -XDfind=lambda --release 7 -Xlint:-options T8211102.java\n- *\/\n-import java.util.*;\n-\n-public class T8211102 {\n-    private void t(boolean b) {\n-        (b ? Collections.emptyList()\n-           : new Iterable<String>() { public Iterator<String> iterator() { return null; } }).toString();\n-    }\n-}\n","filename":"test\/langtools\/tools\/javac\/analyzer\/T8211102.java","additions":0,"deletions":37,"binary":false,"changes":37,"status":"deleted"},{"patch":"@@ -7,1 +7,0 @@\n- * @compile\/fail\/ref=WrongVersion7.out -XDrawDiagnostics -Xlint:-options -source 7 WrongVersion.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/repeatingAnnotations\/WrongVersion.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,2 +0,0 @@\n-WrongVersion.java:11:9: compiler.err.feature.not.supported.in.source.plural: (compiler.misc.feature.repeatable.annotations), 7, 8\n-1 error\n","filename":"test\/langtools\/tools\/javac\/annotations\/repeatingAnnotations\/WrongVersion7.out","additions":0,"deletions":2,"binary":false,"changes":2,"status":"deleted"},{"patch":"@@ -7,1 +7,0 @@\n- * @compile\/fail\/ref=AnnotationVersion7.out -XDrawDiagnostics -Xlint:-options --release 7 AnnotationVersion.java\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/failures\/AnnotationVersion.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,2 +0,0 @@\n-AnnotationVersion.java:11:27: compiler.err.feature.not.supported.in.source.plural: (compiler.misc.feature.type.annotations), 7, 8\n-1 error\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/failures\/AnnotationVersion7.out","additions":0,"deletions":2,"binary":false,"changes":2,"status":"deleted"},{"patch":"@@ -1,195 +0,0 @@\n-\/*\n- * Copyright (c) 2014, 2015, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/**@test\n- * @bug 8035890\n- * @summary Verify that the parser correctly checks for source level 8 on the new places where\n- *          annotations can appear in 8.\n- * @modules jdk.compiler\/com.sun.tools.javac.api\n- *          jdk.compiler\/com.sun.tools.javac.file\n- * @run main CheckErrorsForSource7 CheckErrorsForSource7.java\n- *\/\n-import java.io.File;\n-import java.io.IOException;\n-import java.lang.annotation.ElementType;\n-import java.lang.annotation.Target;\n-import java.net.URI;\n-import java.net.URISyntaxException;\n-import java.util.ArrayList;\n-import java.util.Arrays;\n-import java.util.Collections;\n-import java.util.Comparator;\n-import java.util.HashSet;\n-import java.util.List;\n-import java.util.Set;\n-import javax.tools.Diagnostic;\n-import javax.tools.DiagnosticCollector;\n-import javax.tools.JavaFileObject;\n-import javax.tools.SimpleJavaFileObject;\n-import com.sun.source.tree.AnnotationTree;\n-import com.sun.source.tree.CompilationUnitTree;\n-import com.sun.source.tree.IdentifierTree;\n-import com.sun.source.tree.Tree.Kind;\n-import com.sun.source.util.JavacTask;\n-import com.sun.source.util.TreePathScanner;\n-import com.sun.source.util.Trees;\n-import com.sun.tools.javac.api.JavacTool;\n-import com.sun.tools.javac.file.JavacFileManager;\n-\n-\/**For each place where an annotation can syntactically appear with -source 8, but not with\n- * -source 7, this test verifies that an error is correctly emitted from the parser for\n- * the annotation for -source 7. This test first gathers the occurrences of @TA from\n- * the CheckErrorsForSource7Data class below, and then repeatedly removes all these annotations\n- * except one and checks the parser reports an expected error. This is needed as as the parser\n- * typically produces only one 'insufficient source level' error for each new feature used.\n- *\/\n-public class CheckErrorsForSource7 {\n-    public static void main(String... args) throws IOException, URISyntaxException {\n-        new CheckErrorsForSource7().run(args);\n-    }\n-\n-    private void run(String... args) throws IOException, URISyntaxException {\n-        \/\/the first and only parameter must be the name of the file to be analyzed:\n-        if (args.length != 1) throw new IllegalStateException(\"Must provide source file!\");\n-        File testSrc = new File(System.getProperty(\"test.src\"));\n-        File testFile = new File(testSrc, args[0]);\n-        if (!testFile.canRead()) throw new IllegalStateException(\"Cannot read the test source\");\n-        try (JavacFileManager fm = JavacTool.create().getStandardFileManager(null, null, null)) {\n-\n-            \/\/gather spans of the @TA annotations into typeAnnotationSpans:\n-            JavacTask task = JavacTool.create().getTask(null,\n-                                                        fm,\n-                                                        null,\n-                                                        Collections.<String>emptyList(),\n-                                                        null,\n-                                                        fm.getJavaFileObjects(testFile));\n-            final Trees trees = Trees.instance(task);\n-            final CompilationUnitTree cut = task.parse().iterator().next();\n-            final List<int[]> typeAnnotationSpans = new ArrayList<>();\n-\n-            new TreePathScanner<Void, Void>() {\n-                @Override\n-                public Void visitAnnotation(AnnotationTree node, Void p) {\n-                    if (node.getAnnotationType().getKind() == Kind.IDENTIFIER &&\n-                        ((IdentifierTree) node.getAnnotationType()).getName().contentEquals(\"TA\")) {\n-                        int start = (int) trees.getSourcePositions().getStartPosition(cut, node);\n-                        int end = (int) trees.getSourcePositions().getEndPosition(cut, node);\n-                        typeAnnotationSpans.add(new int[] {start, end});\n-                    }\n-                    return null;\n-                }\n-            }.scan(cut, null);\n-\n-            \/\/sort the spans in the reverse order, to simplify removing them from the source:\n-            Collections.sort(typeAnnotationSpans, new Comparator<int[]>() {\n-                @Override\n-                public int compare(int[] o1, int[] o2) {\n-                    return o2[0] - o1[0];\n-                }\n-            });\n-\n-            \/\/verify the errors are produce correctly:\n-            String originalSource = cut.getSourceFile().getCharContent(false).toString();\n-\n-            for (int[] toKeep : typeAnnotationSpans) {\n-                \/\/prepare updated source code by removing all the annotations except the toKeep one:\n-                String updated = originalSource;\n-\n-                for (int[] span : typeAnnotationSpans) {\n-                    if (span == toKeep) continue;\n-\n-                    updated = updated.substring(0, span[0]) + updated.substring(span[1]);\n-                }\n-\n-                \/\/parse and verify:\n-                JavaFileObject updatedFile = new TestFO(cut.getSourceFile().toUri(), updated);\n-                DiagnosticCollector<JavaFileObject> errors = new DiagnosticCollector<>();\n-                JavacTask task2 = JavacTool.create().getTask(null,\n-                                                             fm,\n-                                                             errors,\n-                                                             Arrays.asList(\"-source\", \"7\"),\n-                                                             null,\n-                                                             Arrays.asList(updatedFile));\n-                task2.parse();\n-\n-                boolean found = false;\n-\n-                for (Diagnostic<? extends JavaFileObject> d : errors.getDiagnostics()) {\n-                    if (d.getKind() == Diagnostic.Kind.ERROR && EXPECTED_ERROR.equals(d.getCode())) {\n-                        if (found) {\n-                            throw new IllegalStateException(\"More than one expected error found.\");\n-                        }\n-                        found = true;\n-                    }\n-                }\n-\n-                if (!found)\n-                    throw new IllegalStateException(\"Did not produce proper errors for: \" + updated);\n-            }\n-        }\n-    }\n-\n-    static final String EXPECTED_ERROR = \"compiler.err.feature.not.supported.in.source.plural\";\n-\n-    class TestFO extends SimpleJavaFileObject {\n-        private final String content;\n-        public TestFO(URI uri, String content) {\n-            super(uri, Kind.SOURCE);\n-            this.content = content;\n-        }\n-\n-        @Override public CharSequence getCharContent(boolean ignoreEncodingErrors) throws IOException {\n-            return content;\n-        }\n-\n-        @Override public boolean isNameCompatible(String simpleName, Kind kind) {\n-            return true;\n-        }\n-    }\n-}\n-\n-\/\/data on which the source level check is verified:\n-class CheckErrorsForSource7Data {\n-    @Target(ElementType.TYPE_USE)\n-    @interface TA { }\n-\n-    Object n1 = new @TA ArrayList<@TA String>();\n-    Object n2 = new @TA Object() {};\n-    Object [] @TA [] arr @TA[];\n-    <T> @TA int @TA[] ret(Object obj) @TA[] throws @TA Exception {\n-        this.<@TA String>ret(null);\n-        Object c1 = new @TA String[1];\n-\n-        int val = obj instanceof @TA String ? ((@TA String) obj).length() : 0;\n-        List<@TA ?> l;\n-        return null;\n-    }\n-    void vararg(String @TA ... args) { }\n-\n-    abstract class C<@TA T extends @TA Number & @TA Runnable>\n-               extends @TA ArrayList<@TA String>\n-               implements java.util. @TA Comparator<@TA T> { }\n-\n-    interface I extends java.util. @TA Comparator<@TA String> { }\n-\n-}\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/failures\/CheckErrorsForSource7.java","additions":0,"deletions":195,"binary":false,"changes":195,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,1 +45,0 @@\n-        SEVEN(\"7\", 51),\n","filename":"test\/langtools\/tools\/javac\/classfiles\/ClassVersionChecker.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -8,1 +8,0 @@\n- * @compile\/fail\/ref=Conditional.out -XDrawDiagnostics --release 7 -Xlint:-options Conditional.java\n","filename":"test\/langtools\/tools\/javac\/conditional\/Conditional.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,2 +0,0 @@\n-Conditional.java:16:38: compiler.err.prob.found.req: (compiler.misc.inconvertible.types: java.util.List<? extends java.lang.Object>, java.util.List<java.lang.String>)\n-1 error\n","filename":"test\/langtools\/tools\/javac\/conditional\/Conditional.out","additions":0,"deletions":2,"binary":false,"changes":2,"status":"deleted"},{"patch":"@@ -5,1 +5,0 @@\n- * @compile\/fail\/ref=StaticInvokeQualified7.out -source 7 -Xlint:-options -XDrawDiagnostics StaticInvokeQualified.java\n","filename":"test\/langtools\/tools\/javac\/defaultMethods\/static\/StaticInvokeQualified.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,2 +0,0 @@\n-StaticInvokeQualified.java:10:32: compiler.err.feature.not.supported.in.source.plural: (compiler.misc.feature.static.intf.method.invoke), 7, 8\n-1 error\n","filename":"test\/langtools\/tools\/javac\/defaultMethods\/static\/StaticInvokeQualified7.out","additions":0,"deletions":2,"binary":false,"changes":2,"status":"deleted"},{"patch":"@@ -5,1 +5,0 @@\n- * @compile\/fail\/ref=StaticInvokeSimple7.out -source 7 -Xlint:-options -XDrawDiagnostics StaticInvokeSimple.java\n","filename":"test\/langtools\/tools\/javac\/defaultMethods\/static\/StaticInvokeSimple.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,2 +0,0 @@\n-StaticInvokeSimple.java:11:15: compiler.err.feature.not.supported.in.source.plural: (compiler.misc.feature.static.intf.method.invoke), 7, 8\n-1 error\n","filename":"test\/langtools\/tools\/javac\/defaultMethods\/static\/StaticInvokeSimple7.out","additions":0,"deletions":2,"binary":false,"changes":2,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,1 +48,0 @@\n-        PRE_LAMBDA(\"7\"),\n@@ -50,1 +49,1 @@\n-        POST_LAMBDA(\"9\");\n+        POST_LAMBDA(Integer.toString(javax.lang.model.SourceVersion.latest().runtimeVersion().feature()));\n@@ -59,1 +58,1 @@\n-            return Arrays.asList(\"-XDallowStaticInterfaceMethods\", \"-source\", versionString);\n+            return Arrays.asList(\"-XDallowStaticInterfaceMethods\", \"--release\", versionString);\n@@ -267,6 +266,0 @@\n-        errorExpected |= ModifierKind.intersect(ModifierKind.DEFAULT, modk1, modk2) &&\n-                vk == VersionKind.PRE_LAMBDA;\n-\n-        errorExpected |= ModifierKind.intersect(ModifierKind.STATIC, modk1, modk2) &&\n-                ek == EnclosingKind.INTERFACE && vk == VersionKind.PRE_LAMBDA;\n-\n@@ -274,1 +267,1 @@\n-                ek == EnclosingKind.INTERFACE && (vk == VersionKind.LAMBDA || vk == VersionKind.PRE_LAMBDA);\n+                ek == EnclosingKind.INTERFACE && (vk == VersionKind.LAMBDA );\n","filename":"test\/langtools\/tools\/javac\/defaultMethods\/syntax\/TestDefaultMethodsSyntax.java","additions":4,"deletions":11,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -1,185 +0,0 @@\n-\/*\n- * Copyright (c) 2014, 2018, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/*\n- * @test\n- * @bug 8029240 8030855\n- * @summary Default methods not always visible under -source 7\n- * Default methods should be visible under source previous to 8\n- * @library \/tools\/lib\n- * @modules jdk.compiler\/com.sun.tools.javac.api\n- *          jdk.compiler\/com.sun.tools.javac.main\n- * @build toolbox.ToolBox toolbox.JavacTask\n- * @run main DefaultMethodsNotVisibleForSourceLessThan8Test\n- *\/\n-\n-import java.nio.file.Files;\n-import java.nio.file.Paths;\n-\n-import toolbox.JavacTask;\n-import toolbox.Task;\n-import toolbox.ToolBox;\n-\n-public class DefaultMethodsNotVisibleForSourceLessThan8Test {\n-    \/\/ common definitions\n-\n-    \/\/ this one should be compiled with source 8, the rest with source < 8\n-    static final String ISrc =\n-        \"interface I {\\n\" +\n-        \"    default void m() {}\\n\" +\n-        \"}\";\n-\n-    static final String JSrc =\n-        \"interface J extends I {}\";\n-\n-    static final String ASrc =\n-        \"abstract class A implements I {}\";\n-\n-    static final String BSrc =\n-        \"class B implements I {}\";\n-\n-    \/\/ test legacy implementations\n-    static final String C1Src =\n-        \"class C1 implements I {\\n\" +\n-        \"    public void m() {}\\n\" +\n-        \"}\";\n-\n-    static final String C2Src =\n-        \"class C2 implements J {\\n\" +\n-        \"    public void m() {}\\n\" +\n-        \"}\";\n-\n-    static final String C3Src =\n-        \"class C3 extends A {\\n\" +\n-        \"    public void m() {}\\n\" +\n-        \"}\";\n-\n-    static final String C4Src =\n-        \"class C4 extends B {\\n\" +\n-        \"    public void m() {}\\n\" +\n-        \"}\";\n-\n-    \/\/test legacy invocations\n-    static final String LegacyInvocationSrc =\n-        \"class LegacyInvocation {\\n\" +\n-        \"    public static void test(I i, J j, A a, B b) {\\n\" +\n-        \"        i.m();\\n\" +\n-        \"        j.m();\\n\" +\n-        \"        a.m();\\n\" +\n-        \"        b.m();\\n\" +\n-        \"    }\\n\" +\n-        \"}\";\n-\n-    \/\/test case super invocations\n-    static final String SubASrc =\n-        \"class SubA extends A {\\n\" +\n-        \"    public void test() {\\n\" +\n-        \"        super.m();\\n\" +\n-        \"    }\\n\" +\n-        \"}\";\n-\n-    static final String SubBSrc =\n-        \"class SubB extends B {\\n\" +\n-        \"    public void test() {\\n\" +\n-        \"        super.m();\\n\" +\n-        \"    }\\n\" +\n-        \"}\";\n-\n-    public static void main(String[] args) throws Exception {\n-        String[] sources = new String[] {\n-            \"1.7\",\n-        };\n-        for (String source : sources) {\n-            new DefaultMethodsNotVisibleForSourceLessThan8Test().run(source);\n-        }\n-    }\n-\n-    String outDir;\n-    String source;\n-    ToolBox tb = new ToolBox();\n-\n-    void run(String source) throws Exception {\n-        this.source = source;\n-        outDir = \"out\" + source.replace('.', '_');\n-        testsPreparation();\n-        testLegacyImplementations();\n-        testLegacyInvocations();\n-        testSuperInvocations();\n-    }\n-\n-    void testsPreparation() throws Exception {\n-        Files.createDirectory(Paths.get(outDir));\n-\n-        \/* as an extra check let's make sure that interface 'I' can't be compiled\n-         * with source < 8\n-         *\/\n-        new JavacTask(tb)\n-                .outdir(outDir)\n-                .options(\"-source\", source)\n-                .sources(ISrc)\n-                .run(Task.Expect.FAIL);\n-\n-        \/\/but it should compile with source >= 8\n-        new JavacTask(tb)\n-                .outdir(outDir)\n-                .sources(ISrc)\n-                .run();\n-\n-        new JavacTask(tb)\n-                .outdir(outDir)\n-                .classpath(outDir)\n-                .options(\"-source\", source)\n-                .sources(JSrc, ASrc, BSrc)\n-                .run();\n-    }\n-\n-    void testLegacyImplementations() throws Exception {\n-        \/\/compile C1-4\n-        new JavacTask(tb)\n-                .outdir(outDir)\n-                .classpath(outDir)\n-                .options(\"-source\", source)\n-                .sources(C1Src, C2Src, C3Src, C4Src)\n-                .run();\n-    }\n-\n-    void testLegacyInvocations() throws Exception {\n-        \/\/compile LegacyInvocation\n-        new JavacTask(tb)\n-                .outdir(outDir)\n-                .classpath(outDir)\n-                .options(\"-source\", source)\n-                .sources(LegacyInvocationSrc)\n-                .run();\n-    }\n-\n-    void testSuperInvocations() throws Exception {\n-        \/\/compile SubA, SubB\n-        new JavacTask(tb)\n-                .outdir(outDir)\n-                .classpath(outDir)\n-                .options(\"-source\", source)\n-                .sources(SubASrc, SubBSrc)\n-                .run();\n-    }\n-}\n","filename":"test\/langtools\/tools\/javac\/defaultMethodsVisibility\/DefaultMethodsNotVisibleForSourceLessThan8Test.java","additions":0,"deletions":185,"binary":false,"changes":185,"status":"deleted"},{"patch":"@@ -8,1 +8,1 @@\n- * @compile\/ref=SuppressDeprecation8.out --release 8 -Xlint:deprecation -XDrawDiagnostics SuppressDeprecation.java\n+ * @compile\/ref=SuppressDeprecation8.out --release 8 -Xlint:deprecation,-options -XDrawDiagnostics SuppressDeprecation.java\n","filename":"test\/langtools\/tools\/javac\/depDocComment\/SuppressDeprecation.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -68,0 +68,1 @@\n+compiler.misc.feature.default.methods                   # just preserved for testing (for now)\n","filename":"test\/langtools\/tools\/javac\/diags\/examples.not-yet.txt","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,34 +0,0 @@\n-\/*\n- * Copyright (c) 2014, 2018, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/\/ key: compiler.err.feature.not.supported.in.source.plural\n-\/\/ key: compiler.misc.feature.annotations.after.type.params\n-\/\/ options: -source 7 -Xlint:-options\n-\n-@interface Anno { }\n-\n-class AnnotationsAfterTypeParamsNotSupportedInSource {\n-    <T> @Anno int m() {\n-        return 0;\n-    }\n-}\n","filename":"test\/langtools\/tools\/javac\/diags\/examples\/AnnotationsAfterTypeParamsNotSupportedInSource.java","additions":0,"deletions":34,"binary":false,"changes":34,"status":"deleted"},{"patch":"@@ -1,30 +0,0 @@\n-\/*\n- * Copyright (c) 2012, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/\/ key: compiler.err.feature.not.supported.in.source.plural\n-\/\/ key: compiler.misc.feature.default.methods\n-\/\/ options: -source 7 -Xlint:-options\n-\n-interface DefaultMethodNotSupported {\n-    default void m() { }\n-}\n","filename":"test\/langtools\/tools\/javac\/diags\/examples\/DefaultMethodNotSupported.java","additions":0,"deletions":30,"binary":false,"changes":30,"status":"deleted"},{"patch":"@@ -1,34 +0,0 @@\n-\/*\n- * Copyright (c) 2013, 2018, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/\/ key: compiler.err.cant.apply.symbol\n-\/\/ key: compiler.misc.inconvertible.types\n-\/\/ key: compiler.misc.infer.no.conforming.assignment.exists\n-\/\/ options: -source 7 -Xlint:-options\n-\n-import java.util.*;\n-\n-class InferredDoNotConformToEq {\n-    <X> void m(List<X> lx1, List<X> lx2) {}\n-    { this.m(Arrays.asList(\"\"), Arrays.asList(1)); }\n-}\n","filename":"test\/langtools\/tools\/javac\/diags\/examples\/InferredDoNotConformToEq.java","additions":0,"deletions":34,"binary":false,"changes":34,"status":"deleted"},{"patch":"@@ -1,34 +0,0 @@\n-\/*\n- * Copyright (c) 2013, 2018, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/\/ key: compiler.err.cant.apply.symbol\n-\/\/ key: compiler.misc.inconvertible.types\n-\/\/ key: compiler.misc.infer.no.conforming.assignment.exists\n-\/\/ options: -source 7 -Xlint:-options\n-\n-import java.util.*;\n-\n-class InferredDoNotConformToUpper {\n-    <X> void m(X x, List<? super X> lx) {}\n-    { this.m(\"\", Arrays.asList(1)); }\n-}\n","filename":"test\/langtools\/tools\/javac\/diags\/examples\/InferredDoNotConformToUpper.java","additions":0,"deletions":34,"binary":false,"changes":34,"status":"deleted"},{"patch":"@@ -1,30 +0,0 @@\n-\/*\n- * Copyright (c) 2012, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/\/ key: compiler.err.feature.not.supported.in.source.plural\n-\/\/ key: compiler.misc.feature.intersection.types.in.cast\n-\/\/ options: -source 7 -Xlint:-options\n-\n-interface IntersectionTypesInCastNotSupported {\n-    Object o = (A & B)null;\n-}\n","filename":"test\/langtools\/tools\/javac\/diags\/examples\/IntersectionTypesInCastNotSupported.java","additions":0,"deletions":30,"binary":false,"changes":30,"status":"deleted"},{"patch":"@@ -1,30 +0,0 @@\n-\/*\n- * Copyright (c) 2011, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/\/ key: compiler.err.feature.not.supported.in.source.plural\n-\/\/ key: compiler.misc.feature.lambda\n-\/\/ options: -source 7 -Xlint:-options\n-\n-class LambdaNotSupported {\n-    S s = ()->{};\n-}\n","filename":"test\/langtools\/tools\/javac\/diags\/examples\/LambdaNotSupported.java","additions":0,"deletions":30,"binary":false,"changes":30,"status":"deleted"},{"patch":"@@ -1,36 +0,0 @@\n-\/*\n- * Copyright (c) 2010, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/\/ key: compiler.err.local.var.accessed.from.icls.needs.final\n-\/\/ options: -Xlint:-options -source 7\n-\n-class LocalVarNeedsFinal {\n-    Runnable m() {\n-        int i = 3;\n-        return new Runnable() {\n-            public void run() {\n-                System.out.println(i);\n-            }\n-        };\n-    }\n-}\n","filename":"test\/langtools\/tools\/javac\/diags\/examples\/LocalVarNeedsFinal.java","additions":0,"deletions":36,"binary":false,"changes":36,"status":"deleted"},{"patch":"@@ -1,30 +0,0 @@\n-\/*\n- * Copyright (c) 2011, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/\/ key: compiler.err.feature.not.supported.in.source.plural\n-\/\/ key: compiler.misc.feature.method.references\n-\/\/ options: -source 7 -Xlint:-options\n-\n-class MethodReferencesNotSupported {\n-    S s = A::foo;\n-}\n","filename":"test\/langtools\/tools\/javac\/diags\/examples\/MethodReferencesNotSupported.java","additions":0,"deletions":30,"binary":false,"changes":30,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,0 +27,6 @@\n+\/\/ key: compiler.misc.count.warn.plural\n+\/\/ key: compiler.warn.lintOption\n+\/\/ key: compiler.warn.option.obsolete.source\n+\/\/ key: compiler.warn.option.obsolete.suppression\n+\/\/ key: compiler.warn.option.obsolete.target\n+\/\/ key: compiler.warn.warning\n","filename":"test\/langtools\/tools\/javac\/diags\/examples\/NoJavaLang.java","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,0 +25,3 @@\n+\/\/ key: compiler.warn.option.obsolete.source\n+\/\/ key: compiler.warn.option.obsolete.target\n+\/\/ key: compiler.warn.option.obsolete.suppression\n","filename":"test\/langtools\/tools\/javac\/diags\/examples\/NotInProfile.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n-\/\/ options: -source 1.7 -target 1.7\n+\/\/ options: -source 1.8 -target 1.8\n","filename":"test\/langtools\/tools\/javac\/diags\/examples\/ObsoleteSourceAndTarget.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1,31 +0,0 @@\n-\/*\n- * Copyright (c) 2018, Google Inc. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/\/ key: compiler.warn.option.parameters.unsupported\n-\/\/ key: compiler.warn.option.obsolete.source\n-\/\/ key: compiler.warn.option.obsolete.suppression\n-\/\/ key: compiler.warn.option.obsolete.target\n-\/\/ options: -parameters --release 7\n-\n-class ParametersUnsupported {\n-}\n","filename":"test\/langtools\/tools\/javac\/diags\/examples\/ParametersUnsupported.java","additions":0,"deletions":31,"binary":false,"changes":31,"status":"deleted"},{"patch":"@@ -1,32 +0,0 @@\n-\/*\n- * Copyright (c) 2010, 2018, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/\/ key: compiler.err.feature.not.supported.in.source.plural\n-\/\/ key: compiler.misc.feature.repeatable.annotations\n-\/\/ options: -source 7 -Xlint:-options\n-\n-@interface Anno { }\n-\n-@Anno\n-@Anno\n-class RepeatableAnnotationsNotSupported { }\n","filename":"test\/langtools\/tools\/javac\/diags\/examples\/RepeatableAnnotationsNotSupported.java","additions":0,"deletions":32,"binary":false,"changes":32,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,0 +25,2 @@\n+\/\/ key: compiler.warn.option.obsolete.source\n+\/\/ key: compiler.warn.option.obsolete.suppression\n","filename":"test\/langtools\/tools\/javac\/diags\/examples\/SourceNoBootclasspath.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1,33 +0,0 @@\n-\/*\n- * Copyright (c) 2014, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/\/ key: compiler.err.feature.not.supported.in.source.plural\n-\/\/ key: compiler.misc.feature.static.intf.method.invoke\n-\/\/ options: -source 7 -Xlint:-options\n-import java.util.stream.Stream;\n-\n-class StaticIntfMethodInvokeNotSupported {\n-    void test() {\n-        Stream.empty();\n-    }\n-}\n","filename":"test\/langtools\/tools\/javac\/diags\/examples\/StaticIntfMethodInvokeNotSupported.java","additions":0,"deletions":33,"binary":false,"changes":33,"status":"deleted"},{"patch":"@@ -1,30 +0,0 @@\n-\/*\n- * Copyright (c) 2012, 2013, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/\/ key: compiler.err.feature.not.supported.in.source.plural\n-\/\/ key: compiler.misc.feature.static.intf.methods\n-\/\/ options: -source 7 -Xlint:-options -XDallowStaticInterfaceMethods\n-\n-interface StaticIntfMethodNotSupported {\n-    static void m() { }\n-}\n","filename":"test\/langtools\/tools\/javac\/diags\/examples\/StaticIntfMethodNotSupported.java","additions":0,"deletions":30,"binary":false,"changes":30,"status":"deleted"},{"patch":"@@ -1,34 +0,0 @@\n-\/*\n- * Copyright (c) 2010, 2018, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/\/ key: compiler.err.feature.not.supported.in.source.plural\n-\/\/ key: compiler.misc.feature.type.annotations\n-\/\/ options: -source 7 -Xlint:-options\n-\n-@interface Anno { }\n-\n-class TypeAnnotationsNotSupported {\n-    void m() {\n-        int i = (@Anno int) 3.14;\n-    }\n-}\n","filename":"test\/langtools\/tools\/javac\/diags\/examples\/TypeAnnotationsNotSupported.java","additions":0,"deletions":34,"binary":false,"changes":34,"status":"deleted"},{"patch":"@@ -7,1 +7,1 @@\n- * @compile\/fail\/ref=T6723444_1.out -Xlint:-options --release 7 -XDrawDiagnostics T6723444.java\n+ *\n","filename":"test\/langtools\/tools\/javac\/generics\/6723444\/T6723444.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,13 +0,0 @@\n-T6723444.java:43:9: compiler.err.unreported.exception.need.to.catch.or.throw: java.lang.Throwable\n-T6723444.java:44:9: compiler.err.unreported.exception.need.to.catch.or.throw: java.lang.Throwable\n-T6723444.java:46:32: compiler.err.unreported.exception.need.to.catch.or.throw: java.lang.Throwable\n-T6723444.java:47:17: compiler.err.unreported.exception.need.to.catch.or.throw: java.lang.Throwable\n-T6723444.java:49:9: compiler.err.unreported.exception.need.to.catch.or.throw: java.lang.Throwable\n-T6723444.java:50:9: compiler.err.unreported.exception.need.to.catch.or.throw: java.lang.Throwable\n-T6723444.java:51:9: compiler.err.unreported.exception.need.to.catch.or.throw: java.lang.Throwable\n-T6723444.java:52:9: compiler.err.unreported.exception.need.to.catch.or.throw: java.lang.Throwable\n-T6723444.java:53:9: compiler.err.unreported.exception.need.to.catch.or.throw: java.lang.Throwable\n-T6723444.java:54:9: compiler.err.unreported.exception.need.to.catch.or.throw: java.lang.Throwable\n-T6723444.java:55:9: compiler.err.unreported.exception.need.to.catch.or.throw: java.lang.Throwable\n-T6723444.java:56:9: compiler.err.unreported.exception.need.to.catch.or.throw: java.lang.Throwable\n-12 errors\n","filename":"test\/langtools\/tools\/javac\/generics\/6723444\/T6723444_1.out","additions":0,"deletions":13,"binary":false,"changes":13,"status":"deleted"},{"patch":"@@ -7,1 +7,1 @@\n- * @compile\/fail\/ref=T7015430_1.out --release 7 -Xlint:-options,unchecked -XDrawDiagnostics T7015430.java\n+ *\n","filename":"test\/langtools\/tools\/javac\/generics\/7015430\/T7015430.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,19 +0,0 @@\n-T7015430.java:42:14: compiler.warn.unchecked.meth.invocation.applied: kindname.method, empty, java.lang.Iterable<E>, java.lang.Iterable, kindname.class, T7015430\n-T7015430.java:42:15: compiler.warn.prob.found.req: (compiler.misc.unchecked.assign), java.lang.Iterable, java.lang.Iterable<E>\n-T7015430.java:51:41: compiler.warn.unchecked.meth.invocation.applied: kindname.method, empty, java.lang.Iterable<E>, java.lang.Iterable, kindname.class, T7015430\n-T7015430.java:51:42: compiler.warn.prob.found.req: (compiler.misc.unchecked.assign), java.lang.Iterable, java.lang.Iterable<E>\n-T7015430.java:69:9: compiler.warn.unchecked.meth.invocation.applied: kindname.constructor, <init>, java.lang.Iterable<E>, java.lang.Iterable, kindname.class, T7015430\n-T7015430.java:69:22: compiler.warn.prob.found.req: (compiler.misc.unchecked.assign), java.lang.Iterable, java.lang.Iterable<E>\n-T7015430.java:78:9: compiler.warn.unchecked.meth.invocation.applied: kindname.constructor, <init>, java.lang.Iterable<E>, java.lang.Iterable, kindname.class, T7015430\n-T7015430.java:78:40: compiler.warn.prob.found.req: (compiler.misc.unchecked.assign), java.lang.Iterable, java.lang.Iterable<E>\n-T7015430.java:105:9: compiler.warn.unchecked.meth.invocation.applied: kindname.constructor, <init>, java.lang.Iterable<E>, java.lang.Iterable, kindname.class, T7015430\n-T7015430.java:105:41: compiler.warn.prob.found.req: (compiler.misc.unchecked.assign), java.lang.Iterable, java.lang.Iterable<E>\n-T7015430.java:114:9: compiler.warn.unchecked.meth.invocation.applied: kindname.constructor, <init>, java.lang.Iterable<E>, java.lang.Iterable, kindname.class, T7015430\n-T7015430.java:114:22: compiler.warn.prob.found.req: (compiler.misc.unchecked.assign), java.lang.Iterable, java.lang.Iterable<E>\n-T7015430.java:42:14: compiler.err.unreported.exception.need.to.catch.or.throw: java.lang.Exception\n-T7015430.java:69:9: compiler.err.unreported.exception.need.to.catch.or.throw: java.lang.Exception\n-T7015430.java:96:15: compiler.err.unreported.exception.need.to.catch.or.throw: java.lang.Exception\n-T7015430.java:114:9: compiler.err.unreported.exception.need.to.catch.or.throw: java.lang.Exception\n-T7015430.java:130:9: compiler.err.unreported.exception.need.to.catch.or.throw: java.lang.Exception\n-5 errors\n-12 warnings\n","filename":"test\/langtools\/tools\/javac\/generics\/7015430\/T7015430_1.out","additions":0,"deletions":19,"binary":false,"changes":19,"status":"deleted"},{"patch":"@@ -6,1 +6,1 @@\n- * @compile --release 7 T7022054pos1.java\n+ *\n","filename":"test\/langtools\/tools\/javac\/generics\/7022054\/T7022054pos1.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -6,1 +6,1 @@\n- * @compile --release 7 T7022054pos2.java\n+ *\n","filename":"test\/langtools\/tools\/javac\/generics\/7022054\/T7022054pos2.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,3 +7,3 @@\n- * @compile\/ref=T6939780_7.out -Xlint:-options --release 7 T6939780.java -XDrawDiagnostics -XDfind=diamond\n- * @compile\/ref=T6939780_8.out                 --release 8 T6939780.java -XDrawDiagnostics -XDfind=diamond\n- * @compile\/ref=T6939780_9.out                             T6939780.java -XDrawDiagnostics -XDfind=diamond\n+ *\n+ * @compile\/ref=T6939780_8.out --release 8 T6939780.java -XDrawDiagnostics -XDfind=diamond -Xlint:-options\n+ * @compile\/ref=T6939780_9.out             T6939780.java -XDrawDiagnostics -XDfind=diamond\n","filename":"test\/langtools\/tools\/javac\/generics\/diamond\/6939780\/T6939780.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1,3 +0,0 @@\n-T6939780.java:22:28: compiler.warn.diamond.redundant.args\n-T6939780.java:31:19: compiler.warn.diamond.redundant.args\n-2 warnings\n","filename":"test\/langtools\/tools\/javac\/generics\/diamond\/6939780\/T6939780_7.out","additions":0,"deletions":3,"binary":false,"changes":3,"status":"deleted"},{"patch":"@@ -7,1 +7,1 @@\n- * @compile\/fail\/ref=Neg09a.out Neg09a.java --release 8 -XDrawDiagnostics\n+ * @compile\/fail\/ref=Neg09a.out Neg09a.java --release 8 -XDrawDiagnostics -Xlint:-options\n","filename":"test\/langtools\/tools\/javac\/generics\/diamond\/neg\/Neg09a.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * @compile\/fail\/ref=Neg09b.out Neg09b.java --release 8 -XDrawDiagnostics\n+ * @compile\/fail\/ref=Neg09b.out Neg09b.java --release 8 -XDrawDiagnostics -Xlint:-options\n","filename":"test\/langtools\/tools\/javac\/generics\/diamond\/neg\/Neg09b.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * @compile\/fail\/ref=Neg09c.out Neg09c.java --release 8 -XDrawDiagnostics\n+ * @compile\/fail\/ref=Neg09c.out Neg09c.java --release 8 -XDrawDiagnostics -Xlint:-options\n","filename":"test\/langtools\/tools\/javac\/generics\/diamond\/neg\/Neg09c.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * @compile\/fail\/ref=Neg09d.out Neg09d.java --release 8 -XDrawDiagnostics\n+ * @compile\/fail\/ref=Neg09d.out Neg09d.java --release 8 -XDrawDiagnostics -Xlint:-options\n","filename":"test\/langtools\/tools\/javac\/generics\/diamond\/neg\/Neg09d.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,0 @@\n- * @compile\/fail\/ref=Neg10.out --release 7 -Xlint:-options Neg10.java -XDrawDiagnostics\n@@ -9,1 +8,0 @@\n- *\n","filename":"test\/langtools\/tools\/javac\/generics\/diamond\/neg\/Neg10.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,2 +0,0 @@\n-Neg10.java:17:22: compiler.err.prob.found.req: (compiler.misc.inconvertible.types: Neg10.Foo<java.lang.Integer>, Neg10.Foo<java.lang.Number>)\n-1 error\n","filename":"test\/langtools\/tools\/javac\/generics\/diamond\/neg\/Neg10.out","additions":0,"deletions":2,"binary":false,"changes":2,"status":"deleted"},{"patch":"@@ -6,1 +6,0 @@\n- * @compile\/fail\/ref=T6278587Neg.out -XDrawDiagnostics --release 7 -Xlint:-options T6278587Neg.java\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/6278587\/T6278587Neg.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,2 +0,0 @@\n-T6278587Neg.java:18:10: compiler.err.prob.found.req: (compiler.misc.inferred.do.not.conform.to.lower.bounds: T, T6278587Neg.C)\n-1 error\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/6278587\/T6278587Neg.out","additions":0,"deletions":2,"binary":false,"changes":2,"status":"deleted"},{"patch":"@@ -5,1 +5,0 @@\n- * @compile\/fail\/ref=T7154127.out -Xlint:-options --release 7 -XDrawDiagnostics T7154127.java\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/7154127\/T7154127.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,2 +0,0 @@\n-T7154127.java:20:49: compiler.err.prob.found.req: (compiler.misc.incompatible.upper.bounds: U, T7154127.B<Y>,T7154127.E)\n-1 error\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/7154127\/T7154127.out","additions":0,"deletions":2,"binary":false,"changes":2,"status":"deleted"},{"patch":"@@ -5,1 +5,1 @@\n- * @compile\/fail\/ref=T7177306e_7.out -XDrawDiagnostics --release 7 -Xlint:-options -XDrawDiagnostics T7177306e.java\n+ *\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/7177306\/T7177306e.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,2 +0,0 @@\n-T7177306e.java:16:9: compiler.err.prob.found.req: (compiler.misc.inferred.do.not.conform.to.upper.bounds: java.util.List<?>, java.util.List<compiler.misc.type.captureof: 1, ?>)\n-1 error\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/7177306\/T7177306e_7.out","additions":0,"deletions":2,"binary":false,"changes":2,"status":"deleted"},{"patch":"@@ -5,1 +5,0 @@\n- * @compile\/fail\/ref=T8015505.out -Xlint:-options --release 7 -XDrawDiagnostics T8015505.java\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/8015505\/T8015505.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,2 +0,0 @@\n-T8015505.java:16:22: compiler.err.prob.found.req: (compiler.misc.infer.no.conforming.instance.exists: Z, java.util.List, java.util.List<?>)\n-1 error\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/8015505\/T8015505.out","additions":0,"deletions":2,"binary":false,"changes":2,"status":"deleted"},{"patch":"@@ -6,1 +6,1 @@\n- * @compile --release 7 T8043893.java\n+ *\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/8043893\/T8043893.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -6,1 +6,0 @@\n- * @compile\/fail\/ref=CaptureLowerBound7.out -Xlint:-options --release 7 -XDrawDiagnostics CaptureLowerBound.java\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/CaptureLowerBound.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,2 +0,0 @@\n-CaptureLowerBound.java:17:7: compiler.err.cant.apply.symbol: kindname.method, m, CaptureLowerBound.I<? extends X,X>, CaptureLowerBound.C<compiler.misc.type.captureof: 1, ?>, kindname.class, CaptureLowerBound, (compiler.misc.inferred.do.not.conform.to.lower.bounds: compiler.misc.type.captureof: 1, ?, java.lang.Object)\n-1 error\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/CaptureLowerBound7.out","additions":0,"deletions":2,"binary":false,"changes":2,"status":"deleted"},{"patch":"@@ -6,1 +6,1 @@\n- * @compile --release 7 CaptureLowerBoundArray.java\n+ *\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/CaptureLowerBoundArray.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n- * @compile --release 7 CaptureLowerBoundAssign.java\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/CaptureLowerBoundAssign.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -6,1 +6,1 @@\n- * @compile --release 7 CaptureLowerBoundDeref.java\n+ *\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/CaptureLowerBoundDeref.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -6,1 +6,1 @@\n- * @compile --release 7 CaptureLowerBoundNeg.java\n+ *\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/CaptureLowerBoundNeg.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -6,1 +6,1 @@\n- * @compile --release 7 CaptureUpperBoundDeref.java\n+ *\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/CaptureUpperBoundDeref.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n- * @compile --release 7 -Xlint:-options NestedCapture.java\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/NestedCapture.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n- * @compile --release 7 NestedWildcards.java\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/NestedWildcards.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -7,1 +7,0 @@\n- * @compile\/fail\/ref=BadTest4.out -XDrawDiagnostics --release 7 -Xlint:-options BadTest4.java\n","filename":"test\/langtools\/tools\/javac\/generics\/odersky\/BadTest4.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,2 +0,0 @@\n-BadTest4.java:38:17: compiler.err.cant.apply.symbol: kindname.method, f, A,B, java.lang.Integer,java.lang.Number, kindname.class, BadTest4.Main, (compiler.misc.inferred.do.not.conform.to.upper.bounds: java.lang.Number, java.lang.Integer)\n-1 error\n","filename":"test\/langtools\/tools\/javac\/generics\/odersky\/BadTest4.out","additions":0,"deletions":2,"binary":false,"changes":2,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,1 +48,0 @@\n-        SOURCE_7(\"-source\", \"7\"),\n","filename":"test\/langtools\/tools\/javac\/generics\/rawOverride\/7062745\/GenericOverrideTest.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * @compile\/fail\/ref=EffectivelyFinalTest02.out --release 7 -Xlint:-options -XDrawDiagnostics EffectivelyFinalTest.java\n+ *\n","filename":"test\/langtools\/tools\/javac\/lambda\/EffectivelyFinalTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,14 +0,0 @@\n-EffectivelyFinalTest.java:25:47: compiler.err.var.might.not.have.been.initialized: y\n-EffectivelyFinalTest.java:13:45: compiler.err.local.var.accessed.from.icls.needs.final: x\n-EffectivelyFinalTest.java:13:47: compiler.err.local.var.accessed.from.icls.needs.final: y\n-EffectivelyFinalTest.java:19:45: compiler.err.local.var.accessed.from.icls.needs.final: x\n-EffectivelyFinalTest.java:19:47: compiler.err.local.var.accessed.from.icls.needs.final: y\n-EffectivelyFinalTest.java:25:45: compiler.err.local.var.accessed.from.icls.needs.final: x\n-EffectivelyFinalTest.java:32:45: compiler.err.local.var.accessed.from.icls.needs.final: x\n-EffectivelyFinalTest.java:32:47: compiler.err.local.var.accessed.from.icls.needs.final: y\n-EffectivelyFinalTest.java:39:45: compiler.err.local.var.accessed.from.icls.needs.final: x\n-EffectivelyFinalTest.java:39:47: compiler.err.local.var.accessed.from.icls.needs.final: y\n-EffectivelyFinalTest.java:43:45: compiler.err.local.var.accessed.from.icls.needs.final: x\n-EffectivelyFinalTest.java:48:45: compiler.err.local.var.accessed.from.icls.needs.final: x\n-EffectivelyFinalTest.java:53:45: compiler.err.local.var.accessed.from.icls.needs.final: y\n-13 errors\n","filename":"test\/langtools\/tools\/javac\/lambda\/EffectivelyFinalTest02.out","additions":0,"deletions":14,"binary":false,"changes":14,"status":"deleted"},{"patch":"@@ -6,1 +6,1 @@\n- * @compile\/fail\/ref=IdentifierTest8.out --release 8 -Werror -XDrawDiagnostics IdentifierTest.java\n+ * @compile\/fail\/ref=IdentifierTest8.out --release 8 -Werror -XDrawDiagnostics -Xlint:-options IdentifierTest.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/IdentifierTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,23 +0,0 @@\n-\/*\n- * @test \/nodynamiccopyright\/\n- * @bug 8003280\n- * @summary Add lambda tests\n- *  check that lambda features are not enabled with source < 8\n- * @compile\/fail\/ref=SourceLevelTest.out -XDrawDiagnostics --release 7 -Xlint:-options SourceLevelTest.java\n- *\/\n-\n-class SourceLevelTest {\n-    interface I {\n-        default void m() { SourceLevelTest.impl(this); }\n-    }\n-\n-    interface SAM {\n-        void m();\n-    }\n-\n-    SAM s1 = () -> { };\n-    SAM s2 = this::m;\n-\n-    static void impl(I i) {}\n-    void m() {}\n-}\n","filename":"test\/langtools\/tools\/javac\/lambda\/SourceLevelTest.java","additions":0,"deletions":23,"binary":false,"changes":23,"status":"deleted"},{"patch":"@@ -1,4 +0,0 @@\n-SourceLevelTest.java:11:9: compiler.err.feature.not.supported.in.source.plural: (compiler.misc.feature.default.methods), 7, 8\n-SourceLevelTest.java:18:17: compiler.err.feature.not.supported.in.source.plural: (compiler.misc.feature.lambda), 7, 8\n-SourceLevelTest.java:19:20: compiler.err.feature.not.supported.in.source.plural: (compiler.misc.feature.method.references), 7, 8\n-3 errors\n","filename":"test\/langtools\/tools\/javac\/lambda\/SourceLevelTest.out","additions":0,"deletions":4,"binary":false,"changes":4,"status":"deleted"},{"patch":"@@ -4,1 +4,1 @@\n- * @compile\/fail\/ref=UnderscoreAsIdent8.out --release 8 -XDrawDiagnostics -Werror UnderscoreAsIdent.java\n+ * @compile\/fail\/ref=UnderscoreAsIdent8.out --release 8 -XDrawDiagnostics -Xlint:-options -Werror UnderscoreAsIdent.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/UnderscoreAsIdent.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -58,2 +58,0 @@\n-        B7(7, ClassKind.B),\n-        A7(7, ClassKind.A),\n@@ -295,4 +293,1 @@\n-        boolean altMetafactory =\n-                cpKind == ClasspathKind.B7 &&\n-                !sources.contains(ClassKind.B) &&\n-                (pp == PreferPolicy.NEWER || !spKind.sources.contains(ClassKind.B));\n+        boolean altMetafactory = false;\n","filename":"test\/langtools\/tools\/javac\/lambda\/bridge\/TestMetafactoryBridges.java","additions":2,"deletions":7,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -612,1 +612,1 @@\n-                .vmOptions(\"--source\", \"7\")\n+                .vmOptions(\"--source\", \"8\")\n","filename":"test\/langtools\/tools\/javac\/launcher\/SourceLauncherTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -82,1 +82,3 @@\n-                \"1 warning\"\n+                \"- compiler.warn.option.obsolete.source: 8\",\n+                \"- compiler.warn.option.obsolete.suppression\",\n+                \"3 warnings\"\n@@ -104,2 +106,1 @@\n-                         \"-bootclasspath\", bcp.toAbsolutePath().toString(),\n-                         \"-Werror\")\n+                         \"-bootclasspath\", bcp.toAbsolutePath().toString())\n","filename":"test\/langtools\/tools\/javac\/options\/BCPOrSystemNotSpecified.java","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,0 +2,2 @@\n+- compiler.warn.option.obsolete.source: 8\n+- compiler.warn.option.obsolete.suppression\n@@ -4,1 +6,1 @@\n-1 warning\n+3 warnings\n","filename":"test\/langtools\/tools\/javac\/options\/T6900037.out","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,1 +50,1 @@\n-        boolean newVersion = major > 8;\n+        boolean newVersion = major > 9;\n@@ -74,1 +74,1 @@\n-        String[] opts = { \"-source\", \"1.7\", \"-target\", \"1.7\" };\n+        String[] opts = { \"-source\", \"8\", \"-target\", \"8\" };\n","filename":"test\/langtools\/tools\/javac\/options\/modes\/SourceTargetTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1,2 +0,0 @@\n-ReleaseOption.java:9:49: compiler.err.doesnt.exist: java.util.stream\n-1 error\n","filename":"test\/langtools\/tools\/javac\/options\/release\/ReleaseOption-release7.out","additions":0,"deletions":2,"binary":false,"changes":2,"status":"deleted"},{"patch":"@@ -6,1 +6,0 @@\n- * @compile\/fail\/ref=ReleaseOption-release7.out -XDrawDiagnostics --release 7 -Xlint:-options ReleaseOption.java\n","filename":"test\/langtools\/tools\/javac\/options\/release\/ReleaseOption.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,1 +53,1 @@\n-            List<String> options = Arrays.asList(\"--release\", \"7\", \"-XDrawDiagnostics\", \"-Xlint:-options\");\n+            List<String> options = Arrays.asList(\"--release\", \"8\", \"-XDrawDiagnostics\", \"-Xlint:-options\");\n@@ -56,3 +56,1 @@\n-            String expected =\n-                    \"ReleaseOption.java:9:49: compiler.err.doesnt.exist: java.util.stream\" + lineSep +\n-                    \"1 error\" + lineSep;\n+            String expected =\"\";\n","filename":"test\/langtools\/tools\/javac\/options\/release\/ReleaseOptionThroughAPI.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -152,5 +152,5 @@\n-    @Test\n-    public void profileNotValidForTarget(Path base) throws Exception {\n-        doTest(base, String.format(\"warning: profile compact2 is not valid for target release %s\", Source.MIN.name),\n-                String.format(\"-profile compact2 -target %s -source %s\", Source.MIN.name, Source.MIN.name));\n-    }\n+\/\/     @Test\n+\/\/     public void profileNotValidForTarget(Path base) throws Exception {\n+\/\/         doTest(base, String.format(\"warning: profile compact2 is not valid for target release %s\", Source.MIN.name),\n+\/\/                 String.format(\"-profile compact2 -target %s -source %s\", Source.MIN.name, Source.MIN.name));\n+\/\/     }\n","filename":"test\/langtools\/tools\/javac\/options\/smokeTests\/OptionSmokeTest.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -191,1 +191,0 @@\n-                        checkSourceLevel(annosAfterParams.head.pos, Feature.ANNOTATIONS_AFTER_TYPE_PARAMS);\n","filename":"test\/langtools\/tools\/javac\/parser\/extend\/TrialParser.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -195,1 +195,1 @@\n-            return \"8\";\n+            return \"11\";\n@@ -201,1 +201,1 @@\n-            return \"8\";\n+            return \"11\";\n","filename":"test\/langtools\/tools\/javac\/platform\/PlatformProviderTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2006, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2006, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,2 +34,0 @@\n- * @compile -processor TestSourceVersion -proc:only -source 1.7 -AExpectedVersion=RELEASE_7 HelloWorld.java\n- * @compile -processor TestSourceVersion -proc:only -source   7 -AExpectedVersion=RELEASE_7 HelloWorld.java\n","filename":"test\/langtools\/tools\/javac\/processing\/environment\/TestSourceVersion.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,1 @@\n- * @compile\/ref=empty.out -XDrawDiagnostics -Xlint:processing -processor TestAnnotationsWithoutProcessors --release 8 TestAnnotationsWithoutProcessors.java\n+ * @compile\/ref=empty.out -XDrawDiagnostics -Xlint:processing,-options -processor TestAnnotationsWithoutProcessors --release 8 TestAnnotationsWithoutProcessors.java\n","filename":"test\/langtools\/tools\/javac\/processing\/warnings\/LintProcessing\/TestAnnotationsWithoutProcessors.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -179,1 +179,1 @@\n-                            : Arrays.asList(\"--release\", \"8\", \"-profile\", p.name);\n+                        : Arrays.asList(\"--release\", \"8\", \"-profile\", p.name, \"-Xlint:-options\");\n","filename":"test\/langtools\/tools\/javac\/profiles\/ProfileOptionTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -126,2 +126,1 @@\n-        PRE_LAMBDA(\"-source\", \"7\"),\n-        LAMBDA(\"-source\", \"8\");\n+        LAMBDA(\"--release\", \"8\");\n","filename":"test\/langtools\/tools\/javac\/scope\/7046348\/EagerInterfaceCompletionTest.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -6,1 +6,1 @@\n- * @compile\/fail\/ref=T6313164Source7.out --release 7 -XDrawDiagnostics  -Xlint:-options T6313164.java\n+ *\n","filename":"test\/langtools\/tools\/javac\/varargs\/6313164\/T6313164.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,4 +0,0 @@\n-T6313164.java:14:10: compiler.err.cant.apply.symbol: kindname.method, foo1, p1.A[], p1.B,p1.B, kindname.class, p1.B, (compiler.misc.inaccessible.varargs.type: p1.A, kindname.class, T6313164)\n-T6313164.java:19:15: compiler.err.prob.found.req: (compiler.misc.inaccessible.varargs.type: p1.A, kindname.class, T6313164)\n-T6313164.java:20:15: compiler.err.prob.found.req: (compiler.misc.inaccessible.varargs.type: p1.A, kindname.class, T6313164)\n-3 errors\n","filename":"test\/langtools\/tools\/javac\/varargs\/6313164\/T6313164Source7.out","additions":0,"deletions":4,"binary":false,"changes":4,"status":"deleted"},{"patch":"@@ -30,1 +30,0 @@\n- * @compile --release 7 VarargsAndWildcardParameterizedTypeTest.java\n","filename":"test\/langtools\/tools\/javac\/varargs\/access\/VarargsAndWildcardParameterizedTypeTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n- * @compile --release 7 VarargsAndWildcardParameterizedTypeTest2.java\n","filename":"test\/langtools\/tools\/javac\/varargs\/access\/VarargsAndWildcardParameterizedTypeTest2.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n- * @compile --release 7 VarargsAndWildcardParameterizedTypeTest3.java\n","filename":"test\/langtools\/tools\/javac\/varargs\/access\/VarargsAndWildcardParameterizedTypeTest3.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n- * @compile --release 7 VarargsAndWildcardParameterizedTypeTest4.java\n","filename":"test\/langtools\/tools\/javac\/varargs\/access\/VarargsAndWildcardParameterizedTypeTest4.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,4 +0,0 @@\n-VarargsInferredPrivateType.java:16:10: compiler.err.cant.apply.symbol: kindname.method, m, T[], otherpackage.OtherPackage.Private, kindname.interface, VarargsInferredPrivateType.I, (compiler.misc.inaccessible.varargs.type: otherpackage.OtherPackage.Private, kindname.class, VarargsInferredPrivateType)\n-- compiler.note.unchecked.filename: VarargsInferredPrivateType.java\n-- compiler.note.unchecked.recompile\n-1 error\n","filename":"test\/langtools\/tools\/javac\/varargs\/access\/VarargsInferredPrivateType-source7.out","additions":0,"deletions":4,"binary":false,"changes":4,"status":"deleted"},{"patch":"@@ -7,1 +7,1 @@\n- * @compile\/fail\/ref=VarargsInferredPrivateType-source7.out --release 7 -nowarn -XDrawDiagnostics VarargsInferredPrivateType.java OtherPackage.java\n+ *\n","filename":"test\/langtools\/tools\/javac\/varargs\/access\/VarargsInferredPrivateType.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -73,3 +73,2 @@\n-                    return source.compareTo(SourceLevel.JDK_7) < 0 ||\n-                            suppressLevelDecl == SuppressLevel.UNCHECKED ||\n-                            trustMe == TrustMe.TRUST;\n+                    return  suppressLevelDecl == SuppressLevel.UNCHECKED ||\n+                        trustMe == TrustMe.TRUST;\n@@ -79,2 +78,1 @@\n-                         (((modKind == ModifierKind.FINAL || modKind == ModifierKind.STATIC) &&\n-                           source.compareTo( SourceLevel.JDK_7) >= 0 ) ||\n+                         (((modKind == ModifierKind.FINAL || modKind == ModifierKind.STATIC) ) ||\n@@ -93,2 +91,2 @@\n-        JDK_7(\"7\"),\n-        JDK_9(\"9\");\n+        JDK_9(\"9\"),\n+        LATEST(Integer.toString(javax.lang.model.SourceVersion.latest().runtimeVersion().feature()));\n@@ -232,1 +230,1 @@\n-                .withOption(\"-source\")\n+                .withOption(\"--release\")\n","filename":"test\/langtools\/tools\/javac\/varargs\/warning\/Warn4.java","additions":7,"deletions":9,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -129,3 +129,3 @@\n-        JDK_6(\"6\"),\n-        JDK_7(\"7\"),\n-        JDK_9(\"9\");\n+        JDK_8(\"8\"),\n+        JDK_9(\"9\"),\n+        LATEST(Integer.toString(javax.lang.model.SourceVersion.latest().runtimeVersion().feature()));\n@@ -237,1 +237,1 @@\n-                .withOption(\"-source\")\n+                .withOption(\"--release\")\n@@ -259,11 +259,10 @@\n-        if (sourceLevel.compareTo(SourceLevel.JDK_7) >= 0 &&\n-                trustMe == TrustMe.TRUST &&\n-                suppressLevel != SuppressLevel.VARARGS &&\n-                xlint != XlintOption.NONE &&\n-                sig.isVarargs &&\n-                !sig.isReifiableArg &&\n-                body.hasAliasing &&\n-                (methKind == MethodKind.CONSTRUCTOR ||\n-                (methKind == MethodKind.METHOD &&\n-                 modKind == ModifierKind.FINAL || modKind == ModifierKind.STATIC ||\n-                 (modKind == ModifierKind.PRIVATE && sourceLevel.compareTo(SourceLevel.JDK_9) >= 0)))) {\n+        if (trustMe == TrustMe.TRUST &&\n+            suppressLevel != SuppressLevel.VARARGS &&\n+            xlint != XlintOption.NONE &&\n+            sig.isVarargs &&\n+            !sig.isReifiableArg &&\n+            body.hasAliasing &&\n+            (methKind == MethodKind.CONSTRUCTOR ||\n+             (methKind == MethodKind.METHOD &&\n+              modKind == ModifierKind.FINAL || modKind == ModifierKind.STATIC ||\n+              (modKind == ModifierKind.PRIVATE && sourceLevel.compareTo(SourceLevel.JDK_9) >= 0)))) {\n@@ -273,5 +272,4 @@\n-        if (sourceLevel.compareTo(SourceLevel.JDK_7) >= 0 &&\n-                trustMe == TrustMe.DONT_TRUST &&\n-                sig.isVarargs &&\n-                !sig.isReifiableArg &&\n-                xlint == XlintOption.ALL) {\n+        if (trustMe == TrustMe.DONT_TRUST &&\n+            sig.isVarargs &&\n+            !sig.isReifiableArg &&\n+            xlint == XlintOption.ALL) {\n@@ -281,6 +279,5 @@\n-        if (sourceLevel.compareTo(SourceLevel.JDK_7) >= 0 &&\n-                trustMe == TrustMe.TRUST &&\n-                (!sig.isVarargs ||\n-                 ((modKind == ModifierKind.NONE ||\n-                 modKind == ModifierKind.PRIVATE && sourceLevel.compareTo(SourceLevel.JDK_9) < 0 ) &&\n-                 methKind == MethodKind.METHOD))) {\n+        if (trustMe == TrustMe.TRUST &&\n+            (!sig.isVarargs ||\n+             ((modKind == ModifierKind.NONE ||\n+               modKind == ModifierKind.PRIVATE && sourceLevel.compareTo(SourceLevel.JDK_9) < 0 ) &&\n+              methKind == MethodKind.METHOD))) {\n@@ -290,9 +287,8 @@\n-        if (sourceLevel.compareTo(SourceLevel.JDK_7) >= 0 &&\n-                trustMe == TrustMe.TRUST &&\n-                xlint != XlintOption.NONE &&\n-                suppressLevel != SuppressLevel.VARARGS &&\n-                (modKind == ModifierKind.FINAL || modKind == ModifierKind.STATIC ||\n-                 (modKind == ModifierKind.PRIVATE && sourceLevel.compareTo(SourceLevel.JDK_9) >= 0) ||\n-                 methKind == MethodKind.CONSTRUCTOR) &&\n-                sig.isVarargs &&\n-                sig.isReifiableArg) {\n+        if (trustMe == TrustMe.TRUST &&\n+            xlint != XlintOption.NONE &&\n+            suppressLevel != SuppressLevel.VARARGS &&\n+            (modKind == ModifierKind.FINAL || modKind == ModifierKind.STATIC ||\n+             (modKind == ModifierKind.PRIVATE && sourceLevel.compareTo(SourceLevel.JDK_9) >= 0) ||\n+             methKind == MethodKind.CONSTRUCTOR) &&\n+            sig.isVarargs &&\n+            sig.isReifiableArg) {\n","filename":"test\/langtools\/tools\/javac\/varargs\/warning\/Warn5.java","additions":32,"deletions":36,"binary":false,"changes":68,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -70,1 +70,1 @@\n-        Set.of(\"1.2\", \"1.3\", \"1.4\", \"1.5\", \"1.6\");\n+        Set.of(\"1.2\", \"1.3\", \"1.4\", \"1.5\", \"1.6\", \"1.7\");\n@@ -73,1 +73,1 @@\n-        Set.of(\"1.7\", \"1.8\", \"1.9\", \"1.10\", \"11\", \"12\", \"13\", \"14\",\n+        Set.of(\"1.8\", \"1.9\", \"1.10\", \"11\", \"12\", \"13\", \"14\",\n@@ -79,1 +79,0 @@\n-        SEVEN(true,   \"51.0\",  \"7\", Versions::checksrc7),\n@@ -248,6 +247,0 @@\n-    protected void checksrc7(List<String> args) {\n-        printargs(\"checksrc7\", args);\n-        expectedPass(args, List.of(\"New7.java\"));\n-        expectedFail(args, List.of(\"New8.java\"));\n-    }\n-\n","filename":"test\/langtools\/tools\/javac\/versions\/Versions.java","additions":3,"deletions":10,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,2 +27,2 @@\n- * @compile -Xlint:missing-explicit-ctor -Werror --release 8 NoWarningCases.java\n- * @compile -Xlint:missing-explicit-ctor -Werror             NoWarningCases.java\n+ * @compile -Xlint:missing-explicit-ctor,-options -Werror --release 8 NoWarningCases.java\n+ * @compile -Xlint:missing-explicit-ctor          -Werror             NoWarningCases.java\n","filename":"test\/langtools\/tools\/javac\/warnings\/DefaultCtor\/NoWarningCases.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -63,0 +63,2 @@\n+        assertFalse(invoke(\"6\"));\n+        assertFalse(invoke(\"7\"));\n","filename":"test\/langtools\/tools\/jdeprscan\/tests\/jdk\/jdeprscan\/TestRelease.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"}]}