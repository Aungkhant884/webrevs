{"files":[{"patch":"@@ -91,9 +91,5 @@\n-    JNIEnv *env = [ThreadUtilities getJNIEnv];\n-    jobject axContext = [self axContextWithEnv:env];\n-    if (axContext == NULL) return 0;\n-    jclass clsInfo = (*env)->GetObjectClass(env, axContext);\n-    DECLARE_METHOD_RETURN(jm_getAccessibleRowAtIndex, clsInfo, \"getAccessibleRowAtIndex\", \"(I)I\", -1);\n-    jint rowAtIndex = (*env)->CallIntMethod(env, axContext, jm_getAccessibleRowAtIndex, (jint)index);\n-    CHECK_EXCEPTION();\n-    (*env)->DeleteLocalRef(env, axContext);\n-    return (int)rowAtIndex;\n+    int columnCount = [self accessibilityColumnCount];\n+    if (columnCount != 0) {\n+        return index \/ columnCount;\n+    }\n+    return -1;\n@@ -104,9 +100,5 @@\n-    JNIEnv *env = [ThreadUtilities getJNIEnv];\n-    jobject axContext = [self axContextWithEnv:env];\n-    if (axContext == NULL) return 0;\n-    jclass clsInfo = (*env)->GetObjectClass(env, axContext);\n-    DECLARE_METHOD_RETURN(jm_getAccessibleColumnAtIndex, clsInfo, \"getAccessibleColumnAtIndex\", \"(I)I\", -1);\n-    jint columnAtIndex = (*env)->CallIntMethod(env, axContext, jm_getAccessibleColumnAtIndex, (jint)index);\n-    CHECK_EXCEPTION();\n-    (*env)->DeleteLocalRef(env, axContext);\n-    return (int)columnAtIndex;\n+    int columnCount = [self accessibilityColumnCount];\n+    if (columnCount != 0) {\n+        return index % columnCount;\n+    }\n+    return -1;\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/TableAccessibility.m","additions":10,"deletions":18,"binary":false,"changes":28,"status":"modified"}]}