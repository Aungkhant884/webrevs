{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCAdjustTask.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/hotspot\/share\/gc\/g1\/g1GCPhaseTimes.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/hotspot\/share\/gc\/g1\/g1RootProcessor.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/hotspot\/share\/gc\/shared\/oopStorageSet.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/hotspot\/share\/gc\/shared\/oopStorageSet.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/hotspot\/share\/gc\/shared\/oopStorageSetParState.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/hotspot\/share\/gc\/shared\/oopStorageSetParState.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/hotspot\/share\/gc\/shared\/weakProcessor.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,1 +53,1 @@\n-  for (auto id : EnumRange<WeakId>()) {\n+  for (auto id : EnumRange<OopStorageSet::WeakId>()) {\n@@ -102,2 +102,2 @@\n-WorkerDataArray<double>* WeakProcessorTimes::worker_data(WeakId id) const {\n-  size_t index = EnumRange<WeakId>().index(id);\n+WorkerDataArray<double>* WeakProcessorTimes::worker_data(OopStorageSet::WeakId id) const {\n+  size_t index = EnumRange<OopStorageSet::WeakId>().index(id);\n@@ -108,1 +108,2 @@\n-double WeakProcessorTimes::worker_time_sec(uint worker_id, WeakId id) const {\n+double WeakProcessorTimes::worker_time_sec(uint worker_id,\n+                                           OopStorageSet::WeakId id) const {\n@@ -115,1 +116,1 @@\n-                                                WeakId id,\n+                                                OopStorageSet::WeakId id,\n@@ -121,1 +122,1 @@\n-                                             WeakId id,\n+                                             OopStorageSet::WeakId id,\n@@ -146,1 +147,1 @@\n-                                                         WeakId storage_id,\n+                                                         OopStorageSet::WeakId storage_id,\n@@ -177,1 +178,1 @@\n-void WeakProcessorTimes::log_summary(WeakId id, uint indent) const {\n+void WeakProcessorTimes::log_summary(OopStorageSet::WeakId id, uint indent) const {\n@@ -206,1 +207,1 @@\n-    for (auto id : EnumRange<WeakId>()) {\n+    for (auto id : EnumRange<OopStorageSet::WeakId>()) {\n","filename":"src\/hotspot\/share\/gc\/shared\/weakProcessorTimes.cpp","additions":11,"deletions":10,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,4 +36,0 @@\n-public:\n-  using WeakId = OopStorageSet::WeakId;\n-\n-private:\n@@ -51,2 +47,2 @@\n-  WorkerDataArray<double>* _worker_data[EnumRange<WeakId>().size()];\n-  WorkerDataArray<double>* worker_data(WeakId id) const;\n+  WorkerDataArray<double>* _worker_data[EnumRange<OopStorageSet::WeakId>().size()];\n+  WorkerDataArray<double>* worker_data(OopStorageSet::WeakId id) const;\n@@ -54,1 +50,1 @@\n-  void log_summary(WeakId id, uint indent) const;\n+  void log_summary(OopStorageSet::WeakId id, uint indent) const;\n@@ -67,1 +63,1 @@\n-  double worker_time_sec(uint worker_id, WeakId id) const;\n+  double worker_time_sec(uint worker_id, OopStorageSet::WeakId id) const;\n@@ -70,2 +66,7 @@\n-  void record_worker_time_sec(uint worker_id, WeakId id, double time_sec);\n-  void record_worker_items(uint worker_id, WeakId id, size_t num_dead, size_t num_total);\n+  void record_worker_time_sec(uint worker_id,\n+                              OopStorageSet::WeakId id,\n+                              double time_sec);\n+  void record_worker_items(uint worker_id,\n+                           OopStorageSet::WeakId id,\n+                           size_t num_dead,\n+                           size_t num_total);\n@@ -93,4 +94,0 @@\n-public:\n-  using WeakId = OopStorageSet::WeakId;\n-\n-private:\n@@ -98,1 +95,1 @@\n-  WeakId _storage_id;\n+  OopStorageSet::WeakId _storage_id;\n@@ -107,1 +104,1 @@\n-                              WeakId storage_id,\n+                              OopStorageSet::WeakId storage_id,\n","filename":"src\/hotspot\/share\/gc\/shared\/weakProcessorTimes.hpp","additions":14,"deletions":17,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2020, Red Hat, Inc. All rights reserved.\n+ * Copyright (c) 2019, 2021, Red Hat, Inc. All rights reserved.\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahParallelCleaning.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2020, Red Hat, Inc. All rights reserved.\n+ * Copyright (c) 2019, 2021, Red Hat, Inc. All rights reserved.\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahRootVerifier.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/hotspot\/share\/jfr\/leakprofiler\/checkpoint\/rootResolver.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/hotspot\/share\/jfr\/leakprofiler\/utilities\/rootType.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/hotspot\/share\/jfr\/leakprofiler\/utilities\/rootType.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/hotspot\/share\/runtime\/serviceThread.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n","filename":"test\/hotspot\/gtest\/gc\/shared\/test_oopStorageSet.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}