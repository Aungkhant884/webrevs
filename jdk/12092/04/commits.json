[{"commit":{"message":"added stress and random flags\/tags"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/TestCMoveLimitType.java"}],"sha":"e81d2569ad7951924ece12d29d9a482f30b8a978"},{"commit":{"message":"typo correction"},"files":[{"filename":"src\/hotspot\/share\/opto\/loopTransform.cpp"}],"sha":"b59ca8923f19300fc8a9064c1594852f3edf18bf"},{"commit":{"message":"Refactoring\/renaming after discussion with Christian"},"files":[{"filename":"src\/hotspot\/share\/opto\/loopTransform.cpp"}],"sha":"c08e529c9004739a336294d61278d75c9f69d97e"},{"commit":{"message":"ignore debug flag for product build"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/TestCMoveLimitType.java"}],"sha":"4858629caf30fa113c2dd39e3371749e9a63e2ac"},{"commit":{"message":"8299975: Limit underflow protection CMoveINode in PhaseIdealLoop::do_unroll must also protect type from underflow"},"files":[{"filename":"src\/hotspot\/share\/opto\/loopTransform.cpp"},{"filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/TestCMoveLimitType.java"}],"sha":"ca4e020e4626545a827a8b36432bdc9274bb869e"}]