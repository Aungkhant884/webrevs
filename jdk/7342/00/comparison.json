{"files":[{"patch":"@@ -948,1 +948,1 @@\n-                   (b.value[y+b.offset] & LONG_MASK) - ((int)-(diff>>32));\n+                   (b.value[y+b.offset] & LONG_MASK) + (diff >> 32);\n@@ -954,1 +954,1 @@\n-            diff = (a.value[x+a.offset] & LONG_MASK) - ((int)-(diff>>32));\n+            diff = (a.value[x+a.offset] & LONG_MASK) + (diff >> 32);\n@@ -989,1 +989,1 @@\n-                (b.value[b.offset+ y] & LONG_MASK) - ((int)-(diff>>32));\n+                (b.value[b.offset+ y] & LONG_MASK) + (diff >> 32);\n@@ -993,1 +993,1 @@\n-        while (x > 0) {\n+        while (diff < 0 && x > 0) {\n@@ -995,1 +995,1 @@\n-            diff = (a.value[a.offset+ x] & LONG_MASK) - ((int)-(diff>>32));\n+            diff = (a.value[a.offset+ x] & LONG_MASK) + (diff >> 32);\n","filename":"src\/java.base\/share\/classes\/java\/math\/MutableBigInteger.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -210,0 +210,11 @@\n+\n+    \/** Invokes the gcd method of BigInteger with different values. *\/\n+    @Benchmark\n+    @OperationsPerInvocation(TESTSIZE)\n+    public void testGcd(Blackhole bh) {\n+        for (int i = 0; i < TESTSIZE; i++) {\n+            BigInteger i1 = shiftArray[TESTSIZE - i - 1];\n+            BigInteger i2 = shiftArray[i];\n+            bh.consume(i2.gcd(i1));\n+        }\n+    }\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/math\/BigIntegers.java","additions":11,"deletions":0,"binary":false,"changes":11,"status":"modified"}]}