{"files":[{"patch":"@@ -131,0 +131,1 @@\n+        char q = quoteCharacter();\n@@ -139,1 +140,4 @@\n-        stream.println(\"  <file>                  Location of the recording file (.jfr), it's optional.\");\n+        stream.println(\"  <file>                  Location of the recording file (.jfr)\");\n+        stream.println();\n+        stream.println(\"If the <file> parameter is omitted, metadata from the JDK where\");\n+        stream.println(\"the \" + q + \"jfr\" + q + \" tool is located will be used\");\n@@ -144,0 +148,2 @@\n+        stream.println(\" jfr metadata\");\n+        stream.println();\n@@ -148,1 +154,0 @@\n-        char q = quoteCharacter();\n@@ -151,1 +156,1 @@\n-        stream.println(\" jfr metadata --events \"+ q + \"Thread*\" + q);\n+        stream.println(\" jfr metadata --events \" + q + \"Thread*\" + q);\n@@ -203,1 +208,2 @@\n-            \/\/ determine whether reading from recording file or reading from metadata.bin\n+            \/\/ determine whether reading from recording file or reading from the JDK where\n+            \/\/ the jfr tool is located will be used\n@@ -213,1 +219,1 @@\n-                \/\/ so copy its elements to new list and allow further sorting\n+                \/\/ so copy its elements to a new list and sort it\n@@ -223,1 +229,2 @@\n-                prettyWriter.printType(type);\n+\n+                prettyWriter.printType(PrivateAccess.getInstance().getType(type));\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/tool\/Metadata.java","additions":13,"deletions":6,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -38,1 +38,0 @@\n-import jdk.jfr.EventType;\n@@ -80,4 +79,0 @@\n-    public void printType(EventType t) {\n-        printType(PrivateAccess.getInstance().getType(t));\n-    }\n-\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/tool\/PrettyWriter.java","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"}]}