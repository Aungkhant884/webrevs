{"files":[{"patch":"@@ -230,1 +230,1 @@\n-    private Path getOptionalJFRInputFile(Deque<String> options) {\n+    private Path getOptionalJFRInputFile(Deque<String> options) throws UserDataException {\n@@ -234,2 +234,2 @@\n-                try {\n-                    Path tmp = Paths.get(file).toAbsolutePath();\n+                Path tmp = Paths.get(file).toAbsolutePath();\n+                if (tmp.toString().endsWith(\".jfr\")) {\n@@ -237,1 +237,0 @@\n-                    ensureJFRFile(tmp);\n@@ -240,2 +239,0 @@\n-                } catch (Exception e) {\n-                    \/\/ ignored since recording file for jfr metadata is optional\n@@ -248,1 +245,1 @@\n-    private static boolean acceptSingleOption(Deque<String> options, String expected) throws UserSyntaxException {\n+    private static boolean acceptSingleOption(Deque<String> options, String expected) {\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/tool\/Metadata.java","additions":4,"deletions":7,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -134,0 +134,12 @@\n+\n+        output = ExecuteHelper.jfr(\"metadata\", \"--categories\", \"J*\");\n+        lines = output.asLines();\n+        eventNames.clear();\n+        for (String line : lines) {\n+            if (line.startsWith(\"@Category(\\\"\")) {\n+                eventNames.add(line.substring(11, line.indexOf(\"\\\"\", 11)));\n+            }\n+        }\n+        for (String eventName : eventNames) {\n+            Asserts.assertTrue(eventName.startsWith(\"J\"));\n+        }\n","filename":"test\/jdk\/jdk\/jfr\/tool\/TestMetadata.java","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"}]}