{"files":[{"patch":"@@ -34,1 +34,5 @@\n-  \/\/ Currently no specific content, but CallArranger detects usage of ABIv1 for this class.\n+\n+    @Override\n+    protected boolean useABIv2() {\n+        return false;\n+    }\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/ppc64\/ABIv1CallArranger.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -34,1 +34,5 @@\n-    \/\/ Currently no specific content, but CallArranger detects usage of ABIv2 for this class.\n+\n+    @Override\n+    protected boolean useABIv2() {\n+        return true;\n+    }\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/ppc64\/ABIv2CallArranger.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -65,1 +65,1 @@\n-    final boolean useABIv2 = (this instanceof ABIv2CallArranger);\n+    final boolean useABIv2 = useABIv2();\n@@ -96,0 +96,5 @@\n+    \/**\n+     * Select ABI version\n+     *\/\n+    protected abstract boolean useABIv2();\n+\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/ppc64\/CallArranger.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"}]}