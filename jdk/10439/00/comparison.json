{"files":[{"patch":"@@ -167,1 +167,1 @@\n-      movptr_with_offset(temp, dest, offset);                      \\\n+      movptr(temp, dest, offset);                                  \\\n@@ -204,1 +204,1 @@\n-      movptr_with_offset(temp, dest, offset);                     \\\n+      movptr(temp, dest, offset);                                 \\\n@@ -275,1 +275,1 @@\n-void Assembler::movptr_with_offset(Register Rd, address addr, int32_t &offset) {\n+void Assembler::movptr(Register Rd, address addr, int32_t &offset) {\n@@ -310,1 +310,1 @@\n-  movptr_with_offset(Rd, addr, offset);\n+  movptr(Rd, addr, offset);\n","filename":"src\/hotspot\/cpu\/riscv\/assembler_riscv.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -305,1 +305,1 @@\n-      movptr_with_offset(Rd, (address)(uintptr_t)adr.offset(), offset);\n+      movptr(Rd, (address)(uintptr_t)adr.offset(), offset);\n@@ -324,1 +324,1 @@\n-  void movptr_with_offset(Register Rd, address addr, int32_t &offset);\n+  void movptr(Register Rd, address addr, int32_t &offset);\n@@ -526,1 +526,1 @@\n-      movptr_with_offset(Rd, dest, offset);                                                        \\\n+      movptr(Rd, dest, offset);                                                                    \\\n@@ -600,1 +600,1 @@\n-      movptr_with_offset(temp, dest, offset);                                                      \\\n+      movptr(temp, dest, offset);                                                                  \\\n@@ -745,1 +745,1 @@\n-      movptr_with_offset(temp, dest, offset);                                                      \\\n+      movptr(temp, dest, offset);                                                                  \\\n@@ -789,1 +789,1 @@\n-      movptr_with_offset(temp, dest, offset);                                                      \\\n+      movptr(temp, dest, offset);                                                                  \\\n@@ -884,1 +884,1 @@\n-      movptr_with_offset(temp, dest, off);                                                    \\\n+      movptr(temp, dest, off);                                                                \\\n","filename":"src\/hotspot\/cpu\/riscv\/assembler_riscv.hpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -251,3 +251,3 @@\n-  int32_t _offset = 0;\n-  movptr_with_offset(t0, StubRoutines::riscv::method_entry_barrier(), _offset);\n-  jalr(ra, t0, _offset);\n+  int32_t offset = 0;\n+  movptr(t0, StubRoutines::riscv::method_entry_barrier(), offset);\n+  jalr(ra, t0, offset);\n","filename":"src\/hotspot\/cpu\/riscv\/c2_MacroAssembler_riscv.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -259,1 +259,1 @@\n-    __ movptr_with_offset(t0, StubRoutines::riscv::method_entry_barrier(), offset);\n+    __ movptr(t0, StubRoutines::riscv::method_entry_barrier(), offset);\n","filename":"src\/hotspot\/cpu\/riscv\/gc\/shared\/barrierSetAssembler_riscv.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -559,1 +559,1 @@\n-  movptr_with_offset(t0, 0, offset);\n+  movptr(t0, 0, offset);\n@@ -568,1 +568,1 @@\n-  movptr_with_offset(t0, entry_point, offset);\n+  movptr(t0, entry_point, offset);\n@@ -2692,1 +2692,0 @@\n-  relocInfo::relocType rtype = dest.rspec().reloc()->type();\n@@ -2712,1 +2711,1 @@\n-    movptr_with_offset(reg1, dest.target(), offset);\n+    movptr(reg1, dest.target(), offset);\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -686,1 +686,1 @@\n-  \/\/   - indirect call: movptr_with_offset + jalr\n+  \/\/   - indirect call: movptr + jalr\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -283,1 +283,1 @@\n-  \/\/ As a special case we also use sequence movptr_with_offset(r,0), jalr(r,0)\n+  \/\/ As a special case we also use sequence movptr(r,0), jalr(r,0)\n@@ -395,1 +395,1 @@\n-  a.movptr_with_offset(t0, entry, offset); \/\/ lui, addi, slli, addi, slli\n+  a.movptr(t0, entry, offset); \/\/ lui, addi, slli, addi, slli\n","filename":"src\/hotspot\/cpu\/riscv\/nativeInst_riscv.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -331,1 +331,0 @@\n-    movptr_with_offset_instruction_size =    5 * NativeInstruction::instruction_size, \/\/ lui, addi, slli, addi, slli. See movptr_with_offset().\n@@ -345,1 +344,1 @@\n-      if (is_addi_at(addr_at(movptr_with_offset_instruction_size))) {\n+      if (is_addi_at(addr_at(movptr_instruction_size - NativeInstruction::instruction_size))) {\n@@ -350,1 +349,1 @@\n-        return addr_at(movptr_with_offset_instruction_size);\n+        return addr_at(movptr_instruction_size - NativeInstruction::instruction_size);\n","filename":"src\/hotspot\/cpu\/riscv\/nativeInst_riscv.hpp","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -655,1 +655,1 @@\n-    __ movptr_with_offset(t0, CAST_FROM_FN_PTR(address, MacroAssembler::debug64), offset);\n+    __ movptr(t0, CAST_FROM_FN_PTR(address, MacroAssembler::debug64), offset);\n@@ -3744,1 +3744,1 @@\n-    __ movptr_with_offset(t0, runtime_entry, offset);\n+    __ movptr(t0, runtime_entry, offset);\n","filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -390,1 +390,1 @@\n-    __ movptr_with_offset(rarg, Universe::the_null_sentinel_addr(), offset);\n+    __ movptr(rarg, Universe::the_null_sentinel_addr(), offset);\n","filename":"src\/hotspot\/cpu\/riscv\/templateTable_riscv.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}