{"files":[{"patch":"@@ -38,21 +38,0 @@\n-struct RetireTLABAndFlushLogsClosure : public ThreadClosure {\n-public:\n-  ThreadLocalAllocStats _tlab_stats;\n-  G1ConcurrentRefineStats _refinement_stats;\n-\n-  RetireTLABAndFlushLogsClosure() : _tlab_stats(), _refinement_stats() { }\n-\n-  void do_thread(Thread* thread) override {\n-    if (thread->is_Java_thread()) {\n-      \/\/ Flushes deferred card marks, so must precede concatenating logs.\n-      BarrierSet::barrier_set()->make_parsable((JavaThread*)thread);\n-      if (UseTLAB) {\n-        thread->tlab().retire(&_tlab_stats);\n-      }\n-    }\n-\n-    G1DirtyCardQueueSet& qset = G1BarrierSet::dirty_card_queue_set();\n-    _refinement_stats += qset.concatenate_log_and_stats(thread);\n-  }\n-};\n-\n@@ -71,0 +50,19 @@\n+  struct RetireTLABAndFlushLogsClosure : public ThreadClosure {\n+    ThreadLocalAllocStats _tlab_stats;\n+    G1ConcurrentRefineStats _refinement_stats;\n+\n+    RetireTLABAndFlushLogsClosure() : _tlab_stats(), _refinement_stats() { }\n+\n+    void do_thread(Thread* thread) override {\n+      assert(thread->is_Java_thread(), \"must be\");\n+      \/\/ Flushes deferred card marks, so must precede concatenating logs.\n+      BarrierSet::barrier_set()->make_parsable((JavaThread*)thread);\n+      if (UseTLAB) {\n+        thread->tlab().retire(&_tlab_stats);\n+      }\n+\n+      G1DirtyCardQueueSet& qset = G1BarrierSet::dirty_card_queue_set();\n+      _refinement_stats += qset.concatenate_log_and_stats(thread);\n+    }\n+  };\n+\n@@ -129,1 +127,10 @@\n-  RetireTLABAndFlushLogsClosure _tc;\n+  struct FlushLogsClosure : public ThreadClosure {\n+    G1ConcurrentRefineStats _refinement_stats;\n+\n+    FlushLogsClosure() : _refinement_stats() { }\n+\n+    void do_thread(Thread* thread) override {\n+      G1DirtyCardQueueSet& qset = G1BarrierSet::dirty_card_queue_set();\n+      _refinement_stats += qset.concatenate_log_and_stats(thread);\n+    }\n+  } _tc;\n@@ -142,1 +149,0 @@\n-  ThreadLocalAllocStats tlab_stats() const { return _tc._tlab_stats; }\n@@ -177,4 +183,1 @@\n-  ThreadLocalAllocStats total_tlab_stats;\n-  total_tlab_stats.update(_java_retire_task->tlab_stats());\n-  total_tlab_stats.update(_non_java_retire_task->tlab_stats());\n-  total_tlab_stats.publish();\n+  _java_retire_task->tlab_stats().publish();\n","filename":"src\/hotspot\/share\/gc\/g1\/g1YoungGCPreEvacuateTasks.cpp","additions":30,"deletions":27,"binary":false,"changes":57,"status":"modified"}]}