{"files":[{"patch":"@@ -32,0 +32,1 @@\n+import java.lang.reflect.AccessFlag;\n@@ -108,1 +109,1 @@\n-        OPEN,\n+        OPEN(AccessFlag.OPEN.mask()),\n@@ -117,1 +118,1 @@\n-        AUTOMATIC,\n+        AUTOMATIC(0 \/* no flag per above comment *\/),\n@@ -122,1 +123,1 @@\n-        SYNTHETIC,\n+        SYNTHETIC(AccessFlag.SYNTHETIC.mask()),\n@@ -127,2 +128,1 @@\n-        MANDATED;\n-    }\n+        MANDATED(AccessFlag.MANDATED.mask());\n@@ -130,0 +130,6 @@\n+        private final int mask;\n+        private Modifier(int mask) {\n+            this.mask = mask;\n+        }\n+        private int mask() {return mask;}\n+    }\n@@ -155,1 +161,1 @@\n-            TRANSITIVE,\n+            TRANSITIVE(AccessFlag.TRANSITIVE.mask()),\n@@ -161,1 +167,1 @@\n-            STATIC,\n+            STATIC(AccessFlag.STATIC_PHASE.mask()),\n@@ -167,1 +173,1 @@\n-            SYNTHETIC,\n+            SYNTHETIC(AccessFlag.SYNTHETIC.mask()),\n@@ -173,2 +179,6 @@\n-            MANDATED;\n-\n+            MANDATED(AccessFlag.MANDATED.mask());\n+            private final int mask;\n+            private Modifier(int mask) {\n+                this.mask = mask;\n+            }\n+            private int mask() {return mask;}\n@@ -176,1 +186,0 @@\n-\n@@ -206,0 +215,15 @@\n+        \/**\n+         * {@return an unmodifiable set of the module {@linkplain AccessFlag\n+         * requires flags, possibly empty}}\n+         * @see #modifiers()\n+         * @jvms 4.7.25 The Module Attribute\n+         * @since 20\n+         *\/\n+        public Set<AccessFlag> accessFlags() {\n+            int mask = 0;\n+            for (var modifier : mods) {\n+                mask |= modifier.mask();\n+            }\n+            return AccessFlag.maskToAccessFlags(mask, AccessFlag.Location.MODULE_REQUIRES);\n+        }\n+\n@@ -379,1 +403,1 @@\n-            SYNTHETIC,\n+            SYNTHETIC(AccessFlag.SYNTHETIC.mask()),\n@@ -385,1 +409,1 @@\n-            MANDATED;\n+            MANDATED(AccessFlag.MANDATED.mask());\n@@ -387,0 +411,5 @@\n+            private final int mask;\n+            private Modifier(int mask) {\n+                this.mask = mask;\n+            }\n+            private int mask() {return mask;}\n@@ -420,0 +449,15 @@\n+        \/**\n+         * {@return an unmodifiable set of the module {@linkplain AccessFlag\n+         * export flags} for this module descriptor, possibly empty}\n+         * @see #modifiers()\n+         * @jvms 4.7.25 The Module Attribute\n+         * @since 20\n+         *\/\n+        public Set<AccessFlag> accessFlags() {\n+            int mask = 0;\n+            for (var modifier : mods) {\n+                mask |= modifier.mask();\n+            }\n+            return AccessFlag.maskToAccessFlags(mask, AccessFlag.Location.MODULE_EXPORTS);\n+        }\n+\n@@ -582,1 +626,1 @@\n-            SYNTHETIC,\n+            SYNTHETIC(AccessFlag.SYNTHETIC.mask()),\n@@ -588,2 +632,6 @@\n-            MANDATED;\n-\n+            MANDATED(AccessFlag.MANDATED.mask());\n+            private final int mask;\n+            private Modifier(int mask) {\n+                this.mask = mask;\n+            }\n+            private int mask() {return mask;}\n@@ -623,0 +671,15 @@\n+        \/**\n+         * {@return an unmodifiable set of the module {@linkplain AccessFlag\n+         * opens flags}, possibly empty}\n+         * @see #modifiers()\n+         * @jvms 4.7.25 The Module Attribute\n+         * @since 20\n+         *\/\n+        public Set<AccessFlag> accessFlags() {\n+            int mask = 0;\n+            for (var modifier : mods) {\n+                mask |= modifier.mask();\n+            }\n+            return AccessFlag.maskToAccessFlags(mask, AccessFlag.Location.MODULE_OPENS);\n+        }\n+\n@@ -1293,0 +1356,15 @@\n+    \/**\n+     * {@return an unmodifiable set of the {@linkplain AccessFlag\n+     * module flags}, possibly empty}\n+     * @see #modifiers()\n+     * @jvms 4.7.25 The Module Attribute\n+     * @since 20\n+     *\/\n+    public Set<AccessFlag> accessFlags() {\n+        int mask = 0;\n+        for (var modifier : modifiers) {\n+            mask |= modifier.mask();\n+        }\n+        return AccessFlag.maskToAccessFlags(mask, AccessFlag.Location.MODULE);\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/java\/lang\/module\/ModuleDescriptor.java","additions":94,"deletions":16,"binary":false,"changes":110,"status":"modified"}]}