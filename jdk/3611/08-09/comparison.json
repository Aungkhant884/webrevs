{"files":[{"patch":"@@ -52,0 +52,1 @@\n+\n@@ -58,3 +59,5 @@\n-void LambdaFormInvokers::append(char* line) {\n-  if (_lambdaform_lines == NULL) {\n-    _lambdaform_lines = new GrowableArrayCHeap<char*, mtClassShared>(150);\n+static bool should_be_archived(char* line) {\n+  for (int k = 0; k < NUM_FILTER; k++) {\n+    if (strstr(line, filter[k]) != nullptr) {\n+      return true;\n+    }\n@@ -62,1 +65,1 @@\n-  _lambdaform_lines->append(line);\n+  return false;\n@@ -66,5 +69,2 @@\n-  for (int k = 0; k < NUM_FILTER; k++) {\n-    if (strstr(line, filter[k]) != nullptr) {\n-        append(line);\n-        break;\n-    }\n+  if (should_be_archived(line)) {\n+      append(line);\n@@ -75,0 +75,7 @@\n+void LambdaFormInvokers::append(char* line) {\n+  if (_lambdaform_lines == NULL) {\n+    _lambdaform_lines = new GrowableArrayCHeap<char*, mtClassShared>(150);\n+  }\n+  _lambdaform_lines->append(line);\n+}\n+\n@@ -180,3 +187,3 @@\n-    int count = _lambdaform_lines->length();\n-    _static_archive_invokers = ArchiveBuilder::new_ro_array<Array<char>*>(count);\n-    for (int i = 0; i < count; i++) {\n+    int count = 0;\n+    int len   = _lambdaform_lines->length();\n+    for (int i = 0; i < len; i++) {\n@@ -184,6 +191,21 @@\n-      int len = (int)strlen(str);\n-      Array<char>* line = ArchiveBuilder::new_ro_array<char>(len+1);\n-      strncpy(line->adr_at(0), str, (size_t)(len + 1)); \/\/ copies terminating zero as well\n-\n-      _static_archive_invokers->at_put(i, line);\n-      ArchivePtrMarker::mark_pointer(_static_archive_invokers->adr_at(i));\n+      if (should_be_archived(str)) {\n+        count++;\n+      }\n+    }\n+    log_debug(cds)(\"Number of LF invoker lines stored: %d\", count);\n+    if (count > 0) {\n+      _static_archive_invokers = ArchiveBuilder::new_ro_array<Array<char>*>(count);\n+      int index = 0;\n+      for (int i = 0; i < len; i++) {\n+        char* str = _lambdaform_lines->at(i);\n+        if (should_be_archived(str)) {\n+          size_t str_len = strlen(str) + 1;  \/\/ including terminating zero\n+          Array<char>* line = ArchiveBuilder::new_ro_array<char>((int)str_len);\n+          strncpy(line->adr_at(0), str, str_len);\n+\n+          _static_archive_invokers->at_put(index, line);\n+          ArchivePtrMarker::mark_pointer(_static_archive_invokers->adr_at(index));\n+          index++;\n+        }\n+      }\n+      assert(index == count, \"Should match\");\n","filename":"src\/hotspot\/share\/cds\/lambdaFormInvokers.cpp","additions":40,"deletions":18,"binary":false,"changes":58,"status":"modified"}]}