{"files":[{"patch":"@@ -361,2 +361,2 @@\n-bool G1PLABAllocator::may_throw_away_buffer(size_t const allocation_word_sz, size_t const buffer_size) const {\n-  return (allocation_word_sz * 100 < buffer_size * ParallelGCBufferWastePct);\n+bool G1PLABAllocator::may_throw_away_buffer(size_t const words_remaining, size_t const buffer_size) const {\n+  return (words_remaining * 100 < buffer_size * ParallelGCBufferWastePct);\n@@ -369,0 +369,4 @@\n+  PLAB* alloc_buf = alloc_buffer(dest, node_index);\n+  size_t words_remaining = alloc_buf->words_remaining();\n+  assert(words_remaining < word_sz, \"precondition\");\n+\n@@ -381,2 +385,2 @@\n-  \/\/ it would not waste more than ParallelGCBufferWastePct in the current PLAB.\n-  \/\/ Boosting the PLAB also increasingly allows more waste to occur.\n+  \/\/ retiring the current PLAB would not waste more than ParallelGCBufferWastePct\n+  \/\/ in the current PLAB. Boosting the PLAB also increasingly allows more waste to occur.\n@@ -384,4 +388,1 @@\n-    may_throw_away_buffer(required_in_plab, plab_word_size)) {\n-\n-    PLAB* alloc_buf = alloc_buffer(dest, node_index);\n-    guarantee(alloc_buf->words_remaining() <= required_in_plab, \"must be\");\n+    may_throw_away_buffer(words_remaining, plab_word_size)) {\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Allocator.cpp","additions":9,"deletions":8,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -48,0 +48,1 @@\n+import jdk.test.lib.Platform;\n@@ -65,0 +66,2 @@\n+    private static final int HEAP_WORD_SIZE = Platform.is32bit() ? 4 : 8;\n+\n@@ -69,1 +72,0 @@\n-\n@@ -73,3 +75,3 @@\n-    private static final int OBJECT_SIZE_SMALL = 10;\n-    private static final int OBJECT_SIZE_MEDIUM = 100;\n-    private static final int OBJECT_SIZE_HIGH = 3250;\n+    private static final int OBJECT_SIZE_SMALL  = 10 * HEAP_WORD_SIZE;\n+    private static final int OBJECT_SIZE_MEDIUM = 128 * HEAP_WORD_SIZE;\n+    private static final int OBJECT_SIZE_HIGH   = 3072 * HEAP_WORD_SIZE;\n@@ -97,1 +99,2 @@\n-        new TestCase(WASTE_PCT_MEDIUM, PLAB_SIZE_MEDIUM, OBJECT_SIZE_HIGH, GC_NUM_MEDIUM, YOUNG_SIZE_LOW, PLAB_FIXED, true, true),\n+        new TestCase(WASTE_PCT_MEDIUM, PLAB_SIZE_MEDIUM, OBJECT_SIZE_HIGH, GC_NUM_MEDIUM, YOUNG_SIZE_LOW, PLAB_FIXED, true, false),\n+        new TestCase(WASTE_PCT_HIGH, PLAB_SIZE_MEDIUM, OBJECT_SIZE_HIGH, GC_NUM_MEDIUM, YOUNG_SIZE_LOW, PLAB_FIXED, true, true),\n@@ -107,2 +110,0 @@\n-        new TestCase(WASTE_PCT_MEDIUM, PLAB_SIZE_SMALL, OBJECT_SIZE_MEDIUM, GC_NUM_MEDIUM, YOUNG_SIZE_LOW, PLAB_DYNAMIC, true, true),\n-        new TestCase(WASTE_PCT_HIGH, PLAB_SIZE_HIGH, OBJECT_SIZE_MEDIUM, GC_NUM_SMALL, YOUNG_SIZE_HIGH, PLAB_DYNAMIC, true, true),\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/plab\/TestPLABPromotion.java","additions":8,"deletions":7,"binary":false,"changes":15,"status":"modified"}]}