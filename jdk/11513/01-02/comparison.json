{"files":[{"patch":"@@ -674,0 +674,12 @@\n+\/\/ Gets the exploded path for the named module. The memory for the path\n+\/\/ is allocated on the C heap if `c_heap` is true otherwise in the resource area.\n+static const char* get_exploded_module_path(const char* module_name, bool c_heap) {\n+  const char *home = Arguments::get_java_home();\n+  const char file_sep = os::file_separator()[0];\n+  \/\/ 10 represents the length of \"modules\" + 2 file separators + \\0\n+  size_t len = strlen(home) + strlen(module_name) + 10;\n+  char *path = c_heap ? NEW_C_HEAP_ARRAY(char, len, mtModule) : NEW_RESOURCE_ARRAY(char, len);\n+  jio_snprintf(path, len, \"%s%cmodules%c%s\", home, file_sep, file_sep, module_name);\n+  return path;\n+}\n+\n@@ -683,6 +695,1 @@\n-  const char *home = Arguments::get_java_home();\n-  const char file_sep = os::file_separator()[0];\n-  \/\/ 10 represents the length of \"modules\" + 2 file separators + \\0\n-  size_t len = strlen(home) + strlen(module_name) + 10;\n-  char *path = NEW_RESOURCE_ARRAY(char, len);\n-  jio_snprintf(path, len, \"%s%cmodules%c%s\", home, file_sep, file_sep, module_name);\n+  const char *path = get_exploded_module_path(module_name, false);\n@@ -1422,6 +1429,0 @@\n-    const char *home = Arguments::get_java_home();\n-    const char file_sep = os::file_separator()[0];\n-    \/\/ 10 represents the length of \"modules\" + 2 file separators + \\0\n-    size_t len = strlen(home) + strlen(module_name) + 10;\n-    char path[len];\n-    jio_snprintf(path, len, \"%s%cmodules%c%s\", home, file_sep, file_sep, module_name);\n@@ -1429,1 +1430,4 @@\n-    return os::stat(path, &st) == 0;\n+    const char *path = get_exploded_module_path(module_name, true);\n+    bool res = os::stat(path, &st) == 0;\n+    FREE_C_HEAP_ARRAY(char, path);\n+    return res;\n","filename":"src\/hotspot\/share\/classfile\/classLoader.cpp","additions":17,"deletions":13,"binary":false,"changes":30,"status":"modified"}]}