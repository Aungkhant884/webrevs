{"files":[{"patch":"@@ -1425,2 +1425,1 @@\n-\/\/ Determines if the `module_name` module is resolvable.\n-bool ClassLoader::is_module_resolvable(const char* module_name) {\n+bool ClassLoader::is_module_observable(const char* module_name) {\n","filename":"src\/hotspot\/share\/classfile\/classLoader.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -377,2 +377,3 @@\n-  \/\/ Determines if the `module_name` module is resolvable.\n-  static bool is_module_resolvable(const char* module_name);\n+  \/\/ Determines if the named module is present in the\n+  \/\/ modules jimage file or in the exploded modules directory.\n+  static bool is_module_observable(const char* module_name);\n","filename":"src\/hotspot\/share\/classfile\/classLoader.hpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -1957,1 +1957,1 @@\n-    if (ClassLoader::is_module_resolvable(\"jdk.internal.vm.ci\")) {\n+    if (ClassLoader::is_module_observable(\"jdk.internal.vm.ci\")) {\n","filename":"src\/hotspot\/share\/runtime\/arguments.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -26,1 +26,0 @@\n- * @requires vm.jvmci\n@@ -29,1 +28,0 @@\n- * @library \/compiler\/jvmci\/jdk.vm.ci.hotspot.test\/src\n@@ -33,1 +31,0 @@\n-\n","filename":"test\/jdk\/jdk\/internal\/vm\/TestTranslatedException.java","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"}]}