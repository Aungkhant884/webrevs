{"files":[{"patch":"@@ -1418,2 +1418,2 @@\n-\/\/ Returns true if jdk.internal.vm.ci is present on the file system.\n-bool ClassLoader::has_jvmci_module() {\n+\/\/ Determines if the `module_name` module is resolvable.\n+bool ClassLoader::is_module_resolvable(const char* module_name) {\n@@ -1424,1 +1424,2 @@\n-    size_t len = strlen(home) + strlen(\"jdk.internal.vm.ci\") + 2;\n+    \/\/ 10 represents the length of \"modules\" + 2 file separators + \\0\n+    size_t len = strlen(home) + strlen(module_name) + 10;\n@@ -1426,1 +1427,1 @@\n-    jio_snprintf(path, len, \"%s%cmodules%cjdk.internal.vm.ci\", home, file_sep, file_sep);\n+    jio_snprintf(path, len, \"%s%cmodules%c%s\", home, file_sep, file_sep, module_name);\n","filename":"src\/hotspot\/share\/classfile\/classLoader.cpp","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -376,1 +376,3 @@\n-  static bool has_jvmci_module();\n+\n+  \/\/ Determines if the `module_name` module is resolvable.\n+  static bool is_module_resolvable(const char* module_name);\n","filename":"src\/hotspot\/share\/classfile\/classLoader.hpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1957,1 +1957,1 @@\n-    if (ClassLoader::has_jvmci_module()) {\n+    if (ClassLoader::is_module_resolvable(\"jdk.internal.vm.ci\")) {\n","filename":"src\/hotspot\/share\/runtime\/arguments.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}