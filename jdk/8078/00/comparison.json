{"files":[{"patch":"@@ -575,1 +575,1 @@\n-  const char* more_valid_strings[] = {\n+  const char* more_test_strings[] = {\n@@ -585,0 +585,1 @@\n+\n@@ -592,2 +593,2 @@\n-  for (uint i = 0; i < ARRAY_SIZE(more_valid_strings); i++) {\n-    const char* str = more_valid_strings[i];\n+  for (uint i = 0; i < ARRAY_SIZE(more_test_strings); i++) {\n+    const char* str = more_test_strings[i];\n@@ -596,0 +597,1 @@\n+    errno = 0;\n@@ -597,4 +599,3 @@\n-    ASSERT_TRUE(errno == 0);\n-\n-    ASSERT_TRUE(ArgumentsTest::parse_argument(flag->name(), str))\n-        << \"Valid string '\" <<\n+    if (errno == 0) {\n+      ASSERT_TRUE(ArgumentsTest::parse_argument(flag->name(), str))\n+        << \"Test string '\" <<\n@@ -602,2 +603,2 @@\n-    double d = flag->get_double();\n-    ASSERT_TRUE(d == expected)\n+      double d = flag->get_double();\n+      ASSERT_TRUE(d == expected)\n@@ -605,0 +606,7 @@\n+    } else {\n+      \/\/ Some of the strings like \"1.e-2\" are not valid in certain locales.\n+      \/\/ The decimal-point character is also locale dependent.\n+      ASSERT_FALSE(ArgumentsTest::parse_argument(flag->name(), str))\n+        << \"Invalid string '\" << str << \"' parsed without error.\";\n+\n+    }\n","filename":"test\/hotspot\/gtest\/runtime\/test_arguments.cpp","additions":17,"deletions":9,"binary":false,"changes":26,"status":"modified"}]}