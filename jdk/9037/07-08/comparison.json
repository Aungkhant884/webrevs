{"files":[{"patch":"@@ -1268,1 +1268,1 @@\n-  const TypeVect* vt = this->in(2)->bottom_type()->is_vect();\n+  const TypeVect* vt = vect_type();\n@@ -1691,1 +1691,1 @@\n-  const TypeVect* vt = this->in(1)->bottom_type()->is_vect();\n+  const TypeVect* vt = vect_type();\n","filename":"src\/hotspot\/share\/opto\/vectornode.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -185,0 +185,1 @@\n+  const TypeVect* _vect_type;\n@@ -187,1 +188,2 @@\n-               _bottom_type(Type::get_const_basic_type(in1->bottom_type()->basic_type())) {}\n+               _bottom_type(Type::get_const_basic_type(in1->bottom_type()->basic_type())),\n+               _vect_type(in2->bottom_type()->is_vect()) {}\n@@ -198,0 +200,4 @@\n+  virtual const TypeVect* vect_type() const {\n+    return _vect_type;\n+  }\n+\n@@ -1016,0 +1022,3 @@\n+ private:\n+  int _mopc;\n+  const TypeVect* _vect_type;\n@@ -1018,2 +1027,2 @@\n-    TypeNode(ty, 2), _mopc(mopc) {\n-    assert(Matcher::has_predicated_vectors() || mask->bottom_type()->is_vect()->element_basic_type() == T_BOOLEAN, \"\");\n+    TypeNode(ty, 2), _mopc(mopc), _vect_type(mask->bottom_type()->is_vect()) {\n+    assert(Matcher::has_predicated_vectors() || _vect_type->element_basic_type() == T_BOOLEAN, \"\");\n@@ -1023,0 +1032,1 @@\n+  virtual const TypeVect* vect_type() { return _vect_type; }\n@@ -1029,3 +1039,0 @@\n-\n-  private:\n-    int _mopc;\n","filename":"src\/hotspot\/share\/opto\/vectornode.hpp","additions":13,"deletions":6,"binary":false,"changes":19,"status":"modified"}]}