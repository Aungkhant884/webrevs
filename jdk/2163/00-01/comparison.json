{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2009, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2009, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -228,6 +228,7 @@\n-                    String s = JLA.newStringUTF8NoRepl(a, end - len, end);\n-                    h = s.hashCode();\n-                    if (s.charAt(len - 1) != '\/') {\n-                        h = 31 * h + '\/';\n-                    }\n-                    return h;\n+                    \/\/ We avoid using decoder() here since the UTF8ZipCoder is\n+                    \/\/ shared and that decoder is not thread safe.\n+                    \/\/ We also avoid the JLA.newStringUTF8NoRepl variant at\n+                    \/\/ this point to avoid throwing exceptions eagerly when\n+                    \/\/ opening ZipFiles (exceptions are expected when accessing\n+                    \/\/ malformed entries.)\n+                    return normalizedHash(new String(a, end - len, len, UTF_8.INSTANCE));\n","filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipCoder.java","additions":8,"deletions":7,"binary":false,"changes":15,"status":"modified"}]}