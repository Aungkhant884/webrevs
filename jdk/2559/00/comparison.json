{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -86,0 +86,1 @@\n+import jdk.xml.internal.SecuritySupport;\n@@ -97,1 +98,1 @@\n- * @LastModified: Aug 2019\n+ * @LastModified: Feb 2021\n@@ -281,0 +282,4 @@\n+        String v = SecuritySupport.getJAXPSystemProperty(OutputPropertiesFactory.SP_IS_STANDALONE);\n+        if (v != null) {\n+            _properties.setProperty(OutputPropertiesFactory.JDK_IS_STANDALONE, v);\n+        }\n@@ -1035,1 +1040,1 @@\n-            else if (name.equals(OutputPropertiesFactory.ORACLE_IS_STANDALONE)) {\n+            else if (isStandaloneProperty(name)) {\n@@ -1099,1 +1104,1 @@\n-            else if (name.equals(OutputPropertiesFactory.ORACLE_IS_STANDALONE)) {\n+            else if (isStandaloneProperty(name)) {\n@@ -1217,1 +1222,1 @@\n-                name.equals(OutputPropertiesFactory.ORACLE_IS_STANDALONE) ||\n+                isStandaloneProperty(name) ||\n@@ -1221,0 +1226,10 @@\n+    \/**\n+     * Checks whether the property requested is the isStandalone property. Both\n+     * the new and legacy property names are supported.\n+     * @param name the property name\n+     * @return true if the property is \"isStandalone\", false otherwise\n+     *\/\n+    private boolean isStandaloneProperty(String name) {\n+        return (name.equals(OutputPropertiesFactory.JDK_IS_STANDALONE) ||\n+                    name.equals(OutputPropertiesFactory.ORACLE_IS_STANDALONE));\n+    }\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xalan\/internal\/xsltc\/trax\/TransformerImpl.java","additions":20,"deletions":5,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -23,0 +23,1 @@\n+import com.sun.org.apache.xerces.internal.impl.Constants;\n@@ -73,1 +74,1 @@\n- * @LastModified: Mar 2019\n+ * @LastModified: Feb 2021\n@@ -189,0 +190,7 @@\n+    \/\/ standardized property, refer to the definition in java.xml module-info\n+    public static final String JDK_IS_STANDALONE = Constants.ORACLE_JAXP_PROPERTY_PREFIX +\n+            \"xsltcIsStandalone\";\n+\n+    \/\/ Corresponding System property\n+    public static final String SP_IS_STANDALONE = \"jdk.xml.xsltcIsStandalone\";\n+\n@@ -215,1 +223,2 @@\n-        \"{http:\/\/xml.apache.org\/xalan}entities\"\n+        \"{http:\/\/xml.apache.org\/xalan}entities\",\n+        JDK_IS_STANDALONE\n@@ -228,1 +237,2 @@\n-        \"com\/sun\/org\/apache\/xml\/internal\/serializer\/XMLEntities\"\n+        \"com\/sun\/org\/apache\/xml\/internal\/serializer\/XMLEntities\",\n+        \"no\"\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xml\/internal\/serializer\/OutputPropertiesFactory.java","additions":14,"deletions":4,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -497,1 +497,1 @@\n-                } else if ((DOMConstants.S_JDK_PROPERTIES_NS + DOMConstants.S_IS_STANDALONE)\n+                } else if ((DOMConstants.NS_IS_STANDALONE)\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xml\/internal\/serializer\/ToStream.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -52,1 +52,1 @@\n- * @LastModified: Aug 2019\n+ * @LastModified: Feb 2021\n@@ -658,0 +658,5 @@\n+    @Override\n+    public void setIsStandalone(boolean isStandalone) {\n+       super.setIsStandalone(isStandalone);\n+       m_handler.setIsStandalone(isStandalone);\n+    }\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xml\/internal\/serializer\/ToUnknownStream.java","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -361,4 +361,1 @@\n-        String p = SecuritySupport.getSystemProperty(DOMConstants.SP_IS_STANDALONE);\n-        if (p == null || p.isEmpty()) {\n-            p = SecuritySupport.readJAXPProperty(DOMConstants.SP_IS_STANDALONE);\n-        }\n+        String p = SecuritySupport.getJAXPSystemProperty(DOMConstants.SP_IS_STANDALONE);\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xml\/internal\/serializer\/dom3\/LSSerializerImpl.java","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -177,0 +177,7 @@\n+ * <tr>\n+ * <th scope=\"row\" style=\"font-weight:normal\" id=\"XSLTCSerializer\">XSLTC Serializer<\/th>\n+ * <td>XSLTC Serializer<\/td>\n+ * <td>\n+ * {@code Transformer transformer = TransformerFactory.newInstance().newTransformer();}<br>\n+ * {@code transformer.setOutputProperty(name, value);}\n+ * <\/td>\n@@ -233,0 +240,22 @@\n+ * <tr>\n+ * <th scope=\"row\" style=\"font-weight:normal\" id=\"XSLTCISSTANDALONE\">xsltcIsStandalone<\/th>\n+ * <td>indicates that the <a href=\"#XSLTCSerializer\">XSLTC serializer<\/a> should\n+ * treat the output as a standalone document. The property can be used to ensure\n+ * a newline is written after the XML declaration. Unlike the property\n+ * {@link javax.xml.transform.OutputKeys#OMIT_XML_DECLARATION OMIT_XML_DECLARATION},\n+ * this property does not have an effect on whether an XML declaration should be\n+ * written out.\n+ * <p>\n+ * This property behaves similar to that for <a href=\"#DOMLS\">DOMLS<\/a> above,\n+ * except that it is for the <a href=\"#XSLTCSerializer\">XSLTC Serializer<\/a>\n+ * and its value is a String.\n+ * <\/td>\n+ * <td>yes<\/td>\n+ * <td>yes<\/td>\n+ * <td>String<\/td>\n+ * <th id=\"Value\" scope=\"row\" style=\"font-weight:normal\">yes\/no<\/th>\n+ * <th id=\"Default\" scope=\"row\" style=\"font-weight:normal\">no<\/th>\n+ * <td>No<\/td>\n+ * <td><a href=\"#XSLTCSerializer\">XSLTC Serializer<\/a><\/td>\n+ * <td>17<\/td>\n+ * <\/tr>\n@@ -244,2 +273,6 @@\n- * The value type for the corresponding System Property is String. For boolean\n- * type, the system property is true only if it is \"true\" and false otherwise.\n+ * The value of the corresponding System Property is the String representation of\n+ * the property value. If the type is boolean, the system property is true only\n+ * if it is \"true\"; If the type is String, the system property is true only if\n+ * it is exactly the same string representing the positive value (e.g. \"yes\" for\n+ * {@code xsltcIsStandalone}); The system property is false otherwise.\n+ *\n","filename":"src\/java.xml\/share\/classes\/module-info.java","additions":35,"deletions":2,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -23,1 +23,0 @@\n-\n@@ -26,0 +25,1 @@\n+import java.io.ByteArrayInputStream;\n@@ -69,1 +69,1 @@\n- * @bug 6439439 8087303 8174025 8223291 8249867 8261209\n+ * @bug 6439439 8087303 8174025 8223291 8249867 8261209 8260858\n@@ -77,0 +77,1 @@\n+\n@@ -78,2 +79,2 @@\n-    private static final String JDK_IS_STANDALONE =\n-            \"http:\/\/www.oracle.com\/xml\/jaxp\/properties\/isStandalone\";\n+    private static final String JDK_IS_STANDALONE\n+            = \"http:\/\/www.oracle.com\/xml\/jaxp\/properties\/isStandalone\";\n@@ -81,0 +82,4 @@\n+    private static final String XSLTC_IS_STANDALONE\n+            = \"http:\/\/www.oracle.com\/xml\/jaxp\/properties\/xsltcIsStandalone\";\n+    private static final String SP_XSLTC_IS_STANDALONE = \"jdk.xml.xsltcIsStandalone\";\n+\n@@ -90,0 +95,13 @@\n+\n+    private static final String XSL = \"<?xml version=\\\"1.0\\\"?>\\n\"\n+            + \"<xsl:stylesheet version=\\\"1.0\\\" xmlns:xsl=\\\"http:\/\/www.w3.org\/1999\/XSL\/Transform\\\">\\n\"\n+            + \"\\n\"\n+            + \"<!--Identity template, copies all content into the output -->\\n\"\n+            + \"    <xsl:template match=\\\"@*|node()\\\">\\n\"\n+            + \"        <xsl:copy>\\n\"\n+            + \"            <xsl:apply-templates select=\\\"@*|node()\\\"\/>\\n\"\n+            + \"        <\/xsl:copy>\\n\"\n+            + \"    <\/xsl:template>\\n\"\n+            + \"\\n\"\n+            + \"<\/xsl:stylesheet>\";\n+\n@@ -96,7 +114,7 @@\n-        return new Object[][] {\n-                { \"xmltest1.xml\", \"xmltest1.out\" },\n-                { \"xmltest2.xml\", \"xmltest2.out\" },\n-                { \"xmltest3.xml\", \"xmltest3.out\" },\n-                { \"xmltest4.xml\", \"xmltest4.out\" },\n-                { \"xmltest6.xml\", \"xmltest6.out\" },\n-                { \"xmltest8.xml\", \"xmltest8.out\" } };\n+        return new Object[][]{\n+            {\"xmltest1.xml\", \"xmltest1.out\"},\n+            {\"xmltest2.xml\", \"xmltest2.out\"},\n+            {\"xmltest3.xml\", \"xmltest3.out\"},\n+            {\"xmltest4.xml\", \"xmltest4.out\"},\n+            {\"xmltest6.xml\", \"xmltest6.out\"},\n+            {\"xmltest8.xml\", \"xmltest8.out\"}};\n@@ -114,1 +132,2 @@\n-            {true, false, true, true, XML_LB},       \/\/set System property = true\n+            {true, false, true, true, XML_LB}, \/\/set System property = true\n+\n@@ -116,1 +135,1 @@\n-            {true, true, false, true, XML_LB},       \/\/set property = true\n+            {true, true, false, true, XML_LB}, \/\/set property = true\n@@ -122,1 +141,14 @@\n-            {false, true, false, true, XML_PPFALSE_LB}, \/\/set property = true\n+            {false, true, false, true, XML_PPFALSE_LB} \/\/set property = true\n+        };\n+    }\n+\n+    \/*\n+     * Bug: 8249867 8260858\n+     * DataProvider: for testing the xsltcIsStandalone property\n+     * Data columns: xsl, pretty-print, property, system property, value, expected result\n+     *\/\n+    @DataProvider(name = \"dataWithTemplate\")\n+    Object[][] getDataWTemplate() throws Exception {\n+        return new Object[][]{\n+            \/\/ pretty-print = true\n+            {XSL, true, false, true, true, XML_LB}, \/\/set System property = true\n@@ -124,0 +156,8 @@\n+            {XSL, true, false, true, false, XML_PPTRUE_NOLB}, \/\/set System property = false\n+            {XSL, true, true, false, true, XML_LB}, \/\/set property = true\n+            {XSL, true, true, false, false, XML_PPTRUE_NOLB}, \/\/set property = false\n+            {XSL, true, false, false, false, XML_PPTRUE_NOLB},\/\/default\n+\n+            \/\/ pretty-print = false\n+            {XSL, false, false, true, true, XML_PPFALSE_LB}, \/\/System property = true\n+            {XSL, false, true, false, true, XML_PPFALSE_LB} \/\/set property = true\n@@ -139,1 +179,1 @@\n-            {\"\", false},\n+            {\"\", false}\n@@ -143,0 +183,26 @@\n+    \/*\n+     * Bug: 8260858\n+     * Verifies the use of the new property \"xsltcIsStandalone\" and the\n+     * corresponding System property \"jdk.xml.xsltcIsStandalone\".\n+     *\/\n+    @Test(dataProvider = \"setting\")\n+    public void testIsStandalone_XSLTC(boolean pretty, boolean p, boolean sp,\n+            boolean val, String expected)\n+            throws Exception {\n+        String result = transform(null, expected, false, pretty, p, sp, val);\n+        Assert.assertEquals(result, expected);\n+    }\n+\n+    \/*\n+     * Bug: 8260858\n+     * Samiliar to testIsStandalone_XSLTC, except that the transformer is created\n+     * from a template.\n+     *\/\n+    @Test(dataProvider = \"dataWithTemplate\")\n+    public void testIsStandalone_Template(String xsl, boolean pretty, boolean p,\n+            boolean sp, boolean val, String expected)\n+            throws Exception {\n+        String result = transform(xsl, expected, false, pretty, p, sp, val);\n+        Assert.assertEquals(result, expected);\n+    }\n+\n@@ -160,1 +226,1 @@\n-        DOMImplementationLS impl = (DOMImplementationLS)document.getImplementation();\n+        DOMImplementationLS impl = (DOMImplementationLS) document.getImplementation();\n@@ -268,3 +334,3 @@\n-        return new Object[][] {\n-                { \"xmltest5.xml\", \"xmltest5ls.out\" },\n-                { \"xmltest7.xml\", \"xmltest7ls.out\" } };\n+        return new Object[][]{\n+            {\"xmltest5.xml\", \"xmltest5ls.out\"},\n+            {\"xmltest7.xml\", \"xmltest7ls.out\"}};\n@@ -297,3 +363,3 @@\n-        return new Object[][] {\n-                { \"xmltest5.xml\", \"xmltest5xslt.out\" },\n-                { \"xmltest7.xml\", \"xmltest7xslt.out\" } };\n+        return new Object[][]{\n+            {\"xmltest5.xml\", \"xmltest5xslt.out\"},\n+            {\"xmltest7.xml\", \"xmltest7xslt.out\"}};\n@@ -327,7 +393,7 @@\n-        return new Object[][] {\n-            { \"htmltest1.xml\", \"htmltest1.out\" },\n-            { \"htmltest2.xml\", \"htmltest2.out\" },\n-            { \"htmltest3.xml\", \"htmltest3.out\" },\n-            { \"htmltest4.xml\", \"htmltest4.out\" },\n-            { \"htmltest5.xml\", \"htmltest5.out\" },\n-            { \"htmltest6.xml\", \"htmltest6.out\" },\n+        return new Object[][]{\n+            {\"htmltest1.xml\", \"htmltest1.out\"},\n+            {\"htmltest2.xml\", \"htmltest2.out\"},\n+            {\"htmltest3.xml\", \"htmltest3.out\"},\n+            {\"htmltest4.xml\", \"htmltest4.out\"},\n+            {\"htmltest5.xml\", \"htmltest5.out\"},\n+            {\"htmltest6.xml\", \"htmltest6.out\"},\n@@ -335,1 +401,1 @@\n-            { \"htmltest7.xml\", \"htmltest7.out\" } };\n+            {\"htmltest7.xml\", \"htmltest7.out\"}};\n@@ -369,3 +435,3 @@\n-        final String xsl =\"generate-catalog.xsl\";\n-        final String xml =\"simple-entity-resolver-config.xml\";\n-        final String expectedOutput =\"simple-entity-resolver-config-transformed.xml\";\n+        final String xsl = \"generate-catalog.xsl\";\n+        final String xml = \"simple-entity-resolver-config.xml\";\n+        final String expectedOutput = \"simple-entity-resolver-config-transformed.xml\";\n@@ -391,2 +457,2 @@\n-        \/**JDK-8035467\n-         * no newline in default output\n+        \/**\n+         * JDK-8035467 no newline in default output\n@@ -394,2 +460,2 @@\n-        final String XML_DOCUMENT_DEFAULT_PRINT =\n-                \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-16\\\"?>\"\n+        final String XML_DOCUMENT_DEFAULT_PRINT\n+                = \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-16\\\"?>\"\n@@ -401,9 +467,9 @@\n-        final String XML_DOCUMENT_PRETTY_PRINT =\n-                \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-16\\\"?><hello>\\n\" +\n-                \"    before child element\\n\" +\n-                \"    <child>\\n\" +\n-                \"        <children\/>\\n\" +\n-                \"        <children\/>\\n\" +\n-                \"    <\/child>\\n\" +\n-                \"    after child element\\n\" +\n-                \"<\/hello>\\n\";\n+        final String XML_DOCUMENT_PRETTY_PRINT\n+                = \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-16\\\"?><hello>\\n\"\n+                + \"    before child element\\n\"\n+                + \"    <child>\\n\"\n+                + \"        <children\/>\\n\"\n+                + \"        <children\/>\\n\"\n+                + \"    <\/child>\\n\"\n+                + \"    after child element\\n\"\n+                + \"<\/hello>\\n\";\n@@ -446,6 +512,6 @@\n-        Boolean defaultFormatPrettyPrint =\n-                (Boolean) domConfiguration.getParameter(DOM_FORMAT_PRETTY_PRINT);\n-        Boolean canSetFormatPrettyPrintFalse =\n-                (Boolean) domConfiguration.canSetParameter(DOM_FORMAT_PRETTY_PRINT, Boolean.FALSE);\n-        Boolean canSetFormatPrettyPrintTrue =\n-                (Boolean) domConfiguration.canSetParameter(DOM_FORMAT_PRETTY_PRINT, Boolean.TRUE);\n+        Boolean defaultFormatPrettyPrint\n+                = (Boolean) domConfiguration.getParameter(DOM_FORMAT_PRETTY_PRINT);\n+        Boolean canSetFormatPrettyPrintFalse\n+                = (Boolean) domConfiguration.canSetParameter(DOM_FORMAT_PRETTY_PRINT, Boolean.FALSE);\n+        Boolean canSetFormatPrettyPrintTrue\n+                = (Boolean) domConfiguration.canSetParameter(DOM_FORMAT_PRETTY_PRINT, Boolean.TRUE);\n@@ -504,2 +570,2 @@\n-        DOMImplementationLS domImplementation =\n-                (DOMImplementationLS) registry.getDOMImplementation(\"LS\");\n+        DOMImplementationLS domImplementation\n+                = (DOMImplementationLS) registry.getDOMImplementation(\"LS\");\n@@ -523,0 +589,8 @@\n+    private String transform(String xsl, String xml, boolean omit, boolean pretty, boolean p, boolean sp, boolean standalone)\n+            throws Exception {\n+        Transformer transformer = getTransformer(xsl, false, omit, pretty, p, sp, standalone);\n+        StringWriter writer = new StringWriter();\n+        transformer.transform(new StreamSource(new StringReader(xml)), new StreamResult(writer));\n+        return writer.toString();\n+    }\n+\n@@ -592,1 +666,21 @@\n-        Transformer transformer = TransformerFactory.newInstance().newTransformer();\n+        return getTransformer(null, html, true, pretty, false, false, false);\n+    }\n+\n+    private Transformer getTransformer(String xsl) throws Exception {\n+        TransformerFactory tf = TransformerFactory.newInstance();\n+        if (xsl == null) {\n+            return tf.newTransformer();\n+        }\n+\n+        return tf.newTemplates(\n+                new StreamSource(new ByteArrayInputStream(xsl.getBytes())))\n+                .newTransformer();\n+    }\n+\n+    private Transformer getTransformer(String xsl, boolean html, boolean omit,\n+            boolean pretty, boolean p, boolean sp, boolean standalone)\n+            throws Exception {\n+        if (sp) {\n+            setSystemProperty(SP_XSLTC_IS_STANDALONE, standalone ? \"yes\" : \"no\");\n+        }\n+        Transformer transformer = getTransformer(xsl);\n@@ -594,2 +688,4 @@\n-        transformer.setOutputProperty(OutputKeys.OMIT_XML_DECLARATION, \"yes\");\n-        if (html)\n+        if (omit) {\n+            transformer.setOutputProperty(OutputKeys.OMIT_XML_DECLARATION, \"yes\");\n+        }\n+        if (html) {\n@@ -597,0 +693,1 @@\n+        }\n@@ -598,0 +695,6 @@\n+        if (p && !sp) {\n+            transformer.setOutputProperty(XSLTC_IS_STANDALONE, standalone ? \"yes\" : \"no\");\n+        }\n+        if (sp) {\n+            clearSystemProperty(SP_XSLTC_IS_STANDALONE);\n+        }\n@@ -619,1 +722,1 @@\n-        return (DOMImplementationLS)document.getImplementation();\n+        return (DOMImplementationLS) document.getImplementation();\n","filename":"test\/jaxp\/javax\/xml\/jaxp\/unittest\/common\/prettyprint\/PrettyPrintTest.java","additions":161,"deletions":58,"binary":false,"changes":219,"status":"modified"}]}