{"files":[{"patch":"@@ -511,1 +511,1 @@\n-    survivor_regions_evac_time += predict_region_copy_time_ms(*it);\n+    survivor_regions_evac_time += predict_region_copy_time_ms(*it, _g1h->collector_state()->in_young_only_phase());\n@@ -1037,1 +1037,1 @@\n-double G1Policy::predict_region_copy_time_ms(HeapRegion* hr) const {\n+double G1Policy::predict_region_copy_time_ms(HeapRegion* hr, bool for_young_only_phase) const {\n@@ -1039,1 +1039,1 @@\n-  return _analytics->predict_object_copy_time_ms(bytes_to_copy, collector_state()->in_young_only_phase());\n+  return _analytics->predict_object_copy_time_ms(bytes_to_copy, for_young_only_phase);\n@@ -1047,2 +1047,2 @@\n-    _analytics->predict_card_merge_time_ms(rs_length, collector_state()->in_young_only_phase()) +\n-    _analytics->predict_card_scan_time_ms(scan_card_num, collector_state()->in_young_only_phase());\n+    _analytics->predict_card_merge_time_ms(rs_length, for_young_only_phase) +\n+    _analytics->predict_card_scan_time_ms(scan_card_num, for_young_only_phase);\n@@ -1066,1 +1066,3 @@\n-  return predict_region_non_copy_time_ms(hr, for_young_only_phase) + predict_region_copy_time_ms(hr);\n+  return\n+    predict_region_non_copy_time_ms(hr, for_young_only_phase) +\n+    predict_region_copy_time_ms(hr, for_young_only_phase);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Policy.cpp","additions":8,"deletions":6,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -146,1 +146,1 @@\n-  double predict_region_copy_time_ms(HeapRegion* hr) const;\n+  double predict_region_copy_time_ms(HeapRegion* hr, bool for_young_only_phase) const;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Policy.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}