{"files":[{"patch":"@@ -138,1 +138,1 @@\n-  \/\/ on both 32 and 64 bit platforms. Required for atomic long operations on 32 bits.\n+  \/\/ on both 32 and 64 bit platforms. Required for atomic jlong operations on 32 bits.\n@@ -140,1 +140,1 @@\n-    assert(is_power_of_2(ARENA_AMALLOC_ALIGNMENT) , \"should be a power of 2\");\n+    STATIC_ASSERT(is_power_of_2(ARENA_AMALLOC_ALIGNMENT));\n@@ -143,1 +143,1 @@\n-    if (!check_for_overflow(x, \"Arena::Amalloc\", alloc_failmode))\n+    if (!check_for_overflow(x, \"Arena::Amalloc\", alloc_failmode)) {\n@@ -145,1 +145,1 @@\n-    if (_hwm + x > _max) {\n+    } else if (_hwm + x > _max) {\n@@ -157,1 +157,1 @@\n-    assert((x & (sizeof(char*)-1)) == 0, \"misaligned size\");\n+    assert(is_aligned(x, BytesPerWord), \"misaligned size\");\n@@ -159,1 +159,1 @@\n-    if (!check_for_overflow(x, \"Arena::Amalloc_4\", alloc_failmode))\n+    if (!check_for_overflow(x, \"Arena::Amalloc_4\", alloc_failmode)) {\n@@ -161,1 +161,1 @@\n-    if (_hwm + x > _max) {\n+    } else if (_hwm + x > _max) {\n","filename":"src\/hotspot\/share\/memory\/arena.hpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"}]}