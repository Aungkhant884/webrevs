{"files":[{"patch":"@@ -4427,1 +4427,1 @@\n-instruct reductionI(rRegI dst, rRegI src1, vec src2, vec vtmp1, vec vtmp2) %{\n+instruct reductionI(rRegI dst, rRegI src1, legVec src2, legVec vtmp1, legVec vtmp2) %{\n@@ -4429,1 +4429,1 @@\n-            vector_length(n->in(2)) < 16); \/\/ src2\n+            vector_length(n->in(2)) <= 16); \/\/ src2\n@@ -4447,20 +4447,0 @@\n-instruct reduction16I(rRegI dst, rRegI src1, legVec src2, legVec vtmp1, legVec vtmp2) %{\n-  predicate(vector_element_basic_type(n->in(2)) == T_INT &&\n-            vector_length(n->in(2)) == 16); \/\/ src2\n-  match(Set dst (AddReductionVI src1 src2));\n-  match(Set dst (MulReductionVI src1 src2));\n-  match(Set dst (AndReductionV  src1 src2));\n-  match(Set dst ( OrReductionV  src1 src2));\n-  match(Set dst (XorReductionV  src1 src2));\n-  match(Set dst (MinReductionV  src1 src2));\n-  match(Set dst (MaxReductionV  src1 src2));\n-  effect(TEMP vtmp1, TEMP vtmp2);\n-  format %{ \"vector_reduction_int $dst,$src1,$src2 ; using $vtmp1, $vtmp2 as TEMP\" %}\n-  ins_encode %{\n-    int opcode = this->ideal_Opcode();\n-    int vlen = vector_length(this, $src2);\n-    __ reduceI(opcode, vlen, $dst$$Register, $src1$$Register, $src2$$XMMRegister, $vtmp1$$XMMRegister, $vtmp2$$XMMRegister);\n-%}\n-  ins_pipe( pipe_slow );\n-%}\n-\n","filename":"src\/hotspot\/cpu\/x86\/x86.ad","additions":2,"deletions":22,"binary":false,"changes":24,"status":"modified"}]}