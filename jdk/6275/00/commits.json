[{"commit":{"message":"Fixed name typo"},"files":[{"filename":"test\/micro\/org\/openjdk\/bench\/java\/util\/stream\/EmptyStreamsMixedLength.java"}],"sha":"6e60ac6ce07cf558e674edf6370ef9d6173ee324"},{"commit":{"message":"Update benchmark to have a variable mix of empty streams"},"files":[{"filename":"test\/micro\/org\/openjdk\/bench\/java\/util\/stream\/EmptyStreams.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/util\/stream\/EmptyStreamsMixedLength.java"}],"sha":"788578d65f5a276ebfd47bb0d64e2612335a1bf6"},{"commit":{"message":"New microbenchmark to test mixed length streams within a single run"},"files":[{"filename":"test\/micro\/org\/openjdk\/bench\/java\/util\/stream\/EmptyStreams.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/util\/stream\/EmptyStreamsMixedLength.java"}],"sha":"b56c4ffff9790986a248f416d2490716ac9cbd9a"},{"commit":{"message":"Updated empty streams to contain Spliterator state and to prevent stream reuse"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/util\/Arrays.java"},{"filename":"src\/java.base\/share\/classes\/java\/util\/Collection.java"},{"filename":"src\/java.base\/share\/classes\/java\/util\/stream\/DoubleStream.java"},{"filename":"src\/java.base\/share\/classes\/java\/util\/stream\/IntStream.java"},{"filename":"src\/java.base\/share\/classes\/java\/util\/stream\/LongStream.java"},{"filename":"src\/java.base\/share\/classes\/java\/util\/stream\/Stream.java"},{"filename":"src\/java.base\/share\/classes\/java\/util\/stream\/StreamSupport.java"},{"filename":"src\/java.base\/share\/classes\/java\/util\/stream\/Streams.java"},{"filename":"test\/jdk\/java\/util\/stream\/test\/org\/openjdk\/tests\/java\/util\/stream\/EmptyBaseStreamTest.java"},{"filename":"test\/jdk\/java\/util\/stream\/test\/org\/openjdk\/tests\/java\/util\/stream\/EmptyDoubleStreamTest.java"},{"filename":"test\/jdk\/java\/util\/stream\/test\/org\/openjdk\/tests\/java\/util\/stream\/EmptyIntStreamTest.java"},{"filename":"test\/jdk\/java\/util\/stream\/test\/org\/openjdk\/tests\/java\/util\/stream\/EmptyLongStreamTest.java"},{"filename":"test\/jdk\/java\/util\/stream\/test\/org\/openjdk\/tests\/java\/util\/stream\/EmptyStreamTest.java"}],"sha":"079e4884e5d01f1518aac749492736066a5c6c0a"},{"commit":{"message":"Grouped test results through the use of better field naming"},"files":[{"filename":"test\/micro\/org\/openjdk\/bench\/java\/util\/stream\/EmptyStreams.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/util\/stream\/EmptyStreamsMixedLength.java"}],"sha":"2b08eba17f9768efb56320128e05dee1ea531432"},{"commit":{"message":"Removed old JMH tests that were replaced with more thorough test"},"files":[{"filename":"test\/micro\/org\/openjdk\/bench\/java\/util\/stream\/EmptyStreams.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/util\/stream\/EmptyStreamsMixedLength.java"}],"sha":"6a527f9d5ece53579c52c6d625e15784815a84dd"},{"commit":{"message":"Increased warmup time to get more consistent results"},"files":[{"filename":"test\/micro\/org\/openjdk\/bench\/java\/util\/stream\/EmptyStreams.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/util\/stream\/EmptyStreamsMixedLength.java"}],"sha":"00a19d52533bec55e9a5583285a5b4b89f112294"},{"commit":{"message":"Additional benchmarks to check different types of collections, lengths and workloads"},"files":[{"filename":"test\/micro\/org\/openjdk\/bench\/java\/util\/stream\/EmptyStreams.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/util\/stream\/EmptyStreamsMixedLength.java"}],"sha":"148ef26d9c77a9eff0ebf79fd3702c20feeff16b"},{"commit":{"message":"Added test classes and minor improvements"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/util\/Arrays.java"},{"filename":"src\/java.base\/share\/classes\/java\/util\/stream\/Streams.java"},{"filename":"test\/jdk\/java\/util\/stream\/test\/org\/openjdk\/tests\/java\/util\/stream\/EmptyBaseStreamTest.java"},{"filename":"test\/jdk\/java\/util\/stream\/test\/org\/openjdk\/tests\/java\/util\/stream\/EmptyDoubleStreamTest.java"},{"filename":"test\/jdk\/java\/util\/stream\/test\/org\/openjdk\/tests\/java\/util\/stream\/EmptyIntStreamTest.java"},{"filename":"test\/jdk\/java\/util\/stream\/test\/org\/openjdk\/tests\/java\/util\/stream\/EmptyLongStreamTest.java"},{"filename":"test\/jdk\/java\/util\/stream\/test\/org\/openjdk\/tests\/java\/util\/stream\/EmptyStreamTest.java"}],"sha":"ffec9b953e149bee820285636f86f5bf5861cc71"},{"commit":{"message":"Faster empty streams to reduce object allocation rates"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/util\/Arrays.java"},{"filename":"src\/java.base\/share\/classes\/java\/util\/Collection.java"},{"filename":"src\/java.base\/share\/classes\/java\/util\/stream\/DoubleStream.java"},{"filename":"src\/java.base\/share\/classes\/java\/util\/stream\/IntStream.java"},{"filename":"src\/java.base\/share\/classes\/java\/util\/stream\/LongStream.java"},{"filename":"src\/java.base\/share\/classes\/java\/util\/stream\/Stream.java"},{"filename":"src\/java.base\/share\/classes\/java\/util\/stream\/Streams.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/util\/stream\/EmptyStreams.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/util\/stream\/EmptyStreamsMixedLength.java"}],"sha":"b1aa57c6476a867f808dfe3ba33177b5979a795e"}]