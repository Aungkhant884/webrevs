{"files":[{"patch":"@@ -196,1 +196,1 @@\n-static void add_derived_oop(oop* base, oop* derived, OopClosure* oop_fn) {\n+static void add_derived_oop(oop* base, intptr_t* derived, OopClosure* oop_fn) {\n@@ -202,1 +202,1 @@\n-static void ignore_derived_oop(oop* base, oop* derived, OopClosure* oop_fn) {\n+static void ignore_derived_oop(oop* base, intptr_t* derived, OopClosure* oop_fn) {\n@@ -205,1 +205,1 @@\n-static void process_derived_oop(oop* base, oop* derived, OopClosure* oop_fn) {\n+static void process_derived_oop(oop* base, intptr_t* derived, OopClosure* oop_fn) {\n@@ -209,4 +209,5 @@\n-  uintptr_t offset = cast_from_oop<uintptr_t>(*derived) - cast_from_oop<uintptr_t>(*base);\n-  *derived = *base;\n-  oop_fn->do_oop(derived);\n-  *derived = cast_to_oop(cast_from_oop<uintptr_t>(*derived) + offset);\n+  intptr_t base_value = cast_from_oop<intptr_t>(*base);\n+  intptr_t offset = *derived - base_value ;\n+  *derived = base_value;\n+  oop_fn->do_oop((oop*)derived);\n+  *derived = *derived + offset;\n@@ -260,1 +261,1 @@\n-                       OopClosure* oop_fn, void derived_oop_fn(oop*, oop*, OopClosure*),\n+                       OopClosure* oop_fn, void derived_oop_fn(oop*, intptr_t*, OopClosure*),\n@@ -287,4 +288,3 @@\n-      oop* loc = fr->oopmapreg_to_location(omv.reg(),reg_map);\n-      guarantee(loc != NULL, \"missing saved register\");\n-      oop *derived_loc = loc;\n-      oop *base_loc    = fr->oopmapreg_to_location(omv.content_reg(), reg_map);\n+      intptr_t* derived_loc = (intptr_t*)fr->oopmapreg_to_location(omv.reg(),reg_map);\n+      guarantee(derived_loc != NULL, \"missing saved register\");\n+      oop *base_loc = fr->oopmapreg_to_oop_location(omv.content_reg(), reg_map);\n@@ -306,1 +306,1 @@\n-      oop* loc = fr->oopmapreg_to_location(omv.reg(),reg_map);\n+      oop* loc = fr->oopmapreg_to_oop_location(omv.reg(),reg_map);\n@@ -369,1 +369,1 @@\n-      oop* loc = fr->oopmapreg_to_location(omv.reg(), reg_map);\n+      oop* loc = fr->oopmapreg_to_oop_location(omv.reg(), reg_map);\n@@ -660,2 +660,2 @@\n-  oop* _location;   \/\/ Location of derived pointer, also pointing to base\n-  intptr_t _offset; \/\/ Offset from base pointer\n+  intptr_t* _location; \/\/ Location of derived pointer, also pointing to base\n+  intptr_t  _offset;   \/\/ Offset from base pointer\n@@ -667,1 +667,1 @@\n-  Entry(oop* location, intptr_t offset) :\n+  Entry(intptr_t* location, intptr_t offset) :\n@@ -670,1 +670,1 @@\n-  oop* location() const { return _location; }\n+  intptr_t* location() const { return _location; }\n@@ -698,6 +698,1 @@\n-\/\/ Returns value of location as an int\n-inline intptr_t value_of_loc(oop *pointer) {\n-  return cast_from_oop<intptr_t>((*pointer));\n-}\n-\n-void DerivedPointerTable::add(oop *derived_loc, oop *base_loc) {\n+void DerivedPointerTable::add(intptr_t* derived_loc, oop *base_loc) {\n@@ -705,2 +700,2 @@\n-  assert(derived_loc != base_loc, \"Base and derived in same location\");\n-  assert(*derived_loc != (void*)base_loc, \"location already added\");\n+  assert(derived_loc != (void*)base_loc, \"Base and derived in same location\");\n+  assert((void*)*derived_loc != (void*)base_loc, \"location already added\");\n@@ -709,1 +704,1 @@\n-  intptr_t offset = value_of_loc(derived_loc) - value_of_loc(base_loc);\n+  intptr_t offset = *derived_loc - cast_from_oop<intptr_t>(*base_loc);\n@@ -719,1 +714,1 @@\n-      p2i(derived_loc), p2i(*derived_loc), p2i(*base_loc), p2i(base_loc), offset\n+      p2i(derived_loc), *derived_loc, p2i(*base_loc), p2i(base_loc), offset\n@@ -723,1 +718,1 @@\n-  *derived_loc = cast_to_oop(base_loc);\n+  *derived_loc = intptr_t(base_loc);\n@@ -734,1 +729,1 @@\n-    oop* derived_loc = entry->location();\n+    intptr_t* derived_loc = entry->location();\n@@ -740,2 +735,3 @@\n-    *derived_loc = cast_to_oop(cast_from_oop<address>(base) + offset);\n-    assert(value_of_loc(derived_loc) - value_of_loc(&base) == offset, \"sanity check\");\n+    intptr_t base_val = cast_from_oop<intptr_t>(base);\n+    *derived_loc = base_val + offset;\n+    assert(*derived_loc - base_val == offset, \"sanity check\");\n@@ -746,1 +742,1 @@\n-          p2i(derived_loc), p2i(*derived_loc), p2i(base), offset);\n+          p2i(derived_loc), *derived_loc, p2i(base), offset);\n","filename":"src\/hotspot\/share\/compiler\/oopMap.cpp","additions":29,"deletions":33,"binary":false,"changes":62,"status":"modified"},{"patch":"@@ -232,1 +232,1 @@\n-                     void derived_oop_fn(oop* base, oop* derived, OopClosure* oop_fn),\n+                     void derived_oop_fn(oop* base, intptr_t* derived, OopClosure* oop_fn),\n@@ -416,1 +416,1 @@\n-  static bool _active;                      \/\/ do not record pointers for verify pass etc.\n+  static bool _active;                           \/\/ do not record pointers for verify pass etc.\n@@ -419,3 +419,3 @@\n-  static void clear();                       \/\/ Called before scavenge\/GC\n-  static void add(oop *derived, oop *base);  \/\/ Called during scavenge\/GC\n-  static void update_pointers();             \/\/ Called after  scavenge\/GC\n+  static void clear();                           \/\/ Called before scavenge\/GC\n+  static void add(intptr_t* derived, oop *base); \/\/ Called during scavenge\/GC\n+  static void update_pointers();                 \/\/ Called after  scavenge\/GC\n","filename":"src\/hotspot\/share\/compiler\/oopMap.hpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -945,1 +945,1 @@\n-    oop *loc = _fr.oopmapreg_to_location(reg, _reg_map);\n+    oop *loc = _fr.oopmapreg_to_oop_location(reg, _reg_map);\n@@ -1000,1 +1000,1 @@\n-  oop* oop_adr = caller.oopmapreg_to_location(reg, reg_map);\n+  oop* oop_adr = caller.oopmapreg_to_oop_location(reg, reg_map);\n","filename":"src\/hotspot\/share\/runtime\/frame.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -367,1 +367,2 @@\n-  oop* oopmapreg_to_location(VMReg reg, const RegisterMap* reg_map) const;\n+  address oopmapreg_to_location(VMReg reg, const RegisterMap* reg_map) const;\n+  oop* oopmapreg_to_oop_location(VMReg reg, const RegisterMap* reg_map) const;\n","filename":"src\/hotspot\/share\/runtime\/frame.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -54,1 +54,1 @@\n-inline oop* frame::oopmapreg_to_location(VMReg reg, const RegisterMap* reg_map) const {\n+inline address frame::oopmapreg_to_location(VMReg reg, const RegisterMap* reg_map) const {\n@@ -57,1 +57,1 @@\n-    return (oop *)reg_map->location(reg);\n+    return reg_map->location(reg);\n@@ -60,1 +60,1 @@\n-    return (oop*)(((address)unextended_sp()) + sp_offset_in_bytes);\n+    return ((address)unextended_sp()) + sp_offset_in_bytes;\n@@ -64,0 +64,4 @@\n+inline oop* frame::oopmapreg_to_oop_location(VMReg reg, const RegisterMap* reg_map) const {\n+  return (oop*)oopmapreg_to_location(reg, reg_map);\n+}\n+\n","filename":"src\/hotspot\/share\/runtime\/frame.inline.hpp","additions":7,"deletions":3,"binary":false,"changes":10,"status":"modified"}]}