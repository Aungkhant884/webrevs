{"files":[{"patch":"@@ -53,0 +53,18 @@\n+static_assert(sizeof(oop) == sizeof(intptr_t), \"Derived pointer sanity check\");\n+\n+static inline intptr_t derived_pointer_value(derived_pointer p) {\n+  return static_cast<intptr_t>(p);\n+}\n+\n+static inline derived_pointer to_derived_pointer(oop obj) {\n+  return static_cast<derived_pointer>(cast_from_oop<intptr_t>(obj));\n+}\n+\n+static inline intptr_t operator-(derived_pointer p, derived_pointer p1) {\n+  return derived_pointer_value(p) - derived_pointer_value(p1);\n+}\n+\n+static inline derived_pointer operator+(derived_pointer p, intptr_t offset) {\n+  return static_cast<derived_pointer>(derived_pointer_value(p) + offset);\n+}\n+\n@@ -196,1 +214,1 @@\n-static void add_derived_oop(oop* base, intptr_t* derived, OopClosure* oop_fn) {\n+static void add_derived_oop(oop* base, derived_pointer* derived, OopClosure* oop_fn) {\n@@ -202,1 +220,1 @@\n-static void ignore_derived_oop(oop* base, intptr_t* derived, OopClosure* oop_fn) {\n+static void ignore_derived_oop(oop* base, derived_pointer* derived, OopClosure* oop_fn) {\n@@ -205,1 +223,1 @@\n-static void process_derived_oop(oop* base, intptr_t* derived, OopClosure* oop_fn) {\n+static void process_derived_oop(oop* base, derived_pointer* derived, OopClosure* oop_fn) {\n@@ -209,3 +227,3 @@\n-  intptr_t base_value = cast_from_oop<intptr_t>(*base);\n-  intptr_t offset = *derived - base_value ;\n-  *derived = base_value;\n+  derived_pointer derived_base = to_derived_pointer(*base);\n+  intptr_t offset = *derived - derived_base;\n+  *derived = derived_base;\n@@ -261,1 +279,1 @@\n-                       OopClosure* oop_fn, void derived_oop_fn(oop*, intptr_t*, OopClosure*),\n+                       OopClosure* oop_fn, void derived_oop_fn(oop*, derived_pointer*, OopClosure*),\n@@ -288,1 +306,1 @@\n-      intptr_t* derived_loc = (intptr_t*)fr->oopmapreg_to_location(omv.reg(),reg_map);\n+      derived_pointer* derived_loc = (derived_pointer*)fr->oopmapreg_to_location(omv.reg(),reg_map);\n@@ -290,1 +308,1 @@\n-      oop *base_loc = fr->oopmapreg_to_oop_location(omv.content_reg(), reg_map);\n+      oop* base_loc = fr->oopmapreg_to_oop_location(omv.content_reg(), reg_map);\n@@ -660,3 +678,3 @@\n-  intptr_t* _location; \/\/ Location of derived pointer, also pointing to base\n-  intptr_t  _offset;   \/\/ Offset from base pointer\n-  Entry* volatile _next;\n+  derived_pointer* _location; \/\/ Location of derived pointer, also pointing to base\n+  intptr_t         _offset;   \/\/ Offset from base pointer\n+  Entry* volatile  _next;\n@@ -667,1 +685,1 @@\n-  Entry(intptr_t* location, intptr_t offset) :\n+  Entry(derived_pointer* location, intptr_t offset) :\n@@ -670,1 +688,1 @@\n-  intptr_t* location() const { return _location; }\n+  derived_pointer* location() const { return _location; }\n@@ -698,1 +716,1 @@\n-void DerivedPointerTable::add(intptr_t* derived_loc, oop *base_loc) {\n+void DerivedPointerTable::add(derived_pointer* derived_loc, oop *base_loc) {\n@@ -701,1 +719,3 @@\n-  assert((void*)*derived_loc != (void*)base_loc, \"location already added\");\n+  derived_pointer base_loc_as_derived_pointer =\n+    static_cast<derived_pointer>(reinterpret_cast<intptr_t>(base_loc));\n+  assert(*derived_loc != base_loc_as_derived_pointer, \"location already added\");\n@@ -704,1 +724,1 @@\n-  intptr_t offset = *derived_loc - cast_from_oop<intptr_t>(*base_loc);\n+  intptr_t offset = *derived_loc - to_derived_pointer(*base_loc);\n@@ -714,1 +734,1 @@\n-      p2i(derived_loc), *derived_loc, p2i(*base_loc), p2i(base_loc), offset\n+      p2i(derived_loc), derived_pointer_value(*derived_loc), p2i(*base_loc), p2i(base_loc), offset\n@@ -718,1 +738,1 @@\n-  *derived_loc = intptr_t(base_loc);\n+  *derived_loc = base_loc_as_derived_pointer;\n@@ -729,1 +749,1 @@\n-    intptr_t* derived_loc = entry->location();\n+    derived_pointer* derived_loc = entry->location();\n@@ -732,1 +752,1 @@\n-    oop base = **(oop**)derived_loc;\n+    oop base = **reinterpret_cast<oop**>(derived_loc);\n@@ -735,3 +755,3 @@\n-    intptr_t base_val = cast_from_oop<intptr_t>(base);\n-    *derived_loc = base_val + offset;\n-    assert(*derived_loc - base_val == offset, \"sanity check\");\n+    derived_pointer derived_base = to_derived_pointer(base);\n+    *derived_loc = derived_base + offset;\n+    assert(*derived_loc - derived_base == offset, \"sanity check\");\n@@ -742,1 +762,1 @@\n-          p2i(derived_loc), *derived_loc, p2i(base), offset);\n+                    p2i(derived_loc), derived_pointer_value(*derived_loc), p2i(base), offset);\n","filename":"src\/hotspot\/share\/compiler\/oopMap.cpp","additions":45,"deletions":25,"binary":false,"changes":70,"status":"modified"},{"patch":"@@ -48,0 +48,2 @@\n+enum class derived_pointer : intptr_t {};\n+\n@@ -232,1 +234,1 @@\n-                     void derived_oop_fn(oop* base, intptr_t* derived, OopClosure* oop_fn),\n+                     void derived_oop_fn(oop* base, derived_pointer* derived, OopClosure* oop_fn),\n@@ -416,1 +418,1 @@\n-  static bool _active;                           \/\/ do not record pointers for verify pass etc.\n+  static bool _active;                                  \/\/ do not record pointers for verify pass etc.\n@@ -419,3 +421,3 @@\n-  static void clear();                           \/\/ Called before scavenge\/GC\n-  static void add(intptr_t* derived, oop *base); \/\/ Called during scavenge\/GC\n-  static void update_pointers();                 \/\/ Called after  scavenge\/GC\n+  static void clear();                                  \/\/ Called before scavenge\/GC\n+  static void add(derived_pointer* derived, oop *base); \/\/ Called during scavenge\/GC\n+  static void update_pointers();                        \/\/ Called after  scavenge\/GC\n","filename":"src\/hotspot\/share\/compiler\/oopMap.hpp","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"}]}