{"files":[{"patch":"@@ -766,1 +766,1 @@\n-    log_error(handshake)(\"JavaThread \" INTPTR_FORMAT \" skipping unsafe accesss processing due to suspend.\", p2i(_handshakee));\n+    log_info(handshake)(\"JavaThread \" INTPTR_FORMAT \" skipping unsafe access processing due to suspend.\", p2i(_handshakee));\n@@ -771,3 +771,2 @@\n-  \/\/ JavaThread to execute normally as if it would be outside\n-  \/\/ a handshake. We will reacquire the handshake lock at return\n-  \/\/ from ~MutexUnlocker.\n+  \/\/ JavaThread to execute normally as if it was outside a handshake\n+  \/\/ We will reacquire the handshake lock at return from ~MutexUnlocker.\n","filename":"src\/hotspot\/share\/runtime\/handshake.cpp","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -979,1 +979,1 @@\n-    \/\/ If an exception has been installed we must check the top frame wasn't deoptimized.\n+    \/\/ If an exception has been installed we must verify that the top frame wasn't deoptimized.\n","filename":"src\/hotspot\/share\/runtime\/safepoint.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1625,4 +1625,4 @@\n-        if (has_last_Java_frame()) {\n-          frame f = last_frame();\n-          ls.print(\" (pc: \" INTPTR_FORMAT \" sp: \" INTPTR_FORMAT \" )\", p2i(f.pc()), p2i(f.sp()));\n-        }\n+      if (has_last_Java_frame()) {\n+        frame f = last_frame();\n+        ls.print(\" (pc: \" INTPTR_FORMAT \" sp: \" INTPTR_FORMAT \" )\", p2i(f.pc()), p2i(f.sp()));\n+      }\n@@ -1635,2 +1635,1 @@\n-  \/\/ Do not throw asynchronous exceptions against the compiler thread\n-  \/\/ (the compiler thread should not be a Java thread -- fix in 1.4.2)\n+  \/\/ Do not throw asynchronous exceptions against the compiler thread.\n","filename":"src\/hotspot\/share\/runtime\/thread.cpp","additions":5,"deletions":6,"binary":false,"changes":11,"status":"modified"}]}