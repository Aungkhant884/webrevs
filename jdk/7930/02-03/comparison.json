{"files":[{"patch":"@@ -774,0 +774,2 @@\n+  \/\/ We may be at method entry which requires we save the do-not-unlock flag.\n+  UnlockFlagSaver fs(_handshakee);\n","filename":"src\/hotspot\/share\/runtime\/handshake.cpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -977,0 +977,1 @@\n+      log_info(exceptions)(\"deferred async exception at compiled safepoint\");\n","filename":"src\/hotspot\/share\/runtime\/safepoint.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1614,1 +1614,1 @@\n-  \/\/ Only overwrite an already pending exception if it is not a threadDeath.\n+  \/\/ Only overwrite an already pending exception if it is not a ThreadDeath.\n@@ -1671,1 +1671,1 @@\n-  HandshakeClosure(\"InstallAsyncException\"), _aeh(aeh) {}\n+    HandshakeClosure(\"InstallAsyncException\"), _aeh(aeh) {}\n","filename":"src\/hotspot\/share\/runtime\/thread.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -253,6 +253,0 @@\n-void Exceptions::throw_unsafe_access_internal_error(JavaThread* thread, const char* file, int line, const char* message) {\n-  Handle h_exception = new_exception(thread, vmSymbols::java_lang_InternalError(), message);\n-  java_lang_InternalError::set_during_unsafe_access(h_exception());\n-  _throw(thread, file, line, h_exception, message);\n-}\n-\n","filename":"src\/hotspot\/share\/utilities\/exceptions.cpp","additions":0,"deletions":6,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -176,2 +176,0 @@\n-  static void throw_unsafe_access_internal_error(JavaThread* thread, const char* file, int line, const char* message);\n-\n","filename":"src\/hotspot\/share\/utilities\/exceptions.hpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"}]}