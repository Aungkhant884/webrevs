{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -1736,1 +1736,1 @@\n-  void process_load_klass_helper(const Node* n, Node* cmp, int i);\n+  void clone_loadklass_nodes_at_cmp_index(const Node* n, Node* cmp, int i);\n@@ -1738,1 +1738,1 @@\n-  bool process_cmp_loadklass(Node* n, const Node* blk1, const Node* blk2);\n+  bool clone_cmp_loadklass_down(Node* n, const Node* blk1, const Node* blk2);\n","filename":"src\/hotspot\/share\/opto\/loopnode.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -88,1 +88,1 @@\n-  if (process_cmp_loadklass(n, blk1, blk2)) {\n+  if (clone_cmp_loadklass_down(n, blk1, blk2)) {\n@@ -211,1 +211,1 @@\n-bool PhaseIdealLoop::process_cmp_loadklass(Node* n, const Node* blk1, const Node* blk2) {\n+bool PhaseIdealLoop::clone_cmp_loadklass_down(Node* n, const Node* blk1, const Node* blk2) {\n@@ -253,2 +253,2 @@\n-      process_load_klass_helper(n, cmp, 1);\n-      process_load_klass_helper(n, cmp, 2);\n+      clone_loadklass_nodes_at_cmp_index(n, cmp, 1);\n+      clone_loadklass_nodes_at_cmp_index(n, cmp, 2);\n@@ -268,1 +268,1 @@\n-void PhaseIdealLoop::process_load_klass_helper(const Node* n, Node* cmp, int i) {\n+void PhaseIdealLoop::clone_loadklass_nodes_at_cmp_index(const Node* n, Node* cmp, int i) {\n","filename":"src\/hotspot\/share\/opto\/split_if.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"}]}