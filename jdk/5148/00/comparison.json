{"files":[{"patch":"@@ -92,1 +92,1 @@\n-         \"Young region length %u should match collection set length \" SIZE_FORMAT, young_region_length(), _collection_set_cur_length);\n+         \"Young region length %u should match collection set length %u\", young_region_length(), _collection_set_cur_length);\n@@ -133,0 +133,1 @@\n+  assert(_collection_set_cur_length < _collection_set_max_length, \"Collection set now larger than maximum size.\");\n@@ -134,1 +135,0 @@\n-  assert(_collection_set_cur_length <= _collection_set_max_length, \"Collection set now larger than maximum size.\");\n@@ -156,1 +156,1 @@\n-  for (size_t i = 0; i < _collection_set_max_length; i++) {\n+  for (uint i = 0; i < _collection_set_max_length; i++) {\n@@ -329,2 +329,2 @@\n-         \"Collection set is too large with \" SIZE_FORMAT \" entries\", _collection_set_cur_length);\n-  hr->set_young_index_in_cset((uint)_collection_set_cur_length + 1);\n+         \"Collection set is too large with %u entries\", _collection_set_cur_length);\n+  hr->set_young_index_in_cset(_collection_set_cur_length + 1);\n@@ -332,0 +332,1 @@\n+  assert(_collection_set_cur_length < _collection_set_max_length, \"Collection set larger than maximum allowed.\");\n@@ -337,1 +338,0 @@\n-  assert(_collection_set_cur_length <= _collection_set_max_length, \"Collection set larger than maximum allowed.\");\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectionSet.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -150,2 +150,2 @@\n-  volatile size_t _collection_set_cur_length;\n-  size_t _collection_set_max_length;\n+  volatile uint _collection_set_cur_length;\n+  uint _collection_set_max_length;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectionSet.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}