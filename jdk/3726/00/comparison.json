{"files":[{"patch":"@@ -31,3 +31,3 @@\n- * @library \/compiler\/patches \/test\/lib\n- * @run main\/othervm compiler.arguments.TestPrintOptoAssemblyLineNumbers\n-*\/\n+ * @library \/test\/lib\n+ * @run driver compiler.arguments.TestPrintOptoAssemblyLineNumbers\n+ *\/\n@@ -44,1 +44,1 @@\n-        String[] procArgs = new String[]{\n+        String[] procArgs = new String[] {\n@@ -48,2 +48,2 @@\n-            \"compiler.arguments.TestPrintOptoAssemblyLineNumbers$CheckC2OptoAssembly\"\n-            };\n+            CheckC2OptoAssembly.class.getName()\n+        };\n@@ -54,1 +54,1 @@\n-        if(output.contains(\"TestPrintOptoAssemblyLineNumbers$CheckC2OptoAssembly::main @ bci:11\")){\n+        if (output.contains(\"TestPrintOptoAssemblyLineNumbers$CheckC2OptoAssembly::main @ bci:11\")) {\n@@ -60,2 +60,2 @@\n-    public static class CheckC2OptoAssembly{ \/\/ contents of this class serves to just invoke C2\n-        public static boolean foo(String arg){\n+    public static class CheckC2OptoAssembly { \/\/ contents of this class serves to just invoke C2\n+        public static boolean foo(String arg) {\n@@ -65,1 +65,1 @@\n-        public static void main(String[] args){\n+        public static void main(String[] args) {\n@@ -67,2 +67,2 @@\n-            for(int x = 0; x < 200_000; x++){\n-                if(foo(\"something\" + x)){ \/\/ <- test expects this line of code to be on line 68\n+            for (int x = 0; x < 200_000; x++){\n+                if (foo(\"something\" + x)) { \/\/ <- test expects this line of code to be on line 68\n","filename":"test\/hotspot\/jtreg\/compiler\/arguments\/TestPrintOptoAssemblyLineNumbers.java","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"}]}