{"files":[{"patch":"@@ -954,1 +954,1 @@\n-static int vec_stack_to_stack_helper(CodeBuffer *cbuf, bool do_size, int src_offset,\n+static void vec_stack_to_stack_helper(CodeBuffer *cbuf, int src_offset,\n@@ -956,24 +956,0 @@\n-  int calc_size = 0;\n-  int src_offset_size = (src_offset == 0) ? 0 : ((src_offset < 0x80) ? 1 : 4);\n-  int dst_offset_size = (dst_offset == 0) ? 0 : ((dst_offset < 0x80) ? 1 : 4);\n-  switch (ireg) {\n-  case Op_VecS:\n-    calc_size = 3+src_offset_size + 3+dst_offset_size;\n-    break;\n-  case Op_VecD: {\n-    calc_size = 3+src_offset_size + 3+dst_offset_size;\n-    int tmp_src_offset = src_offset + 4;\n-    int tmp_dst_offset = dst_offset + 4;\n-    src_offset_size = (tmp_src_offset == 0) ? 0 : ((tmp_src_offset < 0x80) ? 1 : 4);\n-    dst_offset_size = (tmp_dst_offset == 0) ? 0 : ((tmp_dst_offset < 0x80) ? 1 : 4);\n-    calc_size += 3+src_offset_size + 3+dst_offset_size;\n-    break;\n-  }\n-  case Op_VecX:\n-  case Op_VecY:\n-  case Op_VecZ:\n-    calc_size = 6 + 6 + 5+src_offset_size + 5+dst_offset_size;\n-    break;\n-  default:\n-    ShouldNotReachHere();\n-  }\n@@ -982,1 +958,0 @@\n-    int offset = __ offset();\n@@ -1015,3 +990,0 @@\n-    int size = __ offset() - offset;\n-    assert(size == calc_size, \"incorrect size calculation\");\n-    return size;\n@@ -1019,1 +991,1 @@\n-  } else if (!do_size) {\n+  } else {\n@@ -1059,1 +1031,0 @@\n-  return calc_size;\n@@ -1091,1 +1062,1 @@\n-      return vec_stack_to_stack_helper(cbuf, do_size, src_offset, dst_offset, ireg, st);\n+      vec_stack_to_stack_helper(cbuf, src_offset, dst_offset, ireg, st);\n@@ -1093,1 +1064,1 @@\n-      return vec_mov_helper(cbuf, do_size, src_first, dst_first, src_second, dst_second, ireg, st);\n+      vec_mov_helper(cbuf, do_size, src_first, dst_first, src_second, dst_second, ireg, st);\n@@ -1096,1 +1067,1 @@\n-      return vec_spill_helper(cbuf, do_size, false, stack_offset, src_first, ireg, st);\n+      vec_spill_helper(cbuf, do_size, false, stack_offset, src_first, ireg, st);\n@@ -1099,1 +1070,1 @@\n-      return vec_spill_helper(cbuf, do_size, true,  stack_offset, dst_first, ireg, st);\n+      vec_spill_helper(cbuf, do_size, true,  stack_offset, dst_first, ireg, st);\n@@ -1103,0 +1074,1 @@\n+    return 0;\n","filename":"src\/hotspot\/cpu\/x86\/x86_32.ad","additions":7,"deletions":35,"binary":false,"changes":42,"status":"modified"}]}