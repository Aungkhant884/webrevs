{"files":[{"patch":"@@ -37,0 +37,2 @@\n+import java.util.Objects;\n+\n@@ -160,14 +162,3 @@\n-        if (!(obj instanceof CodeSource other))\n-            return false;\n-\n-        \/\/ URLs must match\n-        if (location == null) {\n-            \/\/ if location is null, then other.location must be null as well\n-            if (other.location != null) return false;\n-        } else {\n-            \/\/ if location is not null, then it must equal other.location\n-            if (!location.equals(other.location)) return false;\n-        }\n-\n-        \/\/ certs must match\n-        return matchCerts(other, true);\n+        return (obj instanceof CodeSource other)\n+                && Objects.equals(location, other.location)\n+                && matchCerts(other, true);\n","filename":"src\/java.base\/share\/classes\/java\/security\/CodeSource.java","additions":5,"deletions":14,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -330,1 +330,1 @@\n-     * @param obj the object to test for equality with this identity.\n+     * @param identity the object to test for equality with this identity.\n@@ -336,1 +336,1 @@\n-    public final boolean equals(Object obj) {\n+    public final boolean equals(Object identity) {\n@@ -338,1 +338,1 @@\n-        if (obj == this) {\n+        if (identity == this) {\n@@ -342,1 +342,1 @@\n-        if (obj instanceof Identity other) {\n+        if (identity instanceof Identity other) {\n","filename":"src\/java.base\/share\/classes\/java\/security\/Identity.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2003,1 +2003,1 @@\n-            if (!(cap.supportsParameter)) {\n+            if (!cap.supportsParameter) {\n@@ -2012,1 +2012,1 @@\n-            if (!(hasKeyAttributes())) {\n+            if (!hasKeyAttributes()) {\n","filename":"src\/java.base\/share\/classes\/java\/security\/Provider.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -176,1 +176,1 @@\n-     * @param obj the object to test for equality with this certification path\n+     * @param other the object to test for equality with this certification path\n@@ -180,2 +180,2 @@\n-    public boolean equals(Object obj) {\n-        if (this == obj)\n+    public boolean equals(Object other) {\n+        if (this == other)\n@@ -184,1 +184,1 @@\n-        return obj instanceof CertPath that\n+        return other instanceof CertPath that\n","filename":"src\/java.base\/share\/classes\/java\/security\/cert\/CertPath.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -121,1 +121,1 @@\n-     * @param obj the object to test for equality with this parameters.\n+     * @param p the object to test for equality with this parameters.\n@@ -126,2 +126,2 @@\n-    public boolean equals(Object obj) {\n-        if (obj == this) {\n+    public boolean equals(Object p) {\n+        if (p == this) {\n@@ -130,1 +130,1 @@\n-        return obj instanceof URICertStoreParameters other\n+        return p instanceof URICertStoreParameters other\n","filename":"src\/java.base\/share\/classes\/java\/security\/cert\/URICertStoreParameters.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -220,0 +220,1 @@\n+\n","filename":"src\/java.base\/share\/classes\/java\/security\/spec\/ECFieldF2m.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -85,0 +85,1 @@\n+\n","filename":"src\/java.base\/share\/classes\/java\/security\/spec\/ECFieldFp.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -172,0 +172,1 @@\n+\n","filename":"src\/java.base\/share\/classes\/java\/security\/spec\/EllipticCurve.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}