{"files":[{"patch":"@@ -602,5 +602,4 @@\n-  uintptr_t bits(MEMFLAGS memflags) const {\n-    if (memflags == mtNone) {\n-      \/\/ Stack allocation\n-      return 0;\n-    }\n+  \/\/ Resource allocation\n+  static uintptr_t bits() {\n+    return 0;\n+  }\n@@ -608,1 +607,3 @@\n-    \/\/ CHeap allocation\n+  \/\/ CHeap allocation\n+  static uintptr_t bits(MEMFLAGS memflags) {\n+    assert(memflags != mtNone, \"Must provide a proper MEMFLAGS\");\n@@ -612,1 +613,3 @@\n-  uintptr_t bits(Arena* arena) const {\n+  \/\/ Arena allocation\n+  static uintptr_t bits(Arena* arena) {\n+    assert((uintptr_t(arena) & 1) == 0, \"Required for on_C_heap() to work\");\n@@ -617,0 +620,7 @@\n+  \/\/ Resource allocation\n+  GrowableArrayMetadata() :\n+      _bits(bits())\n+      debug_only(COMMA _nesting_check(true)) {\n+  }\n+\n+  \/\/ Arena allocation\n@@ -619,1 +629,1 @@\n-      debug_only(COMMA _nesting_check(on_stack())) {\n+      debug_only(COMMA _nesting_check(false)) {\n@@ -622,0 +632,1 @@\n+  \/\/ CHeap allocation\n@@ -624,1 +635,1 @@\n-      debug_only(COMMA _nesting_check(on_stack())) {\n+      debug_only(COMMA _nesting_check(false)) {\n@@ -658,2 +669,2 @@\n-\/\/  - Resource stack allocation: if memflags == mtNone\n-\/\/  - CHeap allocation: if memflags != mtNone\n+\/\/  - Resource stack allocation: if no extra argument is provided\n+\/\/  - CHeap allocation: if memflags is provided\n@@ -682,5 +693,1 @@\n-    if (memflags != mtNone) {\n-      return (E*)GrowableArrayCHeapAllocator::allocate(max, sizeof(E), memflags);\n-    }\n-\n-    return (E*)GrowableArrayResourceAllocator::allocate(max, sizeof(E));\n+    return (E*)GrowableArrayCHeapAllocator::allocate(max, sizeof(E), memflags);\n@@ -723,1 +730,11 @@\n-  GrowableArray(int initial_capacity = 2, MEMFLAGS memflags = mtNone) :\n+  GrowableArray() : GrowableArray(2 \/* initial_capacity *\/) {}\n+\n+  explicit GrowableArray(int initial_capacity) :\n+      GrowableArrayWithAllocator<E, GrowableArray<E> >(\n+          allocate(initial_capacity),\n+          initial_capacity),\n+      _metadata() {\n+    init_checks();\n+  }\n+\n+  GrowableArray(int initial_capacity, MEMFLAGS memflags) :\n@@ -731,1 +748,9 @@\n-  GrowableArray(int initial_capacity, int initial_len, const E& filler, MEMFLAGS memflags = mtNone) :\n+  GrowableArray(int initial_capacity, int initial_len, const E& filler) :\n+      GrowableArrayWithAllocator<E, GrowableArray<E> >(\n+          allocate(initial_capacity),\n+          initial_capacity, initial_len, filler),\n+      _metadata() {\n+    init_checks();\n+  }\n+\n+  GrowableArray(int initial_capacity, int initial_len, const E& filler, MEMFLAGS memflags) :\n","filename":"src\/hotspot\/share\/utilities\/growableArray.hpp","additions":43,"deletions":18,"binary":false,"changes":61,"status":"modified"}]}