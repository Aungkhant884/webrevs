{"files":[{"patch":"@@ -2920,1 +2920,1 @@\n-        _nindex_to_node = new (ResourceObj::C_HEAP, mtInternal) GrowableArray<int>(0, mtInternal);\n+        _nindex_to_node = new (ResourceObj::C_HEAP, mtInternal) GrowableArray<int>(mtInternal, 0);\n@@ -2923,1 +2923,1 @@\n-        _cpu_to_node = new (ResourceObj::C_HEAP, mtInternal) GrowableArray<int>(0, mtInternal);\n+        _cpu_to_node = new (ResourceObj::C_HEAP, mtInternal) GrowableArray<int>(mtInternal, 0);\n","filename":"src\/hotspot\/os\/linux\/os_linux.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -63,1 +63,1 @@\n-  _objs = new (ResourceObj::C_HEAP, mtClassShared) GrowableArray<SourceObjInfo*>(128 * K, mtClassShared);\n+  _objs = new (ResourceObj::C_HEAP, mtClassShared) GrowableArray<SourceObjInfo*>(mtClassShared, 128 * K);\n@@ -168,3 +168,3 @@\n-  _klasses = new (ResourceObj::C_HEAP, mtClassShared) GrowableArray<Klass*>(4 * K, mtClassShared);\n-  _symbols = new (ResourceObj::C_HEAP, mtClassShared) GrowableArray<Symbol*>(256 * K, mtClassShared);\n-  _special_refs = new (ResourceObj::C_HEAP, mtClassShared) GrowableArray<SpecialRefInfo>(24 * K, mtClassShared);\n+  _klasses = new (ResourceObj::C_HEAP, mtClassShared) GrowableArray<Klass*>(mtClassShared, 4 * K);\n+  _symbols = new (ResourceObj::C_HEAP, mtClassShared) GrowableArray<Symbol*>(mtClassShared, 256 * K);\n+  _special_refs = new (ResourceObj::C_HEAP, mtClassShared) GrowableArray<SpecialRefInfo>(mtClassShared, 24 * K);\n","filename":"src\/hotspot\/share\/cds\/archiveBuilder.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -76,2 +76,2 @@\n-  _interfaces = new (ResourceObj::C_HEAP, mtClass) GrowableArray<int>(10, mtClass);\n-  _indy_items = new (ResourceObj::C_HEAP, mtClass) GrowableArray<const char*>(9, mtClass);\n+  _interfaces = new (ResourceObj::C_HEAP, mtClass) GrowableArray<int>(mtClass, 10);\n+  _indy_items = new (ResourceObj::C_HEAP, mtClass) GrowableArray<const char*>(mtClass, 9);\n","filename":"src\/hotspot\/share\/cds\/classListParser.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -59,2 +59,2 @@\n-      _verifier_constraints = new (ResourceObj::C_HEAP, mtClass) GrowableArray<DTVerifierConstraint>(n, mtClass);\n-      _verifier_constraint_flags = new (ResourceObj::C_HEAP, mtClass) GrowableArray<char>(n, mtClass);\n+      _verifier_constraints = new (ResourceObj::C_HEAP, mtClass) GrowableArray<DTVerifierConstraint>(mtClass, n);\n+      _verifier_constraint_flags = new (ResourceObj::C_HEAP, mtClass) GrowableArray<char>(mtClass, n);\n@@ -71,1 +71,1 @@\n-      _loader_constraints = new (ResourceObj::C_HEAP, mtClass) GrowableArray<DTLoaderConstraint>(n, mtClass);\n+      _loader_constraints = new (ResourceObj::C_HEAP, mtClass) GrowableArray<DTLoaderConstraint>(mtClass, n);\n@@ -99,1 +99,1 @@\n-    _verifier_constraints = new (ResourceObj::C_HEAP, mtClass) GrowableArray<DTVerifierConstraint>(4, mtClass);\n+    _verifier_constraints = new (ResourceObj::C_HEAP, mtClass) GrowableArray<DTVerifierConstraint>(mtClass, 4);\n@@ -102,1 +102,1 @@\n-    _verifier_constraint_flags = new (ResourceObj::C_HEAP, mtClass) GrowableArray<char>(4, mtClass);\n+    _verifier_constraint_flags = new (ResourceObj::C_HEAP, mtClass) GrowableArray<char>(mtClass, 4);\n@@ -144,1 +144,1 @@\n-    _loader_constraints = new (ResourceObj::C_HEAP, mtClass) GrowableArray<DTLoaderConstraint>(4, mtClass);\n+    _loader_constraints = new (ResourceObj::C_HEAP, mtClass) GrowableArray<DTLoaderConstraint>(mtClass, 4);\n@@ -176,1 +176,1 @@\n-    _enum_klass_static_fields = new (ResourceObj::C_HEAP, mtClass) GrowableArray<int>(20, mtClass);\n+    _enum_klass_static_fields = new (ResourceObj::C_HEAP, mtClass) GrowableArray<int>(mtClass, 20);\n","filename":"src\/hotspot\/share\/cds\/dumpTimeClassInfo.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -646,1 +646,1 @@\n-    _non_existent_class_paths = new (ResourceObj::C_HEAP, mtClass)GrowableArray<const char*>(10, mtClass);\n+    _non_existent_class_paths = new (ResourceObj::C_HEAP, mtClass)GrowableArray<const char*>(mtClass, 10);\n","filename":"src\/hotspot\/share\/cds\/filemap.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -624,1 +624,1 @@\n-      new(ResourceObj::C_HEAP, mtClass) GrowableArray<int>(10, mtClass);\n+      new(ResourceObj::C_HEAP, mtClass) GrowableArray<int>(mtClass, 10);\n@@ -638,1 +638,1 @@\n-      new(ResourceObj::C_HEAP, mtClass) GrowableArray<Klass*>(50, mtClass);\n+      new(ResourceObj::C_HEAP, mtClass) GrowableArray<Klass*>(mtClass, 50);\n","filename":"src\/hotspot\/share\/cds\/heapShared.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -36,1 +36,1 @@\n-    _proxy_klasses = new (ResourceObj::C_HEAP, mtClassShared) GrowableArray<InstanceKlass*>(n, mtClassShared);\n+    _proxy_klasses = new (ResourceObj::C_HEAP, mtClassShared) GrowableArray<InstanceKlass*>(mtClassShared, n);\n","filename":"src\/hotspot\/share\/cds\/lambdaProxyClassDictionary.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -117,1 +117,1 @@\n-      _proxy_klasses = new (ResourceObj::C_HEAP, mtClassShared) GrowableArray<InstanceKlass*>(5, mtClassShared);\n+      _proxy_klasses = new (ResourceObj::C_HEAP, mtClassShared) GrowableArray<InstanceKlass*>(mtClassShared, 5);\n","filename":"src\/hotspot\/share\/cds\/lambdaProxyClassDictionary.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -574,1 +574,1 @@\n-  _patch_mod_entries = new (ResourceObj::C_HEAP, mtModule) GrowableArray<ModuleClassPathList*>(num_of_entries, mtModule);\n+  _patch_mod_entries = new (ResourceObj::C_HEAP, mtModule) GrowableArray<ModuleClassPathList*>(mtModule, num_of_entries);\n@@ -1512,1 +1512,1 @@\n-      GrowableArray<ModuleClassPathList*>(EXPLODED_ENTRY_SIZE, mtModule);\n+      GrowableArray<ModuleClassPathList*>(mtModule, EXPLODED_ENTRY_SIZE);\n","filename":"src\/hotspot\/share\/classfile\/classLoader.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -824,1 +824,1 @@\n-      _deallocate_list = new (ResourceObj::C_HEAP, mtClass) GrowableArray<Metadata*>(100, mtClass);\n+      _deallocate_list = new (ResourceObj::C_HEAP, mtClass) GrowableArray<Metadata*>(mtClass, 100);\n","filename":"src\/hotspot\/share\/classfile\/classLoaderData.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -54,1 +54,1 @@\n-    _buckets[i] = new (ResourceObj::C_HEAP, mtSymbol) GrowableArray<Entry>(0, mtSymbol);\n+    _buckets[i] = new (ResourceObj::C_HEAP, mtSymbol) GrowableArray<Entry>(mtSymbol, 0);\n","filename":"src\/hotspot\/share\/classfile\/compactHashtable.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -968,1 +968,1 @@\n-    new (ResourceObj::C_HEAP, mtClass) GrowableArray<Klass*>(40, mtClass);\n+    new (ResourceObj::C_HEAP, mtClass) GrowableArray<Klass*>(mtClass, 40);\n@@ -972,1 +972,1 @@\n-    new (ResourceObj::C_HEAP, mtModule) GrowableArray<Klass*>(500, mtModule);\n+    new (ResourceObj::C_HEAP, mtModule) GrowableArray<Klass*>(mtModule, 500);\n@@ -1923,2 +1923,2 @@\n-      _methods = new (ResourceObj::C_HEAP, mtInternal) GrowableArray<Method*>(init_length, mtInternal);\n-      _bcis = new (ResourceObj::C_HEAP, mtInternal) GrowableArray<int>(init_length, mtInternal);\n+      _methods = new (ResourceObj::C_HEAP, mtInternal) GrowableArray<Method*>(mtInternal, init_length);\n+      _bcis = new (ResourceObj::C_HEAP, mtInternal) GrowableArray<int>(mtInternal, init_length);\n","filename":"src\/hotspot\/share\/classfile\/javaClasses.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -52,1 +52,1 @@\n-    _loaders = new (ResourceObj::C_HEAP, mtClass) GrowableArray<ClassLoaderData*>(10, mtClass);\n+    _loaders = new (ResourceObj::C_HEAP, mtClass) GrowableArray<ClassLoaderData*>(mtClass, 10);\n@@ -92,1 +92,1 @@\n-    _constraints = new (ResourceObj::C_HEAP, mtClass) GrowableArray<LoaderConstraint*>(5, mtClass);\n+    _constraints = new (ResourceObj::C_HEAP, mtClass) GrowableArray<LoaderConstraint*>(mtClass, 5);\n","filename":"src\/hotspot\/share\/classfile\/loaderConstraints.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -166,1 +166,1 @@\n-      _reads = new (ResourceObj::C_HEAP, mtModule) GrowableArray<ModuleEntry*>(MODULE_READS_SIZE, mtModule);\n+      _reads = new (ResourceObj::C_HEAP, mtModule) GrowableArray<ModuleEntry*>(mtModule, MODULE_READS_SIZE);\n@@ -431,1 +431,1 @@\n-    array = new (ResourceObj::C_HEAP, mtModule)GrowableArray<ModuleEntry*>(length, mtModule);\n+    array = new (ResourceObj::C_HEAP, mtModule)GrowableArray<ModuleEntry*>(mtModule, length);\n","filename":"src\/hotspot\/share\/classfile\/moduleEntry.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -83,1 +83,1 @@\n-    _qualified_exports = new (ResourceObj::C_HEAP, mtModule) GrowableArray<ModuleEntry*>(QUAL_EXP_SIZE, mtModule);\n+    _qualified_exports = new (ResourceObj::C_HEAP, mtModule) GrowableArray<ModuleEntry*>(mtModule, QUAL_EXP_SIZE);\n","filename":"src\/hotspot\/share\/classfile\/packageEntry.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -120,1 +120,1 @@\n-                       GrowableArray<ProtectionDomainEntry*>(20, mtClass);\n+                       GrowableArray<ProtectionDomainEntry*>(mtClass, 20);\n","filename":"src\/hotspot\/share\/classfile\/protectionDomainCache.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -174,4 +174,4 @@\n-GrowableArray<CodeHeap*>* CodeCache::_heaps = new(ResourceObj::C_HEAP, mtCode) GrowableArray<CodeHeap*> (static_cast<int>(CodeBlobType::All), mtCode);\n-GrowableArray<CodeHeap*>* CodeCache::_compiled_heaps = new(ResourceObj::C_HEAP, mtCode) GrowableArray<CodeHeap*> (static_cast<int>(CodeBlobType::All), mtCode);\n-GrowableArray<CodeHeap*>* CodeCache::_nmethod_heaps = new(ResourceObj::C_HEAP, mtCode) GrowableArray<CodeHeap*> (static_cast<int>(CodeBlobType::All), mtCode);\n-GrowableArray<CodeHeap*>* CodeCache::_allocable_heaps = new(ResourceObj::C_HEAP, mtCode) GrowableArray<CodeHeap*> (static_cast<int>(CodeBlobType::All), mtCode);\n+GrowableArray<CodeHeap*>* CodeCache::_heaps = new(ResourceObj::C_HEAP, mtCode) GrowableArray<CodeHeap*>(mtCode, static_cast<int>(CodeBlobType::All));\n+GrowableArray<CodeHeap*>* CodeCache::_compiled_heaps = new(ResourceObj::C_HEAP, mtCode) GrowableArray<CodeHeap*>(mtCode, static_cast<int>(CodeBlobType::All));\n+GrowableArray<CodeHeap*>* CodeCache::_nmethod_heaps = new(ResourceObj::C_HEAP, mtCode) GrowableArray<CodeHeap*>(mtCode, static_cast<int>(CodeBlobType::All));\n+GrowableArray<CodeHeap*>* CodeCache::_allocable_heaps = new(ResourceObj::C_HEAP, mtCode) GrowableArray<CodeHeap*>(mtCode, static_cast<int>(CodeBlobType::All));\n@@ -1280,1 +1280,1 @@\n-    old_compiled_method_table = new (ResourceObj::C_HEAP, mtCode) GrowableArray<CompiledMethod*>(100, mtCode);\n+    old_compiled_method_table = new (ResourceObj::C_HEAP, mtCode) GrowableArray<CompiledMethod*>(mtCode, 100);\n","filename":"src\/hotspot\/share\/code\/codeCache.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -93,1 +93,1 @@\n-      phase_names = new (ResourceObj::C_HEAP, mtInternal) GrowableArray<const char*>(100, mtCompiler);\n+      phase_names = new (ResourceObj::C_HEAP, mtCompiler) GrowableArray<const char*>(mtCompiler, 100);\n","filename":"src\/hotspot\/share\/compiler\/compilerEvent.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -268,1 +268,1 @@\n-          _cached_src_lines = new (ResourceObj::C_HEAP, mtCode)GrowableArray<const char*>(0, mtCode);\n+          _cached_src_lines = new (ResourceObj::C_HEAP, mtCode)GrowableArray<const char*>(mtCode, 0);\n","filename":"src\/hotspot\/share\/compiler\/disassembler.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -268,1 +268,2 @@\n-    _allocated_regions((ResourceObj::set_allocation_type((address) &_allocated_regions,\n+    _allocated_regions(mtGC,\n+                       (ResourceObj::set_allocation_type((address) &_allocated_regions,\n@@ -270,1 +271,1 @@\n-                        2), mtGC),\n+                        2)),\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Allocator.hpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -36,1 +36,1 @@\n-  _compaction_regions = new (ResourceObj::C_HEAP, mtGC) GrowableArray<HeapRegion*>(32, mtGC);\n+  _compaction_regions = new (ResourceObj::C_HEAP, mtGC) GrowableArray<HeapRegion*>(mtGC, 32);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCCompactionPoint.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n-  _regions(new (ResourceObj::C_HEAP, mtGC) GrowableArray<HeapRegion*>(8, mtGC)),\n+  _regions(new (ResourceObj::C_HEAP, mtGC) GrowableArray<HeapRegion*>(mtGC, 8)),\n","filename":"src\/hotspot\/share\/gc\/g1\/g1SurvivorRegions.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-  _lgrp_spaces = new (ResourceObj::C_HEAP, mtGC) GrowableArray<LGRPSpace*>(0, mtGC);\n+  _lgrp_spaces = new (ResourceObj::C_HEAP, mtGC) GrowableArray<LGRPSpace*>(mtGC, 0);\n","filename":"src\/hotspot\/share\/gc\/parallel\/mutableNUMASpace.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -63,1 +63,1 @@\n-  _deferred_obj_array = new (ResourceObj::C_HEAP, mtGC) GrowableArray<HeapWord*>(10, mtGC);\n+  _deferred_obj_array = new (ResourceObj::C_HEAP, mtGC) GrowableArray<HeapWord*>(mtGC, 10);\n@@ -92,1 +92,1 @@\n-  _shadow_region_array = new (ResourceObj::C_HEAP, mtGC) GrowableArray<size_t >(10, mtGC);\n+  _shadow_region_array = new (ResourceObj::C_HEAP, mtGC) GrowableArray<size_t>(mtGC, 10);\n","filename":"src\/hotspot\/share\/gc\/parallel\/psCompactionManager.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -117,1 +117,1 @@\n-  _phases = new (ResourceObj::C_HEAP, mtGC) GrowableArray<GCPhase>(INITIAL_CAPACITY, mtGC);\n+  _phases = new (ResourceObj::C_HEAP, mtGC) GrowableArray<GCPhase>(mtGC, INITIAL_CAPACITY);\n","filename":"src\/hotspot\/share\/gc\/shared\/gcTimer.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1282,2 +1282,2 @@\n-  _fingerprints = new(ResourceObj::C_HEAP, mtCode)GrowableArray<uint64_t>(32, mtCode);\n-  _handlers     = new(ResourceObj::C_HEAP, mtCode)GrowableArray<address>(32, mtCode);\n+  _fingerprints = new(ResourceObj::C_HEAP, mtCode)GrowableArray<uint64_t>(mtCode, 32);\n+  _handlers     = new(ResourceObj::C_HEAP, mtCode)GrowableArray<address>(mtCode, 32);\n","filename":"src\/hotspot\/share\/interpreter\/interpreterRuntime.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -287,1 +287,1 @@\n-    _leak_context_edges = new (ResourceObj::C_HEAP, mtTracing)GrowableArray<const StoredEdge*>(initial_size, mtTracing);\n+    _leak_context_edges = new (ResourceObj::C_HEAP, mtTracing)GrowableArray<const StoredEdge*>(mtTracing, initial_size);\n","filename":"src\/hotspot\/share\/jfr\/leakprofiler\/chains\/edgeStore.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -55,1 +55,1 @@\n-  return new (ResourceObj::C_HEAP, mtTracing) GrowableArray<T>(size, mtTracing);\n+  return new (ResourceObj::C_HEAP, mtTracing) GrowableArray<T>(mtTracing, size);\n","filename":"src\/hotspot\/share\/jfr\/leakprofiler\/checkpoint\/objectSampleCheckpoint.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -80,1 +80,1 @@\n-    _interfaces = new(ResourceObj::C_HEAP, mtTracing) GrowableArray<InterfaceEntry>(10, mtTracing);\n+    _interfaces = new(ResourceObj::C_HEAP, mtTracing) GrowableArray<InterfaceEntry>(mtTracing, 10);\n","filename":"src\/hotspot\/share\/jfr\/periodic\/jfrNetworkUtilization.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -266,1 +266,1 @@\n-  _list(new (ResourceObj::C_HEAP, mtTracing) GrowableArray<JfrThreadGroupEntry*>(initial_array_size, mtTracing)) {}\n+  _list(new (ResourceObj::C_HEAP, mtTracing) GrowableArray<JfrThreadGroupEntry*>(mtTracing, initial_array_size)) {}\n","filename":"src\/hotspot\/share\/jfr\/recorder\/checkpoint\/types\/jfrThreadGroup.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -137,1 +137,1 @@\n-  dcmd_recordings_array = new (ResourceObj::C_HEAP, mtTracing)GrowableArray<JfrStartFlightRecordingDCmd*>(length, mtTracing);\n+  dcmd_recordings_array = new (ResourceObj::C_HEAP, mtTracing)GrowableArray<JfrStartFlightRecordingDCmd*>(mtTracing, length);\n","filename":"src\/hotspot\/share\/jfr\/recorder\/jfrRecorder.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -331,1 +331,1 @@\n-    _file_names = new (ResourceObj::C_HEAP, mtTracing) GrowableArray<const char*>(10, mtTracing);\n+    _file_names = new (ResourceObj::C_HEAP, mtTracing) GrowableArray<const char*>(mtTracing, 10);\n","filename":"src\/hotspot\/share\/jfr\/recorder\/repository\/jfrEmergencyDump.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -772,1 +772,1 @@\n-    start_flight_recording_options_array = new (ResourceObj::C_HEAP, mtTracing) GrowableArray<const char*>(8, mtTracing);\n+    start_flight_recording_options_array = new (ResourceObj::C_HEAP, mtTracing) GrowableArray<const char*>(mtTracing, 8);\n","filename":"src\/hotspot\/share\/jfr\/recorder\/service\/jfrOptionSet.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -54,1 +54,1 @@\n-  return new (ResourceObj::C_HEAP, mtTracing) GrowableArray<T>(size, mtTracing);\n+  return new (ResourceObj::C_HEAP, mtTracing) GrowableArray<T>(mtTracing, size);\n","filename":"src\/hotspot\/share\/jfr\/support\/jfrJdkJfrEvent.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-  return new (ResourceObj::C_HEAP, mtTracing) GrowableArray<T>(size, mtTracing);\n+  return new (ResourceObj::C_HEAP, mtTracing) GrowableArray<T>(mtTracing, size);\n","filename":"src\/hotspot\/share\/jfr\/support\/jfrKlassUnloading.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1004,1 +1004,1 @@\n-  _oop_handles(100, mtJVMCI),\n+  _oop_handles(mtJVMCI, 100),\n","filename":"src\/hotspot\/share\/jvmci\/jvmciRuntime.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -54,1 +54,1 @@\n-    _subclasses = new  (ResourceObj::C_HEAP, mtServiceability) GrowableArray<KlassInfoEntry*>(4, mtServiceability);\n+    _subclasses = new  (ResourceObj::C_HEAP, mtServiceability) GrowableArray<KlassInfoEntry*>(mtServiceability, 4);\n@@ -282,1 +282,1 @@\n-  _elements = new (ResourceObj::C_HEAP, mtServiceability) GrowableArray<KlassInfoEntry*>(_histo_initial_size, mtServiceability);\n+  _elements = new (ResourceObj::C_HEAP, mtServiceability) GrowableArray<KlassInfoEntry*>(mtServiceability, _histo_initial_size);\n","filename":"src\/hotspot\/share\/memory\/heapInspection.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -176,1 +176,1 @@\n-  _global_code_blobs = new (ResourceObj::C_HEAP, mtServiceability) GrowableArray<JvmtiCodeBlobDesc*>(50, mtServiceability);\n+  _global_code_blobs = new (ResourceObj::C_HEAP, mtServiceability) GrowableArray<JvmtiCodeBlobDesc*>(mtServiceability, 50);\n","filename":"src\/hotspot\/share\/prims\/jvmtiCodeBlobEvents.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -135,2 +135,2 @@\n-    _deferred_locals_updates((ResourceObj::set_allocation_type((address) &_deferred_locals_updates,\n-                              ResourceObj::C_HEAP), 1), mtCompiler) { }\n+    _deferred_locals_updates(mtCompiler, (ResourceObj::set_allocation_type((address) &_deferred_locals_updates,\n+                              ResourceObj::C_HEAP), 1)) { }\n","filename":"src\/hotspot\/share\/prims\/jvmtiDeferredUpdates.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1361,1 +1361,1 @@\n-      new (ResourceObj::C_HEAP, mtServiceability) GrowableArray<jvmtiMonitorStackDepthInfo*>(1, mtServiceability);\n+      new (ResourceObj::C_HEAP, mtServiceability) GrowableArray<jvmtiMonitorStackDepthInfo*>(mtServiceability, 1);\n@@ -1434,1 +1434,1 @@\n-         new (ResourceObj::C_HEAP, mtServiceability) GrowableArray<jvmtiMonitorStackDepthInfo*>(1, mtServiceability);\n+         new (ResourceObj::C_HEAP, mtServiceability) GrowableArray<jvmtiMonitorStackDepthInfo*>(mtServiceability, 1);\n","filename":"src\/hotspot\/share\/prims\/jvmtiEnv.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1654,1 +1654,1 @@\n-  _allocations = new (ResourceObj::C_HEAP, mtServiceability) GrowableArray<unsigned char*>(20, mtServiceability);\n+  _allocations = new (ResourceObj::C_HEAP, mtServiceability) GrowableArray<unsigned char*>(mtServiceability, 20);\n","filename":"src\/hotspot\/share\/prims\/jvmtiEnvBase.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -98,1 +98,1 @@\n-  _pops = new (ResourceObj::C_HEAP, mtServiceability) GrowableArray<int> (2, mtServiceability);\n+  _pops = new (ResourceObj::C_HEAP, mtServiceability) GrowableArray<int>(mtServiceability, 2);\n","filename":"src\/hotspot\/share\/prims\/jvmtiEnvThreadState.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -3127,1 +3127,1 @@\n-   _code_blobs = new (ResourceObj::C_HEAP, mtServiceability) GrowableArray<JvmtiCodeBlobDesc*>(1, mtServiceability);\n+   _code_blobs = new (ResourceObj::C_HEAP, mtServiceability) GrowableArray<JvmtiCodeBlobDesc*>(mtServiceability, 1);\n@@ -3156,1 +3156,1 @@\n-    _allocated = new (ResourceObj::C_HEAP, mtServiceability) GrowableArray<OopHandle>(1, mtServiceability);\n+    _allocated = new (ResourceObj::C_HEAP, mtServiceability) GrowableArray<OopHandle>(mtServiceability, 1);\n","filename":"src\/hotspot\/share\/prims\/jvmtiExport.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -173,2 +173,2 @@\n-  _ext_functions = new (ResourceObj::C_HEAP, mtServiceability) GrowableArray<jvmtiExtensionFunctionInfo*>(1, mtServiceability);\n-  _ext_events = new (ResourceObj::C_HEAP, mtServiceability) GrowableArray<jvmtiExtensionEventInfo*>(1, mtServiceability);\n+  _ext_functions = new (ResourceObj::C_HEAP, mtServiceability) GrowableArray<jvmtiExtensionFunctionInfo*>(mtServiceability, 1);\n+  _ext_events = new (ResourceObj::C_HEAP, mtServiceability) GrowableArray<jvmtiExtensionEventInfo*>(mtServiceability, 1);\n","filename":"src\/hotspot\/share\/prims\/jvmtiExtensions.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -150,1 +150,1 @@\n-  _elements       = new (ResourceObj::C_HEAP, mtServiceability) GrowableArray<GrowableElement*>(5, mtServiceability);\n+  _elements       = new (ResourceObj::C_HEAP, mtServiceability) GrowableArray<GrowableElement*>(mtServiceability, 5);\n","filename":"src\/hotspot\/share\/prims\/jvmtiImpl.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-  new (ResourceObj::C_HEAP, mtServiceability) GrowableArray<JvmtiRawMonitor*>(1, mtServiceability);\n+  new (ResourceObj::C_HEAP, mtServiceability) GrowableArray<JvmtiRawMonitor*>(mtServiceability, 1);\n","filename":"src\/hotspot\/share\/prims\/jvmtiRawMonitor.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -107,1 +107,1 @@\n-    redef_classes = new(ResourceObj::C_HEAP, mtClass) GrowableArray<Klass*>(1, mtClass);\n+    redef_classes = new(ResourceObj::C_HEAP, mtClass) GrowableArray<Klass*>(mtClass, 1);\n","filename":"src\/hotspot\/share\/prims\/jvmtiRedefineClasses.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -446,1 +446,1 @@\n-    GrowableArray<ClassFieldDescriptor*>(initial_field_count, mtServiceability);\n+    GrowableArray<ClassFieldDescriptor*>(mtServiceability, initial_field_count);\n@@ -581,1 +581,1 @@\n-      GrowableArray<InstanceKlass*>(initial_class_count, mtServiceability);\n+      GrowableArray<InstanceKlass*>(mtServiceability, initial_class_count);\n@@ -1260,2 +1260,2 @@\n-    _object_results(new (ResourceObj::C_HEAP, mtServiceability) GrowableArray<jobject>(1, mtServiceability)),\n-    _tag_results(new (ResourceObj::C_HEAP, mtServiceability) GrowableArray<uint64_t>(1, mtServiceability)) { }\n+    _object_results(new (ResourceObj::C_HEAP, mtServiceability) GrowableArray<jobject>(mtServiceability, 1)),\n+    _tag_results(new (ResourceObj::C_HEAP, mtServiceability) GrowableArray<uint64_t>(mtServiceability, 1)) { }\n@@ -2278,1 +2278,1 @@\n-    return new (ResourceObj::C_HEAP, mtServiceability) GrowableArray<oop>(initial_visit_stack_size, mtServiceability);\n+    return new (ResourceObj::C_HEAP, mtServiceability) GrowableArray<oop>(mtServiceability, initial_visit_stack_size);\n","filename":"src\/hotspot\/share\/prims\/jvmtiTagMap.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2944,1 +2944,1 @@\n-    _patch_mod_prefix = new (ResourceObj::C_HEAP, mtArguments) GrowableArray<ModulePatchPath*>(10, mtArguments);\n+    _patch_mod_prefix = new (ResourceObj::C_HEAP, mtArguments) GrowableArray<ModulePatchPath*>(mtArguments, 10);\n","filename":"src\/hotspot\/share\/runtime\/arguments.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1256,4 +1256,4 @@\n-    _oops = new (ResourceObj::C_HEAP, mtThread) GrowableArray<oop*>(100, mtThread);\n-    _narrow_oops = new (ResourceObj::C_HEAP, mtThread) GrowableArray<narrowOop*>(100, mtThread);\n-    _base = new (ResourceObj::C_HEAP, mtThread) GrowableArray<oop*>(100, mtThread);\n-    _derived = new (ResourceObj::C_HEAP, mtThread) GrowableArray<derived_pointer*>(100, mtThread);\n+    _oops = new (ResourceObj::C_HEAP, mtThread) GrowableArray<oop*>(mtThread, 100);\n+    _narrow_oops = new (ResourceObj::C_HEAP, mtThread) GrowableArray<narrowOop*>(mtThread, 100);\n+    _base = new (ResourceObj::C_HEAP, mtThread) GrowableArray<oop*>(mtThread, 100);\n+    _derived = new (ResourceObj::C_HEAP, mtThread) GrowableArray<derived_pointer*>(mtThread, 100);\n","filename":"src\/hotspot\/share\/runtime\/frame.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -567,1 +567,1 @@\n-  _set = new(ResourceObj::C_HEAP, mtInternal) PerfDataArray(length, mtInternal);\n+  _set = new(ResourceObj::C_HEAP, mtInternal) PerfDataArray(mtInternal, length);\n@@ -572,1 +572,1 @@\n-  _set = new(ResourceObj::C_HEAP, mtInternal) PerfDataArray(p->length(), mtInternal);\n+  _set = new(ResourceObj::C_HEAP, mtInternal) PerfDataArray(mtInternal, p->length());\n","filename":"src\/hotspot\/share\/runtime\/perfData.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -73,1 +73,1 @@\n-  new (ResourceObj::C_HEAP, mtServiceability) GrowableArray<FilteredField*>(3, mtServiceability);\n+  new (ResourceObj::C_HEAP, mtServiceability) GrowableArray<FilteredField*>(mtServiceability, 3);\n","filename":"src\/hotspot\/share\/runtime\/reflectionUtils.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -90,1 +90,1 @@\n-  set_metadata_handles(new (ResourceObj::C_HEAP, mtClass) GrowableArray<Metadata*>(30, mtClass));\n+  set_metadata_handles(new (ResourceObj::C_HEAP, mtClass) GrowableArray<Metadata*>(mtClass, 30));\n","filename":"src\/hotspot\/share\/runtime\/thread.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-                    GrowableArray<UnhandledOopEntry>(free_list_size, mtThread);\n+                    GrowableArray<UnhandledOopEntry>(mtThread, free_list_size);\n","filename":"src\/hotspot\/share\/runtime\/unhandledOops.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -416,1 +416,1 @@\n-  _locals = new(ResourceObj::C_HEAP, mtCompiler) GrowableArray<jvmtiDeferredLocalVariable*> (1, mtCompiler);\n+  _locals = new(ResourceObj::C_HEAP, mtCompiler) GrowableArray<jvmtiDeferredLocalVariable*>(mtCompiler, 1);\n","filename":"src\/hotspot\/share\/runtime\/vframe_hp.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n-  _array = new (ResourceObj::C_HEAP, mtServiceability) GrowableArray<char *>(32, mtServiceability);\n+  _array = new (ResourceObj::C_HEAP, mtServiceability) GrowableArray<char *>(mtServiceability, 32);\n","filename":"src\/hotspot\/share\/services\/diagnosticArgument.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1924,1 +1924,1 @@\n-    _klass_map = new (ResourceObj::C_HEAP, mtServiceability) GrowableArray<Klass*>(INITIAL_CLASS_COUNT, mtServiceability);\n+    _klass_map = new (ResourceObj::C_HEAP, mtServiceability) GrowableArray<Klass*>(mtServiceability, INITIAL_CLASS_COUNT);\n","filename":"src\/hotspot\/share\/services\/heapDumper.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -47,1 +47,1 @@\n-  new (ResourceObj::C_HEAP, mtServiceability) GrowableArray<MemoryPool*>(init_pools_list_size, mtServiceability);\n+  new (ResourceObj::C_HEAP, mtServiceability) GrowableArray<MemoryPool*>(mtServiceability, init_pools_list_size);\n@@ -49,1 +49,1 @@\n-  new (ResourceObj::C_HEAP, mtServiceability) GrowableArray<MemoryManager*>(init_managers_list_size, mtServiceability);\n+  new (ResourceObj::C_HEAP, mtServiceability) GrowableArray<MemoryManager*>(mtServiceability, init_managers_list_size);\n@@ -53,1 +53,1 @@\n-    new (ResourceObj::C_HEAP, mtServiceability) GrowableArray<MemoryPool*>(init_code_heap_pools_size, mtServiceability);\n+    new (ResourceObj::C_HEAP, mtServiceability) GrowableArray<MemoryPool*>(mtServiceability, init_code_heap_pools_size);\n","filename":"src\/hotspot\/share\/services\/memoryService.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -605,1 +605,1 @@\n-      _locked_monitors = new (ResourceObj::C_HEAP, mtServiceability) GrowableArray<OopHandle>(length, mtServiceability);\n+      _locked_monitors = new (ResourceObj::C_HEAP, mtServiceability) GrowableArray<OopHandle>(mtServiceability, length);\n@@ -657,1 +657,1 @@\n-  _frames = new (ResourceObj::C_HEAP, mtServiceability) GrowableArray<StackFrameInfo*>(INITIAL_ARRAY_SIZE, mtServiceability);\n+  _frames = new (ResourceObj::C_HEAP, mtServiceability) GrowableArray<StackFrameInfo*>(mtServiceability, INITIAL_ARRAY_SIZE);\n@@ -661,1 +661,1 @@\n-    _jni_locked_monitors = new (ResourceObj::C_HEAP, mtServiceability) GrowableArray<OopHandle>(INITIAL_ARRAY_SIZE, mtServiceability);\n+    _jni_locked_monitors = new (ResourceObj::C_HEAP, mtServiceability) GrowableArray<OopHandle>(mtServiceability, INITIAL_ARRAY_SIZE);\n@@ -802,1 +802,1 @@\n-  GrowableArray<oop>* aos_objects = new (ResourceObj::C_HEAP, mtServiceability) GrowableArray<oop>(INITIAL_ARRAY_SIZE, mtServiceability);\n+  GrowableArray<oop>* aos_objects = new (ResourceObj::C_HEAP, mtServiceability) GrowableArray<oop>(mtServiceability, INITIAL_ARRAY_SIZE);\n@@ -876,1 +876,1 @@\n-  _owned_locks = new (ResourceObj::C_HEAP, mtServiceability) GrowableArray<OopHandle>(INITIAL_ARRAY_SIZE, mtServiceability);\n+  _owned_locks = new (ResourceObj::C_HEAP, mtServiceability) GrowableArray<OopHandle>(mtServiceability, INITIAL_ARRAY_SIZE);\n@@ -999,1 +999,1 @@\n-  _threads = new (ResourceObj::C_HEAP, mtServiceability) GrowableArray<JavaThread*>(INITIAL_ARRAY_SIZE, mtServiceability);\n+  _threads = new (ResourceObj::C_HEAP, mtServiceability) GrowableArray<JavaThread*>(mtServiceability, INITIAL_ARRAY_SIZE);\n","filename":"src\/hotspot\/share\/services\/threadService.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -602,5 +602,4 @@\n-  uintptr_t bits(MEMFLAGS memflags) const {\n-    if (memflags == mtNone) {\n-      \/\/ Stack allocation\n-      return 0;\n-    }\n+  \/\/ Resource allocation\n+  uintptr_t bits() const {\n+    return 0;\n+  }\n@@ -608,1 +607,3 @@\n-    \/\/ CHeap allocation\n+  \/\/ CHeap allocation\n+  uintptr_t bits(MEMFLAGS memflags) const {\n+    assert(memflags != mtNone, \"Must provide a proper MEMFLAGS\");\n@@ -612,0 +613,1 @@\n+  \/\/ Arena allocation\n@@ -617,0 +619,5 @@\n+  GrowableArrayMetadata() :\n+      _bits(bits())\n+      debug_only(COMMA _nesting_check(true)) {\n+  }\n+\n@@ -619,1 +626,1 @@\n-      debug_only(COMMA _nesting_check(on_stack())) {\n+      debug_only(COMMA _nesting_check(false)) {\n@@ -624,1 +631,1 @@\n-      debug_only(COMMA _nesting_check(on_stack())) {\n+      debug_only(COMMA _nesting_check(false)) {\n@@ -658,2 +665,2 @@\n-\/\/  - Resource stack allocation: if memflags == mtNone\n-\/\/  - CHeap allocation: if memflags != mtNone\n+\/\/  - Resource stack allocation: if no extra argument is provided\n+\/\/  - CHeap allocation: if memflags is provided\n@@ -682,5 +689,1 @@\n-    if (memflags != mtNone) {\n-      return (E*)GrowableArrayCHeapAllocator::allocate(max, sizeof(E), memflags);\n-    }\n-\n-    return (E*)GrowableArrayResourceAllocator::allocate(max, sizeof(E));\n+    return (E*)GrowableArrayCHeapAllocator::allocate(max, sizeof(E), memflags);\n@@ -723,1 +726,9 @@\n-  GrowableArray(int initial_capacity = 2, MEMFLAGS memflags = mtNone) :\n+  GrowableArray(int initial_capacity = 2) :\n+      GrowableArrayWithAllocator<E, GrowableArray<E> >(\n+          allocate(initial_capacity),\n+          initial_capacity),\n+      _metadata() {\n+    init_checks();\n+  }\n+\n+  GrowableArray(MEMFLAGS memflags, int initial_capacity = 2) :\n@@ -731,1 +742,9 @@\n-  GrowableArray(int initial_capacity, int initial_len, const E& filler, MEMFLAGS memflags = mtNone) :\n+  GrowableArray(int initial_capacity, int initial_len, const E& filler) :\n+      GrowableArrayWithAllocator<E, GrowableArray<E> >(\n+          allocate(initial_capacity),\n+          initial_capacity, initial_len, filler),\n+      _metadata() {\n+    init_checks();\n+  }\n+\n+  GrowableArray(MEMFLAGS memflags, int initial_capacity, int initial_len, const E& filler) :\n","filename":"src\/hotspot\/share\/utilities\/growableArray.hpp","additions":36,"deletions":17,"binary":false,"changes":53,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n-  WithEmbeddedArray(int initial_max, MEMFLAGS memflags) : _a(initial_max, memflags) {\n+  WithEmbeddedArray(MEMFLAGS memflags, int initial_max) : _a(memflags, initial_max) {\n@@ -388,1 +388,1 @@\n-      GrowableArray<int>* a = new (ResourceObj::C_HEAP, mtTest) GrowableArray<int>(max, mtTest);\n+      GrowableArray<int>* a = new (ResourceObj::C_HEAP, mtTest) GrowableArray<int>(mtTest, max);\n@@ -395,1 +395,1 @@\n-      GrowableArray<int> a(max, mtTest);\n+      GrowableArray<int> a(mtTest, max);\n@@ -401,1 +401,1 @@\n-      WithEmbeddedArray w(max, mtTest);\n+      WithEmbeddedArray w(mtTest, max);\n@@ -465,1 +465,1 @@\n-  WithEmbeddedArray s(1, mtTest);\n+  WithEmbeddedArray s(mtTest, 1);\n@@ -488,1 +488,1 @@\n-    GrowableArray<int>* a = new (ResourceObj::C_HEAP, mtTest) GrowableArray<int>(0, mtTest);\n+    GrowableArray<int>* a = new (ResourceObj::C_HEAP, mtTest) GrowableArray<int>(mtTest, 0);\n@@ -507,1 +507,1 @@\n-    GrowableArray<int> a(0, mtTest);\n+    GrowableArray<int> a(mtTest, 0);\n@@ -530,1 +530,1 @@\n-    WithEmbeddedArray w(0, mtTest);\n+    WithEmbeddedArray w(mtTest, 0);\n@@ -546,1 +546,1 @@\n-  WithEmbeddedArray s(1, mtTest);\n+  WithEmbeddedArray s(mtTest, 1);\n@@ -553,2 +553,2 @@\n-  WithEmbeddedArray s(1, mtTest);\n-  WithEmbeddedArray c(1, mtTest);\n+  WithEmbeddedArray s(mtTest, 1);\n+  WithEmbeddedArray c(mtTest, 1);\n","filename":"test\/hotspot\/gtest\/utilities\/test_growableArray.cpp","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"}]}