{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,0 +34,1 @@\n+import sun.security.action.GetPropertyAction;\n@@ -393,0 +394,19 @@\n+\n+    \/**\n+     * Returns the {@link java.nio.charset.Charset Charset} object used in\n+     * the {@code Console}.\n+     * <p>\n+     * The returned charset corresponds to the input and output source\n+     * (e.g., keyboard and\/or display) specified by the host environment or user.\n+     * It may not necessarily be the same as the default charset returned from\n+     * {@link java.nio.charset.Charset#defaultCharset() Charset.defaultCharset()}.\n+     *\n+     * @return a {@link java.nio.charset.Charset Charset} object used in the\n+     *          {@code Console}\n+     * @since 17\n+     *\/\n+    public Charset charset() {\n+        assert CHARSET != null : \"charset() should not return null\";\n+        return CHARSET;\n+    }\n+\n@@ -399,1 +419,0 @@\n-    private Charset cs;\n@@ -554,1 +573,1 @@\n-    \/\/ Set up JavaIOAccess in SharedSecrets\n+    private static final Charset CHARSET;\n@@ -556,0 +575,13 @@\n+        String csname = encoding();\n+        Charset cs = null;\n+        if (csname == null) {\n+            csname = GetPropertyAction.privilegedGetProperty(\"sun.stdout.encoding\");\n+        }\n+        if (csname != null) {\n+            try {\n+                cs = Charset.forName(csname);\n+            } catch (Exception ignored) { }\n+        }\n+        CHARSET = cs == null ? Charset.defaultCharset() : cs;\n+\n+        \/\/ Set up JavaIOAccess in SharedSecrets\n@@ -565,6 +597,0 @@\n-\n-            public Charset charset() {\n-                \/\/ This method is called in sun.security.util.Password,\n-                \/\/ cons already exists when this method is called\n-                return cons.cs;\n-            }\n@@ -578,8 +604,0 @@\n-        String csname = encoding();\n-        if (csname != null) {\n-            try {\n-                cs = Charset.forName(csname);\n-            } catch (Exception x) {}\n-        }\n-        if (cs == null)\n-            cs = Charset.defaultCharset();\n@@ -589,1 +607,1 @@\n-                  cs);\n+                  CHARSET);\n@@ -595,1 +613,1 @@\n-                     cs));\n+                     CHARSET));\n","filename":"src\/java.base\/share\/classes\/java\/io\/Console.java","additions":37,"deletions":19,"binary":false,"changes":56,"status":"modified"},{"patch":"@@ -125,1 +125,4 @@\n-     * specified by the host environment or user.\n+     * specified by the host environment or user. The encoding used\n+     * in the conversion from characters to bytes is equivalent to\n+     * {@link Console#charset()} if the {@code Console} exists,\n+     * {@link Charset#defaultCharset()} otherwise.\n@@ -159,0 +162,3 @@\n+     * The encoding used in the conversion from characters to bytes is\n+     * equivalent to {@link Console#charset()} if the {@code Console}\n+     * exists, {@link Charset#defaultCharset()} otherwise.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/System.java","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,2 +32,1 @@\n-    public Console console();\n-    public Charset charset();\n+    Console console();\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/access\/JavaIOAccess.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,1 +32,0 @@\n-import jdk.internal.access.SharedSecrets;\n@@ -143,1 +142,1 @@\n-                enc = SharedSecrets.getJavaIOAccess()\n+                enc = System.console()\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/Password.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -457,0 +457,6 @@\n+    if (isatty(STDOUT_FILENO) == 1) {\n+        sprops.sun_stdout_encoding = sprops.encoding;\n+    }\n+    if (isatty(STDERR_FILENO) == 1) {\n+        sprops.sun_stderr_encoding = sprops.encoding;\n+    }\n","filename":"src\/java.base\/unix\/native\/libjava\/java_props_md.c","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -60,0 +60,2 @@\n+    else if (cp == 65001)\n+        sprintf(buf, \"UTF-8\");\n","filename":"src\/java.base\/windows\/native\/libjava\/Console_md.c","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -83,0 +83,1 @@\n+    case 65001:\n","filename":"src\/java.base\/windows\/native\/libjava\/java_props_md.c","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -0,0 +1,41 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.io.Console;\n+\n+\/**\n+ * @test\n+ * @bug 8264208\n+ * @summary Tests Console.charset() method\n+ * @build CharsetTest\n+ * @run shell runCharsetTest.sh en_US.ISO8859-1 ISO-8859-1\n+ * @run shell runCharsetTest.sh en_US.US-ASCII US-ASCII\n+ * @run shell runCharsetTest.sh en_US.UTF-8 UTF-8\n+ * @run shell runCharsetTest.sh en_US.FOO ignored\n+ *\/\n+public class CharsetTest {\n+    public static void main(String... args) {\n+        Console con = System.console();\n+        System.out.println(con.charset());\n+    }\n+}\n","filename":"test\/jdk\/java\/io\/Console\/CharsetTest.java","additions":41,"deletions":0,"binary":false,"changes":41,"status":"added"},{"patch":"@@ -0,0 +1,51 @@\n+# Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+\n+#! \/bin\/sh\n+#\n+\n+# Cygwin's `expect` command does not emulate console\n+OS=`uname -s`\n+case \"$OS\" in\n+  Windows* | CYGWIN* )\n+    echo \"Cygwin's `expect` command does not emulate console. Test ignored.\"\n+    exit 0\n+esac\n+\n+locale=$1\n+encoding=$2\n+\n+if [ -f \/usr\/bin\/expect ]\n+then\n+    EXPECT=\/usr\/bin\/expect\n+else\n+    echo \"expect command does not exist. test ignored\"\n+    exit 0\n+fi\n+\n+if $EXPECT -n $TESTSRC\/script.exp $TESTJAVA\/bin\/java $locale $encoding $TESTCLASSES ${TESTVMOPTS} ; then\n+    echo \"TEST PASSED!\"\n+    exit 0\n+else\n+    echo \"TEST FAILED!\"\n+    exit 1\n+fi\n","filename":"test\/jdk\/java\/io\/Console\/runCharsetTest.sh","additions":51,"deletions":0,"binary":false,"changes":51,"status":"added"},{"patch":"@@ -0,0 +1,42 @@\n+#\n+# Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+\n+set java [lrange $argv 0 0]\n+set locale [lrange $argv 1 1]\n+set expected [lrange $argv 2 2]\n+set args [lrange $argv 3 end]\n+regexp {([a-zA-Z_]*).([a-zA-Z0-9\\-]*)} $locale dummy lang_region encoding\n+\n+eval spawn $java -Dsun.stdout.encoding=$encoding -classpath $args CharsetTest\n+if {$encoding == \"FOO\"} then \\\n+    {expect \"UTF-8\"} \\\n+else \\\n+    {expect $expected}\n+\n+eval spawn env LANG=$locale LC_ALL=$locale $java -classpath $args CharsetTest\n+if {$encoding == \"FOO\"} then \\\n+    {expect \"US-ASCII\"} \\\n+else \\\n+    {expect $expected}\n+\n+expect eof\n","filename":"test\/jdk\/java\/io\/Console\/script.exp","additions":42,"deletions":0,"binary":false,"changes":42,"status":"added"}]}