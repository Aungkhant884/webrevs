{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,0 +34,1 @@\n+import sun.security.action.GetPropertyAction;\n@@ -393,0 +394,19 @@\n+\n+    \/**\n+     * Returns the {@link java.nio.charset.Charset Charset} object used for\n+     * the {@code Console}.\n+     * <p>\n+     * The returned charset corresponds to the input and output source\n+     * (e.g., keyboard and\/or display) specified by the host environment or user.\n+     * It may not necessarily be the same as the default charset returned from\n+     * {@link java.nio.charset.Charset#defaultCharset() Charset.defaultCharset()}.\n+     *\n+     * @return a {@link java.nio.charset.Charset Charset} object used for the\n+     *          {@code Console}\n+     * @since 17\n+     *\/\n+    public Charset charset() {\n+        assert CHARSET != null : \"charset() should not return null\";\n+        return CHARSET;\n+    }\n+\n@@ -399,1 +419,0 @@\n-    private Charset cs;\n@@ -554,1 +573,1 @@\n-    \/\/ Set up JavaIOAccess in SharedSecrets\n+    private static final Charset CHARSET;\n@@ -556,0 +575,13 @@\n+        String csname = encoding();\n+        Charset cs = null;\n+        if (csname == null) {\n+            csname = GetPropertyAction.privilegedGetProperty(\"sun.stdout.encoding\");\n+        }\n+        if (csname != null) {\n+            try {\n+                cs = Charset.forName(csname);\n+            } catch (Exception ignored) { }\n+        }\n+        CHARSET = cs == null ? Charset.defaultCharset() : cs;\n+\n+        \/\/ Set up JavaIOAccess in SharedSecrets\n@@ -565,6 +597,0 @@\n-\n-            public Charset charset() {\n-                \/\/ This method is called in sun.security.util.Password,\n-                \/\/ cons already exists when this method is called\n-                return cons.cs;\n-            }\n@@ -578,8 +604,0 @@\n-        String csname = encoding();\n-        if (csname != null) {\n-            try {\n-                cs = Charset.forName(csname);\n-            } catch (Exception x) {}\n-        }\n-        if (cs == null)\n-            cs = Charset.defaultCharset();\n@@ -589,1 +607,1 @@\n-                  cs);\n+                  CHARSET);\n@@ -595,1 +613,1 @@\n-                     cs));\n+                     CHARSET));\n","filename":"src\/java.base\/share\/classes\/java\/io\/Console.java","additions":37,"deletions":19,"binary":false,"changes":56,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n- * default charset may be accepted.\n+ * {@link Charset#defaultCharset() default charset} may be accepted.\n@@ -51,1 +51,1 @@\n- *   = new BufferedReader(new InputStreamReader(System.in));\n+ *   = new BufferedReader(new InputStreamReader(anInputStream));\n@@ -67,1 +67,2 @@\n-     * Creates an InputStreamReader that uses the default charset.\n+     * Creates an InputStreamReader that uses the\n+     * {@link Charset#defaultCharset() default charset}.\n@@ -70,0 +71,2 @@\n+     *\n+     * @see Charset#defaultCharset()\n","filename":"src\/java.base\/share\/classes\/java\/io\/InputStreamReader.java","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -117,1 +117,7 @@\n-     * the host environment or user.\n+     * the host environment or user. In case this stream is wrapped\n+     * in a {@link java.io.InputStreamReader}, {@link Console#charset()}\n+     * should be used for the charset, or consider using\n+     * {@link Console#reader()}.\n+     *\n+     * @see Console#charset()\n+     * @see Console#reader()\n@@ -125,1 +131,4 @@\n-     * specified by the host environment or user.\n+     * specified by the host environment or user. The encoding used\n+     * in the conversion from characters to bytes is equivalent to\n+     * {@link Console#charset()} if the {@code Console} exists,\n+     * {@link Charset#defaultCharset()} otherwise.\n@@ -145,0 +154,2 @@\n+     * @see     Console#charset()\n+     * @see     Charset#defaultCharset()\n@@ -159,0 +170,6 @@\n+     * The encoding used in the conversion from characters to bytes is\n+     * equivalent to {@link Console#charset()} if the {@code Console}\n+     * exists, {@link Charset#defaultCharset()} otherwise.\n+     *\n+     * @see     Console#charset()\n+     * @see     Charset#defaultCharset()\n@@ -2017,0 +2034,3 @@\n+        \/\/ sun.stdout\/err.encoding are set when the VM is associated with the terminal,\n+        \/\/ thus they are equivalent to Console.charset(), otherwise the encoding\n+        \/\/ defaults to Charset.defaultCharset()\n","filename":"src\/java.base\/share\/classes\/java\/lang\/System.java","additions":22,"deletions":2,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,2 +32,1 @@\n-    public Console console();\n-    public Charset charset();\n+    Console console();\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/access\/JavaIOAccess.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,1 +32,0 @@\n-import jdk.internal.access.SharedSecrets;\n@@ -143,1 +142,1 @@\n-                enc = SharedSecrets.getJavaIOAccess()\n+                enc = System.console()\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/Password.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -457,0 +457,6 @@\n+    if (isatty(STDOUT_FILENO) == 1) {\n+        sprops.sun_stdout_encoding = sprops.encoding;\n+    }\n+    if (isatty(STDERR_FILENO) == 1) {\n+        sprops.sun_stderr_encoding = sprops.encoding;\n+    }\n","filename":"src\/java.base\/unix\/native\/libjava\/java_props_md.c","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -60,0 +60,2 @@\n+    else if (cp == 65001)\n+        sprintf(buf, \"UTF-8\");\n","filename":"src\/java.base\/windows\/native\/libjava\/Console_md.c","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -83,0 +83,1 @@\n+    case 65001:\n","filename":"src\/java.base\/windows\/native\/libjava\/java_props_md.c","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -0,0 +1,77 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.io.Console;\n+import java.nio.file.Files;\n+import java.nio.file.Paths;\n+\n+import jdk.test.lib.process.OutputAnalyzer;\n+import jdk.test.lib.process.ProcessTools;\n+\n+\/**\n+ * @test\n+ * @bug 8264208\n+ * @summary Tests Console.charset() method. \"expect\" command in Windows\/Cygwin\n+ *          does not work as expected. Ignoring tests on Windows.\n+ * @requires (os.family == \"linux\") | (os.family == \"mac\")\n+ * @library \/test\/lib\n+ * @run main CharsetTest en_US.ISO8859-1 ISO-8859-1\n+ * @run main CharsetTest en_US.US-ASCII US-ASCII\n+ * @run main CharsetTest en_US.UTF-8 UTF-8\n+ * @run main CharsetTest en_US.FOO ignored\n+ *\/\n+public class CharsetTest {\n+    public static void main(String... args) throws Throwable {\n+        if (args.length == 0) {\n+            \/\/ no arg means child java process being tested.\n+            Console con = System.console();\n+            System.out.println(con.charset());\n+            return;\n+        } else {\n+            \/\/ check \"expect\" command availability\n+            var expect = Paths.get(\"\/usr\/bin\/expect\");\n+            if (!Files.exists(expect) || !Files.isExecutable(expect)) {\n+                System.out.println(\"'expect' command not found. Test ignored.\");\n+                return;\n+            }\n+\n+            \/\/ invoking \"expect\" command\n+            var testSrc = System.getProperty(\"test.src\", \".\");\n+            var testClasses = System.getProperty(\"test.classes\", \".\");\n+            var jdkDir = System.getProperty(\"test.jdk\");\n+            OutputAnalyzer output = ProcessTools.executeProcess(\n+                    \"expect\",\n+                    \"-n\",\n+                    testSrc + \"\/script.exp\",\n+                    jdkDir + \"\/bin\/java\",\n+                    args[0],\n+                    args[1],\n+                    testClasses);\n+            output.reportDiagnosticSummary();\n+            var eval = output.getExitValue();\n+            if (eval != 0) {\n+                throw new RuntimeException(\"Test failed. Exit value from 'expect' command: \" + eval);\n+            }\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/io\/Console\/CharsetTest.java","additions":77,"deletions":0,"binary":false,"changes":77,"status":"added"},{"patch":"@@ -0,0 +1,42 @@\n+#\n+# Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+\n+set java [lrange $argv 0 0]\n+set locale [lrange $argv 1 1]\n+set expected [lrange $argv 2 2]\n+set args [lrange $argv 3 end]\n+regexp {([a-zA-Z_]*).([a-zA-Z0-9\\-]*)} $locale dummy lang_region encoding\n+\n+eval spawn $java -Dsun.stdout.encoding=$encoding -classpath $args CharsetTest\n+if {$encoding == \"FOO\"} then \\\n+    {expect \"UTF-8\"} \\\n+else \\\n+    {expect $expected}\n+\n+eval spawn env LANG=$locale LC_ALL=$locale $java -classpath $args CharsetTest\n+if {$encoding == \"FOO\"} then \\\n+    {expect \"US-ASCII\"} \\\n+else \\\n+    {expect $expected}\n+\n+expect eof\n","filename":"test\/jdk\/java\/io\/Console\/script.exp","additions":42,"deletions":0,"binary":false,"changes":42,"status":"added"}]}