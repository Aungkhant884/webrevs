{"files":[{"patch":"@@ -118,1 +118,1 @@\n-                    String name = names[scripts[j][2]].toUpperCase(Locale.ENGLISH);;\n+                    String name = names[scripts[j][2]].toUpperCase(Locale.ENGLISH);\n","filename":"make\/jdk\/src\/classes\/build\/tools\/generatecharacter\/CharacterScript.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -216,1 +216,1 @@\n-                super.visitClassDef(tree);;\n+                super.visitClassDef(tree);\n","filename":"make\/langtools\/tools\/genstubs\/GenStubs.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2015,1 +2015,1 @@\n-            int suffixLength = suffix.length();;\n+            int suffixLength = suffix.length();\n","filename":"src\/java.base\/share\/classes\/java\/io\/File.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1043,1 +1043,1 @@\n-        Entry<K, V>[] tab = getTable();;\n+        Entry<K, V>[] tab = getTable();\n","filename":"src\/java.base\/share\/classes\/java\/util\/WeakHashMap.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -374,1 +374,1 @@\n-                PlatformLogger.ConfigurableBridge.getLoggerConfiguration(loggerProxy);;\n+                PlatformLogger.ConfigurableBridge.getLoggerConfiguration(loggerProxy);\n","filename":"src\/java.base\/share\/classes\/sun\/util\/logging\/PlatformLogger.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -969,1 +969,1 @@\n-        \/\/                                   \"component bounds is \" + cBounds);;\n+        \/\/                                   \"component bounds is \" + cBounds);\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/RepaintManager.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -179,1 +179,1 @@\n-                    buffer.setLength(0);;\n+                    buffer.setLength(0);\n","filename":"src\/java.rmi\/share\/classes\/java\/rmi\/server\/LogStream.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -137,2 +137,2 @@\n-        byte[] c = cstring.getBytes(StandardCharsets.UTF_8);;\n-        byte[] s = sstring.getBytes(StandardCharsets.UTF_8);;\n+        byte[] c = cstring.getBytes(StandardCharsets.UTF_8);\n+        byte[] s = sstring.getBytes(StandardCharsets.UTF_8);\n","filename":"src\/java.security.jgss\/share\/classes\/sun\/security\/krb5\/internal\/rcache\/AuthTime.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -279,1 +279,1 @@\n-        this.crsResolve = new CachedRowSetImpl();;\n+        this.crsResolve = new CachedRowSetImpl();\n","filename":"src\/java.sql.rowset\/share\/classes\/com\/sun\/rowset\/internal\/CachedRowSetWriter.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -538,1 +538,1 @@\n-        SerialStruct s = new SerialStruct(x,map);;\n+        SerialStruct s = new SerialStruct(x,map);\n","filename":"src\/java.sql.rowset\/share\/classes\/javax\/sql\/rowset\/serial\/SQLOutputImpl.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1014,1 +1014,1 @@\n-                        : _xsltc.registerNamespacePrefix(name);;\n+                        : _xsltc.registerNamespacePrefix(name);\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xalan\/internal\/xsltc\/compiler\/XPathParser.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -496,1 +496,1 @@\n-        private Map<String, Processor> namedProcessorsMap = new HashMap<>();;\n+        private Map<String, Processor> namedProcessorsMap = new HashMap<>();\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/processing\/JavacProcessingEnvironment.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -81,1 +81,1 @@\n-        ZObjectAlignmentLargeShift = db.lookupIntConstant(\"ZObjectAlignmentLargeShift\").intValue();;\n+        ZObjectAlignmentLargeShift = db.lookupIntConstant(\"ZObjectAlignmentLargeShift\").intValue();\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/gc\/z\/ZGlobals.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -82,1 +82,1 @@\n-      iterated = end.minus(base);;\n+      iterated = end.minus(base);\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/ui\/FindInCodeCachePanel.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -198,1 +198,1 @@\n-      updates = new ArrayList<>();;\n+      updates = new ArrayList<>();\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/ui\/FindInHeapPanel.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -133,1 +133,1 @@\n-            position.type_index = cr.readUnsignedShort();;\n+            position.type_index = cr.readUnsignedShort();\n","filename":"src\/jdk.jdeps\/share\/classes\/com\/sun\/tools\/classfile\/TypeAnnotation.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -55,1 +55,1 @@\n-            start = EventHandler.timestamp();;\n+            start = EventHandler.timestamp();\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/instrument\/SocketChannelImplInstrumentor.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -66,1 +66,1 @@\n-        printArrayEnd();;\n+        printArrayEnd();\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/tool\/JSONWriter.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -305,1 +305,1 @@\n-            this.all = EnumSet.allOf(FormatCase.class);;\n+            this.all = EnumSet.allOf(FormatCase.class);\n","filename":"src\/jdk.jshell\/share\/classes\/jdk\/internal\/jshell\/tool\/Selector.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -976,1 +976,1 @@\n-            String arguments = atts.getValue(\"arguments\");;\n+            String arguments = atts.getValue(\"arguments\");\n","filename":"src\/utils\/LogCompilation\/src\/main\/java\/com\/sun\/hotspot\/tools\/compiler\/LogParser.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -244,1 +244,1 @@\n-        Object b = new Object();;\n+        Object b = new Object();\n@@ -254,1 +254,1 @@\n-        Object b = new Object();;\n+        Object b = new Object();\n@@ -265,1 +265,1 @@\n-        Object b = new Object();;\n+        Object b = new Object();\n@@ -275,1 +275,1 @@\n-        Object b = new Object();;\n+        Object b = new Object();\n","filename":"test\/hotspot\/jtreg\/compiler\/codegen\/Test6909839.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -247,1 +247,1 @@\n-        Map<Class<?>, Object> map = new HashMap<>();;\n+        Map<Class<?>, Object> map = new HashMap<>();\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/compilerToVM\/CompileCodeTestCase.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-    private static final Unsafe UNSAFE = Unsafe.getUnsafe();;\n+    private static final Unsafe UNSAFE = Unsafe.getUnsafe();\n","filename":"test\/hotspot\/jtreg\/compiler\/unsafe\/TestMisalignedUnsafeAccess.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -456,1 +456,1 @@\n-        opts.addSuffix(suffix).setXShareMode(\"off\");;\n+        opts.addSuffix(suffix).setXShareMode(\"off\");\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/TestCommon.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -57,1 +57,1 @@\n-            JarBuilder.build(true, \"WhiteBox\", \"sun\/hotspot\/WhiteBox\");;\n+            JarBuilder.build(true, \"WhiteBox\", \"sun\/hotspot\/WhiteBox\");\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/customLoader\/SameNameInTwoLoadersTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -593,1 +593,1 @@\n-            ((ABBox) dontinline_endlessLoop(new ABBox(this))).synchronizedSlowInc();;\n+            ((ABBox) dontinline_endlessLoop(new ABBox(this))).synchronizedSlowInc();\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/Heap\/IterateHeapWithEscapeAnalysisEnabled.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -96,1 +96,1 @@\n-            int startPercentage = Integer.parseInt(start.substring(0, start.length() - 1));;\n+            int startPercentage = Integer.parseInt(start.substring(0, start.length() - 1));\n","filename":"test\/hotspot\/jtreg\/testlibrary\/ctw\/src\/sun\/hotspot\/tools\/ctw\/CtwRunner.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -195,1 +195,1 @@\n-         throw new TestFailure(\"Test failed.\");;\n+         throw new TestFailure(\"Test failed.\");\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/jit\/series\/series.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -175,1 +175,1 @@\n-        Vector v = new Vector();;\n+        Vector v = new Vector();\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/unmonitor\/unmonitor001\/unmonitor001.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -149,1 +149,1 @@\n-                            ReferenceType testedClass = clsEvent.referenceType();;\n+                            ReferenceType testedClass = clsEvent.referenceType();\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/BScenarios\/multithrd\/tc02x003.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -169,1 +169,1 @@\n-            ClassObjectReference class_obj_ref = refType.classObject();;\n+            ClassObjectReference class_obj_ref = refType.classObject();\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ClassObjectReference\/reflectedType\/reflectype002.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -418,1 +418,1 @@\n-                    log3(\"ERROR:  IllegalArgumentException for i3 in stackFrame\");;\n+                    log3(\"ERROR:  IllegalArgumentException for i3 in stackFrame\");\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/LocalVariable\/isVisible\/isvisible001.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -376,1 +376,1 @@\n-                        frameList = thread2.frames();;\n+                        frameList = thread2.frames();\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ThreadReference\/frames\/frames001.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -82,1 +82,1 @@\n-            while(!MyThread.resume2.get());;\n+            while(!MyThread.resume2.get());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/hotswap\/HS203\/hs203t002\/hs203t002.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -187,1 +187,1 @@\n-            String vmAddress = makeTransportAddress();;\n+            String vmAddress = makeTransportAddress();\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jdb\/Launcher.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -244,1 +244,1 @@\n-        expectedMinorVersion = in.readShort();;\n+        expectedMinorVersion = in.readShort();\n","filename":"test\/jdk\/com\/sun\/jdi\/ConstantPoolInfo.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-    static Gen1<String> genField = new Gen1<String>();;\n+    static Gen1<String> genField = new Gen1<String>();\n","filename":"test\/jdk\/com\/sun\/jdi\/GenericsTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -89,1 +89,1 @@\n-                    JButton component = new JButton(\"JButton 1\");;\n+                    JButton component = new JButton(\"JButton 1\");\n","filename":"test\/jdk\/java\/awt\/Component\/CompEventOnHiddenComponent\/CompEventOnHiddenComponent.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -84,1 +84,1 @@\n-                    new Long(hwnd)});;\n+                    new Long(hwnd)});\n","filename":"test\/jdk\/java\/awt\/EmbeddedFrame\/EmbeddedFrameGrabTest\/EmbeddedFrameGrabTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -68,1 +68,1 @@\n-        Container cont = getParent();;\n+        Container cont = getParent();\n","filename":"test\/jdk\/java\/awt\/PrintJob\/PrintArcTest\/PrintArcTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-        graphics2D.dispose();;\n+        graphics2D.dispose();\n","filename":"test\/jdk\/java\/awt\/SplashScreen\/GenerateTestImage.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-            pj = PrinterJob.getPrinterJob();;\n+            pj = PrinterJob.getPrinterJob();\n","filename":"test\/jdk\/java\/awt\/print\/PrinterJob\/PrtException.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -157,1 +157,1 @@\n-                    al.add(new Space(m.group(2), m.group(3), name));;\n+                    al.add(new Space(m.group(2), m.group(3), name));\n","filename":"test\/jdk\/java\/io\/File\/GetXSpace.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -57,1 +57,1 @@\n-                        ps[1].substring(0, 4));;\n+                        ps[1].substring(0, 4));\n","filename":"test\/jdk\/java\/io\/File\/createTempFile\/NameTooLong.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-        RandomAccessFile raf = new RandomAccessFile(fn , \"rw\");;\n+        RandomAccessFile raf = new RandomAccessFile(fn , \"rw\");\n","filename":"test\/jdk\/java\/io\/RandomAccessFile\/WriteBytesChars.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -123,1 +123,1 @@\n-                byte[] classData = getClass(name);;\n+                byte[] classData = getClass(name);\n","filename":"test\/jdk\/java\/lang\/invoke\/8022701\/BogoLoader.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -124,1 +124,1 @@\n-                byte[] classData = getClass(name);;\n+                byte[] classData = getClass(name);\n","filename":"test\/jdk\/java\/lang\/invoke\/accessProtectedSuper\/BogoLoader.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-    private static final Long VALUE3   = new Long(0);;\n+    private static final Long VALUE3   = new Long(0);\n","filename":"test\/jdk\/java\/lang\/management\/RuntimeMXBean\/GetSystemProperties.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -488,1 +488,1 @@\n-        assertTrue(subscriber.items.isEmpty());;\n+        assertTrue(subscriber.items.isEmpty());\n","filename":"test\/jdk\/java\/net\/httpclient\/AggregateRequestBodyTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -105,1 +105,1 @@\n-                Socket client=_listener.accept().socket();;\n+                Socket client=_listener.accept().socket();\n","filename":"test\/jdk\/java\/nio\/channels\/SocketChannel\/CloseTimeoutChannel.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -71,1 +71,1 @@\n-        Remote impl = new DGCImplInsulation();;\n+        Remote impl = new DGCImplInsulation();\n","filename":"test\/jdk\/java\/rmi\/dgc\/dgcImplInsulation\/DGCImplInsulation.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1075,1 +1075,1 @@\n-         OffsetDateTime after_time_of_stdOffsetTransition1 = OffsetDateTime.of(time_of_stdOffsetTransition1, stdOffset1).plusSeconds(1);;\n+         OffsetDateTime after_time_of_stdOffsetTransition1 = OffsetDateTime.of(time_of_stdOffsetTransition1, stdOffset1).plusSeconds(1);\n","filename":"test\/jdk\/java\/time\/tck\/java\/time\/zone\/TCKZoneRules.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -450,1 +450,1 @@\n-                expected = (System.getSecurityManager() == null ? global : global2);;\n+                expected = (System.getSecurityManager() == null ? global : global2);\n","filename":"test\/jdk\/java\/util\/logging\/TestAppletLoggerContext.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -137,1 +137,1 @@\n-        capabilities = SSLExplorer.explore(buffer, 0, recordLength);;\n+        capabilities = SSLExplorer.explore(buffer, 0, recordLength);\n","filename":"test\/jdk\/javax\/net\/ssl\/ServerName\/SSLSocketExplorer.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -138,1 +138,1 @@\n-            capabilities = SSLExplorer.explore(buffer, 0, recordLength);;\n+            capabilities = SSLExplorer.explore(buffer, 0, recordLength);\n","filename":"test\/jdk\/javax\/net\/ssl\/ServerName\/SSLSocketExplorerFailure.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -141,1 +141,1 @@\n-        capabilities = SSLExplorer.explore(buffer, 0, recordLength);;\n+        capabilities = SSLExplorer.explore(buffer, 0, recordLength);\n","filename":"test\/jdk\/javax\/net\/ssl\/ServerName\/SSLSocketExplorerMatchedSNI.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -133,1 +133,1 @@\n-        capabilities = SSLExplorer.explore(buffer, 0, recordLength);;\n+        capabilities = SSLExplorer.explore(buffer, 0, recordLength);\n","filename":"test\/jdk\/javax\/net\/ssl\/ServerName\/SSLSocketExplorerUnmatchedSNI.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -132,1 +132,1 @@\n-        capabilities = SSLExplorer.explore(buffer, 0, recordLength);;\n+        capabilities = SSLExplorer.explore(buffer, 0, recordLength);\n","filename":"test\/jdk\/javax\/net\/ssl\/ServerName\/SSLSocketExplorerWithCliSNI.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -132,1 +132,1 @@\n-        capabilities = SSLExplorer.explore(buffer, 0, recordLength);;\n+        capabilities = SSLExplorer.explore(buffer, 0, recordLength);\n","filename":"test\/jdk\/javax\/net\/ssl\/ServerName\/SSLSocketExplorerWithSrvSNI.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-        ModelIdentifier id = new ModelIdentifier(\"test\",\"a\",1);;\n+        ModelIdentifier id = new ModelIdentifier(\"test\",\"a\",1);\n","filename":"test\/jdk\/javax\/sound\/midi\/Gervill\/ModelIdentifier\/NewModelIdentifierStringStringInt.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -59,1 +59,1 @@\n-        v = soft.synth.getVoiceStatus();;\n+        v = soft.synth.getVoiceStatus();\n","filename":"test\/jdk\/javax\/sound\/midi\/Gervill\/SoftChannel\/NoteOff.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -59,1 +59,1 @@\n-        v = soft.synth.getVoiceStatus();;\n+        v = soft.synth.getVoiceStatus();\n","filename":"test\/jdk\/javax\/sound\/midi\/Gervill\/SoftChannel\/NoteOff2.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -358,1 +358,1 @@\n-        InputStream is = new StringBufferInputStream(query);;\n+        InputStream is = new StringBufferInputStream(query);\n","filename":"test\/jdk\/javax\/sql\/testng\/test\/rowset\/BaseRowSetTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -186,1 +186,1 @@\n-        URL u = new URL(\"http:\/\/www.oracle.com\/\");;\n+        URL u = new URL(\"http:\/\/www.oracle.com\/\");\n","filename":"test\/jdk\/javax\/sql\/testng\/test\/rowset\/serial\/SQLInputImplTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -233,1 +233,1 @@\n-        SerialArray sa1 = serializeDeserializeObject(sa);;\n+        SerialArray sa1 = serializeDeserializeObject(sa);\n","filename":"test\/jdk\/javax\/sql\/testng\/test\/rowset\/serial\/SerialArrayTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -111,1 +111,1 @@\n-                && ex1.getErrorCode() == 0);;\n+                && ex1.getErrorCode() == 0);\n","filename":"test\/jdk\/javax\/sql\/testng\/test\/rowset\/serial\/SerialExceptionTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -137,1 +137,1 @@\n-        SerialStruct ss1 = serializeDeserializeObject(ss);;\n+        SerialStruct ss1 = serializeDeserializeObject(ss);\n","filename":"test\/jdk\/javax\/sql\/testng\/test\/rowset\/serial\/SerialStructTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -197,1 +197,1 @@\n-               r2.dump(twoEventTypes);;\n+               r2.dump(twoEventTypes);\n@@ -201,1 +201,1 @@\n-           r1.dump(threeEventTypes);;\n+           r1.dump(threeEventTypes);\n","filename":"test\/jdk\/jdk\/jfr\/api\/consumer\/TestRecordingFile.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -92,1 +92,1 @@\n-                        success.set(true);;\n+                        success.set(true);\n","filename":"test\/jdk\/jdk\/jfr\/api\/consumer\/filestream\/TestReuse.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -104,1 +104,1 @@\n-            CommonHelper.waitForSystemCurrentMillisToChange();;\n+            CommonHelper.waitForSystemCurrentMillisToChange();\n@@ -113,1 +113,1 @@\n-            CommonHelper.waitForSystemCurrentMillisToChange();;\n+            CommonHelper.waitForSystemCurrentMillisToChange();\n","filename":"test\/jdk\/jdk\/jfr\/api\/recording\/event\/TestEventTime.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -61,2 +61,2 @@\n-        testDefaultSettings();;\n-        testProfileSettings();;\n+        testDefaultSettings();\n+        testProfileSettings();\n","filename":"test\/jdk\/jdk\/jfr\/event\/runtime\/TestActiveSettingEvent.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -61,1 +61,1 @@\n-    public static final String PLAIN_TOOLTIP_COMP_TITLE = resourceManager.getString(\"ToolTipDemo.plain\");;\n+    public static final String PLAIN_TOOLTIP_COMP_TITLE = resourceManager.getString(\"ToolTipDemo.plain\");\n@@ -63,1 +63,1 @@\n-    public static final String HTML_TOOLTIP_COMP_TITLE = resourceManager.getString(\"ToolTipDemo.html\");;\n+    public static final String HTML_TOOLTIP_COMP_TITLE = resourceManager.getString(\"ToolTipDemo.html\");\n","filename":"test\/jdk\/sanity\/client\/lib\/SwingSet3\/src\/com\/sun\/swingset3\/demos\/tooltip\/ToolTipDemo.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -261,1 +261,1 @@\n-                                       cs.getMinValue(0);;\n+                                       cs.getMinValue(0);\n@@ -271,1 +271,1 @@\n-                                       cs.getMinValue(0);;\n+                                       cs.getMinValue(0);\n","filename":"test\/jdk\/sun\/java2d\/cmm\/ColorConvertOp\/ImageFactory.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -351,1 +351,1 @@\n-                        new ByteArrayInputStream(certStr.getBytes());;\n+                        new ByteArrayInputStream(certStr.getBytes());\n","filename":"test\/jdk\/sun\/security\/provider\/certpath\/DisabledAlgorithms\/CPBuilder.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -356,1 +356,1 @@\n-                        new ByteArrayInputStream(certStr.getBytes());;\n+                        new ByteArrayInputStream(certStr.getBytes());\n","filename":"test\/jdk\/sun\/security\/provider\/certpath\/DisabledAlgorithms\/CPBuilderWithMD5.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -137,1 +137,1 @@\n-            OutputAnalyzer output = ProcessTools.executeProcess(processBuilder);;\n+            OutputAnalyzer output = ProcessTools.executeProcess(processBuilder);\n@@ -174,1 +174,1 @@\n-            OutputAnalyzer output = ProcessTools.executeProcess(processBuilder);;\n+            OutputAnalyzer output = ProcessTools.executeProcess(processBuilder);\n","filename":"test\/jdk\/sun\/tools\/jhsdb\/BasicLauncherTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -126,1 +126,1 @@\n-            this.uses = uses != null ? uses : Collections.emptySet();;\n+            this.uses = uses != null ? uses : Collections.emptySet();\n","filename":"test\/jdk\/tools\/jar\/modularJar\/Basic.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -15,1 +15,1 @@\n-            int save = getVersion();;\n+            int save = getVersion();\n","filename":"test\/jdk\/tools\/jar\/multiRelease\/data\/test13\/v10\/version\/Nested.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -107,1 +107,1 @@\n-                DocumentationTask t = new JavadocTaskImpl(c, null, null, files);;\n+                DocumentationTask t = new JavadocTaskImpl(c, null, null, files);\n","filename":"test\/langtools\/jdk\/javadoc\/tool\/api\/basic\/JavadocTaskImplTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -343,1 +343,1 @@\n-        List<String> unr = getState().unresolvedDependencies((VarSnippet) undefKey).collect(toList());;\n+        List<String> unr = getState().unresolvedDependencies((VarSnippet) undefKey).collect(toList());\n","filename":"test\/langtools\/jdk\/jshell\/VariablesTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -62,1 +62,1 @@\n-                    PrintWriter pw = new PrintWriter(sw);;\n+                    PrintWriter pw = new PrintWriter(sw);\n","filename":"test\/langtools\/tools\/doclint\/RunTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -49,2 +49,2 @@\n-        (cond?a:b).f();;\n-        (cond?a:b).g();;\n+        (cond?a:b).f();\n+        (cond?a:b).g();\n","filename":"test\/langtools\/tools\/javac\/generics\/inference\/4954546\/T4954546.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}