{"files":[{"patch":"@@ -28,1 +28,0 @@\n-import java.util.ArrayList;\n@@ -31,1 +30,0 @@\n-import java.util.HashSet;\n@@ -34,1 +32,0 @@\n-import java.util.Set;\n@@ -51,2 +48,0 @@\n-import com.sun.source.tree.CompilationUnitTree;\n-import com.sun.source.util.JavacTask;\n@@ -54,1 +49,0 @@\n-import com.sun.tools.javac.api.BasicJavacTask;\n@@ -58,1 +52,0 @@\n-import com.sun.tools.javac.code.Source.Feature;\n@@ -69,1 +62,0 @@\n-import com.sun.tools.javac.model.JavacTypes;\n@@ -73,1 +65,0 @@\n-import jdk.javadoc.internal.doclint.DocLint;\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/WorkArounds.java","additions":0,"deletions":9,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+import javax.lang.model.element.AnnotationMirror;\n@@ -30,0 +31,1 @@\n+import javax.lang.model.element.Modifier;\n@@ -32,0 +34,3 @@\n+import javax.lang.model.type.ArrayType;\n+import javax.lang.model.type.DeclaredType;\n+import javax.lang.model.type.ExecutableType;\n@@ -34,0 +39,1 @@\n+import javax.lang.model.type.WildcardType;\n@@ -36,0 +42,1 @@\n+import javax.lang.model.util.SimpleTypeVisitor14;\n@@ -42,0 +49,1 @@\n+import java.util.HashSet;\n@@ -585,8 +593,4 @@\n-                TypeMirror inheritedMethodReturn = inheritedMethod.getReturnType();\n-                TypeMirror lMethodReturn = lMethod.getReturnType();\n-                boolean covariantReturn =\n-                        lMethodReturn.getKind() == TypeKind.DECLARED\n-                        && inheritedMethodReturn.getKind() == TypeKind.DECLARED\n-                        && !utils.typeUtils.isSameType(lMethodReturn, inheritedMethodReturn)\n-                        && utils.typeUtils.isSubtype(lMethodReturn, inheritedMethodReturn);\n-                boolean simpleOverride = covariantReturn ? false : utils.isSimpleOverride(lMethod);\n+                \/\/ Even with --override-methods=summary we want to include details of\n+                \/\/ overriding method if something noteworthy has been added or changed.\n+                boolean simpleOverride = utils.isSimpleOverride(lMethod)\n+                        && !overridingSignatureChanged(lMethod, inheritedMethod);\n@@ -601,0 +605,81 @@\n+    \/\/ Check whether the signature of an overriding method has any changes worth\n+    \/\/ being documented compared to the overridden method.\n+    private boolean overridingSignatureChanged(ExecutableElement method, ExecutableElement overriddenMethod) {\n+        \/\/ Covariant return type\n+        TypeMirror overriddenMethodReturn = overriddenMethod.getReturnType();\n+        TypeMirror methodReturn = method.getReturnType();\n+        if (methodReturn.getKind() == TypeKind.DECLARED\n+                && overriddenMethodReturn.getKind() == TypeKind.DECLARED\n+                && !utils.typeUtils.isSameType(methodReturn, overriddenMethodReturn)\n+                && utils.typeUtils.isSubtype(methodReturn, overriddenMethodReturn)) {\n+            return true;\n+        }\n+        \/\/ Method visibility changed from protected to public\n+        if (method.getModifiers().contains(Modifier.PUBLIC) &&\n+                overriddenMethod.getModifiers().contains(Modifier.PROTECTED)) {\n+            return true;\n+        }\n+        \/\/ Change in thrown types\n+        if (!method.getThrownTypes().equals(overriddenMethod.getThrownTypes())) {\n+            return true;\n+        }\n+        \/\/ Documented annotations added anywhere in the method signature\n+        return !getDocumentedAnnotations(method).equals(getDocumentedAnnotations(overriddenMethod));\n+    }\n+\n+    private Set<AnnotationMirror> getDocumentedAnnotations(ExecutableElement element) {\n+        Set<AnnotationMirror> annotations = new HashSet<>();\n+        addDocumentedAnnotations(annotations, element.getAnnotationMirrors());\n+\n+        new SimpleTypeVisitor14<Void, Void>() {\n+            @Override\n+            protected Void defaultAction(TypeMirror e, Void v) {\n+                addDocumentedAnnotations(annotations, e.getAnnotationMirrors());\n+                return null;\n+            }\n+\n+            @Override\n+            public Void visitArray(ArrayType t, Void unused) {\n+                if (t.getComponentType() != null) {\n+                    visit(t.getComponentType());\n+                }\n+                return super.visitArray(t, unused);\n+            }\n+\n+            @Override\n+            public Void visitDeclared(DeclaredType t, Void unused) {\n+                t.getTypeArguments().forEach(this::visit);\n+                return super.visitDeclared(t, unused);\n+            }\n+\n+            @Override\n+            public Void visitWildcard(WildcardType t, Void unused) {\n+                if (t.getExtendsBound() != null) {\n+                    visit(t.getExtendsBound());\n+                }\n+                if (t.getSuperBound() != null) {\n+                    visit(t.getSuperBound());\n+                }\n+                return super.visitWildcard(t, unused);\n+            }\n+\n+            @Override\n+            public Void visitExecutable(ExecutableType t, Void unused) {\n+                t.getParameterTypes().forEach(this::visit);\n+                t.getTypeVariables().forEach(this::visit);\n+                visit(t.getReturnType());\n+                return super.visitExecutable(t, unused);\n+            }\n+        }.visit(element.asType());\n+\n+        return annotations;\n+    }\n+\n+    private void addDocumentedAnnotations(Set<AnnotationMirror> annotations, List<? extends AnnotationMirror> annotationMirrors) {\n+        annotationMirrors.forEach(annotation -> {\n+            if (utils.isDocumentedAnnotation((TypeElement) annotation.getAnnotationType().asElement())) {\n+                annotations.add(annotation);\n+            }\n+        });\n+    }\n+\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/VisibleMemberTable.java","additions":93,"deletions":8,"binary":false,"changes":101,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 8157000 8192850 8182765\n+ * @bug 8157000 8192850 8182765 8223607\n@@ -313,2 +313,2 @@\n-        \/\/ Check methods with covariant return types\n-        \/\/ Only m2 should be shown in summary; m1 and m3 should listed as declared in Base\n+        \/\/ Check methods with covariant return types, changes in visibility or thrown exceptions.\n+        \/\/ Only those should be shown in summary; m1 and m3 should listed as declared in Base\n@@ -329,0 +329,10 @@\n+                    <div class=\"col-first odd-row-color method-summary-table-tab2 method-summary-table-tab4 method-summary-table\"><code>void<\/code><\/div>\n+                    <div class=\"col-second odd-row-color method-summary-table-tab2 method-summary-table-tab4 method-summary-table\"><code><span class=\"member-name-link\"><a href=\"#m4()\">m4<\/a><\/span>()<\/code><\/div>\n+                    <div class=\"col-last odd-row-color method-summary-table-tab2 method-summary-table-tab4 method-summary-table\">\n+                    <div class=\"block\">This is Base::m4.<\/div>\n+                    <\/div>\n+                    <div class=\"col-first even-row-color method-summary-table-tab2 method-summary-table-tab4 method-summary-table\"><code>java.lang.Object<\/code><\/div>\n+                    <div class=\"col-second even-row-color method-summary-table-tab2 method-summary-table-tab4 method-summary-table\"><code><span class=\"member-name-link\"><a href=\"#m5()\">m5<\/a><\/span>()<\/code><\/div>\n+                    <div class=\"col-last even-row-color method-summary-table-tab2 method-summary-table-tab4 method-summary-table\">\n+                    <div class=\"block\">This is Base::m5.<\/div>\n+                    <\/div>\n@@ -338,0 +348,187 @@\n+\n+    @Test\n+    public void testSummaryAnnotations() {\n+        javadoc(\"-d\", \"out-summary-annotations\",\n+                \"-sourcepath\", testSrc,\n+                \"--no-platform-links\",\n+                \"-javafx\",\n+                \"--disable-javafx-strict-checks\",\n+                \"--override-methods=summary\",\n+                \"-private\",\n+                \"pkg7\");\n+\n+        checkExit(Exit.OK);\n+\n+        checkOutput(\"pkg7\/AnnotatedSub1.html\", true,\n+                \"\"\"\n+                    <div class=\"inherited-list\">\n+                    <h3 id=\"methods.inherited.from.class.pkg7.AnnotatedBase\">Methods declared in int\\\n+                    erface&nbsp;pkg7.<a href=\"AnnotatedBase.html\" title=\"interface in pkg7\">Annotate\\\n+                    dBase<\/a><\/h3>\n+                    <code><a href=\"AnnotatedBase.html#m1(java.lang.Class,int%5B%5D)\">m1<\/a><\/code><\/div>\"\"\");\n+\n+        checkOutput(\"pkg7\/AnnotatedSub2.html\", true,\n+                \"\"\"\n+                    <div class=\"member-signature\"><span class=\"annotations\"><a href=\"A.html\" title=\"\\\n+                    annotation in pkg7\">@A<\/a>\n+                    <\/span><span class=\"return-type\"><a href=\"A.html\" title=\"annotation in pkg7\">@A<\\\n+                    \/a> java.lang.Iterable&lt;java.lang.String&gt;<\/span>&nbsp;<span class=\"element-\\\n+                    name\">m1<\/span>&#8203;<span class=\"parameters\">(java.lang.Class&lt;? extends jav\\\n+                    a.lang.CharSequence&gt;&nbsp;p1,\n+                     int[]&nbsp;p2)<\/span><\/div>\n+                    <div class=\"block\"><span class=\"descfrm-type-label\">Description copied from inte\\\n+                    rface:&nbsp;<code><a href=\"AnnotatedBase.html#m1(java.lang.Class,int%5B%5D)\">Ann\\\n+                    otatedBase<\/a><\/code><\/span><\/div>\n+                    <div class=\"block\">This is AnnotatedBase::m1.<\/div>\n+                    <dl class=\"notes\">\n+                    <dt>Specified by:<\/dt>\n+                    <dd><code><a href=\"AnnotatedBase.html#m1(java.lang.Class,int%5B%5D)\">m1<\/a><\/cod\\\n+                    e>&nbsp;in interface&nbsp;<code><a href=\"AnnotatedBase.html\" title=\"interface in\\\n+                     pkg7\">AnnotatedBase<\/a><\/code><\/dd>\n+                    <dt>Parameters:<\/dt>\n+                    <dd><code>p1<\/code> - first parameter<\/dd>\n+                    <dd><code>p2<\/code> - second parameter<\/dd>\n+                    <dt>Returns:<\/dt>\n+                    <dd>something<\/dd>\n+                    <\/dl>\"\"\");\n+\n+        checkOutput(\"pkg7\/AnnotatedSub3.html\", true,\n+                \"\"\"\n+                    <div class=\"member-signature\"><span class=\"annotations\"><a href=\"A.html\" title=\"\\\n+                    annotation in pkg7\">@A<\/a>\n+                    <\/span><span class=\"return-type\"><a href=\"A.html\" title=\"annotation in pkg7\">@A<\\\n+                    \/a> java.lang.Iterable&lt;java.lang.String&gt;<\/span>&nbsp;<span class=\"element-\\\n+                    name\">m1<\/span>&#8203;<span class=\"parameters\">(java.lang.Class&lt;? extends jav\\\n+                    a.lang.CharSequence&gt;&nbsp;p1,\n+                     int[]&nbsp;p2)<\/span><\/div>\n+                    <div class=\"block\"><span class=\"descfrm-type-label\">Description copied from inte\\\n+                    rface:&nbsp;<code><a href=\"AnnotatedBase.html#m1(java.lang.Class,int%5B%5D)\">Ann\\\n+                    otatedBase<\/a><\/code><\/span><\/div>\n+                    <div class=\"block\">This is AnnotatedBase::m1.<\/div>\n+                    <dl class=\"notes\">\n+                    <dt>Specified by:<\/dt>\n+                    <dd><code><a href=\"AnnotatedBase.html#m1(java.lang.Class,int%5B%5D)\">m1<\/a><\/cod\\\n+                    e>&nbsp;in interface&nbsp;<code><a href=\"AnnotatedBase.html\" title=\"interface in\\\n+                     pkg7\">AnnotatedBase<\/a><\/code><\/dd>\n+                    <dt>Parameters:<\/dt>\n+                    <dd><code>p1<\/code> - first parameter<\/dd>\n+                    <dd><code>p2<\/code> - second parameter<\/dd>\n+                    <dt>Returns:<\/dt>\n+                    <dd>something<\/dd>\n+                    <\/dl>\"\"\");\n+\n+        checkOutput(\"pkg7\/AnnotatedSub4.html\", true,\n+                \"\"\"\n+                    <div class=\"member-signature\"><span class=\"return-type\">java.lang.Iterable&lt;<a\\\n+                     href=\"A.html\" title=\"annotation in pkg7\">@A<\/a> java.lang.String&gt;<\/span>&nbs\\\n+                    p;<span class=\"element-name\">m1<\/span>&#8203;<span class=\"parameters\">(java.lang\\\n+                    .Class&lt;? extends java.lang.CharSequence&gt;&nbsp;p1,\n+                     int[]&nbsp;p2)<\/span><\/div>\n+                    <div class=\"block\"><span class=\"descfrm-type-label\">Description copied from inte\\\n+                    rface:&nbsp;<code><a href=\"AnnotatedBase.html#m1(java.lang.Class,int%5B%5D)\">Ann\\\n+                    otatedBase<\/a><\/code><\/span><\/div>\n+                    <div class=\"block\">This is AnnotatedBase::m1.<\/div>\n+                    <dl class=\"notes\">\n+                    <dt>Specified by:<\/dt>\n+                    <dd><code><a href=\"AnnotatedBase.html#m1(java.lang.Class,int%5B%5D)\">m1<\/a><\/cod\\\n+                    e>&nbsp;in interface&nbsp;<code><a href=\"AnnotatedBase.html\" title=\"interface in\\\n+                     pkg7\">AnnotatedBase<\/a><\/code><\/dd>\n+                    <dt>Parameters:<\/dt>\n+                    <dd><code>p1<\/code> - first parameter<\/dd>\n+                    <dd><code>p2<\/code> - second parameter<\/dd>\n+                    <dt>Returns:<\/dt>\n+                    <dd>something<\/dd>\n+                    <\/dl>\"\"\");\n+\n+        checkOutput(\"pkg7\/AnnotatedSub5.html\", true,\n+                \"\"\"\n+                    <div class=\"member-signature\"><span class=\"return-type\">java.lang.Iterable&lt;ja\\\n+                    va.lang.String&gt;<\/span>&nbsp;<span class=\"element-name\">m1<\/span>&#8203;<span \\\n+                    class=\"parameters\">(<a href=\"A.html\" title=\"annotation in pkg7\">@A<\/a>\n+                     <a href=\"A.html\" title=\"annotation in pkg7\">@A<\/a> java.lang.Class&lt;? extends\\\n+                     java.lang.CharSequence&gt;&nbsp;p1,\n+                     int[]&nbsp;p2)<\/span><\/div>\n+                    <div class=\"block\"><span class=\"descfrm-type-label\">Description copied from inte\\\n+                    rface:&nbsp;<code><a href=\"AnnotatedBase.html#m1(java.lang.Class,int%5B%5D)\">Ann\\\n+                    otatedBase<\/a><\/code><\/span><\/div>\n+                    <div class=\"block\">This is AnnotatedBase::m1.<\/div>\n+                    <dl class=\"notes\">\n+                    <dt>Specified by:<\/dt>\n+                    <dd><code><a href=\"AnnotatedBase.html#m1(java.lang.Class,int%5B%5D)\">m1<\/a><\/cod\\\n+                    e>&nbsp;in interface&nbsp;<code><a href=\"AnnotatedBase.html\" title=\"interface in\\\n+                     pkg7\">AnnotatedBase<\/a><\/code><\/dd>\n+                    <dt>Parameters:<\/dt>\n+                    <dd><code>p1<\/code> - first parameter<\/dd>\n+                    <dd><code>p2<\/code> - second parameter<\/dd>\n+                    <dt>Returns:<\/dt>\n+                    <dd>something<\/dd>\n+                    <\/dl>\"\"\");\n+\n+        checkOutput(\"pkg7\/AnnotatedSub6.html\", true,\n+                \"\"\"\n+                    <div class=\"member-signature\"><span class=\"return-type\">java.lang.Iterable&lt;ja\\\n+                    va.lang.String&gt;<\/span>&nbsp;<span class=\"element-name\">m1<\/span>&#8203;<span \\\n+                    class=\"parameters\">(java.lang.Class&lt;<a href=\"A.html\" title=\"annotation in pkg\\\n+                    7\">@A<\/a> ? extends java.lang.CharSequence&gt;&nbsp;p1,\n+                     int[]&nbsp;p2)<\/span><\/div>\n+                    <div class=\"block\"><span class=\"descfrm-type-label\">Description copied from inte\\\n+                    rface:&nbsp;<code><a href=\"AnnotatedBase.html#m1(java.lang.Class,int%5B%5D)\">Ann\\\n+                    otatedBase<\/a><\/code><\/span><\/div>\n+                    <div class=\"block\">This is AnnotatedBase::m1.<\/div>\n+                    <dl class=\"notes\">\n+                    <dt>Specified by:<\/dt>\n+                    <dd><code><a href=\"AnnotatedBase.html#m1(java.lang.Class,int%5B%5D)\">m1<\/a><\/cod\\\n+                    e>&nbsp;in interface&nbsp;<code><a href=\"AnnotatedBase.html\" title=\"interface in\\\n+                     pkg7\">AnnotatedBase<\/a><\/code><\/dd>\n+                    <dt>Parameters:<\/dt>\n+                    <dd><code>p1<\/code> - first parameter<\/dd>\n+                    <dd><code>p2<\/code> - second parameter<\/dd>\n+                    <dt>Returns:<\/dt>\n+                    <dd>something<\/dd>\n+                    <\/dl>\"\"\");\n+\n+        checkOutput(\"pkg7\/AnnotatedSub7.html\", true,\n+                \"\"\"\n+                    <div class=\"member-signature\"><span class=\"return-type\">java.lang.Iterable&lt;ja\\\n+                    va.lang.String&gt;<\/span>&nbsp;<span class=\"element-name\">m1<\/span>&#8203;<span \\\n+                    class=\"parameters\">(java.lang.Class&lt;? extends <a href=\"A.html\" title=\"annotat\\\n+                    ion in pkg7\">@A<\/a> java.lang.CharSequence&gt;&nbsp;p1,\n+                     int[]&nbsp;p2)<\/span><\/div>\n+                    <div class=\"block\"><span class=\"descfrm-type-label\">Description copied from inte\\\n+                    rface:&nbsp;<code><a href=\"AnnotatedBase.html#m1(java.lang.Class,int%5B%5D)\">Ann\\\n+                    otatedBase<\/a><\/code><\/span><\/div>\n+                    <div class=\"block\">This is AnnotatedBase::m1.<\/div>\n+                    <dl class=\"notes\">\n+                    <dt>Specified by:<\/dt>\n+                    <dd><code><a href=\"AnnotatedBase.html#m1(java.lang.Class,int%5B%5D)\">m1<\/a><\/cod\\\n+                    e>&nbsp;in interface&nbsp;<code><a href=\"AnnotatedBase.html\" title=\"interface in\\\n+                     pkg7\">AnnotatedBase<\/a><\/code><\/dd>\n+                    <dt>Parameters:<\/dt>\n+                    <dd><code>p1<\/code> - first parameter<\/dd>\n+                    <dd><code>p2<\/code> - second parameter<\/dd>\n+                    <dt>Returns:<\/dt>\n+                    <dd>something<\/dd>\n+                    <\/dl>\"\"\");\n+\n+        checkOutput(\"pkg7\/AnnotatedSub8.html\", true,\n+                \"\"\"\n+                    <div class=\"member-signature\"><span class=\"return-type\">java.lang.Iterable&lt;ja\\\n+                    va.lang.String&gt;<\/span>&nbsp;<span class=\"element-name\">m1<\/span>&#8203;<span \\\n+                    class=\"parameters\">(java.lang.Class&lt;? extends java.lang.CharSequence&gt;&nbsp;p1,\n+                     int <a href=\"A.html\" title=\"annotation in pkg7\">@A<\/a> []&nbsp;p2)<\/span><\/div>\n+                    <div class=\"block\"><span class=\"descfrm-type-label\">Description copied from inte\\\n+                    rface:&nbsp;<code><a href=\"AnnotatedBase.html#m1(java.lang.Class,int%5B%5D)\">Ann\\\n+                    otatedBase<\/a><\/code><\/span><\/div>\n+                    <div class=\"block\">This is AnnotatedBase::m1.<\/div>\n+                    <dl class=\"notes\">\n+                    <dt>Specified by:<\/dt>\n+                    <dd><code><a href=\"AnnotatedBase.html#m1(java.lang.Class,int%5B%5D)\">m1<\/a><\/cod\\\n+                    e>&nbsp;in interface&nbsp;<code><a href=\"AnnotatedBase.html\" title=\"interface in\\\n+                     pkg7\">AnnotatedBase<\/a><\/code><\/dd>\n+                    <dt>Parameters:<\/dt>\n+                    <dd><code>p1<\/code> - first parameter<\/dd>\n+                    <dd><code>p2<\/code> - second parameter<\/dd>\n+                    <dt>Returns:<\/dt>\n+                    <dd>something<\/dd>\n+                    <\/dl>\"\"\");\n+    }\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testOverriddenMethods\/TestOverrideMethods.java","additions":200,"deletions":3,"binary":false,"changes":203,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,2 @@\n+import java.io.IOException;\n+\n@@ -43,0 +45,12 @@\n+\n+    \/**\n+     * This is Base::m4.\n+     *\/\n+    protected void m4() { }\n+\n+    \/**\n+     * This is Base::m5.\n+     * @throws IOException an error\n+     *\/\n+    public Object m5() throws IOException { }\n+\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testOverriddenMethods\/pkg6\/Base.java","additions":15,"deletions":1,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,0 +36,6 @@\n+    \/\/ change visibility to public\n+    @Override\n+    public void m4() { }\n+    \/\/ drop checked exception\n+    @Override\n+    public Object m5() { }\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testOverriddenMethods\/pkg6\/Sub.java","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -0,0 +1,87 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package pkg7;\n+\n+import java.lang.annotation.Documented;\n+import java.lang.annotation.Target;\n+import java.lang.annotation.ElementType;\n+\n+\/\/ Adding documented annotations anywhere in the signature of an overriding\n+\/\/ method should cause it to be included in the details section even with\n+\/\/ --override-methods=summary option.\n+\n+interface AnnotatedBase {\n+    \/**\n+     * This is AnnotatedBase::m1.\n+     * @param p1 first parameter\n+     * @param p2 second parameter\n+     * @return something\n+     *\/\n+    public Iterable<String> m1(Class<? extends CharSequence> p1, int[] p2);\n+}\n+\n+interface AnnotatedSub1 extends AnnotatedBase {\n+    @Override\n+    public Iterable<String> m1(Class<? extends CharSequence> p1, int[] p2);\n+}\n+\n+interface AnnotatedSub2 extends AnnotatedBase {\n+    @Override\n+    @A\n+    public Iterable<String> m1(Class<? extends CharSequence> p1, int[] p2);\n+}\n+\n+interface AnnotatedSub3 extends AnnotatedBase {\n+    @Override\n+    public @A Iterable<String> m1(Class<? extends CharSequence> p1, int[] p2);\n+}\n+\n+interface AnnotatedSub4 extends AnnotatedBase {\n+    @Override\n+    public Iterable<@A String> m1(Class<? extends CharSequence> p1, int[] p2);\n+}\n+\n+interface AnnotatedSub5 extends AnnotatedBase {\n+    @Override\n+    public Iterable<String> m1(@A Class<? extends CharSequence> p1, int[] p2);\n+}\n+\n+interface AnnotatedSub6 extends AnnotatedBase {\n+    @Override\n+    public Iterable<String> m1(Class<@A ? extends CharSequence> p1, int[] p2);\n+}\n+\n+interface AnnotatedSub7 extends AnnotatedBase {\n+    @Override\n+    public Iterable<String> m1(Class<? extends @A CharSequence> p1, int[] p2);\n+}\n+\n+interface AnnotatedSub8 extends AnnotatedBase {\n+    @Override\n+    public Iterable<String> m1(Class<? extends CharSequence> p1, int @A [] p2);\n+}\n+\n+@Target({ElementType.METHOD, ElementType.PARAMETER, ElementType.TYPE_USE, ElementType.TYPE_PARAMETER})\n+@Documented\n+@interface A {}\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testOverriddenMethods\/pkg7\/Annotated.java","additions":87,"deletions":0,"binary":false,"changes":87,"status":"added"}]}