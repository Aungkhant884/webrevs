{"files":[{"patch":"@@ -97,0 +97,3 @@\n+hotspot_compiler_arraycopy = \\\n+  compiler\/arraycopy\/stress\n+\n@@ -118,1 +121,2 @@\n-  compiler\/gcbarriers\/PreserveFPRegistersTest.java\n+  compiler\/gcbarriers\/PreserveFPRegistersTest.java \\\n+  :hotspot_compiler_arraycopy\n@@ -125,1 +129,0 @@\n-  -compiler\/arraycopy\/stress \\\n@@ -136,0 +139,1 @@\n+  -:hotspot_slow_compiler\n@@ -183,1 +187,1 @@\n-  compiler\/arraycopy\/stress\n+  :hotspot_compiler_arraycopy\n","filename":"test\/hotspot\/jtreg\/TEST.groups","additions":7,"deletions":3,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -30,1 +30,8 @@\n-     * Max array size to test.\n+     * Max array size to test. This should be reasonably high to test\n+     * massive vectorized copies, plus cases that cross the cache lines and\n+     * (small) page boundaries. But it should also be reasonably low to\n+     * keep the test costs down.\n+     *\n+     * A rough guideline:\n+     *   - AVX-512: 64-byte copies over 32 registers copies roughly 2K per step.\n+     *   - AArch64: small pages can be about 64K large\n@@ -32,1 +39,1 @@\n-    static final int MAX_SIZE = 1024*1024 + 1;\n+    static final int MAX_SIZE = 128*1024 + 1;\n","filename":"test\/hotspot\/jtreg\/compiler\/arraycopy\/stress\/AbstractStressArrayCopy.java","additions":9,"deletions":2,"binary":false,"changes":11,"status":"modified"}]}