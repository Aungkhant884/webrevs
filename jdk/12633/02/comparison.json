{"files":[{"patch":"@@ -311,2 +311,2 @@\n-        static final int PROXY_INTERFACE_LIMIT = Math.max(0, Math.min(65535, GetIntegerAction\n-                .privilegedGetProperty(\"jdk.serialProxyInterfaceLimit\", 65535)));\n+        static final int PROXY_INTERFACE_LIMIT = Math.clamp(GetIntegerAction\n+                .privilegedGetProperty(\"jdk.serialProxyInterfaceLimit\", 65535), 0, 65535);\n","filename":"src\/java.base\/share\/classes\/java\/io\/ObjectInputStream.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -3652,3 +3652,2 @@\n-        maximumIntegerDigits = Math.min(Math.max(0, newValue), MAXIMUM_INTEGER_DIGITS);\n-        super.setMaximumIntegerDigits((maximumIntegerDigits > DOUBLE_INTEGER_DIGITS) ?\n-            DOUBLE_INTEGER_DIGITS : maximumIntegerDigits);\n+        maximumIntegerDigits = Math.clamp(newValue, 0, MAXIMUM_INTEGER_DIGITS);\n+        super.setMaximumIntegerDigits(Math.min(maximumIntegerDigits, DOUBLE_INTEGER_DIGITS));\n@@ -3657,2 +3656,1 @@\n-            super.setMinimumIntegerDigits((minimumIntegerDigits > DOUBLE_INTEGER_DIGITS) ?\n-                DOUBLE_INTEGER_DIGITS : minimumIntegerDigits);\n+            super.setMinimumIntegerDigits(Math.min(minimumIntegerDigits, DOUBLE_INTEGER_DIGITS));\n@@ -3673,3 +3671,2 @@\n-        minimumIntegerDigits = Math.min(Math.max(0, newValue), MAXIMUM_INTEGER_DIGITS);\n-        super.setMinimumIntegerDigits((minimumIntegerDigits > DOUBLE_INTEGER_DIGITS) ?\n-            DOUBLE_INTEGER_DIGITS : minimumIntegerDigits);\n+        minimumIntegerDigits = Math.clamp(newValue, 0, MAXIMUM_INTEGER_DIGITS);\n+        super.setMinimumIntegerDigits(Math.min(minimumIntegerDigits, DOUBLE_INTEGER_DIGITS));\n@@ -3678,2 +3675,1 @@\n-            super.setMaximumIntegerDigits((maximumIntegerDigits > DOUBLE_INTEGER_DIGITS) ?\n-                DOUBLE_INTEGER_DIGITS : maximumIntegerDigits);\n+            super.setMaximumIntegerDigits(Math.min(maximumIntegerDigits, DOUBLE_INTEGER_DIGITS));\n@@ -3694,3 +3690,2 @@\n-        maximumFractionDigits = Math.min(Math.max(0, newValue), MAXIMUM_FRACTION_DIGITS);\n-        super.setMaximumFractionDigits((maximumFractionDigits > DOUBLE_FRACTION_DIGITS) ?\n-            DOUBLE_FRACTION_DIGITS : maximumFractionDigits);\n+        maximumFractionDigits = Math.clamp(newValue, 0, MAXIMUM_FRACTION_DIGITS);\n+        super.setMaximumFractionDigits(Math.min(maximumFractionDigits, DOUBLE_FRACTION_DIGITS));\n@@ -3699,2 +3694,1 @@\n-            super.setMinimumFractionDigits((minimumFractionDigits > DOUBLE_FRACTION_DIGITS) ?\n-                DOUBLE_FRACTION_DIGITS : minimumFractionDigits);\n+            super.setMinimumFractionDigits(Math.min(minimumFractionDigits, DOUBLE_FRACTION_DIGITS));\n@@ -3715,3 +3709,2 @@\n-        minimumFractionDigits = Math.min(Math.max(0, newValue), MAXIMUM_FRACTION_DIGITS);\n-        super.setMinimumFractionDigits((minimumFractionDigits > DOUBLE_FRACTION_DIGITS) ?\n-            DOUBLE_FRACTION_DIGITS : minimumFractionDigits);\n+        minimumFractionDigits = Math.clamp(newValue, 0, MAXIMUM_FRACTION_DIGITS);\n+        super.setMinimumFractionDigits(Math.min(minimumFractionDigits, DOUBLE_FRACTION_DIGITS));\n@@ -3720,2 +3713,1 @@\n-            super.setMaximumFractionDigits((maximumFractionDigits > DOUBLE_FRACTION_DIGITS) ?\n-                DOUBLE_FRACTION_DIGITS : maximumFractionDigits);\n+            super.setMaximumFractionDigits(Math.min(maximumFractionDigits, DOUBLE_FRACTION_DIGITS));\n","filename":"src\/java.base\/share\/classes\/java\/text\/DecimalFormat.java","additions":12,"deletions":20,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -3575,1 +3575,1 @@\n-                int outputScale = Math.min(Math.max(fraction.scale(), minWidth), maxWidth);\n+                int outputScale = Math.clamp(fraction.scale(), minWidth, maxWidth);\n","filename":"src\/java.base\/share\/classes\/java\/time\/format\/DateTimeFormatterBuilder.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -1526,1 +1526,1 @@\n-        lf = Math.min(Math.max(0.25f, lf), 4.0f);\n+        lf = Math.clamp(lf, 0.25f, 4.0f);\n","filename":"src\/java.base\/share\/classes\/java\/util\/HashMap.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -325,1 +325,1 @@\n-        loadFactor = Math.min(Math.max(0.25f, loadFactor), 4.0f);\n+        loadFactor = Math.clamp(loadFactor, 0.25f, 4.0f);\n","filename":"src\/java.base\/share\/classes\/java\/util\/HashSet.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1994, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1994, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -1273,1 +1273,1 @@\n-        lf = Math.min(Math.max(0.25f, lf), 4.0f);\n+        lf = Math.clamp(lf, 0.25f, 4.0f);\n","filename":"src\/java.base\/share\/classes\/java\/util\/Hashtable.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2717,3 +2717,3 @@\n-        int corep = Math.min(Math.max(corePoolSize, p), MAX_CAP);\n-        int maxSpares = Math.max(0, Math.min(maximumPoolSize - p, MAX_CAP));\n-        int minAvail = Math.max(0, Math.min(minimumRunnable, MAX_CAP));\n+        int corep = Math.clamp(corePoolSize, p, MAX_CAP);\n+        int maxSpares = Math.clamp(maximumPoolSize - p, 0, MAX_CAP);\n+        int minAvail = Math.clamp(minimumRunnable, 0, MAX_CAP);\n@@ -2750,1 +2750,1 @@\n-                maxSpares = Math.max(0, Math.min(MAX_CAP, Integer.parseInt(ms)));\n+                maxSpares = Math.clamp(Integer.parseInt(ms), 0, MAX_CAP);\n","filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/ForkJoinPool.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,1 +53,1 @@\n-        return size >= 0 ? Math.max(0, Math.min(size - skip, limit)) : -1;\n+        return size >= 0 ? Math.clamp(size - skip, 0, limit) : -1;\n","filename":"src\/java.base\/share\/classes\/java\/util\/stream\/SliceOps.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -157,1 +157,1 @@\n-            alignment = Utils.alignUp(Math.min(Math.max(alignment, STACK_SLOT_SIZE), 16), STACK_SLOT_SIZE);\n+            alignment = Utils.alignUp(Math.clamp(alignment, STACK_SLOT_SIZE, 16), STACK_SLOT_SIZE);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/riscv64\/linux\/LinuxRISCV64CallArranger.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -1541,1 +1541,1 @@\n-            fValue = Math.max(Float.MIN_VALUE, Math.min(Float.MAX_VALUE, (float) dValue));\n+            fValue = Math.clamp((float) dValue, Float.MIN_VALUE, Float.MAX_VALUE);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/math\/FloatingDecimal.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -165,2 +165,2 @@\n-        int f = Math.max(Math.min(first, 63), 0);\n-        int l = Math.max(Math.min(last, 63), 0);\n+        int f = Math.clamp(first, 0, 63);\n+        int l = Math.clamp(last, 0, 63);\n@@ -176,2 +176,2 @@\n-        int f = Math.max(Math.min(first, 127), 64) - 64;\n-        int l = Math.max(Math.min(last, 127), 64) - 64;\n+        int f = Math.clamp(first, 64, 127) - 64;\n+        int l = Math.clamp(last, 64, 127) - 64;\n","filename":"src\/java.base\/unix\/classes\/sun\/nio\/fs\/UnixUriUtils.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"}]}