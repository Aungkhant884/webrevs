{"files":[{"patch":"@@ -269,1 +269,14 @@\n-  enum { instruction_size = 4 };\n+  enum {\n+    instruction_size = 4,\n+    compressed_instruction_size = 2,\n+  };\n+\n+  \/\/ instruction must start at passed address\n+  static bool is_compressed_instr(address instr) {\n+    if (UseRVC && (((uint16_t *)instr)[0] & 0b11) != 0b11) {\n+      \/\/ 16-bit instructions end with 0b00, 0b01, and 0b10\n+      return true;\n+    }\n+    \/\/ 32-bit instructions end with 0b11\n+    return false;\n+  }\n@@ -274,1 +287,3 @@\n-  static unsigned int instr_len(unsigned char *instr) { return instruction_size; }\n+  static unsigned int instr_len(address instr) {\n+    return is_compressed_instr(instr) ? compressed_instruction_size : instruction_size;\n+  }\n","filename":"src\/hotspot\/cpu\/riscv\/assembler_riscv.hpp","additions":17,"deletions":2,"binary":false,"changes":19,"status":"modified"}]}