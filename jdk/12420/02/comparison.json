{"files":[{"patch":"@@ -85,2 +85,0 @@\n-vmTestbase\/nsk\/jdi\/ClassType\/invokeMethod\/invokemethod011\/TestDescription.java 8282379 generic-all\n-\n","filename":"test\/hotspot\/jtreg\/ProblemList-svc-vthread.txt","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -212,0 +212,10 @@\n+                if (invThr.isAlive()) {\n+                    \/\/ The join failed because the invoke never completed.\n+                    log.complain(\"TEST FAILED: invoke never completed\");\n+                    tot_res = Consts.TEST_FAILED;\n+                    \/\/ Do a vm.resume() to see if that helps.\n+                    vm.resume();\n+                    invThr.join(); \/\/ let test time out if this fails\n+                    return quitDebuggee();\n+                }\n+\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ClassType\/invokeMethod\/invokemethod011.java","additions":11,"deletions":1,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -90,0 +90,5 @@\n+        \/*\n+         * WARNING: Since this method is called using INVOKE_SINGLE_THREADED, we need to\n+         * be careful not to do anything that might block on another thread. That includes\n+         * calling Thread.sleep(), which can be a problem for virtual threads.\n+         *\/\n@@ -94,1 +99,0 @@\n-            Thread.currentThread().sleep(400);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ClassType\/invokeMethod\/invokemethod011t.java","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -205,0 +205,9 @@\n+            if (invThr.isAlive()) {\n+                \/\/ The join failed because the invoke never completed.\n+                log.complain(\"TEST FAILED: invoke never completed\");\n+                tot_res = Consts.TEST_FAILED;\n+                \/\/ Do a vm.resume() to see if that helps.\n+                vm.resume();\n+                invThr.join(); \/\/ let test time out if this fails\n+                return quitDebuggee();\n+            }\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ClassType\/invokeMethod\/invokemethod012.java","additions":10,"deletions":1,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -92,0 +92,5 @@\n+        \/*\n+         * WARNING: Since this method is called using INVOKE_SINGLE_THREADED, we need to\n+         * be careful not to do anything that might block on another thread. That includes\n+         * calling Thread.sleep(), which can be a problem for virtual threads.\n+         *\/\n@@ -96,1 +101,0 @@\n-            Thread.currentThread().sleep(400);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ClassType\/invokeMethod\/invokemethod012t.java","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -207,0 +207,9 @@\n+            if (invThr.isAlive()) {\n+                \/\/ The join failed because the invoke never completed.\n+                log.complain(\"TEST FAILED: invoke never completed\");\n+                tot_res = Consts.TEST_FAILED;\n+                \/\/ Do a vm.resume() to see if that helps.\n+                vm.resume();\n+                invThr.join(); \/\/ let test time out if this fails\n+                return quitDebuggee();\n+            }\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ClassType\/invokeMethod\/invokemethod013.java","additions":10,"deletions":1,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -91,0 +91,5 @@\n+        \/*\n+         * WARNING: Since this method is called using INVOKE_SINGLE_THREADED, we need to\n+         * be careful not to do anything that might block on another thread. That includes\n+         * calling Thread.sleep(), which can be a problem for virtual threads.\n+         *\/\n@@ -95,1 +100,0 @@\n-            Thread.currentThread().sleep(400);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ClassType\/invokeMethod\/invokemethod013t.java","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -209,0 +209,10 @@\n+                if (invThr.isAlive()) {\n+                    \/\/ The join failed because the invoke never completed.\n+                    log.complain(\"TEST FAILED: invoke never completed\");\n+                    tot_res = Consts.TEST_FAILED;\n+                    \/\/ Do a vm.resume() to see if that helps.\n+                    vm.resume();\n+                    invThr.join(); \/\/ let test time out if this fails\n+                    return quitDebuggee();\n+                }\n+\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ObjectReference\/invokeMethod\/invokemethod010.java","additions":11,"deletions":1,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -184,0 +184,5 @@\n+        \/*\n+         * WARNING: Since this method is called using INVOKE_SINGLE_THREADED, we need to\n+         * be careful not to do anything that might block on another thread. That includes\n+         * calling Thread.sleep(), which can be a problem for virtual threads.\n+         *\/\n@@ -188,1 +193,0 @@\n-            Thread.currentThread().sleep(400);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ObjectReference\/invokeMethod\/invokemethod010t.java","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -209,0 +209,10 @@\n+                if (invThr.isAlive()) {\n+                    \/\/ The join failed because the invoke never completed.\n+                    log.complain(\"TEST FAILED: invoke never completed\");\n+                    tot_res = Consts.TEST_FAILED;\n+                    \/\/ Do a vm.resume() to see if that helps.\n+                    vm.resume();\n+                    invThr.join(); \/\/ let test time out if this fails\n+                    return quitDebuggee();\n+                }\n+\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ObjectReference\/invokeMethod\/invokemethod011.java","additions":11,"deletions":1,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -184,0 +184,5 @@\n+        \/*\n+         * WARNING: Since this method is called using INVOKE_SINGLE_THREADED, we need to\n+         * be careful not to do anything that might block on another thread. That includes\n+         * calling Thread.sleep(), which can be a problem for virtual threads.\n+         *\/\n@@ -188,1 +193,0 @@\n-            Thread.currentThread().sleep(400);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ObjectReference\/invokeMethod\/invokemethod011t.java","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -209,0 +209,9 @@\n+            if (invThr.isAlive()) {\n+                \/\/ The join failed because the invoke never completed.\n+                log.complain(\"TEST FAILED: invoke never completed\");\n+                tot_res = Consts.TEST_FAILED;\n+                \/\/ Do a vm.resume() to see if that helps.\n+                vm.resume();\n+                invThr.join(); \/\/ let test time out if this fails\n+                return quitDebuggee();\n+            }\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ObjectReference\/invokeMethod\/invokemethod012.java","additions":10,"deletions":1,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -184,0 +184,5 @@\n+        \/*\n+         * WARNING: Since this method is called using INVOKE_SINGLE_THREADED, we need to\n+         * be careful not to do anything that might block on another thread. That includes\n+         * calling Thread.sleep(), which can be a problem for virtual threads.\n+         *\/\n@@ -188,1 +193,0 @@\n-            Thread.currentThread().sleep(400);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ObjectReference\/invokeMethod\/invokemethod012t.java","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -210,0 +210,9 @@\n+            if (invThr.isAlive()) {\n+                \/\/ The join failed because the invoke never completed.\n+                log.complain(\"TEST FAILED: invoke never completed\");\n+                tot_res = Consts.TEST_FAILED;\n+                \/\/ Do a vm.resume() to see if that helps.\n+                vm.resume();\n+                invThr.join(); \/\/ let test time out if this fails\n+                return quitDebuggee();\n+            }\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ObjectReference\/invokeMethod\/invokemethod013.java","additions":10,"deletions":1,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -183,0 +183,5 @@\n+        \/*\n+         * WARNING: Since this method is called using INVOKE_SINGLE_THREADED, we need to\n+         * be careful not to do anything that might block on another thread. That includes\n+         * calling Thread.sleep(), which can be a problem for virtual threads.\n+         *\/\n@@ -187,1 +192,0 @@\n-            Thread.currentThread().sleep(400);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ObjectReference\/invokeMethod\/invokemethod013t.java","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"}]}