{"files":[{"patch":"@@ -28,1 +28,1 @@\n- * @run testng CorruptedZipFiles\n+ * @run junit CorruptedZipFiles\n@@ -31,4 +31,5 @@\n-import org.testng.annotations.AfterMethod;\n-import org.testng.annotations.BeforeMethod;\n-import org.testng.annotations.BeforeTest;\n-import org.testng.annotations.Test;\n+\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n@@ -48,1 +49,1 @@\n-import static org.testng.Assert.*;\n+import static org.junit.jupiter.api.Assertions.*;\n@@ -53,1 +54,1 @@\n-    private byte[] template;\n+    private static byte[] template;\n@@ -59,1 +60,1 @@\n-    private int endpos, cenpos, locpos;\n+    private static int endpos, cenpos, locpos;\n@@ -67,2 +68,2 @@\n-    @BeforeTest\n-    public void setup() throws IOException {\n+    @BeforeClass\n+    public static void setup() throws IOException {\n@@ -88,7 +89,9 @@\n-        assertEquals(buffer.getInt(endpos), ENDSIG, \"Where's ENDSIG?\");\n-        assertEquals(buffer.getInt(cenpos), CENSIG, \"Where's CENSIG?\");\n-        assertEquals(buffer.getInt(locpos), LOCSIG, \"Where's LOCSIG?\");\n-        assertEquals(buffer.getShort(locpos+LOCNAM), buffer.getShort(cenpos+CENNAM),\n-            \"Name field length mismatch\");\n-        assertEquals(buffer.getShort( locpos+LOCEXT), buffer.getShort(cenpos+CENEXT),\n-            \"Extra field length mismatch\");\n+        assertEquals(ENDSIG, buffer.getInt(endpos),\"Where's ENDSIG?\");\n+        assertEquals(CENSIG, buffer.getInt(cenpos),\"Where's CENSIG?\");\n+        assertEquals(LOCSIG, buffer.getInt(locpos),\"Where's LOCSIG?\");\n+        assertEquals(buffer.getShort(cenpos+CENNAM),\n+                buffer.getShort(locpos+LOCNAM),\n+                \"Name field length mismatch\");\n+        assertEquals(buffer.getShort(cenpos+CENEXT),\n+                buffer.getShort( locpos+LOCEXT),\n+                \"Extra field length mismatch\");\n@@ -100,1 +103,1 @@\n-    @BeforeMethod\n+    @Before\n@@ -102,1 +105,1 @@\n-        copy = Arrays.copyOf(template, template.length);\n+        copy = template.clone();\n@@ -108,1 +111,1 @@\n-    @AfterMethod\n+    @After\n@@ -248,1 +251,1 @@\n-        ZipException ex = expectThrows(ZipException.class, () -> {\n+        ZipException ex = assertThrows(ZipException.class, () -> {\n","filename":"test\/jdk\/java\/util\/zip\/ZipFile\/CorruptedZipFiles.java","additions":24,"deletions":21,"binary":false,"changes":45,"status":"modified"}]}