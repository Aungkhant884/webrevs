{"files":[{"patch":"@@ -37,0 +37,2 @@\n+import java.nio.ByteBuffer;\n+import java.nio.ByteOrder;\n@@ -62,1 +64,1 @@\n-    \/**\n+    \/*\n@@ -75,0 +77,2 @@\n+        \/\/ ByteBuffer for reading fields from the ZIP\n+        ByteBuffer buffer = ByteBuffer.wrap(template).order(ByteOrder.LITTLE_ENDIAN);\n@@ -79,1 +83,1 @@\n-        cenpos = u16(template, endpos+ENDOFF);\n+        cenpos = buffer.getShort(endpos + ENDOFF);\n@@ -81,1 +85,1 @@\n-        locpos = u16(template, cenpos + CENOFF);\n+        locpos = buffer.getShort(cenpos + CENOFF);\n@@ -84,4 +88,4 @@\n-        assertEquals(u32(template, endpos), ENDSIG, \"Where's ENDSIG?\");\n-        assertEquals(u32(template, cenpos), CENSIG, \"Where's CENSIG?\");\n-        assertEquals(u32(template, locpos), LOCSIG, \"Where's LOCSIG?\");\n-        assertEquals(u16(template, locpos+LOCNAM), u16(template,cenpos+CENNAM),\n+        assertEquals(buffer.getInt(endpos), ENDSIG, \"Where's ENDSIG?\");\n+        assertEquals(buffer.getInt(cenpos), CENSIG, \"Where's CENSIG?\");\n+        assertEquals(buffer.getInt(locpos), LOCSIG, \"Where's LOCSIG?\");\n+        assertEquals(buffer.getShort(locpos+LOCNAM), buffer.getShort(cenpos+CENNAM),\n@@ -89,1 +93,1 @@\n-        assertEquals(u16(template, locpos+LOCEXT), u16(template,cenpos+CENEXT),\n+        assertEquals(buffer.getShort( locpos+LOCEXT), buffer.getShort(cenpos+CENEXT),\n@@ -93,1 +97,1 @@\n-    \/**\n+    \/*\n@@ -101,1 +105,1 @@\n-    \/**\n+    \/*\n@@ -109,1 +113,1 @@\n-    \/**\n+    \/*\n@@ -117,1 +121,1 @@\n-        checkZipException(\".*bad central directory size.*\");\n+        assertZipException(\".*bad central directory size.*\");\n@@ -120,1 +124,1 @@\n-    \/**\n+    \/*\n@@ -128,1 +132,1 @@\n-        checkZipException(\".*bad central directory offset.*\");\n+        assertZipException(\".*bad central directory offset.*\");\n@@ -131,1 +135,1 @@\n-    \/**\n+    \/*\n@@ -138,1 +142,1 @@\n-        checkZipException(\".*bad signature.*\");\n+        assertZipException(\".*bad signature.*\");\n@@ -141,1 +145,1 @@\n-    \/**\n+    \/*\n@@ -148,1 +152,1 @@\n-        checkZipException(\".*encrypted entry.*\");\n+        assertZipException(\".*encrypted entry.*\");\n@@ -151,1 +155,1 @@\n-    \/**\n+    \/*\n@@ -158,1 +162,1 @@\n-        checkZipException(\".*bad header size.*\");\n+        assertZipException(\".*bad header size.*\");\n@@ -161,1 +165,1 @@\n-    \/**\n+    \/*\n@@ -169,1 +173,1 @@\n-        checkZipException(\".*bad header size.*\");\n+        assertZipException(\".*bad header size.*\");\n@@ -172,1 +176,1 @@\n-    \/**\n+    \/*\n@@ -179,1 +183,1 @@\n-        checkZipException(\".*bad header size.*\");\n+        assertZipException(\".*bad header size.*\");\n@@ -182,1 +186,1 @@\n-    \/**\n+    \/*\n@@ -189,1 +193,1 @@\n-        checkZipException(\".*bad header size.*\");\n+        assertZipException(\".*bad header size.*\");\n@@ -192,1 +196,1 @@\n-    \/**\n+    \/*\n@@ -200,1 +204,1 @@\n-        checkZipException(\".*bad header size.*\");\n+        assertZipException(\".*bad header size.*\");\n@@ -203,1 +207,1 @@\n-    \/**\n+    \/*\n@@ -210,1 +214,1 @@\n-        checkZipException(\".*bad header size.*\");\n+        assertZipException(\".*bad header size.*\");\n@@ -213,1 +217,1 @@\n-    \/**\n+    \/*\n@@ -220,1 +224,1 @@\n-        checkZipException(\".*bad compression method.*\");\n+        assertZipException(\".*bad compression method.*\");\n@@ -223,1 +227,1 @@\n-    \/**\n+    \/*\n@@ -230,1 +234,1 @@\n-        checkZipExceptionInGetInputStream(\".*bad signature.*\");\n+        assertZipException(\".*bad signature.*\");\n@@ -233,2 +237,8 @@\n-    void checkZipExceptionImpl(String msgPattern,\n-                               boolean getInputStream) throws IOException {\n+    \/*\n+     * Assert that opening a ZIP file and consuming the entry's\n+     * InputStream using the ZipFile API fails with a ZipException\n+     * with a message matching the given pattern.\n+     *\n+     * The ZIP file opened is the contents of the 'copy' byte array.\n+     *\/\n+    void assertZipException(String msgPattern) throws IOException {\n@@ -240,4 +250,2 @@\n-                if (getInputStream) {\n-                    try (InputStream is = zf.getInputStream(new ZipEntry(\"x\"))) {\n-                        is.transferTo(OutputStream.nullOutputStream());\n-                    }\n+                try (InputStream is = zf.getInputStream(new ZipEntry(\"x\"))) {\n+                    is.transferTo(OutputStream.nullOutputStream());\n@@ -251,20 +259,0 @@\n-\n-    void checkZipException(String msgPattern) throws IOException {\n-        checkZipExceptionImpl(msgPattern, false);\n-    }\n-\n-    void checkZipExceptionInGetInputStream(String msgPattern) throws IOException {\n-        checkZipExceptionImpl(msgPattern, true);\n-    }\n-\n-    static int u8(byte[] data, int offset) {\n-        return data[offset] & 0xff;\n-    }\n-\n-    static int u16(byte[] data, int offset) {\n-        return u8(data,offset) + (u8(data,offset+1) << 8);\n-    }\n-\n-    static int u32(byte[] data, int offset) {\n-        return u16(data,offset) + (u16(data,offset+2) << 16);\n-    }\n","filename":"test\/jdk\/java\/util\/zip\/ZipFile\/CorruptedZipFiles.java","additions":48,"deletions":60,"binary":false,"changes":108,"status":"modified"}]}