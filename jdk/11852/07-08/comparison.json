{"files":[{"patch":"@@ -86,2 +86,1 @@\n-        boolean is_default = false;\n-        for (int i = 0; i < versions.length && !is_default; i++) {\n+        for (int i = 0; i < versions.length; i++) {\n@@ -90,2 +89,1 @@\n-                \/\/ If boot JDK runs because old JDK is not found, only run once\n-                is_default = setupJVMs(Integer.parseInt(versions[i]));\n+                setupJVMs(Integer.parseInt(versions[i]));\n@@ -99,2 +97,1 @@\n-    static boolean setupJVMs(int fetchVersion) throws Throwable {\n-        boolean is_default = true;\n+    static void setupJVMs(int fetchVersion) throws Throwable {\n@@ -110,1 +107,0 @@\n-            is_default = false;\n@@ -123,1 +119,0 @@\n-        return is_default;\n@@ -178,1 +173,1 @@\n-    private static String fetchJDK(int version) {\n+    private static String fetchJDK(int version) throws Throwable {\n@@ -195,2 +190,1 @@\n-                build = 0;\n-                break;\n+                throw new RuntimeException(\"Unsupported JDK version \" + version);\n@@ -207,1 +201,1 @@\n-            return BOOT_JDK;\n+            throw new RuntimeException(\"Unsupported architecture \" + Platform.getOsArch());\n@@ -222,1 +216,1 @@\n-            return BOOT_JDK;\n+            throw new RuntimeException(\"Unsupported operating system \" + Platform.getOsName());\n@@ -228,1 +222,1 @@\n-        String path = BOOT_JDK;\n+        String path = null;\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/TestAutoCreateSharedArchiveUpgrade.java","additions":8,"deletions":14,"binary":false,"changes":22,"status":"modified"}]}