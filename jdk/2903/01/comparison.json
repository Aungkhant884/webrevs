{"files":[{"patch":"@@ -2223,1 +2223,11 @@\n-  \/\/ For backwards compatibility, we don't check the verification setting\n+\n+  if (!_verify_local && BytecodeVerificationLocal) {\n+    \/\/  we cannot load boot classes, so there's no point of using the CDS archive\n+    FileMapInfo::fail_continue(\"The shared archive file's BytecodeVerificationLocal setting (%s)\"\n+                               \" does not equal the current BytecodeVerificationLocal setting (%s).\",\n+                               _verify_local ? \"enabled\" : \"disabled\",\n+                               BytecodeVerificationLocal ? \"enabled\" : \"disabled\");\n+    return false;\n+  }\n+\n+  \/\/ For backwards compatibility, we don't check the BytecodeVerificationRemote setting\n@@ -2225,3 +2235,3 @@\n-  if (_has_platform_or_app_classes &&\n-      ((!_verify_local && BytecodeVerificationLocal) ||\n-       (!_verify_remote && BytecodeVerificationRemote))) {\n+  if (_has_platform_or_app_classes\n+      && !_verify_remote \/\/ we didn't verify the archived platform\/app classes\n+      && BytecodeVerificationRemote) { \/\/ but we want to verify all loaded platform\/app classes\n@@ -2229,2 +2239,4 @@\n-                  \"verification setting than the current setting.\");\n-    return false;\n+                               \"verification setting than the current setting.\");\n+    \/\/ Pretend that we didn't have any archived platform\/app classes, so they won't be loaded\n+    \/\/ by SystemDictionaryShared.\n+    _has_platform_or_app_classes = false;\n","filename":"src\/hotspot\/share\/memory\/filemap.cpp","additions":18,"deletions":6,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -180,0 +180,16 @@\n+    private static void captureVerifyOpts(ArrayList<String> opts, ArrayList<String> verifyOpts) {\n+        boolean addedDiagnosticOpt = false;\n+        for (String s : opts) {\n+            if (s.startsWith(\"-XX:-BytecodeVerification\")) {\n+                if (!addedDiagnosticOpt) {\n+                    verifyOpts.add(\"-XX:+UnlockDiagnosticVMOptions\");\n+                    addedDiagnosticOpt = true;\n+                }\n+                verifyOpts.add(s);\n+            }\n+            if (s.startsWith(\"-Xverify\")) {\n+                verifyOpts.add(s);\n+            }\n+        }\n+    }\n+\n@@ -184,0 +200,1 @@\n+        ArrayList<String> verifyOpts = new ArrayList<String>();\n@@ -205,1 +222,3 @@\n-            if (tempBaseArchive == null || !(new File(tempBaseArchive)).isFile()) {\n+            captureVerifyOpts(opts.suffix, verifyOpts);\n+            int size = verifyOpts.size();\n+            if (tempBaseArchive == null || !(new File(tempBaseArchive)).isFile() || size > 0) {\n@@ -207,1 +226,5 @@\n-                dumpBaseArchive(tempBaseArchive);\n+                if (size == 0) {\n+                    dumpBaseArchive(tempBaseArchive);\n+                } else {\n+                    dumpBaseArchive(tempBaseArchive, verifyOpts.toArray(new String[size]));\n+                }\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/TestCommon.java","additions":26,"deletions":3,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,2 +45,2 @@\n-    static final String MAP_FAIL =\n-        \"shared archive file was created with less restrictive verification setting\";\n+    static final String MAP_FAIL_VFY_LOCAL =\n+        \"shared archive file's BytecodeVerificationLocal setting\";\n@@ -135,1 +135,1 @@\n-            {\"app\",   VFY_REMOTE, VFY_ALL,    MAP_FAIL},\n+            {\"app\",   VFY_REMOTE, VFY_ALL,    MAP_FAIL_VFY_LOCAL},\n@@ -143,1 +143,1 @@\n-            {\"app\",   VFY_NONE,   VFY_ALL,    MAP_FAIL},\n+            {\"app\",   VFY_NONE,   VFY_ALL,    MAP_FAIL_VFY_LOCAL},\n@@ -147,1 +147,1 @@\n-            {\"noApp\", VFY_REMOTE, VFY_ALL,    VFY_ERR},\n+            {\"noApp\", VFY_REMOTE, VFY_ALL,    MAP_FAIL_VFY_LOCAL},\n@@ -155,1 +155,1 @@\n-            {\"noApp\", VFY_NONE, VFY_ALL,      VFY_ERR},\n+            {\"noApp\", VFY_NONE, VFY_ALL,      MAP_FAIL_VFY_LOCAL},\n@@ -248,1 +248,1 @@\n-            {\"app\",   VFY_REMOTE, VFY_ALL,    MAP_FAIL},\n+            {\"app\",   VFY_REMOTE, VFY_ALL,    MAP_FAIL_VFY_LOCAL},\n@@ -256,1 +256,1 @@\n-            {\"app\",   VFY_NONE,   VFY_ALL,    MAP_FAIL},\n+            {\"app\",   VFY_NONE,   VFY_ALL,    MAP_FAIL_VFY_LOCAL},\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/VerifierTest.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"}]}