{"files":[{"patch":"@@ -275,1 +275,1 @@\n-    __ li(t1, (uint64_t)ShenandoahHeap::in_cset_fast_test_addr());\n+    __ mv(t1, ShenandoahHeap::in_cset_fast_test_addr());\n@@ -286,1 +286,1 @@\n-      __ li(ra, (int64_t)(uintptr_t)ShenandoahRuntime::load_reference_barrier_strong_narrow);\n+      __ mv(ra, CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier_strong_narrow));\n@@ -288,1 +288,1 @@\n-      __ li(ra, (int64_t)(uintptr_t)ShenandoahRuntime::load_reference_barrier_strong);\n+      __ mv(ra, CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier_strong));\n@@ -292,1 +292,1 @@\n-      __ li(ra, (int64_t)(uintptr_t)ShenandoahRuntime::load_reference_barrier_weak_narrow);\n+      __ mv(ra, CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier_weak_narrow));\n@@ -294,1 +294,1 @@\n-      __ li(ra, (int64_t)(uintptr_t)ShenandoahRuntime::load_reference_barrier_weak);\n+      __ mv(ra, CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier_weak));\n@@ -299,1 +299,1 @@\n-    __ li(ra, (int64_t)(uintptr_t)ShenandoahRuntime::load_reference_barrier_weak);\n+    __ mv(ra, CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier_weak));\n@@ -682,1 +682,1 @@\n-      __ li(ra, (int64_t)(uintptr_t)ShenandoahRuntime::load_reference_barrier_strong);\n+      __ mv(ra, CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier_strong));\n@@ -685,1 +685,1 @@\n-        __ li(ra, (int64_t)(uintptr_t)ShenandoahRuntime::load_reference_barrier_strong_narrow);\n+        __ mv(ra, CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier_strong_narrow));\n@@ -687,1 +687,1 @@\n-        __ li(ra, (int64_t)(uintptr_t)ShenandoahRuntime::load_reference_barrier_strong);\n+        __ mv(ra, CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier_strong));\n@@ -693,1 +693,1 @@\n-      __ li(ra, (int64_t)(uintptr_t)ShenandoahRuntime::load_reference_barrier_weak_narrow);\n+      __ mv(ra, CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier_weak_narrow));\n@@ -695,1 +695,1 @@\n-      __ li(ra, (int64_t)(uintptr_t)ShenandoahRuntime::load_reference_barrier_weak);\n+      __ mv(ra, CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier_weak));\n@@ -700,1 +700,1 @@\n-    __ li(ra, (int64_t)(uintptr_t)ShenandoahRuntime::load_reference_barrier_phantom);\n+    __ mv(ra, CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier_phantom));\n","filename":"src\/hotspot\/cpu\/riscv\/gc\/shenandoah\/shenandoahBarrierSetAssembler_riscv.cpp","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -382,1 +382,1 @@\n-  mv(t0, (address)b);\n+  movptr(t0, (address)b);\n@@ -421,1 +421,1 @@\n-  mv(t0, (address)b);\n+  movptr(t0, (address)b);\n@@ -1366,6 +1366,0 @@\n-void MacroAssembler::mv(Register Rd, address addr) {\n-  \/\/ Here in case of use with relocation, use fix length instruction\n-  \/\/ movptr instead of li\n-  movptr(Rd, addr);\n-}\n-\n@@ -2690,5 +2684,4 @@\n-  int32_t offset = 0;\n-  movptr_with_offset(ra, CAST_FROM_FN_PTR(address, Thread::current), offset);\n-  jalr(ra, ra, offset);\n-  if (thread != x10) {\n-    mv(thread, x10);\n+  mv(ra, CAST_FROM_FN_PTR(address, Thread::current));\n+  jalr(ra);\n+  if (thread != c_rarg0) {\n+    mv(thread, c_rarg0);\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp","additions":6,"deletions":13,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -516,0 +516,2 @@\n+  void mv(Register Rd, address addr)          { li(Rd, (int64_t)addr); }\n+\n@@ -517,3 +519,1 @@\n-  inline void mv(Register Rd, T o) {\n-    li(Rd, (int64_t)o);\n-  }\n+  inline void mv(Register Rd, T o)            { li(Rd, (int64_t)o); }\n@@ -524,1 +524,0 @@\n-  void mv(Register Rd, address addr);\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.hpp","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"}]}