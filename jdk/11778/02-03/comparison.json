{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,1 +33,1 @@\n-#include \"runtime\/clearFrameAnchorMark.hpp\"\n+#include \"runtime\/clearLastJavaFrameMark.hpp\"\n@@ -75,1 +75,1 @@\n-    ClearFrameAnchorMark dstm(_jt);\n+    ClearLastJavaFrameMark dstm(_jt);\n@@ -106,1 +106,1 @@\n-  ClearFrameAnchorMark dstm(_jt);\n+  ClearLastJavaFrameMark dstm(_jt);\n","filename":"src\/hotspot\/share\/gc\/z\/zStackWatermark.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1,62 +0,0 @@\n-\/*\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-#include \"precompiled.hpp\"\n-#include \"runtime\/clearFrameAnchorMark.hpp\"\n-#include \"runtime\/javaThread.hpp\"\n-\n-DEBUG_ONLY(THREAD_LOCAL bool ClearFrameAnchorMark::_is_active = false;)\n-\n-ClearFrameAnchorMark::ClearFrameAnchorMark(JavaThread* jt)\n-  : _jt(nullptr),\n-    _sp(nullptr) {\n-  if (jt == Thread::current()) {\n-    \/\/ This class only clears the frame anchor for the current thread.\n-    \/\/ We can't safely clear the frame anchor of another thread. Besides,\n-    \/\/ the point of this class is to protect against stack walks from\n-    \/\/ the current thread in a given scope.\n-    _jt = jt;\n-    _sp = begin(jt);\n-  }\n-}\n-\n-ClearFrameAnchorMark::~ClearFrameAnchorMark() {\n-  if (_jt != nullptr) {\n-    end(_jt, _sp);\n-  }\n-}\n-\n-intptr_t* ClearFrameAnchorMark::begin(JavaThread* jt) {\n-  assert(!_is_active, \"nesting not supported\");\n-  DEBUG_ONLY(_is_active = true;)\n-  intptr_t* sp = jt->frame_anchor()->last_Java_sp();\n-  jt->frame_anchor()->set_last_Java_sp(NULL);\n-  return sp;\n-}\n-\n-void ClearFrameAnchorMark::end(JavaThread* jt, intptr_t* sp) {\n-  assert(_is_active, \"mismatched begin and end\");\n-  jt->frame_anchor()->set_last_Java_sp(sp);\n-  DEBUG_ONLY(_is_active = false;)\n-}\n","filename":"src\/hotspot\/share\/runtime\/clearFrameAnchorMark.cpp","additions":0,"deletions":62,"binary":false,"changes":62,"status":"deleted"},{"patch":"@@ -1,52 +0,0 @@\n-\/*\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-#ifndef SHARE_RUNTIME_DISABLESTACKTRACINGMARK_HPP\n-#define SHARE_RUNTIME_DISABLESTACKTRACINGMARK_HPP\n-\n-#include \"memory\/allocation.hpp\"\n-#include \"utilities\/globalDefinitions.hpp\"\n-#include \"utilities\/macros.hpp\"\n-\n-class JavaThread;\n-\n-\/\/ Use this class to mark a section of code where stack tracing from the\n-\/\/ current thread is not safe and should be avoided.\n-class ClearFrameAnchorMark : public StackObj {\n-  DEBUG_ONLY(static THREAD_LOCAL bool _is_active;)\n-  JavaThread* _jt;\n-  intptr_t* _sp;\n-\n-  static intptr_t* begin(JavaThread* jt);\n-  static void end(JavaThread* jt, intptr_t* sp);\n-\n-public:\n-  ClearFrameAnchorMark(JavaThread* jt);\n-  ~ClearFrameAnchorMark();\n-\n-  DEBUG_ONLY(static bool is_active() { return _is_active; })\n-};\n-\n-\n-#endif \/\/ SHARE_RUNTIME_DISABLESTACKTRACINGMARK_HPP\n","filename":"src\/hotspot\/share\/runtime\/clearFrameAnchorMark.hpp","additions":0,"deletions":52,"binary":false,"changes":52,"status":"deleted"},{"patch":"@@ -0,0 +1,62 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+#include \"precompiled.hpp\"\n+#include \"runtime\/clearLastJavaFrameMark.hpp\"\n+#include \"runtime\/javaThread.hpp\"\n+\n+DEBUG_ONLY(THREAD_LOCAL bool ClearLastJavaFrameMark::_is_active = false;)\n+\n+ClearLastJavaFrameMark::ClearLastJavaFrameMark(JavaThread* jt)\n+  : _jt(nullptr),\n+    _sp(nullptr) {\n+  if (jt == Thread::current()) {\n+    \/\/ This class only clears the frame anchor for the current thread.\n+    \/\/ We can't safely clear the frame anchor of another thread. Besides,\n+    \/\/ the point of this class is to protect against stack walks from\n+    \/\/ the current thread in a given scope.\n+    _jt = jt;\n+    _sp = begin(jt);\n+  }\n+}\n+\n+ClearLastJavaFrameMark::~ClearLastJavaFrameMark() {\n+  if (_jt != nullptr) {\n+    end(_jt, _sp);\n+  }\n+}\n+\n+intptr_t* ClearLastJavaFrameMark::begin(JavaThread* jt) {\n+  assert(!_is_active, \"nesting not supported\");\n+  DEBUG_ONLY(_is_active = true;)\n+  intptr_t* sp = jt->frame_anchor()->last_Java_sp();\n+  jt->frame_anchor()->set_last_Java_sp(NULL);\n+  return sp;\n+}\n+\n+void ClearLastJavaFrameMark::end(JavaThread* jt, intptr_t* sp) {\n+  assert(_is_active, \"mismatched begin and end\");\n+  jt->frame_anchor()->set_last_Java_sp(sp);\n+  DEBUG_ONLY(_is_active = false;)\n+}\n","filename":"src\/hotspot\/share\/runtime\/clearLastJavaFrameMark.cpp","additions":62,"deletions":0,"binary":false,"changes":62,"status":"added"},{"patch":"@@ -0,0 +1,52 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+#ifndef SHARE_RUNTIME_CLEARLASTJAVAFRAMEMARK_HPP\n+#define SHARE_RUNTIME_CLEARLASTJAVAFRAMEMARK_HPP\n+\n+#include \"memory\/allocation.hpp\"\n+#include \"utilities\/globalDefinitions.hpp\"\n+#include \"utilities\/macros.hpp\"\n+\n+class JavaThread;\n+\n+\/\/ Use this class to mark a section of code where stack tracing from the\n+\/\/ current thread is not safe and should be avoided.\n+class ClearLastJavaFrameMark : public StackObj {\n+  DEBUG_ONLY(static THREAD_LOCAL bool _is_active;)\n+  JavaThread* _jt;\n+  intptr_t* _sp;\n+\n+  static intptr_t* begin(JavaThread* jt);\n+  static void end(JavaThread* jt, intptr_t* sp);\n+\n+public:\n+  ClearLastJavaFrameMark(JavaThread* jt);\n+  ~ClearLastJavaFrameMark();\n+\n+  DEBUG_ONLY(static bool is_active() { return _is_active; })\n+};\n+\n+\n+#endif \/\/ SHARE_RUNTIME_CLEARLASTJAVAFRAMEMARK_HPP\n","filename":"src\/hotspot\/share\/runtime\/clearLastJavaFrameMark.hpp","additions":52,"deletions":0,"binary":false,"changes":52,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -64,1 +64,1 @@\n-#include \"runtime\/clearFrameAnchorMark.hpp\"\n+#include \"runtime\/clearLastJavaFrameMark.hpp\"\n@@ -759,1 +759,1 @@\n-    ClearFrameAnchorMark dstm(thread);\n+    ClearLastJavaFrameMark dstm(thread);\n","filename":"src\/hotspot\/share\/runtime\/deoptimization.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}