{"files":[{"patch":"@@ -31,1 +31,0 @@\n-import java.io.File;\n@@ -33,5 +32,0 @@\n-import java.nio.file.Path;\n-import java.time.Duration;\n-import java.util.Arrays;\n-import java.util.Random;\n-import java.util.concurrent.TimeUnit;\n@@ -39,1 +33,0 @@\n-import jdk.jfr.FlightRecorder;\n@@ -42,1 +35,0 @@\n-import jdk.test.lib.jfr.EventNames;\n@@ -48,2 +40,0 @@\n-            r.enable(EventNames.JavaThreadStatistics)\n-             .withPeriod(Duration.ofMillis(100));\n@@ -51,20 +41,11 @@\n-            File repository = Path.of(System.getProperty(\"jdk.jfr.repository\")).toFile();\n-            for (int i = 0; i < 5; i++) {\n-                TimeUnit.SECONDS.sleep(1);\n-                try (Recording snapshot = FlightRecorder.getFlightRecorder().takeSnapshot()) {\n-                    InputStream stream = snapshot.getStream(null, null);\n-                    File[] jfrs = repository.listFiles(f -> f.getName().endsWith(\".jfr\"));\n-                    Arrays.sort(jfrs);\n-\n-                    int size = 0;\n-                    \/\/ the last file isn't counted in\n-                    for (int j = 0; j < jfrs.length - 1; j++) {\n-                        size += (int)jfrs[j].length();\n-                    }\n-                    Asserts.assertEquals(stream.available(), size);\n-                    int rc = new Random().nextInt(size);\n-                    int left = size - rc;\n-                    while (rc-- > 0) {\n-                         stream.read();\n-                    }\n-                    Asserts.assertEquals(stream.available(), left);\n+            try (Recording s = new Recording()) {\n+                s.start();\n+                s.stop();\n+            }\n+            r.stop();\n+            try (InputStream stream = r.getStream(null, null)) {\n+                int left = stream.available();\n+                Asserts.assertEquals(r.getSize(), (long) left);\n+                while (stream.read() != -1) {\n+                    left--;\n+                    Asserts.assertEquals(left, stream.available());\n@@ -72,0 +53,1 @@\n+                Asserts.assertEquals(0, left);\n","filename":"test\/jdk\/jdk\/jfr\/api\/consumer\/TestChunkInputStreamAvailable.java","additions":12,"deletions":30,"binary":false,"changes":42,"status":"modified"}]}