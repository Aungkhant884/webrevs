{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,0 +37,1 @@\n+    private long unstreamedSize = 0;\n@@ -45,0 +46,1 @@\n+            unstreamedSize += c.getSize();\n@@ -53,0 +55,1 @@\n+        long total = unstreamedSize;\n@@ -54,1 +57,1 @@\n-            return stream.available();\n+            total += stream.available();\n@@ -56,1 +59,1 @@\n-        return 0;\n+        return total <= Integer.MAX_VALUE ? (int) total : Integer.MAX_VALUE;\n@@ -65,0 +68,1 @@\n+        unstreamedSize -= currentChunk.getSize();\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/ChunkInputStream.java","additions":7,"deletions":3,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -0,0 +1,57 @@\n+\/*\n+ * Copyright (c) 2021, Alibaba Group Holding Limited. All Rights Reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation. Alibaba designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\/\n+\n+\/**\n+ * @test TestChunkInputStreamAvailable\n+ * @key jfr\n+ * @requires vm.hasJFR\n+ * @library \/test\/lib\n+ * @run main\/othervm jdk.jfr.api.consumer.TestChunkInputStreamAvailable\n+ *\/\n+package jdk.jfr.api.consumer;\n+\n+import java.io.InputStream;\n+\n+import jdk.jfr.Recording;\n+import jdk.test.lib.Asserts;\n+\n+public class TestChunkInputStreamAvailable {\n+\n+    public static void main(String[] args) throws Exception {\n+        try (Recording r = new Recording()) {\n+            r.start();\n+            try (Recording s = new Recording()) {\n+                s.start();\n+                s.stop();\n+            }\n+            r.stop();\n+            try (InputStream stream = r.getStream(null, null)) {\n+                int left = stream.available();\n+                Asserts.assertEquals(r.getSize(), (long) left);\n+                while (stream.read() != -1) {\n+                    left--;\n+                    Asserts.assertEquals(left, stream.available());\n+                }\n+                Asserts.assertEquals(0, left);\n+            }\n+        }\n+    }\n+}\n","filename":"test\/jdk\/jdk\/jfr\/api\/consumer\/TestChunkInputStreamAvailable.java","additions":57,"deletions":0,"binary":false,"changes":57,"status":"added"}]}