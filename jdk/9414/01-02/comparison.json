{"files":[{"patch":"@@ -87,0 +87,1 @@\n+        printPipes(pipesAfter, \"After\");\n@@ -120,12 +121,12 @@\n-        Stream<Path> s = Files.walk(path);\n-        return s.filter(Files::isSymbolicLink)\n-                .map(p -> {\n-                    try {\n-                        return new PipeRecord(p, Files.readSymbolicLink(p));\n-                    } catch (IOException ioe) {\n-                    }\n-                    return new PipeRecord(p, null);\n-                })\n-                .filter(p1 -> p1.link().toString().startsWith(\"pipe:\"))\n-                .collect(Collectors.toSet());\n-\n+        try (Stream<Path> s = Files.walk(path)) {\n+            return s.filter(Files::isSymbolicLink)\n+                    .map(p -> {\n+                        try {\n+                            return new PipeRecord(p, Files.readSymbolicLink(p));\n+                        } catch (IOException ioe) {\n+                        }\n+                        return new PipeRecord(p, null);\n+                    })\n+                    .filter(p1 -> p1.link().toString().startsWith(\"pipe:\"))\n+                    .collect(Collectors.toSet());\n+        }\n","filename":"test\/jdk\/java\/lang\/ProcessBuilder\/PipelineLeaksFD.java","additions":13,"deletions":12,"binary":false,"changes":25,"status":"modified"}]}