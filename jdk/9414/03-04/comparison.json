{"files":[{"patch":"@@ -31,0 +31,1 @@\n+import java.nio.file.DirectoryStream;\n@@ -36,2 +37,0 @@\n-import java.util.stream.Collectors;\n-import java.util.stream.Stream;\n@@ -120,11 +119,13 @@\n-        try (Stream<Path> s = Files.walk(path)) {\n-            return s.filter(Files::isSymbolicLink)\n-                    .map(p -> {\n-                        try {\n-                            return new PipeRecord(p, Files.readSymbolicLink(p));\n-                        } catch (IOException ioe) {\n-                        }\n-                        return new PipeRecord(p, null);\n-                    })\n-                    .filter(p1 -> p1.link().toString().startsWith(\"pipe:\"))\n-                    .collect(Collectors.toSet());\n+        Set<PipeRecord> pipes = new HashSet<>();\n+        try (DirectoryStream<Path> s = Files.newDirectoryStream(path)) {\n+            s.forEach(p -> {\n+                try {\n+                     if (Files.isSymbolicLink(p)) {\n+                         Path link = Files.readSymbolicLink(p);\n+                         if (link.toString().startsWith(\"pipe:\")) {\n+                             pipes.add(new PipeRecord(p, link));\n+                         }\n+                     }\n+                 } catch (IOException ioe) {\n+                 }\n+            });\n@@ -132,0 +133,1 @@\n+        return pipes;\n","filename":"test\/jdk\/java\/lang\/ProcessBuilder\/PipelineLeaksFD.java","additions":15,"deletions":13,"binary":false,"changes":28,"status":"modified"}]}