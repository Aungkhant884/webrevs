{"files":[{"patch":"@@ -297,1 +297,0 @@\n-      any_cgroup_mounts_found = true;\n@@ -300,0 +299,1 @@\n+          any_cgroup_mounts_found = true;\n@@ -305,0 +305,1 @@\n+          any_cgroup_mounts_found = true;\n@@ -324,0 +325,1 @@\n+          any_cgroup_mounts_found = true;\n@@ -329,0 +331,1 @@\n+          any_cgroup_mounts_found = true;\n@@ -342,1 +345,1 @@\n-    log_trace(os, container)(\"No cgroup controllers mounted.\");\n+    log_trace(os, container)(\"No relevant cgroup controllers mounted.\");\n","filename":"src\/hotspot\/os\/linux\/cgroupSubsystem_linux.cpp","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -36,0 +36,2 @@\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n@@ -49,0 +51,25 @@\n+    \/*\n+     * From https:\/\/www.kernel.org\/doc\/Documentation\/filesystems\/proc.txt\n+     *\n+     *  36 35 98:0 \/mnt1 \/mnt2 rw,noatime master:1 - ext3 \/dev\/root rw,errors=continue\n+     *  (1)(2)(3)   (4)   (5)      (6)      (7)   (8) (9)   (10)         (11)\n+     *\n+     *  (1) mount ID:  unique identifier of the mount (may be reused after umount)\n+     *  (2) parent ID:  ID of parent (or of self for the top of the mount tree)\n+     *  (3) major:minor:  value of st_dev for files on filesystem\n+     *  (4) root:  root of the mount within the filesystem\n+     *  (5) mount point:  mount point relative to the process's root\n+     *  (6) mount options:  per mount options\n+     *  (7) optional fields:  zero or more fields of the form \"tag[:value]\"\n+     *  (8) separator:  marks the end of the optional fields\n+     *  (9) filesystem type:  name of filesystem of the form \"type[.subtype]\"\n+     *  (10) mount source:  filesystem specific information or \"none\"\n+     *  (11) super options:  per super block options\n+     *\/\n+    private static final Pattern MOUNTINFO_PATTERN = Pattern.compile(\n+        \"^[^\\\\s]+\\\\s+[^\\\\s]+\\\\s+[^\\\\s]+\\\\s+\" + \/\/ (1), (2), (3)\n+        \"[^\\\\s]+\\\\s+[^\\\\s]+\\\\s+\" +             \/\/ (4), (5)\n+        \"[^-]+-\\\\s+\" +                         \/\/ (6), (7), (8)\n+        \"([^\\\\s]+)\\\\s+\" +                      \/\/ (9)          - group 1, filesystem type\n+        \".*$\");                                \/\/ (10), (11)\n+\n@@ -117,2 +144,2 @@\n-        \/\/ If there are no mounted controllers in mountinfo, but we've only\n-        \/\/ seen 0 hierarchy IDs in \/proc\/cgroups, we are on a cgroups v1 system.\n+        \/\/ If there are no mounted, relevant cgroup controllers in mountinfo and only\n+        \/\/ 0 hierarchy IDs in \/proc\/cgroups have been seen, we are on a cgroups v1 system.\n@@ -120,1 +147,2 @@\n-        \/\/ information from mountinfo for the mounted controller paths anyway.\n+        \/\/ information from mountinfo for the mounted controller paths which we wouldn't\n+        \/\/ find anyway in that case.\n@@ -122,1 +150,1 @@\n-            boolean anyCgroupMounted = mntInfo.anyMatch(line -> line.contains(\"cgroup\"));\n+            boolean anyCgroupMounted = mntInfo.anyMatch(CgroupSubsystemFactory::noSystemdCgroupLine);\n@@ -131,0 +159,11 @@\n+    private static boolean noSystemdCgroupLine(String line) {\n+         Matcher lineMatcher = MOUNTINFO_PATTERN.matcher(line.trim());\n+         if (lineMatcher.matches()) {\n+             String fsType = lineMatcher.group(1);\n+             return fsType.startsWith(\"cgroup\") && !line.contains(\"systemd\");\n+         } else {\n+           \/\/ fallback to old, pre JDK-8245543, behaviour\n+           return line.contains(\"cgroup\");\n+         }\n+    }\n+\n","filename":"src\/java.base\/linux\/classes\/jdk\/internal\/platform\/CgroupSubsystemFactory.java","additions":43,"deletions":4,"binary":false,"changes":47,"status":"modified"},{"patch":"@@ -65,0 +65,1 @@\n+    private Path cgroupv1MntInfoSystemdOnly;\n@@ -131,0 +132,3 @@\n+    private String mntInfoCgroupsV1SystemdOnly =\n+            \"35 26 0:26 \/ \/sys\/fs\/cgroup\/systemd rw,nosuid,nodev,noexec,relatime - cgroup systemd rw,name=systemd\\n\" +\n+            \"26 18 0:19 \/ \/sys\/fs\/cgroup rw,relatime - tmpfs none rw,size=4k,mode=755\\n\";\n@@ -171,0 +175,3 @@\n+\n+            cgroupv1MntInfoSystemdOnly = Paths.get(existingDirectory.toString(), \"mnt_info_cgroupv1_systemd_only\");\n+            Files.writeString(cgroupv1MntInfoSystemdOnly, mntInfoCgroupsV1SystemdOnly);\n@@ -198,0 +205,10 @@\n+    public void testCgroupv1SystemdOnly(WhiteBox wb) {\n+        String procCgroups = cgroupv1CgInfoZeroHierarchy.toString();\n+        String procSelfCgroup = cgroupV1SelfCgroup.toString();\n+        String procSelfMountinfo = cgroupv1MntInfoSystemdOnly.toString();\n+        int retval = wb.validateCgroup(procCgroups, procSelfCgroup, procSelfMountinfo);\n+        Asserts.assertEQ(INVALID_CGROUPS_NO_MOUNT, retval, \"Only systemd mounted. Invalid\");\n+        Asserts.assertFalse(isValidCgroup(retval));\n+        System.out.println(\"testCgroupv1SystemdOnly PASSED!\");\n+    }\n+\n@@ -264,0 +281,1 @@\n+            test.testCgroupv1SystemdOnly(wb);\n","filename":"test\/hotspot\/jtreg\/containers\/cgroup\/CgroupSubsystemFactory.java","additions":18,"deletions":0,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -59,0 +59,1 @@\n+    private Path cgroupv1MntInfoSystemdOnly;\n@@ -101,0 +102,3 @@\n+    private String mntInfoCgroupsV1SystemdOnly =\n+            \"35 26 0:26 \/ \/sys\/fs\/cgroup\/systemd rw,nosuid,nodev,noexec,relatime - cgroup systemd rw,name=systemd\\n\" +\n+            \"26 18 0:19 \/ \/sys\/fs\/cgroup rw,relatime - tmpfs none rw,size=4k,mode=755\\n\";\n@@ -121,0 +125,3 @@\n+\n+            cgroupv1MntInfoSystemdOnly = Paths.get(existingDirectory.toString(), \"mountinfo_cgroupv1_systemd_only\");\n+            Files.writeString(cgroupv1MntInfoSystemdOnly, mntInfoCgroupsV1SystemdOnly);\n@@ -135,0 +142,9 @@\n+    @Test\n+    public void testCgroupv1SystemdOnly() throws IOException {\n+        String cgroups = cgroupv1CgInfoZeroHierarchy.toString();\n+        String mountInfo = cgroupv1MntInfoSystemdOnly.toString();\n+        Optional<CgroupTypeResult> result = CgroupSubsystemFactory.determineType(mountInfo, cgroups);\n+\n+        assertTrue(\"zero hierarchy ids with no *relevant* controllers mounted\", result.isEmpty());\n+    }\n+\n","filename":"test\/jdk\/jdk\/internal\/platform\/cgroup\/TestCgroupSubsystemFactory.java","additions":16,"deletions":0,"binary":false,"changes":16,"status":"modified"}]}