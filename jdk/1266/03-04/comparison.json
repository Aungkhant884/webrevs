{"files":[{"patch":"@@ -495,4 +495,0 @@\n-void MacroAssembler::reset_last_Java_frame(bool clear_fp) {\n-  reset_last_Java_frame(r15_thread, clear_fp);\n-}\n-\n@@ -752,0 +748,4 @@\n+void MacroAssembler::reset_last_Java_frame(bool clear_fp) {\n+  reset_last_Java_frame(r15_thread, clear_fp);\n+}\n+\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -36,1 +36,3 @@\n-JNI_ENTRY_CPP_NOENV(void, ProgrammableUpcallHandler::upcall_helper(jobject rec, address buff))\n+void ProgrammableUpcallHandler::upcall_helper(jobject rec, address buff) {\n+  JavaThread* THREAD = JavaThread::current();\n+  ThreadInVMfromNative tiv(THREAD);\n@@ -39,1 +41,1 @@\n-  ResourceMark rm(thread);\n+  ResourceMark rm(THREAD);\n@@ -46,2 +48,2 @@\n-  JavaCalls::call_static(&result, upcall_method.klass, upcall_method.name, upcall_method.sig, &args, thread);\n-JNI_END\n+  JavaCalls::call_static(&result, upcall_method.klass, upcall_method.name, upcall_method.sig, &args, CATCH);\n+}\n","filename":"src\/hotspot\/share\/prims\/universalUpcallHandler.cpp","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -433,5 +433,0 @@\n-#define JNI_ENTRY_BASE(result_type, header, thread)                  \\\n-  ThreadInVMfromNative __tiv(thread);                                \\\n-  debug_only(VMNativeEntryWrapper __vew;)                            \\\n-  VM_ENTRY_BASE(result_type, header, thread)\n-\n@@ -447,7 +442,3 @@\n-    JNI_ENTRY_BASE(result_type, header, thread)\n-\n-#define JNI_ENTRY_CPP_NOENV(result_type, header)                     \\\n-  result_type header { {                                             \\\n-    JavaThread* thread = JavaThread::current();                      \\\n-    JNI_ENTRY_BASE(result_type, header, thread)                      \\\n-    WeakPreserveExceptionMark __wem(thread);\n+    ThreadInVMfromNative __tiv(thread);                              \\\n+    debug_only(VMNativeEntryWrapper __vew;)                          \\\n+    VM_ENTRY_BASE(result_type, header, thread)\n","filename":"src\/hotspot\/share\/runtime\/interfaceSupport.inline.hpp","additions":3,"deletions":12,"binary":false,"changes":15,"status":"modified"}]}