[{"commit":{"message":"Template generation of carrier specific micro-benchmarks.\n\n* Benchmarks are now split out into carrier specific source files\n* All variants and views are covered\n* Test scenario naming is idiomatic\n\nEven with the split by carrier, regex expressions can be used to easily run subsets the benchmarks. E.g. test all memory operations related to Short with read-only buffers:\n\n$ java -jar benchmarks.jar \"org.openjdk.bench.java.nio..*Buffers.testDirect.*Short.*\"  -l\nBenchmarks:\norg.openjdk.bench.java.nio.ByteBuffers.testDirectLoopGetShortRO\norg.openjdk.bench.java.nio.ByteBuffers.testDirectLoopGetShortSwapRO\norg.openjdk.bench.java.nio.ShortBuffers.testDirectBulkGetShortViewRO\norg.openjdk.bench.java.nio.ShortBuffers.testDirectBulkGetShortViewSwapRO\norg.openjdk.bench.java.nio.ShortBuffers.testDirectLoopGetShortViewRO\norg.openjdk.bench.java.nio.ShortBuffers.testDirectLoopGetShortViewSwapRO"},"files":[{"filename":"test\/micro\/org\/openjdk\/bench\/java\/nio\/ByteBuffers.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/nio\/CharBuffers.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/nio\/DoubleBuffers.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/nio\/FloatBuffers.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/nio\/IntBuffers.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/nio\/LongBuffers.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/nio\/ShortBuffers.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/nio\/X-Buffers-bin.java.template"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/nio\/X-Buffers.java.template"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/nio\/X-ByteBuffers-bin.java.template"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/nio\/genBuffers.sh"}],"sha":"a8e81a849e2b173c7131e4a23470c759b68387ed"},{"commit":{"message":"Merge branch 'master' into bb-bench"},"files":[],"sha":"4355d4290d3fcd062c1cdb0eabebb17e1cc17bab"},{"commit":{"message":"Add explicitly allocated heap carrier buffer tests"},"files":[{"filename":"test\/micro\/org\/openjdk\/bench\/java\/nio\/ByteBuffers.java"}],"sha":"5ee5d8bfbe1ad61d7c14e287c863b611dac819a5"},{"commit":{"message":"Replace Single with Loop"},"files":[{"filename":"test\/micro\/org\/openjdk\/bench\/java\/nio\/ByteBuffers.java"}],"sha":"aafdaa2c2c92ed24971c87c2f10ade4a54ed85f6"},{"commit":{"message":"whitespace"},"files":[{"filename":"test\/micro\/org\/openjdk\/bench\/java\/nio\/ByteBuffers.java"}],"sha":"814e1819ed8ba36cf870f00e72589320902a0cb9"},{"commit":{"message":"Add additional carrier views and endianness variants.\n\nA large number of variants are now covered. The individual benchmarks conform to the following convention:\n  test(Direct|Heap)(Bulk|Single)(Get|Put)(Byte|Char|Short|Int|Long|Float|Double)(View)?(Swap)?\n\nThis allows to easily run a subset of particular interest. For example:\n  Direct only :- \"org.openjdk.bench.java.nio.ByteBuffers.testDirect.*\"\n  Char only   :- \"org.openjdk.bench.java.nio.ByteBuffers.test.*Char.*\"\n  Bulk only   :- \"org.openjdk.bench.java.nio.ByteBuffers.test.*Bulk.*\"\n  Put with Int or Long carrier :-\n     test(Direct|Heap)(Single)(Put)(Int|Long)(View)?(Swap)?\"\n\nRunning all variants together is likely not all that useful, since there will be a lot of data.\n\nThe param sizes are changed so as to better allow for wider carrier views.\n\nThere are a lot of individual benchmark methods, but their implementation is trivial, and largely mechanical.\n\nQuestion: where do folk stand on having a `main` method in a benchmark - as a standalone-run sanity? I found this useful to assert the validity of the benchmark code. It can be commented out if it could somehow affect the benchmark runs.\n\n( I omitted read-only views, since they less interesting, and we already have a lot of variants )"},"files":[{"filename":"test\/micro\/org\/openjdk\/bench\/java\/nio\/ByteBuffers.java"}],"sha":"84dabc305138ef29bb39c89ce241e363a3461c54"},{"commit":{"message":"Initial changes"},"files":[{"filename":"test\/micro\/org\/openjdk\/bench\/java\/nio\/ByteBuffers.java"}],"sha":"5e91e63efadacf1cd0c34e7da4837117876501d4"}]