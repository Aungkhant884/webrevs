{"files":[{"patch":"@@ -118,4 +118,4 @@\n-    private transient ColorTransform this2srgb;\n-    private transient ColorTransform srgb2this;\n-    private transient ColorTransform this2xyz;\n-    private transient ColorTransform xyz2this;\n+    private transient volatile ColorTransform this2srgb;\n+    private transient volatile ColorTransform srgb2this;\n+    private transient volatile ColorTransform this2xyz;\n+    private transient volatile ColorTransform xyz2this;\n@@ -196,2 +196,1 @@\n-    public float[]    toRGB (float[] colorvalue) {\n-\n+    public float[] toRGB(float[] colorvalue) {\n@@ -199,11 +198,14 @@\n-            ColorTransform[] transformList = new ColorTransform [2];\n-            ICC_ColorSpace srgbCS =\n-                (ICC_ColorSpace) ColorSpace.getInstance (CS_sRGB);\n-            PCMM mdl = CMSManager.getModule();\n-            transformList[0] = mdl.createTransform(\n-                thisProfile, ColorTransform.Any, ColorTransform.In);\n-            transformList[1] = mdl.createTransform(\n-                srgbCS.getProfile(), ColorTransform.Any, ColorTransform.Out);\n-            this2srgb = mdl.createTransform(transformList);\n-            if (needScaleInit) {\n-                setComponentScaling();\n+            synchronized (this) {\n+                if (this2srgb == null) {\n+                    ColorTransform[] transforms = new ColorTransform[2];\n+                    var srgb = (ICC_ColorSpace) getInstance(CS_sRGB);\n+                    PCMM mdl = CMSManager.getModule();\n+                    transforms[0] = mdl.createTransform(thisProfile,\n+                                    ColorTransform.Any, ColorTransform.In);\n+                    transforms[1] = mdl.createTransform(srgb.getProfile(),\n+                                    ColorTransform.Any, ColorTransform.Out);\n+                    if (needScaleInit) {\n+                        setComponentScaling();\n+                    }\n+                    this2srgb = mdl.createTransform(transforms);\n+                }\n@@ -246,2 +248,1 @@\n-    public float[]    fromRGB(float[] rgbvalue) {\n-\n+    public float[] fromRGB(float[] rgbvalue) {\n@@ -249,11 +250,14 @@\n-            ColorTransform[] transformList = new ColorTransform [2];\n-            ICC_ColorSpace srgbCS =\n-                (ICC_ColorSpace) ColorSpace.getInstance (CS_sRGB);\n-            PCMM mdl = CMSManager.getModule();\n-            transformList[0] = mdl.createTransform(\n-                srgbCS.getProfile(), ColorTransform.Any, ColorTransform.In);\n-            transformList[1] = mdl.createTransform(\n-                thisProfile, ColorTransform.Any, ColorTransform.Out);\n-            srgb2this = mdl.createTransform(transformList);\n-            if (needScaleInit) {\n-                setComponentScaling();\n+            synchronized (this) {\n+                if (srgb2this == null) {\n+                    ColorTransform[] transforms = new ColorTransform[2];\n+                    var srgb = (ICC_ColorSpace) getInstance(CS_sRGB);\n+                    PCMM mdl = CMSManager.getModule();\n+                    transforms[0] = mdl.createTransform(srgb.getProfile(),\n+                                    ColorTransform.Any, ColorTransform.In);\n+                    transforms[1] = mdl.createTransform(thisProfile,\n+                                    ColorTransform.Any, ColorTransform.Out);\n+                    if (needScaleInit) {\n+                        setComponentScaling();\n+                    }\n+                    srgb2this = mdl.createTransform(transforms);\n+                }\n@@ -376,2 +380,1 @@\n-    public float[]    toCIEXYZ(float[] colorvalue) {\n-\n+    public float[] toCIEXYZ(float[] colorvalue) {\n@@ -379,17 +382,20 @@\n-            ColorTransform[] transformList = new ColorTransform [2];\n-            ICC_ColorSpace xyzCS =\n-                (ICC_ColorSpace) ColorSpace.getInstance (CS_CIEXYZ);\n-            PCMM mdl = CMSManager.getModule();\n-            try {\n-                transformList[0] = mdl.createTransform(\n-                    thisProfile, ICC_Profile.icRelativeColorimetric,\n-                    ColorTransform.In);\n-            } catch (CMMException e) {\n-                transformList[0] = mdl.createTransform(\n-                    thisProfile, ColorTransform.Any, ColorTransform.In);\n-            }\n-            transformList[1] = mdl.createTransform(\n-                xyzCS.getProfile(), ColorTransform.Any, ColorTransform.Out);\n-            this2xyz = mdl.createTransform (transformList);\n-            if (needScaleInit) {\n-                setComponentScaling();\n+            synchronized (this) {\n+                if (this2xyz == null) {\n+                    ColorTransform[] transforms = new ColorTransform[2];\n+                    var xyz = (ICC_ColorSpace) getInstance(CS_CIEXYZ);\n+                    PCMM mdl = CMSManager.getModule();\n+                    try {\n+                        transforms[0] = mdl.createTransform(thisProfile,\n+                                        ICC_Profile.icRelativeColorimetric,\n+                                        ColorTransform.In);\n+                    } catch (CMMException e) {\n+                        transforms[0] = mdl.createTransform(thisProfile,\n+                                        ColorTransform.Any, ColorTransform.In);\n+                    }\n+                    transforms[1] = mdl.createTransform(xyz.getProfile(),\n+                                    ColorTransform.Any, ColorTransform.Out);\n+                    if (needScaleInit) {\n+                        setComponentScaling();\n+                    }\n+                    this2xyz = mdl.createTransform(transforms);\n+                }\n@@ -514,2 +520,1 @@\n-    public float[]    fromCIEXYZ(float[] colorvalue) {\n-\n+    public float[] fromCIEXYZ(float[] colorvalue) {\n@@ -517,17 +522,20 @@\n-            ColorTransform[] transformList = new ColorTransform [2];\n-            ICC_ColorSpace xyzCS =\n-                (ICC_ColorSpace) ColorSpace.getInstance (CS_CIEXYZ);\n-            PCMM mdl = CMSManager.getModule();\n-            transformList[0] = mdl.createTransform (\n-                xyzCS.getProfile(), ColorTransform.Any, ColorTransform.In);\n-            try {\n-                transformList[1] = mdl.createTransform(\n-                    thisProfile, ICC_Profile.icRelativeColorimetric,\n-                    ColorTransform.Out);\n-            } catch (CMMException e) {\n-                transformList[1] = CMSManager.getModule().createTransform(\n-                thisProfile, ColorTransform.Any, ColorTransform.Out);\n-            }\n-            xyz2this = mdl.createTransform(transformList);\n-            if (needScaleInit) {\n-                setComponentScaling();\n+            synchronized (this) {\n+                if (xyz2this == null) {\n+                    ColorTransform[] transforms = new ColorTransform[2];\n+                    var xyz = (ICC_ColorSpace) getInstance(CS_CIEXYZ);\n+                    PCMM mdl = CMSManager.getModule();\n+                    transforms[0] = mdl.createTransform(xyz.getProfile(),\n+                                    ColorTransform.Any, ColorTransform.In);\n+                    try {\n+                        transforms[1] = mdl.createTransform(thisProfile,\n+                                        ICC_Profile.icRelativeColorimetric,\n+                                        ColorTransform.Out);\n+                    } catch (CMMException e) {\n+                        transforms[1] = mdl.createTransform(thisProfile,\n+                                        ColorTransform.Any, ColorTransform.Out);\n+                    }\n+                    if (needScaleInit) {\n+                        setComponentScaling();\n+                    }\n+                    xyz2this = mdl.createTransform(transforms);\n+                }\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/color\/ICC_ColorSpace.java","additions":76,"deletions":68,"binary":false,"changes":144,"status":"modified"},{"patch":"@@ -0,0 +1,102 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.color.ColorSpace;\n+import java.awt.color.ICC_ColorSpace;\n+import java.awt.color.ICC_Profile;\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.TimeUnit;\n+\n+\/**\n+ * @test\n+ * @bug 8254370\n+ * @summary Verifies MT safety of ICC_ColorSpace#To\/From methods\n+ *\/\n+public final class MTICC_ColorSpaceToFrom {\n+\n+    private enum Method {\n+        FROM_RGB, FROM_XYZ, TO_RGB, TO_XYZ;\n+    }\n+\n+    static volatile long endtime;\n+    static volatile boolean failed;\n+\n+    public static void main(String[] args) throws Exception {\n+        ICC_Profile srgb = ICC_Profile.getInstance(ColorSpace.CS_sRGB);\n+        ICC_Profile gray = ICC_Profile.getInstance(ColorSpace.CS_GRAY);\n+        ICC_Profile xyz = ICC_Profile.getInstance(ColorSpace.CS_CIEXYZ);\n+        ICC_Profile lrgb = ICC_Profile.getInstance(ColorSpace.CS_LINEAR_RGB);\n+        ICC_Profile pycc = ICC_Profile.getInstance(ColorSpace.CS_PYCC);\n+\n+        \/\/ Will run the test no more than 15 seconds\n+        endtime = System.nanoTime() + TimeUnit.SECONDS.toNanos(10);\n+        for (int i = 0; i < 1000 && !isComplete(); i++) {\n+            for (Method method : new Method[]{Method.FROM_RGB, Method.FROM_XYZ,\n+                                              Method.TO_RGB, Method.TO_XYZ}) {\n+                test(new ICC_ColorSpace(srgb), method);\n+                test(new ICC_ColorSpace(gray), method);\n+                test(new ICC_ColorSpace(xyz), method);\n+                test(new ICC_ColorSpace(lrgb), method);\n+                test(new ICC_ColorSpace(pycc), method);\n+            }\n+        }\n+        if (failed) {\n+            throw new RuntimeException();\n+        }\n+    }\n+\n+    private static void test(ColorSpace cs, Method method) throws Exception {\n+        Thread[] ts = new Thread[10];\n+        CountDownLatch latch = new CountDownLatch(ts.length);\n+        for (int i = 0; i < ts.length; i++) {\n+            ts[i] = new Thread(() -> {\n+                latch.countDown();\n+                try {\n+                    latch.await();\n+                } catch (InterruptedException ex) {\n+                }\n+                try {\n+                    switch (method) {\n+                        case TO_RGB -> cs.toRGB(new float[3]);\n+                        case FROM_RGB -> cs.fromRGB(new float[3]);\n+                        case TO_XYZ -> cs.toCIEXYZ(new float[3]);\n+                        case FROM_XYZ -> cs.fromCIEXYZ(new float[3]);\n+                    }\n+                } catch (Throwable t) {\n+                    t.printStackTrace();\n+                    failed = true;\n+                }\n+            });\n+        }\n+        for (Thread t : ts) {\n+            t.start();\n+        }\n+        for (Thread t : ts) {\n+            t.join();\n+        }\n+    }\n+\n+    private static boolean isComplete() {\n+        return endtime - System.nanoTime() < 0 || failed;\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/color\/MTICC_ColorSpaceToFrom.java","additions":102,"deletions":0,"binary":false,"changes":102,"status":"added"}]}