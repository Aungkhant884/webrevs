{"files":[{"patch":"@@ -1381,1 +1381,1 @@\n-            List<JCVariableDecl> params = make.Params(constructorType().getParameterTypes(), constructorSymbol());\n+            List<JCVariableDecl> params = make.Params(constructorSymbol(), constructorType().getParameterTypes());\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/TypeEnter.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1038,1 +1038,1 @@\n-                Params(mtype.getParameterTypes(), m),\n+                Params(m, mtype.getParameterTypes()),\n@@ -1067,2 +1067,3 @@\n-    \/** Create a list of value parameter trees x0, ..., xn from a list of\n-     *  their types and their owner.\n+    \/** Create a list of value parameter trees for a method's parameters.\n+     *  If the method has parameter names defined, use those same symbols,\n+     *  otherwse create placeholders x0, x1, ..., xn.\n@@ -1070,1 +1071,1 @@\n-    public List<JCVariableDecl> Params(List<Type> argtypes, Symbol owner) {\n+    public List<JCVariableDecl> Params(MethodSymbol mth, List<Type> argtypes) {\n@@ -1072,3 +1073,3 @@\n-        MethodSymbol mth = (owner.kind == MTH) ? ((MethodSymbol)owner) : null;\n-        if (mth != null && mth.params != null && argtypes.length() == mth.params.length()) {\n-            for (VarSymbol param : ((MethodSymbol)owner).params)\n+        if (mth.params != null) {\n+            Assert.check(argtypes.length() == mth.params.length());\n+            for (VarSymbol param : mth.params)\n@@ -1079,1 +1080,1 @@\n-                params.append(Param(paramName(i++), l.head, owner));\n+                params.append(Param(paramName(i++), l.head, mth));\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/tree\/TreeMaker.java","additions":9,"deletions":8,"binary":false,"changes":17,"status":"modified"}]}