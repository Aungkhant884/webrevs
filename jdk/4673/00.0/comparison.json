{"files":[{"patch":"@@ -11483,2 +11483,1 @@\n-  predicate(!((ClearArrayNode*)n)->is_large() &&\n-              (UseAVX <= 2));\n+  predicate(!((ClearArrayNode*)n)->is_large() && (UseAVX <= 2));\n@@ -11544,3 +11543,1 @@\n-  predicate(!((ClearArrayNode*)n)->is_large() &&\n-               UseAVX > 2 &&\n-               !n->in(2)->bottom_type()->is_int()->is_con());\n+  predicate(!((ClearArrayNode*)n)->is_large() && (UseAVX > 2));\n@@ -11548,0 +11545,1 @@\n+  ins_cost(125);\n@@ -11606,1 +11604,1 @@\n-  predicate(UseAVX <= 2 && ((ClearArrayNode*)n)->is_large());\n+  predicate((UseAVX <= 2) && ((ClearArrayNode*)n)->is_large());\n@@ -11656,1 +11654,1 @@\n-  predicate(UseAVX > 2 && ((ClearArrayNode*)n)->is_large());\n+  predicate((UseAVX > 2) && ((ClearArrayNode*)n)->is_large());\n@@ -11708,2 +11706,1 @@\n-               (UseAVX > 2 && VM_Version::supports_avx512vlbw() &&\n-                 n->in(2)->bottom_type()->is_int()->is_con()));\n+               ((UseAVX > 2) && VM_Version::supports_avx512vlbw()));\n@@ -11711,0 +11708,1 @@\n+  ins_cost(100);\n","filename":"src\/hotspot\/cpu\/x86\/x86_32.ad","additions":7,"deletions":9,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -11046,2 +11046,1 @@\n-  predicate(!((ClearArrayNode*)n)->is_large() &&\n-              (UseAVX <= 2));\n+  predicate(!((ClearArrayNode*)n)->is_large() && (UseAVX <= 2));\n@@ -11107,3 +11106,1 @@\n-  predicate(!((ClearArrayNode*)n)->is_large() &&\n-               UseAVX > 2 &&\n-               !n->in(2)->bottom_type()->is_long()->is_con());\n+  predicate(!((ClearArrayNode*)n)->is_large() && (UseAVX > 2));\n@@ -11111,0 +11108,1 @@\n+  ins_cost(125);\n@@ -11169,1 +11167,1 @@\n-  predicate(UseAVX <=2 && ((ClearArrayNode*)n)->is_large());\n+  predicate((UseAVX <=2) && ((ClearArrayNode*)n)->is_large());\n@@ -11220,1 +11218,1 @@\n-  predicate(UseAVX > 2 && ((ClearArrayNode*)n)->is_large());\n+  predicate((UseAVX > 2) && ((ClearArrayNode*)n)->is_large());\n@@ -11271,2 +11269,1 @@\n-              (UseAVX > 2 && VM_Version::supports_avx512vlbw() &&\n-               n->in(2)->bottom_type()->is_long()->is_con()));\n+              ((UseAVX > 2) && VM_Version::supports_avx512vlbw()));\n@@ -11274,0 +11271,1 @@\n+  ins_cost(100);\n","filename":"src\/hotspot\/cpu\/x86\/x86_64.ad","additions":7,"deletions":9,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -968,0 +968,1 @@\n+          \/\/ If the InitializeNode has no memory out, it will die, and tmp will become NULL\n@@ -969,1 +970,1 @@\n-          assert(tmp == _callprojs.fallthrough_catchproj, \"allocation control projection\");\n+          assert(tmp == NULL || tmp == _callprojs.fallthrough_catchproj, \"allocation control projection\");\n","filename":"src\/hotspot\/share\/opto\/macro.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -3309,1 +3309,2 @@\n-    return;\n+    assert(Opcode() == Op_Initialize, \"Only seen when there are no use of init memory\");\n+    assert(outcnt() == 1, \"Only control then\");\n@@ -3318,2 +3319,6 @@\n-  igvn->replace_node(proj_out(TypeFunc::Memory), in(TypeFunc::Memory));\n-  igvn->replace_node(proj_out(TypeFunc::Control), in(TypeFunc::Control));\n+  if (proj_out_or_null(TypeFunc::Memory) != NULL) {\n+    igvn->replace_node(proj_out(TypeFunc::Memory), in(TypeFunc::Memory));\n+  }\n+  if (proj_out_or_null(TypeFunc::Control) != NULL) {\n+    igvn->replace_node(proj_out(TypeFunc::Control), in(TypeFunc::Control));\n+  }\n","filename":"src\/hotspot\/share\/opto\/memnode.cpp","additions":8,"deletions":3,"binary":false,"changes":11,"status":"modified"}]}