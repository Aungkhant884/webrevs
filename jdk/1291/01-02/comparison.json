{"files":[{"patch":"@@ -378,3 +378,19 @@\n-  \/\/ Starting address shall be aligned to chunk size.\n-  const size_t required_alignment = word_size() * sizeof(MetaWord);\n-  assert_is_aligned(base(), required_alignment);\n+  \/\/ Size shall be pow2 aligned, and starting address shall be aligned to chunk size.\n+  assert(is_power_of_2(word_size()), \"sanity\");\n+  assert_is_aligned(base(), word_size() * sizeof(MetaWord));\n+\n+  \/\/ A chunk shall not straddle the border of two granules it shares with other chunks.\n+  \/\/ (Self-evident since both chunks and granules are pow2 sizes, and start at\n+  \/\/  size aligned addresses, but lets make things explicit.)\n+  assert(is_power_of_2(Settings::commit_granule_words()), \"sanity\");\n+  if (word_size() < Settings::commit_granule_words()) {\n+    \/\/ Small chunks are contained within a single granule\n+    assert(VirtualSpaceNode::get_commit_granule_start(base()) ==\n+           VirtualSpaceNode::get_commit_granule_start(end() - 1),\n+           \"small chunk straddles granule border?\");\n+  } else {\n+    \/\/ Large chunks contain full granules only\n+    assert_is_aligned(word_size(), Settings::commit_granule_words());\n+    assert(VirtualSpaceNode::get_commit_granule_start(base()) == base(),\n+           \"large chunk starts in the middle of a granule?\");\n+  }\n","filename":"src\/hotspot\/share\/memory\/metaspace\/metachunk.cpp","additions":19,"deletions":3,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -448,0 +448,5 @@\n+\/\/ Given a pointer into metaspace, return the start of the commit granule for that pointer.\n+const MetaWord* VirtualSpaceNode::get_commit_granule_start(const MetaWord* p) {\n+  return align_down(p, Settings::commit_granule_bytes());\n+}\n+\n","filename":"src\/hotspot\/share\/memory\/metaspace\/virtualSpaceNode.cpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -280,0 +280,3 @@\n+  \/\/ Given a pointer into metaspace, return the start of the commit granule for that pointer.\n+  DEBUG_ONLY(static const MetaWord* get_commit_granule_start(const MetaWord* p);)\n+\n","filename":"src\/hotspot\/share\/memory\/metaspace\/virtualSpaceNode.hpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"}]}