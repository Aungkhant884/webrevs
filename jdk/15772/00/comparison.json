{"files":[{"patch":"@@ -1227,6 +1227,7 @@\n-    \/\/ Reads len bytes of data from the specified offset into buf.\n-    \/\/ Returns the total number of bytes read.\n-    \/\/ Each\/every byte read from here (except the cen, which is mapped).\n-    final long readFullyAt(byte[] buf, int off, long len, long pos)\n-        throws IOException\n-    {\n+    \/**\n+     * Reads len bytes of data at the given file position into the given byte array\n+     * starting at the given array offset. The method blocks until len bytes have been\n+     * read, end of stream is detected, or an exception is thrown. Returns the total\n+     * number of bytes read.\n+     *\/\n+    final long readNBytesAt(byte[] buf, int off, long len, long pos) throws IOException {\n@@ -1236,1 +1237,11 @@\n-        return readFullyAt(bb, pos);\n+\n+        long totalRead = 0;\n+        while (totalRead < len) {\n+            int n = readAt(bb, pos);\n+            if (n < 0) {\n+                break;\n+            }\n+            pos += n;\n+            totalRead +=n;\n+        }\n+        return totalRead;\n@@ -1239,3 +1250,3 @@\n-    private long readFullyAt(ByteBuffer bb, long pos) throws IOException {\n-        if (ch instanceof FileChannel fch) {\n-            return fch.read(bb, pos);\n+    private int readAt(ByteBuffer bb, long pos) throws IOException {\n+        if (ch instanceof FileChannel fc) {\n+            return fc.read(bb, pos);\n@@ -1243,1 +1254,1 @@\n-            synchronized(ch) {\n+            synchronized (ch) {\n@@ -1267,1 +1278,1 @@\n-            if (readFullyAt(buf, off, len, pos + off) != len)\n+            if (readNBytesAt(buf, off, len, pos + off) != len)\n@@ -1289,1 +1300,1 @@\n-                        readFullyAt(loc64, 0, loc64.length, end.endpos - ZIP64_LOCHDR)\n+                        readNBytesAt(loc64, 0, loc64.length, end.endpos - ZIP64_LOCHDR)\n@@ -1296,1 +1307,1 @@\n-                    if (readFullyAt(end64buf, 0, end64buf.length, end64pos)\n+                    if (readNBytesAt(end64buf, 0, end64buf.length, end64pos)\n@@ -1560,1 +1571,1 @@\n-        if (readFullyAt(cen, 0, cen.length, cenpos) != end.cenlen + ENDHDR) {\n+        if (readNBytesAt(cen, 0, cen.length, cenpos) != end.cenlen + ENDHDR) {\n@@ -1709,1 +1720,1 @@\n-        if (readFullyAt(buf, 0, LOCHDR + 1 , locoff) != LOCHDR + 1)\n+        if (readNBytesAt(buf, 0, LOCHDR + 1 , locoff) != LOCHDR + 1)\n@@ -1726,1 +1737,1 @@\n-            (n = (int)readFullyAt(buf, 0, buf.length, locoff)) != -1)\n+            (n = (int)readNBytesAt(buf, 0, buf.length, locoff)) != -1)\n@@ -2341,1 +2352,1 @@\n-            long n = readFullyAt(bb, pos);\n+            long n = readAt(bb, pos);\n@@ -2386,1 +2397,1 @@\n-                if (readFullyAt(buf, 0, buf.length, pos) != LOCHDR) {\n+                if (readNBytesAt(buf, 0, buf.length, pos) != LOCHDR) {\n@@ -3227,1 +3238,1 @@\n-            if (zipfs.readFullyAt(buf, 0, buf.length , locoff)\n+            if (zipfs.readNBytesAt(buf, 0, buf.length , locoff)\n@@ -3238,1 +3249,1 @@\n-            if (zipfs.readFullyAt(buf, 0, buf.length , locoff + LOCHDR + locNlen)\n+            if (zipfs.readNBytesAt(buf, 0, buf.length , locoff + LOCHDR + locNlen)\n","filename":"src\/jdk.zipfs\/share\/classes\/jdk\/nio\/zipfs\/ZipFileSystem.java","additions":32,"deletions":21,"binary":false,"changes":53,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2009, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2009, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -68,1 +68,1 @@\n-                if (zfs.readFullyAt(buf, 0, len, locoff(cen, pos)) != len)\n+                if (zfs.readNBytesAt(buf, 0, len, locoff(cen, pos)) != len)\n@@ -73,1 +73,1 @@\n-                    if (zfs.readFullyAt(buf, 0, len, locoff(cen, pos)) != len)\n+                    if (zfs.readNBytesAt(buf, 0, len, locoff(cen, pos)) != len)\n","filename":"src\/jdk.zipfs\/share\/classes\/jdk\/nio\/zipfs\/ZipInfo.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -95,10 +95,12 @@\n-\n-        printTime(\"before writing\");\n-        System.out.printf(\"Writing %d bytes of data...%n\", totalLength);\n-        try (FileChannel fcw = FileChannel.open(tempFile, CREATE, WRITE);) {\n-            \/\/ Print size of individual writes and total number written\n-            long bytesWritten = 0;\n-            long n;\n-            while ((n = fcw.write(bigBuffers)) > 0) {\n-                System.out.printf(\"Wrote %d bytes\\n\", n);\n-                bytesWritten += n;\n+        try {\n+            printTime(\"before writing\");\n+            System.out.printf(\"Writing %d bytes of data...%n\", totalLength);\n+            try (FileChannel fcw = FileChannel.open(tempFile, CREATE, WRITE);) {\n+                \/\/ Print size of individual writes and total number written\n+                long bytesWritten = 0;\n+                long n;\n+                while ((n = fcw.write(bigBuffers)) > 0) {\n+                    System.out.printf(\"Wrote %d bytes\\n\", n);\n+                    bytesWritten += n;\n+                }\n+                System.out.printf(\"Total of %d bytes written\\n\", bytesWritten);\n@@ -106,1 +108,0 @@\n-            System.out.printf(\"Total of %d bytes written\\n\", bytesWritten);\n@@ -124,2 +125,7 @@\n-                    if (fcr.read(dst) != length)\n-                        throw new RuntimeException(\"length\");\n+                    long totalRead = 0;\n+                    while (totalRead < length) {\n+                        int bytesRead = fcr.read(dst);\n+                        if (bytesRead < 0)\n+                            throw new RuntimeException(\"premature EOF\");\n+                        totalRead += bytesRead;\n+                    }\n","filename":"test\/jdk\/java\/nio\/channels\/FileChannel\/LargeGatheringWrite.java","additions":20,"deletions":14,"binary":false,"changes":34,"status":"modified"}]}