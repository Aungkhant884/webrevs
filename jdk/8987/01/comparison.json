{"files":[{"patch":"@@ -34,1 +34,1 @@\n-import static jdk.jpackage.internal.MacAppImageBuilder.APP_STORE;\n+import static jdk.jpackage.internal.StandardBundlerParam.APP_STORE;\n@@ -108,10 +108,15 @@\n-            return;\n-        }\n-\n-        \/\/ validate short version\n-        try {\n-            String version = VERSION.fetchFrom(params);\n-            CFBundleVersion.of(version);\n-        } catch (IllegalArgumentException ex) {\n-            throw new ConfigException(ex.getMessage(), I18N.getString(\n-                    \"error.invalid-cfbundle-version.advice\"), ex);\n+            if (!Optional.ofNullable(\n+                    SIGN_BUNDLE.fetchFrom(params)).orElse(Boolean.FALSE)) {\n+                throw new ConfigException(\n+                        I18N.getString(\"error.app-image.mac-sign.required\"),\n+                        null);\n+            }\n+        } else {\n+            \/\/ validate short version\n+            try {\n+                String version = VERSION.fetchFrom(params);\n+                CFBundleVersion.of(version);\n+            } catch (IllegalArgumentException ex) {\n+                throw new ConfigException(ex.getMessage(), I18N.getString(\n+                        \"error.invalid-cfbundle-version.advice\"), ex);\n+            }\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/MacAppBundler.java","additions":16,"deletions":11,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -70,0 +70,3 @@\n+import static jdk.jpackage.internal.StandardBundlerParam.APP_STORE;\n+import static jdk.jpackage.internal.StandardBundlerParam.getPredefinedAppImage;\n+import static jdk.jpackage.internal.StandardBundlerParam.hasPredefinedAppImage;\n@@ -147,10 +150,0 @@\n-    public static final StandardBundlerParam<Boolean> APP_STORE =\n-            new StandardBundlerParam<>(\n-            Arguments.CLIOptions.MAC_APP_STORE.getId(),\n-            Boolean.class,\n-            params -> false,\n-            \/\/ valueOf(null) is false, we actually do want null in some cases\n-            (s, p) -> (s == null || \"null\".equalsIgnoreCase(s)) ?\n-                    null : Boolean.valueOf(s)\n-        );\n-\n@@ -272,0 +265,6 @@\n+        \/\/ If predefine app image is provided, then just sign it and return.\n+        if (PREDEFINED_APP_IMAGE.fetchFrom(params) != null) {\n+            doSigning(params);\n+            return;\n+        }\n+\n@@ -818,3 +817,2 @@\n-                            identifierPrefix, entitlements, keyChain);\n-        ProcessBuilder pb\n-                = new ProcessBuilder(args.toArray(new String[args.size()]));\n+                identifierPrefix, entitlements, keyChain);\n+        ProcessBuilder pb = new ProcessBuilder(args);\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/MacAppImageBuilder.java","additions":11,"deletions":13,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -54,1 +54,1 @@\n-import static jdk.jpackage.internal.MacAppImageBuilder.APP_STORE;\n+import static jdk.jpackage.internal.StandardBundlerParam.APP_STORE;\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/MacPkgBundler.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -46,0 +46,1 @@\n+error.app-image.mac-sign.required=Error: --mac-sign option is required with predefined application image and with type [app-image]\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/resources\/MacResources.properties","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -46,0 +46,1 @@\n+error.app-image.mac-sign.required=Error: --mac-sign option is required with predefined application image and with type [app-image]\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/resources\/MacResources_de.properties","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -46,0 +46,1 @@\n+error.app-image.mac-sign.required=Error: --mac-sign option is required with predefined application image and with type [app-image]\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/resources\/MacResources_ja.properties","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -46,0 +46,1 @@\n+error.app-image.mac-sign.required=Error: --mac-sign option is required with predefined application image and with type [app-image]\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/resources\/MacResources_zh_CN.properties","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -163,1 +163,9 @@\n-        Path rootDirectory = createRoot(params, outputDirectory);\n+        boolean hasAppImage =\n+                PREDEFINED_APP_IMAGE.fetchFrom(params) != null;\n+        boolean hasRuntimeImage =\n+                PREDEFINED_RUNTIME_IMAGE.fetchFrom(params) != null;\n+\n+        Path rootDirectory = hasAppImage ?\n+                PREDEFINED_APP_IMAGE.fetchFrom(params) :\n+                createRoot(params, outputDirectory);\n+\n@@ -165,6 +173,8 @@\n-        if (PREDEFINED_RUNTIME_IMAGE.fetchFrom(params) == null ) {\n-            JLinkBundlerHelper.execute(params,\n-                    appBuilder.getAppLayout().runtimeHomeDirectory());\n-        } else {\n-            StandardBundlerParam.copyPredefinedRuntimeImage(\n-                    params, appBuilder.getAppLayout());\n+        if (!hasAppImage) {\n+            if (!hasRuntimeImage) {\n+                JLinkBundlerHelper.execute(params,\n+                        appBuilder.getAppLayout().runtimeHomeDirectory());\n+            } else {\n+                StandardBundlerParam.copyPredefinedRuntimeImage(\n+                        params, appBuilder.getAppLayout());\n+            }\n@@ -172,0 +182,1 @@\n+\n@@ -173,0 +184,1 @@\n+\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/AppImageBundler.java","additions":19,"deletions":7,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -52,0 +52,1 @@\n+import static jdk.jpackage.internal.StandardBundlerParam.MAIN_CLASS;\n@@ -56,0 +57,1 @@\n+import static jdk.jpackage.internal.StandardBundlerParam.APP_STORE;\n@@ -63,0 +65,1 @@\n+    private final String mainClass;\n@@ -65,0 +68,1 @@\n+    private final boolean appStore;\n@@ -74,1 +78,1 @@\n-        this(null, null, null, null, null);\n+        this(null, null, null, null, null, null, null);\n@@ -77,2 +81,3 @@\n-    private AppImageFile(String launcherName, List<LauncherInfo> launcherInfos,\n-            String creatorVersion, String creatorPlatform, String signedStr) {\n+    private AppImageFile(String launcherName, String mainClass,\n+            List<LauncherInfo> launcherInfos, String creatorVersion,\n+            String creatorPlatform, String signedStr, String appStoreStr) {\n@@ -80,0 +85,1 @@\n+        this.mainClass = mainClass;\n@@ -84,0 +90,1 @@\n+        this.appStore = \"true\".equals(appStoreStr);\n@@ -102,0 +109,7 @@\n+    \/**\n+     * Returns main class name. Never returns null or empty value.\n+     *\/\n+    String getMainClass() {\n+        return mainClass;\n+    }\n+\n@@ -106,0 +120,4 @@\n+    boolean isAppStore() {\n+        return appStore;\n+    }\n+\n@@ -141,0 +159,4 @@\n+            xml.writeStartElement(\"main-class\");\n+            xml.writeCharacters(MAIN_CLASS.fetchFrom(params));\n+            xml.writeEndElement();\n+\n@@ -145,0 +167,4 @@\n+            xml.writeStartElement(\"app-store\");\n+            xml.writeCharacters(APP_STORE.fetchFrom(params).toString());\n+            xml.writeEndElement();\n+\n@@ -179,0 +205,7 @@\n+            String mainClass = xpathQueryNullable(xPath,\n+                    \"\/jpackage-state\/main-class\/text()\", doc);\n+            if (mainClass == null) {\n+                \/\/ No main class, this is fatal.\n+                return new AppImageFile();\n+            }\n+\n@@ -188,1 +221,4 @@\n-                    \"\/jpackage-state\/@signed\", doc);\n+                    \"\/jpackage-state\/signed\/text()\", doc);\n+\n+            String appStoreStr = xpathQueryNullable(xPath,\n+                    \"\/jpackage-state\/app-store\/text()\", doc);\n@@ -198,2 +234,2 @@\n-            AppImageFile file = new AppImageFile(\n-                    mainLauncher, launcherInfos, version, platform, signedStr);\n+            AppImageFile file = new AppImageFile(mainLauncher, mainClass,\n+                    launcherInfos, version, platform, signedStr, appStoreStr);\n@@ -278,0 +314,10 @@\n+    public static String extractMainClass(Path appImageDir) {\n+        try {\n+            return AppImageFile.load(appImageDir).getMainClass();\n+        } catch (IOException ioe) {\n+            Log.verbose(MessageFormat.format(I18N.getString(\n+                    \"warning.foreign-app-image\"), appImageDir));\n+            return null;\n+        }\n+    }\n+\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/AppImageFile.java","additions":53,"deletions":7,"binary":false,"changes":60,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -593,0 +593,1 @@\n+        boolean isMac = Platform.isMac();\n@@ -602,1 +603,1 @@\n-            if (imageOnly) {\n+            if ((imageOnly && !isMac) || (imageOnly && !hasAppImage && isMac)) {\n@@ -607,0 +608,6 @@\n+            } else if (imageOnly && hasAppImage && isMac) { \/\/ Signing app image\n+                if (!ValidOptions.checkIfSigningSupported(option)) {\n+                    throw new PackagerException(\n+                            \"ERR_InvalidOptionWithAppImageSigning\",\n+                            option.getIdWithPrefix());\n+                }\n@@ -645,2 +652,2 @@\n-        if (imageOnly && !hasMainJar && !hasMainModule) {\n-            throw new PackagerException(\"ERR_NoEntryPoint\");\n+        if (imageOnly && !hasAppImage && !hasMainJar && !hasMainModule) {\n+                throw new PackagerException(\"ERR_NoEntryPoint\");\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/Arguments.java","additions":11,"deletions":4,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -55,0 +55,2 @@\n+            String pAppImageDescription;\n+            String pSignSampleUsage;\n@@ -62,0 +64,4 @@\n+                    pAppImageDescription\n+                            = I18N.getString(\"MSG_Help_mac_app_image\");\n+                    pSignSampleUsage\n+                            = I18N.getString(\"MSG_Help_mac_sign_sample_usage\");\n@@ -69,0 +75,3 @@\n+                    pAppImageDescription\n+                            = I18N.getString(\"MSG_Help_default_app_image\");\n+                    pSignSampleUsage = \"\";\n@@ -76,0 +85,3 @@\n+                    pAppImageDescription\n+                            = I18N.getString(\"MSG_Help_default_app_image\");\n+                    pSignSampleUsage = \"\";\n@@ -86,0 +98,3 @@\n+                    pAppImageDescription\n+                            = I18N.getString(\"MSG_Help_default_app_image\");\n+                    pSignSampleUsage = \"\";\n@@ -90,1 +105,2 @@\n-                    pInstallOptions, pInstallDir));\n+                    pInstallOptions, pInstallDir, pAppImageDescription,\n+                    pSignSampleUsage));\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/CLIHelp.java","additions":18,"deletions":2,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -39,1 +39,0 @@\n-import java.util.TreeMap;\n@@ -154,2 +153,0 @@\n-        boolean hasClass = (bundlerArguments.get(\n-                Arguments.CLIOptions.APPCLASS.getId()) != null);\n@@ -172,1 +169,1 @@\n-                if (!hasModulePath && !hasRuntimeImage) {\n+                if (!hasModulePath && !hasRuntimeImage && !hasAppImage) {\n@@ -177,1 +174,1 @@\n-                if (!hasInput) {\n+                if (!hasInput && !hasAppImage) {\n@@ -376,3 +373,0 @@\n-        Map<String, String> unescapedHtmlParams = new TreeMap<>();\n-        Map<String, String> escapedHtmlParams = new TreeMap<>();\n-\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/DeployParams.java","additions":2,"deletions":8,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -117,0 +117,3 @@\n+                        } else if (hasPredefinedAppImage(params)) {\n+                            return AppImageFile.extractMainClass(\n+                                    getPredefinedAppImage(params));\n@@ -525,0 +528,19 @@\n+    static final StandardBundlerParam<Boolean> APP_STORE =\n+            new StandardBundlerParam<>(\n+            Arguments.CLIOptions.MAC_APP_STORE.getId(),\n+            Boolean.class,\n+            params -> {\n+                if (hasPredefinedAppImage(params)) {\n+                    try {\n+                        return AppImageFile.load(getPredefinedAppImage(params))\n+                                .isAppStore();\n+                    } catch (IOException ex) {\n+                        return false;\n+                    }\n+                }\n+                return false;\n+            },\n+            \/\/ valueOf(null) is false, we actually do want null in some cases\n+            (s, p) -> (s == null || \"null\".equalsIgnoreCase(s)) ?\n+                    null : Boolean.valueOf(s)\n+        );\n@@ -537,0 +559,4 @@\n+    static boolean hasPredefinedAppImage(Map<String, ? super Object> params) {\n+        return params.containsKey(PREDEFINED_APP_IMAGE.getID());\n+    }\n+\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/StandardBundlerParam.java","additions":27,"deletions":1,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+import java.util.EnumSet;\n@@ -48,0 +49,3 @@\n+ * checkIfSigningSupported(CLIOptions arg)\n+ *      Determine if the given arg is valid for signing app image.\n+ *\n@@ -54,1 +58,2 @@\n-        INSTALL     \/\/ valid when creating an installer\n+        INSTALL,    \/\/ valid when creating an installer\n+        SIGN,       \/\/ valid when signing is requested\n@@ -57,1 +62,1 @@\n-    private static final HashMap<String, USE> options = new HashMap<>();\n+    private static final HashMap<String, EnumSet<USE>> options = new HashMap<>();\n@@ -62,33 +67,38 @@\n-        options.put(CLIOptions.NAME.getId(), USE.ALL);\n-        options.put(CLIOptions.VERSION.getId(), USE.ALL);\n-        options.put(CLIOptions.OUTPUT.getId(), USE.ALL);\n-        options.put(CLIOptions.TEMP_ROOT.getId(), USE.ALL);\n-        options.put(CLIOptions.VERBOSE.getId(), USE.ALL);\n-        options.put(CLIOptions.PREDEFINED_RUNTIME_IMAGE.getId(), USE.ALL);\n-        options.put(CLIOptions.RESOURCE_DIR.getId(), USE.ALL);\n-        options.put(CLIOptions.DESCRIPTION.getId(), USE.ALL);\n-        options.put(CLIOptions.VENDOR.getId(), USE.ALL);\n-        options.put(CLIOptions.COPYRIGHT.getId(), USE.ALL);\n-        options.put(CLIOptions.PACKAGE_TYPE.getId(), USE.ALL);\n-        options.put(CLIOptions.ICON.getId(), USE.ALL);\n-\n-        options.put(CLIOptions.INPUT.getId(), USE.LAUNCHER);\n-        options.put(CLIOptions.MODULE.getId(), USE.LAUNCHER);\n-        options.put(CLIOptions.MODULE_PATH.getId(), USE.LAUNCHER);\n-        options.put(CLIOptions.ADD_MODULES.getId(), USE.LAUNCHER);\n-        options.put(CLIOptions.MAIN_JAR.getId(), USE.LAUNCHER);\n-        options.put(CLIOptions.APPCLASS.getId(), USE.LAUNCHER);\n-        options.put(CLIOptions.ARGUMENTS.getId(), USE.LAUNCHER);\n-        options.put(CLIOptions.JAVA_OPTIONS.getId(), USE.LAUNCHER);\n-        options.put(CLIOptions.ADD_LAUNCHER.getId(), USE.LAUNCHER);\n-        options.put(CLIOptions.JLINK_OPTIONS.getId(), USE.LAUNCHER);\n-        options.put(CLIOptions.APP_CONTENT.getId(), USE.LAUNCHER);\n-\n-        options.put(CLIOptions.LICENSE_FILE.getId(), USE.INSTALL);\n-        options.put(CLIOptions.INSTALL_DIR.getId(), USE.INSTALL);\n-        options.put(CLIOptions.PREDEFINED_APP_IMAGE.getId(), USE.INSTALL);\n-        options.put(CLIOptions.LAUNCHER_AS_SERVICE.getId(), USE.INSTALL);\n-\n-        options.put(CLIOptions.ABOUT_URL.getId(), USE.INSTALL);\n-\n-        options.put(CLIOptions.FILE_ASSOCIATIONS.getId(),\n+        put(CLIOptions.NAME.getId(), USE.ALL);\n+        put(CLIOptions.VERSION.getId(), USE.ALL);\n+        put(CLIOptions.OUTPUT.getId(), USE.ALL);\n+        put(CLIOptions.TEMP_ROOT.getId(), USE.ALL);\n+        put(CLIOptions.VERBOSE.getId(),\n+                EnumSet.of(USE.ALL, USE.SIGN));\n+        put(CLIOptions.PREDEFINED_RUNTIME_IMAGE.getId(), USE.ALL);\n+        put(CLIOptions.RESOURCE_DIR.getId(), USE.ALL);\n+        put(CLIOptions.DESCRIPTION.getId(), USE.ALL);\n+        put(CLIOptions.VENDOR.getId(), USE.ALL);\n+        put(CLIOptions.COPYRIGHT.getId(), USE.ALL);\n+        put(CLIOptions.PACKAGE_TYPE.getId(),\n+                EnumSet.of(USE.ALL, USE.SIGN));\n+        put(CLIOptions.ICON.getId(), USE.ALL);\n+\n+        put(CLIOptions.INPUT.getId(), USE.LAUNCHER);\n+        put(CLIOptions.MODULE.getId(), USE.LAUNCHER);\n+        put(CLIOptions.MODULE_PATH.getId(), USE.LAUNCHER);\n+        put(CLIOptions.ADD_MODULES.getId(), USE.LAUNCHER);\n+        put(CLIOptions.MAIN_JAR.getId(), USE.LAUNCHER);\n+        put(CLIOptions.APPCLASS.getId(), USE.LAUNCHER);\n+        put(CLIOptions.ARGUMENTS.getId(), USE.LAUNCHER);\n+        put(CLIOptions.JAVA_OPTIONS.getId(), USE.LAUNCHER);\n+        put(CLIOptions.ADD_LAUNCHER.getId(), USE.LAUNCHER);\n+        put(CLIOptions.JLINK_OPTIONS.getId(), USE.LAUNCHER);\n+        put(CLIOptions.APP_CONTENT.getId(), USE.LAUNCHER);\n+\n+        put(CLIOptions.LICENSE_FILE.getId(), USE.INSTALL);\n+        put(CLIOptions.INSTALL_DIR.getId(), USE.INSTALL);\n+        put(CLIOptions.PREDEFINED_APP_IMAGE.getId(),\n+                (Platform.getPlatform() == Platform.MAC) ?\n+                        EnumSet.of(USE.INSTALL, USE.SIGN) :\n+                        EnumSet.of(USE.INSTALL));\n+        put(CLIOptions.LAUNCHER_AS_SERVICE.getId(), USE.INSTALL);\n+\n+        put(CLIOptions.ABOUT_URL.getId(), USE.INSTALL);\n+\n+        put(CLIOptions.FILE_ASSOCIATIONS.getId(),\n@@ -98,12 +108,12 @@\n-            options.put(CLIOptions.WIN_CONSOLE_HINT.getId(), USE.LAUNCHER);\n-\n-            options.put(CLIOptions.WIN_HELP_URL.getId(), USE.INSTALL);\n-            options.put(CLIOptions.WIN_UPDATE_URL.getId(), USE.INSTALL);\n-\n-            options.put(CLIOptions.WIN_MENU_HINT.getId(), USE.INSTALL);\n-            options.put(CLIOptions.WIN_MENU_GROUP.getId(), USE.INSTALL);\n-            options.put(CLIOptions.WIN_SHORTCUT_HINT.getId(), USE.INSTALL);\n-            options.put(CLIOptions.WIN_SHORTCUT_PROMPT.getId(), USE.INSTALL);\n-            options.put(CLIOptions.WIN_DIR_CHOOSER.getId(), USE.INSTALL);\n-            options.put(CLIOptions.WIN_UPGRADE_UUID.getId(), USE.INSTALL);\n-            options.put(CLIOptions.WIN_PER_USER_INSTALLATION.getId(),\n+            put(CLIOptions.WIN_CONSOLE_HINT.getId(), USE.LAUNCHER);\n+\n+            put(CLIOptions.WIN_HELP_URL.getId(), USE.INSTALL);\n+            put(CLIOptions.WIN_UPDATE_URL.getId(), USE.INSTALL);\n+\n+            put(CLIOptions.WIN_MENU_HINT.getId(), USE.INSTALL);\n+            put(CLIOptions.WIN_MENU_GROUP.getId(), USE.INSTALL);\n+            put(CLIOptions.WIN_SHORTCUT_HINT.getId(), USE.INSTALL);\n+            put(CLIOptions.WIN_SHORTCUT_PROMPT.getId(), USE.INSTALL);\n+            put(CLIOptions.WIN_DIR_CHOOSER.getId(), USE.INSTALL);\n+            put(CLIOptions.WIN_UPGRADE_UUID.getId(), USE.INSTALL);\n+            put(CLIOptions.WIN_PER_USER_INSTALLATION.getId(),\n@@ -114,10 +124,15 @@\n-            options.put(CLIOptions.MAC_SIGN.getId(), USE.ALL);\n-            options.put(CLIOptions.MAC_BUNDLE_NAME.getId(), USE.ALL);\n-            options.put(CLIOptions.MAC_BUNDLE_IDENTIFIER.getId(), USE.ALL);\n-            options.put(CLIOptions.MAC_BUNDLE_SIGNING_PREFIX.getId(), USE.ALL);\n-            options.put(CLIOptions.MAC_SIGNING_KEY_NAME.getId(), USE.ALL);\n-            options.put(CLIOptions.MAC_SIGNING_KEYCHAIN.getId(), USE.ALL);\n-            options.put(CLIOptions.MAC_APP_STORE.getId(), USE.ALL);\n-            options.put(CLIOptions.MAC_CATEGORY.getId(), USE.ALL);\n-            options.put(CLIOptions.MAC_ENTITLEMENTS.getId(), USE.ALL);\n-            options.put(CLIOptions.DMG_CONTENT.getId(), USE.INSTALL);\n+            put(CLIOptions.MAC_SIGN.getId(),\n+                    EnumSet.of(USE.ALL, USE.SIGN));\n+            put(CLIOptions.MAC_BUNDLE_NAME.getId(), USE.ALL);\n+            put(CLIOptions.MAC_BUNDLE_IDENTIFIER.getId(), USE.ALL);\n+            put(CLIOptions.MAC_BUNDLE_SIGNING_PREFIX.getId(),\n+                    EnumSet.of(USE.ALL, USE.SIGN));\n+            put(CLIOptions.MAC_SIGNING_KEY_NAME.getId(),\n+                    EnumSet.of(USE.ALL, USE.SIGN));\n+            put(CLIOptions.MAC_SIGNING_KEYCHAIN.getId(),\n+                    EnumSet.of(USE.ALL, USE.SIGN));\n+            put(CLIOptions.MAC_APP_STORE.getId(), USE.ALL);\n+            put(CLIOptions.MAC_CATEGORY.getId(), USE.ALL);\n+            put(CLIOptions.MAC_ENTITLEMENTS.getId(),\n+                    EnumSet.of(USE.ALL, USE.SIGN));\n+            put(CLIOptions.DMG_CONTENT.getId(), USE.INSTALL);\n@@ -127,5 +142,5 @@\n-            options.put(CLIOptions.LINUX_BUNDLE_NAME.getId(), USE.INSTALL);\n-            options.put(CLIOptions.LINUX_DEB_MAINTAINER.getId(), USE.INSTALL);\n-            options.put(CLIOptions.LINUX_CATEGORY.getId(), USE.INSTALL);\n-            options.put(CLIOptions.LINUX_RPM_LICENSE_TYPE.getId(), USE.INSTALL);\n-            options.put(CLIOptions.LINUX_PACKAGE_DEPENDENCIES.getId(),\n+            put(CLIOptions.LINUX_BUNDLE_NAME.getId(), USE.INSTALL);\n+            put(CLIOptions.LINUX_DEB_MAINTAINER.getId(), USE.INSTALL);\n+            put(CLIOptions.LINUX_CATEGORY.getId(), USE.INSTALL);\n+            put(CLIOptions.LINUX_RPM_LICENSE_TYPE.getId(), USE.INSTALL);\n+            put(CLIOptions.LINUX_PACKAGE_DEPENDENCIES.getId(),\n@@ -133,3 +148,3 @@\n-            options.put(CLIOptions.LINUX_MENU_GROUP.getId(), USE.INSTALL);\n-            options.put(CLIOptions.RELEASE.getId(), USE.INSTALL);\n-            options.put(CLIOptions.LINUX_SHORTCUT_HINT.getId(), USE.INSTALL);\n+            put(CLIOptions.LINUX_MENU_GROUP.getId(), USE.INSTALL);\n+            put(CLIOptions.RELEASE.getId(), USE.INSTALL);\n+            put(CLIOptions.LINUX_SHORTCUT_HINT.getId(), USE.INSTALL);\n@@ -144,2 +159,4 @@\n-        USE use = options.get(arg.getId());\n-        return USE.ALL == use || USE.LAUNCHER == use;\n+        EnumSet<USE> value = options.get(arg.getId());\n+        return value.contains(USE.ALL) ||\n+                value.contains(USE.LAUNCHER) ||\n+                value.contains(USE.SIGN);\n@@ -149,2 +166,15 @@\n-        USE use = options.get(arg.getId());\n-        return USE.ALL == use || USE.INSTALL == use;\n+        EnumSet<USE> value = options.get(arg.getId());\n+        return value.contains(USE.ALL) || value.contains(USE.INSTALL);\n+    }\n+\n+    static boolean checkIfSigningSupported(CLIOptions arg) {\n+        EnumSet<USE> value = options.get(arg.getId());\n+        return value.contains(USE.SIGN);\n+    }\n+\n+    private static EnumSet<USE> put(String key, USE value) {\n+        return options.put(key, EnumSet.of(value));\n+    }\n+\n+    private static EnumSet<USE> put(String key, EnumSet<USE> value) {\n+        return options.put(key, value);\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/ValidOptions.java","additions":100,"deletions":70,"binary":false,"changes":170,"status":"modified"},{"patch":"@@ -54,0 +54,1 @@\n+\\{6}\\\n@@ -178,2 +179,1 @@\n-\\          Location of the predefined application image that is used\\n\\\n-\\          to build an installable package\\n\\\n+\\          {5}\\\n@@ -262,1 +262,2 @@\n-\\          Request that the package be signed\\n\\\n+\\          Request that the package or the predefined application image be\\n\\\n+\\          signed.\\n\\\n@@ -309,0 +310,15 @@\n+MSG_Help_default_app_image=\\\n+\\Location of the predefined application image that is used\\n\\\n+\\          to build an installable package\\n\\\n+\n+MSG_Help_mac_app_image=\\\n+\\Location of the predefined application image that is used\\n\\\n+\\          to build an installable package or to sign the predefined\\n\\\n+\\          application image\\n\\\n+\n+MSG_Help_mac_sign_sample_usage=\\\n+\\    Sign the predefined application image:\\n\\\n+\\        jpackage --type app-image --app-image <app-image> \\\\\\n\\\n+\\            --mac-sign [<additional signing options>...]\\n\\\n+\\        Note: the only additional options that are permitted in this mode are:\\n\\\n+\\              the set of additional mac signing options and --verbose\\n\\\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/resources\/HelpResources.properties","additions":19,"deletions":3,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -27,3 +27,180 @@\n-MSG_Help=Verwendung: jpackage <Optionen>\\n\\nBeispielverwendungen:\\n--------------\\n    Generiert ein f\\u00FCr das Hostsystem geeignetes Anwendungspackage:\\n        F\\u00FCr eine modulare Anwendung:\\n            jpackage -n name -p modulePath -m moduleName\/className\\n        F\\u00FCr eine nicht modulare Anwendung:\\n            jpackage -i inputDir -n name \\\\\\n                --main-class className --main-jar myJar.jar\\n        Aus einem vorab erstellten Anwendungsimage:\\n            jpackage -n name --app-image appImageDir\\n    Generiert ein Anwendungsimage:\\n        F\\u00FCr eine modulare Anwendung:\\n            jpackage --type app-image -n name -p modulePath \\\\\\n                -m moduleName\/className\\n        F\\u00FCr eine nicht modulare Anwendung:\\n            jpackage --type app-image -i inputDir -n name \\\\\\n                --main-class className --main-jar myJar.jar\\n        Um eigene Optionen f\\u00FCr jlink anzugeben, f\\u00FChren Sie jlink separat aus:\\n            jlink --output appRuntimeImage -p modulePath \\\\\\n                --add-modules moduleName \\\\\\n                --no-header-files [<zus\\u00E4tzliche jlink-Optionen>...]\\n            jpackage --type app-image -n name \\\\\\n                -m moduleName\/className --runtime-image appRuntimeImage\\n    Generiert ein Java-Laufzeitpackage:\\n        jpackage -n name --runtime-image <Laufzeitimage>\\n\\nAllgemeine Optionen:\\n  @<Dateiname > \\n          Liest Optionen und\/oder Modus aus einer Datei \\n          Diese Option kann mehrmals verwendet werden.\\n  --type -t <Typ> \\n          Der zu erstellende Packagetyp\\n          G\\u00FCltige Werte: {1} \\n          Bei fehlender Angabe dieser Option wird ein plattformabh\\u00E4ngiger\\n          Standardtyp erstellt.\\n  --app-version <Version>\\n          Version der Anwendung und\/oder des Packages\\n  --copyright <Copyright-Zeichenfolge>\\n          Copyright f\\u00FCr die Anwendung\\n  --description <Zeichenfolge f\\u00FCr Beschreibung>\\n          Beschreibung der Anwendung\\n  --help -h \\n          Gibt den Verwendungstext mit einer Liste und Beschreibung jeder g\\u00FCltigen\\n          Option f\\u00FCr die aktuelle Plattform an den Ausgabestream aus und beendet den Vorgang\\n  --icon <Dateipfad>\\n          Pfad des Symbols f\\u00FCr das Anwendungspackage\\n          (absoluter Pfad oder relativ zum aktuellen Verzeichnis)\\n  --name -n <Name>\\n          Name der Anwendung und\/oder des Packages\\n  --dest -d <Zielpfad>\\n          Pfad, in den die generierte Ausgabedatei abgelegt wird\\n          (absoluter Pfad oder relativ zum aktuellen Verzeichnis)\\n          Standardm\\u00E4\\u00DFig wird das aktuelle Arbeitsverzeichnis verwendet.\\n  --temp <Verzeichnispfad>\\n          Pfad eines neuen oder leeren Verzeichnisses zum Erstellen tempor\\u00E4rer Dateien\\n          (absoluter Pfad oder relativ zum aktuellen Verzeichnis)\\n          Falls angegeben, wird das tempor\\u00E4re Verzeichnis beim Abschlie\\u00DFen der Aufgabe\\n          nicht entfernt und muss manuell entfernt werden.\\n          Bei fehlender Angabe wird ein tempor\\u00E4res Verzeichnis erstellt und\\n          beim Abschlie\\u00DFen der Aufgabe entfernt.\\n  --vendor <Zeichenfolge f\\u00FCr Anbieter>\\n          Anbieter der Anwendung\\n  --verbose\\n          Aktiviert Ausgabe im Verbose-Modus\\n  --version\\n          Gibt die Produktversion an den Outputstream aus und beendet den Vorgang.\\n\\nOptionen f\\u00FCr das Erstellen des Laufzeitimages:\\n  --add-modules <Modulname>[,<Modulname>...]\\n          Eine per Komma (\",\") getrennte Liste hinzuzuf\\u00FCgender Module\\n          Diese Modulliste wird zusammen mit dem Hauptmodul (sofern angegeben)\\n          als Argument --add-module an jlink \\u00FCbergeben.\\n          Bei fehlender Angabe wird entweder nur das Hauptmodul (sofern --module\\n          angegeben ist) oder das Standardset an Modulen (sofern --main-jar \\n          angegeben ist) verwendet.\\n          Diese Option kann mehrmals verwendet werden.\\n  --module-path -p <Modulpfad>...\\n          \\\n-Eine per {0} getrennte Pfadliste\\n          Jeder Pfad ist entweder ein Verzeichnis mit Modulen oder der Pfad zu einer\\n          JAR-Datei eines Moduls.\\n          (Jeder Pfad ist absolut oder relativ zum aktuellen Verzeichnis.)\\n          Diese Option kann mehrmals verwendet werden.\\n  --jlink-options <jlink-Optionen> \\n          Eine per Leerzeichen getrennte Liste mit an jlink zu \\u00FCbergebenden Optionen \\n          Bei fehlender Angabe wird standardm\\u00E4\\u00DFig \"--strip-native-commands \\n          --strip-debug --no-man-pages --no-header-files\" verwendet. \\n          Diese Option kann mehrmals verwendet werden.\\n  --runtime-image <Verzeichnispfad>\\n          Pfad des vordefinierten Laufzeitimages, das in\\n          das Anwendungsimage kopiert wird\\n          (absoluter Pfad oder relativ zum aktuellen Verzeichnis)\\n          Wenn --runtime-image nicht angegeben wird, f\\u00FChrt jpackage jlink aus, um\\n          das Laufzeitimage mit folgenden Optionen zu erstellen:\\n          --strip-debug, --no-header-files, --no-man-pages und\\n          --strip-native-commands.\\n\\nOptionen f\\u00FCr das Erstellen des Anwendungsimages:\\n  --input -i <Verzeichnispfad>\\n          Pfad des Eingabeverzeichnisses mit den in das Package zu integrierenden Dateien\\n          (absoluter Pfad oder relativ zum aktuellen Verzeichnis)\\n          Alle Dateien im Eingabeverzeichnis werden in das Package f\\u00FCr das\\n          Anwendungsimage integriert.\\n  --app-content <zus\\u00E4tzlicher Inhalt>[,<zus\\u00E4tzlicher Inhalt>...]\\n          Eine per Komma getrennte Liste mit Pfaden zu Dateien und\/oder Verzeichnissen,\\n          die zur Anwendungs-Payload hinzugef\\u00FCgt werden sollen.\\n          Diese Option kann mehrmals verwendet werden.\\n\\nOptionen f\\u00FCr das Erstellen des Anwendungs-Launchers:\\n  --add-launcher <Launcher-Name>=<Dateipfad>\\n          Name des Launchers sowie ein Pfad zu einer Eigenschaftendatei mit\\n          einer Liste von Schl\\u00FCssel\/Wert-Paaren\\n          (absoluter Pfad oder relativ zum aktuellen Verzeichnis)\\n          Die Schl\\u00FCssel \"module\", \"main-jar\", \"main-class\",\\n          \"arguments\", \"java-options\", \"app-version\", \"icon\",\\n          \"win-console\", \"win-shortcut\", \"win-menu\",\\n          \"linux-app-category\" und \"linux-shortcut\" k\\u00F6nnen verwendet werden.\\n          Diese Optionen werden den urspr\\u00FCnglichen Befehlszeilenoptionen hinzugef\\u00FCgt\\n          (oder \\u00FCberschreiben diese), um einen zus\\u00E4tzlichen, alternativen Launcher zu erstellen.\\n          Der Hauptanwendungs-Launcher wird aus den Befehlszeilenoptionen\\n          erstellt. Mit dieser Option k\\u00F6nnen zus\\u00E4tzliche alternative Launcher\\n          erstellt werden. Au\\u00DFerdem kann diese Option mehrmals verwendet werden,\\n          um mehrere zus\\u00E4tzliche Launcher zu erstellen. \\n  --arguments <Hauptklassenargumente>\\n          Befehlszeilenargumente, die an die Hauptklasse \\u00FCbergeben werden, falls\\n          keine Befehlszeilenargumente an den Launcher \\u00FCbergeben werden\\n          Diese Option kann mehrmals verwendet werden.\\n  --java-options <Java-Optionen>\\n          Optionen, die an die Java-Laufzeit \\u00FCbergeben werden\\n          Diese Option kann mehrmals verwendet werden.\\n  --main-class <Klassenname>\\n          Qualifizierter Name der auszuf\\u00FChrenden Anwendungshauptklasse\\n          Diese Option kann nur bei Angabe von --main-jar verwendet werden.\\n  --main-jar <Haupt-JAR-Datei>\\n          Die Haupt-JAR-Datei der Anwendung, die die Hauptklasse enth\\u00E4lt\\n          (angegeben als Pfad relativ zum Eingabepfad)\\n          Es kann entweder die Option --module oder die Option --main-jar angegeben werden, nicht jedoch\\n          beides.\\n  --module -m <Modulname>[\/<Hauptklasse>]\\n          Das Hauptmodul (und optional die Hauptklasse) der Anwendung\\n          Dieses Modul muss unter dem Modulpfad gespeichert sein.\\n          Bei Angabe dieser Option wird das Hauptmodul\\n          im \\\n-Java-Laufzeitimage verkn\\u00FCpft. Es kann entweder die Option --module oder die Option --main-jar\\n          angegeben werden, nicht jedoch beides.\\n{2}\\nOptionen f\\u00FCr das Erstellen des Anwendungspackages:\\n  --about-url <URL>\\n          URL der Homepage der Anwendung\\n  --app-image <Verzeichnispfad>\\n          Speicherort des vordefinierten Anwendungsimages, mit dem\\n          ein installierbares Package erstellt wird\\n          (absoluter Pfad oder relativ zum aktuellen Verzeichnis)\\n  --file-associations <Dateipfad>\\n          Pfad zu einer Eigenschaftendatei mit einer Liste von Schl\\u00FCssel\/Wert-Paaren\\n          (absoluter Pfad oder relativ zum aktuellen Verzeichnis)\\n          Mit den Schl\\u00FCsseln \"extension\", \"mime-type\", \"icon\" und \"description\"\\n          kann die Verkn\\u00FCpfung beschrieben werden.\\n          Diese Option kann mehrmals verwendet werden.\\n  --install-dir <Verzeichnispfad>\\n          {4}  --license-file <Dateipfad>\\n          Pfad zur Lizenzdatei\\n          (absoluter Pfad oder relativ zum aktuellen Verzeichnis)\\n  --resource-dir <Verzeichnispfad>\\n          Pfad zum \\u00DCberschreiben von jpackage-Ressourcen\\n          Symbole, Vorlagendateien und weitere Ressourcen von jpackage k\\u00F6nnen\\n          durch Hinzuf\\u00FCgen von Ersetzungsressourcen zu diesem Verzeichnis \\u00FCberschrieben werden.\\n          (absoluter Pfad oder relativ zum aktuellen Verzeichnis)\\n  --runtime-image <Verzeichnispfad>\\n          Pfad des zu installierenden vordefinierten Laufzeitimages\\n          (absoluter Pfad oder relativ zum aktuellen Verzeichnis)\\n          Option muss beim Erstellen eines Laufzeitpackages angegeben werden.\\n\\nPlattformabh\\u00E4ngige Optionen f\\u00FCr das Erstellen des Anwendungspackages:\\n{3}\n+MSG_Help=Usage: jpackage <options>\\n\\\n+\\n\\\n+Sample usages:\\n\\\n+--------------\\n\\\n+\\    Generate an application package suitable for the host system:\\n\\\n+\\        For a modular application:\\n\\\n+\\            jpackage -n name -p modulePath -m moduleName\/className\\n\\\n+\\        For a non-modular application:\\n\\\n+\\            jpackage -i inputDir -n name \\\\\\n\\\n+\\                --main-class className --main-jar myJar.jar\\n\\\n+\\        From a pre-built application image:\\n\\\n+\\            jpackage -n name --app-image appImageDir\\n\\\n+\\    Generate an application image:\\n\\\n+\\        For a modular application:\\n\\\n+\\            jpackage --type app-image -n name -p modulePath \\\\\\n\\\n+\\                -m moduleName\/className\\n\\\n+\\        For a non-modular application:\\n\\\n+\\            jpackage --type app-image -i inputDir -n name \\\\\\n\\\n+\\                --main-class className --main-jar myJar.jar\\n\\\n+\\        To provide your own options to jlink, run jlink separately:\\n\\\n+\\            jlink --output appRuntimeImage -p modulePath \\\\\\n\\\n+\\                --add-modules moduleName \\\\\\n\\\n+\\                --no-header-files [<additional jlink options>...]\\n\\\n+\\            jpackage --type app-image -n name \\\\\\n\\\n+\\                -m moduleName\/className --runtime-image appRuntimeImage\\n\\\n+\\    Generate a Java runtime package:\\n\\\n+\\        jpackage -n name --runtime-image <runtime-image>\\n\\\n+\\{6}\\\n+\\n\\\n+Generic Options:\\n\\\n+\\  @<filename> \\n\\\n+\\          Read options and\/or mode from a file \\n\\\n+\\          This option can be used multiple times.\\n\\\n+\\  --type -t <type> \\n\\\n+\\          The type of package to create\\n\\\n+\\          Valid values are: {1} \\n\\\n+\\          If this option is not specified a platform dependent\\n\\\n+\\          default type will be created.\\n\\\n+\\  --app-version <version>\\n\\\n+\\          Version of the application and\/or package\\n\\\n+\\  --copyright <copyright string>\\n\\\n+\\          Copyright for the application\\n\\\n+\\  --description <description string>\\n\\\n+\\          Description of the application\\n\\\n+\\  --help -h \\n\\\n+\\          Print the usage text with a list and description of each valid\\n\\\n+\\          option for the current platform to the output stream, and exit\\n\\\n+\\  --icon <file path>\\n\\\n+\\          Path of the icon of the application package\\n\\\n+\\          (absolute path or relative to the current directory)\\n\\\n+\\  --name -n <name>\\n\\\n+\\          Name of the application and\/or package\\n\\\n+\\  --dest -d <destination path>\\n\\\n+\\          Path where generated output file is placed\\n\\\n+\\          (absolute path or relative to the current directory)\\n\\\n+\\          Defaults to the current working directory.\\n\\\n+\\  --temp <directory path>\\n\\\n+\\          Path of a new or empty directory used to create temporary files\\n\\\n+\\          (absolute path or relative to the current directory)\\n\\\n+\\          If specified, the temp dir will not be removed upon the task\\n\\\n+\\          completion and must be removed manually.\\n\\\n+\\          If not specified, a temporary directory will be created and\\n\\\n+\\          removed upon the task completion.\\n\\\n+\\  --vendor <vendor string>\\n\\\n+\\          Vendor of the application\\n\\\n+\\  --verbose\\n\\\n+\\          Enables verbose output\\n\\\n+\\  --version\\n\\\n+\\          Print the product version to the output stream and exit.\\n\\\n+\\n\\\n+\\Options for creating the runtime image:\\n\\\n+\\  --add-modules <module name>[,<module name>...]\\n\\\n+\\          A comma (\",\") separated list of modules to add\\n\\\n+\\          This module list, along with the main module (if specified)\\n\\\n+\\          will be passed to jlink as the --add-module argument.\\n\\\n+\\          If not specified, either just the main module (if --module is\\n\\\n+\\          specified), or the default set of modules (if --main-jar is \\n\\\n+\\          specified) are used.\\n\\\n+\\          This option can be used multiple times.\\n\\\n+\\  --module-path -p <module path>...\\n\\\n+\\          A {0} separated list of paths\\n\\\n+\\          Each path is either a directory of modules or the path to a\\n\\\n+\\          modular jar.\\n\\\n+\\          (Each path is absolute or relative to the current directory.)\\n\\\n+\\          This option can be used multiple times.\\n\\\n+\\  --jlink-options <jlink options> \\n\\\n+\\          A space separated list of options to pass to jlink \\n\\\n+\\          If not specified, defaults to \"--strip-native-commands \\n\\\n+\\          --strip-debug --no-man-pages --no-header-files\". \\n\\\n+\\          This option can be used multiple times.\\n\\\n+\\  --runtime-image <directory path>\\n\\\n+\\          Path of the predefined runtime image that will be copied into\\n\\\n+\\          the application image\\n\\\n+\\          (absolute path or relative to the current directory)\\n\\\n+\\          If --runtime-image is not specified, jpackage will run jlink to\\n\\\n+\\          create the runtime image using options:\\n\\\n+\\          --strip-debug, --no-header-files, --no-man-pages, and\\n\\\n+\\          --strip-native-commands.\\n\\\n+\\n\\\n+\\Options for creating the application image:\\n\\\n+\\  --input -i <directory path>\\n\\\n+\\          Path of the input directory that contains the files to be packaged\\n\\\n+\\          (absolute path or relative to the current directory)\\n\\\n+\\          All files in the input directory will be packaged into the\\n\\\n+\\          application image.\\n\\\n+\\  --app-content <additional content>[,<additional content>...]\\n\\\n+\\          A comma separated list of paths to files and\/or directories\\n\\\n+\\          to add to the application payload.\\n\\\n+\\          This option can be used more than once.\\n\\\n+\\n\\\n+\\Options for creating the application launcher(s):\\n\\\n+\\  --add-launcher <launcher name>=<file path>\\n\\\n+\\          Name of launcher, and a path to a Properties file that contains\\n\\\n+\\          a list of key, value pairs\\n\\\n+\\          (absolute path or relative to the current directory)\\n\\\n+\\          The keys \"module\", \"main-jar\", \"main-class\", \"description\",\\n\\\n+\\          \"arguments\", \"java-options\", \"app-version\", \"icon\",\\n\\\n+\\          \"launcher-as-service\",\\n\\\n+\\          \"win-console\", \"win-shortcut\", \"win-menu\",\\n\\\n+\\          \"linux-app-category\", and \"linux-shortcut\" can be used.\\n\\\n+\\          These options are added to, or used to overwrite, the original\\n\\\n+\\          command line options to build an additional alternative launcher.\\n\\\n+\\          The main application launcher will be built from the command line\\n\\\n+\\          options. Additional alternative launchers can be built using\\n\\\n+\\          this option, and this option can be used multiple times to\\n\\\n+\\          build multiple additional launchers. \\n\\\n+\\  --arguments <main class arguments>\\n\\\n+\\          Command line arguments to pass to the main class if no command\\n\\\n+\\          line arguments are given to the launcher\\n\\\n+\\          This option can be used multiple times.\\n\\\n+\\  --java-options <java options>\\n\\\n+\\          Options to pass to the Java runtime\\n\\\n+\\          This option can be used multiple times.\\n\\\n+\\  --main-class <class name>\\n\\\n+\\          Qualified name of the application main class to execute\\n\\\n+\\          This option can only be used if --main-jar is specified.\\n\\\n+\\  --main-jar <main jar file>\\n\\\n+\\          The main JAR of the application; containing the main class\\n\\\n+\\          (specified as a path relative to the input path)\\n\\\n+\\          Either --module or --main-jar option can be specified but not\\n\\\n+\\          both.\\n\\\n+\\  --module -m <module name>[\/<main class>]\\n\\\n+\\          The main module (and optionally main class) of the application\\n\\\n+\\          This module must be located on the module path.\\n\\\n+\\          When this option is specified, the main module will be linked\\n\\\n+\\          in the Java runtime image.  Either --module or --main-jar\\n\\\n+\\          option can be specified but not both.\\n\\\n+{2}\\n\\\n+\\Options for creating the application package:\\n\\\n+\\  --about-url <url>\\n\\\n+\\          URL of the application''s home page\\n\\\n+\\  --app-image <directory path>\\n\\\n+\\          {5}\\\n+\\          (absolute path or relative to the current directory)\\n\\\n+\\  --file-associations <file path>\\n\\\n+\\          Path to a Properties file that contains list of key, value pairs\\n\\\n+\\          (absolute path or relative to the current directory)\\n\\\n+\\          The keys \"extension\", \"mime-type\", \"icon\", and \"description\"\\n\\\n+\\          can be used to describe the association.\\n\\\n+\\          This option can be used multiple times.\\n\\\n+\\  --install-dir <directory path>\\n\\\n+\\          {4}\\\n+\\  --license-file <file path>\\n\\\n+\\          Path to the license file\\n\\\n+\\          (absolute path or relative to the current directory)\\n\\\n+\\  --resource-dir <directory path>\\n\\\n+\\          Path to override jpackage resources\\n\\\n+\\          Icons, template files, and other resources of jpackage can be\\n\\\n+\\          over-ridden by adding replacement resources to this directory.\\n\\\n+\\          (absolute path or relative to the current directory)\\n\\\n+\\  --runtime-image <directory path>\\n\\\n+\\          Path of the predefined runtime image to install\\n\\\n+\\          (absolute path or relative to the current directory)\\n\\\n+\\          Option is required when creating a runtime package.\\n\\\n+\\  --launcher-as-service\\n\\\n+\\          Request to create an installer that will register the main\\n\\\n+\\          application launcher as a background service-type application.\\n\\\n+\\n\\\n+\\Platform dependent options for creating the application package:\\n\\\n+{3}\n@@ -35,1 +212,35 @@\n-MSG_Help_mac_launcher=\\  --mac-package-identifier <ID-Zeichenfolge>\\n          Eine ID, die die Anwendung f\\u00FCr macOS eindeutig identifiziert\\n          Standardwert ist der Hauptklassenname.\\n          Es d\\u00FCrfen nur alphanumerische Zeichen (A-Z, a-z, 0-9), Bindestriche (-)\\n          und Punkte (.) verwendet werden.\\n  --mac-package-name <Namenszeichenfolge>\\n          Name der Anwendung, wie in der Men\\u00FCleiste angezeigt\\n          Dieser kann vom Anwendungsnamen abweichen.\\n          Er darf maximal 15 Zeichen enthalten und muss f\\u00FCr die Anzeige\\n          in der Men\\u00FCleiste und im Infofenster der Anwendung geeignet sein.\\n          Standardwert: Anwendungsname.\\n  --mac-package-signing-prefix <Pr\\u00E4fixzeichenfolge>\\n          Beim Signieren des Anwendungspackages wird dieser Wert\\n          allen zu signierenden Komponenten ohne vorhandene\\n          Package-ID als Pr\\u00E4fix vorangestellt.\\n  --mac-sign\\n          Anforderung zum Signieren des Packages\\n  --mac-signing-keychain <Schl\\u00FCsselbundname>\\n          Name des Schl\\u00FCsselbundes f\\u00FCr die Suche nach der Signaturidentit\\u00E4t\\n          Bei fehlender Angabe werden die Standardschl\\u00FCsselbunde verwendet.\\n  --mac-signing-key-user-name <Teamname>\\n          Team- oder Benutzernamensteil der Apple-Signaturidentit\\u00E4ten.\\n  --mac-app-store\\n          Gibt an, dass die jpackage-Ausgabe f\\u00FCr den\\n          Mac App Store bestimmt ist.\\n  --mac-entitlements <Dateipfad>\\n          Pfad zu einer Datei mit Berechtigungen, die beim Signieren\\n          von ausf\\u00FChrbaren Dateien und Librarys im Bundle verwendet werden sollen.\\n  --mac-app-category <Kategoriezeichenfolge>\\n          Zeichenfolge f\\u00FCr das Erstellen von LSApplicationCategoryType in\\n          Anwendungs-plist. Standardwert: \"utilities\".\\n\n+\n+MSG_Help_mac_launcher=\\\n+\\  --mac-package-identifier <ID string>\\n\\\n+\\          An identifier that uniquely identifies the application for macOS\\n\\\n+\\          Defaults to the main class name.\\n\\\n+\\          May only use alphanumeric (A-Z,a-z,0-9), hyphen (-),\\n\\\n+\\          and period (.) characters.\\n\\\n+\\  --mac-package-name <name string>\\n\\\n+\\          Name of the application as it appears in the Menu Bar\\n\\\n+\\          This can be different from the application name.\\n\\\n+\\          This name must be less than 16 characters long and be suitable for\\n\\\n+\\          displaying in the menu bar and the application Info window.\\n\\\n+\\          Defaults to the application name.\\n\\\n+\\  --mac-package-signing-prefix <prefix string>\\n\\\n+\\          When signing the application package, this value is prefixed\\n\\\n+\\          to all components that need to be signed that don't have\\n\\\n+\\          an existing package identifier.\\n\\\n+\\  --mac-sign\\n\\\n+\\          Request that the package or the predefined application image be\\n\\\n+\\          signed.\\n\\\n+\\  --mac-signing-keychain <keychain name>\\n\\\n+\\          Name of the keychain to search for the signing identity\\n\\\n+\\          If not specified, the standard keychains are used.\\n\\\n+\\  --mac-signing-key-user-name <team name>\\n\\\n+\\          Team or user name portion of Apple signing identities.\\n\\\n+\\  --mac-app-store\\n\\\n+\\          Indicates that the jpackage output is intended for the\\n\\\n+\\          Mac App Store.\\n\\\n+\\  --mac-entitlements <file path>\\n\\\n+\\          Path to file containing entitlements to use when signing\\n\\\n+\\          executables and libraries in the bundle.\\n\\\n+\\  --mac-app-category <category string>\\n\\\n+\\          String used to construct LSApplicationCategoryType in\\n\\\n+\\          application plist.  The default value is \"utilities\".\\n\\\n+\n@@ -40,0 +251,16 @@\n+\n+MSG_Help_default_app_image=\\\n+\\Location of the predefined application image that is used\\n\\\n+\\          to build an installable package\\n\\\n+\n+MSG_Help_mac_app_image=\\\n+\\Location of the predefined application image that is used\\n\\\n+\\          to build an installable package or to sign the predefined\\n\\\n+\\          application image\\n\\\n+\n+MSG_Help_mac_sign_sample_usage=\\\n+\\    Sign the predefined application image:\\n\\\n+\\        jpackage --type app-image --app-image <app-image> \\\\\\n\\\n+\\            --mac-sign [<additional signing options>...]\\n\\\n+\\        Note: the only additional options that are permitted in this mode are:\\n\\\n+\\              the set of additional mac signing options and --verbose\\n\\\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/resources\/HelpResources_de.properties","additions":231,"deletions":4,"binary":false,"changes":235,"status":"modified"},{"patch":"@@ -54,0 +54,1 @@\n+\\{6}\\\n@@ -141,1 +142,1 @@\n-\\          The keys \"module\", \"main-jar\", \"main-class\",\\n\\\n+\\          The keys \"module\", \"main-jar\", \"main-class\", \"description\",\\n\\\n@@ -178,2 +179,1 @@\n-\\          Location of the predefined application image that is used\\n\\\n-\\          to build an installable package\\n\\\n+\\          {5}\\\n@@ -212,1 +212,35 @@\n-MSG_Help_mac_launcher=\\  --mac-package-identifier <ID string>\\n          macOS\\u306E\\u30A2\\u30D7\\u30EA\\u30B1\\u30FC\\u30B7\\u30E7\\u30F3\\u3092\\u4E00\\u610F\\u306B\\u8B58\\u5225\\u3059\\u308BID\\n          \\u30E1\\u30A4\\u30F3\\u30FB\\u30AF\\u30E9\\u30B9\\u540D\\u306B\\u30C7\\u30D5\\u30A9\\u30EB\\u30C8\\u8A2D\\u5B9A\\u3055\\u308C\\u3066\\u3044\\u307E\\u3059\\u3002\\n          \\u82F1\\u6570\\u5B57(A-Z\\u3001a-z\\u30010-9)\\u3001\\u30CF\\u30A4\\u30D5\\u30F3(-)\\u304A\\u3088\\u3073\\u30D4\\u30EA\\u30AA\\u30C9(.)\\u6587\\u5B57\\u306E\\u307F\\n          \\u4F7F\\u7528\\u3067\\u304D\\u307E\\u3059\\u3002\\n  --mac-package-name <name string>\\n          \\u30E1\\u30CB\\u30E5\\u30FC\\u30FB\\u30D0\\u30FC\\u306B\\u8868\\u793A\\u3055\\u308C\\u308B\\u30A2\\u30D7\\u30EA\\u30B1\\u30FC\\u30B7\\u30E7\\u30F3\\u306E\\u540D\\u524D\\n          \\u30A2\\u30D7\\u30EA\\u30B1\\u30FC\\u30B7\\u30E7\\u30F3\\u540D\\u3068\\u306F\\u7570\\u306A\\u308A\\u307E\\u3059\\u3002\\n          \\u3053\\u306E\\u540D\\u524D\\u306F16\\u6587\\u5B57\\u672A\\u6E80\\u306B\\u3059\\u308B\\u5FC5\\u8981\\u304C\\u3042\\u308A\\u3001\\u30E1\\u30CB\\u30E5\\u30FC\\u30FB\\u30D0\\u30FC\\u304A\\u3088\\u3073\\u30A2\\u30D7\\u30EA\\u30B1\\u30FC\\u30B7\\u30E7\\u30F3\\u60C5\\u5831\\u30A6\\u30A3\\u30F3\\u30C9\\u30A6\\u306B\\n          \\u8868\\u793A\\u3059\\u308B\\u306E\\u306B\\u9069\\u3057\\u3066\\u3044\\u308B\\u5FC5\\u8981\\u304C\\u3042\\u308A\\u307E\\u3059\\u3002\\n          \\u30A2\\u30D7\\u30EA\\u30B1\\u30FC\\u30B7\\u30E7\\u30F3\\u540D\\u306B\\u30C7\\u30D5\\u30A9\\u30EB\\u30C8\\u8A2D\\u5B9A\\u3055\\u308C\\u3066\\u3044\\u307E\\u3059\\u3002\\n  --mac-package-signing-prefix <prefix string>\\n          \\u30A2\\u30D7\\u30EA\\u30B1\\u30FC\\u30B7\\u30E7\\u30F3\\u30FB\\u30D1\\u30C3\\u30B1\\u30FC\\u30B8\\u306B\\u7F72\\u540D\\u3059\\u308B\\u969B\\u3001\\n          \\u65E2\\u5B58\\u306E\\u30D1\\u30C3\\u30B1\\u30FC\\u30B8ID\\u306E\\u306A\\u3044\\u7F72\\u540D\\u304C\\u5FC5\\u8981\\u306A\\u3059\\u3079\\u3066\\u306E\\u30B3\\u30F3\\u30DD\\u30FC\\u30CD\\u30F3\\u30C8\\u306B\\u3001\\n          \\u3053\\u306E\\u5024\\u304C\\u63A5\\u982D\\u8F9E\\u3068\\u3057\\u3066\\u4ED8\\u3051\\u3089\\u308C\\u307E\\u3059\\u3002\\n  --mac-sign\\n          \\u30D1\\u30C3\\u30B1\\u30FC\\u30B8\\u306B\\u7F72\\u540D\\u3059\\u308B\\u3088\\u3046\\u30EA\\u30AF\\u30A8\\u30B9\\u30C8\\u3057\\u307E\\u3059\\n  --mac-signing-keychain <keychain name>\\n          \\u7F72\\u540D\\u30A2\\u30A4\\u30C7\\u30F3\\u30C6\\u30A3\\u30C6\\u30A3\\u3092\\u691C\\u7D22\\u3059\\u308B\\u30AD\\u30FC\\u30C1\\u30A7\\u30FC\\u30F3\\u306E\\u540D\\u524D\\n          \\u6307\\u5B9A\\u3057\\u306A\\u304B\\u3063\\u305F\\u5834\\u5408\\u3001\\u6A19\\u6E96\\u306E\\u30AD\\u30FC\\u30C1\\u30A7\\u30FC\\u30F3\\u304C\\u4F7F\\u7528\\u3055\\u308C\\u307E\\u3059\\u3002\\n  --mac-signing-key-user-name <team name>\\n          Apple\\u7F72\\u540D\\u30A2\\u30A4\\u30C7\\u30F3\\u30C6\\u30A3\\u30C6\\u30A3\\u306E\\u30C1\\u30FC\\u30E0\\u307E\\u305F\\u306F\\u30E6\\u30FC\\u30B6\\u30FC\\u540D\\u90E8\\u5206\\u3002\\n  --mac-app-store\\n          jpackage\\u51FA\\u529B\\u304CMac App Store\\u7528\\u3067\\u3042\\u308B\\u3053\\u3068\\n          \\u3092\\u793A\\u3057\\u307E\\u3059\\u3002\\n  --mac-entitlements <file path>\\n          \\u30D0\\u30F3\\u30C9\\u30EB\\u306E\\u5B9F\\u884C\\u53EF\\u80FD\\u30D5\\u30A1\\u30A4\\u30EB\\u304A\\u3088\\u3073\\u30E9\\u30A4\\u30D6\\u30E9\\u30EA\\u306E\\u7F72\\u540D\\u6642\\u306B\\n          \\u4F7F\\u7528\\u3059\\u308B\\u6A29\\u9650\\u3092\\u542B\\u3080\\u30D5\\u30A1\\u30A4\\u30EB\\u306E\\u30D1\\u30B9\\u3002\\n  --mac-app-category <category string>\\n          \\u30A2\\u30D7\\u30EA\\u30B1\\u30FC\\u30B7\\u30E7\\u30F3\\u306Eplist\\u306ELSApplicationCategoryType\\u3092\\u751F\\u6210\\u3059\\u308B\\u969B\\u306B\\u4F7F\\u7528\\u3059\\u308B\\u6587\\u5B57\\u5217\\u3002\\n          \\u30C7\\u30D5\\u30A9\\u30EB\\u30C8\\u5024\\u306F\"utilities\"\\u3067\\u3059\\u3002\\n\n+\n+MSG_Help_mac_launcher=\\\n+\\  --mac-package-identifier <ID string>\\n\\\n+\\          An identifier that uniquely identifies the application for macOS\\n\\\n+\\          Defaults to the main class name.\\n\\\n+\\          May only use alphanumeric (A-Z,a-z,0-9), hyphen (-),\\n\\\n+\\          and period (.) characters.\\n\\\n+\\  --mac-package-name <name string>\\n\\\n+\\          Name of the application as it appears in the Menu Bar\\n\\\n+\\          This can be different from the application name.\\n\\\n+\\          This name must be less than 16 characters long and be suitable for\\n\\\n+\\          displaying in the menu bar and the application Info window.\\n\\\n+\\          Defaults to the application name.\\n\\\n+\\  --mac-package-signing-prefix <prefix string>\\n\\\n+\\          When signing the application package, this value is prefixed\\n\\\n+\\          to all components that need to be signed that don't have\\n\\\n+\\          an existing package identifier.\\n\\\n+\\  --mac-sign\\n\\\n+\\          Request that the package or the predefined application image be\\n\\\n+\\          signed.\\n\\\n+\\  --mac-signing-keychain <keychain name>\\n\\\n+\\          Name of the keychain to search for the signing identity\\n\\\n+\\          If not specified, the standard keychains are used.\\n\\\n+\\  --mac-signing-key-user-name <team name>\\n\\\n+\\          Team or user name portion of Apple signing identities.\\n\\\n+\\  --mac-app-store\\n\\\n+\\          Indicates that the jpackage output is intended for the\\n\\\n+\\          Mac App Store.\\n\\\n+\\  --mac-entitlements <file path>\\n\\\n+\\          Path to file containing entitlements to use when signing\\n\\\n+\\          executables and libraries in the bundle.\\n\\\n+\\  --mac-app-category <category string>\\n\\\n+\\          String used to construct LSApplicationCategoryType in\\n\\\n+\\          application plist.  The default value is \"utilities\".\\n\\\n+\n@@ -217,0 +251,16 @@\n+\n+MSG_Help_default_app_image=\\\n+\\Location of the predefined application image that is used\\n\\\n+\\          to build an installable package\\n\\\n+\n+MSG_Help_mac_app_image=\\\n+\\Location of the predefined application image that is used\\n\\\n+\\          to build an installable package or to sign the predefined\\n\\\n+\\          application image\\n\\\n+\n+MSG_Help_mac_sign_sample_usage=\\\n+\\    Sign the predefined application image:\\n\\\n+\\        jpackage --type app-image --app-image <app-image> \\\\\\n\\\n+\\            --mac-sign [<additional signing options>...]\\n\\\n+\\        Note: the only additional options that are permitted in this mode are:\\n\\\n+\\              the set of additional mac signing options and --verbose\\n\\\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/resources\/HelpResources_ja.properties","additions":54,"deletions":4,"binary":false,"changes":58,"status":"modified"},{"patch":"@@ -54,0 +54,1 @@\n+\\{6}\\\n@@ -141,1 +142,1 @@\n-\\          The keys \"module\", \"main-jar\", \"main-class\",\\n\\\n+\\          The keys \"module\", \"main-jar\", \"main-class\", \"description\",\\n\\\n@@ -178,2 +179,1 @@\n-\\          Location of the predefined application image that is used\\n\\\n-\\          to build an installable package\\n\\\n+\\          {5}\\\n@@ -212,1 +212,35 @@\n-MSG_Help_mac_launcher=\\  --mac-package-identifier <ID string>\\n          \\u7528\\u6765\\u552F\\u4E00\\u5730\\u6807\\u8BC6 macOS \\u5E94\\u7528\\u7A0B\\u5E8F\\u7684\\u6807\\u8BC6\\u7B26\\n          \\u9ED8\\u8BA4\\u4E3A\\u4E3B\\u7C7B\\u540D\\u79F0\\u3002\\n          \\u53EA\\u80FD\\u4F7F\\u7528\\u5B57\\u6BCD\\u6570\\u5B57 (A-Z,a-z,0-9)\\u3001\\u8FDE\\u5B57\\u7B26 (-) \\u548C\\n          \\u53E5\\u70B9 (.) \\u5B57\\u7B26\\u3002\\n  --mac-package-name <name string>\\n          \\u51FA\\u73B0\\u5728\\u83DC\\u5355\\u680F\\u4E2D\\u7684\\u5E94\\u7528\\u7A0B\\u5E8F\\u540D\\u79F0\\n          \\u8FD9\\u53EF\\u4EE5\\u4E0E\\u5E94\\u7528\\u7A0B\\u5E8F\\u540D\\u79F0\\u4E0D\\u540C\\u3002\\n          \\u6B64\\u540D\\u79F0\\u7684\\u957F\\u5EA6\\u5FC5\\u987B\\u5C0F\\u4E8E 16 \\u4E2A\\u5B57\\u7B26\\uFF0C\\u9002\\u5408\\n          \\u663E\\u793A\\u5728\\u83DC\\u5355\\u680F\\u4E2D\\u548C\\u5E94\\u7528\\u7A0B\\u5E8F\\u201C\\u4FE1\\u606F\\u201D\\u7A97\\u53E3\\u4E2D\\u3002\\n          \\u9ED8\\u8BA4\\u4E3A\\u5E94\\u7528\\u7A0B\\u5E8F\\u540D\\u79F0\\u3002\\n  --mac-package-signing-prefix <prefix string>\\n          \\u5728\\u5BF9\\u5E94\\u7528\\u7A0B\\u5E8F\\u5305\\u7B7E\\u540D\\u65F6\\uFF0C\\u4F1A\\u5728\\u6240\\u6709\\u9700\\u8981\\u7B7E\\u540D\\n          \\u4F46\\u5F53\\u524D\\u6CA1\\u6709\\u7A0B\\u5E8F\\u5305\\u6807\\u8BC6\\u7B26\\u7684\\u7EC4\\u4EF6\\u7684\\n          \\u524D\\u9762\\u52A0\\u4E0A\\u6B64\\u503C\\u3002\\n  --mac-sign\\n          \\u8BF7\\u6C42\\u5BF9\\u7A0B\\u5E8F\\u5305\\u8FDB\\u884C\\u7B7E\\u540D\\n  --mac-signing-keychain <keychain name>\\n          \\u8981\\u7528\\u6765\\u641C\\u7D22\\u7B7E\\u540D\\u8EAB\\u4EFD\\u7684\\u5BC6\\u94A5\\u94FE\\u7684\\u540D\\u79F0\\n          \\u5982\\u679C\\u672A\\u6307\\u5B9A\\uFF0C\\u5219\\u4F7F\\u7528\\u6807\\u51C6\\u7684\\u5BC6\\u94A5\\u94FE\\u3002\\n  --mac-signing-key-user-name <team name>\\n          Apple \\u7B7E\\u540D\\u8EAB\\u4EFD\\u7684\\u56E2\\u961F\\u6216\\u7528\\u6237\\u540D\\u79F0\\u90E8\\u5206\\u3002\\n  --mac-app-store\\n          \\u6307\\u793A jpackage \\u8F93\\u51FA\\u9762\\u5411 \\n          Mac App Store\\u3002\\n  --mac-entitlements <file path>\\n          \\u5305\\u542B\\u4E00\\u4E9B\\u6743\\u5229\\u7684\\u6587\\u4EF6\\u7684\\u8DEF\\u5F84\\uFF0C\\u5728\\u5BF9\\u6346\\u7ED1\\u5305\\u4E2D\\u7684\\u53EF\\u6267\\u884C\\u6587\\u4EF6\\n          \\u548C\\u5E93\\u8FDB\\u884C\\u7B7E\\u540D\\u65F6\\u4F1A\\u4F7F\\u7528\\u8FD9\\u4E9B\\u6743\\u5229\\u3002\\n  --mac-app-category <category string>\\n          \\u7528\\u4E8E\\u6784\\u9020\\u5E94\\u7528\\u7A0B\\u5E8F plist \\u4E2D LSApplicationCategoryType \\u7684\\n          \\u5B57\\u7B26\\u4E32\\u3002\\u9ED8\\u8BA4\\u503C\\u4E3A \"utilities\"\\u3002\\n\n+\n+MSG_Help_mac_launcher=\\\n+\\  --mac-package-identifier <ID string>\\n\\\n+\\          An identifier that uniquely identifies the application for macOS\\n\\\n+\\          Defaults to the main class name.\\n\\\n+\\          May only use alphanumeric (A-Z,a-z,0-9), hyphen (-),\\n\\\n+\\          and period (.) characters.\\n\\\n+\\  --mac-package-name <name string>\\n\\\n+\\          Name of the application as it appears in the Menu Bar\\n\\\n+\\          This can be different from the application name.\\n\\\n+\\          This name must be less than 16 characters long and be suitable for\\n\\\n+\\          displaying in the menu bar and the application Info window.\\n\\\n+\\          Defaults to the application name.\\n\\\n+\\  --mac-package-signing-prefix <prefix string>\\n\\\n+\\          When signing the application package, this value is prefixed\\n\\\n+\\          to all components that need to be signed that don't have\\n\\\n+\\          an existing package identifier.\\n\\\n+\\  --mac-sign\\n\\\n+\\          Request that the package or the predefined application image be\\n\\\n+\\          signed.\\n\\\n+\\  --mac-signing-keychain <keychain name>\\n\\\n+\\          Name of the keychain to search for the signing identity\\n\\\n+\\          If not specified, the standard keychains are used.\\n\\\n+\\  --mac-signing-key-user-name <team name>\\n\\\n+\\          Team or user name portion of Apple signing identities.\\n\\\n+\\  --mac-app-store\\n\\\n+\\          Indicates that the jpackage output is intended for the\\n\\\n+\\          Mac App Store.\\n\\\n+\\  --mac-entitlements <file path>\\n\\\n+\\          Path to file containing entitlements to use when signing\\n\\\n+\\          executables and libraries in the bundle.\\n\\\n+\\  --mac-app-category <category string>\\n\\\n+\\          String used to construct LSApplicationCategoryType in\\n\\\n+\\          application plist.  The default value is \"utilities\".\\n\\\n+\n@@ -217,0 +251,16 @@\n+\n+MSG_Help_default_app_image=\\\n+\\Location of the predefined application image that is used\\n\\\n+\\          to build an installable package\\n\\\n+\n+MSG_Help_mac_app_image=\\\n+\\Location of the predefined application image that is used\\n\\\n+\\          to build an installable package or to sign the predefined\\n\\\n+\\          application image\\n\\\n+\n+MSG_Help_mac_sign_sample_usage=\\\n+\\    Sign the predefined application image:\\n\\\n+\\        jpackage --type app-image --app-image <app-image> \\\\\\n\\\n+\\            --mac-sign [<additional signing options>...]\\n\\\n+\\        Note: the only additional options that are permitted in this mode are:\\n\\\n+\\              the set of additional mac signing options and --verbose\\n\\\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/resources\/HelpResources_zh_CN.properties","additions":54,"deletions":4,"binary":false,"changes":58,"status":"modified"},{"patch":"@@ -95,0 +95,1 @@\n+ERR_InvalidOptionWithAppImageSigning=Error: Option [{0}] is not valid when signing application image\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/resources\/MainResources.properties","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -92,0 +92,1 @@\n+ERR_InvalidOptionWithAppImageSigning=Error: Option [{0}] is not valid when signing application image\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/resources\/MainResources_de.properties","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -92,0 +92,1 @@\n+ERR_InvalidOptionWithAppImageSigning=Error: Option [{0}] is not valid when signing application image\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/resources\/MainResources_ja.properties","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -92,0 +92,1 @@\n+ERR_InvalidOptionWithAppImageSigning=Error: Option [{0}] is not valid when signing application image\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/resources\/MainResources_zh_CN.properties","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -705,7 +705,9 @@\n-        if (isImagePackageType()) {\n-            TKit.deleteDirectoryContentsRecursive(outputDir());\n-        } else if (ThrowingSupplier.toSupplier(() -> TKit.deleteIfExists(\n-                outputBundle())).get()) {\n-            TKit.trace(\n-                    String.format(\"Deleted [%s] file before running jpackage\",\n-                            outputBundle()));\n+        if (hasArgument(\"--dest\")) {\n+            if (isImagePackageType()) {\n+                TKit.deleteDirectoryContentsRecursive(outputDir());\n+            } else if (ThrowingSupplier.toSupplier(() -> TKit.deleteIfExists(\n+                    outputBundle())).get()) {\n+                TKit.trace(\n+                        String.format(\"Deleted [%s] file before running jpackage\",\n+                                outputBundle()));\n+            }\n","filename":"test\/jdk\/tools\/jpackage\/helpers\/jdk\/jpackage\/test\/JPackageCommand.java","additions":9,"deletions":7,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -48,0 +48,1 @@\n+        params.put(Arguments.CLIOptions.APPCLASS.getId(), \"TestClass\");\n@@ -69,0 +70,1 @@\n+        params.put(Arguments.CLIOptions.APPCLASS.getId(), \"TestClass\");\n@@ -82,0 +84,5 @@\n+        assertInvalid(createFromXml(\n+                JPACKAGE_STATE_OPEN,\n+                    \"<main-launcher>Foo<\/main-launcher>\",\n+                    \"<main-class><\/main-class>\",\n+                \"<\/jpackage-state>\"));\n@@ -94,0 +101,1 @@\n+                    \"<main-class>main.Class<\/main-class>\",\n@@ -100,0 +108,1 @@\n+                    \"<main-class>main.Class<\/main-class>\",\n@@ -105,0 +114,1 @@\n+                    \"<main-class>main.Class<\/main-class>\",\n@@ -116,0 +126,1 @@\n+        params.put(\"main-class\", \"main.Class\");\n@@ -122,0 +133,35 @@\n+    @Test\n+    public void testMainClass() throws IOException {\n+        Map<String, Object> params = new LinkedHashMap<>();\n+        params.put(\"name\", \"Foo\");\n+        params.put(\"main-class\", \"main.Class\");\n+        params.put(\"description\", \"Duck App Description\");\n+        AppImageFile aif = create(params);\n+\n+        Assert.assertEquals(\"main.Class\", aif.getMainClass());\n+    }\n+\n+    @Test\n+    public void testMacSign() throws IOException {\n+        Map<String, Object> params = new LinkedHashMap<>();\n+        params.put(\"name\", \"Foo\");\n+        params.put(\"main-class\", \"main.Class\");\n+        params.put(\"description\", \"Duck App Description\");\n+        params.put(\"mac-sign\", Boolean.TRUE);\n+        AppImageFile aif = create(params);\n+\n+        Assert.assertTrue(aif.isSigned());\n+    }\n+\n+    @Test\n+    public void testMacAppStore() throws IOException {\n+        Map<String, Object> params = new LinkedHashMap<>();\n+        params.put(\"name\", \"Foo\");\n+        params.put(\"main-class\", \"main.Class\");\n+        params.put(\"description\", \"Duck App Description\");\n+        params.put(\"mac-app-store\", Boolean.TRUE);\n+        AppImageFile aif = create(params);\n+\n+        Assert.assertTrue(aif.isAppStore());\n+    }\n+\n@@ -136,0 +182,1 @@\n+        params.put(\"main-class\", \"main.Class\");\n@@ -148,1 +195,0 @@\n-\n","filename":"test\/jdk\/tools\/jpackage\/junit\/jdk\/jpackage\/internal\/AppImageFileTest.java","additions":47,"deletions":1,"binary":false,"changes":48,"status":"modified"},{"patch":"@@ -25,1 +25,0 @@\n-import java.util.List;\n@@ -42,1 +41,1 @@\n- * always allowe access to this keychain\" for user which runs test.\n+ * always allowed access to this keychain\" for user which runs test.\n","filename":"test\/jdk\/tools\/jpackage\/macosx\/SigningAppImageTest.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -0,0 +1,120 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.nio.file.Path;\n+\n+import jdk.jpackage.test.JPackageCommand;\n+import jdk.jpackage.test.TKit;\n+import jdk.jpackage.test.PackageType;\n+import jdk.jpackage.test.Annotations.Test;\n+import jdk.jpackage.test.Annotations.Parameter;\n+import jdk.jpackage.test.AdditionalLauncher;\n+\n+\/**\n+ * Tests generation of app image and then signs generated app image with --mac-sign\n+ * and related arguments. Test will generate app image and verify signature of main\n+ * launcher and app bundle itself. This test requires that machine is configured with\n+ * test certificate for \"Developer ID Application: jpackage.openjdk.java.net\" or\n+ * alternately \"Developer ID Application: \" + name specified by system property:\n+ * \"jpackage.mac.signing.key.user.name\" in the jpackagerTest keychain\n+ * (or alternately the keychain specified with the system property\n+ * \"jpackage.mac.signing.keychain\". If this certificate is self-signed, it must\n+ * have be set to always allowed access to this keychain\" for user which runs test.\n+ * (If cert is real (not self signed), the do not set trust to allow.)\n+ *\/\n+\n+\/*\n+ * @test\n+ * @summary jpackage with --type app-image --app-image \"appImage\" --mac-sign\n+ * @library ..\/helpers\n+ * @library \/test\/lib\n+ * @library base\n+ * @build SigningBase\n+ * @build SigningCheck\n+ * @build jtreg.SkippedException\n+ * @build jdk.jpackage.test.*\n+ * @build SigningAppImageTwoStepsTest\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n+ * @requires (os.family == \"mac\")\n+ * @run main\/othervm\/timeout=360 -Xmx512m jdk.jpackage.test.Main\n+ *  --jpt-run=SigningAppImageTwoStepsTest\n+ *\/\n+public class SigningAppImageTwoStepsTest {\n+\n+    @Test\n+    @Parameter(\"true\")\n+    @Parameter(\"false\")\n+    public void test(boolean signAppImage) throws Exception {\n+        SigningCheck.checkCertificates();\n+\n+        Path appimageOutput = TKit.createTempDirectory(\"appimage\");\n+\n+        \/\/ Generate app image. Signed or unsigned based on test\n+        \/\/ parameter. We should able to sign predfined app images\n+        \/\/ which are signed or unsigned.\n+        JPackageCommand appImageCmd = JPackageCommand.helloAppImage()\n+                .setArgumentValue(\"--dest\", appimageOutput);\n+        if (signAppImage) {\n+            appImageCmd.addArguments(\"--mac-sign\", \"--mac-signing-key-user-name\",\n+                    SigningBase.DEV_NAME, \"--mac-signing-keychain\",\n+                    SigningBase.KEYCHAIN);\n+        }\n+\n+        \/\/ Add addtional launcher\n+        AdditionalLauncher testAL = new AdditionalLauncher(\"testAL\");\n+        testAL.applyTo(appImageCmd);\n+\n+        \/\/ Generate app image\n+        appImageCmd.executeAndAssertHelloAppImageCreated();\n+\n+        \/\/ Double check if it is signed or unsigned based on signAppImage\n+        verifySignature(appImageCmd, signAppImage);\n+\n+        \/\/ Sign app image\n+        JPackageCommand cmd = new JPackageCommand();\n+        cmd.setPackageType(PackageType.IMAGE)\n+            .addArguments(\"--app-image\", appImageCmd.outputBundle().toAbsolutePath())\n+            .addArguments(\"--mac-sign\")\n+            .addArguments(\"--mac-signing-key-user-name\", SigningBase.DEV_NAME)\n+            .addArguments(\"--mac-signing-keychain\", SigningBase.KEYCHAIN);\n+        cmd.execute();\n+\n+        \/\/ Should be signed app image\n+        verifySignature(appImageCmd, true);\n+    }\n+\n+    private void verifySignature(JPackageCommand appImageCmd, boolean isSigned) throws Exception {\n+        Path launcherPath = appImageCmd.appLauncherPath();\n+        SigningBase.verifyCodesign(launcherPath, isSigned);\n+\n+        Path testALPath = launcherPath.getParent().resolve(\"testAL\");\n+        SigningBase.verifyCodesign(testALPath, isSigned);\n+\n+        Path appImage = appImageCmd.outputBundle();\n+        SigningBase.verifyCodesign(appImage, isSigned);\n+        if (isSigned) {\n+            SigningBase.verifySpctl(appImage, \"exec\");\n+        }\n+    }\n+}\n+\n","filename":"test\/jdk\/tools\/jpackage\/macosx\/SigningAppImageTwoStepsTest.java","additions":120,"deletions":0,"binary":false,"changes":120,"status":"added"},{"patch":"@@ -0,0 +1,118 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.jpackage.tests;\n+\n+import java.io.IOException;\n+import java.nio.file.Path;\n+import java.nio.file.Files;\n+import java.util.Collection;\n+import java.util.List;\n+\n+import jdk.jpackage.test.Annotations.Parameters;\n+import jdk.jpackage.test.Annotations.Test;\n+import jdk.jpackage.test.JPackageCommand;\n+import jdk.jpackage.test.TKit;\n+\n+\/*\n+ * @test\n+ * @summary Test jpackage output for erroneous input with --type \"app-image\" and --app-image\n+ * @library ..\/..\/..\/..\/helpers\n+ * @build jdk.jpackage.test.*\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n+ * @compile PredefinedAppImageErrorTest.java\n+ * \n+ * @run main\/othervm\/timeout=360 -Xmx512m jdk.jpackage.test.Main\n+ *  --jpt-run=jdk.jpackage.tests.PredefinedAppImageErrorTest\n+ *  --jpt-before-run=jdk.jpackage.test.JPackageCommand.useExecutableByDefault\n+ * \n+ * @run main\/othervm\/timeout=360 -Xmx512m jdk.jpackage.test.Main\n+ *  --jpt-run=jdk.jpackage.tests.PredefinedAppImageErrorTest\n+ *  --jpt-before-run=jdk.jpackage.test.JPackageCommand.useToolProviderByDefault\n+ *\/\n+\n+public final class PredefinedAppImageErrorTest {\n+\n+    private final String expectedError;\n+    private final JPackageCommand cmd;\n+\n+    @Parameters\n+    public static Collection input() throws IOException {\n+        return List.of(new Object[][]{\n+            \/\/ --mac-sign is required\n+            {\"Hello\",\n+                    null,\n+                    new String[]{\"--input\", \"--dest\", \"--name\", \"--main-jar\", \"--main-class\"},\n+                    TKit.isOSX() ?\n+                            \"--mac-sign option is required\" :\n+                            \"Option [--app-image] is not valid with type [app-image]\"\n+                            },\n+            \/\/ --mac-app-store is required\n+            {\"Hello\",\n+                    new String[]{\"--mac-sign\", \"--mac-app-store\"},\n+                    new String[]{\"--input\", \"--dest\", \"--name\", \"--main-jar\", \"--main-class\"},\n+                    TKit.isOSX() ?\n+                            \"Option [--mac-app-store] is not valid\" :\n+                            \"Option [--mac-sign] is not valid on this platform\"\n+                            },\n+        });\n+    }\n+\n+    public PredefinedAppImageErrorTest(String javaAppDesc, String[] jpackageArgs,\n+                String[] removeArgs,\n+                String expectedError) {\n+        this.expectedError = expectedError;\n+\n+        cmd = JPackageCommand.helloAppImage(javaAppDesc)\n+                .saveConsoleOutput(true).dumpOutput(true);\n+        if (jpackageArgs != null) {\n+            cmd.addArguments(jpackageArgs);\n+        }\n+        if (removeArgs != null) {\n+            for (String arg : removeArgs) {\n+                cmd.removeArgumentWithValue(arg);\n+            }\n+        }\n+    }\n+\n+    @Test\n+    public void test() throws IOException {\n+        getDummyAppImage(cmd);\n+\n+        List<String> output = cmd.execute(1).getOutput();\n+        TKit.assertNotNull(output, \"output is null\");\n+        TKit.assertTextStream(expectedError).apply(output.stream());\n+    }\n+\n+    private void getDummyAppImage(JPackageCommand cmd) throws IOException {\n+        Path dummyAppFolder\n+            = TKit.createTempDirectory(\"DummyAppImage\").toAbsolutePath();\n+\n+        Path dummyAppFile\n+            = dummyAppFolder.resolve(\"DummyAppFile\").toAbsolutePath();\n+        Files.createFile(dummyAppFile);\n+\n+        cmd.addArguments(\"--app-image\", dummyAppFolder.toString());\n+    }\n+\n+}\n","filename":"test\/jdk\/tools\/jpackage\/share\/jdk\/jpackage\/tests\/PredefinedAppImageErrorTest.java","additions":118,"deletions":0,"binary":false,"changes":118,"status":"added"}]}