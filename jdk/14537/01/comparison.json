{"files":[{"patch":"@@ -368,1 +368,1 @@\n-          \"4=all details printed. \"                                         \\\n+          \"5=all details printed. \"                                         \\\n@@ -371,1 +371,1 @@\n-          range(-1, 4)                                                      \\\n+          range(-1, 5)                                                      \\\n","filename":"src\/hotspot\/share\/opto\/c2_globals.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -263,1 +263,1 @@\n-  C->print_method(CompilerPhaseType::PHASE_MACH_ANALYSIS, 4);\n+  C->print_method(CompilerPhaseType::PHASE_MACH_ANALYSIS, 3);\n","filename":"src\/hotspot\/share\/opto\/output.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2788,1 +2788,1 @@\n-    printer->print_method(buffer, 4);\n+    printer->print_method(buffer, 5);\n","filename":"src\/hotspot\/share\/opto\/parse2.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -894,0 +894,4 @@\n+  const Type* newtype = type_or_null(n);\n+  if (nn != n || oldtype != newtype) {\n+    C->print_method(PHASE_AFTER_ITER_GVN_STEP, 4, n);\n+  }\n@@ -896,1 +900,0 @@\n-    const Type* newtype = type_or_null(n);\n@@ -1024,0 +1027,1 @@\n+  C->print_method(PHASE_BEFORE_ITER_GVN, 3);\n@@ -1033,0 +1037,1 @@\n+      C->print_method(PHASE_AFTER_ITER_GVN, 3);\n@@ -1039,0 +1044,1 @@\n+      C->print_method(PHASE_AFTER_ITER_GVN, 3);\n@@ -1053,0 +1059,1 @@\n+  C->print_method(PHASE_AFTER_ITER_GVN, 3);\n","filename":"src\/hotspot\/share\/opto\/phaseX.cpp","additions":8,"deletions":1,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+  flags(BEFORE_ITER_GVN,              \"Before Iter GVN\") \\\n@@ -34,0 +35,2 @@\n+  flags(AFTER_ITER_GVN_STEP,          \"After Iter GVN Step\") \\\n+  flags(AFTER_ITER_GVN,               \"After Iter GVN\") \\\n","filename":"src\/hotspot\/share\/opto\/phasetype.hpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -25,9 +25,10 @@\n-The JVM support is controlled by the flag `-XX:PrintIdealGraphLevel=#` where `#`\n-is:\n-\n-* 0: no output, the default\n-* 1: dumps graph after parsing, before matching, and final code (also dumps\n-     graphs for failed compilations, if available)\n-* 2: more detail, including after loop opts\n-* 3: even more detail\n-* 4: prints graph after parsing every bytecode (very slow)\n+The JVM support is controlled by the flag `-XX:PrintIdealGraphLevel=N`, where\n+Ideal graphs are dumped at the following points:\n+\n+* `N=0`: no output (default)\n+* `N=1`: after parsing, before matching, and final code (also for failed\n+  compilations, if available)\n+* `N=2`: additionally, after every major phase (including loop opts)\n+* `N=3`: additionally, after every minor phase\n+* `N=4`: additionally, after every effective IGVN step (slow)\n+* `N=5`: additionally, after parsing every bytecode (very slow)\n","filename":"src\/utils\/IdealGraphVisualizer\/README.md","additions":10,"deletions":9,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n- * or DEBUG are not listed. This enum should be kept in sync with phasetye.hpp.\n+ * or DEBUG are not listed. This enum should be kept in sync with phasetype.hpp.\n@@ -46,0 +46,1 @@\n+    BEFORE_ITER_GVN(\"Before Iter GVN\"),\n@@ -47,0 +48,2 @@\n+    AFTER_ITER_GVN_STEP(\"After Iter GVN Step\"),\n+    AFTER_ITER_GVN(\"After Iter GVN\"),\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/CompilePhase.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"}]}