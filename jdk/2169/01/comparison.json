{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+import java.util.HashMap;\n@@ -29,0 +30,1 @@\n+import java.util.Map;\n@@ -33,6 +35,1 @@\n-import com.sun.tools.javac.util.List;\n-import com.sun.tools.javac.util.Name;\n-import com.sun.tools.javac.util.Context;\n-import com.sun.tools.javac.util.Filter;\n-import com.sun.tools.javac.util.ListBuffer;\n-import com.sun.tools.javac.util.Names;\n+import com.sun.tools.javac.util.*;\n@@ -55,9 +52,1 @@\n-    private final TokenKind[] key;\n-\n-    \/**  The number of the last entered keyword.\n-     *\/\n-    private int maxKey = 0;\n-\n-    \/** The names of all tokens.\n-     *\/\n-    private Name[] tokenName = new Name[TokenKind.values().length];\n+    private Map<String, TokenKind> keywords = new HashMap<>();\n@@ -78,4 +67,4 @@\n-            if (t.name != null)\n-                enterKeyword(t.name, t);\n-            else\n-                tokenName[t.ordinal()] = null;\n+            if (t.name != null) {\n+                names.fromString(t.name);\n+                keywords.put(t.name, t);\n+            }\n@@ -83,13 +72,0 @@\n-\n-        key = new TokenKind[maxKey+1];\n-        for (int i = 0; i <= maxKey; i++) key[i] = TokenKind.IDENTIFIER;\n-        for (TokenKind t : TokenKind.values()) {\n-            if (t.name != null)\n-                key[tokenName[t.ordinal()].getIndex()] = t;\n-        }\n-    }\n-\n-    private void enterKeyword(String s, TokenKind token) {\n-        Name n = names.fromString(s);\n-        tokenName[token.ordinal()] = n;\n-        if (n.getIndex() > maxKey) maxKey = n.getIndex();\n@@ -104,1 +80,2 @@\n-        return (name.getIndex() > maxKey) ? TokenKind.IDENTIFIER : key[name.getIndex()];\n+        TokenKind t = keywords.get(name.toString());\n+        return (t != null) ? t : TokenKind.IDENTIFIER;\n@@ -108,1 +85,2 @@\n-        return lookupKind(names.fromString(name));\n+        TokenKind t = keywords.get(name);\n+        return (t != null) ? t : TokenKind.IDENTIFIER;\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/parser\/Tokens.java","additions":13,"deletions":35,"binary":false,"changes":48,"status":"modified"}]}