{"files":[{"patch":"@@ -4,1 +4,1 @@\n-version=20\n+version=21\n","filename":".jcheck\/conf","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -75,0 +75,1 @@\n+<li><a href=\"#alignas\" id=\"toc-alignas\">alignas<\/a><\/li>\n@@ -601,1 +602,1 @@\n-<code>std::nullptr_t<\/code>.<\/li>\n+<code>std::nullptr_t<\/code> and <code>std::max_align_t<\/code>.<\/li>\n@@ -673,0 +674,47 @@\n+<h3 id=\"alignas\">alignas<\/h3>\n+<p><em>Alignment-specifiers<\/em> (<code>alignas<\/code> <a\n+href=\"https:\/\/www.open-std.org\/jtc1\/sc22\/wg21\/docs\/papers\/2007\/n2341.pdf\">n2341<\/a>)\n+are permitted, with restrictions.<\/p>\n+<p><em>Alignment-specifiers<\/em> are permitted when the requested\n+alignment is a <em>fundamental alignment<\/em> (not greater than\n+<code>alignof(std::max_align_t)<\/code> <a\n+href=\"https:\/\/www.open-std.org\/jtc1\/sc22\/wg21\/docs\/papers\/2014\/n4296.pdf\">C++14\n+3.11\/2<\/a>).<\/p>\n+<p><em>Alignment-specifiers<\/em> with an <em>extended alignment<\/em>\n+(greater than <code>alignof(std::max_align_t)<\/code> <a\n+href=\"https:\/\/www.open-std.org\/jtc1\/sc22\/wg21\/docs\/papers\/2014\/n4296.pdf\">C++14\n+3.11\/3<\/a>) may only be used to align variables with static or automatic\n+storage duration (<a\n+href=\"https:\/\/www.open-std.org\/jtc1\/sc22\/wg21\/docs\/papers\/2014\/n4296.pdf\">C++14\n+3.7.1, 3.7.3<\/a>). As a consequence, <em>over-aligned types<\/em> are\n+forbidden; this may change if HotSpot updates to using C++17 or later\n+(<a\n+href=\"https:\/\/www.open-std.org\/jtc1\/sc22\/wg21\/docs\/papers\/2016\/p0035r4.html\">p0035r4<\/a>).<\/p>\n+<p>Large <em>extended alignments<\/em> should be avoided, particularly\n+for stack allocated objects. What is a large value may depend on the\n+platform and configuration. There may also be hard limits for some\n+platforms.<\/p>\n+<p>An <em>alignment-specifier<\/em> must always be applied to a\n+definition (<a\n+href=\"https:\/\/www.open-std.org\/jtc1\/sc22\/wg21\/docs\/papers\/2014\/n4296.pdf\">C++14\n+10.6.2\/6<\/a>). (C++ allows an <em>alignment-specifier<\/em> to optionally\n+also be applied to a declaration, so long as the definition has\n+equivalent alignment. There isn't any known benefit from duplicating the\n+alignment in a non-definition declaration, so such duplication should be\n+avoided in HotSpot code.)<\/p>\n+<p>Enumerations are forbidden from having <em>alignment-specifiers<\/em>.\n+Aligned enumerations were originally permitted but insufficiently\n+specified, and were later (C++20) removed (<a\n+href=\"https:\/\/cplusplus.github.io\/CWG\/issues\/2354.html\">CWG 2354<\/a>).\n+Permitting such usage in HotSpot now would just cause problems in the\n+future.<\/p>\n+<p><em>Alignment-specifiers<\/em> are forbidden in <code>typedef<\/code>\n+and <em>alias-declarations<\/em>. This may work or may have worked in\n+some versions of some compilers, but was later (C++14) explicitly\n+disallowed (<a\n+href=\"https:\/\/cplusplus.github.io\/CWG\/issues\/1437.html\">CWG\n+1437<\/a>).<\/p>\n+<p>The HotSpot macro <code>ATTRIBUTE_ALIGNED<\/code> provides similar\n+capabilities for platforms that define it. This macro predates the use\n+by HotSpot of C++ versions providing <code>alignas<\/code>. New code\n+should use <code>alignas<\/code>.<\/p>\n","filename":"doc\/hotspot-style.html","additions":49,"deletions":1,"binary":false,"changes":50,"status":"modified"},{"patch":"@@ -576,1 +576,1 @@\n-* `#include <cstddef>` to use `std::nullptr_t`.\n+* `#include <cstddef>` to use `std::nullptr_t` and `std::max_align_t`.\n@@ -654,0 +654,45 @@\n+### alignas\n+\n+_Alignment-specifiers_ (`alignas`\n+[n2341](https:\/\/www.open-std.org\/jtc1\/sc22\/wg21\/docs\/papers\/2007\/n2341.pdf))\n+are permitted, with restrictions.\n+\n+_Alignment-specifiers_ are permitted when the requested alignment is a\n+_fundamental alignment_ (not greater than `alignof(std::max_align_t)`\n+[C++14 3.11\/2](https:\/\/www.open-std.org\/jtc1\/sc22\/wg21\/docs\/papers\/2014\/n4296.pdf)).\n+\n+_Alignment-specifiers_ with an _extended alignment_ (greater than\n+`alignof(std::max_align_t)`\n+[C++14 3.11\/3](https:\/\/www.open-std.org\/jtc1\/sc22\/wg21\/docs\/papers\/2014\/n4296.pdf))\n+may only be used to align variables with static or automatic storage duration\n+([C++14 3.7.1, 3.7.3](https:\/\/www.open-std.org\/jtc1\/sc22\/wg21\/docs\/papers\/2014\/n4296.pdf)).\n+As a consequence, _over-aligned types_ are forbidden; this may change if\n+HotSpot updates to using C++17 or later\n+([p0035r4](https:\/\/www.open-std.org\/jtc1\/sc22\/wg21\/docs\/papers\/2016\/p0035r4.html)).\n+\n+Large _extended alignments_ should be avoided, particularly for stack\n+allocated objects. What is a large value may depend on the platform and\n+configuration. There may also be hard limits for some platforms.\n+\n+An _alignment-specifier_ must always be applied to a definition\n+([C++14 10.6.2\/6](https:\/\/www.open-std.org\/jtc1\/sc22\/wg21\/docs\/papers\/2014\/n4296.pdf)).\n+(C++ allows an _alignment-specifier_ to optionally also be applied to a\n+declaration, so long as the definition has equivalent alignment. There isn't\n+any known benefit from duplicating the alignment in a non-definition\n+declaration, so such duplication should be avoided in HotSpot code.)\n+\n+Enumerations are forbidden from having _alignment-specifiers_. Aligned\n+enumerations were originally permitted but insufficiently specified, and were\n+later (C++20) removed\n+([CWG 2354](https:\/\/cplusplus.github.io\/CWG\/issues\/2354.html)).\n+Permitting such usage in HotSpot now would just cause problems in the future.\n+\n+_Alignment-specifiers_ are forbidden in `typedef` and _alias-declarations_.\n+This may work or may have worked in some versions of some compilers, but was\n+later (C++14) explicitly disallowed\n+([CWG 1437](https:\/\/cplusplus.github.io\/CWG\/issues\/1437.html)).\n+\n+The HotSpot macro `ATTRIBUTE_ALIGNED` provides similar capabilities for\n+platforms that define it. This macro predates the use by HotSpot of C++\n+versions providing `alignas`. New code should use `alignas`.\n+\n","filename":"doc\/hotspot-style.md","additions":46,"deletions":1,"binary":false,"changes":47,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n-DEFAULT_VERSION_FEATURE=20\n+DEFAULT_VERSION_FEATURE=21\n@@ -36,2 +36,2 @@\n-DEFAULT_VERSION_DATE=2023-03-21\n-DEFAULT_VERSION_CLASSFILE_MAJOR=64  # \"`$EXPR $DEFAULT_VERSION_FEATURE + 44`\"\n+DEFAULT_VERSION_DATE=2023-09-19\n+DEFAULT_VERSION_CLASSFILE_MAJOR=65  # \"`$EXPR $DEFAULT_VERSION_FEATURE + 44`\"\n@@ -40,2 +40,2 @@\n-DEFAULT_ACCEPTABLE_BOOT_VERSIONS=\"19 20\"\n-DEFAULT_JDK_SOURCE_TARGET_VERSION=20\n+DEFAULT_ACCEPTABLE_BOOT_VERSIONS=\"19 20 21\"\n+DEFAULT_JDK_SOURCE_TARGET_VERSION=21\n","filename":"make\/conf\/version-numbers.conf","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -636,1 +636,1 @@\n-     * Otherwise, it returns null. eg. when the id is \"zh_Hans_SG\", it return \"SG\".\n+     * Otherwise, it returns null. eg. when the id is \"zh_Hans_SG\", it returns \"SG\".\n@@ -648,1 +648,1 @@\n-     * Otherwise, it returns null. eg. when the id is \"zh_Hans_SG\", it return \"SG\".\n+     * Otherwise, it returns null. eg. when the id is \"zh_Hans_SG\", it returns \"SG\".\n@@ -655,0 +655,8 @@\n+    \/**\n+     * Examine if the id includes the script code. If it does, it returns\n+     * the script code.\n+     *\/\n+    static String getScriptCode(String id) {\n+        return Locale.forLanguageTag(id.replaceAll(\"_\", \"-\")).getScript();\n+    }\n+\n@@ -1023,0 +1031,1 @@\n+            .map(l -> new Locale.Builder().setLocale(l).setScript(\"Latn\").build())\n","filename":"make\/jdk\/src\/classes\/build\/tools\/cldrconverter\/CLDRConverter.java","additions":11,"deletions":2,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -420,1 +420,0 @@\n-        \/\/ ignore script here\n@@ -425,0 +424,1 @@\n+                            .setScript(CLDRConverter.getScriptCode(localeID))\n","filename":"make\/jdk\/src\/classes\/build\/tools\/cldrconverter\/ResourceBundleGenerator.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -47,0 +47,7 @@\n+\n+ifeq ($(call isTargetOsType, unix), true)\n+  ifeq ($(call isTargetOs, macosx aix), false)\n+    # This class is not needed on \"unix\" because SCTP in Java is supported for that platform\n+    EXCLUDE_FILES += $(TOPDIR)\/src\/jdk.sctp\/share\/classes\/sun\/nio\/ch\/sctp\/UnsupportedUtil.java\n+  endif\n+endif\n","filename":"make\/modules\/jdk.sctp\/Java.gmk","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -1799,2 +1799,3 @@\n-        C2EntryBarrierStub* stub = Compile::current()->output()->entry_barrier_table()->add_entry_barrier();\n-        slow_path = &stub->slow_path();\n+        C2EntryBarrierStub* stub = new (Compile::current()->comp_arena()) C2EntryBarrierStub();\n+        Compile::current()->output()->add_stub(stub);\n+        slow_path = &stub->entry();\n@@ -1882,1 +1883,3 @@\n-      code_stub = &C->output()->safepoint_poll_table()->add_safepoint(__ offset());\n+      C2SafepointPollStub* stub = new (C->comp_arena()) C2SafepointPollStub(__ offset());\n+      C->output()->add_stub(stub);\n+      code_stub = &stub->entry();\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64.ad","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -137,0 +137,3 @@\n+          \/\/ The vector implementation of Op_AddReductionVD\/F is for the Vector API only.\n+          \/\/ It is not suitable for auto-vectorization because it does not add the elements\n+          \/\/ in the same order as sequential code, and FP addition is non-associative.\n@@ -2879,0 +2882,14 @@\n+\/\/ Floating-point addition is not associative, so the rules for AddReductionVF\n+\/\/ on NEON can't be used to auto-vectorize floating-point reduce-add.\n+\/\/ Currently, on NEON, AddReductionVF is only generated by Vector API.\n+instruct reduce_add2F_neon(vRegF dst, vRegF fsrc, vReg vsrc) %{\n+  predicate(UseSVE == 0 && Matcher::vector_length(n->in(2)) == 2);\n+  match(Set dst (AddReductionVF fsrc vsrc));\n+  effect(TEMP_DEF dst);\n+  format %{ \"reduce_add2F_neon $dst, $fsrc, $vsrc\" %}\n+  ins_encode %{\n+    __ faddp($dst$$FloatRegister, $vsrc$$FloatRegister, __ S);\n+    __ fadds($dst$$FloatRegister, $dst$$FloatRegister, $fsrc$$FloatRegister);\n+  %}\n+  ins_pipe(pipe_slow);\n+%}\n@@ -2880,2 +2897,2 @@\n-instruct reduce_addF_neon(vRegF dst, vRegF fsrc, vReg vsrc, vReg tmp) %{\n-  predicate(UseSVE == 0);\n+instruct reduce_add4F_neon(vRegF dst, vRegF fsrc, vReg vsrc, vReg tmp) %{\n+  predicate(UseSVE == 0 && Matcher::vector_length(n->in(2)) == 4);\n@@ -2884,1 +2901,1 @@\n-  format %{ \"reduce_addF_neon $dst, $fsrc, $vsrc\\t# KILL $tmp\" %}\n+  format %{ \"reduce_add4F_neon $dst, $fsrc, $vsrc\\t# KILL $tmp\" %}\n@@ -2886,10 +2903,3 @@\n-    uint length_in_bytes = Matcher::vector_length_in_bytes(this, $vsrc);\n-    __ fadds($dst$$FloatRegister, $fsrc$$FloatRegister, $vsrc$$FloatRegister);\n-    __ ins($tmp$$FloatRegister, __ S, $vsrc$$FloatRegister, 0, 1);\n-    __ fadds($dst$$FloatRegister, $dst$$FloatRegister, $tmp$$FloatRegister);\n-    if (length_in_bytes == 16) {\n-      __ ins($tmp$$FloatRegister, __ S, $vsrc$$FloatRegister, 0, 2);\n-      __ fadds($dst$$FloatRegister, $dst$$FloatRegister, $tmp$$FloatRegister);\n-      __ ins($tmp$$FloatRegister, __ S, $vsrc$$FloatRegister, 0, 3);\n-      __ fadds($dst$$FloatRegister, $dst$$FloatRegister, $tmp$$FloatRegister);\n-    }\n+    __ faddp($tmp$$FloatRegister, __ T4S, $vsrc$$FloatRegister, $vsrc$$FloatRegister);\n+    __ faddp($dst$$FloatRegister, $tmp$$FloatRegister, __ S);\n+    __ fadds($dst$$FloatRegister, $dst$$FloatRegister, $fsrc$$FloatRegister);\n@@ -2913,2 +2923,4 @@\n-\n-instruct reduce_addD_neon(vRegD dst, vRegD dsrc, vReg vsrc, vReg tmp) %{\n+\/\/ Floating-point addition is not associative, so the rule for AddReductionVD\n+\/\/ on NEON can't be used to auto-vectorize floating-point reduce-add.\n+\/\/ Currently, on NEON, AddReductionVD is only generated by Vector API.\n+instruct reduce_addD_neon(vRegD dst, vRegD dsrc, vReg vsrc) %{\n@@ -2917,2 +2929,2 @@\n-  effect(TEMP_DEF dst, TEMP tmp);\n-  format %{ \"reduce_addD_neon $dst, $dsrc, $vsrc\\t# 2D. KILL $tmp\" %}\n+  effect(TEMP_DEF dst);\n+  format %{ \"reduce_addD_neon $dst, $dsrc, $vsrc\\t# 2D\" %}\n@@ -2920,3 +2932,2 @@\n-    __ faddd($dst$$FloatRegister, $dsrc$$FloatRegister, $vsrc$$FloatRegister);\n-    __ ins($tmp$$FloatRegister, __ D, $vsrc$$FloatRegister, 0, 1);\n-    __ faddd($dst$$FloatRegister, $dst$$FloatRegister, $tmp$$FloatRegister);\n+    __ faddp($dst$$FloatRegister, $vsrc$$FloatRegister, __ D);\n+    __ faddd($dst$$FloatRegister, $dst$$FloatRegister, $dsrc$$FloatRegister);\n@@ -5872,1 +5883,1 @@\n-instruct vtest_anytrue_neon(iRegINoSp dst, vReg src1, vReg src2, vReg tmp, rFlagsReg cr) %{\n+instruct vtest_anytrue_neon(rFlagsReg cr, vReg src1, vReg src2, vReg tmp) %{\n@@ -5875,3 +5886,3 @@\n-  match(Set dst (VectorTest src1 src2 ));\n-  effect(TEMP tmp, KILL cr);\n-  format %{ \"vtest_anytrue_neon $dst, $src1\\t# KILL $tmp, cr\" %}\n+  match(Set cr (VectorTest src1 src2));\n+  effect(TEMP tmp);\n+  format %{ \"vtest_anytrue_neon $src1\\t# KILL $tmp\" %}\n@@ -5883,3 +5894,2 @@\n-    __ umov($dst$$Register, $tmp$$FloatRegister, __ B, 0);\n-    __ cmpw($dst$$Register, zr);\n-    __ csetw($dst$$Register, Assembler::NE);\n+    __ umov(rscratch1, $tmp$$FloatRegister, __ B, 0);\n+    __ cmpw(rscratch1, zr);\n@@ -5890,1 +5900,1 @@\n-instruct vtest_anytrue_sve(iRegINoSp dst, pReg src1, pReg src2, rFlagsReg cr) %{\n+instruct vtest_anytrue_sve(rFlagsReg cr, pReg src1, pReg src2) %{\n@@ -5893,3 +5903,2 @@\n-  match(Set dst (VectorTest src1 src2));\n-  effect(KILL cr);\n-  format %{ \"vtest_anytrue_sve $dst, $src1\\t# KILL cr\" %}\n+  match(Set cr (VectorTest src1 src2));\n+  format %{ \"vtest_anytrue_sve $src1\" %}\n@@ -5899,1 +5908,0 @@\n-    __ csetw($dst$$Register, Assembler::NE);\n@@ -5906,1 +5914,1 @@\n-instruct vtest_alltrue_neon(iRegINoSp dst, vReg src1, vReg src2, vReg tmp, rFlagsReg cr) %{\n+instruct vtest_alltrue_neon(rFlagsReg cr, vReg src1, vReg src2, vReg tmp) %{\n@@ -5909,3 +5917,3 @@\n-  match(Set dst (VectorTest src1 src2));\n-  effect(TEMP tmp, KILL cr);\n-  format %{ \"vtest_alltrue_neon $dst, $src1\\t# KILL $tmp, cr\" %}\n+  match(Set cr (VectorTest src1 src2));\n+  effect(TEMP tmp);\n+  format %{ \"vtest_alltrue_neon $src1\\t# KILL $tmp\" %}\n@@ -5917,3 +5925,2 @@\n-    __ umov($dst$$Register, $tmp$$FloatRegister, __ B, 0);\n-    __ cmpw($dst$$Register, 0xff);\n-    __ csetw($dst$$Register, Assembler::EQ);\n+    __ umov(rscratch1, $tmp$$FloatRegister, __ B, 0);\n+    __ cmpw(rscratch1, 0xff);\n@@ -5924,1 +5931,1 @@\n-instruct vtest_alltrue_sve(iRegINoSp dst, pReg src1, pReg src2, pReg ptmp, rFlagsReg cr) %{\n+instruct vtest_alltrue_sve(rFlagsReg cr, pReg src1, pReg src2, pReg ptmp) %{\n@@ -5927,3 +5934,3 @@\n-  match(Set dst (VectorTest src1 src2));\n-  effect(TEMP ptmp, KILL cr);\n-  format %{ \"vtest_alltrue_sve $dst, $src1, $src2\\t# KILL $ptmp, cr\" %}\n+  match(Set cr (VectorTest src1 src2));\n+  effect(TEMP ptmp);\n+  format %{ \"vtest_alltrue_sve $src1, $src2\\t# KILL $ptmp\" %}\n@@ -5932,1 +5939,0 @@\n-    __ csetw($dst$$Register, Assembler::EQ);\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64_vector.ad","additions":50,"deletions":44,"binary":false,"changes":94,"status":"modified"},{"patch":"@@ -127,0 +127,3 @@\n+          \/\/ The vector implementation of Op_AddReductionVD\/F is for the Vector API only.\n+          \/\/ It is not suitable for auto-vectorization because it does not add the elements\n+          \/\/ in the same order as sequential code, and FP addition is non-associative.\n@@ -1811,0 +1814,14 @@\n+\/\/ Floating-point addition is not associative, so the rules for AddReductionVF\n+\/\/ on NEON can't be used to auto-vectorize floating-point reduce-add.\n+\/\/ Currently, on NEON, AddReductionVF is only generated by Vector API.\n+instruct reduce_add2F_neon(vRegF dst, vRegF fsrc, vReg vsrc) %{\n+  predicate(UseSVE == 0 && Matcher::vector_length(n->in(2)) == 2);\n+  match(Set dst (AddReductionVF fsrc vsrc));\n+  effect(TEMP_DEF dst);\n+  format %{ \"reduce_add2F_neon $dst, $fsrc, $vsrc\" %}\n+  ins_encode %{\n+    __ faddp($dst$$FloatRegister, $vsrc$$FloatRegister, __ S);\n+    __ fadds($dst$$FloatRegister, $dst$$FloatRegister, $fsrc$$FloatRegister);\n+  %}\n+  ins_pipe(pipe_slow);\n+%}\n@@ -1812,2 +1829,2 @@\n-instruct reduce_addF_neon(vRegF dst, vRegF fsrc, vReg vsrc, vReg tmp) %{\n-  predicate(UseSVE == 0);\n+instruct reduce_add4F_neon(vRegF dst, vRegF fsrc, vReg vsrc, vReg tmp) %{\n+  predicate(UseSVE == 0 && Matcher::vector_length(n->in(2)) == 4);\n@@ -1816,1 +1833,1 @@\n-  format %{ \"reduce_addF_neon $dst, $fsrc, $vsrc\\t# KILL $tmp\" %}\n+  format %{ \"reduce_add4F_neon $dst, $fsrc, $vsrc\\t# KILL $tmp\" %}\n@@ -1818,10 +1835,3 @@\n-    uint length_in_bytes = Matcher::vector_length_in_bytes(this, $vsrc);\n-    __ fadds($dst$$FloatRegister, $fsrc$$FloatRegister, $vsrc$$FloatRegister);\n-    __ ins($tmp$$FloatRegister, __ S, $vsrc$$FloatRegister, 0, 1);\n-    __ fadds($dst$$FloatRegister, $dst$$FloatRegister, $tmp$$FloatRegister);\n-    if (length_in_bytes == 16) {\n-      __ ins($tmp$$FloatRegister, __ S, $vsrc$$FloatRegister, 0, 2);\n-      __ fadds($dst$$FloatRegister, $dst$$FloatRegister, $tmp$$FloatRegister);\n-      __ ins($tmp$$FloatRegister, __ S, $vsrc$$FloatRegister, 0, 3);\n-      __ fadds($dst$$FloatRegister, $dst$$FloatRegister, $tmp$$FloatRegister);\n-    }\n+    __ faddp($tmp$$FloatRegister, __ T4S, $vsrc$$FloatRegister, $vsrc$$FloatRegister);\n+    __ faddp($dst$$FloatRegister, $tmp$$FloatRegister, __ S);\n+    __ fadds($dst$$FloatRegister, $dst$$FloatRegister, $fsrc$$FloatRegister);\n@@ -1850,2 +1860,4 @@\n-\n-instruct reduce_addD_neon(vRegD dst, vRegD dsrc, vReg vsrc, vReg tmp) %{\n+\/\/ Floating-point addition is not associative, so the rule for AddReductionVD\n+\/\/ on NEON can't be used to auto-vectorize floating-point reduce-add.\n+\/\/ Currently, on NEON, AddReductionVD is only generated by Vector API.\n+instruct reduce_addD_neon(vRegD dst, vRegD dsrc, vReg vsrc) %{\n@@ -1854,2 +1866,2 @@\n-  effect(TEMP_DEF dst, TEMP tmp);\n-  format %{ \"reduce_addD_neon $dst, $dsrc, $vsrc\\t# 2D. KILL $tmp\" %}\n+  effect(TEMP_DEF dst);\n+  format %{ \"reduce_addD_neon $dst, $dsrc, $vsrc\\t# 2D\" %}\n@@ -1857,3 +1869,2 @@\n-    __ faddd($dst$$FloatRegister, $dsrc$$FloatRegister, $vsrc$$FloatRegister);\n-    __ ins($tmp$$FloatRegister, __ D, $vsrc$$FloatRegister, 0, 1);\n-    __ faddd($dst$$FloatRegister, $dst$$FloatRegister, $tmp$$FloatRegister);\n+    __ faddp($dst$$FloatRegister, $vsrc$$FloatRegister, __ D);\n+    __ faddd($dst$$FloatRegister, $dst$$FloatRegister, $dsrc$$FloatRegister);\n@@ -4244,1 +4255,1 @@\n-instruct vtest_anytrue_neon(iRegINoSp dst, vReg src1, vReg src2, vReg tmp, rFlagsReg cr) %{\n+instruct vtest_anytrue_neon(rFlagsReg cr, vReg src1, vReg src2, vReg tmp) %{\n@@ -4247,3 +4258,3 @@\n-  match(Set dst (VectorTest src1 src2 ));\n-  effect(TEMP tmp, KILL cr);\n-  format %{ \"vtest_anytrue_neon $dst, $src1\\t# KILL $tmp, cr\" %}\n+  match(Set cr (VectorTest src1 src2));\n+  effect(TEMP tmp);\n+  format %{ \"vtest_anytrue_neon $src1\\t# KILL $tmp\" %}\n@@ -4255,3 +4266,2 @@\n-    __ umov($dst$$Register, $tmp$$FloatRegister, __ B, 0);\n-    __ cmpw($dst$$Register, zr);\n-    __ csetw($dst$$Register, Assembler::NE);\n+    __ umov(rscratch1, $tmp$$FloatRegister, __ B, 0);\n+    __ cmpw(rscratch1, zr);\n@@ -4262,1 +4272,1 @@\n-instruct vtest_anytrue_sve(iRegINoSp dst, pReg src1, pReg src2, rFlagsReg cr) %{\n+instruct vtest_anytrue_sve(rFlagsReg cr, pReg src1, pReg src2) %{\n@@ -4265,3 +4275,2 @@\n-  match(Set dst (VectorTest src1 src2));\n-  effect(KILL cr);\n-  format %{ \"vtest_anytrue_sve $dst, $src1\\t# KILL cr\" %}\n+  match(Set cr (VectorTest src1 src2));\n+  format %{ \"vtest_anytrue_sve $src1\" %}\n@@ -4271,1 +4280,0 @@\n-    __ csetw($dst$$Register, Assembler::NE);\n@@ -4278,1 +4286,1 @@\n-instruct vtest_alltrue_neon(iRegINoSp dst, vReg src1, vReg src2, vReg tmp, rFlagsReg cr) %{\n+instruct vtest_alltrue_neon(rFlagsReg cr, vReg src1, vReg src2, vReg tmp) %{\n@@ -4281,3 +4289,3 @@\n-  match(Set dst (VectorTest src1 src2));\n-  effect(TEMP tmp, KILL cr);\n-  format %{ \"vtest_alltrue_neon $dst, $src1\\t# KILL $tmp, cr\" %}\n+  match(Set cr (VectorTest src1 src2));\n+  effect(TEMP tmp);\n+  format %{ \"vtest_alltrue_neon $src1\\t# KILL $tmp\" %}\n@@ -4289,3 +4297,2 @@\n-    __ umov($dst$$Register, $tmp$$FloatRegister, __ B, 0);\n-    __ cmpw($dst$$Register, 0xff);\n-    __ csetw($dst$$Register, Assembler::EQ);\n+    __ umov(rscratch1, $tmp$$FloatRegister, __ B, 0);\n+    __ cmpw(rscratch1, 0xff);\n@@ -4296,1 +4303,1 @@\n-instruct vtest_alltrue_sve(iRegINoSp dst, pReg src1, pReg src2, pReg ptmp, rFlagsReg cr) %{\n+instruct vtest_alltrue_sve(rFlagsReg cr, pReg src1, pReg src2, pReg ptmp) %{\n@@ -4299,3 +4306,3 @@\n-  match(Set dst (VectorTest src1 src2));\n-  effect(TEMP ptmp, KILL cr);\n-  format %{ \"vtest_alltrue_sve $dst, $src1, $src2\\t# KILL $ptmp, cr\" %}\n+  match(Set cr (VectorTest src1 src2));\n+  effect(TEMP ptmp);\n+  format %{ \"vtest_alltrue_sve $src1, $src2\\t# KILL $ptmp\" %}\n@@ -4304,1 +4311,0 @@\n-    __ csetw($dst$$Register, Assembler::EQ);\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64_vector_ad.m4","additions":50,"deletions":44,"binary":false,"changes":94,"status":"modified"},{"patch":"@@ -2719,0 +2719,1 @@\n+  INSN(faddp, 1, 0, 0b110101);\n","filename":"src\/hotspot\/cpu\/aarch64\/assembler_aarch64.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -81,0 +81,4 @@\n+enum {\n+  pd_two_operand_lir_form = false\n+};\n+\n","filename":"src\/hotspot\/cpu\/aarch64\/c1_Defs_aarch64.hpp","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -63,1 +63,0 @@\n-define_pd_global(bool, TwoOperandLIRForm,            false );\n","filename":"src\/hotspot\/cpu\/aarch64\/c1_globals_aarch64.hpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -0,0 +1,66 @@\n+\/*\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+#include \"precompiled.hpp\"\n+#include \"opto\/c2_MacroAssembler.hpp\"\n+#include \"opto\/c2_CodeStubs.hpp\"\n+#include \"runtime\/sharedRuntime.hpp\"\n+#include \"runtime\/stubRoutines.hpp\"\n+\n+#define __ masm.\n+\n+int C2SafepointPollStub::max_size() const {\n+  return 20;\n+}\n+\n+void C2SafepointPollStub::emit(C2_MacroAssembler& masm) {\n+  assert(SharedRuntime::polling_page_return_handler_blob() != NULL,\n+         \"polling page return stub not created yet\");\n+  address stub = SharedRuntime::polling_page_return_handler_blob()->entry_point();\n+\n+  RuntimeAddress callback_addr(stub);\n+\n+  __ bind(entry());\n+  InternalAddress safepoint_pc(masm.pc() - masm.offset() + _safepoint_offset);\n+  __ adr(rscratch1, safepoint_pc);\n+  __ str(rscratch1, Address(rthread, JavaThread::saved_exception_pc_offset()));\n+  __ far_jump(callback_addr);\n+}\n+\n+int C2EntryBarrierStub::max_size() const {\n+  return 24;\n+}\n+\n+void C2EntryBarrierStub::emit(C2_MacroAssembler& masm) {\n+  __ bind(entry());\n+  __ movptr(rscratch1, (uintptr_t) StubRoutines::aarch64::method_entry_barrier());\n+  __ blr(rscratch1);\n+  __ b(continuation());\n+\n+  __ bind(guard());\n+  __ relocate(entry_guard_Relocation::spec());\n+  __ emit_int32(0);   \/\/ nmethod guard value\n+}\n+\n+#undef __\n","filename":"src\/hotspot\/cpu\/aarch64\/c2_CodeStubs_aarch64.cpp","additions":66,"deletions":0,"binary":false,"changes":66,"status":"added"},{"patch":"@@ -48,15 +48,0 @@\n-void C2_MacroAssembler::emit_entry_barrier_stub(C2EntryBarrierStub* stub) {\n-  bind(stub->slow_path());\n-  movptr(rscratch1, (uintptr_t) StubRoutines::aarch64::method_entry_barrier());\n-  blr(rscratch1);\n-  b(stub->continuation());\n-\n-  bind(stub->guard());\n-  relocate(entry_guard_Relocation::spec());\n-  emit_int32(0);   \/\/ nmethod guard value\n-}\n-\n-int C2_MacroAssembler::entry_barrier_stub_size() {\n-  return 4 * 6;\n-}\n-\n","filename":"src\/hotspot\/cpu\/aarch64\/c2_MacroAssembler_aarch64.cpp","additions":0,"deletions":15,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -1,46 +0,0 @@\n-\/*\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-#include \"precompiled.hpp\"\n-#include \"asm\/macroAssembler.hpp\"\n-#include \"opto\/compile.hpp\"\n-#include \"opto\/node.hpp\"\n-#include \"opto\/output.hpp\"\n-#include \"runtime\/sharedRuntime.hpp\"\n-\n-#define __ masm.\n-void C2SafepointPollStubTable::emit_stub_impl(MacroAssembler& masm, C2SafepointPollStub* entry) const {\n-  assert(SharedRuntime::polling_page_return_handler_blob() != NULL,\n-         \"polling page return stub not created yet\");\n-  address stub = SharedRuntime::polling_page_return_handler_blob()->entry_point();\n-\n-  RuntimeAddress callback_addr(stub);\n-\n-  __ bind(entry->_stub_label);\n-  InternalAddress safepoint_pc(masm.pc() - masm.offset() + entry->_safepoint_offset);\n-  __ adr(rscratch1, safepoint_pc);\n-  __ str(rscratch1, Address(rthread, JavaThread::saved_exception_pc_offset()));\n-  __ far_jump(callback_addr);\n-}\n-#undef __\n","filename":"src\/hotspot\/cpu\/aarch64\/c2_safepointPollStubTable_aarch64.cpp","additions":0,"deletions":46,"binary":false,"changes":46,"status":"deleted"},{"patch":"@@ -737,1 +737,1 @@\n-    ::new (reg_map) RegisterMap((JavaThread*)thread,\n+    ::new (reg_map) RegisterMap(reinterpret_cast<JavaThread*>(thread),\n@@ -742,1 +742,1 @@\n-    *reg_map = RegisterMap((JavaThread*)thread,\n+    *reg_map = RegisterMap(reinterpret_cast<JavaThread*>(thread),\n","filename":"src\/hotspot\/cpu\/aarch64\/frame_aarch64.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -166,0 +166,10 @@\n+  \/\/ An all-set mask is used for the alltrue vector test with SVE\n+  static constexpr bool vectortest_needs_second_argument(bool is_alltrue, bool is_predicate) {\n+    return is_predicate && is_alltrue;\n+  }\n+\n+  \/\/ BoolTest mask for vector test intrinsics\n+  static constexpr BoolTest::mask vectortest_mask(bool is_alltrue, bool is_predicate, int vlen) {\n+    return is_alltrue ? BoolTest::eq : BoolTest::ne;\n+  }\n+\n","filename":"src\/hotspot\/cpu\/aarch64\/matcher_aarch64.hpp","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -225,2 +225,2 @@\n-  sprintf(buf, \"0x%02x:0x%x:0x%03x:%d\", _cpu, _variant, _model, _revision);\n-  if (_model2) sprintf(buf+strlen(buf), \"(0x%03x)\", _model2);\n+  int buf_used_len = os::snprintf_checked(buf, sizeof(buf), \"0x%02x:0x%x:0x%03x:%d\", _cpu, _variant, _model, _revision);\n+  if (_model2) os::snprintf_checked(buf + buf_used_len, sizeof(buf) - buf_used_len, \"(0x%03x)\", _model2);\n","filename":"src\/hotspot\/cpu\/aarch64\/vm_version_aarch64.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -77,0 +77,4 @@\n+enum {\n+  pd_two_operand_lir_form = false\n+};\n+\n","filename":"src\/hotspot\/cpu\/arm\/c1_Defs_arm.hpp","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -64,1 +64,0 @@\n-define_pd_global(bool, TwoOperandLIRForm,            false);\n","filename":"src\/hotspot\/cpu\/arm\/c1_globals_arm.hpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -158,0 +158,10 @@\n+  \/\/ Some architecture needs a helper to check for alltrue vector\n+  static constexpr bool vectortest_needs_second_argument(bool is_alltrue, bool is_predicate) {\n+    return false;\n+  }\n+\n+  \/\/ BoolTest mask for vector test intrinsics\n+  static constexpr BoolTest::mask vectortest_mask(bool is_alltrue, bool is_predicate, int vlen) {\n+    return BoolTest::illegal;\n+  }\n+\n","filename":"src\/hotspot\/cpu\/arm\/matcher_arm.hpp","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -98,1 +98,1 @@\n-  AddressLiteral() : _address(NULL), _rspec(NULL) {}\n+  AddressLiteral() : _address(NULL), _rspec() {}\n","filename":"src\/hotspot\/cpu\/ppc\/assembler_ppc.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -76,0 +76,4 @@\n+enum {\n+  pd_two_operand_lir_form = false\n+};\n+\n","filename":"src\/hotspot\/cpu\/ppc\/c1_Defs_ppc.hpp","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -64,1 +64,0 @@\n-define_pd_global(bool,     TwoOperandLIRForm,            false);\n","filename":"src\/hotspot\/cpu\/ppc\/c1_globals_ppc.hpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -0,0 +1,60 @@\n+\/*\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2022, SAP SE. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+#include \"precompiled.hpp\"\n+#include \"opto\/c2_MacroAssembler.hpp\"\n+#include \"opto\/c2_CodeStubs.hpp\"\n+#include \"runtime\/sharedRuntime.hpp\"\n+\n+#define __ masm.\n+\n+int C2SafepointPollStub::max_size() const {\n+  return 56;\n+}\n+\n+void C2SafepointPollStub::emit(C2_MacroAssembler& masm) {\n+  assert(SharedRuntime::polling_page_return_handler_blob() != NULL,\n+         \"polling page return stub not created yet\");\n+  address stub = SharedRuntime::polling_page_return_handler_blob()->entry_point();\n+\n+  __ bind(entry());\n+  \/\/ Using pc relative address computation.\n+  {\n+    Label next_pc;\n+    __ bl(next_pc);\n+    __ bind(next_pc);\n+  }\n+  int current_offset = __ offset();\n+  \/\/ Code size should not depend on offset: see _stub_size computation in output.cpp\n+  __ load_const32(R12, _safepoint_offset - current_offset);\n+  __ mflr(R0);\n+  __ add(R12, R12, R0);\n+  __ std(R12, in_bytes(JavaThread::saved_exception_pc_offset()), R16_thread);\n+\n+  __ add_const_optimized(R0, R29_TOC, MacroAssembler::offset_to_global_toc(stub));\n+  __ mtctr(R0);\n+  __ bctr();\n+}\n+#undef __\n","filename":"src\/hotspot\/cpu\/ppc\/c2_CodeStubs_ppc.cpp","additions":60,"deletions":0,"binary":false,"changes":60,"status":"added"},{"patch":"@@ -1,57 +0,0 @@\n-\/*\n- * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n- * Copyright (c) 2021 SAP SE. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-#include \"precompiled.hpp\"\n-#include \"macroAssembler_ppc.inline.hpp\"\n-#include \"opto\/compile.hpp\"\n-#include \"opto\/node.hpp\"\n-#include \"opto\/output.hpp\"\n-#include \"runtime\/sharedRuntime.hpp\"\n-\n-#define __ masm.\n-void C2SafepointPollStubTable::emit_stub_impl(MacroAssembler& masm, C2SafepointPollStub* entry) const {\n-  assert(SharedRuntime::polling_page_return_handler_blob() != NULL,\n-         \"polling page return stub not created yet\");\n-  address stub = SharedRuntime::polling_page_return_handler_blob()->entry_point();\n-\n-  __ bind(entry->_stub_label);\n-  \/\/ Using pc relative address computation.\n-  {\n-    Label next_pc;\n-    __ bl(next_pc);\n-    __ bind(next_pc);\n-  }\n-  int current_offset = __ offset();\n-  \/\/ Code size should not depend on offset: see _stub_size computation in output.cpp\n-  __ load_const32(R12, entry->_safepoint_offset - current_offset);\n-  __ mflr(R0);\n-  __ add(R12, R12, R0);\n-  __ std(R12, in_bytes(JavaThread::saved_exception_pc_offset()), R16_thread);\n-\n-  __ add_const_optimized(R0, R29_TOC, MacroAssembler::offset_to_global_toc(stub));\n-  __ mtctr(R0);\n-  __ bctr();\n-}\n-#undef __\n","filename":"src\/hotspot\/cpu\/ppc\/c2_safepointPollStubTable_ppc.cpp","additions":0,"deletions":57,"binary":false,"changes":57,"status":"deleted"},{"patch":"@@ -167,0 +167,10 @@\n+  \/\/ Some architecture needs a helper to check for alltrue vector\n+  static constexpr bool vectortest_needs_second_argument(bool is_alltrue, bool is_predicate) {\n+    return false;\n+  }\n+\n+  \/\/ BoolTest mask for vector test intrinsics\n+  static constexpr BoolTest::mask vectortest_mask(bool is_alltrue, bool is_predicate, int vlen) {\n+    return BoolTest::illegal;\n+  }\n+\n","filename":"src\/hotspot\/cpu\/ppc\/matcher_ppc.hpp","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -985,0 +985,1 @@\n+#include \"opto\/c2_CodeStubs.hpp\"\n@@ -1619,1 +1620,3 @@\n-      code_stub = &C->output()->safepoint_poll_table()->add_safepoint(__ offset());\n+      C2SafepointPollStub* stub = new (C->comp_arena()) C2SafepointPollStub(__ offset());\n+      C->output()->add_stub(stub);\n+      code_stub = &stub->entry();\n","filename":"src\/hotspot\/cpu\/ppc\/ppc.ad","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -43,2 +43,14 @@\n-Address::Address(address target, relocInfo::relocType rtype) : _base(noreg), _offset(0), _mode(literal) {\n-  _target = target;\n+#ifdef ASSERT\n+\n+void Address::assert_is_literal() const {\n+  assert(_mode == literal, \"addressing mode is non-literal: %d\", _mode);\n+}\n+\n+void Address::assert_is_nonliteral() const {\n+  assert(_mode != literal, \"unexpected literal addressing mode\");\n+  assert(_mode != no_mode, \"unexpected no_mode addressing mode\");\n+}\n+\n+#endif \/\/ ASSERT\n+\n+static RelocationHolder address_relocation(address target, relocInfo::relocType rtype) {\n@@ -52,1 +64,1 @@\n-      break;\n+      return RelocationHolder::none;\n@@ -54,2 +66,1 @@\n-      _rspec = external_word_Relocation::spec(target);\n-      break;\n+      return external_word_Relocation::spec(target);\n@@ -57,2 +68,1 @@\n-      _rspec = internal_word_Relocation::spec(target);\n-      break;\n+      return internal_word_Relocation::spec(target);\n@@ -60,2 +70,1 @@\n-      _rspec = opt_virtual_call_Relocation::spec();\n-      break;\n+      return opt_virtual_call_Relocation::spec();\n@@ -63,2 +72,1 @@\n-      _rspec = static_call_Relocation::spec();\n-      break;\n+      return static_call_Relocation::spec();\n@@ -66,2 +74,1 @@\n-      _rspec = runtime_call_Relocation::spec();\n-      break;\n+      return runtime_call_Relocation::spec();\n@@ -70,2 +77,1 @@\n-      _rspec = Relocation::spec_simple(rtype);\n-      break;\n+      return Relocation::spec_simple(rtype);\n@@ -73,2 +79,1 @@\n-      _rspec = RelocationHolder::none;\n-      break;\n+      return RelocationHolder::none;\n@@ -77,0 +82,1 @@\n+      return RelocationHolder::none;\n@@ -79,0 +85,5 @@\n+\n+Address::Address(address target, relocInfo::relocType rtype) :\n+  _mode(literal),\n+  _literal(target, address_relocation(target, rtype))\n+{}\n","filename":"src\/hotspot\/cpu\/riscv\/assembler_riscv.cpp","additions":28,"deletions":17,"binary":false,"changes":45,"status":"modified"},{"patch":"@@ -33,0 +33,4 @@\n+#include \"utilities\/debug.hpp\"\n+#include \"utilities\/globalDefinitions.hpp\"\n+#include \"utilities\/macros.hpp\"\n+#include <type_traits>\n@@ -156,1 +160,1 @@\n-  enum mode { no_mode, base_plus_offset, pcrel, literal };\n+  enum mode { no_mode, base_plus_offset, literal };\n@@ -159,4 +163,15 @@\n-  Register _base;\n-  Register _index;\n-  int64_t _offset;\n-  enum mode _mode;\n+  struct Nonliteral {\n+    Nonliteral(Register base, Register index, int64_t offset)\n+      : _base(base), _index(index), _offset(offset) {}\n+    Register _base;\n+    Register _index;\n+    int64_t _offset;\n+  };\n+\n+  struct Literal {\n+    Literal(address target, const RelocationHolder& rspec)\n+      : _target(target), _rspec(rspec) {}\n+    \/\/ If the target is far we'll need to load the ea of this to a\n+    \/\/ register to reach it. Otherwise if near we can do PC-relative\n+    \/\/ addressing.\n+    address _target;\n@@ -164,1 +179,2 @@\n-  RelocationHolder _rspec;\n+    RelocationHolder _rspec;\n+  };\n@@ -166,4 +182,24 @@\n-  \/\/ If the target is far we'll need to load the ea of this to a\n-  \/\/ register to reach it. Otherwise if near we can do PC-relative\n-  \/\/ addressing.\n-  address          _target;\n+  void assert_is_nonliteral() const NOT_DEBUG_RETURN;\n+  void assert_is_literal() const NOT_DEBUG_RETURN;\n+\n+  \/\/ Discriminated union, based on _mode.\n+  \/\/ - no_mode: uses dummy _nonliteral, for ease of copying.\n+  \/\/ - literal: only _literal is used.\n+  \/\/ - others: only _nonliteral is used.\n+  enum mode _mode;\n+  union {\n+    Nonliteral _nonliteral;\n+    Literal _literal;\n+  };\n+\n+  \/\/ Helper for copy constructor and assignment operator.\n+  \/\/ Copy mode-relevant part of a into this.\n+  void copy_data(const Address& a) {\n+    assert(_mode == a._mode, \"precondition\");\n+    if (_mode == literal) {\n+      new (&_literal) Literal(a._literal);\n+    } else {\n+      \/\/ non-literal mode or no_mode.\n+      new (&_nonliteral) Nonliteral(a._nonliteral);\n+    }\n+  }\n@@ -172,2 +208,5 @@\n-  Address()\n-    : _base(noreg), _index(noreg), _offset(0), _mode(no_mode), _target(NULL) { }\n+  \/\/ no_mode initializes _nonliteral for ease of copying.\n+  Address() :\n+    _mode(no_mode),\n+    _nonliteral(noreg, noreg, 0)\n+  {}\n@@ -175,2 +214,4 @@\n-  Address(Register r)\n-    : _base(r), _index(noreg), _offset(0), _mode(base_plus_offset), _target(NULL) { }\n+  Address(Register r) :\n+    _mode(base_plus_offset),\n+    _nonliteral(r, noreg, 0)\n+  {}\n@@ -179,2 +220,4 @@\n-  Address(Register r, T o)\n-    : _base(r), _index(noreg), _offset(o), _mode(base_plus_offset), _target(NULL) {}\n+  Address(Register r, T o) :\n+    _mode(base_plus_offset),\n+    _nonliteral(r, noreg, o)\n+  {}\n@@ -182,2 +225,1 @@\n-  Address(Register r, ByteSize disp)\n-    : Address(r, in_bytes(disp)) {}\n+  Address(Register r, ByteSize disp) : Address(r, in_bytes(disp)) {}\n@@ -185,7 +227,4 @@\n-  Address(address target, RelocationHolder const& rspec)\n-    : _base(noreg),\n-      _index(noreg),\n-      _offset(0),\n-      _mode(literal),\n-      _rspec(rspec),\n-      _target(target) { }\n+  Address(address target, const RelocationHolder& rspec) :\n+    _mode(literal),\n+    _literal(target, rspec)\n+  {}\n@@ -195,0 +234,16 @@\n+  Address(const Address& a) : _mode(a._mode) { copy_data(a); }\n+\n+  \/\/ Verify the value is trivially destructible regardless of mode, so our\n+  \/\/ destructor can also be trivial, and so our assignment operator doesn't\n+  \/\/ need to destruct the old value before copying over it.\n+  static_assert(std::is_trivially_destructible<Literal>::value, \"must be\");\n+  static_assert(std::is_trivially_destructible<Nonliteral>::value, \"must be\");\n+\n+  Address& operator=(const Address& a) {\n+    _mode = a._mode;\n+    copy_data(a);\n+    return *this;\n+  }\n+\n+  ~Address() = default;\n+\n@@ -196,2 +251,2 @@\n-    guarantee((_mode == base_plus_offset | _mode == pcrel | _mode == literal), \"wrong mode\");\n-    return _base;\n+    assert_is_nonliteral();\n+    return _nonliteral._base;\n@@ -199,0 +254,1 @@\n+\n@@ -200,1 +256,2 @@\n-    return _offset;\n+    assert_is_nonliteral();\n+    return _nonliteral._offset;\n@@ -202,0 +259,1 @@\n+\n@@ -203,1 +261,2 @@\n-    return _index;\n+    assert_is_nonliteral();\n+    return _nonliteral._index;\n@@ -205,0 +264,1 @@\n+\n@@ -209,3 +269,13 @@\n-  bool uses(Register reg) const { return _base == reg; }\n-  const address target() const { return _target; }\n-  const RelocationHolder& rspec() const { return _rspec; }\n+  bool uses(Register reg) const {\n+    return base() == reg;\n+  }\n+\n+  const address target() const {\n+    assert_is_literal();\n+    return _literal._target;\n+  }\n+\n+  const RelocationHolder& rspec() const {\n+    assert_is_literal();\n+    return _literal._rspec;\n+  }\n","filename":"src\/hotspot\/cpu\/riscv\/assembler_riscv.hpp","additions":102,"deletions":32,"binary":false,"changes":134,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -84,0 +84,4 @@\n+enum {\n+  pd_two_operand_lir_form = false\n+};\n+\n","filename":"src\/hotspot\/cpu\/riscv\/c1_Defs_riscv.hpp","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -63,1 +63,0 @@\n-define_pd_global(bool, TwoOperandLIRForm,            false);\n","filename":"src\/hotspot\/cpu\/riscv\/c1_globals_riscv.hpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -0,0 +1,75 @@\n+\/*\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Huawei Technologies Co., Ltd. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+#include \"precompiled.hpp\"\n+#include \"opto\/c2_CodeStubs.hpp\"\n+#include \"opto\/c2_MacroAssembler.hpp\"\n+#include \"runtime\/sharedRuntime.hpp\"\n+#include \"runtime\/stubRoutines.hpp\"\n+\n+#define __ masm.\n+\n+int C2SafepointPollStub::max_size() const {\n+  return 13 * 4;\n+}\n+\n+void C2SafepointPollStub::emit(C2_MacroAssembler& masm) {\n+  assert(SharedRuntime::polling_page_return_handler_blob() != NULL,\n+         \"polling page return stub not created yet\");\n+  address stub = SharedRuntime::polling_page_return_handler_blob()->entry_point();\n+  RuntimeAddress callback_addr(stub);\n+\n+  __ bind(entry());\n+  InternalAddress safepoint_pc(__ pc() - __ offset() + _safepoint_offset);\n+  __ relocate(safepoint_pc.rspec(), [&] {\n+    int32_t offset;\n+    __ la_patchable(t0, safepoint_pc.target(), offset);\n+    __ addi(t0, t0, offset);\n+  });\n+  __ sd(t0, Address(xthread, JavaThread::saved_exception_pc_offset()));\n+  __ far_jump(callback_addr);\n+}\n+\n+int C2EntryBarrierStub::max_size() const {\n+  \/\/ 4 bytes for alignment\n+  return 8 * 4 + 4;\n+}\n+\n+void C2EntryBarrierStub::emit(C2_MacroAssembler& masm) {\n+  __ bind(entry());\n+\n+  int32_t offset = 0;\n+  __ movptr(t0, StubRoutines::riscv::method_entry_barrier(), offset);\n+  __ jalr(ra, t0, offset);\n+  __ j(continuation());\n+\n+  \/\/ make guard value 4-byte aligned so that it can be accessed by atomic instructions on RISC-V\n+  __ align(4);\n+  __ bind(guard());\n+  __ relocate(entry_guard_Relocation::spec());\n+  __ emit_int32(0);  \/\/ nmethod guard value\n+}\n+\n+#undef __\n","filename":"src\/hotspot\/cpu\/riscv\/c2_CodeStubs_riscv.cpp","additions":75,"deletions":0,"binary":false,"changes":75,"status":"added"},{"patch":"@@ -246,31 +246,0 @@\n-void C2_MacroAssembler::emit_entry_barrier_stub(C2EntryBarrierStub* stub) {\n-  IncompressibleRegion ir(this);  \/\/ Fixed length: see C2_MacroAssembler::entry_barrier_stub_size()\n-\n-  \/\/ make guard value 4-byte aligned so that it can be accessed by atomic instructions on riscv\n-  int alignment_bytes = align(4);\n-\n-  bind(stub->slow_path());\n-\n-  int32_t offset = 0;\n-  movptr(t0, StubRoutines::riscv::method_entry_barrier(), offset);\n-  jalr(ra, t0, offset);\n-  j(stub->continuation());\n-\n-  bind(stub->guard());\n-  relocate(entry_guard_Relocation::spec());\n-  assert_alignment(pc());\n-  emit_int32(0);  \/\/ nmethod guard value\n-  \/\/ make sure the stub with a fixed code size\n-  if (alignment_bytes == 2) {\n-    assert(UseRVC, \"bad alignment\");\n-    c_nop();\n-  } else {\n-    assert(alignment_bytes == 0, \"bad alignment\");\n-    nop();\n-  }\n-}\n-\n-int C2_MacroAssembler::entry_barrier_stub_size() {\n-  return 8 * 4 + 4; \/\/ 4 bytes for alignment margin\n-}\n-\n@@ -1729,1 +1698,1 @@\n-}\n\\ No newline at end of file\n+}\n","filename":"src\/hotspot\/cpu\/riscv\/c2_MacroAssembler_riscv.cpp","additions":1,"deletions":32,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -1,50 +0,0 @@\n-\/*\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n- * Copyright (c) 2020, 2022, Huawei Technologies Co., Ltd. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-#include \"precompiled.hpp\"\n-#include \"asm\/macroAssembler.hpp\"\n-#include \"opto\/compile.hpp\"\n-#include \"opto\/node.hpp\"\n-#include \"opto\/output.hpp\"\n-#include \"runtime\/sharedRuntime.hpp\"\n-\n-#define __ masm.\n-void C2SafepointPollStubTable::emit_stub_impl(MacroAssembler& masm, C2SafepointPollStub* entry) const {\n-  assert(SharedRuntime::polling_page_return_handler_blob() != NULL,\n-         \"polling page return stub not created yet\");\n-  address stub = SharedRuntime::polling_page_return_handler_blob()->entry_point();\n-  RuntimeAddress callback_addr(stub);\n-\n-  __ bind(entry->_stub_label);\n-  InternalAddress safepoint_pc(__ pc() - __ offset() + entry->_safepoint_offset);\n-  __ relocate(safepoint_pc.rspec(), [&] {\n-    int32_t offset;\n-    __ la_patchable(t0, safepoint_pc.target(), offset);\n-    __ addi(t0, t0, offset);\n-  });\n-  __ sd(t0, Address(xthread, JavaThread::saved_exception_pc_offset()));\n-  __ far_jump(callback_addr);\n-}\n-#undef __\n","filename":"src\/hotspot\/cpu\/riscv\/c2_safepointPollStubTable_riscv.cpp","additions":0,"deletions":50,"binary":false,"changes":50,"status":"deleted"},{"patch":"@@ -164,0 +164,10 @@\n+  \/\/ Some architecture needs a helper to check for alltrue vector\n+  static constexpr bool vectortest_needs_second_argument(bool is_alltrue, bool is_predicate) {\n+    return false;\n+  }\n+\n+  \/\/ BoolTest mask for vector test intrinsics\n+  static constexpr BoolTest::mask vectortest_mask(bool is_alltrue, bool is_predicate, int vlen) {\n+    return BoolTest::illegal;\n+  }\n+\n","filename":"src\/hotspot\/cpu\/riscv\/matcher_riscv.hpp","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -1364,2 +1364,3 @@\n-        C2EntryBarrierStub* stub = Compile::current()->output()->entry_barrier_table()->add_entry_barrier();\n-        slow_path = &stub->slow_path();\n+        C2EntryBarrierStub* stub = new (Compile::current()->comp_arena()) C2EntryBarrierStub();\n+        Compile::current()->output()->add_stub(stub);\n+        slow_path = &stub->entry();\n@@ -1446,1 +1447,3 @@\n-      code_stub = &C->output()->safepoint_poll_table()->add_safepoint(__ offset());\n+      C2SafepointPollStub* stub = new (C->comp_arena()) C2SafepointPollStub(__ offset());\n+      C->output()->add_stub(stub);\n+      code_stub = &stub->entry();\n","filename":"src\/hotspot\/cpu\/riscv\/riscv.ad","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -298,1 +298,1 @@\n-  AddressLiteral() : _address(NULL), _rspec(NULL) {}\n+  AddressLiteral() : _address(NULL), _rspec() {}\n","filename":"src\/hotspot\/cpu\/s390\/assembler_s390.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -71,0 +71,4 @@\n+enum {\n+  pd_two_operand_lir_form = true\n+};\n+\n","filename":"src\/hotspot\/cpu\/s390\/c1_Defs_s390.hpp","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -64,1 +64,0 @@\n-define_pd_global(bool,     TwoOperandLIRForm,            true);\n","filename":"src\/hotspot\/cpu\/s390\/c1_globals_s390.hpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -156,0 +156,10 @@\n+  \/\/ Some architecture needs a helper to check for alltrue vector\n+  static constexpr bool vectortest_needs_second_argument(bool is_alltrue, bool is_predicate) {\n+    return false;\n+  }\n+\n+  \/\/ BoolTest mask for vector test intrinsics\n+  static constexpr BoolTest::mask vectortest_mask(bool is_alltrue, bool is_predicate, int vlen) {\n+    return BoolTest::illegal;\n+  }\n+\n","filename":"src\/hotspot\/cpu\/s390\/matcher_s390.hpp","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2498,1 +2498,1 @@\n-  emit_data(disp, rspec.reloc(), call32_operand);\n+  emit_data(disp, rspec, call32_operand);\n@@ -5450,0 +5450,7 @@\n+void Assembler::vtestps(XMMRegister dst, XMMRegister src, int vector_len) {\n+  assert(VM_Version::supports_avx(), \"\");\n+  InstructionAttr attributes(vector_len, \/* rex_w *\/ false, \/* legacy_mode *\/ true, \/* no_mask_reg *\/ true, \/* uses_vl *\/ false);\n+  int encode = vex_prefix_and_encode(dst->encoding(), 0, src->encoding(), VEX_SIMD_66, VEX_OPCODE_0F_38, &attributes);\n+  emit_int16(0x0E, (0xC0 | encode));\n+}\n+\n@@ -5451,2 +5458,11 @@\n-  assert(VM_Version::supports_avx512vlbw(), \"\");\n-  \/\/ Encoding: EVEX.NDS.XXX.66.0F.W0 DB \/r\n+  assert(vector_len == AVX_512bit ? VM_Version::supports_avx512bw() : VM_Version::supports_avx512vlbw(), \"\");\n+  \/\/ Encoding: EVEX.NDS.XXX.66.0F38.W0 DB \/r\n+  InstructionAttr attributes(vector_len, \/* vex_w *\/ false, \/* legacy_mode *\/ false, \/* no_mask_reg *\/ true, \/* uses_vl *\/ true);\n+  attributes.set_is_evex_instruction();\n+  int encode = vex_prefix_and_encode(dst->encoding(), nds->encoding(), src->encoding(), VEX_SIMD_66, VEX_OPCODE_0F_38, &attributes);\n+  emit_int16(0x26, (0xC0 | encode));\n+}\n+\n+void Assembler::evptestmd(KRegister dst, XMMRegister nds, XMMRegister src, int vector_len) {\n+  assert(vector_len == AVX_512bit ? VM_Version::supports_evex() : VM_Version::supports_avx512vl(), \"\");\n+  \/\/ Encoding: EVEX.NDS.XXX.66.0F38.W0 DB \/r\n@@ -5456,1 +5472,10 @@\n-  emit_int16((unsigned char)0x26, (0xC0 | encode));\n+  emit_int16(0x27, (0xC0 | encode));\n+}\n+\n+void Assembler::evptestnmd(KRegister dst, XMMRegister nds, XMMRegister src, int vector_len) {\n+  assert(vector_len == AVX_512bit ? VM_Version::supports_evex() : VM_Version::supports_avx512vl(), \"\");\n+  \/\/ Encoding: EVEX.NDS.XXX.F3.0F38.W0 DB \/r\n+  InstructionAttr attributes(vector_len, \/* vex_w *\/ false, \/* legacy_mode *\/ false, \/* no_mask_reg *\/ true, \/* uses_vl *\/ true);\n+  attributes.set_is_evex_instruction();\n+  int encode = vex_prefix_and_encode(dst->encoding(), nds->encoding(), src->encoding(), VEX_SIMD_F3, VEX_OPCODE_0F_38, &attributes);\n+  emit_int16(0x27, (0xC0 | encode));\n","filename":"src\/hotspot\/cpu\/x86\/assembler_x86.cpp","additions":29,"deletions":4,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -1976,0 +1976,2 @@\n+  void evptestmd(KRegister dst, XMMRegister nds, XMMRegister src, int vector_len);\n+  void evptestnmd(KRegister dst, XMMRegister nds, XMMRegister src, int vector_len);\n@@ -1979,0 +1981,1 @@\n+  void vtestps(XMMRegister dst, XMMRegister src, int vector_len);\n","filename":"src\/hotspot\/cpu\/x86\/assembler_x86.hpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -78,0 +78,4 @@\n+enum {\n+  pd_two_operand_lir_form = true\n+};\n+\n","filename":"src\/hotspot\/cpu\/x86\/c1_Defs_x86.hpp","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -62,1 +62,0 @@\n-define_pd_global(bool, TwoOperandLIRForm,              true );\n","filename":"src\/hotspot\/cpu\/x86\/c1_globals_x86.hpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -0,0 +1,75 @@\n+\/*\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+#include \"precompiled.hpp\"\n+#include \"opto\/c2_MacroAssembler.hpp\"\n+#include \"opto\/c2_CodeStubs.hpp\"\n+#include \"runtime\/sharedRuntime.hpp\"\n+#include \"runtime\/stubRoutines.hpp\"\n+\n+#define __ masm.\n+\n+int C2SafepointPollStub::max_size() const {\n+  return 33;\n+}\n+\n+void C2SafepointPollStub::emit(C2_MacroAssembler& masm) {\n+  assert(SharedRuntime::polling_page_return_handler_blob() != NULL,\n+         \"polling page return stub not created yet\");\n+  address stub = SharedRuntime::polling_page_return_handler_blob()->entry_point();\n+\n+  RuntimeAddress callback_addr(stub);\n+\n+  __ bind(entry());\n+  InternalAddress safepoint_pc(masm.pc() - masm.offset() + _safepoint_offset);\n+#ifdef _LP64\n+  __ lea(rscratch1, safepoint_pc);\n+  __ movptr(Address(r15_thread, JavaThread::saved_exception_pc_offset()), rscratch1);\n+#else\n+  const Register tmp1 = rcx;\n+  const Register tmp2 = rdx;\n+  __ push(tmp1);\n+  __ push(tmp2);\n+\n+  __ lea(tmp1, safepoint_pc);\n+  __ get_thread(tmp2);\n+  __ movptr(Address(tmp2, JavaThread::saved_exception_pc_offset()), tmp1);\n+\n+  __ pop(tmp2);\n+  __ pop(tmp1);\n+#endif\n+  __ jump(callback_addr);\n+}\n+\n+int C2EntryBarrierStub::max_size() const {\n+  return 10;\n+}\n+\n+void C2EntryBarrierStub::emit(C2_MacroAssembler& masm) {\n+  __ bind(entry());\n+  __ call(RuntimeAddress(StubRoutines::x86::method_entry_barrier()));\n+  __ jmp(continuation(), false \/* maybe_short *\/);\n+}\n+\n+#undef __\n","filename":"src\/hotspot\/cpu\/x86\/c2_CodeStubs_x86.cpp","additions":75,"deletions":0,"binary":false,"changes":75,"status":"added"},{"patch":"@@ -141,2 +141,3 @@\n-        C2EntryBarrierStub* stub = Compile::current()->output()->entry_barrier_table()->add_entry_barrier();\n-        slow_path = &stub->slow_path();\n+        C2EntryBarrierStub* stub = new (Compile::current()->comp_arena()) C2EntryBarrierStub();\n+        Compile::current()->output()->add_stub(stub);\n+        slow_path = &stub->entry();\n@@ -154,10 +155,0 @@\n-void C2_MacroAssembler::emit_entry_barrier_stub(C2EntryBarrierStub* stub) {\n-  bind(stub->slow_path());\n-  call(RuntimeAddress(StubRoutines::x86::method_entry_barrier()));\n-  jmp(stub->continuation(), false \/* maybe_short *\/);\n-}\n-\n-int C2_MacroAssembler::entry_barrier_stub_size() {\n-  return 10;\n-}\n-\n@@ -2418,52 +2409,26 @@\n-void C2_MacroAssembler::vectortest(int bt, int vlen, XMMRegister src1, XMMRegister src2,\n-                                   XMMRegister vtmp1, XMMRegister vtmp2, KRegister mask) {\n-  switch(vlen) {\n-    case 4:\n-      assert(vtmp1 != xnoreg, \"required.\");\n-      \/\/ Broadcast lower 32 bits to 128 bits before ptest\n-      pshufd(vtmp1, src1, 0x0);\n-      if (bt == BoolTest::overflow) {\n-        assert(vtmp2 != xnoreg, \"required.\");\n-        pshufd(vtmp2, src2, 0x0);\n-      } else {\n-        assert(vtmp2 == xnoreg, \"required.\");\n-        vtmp2 = src2;\n-      }\n-      ptest(vtmp1, vtmp2);\n-     break;\n-    case 8:\n-      assert(vtmp1 != xnoreg, \"required.\");\n-      \/\/ Broadcast lower 64 bits to 128 bits before ptest\n-      pshufd(vtmp1, src1, 0x4);\n-      if (bt == BoolTest::overflow) {\n-        assert(vtmp2 != xnoreg, \"required.\");\n-        pshufd(vtmp2, src2, 0x4);\n-      } else {\n-        assert(vtmp2 == xnoreg, \"required.\");\n-        vtmp2 = src2;\n-      }\n-      ptest(vtmp1, vtmp2);\n-     break;\n-    case 16:\n-      assert((vtmp1 == xnoreg) && (vtmp2 == xnoreg), \"required.\");\n-      ptest(src1, src2);\n-      break;\n-    case 32:\n-      assert((vtmp1 == xnoreg) && (vtmp2 == xnoreg), \"required.\");\n-      vptest(src1, src2, Assembler::AVX_256bit);\n-      break;\n-    case 64:\n-      {\n-        assert((vtmp1 == xnoreg) && (vtmp2 == xnoreg), \"required.\");\n-        evpcmpeqb(mask, src1, src2, Assembler::AVX_512bit);\n-        if (bt == BoolTest::ne) {\n-          ktestql(mask, mask);\n-        } else {\n-          assert(bt == BoolTest::overflow, \"required\");\n-          kortestql(mask, mask);\n-        }\n-      }\n-      break;\n-    default:\n-      assert(false,\"Should not reach here.\");\n-      break;\n+void C2_MacroAssembler::vectortest(BasicType bt, XMMRegister src1, XMMRegister src2, XMMRegister vtmp, int vlen_in_bytes) {\n+  assert(vlen_in_bytes <= 32, \"\");\n+  int esize = type2aelembytes(bt);\n+  if (vlen_in_bytes == 32) {\n+    assert(vtmp == xnoreg, \"required.\");\n+    if (esize >= 4) {\n+      vtestps(src1, src2, AVX_256bit);\n+    } else {\n+      vptest(src1, src2, AVX_256bit);\n+    }\n+    return;\n+  }\n+  if (vlen_in_bytes < 16) {\n+    \/\/ Duplicate the lower part to fill the whole register,\n+    \/\/ Don't need to do so for src2\n+    assert(vtmp != xnoreg, \"required\");\n+    int shuffle_imm = (vlen_in_bytes == 4) ? 0x00 : 0x04;\n+    pshufd(vtmp, src1, shuffle_imm);\n+  } else {\n+    assert(vtmp == xnoreg, \"required\");\n+    vtmp = src1;\n+  }\n+  if (esize >= 4 && VM_Version::supports_avx()) {\n+    vtestps(vtmp, src2, AVX_128bit);\n+  } else {\n+    ptest(vtmp, src2);\n","filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp","additions":29,"deletions":64,"binary":false,"changes":93,"status":"modified"},{"patch":"@@ -141,2 +141,1 @@\n-  void vectortest(int bt, int vlen, XMMRegister src1, XMMRegister src2,\n-                  XMMRegister vtmp1 = xnoreg, XMMRegister vtmp2 = xnoreg, KRegister mask = knoreg);\n+  void vectortest(BasicType bt, XMMRegister src1, XMMRegister src2, XMMRegister vtmp, int vlen_in_bytes);\n","filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.hpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1,60 +0,0 @@\n-\/*\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-#include \"precompiled.hpp\"\n-#include \"asm\/macroAssembler.hpp\"\n-#include \"opto\/compile.hpp\"\n-#include \"opto\/node.hpp\"\n-#include \"opto\/output.hpp\"\n-#include \"runtime\/sharedRuntime.hpp\"\n-\n-#define __ masm.\n-void C2SafepointPollStubTable::emit_stub_impl(MacroAssembler& masm, C2SafepointPollStub* entry) const {\n-  assert(SharedRuntime::polling_page_return_handler_blob() != NULL,\n-         \"polling page return stub not created yet\");\n-  address stub = SharedRuntime::polling_page_return_handler_blob()->entry_point();\n-\n-  RuntimeAddress callback_addr(stub);\n-\n-  __ bind(entry->_stub_label);\n-  InternalAddress safepoint_pc(masm.pc() - masm.offset() + entry->_safepoint_offset);\n-#ifdef _LP64\n-  __ lea(rscratch1, safepoint_pc);\n-  __ movptr(Address(r15_thread, JavaThread::saved_exception_pc_offset()), rscratch1);\n-#else\n-  const Register tmp1 = rcx;\n-  const Register tmp2 = rdx;\n-  __ push(tmp1);\n-  __ push(tmp2);\n-\n-  __ lea(tmp1, safepoint_pc);\n-  __ get_thread(tmp2);\n-  __ movptr(Address(tmp2, JavaThread::saved_exception_pc_offset()), tmp1);\n-\n-  __ pop(tmp2);\n-  __ pop(tmp1);\n-#endif\n-  __ jump(callback_addr);\n-}\n-#undef __\n","filename":"src\/hotspot\/cpu\/x86\/c2_safepointPollStubTable_x86.cpp","additions":0,"deletions":60,"binary":false,"changes":60,"status":"deleted"},{"patch":"@@ -9016,20 +9016,0 @@\n-void MacroAssembler::anytrue(Register dst, uint masklen, KRegister src1, KRegister src2) {\n-   masklen = masklen < 8 ? 8 : masklen;\n-   ktest(masklen, src1, src2);\n-   setb(Assembler::notZero, dst);\n-   movzbl(dst, dst);\n-}\n-\n-void MacroAssembler::alltrue(Register dst, uint masklen, KRegister src1, KRegister src2, KRegister kscratch) {\n-  if (masklen < 8) {\n-    knotbl(kscratch, src2);\n-    kortestbl(src1, kscratch);\n-    setb(Assembler::carrySet, dst);\n-    movzbl(dst, dst);\n-  } else {\n-    ktest(masklen, src1, src2);\n-    setb(Assembler::carrySet, dst);\n-    movzbl(dst, dst);\n-  }\n-}\n-\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86.cpp","additions":0,"deletions":20,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -1771,3 +1771,0 @@\n-  void alltrue(Register dst, uint masklen, KRegister src1, KRegister src2, KRegister kscratch);\n-  void anytrue(Register dst, uint masklen, KRegister src, KRegister kscratch);\n-\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86.hpp","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -186,0 +186,19 @@\n+  \/\/ Without predicated input, an all-one vector is needed for the alltrue vector test\n+  static constexpr bool vectortest_needs_second_argument(bool is_alltrue, bool is_predicate) {\n+    return is_alltrue && !is_predicate;\n+  }\n+\n+  \/\/ BoolTest mask for vector test intrinsics\n+  static constexpr BoolTest::mask vectortest_mask(bool is_alltrue, bool is_predicate, int vlen) {\n+    if (!is_alltrue) {\n+      return BoolTest::ne;\n+    }\n+    if (!is_predicate) {\n+      return BoolTest::lt;\n+    }\n+    if ((vlen == 8 && !VM_Version::supports_avx512dq()) || vlen < 8) {\n+      return BoolTest::eq;\n+    }\n+    return BoolTest::lt;\n+  }\n+\n","filename":"src\/hotspot\/cpu\/x86\/matcher_x86.hpp","additions":19,"deletions":0,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -1853,2 +1853,0 @@\n-      } else if (size_in_bits == 512 && (VM_Version::supports_avx512bw() == false)) {\n-        return false; \/\/ Implementation limitation\n@@ -8051,8 +8049,5 @@\n-instruct vptest_alltrue_lt16(rRegI dst, legVec src1, legVec src2, legVec vtmp1, legVec vtmp2, rFlagsReg cr) %{\n-  predicate(!VM_Version::supports_avx512bwdq() &&\n-            Matcher::vector_length_in_bytes(n->in(1)) >= 4 &&\n-            Matcher::vector_length_in_bytes(n->in(1)) < 16 &&\n-            static_cast<const VectorTestNode*>(n)->get_predicate() == BoolTest::overflow);\n-  match(Set dst (VectorTest src1 src2 ));\n-  effect(TEMP vtmp1, TEMP vtmp2, KILL cr);\n-  format %{ \"vptest_alltrue_lt16 $dst,$src1, $src2\\t! using $vtmp1, $vtmp2 and $cr as TEMP\" %}\n+instruct vptest_lt16(rFlagsRegU cr, legVec src1, legVec src2, legVec vtmp) %{\n+  predicate(Matcher::vector_length_in_bytes(n->in(1)) < 16);\n+  match(Set cr (VectorTest src1 src2));\n+  effect(TEMP vtmp);\n+  format %{ \"vptest_lt16  $src1, $src2\\t! using $vtmp as TEMP\" %}\n@@ -8060,0 +8055,1 @@\n+    BasicType bt = Matcher::vector_element_basic_type(this, $src1);\n@@ -8061,3 +8057,1 @@\n-    __ vectortest(BoolTest::overflow, vlen, $src1$$XMMRegister, $src2$$XMMRegister, $vtmp1$$XMMRegister, $vtmp2$$XMMRegister);\n-    __ setb(Assembler::carrySet, $dst$$Register);\n-    __ movzbl($dst$$Register, $dst$$Register);\n+    __ vectortest(bt, $src1$$XMMRegister, $src2$$XMMRegister, $vtmp$$XMMRegister, vlen);\n@@ -8068,8 +8062,4 @@\n-instruct vptest_alltrue_ge16(rRegI dst, legVec src1, legVec src2, rFlagsReg cr) %{\n-  predicate(!VM_Version::supports_avx512bwdq() &&\n-            Matcher::vector_length_in_bytes(n->in(1)) >= 16 &&\n-            Matcher::vector_length_in_bytes(n->in(1)) <  64 &&\n-            static_cast<const VectorTestNode*>(n)->get_predicate() == BoolTest::overflow);\n-  match(Set dst (VectorTest src1 src2 ));\n-  effect(KILL cr);\n-  format %{ \"vptest_alltrue_ge16  $dst,$src1, $src2\\t! using $cr as TEMP\" %}\n+instruct vptest_ge16(rFlagsRegU cr, legVec src1, legVec src2) %{\n+  predicate(Matcher::vector_length_in_bytes(n->in(1)) >= 16);\n+  match(Set cr (VectorTest src1 src2));\n+  format %{ \"vptest_ge16  $src1, $src2\\n\\t\" %}\n@@ -8077,0 +8067,1 @@\n+    BasicType bt = Matcher::vector_element_basic_type(this, $src1);\n@@ -8078,21 +8069,1 @@\n-    __ vectortest(BoolTest::overflow, vlen, $src1$$XMMRegister, $src2$$XMMRegister, xnoreg, xnoreg, knoreg);\n-    __ setb(Assembler::carrySet, $dst$$Register);\n-    __ movzbl($dst$$Register, $dst$$Register);\n-  %}\n-  ins_pipe( pipe_slow );\n-%}\n-\n-instruct vptest_alltrue_lt8_evex(rRegI dst, kReg src1, kReg src2, kReg kscratch, rFlagsReg cr) %{\n-  predicate(VM_Version::supports_avx512bwdq() &&\n-            static_cast<const VectorTestNode*>(n)->get_predicate() == BoolTest::overflow &&\n-            n->in(1)->bottom_type()->isa_vectmask() &&\n-            Matcher::vector_length(n->in(1)) < 8);\n-  match(Set dst (VectorTest src1 src2));\n-  effect(KILL cr, TEMP kscratch);\n-  format %{ \"vptest_alltrue_lt8_evex $dst,$src1,$src2\\t! using $cr as TEMP\" %}\n-  ins_encode %{\n-    const MachNode* mask1 = static_cast<const MachNode*>(this->in(this->operand_index($src1)));\n-    const MachNode* mask2 = static_cast<const MachNode*>(this->in(this->operand_index($src2)));\n-    assert(0 == Type::cmp(mask1->bottom_type(), mask2->bottom_type()), \"\");\n-    uint masklen = Matcher::vector_length(this, $src1);\n-    __ alltrue($dst$$Register, masklen, $src1$$KRegister, $src2$$KRegister, $kscratch$$KRegister);\n+    __ vectortest(bt, $src1$$XMMRegister, $src2$$XMMRegister, xnoreg, vlen);\n@@ -8103,9 +8074,7 @@\n-\n-instruct vptest_alltrue_ge8_evex(rRegI dst, kReg src1, kReg src2, rFlagsReg cr) %{\n-  predicate(VM_Version::supports_avx512bwdq() &&\n-            static_cast<const VectorTestNode*>(n)->get_predicate() == BoolTest::overflow &&\n-            n->in(1)->bottom_type()->isa_vectmask() &&\n-            Matcher::vector_length(n->in(1)) >= 8);\n-  match(Set dst (VectorTest src1 src2));\n-  effect(KILL cr);\n-  format %{ \"vptest_alltrue_ge8_evex $dst,$src1,$src2\\t! using $cr as TEMP\" %}\n+instruct ktest_alltrue_le8(rFlagsRegU cr, kReg src1, kReg src2, rRegI tmp) %{\n+  predicate((Matcher::vector_length(n->in(1)) < 8 ||\n+             (Matcher::vector_length(n->in(1)) == 8 && !VM_Version::supports_avx512dq())) &&\n+            static_cast<const VectorTestNode*>(n)->get_predicate() == BoolTest::overflow);\n+  match(Set cr (VectorTest src1 src2));\n+  effect(TEMP tmp);\n+  format %{ \"ktest_alltrue_le8  $src1, $src2\\t! using $tmp as TEMP\" %}\n@@ -8113,3 +8082,0 @@\n-    const MachNode* mask1 = static_cast<const MachNode*>(this->in(this->operand_index($src1)));\n-    const MachNode* mask2 = static_cast<const MachNode*>(this->in(this->operand_index($src2)));\n-    assert(0 == Type::cmp(mask1->bottom_type(), mask2->bottom_type()), \"\");\n@@ -8117,19 +8083,3 @@\n-    __ alltrue($dst$$Register, masklen, $src1$$KRegister, $src2$$KRegister, knoreg);\n-  %}\n-  ins_pipe( pipe_slow );\n-%}\n-\n-\n-instruct vptest_anytrue_lt16(rRegI dst, legVec src1, legVec src2, legVec vtmp, rFlagsReg cr) %{\n-  predicate(!VM_Version::supports_avx512bwdq() &&\n-            Matcher::vector_length_in_bytes(n->in(1)) >= 4 &&\n-            Matcher::vector_length_in_bytes(n->in(1)) < 16 &&\n-            static_cast<const VectorTestNode*>(n)->get_predicate() == BoolTest::ne);\n-  match(Set dst (VectorTest src1 src2 ));\n-  effect(TEMP vtmp, KILL cr);\n-  format %{ \"vptest_anytrue_lt16 $dst,$src1,$src2\\t! using $vtmp, $cr as TEMP\" %}\n-  ins_encode %{\n-    int vlen = Matcher::vector_length_in_bytes(this, $src1);\n-    __ vectortest(BoolTest::ne, vlen, $src1$$XMMRegister, $src2$$XMMRegister, $vtmp$$XMMRegister);\n-    __ setb(Assembler::notZero, $dst$$Register);\n-    __ movzbl($dst$$Register, $dst$$Register);\n+    __ kmovwl($tmp$$Register, $src1$$KRegister);\n+    __ andl($tmp$$Register, (1 << masklen) - 1);\n+    __ cmpl($tmp$$Register, (1 << masklen) - 1);\n@@ -8140,4 +8090,3 @@\n-instruct vptest_anytrue_ge16(rRegI dst, legVec src1, legVec src2, rFlagsReg cr) %{\n-  predicate(!VM_Version::supports_avx512bwdq() &&\n-            Matcher::vector_length_in_bytes(n->in(1)) >= 16 &&\n-            Matcher::vector_length_in_bytes(n->in(1)) < 64  &&\n+instruct ktest_anytrue_le8(rFlagsRegU cr, kReg src1, kReg src2, rRegI tmp) %{\n+  predicate((Matcher::vector_length(n->in(1)) < 8 ||\n+             (Matcher::vector_length(n->in(1)) == 8 && !VM_Version::supports_avx512dq())) &&\n@@ -8145,50 +8094,3 @@\n-  match(Set dst (VectorTest src1 src2 ));\n-  effect(KILL cr);\n-  format %{ \"vptest_anytrue_ge16 $dst,$src1,$src2\\t! using $cr as TEMP\" %}\n-  ins_encode %{\n-    int vlen = Matcher::vector_length_in_bytes(this, $src1);\n-    __ vectortest(BoolTest::ne, vlen, $src1$$XMMRegister, $src2$$XMMRegister, xnoreg, xnoreg, knoreg);\n-    __ setb(Assembler::notZero, $dst$$Register);\n-    __ movzbl($dst$$Register, $dst$$Register);\n-  %}\n-  ins_pipe( pipe_slow );\n-%}\n-\n-instruct vptest_anytrue_evex(rRegI dst, kReg src1, kReg src2, rFlagsReg cr) %{\n-  predicate(VM_Version::supports_avx512bwdq() &&\n-            static_cast<const VectorTestNode*>(n)->get_predicate() == BoolTest::ne);\n-  match(Set dst (VectorTest src1 src2));\n-  effect(KILL cr);\n-  format %{ \"vptest_anytrue_lt8_evex $dst,$src1,$src2\\t! using $cr as TEMP\" %}\n-  ins_encode %{\n-    const MachNode* mask1 = static_cast<const MachNode*>(this->in(this->operand_index($src1)));\n-    const MachNode* mask2 = static_cast<const MachNode*>(this->in(this->operand_index($src2)));\n-    assert(0 == Type::cmp(mask1->bottom_type(), mask2->bottom_type()), \"\");\n-    uint  masklen = Matcher::vector_length(this, $src1);\n-    __ anytrue($dst$$Register, masklen, $src1$$KRegister, $src2$$KRegister);\n-  %}\n-  ins_pipe( pipe_slow );\n-%}\n-\n-instruct cmpvptest_anytrue_lt16(rFlagsReg cr, legVec src1, legVec src2, immI_0 zero, legVec vtmp) %{\n-  predicate(!VM_Version::supports_avx512bwdq() &&\n-            Matcher::vector_length_in_bytes(n->in(1)->in(1)) >= 4 &&\n-            Matcher::vector_length_in_bytes(n->in(1)->in(1)) < 16 &&\n-            static_cast<const VectorTestNode*>(n->in(1))->get_predicate() == BoolTest::ne);\n-  match(Set cr (CmpI (VectorTest src1 src2) zero));\n-  effect(TEMP vtmp);\n-  format %{ \"cmpvptest_anytrue_lt16 $src1,$src2\\t! using $vtmp as TEMP\" %}\n-  ins_encode %{\n-    int vlen = Matcher::vector_length_in_bytes(this, $src1);\n-    __ vectortest(BoolTest::ne, vlen, $src1$$XMMRegister, $src2$$XMMRegister, $vtmp$$XMMRegister);\n-  %}\n-  ins_pipe( pipe_slow );\n-%}\n-\n-instruct cmpvptest_anytrue_ge16(rFlagsReg cr, legVec src1, legVec src2, immI_0 zero) %{\n-  predicate(!VM_Version::supports_avx512bwdq() &&\n-            Matcher::vector_length_in_bytes(n->in(1)->in(1)) >= 16 &&\n-            Matcher::vector_length_in_bytes(n->in(1)->in(1)) <  64 &&\n-            static_cast<const VectorTestNode*>(n->in(1))->get_predicate() == BoolTest::ne);\n-  match(Set cr (CmpI (VectorTest src1 src2) zero));\n-  format %{ \"cmpvptest_anytrue_ge16 $src1,$src2\\t!\" %}\n+  match(Set cr (VectorTest src1 src2));\n+  effect(TEMP tmp);\n+  format %{ \"ktest_anytrue_le8  $src1, $src2\\t! using $tmp as TEMP\" %}\n@@ -8196,2 +8098,3 @@\n-    int vlen = Matcher::vector_length_in_bytes(this, $src1);\n-    __ vectortest(BoolTest::ne, vlen, $src1$$XMMRegister, $src2$$XMMRegister, xnoreg, xnoreg, knoreg);\n+    uint masklen = Matcher::vector_length(this, $src1);\n+    __ kmovwl($tmp$$Register, $src1$$KRegister);\n+    __ andl($tmp$$Register, (1 << masklen) - 1);\n@@ -8202,5 +8105,5 @@\n-instruct cmpvptest_anytrue_evex(rFlagsReg cr, kReg src1, kReg src2, immI_0 zero) %{\n-  predicate(VM_Version::supports_avx512bwdq() &&\n-            static_cast<const VectorTestNode*>(n->in(1))->get_predicate() == BoolTest::ne);\n-  match(Set cr (CmpI (VectorTest src1 src2) zero));\n-  format %{ \"cmpvptest_anytrue_evex $src1,$src2\\t!\" %}\n+instruct ktest_ge8(rFlagsRegU cr, kReg src1, kReg src2) %{\n+  predicate(Matcher::vector_length(n->in(1)) >= 16 ||\n+            (Matcher::vector_length(n->in(1)) == 8 && VM_Version::supports_avx512dq()));\n+  match(Set cr (VectorTest src1 src2));\n+  format %{ \"ktest_ge8  $src1, $src2\\n\\t\" %}\n@@ -8209,5 +8112,1 @@\n-    const MachNode* mask1 = static_cast<const MachNode*>(this->in(this->operand_index($src1)));\n-    const MachNode* mask2 = static_cast<const MachNode*>(this->in(this->operand_index($src2)));\n-    assert(0 == Type::cmp(mask1->bottom_type(), mask2->bottom_type()), \"\");\n-    masklen = masklen < 8 ? 8 : masklen;\n-    __ ktest(masklen, $src1$$KRegister, $src2$$KRegister);\n+    __ kortest(masklen, $src1$$KRegister, $src1$$KRegister);\n","filename":"src\/hotspot\/cpu\/x86\/x86.ad","additions":38,"deletions":139,"binary":false,"changes":177,"status":"modified"},{"patch":"@@ -711,1 +711,3 @@\n-      code_stub = &C->output()->safepoint_poll_table()->add_safepoint(__ offset());\n+      C2SafepointPollStub* stub = new (C->comp_arena()) C2SafepointPollStub(__ offset());\n+      C->output()->add_stub(stub);\n+      code_stub = &stub->entry();\n","filename":"src\/hotspot\/cpu\/x86\/x86_32.ad","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1023,1 +1023,3 @@\n-      code_stub = &C->output()->safepoint_poll_table()->add_safepoint(__ offset());\n+      C2SafepointPollStub* stub = new (C->comp_arena()) C2SafepointPollStub(__ offset());\n+      C->output()->add_stub(stub);\n+      code_stub = &stub->entry();\n","filename":"src\/hotspot\/cpu\/x86\/x86_64.ad","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -251,1 +251,1 @@\n-  sprintf(ver_str, \"%d\", ATTACH_PROTOCOL_VER);\n+  size_t ver_str_len = os::snprintf_checked(ver_str, sizeof(ver_str), \"%d\", ATTACH_PROTOCOL_VER);\n@@ -291,1 +291,1 @@\n-          if ((strlen(buf) != strlen(ver_str)) ||\n+          if ((strlen(buf) != ver_str_len) ||\n@@ -294,2 +294,2 @@\n-            sprintf(msg, \"%d\\n\", ATTACH_ERROR_BADVERSION);\n-            write_fully(s, msg, strlen(msg));\n+            int msg_len = os::snprintf_checked(msg, sizeof(msg), \"%d\\n\", ATTACH_ERROR_BADVERSION);\n+            write_fully(s, msg, msg_len);\n@@ -414,2 +414,2 @@\n-  sprintf(msg, \"%d\\n\", result);\n-  int rc = BsdAttachListener::write_fully(this->socket(), msg, strlen(msg));\n+  int msg_len = os::snprintf_checked(msg, sizeof(msg), \"%d\\n\", result);\n+  int rc = BsdAttachListener::write_fully(this->socket(), msg, msg_len);\n","filename":"src\/hotspot\/os\/bsd\/attachListener_bsd.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -323,1 +323,1 @@\n-  \/\/ Buffer that fits several sprintfs.\n+  \/\/ Buffer that fits several snprintfs.\n@@ -379,5 +379,4 @@\n-    char *ld_library_path = NEW_C_HEAP_ARRAY(char,\n-                                             strlen(v) + 1 +\n-                                             sizeof(SYS_EXT_DIR) + sizeof(\"\/lib\/\") + strlen(cpu_arch) + sizeof(DEFAULT_LIBPATH) + 1,\n-                                             mtInternal);\n-    sprintf(ld_library_path, \"%s%s\" SYS_EXT_DIR \"\/lib\/%s:\" DEFAULT_LIBPATH, v, v_colon, cpu_arch);\n+    const size_t ld_library_path_size = strlen(v) + 1 + sizeof(SYS_EXT_DIR) +\n+            sizeof(\"\/lib\/\") + strlen(cpu_arch) + sizeof(DEFAULT_LIBPATH) + 1;\n+    char *ld_library_path = NEW_C_HEAP_ARRAY(char, ld_library_path_size, mtInternal);\n+    os::snprintf_checked(ld_library_path, ld_library_path_size, \"%s%s\" SYS_EXT_DIR \"\/lib\/%s:\" DEFAULT_LIBPATH, v, v_colon, cpu_arch);\n@@ -389,1 +388,1 @@\n-  sprintf(buf, \"%s\" EXTENSIONS_DIR \":\" SYS_EXT_DIR EXTENSIONS_DIR, Arguments::get_java_home());\n+  os::snprintf_checked(buf, bufsize, \"%s\" EXTENSIONS_DIR \":\" SYS_EXT_DIR EXTENSIONS_DIR, Arguments::get_java_home());\n@@ -404,1 +403,1 @@\n-  \/\/ Buffer that fits several sprintfs.\n+  \/\/ Buffer that fits several snprintfs.\n@@ -474,5 +473,3 @@\n-    char *ld_library_path = NEW_C_HEAP_ARRAY(char,\n-                                             strlen(v) + 1 + strlen(l) + 1 +\n-                                             system_ext_size + 3,\n-                                             mtInternal);\n-    sprintf(ld_library_path, \"%s%s%s%s%s\" SYS_EXTENSIONS_DIR \":\" SYS_EXTENSIONS_DIRS \":.\",\n+    const size_t ld_library_path_size = strlen(v) + 1 + strlen(l) + 1 + system_ext_size + 3;\n+    char *ld_library_path = NEW_C_HEAP_ARRAY(char, ld_library_path_size, mtInternal);\n+    os::snprintf_checked(ld_library_path, ld_library_path_size, \"%s%s%s%s%s\" SYS_EXTENSIONS_DIR \":\" SYS_EXTENSIONS_DIRS \":.\",\n@@ -489,1 +486,1 @@\n-  sprintf(buf, \"%s\" SYS_EXTENSIONS_DIR \":%s\" EXTENSIONS_DIR \":\" SYS_EXTENSIONS_DIRS,\n+  os::snprintf_checked(buf, bufsize, \"%s\" SYS_EXTENSIONS_DIR \":%s\" EXTENSIONS_DIR \":\" SYS_EXTENSIONS_DIRS,\n","filename":"src\/hotspot\/os\/bsd\/os_bsd.cpp","additions":11,"deletions":14,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -642,1 +642,1 @@\n-    JavaThread* const jt = (t != NULL && t->is_Java_thread()) ? (JavaThread*) t : NULL;\n+    JavaThread* const jt = (t != NULL && t->is_Java_thread()) ? JavaThread::cast(t) : NULL;\n","filename":"src\/hotspot\/os\/posix\/signals_posix.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -53,3 +53,0 @@\n-  assert(this->is_Java_thread(), \"must be JavaThread\");\n-  JavaThread* jt = (JavaThread *)this;\n-\n@@ -58,2 +55,2 @@\n-  if (jt->has_last_Java_frame() && jt->frame_anchor()->walkable()) {\n-    *fr_addr = jt->pd_last_frame();\n+  if (has_last_Java_frame() && frame_anchor()->walkable()) {\n+    *fr_addr = pd_last_frame();\n@@ -78,1 +75,1 @@\n-    if (!ret_frame.safe_for_sender(jt)) {\n+    if (!ret_frame.safe_for_sender(this)) {\n@@ -82,1 +79,1 @@\n-      if (!ret_frame2.safe_for_sender(jt)) {\n+      if (!ret_frame2.safe_for_sender(this)) {\n@@ -101,1 +98,0 @@\n-\n","filename":"src\/hotspot\/os_cpu\/bsd_aarch64\/javaThread_bsd_aarch64.cpp","additions":4,"deletions":8,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -52,5 +52,0 @@\n-\n-  assert(this->is_Java_thread(), \"must be JavaThread\");\n-\n-  JavaThread* jt = (JavaThread *)this;\n-\n@@ -59,2 +54,2 @@\n-  if (jt->has_last_Java_frame() && jt->frame_anchor()->walkable()) {\n-    *fr_addr = jt->pd_last_frame();\n+  if (has_last_Java_frame() && frame_anchor()->walkable()) {\n+    *fr_addr = pd_last_frame();\n@@ -74,1 +69,1 @@\n-    if (!ret_frame.safe_for_sender(jt)) {\n+    if (!ret_frame.safe_for_sender(this)) {\n@@ -78,1 +73,1 @@\n-      if (!ret_frame2.safe_for_sender(jt)) {\n+      if (!ret_frame2.safe_for_sender(this)) {\n@@ -91,1 +86,0 @@\n-\n","filename":"src\/hotspot\/os_cpu\/windows_aarch64\/javaThread_windows_aarch64.cpp","additions":4,"deletions":10,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -103,0 +103,4 @@\n+\/\/ Performs snprintf and asserts the result is non-negative (so there was not\n+\/\/ an encoding error) and that the output was not truncated.\n+extern int snprintf_checked(char* buf, size_t len, const char* fmt, ...);\n+\n","filename":"src\/hotspot\/share\/adlc\/adlc.hpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -214,2 +214,3 @@\n-          char* buf = (char*) AdlAllocateHeap(strlen(instr->_ident) + 4);\n-          sprintf(buf, \"%s_%d\", instr->_ident, match_rules_cnt++);\n+          const size_t buf_size = strlen(instr->_ident) + 4;\n+          char* buf = (char*) AdlAllocateHeap(buf_size);\n+          snprintf_checked(buf, buf_size, \"%s_%d\", instr->_ident, match_rules_cnt++);\n@@ -2879,2 +2880,3 @@\n-  char* ec_name = (char*) AdlAllocateHeap(strlen(inst._ident) + strlen(prefix) + 1);\n-  sprintf(ec_name, \"%s%s\", prefix, inst._ident);\n+  const size_t ec_name_size = strlen(inst._ident) + strlen(prefix) + 1;\n+  char* ec_name = (char*) AdlAllocateHeap(ec_name_size);\n+  snprintf_checked(ec_name, ec_name_size, \"%s%s\", prefix, inst._ident);\n@@ -3350,2 +3352,3 @@\n-  char* ec_name = (char*) AdlAllocateHeap(strlen(inst._ident) + strlen(prefix) + 1);\n-  sprintf(ec_name, \"%s%s\", prefix, inst._ident);\n+  const size_t ec_name_size = strlen(inst._ident) + strlen(prefix) + 1;\n+  char* ec_name = (char*) AdlAllocateHeap(ec_name_size);\n+  snprintf_checked(ec_name, ec_name_size, \"%s%s\", prefix, inst._ident);\n@@ -4670,2 +4673,3 @@\n-      char* buf = (char*) AdlAllocateHeap(strlen(param) + 3);\n-      sprintf(buf, \"(%s)\", param);\n+      const size_t buf_size = strlen(param) + 3;\n+      char* buf = (char*) AdlAllocateHeap(buf_size);\n+      snprintf_checked(buf, buf_size, \"(%s)\", param);\n@@ -5278,2 +5282,3 @@\n-  char* location = (char *)AdlAllocateHeap(strlen(file) + 100);\n-  sprintf(location, \"\\n#line %d \\\"%s\\\"\\n\", line, file);\n+  const size_t location_size = strlen(file) + 100;\n+  char* location = (char *)AdlAllocateHeap(location_size);\n+  snprintf_checked(location, location_size, \"\\n#line %d \\\"%s\\\"\\n\", line, file);\n","filename":"src\/hotspot\/share\/adlc\/adlparse.cpp","additions":15,"deletions":10,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -818,1 +818,1 @@\n-    sprintf(regMask,\"%s%s()\", rc_name, mask);\n+    snprintf_checked(regMask, length, \"%s%s()\", rc_name, mask);\n@@ -911,1 +911,1 @@\n-  sprintf(result,\"%s%s\", stack_or, reg_mask_name);\n+  snprintf_checked(result, length, \"%s%s\", stack_or, reg_mask_name);\n","filename":"src\/hotspot\/share\/adlc\/archDesc.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -215,1 +215,1 @@\n-    sprintf(Expr::buffer(), \"_kids[0]->_cost[%s]\", lchild_to_upper);\n+    snprintf_checked(Expr::buffer(), STRING_BUFFER_LENGTH, \"_kids[0]->_cost[%s]\", lchild_to_upper);\n@@ -221,1 +221,1 @@\n-    sprintf(Expr::buffer(), \"_kids[1]->_cost[%s]\", rchild_to_upper);\n+    snprintf_checked(Expr::buffer(), STRING_BUFFER_LENGTH, \"_kids[1]->_cost[%s]\", rchild_to_upper);\n@@ -760,1 +760,1 @@\n-    sprintf( string_buffer, \"0\");\n+    snprintf_checked(string_buffer, STRING_BUFFER_LENGTH, \"0\");\n","filename":"src\/hotspot\/share\/adlc\/dfa.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -28,0 +28,2 @@\n+#define remaining_buflen(buffer, position) (sizeof(buffer) - ((position) - (buffer)))\n+\n@@ -1536,1 +1538,1 @@\n-      sprintf(s,\"\/*%s*\/(\",(char*)i._key);\n+      snprintf_checked(s, remaining_buflen(buf, s), \"\/*%s*\/(\",(char*)i._key);\n@@ -3475,1 +3477,1 @@\n-  sprintf(subtree,\"_%s_%s_%s\", _opType, lstr, rstr);\n+  snprintf_checked(subtree, len, \"_%s_%s_%s\", _opType, lstr, rstr);\n@@ -3922,2 +3924,3 @@\n-  char* buf = (char*) AdlAllocateHeap(strlen(instr_ident) + 4);\n-  sprintf(buf, \"%s_%d\", instr_ident, match_rules_cnt++);\n+  const size_t buf_size = strlen(instr_ident) + 4;\n+  char* buf = (char*) AdlAllocateHeap(buf_size);\n+  snprintf_checked(buf, buf_size, \"%s_%d\", instr_ident, match_rules_cnt++);\n","filename":"src\/hotspot\/share\/adlc\/formssel.cpp","additions":7,"deletions":4,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -469,1 +469,1 @@\n-  sprintf(fname,\"%s%s\",base,suffix);\n+  snprintf_checked(fname,len,\"%s%s\",base,suffix);\n","filename":"src\/hotspot\/share\/adlc\/main.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,0 +29,2 @@\n+#define remaining_buflen(buffer, position) (sizeof(buffer) - (position - buffer))\n+\n@@ -38,0 +40,10 @@\n+int snprintf_checked(char* buf, size_t len, const char* fmt, ...) {\n+  va_list args;\n+  va_start(args, fmt);\n+  int result = vsnprintf(buf, len, fmt, args);\n+  va_end(args);\n+  assert(result >= 0, \"snprintf error\");\n+  assert(static_cast<size_t>(result) < len, \"snprintf truncated\");\n+  return result;\n+}\n+\n@@ -200,1 +212,2 @@\n-  char *operand_stages = new char [templen];\n+  const size_t operand_stages_size = templen;\n+  char *operand_stages = new char [operand_stages_size];\n@@ -214,1 +227,1 @@\n-    templen += sprintf(&operand_stages[templen], \"  stage_%s%c\\n\",\n+    templen += snprintf_checked(&operand_stages[templen], operand_stages_size - templen, \"  stage_%s%c\\n\",\n@@ -281,0 +294,1 @@\n+  const size_t resource_stages_size = templen;\n@@ -288,1 +302,1 @@\n-    templen += sprintf(&resource_stages[templen], \"  stage_%s%-*s \/\/ %s\\n\",\n+    templen += snprintf_checked(&resource_stages[templen], resource_stages_size - templen, \"  stage_%s%-*s \/\/ %s\\n\",\n@@ -347,1 +361,1 @@\n-    templen = sprintf(temp, \"%d\", res_cycles[i]);\n+    templen = snprintf_checked(temp, sizeof(temp), \"%d\", res_cycles[i]);\n@@ -356,1 +370,2 @@\n-  char * resource_cycles = new char [templen];\n+  const size_t resource_cycles_size = templen;\n+  char * resource_cycles = new char [resource_cycles_size];\n@@ -361,1 +376,1 @@\n-    templen += sprintf(&resource_cycles[templen], \"  %*d%c \/\/ %s\\n\",\n+    templen += snprintf_checked(&resource_cycles[templen], resource_cycles_size - templen, \"  %*d%c \/\/ %s\\n\",\n@@ -434,1 +449,2 @@\n-  char * resource_mask = new char [templen];\n+  const size_t resource_mask_size = templen;\n+  char * resource_mask = new char [resource_mask_size];\n@@ -459,1 +475,1 @@\n-      sprintf(&resource_mask[templen], \"  %s(0x%0*x, %*d, %*d, %s %s(\",\n+      snprintf_checked(&resource_mask[templen], resource_mask_size - templen, \"  %s(0x%0*x, %*d, %*d, %s %s(\",\n@@ -499,1 +515,1 @@\n-        sprintf(&resource_mask[templen], \"0x%08x%s\", res_mask[j], j > 0 ? \", \" : \"\");\n+        snprintf_checked(&resource_mask[templen], resource_mask_size - templen, \"0x%08x%s\", res_mask[j], j > 0 ? \", \" : \"\");\n@@ -530,3 +546,2 @@\n-    int printed = sprintf(args, \"0x%x, 0x%x, %u\",\n-      resources_used, resources_used_exclusively, element_count);\n-    assert(printed <= 36, \"overflow\");\n+    snprintf_checked(args, 36 + 1, \"0x%x, 0x%x, %u\",\n+        resources_used, resources_used_exclusively, element_count);\n@@ -1069,1 +1084,1 @@\n-        sprintf(inst_prefix, \"inst%d_\",   inst_position);\n+        snprintf_checked(inst_prefix, sizeof(inst_prefix), \"inst%d_\",   inst_position);\n@@ -1071,1 +1086,1 @@\n-        sprintf(receiver,    \"inst%d->\", inst_position);\n+        snprintf_checked(receiver, sizeof(receiver), \"inst%d->\", inst_position);\n@@ -1165,1 +1180,1 @@\n-          sprintf(left_reg_index,\",inst%u_idx%u\", (unsigned)left_index, (unsigned)left_op_index);\n+          snprintf_checked(left_reg_index, sizeof(left_reg_index), \",inst%u_idx%u\", (unsigned)left_index, (unsigned)left_op_index);\n@@ -1177,1 +1192,1 @@\n-            sprintf(right_reg_index,\",inst%u_idx%u\", (unsigned)right_index, (unsigned)right_op_index);\n+            snprintf_checked(right_reg_index, sizeof(right_reg_index), \",inst%u_idx%u\", (unsigned)right_index, (unsigned)right_op_index);\n@@ -2566,1 +2581,1 @@\n-      ib += sprintf(ib, \"  unsigned idx_%-5s = mach_constant_base_node_input(); \\t\/\/ %s, \\t%s\\n\",\n+      ib += snprintf_checked(ib, remaining_buflen(idxbuf, ib), \"  unsigned idx_%-5s = mach_constant_base_node_input(); \\t\/\/ %s, \\t%s\\n\",\n@@ -2568,1 +2583,1 @@\n-      nb += sprintf(nb, \"  Node    *n_%-7s = lookup(idx_%s);\\n\", name, name);\n+      nb += snprintf_checked(nb, remaining_buflen(nbuf, nb), \"  Node    *n_%-7s = lookup(idx_%s);\\n\", name, name);\n@@ -2575,1 +2590,1 @@\n-      ib += sprintf(ib, \"  unsigned idx_%-5s = idx%d; \\t\/\/ %s, \\t%s\\n\",\n+      ib += snprintf_checked(ib, remaining_buflen(idxbuf, ib), \"  unsigned idx_%-5s = idx%d; \\t\/\/ %s, \\t%s\\n\",\n@@ -2577,2 +2592,2 @@\n-      nb += sprintf(nb, \"  Node    *n_%-7s = lookup(idx_%s);\\n\", name, name);\n-      ob += sprintf(ob, \"  %sOper *op_%s = (%sOper *)opnd_array(%d);\\n\", type, name, type, idx);\n+      nb += snprintf_checked(nb, remaining_buflen(nbuf, nb), \"  Node    *n_%-7s = lookup(idx_%s);\\n\", name, name);\n+      ob += snprintf_checked(ob, remaining_buflen(opbuf, ob), \"  %sOper *op_%s = (%sOper *)opnd_array(%d);\\n\", type, name, type, idx);\n","filename":"src\/hotspot\/share\/adlc\/output_c.cpp","additions":36,"deletions":21,"binary":false,"changes":57,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -59,0 +59,5 @@\n+\/\/ true if LIR requires src1 and dst to match in binary LIR ops\n+enum {\n+  two_operand_lir_form = pd_two_operand_lir_form\n+};\n+\n","filename":"src\/hotspot\/share\/c1\/c1_Defs.hpp","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -197,1 +197,1 @@\n-  if (TwoOperandLIRForm) {\n+  if (two_operand_lir_form) {\n","filename":"src\/hotspot\/share\/c1\/c1_LIR.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -494,1 +494,1 @@\n-  if (TwoOperandLIRForm && left_op != result_op) {\n+  if (two_operand_lir_form && left_op != result_op) {\n@@ -566,1 +566,1 @@\n-  if (TwoOperandLIRForm && value != result_op\n+  if (two_operand_lir_form && value != result_op\n@@ -588,1 +588,1 @@\n-  if (TwoOperandLIRForm && left_op != result_op) {\n+  if (two_operand_lir_form && left_op != result_op) {\n@@ -3550,1 +3550,1 @@\n-  if (TwoOperandLIRForm) {\n+  if (two_operand_lir_form) {\n","filename":"src\/hotspot\/share\/c1\/c1_LIRGenerator.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -691,1 +691,1 @@\n-  sprintf(message, \"Index %d out of bounds for length %d\", index, a->length());\n+  os::snprintf_checked(message, sizeof(message), \"Index %d out of bounds for length %d\", index, a->length());\n@@ -703,1 +703,1 @@\n-  sprintf(message, \"%d\", index);\n+  os::snprintf_checked(message, sizeof(message), \"%d\", index);\n","filename":"src\/hotspot\/share\/c1\/c1_Runtime1.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -206,3 +206,0 @@\n-  develop_pd(bool, TwoOperandLIRForm,                                       \\\n-          \"true if LIR requires src1 and dst to match in binary LIR ops\")   \\\n-                                                                            \\\n","filename":"src\/hotspot\/share\/c1\/c1_globals.hpp","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -239,1 +239,1 @@\n-    trace_to_root(orig_obj, NULL, &value);\n+    trace_to_root(&ls, orig_obj, NULL, &value);\n@@ -251,1 +251,1 @@\n-  LogStream* _ls;\n+  outputStream* _st;\n@@ -254,2 +254,2 @@\n-  TraceFields(oop orig_obj, oop orig_field, LogStream* ls)\n-    : _orig_obj(orig_obj), _orig_field(orig_field), _ls(ls) {}\n+  TraceFields(oop orig_obj, oop orig_field, outputStream* st)\n+    : _orig_obj(orig_obj), _orig_field(orig_field), _st(st) {}\n@@ -261,1 +261,1 @@\n-        _ls->print(\"::%s (offset = %d)\", fd->name()->as_C_string(), fd->offset());\n+        _st->print(\"::%s (offset = %d)\", fd->name()->as_C_string(), fd->offset());\n@@ -267,2 +267,11 @@\n-\/\/ Hint: to exercise this function, uncomment out one of the ADD_EXCL lines above.\n-int CDSHeapVerifier::trace_to_root(oop orig_obj, oop orig_field, HeapShared::CachedOopInfo* p) {\n+\/\/ Call this function (from gdb, etc) if you want to know why an object is archived.\n+void CDSHeapVerifier::trace_to_root(outputStream* st, oop orig_obj) {\n+  HeapShared::CachedOopInfo* info = HeapShared::archived_object_cache()->get(orig_obj);\n+  if (info != NULL) {\n+    trace_to_root(st, orig_obj, NULL, info);\n+  } else {\n+    st->print_cr(\"Not an archived object??\");\n+  }\n+}\n+\n+int CDSHeapVerifier::trace_to_root(outputStream* st, oop orig_obj, oop orig_field, HeapShared::CachedOopInfo* info) {\n@@ -270,3 +279,2 @@\n-  LogStream ls(Log(cds, heap)::warning());\n-  if (p->_referrer != NULL) {\n-    HeapShared::CachedOopInfo* ref = HeapShared::archived_object_cache()->get(p->_referrer);\n+  if (info->_referrer != NULL) {\n+    HeapShared::CachedOopInfo* ref = HeapShared::archived_object_cache()->get(info->_referrer);\n@@ -274,1 +282,1 @@\n-    level = trace_to_root(p->_referrer, orig_obj, ref) + 1;\n+    level = trace_to_root(st, info->_referrer, orig_obj, ref) + 1;\n@@ -276,1 +284,1 @@\n-    ls.print_cr(\"[%2d] (shared string table)\", level++);\n+    st->print_cr(\"[%2d] (shared string table)\", level++);\n@@ -280,3 +288,3 @@\n-  ls.print(\"[%2d] \", level);\n-  orig_obj->print_address_on(&ls);\n-  ls.print(\" %s\", k->internal_name());\n+  st->print(\"[%2d] \", level);\n+  orig_obj->print_address_on(st);\n+  st->print(\" %s\", k->internal_name());\n@@ -285,1 +293,1 @@\n-      TraceFields clo(orig_obj, orig_field, &ls);;\n+      TraceFields clo(orig_obj, orig_field, st);\n@@ -292,1 +300,1 @@\n-          ls.print(\" @[%d]\", i);\n+          st->print(\" @[%d]\", i);\n@@ -298,1 +306,1 @@\n-  ls.cr();\n+  st->cr();\n","filename":"src\/hotspot\/share\/cds\/cdsHeapVerifier.cpp","additions":26,"deletions":18,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -72,1 +72,1 @@\n-  int trace_to_root(oop orig_obj, oop orig_field, HeapShared::CachedOopInfo* p);\n+  static int trace_to_root(outputStream* st, oop orig_obj, oop orig_field, HeapShared::CachedOopInfo* p);\n@@ -86,0 +86,2 @@\n+\n+  static void trace_to_root(outputStream* st, oop orig_obj);\n","filename":"src\/hotspot\/share\/cds\/cdsHeapVerifier.hpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+#include \"classfile\/classLoaderData.inline.hpp\"\n@@ -128,1 +129,1 @@\n-    pkg_entry = SystemDictionaryShared::class_loader_data(class_loader)->packages()->lookup_only(pkg_name);\n+    pkg_entry = ClassLoaderData::class_loader_data(class_loader())->packages()->lookup_only(pkg_name);\n","filename":"src\/hotspot\/share\/cds\/cdsProtectionDomain.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -172,1 +172,1 @@\n-    sprintf(&header_version[JVM_IDENT_MAX-9], \"%08x\", hash);\n+    os::snprintf_checked(&header_version[JVM_IDENT_MAX-9], 9, \"%08x\", hash);\n@@ -2063,0 +2063,14 @@\n+\/\/ Get the total size in bytes of a read only region\n+size_t FileMapInfo::readonly_total() {\n+  size_t total = 0;\n+  if (current_info() != nullptr) {\n+    FileMapRegion* r = FileMapInfo::current_info()->region_at(MetaspaceShared::ro);\n+    if (r->read_only()) total += r->used();\n+  }\n+  if (dynamic_info() != nullptr) {\n+    FileMapRegion* r = FileMapInfo::dynamic_info()->region_at(MetaspaceShared::ro);\n+    if (r->read_only()) total += r->used();\n+  }\n+  return total;\n+}\n+\n","filename":"src\/hotspot\/share\/cds\/filemap.cpp","additions":15,"deletions":1,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -463,0 +463,1 @@\n+  static size_t readonly_total();\n","filename":"src\/hotspot\/share\/cds\/filemap.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -87,0 +87,5 @@\n+size_t HeapShared::_alloc_count[HeapShared::ALLOC_STAT_SLOTS];\n+size_t HeapShared::_alloc_size[HeapShared::ALLOC_STAT_SLOTS];\n+size_t HeapShared::_total_obj_count;\n+size_t HeapShared::_total_obj_size;\n+\n@@ -304,0 +309,1 @@\n+    count_allocation(len);\n@@ -589,0 +595,1 @@\n+  count_allocation(roots()->size());\n@@ -834,0 +841,3 @@\n+  if (log_is_enabled(Info, cds, heap)) {\n+    print_stats();\n+  }\n@@ -1861,0 +1871,45 @@\n+void HeapShared::count_allocation(size_t size) {\n+  _total_obj_count ++;\n+  _total_obj_size += size;\n+  for (int i = 0; i < ALLOC_STAT_SLOTS; i++) {\n+    if (size <= (size_t(1) << i)) {\n+      _alloc_count[i] ++;\n+      _alloc_size[i] += size;\n+      return;\n+    }\n+  }\n+}\n+\n+static double avg_size(size_t size, size_t count) {\n+  double avg = 0;\n+  if (count > 0) {\n+    avg = double(size * HeapWordSize) \/ double(count);\n+  }\n+  return avg;\n+}\n+\n+void HeapShared::print_stats() {\n+  size_t huge_count = _total_obj_count;\n+  size_t huge_size = _total_obj_size;\n+\n+  for (int i = 0; i < ALLOC_STAT_SLOTS; i++) {\n+    size_t byte_size_limit = (size_t(1) << i) * HeapWordSize;\n+    size_t count = _alloc_count[i];\n+    size_t size = _alloc_size[i];\n+    log_info(cds, heap)(SIZE_FORMAT_W(8) \" objects are <= \" SIZE_FORMAT_W(-6)\n+                        \" bytes (total \" SIZE_FORMAT_W(8) \" bytes, avg %8.1f bytes)\",\n+                        count, byte_size_limit, size * HeapWordSize, avg_size(size, count));\n+    huge_count -= count;\n+    huge_size -= size;\n+  }\n+\n+  log_info(cds, heap)(SIZE_FORMAT_W(8) \" huge  objects               (total \"  SIZE_FORMAT_W(8) \" bytes\"\n+                      \", avg %8.1f bytes)\",\n+                      huge_count, huge_size * HeapWordSize,\n+                      avg_size(huge_size, huge_count));\n+  log_info(cds, heap)(SIZE_FORMAT_W(8) \" total objects               (total \"  SIZE_FORMAT_W(8) \" bytes\"\n+                      \", avg %8.1f bytes)\",\n+                      _total_obj_count, _total_obj_size * HeapWordSize,\n+                      avg_size(_total_obj_size, _total_obj_count));\n+}\n+\n","filename":"src\/hotspot\/share\/cds\/heapShared.cpp","additions":55,"deletions":0,"binary":false,"changes":55,"status":"modified"},{"patch":"@@ -165,0 +165,9 @@\n+  \/\/ statistics\n+  constexpr static int ALLOC_STAT_SLOTS = 16;\n+  static size_t _alloc_count[ALLOC_STAT_SLOTS];\n+  static size_t _alloc_size[ALLOC_STAT_SLOTS];\n+  static size_t _total_obj_count;\n+  static size_t _total_obj_size; \/\/ in HeapWords\n+\n+  static void count_allocation(size_t size);\n+  static void print_stats();\n","filename":"src\/hotspot\/share\/cds\/heapShared.hpp","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -1229,1 +1229,1 @@\n-uint ciEnv::compile_id() {\n+int ciEnv::compile_id() {\n","filename":"src\/hotspot\/share\/ci\/ciEnv.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -369,1 +369,1 @@\n-  uint compile_id();  \/\/ task()->compile_id()\n+  int compile_id();  \/\/ task()->compile_id()\n","filename":"src\/hotspot\/share\/ci\/ciEnv.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -55,7 +55,0 @@\n-\n-ciType* ciMethodType::ptype_at(int index) const {\n-  GUARDED_VM_ENTRY(\n-    oop ptype = java_lang_invoke_MethodType::ptype(get_oop(), index);\n-    return class_to_citype(ptype);\n-  )\n-}\n","filename":"src\/hotspot\/share\/ci\/ciMethodType.cpp","additions":1,"deletions":8,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,3 +46,1 @@\n-  int ptype_slot_count() const ;\n-\n-  ciType* ptype_at(int index) const;\n+  int ptype_slot_count() const;\n","filename":"src\/hotspot\/share\/ci\/ciMethodType.hpp","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -145,0 +145,2 @@\n+#define JAVA_21_VERSION                   65\n+\n@@ -2261,3 +2263,1 @@\n-\/\/ The promoted_flags parameter is used to pass relevant access_flags\n-\/\/ from the method back up to the containing klass. These flag values\n-\/\/ are added to klass's access_flags.\n+\/\/ The has_localvariable_table parameter is used to pass up the value to InstanceKlass.\n@@ -2268,1 +2268,1 @@\n-                                      AccessFlags* const promoted_flags,\n+                                      bool* const has_localvariable_table,\n@@ -2272,1 +2272,1 @@\n-  assert(promoted_flags != NULL, \"invariant\");\n+  assert(has_localvariable_table != NULL, \"invariant\");\n@@ -2821,1 +2821,1 @@\n-    promoted_flags->set_has_localvariable_table();\n+    *has_localvariable_table = true;\n@@ -2877,3 +2877,0 @@\n-\/\/ The promoted_flags parameter is used to pass relevant access_flags\n-\/\/ from the methods back up to the containing klass. These flag values\n-\/\/ are added to klass's access_flags.\n@@ -2883,1 +2880,1 @@\n-                                    AccessFlags* promoted_flags,\n+                                    bool* const has_localvariable_table,\n@@ -2888,1 +2885,1 @@\n-  assert(promoted_flags != NULL, \"invariant\");\n+  assert(has_localvariable_table != NULL, \"invariant\");\n@@ -2908,1 +2905,1 @@\n-                                    promoted_flags,\n+                                    has_localvariable_table,\n@@ -5334,0 +5331,4 @@\n+  if (_has_localvariable_table) {\n+    ik->set_has_localvariable_table(true);\n+  }\n+\n@@ -5597,0 +5598,1 @@\n+  _has_localvariable_table(false),\n@@ -5902,1 +5904,0 @@\n-  AccessFlags promoted_flags;\n@@ -5905,1 +5906,1 @@\n-                &promoted_flags,\n+                &_has_localvariable_table,\n@@ -5912,3 +5913,0 @@\n-  \/\/ promote flags from parse_methods() to the klass' flags\n-  _access_flags.add_promoted_flags(promoted_flags.as_int());\n-\n@@ -6001,1 +5999,4 @@\n-    _super_klass = (const InstanceKlass*)\n+    if (loader.is_null() && super_class_name == vmSymbols::java_lang_Object()) {\n+      _super_klass = vmClasses::Object_klass();\n+    } else {\n+      _super_klass = (const InstanceKlass*)\n@@ -6008,0 +6009,1 @@\n+    }\n","filename":"src\/hotspot\/share\/classfile\/classFileParser.cpp","additions":20,"deletions":18,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -190,0 +190,1 @@\n+  bool _has_localvariable_table;\n@@ -270,1 +271,1 @@\n-                       AccessFlags* const promoted_flags,\n+                       bool* const has_localvariable_table,\n@@ -275,1 +276,1 @@\n-                     AccessFlags* const promoted_flags,\n+                     bool* const has_localvariable_table,\n","filename":"src\/hotspot\/share\/classfile\/classFileParser.hpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -1717,1 +1717,1 @@\n-  return (JavaThread*)java_thread->address_field(_eetop_offset);\n+  return reinterpret_cast<JavaThread*>(java_thread->address_field(_eetop_offset));\n@@ -2495,1 +2495,2 @@\n-  char* buf = NEW_RESOURCE_ARRAY(char, buf_len + 64);\n+  const size_t buf_size = buf_len + 64;\n+  char* buf = NEW_RESOURCE_ARRAY(char, buf_size);\n@@ -2498,1 +2499,1 @@\n-  sprintf(buf, \"\\tat %s.%s(\", klass_name, method_name);\n+  size_t buf_off = os::snprintf_checked(buf, buf_size, \"\\tat %s.%s(\", klass_name, method_name);\n@@ -2503,1 +2504,1 @@\n-      sprintf(buf + (int)strlen(buf), \"%s@%s\/\", module_name, module_version);\n+      buf_off += os::snprintf_checked(buf + buf_off, buf_size - buf_off, \"%s@%s\/\", module_name, module_version);\n@@ -2505,1 +2506,1 @@\n-      sprintf(buf + (int)strlen(buf), \"%s\/\", module_name);\n+      buf_off += os::snprintf_checked(buf + buf_off, buf_size - buf_off, \"%s\/\", module_name);\n@@ -2520,1 +2521,1 @@\n-        sprintf(buf + (int)strlen(buf), \"%s:%d)\", source_file_name, line_number);\n+        buf_off += os::snprintf_checked(buf + buf_off, buf_size - buf_off, \"%s:%d)\", source_file_name, line_number);\n@@ -2523,1 +2524,1 @@\n-        sprintf(buf + (int)strlen(buf), \"%s)\", source_file_name);\n+        buf_off += os::snprintf_checked(buf + buf_off, buf_size - buf_off, \"%s)\", source_file_name);\n@@ -2526,1 +2527,1 @@\n-        sprintf(buf + (int)strlen(buf), \"Unknown Source)\");\n+        buf_off += os::snprintf_checked(buf + buf_off, buf_size - buf_off, \"Unknown Source)\");\n@@ -2530,1 +2531,1 @@\n-        sprintf(buf + (int)strlen(buf), \"(nmethod \" INTPTR_FORMAT \")\", (intptr_t)nm);\n+        os::snprintf_checked(buf + buf_off, buf_size - buf_off, \"(nmethod \" INTPTR_FORMAT \")\", (intptr_t)nm);\n","filename":"src\/hotspot\/share\/classfile\/javaClasses.cpp","additions":10,"deletions":9,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -50,1 +50,1 @@\n-  LoaderConstraint(InstanceKlass* klass, oop class_loader1, oop class_loader2) :\n+  LoaderConstraint(InstanceKlass* klass, ClassLoaderData* loader1, ClassLoaderData* loader2) :\n@@ -53,2 +53,2 @@\n-    add_loader(class_loader1);\n-    add_loader(class_loader2);\n+    add_loader_data(loader1);\n+    add_loader_data(loader2);\n@@ -64,1 +64,1 @@\n-  void extend_loader_constraint(Symbol* class_name, Handle loader, InstanceKlass* klass);\n+  void extend_loader_constraint(Symbol* class_name, ClassLoaderData* loader, InstanceKlass* klass);\n@@ -74,5 +74,0 @@\n-\n-  \/\/ convenience\n-  void add_loader(oop p) {\n-    _loaders->push(ClassLoaderData::class_loader_data(p));\n-  }\n@@ -117,1 +112,1 @@\n-                                                Handle loader,\n+                                                ClassLoaderData* loader,\n@@ -119,1 +114,1 @@\n-  add_loader(loader());\n+  add_loader_data(loader);\n@@ -125,1 +120,1 @@\n-               ClassLoaderData::class_loader_data(loader())->loader_name_and_id(),\n+               loader->loader_name_and_id(),\n@@ -140,1 +135,1 @@\n-                                    Symbol* name, Handle loader) {\n+                                    Symbol* name, ClassLoaderData* loader_data) {\n@@ -148,2 +143,0 @@\n-  ClassLoaderData* loader_data = ClassLoaderData::class_loader_data(loader());\n-\n@@ -165,1 +158,2 @@\n-void LoaderConstraintTable::add_loader_constraint(Symbol* name, InstanceKlass* klass, oop class_loader1, oop class_loader2) {\n+void LoaderConstraintTable::add_loader_constraint(Symbol* name, InstanceKlass* klass,\n+                                                  ClassLoaderData* loader1, ClassLoaderData* loader2) {\n@@ -167,1 +161,1 @@\n-  LoaderConstraint* constraint = new LoaderConstraint(klass, class_loader1, class_loader2);\n+  LoaderConstraint* constraint = new LoaderConstraint(klass, loader1, loader2);\n@@ -259,1 +253,1 @@\n-                        Handle class_loader1, Handle class_loader2) {\n+                        ClassLoaderData* loader1, ClassLoaderData* loader2) {\n@@ -266,2 +260,2 @@\n-                  ClassLoaderData::class_loader_data(class_loader1())->loader_name_and_id(),\n-                  ClassLoaderData::class_loader_data(class_loader2())->loader_name_and_id(),\n+                  loader1->loader_name_and_id(),\n+                  loader2->loader_name_and_id(),\n@@ -273,2 +267,2 @@\n-                                      InstanceKlass* klass1, Handle class_loader1,\n-                                      InstanceKlass* klass2, Handle class_loader2) {\n+                                      InstanceKlass* klass1, ClassLoaderData* loader1,\n+                                      InstanceKlass* klass2, ClassLoaderData* loader2) {\n@@ -285,1 +279,1 @@\n-                             class_loader1, class_loader2);\n+                             loader1, loader2);\n@@ -291,1 +285,1 @@\n-  LoaderConstraint* pp1 = find_loader_constraint(class_name, class_loader1);\n+  LoaderConstraint* pp1 = find_loader_constraint(class_name, loader1);\n@@ -298,1 +292,1 @@\n-                               class_loader1, class_loader2);\n+                               loader1, loader2);\n@@ -306,1 +300,1 @@\n-  LoaderConstraint* pp2 = find_loader_constraint(class_name, class_loader2);\n+  LoaderConstraint* pp2 = find_loader_constraint(class_name, loader2);\n@@ -313,1 +307,1 @@\n-                               class_loader1, class_loader2);\n+                               loader1, loader2);\n@@ -323,1 +317,1 @@\n-    add_loader_constraint(class_name, klass, class_loader1(), class_loader2());\n+    add_loader_constraint(class_name, klass, loader1, loader2);\n@@ -329,3 +323,2 @@\n-                    ClassLoaderData::class_loader_data(class_loader1())->loader_name_and_id(),\n-                    ClassLoaderData::class_loader_data(class_loader2())->loader_name_and_id()\n-                    );\n+                    loader1->loader_name_and_id(),\n+                    loader2->loader_name_and_id());\n@@ -342,2 +335,1 @@\n-                      ClassLoaderData::class_loader_data(class_loader1())->loader_name_and_id()\n-                      );\n+                      loader1->loader_name_and_id());\n@@ -349,1 +341,1 @@\n-    pp2->extend_loader_constraint(class_name, class_loader1, klass);\n+    pp2->extend_loader_constraint(class_name, loader1, klass);\n@@ -351,1 +343,1 @@\n-    pp1->extend_loader_constraint(class_name, class_loader2, klass);\n+    pp1->extend_loader_constraint(class_name, loader1, klass);\n@@ -362,1 +354,1 @@\n-                                            Handle loader,\n+                                            ClassLoaderData* loader,\n@@ -372,1 +364,1 @@\n-                 ClassLoaderData::class_loader_data(loader())->loader_name_and_id());\n+                 loader->loader_name_and_id());\n@@ -383,1 +375,1 @@\n-                   ClassLoaderData::class_loader_data(loader())->loader_name_and_id());\n+                   loader->loader_name_and_id());\n@@ -391,1 +383,1 @@\n-                                                       Handle loader) {\n+                                                             ClassLoaderData* loader) {\n","filename":"src\/hotspot\/share\/classfile\/loaderConstraints.cpp","additions":31,"deletions":39,"binary":false,"changes":70,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n-  static LoaderConstraint* find_loader_constraint(Symbol* name, Handle loader);\n+  static LoaderConstraint* find_loader_constraint(Symbol* name, ClassLoaderData* loader);\n@@ -40,1 +40,2 @@\n-  static void add_loader_constraint(Symbol* name, InstanceKlass* klass, oop class_loader1, oop class_loader2);\n+  static void add_loader_constraint(Symbol* name, InstanceKlass* klass,\n+                                    ClassLoaderData* loader1, ClassLoaderData* loader2);\n@@ -47,2 +48,2 @@\n-  static bool add_entry(Symbol* name, InstanceKlass* klass1, Handle loader1,\n-                        InstanceKlass* klass2, Handle loader2);\n+  static bool add_entry(Symbol* name, InstanceKlass* klass1, ClassLoaderData* loader1,\n+                        InstanceKlass* klass2, ClassLoaderData* loader2);\n@@ -56,1 +57,1 @@\n-  static InstanceKlass* find_constrained_klass(Symbol* name, Handle loader);\n+  static InstanceKlass* find_constrained_klass(Symbol* name, ClassLoaderData* loader);\n@@ -59,1 +60,1 @@\n-  static bool check_or_update(InstanceKlass* k, Handle loader, Symbol* name);\n+  static bool check_or_update(InstanceKlass* k, ClassLoaderData* loader, Symbol* name);\n","filename":"src\/hotspot\/share\/classfile\/loaderConstraints.hpp","additions":7,"deletions":6,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -183,0 +183,5 @@\n+\/\/ Helper function\n+inline ClassLoaderData* class_loader_data(Handle class_loader) {\n+  return ClassLoaderData::class_loader_data(class_loader());\n+}\n+\n@@ -1067,1 +1072,1 @@\n-      pkg_entry = ClassLoaderData::class_loader_data(class_loader())->packages()->lookup_only(pkg_name);\n+      pkg_entry = class_loader_data(class_loader)->packages()->lookup_only(pkg_name);\n@@ -1183,1 +1188,1 @@\n-  assert(shared_nest_host->class_loader_data() == ClassLoaderData::class_loader_data(class_loader()), \"mismatched class loader data\");\n+  assert(shared_nest_host->class_loader_data() == class_loader_data(class_loader), \"mismatched class loader data\");\n@@ -1231,1 +1236,1 @@\n-  ClassLoaderData* loader_data = ClassLoaderData::class_loader_data(class_loader());\n+  ClassLoaderData* loader_data = class_loader_data(class_loader);\n@@ -1267,1 +1272,0 @@\n-    ClassLoaderData *loader_data = class_loader_data(class_loader);\n@@ -1272,1 +1276,1 @@\n-      pkg_entry = loader_data->packages()->lookup_only(pkg_name);\n+      pkg_entry = class_loader_data(class_loader)->packages()->lookup_only(pkg_name);\n@@ -1413,1 +1417,1 @@\n-    loaded_class->class_loader() != class_loader()) {\n+      loaded_class->class_loader() != class_loader()) {\n@@ -1415,1 +1419,2 @@\n-    check_constraints(loaded_class, class_loader, false, CHECK_NULL);\n+    ClassLoaderData* loader_data = class_loader_data(class_loader);\n+    check_constraints(loaded_class, loader_data, false, CHECK_NULL);\n@@ -1422,1 +1427,0 @@\n-    ClassLoaderData* loader_data = class_loader_data(class_loader);\n@@ -1428,1 +1432,1 @@\n-      update_dictionary(THREAD, loaded_class, class_loader);\n+      update_dictionary(THREAD, loaded_class, loader_data);\n@@ -1472,3 +1476,1 @@\n-  Symbol*  name_h = k->name();\n-  Dictionary* dictionary = loader_data->dictionary();\n-  check_constraints(k, class_loader, true, CHECK);\n+  check_constraints(k, loader_data, true, CHECK);\n@@ -1498,1 +1500,1 @@\n-    update_dictionary(THREAD, k, class_loader);\n+    update_dictionary(THREAD, k, loader_data);\n@@ -1531,1 +1533,1 @@\n-  Symbol*  name_h = k->name(); \/\/ passed in class_name may be null\n+  Symbol* name_h = k->name();\n@@ -1728,1 +1730,1 @@\n-                                         Handle class_loader,\n+                                         ClassLoaderData* loader_data,\n@@ -1736,2 +1738,1 @@\n-    Symbol *name = k->name();\n-    ClassLoaderData *loader_data = class_loader_data(class_loader);\n+    Symbol* name = k->name();\n@@ -1758,1 +1759,1 @@\n-      if (LoaderConstraintTable::check_or_update(k, class_loader, name) == false) {\n+      if (LoaderConstraintTable::check_or_update(k, loader_data, name) == false) {\n@@ -1763,2 +1764,2 @@\n-        Klass *existing_klass = LoaderConstraintTable::find_constrained_klass(name, class_loader);\n-        if (existing_klass != NULL && existing_klass->class_loader() != class_loader()) {\n+        Klass *existing_klass = LoaderConstraintTable::find_constrained_klass(name, loader_data);\n+        if (existing_klass != NULL && existing_klass->class_loader_data() != loader_data) {\n@@ -1787,1 +1788,1 @@\n-                                         Handle class_loader) {\n+                                         ClassLoaderData* loader_data) {\n@@ -1790,2 +1791,1 @@\n-  Symbol*  name  = k->name();\n-  ClassLoaderData *loader_data = class_loader_data(class_loader);\n+  Symbol* name  = k->name();\n@@ -1793,2 +1793,1 @@\n-  {\n-    MutexLocker mu1(SystemDictionary_lock);\n+  MutexLocker mu1(SystemDictionary_lock);\n@@ -1796,7 +1795,5 @@\n-    \/\/ Make a new dictionary entry.\n-    Dictionary* dictionary = loader_data->dictionary();\n-    InstanceKlass* sd_check = dictionary->find_class(current, name);\n-    if (sd_check == NULL) {\n-      dictionary->add_klass(current, name, k);\n-    }\n-    SystemDictionary_lock->notify_all();\n+  \/\/ Make a new dictionary entry.\n+  Dictionary* dictionary = loader_data->dictionary();\n+  InstanceKlass* sd_check = dictionary->find_class(current, name);\n+  if (sd_check == NULL) {\n+    dictionary->add_klass(current, name, k);\n@@ -1804,0 +1801,1 @@\n+  SystemDictionary_lock->notify_all();\n@@ -1834,1 +1832,1 @@\n-      klass = LoaderConstraintTable::find_constrained_klass(ss.as_symbol(), class_loader);\n+      klass = LoaderConstraintTable::find_constrained_klass(ss.as_symbol(), class_loader_data(class_loader));\n@@ -1843,1 +1841,1 @@\n-    klass = LoaderConstraintTable::find_constrained_klass(class_name, class_loader);\n+    klass = LoaderConstraintTable::find_constrained_klass(class_name, class_loader_data(class_loader));\n@@ -1883,2 +1881,2 @@\n-    bool result = LoaderConstraintTable::add_entry(constraint_name, klass1, class_loader1,\n-                                                   klass2, class_loader2);\n+    bool result = LoaderConstraintTable::add_entry(constraint_name, klass1, loader_data1,\n+                                                   klass2, loader_data2);\n@@ -2446,4 +2444,0 @@\n-ClassLoaderData* SystemDictionary::class_loader_data(Handle class_loader) {\n-  return ClassLoaderData::class_loader_data(class_loader());\n-}\n-\n","filename":"src\/hotspot\/share\/classfile\/systemDictionary.cpp","additions":34,"deletions":40,"binary":false,"changes":74,"status":"modified"},{"patch":"@@ -204,4 +204,0 @@\n-  \/\/ Returns the class loader data to be used when looking up\/updating the\n-  \/\/ system dictionary.\n-  static ClassLoaderData *class_loader_data(Handle class_loader);\n-\n@@ -384,1 +380,1 @@\n-  static void check_constraints(InstanceKlass* k, Handle loader,\n+  static void check_constraints(InstanceKlass* k, ClassLoaderData* loader,\n@@ -386,1 +382,1 @@\n-  static void update_dictionary(JavaThread* current, InstanceKlass* k, Handle loader);\n+  static void update_dictionary(JavaThread* current, InstanceKlass* k, ClassLoaderData* loader_data);\n","filename":"src\/hotspot\/share\/classfile\/systemDictionary.hpp","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -261,1 +261,1 @@\n-static unsigned int  latest_compilation_id   = 0;\n+static int           latest_compilation_id   = 0;\n@@ -662,14 +662,14 @@\n-    unsigned int highest_compilation_id = 0;\n-    size_t       usedSpace     = 0;\n-    size_t       t1Space       = 0;\n-    size_t       t2Space       = 0;\n-    size_t       aliveSpace    = 0;\n-    size_t       disconnSpace  = 0;\n-    size_t       notentrSpace  = 0;\n-    size_t       stubSpace     = 0;\n-    size_t       freeSpace     = 0;\n-    size_t       maxFreeSize   = 0;\n-    HeapBlock*   maxFreeBlock  = NULL;\n-    bool         insane        = false;\n-\n-    unsigned int n_methods     = 0;\n+    int          highest_compilation_id = 0;\n+    size_t       usedSpace              = 0;\n+    size_t       t1Space                = 0;\n+    size_t       t2Space                = 0;\n+    size_t       aliveSpace             = 0;\n+    size_t       disconnSpace           = 0;\n+    size_t       notentrSpace           = 0;\n+    size_t       stubSpace              = 0;\n+    size_t       freeSpace              = 0;\n+    size_t       maxFreeSize            = 0;\n+    HeapBlock*   maxFreeBlock           = NULL;\n+    bool         insane                 = false;\n+\n+    unsigned int n_methods              = 0;\n@@ -682,1 +682,1 @@\n-      unsigned int compile_id = 0;\n+      int compile_id = 0;\n@@ -1962,4 +1962,4 @@\n-      unsigned int age1      = StatArray[ix].t1_age;\n-      unsigned int age2      = StatArray[ix].t2_age;\n-      unsigned int agex      = StatArray[ix].tx_age;\n-      unsigned int age       = age1 > age2 ? age1 : age2;\n+      int age1      = StatArray[ix].t1_age;\n+      int age2      = StatArray[ix].t2_age;\n+      int agex      = StatArray[ix].tx_age;\n+      int age       = age1 > age2 ? age1 : age2;\n@@ -2250,3 +2250,1 @@\n-  unsigned int indicator = 0;\n-  unsigned int age_range = 256;\n-  unsigned int range_beg = latest_compilation_id;\n+  int range_beg = latest_compilation_id;\n@@ -2266,2 +2264,2 @@\n-  unsigned int age_range = 256;\n-  unsigned int range_beg = latest_compilation_id;\n+  int age_range = 256;\n+  int range_beg = latest_compilation_id;\n@@ -2271,1 +2269,1 @@\n-    out->print_cr(\"  %d - %6d to %6d\", indicator, range_beg, latest_compilation_id - latest_compilation_id\/age_range);\n+    out->print_cr(\"  %u - %6d to %6d\", indicator, range_beg, latest_compilation_id - latest_compilation_id\/age_range);\n@@ -2296,1 +2294,1 @@\n-void CodeHeapState::print_age_single(outputStream* out, unsigned int age) {\n+void CodeHeapState::print_age_single(outputStream* out, int age) {\n@@ -2298,1 +2296,1 @@\n-  unsigned int age_range = 256;\n+  int age_range = 256;\n","filename":"src\/hotspot\/share\/code\/codeHeapState.cpp","additions":26,"deletions":28,"binary":false,"changes":54,"status":"modified"},{"patch":"@@ -91,1 +91,1 @@\n-  static void print_age_single(outputStream *ast, unsigned int age);\n+  static void print_age_single(outputStream *ast, int age);\n@@ -122,3 +122,3 @@\n-    unsigned int       t1_age;      \/\/ oldest compilation_id of tier1 nMethods.\n-    unsigned int       t2_age;      \/\/ oldest compilation_id of tier2 nMethods.\n-    unsigned int       tx_age;      \/\/ oldest compilation_id of inactive\/not entrant nMethods.\n+    int       t1_age;      \/\/ oldest compilation_id of tier1 nMethods.\n+    int       t2_age;      \/\/ oldest compilation_id of tier2 nMethods.\n+    int       tx_age;      \/\/ oldest compilation_id of inactive\/not entrant nMethods.\n","filename":"src\/hotspot\/share\/code\/codeHeapState.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -780,1 +780,2 @@\n-      char xn[12]; sprintf(xn, \"x%d\", j);\n+      char xn[12];\n+      os::snprintf_checked(xn, sizeof(xn), \"x%d\", j);\n","filename":"src\/hotspot\/share\/code\/dependencies.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -39,0 +39,3 @@\n+#include <new>\n+#include <type_traits>\n+\n@@ -238,1 +241,2 @@\n-  return new(_rh) Relocation(t);\n+  _rh = RelocationHolder::none;\n+  return _rh.reloc();\n@@ -241,0 +245,4 @@\n+\/\/ Verify all the destructors are trivial, so we don't need to worry about\n+\/\/ destroying old contents of a RelocationHolder being assigned or destroyed.\n+#define VERIFY_TRIVIALLY_DESTRUCTIBLE_AUX(Reloc) \\\n+  static_assert(std::is_trivially_destructible<Reloc>::value, \"must be\");\n@@ -242,1 +250,18 @@\n-\/\/\/\/\/\/\/\/ Methods for flyweight Relocation types\n+#define VERIFY_TRIVIALLY_DESTRUCTIBLE(name) \\\n+  VERIFY_TRIVIALLY_DESTRUCTIBLE_AUX(PASTE_TOKENS(name, _Relocation));\n+\n+APPLY_TO_RELOCATIONS(VERIFY_TRIVIALLY_DESTRUCTIBLE)\n+VERIFY_TRIVIALLY_DESTRUCTIBLE_AUX(Relocation)\n+\n+#undef VERIFY_TRIVIALLY_DESTRUCTIBLE_AUX\n+#undef VERIFY_TRIVIALLY_DESTRUCTIBLE\n+\n+\/\/ Define all the copy_into functions.  These rely on all Relocation types\n+\/\/ being trivially destructible (verified above).  So it doesn't matter\n+\/\/ whether the target holder has been previously initialized or not.  There's\n+\/\/ no need to consider that distinction and destruct the relocation in an\n+\/\/ already initialized holder.\n+#define DEFINE_COPY_INTO_AUX(Reloc)                             \\\n+  void Reloc::copy_into(RelocationHolder& holder) const {       \\\n+    copy_into_helper(*this, holder);                            \\\n+  }\n@@ -244,0 +269,10 @@\n+#define DEFINE_COPY_INTO(name) \\\n+  DEFINE_COPY_INTO_AUX(PASTE_TOKENS(name, _Relocation))\n+\n+APPLY_TO_RELOCATIONS(DEFINE_COPY_INTO)\n+DEFINE_COPY_INTO_AUX(Relocation)\n+\n+#undef DEFINE_COPY_INTO_AUX\n+#undef DEFINE_COPY_INTO\n+\n+\/\/\/\/\/\/\/\/ Methods for RelocationHolder\n@@ -267,0 +302,2 @@\n+\/\/\/\/\/\/\/\/ Methods for flyweight Relocation types\n+\n","filename":"src\/hotspot\/share\/code\/relocInfo.cpp","additions":39,"deletions":2,"binary":false,"changes":41,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-#include \"utilities\/macros.hpp\"\n@@ -33,0 +32,3 @@\n+#include \"utilities\/macros.hpp\"\n+\n+#include <new>\n@@ -474,1 +476,0 @@\n-  friend class CodeSection;\n@@ -477,4 +478,40 @@\n-  \/\/ this preallocated memory must accommodate all subclasses of Relocation\n-  \/\/ (this number is assertion-checked in Relocation::operator new)\n-  enum { _relocbuf_size = 5 };\n-  void* _relocbuf[ _relocbuf_size ];\n+  \/\/ A Relocation is \"held\" by placement constructing a Relocation into\n+  \/\/ _relocbuf. Hence, _relocbuf must accomodate all subclasses of\n+  \/\/ Relocation. We also need the Relocation base class to be at the same\n+  \/\/ address as the start of the object, e.g. at the address of _relocbuf.\n+  \/\/ Both of these requirements are checked (see emplace_relocation).\n+  \/\/ The placement of the base class subobject isn't guaranteed by C++, since\n+  \/\/ these aren't standard layout classes, but all supported implementations\n+  \/\/ provide that behavior.  If that changes, we can instead add a Relocation*\n+  \/\/ _reloc member to capture the result of the placement new, and use that to\n+  \/\/ access the base subobject.\n+  static const size_t _relocbuf_size = 5 * sizeof(void*);\n+  alignas(void*) char _relocbuf[_relocbuf_size];\n+\n+  template<typename Reloc, typename... Args>\n+  void emplace_relocation(const Args&... args) {\n+    static_assert(std::is_base_of<Relocation, Reloc>::value, \"not Relocation\");\n+    static_assert(sizeof(Reloc) <= sizeof(_relocbuf), \"_relocbuf too small\");\n+    Relocation* reloc = ::new (_relocbuf) Reloc(args...);\n+    \/\/ Verify the base class subobject of the object constructed into\n+    \/\/ _relocbuf is at the same address as the derived object.\n+    assert(static_cast<const void*>(reloc) == _relocbuf, \"invariant\");\n+  }\n+\n+  \/\/ Support for Relocation::copy_into.\n+  \/\/ reloc should be a most derived object.\n+  template<typename Reloc>\n+  void copy_into_impl(const Reloc& reloc) {\n+    emplace_relocation<Reloc>(reloc);\n+  }\n+\n+  \/\/ Tag for selecting the constructor below and carrying the type of the\n+  \/\/ relocation object the new holder will (initially) contain.\n+  template<typename Reloc> struct Construct {};\n+\n+  \/\/ Constructor used by construct().  Constructs a new holder containing a\n+  \/\/ relocation of type Reloc that is constructed using the provided args.\n+  template<typename Reloc, typename... Args>\n+  RelocationHolder(Construct<Reloc>, const Args&... args) {\n+    emplace_relocation<Reloc>(args...);\n+  }\n@@ -483,1 +520,1 @@\n-  Relocation* reloc() const { return (Relocation*) &_relocbuf[0]; }\n+  Relocation* reloc() const { return (Relocation*)_relocbuf; }\n@@ -489,1 +526,7 @@\n-  inline RelocationHolder();                \/\/ initializes type to none\n+  \/\/ Return a holder containing a relocation of type Reloc, constructed using args.\n+  template<typename Reloc, typename... Args>\n+  static RelocationHolder construct(const Args&... args) {\n+    return RelocationHolder(Construct<Reloc>(), args...);\n+  }\n+\n+  RelocationHolder();           \/\/ Initializes type to none.\n@@ -491,1 +534,6 @@\n-  inline RelocationHolder(Relocation* r);   \/\/ make a copy\n+  \/\/ Depends on the destructor for all relocation types being trivial\n+  \/\/ (verified in .cpp file).\n+  ~RelocationHolder() = default;\n+\n+  RelocationHolder(const RelocationHolder& from);\n+  RelocationHolder& operator=(const RelocationHolder& from);\n@@ -639,1 +687,0 @@\n-  friend class RelocationHolder;\n@@ -661,1 +708,1 @@\n-  Relocation(relocInfo::relocType rtype) : _binding(NULL), _rtype(rtype) { }\n+  explicit Relocation(relocInfo::relocType rtype) : _binding(NULL), _rtype(rtype) { }\n@@ -663,2 +710,7 @@\n-  static RelocationHolder newHolder() {\n-    return RelocationHolder();\n+  \/\/ Helper for copy_into functions for derived classes.\n+  \/\/ Forwards operation to RelocationHolder::copy_into_impl so that\n+  \/\/ RelocationHolder only needs to befriend this class, rather than all\n+  \/\/ derived classes that implement copy_into.\n+  template<typename Reloc>\n+  static void copy_into_helper(const Reloc& reloc, RelocationHolder& holder) {\n+    holder.copy_into_impl(reloc);\n@@ -668,6 +720,0 @@\n-  void* operator new(size_t size, const RelocationHolder& holder) throw() {\n-    assert(size <= sizeof(holder._relocbuf), \"Make _relocbuf bigger!\");\n-    assert((void* const *)holder.reloc() == &holder._relocbuf[0], \"ptrs must agree\");\n-    return holder.reloc();\n-  }\n-\n@@ -796,0 +842,9 @@\n+  \/\/ Make a filler relocation.\n+  Relocation() : Relocation(relocInfo::none) {}\n+\n+  \/\/ Intentionally public non-virtual destructor, even though polymorphic.  We\n+  \/\/ never heap allocate a Relocation, so never delete through a base pointer.\n+  \/\/ RelocationHolder depends on the destructor for all relocation types being\n+  \/\/ trivial, so this must not be virtual (and hence non-trivial).\n+  ~Relocation() = default;\n+\n@@ -798,0 +853,3 @@\n+  \/\/ Copy this relocation into holder.\n+  virtual void copy_into(RelocationHolder& holder) const;\n+\n@@ -821,4 +879,3 @@\n-inline RelocationHolder::RelocationHolder() {\n-  \/\/ initialize the vtbl, just to keep things type-safe\n-  new(*this) Relocation(relocInfo::none);\n-}\n+inline RelocationHolder::RelocationHolder() :\n+  RelocationHolder(Construct<Relocation>())\n+{}\n@@ -826,0 +883,3 @@\n+inline RelocationHolder::RelocationHolder(const RelocationHolder& from) {\n+  from.reloc()->copy_into(*this);\n+}\n@@ -827,5 +887,6 @@\n-inline RelocationHolder::RelocationHolder(Relocation* r) {\n-  \/\/ wordwise copy from r (ok if it copies garbage after r)\n-  for (int i = 0; i < _relocbuf_size; i++) {\n-    _relocbuf[i] = ((void**)r)[i];\n-  }\n+inline RelocationHolder& RelocationHolder::operator=(const RelocationHolder& from) {\n+  \/\/ All Relocation types are trivially destructible (verified in .cpp file),\n+  \/\/ so we don't need to destruct our old value before copying over it.\n+  \/\/ If not for that we would need to decide what to do about self-assignment.\n+  from.reloc()->copy_into(*this);\n+  return *this;\n@@ -879,1 +940,1 @@\n-  friend class RelocIterator;\n+  friend class RelocationHolder;\n@@ -885,3 +946,1 @@\n-    RelocationHolder rh = newHolder();\n-    new(rh) post_call_nop_Relocation();\n-    return rh;\n+    return RelocationHolder::construct<post_call_nop_Relocation>();\n@@ -889,0 +948,2 @@\n+\n+  void copy_into(RelocationHolder& holder) const;\n@@ -892,1 +953,1 @@\n-  friend class RelocIterator;\n+  friend class RelocationHolder;\n@@ -898,3 +959,1 @@\n-    RelocationHolder rh = newHolder();\n-    new(rh) entry_guard_Relocation();\n-    return rh;\n+    return RelocationHolder::construct<entry_guard_Relocation>();\n@@ -902,0 +961,2 @@\n+\n+  void copy_into(RelocationHolder& holder) const;\n@@ -926,3 +987,1 @@\n-    RelocationHolder rh = newHolder();\n-    new(rh) oop_Relocation(oop_index, offset);\n-    return rh;\n+    return RelocationHolder::construct<oop_Relocation>(oop_index, offset);\n@@ -938,3 +997,1 @@\n-    RelocationHolder rh = newHolder();\n-    new(rh) oop_Relocation(oop_index, offset);\n-    return rh;\n+    return RelocationHolder::construct<oop_Relocation>(oop_index, offset);\n@@ -943,0 +1000,2 @@\n+  void copy_into(RelocationHolder& holder) const;\n+\n@@ -950,1 +1009,1 @@\n-  friend class RelocIterator;\n+  friend class RelocationHolder;\n@@ -983,3 +1042,1 @@\n-    RelocationHolder rh = newHolder();\n-    new(rh) metadata_Relocation(metadata_index, offset);\n-    return rh;\n+    return RelocationHolder::construct<metadata_Relocation>(metadata_index, offset);\n@@ -991,3 +1048,1 @@\n-    RelocationHolder rh = newHolder();\n-    new(rh) metadata_Relocation(metadata_index, offset);\n-    return rh;\n+    return RelocationHolder::construct<metadata_Relocation>(metadata_index, offset);\n@@ -996,0 +1051,2 @@\n+  void copy_into(RelocationHolder& holder) const;\n+\n@@ -1003,1 +1060,1 @@\n-  friend class RelocIterator;\n+  friend class RelocationHolder;\n@@ -1038,3 +1095,1 @@\n-    RelocationHolder rh = newHolder();\n-    new(rh) virtual_call_Relocation(cached_value, method_index);\n-    return rh;\n+    return RelocationHolder::construct<virtual_call_Relocation>(cached_value, method_index);\n@@ -1043,0 +1098,2 @@\n+  void copy_into(RelocationHolder& holder) const;\n+\n@@ -1054,1 +1111,1 @@\n-  friend class RelocIterator;\n+  friend class RelocationHolder;\n@@ -1077,3 +1134,1 @@\n-    RelocationHolder rh = newHolder();\n-    new(rh) opt_virtual_call_Relocation(method_index);\n-    return rh;\n+    return RelocationHolder::construct<opt_virtual_call_Relocation>(method_index);\n@@ -1082,0 +1137,2 @@\n+  void copy_into(RelocationHolder& holder) const;\n+\n@@ -1089,1 +1146,1 @@\n-  friend class RelocIterator;\n+  friend class RelocationHolder;\n@@ -1109,3 +1166,1 @@\n-    RelocationHolder rh = newHolder();\n-    new(rh) static_call_Relocation(method_index);\n-    return rh;\n+    return RelocationHolder::construct<static_call_Relocation>(method_index);\n@@ -1114,0 +1169,2 @@\n+  void copy_into(RelocationHolder& holder) const;\n+\n@@ -1121,1 +1178,1 @@\n-  friend class RelocIterator;\n+  friend class RelocationHolder;\n@@ -1140,3 +1197,1 @@\n-    RelocationHolder rh = newHolder();\n-    new(rh) static_stub_Relocation(static_call);\n-    return rh;\n+    return RelocationHolder::construct<static_stub_Relocation>(static_call);\n@@ -1145,0 +1200,2 @@\n+  void copy_into(RelocationHolder& holder) const;\n+\n@@ -1152,1 +1209,1 @@\n-  friend class RelocIterator;\n+  friend class RelocationHolder;\n@@ -1169,3 +1226,1 @@\n-    RelocationHolder rh = newHolder();\n-    new(rh) runtime_call_Relocation();\n-    return rh;\n+    return RelocationHolder::construct<runtime_call_Relocation>();\n@@ -1174,0 +1229,2 @@\n+  void copy_into(RelocationHolder& holder) const;\n+\n@@ -1175,1 +1232,1 @@\n-  friend class RelocIterator;\n+  friend class RelocationHolder;\n@@ -1177,2 +1234,0 @@\n-\n- public:\n@@ -1185,3 +1240,1 @@\n-    RelocationHolder rh = newHolder();\n-    new(rh) runtime_call_w_cp_Relocation();\n-    return rh;\n+    return RelocationHolder::construct<runtime_call_w_cp_Relocation>();\n@@ -1190,0 +1243,2 @@\n+  void copy_into(RelocationHolder& holder) const;\n+\n@@ -1191,1 +1246,1 @@\n-  friend class RelocIterator;\n+  friend class RelocationHolder;\n@@ -1221,2 +1276,1 @@\n-    RelocationHolder rh = newHolder();\n-    return (new (rh) trampoline_stub_Relocation(static_call));\n+    return RelocationHolder::construct<trampoline_stub_Relocation>(static_call);\n@@ -1225,0 +1279,2 @@\n+  void copy_into(RelocationHolder& holder) const;\n+\n@@ -1232,1 +1288,1 @@\n-  friend class RelocIterator;\n+  friend class RelocationHolder;\n@@ -1251,3 +1307,1 @@\n-    RelocationHolder rh = newHolder();\n-    new(rh) external_word_Relocation(target);\n-    return rh;\n+    return RelocationHolder::construct<external_word_Relocation>(target);\n@@ -1259,3 +1313,1 @@\n-    RelocationHolder rh = newHolder();\n-    new(rh) external_word_Relocation(NULL);\n-    return rh;\n+    return RelocationHolder::construct<external_word_Relocation>(nullptr);\n@@ -1264,0 +1316,2 @@\n+  void copy_into(RelocationHolder& holder) const;\n+\n@@ -1277,1 +1331,1 @@\n-  friend class RelocIterator;\n+  friend class RelocationHolder;\n@@ -1299,3 +1353,1 @@\n-    RelocationHolder rh = newHolder();\n-    new(rh) internal_word_Relocation(target);\n-    return rh;\n+    return RelocationHolder::construct<internal_word_Relocation>(target);\n@@ -1306,3 +1358,1 @@\n-    RelocationHolder rh = newHolder();\n-    new(rh) internal_word_Relocation(NULL);\n-    return rh;\n+    return RelocationHolder::construct<internal_word_Relocation>(nullptr);\n@@ -1311,0 +1361,2 @@\n+  void copy_into(RelocationHolder& holder) const;\n+\n@@ -1320,1 +1372,1 @@\n-  friend class RelocIterator;\n+  friend class RelocationHolder;\n@@ -1344,3 +1396,1 @@\n-    RelocationHolder rh = newHolder();\n-    new(rh) section_word_Relocation(target, section);\n-    return rh;\n+    return RelocationHolder::construct<section_word_Relocation>(target, section);\n@@ -1349,0 +1399,2 @@\n+  void copy_into(RelocationHolder& holder) const;\n+\n@@ -1359,1 +1411,1 @@\n-  friend class RelocIterator;\n+  friend class RelocationHolder;\n@@ -1369,0 +1421,2 @@\n+\n+  void copy_into(RelocationHolder& holder) const;\n@@ -1374,0 +1428,2 @@\n+\n+  void copy_into(RelocationHolder& holder) const;\n@@ -1377,9 +1433,9 @@\n-#define EACH_CASE(name)                                         \\\n-inline name##_Relocation* RelocIterator::name##_reloc() {       \\\n-  assert(type() == relocInfo::name##_type, \"type must agree\");  \\\n-  \/* The purpose of the placed \"new\" is to re-use the same *\/   \\\n-  \/* stack storage for each new iteration. *\/                   \\\n-  name##_Relocation* r = new(_rh) name##_Relocation();          \\\n-  r->set_binding(this);                                         \\\n-  r->name##_Relocation::unpack_data();                          \\\n-  return r;                                                     \\\n+#define EACH_CASE_AUX(Accessor, Reloc)                                  \\\n+inline Reloc* RelocIterator::Accessor() {                               \\\n+  static const RelocationHolder proto = RelocationHolder::construct<Reloc>(); \\\n+  assert(type() == proto.type(), \"type must agree\");                    \\\n+  _rh = proto;                                                          \\\n+  Reloc* r = static_cast<Reloc*>(_rh.reloc());                          \\\n+  r->set_binding(this);                                                 \\\n+  r->Reloc::unpack_data();                                              \\\n+  return r;                                                             \\\n@@ -1387,0 +1443,2 @@\n+#define EACH_CASE(name) \\\n+  EACH_CASE_AUX(PASTE_TOKENS(name, _reloc), PASTE_TOKENS(name, _Relocation))\n@@ -1388,0 +1446,1 @@\n+#undef EACH_CASE_AUX\n","filename":"src\/hotspot\/share\/code\/relocInfo.hpp","additions":165,"deletions":106,"binary":false,"changes":271,"status":"modified"},{"patch":"@@ -935,1 +935,1 @@\n-    sprintf(name_buffer, \"%s CompilerThread%d\", _compilers[1]->name(), i);\n+    os::snprintf_checked(name_buffer, sizeof(name_buffer), \"%s CompilerThread%d\", _compilers[1]->name(), i);\n@@ -957,1 +957,1 @@\n-    sprintf(name_buffer, \"C1 CompilerThread%d\", i);\n+    os::snprintf_checked(name_buffer, sizeof(name_buffer), \"C1 CompilerThread%d\", i);\n@@ -1021,1 +1021,1 @@\n-        sprintf(name_buffer, \"%s CompilerThread%d\", _compilers[1]->name(), i);\n+        os::snprintf_checked(name_buffer, sizeof(name_buffer), \"%s CompilerThread%d\", _compilers[1]->name(), i);\n@@ -1569,1 +1569,1 @@\n-uint CompileBroker::assign_compile_id_unlocked(Thread* thread, const methodHandle& method, int osr_bci) {\n+int CompileBroker::assign_compile_id_unlocked(Thread* thread, const methodHandle& method, int osr_bci) {\n@@ -2112,1 +2112,1 @@\n-  uint compile_id = task->compile_id();\n+  int compile_id = task->compile_id();\n@@ -2435,1 +2435,1 @@\n-  uint compile_id = task->compile_id();\n+  int compile_id = task->compile_id();\n@@ -2603,1 +2603,1 @@\n-      sprintf(tier_name, \"Tier%d\", tier);\n+      os::snprintf_checked(tier_name, sizeof(tier_name), \"Tier%d\", tier);\n","filename":"src\/hotspot\/share\/compiler\/compileBroker.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -315,1 +315,1 @@\n-  static uint assign_compile_id_unlocked(Thread* thread, const methodHandle& method, int osr_bci);\n+  static int assign_compile_id_unlocked(Thread* thread, const methodHandle& method, int osr_bci);\n@@ -318,1 +318,1 @@\n-  static uint get_compilation_id() { return _compilation_id; }\n+  static int get_compilation_id() { return _compilation_id; }\n","filename":"src\/hotspot\/share\/compiler\/compileBroker.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -79,1 +79,1 @@\n-  uint                 _compile_id;\n+  int                  _compile_id;\n","filename":"src\/hotspot\/share\/compiler\/compileTask.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -156,1 +156,1 @@\n-  if (TwoOperandLIRForm) {\n+  if (two_operand_lir_form) {\n","filename":"src\/hotspot\/share\/gc\/g1\/c1\/g1BarrierSetC1.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1012,1 +1012,1 @@\n-                    && (if_ctrl->in(0)->is_MultiBranch() && if_ctrl->in(0)->Opcode() == Op_NeverBranch)) {\n+                    && if_ctrl->in(0)->is_NeverBranch()) {\n","filename":"src\/hotspot\/share\/gc\/g1\/c2\/g1BarrierSetC2.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -91,0 +91,4 @@\n+  \/\/ Perform an allocation out of a new allocation region, retiring the current one.\n+  inline HeapWord* attempt_allocation_using_new_region(size_t min_word_size,\n+                                                       size_t desired_word_size,\n+                                                       size_t* actual_word_size);\n@@ -175,5 +179,0 @@\n-  \/\/ Perform an allocation out of a new allocation region, retiring the current one.\n-  inline HeapWord* attempt_allocation_using_new_region(size_t min_word_size,\n-                                                       size_t desired_word_size,\n-                                                       size_t* actual_word_size);\n-\n","filename":"src\/hotspot\/share\/gc\/g1\/g1AllocRegion.hpp","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -257,2 +257,2 @@\n-                                                                              desired_word_size,\n-                                                                              actual_word_size);\n+                                                                               desired_word_size,\n+                                                                               actual_word_size);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Allocator.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -120,4 +120,0 @@\n-  \/\/ Attempt allocation, retiring the current region and allocating a new one. It is\n-  \/\/ assumed that attempt_allocation() has been tried and failed already first.\n-  inline HeapWord* attempt_allocation_using_new_region(size_t word_size);\n-\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Allocator.hpp","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -65,10 +65,0 @@\n-inline HeapWord* G1Allocator::attempt_allocation_using_new_region(size_t word_size) {\n-  uint node_index = current_node_index();\n-  size_t temp;\n-  HeapWord* result = mutator_alloc_region(node_index)->attempt_allocation_using_new_region(word_size, word_size, &temp);\n-  assert(result != NULL || mutator_alloc_region(node_index)->get() == NULL,\n-         \"Must not have a mutator alloc region if there is no memory, but is \" PTR_FORMAT,\n-         p2i(mutator_alloc_region(node_index)->get()));\n-  return result;\n-}\n-\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Allocator.inline.hpp","additions":0,"deletions":10,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -110,2 +110,0 @@\n-  \/\/ skip initial young cards\n-  for (; byte <= last_byte && *byte == G1CardTable::g1_young_card_val(); byte++);\n@@ -113,13 +111,21 @@\n-  if (byte <= last_byte) {\n-    OrderAccess::storeload();\n-    \/\/ Enqueue if necessary.\n-    Thread* thr = Thread::current();\n-    G1DirtyCardQueueSet& qset = G1BarrierSet::dirty_card_queue_set();\n-    G1DirtyCardQueue& queue = G1ThreadLocalData::dirty_card_queue(thr);\n-    for (; byte <= last_byte; byte++) {\n-      CardValue bv = *byte;\n-      if ((bv != G1CardTable::g1_young_card_val()) &&\n-          (bv != G1CardTable::dirty_card_val())) {\n-        *byte = G1CardTable::dirty_card_val();\n-        qset.enqueue(queue, byte);\n-      }\n+  \/\/ skip young gen cards\n+  if (*byte == G1CardTable::g1_young_card_val()) {\n+    \/\/ MemRegion should not span multiple regions for the young gen.\n+    DEBUG_ONLY(HeapRegion* containing_hr = G1CollectedHeap::heap()->heap_region_containing(mr.start());)\n+    assert(containing_hr->is_young(), \"it should be young\");\n+    assert(containing_hr->is_in(mr.start()), \"it should contain start\");\n+    assert(containing_hr->is_in(mr.last()), \"it should also contain last\");\n+    return;\n+  }\n+\n+  OrderAccess::storeload();\n+  \/\/ Enqueue if necessary.\n+  Thread* thr = Thread::current();\n+  G1DirtyCardQueueSet& qset = G1BarrierSet::dirty_card_queue_set();\n+  G1DirtyCardQueue& queue = G1ThreadLocalData::dirty_card_queue(thr);\n+  for (; byte <= last_byte; byte++) {\n+    CardValue bv = *byte;\n+    assert(bv != G1CardTable::g1_young_card_val(), \"Invalid card\");\n+    if (bv != G1CardTable::dirty_card_val()) {\n+      *byte = G1CardTable::dirty_card_val();\n+      qset.enqueue(queue, byte);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1BarrierSet.cpp","additions":21,"deletions":15,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -401,1 +401,0 @@\n-    bool preventive_collection_required = false;\n@@ -409,2 +408,1 @@\n-      size_t actual_size;\n-      result = _allocator->attempt_allocation(word_size, word_size, &actual_size);\n+      result = _allocator->attempt_allocation_locked(word_size);\n@@ -415,5 +413,7 @@\n-      preventive_collection_required = policy()->preventive_collection_required(1);\n-      if (!preventive_collection_required) {\n-        \/\/ We've already attempted a lock-free allocation above, so we don't want to\n-        \/\/ do it again. Let's jump straight to replacing the active region.\n-        result = _allocator->attempt_allocation_using_new_region(word_size);\n+      \/\/ If the GCLocker is active and we are bound for a GC, try expanding young gen.\n+      \/\/ This is different to when only GCLocker::needs_gc() is set: try to avoid\n+      \/\/ waiting because the GCLocker is active to not wait too long.\n+      if (GCLocker::is_active_and_needs_gc() && policy()->can_expand_young_list()) {\n+        \/\/ No need for an ergo message here, can_expand_young_list() does this when\n+        \/\/ it returns true.\n+        result = _allocator->attempt_allocation_force(word_size);\n@@ -423,12 +423,0 @@\n-\n-        \/\/ If the GCLocker is active and we are bound for a GC, try expanding young gen.\n-        \/\/ This is different to when only GCLocker::needs_gc() is set: try to avoid\n-        \/\/ waiting because the GCLocker is active to not wait too long.\n-        if (GCLocker::is_active_and_needs_gc() && policy()->can_expand_young_list()) {\n-          \/\/ No need for an ergo message here, can_expand_young_list() does this when\n-          \/\/ it returns true.\n-          result = _allocator->attempt_allocation_force(word_size);\n-          if (result != NULL) {\n-            return result;\n-          }\n-        }\n@@ -446,2 +434,0 @@\n-      GCCause::Cause gc_cause = preventive_collection_required ? GCCause::_g1_preventive_collection\n-                                                               : GCCause::_g1_inc_collection_pause;\n@@ -449,1 +435,1 @@\n-      result = do_collection_pause(word_size, gc_count_before, &succeeded, gc_cause);\n+      result = do_collection_pause(word_size, gc_count_before, &succeeded, GCCause::_g1_inc_collection_pause);\n@@ -863,1 +849,0 @@\n-    bool preventive_collection_required = false;\n@@ -871,11 +856,8 @@\n-      preventive_collection_required = policy()->preventive_collection_required((uint)size_in_regions);\n-      if (!preventive_collection_required) {\n-        \/\/ Given that humongous objects are not allocated in young\n-        \/\/ regions, we'll first try to do the allocation without doing a\n-        \/\/ collection hoping that there's enough space in the heap.\n-        result = humongous_obj_allocate(word_size);\n-        if (result != NULL) {\n-          policy()->old_gen_alloc_tracker()->\n-            add_allocated_humongous_bytes_since_last_gc(size_in_regions * HeapRegion::GrainBytes);\n-          return result;\n-        }\n+      \/\/ Given that humongous objects are not allocated in young\n+      \/\/ regions, we'll first try to do the allocation without doing a\n+      \/\/ collection hoping that there's enough space in the heap.\n+      result = humongous_obj_allocate(word_size);\n+      if (result != NULL) {\n+        policy()->old_gen_alloc_tracker()->\n+          add_allocated_humongous_bytes_since_last_gc(size_in_regions * HeapRegion::GrainBytes);\n+        return result;\n@@ -893,2 +875,0 @@\n-      GCCause::Cause gc_cause = preventive_collection_required ? GCCause::_g1_preventive_collection\n-                                                              : GCCause::_g1_humongous_allocation;\n@@ -896,1 +876,1 @@\n-      result = do_collection_pause(word_size, gc_count_before, &succeeded, gc_cause);\n+      result = do_collection_pause(word_size, gc_count_before, &succeeded, GCCause::_g1_humongous_allocation);\n@@ -2561,2 +2541,3 @@\n-  size_t eden_used_bytes = _eden.used_bytes();\n-  size_t survivor_used_bytes = _survivor.used_bytes();\n+  size_t eden_used_bytes = _monitoring_support->eden_space_used();\n+  size_t survivor_used_bytes = _monitoring_support->survivor_space_used();\n+  size_t old_gen_used_bytes = _monitoring_support->old_gen_used();\n@@ -2569,2 +2550,2 @@\n-  return G1HeapSummary(heap_summary, heap_used, eden_used_bytes,\n-                       eden_capacity_bytes, survivor_used_bytes, num_regions());\n+  return G1HeapSummary(heap_summary, heap_used, eden_used_bytes, eden_capacity_bytes,\n+                       survivor_used_bytes, old_gen_used_bytes, num_regions());\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.cpp","additions":23,"deletions":42,"binary":false,"changes":65,"status":"modified"},{"patch":"@@ -103,4 +103,0 @@\n-bool G1CollectionSet::has_candidates() {\n-  return _candidates != NULL && !_candidates->is_empty();\n-}\n-\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectionSet.cpp","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -226,1 +226,0 @@\n-  bool has_candidates();\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectionSet.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -415,2 +415,1 @@\n-  const double sum_ms = _root_region_scan_wait_time_ms +\n-                        _cur_prepare_tlab_time_ms +\n+  const double sum_ms = _cur_prepare_tlab_time_ms +\n@@ -426,3 +425,0 @@\n-  if (_root_region_scan_wait_time_ms > 0.0) {\n-    debug_time(\"Root Region Scan Waiting\", _root_region_scan_wait_time_ms);\n-  }\n@@ -560,0 +556,4 @@\n+  if (_root_region_scan_wait_time_ms > 0.0) {\n+    debug_time(\"Root Region Scan Waiting\", _root_region_scan_wait_time_ms);\n+  }\n+\n@@ -568,0 +568,4 @@\n+\n+  accounted_ms += _root_region_scan_wait_time_ms;\n+  accounted_ms += _cur_verify_before_time_ms;\n+\n@@ -572,0 +576,3 @@\n+\n+  accounted_ms += _cur_verify_after_time_ms;\n+\n","filename":"src\/hotspot\/share\/gc\/g1\/g1GCPhaseTimes.cpp","additions":12,"deletions":5,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -91,1 +91,1 @@\n-  _incremental_memory_manager(\"G1 Young Generation\", \"end of minor GC\"),\n+  _young_gc_memory_manager(\"G1 Young Generation\", \"end of minor GC\"),\n@@ -97,1 +97,1 @@\n-  _incremental_collection_counters(NULL),\n+  _young_collection_counters(NULL),\n@@ -124,1 +124,1 @@\n-  _incremental_collection_counters =\n+  _young_collection_counters =\n@@ -205,3 +205,3 @@\n-  _incremental_memory_manager.add_pool(_eden_space_pool);\n-  _incremental_memory_manager.add_pool(_survivor_space_pool);\n-  _incremental_memory_manager.add_pool(_old_gen_pool, false \/* always_affected_by_gc *\/);\n+  _young_gc_memory_manager.add_pool(_eden_space_pool);\n+  _young_gc_memory_manager.add_pool(_survivor_space_pool);\n+  _young_gc_memory_manager.add_pool(_old_gen_pool, false \/* always_affected_by_gc *\/);\n@@ -217,1 +217,1 @@\n-  memory_managers.append(&_incremental_memory_manager);\n+  memory_managers.append(&_young_gc_memory_manager);\n@@ -301,1 +301,1 @@\n-   \/\/ only the \"to\" survivor space is active, so we don't need to\n+    \/\/ only the \"to\" survivor space is active, so we don't need to\n@@ -370,2 +370,2 @@\n-                    monitoring_support->_incremental_collection_counters,\n-                    &monitoring_support->_incremental_memory_manager,\n+                    monitoring_support->_young_collection_counters,\n+                    &monitoring_support->_young_gc_memory_manager,\n","filename":"src\/hotspot\/share\/gc\/g1\/g1MonitoringSupport.cpp","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -131,1 +131,1 @@\n-  GCMemoryManager _incremental_memory_manager;\n+  GCMemoryManager _young_gc_memory_manager;\n@@ -140,2 +140,2 @@\n-  \/\/  incremental collections both young and mixed\n-  CollectorCounters*   _incremental_collection_counters;\n+  \/\/  young stop-the-world collections (including mixed)\n+  CollectorCounters*   _young_collection_counters;\n@@ -144,1 +144,1 @@\n-  \/\/  stop-the-world phases in G1\n+  \/\/  stop-the-world phases in G1 concurrent collection\n","filename":"src\/hotspot\/share\/gc\/g1\/g1MonitoringSupport.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -74,2 +74,0 @@\n-  _predicted_surviving_bytes_from_survivor(0),\n-  _predicted_surviving_bytes_from_old(0),\n@@ -566,1 +564,0 @@\n-  update_survival_estimates_for_next_collection();\n@@ -881,2 +878,0 @@\n-  update_survival_estimates_for_next_collection();\n-\n@@ -1561,82 +1556,0 @@\n-\/\/ Number of regions required to store the given number of bytes, taking\n-\/\/ into account the target amount of wasted space in PLABs.\n-static size_t get_num_regions_adjust_for_plab_waste(size_t byte_count) {\n-  size_t byte_count_adjusted = byte_count * (size_t)(100 + TargetPLABWastePct) \/ 100.0;\n-\n-  \/\/ Round up the region count\n-  return (byte_count_adjusted + HeapRegion::GrainBytes - 1) \/ HeapRegion::GrainBytes;\n-}\n-\n-bool G1Policy::preventive_collection_required(uint alloc_region_count) {\n-  if (!G1UsePreventiveGC || !Universe::is_fully_initialized()) {\n-    \/\/ Don't attempt any preventive GC's if the feature is disabled,\n-    \/\/ or before initialization is complete.\n-    return false;\n-  }\n-\n-  if (_g1h->young_regions_count() == 0 && !_collection_set->has_candidates()) {\n-    return false;\n-  }\n-\n-  uint eden_count = _g1h->eden_regions_count();\n-  size_t const eden_surv_bytes_pred = _eden_surv_rate_group->accum_surv_rate_pred(eden_count) * HeapRegion::GrainBytes;\n-  size_t const total_young_predicted_surviving_bytes = eden_surv_bytes_pred + _predicted_surviving_bytes_from_survivor;\n-\n-  uint required_regions = (uint)(get_num_regions_adjust_for_plab_waste(total_young_predicted_surviving_bytes) +\n-                                get_num_regions_adjust_for_plab_waste(_predicted_surviving_bytes_from_old));\n-\n-  if (required_regions > _g1h->num_free_or_available_regions() - alloc_region_count) {\n-    log_debug(gc, ergo, cset)(\"Preventive GC, insufficient free or available regions. \"\n-                              \"Predicted need %u. Curr Eden %u (Pred %u). Curr Survivor %u (Pred %u). Curr Old %u (Pred %u) Free or Avail %u (Free %u) Alloc %u\",\n-                              required_regions,\n-                              eden_count,\n-                              (uint)get_num_regions_adjust_for_plab_waste(eden_surv_bytes_pred),\n-                              _g1h->survivor_regions_count(),\n-                              (uint)get_num_regions_adjust_for_plab_waste(_predicted_surviving_bytes_from_survivor),\n-                              _g1h->old_regions_count(),\n-                              (uint)get_num_regions_adjust_for_plab_waste(_predicted_surviving_bytes_from_old),\n-                              _g1h->num_free_or_available_regions(),\n-                              _g1h->num_free_regions(),\n-                              alloc_region_count);\n-\n-    return true;\n-  }\n-\n-  return false;\n-}\n-\n-void G1Policy::update_survival_estimates_for_next_collection() {\n-  \/\/ Predict the number of bytes of surviving objects from survivor and old\n-  \/\/ regions and update the associated members.\n-\n-  \/\/ Survivor regions\n-  size_t survivor_bytes = 0;\n-  const GrowableArray<HeapRegion*>* survivor_regions = _g1h->survivor()->regions();\n-  for (GrowableArrayIterator<HeapRegion*> it = survivor_regions->begin();\n-       it != survivor_regions->end();\n-       ++it) {\n-    survivor_bytes += predict_bytes_to_copy(*it);\n-  }\n-\n-  _predicted_surviving_bytes_from_survivor = survivor_bytes;\n-\n-  \/\/ Old regions\n-  if (!_collection_set->has_candidates()) {\n-    _predicted_surviving_bytes_from_old = 0;\n-    return;\n-  }\n-\n-  \/\/ Use the minimum old gen collection set as conservative estimate for the number\n-  \/\/ of regions to take for this calculation.\n-  G1CollectionSetCandidates *candidates = _collection_set->candidates();\n-  uint iterate_count = MIN2(candidates->num_remaining(), calc_min_old_cset_length(candidates));\n-  uint current_index = candidates->cur_idx();\n-  size_t old_bytes = 0;\n-  for (uint i = 0; i < iterate_count; i++) {\n-    HeapRegion *region = candidates->at(current_index + i);\n-    old_bytes += predict_bytes_to_copy(region);\n-  }\n-\n-  _predicted_surviving_bytes_from_old = old_bytes;\n-}\n-\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Policy.cpp","additions":0,"deletions":87,"binary":false,"changes":87,"status":"modified"},{"patch":"@@ -104,5 +104,0 @@\n-  \/\/ These values are predictions of how much we think will survive in each\n-  \/\/ section of the heap.\n-  size_t _predicted_surviving_bytes_from_survivor;\n-  size_t _predicted_surviving_bytes_from_old;\n-\n@@ -362,5 +357,0 @@\n-  \/\/ Returns whether a collection should be done proactively, taking into\n-  \/\/ account the current number of free regions and the expected survival\n-  \/\/ rates in each section of the heap.\n-  bool preventive_collection_required(uint region_count);\n-\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Policy.hpp","additions":0,"deletions":10,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -126,5 +126,0 @@\n-bool VM_G1CollectForAllocation::should_try_allocation_before_gc() {\n-  \/\/ Don't allocate before a preventive GC.\n-  return _gc_cause != GCCause::_g1_preventive_collection;\n-}\n-\n@@ -134,1 +129,1 @@\n-  if (should_try_allocation_before_gc() && _word_size > 0) {\n+  if (_word_size > 0) {\n","filename":"src\/hotspot\/share\/gc\/g1\/g1VMOperations.cpp","additions":1,"deletions":6,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -80,3 +80,0 @@\n-\n-private:\n-  bool should_try_allocation_before_gc();\n","filename":"src\/hotspot\/share\/gc\/g1\/g1VMOperations.hpp","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -103,1 +103,1 @@\n-        MarkingCodeBlobClosure code_closure(&roots_to_old_closure, CodeBlobToOopClosure::FixRelocations, true \/* keepalive nmethods *\/);\n+        MarkingCodeBlobClosure code_closure(&roots_to_old_closure, CodeBlobToOopClosure::FixRelocations, false \/* keepalive nmethods *\/);\n@@ -273,1 +273,1 @@\n-    MarkingCodeBlobClosure roots_in_blobs(&roots_closure, CodeBlobToOopClosure::FixRelocations, true \/* keepalive nmethods *\/);\n+    MarkingCodeBlobClosure roots_in_blobs(&roots_closure, CodeBlobToOopClosure::FixRelocations, false \/* keepalive nmethods *\/);\n","filename":"src\/hotspot\/share\/gc\/parallel\/psScavenge.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -64,1 +64,1 @@\n-MarkAndPushClosure MarkSweep::mark_and_push_closure;\n+MarkAndPushClosure MarkSweep::mark_and_push_closure(ClassLoaderData::_claim_stw_fullgc_mark);\n@@ -68,1 +68,1 @@\n-template <class T> inline void MarkSweep::KeepAliveClosure::do_oop_work(T* p) {\n+template <class T> void MarkSweep::KeepAliveClosure::do_oop_work(T* p) {\n@@ -78,1 +78,1 @@\n-inline void MarkSweep::follow_array(objArrayOop array) {\n+void MarkSweep::follow_array(objArrayOop array) {\n@@ -86,1 +86,1 @@\n-inline void MarkSweep::follow_object(oop obj) {\n+void MarkSweep::follow_object(oop obj) {\n@@ -131,1 +131,1 @@\n-template <class T> inline void MarkSweep::follow_root(T* p) {\n+template <class T> void MarkSweep::follow_root(T* p) {\n@@ -176,0 +176,40 @@\n+void MarkSweep::mark_object(oop obj) {\n+  if (StringDedup::is_enabled() &&\n+      java_lang_String::is_instance(obj) &&\n+      SerialStringDedup::is_candidate_from_mark(obj)) {\n+    _string_dedup_requests->add(obj);\n+  }\n+\n+  \/\/ some marks may contain information we need to preserve so we store them away\n+  \/\/ and overwrite the mark.  We'll restore it at the end of markSweep.\n+  markWord mark = obj->mark();\n+  obj->set_mark(markWord::prototype().set_marked());\n+\n+  ContinuationGCSupport::transform_stack_chunk(obj);\n+\n+  if (obj->mark_must_be_preserved(mark)) {\n+    preserve_mark(obj, mark);\n+  }\n+}\n+\n+template <class T> void MarkSweep::mark_and_push(T* p) {\n+  T heap_oop = RawAccess<>::oop_load(p);\n+  if (!CompressedOops::is_null(heap_oop)) {\n+    oop obj = CompressedOops::decode_not_null(heap_oop);\n+    if (!obj->mark().is_marked()) {\n+      mark_object(obj);\n+      _marking_stack.push(obj);\n+    }\n+  }\n+}\n+\n+void MarkSweep::follow_klass(Klass* klass) {\n+  oop op = klass->class_loader_data()->holder_no_keepalive();\n+  MarkSweep::mark_and_push(&op);\n+}\n+\n+template <typename T>\n+void MarkAndPushClosure::do_oop_work(T* p)            { MarkSweep::mark_and_push(p); }\n+void MarkAndPushClosure::do_oop(      oop* p)         { do_oop_work(p); }\n+void MarkAndPushClosure::do_oop(narrowOop* p)         { do_oop_work(p); }\n+\n","filename":"src\/hotspot\/share\/gc\/serial\/markSweep.cpp","additions":45,"deletions":5,"binary":false,"changes":50,"status":"modified"},{"patch":"@@ -41,2 +41,0 @@\n-class Method;\n-class nmethod;\n@@ -155,2 +153,0 @@\n-  static void follow_cld(ClassLoaderData* cld);\n-\n@@ -177,1 +173,1 @@\n-class MarkAndPushClosure: public OopIterateClosure {\n+class MarkAndPushClosure: public ClaimMetadataVisitingOopIterateClosure {\n@@ -179,0 +175,2 @@\n+  MarkAndPushClosure(int claim) : ClaimMetadataVisitingOopIterateClosure(claim) {}\n+\n@@ -180,1 +178,1 @@\n-  virtual void do_oop(oop* p);\n+  virtual void do_oop(      oop* p);\n@@ -183,6 +181,0 @@\n-  virtual bool do_metadata() { return true; }\n-  virtual void do_klass(Klass* k);\n-  virtual void do_cld(ClassLoaderData* cld);\n-  virtual void do_method(Method* m);\n-  virtual void do_nmethod(nmethod* nm);\n-\n","filename":"src\/hotspot\/share\/gc\/serial\/markSweep.hpp","additions":4,"deletions":12,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -32,1 +32,0 @@\n-#include \"code\/nmethod.hpp\"\n@@ -39,1 +38,0 @@\n-#include \"oops\/method.hpp\"\n@@ -44,48 +42,0 @@\n-inline void MarkSweep::mark_object(oop obj) {\n-  if (StringDedup::is_enabled() &&\n-      java_lang_String::is_instance(obj) &&\n-      SerialStringDedup::is_candidate_from_mark(obj)) {\n-    _string_dedup_requests->add(obj);\n-  }\n-\n-  \/\/ some marks may contain information we need to preserve so we store them away\n-  \/\/ and overwrite the mark.  We'll restore it at the end of markSweep.\n-  markWord mark = obj->mark();\n-  obj->set_mark(markWord::prototype().set_marked());\n-\n-  ContinuationGCSupport::transform_stack_chunk(obj);\n-\n-  if (obj->mark_must_be_preserved(mark)) {\n-    preserve_mark(obj, mark);\n-  }\n-}\n-\n-template <class T> inline void MarkSweep::mark_and_push(T* p) {\n-  T heap_oop = RawAccess<>::oop_load(p);\n-  if (!CompressedOops::is_null(heap_oop)) {\n-    oop obj = CompressedOops::decode_not_null(heap_oop);\n-    if (!obj->mark().is_marked()) {\n-      mark_object(obj);\n-      _marking_stack.push(obj);\n-    }\n-  }\n-}\n-\n-inline void MarkSweep::follow_klass(Klass* klass) {\n-  oop op = klass->class_loader_data()->holder_no_keepalive();\n-  MarkSweep::mark_and_push(&op);\n-}\n-\n-inline void MarkSweep::follow_cld(ClassLoaderData* cld) {\n-  MarkSweep::follow_cld_closure.do_cld(cld);\n-}\n-\n-template <typename T>\n-inline void MarkAndPushClosure::do_oop_work(T* p)            { MarkSweep::mark_and_push(p); }\n-inline void MarkAndPushClosure::do_oop(oop* p)               { do_oop_work(p); }\n-inline void MarkAndPushClosure::do_oop(narrowOop* p)         { do_oop_work(p); }\n-inline void MarkAndPushClosure::do_klass(Klass* k)           { MarkSweep::follow_klass(k); }\n-inline void MarkAndPushClosure::do_cld(ClassLoaderData* cld) { MarkSweep::follow_cld(cld); }\n-inline void MarkAndPushClosure::do_method(Method* m)         { m->record_gc_epoch(); }\n-inline void MarkAndPushClosure::do_nmethod(nmethod* nm)      { nm->follow_nmethod(this); }\n-\n@@ -111,1 +61,0 @@\n-\n","filename":"src\/hotspot\/share\/gc\/serial\/markSweep.inline.hpp","additions":0,"deletions":51,"binary":false,"changes":51,"status":"modified"},{"patch":"@@ -62,1 +62,1 @@\n-  nonstatic_field(OffsetTableContigSpace,      _offsets,               BlockOffsetArray)\n+  nonstatic_field(TenuredSpace,                _offsets,               BlockOffsetArray)\n@@ -69,2 +69,1 @@\n-  declare_type(TenuredSpace,                 OffsetTableContigSpace)          \\\n-  declare_type(OffsetTableContigSpace,       ContiguousSpace)                 \\\n+  declare_type(TenuredSpace,                 ContiguousSpace)                 \\\n@@ -79,2 +78,1 @@\n-  declare_toplevel_type(BlockOffsetSharedArray*)                              \\\n-  declare_toplevel_type(OffsetTableContigSpace*)\n+  declare_toplevel_type(BlockOffsetSharedArray*)\n","filename":"src\/hotspot\/share\/gc\/serial\/vmStructs_serial.hpp","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -69,1 +69,1 @@\n-  if (TwoOperandLIRForm) {\n+  if (two_operand_lir_form) {\n","filename":"src\/hotspot\/share\/gc\/shared\/c1\/cardTableBarrierSetC1.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -114,1 +114,1 @@\n-void CardTableRS::younger_refs_in_space_iterate(Space* sp,\n+void CardTableRS::younger_refs_in_space_iterate(ContiguousSpace* sp,\n@@ -443,1 +443,1 @@\n-void CardTableRS::non_clean_card_iterate(Space* sp,\n+void CardTableRS::non_clean_card_iterate(ContiguousSpace* sp,\n","filename":"src\/hotspot\/share\/gc\/shared\/cardTableRS.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+class ContiguousSpace;\n@@ -35,1 +36,0 @@\n-\n@@ -50,1 +50,1 @@\n-  void younger_refs_in_space_iterate(Space* sp, HeapWord* gen_boundary, OopIterateClosure* cl);\n+  void younger_refs_in_space_iterate(ContiguousSpace* sp, HeapWord* gen_boundary, OopIterateClosure* cl);\n@@ -73,1 +73,1 @@\n-  void non_clean_card_iterate(Space* sp,\n+  void non_clean_card_iterate(ContiguousSpace* sp,\n","filename":"src\/hotspot\/share\/gc\/shared\/cardTableRS.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -102,3 +102,0 @@\n-    case _g1_preventive_collection:\n-      return \"G1 Preventive Collection\";\n-\n","filename":"src\/hotspot\/share\/gc\/shared\/gcCause.cpp","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -77,1 +77,0 @@\n-    _g1_preventive_collection,\n","filename":"src\/hotspot\/share\/gc\/shared\/gcCause.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -120,0 +120,1 @@\n+  size_t  _oldGenUsed;\n@@ -122,2 +123,2 @@\n-   G1HeapSummary(VirtualSpaceSummary& heap_space, size_t heap_used, size_t edenUsed, size_t edenCapacity, size_t survivorUsed, uint numberOfRegions) :\n-      GCHeapSummary(heap_space, heap_used), _edenUsed(edenUsed), _edenCapacity(edenCapacity), _survivorUsed(survivorUsed), _numberOfRegions(numberOfRegions) { }\n+   G1HeapSummary(VirtualSpaceSummary& heap_space, size_t heap_used, size_t edenUsed, size_t edenCapacity, size_t survivorUsed, size_t oldGenUsed, uint numberOfRegions) :\n+      GCHeapSummary(heap_space, heap_used), _edenUsed(edenUsed), _edenCapacity(edenCapacity), _survivorUsed(survivorUsed), _oldGenUsed(oldGenUsed), _numberOfRegions(numberOfRegions) { }\n@@ -127,0 +128,1 @@\n+   const size_t oldGenUsed() const { return _oldGenUsed; }\n","filename":"src\/hotspot\/share\/gc\/shared\/gcHeapSummary.hpp","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -247,0 +247,1 @@\n+      e.set_oldGenUsedSize(g1_heap_summary->oldGenUsed());\n","filename":"src\/hotspot\/share\/gc\/shared\/gcTraceSend.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -35,1 +35,0 @@\n-class KlassRemSet;\n","filename":"src\/hotspot\/share\/gc\/shared\/genOopClosures.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -164,6 +164,0 @@\n-DirtyCardToOopClosure* Space::new_dcto_cl(OopIterateClosure* cl,\n-                                          CardTable::PrecisionStyle precision,\n-                                          HeapWord* boundary) {\n-  return new DirtyCardToOopClosure(this, cl, precision, boundary);\n-}\n-\n@@ -293,1 +287,1 @@\n-void OffsetTableContigSpace::clear(bool mangle_space) {\n+void TenuredSpace::clear(bool mangle_space) {\n@@ -298,1 +292,1 @@\n-void OffsetTableContigSpace::set_bottom(HeapWord* new_bottom) {\n+void TenuredSpace::set_bottom(HeapWord* new_bottom) {\n@@ -303,1 +297,1 @@\n-void OffsetTableContigSpace::set_end(HeapWord* new_end) {\n+void TenuredSpace::set_end(HeapWord* new_end) {\n@@ -599,1 +593,1 @@\n-void OffsetTableContigSpace::print_on(outputStream* st) const {\n+void TenuredSpace::print_on(outputStream* st) const {\n@@ -742,1 +736,1 @@\n-void OffsetTableContigSpace::initialize_threshold() {\n+void TenuredSpace::initialize_threshold() {\n@@ -746,1 +740,1 @@\n-void OffsetTableContigSpace::alloc_block(HeapWord* start, HeapWord* end) {\n+void TenuredSpace::alloc_block(HeapWord* start, HeapWord* end) {\n@@ -750,2 +744,2 @@\n-OffsetTableContigSpace::OffsetTableContigSpace(BlockOffsetSharedArray* sharedOffsetArray,\n-                                               MemRegion mr) :\n+TenuredSpace::TenuredSpace(BlockOffsetSharedArray* sharedOffsetArray,\n+                           MemRegion mr) :\n@@ -753,1 +747,1 @@\n-  _par_alloc_lock(Mutex::safepoint, \"OffsetTableContigSpaceParAlloc_lock\", true)\n+  _par_alloc_lock(Mutex::safepoint, \"TenuredSpaceParAlloc_lock\", true)\n@@ -762,1 +756,1 @@\n-void OffsetTableContigSpace::verify() const {\n+void TenuredSpace::verify() const {\n","filename":"src\/hotspot\/share\/gc\/shared\/space.cpp","additions":10,"deletions":16,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -176,8 +176,0 @@\n-  \/\/ Create and return a new dirty card to oop closure. Can be\n-  \/\/ overridden to return the appropriate type of closure\n-  \/\/ depending on the type of space in which the closure will\n-  \/\/ operate. ResourceArea allocated.\n-  virtual DirtyCardToOopClosure* new_dcto_cl(OopIterateClosure* cl,\n-                                             CardTable::PrecisionStyle precision,\n-                                             HeapWord* boundary);\n-\n@@ -477,1 +469,0 @@\n-  \/\/ Override.\n@@ -480,1 +471,1 @@\n-                                     HeapWord* boundary) override;\n+                                     HeapWord* boundary);\n@@ -562,4 +553,0 @@\n-\/\/ A ContigSpace that Supports an efficient \"block_start\" operation via\n-\/\/ a BlockOffsetArray (whose BlockOffsetSharedArray may be shared with\n-\/\/ other spaces.)  This is the abstract base class for old generation\n-\/\/ (tenured) spaces.\n@@ -568,1 +555,6 @@\n-class OffsetTableContigSpace: public ContiguousSpace {\n+\n+\/\/ Class TenuredSpace is used by TenuredGeneration; it supports an efficient\n+\/\/ \"block_start\" operation via a BlockOffsetArray (whose BlockOffsetSharedArray\n+\/\/ may be shared with other spaces.)\n+\n+class TenuredSpace: public ContiguousSpace {\n@@ -574,0 +566,2 @@\n+  \/\/ Mark sweep support\n+  size_t allowed_dead_ratio() const override;\n@@ -576,2 +570,2 @@\n-  OffsetTableContigSpace(BlockOffsetSharedArray* sharedOffsetArray,\n-                         MemRegion mr);\n+  TenuredSpace(BlockOffsetSharedArray* sharedOffsetArray,\n+               MemRegion mr);\n@@ -599,15 +593,0 @@\n-\n-\n-\/\/ Class TenuredSpace is used by TenuredGeneration\n-\n-class TenuredSpace: public OffsetTableContigSpace {\n-  friend class VMStructs;\n- protected:\n-  \/\/ Mark sweep support\n-  size_t allowed_dead_ratio() const override;\n- public:\n-  \/\/ Constructor\n-  TenuredSpace(BlockOffsetSharedArray* sharedOffsetArray,\n-               MemRegion mr) :\n-    OffsetTableContigSpace(sharedOffsetArray, mr) {}\n-};\n","filename":"src\/hotspot\/share\/gc\/shared\/space.hpp","additions":11,"deletions":32,"binary":false,"changes":43,"status":"modified"},{"patch":"@@ -47,1 +47,1 @@\n-inline HeapWord* OffsetTableContigSpace::allocate(size_t size) {\n+inline HeapWord* TenuredSpace::allocate(size_t size) {\n@@ -58,1 +58,1 @@\n-inline HeapWord* OffsetTableContigSpace::par_allocate(size_t size) {\n+inline HeapWord* TenuredSpace::par_allocate(size_t size) {\n@@ -76,1 +76,1 @@\n-OffsetTableContigSpace::block_start_const(const void* p) const {\n+TenuredSpace::block_start_const(const void* p) const {\n@@ -159,1 +159,1 @@\n-  \/\/ space subtypes.  For example, OffsetTableContigSpace's that were\n+  \/\/ space subtypes.  For example, TenuredSpace's that were\n","filename":"src\/hotspot\/share\/gc\/shared\/space.inline.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Red Hat, Inc. All rights reserved.\n+ * Copyright (c) 2018, 2022, Red Hat, Inc. All rights reserved.\n@@ -149,1 +149,1 @@\n-  if (TwoOperandLIRForm) {\n+  if (two_operand_lir_form) {\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/c1\/shenandoahBarrierSetC1.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1031,1 +1031,1 @@\n-                      && (if_ctrl->in(0)->is_MultiBranch() && if_ctrl->in(0)->Opcode() == Op_NeverBranch)) {\n+                      && if_ctrl->in(0)->is_NeverBranch()) {\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/c2\/shenandoahBarrierSetC2.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -760,1 +760,1 @@\n-      } else if (c->Opcode() == Op_CProj && next->Opcode() == Op_NeverBranch) {\n+      } else if (c->Opcode() == Op_CProj && next->is_NeverBranch()) {\n@@ -2005,1 +2005,1 @@\n-    if (in != NULL && in->Opcode() == Op_Halt && in->in(0)->is_Proj() && in->in(0)->in(0)->Opcode() == Op_NeverBranch) {\n+    if (in != NULL && in->Opcode() == Op_Halt && in->in(0)->is_Proj() && in->in(0)->in(0)->is_NeverBranch()) {\n@@ -2036,1 +2036,1 @@\n-              assert(r->in(j)->Opcode() != Op_NeverBranch, \"\");\n+              assert(!r->in(j)->is_NeverBranch(), \"\");\n@@ -2042,1 +2042,1 @@\n-            assert(in->is_CallStaticJava() || in->Opcode() == Op_NeverBranch || in->Opcode() == Op_Catch || proj->is_IfProj(), \"\");\n+            assert(in->is_CallStaticJava() || in->is_NeverBranch() || in->Opcode() == Op_Catch || proj->is_IfProj(), \"\");\n@@ -2049,1 +2049,1 @@\n-            } else if (in->Opcode() == Op_NeverBranch) {\n+            } else if (in->is_NeverBranch()) {\n@@ -2521,1 +2521,1 @@\n-                     !(u->Opcode() == Op_CProj && u->in(0)->Opcode() == Op_NeverBranch && u->as_Proj()->_con == 1)) {\n+                     !(u->Opcode() == Op_CProj && u->in(0)->is_NeverBranch() && u->as_Proj()->_con == 1)) {\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/c2\/shenandoahSupport.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -59,1 +59,1 @@\n-    while (v > 1) {\n+    while (v >= 1) {\n@@ -74,1 +74,1 @@\n-  \/\/ Defensively saturate for product bits:\n+  \/\/ Defensively saturate for product bits\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahNumberSeq.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -58,1 +58,1 @@\n-class BinaryMagnitudeSeq {\n+class BinaryMagnitudeSeq : public CHeapObj<mtGC> {\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahNumberSeq.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -233,1 +233,1 @@\n-    sprintf(what, \"indy#%d\", decode_indy_index());\n+    os::snprintf_checked(what, sizeof(what), \"indy#%d\", decode_indy_index());\n@@ -235,1 +235,1 @@\n-    sprintf(what, \"condy\");\n+    os::snprintf_checked(what, sizeof(what), \"condy\");\n@@ -254,1 +254,1 @@\n-        sprintf(argbuf + pos, \"...\");\n+        os::snprintf_checked(argbuf + pos, sizeof(argbuf) - pos, \"...\");\n@@ -258,1 +258,1 @@\n-      sprintf(argbuf+pos, \"%d\", arg_index(i));\n+      os::snprintf_checked(argbuf+pos, sizeof(argbuf) - pos, \"%d\", arg_index(i));\n","filename":"src\/hotspot\/share\/interpreter\/bootstrapInfo.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -332,0 +332,1 @@\n+    <Field type=\"ulong\" contentType=\"bytes\" name=\"oldGenUsedSize\" label=\"Old Generation Used Size\" \/>\n@@ -579,1 +580,1 @@\n-    <Field type=\"uint\" name=\"compileId\" label=\"Compilation Identifier\" relation=\"CompileId\" \/>\n+    <Field type=\"int\" name=\"compileId\" label=\"Compilation Identifier\" relation=\"CompileId\" \/>\n@@ -593,1 +594,1 @@\n-    <Field type=\"uint\" name=\"compileId\" label=\"Compilation Identifier\" relation=\"CompileId\" \/>\n+    <Field type=\"int\" name=\"compileId\" label=\"Compilation Identifier\" relation=\"CompileId\" \/>\n@@ -601,1 +602,1 @@\n-    <Field type=\"uint\" name=\"compileId\" label=\"Compilation Identifier\" relation=\"CompileId\" \/>\n+    <Field type=\"int\" name=\"compileId\" label=\"Compilation Identifier\" relation=\"CompileId\" \/>\n@@ -613,1 +614,1 @@\n-    <Field type=\"uint\" name=\"compileId\" label=\"Compilation Identifier\" relation=\"CompileId\" \/>\n+    <Field type=\"int\" name=\"compileId\" label=\"Compilation Identifier\" relation=\"CompileId\" \/>\n@@ -639,1 +640,1 @@\n-    <Field type=\"uint\" name=\"compileId\" label=\"Compilation Identifier\" relation=\"CompileId\" \/>\n+    <Field type=\"int\" name=\"compileId\" label=\"Compilation Identifier\" relation=\"CompileId\" \/>\n","filename":"src\/hotspot\/share\/jfr\/metadata\/metadata.xml","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -262,1 +262,1 @@\n-  sprintf(hash_buf, \"\/\" UINTX_FORMAT, hash);\n+  os::snprintf_checked(hash_buf, sizeof(hash_buf), \"\/\" UINTX_FORMAT, hash);\n","filename":"src\/hotspot\/share\/jfr\/support\/jfrSymbolTable.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -111,1 +111,1 @@\n-      runtime = JVMCI::compiler_runtime((JavaThread*) THREAD);\n+      runtime = JVMCI::compiler_runtime(THREAD);\n","filename":"src\/hotspot\/share\/jvmci\/jvmci.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -311,3 +311,3 @@\n-    size_t name_buf_len = strlen(vmField.typeName) + strlen(vmField.fieldName) + 2 \/* \"::\" *\/;\n-    char* name_buf = NEW_RESOURCE_ARRAY_IN_THREAD(THREAD, char, name_buf_len + 1);\n-    sprintf(name_buf, \"%s::%s\", vmField.typeName, vmField.fieldName);\n+    const size_t name_buf_size = strlen(vmField.typeName) + strlen(vmField.fieldName) + 2 + 1 \/* \"::\" *\/;\n+    char* name_buf = NEW_RESOURCE_ARRAY_IN_THREAD(THREAD, char, name_buf_size);\n+    os::snprintf_checked(name_buf, name_buf_size, \"%s::%s\", vmField.typeName, vmField.fieldName);\n","filename":"src\/hotspot\/share\/jvmci\/jvmciCompilerToVMInit.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -989,1 +989,1 @@\n-    JavaThread* jthread = (JavaThread*) thread;\n+    JavaThread* jthread = JavaThread::cast(thread);\n","filename":"src\/hotspot\/share\/jvmci\/jvmciRuntime.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -339,0 +339,3 @@\n+  bool has_localvariable_table() const     { return _misc_status.has_localvariable_table(); }\n+  void set_has_localvariable_table(bool b) { _misc_status.set_has_localvariable_table(b); }\n+\n","filename":"src\/hotspot\/share\/oops\/instanceKlass.hpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+#include \"runtime\/safepoint.hpp\"\n@@ -61,0 +62,8 @@\n+\n+#ifdef ASSERT\n+void InstanceKlassMiscStatus::assert_is_safe(bool set) {\n+  \/\/ Setting a flag is safe if it's set once or at a safepoint. RedefineClasses can set or\n+  \/\/ reset flags at a safepoint.\n+  assert(!set || SafepointSynchronize::is_at_safepoint(), \"set once or at safepoint\");\n+}\n+#endif \/\/ ASSERT\n","filename":"src\/hotspot\/share\/oops\/instanceKlassMiscStatus.cpp","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -48,1 +48,2 @@\n-    flag(has_contended_annotations          , 1 << 13) \/* has @Contended annotation *\/\n+    flag(has_contended_annotations          , 1 << 13) \/* has @Contended annotation *\/ \\\n+    flag(has_localvariable_table            , 1 << 14) \/* has localvariable information *\/\n@@ -75,1 +76,1 @@\n-    assert(!name(), \"set once\");    \\\n+    assert_is_safe(name());         \\\n@@ -88,0 +89,1 @@\n+  void assert_is_safe(bool set) NOT_DEBUG_RETURN;\n","filename":"src\/hotspot\/share\/oops\/instanceKlassMiscStatus.hpp","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -171,1 +171,1 @@\n-      _map((JavaThread*)nullptr,\n+      _map(nullptr,\n","filename":"src\/hotspot\/share\/oops\/instanceStackChunkKlass.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -206,1 +206,1 @@\n-    RegisterMap full_map((JavaThread*)nullptr,\n+    RegisterMap full_map(nullptr,\n","filename":"src\/hotspot\/share\/oops\/stackChunkOop.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -623,1 +623,0 @@\n-  \/\/ Find true target\n@@ -625,2 +624,6 @@\n-  int idx = b->get_node(end_idx+1)->as_Proj()->_con;\n-  Block *succ = b->_succs[idx];\n+  NeverBranchNode* never_branch = b->get_node(end_idx)->as_NeverBranch();\n+  Block* succ = get_block_for_node(never_branch->proj_out(0)->unique_ctrl_out_or_null());\n+  Block* dead = get_block_for_node(never_branch->proj_out(1)->unique_ctrl_out_or_null());\n+  assert(succ == b->_succs[0] || succ == b->_succs[1], \"succ is a successor\");\n+  assert(dead == b->_succs[0] || dead == b->_succs[1], \"dead is a successor\");\n+\n@@ -645,1 +648,0 @@\n-  Block* dead = b->_succs[1 - idx];\n@@ -743,1 +745,1 @@\n-    if (block->get_node(block->end_idx())->Opcode() == Op_NeverBranch) {\n+    if (block->get_node(block->end_idx())->is_NeverBranch()) {\n@@ -1376,1 +1378,7 @@\n-            assert(is_loop || block->find_node(def) < j, \"uses must follow definitions\");\n+            \/\/ Uses must be before definition, except if:\n+            \/\/ - We are in some kind of loop we already detected\n+            \/\/ - We are in infinite loop, where Region may not have been turned into LoopNode\n+            assert(block->find_node(def) < j ||\n+                   is_loop ||\n+                   (n->is_Phi() && block->head()->as_Region()->is_in_infinite_subgraph()),\n+                   \"uses must follow definitions (except in loops)\");\n","filename":"src\/hotspot\/share\/opto\/block.cpp","additions":14,"deletions":6,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -0,0 +1,54 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+#include \"precompiled.hpp\"\n+#include \"asm\/codeBuffer.hpp\"\n+#include \"code\/codeBlob.hpp\"\n+#include \"opto\/c2_CodeStubs.hpp\"\n+#include \"opto\/c2_MacroAssembler.hpp\"\n+#include \"opto\/compile.hpp\"\n+#include \"opto\/output.hpp\"\n+\n+C2CodeStubList::C2CodeStubList() :\n+  _stubs(Compile::current()->comp_arena(), 2, 0, NULL) {}\n+\n+void C2CodeStubList::emit(CodeBuffer& cb) {\n+  C2_MacroAssembler masm(&cb);\n+  for (int i = _stubs.length() - 1; i >= 0; i--) {\n+    C2CodeStub* stub = _stubs.at(i);\n+    int max_size = stub->max_size();\n+    \/\/ Make sure there is enough space in the code buffer\n+    if (cb.insts()->maybe_expand_to_ensure_remaining(max_size) && cb.blob() == NULL) {\n+      ciEnv::current()->record_failure(\"CodeCache is full\");\n+      return;\n+    }\n+\n+    DEBUG_ONLY(int size_before = cb.insts_size();)\n+\n+    stub->emit(masm);\n+\n+    DEBUG_ONLY(int actual_size = cb.insts_size() - size_before;)\n+    assert(max_size >= actual_size, \"Expected stub size (%d) must be larger than or equal to actual stub size (%d)\", max_size, actual_size);\n+  }\n+}\n","filename":"src\/hotspot\/share\/opto\/c2_CodeStubs.cpp","additions":54,"deletions":0,"binary":false,"changes":54,"status":"added"},{"patch":"@@ -0,0 +1,89 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+#include \"asm\/assembler.hpp\"\n+#include \"asm\/codeBuffer.hpp\"\n+#include \"memory\/allocation.hpp\"\n+#include \"opto\/c2_MacroAssembler.hpp\"\n+#include \"utilities\/growableArray.hpp\"\n+\n+#ifndef SHARE_OPTO_C2_CODESTUBS_HPP\n+#define SHARE_OPTO_C2_CODESTUBS_HPP\n+\n+class C2CodeStub : public ArenaObj {\n+private:\n+  Label _entry;\n+  Label _continuation;\n+\n+protected:\n+  C2CodeStub() :\n+    _entry(),\n+    _continuation() {}\n+\n+public:\n+  Label& entry()        { return _entry; }\n+  Label& continuation() { return _continuation; }\n+\n+  virtual void emit(C2_MacroAssembler& masm) = 0;\n+  virtual int max_size() const = 0;\n+};\n+\n+class C2CodeStubList {\n+private:\n+  GrowableArray<C2CodeStub*> _stubs;\n+\n+public:\n+  C2CodeStubList();\n+\n+  void add_stub(C2CodeStub* stub) { _stubs.append(stub); }\n+  void emit(CodeBuffer& cb);\n+};\n+\n+class C2SafepointPollStub : public C2CodeStub {\n+private:\n+  uintptr_t _safepoint_offset;\n+\n+public:\n+  C2SafepointPollStub(uintptr_t safepoint_offset) :\n+    _safepoint_offset(safepoint_offset) {}\n+  int max_size() const;\n+  void emit(C2_MacroAssembler& masm);\n+};\n+\n+\/\/ We move non-hot code of the nmethod entry barrier to an out-of-line stub\n+class C2EntryBarrierStub: public C2CodeStub {\n+private:\n+  Label _guard; \/\/ Used on AArch64 and RISCV\n+\n+public:\n+  C2EntryBarrierStub() : C2CodeStub(),\n+    _guard() {}\n+\n+  Label& guard() { return _guard; }\n+\n+  int max_size() const;\n+  void emit(C2_MacroAssembler& masm);\n+};\n+\n+#endif \/\/ SHARE_OPTO_C2_CODESTUBS_HPP\n","filename":"src\/hotspot\/share\/opto\/c2_CodeStubs.hpp","additions":89,"deletions":0,"binary":false,"changes":89,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,0 +30,1 @@\n+#include \"utilities\/globalDefinitions.hpp\"\n","filename":"src\/hotspot\/share\/opto\/c2_MacroAssembler.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -397,0 +397,41 @@\n+#ifdef ASSERT\n+\/\/ Is this region in an infinite subgraph?\n+\/\/ (no path to root except through false NeverBranch exit)\n+bool RegionNode::is_in_infinite_subgraph() {\n+  ResourceMark rm;\n+  Unique_Node_List worklist;\n+  worklist.push(this);\n+  return RegionNode::are_all_nodes_in_infinite_subgraph(worklist);\n+}\n+\n+\/\/ Are all nodes in worklist in infinite subgraph?\n+\/\/ (no path to root except through false NeverBranch exit)\n+\/\/ worklist is directly used for the traversal\n+bool RegionNode::are_all_nodes_in_infinite_subgraph(Unique_Node_List& worklist) {\n+  \/\/ BFS traversal down the CFG, except through NeverBranch exits\n+  for (uint i = 0; i < worklist.size(); ++i) {\n+    Node* n = worklist.at(i);\n+    assert(n->is_CFG(), \"only traverse CFG\");\n+    if (n->is_Root()) {\n+      \/\/ Found root -> there was an exit!\n+      return false;\n+    } else if (n->is_NeverBranch()) {\n+      \/\/ Only follow the loop-internal projection, not the NeverBranch exit\n+      ProjNode* proj = n->as_NeverBranch()->proj_out_or_null(0);\n+      assert(proj != nullptr, \"must find loop-internal projection of NeverBranch\");\n+      worklist.push(proj);\n+    } else {\n+      \/\/ Traverse all CFG outputs\n+      for (DUIterator_Fast imax, i = n->fast_outs(imax); i < imax; i++) {\n+        Node* use = n->fast_out(i);\n+        if (use->is_CFG()) {\n+          worklist.push(use);\n+        }\n+      }\n+    }\n+  }\n+  \/\/ No exit found for any loop -> all are infinite\n+  return true;\n+}\n+#endif \/\/ASSERT\n+\n","filename":"src\/hotspot\/share\/opto\/cfgnode.cpp","additions":41,"deletions":0,"binary":false,"changes":41,"status":"modified"},{"patch":"@@ -94,0 +94,4 @@\n+#ifdef ASSERT\n+  bool is_in_infinite_subgraph();\n+  static bool are_all_nodes_in_infinite_subgraph(Unique_Node_List& worklist);\n+#endif \/\/ASSERT\n@@ -594,1 +598,4 @@\n-  NeverBranchNode( Node *ctrl ) : MultiBranchNode(1) { init_req(0,ctrl); }\n+  NeverBranchNode(Node* ctrl) : MultiBranchNode(1) {\n+    init_req(0, ctrl);\n+    init_class_id(Class_NeverBranch);\n+  }\n","filename":"src\/hotspot\/share\/opto\/cfgnode.hpp","additions":8,"deletions":1,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -481,1 +481,1 @@\n-  float _high_frequency_lrg;    \/\/ Frequency at which LRG will be spilled for debug info\n+  double _high_frequency_lrg;   \/\/ Frequency at which LRG will be spilled for debug info\n@@ -498,1 +498,1 @@\n-  float high_frequency_lrg() const { return _high_frequency_lrg; }\n+  double high_frequency_lrg() const { return _high_frequency_lrg; }\n","filename":"src\/hotspot\/share\/opto\/chaitin.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -897,1 +897,1 @@\n-\/\/ no subklasses.  We do a Deutsch-Shiffman style type-check on the incoming\n+\/\/ no subklasses.  We do a Deutsch-Schiffman style type-check on the incoming\n","filename":"src\/hotspot\/share\/opto\/doCall.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1445,1 +1445,1 @@\n-  if (head->unique_ctrl_out()->Opcode() == Op_NeverBranch) {\n+  if (head->unique_ctrl_out()->is_NeverBranch()) {\n","filename":"src\/hotspot\/share\/opto\/loopPredicate.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -3635,0 +3635,11 @@\n+            if (_head == n) {\n+              \/\/ this and nlpt (inner loop) have the same loop head. This should not happen because\n+              \/\/ during beautify_loops we call merge_many_backedges. However, infinite loops may not\n+              \/\/ have been attached to the loop-tree during build_loop_tree before beautify_loops,\n+              \/\/ but then attached in the build_loop_tree afterwards, and so still have unmerged\n+              \/\/ backedges. Check if we are indeed in an infinite subgraph, and terminate the scan,\n+              \/\/ since we have reached the loop head of this.\n+              assert(_head->as_Region()->is_in_infinite_subgraph(),\n+                     \"only expect unmerged backedges in infinite loops\");\n+              break;\n+            }\n@@ -4221,24 +4232,1 @@\n-  \/\/ BFS traversal down the CFG, except through NeverBranch exits\n-  for (uint i = 0; i < worklist.size(); ++i) {\n-    Node* n = worklist.at(i);\n-    assert(n->is_CFG(), \"only traverse CFG\");\n-    if (n->is_Root()) {\n-      \/\/ Found root -> there was an exit!\n-      return false;\n-    } else if (n->Opcode() == Op_NeverBranch) {\n-      \/\/ Only follow the loop-internal projection, not the NeverBranch exit\n-      ProjNode* proj = n->as_Multi()->proj_out_or_null(0);\n-      assert(proj != nullptr, \"must find loop-internal projection of NeverBranch\");\n-      worklist.push(proj);\n-    } else {\n-      \/\/ Traverse all CFG outputs\n-      for (DUIterator_Fast imax, i = n->fast_outs(imax); i < imax; i++) {\n-        Node* use = n->fast_out(i);\n-        if (use->is_CFG()) {\n-          worklist.push(use);\n-        }\n-      }\n-    }\n-  }\n-  \/\/ No exit found for any loop -> all are infinite\n-  return true;\n+  return RegionNode::are_all_nodes_in_infinite_subgraph(worklist);\n@@ -6219,1 +6207,1 @@\n-  uint node_index_padding_width = static_cast<int>(log10(C->unique())) + 1;\n+  uint node_index_padding_width = static_cast<int>(log10(static_cast<double>(C->unique()))) + 1;\n","filename":"src\/hotspot\/share\/opto\/loopnode.cpp","additions":13,"deletions":25,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -795,2 +795,2 @@\n-      if (u->Opcode() == Op_NeverBranch) {\n-        u = ((NeverBranchNode*)u)->proj_out(0);\n+      if (u->is_NeverBranch()) {\n+        u = u->as_NeverBranch()->proj_out(0);\n@@ -979,1 +979,1 @@\n-            assert(get_loop(lca)->_nest < n_loop->_nest || lca->in(0)->Opcode() == Op_NeverBranch, \"must not be moved into inner loop\");\n+            assert(get_loop(lca)->_nest < n_loop->_nest || lca->in(0)->is_NeverBranch(), \"must not be moved into inner loop\");\n@@ -1184,1 +1184,1 @@\n-        (dom->Opcode() == Op_NeverBranch && loop->is_member(get_loop(dom->in(0))))) {\n+        (dom->is_NeverBranch() && loop->is_member(get_loop(dom->in(0))))) {\n","filename":"src\/hotspot\/share\/opto\/loopopts.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+#include \"opto\/subnode.hpp\"\n","filename":"src\/hotspot\/share\/opto\/matcher.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2395,11 +2395,0 @@\n-\/\/ log10 rounded down\n-uint log10(const uint i) {\n-  uint v = 10;\n-  uint e = 0;\n-  while(v <= i) {\n-    v *= 10;\n-    e++;\n-  }\n-  return e;\n-}\n-\n@@ -2415,1 +2404,1 @@\n-    uint max_width = log10(C->unique()) + 2;\n+    uint max_width = static_cast<uint>(log10(static_cast<double>(C->unique()))) + 2;\n@@ -2417,1 +2406,1 @@\n-    uint width = log10(_idx) + 1 + (is_new ? 0 : 1);\n+    uint width = static_cast<uint>(log10(static_cast<double>(_idx))) + 1 + (is_new ? 0 : 1);\n","filename":"src\/hotspot\/share\/opto\/node.cpp","additions":2,"deletions":13,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -766,1 +766,1 @@\n-    _max_classes  = ClassMask_Move\n+    _max_classes  = ClassMask_LShift\n@@ -925,0 +925,1 @@\n+  DEFINE_CLASS_QUERY(NeverBranch)\n","filename":"src\/hotspot\/share\/opto\/node.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -221,104 +221,0 @@\n-volatile int C2SafepointPollStubTable::_stub_size = 0;\n-\n-Label& C2SafepointPollStubTable::add_safepoint(uintptr_t safepoint_offset) {\n-  C2SafepointPollStub* entry = new (Compile::current()->comp_arena()) C2SafepointPollStub(safepoint_offset);\n-  _safepoints.append(entry);\n-  return entry->_stub_label;\n-}\n-\n-void C2SafepointPollStubTable::emit(CodeBuffer& cb) {\n-  MacroAssembler masm(&cb);\n-  for (int i = _safepoints.length() - 1; i >= 0; i--) {\n-    \/\/ Make sure there is enough space in the code buffer\n-    if (cb.insts()->maybe_expand_to_ensure_remaining(PhaseOutput::MAX_inst_size) && cb.blob() == NULL) {\n-      ciEnv::current()->record_failure(\"CodeCache is full\");\n-      return;\n-    }\n-\n-    C2SafepointPollStub* entry = _safepoints.at(i);\n-    emit_stub(masm, entry);\n-  }\n-}\n-\n-int C2SafepointPollStubTable::stub_size_lazy() const {\n-  int size = Atomic::load(&_stub_size);\n-\n-  if (size != 0) {\n-    return size;\n-  }\n-\n-  Compile* const C = Compile::current();\n-  BufferBlob* const blob = C->output()->scratch_buffer_blob();\n-  CodeBuffer cb(blob->content_begin(), C->output()->scratch_buffer_code_size());\n-  MacroAssembler masm(&cb);\n-  C2SafepointPollStub* entry = _safepoints.at(0);\n-  emit_stub(masm, entry);\n-  size += cb.insts_size();\n-\n-  Atomic::store(&_stub_size, size);\n-\n-  return size;\n-}\n-\n-int C2SafepointPollStubTable::estimate_stub_size() const {\n-  if (_safepoints.length() == 0) {\n-    return 0;\n-  }\n-\n-  int result = stub_size_lazy() * _safepoints.length();\n-\n-#ifdef ASSERT\n-  Compile* const C = Compile::current();\n-  BufferBlob* const blob = C->output()->scratch_buffer_blob();\n-  int size = 0;\n-\n-  for (int i = _safepoints.length() - 1; i >= 0; i--) {\n-    CodeBuffer cb(blob->content_begin(), C->output()->scratch_buffer_code_size());\n-    MacroAssembler masm(&cb);\n-    C2SafepointPollStub* entry = _safepoints.at(i);\n-    emit_stub(masm, entry);\n-    size += cb.insts_size();\n-  }\n-  assert(size == result, \"stubs should not have variable size\");\n-#endif\n-\n-  return result;\n-}\n-\n-\/\/ Nmethod entry barrier stubs\n-C2EntryBarrierStub* C2EntryBarrierStubTable::add_entry_barrier() {\n-  assert(_stub == NULL, \"There can only be one entry barrier stub\");\n-  _stub = new (Compile::current()->comp_arena()) C2EntryBarrierStub();\n-  return _stub;\n-}\n-\n-void C2EntryBarrierStubTable::emit(CodeBuffer& cb) {\n-  if (_stub == NULL) {\n-    \/\/ No stub - nothing to do\n-    return;\n-  }\n-\n-  C2_MacroAssembler masm(&cb);\n-  \/\/ Make sure there is enough space in the code buffer\n-  if (cb.insts()->maybe_expand_to_ensure_remaining(PhaseOutput::MAX_inst_size) && cb.blob() == NULL) {\n-    ciEnv::current()->record_failure(\"CodeCache is full\");\n-    return;\n-  }\n-\n-  intptr_t before = masm.offset();\n-  masm.emit_entry_barrier_stub(_stub);\n-  intptr_t after = masm.offset();\n-  int actual_size = (int)(after - before);\n-  int expected_size = masm.entry_barrier_stub_size();\n-  assert(actual_size == expected_size, \"Estimated size is wrong, expected %d, was %d\", expected_size, actual_size);\n-}\n-\n-int C2EntryBarrierStubTable::estimate_stub_size() const {\n-  if (BarrierSet::barrier_set()->barrier_set_nmethod() == NULL) {\n-    \/\/ No nmethod entry barrier?\n-    return 0;\n-  }\n-\n-  return C2_MacroAssembler::entry_barrier_stub_size();\n-}\n-\n@@ -331,2 +227,1 @@\n-    _safepoint_poll_table(),\n-    _entry_barrier_table(),\n+    _stub_list(),\n@@ -1352,2 +1247,0 @@\n-  stub_req += safepoint_poll_table()->estimate_stub_size();\n-  stub_req += entry_barrier_table()->estimate_stub_size();\n@@ -1860,6 +1753,2 @@\n-  \/\/ Fill in stubs for calling the runtime from safepoint polls.\n-  safepoint_poll_table()->emit(*cb);\n-  if (C->failing())  return;\n-\n-  \/\/ Fill in stubs for calling the runtime from nmethod entries.\n-  entry_barrier_table()->emit(*cb);\n+  \/\/ Fill in stubs.\n+  _stub_list.emit(*cb);\n","filename":"src\/hotspot\/share\/opto\/output.cpp","additions":3,"deletions":114,"binary":false,"changes":117,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,0 +32,1 @@\n+#include \"opto\/c2_CodeStubs.hpp\"\n@@ -76,69 +77,0 @@\n-class C2SafepointPollStubTable {\n-private:\n-  struct C2SafepointPollStub: public ArenaObj {\n-    uintptr_t _safepoint_offset;\n-    Label     _stub_label;\n-    Label     _trampoline_label;\n-    C2SafepointPollStub(uintptr_t safepoint_offset) :\n-      _safepoint_offset(safepoint_offset),\n-      _stub_label(),\n-      _trampoline_label() {}\n-  };\n-\n-  GrowableArray<C2SafepointPollStub*> _safepoints;\n-\n-  static volatile int _stub_size;\n-\n-  void emit_stub_impl(MacroAssembler& masm, C2SafepointPollStub* entry) const;\n-\n-  \/\/ The selection logic below relieves the need to add dummy files to unsupported platforms.\n-  template <bool enabled>\n-  typename EnableIf<enabled>::type\n-  select_emit_stub(MacroAssembler& masm, C2SafepointPollStub* entry) const {\n-    emit_stub_impl(masm, entry);\n-  }\n-\n-  template <bool enabled>\n-  typename EnableIf<!enabled>::type\n-  select_emit_stub(MacroAssembler& masm, C2SafepointPollStub* entry) const {}\n-\n-  void emit_stub(MacroAssembler& masm, C2SafepointPollStub* entry) const {\n-    select_emit_stub<VM_Version::supports_stack_watermark_barrier()>(masm, entry);\n-  }\n-\n-  int stub_size_lazy() const;\n-\n-public:\n-  Label& add_safepoint(uintptr_t safepoint_offset);\n-  int estimate_stub_size() const;\n-  void emit(CodeBuffer& cb);\n-};\n-\n-\/\/ We move non-hot code of the nmethod entry barrier to an out-of-line stub\n-class C2EntryBarrierStub: public ArenaObj {\n-  Label _slow_path;\n-  Label _continuation;\n-  Label _guard; \/\/ Used on AArch64 and RISCV\n-\n-public:\n-  C2EntryBarrierStub() :\n-    _slow_path(),\n-    _continuation(),\n-    _guard() {}\n-\n-  Label& slow_path() { return _slow_path; }\n-  Label& continuation() { return _continuation; }\n-  Label& guard() { return _guard; }\n-\n-};\n-\n-class C2EntryBarrierStubTable {\n-  C2EntryBarrierStub* _stub;\n-\n-public:\n-  C2EntryBarrierStubTable() : _stub(NULL) {}\n-  C2EntryBarrierStub* add_entry_barrier();\n-  int estimate_stub_size() const;\n-  void emit(CodeBuffer& cb);\n-};\n-\n@@ -153,2 +85,1 @@\n-  C2SafepointPollStubTable _safepoint_poll_table;\/\/ Table for safepoint polls\n-  C2EntryBarrierStubTable _entry_barrier_table;  \/\/ Table for entry barrier stubs\n+  C2CodeStubList          _stub_list;            \/\/ List of code stubs\n@@ -202,5 +133,2 @@\n-  \/\/ Safepoint poll table\n-  C2SafepointPollStubTable* safepoint_poll_table() { return &_safepoint_poll_table; }\n-\n-  \/\/ Entry barrier table\n-  C2EntryBarrierStubTable* entry_barrier_table() { return &_entry_barrier_table; }\n+  \/\/ Code stubs list\n+  void add_stub(C2CodeStub* stub) { _stub_list.add_stub(stub); }\n","filename":"src\/hotspot\/share\/opto\/output.hpp","additions":5,"deletions":77,"binary":false,"changes":82,"status":"modified"},{"patch":"@@ -1251,0 +1251,5 @@\n+  \/\/ Allow Bool -> Cmp idealisation in late inlining intrinsics that return a bool\n+  if (n->is_Cmp()) {\n+    add_users_to_worklist(n);\n+  }\n+\n@@ -1780,0 +1785,1 @@\n+  DEBUG_ONLY(Unique_Node_List worklist_verify;)\n@@ -1788,0 +1794,1 @@\n+    DEBUG_ONLY(worklist_verify.push(n);)\n@@ -1801,0 +1808,1 @@\n+  DEBUG_ONLY(verify_analyze(worklist_verify);)\n@@ -1803,0 +1811,45 @@\n+#ifdef ASSERT\n+\/\/ For every node n on verify list, check if type(n) == n->Value()\n+\/\/ We have a list of exceptions, see comments in code.\n+void PhaseCCP::verify_analyze(Unique_Node_List& worklist_verify) {\n+  bool failure = false;\n+  while (worklist_verify.size()) {\n+    Node* n = worklist_verify.pop();\n+    const Type* told = type(n);\n+    const Type* tnew = n->Value(this);\n+    if (told != tnew) {\n+      \/\/ Check special cases that are ok\n+      if (told->isa_integer(tnew->basic_type()) != nullptr) { \/\/ both either int or long\n+        const TypeInteger* t0 = told->is_integer(tnew->basic_type());\n+        const TypeInteger* t1 = tnew->is_integer(tnew->basic_type());\n+        if (t0->lo_as_long() == t1->lo_as_long() &&\n+            t0->hi_as_long() == t1->hi_as_long()) {\n+          continue; \/\/ ignore integer widen\n+        }\n+      }\n+      if (n->is_Load()) {\n+        \/\/ MemNode::can_see_stored_value looks up through many memory nodes,\n+        \/\/ which means we would need to notify modifications from far up in\n+        \/\/ the inputs all the way down to the LoadNode. We don't do that.\n+        continue;\n+      }\n+      tty->cr();\n+      tty->print_cr(\"Missed optimization (PhaseCCP):\");\n+      n->dump_bfs(1, 0, \"\");\n+      tty->print_cr(\"Current type:\");\n+      told->dump_on(tty);\n+      tty->cr();\n+      tty->print_cr(\"Optimized type:\");\n+      tnew->dump_on(tty);\n+      tty->cr();\n+      failure = true;\n+    }\n+  }\n+  \/\/ If we get this assert, check why the reported nodes were not processed again in CCP.\n+  \/\/ We should either make sure that these nodes are properly added back to the CCP worklist\n+  \/\/ in PhaseCCP::push_child_nodes_to_worklist() to update their type or add an exception\n+  \/\/ in the verification code above if that is not possible for some reason (like Load nodes).\n+  assert(!failure, \"Missed optimization opportunity in PhaseCCP\");\n+}\n+#endif\n+\n","filename":"src\/hotspot\/share\/opto\/phaseX.cpp","additions":53,"deletions":0,"binary":false,"changes":53,"status":"modified"},{"patch":"@@ -606,0 +606,4 @@\n+#ifdef ASSERT\n+  \/\/ For every node n on verify list, check if type(n) == n->Value()\n+  void verify_analyze(Unique_Node_List& worklist_verify);\n+#endif\n","filename":"src\/hotspot\/share\/opto\/phaseX.hpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1430,1 +1430,4 @@\n-  if( cop == Op_FastLock || cop == Op_FastUnlock || cmp->is_SubTypeCheck()) return NULL;\n+  if( cop == Op_FastLock || cop == Op_FastUnlock ||\n+      cmp->is_SubTypeCheck() || cop == Op_VectorTest ) {\n+    return NULL;\n+  }\n@@ -1462,0 +1465,15 @@\n+  \/\/ Change \"bool eq\/ne (cmp (cmove (bool tst (cmp2)) 1 0) 0)\" into \"bool tst\/~tst (cmp2)\"\n+  if (cop == Op_CmpI &&\n+      (_test._test == BoolTest::eq || _test._test == BoolTest::ne) &&\n+      cmp1_op == Op_CMoveI && cmp2->find_int_con(1) == 0) {\n+    \/\/ 0 should be on the true branch\n+    if (cmp1->in(CMoveNode::Condition)->is_Bool() &&\n+        cmp1->in(CMoveNode::IfTrue)->find_int_con(1) == 0 &&\n+        cmp1->in(CMoveNode::IfFalse)->find_int_con(0) != 0) {\n+      BoolNode* target = cmp1->in(CMoveNode::Condition)->as_Bool();\n+      return new BoolNode(target->in(1),\n+                          (_test._test == BoolTest::eq) ? target->_test._test :\n+                                                          target->_test.negate());\n+    }\n+  }\n+\n","filename":"src\/hotspot\/share\/opto\/subnode.cpp","additions":19,"deletions":1,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -1802,1 +1802,7 @@\n-  Node* opd2 = unbox_vector(argument(5), vbox_type, elem_bt, num_elem);\n+  Node* opd2;\n+  if (Matcher::vectortest_needs_second_argument(booltest == BoolTest::overflow,\n+                                                opd1->bottom_type()->isa_vectmask())) {\n+    opd2 = unbox_vector(argument(5), vbox_type, elem_bt, num_elem);\n+  } else {\n+    opd2 = opd1;\n+  }\n@@ -1806,2 +1812,0 @@\n-  Node* test = new VectorTestNode(opd1, opd2, booltest);\n-  test = gvn().transform(test);\n@@ -1809,1 +1813,7 @@\n-  set_result(test);\n+  Node* cmp = gvn().transform(new VectorTestNode(opd1, opd2, booltest));\n+  BoolTest::mask test = Matcher::vectortest_mask(booltest == BoolTest::overflow,\n+                                                 opd1->bottom_type()->isa_vectmask(), num_elem);\n+  Node* bol = gvn().transform(new BoolNode(cmp, test));\n+  Node* res = gvn().transform(new CMoveINode(bol, gvn().intcon(0), gvn().intcon(1), TypeInt::BOOL));\n+\n+  set_result(res);\n","filename":"src\/hotspot\/share\/opto\/vectorIntrinsics.cpp","additions":14,"deletions":4,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -1425,1 +1425,1 @@\n-class VectorTestNode : public Node {\n+class VectorTestNode : public CmpNode {\n@@ -1433,1 +1433,1 @@\n-  VectorTestNode(Node* in1, Node* in2, BoolTest::mask predicate) : Node(NULL, in1, in2), _predicate(predicate) {\n+  VectorTestNode(Node* in1, Node* in2, BoolTest::mask predicate) : CmpNode(in1, in2), _predicate(predicate) {\n@@ -1438,0 +1438,4 @@\n+  virtual const Type* Value(PhaseGVN* phase) const { return TypeInt::CC; }\n+  virtual const Type* sub(const Type*, const Type*) const { return TypeInt::CC; }\n+  BoolTest::mask get_predicate() const { return _predicate; }\n+\n@@ -1441,4 +1445,0 @@\n-  virtual const Type *bottom_type() const { return TypeInt::BOOL; }\n-  virtual uint ideal_reg() const { return Op_RegI; }  \/\/ TODO Should be RegFlags but due to missing comparison flags for BoolTest\n-                                                      \/\/ in middle-end, we make it boolean result directly.\n-  BoolTest::mask get_predicate() const { return _predicate; }\n","filename":"src\/hotspot\/share\/opto\/vectornode.hpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -629,1 +629,1 @@\n-  thread->print_stack();\n+  thread->print_jni_stack();\n","filename":"src\/hotspot\/share\/prims\/jni.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -145,1 +145,1 @@\n-  thr->print_stack();\n+  thr->print_jni_stack();\n@@ -196,1 +196,1 @@\n-      thr->print_stack();\n+      thr->print_jni_stack();\n","filename":"src\/hotspot\/share\/prims\/jniCheck.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,1 +38,1 @@\n-    thr->print_stack();\n+    thr->print_jni_stack();\n","filename":"src\/hotspot\/share\/prims\/jniCheck.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -586,1 +586,1 @@\n-    JvmtiEventController::set_user_enabled(this, (JavaThread*) NULL, (oop) NULL, event_type, enabled);\n+    JvmtiEventController::set_user_enabled(this, NULL, (oop) NULL, event_type, enabled);\n@@ -3525,1 +3525,1 @@\n-  if (!ik->access_flags().has_localvariable_table()) {\n+  if (!ik->has_localvariable_table()) {\n","filename":"src\/hotspot\/share\/prims\/jvmtiEnv.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2336,1 +2336,1 @@\n-    _result = ((JvmtiEnvBase *)_env)->get_owned_monitors((JavaThread*)target,\n+    _result = ((JvmtiEnvBase *)_env)->get_owned_monitors(java_thread,\n","filename":"src\/hotspot\/share\/prims\/jvmtiEnvBase.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -748,1 +748,1 @@\n-  : VM_BaseGetOrSetLocal((JavaThread*)NULL, depth, index, type, _DEFAULT_VALUE, false, self),\n+  : VM_BaseGetOrSetLocal(NULL, depth, index, type, _DEFAULT_VALUE, false, self),\n@@ -756,1 +756,1 @@\n-  : VM_BaseGetOrSetLocal((JavaThread*)NULL, depth, index, type, value, true, self),\n+  : VM_BaseGetOrSetLocal(NULL, depth, index, type, value, true, self),\n@@ -819,1 +819,1 @@\n-  : VM_BaseGetOrSetLocal((JavaThread*)NULL, depth, index, type, _DEFAULT_VALUE, false, self)\n+  : VM_BaseGetOrSetLocal(NULL, depth, index, type, _DEFAULT_VALUE, false, self)\n@@ -828,1 +828,1 @@\n-  : VM_BaseGetOrSetLocal((JavaThread*)NULL, depth, index, type, value, true, self)\n+  : VM_BaseGetOrSetLocal(NULL, depth, index, type, value, true, self)\n","filename":"src\/hotspot\/share\/prims\/jvmtiImpl.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -4374,10 +4374,3 @@\n-  if (scratch_class->access_flags().has_localvariable_table() !=\n-      the_class->access_flags().has_localvariable_table()) {\n-\n-    AccessFlags flags = the_class->access_flags();\n-    if (scratch_class->access_flags().has_localvariable_table()) {\n-      flags.set_has_localvariable_table();\n-    } else {\n-      flags.clear_has_localvariable_table();\n-    }\n-    the_class->set_access_flags(flags);\n+  if (scratch_class->has_localvariable_table() !=\n+      the_class->has_localvariable_table()) {\n+    the_class->set_has_localvariable_table(scratch_class->has_localvariable_table());\n","filename":"src\/hotspot\/share\/prims\/jvmtiRedefineClasses.cpp","additions":3,"deletions":10,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -83,1 +83,1 @@\n-    JavaThread* jt = (JavaThread*)thread;\n+    JavaThread* jt = JavaThread::cast(thread);\n","filename":"src\/hotspot\/share\/prims\/scopedMemoryAccess.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -177,1 +177,1 @@\n-      sprintf(buf, \"<null>\");\n+      os::snprintf_checked(buf, sizeof(buf), \"<null>\");\n","filename":"src\/hotspot\/share\/prims\/wbtestmethods\/parserTests.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -210,1 +210,3 @@\n-  if (h_name == NULL) return false;\n+  if (h_name == NULL) {\n+    return 0;\n+  }\n@@ -223,1 +225,3 @@\n-  if (h_name == NULL) return false;\n+  if (h_name == NULL) {\n+    return 0;\n+  }\n","filename":"src\/hotspot\/share\/prims\/whitebox.cpp","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -551,7 +551,0 @@\n-  { \"ExtendedDTraceProbes\",         JDK_Version::jdk(19), JDK_Version::jdk(20), JDK_Version::jdk(21) },\n-  { \"UseContainerCpuShares\",        JDK_Version::jdk(19), JDK_Version::jdk(20), JDK_Version::jdk(21) },\n-  { \"PreferContainerQuotaForCPUCount\", JDK_Version::jdk(19), JDK_Version::jdk(20), JDK_Version::jdk(21) },\n-  { \"AliasLevel\",                   JDK_Version::jdk(19), JDK_Version::jdk(20), JDK_Version::jdk(21) },\n-  { \"UseCodeAging\",                 JDK_Version::undefined(), JDK_Version::jdk(20), JDK_Version::jdk(21) },\n-  { \"PrintSharedDictionary\",          JDK_Version::undefined(), JDK_Version::jdk(20), JDK_Version::jdk(21) },\n-\n","filename":"src\/hotspot\/share\/runtime\/arguments.cpp","additions":0,"deletions":7,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -429,3 +429,2 @@\n-    Thread* thread = Thread::current();\n-    assert(thread->is_Java_thread(), \"\");\n-    ThreadToNativeFromVM trans((JavaThread*)thread);\n+    JavaThread* thread = JavaThread::current();\n+    ThreadToNativeFromVM trans(thread);\n","filename":"src\/hotspot\/share\/runtime\/continuation.cpp","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2566,1 +2566,1 @@\n-                    (JavaThread*)nullptr :\n+                    nullptr :\n@@ -2577,1 +2577,1 @@\n-  values.print_on((JavaThread*)nullptr, st);\n+  values.print_on(static_cast<JavaThread*>(nullptr), st);\n","filename":"src\/hotspot\/share\/runtime\/continuationFreezeThaw.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2583,1 +2583,1 @@\n-  sprintf(buf, \"reason%d\", reason);\n+  os::snprintf_checked(buf, sizeof(buf), \"reason%d\", reason);\n@@ -2593,1 +2593,1 @@\n-  sprintf(buf, \"action%d\", action);\n+  os::snprintf_checked(buf, sizeof(buf), \"action%d\", action);\n@@ -2716,1 +2716,1 @@\n-            sprintf(name, \"%s\/%s\/%s\",\n+            os::snprintf_checked(name, sizeof(name), \"%s\/%s\/%s\",\n","filename":"src\/hotspot\/share\/runtime\/deoptimization.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1568,1 +1568,1 @@\n-  \/\/ if (error) { tty->cr(); print_on((JavaThread*)nullptr, tty); }\n+  \/\/ if (error) { tty->cr(); print_on(static_cast<JavaThread*>(nullptr), tty); }\n","filename":"src\/hotspot\/share\/runtime\/frame.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1676,0 +1676,10 @@\n+\/\/ Print stack trace for checked JNI warnings and JNI fatal errors.\n+\/\/ This is the external format from above, but selecting the platform\n+\/\/ or vthread as applicable.\n+void JavaThread::print_jni_stack() {\n+  if (is_vthread_mounted()) {\n+    print_vthread_stack_on(tty);\n+  } else {\n+    print_stack_on(tty);\n+  }\n+}\n@@ -1709,0 +1719,50 @@\n+void JavaThread::print_vthread_stack_on(outputStream* st) {\n+  assert(is_vthread_mounted(), \"Caller should have checked this\");\n+  assert(has_last_Java_frame(), \"must be\");\n+\n+  Thread* current_thread = Thread::current();\n+  ResourceMark rm(current_thread);\n+  HandleMark hm(current_thread);\n+\n+  RegisterMap reg_map(this,\n+                      RegisterMap::UpdateMap::include,\n+                      RegisterMap::ProcessFrames::include,\n+                      RegisterMap::WalkContinuation::include);\n+  ContinuationEntry* cont_entry = last_continuation();\n+  vframe* start_vf = last_java_vframe(&reg_map);\n+  int count = 0;\n+  for (vframe* f = start_vf; f != NULL; f = f->sender()) {\n+    \/\/ Watch for end of vthread stack\n+    if (Continuation::is_continuation_enterSpecial(f->fr())) {\n+      assert(cont_entry == Continuation::get_continuation_entry_for_entry_frame(this, f->fr()), \"\");\n+      if (cont_entry->is_virtual_thread()) {\n+        break;\n+      }\n+      cont_entry = cont_entry->parent();\n+    }\n+    if (f->is_java_frame()) {\n+      javaVFrame* jvf = javaVFrame::cast(f);\n+      java_lang_Throwable::print_stack_element(st, jvf->method(), jvf->bci());\n+\n+      \/\/ Print out lock information\n+      if (JavaMonitorsInStackTrace) {\n+        jvf->print_lock_info_on(st, count);\n+      }\n+    } else {\n+      \/\/ Ignore non-Java frames\n+    }\n+\n+    \/\/ Bail-out case for too deep stacks if MaxJavaStackTraceDepth > 0\n+    count++;\n+    if (MaxJavaStackTraceDepth > 0 && MaxJavaStackTraceDepth == count) return;\n+  }\n+}\n+\n+void JavaThread::print_active_stack_on(outputStream* st) {\n+  if (is_vthread_mounted()) {\n+    print_vthread_stack_on(st);\n+  } else {\n+    print_stack_on(st);\n+  }\n+}\n+\n","filename":"src\/hotspot\/share\/runtime\/javaThread.cpp","additions":60,"deletions":0,"binary":false,"changes":60,"status":"modified"},{"patch":"@@ -825,1 +825,1 @@\n-    JavaThread* current = (JavaThread*)((intptr_t)env - in_bytes(jni_environment_offset()));\n+    JavaThread* current = reinterpret_cast<JavaThread*>(((intptr_t)env - in_bytes(jni_environment_offset())));\n@@ -941,0 +941,1 @@\n+  \/\/ These variants print carrier\/platform thread information only.\n@@ -943,0 +944,8 @@\n+  \/\/ This prints the currently mounted virtual thread.\n+  void print_vthread_stack_on(outputStream* st);\n+  \/\/ This prints the active stack: either carrier\/platform or virtual.\n+  void print_active_stack_on(outputStream* st);\n+  \/\/ Print stack trace for checked JNI warnings and JNI fatal errors.\n+  \/\/ This is the external format from above, but selecting the platform\n+  \/\/ or vthread as applicable.\n+  void print_jni_stack();\n","filename":"src\/hotspot\/share\/runtime\/javaThread.hpp","additions":10,"deletions":1,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -47,1 +47,1 @@\n-  our_watermark->link_watermark(their_watermark);\n+  our_watermark->push_linked_watermark(their_watermark);\n@@ -55,1 +55,1 @@\n-  our_watermark->link_watermark(NULL);\n+  our_watermark->pop_linked_watermark();\n","filename":"src\/hotspot\/share\/runtime\/keepStackGCProcessed.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1882,1 +1882,1 @@\n-  if (NotRunnable(current, (JavaThread*) owner_raw())) {\n+  if (NotRunnable(current, static_cast<JavaThread*>(owner_raw()))) {\n@@ -1931,1 +1931,1 @@\n-    JavaThread* ox = (JavaThread*) owner_raw();\n+    JavaThread* ox = static_cast<JavaThread*>(owner_raw());\n@@ -1933,1 +1933,1 @@\n-      ox = (JavaThread*)try_set_owner_from(NULL, current);\n+      ox = static_cast<JavaThread*>(try_set_owner_from(NULL, current));\n","filename":"src\/hotspot\/share\/runtime\/objectMonitor.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -102,0 +102,10 @@\n+int os::snprintf_checked(char* buf, size_t len, const char* fmt, ...) {\n+  va_list args;\n+  va_start(args, fmt);\n+  int result = os::vsnprintf(buf, len, fmt, args);\n+  va_end(args);\n+  assert(result >= 0, \"os::snprintf error\");\n+  assert(static_cast<size_t>(result) < len, \"os::snprintf truncated\");\n+  return result;\n+}\n+\n@@ -1317,1 +1327,1 @@\n-  sprintf(modified_mode, \"%s\" LINUX_ONLY(\"e\") BSD_ONLY(\"e\") WINDOWS_ONLY(\"N\"), mode);\n+  os::snprintf_checked(modified_mode, sizeof(modified_mode), \"%s\" LINUX_ONLY(\"e\") BSD_ONLY(\"e\") WINDOWS_ONLY(\"N\"), mode);\n","filename":"src\/hotspot\/share\/runtime\/os.cpp","additions":11,"deletions":1,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -750,0 +750,4 @@\n+  \/\/ Performs snprintf and asserts the result is non-negative (so there was not\n+  \/\/ an encoding error) and that the output was not truncated.\n+  static int snprintf_checked(char* buf, size_t len, const char* fmt, ...) ATTRIBUTE_PRINTF(3, 4);\n+\n","filename":"src\/hotspot\/share\/runtime\/os.hpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -87,1 +87,2 @@\n-  _name = NEW_C_HEAP_ARRAY(char, strlen(name) + strlen(prefix) + 2, mtInternal);\n+  const size_t _name_size = strlen(name) + strlen(prefix) + 2;\n+  _name = NEW_C_HEAP_ARRAY(char, _name_size, mtInternal);\n@@ -103,1 +104,1 @@\n-    sprintf(_name, \"%s.%s\", prefix, name);\n+    os::snprintf_checked(_name, _name_size, \"%s.%s\", prefix, name);\n@@ -337,1 +338,1 @@\n-   sprintf(result, \"%s.%s\", ns, name);\n+   os::snprintf_checked(result, len, \"%s.%s\", ns, name);\n","filename":"src\/hotspot\/share\/runtime\/perfData.cpp","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-class StackWatermarkFramesIterator : public CHeapObj<mtInternal> {\n+class StackWatermarkFramesIterator : public CHeapObj<mtThread> {\n@@ -169,1 +169,1 @@\n-    _linked_watermark(NULL) {\n+    _linked_watermarks() {\n@@ -253,3 +253,9 @@\n-void StackWatermark::link_watermark(StackWatermark* watermark) {\n-  assert(watermark == NULL || _linked_watermark == NULL, \"nesting not supported\");\n-  _linked_watermark = watermark;\n+void StackWatermark::push_linked_watermark(StackWatermark* watermark) {\n+  assert(JavaThread::current() == _jt, \"This code is not thread safe\");\n+  _linked_watermarks.push(watermark);\n+}\n+\n+void StackWatermark::pop_linked_watermark() {\n+  assert(JavaThread::current() == _jt, \"This code is not thread safe\");\n+  assert(_linked_watermarks.length() > 0, \"Mismatched push and pop?\");\n+  _linked_watermarks.pop();\n@@ -291,0 +297,9 @@\n+void StackWatermark::process_linked_watermarks() {\n+  assert(JavaThread::current() == _jt, \"This code is not thread safe\");\n+\n+  \/\/ Finish processing all linked stack watermarks\n+  for (StackWatermark* watermark : _linked_watermarks) {\n+    watermark->finish_processing(NULL \/* context *\/);\n+  }\n+}\n+\n@@ -293,4 +308,5 @@\n-  StackWatermark* linked_watermark = _linked_watermark;\n-  if (linked_watermark != NULL) {\n-    linked_watermark->finish_processing(NULL \/* context *\/);\n-  }\n+\n+  \/\/ If the thread waking up from a safepoint expected certain other\n+  \/\/ stack watermarks (potentially from different threads) are processed,\n+  \/\/ then we have to perform processing of said linked watermarks here.\n+  process_linked_watermarks();\n","filename":"src\/hotspot\/share\/runtime\/stackWatermark.cpp","additions":25,"deletions":9,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+#include \"utilities\/growableArray.hpp\"\n@@ -86,1 +87,1 @@\n-class StackWatermark : public CHeapObj<mtInternal> {\n+class StackWatermark : public CHeapObj<mtThread> {\n@@ -96,1 +97,1 @@\n-  StackWatermark* _linked_watermark;\n+  GrowableArrayCHeap<StackWatermark*, mtThread> _linked_watermarks;\n@@ -119,0 +120,2 @@\n+  void process_linked_watermarks();\n+\n@@ -132,1 +135,2 @@\n-  void link_watermark(StackWatermark* watermark);\n+  void push_linked_watermark(StackWatermark* watermark);\n+  void pop_linked_watermark();\n","filename":"src\/hotspot\/share\/runtime\/stackWatermark.hpp","additions":7,"deletions":3,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -375,1 +375,1 @@\n-    JavaThread* const owner = (JavaThread*) m->owner_raw();\n+    JavaThread* const owner = static_cast<JavaThread*>(m->owner_raw());\n@@ -432,1 +432,1 @@\n-    current->print_stack_on(&ss);\n+    current->print_active_stack_on(&ss);\n@@ -447,1 +447,1 @@\n-      current->print_stack_on(&info_stream);\n+      current->print_active_stack_on(&info_stream);\n","filename":"src\/hotspot\/share\/runtime\/synchronizer.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1069,1 +1069,1 @@\n-  nonstatic_field(CompileTask,                 _compile_id,                                   uint)                                  \\\n+  nonstatic_field(CompileTask,                 _compile_id,                                   int)                                   \\\n@@ -1878,1 +1878,1 @@\n-  declare_c2_type(VectorTestNode, Node)                                   \\\n+  declare_c2_type(VectorTestNode, CmpNode)                                \\\n@@ -2101,1 +2101,0 @@\n-  declare_constant(JVM_ACC_PROMOTED_FLAGS)                                \\\n","filename":"src\/hotspot\/share\/runtime\/vmStructs.cpp","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -25,0 +25,1 @@\n+#include \"cds\/filemap.hpp\"\n@@ -34,0 +35,10 @@\n+\/\/ Diff two counters, express them as signed, with range checks\n+static ssize_t counter_diff(size_t c1, size_t c2) {\n+  assert(c1 <= SSIZE_MAX, \"counter out of range: \" SIZE_FORMAT \".\", c1);\n+  assert(c2 <= SSIZE_MAX, \"counter out of range: \" SIZE_FORMAT \".\", c2);\n+  if (c1 > SSIZE_MAX || c2 > SSIZE_MAX) {\n+    return 0;\n+  }\n+  return c1 - c2;\n+}\n+\n@@ -198,0 +209,7 @@\n+#if INCLUDE_CDS\n+    if (flag == mtClassShared) {\n+        size_t read_only_bytes = FileMapInfo::readonly_total();\n+      output()->print(\", readonly=\" SIZE_FORMAT \"%s\",\n+                      amount_in_current_scale(read_only_bytes), scale);\n+    }\n+#endif\n@@ -465,2 +483,3 @@\n-    if (current_count != early_count) {\n-      out->print(\" %+d\", (int)(current_count - early_count));\n+    const ssize_t delta_count = counter_diff(current_count, early_count);\n+    if (delta_count != 0) {\n+      out->print(\" \" SSIZE_PLUS_FORMAT, delta_count);\n@@ -481,2 +500,3 @@\n-  if (current_count != early_count) {\n-    out->print(\" %+d\", (int)(current_count - early_count));\n+  const ssize_t delta_count = counter_diff(current_count, early_count);\n+  if (delta_count != 0) {\n+    out->print(\" \" SSIZE_PLUS_FORMAT, delta_count);\n@@ -554,4 +574,4 @@\n-      int class_count_diff = (int)(_current_baseline.class_count() -\n-        _early_baseline.class_count());\n-      if (_current_baseline.class_count() != _early_baseline.class_count()) {\n-        out->print(\" %+d\", (int)(_current_baseline.class_count() - _early_baseline.class_count()));\n+      const ssize_t class_count_diff =\n+          counter_diff(_current_baseline.class_count(), _early_baseline.class_count());\n+      if (class_count_diff != 0) {\n+        out->print(\" \" SSIZE_PLUS_FORMAT, class_count_diff);\n@@ -562,2 +582,4 @@\n-      if (_current_baseline.instance_class_count() != _early_baseline.instance_class_count()) {\n-        out->print(\" %+d\", (int)(_current_baseline.instance_class_count() - _early_baseline.instance_class_count()));\n+      const ssize_t instance_class_count_diff =\n+          counter_diff(_current_baseline.instance_class_count(), _early_baseline.instance_class_count());\n+      if (instance_class_count_diff != 0) {\n+        out->print(\" \" SSIZE_PLUS_FORMAT, instance_class_count_diff);\n@@ -566,2 +588,4 @@\n-      if (_current_baseline.array_class_count() != _early_baseline.array_class_count()) {\n-        out->print(\" %+d\", (int)(_current_baseline.array_class_count() - _early_baseline.array_class_count()));\n+      const ssize_t array_class_count_diff =\n+          counter_diff(_current_baseline.array_class_count(), _early_baseline.array_class_count());\n+      if (array_class_count_diff != 0) {\n+        out->print(\" \" SSIZE_PLUS_FORMAT, array_class_count_diff);\n@@ -574,2 +598,1 @@\n-      int thread_count_diff = (int)(_current_baseline.thread_count() -\n-          _early_baseline.thread_count());\n+      const ssize_t thread_count_diff = counter_diff(_current_baseline.thread_count(), _early_baseline.thread_count());\n@@ -577,1 +600,1 @@\n-        out->print(\" %+d\", thread_count_diff);\n+        out->print(\" \" SSIZE_PLUS_FORMAT, thread_count_diff);\n","filename":"src\/hotspot\/share\/services\/memReporter.cpp","additions":38,"deletions":15,"binary":false,"changes":53,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -75,1 +75,1 @@\n-  \/\/ Klass* and Method* flags\n+  \/\/ Method* flags\n@@ -78,2 +78,0 @@\n-  JVM_ACC_PROMOTED_FLAGS          = 0x00400000,     \/\/ flags promoted from methods to the holding klass\n-\n@@ -159,1 +157,1 @@\n-  \/\/ Klass* and Method* flags\n+  \/\/ Method* flags\n@@ -187,1 +185,0 @@\n-  void add_promoted_flags(jint flags)   { _flags |= (flags & JVM_ACC_PROMOTED_FLAGS); }\n","filename":"src\/hotspot\/share\/utilities\/accessFlags.hpp","additions":3,"deletions":6,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -449,1 +449,1 @@\n-  sprintf(buffer, \"printnm: \" INTPTR_FORMAT, p);\n+  os::snprintf_checked(buffer, sizeof(buffer), \"printnm: \" INTPTR_FORMAT, p);\n@@ -452,1 +452,1 @@\n-  if (cb->is_nmethod()) {\n+  if (cb != NULL && cb->is_nmethod()) {\n@@ -455,0 +455,2 @@\n+  } else {\n+    tty->print_cr(\"Invalid address\");\n","filename":"src\/hotspot\/share\/utilities\/debug.cpp","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -134,0 +134,1 @@\n+#define SSIZE_PLUS_FORMAT        \"%+\"         PRIdPTR\n","filename":"src\/hotspot\/share\/utilities\/globalDefinitions.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -132,0 +132,10 @@\n+#ifndef SSIZE_MAX\n+#ifdef _LP64\n+#define SSIZE_MIN LLONG_MIN\n+#define SSIZE_MAX LLONG_MAX\n+#else\n+#define SSIZE_MIN INT_MIN\n+#define SSIZE_MAX INT_MAX\n+#endif\n+#endif \/\/ SSIZE_MAX missing\n+\n","filename":"src\/hotspot\/share\/utilities\/globalDefinitions_visCPP.hpp","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n-\n+#include \"runtime\/os.hpp\"\n@@ -227,1 +227,1 @@\n-      sprintf(p, \"\\\\u%04x\", c);\n+      os::snprintf_checked(p, 7, \"\\\\u%04x\", c);  \/\/ counting terminating zero in\n@@ -521,1 +521,1 @@\n-      sprintf(p, \"\\\\u%04x\", c);\n+      os::snprintf_checked(p, 7, \"\\\\u%04x\", c);\n","filename":"src\/hotspot\/share\/utilities\/utf8.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -229,9 +229,7 @@\n-            if (modifiers.length > 0) {\n-                for (WatchEvent.Modifier modifier: modifiers) {\n-                    if (modifier == null)\n-                        return new NullPointerException();\n-                    if (!ExtendedOptions.SENSITIVITY_HIGH.matches(modifier) &&\n-                            !ExtendedOptions.SENSITIVITY_MEDIUM.matches(modifier) &&\n-                            !ExtendedOptions.SENSITIVITY_LOW.matches(modifier)) {\n-                        return new UnsupportedOperationException(\"Modifier not supported\");\n-                    }\n+            for (WatchEvent.Modifier modifier : modifiers) {\n+                if (modifier == null)\n+                    return new NullPointerException();\n+                if (!ExtendedOptions.SENSITIVITY_HIGH.matches(modifier) &&\n+                        !ExtendedOptions.SENSITIVITY_MEDIUM.matches(modifier) &&\n+                        !ExtendedOptions.SENSITIVITY_LOW.matches(modifier)) {\n+                    return new UnsupportedOperationException(\"Modifier not supported\");\n","filename":"src\/java.base\/linux\/classes\/sun\/nio\/fs\/LinuxWatchService.java","additions":7,"deletions":9,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -31,1 +31,2 @@\n-import static sun.nio.fs.BsdNativeDispatcher.setattrlist;\n+import static sun.nio.fs.BsdNativeDispatcher.*;\n+import static sun.nio.fs.UnixNativeDispatcher.lutimes;\n@@ -52,10 +53,6 @@\n-        int commonattr = 0;\n-        long modValue = 0L;\n-        if (lastModifiedTime != null) {\n-            modValue = lastModifiedTime.to(TimeUnit.NANOSECONDS);\n-            commonattr |= UnixConstants.ATTR_CMN_MODTIME;\n-        }\n-        long accValue = 0L;\n-        if (lastAccessTime != null) {\n-            accValue = lastAccessTime.to(TimeUnit.NANOSECONDS);\n-            commonattr |= UnixConstants.ATTR_CMN_ACCTIME;\n+        boolean useLutimes = false;\n+        try {\n+            useLutimes = !followLinks &&\n+                UnixFileAttributes.get(path, false).isSymbolicLink();\n+        } catch (UnixException x) {\n+            x.rethrowAsIOException(path);\n@@ -63,4 +60,8 @@\n-        long createValue = 0L;\n-        if (createTime != null) {\n-            createValue = createTime.to(TimeUnit.NANOSECONDS);\n-            commonattr |= UnixConstants.ATTR_CMN_CRTIME;\n+\n+        int fd = -1;\n+        if (!useLutimes) {\n+            try {\n+                fd = path.openForAttributeAccess(followLinks);\n+            } catch (UnixException x) {\n+                x.rethrowAsIOException(path);\n+            }\n@@ -70,4 +71,70 @@\n-            setattrlist(path, commonattr, modValue, accValue, createValue,\n-                        followLinks ?  0 : UnixConstants.FSOPT_NOFOLLOW);\n-        } catch (UnixException x) {\n-            x.rethrowAsIOException(path);\n+            \/\/ not all volumes support setattrlist(2), so set the last\n+            \/\/ modified and last access times using futimens(2)\/lutimes(3)\n+            if (lastModifiedTime != null || lastAccessTime != null) {\n+                \/\/ if not changing both attributes then need existing attributes\n+                if (lastModifiedTime == null || lastAccessTime == null) {\n+                    try {\n+                        UnixFileAttributes attrs = UnixFileAttributes.get(fd);\n+                        if (lastModifiedTime == null)\n+                            lastModifiedTime = attrs.lastModifiedTime();\n+                        if (lastAccessTime == null)\n+                            lastAccessTime = attrs.lastAccessTime();\n+                    } catch (UnixException x) {\n+                        x.rethrowAsIOException(path);\n+                    }\n+                }\n+\n+                \/\/ update times\n+                TimeUnit timeUnit = useLutimes ?\n+                    TimeUnit.MICROSECONDS : TimeUnit.NANOSECONDS;\n+                long modValue = lastModifiedTime.to(timeUnit);\n+                long accessValue= lastAccessTime.to(timeUnit);\n+\n+                boolean retry = false;\n+                try {\n+                    if (useLutimes)\n+                        lutimes(path, accessValue, modValue);\n+                    else\n+                        futimens(fd, accessValue, modValue);\n+                } catch (UnixException x) {\n+                    \/\/ if futimens fails with EINVAL and one\/both of the times is\n+                    \/\/ negative then we adjust the value to the epoch and retry.\n+                    if (x.errno() == UnixConstants.EINVAL &&\n+                        (modValue < 0L || accessValue < 0L)) {\n+                        retry = true;\n+                    } else {\n+                        x.rethrowAsIOException(path);\n+                    }\n+                }\n+                if (retry) {\n+                    if (modValue < 0L) modValue = 0L;\n+                    if (accessValue < 0L) accessValue= 0L;\n+                    try {\n+                        if (useLutimes)\n+                            lutimes(path, accessValue, modValue);\n+                        else\n+                            futimens(fd, accessValue, modValue);\n+                    } catch (UnixException x) {\n+                        x.rethrowAsIOException(path);\n+                    }\n+                }\n+            }\n+\n+            \/\/ set the creation time using setattrlist\n+            if (createTime != null) {\n+                long createValue = createTime.to(TimeUnit.NANOSECONDS);\n+                int commonattr = UnixConstants.ATTR_CMN_CRTIME;\n+                try {\n+                    if (useLutimes)\n+                        setattrlist(path, commonattr, 0L, 0L, createValue,\n+                            followLinks ?  0 : UnixConstants.FSOPT_NOFOLLOW);\n+                    else\n+                        fsetattrlist(fd, commonattr, 0L, 0L, createValue,\n+                            followLinks ?  0 : UnixConstants.FSOPT_NOFOLLOW);\n+                } catch (UnixException x) {\n+                    x.rethrowAsIOException(path);\n+                }\n+            }\n+        } finally {\n+            if (!useLutimes)\n+                close(fd, e -> null);\n","filename":"src\/java.base\/macosx\/classes\/sun\/nio\/fs\/BsdFileAttributeViews.java","additions":86,"deletions":19,"binary":false,"changes":105,"status":"modified"},{"patch":"@@ -107,0 +107,21 @@\n+    \/**\n+     * fsetattrlist(int fd, struct attrlist* attrList, void* attrBuf,\n+     *              size_t attrBufSize, unsigned long options)\n+     *\/\n+    static void fsetattrlist(int fd, int commonattr, long modTime,\n+                             long accTime, long createTime, long options)\n+        throws UnixException\n+    {\n+        long comp = Blocker.begin();\n+        try {\n+            fsetattrlist0(fd, commonattr, modTime, accTime,\n+                          createTime, options);\n+        } finally {\n+            Blocker.end(comp);\n+        }\n+    }\n+    private static native void fsetattrlist0(int fd, int commonattr,\n+                                             long modTime, long accTime,\n+                                             long createTime, long options)\n+        throws UnixException;\n+\n","filename":"src\/java.base\/macosx\/classes\/sun\/nio\/fs\/BsdNativeDispatcher.java","additions":21,"deletions":0,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -42,0 +42,1 @@\n+#include <unistd.h>\n@@ -246,4 +247,2 @@\n-JNIEXPORT void JNICALL\n-Java_sun_nio_fs_BsdNativeDispatcher_setattrlist0(JNIEnv* env, jclass this,\n-    jlong pathAddress, int commonattr, jlong modTime, jlong accTime,\n-    jlong createTime, jlong options)\n+size_t initattrlist(jint commonattr, jlong modTime, jlong accTime,\n+    jlong createTime, const int attrsize, char* buf, struct attrlist *attrList)\n@@ -251,5 +250,0 @@\n-    const char* path = (const char*)jlong_to_ptr(pathAddress);\n-    \/\/ attributes must align on 4-byte boundaries per the getattrlist(2) spec\n-    const int attrsize = ((sizeof(struct timespec) + 3)\/4)*4;\n-    char buf[3*attrsize];\n-\n@@ -257,0 +251,1 @@\n+\n@@ -277,0 +272,35 @@\n+    memset(attrList, 0, sizeof(struct attrlist));\n+    attrList->bitmapcount = ATTR_BIT_MAP_COUNT;\n+    attrList->commonattr = commonattr;\n+\n+    return count*attrsize;\n+}\n+\n+JNIEXPORT void JNICALL\n+Java_sun_nio_fs_BsdNativeDispatcher_setattrlist0(JNIEnv* env, jclass this,\n+    jlong pathAddress, int commonattr, jlong modTime, jlong accTime,\n+    jlong createTime, jlong options)\n+{\n+    const char* path = (const char*)jlong_to_ptr(pathAddress);\n+    \/\/ attributes must align on 4-byte boundaries per the getattrlist(2) spec\n+    const int attrsize = ((sizeof(struct timespec) + 3)\/4)*4;\n+    char buf[3*attrsize];\n+\n+    struct attrlist attrList;\n+    size_t attrBufSize = initattrlist(commonattr, modTime, accTime, createTime,\n+                                      attrsize, buf, &attrList);\n+\n+    if (setattrlist(path, &attrList, (void*)buf, attrBufSize, options) != 0) {\n+        throwUnixException(env, errno);\n+    }\n+}\n+\n+JNIEXPORT void JNICALL\n+Java_sun_nio_fs_BsdNativeDispatcher_fsetattrlist0(JNIEnv* env, jclass this,\n+    jint fd, int commonattr, jlong modTime, jlong accTime,\n+    jlong createTime, jlong options)\n+{\n+    \/\/ attributes must align on 4-byte boundaries per the getattrlist(2) spec\n+    const int attrsize = ((sizeof(struct timespec) + 3)\/4)*4;\n+    char buf[3*attrsize];\n+\n@@ -278,3 +308,2 @@\n-    memset(&attrList, 0, sizeof(struct attrlist));\n-    attrList.bitmapcount = ATTR_BIT_MAP_COUNT;\n-    attrList.commonattr = commonattr;\n+    size_t attrBufSize = initattrlist(commonattr, modTime, accTime, createTime,\n+                                      attrsize, buf, &attrList);\n@@ -282,1 +311,1 @@\n-    if (setattrlist(path, &attrList, (void*)buf, count*attrsize, options) != 0) {\n+    if (fsetattrlist(fd, &attrList, (void*)buf, attrBufSize, options) != 0) {\n","filename":"src\/java.base\/macosx\/native\/libnio\/fs\/BsdNativeDispatcher.c","additions":42,"deletions":13,"binary":false,"changes":55,"status":"modified"},{"patch":"@@ -36,2 +36,0 @@\n-import sun.nio.cs.StreamDecoder;\n-import sun.nio.cs.StreamEncoder;\n@@ -85,1 +83,1 @@\n- * <blockquote><pre>{@code\n+ * {@snippet lang=java :\n@@ -93,1 +91,1 @@\n- * }<\/pre><\/blockquote>\n+ * }\n@@ -98,0 +96,5 @@\n+public sealed class Console implements Flushable permits ConsoleImpl, ProxyingConsole {\n+    \/**\n+     * Package private no-arg constructor.\n+     *\/\n+    Console() {}\n@@ -99,8 +102,6 @@\n-public class Console implements Flushable\n-{\n-   \/**\n-    * Retrieves the unique {@link java.io.PrintWriter PrintWriter} object\n-    * associated with this console.\n-    *\n-    * @return  The printwriter associated with this console\n-    *\/\n+    \/**\n+     * Retrieves the unique {@link java.io.PrintWriter PrintWriter} object\n+     * associated with this console.\n+     *\n+     * @return  The printwriter associated with this console\n+     *\/\n@@ -108,1 +109,1 @@\n-        return pw;\n+        throw newUnsupportedOperationException();\n@@ -111,31 +112,31 @@\n-   \/**\n-    * Retrieves the unique {@link java.io.Reader Reader} object associated\n-    * with this console.\n-    * <p>\n-    * This method is intended to be used by sophisticated applications, for\n-    * example, a {@link java.util.Scanner} object which utilizes the rich\n-    * parsing\/scanning functionality provided by the {@code Scanner}:\n-    * <blockquote><pre>\n-    * Console con = System.console();\n-    * if (con != null) {\n-    *     Scanner sc = new Scanner(con.reader());\n-    *     ...\n-    * }\n-    * <\/pre><\/blockquote>\n-    * <p>\n-    * For simple applications requiring only line-oriented reading, use\n-    * {@link #readLine}.\n-    * <p>\n-    * The bulk read operations {@link java.io.Reader#read(char[]) read(char[]) },\n-    * {@link java.io.Reader#read(char[], int, int) read(char[], int, int) } and\n-    * {@link java.io.Reader#read(java.nio.CharBuffer) read(java.nio.CharBuffer)}\n-    * on the returned object will not read in characters beyond the line\n-    * bound for each invocation, even if the destination buffer has space for\n-    * more characters. The {@code Reader}'s {@code read} methods may block if a\n-    * line bound has not been entered or reached on the console's input device.\n-    * A line bound is considered to be any one of a line feed ({@code '\\n'}),\n-    * a carriage return ({@code '\\r'}), a carriage return followed immediately\n-    * by a linefeed, or an end of stream.\n-    *\n-    * @return  The reader associated with this console\n-    *\/\n+    \/**\n+     * Retrieves the unique {@link java.io.Reader Reader} object associated\n+     * with this console.\n+     * <p>\n+     * This method is intended to be used by sophisticated applications, for\n+     * example, a {@link java.util.Scanner} object which utilizes the rich\n+     * parsing\/scanning functionality provided by the {@code Scanner}:\n+     * <blockquote><pre>\n+     * Console con = System.console();\n+     * if (con != null) {\n+     *     Scanner sc = new Scanner(con.reader());\n+     *     ...\n+     * }\n+     * <\/pre><\/blockquote>\n+     * <p>\n+     * For simple applications requiring only line-oriented reading, use\n+     * {@link #readLine}.\n+     * <p>\n+     * The bulk read operations {@link java.io.Reader#read(char[]) read(char[]) },\n+     * {@link java.io.Reader#read(char[], int, int) read(char[], int, int) } and\n+     * {@link java.io.Reader#read(java.nio.CharBuffer) read(java.nio.CharBuffer)}\n+     * on the returned object will not read in characters beyond the line\n+     * bound for each invocation, even if the destination buffer has space for\n+     * more characters. The {@code Reader}'s {@code read} methods may block if a\n+     * line bound has not been entered or reached on the console's input device.\n+     * A line bound is considered to be any one of a line feed ({@code '\\n'}),\n+     * a carriage return ({@code '\\r'}), a carriage return followed immediately\n+     * by a linefeed, or an end of stream.\n+     *\n+     * @return  The reader associated with this console\n+     *\/\n@@ -143,1 +144,1 @@\n-        return reader;\n+        throw newUnsupportedOperationException();\n@@ -146,30 +147,30 @@\n-   \/**\n-    * Writes a formatted string to this console's output stream using\n-    * the specified format string and arguments.\n-    *\n-    * @param  fmt\n-    *         A format string as described in <a\n-    *         href=\"..\/util\/Formatter.html#syntax\">Format string syntax<\/a>\n-    *\n-    * @param  args\n-    *         Arguments referenced by the format specifiers in the format\n-    *         string.  If there are more arguments than format specifiers, the\n-    *         extra arguments are ignored.  The number of arguments is\n-    *         variable and may be zero.  The maximum number of arguments is\n-    *         limited by the maximum dimension of a Java array as defined by\n-    *         <cite>The Java Virtual Machine Specification<\/cite>.\n-    *         The behaviour on a\n-    *         {@code null} argument depends on the <a\n-    *         href=\"..\/util\/Formatter.html#syntax\">conversion<\/a>.\n-    *\n-    * @throws  IllegalFormatException\n-    *          If a format string contains an illegal syntax, a format\n-    *          specifier that is incompatible with the given arguments,\n-    *          insufficient arguments given the format string, or other\n-    *          illegal conditions.  For specification of all possible\n-    *          formatting errors, see the <a\n-    *          href=\"..\/util\/Formatter.html#detail\">Details<\/a> section\n-    *          of the formatter class specification.\n-    *\n-    * @return  This console\n-    *\/\n+    \/**\n+     * Writes a formatted string to this console's output stream using\n+     * the specified format string and arguments.\n+     *\n+     * @param  fmt\n+     *         A format string as described in <a\n+     *         href=\"..\/util\/Formatter.html#syntax\">Format string syntax<\/a>\n+     *\n+     * @param  args\n+     *         Arguments referenced by the format specifiers in the format\n+     *         string.  If there are more arguments than format specifiers, the\n+     *         extra arguments are ignored.  The number of arguments is\n+     *         variable and may be zero.  The maximum number of arguments is\n+     *         limited by the maximum dimension of a Java array as defined by\n+     *         <cite>The Java Virtual Machine Specification<\/cite>.\n+     *         The behaviour on a\n+     *         {@code null} argument depends on the <a\n+     *         href=\"..\/util\/Formatter.html#syntax\">conversion<\/a>.\n+     *\n+     * @throws  IllegalFormatException\n+     *          If a format string contains an illegal syntax, a format\n+     *          specifier that is incompatible with the given arguments,\n+     *          insufficient arguments given the format string, or other\n+     *          illegal conditions.  For specification of all possible\n+     *          formatting errors, see the <a\n+     *          href=\"..\/util\/Formatter.html#detail\">Details<\/a> section\n+     *          of the formatter class specification.\n+     *\n+     * @return  This console\n+     *\/\n@@ -177,2 +178,1 @@\n-        formatter.format(fmt, args).flush();\n-        return this;\n+        throw newUnsupportedOperationException();\n@@ -181,35 +181,35 @@\n-   \/**\n-    * A convenience method to write a formatted string to this console's\n-    * output stream using the specified format string and arguments.\n-    *\n-    * <p> An invocation of this method of the form\n-    * {@code con.printf(format, args)} behaves in exactly the same way\n-    * as the invocation of\n-    * <pre>con.format(format, args)<\/pre>.\n-    *\n-    * @param  format\n-    *         A format string as described in <a\n-    *         href=\"..\/util\/Formatter.html#syntax\">Format string syntax<\/a>.\n-    *\n-    * @param  args\n-    *         Arguments referenced by the format specifiers in the format\n-    *         string.  If there are more arguments than format specifiers, the\n-    *         extra arguments are ignored.  The number of arguments is\n-    *         variable and may be zero.  The maximum number of arguments is\n-    *         limited by the maximum dimension of a Java array as defined by\n-    *         <cite>The Java Virtual Machine Specification<\/cite>.\n-    *         The behaviour on a\n-    *         {@code null} argument depends on the <a\n-    *         href=\"..\/util\/Formatter.html#syntax\">conversion<\/a>.\n-    *\n-    * @throws  IllegalFormatException\n-    *          If a format string contains an illegal syntax, a format\n-    *          specifier that is incompatible with the given arguments,\n-    *          insufficient arguments given the format string, or other\n-    *          illegal conditions.  For specification of all possible\n-    *          formatting errors, see the <a\n-    *          href=\"..\/util\/Formatter.html#detail\">Details<\/a> section of the\n-    *          formatter class specification.\n-    *\n-    * @return  This console\n-    *\/\n+    \/**\n+     * A convenience method to write a formatted string to this console's\n+     * output stream using the specified format string and arguments.\n+     *\n+     * <p> An invocation of this method of the form\n+     * {@code con.printf(format, args)} behaves in exactly the same way\n+     * as the invocation of\n+     * <pre>con.format(format, args)<\/pre>.\n+     *\n+     * @param  format\n+     *         A format string as described in <a\n+     *         href=\"..\/util\/Formatter.html#syntax\">Format string syntax<\/a>.\n+     *\n+     * @param  args\n+     *         Arguments referenced by the format specifiers in the format\n+     *         string.  If there are more arguments than format specifiers, the\n+     *         extra arguments are ignored.  The number of arguments is\n+     *         variable and may be zero.  The maximum number of arguments is\n+     *         limited by the maximum dimension of a Java array as defined by\n+     *         <cite>The Java Virtual Machine Specification<\/cite>.\n+     *         The behaviour on a\n+     *         {@code null} argument depends on the <a\n+     *         href=\"..\/util\/Formatter.html#syntax\">conversion<\/a>.\n+     *\n+     * @throws  IllegalFormatException\n+     *          If a format string contains an illegal syntax, a format\n+     *          specifier that is incompatible with the given arguments,\n+     *          insufficient arguments given the format string, or other\n+     *          illegal conditions.  For specification of all possible\n+     *          formatting errors, see the <a\n+     *          href=\"..\/util\/Formatter.html#detail\">Details<\/a> section of the\n+     *          formatter class specification.\n+     *\n+     * @return  This console\n+     *\/\n@@ -217,1 +217,1 @@\n-        return format(format, args);\n+        throw newUnsupportedOperationException();\n@@ -220,31 +220,31 @@\n-   \/**\n-    * Provides a formatted prompt, then reads a single line of text from the\n-    * console.\n-    *\n-    * @param  fmt\n-    *         A format string as described in <a\n-    *         href=\"..\/util\/Formatter.html#syntax\">Format string syntax<\/a>.\n-    *\n-    * @param  args\n-    *         Arguments referenced by the format specifiers in the format\n-    *         string.  If there are more arguments than format specifiers, the\n-    *         extra arguments are ignored.  The maximum number of arguments is\n-    *         limited by the maximum dimension of a Java array as defined by\n-    *         <cite>The Java Virtual Machine Specification<\/cite>.\n-    *\n-    * @throws  IllegalFormatException\n-    *          If a format string contains an illegal syntax, a format\n-    *          specifier that is incompatible with the given arguments,\n-    *          insufficient arguments given the format string, or other\n-    *          illegal conditions.  For specification of all possible\n-    *          formatting errors, see the <a\n-    *          href=\"..\/util\/Formatter.html#detail\">Details<\/a> section\n-    *          of the formatter class specification.\n-    *\n-    * @throws IOError\n-    *         If an I\/O error occurs.\n-    *\n-    * @return  A string containing the line read from the console, not\n-    *          including any line-termination characters, or {@code null}\n-    *          if an end of stream has been reached.\n-    *\/\n+    \/**\n+     * Provides a formatted prompt, then reads a single line of text from the\n+     * console.\n+     *\n+     * @param  fmt\n+     *         A format string as described in <a\n+     *         href=\"..\/util\/Formatter.html#syntax\">Format string syntax<\/a>.\n+     *\n+     * @param  args\n+     *         Arguments referenced by the format specifiers in the format\n+     *         string.  If there are more arguments than format specifiers, the\n+     *         extra arguments are ignored.  The maximum number of arguments is\n+     *         limited by the maximum dimension of a Java array as defined by\n+     *         <cite>The Java Virtual Machine Specification<\/cite>.\n+     *\n+     * @throws  IllegalFormatException\n+     *          If a format string contains an illegal syntax, a format\n+     *          specifier that is incompatible with the given arguments,\n+     *          insufficient arguments given the format string, or other\n+     *          illegal conditions.  For specification of all possible\n+     *          formatting errors, see the <a\n+     *          href=\"..\/util\/Formatter.html#detail\">Details<\/a> section\n+     *          of the formatter class specification.\n+     *\n+     * @throws IOError\n+     *         If an I\/O error occurs.\n+     *\n+     * @return  A string containing the line read from the console, not\n+     *          including any line-termination characters, or {@code null}\n+     *          if an end of stream has been reached.\n+     *\/\n@@ -252,15 +252,1 @@\n-        String line = null;\n-        synchronized (writeLock) {\n-            synchronized(readLock) {\n-                if (!fmt.isEmpty())\n-                    pw.format(fmt, args);\n-                try {\n-                    char[] ca = readline(false);\n-                    if (ca != null)\n-                        line = new String(ca);\n-                } catch (IOException x) {\n-                    throw new IOError(x);\n-                }\n-            }\n-        }\n-        return line;\n+        throw newUnsupportedOperationException();\n@@ -269,10 +255,10 @@\n-   \/**\n-    * Reads a single line of text from the console.\n-    *\n-    * @throws IOError\n-    *         If an I\/O error occurs.\n-    *\n-    * @return  A string containing the line read from the console, not\n-    *          including any line-termination characters, or {@code null}\n-    *          if an end of stream has been reached.\n-    *\/\n+    \/**\n+     * Reads a single line of text from the console.\n+     *\n+     * @throws IOError\n+     *         If an I\/O error occurs.\n+     *\n+     * @return  A string containing the line read from the console, not\n+     *          including any line-termination characters, or {@code null}\n+     *          if an end of stream has been reached.\n+     *\/\n@@ -280,1 +266,1 @@\n-        return readLine(\"\");\n+        throw newUnsupportedOperationException();\n@@ -283,32 +269,32 @@\n-   \/**\n-    * Provides a formatted prompt, then reads a password or passphrase from\n-    * the console with echoing disabled.\n-    *\n-    * @param  fmt\n-    *         A format string as described in <a\n-    *         href=\"..\/util\/Formatter.html#syntax\">Format string syntax<\/a>\n-    *         for the prompt text.\n-    *\n-    * @param  args\n-    *         Arguments referenced by the format specifiers in the format\n-    *         string.  If there are more arguments than format specifiers, the\n-    *         extra arguments are ignored.  The maximum number of arguments is\n-    *         limited by the maximum dimension of a Java array as defined by\n-    *         <cite>The Java Virtual Machine Specification<\/cite>.\n-    *\n-    * @throws  IllegalFormatException\n-    *          If a format string contains an illegal syntax, a format\n-    *          specifier that is incompatible with the given arguments,\n-    *          insufficient arguments given the format string, or other\n-    *          illegal conditions.  For specification of all possible\n-    *          formatting errors, see the <a\n-    *          href=\"..\/util\/Formatter.html#detail\">Details<\/a>\n-    *          section of the formatter class specification.\n-    *\n-    * @throws IOError\n-    *         If an I\/O error occurs.\n-    *\n-    * @return  A character array containing the password or passphrase read\n-    *          from the console, not including any line-termination characters,\n-    *          or {@code null} if an end of stream has been reached.\n-    *\/\n+    \/**\n+     * Provides a formatted prompt, then reads a password or passphrase from\n+     * the console with echoing disabled.\n+     *\n+     * @param  fmt\n+     *         A format string as described in <a\n+     *         href=\"..\/util\/Formatter.html#syntax\">Format string syntax<\/a>\n+     *         for the prompt text.\n+     *\n+     * @param  args\n+     *         Arguments referenced by the format specifiers in the format\n+     *         string.  If there are more arguments than format specifiers, the\n+     *         extra arguments are ignored.  The maximum number of arguments is\n+     *         limited by the maximum dimension of a Java array as defined by\n+     *         <cite>The Java Virtual Machine Specification<\/cite>.\n+     *\n+     * @throws  IllegalFormatException\n+     *          If a format string contains an illegal syntax, a format\n+     *          specifier that is incompatible with the given arguments,\n+     *          insufficient arguments given the format string, or other\n+     *          illegal conditions.  For specification of all possible\n+     *          formatting errors, see the <a\n+     *          href=\"..\/util\/Formatter.html#detail\">Details<\/a>\n+     *          section of the formatter class specification.\n+     *\n+     * @throws IOError\n+     *         If an I\/O error occurs.\n+     *\n+     * @return  A character array containing the password or passphrase read\n+     *          from the console, not including any line-termination characters,\n+     *          or {@code null} if an end of stream has been reached.\n+     *\/\n@@ -316,33 +302,1 @@\n-        char[] passwd = null;\n-        synchronized (writeLock) {\n-            synchronized(readLock) {\n-                installShutdownHook();\n-                try {\n-                    restoreEcho = echo(false);\n-                } catch (IOException x) {\n-                    throw new IOError(x);\n-                }\n-                IOError ioe = null;\n-                try {\n-                    if (!fmt.isEmpty())\n-                        pw.format(fmt, args);\n-                    passwd = readline(true);\n-                } catch (IOException x) {\n-                    ioe = new IOError(x);\n-                } finally {\n-                    try {\n-                        if (restoreEcho)\n-                            restoreEcho = echo(true);\n-                    } catch (IOException x) {\n-                        if (ioe == null)\n-                            ioe = new IOError(x);\n-                        else\n-                            ioe.addSuppressed(x);\n-                    }\n-                    if (ioe != null)\n-                        throw ioe;\n-                }\n-                pw.println();\n-            }\n-        }\n-        return passwd;\n+        throw newUnsupportedOperationException();\n@@ -351,35 +305,10 @@\n-    private void installShutdownHook() {\n-        if (shutdownHookInstalled)\n-            return;\n-        try {\n-            \/\/ Add a shutdown hook to restore console's echo state should\n-            \/\/ it be necessary.\n-            SharedSecrets.getJavaLangAccess()\n-                .registerShutdownHook(0 \/* shutdown hook invocation order *\/,\n-                    false \/* only register if shutdown is not in progress *\/,\n-                    new Runnable() {\n-                        public void run() {\n-                            try {\n-                                if (restoreEcho) {\n-                                    echo(true);\n-                                }\n-                            } catch (IOException x) { }\n-                        }\n-                    });\n-        } catch (IllegalStateException e) {\n-            \/\/ shutdown is already in progress and readPassword is first used\n-            \/\/ by a shutdown hook\n-        }\n-        shutdownHookInstalled = true;\n-    }\n-\n-   \/**\n-    * Reads a password or passphrase from the console with echoing disabled\n-    *\n-    * @throws IOError\n-    *         If an I\/O error occurs.\n-    *\n-    * @return  A character array containing the password or passphrase read\n-    *          from the console, not including any line-termination characters,\n-    *          or {@code null} if an end of stream has been reached.\n-    *\/\n+    \/**\n+     * Reads a password or passphrase from the console with echoing disabled\n+     *\n+     * @throws IOError\n+     *         If an I\/O error occurs.\n+     *\n+     * @return  A character array containing the password or passphrase read\n+     *          from the console, not including any line-termination characters,\n+     *          or {@code null} if an end of stream has been reached.\n+     *\/\n@@ -387,1 +316,1 @@\n-        return readPassword(\"\");\n+        throw newUnsupportedOperationException();\n@@ -395,1 +324,1 @@\n-        pw.flush();\n+        throw newUnsupportedOperationException();\n@@ -398,1 +327,0 @@\n-\n@@ -413,2 +341,1 @@\n-        assert CHARSET != null : \"charset() should not return null\";\n-        return CHARSET;\n+        throw newUnsupportedOperationException();\n@@ -417,158 +344,3 @@\n-    private Object readLock;\n-    private Object writeLock;\n-    private Reader reader;\n-    private Writer out;\n-    private PrintWriter pw;\n-    private Formatter formatter;\n-    private char[] rcb;\n-    private boolean restoreEcho;\n-    private boolean shutdownHookInstalled;\n-    private static native String encoding();\n-    \/*\n-     * Sets the console echo status to {@code on} and returns the previous\n-     * console on\/off status.\n-     * @param on    the echo status to set to. {@code true} for echo on and\n-     *              {@code false} for echo off\n-     * @return true if the previous console echo status is on\n-     *\/\n-    private static native boolean echo(boolean on) throws IOException;\n-\n-    private char[] readline(boolean zeroOut) throws IOException {\n-        int len = reader.read(rcb, 0, rcb.length);\n-        if (len < 0)\n-            return null;  \/\/EOL\n-        if (rcb[len-1] == '\\r')\n-            len--;        \/\/remove CR at end;\n-        else if (rcb[len-1] == '\\n') {\n-            len--;        \/\/remove LF at end;\n-            if (len > 0 && rcb[len-1] == '\\r')\n-                len--;    \/\/remove the CR, if there is one\n-        }\n-        char[] b = new char[len];\n-        if (len > 0) {\n-            System.arraycopy(rcb, 0, b, 0, len);\n-            if (zeroOut) {\n-                Arrays.fill(rcb, 0, len, ' ');\n-            }\n-        }\n-        return b;\n-    }\n-\n-    private char[] grow() {\n-        assert Thread.holdsLock(readLock);\n-        char[] t = new char[rcb.length * 2];\n-        System.arraycopy(rcb, 0, t, 0, rcb.length);\n-        rcb = t;\n-        return rcb;\n-    }\n-\n-    class LineReader extends Reader {\n-        private Reader in;\n-        private char[] cb;\n-        private int nChars, nextChar;\n-        boolean leftoverLF;\n-        LineReader(Reader in) {\n-            this.in = in;\n-            cb = new char[1024];\n-            nextChar = nChars = 0;\n-            leftoverLF = false;\n-        }\n-        public void close () {}\n-        public boolean ready() throws IOException {\n-            \/\/in.ready synchronizes on readLock already\n-            return in.ready();\n-        }\n-\n-        public int read(char[] cbuf, int offset, int length)\n-            throws IOException\n-        {\n-            int off = offset;\n-            int end = offset + length;\n-            if (offset < 0 || offset > cbuf.length || length < 0 ||\n-                end < 0 || end > cbuf.length) {\n-                throw new IndexOutOfBoundsException();\n-            }\n-            synchronized(readLock) {\n-                boolean eof = false;\n-                char c = 0;\n-                for (;;) {\n-                    if (nextChar >= nChars) {   \/\/fill\n-                        int n = 0;\n-                        do {\n-                            n = in.read(cb, 0, cb.length);\n-                        } while (n == 0);\n-                        if (n > 0) {\n-                            nChars = n;\n-                            nextChar = 0;\n-                            if (n < cb.length &&\n-                                cb[n-1] != '\\n' && cb[n-1] != '\\r') {\n-                                \/*\n-                                 * we're in canonical mode so each \"fill\" should\n-                                 * come back with an eol. if there no lf or nl at\n-                                 * the end of returned bytes we reached an eof.\n-                                 *\/\n-                                eof = true;\n-                            }\n-                        } else { \/*EOF*\/\n-                            if (off - offset == 0)\n-                                return -1;\n-                            return off - offset;\n-                        }\n-                    }\n-                    if (leftoverLF && cbuf == rcb && cb[nextChar] == '\\n') {\n-                        \/*\n-                         * if invoked by our readline, skip the leftover, otherwise\n-                         * return the LF.\n-                         *\/\n-                        nextChar++;\n-                    }\n-                    leftoverLF = false;\n-                    while (nextChar < nChars) {\n-                        c = cbuf[off++] = cb[nextChar];\n-                        cb[nextChar++] = 0;\n-                        if (c == '\\n') {\n-                            return off - offset;\n-                        } else if (c == '\\r') {\n-                            if (off == end) {\n-                                \/* no space left even the next is LF, so return\n-                                 * whatever we have if the invoker is not our\n-                                 * readLine()\n-                                 *\/\n-                                if (cbuf == rcb) {\n-                                    cbuf = grow();\n-                                    end = cbuf.length;\n-                                } else {\n-                                    leftoverLF = true;\n-                                    return off - offset;\n-                                }\n-                            }\n-                            if (nextChar == nChars && in.ready()) {\n-                                \/*\n-                                 * we have a CR and we reached the end of\n-                                 * the read in buffer, fill to make sure we\n-                                 * don't miss a LF, if there is one, it's possible\n-                                 * that it got cut off during last round reading\n-                                 * simply because the read in buffer was full.\n-                                 *\/\n-                                nChars = in.read(cb, 0, cb.length);\n-                                nextChar = 0;\n-                            }\n-                            if (nextChar < nChars && cb[nextChar] == '\\n') {\n-                                cbuf[off++] = '\\n';\n-                                nextChar++;\n-                            }\n-                            return off - offset;\n-                        } else if (off == end) {\n-                           if (cbuf == rcb) {\n-                                cbuf = grow();\n-                                end = cbuf.length;\n-                           } else {\n-                               return off - offset;\n-                           }\n-                        }\n-                    }\n-                    if (eof)\n-                        return off - offset;\n-                }\n-            }\n-        }\n+    private static UnsupportedOperationException newUnsupportedOperationException() {\n+        return new UnsupportedOperationException(\n+                \"Console class itself does not provide implementation\");\n@@ -577,1 +349,2 @@\n-    private static final Charset CHARSET;\n+    private static native String encoding();\n+    static final Charset CHARSET;\n@@ -622,1 +395,1 @@\n-                        .orElse(istty ? new Console() : null);\n+                        .orElse(istty ? new ConsoleImpl() : null);\n@@ -627,1 +400,1 @@\n-            return istty ? new Console() : null;\n+            return istty ? new ConsoleImpl() : null;\n@@ -633,16 +406,0 @@\n-\n-    Console() {\n-        readLock = new Object();\n-        writeLock = new Object();\n-        out = StreamEncoder.forOutputStreamWriter(\n-                  new FileOutputStream(FileDescriptor.out),\n-                  writeLock,\n-                  CHARSET);\n-        pw = new PrintWriter(out, true) { public void close() {} };\n-        formatter = new Formatter(out);\n-        reader = new LineReader(StreamDecoder.forInputStreamReader(\n-                     new FileInputStream(FileDescriptor.in),\n-                     readLock,\n-                     CHARSET));\n-        rcb = new char[1024];\n-    }\n","filename":"src\/java.base\/share\/classes\/java\/io\/Console.java","additions":209,"deletions":452,"binary":false,"changes":661,"status":"modified"},{"patch":"@@ -0,0 +1,366 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package java.io;\n+\n+import java.util.*;\n+import java.nio.charset.Charset;\n+import jdk.internal.access.SharedSecrets;\n+import sun.nio.cs.StreamDecoder;\n+import sun.nio.cs.StreamEncoder;\n+\n+\/**\n+ * Console implementation based on the platform's TTY.\n+ *\/\n+\n+final class ConsoleImpl extends Console {\n+    \/**\n+     * {@inheritDoc}\n+     *\/\n+    @Override\n+    public PrintWriter writer() {\n+        return pw;\n+    }\n+\n+    \/**\n+     * {@inheritDoc}\n+     *\/\n+    @Override\n+    public Reader reader() {\n+        return reader;\n+    }\n+\n+    \/**\n+     * {@inheritDoc}\n+     *\/\n+    @Override\n+    public Console format(String fmt, Object ...args) {\n+        formatter.format(fmt, args).flush();\n+        return this;\n+    }\n+\n+    \/**\n+     * {@inheritDoc}\n+     *\/\n+    @Override\n+    public Console printf(String format, Object ... args) {\n+        return format(format, args);\n+    }\n+\n+    \/**\n+     * {@inheritDoc}\n+     *\/\n+    @Override\n+    public String readLine(String fmt, Object ... args) {\n+        String line = null;\n+        synchronized (writeLock) {\n+            synchronized(readLock) {\n+                if (!fmt.isEmpty())\n+                    pw.format(fmt, args);\n+                try {\n+                    char[] ca = readline(false);\n+                    if (ca != null)\n+                        line = new String(ca);\n+                } catch (IOException x) {\n+                    throw new IOError(x);\n+                }\n+            }\n+        }\n+        return line;\n+    }\n+\n+    \/**\n+     * {@inheritDoc}\n+     *\/\n+    @Override\n+    public String readLine() {\n+        return readLine(\"\");\n+    }\n+\n+    \/**\n+     * {@inheritDoc}\n+     *\/\n+    @Override\n+    public char[] readPassword(String fmt, Object ... args) {\n+        char[] passwd = null;\n+        synchronized (writeLock) {\n+            synchronized(readLock) {\n+                installShutdownHook();\n+                try {\n+                    restoreEcho = echo(false);\n+                } catch (IOException x) {\n+                    throw new IOError(x);\n+                }\n+                IOError ioe = null;\n+                try {\n+                    if (!fmt.isEmpty())\n+                        pw.format(fmt, args);\n+                    passwd = readline(true);\n+                } catch (IOException x) {\n+                    ioe = new IOError(x);\n+                } finally {\n+                    try {\n+                        if (restoreEcho)\n+                            restoreEcho = echo(true);\n+                    } catch (IOException x) {\n+                        if (ioe == null)\n+                            ioe = new IOError(x);\n+                        else\n+                            ioe.addSuppressed(x);\n+                    }\n+                    if (ioe != null)\n+                        throw ioe;\n+                }\n+                pw.println();\n+            }\n+        }\n+        return passwd;\n+    }\n+\n+    private void installShutdownHook() {\n+        if (shutdownHookInstalled)\n+            return;\n+        try {\n+            \/\/ Add a shutdown hook to restore console's echo state should\n+            \/\/ it be necessary.\n+            SharedSecrets.getJavaLangAccess()\n+                    .registerShutdownHook(0 \/* shutdown hook invocation order *\/,\n+                            false \/* only register if shutdown is not in progress *\/,\n+                            new Runnable() {\n+                                public void run() {\n+                                    try {\n+                                        if (restoreEcho) {\n+                                            echo(true);\n+                                        }\n+                                    } catch (IOException x) { }\n+                                }\n+                            });\n+        } catch (IllegalStateException e) {\n+            \/\/ shutdown is already in progress and readPassword is first used\n+            \/\/ by a shutdown hook\n+        }\n+        shutdownHookInstalled = true;\n+    }\n+\n+    \/**\n+     * {@inheritDoc}\n+     *\/\n+    @Override\n+    public char[] readPassword() {\n+        return readPassword(\"\");\n+    }\n+\n+    \/**\n+     * {@inheritDoc}\n+     *\/\n+    @Override\n+    public void flush() {\n+        pw.flush();\n+    }\n+\n+    \/**\n+     * {@inheritDoc}\n+     *\/\n+    @Override\n+    public Charset charset() {\n+        assert CHARSET != null : \"charset() should not return null\";\n+        return CHARSET;\n+    }\n+\n+    private final Object readLock;\n+    private final Object writeLock;\n+    private final Reader reader;\n+    private final Writer out;\n+    private final PrintWriter pw;\n+    private final Formatter formatter;\n+    private char[] rcb;\n+    private boolean restoreEcho;\n+    private boolean shutdownHookInstalled;\n+\n+    private char[] readline(boolean zeroOut) throws IOException {\n+        int len = reader.read(rcb, 0, rcb.length);\n+        if (len < 0)\n+            return null;  \/\/EOL\n+        if (rcb[len-1] == '\\r')\n+            len--;        \/\/remove CR at end;\n+        else if (rcb[len-1] == '\\n') {\n+            len--;        \/\/remove LF at end;\n+            if (len > 0 && rcb[len-1] == '\\r')\n+                len--;    \/\/remove the CR, if there is one\n+        }\n+        char[] b = new char[len];\n+        if (len > 0) {\n+            System.arraycopy(rcb, 0, b, 0, len);\n+            if (zeroOut) {\n+                Arrays.fill(rcb, 0, len, ' ');\n+            }\n+        }\n+        return b;\n+    }\n+\n+    private char[] grow() {\n+        assert Thread.holdsLock(readLock);\n+        char[] t = new char[rcb.length * 2];\n+        System.arraycopy(rcb, 0, t, 0, rcb.length);\n+        rcb = t;\n+        return rcb;\n+    }\n+\n+    \/*\n+     * Sets the console echo status to {@code on} and returns the previous\n+     * console on\/off status.\n+     * @param on    the echo status to set to. {@code true} for echo on and\n+     *              {@code false} for echo off\n+     * @return true if the previous console echo status is on\n+     *\/\n+    private static native boolean echo(boolean on) throws IOException;\n+\n+    class LineReader extends Reader {\n+        private final Reader in;\n+        private final char[] cb;\n+        private int nChars, nextChar;\n+        boolean leftoverLF;\n+        LineReader(Reader in) {\n+            this.in = in;\n+            cb = new char[1024];\n+            nextChar = nChars = 0;\n+            leftoverLF = false;\n+        }\n+        public void close () {}\n+        public boolean ready() throws IOException {\n+            \/\/in.ready synchronizes on readLock already\n+            return in.ready();\n+        }\n+\n+        public int read(char[] cbuf, int offset, int length)\n+                throws IOException\n+        {\n+            int off = offset;\n+            int end = offset + length;\n+            if (offset < 0 || offset > cbuf.length || length < 0 ||\n+                    end < 0 || end > cbuf.length) {\n+                throw new IndexOutOfBoundsException();\n+            }\n+            synchronized(readLock) {\n+                boolean eof = false;\n+                char c;\n+                for (;;) {\n+                    if (nextChar >= nChars) {   \/\/fill\n+                        int n;\n+                        do {\n+                            n = in.read(cb, 0, cb.length);\n+                        } while (n == 0);\n+                        if (n > 0) {\n+                            nChars = n;\n+                            nextChar = 0;\n+                            if (n < cb.length &&\n+                                    cb[n-1] != '\\n' && cb[n-1] != '\\r') {\n+                                \/*\n+                                 * we're in canonical mode so each \"fill\" should\n+                                 * come back with an eol. if there is no lf or nl at\n+                                 * the end of returned bytes we reached an eof.\n+                                 *\/\n+                                eof = true;\n+                            }\n+                        } else { \/*EOF*\/\n+                            if (off - offset == 0)\n+                                return -1;\n+                            return off - offset;\n+                        }\n+                    }\n+                    if (leftoverLF && cbuf == rcb && cb[nextChar] == '\\n') {\n+                        \/*\n+                         * if invoked by our readline, skip the leftover, otherwise\n+                         * return the LF.\n+                         *\/\n+                        nextChar++;\n+                    }\n+                    leftoverLF = false;\n+                    while (nextChar < nChars) {\n+                        c = cbuf[off++] = cb[nextChar];\n+                        cb[nextChar++] = 0;\n+                        if (c == '\\n') {\n+                            return off - offset;\n+                        } else if (c == '\\r') {\n+                            if (off == end) {\n+                                \/* no space left even the next is LF, so return\n+                                 * whatever we have if the invoker is not our\n+                                 * readLine()\n+                                 *\/\n+                                if (cbuf == rcb) {\n+                                    cbuf = grow();\n+                                } else {\n+                                    leftoverLF = true;\n+                                    return off - offset;\n+                                }\n+                            }\n+                            if (nextChar == nChars && in.ready()) {\n+                                \/*\n+                                 * we have a CR and we reached the end of\n+                                 * the read in buffer, fill to make sure we\n+                                 * don't miss a LF, if there is one, it's possible\n+                                 * that it got cut off during last round reading\n+                                 * simply because the read in buffer was full.\n+                                 *\/\n+                                nChars = in.read(cb, 0, cb.length);\n+                                nextChar = 0;\n+                            }\n+                            if (nextChar < nChars && cb[nextChar] == '\\n') {\n+                                cbuf[off++] = '\\n';\n+                                nextChar++;\n+                            }\n+                            return off - offset;\n+                        } else if (off == end) {\n+                            if (cbuf == rcb) {\n+                                cbuf = grow();\n+                                end = cbuf.length;\n+                            } else {\n+                                return off - offset;\n+                            }\n+                        }\n+                    }\n+                    if (eof)\n+                        return off - offset;\n+                }\n+            }\n+        }\n+    }\n+\n+    ConsoleImpl() {\n+        readLock = new Object();\n+        writeLock = new Object();\n+        out = StreamEncoder.forOutputStreamWriter(\n+                new FileOutputStream(FileDescriptor.out),\n+                writeLock,\n+                CHARSET);\n+        pw = new PrintWriter(out, true) { public void close() {} };\n+        formatter = new Formatter(out);\n+        reader = new LineReader(StreamDecoder.forInputStreamReader(\n+                new FileInputStream(FileDescriptor.in),\n+                readLock,\n+                CHARSET));\n+        rcb = new char[1024];\n+    }\n+}\n","filename":"src\/java.base\/share\/classes\/java\/io\/ConsoleImpl.java","additions":366,"deletions":0,"binary":false,"changes":366,"status":"added"},{"patch":"@@ -64,3 +64,9 @@\n-    private FileDescriptor fd;\n-    private volatile FileChannel channel;\n-    private boolean rw;\n+    private static final int O_RDONLY = 1;\n+    private static final int O_RDWR =   2;\n+    private static final int O_SYNC =   4;\n+    private static final int O_DSYNC =  8;\n+    private static final int O_TEMPORARY =  16;\n+\n+    private final FileDescriptor fd;\n+\n+    private final boolean rw;\n@@ -76,1 +82,6 @@\n-    private volatile boolean closed;\n+    \/**\n+     * A local buffer that allows reading and writing of\n+     * longer primitive parameters (e.g. long) to be performed\n+     * using bulk operations rather than on a per-byte basis.\n+     *\/\n+    private final byte[] buffer = new byte[Long.BYTES];\n@@ -78,5 +89,2 @@\n-    private static final int O_RDONLY = 1;\n-    private static final int O_RDWR =   2;\n-    private static final int O_SYNC =   4;\n-    private static final int O_DSYNC =  8;\n-    private static final int O_TEMPORARY =  16;\n+    private volatile FileChannel channel;\n+    private volatile boolean closed;\n@@ -116,1 +124,1 @@\n-     * @throws      SecurityException   if a security manager exists and its\n+     * @throws     SecurityException   if a security manager exists and its\n@@ -222,0 +230,2 @@\n+\n+        boolean rw = false;\n@@ -236,0 +246,2 @@\n+        this.rw = rw;\n+\n@@ -273,4 +285,1 @@\n-        if (fd != null) {\n-            return fd;\n-        }\n-        throw new IOException();\n+        return fd;\n@@ -737,4 +746,1 @@\n-        int ch = this.read();\n-        if (ch < 0)\n-            throw new EOFException();\n-        return (ch != 0);\n+        return readUnsignedByte() != 0;\n@@ -762,4 +768,1 @@\n-        int ch = this.read();\n-        if (ch < 0)\n-            throw new EOFException();\n-        return (byte)(ch);\n+        return (byte) readUnsignedByte();\n@@ -809,5 +812,1 @@\n-        int ch1 = this.read();\n-        int ch2 = this.read();\n-        if ((ch1 | ch2) < 0)\n-            throw new EOFException();\n-        return (short)((ch1 << 8) + (ch2 << 0));\n+        return (short) readUnsignedShort();\n@@ -837,5 +836,3 @@\n-        int ch1 = this.read();\n-        int ch2 = this.read();\n-        if ((ch1 | ch2) < 0)\n-            throw new EOFException();\n-        return (ch1 << 8) + (ch2 << 0);\n+        readFully(buffer, 0, Short.BYTES);\n+        return  ((buffer[1] & 0xff)      ) +\n+                ((buffer[0] & 0xff) <<  8);\n@@ -865,5 +862,1 @@\n-        int ch1 = this.read();\n-        int ch2 = this.read();\n-        if ((ch1 | ch2) < 0)\n-            throw new EOFException();\n-        return (char)((ch1 << 8) + (ch2 << 0));\n+        return (char) readUnsignedShort();\n@@ -893,7 +886,2 @@\n-        int ch1 = this.read();\n-        int ch2 = this.read();\n-        int ch3 = this.read();\n-        int ch4 = this.read();\n-        if ((ch1 | ch2 | ch3 | ch4) < 0)\n-            throw new EOFException();\n-        return ((ch1 << 24) + (ch2 << 16) + (ch3 << 8) + (ch4 << 0));\n+        readFully(buffer, 0, Integer.BYTES);\n+        return Bits.getInt(buffer, 0);\n@@ -931,1 +919,2 @@\n-        return ((long)(readInt()) << 32) + (readInt() & 0xFFFFFFFFL);\n+        readFully(buffer, 0, Long.BYTES);\n+        return Bits.getLong(buffer, 0);\n@@ -954,1 +943,2 @@\n-        return Float.intBitsToFloat(readInt());\n+        readFully(buffer, 0, Float.BYTES);\n+        return Bits.getFloat(buffer, 0);\n@@ -977,1 +967,2 @@\n-        return Double.longBitsToDouble(readLong());\n+        readFully(buffer, 0, Double.BYTES);\n+        return Bits.getDouble(buffer, 0);\n@@ -1011,9 +1002,7 @@\n-            case -1:\n-            case '\\n':\n-                eol = true;\n-                break;\n-            case '\\r':\n-                eol = true;\n-                long cur = getFilePointer();\n-                if ((read()) != '\\n') {\n-                    seek(cur);\n+                case -1, '\\n' -> eol = true;\n+                case '\\r'     -> {\n+                    eol = true;\n+                    long cur = getFilePointer();\n+                    if ((read()) != '\\n') {\n+                        seek(cur);\n+                    }\n@@ -1021,4 +1010,1 @@\n-                break;\n-            default:\n-                input.append((char)c);\n-                break;\n+                default -> input.append((char) c);\n@@ -1075,1 +1061,0 @@\n-        \/\/written++;\n@@ -1087,1 +1072,0 @@\n-        \/\/written++;\n@@ -1098,3 +1082,3 @@\n-        write((v >>> 8) & 0xFF);\n-        write((v >>> 0) & 0xFF);\n-        \/\/written += 2;\n+        buffer[1] = (byte)(v       );\n+        buffer[0] = (byte)(v >>>  8);\n+        write(buffer, 0, Short.BYTES);\n@@ -1112,3 +1096,1 @@\n-        write((v >>> 8) & 0xFF);\n-        write((v >>> 0) & 0xFF);\n-        \/\/written += 2;\n+        writeShort(v);\n@@ -1125,4 +1107,2 @@\n-        write((v >>> 24) & 0xFF);\n-        write((v >>> 16) & 0xFF);\n-        write((v >>>  8) & 0xFF);\n-        write((v >>>  0) & 0xFF);\n+        Bits.putInt(buffer, 0, v);\n+        write(buffer, 0, Integer.BYTES);\n@@ -1140,9 +1120,2 @@\n-        write((int)(v >>> 56) & 0xFF);\n-        write((int)(v >>> 48) & 0xFF);\n-        write((int)(v >>> 40) & 0xFF);\n-        write((int)(v >>> 32) & 0xFF);\n-        write((int)(v >>> 24) & 0xFF);\n-        write((int)(v >>> 16) & 0xFF);\n-        write((int)(v >>>  8) & 0xFF);\n-        write((int)(v >>>  0) & 0xFF);\n-        \/\/written += 8;\n+        Bits.putLong(buffer, 0, v);\n+        write(buffer, 0, Long.BYTES);\n@@ -1248,1 +1221,1 @@\n-            \/\/ is only implemented\/supported on windows.\n+            \/\/ is only implemented\/supported on Windows.\n","filename":"src\/java.base\/share\/classes\/java\/io\/RandomAccessFile.java","additions":55,"deletions":82,"binary":false,"changes":137,"status":"modified"},{"patch":"@@ -703,17 +703,0 @@\n-    \/**\n-     * Does nothing.\n-     *\n-     * @return false\n-     *\n-     * @param b ignored\n-     *\n-     * @deprecated This method was originally intended for controlling suspension\n-     *             in low memory conditions. It was never specified.\n-     *\n-     * @since   1.1\n-     *\/\n-    @Deprecated(since=\"1.2\", forRemoval=true)\n-    public boolean allowThreadSuspension(boolean b) {\n-        return false;\n-    }\n-\n","filename":"src\/java.base\/share\/classes\/java\/lang\/ThreadGroup.java","additions":0,"deletions":17,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -265,1 +265,11 @@\n-    RELEASE_20(64);\n+    RELEASE_20(64),\n+\n+    \/**\n+     * The version recognized by the Java Platform, Standard Edition\n+     * 21.\n+     *\n+     * @see <a\n+     * href=\"https:\/\/docs.oracle.com\/javase\/specs\/jvms\/se21\/html\/index.html\">\n+     * <cite>The Java Virtual Machine Specification, Java SE 21 Edition<\/cite><\/a>\n+     *\/\n+    RELEASE_21(65);\n@@ -280,1 +290,1 @@\n-        return RELEASE_20;\n+        return RELEASE_21;\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/ClassFileFormatVersion.java","additions":12,"deletions":2,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,1 +51,1 @@\n-    private Throwable target;\n+    private final Throwable target;\n@@ -59,0 +59,1 @@\n+        this.target = null;\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/InvocationTargetException.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -137,1 +137,1 @@\n-     * Converting from finer to coarser granularities result in precision loss.\n+     * Converting from finer to coarser granularities results in precision loss.\n","filename":"src\/java.base\/share\/classes\/java\/nio\/file\/attribute\/BasicFileAttributeView.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -414,7 +414,5 @@\n-        if (options.length > 0) {\n-            for (OpenOption opt: options) {\n-                \/\/ All OpenOption values except for APPEND and WRITE are allowed\n-                if (opt == StandardOpenOption.APPEND ||\n-                    opt == StandardOpenOption.WRITE)\n-                    throw new UnsupportedOperationException(\"'\" + opt + \"' not allowed\");\n-            }\n+        for (OpenOption opt : options) {\n+            \/\/ All OpenOption values except for APPEND and WRITE are allowed\n+            if (opt == StandardOpenOption.APPEND ||\n+                opt == StandardOpenOption.WRITE)\n+                throw new UnsupportedOperationException(\"'\" + opt + \"' not allowed\");\n","filename":"src\/java.base\/share\/classes\/java\/nio\/file\/spi\/FileSystemProvider.java","additions":5,"deletions":7,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -108,0 +108,4 @@\n+     * If obuffer is null\/zero-sized, do not allocate a new buffer.\n+     * This reduces allocation for authenticated decryption\n+     * that never returns data from update\n+     *\n@@ -111,0 +115,3 @@\n+        if (obuffer == null || obuffer.length == 0) {\n+            return;\n+        }\n@@ -112,1 +119,1 @@\n-        if (obuffer == null || obuffer.length < minLen) {\n+        if (obuffer.length < minLen) {\n@@ -145,1 +152,6 @@\n-                ofinish = cipher.doFinal(obuffer, 0);\n+                if (obuffer != null && obuffer.length > 0) {\n+                    ofinish = cipher.doFinal(obuffer, 0);\n+                } else {\n+                    obuffer = cipher.doFinal();\n+                    ofinish = (obuffer != null) ? obuffer.length : 0;\n+                }\n@@ -158,1 +170,8 @@\n-            ofinish = cipher.update(ibuffer, 0, readin, obuffer, ostart);\n+            \/\/ initial obuffer is assigned by update\/doFinal;\n+            \/\/ for AEAD decryption, obuffer is always null or zero-length here\n+            if (obuffer != null && obuffer.length > 0) {\n+                ofinish = cipher.update(ibuffer, 0, readin, obuffer, ostart);\n+            } else {\n+                obuffer = cipher.update(ibuffer, 0, readin);\n+                ofinish = (obuffer != null) ? obuffer.length : 0;\n+            }\n@@ -346,1 +365,5 @@\n-                cipher.doFinal(obuffer, 0);\n+                if (obuffer != null && obuffer.length > 0) {\n+                    cipher.doFinal(obuffer, 0);\n+                } else {\n+                    cipher.doFinal();\n+                }\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/CipherInputStream.java","additions":27,"deletions":4,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -94,0 +94,4 @@\n+     * If obuffer is null\/zero-sized, do not allocate a new buffer.\n+     * This reduces allocation for authenticated decryption\n+     * that never returns data from update\n+     *\n@@ -97,0 +101,3 @@\n+        if (obuffer == null || obuffer.length == 0) {\n+            return;\n+        }\n@@ -98,1 +105,1 @@\n-        if (obuffer == null || obuffer.length < minLen) {\n+        if (obuffer.length < minLen) {\n@@ -147,1 +154,9 @@\n-            int ostored = cipher.update(ibuffer, 0, 1, obuffer);\n+            \/\/ initial obuffer is assigned by update\/doFinal;\n+            \/\/ for AEAD decryption, obuffer is always null or zero-length here\n+            int ostored;\n+            if (obuffer != null && obuffer.length > 0) {\n+                ostored = cipher.update(ibuffer, 0, 1, obuffer);\n+            } else {\n+                obuffer = cipher.update(ibuffer, 0, 1);\n+                ostored = (obuffer != null) ? obuffer.length : 0;\n+            }\n@@ -189,1 +204,9 @@\n-            int ostored = cipher.update(b, off, len, obuffer);\n+            \/\/ initial obuffer is assigned by update\/doFinal;\n+            \/\/ for AEAD decryption, obuffer is always null or zero-length here\n+            int ostored;\n+            if (obuffer != null && obuffer.length > 0) {\n+                ostored = cipher.update(b, off, len, obuffer);\n+            } else {\n+                obuffer = cipher.update(b, off, len);\n+                ostored = (obuffer != null) ? obuffer.length : 0;\n+            }\n@@ -244,1 +267,7 @@\n-            int ostored = cipher.doFinal(obuffer, 0);\n+            int ostored;\n+            if (obuffer != null && obuffer.length > 0) {\n+                ostored = cipher.doFinal(obuffer, 0);\n+            } else {\n+                obuffer = cipher.doFinal();\n+                ostored = (obuffer != null) ? obuffer.length : 0;\n+            }\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/CipherOutputStream.java","additions":33,"deletions":4,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -630,5 +630,3 @@\n-        if (options.length > 0) {\n-            for (OpenOption opt : options) {\n-                if (opt != READ) {\n-                    throw new UnsupportedOperationException(\"'\" + opt + \"' not allowed\");\n-                }\n+        for (OpenOption opt : options) {\n+            if (opt != READ) {\n+                throw new UnsupportedOperationException(\"'\" + opt + \"' not allowed\");\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/jrtfs\/JrtPath.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -229,1 +229,1 @@\n-        if (checkClassVersion && readShort(classFileOffset + 6) > Opcodes.V20) {\n+        if (checkClassVersion && readShort(classFileOffset + 6) > Opcodes.V21) {\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/org\/objectweb\/asm\/ClassReader.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -313,0 +313,1 @@\n+    int V21 = 0 << 16 | 65;\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/org\/objectweb\/asm\/Opcodes.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,1 +32,0 @@\n-import java.nio.file.LinkOption;\n@@ -39,0 +38,1 @@\n+import java.nio.file.attribute.FileTime;\n@@ -54,0 +54,1 @@\n+import static java.nio.file.LinkOption.NOFOLLOW_LINKS;\n@@ -122,14 +123,12 @@\n-        if (modifiers.length > 0) {\n-            for (WatchEvent.Modifier modifier: modifiers) {\n-                if (modifier == null)\n-                    throw new NullPointerException();\n-\n-                if (ExtendedOptions.SENSITIVITY_HIGH.matches(modifier)) {\n-                    sensitivity = ExtendedOptions.SENSITIVITY_HIGH.parameter();\n-                } else if (ExtendedOptions.SENSITIVITY_MEDIUM.matches(modifier)) {\n-                    sensitivity = ExtendedOptions.SENSITIVITY_MEDIUM.parameter();\n-                } else if (ExtendedOptions.SENSITIVITY_LOW.matches(modifier)) {\n-                    sensitivity = ExtendedOptions.SENSITIVITY_LOW.parameter();\n-                } else {\n-                    throw new UnsupportedOperationException(\"Modifier not supported\");\n-                }\n+        for (WatchEvent.Modifier modifier : modifiers) {\n+            if (modifier == null)\n+                throw new NullPointerException();\n+\n+            if (ExtendedOptions.SENSITIVITY_HIGH.matches(modifier)) {\n+                sensitivity = ExtendedOptions.SENSITIVITY_HIGH.parameter();\n+            } else if (ExtendedOptions.SENSITIVITY_MEDIUM.matches(modifier)) {\n+                sensitivity = ExtendedOptions.SENSITIVITY_MEDIUM.parameter();\n+            } else if (ExtendedOptions.SENSITIVITY_LOW.matches(modifier)) {\n+                sensitivity = ExtendedOptions.SENSITIVITY_LOW.parameter();\n+            } else {\n+                throw new UnsupportedOperationException(\"Modifier not supported\");\n@@ -225,1 +224,1 @@\n-        private long lastModified;\n+        private FileTime lastModified;\n@@ -228,1 +227,1 @@\n-        CacheEntry(long lastModified, int lastTickCount) {\n+        CacheEntry(FileTime lastModified, int lastTickCount) {\n@@ -237,1 +236,1 @@\n-        long lastModified() {\n+        FileTime lastModified() {\n@@ -241,1 +240,1 @@\n-        void update(long lastModified, int tickCount) {\n+        void update(FileTime lastModified, int tickCount) {\n@@ -283,2 +282,1 @@\n-                    long lastModified =\n-                        Files.getLastModifiedTime(entry, LinkOption.NOFOLLOW_LINKS).toMillis();\n+                    FileTime lastModified = Files.getLastModifiedTime(entry, NOFOLLOW_LINKS);\n@@ -361,1 +359,1 @@\n-                    long lastModified = 0L;\n+                    FileTime lastModified;\n@@ -363,2 +361,1 @@\n-                        lastModified =\n-                            Files.getLastModifiedTime(entry, LinkOption.NOFOLLOW_LINKS).toMillis();\n+                        lastModified = Files.getLastModifiedTime(entry, NOFOLLOW_LINKS);\n@@ -376,2 +373,1 @@\n-                        entries.put(entry.getFileName(),\n-                                     new CacheEntry(lastModified, tickCount));\n+                        entries.put(entry.getFileName(), new CacheEntry(lastModified, tickCount));\n@@ -396,1 +392,1 @@\n-                    if (e.lastModified != lastModified) {\n+                    if (!e.lastModified().equals(lastModified)) {\n","filename":"src\/java.base\/share\/classes\/sun\/nio\/fs\/PollingWatchService.java","additions":23,"deletions":27,"binary":false,"changes":50,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-.TH \"JAVA\" \"1\" \"2023\" \"JDK 20-ea\" \"JDK Commands\"\n+.TH \"JAVA\" \"1\" \"2023\" \"JDK 21-ea\" \"JDK Commands\"\n@@ -190,1 +190,1 @@\n-(\\f[V]20\\f[R]) and a limited number of previous releases, detailed in\n+(\\f[V]21\\f[R]) and a limited number of previous releases, detailed in\n@@ -3792,0 +3792,8 @@\n+.SH REMOVED JAVA OPTIONS\n+.PP\n+These \\f[V]java\\f[R] options have been removed in JDK 21 and using them\n+results in an error of:\n+.RS\n+.PP\n+\\f[V]Unrecognized VM option\\f[R] \\f[I]option-name\\f[R]\n+.RE\n@@ -3801,3 +3809,0 @@\n-.SH REMOVED JAVA OPTIONS\n-.PP\n-No documented java options have been removed in JDK 20.\n@@ -3808,0 +3813,3 @@\n+\\f[B]The \\f[VB]java\\f[B] Command, Release 20\\f[R]\n+[https:\/\/docs.oracle.com\/en\/java\/javase\/20\/docs\/specs\/man\/java.html]\n+.IP \\[bu] 2\n","filename":"src\/java.base\/share\/man\/java.1","additions":13,"deletions":5,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -156,1 +156,1 @@\n-    \/\/ flags used with setattrlist\n+    \/\/ flags used with fsetattrlist\n","filename":"src\/java.base\/unix\/classes\/sun\/nio\/fs\/UnixConstants.java.template","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2006, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,0 +30,1 @@\n+#include \"java_io_ConsoleImpl.h\"\n@@ -48,1 +49,1 @@\n-Java_java_io_Console_echo(JNIEnv *env,\n+Java_java_io_ConsoleImpl_echo(JNIEnv *env,\n","filename":"src\/java.base\/unix\/native\/libjava\/Console_md.c","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -74,0 +74,1 @@\n+     *  21: tbd\n@@ -375,1 +376,13 @@\n-    RELEASE_20;\n+    RELEASE_20,\n+\n+    \/**\n+     * The version recognized by the Java Platform, Standard Edition\n+     * 21.\n+     *\n+     * @since 21\n+     *\n+     * @see <a\n+     * href=\"https:\/\/docs.oracle.com\/javase\/specs\/jls\/se21\/html\/index.html\">\n+     * <cite>The Java Language Specification, Java SE 21 Edition<\/cite><\/a>\n+     *\/\n+    RELEASE_21;\n@@ -384,1 +397,1 @@\n-        return RELEASE_20;\n+        return RELEASE_21;\n@@ -399,1 +412,1 @@\n-            valueOf(\"RELEASE_\" + Math.min(20, intVersion)):\n+            valueOf(\"RELEASE_\" + Math.min(21, intVersion)):\n","filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/SourceVersion.java","additions":16,"deletions":3,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -47,1 +47,1 @@\n-@SupportedSourceVersion(RELEASE_20)\n+@SupportedSourceVersion(RELEASE_21)\n","filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/util\/AbstractAnnotationValueVisitor14.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -52,1 +52,1 @@\n-@SupportedSourceVersion(RELEASE_20)\n+@SupportedSourceVersion(RELEASE_21)\n","filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/util\/AbstractElementVisitor14.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -50,1 +50,1 @@\n-@SupportedSourceVersion(RELEASE_20)\n+@SupportedSourceVersion(RELEASE_21)\n","filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/util\/AbstractTypeVisitor14.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -64,1 +64,1 @@\n-@SupportedSourceVersion(RELEASE_20)\n+@SupportedSourceVersion(RELEASE_21)\n","filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/util\/ElementKindVisitor14.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -80,1 +80,1 @@\n-@SupportedSourceVersion(RELEASE_20)\n+@SupportedSourceVersion(RELEASE_21)\n","filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/util\/ElementScanner14.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -55,1 +55,1 @@\n-@SupportedSourceVersion(RELEASE_20)\n+@SupportedSourceVersion(RELEASE_21)\n","filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/util\/SimpleAnnotationValueVisitor14.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -60,1 +60,1 @@\n-@SupportedSourceVersion(RELEASE_20)\n+@SupportedSourceVersion(RELEASE_21)\n","filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/util\/SimpleElementVisitor14.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -59,1 +59,1 @@\n-@SupportedSourceVersion(RELEASE_20)\n+@SupportedSourceVersion(RELEASE_21)\n","filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/util\/SimpleTypeVisitor14.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -64,1 +64,1 @@\n-@SupportedSourceVersion(RELEASE_20)\n+@SupportedSourceVersion(RELEASE_21)\n","filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/util\/TypeKindVisitor14.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -656,4 +656,2 @@\n-                if (rows.length > 0) {\n-                    for (final int element : rows) {\n-                        if (isSelectableForMode(chooser, (File)fFileList.getValueAt(element, 0))) selectableCount++;\n-                    }\n+                for (final int element : rows) {\n+                    if (isSelectableForMode(chooser, (File) fFileList.getValueAt(element, 0))) selectableCount++;\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaFileChooserUI.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -638,1 +638,1 @@\n-                    sprintf(channelName, \"Ch %d\", ch);\n+                    snprintf(channelName, 16, \"Ch %d\", ch);\n","filename":"src\/java.desktop\/macosx\/native\/libjsound\/PLATFORM_API_MacOSX_Ports.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1827,1 +1827,1 @@\n-                                            \" form wrong thread.\" +\n+                                            \" from wrong thread.\" +\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/imageio\/plugins\/jpeg\/JPEGImageReader.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1824,1 +1824,1 @@\n-            throw new IllegalStateException(\"Attempt to clear thread lock form wrong thread. \" +\n+            throw new IllegalStateException(\"Attempt to clear thread lock from wrong thread. \" +\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/imageio\/plugins\/jpeg\/JPEGImageWriter.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -281,1 +281,1 @@\n- * from Figure 10, above. Since the the second Element of Paragraph 1 is\n+ * from Figure 10, above. Since the second Element of Paragraph 1 is\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/Document.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -457,0 +457,1 @@\n+    cmP->nBits = NULL;\n@@ -488,1 +489,0 @@\n-    cmP->nBits = NULL;\n@@ -511,1 +511,3 @@\n-    JNU_CHECK_EXCEPTION_RETURN(env, -1);\n+    if ((*env)->ExceptionCheck(env)) {\n+        goto cleanup;\n+    }\n@@ -533,1 +535,3 @@\n-            CHECK_NULL_RETURN(jcm, -1);\n+            if (jcm == NULL) {\n+                goto cleanup;\n+            }\n@@ -536,0 +540,5 @@\n+            if ((*env)->ExceptionCheck(env)) {\n+                (*env)->ExceptionClear(env);\n+                JNU_ThrowNullPointerException(env, \"Unable to find default CM\");\n+                goto cleanup;\n+            }\n@@ -540,1 +549,1 @@\n-                return -1;\n+                goto cleanup;\n@@ -552,1 +561,1 @@\n-            return -1;\n+            goto cleanup;\n@@ -557,1 +566,1 @@\n-                return -1;\n+                goto cleanup;\n@@ -575,1 +584,1 @@\n-                return -1;\n+                goto cleanup;\n@@ -593,0 +602,4 @@\n+\n+cleanup:\n+    free(cmP->nBits);\n+    return -1;\n","filename":"src\/java.desktop\/share\/native\/libawt\/awt\/image\/awt_parseImage.c","additions":21,"deletions":8,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -0,0 +1,156 @@\n+\/****************************************************************************\n+ *\n+ * ftcolor.c\n+ *\n+ *   FreeType's glyph color management (body).\n+ *\n+ * Copyright (C) 2018-2022 by\n+ * David Turner, Robert Wilhelm, and Werner Lemberg.\n+ *\n+ * This file is part of the FreeType project, and may only be used,\n+ * modified, and distributed under the terms of the FreeType project\n+ * license, LICENSE.TXT.  By continuing to use, modify, or distribute\n+ * this file you indicate that you have read the license and\n+ * understand and accept it fully.\n+ *\n+ *\/\n+\n+\n+#include <freetype\/internal\/ftdebug.h>\n+#include <freetype\/internal\/sfnt.h>\n+#include <freetype\/internal\/tttypes.h>\n+#include <freetype\/ftcolor.h>\n+\n+\n+#ifdef TT_CONFIG_OPTION_COLOR_LAYERS\n+\n+  static\n+  const FT_Palette_Data  null_palette_data = { 0, NULL, NULL, 0, NULL };\n+\n+\n+  \/* documentation is in ftcolor.h *\/\n+\n+  FT_EXPORT_DEF( FT_Error )\n+  FT_Palette_Data_Get( FT_Face           face,\n+                       FT_Palette_Data  *apalette_data )\n+  {\n+    if ( !face )\n+      return FT_THROW( Invalid_Face_Handle );\n+    if ( !apalette_data)\n+      return FT_THROW( Invalid_Argument );\n+\n+    if ( FT_IS_SFNT( face ) )\n+      *apalette_data = ( (TT_Face)face )->palette_data;\n+    else\n+      *apalette_data = null_palette_data;\n+\n+    return FT_Err_Ok;\n+  }\n+\n+\n+  \/* documentation is in ftcolor.h *\/\n+\n+  FT_EXPORT_DEF( FT_Error )\n+  FT_Palette_Select( FT_Face     face,\n+                     FT_UShort   palette_index,\n+                     FT_Color*  *apalette )\n+  {\n+    FT_Error  error;\n+\n+    TT_Face       ttface;\n+    SFNT_Service  sfnt;\n+\n+\n+    if ( !face )\n+      return FT_THROW( Invalid_Face_Handle );\n+\n+    if ( !FT_IS_SFNT( face ) )\n+    {\n+      if ( apalette )\n+        *apalette = NULL;\n+\n+      return FT_Err_Ok;\n+    }\n+\n+    ttface = (TT_Face)face;\n+    sfnt   = (SFNT_Service)ttface->sfnt;\n+\n+    error = sfnt->set_palette( ttface, palette_index );\n+    if ( error )\n+      return error;\n+\n+    ttface->palette_index = palette_index;\n+\n+    if ( apalette )\n+      *apalette = ttface->palette;\n+\n+    return FT_Err_Ok;\n+  }\n+\n+\n+  \/* documentation is in ftcolor.h *\/\n+\n+  FT_EXPORT_DEF( FT_Error )\n+  FT_Palette_Set_Foreground_Color( FT_Face   face,\n+                                   FT_Color  foreground_color )\n+  {\n+    TT_Face  ttface;\n+\n+\n+    if ( !face )\n+      return FT_THROW( Invalid_Face_Handle );\n+\n+    if ( !FT_IS_SFNT( face ) )\n+      return FT_Err_Ok;\n+\n+    ttface = (TT_Face)face;\n+\n+    ttface->foreground_color      = foreground_color;\n+    ttface->have_foreground_color = 1;\n+\n+    return FT_Err_Ok;\n+  }\n+\n+#else \/* !TT_CONFIG_OPTION_COLOR_LAYERS *\/\n+\n+  FT_EXPORT_DEF( FT_Error )\n+  FT_Palette_Data_Get( FT_Face           face,\n+                       FT_Palette_Data  *apalette_data )\n+  {\n+    FT_UNUSED( face );\n+    FT_UNUSED( apalette_data );\n+\n+\n+    return FT_THROW( Unimplemented_Feature );\n+  }\n+\n+\n+  FT_EXPORT_DEF( FT_Error )\n+  FT_Palette_Select( FT_Face     face,\n+                     FT_UShort   palette_index,\n+                     FT_Color*  *apalette )\n+  {\n+    FT_UNUSED( face );\n+    FT_UNUSED( palette_index );\n+    FT_UNUSED( apalette );\n+\n+\n+    return FT_THROW( Unimplemented_Feature );\n+  }\n+\n+\n+  FT_EXPORT_DEF( FT_Error )\n+  FT_Palette_Set_Foreground_Color( FT_Face   face,\n+                                   FT_Color  foreground_color )\n+  {\n+    FT_UNUSED( face );\n+    FT_UNUSED( foreground_color );\n+\n+\n+    return FT_THROW( Unimplemented_Feature );\n+  }\n+\n+#endif \/* !TT_CONFIG_OPTION_COLOR_LAYERS *\/\n+\n+\n+\/* END *\/\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/base\/ftcolor.c","additions":156,"deletions":0,"binary":false,"changes":156,"status":"added"},{"patch":"@@ -1237,1 +1237,0 @@\n-        String respStr = \"\";\n@@ -1244,1 +1243,1 @@\n-            return respStr;\n+            return \"\";\n@@ -1252,7 +1251,1 @@\n-        for (int i=0; i < fields.length; i++) {\n-            if (i == (fields.length - 1)) {\n-                respStr = respStr.concat(fields[i]);\n-            } else {\n-                respStr = respStr.concat(fields[i] + \", \");\n-            }\n-        }\n+        String respStr = String.join(\", \", fields);\n","filename":"src\/java.management\/share\/classes\/javax\/management\/modelmbean\/DescriptorSupport.java","additions":2,"deletions":9,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -130,1 +130,6 @@\n-    JDK20(\"20\");\n+    JDK20(\"20\"),\n+\n+    \/**\n+      * 21, tbd\n+      *\/\n+    JDK21(\"21\");\n@@ -182,0 +187,1 @@\n+        case JDK21  -> Target.JDK1_21;\n@@ -315,0 +321,1 @@\n+        case JDK21  -> RELEASE_21;\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Source.java","additions":8,"deletions":1,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -124,1 +124,2 @@\n-        V64(64, 0);   \/\/ JDK 20\n+        V64(64, 0),   \/\/ JDK 20\n+        V65(65, 0);   \/\/ JDK 21\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/jvm\/ClassFile.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -97,1 +97,4 @@\n-    JDK1_20(\"20\", 64, 0);\n+    JDK1_20(\"20\", 64, 0),\n+\n+    \/** JDK 21. *\/\n+    JDK1_21(\"21\", 65, 0);\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/jvm\/Target.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -58,1 +58,1 @@\n-@SupportedSourceVersion(SourceVersion.RELEASE_20)\n+@SupportedSourceVersion(SourceVersion.RELEASE_21)\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/processing\/PrintingProcessor.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -3340,1 +3340,1 @@\n-    no tag name after '@'\n+    no tag name after ''@''\n@@ -3604,1 +3604,1 @@\n-    {0} {1} in module {2} is not indirectly exported using 'requires transitive'\n+    {0} {1} in module {2} is not indirectly exported using ''requires transitive''\n@@ -3666,1 +3666,1 @@\n-    (as it is not listed in its 'permits' clause)\n+    (as it is not listed in its ''permits'' clause)\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/compiler.properties","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -0,0 +1,1402 @@\n+#\n+# Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+module name java.base\n+header exports java\/io,java\/lang,java\/lang\/annotation,java\/lang\/constant,java\/lang\/foreign,java\/lang\/invoke,java\/lang\/module,java\/lang\/ref,java\/lang\/reflect,java\/lang\/runtime,java\/math,java\/net,java\/net\/spi,java\/nio,java\/nio\/channels,java\/nio\/channels\/spi,java\/nio\/charset,java\/nio\/charset\/spi,java\/nio\/file,java\/nio\/file\/attribute,java\/nio\/file\/spi,java\/security,java\/security\/cert,java\/security\/interfaces,java\/security\/spec,java\/text,java\/text\/spi,java\/time,java\/time\/chrono,java\/time\/format,java\/time\/temporal,java\/time\/zone,java\/util,java\/util\/concurrent,java\/util\/concurrent\/atomic,java\/util\/concurrent\/locks,java\/util\/function,java\/util\/jar,java\/util\/random,java\/util\/regex,java\/util\/spi,java\/util\/stream,java\/util\/zip,javax\/crypto,javax\/crypto\/interfaces,javax\/crypto\/spec,javax\/net,javax\/net\/ssl,javax\/security\/auth,javax\/security\/auth\/callback,javax\/security\/auth\/login,javax\/security\/auth\/spi,javax\/security\/auth\/x500,javax\/security\/cert,jdk\/internal\/event[jdk.jfr],jdk\/internal\/vm\/vector[jdk.incubator.vector] uses java\/lang\/System$LoggerFinder,java\/net\/ContentHandlerFactory,java\/net\/spi\/InetAddressResolverProvider,java\/net\/spi\/URLStreamHandlerProvider,java\/nio\/channels\/spi\/AsynchronousChannelProvider,java\/nio\/channels\/spi\/SelectorProvider,java\/nio\/charset\/spi\/CharsetProvider,java\/nio\/file\/spi\/FileSystemProvider,java\/nio\/file\/spi\/FileTypeDetector,java\/security\/Provider,java\/text\/spi\/BreakIteratorProvider,java\/text\/spi\/CollatorProvider,java\/text\/spi\/DateFormatProvider,java\/text\/spi\/DateFormatSymbolsProvider,java\/text\/spi\/DecimalFormatSymbolsProvider,java\/text\/spi\/NumberFormatProvider,java\/time\/chrono\/AbstractChronology,java\/time\/chrono\/Chronology,java\/time\/zone\/ZoneRulesProvider,java\/util\/random\/RandomGenerator,java\/util\/spi\/CalendarDataProvider,java\/util\/spi\/CalendarNameProvider,java\/util\/spi\/CurrencyNameProvider,java\/util\/spi\/LocaleNameProvider,java\/util\/spi\/ResourceBundleControlProvider,java\/util\/spi\/ResourceBundleProvider,java\/util\/spi\/TimeZoneNameProvider,java\/util\/spi\/ToolProvider,javax\/security\/auth\/spi\/LoginModule,jdk\/internal\/io\/JdkConsoleProvider,jdk\/internal\/logger\/DefaultLoggerFinder,sun\/text\/spi\/JavaTimeDateTimePatternProvider,sun\/util\/locale\/provider\/LocaleDataMetaInfo,sun\/util\/resources\/LocaleData$CommonResourceBundleProvider,sun\/util\/resources\/LocaleData$SupplementaryResourceBundleProvider,sun\/util\/spi\/CalendarProvider provides interface\\u0020;java\/nio\/file\/spi\/FileSystemProvider\\u0020;impls\\u0020;jdk\/internal\/jrtfs\/JrtFileSystemProvider,interface\\u0020;java\/util\/random\/RandomGenerator\\u0020;impls\\u0020;java\/security\/SecureRandom\\u005C;u002C;java\/util\/Random\\u005C;u002C;java\/util\/SplittableRandom target linux-amd64 flags 8000\n+\n+class name java\/io\/BufferedInputStream\n+method name transferTo descriptor (Ljava\/io\/OutputStream;)J thrownTypes java\/io\/IOException flags 1\n+\n+class name java\/io\/Console\n+header extends java\/lang\/Object implements java\/io\/Flushable flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+innerclass innerClass java\/util\/ServiceLoader$Provider outerClass java\/util\/ServiceLoader innerClassName Provider flags 609\n+\n+class name java\/io\/PrintStream\n+header extends java\/io\/FilterOutputStream implements java\/lang\/Appendable,java\/io\/Closeable flags 21\n+innerclass innerClass java\/util\/Locale$Category outerClass java\/util\/Locale innerClassName Category flags 4019\n+\n+class name java\/io\/PushbackInputStream\n+method name transferTo descriptor (Ljava\/io\/OutputStream;)J thrownTypes java\/io\/IOException flags 1\n+\n+class name java\/io\/SequenceInputStream\n+method name transferTo descriptor (Ljava\/io\/OutputStream;)J thrownTypes java\/io\/IOException flags 1\n+\n+class name java\/lang\/AbstractStringBuilder\n+header extends java\/lang\/Object implements java\/lang\/Appendable,java\/lang\/CharSequence sealed true flags 420\n+innerclass innerClass java\/util\/Spliterator$OfInt outerClass java\/util\/Spliterator innerClassName OfInt flags 609\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/lang\/Character$UnicodeBlock\n+field name ARABIC_EXTENDED_C descriptor Ljava\/lang\/Character$UnicodeBlock; flags 19\n+field name DEVANAGARI_EXTENDED_A descriptor Ljava\/lang\/Character$UnicodeBlock; flags 19\n+field name KAWI descriptor Ljava\/lang\/Character$UnicodeBlock; flags 19\n+field name KAKTOVIK_NUMERALS descriptor Ljava\/lang\/Character$UnicodeBlock; flags 19\n+field name CYRILLIC_EXTENDED_D descriptor Ljava\/lang\/Character$UnicodeBlock; flags 19\n+field name NAG_MUNDARI descriptor Ljava\/lang\/Character$UnicodeBlock; flags 19\n+field name CJK_UNIFIED_IDEOGRAPHS_EXTENSION_H descriptor Ljava\/lang\/Character$UnicodeBlock; flags 19\n+\n+class name java\/lang\/Character$UnicodeScript\n+field name KAWI descriptor Ljava\/lang\/Character$UnicodeScript; flags 4019\n+field name NAG_MUNDARI descriptor Ljava\/lang\/Character$UnicodeScript; flags 4019\n+\n+class name java\/lang\/Class\n+header extends java\/lang\/Object implements java\/io\/Serializable,java\/lang\/reflect\/GenericDeclaration,java\/lang\/reflect\/Type,java\/lang\/reflect\/AnnotatedElement,java\/lang\/invoke\/TypeDescriptor$OfField,java\/lang\/constant\/Constable flags 31 signature <T:Ljava\/lang\/Object;>Ljava\/lang\/Object;Ljava\/io\/Serializable;Ljava\/lang\/reflect\/GenericDeclaration;Ljava\/lang\/reflect\/Type;Ljava\/lang\/reflect\/AnnotatedElement;Ljava\/lang\/invoke\/TypeDescriptor$OfField<Ljava\/lang\/Class<*>;>;Ljava\/lang\/constant\/Constable;\n+innerclass innerClass java\/lang\/reflect\/AccessFlag$Location outerClass java\/lang\/reflect\/AccessFlag innerClassName Location flags 4019\n+innerclass innerClass java\/util\/Map$Entry outerClass java\/util\/Map innerClassName Entry flags 609\n+innerclass innerClass java\/lang\/invoke\/TypeDescriptor$OfField outerClass java\/lang\/invoke\/TypeDescriptor innerClassName OfField flags 609\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+method name accessFlags descriptor ()Ljava\/util\/Set; flags 1 signature ()Ljava\/util\/Set<Ljava\/lang\/reflect\/AccessFlag;>;\n+\n+class name java\/lang\/Compiler\n+header extends java\/lang\/Object flags 31 deprecated true runtimeAnnotations @Ljava\/lang\/Deprecated;(forRemoval=Ztrue,since=\"9\")\n+\n+class name java\/lang\/Deprecated\n+header extends java\/lang\/Object implements java\/lang\/annotation\/Annotation flags 2601 runtimeAnnotations @Ljava\/lang\/annotation\/Documented;@Ljava\/lang\/annotation\/Retention;(value=eLjava\/lang\/annotation\/RetentionPolicy;RUNTIME;)@Ljava\/lang\/annotation\/Target;(value={eLjava\/lang\/annotation\/ElementType;CONSTRUCTOR;eLjava\/lang\/annotation\/ElementType;FIELD;eLjava\/lang\/annotation\/ElementType;LOCAL_VARIABLE;eLjava\/lang\/annotation\/ElementType;METHOD;eLjava\/lang\/annotation\/ElementType;PACKAGE;eLjava\/lang\/annotation\/ElementType;MODULE;eLjava\/lang\/annotation\/ElementType;PARAMETER;eLjava\/lang\/annotation\/ElementType;TYPE;})\n+\n+class name java\/lang\/Double\n+-method name isFinite descriptor (D)Z\n+method name isFinite descriptor (D)Z flags 9 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/IntrinsicCandidate;\n+\n+class name java\/lang\/Float\n+-method name isFinite descriptor (F)Z\n+method name isFinite descriptor (F)Z flags 9 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/IntrinsicCandidate;\n+method name float16ToFloat descriptor (S)F flags 9 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/IntrinsicCandidate;\n+method name floatToFloat16 descriptor (F)S flags 9 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/IntrinsicCandidate;\n+\n+class name java\/lang\/IllegalCallerException\n+header extends java\/lang\/RuntimeException flags 21\n+\n+class name java\/lang\/Integer\n+-method name compareUnsigned descriptor (II)I\n+-method name reverse descriptor (I)I\n+method name compareUnsigned descriptor (II)I flags 9 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/IntrinsicCandidate;\n+method name reverse descriptor (I)I flags 9 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/IntrinsicCandidate;\n+\n+class name java\/lang\/LayerInstantiationException\n+header extends java\/lang\/RuntimeException flags 21\n+\n+class name java\/lang\/Long\n+-method name compareUnsigned descriptor (JJ)I\n+-method name reverse descriptor (J)J\n+method name compareUnsigned descriptor (JJ)I flags 9 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/IntrinsicCandidate;\n+method name reverse descriptor (J)J flags 9 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/IntrinsicCandidate;\n+\n+class name java\/lang\/Module\n+method name isNativeAccessEnabled descriptor ()Z flags 1 classAnnotations @Ljdk\/internal\/javac\/PreviewFeature;(feature=eLjdk\/internal\/javac\/PreviewFeature$Feature;FOREIGN;)\n+\n+class name java\/lang\/ModuleLayer$Controller\n+method name enableNativeAccess descriptor (Ljava\/lang\/Module;)Ljava\/lang\/ModuleLayer$Controller; flags 1 classAnnotations @Ljdk\/internal\/javac\/PreviewFeature;(feature=eLjdk\/internal\/javac\/PreviewFeature$Feature;FOREIGN;) runtimeAnnotations @Ljdk\/internal\/reflect\/CallerSensitive;\n+\n+class name java\/lang\/NamedPackage\n+header extends java\/lang\/Object flags 20\n+\n+class name java\/lang\/Thread$Builder\n+header extends java\/lang\/Object nestHost java\/lang\/Thread sealed true flags 601 classAnnotations @Ljdk\/internal\/javac\/PreviewFeature;(feature=eLjdk\/internal\/javac\/PreviewFeature$Feature;VIRTUAL_THREADS;)\n+innerclass innerClass java\/lang\/Thread$Builder outerClass java\/lang\/Thread innerClassName Builder flags 609\n+innerclass innerClass java\/lang\/Thread$Builder$OfVirtual outerClass java\/lang\/Thread$Builder innerClassName OfVirtual flags 609\n+innerclass innerClass java\/lang\/Thread$Builder$OfPlatform outerClass java\/lang\/Thread$Builder innerClassName OfPlatform flags 609\n+innerclass innerClass java\/lang\/Thread$UncaughtExceptionHandler outerClass java\/lang\/Thread innerClassName UncaughtExceptionHandler flags 609\n+\n+class name java\/lang\/Thread$Builder$OfPlatform\n+header extends java\/lang\/Object implements java\/lang\/Thread$Builder nestHost java\/lang\/Thread sealed true flags 601 classAnnotations @Ljdk\/internal\/javac\/PreviewFeature;(feature=eLjdk\/internal\/javac\/PreviewFeature$Feature;VIRTUAL_THREADS;)\n+innerclass innerClass java\/lang\/Thread$Builder outerClass java\/lang\/Thread innerClassName Builder flags 609\n+innerclass innerClass java\/lang\/Thread$Builder$OfPlatform outerClass java\/lang\/Thread$Builder innerClassName OfPlatform flags 609\n+innerclass innerClass java\/lang\/Thread$UncaughtExceptionHandler outerClass java\/lang\/Thread innerClassName UncaughtExceptionHandler flags 609\n+\n+class name java\/lang\/Thread$Builder$OfVirtual\n+header extends java\/lang\/Object implements java\/lang\/Thread$Builder nestHost java\/lang\/Thread sealed true flags 601 classAnnotations @Ljdk\/internal\/javac\/PreviewFeature;(feature=eLjdk\/internal\/javac\/PreviewFeature$Feature;VIRTUAL_THREADS;)\n+innerclass innerClass java\/lang\/Thread$Builder outerClass java\/lang\/Thread innerClassName Builder flags 609\n+innerclass innerClass java\/lang\/Thread$Builder$OfVirtual outerClass java\/lang\/Thread$Builder innerClassName OfVirtual flags 609\n+innerclass innerClass java\/lang\/Thread$UncaughtExceptionHandler outerClass java\/lang\/Thread innerClassName UncaughtExceptionHandler flags 609\n+\n+class name java\/lang\/ThreadDeath\n+header extends java\/lang\/Error flags 21 deprecated true runtimeAnnotations @Ljava\/lang\/Deprecated;(forRemoval=Ztrue,since=\"20\")\n+\n+class name java\/lang\/constant\/ClassDesc\n+header extends java\/lang\/Object implements java\/lang\/constant\/ConstantDesc,java\/lang\/invoke\/TypeDescriptor$OfField sealed true flags 601 signature Ljava\/lang\/Object;Ljava\/lang\/constant\/ConstantDesc;Ljava\/lang\/invoke\/TypeDescriptor$OfField<Ljava\/lang\/constant\/ClassDesc;>;\n+innerclass innerClass java\/lang\/invoke\/TypeDescriptor$OfField outerClass java\/lang\/invoke\/TypeDescriptor innerClassName OfField flags 609\n+method name ofInternalName descriptor (Ljava\/lang\/String;)Ljava\/lang\/constant\/ClassDesc; flags 9\n+\n+class name java\/lang\/constant\/ConstantDesc\n+header extends java\/lang\/Object sealed true flags 601\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/lang\/constant\/DirectMethodHandleDesc\n+header extends java\/lang\/Object implements java\/lang\/constant\/MethodHandleDesc nestMembers java\/lang\/constant\/DirectMethodHandleDesc$Kind sealed true flags 601\n+innerclass innerClass java\/lang\/constant\/DirectMethodHandleDesc$Kind outerClass java\/lang\/constant\/DirectMethodHandleDesc innerClassName Kind flags 4019\n+\n+class name java\/lang\/constant\/MethodHandleDesc\n+header extends java\/lang\/Object implements java\/lang\/constant\/ConstantDesc sealed true flags 601\n+innerclass innerClass java\/lang\/constant\/DirectMethodHandleDesc$Kind outerClass java\/lang\/constant\/DirectMethodHandleDesc innerClassName Kind flags 4019\n+\n+class name java\/lang\/constant\/MethodTypeDesc\n+header extends java\/lang\/Object implements java\/lang\/constant\/ConstantDesc,java\/lang\/invoke\/TypeDescriptor$OfMethod sealed true flags 601 signature Ljava\/lang\/Object;Ljava\/lang\/constant\/ConstantDesc;Ljava\/lang\/invoke\/TypeDescriptor$OfMethod<Ljava\/lang\/constant\/ClassDesc;Ljava\/lang\/constant\/MethodTypeDesc;>;\n+innerclass innerClass java\/lang\/invoke\/TypeDescriptor$OfMethod outerClass java\/lang\/invoke\/TypeDescriptor innerClassName OfMethod flags 609\n+innerclass innerClass java\/lang\/invoke\/TypeDescriptor$OfField outerClass java\/lang\/invoke\/TypeDescriptor innerClassName OfField flags 609\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+-class name java\/lang\/foreign\/AbstractLayout\n+\n+-class name java\/lang\/foreign\/Addressable\n+\n+class name java\/lang\/foreign\/Arena\n+header extends java\/lang\/Object implements java\/lang\/foreign\/SegmentAllocator,java\/lang\/AutoCloseable flags 601 classAnnotations @Ljdk\/internal\/javac\/PreviewFeature;(feature=eLjdk\/internal\/javac\/PreviewFeature$Feature;FOREIGN;)\n+method name allocate descriptor (JJ)Ljava\/lang\/foreign\/MemorySegment; flags 1\n+method name scope descriptor ()Ljava\/lang\/foreign\/SegmentScope; flags 401\n+method name close descriptor ()V flags 401\n+method name isCloseableBy descriptor (Ljava\/lang\/Thread;)Z flags 401\n+method name openConfined descriptor ()Ljava\/lang\/foreign\/Arena; flags 9\n+method name openShared descriptor ()Ljava\/lang\/foreign\/Arena; flags 9\n+\n+class name java\/lang\/foreign\/FunctionDescriptor\n+header extends java\/lang\/Object sealed true flags 601 classAnnotations @Ljdk\/internal\/javac\/PreviewFeature;(feature=eLjdk\/internal\/javac\/PreviewFeature$Feature;FOREIGN;)\n+-method name returnLayout descriptor ()Ljava\/util\/Optional;\n+-method name argumentLayouts descriptor ()Ljava\/util\/List;\n+-method name asVariadic descriptor ([Ljava\/lang\/foreign\/MemoryLayout;)Ljava\/lang\/foreign\/FunctionDescriptor;\n+-method name firstVariadicArgumentIndex descriptor ()I\n+-method name appendArgumentLayouts descriptor ([Ljava\/lang\/foreign\/MemoryLayout;)Ljava\/lang\/foreign\/FunctionDescriptor;\n+-method name insertArgumentLayouts descriptor (I[Ljava\/lang\/foreign\/MemoryLayout;)Ljava\/lang\/foreign\/FunctionDescriptor;\n+-method name changeReturnLayout descriptor (Ljava\/lang\/foreign\/MemoryLayout;)Ljava\/lang\/foreign\/FunctionDescriptor;\n+-method name dropReturnLayout descriptor ()Ljava\/lang\/foreign\/FunctionDescriptor;\n+-method name toString descriptor ()Ljava\/lang\/String;\n+-method name equals descriptor (Ljava\/lang\/Object;)Z\n+-method name hashCode descriptor ()I\n+method name returnLayout descriptor ()Ljava\/util\/Optional; flags 401 signature ()Ljava\/util\/Optional<Ljava\/lang\/foreign\/MemoryLayout;>;\n+method name argumentLayouts descriptor ()Ljava\/util\/List; flags 401 signature ()Ljava\/util\/List<Ljava\/lang\/foreign\/MemoryLayout;>;\n+method name appendArgumentLayouts descriptor ([Ljava\/lang\/foreign\/MemoryLayout;)Ljava\/lang\/foreign\/FunctionDescriptor; flags 481\n+method name insertArgumentLayouts descriptor (I[Ljava\/lang\/foreign\/MemoryLayout;)Ljava\/lang\/foreign\/FunctionDescriptor; flags 481\n+method name changeReturnLayout descriptor (Ljava\/lang\/foreign\/MemoryLayout;)Ljava\/lang\/foreign\/FunctionDescriptor; flags 401\n+method name dropReturnLayout descriptor ()Ljava\/lang\/foreign\/FunctionDescriptor; flags 401\n+method name toMethodType descriptor ()Ljava\/lang\/invoke\/MethodType; flags 401\n+\n+class name java\/lang\/foreign\/GroupLayout\n+header extends java\/lang\/Object implements java\/lang\/foreign\/MemoryLayout sealed true flags 601 classAnnotations @Ljdk\/internal\/javac\/PreviewFeature;(feature=eLjdk\/internal\/javac\/PreviewFeature$Feature;FOREIGN;)\n+-method name memberLayouts descriptor ()Ljava\/util\/List;\n+-method name toString descriptor ()Ljava\/lang\/String;\n+-method name isStruct descriptor ()Z\n+-method name isUnion descriptor ()Z\n+-method name equals descriptor (Ljava\/lang\/Object;)Z\n+-method name hashCode descriptor ()I\n+-method name withName descriptor (Ljava\/lang\/String;)Ljava\/lang\/foreign\/GroupLayout;\n+-method name withBitAlignment descriptor (J)Ljava\/lang\/foreign\/GroupLayout;\n+-method name isPadding descriptor ()Z\n+-method name bitSize descriptor ()J\n+-method name withBitAlignment descriptor (J)Ljava\/lang\/foreign\/AbstractLayout;\n+-method name withName descriptor (Ljava\/lang\/String;)Ljava\/lang\/foreign\/AbstractLayout;\n+-method name byteSize descriptor ()J\n+method name memberLayouts descriptor ()Ljava\/util\/List; flags 401 signature ()Ljava\/util\/List<Ljava\/lang\/foreign\/MemoryLayout;>;\n+method name withName descriptor (Ljava\/lang\/String;)Ljava\/lang\/foreign\/GroupLayout; flags 401\n+method name withBitAlignment descriptor (J)Ljava\/lang\/foreign\/GroupLayout; flags 401\n+\n+class name java\/lang\/foreign\/Linker\n+header extends java\/lang\/Object nestMembers java\/lang\/foreign\/Linker$Option,java\/lang\/foreign\/Linker$Option$CaptureCallState sealed true flags 601 classAnnotations @Ljdk\/internal\/javac\/PreviewFeature;(feature=eLjdk\/internal\/javac\/PreviewFeature$Feature;FOREIGN;)\n+innerclass innerClass java\/lang\/foreign\/Linker$Option outerClass java\/lang\/foreign\/Linker innerClassName Option flags 609\n+innerclass innerClass java\/lang\/foreign\/Linker$Option$CaptureCallState outerClass java\/lang\/foreign\/Linker$Option innerClassName CaptureCallState flags 609\n+-method name downcallHandle descriptor (Ljava\/lang\/foreign\/Addressable;Ljava\/lang\/foreign\/FunctionDescriptor;)Ljava\/lang\/invoke\/MethodHandle;\n+-method name downcallHandle descriptor (Ljava\/lang\/foreign\/FunctionDescriptor;)Ljava\/lang\/invoke\/MethodHandle;\n+-method name upcallStub descriptor (Ljava\/lang\/invoke\/MethodHandle;Ljava\/lang\/foreign\/FunctionDescriptor;Ljava\/lang\/foreign\/MemorySession;)Ljava\/lang\/foreign\/MemorySegment;\n+-method name downcallType descriptor (Ljava\/lang\/foreign\/FunctionDescriptor;)Ljava\/lang\/invoke\/MethodType;\n+-method name upcallType descriptor (Ljava\/lang\/foreign\/FunctionDescriptor;)Ljava\/lang\/invoke\/MethodType;\n+method name downcallHandle descriptor (Ljava\/lang\/foreign\/MemorySegment;Ljava\/lang\/foreign\/FunctionDescriptor;[Ljava\/lang\/foreign\/Linker$Option;)Ljava\/lang\/invoke\/MethodHandle; flags 81\n+method name downcallHandle descriptor (Ljava\/lang\/foreign\/FunctionDescriptor;[Ljava\/lang\/foreign\/Linker$Option;)Ljava\/lang\/invoke\/MethodHandle; flags 481\n+method name upcallStub descriptor (Ljava\/lang\/invoke\/MethodHandle;Ljava\/lang\/foreign\/FunctionDescriptor;Ljava\/lang\/foreign\/SegmentScope;)Ljava\/lang\/foreign\/MemorySegment; flags 401\n+\n+class name java\/lang\/foreign\/Linker$Option\n+header extends java\/lang\/Object nestHost java\/lang\/foreign\/Linker sealed true flags 601 classAnnotations @Ljdk\/internal\/javac\/PreviewFeature;(feature=eLjdk\/internal\/javac\/PreviewFeature$Feature;FOREIGN;)\n+innerclass innerClass java\/lang\/foreign\/Linker$Option outerClass java\/lang\/foreign\/Linker innerClassName Option flags 609\n+innerclass innerClass java\/lang\/foreign\/Linker$Option$CaptureCallState outerClass java\/lang\/foreign\/Linker$Option innerClassName CaptureCallState flags 609\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+method name firstVariadicArg descriptor (I)Ljava\/lang\/foreign\/Linker$Option; flags 9\n+method name captureCallState descriptor ([Ljava\/lang\/String;)Ljava\/lang\/foreign\/Linker$Option$CaptureCallState; flags 89\n+\n+class name java\/lang\/foreign\/Linker$Option$CaptureCallState\n+header extends java\/lang\/Object implements java\/lang\/foreign\/Linker$Option nestHost java\/lang\/foreign\/Linker sealed true flags 601\n+innerclass innerClass java\/lang\/foreign\/Linker$Option outerClass java\/lang\/foreign\/Linker innerClassName Option flags 609\n+innerclass innerClass java\/lang\/foreign\/Linker$Option$CaptureCallState outerClass java\/lang\/foreign\/Linker$Option innerClassName CaptureCallState flags 609\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+method name layout descriptor ()Ljava\/lang\/foreign\/StructLayout; flags 401\n+method name supported descriptor ()Ljava\/util\/Set; flags 9 signature ()Ljava\/util\/Set<Ljava\/lang\/String;>;\n+\n+-class name java\/lang\/foreign\/MemoryAddress\n+\n+class name java\/lang\/foreign\/MemoryLayout\n+header extends java\/lang\/Object nestMembers java\/lang\/foreign\/MemoryLayout$PathElement sealed true flags 601 classAnnotations @Ljdk\/internal\/javac\/PreviewFeature;(feature=eLjdk\/internal\/javac\/PreviewFeature$Feature;FOREIGN;)\n+innerclass innerClass java\/lang\/foreign\/MemoryLayout$PathElement outerClass java\/lang\/foreign\/MemoryLayout innerClassName PathElement flags 609\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfBoolean outerClass java\/lang\/foreign\/ValueLayout innerClassName OfBoolean flags 609\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfChar outerClass java\/lang\/foreign\/ValueLayout innerClassName OfChar flags 609\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfByte outerClass java\/lang\/foreign\/ValueLayout innerClassName OfByte flags 609\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfShort outerClass java\/lang\/foreign\/ValueLayout innerClassName OfShort flags 609\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfInt outerClass java\/lang\/foreign\/ValueLayout innerClassName OfInt flags 609\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfFloat outerClass java\/lang\/foreign\/ValueLayout innerClassName OfFloat flags 609\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfLong outerClass java\/lang\/foreign\/ValueLayout innerClassName OfLong flags 609\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfDouble outerClass java\/lang\/foreign\/ValueLayout innerClassName OfDouble flags 609\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfAddress outerClass java\/lang\/foreign\/ValueLayout innerClassName OfAddress flags 609\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+-method name isPadding descriptor ()Z\n+-method name paddingLayout descriptor (J)Ljava\/lang\/foreign\/MemoryLayout;\n+-method name structLayout descriptor ([Ljava\/lang\/foreign\/MemoryLayout;)Ljava\/lang\/foreign\/GroupLayout;\n+-method name unionLayout descriptor ([Ljava\/lang\/foreign\/MemoryLayout;)Ljava\/lang\/foreign\/GroupLayout;\n+method name paddingLayout descriptor (J)Ljava\/lang\/foreign\/PaddingLayout; flags 9\n+method name sequenceLayout descriptor (Ljava\/lang\/foreign\/MemoryLayout;)Ljava\/lang\/foreign\/SequenceLayout; flags 9\n+method name structLayout descriptor ([Ljava\/lang\/foreign\/MemoryLayout;)Ljava\/lang\/foreign\/StructLayout; flags 89\n+method name unionLayout descriptor ([Ljava\/lang\/foreign\/MemoryLayout;)Ljava\/lang\/foreign\/UnionLayout; flags 89\n+\n+class name java\/lang\/foreign\/MemoryLayout$PathElement\n+header extends java\/lang\/Object nestHost java\/lang\/foreign\/MemoryLayout sealed true flags 601 classAnnotations @Ljdk\/internal\/javac\/PreviewFeature;(feature=eLjdk\/internal\/javac\/PreviewFeature$Feature;FOREIGN;)\n+innerclass innerClass java\/lang\/foreign\/MemoryLayout$PathElement outerClass java\/lang\/foreign\/MemoryLayout innerClassName PathElement flags 609\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/lang\/foreign\/MemorySegment\n+header extends java\/lang\/Object sealed true flags 601 classAnnotations @Ljdk\/internal\/javac\/PreviewFeature;(feature=eLjdk\/internal\/javac\/PreviewFeature$Feature;FOREIGN;)\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfByte outerClass java\/lang\/foreign\/ValueLayout innerClassName OfByte flags 609\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfChar outerClass java\/lang\/foreign\/ValueLayout innerClassName OfChar flags 609\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfShort outerClass java\/lang\/foreign\/ValueLayout innerClassName OfShort flags 609\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfInt outerClass java\/lang\/foreign\/ValueLayout innerClassName OfInt flags 609\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfFloat outerClass java\/lang\/foreign\/ValueLayout innerClassName OfFloat flags 609\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfLong outerClass java\/lang\/foreign\/ValueLayout innerClassName OfLong flags 609\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfDouble outerClass java\/lang\/foreign\/ValueLayout innerClassName OfDouble flags 609\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfAddress outerClass java\/lang\/foreign\/ValueLayout innerClassName OfAddress flags 609\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfBoolean outerClass java\/lang\/foreign\/ValueLayout innerClassName OfBoolean flags 609\n+-method name address descriptor ()Ljava\/lang\/foreign\/MemoryAddress;\n+-method name session descriptor ()Ljava\/lang\/foreign\/MemorySession;\n+-method name mismatch descriptor (Ljava\/lang\/foreign\/MemorySegment;)J\n+-method name ofAddress descriptor (Ljava\/lang\/foreign\/MemoryAddress;JLjava\/lang\/foreign\/MemorySession;)Ljava\/lang\/foreign\/MemorySegment;\n+-method name allocateNative descriptor (Ljava\/lang\/foreign\/MemoryLayout;Ljava\/lang\/foreign\/MemorySession;)Ljava\/lang\/foreign\/MemorySegment;\n+-method name allocateNative descriptor (JLjava\/lang\/foreign\/MemorySession;)Ljava\/lang\/foreign\/MemorySegment;\n+-method name allocateNative descriptor (JJLjava\/lang\/foreign\/MemorySession;)Ljava\/lang\/foreign\/MemorySegment;\n+-method name get descriptor (Ljava\/lang\/foreign\/ValueLayout$OfAddress;J)Ljava\/lang\/foreign\/MemoryAddress;\n+-method name set descriptor (Ljava\/lang\/foreign\/ValueLayout$OfAddress;JLjava\/lang\/foreign\/Addressable;)V\n+-method name getAtIndex descriptor (Ljava\/lang\/foreign\/ValueLayout$OfAddress;J)Ljava\/lang\/foreign\/MemoryAddress;\n+-method name setAtIndex descriptor (Ljava\/lang\/foreign\/ValueLayout$OfAddress;JLjava\/lang\/foreign\/Addressable;)V\n+field name NULL descriptor Ljava\/lang\/foreign\/MemorySegment; flags 19\n+method name address descriptor ()J flags 401\n+method name array descriptor ()Ljava\/util\/Optional; flags 401 signature ()Ljava\/util\/Optional<Ljava\/lang\/Object;>;\n+method name scope descriptor ()Ljava\/lang\/foreign\/SegmentScope; flags 401\n+method name mismatch descriptor (Ljava\/lang\/foreign\/MemorySegment;)J flags 1\n+method name ofAddress descriptor (J)Ljava\/lang\/foreign\/MemorySegment; flags 9\n+method name ofAddress descriptor (JJ)Ljava\/lang\/foreign\/MemorySegment; flags 9 runtimeAnnotations @Ljdk\/internal\/reflect\/CallerSensitive;\n+method name ofAddress descriptor (JJLjava\/lang\/foreign\/SegmentScope;)Ljava\/lang\/foreign\/MemorySegment; flags 9 runtimeAnnotations @Ljdk\/internal\/reflect\/CallerSensitive;@Ljdk\/internal\/vm\/annotation\/ForceInline;\n+method name ofAddress descriptor (JJLjava\/lang\/foreign\/SegmentScope;Ljava\/lang\/Runnable;)Ljava\/lang\/foreign\/MemorySegment; flags 9 runtimeAnnotations @Ljdk\/internal\/reflect\/CallerSensitive;\n+method name allocateNative descriptor (Ljava\/lang\/foreign\/MemoryLayout;Ljava\/lang\/foreign\/SegmentScope;)Ljava\/lang\/foreign\/MemorySegment; flags 9\n+method name allocateNative descriptor (JLjava\/lang\/foreign\/SegmentScope;)Ljava\/lang\/foreign\/MemorySegment; flags 9\n+method name allocateNative descriptor (JJLjava\/lang\/foreign\/SegmentScope;)Ljava\/lang\/foreign\/MemorySegment; flags 9\n+method name get descriptor (Ljava\/lang\/foreign\/ValueLayout$OfAddress;J)Ljava\/lang\/foreign\/MemorySegment; flags 1 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/ForceInline;\n+method name set descriptor (Ljava\/lang\/foreign\/ValueLayout$OfAddress;JLjava\/lang\/foreign\/MemorySegment;)V flags 1 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/ForceInline;\n+method name getAtIndex descriptor (Ljava\/lang\/foreign\/ValueLayout$OfAddress;J)Ljava\/lang\/foreign\/MemorySegment; flags 1 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/ForceInline;\n+method name setAtIndex descriptor (Ljava\/lang\/foreign\/ValueLayout$OfAddress;JLjava\/lang\/foreign\/MemorySegment;)V flags 1 runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/ForceInline;\n+method name mismatch descriptor (Ljava\/lang\/foreign\/MemorySegment;JJLjava\/lang\/foreign\/MemorySegment;JJ)J flags 9\n+\n+-class name java\/lang\/foreign\/MemorySession\n+\n+class name java\/lang\/foreign\/PaddingLayout\n+header extends java\/lang\/Object implements java\/lang\/foreign\/MemoryLayout sealed true flags 601 classAnnotations @Ljdk\/internal\/javac\/PreviewFeature;(feature=eLjdk\/internal\/javac\/PreviewFeature$Feature;FOREIGN;)\n+method name withName descriptor (Ljava\/lang\/String;)Ljava\/lang\/foreign\/PaddingLayout; flags 401\n+method name withBitAlignment descriptor (J)Ljava\/lang\/foreign\/PaddingLayout; flags 401\n+method name withBitAlignment descriptor (J)Ljava\/lang\/foreign\/MemoryLayout; flags 1041\n+method name withName descriptor (Ljava\/lang\/String;)Ljava\/lang\/foreign\/MemoryLayout; flags 1041\n+\n+class name java\/lang\/foreign\/SegmentAllocator\n+header extends java\/lang\/Object flags 601 classAnnotations @Ljdk\/internal\/javac\/PreviewFeature;(feature=eLjdk\/internal\/javac\/PreviewFeature$Feature;FOREIGN;) runtimeAnnotations @Ljava\/lang\/FunctionalInterface;\n+innerclass innerClass java\/lang\/foreign\/MemoryLayout$PathElement outerClass java\/lang\/foreign\/MemoryLayout innerClassName PathElement flags 609\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfByte outerClass java\/lang\/foreign\/ValueLayout innerClassName OfByte flags 609\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfChar outerClass java\/lang\/foreign\/ValueLayout innerClassName OfChar flags 609\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfShort outerClass java\/lang\/foreign\/ValueLayout innerClassName OfShort flags 609\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfInt outerClass java\/lang\/foreign\/ValueLayout innerClassName OfInt flags 609\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfFloat outerClass java\/lang\/foreign\/ValueLayout innerClassName OfFloat flags 609\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfLong outerClass java\/lang\/foreign\/ValueLayout innerClassName OfLong flags 609\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfDouble outerClass java\/lang\/foreign\/ValueLayout innerClassName OfDouble flags 609\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfAddress outerClass java\/lang\/foreign\/ValueLayout innerClassName OfAddress flags 609\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+-method name allocate descriptor (Ljava\/lang\/foreign\/ValueLayout$OfAddress;Ljava\/lang\/foreign\/Addressable;)Ljava\/lang\/foreign\/MemorySegment;\n+-method name newNativeArena descriptor (Ljava\/lang\/foreign\/MemorySession;)Ljava\/lang\/foreign\/SegmentAllocator;\n+-method name newNativeArena descriptor (JLjava\/lang\/foreign\/MemorySession;)Ljava\/lang\/foreign\/SegmentAllocator;\n+-method name newNativeArena descriptor (JJLjava\/lang\/foreign\/MemorySession;)Ljava\/lang\/foreign\/SegmentAllocator;\n+-method name implicitAllocator descriptor ()Ljava\/lang\/foreign\/SegmentAllocator;\n+method name allocate descriptor (Ljava\/lang\/foreign\/ValueLayout$OfAddress;Ljava\/lang\/foreign\/MemorySegment;)Ljava\/lang\/foreign\/MemorySegment; flags 1\n+method name slicingAllocator descriptor (Ljava\/lang\/foreign\/MemorySegment;)Ljava\/lang\/foreign\/SegmentAllocator; flags 9\n+method name nativeAllocator descriptor (Ljava\/lang\/foreign\/SegmentScope;)Ljava\/lang\/foreign\/SegmentAllocator; flags 9\n+\n+class name java\/lang\/foreign\/SegmentScope\n+header extends java\/lang\/Object sealed true flags 601 classAnnotations @Ljdk\/internal\/javac\/PreviewFeature;(feature=eLjdk\/internal\/javac\/PreviewFeature$Feature;FOREIGN;)\n+method name auto descriptor ()Ljava\/lang\/foreign\/SegmentScope; flags 9\n+method name global descriptor ()Ljava\/lang\/foreign\/SegmentScope; flags 9\n+method name isAlive descriptor ()Z flags 401\n+method name isAccessibleBy descriptor (Ljava\/lang\/Thread;)Z flags 401\n+method name whileAlive descriptor (Ljava\/lang\/Runnable;)V flags 401\n+\n+class name java\/lang\/foreign\/SequenceLayout\n+header extends java\/lang\/Object implements java\/lang\/foreign\/MemoryLayout sealed true flags 601 classAnnotations @Ljdk\/internal\/javac\/PreviewFeature;(feature=eLjdk\/internal\/javac\/PreviewFeature$Feature;FOREIGN;)\n+-method name elementLayout descriptor ()Ljava\/lang\/foreign\/MemoryLayout;\n+-method name elementCount descriptor ()J\n+-method name withElementCount descriptor (J)Ljava\/lang\/foreign\/SequenceLayout;\n+-method name reshape descriptor ([J)Ljava\/lang\/foreign\/SequenceLayout;\n+-method name flatten descriptor ()Ljava\/lang\/foreign\/SequenceLayout;\n+-method name toString descriptor ()Ljava\/lang\/String;\n+-method name equals descriptor (Ljava\/lang\/Object;)Z\n+-method name hashCode descriptor ()I\n+-method name withName descriptor (Ljava\/lang\/String;)Ljava\/lang\/foreign\/SequenceLayout;\n+-method name withBitAlignment descriptor (J)Ljava\/lang\/foreign\/SequenceLayout;\n+-method name isPadding descriptor ()Z\n+-method name bitSize descriptor ()J\n+-method name withBitAlignment descriptor (J)Ljava\/lang\/foreign\/AbstractLayout;\n+-method name withName descriptor (Ljava\/lang\/String;)Ljava\/lang\/foreign\/AbstractLayout;\n+-method name byteSize descriptor ()J\n+method name elementLayout descriptor ()Ljava\/lang\/foreign\/MemoryLayout; flags 401\n+method name elementCount descriptor ()J flags 401\n+method name withElementCount descriptor (J)Ljava\/lang\/foreign\/SequenceLayout; flags 401\n+method name reshape descriptor ([J)Ljava\/lang\/foreign\/SequenceLayout; flags 481\n+method name flatten descriptor ()Ljava\/lang\/foreign\/SequenceLayout; flags 401\n+method name withName descriptor (Ljava\/lang\/String;)Ljava\/lang\/foreign\/SequenceLayout; flags 401\n+method name withBitAlignment descriptor (J)Ljava\/lang\/foreign\/SequenceLayout; flags 401\n+\n+class name java\/lang\/foreign\/StructLayout\n+header extends java\/lang\/Object implements java\/lang\/foreign\/GroupLayout sealed true flags 601 classAnnotations @Ljdk\/internal\/javac\/PreviewFeature;(feature=eLjdk\/internal\/javac\/PreviewFeature$Feature;FOREIGN;)\n+method name withName descriptor (Ljava\/lang\/String;)Ljava\/lang\/foreign\/StructLayout; flags 401\n+method name withBitAlignment descriptor (J)Ljava\/lang\/foreign\/StructLayout; flags 401\n+method name withBitAlignment descriptor (J)Ljava\/lang\/foreign\/GroupLayout; flags 1041\n+method name withName descriptor (Ljava\/lang\/String;)Ljava\/lang\/foreign\/GroupLayout; flags 1041\n+method name withBitAlignment descriptor (J)Ljava\/lang\/foreign\/MemoryLayout; flags 1041\n+method name withName descriptor (Ljava\/lang\/String;)Ljava\/lang\/foreign\/MemoryLayout; flags 1041\n+\n+class name java\/lang\/foreign\/SymbolLookup\n+-method name lookup descriptor (Ljava\/lang\/String;)Ljava\/util\/Optional;\n+-method name libraryLookup descriptor (Ljava\/lang\/String;Ljava\/lang\/foreign\/MemorySession;)Ljava\/lang\/foreign\/SymbolLookup;\n+-method name libraryLookup descriptor (Ljava\/nio\/file\/Path;Ljava\/lang\/foreign\/MemorySession;)Ljava\/lang\/foreign\/SymbolLookup;\n+method name find descriptor (Ljava\/lang\/String;)Ljava\/util\/Optional; flags 401 signature (Ljava\/lang\/String;)Ljava\/util\/Optional<Ljava\/lang\/foreign\/MemorySegment;>;\n+method name libraryLookup descriptor (Ljava\/lang\/String;Ljava\/lang\/foreign\/SegmentScope;)Ljava\/lang\/foreign\/SymbolLookup; flags 9 runtimeAnnotations @Ljdk\/internal\/reflect\/CallerSensitive;\n+method name libraryLookup descriptor (Ljava\/nio\/file\/Path;Ljava\/lang\/foreign\/SegmentScope;)Ljava\/lang\/foreign\/SymbolLookup; flags 9 runtimeAnnotations @Ljdk\/internal\/reflect\/CallerSensitive;\n+\n+class name java\/lang\/foreign\/UnionLayout\n+header extends java\/lang\/Object implements java\/lang\/foreign\/GroupLayout sealed true flags 601 classAnnotations @Ljdk\/internal\/javac\/PreviewFeature;(feature=eLjdk\/internal\/javac\/PreviewFeature$Feature;FOREIGN;)\n+method name withName descriptor (Ljava\/lang\/String;)Ljava\/lang\/foreign\/UnionLayout; flags 401\n+method name withBitAlignment descriptor (J)Ljava\/lang\/foreign\/UnionLayout; flags 401\n+method name withBitAlignment descriptor (J)Ljava\/lang\/foreign\/GroupLayout; flags 1041\n+method name withName descriptor (Ljava\/lang\/String;)Ljava\/lang\/foreign\/GroupLayout; flags 1041\n+method name withBitAlignment descriptor (J)Ljava\/lang\/foreign\/MemoryLayout; flags 1041\n+method name withName descriptor (Ljava\/lang\/String;)Ljava\/lang\/foreign\/MemoryLayout; flags 1041\n+\n+class name java\/lang\/foreign\/VaList\n+header extends java\/lang\/Object nestMembers java\/lang\/foreign\/VaList$Builder sealed true flags 601 classAnnotations @Ljdk\/internal\/javac\/PreviewFeature;(feature=eLjdk\/internal\/javac\/PreviewFeature$Feature;FOREIGN;)\n+innerclass innerClass java\/lang\/foreign\/VaList$Builder outerClass java\/lang\/foreign\/VaList innerClassName Builder flags 609\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfInt outerClass java\/lang\/foreign\/ValueLayout innerClassName OfInt flags 609\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfLong outerClass java\/lang\/foreign\/ValueLayout innerClassName OfLong flags 609\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfDouble outerClass java\/lang\/foreign\/ValueLayout innerClassName OfDouble flags 609\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfAddress outerClass java\/lang\/foreign\/ValueLayout innerClassName OfAddress flags 609\n+-method name session descriptor ()Ljava\/lang\/foreign\/MemorySession;\n+-method name nextVarg descriptor (Ljava\/lang\/foreign\/ValueLayout$OfAddress;)Ljava\/lang\/foreign\/MemoryAddress;\n+-method name address descriptor ()Ljava\/lang\/foreign\/MemoryAddress;\n+-method name ofAddress descriptor (Ljava\/lang\/foreign\/MemoryAddress;Ljava\/lang\/foreign\/MemorySession;)Ljava\/lang\/foreign\/VaList;\n+-method name make descriptor (Ljava\/util\/function\/Consumer;Ljava\/lang\/foreign\/MemorySession;)Ljava\/lang\/foreign\/VaList;\n+method name nextVarg descriptor (Ljava\/lang\/foreign\/ValueLayout$OfAddress;)Ljava\/lang\/foreign\/MemorySegment; flags 401\n+method name segment descriptor ()Ljava\/lang\/foreign\/MemorySegment; flags 401\n+method name ofAddress descriptor (JLjava\/lang\/foreign\/SegmentScope;)Ljava\/lang\/foreign\/VaList; flags 9 runtimeAnnotations @Ljdk\/internal\/reflect\/CallerSensitive;\n+method name make descriptor (Ljava\/util\/function\/Consumer;Ljava\/lang\/foreign\/SegmentScope;)Ljava\/lang\/foreign\/VaList; flags 9 signature (Ljava\/util\/function\/Consumer<Ljava\/lang\/foreign\/VaList$Builder;>;Ljava\/lang\/foreign\/SegmentScope;)Ljava\/lang\/foreign\/VaList;\n+\n+class name java\/lang\/foreign\/VaList$Builder\n+header extends java\/lang\/Object nestHost java\/lang\/foreign\/VaList sealed true flags 601 classAnnotations @Ljdk\/internal\/javac\/PreviewFeature;(feature=eLjdk\/internal\/javac\/PreviewFeature$Feature;FOREIGN;)\n+innerclass innerClass java\/lang\/foreign\/VaList$Builder outerClass java\/lang\/foreign\/VaList innerClassName Builder flags 609\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfInt outerClass java\/lang\/foreign\/ValueLayout innerClassName OfInt flags 609\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfLong outerClass java\/lang\/foreign\/ValueLayout innerClassName OfLong flags 609\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfDouble outerClass java\/lang\/foreign\/ValueLayout innerClassName OfDouble flags 609\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfAddress outerClass java\/lang\/foreign\/ValueLayout innerClassName OfAddress flags 609\n+-method name addVarg descriptor (Ljava\/lang\/foreign\/ValueLayout$OfAddress;Ljava\/lang\/foreign\/Addressable;)Ljava\/lang\/foreign\/VaList$Builder;\n+method name addVarg descriptor (Ljava\/lang\/foreign\/ValueLayout$OfAddress;Ljava\/lang\/foreign\/MemorySegment;)Ljava\/lang\/foreign\/VaList$Builder; flags 401\n+\n+class name java\/lang\/foreign\/ValueLayout\n+header extends java\/lang\/Object implements java\/lang\/foreign\/MemoryLayout nestMembers java\/lang\/foreign\/ValueLayout$OfAddress,java\/lang\/foreign\/ValueLayout$OfDouble,java\/lang\/foreign\/ValueLayout$OfLong,java\/lang\/foreign\/ValueLayout$OfFloat,java\/lang\/foreign\/ValueLayout$OfInt,java\/lang\/foreign\/ValueLayout$OfShort,java\/lang\/foreign\/ValueLayout$OfChar,java\/lang\/foreign\/ValueLayout$OfByte,java\/lang\/foreign\/ValueLayout$OfBoolean sealed true flags 601 classAnnotations @Ljdk\/internal\/javac\/PreviewFeature;(feature=eLjdk\/internal\/javac\/PreviewFeature$Feature;FOREIGN;)\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfAddress outerClass java\/lang\/foreign\/ValueLayout innerClassName OfAddress flags 609\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfByte outerClass java\/lang\/foreign\/ValueLayout innerClassName OfByte flags 609\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfBoolean outerClass java\/lang\/foreign\/ValueLayout innerClassName OfBoolean flags 609\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfChar outerClass java\/lang\/foreign\/ValueLayout innerClassName OfChar flags 609\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfShort outerClass java\/lang\/foreign\/ValueLayout innerClassName OfShort flags 609\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfInt outerClass java\/lang\/foreign\/ValueLayout innerClassName OfInt flags 609\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfLong outerClass java\/lang\/foreign\/ValueLayout innerClassName OfLong flags 609\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfFloat outerClass java\/lang\/foreign\/ValueLayout innerClassName OfFloat flags 609\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfDouble outerClass java\/lang\/foreign\/ValueLayout innerClassName OfDouble flags 609\n+-method name order descriptor ()Ljava\/nio\/ByteOrder;\n+-method name withOrder descriptor (Ljava\/nio\/ByteOrder;)Ljava\/lang\/foreign\/ValueLayout;\n+-method name toString descriptor ()Ljava\/lang\/String;\n+-method name equals descriptor (Ljava\/lang\/Object;)Z\n+-method name arrayElementVarHandle descriptor ([I)Ljava\/lang\/invoke\/VarHandle;\n+-method name carrier descriptor ()Ljava\/lang\/Class;\n+-method name hashCode descriptor ()I\n+-method name withName descriptor (Ljava\/lang\/String;)Ljava\/lang\/foreign\/ValueLayout;\n+-method name withBitAlignment descriptor (J)Ljava\/lang\/foreign\/ValueLayout;\n+-method name isPadding descriptor ()Z\n+-method name bitSize descriptor ()J\n+-method name withBitAlignment descriptor (J)Ljava\/lang\/foreign\/AbstractLayout;\n+-method name withName descriptor (Ljava\/lang\/String;)Ljava\/lang\/foreign\/AbstractLayout;\n+-method name byteSize descriptor ()J\n+field name ADDRESS_UNALIGNED descriptor Ljava\/lang\/foreign\/ValueLayout$OfAddress; flags 19\n+field name JAVA_CHAR_UNALIGNED descriptor Ljava\/lang\/foreign\/ValueLayout$OfChar; flags 19\n+field name JAVA_SHORT_UNALIGNED descriptor Ljava\/lang\/foreign\/ValueLayout$OfShort; flags 19\n+field name JAVA_INT_UNALIGNED descriptor Ljava\/lang\/foreign\/ValueLayout$OfInt; flags 19\n+field name JAVA_LONG_UNALIGNED descriptor Ljava\/lang\/foreign\/ValueLayout$OfLong; flags 19\n+field name JAVA_FLOAT_UNALIGNED descriptor Ljava\/lang\/foreign\/ValueLayout$OfFloat; flags 19\n+field name JAVA_DOUBLE_UNALIGNED descriptor Ljava\/lang\/foreign\/ValueLayout$OfDouble; flags 19\n+method name order descriptor ()Ljava\/nio\/ByteOrder; flags 401\n+method name withOrder descriptor (Ljava\/nio\/ByteOrder;)Ljava\/lang\/foreign\/ValueLayout; flags 401\n+method name arrayElementVarHandle descriptor ([I)Ljava\/lang\/invoke\/VarHandle; flags 481\n+method name carrier descriptor ()Ljava\/lang\/Class; flags 401 signature ()Ljava\/lang\/Class<*>;\n+method name withName descriptor (Ljava\/lang\/String;)Ljava\/lang\/foreign\/ValueLayout; flags 401\n+method name withBitAlignment descriptor (J)Ljava\/lang\/foreign\/ValueLayout; flags 401\n+\n+class name java\/lang\/foreign\/ValueLayout$OfAddress\n+header extends java\/lang\/Object implements java\/lang\/foreign\/ValueLayout nestHost java\/lang\/foreign\/ValueLayout sealed true flags 601 classAnnotations @Ljdk\/internal\/javac\/PreviewFeature;(feature=eLjdk\/internal\/javac\/PreviewFeature$Feature;FOREIGN;)\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfAddress outerClass java\/lang\/foreign\/ValueLayout innerClassName OfAddress flags 609\n+-method name withName descriptor (Ljava\/lang\/String;)Ljava\/lang\/foreign\/ValueLayout$OfAddress;\n+-method name withBitAlignment descriptor (J)Ljava\/lang\/foreign\/ValueLayout$OfAddress;\n+-method name withOrder descriptor (Ljava\/nio\/ByteOrder;)Ljava\/lang\/foreign\/ValueLayout$OfAddress;\n+-method name isPadding descriptor ()Z\n+-method name bitSize descriptor ()J\n+-method name withBitAlignment descriptor (J)Ljava\/lang\/foreign\/AbstractLayout;\n+-method name withName descriptor (Ljava\/lang\/String;)Ljava\/lang\/foreign\/AbstractLayout;\n+-method name byteSize descriptor ()J\n+method name withName descriptor (Ljava\/lang\/String;)Ljava\/lang\/foreign\/ValueLayout$OfAddress; flags 401\n+method name withBitAlignment descriptor (J)Ljava\/lang\/foreign\/ValueLayout$OfAddress; flags 401\n+method name withOrder descriptor (Ljava\/nio\/ByteOrder;)Ljava\/lang\/foreign\/ValueLayout$OfAddress; flags 401\n+method name asUnbounded descriptor ()Ljava\/lang\/foreign\/ValueLayout$OfAddress; flags 401 runtimeAnnotations @Ljdk\/internal\/reflect\/CallerSensitive;\n+method name isUnbounded descriptor ()Z flags 401\n+\n+class name java\/lang\/foreign\/ValueLayout$OfBoolean\n+header extends java\/lang\/Object implements java\/lang\/foreign\/ValueLayout nestHost java\/lang\/foreign\/ValueLayout sealed true flags 601 classAnnotations @Ljdk\/internal\/javac\/PreviewFeature;(feature=eLjdk\/internal\/javac\/PreviewFeature$Feature;FOREIGN;)\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfBoolean outerClass java\/lang\/foreign\/ValueLayout innerClassName OfBoolean flags 609\n+-method name withName descriptor (Ljava\/lang\/String;)Ljava\/lang\/foreign\/ValueLayout$OfBoolean;\n+-method name withBitAlignment descriptor (J)Ljava\/lang\/foreign\/ValueLayout$OfBoolean;\n+-method name withOrder descriptor (Ljava\/nio\/ByteOrder;)Ljava\/lang\/foreign\/ValueLayout$OfBoolean;\n+-method name isPadding descriptor ()Z\n+-method name bitSize descriptor ()J\n+-method name withBitAlignment descriptor (J)Ljava\/lang\/foreign\/AbstractLayout;\n+-method name withName descriptor (Ljava\/lang\/String;)Ljava\/lang\/foreign\/AbstractLayout;\n+-method name byteSize descriptor ()J\n+method name withName descriptor (Ljava\/lang\/String;)Ljava\/lang\/foreign\/ValueLayout$OfBoolean; flags 401\n+method name withBitAlignment descriptor (J)Ljava\/lang\/foreign\/ValueLayout$OfBoolean; flags 401\n+method name withOrder descriptor (Ljava\/nio\/ByteOrder;)Ljava\/lang\/foreign\/ValueLayout$OfBoolean; flags 401\n+\n+class name java\/lang\/foreign\/ValueLayout$OfByte\n+header extends java\/lang\/Object implements java\/lang\/foreign\/ValueLayout nestHost java\/lang\/foreign\/ValueLayout sealed true flags 601 classAnnotations @Ljdk\/internal\/javac\/PreviewFeature;(feature=eLjdk\/internal\/javac\/PreviewFeature$Feature;FOREIGN;)\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfByte outerClass java\/lang\/foreign\/ValueLayout innerClassName OfByte flags 609\n+-method name withName descriptor (Ljava\/lang\/String;)Ljava\/lang\/foreign\/ValueLayout$OfByte;\n+-method name withBitAlignment descriptor (J)Ljava\/lang\/foreign\/ValueLayout$OfByte;\n+-method name withOrder descriptor (Ljava\/nio\/ByteOrder;)Ljava\/lang\/foreign\/ValueLayout$OfByte;\n+-method name isPadding descriptor ()Z\n+-method name bitSize descriptor ()J\n+-method name withBitAlignment descriptor (J)Ljava\/lang\/foreign\/AbstractLayout;\n+-method name withName descriptor (Ljava\/lang\/String;)Ljava\/lang\/foreign\/AbstractLayout;\n+-method name byteSize descriptor ()J\n+method name withName descriptor (Ljava\/lang\/String;)Ljava\/lang\/foreign\/ValueLayout$OfByte; flags 401\n+method name withBitAlignment descriptor (J)Ljava\/lang\/foreign\/ValueLayout$OfByte; flags 401\n+method name withOrder descriptor (Ljava\/nio\/ByteOrder;)Ljava\/lang\/foreign\/ValueLayout$OfByte; flags 401\n+\n+class name java\/lang\/foreign\/ValueLayout$OfChar\n+header extends java\/lang\/Object implements java\/lang\/foreign\/ValueLayout nestHost java\/lang\/foreign\/ValueLayout sealed true flags 601 classAnnotations @Ljdk\/internal\/javac\/PreviewFeature;(feature=eLjdk\/internal\/javac\/PreviewFeature$Feature;FOREIGN;)\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfChar outerClass java\/lang\/foreign\/ValueLayout innerClassName OfChar flags 609\n+-method name withName descriptor (Ljava\/lang\/String;)Ljava\/lang\/foreign\/ValueLayout$OfChar;\n+-method name withBitAlignment descriptor (J)Ljava\/lang\/foreign\/ValueLayout$OfChar;\n+-method name withOrder descriptor (Ljava\/nio\/ByteOrder;)Ljava\/lang\/foreign\/ValueLayout$OfChar;\n+-method name isPadding descriptor ()Z\n+-method name bitSize descriptor ()J\n+-method name withBitAlignment descriptor (J)Ljava\/lang\/foreign\/AbstractLayout;\n+-method name withName descriptor (Ljava\/lang\/String;)Ljava\/lang\/foreign\/AbstractLayout;\n+-method name byteSize descriptor ()J\n+method name withName descriptor (Ljava\/lang\/String;)Ljava\/lang\/foreign\/ValueLayout$OfChar; flags 401\n+method name withBitAlignment descriptor (J)Ljava\/lang\/foreign\/ValueLayout$OfChar; flags 401\n+method name withOrder descriptor (Ljava\/nio\/ByteOrder;)Ljava\/lang\/foreign\/ValueLayout$OfChar; flags 401\n+\n+class name java\/lang\/foreign\/ValueLayout$OfDouble\n+header extends java\/lang\/Object implements java\/lang\/foreign\/ValueLayout nestHost java\/lang\/foreign\/ValueLayout sealed true flags 601 classAnnotations @Ljdk\/internal\/javac\/PreviewFeature;(feature=eLjdk\/internal\/javac\/PreviewFeature$Feature;FOREIGN;)\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfDouble outerClass java\/lang\/foreign\/ValueLayout innerClassName OfDouble flags 609\n+-method name withName descriptor (Ljava\/lang\/String;)Ljava\/lang\/foreign\/ValueLayout$OfDouble;\n+-method name withBitAlignment descriptor (J)Ljava\/lang\/foreign\/ValueLayout$OfDouble;\n+-method name withOrder descriptor (Ljava\/nio\/ByteOrder;)Ljava\/lang\/foreign\/ValueLayout$OfDouble;\n+-method name isPadding descriptor ()Z\n+-method name bitSize descriptor ()J\n+-method name withBitAlignment descriptor (J)Ljava\/lang\/foreign\/AbstractLayout;\n+-method name withName descriptor (Ljava\/lang\/String;)Ljava\/lang\/foreign\/AbstractLayout;\n+-method name byteSize descriptor ()J\n+method name withName descriptor (Ljava\/lang\/String;)Ljava\/lang\/foreign\/ValueLayout$OfDouble; flags 401\n+method name withBitAlignment descriptor (J)Ljava\/lang\/foreign\/ValueLayout$OfDouble; flags 401\n+method name withOrder descriptor (Ljava\/nio\/ByteOrder;)Ljava\/lang\/foreign\/ValueLayout$OfDouble; flags 401\n+\n+class name java\/lang\/foreign\/ValueLayout$OfFloat\n+header extends java\/lang\/Object implements java\/lang\/foreign\/ValueLayout nestHost java\/lang\/foreign\/ValueLayout sealed true flags 601 classAnnotations @Ljdk\/internal\/javac\/PreviewFeature;(feature=eLjdk\/internal\/javac\/PreviewFeature$Feature;FOREIGN;)\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfFloat outerClass java\/lang\/foreign\/ValueLayout innerClassName OfFloat flags 609\n+-method name withName descriptor (Ljava\/lang\/String;)Ljava\/lang\/foreign\/ValueLayout$OfFloat;\n+-method name withBitAlignment descriptor (J)Ljava\/lang\/foreign\/ValueLayout$OfFloat;\n+-method name withOrder descriptor (Ljava\/nio\/ByteOrder;)Ljava\/lang\/foreign\/ValueLayout$OfFloat;\n+-method name isPadding descriptor ()Z\n+-method name bitSize descriptor ()J\n+-method name withBitAlignment descriptor (J)Ljava\/lang\/foreign\/AbstractLayout;\n+-method name withName descriptor (Ljava\/lang\/String;)Ljava\/lang\/foreign\/AbstractLayout;\n+-method name byteSize descriptor ()J\n+method name withName descriptor (Ljava\/lang\/String;)Ljava\/lang\/foreign\/ValueLayout$OfFloat; flags 401\n+method name withBitAlignment descriptor (J)Ljava\/lang\/foreign\/ValueLayout$OfFloat; flags 401\n+method name withOrder descriptor (Ljava\/nio\/ByteOrder;)Ljava\/lang\/foreign\/ValueLayout$OfFloat; flags 401\n+\n+class name java\/lang\/foreign\/ValueLayout$OfInt\n+header extends java\/lang\/Object implements java\/lang\/foreign\/ValueLayout nestHost java\/lang\/foreign\/ValueLayout sealed true flags 601 classAnnotations @Ljdk\/internal\/javac\/PreviewFeature;(feature=eLjdk\/internal\/javac\/PreviewFeature$Feature;FOREIGN;)\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfInt outerClass java\/lang\/foreign\/ValueLayout innerClassName OfInt flags 609\n+-method name withName descriptor (Ljava\/lang\/String;)Ljava\/lang\/foreign\/ValueLayout$OfInt;\n+-method name withBitAlignment descriptor (J)Ljava\/lang\/foreign\/ValueLayout$OfInt;\n+-method name withOrder descriptor (Ljava\/nio\/ByteOrder;)Ljava\/lang\/foreign\/ValueLayout$OfInt;\n+-method name isPadding descriptor ()Z\n+-method name bitSize descriptor ()J\n+-method name withBitAlignment descriptor (J)Ljava\/lang\/foreign\/AbstractLayout;\n+-method name withName descriptor (Ljava\/lang\/String;)Ljava\/lang\/foreign\/AbstractLayout;\n+-method name byteSize descriptor ()J\n+method name withName descriptor (Ljava\/lang\/String;)Ljava\/lang\/foreign\/ValueLayout$OfInt; flags 401\n+method name withBitAlignment descriptor (J)Ljava\/lang\/foreign\/ValueLayout$OfInt; flags 401\n+method name withOrder descriptor (Ljava\/nio\/ByteOrder;)Ljava\/lang\/foreign\/ValueLayout$OfInt; flags 401\n+\n+class name java\/lang\/foreign\/ValueLayout$OfLong\n+header extends java\/lang\/Object implements java\/lang\/foreign\/ValueLayout nestHost java\/lang\/foreign\/ValueLayout sealed true flags 601 classAnnotations @Ljdk\/internal\/javac\/PreviewFeature;(feature=eLjdk\/internal\/javac\/PreviewFeature$Feature;FOREIGN;)\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfLong outerClass java\/lang\/foreign\/ValueLayout innerClassName OfLong flags 609\n+-method name withName descriptor (Ljava\/lang\/String;)Ljava\/lang\/foreign\/ValueLayout$OfLong;\n+-method name withBitAlignment descriptor (J)Ljava\/lang\/foreign\/ValueLayout$OfLong;\n+-method name withOrder descriptor (Ljava\/nio\/ByteOrder;)Ljava\/lang\/foreign\/ValueLayout$OfLong;\n+-method name isPadding descriptor ()Z\n+-method name bitSize descriptor ()J\n+-method name withBitAlignment descriptor (J)Ljava\/lang\/foreign\/AbstractLayout;\n+-method name withName descriptor (Ljava\/lang\/String;)Ljava\/lang\/foreign\/AbstractLayout;\n+-method name byteSize descriptor ()J\n+method name withName descriptor (Ljava\/lang\/String;)Ljava\/lang\/foreign\/ValueLayout$OfLong; flags 401\n+method name withBitAlignment descriptor (J)Ljava\/lang\/foreign\/ValueLayout$OfLong; flags 401\n+method name withOrder descriptor (Ljava\/nio\/ByteOrder;)Ljava\/lang\/foreign\/ValueLayout$OfLong; flags 401\n+\n+class name java\/lang\/foreign\/ValueLayout$OfShort\n+header extends java\/lang\/Object implements java\/lang\/foreign\/ValueLayout nestHost java\/lang\/foreign\/ValueLayout sealed true flags 601 classAnnotations @Ljdk\/internal\/javac\/PreviewFeature;(feature=eLjdk\/internal\/javac\/PreviewFeature$Feature;FOREIGN;)\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfShort outerClass java\/lang\/foreign\/ValueLayout innerClassName OfShort flags 609\n+-method name withName descriptor (Ljava\/lang\/String;)Ljava\/lang\/foreign\/ValueLayout$OfShort;\n+-method name withBitAlignment descriptor (J)Ljava\/lang\/foreign\/ValueLayout$OfShort;\n+-method name withOrder descriptor (Ljava\/nio\/ByteOrder;)Ljava\/lang\/foreign\/ValueLayout$OfShort;\n+-method name isPadding descriptor ()Z\n+-method name bitSize descriptor ()J\n+-method name withBitAlignment descriptor (J)Ljava\/lang\/foreign\/AbstractLayout;\n+-method name withName descriptor (Ljava\/lang\/String;)Ljava\/lang\/foreign\/AbstractLayout;\n+-method name byteSize descriptor ()J\n+method name withName descriptor (Ljava\/lang\/String;)Ljava\/lang\/foreign\/ValueLayout$OfShort; flags 401\n+method name withBitAlignment descriptor (J)Ljava\/lang\/foreign\/ValueLayout$OfShort; flags 401\n+method name withOrder descriptor (Ljava\/nio\/ByteOrder;)Ljava\/lang\/foreign\/ValueLayout$OfShort; flags 401\n+\n+class name java\/lang\/invoke\/CallSite\n+header extends java\/lang\/Object sealed true flags 421\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/lang\/invoke\/LambdaMetafactory\n+header extends java\/lang\/Object flags 31\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/lang\/invoke\/MethodHandle\n+header extends java\/lang\/Object implements java\/lang\/constant\/Constable sealed true flags 421\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+innerclass innerClass java\/lang\/constant\/DirectMethodHandleDesc$Kind outerClass java\/lang\/constant\/DirectMethodHandleDesc innerClassName Kind flags 4019\n+\n+class name java\/lang\/invoke\/MethodHandleProxies\n+header extends java\/lang\/Object flags 21 classAnnotations @Ljdk\/Profile+Annotation;(value=I1)\n+\n+class name java\/lang\/invoke\/StringConcatException\n+header extends java\/lang\/Exception flags 21\n+\n+class name java\/lang\/invoke\/VarHandle\n+header extends java\/lang\/Object implements java\/lang\/constant\/Constable nestMembers java\/lang\/invoke\/VarHandle$VarHandleDesc,java\/lang\/invoke\/VarHandle$AccessMode sealed true flags 421\n+innerclass innerClass java\/lang\/invoke\/VarHandle$AccessMode outerClass java\/lang\/invoke\/VarHandle innerClassName AccessMode flags 4019\n+innerclass innerClass java\/lang\/invoke\/VarHandle$VarHandleDesc outerClass java\/lang\/invoke\/VarHandle innerClassName VarHandleDesc flags 19\n+\n+class name java\/lang\/module\/Configuration\n+header extends java\/lang\/Object flags 31\n+innerclass innerClass java\/util\/Map$Entry outerClass java\/util\/Map innerClassName Entry flags 609\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/lang\/module\/FindException\n+header extends java\/lang\/RuntimeException flags 21\n+\n+class name java\/lang\/module\/InvalidModuleDescriptorException\n+header extends java\/lang\/RuntimeException flags 21\n+\n+class name java\/lang\/module\/ModuleDescriptor\n+header extends java\/lang\/Object implements java\/lang\/Comparable nestMembers java\/lang\/module\/ModuleDescriptor$Builder,java\/lang\/module\/ModuleDescriptor$Version,java\/lang\/module\/ModuleDescriptor$Provides,java\/lang\/module\/ModuleDescriptor$Opens,java\/lang\/module\/ModuleDescriptor$Opens$Modifier,java\/lang\/module\/ModuleDescriptor$Exports,java\/lang\/module\/ModuleDescriptor$Exports$Modifier,java\/lang\/module\/ModuleDescriptor$Requires,java\/lang\/module\/ModuleDescriptor$Requires$Modifier,java\/lang\/module\/ModuleDescriptor$Modifier flags 21 signature Ljava\/lang\/Object;Ljava\/lang\/Comparable<Ljava\/lang\/module\/ModuleDescriptor;>;\n+innerclass innerClass java\/lang\/module\/ModuleDescriptor$Version outerClass java\/lang\/module\/ModuleDescriptor innerClassName Version flags 19\n+innerclass innerClass java\/lang\/module\/ModuleDescriptor$Modifier outerClass java\/lang\/module\/ModuleDescriptor innerClassName Modifier flags 4019\n+innerclass innerClass java\/lang\/reflect\/AccessFlag$Location outerClass java\/lang\/reflect\/AccessFlag innerClassName Location flags 4019\n+innerclass innerClass java\/lang\/module\/ModuleDescriptor$Builder outerClass java\/lang\/module\/ModuleDescriptor innerClassName Builder flags 19\n+innerclass innerClass java\/lang\/module\/ModuleDescriptor$Provides outerClass java\/lang\/module\/ModuleDescriptor innerClassName Provides flags 19\n+innerclass innerClass java\/lang\/module\/ModuleDescriptor$Opens outerClass java\/lang\/module\/ModuleDescriptor innerClassName Opens flags 19\n+innerclass innerClass java\/lang\/module\/ModuleDescriptor$Exports outerClass java\/lang\/module\/ModuleDescriptor innerClassName Exports flags 19\n+innerclass innerClass java\/lang\/module\/ModuleDescriptor$Requires outerClass java\/lang\/module\/ModuleDescriptor innerClassName Requires flags 19\n+innerclass innerClass java\/lang\/module\/ModuleDescriptor$Opens$Modifier outerClass java\/lang\/module\/ModuleDescriptor$Opens innerClassName Modifier flags 4019\n+innerclass innerClass java\/lang\/module\/ModuleDescriptor$Exports$Modifier outerClass java\/lang\/module\/ModuleDescriptor$Exports innerClassName Modifier flags 4019\n+innerclass innerClass java\/lang\/module\/ModuleDescriptor$Requires$Modifier outerClass java\/lang\/module\/ModuleDescriptor$Requires innerClassName Modifier flags 4019\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+method name accessFlags descriptor ()Ljava\/util\/Set; flags 1 signature ()Ljava\/util\/Set<Ljava\/lang\/reflect\/AccessFlag;>;\n+\n+class name java\/lang\/module\/ModuleDescriptor$Exports\n+header extends java\/lang\/Object implements java\/lang\/Comparable nestHost java\/lang\/module\/ModuleDescriptor flags 31 signature Ljava\/lang\/Object;Ljava\/lang\/Comparable<Ljava\/lang\/module\/ModuleDescriptor$Exports;>;\n+innerclass innerClass java\/lang\/module\/ModuleDescriptor$Exports outerClass java\/lang\/module\/ModuleDescriptor innerClassName Exports flags 19\n+innerclass innerClass java\/lang\/module\/ModuleDescriptor$Exports$Modifier outerClass java\/lang\/module\/ModuleDescriptor$Exports innerClassName Modifier flags 4019\n+innerclass innerClass java\/lang\/reflect\/AccessFlag$Location outerClass java\/lang\/reflect\/AccessFlag innerClassName Location flags 4019\n+method name accessFlags descriptor ()Ljava\/util\/Set; flags 1 signature ()Ljava\/util\/Set<Ljava\/lang\/reflect\/AccessFlag;>;\n+\n+class name java\/lang\/module\/ModuleDescriptor$Opens\n+header extends java\/lang\/Object implements java\/lang\/Comparable nestHost java\/lang\/module\/ModuleDescriptor flags 31 signature Ljava\/lang\/Object;Ljava\/lang\/Comparable<Ljava\/lang\/module\/ModuleDescriptor$Opens;>;\n+innerclass innerClass java\/lang\/module\/ModuleDescriptor$Opens outerClass java\/lang\/module\/ModuleDescriptor innerClassName Opens flags 19\n+innerclass innerClass java\/lang\/module\/ModuleDescriptor$Opens$Modifier outerClass java\/lang\/module\/ModuleDescriptor$Opens innerClassName Modifier flags 4019\n+innerclass innerClass java\/lang\/reflect\/AccessFlag$Location outerClass java\/lang\/reflect\/AccessFlag innerClassName Location flags 4019\n+method name accessFlags descriptor ()Ljava\/util\/Set; flags 1 signature ()Ljava\/util\/Set<Ljava\/lang\/reflect\/AccessFlag;>;\n+\n+class name java\/lang\/module\/ModuleDescriptor$Requires\n+header extends java\/lang\/Object implements java\/lang\/Comparable nestHost java\/lang\/module\/ModuleDescriptor flags 31 signature Ljava\/lang\/Object;Ljava\/lang\/Comparable<Ljava\/lang\/module\/ModuleDescriptor$Requires;>;\n+innerclass innerClass java\/lang\/module\/ModuleDescriptor$Requires outerClass java\/lang\/module\/ModuleDescriptor innerClassName Requires flags 19\n+innerclass innerClass java\/lang\/module\/ModuleDescriptor$Version outerClass java\/lang\/module\/ModuleDescriptor innerClassName Version flags 19\n+innerclass innerClass java\/lang\/module\/ModuleDescriptor$Requires$Modifier outerClass java\/lang\/module\/ModuleDescriptor$Requires innerClassName Modifier flags 4019\n+innerclass innerClass java\/lang\/reflect\/AccessFlag$Location outerClass java\/lang\/reflect\/AccessFlag innerClassName Location flags 4019\n+method name accessFlags descriptor ()Ljava\/util\/Set; flags 1 signature ()Ljava\/util\/Set<Ljava\/lang\/reflect\/AccessFlag;>;\n+\n+class name java\/lang\/module\/ModuleReader\n+header extends java\/lang\/Object implements java\/io\/Closeable flags 601\n+\n+class name java\/lang\/module\/ModuleReference\n+header extends java\/lang\/Object flags 421\n+\n+class name java\/lang\/module\/ResolutionException\n+header extends java\/lang\/RuntimeException flags 21\n+\n+class name java\/lang\/module\/ResolvedModule\n+header extends java\/lang\/Object flags 31\n+\n+class name java\/lang\/ref\/Reference\n+header extends java\/lang\/Object sealed true flags 421 signature <T:Ljava\/lang\/Object;>Ljava\/lang\/Object;\n+\n+class name java\/lang\/reflect\/AccessFlag\n+header extends java\/lang\/Enum nestMembers java\/lang\/reflect\/AccessFlag$Location flags 4031 signature Ljava\/lang\/Enum<Ljava\/lang\/reflect\/AccessFlag;>;\n+innerclass innerClass java\/lang\/reflect\/AccessFlag$Location outerClass java\/lang\/reflect\/AccessFlag innerClassName Location flags 4019\n+field name PUBLIC descriptor Ljava\/lang\/reflect\/AccessFlag; flags 4019\n+field name PRIVATE descriptor Ljava\/lang\/reflect\/AccessFlag; flags 4019\n+field name PROTECTED descriptor Ljava\/lang\/reflect\/AccessFlag; flags 4019\n+field name STATIC descriptor Ljava\/lang\/reflect\/AccessFlag; flags 4019\n+field name FINAL descriptor Ljava\/lang\/reflect\/AccessFlag; flags 4019\n+field name SUPER descriptor Ljava\/lang\/reflect\/AccessFlag; flags 4019\n+field name OPEN descriptor Ljava\/lang\/reflect\/AccessFlag; flags 4019\n+field name TRANSITIVE descriptor Ljava\/lang\/reflect\/AccessFlag; flags 4019\n+field name SYNCHRONIZED descriptor Ljava\/lang\/reflect\/AccessFlag; flags 4019\n+field name STATIC_PHASE descriptor Ljava\/lang\/reflect\/AccessFlag; flags 4019\n+field name VOLATILE descriptor Ljava\/lang\/reflect\/AccessFlag; flags 4019\n+field name BRIDGE descriptor Ljava\/lang\/reflect\/AccessFlag; flags 4019\n+field name TRANSIENT descriptor Ljava\/lang\/reflect\/AccessFlag; flags 4019\n+field name VARARGS descriptor Ljava\/lang\/reflect\/AccessFlag; flags 4019\n+field name NATIVE descriptor Ljava\/lang\/reflect\/AccessFlag; flags 4019\n+field name INTERFACE descriptor Ljava\/lang\/reflect\/AccessFlag; flags 4019\n+field name ABSTRACT descriptor Ljava\/lang\/reflect\/AccessFlag; flags 4019\n+field name STRICT descriptor Ljava\/lang\/reflect\/AccessFlag; flags 4019\n+field name SYNTHETIC descriptor Ljava\/lang\/reflect\/AccessFlag; flags 4019\n+field name ANNOTATION descriptor Ljava\/lang\/reflect\/AccessFlag; flags 4019\n+field name ENUM descriptor Ljava\/lang\/reflect\/AccessFlag; flags 4019\n+field name MANDATED descriptor Ljava\/lang\/reflect\/AccessFlag; flags 4019\n+field name MODULE descriptor Ljava\/lang\/reflect\/AccessFlag; flags 4019\n+method name values descriptor ()[Ljava\/lang\/reflect\/AccessFlag; flags 9\n+method name valueOf descriptor (Ljava\/lang\/String;)Ljava\/lang\/reflect\/AccessFlag; flags 9\n+method name mask descriptor ()I flags 1\n+method name sourceModifier descriptor ()Z flags 1\n+method name locations descriptor ()Ljava\/util\/Set; flags 1 signature ()Ljava\/util\/Set<Ljava\/lang\/reflect\/AccessFlag$Location;>;\n+method name locations descriptor (Ljava\/lang\/reflect\/ClassFileFormatVersion;)Ljava\/util\/Set; flags 1 signature (Ljava\/lang\/reflect\/ClassFileFormatVersion;)Ljava\/util\/Set<Ljava\/lang\/reflect\/AccessFlag$Location;>;\n+method name maskToAccessFlags descriptor (ILjava\/lang\/reflect\/AccessFlag$Location;)Ljava\/util\/Set; flags 9 signature (ILjava\/lang\/reflect\/AccessFlag$Location;)Ljava\/util\/Set<Ljava\/lang\/reflect\/AccessFlag;>;\n+\n+class name java\/lang\/reflect\/AccessFlag$Location\n+header extends java\/lang\/Enum nestHost java\/lang\/reflect\/AccessFlag flags 4031 signature Ljava\/lang\/Enum<Ljava\/lang\/reflect\/AccessFlag$Location;>;\n+innerclass innerClass java\/lang\/reflect\/AccessFlag$Location outerClass java\/lang\/reflect\/AccessFlag innerClassName Location flags 4019\n+field name CLASS descriptor Ljava\/lang\/reflect\/AccessFlag$Location; flags 4019\n+field name FIELD descriptor Ljava\/lang\/reflect\/AccessFlag$Location; flags 4019\n+field name METHOD descriptor Ljava\/lang\/reflect\/AccessFlag$Location; flags 4019\n+field name INNER_CLASS descriptor Ljava\/lang\/reflect\/AccessFlag$Location; flags 4019\n+field name METHOD_PARAMETER descriptor Ljava\/lang\/reflect\/AccessFlag$Location; flags 4019\n+field name MODULE descriptor Ljava\/lang\/reflect\/AccessFlag$Location; flags 4019\n+field name MODULE_REQUIRES descriptor Ljava\/lang\/reflect\/AccessFlag$Location; flags 4019\n+field name MODULE_EXPORTS descriptor Ljava\/lang\/reflect\/AccessFlag$Location; flags 4019\n+field name MODULE_OPENS descriptor Ljava\/lang\/reflect\/AccessFlag$Location; flags 4019\n+method name values descriptor ()[Ljava\/lang\/reflect\/AccessFlag$Location; flags 9\n+method name valueOf descriptor (Ljava\/lang\/String;)Ljava\/lang\/reflect\/AccessFlag$Location; flags 9\n+\n+class name java\/lang\/reflect\/AccessibleObject\n+header extends java\/lang\/Object implements java\/lang\/reflect\/AnnotatedElement flags 21 classAnnotations @Ljdk\/Profile+Annotation;(value=I1)\n+\n+class name java\/lang\/reflect\/AnnotatedElement\n+header extends java\/lang\/Object flags 601\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/lang\/reflect\/ClassFileFormatVersion\n+header extends java\/lang\/Enum flags 4031 signature Ljava\/lang\/Enum<Ljava\/lang\/reflect\/ClassFileFormatVersion;>;\n+innerclass innerClass java\/lang\/Runtime$Version outerClass java\/lang\/Runtime innerClassName Version flags 19\n+field name RELEASE_0 descriptor Ljava\/lang\/reflect\/ClassFileFormatVersion; flags 4019\n+field name RELEASE_1 descriptor Ljava\/lang\/reflect\/ClassFileFormatVersion; flags 4019\n+field name RELEASE_2 descriptor Ljava\/lang\/reflect\/ClassFileFormatVersion; flags 4019\n+field name RELEASE_3 descriptor Ljava\/lang\/reflect\/ClassFileFormatVersion; flags 4019\n+field name RELEASE_4 descriptor Ljava\/lang\/reflect\/ClassFileFormatVersion; flags 4019\n+field name RELEASE_5 descriptor Ljava\/lang\/reflect\/ClassFileFormatVersion; flags 4019\n+field name RELEASE_6 descriptor Ljava\/lang\/reflect\/ClassFileFormatVersion; flags 4019\n+field name RELEASE_7 descriptor Ljava\/lang\/reflect\/ClassFileFormatVersion; flags 4019\n+field name RELEASE_8 descriptor Ljava\/lang\/reflect\/ClassFileFormatVersion; flags 4019\n+field name RELEASE_9 descriptor Ljava\/lang\/reflect\/ClassFileFormatVersion; flags 4019\n+field name RELEASE_10 descriptor Ljava\/lang\/reflect\/ClassFileFormatVersion; flags 4019\n+field name RELEASE_11 descriptor Ljava\/lang\/reflect\/ClassFileFormatVersion; flags 4019\n+field name RELEASE_12 descriptor Ljava\/lang\/reflect\/ClassFileFormatVersion; flags 4019\n+field name RELEASE_13 descriptor Ljava\/lang\/reflect\/ClassFileFormatVersion; flags 4019\n+field name RELEASE_14 descriptor Ljava\/lang\/reflect\/ClassFileFormatVersion; flags 4019\n+field name RELEASE_15 descriptor Ljava\/lang\/reflect\/ClassFileFormatVersion; flags 4019\n+field name RELEASE_16 descriptor Ljava\/lang\/reflect\/ClassFileFormatVersion; flags 4019\n+field name RELEASE_17 descriptor Ljava\/lang\/reflect\/ClassFileFormatVersion; flags 4019\n+field name RELEASE_18 descriptor Ljava\/lang\/reflect\/ClassFileFormatVersion; flags 4019\n+field name RELEASE_19 descriptor Ljava\/lang\/reflect\/ClassFileFormatVersion; flags 4019\n+field name RELEASE_20 descriptor Ljava\/lang\/reflect\/ClassFileFormatVersion; flags 4019\n+method name values descriptor ()[Ljava\/lang\/reflect\/ClassFileFormatVersion; flags 9\n+method name valueOf descriptor (Ljava\/lang\/String;)Ljava\/lang\/reflect\/ClassFileFormatVersion; flags 9\n+method name latest descriptor ()Ljava\/lang\/reflect\/ClassFileFormatVersion; flags 9\n+method name major descriptor ()I flags 1\n+method name valueOf descriptor (Ljava\/lang\/Runtime$Version;)Ljava\/lang\/reflect\/ClassFileFormatVersion; flags 9\n+method name runtimeVersion descriptor ()Ljava\/lang\/Runtime$Version; flags 1\n+method name fromMajor descriptor (I)Ljava\/lang\/reflect\/ClassFileFormatVersion; flags 9\n+\n+class name java\/lang\/reflect\/Executable\n+header extends java\/lang\/reflect\/AccessibleObject implements java\/lang\/reflect\/Member,java\/lang\/reflect\/GenericDeclaration sealed true flags 421\n+innerclass innerClass java\/lang\/reflect\/AccessFlag$Location outerClass java\/lang\/reflect\/AccessFlag innerClassName Location flags 4019\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+-method name getParameterCount descriptor ()I\n+method name accessFlags descriptor ()Ljava\/util\/Set; flags 1 signature ()Ljava\/util\/Set<Ljava\/lang\/reflect\/AccessFlag;>;\n+method name getParameterCount descriptor ()I flags 401\n+\n+class name java\/lang\/reflect\/Field\n+header extends java\/lang\/reflect\/AccessibleObject implements java\/lang\/reflect\/Member flags 31\n+innerclass innerClass java\/lang\/reflect\/AccessFlag$Location outerClass java\/lang\/reflect\/AccessFlag innerClassName Location flags 4019\n+method name accessFlags descriptor ()Ljava\/util\/Set; flags 1 signature ()Ljava\/util\/Set<Ljava\/lang\/reflect\/AccessFlag;>;\n+\n+class name java\/lang\/reflect\/InaccessibleObjectException\n+header extends java\/lang\/RuntimeException flags 21\n+\n+class name java\/lang\/reflect\/Member\n+method name accessFlags descriptor ()Ljava\/util\/Set; flags 1 signature ()Ljava\/util\/Set<Ljava\/lang\/reflect\/AccessFlag;>;\n+\n+class name java\/lang\/reflect\/Parameter\n+header extends java\/lang\/Object implements java\/lang\/reflect\/AnnotatedElement flags 31\n+innerclass innerClass java\/lang\/reflect\/AccessFlag$Location outerClass java\/lang\/reflect\/AccessFlag innerClassName Location flags 4019\n+method name accessFlags descriptor ()Ljava\/util\/Set; flags 1 signature ()Ljava\/util\/Set<Ljava\/lang\/reflect\/AccessFlag;>;\n+\n+class name java\/math\/BigDecimal\n+header extends java\/lang\/Number implements java\/lang\/Comparable flags 21 signature Ljava\/lang\/Number;Ljava\/lang\/Comparable<Ljava\/math\/BigDecimal;>;\n+innerclass innerClass java\/io\/ObjectInputStream$GetField outerClass java\/io\/ObjectInputStream innerClassName GetField flags 409\n+\n+class name java\/net\/DatagramPacket\n+header extends java\/lang\/Object flags 31\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/net\/DatagramSocket\n+header extends java\/lang\/Object implements java\/io\/Closeable flags 21 classAnnotations @Ljdk\/Profile+Annotation;(value=I1)\n+\n+class name java\/net\/InetAddress\n+header extends java\/lang\/Object implements java\/io\/Serializable sealed true flags 21\n+innerclass innerClass java\/net\/spi\/InetAddressResolver$LookupPolicy outerClass java\/net\/spi\/InetAddressResolver innerClassName LookupPolicy flags 19\n+innerclass innerClass java\/io\/ObjectInputStream$GetField outerClass java\/io\/ObjectInputStream innerClassName GetField flags 409\n+innerclass innerClass java\/io\/ObjectOutputStream$PutField outerClass java\/io\/ObjectOutputStream innerClassName PutField flags 409\n+innerclass innerClass java\/net\/spi\/InetAddressResolverProvider$Configuration outerClass java\/net\/spi\/InetAddressResolverProvider innerClassName Configuration flags 609\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/net\/SocketImpl\n+header extends java\/lang\/Object implements java\/net\/SocketOptions flags 421\n+\n+class name java\/net\/URL\n+-method name <init> descriptor (Ljava\/lang\/String;Ljava\/lang\/String;ILjava\/lang\/String;)V\n+-method name <init> descriptor (Ljava\/lang\/String;Ljava\/lang\/String;Ljava\/lang\/String;)V\n+-method name <init> descriptor (Ljava\/lang\/String;Ljava\/lang\/String;ILjava\/lang\/String;Ljava\/net\/URLStreamHandler;)V\n+-method name <init> descriptor (Ljava\/lang\/String;)V\n+-method name <init> descriptor (Ljava\/net\/URL;Ljava\/lang\/String;)V\n+-method name <init> descriptor (Ljava\/net\/URL;Ljava\/lang\/String;Ljava\/net\/URLStreamHandler;)V\n+method name <init> descriptor (Ljava\/lang\/String;Ljava\/lang\/String;ILjava\/lang\/String;)V thrownTypes java\/net\/MalformedURLException flags 1 deprecated true runtimeAnnotations @Ljava\/lang\/Deprecated;(since=\"20\")\n+method name <init> descriptor (Ljava\/lang\/String;Ljava\/lang\/String;Ljava\/lang\/String;)V thrownTypes java\/net\/MalformedURLException flags 1 deprecated true runtimeAnnotations @Ljava\/lang\/Deprecated;(since=\"20\")\n+method name <init> descriptor (Ljava\/lang\/String;Ljava\/lang\/String;ILjava\/lang\/String;Ljava\/net\/URLStreamHandler;)V thrownTypes java\/net\/MalformedURLException flags 1 deprecated true runtimeAnnotations @Ljava\/lang\/Deprecated;(since=\"20\")\n+method name <init> descriptor (Ljava\/lang\/String;)V thrownTypes java\/net\/MalformedURLException flags 1 deprecated true runtimeAnnotations @Ljava\/lang\/Deprecated;(since=\"20\")\n+method name <init> descriptor (Ljava\/net\/URL;Ljava\/lang\/String;)V thrownTypes java\/net\/MalformedURLException flags 1 deprecated true runtimeAnnotations @Ljava\/lang\/Deprecated;(since=\"20\")\n+method name <init> descriptor (Ljava\/net\/URL;Ljava\/lang\/String;Ljava\/net\/URLStreamHandler;)V thrownTypes java\/net\/MalformedURLException flags 1 deprecated true runtimeAnnotations @Ljava\/lang\/Deprecated;(since=\"20\")\n+method name of descriptor (Ljava\/net\/URI;Ljava\/net\/URLStreamHandler;)Ljava\/net\/URL; thrownTypes java\/net\/MalformedURLException flags 9\n+\n+class name java\/net\/spi\/InetAddressResolverProvider$Configuration\n+header extends java\/lang\/Object nestHost java\/net\/spi\/InetAddressResolverProvider sealed true flags 601\n+innerclass innerClass java\/net\/spi\/InetAddressResolverProvider$Configuration outerClass java\/net\/spi\/InetAddressResolverProvider innerClassName Configuration flags 609\n+\n+class name java\/net\/spi\/URLStreamHandlerProvider\n+header extends java\/lang\/Object implements java\/net\/URLStreamHandlerFactory flags 421\n+\n+class name java\/nio\/Buffer\n+header extends java\/lang\/Object sealed true flags 421\n+\n+class name java\/nio\/ByteBuffer\n+header extends java\/nio\/Buffer implements java\/lang\/Comparable sealed true flags 421 signature Ljava\/nio\/Buffer;Ljava\/lang\/Comparable<Ljava\/nio\/ByteBuffer;>;\n+\n+class name java\/nio\/CharBuffer\n+header extends java\/nio\/Buffer implements java\/lang\/Comparable,java\/lang\/Appendable,java\/lang\/CharSequence,java\/lang\/Readable sealed true flags 421 signature Ljava\/nio\/Buffer;Ljava\/lang\/Comparable<Ljava\/nio\/CharBuffer;>;Ljava\/lang\/Appendable;Ljava\/lang\/CharSequence;Ljava\/lang\/Readable;\n+innerclass innerClass java\/util\/Spliterator$OfInt outerClass java\/util\/Spliterator innerClassName OfInt flags 609\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/nio\/DoubleBuffer\n+header extends java\/nio\/Buffer implements java\/lang\/Comparable sealed true flags 421 signature Ljava\/nio\/Buffer;Ljava\/lang\/Comparable<Ljava\/nio\/DoubleBuffer;>;\n+\n+class name java\/nio\/FloatBuffer\n+header extends java\/nio\/Buffer implements java\/lang\/Comparable sealed true flags 421 signature Ljava\/nio\/Buffer;Ljava\/lang\/Comparable<Ljava\/nio\/FloatBuffer;>;\n+\n+class name java\/nio\/IntBuffer\n+header extends java\/nio\/Buffer implements java\/lang\/Comparable sealed true flags 421 signature Ljava\/nio\/Buffer;Ljava\/lang\/Comparable<Ljava\/nio\/IntBuffer;>;\n+\n+class name java\/nio\/LongBuffer\n+header extends java\/nio\/Buffer implements java\/lang\/Comparable sealed true flags 421 signature Ljava\/nio\/Buffer;Ljava\/lang\/Comparable<Ljava\/nio\/LongBuffer;>;\n+\n+class name java\/nio\/MappedByteBuffer\n+header extends java\/nio\/ByteBuffer sealed true flags 421\n+\n+class name java\/nio\/ShortBuffer\n+header extends java\/nio\/Buffer implements java\/lang\/Comparable sealed true flags 421 signature Ljava\/nio\/Buffer;Ljava\/lang\/Comparable<Ljava\/nio\/ShortBuffer;>;\n+\n+class name java\/nio\/channels\/FileChannel\n+-method name map descriptor (Ljava\/nio\/channels\/FileChannel$MapMode;JJLjava\/lang\/foreign\/MemorySession;)Ljava\/lang\/foreign\/MemorySegment;\n+method name map descriptor (Ljava\/nio\/channels\/FileChannel$MapMode;JJLjava\/lang\/foreign\/SegmentScope;)Ljava\/lang\/foreign\/MemorySegment; thrownTypes java\/io\/IOException flags 1 classAnnotations @Ljdk\/internal\/javac\/PreviewFeature;(feature=eLjdk\/internal\/javac\/PreviewFeature$Feature;FOREIGN;)\n+\n+class name java\/nio\/file\/spi\/FileSystemProvider\n+method name exists descriptor (Ljava\/nio\/file\/Path;[Ljava\/nio\/file\/LinkOption;)Z flags 81\n+method name readAttributesIfExists descriptor (Ljava\/nio\/file\/Path;Ljava\/lang\/Class;[Ljava\/nio\/file\/LinkOption;)Ljava\/nio\/file\/attribute\/BasicFileAttributes; thrownTypes java\/io\/IOException flags 81 signature <A::Ljava\/nio\/file\/attribute\/BasicFileAttributes;>(Ljava\/nio\/file\/Path;Ljava\/lang\/Class<TA;>;[Ljava\/nio\/file\/LinkOption;)TA;\n+\n+class name java\/security\/Certificate\n+header extends java\/lang\/Object flags 601 deprecated true runtimeAnnotations @Ljava\/lang\/Deprecated;(forRemoval=Ztrue,since=\"1.2\")\n+\n+class name java\/security\/Identity\n+header extends java\/lang\/Object implements java\/security\/Principal,java\/io\/Serializable flags 421 deprecated true runtimeAnnotations @Ljava\/lang\/Deprecated;(forRemoval=Ztrue,since=\"1.2\")\n+\n+class name java\/security\/InvalidParameterException\n+method name <init> descriptor (Ljava\/lang\/String;Ljava\/lang\/Throwable;)V flags 1\n+method name <init> descriptor (Ljava\/lang\/Throwable;)V flags 1\n+\n+class name java\/security\/KeyStore\n+header extends java\/lang\/Object nestMembers java\/security\/KeyStore$Builder,java\/security\/KeyStore$TrustedCertificateEntry,java\/security\/KeyStore$SecretKeyEntry,java\/security\/KeyStore$PrivateKeyEntry,java\/security\/KeyStore$Entry,java\/security\/KeyStore$Entry$Attribute,java\/security\/KeyStore$CallbackHandlerProtection,java\/security\/KeyStore$PasswordProtection,java\/security\/KeyStore$ProtectionParameter,java\/security\/KeyStore$LoadStoreParameter flags 21\n+innerclass innerClass java\/security\/KeyStore$LoadStoreParameter outerClass java\/security\/KeyStore innerClassName LoadStoreParameter flags 609\n+innerclass innerClass java\/security\/KeyStore$ProtectionParameter outerClass java\/security\/KeyStore innerClassName ProtectionParameter flags 609\n+innerclass innerClass java\/security\/KeyStore$Entry outerClass java\/security\/KeyStore innerClassName Entry flags 609\n+innerclass innerClass java\/security\/Provider$Service outerClass java\/security\/Provider innerClassName Service flags 9\n+innerclass innerClass java\/security\/KeyStore$Builder outerClass java\/security\/KeyStore innerClassName Builder flags 409\n+innerclass innerClass java\/security\/KeyStore$TrustedCertificateEntry outerClass java\/security\/KeyStore innerClassName TrustedCertificateEntry flags 19\n+innerclass innerClass java\/security\/KeyStore$SecretKeyEntry outerClass java\/security\/KeyStore innerClassName SecretKeyEntry flags 19\n+innerclass innerClass java\/security\/KeyStore$PrivateKeyEntry outerClass java\/security\/KeyStore innerClassName PrivateKeyEntry flags 19\n+innerclass innerClass java\/security\/KeyStore$CallbackHandlerProtection outerClass java\/security\/KeyStore innerClassName CallbackHandlerProtection flags 9\n+innerclass innerClass java\/security\/KeyStore$PasswordProtection outerClass java\/security\/KeyStore innerClassName PasswordProtection flags 9\n+innerclass innerClass java\/security\/KeyStore$Entry$Attribute outerClass java\/security\/KeyStore$Entry innerClassName Attribute flags 609\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/security\/ProtectionDomain\n+header extends java\/lang\/Object flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/security\/Provider\n+header extends java\/util\/Properties nestMembers java\/security\/Provider$Service flags 421\n+innerclass innerClass java\/util\/Map$Entry outerClass java\/util\/Map innerClassName Entry flags 609\n+innerclass innerClass java\/security\/Provider$Service outerClass java\/security\/Provider innerClassName Service flags 9\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/security\/SecureRandom\n+header extends java\/util\/Random flags 21 runtimeAnnotations @Ljdk\/internal\/util\/random\/RandomSupport$RandomGeneratorProperties;(name=\"SecureRandom\",isStochastic=Ztrue)\n+innerclass innerClass java\/security\/Provider$Service outerClass java\/security\/Provider innerClassName Service flags 9\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/security\/SecureRandomParameters\n+header extends java\/lang\/Object flags 601\n+\n+class name java\/security\/Security\n+header extends java\/lang\/Object flags 31\n+innerclass innerClass java\/util\/Map$Entry outerClass java\/util\/Map innerClassName Entry flags 609\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/security\/SignedObject\n+header extends java\/lang\/Object implements java\/io\/Serializable flags 31\n+innerclass innerClass java\/io\/ObjectInputStream$GetField outerClass java\/io\/ObjectInputStream innerClassName GetField flags 409\n+\n+class name java\/security\/cert\/CertPathBuilder\n+header extends java\/lang\/Object flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/security\/cert\/CertPathValidator\n+header extends java\/lang\/Object flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/security\/cert\/CertStore\n+header extends java\/lang\/Object flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+-method name getDefaultType descriptor ()Ljava\/lang\/String;\n+method name getDefaultType descriptor ()Ljava\/lang\/String; flags 9\n+\n+class name java\/security\/cert\/CertificateRevokedException\n+header extends java\/security\/cert\/CertificateException flags 21\n+innerclass innerClass java\/util\/Map$Entry outerClass java\/util\/Map innerClassName Entry flags 609\n+\n+class name java\/security\/cert\/URICertStoreParameters\n+header extends java\/lang\/Object implements java\/security\/cert\/CertStoreParameters flags 31\n+\n+class name java\/security\/interfaces\/DSAKeyPairGenerator\n+-method name initialize descriptor (Ljava\/security\/interfaces\/DSAParams;Ljava\/security\/SecureRandom;)V\n+-method name initialize descriptor (IZLjava\/security\/SecureRandom;)V\n+method name initialize descriptor (Ljava\/security\/interfaces\/DSAParams;Ljava\/security\/SecureRandom;)V flags 401\n+method name initialize descriptor (IZLjava\/security\/SecureRandom;)V flags 401\n+\n+class name java\/security\/interfaces\/RSAKey\n+-method name getParams descriptor ()Ljava\/security\/spec\/AlgorithmParameterSpec;\n+method name getParams descriptor ()Ljava\/security\/spec\/AlgorithmParameterSpec; flags 1\n+\n+class name java\/security\/spec\/EncodedKeySpec\n+header extends java\/lang\/Object implements java\/security\/spec\/KeySpec flags 421\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/security\/spec\/MGF1ParameterSpec\n+-field name SHA512_224 descriptor Ljava\/security\/spec\/MGF1ParameterSpec;\n+-field name SHA512_256 descriptor Ljava\/security\/spec\/MGF1ParameterSpec;\n+field name SHA512_224 descriptor Ljava\/security\/spec\/MGF1ParameterSpec; flags 19\n+field name SHA512_256 descriptor Ljava\/security\/spec\/MGF1ParameterSpec; flags 19\n+\n+class name java\/security\/spec\/PSSParameterSpec\n+-field name TRAILER_FIELD_BC descriptor I\n+-method name toString descriptor ()Ljava\/lang\/String;\n+field name TRAILER_FIELD_BC descriptor I constantValue 1 flags 19\n+method name toString descriptor ()Ljava\/lang\/String; flags 1\n+\n+class name java\/security\/spec\/RSAKeyGenParameterSpec\n+-method name <init> descriptor (ILjava\/math\/BigInteger;Ljava\/security\/spec\/AlgorithmParameterSpec;)V\n+-method name getKeyParams descriptor ()Ljava\/security\/spec\/AlgorithmParameterSpec;\n+method name <init> descriptor (ILjava\/math\/BigInteger;Ljava\/security\/spec\/AlgorithmParameterSpec;)V flags 1\n+method name getKeyParams descriptor ()Ljava\/security\/spec\/AlgorithmParameterSpec; flags 1\n+\n+class name java\/security\/spec\/RSAMultiPrimePrivateCrtKeySpec\n+-method name <init> descriptor (Ljava\/math\/BigInteger;Ljava\/math\/BigInteger;Ljava\/math\/BigInteger;Ljava\/math\/BigInteger;Ljava\/math\/BigInteger;Ljava\/math\/BigInteger;Ljava\/math\/BigInteger;Ljava\/math\/BigInteger;[Ljava\/security\/spec\/RSAOtherPrimeInfo;Ljava\/security\/spec\/AlgorithmParameterSpec;)V\n+method name <init> descriptor (Ljava\/math\/BigInteger;Ljava\/math\/BigInteger;Ljava\/math\/BigInteger;Ljava\/math\/BigInteger;Ljava\/math\/BigInteger;Ljava\/math\/BigInteger;Ljava\/math\/BigInteger;Ljava\/math\/BigInteger;[Ljava\/security\/spec\/RSAOtherPrimeInfo;Ljava\/security\/spec\/AlgorithmParameterSpec;)V flags 1\n+\n+class name java\/security\/spec\/RSAPrivateCrtKeySpec\n+-method name <init> descriptor (Ljava\/math\/BigInteger;Ljava\/math\/BigInteger;Ljava\/math\/BigInteger;Ljava\/math\/BigInteger;Ljava\/math\/BigInteger;Ljava\/math\/BigInteger;Ljava\/math\/BigInteger;Ljava\/math\/BigInteger;Ljava\/security\/spec\/AlgorithmParameterSpec;)V\n+method name <init> descriptor (Ljava\/math\/BigInteger;Ljava\/math\/BigInteger;Ljava\/math\/BigInteger;Ljava\/math\/BigInteger;Ljava\/math\/BigInteger;Ljava\/math\/BigInteger;Ljava\/math\/BigInteger;Ljava\/math\/BigInteger;Ljava\/security\/spec\/AlgorithmParameterSpec;)V flags 1\n+\n+class name java\/security\/spec\/RSAPrivateKeySpec\n+-method name <init> descriptor (Ljava\/math\/BigInteger;Ljava\/math\/BigInteger;Ljava\/security\/spec\/AlgorithmParameterSpec;)V\n+-method name getParams descriptor ()Ljava\/security\/spec\/AlgorithmParameterSpec;\n+method name <init> descriptor (Ljava\/math\/BigInteger;Ljava\/math\/BigInteger;Ljava\/security\/spec\/AlgorithmParameterSpec;)V flags 1\n+method name getParams descriptor ()Ljava\/security\/spec\/AlgorithmParameterSpec; flags 1\n+\n+class name java\/security\/spec\/RSAPublicKeySpec\n+-method name <init> descriptor (Ljava\/math\/BigInteger;Ljava\/math\/BigInteger;Ljava\/security\/spec\/AlgorithmParameterSpec;)V\n+-method name getParams descriptor ()Ljava\/security\/spec\/AlgorithmParameterSpec;\n+method name <init> descriptor (Ljava\/math\/BigInteger;Ljava\/math\/BigInteger;Ljava\/security\/spec\/AlgorithmParameterSpec;)V flags 1\n+method name getParams descriptor ()Ljava\/security\/spec\/AlgorithmParameterSpec; flags 1\n+\n+class name java\/text\/DateFormatSymbols\n+header extends java\/lang\/Object implements java\/io\/Serializable,java\/lang\/Cloneable flags 21\n+innerclass innerClass java\/util\/Locale$Category outerClass java\/util\/Locale innerClassName Category flags 4019\n+\n+class name java\/text\/RuleBasedCollator\n+header extends java\/text\/Collator flags 21\n+innerclass innerClass java\/text\/Normalizer$Form outerClass java\/text\/Normalizer innerClassName Form flags 4019\n+\n+class name java\/time\/ZoneId\n+header extends java\/lang\/Object implements java\/io\/Serializable sealed true flags 421 runtimeAnnotations @Ljdk\/internal\/ValueBased;\n+innerclass innerClass java\/util\/Map$Entry outerClass java\/util\/Map innerClassName Entry flags 609\n+\n+class name java\/time\/ZoneOffset\n+header extends java\/time\/ZoneId implements java\/time\/temporal\/TemporalAccessor,java\/time\/temporal\/TemporalAdjuster,java\/lang\/Comparable,java\/io\/Serializable flags 31 signature Ljava\/time\/ZoneId;Ljava\/time\/temporal\/TemporalAccessor;Ljava\/time\/temporal\/TemporalAdjuster;Ljava\/lang\/Comparable<Ljava\/time\/ZoneOffset;>;Ljava\/io\/Serializable; runtimeAnnotations @Ljdk\/internal\/ValueBased;\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/time\/chrono\/ChronoLocalDate\n+header extends java\/lang\/Object implements java\/time\/temporal\/Temporal,java\/time\/temporal\/TemporalAdjuster,java\/lang\/Comparable flags 601 signature Ljava\/lang\/Object;Ljava\/time\/temporal\/Temporal;Ljava\/time\/temporal\/TemporalAdjuster;Ljava\/lang\/Comparable<Ljava\/time\/chrono\/ChronoLocalDate;>;\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/time\/chrono\/ChronoLocalDateTime\n+header extends java\/lang\/Object implements java\/time\/temporal\/Temporal,java\/time\/temporal\/TemporalAdjuster,java\/lang\/Comparable flags 601 signature <D::Ljava\/time\/chrono\/ChronoLocalDate;>Ljava\/lang\/Object;Ljava\/time\/temporal\/Temporal;Ljava\/time\/temporal\/TemporalAdjuster;Ljava\/lang\/Comparable<Ljava\/time\/chrono\/ChronoLocalDateTime<*>;>;\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/time\/format\/DecimalStyle\n+header extends java\/lang\/Object flags 31\n+innerclass innerClass java\/util\/Locale$Category outerClass java\/util\/Locale innerClassName Category flags 4019\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/time\/temporal\/TemporalAdjusters\n+header extends java\/lang\/Object flags 31\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/util\/Comparator\n+header extends java\/lang\/Object flags 601 signature <T:Ljava\/lang\/Object;>Ljava\/lang\/Object; runtimeAnnotations @Ljava\/lang\/FunctionalInterface;\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/util\/DoubleSummaryStatistics\n+header extends java\/lang\/Object implements java\/util\/function\/DoubleConsumer flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/util\/EnumSet\n+header extends java\/util\/AbstractSet implements java\/lang\/Cloneable,java\/io\/Serializable sealed true flags 421 signature <E:Ljava\/lang\/Enum<TE;>;>Ljava\/util\/AbstractSet<TE;>;Ljava\/lang\/Cloneable;Ljava\/io\/Serializable;\n+\n+class name java\/util\/GregorianCalendar\n+header extends java\/util\/Calendar flags 21\n+innerclass innerClass java\/util\/Locale$Category outerClass java\/util\/Locale innerClassName Category flags 4019\n+\n+class name java\/util\/IdentityHashMap\n+method name remove descriptor (Ljava\/lang\/Object;Ljava\/lang\/Object;)Z flags 1\n+method name replace descriptor (Ljava\/lang\/Object;Ljava\/lang\/Object;Ljava\/lang\/Object;)Z flags 1 signature (TK;TV;TV;)Z\n+\n+class name java\/util\/IllegalFormatException\n+header extends java\/lang\/IllegalArgumentException sealed true flags 21\n+\n+class name java\/util\/Locale$IsoCountryCode\n+header extends java\/lang\/Enum nestHost java\/util\/Locale sealed true flags 4421 signature Ljava\/lang\/Enum<Ljava\/util\/Locale$IsoCountryCode;>;\n+innerclass innerClass java\/util\/Locale$IsoCountryCode outerClass java\/util\/Locale innerClassName IsoCountryCode flags 4409\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/util\/Observable\n+header extends java\/lang\/Object flags 21 deprecated true runtimeAnnotations @Ljava\/lang\/Deprecated;(since=\"9\")\n+\n+class name java\/util\/Observer\n+header extends java\/lang\/Object flags 601 deprecated true runtimeAnnotations @Ljava\/lang\/Deprecated;(since=\"9\")\n+\n+class name java\/util\/TimeZone\n+header extends java\/lang\/Object implements java\/io\/Serializable,java\/lang\/Cloneable flags 421\n+innerclass innerClass java\/util\/Locale$Category outerClass java\/util\/Locale innerClassName Category flags 4019\n+\n+class name java\/util\/TreeSet\n+header extends java\/util\/AbstractSet implements java\/util\/NavigableSet,java\/lang\/Cloneable,java\/io\/Serializable flags 21 signature <E:Ljava\/lang\/Object;>Ljava\/util\/AbstractSet<TE;>;Ljava\/util\/NavigableSet<TE;>;Ljava\/lang\/Cloneable;Ljava\/io\/Serializable;\n+innerclass innerClass java\/util\/Map$Entry outerClass java\/util\/Map innerClassName Entry flags 609\n+\n+class name java\/util\/concurrent\/ConcurrentHashMap$CollectionView\n+header extends java\/lang\/Object implements java\/util\/Collection,java\/io\/Serializable nestHost java\/util\/concurrent\/ConcurrentHashMap sealed true flags 420 signature <K:Ljava\/lang\/Object;V:Ljava\/lang\/Object;E:Ljava\/lang\/Object;>Ljava\/lang\/Object;Ljava\/util\/Collection<TE;>;Ljava\/io\/Serializable;\n+innerclass innerClass java\/util\/concurrent\/ConcurrentHashMap$CollectionView outerClass java\/util\/concurrent\/ConcurrentHashMap innerClassName CollectionView flags 408\n+innerclass innerClass java\/util\/concurrent\/ConcurrentHashMap$KeySetView outerClass java\/util\/concurrent\/ConcurrentHashMap innerClassName KeySetView flags 19\n+\n+class name java\/util\/concurrent\/ConcurrentMap\n+header extends java\/lang\/Object implements java\/util\/Map flags 601 signature <K:Ljava\/lang\/Object;V:Ljava\/lang\/Object;>Ljava\/lang\/Object;Ljava\/util\/Map<TK;TV;>;\n+innerclass innerClass java\/util\/Map$Entry outerClass java\/util\/Map innerClassName Entry flags 609\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/util\/concurrent\/ConcurrentSkipListSet\n+header extends java\/util\/AbstractSet implements java\/util\/NavigableSet,java\/lang\/Cloneable,java\/io\/Serializable flags 21 signature <E:Ljava\/lang\/Object;>Ljava\/util\/AbstractSet<TE;>;Ljava\/util\/NavigableSet<TE;>;Ljava\/lang\/Cloneable;Ljava\/io\/Serializable;\n+innerclass innerClass java\/util\/Map$Entry outerClass java\/util\/Map innerClassName Entry flags 609\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/util\/concurrent\/CountedCompleter\n+header extends java\/util\/concurrent\/ForkJoinTask flags 421 signature <T:Ljava\/lang\/Object;>Ljava\/util\/concurrent\/ForkJoinTask<TT;>; classAnnotations @Ljdk\/Profile+Annotation;(value=I1)\n+\n+class name java\/util\/concurrent\/ForkJoinPool\n+method name externalSubmit descriptor (Ljava\/util\/concurrent\/ForkJoinTask;)Ljava\/util\/concurrent\/ForkJoinTask; flags 1 signature <T:Ljava\/lang\/Object;>(Ljava\/util\/concurrent\/ForkJoinTask<TT;>;)Ljava\/util\/concurrent\/ForkJoinTask<TT;>;\n+\n+class name java\/util\/concurrent\/ForkJoinWorkerThread\n+method name getQueuedTaskCount descriptor ()I flags 1\n+\n+class name java\/util\/concurrent\/atomic\/AtomicBoolean\n+header extends java\/lang\/Object implements java\/io\/Serializable flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/util\/concurrent\/atomic\/AtomicReference\n+header extends java\/lang\/Object implements java\/io\/Serializable flags 21 signature <V:Ljava\/lang\/Object;>Ljava\/lang\/Object;Ljava\/io\/Serializable;\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/util\/concurrent\/atomic\/AtomicReferenceArray\n+header extends java\/lang\/Object implements java\/io\/Serializable flags 21 signature <E:Ljava\/lang\/Object;>Ljava\/lang\/Object;Ljava\/io\/Serializable;\n+innerclass innerClass java\/io\/ObjectInputStream$GetField outerClass java\/io\/ObjectInputStream innerClassName GetField flags 409\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/util\/concurrent\/locks\/StampedLock\n+header extends java\/lang\/Object implements java\/io\/Serializable flags 21 classAnnotations @Ljdk\/Profile+Annotation;(value=I1)\n+-method name tryWriteLock descriptor ()J\n+-method name writeLockInterruptibly descriptor ()J\n+-method name tryReadLock descriptor ()J\n+-method name tryReadLock descriptor (JLjava\/util\/concurrent\/TimeUnit;)J\n+-method name readLockInterruptibly descriptor ()J\n+-method name unlock descriptor (J)V\n+method name tryWriteLock descriptor ()J flags 1\n+method name writeLockInterruptibly descriptor ()J thrownTypes java\/lang\/InterruptedException flags 1\n+method name tryReadLock descriptor ()J flags 1\n+method name tryReadLock descriptor (JLjava\/util\/concurrent\/TimeUnit;)J thrownTypes java\/lang\/InterruptedException flags 1\n+method name readLockInterruptibly descriptor ()J thrownTypes java\/lang\/InterruptedException flags 1\n+method name unlock descriptor (J)V flags 1\n+\n+class name java\/util\/function\/BiConsumer\n+header extends java\/lang\/Object flags 601 signature <T:Ljava\/lang\/Object;U:Ljava\/lang\/Object;>Ljava\/lang\/Object; runtimeAnnotations @Ljava\/lang\/FunctionalInterface;\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/util\/function\/BiFunction\n+header extends java\/lang\/Object flags 601 signature <T:Ljava\/lang\/Object;U:Ljava\/lang\/Object;R:Ljava\/lang\/Object;>Ljava\/lang\/Object; runtimeAnnotations @Ljava\/lang\/FunctionalInterface;\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/util\/function\/BiPredicate\n+header extends java\/lang\/Object flags 601 signature <T:Ljava\/lang\/Object;U:Ljava\/lang\/Object;>Ljava\/lang\/Object; runtimeAnnotations @Ljava\/lang\/FunctionalInterface;\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/util\/function\/BinaryOperator\n+header extends java\/lang\/Object implements java\/util\/function\/BiFunction flags 601 signature <T:Ljava\/lang\/Object;>Ljava\/lang\/Object;Ljava\/util\/function\/BiFunction<TT;TT;TT;>; runtimeAnnotations @Ljava\/lang\/FunctionalInterface;\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/util\/function\/Consumer\n+header extends java\/lang\/Object flags 601 signature <T:Ljava\/lang\/Object;>Ljava\/lang\/Object; runtimeAnnotations @Ljava\/lang\/FunctionalInterface;\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/util\/function\/DoubleConsumer\n+header extends java\/lang\/Object flags 601 runtimeAnnotations @Ljava\/lang\/FunctionalInterface;\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/util\/function\/DoublePredicate\n+header extends java\/lang\/Object flags 601 runtimeAnnotations @Ljava\/lang\/FunctionalInterface;\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/util\/function\/DoubleUnaryOperator\n+header extends java\/lang\/Object flags 601 runtimeAnnotations @Ljava\/lang\/FunctionalInterface;\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/util\/function\/Function\n+header extends java\/lang\/Object flags 601 signature <T:Ljava\/lang\/Object;R:Ljava\/lang\/Object;>Ljava\/lang\/Object; runtimeAnnotations @Ljava\/lang\/FunctionalInterface;\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/util\/function\/IntConsumer\n+header extends java\/lang\/Object flags 601 runtimeAnnotations @Ljava\/lang\/FunctionalInterface;\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/util\/function\/IntPredicate\n+header extends java\/lang\/Object flags 601 runtimeAnnotations @Ljava\/lang\/FunctionalInterface;\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/util\/function\/IntUnaryOperator\n+header extends java\/lang\/Object flags 601 runtimeAnnotations @Ljava\/lang\/FunctionalInterface;\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/util\/function\/LongConsumer\n+header extends java\/lang\/Object flags 601 runtimeAnnotations @Ljava\/lang\/FunctionalInterface;\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/util\/function\/LongPredicate\n+header extends java\/lang\/Object flags 601 runtimeAnnotations @Ljava\/lang\/FunctionalInterface;\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/util\/function\/LongUnaryOperator\n+header extends java\/lang\/Object flags 601 runtimeAnnotations @Ljava\/lang\/FunctionalInterface;\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/util\/function\/Predicate\n+header extends java\/lang\/Object flags 601 signature <T:Ljava\/lang\/Object;>Ljava\/lang\/Object; runtimeAnnotations @Ljava\/lang\/FunctionalInterface;\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/util\/function\/UnaryOperator\n+header extends java\/lang\/Object implements java\/util\/function\/Function flags 601 signature <T:Ljava\/lang\/Object;>Ljava\/lang\/Object;Ljava\/util\/function\/Function<TT;TT;>; runtimeAnnotations @Ljava\/lang\/FunctionalInterface;\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/util\/regex\/MatchResult\n+method name start descriptor (Ljava\/lang\/String;)I flags 1\n+method name end descriptor (Ljava\/lang\/String;)I flags 1\n+method name group descriptor (Ljava\/lang\/String;)Ljava\/lang\/String; flags 1\n+method name namedGroups descriptor ()Ljava\/util\/Map; flags 1 signature ()Ljava\/util\/Map<Ljava\/lang\/String;Ljava\/lang\/Integer;>;\n+method name hasMatch descriptor ()Z flags 1\n+\n+class name java\/util\/regex\/Matcher\n+method name namedGroups descriptor ()Ljava\/util\/Map; flags 1 signature ()Ljava\/util\/Map<Ljava\/lang\/String;Ljava\/lang\/Integer;>;\n+method name hasMatch descriptor ()Z flags 1\n+\n+class name java\/util\/regex\/Pattern\n+method name namedGroups descriptor ()Ljava\/util\/Map; flags 1 signature ()Ljava\/util\/Map<Ljava\/lang\/String;Ljava\/lang\/Integer;>;\n+\n+class name java\/util\/spi\/AbstractResourceBundleProvider\n+header extends java\/lang\/Object implements java\/util\/spi\/ResourceBundleProvider flags 421\n+innerclass innerClass java\/util\/ResourceBundle$Control outerClass java\/util\/ResourceBundle innerClassName Control flags 9\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/util\/spi\/CurrencyNameProvider\n+header extends java\/util\/spi\/LocaleServiceProvider flags 421\n+innerclass innerClass java\/util\/ResourceBundle$Control outerClass java\/util\/ResourceBundle innerClassName Control flags 9\n+\n+class name java\/util\/spi\/ResourceBundleProvider\n+header extends java\/lang\/Object flags 601\n+\n+class name java\/util\/spi\/ToolProvider\n+header extends java\/lang\/Object flags 601\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/util\/zip\/CRC32C\n+header extends java\/lang\/Object implements java\/util\/zip\/Checksum flags 31\n+\n+class name java\/util\/zip\/ZipInputStream\n+method name read descriptor ()I thrownTypes java\/io\/IOException flags 1\n+method name readAllBytes descriptor ()[B thrownTypes java\/io\/IOException flags 1\n+method name readNBytes descriptor (I)[B thrownTypes java\/io\/IOException flags 1\n+method name readNBytes descriptor ([BII)I thrownTypes java\/io\/IOException flags 1\n+method name skipNBytes descriptor (J)V thrownTypes java\/io\/IOException flags 1\n+method name transferTo descriptor (Ljava\/io\/OutputStream;)J thrownTypes java\/io\/IOException flags 1\n+\n+class name javax\/crypto\/AEADBadTagException\n+header extends javax\/crypto\/BadPaddingException flags 21\n+\n+class name javax\/crypto\/BadPaddingException\n+header extends java\/security\/GeneralSecurityException flags 21\n+\n+class name javax\/crypto\/CipherInputStream\n+header extends java\/io\/FilterInputStream flags 21\n+\n+class name javax\/crypto\/CipherOutputStream\n+header extends java\/io\/FilterOutputStream flags 21\n+\n+class name javax\/crypto\/CipherSpi\n+header extends java\/lang\/Object flags 421\n+\n+class name javax\/crypto\/EncryptedPrivateKeyInfo\n+header extends java\/lang\/Object flags 21\n+\n+class name javax\/crypto\/ExemptionMechanism\n+header extends java\/lang\/Object flags 21\n+\n+class name javax\/crypto\/ExemptionMechanismException\n+header extends java\/security\/GeneralSecurityException flags 21\n+\n+class name javax\/crypto\/ExemptionMechanismSpi\n+header extends java\/lang\/Object flags 421\n+\n+class name javax\/crypto\/IllegalBlockSizeException\n+header extends java\/security\/GeneralSecurityException flags 21\n+\n+class name javax\/crypto\/KeyAgreement\n+header extends java\/lang\/Object flags 21\n+innerclass innerClass java\/security\/Provider$Service outerClass java\/security\/Provider innerClassName Service flags 9\n+\n+class name javax\/crypto\/KeyAgreementSpi\n+header extends java\/lang\/Object flags 421\n+\n+class name javax\/crypto\/KeyGenerator\n+header extends java\/lang\/Object flags 21\n+innerclass innerClass java\/security\/Provider$Service outerClass java\/security\/Provider innerClassName Service flags 9\n+\n+class name javax\/crypto\/KeyGeneratorSpi\n+header extends java\/lang\/Object flags 421\n+\n+class name javax\/crypto\/Mac\n+header extends java\/lang\/Object implements java\/lang\/Cloneable flags 21\n+innerclass innerClass java\/security\/Provider$Service outerClass java\/security\/Provider innerClassName Service flags 9\n+\n+class name javax\/crypto\/MacSpi\n+header extends java\/lang\/Object flags 421\n+\n+class name javax\/crypto\/NoSuchPaddingException\n+header extends java\/security\/GeneralSecurityException flags 21\n+\n+class name javax\/crypto\/NullCipher\n+header extends javax\/crypto\/Cipher flags 21\n+\n+class name javax\/crypto\/SealedObject\n+header extends java\/lang\/Object implements java\/io\/Serializable flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/crypto\/SecretKey\n+header extends java\/lang\/Object implements java\/security\/Key,javax\/security\/auth\/Destroyable flags 601\n+\n+class name javax\/crypto\/SecretKeyFactory\n+header extends java\/lang\/Object flags 21\n+innerclass innerClass java\/security\/Provider$Service outerClass java\/security\/Provider innerClassName Service flags 9\n+\n+class name javax\/crypto\/SecretKeyFactorySpi\n+header extends java\/lang\/Object flags 421\n+\n+class name javax\/crypto\/ShortBufferException\n+header extends java\/security\/GeneralSecurityException flags 21\n+\n+class name javax\/crypto\/interfaces\/DHKey\n+header extends java\/lang\/Object flags 601\n+\n+class name javax\/crypto\/interfaces\/DHPrivateKey\n+header extends java\/lang\/Object implements javax\/crypto\/interfaces\/DHKey,java\/security\/PrivateKey flags 601\n+\n+class name javax\/crypto\/interfaces\/DHPublicKey\n+header extends java\/lang\/Object implements javax\/crypto\/interfaces\/DHKey,java\/security\/PublicKey flags 601\n+\n+class name javax\/crypto\/interfaces\/PBEKey\n+header extends java\/lang\/Object implements javax\/crypto\/SecretKey flags 601\n+\n+class name javax\/crypto\/spec\/DESKeySpec\n+header extends java\/lang\/Object implements java\/security\/spec\/KeySpec flags 21\n+\n+class name javax\/crypto\/spec\/DESedeKeySpec\n+header extends java\/lang\/Object implements java\/security\/spec\/KeySpec flags 21\n+\n+class name javax\/crypto\/spec\/DHGenParameterSpec\n+header extends java\/lang\/Object implements java\/security\/spec\/AlgorithmParameterSpec flags 21\n+\n+class name javax\/crypto\/spec\/DHParameterSpec\n+header extends java\/lang\/Object implements java\/security\/spec\/AlgorithmParameterSpec flags 21\n+\n+class name javax\/crypto\/spec\/DHPrivateKeySpec\n+header extends java\/lang\/Object implements java\/security\/spec\/KeySpec flags 21\n+\n+class name javax\/crypto\/spec\/DHPublicKeySpec\n+header extends java\/lang\/Object implements java\/security\/spec\/KeySpec flags 21\n+\n+class name javax\/crypto\/spec\/GCMParameterSpec\n+header extends java\/lang\/Object implements java\/security\/spec\/AlgorithmParameterSpec flags 21\n+\n+class name javax\/crypto\/spec\/IvParameterSpec\n+header extends java\/lang\/Object implements java\/security\/spec\/AlgorithmParameterSpec flags 21\n+\n+class name javax\/crypto\/spec\/OAEPParameterSpec\n+header extends java\/lang\/Object implements java\/security\/spec\/AlgorithmParameterSpec flags 21\n+innerclass innerClass javax\/crypto\/spec\/PSource$PSpecified outerClass javax\/crypto\/spec\/PSource innerClassName PSpecified flags 19\n+\n+class name javax\/crypto\/spec\/PBEKeySpec\n+header extends java\/lang\/Object implements java\/security\/spec\/KeySpec flags 21\n+-method name clearPassword descriptor ()V\n+-method name getPassword descriptor ()[C\n+method name clearPassword descriptor ()V flags 31\n+method name getPassword descriptor ()[C flags 31\n+\n+class name javax\/crypto\/spec\/PBEParameterSpec\n+header extends java\/lang\/Object implements java\/security\/spec\/AlgorithmParameterSpec flags 21\n+\n+class name javax\/crypto\/spec\/RC2ParameterSpec\n+header extends java\/lang\/Object implements java\/security\/spec\/AlgorithmParameterSpec flags 21\n+\n+class name javax\/crypto\/spec\/RC5ParameterSpec\n+header extends java\/lang\/Object implements java\/security\/spec\/AlgorithmParameterSpec flags 21\n+\n+class name javax\/net\/ssl\/SSLParameters\n+method name getNamedGroups descriptor ()[Ljava\/lang\/String; flags 1\n+method name setNamedGroups descriptor ([Ljava\/lang\/String;)V flags 1\n+\n+class name jdk\/internal\/event\/Event\n+header extends java\/lang\/Object flags 421\n+-method name <init> descriptor ()V\n+-method name begin descriptor ()V\n+-method name end descriptor ()V\n+-method name commit descriptor ()V\n+-method name isEnabled descriptor ()Z\n+-method name shouldCommit descriptor ()Z\n+-method name set descriptor (ILjava\/lang\/Object;)V\n+method name <init> descriptor ()V flags 4\n+method name begin descriptor ()V flags 1\n+method name end descriptor ()V flags 1\n+method name commit descriptor ()V flags 1\n+method name isEnabled descriptor ()Z flags 1\n+method name shouldCommit descriptor ()Z flags 1\n+method name set descriptor (ILjava\/lang\/Object;)V flags 1\n+\n+class name jdk\/internal\/vm\/vector\/VectorSupport\n+-method name indexVector descriptor (Ljava\/lang\/Class;Ljava\/lang\/Class;ILjdk\/internal\/vm\/vector\/VectorSupport$Vector;ILjdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies;Ljdk\/internal\/vm\/vector\/VectorSupport$IndexOperation;)Ljdk\/internal\/vm\/vector\/VectorSupport$Vector;\n+method name indexVector descriptor (Ljava\/lang\/Class;Ljava\/lang\/Class;ILjdk\/internal\/vm\/vector\/VectorSupport$Vector;ILjdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies;Ljdk\/internal\/vm\/vector\/VectorSupport$IndexOperation;)Ljdk\/internal\/vm\/vector\/VectorSupport$Vector; flags 9 signature <V:Ljdk\/internal\/vm\/vector\/VectorSupport$Vector<TE;>;E:Ljava\/lang\/Object;S:Ljdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies<TE;>;>(Ljava\/lang\/Class<+TV;>;Ljava\/lang\/Class<TE;>;ITV;ITS;Ljdk\/internal\/vm\/vector\/VectorSupport$IndexOperation<TV;TS;>;)TV; runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/IntrinsicCandidate;\n+\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/java.base-K.sym.txt","additions":1402,"deletions":0,"binary":false,"changes":1402,"status":"added"},{"patch":"@@ -0,0 +1,116 @@\n+#\n+# Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+class name javax\/annotation\/processing\/AbstractProcessor\n+header extends java\/lang\/Object implements javax\/annotation\/processing\/Processor flags 421\n+innerclass innerClass javax\/tools\/Diagnostic$Kind outerClass javax\/tools\/Diagnostic innerClassName Kind flags 4019\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/annotation\/processing\/Generated\n+header extends java\/lang\/Object implements java\/lang\/annotation\/Annotation flags 2601 runtimeAnnotations @Ljava\/lang\/annotation\/Documented;@Ljava\/lang\/annotation\/Retention;(value=eLjava\/lang\/annotation\/RetentionPolicy;SOURCE;)@Ljava\/lang\/annotation\/Target;(value={eLjava\/lang\/annotation\/ElementType;PACKAGE;eLjava\/lang\/annotation\/ElementType;TYPE;eLjava\/lang\/annotation\/ElementType;METHOD;eLjava\/lang\/annotation\/ElementType;CONSTRUCTOR;eLjava\/lang\/annotation\/ElementType;FIELD;eLjava\/lang\/annotation\/ElementType;LOCAL_VARIABLE;eLjava\/lang\/annotation\/ElementType;PARAMETER;})\n+\n+class name javax\/lang\/model\/SourceVersion\n+field name RELEASE_20 descriptor Ljavax\/lang\/model\/SourceVersion; flags 4019\n+\n+class name javax\/lang\/model\/element\/Modifier\n+header extends java\/lang\/Enum sealed true flags 4021 signature Ljava\/lang\/Enum<Ljavax\/lang\/model\/element\/Modifier;>;\n+\n+class name javax\/lang\/model\/element\/UnknownAnnotationValueException\n+header extends javax\/lang\/model\/UnknownEntityException flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/lang\/model\/element\/UnknownDirectiveException\n+header extends javax\/lang\/model\/UnknownEntityException flags 21\n+innerclass innerClass javax\/lang\/model\/element\/ModuleElement$Directive outerClass javax\/lang\/model\/element\/ModuleElement innerClassName Directive flags 609\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/lang\/model\/element\/UnknownElementException\n+header extends javax\/lang\/model\/UnknownEntityException flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/lang\/model\/type\/MirroredTypeException\n+header extends javax\/lang\/model\/type\/MirroredTypesException flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/lang\/model\/type\/MirroredTypesException\n+header extends java\/lang\/RuntimeException flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/lang\/model\/type\/UnknownTypeException\n+header extends javax\/lang\/model\/UnknownEntityException flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/lang\/model\/util\/AbstractAnnotationValueVisitor14\n+header extends javax\/lang\/model\/util\/AbstractAnnotationValueVisitor9 flags 421 signature <R:Ljava\/lang\/Object;P:Ljava\/lang\/Object;>Ljavax\/lang\/model\/util\/AbstractAnnotationValueVisitor9<TR;TP;>; runtimeAnnotations @Ljavax\/annotation\/processing\/SupportedSourceVersion;(value=eLjavax\/lang\/model\/SourceVersion;RELEASE_20;)\n+\n+class name javax\/lang\/model\/util\/AbstractElementVisitor14\n+header extends javax\/lang\/model\/util\/AbstractElementVisitor9 flags 421 signature <R:Ljava\/lang\/Object;P:Ljava\/lang\/Object;>Ljavax\/lang\/model\/util\/AbstractElementVisitor9<TR;TP;>; runtimeAnnotations @Ljavax\/annotation\/processing\/SupportedSourceVersion;(value=eLjavax\/lang\/model\/SourceVersion;RELEASE_20;)\n+\n+class name javax\/lang\/model\/util\/AbstractTypeVisitor14\n+header extends javax\/lang\/model\/util\/AbstractTypeVisitor9 flags 421 signature <R:Ljava\/lang\/Object;P:Ljava\/lang\/Object;>Ljavax\/lang\/model\/util\/AbstractTypeVisitor9<TR;TP;>; runtimeAnnotations @Ljavax\/annotation\/processing\/SupportedSourceVersion;(value=eLjavax\/lang\/model\/SourceVersion;RELEASE_20;)\n+\n+class name javax\/lang\/model\/util\/AbstractTypeVisitor6\n+header extends java\/lang\/Object implements javax\/lang\/model\/type\/TypeVisitor flags 421 signature <R:Ljava\/lang\/Object;P:Ljava\/lang\/Object;>Ljava\/lang\/Object;Ljavax\/lang\/model\/type\/TypeVisitor<TR;TP;>; runtimeAnnotations @Ljavax\/annotation\/processing\/SupportedSourceVersion;(value=eLjavax\/lang\/model\/SourceVersion;RELEASE_6;)\n+\n+class name javax\/lang\/model\/util\/AbstractTypeVisitor7\n+header extends javax\/lang\/model\/util\/AbstractTypeVisitor6 flags 421 signature <R:Ljava\/lang\/Object;P:Ljava\/lang\/Object;>Ljavax\/lang\/model\/util\/AbstractTypeVisitor6<TR;TP;>; runtimeAnnotations @Ljavax\/annotation\/processing\/SupportedSourceVersion;(value=eLjavax\/lang\/model\/SourceVersion;RELEASE_7;)\n+\n+class name javax\/lang\/model\/util\/AbstractTypeVisitor8\n+header extends javax\/lang\/model\/util\/AbstractTypeVisitor7 flags 421 signature <R:Ljava\/lang\/Object;P:Ljava\/lang\/Object;>Ljavax\/lang\/model\/util\/AbstractTypeVisitor7<TR;TP;>; runtimeAnnotations @Ljavax\/annotation\/processing\/SupportedSourceVersion;(value=eLjavax\/lang\/model\/SourceVersion;RELEASE_8;)\n+\n+class name javax\/lang\/model\/util\/ElementKindVisitor14\n+header extends javax\/lang\/model\/util\/ElementKindVisitor9 flags 21 signature <R:Ljava\/lang\/Object;P:Ljava\/lang\/Object;>Ljavax\/lang\/model\/util\/ElementKindVisitor9<TR;TP;>; runtimeAnnotations @Ljavax\/annotation\/processing\/SupportedSourceVersion;(value=eLjavax\/lang\/model\/SourceVersion;RELEASE_20;)\n+\n+class name javax\/lang\/model\/util\/ElementScanner14\n+header extends javax\/lang\/model\/util\/ElementScanner9 flags 21 signature <R:Ljava\/lang\/Object;P:Ljava\/lang\/Object;>Ljavax\/lang\/model\/util\/ElementScanner9<TR;TP;>; runtimeAnnotations @Ljavax\/annotation\/processing\/SupportedSourceVersion;(value=eLjavax\/lang\/model\/SourceVersion;RELEASE_20;)\n+\n+class name javax\/lang\/model\/util\/Elements\n+method name isCanonicalConstructor descriptor (Ljavax\/lang\/model\/element\/ExecutableElement;)Z flags 1\n+method name isCompactConstructor descriptor (Ljavax\/lang\/model\/element\/ExecutableElement;)Z flags 1\n+\n+class name javax\/lang\/model\/util\/SimpleAnnotationValueVisitor14\n+header extends javax\/lang\/model\/util\/SimpleAnnotationValueVisitor9 flags 21 signature <R:Ljava\/lang\/Object;P:Ljava\/lang\/Object;>Ljavax\/lang\/model\/util\/SimpleAnnotationValueVisitor9<TR;TP;>; runtimeAnnotations @Ljavax\/annotation\/processing\/SupportedSourceVersion;(value=eLjavax\/lang\/model\/SourceVersion;RELEASE_20;)\n+\n+class name javax\/lang\/model\/util\/SimpleElementVisitor14\n+header extends javax\/lang\/model\/util\/SimpleElementVisitor9 flags 21 signature <R:Ljava\/lang\/Object;P:Ljava\/lang\/Object;>Ljavax\/lang\/model\/util\/SimpleElementVisitor9<TR;TP;>; runtimeAnnotations @Ljavax\/annotation\/processing\/SupportedSourceVersion;(value=eLjavax\/lang\/model\/SourceVersion;RELEASE_20;)\n+\n+class name javax\/lang\/model\/util\/SimpleTypeVisitor14\n+header extends javax\/lang\/model\/util\/SimpleTypeVisitor9 flags 21 signature <R:Ljava\/lang\/Object;P:Ljava\/lang\/Object;>Ljavax\/lang\/model\/util\/SimpleTypeVisitor9<TR;TP;>; runtimeAnnotations @Ljavax\/annotation\/processing\/SupportedSourceVersion;(value=eLjavax\/lang\/model\/SourceVersion;RELEASE_20;)\n+\n+class name javax\/lang\/model\/util\/TypeKindVisitor14\n+header extends javax\/lang\/model\/util\/TypeKindVisitor9 flags 21 signature <R:Ljava\/lang\/Object;P:Ljava\/lang\/Object;>Ljavax\/lang\/model\/util\/TypeKindVisitor9<TR;TP;>; runtimeAnnotations @Ljavax\/annotation\/processing\/SupportedSourceVersion;(value=eLjavax\/lang\/model\/SourceVersion;RELEASE_20;)\n+\n+class name javax\/tools\/SimpleJavaFileObject\n+header extends java\/lang\/Object implements javax\/tools\/JavaFileObject flags 21\n+innerclass innerClass javax\/tools\/JavaFileObject$Kind outerClass javax\/tools\/JavaFileObject innerClassName Kind flags 4019\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/tools\/ToolProvider\n+header extends java\/lang\/Object flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/java.compiler-K.sym.txt","additions":116,"deletions":0,"binary":false,"changes":116,"status":"added"},{"patch":"","filename":"src\/jdk.compiler\/share\/data\/symbols\/java.datatransfer-K.sym.txt","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.compiler\/share\/data\/symbols\/java.datatransfer-J.sym.txt","status":"copied"},{"patch":"@@ -0,0 +1,871 @@\n+#\n+# Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+class name java\/awt\/AWTKeyStroke\n+header extends java\/lang\/Object implements java\/io\/Serializable flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/AttributeValue\n+header extends java\/lang\/Object flags 420\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/BorderLayout\n+header extends java\/lang\/Object implements java\/awt\/LayoutManager2,java\/io\/Serializable flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/CheckboxGroup\n+header extends java\/lang\/Object implements java\/io\/Serializable flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/Color\n+header extends java\/lang\/Object implements java\/awt\/Paint,java\/io\/Serializable flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/ContainerOrderFocusTraversalPolicy\n+header extends java\/awt\/FocusTraversalPolicy implements java\/io\/Serializable flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/Dimension\n+header extends java\/awt\/geom\/Dimension2D implements java\/io\/Serializable flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/DisplayMode\n+header extends java\/lang\/Object flags 31\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/Event\n+header extends java\/lang\/Object implements java\/io\/Serializable flags 21 deprecated true runtimeAnnotations @Ljava\/lang\/Deprecated;(since=\"9\")\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/FlowLayout\n+header extends java\/lang\/Object implements java\/awt\/LayoutManager,java\/io\/Serializable flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/FontMetrics\n+header extends java\/lang\/Object implements java\/io\/Serializable flags 421\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/Graphics\n+header extends java\/lang\/Object flags 421\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/GridLayout\n+header extends java\/lang\/Object implements java\/awt\/LayoutManager,java\/io\/Serializable flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/HeadlessException\n+header extends java\/lang\/UnsupportedOperationException flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/Insets\n+header extends java\/lang\/Object implements java\/lang\/Cloneable,java\/io\/Serializable flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/MenuShortcut\n+header extends java\/lang\/Object implements java\/io\/Serializable flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/MultipleGradientPaint\n+header extends java\/lang\/Object implements java\/awt\/Paint nestMembers java\/awt\/MultipleGradientPaint$ColorSpaceType,java\/awt\/MultipleGradientPaint$CycleMethod sealed true flags 421\n+innerclass innerClass java\/awt\/MultipleGradientPaint$ColorSpaceType outerClass java\/awt\/MultipleGradientPaint innerClassName ColorSpaceType flags 4019\n+innerclass innerClass java\/awt\/MultipleGradientPaint$CycleMethod outerClass java\/awt\/MultipleGradientPaint innerClassName CycleMethod flags 4019\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/Point\n+header extends java\/awt\/geom\/Point2D implements java\/io\/Serializable flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/Rectangle\n+header extends java\/awt\/geom\/Rectangle2D implements java\/awt\/Shape,java\/io\/Serializable flags 21\n+innerclass innerClass java\/awt\/geom\/Rectangle2D$Double outerClass java\/awt\/geom\/Rectangle2D innerClassName Double flags 9\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/SystemColor\n+header extends java\/awt\/Color implements java\/io\/Serializable flags 31\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/TextComponent\n+header extends java\/awt\/Component implements javax\/accessibility\/Accessible nestMembers java\/awt\/TextComponent$AccessibleAWTTextComponent sealed true flags 21\n+innerclass innerClass java\/awt\/TextComponent$AccessibleAWTTextComponent outerClass java\/awt\/TextComponent innerClassName AccessibleAWTTextComponent flags 4\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/TexturePaint\n+header extends java\/lang\/Object implements java\/awt\/Paint flags 21\n+innerclass innerClass java\/awt\/geom\/Rectangle2D$Double outerClass java\/awt\/geom\/Rectangle2D innerClassName Double flags 9\n+\n+class name java\/awt\/color\/ColorSpace\n+header extends java\/lang\/Object implements java\/io\/Serializable flags 421\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/color\/ICC_ColorSpace\n+header extends java\/awt\/color\/ColorSpace flags 21 classAnnotations @Ljdk\/Profile+Annotation;(value=I4)\n+\n+class name java\/awt\/color\/ICC_Profile\n+header extends java\/lang\/Object implements java\/io\/Serializable sealed true flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/desktop\/AboutEvent\n+header extends java\/awt\/desktop\/AppEvent flags 31\n+\n+class name java\/awt\/desktop\/AboutHandler\n+header extends java\/lang\/Object flags 601\n+\n+class name java\/awt\/desktop\/AppEvent\n+header extends java\/util\/EventObject sealed true flags 21\n+\n+class name java\/awt\/desktop\/AppForegroundEvent\n+header extends java\/awt\/desktop\/AppEvent flags 31\n+\n+class name java\/awt\/desktop\/AppForegroundListener\n+header extends java\/lang\/Object implements java\/awt\/desktop\/SystemEventListener flags 601\n+\n+class name java\/awt\/desktop\/AppHiddenEvent\n+header extends java\/awt\/desktop\/AppEvent flags 31\n+\n+class name java\/awt\/desktop\/AppHiddenListener\n+header extends java\/lang\/Object implements java\/awt\/desktop\/SystemEventListener flags 601\n+\n+class name java\/awt\/desktop\/AppReopenedEvent\n+header extends java\/awt\/desktop\/AppEvent flags 31\n+\n+class name java\/awt\/desktop\/AppReopenedListener\n+header extends java\/lang\/Object implements java\/awt\/desktop\/SystemEventListener flags 601\n+\n+class name java\/awt\/desktop\/FilesEvent\n+header extends java\/awt\/desktop\/AppEvent sealed true flags 21\n+\n+class name java\/awt\/desktop\/OpenFilesEvent\n+header extends java\/awt\/desktop\/FilesEvent flags 31\n+\n+class name java\/awt\/desktop\/OpenFilesHandler\n+header extends java\/lang\/Object flags 601\n+\n+class name java\/awt\/desktop\/OpenURIEvent\n+header extends java\/awt\/desktop\/AppEvent flags 31\n+\n+class name java\/awt\/desktop\/OpenURIHandler\n+header extends java\/lang\/Object flags 601\n+\n+class name java\/awt\/desktop\/PreferencesEvent\n+header extends java\/awt\/desktop\/AppEvent flags 31\n+\n+class name java\/awt\/desktop\/PreferencesHandler\n+header extends java\/lang\/Object flags 601\n+\n+class name java\/awt\/desktop\/PrintFilesEvent\n+header extends java\/awt\/desktop\/FilesEvent flags 31\n+\n+class name java\/awt\/desktop\/PrintFilesHandler\n+header extends java\/lang\/Object flags 601\n+\n+class name java\/awt\/desktop\/QuitEvent\n+header extends java\/awt\/desktop\/AppEvent flags 31\n+\n+class name java\/awt\/desktop\/QuitHandler\n+header extends java\/lang\/Object flags 601\n+\n+class name java\/awt\/desktop\/QuitResponse\n+header extends java\/lang\/Object flags 601\n+\n+class name java\/awt\/desktop\/QuitStrategy\n+header extends java\/lang\/Enum flags 4031 signature Ljava\/lang\/Enum<Ljava\/awt\/desktop\/QuitStrategy;>;\n+\n+class name java\/awt\/desktop\/ScreenSleepEvent\n+header extends java\/awt\/desktop\/AppEvent flags 31\n+\n+class name java\/awt\/desktop\/ScreenSleepListener\n+header extends java\/lang\/Object implements java\/awt\/desktop\/SystemEventListener flags 601\n+\n+class name java\/awt\/desktop\/SystemEventListener\n+header extends java\/lang\/Object implements java\/util\/EventListener flags 601\n+\n+class name java\/awt\/desktop\/SystemSleepEvent\n+header extends java\/awt\/desktop\/AppEvent flags 31\n+\n+class name java\/awt\/desktop\/SystemSleepListener\n+header extends java\/lang\/Object implements java\/awt\/desktop\/SystemEventListener flags 601\n+\n+class name java\/awt\/desktop\/UserSessionListener\n+header extends java\/lang\/Object implements java\/awt\/desktop\/SystemEventListener flags 601\n+\n+class name java\/awt\/dnd\/DragGestureEvent\n+header extends java\/util\/EventObject flags 21\n+innerclass innerClass java\/io\/ObjectInputStream$GetField outerClass java\/io\/ObjectInputStream innerClassName GetField flags 409\n+\n+class name java\/awt\/dnd\/DragGestureRecognizer\n+header extends java\/lang\/Object implements java\/io\/Serializable flags 421\n+innerclass innerClass java\/io\/ObjectInputStream$GetField outerClass java\/io\/ObjectInputStream innerClassName GetField flags 409\n+\n+class name java\/awt\/dnd\/DragSource\n+header extends java\/lang\/Object implements java\/io\/Serializable flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/dnd\/DropTargetDragEvent\n+header extends java\/awt\/dnd\/DropTargetEvent flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/dnd\/DropTargetDropEvent\n+header extends java\/awt\/dnd\/DropTargetEvent flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/event\/ActionEvent\n+header extends java\/awt\/AWTEvent flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/event\/AdjustmentEvent\n+header extends java\/awt\/AWTEvent flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/event\/ComponentEvent\n+header extends java\/awt\/AWTEvent flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/event\/ContainerEvent\n+header extends java\/awt\/event\/ComponentEvent flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/event\/HierarchyEvent\n+header extends java\/awt\/AWTEvent flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/event\/InputEvent\n+header extends java\/awt\/event\/ComponentEvent sealed true flags 421\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/event\/InputMethodEvent\n+header extends java\/awt\/AWTEvent flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/event\/ItemEvent\n+header extends java\/awt\/AWTEvent flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/event\/MouseWheelEvent\n+header extends java\/awt\/event\/MouseEvent flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/event\/PaintEvent\n+header extends java\/awt\/event\/ComponentEvent flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/event\/WindowEvent\n+header extends java\/awt\/event\/ComponentEvent flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/font\/FontRenderContext\n+header extends java\/lang\/Object flags 21\n+innerclass innerClass java\/awt\/RenderingHints$Key outerClass java\/awt\/RenderingHints innerClassName Key flags 409\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/font\/GraphicAttribute\n+header extends java\/lang\/Object flags 421\n+innerclass innerClass java\/awt\/geom\/Rectangle2D$Float outerClass java\/awt\/geom\/Rectangle2D innerClassName Float flags 9\n+\n+class name java\/awt\/font\/ImageGraphicAttribute\n+header extends java\/awt\/font\/GraphicAttribute flags 31\n+innerclass innerClass java\/awt\/geom\/Rectangle2D$Float outerClass java\/awt\/geom\/Rectangle2D innerClassName Float flags 9\n+\n+class name java\/awt\/font\/NumericShaper$Range\n+header extends java\/lang\/Enum nestHost java\/awt\/font\/NumericShaper sealed true flags 4021 signature Ljava\/lang\/Enum<Ljava\/awt\/font\/NumericShaper$Range;>;\n+innerclass innerClass java\/awt\/font\/NumericShaper$Range outerClass java\/awt\/font\/NumericShaper innerClassName Range flags 4009\n+\n+class name java\/awt\/font\/ShapeGraphicAttribute\n+header extends java\/awt\/font\/GraphicAttribute flags 31\n+innerclass innerClass java\/awt\/geom\/Rectangle2D$Float outerClass java\/awt\/geom\/Rectangle2D innerClassName Float flags 9\n+\n+class name java\/awt\/font\/TextHitInfo\n+header extends java\/lang\/Object flags 31\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/font\/TextMeasurer\n+header extends java\/lang\/Object implements java\/lang\/Cloneable flags 31\n+innerclass innerClass java\/text\/AttributedCharacterIterator$Attribute outerClass java\/text\/AttributedCharacterIterator innerClassName Attribute flags 9\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/geom\/AffineTransform\n+header extends java\/lang\/Object implements java\/lang\/Cloneable,java\/io\/Serializable flags 21\n+innerclass innerClass java\/awt\/geom\/Point2D$Double outerClass java\/awt\/geom\/Point2D innerClassName Double flags 9\n+innerclass innerClass java\/awt\/geom\/Point2D$Float outerClass java\/awt\/geom\/Point2D innerClassName Float flags 9\n+innerclass innerClass java\/awt\/geom\/Path2D$Double outerClass java\/awt\/geom\/Path2D innerClassName Double flags 9\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/geom\/Area\n+header extends java\/lang\/Object implements java\/awt\/Shape,java\/lang\/Cloneable flags 21\n+innerclass innerClass java\/awt\/geom\/Rectangle2D$Double outerClass java\/awt\/geom\/Rectangle2D innerClassName Double flags 9\n+\n+class name java\/awt\/geom\/Path2D\n+header extends java\/lang\/Object implements java\/awt\/Shape,java\/lang\/Cloneable nestMembers java\/awt\/geom\/Path2D$Double,java\/awt\/geom\/Path2D$Float sealed true flags 421\n+innerclass innerClass java\/awt\/geom\/Rectangle2D$Double outerClass java\/awt\/geom\/Rectangle2D innerClassName Double flags 9\n+innerclass innerClass java\/awt\/geom\/Path2D$Double outerClass java\/awt\/geom\/Path2D innerClassName Double flags 9\n+innerclass innerClass java\/awt\/geom\/Path2D$Float outerClass java\/awt\/geom\/Path2D innerClassName Float flags 9\n+\n+class name java\/awt\/geom\/RectangularShape\n+header extends java\/lang\/Object implements java\/awt\/Shape,java\/lang\/Cloneable flags 421\n+innerclass innerClass java\/awt\/geom\/Rectangle2D$Double outerClass java\/awt\/geom\/Rectangle2D innerClassName Double flags 9\n+\n+class name java\/awt\/image\/AbstractMultiResolutionImage\n+header extends java\/awt\/Image implements java\/awt\/image\/MultiResolutionImage flags 421\n+\n+class name java\/awt\/image\/BandCombineOp\n+header extends java\/lang\/Object implements java\/awt\/image\/RasterOp flags 21\n+innerclass innerClass java\/awt\/geom\/Point2D$Float outerClass java\/awt\/geom\/Point2D innerClassName Float flags 9\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/image\/BandedSampleModel\n+header extends java\/awt\/image\/ComponentSampleModel flags 31\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/image\/BaseMultiResolutionImage\n+header extends java\/awt\/image\/AbstractMultiResolutionImage flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/image\/BufferedImageFilter\n+header extends java\/awt\/image\/ImageFilter implements java\/lang\/Cloneable flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/image\/ByteLookupTable\n+header extends java\/awt\/image\/LookupTable flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/image\/ColorConvertOp\n+header extends java\/lang\/Object implements java\/awt\/image\/BufferedImageOp,java\/awt\/image\/RasterOp flags 21\n+innerclass innerClass java\/awt\/geom\/Point2D$Float outerClass java\/awt\/geom\/Point2D innerClassName Float flags 9\n+\n+class name java\/awt\/image\/ComponentColorModel\n+header extends java\/awt\/image\/ColorModel flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/image\/ComponentSampleModel\n+header extends java\/awt\/image\/SampleModel flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/image\/ConvolveOp\n+header extends java\/lang\/Object implements java\/awt\/image\/BufferedImageOp,java\/awt\/image\/RasterOp flags 21\n+innerclass innerClass java\/awt\/geom\/Point2D$Float outerClass java\/awt\/geom\/Point2D innerClassName Float flags 9\n+\n+class name java\/awt\/image\/DataBufferUShort\n+header extends java\/awt\/image\/DataBuffer flags 31\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/image\/DirectColorModel\n+header extends java\/awt\/image\/PackedColorModel flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/image\/ImageFilter\n+header extends java\/lang\/Object implements java\/awt\/image\/ImageConsumer,java\/lang\/Cloneable flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/image\/IndexColorModel\n+header extends java\/awt\/image\/ColorModel flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/image\/Kernel\n+header extends java\/lang\/Object implements java\/lang\/Cloneable flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/image\/LookupOp\n+header extends java\/lang\/Object implements java\/awt\/image\/BufferedImageOp,java\/awt\/image\/RasterOp flags 21\n+innerclass innerClass java\/awt\/geom\/Point2D$Float outerClass java\/awt\/geom\/Point2D innerClassName Float flags 9\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/image\/MultiPixelPackedSampleModel\n+header extends java\/awt\/image\/SampleModel flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/image\/MultiResolutionImage\n+header extends java\/lang\/Object flags 601\n+\n+class name java\/awt\/image\/PackedColorModel\n+header extends java\/awt\/image\/ColorModel flags 421\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/image\/Raster\n+header extends java\/lang\/Object flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/image\/ReplicateScaleFilter\n+header extends java\/awt\/image\/ImageFilter flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/image\/RescaleOp\n+header extends java\/lang\/Object implements java\/awt\/image\/BufferedImageOp,java\/awt\/image\/RasterOp flags 21\n+innerclass innerClass java\/awt\/geom\/Point2D$Float outerClass java\/awt\/geom\/Point2D innerClassName Float flags 9\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/image\/SampleModel\n+header extends java\/lang\/Object flags 421\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/image\/ShortLookupTable\n+header extends java\/awt\/image\/LookupTable flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/image\/SinglePixelPackedSampleModel\n+header extends java\/awt\/image\/SampleModel flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/awt\/print\/Paper\n+header extends java\/lang\/Object implements java\/lang\/Cloneable flags 21\n+innerclass innerClass java\/awt\/geom\/Rectangle2D$Double outerClass java\/awt\/geom\/Rectangle2D innerClassName Double flags 9\n+\n+class name java\/beans\/BeanProperty\n+header extends java\/lang\/Object implements java\/lang\/annotation\/Annotation flags 2601 runtimeAnnotations @Ljava\/lang\/annotation\/Documented;@Ljava\/lang\/annotation\/Target;(value={eLjava\/lang\/annotation\/ElementType;METHOD;})@Ljava\/lang\/annotation\/Retention;(value=eLjava\/lang\/annotation\/RetentionPolicy;RUNTIME;)\n+\n+class name java\/beans\/Beans\n+header extends java\/lang\/Object flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/beans\/DefaultPersistenceDelegate\n+header extends java\/beans\/PersistenceDelegate flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/beans\/Encoder\n+header extends java\/lang\/Object flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/beans\/EventSetDescriptor\n+header extends java\/beans\/FeatureDescriptor flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/beans\/Expression\n+header extends java\/beans\/Statement flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/beans\/FeatureDescriptor\n+header extends java\/lang\/Object flags 21\n+innerclass innerClass java\/util\/Map$Entry outerClass java\/util\/Map innerClassName Entry flags 609\n+\n+class name java\/beans\/IndexedPropertyDescriptor\n+header extends java\/beans\/PropertyDescriptor flags 21\n+innerclass innerClass java\/util\/Map$Entry outerClass java\/util\/Map innerClassName Entry flags 609\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/beans\/JavaBean\n+header extends java\/lang\/Object implements java\/lang\/annotation\/Annotation flags 2601 runtimeAnnotations @Ljava\/lang\/annotation\/Documented;@Ljava\/lang\/annotation\/Target;(value={eLjava\/lang\/annotation\/ElementType;TYPE;})@Ljava\/lang\/annotation\/Retention;(value=eLjava\/lang\/annotation\/RetentionPolicy;RUNTIME;)\n+\n+class name java\/beans\/PropertyDescriptor\n+header extends java\/beans\/FeatureDescriptor flags 21\n+innerclass innerClass java\/util\/Map$Entry outerClass java\/util\/Map innerClassName Entry flags 609\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/beans\/SimpleBeanInfo\n+header extends java\/lang\/Object implements java\/beans\/BeanInfo flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/accessibility\/AccessibilityProvider\n+header extends java\/lang\/Object flags 421\n+\n+class name javax\/accessibility\/AccessibleBundle\n+header extends java\/lang\/Object flags 421 classAnnotations @Ljdk\/Profile+Annotation;(value=I4)\n+\n+class name javax\/accessibility\/AccessibleRelationSet\n+header extends java\/lang\/Object flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/accessibility\/AccessibleStateSet\n+header extends java\/lang\/Object flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/imageio\/metadata\/IIOMetadata\n+header extends java\/lang\/Object flags 421\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/imageio\/plugins\/jpeg\/JPEGHuffmanTable\n+header extends java\/lang\/Object flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/imageio\/plugins\/jpeg\/JPEGQTable\n+header extends java\/lang\/Object flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/imageio\/plugins\/tiff\/TIFFDirectory\n+header extends java\/lang\/Object implements java\/lang\/Cloneable flags 21\n+\n+class name javax\/imageio\/plugins\/tiff\/TIFFField\n+header extends java\/lang\/Object implements java\/lang\/Cloneable flags 31\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/imageio\/plugins\/tiff\/TIFFImageReadParam\n+header extends javax\/imageio\/ImageReadParam flags 31\n+\n+class name javax\/imageio\/plugins\/tiff\/TIFFTag\n+header extends java\/lang\/Object flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/imageio\/plugins\/tiff\/TIFFTagSet\n+header extends java\/lang\/Object flags 21\n+\n+class name javax\/imageio\/spi\/ImageReaderWriterSpi\n+header extends javax\/imageio\/spi\/IIOServiceProvider flags 421\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/print\/attribute\/DateTimeSyntax\n+header extends java\/lang\/Object implements java\/io\/Serializable,java\/lang\/Cloneable flags 421\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/print\/attribute\/EnumSyntax\n+header extends java\/lang\/Object implements java\/io\/Serializable,java\/lang\/Cloneable flags 421\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/print\/attribute\/IntegerSyntax\n+header extends java\/lang\/Object implements java\/io\/Serializable,java\/lang\/Cloneable flags 421\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/print\/attribute\/standard\/MediaPrintableArea\n+header extends java\/lang\/Object implements javax\/print\/attribute\/DocAttribute,javax\/print\/attribute\/PrintRequestAttribute,javax\/print\/attribute\/PrintJobAttribute flags 31\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/print\/event\/PrintEvent\n+header extends java\/util\/EventObject flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/sound\/midi\/MetaMessage\n+header extends javax\/sound\/midi\/MidiMessage flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/sound\/midi\/MidiMessage\n+header extends java\/lang\/Object implements java\/lang\/Cloneable flags 421\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/sound\/midi\/Sequence\n+header extends java\/lang\/Object flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/sound\/midi\/ShortMessage\n+header extends javax\/sound\/midi\/MidiMessage flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/sound\/midi\/SysexMessage\n+header extends javax\/sound\/midi\/MidiMessage flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/sound\/sampled\/ReverbType\n+header extends java\/lang\/Object flags 21 classAnnotations @Ljdk\/Profile+Annotation;(value=I4)\n+\n+class name javax\/sound\/sampled\/spi\/FormatConversionProvider\n+header extends java\/lang\/Object flags 421\n+innerclass innerClass javax\/sound\/sampled\/AudioFormat$Encoding outerClass javax\/sound\/sampled\/AudioFormat innerClassName Encoding flags 9\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/swing\/BoxLayout\n+header extends java\/lang\/Object implements java\/awt\/LayoutManager2,java\/io\/Serializable flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/swing\/DebugGraphics\n+header extends java\/awt\/Graphics flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/swing\/DefaultBoundedRangeModel\n+header extends java\/lang\/Object implements javax\/swing\/BoundedRangeModel,java\/io\/Serializable flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/swing\/DefaultListSelectionModel\n+header extends java\/lang\/Object implements javax\/swing\/ListSelectionModel,java\/lang\/Cloneable,java\/io\/Serializable flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/swing\/GrayFilter\n+header extends java\/awt\/image\/RGBImageFilter flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/swing\/GroupLayout$Group\n+header extends javax\/swing\/GroupLayout$Spring nestHost javax\/swing\/GroupLayout sealed true flags 421\n+innerclass innerClass javax\/swing\/GroupLayout$Group outerClass javax\/swing\/GroupLayout innerClassName Group flags 401\n+innerclass innerClass javax\/swing\/GroupLayout$Spring outerClass javax\/swing\/GroupLayout innerClassName Spring flags 40a\n+innerclass innerClass javax\/swing\/GroupLayout$ParallelGroup outerClass javax\/swing\/GroupLayout innerClassName ParallelGroup flags 1\n+innerclass innerClass javax\/swing\/GroupLayout$SequentialGroup outerClass javax\/swing\/GroupLayout innerClassName SequentialGroup flags 11\n+\n+class name javax\/swing\/GroupLayout$ParallelGroup\n+header extends javax\/swing\/GroupLayout$Group nestHost javax\/swing\/GroupLayout sealed true flags 21\n+innerclass innerClass javax\/swing\/GroupLayout$ParallelGroup outerClass javax\/swing\/GroupLayout innerClassName ParallelGroup flags 1\n+innerclass innerClass javax\/swing\/GroupLayout$Group outerClass javax\/swing\/GroupLayout innerClassName Group flags 401\n+innerclass innerClass javax\/swing\/GroupLayout$Alignment outerClass javax\/swing\/GroupLayout innerClassName Alignment flags 4019\n+innerclass innerClass javax\/swing\/GroupLayout$Spring outerClass javax\/swing\/GroupLayout innerClassName Spring flags 40a\n+\n+class name javax\/swing\/JList\n+-method name setLayoutOrientation descriptor (I)V\n+method name setLayoutOrientation descriptor (I)V flags 1 runtimeAnnotations @Ljava\/beans\/BeanProperty;(visualUpdate=Ztrue,enumerationValues={\"JList.VERTICAL\"\"JList.HORIZONTAL_WRAP\"\"JList.VERTICAL_WRAP\"},description=\"Defines\\u005C;u0020;the\\u005C;u0020;way\\u005C;u0020;list\\u005C;u0020;cells\\u005C;u0020;are\\u005C;u0020;laid\\u005C;u0020;out.\")\n+\n+class name javax\/swing\/JList$AccessibleJList$AccessibleJListChild\n+-method name getAccessibleAction descriptor ()Ljavax\/accessibility\/AccessibleAction;\n+method name getAccessibleAction descriptor ()Ljavax\/accessibility\/AccessibleAction; flags 1\n+\n+class name javax\/swing\/JTextPane\n+header extends javax\/swing\/JEditorPane flags 21 runtimeAnnotations @Ljava\/beans\/JavaBean;(description=\"A\\u005C;u0020;text\\u005C;u0020;component\\u005C;u0020;that\\u005C;u0020;can\\u005C;u0020;be\\u005C;u0020;marked\\u005C;u0020;up\\u005C;u0020;with\\u005C;u0020;attributes\\u005C;u0020;that\\u005C;u0020;are\\u005C;u0020;graphically\\u005C;u0020;represented.\")@Ljavax\/swing\/SwingContainer;\n+\n+class name javax\/swing\/LookAndFeel\n+header extends java\/lang\/Object flags 421\n+innerclass innerClass javax\/swing\/text\/JTextComponent$KeyBinding outerClass javax\/swing\/text\/JTextComponent innerClassName KeyBinding flags 9\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/swing\/MenuSelectionManager\n+header extends java\/lang\/Object flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/swing\/SizeRequirements\n+header extends java\/lang\/Object implements java\/io\/Serializable flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/swing\/SortingFocusTraversalPolicy\n+header extends javax\/swing\/InternalFrameFocusTraversalPolicy flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/swing\/SwingContainer\n+header extends java\/lang\/Object implements java\/lang\/annotation\/Annotation flags 2601 runtimeAnnotations @Ljava\/lang\/annotation\/Target;(value={eLjava\/lang\/annotation\/ElementType;TYPE;})@Ljava\/lang\/annotation\/Retention;(value=eLjava\/lang\/annotation\/RetentionPolicy;RUNTIME;)\n+\n+class name javax\/swing\/UIClientPropertyKey\n+header extends java\/lang\/Object flags 601\n+\n+class name javax\/swing\/border\/LineBorder\n+header extends javax\/swing\/border\/AbstractBorder flags 21\n+innerclass innerClass java\/awt\/geom\/RoundRectangle2D$Float outerClass java\/awt\/geom\/RoundRectangle2D innerClassName Float flags 9\n+innerclass innerClass java\/awt\/geom\/Rectangle2D$Float outerClass java\/awt\/geom\/Rectangle2D innerClassName Float flags 9\n+innerclass innerClass java\/awt\/geom\/Path2D$Float outerClass java\/awt\/geom\/Path2D innerClassName Float flags 9\n+\n+class name javax\/swing\/event\/EventListenerList\n+header extends java\/lang\/Object implements java\/io\/Serializable flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/swing\/event\/ListDataEvent\n+header extends java\/util\/EventObject flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/swing\/event\/ListSelectionEvent\n+header extends java\/util\/EventObject flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/swing\/event\/TreeModelEvent\n+header extends java\/util\/EventObject flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/swing\/filechooser\/FileNameExtensionFilter\n+header extends javax\/swing\/filechooser\/FileFilter flags 31\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/swing\/plaf\/basic\/BasicArrowButton\n+header extends javax\/swing\/JButton implements javax\/swing\/SwingConstants flags 21\n+innerclass innerClass java\/awt\/geom\/Path2D$Double outerClass java\/awt\/geom\/Path2D innerClassName Double flags 9\n+\n+class name javax\/swing\/plaf\/basic\/BasicButtonUI\n+header extends javax\/swing\/plaf\/ButtonUI flags 21\n+innerclass innerClass java\/awt\/Component$BaselineResizeBehavior outerClass java\/awt\/Component innerClassName BaselineResizeBehavior flags 4019\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/swing\/plaf\/basic\/BasicPasswordFieldUI\n+header extends javax\/swing\/plaf\/basic\/BasicTextFieldUI flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/swing\/plaf\/basic\/BasicSplitPaneUI$BasicHorizontalLayoutManager\n+header extends java\/lang\/Object implements java\/awt\/LayoutManager2 nestHost javax\/swing\/plaf\/basic\/BasicSplitPaneUI sealed true flags 21\n+innerclass innerClass javax\/swing\/plaf\/basic\/BasicSplitPaneUI$BasicHorizontalLayoutManager outerClass javax\/swing\/plaf\/basic\/BasicSplitPaneUI innerClassName BasicHorizontalLayoutManager flags 1\n+innerclass innerClass javax\/swing\/plaf\/basic\/BasicSplitPaneUI$BasicVerticalLayoutManager outerClass javax\/swing\/plaf\/basic\/BasicSplitPaneUI innerClassName BasicVerticalLayoutManager flags 1\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/swing\/plaf\/basic\/BasicToolBarSeparatorUI\n+header extends javax\/swing\/plaf\/basic\/BasicSeparatorUI flags 21\n+innerclass innerClass javax\/swing\/JToolBar$Separator outerClass javax\/swing\/JToolBar innerClassName Separator flags 9\n+\n+class name javax\/swing\/plaf\/metal\/MetalButtonUI\n+header extends javax\/swing\/plaf\/basic\/BasicButtonUI flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/swing\/plaf\/metal\/MetalCheckBoxUI\n+header extends javax\/swing\/plaf\/metal\/MetalRadioButtonUI flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/swing\/plaf\/metal\/MetalRadioButtonUI\n+header extends javax\/swing\/plaf\/basic\/BasicRadioButtonUI flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/swing\/plaf\/metal\/MetalToggleButtonUI\n+header extends javax\/swing\/plaf\/basic\/BasicToggleButtonUI flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/swing\/plaf\/metal\/MetalToolTipUI\n+header extends javax\/swing\/plaf\/basic\/BasicToolTipUI flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/swing\/plaf\/multi\/MultiLookAndFeel\n+header extends javax\/swing\/LookAndFeel flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/swing\/plaf\/synth\/SynthButtonUI\n+header extends javax\/swing\/plaf\/basic\/BasicButtonUI implements java\/beans\/PropertyChangeListener,javax\/swing\/plaf\/synth\/SynthUI flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/swing\/plaf\/synth\/SynthIcon\n+header extends java\/lang\/Object implements javax\/swing\/Icon flags 601\n+\n+class name javax\/swing\/plaf\/synth\/SynthMenuItemUI\n+header extends javax\/swing\/plaf\/basic\/BasicMenuItemUI implements java\/beans\/PropertyChangeListener,javax\/swing\/plaf\/synth\/SynthUI flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/swing\/plaf\/synth\/SynthMenuUI\n+header extends javax\/swing\/plaf\/basic\/BasicMenuUI implements java\/beans\/PropertyChangeListener,javax\/swing\/plaf\/synth\/SynthUI flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/swing\/plaf\/synth\/SynthPasswordFieldUI\n+header extends javax\/swing\/plaf\/synth\/SynthTextFieldUI flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+method name installDefaults descriptor ()V flags 4\n+\n+class name javax\/swing\/plaf\/synth\/SynthSeparatorUI\n+header extends javax\/swing\/plaf\/SeparatorUI implements java\/beans\/PropertyChangeListener,javax\/swing\/plaf\/synth\/SynthUI flags 21\n+innerclass innerClass javax\/swing\/JToolBar$Separator outerClass javax\/swing\/JToolBar innerClassName Separator flags 9\n+\n+class name javax\/swing\/plaf\/synth\/SynthStyle\n+header extends java\/lang\/Object flags 421\n+innerclass innerClass javax\/swing\/UIDefaults$LazyInputMap outerClass javax\/swing\/UIDefaults innerClassName LazyInputMap flags 9\n+innerclass innerClass javax\/swing\/UIDefaults$LazyValue outerClass javax\/swing\/UIDefaults innerClassName LazyValue flags 609\n+\n+class name javax\/swing\/table\/AbstractTableModel\n+header extends java\/lang\/Object implements javax\/swing\/table\/TableModel,java\/io\/Serializable flags 421\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/swing\/text\/AbstractWriter\n+header extends java\/lang\/Object flags 421\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/swing\/text\/BoxView\n+header extends javax\/swing\/text\/CompositeView flags 21\n+innerclass innerClass javax\/swing\/event\/DocumentEvent$ElementChange outerClass javax\/swing\/event\/DocumentEvent innerClassName ElementChange flags 609\n+innerclass innerClass javax\/swing\/text\/Position$Bias outerClass javax\/swing\/text\/Position innerClassName Bias flags 19\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/swing\/text\/CompositeView\n+header extends javax\/swing\/text\/View flags 421\n+innerclass innerClass javax\/swing\/text\/Position$Bias outerClass javax\/swing\/text\/Position innerClassName Bias flags 19\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/swing\/text\/DateFormatter\n+header extends javax\/swing\/text\/InternationalFormatter flags 21\n+innerclass innerClass java\/text\/DateFormat$Field outerClass java\/text\/DateFormat innerClassName Field flags 9\n+\n+class name javax\/swing\/text\/DefaultEditorKit\n+field name beginLineUpAction descriptor Ljava\/lang\/String; constantValue caret-begin-line-and-up flags 19\n+field name endLineDownAction descriptor Ljava\/lang\/String; constantValue caret-end-line-and-down flags 19\n+\n+class name javax\/swing\/text\/IconView\n+header extends javax\/swing\/text\/View flags 21\n+innerclass innerClass javax\/swing\/text\/Position$Bias outerClass javax\/swing\/text\/Position innerClassName Bias flags 19\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/swing\/text\/LayoutQueue\n+header extends java\/lang\/Object flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/swing\/text\/NumberFormatter\n+header extends javax\/swing\/text\/InternationalFormatter flags 21\n+innerclass innerClass java\/text\/NumberFormat$Field outerClass java\/text\/NumberFormat innerClassName Field flags 9\n+innerclass innerClass javax\/swing\/text\/DocumentFilter$FilterBypass outerClass javax\/swing\/text\/DocumentFilter innerClassName FilterBypass flags 409\n+innerclass innerClass java\/text\/AttributedCharacterIterator$Attribute outerClass java\/text\/AttributedCharacterIterator innerClassName Attribute flags 9\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/swing\/text\/Segment\n+header extends java\/lang\/Object implements java\/lang\/Cloneable,java\/text\/CharacterIterator,java\/lang\/CharSequence flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/swing\/text\/StyleConstants\n+header extends java\/lang\/Object nestMembers javax\/swing\/text\/StyleConstants$FontConstants,javax\/swing\/text\/StyleConstants$ColorConstants,javax\/swing\/text\/StyleConstants$CharacterConstants,javax\/swing\/text\/StyleConstants$ParagraphConstants sealed true flags 21\n+innerclass innerClass javax\/swing\/text\/StyleConstants$CharacterConstants outerClass javax\/swing\/text\/StyleConstants innerClassName CharacterConstants flags 19\n+innerclass innerClass javax\/swing\/text\/StyleConstants$FontConstants outerClass javax\/swing\/text\/StyleConstants innerClassName FontConstants flags 19\n+innerclass innerClass javax\/swing\/text\/StyleConstants$ColorConstants outerClass javax\/swing\/text\/StyleConstants innerClassName ColorConstants flags 19\n+innerclass innerClass javax\/swing\/text\/StyleConstants$ParagraphConstants outerClass javax\/swing\/text\/StyleConstants innerClassName ParagraphConstants flags 19\n+\n+class name javax\/swing\/text\/TabSet\n+header extends java\/lang\/Object implements java\/io\/Serializable flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/swing\/text\/TabStop\n+header extends java\/lang\/Object implements java\/io\/Serializable flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/swing\/text\/View\n+header extends java\/lang\/Object implements javax\/swing\/SwingConstants flags 421\n+innerclass innerClass javax\/swing\/text\/Position$Bias outerClass javax\/swing\/text\/Position innerClassName Bias flags 19\n+innerclass innerClass javax\/swing\/event\/DocumentEvent$ElementChange outerClass javax\/swing\/event\/DocumentEvent innerClassName ElementChange flags 609\n+innerclass innerClass javax\/swing\/event\/DocumentEvent$EventType outerClass javax\/swing\/event\/DocumentEvent innerClassName EventType flags 19\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/swing\/text\/html\/InlineView\n+header extends javax\/swing\/text\/LabelView flags 21\n+innerclass innerClass javax\/swing\/text\/html\/CSS$Attribute outerClass javax\/swing\/text\/html\/CSS innerClassName Attribute flags 19\n+\n+class name javax\/swing\/text\/html\/ObjectView\n+header extends javax\/swing\/text\/ComponentView flags 21\n+innerclass innerClass javax\/swing\/text\/html\/HTML$Attribute outerClass javax\/swing\/text\/html\/HTML innerClassName Attribute flags 19\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/swing\/text\/html\/Option\n+header extends java\/lang\/Object implements java\/io\/Serializable flags 21\n+innerclass innerClass javax\/swing\/text\/html\/HTML$Attribute outerClass javax\/swing\/text\/html\/HTML innerClassName Attribute flags 19\n+\n+class name javax\/swing\/text\/html\/parser\/ContentModel\n+header extends java\/lang\/Object implements java\/io\/Serializable flags 31\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/swing\/text\/html\/parser\/DocumentParser\n+header extends javax\/swing\/text\/html\/parser\/Parser flags 21\n+innerclass innerClass javax\/swing\/text\/html\/HTMLEditorKit$ParserCallback outerClass javax\/swing\/text\/html\/HTMLEditorKit innerClassName ParserCallback flags 9\n+innerclass innerClass javax\/swing\/text\/html\/HTML$Tag outerClass javax\/swing\/text\/html\/HTML innerClassName Tag flags 9\n+innerclass innerClass javax\/swing\/text\/html\/HTML$Attribute outerClass javax\/swing\/text\/html\/HTML innerClassName Attribute flags 19\n+\n+class name javax\/swing\/text\/html\/parser\/Parser\n+header extends java\/lang\/Object implements javax\/swing\/text\/html\/parser\/DTDConstants flags 21\n+innerclass innerClass javax\/swing\/text\/html\/HTML$Attribute outerClass javax\/swing\/text\/html\/HTML innerClassName Attribute flags 19\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/swing\/text\/html\/parser\/TagElement\n+header extends java\/lang\/Object flags 21\n+innerclass innerClass javax\/swing\/text\/html\/HTML$Tag outerClass javax\/swing\/text\/html\/HTML innerClassName Tag flags 9\n+innerclass innerClass javax\/swing\/text\/html\/HTML$UnknownTag outerClass javax\/swing\/text\/html\/HTML innerClassName UnknownTag flags 9\n+\n+class name javax\/swing\/tree\/DefaultTreeModel\n+header extends java\/lang\/Object implements java\/io\/Serializable,javax\/swing\/tree\/TreeModel flags 21\n+innerclass innerClass java\/io\/ObjectInputStream$GetField outerClass java\/io\/ObjectInputStream innerClassName GetField flags 409\n+\n+class name javax\/swing\/tree\/DefaultTreeSelectionModel\n+header extends java\/lang\/Object implements java\/lang\/Cloneable,java\/io\/Serializable,javax\/swing\/tree\/TreeSelectionModel flags 21\n+innerclass innerClass java\/io\/ObjectInputStream$GetField outerClass java\/io\/ObjectInputStream innerClassName GetField flags 409\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/swing\/tree\/TreePath\n+header extends java\/lang\/Object implements java\/io\/Serializable flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/swing\/undo\/AbstractUndoableEdit\n+header extends java\/lang\/Object implements javax\/swing\/undo\/UndoableEdit,java\/io\/Serializable flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/swing\/undo\/CompoundEdit\n+header extends javax\/swing\/undo\/AbstractUndoableEdit flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/swing\/undo\/UndoableEditSupport\n+header extends java\/lang\/Object flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/java.desktop-K.sym.txt","additions":871,"deletions":0,"binary":false,"changes":871,"status":"added"},{"patch":"","filename":"src\/jdk.compiler\/share\/data\/symbols\/java.instrument-K.sym.txt","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.compiler\/share\/data\/symbols\/java.instrument-J.sym.txt","status":"copied"},{"patch":"","filename":"src\/jdk.compiler\/share\/data\/symbols\/java.logging-K.sym.txt","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.compiler\/share\/data\/symbols\/java.logging-J.sym.txt","status":"copied"},{"patch":"@@ -0,0 +1,280 @@\n+#\n+# Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+module name java.management\n+header exports java\/lang\/management,javax\/management,javax\/management\/loading,javax\/management\/modelmbean,javax\/management\/monitor,javax\/management\/openmbean,javax\/management\/relation,javax\/management\/remote,javax\/management\/timer requires name\\u0020;java.base\\u0020;flags\\u0020;8000 uses javax\/management\/remote\/JMXConnectorProvider,javax\/management\/remote\/JMXConnectorServerProvider,sun\/management\/spi\/PlatformMBeanProvider provides interface\\u0020;javax\/security\/auth\/spi\/LoginModule\\u0020;impls\\u0020;com\/sun\/jmx\/remote\/security\/FileLoginModule target linux-amd64 flags 8000 classAnnotations @Ljdk\/internal\/javac\/ParticipatesInPreview;\n+\n+class name java\/lang\/management\/LockInfo\n+header extends java\/lang\/Object flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/lang\/management\/ManagementPermission\n+header extends java\/security\/BasicPermission flags 31\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/lang\/management\/MemoryUsage\n+header extends java\/lang\/Object flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/lang\/management\/MonitorInfo\n+header extends java\/lang\/management\/LockInfo flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name java\/lang\/management\/RuntimeMXBean\n+header extends java\/lang\/Object implements java\/lang\/management\/PlatformManagedObject flags 601\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/Attribute\n+header extends java\/lang\/Object implements java\/io\/Serializable flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/AttributeList\n+header extends java\/util\/ArrayList flags 21 signature Ljava\/util\/ArrayList<Ljava\/lang\/Object;>;\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/BadAttributeValueExpException\n+header extends java\/lang\/Exception flags 21\n+innerclass innerClass java\/io\/ObjectInputStream$GetField outerClass java\/io\/ObjectInputStream innerClassName GetField flags 409\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/BadBinaryOpValueExpException\n+header extends java\/lang\/Exception flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/BadStringOperationException\n+header extends java\/lang\/Exception flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/ConstructorParameters\n+header extends java\/lang\/Object implements java\/lang\/annotation\/Annotation flags 2601 runtimeAnnotations @Ljava\/lang\/annotation\/Documented;@Ljava\/lang\/annotation\/Target;(value={eLjava\/lang\/annotation\/ElementType;CONSTRUCTOR;})@Ljava\/lang\/annotation\/Retention;(value=eLjava\/lang\/annotation\/RetentionPolicy;RUNTIME;)\n+\n+class name javax\/management\/ImmutableDescriptor\n+header extends java\/lang\/Object implements javax\/management\/Descriptor flags 21\n+innerclass innerClass java\/util\/Map$Entry outerClass java\/util\/Map innerClassName Entry flags 609\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/MBeanAttributeInfo\n+header extends javax\/management\/MBeanFeatureInfo implements java\/lang\/Cloneable flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/MBeanConstructorInfo\n+header extends javax\/management\/MBeanFeatureInfo implements java\/lang\/Cloneable flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/MBeanNotificationInfo\n+header extends javax\/management\/MBeanFeatureInfo implements java\/lang\/Cloneable flags 21\n+innerclass innerClass java\/io\/ObjectInputStream$GetField outerClass java\/io\/ObjectInputStream innerClassName GetField flags 409\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/MBeanOperationInfo\n+header extends javax\/management\/MBeanFeatureInfo implements java\/lang\/Cloneable flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/MBeanParameterInfo\n+header extends javax\/management\/MBeanFeatureInfo implements java\/lang\/Cloneable flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/MBeanPermission\n+header extends java\/security\/Permission flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/MBeanServerDelegate\n+header extends java\/lang\/Object implements javax\/management\/MBeanServerDelegateMBean,javax\/management\/NotificationEmitter flags 21\n+innerclass innerClass java\/lang\/System$Logger outerClass java\/lang\/System innerClassName Logger flags 609\n+innerclass innerClass java\/lang\/System$Logger$Level outerClass java\/lang\/System$Logger innerClassName Level flags 4019\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/MBeanServerFactory\n+header extends java\/lang\/Object flags 21\n+innerclass innerClass java\/lang\/System$Logger outerClass java\/lang\/System innerClassName Logger flags 609\n+innerclass innerClass java\/lang\/System$Logger$Level outerClass java\/lang\/System$Logger innerClassName Level flags 4019\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/MBeanServerInvocationHandler\n+header extends java\/lang\/Object implements java\/lang\/reflect\/InvocationHandler flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/MBeanServerNotification\n+header extends javax\/management\/Notification flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/MBeanServerPermission\n+header extends java\/security\/BasicPermission flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/MBeanTrustPermission\n+header extends java\/security\/BasicPermission flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/Notification\n+header extends java\/util\/EventObject flags 21\n+innerclass innerClass java\/io\/ObjectOutputStream$PutField outerClass java\/io\/ObjectOutputStream innerClassName PutField flags 409\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/ObjectInstance\n+header extends java\/lang\/Object implements java\/io\/Serializable flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/Query\n+header extends java\/lang\/Object flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/StandardEmitterMBean\n+header extends javax\/management\/StandardMBean implements javax\/management\/NotificationEmitter flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/StringValueExp\n+header extends java\/lang\/Object implements javax\/management\/ValueExp flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/loading\/DefaultLoaderRepository\n+header extends java\/lang\/Object flags 21 deprecated true runtimeAnnotations @Ljava\/lang\/Deprecated;\n+innerclass innerClass java\/lang\/System$Logger outerClass java\/lang\/System innerClassName Logger flags 609\n+innerclass innerClass java\/lang\/System$Logger$Level outerClass java\/lang\/System$Logger innerClassName Level flags 4019\n+\n+class name javax\/management\/loading\/MLet\n+header extends java\/net\/URLClassLoader implements javax\/management\/loading\/MLetMBean,javax\/management\/MBeanRegistration,java\/io\/Externalizable flags 21 deprecated true runtimeAnnotations @Ljava\/lang\/Deprecated;(forRemoval=Ztrue,since=\"20\")\n+innerclass innerClass java\/lang\/System$Logger outerClass java\/lang\/System innerClassName Logger flags 609\n+innerclass innerClass java\/lang\/System$Logger$Level outerClass java\/lang\/System$Logger innerClassName Level flags 4019\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/loading\/MLetContent\n+header extends java\/lang\/Object flags 21 deprecated true runtimeAnnotations @Ljava\/lang\/Deprecated;(forRemoval=Ztrue,since=\"20\")\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/loading\/MLetMBean\n+header extends java\/lang\/Object flags 601 deprecated true runtimeAnnotations @Ljava\/lang\/Deprecated;(forRemoval=Ztrue,since=\"20\")\n+\n+class name javax\/management\/loading\/PrivateMLet\n+header extends javax\/management\/loading\/MLet implements javax\/management\/loading\/PrivateClassLoader flags 21 deprecated true runtimeAnnotations @Ljava\/lang\/Deprecated;(forRemoval=Ztrue,since=\"20\")\n+\n+class name javax\/management\/modelmbean\/InvalidTargetObjectTypeException\n+header extends java\/lang\/Exception flags 21\n+innerclass innerClass java\/io\/ObjectInputStream$GetField outerClass java\/io\/ObjectInputStream innerClassName GetField flags 409\n+innerclass innerClass java\/io\/ObjectOutputStream$PutField outerClass java\/io\/ObjectOutputStream innerClassName PutField flags 409\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/modelmbean\/XMLParseException\n+header extends java\/lang\/Exception flags 21\n+innerclass innerClass java\/io\/ObjectOutputStream$PutField outerClass java\/io\/ObjectOutputStream innerClassName PutField flags 409\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/openmbean\/ArrayType\n+header extends javax\/management\/openmbean\/OpenType flags 21 signature <T:Ljava\/lang\/Object;>Ljavax\/management\/openmbean\/OpenType<TT;>;\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/openmbean\/CompositeDataInvocationHandler\n+header extends java\/lang\/Object implements java\/lang\/reflect\/InvocationHandler flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/openmbean\/CompositeDataSupport\n+header extends java\/lang\/Object implements javax\/management\/openmbean\/CompositeData,java\/io\/Serializable flags 21\n+innerclass innerClass java\/util\/Map$Entry outerClass java\/util\/Map innerClassName Entry flags 609\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/openmbean\/CompositeType\n+header extends javax\/management\/openmbean\/OpenType flags 21 signature Ljavax\/management\/openmbean\/OpenType<Ljavax\/management\/openmbean\/CompositeData;>;\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/openmbean\/OpenMBeanAttributeInfoSupport\n+header extends javax\/management\/MBeanAttributeInfo implements javax\/management\/openmbean\/OpenMBeanAttributeInfo flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/openmbean\/OpenMBeanOperationInfoSupport\n+header extends javax\/management\/MBeanOperationInfo implements javax\/management\/openmbean\/OpenMBeanOperationInfo flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/openmbean\/SimpleType\n+header extends javax\/management\/openmbean\/OpenType flags 31 signature <T:Ljava\/lang\/Object;>Ljavax\/management\/openmbean\/OpenType<TT;>;\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/openmbean\/TabularDataSupport\n+header extends java\/lang\/Object implements javax\/management\/openmbean\/TabularData,java\/util\/Map,java\/lang\/Cloneable,java\/io\/Serializable flags 21 signature Ljava\/lang\/Object;Ljavax\/management\/openmbean\/TabularData;Ljava\/util\/Map<Ljava\/lang\/Object;Ljava\/lang\/Object;>;Ljava\/lang\/Cloneable;Ljava\/io\/Serializable;\n+innerclass innerClass java\/util\/Map$Entry outerClass java\/util\/Map innerClassName Entry flags 609\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/openmbean\/TabularType\n+header extends javax\/management\/openmbean\/OpenType flags 21 signature Ljavax\/management\/openmbean\/OpenType<Ljavax\/management\/openmbean\/TabularData;>;\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/relation\/RelationNotification\n+header extends javax\/management\/Notification flags 21\n+innerclass innerClass java\/io\/ObjectInputStream$GetField outerClass java\/io\/ObjectInputStream innerClassName GetField flags 409\n+innerclass innerClass java\/io\/ObjectOutputStream$PutField outerClass java\/io\/ObjectOutputStream innerClassName PutField flags 409\n+\n+class name javax\/management\/relation\/RelationSupport\n+header extends java\/lang\/Object implements javax\/management\/relation\/RelationSupportMBean,javax\/management\/MBeanRegistration flags 21\n+innerclass innerClass java\/lang\/System$Logger outerClass java\/lang\/System innerClassName Logger flags 609\n+innerclass innerClass java\/lang\/System$Logger$Level outerClass java\/lang\/System$Logger innerClassName Level flags 4019\n+\n+class name javax\/management\/relation\/Role\n+header extends java\/lang\/Object implements java\/io\/Serializable flags 21\n+innerclass innerClass java\/io\/ObjectInputStream$GetField outerClass java\/io\/ObjectInputStream innerClassName GetField flags 409\n+innerclass innerClass java\/io\/ObjectOutputStream$PutField outerClass java\/io\/ObjectOutputStream innerClassName PutField flags 409\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/relation\/RoleInfo\n+header extends java\/lang\/Object implements java\/io\/Serializable flags 21\n+innerclass innerClass java\/io\/ObjectInputStream$GetField outerClass java\/io\/ObjectInputStream innerClassName GetField flags 409\n+innerclass innerClass java\/io\/ObjectOutputStream$PutField outerClass java\/io\/ObjectOutputStream innerClassName PutField flags 409\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/relation\/RoleResult\n+header extends java\/lang\/Object implements java\/io\/Serializable flags 21\n+innerclass innerClass java\/io\/ObjectInputStream$GetField outerClass java\/io\/ObjectInputStream innerClassName GetField flags 409\n+innerclass innerClass java\/io\/ObjectOutputStream$PutField outerClass java\/io\/ObjectOutputStream innerClassName PutField flags 409\n+\n+class name javax\/management\/relation\/RoleUnresolved\n+header extends java\/lang\/Object implements java\/io\/Serializable flags 21\n+innerclass innerClass java\/io\/ObjectInputStream$GetField outerClass java\/io\/ObjectInputStream innerClassName GetField flags 409\n+innerclass innerClass java\/io\/ObjectOutputStream$PutField outerClass java\/io\/ObjectOutputStream innerClassName PutField flags 409\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/remote\/JMXConnectorServerFactory\n+header extends java\/lang\/Object flags 21\n+innerclass innerClass java\/util\/ServiceLoader$Provider outerClass java\/util\/ServiceLoader innerClassName Provider flags 609\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/remote\/JMXPrincipal\n+header extends java\/lang\/Object implements java\/security\/Principal,java\/io\/Serializable flags 21\n+innerclass innerClass java\/io\/ObjectInputStream$GetField outerClass java\/io\/ObjectInputStream innerClassName GetField flags 409\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/remote\/JMXServiceURL\n+header extends java\/lang\/Object implements java\/io\/Serializable flags 21\n+innerclass innerClass java\/io\/ObjectInputStream$GetField outerClass java\/io\/ObjectInputStream innerClassName GetField flags 409\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/remote\/NotificationResult\n+header extends java\/lang\/Object implements java\/io\/Serializable flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/management\/remote\/TargetedNotification\n+header extends java\/lang\/Object implements java\/io\/Serializable flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/java.management-K.sym.txt","additions":280,"deletions":0,"binary":false,"changes":280,"status":"added"},{"patch":"","filename":"src\/jdk.compiler\/share\/data\/symbols\/java.management.rmi-K.sym.txt","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.compiler\/share\/data\/symbols\/java.management.rmi-J.sym.txt","status":"copied"},{"patch":"@@ -0,0 +1,85 @@\n+#\n+# Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+class name javax\/naming\/BinaryRefAddr\n+header extends javax\/naming\/RefAddr flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/naming\/Binding\n+header extends javax\/naming\/NameClassPair flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/naming\/CompositeName\n+header extends java\/lang\/Object implements javax\/naming\/Name flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/naming\/CompoundName\n+header extends java\/lang\/Object implements javax\/naming\/Name flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/naming\/LinkException\n+header extends javax\/naming\/NamingException flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/naming\/NameClassPair\n+header extends java\/lang\/Object implements java\/io\/Serializable flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/naming\/NamingException\n+header extends java\/lang\/Exception flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/naming\/RefAddr\n+header extends java\/lang\/Object implements java\/io\/Serializable flags 421\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/naming\/Reference\n+header extends java\/lang\/Object implements java\/lang\/Cloneable,java\/io\/Serializable flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/naming\/directory\/AttributeModificationException\n+header extends javax\/naming\/NamingException flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/naming\/directory\/ModificationItem\n+header extends java\/lang\/Object implements java\/io\/Serializable flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/naming\/directory\/SearchResult\n+header extends javax\/naming\/Binding flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/naming\/spi\/DirectoryManager\n+header extends javax\/naming\/spi\/NamingManager flags 21\n+innerclass innerClass javax\/naming\/spi\/DirStateFactory$Result outerClass javax\/naming\/spi\/DirStateFactory innerClassName Result flags 9\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/naming\/spi\/NamingManager\n+-method name setObjectFactoryBuilder descriptor (Ljavax\/naming\/spi\/ObjectFactoryBuilder;)V\n+method name setObjectFactoryBuilder descriptor (Ljavax\/naming\/spi\/ObjectFactoryBuilder;)V thrownTypes javax\/naming\/NamingException flags 9\n+\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/java.naming-K.sym.txt","additions":85,"deletions":0,"binary":false,"changes":85,"status":"added"},{"patch":"","filename":"src\/jdk.compiler\/share\/data\/symbols\/java.rmi-K.sym.txt","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.compiler\/share\/data\/symbols\/java.rmi-J.sym.txt","status":"copied"},{"patch":"","filename":"src\/jdk.compiler\/share\/data\/symbols\/java.scripting-K.sym.txt","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.compiler\/share\/data\/symbols\/java.scripting-J.sym.txt","status":"copied"},{"patch":"","filename":"src\/jdk.compiler\/share\/data\/symbols\/java.security.jgss-K.sym.txt","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.compiler\/share\/data\/symbols\/java.security.jgss-J.sym.txt","status":"copied"},{"patch":"","filename":"src\/jdk.compiler\/share\/data\/symbols\/java.security.sasl-K.sym.txt","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.compiler\/share\/data\/symbols\/java.security.sasl-J.sym.txt","status":"copied"},{"patch":"","filename":"src\/jdk.compiler\/share\/data\/symbols\/java.smartcardio-K.sym.txt","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.compiler\/share\/data\/symbols\/java.smartcardio-J.sym.txt","status":"copied"},{"patch":"","filename":"src\/jdk.compiler\/share\/data\/symbols\/java.sql-K.sym.txt","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.compiler\/share\/data\/symbols\/java.sql-J.sym.txt","status":"copied"},{"patch":"@@ -0,0 +1,73 @@\n+#\n+# Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+class name javax\/sql\/rowset\/BaseRowSet\n+header extends java\/lang\/Object implements java\/io\/Serializable,java\/lang\/Cloneable flags 421\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/sql\/rowset\/serial\/SQLOutputImpl\n+header extends java\/lang\/Object implements java\/sql\/SQLOutput flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/sql\/rowset\/serial\/SerialArray\n+header extends java\/lang\/Object implements java\/sql\/Array,java\/io\/Serializable,java\/lang\/Cloneable flags 21\n+innerclass innerClass java\/io\/ObjectInputStream$GetField outerClass java\/io\/ObjectInputStream innerClassName GetField flags 409\n+innerclass innerClass java\/io\/ObjectOutputStream$PutField outerClass java\/io\/ObjectOutputStream innerClassName PutField flags 409\n+\n+class name javax\/sql\/rowset\/serial\/SerialBlob\n+header extends java\/lang\/Object implements java\/sql\/Blob,java\/io\/Serializable,java\/lang\/Cloneable flags 21\n+innerclass innerClass java\/io\/ObjectInputStream$GetField outerClass java\/io\/ObjectInputStream innerClassName GetField flags 409\n+innerclass innerClass java\/io\/ObjectOutputStream$PutField outerClass java\/io\/ObjectOutputStream innerClassName PutField flags 409\n+\n+class name javax\/sql\/rowset\/serial\/SerialClob\n+header extends java\/lang\/Object implements java\/sql\/Clob,java\/io\/Serializable,java\/lang\/Cloneable flags 21\n+innerclass innerClass java\/io\/ObjectInputStream$GetField outerClass java\/io\/ObjectInputStream innerClassName GetField flags 409\n+innerclass innerClass java\/io\/ObjectOutputStream$PutField outerClass java\/io\/ObjectOutputStream innerClassName PutField flags 409\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/sql\/rowset\/serial\/SerialDatalink\n+header extends java\/lang\/Object implements java\/io\/Serializable,java\/lang\/Cloneable flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/sql\/rowset\/serial\/SerialJavaObject\n+header extends java\/lang\/Object implements java\/io\/Serializable,java\/lang\/Cloneable flags 21\n+innerclass innerClass java\/io\/ObjectInputStream$GetField outerClass java\/io\/ObjectInputStream innerClassName GetField flags 409\n+innerclass innerClass java\/io\/ObjectOutputStream$PutField outerClass java\/io\/ObjectOutputStream innerClassName PutField flags 409\n+\n+class name javax\/sql\/rowset\/serial\/SerialRef\n+header extends java\/lang\/Object implements java\/sql\/Ref,java\/io\/Serializable,java\/lang\/Cloneable flags 21\n+innerclass innerClass java\/io\/ObjectInputStream$GetField outerClass java\/io\/ObjectInputStream innerClassName GetField flags 409\n+innerclass innerClass java\/io\/ObjectOutputStream$PutField outerClass java\/io\/ObjectOutputStream innerClassName PutField flags 409\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name javax\/sql\/rowset\/serial\/SerialStruct\n+header extends java\/lang\/Object implements java\/sql\/Struct,java\/io\/Serializable,java\/lang\/Cloneable flags 21\n+innerclass innerClass java\/io\/ObjectInputStream$GetField outerClass java\/io\/ObjectInputStream innerClassName GetField flags 409\n+innerclass innerClass java\/io\/ObjectOutputStream$PutField outerClass java\/io\/ObjectOutputStream innerClassName PutField flags 409\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/java.sql.rowset-K.sym.txt","additions":73,"deletions":0,"binary":false,"changes":73,"status":"added"},{"patch":"","filename":"src\/jdk.compiler\/share\/data\/symbols\/java.xml-K.sym.txt","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.compiler\/share\/data\/symbols\/java.xml-J.sym.txt","status":"copied"},{"patch":"","filename":"src\/jdk.compiler\/share\/data\/symbols\/java.xml.crypto-K.sym.txt","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.compiler\/share\/data\/symbols\/java.xml.crypto-J.sym.txt","status":"copied"},{"patch":"","filename":"src\/jdk.compiler\/share\/data\/symbols\/jdk.accessibility-K.sym.txt","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.compiler\/share\/data\/symbols\/jdk.accessibility-J.sym.txt","status":"copied"},{"patch":"","filename":"src\/jdk.compiler\/share\/data\/symbols\/jdk.attach-K.sym.txt","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.compiler\/share\/data\/symbols\/jdk.attach-J.sym.txt","status":"copied"},{"patch":"@@ -0,0 +1,405 @@\n+#\n+# Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+class name com\/sun\/source\/doctree\/AuthorTree\n+header extends java\/lang\/Object implements com\/sun\/source\/doctree\/BlockTagTree flags 601\n+\n+class name com\/sun\/source\/doctree\/BlockTagTree\n+header extends java\/lang\/Object implements com\/sun\/source\/doctree\/DocTree flags 601\n+\n+class name com\/sun\/source\/doctree\/CommentTree\n+header extends java\/lang\/Object implements com\/sun\/source\/doctree\/DocTree flags 601\n+\n+class name com\/sun\/source\/doctree\/DeprecatedTree\n+header extends java\/lang\/Object implements com\/sun\/source\/doctree\/BlockTagTree flags 601\n+\n+class name com\/sun\/source\/doctree\/DocCommentTree\n+header extends java\/lang\/Object implements com\/sun\/source\/doctree\/DocTree flags 601\n+\n+class name com\/sun\/source\/doctree\/DocRootTree\n+header extends java\/lang\/Object implements com\/sun\/source\/doctree\/InlineTagTree flags 601\n+\n+class name com\/sun\/source\/doctree\/DocTree$Kind\n+field name SPEC descriptor Lcom\/sun\/source\/doctree\/DocTree$Kind; flags 4019\n+\n+class name com\/sun\/source\/doctree\/DocTreeVisitor\n+header extends java\/lang\/Object flags 601 signature <R:Ljava\/lang\/Object;P:Ljava\/lang\/Object;>Ljava\/lang\/Object;\n+method name visitSpec descriptor (Lcom\/sun\/source\/doctree\/SpecTree;Ljava\/lang\/Object;)Ljava\/lang\/Object; flags 1 signature (Lcom\/sun\/source\/doctree\/SpecTree;TP;)TR;\n+\n+class name com\/sun\/source\/doctree\/DocTypeTree\n+header extends java\/lang\/Object implements com\/sun\/source\/doctree\/DocTree flags 601\n+\n+class name com\/sun\/source\/doctree\/EndElementTree\n+header extends java\/lang\/Object implements com\/sun\/source\/doctree\/DocTree flags 601\n+\n+class name com\/sun\/source\/doctree\/EntityTree\n+header extends java\/lang\/Object implements com\/sun\/source\/doctree\/DocTree flags 601\n+\n+class name com\/sun\/source\/doctree\/ErroneousTree\n+header extends java\/lang\/Object implements com\/sun\/source\/doctree\/TextTree flags 601\n+\n+class name com\/sun\/source\/doctree\/HiddenTree\n+header extends java\/lang\/Object implements com\/sun\/source\/doctree\/BlockTagTree flags 601\n+\n+class name com\/sun\/source\/doctree\/IdentifierTree\n+header extends java\/lang\/Object implements com\/sun\/source\/doctree\/DocTree flags 601\n+\n+class name com\/sun\/source\/doctree\/IndexTree\n+header extends java\/lang\/Object implements com\/sun\/source\/doctree\/InlineTagTree flags 601\n+\n+class name com\/sun\/source\/doctree\/InheritDocTree\n+header extends java\/lang\/Object implements com\/sun\/source\/doctree\/InlineTagTree flags 601\n+\n+class name com\/sun\/source\/doctree\/InlineTagTree\n+header extends java\/lang\/Object implements com\/sun\/source\/doctree\/DocTree flags 601\n+\n+class name com\/sun\/source\/doctree\/LinkTree\n+header extends java\/lang\/Object implements com\/sun\/source\/doctree\/InlineTagTree flags 601\n+\n+class name com\/sun\/source\/doctree\/LiteralTree\n+header extends java\/lang\/Object implements com\/sun\/source\/doctree\/InlineTagTree flags 601\n+\n+class name com\/sun\/source\/doctree\/ParamTree\n+header extends java\/lang\/Object implements com\/sun\/source\/doctree\/BlockTagTree flags 601\n+\n+class name com\/sun\/source\/doctree\/ProvidesTree\n+header extends java\/lang\/Object implements com\/sun\/source\/doctree\/BlockTagTree flags 601\n+\n+class name com\/sun\/source\/doctree\/ReferenceTree\n+header extends java\/lang\/Object implements com\/sun\/source\/doctree\/DocTree flags 601\n+\n+class name com\/sun\/source\/doctree\/SeeTree\n+header extends java\/lang\/Object implements com\/sun\/source\/doctree\/BlockTagTree flags 601\n+\n+class name com\/sun\/source\/doctree\/SerialDataTree\n+header extends java\/lang\/Object implements com\/sun\/source\/doctree\/BlockTagTree flags 601\n+\n+class name com\/sun\/source\/doctree\/SerialFieldTree\n+header extends java\/lang\/Object implements com\/sun\/source\/doctree\/BlockTagTree flags 601\n+\n+class name com\/sun\/source\/doctree\/SerialTree\n+header extends java\/lang\/Object implements com\/sun\/source\/doctree\/BlockTagTree flags 601\n+\n+class name com\/sun\/source\/doctree\/SinceTree\n+header extends java\/lang\/Object implements com\/sun\/source\/doctree\/BlockTagTree flags 601\n+\n+class name com\/sun\/source\/doctree\/SpecTree\n+header extends java\/lang\/Object implements com\/sun\/source\/doctree\/BlockTagTree flags 601\n+method name getURL descriptor ()Lcom\/sun\/source\/doctree\/TextTree; flags 401\n+method name getTitle descriptor ()Ljava\/util\/List; flags 401 signature ()Ljava\/util\/List<+Lcom\/sun\/source\/doctree\/DocTree;>;\n+\n+class name com\/sun\/source\/doctree\/StartElementTree\n+header extends java\/lang\/Object implements com\/sun\/source\/doctree\/DocTree flags 601\n+\n+class name com\/sun\/source\/doctree\/SummaryTree\n+header extends java\/lang\/Object implements com\/sun\/source\/doctree\/InlineTagTree flags 601\n+\n+class name com\/sun\/source\/doctree\/TextTree\n+header extends java\/lang\/Object implements com\/sun\/source\/doctree\/DocTree flags 601\n+\n+class name com\/sun\/source\/doctree\/ThrowsTree\n+header extends java\/lang\/Object implements com\/sun\/source\/doctree\/BlockTagTree flags 601\n+\n+class name com\/sun\/source\/doctree\/UnknownBlockTagTree\n+header extends java\/lang\/Object implements com\/sun\/source\/doctree\/BlockTagTree flags 601\n+\n+class name com\/sun\/source\/doctree\/UnknownInlineTagTree\n+header extends java\/lang\/Object implements com\/sun\/source\/doctree\/InlineTagTree flags 601\n+\n+class name com\/sun\/source\/doctree\/UsesTree\n+header extends java\/lang\/Object implements com\/sun\/source\/doctree\/BlockTagTree flags 601\n+\n+class name com\/sun\/source\/doctree\/ValueTree\n+header extends java\/lang\/Object implements com\/sun\/source\/doctree\/InlineTagTree flags 601\n+method name getFormat descriptor ()Lcom\/sun\/source\/doctree\/TextTree; flags 1\n+\n+class name com\/sun\/source\/doctree\/VersionTree\n+header extends java\/lang\/Object implements com\/sun\/source\/doctree\/BlockTagTree flags 601\n+\n+class name com\/sun\/source\/tree\/AnnotatedTypeTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/ExpressionTree flags 601\n+\n+class name com\/sun\/source\/tree\/AnnotationTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/ExpressionTree flags 601\n+\n+class name com\/sun\/source\/tree\/ArrayAccessTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/ExpressionTree flags 601\n+\n+class name com\/sun\/source\/tree\/ArrayTypeTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/Tree flags 601\n+\n+class name com\/sun\/source\/tree\/AssertTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/StatementTree flags 601\n+\n+class name com\/sun\/source\/tree\/AssignmentTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/ExpressionTree flags 601\n+\n+class name com\/sun\/source\/tree\/BinaryTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/ExpressionTree flags 601\n+\n+class name com\/sun\/source\/tree\/BlockTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/StatementTree flags 601\n+\n+class name com\/sun\/source\/tree\/BreakTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/StatementTree flags 601\n+\n+class name com\/sun\/source\/tree\/CatchTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/Tree flags 601\n+\n+class name com\/sun\/source\/tree\/ClassTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/StatementTree flags 601\n+\n+class name com\/sun\/source\/tree\/CompilationUnitTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/Tree flags 601\n+\n+class name com\/sun\/source\/tree\/CompoundAssignmentTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/ExpressionTree flags 601\n+\n+class name com\/sun\/source\/tree\/ConditionalExpressionTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/ExpressionTree flags 601\n+\n+class name com\/sun\/source\/tree\/ContinueTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/StatementTree flags 601\n+\n+class name com\/sun\/source\/tree\/DeconstructionPatternTree\n+-method name getVariable descriptor ()Lcom\/sun\/source\/tree\/VariableTree;\n+\n+class name com\/sun\/source\/tree\/DirectiveTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/Tree flags 601\n+\n+class name com\/sun\/source\/tree\/DoWhileLoopTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/StatementTree flags 601\n+\n+class name com\/sun\/source\/tree\/EmptyStatementTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/StatementTree flags 601\n+\n+class name com\/sun\/source\/tree\/EnhancedForLoopTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/StatementTree nestMembers com\/sun\/source\/tree\/EnhancedForLoopTree$DeclarationKind flags 601\n+innerclass innerClass com\/sun\/source\/tree\/EnhancedForLoopTree$DeclarationKind outerClass com\/sun\/source\/tree\/EnhancedForLoopTree innerClassName DeclarationKind flags 4019\n+method name getVariableOrRecordPattern descriptor ()Lcom\/sun\/source\/tree\/Tree; flags 401 classAnnotations @Ljdk\/internal\/javac\/PreviewFeature;(feature=eLjdk\/internal\/javac\/PreviewFeature$Feature;RECORD_PATTERNS;,reflective=Ztrue)\n+method name getDeclarationKind descriptor ()Lcom\/sun\/source\/tree\/EnhancedForLoopTree$DeclarationKind; flags 401 classAnnotations @Ljdk\/internal\/javac\/PreviewFeature;(feature=eLjdk\/internal\/javac\/PreviewFeature$Feature;RECORD_PATTERNS;,reflective=Ztrue)\n+\n+class name com\/sun\/source\/tree\/EnhancedForLoopTree$DeclarationKind\n+header extends java\/lang\/Enum nestHost com\/sun\/source\/tree\/EnhancedForLoopTree flags 4031 signature Ljava\/lang\/Enum<Lcom\/sun\/source\/tree\/EnhancedForLoopTree$DeclarationKind;>; classAnnotations @Ljdk\/internal\/javac\/PreviewFeature;(feature=eLjdk\/internal\/javac\/PreviewFeature$Feature;RECORD_PATTERNS;,reflective=Ztrue)\n+innerclass innerClass com\/sun\/source\/tree\/EnhancedForLoopTree$DeclarationKind outerClass com\/sun\/source\/tree\/EnhancedForLoopTree innerClassName DeclarationKind flags 4019\n+field name VARIABLE descriptor Lcom\/sun\/source\/tree\/EnhancedForLoopTree$DeclarationKind; flags 4019\n+field name PATTERN descriptor Lcom\/sun\/source\/tree\/EnhancedForLoopTree$DeclarationKind; flags 4019\n+method name values descriptor ()[Lcom\/sun\/source\/tree\/EnhancedForLoopTree$DeclarationKind; flags 9\n+method name valueOf descriptor (Ljava\/lang\/String;)Lcom\/sun\/source\/tree\/EnhancedForLoopTree$DeclarationKind; flags 9\n+\n+class name com\/sun\/source\/tree\/ErroneousTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/ExpressionTree flags 601\n+\n+class name com\/sun\/source\/tree\/ExportsTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/DirectiveTree flags 601\n+\n+class name com\/sun\/source\/tree\/ExpressionStatementTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/StatementTree flags 601\n+\n+class name com\/sun\/source\/tree\/ExpressionTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/Tree flags 601\n+\n+class name com\/sun\/source\/tree\/ForLoopTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/StatementTree flags 601\n+\n+class name com\/sun\/source\/tree\/IdentifierTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/ExpressionTree flags 601\n+\n+class name com\/sun\/source\/tree\/IfTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/StatementTree flags 601\n+\n+class name com\/sun\/source\/tree\/ImportTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/Tree flags 601\n+\n+class name com\/sun\/source\/tree\/InstanceOfTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/ExpressionTree nestMembers com\/sun\/source\/tree\/InstanceOfTree$TestKind flags 601\n+innerclass innerClass com\/sun\/source\/tree\/InstanceOfTree$TestKind outerClass com\/sun\/source\/tree\/InstanceOfTree innerClassName TestKind flags 4019\n+method name getTestKind descriptor ()Lcom\/sun\/source\/tree\/InstanceOfTree$TestKind; flags 401 classAnnotations @Ljdk\/internal\/javac\/PreviewFeature;(feature=eLjdk\/internal\/javac\/PreviewFeature$Feature;RECORD_PATTERNS;,reflective=Ztrue)\n+\n+class name com\/sun\/source\/tree\/InstanceOfTree$TestKind\n+header extends java\/lang\/Enum nestHost com\/sun\/source\/tree\/InstanceOfTree flags 4031 signature Ljava\/lang\/Enum<Lcom\/sun\/source\/tree\/InstanceOfTree$TestKind;>; classAnnotations @Ljdk\/internal\/javac\/PreviewFeature;(feature=eLjdk\/internal\/javac\/PreviewFeature$Feature;RECORD_PATTERNS;,reflective=Ztrue)\n+innerclass innerClass com\/sun\/source\/tree\/InstanceOfTree$TestKind outerClass com\/sun\/source\/tree\/InstanceOfTree innerClassName TestKind flags 4019\n+field name TYPE descriptor Lcom\/sun\/source\/tree\/InstanceOfTree$TestKind; flags 4019\n+field name PATTERN descriptor Lcom\/sun\/source\/tree\/InstanceOfTree$TestKind; flags 4019\n+method name values descriptor ()[Lcom\/sun\/source\/tree\/InstanceOfTree$TestKind; flags 9\n+method name valueOf descriptor (Ljava\/lang\/String;)Lcom\/sun\/source\/tree\/InstanceOfTree$TestKind; flags 9\n+\n+class name com\/sun\/source\/tree\/IntersectionTypeTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/Tree flags 601\n+\n+class name com\/sun\/source\/tree\/LabeledStatementTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/StatementTree flags 601\n+\n+class name com\/sun\/source\/tree\/LineMap\n+header extends java\/lang\/Object flags 601\n+\n+class name com\/sun\/source\/tree\/LiteralTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/ExpressionTree flags 601\n+\n+class name com\/sun\/source\/tree\/MemberSelectTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/ExpressionTree flags 601\n+\n+class name com\/sun\/source\/tree\/MethodInvocationTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/ExpressionTree flags 601\n+\n+class name com\/sun\/source\/tree\/MethodTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/Tree flags 601\n+\n+class name com\/sun\/source\/tree\/ModifiersTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/Tree flags 601\n+\n+class name com\/sun\/source\/tree\/NewArrayTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/ExpressionTree flags 601\n+\n+class name com\/sun\/source\/tree\/NewClassTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/ExpressionTree flags 601\n+\n+class name com\/sun\/source\/tree\/OpensTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/DirectiveTree flags 601\n+\n+class name com\/sun\/source\/tree\/PackageTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/Tree flags 601\n+\n+class name com\/sun\/source\/tree\/ParameterizedTypeTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/Tree flags 601\n+\n+class name com\/sun\/source\/tree\/ParenthesizedTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/ExpressionTree flags 601\n+\n+class name com\/sun\/source\/tree\/PatternTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/Tree flags 601\n+\n+class name com\/sun\/source\/tree\/PrimitiveTypeTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/Tree flags 601\n+\n+class name com\/sun\/source\/tree\/ProvidesTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/DirectiveTree flags 601\n+\n+class name com\/sun\/source\/tree\/RequiresTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/DirectiveTree flags 601\n+\n+class name com\/sun\/source\/tree\/ReturnTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/StatementTree flags 601\n+\n+class name com\/sun\/source\/tree\/Scope\n+header extends java\/lang\/Object flags 601\n+\n+class name com\/sun\/source\/tree\/StatementTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/Tree flags 601\n+\n+class name com\/sun\/source\/tree\/SwitchTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/StatementTree flags 601\n+\n+class name com\/sun\/source\/tree\/SynchronizedTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/StatementTree flags 601\n+\n+class name com\/sun\/source\/tree\/ThrowTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/StatementTree flags 601\n+\n+class name com\/sun\/source\/tree\/TreeVisitor\n+header extends java\/lang\/Object flags 601 signature <R:Ljava\/lang\/Object;P:Ljava\/lang\/Object;>Ljava\/lang\/Object;\n+\n+class name com\/sun\/source\/tree\/TryTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/StatementTree flags 601\n+\n+class name com\/sun\/source\/tree\/TypeCastTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/ExpressionTree flags 601\n+\n+class name com\/sun\/source\/tree\/TypeParameterTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/Tree flags 601\n+\n+class name com\/sun\/source\/tree\/UnaryTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/ExpressionTree flags 601\n+\n+class name com\/sun\/source\/tree\/UnionTypeTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/Tree flags 601\n+\n+class name com\/sun\/source\/tree\/UsesTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/DirectiveTree flags 601\n+\n+class name com\/sun\/source\/tree\/VariableTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/StatementTree flags 601\n+\n+class name com\/sun\/source\/tree\/WhileLoopTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/StatementTree flags 601\n+\n+class name com\/sun\/source\/tree\/WildcardTree\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/Tree flags 601\n+\n+class name com\/sun\/source\/util\/DocSourcePositions\n+header extends java\/lang\/Object implements com\/sun\/source\/util\/SourcePositions flags 601\n+\n+class name com\/sun\/source\/util\/DocTreeFactory\n+header extends java\/lang\/Object flags 601\n+innerclass innerClass com\/sun\/source\/doctree\/AttributeTree$ValueKind outerClass com\/sun\/source\/doctree\/AttributeTree innerClassName ValueKind flags 4019\n+method name newSpecTree descriptor (Lcom\/sun\/source\/doctree\/TextTree;Ljava\/util\/List;)Lcom\/sun\/source\/doctree\/SpecTree; flags 401 signature (Lcom\/sun\/source\/doctree\/TextTree;Ljava\/util\/List<+Lcom\/sun\/source\/doctree\/DocTree;>;)Lcom\/sun\/source\/doctree\/SpecTree;\n+method name newValueTree descriptor (Lcom\/sun\/source\/doctree\/TextTree;Lcom\/sun\/source\/doctree\/ReferenceTree;)Lcom\/sun\/source\/doctree\/ValueTree; flags 1\n+\n+class name com\/sun\/source\/util\/DocTreePathScanner\n+header extends com\/sun\/source\/util\/DocTreeScanner flags 21 signature <R:Ljava\/lang\/Object;P:Ljava\/lang\/Object;>Lcom\/sun\/source\/util\/DocTreeScanner<TR;TP;>;\n+\n+class name com\/sun\/source\/util\/DocTreeScanner\n+header extends java\/lang\/Object implements com\/sun\/source\/doctree\/DocTreeVisitor flags 21 signature <R:Ljava\/lang\/Object;P:Ljava\/lang\/Object;>Ljava\/lang\/Object;Lcom\/sun\/source\/doctree\/DocTreeVisitor<TR;TP;>;\n+method name visitSpec descriptor (Lcom\/sun\/source\/doctree\/SpecTree;Ljava\/lang\/Object;)Ljava\/lang\/Object; flags 1 signature (Lcom\/sun\/source\/doctree\/SpecTree;TP;)TR;\n+\n+class name com\/sun\/source\/util\/DocTrees\n+header extends com\/sun\/source\/util\/Trees flags 421\n+innerclass innerClass javax\/tools\/JavaCompiler$CompilationTask outerClass javax\/tools\/JavaCompiler innerClassName CompilationTask flags 609\n+innerclass innerClass javax\/tools\/Diagnostic$Kind outerClass javax\/tools\/Diagnostic innerClassName Kind flags 4019\n+\n+class name com\/sun\/source\/util\/JavacTask\n+header extends java\/lang\/Object implements javax\/tools\/JavaCompiler$CompilationTask flags 421\n+innerclass innerClass javax\/tools\/JavaCompiler$CompilationTask outerClass javax\/tools\/JavaCompiler innerClassName CompilationTask flags 609\n+\n+class name com\/sun\/source\/util\/Plugin\n+header extends java\/lang\/Object flags 601\n+\n+class name com\/sun\/source\/util\/SimpleDocTreeVisitor\n+header extends java\/lang\/Object implements com\/sun\/source\/doctree\/DocTreeVisitor flags 21 signature <R:Ljava\/lang\/Object;P:Ljava\/lang\/Object;>Ljava\/lang\/Object;Lcom\/sun\/source\/doctree\/DocTreeVisitor<TR;TP;>;\n+method name visitSpec descriptor (Lcom\/sun\/source\/doctree\/SpecTree;Ljava\/lang\/Object;)Ljava\/lang\/Object; flags 1 signature (Lcom\/sun\/source\/doctree\/SpecTree;TP;)TR;\n+\n+class name com\/sun\/source\/util\/SimpleTreeVisitor\n+header extends java\/lang\/Object implements com\/sun\/source\/tree\/TreeVisitor flags 21 signature <R:Ljava\/lang\/Object;P:Ljava\/lang\/Object;>Ljava\/lang\/Object;Lcom\/sun\/source\/tree\/TreeVisitor<TR;TP;>;\n+\n+class name com\/sun\/source\/util\/SourcePositions\n+header extends java\/lang\/Object flags 601\n+\n+class name com\/sun\/source\/util\/TaskListener\n+header extends java\/lang\/Object flags 601\n+\n+class name com\/sun\/source\/util\/TreePathScanner\n+header extends com\/sun\/source\/util\/TreeScanner flags 21 signature <R:Ljava\/lang\/Object;P:Ljava\/lang\/Object;>Lcom\/sun\/source\/util\/TreeScanner<TR;TP;>;\n+\n+class name com\/sun\/source\/util\/Trees\n+header extends java\/lang\/Object flags 421\n+innerclass innerClass javax\/tools\/JavaCompiler$CompilationTask outerClass javax\/tools\/JavaCompiler innerClassName CompilationTask flags 609\n+innerclass innerClass javax\/tools\/Diagnostic$Kind outerClass javax\/tools\/Diagnostic innerClassName Kind flags 4019\n+\n+class name com\/sun\/tools\/javac\/Main\n+header extends java\/lang\/Object flags 21\n+\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/jdk.compiler-K.sym.txt","additions":405,"deletions":0,"binary":false,"changes":405,"status":"added"},{"patch":"","filename":"src\/jdk.compiler\/share\/data\/symbols\/jdk.dynalink-K.sym.txt","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.compiler\/share\/data\/symbols\/jdk.dynalink-J.sym.txt","status":"copied"},{"patch":"","filename":"src\/jdk.compiler\/share\/data\/symbols\/jdk.httpserver-K.sym.txt","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.compiler\/share\/data\/symbols\/jdk.httpserver-J.sym.txt","status":"copied"},{"patch":"@@ -0,0 +1,78 @@\n+#\n+# Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+module name jdk.incubator.concurrent\n+header exports jdk\/incubator\/concurrent requires name\\u0020;java.base\\u0020;flags\\u0020;8000 target linux-amd64 resolution 9 flags 8000 classAnnotations @Ljdk\/internal\/javac\/ParticipatesInPreview;\n+\n+class name jdk\/incubator\/concurrent\/ScopedValue\n+header extends java\/lang\/Object nestMembers jdk\/incubator\/concurrent\/ScopedValue$Carrier flags 31 signature <T:Ljava\/lang\/Object;>Ljava\/lang\/Object;\n+innerclass innerClass jdk\/incubator\/concurrent\/ScopedValue$Carrier outerClass jdk\/incubator\/concurrent\/ScopedValue innerClassName Carrier flags 19\n+method name hashCode descriptor ()I flags 1\n+method name where descriptor (Ljdk\/incubator\/concurrent\/ScopedValue;Ljava\/lang\/Object;)Ljdk\/incubator\/concurrent\/ScopedValue$Carrier; flags 9 signature <T:Ljava\/lang\/Object;>(Ljdk\/incubator\/concurrent\/ScopedValue<TT;>;TT;)Ljdk\/incubator\/concurrent\/ScopedValue$Carrier;\n+method name where descriptor (Ljdk\/incubator\/concurrent\/ScopedValue;Ljava\/lang\/Object;Ljava\/util\/concurrent\/Callable;)Ljava\/lang\/Object; thrownTypes java\/lang\/Exception flags 9 signature <T:Ljava\/lang\/Object;R:Ljava\/lang\/Object;>(Ljdk\/incubator\/concurrent\/ScopedValue<TT;>;TT;Ljava\/util\/concurrent\/Callable<+TR;>;)TR;\n+method name where descriptor (Ljdk\/incubator\/concurrent\/ScopedValue;Ljava\/lang\/Object;Ljava\/lang\/Runnable;)V flags 9 signature <T:Ljava\/lang\/Object;>(Ljdk\/incubator\/concurrent\/ScopedValue<TT;>;TT;Ljava\/lang\/Runnable;)V\n+method name newInstance descriptor ()Ljdk\/incubator\/concurrent\/ScopedValue; flags 9 signature <T:Ljava\/lang\/Object;>()Ljdk\/incubator\/concurrent\/ScopedValue<TT;>;\n+method name get descriptor ()Ljava\/lang\/Object; flags 1 signature ()TT; runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/ForceInline;\n+method name isBound descriptor ()Z flags 1\n+method name orElse descriptor (Ljava\/lang\/Object;)Ljava\/lang\/Object; flags 1 signature (TT;)TT;\n+method name orElseThrow descriptor (Ljava\/util\/function\/Supplier;)Ljava\/lang\/Object; thrownTypes java\/lang\/Throwable flags 1 signature <X:Ljava\/lang\/Throwable;>(Ljava\/util\/function\/Supplier<+TX;>;)TT;^TX;\n+\n+class name jdk\/incubator\/concurrent\/ScopedValue$Carrier\n+header extends java\/lang\/Object nestHost jdk\/incubator\/concurrent\/ScopedValue flags 31\n+innerclass innerClass jdk\/incubator\/concurrent\/ScopedValue$Carrier outerClass jdk\/incubator\/concurrent\/ScopedValue innerClassName Carrier flags 19\n+method name where descriptor (Ljdk\/incubator\/concurrent\/ScopedValue;Ljava\/lang\/Object;)Ljdk\/incubator\/concurrent\/ScopedValue$Carrier; flags 1 signature <T:Ljava\/lang\/Object;>(Ljdk\/incubator\/concurrent\/ScopedValue<TT;>;TT;)Ljdk\/incubator\/concurrent\/ScopedValue$Carrier;\n+method name get descriptor (Ljdk\/incubator\/concurrent\/ScopedValue;)Ljava\/lang\/Object; flags 1 signature <T:Ljava\/lang\/Object;>(Ljdk\/incubator\/concurrent\/ScopedValue<TT;>;)TT;\n+method name call descriptor (Ljava\/util\/concurrent\/Callable;)Ljava\/lang\/Object; thrownTypes java\/lang\/Exception flags 1 signature <R:Ljava\/lang\/Object;>(Ljava\/util\/concurrent\/Callable<+TR;>;)TR;\n+method name run descriptor (Ljava\/lang\/Runnable;)V flags 1\n+\n+class name jdk\/incubator\/concurrent\/StructuredTaskScope\n+header extends java\/lang\/Object implements java\/lang\/AutoCloseable nestMembers jdk\/incubator\/concurrent\/StructuredTaskScope$ShutdownOnFailure,jdk\/incubator\/concurrent\/StructuredTaskScope$ShutdownOnSuccess flags 21 signature <T:Ljava\/lang\/Object;>Ljava\/lang\/Object;Ljava\/lang\/AutoCloseable;\n+innerclass innerClass java\/lang\/Thread$Builder outerClass java\/lang\/Thread innerClassName Builder flags 609\n+innerclass innerClass java\/lang\/Thread$Builder$OfVirtual outerClass java\/lang\/Thread$Builder innerClassName OfVirtual flags 609\n+innerclass innerClass java\/util\/concurrent\/ConcurrentHashMap$KeySetView outerClass java\/util\/concurrent\/ConcurrentHashMap innerClassName KeySetView flags 19\n+innerclass innerClass java\/util\/concurrent\/Future$State outerClass java\/util\/concurrent\/Future innerClassName State flags 4019\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+innerclass innerClass jdk\/incubator\/concurrent\/StructuredTaskScope$ShutdownOnFailure outerClass jdk\/incubator\/concurrent\/StructuredTaskScope innerClassName ShutdownOnFailure flags 19\n+innerclass innerClass jdk\/incubator\/concurrent\/StructuredTaskScope$ShutdownOnSuccess outerClass jdk\/incubator\/concurrent\/StructuredTaskScope innerClassName ShutdownOnSuccess flags 19\n+\n+class name jdk\/incubator\/concurrent\/StructuredTaskScope$ShutdownOnFailure\n+header extends jdk\/incubator\/concurrent\/StructuredTaskScope nestHost jdk\/incubator\/concurrent\/StructuredTaskScope flags 31 signature Ljdk\/incubator\/concurrent\/StructuredTaskScope<Ljava\/lang\/Object;>;\n+innerclass innerClass java\/lang\/Thread$Builder outerClass java\/lang\/Thread innerClassName Builder flags 609\n+innerclass innerClass java\/lang\/Thread$Builder$OfVirtual outerClass java\/lang\/Thread$Builder innerClassName OfVirtual flags 609\n+innerclass innerClass java\/util\/concurrent\/Future$State outerClass java\/util\/concurrent\/Future innerClassName State flags 4019\n+innerclass innerClass jdk\/incubator\/concurrent\/StructuredTaskScope$ShutdownOnFailure outerClass jdk\/incubator\/concurrent\/StructuredTaskScope innerClassName ShutdownOnFailure flags 19\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name jdk\/incubator\/concurrent\/StructuredTaskScope$ShutdownOnSuccess\n+header extends jdk\/incubator\/concurrent\/StructuredTaskScope nestHost jdk\/incubator\/concurrent\/StructuredTaskScope flags 31 signature <T:Ljava\/lang\/Object;>Ljdk\/incubator\/concurrent\/StructuredTaskScope<TT;>;\n+innerclass innerClass java\/lang\/Thread$Builder outerClass java\/lang\/Thread innerClassName Builder flags 609\n+innerclass innerClass java\/lang\/Thread$Builder$OfVirtual outerClass java\/lang\/Thread$Builder innerClassName OfVirtual flags 609\n+innerclass innerClass java\/util\/concurrent\/Future$State outerClass java\/util\/concurrent\/Future innerClassName State flags 4019\n+innerclass innerClass jdk\/incubator\/concurrent\/StructuredTaskScope$ShutdownOnSuccess outerClass jdk\/incubator\/concurrent\/StructuredTaskScope innerClassName ShutdownOnSuccess flags 19\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/jdk.incubator.concurrent-K.sym.txt","additions":78,"deletions":0,"binary":false,"changes":78,"status":"added"},{"patch":"@@ -0,0 +1,133 @@\n+#\n+# Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+module name jdk.incubator.vector\n+header exports jdk\/incubator\/vector requires name\\u0020;java.base\\u0020;flags\\u0020;8000 target linux-amd64 resolution 9 flags 8000 classAnnotations @Ljdk\/internal\/javac\/ParticipatesInPreview;\n+\n+class name jdk\/incubator\/vector\/ByteVector\n+header extends jdk\/incubator\/vector\/AbstractVector flags 421 signature Ljdk\/incubator\/vector\/AbstractVector<Ljava\/lang\/Byte;>;\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Operator outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Operator flags 609\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfByte outerClass java\/lang\/foreign\/ValueLayout innerClassName OfByte flags 609\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorSpecies flags 9\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorPayload outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorPayload flags 9\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Unary outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Unary flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Comparison outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Comparison flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Associative outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Associative flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Binary outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Binary flags 609\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$Vector outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName Vector flags 9\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorMask outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorMask flags 9\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Ternary outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Ternary flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Test outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Test flags 609\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorShuffle outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorShuffle flags 9\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name jdk\/incubator\/vector\/DoubleVector\n+header extends jdk\/incubator\/vector\/AbstractVector flags 421 signature Ljdk\/incubator\/vector\/AbstractVector<Ljava\/lang\/Double;>;\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Operator outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Operator flags 609\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfDouble outerClass java\/lang\/foreign\/ValueLayout innerClassName OfDouble flags 609\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorSpecies flags 9\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorPayload outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorPayload flags 9\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Unary outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Unary flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Comparison outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Comparison flags 609\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$Vector outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName Vector flags 9\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorMask outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorMask flags 9\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Associative outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Associative flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Binary outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Binary flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Ternary outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Ternary flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Test outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Test flags 609\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorShuffle outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorShuffle flags 9\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name jdk\/incubator\/vector\/FloatVector\n+header extends jdk\/incubator\/vector\/AbstractVector flags 421 signature Ljdk\/incubator\/vector\/AbstractVector<Ljava\/lang\/Float;>;\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Operator outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Operator flags 609\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfFloat outerClass java\/lang\/foreign\/ValueLayout innerClassName OfFloat flags 609\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorSpecies flags 9\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorPayload outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorPayload flags 9\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Unary outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Unary flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Comparison outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Comparison flags 609\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$Vector outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName Vector flags 9\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorMask outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorMask flags 9\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Associative outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Associative flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Binary outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Binary flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Ternary outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Ternary flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Test outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Test flags 609\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorShuffle outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorShuffle flags 9\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name jdk\/incubator\/vector\/IntVector\n+header extends jdk\/incubator\/vector\/AbstractVector flags 421 signature Ljdk\/incubator\/vector\/AbstractVector<Ljava\/lang\/Integer;>;\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Operator outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Operator flags 609\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfInt outerClass java\/lang\/foreign\/ValueLayout innerClassName OfInt flags 609\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorSpecies flags 9\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorPayload outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorPayload flags 9\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Unary outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Unary flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Comparison outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Comparison flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Associative outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Associative flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Binary outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Binary flags 609\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$Vector outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName Vector flags 9\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorMask outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorMask flags 9\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Ternary outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Ternary flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Test outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Test flags 609\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorShuffle outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorShuffle flags 9\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name jdk\/incubator\/vector\/LongVector\n+header extends jdk\/incubator\/vector\/AbstractVector flags 421 signature Ljdk\/incubator\/vector\/AbstractVector<Ljava\/lang\/Long;>;\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Operator outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Operator flags 609\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfLong outerClass java\/lang\/foreign\/ValueLayout innerClassName OfLong flags 609\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorSpecies flags 9\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorPayload outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorPayload flags 9\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Unary outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Unary flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Comparison outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Comparison flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Associative outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Associative flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Binary outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Binary flags 609\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$Vector outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName Vector flags 9\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorMask outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorMask flags 9\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Ternary outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Ternary flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Test outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Test flags 609\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorShuffle outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorShuffle flags 9\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name jdk\/incubator\/vector\/ShortVector\n+header extends jdk\/incubator\/vector\/AbstractVector flags 421 signature Ljdk\/incubator\/vector\/AbstractVector<Ljava\/lang\/Short;>;\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Operator outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Operator flags 609\n+innerclass innerClass java\/lang\/foreign\/ValueLayout$OfShort outerClass java\/lang\/foreign\/ValueLayout innerClassName OfShort flags 609\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorSpecies flags 9\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorPayload outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorPayload flags 9\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Unary outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Unary flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Comparison outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Comparison flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Associative outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Associative flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Binary outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Binary flags 609\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$Vector outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName Vector flags 9\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorMask outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorMask flags 9\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Ternary outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Ternary flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Test outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Test flags 609\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorShuffle outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorShuffle flags 9\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/jdk.incubator.vector-K.sym.txt","additions":133,"deletions":0,"binary":false,"changes":133,"status":"added"},{"patch":"@@ -0,0 +1,34 @@\n+#\n+# Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+module name jdk.jartool\n+header exports com\/sun\/jarsigner,jdk\/security\/jarsigner requires name\\u0020;java.base\\u0020;flags\\u0020;8000,name\\u0020;jdk.internal.opt\\u0020;flags\\u0020;0 provides interface\\u0020;java\/util\/spi\/ToolProvider\\u0020;impls\\u0020;sun\/tools\/jar\/JarToolProvider target linux-amd64 flags 8000\n+\n+class name jdk\/security\/jarsigner\/JarSignerException\n+header extends java\/lang\/RuntimeException flags 21\n+\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/jdk.jartool-K.sym.txt","additions":34,"deletions":0,"binary":false,"changes":34,"status":"added"},{"patch":"","filename":"src\/jdk.compiler\/share\/data\/symbols\/jdk.javadoc-K.sym.txt","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.compiler\/share\/data\/symbols\/jdk.javadoc-J.sym.txt","status":"copied"},{"patch":"","filename":"src\/jdk.compiler\/share\/data\/symbols\/jdk.jconsole-K.sym.txt","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.compiler\/share\/data\/symbols\/jdk.jconsole-J.sym.txt","status":"copied"},{"patch":"@@ -0,0 +1,395 @@\n+#\n+# Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+class name com\/sun\/jdi\/AbsentInformationException\n+header extends java\/lang\/Exception flags 21\n+\n+class name com\/sun\/jdi\/Accessible\n+header extends java\/lang\/Object flags 601\n+\n+class name com\/sun\/jdi\/ArrayReference\n+header extends java\/lang\/Object implements com\/sun\/jdi\/ObjectReference flags 601\n+\n+class name com\/sun\/jdi\/ArrayType\n+header extends java\/lang\/Object implements com\/sun\/jdi\/ReferenceType flags 601\n+\n+class name com\/sun\/jdi\/BooleanType\n+header extends java\/lang\/Object implements com\/sun\/jdi\/PrimitiveType flags 601\n+\n+class name com\/sun\/jdi\/BooleanValue\n+header extends java\/lang\/Object implements com\/sun\/jdi\/PrimitiveValue flags 601\n+\n+class name com\/sun\/jdi\/Bootstrap\n+header extends java\/lang\/Object flags 21\n+\n+class name com\/sun\/jdi\/ByteType\n+header extends java\/lang\/Object implements com\/sun\/jdi\/PrimitiveType flags 601\n+\n+class name com\/sun\/jdi\/ByteValue\n+header extends java\/lang\/Object implements com\/sun\/jdi\/PrimitiveValue,java\/lang\/Comparable flags 601 signature Ljava\/lang\/Object;Lcom\/sun\/jdi\/PrimitiveValue;Ljava\/lang\/Comparable<Lcom\/sun\/jdi\/ByteValue;>;\n+\n+class name com\/sun\/jdi\/CharType\n+header extends java\/lang\/Object implements com\/sun\/jdi\/PrimitiveType flags 601\n+\n+class name com\/sun\/jdi\/CharValue\n+header extends java\/lang\/Object implements com\/sun\/jdi\/PrimitiveValue,java\/lang\/Comparable flags 601 signature Ljava\/lang\/Object;Lcom\/sun\/jdi\/PrimitiveValue;Ljava\/lang\/Comparable<Lcom\/sun\/jdi\/CharValue;>;\n+\n+class name com\/sun\/jdi\/ClassLoaderReference\n+header extends java\/lang\/Object implements com\/sun\/jdi\/ObjectReference flags 601\n+\n+class name com\/sun\/jdi\/ClassNotLoadedException\n+header extends java\/lang\/Exception flags 21\n+\n+class name com\/sun\/jdi\/ClassNotPreparedException\n+header extends java\/lang\/RuntimeException flags 21\n+\n+class name com\/sun\/jdi\/ClassObjectReference\n+header extends java\/lang\/Object implements com\/sun\/jdi\/ObjectReference flags 601\n+\n+class name com\/sun\/jdi\/ClassType\n+header extends java\/lang\/Object implements com\/sun\/jdi\/ReferenceType flags 601\n+\n+class name com\/sun\/jdi\/DoubleType\n+header extends java\/lang\/Object implements com\/sun\/jdi\/PrimitiveType flags 601\n+\n+class name com\/sun\/jdi\/DoubleValue\n+header extends java\/lang\/Object implements com\/sun\/jdi\/PrimitiveValue,java\/lang\/Comparable flags 601 signature Ljava\/lang\/Object;Lcom\/sun\/jdi\/PrimitiveValue;Ljava\/lang\/Comparable<Lcom\/sun\/jdi\/DoubleValue;>;\n+\n+class name com\/sun\/jdi\/Field\n+header extends java\/lang\/Object implements com\/sun\/jdi\/TypeComponent,java\/lang\/Comparable flags 601 signature Ljava\/lang\/Object;Lcom\/sun\/jdi\/TypeComponent;Ljava\/lang\/Comparable<Lcom\/sun\/jdi\/Field;>;\n+\n+class name com\/sun\/jdi\/FloatType\n+header extends java\/lang\/Object implements com\/sun\/jdi\/PrimitiveType flags 601\n+\n+class name com\/sun\/jdi\/FloatValue\n+header extends java\/lang\/Object implements com\/sun\/jdi\/PrimitiveValue,java\/lang\/Comparable flags 601 signature Ljava\/lang\/Object;Lcom\/sun\/jdi\/PrimitiveValue;Ljava\/lang\/Comparable<Lcom\/sun\/jdi\/FloatValue;>;\n+\n+class name com\/sun\/jdi\/IncompatibleThreadStateException\n+header extends java\/lang\/Exception flags 21\n+\n+class name com\/sun\/jdi\/InconsistentDebugInfoException\n+header extends java\/lang\/RuntimeException flags 21\n+\n+class name com\/sun\/jdi\/IntegerType\n+header extends java\/lang\/Object implements com\/sun\/jdi\/PrimitiveType flags 601\n+\n+class name com\/sun\/jdi\/IntegerValue\n+header extends java\/lang\/Object implements com\/sun\/jdi\/PrimitiveValue,java\/lang\/Comparable flags 601 signature Ljava\/lang\/Object;Lcom\/sun\/jdi\/PrimitiveValue;Ljava\/lang\/Comparable<Lcom\/sun\/jdi\/IntegerValue;>;\n+\n+class name com\/sun\/jdi\/InterfaceType\n+header extends java\/lang\/Object implements com\/sun\/jdi\/ReferenceType flags 601\n+\n+class name com\/sun\/jdi\/InternalException\n+header extends java\/lang\/RuntimeException flags 21\n+\n+class name com\/sun\/jdi\/InvalidCodeIndexException\n+header extends java\/lang\/RuntimeException flags 21 deprecated true runtimeAnnotations @Ljava\/lang\/Deprecated;\n+\n+class name com\/sun\/jdi\/InvalidLineNumberException\n+header extends java\/lang\/RuntimeException flags 21 deprecated true runtimeAnnotations @Ljava\/lang\/Deprecated;\n+\n+class name com\/sun\/jdi\/InvalidModuleException\n+header extends java\/lang\/RuntimeException flags 21\n+\n+class name com\/sun\/jdi\/InvalidStackFrameException\n+header extends java\/lang\/RuntimeException flags 21\n+\n+class name com\/sun\/jdi\/InvalidTypeException\n+header extends java\/lang\/Exception flags 21\n+\n+class name com\/sun\/jdi\/InvocationException\n+header extends java\/lang\/Exception flags 21\n+\n+class name com\/sun\/jdi\/JDIPermission\n+header extends java\/security\/BasicPermission flags 31\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name com\/sun\/jdi\/LocalVariable\n+header extends java\/lang\/Object implements com\/sun\/jdi\/Mirror,java\/lang\/Comparable flags 601 signature Ljava\/lang\/Object;Lcom\/sun\/jdi\/Mirror;Ljava\/lang\/Comparable<Lcom\/sun\/jdi\/LocalVariable;>;\n+\n+class name com\/sun\/jdi\/Locatable\n+header extends java\/lang\/Object flags 601\n+\n+class name com\/sun\/jdi\/Location\n+header extends java\/lang\/Object implements com\/sun\/jdi\/Mirror,java\/lang\/Comparable flags 601 signature Ljava\/lang\/Object;Lcom\/sun\/jdi\/Mirror;Ljava\/lang\/Comparable<Lcom\/sun\/jdi\/Location;>;\n+\n+class name com\/sun\/jdi\/LongType\n+header extends java\/lang\/Object implements com\/sun\/jdi\/PrimitiveType flags 601\n+\n+class name com\/sun\/jdi\/LongValue\n+header extends java\/lang\/Object implements com\/sun\/jdi\/PrimitiveValue,java\/lang\/Comparable flags 601 signature Ljava\/lang\/Object;Lcom\/sun\/jdi\/PrimitiveValue;Ljava\/lang\/Comparable<Lcom\/sun\/jdi\/LongValue;>;\n+\n+class name com\/sun\/jdi\/Method\n+header extends java\/lang\/Object implements com\/sun\/jdi\/TypeComponent,com\/sun\/jdi\/Locatable,java\/lang\/Comparable flags 601 signature Ljava\/lang\/Object;Lcom\/sun\/jdi\/TypeComponent;Lcom\/sun\/jdi\/Locatable;Ljava\/lang\/Comparable<Lcom\/sun\/jdi\/Method;>;\n+\n+class name com\/sun\/jdi\/Mirror\n+header extends java\/lang\/Object flags 601\n+\n+class name com\/sun\/jdi\/ModuleReference\n+header extends java\/lang\/Object implements com\/sun\/jdi\/ObjectReference flags 601\n+\n+class name com\/sun\/jdi\/MonitorInfo\n+header extends java\/lang\/Object implements com\/sun\/jdi\/Mirror flags 601\n+\n+class name com\/sun\/jdi\/ObjectCollectedException\n+header extends java\/lang\/RuntimeException flags 21\n+\n+class name com\/sun\/jdi\/ObjectReference\n+header extends java\/lang\/Object implements com\/sun\/jdi\/Value flags 601\n+\n+class name com\/sun\/jdi\/OpaqueFrameException\n+header extends java\/lang\/RuntimeException sealed true flags 21\n+\n+class name com\/sun\/jdi\/PathSearchingVirtualMachine\n+header extends java\/lang\/Object implements com\/sun\/jdi\/VirtualMachine flags 601\n+\n+class name com\/sun\/jdi\/PrimitiveType\n+header extends java\/lang\/Object implements com\/sun\/jdi\/Type flags 601\n+\n+class name com\/sun\/jdi\/PrimitiveValue\n+header extends java\/lang\/Object implements com\/sun\/jdi\/Value flags 601\n+\n+class name com\/sun\/jdi\/ReferenceType\n+header extends java\/lang\/Object implements com\/sun\/jdi\/Type,java\/lang\/Comparable,com\/sun\/jdi\/Accessible flags 601 signature Ljava\/lang\/Object;Lcom\/sun\/jdi\/Type;Ljava\/lang\/Comparable<Lcom\/sun\/jdi\/ReferenceType;>;Lcom\/sun\/jdi\/Accessible;\n+\n+class name com\/sun\/jdi\/ShortType\n+header extends java\/lang\/Object implements com\/sun\/jdi\/PrimitiveType flags 601\n+\n+class name com\/sun\/jdi\/ShortValue\n+header extends java\/lang\/Object implements com\/sun\/jdi\/PrimitiveValue,java\/lang\/Comparable flags 601 signature Ljava\/lang\/Object;Lcom\/sun\/jdi\/PrimitiveValue;Ljava\/lang\/Comparable<Lcom\/sun\/jdi\/ShortValue;>;\n+\n+class name com\/sun\/jdi\/StackFrame\n+header extends java\/lang\/Object implements com\/sun\/jdi\/Mirror,com\/sun\/jdi\/Locatable flags 601\n+\n+class name com\/sun\/jdi\/StringReference\n+header extends java\/lang\/Object implements com\/sun\/jdi\/ObjectReference flags 601\n+\n+class name com\/sun\/jdi\/ThreadGroupReference\n+header extends java\/lang\/Object implements com\/sun\/jdi\/ObjectReference flags 601\n+\n+class name com\/sun\/jdi\/ThreadReference\n+header extends java\/lang\/Object implements com\/sun\/jdi\/ObjectReference flags 601\n+\n+class name com\/sun\/jdi\/Type\n+header extends java\/lang\/Object implements com\/sun\/jdi\/Mirror flags 601\n+\n+class name com\/sun\/jdi\/TypeComponent\n+header extends java\/lang\/Object implements com\/sun\/jdi\/Mirror,com\/sun\/jdi\/Accessible flags 601\n+\n+class name com\/sun\/jdi\/VMCannotBeModifiedException\n+header extends java\/lang\/UnsupportedOperationException flags 21\n+\n+class name com\/sun\/jdi\/VMDisconnectedException\n+header extends java\/lang\/RuntimeException flags 21\n+\n+class name com\/sun\/jdi\/VMMismatchException\n+header extends java\/lang\/RuntimeException flags 21\n+\n+class name com\/sun\/jdi\/VMOutOfMemoryException\n+header extends java\/lang\/RuntimeException flags 21\n+\n+class name com\/sun\/jdi\/Value\n+header extends java\/lang\/Object implements com\/sun\/jdi\/Mirror flags 601\n+\n+class name com\/sun\/jdi\/VirtualMachine\n+header extends java\/lang\/Object implements com\/sun\/jdi\/Mirror flags 601\n+\n+class name com\/sun\/jdi\/VirtualMachineManager\n+header extends java\/lang\/Object flags 601\n+\n+class name com\/sun\/jdi\/VoidType\n+header extends java\/lang\/Object implements com\/sun\/jdi\/Type flags 601\n+\n+class name com\/sun\/jdi\/VoidValue\n+header extends java\/lang\/Object implements com\/sun\/jdi\/Value flags 601\n+\n+class name com\/sun\/jdi\/connect\/AttachingConnector\n+header extends java\/lang\/Object implements com\/sun\/jdi\/connect\/Connector flags 601\n+innerclass innerClass com\/sun\/jdi\/connect\/Connector$Argument outerClass com\/sun\/jdi\/connect\/Connector innerClassName Argument flags 609\n+\n+class name com\/sun\/jdi\/connect\/IllegalConnectorArgumentsException\n+header extends java\/lang\/Exception flags 21\n+\n+class name com\/sun\/jdi\/connect\/LaunchingConnector\n+header extends java\/lang\/Object implements com\/sun\/jdi\/connect\/Connector flags 601\n+innerclass innerClass com\/sun\/jdi\/connect\/Connector$Argument outerClass com\/sun\/jdi\/connect\/Connector innerClassName Argument flags 609\n+\n+class name com\/sun\/jdi\/connect\/ListeningConnector\n+header extends java\/lang\/Object implements com\/sun\/jdi\/connect\/Connector flags 601\n+innerclass innerClass com\/sun\/jdi\/connect\/Connector$Argument outerClass com\/sun\/jdi\/connect\/Connector innerClassName Argument flags 609\n+\n+class name com\/sun\/jdi\/connect\/Transport\n+header extends java\/lang\/Object flags 601\n+\n+class name com\/sun\/jdi\/connect\/TransportTimeoutException\n+header extends java\/io\/IOException flags 21\n+\n+class name com\/sun\/jdi\/connect\/VMStartException\n+header extends java\/lang\/Exception flags 21\n+\n+class name com\/sun\/jdi\/connect\/spi\/ClosedConnectionException\n+header extends java\/io\/IOException flags 21\n+\n+class name com\/sun\/jdi\/connect\/spi\/Connection\n+header extends java\/lang\/Object flags 421\n+\n+class name com\/sun\/jdi\/event\/AccessWatchpointEvent\n+header extends java\/lang\/Object implements com\/sun\/jdi\/event\/WatchpointEvent flags 601\n+\n+class name com\/sun\/jdi\/event\/BreakpointEvent\n+header extends java\/lang\/Object implements com\/sun\/jdi\/event\/LocatableEvent flags 601\n+\n+class name com\/sun\/jdi\/event\/ClassPrepareEvent\n+header extends java\/lang\/Object implements com\/sun\/jdi\/event\/Event flags 601\n+\n+class name com\/sun\/jdi\/event\/ClassUnloadEvent\n+header extends java\/lang\/Object implements com\/sun\/jdi\/event\/Event flags 601\n+\n+class name com\/sun\/jdi\/event\/Event\n+header extends java\/lang\/Object implements com\/sun\/jdi\/Mirror flags 601\n+\n+class name com\/sun\/jdi\/event\/EventIterator\n+header extends java\/lang\/Object implements java\/util\/Iterator flags 601 signature Ljava\/lang\/Object;Ljava\/util\/Iterator<Lcom\/sun\/jdi\/event\/Event;>;\n+\n+class name com\/sun\/jdi\/event\/EventQueue\n+header extends java\/lang\/Object implements com\/sun\/jdi\/Mirror flags 601\n+\n+class name com\/sun\/jdi\/event\/EventSet\n+header extends java\/lang\/Object implements com\/sun\/jdi\/Mirror,java\/util\/Set flags 601 signature Ljava\/lang\/Object;Lcom\/sun\/jdi\/Mirror;Ljava\/util\/Set<Lcom\/sun\/jdi\/event\/Event;>;\n+\n+class name com\/sun\/jdi\/event\/ExceptionEvent\n+header extends java\/lang\/Object implements com\/sun\/jdi\/event\/LocatableEvent flags 601\n+\n+class name com\/sun\/jdi\/event\/LocatableEvent\n+header extends java\/lang\/Object implements com\/sun\/jdi\/event\/Event,com\/sun\/jdi\/Locatable flags 601\n+\n+class name com\/sun\/jdi\/event\/MethodEntryEvent\n+header extends java\/lang\/Object implements com\/sun\/jdi\/event\/LocatableEvent flags 601\n+\n+class name com\/sun\/jdi\/event\/MethodExitEvent\n+header extends java\/lang\/Object implements com\/sun\/jdi\/event\/LocatableEvent flags 601\n+\n+class name com\/sun\/jdi\/event\/ModificationWatchpointEvent\n+header extends java\/lang\/Object implements com\/sun\/jdi\/event\/WatchpointEvent flags 601\n+\n+class name com\/sun\/jdi\/event\/MonitorContendedEnterEvent\n+header extends java\/lang\/Object implements com\/sun\/jdi\/event\/LocatableEvent flags 601\n+\n+class name com\/sun\/jdi\/event\/MonitorContendedEnteredEvent\n+header extends java\/lang\/Object implements com\/sun\/jdi\/event\/LocatableEvent flags 601\n+\n+class name com\/sun\/jdi\/event\/MonitorWaitEvent\n+header extends java\/lang\/Object implements com\/sun\/jdi\/event\/LocatableEvent flags 601\n+\n+class name com\/sun\/jdi\/event\/MonitorWaitedEvent\n+header extends java\/lang\/Object implements com\/sun\/jdi\/event\/LocatableEvent flags 601\n+\n+class name com\/sun\/jdi\/event\/StepEvent\n+header extends java\/lang\/Object implements com\/sun\/jdi\/event\/LocatableEvent flags 601\n+\n+class name com\/sun\/jdi\/event\/ThreadDeathEvent\n+header extends java\/lang\/Object implements com\/sun\/jdi\/event\/Event flags 601\n+\n+class name com\/sun\/jdi\/event\/ThreadStartEvent\n+header extends java\/lang\/Object implements com\/sun\/jdi\/event\/Event flags 601\n+\n+class name com\/sun\/jdi\/event\/VMDeathEvent\n+header extends java\/lang\/Object implements com\/sun\/jdi\/event\/Event flags 601\n+\n+class name com\/sun\/jdi\/event\/VMDisconnectEvent\n+header extends java\/lang\/Object implements com\/sun\/jdi\/event\/Event flags 601\n+\n+class name com\/sun\/jdi\/event\/VMStartEvent\n+header extends java\/lang\/Object implements com\/sun\/jdi\/event\/Event flags 601\n+\n+class name com\/sun\/jdi\/event\/WatchpointEvent\n+header extends java\/lang\/Object implements com\/sun\/jdi\/event\/LocatableEvent flags 601\n+\n+class name com\/sun\/jdi\/request\/AccessWatchpointRequest\n+header extends java\/lang\/Object implements com\/sun\/jdi\/request\/WatchpointRequest flags 601\n+\n+class name com\/sun\/jdi\/request\/BreakpointRequest\n+header extends java\/lang\/Object implements com\/sun\/jdi\/request\/EventRequest,com\/sun\/jdi\/Locatable flags 601\n+\n+class name com\/sun\/jdi\/request\/ClassPrepareRequest\n+header extends java\/lang\/Object implements com\/sun\/jdi\/request\/EventRequest flags 601\n+\n+class name com\/sun\/jdi\/request\/ClassUnloadRequest\n+header extends java\/lang\/Object implements com\/sun\/jdi\/request\/EventRequest flags 601\n+\n+class name com\/sun\/jdi\/request\/DuplicateRequestException\n+header extends java\/lang\/RuntimeException flags 21\n+\n+class name com\/sun\/jdi\/request\/EventRequest\n+header extends java\/lang\/Object implements com\/sun\/jdi\/Mirror flags 601\n+\n+class name com\/sun\/jdi\/request\/EventRequestManager\n+header extends java\/lang\/Object implements com\/sun\/jdi\/Mirror flags 601\n+\n+class name com\/sun\/jdi\/request\/ExceptionRequest\n+header extends java\/lang\/Object implements com\/sun\/jdi\/request\/EventRequest flags 601\n+\n+class name com\/sun\/jdi\/request\/InvalidRequestStateException\n+header extends java\/lang\/RuntimeException flags 21\n+\n+class name com\/sun\/jdi\/request\/MethodEntryRequest\n+header extends java\/lang\/Object implements com\/sun\/jdi\/request\/EventRequest flags 601\n+\n+class name com\/sun\/jdi\/request\/MethodExitRequest\n+header extends java\/lang\/Object implements com\/sun\/jdi\/request\/EventRequest flags 601\n+\n+class name com\/sun\/jdi\/request\/ModificationWatchpointRequest\n+header extends java\/lang\/Object implements com\/sun\/jdi\/request\/WatchpointRequest flags 601\n+\n+class name com\/sun\/jdi\/request\/MonitorContendedEnterRequest\n+header extends java\/lang\/Object implements com\/sun\/jdi\/request\/EventRequest flags 601\n+\n+class name com\/sun\/jdi\/request\/MonitorContendedEnteredRequest\n+header extends java\/lang\/Object implements com\/sun\/jdi\/request\/EventRequest flags 601\n+\n+class name com\/sun\/jdi\/request\/MonitorWaitRequest\n+header extends java\/lang\/Object implements com\/sun\/jdi\/request\/EventRequest flags 601\n+\n+class name com\/sun\/jdi\/request\/MonitorWaitedRequest\n+header extends java\/lang\/Object implements com\/sun\/jdi\/request\/EventRequest flags 601\n+\n+class name com\/sun\/jdi\/request\/StepRequest\n+header extends java\/lang\/Object implements com\/sun\/jdi\/request\/EventRequest flags 601\n+\n+class name com\/sun\/jdi\/request\/ThreadDeathRequest\n+header extends java\/lang\/Object implements com\/sun\/jdi\/request\/EventRequest flags 601\n+\n+class name com\/sun\/jdi\/request\/ThreadStartRequest\n+header extends java\/lang\/Object implements com\/sun\/jdi\/request\/EventRequest flags 601\n+\n+class name com\/sun\/jdi\/request\/VMDeathRequest\n+header extends java\/lang\/Object implements com\/sun\/jdi\/request\/EventRequest flags 601\n+\n+class name com\/sun\/jdi\/request\/WatchpointRequest\n+header extends java\/lang\/Object implements com\/sun\/jdi\/request\/EventRequest flags 601\n+\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/jdk.jdi-K.sym.txt","additions":395,"deletions":0,"binary":false,"changes":395,"status":"added"},{"patch":"@@ -0,0 +1,34 @@\n+#\n+# Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+class name jdk\/jfr\/consumer\/RecordedObject\n+header extends java\/lang\/Object sealed true flags 21\n+\n+class name jdk\/jfr\/consumer\/RecordingStream\n+method name stop descriptor ()Z flags 1\n+\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/jdk.jfr-K.sym.txt","additions":34,"deletions":0,"binary":false,"changes":34,"status":"added"},{"patch":"@@ -0,0 +1,31 @@\n+#\n+# Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+module name jdk.jlink\n+header requires name\\u0020;java.base\\u0020;flags\\u0020;8000,name\\u0020;jdk.internal.opt\\u0020;flags\\u0020;0,name\\u0020;jdk.jdeps\\u0020;flags\\u0020;0 uses jdk\/tools\/jlink\/plugin\/Plugin provides interface\\u0020;java\/util\/spi\/ToolProvider\\u0020;impls\\u0020;jdk\/tools\/jmod\/Main$JmodToolProvider\\u005C;u002C;jdk\/tools\/jlink\/internal\/Main$JlinkToolProvider,interface\\u0020;jdk\/tools\/jlink\/plugin\/Plugin\\u0020;impls\\u0020;jdk\/tools\/jlink\/internal\/plugins\/DefaultStripDebugPlugin\\u005C;u002C;jdk\/tools\/jlink\/internal\/plugins\/StripJavaDebugAttributesPlugin\\u005C;u002C;jdk\/tools\/jlink\/internal\/plugins\/ExcludePlugin\\u005C;u002C;jdk\/tools\/jlink\/internal\/plugins\/ExcludeFilesPlugin\\u005C;u002C;jdk\/tools\/jlink\/internal\/plugins\/ExcludeJmodSectionPlugin\\u005C;u002C;jdk\/tools\/jlink\/internal\/plugins\/LegalNoticeFilePlugin\\u005C;u002C;jdk\/tools\/jlink\/internal\/plugins\/SystemModulesPlugin\\u005C;u002C;jdk\/tools\/jlink\/internal\/plugins\/StripNativeCommandsPlugin\\u005C;u002C;jdk\/tools\/jlink\/internal\/plugins\/OrderResourcesPlugin\\u005C;u002C;jdk\/tools\/jlink\/internal\/plugins\/DefaultCompressPlugin\\u005C;u002C;jdk\/tools\/jlink\/internal\/plugins\/ExcludeVMPlugin\\u005C;u002C;jdk\/tools\/jlink\/internal\/plugins\/IncludeLocalesPlugin\\u005C;u002C;jdk\/tools\/jlink\/internal\/plugins\/GenerateJLIClassesPlugin\\u005C;u002C;jdk\/tools\/jlink\/internal\/plugins\/ReleaseInfoPlugin\\u005C;u002C;jdk\/tools\/jlink\/internal\/plugins\/AddOptionsPlugin\\u005C;u002C;jdk\/tools\/jlink\/internal\/plugins\/VendorBugURLPlugin\\u005C;u002C;jdk\/tools\/jlink\/internal\/plugins\/VendorVMBugURLPlugin\\u005C;u002C;jdk\/tools\/jlink\/internal\/plugins\/VendorVersionPlugin\\u005C;u002C;jdk\/tools\/jlink\/internal\/plugins\/CDSPlugin\\u005C;u002C;jdk\/tools\/jlink\/internal\/plugins\/SaveJlinkArgfilesPlugin\\u005C;u002C;jdk\/tools\/jlink\/internal\/plugins\/StripNativeDebugSymbolsPlugin target linux-amd64 flags 8000\n+\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/jdk.jlink-K.sym.txt","additions":31,"deletions":0,"binary":false,"changes":31,"status":"added"},{"patch":"@@ -0,0 +1,31 @@\n+#\n+# Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+module name jdk.jpackage\n+header requires name\\u0020;java.base\\u0020;flags\\u0020;8000,name\\u0020;jdk.internal.opt\\u0020;flags\\u0020;0,name\\u0020;jdk.jlink\\u0020;flags\\u0020;0,name\\u0020;java.desktop\\u0020;flags\\u0020;0 uses jdk\/jpackage\/internal\/Bundler,jdk\/jpackage\/internal\/Bundlers provides interface\\u0020;java\/util\/spi\/ToolProvider\\u0020;impls\\u0020;jdk\/jpackage\/internal\/JPackageToolProvider,interface\\u0020;jdk\/jpackage\/internal\/Bundler\\u0020;impls\\u0020;jdk\/jpackage\/internal\/LinuxAppBundler\\u005C;u002C;jdk\/jpackage\/internal\/LinuxDebBundler\\u005C;u002C;jdk\/jpackage\/internal\/LinuxRpmBundler,interface\\u0020;jdk\/jpackage\/internal\/Bundlers\\u0020;impls\\u0020;jdk\/jpackage\/internal\/BasicBundlers target linux-amd64 flags 8000\n+\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/jdk.jpackage-K.sym.txt","additions":31,"deletions":0,"binary":false,"changes":31,"status":"added"},{"patch":"@@ -0,0 +1,135 @@\n+#\n+# Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+class name jdk\/jshell\/DeclarationSnippet\n+header extends jdk\/jshell\/PersistentSnippet flags 421\n+innerclass innerClass jdk\/jshell\/Snippet$SubKind outerClass jdk\/jshell\/Snippet innerClassName SubKind flags 4019\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name jdk\/jshell\/Diag\n+header extends java\/lang\/Object flags 421\n+\n+class name jdk\/jshell\/EvalException\n+header extends jdk\/jshell\/JShellException flags 21\n+\n+class name jdk\/jshell\/ExpressionSnippet\n+header extends jdk\/jshell\/Snippet flags 21\n+innerclass innerClass jdk\/jshell\/Snippet$SubKind outerClass jdk\/jshell\/Snippet innerClassName SubKind flags 4019\n+\n+class name jdk\/jshell\/ImportSnippet\n+header extends jdk\/jshell\/PersistentSnippet flags 21\n+innerclass innerClass jdk\/jshell\/Snippet$SubKind outerClass jdk\/jshell\/Snippet innerClassName SubKind flags 4019\n+\n+class name jdk\/jshell\/JShellException\n+header extends java\/lang\/Exception flags 21\n+\n+class name jdk\/jshell\/MethodSnippet\n+header extends jdk\/jshell\/DeclarationSnippet flags 21\n+innerclass innerClass jdk\/jshell\/Snippet$SubKind outerClass jdk\/jshell\/Snippet innerClassName SubKind flags 4019\n+\n+class name jdk\/jshell\/PersistentSnippet\n+header extends jdk\/jshell\/Snippet flags 421\n+innerclass innerClass jdk\/jshell\/Snippet$SubKind outerClass jdk\/jshell\/Snippet innerClassName SubKind flags 4019\n+\n+class name jdk\/jshell\/SnippetEvent\n+header extends java\/lang\/Object flags 21\n+innerclass innerClass jdk\/jshell\/Snippet$Status outerClass jdk\/jshell\/Snippet innerClassName Status flags 4019\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name jdk\/jshell\/StatementSnippet\n+header extends jdk\/jshell\/Snippet flags 21\n+innerclass innerClass jdk\/jshell\/Snippet$SubKind outerClass jdk\/jshell\/Snippet innerClassName SubKind flags 4019\n+\n+class name jdk\/jshell\/TypeDeclSnippet\n+header extends jdk\/jshell\/DeclarationSnippet flags 21\n+innerclass innerClass jdk\/jshell\/Snippet$SubKind outerClass jdk\/jshell\/Snippet innerClassName SubKind flags 4019\n+\n+class name jdk\/jshell\/execution\/DirectExecutionControl\n+header extends java\/lang\/Object implements jdk\/jshell\/spi\/ExecutionControl flags 21\n+innerclass innerClass jdk\/jshell\/spi\/ExecutionControl$ClassBytecodes outerClass jdk\/jshell\/spi\/ExecutionControl innerClassName ClassBytecodes flags 19\n+innerclass innerClass jdk\/jshell\/spi\/ExecutionControl$NotImplementedException outerClass jdk\/jshell\/spi\/ExecutionControl innerClassName NotImplementedException flags 9\n+innerclass innerClass jdk\/jshell\/spi\/ExecutionControl$InternalException outerClass jdk\/jshell\/spi\/ExecutionControl innerClassName InternalException flags 9\n+innerclass innerClass jdk\/jshell\/spi\/ExecutionControl$RunException outerClass jdk\/jshell\/spi\/ExecutionControl innerClassName RunException flags 409\n+innerclass innerClass jdk\/jshell\/spi\/ExecutionControl$EngineTerminationException outerClass jdk\/jshell\/spi\/ExecutionControl innerClassName EngineTerminationException flags 9\n+innerclass innerClass java\/util\/PrimitiveIterator$OfInt outerClass java\/util\/PrimitiveIterator innerClassName OfInt flags 609\n+innerclass innerClass java\/lang\/Character$UnicodeBlock outerClass java\/lang\/Character innerClassName UnicodeBlock flags 19\n+innerclass innerClass jdk\/jshell\/spi\/ExecutionControl$ResolutionException outerClass jdk\/jshell\/spi\/ExecutionControl innerClassName ResolutionException flags 9\n+innerclass innerClass jdk\/jshell\/spi\/ExecutionControl$UserException outerClass jdk\/jshell\/spi\/ExecutionControl innerClassName UserException flags 9\n+innerclass innerClass jdk\/jshell\/spi\/ExecutionControl$ClassInstallException outerClass jdk\/jshell\/spi\/ExecutionControl innerClassName ClassInstallException flags 9\n+innerclass innerClass jdk\/jshell\/spi\/ExecutionControl$ExecutionControlException outerClass jdk\/jshell\/spi\/ExecutionControl innerClassName ExecutionControlException flags 409\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name jdk\/jshell\/execution\/FailOverExecutionControlProvider\n+header extends java\/lang\/Object implements jdk\/jshell\/spi\/ExecutionControlProvider flags 21\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name jdk\/jshell\/execution\/JdiDefaultExecutionControl\n+header extends jdk\/jshell\/execution\/JdiExecutionControl flags 21\n+innerclass innerClass jdk\/jshell\/spi\/ExecutionControl$InternalException outerClass jdk\/jshell\/spi\/ExecutionControl innerClassName InternalException flags 9\n+innerclass innerClass jdk\/jshell\/spi\/ExecutionControl$EngineTerminationException outerClass jdk\/jshell\/spi\/ExecutionControl innerClassName EngineTerminationException flags 9\n+innerclass innerClass jdk\/jshell\/spi\/ExecutionControl$RunException outerClass jdk\/jshell\/spi\/ExecutionControl innerClassName RunException flags 409\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name jdk\/jshell\/execution\/JdiExecutionControlProvider\n+header extends java\/lang\/Object implements jdk\/jshell\/spi\/ExecutionControlProvider flags 21\n+\n+class name jdk\/jshell\/execution\/LoaderDelegate\n+header extends java\/lang\/Object flags 601\n+innerclass innerClass jdk\/jshell\/spi\/ExecutionControl$ClassBytecodes outerClass jdk\/jshell\/spi\/ExecutionControl innerClassName ClassBytecodes flags 19\n+innerclass innerClass jdk\/jshell\/spi\/ExecutionControl$ClassInstallException outerClass jdk\/jshell\/spi\/ExecutionControl innerClassName ClassInstallException flags 9\n+innerclass innerClass jdk\/jshell\/spi\/ExecutionControl$NotImplementedException outerClass jdk\/jshell\/spi\/ExecutionControl innerClassName NotImplementedException flags 9\n+innerclass innerClass jdk\/jshell\/spi\/ExecutionControl$EngineTerminationException outerClass jdk\/jshell\/spi\/ExecutionControl innerClassName EngineTerminationException flags 9\n+innerclass innerClass jdk\/jshell\/spi\/ExecutionControl$InternalException outerClass jdk\/jshell\/spi\/ExecutionControl innerClassName InternalException flags 9\n+\n+class name jdk\/jshell\/execution\/LocalExecutionControl\n+header extends jdk\/jshell\/execution\/DirectExecutionControl flags 21\n+innerclass innerClass jdk\/jshell\/spi\/ExecutionControl$ClassBytecodes outerClass jdk\/jshell\/spi\/ExecutionControl innerClassName ClassBytecodes flags 19\n+innerclass innerClass java\/lang\/Thread$UncaughtExceptionHandler outerClass java\/lang\/Thread innerClassName UncaughtExceptionHandler flags 609\n+innerclass innerClass jdk\/jshell\/spi\/ExecutionControl$StoppedException outerClass jdk\/jshell\/spi\/ExecutionControl innerClassName StoppedException flags 9\n+innerclass innerClass jdk\/jshell\/spi\/ExecutionControl$InternalException outerClass jdk\/jshell\/spi\/ExecutionControl innerClassName InternalException flags 9\n+innerclass innerClass jdk\/jshell\/spi\/ExecutionControl$ClassInstallException outerClass jdk\/jshell\/spi\/ExecutionControl innerClassName ClassInstallException flags 9\n+innerclass innerClass jdk\/jshell\/spi\/ExecutionControl$NotImplementedException outerClass jdk\/jshell\/spi\/ExecutionControl innerClassName NotImplementedException flags 9\n+innerclass innerClass jdk\/jshell\/spi\/ExecutionControl$EngineTerminationException outerClass jdk\/jshell\/spi\/ExecutionControl innerClassName EngineTerminationException flags 9\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+method name load descriptor ([Ljdk\/jshell\/spi\/ExecutionControl$ClassBytecodes;)V thrownTypes jdk\/jshell\/spi\/ExecutionControl$ClassInstallException,jdk\/jshell\/spi\/ExecutionControl$NotImplementedException,jdk\/jshell\/spi\/ExecutionControl$EngineTerminationException flags 1\n+\n+class name jdk\/jshell\/execution\/LocalExecutionControlProvider\n+header extends java\/lang\/Object implements jdk\/jshell\/spi\/ExecutionControlProvider flags 21\n+\n+class name jdk\/jshell\/spi\/ExecutionControlProvider\n+header extends java\/lang\/Object flags 601\n+\n+class name jdk\/jshell\/spi\/ExecutionEnv\n+header extends java\/lang\/Object flags 601\n+\n+class name jdk\/jshell\/spi\/SPIResolutionException\n+header extends java\/lang\/RuntimeException flags 21\n+\n+class name jdk\/jshell\/tool\/JavaShellToolBuilder\n+header extends java\/lang\/Object flags 601\n+\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/jdk.jshell-K.sym.txt","additions":135,"deletions":0,"binary":false,"changes":135,"status":"added"},{"patch":"","filename":"src\/jdk.compiler\/share\/data\/symbols\/jdk.jsobject-K.sym.txt","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.compiler\/share\/data\/symbols\/jdk.jsobject-J.sym.txt","status":"copied"},{"patch":"@@ -0,0 +1,46 @@\n+#\n+# Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+class name com\/sun\/management\/GarbageCollectionNotificationInfo\n+header extends java\/lang\/Object implements javax\/management\/openmbean\/CompositeDataView flags 21\n+\n+class name com\/sun\/management\/GarbageCollectorMXBean\n+header extends java\/lang\/Object implements java\/lang\/management\/GarbageCollectorMXBean flags 601\n+\n+class name com\/sun\/management\/GcInfo\n+header extends java\/lang\/Object implements javax\/management\/openmbean\/CompositeData,javax\/management\/openmbean\/CompositeDataView flags 21\n+\n+class name com\/sun\/management\/OperatingSystemMXBean\n+header extends java\/lang\/Object implements java\/lang\/management\/OperatingSystemMXBean flags 601\n+\n+class name com\/sun\/management\/ThreadMXBean\n+header extends java\/lang\/Object implements java\/lang\/management\/ThreadMXBean flags 601\n+\n+class name com\/sun\/management\/UnixOperatingSystemMXBean\n+header extends java\/lang\/Object implements com\/sun\/management\/OperatingSystemMXBean flags 601\n+\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/jdk.management-K.sym.txt","additions":46,"deletions":0,"binary":false,"changes":46,"status":"added"},{"patch":"@@ -0,0 +1,31 @@\n+#\n+# Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+class name jdk\/management\/jfr\/RemoteRecordingStream\n+method name stop descriptor ()Z flags 1\n+\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/jdk.management.jfr-K.sym.txt","additions":31,"deletions":0,"binary":false,"changes":31,"status":"added"},{"patch":"@@ -0,0 +1,31 @@\n+#\n+# Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# ##########################################################\n+# ### THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT. ###\n+# ##########################################################\n+#\n+class name jdk\/net\/NetworkPermission\n+header extends java\/security\/BasicPermission flags 31\n+\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/jdk.net-K.sym.txt","additions":31,"deletions":0,"binary":false,"changes":31,"status":"added"},{"patch":"","filename":"src\/jdk.compiler\/share\/data\/symbols\/jdk.sctp-K.sym.txt","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.compiler\/share\/data\/symbols\/jdk.sctp-J.sym.txt","status":"copied"},{"patch":"","filename":"src\/jdk.compiler\/share\/data\/symbols\/jdk.security.auth-K.sym.txt","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.compiler\/share\/data\/symbols\/jdk.security.auth-J.sym.txt","status":"copied"},{"patch":"","filename":"src\/jdk.compiler\/share\/data\/symbols\/jdk.security.jgss-K.sym.txt","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.compiler\/share\/data\/symbols\/jdk.security.jgss-J.sym.txt","status":"copied"},{"patch":"","filename":"src\/jdk.compiler\/share\/data\/symbols\/jdk.unsupported-K.sym.txt","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.compiler\/share\/data\/symbols\/jdk.unsupported-J.sym.txt","status":"copied"},{"patch":"","filename":"src\/jdk.compiler\/share\/data\/symbols\/jdk.xml.dom-K.sym.txt","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.compiler\/share\/data\/symbols\/jdk.xml.dom-J.sym.txt","status":"copied"},{"patch":"@@ -32,1 +32,1 @@\n-generate platforms 8:9:A:B:C:D:E:F:G:H:I:J\n+generate platforms 8:9:A:B:C:D:E:F:G:H:I:J:K\n@@ -45,0 +45,1 @@\n+platform version K base J files java.base-K.sym.txt:java.compiler-K.sym.txt:java.datatransfer-K.sym.txt:java.desktop-K.sym.txt:java.instrument-K.sym.txt:java.logging-K.sym.txt:java.management-K.sym.txt:java.management.rmi-K.sym.txt:java.naming-K.sym.txt:java.rmi-K.sym.txt:java.scripting-K.sym.txt:java.security.jgss-K.sym.txt:java.security.sasl-K.sym.txt:java.smartcardio-K.sym.txt:java.sql-K.sym.txt:java.sql.rowset-K.sym.txt:java.xml-K.sym.txt:java.xml.crypto-K.sym.txt:jdk.accessibility-K.sym.txt:jdk.attach-K.sym.txt:jdk.compiler-K.sym.txt:jdk.dynalink-K.sym.txt:jdk.httpserver-K.sym.txt:jdk.incubator.concurrent-K.sym.txt:jdk.incubator.vector-K.sym.txt:jdk.jartool-K.sym.txt:jdk.javadoc-K.sym.txt:jdk.jconsole-K.sym.txt:jdk.jdi-K.sym.txt:jdk.jfr-K.sym.txt:jdk.jlink-K.sym.txt:jdk.jpackage-K.sym.txt:jdk.jshell-K.sym.txt:jdk.jsobject-K.sym.txt:jdk.management-K.sym.txt:jdk.management.jfr-K.sym.txt:jdk.net-K.sym.txt:jdk.sctp-K.sym.txt:jdk.security.auth-K.sym.txt:jdk.security.jgss-K.sym.txt:jdk.unsupported-K.sym.txt:jdk.xml.dom-K.sym.txt\n","filename":"src\/jdk.compiler\/share\/data\/symbols\/symbols","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -91,1 +91,1 @@\n-    private String filename;\n+    private final String filename;\n","filename":"src\/jdk.crypto.cryptoki\/share\/classes\/sun\/security\/pkcs11\/Config.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -113,1 +113,1 @@\n-    private ByteArrayOutputStream dataBuffer = new ByteArrayOutputStream();\n+    private final ByteArrayOutputStream dataBuffer = new ByteArrayOutputStream();\n@@ -115,1 +115,1 @@\n-    private ByteArrayOutputStream aadBuffer = new ByteArrayOutputStream();\n+    private final ByteArrayOutputStream aadBuffer = new ByteArrayOutputStream();\n","filename":"src\/jdk.crypto.cryptoki\/share\/classes\/sun\/security\/pkcs11\/P11AEADCipher.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1324,1 +1324,1 @@\n-    private SessionKeyRef ref;\n+    private final SessionKeyRef ref;\n","filename":"src\/jdk.crypto.cryptoki\/share\/classes\/sun\/security\/pkcs11\/P11Key.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -120,1 +120,1 @@\n-    private ByteArrayOutputStream dataBuffer = new ByteArrayOutputStream();\n+    private final ByteArrayOutputStream dataBuffer = new ByteArrayOutputStream();\n","filename":"src\/jdk.crypto.cryptoki\/share\/classes\/sun\/security\/pkcs11\/P11KeyWrapCipher.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -628,1 +628,1 @@\n-    private static final PublicKey constructPublicKey(byte[] encodedKey,\n+    private static PublicKey constructPublicKey(byte[] encodedKey,\n@@ -655,1 +655,1 @@\n-    private static final PrivateKey constructPrivateKey(byte[] encodedKey,\n+    private static PrivateKey constructPrivateKey(byte[] encodedKey,\n@@ -682,1 +682,1 @@\n-    private static final SecretKey constructSecretKey(byte[] encodedKey,\n+    private static SecretKey constructSecretKey(byte[] encodedKey,\n@@ -687,1 +687,1 @@\n-    static final Key constructKey(byte[] encoding, String keyAlgorithm,\n+    static Key constructKey(byte[] encoding, String keyAlgorithm,\n","filename":"src\/jdk.crypto.cryptoki\/share\/classes\/sun\/security\/pkcs11\/P11RSACipher.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -58,1 +58,1 @@\n-    private long mechanism;\n+    private final long mechanism;\n","filename":"src\/jdk.crypto.cryptoki\/share\/classes\/sun\/security\/pkcs11\/P11TlsRsaPremasterSecretGenerator.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-    private static Object LOCK = new Object();\n+    private static final Object LOCK = new Object();\n","filename":"src\/jdk.crypto.cryptoki\/share\/classes\/sun\/security\/pkcs11\/P11Util.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -138,1 +138,1 @@\n-        while ((next = (SessionRef) SessionRef.refQueue.poll())!= null) {\n+        while ((next = (SessionRef) SessionRef.REF_QUEUE.poll())!= null) {\n@@ -153,1 +153,1 @@\n-    static ReferenceQueue<Session> refQueue = new ReferenceQueue<>();\n+    static final ReferenceQueue<Session> REF_QUEUE = new ReferenceQueue<>();\n@@ -155,1 +155,1 @@\n-    private static Set<SessionRef> refList =\n+    private static final Set<SessionRef> REF_LIST =\n@@ -159,2 +159,2 @@\n-    private long id;\n-    private Token token;\n+    private final long id;\n+    private final Token token;\n@@ -163,1 +163,1 @@\n-        super(session, refQueue);\n+        super(session, REF_QUEUE);\n@@ -166,1 +166,1 @@\n-        refList.add(this);\n+        REF_LIST.add(this);\n@@ -170,1 +170,1 @@\n-        refList.remove(this);\n+        REF_LIST.remove(this);\n","filename":"src\/jdk.crypto.cryptoki\/share\/classes\/sun\/security\/pkcs11\/Session.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -81,1 +81,1 @@\n-    private AtomicInteger activeSessions = new AtomicInteger();\n+    private final AtomicInteger activeSessions = new AtomicInteger();\n@@ -91,1 +91,1 @@\n-    private Object maxActiveSessionsLock;\n+    private final Object maxActiveSessionsLock;\n@@ -115,3 +115,3 @@\n-        if (debug != null) {\n-            maxActiveSessionsLock = new Object();\n-        }\n+        this.maxActiveSessionsLock = (debug != null)\n+                ? new Object()\n+                : null;\n","filename":"src\/jdk.crypto.cryptoki\/share\/classes\/sun\/security\/pkcs11\/SessionManager.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -49,1 +49,1 @@\n-class Token implements Serializable {\n+final class Token implements Serializable {\n","filename":"src\/jdk.crypto.cryptoki\/share\/classes\/sun\/security\/pkcs11\/Token.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,35 +0,0 @@\n-\/*\n- * Copyright (c) 2000, 2015, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-package sun.jvm.hotspot.gc.shared;\n-\n-import sun.jvm.hotspot.debugger.*;\n-\n-\/** No additional functionality for now *\/\n-\n-public class OffsetTableContigSpace extends ContiguousSpace {\n-  public OffsetTableContigSpace(Address addr) {\n-    super(addr);\n-  }\n-}\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/gc\/shared\/OffsetTableContigSpace.java","additions":0,"deletions":35,"binary":false,"changes":35,"status":"deleted"},{"patch":"@@ -31,1 +31,1 @@\n-public class TenuredSpace extends OffsetTableContigSpace {\n+public class TenuredSpace extends ContiguousSpace {\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/gc\/shared\/TenuredSpace.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -137,1 +137,1 @@\n-    \/\/ Klass* and Method* flags\n+    \/\/ Method* flags\n@@ -139,2 +139,0 @@\n-    \/\/ flags promoted from methods to the holding klass\n-    public static final long JVM_ACC_PROMOTED_FLAGS           = 0x00200000;\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/runtime\/ClassConstants.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -92,4 +92,2 @@\n-            if (assumptions.length > 0) {\n-                for (Assumption assumption : assumptions) {\n-                    target.record(assumption);\n-                }\n+            for (Assumption assumption : assumptions) {\n+                target.record(assumption);\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk.vm.ci.meta\/src\/jdk\/vm\/ci\/meta\/Assumptions.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2012, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -652,1 +652,1 @@\n-                if (ni != null && ni.length > 0) {\n+                if (ni != null) {\n","filename":"src\/jdk.jconsole\/share\/classes\/sun\/tools\/jconsole\/inspector\/XTree.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -140,30 +140,0 @@\n-typedef struct {\n-    int major;\n-    int minor;\n-} version_type;\n-\n-typedef struct {\n-    version_type runtime;\n-    version_type compiletime;\n-} compatible_versions_type;\n-\n-\/*\n- * List of explicitly compatible JVMTI versions, specified as\n- * { runtime version, compile-time version } pairs. -1 is a wildcard.\n- *\/\n-static int nof_compatible_versions = 3;\n-static compatible_versions_type compatible_versions_list[] = {\n-    \/*\n-     * FIXUP: Allow version 0 to be compatible with anything\n-     * Special check for FCS of 1.0.\n-     *\/\n-    { {  0, -1 }, { -1, -1 } },\n-    { { -1, -1 }, {  0, -1 } },\n-    \/*\n-     * 1.2 is runtime compatible with 1.1 -- just make sure to check the\n-     * version before using any new 1.2 features\n-     *\/\n-    { {  1,  1 }, {  1,  2 } }\n-};\n-\n-\n@@ -175,17 +145,0 @@\n-    \/*\n-     * First check to see if versions are explicitly compatible via the\n-     * list specified above.\n-     *\/\n-    int i;\n-    for (i = 0; i < nof_compatible_versions; ++i) {\n-        version_type runtime = compatible_versions_list[i].runtime;\n-        version_type comptime = compatible_versions_list[i].compiletime;\n-\n-        if ((major_runtime     == runtime.major  || runtime.major  == -1) &&\n-            (minor_runtime     == runtime.minor  || runtime.minor  == -1) &&\n-            (major_compiletime == comptime.major || comptime.major == -1) &&\n-            (minor_compiletime == comptime.minor || comptime.minor == -1)) {\n-            return JNI_TRUE;\n-        }\n-    }\n-\n@@ -234,14 +187,0 @@\n-    \/* Get the JVMTI Env, IMPORTANT: Do this first! For jvmtiAllocate(). *\/\n-    error = JVM_FUNC_PTR(vm,GetEnv)\n-                (vm, (void **)&(gdata->jvmti), JVMTI_VERSION_1);\n-    if (error != JNI_OK) {\n-        ERROR_MESSAGE((\"JDWP unable to access JVMTI Version 1 (0x%x),\"\n-                         \" is your J2SE a 1.5 or newer version?\"\n-                         \" JNIEnv's GetEnv() returned %d\",\n-                         JVMTI_VERSION_1, error));\n-        forceExit(1); \/* Kill entire process, no core dump *\/\n-    }\n-\n-    \/* Check to make sure the version of jvmti.h we compiled with\n-     *      matches the runtime version we are using.\n-     *\/\n@@ -255,3 +194,14 @@\n-    \/* Check for compatibility *\/\n-    if ( !compatible_versions(jvmtiMajorVersion(), jvmtiMinorVersion(),\n-                jvmtiCompileTimeMajorVersion, jvmtiCompileTimeMinorVersion) ) {\n+    \/* Get the JVMTI Env, IMPORTANT: Do this first! For jvmtiAllocate(). *\/\n+    error = JVM_FUNC_PTR(vm,GetEnv)\n+                (vm, (void **)&(gdata->jvmti), JVMTI_VERSION);\n+    if (error != JNI_OK) {\n+        ERROR_MESSAGE((\"JDWP unable to access JVMTI Version %d.%d.%d (0x%x).\"\n+                       \" JNIEnv's GetEnv() returned %d.\",\n+                       jvmtiCompileTimeMajorVersion, jvmtiCompileTimeMinorVersion,\n+                       jvmtiCompileTimeMicroVersion, JVMTI_VERSION, error));\n+        forceExit(1); \/* Kill entire process, no core dump *\/\n+    }\n+\n+    \/* Check that the JVMTI compile and runtime versions are compatibile. *\/\n+    if (!compatible_versions(jvmtiMajorVersion(), jvmtiMinorVersion(),\n+                              jvmtiCompileTimeMajorVersion, jvmtiCompileTimeMinorVersion)) {\n@@ -260,1 +210,1 @@\n-                       \"version of JVMTI (%d.%d.%d), it needs JVMTI %d.%d[.%d].\",\n+                       \"version of JVMTI (%d.%d.%d). It needs JVMTI %d.%d[.%d].\",\n","filename":"src\/jdk.jdwp.agent\/share\/native\/libjdwp\/debugInit.c","additions":15,"deletions":65,"binary":false,"changes":80,"status":"modified"},{"patch":"@@ -1737,1 +1737,1 @@\n-                     (gdata->jvm, (void **)&jvmti, JVMTI_VERSION_1);\n+                     (gdata->jvm, (void **)&jvmti, JVMTI_VERSION);\n","filename":"src\/jdk.jdwp.agent\/share\/native\/libjdwp\/util.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,150 +0,0 @@\n-\/*\n- * Copyright (c) 2009, 2012, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-package sun.nio.ch.sctp;\n-\n-import java.net.SocketAddress;\n-import java.net.InetAddress;\n-import java.io.IOException;\n-import java.util.Set;\n-import java.nio.ByteBuffer;\n-import java.nio.channels.spi.SelectorProvider;\n-import com.sun.nio.sctp.Association;\n-import com.sun.nio.sctp.MessageInfo;\n-import com.sun.nio.sctp.NotificationHandler;\n-import com.sun.nio.sctp.SctpChannel;\n-import com.sun.nio.sctp.SctpSocketOption;\n-\n-\/**\n- * Unimplemented.\n- *\/\n-public class SctpChannelImpl extends SctpChannel\n-{\n-    private static final String message = \"SCTP not supported on this platform\";\n-\n-    public SctpChannelImpl(SelectorProvider provider) {\n-        super(provider);\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public Association association() {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public SctpChannel bind(SocketAddress local)\n-                            throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public SctpChannel bindAddress(InetAddress address)\n-         throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public SctpChannel unbindAddress(InetAddress address)\n-         throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public boolean connect(SocketAddress remote) throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public boolean connect(SocketAddress remote, int maxOutStreams,\n-       int maxInStreams) throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public boolean isConnectionPending() {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public boolean finishConnect() throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public Set<SocketAddress> getAllLocalAddresses()\n-            throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public Set<SocketAddress> getRemoteAddresses()\n-            throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public SctpChannel shutdown() throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public <T> T getOption(SctpSocketOption<T> name)\n-            throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public <T> SctpChannel setOption(SctpSocketOption<T> name, T value)\n-        throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public Set<SctpSocketOption<?>> supportedOptions() {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public <T> MessageInfo receive(ByteBuffer dst, T attachment,\n-            NotificationHandler<T> handler) throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public int send(ByteBuffer src, MessageInfo messageInfo)\n-            throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    protected void implConfigureBlocking(boolean block) throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public void implCloseSelectableChannel() throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-}\n","filename":"src\/jdk.sctp\/aix\/classes\/sun\/nio\/ch\/sctp\/SctpChannelImpl.java","additions":0,"deletions":150,"binary":false,"changes":150,"status":"deleted"},{"patch":"@@ -1,137 +0,0 @@\n-\/*\n- * Copyright (c) 2009, 2012, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-package sun.nio.ch.sctp;\n-\n-import java.net.SocketAddress;\n-import java.net.InetAddress;\n-import java.io.IOException;\n-import java.util.Set;\n-import java.nio.ByteBuffer;\n-import java.nio.channels.spi.SelectorProvider;\n-import com.sun.nio.sctp.Association;\n-import com.sun.nio.sctp.SctpChannel;\n-import com.sun.nio.sctp.MessageInfo;\n-import com.sun.nio.sctp.NotificationHandler;\n-import com.sun.nio.sctp.SctpMultiChannel;\n-import com.sun.nio.sctp.SctpSocketOption;\n-\n-\/**\n- * Unimplemented.\n- *\/\n-public class SctpMultiChannelImpl extends SctpMultiChannel\n-{\n-    private static final String message = \"SCTP not supported on this platform\";\n-\n-    public SctpMultiChannelImpl(SelectorProvider provider) {\n-        super(provider);\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public Set<Association> associations() {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public SctpMultiChannel bind(SocketAddress local,\n-            int backlog) throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public SctpMultiChannel bindAddress(InetAddress address)\n-         throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public SctpMultiChannel unbindAddress(InetAddress address)\n-         throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public Set<SocketAddress> getAllLocalAddresses()\n-            throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public Set<SocketAddress> getRemoteAddresses\n-            (Association association) throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public SctpMultiChannel shutdown(Association association)\n-            throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public <T> T getOption(SctpSocketOption<T> name,\n-            Association association) throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public <T> SctpMultiChannel setOption(SctpSocketOption<T> name,\n-            T value, Association association) throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public Set<SctpSocketOption<?>> supportedOptions() {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public <T> MessageInfo receive(ByteBuffer buffer, T attachment,\n-            NotificationHandler<T> handler) throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public int send(ByteBuffer buffer, MessageInfo messageInfo)\n-            throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public SctpChannel branch(Association association)\n-            throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    protected void implConfigureBlocking(boolean block) throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public void implCloseSelectableChannel() throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-}\n","filename":"src\/jdk.sctp\/aix\/classes\/sun\/nio\/ch\/sctp\/SctpMultiChannelImpl.java","additions":0,"deletions":137,"binary":false,"changes":137,"status":"deleted"},{"patch":"@@ -1,102 +0,0 @@\n-\/*\n- * Copyright (c) 2009, 2012, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-package sun.nio.ch.sctp;\n-\n-import java.net.SocketAddress;\n-import java.net.InetAddress;\n-import java.io.IOException;\n-import java.util.Set;\n-import java.nio.channels.spi.SelectorProvider;\n-import com.sun.nio.sctp.SctpChannel;\n-import com.sun.nio.sctp.SctpServerChannel;\n-import com.sun.nio.sctp.SctpSocketOption;\n-\n-\/**\n- * Unimplemented.\n- *\/\n-public class SctpServerChannelImpl extends SctpServerChannel\n-{\n-    private static final String message = \"SCTP not supported on this platform\";\n-\n-    public SctpServerChannelImpl(SelectorProvider provider) {\n-        super(provider);\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public SctpChannel accept() throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public SctpServerChannel bind(SocketAddress local,\n-            int backlog) throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public SctpServerChannel bindAddress(InetAddress address)\n-         throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public SctpServerChannel unbindAddress(InetAddress address)\n-         throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public Set<SocketAddress> getAllLocalAddresses()\n-            throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public <T> T getOption(SctpSocketOption<T> name) throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public <T> SctpServerChannel setOption(SctpSocketOption<T> name,\n-            T value) throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public Set<SctpSocketOption<?>> supportedOptions() {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    protected void implConfigureBlocking(boolean block) throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public void implCloseSelectableChannel() throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-}\n","filename":"src\/jdk.sctp\/aix\/classes\/sun\/nio\/ch\/sctp\/SctpServerChannelImpl.java","additions":0,"deletions":102,"binary":false,"changes":102,"status":"deleted"},{"patch":"@@ -1,150 +0,0 @@\n-\/*\n- * Copyright (c) 2009, 2013, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-package sun.nio.ch.sctp;\n-\n-import java.net.SocketAddress;\n-import java.net.InetAddress;\n-import java.io.IOException;\n-import java.util.Set;\n-import java.nio.ByteBuffer;\n-import java.nio.channels.spi.SelectorProvider;\n-import com.sun.nio.sctp.Association;\n-import com.sun.nio.sctp.MessageInfo;\n-import com.sun.nio.sctp.NotificationHandler;\n-import com.sun.nio.sctp.SctpChannel;\n-import com.sun.nio.sctp.SctpSocketOption;\n-\n-\/**\n- * Unimplemented.\n- *\/\n-public class SctpChannelImpl extends SctpChannel\n-{\n-    private static final String message = \"SCTP not supported on this platform\";\n-\n-    public SctpChannelImpl(SelectorProvider provider) {\n-        super(provider);\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public Association association() {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public SctpChannel bind(SocketAddress local)\n-                            throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public SctpChannel bindAddress(InetAddress address)\n-         throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public SctpChannel unbindAddress(InetAddress address)\n-         throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public boolean connect(SocketAddress remote) throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public boolean connect(SocketAddress remote, int maxOutStreams,\n-       int maxInStreams) throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public boolean isConnectionPending() {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public boolean finishConnect() throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public Set<SocketAddress> getAllLocalAddresses()\n-            throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public Set<SocketAddress> getRemoteAddresses()\n-            throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public SctpChannel shutdown() throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public <T> T getOption(SctpSocketOption<T> name)\n-            throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public <T> SctpChannel setOption(SctpSocketOption<T> name, T value)\n-        throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public Set<SctpSocketOption<?>> supportedOptions() {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public <T> MessageInfo receive(ByteBuffer dst, T attachment,\n-            NotificationHandler<T> handler) throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public int send(ByteBuffer src, MessageInfo messageInfo)\n-            throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    protected void implConfigureBlocking(boolean block) throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public void implCloseSelectableChannel() throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-}\n","filename":"src\/jdk.sctp\/macosx\/classes\/sun\/nio\/ch\/sctp\/SctpChannelImpl.java","additions":0,"deletions":150,"binary":false,"changes":150,"status":"deleted"},{"patch":"@@ -1,137 +0,0 @@\n-\/*\n- * Copyright (c) 2009, 2013, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-package sun.nio.ch.sctp;\n-\n-import java.net.SocketAddress;\n-import java.net.InetAddress;\n-import java.io.IOException;\n-import java.util.Set;\n-import java.nio.ByteBuffer;\n-import java.nio.channels.spi.SelectorProvider;\n-import com.sun.nio.sctp.Association;\n-import com.sun.nio.sctp.SctpChannel;\n-import com.sun.nio.sctp.MessageInfo;\n-import com.sun.nio.sctp.NotificationHandler;\n-import com.sun.nio.sctp.SctpMultiChannel;\n-import com.sun.nio.sctp.SctpSocketOption;\n-\n-\/**\n- * Unimplemented.\n- *\/\n-public class SctpMultiChannelImpl extends SctpMultiChannel\n-{\n-    private static final String message = \"SCTP not supported on this platform\";\n-\n-    public SctpMultiChannelImpl(SelectorProvider provider) {\n-        super(provider);\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public Set<Association> associations() {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public SctpMultiChannel bind(SocketAddress local,\n-            int backlog) throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public SctpMultiChannel bindAddress(InetAddress address)\n-         throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public SctpMultiChannel unbindAddress(InetAddress address)\n-         throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public Set<SocketAddress> getAllLocalAddresses()\n-            throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public Set<SocketAddress> getRemoteAddresses\n-            (Association association) throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public SctpMultiChannel shutdown(Association association)\n-            throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public <T> T getOption(SctpSocketOption<T> name,\n-            Association association) throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public <T> SctpMultiChannel setOption(SctpSocketOption<T> name,\n-            T value, Association association) throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public Set<SctpSocketOption<?>> supportedOptions() {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public <T> MessageInfo receive(ByteBuffer buffer, T attachment,\n-            NotificationHandler<T> handler) throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public int send(ByteBuffer buffer, MessageInfo messageInfo)\n-            throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public SctpChannel branch(Association association)\n-            throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    protected void implConfigureBlocking(boolean block) throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public void implCloseSelectableChannel() throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-}\n","filename":"src\/jdk.sctp\/macosx\/classes\/sun\/nio\/ch\/sctp\/SctpMultiChannelImpl.java","additions":0,"deletions":137,"binary":false,"changes":137,"status":"deleted"},{"patch":"@@ -1,102 +0,0 @@\n-\/*\n- * Copyright (c) 2009, 2013, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-package sun.nio.ch.sctp;\n-\n-import java.net.SocketAddress;\n-import java.net.InetAddress;\n-import java.io.IOException;\n-import java.util.Set;\n-import java.nio.channels.spi.SelectorProvider;\n-import com.sun.nio.sctp.SctpChannel;\n-import com.sun.nio.sctp.SctpServerChannel;\n-import com.sun.nio.sctp.SctpSocketOption;\n-\n-\/**\n- * Unimplemented.\n- *\/\n-public class SctpServerChannelImpl extends SctpServerChannel\n-{\n-    private static final String message = \"SCTP not supported on this platform\";\n-\n-    public SctpServerChannelImpl(SelectorProvider provider) {\n-        super(provider);\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public SctpChannel accept() throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public SctpServerChannel bind(SocketAddress local,\n-            int backlog) throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public SctpServerChannel bindAddress(InetAddress address)\n-         throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public SctpServerChannel unbindAddress(InetAddress address)\n-         throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public Set<SocketAddress> getAllLocalAddresses()\n-            throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public <T> T getOption(SctpSocketOption<T> name) throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public <T> SctpServerChannel setOption(SctpSocketOption<T> name,\n-            T value) throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public Set<SctpSocketOption<?>> supportedOptions() {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    protected void implConfigureBlocking(boolean block) throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public void implCloseSelectableChannel() throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-}\n","filename":"src\/jdk.sctp\/macosx\/classes\/sun\/nio\/ch\/sctp\/SctpServerChannelImpl.java","additions":0,"deletions":102,"binary":false,"changes":102,"status":"deleted"},{"patch":"@@ -39,1 +39,1 @@\n-     * Try to receieve another message or notification.\n+     * Try to receive another message or notification.\n","filename":"src\/jdk.sctp\/share\/classes\/com\/sun\/nio\/sctp\/HandlerResult.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,0 +27,2 @@\n+import java.io.Serial;\n+\n@@ -35,0 +37,1 @@\n+    @Serial\n","filename":"src\/jdk.sctp\/share\/classes\/com\/sun\/nio\/sctp\/IllegalReceiveException.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -27,0 +27,2 @@\n+import java.io.Serial;\n+\n@@ -35,0 +37,1 @@\n+    @Serial\n","filename":"src\/jdk.sctp\/share\/classes\/com\/sun\/nio\/sctp\/IllegalUnbindException.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -27,0 +27,2 @@\n+import java.io.Serial;\n+\n@@ -34,0 +36,1 @@\n+    @Serial\n","filename":"src\/jdk.sctp\/share\/classes\/com\/sun\/nio\/sctp\/InvalidStreamException.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n-public class SctpStandardSocketOptions {\n+public final class SctpStandardSocketOptions {\n@@ -44,1 +44,1 @@\n-     * fragmentation will be performed. Instead if a message being sent\n+     * fragmentation will be performed. Instead, if a message being sent\n@@ -51,3 +51,4 @@\n-    public static final SctpSocketOption<Boolean> SCTP_DISABLE_FRAGMENTS = new\n-        SctpStdSocketOption<Boolean>(\"SCTP_DISABLE_FRAGMENTS\", Boolean.class,\n-        sun.nio.ch.sctp.SctpStdSocketOption.SCTP_DISABLE_FRAGMENTS);\n+    public static final SctpSocketOption<Boolean> SCTP_DISABLE_FRAGMENTS =\n+            new SctpStdSocketOption<>(\"SCTP_DISABLE_FRAGMENTS\",\n+                    Boolean.class,\n+                    SctpStdSocketOption.SCTP_DISABLE_FRAGMENTS);\n@@ -70,3 +71,4 @@\n-    public static final SctpSocketOption<Boolean> SCTP_EXPLICIT_COMPLETE = new\n-        SctpStdSocketOption<Boolean>(\"SCTP_EXPLICIT_COMPLETE\", Boolean.class,\n-        sun.nio.ch.sctp.SctpStdSocketOption.SCTP_EXPLICIT_COMPLETE);\n+    public static final SctpSocketOption<Boolean> SCTP_EXPLICIT_COMPLETE =\n+            new SctpStdSocketOption<>(\"SCTP_EXPLICIT_COMPLETE\",\n+                    Boolean.class,\n+                    SctpStdSocketOption.SCTP_EXPLICIT_COMPLETE);\n@@ -121,1 +123,1 @@\n-            new SctpStdSocketOption<Integer>(\"SCTP_FRAGMENT_INTERLEAVE\",\n+            new SctpStdSocketOption<>(\"SCTP_FRAGMENT_INTERLEAVE\",\n@@ -123,1 +125,1 @@\n-                  sun.nio.ch.sctp.SctpStdSocketOption.SCTP_FRAGMENT_INTERLEAVE);\n+                  SctpStdSocketOption.SCTP_FRAGMENT_INTERLEAVE);\n@@ -161,2 +163,2 @@\n-        new SctpStdSocketOption<SctpStandardSocketOptions.InitMaxStreams>(\n-        \"SCTP_INIT_MAXSTREAMS\", SctpStandardSocketOptions.InitMaxStreams.class);\n+            new SctpStdSocketOption<>(\"SCTP_INIT_MAXSTREAMS\",\n+                    SctpStandardSocketOptions.InitMaxStreams.class);\n@@ -173,2 +175,3 @@\n-        new SctpStdSocketOption<Boolean>(\"SCTP_NODELAY\", Boolean.class,\n-        sun.nio.ch.sctp.SctpStdSocketOption.SCTP_NODELAY);\n+            new SctpStdSocketOption<>(\"SCTP_NODELAY\",\n+                    Boolean.class,\n+                    SctpStdSocketOption.SCTP_NODELAY);\n@@ -194,2 +197,2 @@\n-            new SctpStdSocketOption<SocketAddress>\n-            (\"SCTP_PRIMARY_ADDR\", SocketAddress.class);\n+            new SctpStdSocketOption<>(\"SCTP_PRIMARY_ADDR\",\n+                    SocketAddress.class);\n@@ -219,2 +222,2 @@\n-            new SctpStdSocketOption<SocketAddress>\n-            (\"SCTP_SET_PEER_PRIMARY_ADDR\", SocketAddress.class);\n+            new SctpStdSocketOption<>(\"SCTP_SET_PEER_PRIMARY_ADDR\",\n+                    SocketAddress.class);\n@@ -248,2 +251,3 @@\n-        new SctpStdSocketOption<Integer>(\"SO_SNDBUF\", Integer.class,\n-        sun.nio.ch.sctp.SctpStdSocketOption.SO_SNDBUF);\n+            new SctpStdSocketOption<>(\"SO_SNDBUF\",\n+                    Integer.class,\n+                    SctpStdSocketOption.SO_SNDBUF);\n@@ -275,2 +279,3 @@\n-        new SctpStdSocketOption<Integer>(\"SO_RCVBUF\", Integer.class,\n-        sun.nio.ch.sctp.SctpStdSocketOption.SO_RCVBUF);\n+            new SctpStdSocketOption<>(\"SO_RCVBUF\",\n+                    Integer.class,\n+                    SctpStdSocketOption.SO_RCVBUF);\n@@ -306,2 +311,3 @@\n-        new SctpStdSocketOption<Integer>(\"SO_LINGER\", Integer.class,\n-        sun.nio.ch.sctp.SctpStdSocketOption.SO_LINGER);\n+            new SctpStdSocketOption<>(\"SO_LINGER\",\n+                    Integer.class,\n+                    SctpStdSocketOption.SO_LINGER);\n@@ -319,2 +325,2 @@\n-        private int maxInStreams;\n-        private int maxOutStreams;\n+        private final int maxInStreams;\n+        private final int maxOutStreams;\n@@ -381,5 +387,3 @@\n-            StringBuilder sb = new StringBuilder();\n-            sb.append(super.toString()).append(\" [\");\n-            sb.append(\"maxInStreams:\").append(maxInStreams);\n-            sb.append(\"maxOutStreams:\").append(maxOutStreams).append(\"]\");\n-            return sb.toString();\n+            return super.toString() + \" [\" +\n+                    \"maxInStreams:\" + maxInStreams +\n+                    \"maxOutStreams:\" + maxOutStreams + \"]\";\n@@ -401,5 +405,3 @@\n-            if (obj != null && obj instanceof InitMaxStreams) {\n-                InitMaxStreams that = (InitMaxStreams) obj;\n-                if (this.maxInStreams == that.maxInStreams &&\n-                    this.maxOutStreams == that.maxOutStreams)\n-                    return true;\n+            if (obj instanceof InitMaxStreams that) {\n+                return this.maxInStreams == that.maxInStreams &&\n+                        this.maxOutStreams == that.maxOutStreams;\n","filename":"src\/jdk.sctp\/share\/classes\/com\/sun\/nio\/sctp\/SctpStandardSocketOptions.java","additions":38,"deletions":36,"binary":false,"changes":74,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n- * Typically this is because the association has been shutdown with unsent data\n+ * Typically, this is because the association has been shutdown with unsent data\n@@ -84,1 +84,1 @@\n-     * Returns the stream number that the messge was to be sent on.\n+     * Returns the stream number that the message was to be sent on.\n","filename":"src\/jdk.sctp\/share\/classes\/com\/sun\/nio\/sctp\/SendFailedNotification.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -159,10 +159,8 @@\n-        StringBuilder sb = new StringBuilder(super.toString());\n-        sb.append( \"[Address: \").append(address)\n-          .append(\", Association: \").append(association)\n-          .append(\", Assoc ID: \").append(assocId)\n-          .append(\", Bytes: \").append(bytes)\n-          .append(\", Stream Number: \").append(streamNumber)\n-          .append(\", Complete: \").append(complete)\n-          .append(\", isUnordered: \").append(unordered)\n-          .append(\"]\");\n-        return sb.toString();\n+        return super.toString() + \"[Address: \" + address +\n+                \", Association: \" + association +\n+                \", Assoc ID: \" + assocId +\n+                \", Bytes: \" + bytes +\n+                \", Stream Number: \" + streamNumber +\n+                \", Complete: \" + complete +\n+                \", isUnordered: \" + unordered +\n+                \"]\";\n","filename":"src\/jdk.sctp\/share\/classes\/sun\/nio\/ch\/sctp\/MessageInfoImpl.java","additions":8,"deletions":10,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -0,0 +1,146 @@\n+\/*\n+ * Copyright (c) 2009, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package sun.nio.ch.sctp;\n+\n+import com.sun.nio.sctp.Association;\n+import com.sun.nio.sctp.MessageInfo;\n+import com.sun.nio.sctp.NotificationHandler;\n+import com.sun.nio.sctp.SctpChannel;\n+import com.sun.nio.sctp.SctpSocketOption;\n+\n+import java.io.IOException;\n+import java.net.InetAddress;\n+import java.net.SocketAddress;\n+import java.nio.ByteBuffer;\n+import java.nio.channels.spi.SelectorProvider;\n+import java.util.Set;\n+\n+\/**\n+ * Unimplemented.\n+ *\/\n+public class SctpChannelImpl\n+        extends SctpChannel {\n+\n+    public SctpChannelImpl(SelectorProvider provider) {\n+        super(provider);\n+        throw UnsupportedUtil.sctpUnsupported();\n+    }\n+\n+    @Override\n+    public Association association() {\n+        throw UnsupportedUtil.sctpUnsupported();\n+    }\n+\n+    @Override\n+    public SctpChannel bind(SocketAddress local) throws IOException {\n+        throw UnsupportedUtil.sctpUnsupported();\n+    }\n+\n+    @Override\n+    public SctpChannel bindAddress(InetAddress address) throws IOException {\n+        throw UnsupportedUtil.sctpUnsupported();\n+    }\n+\n+    @Override\n+    public SctpChannel unbindAddress(InetAddress address) throws IOException {\n+        throw UnsupportedUtil.sctpUnsupported();\n+    }\n+\n+    @Override\n+    public boolean connect(SocketAddress remote) throws IOException {\n+        throw UnsupportedUtil.sctpUnsupported();\n+    }\n+\n+    @Override\n+    public boolean connect(SocketAddress remote,\n+                           int maxOutStreams,\n+                           int maxInStreams) throws IOException {\n+        throw UnsupportedUtil.sctpUnsupported();\n+    }\n+\n+    @Override\n+    public boolean isConnectionPending() {\n+        throw UnsupportedUtil.sctpUnsupported();\n+    }\n+\n+    @Override\n+    public boolean finishConnect() throws IOException {\n+        throw UnsupportedUtil.sctpUnsupported();\n+    }\n+\n+    @Override\n+    public Set<SocketAddress> getAllLocalAddresses() throws IOException {\n+        throw UnsupportedUtil.sctpUnsupported();\n+    }\n+\n+    @Override\n+    public Set<SocketAddress> getRemoteAddresses() throws IOException {\n+        throw UnsupportedUtil.sctpUnsupported();\n+    }\n+\n+    @Override\n+    public SctpChannel shutdown() throws IOException {\n+        throw UnsupportedUtil.sctpUnsupported();\n+    }\n+\n+    @Override\n+    public <T> T getOption(SctpSocketOption<T> name) throws IOException {\n+        throw UnsupportedUtil.sctpUnsupported();\n+    }\n+\n+    @Override\n+    public <T> SctpChannel setOption(SctpSocketOption<T> name,\n+                                     T value) throws IOException {\n+        throw UnsupportedUtil.sctpUnsupported();\n+    }\n+\n+    @Override\n+    public Set<SctpSocketOption<?>> supportedOptions() {\n+        throw UnsupportedUtil.sctpUnsupported();\n+    }\n+\n+    @Override\n+    public <T> MessageInfo receive(ByteBuffer dst,\n+                                   T attachment,\n+                                   NotificationHandler<T> handler) throws IOException {\n+        throw UnsupportedUtil.sctpUnsupported();\n+    }\n+\n+    @Override\n+    public int send(ByteBuffer src,\n+                    MessageInfo messageInfo) throws IOException {\n+        throw UnsupportedUtil.sctpUnsupported();\n+    }\n+\n+    @Override\n+    protected void implConfigureBlocking(boolean block) throws IOException {\n+        throw UnsupportedUtil.sctpUnsupported();\n+    }\n+\n+    @Override\n+    public void implCloseSelectableChannel() throws IOException {\n+        throw UnsupportedUtil.sctpUnsupported();\n+    }\n+}\n","filename":"src\/jdk.sctp\/share\/classes\/sun\/nio\/ch\/sctp\/SctpChannelImpl.java","additions":146,"deletions":0,"binary":false,"changes":146,"status":"added"},{"patch":"@@ -0,0 +1,133 @@\n+\/*\n+ * Copyright (c) 2009, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package sun.nio.ch.sctp;\n+\n+import com.sun.nio.sctp.Association;\n+import com.sun.nio.sctp.MessageInfo;\n+import com.sun.nio.sctp.NotificationHandler;\n+import com.sun.nio.sctp.SctpChannel;\n+import com.sun.nio.sctp.SctpMultiChannel;\n+import com.sun.nio.sctp.SctpSocketOption;\n+\n+import java.io.IOException;\n+import java.net.InetAddress;\n+import java.net.SocketAddress;\n+import java.nio.ByteBuffer;\n+import java.nio.channels.spi.SelectorProvider;\n+import java.util.Set;\n+\n+\/**\n+ * Unimplemented.\n+ *\/\n+public class SctpMultiChannelImpl\n+        extends SctpMultiChannel {\n+\n+    public SctpMultiChannelImpl(SelectorProvider provider) {\n+        super(provider);\n+        throw UnsupportedUtil.sctpUnsupported();\n+    }\n+\n+    @Override\n+    public Set<Association> associations() {\n+        throw UnsupportedUtil.sctpUnsupported();\n+    }\n+\n+    @Override\n+    public SctpMultiChannel bind(SocketAddress local,\n+                                 int backlog) throws IOException {\n+        throw UnsupportedUtil.sctpUnsupported();\n+    }\n+\n+    @Override\n+    public SctpMultiChannel bindAddress(InetAddress address) throws IOException {\n+        throw UnsupportedUtil.sctpUnsupported();\n+    }\n+\n+    @Override\n+    public SctpMultiChannel unbindAddress(InetAddress address) throws IOException {\n+        throw UnsupportedUtil.sctpUnsupported();\n+    }\n+\n+    @Override\n+    public Set<SocketAddress> getAllLocalAddresses() throws IOException {\n+        throw UnsupportedUtil.sctpUnsupported();\n+    }\n+\n+    @Override\n+    public Set<SocketAddress> getRemoteAddresses(Association association) throws IOException {\n+        throw UnsupportedUtil.sctpUnsupported();\n+    }\n+\n+    @Override\n+    public SctpMultiChannel shutdown(Association association) throws IOException {\n+        throw UnsupportedUtil.sctpUnsupported();\n+    }\n+\n+    @Override\n+    public <T> T getOption(SctpSocketOption<T> name,\n+                           Association association) throws IOException {\n+        throw UnsupportedUtil.sctpUnsupported();\n+    }\n+\n+    @Override\n+    public <T> SctpMultiChannel setOption(SctpSocketOption<T> name,\n+                                          T value,\n+                                          Association association) throws IOException {\n+        throw UnsupportedUtil.sctpUnsupported();\n+    }\n+\n+    @Override\n+    public Set<SctpSocketOption<?>> supportedOptions() {\n+        throw UnsupportedUtil.sctpUnsupported();\n+    }\n+\n+    @Override\n+    public <T> MessageInfo receive(ByteBuffer buffer,\n+                                   T attachment,\n+                                   NotificationHandler<T> handler) throws IOException {\n+        throw UnsupportedUtil.sctpUnsupported();\n+    }\n+\n+    @Override\n+    public int send(ByteBuffer buffer,\n+                    MessageInfo messageInfo) throws IOException {\n+        throw UnsupportedUtil.sctpUnsupported();\n+    }\n+\n+    @Override\n+    public SctpChannel branch(Association association) throws IOException {\n+        throw UnsupportedUtil.sctpUnsupported();\n+    }\n+\n+    @Override\n+    protected void implConfigureBlocking(boolean block) throws IOException {\n+        throw UnsupportedUtil.sctpUnsupported();\n+    }\n+\n+    @Override\n+    public void implCloseSelectableChannel() throws IOException {\n+        throw UnsupportedUtil.sctpUnsupported();\n+    }\n+}\n","filename":"src\/jdk.sctp\/share\/classes\/sun\/nio\/ch\/sctp\/SctpMultiChannelImpl.java","additions":133,"deletions":0,"binary":false,"changes":133,"status":"added"},{"patch":"@@ -0,0 +1,99 @@\n+\/*\n+ * Copyright (c) 2009, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package sun.nio.ch.sctp;\n+\n+import com.sun.nio.sctp.SctpChannel;\n+import com.sun.nio.sctp.SctpServerChannel;\n+import com.sun.nio.sctp.SctpSocketOption;\n+\n+import java.io.IOException;\n+import java.net.InetAddress;\n+import java.net.SocketAddress;\n+import java.nio.channels.spi.SelectorProvider;\n+import java.util.Set;\n+\n+\/**\n+ * Unimplemented.\n+ *\/\n+public class SctpServerChannelImpl\n+        extends SctpServerChannel {\n+\n+    public SctpServerChannelImpl(SelectorProvider provider) {\n+        super(provider);\n+        throw UnsupportedUtil.sctpUnsupported();\n+    }\n+\n+    @Override\n+    public SctpChannel accept() throws IOException {\n+        throw UnsupportedUtil.sctpUnsupported();\n+    }\n+\n+    @Override\n+    public SctpServerChannel bind(SocketAddress local,\n+                                  int backlog) throws IOException {\n+        throw UnsupportedUtil.sctpUnsupported();\n+    }\n+\n+    @Override\n+    public SctpServerChannel bindAddress(InetAddress address) throws IOException {\n+        throw UnsupportedUtil.sctpUnsupported();\n+    }\n+\n+    @Override\n+    public SctpServerChannel unbindAddress(InetAddress address) throws IOException {\n+        throw UnsupportedUtil.sctpUnsupported();\n+    }\n+\n+    @Override\n+    public Set<SocketAddress> getAllLocalAddresses() throws IOException {\n+        throw UnsupportedUtil.sctpUnsupported();\n+    }\n+\n+    @Override\n+    public <T> T getOption(SctpSocketOption<T> name) throws IOException {\n+        throw UnsupportedUtil.sctpUnsupported();\n+    }\n+\n+    @Override\n+    public <T> SctpServerChannel setOption(SctpSocketOption<T> name,\n+                                           T value) throws IOException {\n+        throw UnsupportedUtil.sctpUnsupported();\n+    }\n+\n+    @Override\n+    public Set<SctpSocketOption<?>> supportedOptions() {\n+        throw UnsupportedUtil.sctpUnsupported();\n+    }\n+\n+    @Override\n+    protected void implConfigureBlocking(boolean block) throws IOException {\n+        throw UnsupportedUtil.sctpUnsupported();\n+    }\n+\n+    @Override\n+    public void implCloseSelectableChannel() throws IOException {\n+        throw UnsupportedUtil.sctpUnsupported();\n+    }\n+}\n","filename":"src\/jdk.sctp\/share\/classes\/sun\/nio\/ch\/sctp\/SctpServerChannelImpl.java","additions":99,"deletions":0,"binary":false,"changes":99,"status":"added"},{"patch":"@@ -30,1 +30,1 @@\n-public class SctpStdSocketOption<T>\n+public final class SctpStdSocketOption<T>\n@@ -46,1 +46,1 @@\n-    private int constValue;\n+    private final int constValue;\n@@ -49,2 +49,1 @@\n-        this.name = name;\n-        this.type = type;\n+        this(name, type, 0);\n","filename":"src\/jdk.sctp\/share\/classes\/sun\/nio\/ch\/sctp\/SctpStdSocketOption.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -0,0 +1,44 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package sun.nio.ch.sctp;\n+\n+\/**\n+ * Utility class used by implementations on platforms <em>not<\/em> supporting SCTP.\n+ * <p>\n+ * This class is not present on the \"unix\" platform because unix can support SCTP.\n+ *\/\n+public final class UnsupportedUtil {\n+\n+    private static final String MESSAGE = \"SCTP not supported on this platform\";\n+\n+    \/\/ Suppresses default constructor, ensuring non-instantiability.\n+    private UnsupportedUtil() {}\n+\n+    static UnsupportedOperationException sctpUnsupported() {\n+        return new UnsupportedOperationException(MESSAGE);\n+    }\n+\n+}\n","filename":"src\/jdk.sctp\/share\/classes\/sun\/nio\/ch\/sctp\/UnsupportedUtil.java","additions":44,"deletions":0,"binary":false,"changes":44,"status":"added"},{"patch":"@@ -46,1 +46,1 @@\n-    \/* assocId is used to lookup the association before the notification is\n+    \/* assocId is used to look up the association before the notification is\n@@ -48,4 +48,4 @@\n-    private int assocId;\n-    private AssocChangeEvent event;\n-    private int maxOutStreams;\n-    private int maxInStreams;\n+    private final int assocId;\n+    private final AssocChangeEvent event;\n+    private final int maxOutStreams;\n+    private final int maxInStreams;\n@@ -58,20 +58,9 @@\n-        switch (intEvent) {\n-            case SCTP_COMM_UP :\n-                this.event = AssocChangeEvent.COMM_UP;\n-                break;\n-            case SCTP_COMM_LOST :\n-                this.event = AssocChangeEvent.COMM_LOST;\n-                break;\n-            case SCTP_RESTART :\n-                this.event = AssocChangeEvent.RESTART;\n-                break;\n-            case SCTP_SHUTDOWN :\n-                this.event = AssocChangeEvent.SHUTDOWN;\n-                break;\n-            case SCTP_CANT_START :\n-                this.event = AssocChangeEvent.CANT_START;\n-                break;\n-            default :\n-                throw new AssertionError(\n-                      \"Unknown Association Change Event type: \" + intEvent);\n-        }\n+        this.event = switch (intEvent) {\n+            case SCTP_COMM_UP    -> AssocChangeEvent.COMM_UP;\n+            case SCTP_COMM_LOST  -> AssocChangeEvent.COMM_LOST;\n+            case SCTP_RESTART    -> AssocChangeEvent.RESTART;\n+            case SCTP_SHUTDOWN   -> AssocChangeEvent.SHUTDOWN;\n+            case SCTP_CANT_START -> AssocChangeEvent.CANT_START;\n+            default -> throw new AssertionError(\n+                    \"Unknown Association Change Event type: \" + intEvent);\n+        };\n@@ -115,5 +104,3 @@\n-        StringBuilder sb = new StringBuilder();\n-        sb.append(super.toString()).append(\" [\");\n-        sb.append(\"Association:\").append(association);\n-        sb.append(\", Event: \").append(event).append(\"]\");\n-        return sb.toString();\n+        return super.toString() + \" [\" +\n+                \"Association:\" + association +\n+                \", Event: \" + event + \"]\";\n","filename":"src\/jdk.sctp\/unix\/classes\/sun\/nio\/ch\/sctp\/AssociationChange.java","additions":17,"deletions":30,"binary":false,"changes":47,"status":"modified"},{"patch":"@@ -41,9 +41,7 @@\n-        StringBuffer sb = new StringBuffer(super.toString());\n-        return sb.append(\"[associationID:\")\n-                 .append(associationID())\n-                 .append(\", maxIn:\")\n-                 .append(maxInboundStreams())\n-                 .append(\", maxOut:\")\n-                 .append(maxOutboundStreams())\n-                 .append(\"]\")\n-                 .toString();\n+        return super.toString() + \"[associationID:\" +\n+                associationID() +\n+                \", maxIn:\" +\n+                maxInboundStreams() +\n+                \", maxOut:\" +\n+                maxOutboundStreams() +\n+                \"]\";\n","filename":"src\/jdk.sctp\/unix\/classes\/sun\/nio\/ch\/sctp\/AssociationImpl.java","additions":7,"deletions":9,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-    \/* assocId is used to lookup the association before the notification is\n+    \/* assocId is used to look up the association before the notification is\n@@ -50,3 +50,3 @@\n-    private int assocId;\n-    private SocketAddress address;\n-    private AddressChangeEvent event;\n+    private final int assocId;\n+    private final SocketAddress address;\n+    private final AddressChangeEvent event;\n@@ -56,22 +56,9 @@\n-        switch (intEvent) {\n-            case SCTP_ADDR_AVAILABLE :\n-                this.event = AddressChangeEvent.ADDR_AVAILABLE;\n-                break;\n-            case SCTP_ADDR_UNREACHABLE :\n-                this.event = AddressChangeEvent.ADDR_UNREACHABLE;\n-                break;\n-            case SCTP_ADDR_REMOVED :\n-                this.event = AddressChangeEvent.ADDR_REMOVED;\n-                break;\n-            case SCTP_ADDR_ADDED :\n-                this.event = AddressChangeEvent.ADDR_ADDED;\n-                break;\n-            case SCTP_ADDR_MADE_PRIM :\n-                this.event = AddressChangeEvent.ADDR_MADE_PRIMARY;\n-                break;\n-            case SCTP_ADDR_CONFIRMED :\n-                this.event = AddressChangeEvent.ADDR_CONFIRMED;\n-                break;\n-            default:\n-                throw new AssertionError(\"Unknown event type\");\n-        }\n+        this.event = switch (intEvent) {\n+            case SCTP_ADDR_AVAILABLE   -> AddressChangeEvent.ADDR_AVAILABLE;\n+            case SCTP_ADDR_UNREACHABLE -> AddressChangeEvent.ADDR_UNREACHABLE;\n+            case SCTP_ADDR_REMOVED     -> AddressChangeEvent.ADDR_REMOVED;\n+            case SCTP_ADDR_ADDED       -> AddressChangeEvent.ADDR_ADDED;\n+            case SCTP_ADDR_MADE_PRIM   -> AddressChangeEvent.ADDR_MADE_PRIMARY;\n+            case SCTP_ADDR_CONFIRMED   -> AddressChangeEvent.ADDR_CONFIRMED;\n+            default -> throw new AssertionError(\"Unknown event type\");\n+        };\n@@ -106,1 +93,0 @@\n-        assert event != null;\n@@ -112,6 +98,4 @@\n-        StringBuilder sb = new StringBuilder();\n-        sb.append(super.toString()).append(\" [\");\n-        sb.append(\"Address: \").append(address);\n-        sb.append(\", Association:\").append(association);\n-        sb.append(\", Event: \").append(event).append(\"]\");\n-        return sb.toString();\n+        return super.toString() + \" [\" +\n+                \"Address: \" + address +\n+                \", Association:\" + association +\n+                \", Event: \" + event + \"]\";\n","filename":"src\/jdk.sctp\/unix\/classes\/sun\/nio\/ch\/sctp\/PeerAddrChange.java","additions":17,"deletions":33,"binary":false,"changes":50,"status":"modified"},{"patch":"@@ -54,1 +54,1 @@\n-        return type() != MESSAGE && type() != NOTHING ? true : false;\n+        return type() != MESSAGE && type() != NOTHING;\n@@ -71,2 +71,2 @@\n-        if (value instanceof MessageInfoImpl)\n-            return (MessageInfoImpl) value;\n+        if (value instanceof MessageInfoImpl messageInfo)\n+            return messageInfo;\n@@ -80,2 +80,2 @@\n-        if (value instanceof SendFailed)\n-            return (SendFailed) value;\n+        if (value instanceof SendFailed sendFailed)\n+            return sendFailed;\n@@ -89,2 +89,2 @@\n-        if (value instanceof AssociationChange)\n-            return (AssociationChange) value;\n+        if (value instanceof AssociationChange associationChanged)\n+            return associationChanged;\n@@ -98,2 +98,2 @@\n-        if (value instanceof PeerAddrChange)\n-            return (PeerAddrChange) value;\n+        if (value instanceof PeerAddrChange peerAddressChanged)\n+            return peerAddressChanged;\n@@ -107,2 +107,2 @@\n-        if (value instanceof Shutdown)\n-            return (Shutdown) value;\n+        if (value instanceof Shutdown shutdown)\n+            return shutdown;\n@@ -118,7 +118,7 @@\n-            case NOTHING:              sb.append(\"NOTHING\");             break;\n-            case MESSAGE:              sb.append(\"MESSAGE\");             break;\n-            case SEND_FAILED:          sb.append(\"SEND FAILED\");         break;\n-            case ASSOCIATION_CHANGED:  sb.append(\"ASSOCIATION CHANGE\");  break;\n-            case PEER_ADDRESS_CHANGED: sb.append(\"PEER ADDRESS CHANGE\"); break;\n-            case SHUTDOWN:             sb.append(\"SHUTDOWN\");            break;\n-            default :                  sb.append(\"Unknown result type\");\n+            case NOTHING              -> sb.append(\"NOTHING\");\n+            case MESSAGE              -> sb.append(\"MESSAGE\");\n+            case SEND_FAILED          -> sb.append(\"SEND FAILED\");\n+            case ASSOCIATION_CHANGED  -> sb.append(\"ASSOCIATION CHANGE\");\n+            case PEER_ADDRESS_CHANGED -> sb.append(\"PEER ADDRESS CHANGE\");\n+            case SHUTDOWN             -> sb.append(\"SHUTDOWN\");\n+            default                   -> sb.append(\"Unknown result type\");\n","filename":"src\/jdk.sctp\/unix\/classes\/sun\/nio\/ch\/sctp\/ResultContainer.java","additions":18,"deletions":18,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -33,0 +33,2 @@\n+import java.security.AccessController;\n+import java.security.PrivilegedAction;\n@@ -86,3 +88,3 @@\n-    \/* IDs of native threads doing send and receivess, for signalling *\/\n-    private volatile long receiverThread = 0;\n-    private volatile long senderThread = 0;\n+    \/* IDs of native threads doing send and receive, for signalling *\/\n+    private volatile long receiverThread;\n+    private volatile long senderThread;\n@@ -97,1 +99,1 @@\n-        new ThreadLocal<Boolean>() {\n+        new ThreadLocal<>() {\n@@ -116,1 +118,1 @@\n-    private ChannelState state = ChannelState.UNINITIALIZED;\n+    private ChannelState state;\n@@ -120,1 +122,1 @@\n-    private HashSet<InetSocketAddress> localAddresses = new HashSet<InetSocketAddress>();\n+    private final Set<InetSocketAddress> localAddresses = new HashSet<>();\n@@ -228,1 +230,1 @@\n-    private SctpChannel bindUnbindAddress(InetAddress address, boolean add)\n+    private void bindUnbindAddress(InetAddress address, boolean add)\n@@ -284,1 +286,0 @@\n-        return this;\n@@ -289,1 +290,1 @@\n-            return port == -1 ? false : true;\n+            return port != -1;\n@@ -699,19 +700,0 @@\n-    private static class DefaultOptionsHolder {\n-        static final Set<SctpSocketOption<?>> defaultOptions = defaultOptions();\n-\n-        private static Set<SctpSocketOption<?>> defaultOptions() {\n-            HashSet<SctpSocketOption<?>> set = new HashSet<SctpSocketOption<?>>(10);\n-            set.add(SCTP_DISABLE_FRAGMENTS);\n-            set.add(SCTP_EXPLICIT_COMPLETE);\n-            set.add(SCTP_FRAGMENT_INTERLEAVE);\n-            set.add(SCTP_INIT_MAXSTREAMS);\n-            set.add(SCTP_NODELAY);\n-            set.add(SCTP_PRIMARY_ADDR);\n-            set.add(SCTP_SET_PEER_PRIMARY_ADDR);\n-            set.add(SO_SNDBUF);\n-            set.add(SO_RCVBUF);\n-            set.add(SO_LINGER);\n-            return Collections.unmodifiableSet(set);\n-        }\n-    }\n-\n@@ -720,1 +702,14 @@\n-        return DefaultOptionsHolder.defaultOptions;\n+        final class Holder {\n+            static final Set<SctpSocketOption<?>> DEFAULT_OPTIONS = Set.of(\n+                    SCTP_DISABLE_FRAGMENTS,\n+                    SCTP_EXPLICIT_COMPLETE,\n+                    SCTP_FRAGMENT_INTERLEAVE,\n+                    SCTP_INIT_MAXSTREAMS,\n+                    SCTP_NODELAY,\n+                    SCTP_PRIMARY_ADDR,\n+                    SCTP_SET_PEER_PRIMARY_ADDR,\n+                    SO_SNDBUF,\n+                    SO_RCVBUF,\n+                    SO_LINGER);\n+        }\n+        return Holder.DEFAULT_OPTIONS;\n@@ -859,1 +854,1 @@\n-    private InternalNotificationHandler internalNotificationHandler =\n+    private final InternalNotificationHandler internalNotificationHandler =\n@@ -862,2 +857,1 @@\n-    private void handleNotificationInternal(ResultContainer resultContainer)\n-    {\n+    private void handleNotificationInternal(ResultContainer resultContainer) {\n@@ -868,3 +862,2 @@\n-    private class InternalNotificationHandler\n-            extends AbstractNotificationHandler<Object>\n-    {\n+    private final class InternalNotificationHandler\n+            extends AbstractNotificationHandler<Object> {\n@@ -872,4 +865,3 @@\n-        public HandlerResult handleNotification(\n-                AssociationChangeNotification not, Object unused) {\n-            if (not.event().equals(\n-                    AssociationChangeNotification.AssocChangeEvent.COMM_UP) &&\n+        public HandlerResult handleNotification(AssociationChangeNotification not,\n+                                                Object unused) {\n+            if (not.event().equals(AssociationChangeNotification.AssocChangeEvent.COMM_UP) &&\n@@ -885,4 +877,3 @@\n-    private <T> HandlerResult invokeNotificationHandler\n-                                 (ResultContainer resultContainer,\n-                                  NotificationHandler<T> handler,\n-                                  T attachment) {\n+    private <T> HandlerResult invokeNotificationHandler(ResultContainer resultContainer,\n+                                                        NotificationHandler<T> handler,\n+                                                        T attachment) {\n@@ -894,1 +885,1 @@\n-        if (!(handler instanceof AbstractNotificationHandler)) {\n+        if (!(handler instanceof AbstractNotificationHandler<T> absHandler)) {\n@@ -899,20 +890,13 @@\n-        AbstractNotificationHandler<T> absHandler =\n-                (AbstractNotificationHandler<T>)handler;\n-        switch(resultContainer.type()) {\n-            case ASSOCIATION_CHANGED :\n-                return absHandler.handleNotification(\n-                        resultContainer.getAssociationChanged(), attachment);\n-            case PEER_ADDRESS_CHANGED :\n-                return absHandler.handleNotification(\n-                        resultContainer.getPeerAddressChanged(), attachment);\n-            case SEND_FAILED :\n-                return absHandler.handleNotification(\n-                        resultContainer.getSendFailed(), attachment);\n-            case SHUTDOWN :\n-                return absHandler.handleNotification(\n-                        resultContainer.getShutdown(), attachment);\n-            default :\n-                \/* implementation specific handlers *\/\n-                return absHandler.handleNotification(\n-                        resultContainer.notification(), attachment);\n-        }\n+        return switch (resultContainer.type()) {\n+            case ASSOCIATION_CHANGED  -> absHandler.handleNotification(\n+                    resultContainer.getAssociationChanged(), attachment);\n+            case PEER_ADDRESS_CHANGED -> absHandler.handleNotification(\n+                    resultContainer.getPeerAddressChanged(), attachment);\n+            case SEND_FAILED          -> absHandler.handleNotification(\n+                    resultContainer.getSendFailed(), attachment);\n+            case SHUTDOWN             -> absHandler.handleNotification(\n+                    resultContainer.getShutdown(), attachment);\n+            \/* implementation specific handlers *\/\n+            default                   -> absHandler.handleNotification(\n+                    resultContainer.notification(), attachment);\n+        };\n@@ -1116,2 +1100,2 @@\n-        java.security.AccessController.doPrivileged(\n-            new java.security.PrivilegedAction<Void>() {\n+        AccessController.doPrivileged(\n+            new PrivilegedAction<>() {\n","filename":"src\/jdk.sctp\/unix\/classes\/sun\/nio\/ch\/sctp\/SctpChannelImpl.java","additions":50,"deletions":66,"binary":false,"changes":116,"status":"modified"},{"patch":"@@ -39,0 +39,1 @@\n+import java.util.Map;\n@@ -83,2 +84,2 @@\n-    private volatile long receiverThread = 0;\n-    private volatile long senderThread = 0;\n+    private volatile long receiverThread;\n+    private volatile long senderThread;\n@@ -107,1 +108,1 @@\n-    private HashSet<InetSocketAddress> localAddresses = new HashSet<InetSocketAddress>();\n+    private final Set<InetSocketAddress> localAddresses = new HashSet<>();\n@@ -111,5 +112,5 @@\n-    \/* Keeps a map of addresses to association, and visa versa *\/\n-    private HashMap<SocketAddress, Association> addressMap =\n-                         new HashMap<SocketAddress, Association>();\n-    private HashMap<Association, Set<SocketAddress>> associationMap =\n-                         new HashMap<Association, Set<SocketAddress>>();\n+    \/* Keeps a map of addresses to association, and vice versa *\/\n+    private final Map<SocketAddress, Association> addressMap =\n+                         new HashMap<>();\n+    private final Map<Association, Set<SocketAddress>> associationMap =\n+                         new HashMap<>();\n@@ -121,6 +122,1 @@\n-    private final ThreadLocal<Association> associationToRemove =\n-        new ThreadLocal<Association>() {\n-             @Override protected Association initialValue() {\n-                 return null;\n-            }\n-    };\n+    private final ThreadLocal<Association> associationToRemove = new ThreadLocal<>();\n@@ -130,1 +126,1 @@\n-        new ThreadLocal<Boolean>() {\n+        new ThreadLocal<>() {\n@@ -262,1 +258,1 @@\n-            return port == -1 ? false : true;\n+            return port != -1;\n@@ -443,19 +439,0 @@\n-    private static class DefaultOptionsHolder {\n-        static final Set<SctpSocketOption<?>> defaultOptions = defaultOptions();\n-\n-        private static Set<SctpSocketOption<?>> defaultOptions() {\n-            HashSet<SctpSocketOption<?>> set = new HashSet<SctpSocketOption<?>>(10);\n-            set.add(SCTP_DISABLE_FRAGMENTS);\n-            set.add(SCTP_EXPLICIT_COMPLETE);\n-            set.add(SCTP_FRAGMENT_INTERLEAVE);\n-            set.add(SCTP_INIT_MAXSTREAMS);\n-            set.add(SCTP_NODELAY);\n-            set.add(SCTP_PRIMARY_ADDR);\n-            set.add(SCTP_SET_PEER_PRIMARY_ADDR);\n-            set.add(SO_SNDBUF);\n-            set.add(SO_RCVBUF);\n-            set.add(SO_LINGER);\n-            return Collections.unmodifiableSet(set);\n-        }\n-    }\n-\n@@ -464,1 +441,15 @@\n-        return DefaultOptionsHolder.defaultOptions;\n+        final class Holder {\n+            static final Set<SctpSocketOption<?>> DEFAULT_OPTIONS = Set.of(\n+                    SCTP_DISABLE_FRAGMENTS,\n+                    SCTP_EXPLICIT_COMPLETE,\n+                    SCTP_FRAGMENT_INTERLEAVE,\n+                    SCTP_INIT_MAXSTREAMS,\n+                    SCTP_NODELAY,\n+                    SCTP_PRIMARY_ADDR,\n+                    SCTP_SET_PEER_PRIMARY_ADDR,\n+                    SO_SNDBUF,\n+                    SO_RCVBUF,\n+                    SO_LINGER);\n+\n+        }\n+        return Holder.DEFAULT_OPTIONS;\n@@ -601,1 +592,1 @@\n-    private InternalNotificationHandler internalNotificationHandler =\n+    private final InternalNotificationHandler internalNotificationHandler =\n@@ -610,1 +601,1 @@\n-    private class InternalNotificationHandler\n+    private final class InternalNotificationHandler\n@@ -614,2 +605,2 @@\n-        public HandlerResult handleNotification(\n-                AssociationChangeNotification not, Object unused) {\n+        public HandlerResult handleNotification(AssociationChangeNotification not,\n+                                                Object unused) {\n@@ -620,1 +611,1 @@\n-                case COMM_UP :\n+                case COMM_UP -> {\n@@ -622,1 +613,1 @@\n-                       (sac.assocId(), sac.maxInStreams(), sac.maxOutStreams());\n+                            (sac.assocId(), sac.maxInStreams(), sac.maxOutStreams());\n@@ -624,4 +615,3 @@\n-                    break;\n-                case SHUTDOWN :\n-                case COMM_LOST :\n-                \/\/case RESTART: ???\n+                }\n+                case SHUTDOWN, COMM_LOST ->\n+                    \/\/case RESTART: ???\n@@ -629,1 +619,1 @@\n-                    associationToRemove.set(lookupAssociation(sac.assocId()));\n+                        associationToRemove.set(lookupAssociation(sac.assocId()));\n@@ -635,4 +625,3 @@\n-    private <T> HandlerResult invokeNotificationHandler(\n-                                   ResultContainer resultContainer,\n-                                   NotificationHandler<T> handler,\n-                                   T attachment) {\n+    private <T> HandlerResult invokeNotificationHandler(ResultContainer resultContainer,\n+                                                        NotificationHandler<T> handler,\n+                                                        T attachment) {\n@@ -643,1 +632,1 @@\n-        if (!(handler instanceof AbstractNotificationHandler)) {\n+        if (!(handler instanceof AbstractNotificationHandler<T> absHandler)) {\n@@ -646,24 +635,13 @@\n-            AbstractNotificationHandler<T> absHandler =\n-                    (AbstractNotificationHandler<T>)handler;\n-            switch(resultContainer.type()) {\n-                case ASSOCIATION_CHANGED :\n-                    result = absHandler.handleNotification(\n-                            resultContainer.getAssociationChanged(), attachment);\n-                    break;\n-                case PEER_ADDRESS_CHANGED :\n-                    result = absHandler.handleNotification(\n-                            resultContainer.getPeerAddressChanged(), attachment);\n-                    break;\n-                case SEND_FAILED :\n-                    result = absHandler.handleNotification(\n-                            resultContainer.getSendFailed(), attachment);\n-                    break;\n-                case SHUTDOWN :\n-                    result =  absHandler.handleNotification(\n-                            resultContainer.getShutdown(), attachment);\n-                    break;\n-                default :\n-                    \/* implementation specific handlers *\/\n-                    result =  absHandler.handleNotification(\n-                            resultContainer.notification(), attachment);\n-            }\n+            result = switch (resultContainer.type()) {\n+                case ASSOCIATION_CHANGED  -> absHandler.handleNotification(\n+                        resultContainer.getAssociationChanged(), attachment);\n+                case PEER_ADDRESS_CHANGED -> absHandler.handleNotification(\n+                        resultContainer.getPeerAddressChanged(), attachment);\n+                case SEND_FAILED          -> absHandler.handleNotification(\n+                        resultContainer.getSendFailed(), attachment);\n+                case SHUTDOWN             -> absHandler.handleNotification(\n+                        resultContainer.getShutdown(), attachment);\n+                \/* implementation specific handlers *\/\n+                default                   -> absHandler.handleNotification(\n+                        resultContainer.notification(), attachment);\n+            };\n@@ -757,2 +735,1 @@\n-     * @throws  IllegalArgumentException\n-     *          If the given association is not controlled by this channel\n+     * Checks if the given association is controlled by this channel.\n@@ -760,2 +737,1 @@\n-     * @return  {@code true} if, and only if, the given association is one\n-     *          of the current associations controlled by this channel\n+     * @throws IllegalArgumentException If the given association is not controlled by this channel\n@@ -763,1 +739,1 @@\n-    private boolean checkAssociation(Association messageAssoc) {\n+    private void checkAssociation(Association messageAssoc) {\n@@ -767,1 +743,1 @@\n-                    return true;\n+                    return;\n@@ -970,2 +946,1 @@\n-                Set<SocketAddress> addrs = associationMap.get(association);\n-                return addrs != null ? addrs : Collections.<SocketAddress>emptySet();\n+                return associationMap.getOrDefault(association, Collections.emptySet());\n","filename":"src\/jdk.sctp\/unix\/classes\/sun\/nio\/ch\/sctp\/SctpMultiChannelImpl.java","additions":59,"deletions":84,"binary":false,"changes":143,"status":"modified"},{"patch":"@@ -135,1 +135,1 @@\n-        HashSet<SocketAddress> set = null;\n+        Set<SocketAddress> set = null;\n@@ -139,1 +139,1 @@\n-            set = new HashSet<SocketAddress>(saa.length);\n+            set = new HashSet<>(saa.length);\n@@ -163,2 +163,0 @@\n-            if (addr == null)\n-                throw new IllegalArgumentException(\"Invalid option value\");\n@@ -260,1 +258,1 @@\n-        setIntOption0(fd, ((SctpStdSocketOption)name).constValue(), arg);\n+        setIntOption0(fd, ((SctpStdSocketOption<?>)name).constValue(), arg);\n@@ -270,1 +268,1 @@\n-        if (!(name instanceof SctpStdSocketOption))\n+        if (!(name instanceof SctpStdSocketOption<?> option))\n@@ -273,2 +271,1 @@\n-        int value = getIntOption0(fd,\n-                ((SctpStdSocketOption)name).constValue());\n+        int value = getIntOption0(fd, option.constValue());\n","filename":"src\/jdk.sctp\/unix\/classes\/sun\/nio\/ch\/sctp\/SctpNet.java","additions":5,"deletions":8,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -31,2 +31,2 @@\n- * All Notification implemenations MUST implement this interface to provide\n- * access to the native association identidier.\n+ * All Notification implementations MUST implement this interface to provide\n+ * access to the native association identifier.\n","filename":"src\/jdk.sctp\/unix\/classes\/sun\/nio\/ch\/sctp\/SctpNotification.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -44,1 +44,0 @@\n-import sun.nio.ch.DirectBuffer;\n@@ -51,1 +50,0 @@\n-import sun.nio.ch.Util;\n@@ -64,1 +62,1 @@\n-    private volatile long thread = 0;\n+    private volatile long thread;\n@@ -84,1 +82,1 @@\n-    private HashSet<InetSocketAddress> localAddresses = new HashSet<InetSocketAddress>();\n+    private final HashSet<InetSocketAddress> localAddresses = new HashSet<>();\n@@ -203,1 +201,1 @@\n-            return port == -1 ? false : true;\n+            return port != -1;\n@@ -392,10 +390,0 @@\n-    private static class DefaultOptionsHolder {\n-        static final Set<SctpSocketOption<?>> defaultOptions = defaultOptions();\n-\n-        private static Set<SctpSocketOption<?>> defaultOptions() {\n-            HashSet<SctpSocketOption<?>> set = new HashSet<SctpSocketOption<?>>(1);\n-            set.add(SctpStandardSocketOptions.SCTP_INIT_MAXSTREAMS);\n-            return Collections.unmodifiableSet(set);\n-        }\n-    }\n-\n@@ -404,1 +392,5 @@\n-        return DefaultOptionsHolder.defaultOptions;\n+        final class Holder {\n+            static final Set<SctpSocketOption<?>> DEFAULT_OPTIONS =\n+                    Set.of(SctpStandardSocketOptions.SCTP_INIT_MAXSTREAMS);\n+        }\n+        return Holder.DEFAULT_OPTIONS;\n","filename":"src\/jdk.sctp\/unix\/classes\/sun\/nio\/ch\/sctp\/SctpServerChannelImpl.java","additions":8,"deletions":16,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -41,5 +41,5 @@\n-    private int assocId;\n-    private SocketAddress address;\n-    private ByteBuffer buffer;\n-    private int errorCode;\n-    private int streamNumber;\n+    private final int assocId;\n+    private final SocketAddress address;\n+    private final ByteBuffer buffer;\n+    private final int errorCode;\n+    private final int streamNumber;\n@@ -100,9 +100,7 @@\n-        StringBuilder sb = new StringBuilder();\n-        sb.append(super.toString()).append(\" [\");\n-        sb.append(\"Association:\").append(association);\n-        sb.append(\", Address: \").append(address);\n-        sb.append(\", buffer: \").append(buffer);\n-        sb.append(\", errorCode: \").append(errorCode);\n-        sb.append(\", streamNumber: \").append(streamNumber);\n-        sb.append(\"]\");\n-        return sb.toString();\n+        return super.toString() + \" [\" +\n+                \"Association:\" + association +\n+                \", Address: \" + address +\n+                \", buffer: \" + buffer +\n+                \", errorCode: \" + errorCode +\n+                \", streamNumber: \" + streamNumber +\n+                \"]\";\n","filename":"src\/jdk.sctp\/unix\/classes\/sun\/nio\/ch\/sctp\/SendFailed.java","additions":12,"deletions":14,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n-    \/* assocId is used to lookup the association before the notification is\n+    \/* assocId is used to look up the association before the notification is\n@@ -39,1 +39,1 @@\n-    private int assocId;\n+    private final int assocId;\n@@ -64,4 +64,2 @@\n-        StringBuilder sb = new StringBuilder();\n-        sb.append(super.toString()).append(\" [\");\n-        sb.append(\"Association:\").append(association).append(\"]\");\n-        return sb.toString();\n+        return super.toString() + \" [\" +\n+                \"Association:\" + association + \"]\";\n","filename":"src\/jdk.sctp\/unix\/classes\/sun\/nio\/ch\/sctp\/Shutdown.java","additions":4,"deletions":6,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -1,150 +0,0 @@\n-\/*\n- * Copyright (c) 2009, 2012, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-package sun.nio.ch.sctp;\n-\n-import java.net.SocketAddress;\n-import java.net.InetAddress;\n-import java.io.IOException;\n-import java.util.Set;\n-import java.nio.ByteBuffer;\n-import java.nio.channels.spi.SelectorProvider;\n-import com.sun.nio.sctp.Association;\n-import com.sun.nio.sctp.MessageInfo;\n-import com.sun.nio.sctp.NotificationHandler;\n-import com.sun.nio.sctp.SctpChannel;\n-import com.sun.nio.sctp.SctpSocketOption;\n-\n-\/**\n- * Unimplemented.\n- *\/\n-public class SctpChannelImpl extends SctpChannel\n-{\n-    private static final String message = \"SCTP not supported on this platform\";\n-\n-    public SctpChannelImpl(SelectorProvider provider) {\n-        super(provider);\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public Association association() {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public SctpChannel bind(SocketAddress local)\n-                            throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public SctpChannel bindAddress(InetAddress address)\n-         throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public SctpChannel unbindAddress(InetAddress address)\n-         throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public boolean connect(SocketAddress remote) throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public boolean connect(SocketAddress remote, int maxOutStreams,\n-       int maxInStreams) throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public boolean isConnectionPending() {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public boolean finishConnect() throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public Set<SocketAddress> getAllLocalAddresses()\n-            throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public Set<SocketAddress> getRemoteAddresses()\n-            throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public SctpChannel shutdown() throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public <T> T getOption(SctpSocketOption<T> name)\n-            throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public <T> SctpChannel setOption(SctpSocketOption<T> name, T value)\n-        throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public Set<SctpSocketOption<?>> supportedOptions() {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public <T> MessageInfo receive(ByteBuffer dst, T attachment,\n-            NotificationHandler<T> handler) throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public int send(ByteBuffer src, MessageInfo messageInfo)\n-            throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    protected void implConfigureBlocking(boolean block) throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public void implCloseSelectableChannel() throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-}\n","filename":"src\/jdk.sctp\/windows\/classes\/sun\/nio\/ch\/sctp\/SctpChannelImpl.java","additions":0,"deletions":150,"binary":false,"changes":150,"status":"deleted"},{"patch":"@@ -1,137 +0,0 @@\n-\/*\n- * Copyright (c) 2009, 2012, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-package sun.nio.ch.sctp;\n-\n-import java.net.SocketAddress;\n-import java.net.InetAddress;\n-import java.io.IOException;\n-import java.util.Set;\n-import java.nio.ByteBuffer;\n-import java.nio.channels.spi.SelectorProvider;\n-import com.sun.nio.sctp.Association;\n-import com.sun.nio.sctp.SctpChannel;\n-import com.sun.nio.sctp.MessageInfo;\n-import com.sun.nio.sctp.NotificationHandler;\n-import com.sun.nio.sctp.SctpMultiChannel;\n-import com.sun.nio.sctp.SctpSocketOption;\n-\n-\/**\n- * Unimplemented.\n- *\/\n-public class SctpMultiChannelImpl extends SctpMultiChannel\n-{\n-    private static final String message = \"SCTP not supported on this platform\";\n-\n-    public SctpMultiChannelImpl(SelectorProvider provider) {\n-        super(provider);\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public Set<Association> associations() {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public SctpMultiChannel bind(SocketAddress local,\n-            int backlog) throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public SctpMultiChannel bindAddress(InetAddress address)\n-         throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public SctpMultiChannel unbindAddress(InetAddress address)\n-         throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public Set<SocketAddress> getAllLocalAddresses()\n-            throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public Set<SocketAddress> getRemoteAddresses\n-            (Association association) throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public SctpMultiChannel shutdown(Association association)\n-            throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public <T> T getOption(SctpSocketOption<T> name,\n-            Association association) throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public <T> SctpMultiChannel setOption(SctpSocketOption<T> name,\n-            T value, Association association) throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public Set<SctpSocketOption<?>> supportedOptions() {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public <T> MessageInfo receive(ByteBuffer buffer, T attachment,\n-            NotificationHandler<T> handler) throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public int send(ByteBuffer buffer, MessageInfo messageInfo)\n-            throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public SctpChannel branch(Association association)\n-            throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    protected void implConfigureBlocking(boolean block) throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public void implCloseSelectableChannel() throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-}\n","filename":"src\/jdk.sctp\/windows\/classes\/sun\/nio\/ch\/sctp\/SctpMultiChannelImpl.java","additions":0,"deletions":137,"binary":false,"changes":137,"status":"deleted"},{"patch":"@@ -1,102 +0,0 @@\n-\/*\n- * Copyright (c) 2009, 2012, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-package sun.nio.ch.sctp;\n-\n-import java.net.SocketAddress;\n-import java.net.InetAddress;\n-import java.io.IOException;\n-import java.util.Set;\n-import java.nio.channels.spi.SelectorProvider;\n-import com.sun.nio.sctp.SctpChannel;\n-import com.sun.nio.sctp.SctpServerChannel;\n-import com.sun.nio.sctp.SctpSocketOption;\n-\n-\/**\n- * Unimplemented.\n- *\/\n-public class SctpServerChannelImpl extends SctpServerChannel\n-{\n-    private static final String message = \"SCTP not supported on this platform\";\n-\n-    public SctpServerChannelImpl(SelectorProvider provider) {\n-        super(provider);\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public SctpChannel accept() throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public SctpServerChannel bind(SocketAddress local,\n-            int backlog) throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public SctpServerChannel bindAddress(InetAddress address)\n-         throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public SctpServerChannel unbindAddress(InetAddress address)\n-         throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public Set<SocketAddress> getAllLocalAddresses()\n-            throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public <T> T getOption(SctpSocketOption<T> name) throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public <T> SctpServerChannel setOption(SctpSocketOption<T> name,\n-            T value) throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public Set<SctpSocketOption<?>> supportedOptions() {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    protected void implConfigureBlocking(boolean block) throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public void implCloseSelectableChannel() throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-}\n","filename":"src\/jdk.sctp\/windows\/classes\/sun\/nio\/ch\/sctp\/SctpServerChannelImpl.java","additions":0,"deletions":102,"binary":false,"changes":102,"status":"deleted"},{"patch":"@@ -747,5 +747,3 @@\n-        if (options.length > 0) {\n-            for (OpenOption opt : options) {\n-                if (opt != READ)\n-                    throw new UnsupportedOperationException(\"'\" + opt + \"' not allowed\");\n-            }\n+        for (OpenOption opt : options) {\n+            if (opt != READ)\n+                throw new UnsupportedOperationException(\"'\" + opt + \"' not allowed\");\n","filename":"src\/jdk.zipfs\/share\/classes\/jdk\/nio\/zipfs\/ZipPath.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1567,0 +1567,2 @@\n+          [\"faddp\", \"faddp\", \"2S\"], [\"faddp\", \"faddp\", \"4S\"],\n+          [\"faddp\", \"faddp\", \"2D\"],\n","filename":"test\/hotspot\/gtest\/aarch64\/aarch64-asmtest.py","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -663,42 +663,45 @@\n-    __ fmul(v22, __ T2S, v23, v24);                    \/\/       fmul    v22.2S, v23.2S, v24.2S\n-    __ fmul(v17, __ T4S, v18, v19);                    \/\/       fmul    v17.4S, v18.4S, v19.4S\n-    __ fmul(v13, __ T2D, v14, v15);                    \/\/       fmul    v13.2D, v14.2D, v15.2D\n-    __ mlav(v4, __ T4H, v5, v6);                       \/\/       mla     v4.4H, v5.4H, v6.4H\n-    __ mlav(v28, __ T8H, v29, v30);                    \/\/       mla     v28.8H, v29.8H, v30.8H\n-    __ mlav(v23, __ T2S, v24, v25);                    \/\/       mla     v23.2S, v24.2S, v25.2S\n-    __ mlav(v21, __ T4S, v22, v23);                    \/\/       mla     v21.4S, v22.4S, v23.4S\n-    __ fmla(v25, __ T2S, v26, v27);                    \/\/       fmla    v25.2S, v26.2S, v27.2S\n-    __ fmla(v24, __ T4S, v25, v26);                    \/\/       fmla    v24.4S, v25.4S, v26.4S\n-    __ fmla(v3, __ T2D, v4, v5);                       \/\/       fmla    v3.2D, v4.2D, v5.2D\n-    __ mlsv(v23, __ T4H, v24, v25);                    \/\/       mls     v23.4H, v24.4H, v25.4H\n-    __ mlsv(v26, __ T8H, v27, v28);                    \/\/       mls     v26.8H, v27.8H, v28.8H\n-    __ mlsv(v23, __ T2S, v24, v25);                    \/\/       mls     v23.2S, v24.2S, v25.2S\n-    __ mlsv(v14, __ T4S, v15, v16);                    \/\/       mls     v14.4S, v15.4S, v16.4S\n-    __ fmls(v21, __ T2S, v22, v23);                    \/\/       fmls    v21.2S, v22.2S, v23.2S\n-    __ fmls(v3, __ T4S, v4, v5);                       \/\/       fmls    v3.4S, v4.4S, v5.4S\n-    __ fmls(v23, __ T2D, v24, v25);                    \/\/       fmls    v23.2D, v24.2D, v25.2D\n-    __ fdiv(v8, __ T2S, v9, v10);                      \/\/       fdiv    v8.2S, v9.2S, v10.2S\n-    __ fdiv(v24, __ T4S, v25, v26);                    \/\/       fdiv    v24.4S, v25.4S, v26.4S\n-    __ fdiv(v19, __ T2D, v20, v21);                    \/\/       fdiv    v19.2D, v20.2D, v21.2D\n-    __ maxv(v15, __ T8B, v16, v17);                    \/\/       smax    v15.8B, v16.8B, v17.8B\n-    __ maxv(v16, __ T16B, v17, v18);                   \/\/       smax    v16.16B, v17.16B, v18.16B\n-    __ maxv(v2, __ T4H, v3, v4);                       \/\/       smax    v2.4H, v3.4H, v4.4H\n-    __ maxv(v1, __ T8H, v2, v3);                       \/\/       smax    v1.8H, v2.8H, v3.8H\n-    __ maxv(v0, __ T2S, v1, v2);                       \/\/       smax    v0.2S, v1.2S, v2.2S\n-    __ maxv(v24, __ T4S, v25, v26);                    \/\/       smax    v24.4S, v25.4S, v26.4S\n-    __ smaxp(v4, __ T8B, v5, v6);                      \/\/       smaxp   v4.8B, v5.8B, v6.8B\n-    __ smaxp(v3, __ T16B, v4, v5);                     \/\/       smaxp   v3.16B, v4.16B, v5.16B\n-    __ smaxp(v11, __ T4H, v12, v13);                   \/\/       smaxp   v11.4H, v12.4H, v13.4H\n-    __ smaxp(v30, __ T8H, v31, v0);                    \/\/       smaxp   v30.8H, v31.8H, v0.8H\n-    __ smaxp(v27, __ T2S, v28, v29);                   \/\/       smaxp   v27.2S, v28.2S, v29.2S\n-    __ smaxp(v9, __ T4S, v10, v11);                    \/\/       smaxp   v9.4S, v10.4S, v11.4S\n-    __ fmax(v25, __ T2S, v26, v27);                    \/\/       fmax    v25.2S, v26.2S, v27.2S\n-    __ fmax(v2, __ T4S, v3, v4);                       \/\/       fmax    v2.4S, v3.4S, v4.4S\n-    __ fmax(v12, __ T2D, v13, v14);                    \/\/       fmax    v12.2D, v13.2D, v14.2D\n-    __ minv(v17, __ T8B, v18, v19);                    \/\/       smin    v17.8B, v18.8B, v19.8B\n-    __ minv(v30, __ T16B, v31, v0);                    \/\/       smin    v30.16B, v31.16B, v0.16B\n-    __ minv(v1, __ T4H, v2, v3);                       \/\/       smin    v1.4H, v2.4H, v3.4H\n-    __ minv(v12, __ T8H, v13, v14);                    \/\/       smin    v12.8H, v13.8H, v14.8H\n-    __ minv(v28, __ T2S, v29, v30);                    \/\/       smin    v28.2S, v29.2S, v30.2S\n-    __ minv(v0, __ T4S, v1, v2);                       \/\/       smin    v0.4S, v1.4S, v2.4S\n-    __ sminp(v17, __ T8B, v18, v19);                   \/\/       sminp   v17.8B, v18.8B, v19.8B\n+    __ faddp(v22, __ T2S, v23, v24);                   \/\/       faddp   v22.2S, v23.2S, v24.2S\n+    __ faddp(v17, __ T4S, v18, v19);                   \/\/       faddp   v17.4S, v18.4S, v19.4S\n+    __ faddp(v13, __ T2D, v14, v15);                   \/\/       faddp   v13.2D, v14.2D, v15.2D\n+    __ fmul(v4, __ T2S, v5, v6);                       \/\/       fmul    v4.2S, v5.2S, v6.2S\n+    __ fmul(v28, __ T4S, v29, v30);                    \/\/       fmul    v28.4S, v29.4S, v30.4S\n+    __ fmul(v23, __ T2D, v24, v25);                    \/\/       fmul    v23.2D, v24.2D, v25.2D\n+    __ mlav(v21, __ T4H, v22, v23);                    \/\/       mla     v21.4H, v22.4H, v23.4H\n+    __ mlav(v25, __ T8H, v26, v27);                    \/\/       mla     v25.8H, v26.8H, v27.8H\n+    __ mlav(v24, __ T2S, v25, v26);                    \/\/       mla     v24.2S, v25.2S, v26.2S\n+    __ mlav(v3, __ T4S, v4, v5);                       \/\/       mla     v3.4S, v4.4S, v5.4S\n+    __ fmla(v23, __ T2S, v24, v25);                    \/\/       fmla    v23.2S, v24.2S, v25.2S\n+    __ fmla(v26, __ T4S, v27, v28);                    \/\/       fmla    v26.4S, v27.4S, v28.4S\n+    __ fmla(v23, __ T2D, v24, v25);                    \/\/       fmla    v23.2D, v24.2D, v25.2D\n+    __ mlsv(v14, __ T4H, v15, v16);                    \/\/       mls     v14.4H, v15.4H, v16.4H\n+    __ mlsv(v21, __ T8H, v22, v23);                    \/\/       mls     v21.8H, v22.8H, v23.8H\n+    __ mlsv(v3, __ T2S, v4, v5);                       \/\/       mls     v3.2S, v4.2S, v5.2S\n+    __ mlsv(v23, __ T4S, v24, v25);                    \/\/       mls     v23.4S, v24.4S, v25.4S\n+    __ fmls(v8, __ T2S, v9, v10);                      \/\/       fmls    v8.2S, v9.2S, v10.2S\n+    __ fmls(v24, __ T4S, v25, v26);                    \/\/       fmls    v24.4S, v25.4S, v26.4S\n+    __ fmls(v19, __ T2D, v20, v21);                    \/\/       fmls    v19.2D, v20.2D, v21.2D\n+    __ fdiv(v15, __ T2S, v16, v17);                    \/\/       fdiv    v15.2S, v16.2S, v17.2S\n+    __ fdiv(v16, __ T4S, v17, v18);                    \/\/       fdiv    v16.4S, v17.4S, v18.4S\n+    __ fdiv(v2, __ T2D, v3, v4);                       \/\/       fdiv    v2.2D, v3.2D, v4.2D\n+    __ maxv(v1, __ T8B, v2, v3);                       \/\/       smax    v1.8B, v2.8B, v3.8B\n+    __ maxv(v0, __ T16B, v1, v2);                      \/\/       smax    v0.16B, v1.16B, v2.16B\n+    __ maxv(v24, __ T4H, v25, v26);                    \/\/       smax    v24.4H, v25.4H, v26.4H\n+    __ maxv(v4, __ T8H, v5, v6);                       \/\/       smax    v4.8H, v5.8H, v6.8H\n+    __ maxv(v3, __ T2S, v4, v5);                       \/\/       smax    v3.2S, v4.2S, v5.2S\n+    __ maxv(v11, __ T4S, v12, v13);                    \/\/       smax    v11.4S, v12.4S, v13.4S\n+    __ smaxp(v30, __ T8B, v31, v0);                    \/\/       smaxp   v30.8B, v31.8B, v0.8B\n+    __ smaxp(v27, __ T16B, v28, v29);                  \/\/       smaxp   v27.16B, v28.16B, v29.16B\n+    __ smaxp(v9, __ T4H, v10, v11);                    \/\/       smaxp   v9.4H, v10.4H, v11.4H\n+    __ smaxp(v25, __ T8H, v26, v27);                   \/\/       smaxp   v25.8H, v26.8H, v27.8H\n+    __ smaxp(v2, __ T2S, v3, v4);                      \/\/       smaxp   v2.2S, v3.2S, v4.2S\n+    __ smaxp(v12, __ T4S, v13, v14);                   \/\/       smaxp   v12.4S, v13.4S, v14.4S\n+    __ fmax(v17, __ T2S, v18, v19);                    \/\/       fmax    v17.2S, v18.2S, v19.2S\n+    __ fmax(v30, __ T4S, v31, v0);                     \/\/       fmax    v30.4S, v31.4S, v0.4S\n+    __ fmax(v1, __ T2D, v2, v3);                       \/\/       fmax    v1.2D, v2.2D, v3.2D\n+    __ minv(v12, __ T8B, v13, v14);                    \/\/       smin    v12.8B, v13.8B, v14.8B\n+    __ minv(v28, __ T16B, v29, v30);                   \/\/       smin    v28.16B, v29.16B, v30.16B\n+    __ minv(v0, __ T4H, v1, v2);                       \/\/       smin    v0.4H, v1.4H, v2.4H\n+    __ minv(v17, __ T8H, v18, v19);                    \/\/       smin    v17.8H, v18.8H, v19.8H\n+    __ minv(v12, __ T2S, v13, v14);                    \/\/       smin    v12.2S, v13.2S, v14.2S\n+    __ minv(v17, __ T4S, v18, v19);                    \/\/       smin    v17.4S, v18.4S, v19.4S\n+    __ sminp(v21, __ T8B, v22, v23);                   \/\/       sminp   v21.8B, v22.8B, v23.8B\n@@ -706,10 +709,10 @@\n-    __ sminp(v17, __ T4H, v18, v19);                   \/\/       sminp   v17.4H, v18.4H, v19.4H\n-    __ sminp(v21, __ T8H, v22, v23);                   \/\/       sminp   v21.8H, v22.8H, v23.8H\n-    __ sminp(v12, __ T2S, v13, v14);                   \/\/       sminp   v12.2S, v13.2S, v14.2S\n-    __ sminp(v27, __ T4S, v28, v29);                   \/\/       sminp   v27.4S, v28.4S, v29.4S\n-    __ fmin(v29, __ T2S, v30, v31);                    \/\/       fmin    v29.2S, v30.2S, v31.2S\n-    __ fmin(v30, __ T4S, v31, v0);                     \/\/       fmin    v30.4S, v31.4S, v0.4S\n-    __ fmin(v1, __ T2D, v2, v3);                       \/\/       fmin    v1.2D, v2.2D, v3.2D\n-    __ cmeq(v25, __ T8B, v26, v27);                    \/\/       cmeq    v25.8B, v26.8B, v27.8B\n-    __ cmeq(v27, __ T16B, v28, v29);                   \/\/       cmeq    v27.16B, v28.16B, v29.16B\n-    __ cmeq(v4, __ T4H, v5, v6);                       \/\/       cmeq    v4.4H, v5.4H, v6.4H\n+    __ sminp(v27, __ T4H, v28, v29);                   \/\/       sminp   v27.4H, v28.4H, v29.4H\n+    __ sminp(v29, __ T8H, v30, v31);                   \/\/       sminp   v29.8H, v30.8H, v31.8H\n+    __ sminp(v30, __ T2S, v31, v0);                    \/\/       sminp   v30.2S, v31.2S, v0.2S\n+    __ sminp(v1, __ T4S, v2, v3);                      \/\/       sminp   v1.4S, v2.4S, v3.4S\n+    __ fmin(v25, __ T2S, v26, v27);                    \/\/       fmin    v25.2S, v26.2S, v27.2S\n+    __ fmin(v27, __ T4S, v28, v29);                    \/\/       fmin    v27.4S, v28.4S, v29.4S\n+    __ fmin(v4, __ T2D, v5, v6);                       \/\/       fmin    v4.2D, v5.2D, v6.2D\n+    __ cmeq(v29, __ T8B, v30, v31);                    \/\/       cmeq    v29.8B, v30.8B, v31.8B\n+    __ cmeq(v3, __ T16B, v4, v5);                      \/\/       cmeq    v3.16B, v4.16B, v5.16B\n+    __ cmeq(v6, __ T4H, v7, v8);                       \/\/       cmeq    v6.4H, v7.4H, v8.4H\n@@ -717,43 +720,43 @@\n-    __ cmeq(v3, __ T2S, v4, v5);                       \/\/       cmeq    v3.2S, v4.2S, v5.2S\n-    __ cmeq(v6, __ T4S, v7, v8);                       \/\/       cmeq    v6.4S, v7.4S, v8.4S\n-    __ cmeq(v29, __ T2D, v30, v31);                    \/\/       cmeq    v29.2D, v30.2D, v31.2D\n-    __ fcmeq(v25, __ T2S, v26, v27);                   \/\/       fcmeq   v25.2S, v26.2S, v27.2S\n-    __ fcmeq(v17, __ T4S, v18, v19);                   \/\/       fcmeq   v17.4S, v18.4S, v19.4S\n-    __ fcmeq(v8, __ T2D, v9, v10);                     \/\/       fcmeq   v8.2D, v9.2D, v10.2D\n-    __ cmgt(v7, __ T8B, v8, v9);                       \/\/       cmgt    v7.8B, v8.8B, v9.8B\n-    __ cmgt(v12, __ T16B, v13, v14);                   \/\/       cmgt    v12.16B, v13.16B, v14.16B\n-    __ cmgt(v0, __ T4H, v1, v2);                       \/\/       cmgt    v0.4H, v1.4H, v2.4H\n-    __ cmgt(v19, __ T8H, v20, v21);                    \/\/       cmgt    v19.8H, v20.8H, v21.8H\n-    __ cmgt(v1, __ T2S, v2, v3);                       \/\/       cmgt    v1.2S, v2.2S, v3.2S\n-    __ cmgt(v23, __ T4S, v24, v25);                    \/\/       cmgt    v23.4S, v24.4S, v25.4S\n-    __ cmgt(v2, __ T2D, v3, v4);                       \/\/       cmgt    v2.2D, v3.2D, v4.2D\n-    __ cmhi(v0, __ T8B, v1, v2);                       \/\/       cmhi    v0.8B, v1.8B, v2.8B\n-    __ cmhi(v8, __ T16B, v9, v10);                     \/\/       cmhi    v8.16B, v9.16B, v10.16B\n-    __ cmhi(v23, __ T4H, v24, v25);                    \/\/       cmhi    v23.4H, v24.4H, v25.4H\n-    __ cmhi(v25, __ T8H, v26, v27);                    \/\/       cmhi    v25.8H, v26.8H, v27.8H\n-    __ cmhi(v15, __ T2S, v16, v17);                    \/\/       cmhi    v15.2S, v16.2S, v17.2S\n-    __ cmhi(v29, __ T4S, v30, v31);                    \/\/       cmhi    v29.4S, v30.4S, v31.4S\n-    __ cmhi(v3, __ T2D, v4, v5);                       \/\/       cmhi    v3.2D, v4.2D, v5.2D\n-    __ cmhs(v10, __ T8B, v11, v12);                    \/\/       cmhs    v10.8B, v11.8B, v12.8B\n-    __ cmhs(v22, __ T16B, v23, v24);                   \/\/       cmhs    v22.16B, v23.16B, v24.16B\n-    __ cmhs(v10, __ T4H, v11, v12);                    \/\/       cmhs    v10.4H, v11.4H, v12.4H\n-    __ cmhs(v4, __ T8H, v5, v6);                       \/\/       cmhs    v4.8H, v5.8H, v6.8H\n-    __ cmhs(v17, __ T2S, v18, v19);                    \/\/       cmhs    v17.2S, v18.2S, v19.2S\n-    __ cmhs(v1, __ T4S, v2, v3);                       \/\/       cmhs    v1.4S, v2.4S, v3.4S\n-    __ cmhs(v11, __ T2D, v12, v13);                    \/\/       cmhs    v11.2D, v12.2D, v13.2D\n-    __ fcmgt(v7, __ T2S, v8, v9);                      \/\/       fcmgt   v7.2S, v8.2S, v9.2S\n-    __ fcmgt(v10, __ T4S, v11, v12);                   \/\/       fcmgt   v10.4S, v11.4S, v12.4S\n-    __ fcmgt(v15, __ T2D, v16, v17);                   \/\/       fcmgt   v15.2D, v16.2D, v17.2D\n-    __ cmge(v16, __ T8B, v17, v18);                    \/\/       cmge    v16.8B, v17.8B, v18.8B\n-    __ cmge(v2, __ T16B, v3, v4);                      \/\/       cmge    v2.16B, v3.16B, v4.16B\n-    __ cmge(v9, __ T4H, v10, v11);                     \/\/       cmge    v9.4H, v10.4H, v11.4H\n-    __ cmge(v11, __ T8H, v12, v13);                    \/\/       cmge    v11.8H, v12.8H, v13.8H\n-    __ cmge(v12, __ T2S, v13, v14);                    \/\/       cmge    v12.2S, v13.2S, v14.2S\n-    __ cmge(v14, __ T4S, v15, v16);                    \/\/       cmge    v14.4S, v15.4S, v16.4S\n-    __ cmge(v13, __ T2D, v14, v15);                    \/\/       cmge    v13.2D, v14.2D, v15.2D\n-    __ fcmge(v2, __ T2S, v3, v4);                      \/\/       fcmge   v2.2S, v3.2S, v4.2S\n-    __ fcmge(v6, __ T4S, v7, v8);                      \/\/       fcmge   v6.4S, v7.4S, v8.4S\n-    __ fcmge(v19, __ T2D, v20, v21);                   \/\/       fcmge   v19.2D, v20.2D, v21.2D\n-    __ facgt(v25, __ T2S, v26, v27);                   \/\/       facgt   v25.2S, v26.2S, v27.2S\n-    __ facgt(v15, __ T4S, v16, v17);                   \/\/       facgt   v15.4S, v16.4S, v17.4S\n-    __ facgt(v4, __ T2D, v5, v6);                      \/\/       facgt   v4.2D, v5.2D, v6.2D\n+    __ cmeq(v25, __ T2S, v26, v27);                    \/\/       cmeq    v25.2S, v26.2S, v27.2S\n+    __ cmeq(v17, __ T4S, v18, v19);                    \/\/       cmeq    v17.4S, v18.4S, v19.4S\n+    __ cmeq(v8, __ T2D, v9, v10);                      \/\/       cmeq    v8.2D, v9.2D, v10.2D\n+    __ fcmeq(v7, __ T2S, v8, v9);                      \/\/       fcmeq   v7.2S, v8.2S, v9.2S\n+    __ fcmeq(v12, __ T4S, v13, v14);                   \/\/       fcmeq   v12.4S, v13.4S, v14.4S\n+    __ fcmeq(v0, __ T2D, v1, v2);                      \/\/       fcmeq   v0.2D, v1.2D, v2.2D\n+    __ cmgt(v19, __ T8B, v20, v21);                    \/\/       cmgt    v19.8B, v20.8B, v21.8B\n+    __ cmgt(v1, __ T16B, v2, v3);                      \/\/       cmgt    v1.16B, v2.16B, v3.16B\n+    __ cmgt(v23, __ T4H, v24, v25);                    \/\/       cmgt    v23.4H, v24.4H, v25.4H\n+    __ cmgt(v2, __ T8H, v3, v4);                       \/\/       cmgt    v2.8H, v3.8H, v4.8H\n+    __ cmgt(v0, __ T2S, v1, v2);                       \/\/       cmgt    v0.2S, v1.2S, v2.2S\n+    __ cmgt(v8, __ T4S, v9, v10);                      \/\/       cmgt    v8.4S, v9.4S, v10.4S\n+    __ cmgt(v23, __ T2D, v24, v25);                    \/\/       cmgt    v23.2D, v24.2D, v25.2D\n+    __ cmhi(v25, __ T8B, v26, v27);                    \/\/       cmhi    v25.8B, v26.8B, v27.8B\n+    __ cmhi(v15, __ T16B, v16, v17);                   \/\/       cmhi    v15.16B, v16.16B, v17.16B\n+    __ cmhi(v29, __ T4H, v30, v31);                    \/\/       cmhi    v29.4H, v30.4H, v31.4H\n+    __ cmhi(v3, __ T8H, v4, v5);                       \/\/       cmhi    v3.8H, v4.8H, v5.8H\n+    __ cmhi(v10, __ T2S, v11, v12);                    \/\/       cmhi    v10.2S, v11.2S, v12.2S\n+    __ cmhi(v22, __ T4S, v23, v24);                    \/\/       cmhi    v22.4S, v23.4S, v24.4S\n+    __ cmhi(v10, __ T2D, v11, v12);                    \/\/       cmhi    v10.2D, v11.2D, v12.2D\n+    __ cmhs(v4, __ T8B, v5, v6);                       \/\/       cmhs    v4.8B, v5.8B, v6.8B\n+    __ cmhs(v17, __ T16B, v18, v19);                   \/\/       cmhs    v17.16B, v18.16B, v19.16B\n+    __ cmhs(v1, __ T4H, v2, v3);                       \/\/       cmhs    v1.4H, v2.4H, v3.4H\n+    __ cmhs(v11, __ T8H, v12, v13);                    \/\/       cmhs    v11.8H, v12.8H, v13.8H\n+    __ cmhs(v7, __ T2S, v8, v9);                       \/\/       cmhs    v7.2S, v8.2S, v9.2S\n+    __ cmhs(v10, __ T4S, v11, v12);                    \/\/       cmhs    v10.4S, v11.4S, v12.4S\n+    __ cmhs(v15, __ T2D, v16, v17);                    \/\/       cmhs    v15.2D, v16.2D, v17.2D\n+    __ fcmgt(v16, __ T2S, v17, v18);                   \/\/       fcmgt   v16.2S, v17.2S, v18.2S\n+    __ fcmgt(v2, __ T4S, v3, v4);                      \/\/       fcmgt   v2.4S, v3.4S, v4.4S\n+    __ fcmgt(v9, __ T2D, v10, v11);                    \/\/       fcmgt   v9.2D, v10.2D, v11.2D\n+    __ cmge(v11, __ T8B, v12, v13);                    \/\/       cmge    v11.8B, v12.8B, v13.8B\n+    __ cmge(v12, __ T16B, v13, v14);                   \/\/       cmge    v12.16B, v13.16B, v14.16B\n+    __ cmge(v14, __ T4H, v15, v16);                    \/\/       cmge    v14.4H, v15.4H, v16.4H\n+    __ cmge(v13, __ T8H, v14, v15);                    \/\/       cmge    v13.8H, v14.8H, v15.8H\n+    __ cmge(v2, __ T2S, v3, v4);                       \/\/       cmge    v2.2S, v3.2S, v4.2S\n+    __ cmge(v6, __ T4S, v7, v8);                       \/\/       cmge    v6.4S, v7.4S, v8.4S\n+    __ cmge(v19, __ T2D, v20, v21);                    \/\/       cmge    v19.2D, v20.2D, v21.2D\n+    __ fcmge(v25, __ T2S, v26, v27);                   \/\/       fcmge   v25.2S, v26.2S, v27.2S\n+    __ fcmge(v15, __ T4S, v16, v17);                   \/\/       fcmge   v15.4S, v16.4S, v17.4S\n+    __ fcmge(v4, __ T2D, v5, v6);                      \/\/       fcmge   v4.2D, v5.2D, v6.2D\n+    __ facgt(v2, __ T2S, v3, v4);                      \/\/       facgt   v2.2S, v3.2S, v4.2S\n+    __ facgt(v4, __ T4S, v5, v6);                      \/\/       facgt   v4.4S, v5.4S, v6.4S\n+    __ facgt(v11, __ T2D, v12, v13);                   \/\/       facgt   v11.2D, v12.2D, v13.2D\n@@ -762,6 +765,6 @@\n-    __ sve_fcm(Assembler::EQ, p1, __ S, p4, z4, 0.0);  \/\/       fcmeq   p1.s, p4\/z, z4.s, #0.0\n-    __ sve_fcm(Assembler::GT, p10, __ D, p2, z16, 0.0); \/\/      fcmgt   p10.d, p2\/z, z16.d, #0.0\n-    __ sve_fcm(Assembler::GE, p10, __ S, p6, z22, 0.0); \/\/      fcmge   p10.s, p6\/z, z22.s, #0.0\n-    __ sve_fcm(Assembler::LT, p11, __ S, p2, z28, 0.0); \/\/      fcmlt   p11.s, p2\/z, z28.s, #0.0\n-    __ sve_fcm(Assembler::LE, p12, __ S, p7, z1, 0.0); \/\/       fcmle   p12.s, p7\/z, z1.s, #0.0\n-    __ sve_fcm(Assembler::NE, p5, __ S, p0, z15, 0.0); \/\/       fcmne   p5.s, p0\/z, z15.s, #0.0\n+    __ sve_fcm(Assembler::EQ, p9, __ D, p4, z20, 0.0); \/\/       fcmeq   p9.d, p4\/z, z20.d, #0.0\n+    __ sve_fcm(Assembler::GT, p5, __ D, p3, z20, 0.0); \/\/       fcmgt   p5.d, p3\/z, z20.d, #0.0\n+    __ sve_fcm(Assembler::GE, p13, __ D, p3, z23, 0.0); \/\/      fcmge   p13.d, p3\/z, z23.d, #0.0\n+    __ sve_fcm(Assembler::LT, p5, __ S, p3, z24, 0.0); \/\/       fcmlt   p5.s, p3\/z, z24.s, #0.0\n+    __ sve_fcm(Assembler::LE, p15, __ D, p1, z10, 0.0); \/\/      fcmle   p15.d, p1\/z, z10.d, #0.0\n+    __ sve_fcm(Assembler::NE, p1, __ S, p4, z3, 0.0);  \/\/       fcmne   p1.s, p4\/z, z3.s, #0.0\n@@ -1018,9 +1021,9 @@\n-    __ swp(Assembler::xword, r3, r13, r19);            \/\/       swp     x3, x13, [x19]\n-    __ ldadd(Assembler::xword, r17, r16, r3);          \/\/       ldadd   x17, x16, [x3]\n-    __ ldbic(Assembler::xword, r1, r11, r30);          \/\/       ldclr   x1, x11, [x30]\n-    __ ldeor(Assembler::xword, r5, r8, r15);           \/\/       ldeor   x5, x8, [x15]\n-    __ ldorr(Assembler::xword, r29, r30, r0);          \/\/       ldset   x29, x30, [x0]\n-    __ ldsmin(Assembler::xword, r20, r7, r20);         \/\/       ldsmin  x20, x7, [x20]\n-    __ ldsmax(Assembler::xword, r23, r28, r21);        \/\/       ldsmax  x23, x28, [x21]\n-    __ ldumin(Assembler::xword, r27, r25, r5);         \/\/       ldumin  x27, x25, [x5]\n-    __ ldumax(Assembler::xword, r1, r23, r16);         \/\/       ldumax  x1, x23, [x16]\n+    __ swp(Assembler::xword, r17, r16, r3);            \/\/       swp     x17, x16, [x3]\n+    __ ldadd(Assembler::xword, r1, r11, r30);          \/\/       ldadd   x1, x11, [x30]\n+    __ ldbic(Assembler::xword, r5, r8, r15);           \/\/       ldclr   x5, x8, [x15]\n+    __ ldeor(Assembler::xword, r29, r30, r0);          \/\/       ldeor   x29, x30, [x0]\n+    __ ldorr(Assembler::xword, r20, r7, r20);          \/\/       ldset   x20, x7, [x20]\n+    __ ldsmin(Assembler::xword, r23, r28, r21);        \/\/       ldsmin  x23, x28, [x21]\n+    __ ldsmax(Assembler::xword, r27, r25, r5);         \/\/       ldsmax  x27, x25, [x5]\n+    __ ldumin(Assembler::xword, r1, r23, r16);         \/\/       ldumin  x1, x23, [x16]\n+    __ ldumax(Assembler::xword, zr, r5, r12);          \/\/       ldumax  xzr, x5, [x12]\n@@ -1029,9 +1032,9 @@\n-    __ swpa(Assembler::xword, zr, r5, r12);            \/\/       swpa    xzr, x5, [x12]\n-    __ ldadda(Assembler::xword, r9, r28, r15);         \/\/       ldadda  x9, x28, [x15]\n-    __ ldbica(Assembler::xword, r29, r22, sp);         \/\/       ldclra  x29, x22, [sp]\n-    __ ldeora(Assembler::xword, r19, zr, r5);          \/\/       ldeora  x19, xzr, [x5]\n-    __ ldorra(Assembler::xword, r14, r16, sp);         \/\/       ldseta  x14, x16, [sp]\n-    __ ldsmina(Assembler::xword, r16, r27, r20);       \/\/       ldsmina x16, x27, [x20]\n-    __ ldsmaxa(Assembler::xword, r16, r12, r11);       \/\/       ldsmaxa x16, x12, [x11]\n-    __ ldumina(Assembler::xword, r9, r6, r30);         \/\/       ldumina x9, x6, [x30]\n-    __ ldumaxa(Assembler::xword, r17, r27, r28);       \/\/       ldumaxa x17, x27, [x28]\n+    __ swpa(Assembler::xword, r9, r28, r15);           \/\/       swpa    x9, x28, [x15]\n+    __ ldadda(Assembler::xword, r29, r22, sp);         \/\/       ldadda  x29, x22, [sp]\n+    __ ldbica(Assembler::xword, r19, zr, r5);          \/\/       ldclra  x19, xzr, [x5]\n+    __ ldeora(Assembler::xword, r14, r16, sp);         \/\/       ldeora  x14, x16, [sp]\n+    __ ldorra(Assembler::xword, r16, r27, r20);        \/\/       ldseta  x16, x27, [x20]\n+    __ ldsmina(Assembler::xword, r16, r12, r11);       \/\/       ldsmina x16, x12, [x11]\n+    __ ldsmaxa(Assembler::xword, r9, r6, r30);         \/\/       ldsmaxa x9, x6, [x30]\n+    __ ldumina(Assembler::xword, r17, r27, r28);       \/\/       ldumina x17, x27, [x28]\n+    __ ldumaxa(Assembler::xword, r30, r7, r10);        \/\/       ldumaxa x30, x7, [x10]\n@@ -1040,9 +1043,9 @@\n-    __ swpal(Assembler::xword, r30, r7, r10);          \/\/       swpal   x30, x7, [x10]\n-    __ ldaddal(Assembler::xword, r20, r10, r4);        \/\/       ldaddal x20, x10, [x4]\n-    __ ldbical(Assembler::xword, r24, r17, r17);       \/\/       ldclral x24, x17, [x17]\n-    __ ldeoral(Assembler::xword, r22, r3, r29);        \/\/       ldeoral x22, x3, [x29]\n-    __ ldorral(Assembler::xword, r15, r22, r19);       \/\/       ldsetal x15, x22, [x19]\n-    __ ldsminal(Assembler::xword, r19, r22, r2);       \/\/       ldsminal        x19, x22, [x2]\n-    __ ldsmaxal(Assembler::xword, r15, r6, r12);       \/\/       ldsmaxal        x15, x6, [x12]\n-    __ lduminal(Assembler::xword, r16, r11, r13);      \/\/       lduminal        x16, x11, [x13]\n-    __ ldumaxal(Assembler::xword, r23, r1, r30);       \/\/       ldumaxal        x23, x1, [x30]\n+    __ swpal(Assembler::xword, r20, r10, r4);          \/\/       swpal   x20, x10, [x4]\n+    __ ldaddal(Assembler::xword, r24, r17, r17);       \/\/       ldaddal x24, x17, [x17]\n+    __ ldbical(Assembler::xword, r22, r3, r29);        \/\/       ldclral x22, x3, [x29]\n+    __ ldeoral(Assembler::xword, r15, r22, r19);       \/\/       ldeoral x15, x22, [x19]\n+    __ ldorral(Assembler::xword, r19, r22, r2);        \/\/       ldsetal x19, x22, [x2]\n+    __ ldsminal(Assembler::xword, r15, r6, r12);       \/\/       ldsminal        x15, x6, [x12]\n+    __ ldsmaxal(Assembler::xword, r16, r11, r13);      \/\/       ldsmaxal        x16, x11, [x13]\n+    __ lduminal(Assembler::xword, r23, r1, r30);       \/\/       lduminal        x23, x1, [x30]\n+    __ ldumaxal(Assembler::xword, r19, r5, r17);       \/\/       ldumaxal        x19, x5, [x17]\n@@ -1051,9 +1054,9 @@\n-    __ swpl(Assembler::xword, r19, r5, r17);           \/\/       swpl    x19, x5, [x17]\n-    __ ldaddl(Assembler::xword, r2, r16, r22);         \/\/       ldaddl  x2, x16, [x22]\n-    __ ldbicl(Assembler::xword, r13, r10, r21);        \/\/       ldclrl  x13, x10, [x21]\n-    __ ldeorl(Assembler::xword, r29, r27, r12);        \/\/       ldeorl  x29, x27, [x12]\n-    __ ldorrl(Assembler::xword, r27, r3, r1);          \/\/       ldsetl  x27, x3, [x1]\n-    __ ldsminl(Assembler::xword, zr, r24, r19);        \/\/       ldsminl xzr, x24, [x19]\n-    __ ldsmaxl(Assembler::xword, r17, r9, r28);        \/\/       ldsmaxl x17, x9, [x28]\n-    __ lduminl(Assembler::xword, r27, r15, r7);        \/\/       lduminl x27, x15, [x7]\n-    __ ldumaxl(Assembler::xword, r21, r23, sp);        \/\/       ldumaxl x21, x23, [sp]\n+    __ swpl(Assembler::xword, r2, r16, r22);           \/\/       swpl    x2, x16, [x22]\n+    __ ldaddl(Assembler::xword, r13, r10, r21);        \/\/       ldaddl  x13, x10, [x21]\n+    __ ldbicl(Assembler::xword, r29, r27, r12);        \/\/       ldclrl  x29, x27, [x12]\n+    __ ldeorl(Assembler::xword, r27, r3, r1);          \/\/       ldeorl  x27, x3, [x1]\n+    __ ldorrl(Assembler::xword, zr, r24, r19);         \/\/       ldsetl  xzr, x24, [x19]\n+    __ ldsminl(Assembler::xword, r17, r9, r28);        \/\/       ldsminl x17, x9, [x28]\n+    __ ldsmaxl(Assembler::xword, r27, r15, r7);        \/\/       ldsmaxl x27, x15, [x7]\n+    __ lduminl(Assembler::xword, r21, r23, sp);        \/\/       lduminl x21, x23, [sp]\n+    __ ldumaxl(Assembler::xword, r25, r2, sp);         \/\/       ldumaxl x25, x2, [sp]\n@@ -1062,9 +1065,9 @@\n-    __ swp(Assembler::word, r25, r2, sp);              \/\/       swp     w25, w2, [sp]\n-    __ ldadd(Assembler::word, r27, r16, r10);          \/\/       ldadd   w27, w16, [x10]\n-    __ ldbic(Assembler::word, r23, r19, r3);           \/\/       ldclr   w23, w19, [x3]\n-    __ ldeor(Assembler::word, r16, r0, r25);           \/\/       ldeor   w16, w0, [x25]\n-    __ ldorr(Assembler::word, r26, r23, r2);           \/\/       ldset   w26, w23, [x2]\n-    __ ldsmin(Assembler::word, r16, r12, r4);          \/\/       ldsmin  w16, w12, [x4]\n-    __ ldsmax(Assembler::word, r28, r30, r29);         \/\/       ldsmax  w28, w30, [x29]\n-    __ ldumin(Assembler::word, r16, r27, r6);          \/\/       ldumin  w16, w27, [x6]\n-    __ ldumax(Assembler::word, r9, r29, r15);          \/\/       ldumax  w9, w29, [x15]\n+    __ swp(Assembler::word, r27, r16, r10);            \/\/       swp     w27, w16, [x10]\n+    __ ldadd(Assembler::word, r23, r19, r3);           \/\/       ldadd   w23, w19, [x3]\n+    __ ldbic(Assembler::word, r16, r0, r25);           \/\/       ldclr   w16, w0, [x25]\n+    __ ldeor(Assembler::word, r26, r23, r2);           \/\/       ldeor   w26, w23, [x2]\n+    __ ldorr(Assembler::word, r16, r12, r4);           \/\/       ldset   w16, w12, [x4]\n+    __ ldsmin(Assembler::word, r28, r30, r29);         \/\/       ldsmin  w28, w30, [x29]\n+    __ ldsmax(Assembler::word, r16, r27, r6);          \/\/       ldsmax  w16, w27, [x6]\n+    __ ldumin(Assembler::word, r9, r29, r15);          \/\/       ldumin  w9, w29, [x15]\n+    __ ldumax(Assembler::word, r7, r4, r7);            \/\/       ldumax  w7, w4, [x7]\n@@ -1073,9 +1076,9 @@\n-    __ swpa(Assembler::word, r7, r4, r7);              \/\/       swpa    w7, w4, [x7]\n-    __ ldadda(Assembler::word, r15, r9, r23);          \/\/       ldadda  w15, w9, [x23]\n-    __ ldbica(Assembler::word, r8, r2, r28);           \/\/       ldclra  w8, w2, [x28]\n-    __ ldeora(Assembler::word, r21, zr, r5);           \/\/       ldeora  w21, wzr, [x5]\n-    __ ldorra(Assembler::word, r27, r0, r17);          \/\/       ldseta  w27, w0, [x17]\n-    __ ldsmina(Assembler::word, r15, r4, r26);         \/\/       ldsmina w15, w4, [x26]\n-    __ ldsmaxa(Assembler::word, r8, r28, r22);         \/\/       ldsmaxa w8, w28, [x22]\n-    __ ldumina(Assembler::word, r27, r27, r25);        \/\/       ldumina w27, w27, [x25]\n-    __ ldumaxa(Assembler::word, r23, r0, r4);          \/\/       ldumaxa w23, w0, [x4]\n+    __ swpa(Assembler::word, r15, r9, r23);            \/\/       swpa    w15, w9, [x23]\n+    __ ldadda(Assembler::word, r8, r2, r28);           \/\/       ldadda  w8, w2, [x28]\n+    __ ldbica(Assembler::word, r21, zr, r5);           \/\/       ldclra  w21, wzr, [x5]\n+    __ ldeora(Assembler::word, r27, r0, r17);          \/\/       ldeora  w27, w0, [x17]\n+    __ ldorra(Assembler::word, r15, r4, r26);          \/\/       ldseta  w15, w4, [x26]\n+    __ ldsmina(Assembler::word, r8, r28, r22);         \/\/       ldsmina w8, w28, [x22]\n+    __ ldsmaxa(Assembler::word, r27, r27, r25);        \/\/       ldsmaxa w27, w27, [x25]\n+    __ ldumina(Assembler::word, r23, r0, r4);          \/\/       ldumina w23, w0, [x4]\n+    __ ldumaxa(Assembler::word, r6, r16, r0);          \/\/       ldumaxa w6, w16, [x0]\n@@ -1084,9 +1087,9 @@\n-    __ swpal(Assembler::word, r6, r16, r0);            \/\/       swpal   w6, w16, [x0]\n-    __ ldaddal(Assembler::word, r4, r15, r1);          \/\/       ldaddal w4, w15, [x1]\n-    __ ldbical(Assembler::word, r10, r7, r5);          \/\/       ldclral w10, w7, [x5]\n-    __ ldeoral(Assembler::word, r10, r28, r7);         \/\/       ldeoral w10, w28, [x7]\n-    __ ldorral(Assembler::word, r20, r23, r21);        \/\/       ldsetal w20, w23, [x21]\n-    __ ldsminal(Assembler::word, r6, r11, r8);         \/\/       ldsminal        w6, w11, [x8]\n-    __ ldsmaxal(Assembler::word, r17, zr, r6);         \/\/       ldsmaxal        w17, wzr, [x6]\n-    __ lduminal(Assembler::word, r17, r2, r12);        \/\/       lduminal        w17, w2, [x12]\n-    __ ldumaxal(Assembler::word, r30, r29, r3);        \/\/       ldumaxal        w30, w29, [x3]\n+    __ swpal(Assembler::word, r4, r15, r1);            \/\/       swpal   w4, w15, [x1]\n+    __ ldaddal(Assembler::word, r10, r7, r5);          \/\/       ldaddal w10, w7, [x5]\n+    __ ldbical(Assembler::word, r10, r28, r7);         \/\/       ldclral w10, w28, [x7]\n+    __ ldeoral(Assembler::word, r20, r23, r21);        \/\/       ldeoral w20, w23, [x21]\n+    __ ldorral(Assembler::word, r6, r11, r8);          \/\/       ldsetal w6, w11, [x8]\n+    __ ldsminal(Assembler::word, r17, zr, r6);         \/\/       ldsminal        w17, wzr, [x6]\n+    __ ldsmaxal(Assembler::word, r17, r2, r12);        \/\/       ldsmaxal        w17, w2, [x12]\n+    __ lduminal(Assembler::word, r30, r29, r3);        \/\/       lduminal        w30, w29, [x3]\n+    __ ldumaxal(Assembler::word, r27, r22, r29);       \/\/       ldumaxal        w27, w22, [x29]\n@@ -1095,9 +1098,9 @@\n-    __ swpl(Assembler::word, r27, r22, r29);           \/\/       swpl    w27, w22, [x29]\n-    __ ldaddl(Assembler::word, r14, r13, r28);         \/\/       ldaddl  w14, w13, [x28]\n-    __ ldbicl(Assembler::word, r17, r24, r5);          \/\/       ldclrl  w17, w24, [x5]\n-    __ ldeorl(Assembler::word, r2, r14, r10);          \/\/       ldeorl  w2, w14, [x10]\n-    __ ldorrl(Assembler::word, r16, r11, r27);         \/\/       ldsetl  w16, w11, [x27]\n-    __ ldsminl(Assembler::word, r23, r12, r4);         \/\/       ldsminl w23, w12, [x4]\n-    __ ldsmaxl(Assembler::word, r22, r17, r4);         \/\/       ldsmaxl w22, w17, [x4]\n-    __ lduminl(Assembler::word, r1, r19, r16);         \/\/       lduminl w1, w19, [x16]\n-    __ ldumaxl(Assembler::word, r16, r13, r14);        \/\/       ldumaxl w16, w13, [x14]\n+    __ swpl(Assembler::word, r14, r13, r28);           \/\/       swpl    w14, w13, [x28]\n+    __ ldaddl(Assembler::word, r17, r24, r5);          \/\/       ldaddl  w17, w24, [x5]\n+    __ ldbicl(Assembler::word, r2, r14, r10);          \/\/       ldclrl  w2, w14, [x10]\n+    __ ldeorl(Assembler::word, r16, r11, r27);         \/\/       ldeorl  w16, w11, [x27]\n+    __ ldorrl(Assembler::word, r23, r12, r4);          \/\/       ldsetl  w23, w12, [x4]\n+    __ ldsminl(Assembler::word, r22, r17, r4);         \/\/       ldsminl w22, w17, [x4]\n+    __ ldsmaxl(Assembler::word, r1, r19, r16);         \/\/       ldsmaxl w1, w19, [x16]\n+    __ lduminl(Assembler::word, r16, r13, r14);        \/\/       lduminl w16, w13, [x14]\n+    __ ldumaxl(Assembler::word, r12, r2, r17);         \/\/       ldumaxl w12, w2, [x17]\n@@ -1106,4 +1109,4 @@\n-    __ bcax(v12, __ T16B, v2, v16, v3);                \/\/       bcax            v12.16B, v2.16B, v16.16B, v3.16B\n-    __ eor3(v20, __ T16B, v23, v5, v6);                \/\/       eor3            v20.16B, v23.16B, v5.16B, v6.16B\n-    __ rax1(v7, __ T2D, v17, v12);                     \/\/       rax1            v7.2D, v17.2D, v12.2D\n-    __ xar(v27, __ T2D, v16, v16, 13);                 \/\/       xar             v27.2D, v16.2D, v16.2D, #13\n+    __ bcax(v3, __ T16B, v20, v23, v5);                \/\/       bcax            v3.16B, v20.16B, v23.16B, v5.16B\n+    __ eor3(v6, __ T16B, v7, v17, v12);                \/\/       eor3            v6.16B, v7.16B, v17.16B, v12.16B\n+    __ rax1(v27, __ T2D, v16, v16);                    \/\/       rax1            v27.2D, v16.2D, v16.2D\n+    __ xar(v6, __ T2D, v2, v28, 6);                    \/\/       xar             v6.2D, v2.2D, v28.2D, #6\n@@ -1112,4 +1115,4 @@\n-    __ sha512h(v2, __ T2D, v28, v3);                   \/\/       sha512h         q2, q28, v3.2D\n-    __ sha512h2(v4, __ T2D, v6, v17);                  \/\/       sha512h2                q4, q6, v17.2D\n-    __ sha512su0(v19, __ T2D, v13);                    \/\/       sha512su0               v19.2D, v13.2D\n-    __ sha512su1(v12, __ T2D, v19, v8);                \/\/       sha512su1               v12.2D, v19.2D, v8.2D\n+    __ sha512h(v4, __ T2D, v6, v17);                   \/\/       sha512h         q4, q6, v17.2D\n+    __ sha512h2(v19, __ T2D, v13, v12);                \/\/       sha512h2                q19, q13, v12.2D\n+    __ sha512su0(v19, __ T2D, v8);                     \/\/       sha512su0               v19.2D, v8.2D\n+    __ sha512su1(v24, __ T2D, v19, v17);               \/\/       sha512su1               v24.2D, v19.2D, v17.2D\n@@ -1118,5 +1121,5 @@\n-    __ sve_add(z24, __ S, 154u);                       \/\/       add     z24.s, z24.s, #0x9a\n-    __ sve_sub(z0, __ H, 196u);                        \/\/       sub     z0.h, z0.h, #0xc4\n-    __ sve_and(z6, __ S, 1073733632u);                 \/\/       and     z6.s, z6.s, #0x3fffe000\n-    __ sve_eor(z16, __ B, 62u);                        \/\/       eor     z16.b, z16.b, #0x3e\n-    __ sve_orr(z14, __ S, 62915520u);                  \/\/       orr     z14.s, z14.s, #0x3c003c0\n+    __ sve_add(z0, __ H, 196u);                        \/\/       add     z0.h, z0.h, #0xc4\n+    __ sve_sub(z6, __ S, 249u);                        \/\/       sub     z6.s, z6.s, #0xf9\n+    __ sve_and(z13, __ S, 1u);                         \/\/       and     z13.s, z13.s, #0x1\n+    __ sve_eor(z7, __ H, 63489u);                      \/\/       eor     z7.h, z7.h, #0xf801\n+    __ sve_orr(z8, __ H, 51199u);                      \/\/       orr     z8.h, z8.h, #0xc7ff\n@@ -1125,5 +1128,5 @@\n-    __ sve_add(z10, __ S, 170u);                       \/\/       add     z10.s, z10.s, #0xaa\n-    __ sve_sub(z22, __ D, 22u);                        \/\/       sub     z22.d, z22.d, #0x16\n-    __ sve_and(z3, __ H, 51199u);                      \/\/       and     z3.h, z3.h, #0xc7ff\n-    __ sve_eor(z7, __ B, 62u);                         \/\/       eor     z7.b, z7.b, #0x3e\n-    __ sve_orr(z0, __ H, 51199u);                      \/\/       orr     z0.h, z0.h, #0xc7ff\n+    __ sve_add(z22, __ D, 22u);                        \/\/       add     z22.d, z22.d, #0x16\n+    __ sve_sub(z3, __ H, 156u);                        \/\/       sub     z3.h, z3.h, #0x9c\n+    __ sve_and(z20, __ B, 254u);                       \/\/       and     z20.b, z20.b, #0xfe\n+    __ sve_eor(z7, __ B, 131u);                        \/\/       eor     z7.b, z7.b, #0x83\n+    __ sve_orr(z19, __ S, 2147484159u);                \/\/       orr     z19.s, z19.s, #0x800001ff\n@@ -1132,5 +1135,5 @@\n-    __ sve_add(z22, __ B, 130u);                       \/\/       add     z22.b, z22.b, #0x82\n-    __ sve_sub(z9, __ S, 92u);                         \/\/       sub     z9.s, z9.s, #0x5c\n-    __ sve_and(z25, __ B, 131u);                       \/\/       and     z25.b, z25.b, #0x83\n-    __ sve_eor(z13, __ S, 496u);                       \/\/       eor     z13.s, z13.s, #0x1f0\n-    __ sve_orr(z13, __ H, 33279u);                     \/\/       orr     z13.h, z13.h, #0x81ff\n+    __ sve_add(z9, __ S, 92u);                         \/\/       add     z9.s, z9.s, #0x5c\n+    __ sve_sub(z25, __ B, 254u);                       \/\/       sub     z25.b, z25.b, #0xfe\n+    __ sve_and(z16, __ H, 16368u);                     \/\/       and     z16.h, z16.h, #0x3ff0\n+    __ sve_eor(z1, __ H, 51199u);                      \/\/       eor     z1.h, z1.h, #0xc7ff\n+    __ sve_orr(z16, __ D, 274877904896u);              \/\/       orr     z16.d, z16.d, #0x3ffffff800\n@@ -1139,5 +1142,5 @@\n-    __ sve_add(z25, __ H, 39u);                        \/\/       add     z25.h, z25.h, #0x27\n-    __ sve_sub(z4, __ S, 67u);                         \/\/       sub     z4.s, z4.s, #0x43\n-    __ sve_and(z6, __ D, 18446744069548802047u);       \/\/       and     z6.d, z6.d, #0xffffffff07ffffff\n-    __ sve_eor(z16, __ D, 4503599627354112u);          \/\/       eor     z16.d, z16.d, #0xfffffffffc000\n-    __ sve_orr(z14, __ B, 254u);                       \/\/       orr     z14.b, z14.b, #0xfe\n+    __ sve_add(z4, __ S, 67u);                         \/\/       add     z4.s, z4.s, #0x43\n+    __ sve_sub(z6, __ D, 35u);                         \/\/       sub     z6.d, z6.d, #0x23\n+    __ sve_and(z28, __ S, 4294049777u);                \/\/       and     z28.s, z28.s, #0xfff1fff1\n+    __ sve_eor(z9, __ H, 8064u);                       \/\/       eor     z9.h, z9.h, #0x1f80\n+    __ sve_orr(z28, __ B, 1u);                         \/\/       orr     z28.b, z28.b, #0x1\n@@ -1146,5 +1149,5 @@\n-    __ sve_add(z3, __ B, 10u);                         \/\/       add     z3.b, z3.b, #0xa\n-    __ sve_sub(z26, __ S, 150u);                       \/\/       sub     z26.s, z26.s, #0x96\n-    __ sve_and(z14, __ H, 57343u);                     \/\/       and     z14.h, z14.h, #0xdfff\n-    __ sve_eor(z24, __ B, 191u);                       \/\/       eor     z24.b, z24.b, #0xbf\n-    __ sve_orr(z17, __ S, 4294966791u);                \/\/       orr     z17.s, z17.s, #0xfffffe07\n+    __ sve_add(z26, __ S, 150u);                       \/\/       add     z26.s, z26.s, #0x96\n+    __ sve_sub(z14, __ H, 149u);                       \/\/       sub     z14.h, z14.h, #0x95\n+    __ sve_and(z21, __ D, 18302628885642084351u);      \/\/       and     z21.d, z21.d, #0xfe000000007fffff\n+    __ sve_eor(z21, __ S, 2151677951u);                \/\/       eor     z21.s, z21.s, #0x803fffff\n+    __ sve_orr(z29, __ S, 1u);                         \/\/       orr     z29.s, z29.s, #0x1\n@@ -1153,5 +1156,5 @@\n-    __ sve_add(z20, __ S, 3u);                         \/\/       add     z20.s, z20.s, #0x3\n-    __ sve_sub(z4, __ S, 196u);                        \/\/       sub     z4.s, z4.s, #0xc4\n-    __ sve_and(z4, __ S, 4286578691u);                 \/\/       and     z4.s, z4.s, #0xff800003\n-    __ sve_eor(z25, __ S, 33553408u);                  \/\/       eor     z25.s, z25.s, #0x1fffc00\n-    __ sve_orr(z8, __ H, 49663u);                      \/\/       orr     z8.h, z8.h, #0xc1ff\n+    __ sve_add(z4, __ S, 196u);                        \/\/       add     z4.s, z4.s, #0xc4\n+    __ sve_sub(z4, __ S, 39u);                         \/\/       sub     z4.s, z4.s, #0x27\n+    __ sve_and(z23, __ D, 66977792u);                  \/\/       and     z23.d, z23.d, #0x3fe0000\n+    __ sve_eor(z8, __ H, 57855u);                      \/\/       eor     z8.h, z8.h, #0xe1ff\n+    __ sve_orr(z17, __ D, 274877904896u);              \/\/       orr     z17.d, z17.d, #0x3ffffff800\n@@ -1160,56 +1163,56 @@\n-    __ sve_add(z30, __ D, z21, z4);                    \/\/       add     z30.d, z21.d, z4.d\n-    __ sve_sub(z1, __ H, z10, z19);                    \/\/       sub     z1.h, z10.h, z19.h\n-    __ sve_fadd(z0, __ D, z9, z7);                     \/\/       fadd    z0.d, z9.d, z7.d\n-    __ sve_fmul(z17, __ S, z4, z27);                   \/\/       fmul    z17.s, z4.s, z27.s\n-    __ sve_fsub(z9, __ S, z27, z23);                   \/\/       fsub    z9.s, z27.s, z23.s\n-    __ sve_abs(z16, __ S, p7, z22);                    \/\/       abs     z16.s, p7\/m, z22.s\n-    __ sve_add(z20, __ H, p7, z28);                    \/\/       add     z20.h, p7\/m, z20.h, z28.h\n-    __ sve_and(z13, __ S, p5, z7);                     \/\/       and     z13.s, p5\/m, z13.s, z7.s\n-    __ sve_asr(z28, __ H, p2, z11);                    \/\/       asr     z28.h, p2\/m, z28.h, z11.h\n-    __ sve_bic(z11, __ D, p5, z1);                     \/\/       bic     z11.d, p5\/m, z11.d, z1.d\n-    __ sve_clz(z8, __ S, p4, z13);                     \/\/       clz     z8.s, p4\/m, z13.s\n-    __ sve_cnt(z17, __ B, p4, z4);                     \/\/       cnt     z17.b, p4\/m, z4.b\n-    __ sve_eor(z3, __ H, p3, z7);                      \/\/       eor     z3.h, p3\/m, z3.h, z7.h\n-    __ sve_lsl(z14, __ H, p4, z4);                     \/\/       lsl     z14.h, p4\/m, z14.h, z4.h\n-    __ sve_lsr(z29, __ H, p1, z0);                     \/\/       lsr     z29.h, p1\/m, z29.h, z0.h\n-    __ sve_mul(z21, __ B, p6, z3);                     \/\/       mul     z21.b, p6\/m, z21.b, z3.b\n-    __ sve_neg(z9, __ H, p4, z28);                     \/\/       neg     z9.h, p4\/m, z28.h\n-    __ sve_not(z24, __ B, p1, z19);                    \/\/       not     z24.b, p1\/m, z19.b\n-    __ sve_orr(z23, __ S, p7, z13);                    \/\/       orr     z23.s, p7\/m, z23.s, z13.s\n-    __ sve_rbit(z10, __ S, p6, z12);                   \/\/       rbit    z10.s, p6\/m, z12.s\n-    __ sve_revb(z30, __ H, p4, z14);                   \/\/       revb    z30.h, p4\/m, z14.h\n-    __ sve_smax(z29, __ S, p4, z21);                   \/\/       smax    z29.s, p4\/m, z29.s, z21.s\n-    __ sve_smin(z7, __ B, p5, z2);                     \/\/       smin    z7.b, p5\/m, z7.b, z2.b\n-    __ sve_sub(z26, __ S, p4, z9);                     \/\/       sub     z26.s, p4\/m, z26.s, z9.s\n-    __ sve_fabs(z17, __ S, p5, z0);                    \/\/       fabs    z17.s, p5\/m, z0.s\n-    __ sve_fadd(z2, __ S, p6, z14);                    \/\/       fadd    z2.s, p6\/m, z2.s, z14.s\n-    __ sve_fdiv(z11, __ D, p5, z14);                   \/\/       fdiv    z11.d, p5\/m, z11.d, z14.d\n-    __ sve_fmax(z29, __ S, p3, z3);                    \/\/       fmax    z29.s, p3\/m, z29.s, z3.s\n-    __ sve_fmin(z22, __ D, p2, z3);                    \/\/       fmin    z22.d, p2\/m, z22.d, z3.d\n-    __ sve_fmul(z27, __ D, p0, z19);                   \/\/       fmul    z27.d, p0\/m, z27.d, z19.d\n-    __ sve_fneg(z7, __ S, p6, z21);                    \/\/       fneg    z7.s, p6\/m, z21.s\n-    __ sve_frintm(z5, __ S, p2, z25);                  \/\/       frintm  z5.s, p2\/m, z25.s\n-    __ sve_frintn(z21, __ S, p4, z17);                 \/\/       frintn  z21.s, p4\/m, z17.s\n-    __ sve_frintp(z3, __ S, p2, z19);                  \/\/       frintp  z3.s, p2\/m, z19.s\n-    __ sve_fsqrt(z7, __ D, p3, z14);                   \/\/       fsqrt   z7.d, p3\/m, z14.d\n-    __ sve_fsub(z17, __ D, p2, z13);                   \/\/       fsub    z17.d, p2\/m, z17.d, z13.d\n-    __ sve_fmad(z17, __ D, p7, z17, z8);               \/\/       fmad    z17.d, p7\/m, z17.d, z8.d\n-    __ sve_fmla(z14, __ D, p6, z22, z27);              \/\/       fmla    z14.d, p6\/m, z22.d, z27.d\n-    __ sve_fmls(z7, __ D, p2, z5, z27);                \/\/       fmls    z7.d, p2\/m, z5.d, z27.d\n-    __ sve_fmsb(z10, __ D, p0, z14, z24);              \/\/       fmsb    z10.d, p0\/m, z14.d, z24.d\n-    __ sve_fnmad(z20, __ D, p0, z3, z22);              \/\/       fnmad   z20.d, p0\/m, z3.d, z22.d\n-    __ sve_fnmsb(z5, __ D, p6, z29, z17);              \/\/       fnmsb   z5.d, p6\/m, z29.d, z17.d\n-    __ sve_fnmla(z1, __ S, p3, z14, z29);              \/\/       fnmla   z1.s, p3\/m, z14.s, z29.s\n-    __ sve_fnmls(z0, __ D, p4, z2, z30);               \/\/       fnmls   z0.d, p4\/m, z2.d, z30.d\n-    __ sve_mla(z22, __ H, p5, z29, z12);               \/\/       mla     z22.h, p5\/m, z29.h, z12.h\n-    __ sve_mls(z2, __ S, p0, z14, z23);                \/\/       mls     z2.s, p0\/m, z14.s, z23.s\n-    __ sve_and(z0, z19, z25);                          \/\/       and     z0.d, z19.d, z25.d\n-    __ sve_eor(z23, z12, z21);                         \/\/       eor     z23.d, z12.d, z21.d\n-    __ sve_orr(z1, z1, z10);                           \/\/       orr     z1.d, z1.d, z10.d\n-    __ sve_bic(z11, z19, z23);                         \/\/       bic     z11.d, z19.d, z23.d\n-    __ sve_uzp1(z8, __ S, z30, z17);                   \/\/       uzp1    z8.s, z30.s, z17.s\n-    __ sve_uzp2(z19, __ S, z20, z4);                   \/\/       uzp2    z19.s, z20.s, z4.s\n-    __ sve_fabd(z13, __ D, p7, z22);                   \/\/       fabd    z13.d, p7\/m, z13.d, z22.d\n-    __ sve_bext(z30, __ S, z25, z17);                  \/\/       bext    z30.s, z25.s, z17.s\n-    __ sve_bdep(z14, __ D, z11, z12);                  \/\/       bdep    z14.d, z11.d, z12.d\n-    __ sve_eor3(z20, z5, z1);                          \/\/       eor3    z20.d, z20.d, z5.d, z1.d\n+    __ sve_add(z30, __ S, z1, z10);                    \/\/       add     z30.s, z1.s, z10.s\n+    __ sve_sub(z12, __ B, z0, z9);                     \/\/       sub     z12.b, z0.b, z9.b\n+    __ sve_fadd(z24, __ D, z17, z4);                   \/\/       fadd    z24.d, z17.d, z4.d\n+    __ sve_fmul(z6, __ D, z9, z27);                    \/\/       fmul    z6.d, z9.d, z27.d\n+    __ sve_fsub(z13, __ D, z16, z30);                  \/\/       fsub    z13.d, z16.d, z30.d\n+    __ sve_abs(z22, __ D, p5, z30);                    \/\/       abs     z22.d, p5\/m, z30.d\n+    __ sve_add(z9, __ B, p3, z19);                     \/\/       add     z9.b, p3\/m, z9.b, z19.b\n+    __ sve_and(z20, __ H, p7, z9);                     \/\/       and     z20.h, p7\/m, z20.h, z9.h\n+    __ sve_asr(z13, __ B, p3, z19);                    \/\/       asr     z13.b, p3\/m, z13.b, z19.b\n+    __ sve_bic(z24, __ H, p2, z19);                    \/\/       bic     z24.h, p2\/m, z24.h, z19.h\n+    __ sve_clz(z17, __ B, p4, z16);                    \/\/       clz     z17.b, p4\/m, z16.b\n+    __ sve_cnt(z0, __ H, p0, z11);                     \/\/       cnt     z0.h, p0\/m, z11.h\n+    __ sve_eor(z15, __ B, p3, z15);                    \/\/       eor     z15.b, p3\/m, z15.b, z15.b\n+    __ sve_lsl(z15, __ B, p7, z5);                     \/\/       lsl     z15.b, p7\/m, z15.b, z5.b\n+    __ sve_lsr(z10, __ B, p5, z26);                    \/\/       lsr     z10.b, p5\/m, z10.b, z26.b\n+    __ sve_mul(z0, __ D, p2, z19);                     \/\/       mul     z0.d, p2\/m, z0.d, z19.d\n+    __ sve_neg(z10, __ S, p6, z3);                     \/\/       neg     z10.s, p6\/m, z3.s\n+    __ sve_not(z7, __ H, p6, z28);                     \/\/       not     z7.h, p6\/m, z28.h\n+    __ sve_orr(z21, __ H, p2, z26);                    \/\/       orr     z21.h, p2\/m, z21.h, z26.h\n+    __ sve_rbit(z17, __ H, p7, z17);                   \/\/       rbit    z17.h, p7\/m, z17.h\n+    __ sve_revb(z2, __ D, p7, z16);                    \/\/       revb    z2.d, p7\/m, z16.d\n+    __ sve_smax(z20, __ B, p1, z19);                   \/\/       smax    z20.b, p1\/m, z20.b, z19.b\n+    __ sve_smin(z1, __ H, p6, z17);                    \/\/       smin    z1.h, p6\/m, z1.h, z17.h\n+    __ sve_sub(z16, __ B, p4, z21);                    \/\/       sub     z16.b, p4\/m, z16.b, z21.b\n+    __ sve_fabs(z4, __ S, p0, z23);                    \/\/       fabs    z4.s, p0\/m, z23.s\n+    __ sve_fadd(z6, __ S, p2, z20);                    \/\/       fadd    z6.s, p2\/m, z6.s, z20.s\n+    __ sve_fdiv(z16, __ S, p7, z12);                   \/\/       fdiv    z16.s, p7\/m, z16.s, z12.s\n+    __ sve_fmax(z3, __ S, p5, z9);                     \/\/       fmax    z3.s, p5\/m, z3.s, z9.s\n+    __ sve_fmin(z24, __ D, p7, z3);                    \/\/       fmin    z24.d, p7\/m, z24.d, z3.d\n+    __ sve_fmul(z22, __ D, p1, z25);                   \/\/       fmul    z22.d, p1\/m, z22.d, z25.d\n+    __ sve_fneg(z13, __ D, p1, z7);                    \/\/       fneg    z13.d, p1\/m, z7.d\n+    __ sve_frintm(z5, __ D, p5, z17);                  \/\/       frintm  z5.d, p5\/m, z17.d\n+    __ sve_frintn(z0, __ D, p0, z9);                   \/\/       frintn  z0.d, p0\/m, z9.d\n+    __ sve_frintp(z11, __ S, p2, z11);                 \/\/       frintp  z11.s, p2\/m, z11.s\n+    __ sve_fsqrt(z17, __ S, p4, z11);                  \/\/       fsqrt   z17.s, p4\/m, z11.s\n+    __ sve_fsub(z24, __ D, p4, z30);                   \/\/       fsub    z24.d, p4\/m, z24.d, z30.d\n+    __ sve_fmad(z8, __ D, p4, z14, z26);               \/\/       fmad    z8.d, p4\/m, z14.d, z26.d\n+    __ sve_fmla(z27, __ S, p5, z7, z8);                \/\/       fmla    z27.s, p5\/m, z7.s, z8.s\n+    __ sve_fmls(z27, __ S, p7, z10, z0);               \/\/       fmls    z27.s, p7\/m, z10.s, z0.s\n+    __ sve_fmsb(z24, __ S, p5, z20, z0);               \/\/       fmsb    z24.s, p5\/m, z20.s, z0.s\n+    __ sve_fnmad(z22, __ D, p6, z5, z25);              \/\/       fnmad   z22.d, p6\/m, z5.d, z25.d\n+    __ sve_fnmsb(z17, __ S, p4, z1, z12);              \/\/       fnmsb   z17.s, p4\/m, z1.s, z12.s\n+    __ sve_fnmla(z29, __ S, p3, z0, z17);              \/\/       fnmla   z29.s, p3\/m, z0.s, z17.s\n+    __ sve_fnmls(z30, __ D, p5, z22, z21);             \/\/       fnmls   z30.d, p5\/m, z22.d, z21.d\n+    __ sve_mla(z12, __ H, p2, z2, z0);                 \/\/       mla     z12.h, p2\/m, z2.h, z0.h\n+    __ sve_mls(z23, __ D, p5, z0, z19);                \/\/       mls     z23.d, p5\/m, z0.d, z19.d\n+    __ sve_and(z26, z23, z12);                         \/\/       and     z26.d, z23.d, z12.d\n+    __ sve_eor(z21, z1, z1);                           \/\/       eor     z21.d, z1.d, z1.d\n+    __ sve_orr(z19, z11, z19);                         \/\/       orr     z19.d, z11.d, z19.d\n+    __ sve_bic(z23, z8, z30);                          \/\/       bic     z23.d, z8.d, z30.d\n+    __ sve_uzp1(z19, __ B, z19, z20);                  \/\/       uzp1    z19.b, z19.b, z20.b\n+    __ sve_uzp2(z20, __ S, z13, z30);                  \/\/       uzp2    z20.s, z13.s, z30.s\n+    __ sve_fabd(z30, __ D, p7, z25);                   \/\/       fabd    z30.d, p7\/m, z30.d, z25.d\n+    __ sve_bext(z17, __ H, z14, z11);                  \/\/       bext    z17.h, z14.h, z11.h\n+    __ sve_bdep(z28, __ B, z20, z5);                   \/\/       bdep    z28.b, z20.b, z5.b\n+    __ sve_eor3(z13, z13, z2);                         \/\/       eor3    z13.d, z13.d, z13.d, z2.d\n@@ -1218,9 +1221,9 @@\n-    __ sve_andv(v13, __ H, p0, z7);                    \/\/       andv h13, p0, z7.h\n-    __ sve_orv(v11, __ D, p4, z4);                     \/\/       orv d11, p4, z4.d\n-    __ sve_eorv(v15, __ D, p0, z3);                    \/\/       eorv d15, p0, z3.d\n-    __ sve_smaxv(v0, __ S, p5, z5);                    \/\/       smaxv s0, p5, z5.s\n-    __ sve_sminv(v30, __ H, p7, z13);                  \/\/       sminv h30, p7, z13.h\n-    __ sve_fminv(v8, __ S, p3, z29);                   \/\/       fminv s8, p3, z29.s\n-    __ sve_fmaxv(v14, __ S, p7, z3);                   \/\/       fmaxv s14, p7, z3.s\n-    __ sve_fadda(v25, __ S, p2, z24);                  \/\/       fadda s25, p2, s25, z24.s\n-    __ sve_uaddv(v1, __ H, p6, z10);                   \/\/       uaddv d1, p6, z10.h\n+    __ sve_andv(v10, __ B, p3, z19);                   \/\/       andv b10, p3, z19.b\n+    __ sve_orv(v25, __ B, p3, z2);                     \/\/       orv b25, p3, z2.b\n+    __ sve_eorv(v29, __ B, p0, z20);                   \/\/       eorv b29, p0, z20.b\n+    __ sve_smaxv(v20, __ H, p7, z28);                  \/\/       smaxv h20, p7, z28.h\n+    __ sve_sminv(v13, __ D, p2, z13);                  \/\/       sminv d13, p2, z13.d\n+    __ sve_fminv(v1, __ S, p3, z27);                   \/\/       fminv s1, p3, z27.s\n+    __ sve_fmaxv(v3, __ D, p6, z8);                    \/\/       fmaxv d3, p6, z8.d\n+    __ sve_fadda(v9, __ S, p0, z25);                   \/\/       fadda s9, p0, s9, z25.s\n+    __ sve_uaddv(v14, __ D, p0, z20);                  \/\/       uaddv d14, p0, z20.d\n@@ -1245,7 +1248,7 @@\n-    0x14000000,     0x17ffffd7,     0x14000402,     0x94000000,\n-    0x97ffffd4,     0x940003ff,     0x3400000a,     0x34fffa2a,\n-    0x34007f8a,     0x35000008,     0x35fff9c8,     0x35007f28,\n-    0xb400000b,     0xb4fff96b,     0xb4007ecb,     0xb500001d,\n-    0xb5fff91d,     0xb5007e7d,     0x10000013,     0x10fff8b3,\n-    0x10007e13,     0x90000013,     0x36300016,     0x3637f836,\n-    0x36307d96,     0x3758000c,     0x375ff7cc,     0x37587d2c,\n+    0x14000000,     0x17ffffd7,     0x14000405,     0x94000000,\n+    0x97ffffd4,     0x94000402,     0x3400000a,     0x34fffa2a,\n+    0x34007fea,     0x35000008,     0x35fff9c8,     0x35007f88,\n+    0xb400000b,     0xb4fff96b,     0xb4007f2b,     0xb500001d,\n+    0xb5fff91d,     0xb5007edd,     0x10000013,     0x10fff8b3,\n+    0x10007e73,     0x90000013,     0x36300016,     0x3637f836,\n+    0x36307df6,     0x3758000c,     0x375ff7cc,     0x37587d8c,\n@@ -1256,13 +1259,13 @@\n-    0x54007b00,     0x54000001,     0x54fff541,     0x54007aa1,\n-    0x54000002,     0x54fff4e2,     0x54007a42,     0x54000002,\n-    0x54fff482,     0x540079e2,     0x54000003,     0x54fff423,\n-    0x54007983,     0x54000003,     0x54fff3c3,     0x54007923,\n-    0x54000004,     0x54fff364,     0x540078c4,     0x54000005,\n-    0x54fff305,     0x54007865,     0x54000006,     0x54fff2a6,\n-    0x54007806,     0x54000007,     0x54fff247,     0x540077a7,\n-    0x54000008,     0x54fff1e8,     0x54007748,     0x54000009,\n-    0x54fff189,     0x540076e9,     0x5400000a,     0x54fff12a,\n-    0x5400768a,     0x5400000b,     0x54fff0cb,     0x5400762b,\n-    0x5400000c,     0x54fff06c,     0x540075cc,     0x5400000d,\n-    0x54fff00d,     0x5400756d,     0x5400000e,     0x54ffefae,\n-    0x5400750e,     0x5400000f,     0x54ffef4f,     0x540074af,\n+    0x54007b60,     0x54000001,     0x54fff541,     0x54007b01,\n+    0x54000002,     0x54fff4e2,     0x54007aa2,     0x54000002,\n+    0x54fff482,     0x54007a42,     0x54000003,     0x54fff423,\n+    0x540079e3,     0x54000003,     0x54fff3c3,     0x54007983,\n+    0x54000004,     0x54fff364,     0x54007924,     0x54000005,\n+    0x54fff305,     0x540078c5,     0x54000006,     0x54fff2a6,\n+    0x54007866,     0x54000007,     0x54fff247,     0x54007807,\n+    0x54000008,     0x54fff1e8,     0x540077a8,     0x54000009,\n+    0x54fff189,     0x54007749,     0x5400000a,     0x54fff12a,\n+    0x540076ea,     0x5400000b,     0x54fff0cb,     0x5400768b,\n+    0x5400000c,     0x54fff06c,     0x5400762c,     0x5400000d,\n+    0x54fff00d,     0x540075cd,     0x5400000e,     0x54ffefae,\n+    0x5400756e,     0x5400000f,     0x54ffef4f,     0x5400750f,\n@@ -1371,132 +1374,132 @@\n-    0x6ea5d483,     0x6eead528,     0x2e38def6,     0x6e33de51,\n-    0x6e6fddcd,     0x0e6694a4,     0x4e7e97bc,     0x0eb99717,\n-    0x4eb796d5,     0x0e3bcf59,     0x4e3acf38,     0x4e65cc83,\n-    0x2e799717,     0x6e7c977a,     0x2eb99717,     0x6eb095ee,\n-    0x0eb7ced5,     0x4ea5cc83,     0x4ef9cf17,     0x2e2afd28,\n-    0x6e3aff38,     0x6e75fe93,     0x0e31660f,     0x4e326630,\n-    0x0e646462,     0x4e636441,     0x0ea26420,     0x4eba6738,\n-    0x0e26a4a4,     0x4e25a483,     0x0e6da58b,     0x4e60a7fe,\n-    0x0ebda79b,     0x4eaba549,     0x0e3bf759,     0x4e24f462,\n-    0x4e6ef5ac,     0x0e336e51,     0x4e206ffe,     0x0e636c41,\n-    0x4e6e6dac,     0x0ebe6fbc,     0x4ea26c20,     0x0e33ae51,\n-    0x4e2eadac,     0x0e73ae51,     0x4e77aed5,     0x0eaeadac,\n-    0x4ebdaf9b,     0x0ebff7dd,     0x4ea0f7fe,     0x4ee3f441,\n-    0x2e3b8f59,     0x6e3d8f9b,     0x2e668ca4,     0x6e7f8fdd,\n-    0x2ea58c83,     0x6ea88ce6,     0x6eff8fdd,     0x0e3be759,\n-    0x4e33e651,     0x4e6ae528,     0x0e293507,     0x4e2e35ac,\n-    0x0e623420,     0x4e753693,     0x0ea33441,     0x4eb93717,\n-    0x4ee43462,     0x2e223420,     0x6e2a3528,     0x2e793717,\n-    0x6e7b3759,     0x2eb1360f,     0x6ebf37dd,     0x6ee53483,\n-    0x2e2c3d6a,     0x6e383ef6,     0x2e6c3d6a,     0x6e663ca4,\n-    0x2eb33e51,     0x6ea33c41,     0x6eed3d8b,     0x2ea9e507,\n-    0x6eace56a,     0x6ef1e60f,     0x0e323e30,     0x4e243c62,\n-    0x0e6b3d49,     0x4e6d3d8b,     0x0eae3dac,     0x4eb03dee,\n-    0x4eef3dcd,     0x2e24e462,     0x6e28e4e6,     0x6e75e693,\n-    0x2ebbef59,     0x6eb1ee0f,     0x6ee6eca4,     0x65923081,\n-    0x65d02a1a,     0x65903aca,     0x65912b8b,     0x65913c3c,\n-    0x659321e5,     0xba5fd3e3,     0x3a5f03e5,     0xfa411be4,\n-    0x7a42cbe2,     0x93df03ff,     0xc820ffff,     0x8822fc7f,\n-    0xc8247cbf,     0x88267fff,     0x4e010fe0,     0x5e040420,\n-    0x4e081fe1,     0x4e0c1fe1,     0x4e0a1fe1,     0x4e071fe1,\n-    0x4e042c20,     0x4e062c20,     0x4e052c20,     0x4e083c20,\n-    0x0e0c3c20,     0x0e0a3c20,     0x0e073c20,     0x9eae0020,\n-    0x0f03f409,     0x6f03f40e,     0x4cc0ac3f,     0x0ea1b820,\n-    0x4e21c862,     0x4e61b8a4,     0x05a08020,     0x05104fe0,\n-    0x05505001,     0x05906fe2,     0x05d03005,     0x05101fea,\n-    0x05901feb,     0x04b0e3e0,     0x0470e7e1,     0x042f9c20,\n-    0x043f9c35,     0x047f9c20,     0x04ff9c20,     0x04299420,\n-    0x04319160,     0x0461943e,     0x04a19020,     0x04038100,\n-    0x040381a0,     0x040387e1,     0x04438be2,     0x04c38fe3,\n-    0x040181e0,     0x04018100,     0x04018621,     0x04418b22,\n-    0x04418822,     0x04818c23,     0x040081e0,     0x04008120,\n-    0x04008761,     0x04008621,     0x04408822,     0x04808c23,\n-    0x042053ff,     0x047f5401,     0x25208028,     0x2538cfe0,\n-    0x2578d001,     0x25b8efe2,     0x25f8f007,     0x2538dfea,\n-    0x25b8dfeb,     0xa400a3e0,     0xa420a7e0,     0xa4484be0,\n-    0xa467afe0,     0xa4a8a7ea,     0xa547a814,     0xa4084ffe,\n-    0xa55c53e0,     0xa5e1540b,     0xe400fbf6,     0xe408ffff,\n-    0xe420e7e0,     0xe4484be0,     0xe460efe0,     0xe547e400,\n-    0xe4014be0,     0xe4a84fe0,     0xe5f15000,     0x858043e0,\n-    0x85a043ff,     0xe59f5d08,     0x0420e3e9,     0x0460e3ea,\n-    0x04a0e3eb,     0x04e0e3ec,     0x25104042,     0x25104871,\n-    0x25904861,     0x25904c92,     0x05344020,     0x05744041,\n-    0x05b44062,     0x05f44083,     0x252c8840,     0x253c1420,\n-    0x25681572,     0x25a21ce3,     0x25ea1e34,     0x253c0421,\n-    0x25680572,     0x25a20ce3,     0x25ea0e34,     0x0522c020,\n-    0x05e6c0a4,     0x2401a001,     0x2443a051,     0x24858881,\n-    0x24c78cd1,     0x24850891,     0x24c70cc1,     0x250f9001,\n-    0x25508051,     0x25802491,     0x25df28c1,     0x25850c81,\n-    0x251e10d1,     0x65816001,     0x65c36051,     0x65854891,\n-    0x65c74cc1,     0x05733820,     0x05b238a4,     0x05f138e6,\n-    0x0570396a,     0x65d0a001,     0x65d6a443,     0x65d4a826,\n-    0x6594ac26,     0x6554ac26,     0x6556ac26,     0x6552ac26,\n-    0x65cbac85,     0x65caac01,     0x65dea833,     0x659ca509,\n-    0x65d8a801,     0x65dcac01,     0x655cb241,     0x0520a1e0,\n-    0x0521a601,     0x052281e0,     0x05238601,     0x04a14026,\n-    0x042244a6,     0x046344a6,     0x04a444a6,     0x04e544a7,\n-    0x0568aca7,     0x05b23230,     0x853040af,     0xc5b040af,\n-    0xe57080af,     0xe5b080af,     0x25034440,     0x254054c4,\n-    0x25034640,     0x25415a05,     0x25834440,     0x25c54489,\n-    0x250b5d3a,     0x2550dc20,     0x2518e3e1,     0x2518e021,\n-    0x2518e0a1,     0x2518e121,     0x2518e1a1,     0x2558e3e2,\n-    0x2558e042,     0x2558e0c2,     0x2558e142,     0x2598e3e3,\n-    0x2598e063,     0x2598e0e3,     0x2598e163,     0x25d8e3e4,\n-    0x25d8e084,     0x25d8e104,     0x25d8e184,     0x2518e407,\n-    0x05214800,     0x05614800,     0x05a14800,     0x05e14800,\n-    0x05214c00,     0x05614c00,     0x05a14c00,     0x05e14c00,\n-    0x05304001,     0x05314001,     0x05a18610,     0x05e18610,\n-    0x05271e11,     0x6545e891,     0x6585e891,     0x65c5e891,\n-    0x6545c891,     0x6585c891,     0x65c5c891,     0x45b0c210,\n-    0x45f1c231,     0x1e601000,     0x1e603000,     0x1e621000,\n-    0x1e623000,     0x1e641000,     0x1e643000,     0x1e661000,\n-    0x1e663000,     0x1e681000,     0x1e683000,     0x1e6a1000,\n-    0x1e6a3000,     0x1e6c1000,     0x1e6c3000,     0x1e6e1000,\n-    0x1e6e3000,     0x1e701000,     0x1e703000,     0x1e721000,\n-    0x1e723000,     0x1e741000,     0x1e743000,     0x1e761000,\n-    0x1e763000,     0x1e781000,     0x1e783000,     0x1e7a1000,\n-    0x1e7a3000,     0x1e7c1000,     0x1e7c3000,     0x1e7e1000,\n-    0x1e7e3000,     0xf823826d,     0xf8310070,     0xf82113cb,\n-    0xf82521e8,     0xf83d301e,     0xf8345287,     0xf83742bc,\n-    0xf83b70b9,     0xf8216217,     0xf8bf8185,     0xf8a901fc,\n-    0xf8bd13f6,     0xf8b320bf,     0xf8ae33f0,     0xf8b0529b,\n-    0xf8b0416c,     0xf8a973c6,     0xf8b1639b,     0xf8fe8147,\n-    0xf8f4008a,     0xf8f81231,     0xf8f623a3,     0xf8ef3276,\n-    0xf8f35056,     0xf8ef4186,     0xf8f071ab,     0xf8f763c1,\n-    0xf8738225,     0xf86202d0,     0xf86d12aa,     0xf87d219b,\n-    0xf87b3023,     0xf87f5278,     0xf8714389,     0xf87b70ef,\n-    0xf87563f7,     0xb83983e2,     0xb83b0150,     0xb8371073,\n-    0xb8302320,     0xb83a3057,     0xb830508c,     0xb83c43be,\n-    0xb83070db,     0xb82961fd,     0xb8a780e4,     0xb8af02e9,\n-    0xb8a81382,     0xb8b520bf,     0xb8bb3220,     0xb8af5344,\n-    0xb8a842dc,     0xb8bb733b,     0xb8b76080,     0xb8e68010,\n-    0xb8e4002f,     0xb8ea10a7,     0xb8ea20fc,     0xb8f432b7,\n-    0xb8e6510b,     0xb8f140df,     0xb8f17182,     0xb8fe607d,\n-    0xb87b83b6,     0xb86e038d,     0xb87110b8,     0xb862214e,\n-    0xb870336b,     0xb877508c,     0xb8764091,     0xb8617213,\n-    0xb87061cd,     0xce300c4c,     0xce051af4,     0xce6c8e27,\n-    0xce90361b,     0xce638382,     0xce7184c4,     0xcec081b3,\n-    0xce688a6c,     0x25a0d358,     0x2561d880,     0x05809a06,\n-    0x05403e90,     0x0500546e,     0x25a0d54a,     0x25e1c2d6,\n-    0x05801583,     0x05403e87,     0x05001580,     0x2520d056,\n-    0x25a1cb89,     0x05800e59,     0x0540e08d,     0x05000d2d,\n-    0x2560c4f9,     0x25a1c864,     0x05830746,     0x054394b0,\n-    0x05003ece,     0x2520c143,     0x25a1d2da,     0x058015ce,\n-    0x05400ed8,     0x0500bb31,     0x25a0c074,     0x25a1d884,\n-    0x05804944,     0x0540b1d9,     0x05001548,     0x04e402be,\n-    0x04730541,     0x65c70120,     0x659b0891,     0x65970769,\n-    0x0496bed0,     0x04401f94,     0x049a14ed,     0x0450897c,\n-    0x04db142b,     0x0499b1a8,     0x041ab091,     0x04590ce3,\n-    0x0453908e,     0x0451841d,     0x04101875,     0x0457b389,\n-    0x041ea678,     0x04981db7,     0x05a7998a,     0x056491de,\n-    0x048812bd,     0x040a1447,     0x0481113a,     0x049cb411,\n-    0x658099c2,     0x65cd95cb,     0x65868c7d,     0x65c78876,\n-    0x65c2827b,     0x049dbaa7,     0x6582ab25,     0x6580b235,\n-    0x6581aa63,     0x65cdadc7,     0x65c189b1,     0x65e89e31,\n-    0x65fb1ace,     0x65fb28a7,     0x65f8a1ca,     0x65f6c074,\n-    0x65f1fba5,     0x65bd4dc1,     0x65fe7040,     0x044c57b6,\n-    0x049761c2,     0x04393260,     0x04b53197,     0x046a3021,\n-    0x04f7326b,     0x05b16bc8,     0x05a46e93,     0x65c89ecd,\n-    0x4591b33e,     0x45ccb56e,     0x04253834,     0x045a20ed,\n-    0x04d8308b,     0x04d9206f,     0x048834a0,     0x044a3dbe,\n-    0x65872fa8,     0x65863c6e,     0x65982b19,     0x04413941,\n-\n+    0x6ea5d483,     0x6eead528,     0x2e38d6f6,     0x6e33d651,\n+    0x6e6fd5cd,     0x2e26dca4,     0x6e3edfbc,     0x6e79df17,\n+    0x0e7796d5,     0x4e7b9759,     0x0eba9738,     0x4ea59483,\n+    0x0e39cf17,     0x4e3ccf7a,     0x4e79cf17,     0x2e7095ee,\n+    0x6e7796d5,     0x2ea59483,     0x6eb99717,     0x0eaacd28,\n+    0x4ebacf38,     0x4ef5ce93,     0x2e31fe0f,     0x6e32fe30,\n+    0x6e64fc62,     0x0e236441,     0x4e226420,     0x0e7a6738,\n+    0x4e6664a4,     0x0ea56483,     0x4ead658b,     0x0e20a7fe,\n+    0x4e3da79b,     0x0e6ba549,     0x4e7ba759,     0x0ea4a462,\n+    0x4eaea5ac,     0x0e33f651,     0x4e20f7fe,     0x4e63f441,\n+    0x0e2e6dac,     0x4e3e6fbc,     0x0e626c20,     0x4e736e51,\n+    0x0eae6dac,     0x4eb36e51,     0x0e37aed5,     0x4e2eadac,\n+    0x0e7daf9b,     0x4e7fafdd,     0x0ea0affe,     0x4ea3ac41,\n+    0x0ebbf759,     0x4ebdf79b,     0x4ee6f4a4,     0x2e3f8fdd,\n+    0x6e258c83,     0x2e688ce6,     0x6e7f8fdd,     0x2ebb8f59,\n+    0x6eb38e51,     0x6eea8d28,     0x0e29e507,     0x4e2ee5ac,\n+    0x4e62e420,     0x0e353693,     0x4e233441,     0x0e793717,\n+    0x4e643462,     0x0ea23420,     0x4eaa3528,     0x4ef93717,\n+    0x2e3b3759,     0x6e31360f,     0x2e7f37dd,     0x6e653483,\n+    0x2eac356a,     0x6eb836f6,     0x6eec356a,     0x2e263ca4,\n+    0x6e333e51,     0x2e633c41,     0x6e6d3d8b,     0x2ea93d07,\n+    0x6eac3d6a,     0x6ef13e0f,     0x2eb2e630,     0x6ea4e462,\n+    0x6eebe549,     0x0e2d3d8b,     0x4e2e3dac,     0x0e703dee,\n+    0x4e6f3dcd,     0x0ea43c62,     0x4ea83ce6,     0x4ef53e93,\n+    0x2e3be759,     0x6e31e60f,     0x6e66e4a4,     0x2ea4ec62,\n+    0x6ea6eca4,     0x6eeded8b,     0x65d23289,     0x65d02e95,\n+    0x65d02eed,     0x65912f05,     0x65d1255f,     0x65933061,\n+    0xba5fd3e3,     0x3a5f03e5,     0xfa411be4,     0x7a42cbe2,\n+    0x93df03ff,     0xc820ffff,     0x8822fc7f,     0xc8247cbf,\n+    0x88267fff,     0x4e010fe0,     0x5e040420,     0x4e081fe1,\n+    0x4e0c1fe1,     0x4e0a1fe1,     0x4e071fe1,     0x4e042c20,\n+    0x4e062c20,     0x4e052c20,     0x4e083c20,     0x0e0c3c20,\n+    0x0e0a3c20,     0x0e073c20,     0x9eae0020,     0x0f03f409,\n+    0x6f03f40e,     0x4cc0ac3f,     0x0ea1b820,     0x4e21c862,\n+    0x4e61b8a4,     0x05a08020,     0x05104fe0,     0x05505001,\n+    0x05906fe2,     0x05d03005,     0x05101fea,     0x05901feb,\n+    0x04b0e3e0,     0x0470e7e1,     0x042f9c20,     0x043f9c35,\n+    0x047f9c20,     0x04ff9c20,     0x04299420,     0x04319160,\n+    0x0461943e,     0x04a19020,     0x04038100,     0x040381a0,\n+    0x040387e1,     0x04438be2,     0x04c38fe3,     0x040181e0,\n+    0x04018100,     0x04018621,     0x04418b22,     0x04418822,\n+    0x04818c23,     0x040081e0,     0x04008120,     0x04008761,\n+    0x04008621,     0x04408822,     0x04808c23,     0x042053ff,\n+    0x047f5401,     0x25208028,     0x2538cfe0,     0x2578d001,\n+    0x25b8efe2,     0x25f8f007,     0x2538dfea,     0x25b8dfeb,\n+    0xa400a3e0,     0xa420a7e0,     0xa4484be0,     0xa467afe0,\n+    0xa4a8a7ea,     0xa547a814,     0xa4084ffe,     0xa55c53e0,\n+    0xa5e1540b,     0xe400fbf6,     0xe408ffff,     0xe420e7e0,\n+    0xe4484be0,     0xe460efe0,     0xe547e400,     0xe4014be0,\n+    0xe4a84fe0,     0xe5f15000,     0x858043e0,     0x85a043ff,\n+    0xe59f5d08,     0x0420e3e9,     0x0460e3ea,     0x04a0e3eb,\n+    0x04e0e3ec,     0x25104042,     0x25104871,     0x25904861,\n+    0x25904c92,     0x05344020,     0x05744041,     0x05b44062,\n+    0x05f44083,     0x252c8840,     0x253c1420,     0x25681572,\n+    0x25a21ce3,     0x25ea1e34,     0x253c0421,     0x25680572,\n+    0x25a20ce3,     0x25ea0e34,     0x0522c020,     0x05e6c0a4,\n+    0x2401a001,     0x2443a051,     0x24858881,     0x24c78cd1,\n+    0x24850891,     0x24c70cc1,     0x250f9001,     0x25508051,\n+    0x25802491,     0x25df28c1,     0x25850c81,     0x251e10d1,\n+    0x65816001,     0x65c36051,     0x65854891,     0x65c74cc1,\n+    0x05733820,     0x05b238a4,     0x05f138e6,     0x0570396a,\n+    0x65d0a001,     0x65d6a443,     0x65d4a826,     0x6594ac26,\n+    0x6554ac26,     0x6556ac26,     0x6552ac26,     0x65cbac85,\n+    0x65caac01,     0x65dea833,     0x659ca509,     0x65d8a801,\n+    0x65dcac01,     0x655cb241,     0x0520a1e0,     0x0521a601,\n+    0x052281e0,     0x05238601,     0x04a14026,     0x042244a6,\n+    0x046344a6,     0x04a444a6,     0x04e544a7,     0x0568aca7,\n+    0x05b23230,     0x853040af,     0xc5b040af,     0xe57080af,\n+    0xe5b080af,     0x25034440,     0x254054c4,     0x25034640,\n+    0x25415a05,     0x25834440,     0x25c54489,     0x250b5d3a,\n+    0x2550dc20,     0x2518e3e1,     0x2518e021,     0x2518e0a1,\n+    0x2518e121,     0x2518e1a1,     0x2558e3e2,     0x2558e042,\n+    0x2558e0c2,     0x2558e142,     0x2598e3e3,     0x2598e063,\n+    0x2598e0e3,     0x2598e163,     0x25d8e3e4,     0x25d8e084,\n+    0x25d8e104,     0x25d8e184,     0x2518e407,     0x05214800,\n+    0x05614800,     0x05a14800,     0x05e14800,     0x05214c00,\n+    0x05614c00,     0x05a14c00,     0x05e14c00,     0x05304001,\n+    0x05314001,     0x05a18610,     0x05e18610,     0x05271e11,\n+    0x6545e891,     0x6585e891,     0x65c5e891,     0x6545c891,\n+    0x6585c891,     0x65c5c891,     0x45b0c210,     0x45f1c231,\n+    0x1e601000,     0x1e603000,     0x1e621000,     0x1e623000,\n+    0x1e641000,     0x1e643000,     0x1e661000,     0x1e663000,\n+    0x1e681000,     0x1e683000,     0x1e6a1000,     0x1e6a3000,\n+    0x1e6c1000,     0x1e6c3000,     0x1e6e1000,     0x1e6e3000,\n+    0x1e701000,     0x1e703000,     0x1e721000,     0x1e723000,\n+    0x1e741000,     0x1e743000,     0x1e761000,     0x1e763000,\n+    0x1e781000,     0x1e783000,     0x1e7a1000,     0x1e7a3000,\n+    0x1e7c1000,     0x1e7c3000,     0x1e7e1000,     0x1e7e3000,\n+    0xf8318070,     0xf82103cb,     0xf82511e8,     0xf83d201e,\n+    0xf8343287,     0xf83752bc,     0xf83b40b9,     0xf8217217,\n+    0xf83f6185,     0xf8a981fc,     0xf8bd03f6,     0xf8b310bf,\n+    0xf8ae23f0,     0xf8b0329b,     0xf8b0516c,     0xf8a943c6,\n+    0xf8b1739b,     0xf8be6147,     0xf8f4808a,     0xf8f80231,\n+    0xf8f613a3,     0xf8ef2276,     0xf8f33056,     0xf8ef5186,\n+    0xf8f041ab,     0xf8f773c1,     0xf8f36225,     0xf86282d0,\n+    0xf86d02aa,     0xf87d119b,     0xf87b2023,     0xf87f3278,\n+    0xf8715389,     0xf87b40ef,     0xf87573f7,     0xf87963e2,\n+    0xb83b8150,     0xb8370073,     0xb8301320,     0xb83a2057,\n+    0xb830308c,     0xb83c53be,     0xb83040db,     0xb82971fd,\n+    0xb82760e4,     0xb8af82e9,     0xb8a80382,     0xb8b510bf,\n+    0xb8bb2220,     0xb8af3344,     0xb8a852dc,     0xb8bb433b,\n+    0xb8b77080,     0xb8a66010,     0xb8e4802f,     0xb8ea00a7,\n+    0xb8ea10fc,     0xb8f422b7,     0xb8e6310b,     0xb8f150df,\n+    0xb8f14182,     0xb8fe707d,     0xb8fb63b6,     0xb86e838d,\n+    0xb87100b8,     0xb862114e,     0xb870236b,     0xb877308c,\n+    0xb8765091,     0xb8614213,     0xb87071cd,     0xb86c6222,\n+    0xce371683,     0xce1130e6,     0xce708e1b,     0xce9c1846,\n+    0xce7180c4,     0xce6c85b3,     0xcec08113,     0xce718a78,\n+    0x2560d880,     0x25a1df26,     0x0580000d,     0x05402ca7,\n+    0x05001588,     0x25e0c2d6,     0x2561d383,     0x05803ed4,\n+    0x05400e47,     0x05000933,     0x25a0cb89,     0x2521dfd9,\n+    0x05806530,     0x05401581,     0x0503ab50,     0x25a0c864,\n+    0x25e1c466,     0x0580659c,     0x05404ca9,     0x0500061c,\n+    0x25a0d2da,     0x2561d2ae,     0x05823bb5,     0x05400ad5,\n+    0x0500001d,     0x25a0d884,     0x25a1c4e4,     0x05837917,\n+    0x05401d68,     0x0503ab51,     0x04aa003e,     0x0429040c,\n+    0x65c40238,     0x65db0926,     0x65de060d,     0x04d6b7d6,\n+    0x04000e69,     0x045a1d34,     0x04108e6d,     0x045b0a78,\n+    0x0419b211,     0x045aa160,     0x04190def,     0x04139caf,\n+    0x0411974a,     0x04d00a60,     0x0497b86a,     0x045ebb87,\n+    0x04580b55,     0x05679e31,     0x05e49e02,     0x04080674,\n+    0x044a1a21,     0x040112b0,     0x049ca2e4,     0x65808a86,\n+    0x658d9d90,     0x65869523,     0x65c79c78,     0x65c28736,\n+    0x04dda4ed,     0x65c2b625,     0x65c0a120,     0x6581a96b,\n+    0x658db171,     0x65c193d8,     0x65fa91c8,     0x65a814fb,\n+    0x65a03d5b,     0x65a0b698,     0x65f9d8b6,     0x65acf031,\n+    0x65b14c1d,     0x65f576de,     0x0440484c,     0x04d37417,\n+    0x042c32fa,     0x04a13035,     0x04733173,     0x04fe3117,\n+    0x05346a73,     0x05be6db4,     0x65c89f3e,     0x454bb1d1,\n+    0x4505b69c,     0x042d384d,     0x041a2e6a,     0x04182c59,\n+    0x0419229d,     0x04483f94,     0x04ca29ad,     0x65872f61,\n+    0x65c63903,     0x65982329,     0x04c1228e,\n","filename":"test\/hotspot\/gtest\/aarch64\/asmtest.out.h","additions":431,"deletions":428,"binary":false,"changes":859,"status":"modified"},{"patch":"@@ -0,0 +1,74 @@\n+\/*\n+ * Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#include \"precompiled.hpp\"\n+#include \"gc\/shenandoah\/shenandoahNumberSeq.hpp\"\n+#include <iostream>\n+#include \"unittest.hpp\"\n+#include \"utilities\/ostream.hpp\"\n+\n+class ShenandoahNumberSeqTest: public ::testing::Test {\n+ protected:\n+  HdrSeq seq;\n+};\n+\n+class BasicShenandoahNumberSeqTest: public ShenandoahNumberSeqTest {\n+ protected:\n+  const double err = 0.5;\n+  BasicShenandoahNumberSeqTest() {\n+    seq.add(0);\n+    seq.add(1);\n+    seq.add(10);\n+    for (int i = 0; i < 7; i++) {\n+      seq.add(100);\n+    }\n+    std::cout << \" p0 = \" << seq.percentile(0);\n+    std::cout << \" p10 = \" << seq.percentile(10);\n+    std::cout << \" p20 = \" << seq.percentile(20);\n+    std::cout << \" p30 = \" << seq.percentile(30);\n+    std::cout << \" p50 = \" << seq.percentile(50);\n+    std::cout << \" p80 = \" << seq.percentile(80);\n+    std::cout << \" p90 = \" << seq.percentile(90);\n+    std::cout << \" p100 = \" << seq.percentile(100);\n+  }\n+};\n+\n+TEST_VM_F(BasicShenandoahNumberSeqTest, maximum_test) {\n+  EXPECT_EQ(seq.maximum(), 100);\n+}\n+\n+TEST_VM_F(BasicShenandoahNumberSeqTest, minimum_test) {\n+  EXPECT_EQ(0, seq.percentile(0));\n+}\n+\n+TEST_VM_F(BasicShenandoahNumberSeqTest, percentile_test) {\n+  EXPECT_NEAR(0, seq.percentile(10), err);\n+  EXPECT_NEAR(1, seq.percentile(20), err);\n+  EXPECT_NEAR(10, seq.percentile(30), err);\n+  EXPECT_NEAR(100, seq.percentile(40), err);\n+  EXPECT_NEAR(100, seq.percentile(50), err);\n+  EXPECT_NEAR(100, seq.percentile(75), err);\n+  EXPECT_NEAR(100, seq.percentile(90), err);\n+  EXPECT_NEAR(100, seq.percentile(100), err);\n+}\n","filename":"test\/hotspot\/gtest\/gc\/shenandoah\/test_shenandoahNumberSeq.cpp","additions":74,"deletions":0,"binary":false,"changes":74,"status":"added"},{"patch":"@@ -267,0 +267,7 @@\n+  check_format(SSIZE_FORMAT,           (ssize_t)-123,     \"-123\");\n+  check_format(SSIZE_FORMAT,           (ssize_t)2147483647, \"2147483647\");\n+  check_format(SSIZE_FORMAT,           (ssize_t)-2147483647, \"-2147483647\");\n+  check_format(SSIZE_PLUS_FORMAT,      (ssize_t)123,      \"+123\");\n+  check_format(SSIZE_PLUS_FORMAT,      (ssize_t)-123,     \"-123\");\n+  check_format(SSIZE_PLUS_FORMAT,      (ssize_t)2147483647, \"+2147483647\");\n+  check_format(SSIZE_PLUS_FORMAT,      (ssize_t)-2147483647, \"-2147483647\");\n","filename":"test\/hotspot\/gtest\/utilities\/test_globalDefinitions.cpp","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -34,9 +34,3 @@\n-serviceability\/sa\/ClhsdbCDSCore.java                          8268722   macosx-x64\n-serviceability\/sa\/ClhsdbFindPC.java#xcomp-core                8268722,8284045   macosx-x64,generic-all\n-serviceability\/sa\/ClhsdbFindPC.java#no-xcomp-core             8268722   macosx-x64\n-serviceability\/sa\/ClhsdbFindPC.java#xcomp-process             8276402   generic-all\n-serviceability\/sa\/ClhsdbJstack.java#id0                       8276402   generic-all\n-serviceability\/sa\/ClhsdbPmap.java#core                        8268722   macosx-x64\n-serviceability\/sa\/ClhsdbPstack.java#core                      8268722   macosx-x64\n-serviceability\/sa\/TestJmapCore.java                           8268722,8268283,8270202   macosx-x64,linux-aarch64,linux-x64\n-serviceability\/sa\/TestJmapCoreMetaspace.java                  8268722,8268636   generic-all\n+serviceability\/sa\/ClhsdbFindPC.java#xcomp-core                8284045   generic-all\n+serviceability\/sa\/TestJmapCore.java                           8268283,8270202   linux-aarch64,linux-x64,macosx-aarch64\n+serviceability\/sa\/TestJmapCoreMetaspace.java                  8268636   generic-all\n@@ -50,2 +44,0 @@\n-vmTestbase\/nsk\/jdi\/ExceptionRequest\/addInstanceFilter\/instancefilter001\/TestDescription.java 8298059 generic-x64\n-vmTestbase\/nsk\/jdi\/ExceptionRequest\/addInstanceFilter\/instancefilter004\/TestDescription.java 8298059 generic-x64\n","filename":"test\/hotspot\/jtreg\/ProblemList-zgc.txt","additions":3,"deletions":11,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -81,1 +81,0 @@\n-gc\/metaspace\/CompressedClassSpaceSizeInJmapHeap.java 8241293,8298073 macosx-x64,macosx-aarch64\n","filename":"test\/hotspot\/jtreg\/ProblemList.txt","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -0,0 +1,51 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8298824\n+ * @summary Test BoolNode::Ideal() transformation with CMoveINode that has a Con node as condition.\n+ * @run main\/othervm -Xcomp -XX:CompileCommand=compileonly,compiler.c2.TestCMoveIConAsBool::test\n+ *                   compiler.c2.TestCMoveIConAsBool\n+ *\/\n+\n+package compiler.c2;\n+\n+public class TestCMoveIConAsBool {\n+    static int x;\n+\n+    public static void main(String[] strArr) {\n+        test();\n+    }\n+\n+    static void test() {\n+        int i = 7;\n+        boolean b = false;\n+        float f = 7.135f;\n+\n+        do {\n+            b = i > f | b || x != 7;\n+        }\n+        while (++i < 0);\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/TestCMoveIConAsBool.java","additions":51,"deletions":0,"binary":false,"changes":51,"status":"added"},{"patch":"@@ -32,1 +32,3 @@\n- * @requires (os.arch != \"x86\" & os.arch != \"i386\") | vm.opt.UseSSE == \"null\" | vm.opt.UseSSE >= 2\n+ * @requires ((os.arch == \"x86\" | os.arch == \"i386\") & (vm.opt.UseSSE == \"null\" | vm.opt.UseSSE >= 2))\n+ *           | (os.arch != \"x86\" & os.arch != \"i386\" & os.arch != \"riscv64\")\n+ *           | (os.arch == \"riscv64\" & vm.opt.UseRVV == true)\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/TestAutoVectorization2DArray.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1117,0 +1117,5 @@\n+    public static final String VECTOR_TEST = PREFIX + \"VECTOR_TEST\" + POSTFIX;\n+    static {\n+        beforeMatchingNameRegex(VECTOR_TEST, \"VectorTest\");\n+    }\n+\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/IRNode.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -143,0 +143,1 @@\n+                    \"UseRVV\",\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/TestFramework.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -0,0 +1,200 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+super public class TestInfiniteLoopWithUnmergedBackedges\n+{\n+    public Method \"<init>\":\"()V\"\n+    stack 2 locals 1\n+    {\n+        aload_0;\n+        invokespecial  Method java\/lang\/Object.\"<init>\":\"()V\";\n+        return;\n+    }\n+    static Method test_001:\"(IIIII)V\"\n+    stack 5 locals 10\n+    {\n+        iload_0;\n+        ifgt LOOP;\n+        \/\/ below is dominated by the one above\n+        iload_0;\n+        ifle BACK;\n+        goto HEAD;\n+    HEAD:\n+        iload_3;\n+        ifeq BACK;\n+    BACK:\n+        goto HEAD;\n+    LOOP:\n+        iload_1;\n+        iflt LOOP;\n+        iload_2;\n+        iflt LOOP;\n+        return;\n+    }\n+    static Method test_002:\"(IIIII)V\"\n+    stack 5 locals 30\n+    {\n+        iload_0;\n+        ifgt LOOP;\n+\n+        iconst_0;\n+        istore 9;\n+\n+        goto HEAD;\n+    TAIL:\n+        iload_3;\n+        iload 9;\n+        if_icmpeq HEAD;\n+        iinc 9, 1;\n+    HEAD:\n+        goto TAIL;\n+    LOOP:\n+        iload_1;\n+        iflt LOOP;\n+        iload_2;\n+        iflt LOOP;\n+        return;\n+    }\n+    static Method test_003:\"(IIIII)I\"\n+    stack 5 locals 30\n+    {\n+        iload_0;\n+        ifgt SKIP;\n+\n+        iconst_0;\n+        istore 9;\n+\n+        goto HEAD;\n+    TAIL:\n+        iload_3;\n+        iload 9;\n+        if_icmpeq HEAD;\n+        iinc 9, 1;\n+        \/\/ Two paths lead to HEAD, so we have an inner and outer loop\n+        \/\/ But no SafePoint is placed here, because we go forward in bci\n+    HEAD:\n+        \/\/ SafePoint is placed here, because we go from here back in bci\n+        goto TAIL;\n+\n+    SKIP:\n+        iconst_0;\n+        istore 8;\n+        iconst_0;\n+        istore 9;\n+        \/\/ loop with two backedges, which calls\n+        \/\/ merge_many_backedges and then recomputes\n+        \/\/ build_loop_tree\n+    LOOP:\n+        iinc 9, 1;\n+        iinc 8, -1;\n+        iload 9;\n+        ldc 7;\n+        irem;\n+        ifeq LOOP;\n+        iload 9;\n+        ldc 10001;\n+        if_icmple LOOP;\n+        iload 8;\n+        ireturn;\n+    }\n+    static Method test_004:\"(IIIII)I\"\n+    stack 5 locals 30\n+    {\n+        iload_0;\n+        ifgt SKIP;\n+\n+        iconst_0;\n+        istore 9;\n+\n+        goto HEAD;\n+    TAIL:\n+        iload_3;\n+        iload 9;\n+        if_icmpeq HEAD;\n+        iinc 9, 1;\n+        iload 9;\n+        ldc 10001;\n+        if_icmpeq HEAD; \/\/ a second one\n+        iinc 9, 1;\n+    HEAD:\n+        goto TAIL;\n+\n+    SKIP:\n+        iconst_0;\n+        istore 8;\n+        iconst_0;\n+        istore 9;\n+    LOOP:\n+        iinc 9, 1;\n+        iinc 8, -1;\n+        iload 9;\n+        ldc 7;\n+        irem;\n+        ifeq LOOP;\n+        iload 9;\n+        ldc 10001;\n+        if_icmple LOOP;\n+        iload 8;\n+        ireturn;\n+    }\n+    static Method test_005:\"(IIIII)I\"\n+    stack 5 locals 30\n+    {\n+        iload_0;\n+        ifgt SKIP;\n+\n+        iconst_0;\n+        istore 9;\n+\n+        goto HEAD;\n+    TAIL:\n+        iload_3;\n+        iload 9;\n+        if_icmpeq HEAD;\n+        iinc 9, 1;\n+        iload 9;\n+        ldc 10001;\n+        if_icmpeq HEAD; \/\/ a second one\n+        iinc 9, 1;\n+    HEAD:\n+        goto TAIL;\n+\n+    SKIP:\n+        iconst_0;\n+        istore 8;\n+        iconst_0;\n+        istore 9;\n+    LOOP:\n+        iinc 9, 1;\n+        iinc 8, -1;\n+        iload 9;\n+        ldc 7;\n+        irem;\n+        ifeq LOOP;\n+        iload 9;\n+        ldc 10001;\n+        if_icmple LOOP;\n+        iload 8;\n+        ireturn;\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/TestInfiniteLoopWithUnmergedBackedges.jasm","additions":200,"deletions":0,"binary":false,"changes":200,"status":"added"},{"patch":"@@ -0,0 +1,41 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8296412\n+ * @compile TestInfiniteLoopWithUnmergedBackedges.jasm\n+ * @summary Infinite loops may not have the backedges merged, before we call IdealLoopTree::check_safepts\n+ * @run main\/othervm -Xcomp -XX:-TieredCompilation -XX:-LoopUnswitching\n+ *      -XX:CompileCommand=compileonly,TestInfiniteLoopWithUnmergedBackedges::test*\n+ *      TestInfiniteLoopWithUnmergedBackedgesMain\n+ *\/\n+\n+public class TestInfiniteLoopWithUnmergedBackedgesMain {\n+    public static void main (String[] args) {\n+        TestInfiniteLoopWithUnmergedBackedges.test_001(1, 0, 0, 0, 0);\n+        TestInfiniteLoopWithUnmergedBackedges.test_002(1, 0, 0, 0, 0);\n+        TestInfiniteLoopWithUnmergedBackedges.test_003(1, 0, 0, 0, 0);\n+        TestInfiniteLoopWithUnmergedBackedges.test_004(1, 0, 0, 0, 0);\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/TestInfiniteLoopWithUnmergedBackedgesMain.java","additions":41,"deletions":0,"binary":false,"changes":41,"status":"added"},{"patch":"@@ -0,0 +1,71 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\n+super public class TestPhaseCFGNeverBranchToGoto\n+{\n+    public Method \"<init>\":\"()V\"\n+    stack 2 locals 1\n+    {\n+        aload_0;\n+        invokespecial  Method java\/lang\/Object.\"<init>\":\"()V\";\n+        return;\n+    }\n+    static Method test:\"(III)V\"\n+    stack 200 locals 200\n+    {\n+        iload      2;\n+        ifeq LEND; \/\/ at runtime avoid the infinite-loop\n+\n+        iload      0;\n+        ifeq L20;\n+        goto L10;\n+    L10:\n+        goto L11;\n+    L11:\n+        iinc 0, 1;\n+        iload      1;\n+        ifge L10;\n+        goto L11;\n+    L20:\n+        iload      1;\n+        ifle L21;\n+        goto L10;\n+    L21:\n+        iconst_m1; \/\/ eventually false\n+        ifge L11;\n+        goto L20;\n+\n+    LEND:\n+        return;\n+    }\n+    public static Method main:\"([Ljava\/lang\/String;)V\"\n+    stack 100 locals 100\n+    {\n+        iconst_0;\n+        iconst_m1;\n+        iconst_0;\n+        invokestatic    Method test:\"(III)V\";\n+        return;\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/TestPhaseCFGNeverBranchToGoto.jasm","additions":71,"deletions":0,"binary":false,"changes":71,"status":"added"},{"patch":"@@ -0,0 +1,88 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8296389\n+ * @summary Peeling of Irreducible loop can lead to NeverBranch being visited from either side\n+ * @run main\/othervm -Xcomp -XX:-TieredCompilation -XX:PerMethodTrapLimit=0\n+ *      -XX:CompileCommand=compileonly,TestPhaseCFGNeverBranchToGotoMain::test\n+ *      TestPhaseCFGNeverBranchToGotoMain\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8296389\n+ * @compile TestPhaseCFGNeverBranchToGoto.jasm\n+ * @summary Peeling of Irreducible loop can lead to NeverBranch being visited from either side\n+ * @run main\/othervm -Xcomp -XX:-TieredCompilation -XX:PerMethodTrapLimit=0\n+ *      -XX:CompileCommand=compileonly,TestPhaseCFGNeverBranchToGoto::test\n+ *      TestPhaseCFGNeverBranchToGoto\n+ *\/\n+\n+\n+public class TestPhaseCFGNeverBranchToGotoMain {\n+    public static void main (String[] args) {\n+        test(false, false);\n+    }\n+\n+    public static void test(boolean flag1, boolean flag2) {\n+        if (flag1) { \/\/ runtime check, avoid infinite loop\n+            int a = 77;\n+            int b = 0;\n+            do { \/\/ empty loop\n+                a--;\n+                b++;\n+            } while (a > 0);\n+            \/\/ a == 0, b == 77 - after first loop-opts phase\n+            int p = 0;\n+            for (int i = 0; i < 4; i++) {\n+                if ((i % 2) == 0) {\n+                    p = 1;\n+                }\n+            }\n+            \/\/ p == 1 - after second loop-opts phase (via unrolling)\n+            \/\/ in first loop-opts phase we have 2x unrolling, 4x after second\n+            int x = 1;\n+            if (flag2) {\n+                x = 3;\n+            } \/\/ have region here, so that NeverBranch does not get removed\n+            do { \/\/ infinite loop\n+                do {\n+                    \/\/ NeverBranch inserted here, during loop-opts 1\n+                    x *= 2;\n+                    if (p == 0) { \/\/ reason for peeling in loop-opts 1\n+                        \/\/ after we know that p == 1, we lose this exit\n+                        break;\n+                    }\n+                    \/\/ once we know that b == 77, we lose exit\n+            } while (b == 77);\n+            \/\/ after we lost both exits above, this loop gets cut off\n+            int y = 5;\n+                do {\n+                    y *= 3;\n+                } while (b == 77);\n+            } while (true);\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/TestPhaseCFGNeverBranchToGotoMain.java","additions":88,"deletions":0,"binary":false,"changes":88,"status":"added"},{"patch":"@@ -0,0 +1,62 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8296318\n+ * @summary Loops inside infinite loops may not be detected, thus a region may still\n+ *          be the loop head, even if it is not a LoopNode.\n+ * @run main\/othervm -Xcomp -XX:-TieredCompilation\n+ *      -XX:CompileCommand=compileonly,TestUndetectedLoopInInfiniteLoop::test*\n+ *      -XX:PerMethodTrapLimit=0\n+ *      TestUndetectedLoopInInfiniteLoop\n+ *\/\n+\n+\n+public class TestUndetectedLoopInInfiniteLoop {\n+    public static void main (String[] args) {\n+        test(true, false);\n+    }\n+    public static void test(boolean flag, boolean flag2) {\n+        int x = 0;\n+        if (flag2) { \/\/ runtime check, avoid infinite loop\n+            while (true) { \/\/ infinite loop (no exit)\n+                if (flag) {\n+                    x++;\n+                }\n+                do { \/\/ inner loop\n+                    \/\/ assert for this block\n+                    \/\/ Region\n+                    \/\/ Phi -> SubI -> XorI ---> Phi\n+                    x = (x - 1) ^ 1;\n+                    \/\/ Problem: this looks like a loop, but we have no LoopNode\n+                    \/\/ We have no LoopNode, because this is all in an infinite\n+                    \/\/ loop, and during PhaseIdealLoop::build_loop_tree we do not\n+                    \/\/ attach the loops of an infinite loop to the loop tree,\n+                    \/\/ and hence we do not get to call beautify_loop on these loops\n+                    \/\/ which would have turned the Region into a LoopNode.\n+                } while (x < 0);\n+            }\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/TestUndetectedLoopInInfiniteLoop.java","additions":62,"deletions":0,"binary":false,"changes":62,"status":"added"},{"patch":"@@ -0,0 +1,71 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package compiler.vectorapi;\n+\n+import compiler.lib.ir_framework.*;\n+import jdk.incubator.vector.ByteVector;\n+import jdk.incubator.vector.VectorMask;\n+\n+\/*\n+ * @test\n+ * @bug 8292289\n+ * @summary Test idealization of VectorTest intrinsics to eliminate\n+ *          the materialization of the result as an int\n+ * @modules jdk.incubator.vector\n+ * @library \/test\/lib \/\n+ * @requires (os.simpleArch == \"x64\" & vm.cpu.features ~= \".*sse4.*\" & (vm.opt.UseSSE == \"null\" | vm.opt.UseSSE > 3))\n+ *           | os.arch == \"aarch64\"\n+ * @run driver compiler.vectorapi.TestVectorTest\n+ *\/\n+public class TestVectorTest {\n+    public static void main(String[] args) {\n+        TestFramework.runWithFlags(\"--add-modules=jdk.incubator.vector\");\n+    }\n+\n+    @DontInline\n+    public int call() { return 1; }\n+\n+    @Test\n+    @IR(failOn = {IRNode.CMP_I, IRNode.CMOVE_I})\n+    @IR(counts = {IRNode.VECTOR_TEST, \"1\"})\n+    public int branch(long maskLong) {\n+        var mask = VectorMask.fromLong(ByteVector.SPECIES_PREFERRED, maskLong);\n+        return mask.allTrue() ? call() : 0;\n+    }\n+\n+    @Test\n+    @IR(failOn = {IRNode.CMP_I})\n+    @IR(counts = {IRNode.VECTOR_TEST, \"1\", IRNode.CMOVE_I, \"1\"})\n+    public int cmove(long maskLong) {\n+        var mask = VectorMask.fromLong(ByteVector.SPECIES_PREFERRED, maskLong);\n+        return mask.allTrue() ? 1 : 0;\n+    }\n+\n+    @Run(test = {\"branch\", \"cmove\"})\n+    public void run() {\n+        branch(-1);\n+        branch(100);\n+        cmove(-1);\n+        cmove(100);\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorapi\/TestVectorTest.java","additions":71,"deletions":0,"binary":false,"changes":71,"status":"added"},{"patch":"@@ -37,1 +37,1 @@\n- *           | os.arch == \"aarch64\" | os.arch == \"riscv64\"\n+ *           | os.arch == \"aarch64\" | (os.arch == \"riscv64\" & vm.opt.UseRVV == true)\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorization\/TestAutoVecIntMinMax.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -53,1 +53,0 @@\n-                                                                  \"-XX:-G1UsePreventiveGC\",\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestEvacuationFailure.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -281,1 +281,0 @@\n-                                                                  \"-XX:-G1UsePreventiveGC\",\n@@ -294,1 +293,0 @@\n-                                                   \"-XX:-G1UsePreventiveGC\",\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestGCLogMessages.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -128,2 +128,1 @@\n-                                                        \"-XX:+UnlockDiagnosticVMOptions\",\n-                                                        \"-XX:-G1UsePreventiveGC\"});\n+                                                        \"-XX:+UnlockDiagnosticVMOptions\"});\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestVerifyGCType.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,1 +35,1 @@\n- * @run main\/othervm -XX:CompressedClassSpaceSize=48m gc.metaspace.CompressedClassSpaceSizeInJmapHeap\n+ * @run main\/timeout=240 gc.metaspace.CompressedClassSpaceSizeInJmapHeap\n@@ -39,0 +39,1 @@\n+import jdk.test.lib.apps.LingeredApp;\n@@ -52,1 +53,3 @@\n-        String pid = Long.toString(ProcessTools.getProcessId());\n+        LingeredApp theApp = new LingeredApp();\n+        LingeredApp.startApp(theApp, \"-XX:CompressedClassSpaceSize=48m\");\n+        String pid = Long.toString(theApp.getPid());\n@@ -72,0 +75,2 @@\n+\n+        LingeredApp.stopApp(theApp);\n","filename":"test\/hotspot\/jtreg\/gc\/metaspace\/CompressedClassSpaceSizeInJmapHeap.java","additions":8,"deletions":3,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -80,1 +80,1 @@\n-        if (ver != 64) {\n+        if (ver != latestMajor) {\n@@ -84,1 +84,1 @@\n-                \"Expected 0:64, but got \" + got_minor + \":\" + got_major + \" for primitive array\");\n+                \"Expected 0:\" + latestMajor + \", but got \" + got_minor + \":\" + got_major + \" for primitive array\");\n","filename":"test\/hotspot\/jtreg\/runtime\/ClassFile\/ClassFileVersionTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -64,1 +64,0 @@\n-            {\"EnableWaitForParallelLoad\", \"false\"},\n","filename":"test\/hotspot\/jtreg\/runtime\/CommandLine\/VMDeprecatedOptions.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -36,1 +36,2 @@\n- * @run driver\/timeout=180000 SyncOnValueBasedClassTest\n+ * @enablePreview\n+ * @run main\/othervm\/timeout=180000 --enable-preview SyncOnValueBasedClassTest\n@@ -65,1 +66,1 @@\n-        String[] commonFatalTestsFlags = {\"-XX:+UnlockDiagnosticVMOptions\", \"-XX:-CreateCoredumpOnCrash\", \"-XX:DiagnoseSyncOnValueBasedClasses=1\"};\n+        String[] commonFatalTestsFlags = {\"--enable-preview\", \"-XX:+UnlockDiagnosticVMOptions\", \"-XX:-CreateCoredumpOnCrash\", \"-XX:DiagnoseSyncOnValueBasedClasses=1\"};\n@@ -75,1 +76,1 @@\n-        String[] commonLogTestsFlags = {\"-XX:+UnlockDiagnosticVMOptions\", \"-XX:DiagnoseSyncOnValueBasedClasses=2\"};\n+        String[] commonLogTestsFlags = {\"--enable-preview\", \"-XX:+UnlockDiagnosticVMOptions\", \"-XX:DiagnoseSyncOnValueBasedClasses=2\"};\n@@ -99,0 +100,1 @@\n+        virtualThreadTests();\n@@ -166,0 +168,32 @@\n+\n+    \/\/ Very basic sanity tests to show things work for virtual threads too.\n+    private static void virtualThreadTests() throws Exception {\n+        final String[] vtTest = { \"--enable-preview\", \"-XX:+UnlockDiagnosticVMOptions\", \"-XX:-CreateCoredumpOnCrash\",\n+                                  \"\", \"SyncOnValueBasedClassTest$VTTest\" };\n+        \/\/ Fatal test\n+        vtTest[3] = \"-XX:DiagnoseSyncOnValueBasedClasses=1\";\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(vtTest);\n+        OutputAnalyzer output = ProcessTools.executeProcess(pb);\n+        output.shouldContain(\"fatal error: Synchronizing on object\");\n+        output.shouldNotContain(\"synchronization on value based class did not fail\");\n+        output.shouldNotHaveExitValue(0);\n+\n+        \/\/ Log test\n+        vtTest[3] = \"-XX:DiagnoseSyncOnValueBasedClasses=2\";\n+        pb = ProcessTools.createJavaProcessBuilder(vtTest);\n+        output = ProcessTools.executeProcess(pb);\n+        output.shouldHaveExitValue(0);\n+        output.shouldContain(\"Synchronizing on object\");\n+        output.shouldContain(\"synchronization on value based class did not fail\");\n+    }\n+\n+    static class VTTest {\n+        public static void main(String[] args) throws Exception {\n+            var thread = Thread.ofVirtual().start(() -> {\n+                    synchronized (Character.valueOf('H')) {\n+                        System.out.println(\"synchronization on value based class did not fail\");\n+                    }\n+                });\n+            thread.join();\n+        }\n+    }\n","filename":"test\/hotspot\/jtreg\/runtime\/Monitor\/SyncOnValueBasedClassTest.java","additions":37,"deletions":3,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -67,2 +67,2 @@\n-    \/\/ Match '- <mtType> (reserved=<reserved>KB, committed=<committed>KB)\n-    Pattern mtTypePattern = Pattern.compile(\"-\\\\s+(?<typename>[\\\\w\\\\s]+)\\\\(reserved=(?<reserved>\\\\d+)KB,\\\\scommitted=(?<committed>\\\\d+)KB\\\\)\");\n+    \/\/ Match '- <mtType> (reserved=<reserved>KB, committed=<committed>KB) and some times readonly=<readonly>KB\n+    Pattern mtTypePattern = Pattern.compile(\"-\\\\s+(?<typename>[\\\\w\\\\s]+)\\\\(reserved=(?<reserved>\\\\d+)KB,\\\\scommitted=(?<committed>\\\\d+)KB((,\\\\sreadonly=(?<readonly>\\\\d+)KB)|)\\\\)\");\n@@ -88,0 +88,10 @@\n+          \/\/ Only Shared class space has readonly component\n+          if (lines[i].contains(\"Shared class space\") && typeMatcher.group(\"readonly\") != null) {\n+            long typeReadOnly = Long.parseLong(typeMatcher.group(\"readonly\"));\n+            \/\/ Make sure readonly is always less or equal to committed\n+            if (typeReadOnly > typeCommitted) {\n+              throwTestException(\"Readonly (\" + typeReadOnly + \") was more than Committed (\"\n+                  + typeCommitted + \") for mtType: \" + typeMatcher.group(\"typename\"));\n+            }\n+          }\n+\n","filename":"test\/hotspot\/jtreg\/runtime\/NMT\/SummarySanityCheck.java","additions":12,"deletions":2,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -3,0 +3,1 @@\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +28,1 @@\n- * @bug 8269697\n+ * @bug 8269697 8292674\n@@ -29,0 +30,1 @@\n+ * @comment Tests reporting with regular thread and virtual thread.\n@@ -30,0 +32,1 @@\n+ * @enablePreview\n@@ -50,1 +53,1 @@\n-            test();\n+            test(args[0]);\n@@ -52,1 +55,2 @@\n-            runTest();\n+            runTest(false);\n+            runTest(true);\n@@ -56,1 +60,1 @@\n-    private static void runTest() {\n+    private static void runTest(boolean useVThread) {\n@@ -60,0 +64,1 @@\n+        pbArgs.add(\"--enable-preview\");\n@@ -62,1 +67,1 @@\n-        pbArgs.add(\"test\");\n+        pbArgs.add(useVThread ? \"vtest\" : \"test\");\n@@ -69,0 +74,1 @@\n+            analyzer.shouldContain(\"TestPrimitiveArrayCriticalWithBadParam.pin\");\n@@ -75,4 +81,19 @@\n-    private static void test() {\n-        Object[] objs = new Object[10];\n-        for (int i = 0; i < objs.length; i++) {\n-            objs[i] = new MyClass();\n+    private static void test(String mode) {\n+        Runnable r = () -> {\n+            Object[] objs = new Object[10];\n+            for (int i = 0; i < objs.length; i++) {\n+                objs[i] = new MyClass();\n+            }\n+            pin(objs);\n+            System.out.println(\"Object array pinned\");\n+            unpin(objs);\n+        };\n+        if (mode.equals(\"vtest\")) {\n+            Thread t = Thread.ofVirtual().start(r);\n+            try {\n+                t.join();\n+            } catch (InterruptedException ex) {\n+                throw new Error(\"unexpected\", ex);\n+            }\n+        } else {\n+            r.run();\n@@ -80,3 +101,0 @@\n-        pin(objs);\n-        System.out.println(\"Object array pinned\");\n-        unpin(objs);\n","filename":"test\/hotspot\/jtreg\/runtime\/jni\/checked\/TestPrimitiveArrayCriticalWithBadParam.java","additions":30,"deletions":12,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -269,1 +269,1 @@\n-            breakpointForCommunication();\n+            breakpointForCommunication(debuggeeName);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/EventRequestManager\/threadDeathRequests\/thrdeathreq002.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -295,1 +295,1 @@\n-            breakpointForCommunication();\n+            breakpointForCommunication(debuggeeName);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/EventSet\/suspendPolicy\/suspendpolicy009.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -430,1 +430,0 @@\n-java\/awt\/Toolkit\/DesktopProperties\/rfe4758438.java 8193547 linux-all\n@@ -591,1 +590,6 @@\n-javax\/net\/ssl\/DTLS\/CipherSuite.java                             8202059 macosx-x64\n+javax\/net\/ssl\/SSLEngine\/TestAllSuites.java                      8298874 generic-all\n+javax\/net\/ssl\/SSLEngine\/IllegalRecordVersion.java               8298873 generic-all\n+javax\/net\/ssl\/SSLEngine\/EngineCloseOnAlert.java                 8298868 generic-all\n+javax\/net\/ssl\/SSLEngine\/ConnectionTest.java                     8298869 generic-all\n+javax\/net\/ssl\/SSLEngine\/CheckStatus.java                        8298872 generic-all\n+javax\/net\/ssl\/SSLEngine\/Basics.java                             8298867 generic-all\n@@ -671,1 +675,1 @@\n-java\/awt\/Mouse\/EnterExitEvents\/DragWindowTest.java 8297296 macosx-all\n+java\/awt\/Mouse\/EnterExitEvents\/DragWindowTest.java 8298823 macosx-all\n","filename":"test\/jdk\/ProblemList.txt","additions":7,"deletions":3,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -230,1 +230,1 @@\n-        \/\/ a method with with one generic param\n+        \/\/ a method with one generic param\n","filename":"test\/jdk\/com\/sun\/jdi\/ArgumentValuesTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n- * When a transport service is deployed the virtual machine machine\n+ * When a transport service is deployed the virtual machine\n","filename":"test\/jdk\/com\/sun\/jdi\/connect\/spi\/GeneratedConnectors.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -155,1 +155,1 @@\n-        # i.e., the > prompt comes out AFTER the prompt we we need to wait for.\n+        # i.e., the > prompt comes out AFTER the prompt we need to wait for.\n","filename":"test\/jdk\/com\/sun\/jdi\/lib\/jdb\/Jdb.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -37,5 +37,17 @@\n-import java.awt.*;\n-import java.awt.event.*;\n-import javax.swing.*;\n-\n-import java.util.concurrent.*;\n+import java.awt.BorderLayout;\n+import java.awt.Component;\n+import java.awt.Rectangle;\n+import java.awt.Robot;\n+import java.awt.Panel;\n+import java.awt.Point;\n+import java.awt.Window;\n+import java.awt.event.InputEvent;\n+import java.awt.event.MouseAdapter;\n+import java.awt.event.MouseEvent;\n+import javax.swing.JFrame;\n+import javax.swing.JLabel;\n+import javax.swing.JButton;\n+import javax.swing.JPanel;\n+import javax.swing.SwingUtilities;\n+\n+import java.util.concurrent.Callable;\n@@ -58,1 +70,1 @@\n-        robot.setAutoDelay(50);\n+        robot.setAutoDelay(100);\n@@ -68,0 +80,1 @@\n+        robot.delay(250);\n@@ -137,0 +150,1 @@\n+        frame.setLocationRelativeTo(null);\n","filename":"test\/jdk\/java\/awt\/Mouse\/EnterExitEvents\/DragWindowTest.java","additions":20,"deletions":6,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n- * Here is how to test: start the test on on a multi-screen system.\n+ * Here is how to test: start the test on a multi-screen system.\n","filename":"test\/jdk\/java\/awt\/Multiscreen\/DeviceIdentificationTest\/DeviceIdentificationTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,0 +33,1 @@\n+ * @requires os.family == \"linux\"\n@@ -46,0 +47,1 @@\n+                \"org.gnome.desktop.peripherals.mouse  drag-threshold\",\n@@ -52,0 +54,1 @@\n+                \"org.gnome.desktop.peripherals.mouse double-click\",\n@@ -59,0 +62,1 @@\n+                null,\n@@ -65,0 +69,1 @@\n+                null,\n@@ -71,0 +76,1 @@\n+                null,\n@@ -77,0 +83,1 @@\n+        public final String gsettingsFallback;\n@@ -82,1 +89,8 @@\n-        PROPS(String gsettings, String gconftool, String java, String type, String[] values){\n+        PROPS(\n+                String gsettings,\n+                String gsettingsFallback,\n+                String gconftool,\n+                String java,\n+                String type,\n+                String[] values\n+        ){\n@@ -84,0 +98,1 @@\n+            this.gsettingsFallback = gsettingsFallback;\n@@ -93,1 +108,1 @@\n-    Toolkit toolkit = Toolkit.getDefaultToolkit();\n+    final Toolkit toolkit = Toolkit.getDefaultToolkit();\n@@ -96,1 +111,1 @@\n-    Object lock = new Object();\n+    final Object lock = new Object();\n@@ -108,1 +123,1 @@\n-            } catch (Exception e) {\n+            } catch (Exception ignored) {\n@@ -135,0 +150,28 @@\n+    String prepareCommand(PROPS property, boolean useMain) {\n+        \/\/Create the command to execute\n+        StringBuffer sb = new StringBuffer(tool);\n+        if (useGsettings) {\n+            sb.append(\" set \");\n+            sb.append( useMain\n+                    ? property.gsettings\n+                    : property.gsettingsFallback\n+            );\n+            sb.append(\" \");\n+        } else {\n+            sb.append(\" --set --type=\");\n+            sb.append(property.type);\n+            sb.append(\" \");\n+            sb.append(property.gconftool);\n+            sb.append(\" \");\n+        }\n+        return sb.toString();\n+    }\n+\n+    int doTestCommand(String cmd) throws Exception {\n+        \/\/Initialize the variables and execute the command\n+        changedProperty = \"\";\n+        changedValue = null;\n+\n+        return executeCommand(cmd);\n+    }\n+\n@@ -149,2 +192,2 @@\n-            if (obj.equals(new Integer(1))) {\n-                obj = new String(\"true\");\n+            if (obj.equals(1)) {\n+                obj = \"true\";\n@@ -152,1 +195,1 @@\n-                obj = new String(\"false\");\n+                obj = \"false\";\n@@ -160,15 +203,1 @@\n-        \/\/Create the command to execute\n-        StringBuffer sb = new StringBuffer(tool);\n-        if (useGsettings) {\n-            sb.append(\" set \");\n-            sb.append(property.gsettings);\n-            sb.append(\" \");\n-        } else {\n-            sb.append(\" --set --type=\");\n-            sb.append(property.type);\n-            sb.append(\" \");\n-            sb.append(property.gconftool);\n-            sb.append(\" \");\n-        }\n-        String tempCommand = sb.toString();\n-        sb.append(value.toString());\n+        String tempCommand = prepareCommand(property, true);\n@@ -176,5 +205,15 @@\n-        \/\/Initialize the variables and execute the command\n-        changedProperty = \"\";\n-        changedValue = null;\n-        if (executeCommand(sb.toString()) != 0)\n-            throw new RuntimeException(\"Could not execute the command\");\n+        int retVal = doTestCommand(tempCommand + value);\n+\n+        if (retVal != 0) {\n+            if (useGsettings && property.gsettingsFallback != null) {\n+                System.out.printf(\"Failed:\\n\\t%s\\nTrying fallback:\\n\\t\", tempCommand);\n+                tempCommand = prepareCommand(property, false);\n+                System.out.println(tempCommand);\n+\n+                retVal = doTestCommand(tempCommand + value);\n+            }\n+\n+            if (retVal != 0) {\n+                throw new RuntimeException(\"Could not execute the command\");\n+            }\n+        }\n@@ -185,1 +224,1 @@\n-            } catch (Exception e) {\n+            } catch (Exception ignored) {\n@@ -188,0 +227,1 @@\n+\n@@ -189,2 +229,2 @@\n-            if (changedValue.equals(new Integer(1))) {\n-                changedValue = new String(\"true\");\n+            if (changedValue.equals(1)) {\n+                changedValue = \"true\";\n@@ -192,1 +232,1 @@\n-                changedValue = new String(\"false\");\n+                changedValue = \"false\";\n@@ -199,1 +239,1 @@\n-            executeCommand(tempCommand + obj.toString());\n+            executeCommand(tempCommand + obj);\n@@ -203,1 +243,1 @@\n-            executeCommand(tempCommand + obj.toString());\n+            executeCommand(tempCommand + obj);\n@@ -209,1 +249,1 @@\n-        executeCommand(tempCommand + obj.toString());\n+        executeCommand(tempCommand + obj);\n@@ -234,1 +274,1 @@\n-            System.out.println(stdout.toString());\n+            System.out.println(stdout);\n@@ -236,1 +276,1 @@\n-            System.err.println(stderr.toString());\n+            System.err.println(stderr);\n","filename":"test\/jdk\/java\/awt\/Toolkit\/DesktopProperties\/rfe4758438.java","additions":77,"deletions":37,"binary":false,"changes":114,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-# Copyright (c) 2014, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,6 @@\n-        GNOMESID=`pgrep gnome-session`\n+        GNOMESID=`pgrep gnome-session | head -n1`\n+\n+        printf \"\\n\/* gnome-session environ\\n\"\n+        cat \"\/proc\/$GNOMESID\/environ\" | tr '\\0' '\\n'\n+        printf \"\\n*\/\\n\\n\"\n+\n@@ -34,0 +39,1 @@\n+\n@@ -36,7 +42,3 @@\n-        ;;\n-    Sun* )\n-        GNOMESID=`pgrep gnome-session`\n-        DBUS_SESSION_BUS_ADDRESS=`pargs -e $GNOMESID | grep DBUS_SESSION_BUS_ADDRESS | cut -d= -f2-`\n-        export DBUS_SESSION_BUS_ADDRESS\n-        DISPLAY=`pargs -e $GNOMESID | grep DISPLAY | cut -d= -f2-`\n-        export DISPLAY\n+\n+        XDG_CURRENT_DESKTOP=`grep -z XDG_CURRENT_DESKTOP \/proc\/$GNOMESID\/environ | cut -d= -f2-`\n+        export XDG_CURRENT_DESKTOP\n@@ -50,1 +52,9 @@\n-if [ ${GNOME_DESKTOP_SESSION_ID:-nonset} = \"nonset\" ];\n+printf \"\\n\/* Test env:\\n\\n\"\n+env\n+printf \"\\n*\/\\n\\n\"\n+\n+XDG_GNOME=$(echo $XDG_CURRENT_DESKTOP | grep -i gnome)\n+\n+if [ -z \"$XDG_GNOME\" ] \\\n+     && [ ${GNOME_DESKTOP_SESSION_ID:-nonset} = \"nonset\" ] \\\n+     && [ ${GNOME_SESSION_NAME:-nonset} = \"nonset\" ]\n@@ -52,5 +62,2 @@\n-    if [ ${GNOME_SESSION_NAME:-nonset} = \"nonset\" ];\n-    then\n-        echo \"This test should run under Gnome\"\n-        exit 0\n-    fi\n+    echo \"This test should run under Gnome\"\n+    exit 0\n@@ -73,0 +80,2 @@\n+\n+set -e\n@@ -74,0 +83,2 @@\n+set +e\n+\n","filename":"test\/jdk\/java\/awt\/Toolkit\/DesktopProperties\/rfe4758438.sh","additions":26,"deletions":15,"binary":false,"changes":41,"status":"modified"},{"patch":"@@ -60,1 +60,1 @@\n-            + \"Perform the VO action \\\"Show menu\\\" (VO+Shift+m)\\n\\n\"\n+            + \"Perform the VO action \\\"Show menu\\\" (Shift+VO+m)\\n\\n\"\n@@ -70,1 +70,1 @@\n-            + \"Turn screen reader on, and Tab to the label.\\n\\n\"\n+            + \"Turn screen reader on, and Tab to the tree.\\n\\n\"\n","filename":"test\/jdk\/java\/awt\/a11y\/AccessibleActionsTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -55,1 +55,1 @@\n-                + \"Use page up and page down arrow buttons to move through the tabs.\\n\\n\"\n+                + \"Use the left and right arrow buttons to move through the tabs.\\n\\n\"\n","filename":"test\/jdk\/java\/awt\/a11y\/AccessibleJTabbedPaneTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -61,2 +61,2 @@\n-                + \"ON Windows with JAWS, use window virtualization (insert+alt+w and arrows) to read the label text;\\n\"\n-                + \"ON Windows with NVDA, use the browse cursor (insert+num4 or insert+num6) to read the label text;\\n\\n\"\n+                + \"On Windows with JAWS, use JAWS cursor (num_minus and arrows) to read the label text;\\n\"\n+                + \"On Windows with NVDA, use the object navigation (insert+num4 or insert+num6) to read the label text;\\n\\n\"\n","filename":"test\/jdk\/java\/awt\/a11y\/AccessibleTextTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -124,1 +124,1 @@\n-                \"      from the the \\\"SELECTION:\\\" marker\",\n+                \"      from the \\\"SELECTION:\\\" marker\",\n","filename":"test\/jdk\/java\/awt\/datatransfer\/HTMLDataFlavors\/ManualHTMLDataFlavorTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n-    \"This is is a manual test intended to be run on Windows, and you\",\n+    \"This is a manual test intended to be run on Windows, and you\",\n","filename":"test\/jdk\/java\/awt\/print\/PrinterJob\/PageFormatChange.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -32,1 +32,0 @@\n-import java.io.IOException;\n@@ -35,1 +34,0 @@\n-import java.io.RandomAccessFile;\n","filename":"test\/jdk\/java\/io\/File\/Basic.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,0 +34,1 @@\n+ * @requires !(os.family == \"windows\" & sun.arch.data.model == \"32\")\n","filename":"test\/jdk\/java\/lang\/String\/StringRepeat.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -753,7 +753,0 @@\n-    @Test\n-    public void testAllowThreadSuspension() {\n-        ThreadGroup group = new ThreadGroup(\"foo\");\n-        assertFalse(group.allowThreadSuspension(false));\n-        assertFalse(group.allowThreadSuspension(true));\n-    }\n-\n","filename":"test\/jdk\/java\/lang\/ThreadGroup\/BasicTests.java","additions":0,"deletions":7,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -194,19 +194,19 @@\n-\/\/        System.out.println(\"\\nClient: Explicitly setting the default authenticator: \"\n-\/\/            + toString(Authenticator.getDefault()));\n-\/\/        HTTPTestClient.connect(protocol, server, mode, Authenticator.getDefault());\n-\/\/        count = authOne.count.get();\n-\/\/        if (count != expectedIncrement) {\n-\/\/            throw new AssertionError(\"Authenticator #1 called \" + count(count)\n-\/\/                + \" expected it to be called \" + expected(expectedIncrement));\n-\/\/        }\n-\/\/        count = authTwo.count.get();\n-\/\/        if (count != expectedIncrement) {\n-\/\/            throw new AssertionError(\"Authenticator #2 called \" + count(count)\n-\/\/                + \" expected it to be called \" + expected(expectedIncrement));\n-\/\/        }\n-\/\/        count =  AUTHENTICATOR.count.get();\n-\/\/        if (count != defaultCount + 2 * expectedIncrement) {\n-\/\/            throw new AssertionError(\"Default Authenticator called \" + count(count)\n-\/\/                + \" expected it to be called \"\n-\/\/                + expected(defaultCount + 2 * expectedIncrement));\n-\/\/        }\n+        System.out.println(\"\\nClient: Explicitly setting the default authenticator: \"\n+            + toString(Authenticator.getDefault()));\n+        HTTPTestClient.connect(protocol, server, mode, Authenticator.getDefault());\n+        count = authOne.count.get();\n+        if (count != expectedIncrement) {\n+            throw new AssertionError(\"Authenticator #1 called \" + count(count)\n+                + \" expected it to be called \" + expected(expectedIncrement));\n+        }\n+        count = authTwo.count.get();\n+        if (count != expectedIncrement) {\n+            throw new AssertionError(\"Authenticator #2 called \" + count(count)\n+                + \" expected it to be called \" + expected(expectedIncrement));\n+        }\n+        count =  AUTHENTICATOR.count.get();\n+        if (count != defaultCount + 2 * expectedIncrement) {\n+            throw new AssertionError(\"Default Authenticator called \" + count(count)\n+                + \" expected it to be called \"\n+                + expected(defaultCount + 2 * expectedIncrement));\n+        }\n@@ -241,10 +241,10 @@\n-\/\/            try {\n-\/\/                conn.setAuthenticator(Authenticator.getDefault());\n-\/\/                throw new RuntimeException(\"Expected IllegalStateException\"\n-\/\/                        + \" trying to set an authenticator after connect\"\n-\/\/                        + \" not raised.\");\n-\/\/            } catch (IllegalStateException ise) {\n-\/\/                System.out.println(\"Client: caught expected ISE\"\n-\/\/                        + \" trying to set an authenticator after connect: \"\n-\/\/                        + ise);\n-\/\/            }\n+            try {\n+                conn.setAuthenticator(Authenticator.getDefault());\n+                throw new RuntimeException(\"Expected IllegalStateException\"\n+                        + \" trying to set an authenticator after connect\"\n+                        + \" not raised.\");\n+            } catch (IllegalStateException ise) {\n+                System.out.println(\"Client: caught expected ISE\"\n+                        + \" trying to set an authenticator after connect: \"\n+                        + ise);\n+            }\n@@ -282,1 +282,1 @@\n-        return scheme == HttpSchemeType.NONE ? 0 : 1 * EXPECTED_AUTH_CALLS_PER_TEST;\n+        return scheme == HttpSchemeType.NONE ? 0 : 2 * EXPECTED_AUTH_CALLS_PER_TEST;\n","filename":"test\/jdk\/java\/net\/HttpURLConnection\/SetAuthenticator\/HTTPSetAuthenticatorTest.java","additions":30,"deletions":30,"binary":false,"changes":60,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+import java.net.BindException;\n@@ -30,0 +31,1 @@\n+import java.time.Duration;\n@@ -38,0 +40,2 @@\n+    public static final long DELAY_BEFORE_RETRY = 2500; \/\/ milliseconds\n+\n@@ -43,0 +47,26 @@\n+        try {\n+            doConnect(protocol, server, authType, auth);\n+        } catch (BindException ex) {\n+            \/\/ sleep a bit then try again once\n+            System.out.println(\"WARNING: Unexpected BindException: \" + ex);\n+            System.out.println(\"\\tSleeping a bit and try again...\");\n+            long start = System.nanoTime();\n+            System.gc();\n+            try {\n+                Thread.sleep(DELAY_BEFORE_RETRY);\n+            } catch (InterruptedException iex) {\n+                \/\/ ignore\n+            }\n+            System.gc();\n+            System.out.println(\"\\tRetrying after \"\n+                    + Duration.ofNanos(System.nanoTime() - start).toMillis()\n+                    + \" milliseconds\");\n+            doConnect(protocol, server, authType, auth);\n+        }\n+    }\n+\n+    public static void doConnect(HttpProtocolType protocol,\n+                               HTTPTestServer server,\n+                               HttpAuthType authType,\n+                               Authenticator auth)\n+            throws IOException {\n","filename":"test\/jdk\/java\/net\/HttpURLConnection\/SetAuthenticator\/HTTPTestClient.java","additions":30,"deletions":0,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -115,1 +115,1 @@\n-                Throwable t = getCompletionCause(ce);\n+                final Throwable t = getCompletionCause(ce);\n@@ -119,1 +119,1 @@\n-                WebSocketHandshakeException wse = (WebSocketHandshakeException) t;\n+                final WebSocketHandshakeException wse = (WebSocketHandshakeException) t;\n@@ -121,7 +121,1 @@\n-                assertNotNull(wse.getResponse().body());\n-                assertEquals(wse.getResponse().body().getClass(), String.class);\n-                String body = (String)wse.getResponse().body();\n-                String expectedBody = \"\/?&raw=abc+def\/ghi=xyz&encoded=abc%2Bdef%2Fghi%3Dxyz\";\n-                assertEquals(body, expectedBody);\n-                out.println(\"Status code is \" + wse.getResponse().statusCode());\n-                out.println(\"Response is \" + body);\n+                assertNotNull(wse.getResponse().uri());\n@@ -129,0 +123,6 @@\n+                final String rawQuery = wse.getResponse().uri().getRawQuery();\n+                final String expectedRawQuery = \"&raw=abc+def\/ghi=xyz&encoded=abc%2Bdef%2Fghi%3Dxyz\";\n+                assertEquals(rawQuery, expectedRawQuery);\n+                final String body = (String) wse.getResponse().body();\n+                final String expectedBody = \"\/?\" + expectedRawQuery;\n+                assertEquals(body, expectedBody);\n@@ -130,0 +130,1 @@\n+                out.println(\"Response is \" + wse.getResponse());\n","filename":"test\/jdk\/java\/net\/httpclient\/websocket\/HandshakeUrlEncodingTest.java","additions":10,"deletions":9,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -25,1 +25,1 @@\n-# @summary Verify that temporary imageio files files are deleted on VM exit.\n+# @summary Verify that temporary imageio files are deleted on VM exit.\n","filename":"test\/jdk\/javax\/imageio\/stream\/DeleteOnExitTest.sh","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,0 +36,1 @@\n+import java.io.IOException;\n@@ -45,0 +46,1 @@\n+import java.util.concurrent.atomic.AtomicBoolean;\n@@ -53,2 +55,0 @@\n-    private static final int MAX_HANDSHAKE_LOOPS = 200;\n-    private static final int MAX_APP_READ_LOOPS = 60;\n@@ -78,2 +78,3 @@\n-    private static Exception clientException = null;\n-    private static Exception serverException = null;\n+    private final AtomicBoolean exceptionOccurred = new AtomicBoolean(false);\n+\n+    private final CountDownLatch serverStarted = new CountDownLatch(1);\n@@ -151,1 +152,1 @@\n-        int loops = MAX_HANDSHAKE_LOOPS;\n+        int loops = 0;\n@@ -153,7 +154,1 @@\n-        while (!endLoops &&\n-                (serverException == null) && (clientException == null)) {\n-\n-            if (--loops < 0) {\n-                throw new RuntimeException(\n-                        \"Too many loops to produce handshake packets\");\n-            }\n+        while (!endLoops && !exceptionOccurred.get()) {\n@@ -162,1 +157,1 @@\n-            log(side, \"=======handshake(\" + loops + \", \" + hs + \")=======\");\n+            log(side, \"=======handshake(\" + ++loops + \", \" + hs + \")=======\");\n@@ -316,7 +311,1 @@\n-        int loops = MAX_APP_READ_LOOPS;\n-        while ((serverException == null) && (clientException == null)) {\n-            if (--loops < 0) {\n-                throw new RuntimeException(\n-                        \"Too much loops to receive application data\");\n-            }\n-\n+        while (!exceptionOccurred.get()) {\n@@ -324,2 +313,2 @@\n-            DatagramPacket packet = new DatagramPacket(buf, buf.length);\n-            socket.receive(packet);\n+            DatagramPacket packet = readFromSocket(socket, buf);\n+\n@@ -341,0 +330,18 @@\n+    \/*\n+    Some tests failed with receive time-out errors when the client tried to read\n+    from the server. The server thread had exited normally so the read _should_\n+    succeed. So let's try to read a couple of times before giving up.\n+     *\/\n+    DatagramPacket readFromSocket(DatagramSocket socket, byte[] buffer) throws IOException {\n+        for (int i = 1 ; i <= 2 ; ++i) {\n+            try {\n+                DatagramPacket packet = new DatagramPacket(buffer, buffer.length);\n+                socket.receive(packet);\n+                return packet;\n+            } catch (SocketTimeoutException exc) {\n+                System.out.println(\"Attempt \" + i + \": Timeout occurred reading from socket.\");\n+            }\n+        }\n+        throw new IOException(\"Did not receive data after 2 attempts.\");\n+    }\n+\n@@ -346,8 +353,2 @@\n-        int loops = MAX_HANDSHAKE_LOOPS \/ 2;\n-        while (!endLoops &&\n-                (serverException == null) && (clientException == null)) {\n-\n-            if (--loops < 0) {\n-                throw new RuntimeException(\n-                        \"Too many loops to produce handshake packets\");\n-            }\n+        int loops = 0;\n+        while (!endLoops && !exceptionOccurred.get()) {\n@@ -363,1 +364,1 @@\n-                    loops + \", \" + rs + \", \" + hs + \")----\");\n+                    ++loops + \", \" + rs + \", \" + hs + \")----\");\n@@ -521,4 +522,0 @@\n-    \/\/ Will the handshaking and application data exchange succeed?\n-    public boolean isGoodJob() {\n-        return true;\n-    }\n@@ -544,2 +541,2 @@\n-            ExecutorService pool = Executors.newFixedThreadPool(2);\n-            Future<String> server, client;\n+            ExecutorService pool = Executors.newFixedThreadPool(1);\n+            Future<Void> server;\n@@ -547,2 +544,1 @@\n-            try {\n-                server = pool.submit(new ServerCallable(\n+            server = pool.submit(() -> runServer(\n@@ -550,7 +546,1 @@\n-                client = pool.submit(new ClientCallable(\n-                        testCase, clientSocket, serverSocketAddr));\n-            } finally {\n-                pool.shutdown();\n-            }\n-\n-            boolean failed = false;\n+            pool.shutdown();\n@@ -558,23 +548,2 @@\n-            \/\/ wait for client to finish\n-            try {\n-                System.out.println(\"Client finished: \" + client.get());\n-            } catch (CancellationException | InterruptedException\n-                        | ExecutionException e) {\n-                System.out.println(\"Exception on client side: \");\n-                e.printStackTrace(System.out);\n-                failed = true;\n-            }\n-\n-            \/\/ wait for server to finish\n-            try {\n-                System.out.println(\"Client finished: \" + server.get());\n-            } catch (CancellationException | InterruptedException\n-                        | ExecutionException e) {\n-                System.out.println(\"Exception on server side: \");\n-                e.printStackTrace(System.out);\n-                failed = true;\n-            }\n-\n-            if (failed) {\n-                throw new RuntimeException(\"Test failed\");\n-            }\n+            runClient(testCase, clientSocket, serverSocketAddr);\n+            server.get();\n@@ -584,2 +553,5 @@\n-    record ServerCallable(DTLSOverDatagram testCase, DatagramSocket socket,\n-                          InetSocketAddress clientSocketAddr) implements Callable<String> {\n+    Void runServer(DTLSOverDatagram testCase, DatagramSocket socket,\n+                          InetSocketAddress clientSocketAddr) throws Exception {\n+        try {\n+            serverStarted.countDown();\n+            testCase.doServerSide(socket, clientSocketAddr);\n@@ -587,15 +559,2 @@\n-        @Override\n-        public String call() throws Exception {\n-            try {\n-                testCase.doServerSide(socket, clientSocketAddr);\n-            } catch (Exception e) {\n-                System.out.println(\"Exception in  ServerCallable.call():\");\n-                e.printStackTrace(System.out);\n-                serverException = e;\n-\n-                if (testCase.isGoodJob()) {\n-                    throw e;\n-                } else {\n-                    return \"Well done, server!\";\n-                }\n-            }\n+        } catch (Exception exc) {\n+            exceptionOccurred.set(true);\n@@ -603,5 +562,4 @@\n-            if (testCase.isGoodJob()) {\n-                return \"Well done, server!\";\n-            } else {\n-                throw new Exception(\"No expected exception\");\n-            }\n+            \/\/ log for debugging clarity\n+            System.out.println(\"Unexpected exception in server\");\n+            exc.printStackTrace(System.err);\n+            throw exc;\n@@ -609,0 +567,2 @@\n+\n+        return null;\n@@ -611,2 +571,5 @@\n-    record ClientCallable(DTLSOverDatagram testCase, DatagramSocket socket,\n-                          InetSocketAddress serverSocketAddr) implements Callable<String> {\n+    private void runClient(DTLSOverDatagram testCase, DatagramSocket socket,\n+                           InetSocketAddress serverSocketAddr) throws Exception {\n+        if(!serverStarted.await(5, TimeUnit.SECONDS)) {\n+            throw new Exception(\"Server did not start within 5 seconds.\");\n+        }\n@@ -614,15 +577,4 @@\n-        @Override\n-        public String call() throws Exception {\n-            try {\n-                testCase.doClientSide(socket, serverSocketAddr);\n-            } catch (Exception e) {\n-                System.out.println(\"Exception in ClientCallable.call():\");\n-                e.printStackTrace(System.out);\n-                clientException = e;\n-\n-                if (testCase.isGoodJob()) {\n-                    throw e;\n-                } else {\n-                    return \"Well done, client!\";\n-                }\n-            }\n+        try {\n+            testCase.doClientSide(socket, serverSocketAddr);\n+        } catch (Exception exc) {\n+            exceptionOccurred.set(true);\n@@ -630,5 +582,4 @@\n-            if (testCase.isGoodJob()) {\n-                return \"Well done, client!\";\n-            } else {\n-                throw new Exception(\"No expected exception\");\n-            }\n+            \/\/ log for debugging clarity\n+            System.out.println(\"Unexpected exception in client.\");\n+            exc.printStackTrace(System.err);\n+            throw exc;\n","filename":"test\/jdk\/javax\/net\/ssl\/DTLS\/DTLSOverDatagram.java","additions":65,"deletions":114,"binary":false,"changes":179,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,0 +39,1 @@\n+import java.util.concurrent.atomic.AtomicBoolean;\n@@ -41,1 +42,1 @@\n- * Test that if handshake messages are crasged, the handshake would fail\n+ * Test that if handshake messages are changed, the handshake would fail\n@@ -45,1 +46,1 @@\n-    boolean needInvalidRecords = true;\n+    private static final AtomicBoolean needInvalidRecords = new AtomicBoolean(true);\n@@ -50,1 +51,0 @@\n-    }\n@@ -52,3 +52,7 @@\n-    @Override\n-    public boolean isGoodJob() {\n-        return false;\n+        if (needInvalidRecords.get()) {\n+            \/\/ if this is true, the createHandshakePacket() method\n+            \/\/ was NOT called twice to create ClientHello messages\n+            throw new RuntimeException(\n+                    \"The invalid handshake packet was not\"\n+                    + \" rejected as it should have been.\");\n+        }\n@@ -57,0 +61,1 @@\n+\n@@ -59,1 +64,1 @@\n-        if ((ba.length >= 60) &&\n+        if (needInvalidRecords.get() && (ba.length >= 60) &&\n@@ -68,10 +73,0 @@\n-            if (!needInvalidRecords) {\n-                \/\/ The 2nd ClientHello with cookie.  The 1st one should be\n-                \/\/ rejected as expected.\n-                \/\/\n-                \/\/ This may happen if the last few bytes of the packet are\n-                \/\/ for supported_version extension.\n-                throw new RuntimeException(\n-                    \"the crashed handshake message was rejected as expected\");\n-            }\n-\n@@ -79,1 +74,1 @@\n-            needInvalidRecords = false;\n+            needInvalidRecords.set(false);\n","filename":"test\/jdk\/javax\/net\/ssl\/DTLS\/InvalidRecords.java","additions":14,"deletions":19,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -29,2 +29,0 @@\n- * @ignore JSSE supported cipher suites are changed with CR 6916074,\n- *     need to update this test case in JDK 7 soon\n","filename":"test\/jdk\/javax\/net\/ssl\/SSLEngine\/Basics.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n- * @ignore the dependent implementation details are changed\n+ *\n","filename":"test\/jdk\/javax\/net\/ssl\/SSLEngine\/CheckStatus.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n- * @ignore the dependent implementation details are changed\n","filename":"test\/jdk\/javax\/net\/ssl\/SSLEngine\/ConnectionTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n- * @ignore the dependent implementation details are changed\n+ *\n","filename":"test\/jdk\/javax\/net\/ssl\/SSLEngine\/EngineCloseOnAlert.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -33,1 +33,0 @@\n- * @ignore the dependent implementation details are changed\n","filename":"test\/jdk\/javax\/net\/ssl\/SSLEngine\/IllegalHandshakeMessage.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,1 +31,1 @@\n- * @ignore the dependent implementation details are changed\n+ *\n","filename":"test\/jdk\/javax\/net\/ssl\/SSLEngine\/IllegalRecordVersion.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,2 +27,1 @@\n- * @ignore JSSE supported cipher suites are changed with CR 6916074,\n- *     need to update this test case in JDK 7 soon\n+ *\n","filename":"test\/jdk\/javax\/net\/ssl\/SSLEngine\/TestAllSuites.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -102,1 +102,1 @@\n-                        + \"for for Non serv-formatted flvrs\");\n+                        + \"for Non serv-formatted flvrs\");\n","filename":"test\/jdk\/javax\/print\/attribute\/ServiceDlgPageRangeTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-        System.out.println(\"CANONICAL DN is is \" +\n+        System.out.println(\"CANONICAL DN is \" +\n","filename":"test\/jdk\/javax\/security\/auth\/x500\/X500Principal\/EscapedChars.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -58,1 +58,1 @@\n-        out(\"4913027: several Sequencer methods should should specify behaviour on closed Sequencer\");\n+        out(\"4913027: several Sequencer methods should specify behaviour on closed Sequencer\");\n","filename":"test\/jdk\/javax\/sound\/midi\/Sequencer\/SequencerState.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -44,7 +44,7 @@\n-    private static ImageIcon DE = new ImageIcon(bug5049549.class.getResource(\"DE1.GIF\"));\n-    private static ImageIcon DI = new ImageIcon(bug5049549.class.getResource(\"DI1.GIF\"));\n-    private static ImageIcon DS = new ImageIcon(bug5049549.class.getResource(\"DS1.GIF\"));\n-    private static ImageIcon RO = new ImageIcon(bug5049549.class.getResource(\"RO1.GIF\"));\n-    private static ImageIcon RS = new ImageIcon(bug5049549.class.getResource(\"RS1.GIF\"));\n-    private static ImageIcon SE = new ImageIcon(bug5049549.class.getResource(\"SE1.GIF\"));\n-    private static ImageIcon PR = new ImageIcon(bug5049549.class.getResource(\"PR1.GIF\"));\n+    private static ImageIcon DE = new ImageIcon(bug5049549.class.getResource(\"DE1.gif\"));\n+    private static ImageIcon DI = new ImageIcon(bug5049549.class.getResource(\"DI1.gif\"));\n+    private static ImageIcon DS = new ImageIcon(bug5049549.class.getResource(\"DS1.gif\"));\n+    private static ImageIcon RO = new ImageIcon(bug5049549.class.getResource(\"RO1.gif\"));\n+    private static ImageIcon RS = new ImageIcon(bug5049549.class.getResource(\"RS1.gif\"));\n+    private static ImageIcon SE = new ImageIcon(bug5049549.class.getResource(\"SE1.gif\"));\n+    private static ImageIcon PR = new ImageIcon(bug5049549.class.getResource(\"PR1.gif\"));\n","filename":"test\/jdk\/javax\/swing\/AbstractButton\/5049549\/bug5049549.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -54,1 +54,1 @@\n-            \/\/ Make sure sure that there wasn't a regression\n+            \/\/ Make sure that there wasn't a regression\n","filename":"test\/jdk\/javax\/swing\/JColorChooser\/Test4193384.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,0 +27,1 @@\n+ * @requires (os.family == \"mac\")\n@@ -95,1 +96,1 @@\n-}\n\\ No newline at end of file\n+}\n","filename":"test\/jdk\/javax\/swing\/JComboBox\/JComboBoxBorderTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -55,1 +55,1 @@\n- * @summary Verifies SwingSet3 EditorPaneDemo by navigating and and validating\n+ * @summary Verifies SwingSet3 EditorPaneDemo by navigating and validating\n","filename":"test\/jdk\/sanity\/client\/SwingSet\/src\/EditorPaneDemoTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n- *          positions, opening each tab and verifying the the tab gets selected.\n+ *          positions, opening each tab and verifying the tab gets selected.\n","filename":"test\/jdk\/sanity\/client\/SwingSet\/src\/TabbedPaneDemoTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n-TreeDemo.accessible_description=This demo shows shows a sample usage of a JTree component.\n+TreeDemo.accessible_description=This demo shows a sample usage of a JTree component.\n","filename":"test\/jdk\/sanity\/client\/lib\/SwingSet3\/src\/com\/sun\/swingset3\/demos\/tree\/resources\/TreeDemo.properties","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -289,1 +289,1 @@\n-     * Wait till the count of windows which meet the the search criteria becomes\n+     * Wait till the count of windows which meet the search criteria becomes\n@@ -303,1 +303,1 @@\n-     * Wait till the count of windows which meet the the search criteria becomes\n+     * Wait till the count of windows which meet the search criteria becomes\n","filename":"test\/jdk\/sanity\/client\/lib\/jemmy\/src\/org\/netbeans\/jemmy\/WindowWaiter.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -255,1 +255,1 @@\n-     * is is the first {@code java.awt.Component} that shows and that lies\n+     * is the first {@code java.awt.Component} that shows and that lies\n","filename":"test\/jdk\/sanity\/client\/lib\/jemmy\/src\/org\/netbeans\/jemmy\/operators\/ComponentOperator.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -69,1 +69,1 @@\n- * JTreeOperator.WaitAfterNodeExpandedTimeout - time to to sleep after node\n+ * JTreeOperator.WaitAfterNodeExpandedTimeout - time to sleep after node\n","filename":"test\/jdk\/sanity\/client\/lib\/jemmy\/src\/org\/netbeans\/jemmy\/operators\/JTreeOperator.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -369,1 +369,1 @@\n-     * Returns component visualizer. Visualizer is used from from\n+     * Returns component visualizer. Visualizer is used from\n@@ -381,1 +381,1 @@\n-     * Changes component visualizer. Visualizer is used from from\n+     * Changes component visualizer. Visualizer is used from\n@@ -1083,1 +1083,1 @@\n-     * Interface used to make component visible & ready to to make operations\n+     * Interface used to make component visible & ready to make operations\n","filename":"test\/jdk\/sanity\/client\/lib\/jemmy\/src\/org\/netbeans\/jemmy\/operators\/Operator.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -78,1 +78,1 @@\n-                    \" 0x%s. It should have have returned 0L\\n\",\n+                    \" 0x%s. It should have returned 0L\\n\",\n","filename":"test\/jdk\/sun\/java2d\/pipe\/hw\/RSLAPITest\/RSLAPITest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -66,5 +66,15 @@\n-        static void readRequest(Socket s) throws IOException {\n-            InputStream is = s.getInputStream();\n-            is.read();\n-            while (is.available() > 0)\n-                is.read();\n+        static final byte[] requestEnd = new byte[] {'\\r', '\\n', '\\r', '\\n' };\n+\n+        \/\/ Read until the end of a HTTP request\n+        static void readOneRequest(InputStream is) throws IOException {\n+            int requestEndCount = 0, r;\n+            while ((r = is.read()) != -1) {\n+                if (r == requestEnd[requestEndCount]) {\n+                    requestEndCount++;\n+                    if (requestEndCount == 4) {\n+                        break;\n+                    }\n+                } else {\n+                    requestEndCount = 0;\n+                }\n+            }\n@@ -77,1 +87,1 @@\n-                    readRequest(s);\n+                    readOneRequest(s.getInputStream());\n@@ -90,1 +100,4 @@\n-                    is.read();\n+                    int readResult = is.read();\n+                    if (readResult != -1) {\n+                        System.out.println(\"Unexpected byte received: \" + readResult);\n+                    }\n","filename":"test\/jdk\/sun\/net\/www\/http\/KeepAliveCache\/B8291637.java","additions":20,"deletions":7,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -50,1 +50,1 @@\n- * previously in JarSigner.java on on line 985\n+ * previously in JarSigner.java on line 985\n","filename":"test\/jdk\/sun\/security\/tools\/jarsigner\/DigestDontIgnoreCase.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -220,1 +220,1 @@\n-     * in in ManifestDigester.java:128<\/li>\n+     * in ManifestDigester.java:128<\/li>\n","filename":"test\/jdk\/sun\/security\/tools\/jarsigner\/FindHeaderEndVsManifestDigesterFindFirstSection.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -4,1 +4,1 @@\n-BadPackageCommentTest.java:12: error: no tag name after @\n+BadPackageCommentTest.java:12: error: no tag name after '@'\n@@ -7,1 +7,1 @@\n-BadPackageCommentTest.java:12: error: no tag name after @\n+BadPackageCommentTest.java:12: error: no tag name after '@'\n@@ -10,1 +10,1 @@\n-BadPackageCommentTest.java:12: error: no tag name after @\n+BadPackageCommentTest.java:12: error: no tag name after '@'\n","filename":"test\/langtools\/tools\/doclint\/BadPackageCommentTest.out","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n- *                                      RELEASE_18 RELEASE_19 RELEASE_20\n+ *                                      RELEASE_18 RELEASE_19 RELEASE_20 RELEASE_21\n","filename":"test\/langtools\/tools\/javac\/api\/TestGetSourceVersions.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -57,1 +57,2 @@\n-        TWENTY(\"20\", 64);\n+        TWENTY(\"20\", 64),\n+        TWENTY_ONE(\"21\", 65);\n","filename":"test\/langtools\/tools\/javac\/classfiles\/ClassVersionChecker.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+import java.util.regex.*;\n@@ -50,0 +51,2 @@\n+     * -checkformats\n+     *      validate MessageFormat patterns in resource bundles\n@@ -74,0 +77,1 @@\n+        boolean checkFormats = false;\n@@ -79,0 +83,1 @@\n+                checkFormats = true;\n@@ -84,0 +89,1 @@\n+                System.err.println(\"  -checkformats      validate MessageFormat patterns in resource bundles\");\n@@ -92,0 +98,2 @@\n+                else if (arg.equalsIgnoreCase(\"-checkformats\"))\n+                    checkFormats = true;\n@@ -109,0 +117,3 @@\n+        if (checkFormats)\n+            checkFormats(getMessageFormatBundles());\n+\n@@ -315,0 +326,103 @@\n+    void checkFormats(List<ResourceBundle> messageFormatBundles) {\n+        for (ResourceBundle bundle : messageFormatBundles) {\n+            for (String key : bundle.keySet()) {\n+                final String pattern = bundle.getString(key);\n+                try {\n+                    validateMessageFormatPattern(pattern);\n+                } catch (IllegalArgumentException e) {\n+                    error(\"Invalid MessageFormat pattern for resource \\\"\"\n+                        + key + \"\\\": \" + e.getMessage());\n+                }\n+            }\n+        }\n+    }\n+\n+    \/**\n+     * Do some basic validation of a {@link java.text.MessageFormat} format string.\n+     *\n+     * <p>\n+     * This checks for balanced braces and unnecessary quoting.\n+     * Code cut, pasted, &amp; simplified from {@link java.text.MessageFormat#applyPattern}.\n+     *\n+     * @throws IllegalArgumentException if {@code pattern} is invalid\n+     * @throws IllegalArgumentException if {@code pattern} is null\n+     *\/\n+    public static void validateMessageFormatPattern(String pattern) {\n+\n+        \/\/ Check for null\n+        if (pattern == null)\n+            throw new IllegalArgumentException(\"null pattern\");\n+\n+        \/\/ Replicate the quirky lexical analysis of MessageFormat's parsing algorithm\n+        final int SEG_RAW = 0;\n+        final int SEG_INDEX = 1;\n+        final int SEG_TYPE = 2;\n+        final int SEG_MODIFIER = 3;\n+        int part = SEG_RAW;\n+        int braceStack = 0;\n+        int quotedStartPos = -1;\n+        for (int i = 0; i < pattern.length(); i++) {\n+            final char ch = pattern.charAt(i);\n+            if (part == SEG_RAW) {\n+                if (ch == '\\'') {\n+                    if (i + 1 < pattern.length() && pattern.charAt(i + 1) == '\\'')\n+                        i++;\n+                    else if (quotedStartPos == -1)\n+                        quotedStartPos = i;\n+                    else {\n+                        validateMessageFormatQuoted(pattern.substring(quotedStartPos + 1, i));\n+                        quotedStartPos = -1;\n+                    }\n+                } else if (ch == '{' && quotedStartPos == -1)\n+                    part = SEG_INDEX;\n+                continue;\n+            }\n+            if (quotedStartPos != -1) {\n+                if (ch == '\\'') {\n+                    validateMessageFormatQuoted(pattern.substring(quotedStartPos + 1, i));\n+                    quotedStartPos = -1;\n+                }\n+                continue;\n+            }\n+            switch (ch) {\n+            case ',':\n+                if (part < SEG_MODIFIER)\n+                    part++;\n+                break;\n+            case '{':\n+                braceStack++;\n+                break;\n+            case '}':\n+                if (braceStack == 0)\n+                    part = SEG_RAW;\n+                else\n+                    braceStack--;\n+                break;\n+            case '\\'':\n+                quotedStartPos = i;\n+                break;\n+            default:\n+                break;\n+            }\n+        }\n+        if (part != SEG_RAW)\n+            throw new IllegalArgumentException(\"unmatched braces\");\n+        if (quotedStartPos != -1)\n+            throw new IllegalArgumentException(\"unmatched quote starting at offset \" + quotedStartPos);\n+    }\n+\n+    \/**\n+     * Validate the content of a quoted substring in a {@link java.text.MessageFormat} pattern.\n+     *\n+     * <p>\n+     * We expect this content to contain at least one special character. Otherwise,\n+     * it was probably meant to be something in single quotes but somebody forgot\n+     * to escape the single quotes by doulbing them; and even if intentional,\n+     * it's still bogus because the single quotes are just going to get discarded\n+     * and so they were unnecessary in the first place.\n+     *\/\n+    static void validateMessageFormatQuoted(String quoted) {\n+        if (quoted.matches(\"[^'{},]+\"))\n+            throw new IllegalArgumentException(\"unescaped single quotes around \\\"\" + quoted + \"\\\"\");\n+    }\n+\n@@ -408,0 +522,14 @@\n+    \/**\n+     * Get resource bundles containing MessageFormat strings.\n+     *\/\n+    List<ResourceBundle> getMessageFormatBundles() {\n+        Module jdk_compiler = ModuleLayer.boot().findModule(\"jdk.compiler\").get();\n+        List<ResourceBundle> results = new ArrayList<>();\n+        for (String name : new String[]{\"compiler\", \"launcher\"}) {\n+            ResourceBundle b =\n+                    ResourceBundle.getBundle(\"com.sun.tools.javac.resources.\" + name, jdk_compiler);\n+            results.add(b);\n+        }\n+        return results;\n+    }\n+\n","filename":"test\/langtools\/tools\/javac\/diags\/CheckResourceKeys.java","additions":128,"deletions":0,"binary":false,"changes":128,"status":"modified"},{"patch":"@@ -115,1 +115,1 @@\n-    @SupportedSourceVersion(RELEASE_20)\n+    @SupportedSourceVersion(RELEASE_21)\n@@ -126,1 +126,1 @@\n-    @SupportedSourceVersion(RELEASE_20)\n+    @SupportedSourceVersion(RELEASE_21)\n@@ -136,1 +136,1 @@\n-    @SupportedSourceVersion(RELEASE_20)\n+    @SupportedSourceVersion(RELEASE_21)\n@@ -146,1 +146,1 @@\n-    @SupportedSourceVersion(RELEASE_20)\n+    @SupportedSourceVersion(RELEASE_21)\n@@ -167,1 +167,1 @@\n-    @SupportedSourceVersion(RELEASE_20)\n+    @SupportedSourceVersion(RELEASE_21)\n@@ -186,1 +186,1 @@\n-    @SupportedSourceVersion(RELEASE_20)\n+    @SupportedSourceVersion(RELEASE_21)\n@@ -207,1 +207,1 @@\n-    @SupportedSourceVersion(RELEASE_20)\n+    @SupportedSourceVersion(RELEASE_21)\n@@ -228,1 +228,1 @@\n-    @SupportedSourceVersion(RELEASE_20)\n+    @SupportedSourceVersion(RELEASE_21)\n@@ -249,1 +249,1 @@\n-    @SupportedSourceVersion(RELEASE_20)\n+    @SupportedSourceVersion(RELEASE_21)\n","filename":"test\/langtools\/tools\/javac\/lib\/JavacTestingAbstractProcessor.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-- compiler.err.preview.feature.disabled.classfile: Bar.class, 20\n+- compiler.err.preview.feature.disabled.classfile: Bar.class, 21\n","filename":"test\/langtools\/tools\/javac\/preview\/classReaderTest\/Client.nopreview.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-- compiler.warn.preview.feature.use.classfile: Bar.class, 20\n+- compiler.warn.preview.feature.use.classfile: Bar.class, 21\n","filename":"test\/langtools\/tools\/javac\/preview\/classReaderTest\/Client.preview.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -74,1 +74,1 @@\n-               \"15\", \"16\", \"17\", \"18\", \"19\", \"20\");\n+               \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\");\n@@ -76,1 +76,1 @@\n-    public static final String LATEST_MAJOR_VERSION = \"64.0\";\n+    public static final String LATEST_MAJOR_VERSION = \"65.0\";\n@@ -79,9 +79,9 @@\n-        EIGHT(true,   \"52.0\",  \"8\", Versions::checksrc8),\n-        NINE(true,    \"53.0\",  \"9\", Versions::checksrc9),\n-        TEN(true,     \"54.0\", \"10\", Versions::checksrc10),\n-        ELEVEN(false, \"55.0\", \"11\", Versions::checksrc11),\n-        TWELVE(false, \"56.0\", \"12\", Versions::checksrc12),\n-        THIRTEEN(false, \"57.0\", \"13\", Versions::checksrc13),\n-        FOURTEEN(false, \"58.0\", \"14\", Versions::checksrc14),\n-        FIFTEEN(false,  \"59.0\", \"15\", Versions::checksrc15),\n-        SIXTEEN(false,  \"60.0\", \"16\", Versions::checksrc16),\n+        EIGHT(true,      \"52.0\",  \"8\", Versions::checksrc8),\n+        NINE(true,       \"53.0\",  \"9\", Versions::checksrc9),\n+        TEN(true,        \"54.0\", \"10\", Versions::checksrc10),\n+        ELEVEN(false,    \"55.0\", \"11\", Versions::checksrc11),\n+        TWELVE(false,    \"56.0\", \"12\", Versions::checksrc12),\n+        THIRTEEN(false,  \"57.0\", \"13\", Versions::checksrc13),\n+        FOURTEEN(false,  \"58.0\", \"14\", Versions::checksrc14),\n+        FIFTEEN(false,   \"59.0\", \"15\", Versions::checksrc15),\n+        SIXTEEN(false,   \"60.0\", \"16\", Versions::checksrc16),\n@@ -91,1 +91,2 @@\n-        TWENTY(false,  \"64.0\", \"20\", Versions::checksrc20);\n+        TWENTY(false,    \"64.0\", \"20\", Versions::checksrc20),\n+        TWENTY_ONE(false,\"65.0\", \"21\", Versions::checksrc20);\n","filename":"test\/langtools\/tools\/javac\/versions\/Versions.java","additions":13,"deletions":12,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -296,0 +296,4 @@\n+                hardenedStatusConfirmed = true;\n+                isHardened = false;\n+                System.out.println(\"Target JDK is adhoc linker-signed, but not hardened.\");\n+            } else if (line.indexOf(\"flags=0x2(adhoc)\") != -1 ) {\n","filename":"test\/lib\/jdk\/test\/lib\/Platform.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -0,0 +1,129 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package micro.org.openjdk.bench.java.io;\n+\n+import org.openjdk.jmh.annotations.*;\n+import org.openjdk.jmh.infra.Blackhole;\n+\n+import java.io.*;\n+import java.nio.file.Files;\n+import java.util.Random;\n+import java.util.concurrent.ThreadLocalRandom;\n+import java.util.concurrent.TimeUnit;\n+\n+@Fork(2)\n+@State(Scope.Thread)\n+@Warmup(iterations = 5, time = 1)\n+@BenchmarkMode(Mode.AverageTime)\n+@OutputTimeUnit(TimeUnit.MICROSECONDS)\n+@Measurement(iterations = 5, time = 2)\n+\n+public class RandomAccessFileBenchmark {\n+\n+    @Param({\"1\", \"5\"})\n+    private int kiloBytes;\n+    private int size;\n+    private File file;\n+\n+    private RandomAccessFile raf;\n+\n+    private short[] shorts;\n+    private int[] ints;\n+    private long[] longs;\n+\n+    @Setup(Level.Iteration)\n+    public void beforeRun() throws IOException {\n+        Random rnd = ThreadLocalRandom.current();\n+        size = kiloBytes << 10;\n+        var bytes = new byte[size];\n+        rnd.nextBytes(bytes);\n+        file = File.createTempFile(getClass().getName(), \".txt\");\n+        Files.write(file.toPath(), bytes);\n+        shorts = new short[size];\n+        for (int i = 0; i < size \/ Short.BYTES; i++) {\n+            shorts[i] = (short) rnd.nextInt();\n+        }\n+        ints = rnd.ints(size \/ Integer.BYTES).toArray();\n+        longs = rnd.longs(size \/ Long.BYTES).toArray();\n+        raf = new RandomAccessFile(file, \"rw\");\n+        \/\/ Make it more likely file content is directly available\n+        for (int i = 0; i < size \/ Integer.BYTES; i++) {\n+            raf.readInt();\n+        }\n+    }\n+\n+    @TearDown(Level.Iteration)\n+    public void afterRun() throws IOException {\n+        raf.close();\n+        file.delete();\n+    }\n+\n+    @Benchmark\n+    public void readShort(Blackhole bh) throws IOException {\n+        raf.seek(0);\n+        for (int i = 0; i < size \/ Short.BYTES; i++) {\n+            bh.consume(raf.readShort());\n+        }\n+    }\n+\n+    @Benchmark\n+    public void readInt(Blackhole bh) throws IOException {\n+        raf.seek(0);\n+        for (int i = 0; i < size \/ Integer.BYTES; i++) {\n+            bh.consume(raf.readInt());\n+        }\n+    }\n+\n+    @Benchmark\n+    public void readLong(Blackhole bh) throws IOException {\n+        raf.seek(0);\n+        for (int i = 0; i < size \/ Long.BYTES; i++) {\n+            bh.consume(raf.readLong());\n+        }\n+    }\n+\n+    @Benchmark\n+    public void writeShort() throws IOException {\n+        raf.seek(0);\n+        for (int i = 0; i < size \/ Short.BYTES; i++) {\n+            raf.writeShort(shorts[i]);\n+        }\n+    }\n+\n+    @Benchmark\n+    public void writeInt() throws IOException {\n+        raf.seek(0);\n+        for (int i = 0; i < size \/ Integer.BYTES; i++) {\n+            raf.writeInt(ints[i]);\n+        }\n+    }\n+\n+    @Benchmark\n+    public void writeLong() throws IOException {\n+        raf.seek(0);\n+        for (int i = 0; i < size \/ Long.BYTES; i++) {\n+            raf.writeLong(longs[i]);\n+        }\n+    }\n+\n+}\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/io\/RandomAccessFileBenchmark.java","additions":129,"deletions":0,"binary":false,"changes":129,"status":"added"},{"patch":"@@ -0,0 +1,120 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package org.openjdk.bench.javax.crypto.full;\n+\n+import org.openjdk.jmh.annotations.Benchmark;\n+import org.openjdk.jmh.annotations.Param;\n+import org.openjdk.jmh.annotations.Setup;\n+\n+import javax.crypto.Cipher;\n+import javax.crypto.CipherInputStream;\n+import javax.crypto.spec.GCMParameterSpec;\n+import javax.crypto.spec.SecretKeySpec;\n+import java.io.ByteArrayInputStream;\n+import java.io.ByteArrayOutputStream;\n+import java.io.InputStream;\n+\n+\/**\n+ * This performance test runs AES\/GCM encryption and decryption using CipherInputStream.\n+ *\n+ * This test rotates the IV and creates a new GCMParameterSpec for each encrypt\n+ * benchmark operation\n+ *\/\n+\n+public class AESGCMCipherInputStream extends CryptoBase {\n+\n+    @Param({\"128\"})\n+    private int keyLength;\n+\n+    @Param({\"16384\", \"1048576\"})\n+    private int dataSize;\n+\n+    byte[] encryptedData;\n+    byte[] in;\n+    ByteArrayOutputStream out;\n+    private Cipher encryptCipher;\n+    private Cipher decryptCipher;\n+    SecretKeySpec ks;\n+    GCMParameterSpec gcm_spec;\n+    byte[] iv;\n+\n+    private static final int IV_BUFFER_SIZE = 32;\n+    private static final int IV_MODULO = IV_BUFFER_SIZE - 16;\n+    int iv_index = 0;\n+\n+    private int next_iv_index() {\n+        int r = iv_index;\n+        iv_index = (iv_index + 1) % IV_MODULO;\n+        return r;\n+    }\n+\n+    @Setup\n+    public void setup() throws Exception {\n+        setupProvider();\n+\n+        \/\/ Setup key material\n+        byte[] keystring = fillSecureRandom(new byte[keyLength \/ 8]);\n+        ks = new SecretKeySpec(keystring, \"AES\");\n+        iv = fillSecureRandom(new byte[IV_BUFFER_SIZE]);\n+        gcm_spec = new GCMParameterSpec(96, iv, next_iv_index(), 16);\n+\n+        \/\/ Setup Cipher classes\n+        encryptCipher = makeCipher(prov, \"AES\/GCM\/NoPadding\");\n+        encryptCipher.init(Cipher.ENCRYPT_MODE, ks, gcm_spec);\n+        decryptCipher = makeCipher(prov, \"AES\/GCM\/NoPadding\");\n+        decryptCipher.init(Cipher.DECRYPT_MODE, ks,\n+            encryptCipher.getParameters().\n+                getParameterSpec(GCMParameterSpec.class));\n+\n+        \/\/ Setup input\/output buffers\n+        in = fillRandom(new byte[dataSize]);\n+        encryptedData = new byte[encryptCipher.getOutputSize(in.length)];\n+        out = new ByteArrayOutputStream(encryptedData.length);\n+        encryptCipher.doFinal(in, 0, in.length, encryptedData, 0);\n+    }\n+\n+    @Benchmark\n+    public byte[] encrypt() throws Exception {\n+        out.reset();\n+        gcm_spec = new GCMParameterSpec(96, iv, next_iv_index(), 16);\n+        encryptCipher.init(Cipher.ENCRYPT_MODE, ks, gcm_spec);\n+        ByteArrayInputStream fin = new ByteArrayInputStream(in);\n+        InputStream cin = new CipherInputStream(fin, encryptCipher);\n+\n+        cin.transferTo(out);\n+        return out.toByteArray();\n+    }\n+\n+    @Benchmark\n+    public byte[] decrypt() throws Exception {\n+        out.reset();\n+        decryptCipher.init(Cipher.DECRYPT_MODE, ks,\n+                encryptCipher.getParameters().\n+                        getParameterSpec(GCMParameterSpec.class));\n+        ByteArrayInputStream fin = new ByteArrayInputStream(encryptedData);\n+        InputStream cin = new CipherInputStream(fin, decryptCipher);\n+\n+        cin.transferTo(out);\n+        return out.toByteArray();\n+    }\n+}\n","filename":"test\/micro\/org\/openjdk\/bench\/javax\/crypto\/full\/AESGCMCipherInputStream.java","additions":120,"deletions":0,"binary":false,"changes":120,"status":"added"},{"patch":"@@ -0,0 +1,122 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package org.openjdk.bench.javax.crypto.full;\n+\n+import org.openjdk.jmh.annotations.Benchmark;\n+import org.openjdk.jmh.annotations.Param;\n+import org.openjdk.jmh.annotations.Setup;\n+\n+import javax.crypto.Cipher;\n+import javax.crypto.CipherOutputStream;\n+import javax.crypto.spec.GCMParameterSpec;\n+import javax.crypto.spec.SecretKeySpec;\n+import java.io.ByteArrayOutputStream;\n+import java.io.OutputStream;\n+\n+\/**\n+ * This performance test runs AES\/GCM encryption and decryption using CipherOutputStream.\n+ *\n+ * This test rotates the IV and creates a new GCMParameterSpec for each encrypt\n+ * benchmark operation\n+ *\/\n+\n+public class AESGCMCipherOutputStream extends CryptoBase {\n+\n+    @Param({\"128\"})\n+    private int keyLength;\n+\n+    @Param({\"16384\", \"1048576\"})\n+    private int dataSize;\n+\n+    byte[] encryptedData;\n+    byte[] in;\n+    ByteArrayOutputStream out;\n+    private Cipher encryptCipher;\n+    private Cipher decryptCipher;\n+    SecretKeySpec ks;\n+    GCMParameterSpec gcm_spec;\n+    byte[] iv;\n+\n+    private static final int IV_BUFFER_SIZE = 32;\n+    private static final int IV_MODULO = IV_BUFFER_SIZE - 16;\n+    int iv_index = 0;\n+\n+    private int next_iv_index() {\n+        int r = iv_index;\n+        iv_index = (iv_index + 1) % IV_MODULO;\n+        return r;\n+    }\n+\n+    @Setup\n+    public void setup() throws Exception {\n+        setupProvider();\n+\n+        \/\/ Setup key material\n+        byte[] keystring = fillSecureRandom(new byte[keyLength \/ 8]);\n+        ks = new SecretKeySpec(keystring, \"AES\");\n+        iv = fillSecureRandom(new byte[IV_BUFFER_SIZE]);\n+        gcm_spec = new GCMParameterSpec(96, iv, next_iv_index(), 16);\n+\n+        \/\/ Setup Cipher classes\n+        encryptCipher = makeCipher(prov, \"AES\/GCM\/NoPadding\");\n+        encryptCipher.init(Cipher.ENCRYPT_MODE, ks, gcm_spec);\n+        decryptCipher = makeCipher(prov, \"AES\/GCM\/NoPadding\");\n+        decryptCipher.init(Cipher.DECRYPT_MODE, ks,\n+            encryptCipher.getParameters().\n+                getParameterSpec(GCMParameterSpec.class));\n+\n+        \/\/ Setup input\/output buffers\n+        in = fillRandom(new byte[dataSize]);\n+        encryptedData = new byte[encryptCipher.getOutputSize(in.length)];\n+        out = new ByteArrayOutputStream(encryptedData.length);\n+        encryptCipher.doFinal(in, 0, in.length, encryptedData, 0);\n+    }\n+\n+    @Benchmark\n+    public byte[] encrypt() throws Exception {\n+        out.reset();\n+        gcm_spec = new GCMParameterSpec(96, iv, next_iv_index(), 16);\n+        encryptCipher.init(Cipher.ENCRYPT_MODE, ks, gcm_spec);\n+\n+        OutputStream cout = new CipherOutputStream(out, encryptCipher);\n+        for (int i = 0; i < in.length; i += 512) {\n+            cout.write(in, i, Math.min(512, in.length - i));\n+        }\n+        cout.close();\n+        return out.toByteArray();\n+    }\n+\n+    @Benchmark\n+    public byte[] decrypt() throws Exception {\n+        out.reset();\n+        decryptCipher.init(Cipher.DECRYPT_MODE, ks,\n+                encryptCipher.getParameters().\n+                        getParameterSpec(GCMParameterSpec.class));\n+        OutputStream cout = new CipherOutputStream(out, decryptCipher);\n+        for (int i = 0; i < encryptedData.length; i += 512) {\n+            cout.write(encryptedData, i, Math.min(512, encryptedData.length - i));\n+        }\n+        cout.close();\n+        return out.toByteArray();\n+    }\n+}\n","filename":"test\/micro\/org\/openjdk\/bench\/javax\/crypto\/full\/AESGCMCipherOutputStream.java","additions":122,"deletions":0,"binary":false,"changes":122,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,2 +47,2 @@\n-    interface AnInterface {\n-        public int getInt();\n+    interface FirstInterface {\n+        public int getIntFirst();\n@@ -52,1 +52,1 @@\n-        public int get1();\n+        public int getIntSecond();\n@@ -55,10 +55,2 @@\n-    interface OnlyHasOneImplInterface {\n-        public int getLong();\n-    }\n-\n-    interface AloneInterface {\n-        public int getNumber();\n-    }\n-\n-    class SingleImplementor implements OnlyHasOneImplInterface {\n-        public int getLong() {\n+    class FirstClass implements FirstInterface, SecondInterface {\n+        public int getIntFirst() {\n@@ -67,4 +59,0 @@\n-    }\n-\n-    class Extender1 extends SingleImplementor {\n-    }\n@@ -72,2 +60,1 @@\n-    class FirstClass implements AnInterface {\n-        public int getInt() {\n+        public int getIntSecond() {\n@@ -78,2 +65,2 @@\n-    class SecondClass implements AnInterface {\n-        public int getInt() {\n+    class SecondClass implements FirstInterface, SecondInterface {\n+        public int getIntFirst() {\n@@ -82,1 +69,0 @@\n-    }\n@@ -84,3 +70,2 @@\n-    class ThirdClass implements AnInterface {\n-        public int getInt() {\n-            return -3;\n+        public int getIntSecond() {\n+            return 1;\n@@ -90,3 +75,3 @@\n-    class FourthClass implements AnInterface {\n-        public int getInt() {\n-            return -4;\n+    class ThirdClass implements FirstInterface, SecondInterface {\n+        public int getIntFirst() {\n+            return -3;\n@@ -94,1 +79,0 @@\n-    }\n@@ -96,3 +80,2 @@\n-    class FifthClass implements AnInterface {\n-        public int getInt() {\n-            return -5;\n+        public int getIntSecond() {\n+            return 1;\n@@ -102,3 +85,3 @@\n-    class MultiClass1 implements AnInterface, SecondInterface {\n-        public int get1() {\n-            return 1;\n+    class FourthClass implements FirstInterface, SecondInterface {\n+        public int getIntFirst() {\n+            return -4;\n@@ -107,2 +90,2 @@\n-        public int getInt() {\n-            return 2;\n+        public int getIntSecond() {\n+            return 1;\n@@ -112,7 +95,3 @@\n-    class MultiClass2 implements AnInterface, SecondInterface {\n-        public int get1() {\n-            return -1;\n-        }\n-\n-        public int getInt() {\n-            return -2;\n+    class FifthClass implements FirstInterface, SecondInterface {\n+        public int getIntFirst() {\n+            return -5;\n@@ -120,1 +99,0 @@\n-    }\n@@ -122,3 +100,2 @@\n-    class Aloner implements AloneInterface {\n-        public int getNumber() {\n-            return 7;\n+        public int getIntSecond() {\n+            return 1;\n@@ -128,17 +105,2 @@\n-    public Object dummy1;\n-\n-    public Object dummy2;\n-\n-    public Object dummy3;\n-\n-    public AnInterface multi1a, multi2a;\n-\n-    public SecondInterface multi1b, multi2b;\n-\n-    public Object multic, multic2;\n-\n-    public AnInterface[] as = new AnInterface[5];\n-\n-    public AnInterface multi;\n-\n-    public OnlyHasOneImplInterface single1;\n+    final int asLength = 5;\n+    public FirstInterface[] as = new FirstInterface[asLength];\n@@ -146,5 +108,0 @@\n-    public OnlyHasOneImplInterface single2;\n-\n-    public AloneInterface alone;\n-\n-    int count;\n@@ -154,3 +111,0 @@\n-        dummy1 = new FirstClass();\n-        dummy2 = new SecondClass();\n-        dummy3 = new ThirdClass();\n@@ -162,27 +116,0 @@\n-        MultiClass1 mc1 = new MultiClass1();\n-        multi1a = mc1;\n-        multi1b = mc1;\n-        multic = mc1;\n-        MultiClass2 mc2 = new MultiClass2();\n-        multi2a = mc2;\n-        multi2b = mc2;\n-        multic2 = mc2;\n-        single1 = new SingleImplementor();\n-        single2 = new Extender1();\n-        alone = new Aloner();\n-    }\n-\n-    private void swapMultiParts() {\n-        AnInterface tmpa = multi1a;\n-        SecondInterface tmpb = multi1b;\n-        multi1a = multi2a;\n-        multi2a = tmpa;\n-        multi1b = multi2b;\n-        multi2b = tmpb;\n-    }\n-\n-    @SuppressWarnings(\"unused\")\n-    private void swapMulti() {\n-        Object tmp = multic;\n-        multic = multic2;\n-        multic2 = tmp;\n@@ -192,2 +119,2 @@\n-     * Tests a call where there are multiple implementors but only one of the implementors is every used here so the\n-     * call-site is monomorphic\n+     * Tests a call where there are multiple implementors but only one of the\n+     * implementors is every used here so the call-site is monomorphic\n@@ -197,7 +124,1 @@\n-        return as[0].getInt();\n-    }\n-\n-    \/** Tests a interface call that only has one single implementation *\/\n-    @Benchmark\n-    public int testSingle() {\n-        return alone.getNumber();\n+        return as[0].getIntFirst();\n@@ -206,15 +127,1 @@\n-    \/**\n-     * Tests a call where there is a single implementation but multiple classes that inherit that implementation and both\n-     * these implementors are used.\n-     *\/\n-    @Benchmark\n-    public int testSingle2() {\n-        OnlyHasOneImplInterface oi;\n-        if ((count & 1) == 0) {\n-            oi = single1;\n-        } else {\n-            oi = single2;\n-        }\n-        count++;\n-        return oi.getLong();\n-    }\n+    int l = 0;\n@@ -223,2 +130,2 @@\n-     * Tests calling two different interface methods in two different interfaces on the same receiver. Make sure to switch\n-     * between two different types of receivers to achieve polymorhpism\n+     * Interface call address computation within loop but the receiver preexists\n+     * the loop and the ac can be moved outside of the loop\n@@ -227,9 +134,4 @@\n-    public void testCall2Poly2(Blackhole bh) {\n-        bh.consume(multi1a.getInt());\n-        bh.consume(multi1b.get1());\n-        swapMultiParts();\n-    }\n-\n-    @Benchmark\n-    public int testCallMulti1Poly2NoSwap() {\n-        return multi1a.getInt();\n+    public int test1stInt2Types() {\n+        FirstInterface ai = as[l];\n+        l = 1 - l;\n+        return ai.getIntFirst();\n@@ -238,4 +140,0 @@\n-    \/**\n-     * This test goes together with Multi2 below It tests if a class implements multiple interfaces if the different\n-     * interfaces take different amounts of time (They do for hotspot)\n-     *\/\n@@ -243,3 +141,4 @@\n-    public int testCallMulti1Poly2() {\n-        swapMultiParts();\n-        return multi1a.getInt();\n+    public int test1stInt3Types() {\n+        FirstInterface ai = as[l];\n+        l = ++ l % 3;\n+        return ai.getIntFirst();\n@@ -248,4 +147,0 @@\n-    \/**\n-     * This test goes together with Multi2 below It tests if a class implements multiple interfaces if the different\n-     * interfaces take different amounts of time (They do for hotspot)\n-     *\/\n@@ -253,3 +148,4 @@\n-    public int testCallMulti2Poly2() {\n-        swapMultiParts();\n-        return multi1b.get1();\n+    public int test1stInt5Types() {\n+        FirstInterface ai = as[l];\n+        l = ++ l % asLength;\n+        return ai.getIntFirst();\n@@ -258,1 +154,0 @@\n-    \/** Interface call with three different receivers *\/\n@@ -260,4 +155,4 @@\n-    public void testCallPoly3(Blackhole bh) {\n-        for (int kk = 0; kk < 3; kk++) {\n-            bh.consume(as[kk].getInt());\n-        }\n+    public int test2ndInt2Types() {\n+        SecondInterface ai = (SecondInterface) as[l];\n+        l = 1 - l;\n+        return ai.getIntSecond();\n@@ -266,1 +161,0 @@\n-    \/** Interface call with five different receivers. *\/\n@@ -268,4 +162,4 @@\n-    public void testCallPoly5(Blackhole bh) {\n-        for (int kk = 0; kk < 5; kk++) {\n-            bh.consume(as[kk].getInt());\n-        }\n+    public int test2ndInt3Types() {\n+        SecondInterface ai = (SecondInterface) as[l];\n+        l = ++ l % 3;\n+        return ai.getIntSecond();\n@@ -274,6 +168,0 @@\n-    int l;\n-\n-    \/**\n-     * Interface call address computation within loop but the receiver preexists the loop and the ac can be moved outside\n-     * of the loop\n-     *\/\n@@ -281,4 +169,4 @@\n-    public int testAC1() {\n-        AnInterface ai = as[l];\n-        l = 1 - l;\n-        return ai.getInt();\n+    public int test2ndInt5Types() {\n+        SecondInterface ai = (SecondInterface) as[l];\n+        l = ++ l % asLength;\n+        return ai.getIntSecond();\n@@ -287,6 +175,0 @@\n-    \/** Tests an interface cast followed by an interface call. *\/\n-    @Benchmark\n-    public int testInterfaceCastAndCall() throws Exception {\n-        return ((AnInterface) dummy1).getInt() + ((AnInterface) dummy2).getInt()\n-                + ((AnInterface) dummy3).getInt();\n-    }\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/InterfaceCalls.java","additions":58,"deletions":176,"binary":false,"changes":234,"status":"modified"}]}