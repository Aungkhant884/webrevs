{"files":[{"patch":"@@ -280,3 +280,1 @@\n-  if (periodMillis > 0) {\n-    JfrEventSetting::set_enabled(typed_event_id, true); \/\/ ensure sampling event is enabled\n-  }\n+  JfrEventSetting::set_enabled(typed_event_id, periodMillis > 0);\n","filename":"src\/hotspot\/share\/jfr\/jni\/jfrJniMethod.cpp","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -302,2 +302,4 @@\n-    for (uint i = 0; i < _added_java; ++i) {\n-      _events[i].commit();\n+    if (EventExecutionSample::is_enabled()) {\n+      for (uint i = 0; i < _added_java; ++i) {\n+        _events[i].commit();\n+      }\n@@ -308,2 +310,4 @@\n-    for (uint i = 0; i < _added_native; ++i) {\n-      _events_native[i].commit();\n+    if (EventNativeMethodSample::is_enabled()) {\n+      for (uint i = 0; i < _added_native; ++i) {\n+        _events_native[i].commit();\n+      }\n","filename":"src\/hotspot\/share\/jfr\/periodic\/sampling\/jfrThreadSampler.cpp","additions":8,"deletions":4,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -66,1 +66,0 @@\n-  bool _started;\n@@ -73,1 +72,1 @@\n-                                          _started(false), _untimed(timing == UNTIMED),\n+                                          _untimed(timing == UNTIMED),\n@@ -79,5 +78,2 @@\n-    if (T::is_enabled() && JfrThreadLocal::is_included(Thread::current())) {\n-      _started = true;\n-      if (TIMED == timing && !T::isInstant) {\n-        set_starttime(JfrTicks::now());\n-      }\n+    if (!T::isInstant && !_untimed && is_enabled()) {\n+      set_starttime(JfrTicks::now());\n@@ -149,2 +145,2 @@\n-  bool is_started() const {\n-    return _started;\n+  bool is_started() {\n+    return is_instant() || _start_time != 0 || _untimed;\n@@ -154,1 +150,1 @@\n-    if (!_started) {\n+    if (!is_enabled()) {\n@@ -160,3 +156,0 @@\n-    if (_evaluated) {\n-      return _should_commit;\n-    }\n@@ -170,1 +163,5 @@\n-    return _started && (_evaluated ? _should_commit : evaluate());\n+    return _evaluated ? _should_commit : is_enabled_for_thread() && evaluate();\n+  }\n+\n+  static bool is_enabled_for_thread() {\n+    return is_enabled() && JfrThreadLocal::is_included(Thread::current());\n@@ -174,1 +171,0 @@\n-    assert(_started, \"invariant\");\n","filename":"src\/hotspot\/share\/jfr\/recorder\/service\/jfrEvent.hpp","additions":11,"deletions":15,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -751,1 +751,0 @@\n-jdk\/jfr\/event\/runtime\/TestActiveSettingEvent.java               8287832 generic-all\n","filename":"test\/jdk\/ProblemList.txt","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"}]}