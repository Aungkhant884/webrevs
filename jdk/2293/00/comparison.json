{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -66,2 +66,2 @@\n-            int minHeapFreeRatio = new Integer((new DynamicVMOption(\"MinHeapFreeRatio\")).getValue());\n-            int maxHeapFreeRatio = new Integer((new DynamicVMOption(\"MaxHeapFreeRatio\")).getValue());\n+            int minHeapFreeRatio = Integer.valueOf((new DynamicVMOption(\"MinHeapFreeRatio\")).getValue());\n+            int maxHeapFreeRatio = Integer.valueOf((new DynamicVMOption(\"MaxHeapFreeRatio\")).getValue());\n","filename":"test\/hotspot\/jtreg\/runtime\/CommandLine\/OptionsValidation\/TestJcmdOutput.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -79,1 +79,1 @@\n-        this.min = new Double(min);\n+        this.min = Double.valueOf(min);\n@@ -99,1 +99,1 @@\n-        this.max = new Double(max);\n+        this.max = Double.valueOf(max);\n","filename":"test\/hotspot\/jtreg\/runtime\/CommandLine\/OptionsValidation\/common\/optionsvalidation\/DoubleJVMOption.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,0 +42,1 @@\n+import java.util.spi.ToolProvider;\n@@ -50,0 +51,3 @@\n+    private static final ToolProvider JAR = ToolProvider.findFirst(\"jar\")\n+        .orElseThrow(() -> new RuntimeException(\"ToolProvider for jar not found\"));\n+\n@@ -88,1 +92,0 @@\n-        sun.tools.jar.Main jarTool = new sun.tools.jar.Main(System.out, System.err, \"jar\");\n@@ -90,3 +93,2 @@\n-        if (!jarTool.run(new String[]\n-            {\"-cf\", helloJar, \"-C\", destDir.toString(), \"Hello.class\"})) {\n-            throw new RuntimeException(\"Could not write the Hello jar file\");\n+        if (JAR.run(System.out, System.err, \"-cf\", helloJar, \"-C\", destDir.toString(), \"Hello.class\") != 0) {\n+            throw new RuntimeException(\"jar operation for hello.jar failed\");\n","filename":"test\/hotspot\/jtreg\/runtime\/LoadClass\/LongBCP.java","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -92,1 +92,1 @@\n-      Integer i = new Integer(args[0]);\n+      Integer i = Integer.parseInt(args[0]);\n","filename":"test\/hotspot\/jtreg\/runtime\/LoadClass\/TriggerResize.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,1 +53,0 @@\n-        \"-XX:+FlightRecorder\",\n@@ -125,1 +124,1 @@\n-        if (!WhiteBox.getWhiteBox().isJFRIncludedInVmBuild() && testEntry.equals(\"-XX:+FlightRecorder\"))\n+        if (!WhiteBox.getWhiteBox().isJFRIncludedInVmBuild())\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/CommandLineFlagCombo.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -52,1 +52,0 @@\n-            \"-XX:+FlightRecorder\",\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/TestWithProfiler.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,1 +48,1 @@\n-        non_archived_field_2 = new Integer(1);\n+        non_archived_field_2 = Integer.valueOf(1);\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/cacheObject\/MirrorWithReferenceFieldsApp.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,1 +34,1 @@\n-import sun.tools.jar.Main;\n+import java.util.spi.ToolProvider;\n@@ -41,0 +41,3 @@\n+    private static final ToolProvider JAR = ToolProvider.findFirst(\"jar\")\n+        .orElseThrow(() -> new RuntimeException(\"ToolProvider for jar not found\"));\n+\n@@ -76,2 +79,1 @@\n-        Main jarTool = new Main(System.out, System.err, \"jar\");\n-        if (!jarTool.run(args.toArray(new String[1]))) {\n+        if (JAR.run(System.out, System.err, args.toArray(new String[1])) != 0) {\n","filename":"test\/hotspot\/jtreg\/runtime\/modules\/PatchModule\/BasicJarBuilder.java","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,0 @@\n- *          jdk.jartool\/sun.tools.jar\n@@ -44,0 +43,1 @@\n+import java.util.spi.ToolProvider;\n@@ -49,0 +49,3 @@\n+    private static final ToolProvider JAR = ToolProvider.findFirst(\"jar\")\n+        .orElseThrow(() -> new RuntimeException(\"ToolProvider for jar not found\"));\n+\n@@ -70,0 +73,1 @@\n+\n@@ -88,2 +92,1 @@\n-        sun.tools.jar.Main jarTool = new sun.tools.jar.Main(System.out, System.err, \"jar\");\n-        if (!jarTool.run(new String[] { \"-cmf\", \"MANIFEST.MF\", \"redefineagent.jar\", \"RedefineRecord.class\" })) {\n+        if (JAR.run(System.out, System.err, \"-cmf\", \"MANIFEST.MF\", \"redefineagent.jar\", \"RedefineRecord.class\") != 0) {\n@@ -93,0 +96,1 @@\n+\n","filename":"test\/hotspot\/jtreg\/runtime\/records\/RedefineRecord.java","additions":8,"deletions":4,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,1 +35,1 @@\n-        Object[] objArray = {new Integer(Integer.MAX_VALUE)};\n+        Object[] objArray = {Integer.valueOf(Integer.MAX_VALUE)};\n","filename":"test\/hotspot\/jtreg\/runtime\/reflect\/ArrayGetIntException.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -32,1 +32,0 @@\n- *          jdk.jartool\/sun.tools.jar\n@@ -44,1 +43,0 @@\n-import java.security.ProtectionDomain;\n@@ -46,0 +44,2 @@\n+import java.security.ProtectionDomain;\n+import java.util.spi.ToolProvider;\n@@ -51,0 +51,3 @@\n+    private static final ToolProvider JAR = ToolProvider.findFirst(\"jar\")\n+        .orElseThrow(() -> new RuntimeException(\"ToolProvider for jar not found\"));\n+\n@@ -102,2 +105,2 @@\n-        sun.tools.jar.Main jarTool = new sun.tools.jar.Main(System.out, System.err, \"jar\");\n-        if (!jarTool.run(new String[] { \"-cmf\", \"MANIFEST.MF\", \"redefineagent.jar\", \"RedefinePermittedSubclass.class\" })) {\n+        if (JAR.run(System.out, System.err, \"-cmf\",  \"MANIFEST.MF\", \"redefineagent.jar\",\n+                    \"RedefinePermittedSubclass.class\") != 0) {\n","filename":"test\/hotspot\/jtreg\/runtime\/sealedClasses\/RedefinePermittedSubclass.java","additions":7,"deletions":4,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,0 @@\n- *          jdk.jartool\/sun.tools.jar\n@@ -43,1 +42,0 @@\n-import java.security.ProtectionDomain;\n@@ -45,0 +43,2 @@\n+import java.security.ProtectionDomain;\n+import java.util.spi.ToolProvider;\n@@ -50,0 +50,3 @@\n+    private static final ToolProvider JAR = ToolProvider.findFirst(\"jar\")\n+        .orElseThrow(() -> new RuntimeException(\"ToolProvider for jar not found\"));\n+\n@@ -93,2 +96,1 @@\n-        sun.tools.jar.Main jarTool = new sun.tools.jar.Main(System.out, System.err, \"jar\");\n-        if (!jarTool.run(new String[] { \"-cmf\", \"MANIFEST.MF\", \"redefineagent.jar\", \"RedefineSealedClass.class\" })) {\n+        if (JAR.run(System.out, System.err, \"-cmf\", \"MANIFEST.MF\", \"redefineagent.jar\", \"RedefineSealedClass.class\") != 0) {\n","filename":"test\/hotspot\/jtreg\/runtime\/sealedClasses\/RedefineSealedClass.java","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -74,4 +74,4 @@\n-        assertEquals(c.bbb(new Integer(1)), 22);\n-        assertEquals(c.bbb(new Float(1.1)), 33);\n-        assertEquals(c.bbb(new Long(1L)), 44);\n-        assertEquals(c.bbb(new Double(0.01)), 55);\n+        assertEquals(c.bbb(Integer.valueOf(1)), 22);\n+        assertEquals(c.bbb(Float.valueOf(1.1F)), 33);\n+        assertEquals(c.bbb(Long.valueOf(1L)), 44);\n+        assertEquals(c.bbb(Double.valueOf(0.01)), 55);\n","filename":"test\/hotspot\/jtreg\/runtime\/verifier\/defaultMethods\/DefaultMethodRegressionTests.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -101,1 +101,1 @@\n-            i = new Integer(1);\n+            i = Integer.valueOf(1);\n@@ -103,1 +103,1 @@\n-            i = new Integer(i.intValue() + 1);\n+            i = Integer.valueOf(i.intValue() + 1);\n","filename":"test\/hotspot\/jtreg\/testlibrary\/jvmti\/TransformerAgent.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -176,1 +176,1 @@\n-                    offsets.add(new Integer(i));\n+                    offsets.add(i);\n","filename":"test\/lib\/jdk\/test\/lib\/classloader\/GeneratingClassLoader.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}