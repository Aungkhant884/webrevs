{"files":[{"patch":"@@ -52,0 +52,2 @@\n+#define DEFAULT_CACHE_LINE_SIZE 64\n+\n","filename":"src\/hotspot\/cpu\/riscv\/globalDefinitions_riscv.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -90,0 +90,3 @@\n+  product(intx, CacheLineSize, DEFAULT_CACHE_LINE_SIZE,                          \\\n+          \"Size of a CPU cache line\")                                            \\\n+          range(1, max_jint)                                                     \\\n","filename":"src\/hotspot\/cpu\/riscv\/globals_riscv.hpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -4114,1 +4114,1 @@\n-\/\/ you want to use it elsewhere, note that cnt must be >= cache_line_size.\n+\/\/ you want to use it elsewhere, note that cnt must be >= CacheLineSize.\n@@ -4120,1 +4120,1 @@\n-  andi(t0, t0, VM_Version::cache_line_size() - 1);\n+  andi(t0, t0, CacheLineSize - 1);\n@@ -4131,1 +4131,1 @@\n-  for (int i = -VM_Version::cache_line_size() + 8; i < 0; i += 8) {\n+  for (int i = -CacheLineSize + 8; i < 0; i += 8) {\n@@ -4136,1 +4136,1 @@\n-  li(t0, VM_Version::cache_line_size() >> 3);\n+  li(t0, CacheLineSize >> 3);\n@@ -4140,1 +4140,1 @@\n-  add(base, base, VM_Version::cache_line_size());\n+  add(base, base, CacheLineSize);\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -681,1 +681,1 @@\n-      \/\/ Ensure count >= cache_line_size so that it still deserves a cbo.zero\n+      \/\/ Ensure count >= CacheLineSize so that it still deserves a cbo.zero\n@@ -684,1 +684,1 @@\n-      int low_limit = MAX2(VM_Version::cache_line_size(), (int)BlockZeroingLowLimit);\n+      int low_limit = MAX2(CacheLineSize, BlockZeroingLowLimit);\n","filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -34,1 +34,0 @@\n-uint32_t VM_Version::_cache_line_size;\n","filename":"src\/hotspot\/cpu\/riscv\/vm_version_riscv.cpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -43,1 +43,0 @@\n-  static uint32_t _cache_line_size;\n@@ -70,2 +69,0 @@\n-\n-  static int cache_line_size() { return _cache_line_size; }\n","filename":"src\/hotspot\/cpu\/riscv\/vm_version_riscv.hpp","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -116,2 +116,0 @@\n-\n-  _cache_line_size = 64;\n","filename":"src\/hotspot\/os_cpu\/linux_riscv\/vm_version_linux_riscv.cpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"}]}