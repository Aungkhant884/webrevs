{"files":[{"patch":"@@ -69,0 +69,3 @@\n+     * <p>\n+     * It's possible to index into a nested field by using {@code \".\"} (for\n+     * instance {@code \"thread.group.parent.name}\").\n@@ -85,1 +88,6 @@\n-        return cache.get(name);\n+        ValueDescriptor result = cache.get(name);\n+        if (result == null) {\n+            \/\/ Cache doesn't contain subfields\n+            result = platformEventType.getField(name);\n+        }\n+        return result;\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/EventType.java","additions":9,"deletions":1,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -192,0 +192,3 @@\n+     * <p>\n+     * It's possible to index into a nested field by using {@code \".\"} (for\n+     * instance {@code \"thread.group.parent.name}\").\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/consumer\/RecordedObject.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -194,0 +194,20 @@\n+    public ValueDescriptor getField(String name) {\n+        int dotIndex = name.indexOf(\".\");\n+        if (dotIndex > 0) {\n+            String pre = name.substring(0, dotIndex);\n+            String post = name.substring(dotIndex + 1);\n+            ValueDescriptor subField = getField(pre);\n+            if (subField != null) {\n+                Type type = PrivateAccess.getInstance().getType(subField);\n+                return type.getField(post);\n+            }\n+        } else {\n+            for (ValueDescriptor v : getFields()) {\n+                if (name.equals(v.getName())) {\n+                    return v;\n+                }\n+            }\n+        }\n+        return null;\n+    }\n+\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/Type.java","additions":20,"deletions":0,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -47,1 +47,1 @@\n-        Asserts.assertNotNull(v, \"getFiled(myByte) was null\");\n+        Asserts.assertNotNull(v, \"getField(myByte) was null\");\n@@ -51,1 +51,1 @@\n-        Asserts.assertNotNull(v, \"getFiled(myInt) was null\");\n+        Asserts.assertNotNull(v, \"getField(myInt) was null\");\n@@ -54,0 +54,4 @@\n+        v = type.getField(\"eventThread.group.name\");\n+        Asserts.assertNotNull(v, \"getField(eventThread.group.name) was null\");\n+        Asserts.assertEquals(v.getTypeName(), \"java.lang.String\", \"eventThread.group.name was not type java.lang.String\");\n+\n@@ -63,0 +67,1 @@\n+\n","filename":"test\/jdk\/jdk\/jfr\/api\/metadata\/eventtype\/TestGetField.java","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"}]}