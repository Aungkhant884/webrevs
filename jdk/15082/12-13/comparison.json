{"files":[{"patch":"@@ -2427,1 +2427,1 @@\n-    ThreadTotalCPUTimeClosure tttc(_perf_parallel_worker_threads_cpu_time, _total_cpu_time_diff);\n+    ThreadTotalCPUTimeClosure tttc(_perf_parallel_worker_threads_cpu_time, true);\n@@ -2434,1 +2434,1 @@\n-  _total_cpu_time->inc(Atomic::load(_total_cpu_time_diff));\n+  CollectedHeap::publish_total_cpu_time();\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2094,1 +2094,1 @@\n-  ThreadTotalCPUTimeClosure tttc(_g1_concurrent_mark_threads_cpu_time, G1CollectedHeap::heap()->_total_cpu_time_diff);\n+  ThreadTotalCPUTimeClosure tttc(_g1_concurrent_mark_threads_cpu_time, true);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentMark.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -172,1 +172,1 @@\n-  ThreadTotalCPUTimeClosure tttc(_g1_concurrent_refine_threads_cpu_time, G1CollectedHeap::heap()->_total_cpu_time_diff);\n+  ThreadTotalCPUTimeClosure tttc(_g1_concurrent_refine_threads_cpu_time, true);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentRefine.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -895,1 +895,1 @@\n-  ThreadTotalCPUTimeClosure tttc(_perf_parallel_worker_threads_cpu_time, _total_cpu_time_diff);\n+  ThreadTotalCPUTimeClosure tttc(_perf_parallel_worker_threads_cpu_time, true);\n","filename":"src\/hotspot\/share\/gc\/parallel\/parallelScavengeHeap.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -160,0 +160,8 @@\n+void CollectedHeap::inc_total_cpu_time(jlong diff) {\n+  Atomic::add(&_total_cpu_time_diff, diff);\n+}\n+\n+void CollectedHeap::publish_total_cpu_time() {\n+  _total_cpu_time->inc(Atomic::load(_total_cpu_time_diff));\n+}\n+\n","filename":"src\/hotspot\/share\/gc\/shared\/collectedHeap.cpp","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -210,0 +210,1 @@\n+\n@@ -488,0 +489,4 @@\n+  \/\/ Methods to modify and update counter for total CPU time spent doing GC.\n+  void inc_total_cpu_time(jlong diff);\n+  void publish_total_cpu_time();\n+\n","filename":"src\/hotspot\/share\/gc\/shared\/collectedHeap.hpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -198,1 +198,1 @@\n-      ThreadTotalCPUTimeClosure tttc(_concurrent_dedup_thread_cpu_time, _total_cpu_time_diff);\n+      ThreadTotalCPUTimeClosure tttc(_concurrent_dedup_thread_cpu_time, true);\n","filename":"src\/hotspot\/share\/gc\/shared\/stringdedup\/stringDedupProcessor.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -541,2 +541,2 @@\n-    if (_total_cpu_counter) {\n-      Atomic::add(_total_cpu_counter, net_cpu_time);\n+    if (_is_gc_threads) {\n+      Universe::heap()->inc_total_cpu_time(net_cpu_time);\n","filename":"src\/hotspot\/share\/runtime\/perfData.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -876,1 +876,1 @@\n-  volatile jlong* _total_cpu_time;\n+  bool _is_gc_threads;\n@@ -879,5 +879,6 @@\n-  ThreadTotalCPUTimeClosure(PerfCounter* counter) :\n-      _total(0), _counter(counter), _total_cpu_time(nullptr) {}\n-  \n-  ThreadTotalCPUTimeClosure(PerfCounter* counter, volatile jlong* total_cpu_counter) :\n-      _total(0), _counter(counter), _total_cpu_time(total_cpu_counter) {}\n+  ThreadTotalCPUTimeClosure(PerfCounter* counter, bool is_gc_threads) :\n+      _total(0), _counter(counter), _is_gc_threads(is_gc_threads) {}\n+\n+  ThreadTotalCPUTimeClosure(PerfCounter* counter) {\n+    ThreadTotalCPUTimeClosure(counter, false);\n+  }\n","filename":"src\/hotspot\/share\/runtime\/perfData.hpp","additions":7,"deletions":6,"binary":false,"changes":13,"status":"modified"}]}