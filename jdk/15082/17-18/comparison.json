{"files":[{"patch":"@@ -2429,2 +2429,2 @@\n-    \/\/ safe for VMThread to read their CPU times. If upstream fixes JDK-8087340\n-    \/\/ so they terminate, we should rethink if it is still safe.\n+    \/\/ safe for VMThread to read their CPU times. However, if JDK-8087340 is\n+    \/\/ resolved so they terminate, we should rethink if it is still safe.\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2089,1 +2089,1 @@\n-  assert(Thread::current() == static_cast<Thread*>(cm_thread()),\n+  assert(Thread::current() == cm_thread(),\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentMark.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n-#include \"runtime\/perfData.hpp\"\n","filename":"src\/hotspot\/share\/runtime\/thread.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -296,2 +296,1 @@\n-    assert(Thread::current() == static_cast<Thread*>(this),\n-           \"Must be called from VM thread\");\n+    assert(Thread::current() == this, \"Must be called from VM thread\");\n","filename":"src\/hotspot\/share\/runtime\/vmThread.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -9,0 +9,1 @@\n+ * @requires vm.gc.G1\n","filename":"test\/jdk\/sun\/tools\/jcmd\/TestGcCounters.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}