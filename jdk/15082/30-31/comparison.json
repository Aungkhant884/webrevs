{"files":[{"patch":"@@ -163,4 +163,0 @@\n-\/\/ Since Atomic::add() is not implemented for long long (jlong) data types on 32-bit\n-\/\/ architectures, we have separate handling for the 64-bit vs 32-bit cases.\n-\/\/ Logically, these statements should be equivalent.\n-#ifdef _LP64\n@@ -168,9 +164,0 @@\n-#else\n-  jlong old_value;\n-  jlong fetched_value = Atomic::load(&_total_cpu_time_diff);\n-  do {\n-    jlong new_value = fetched_value + diff;\n-    old_value = fetched_value;\n-    fetched_value = Atomic::cmpxchg(&_total_cpu_time_diff, old_value, new_value);\n-  } while (old_value != fetched_value);\n-#endif\n","filename":"src\/hotspot\/share\/gc\/shared\/collectedHeap.cpp","additions":0,"deletions":13,"binary":false,"changes":13,"status":"modified"}]}