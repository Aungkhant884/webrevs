{"files":[{"patch":"@@ -254,1 +254,1 @@\n-        Objects.requireNonNull(locale, \"requestedTemplate\");\n+        Objects.requireNonNull(requestedTemplate, \"requestedTemplate\");\n@@ -1462,0 +1462,14 @@\n+    \/\/ RegEx pattern for skeleton validity checking\n+    private static final Pattern VALID_TEMPLATE_PATTERN = Pattern.compile(\n+        \"G{0,5}\" +        \/\/ Era\n+        \"y*\" +            \/\/ Year\n+        \"Q{0,5}\" +        \/\/ Quarter\n+        \"M{0,5}\" +        \/\/ Month\n+        \"w*\" +            \/\/ Week of Week Based Year\n+        \"E{0,5}\" +        \/\/ Day of Week\n+        \"d{0,2}\" +        \/\/ Day of Month\n+        \"B{0,5}\" +        \/\/ Period\/AmPm of Day\n+        \"[hHjC]{0,2}\" +   \/\/ Hour of Day\/AmPm\n+        \"m{0,2}\" +        \/\/ Minute of Hour\n+        \"s{0,2}\" +        \/\/ Second of Minute\n+        \"[vz]{0,4}\");     \/\/ Zone\n@@ -1517,0 +1531,4 @@\n+        Objects.requireNonNull(requestedTemplate, \"requestedTemplate\");\n+        if (!VALID_TEMPLATE_PATTERN.matcher(requestedTemplate).matches()) {\n+            throw new IllegalArgumentException(\"Requested template is invalid: \" + requestedTemplate);\n+        }\n@@ -5074,15 +5092,0 @@\n-        \/\/ RegEx pattern for skeleton validity checking\n-        private static final Pattern VALID_TEMPLATE_PATTERN = Pattern.compile(\n-            \"G{0,5}\" +        \/\/ Era\n-            \"y*\" +            \/\/ Year\n-            \"Q{0,5}\" +        \/\/ Quarter\n-            \"M{0,5}\" +        \/\/ Month\n-            \"w*\" +            \/\/ Week of Week Based Year\n-            \"E{0,5}\" +        \/\/ Day of Week\n-            \"d{0,2}\" +        \/\/ Day of Month\n-            \"B{0,5}\" +        \/\/ Period\/AmPm of Day\n-            \"[hHjC]{0,2}\" +   \/\/ Hour of Day\/AmPm\n-            \"m{0,2}\" +        \/\/ Minute of Hour\n-            \"s{0,2}\" +        \/\/ Second of Minute\n-            \"[vz]{0,4}\");     \/\/ Zone\n-\n@@ -5101,1 +5104,3 @@\n-            this(dateStyle, timeStyle, null);\n+            this.dateStyle = dateStyle;\n+            this.timeStyle = timeStyle;\n+            this.requestedTemplate = null;\n@@ -5110,7 +5115,3 @@\n-            this(null, null, requestedTemplate);\n-            validateTemplate();\n-        }\n-\n-        private LocalizedPrinterParser(FormatStyle dateStyle, FormatStyle timeStyle, String requestedTemplate) {\n-            this.dateStyle = dateStyle;\n-            this.timeStyle = timeStyle;\n+            \/\/ param validated by caller\n+            this.dateStyle = null;\n+            this.timeStyle = null;\n@@ -5120,7 +5121,0 @@\n-        private void validateTemplate() {\n-            Objects.requireNonNull(requestedTemplate, \"requestedTemplate\");\n-            if (!VALID_TEMPLATE_PATTERN.matcher(requestedTemplate).matches()) {\n-                throw new IllegalArgumentException(\"Requested template is invalid: \" + requestedTemplate);\n-            }\n-        }\n-\n@@ -5142,1 +5136,2 @@\n-         * The formatter will be the most appropriate to use for the date and time style in the locale.\n+         * The formatter will be the most appropriate to use for the date and time style, or\n+         * the requested template for the locale.\n@@ -5151,1 +5146,1 @@\n-            var dtStyle = dateStyle !=null || timeStyle != null;\n+            var useRequestedTemplate = requestedTemplate != null;\n@@ -5153,15 +5148,8 @@\n-                    (dtStyle ? Objects.toString(dateStyle) + timeStyle : requestedTemplate);\n-\n-            DateTimeFormatter formatter = FORMATTER_CACHE.get(key);\n-            if (formatter == null) {\n-                String pattern = (dtStyle ?\n-                        getLocalizedDateTimePattern(dateStyle, timeStyle, chrono, locale) :\n-                        getLocalizedDateTimePattern(requestedTemplate, chrono, locale));\n-\n-                formatter = new DateTimeFormatterBuilder().appendPattern(pattern).toFormatter(locale);\n-                DateTimeFormatter old = FORMATTER_CACHE.putIfAbsent(key, formatter);\n-                if (old != null) {\n-                    formatter = old;\n-                }\n-            }\n-            return formatter;\n+                    (useRequestedTemplate ? requestedTemplate : Objects.toString(dateStyle) + timeStyle);\n+\n+            return FORMATTER_CACHE.computeIfAbsent(key, k ->\n+                new DateTimeFormatterBuilder()\n+                    .appendPattern(useRequestedTemplate ?\n+                        getLocalizedDateTimePattern(requestedTemplate, chrono, locale) :\n+                        getLocalizedDateTimePattern(dateStyle, timeStyle, chrono, locale))\n+                    .toFormatter(locale));\n","filename":"src\/java.base\/share\/classes\/java\/time\/format\/DateTimeFormatterBuilder.java","additions":36,"deletions":48,"binary":false,"changes":84,"status":"modified"},{"patch":"@@ -76,2 +76,0 @@\n-        \/\/ CLDR's 'u'\/'U' are not supported in the JDK. Replace them with 'y' instead\n-        final var modifiedSkeleton = requestedTemplate.replaceAll(\"[uU]\", \"y\");\n@@ -80,1 +78,1 @@\n-                .map(lr -> lr.getLocalizedPattern(modifiedSkeleton, calType))\n+                .map(lr -> lr.getLocalizedPattern(requestedTemplate, calType))\n","filename":"src\/java.base\/share\/classes\/sun\/util\/locale\/provider\/JavaTimeDateTimePatternImpl.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -606,1 +606,3 @@\n-            throw new IllegalArgumentException(\"Requested template is invalid: \" + requestedTemplate);\n+            throw new IllegalArgumentException(\"Requested template \\\"%s\\\" is invalid\".formatted(requestedTemplate) +\n+                    (requestedTemplate.equals(skeleton) ? \".\" : \", which translated into \\\"%s\\\"\".formatted(skeleton) +\n+                            \" after the 'j' or 'C' substitution.\"));\n@@ -735,1 +737,1 @@\n-            var suffix= skeleton.substring(last + 1);\n+            var suffix = skeleton.substring(last + 1);\n","filename":"src\/java.base\/share\/classes\/sun\/util\/locale\/provider\/LocaleResources.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -60,3 +60,1 @@\n-                    var keyset = rb.keySet();\n-                    return keyset.stream()\n-                            .map(key -> new Object[]{key, rb.getString(key), l});\n+                    return rb.keySet().stream().map(key -> new Object[]{key, rb.getString(key), l});\n@@ -71,1 +69,1 @@\n-            {\"afo\"}, {\"hB\"}, {\"MMMMMM\"}, {\"BhmsyMMM\"},\n+            {\"afo\"}, {\"hB\"}, {\"uMMM\"}, {\"MMMMMM\"}, {\"BhmsyMMM\"},\n","filename":"test\/jdk\/java\/time\/test\/java\/time\/format\/TestLocalizedPattern.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"}]}