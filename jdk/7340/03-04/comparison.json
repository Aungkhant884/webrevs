{"files":[{"patch":"@@ -2495,1 +2495,1 @@\n-        CompositePrinterParser(List<DateTimePrinterParser> printerParsers, boolean optional) {\n+        private CompositePrinterParser(List<DateTimePrinterParser> printerParsers, boolean optional) {\n@@ -2499,1 +2499,1 @@\n-        CompositePrinterParser(DateTimePrinterParser[] printerParsers, boolean optional) {\n+        private CompositePrinterParser(DateTimePrinterParser[] printerParsers, boolean optional) {\n@@ -2593,1 +2593,1 @@\n-        PadPrinterParserDecorator(DateTimePrinterParser printerParser, int padWidth, char padChar) {\n+        private PadPrinterParserDecorator(DateTimePrinterParser printerParser, int padWidth, char padChar) {\n@@ -2701,1 +2701,1 @@\n-        DefaultValueParser(TemporalField field, long value) {\n+        private DefaultValueParser(TemporalField field, long value) {\n@@ -2725,1 +2725,1 @@\n-        CharLiteralPrinterParser(char literal) {\n+        private CharLiteralPrinterParser(char literal) {\n@@ -2768,1 +2768,1 @@\n-        StringLiteralPrinterParser(String literal) {\n+        private StringLiteralPrinterParser(String literal) {\n@@ -2834,1 +2834,1 @@\n-        NumberPrinterParser(TemporalField field, int minWidth, int maxWidth, SignStyle signStyle) {\n+        private NumberPrinterParser(TemporalField field, int minWidth, int maxWidth, SignStyle signStyle) {\n@@ -3125,1 +3125,1 @@\n-        ReducedPrinterParser(TemporalField field, int minWidth, int maxWidth,\n+        private ReducedPrinterParser(TemporalField field, int minWidth, int maxWidth,\n@@ -3278,1 +3278,1 @@\n-        NanosPrinterParser(int minWidth, int maxWidth, boolean decimalPoint) {\n+        private NanosPrinterParser(int minWidth, int maxWidth, boolean decimalPoint) {\n@@ -3300,1 +3300,1 @@\n-        NanosPrinterParser(int minWidth, int maxWidth, boolean decimalPoint, int subsequentWidth) {\n+        private NanosPrinterParser(int minWidth, int maxWidth, boolean decimalPoint, int subsequentWidth) {\n@@ -3483,1 +3483,1 @@\n-        FractionPrinterParser(TemporalField field, int minWidth, int maxWidth, boolean decimalPoint) {\n+        private FractionPrinterParser(TemporalField field, int minWidth, int maxWidth, boolean decimalPoint) {\n@@ -3510,1 +3510,1 @@\n-        FractionPrinterParser(TemporalField field, int minWidth, int maxWidth, boolean decimalPoint, int subsequentWidth) {\n+        private FractionPrinterParser(TemporalField field, int minWidth, int maxWidth, boolean decimalPoint, int subsequentWidth) {\n@@ -3700,1 +3700,1 @@\n-        TextPrinterParser(TemporalField field, TextStyle textStyle, DateTimeTextProvider provider) {\n+        private TextPrinterParser(TemporalField field, TextStyle textStyle, DateTimeTextProvider provider) {\n@@ -3798,1 +3798,1 @@\n-        InstantPrinterParser(int fractionalDigits) {\n+        private InstantPrinterParser(int fractionalDigits) {\n@@ -3947,1 +3947,1 @@\n-        OffsetIdPrinterParser(String pattern, String noOffsetText) {\n+        private OffsetIdPrinterParser(String pattern, String noOffsetText) {\n@@ -4429,1 +4429,1 @@\n-        ZoneTextPrinterParser(TextStyle textStyle, Set<ZoneId> preferredZones, boolean isGeneric) {\n+        private ZoneTextPrinterParser(TextStyle textStyle, Set<ZoneId> preferredZones, boolean isGeneric) {\n@@ -4601,1 +4601,1 @@\n-        ZoneIdPrinterParser(TemporalQuery<ZoneId> query, String description) {\n+        private ZoneIdPrinterParser(TemporalQuery<ZoneId> query, String description) {\n@@ -5020,1 +5020,1 @@\n-        ChronoPrinterParser(TextStyle textStyle) {\n+        private ChronoPrinterParser(TextStyle textStyle) {\n@@ -5103,1 +5103,1 @@\n-        LocalizedPrinterParser(FormatStyle dateStyle, FormatStyle timeStyle) {\n+        private LocalizedPrinterParser(FormatStyle dateStyle, FormatStyle timeStyle) {\n@@ -5115,1 +5115,1 @@\n-        LocalizedPrinterParser(String requestedTemplate) {\n+        private LocalizedPrinterParser(String requestedTemplate) {\n@@ -5187,1 +5187,1 @@\n-        WeekBasedFieldPrinterParser(char chr, int count, int minWidth, int maxWidth) {\n+        private WeekBasedFieldPrinterParser(char chr, int count, int minWidth, int maxWidth) {\n@@ -5201,1 +5201,1 @@\n-        WeekBasedFieldPrinterParser(char chr, int count, int minWidth, int maxWidth,\n+        private WeekBasedFieldPrinterParser(char chr, int count, int minWidth, int maxWidth,\n@@ -5332,1 +5332,1 @@\n-        DayPeriodPrinterParser(TextStyle textStyle) {\n+        private DayPeriodPrinterParser(TextStyle textStyle) {\n","filename":"src\/java.base\/share\/classes\/java\/time\/format\/DateTimeFormatterBuilder.java","additions":23,"deletions":23,"binary":false,"changes":46,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-     * a java.time specific dateTime Pattern from selected Locale Provider.\n+     * a java.time specific dateTime Pattern from the selected Locale Provider.\n@@ -68,1 +68,1 @@\n-     * @param requestedTemplate requested template defined in CLDR\n+     * @param requestedTemplate the requested template, not null\n@@ -72,2 +72,5 @@\n-     * @throws IllegalArgumentException if {@code requested} is invalid\n-     * @throws DateTimeException if the formatter for the given {@code requested} is not available\n+     * @throws IllegalArgumentException if {@code requestedTemplate} does not match\n+     *      the regular expression syntax described in\n+     *      {@link java.time.format.DateTimeFormatterBuilder#appendLocalized(String)}.\n+     * @throws DateTimeException if a match for the formatting pattern for\n+     *      {@code requestedTemplate} is not available\n@@ -79,1 +82,1 @@\n-        throw new DateTimeException(\"Formatter is not available for the requested template: \" + requestedTemplate);\n+        throw new DateTimeException(\"Formatting pattern is not available for the requested template: \" + requestedTemplate);\n","filename":"src\/java.base\/share\/classes\/sun\/text\/spi\/JavaTimeDateTimePatternProvider.java","additions":8,"deletions":5,"binary":false,"changes":13,"status":"modified"}]}