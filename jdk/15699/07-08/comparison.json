{"files":[{"patch":"@@ -2482,0 +2482,3 @@\n+            public void putCharUTF16(byte[] buffer, int index, int ch) {\n+                StringUTF16.putChar(buffer, index, ch);\n+            }\n@@ -2526,4 +2529,0 @@\n-            public void stringConcatHelperPutCharUTF16(byte[] buffer, int index, int ch) {\n-                StringConcatHelper.putCharUTF16(buffer, index, ch);\n-            }\n-\n","filename":"src\/java.base\/share\/classes\/java\/lang\/System.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -103,1 +103,1 @@\n-        JLA.stringConcatHelperPutCharUTF16(buffer, index, ch);\n+        JLA.putCharUTF16(buffer, index, ch);\n@@ -258,1 +258,0 @@\n-        private final byte[] digits;\n@@ -265,2 +264,0 @@\n-            this.digits = new byte[length];\n-            HexDigits.getCharsLatin1(value, length, this.digits);\n@@ -293,3 +290,2 @@\n-            for (int i = 1; i <= length; i++) {\n-                buffer[--lengthCoderLatin1] = digits[digits.length - i];\n-            }\n+            HexDigits.getCharsLatin1(value, lengthCoderLatin1, buffer);\n+            lengthCoderLatin1 -= length;\n@@ -306,3 +302,2 @@\n-            for (int i = 1; i <= length; i++) {\n-                putCharUTF16(buffer, (int)--lengthCoder, digits[digits.length - i]);\n-            }\n+            HexDigits.getCharsUTF16(value, (int)lengthCoder, buffer);\n+            lengthCoder -= length;\n@@ -331,1 +326,0 @@\n-        private final byte[] digits;\n@@ -338,2 +332,0 @@\n-            this.digits = new byte[length];\n-            OctalDigits.getCharsLatin1(value, length, this.digits);\n@@ -366,3 +358,2 @@\n-            for (int i = 1; i <= length; i++) {\n-                buffer[--lengthCoderLatin1] = digits[digits.length - i];\n-            }\n+            OctalDigits.getCharsLatin1(value, lengthCoderLatin1, buffer);\n+            lengthCoderLatin1 -= length;\n@@ -383,3 +374,2 @@\n-            for (int i = 1; i <= length; i++) {\n-                putCharUTF16(buffer, (int)--lengthCoder, digits[digits.length - i]);\n-            }\n+            OctalDigits.getCharsUTF16(value, (int) lengthCoder, buffer);\n+            lengthCoder -= length;\n","filename":"src\/java.base\/share\/classes\/java\/util\/FormatItem.java","additions":9,"deletions":19,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -417,1 +417,1 @@\n-    void stringConcatHelperPutCharUTF16(byte[] buffer, int index, int ch);\n+    void putCharUTF16(byte[] buffer, int index, int ch);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/access\/JavaLangAccess.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -30,0 +30,2 @@\n+import jdk.internal.access.JavaLangAccess;\n+import jdk.internal.access.SharedSecrets;\n@@ -39,0 +41,2 @@\n+    private static final JavaLangAccess JLA = SharedSecrets.getJavaLangAccess();\n+\n@@ -141,0 +145,30 @@\n+    \/**\n+     * Insert digits for long value in buffer from high index to low index.\n+     *\n+     * @param value      value to convert\n+     * @param index      insert point + 1\n+     * @param buffer     byte buffer to copy into\n+     * @param putCharMH  method to put character\n+     *\n+     * @return the last index used\n+     *\n+     * @throws Throwable if putCharMH fails (unusual).\n+     *\/\n+    public static int getCharsUTF16(long value, int index, byte[] buffer) {\n+        while ((value & ~0xFF) != 0) {\n+            int digits = DIGITS[(int) (value & 0xFF)];\n+            value >>>= 8;\n+            JLA.putCharUTF16(buffer, --index, (byte) (digits >> 8));\n+            JLA.putCharUTF16(buffer, --index, (byte) (digits & 0xFF));\n+        }\n+\n+        int digits = DIGITS[(int) (value & 0xFF)];\n+        JLA.putCharUTF16(buffer, --index, (byte) (digits >> 8));\n+\n+        if (0xF < value) {\n+            JLA.putCharUTF16(buffer, --index, (byte) (digits & 0xFF));\n+        }\n+\n+        return index;\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/util\/HexDigits.java","additions":34,"deletions":0,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -30,0 +30,2 @@\n+import jdk.internal.access.JavaLangAccess;\n+import jdk.internal.access.SharedSecrets;\n@@ -44,0 +46,2 @@\n+    private static final JavaLangAccess JLA = SharedSecrets.getJavaLangAccess();\n+\n@@ -98,0 +102,32 @@\n+\n+    \/**\n+     * This is a variant of {@link OctalDigits#getCharsLatin1(int, int, byte[])}, but for\n+     * UTF-16 coder.\n+     *\n+     * @param value      value to convert\n+     * @param index      insert point + 1\n+     * @param buffer     byte buffer to copy into\n+     * @param putCharMH  method to put character\n+     *\n+     * @return the last index used\n+     *\n+     * @throws Throwable if putCharMH fails (unusual).\n+     *\/\n+    public static int getCharsUTF16(long value, int index, byte[] buffer){\n+        while ((value & ~0x3F) != 0) {\n+            int digits = DIGITS[(int) (value & 0x3F)];\n+            value >>>= 6;\n+            JLA.putCharUTF16(buffer, --index, digits >> 8);\n+            JLA.putCharUTF16(buffer, --index, digits & 0xFF);\n+        }\n+\n+        int digits = DIGITS[(int) (value & 0x3F)];\n+        JLA.putCharUTF16(buffer, --index, digits >> 8);\n+\n+        if (7 < value) {\n+            JLA.putCharUTF16(buffer, --index, digits & 0xFF);\n+        }\n+\n+        return index;\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/util\/OctalDigits.java","additions":36,"deletions":0,"binary":false,"changes":36,"status":"modified"}]}