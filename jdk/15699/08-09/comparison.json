{"files":[{"patch":"@@ -523,27 +523,0 @@\n-    \/*\n-     * Initialize after phase1.\n-     *\/\n-    private static class LateInit {\n-        static final MethodHandle GETCHAR_LATIN1_MH;\n-\n-        static final MethodHandle GETCHAR_UTF16_MH;\n-\n-        static final MethodHandle PUTCHAR_LATIN1_MH;\n-\n-        static final MethodHandle PUTCHAR_UTF16_MH;\n-\n-        static {\n-            MethodType getCharMT =\n-                MethodType.methodType(char.class,\n-                        byte[].class, int.class);\n-            MethodType putCharMT =\n-                MethodType.methodType(void.class,\n-                        byte[].class, int.class, int.class);\n-            GETCHAR_LATIN1_MH = lookupStatic(\"getCharLatin1\", getCharMT);\n-            GETCHAR_UTF16_MH = lookupStatic(\"getCharUTF16\", getCharMT);\n-            PUTCHAR_LATIN1_MH = lookupStatic(\"putCharLatin1\", putCharMT);\n-            PUTCHAR_UTF16_MH = lookupStatic(\"putCharUTF16\", putCharMT);\n-        }\n-\n-    }\n-\n@@ -580,14 +553,0 @@\n-    @ForceInline\n-    @PreviewFeature(feature=PreviewFeature.Feature.STRING_TEMPLATES)\n-    static MethodHandle selectGetChar(long indexCoder) {\n-        return indexCoder < UTF16 ? LateInit.GETCHAR_LATIN1_MH :\n-                                    LateInit.GETCHAR_UTF16_MH;\n-    }\n-\n-    @ForceInline\n-    @PreviewFeature(feature=PreviewFeature.Feature.STRING_TEMPLATES)\n-    static MethodHandle selectPutChar(long indexCoder) {\n-        return indexCoder < UTF16 ? LateInit.PUTCHAR_LATIN1_MH :\n-                                    LateInit.PUTCHAR_UTF16_MH;\n-    }\n-\n","filename":"src\/java.base\/share\/classes\/java\/lang\/StringConcatHelper.java","additions":0,"deletions":41,"binary":false,"changes":41,"status":"modified"},{"patch":"@@ -2525,0 +2525,4 @@\n+            public long stringConcatHelperPrepend(long indexCoder, byte[] buf, String value, String prefix) {\n+                return StringConcatHelper.prepend(indexCoder, buf, value, prefix);\n+            }\n+\n@@ -2537,0 +2541,4 @@\n+            public long stringConcatMix(long lengthCoder, char value) {\n+                return StringConcatHelper.mix(lengthCoder, value);\n+            }\n+\n","filename":"src\/java.base\/share\/classes\/java\/lang\/System.java","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -42,2 +42,1 @@\n-\n-import static java.lang.invoke.MethodType.methodType;\n+import jdk.internal.vm.annotation.Stable;\n@@ -57,17 +56,0 @@\n-    private static final MethodHandle CHAR_MIX =\n-            JLA.stringConcatHelper(\"mix\",\n-                    MethodType.methodType(long.class, long.class,char.class));\n-\n-    private static final MethodHandle STRING_PREPEND =\n-            JLA.stringConcatHelper(\"prepend\",\n-                    MethodType.methodType(long.class, long.class, byte[].class,\n-                            String.class, String.class));\n-\n-    private static final MethodHandle SELECT_GETCHAR_MH =\n-            JLA.stringConcatHelper(\"selectGetChar\",\n-                    MethodType.methodType(MethodHandle.class, long.class));\n-\n-    private static final MethodHandle SELECT_PUTCHAR_MH =\n-            JLA.stringConcatHelper(\"selectPutChar\",\n-                    MethodType.methodType(MethodHandle.class, long.class));\n-\n@@ -75,7 +57,1 @@\n-        try {\n-            return (long)CHAR_MIX.invokeExact(lengthCoder, value);\n-        } catch (Error | RuntimeException ex) {\n-            throw ex;\n-        } catch (Throwable ex) {\n-            throw new RuntimeException(ex);\n-        }\n+        return JLA.stringConcatMix(lengthCoder, value);\n@@ -90,1 +66,1 @@\n-        return (long)STRING_PREPEND.invokeExact(lengthCoder, buffer, value,\n+        return JLA.stringConcatHelperPrepend(lengthCoder, buffer, value,\n@@ -94,8 +70,0 @@\n-    private static MethodHandle selectGetChar(long indexCoder) throws Throwable {\n-        return (MethodHandle)SELECT_GETCHAR_MH.invokeExact(indexCoder);\n-    }\n-\n-    private static MethodHandle selectPutChar(long indexCoder) throws Throwable {\n-        return (MethodHandle)SELECT_PUTCHAR_MH.invokeExact(indexCoder);\n-    }\n-\n@@ -394,0 +362,8 @@\n+        @Stable\n+        private final static byte[] BYTES_TRUE_LATIN1 = \"true\".getBytes(StandardCharsets.ISO_8859_1);\n+        @Stable\n+        private final static byte[] BYTES_TRUE_UTF16 = \"true\".getBytes(StandardCharsets.UTF_16);\n+        @Stable\n+        private final static byte[] BYTES_FALSE_LATIN1 = \"false\".getBytes(StandardCharsets.ISO_8859_1);\n+        @Stable\n+        private final static byte[] BYTES_FALSE_UTF16 = \"false\".getBytes(StandardCharsets.UTF_16);\n@@ -406,7 +382,4 @@\n-            MethodHandle putCharMH = selectPutChar(lengthCoder);\n-\n-            if (value) {\n-                putCharMH.invokeExact(buffer, (int)--lengthCoder, (int)'e');\n-                putCharMH.invokeExact(buffer, (int)--lengthCoder, (int)'u');\n-                putCharMH.invokeExact(buffer, (int)--lengthCoder, (int)'r');\n-                putCharMH.invokeExact(buffer, (int)--lengthCoder, (int)'t');\n+            boolean latin1 = isLatin1(lengthCoder);\n+            byte[] bytes;\n+            if (latin1) {\n+                bytes = value ? BYTES_TRUE_LATIN1 : BYTES_FALSE_LATIN1;\n@@ -414,5 +387,1 @@\n-                putCharMH.invokeExact(buffer, (int)--lengthCoder, (int)'e');\n-                putCharMH.invokeExact(buffer, (int)--lengthCoder, (int)'s');\n-                putCharMH.invokeExact(buffer, (int)--lengthCoder, (int)'l');\n-                putCharMH.invokeExact(buffer, (int)--lengthCoder, (int)'a');\n-                putCharMH.invokeExact(buffer, (int)--lengthCoder, (int)'f');\n+                bytes = value ? BYTES_FALSE_LATIN1 : BYTES_FALSE_UTF16;\n@@ -420,2 +389,2 @@\n-\n-            return lengthCoder;\n+            System.arraycopy(bytes, 0, buffer, (int) (lengthCoder) - bytes.length, bytes.length);\n+            return lengthCoder - bytes.length;\n@@ -442,3 +411,5 @@\n-            MethodHandle putCharMH = selectPutChar(lengthCoder);\n-            putCharMH.invokeExact(buffer, (int)--lengthCoder, (int)value);\n-\n+            if (isLatin1(lengthCoder)) {\n+                buffer[(int) --lengthCoder] = (byte) value;\n+            } else {\n+                putCharUTF16(buffer, (int) --lengthCoder, value);\n+            }\n@@ -552,1 +523,0 @@\n-            MethodHandle putCharMH = selectPutChar(lengthCoder);\n@@ -555,2 +525,8 @@\n-            for (int i = length(); i < width; i++) {\n-                putCharMH.invokeExact(buffer, (int)--lengthCoder, (int)' ');\n+            if (isLatin1(lengthCoder)) {\n+                for (int i = length(); i < width; i++) {\n+                    buffer[(int) --lengthCoder] = ' ';\n+                }\n+            } else {\n+                for (int i = length(); i < width; i++) {\n+                    putCharUTF16(buffer, (int) --lengthCoder, (int) ' ');\n+                }\n@@ -582,4 +558,9 @@\n-            MethodHandle putCharMH = selectPutChar(lengthCoder);\n-\n-            for (int i = length(); i < width; i++) {\n-                putCharMH.invokeExact(buffer, (int)--lengthCoder, (int)' ');\n+            int length = length();\n+            if (isLatin1(lengthCoder)) {\n+                for (int i = length; i < width; i++) {\n+                    buffer[(int)--lengthCoder] = ' ';\n+                }\n+            } else {\n+                for (int i = length; i < width; i++) {\n+                    putCharUTF16(buffer, (int)--lengthCoder, ' ');\n+                }\n@@ -599,0 +580,6 @@\n+        @Stable\n+        private final static byte[] BYTES_LATIN1 = \"null\".getBytes(StandardCharsets.ISO_8859_1);\n+\n+        @Stable\n+        private final static byte[] BYTES_UTF16 = \"null\".getBytes(StandardCharsets.UTF_16);\n+\n@@ -609,8 +596,3 @@\n-            MethodHandle putCharMH = selectPutChar(lengthCoder);\n-\n-            putCharMH.invokeExact(buffer, (int)--lengthCoder, (int)'l');\n-            putCharMH.invokeExact(buffer, (int)--lengthCoder, (int)'l');\n-            putCharMH.invokeExact(buffer, (int)--lengthCoder, (int)'u');\n-            putCharMH.invokeExact(buffer, (int)--lengthCoder, (int)'n');\n-\n-            return lengthCoder;\n+            byte[] bytes = isLatin1(lengthCoder) ? BYTES_LATIN1 : BYTES_UTF16;\n+            System.arraycopy(bytes, 0, buffer, (int) (lengthCoder) - bytes.length, bytes.length);\n+            return lengthCoder - 4;\n","filename":"src\/java.base\/share\/classes\/java\/util\/FormatItem.java","additions":49,"deletions":67,"binary":false,"changes":116,"status":"modified"},{"patch":"@@ -429,0 +429,11 @@\n+    \/**\n+     * Mix value length and coder into current length and coder.\n+     *\/\n+    long stringConcatMix(long lengthCoder, char value);\n+\n+    \/**\n+     * Prepends constant and the stringly representation of value into buffer,\n+     * given the coder and final index. Index is measured in chars, not in bytes!\n+     *\/\n+    long stringConcatHelperPrepend(long indexCoder, byte[] buf, String value, String prefix);\n+\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/access\/JavaLangAccess.java","additions":11,"deletions":0,"binary":false,"changes":11,"status":"modified"}]}