{"files":[{"patch":"@@ -2159,0 +2159,4 @@\n+        \/\/ Any strings match if len <= 0\n+        if (len <= 0) {\n+           return true;\n+        }\n","filename":"src\/java.base\/share\/classes\/java\/lang\/String.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,2 +26,3 @@\n- * @bug 4016509\n- * @summary test regionMatches corner case\n+ * @bug 4016509 8316879\n+ * @summary test regionMatches corner cases\n+ * @run junit RegionMatches\n@@ -30,0 +31,3 @@\n+import java.io.UnsupportedEncodingException;\n+import org.junit.jupiter.api.Test;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n@@ -33,3 +37,2 @@\n-  public static void main (String args[]) throws Exception {\n-      String s1=\"abc\";\n-      String s2=\"def\";\n+  private final String s1_LATIN1 = \"abc\";\n+  private final String s2_LATIN1 = \"def\";\n@@ -37,2 +40,17 @@\n-      if (!s1.regionMatches(0,s2,0,Integer.MIN_VALUE))\n-          throw new RuntimeException(\"Integer overflow in RegionMatches\");\n+  private final byte[] b1_UTF16 = new byte[]{0x04, 0x3d, 0x04, 0x30, 0x04, 0x36, 0x04, 0x34};\n+  private final byte[] b2_UTF16 = new byte[]{0x04, 0x32, 0x00, 0x20, 0x04, 0x41, 0x04, 0x42};\n+\n+  @Test\n+  public void TestLATIN1() {\n+      \/\/ Test for 4016509\n+      boolean result = s1_LATIN1.regionMatches(0, s2_LATIN1, 0, Integer.MIN_VALUE);\n+      assertTrue(result, \"Integer overflow in RegionMatches when comparing LATIN1 strings\");\n+  }\n+\n+  @Test\n+  public void TestUTF16() throws UnsupportedEncodingException{\n+      \/\/ Test for 8316879\n+      String s1_UTF16 = new String(b1_UTF16, \"UTF-16\");\n+      String s2_UTF16 = new String(b2_UTF16, \"UTF-16\");\n+      boolean result = s1_UTF16.regionMatches(0, s2_UTF16, 0, Integer.MIN_VALUE + 1);\n+      assertTrue(result, \"Integer overflow in RegionMatches when comparing UTF16 strings\");\n","filename":"test\/jdk\/java\/lang\/String\/RegionMatches.java","additions":26,"deletions":8,"binary":false,"changes":34,"status":"modified"}]}