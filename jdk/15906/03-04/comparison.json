{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n- * @run testng RegionMatches\n+ * @run junit RegionMatches\n@@ -32,1 +32,2 @@\n-import org.testng.annotations.Test;\n+import org.junit.jupiter.api.Test;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n@@ -34,1 +35,0 @@\n-@Test\n@@ -46,2 +46,2 @@\n-      if (!s1_LATIN1.regionMatches(0, s2_LATIN1, 0, Integer.MIN_VALUE))\n-          throw new RuntimeException(\"Integer overflow in RegionMatches when comparing LATIN1 strings\");\n+      boolean result = s1_LATIN1.regionMatches(0, s2_LATIN1, 0, Integer.MIN_VALUE);\n+      assertTrue(result, \"Integer overflow in RegionMatches when comparing LATIN1 strings\");\n@@ -55,2 +55,2 @@\n-      if (!s1_UTF16.regionMatches(0, s2_UTF16, 0, Integer.MIN_VALUE + 1))\n-          throw new RuntimeException(\"Integer overflow in RegionMatches when comparing UTF16 strings\");\n+      boolean result = s1_UTF16.regionMatches(0, s2_UTF16, 0, Integer.MIN_VALUE + 1);\n+      assertTrue(result, \"Integer overflow in RegionMatches when comparing UTF16 strings\");\n","filename":"test\/jdk\/java\/lang\/String\/RegionMatches.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"}]}