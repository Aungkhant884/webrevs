[{"commit":{"message":"Update some comments"},"files":[{"filename":"src\/hotspot\/share\/opto\/vectorization.cpp"},{"filename":"src\/hotspot\/share\/opto\/vectorization.hpp"}],"sha":"082da83bdb4f3c6b0d8a47f3bfc7f0b313311ff8"},{"commit":{"message":"Move the cache of _pre_loop_end to CountedLoopNode"},"files":[{"filename":"src\/hotspot\/share\/opto\/loopnode.cpp"},{"filename":"src\/hotspot\/share\/opto\/loopnode.hpp"},{"filename":"src\/hotspot\/share\/opto\/superword.cpp"},{"filename":"src\/hotspot\/share\/opto\/superword.hpp"},{"filename":"src\/hotspot\/share\/opto\/vectorization.cpp"}],"sha":"0ca709efcfef949d0d68a8627120ebda25076fd5"},{"commit":{"message":"Merge branch 'master' into swpointer"},"files":[{"filename":"src\/hotspot\/share\/opto\/loopnode.cpp"},{"filename":"src\/hotspot\/share\/opto\/loopnode.hpp"},{"filename":"src\/hotspot\/share\/opto\/node.hpp"},{"filename":"src\/hotspot\/share\/opto\/superword.cpp"}],"sha":"c6cbec369c6308a253ea63cf377a606531dd79a5"},{"commit":{"message":"8312332: C2: Refactor SWPointer out from SuperWord\n\nAs discussed in JDK-8308994, we should first do some refactoring work\nbefore proceeding with the new post loop vectorization. In this patch,\nwe have done the following.\n\n1) We have created new C2 source files `vectorization.[cpp|hpp]` for\n   shared logics and utilities for C2's auto-vectorization. So far we\n   have moved class `SWPointer` and `VectorElementSizeStats` here from\n   `superword.[cpp|hpp]`.\n\n2) We have decoupled `SWPointer` from class `SuperWord` and renamed it\n   to `VPointer` as it will be used by vectorizers other than SuperWord.\n   The original class `SWPointer` and its inner class `Tracer` both have\n   a `_slp` field initialized in their constructors. In this patch, we\n   have replaced them by other fields and re-written the constructors\n   for the same functionality. Original `SWPointer::invariant()` calls\n   function `SuperWord::find_pre_loop_end()` for loop invariant checks.\n   To help decoupling, we moved function `find_pre_loop_end()` to class\n   `CountedLoopNode`. As function `SWPointer::Tracer::invariant_1()` is\n   tightly coupled with `SuperWord` but only prints some debug messages,\n   we temporarily removed it in this patch. We will consider adding it\n   back after later refactoring of `SuperWord` so we added a `TODO` at\n   its call site in this patch.\n\n3) We have a lot of memory phi node checks in loop optimizations. So we\n   added a utility function `is_memory_phi()` in `node.hpp`.\n\nTested tier1~3 on x86 and AArch64. Also manually verified that option\n`VectorizeDebug` in compiler directives still works well."},"files":[{"filename":"src\/hotspot\/share\/opto\/loopnode.cpp"},{"filename":"src\/hotspot\/share\/opto\/loopnode.hpp"},{"filename":"src\/hotspot\/share\/opto\/node.hpp"},{"filename":"src\/hotspot\/share\/opto\/superword.cpp"},{"filename":"src\/hotspot\/share\/opto\/superword.hpp"},{"filename":"src\/hotspot\/share\/opto\/vectorization.cpp"},{"filename":"src\/hotspot\/share\/opto\/vectorization.hpp"}],"sha":"610576a5f66bfcf01c60cf56e53450251ece7ac6"}]