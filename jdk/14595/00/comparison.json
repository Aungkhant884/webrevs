{"files":[{"patch":"@@ -336,1 +336,1 @@\n-  address heap_end = (address)G1CollectedHeap::heap()->reserved().end();\n+  address heap_end = (address)G1CollectedHeap::heap()->reserved_region().end();\n","filename":"src\/hotspot\/share\/cds\/archiveHeapWriter.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -215,2 +215,2 @@\n-      address start = (address)G1CollectedHeap::heap()->reserved().start();\n-      address end = (address)G1CollectedHeap::heap()->reserved().end();\n+      address start = (address)G1CollectedHeap::heap()->reserved_region().start();\n+      address end = (address)G1CollectedHeap::heap()->reserved_region().end();\n@@ -1573,1 +1573,1 @@\n-      mapping_offset = requested_base - (char*)G1CollectedHeap::heap()->reserved().start();\n+      mapping_offset = requested_base - (char*)G1CollectedHeap::heap()->reserved_region().start();\n@@ -2036,1 +2036,1 @@\n-                                    UseG1GC ? p2i((address)G1CollectedHeap::heap()->reserved().start()) : 0L,\n+                                    UseG1GC ? p2i((address)G1CollectedHeap::heap()->reserved_region().start()) : 0L,\n@@ -2038,1 +2038,1 @@\n-                                    UseG1GC ? p2i((address)G1CollectedHeap::heap()->reserved().end()) : 0L);\n+                                    UseG1GC ? p2i((address)G1CollectedHeap::heap()->reserved_region().end()) : 0L);\n@@ -2097,1 +2097,1 @@\n-    MemRegion heap_range = G1CollectedHeap::heap()->reserved();\n+    MemRegion heap_range = G1CollectedHeap::heap()->reserved_region();\n","filename":"src\/hotspot\/share\/cds\/filemap.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -535,1 +535,1 @@\n-                                       p2i((address)G1CollectedHeap::heap()->reserved().start()),\n+                                       p2i((address)G1CollectedHeap::heap()->reserved_region().start()),\n@@ -537,1 +537,1 @@\n-                                       p2i((address)G1CollectedHeap::heap()->reserved().end()));\n+                                       p2i((address)G1CollectedHeap::heap()->reserved_region().end()));\n@@ -1703,2 +1703,2 @@\n-  address actual_base = (address)G1CollectedHeap::heap()->reserved().start();\n-  address actual_end  = (address)G1CollectedHeap::heap()->reserved().end();\n+  address actual_base = (address)G1CollectedHeap::heap()->reserved_region().start();\n+  address actual_end  = (address)G1CollectedHeap::heap()->reserved_region().end();\n","filename":"src\/hotspot\/share\/cds\/heapShared.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -535,1 +535,1 @@\n-  MemRegion reserved = _hrm.reserved();\n+  MemRegion reserved = reserved_region();\n@@ -589,1 +589,1 @@\n-  MemRegion reserved = _hrm.reserved();\n+  MemRegion reserved = reserved_region();\n@@ -1448,1 +1448,1 @@\n-  _bot = new G1BlockOffsetTable(reserved(), bot_storage);\n+  _bot = new G1BlockOffsetTable(reserved_region(), bot_storage);\n@@ -1453,1 +1453,1 @@\n-    _region_attr.initialize(reserved(), granularity);\n+    _region_attr.initialize(reserved_region(), granularity);\n@@ -2205,2 +2205,2 @@\n-            p2i(_hrm.reserved().start()),\n-            p2i(_hrm.reserved().end()));\n+            p2i(reserved_region().start()),\n+            p2i(reserved_region().end()));\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -1048,4 +1048,0 @@\n-  MemRegion reserved() const {\n-    return _hrm.reserved();\n-  }\n-\n@@ -1053,1 +1049,1 @@\n-    return reserved().contains(addr);\n+    return reserved_region().contains(addr);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.hpp","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -124,2 +124,2 @@\n-         p2i(addr), p2i(reserved().start()), p2i(reserved().end()));\n-  return (uint)(pointer_delta(addr, reserved().start(), sizeof(uint8_t)) >> HeapRegion::LogOfHRGrainBytes);\n+         p2i(addr), p2i(reserved_region().start()), p2i(reserved_region().end()));\n+  return (uint)(pointer_delta(addr, reserved_region().start(), sizeof(uint8_t)) >> HeapRegion::LogOfHRGrainBytes);\n@@ -129,1 +129,1 @@\n-  return _hrm.reserved().start() + index * HeapRegion::GrainWords;\n+  return reserved_region().start() + index * HeapRegion::GrainWords;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.inline.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -371,1 +371,1 @@\n-  _heap(_g1h->reserved()),\n+  _heap(_g1h->reserved_region()),\n@@ -419,1 +419,1 @@\n-  _mark_bitmap.initialize(g1h->reserved(), bitmap_storage);\n+  _mark_bitmap.initialize(g1h->reserved_region(), bitmap_storage);\n@@ -2933,1 +2933,1 @@\n-  MemRegion reserved = g1h->reserved();\n+  MemRegion reserved = g1h->reserved_region();\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentMark.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -152,1 +152,1 @@\n-  _region_attr_table.initialize(heap->reserved(), HeapRegion::GrainBytes);\n+  _region_attr_table.initialize(heap->reserved_region(), HeapRegion::GrainBytes);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullCollector.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -159,1 +159,1 @@\n-  assert(reserved().contains(mr), \"invariant\");\n+  assert(g1h->reserved_region().contains(mr), \"invariant\");\n","filename":"src\/hotspot\/share\/gc\/g1\/heapRegionManager.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -246,2 +246,0 @@\n-  MemRegion reserved() const { return MemRegion(heap_bottom(), heap_end()); }\n-\n","filename":"src\/hotspot\/share\/gc\/g1\/heapRegionManager.hpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -189,1 +189,0 @@\n-  MemRegion reserved_region() const { return _reserved; }\n","filename":"src\/hotspot\/share\/gc\/parallel\/parallelScavengeHeap.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+#include \"gc\/shared\/gc_globals.hpp\"\n@@ -35,0 +36,1 @@\n+#include \"runtime\/globals.hpp\"\n@@ -210,0 +212,4 @@\n+  MemRegion reserved_region() const {\n+    assert(!UseZGC, \"Not supported for ZGC\");\n+    return _reserved;\n+  }\n","filename":"src\/hotspot\/share\/gc\/shared\/collectedHeap.hpp","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -148,1 +148,0 @@\n-  MemRegion reserved_region() const { return _reserved; }\n","filename":"src\/hotspot\/share\/gc\/shared\/genCollectedHeap.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -470,1 +470,0 @@\n-  MemRegion reserved_region() const { return _reserved; }\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"}]}