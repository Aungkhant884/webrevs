{"files":[{"patch":"@@ -37,0 +37,2 @@\n+import static jdk.test.lib.Asserts.assertNotNull;\n+\n@@ -39,1 +41,24 @@\n-    public static final String imageNameAndTag = \"jdk-internal:test\";\n+    \/\/ Create a unique name for docker image.\n+    public static String imageName() {\n+        \/\/ jtreg guarantees that test.name is unique among all concurrently executing\n+        \/\/ tests. For example, if you have two test roots:\n+        \/\/\n+        \/\/     $ find test -type f\n+        \/\/     test\/foo\/TEST.ROOT\n+        \/\/     test\/foo\/my\/TestCase.java\n+        \/\/     test\/bar\/TEST.ROOT\n+        \/\/     test\/bar\/my\/TestCase.java\n+        \/\/     $ jtreg -concur:2 test\/foo test\/bar\n+        \/\/\n+        \/\/ jtreg will first run all the tests under test\/foo. When they are all finished, then\n+        \/\/ jtreg will run all the tests under test\/bar. So you will never have two concurrent\n+        \/\/ test cases whose test.name is \"my\/TestCase.java\"\n+        String testname = System.getProperty(\"test.name\");\n+        assertNotNull(testname, \"must be set by jtreg\");\n+        testname = testname.replace(\".java\", \"\");\n+        testname = testname.replace('\/', '-');\n+        testname = testname.replace('\\\\', '-');\n+\n+        \/\/ Example: \"jdk-internal:test-containers-docker-TestMemoryAwareness\"\n+        return \"jdk-internal:test-\" + testname;\n+    }\n@@ -42,1 +67,2 @@\n-        return imageNameAndTag + \"-\" + suffix;\n+        \/\/ Example: \"jdk-internal:test-containers-docker-TestMemoryAwareness-memory\"\n+        return imageName() + '-' + suffix;\n@@ -45,1 +71,0 @@\n-\n@@ -53,2 +78,2 @@\n-    public static DockerRunOptions newOpts(String imageNameAndTag) {\n-        return new DockerRunOptions(imageNameAndTag, \"\/jdk\/bin\/java\", \"-version\")\n+    public static DockerRunOptions newOpts(String imageName) {\n+        return new DockerRunOptions(imageName, \"\/jdk\/bin\/java\", \"-version\")\n@@ -58,2 +83,2 @@\n-    public static DockerRunOptions newOptsShowSettings(String imageNameAndTag) {\n-        return new DockerRunOptions(imageNameAndTag, \"\/jdk\/bin\/java\", \"-version\", \"-XshowSettings:system\");\n+    public static DockerRunOptions newOptsShowSettings(String imageName) {\n+        return new DockerRunOptions(imageName, \"\/jdk\/bin\/java\", \"-version\", \"-XshowSettings:system\");\n@@ -64,1 +89,1 @@\n-    public static DockerRunOptions newOpts(String imageNameAndTag, String testClass) {\n+    public static DockerRunOptions newOpts(String imageName, String testClass) {\n@@ -66,1 +91,1 @@\n-            new DockerRunOptions(imageNameAndTag, \"\/jdk\/bin\/java\", testClass);\n+            new DockerRunOptions(imageName, \"\/jdk\/bin\/java\", testClass);\n","filename":"test\/lib\/jdk\/test\/lib\/containers\/docker\/Common.java","additions":34,"deletions":9,"binary":false,"changes":43,"status":"modified"}]}