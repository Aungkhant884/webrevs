{"files":[{"patch":"@@ -4782,0 +4782,1 @@\n+  const bool major_gte_17    = _major_version >= JAVA_17_VERSION;\n@@ -4800,1 +4801,1 @@\n-          (is_abstract && (is_private || is_static || is_strict))) {\n+          (is_abstract && (is_private || is_static || (!major_gte_17 && is_strict)))) {\n@@ -4827,1 +4828,1 @@\n-              (major_gte_1_5 && (is_synchronized || is_strict)))) {\n+              (major_gte_1_5 && (is_synchronized || (!major_gte_17 && is_strict))))) {\n","filename":"src\/hotspot\/share\/classfile\/classFileParser.cpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -0,0 +1,70 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/\/ Code below is equivalent to:\n+\/\/ public interface AbstractStrictfpIntMethod60 {\n+\/\/    public abstract double bar();\n+\/\/ }\n+\n+class AbstractStrictfpIntMethod60 {\n+  0xCAFEBABE;\n+  0; \/\/ minor version\n+  60; \/\/ version\n+  [9] { \/\/ Constant Pool\n+    ; \/\/ first element is empty\n+    class #2; \/\/ #1     at 0x0A\n+    Utf8 \"AbstractStrictfpIntMethod60\"; \/\/ #2     at 0x0D\n+    class #4; \/\/ #3     at 0x2B\n+    Utf8 \"java\/lang\/Object\"; \/\/ #4     at 0x2E\n+    Utf8 \"bar\"; \/\/ #5     at 0x41\n+    Utf8 \"()D\"; \/\/ #6     at 0x47\n+    Utf8 \"SourceFile\"; \/\/ #7     at 0x4D\n+    Utf8 \"AbstractStrictfpIntMethod60.java\"; \/\/ #8     at 0x5A\n+  } \/\/ Constant Pool\n+\n+  0x0601; \/\/ access [ ACC_PUBLIC ACC_INTERFACE ]\n+  #1;\/\/ this_cpx\n+  #3;\/\/ super_cpx\n+\n+  [0] { \/\/ Interfaces\n+  } \/\/ Interfaces\n+\n+  [0] { \/\/ Fields\n+  } \/\/ Fields\n+\n+  [1] { \/\/ Methods\n+    {  \/\/ method at 0x89\n+      0x0C01; \/\/ access [public abstract strictfp]\n+      #5; \/\/ name_index       : bar\n+      #6; \/\/ descriptor_index : ()D\n+      [0] { \/\/ Attributes\n+      } \/\/ Attributes\n+    }\n+  } \/\/ Methods\n+\n+  [1] { \/\/ Attributes\n+    Attr(#7, 2) { \/\/ SourceFile at 0x93\n+      #8;\n+    } \/\/ end SourceFile\n+  } \/\/ Attributes\n+} \/\/ end class AbstractStrictfpIntMethod60\n","filename":"test\/hotspot\/jtreg\/runtime\/strictfp\/AbstractStrictfpIntMethod60.jcod","additions":70,"deletions":0,"binary":false,"changes":70,"status":"added"},{"patch":"@@ -0,0 +1,70 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/\/ Code below is equivalent to\n+\/\/ public interface AbstractStrictfpIntMethod61 {\n+\/\/    public abstract double bar();\n+\/\/ }\n+\n+class AbstractStrictfpIntMethod61 {\n+  0xCAFEBABE;\n+  0; \/\/ minor version\n+  61; \/\/ version\n+  [9] { \/\/ Constant Pool\n+    ; \/\/ first element is empty\n+    class #2; \/\/ #1     at 0x0A\n+    Utf8 \"AbstractStrictfpIntMethod61\"; \/\/ #2     at 0x0D\n+    class #4; \/\/ #3     at 0x2B\n+    Utf8 \"java\/lang\/Object\"; \/\/ #4     at 0x2E\n+    Utf8 \"bar\"; \/\/ #5     at 0x41\n+    Utf8 \"()D\"; \/\/ #6     at 0x47\n+    Utf8 \"SourceFile\"; \/\/ #7     at 0x4D\n+    Utf8 \"AbstractStrictfpIntMethod61.java\"; \/\/ #8     at 0x5A\n+  } \/\/ Constant Pool\n+\n+  0x0601; \/\/ access [ ACC_PUBLIC ACC_INTERFACE ]\n+  #1;\/\/ this_cpx\n+  #3;\/\/ super_cpx\n+\n+  [0] { \/\/ Interfaces\n+  } \/\/ Interfaces\n+\n+  [0] { \/\/ Fields\n+  } \/\/ Fields\n+\n+  [1] { \/\/ Methods\n+    {  \/\/ method at 0x89\n+      0x0C01; \/\/ access [public abstract strictfp]\n+      #5; \/\/ name_index       : bar\n+      #6; \/\/ descriptor_index : ()D\n+      [0] { \/\/ Attributes\n+      } \/\/ Attributes\n+    }\n+  } \/\/ Methods\n+\n+  [1] { \/\/ Attributes\n+    Attr(#7, 2) { \/\/ SourceFile at 0x93\n+      #8;\n+    } \/\/ end SourceFile\n+  } \/\/ Attributes\n+} \/\/ end class AbstractStrictfpIntMethod61\n","filename":"test\/hotspot\/jtreg\/runtime\/strictfp\/AbstractStrictfpIntMethod61.jcod","additions":70,"deletions":0,"binary":false,"changes":70,"status":"added"},{"patch":"@@ -0,0 +1,102 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/\/ Code below is equivalent to\n+\/\/ public abstract class AbstractStrictfpMethod60 {\n+\/\/     public AbstractStrictfpMethod60() {}\n+\/\/\n+\/\/     abstract strictfp double foo();\n+\/\/ }\n+\n+class AbstractStrictfpMethod60 {\n+  0xCAFEBABE;\n+  0; \/\/ minor version\n+  60; \/\/ version\n+  [15] { \/\/ Constant Pool\n+    ; \/\/ first element is empty\n+    Method #2 #3; \/\/ #1     at 0x0A\n+    class #4; \/\/ #2     at 0x0F\n+    NameAndType #5 #6; \/\/ #3     at 0x12\n+    Utf8 \"java\/lang\/Object\"; \/\/ #4     at 0x17\n+    Utf8 \"<init>\"; \/\/ #5     at 0x2A\n+    Utf8 \"()V\"; \/\/ #6     at 0x33\n+    class #8; \/\/ #7     at 0x39\n+    Utf8 \"AbstractStrictfpMethod60\"; \/\/ #8     at 0x3C\n+    Utf8 \"Code\"; \/\/ #9     at 0x57\n+    Utf8 \"LineNumberTable\"; \/\/ #10     at 0x5E\n+    Utf8 \"foo\"; \/\/ #11     at 0x70\n+    Utf8 \"()D\"; \/\/ #12     at 0x76\n+    Utf8 \"SourceFile\"; \/\/ #13     at 0x7C\n+    Utf8 \"AbstractStrictfpMethod60.java\"; \/\/ #14     at 0x89\n+  } \/\/ Constant Pool\n+\n+  0x0421; \/\/ access [ ACC_PUBLIC ACC_SUPER ACC_ABSTRACT ]\n+  #7;\/\/ this_cpx\n+  #2;\/\/ super_cpx\n+\n+  [0] { \/\/ Interfaces\n+  } \/\/ Interfaces\n+\n+  [0] { \/\/ Fields\n+  } \/\/ Fields\n+\n+  [2] { \/\/ Methods\n+    {  \/\/ method at 0xB5\n+      0x0001; \/\/ access\n+      #5; \/\/ name_index       : <init>\n+      #6; \/\/ descriptor_index : ()V\n+      [1] { \/\/ Attributes\n+        Attr(#9, 29) { \/\/ Code at 0xBD\n+          1; \/\/ max_stack\n+          1; \/\/ max_locals\n+          Bytes[5]{\n+            0x2AB70001B1;\n+          }\n+          [0] { \/\/ Traps\n+          } \/\/ end Traps\n+          [1] { \/\/ Attributes\n+            Attr(#10, 6) { \/\/ LineNumberTable at 0xD4\n+              [1] { \/\/ line_number_table\n+                0  2; \/\/  at 0xE0\n+              }\n+            } \/\/ end LineNumberTable\n+          } \/\/ Attributes\n+        } \/\/ end Code\n+      } \/\/ Attributes\n+    }\n+    ;\n+    {  \/\/ method at 0xE0\n+      0x0C00; \/\/ access [ACC_STRICTFP ACC_ABSTRACT]\n+      #11; \/\/ name_index       : foo\n+      #12; \/\/ descriptor_index : ()D\n+      [0] { \/\/ Attributes\n+      } \/\/ Attributes\n+    }\n+  } \/\/ Methods\n+\n+  [1] { \/\/ Attributes\n+    Attr(#13, 2) { \/\/ SourceFile at 0xEA\n+      #14;\n+    } \/\/ end SourceFile\n+  } \/\/ Attributes\n+} \/\/ end class AbstractStrictfpMethod60\n","filename":"test\/hotspot\/jtreg\/runtime\/strictfp\/AbstractStrictfpMethod60.jcod","additions":102,"deletions":0,"binary":false,"changes":102,"status":"added"},{"patch":"@@ -0,0 +1,102 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/\/ Code below is equivalent to\n+\/\/ public abstract class AbstractStrictfpMethod61 {\n+\/\/     public AbstractStrictfpMethod61() {}\n+\/\/\n+\/\/     abstract strictfp double foo();\n+\/\/ }\n+\n+class AbstractStrictfpMethod61 {\n+  0xCAFEBABE;\n+  0; \/\/ minor version\n+  61; \/\/ version\n+  [15] { \/\/ Constant Pool\n+    ; \/\/ first element is empty\n+    Method #2 #3; \/\/ #1     at 0x0A\n+    class #4; \/\/ #2     at 0x0F\n+    NameAndType #5 #6; \/\/ #3     at 0x12\n+    Utf8 \"java\/lang\/Object\"; \/\/ #4     at 0x17\n+    Utf8 \"<init>\"; \/\/ #5     at 0x2A\n+    Utf8 \"()V\"; \/\/ #6     at 0x33\n+    class #8; \/\/ #7     at 0x39\n+    Utf8 \"AbstractStrictfpMethod61\"; \/\/ #8     at 0x3C\n+    Utf8 \"Code\"; \/\/ #9     at 0x57\n+    Utf8 \"LineNumberTable\"; \/\/ #10     at 0x5E\n+    Utf8 \"foo\"; \/\/ #11     at 0x70\n+    Utf8 \"()D\"; \/\/ #12     at 0x76\n+    Utf8 \"SourceFile\"; \/\/ #13     at 0x7C\n+    Utf8 \"AbstractStrictfpMethod61.java\"; \/\/ #14     at 0x89\n+  } \/\/ Constant Pool\n+\n+  0x0421; \/\/ access [ ACC_PUBLIC ACC_SUPER ACC_ABSTRACT ]\n+  #7;\/\/ this_cpx\n+  #2;\/\/ super_cpx\n+\n+  [0] { \/\/ Interfaces\n+  } \/\/ Interfaces\n+\n+  [0] { \/\/ Fields\n+  } \/\/ Fields\n+\n+  [2] { \/\/ Methods\n+    {  \/\/ method at 0xB5\n+      0x0001; \/\/ access\n+      #5; \/\/ name_index       : <init>\n+      #6; \/\/ descriptor_index : ()V\n+      [1] { \/\/ Attributes\n+        Attr(#9, 29) { \/\/ Code at 0xBD\n+          1; \/\/ max_stack\n+          1; \/\/ max_locals\n+          Bytes[5]{\n+            0x2AB70001B1;\n+          }\n+          [0] { \/\/ Traps\n+          } \/\/ end Traps\n+          [1] { \/\/ Attributes\n+            Attr(#10, 6) { \/\/ LineNumberTable at 0xD4\n+              [1] { \/\/ line_number_table\n+                0  2; \/\/  at 0xE0\n+              }\n+            } \/\/ end LineNumberTable\n+          } \/\/ Attributes\n+        } \/\/ end Code\n+      } \/\/ Attributes\n+    }\n+    ;\n+    {  \/\/ method at 0xE0\n+      0x0C00; \/\/ access [ACC_STRICTFP ACC_ABSTRACT]\n+      #11; \/\/ name_index       : foo\n+      #12; \/\/ descriptor_index : ()D\n+      [0] { \/\/ Attributes\n+      } \/\/ Attributes\n+    }\n+  } \/\/ Methods\n+\n+  [1] { \/\/ Attributes\n+    Attr(#13, 2) { \/\/ SourceFile at 0xEA\n+      #14;\n+    } \/\/ end SourceFile\n+  } \/\/ Attributes\n+} \/\/ end class AbstractStrictfpMethod61\n","filename":"test\/hotspot\/jtreg\/runtime\/strictfp\/AbstractStrictfpMethod61.jcod","additions":102,"deletions":0,"binary":false,"changes":102,"status":"added"},{"patch":"@@ -0,0 +1,72 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8266530\n+ * @compile AbstractStrictfpMethod60.jcod    AbstractStrictfpMethod61.jcod\n+ * @compile AbstractStrictfpIntMethod60.jcod AbstractStrictfpIntMethod61.jcod\n+ * @run main StrictfpModifierChecksTest\n+ *\/\n+\n+import java.util.List;\n+\n+\/*\n+ * Load classes and catch exceptions, or not depending on class file\n+ * version. A class or interface method with \"abstract strictfp\"\n+ * modifiers is rejected for a version 60.0 class file but accepted\n+ * for a version 61.0 class file. The bit position used for ACC_STRICT\n+ * is unassigned under version 61.0 and is thus ignored.\n+ *\/\n+\n+public class StrictfpModifierChecksTest {\n+    public static void main(String... args) throws Throwable {\n+\n+        for (String version60ClassName : List.of(\"AbstractStrictfpMethod60\",\n+                                                 \"AbstractStrictfpIntMethod60\")) {\n+            try {\n+                \/\/ The AbstractStrictfp*Method60 classes have a\n+                \/\/ combination of method modifiers, abstract &\n+                \/\/ strictfp, illegal for class file version 60 per\n+                \/\/ JVMS 4.6. A ClassFormatError should be thrown when\n+                \/\/ trying to load the classes.\n+                Class<?> newClass = Class.forName(version60ClassName);\n+                throw new RuntimeException(\"Should not reach; expected ClassFormatError not thrown\");\n+            } catch (ClassFormatError cfe) {\n+                \/\/ Check of content will need updating if the error\n+                \/\/ message is rephrased.\n+                String message = cfe.getMessage();\n+                if (!message.contains(\"has illegal modifier\")) {\n+                    throw new RuntimeException(\"Unexpected exception message: \" + message);\n+                }\n+            }\n+        }\n+\n+        for (String version61ClassName : List.of(\"AbstractStrictfpMethod61\",\n+                                                 \"AbstractStrictfpIntMethod61\")) {\n+            \/\/ Same combination of modifiers is accpeted in class file version 61\n+            Class<?> newClass = Class.forName(version61ClassName);\n+            \/\/ Should succeed without an exception\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/runtime\/strictfp\/StrictfpModifierChecksTest.java","additions":72,"deletions":0,"binary":false,"changes":72,"status":"added"}]}