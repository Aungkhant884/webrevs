{"files":[{"patch":"@@ -35,0 +35,1 @@\n+var fallbackPattern = \"\";\n@@ -37,1 +38,2 @@\n-var MAX_RESULTS_PER_CATEGORY = 500;\n+var MIN_RESULTS = 3;\n+var MAX_RESULTS = 500;\n@@ -42,1 +44,1 @@\n-function getHighlightedText(item, matcher) {\n+function getHighlightedText(item, matcher, fallbackMatcher) {\n@@ -44,1 +46,5 @@\n-    return escapedItem.replace(matcher, highlight);\n+    var highlighted = escapedItem.replace(matcher, highlight);\n+    if (highlighted === escapedItem) {\n+        highlighted = escapedItem.replace(fallbackMatcher, highlight)\n+    }\n+    return highlighted;\n@@ -63,1 +69,0 @@\n-        return urlPrefix;\n@@ -67,1 +72,1 @@\n-function makeCamelCaseRegex(term) {\n+function createSearchPattern(term) {\n@@ -96,6 +101,8 @@\n-    $(\"#search\").val('');\n-    $(\"#search\").prop(\"disabled\", false);\n-    $(\"#reset\").prop(\"disabled\", false);\n-    $(\"#search\").val(watermark).addClass('watermark');\n-    $(\"#search\").blur(function() {\n-        if ($(this).val().length == 0) {\n+    var search = $(\"#search\");\n+    var reset = $(\"#reset\");\n+    search.val('');\n+    search.prop(\"disabled\", false);\n+    reset.prop(\"disabled\", false);\n+    search.val(watermark).addClass('watermark');\n+    search.blur(function() {\n+        if ($(this).val().length === 0) {\n@@ -105,2 +112,2 @@\n-    $(\"#search\").on('click keydown paste', function() {\n-        if ($(this).val() == watermark) {\n+    search.on('click keydown paste', function() {\n+        if ($(this).val() === watermark) {\n@@ -110,3 +117,2 @@\n-    $(\"#reset\").click(function() {\n-        $(\"#search\").val('');\n-        $(\"#search\").focus();\n+    reset.click(function() {\n+        search.val('').focus();\n@@ -114,2 +120,1 @@\n-    $(\"#search\").focus();\n-    $(\"#search\")[0].setSelectionRange(0, 0);\n+    search.focus()[0].setSelectionRange(0, 0);\n@@ -145,0 +150,1 @@\n+        var fallbackMatcher = new RegExp(fallbackPattern, \"gi\")\n@@ -146,1 +152,1 @@\n-            label = getHighlightedText(item.l, matcher);\n+            label = getHighlightedText(item.l, matcher, fallbackMatcher);\n@@ -148,1 +154,1 @@\n-            label = getHighlightedText(item.l, matcher);\n+            label = getHighlightedText(item.l, matcher, fallbackMatcher);\n@@ -151,2 +157,2 @@\n-                    ? getHighlightedText(item.p + \".\" + item.l, matcher)\n-                    : getHighlightedText(item.l, matcher);\n+                    ? getHighlightedText(item.p + \".\" + item.l, matcher, fallbackMatcher)\n+                    : getHighlightedText(item.l, matcher, fallbackMatcher);\n@@ -155,2 +161,2 @@\n-                    ? getHighlightedText(item.p + \".\" + item.c + \".\" + item.l, matcher)\n-                    : getHighlightedText(item.c + \".\" + item.l, matcher);\n+                    ? getHighlightedText(item.p + \".\" + item.c + \".\" + item.l, matcher, fallbackMatcher)\n+                    : getHighlightedText(item.c + \".\" + item.l, matcher, fallbackMatcher);\n@@ -158,1 +164,1 @@\n-            label = getHighlightedText(item.l, matcher);\n+            label = getHighlightedText(item.l, matcher, fallbackMatcher);\n@@ -189,1 +195,0 @@\n-    var delta = 0;\n@@ -191,1 +196,1 @@\n-    if (index === 0 || \/\\W\/.test(input[index - 1]) || \"_\" === input[index - 1] || \"_\" === input[index]) {\n+    if (index === 0 || \/\\W\/.test(input[index - 1]) || \"_\" === input[index]) {\n@@ -193,1 +198,1 @@\n-    } else if (input[index] === input[index].toUpperCase() && !\/^[A-Z0-9_$]+$\/.test(input)) {\n+    } else if (\"_\" === input[index - 1] || (input[index] === input[index].toUpperCase() && !\/^[A-Z0-9_$]+$\/.test(input))) {\n@@ -198,0 +203,1 @@\n+    var endOfName = leftParen > -1 ? leftParen : input.length;\n@@ -200,1 +206,0 @@\n-        var endOfName = leftParen > -1 ? leftParen : input.length;\n@@ -208,0 +213,1 @@\n+    var delta = match[0].length === endOfName ? 0 : 1; \/\/ rank full match higher than partial match\n@@ -225,3 +231,2 @@\n-    var newResults = [];\n-\n-    searchPattern = makeCamelCaseRegex(request.term);\n+    searchPattern = createSearchPattern(request.term);\n+    fallbackPattern = createSearchPattern(request.term.toLowerCase());\n@@ -232,1 +237,1 @@\n-    var boundaryMatcher = createMatcher(\"\\\\b\" + searchPattern, \"\");\n+    var fallbackMatcher = new RegExp(fallbackPattern, \"i\");\n@@ -234,61 +239,18 @@\n-    function concatResults(a1, a2) {\n-        a2.sort(function(e1, e2) {\n-            return e1.ranking - e2.ranking;\n-        });\n-        a1 = a1.concat(a2.map(function(e) { return e.item; }));\n-        a2.length = 0;\n-        return a1;\n-    }\n-\n-    if (moduleSearchIndex) {\n-        $.each(moduleSearchIndex, function(index, item) {\n-            item.category = catModules;\n-            var ranking = rankMatch(boundaryMatcher.exec(item.l), catModules);\n-            if (ranking < RANKING_THRESHOLD) {\n-                newResults.push({ ranking: ranking, item: item });\n-            }\n-            return newResults.length < MAX_RESULTS_PER_CATEGORY;\n-        });\n-        result = concatResults(result, newResults);\n-    }\n-    if (packageSearchIndex) {\n-        $.each(packageSearchIndex, function(index, item) {\n-            item.category = catPackages;\n-            var name = (item.m && request.term.indexOf(\"\/\") > -1)\n-                ? (item.m + \"\/\" + item.l)\n-                : item.l;\n-            var ranking = rankMatch(boundaryMatcher.exec(name), catPackages);\n-            if (ranking < RANKING_THRESHOLD) {\n-                newResults.push({ ranking: ranking, item: item });\n-            }\n-            return newResults.length < MAX_RESULTS_PER_CATEGORY;\n-        });\n-        result = concatResults(result, newResults);\n-    }\n-    if (typeSearchIndex) {\n-        $.each(typeSearchIndex, function(index, item) {\n-            item.category = catTypes;\n-            var name = request.term.indexOf(\".\") > -1\n-                ? item.p + \".\" + item.l\n-                : item.l;\n-            var ranking = rankMatch(camelCaseMatcher.exec(name), catTypes);\n-            if (ranking < RANKING_THRESHOLD) {\n-                newResults.push({ ranking: ranking, item: item });\n-            }\n-            return newResults.length < MAX_RESULTS_PER_CATEGORY;\n-        });\n-        result = concatResults(result, newResults);\n-    }\n-    if (memberSearchIndex) {\n-        $.each(memberSearchIndex, function(index, item) {\n-            item.category = catMembers;\n-            var name = request.term.indexOf(\".\") > -1\n-                ? item.p + \".\" + item.c + \".\" + item.l\n-                : item.l;\n-            var ranking = rankMatch(camelCaseMatcher.exec(name), catMembers);\n-            if (ranking < RANKING_THRESHOLD) {\n-                newResults.push({ ranking: ranking, item: item });\n-            }\n-            return newResults.length < MAX_RESULTS_PER_CATEGORY;\n-        });\n-        result = concatResults(result, newResults);\n+    function searchIndexWithMatcher(indexArray, matcher, category, nameFunc) {\n+        if (indexArray) {\n+            var newResults = [];\n+            $.each(indexArray, function (i, item) {\n+                item.category = category;\n+                var ranking = rankMatch(matcher.exec(nameFunc(item)), category);\n+                if (ranking < RANKING_THRESHOLD) {\n+                    newResults.push({ranking: ranking, item: item});\n+                }\n+                return newResults.length <= MAX_RESULTS;\n+            });\n+            return newResults.sort(function(e1, e2) {\n+                return e1.ranking - e2.ranking;\n+            }).map(function(e) {\n+                return e.item;\n+            });\n+        }\n+        return [];\n@@ -296,10 +258,9 @@\n-    if (tagSearchIndex) {\n-        $.each(tagSearchIndex, function(index, item) {\n-            item.category = catSearchTags;\n-            var ranking = rankMatch(boundaryMatcher.exec(item.l), catSearchTags);\n-            if (ranking < RANKING_THRESHOLD) {\n-                newResults.push({ ranking: ranking, item: item });\n-            }\n-            return newResults.length < MAX_RESULTS_PER_CATEGORY;\n-        });\n-        result = concatResults(result, newResults);\n+    function searchIndex(indexArray, category, nameFunc) {\n+        var primaryResults = searchIndexWithMatcher(indexArray, camelCaseMatcher, category, nameFunc);\n+        result = result.concat(primaryResults);\n+        if (primaryResults.length <= MIN_RESULTS && camelCaseMatcher.flags.indexOf(\"i\") === -1) {\n+            var secondaryResults = searchIndexWithMatcher(indexArray, fallbackMatcher, category, nameFunc);\n+            result = result.concat(secondaryResults.filter(function (item) {\n+                return primaryResults.indexOf(item) === -1;\n+            }));\n+        }\n@@ -307,0 +268,15 @@\n+\n+    searchIndex(moduleSearchIndex, catModules, function(item) { return item.l; });\n+    searchIndex(packageSearchIndex, catPackages, function(item) {\n+        return (item.m && request.term.indexOf(\"\/\") > -1)\n+            ? (item.m + \"\/\" + item.l) : item.l;\n+    });\n+    searchIndex(typeSearchIndex, catTypes, function(item) {\n+        return request.term.indexOf(\".\") > -1 ? item.p + \".\" + item.l : item.l;\n+    });\n+    searchIndex(memberSearchIndex, catMembers, function(item) {\n+        return request.term.indexOf(\".\") > -1\n+            ? item.p + \".\" + item.c + \".\" + item.l : item.l;\n+    });\n+    searchIndex(tagSearchIndex, catSearchTags, function(item) { return item.l; });\n+\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/search.js","additions":80,"deletions":104,"binary":false,"changes":184,"status":"modified"},{"patch":"@@ -175,1 +175,3 @@\n-                    c -> new TreeSet<>(mainComparator))\n+                    c -> new TreeSet<>(c == IndexItem.Category.TYPES\n+                            ? makeTypeSearchIndexComparator()\n+                            : makeGenericSearchIndexComparator()))\n@@ -347,0 +349,24 @@\n+    \/**\n+     * Returns a Comparator for IndexItems in the types category of the search index.\n+     * Items are compared by short name, falling back to the main comparator if names are equal.\n+     *\n+     * @return a Comparator\n+     *\/\n+    public Comparator<IndexItem> makeTypeSearchIndexComparator() {\n+        Comparator<IndexItem> simpleNameComparator =\n+                (ii1, ii2) -> utils.compareStrings(ii1.getSimpleName(), ii2.getSimpleName());\n+        return simpleNameComparator.thenComparing(mainComparator);\n+    }\n+\n+    \/**\n+     * Returns a Comparator for IndexItems in the modules, packages, members, and search tags\n+     * categories of the search index.\n+     * Items are compared by label, falling back to the main comparator if names are equal.\n+     *\n+     * @return a Comparator\n+     *\/\n+    public Comparator<IndexItem> makeGenericSearchIndexComparator() {\n+        Comparator<IndexItem> labelComparator =\n+                (ii1, ii2) -> utils.compareStrings(ii1.getLabel(), ii2.getLabel());\n+        return labelComparator.thenComparing(mainComparator);\n+    }\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/IndexBuilder.java","additions":27,"deletions":1,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -715,1 +715,1 @@\n-                \"function concatResults(a1, a2) {\",\n+                \"function searchIndexWithMatcher(indexArray, matcher, category, nameFunc) {\",\n@@ -717,2 +717,2 @@\n-                    $(\"#search\").on('click keydown paste', function() {\n-                            if ($(this).val() == watermark) {\n+                    search.on('click keydown paste', function() {\n+                            if ($(this).val() === watermark) {\n@@ -740,1 +740,0 @@\n-                            return urlPrefix;\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testSearch\/TestSearch.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -96,2 +96,2 @@\n-        checkSearch(inv, \"Mapmodule\", List.of());\n-        checkSearch(inv, \"Mappkg\", List.of());\n+        checkSearch(inv, \"Mapmodule\", List.of(\"mapmodule\"));\n+        checkSearch(inv, \"Mappkg\", List.of(\"mapmodule\/mappkg\", \"mapmodule\/mappkg.impl\", \"mappkg.system.property\"));\n@@ -104,2 +104,2 @@\n-        checkSearch(inv, \"Mymap\", List.of());\n-        checkSearch(inv, \"Mymap()\", List.of());\n+        checkSearch(inv, \"Mymap\", List.of(\"mappkg.impl.MyMap\", \"mappkg.impl.MyMap.MyMap()\", \"mappkg.impl.MyMap.MyMap(Map)\"));\n+        checkSearch(inv, \"Mymap()\", List.of(\"mappkg.impl.MyMap.MyMap()\"));\n@@ -110,3 +110,4 @@\n-        checkSearch(inv, \"Map\", List.of(\"mappkg.Map\", \"mappkg.impl.MyMap\", \"mappkg.impl.MyMap.MyMap()\",\n-                                        \"mappkg.impl.MyMap.MyMap(Map)\"));\n-        checkSearch(inv, \"MAP\", List.of());\n+        checkSearch(inv, \"Map\", List.of(\"mapmodule\", \"mapmodule\/mappkg\", \"mapmodule\/mappkg.impl\", \"mappkg.Map\", \"mappkg.impl.MyMap\",\n+                                        \"mappkg.impl.MyMap.MyMap()\", \"mappkg.impl.MyMap.MyMap(Map)\", \"mappkg.system.property\"));\n+        checkSearch(inv, \"MAP\", List.of(\"mapmodule\", \"mapmodule\/mappkg\", \"mapmodule\/mappkg.impl\", \"mappkg.Map\", \"mappkg.impl.MyMap\",\n+                                        \"mappkg.impl.MyMap.MyMap()\", \"mappkg.impl.MyMap.MyMap(Map)\", \"mappkg.system.property\"));\n@@ -114,1 +115,1 @@\n-        checkSearch(inv, \"VALUE\", List.of(\"mappkg.impl.MyMap.OTHER_VALUE\"));\n+        checkSearch(inv, \"VALUE\", List.of(\"mappkg.impl.MyMap.OTHER_VALUE\", \"mappkg.impl.MyMap.some_value\"));\n@@ -116,1 +117,1 @@\n-        checkSearch(inv, \"Map.some_\", List.of(\"mappkg.impl.MyMap.some_value\"));\n+        checkSearch(inv, \"Map.Some_\", List.of(\"mappkg.impl.MyMap.some_value\"));\n@@ -126,1 +127,1 @@\n-        checkSearch(inv, \"Mym\", List.of());\n+        checkSearch(inv, \"Mym\", List.of(\"mappkg.impl.MyMap\", \"mappkg.impl.MyMap.MyMap()\", \"mappkg.impl.MyMap.MyMap(Map)\"));\n@@ -131,1 +132,1 @@\n-        checkSearch(inv, \"i.Mym.MyM(\", List.of());\n+        checkSearch(inv, \"i.Mym.MyM(\", List.of(\"mappkg.impl.MyMap.MyMap()\", \"mappkg.impl.MyMap.MyMap(Map)\"));\n@@ -145,7 +146,8 @@\n-        checkSearch(inv, \"Map.\", List.of(\"mappkg.Map.contains(Object)\", \"mappkg.Map.get(Object)\", \"mappkg.Map.iterate()\",\n-                                         \"mappkg.Map.put(Object, Object)\", \"mappkg.Map.remove(Object)\",\n-                                         \"mappkg.impl.MyMap.contains(Object)\", \"mappkg.impl.MyMap.get(Object)\",\n-                                         \"mappkg.impl.MyMap.iterate()\", \"mappkg.impl.MyMap.MyMap()\",\n-                                         \"mappkg.impl.MyMap.MyMap(Map)\", \"mappkg.impl.MyMap.OTHER_VALUE\",\n-                                         \"mappkg.impl.MyMap.put(Object, Object)\", \"mappkg.impl.MyMap.remove(Object)\",\n-                                         \"mappkg.impl.MyMap.some_value\"));\n+        checkSearch(inv, \"Map.\", List.of(\"mapmodule\/mappkg.impl\", \"mappkg.Map\", \"mappkg.Map.contains(Object)\",\n+                                         \"mappkg.Map.get(Object)\", \"mappkg.Map.iterate()\", \"mappkg.Map.put(Object, Object)\",\n+                                         \"mappkg.Map.remove(Object)\", \"mappkg.impl.MyMap.contains(Object)\",\n+                                         \"mappkg.impl.MyMap.get(Object)\", \"mappkg.impl.MyMap.iterate()\",\n+                                         \"mappkg.impl.MyMap.MyMap()\", \"mappkg.impl.MyMap.MyMap(Map)\",\n+                                         \"mappkg.impl.MyMap.OTHER_VALUE\", \"mappkg.impl.MyMap.put(Object, Object)\",\n+                                         \"mappkg.impl.MyMap.remove(Object)\", \"mappkg.impl.MyMap.some_value\",\n+                                         \"mappkg.system.property\"));\n@@ -168,2 +170,2 @@\n-        checkSearch(inv, \"search tag\", List.of(\"multiline search tag\", \"search tag\"));\n-        checkSearch(inv, \"search   tag\", List.of(\"multiline search tag\", \"search tag\"));\n+        checkSearch(inv, \"search tag\", List.of(\"search tag\", \"multiline search tag\"));\n+        checkSearch(inv, \"search   tag\", List.of(\"search tag\", \"multiline search tag\"));\n@@ -200,1 +202,1 @@\n-        checkSearch(inv, \"List\", List.of(\"listpkg.List\", \"listpkg.ListProvider\", \"listpkg.MyList\",\n+        checkSearch(inv, \"List\", List.of(\"listpkg\", \"listpkg.List\", \"listpkg.ListProvider\", \"listpkg.MyList\",\n@@ -205,1 +207,0 @@\n-\n@@ -233,1 +234,3 @@\n-        checkSearch(inv, \"L.l.o\", List.of());\n+        checkSearch(inv, \"L.l.o\", List.of(\"listpkg.List.of()\", \"listpkg.List.of(E)\", \"listpkg.List.of(E, E)\",\n+                        \"listpkg.List.of(E, E, E)\", \"listpkg.List.of(E, E, E, E)\", \"listpkg.List.of(E, E, E, E, E)\",\n+                        \"listpkg.List.of(E...)\"));\n@@ -284,1 +287,1 @@\n-        checkSearch(inv, \"Some\", List.of());\n+        checkSearch(inv, \"Some\", List.of(\"listpkg.Nolist.SOME_INT_CONSTANT\"));\n@@ -287,1 +290,1 @@\n-        checkSearch(inv, \"Int\", List.of());\n+        checkSearch(inv, \"Int\", List.of(\"listpkg.Nolist.SOME_INT_CONSTANT\"));\n@@ -298,1 +301,1 @@\n-        checkSearch(inv, \"ALL\", List.of());\n+        checkSearch(inv, \"ALL\", List.of(\"All Packages\", \"All Classes\"));\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testSearchScript\/TestSearchScript.java","additions":29,"deletions":26,"binary":false,"changes":55,"status":"modified"},{"patch":"@@ -50,0 +50,10 @@\n+var updateSearchResults = function() {};\n+\n+function indexFilesLoaded() {\n+    return moduleSearchIndex\n+        && packageSearchIndex\n+        && typeSearchIndex\n+        && memberSearchIndex\n+        && tagSearchIndex;\n+}\n+\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testSearchScript\/javadoc-search.js","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"}]}