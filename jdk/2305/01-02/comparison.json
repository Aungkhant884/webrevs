{"files":[{"patch":"@@ -82,1 +82,1 @@\n-      -framework Cocoa -framework JavaNativeFoundation\n+      -framework Cocoa\n","filename":"make\/test\/JtregNativeJdk.gmk","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -120,1 +120,0 @@\n-        \/\/[target performSelectorOnMainThread:aSelector withObject:arg waitUntilDone:wait];\n","filename":"src\/java.desktop\/macosx\/native\/libosxapp\/ThreadUtilities.m","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#import <JavaNativeFoundation\/JavaNativeFoundation.h>\n+#import <jni_util.h>\n@@ -32,0 +32,34 @@\n+#define JNI_COCOA_ENTER(env) \\\n+ NSAutoreleasePool *pool = [[NSAutoreleasePool alloc] init]; \\\n+ @try {\n+\n+#define JNI_COCOA_EXIT(env) \\\n+ } \\\n+ @catch (NSException *e) { \\\n+     NSLog(@\"%@\", [e callStackSymbols]); \\\n+ } \\\n+ @finally { \\\n+    [pool drain]; \\\n+  };\n+\n+\/*\n+ * Pass the block to a selector of a class that extends NSObject\n+ * There is no need to copy the block since this class always waits.\n+ *\/\n+@interface BlockRunner : NSObject { }\n+\n++ (void)invokeBlock:(void (^)())block;\n+@end\n+\n+@implementation BlockRunner\n+\n++ (void)invokeBlock:(void (^)())block{\n+  block();\n+}\n+\n++ (void)performBlock:(void (^)())block {\n+  [self performSelectorOnMainThread:@selector(invokeBlock:) withObject:block waitUntilDone:YES];\n+}\n+\n+@end\n+\n@@ -39,1 +73,1 @@\n-    JNF_COCOA_ENTER(env);\n+    JNI_COCOA_ENTER(env);\n@@ -71,1 +105,1 @@\n-        [JNFRunLoop performOnMainThreadWaiting:YES withBlock:block];\n+        [BlockRunner performBlock:block];\n@@ -74,1 +108,1 @@\n-    JNF_COCOA_EXIT(env);\n+    JNI_COCOA_EXIT(env);\n@@ -84,1 +118,1 @@\n-    JNF_COCOA_ENTER(env);\n+    JNI_COCOA_ENTER(env);\n@@ -100,1 +134,1 @@\n-        [JNFRunLoop performOnMainThreadWaiting:YES withBlock:block];\n+        [BlockRunner performBlock:block];\n@@ -103,1 +137,1 @@\n-    JNF_COCOA_EXIT(env);\n+    JNI_COCOA_EXIT(env);\n@@ -114,1 +148,1 @@\n-    JNF_COCOA_ENTER(env);\n+    JNI_COCOA_ENTER(env);\n@@ -120,1 +154,1 @@\n-    [JNFRunLoop performOnMainThreadWaiting:YES withBlock:block];\n+    [BlockRunner performBlock:block];\n@@ -122,1 +156,1 @@\n-  JNF_COCOA_EXIT(env);\n+  JNI_COCOA_EXIT(env);\n","filename":"test\/jdk\/java\/awt\/Window\/MainKeyWindowTest\/libTestMainKeyWindow.c","additions":44,"deletions":10,"binary":false,"changes":54,"status":"modified"}]}