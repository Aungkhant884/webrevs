{"files":[{"patch":"@@ -332,1 +332,2 @@\n-                                                  dcmdInfo *infoArray);\n+                                                  dcmdInfo *infoArray,\n+                                                  jint count);\n@@ -336,1 +337,2 @@\n-                                                  dcmdArgInfo *infoArray);\n+                                                  dcmdArgInfo *infoArray,\n+                                                  jint count);\n","filename":"src\/hotspot\/share\/include\/jmm.h","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1968,1 +1968,1 @@\n-          dcmdInfo* infoArray))\n+          dcmdInfo* infoArray, jint count))\n@@ -1987,1 +1987,5 @@\n-  int num_cmds = cmds_ah->length();\n+  const int num_cmds = cmds_ah->length();\n+  if (num_cmds != count) {\n+    assert(false, \"GetDiagnosticCommandInfo count mismatch (%d vs %d)\", count, num_cmds);\n+    THROW_MSG(vmSymbols::java_lang_InternalError(), \"GetDiagnosticCommandInfo count mismatch\");\n+  }\n@@ -2018,1 +2022,1 @@\n-          jstring command, dcmdArgInfo* infoArray))\n+          jstring command, dcmdArgInfo* infoArray, jint count))\n@@ -2042,2 +2046,4 @@\n-  if (array->length() == 0) {\n-    return;\n+  const int num_args = array->length();\n+  if (num_args != count) {\n+    assert(false, \"jmm_GetDiagnosticCommandArgumentsInfo count mismatch (%d vs %d)\", count, num_args);\n+    THROW_MSG(vmSymbols::java_lang_InternalError(), \"jmm_GetDiagnosticCommandArgumentsInfo count mismatch\");\n@@ -2045,1 +2051,1 @@\n-  for (int i = 0; i < array->length(); i++) {\n+  for (int i = 0; i < num_args; i++) {\n","filename":"src\/hotspot\/share\/services\/management.cpp","additions":12,"deletions":6,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -82,1 +82,1 @@\n-                                                   dcmd_arg_info_array);\n+                                                   dcmd_arg_info_array, num_arg);\n@@ -192,1 +192,1 @@\n-  jmm_interface->GetDiagnosticCommandInfo(env, commands, dcmd_info_array);\n+  jmm_interface->GetDiagnosticCommandInfo(env, commands, dcmd_info_array, num_commands);\n","filename":"src\/jdk.management\/share\/native\/libmanagement_ext\/DiagnosticCommandImpl.c","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}