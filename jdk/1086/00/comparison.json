{"files":[{"patch":"@@ -522,0 +522,2 @@\n+    LXVX_OPCODE    = (31u << OPCODE_SHIFT |  268u << 1),\n+    STXVX_OPCODE   = (31u << OPCODE_SHIFT |  396u << 1),\n@@ -2238,0 +2240,4 @@\n+  inline void lxvx(     VectorSRegister d, Register a);\n+  inline void lxvx(     VectorSRegister d, Register a, Register b);\n+  inline void stxvx(    VectorSRegister d, Register b);\n+  inline void stxvx(    VectorSRegister d, Register a, Register b);\n","filename":"src\/hotspot\/cpu\/ppc\/assembler_ppc.hpp","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -779,0 +779,4 @@\n+inline void Assembler::lxvx(    VectorSRegister d, Register s1)              { emit_int32( LXVX_OPCODE    | vsrt(d) | ra(0) | rb(s1)); }\n+inline void Assembler::lxvx(    VectorSRegister d, Register s1, Register s2) { emit_int32( LXVX_OPCODE    | vsrt(d) | ra0mem(s1) | rb(s2)); }\n+inline void Assembler::stxvx(   VectorSRegister d, Register s1)              { emit_int32( STXVX_OPCODE   | vsrs(d) | ra(0) | rb(s1)); }\n+inline void Assembler::stxvx(   VectorSRegister d, Register s1, Register s2) { emit_int32( STXVX_OPCODE   | vsrs(d) | ra0mem(s1) | rb(s2)); }\n","filename":"src\/hotspot\/cpu\/ppc\/assembler_ppc.inline.hpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1709,1 +1709,5 @@\n-        __ stxvd2x(Rsrc, R0);\n+        if (VM_Version::has_brw()) {\n+          __ stxvx(Rsrc, R0);\n+        } else {\n+          __ stxvd2x(Rsrc, R0);\n+        }\n@@ -1720,1 +1724,5 @@\n-        __ lxvd2x(Rdst, R0);\n+        if (VM_Version::has_brw()) {\n+          __ lxvx(Rdst, R0);\n+        } else {\n+          __ lxvd2x(Rdst, R0);\n+        }\n@@ -5563,1 +5571,1 @@\n-  predicate(n->as_LoadVector()->memory_size() == 16);\n+  predicate(n->as_LoadVector()->memory_size() == 16 && !VM_Version::has_brw());\n@@ -5575,0 +5583,13 @@\n+instruct loadV16_lxvx(vecX dst, indirect mem) %{\n+  predicate(n->as_LoadVector()->memory_size() == 16 && VM_Version::has_brw());\n+  match(Set dst (LoadVector mem));\n+  ins_cost(MEMORY_REF_COST);\n+\n+  format %{ \"LXVX     $dst, $mem \\t\/\/ load 16 byte Vector\" %}\n+  size(4);\n+  ins_encode %{\n+    __ lxvx($dst$$VectorSRegister, $mem$$Register);\n+  %}\n+  ins_pipe(pipe_class_default);\n+%}\n+\n@@ -6541,1 +6562,1 @@\n-  predicate(n->as_StoreVector()->memory_size() == 16);\n+  predicate(n->as_StoreVector()->memory_size() == 16 && !VM_Version::has_brw());\n@@ -6549,0 +6570,13 @@\n+  %}\n+  ins_pipe(pipe_class_default);\n+%}\n+\n+instruct storeV16_stxvx(indirect mem, vecX src) %{\n+  predicate(n->as_StoreVector()->memory_size() == 16 && VM_Version::has_brw());\n+  match(Set mem (StoreVector mem src));\n+  ins_cost(MEMORY_REF_COST);\n+\n+  format %{ \"STXVX     $mem, $src \\t\/\/ store 16-byte Vector\" %}\n+  size(4);\n+  ins_encode %{\n+    __ stxvx($src$$VectorSRegister, $mem$$Register);\n","filename":"src\/hotspot\/cpu\/ppc\/ppc.ad","additions":38,"deletions":4,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -1100,4 +1100,12 @@\n-        __ lxvd2x(tmp_vsr1, R3_ARG1);        \/\/ Load src\n-        __ stxvd2x(tmp_vsr1, R4_ARG2);       \/\/ Store to dst\n-        __ lxvd2x(tmp_vsr2, tmp1, R3_ARG1);  \/\/ Load src + 16\n-        __ stxvd2x(tmp_vsr2, tmp1, R4_ARG2); \/\/ Store to dst + 16\n+        if (VM_Version::has_brw()) {\n+          __ lxvx(tmp_vsr1, R3_ARG1);        \/\/ Load src\n+          __ stxvx(tmp_vsr1, R4_ARG2);       \/\/ Store to dst\n+          __ lxvx(tmp_vsr2, tmp1, R3_ARG1);  \/\/ Load src + 16\n+          __ stxvx(tmp_vsr2, tmp1, R4_ARG2); \/\/ Store to dst + 16\n+        }\n+        else {\n+          __ lxvd2x(tmp_vsr1, R3_ARG1);        \/\/ Load src\n+          __ stxvd2x(tmp_vsr1, R4_ARG2);       \/\/ Store to dst\n+          __ lxvd2x(tmp_vsr2, tmp1, R3_ARG1);  \/\/ Load src + 16\n+          __ stxvd2x(tmp_vsr2, tmp1, R4_ARG2); \/\/ Store to dst + 16\n+        }\n@@ -1371,4 +1379,11 @@\n-          __ lxvd2x(tmp_vsr1, R3_ARG1);        \/\/ Load from src.\n-          __ stxvd2x(tmp_vsr1, R4_ARG2);       \/\/ Store to dst.\n-          __ lxvd2x(tmp_vsr2, R3_ARG1, tmp1);  \/\/ Load from src + 16.\n-          __ stxvd2x(tmp_vsr2, R4_ARG2, tmp1); \/\/ Store to dst + 16.\n+          if (VM_Version::has_brw()) {\n+            __ lxvx(tmp_vsr1, R3_ARG1);        \/\/ Load from src.\n+            __ stxvx(tmp_vsr1, R4_ARG2);       \/\/ Store to dst.\n+            __ lxvx(tmp_vsr2, R3_ARG1, tmp1);  \/\/ Load from src + 16.\n+            __ stxvx(tmp_vsr2, R4_ARG2, tmp1); \/\/ Store to dst + 16.\n+          } else {\n+            __ lxvd2x(tmp_vsr1, R3_ARG1);        \/\/ Load from src.\n+            __ stxvd2x(tmp_vsr1, R4_ARG2);       \/\/ Store to dst.\n+            __ lxvd2x(tmp_vsr2, R3_ARG1, tmp1);  \/\/ Load from src + 16.\n+            __ stxvd2x(tmp_vsr2, R4_ARG2, tmp1); \/\/ Store to dst + 16.\n+          }\n@@ -1567,4 +1582,11 @@\n-      __ lxvd2x(tmp_vsr1, R3_ARG1);        \/\/ Load src\n-      __ stxvd2x(tmp_vsr1, R4_ARG2);       \/\/ Store to dst\n-      __ lxvd2x(tmp_vsr2, tmp1, R3_ARG1);  \/\/ Load src + 16\n-      __ stxvd2x(tmp_vsr2, tmp1, R4_ARG2); \/\/ Store to dst + 16\n+      if (VM_Version::has_brw()) {\n+        __ lxvx(tmp_vsr1, R3_ARG1);        \/\/ Load src\n+        __ stxvx(tmp_vsr1, R4_ARG2);       \/\/ Store to dst\n+        __ lxvx(tmp_vsr2, tmp1, R3_ARG1);  \/\/ Load src + 16\n+        __ stxvx(tmp_vsr2, tmp1, R4_ARG2); \/\/ Store to dst + 16\n+      } else {\n+        __ lxvd2x(tmp_vsr1, R3_ARG1);        \/\/ Load src\n+        __ stxvd2x(tmp_vsr1, R4_ARG2);       \/\/ Store to dst\n+        __ lxvd2x(tmp_vsr2, tmp1, R3_ARG1);  \/\/ Load src + 16\n+        __ stxvd2x(tmp_vsr2, tmp1, R4_ARG2); \/\/ Store to dst + 16\n+      }\n@@ -1722,4 +1744,11 @@\n-      __ lxvd2x(tmp_vsr2, tmp1, R3_ARG1);  \/\/ Load src+16\n-      __ lxvd2x(tmp_vsr1, R3_ARG1);        \/\/ Load src\n-      __ stxvd2x(tmp_vsr2, tmp1, R4_ARG2); \/\/ Store to dst+16\n-      __ stxvd2x(tmp_vsr1, R4_ARG2);       \/\/ Store to dst\n+      if (VM_Version::has_brw()) {\n+        __ lxvx(tmp_vsr2, tmp1, R3_ARG1);  \/\/ Load src+16\n+        __ lxvx(tmp_vsr1, R3_ARG1);        \/\/ Load src\n+        __ stxvx(tmp_vsr2, tmp1, R4_ARG2); \/\/ Store to dst+16\n+        __ stxvx(tmp_vsr1, R4_ARG2);       \/\/ Store to dst\n+      } else {\n+        __ lxvd2x(tmp_vsr2, tmp1, R3_ARG1);  \/\/ Load src+16\n+        __ lxvd2x(tmp_vsr1, R3_ARG1);        \/\/ Load src\n+        __ stxvd2x(tmp_vsr2, tmp1, R4_ARG2); \/\/ Store to dst+16\n+        __ stxvd2x(tmp_vsr1, R4_ARG2);       \/\/ Store to dst\n+      }\n@@ -1846,4 +1875,11 @@\n-      __ lxvd2x(tmp_vsr1, R3_ARG1);        \/\/ Load src\n-      __ stxvd2x(tmp_vsr1, R4_ARG2);       \/\/ Store to dst\n-      __ lxvd2x(tmp_vsr2, tmp1, R3_ARG1);  \/\/ Load src + 16\n-      __ stxvd2x(tmp_vsr2, tmp1, R4_ARG2); \/\/ Store to dst + 16\n+      if (VM_Version::has_brw()) {\n+        __ lxvx(tmp_vsr1, R3_ARG1);        \/\/ Load src\n+        __ stxvx(tmp_vsr1, R4_ARG2);       \/\/ Store to dst\n+        __ lxvx(tmp_vsr2, tmp1, R3_ARG1);  \/\/ Load src + 16\n+        __ stxvx(tmp_vsr2, tmp1, R4_ARG2); \/\/ Store to dst + 16\n+      } else {\n+        __ lxvd2x(tmp_vsr1, R3_ARG1);        \/\/ Load src\n+        __ stxvd2x(tmp_vsr1, R4_ARG2);       \/\/ Store to dst\n+        __ lxvd2x(tmp_vsr2, tmp1, R3_ARG1);  \/\/ Load src + 16\n+        __ stxvd2x(tmp_vsr2, tmp1, R4_ARG2); \/\/ Store to dst + 16\n+      }\n@@ -1979,4 +2015,11 @@\n-      __ lxvd2x(tmp_vsr2, tmp1, R3_ARG1);  \/\/ Load src+16\n-      __ lxvd2x(tmp_vsr1, R3_ARG1);        \/\/ Load src\n-      __ stxvd2x(tmp_vsr2, tmp1, R4_ARG2); \/\/ Store to dst+16\n-      __ stxvd2x(tmp_vsr1, R4_ARG2);       \/\/ Store to dst\n+      if (VM_Version::has_brw()) {\n+        __ lxvx(tmp_vsr2, tmp1, R3_ARG1);  \/\/ Load src+16\n+        __ lxvx(tmp_vsr1, R3_ARG1);        \/\/ Load src\n+        __ stxvx(tmp_vsr2, tmp1, R4_ARG2); \/\/ Store to dst+16\n+        __ stxvx(tmp_vsr1, R4_ARG2);       \/\/ Store to dst\n+      } else {\n+        __ lxvd2x(tmp_vsr2, tmp1, R3_ARG1);  \/\/ Load src+16\n+        __ lxvd2x(tmp_vsr1, R3_ARG1);        \/\/ Load src\n+        __ stxvd2x(tmp_vsr2, tmp1, R4_ARG2); \/\/ Store to dst+16\n+        __ stxvd2x(tmp_vsr1, R4_ARG2);       \/\/ Store to dst\n+      }\n","filename":"src\/hotspot\/cpu\/ppc\/stubGenerator_ppc.cpp","additions":67,"deletions":24,"binary":false,"changes":91,"status":"modified"}]}