{"files":[{"patch":"@@ -2037,1 +2037,1 @@\n-    private static final Appendable nonNullAppendable(Appendable a) {\n+    private static Appendable nonNullAppendable(Appendable a) {\n@@ -2758,1 +2758,1 @@\n-                        fs.print(null, l);\n+                        fs.print(this, null, l);\n@@ -2762,1 +2762,1 @@\n-                        fs.print((args == null ? null : args[last]), l);\n+                        fs.print(this, (args == null ? null : args[last]), l);\n@@ -2769,1 +2769,1 @@\n-                        fs.print((args == null ? null : args[lasto]), l);\n+                        fs.print(this, (args == null ? null : args[lasto]), l);\n@@ -2775,1 +2775,1 @@\n-                        fs.print((args == null ? null : args[last]), l);\n+                        fs.print(this, (args == null ? null : args[last]), l);\n@@ -2839,1 +2839,1 @@\n-        void print(Object arg, Locale l) throws IOException;\n+        void print(Formatter fmt, Object arg, Locale l) throws IOException;\n@@ -2843,1 +2843,1 @@\n-    private class FixedString implements FormatString {\n+    private static class FixedString implements FormatString {\n@@ -2853,2 +2853,2 @@\n-        public void print(Object arg, Locale l)\n-            throws IOException { a.append(s, start, end); }\n+        public void print(Formatter fmt, Object arg, Locale l)\n+            throws IOException { fmt.a.append(s, start, end); }\n@@ -2873,1 +2873,1 @@\n-    private class FormatSpecifier implements FormatString {\n+    private static class FormatSpecifier implements FormatString {\n@@ -2876,1 +2876,1 @@\n-        private Flags f = Flags.NONE;\n+        private int flags = Flags.NONE;\n@@ -2901,2 +2901,2 @@\n-            f = Flags.parse(s, start, end);\n-            if (f.contains(Flags.PREVIOUS))\n+            flags = Flags.parse(s, start, end);\n+            if (Flags.contains(flags, Flags.PREVIOUS))\n@@ -2938,1 +2938,1 @@\n-                    f.add(Flags.UPPERCASE);\n+                    flags = Flags.add(flags, Flags.UPPERCASE);\n@@ -2950,1 +2950,1 @@\n-                f = Flags.UPPERCASE;\n+                flags = Flags.UPPERCASE;\n@@ -2968,1 +2968,1 @@\n-                    f.add(Flags.UPPERCASE);\n+                    flags = Flags.add(flags, Flags.UPPERCASE);\n@@ -2989,1 +2989,1 @@\n-        public void print(Object arg, Locale l) throws IOException {\n+        public void print(Formatter fmt, Object arg, Locale l) throws IOException {\n@@ -2991,1 +2991,1 @@\n-                printDateTime(arg, l);\n+                printDateTime(fmt, arg, l);\n@@ -2998,1 +2998,1 @@\n-                printInteger(arg, l);\n+                printInteger(fmt, arg, l);\n@@ -3004,1 +3004,1 @@\n-                printFloat(arg, l);\n+                printFloat(fmt, arg, l);\n@@ -3007,1 +3007,1 @@\n-                printCharacter(arg, l);\n+                printCharacter(fmt, arg, l);\n@@ -3010,1 +3010,1 @@\n-                printBoolean(arg, l);\n+                printBoolean(fmt, arg, l);\n@@ -3013,1 +3013,1 @@\n-                printString(arg, l);\n+                printString(fmt, arg, l);\n@@ -3016,1 +3016,1 @@\n-                printHashCode(arg, l);\n+                printHashCode(fmt, arg, l);\n@@ -3019,1 +3019,1 @@\n-                a.append(System.lineSeparator());\n+                fmt.a.append(System.lineSeparator());\n@@ -3022,1 +3022,1 @@\n-                print(\"%\", l);\n+                print(fmt, \"%\", l);\n@@ -3029,1 +3029,1 @@\n-        private void printInteger(Object arg, Locale l) throws IOException {\n+        private void printInteger(Formatter fmt, Object arg, Locale l) throws IOException {\n@@ -3031,1 +3031,1 @@\n-                print(\"null\", l);\n+                print(fmt, \"null\", l);\n@@ -3033,1 +3033,1 @@\n-                print(((Byte)arg).byteValue(), l);\n+                print(fmt, ((Byte)arg).byteValue(), l);\n@@ -3035,1 +3035,1 @@\n-                print(((Short)arg).shortValue(), l);\n+                print(fmt, ((Short)arg).shortValue(), l);\n@@ -3037,1 +3037,1 @@\n-                print(((Integer)arg).intValue(), l);\n+                print(fmt, ((Integer)arg).intValue(), l);\n@@ -3039,1 +3039,1 @@\n-                print(((Long)arg).longValue(), l);\n+                print(fmt, ((Long)arg).longValue(), l);\n@@ -3041,1 +3041,1 @@\n-                print(((BigInteger)arg), l);\n+                print(fmt, ((BigInteger)arg), l);\n@@ -3046,1 +3046,1 @@\n-        private void printFloat(Object arg, Locale l) throws IOException {\n+        private void printFloat(Formatter fmt, Object arg, Locale l) throws IOException {\n@@ -3048,1 +3048,1 @@\n-                print(\"null\", l);\n+                print(fmt, \"null\", l);\n@@ -3050,1 +3050,1 @@\n-                print(((Float)arg).floatValue(), l);\n+                print(fmt, ((Float)arg).floatValue(), l);\n@@ -3052,1 +3052,1 @@\n-                print(((Double)arg).doubleValue(), l);\n+                print(fmt, ((Double)arg).doubleValue(), l);\n@@ -3054,1 +3054,1 @@\n-                print(((BigDecimal)arg), l);\n+                print(fmt, ((BigDecimal)arg), l);\n@@ -3059,1 +3059,1 @@\n-        private void printDateTime(Object arg, Locale l) throws IOException {\n+        private void printDateTime(Formatter fmt, Object arg, Locale l) throws IOException {\n@@ -3061,1 +3061,1 @@\n-                print(\"null\", l);\n+                print(fmt, \"null\", l);\n@@ -3082,1 +3082,1 @@\n-                print((TemporalAccessor) arg, c, l);\n+                print(fmt, (TemporalAccessor) arg, c, l);\n@@ -3089,1 +3089,1 @@\n-            print(cal, c, l);\n+            print(fmt, cal, c, l);\n@@ -3092,1 +3092,1 @@\n-        private void printCharacter(Object arg, Locale l) throws IOException {\n+        private void printCharacter(Formatter fmt, Object arg, Locale l) throws IOException {\n@@ -3094,1 +3094,1 @@\n-                print(\"null\", l);\n+                print(fmt, \"null\", l);\n@@ -3121,1 +3121,1 @@\n-            print(s, l);\n+            print(fmt, s, l);\n@@ -3124,1 +3124,1 @@\n-        private void printString(Object arg, Locale l) throws IOException {\n+        private void printString(Formatter fmt, Object arg, Locale l) throws IOException {\n@@ -3126,1 +3126,0 @@\n-                Formatter fmt = Formatter.this;\n@@ -3129,1 +3128,1 @@\n-                ((Formattable)arg).formatTo(fmt, f.valueOf(), width, precision);\n+                ((Formattable)arg).formatTo(fmt, flags, width, precision);\n@@ -3131,1 +3130,1 @@\n-                if (f.contains(Flags.ALTERNATE))\n+                if (Flags.contains(flags, Flags.ALTERNATE))\n@@ -3134,1 +3133,1 @@\n-                    print(\"null\", l);\n+                    print(fmt, \"null\", l);\n@@ -3136,1 +3135,1 @@\n-                    print(arg.toString(), l);\n+                    print(fmt, arg.toString(), l);\n@@ -3140,1 +3139,1 @@\n-        private void printBoolean(Object arg, Locale l) throws IOException {\n+        private void printBoolean(Formatter fmt, Object arg, Locale l) throws IOException {\n@@ -3148,1 +3147,1 @@\n-            print(s, l);\n+            print(fmt, s, l);\n@@ -3151,1 +3150,1 @@\n-        private void printHashCode(Object arg, Locale l) throws IOException {\n+        private void printHashCode(Formatter fmt, Object arg, Locale l) throws IOException {\n@@ -3155,1 +3154,1 @@\n-            print(s, l);\n+            print(fmt, s, l);\n@@ -3158,1 +3157,1 @@\n-        private void print(String s, Locale l) throws IOException {\n+        private void print(Formatter fmt, String s, Locale l) throws IOException {\n@@ -3161,1 +3160,1 @@\n-            if (f.contains(Flags.UPPERCASE))\n+            if (Flags.contains(flags, Flags.UPPERCASE))\n@@ -3163,1 +3162,1 @@\n-            appendJustified(a, s);\n+            appendJustified(fmt.a, s);\n@@ -3176,1 +3175,1 @@\n-             boolean padRight = f.contains(Flags.LEFT_JUSTIFY);\n+             boolean padRight = Flags.contains(flags, Flags.LEFT_JUSTIFY);\n@@ -3192,2 +3191,1 @@\n-            Flags dupf = f.dup().remove(Flags.UPPERCASE);\n-            sb.append(dupf.toString());\n+            sb.append(Flags.toString(Flags.remove(flags, Flags.UPPERCASE)));\n@@ -3201,2 +3199,2 @@\n-                sb.append(f.contains(Flags.UPPERCASE) ? 'T' : 't');\n-            sb.append(f.contains(Flags.UPPERCASE)\n+                sb.append(Flags.contains(flags, Flags.UPPERCASE) ? 'T' : 't');\n+            sb.append(Flags.contains(flags, Flags.UPPERCASE)\n@@ -3209,1 +3207,1 @@\n-                && f.contains(Flags.ALTERNATE))\n+                && Flags.contains(flags, Flags.ALTERNATE))\n@@ -3212,1 +3210,1 @@\n-            if (width == -1 && f.contains(Flags.LEFT_JUSTIFY))\n+            if (width == -1 && Flags.contains(flags, Flags.LEFT_JUSTIFY))\n@@ -3214,2 +3212,2 @@\n-            checkBadFlags(Flags.PLUS, Flags.LEADING_SPACE, Flags.ZERO_PAD,\n-                          Flags.GROUP, Flags.PARENTHESES);\n+            checkBadFlags(Flags.PLUS | Flags.LEADING_SPACE | Flags.ZERO_PAD |\n+                          Flags.GROUP | Flags.PARENTHESES);\n@@ -3223,2 +3221,2 @@\n-            checkBadFlags(Flags.ALTERNATE, Flags.PLUS, Flags.LEADING_SPACE,\n-                          Flags.ZERO_PAD, Flags.GROUP, Flags.PARENTHESES);\n+            checkBadFlags(Flags.ALTERNATE | Flags.PLUS | Flags.LEADING_SPACE |\n+                          Flags.ZERO_PAD | Flags.GROUP | Flags.PARENTHESES);\n@@ -3226,1 +3224,1 @@\n-            if (width == -1 && f.contains(Flags.LEFT_JUSTIFY))\n+            if (width == -1 && Flags.contains(flags, Flags.LEFT_JUSTIFY))\n@@ -3233,2 +3231,2 @@\n-            checkBadFlags(Flags.ALTERNATE, Flags.PLUS, Flags.LEADING_SPACE,\n-                          Flags.ZERO_PAD, Flags.GROUP, Flags.PARENTHESES);\n+            checkBadFlags(Flags.ALTERNATE | Flags.PLUS | Flags.LEADING_SPACE |\n+                          Flags.ZERO_PAD | Flags.GROUP | Flags.PARENTHESES);\n@@ -3236,1 +3234,1 @@\n-            if (width == -1 && f.contains(Flags.LEFT_JUSTIFY))\n+            if (width == -1 && Flags.contains(flags, Flags.LEFT_JUSTIFY))\n@@ -3253,4 +3251,4 @@\n-        private void checkBadFlags(Flags ... badFlags) {\n-            for (Flags badFlag : badFlags)\n-                if (f.contains(badFlag))\n-                    failMismatch(badFlag, c);\n+        private void checkBadFlags(int badFlags) {\n+            if ((flags & badFlags) != 0) {\n+                failMismatch(flags & badFlags, c);\n+            }\n@@ -3263,1 +3261,1 @@\n-                checkBadFlags(Flags.PARENTHESES, Flags.GROUP);\n+                checkBadFlags(Flags.PARENTHESES | Flags.GROUP);\n@@ -3280,1 +3278,1 @@\n-                && (f.contains(Flags.LEFT_JUSTIFY) || f.contains(Flags.ZERO_PAD)))\n+                && (Flags.containsAny(flags, Flags.LEFT_JUSTIFY | Flags.ZERO_PAD)))\n@@ -3284,3 +3282,3 @@\n-            if ((f.contains(Flags.PLUS) && f.contains(Flags.LEADING_SPACE))\n-                || (f.contains(Flags.LEFT_JUSTIFY) && f.contains(Flags.ZERO_PAD)))\n-                throw new IllegalFormatFlagsException(f.toString());\n+            if ((Flags.contains(flags, Flags.PLUS | Flags.LEADING_SPACE))\n+                || (Flags.contains(flags, Flags.LEFT_JUSTIFY | Flags.ZERO_PAD)))\n+                throw new IllegalFormatFlagsException(Flags.toString(flags));\n@@ -3294,3 +3292,3 @@\n-                if (f.valueOf() != Flags.LEFT_JUSTIFY.valueOf()\n-                    && f.valueOf() != Flags.NONE.valueOf())\n-                    throw new IllegalFormatFlagsException(f.toString());\n+                if (flags != Flags.LEFT_JUSTIFY\n+                    && flags != Flags.NONE)\n+                    throw new IllegalFormatFlagsException(Flags.toString(flags));\n@@ -3298,1 +3296,1 @@\n-                if (width == -1 && f.contains(Flags.LEFT_JUSTIFY))\n+                if (width == -1 && Flags.contains(flags, Flags.LEFT_JUSTIFY))\n@@ -3304,2 +3302,2 @@\n-                if (f.valueOf() != Flags.NONE.valueOf())\n-                    throw new IllegalFormatFlagsException(f.toString());\n+                if (flags != Flags.NONE)\n+                    throw new IllegalFormatFlagsException(Flags.toString(flags));\n@@ -3312,1 +3310,1 @@\n-        private void print(byte value, Locale l) throws IOException {\n+        private void print(Formatter fmt, byte value, Locale l) throws IOException {\n@@ -3319,1 +3317,1 @@\n-            print(v, l);\n+            print(fmt, v, l);\n@@ -3322,1 +3320,1 @@\n-        private void print(short value, Locale l) throws IOException {\n+        private void print(Formatter fmt, short value, Locale l) throws IOException {\n@@ -3330,1 +3328,1 @@\n-            print(v, l);\n+            print(fmt, v, l);\n@@ -3333,1 +3331,1 @@\n-        private void print(int value, Locale l) throws IOException {\n+        private void print(Formatter fmt, int value, Locale l) throws IOException {\n@@ -3341,1 +3339,1 @@\n-            print(v, l);\n+            print(fmt, v, l);\n@@ -3344,1 +3342,1 @@\n-        private void print(long value, Locale l) throws IOException {\n+        private void print(Formatter fmt, long value, Locale l) throws IOException {\n@@ -3356,1 +3354,1 @@\n-                localizedMagnitude(sb, valueStr, neg ? 1 : 0, f, adjustWidth(width, f, neg), l);\n+                localizedMagnitude(fmt, sb, valueStr, neg ? 1 : 0, flags, adjustWidth(width, flags, neg), l);\n@@ -3361,2 +3359,1 @@\n-                checkBadFlags(Flags.PARENTHESES, Flags.LEADING_SPACE,\n-                              Flags.PLUS);\n+                checkBadFlags(Flags.PARENTHESES | Flags.LEADING_SPACE | Flags.PLUS);\n@@ -3364,1 +3361,1 @@\n-                int len = (f.contains(Flags.ALTERNATE)\n+                int len = (Flags.contains(flags, Flags.ALTERNATE)\n@@ -3369,1 +3366,1 @@\n-                if (f.contains(Flags.ALTERNATE))\n+                if (Flags.contains(flags, Flags.ALTERNATE))\n@@ -3371,1 +3368,1 @@\n-                if (f.contains(Flags.ZERO_PAD)) {\n+                if (Flags.contains(flags, Flags.ZERO_PAD)) {\n@@ -3376,2 +3373,1 @@\n-                checkBadFlags(Flags.PARENTHESES, Flags.LEADING_SPACE,\n-                              Flags.PLUS);\n+                checkBadFlags(Flags.PARENTHESES | Flags.LEADING_SPACE | Flags.PLUS);\n@@ -3379,1 +3375,1 @@\n-                int len = (f.contains(Flags.ALTERNATE)\n+                int len = (Flags.contains(flags, Flags.ALTERNATE)\n@@ -3384,3 +3380,3 @@\n-                if (f.contains(Flags.ALTERNATE))\n-                    sb.append(f.contains(Flags.UPPERCASE) ? \"0X\" : \"0x\");\n-                if (f.contains(Flags.ZERO_PAD)) {\n+                if (Flags.contains(flags, Flags.ALTERNATE))\n+                    sb.append(Flags.contains(flags, Flags.UPPERCASE) ? \"0X\" : \"0x\");\n+                if (Flags.contains(flags, Flags.ZERO_PAD)) {\n@@ -3389,1 +3385,1 @@\n-                if (f.contains(Flags.UPPERCASE))\n+                if (Flags.contains(flags, Flags.UPPERCASE))\n@@ -3395,1 +3391,1 @@\n-            appendJustified(a, sb);\n+            appendJustified(fmt.a, sb);\n@@ -3401,1 +3397,1 @@\n-                if (f.contains(Flags.PLUS)) {\n+                if (Flags.contains(flags, Flags.PLUS)) {\n@@ -3403,1 +3399,1 @@\n-                } else if (f.contains(Flags.LEADING_SPACE)) {\n+                } else if (Flags.contains(flags, Flags.LEADING_SPACE)) {\n@@ -3407,1 +3403,1 @@\n-                if (f.contains(Flags.PARENTHESES))\n+                if (Flags.contains(flags, Flags.PARENTHESES))\n@@ -3417,1 +3413,1 @@\n-            if (neg && f.contains(Flags.PARENTHESES))\n+            if (neg && Flags.contains(flags, Flags.PARENTHESES))\n@@ -3422,1 +3418,1 @@\n-        private void print(BigInteger value, Locale l) throws IOException {\n+        private void print(Formatter fmt, BigInteger value, Locale l) throws IOException {\n@@ -3432,1 +3428,1 @@\n-                localizedMagnitude(sb, v.toString(), 0, f, adjustWidth(width, f, neg), l);\n+                localizedMagnitude(fmt, sb, v.toString(), 0, flags, adjustWidth(width, flags, neg), l);\n@@ -3437,1 +3433,1 @@\n-                if (neg && f.contains(Flags.PARENTHESES))\n+                if (neg && Flags.contains(flags, Flags.PARENTHESES))\n@@ -3441,1 +3437,1 @@\n-                if (f.contains(Flags.ALTERNATE)) {\n+                if (Flags.contains(flags, Flags.ALTERNATE)) {\n@@ -3445,1 +3441,1 @@\n-                if (f.contains(Flags.ZERO_PAD)) {\n+                if (Flags.contains(flags, Flags.ZERO_PAD)) {\n@@ -3453,1 +3449,1 @@\n-                if (neg && f.contains(Flags.PARENTHESES))\n+                if (neg && Flags.contains(flags, Flags.PARENTHESES))\n@@ -3457,1 +3453,1 @@\n-                if (f.contains(Flags.ALTERNATE)) {\n+                if (Flags.contains(flags, Flags.ALTERNATE)) {\n@@ -3459,1 +3455,1 @@\n-                    sb.append(f.contains(Flags.UPPERCASE) ? \"0X\" : \"0x\");\n+                    sb.append(Flags.contains(flags, Flags.UPPERCASE) ? \"0X\" : \"0x\");\n@@ -3461,1 +3457,1 @@\n-                if (f.contains(Flags.ZERO_PAD)) {\n+                if (Flags.contains(flags, Flags.ZERO_PAD)) {\n@@ -3464,1 +3460,1 @@\n-                if (f.contains(Flags.UPPERCASE))\n+                if (Flags.contains(flags, Flags.UPPERCASE))\n@@ -3473,1 +3469,1 @@\n-            appendJustified(a, sb);\n+            appendJustified(fmt.a, sb);\n@@ -3476,2 +3472,2 @@\n-        private void print(float value, Locale l) throws IOException {\n-            print((double) value, l);\n+        private void print(Formatter fmt, float value, Locale l) throws IOException {\n+            print(fmt, (double) value, l);\n@@ -3480,1 +3476,1 @@\n-        private void print(double value, Locale l) throws IOException {\n+        private void print(Formatter fmt, double value, Locale l) throws IOException {\n@@ -3492,1 +3488,1 @@\n-                    print(sb, v, l, f, c, precision, neg);\n+                    print(fmt, sb, v, l, flags, c, precision, neg);\n@@ -3494,1 +3490,1 @@\n-                    sb.append(f.contains(Flags.UPPERCASE)\n+                    sb.append(Flags.contains(flags, Flags.UPPERCASE)\n@@ -3500,1 +3496,1 @@\n-                sb.append(f.contains(Flags.UPPERCASE) ? \"NAN\" : \"NaN\");\n+                sb.append(Flags.contains(flags, Flags.UPPERCASE) ? \"NAN\" : \"NaN\");\n@@ -3504,1 +3500,1 @@\n-            appendJustified(a, sb);\n+            appendJustified(fmt.a, sb);\n@@ -3508,2 +3504,2 @@\n-        private void print(StringBuilder sb, double value, Locale l,\n-                           Flags f, char c, int precision, boolean neg)\n+        private void print(Formatter fmt, StringBuilder sb, double value, Locale l,\n+                           int flags, char c, int precision, boolean neg)\n@@ -3526,1 +3522,1 @@\n-                if (f.contains(Flags.ALTERNATE) && (prec == 0)) {\n+                if (Flags.contains(flags, Flags.ALTERNATE) && (prec == 0)) {\n@@ -3535,1 +3531,1 @@\n-                    newW = adjustWidth(width - exp.length - 1, f, neg);\n+                    newW = adjustWidth(width - exp.length - 1, flags, neg);\n@@ -3537,1 +3533,1 @@\n-                localizedMagnitude(sb, mant, 0, f, newW, l);\n+                localizedMagnitude(fmt, sb, mant, 0, flags, newW, l);\n@@ -3539,1 +3535,1 @@\n-                sb.append(f.contains(Flags.UPPERCASE) ? 'E' : 'e');\n+                sb.append(Flags.contains(flags, Flags.UPPERCASE) ? 'E' : 'e');\n@@ -3545,1 +3541,1 @@\n-                localizedMagnitudeExp(sb, exp, 1, l);\n+                localizedMagnitudeExp(fmt, sb, exp, 1, l);\n@@ -3560,1 +3556,1 @@\n-                if (f.contains(Flags.ALTERNATE) && (prec == 0))\n+                if (Flags.contains(flags, Flags.ALTERNATE) && (prec == 0))\n@@ -3565,2 +3561,2 @@\n-                    newW = adjustWidth(width, f, neg);\n-                localizedMagnitude(sb, mant, 0, f, newW, l);\n+                    newW = adjustWidth(width, flags, neg);\n+                localizedMagnitude(fmt, sb, mant, 0, flags, newW, l);\n@@ -3599,1 +3595,1 @@\n-                if (f.contains(Flags.ALTERNATE) && (prec == 0)) {\n+                if (Flags.contains(flags, Flags.ALTERNATE) && (prec == 0)) {\n@@ -3606,1 +3602,1 @@\n-                        newW = adjustWidth(width - exp.length - 1, f, neg);\n+                        newW = adjustWidth(width - exp.length - 1, flags, neg);\n@@ -3608,1 +3604,1 @@\n-                        newW = adjustWidth(width, f, neg);\n+                        newW = adjustWidth(width, flags, neg);\n@@ -3610,1 +3606,1 @@\n-                localizedMagnitude(sb, mant, 0, f, newW, l);\n+                localizedMagnitude(fmt, sb, mant, 0, flags, newW, l);\n@@ -3613,1 +3609,1 @@\n-                    sb.append(f.contains(Flags.UPPERCASE) ? 'E' : 'e');\n+                    sb.append(Flags.contains(flags, Flags.UPPERCASE) ? 'E' : 'e');\n@@ -3619,1 +3615,1 @@\n-                    localizedMagnitudeExp(sb, exp, 1, l);\n+                    localizedMagnitudeExp(fmt, sb, exp, 1, l);\n@@ -3632,1 +3628,1 @@\n-                boolean upper = f.contains(Flags.UPPERCASE);\n+                boolean upper = Flags.contains(flags, Flags.UPPERCASE);\n@@ -3635,1 +3631,1 @@\n-                if (f.contains(Flags.ZERO_PAD)) {\n+                if (Flags.contains(flags, Flags.ZERO_PAD)) {\n@@ -3637,2 +3633,2 @@\n-                    if(f.contains(Flags.LEADING_SPACE) ||\n-                            f.contains(Flags.PLUS) || neg) {\n+                    if(Flags.contains(flags, Flags.LEADING_SPACE) ||\n+                            Flags.contains(flags, Flags.PLUS) || neg) {\n@@ -3777,1 +3773,1 @@\n-        private void print(BigDecimal value, Locale l) throws IOException {\n+        private void print(Formatter fmt, BigDecimal value, Locale l) throws IOException {\n@@ -3787,1 +3783,1 @@\n-            print(sb, v, l, f, c, precision, neg);\n+            print(fmt, sb, v, l, flags, c, precision, neg);\n@@ -3793,1 +3789,1 @@\n-            appendJustified(a, sb);\n+            appendJustified(fmt.a, sb);\n@@ -3797,2 +3793,2 @@\n-        private void print(StringBuilder sb, BigDecimal value, Locale l,\n-                           Flags f, char c, int precision, boolean neg)\n+        private void print(Formatter fmt, StringBuilder sb, BigDecimal value, Locale l,\n+                           int flags, char c, int precision, boolean neg)\n@@ -3832,1 +3828,1 @@\n-                        && (nzeros > 0 || (f.contains(Flags.ALTERNATE)))) {\n+                        && (nzeros > 0 || (Flags.contains(flags, Flags.ALTERNATE)))) {\n@@ -3843,1 +3839,1 @@\n-                    newW = adjustWidth(width - exp.length() - 1, f, neg);\n+                    newW = adjustWidth(width - exp.length() - 1, flags, neg);\n@@ -3845,1 +3841,1 @@\n-                localizedMagnitude(sb, mant, 0, f, newW, l);\n+                localizedMagnitude(fmt, sb, mant, 0, flags, newW, l);\n@@ -3847,1 +3843,1 @@\n-                sb.append(f.contains(Flags.UPPERCASE) ? 'E' : 'e');\n+                sb.append(Flags.contains(flags, Flags.UPPERCASE) ? 'E' : 'e');\n@@ -3849,1 +3845,1 @@\n-                Flags flags = f.dup().remove(Flags.GROUP);\n+                int adaptedFlags = Flags.remove(flags, Flags.GROUP);\n@@ -3854,1 +3850,1 @@\n-                sb.append(localizedMagnitude(null, exp, 1, flags, -1, l));\n+                sb.append(localizedMagnitude(fmt, null, exp, 1, adaptedFlags, -1, l));\n@@ -3886,1 +3882,1 @@\n-                if (bdl.scale() == 0 && (f.contains(Flags.ALTERNATE)\n+                if (bdl.scale() == 0 && (Flags.contains(flags, Flags.ALTERNATE)\n@@ -3895,1 +3891,1 @@\n-                localizedMagnitude(sb, mant, 0, f, adjustWidth(width, f, neg), l);\n+                localizedMagnitude(fmt, sb, mant, 0, flags, adjustWidth(width, flags, neg), l);\n@@ -3923,1 +3919,1 @@\n-                    print(sb, value, l, f, Conversion.DECIMAL_FLOAT, prec,\n+                    print(fmt, sb, value, l, flags, Conversion.DECIMAL_FLOAT, prec,\n@@ -3926,1 +3922,1 @@\n-                    print(sb, value, l, f, Conversion.SCIENTIFIC, prec - 1, neg);\n+                    print(fmt, sb, value, l, flags, Conversion.SCIENTIFIC, prec - 1, neg);\n@@ -4048,1 +4044,1 @@\n-        private int adjustWidth(int width, Flags f, boolean neg) {\n+        private int adjustWidth(int width, int flags, boolean neg) {\n@@ -4050,1 +4046,1 @@\n-            if (newW != -1 && neg && f.contains(Flags.PARENTHESES))\n+            if (newW != -1 && neg && Flags.contains(flags, Flags.PARENTHESES))\n@@ -4062,1 +4058,1 @@\n-        private void print(Calendar t, char c, Locale l)  throws IOException {\n+        private void print(Formatter fmt, Calendar t, char c, Locale l)  throws IOException {\n@@ -4064,1 +4060,1 @@\n-            print(sb, t, c, l);\n+            print(fmt, sb, t, c, l);\n@@ -4067,2 +4063,2 @@\n-            if (f.contains(Flags.UPPERCASE)) {\n-                appendJustified(a, toUpperCaseWithLocale(sb.toString(), l));\n+            if (Flags.contains(flags, Flags.UPPERCASE)) {\n+                appendJustified(fmt.a, toUpperCaseWithLocale(sb.toString(), l));\n@@ -4070,1 +4066,1 @@\n-                appendJustified(a, sb);\n+                appendJustified(fmt.a, sb);\n@@ -4074,1 +4070,1 @@\n-        private Appendable print(StringBuilder sb, Calendar t, char c, Locale l)\n+        private Appendable print(Formatter fmt, StringBuilder sb, Calendar t, char c, Locale l)\n@@ -4086,1 +4082,1 @@\n-                Flags flags = (c == DateTime.HOUR_OF_DAY_0\n+                int flags = (c == DateTime.HOUR_OF_DAY_0\n@@ -4090,1 +4086,1 @@\n-                sb.append(localizedMagnitude(null, i, flags, 2, l));\n+                sb.append(localizedMagnitude(fmt, null, i, flags, 2, l));\n@@ -4095,2 +4091,1 @@\n-                Flags flags = Flags.ZERO_PAD;\n-                sb.append(localizedMagnitude(null, i, flags, 2, l));\n+                sb.append(localizedMagnitude(fmt, null, i, Flags.ZERO_PAD, 2, l));\n@@ -4101,2 +4096,1 @@\n-                Flags flags = Flags.ZERO_PAD;\n-                sb.append(localizedMagnitude(null, i, flags, 9, l));\n+                sb.append(localizedMagnitude(fmt, null, i, Flags.ZERO_PAD, 9, l));\n@@ -4107,2 +4101,1 @@\n-                Flags flags = Flags.ZERO_PAD;\n-                sb.append(localizedMagnitude(null, i, flags, 3, l));\n+                sb.append(localizedMagnitude(fmt, null, i, Flags.ZERO_PAD, 3, l));\n@@ -4113,2 +4106,1 @@\n-                Flags flags = Flags.NONE;\n-                sb.append(localizedMagnitude(null, i, flags, width, l));\n+                sb.append(localizedMagnitude(fmt, null, i, Flags.NONE, width, l));\n@@ -4131,2 +4123,1 @@\n-                Flags flags = Flags.NONE;\n-                sb.append(localizedMagnitude(null, i, flags, width, l));\n+                sb.append(localizedMagnitude(fmt, null, i, Flags.NONE, width, l));\n@@ -4137,2 +4128,1 @@\n-                Flags flags = Flags.ZERO_PAD;\n-                sb.append(localizedMagnitude(null, i, flags, 2, l));\n+                sb.append(localizedMagnitude(fmt, null, i, Flags.ZERO_PAD, 2, l));\n@@ -4150,1 +4140,0 @@\n-                Flags flags = Flags.ZERO_PAD;\n@@ -4152,1 +4141,1 @@\n-                sb.append(localizedMagnitude(null, offset, flags, 4, l));\n+                sb.append(localizedMagnitude(fmt, null, offset, Flags.ZERO_PAD, 4, l));\n@@ -4197,2 +4186,1 @@\n-                Flags flags = Flags.ZERO_PAD;\n-                sb.append(localizedMagnitude(null, i, flags, size, l));\n+                sb.append(localizedMagnitude(fmt, null, i, Flags.ZERO_PAD, size, l));\n@@ -4204,1 +4192,1 @@\n-                Flags flags = (c == DateTime.DAY_OF_MONTH_0\n+                int flags = (c == DateTime.DAY_OF_MONTH_0\n@@ -4207,1 +4195,1 @@\n-                sb.append(localizedMagnitude(null, i, flags, 2, l));\n+                sb.append(localizedMagnitude(fmt, null, i, flags, 2, l));\n@@ -4212,2 +4200,1 @@\n-                Flags flags = Flags.ZERO_PAD;\n-                sb.append(localizedMagnitude(null, i, flags, 3, l));\n+                sb.append(localizedMagnitude(fmt, null, i, Flags.ZERO_PAD, 3, l));\n@@ -4218,2 +4205,1 @@\n-                Flags flags = Flags.ZERO_PAD;\n-                sb.append(localizedMagnitude(null, i, flags, 2, l));\n+                sb.append(localizedMagnitude(fmt, null, i, Flags.ZERO_PAD, 2, l));\n@@ -4227,2 +4213,2 @@\n-                print(sb, t, DateTime.HOUR_OF_DAY_0, l).append(sep);\n-                print(sb, t, DateTime.MINUTE, l);\n+                print(fmt, sb, t, DateTime.HOUR_OF_DAY_0, l).append(sep);\n+                print(fmt, sb, t, DateTime.MINUTE, l);\n@@ -4231,1 +4217,1 @@\n-                    print(sb, t, DateTime.SECOND, l);\n+                    print(fmt, sb, t, DateTime.SECOND, l);\n@@ -4237,3 +4223,3 @@\n-                print(sb, t, DateTime.HOUR_0, l).append(sep);\n-                print(sb, t, DateTime.MINUTE, l).append(sep);\n-                print(sb, t, DateTime.SECOND, l).append(' ');\n+                print(fmt, sb, t, DateTime.HOUR_0, l).append(sep);\n+                print(fmt, sb, t, DateTime.MINUTE, l).append(sep);\n+                print(fmt, sb, t, DateTime.SECOND, l).append(' ');\n@@ -4242,1 +4228,1 @@\n-                print(tsb, t, DateTime.AM_PM, l);\n+                print(fmt, tsb, t, DateTime.AM_PM, l);\n@@ -4249,6 +4235,6 @@\n-                print(sb, t, DateTime.NAME_OF_DAY_ABBREV, l).append(sep);\n-                print(sb, t, DateTime.NAME_OF_MONTH_ABBREV, l).append(sep);\n-                print(sb, t, DateTime.DAY_OF_MONTH_0, l).append(sep);\n-                print(sb, t, DateTime.TIME, l).append(sep);\n-                print(sb, t, DateTime.ZONE, l).append(sep);\n-                print(sb, t, DateTime.YEAR_4, l);\n+                print(fmt, sb, t, DateTime.NAME_OF_DAY_ABBREV, l).append(sep);\n+                print(fmt, sb, t, DateTime.NAME_OF_MONTH_ABBREV, l).append(sep);\n+                print(fmt, sb, t, DateTime.DAY_OF_MONTH_0, l).append(sep);\n+                print(fmt, sb, t, DateTime.TIME, l).append(sep);\n+                print(fmt, sb, t, DateTime.ZONE, l).append(sep);\n+                print(fmt, sb, t, DateTime.YEAR_4, l);\n@@ -4259,3 +4245,3 @@\n-                print(sb, t, DateTime.MONTH, l).append(sep);\n-                print(sb, t, DateTime.DAY_OF_MONTH_0, l).append(sep);\n-                print(sb, t, DateTime.YEAR_2, l);\n+                print(fmt, sb, t, DateTime.MONTH, l).append(sep);\n+                print(fmt, sb, t, DateTime.DAY_OF_MONTH_0, l).append(sep);\n+                print(fmt, sb, t, DateTime.YEAR_2, l);\n@@ -4266,3 +4252,3 @@\n-                print(sb, t, DateTime.YEAR_4, l).append(sep);\n-                print(sb, t, DateTime.MONTH, l).append(sep);\n-                print(sb, t, DateTime.DAY_OF_MONTH_0, l);\n+                print(fmt, sb, t, DateTime.YEAR_4, l).append(sep);\n+                print(fmt, sb, t, DateTime.MONTH, l).append(sep);\n+                print(fmt, sb, t, DateTime.DAY_OF_MONTH_0, l);\n@@ -4277,1 +4263,1 @@\n-        private void print(TemporalAccessor t, char c, Locale l)  throws IOException {\n+        private void print(Formatter fmt, TemporalAccessor t, char c, Locale l)  throws IOException {\n@@ -4279,1 +4265,1 @@\n-            print(sb, t, c, l);\n+            print(fmt, sb, t, c, l);\n@@ -4281,2 +4267,2 @@\n-            if (f.contains(Flags.UPPERCASE)) {\n-                appendJustified(a, toUpperCaseWithLocale(sb.toString(), l));\n+            if (Flags.contains(flags, Flags.UPPERCASE)) {\n+                appendJustified(fmt.a, toUpperCaseWithLocale(sb.toString(), l));\n@@ -4284,1 +4270,1 @@\n-                appendJustified(a, sb);\n+                appendJustified(fmt.a, sb);\n@@ -4288,1 +4274,1 @@\n-        private Appendable print(StringBuilder sb, TemporalAccessor t, char c,\n+        private Appendable print(Formatter fmt, StringBuilder sb, TemporalAccessor t, char c,\n@@ -4296,1 +4282,1 @@\n-                    sb.append(localizedMagnitude(null, i, Flags.ZERO_PAD, 2, l));\n+                    sb.append(localizedMagnitude(fmt, null, i, Flags.ZERO_PAD, 2, l));\n@@ -4301,1 +4287,1 @@\n-                    sb.append(localizedMagnitude(null, i, Flags.NONE, 2, l));\n+                    sb.append(localizedMagnitude(fmt, null, i, Flags.NONE, 2, l));\n@@ -4306,1 +4292,1 @@\n-                    sb.append(localizedMagnitude(null, i, Flags.ZERO_PAD, 2, l));\n+                    sb.append(localizedMagnitude(fmt, null, i, Flags.ZERO_PAD, 2, l));\n@@ -4311,1 +4297,1 @@\n-                    sb.append(localizedMagnitude(null, i, Flags.NONE, 2, l));\n+                    sb.append(localizedMagnitude(fmt, null, i, Flags.NONE, 2, l));\n@@ -4316,2 +4302,1 @@\n-                    Flags flags = Flags.ZERO_PAD;\n-                    sb.append(localizedMagnitude(null, i, flags, 2, l));\n+                    sb.append(localizedMagnitude(fmt, null, i, Flags.ZERO_PAD, 2, l));\n@@ -4327,2 +4312,1 @@\n-                    Flags flags = Flags.ZERO_PAD;\n-                    sb.append(localizedMagnitude(null, i, flags, 9, l));\n+                    sb.append(localizedMagnitude(fmt, null, i, Flags.ZERO_PAD, 9, l));\n@@ -4333,2 +4317,1 @@\n-                    Flags flags = Flags.ZERO_PAD;\n-                    sb.append(localizedMagnitude(null, i, flags, 3, l));\n+                    sb.append(localizedMagnitude(fmt, null, i, Flags.ZERO_PAD, 3, l));\n@@ -4340,2 +4323,1 @@\n-                    Flags flags = Flags.NONE;\n-                    sb.append(localizedMagnitude(null, i, flags, width, l));\n+                    sb.append(localizedMagnitude(fmt, null, i, Flags.NONE, width, l));\n@@ -4358,2 +4340,1 @@\n-                    Flags flags = Flags.NONE;\n-                    sb.append(localizedMagnitude(null, i, flags, width, l));\n+                    sb.append(localizedMagnitude(fmt, null, i, Flags.NONE, width, l));\n@@ -4364,2 +4345,1 @@\n-                    Flags flags = Flags.ZERO_PAD;\n-                    sb.append(localizedMagnitude(null, i, flags, 2, l));\n+                    sb.append(localizedMagnitude(fmt, null, i, Flags.ZERO_PAD, 2, l));\n@@ -4377,2 +4357,1 @@\n-                    Flags flags = Flags.ZERO_PAD;\n-                    sb.append(localizedMagnitude(null, offset, flags, 4, l));\n+                    sb.append(localizedMagnitude(fmt, null, offset, Flags.ZERO_PAD, 4, l));\n@@ -4432,2 +4411,1 @@\n-                    Flags flags = Flags.ZERO_PAD;\n-                    sb.append(localizedMagnitude(null, i, flags, size, l));\n+                    sb.append(localizedMagnitude(fmt, null, i, Flags.ZERO_PAD, size, l));\n@@ -4439,1 +4417,1 @@\n-                    Flags flags = (c == DateTime.DAY_OF_MONTH_0\n+                    int flags = (c == DateTime.DAY_OF_MONTH_0\n@@ -4442,1 +4420,1 @@\n-                    sb.append(localizedMagnitude(null, i, flags, 2, l));\n+                    sb.append(localizedMagnitude(fmt, null, i, flags, 2, l));\n@@ -4447,2 +4425,1 @@\n-                    Flags flags = Flags.ZERO_PAD;\n-                    sb.append(localizedMagnitude(null, i, flags, 3, l));\n+                    sb.append(localizedMagnitude(fmt, null, i, Flags.ZERO_PAD, 3, l));\n@@ -4453,2 +4430,1 @@\n-                    Flags flags = Flags.ZERO_PAD;\n-                    sb.append(localizedMagnitude(null, i, flags, 2, l));\n+                    sb.append(localizedMagnitude(fmt, null, i, Flags.ZERO_PAD, 2, l));\n@@ -4462,2 +4438,2 @@\n-                    print(sb, t, DateTime.HOUR_OF_DAY_0, l).append(sep);\n-                    print(sb, t, DateTime.MINUTE, l);\n+                    print(fmt, sb, t, DateTime.HOUR_OF_DAY_0, l).append(sep);\n+                    print(fmt, sb, t, DateTime.MINUTE, l);\n@@ -4466,1 +4442,1 @@\n-                        print(sb, t, DateTime.SECOND, l);\n+                        print(fmt, sb, t, DateTime.SECOND, l);\n@@ -4472,3 +4448,3 @@\n-                    print(sb, t, DateTime.HOUR_0, l).append(sep);\n-                    print(sb, t, DateTime.MINUTE, l).append(sep);\n-                    print(sb, t, DateTime.SECOND, l).append(' ');\n+                    print(fmt, sb, t, DateTime.HOUR_0, l).append(sep);\n+                    print(fmt, sb, t, DateTime.MINUTE, l).append(sep);\n+                    print(fmt, sb, t, DateTime.SECOND, l).append(' ');\n@@ -4477,1 +4453,1 @@\n-                    print(tsb, t, DateTime.AM_PM, l);\n+                    print(fmt, tsb, t, DateTime.AM_PM, l);\n@@ -4483,6 +4459,6 @@\n-                    print(sb, t, DateTime.NAME_OF_DAY_ABBREV, l).append(sep);\n-                    print(sb, t, DateTime.NAME_OF_MONTH_ABBREV, l).append(sep);\n-                    print(sb, t, DateTime.DAY_OF_MONTH_0, l).append(sep);\n-                    print(sb, t, DateTime.TIME, l).append(sep);\n-                    print(sb, t, DateTime.ZONE, l).append(sep);\n-                    print(sb, t, DateTime.YEAR_4, l);\n+                    print(fmt, sb, t, DateTime.NAME_OF_DAY_ABBREV, l).append(sep);\n+                    print(fmt, sb, t, DateTime.NAME_OF_MONTH_ABBREV, l).append(sep);\n+                    print(fmt, sb, t, DateTime.DAY_OF_MONTH_0, l).append(sep);\n+                    print(fmt, sb, t, DateTime.TIME, l).append(sep);\n+                    print(fmt, sb, t, DateTime.ZONE, l).append(sep);\n+                    print(fmt, sb, t, DateTime.YEAR_4, l);\n@@ -4493,3 +4469,3 @@\n-                    print(sb, t, DateTime.MONTH, l).append(sep);\n-                    print(sb, t, DateTime.DAY_OF_MONTH_0, l).append(sep);\n-                    print(sb, t, DateTime.YEAR_2, l);\n+                    print(fmt, sb, t, DateTime.MONTH, l).append(sep);\n+                    print(fmt, sb, t, DateTime.DAY_OF_MONTH_0, l).append(sep);\n+                    print(fmt, sb, t, DateTime.YEAR_2, l);\n@@ -4500,3 +4476,3 @@\n-                    print(sb, t, DateTime.YEAR_4, l).append(sep);\n-                    print(sb, t, DateTime.MONTH, l).append(sep);\n-                    print(sb, t, DateTime.DAY_OF_MONTH_0, l);\n+                    print(fmt, sb, t, DateTime.YEAR_4, l).append(sep);\n+                    print(fmt, sb, t, DateTime.MONTH, l).append(sep);\n+                    print(fmt, sb, t, DateTime.DAY_OF_MONTH_0, l);\n@@ -4516,2 +4492,2 @@\n-        private void failMismatch(Flags f, char c) {\n-            String fs = f.toString();\n+        private void failMismatch(int f, char c) {\n+            String fs = Flags.toString(f);\n@@ -4525,2 +4501,2 @@\n-        private char getZero(Locale l) {\n-            if ((l != null) &&  !l.equals(locale())) {\n+        private char getZero(Formatter fmt, Locale l) {\n+            if ((l != null) &&  !l.equals(fmt.locale())) {\n@@ -4530,1 +4506,1 @@\n-            return zero();\n+            return fmt.zero();\n@@ -4533,3 +4509,3 @@\n-        private StringBuilder localizedMagnitude(StringBuilder sb,\n-                long value, Flags f, int width, Locale l) {\n-            return localizedMagnitude(sb, Long.toString(value, 10), 0, f, width, l);\n+        private StringBuilder localizedMagnitude(Formatter fmt, StringBuilder sb,\n+                long value, int flags, int width, Locale l) {\n+            return localizedMagnitude(fmt, sb, Long.toString(value, 10), 0, flags, width, l);\n@@ -4538,2 +4514,2 @@\n-        private StringBuilder localizedMagnitude(StringBuilder sb,\n-                CharSequence value, final int offset, Flags f, int width,\n+        private StringBuilder localizedMagnitude(Formatter fmt, StringBuilder sb,\n+                CharSequence value, final int offset, int f, int width,\n@@ -4546,1 +4522,1 @@\n-            char zero = getZero(l);\n+            char zero = getZero(fmt, l);\n@@ -4571,1 +4547,1 @@\n-            if (f.contains(Flags.GROUP)) {\n+            if (Flags.contains(f, Flags.GROUP)) {\n@@ -4625,1 +4601,1 @@\n-            if (width != -1 && f.contains(Flags.ZERO_PAD)) {\n+            if (width != -1 && Flags.contains(f, Flags.ZERO_PAD)) {\n@@ -4637,1 +4613,1 @@\n-        private void localizedMagnitudeExp(StringBuilder sb, char[] value,\n+        private void localizedMagnitudeExp(Formatter fmt, StringBuilder sb, char[] value,\n@@ -4639,1 +4615,1 @@\n-            char zero = getZero(l);\n+            char zero = getZero(fmt, l);\n@@ -4650,1 +4626,0 @@\n-        private int flags;\n@@ -4652,1 +4627,1 @@\n-        static final Flags NONE          = new Flags(0);      \/\/ ''\n+        static final int NONE          = 0;      \/\/ ''\n@@ -4655,3 +4630,3 @@\n-        static final Flags LEFT_JUSTIFY  = new Flags(1<<0);   \/\/ '-'\n-        static final Flags UPPERCASE     = new Flags(1<<1);   \/\/ '^'\n-        static final Flags ALTERNATE     = new Flags(1<<2);   \/\/ '#'\n+        static final int LEFT_JUSTIFY  = 1<<0;   \/\/ '-'\n+        static final int UPPERCASE     = 1<<1;   \/\/ '^'\n+        static final int ALTERNATE     = 1<<2;   \/\/ '#'\n@@ -4660,5 +4635,5 @@\n-        static final Flags PLUS          = new Flags(1<<3);   \/\/ '+'\n-        static final Flags LEADING_SPACE = new Flags(1<<4);   \/\/ ' '\n-        static final Flags ZERO_PAD      = new Flags(1<<5);   \/\/ '0'\n-        static final Flags GROUP         = new Flags(1<<6);   \/\/ ','\n-        static final Flags PARENTHESES   = new Flags(1<<7);   \/\/ '('\n+        static final int PLUS          = 1<<3;   \/\/ '+'\n+        static final int LEADING_SPACE = 1<<4;   \/\/ ' '\n+        static final int ZERO_PAD      = 1<<5;   \/\/ '0'\n+        static final int GROUP         = 1<<6;   \/\/ ','\n+        static final int PARENTHESES   = 1<<7;   \/\/ '('\n@@ -4667,9 +4642,1 @@\n-        static final Flags PREVIOUS      = new Flags(1<<8);   \/\/ '<'\n-\n-        private Flags(int f) {\n-            flags = f;\n-        }\n-\n-        public int valueOf() {\n-            return flags;\n-        }\n+        static final int PREVIOUS      = 1<<8;   \/\/ '<'\n@@ -4677,2 +4644,2 @@\n-        public boolean contains(Flags f) {\n-            return (flags & f.valueOf()) == f.valueOf();\n+        public static boolean contains(int flags, int f) {\n+            return (flags & f) == f;\n@@ -4681,2 +4648,2 @@\n-        public Flags dup() {\n-            return new Flags(flags);\n+        public static boolean containsAny(int flags, int f) {\n+            return (flags & f) != 0;\n@@ -4685,3 +4652,2 @@\n-        private Flags add(Flags f) {\n-            flags |= f.valueOf();\n-            return this;\n+        private static int add(int flags, int f) {\n+            return flags | f;\n@@ -4690,3 +4656,2 @@\n-        public Flags remove(Flags f) {\n-            flags &= ~f.valueOf();\n-            return this;\n+        public static int remove(int flags, int f) {\n+            return flags & ~f;\n@@ -4695,2 +4660,2 @@\n-        public static Flags parse(String s, int start, int end) {\n-            Flags f = new Flags(0);\n+        public static int parse(String s, int start, int end) {\n+            int f = 0;\n@@ -4699,4 +4664,4 @@\n-                Flags v = parse(c);\n-                if (f.contains(v))\n-                    throw new DuplicateFormatFlagsException(v.toString());\n-                f.add(v);\n+                int v = parse(c);\n+                if (contains(f, v))\n+                    throw new DuplicateFormatFlagsException(toString(v));\n+                f = add(f, v);\n@@ -4708,1 +4673,1 @@\n-        private static Flags parse(char c) {\n+        private static int parse(char c) {\n@@ -4723,5 +4688,1 @@\n-        public static String toString(Flags f) {\n-            return f.toString();\n-        }\n-\n-        public String toString() {\n+        public static String toString(int f) {\n@@ -4729,9 +4690,9 @@\n-            if (contains(LEFT_JUSTIFY))  sb.append('-');\n-            if (contains(UPPERCASE))     sb.append('^');\n-            if (contains(ALTERNATE))     sb.append('#');\n-            if (contains(PLUS))          sb.append('+');\n-            if (contains(LEADING_SPACE)) sb.append(' ');\n-            if (contains(ZERO_PAD))      sb.append('0');\n-            if (contains(GROUP))         sb.append(',');\n-            if (contains(PARENTHESES))   sb.append('(');\n-            if (contains(PREVIOUS))      sb.append('<');\n+            if (contains(f, LEFT_JUSTIFY))  sb.append('-');\n+            if (contains(f, UPPERCASE))     sb.append('^');\n+            if (contains(f, ALTERNATE))     sb.append('#');\n+            if (contains(f, PLUS))          sb.append('+');\n+            if (contains(f, LEADING_SPACE)) sb.append(' ');\n+            if (contains(f, ZERO_PAD))      sb.append('0');\n+            if (contains(f, GROUP))         sb.append(',');\n+            if (contains(f, PARENTHESES))   sb.append('(');\n+            if (contains(f, PREVIOUS))      sb.append('<');\n","filename":"src\/java.base\/share\/classes\/java\/util\/Formatter.java","additions":294,"deletions":333,"binary":false,"changes":627,"status":"modified"}]}