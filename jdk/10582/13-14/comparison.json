{"files":[{"patch":"@@ -71,1 +71,1 @@\n-\/\/   polyCP = r13\n+\/\/   rscratch = r13\n@@ -161,1 +161,1 @@\n-  const Register polyCP = r13;\n+  const Register rscratch = r13;\n@@ -201,1 +201,1 @@\n-  __ evpandq(A0, P0_L, ExternalAddress(poly1305_mask44()), Assembler::AVX_512bit, polyCP); \/\/ Clear top 20 bits\n+  __ evpandq(A0, P0_L, ExternalAddress(poly1305_mask44()), Assembler::AVX_512bit, rscratch); \/\/ Clear top 20 bits\n@@ -206,1 +206,1 @@\n-  __ evpandq(A1, P1_L, ExternalAddress(poly1305_mask44()), Assembler::AVX_512bit, polyCP); \/\/ Clear top 20 bits\n+  __ evpandq(A1, P1_L, ExternalAddress(poly1305_mask44()), Assembler::AVX_512bit, rscratch); \/\/ Clear top 20 bits\n@@ -212,1 +212,1 @@\n-  __ evpandq(A2, P2_L, ExternalAddress(poly1305_mask42()), Assembler::AVX_512bit, polyCP); \/\/ Clear top 22 bits\n+  __ evpandq(A2, P2_L, ExternalAddress(poly1305_mask42()), Assembler::AVX_512bit, rscratch); \/\/ Clear top 22 bits\n@@ -224,1 +224,1 @@\n-  __ evpandq(A0, A0, ExternalAddress(poly1305_mask44()), Assembler::AVX_512bit, polyCP);\n+  __ evpandq(A0, A0, ExternalAddress(poly1305_mask44()), Assembler::AVX_512bit, rscratch);\n@@ -356,1 +356,1 @@\n-  const Register polyCP = r13;\n+  const Register rscratch = r13;\n@@ -365,1 +365,1 @@\n-    __ evporq(L2, L2, ExternalAddress(poly1305_pad_msg()), Assembler::AVX_512bit, polyCP); \/\/ Add 2^128 to all 8 final qwords of the message\n+    __ evporq(L2, L2, ExternalAddress(poly1305_pad_msg()), Assembler::AVX_512bit, rscratch); \/\/ Add 2^128 to all 8 final qwords of the message\n@@ -371,1 +371,1 @@\n-  __ vpternlogq(L1, 0xA8, TMP2, ExternalAddress(poly1305_mask44()), Assembler::AVX_512bit, polyCP); \/\/ (A OR B AND C)\n+  __ vpternlogq(L1, 0xA8, TMP2, ExternalAddress(poly1305_mask44()), Assembler::AVX_512bit, rscratch); \/\/ (A OR B AND C)\n@@ -374,1 +374,1 @@\n-  __ evpandq(L0, L0, ExternalAddress(poly1305_mask44()), Assembler::AVX_512bit, polyCP);\n+  __ evpandq(L0, L0, ExternalAddress(poly1305_mask44()), Assembler::AVX_512bit, rscratch);\n@@ -567,1 +567,1 @@\n-  const Register polyCP = r13;\n+  const Register rscratch = r13;\n@@ -603,1 +603,1 @@\n-  __ andq(t0, ExternalAddress(poly1305_mask44()), polyCP); \/\/ First limb (Acc[43:0])\n+  __ andq(t0, ExternalAddress(poly1305_mask44()), rscratch); \/\/ First limb (Acc[43:0])\n@@ -608,1 +608,1 @@\n-  __ andq(a0, ExternalAddress(poly1305_mask44()), polyCP); \/\/ Second limb (Acc[77:52])\n+  __ andq(a0, ExternalAddress(poly1305_mask44()), rscratch); \/\/ Second limb (Acc[77:52])\n@@ -612,1 +612,1 @@\n-  __ andq(a1, ExternalAddress(poly1305_mask42()), polyCP); \/\/ Third limb (Acc[129:88])\n+  __ andq(a1, ExternalAddress(poly1305_mask42()), rscratch); \/\/ Third limb (Acc[129:88])\n@@ -692,1 +692,1 @@\n-  __ andq(t0, ExternalAddress(poly1305_mask44()), polyCP); \/\/ First limb (R^4[43:0])\n+  __ andq(t0, ExternalAddress(poly1305_mask44()), rscratch); \/\/ First limb (R^4[43:0])\n@@ -697,1 +697,1 @@\n-  __ andq(a0, ExternalAddress(poly1305_mask44()), polyCP); \/\/ Second limb (R^4[87:44])\n+  __ andq(a0, ExternalAddress(poly1305_mask44()), rscratch); \/\/ Second limb (R^4[87:44])\n@@ -701,1 +701,1 @@\n-  __ andq(a1, ExternalAddress(poly1305_mask42()), polyCP); \/\/ Third limb (R^4[129:88])\n+  __ andq(a1, ExternalAddress(poly1305_mask42()), rscratch); \/\/ Third limb (R^4[129:88])\n@@ -868,1 +868,1 @@\n-  __ evpandq(A0, A0, ExternalAddress(poly1305_mask44()), Assembler::AVX_512bit, polyCP); \/\/ Clear top 20 bits\n+  __ evpandq(A0, A0, ExternalAddress(poly1305_mask44()), Assembler::AVX_512bit, rscratch); \/\/ Clear top 20 bits\n@@ -871,1 +871,1 @@\n-  __ evpandq(A1, A1, ExternalAddress(poly1305_mask44()), Assembler::AVX_512bit, polyCP); \/\/ Clear top 20 bits\n+  __ evpandq(A1, A1, ExternalAddress(poly1305_mask44()), Assembler::AVX_512bit, rscratch); \/\/ Clear top 20 bits\n@@ -874,1 +874,1 @@\n-  __ evpandq(A2, A2, ExternalAddress(poly1305_mask42()), Assembler::AVX_512bit, polyCP); \/\/ Clear top 22 bits\n+  __ evpandq(A2, A2, ExternalAddress(poly1305_mask42()), Assembler::AVX_512bit, rscratch); \/\/ Clear top 22 bits\n","filename":"src\/hotspot\/cpu\/x86\/stubGenerator_x86_64_poly.cpp","additions":20,"deletions":20,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -252,3 +252,1 @@\n-            n.setValue(input, offset, BLOCK_LENGTH, (byte)0x01);\n-            a.setSum(n);                    \/\/ a += (n | 0x01)\n-            a.setProduct(r);                \/\/ a = (a * r) % p\n+            processBlock(input, offset, BLOCK_LENGTH);\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/Poly1305.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"}]}