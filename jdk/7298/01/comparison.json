{"files":[{"patch":"@@ -2465,1 +2465,0 @@\n-  assert(data != NULL, \"some profile data expected at branch\");\n@@ -2467,1 +2466,1 @@\n-  if (!data->is_JumpData()) {\n+  if (data == NULL || !data->is_JumpData()) {\n","filename":"src\/hotspot\/share\/ci\/ciTypeFlow.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -0,0 +1,60 @@\n+\/*\n+ * Copyright (c) 2022, Red Hat, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * bug 8280842\n+ * @summary Access violation in ciTypeFlow::profiled_count\n+ * @run main\/othervm -XX:-BackgroundCompilation TestSharedHeadExceptionBackedges\n+ *\/\n+\n+public class TestSharedHeadExceptionBackedges {\n+    public static void main(String[] args) {\n+        for (int i = 0; i < 20_000; i++) {\n+            test();\n+        }\n+    }\n+\n+    static class MyException extends Exception {\n+    }\n+\n+    private static void test() {\n+        int i = 0;\n+        while (i < 10) {\n+            try {\n+                int j = 0;\n+                i++;\n+                if (i % 2 == 0) {\n+                    throw new MyException();\n+                }\n+                do {\n+                    j++;\n+                } while (j < 100);\n+\n+                throw new MyException();\n+\n+            } catch (MyException me) {\n+            }\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/profiling\/TestSharedHeadExceptionBackedges.java","additions":60,"deletions":0,"binary":false,"changes":60,"status":"added"}]}