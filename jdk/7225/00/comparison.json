{"files":[{"patch":"@@ -176,1 +176,1 @@\n-    if (!info.is_excluded()) {\n+    if (!info.should_be_excluded()) {\n","filename":"src\/hotspot\/share\/cds\/dumpTimeClassInfo.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -137,1 +137,2 @@\n-  bool is_excluded() {\n+  bool is_excluded() { return _excluded; }\n+  bool should_be_excluded() {\n","filename":"src\/hotspot\/share\/cds\/dumpTimeClassInfo.hpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -222,2 +222,4 @@\n-    if (check_for_exclusion_impl(k)) {\n-      info->set_excluded();\n+    if (!info->is_excluded()) {\n+      if (check_for_exclusion_impl(k)) {\n+        info->set_excluded();\n+      }\n@@ -228,1 +230,1 @@\n-  return info->is_excluded();\n+  return info->should_be_excluded();\n@@ -600,1 +602,1 @@\n-  guarantee(!info->is_excluded(), \"Should not attempt to archive excluded class %s\", name);\n+  guarantee(!info->should_be_excluded(), \"Should not attempt to archive excluded class %s\", name);\n@@ -689,1 +691,1 @@\n-  return (p == NULL) ? true : p->is_excluded();\n+  return (p == NULL) ? true : p->should_be_excluded();\n@@ -735,1 +737,1 @@\n-    if (k->is_loader_alive() && !info.is_excluded()) {\n+    if (k->is_loader_alive() && !info.should_be_excluded()) {\n@@ -1176,1 +1178,1 @@\n-    if (!info.is_excluded()) {\n+    if (!info.should_be_excluded()) {\n@@ -1233,1 +1235,1 @@\n-    \/\/ if (SystemDictionaryShared::is_excluded_class(info._proxy_klasses->at(0))) {\n+    \/\/ if (SystemDictionaryShared::should_be_excluded_class(info._proxy_klasses->at(0))) {\n@@ -1285,1 +1287,1 @@\n-    if (!info.is_excluded() && info.is_builtin() == _is_builtin) {\n+    if (!info.should_be_excluded() && info.is_builtin() == _is_builtin) {\n@@ -1557,1 +1559,1 @@\n-    if (!info.is_excluded()) {\n+    if (!info.should_be_excluded()) {\n","filename":"src\/hotspot\/share\/classfile\/systemDictionaryShared.cpp","additions":13,"deletions":11,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -84,0 +84,1 @@\n+    static final String warningMessage  = \"Skipping java\/lang\/invoke\/BoundMethodHandle$Species_\";\n@@ -120,1 +121,2 @@\n-        output.shouldHaveExitValue(0);\n+        output.shouldHaveExitValue(0)\n+              .shouldContain(warningMessage);\n@@ -123,0 +125,18 @@\n+        fileArchive.delete();\n+\n+        launchArgs  = new String[] {\n+                \"-Xshare:dump\",\n+                \"-XX:DumpLoadedClassList=\" + listFileName,\n+                \"-XX:SharedArchiveFile=\" + archiveName,\n+                \"-Xlog:cds\",\n+                \"-cp\",\n+                jarFile,\n+                mainInvokeClass};\n+\n+        pb = ProcessTools.createJavaProcessBuilder(launchArgs);\n+        output = TestCommon.executeAndLog(pb, \"dump-invoke-class\");\n+        output.shouldHaveExitValue(0)\n+              .shouldNotContain(warningMessage);\n+\n+        checkFileExistence(\"Archive\", fileArchive);\n+\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/TestDumpClassListSource.java","additions":21,"deletions":1,"binary":false,"changes":22,"status":"modified"}]}