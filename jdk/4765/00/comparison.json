{"files":[{"patch":"@@ -324,0 +324,17 @@\n+  \/\/ Associative\n+  if (op1 == Op_MulI && op2 == Op_MulI) {\n+    \/\/ Convert \"a*b+a*c into a *(b+c)\n+    if (in1->in(1) == in2->in(1)) {\n+      Node* add = phase->transform(new AddINode(in1->in(2), in2->in(2)));\n+      return new MulINode(in1->in(1), add);\n+    } else if (in1->in(2) == in2->in(1)) {\n+      \/\/ Convert a*b+b*c into b*(a+c)\n+      Node* add = phase->transform(new AddINode(in1->in(1), in2->in(2)));\n+      return new MulINode(in1->in(2), add);\n+    } else if (in1->in(2) == in2->in(2)) {\n+      \/\/ Convert a*c+b*c into (a+b)*c\n+      Node* add = phase->transform(new AddINode(in1->in(1), in2->in(1)));\n+      return new MulINode(in1->in(2), add);\n+    }\n+  }\n+\n@@ -472,0 +489,17 @@\n+  \/\/ Associative\n+  if (op1 == Op_MulL && op2 == Op_MulL) {\n+    \/\/ Convert \"a*b+a*c into a *(b+c)\n+    if (in1->in(1) == in2->in(1)) {\n+      Node* add = phase->transform(new AddLNode(in1->in(2), in2->in(2)));\n+      return new MulLNode(in1->in(1), add);\n+    } else if (in1->in(2) == in2->in(1)) {\n+      \/\/ Convert a*b+b*c into b*(a+c)\n+      Node* add = phase->transform(new AddLNode(in1->in(1), in2->in(2)));\n+      return new MulLNode(in1->in(2), add);\n+    } else if (in1->in(2) == in2->in(2)) {\n+      \/\/ Convert a*c+b*c into (a+b)*c\n+      Node* add = phase->transform(new AddLNode(in1->in(1), in2->in(1)));\n+      return new MulLNode(in1->in(2), add);\n+    }\n+  }\n+\n","filename":"src\/hotspot\/share\/opto\/addnode.cpp","additions":34,"deletions":0,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -272,0 +272,17 @@\n+    \/\/ Associative\n+  if (op1 == Op_MulI && op2 == Op_MulI) {\n+    \/\/ Convert \"a*b-a*c into a *(b-c)\n+    if (in1->in(1) == in2->in(1)) {\n+      Node* sub = phase->transform(new SubINode(in1->in(2), in2->in(2)));\n+      return new MulINode(in1->in(1), sub);\n+    } else if (in1->in(2) == in2->in(1)) {\n+      \/\/ Convert a*b-b*c into b*(a-c)\n+      Node* sub = phase->transform(new SubINode(in1->in(1), in2->in(2)));\n+      return new MulINode(in1->in(2), sub);\n+    } else if (in1->in(2) == in2->in(2)) {\n+      \/\/ Convert a*c-b*c into (a-b)*c\n+      Node* sub = phase->transform(new SubINode(in1->in(1), in2->in(1)));\n+      return new MulINode(sub, in1->in(2));\n+    }\n+  }\n+\n@@ -396,0 +413,17 @@\n+  \/\/ Associative\n+  if (op1 == Op_MulL && op2 == Op_MulL) {\n+    \/\/ Convert \"a*b-a*c into a *(b+c)\n+    if (in1->in(1) == in2->in(1)) {\n+      Node* sub = phase->transform(new SubLNode(in1->in(2), in2->in(2)));\n+      return new MulLNode(in1->in(1), sub);\n+    } else if (in1->in(2) == in2->in(1)) {\n+      \/\/ Convert a*b-b*c into b*(a-c)\n+      Node* sub = phase->transform(new SubLNode(in1->in(1), in2->in(2)));\n+      return new MulLNode(in1->in(2), sub);\n+    } else if (in1->in(2) == in2->in(2)) {\n+      \/\/ Convert a*c-b*c into (a-b)*c\n+      Node* sub = phase->transform(new SubLNode(in1->in(1), in2->in(1)));\n+      return new MulLNode(sub, in1->in(2));\n+    }\n+  }\n+\n","filename":"src\/hotspot\/share\/opto\/subnode.cpp","additions":34,"deletions":0,"binary":false,"changes":34,"status":"modified"}]}