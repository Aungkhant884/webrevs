{"files":[{"patch":"@@ -45,0 +45,1 @@\n+  _show_chunkfreelist(\"chunkfreelist\", \"Shows details about global chunk free lists (ChunkManager).\", \"BOOLEAN\", false, \"false\"),\n@@ -56,0 +57,1 @@\n+  _dcmdparser.add_dcmd_option(&_show_chunkfreelist);\n@@ -99,0 +101,1 @@\n+    if (_show_chunkfreelist.value())   flags |= (int)MetaspaceReporter::Option::ShowChunkFreeList;\n","filename":"src\/hotspot\/share\/memory\/metaspace\/metaspaceDCmd.cpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -41,0 +41,1 @@\n+  DCmdArgument<bool> _show_chunkfreelist;\n","filename":"src\/hotspot\/share\/memory\/metaspace\/metaspaceDCmd.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -303,0 +303,18 @@\n+  \/\/ -- Print Chunkmanager details.\n+  if ((flags & (int)Option::ShowChunkFreeList) > 0) {\n+    out->cr();\n+    out->print_cr(\"Chunk freelist details:\");\n+    if (Metaspace::using_class_space()) {\n+      out->print_cr(\"   Non-Class:\");\n+    }\n+    ChunkManager::chunkmanager_nonclass()->print_on(out);\n+    out->cr();\n+    if (Metaspace::using_class_space()) {\n+      out->print_cr(\"       Class:\");\n+      ChunkManager::chunkmanager_class()->print_on(out);\n+      out->cr();\n+    }\n+  }\n+  out->cr();\n+\n+\n","filename":"src\/hotspot\/share\/memory\/metaspace\/metaspaceReporter.cpp","additions":18,"deletions":0,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -47,1 +47,3 @@\n-    ShowClasses                 = (1 << 4)\n+    ShowClasses                 = (1 << 4),\n+    \/\/ Print details about the underlying virtual spaces.\n+    ShowChunkFreeList           = (1 << 5)\n","filename":"src\/hotspot\/share\/memory\/metaspace\/metaspaceReporter.hpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -171,0 +171,23 @@\n+        pb.command(new String[] { JDKToolFinder.getJDKTool(\"jcmd\"), pid, \"VM.metaspace\", \"chunkfreelist\"});\n+        \/\/ Output should look somewhat like this...\n+        \/\/ vvvvvvvvvvvvvvvv\n+        \/\/ Chunk freelist details:\n+        \/\/ Non-Class:\n+        \/\/ cm non-class-space: 5 chunks, total word size: 402944.\n+        \/\/         -- List[lv00]: empty\n+        \/\/         -- List[lv01]:  - <Chunk @0x00007f925c124090, state f, base 0x00007f9208600000, level lv01 (262144 words), used 0 words, committed 0 words.> - total : 1 chunks.\n+        \/\/         -- List[lv02]:  - <Chunk @0x00007f925c1240d8, state f, base 0x00007f9208500000, level lv02 (131072 words), used 0 words, committed 0 words.> - total : 1 chunks.\n+        \/\/         -- List[lv03]: empty\n+        \/\/ .....\n+        \/\/\n+        \/\/ total chunks: 5, total word size: 402944.\n+        \/\/ ^^^^^^^^^^^^^^^^^\n+        \/\/ .... but the actual number of chunks in the freelist is difficult to predict and may be low or zero since\n+        \/\/  no class unloading happened yet.\n+        output = new OutputAnalyzer(pb.start());\n+        output.shouldHaveExitValue(0);\n+        output.shouldContain(\"Chunk freelist details:\");\n+        \/\/ ... but we should see at least one one chunk somewhere, the list should never be empty.\n+        output.shouldMatch(\".*-- List\\\\[lv00\\\\].*\");\n+        output.shouldMatch(\".*total chunks.*total word size.*\");\n+\n","filename":"test\/hotspot\/jtreg\/runtime\/Metaspace\/PrintMetaspaceDcmd.java","additions":23,"deletions":0,"binary":false,"changes":23,"status":"modified"}]}