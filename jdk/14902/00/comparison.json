{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -205,0 +205,3 @@\n+  \/\/ Additional interface for interpreter frames:\n+  static int interpreter_frame_monitor_size_in_bytes();\n+\n","filename":"src\/hotspot\/cpu\/aarch64\/frame_aarch64.hpp","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -317,0 +317,3 @@\n+inline int frame::interpreter_frame_monitor_size_in_bytes() {\n+  return frame::interpreter_frame_monitor_size() * wordSize;\n+}\n","filename":"src\/hotspot\/cpu\/aarch64\/frame_aarch64.inline.hpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -626,1 +626,1 @@\n-    const int entry_size = frame::interpreter_frame_monitor_size() * wordSize;\n+    const int entry_size = frame::interpreter_frame_monitor_size_in_bytes();\n","filename":"src\/hotspot\/cpu\/aarch64\/interp_masm_aarch64.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -692,1 +692,1 @@\n-  const int entry_size = frame::interpreter_frame_monitor_size() * wordSize;\n+  const int entry_size = frame::interpreter_frame_monitor_size_in_bytes();\n@@ -773,1 +773,1 @@\n-  const int entry_size = frame::interpreter_frame_monitor_size() * wordSize;\n+  const int entry_size = frame::interpreter_frame_monitor_size_in_bytes();\n","filename":"src\/hotspot\/cpu\/aarch64\/templateInterpreterGenerator_aarch64.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -3817,1 +3817,1 @@\n-  const int entry_size = frame::interpreter_frame_monitor_size() * wordSize;\n+  const int entry_size = frame::interpreter_frame_monitor_size_in_bytes();\n@@ -3920,1 +3920,1 @@\n-  const int entry_size = frame::interpreter_frame_monitor_size() * wordSize;\n+  const int entry_size = frame::interpreter_frame_monitor_size_in_bytes();\n","filename":"src\/hotspot\/cpu\/aarch64\/templateTable_aarch64.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -135,0 +135,3 @@\n+  \/\/ Additional interface for interpreter frames:\n+  static int interpreter_frame_monitor_size_in_bytes();\n+\n","filename":"src\/hotspot\/cpu\/arm\/frame_arm.hpp","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -181,0 +181,3 @@\n+inline int frame::interpreter_frame_monitor_size_in_bytes() {\n+  return frame::interpreter_frame_monitor_size() * wordSize;\n+}\n","filename":"src\/hotspot\/cpu\/arm\/frame_arm.inline.hpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -818,1 +818,1 @@\n-    const int entry_size = frame::interpreter_frame_monitor_size() * wordSize;\n+    const int entry_size = frame::interpreter_frame_monitor_size_in_bytes();\n","filename":"src\/hotspot\/cpu\/arm\/interp_masm_arm.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -534,1 +534,1 @@\n-  const int entry_size = frame::interpreter_frame_monitor_size() * wordSize;\n+  const int entry_size = frame::interpreter_frame_monitor_size_in_bytes();\n@@ -573,1 +573,1 @@\n-  const int entry_size = frame::interpreter_frame_monitor_size() * wordSize;\n+  const int entry_size = frame::interpreter_frame_monitor_size_in_bytes();\n","filename":"src\/hotspot\/cpu\/arm\/templateInterpreterGenerator_arm.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -4274,1 +4274,1 @@\n-  const int entry_size = (frame::interpreter_frame_monitor_size() * wordSize);\n+  const int entry_size = (frame::interpreter_frame_monitor_size_in_bytes());\n@@ -4385,1 +4385,1 @@\n-  const int entry_size = (frame::interpreter_frame_monitor_size() * wordSize);\n+  const int entry_size = (frame::interpreter_frame_monitor_size_in_bytes());\n","filename":"src\/hotspot\/cpu\/arm\/templateTable_arm.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -4150,1 +4150,1 @@\n-    __ addi(Rcurrent_obj_addr, Rcurrent_obj_addr, frame::interpreter_frame_monitor_size() * wordSize);\n+    __ addi(Rcurrent_obj_addr, Rcurrent_obj_addr, frame::interpreter_frame_monitor_size_in_bytes());\n@@ -4164,1 +4164,1 @@\n-    __ addi(Rcurrent_obj_addr, Rcurrent_obj_addr, frame::interpreter_frame_monitor_size() * wordSize);\n+    __ addi(Rcurrent_obj_addr, Rcurrent_obj_addr, frame::interpreter_frame_monitor_size_in_bytes());\n@@ -4173,2 +4173,2 @@\n-  __ addi(Rcurrent_monitor, Rcurrent_obj_addr, -(frame::interpreter_frame_monitor_size() * wordSize) - in_bytes(BasicObjectLock::obj_offset()));\n-  __ addi(Rcurrent_obj_addr, Rcurrent_obj_addr, - frame::interpreter_frame_monitor_size() * wordSize);\n+  __ addi(Rcurrent_monitor, Rcurrent_obj_addr, -(frame::interpreter_frame_monitor_size_in_bytes()) - in_bytes(BasicObjectLock::obj_offset()));\n+  __ addi(Rcurrent_obj_addr, Rcurrent_obj_addr, - frame::interpreter_frame_monitor_size_in_bytes());\n@@ -4232,1 +4232,1 @@\n-    __ addi(Rcurrent_obj_addr, Rcurrent_obj_addr, frame::interpreter_frame_monitor_size() * wordSize);\n+    __ addi(Rcurrent_obj_addr, Rcurrent_obj_addr, frame::interpreter_frame_monitor_size_in_bytes());\n@@ -4243,1 +4243,1 @@\n-    __ addi(Rcurrent_obj_addr, Rcurrent_obj_addr, frame::interpreter_frame_monitor_size() * wordSize);\n+    __ addi(Rcurrent_obj_addr, Rcurrent_obj_addr, frame::interpreter_frame_monitor_size_in_bytes());\n@@ -4257,1 +4257,1 @@\n-          -(frame::interpreter_frame_monitor_size() * wordSize) - in_bytes(BasicObjectLock::obj_offset()));\n+          -(frame::interpreter_frame_monitor_size_in_bytes()) - in_bytes(BasicObjectLock::obj_offset()));\n","filename":"src\/hotspot\/cpu\/ppc\/templateTable_ppc_64.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -236,0 +236,3 @@\n+  \/\/ Additional interface for interpreter frames:\n+  static int interpreter_frame_monitor_size_in_bytes();\n+\n","filename":"src\/hotspot\/cpu\/riscv\/frame_riscv.hpp","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -308,0 +308,3 @@\n+inline int frame::interpreter_frame_monitor_size_in_bytes() {\n+  return frame::interpreter_frame_monitor_size() * wordSize;\n+}\n","filename":"src\/hotspot\/cpu\/riscv\/frame_riscv.inline.hpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -694,1 +694,1 @@\n-    const int entry_size = frame::interpreter_frame_monitor_size() * wordSize;\n+    const int entry_size = frame::interpreter_frame_monitor_size_in_bytes();\n","filename":"src\/hotspot\/cpu\/riscv\/interp_masm_riscv.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -604,1 +604,1 @@\n-  const int entry_size = frame::interpreter_frame_monitor_size() * wordSize;\n+  const int entry_size = frame::interpreter_frame_monitor_size_in_bytes();\n@@ -677,1 +677,1 @@\n-  const int entry_size = frame::interpreter_frame_monitor_size() * wordSize;\n+  const int entry_size = frame::interpreter_frame_monitor_size_in_bytes();\n","filename":"src\/hotspot\/cpu\/riscv\/templateInterpreterGenerator_riscv.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -3743,1 +3743,1 @@\n-   const int entry_size = frame::interpreter_frame_monitor_size() * wordSize;\n+   const int entry_size = frame::interpreter_frame_monitor_size_in_bytes();\n@@ -3841,1 +3841,1 @@\n-  const int entry_size = frame::interpreter_frame_monitor_size() * wordSize;\n+  const int entry_size = frame::interpreter_frame_monitor_size_in_bytes();\n","filename":"src\/hotspot\/cpu\/riscv\/templateTable_riscv.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -492,1 +492,0 @@\n-  static int interpreter_frame_interpreterstate_size_in_bytes();\n","filename":"src\/hotspot\/cpu\/s390\/frame_s390.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -260,4 +260,0 @@\n-inline int frame::interpreter_frame_interpreterstate_size_in_bytes() {\n-  return z_ijava_state_size;\n-}\n-\n","filename":"src\/hotspot\/cpu\/s390\/frame_s390.inline.hpp","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -842,1 +842,1 @@\n-    const int entry_size = frame::interpreter_frame_monitor_size() * wordSize;\n+    const int entry_size = frame::interpreter_frame_monitor_size_in_bytes();\n@@ -2042,1 +2042,1 @@\n-  const jint delta = -frame::interpreter_frame_monitor_size() * wordSize;\n+  const jint delta = -frame::interpreter_frame_monitor_size_in_bytes();\n","filename":"src\/hotspot\/cpu\/s390\/interp_masm_s390.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -4147,1 +4147,1 @@\n-  const int entry_size = frame::interpreter_frame_monitor_size() * wordSize;\n+  const int entry_size = frame::interpreter_frame_monitor_size_in_bytes();\n@@ -4242,1 +4242,1 @@\n-    const int entry_size = frame::interpreter_frame_monitor_size() * wordSize;\n+    const int entry_size = frame::interpreter_frame_monitor_size_in_bytes();\n","filename":"src\/hotspot\/cpu\/s390\/templateTable_s390.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -193,0 +193,3 @@\n+  \/\/ Additional interface for interpreter frames:\n+  static int interpreter_frame_monitor_size_in_bytes();\n+\n","filename":"src\/hotspot\/cpu\/x86\/frame_x86.hpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -306,0 +306,3 @@\n+inline int frame::interpreter_frame_monitor_size_in_bytes() {\n+  return frame::interpreter_frame_monitor_size() * wordSize;\n+}\n","filename":"src\/hotspot\/cpu\/x86\/frame_x86.inline.hpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1078,1 +1078,1 @@\n-    const int entry_size = frame::interpreter_frame_monitor_size() * wordSize;\n+    const int entry_size = frame::interpreter_frame_monitor_size_in_bytes();\n","filename":"src\/hotspot\/cpu\/x86\/interp_masm_x86.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -481,1 +481,1 @@\n-  const int entry_size = frame::interpreter_frame_monitor_size() * wordSize;\n+  const int entry_size = frame::interpreter_frame_monitor_size_in_bytes();\n@@ -570,1 +570,1 @@\n-  const int entry_size = frame::interpreter_frame_monitor_size() * wordSize;\n+  const int entry_size = frame::interpreter_frame_monitor_size_in_bytes();\n","filename":"src\/hotspot\/cpu\/x86\/templateInterpreterGenerator_x86.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -4323,1 +4323,1 @@\n-  const int entry_size = frame::interpreter_frame_monitor_size() * wordSize;\n+  const int entry_size = frame::interpreter_frame_monitor_size_in_bytes();\n@@ -4420,1 +4420,1 @@\n-  const int entry_size = frame::interpreter_frame_monitor_size() * wordSize;\n+  const int entry_size = frame::interpreter_frame_monitor_size_in_bytes();\n","filename":"src\/hotspot\/cpu\/x86\/templateTable_x86.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}