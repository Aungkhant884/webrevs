{"files":[{"patch":"@@ -147,1 +147,1 @@\n-      ShenandoahMarkRefsClosure mark_cl(q, rp);\n+      ShenandoahMarkRefsClosure<NO_DEDUP> mark_cl(q, rp);\n@@ -194,1 +194,3 @@\n-  ShenandoahMarkRefsClosure cl(q, _rp);\n+  \/\/ Cannot enable string deduplication during root scanning. Otherwise,\n+  \/\/ may result lock inversion between stack watermark and string dedup queue lock.\n+  ShenandoahMarkRefsClosure<NO_DEDUP> cl(q, _rp);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentMark.cpp","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -70,2 +70,3 @@\n-        ShenandoahMarkUpdateRefsMetadataDedupClosure cl(q, rp);\n-        mark_loop_work<ShenandoahMarkUpdateRefsMetadataDedupClosure, CANCELLABLE>(&cl, ld, w, t);\n+        using Closure = ShenandoahMarkUpdateRefsMetadataClosure<ENQUEUE_DEDUP>;\n+        Closure cl(q, rp);\n+        mark_loop_work<Closure, CANCELLABLE>(&cl, ld, w, t);\n@@ -73,2 +74,3 @@\n-        ShenandoahMarkUpdateRefsMetadataClosure cl(q, rp);\n-        mark_loop_work<ShenandoahMarkUpdateRefsMetadataClosure, CANCELLABLE>(&cl, ld, w, t);\n+        using Closure = ShenandoahMarkUpdateRefsMetadataClosure<NO_DEDUP>;\n+        Closure cl(q, rp);\n+        mark_loop_work<Closure, CANCELLABLE>(&cl, ld, w, t);\n@@ -78,2 +80,3 @@\n-        ShenandoahMarkRefsMetadataDedupClosure cl(q, rp);\n-        mark_loop_work<ShenandoahMarkRefsMetadataDedupClosure, CANCELLABLE>(&cl, ld, w, t);\n+        using Closure = ShenandoahMarkRefsMetadataClosure<ENQUEUE_DEDUP>;\n+        Closure cl(q, rp);\n+        mark_loop_work<Closure, CANCELLABLE>(&cl, ld, w, t);\n@@ -81,2 +84,3 @@\n-        ShenandoahMarkRefsMetadataClosure cl(q, rp);\n-        mark_loop_work<ShenandoahMarkRefsMetadataClosure, CANCELLABLE>(&cl, ld, w, t);\n+        using Closure = ShenandoahMarkRefsMetadataClosure<NO_DEDUP>;\n+        Closure cl(q, rp);\n+        mark_loop_work<Closure, CANCELLABLE>(&cl, ld, w, t);\n@@ -88,2 +92,3 @@\n-        ShenandoahMarkUpdateRefsDedupClosure cl(q, rp);\n-        mark_loop_work<ShenandoahMarkUpdateRefsDedupClosure, CANCELLABLE>(&cl, ld, w, t);\n+        using Closure = ShenandoahMarkUpdateRefsClosure<ENQUEUE_DEDUP>;\n+        Closure cl(q, rp);\n+        mark_loop_work<Closure, CANCELLABLE>(&cl, ld, w, t);\n@@ -91,2 +96,3 @@\n-        ShenandoahMarkUpdateRefsClosure cl(q, rp);\n-        mark_loop_work<ShenandoahMarkUpdateRefsClosure, CANCELLABLE>(&cl, ld, w, t);\n+        using Closure = ShenandoahMarkUpdateRefsClosure<NO_DEDUP>;\n+        Closure cl(q, rp);\n+        mark_loop_work<Closure, CANCELLABLE>(&cl, ld, w, t);\n@@ -96,2 +102,3 @@\n-        ShenandoahMarkRefsDedupClosure cl(q, rp);\n-        mark_loop_work<ShenandoahMarkRefsDedupClosure, CANCELLABLE>(&cl, ld, w, t);\n+        using Closure = ShenandoahMarkRefsClosure<ENQUEUE_DEDUP>;\n+        Closure cl(q, rp);\n+        mark_loop_work<Closure, CANCELLABLE>(&cl, ld, w, t);\n@@ -99,2 +106,3 @@\n-        ShenandoahMarkRefsClosure cl(q, rp);\n-        mark_loop_work<ShenandoahMarkRefsClosure, CANCELLABLE>(&cl, ld, w, t);\n+        using Closure = ShenandoahMarkRefsClosure<NO_DEDUP>;\n+        Closure cl(q, rp);\n+        mark_loop_work<Closure, CANCELLABLE>(&cl, ld, w, t);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahMark.cpp","additions":24,"deletions":16,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2019, Red Hat, Inc. All rights reserved.\n+ * Copyright (c) 2015, 2021, Red Hat, Inc. All rights reserved.\n@@ -78,0 +78,1 @@\n+template <StringDedupMode STRING_DEDUP>\n@@ -81,1 +82,1 @@\n-  inline void do_oop_work(T* p)     { work<T, NO_DEDUP>(p); }\n+  inline void do_oop_work(T* p)     { work<T, STRING_DEDUP>(p); }\n@@ -92,14 +93,1 @@\n-class ShenandoahMarkUpdateRefsDedupClosure : public ShenandoahMarkUpdateRefsSuperClosure {\n-private:\n-  template <class T>\n-  inline void do_oop_work(T* p)     { work<T, ENQUEUE_DEDUP>(p); }\n-\n-public:\n-  ShenandoahMarkUpdateRefsDedupClosure(ShenandoahObjToScanQueue* q, ShenandoahReferenceProcessor* rp) :\n-    ShenandoahMarkUpdateRefsSuperClosure(q, rp) {}\n-\n-  virtual void do_oop(narrowOop* p) { do_oop_work(p); }\n-  virtual void do_oop(oop* p)       { do_oop_work(p); }\n-  virtual bool do_metadata()        { return false; }\n-};\n-\n+template <StringDedupMode STRING_DEDUP>\n@@ -109,1 +97,1 @@\n-  inline void do_oop_work(T* p)     { work<T, NO_DEDUP>(p); }\n+  inline void do_oop_work(T* p)     { work<T, STRING_DEDUP>(p); }\n@@ -120,13 +108,0 @@\n-class ShenandoahMarkUpdateRefsMetadataDedupClosure : public ShenandoahMarkUpdateRefsSuperClosure {\n-private:\n-  template <class T>\n-  inline void do_oop_work(T* p)     { work<T, ENQUEUE_DEDUP>(p); }\n-\n-public:\n-  ShenandoahMarkUpdateRefsMetadataDedupClosure(ShenandoahObjToScanQueue* q, ShenandoahReferenceProcessor* rp) :\n-    ShenandoahMarkUpdateRefsSuperClosure(q, rp) {}\n-\n-  virtual void do_oop(narrowOop* p) { do_oop_work(p); }\n-  virtual void do_oop(oop* p)       { do_oop_work(p); }\n-  virtual bool do_metadata()        { return true; }\n-};\n@@ -134,0 +109,1 @@\n+template <StringDedupMode STRING_DEDUP>\n@@ -137,1 +113,1 @@\n-  inline void do_oop_work(T* p)     { work<T, NO_DEDUP>(p); }\n+  inline void do_oop_work(T* p)     { work<T, STRING_DEDUP>(p); }\n@@ -148,13 +124,0 @@\n-class ShenandoahMarkRefsDedupClosure : public ShenandoahMarkRefsSuperClosure {\n-private:\n-  template <class T>\n-  inline void do_oop_work(T* p)     { work<T, ENQUEUE_DEDUP>(p); }\n-\n-public:\n-  ShenandoahMarkRefsDedupClosure(ShenandoahObjToScanQueue* q, ShenandoahReferenceProcessor* rp) :\n-    ShenandoahMarkRefsSuperClosure(q, rp) {};\n-\n-  virtual void do_oop(narrowOop* p) { do_oop_work(p); }\n-  virtual void do_oop(oop* p)       { do_oop_work(p); }\n-  virtual bool do_metadata()        { return false; }\n-};\n@@ -162,0 +125,1 @@\n+template <StringDedupMode STRING_DEDUP>\n@@ -165,1 +129,1 @@\n-  inline void do_oop_work(T* p)     { work<T, NO_DEDUP>(p); }\n+  inline void do_oop_work(T* p)     { work<T, STRING_DEDUP>(p); }\n@@ -174,14 +138,0 @@\n-};\n-\n-class ShenandoahMarkRefsMetadataDedupClosure : public ShenandoahMarkRefsSuperClosure {\n-private:\n-  template <class T>\n-  inline void do_oop_work(T* p)     { work<T, ENQUEUE_DEDUP>(p); }\n-\n-public:\n-  ShenandoahMarkRefsMetadataDedupClosure(ShenandoahObjToScanQueue* q, ShenandoahReferenceProcessor* rp) :\n-    ShenandoahMarkRefsSuperClosure(q, rp) {};\n-\n-  virtual void do_oop(narrowOop* p) { do_oop_work(p); }\n-  virtual void do_oop(oop* p)       { do_oop_work(p); }\n-  virtual bool do_metadata()        { return true; }\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOopClosures.hpp","additions":9,"deletions":59,"binary":false,"changes":68,"status":"modified"}]}