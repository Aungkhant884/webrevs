{"files":[{"patch":"@@ -64,1 +64,1 @@\n-            frame.setSize(200,200);\n+            frame.setSize(200, 200);\n@@ -74,12 +74,19 @@\n-            if (!componentEventReceived) {\n-                throw new RuntimeException(\"Test Failed: ComponentEvent was not dispatched\");\n-            }\n-            if (!containerEventReceived) {\n-                throw new RuntimeException(\"Test Failed: ContainerEvent was not dispatched\");\n-            }\n-            if (!hierarchyEventReceived) {\n-                throw new RuntimeException(\"Test Failed: HierarchyEvent(HIERARCHY_CHANGED) was not dispatched\");\n-            }\n-            if (!hierarchyBoundsEventReceived) {\n-                throw new RuntimeException(\"Test Failed: HierarchyEvent(ANCESTOR_MOVED or ANCESTOR_RESIZED) was not dispatched\");\n-            }\n+            EventQueue.invokeAndWait(() -> {\n+                if (!componentEventReceived) {\n+                    throw new RuntimeException(\"Test Failed: ComponentEvent \" +\n+                        \"was not dispatched\");\n+                }\n+                if (!containerEventReceived) {\n+                    throw new RuntimeException(\"Test Failed: ContainerEvent \" +\n+                        \"was not dispatched\");\n+                }\n+                if (!hierarchyEventReceived) {\n+                    throw new RuntimeException(\"Test Failed: \" +\n+                        \"HierarchyEvent(HIERARCHY_CHANGED) was not dispatched\");\n+                }\n+                if (!hierarchyBoundsEventReceived) {\n+                    throw new RuntimeException(\"Test Failed: \" +\n+                        \"HierarchyEvent(ANCESTOR_MOVED or ANCESTOR_RESIZED) \" +\n+                        \"was not dispatched\");\n+                }\n+            });\n@@ -87,1 +94,2 @@\n-            throw new RuntimeException(\"Test Failed: InterruptedException accured.\");\n+            throw new RuntimeException(\"Test Failed: InterruptedException \" +\n+                \"accured.\");\n@@ -89,1 +97,2 @@\n-            throw new RuntimeException(\"Test Failed: InvocationTargetException accured.\");\n+            throw new RuntimeException(\"Test Failed: \" +\n+                \"InvocationTargetException accured.\");\n","filename":"test\/jdk\/java\/awt\/Toolkit\/ToolkitListenerTest\/ToolkitListenerTest.java","additions":24,"deletions":15,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -192,1 +192,1 @@\n-                    finished  = true;\n+                    finished = true;\n","filename":"test\/jdk\/java\/awt\/datatransfer\/CRLFTest\/CRLFTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -187,1 +187,1 @@\n-                    finished  = true;\n+                    finished = true;\n","filename":"test\/jdk\/java\/awt\/datatransfer\/DataConversionDeadlockTest\/DataConversionDeadlockTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -62,1 +62,1 @@\n-        }\/\/try\n+        }\n@@ -67,1 +67,1 @@\n-        }\/\/catch\n+        }\n@@ -83,1 +83,1 @@\n-        if(bestFlavor2.match(bestFlavor1)) {\n+        if (bestFlavor2.match(bestFlavor1)) {\n@@ -85,1 +85,0 @@\n-            System.out.println(\"Pass\");\n@@ -100,1 +99,1 @@\n-        for(int i = dataflavor.length - 1  ; i >= 0; i--) {\n+        for (int i = dataflavor.length - 1  ; i >= 0; i--) {\n","filename":"test\/jdk\/java\/awt\/datatransfer\/DataFlavor\/BestTextFlavorTest\/BestTextFlavorTest.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -202,1 +202,1 @@\n-                    finished  = true;\n+                    finished = true;\n","filename":"test\/jdk\/java\/awt\/datatransfer\/FileTransferAWTLockTest\/FileTransferAWTLockTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}