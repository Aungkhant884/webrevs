{"files":[{"patch":"@@ -1229,1 +1229,1 @@\n-                    doEcho = Boolean.valueOf(t.nextToken()).booleanValue();\n+                    doEcho = Boolean.parseBoolean(t.nextToken());\n@@ -1241,1 +1241,1 @@\n-                    if (Boolean.valueOf(t.nextToken()).booleanValue()) {\n+                    if (Boolean.parseBoolean(t.nextToken())) {\n@@ -1305,1 +1305,1 @@\n-                    Integer value = Integer.valueOf(t.nextToken());\n+                    int value = Integer.parseInt(t.nextToken());\n@@ -1328,1 +1328,1 @@\n-                    Long value = Long.valueOf(t.nextToken());\n+                    long value = Long.parseLong(t.nextToken());\n@@ -1355,1 +1355,1 @@\n-                    boolean isStatic = Boolean.valueOf(t.nextToken()).booleanValue();\n+                    boolean isStatic = Boolean.parseBoolean(t.nextToken());\n@@ -1417,3 +1417,3 @@\n-                    boolean isOop = Boolean.valueOf(t.nextToken()).booleanValue();\n-                    boolean isInteger = Boolean.valueOf(t.nextToken()).booleanValue();\n-                    boolean isUnsigned = Boolean.valueOf(t.nextToken()).booleanValue();\n+                    boolean isOop = Boolean.parseBoolean(t.nextToken());\n+                    boolean isInteger = Boolean.parseBoolean(t.nextToken());\n+                    boolean isUnsigned = Boolean.parseBoolean(t.nextToken());\n@@ -1810,1 +1810,1 @@\n-                    verboseExceptions = Boolean.valueOf(t.nextToken()).booleanValue();\n+                    verboseExceptions = Boolean.parseBoolean(t.nextToken());\n@@ -1819,1 +1819,1 @@\n-                    Assert.ASSERTS_ENABLED = Boolean.valueOf(t.nextToken()).booleanValue();\n+                    Assert.ASSERTS_ENABLED = Boolean.parseBoolean(t.nextToken());\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/CommandProcessor.java","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -270,1 +270,1 @@\n-            boolean isStatic = Boolean.valueOf(t.sval).booleanValue();\n+            boolean isStatic = Boolean.parseBoolean(t.sval);\n@@ -324,1 +324,1 @@\n-            boolean isOop = Boolean.valueOf(t.sval).booleanValue();\n+            boolean isOop = Boolean.parseBoolean(t.sval);\n@@ -326,1 +326,1 @@\n-            boolean isInteger = Boolean.valueOf(t.sval).booleanValue();\n+            boolean isInteger = Boolean.parseBoolean(t.sval);\n@@ -328,1 +328,1 @@\n-            boolean isUnsigned = Boolean.valueOf(t.sval).booleanValue();\n+            boolean isUnsigned = Boolean.parseBoolean(t.sval);\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/HotSpotTypeDataBase.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -76,1 +76,1 @@\n-            Long stackSize = t.getStackSize();\n+            long stackSize = t.getStackSize();\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/utilities\/PointerFinder.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}