{"files":[{"patch":"@@ -398,1 +398,1 @@\n-  EventMark em(\"Executing %s VM operation: %s\", prev_vm_operation != NULL ? \"nested\" : \"\", op->name());\n+  EventMarkVMOperation em(\"Executing %sVM operation: %s\", prev_vm_operation != NULL ? \"nested \" : \"\", op->name());\n","filename":"src\/hotspot\/share\/runtime\/vmThread.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -38,0 +38,1 @@\n+StringEventLog* Events::_vm_operations = NULL;\n@@ -94,0 +95,1 @@\n+    _vm_operations = new StringEventLog(\"VM Operations\", \"vmops\");\n@@ -108,9 +110,8 @@\n-EventMark::EventMark(const char* format, ...) {\n-  if (LogEvents) {\n-    va_list ap;\n-    va_start(ap, format);\n-    \/\/ Save a copy of begin message and log it.\n-    _buffer.printv(format, ap);\n-    Events::log(NULL, \"%s\", _buffer.buffer());\n-    va_end(ap);\n-  }\n+EventMarkBase::EventMarkBase(EventLogFunction log_function) :\n+    _log_function(log_function),\n+    _buffer() {}\n+\n+void EventMarkBase::log_start(const char* format, va_list argp) {\n+  \/\/ Save a copy of begin message and log it.\n+  _buffer.printv(format, argp);\n+  _log_function(NULL, \"%s\", _buffer.buffer());\n@@ -119,6 +120,4 @@\n-EventMark::~EventMark() {\n-  if (LogEvents) {\n-    \/\/ Append \" done\" to the begin message and log it\n-    _buffer.append(\" done\");\n-    Events::log(NULL, \"%s\", _buffer.buffer());\n-  }\n+void EventMarkBase::log_end() {\n+  \/\/ Append \" done\" to the begin message and log it\n+  _buffer.append(\" done\");\n+  _log_function(NULL, \"%s\", _buffer.buffer());\n","filename":"src\/hotspot\/share\/utilities\/events.cpp","additions":14,"deletions":15,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -223,0 +223,3 @@\n+  \/\/ A log for VM Operations\n+  static StringEventLog* _vm_operations;\n+\n@@ -250,0 +253,2 @@\n+  static void log_vm_operation(Thread* thread, const char* format, ...) ATTRIBUTE_PRINTF(2, 3);\n+\n@@ -273,0 +278,9 @@\n+inline void Events::log_vm_operation(Thread* thread, const char* format, ...) {\n+  if (LogEvents && _vm_operations != NULL) {\n+    va_list ap;\n+    va_start(ap, format);\n+    _vm_operations->logv(thread, format, ap);\n+    va_end(ap);\n+  }\n+}\n+\n@@ -417,0 +431,14 @@\n+typedef void (*EventLogFunction)(Thread* thread, const char* format, ...);\n+\n+class EventMarkBase : public StackObj {\n+  EventLogFunction _log_function;\n+  StringLogMessage _buffer;\n+\n+ protected:\n+  void log_start(const char* format, va_list argp) ATTRIBUTE_PRINTF(2, 0);\n+  void log_end();\n+\n+ public:\n+  EventMarkBase(EventLogFunction log_function);\n+};\n+\n@@ -418,2 +446,2 @@\n-\/\/ These end up in the default log.\n-class EventMark : public StackObj {\n+template <EventLogFunction log_function>\n+class EventMarkWithLogFunction : public EventMarkBase {\n@@ -424,1 +452,9 @@\n-  EventMark(const char* format, ...) ATTRIBUTE_PRINTF(2, 3);\n+  EventMarkWithLogFunction(const char* format, ...) ATTRIBUTE_PRINTF(2, 3) :\n+      EventMarkBase(log_function) {\n+    if (LogEvents) {\n+      va_list ap;\n+      va_start(ap, format);\n+      log_start(format, ap);\n+      va_end(ap);\n+    }\n+  }\n@@ -426,1 +462,5 @@\n-  ~EventMark();\n+  ~EventMarkWithLogFunction() {\n+    if (LogEvents) {\n+      log_end();\n+    }\n+  }\n@@ -429,0 +469,6 @@\n+\/\/ These end up in the default log.\n+typedef EventMarkWithLogFunction<Events::log> EventMark;\n+\n+\/\/ These end up in the vm_operation log.\n+typedef EventMarkWithLogFunction<Events::log_vm_operation> EventMarkVMOperation;\n+\n","filename":"src\/hotspot\/share\/utilities\/events.hpp","additions":50,"deletions":4,"binary":false,"changes":54,"status":"modified"}]}