{"files":[{"patch":"@@ -50,4 +50,3 @@\n- * <pre>\n- * BufferedReader in\n- *   = new BufferedReader(new FileReader(\"foo.in\"));\n- * <\/pre>\n+ * {@snippet lang=java :\n+ *     BufferedReader in = new BufferedReader(new FileReader(\"foo.in\"));\n+ * }\n","filename":"src\/java.base\/share\/classes\/java\/io\/BufferedReader.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -51,4 +51,3 @@\n- * <pre>\n- * PrintWriter out\n- *   = new PrintWriter(new BufferedWriter(new FileWriter(\"foo.out\")));\n- * <\/pre>\n+ * {@snippet lang=java :\n+ *     PrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter(\"foo.out\")));\n+ * }\n","filename":"src\/java.base\/share\/classes\/java\/io\/BufferedWriter.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -231,5 +231,4 @@\n-     * <pre> {@code\n-     *      ByteArrayOutputStream b = ...\n-     *      b.toString(\"UTF-8\")\n-     *      }\n-     * <\/pre>\n+     * {@snippet lang=java :\n+     *     ByteArrayOutputStream b;\n+     *     b.toString(\"UTF-8\")\n+     * }\n@@ -239,5 +238,4 @@\n-     * <pre> {@code\n-     *      ByteArrayOutputStream b = ...\n-     *      b.toString(StandardCharsets.UTF_8)\n-     *      }\n-     * <\/pre>\n+     * {@snippet lang=java :\n+     *     ByteArrayOutputStream b;\n+     *     b.toString(StandardCharsets.UTF_8)\n+     * }\n@@ -285,1 +283,1 @@\n-     * <blockquote><pre>{@code\n+     * {@snippet lang=java :\n@@ -287,1 +285,1 @@\n-     * }<\/pre><\/blockquote>\n+     * }\n","filename":"src\/java.base\/share\/classes\/java\/io\/ByteArrayOutputStream.java","additions":10,"deletions":12,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -155,2 +155,3 @@\n-     * <pre>\n-     *     out.write(csq.toString()) <\/pre>\n+     * {@snippet lang=java :\n+     *     out.write(csq.toString())\n+     * }\n@@ -187,2 +188,3 @@\n-     * <pre>\n-     *     out.write(csq.subSequence(start, end).toString()) <\/pre>\n+     * {@snippet lang=java :\n+     *     out.write(csq.subSequence(start, end).toString())\n+     * }\n@@ -223,2 +225,3 @@\n-     * <pre>\n-     *     out.write(c) <\/pre>\n+     * {@snippet lang=java :\n+     *     out.write(c)\n+     * }\n","filename":"src\/java.base\/share\/classes\/java\/io\/CharArrayWriter.java","additions":9,"deletions":6,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -89,1 +89,1 @@\n- *     ...\n+ *     code: \/\/ @replace substring=\"code:\" replacement=\"...\"\n@@ -120,5 +120,6 @@\n-     * <blockquote><pre>\n-     * Console con = System.console();\n-     * if (con != null) {\n-     *     Scanner sc = new Scanner(con.reader());\n-     *     ...\n+     * {@snippet lang=java :\n+     *     Console con = System.console();\n+     *     if (con != null) {\n+     *         Scanner sc = new Scanner(con.reader());\n+     *         code: \/\/ @replace substring=\"code:\" replacement=\"...\"\n+     *     }\n@@ -126,1 +127,0 @@\n-     * <\/pre><\/blockquote>\n@@ -189,1 +189,3 @@\n-     * <pre>con.format(format, args)<\/pre>.\n+     * {@snippet lang=java :\n+     *     con.format(format, args)\n+     * }\n","filename":"src\/java.base\/share\/classes\/java\/io\/Console.java","additions":10,"deletions":8,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -1591,1 +1591,1 @@\n-     * <pre>{@code\n+     * {@snippet lang=java :\n@@ -1593,1 +1593,1 @@\n-     * }<\/pre>\n+     * }\n@@ -1670,1 +1670,1 @@\n-     * <pre>{@code\n+     * {@snippet lang=java :\n@@ -1672,1 +1672,1 @@\n-     * }<\/pre>\n+     * }\n@@ -1752,1 +1752,1 @@\n-     * <pre>{@code\n+     * {@snippet lang=java :\n@@ -1754,1 +1754,1 @@\n-     * }<\/pre>\n+     * }\n@@ -2373,4 +2373,4 @@\n-     * <blockquote><pre>\n-     * {@link java.nio.file.FileSystems#getDefault FileSystems.getDefault}().{@link\n-     * java.nio.file.FileSystem#getPath getPath}(this.{@link #getPath getPath}());\n-     * <\/pre><\/blockquote>\n+     * {@snippet lang=java :\n+     *         \/\/ @link regex=\"getPath(?=\\(t)\" target=\"java.nio.file.FileSystem#getPath\" :\n+     *         FileSystems.getDefault().getPath(this.getPath());\n+     * }\n","filename":"src\/java.base\/share\/classes\/java\/io\/File.java","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -1033,1 +1033,1 @@\n-     *   \"\/tmp\/scratch\/foo\", \"read,write\",\n+     *     \"\/tmp\/scratch\/foo\", \"read,write\",\n","filename":"src\/java.base\/share\/classes\/java\/io\/FilePermission.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -204,1 +204,4 @@\n-     * has the same effect as: <pre>{@code  read(b, 0, b.length) }<\/pre>\n+     * has the same effect as:\n+     * {@snippet lang=java :\n+     *     read(b, 0, b.length)\n+     * }\n","filename":"src\/java.base\/share\/classes\/java\/io\/InputStream.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,4 +50,3 @@\n- * <pre>\n- * BufferedReader in\n- *   = new BufferedReader(new InputStreamReader(anInputStream));\n- * <\/pre>\n+ * {@snippet lang=java :\n+ *     BufferedReader in = new BufferedReader(new InputStreamReader(anInputStream));\n+ * }\n","filename":"src\/java.base\/share\/classes\/java\/io\/InputStreamReader.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,4 +49,3 @@\n- * <pre>\n- * Writer out\n- *   = new BufferedWriter(new OutputStreamWriter(anOutputStream));\n- * <\/pre>\n+ * {@snippet lang=java :\n+ *     Writer out = new BufferedWriter(new OutputStreamWriter(anOutputStream));\n+ * }\n","filename":"src\/java.base\/share\/classes\/java\/io\/OutputStreamWriter.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1995, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1995, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -178,1 +178,3 @@\n-     * <pre>{@code snk.connect(src)} <\/pre>\n+     * {@snippet lang=java :\n+     *     snk.connect(src)\n+     * }\n@@ -182,1 +184,3 @@\n-     * <pre>{@code src.connect(snk)} <\/pre>\n+     * {@snippet lang=java :\n+     *     src.connect(snk)\n+     * }\n","filename":"src\/java.base\/share\/classes\/java\/io\/PipedInputStream.java","additions":7,"deletions":3,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -85,2 +85,3 @@\n-     * <blockquote><pre>\n-     * src.connect(snk)<\/pre><\/blockquote>\n+     * {@snippet lang=java :\n+     *     src.connect(snk)\n+     * }\n@@ -88,2 +89,3 @@\n-     * <blockquote><pre>\n-     * snk.connect(src)<\/pre><\/blockquote>\n+     * {@snippet lang=java :\n+     *     snk.connect(src)\n+     * }\n","filename":"src\/java.base\/share\/classes\/java\/io\/PipedOutputStream.java","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -149,1 +149,3 @@\n-     * <pre>{@code snk.connect(src)} <\/pre>\n+     * {@snippet lang=java :\n+     *     snk.connect(src)\n+     * }\n@@ -153,1 +155,3 @@\n-     * <pre>{@code src.connect(snk)} <\/pre>\n+     * {@snippet lang=java :\n+     *     src.connect(snk)\n+     * }\n","filename":"src\/java.base\/share\/classes\/java\/io\/PipedReader.java","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -83,2 +83,3 @@\n-     * <blockquote><pre>\n-     * src.connect(snk)<\/pre><\/blockquote>\n+     * {@snippet lang=java :\n+     *     src.connect(snk)\n+     * }\n@@ -86,2 +87,3 @@\n-     * <blockquote><pre>\n-     * snk.connect(src)<\/pre><\/blockquote>\n+     * {@snippet lang=java :\n+     *     snk.connect(src)\n+     * }\n","filename":"src\/java.base\/share\/classes\/java\/io\/PipedWriter.java","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -1209,1 +1209,1 @@\n-     * <pre>{@code\n+     * {@snippet lang=java :\n@@ -1211,1 +1211,1 @@\n-     * }<\/pre>\n+     * }\n@@ -1256,1 +1256,1 @@\n-     * <pre>{@code\n+     * {@snippet lang=java :\n@@ -1258,1 +1258,1 @@\n-     * }<\/pre>\n+     * }\n@@ -1445,1 +1445,1 @@\n-     * <pre>{@code\n+     * {@snippet lang=java :\n@@ -1447,1 +1447,1 @@\n-     * }<\/pre>\n+     * }\n@@ -1478,1 +1478,1 @@\n-     * <pre>{@code\n+     * {@snippet lang=java :\n@@ -1480,1 +1480,1 @@\n-     * }<\/pre>\n+     * }\n@@ -1515,1 +1515,1 @@\n-     * <pre>{@code\n+     * {@snippet lang=java :\n@@ -1517,1 +1517,1 @@\n-     * }<\/pre>\n+     * }\n","filename":"src\/java.base\/share\/classes\/java\/io\/PrintStream.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -1048,1 +1048,1 @@\n-     * <pre>{@code\n+     * {@snippet lang=java :\n@@ -1050,1 +1050,1 @@\n-     * }<\/pre>\n+     * }\n@@ -1096,1 +1096,1 @@\n-     * <pre>{@code\n+     * {@snippet lang=java :\n@@ -1098,1 +1098,1 @@\n-     * }<\/pre>\n+     * }\n@@ -1292,1 +1292,1 @@\n-     * <pre>{@code\n+     * {@snippet lang=java :\n@@ -1294,1 +1294,1 @@\n-     * }<\/pre>\n+     * }\n@@ -1324,1 +1324,1 @@\n-     * <pre>{@code\n+     * {@snippet lang=java :\n@@ -1326,1 +1326,1 @@\n-     * }<\/pre>\n+     * }\n@@ -1361,1 +1361,1 @@\n-     * <pre>{@code\n+     * {@snippet lang=java :\n@@ -1363,1 +1363,1 @@\n-     * }<\/pre>\n+     * }\n","filename":"src\/java.base\/share\/classes\/java\/io\/PrintWriter.java","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -761,1 +761,1 @@\n-     * <blockquote><pre>\n+     * {@snippet lang=java :\n@@ -763,1 +763,1 @@\n-     * <\/pre><\/blockquote>\n+     * }\n@@ -804,3 +804,3 @@\n-     * <blockquote><pre>\n-     *     (short)((b1 &lt;&lt; 8) | b2)\n-     * <\/pre><\/blockquote>\n+     * {@snippet lang=java :\n+     *     (short)((b1 << 8) | b2)\n+     * }\n@@ -828,3 +828,3 @@\n-     * <blockquote><pre>\n-     *     (b1 &lt;&lt; 8) | b2\n-     * <\/pre><\/blockquote>\n+     * {@snippet lang=java :\n+     *     (b1 << 8) | b2\n+     * }\n@@ -854,3 +854,3 @@\n-     * <blockquote><pre>\n-     *     (char)((b1 &lt;&lt; 8) | b2)\n-     * <\/pre><\/blockquote>\n+     * {@snippet lang=java :\n+     *     (char)((b1 << 8) | b2)\n+     * }\n@@ -878,3 +878,3 @@\n-     * <blockquote><pre>\n-     *     (b1 &lt;&lt; 24) | (b2 &lt;&lt; 16) + (b3 &lt;&lt; 8) + b4\n-     * <\/pre><\/blockquote>\n+     * {@snippet lang=java :\n+     *     (b1 << 24) | (b2 << 16) + (b3 << 8) + b4\n+     * }\n@@ -903,3 +903,3 @@\n-     * <blockquote><pre>\n-     *     0 &lt;= b1, b2, b3, b4, b5, b6, b7, b8 &lt;=255,\n-     * <\/pre><\/blockquote>\n+     * {@snippet :\n+     *     0 <= b1, b2, b3, b4, b5, b6, b7, b8 <= 255\n+     * }\n@@ -908,6 +908,6 @@\n-     * <blockquote><pre>\n-     *     ((long)b1 &lt;&lt; 56) + ((long)b2 &lt;&lt; 48)\n-     *     + ((long)b3 &lt;&lt; 40) + ((long)b4 &lt;&lt; 32)\n-     *     + ((long)b5 &lt;&lt; 24) + ((long)b6 &lt;&lt; 16)\n-     *     + ((long)b7 &lt;&lt; 8) + b8\n-     * <\/pre><\/blockquote>\n+     * {@snippet lang=java :\n+     *     ((long)b1 << 56) + ((long)b2 << 48)\n+     *         + ((long)b3 << 40) + ((long)b4 << 32)\n+     *         + ((long)b5 << 24) + ((long)b6 << 16)\n+     *         + ((long)b7 << 8) + b8\n+     * }\n","filename":"src\/java.base\/share\/classes\/java\/io\/RandomAccessFile.java","additions":23,"deletions":23,"binary":false,"changes":46,"status":"modified"},{"patch":"@@ -220,4 +220,4 @@\n-     * <blockquote><pre>\n-     *   Reader r = new BufferedReader(new InputStreamReader(is));\n-     *   StreamTokenizer st = new StreamTokenizer(r);\n-     * <\/pre><\/blockquote>\n+     * {@snippet lang=java :\n+     *     Reader r = new BufferedReader(new InputStreamReader(is));\n+     *     StreamTokenizer st = new StreamTokenizer(r);\n+     * }\n@@ -394,1 +394,1 @@\n-     *      0 1 2 3 4 5 6 7 8 9 . -\n+     *     0 1 2 3 4 5 6 7 8 9 . -\n@@ -773,1 +773,3 @@\n-     * <blockquote><pre>Token['a'], line 10<\/pre><\/blockquote>\n+     * <blockquote><pre>\n+     *         Token['a'], line 10\n+     * <\/pre><\/blockquote>\n","filename":"src\/java.base\/share\/classes\/java\/io\/StreamTokenizer.java","additions":8,"deletions":6,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -131,2 +131,3 @@\n-     * <pre>\n-     *     out.write(csq.toString()) <\/pre>\n+     * {@snippet lang=java :\n+     *     out.write(csq.toString())\n+     * }\n@@ -162,1 +163,1 @@\n-     * <pre>{@code\n+     * {@snippet lang=java :\n@@ -164,1 +165,1 @@\n-     * }<\/pre>\n+     * }\n@@ -199,2 +200,3 @@\n-     * <pre>\n-     *     out.write(c) <\/pre>\n+     * {@snippet lang=java :\n+     *     out.write(c)\n+     * }\n","filename":"src\/java.base\/share\/classes\/java\/io\/StringWriter.java","additions":8,"deletions":6,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -343,2 +343,3 @@\n-     * <pre>\n-     *     out.write(csq.toString()) <\/pre>\n+     * {@snippet lang=java :\n+     *     out.write(csq.toString())\n+     * }\n@@ -378,1 +379,1 @@\n-     * <pre>{@code\n+     * {@snippet lang=java :\n@@ -380,1 +381,1 @@\n-     * }<\/pre>\n+     * }\n@@ -418,2 +419,3 @@\n-     * <pre>\n-     *     out.write(c) <\/pre>\n+     * {@snippet lang=java :\n+     *     out.write(c)\n+     * }\n","filename":"src\/java.base\/share\/classes\/java\/io\/Writer.java","additions":9,"deletions":7,"binary":false,"changes":16,"status":"modified"}]}