{"files":[{"patch":"@@ -40,2 +40,4 @@\n- * @run main\/othervm HandshakeTimeout\n- * @run main\/othervm HandshakeTimeout SSL\n+ * @run main\/othervm\/timeout=10 -Dsun.rmi.transport.tcp.handshakeTimeout=1\n+ *                              HandshakeTimeout\n+ * @run main\/othervm\/timeout=10 -Dsun.rmi.transport.tcp.handshakeTimeout=1\n+ *                              HandshakeTimeout SSL\n@@ -49,1 +51,0 @@\n-import java.rmi.MarshalException;\n@@ -55,2 +56,0 @@\n-    private static final int TIMEOUT = 10000;\n-\n@@ -59,3 +58,0 @@\n-        System.setProperty(\"sun.rmi.transport.tcp.handshakeTimeout\",\n-                           String.valueOf(TIMEOUT \/ 2));\n-\n@@ -79,12 +75,3 @@\n-        Connector connector = new Connector(registry);\n-        Thread t = new Thread(connector);\n-        t.setDaemon(true);\n-        t.start();\n-\n-        \/*\n-         * Wait for call attempt to finished, and analyze result.\n-         *\/\n-        t.join(TIMEOUT);\n-        synchronized (connector) {\n-            if (connector.success) {\n-                throw new RuntimeException(\n+        try {\n+            registry.lookup(\"Dale Cooper\");\n+            throw new RuntimeException(\n@@ -92,50 +79,6 @@\n-            }\n-            if (connector.exception == null) {\n-                throw new RuntimeException(\n-                    \"TEST FAILED: remote call did not time out\");\n-            } else {\n-                System.err.println(\"remote call failed with exception:\");\n-                connector.exception.printStackTrace();\n-                System.err.println();\n-\n-                if (connector.exception instanceof MarshalException) {\n-                    throw new RuntimeException(\n-                        \"TEST FAILED: MarshalException thrown, expecting \" +\n-                        \"java.rmi.ConnectException or ConnectIOException\");\n-                } else if (connector.exception instanceof ConnectException ||\n-                           connector.exception instanceof ConnectIOException)\n-                {\n-                    System.err.println(\n-                        \"TEST PASSED: java.rmi.ConnectException or \" +\n-                        \"ConnectIOException thrown\");\n-                } else {\n-                    throw new RuntimeException(\n-                        \"TEST FAILED: unexpected Exception thrown\",\n-                        connector.exception);\n-                }\n-            }\n-        }\n-    }\n-\n-    private static class Connector implements Runnable {\n-\n-        private final Registry registry;\n-\n-        boolean success = false;\n-        Exception exception = null;\n-\n-        Connector(Registry registry) {\n-            this.registry = registry;\n-        }\n-\n-        public void run() {\n-            try {\n-                registry.lookup(\"Dale Cooper\");\n-                synchronized (this) {\n-                    success = true;\n-                }\n-            } catch (Exception e) {\n-                synchronized (this) {\n-                    exception = e;\n-                }\n-            }\n+        } catch (ConnectException | ConnectIOException e) {\n+            System.err.println(\"Got expected exception:\");\n+            e.printStackTrace();\n+            System.err.println(\n+                    \"TEST PASSED: java.rmi.ConnectException or \" +\n+                            \"ConnectIOException thrown\");\n","filename":"test\/jdk\/java\/rmi\/transport\/handshakeTimeout\/HandshakeTimeout.java","additions":13,"deletions":70,"binary":false,"changes":83,"status":"modified"}]}