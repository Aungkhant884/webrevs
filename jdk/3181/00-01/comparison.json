{"files":[{"patch":"@@ -55,0 +55,1 @@\n+import java.net.URI;\n@@ -90,2 +91,3 @@\n-        Asserts.assertTrue(v2.secureValidation(false).validate(s3.sign(p))); \/\/ can read KeyInfo\n-        Asserts.assertTrue(v2.secureValidation(false).baseURI(b).validate(s3.sign(b, \"x.xml\"))); \/\/ can read KeyInfo\n+        Asserts.assertTrue(v2.secureValidation(false).validate(s3.sign(p.toUri()))); \/\/ can read KeyInfo\n+        Asserts.assertTrue(v2.secureValidation(false).baseURI(b).validate(\n+                s3.sign(p.getParent().toUri(), p.getFileName().toUri()))); \/\/ can read KeyInfo\n@@ -311,1 +313,1 @@\n-        public Document sign(Path file) throws Exception {\n+        public Document sign(URI uri) throws Exception {\n@@ -314,1 +316,1 @@\n-            FAC.newXMLSignature(buildSignedInfo(file.toFile().toURI().toString()), buildKeyInfo()).sign(\n+            FAC.newXMLSignature(buildSignedInfo(uri.toString()), buildKeyInfo()).sign(\n@@ -320,1 +322,1 @@\n-        public Document sign(String base, String ref) throws Exception {\n+        public Document sign(URI base, URI ref) throws Exception {\n@@ -324,2 +326,2 @@\n-            ctxt.setBaseURI(base);\n-            FAC.newXMLSignature(buildSignedInfo(ref), buildKeyInfo()).sign(ctxt);\n+            ctxt.setBaseURI(base.toString());\n+            FAC.newXMLSignature(buildSignedInfo(ref.toString()), buildKeyInfo()).sign(ctxt);\n","filename":"test\/lib\/jdk\/test\/lib\/security\/XMLUtils.java","additions":9,"deletions":7,"binary":false,"changes":16,"status":"modified"}]}