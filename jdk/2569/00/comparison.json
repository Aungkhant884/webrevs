{"files":[{"patch":"@@ -3888,1 +3888,3 @@\n-                return make.Block(0L, stmtList.toList());\n+                JCBlock res = make.Block(0L, stmtList.toList());\n+                res.endpos = TreeInfo.endPos(tree);\n+                return res;\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Lower.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2824,0 +2824,1 @@\n+            t.endpos = token.endPos;\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/parser\/JavacParser.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1249,0 +1249,2 @@\n+        \/** Position of closing brace, optional. *\/\n+        public int endpos = Position.NOPOS;\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/tree\/JCTree.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -430,0 +430,3 @@\n+        } else if (tree.hasTag(SWITCH) &&\n+                   ((JCSwitch) tree).endpos != Position.NOPOS) {\n+            return ((JCSwitch) tree).endpos;\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/tree\/TreeInfo.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -0,0 +1,71 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8261606\n+ * @summary Tests a line number table attribute for language constructions in different containers.\n+ * @library \/tools\/lib \/tools\/javac\/lib ..\/lib\n+ * @modules jdk.compiler\/com.sun.tools.javac.api\n+ *          jdk.compiler\/com.sun.tools.javac.main\n+ *          jdk.compiler\/com.sun.tools.javac.util\n+ *          jdk.jdeps\/com.sun.tools.classfile\n+ * @build toolbox.ToolBox InMemoryFileManager TestBase\n+ * @build LineNumberTestBase TestCase\n+ * @run main StringSwitchBreaks\n+ *\/\n+\n+import java.util.List;\n+\n+public class StringSwitchBreaks extends LineNumberTestBase {\n+    public static void main(String[] args) throws Exception {\n+        new StringSwitchBreaks().test();\n+    }\n+\n+    public void test() throws Exception {\n+        test(List.of(TEST_CASE));\n+    }\n+\n+    private static final TestCase[] TEST_CASE = new TestCase[] {\n+        new TestCase(\"\"\"\n+                     public class StringSwitchBreaks {                     \/\/ 1\n+                         private void test(String s) {                     \/\/ 2\n+                             if (s != null) {                              \/\/ 3\n+                                 switch (s) {                              \/\/ 4\n+                                     case \"a\":                             \/\/ 5\n+                                         System.out.println(\"a\");          \/\/ 6\n+                                         break;                            \/\/ 7\n+                                     default:                              \/\/ 8\n+                                         System.out.println(\"default\");    \/\/ 9\n+                                 }                                         \/\/10\n+                             } else {                                      \/\/11\n+                                 System.out.println(\"null\");               \/\/12\n+                             }                                             \/\/13\n+                         }                                                 \/\/14\n+                     }                                                     \/\/15\n+                     \"\"\",\n+                     List.of(1, 3, 4, 6, 7, 9, 10, 12, 14),\n+                     \"StringSwitchBreaks\")\n+    };\n+\n+}\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/LineNumberTable\/StringSwitchBreaks.java","additions":71,"deletions":0,"binary":false,"changes":71,"status":"added"}]}