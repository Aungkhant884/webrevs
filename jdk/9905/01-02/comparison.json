{"files":[{"patch":"@@ -28,0 +28,1 @@\n+import java.io.BufferedReader;\n@@ -30,2 +31,1 @@\n-import java.io.InputStream;\n-import java.io.OutputStream;\n+import java.io.Writer;\n@@ -40,1 +40,1 @@\n- * @bug 8289643 9291760\n+ * @bug 8289643 8291760\n@@ -42,1 +42,1 @@\n- * @summary file descriptor leak with ProcessBuilder.startPipeline\n+ * @summary File descriptor leak detection with ProcessBuilder.startPipeline\n@@ -74,2 +74,3 @@\n-        try (OutputStream out = processes.get(0).getOutputStream()) {\n-            out.write('a');\n+        final String text = \"xyz\";\n+        try (Writer out = processes.get(0).outputWriter()) {\n+            out.write(text);\n@@ -78,10 +79,1 @@\n-        Process last = processes.get(processes.size() - 1);\n-        try (InputStream inputStream = last.getInputStream();\n-             InputStream errorStream = last.getErrorStream()) {\n-            byte[] bytes = inputStream.readAllBytes();\n-            Assert.assertEquals(bytes.length, 1, \"stdout bytes read\");\n-            byte[] errBytes = errorStream.readAllBytes();\n-            Assert.assertEquals(errBytes.length, 0, \"stderr bytes read\");\n-        }\n-\n-        \/\/ Close all the error streams (except the last)\n+        \/\/ Read, check, and close all streams\n@@ -89,1 +81,11 @@\n-            processes.get(i).getErrorStream().close();\n+            final Process p = processes.get(i);\n+            String expectedOut = (i == processes.size() - 1) ? text : null;\n+            String expectedErr = null;      \/\/ EOF\n+            try (BufferedReader inputStream = p.inputReader();\n+                 BufferedReader errorStream = p.errorReader()) {\n+                String outActual = inputStream.readLine();\n+                Assert.assertEquals(outActual, expectedOut, \"stdout, process[ \" + i + \"]: \" + p);\n+\n+                String errActual = errorStream.readLine();\n+                Assert.assertEquals(errActual, expectedErr, \"stderr, process[ \" + i + \"]: \" + p);\n+            }\n","filename":"test\/jdk\/java\/lang\/ProcessBuilder\/PipelineLeaksFD.java","additions":19,"deletions":17,"binary":false,"changes":36,"status":"modified"}]}