[{"commit":{"message":"Address review comments"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/ExecutorService.java"},{"filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/ForkJoinPool.java"},{"filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/ForkJoinTask.java"},{"filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/ForkJoinWorkerThread.java"}],"sha":"c3901b45d11a4bfbdbd31fe678059c4dae21f40c"},{"commit":{"message":"whitespace"},"files":[{"filename":"test\/jdk\/java\/util\/concurrent\/tck\/ForkJoinPool19Test.java"}],"sha":"501a21e89e49b6d12f1cb70373a334fef6a0ada0"},{"commit":{"message":"sync with loom"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/CompletableFuture.java"},{"filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/FutureTask.java"},{"filename":"test\/jdk\/java\/util\/concurrent\/tck\/ForkJoinPool19Test.java"}],"sha":"643c649ec0790ac41c3ffaffce8a45b73e91af19"},{"commit":{"message":"8276202: LogFileOutput.invalid_file_vm asserts when being executed from a read only working directory\n\nReviewed-by: dholmes, stuefe"},"files":[{"filename":"test\/hotspot\/gtest\/logging\/logTestFixture.cpp"},{"filename":"test\/hotspot\/gtest\/logging\/logTestUtils.inline.hpp"},{"filename":"test\/hotspot\/gtest\/logging\/test_logFileOutput.cpp"}],"sha":"9dd03d63a5df6d76814a577d19bb674b7465ef1d"},{"commit":{"message":"8284981: Support the vectorization of some counting-down loops in SLP\n\nReviewed-by: roland, kvn"},"files":[{"filename":"src\/hotspot\/share\/opto\/superword.cpp"},{"filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/TestAutoVecCountingDownLoop.java"},{"filename":"test\/hotspot\/jtreg\/compiler\/codegen\/TestIntVect.java"}],"sha":"1bc5c498db3611eb3379355ae12f4f6978211731"},{"commit":{"message":"8284992: Fix misleading Vector API doc for LSHR operator\n\nReviewed-by: psandoz"},"files":[{"filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/VectorOperators.java"}],"sha":"e829fd25e18bfe2056557522cb38451939054f3e"},{"commit":{"message":"8254759: [TEST_BUG] [macosx] javax\/swing\/JInternalFrame\/4202966\/IntFrameCoord.html fails\n\nReviewed-by: prr, kizune"},"files":[{"filename":"test\/jdk\/javax\/swing\/JInternalFrame\/4202966\/IntFrameCoord.java"}],"sha":"eea2261ca55c21c38046d4355a9716ab47bb9fba"},{"commit":{"message":"8285945: [BACKOUT] JDK-8285802 AArch64: Consistently handle offsets in MacroAssembler as 64-bit quantities\n\nReviewed-by: kvn"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.hpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/stubGenerator_aarch64.cpp"}],"sha":"a5caee0acf6bcce5d82fa19bb54d25078b0c72b0"},{"commit":{"message":"8284331: Add sanity check for signal handler modification warning.\n\nReviewed-by: dholmes, amenkov"},"files":[{"filename":"test\/jdk\/sun\/tools\/jcmd\/TestJcmdSanity.java"}],"sha":"84a4a9aefe458064aa617ddde40ebf4d00039ea1"},{"commit":{"message":"8285773: Replace Algorithms.eatMemory(...) with WB.fullGC() in vmTestbase\/gc\/gctests\/ReferencesGC\/ReferencesGC.java\n\nReviewed-by: tschatzl, kbarrett"},"files":[{"filename":"test\/hotspot\/jtreg\/vmTestbase\/gc\/gctests\/ReferencesGC\/ReferencesGC.java"}],"sha":"b5bdb2ce323613081f18ed140d5a3bd9dc21755e"},{"commit":{"message":"8284883: JVM crash: guarantee(sect->end() <= sect->limit()) failed: sanity on AVX512\n\nReviewed-by: kvn, jbhateja"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86.hpp"},{"filename":"src\/hotspot\/share\/opto\/memnode.cpp"},{"filename":"test\/hotspot\/jtreg\/compiler\/c2\/ClearArray.java"}],"sha":"b5e29f7e43e18cf96fa54bf1bb85cfb51eb97b55"},{"commit":{"message":"Misc touchups"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/ForkJoinPool.java"},{"filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/ForkJoinWorkerThread.java"},{"filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/Future.java"}],"sha":"f0df49cb5556cf1a78114b9e106a7cb55cdb0aae"},{"commit":{"message":"Use extended Thread constructor; ExecutorService now AutoCloseable for loom"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/ExecutorService.java"},{"filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/ForkJoinPool.java"},{"filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/ForkJoinWorkerThread.java"}],"sha":"badefc695668370b706cdb9603fedb40bb9668ed"},{"commit":{"message":"re-add for commit"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/ForkJoinTask.java"}],"sha":"5244adae7f27b7f50afb6e94a3d851e692b80d5f"},{"commit":{"message":"Use @implNote"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/ForkJoinPool.java"}],"sha":"aecd43536e66a5bd731524656ed637adc678efb3"},{"commit":{"message":"Updates for  JDK-8277090"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/CountedCompleter.java"},{"filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/ForkJoinPool.java"},{"filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/ForkJoinWorkerThread.java"},{"filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/Future.java"},{"filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/RecursiveTask.java"},{"filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/locks\/AbstractQueuedLongSynchronizer.java"},{"filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/locks\/AbstractQueuedSynchronizer.java"},{"filename":"test\/jdk\/java\/util\/concurrent\/tck\/ForkJoinPool19Test.java"},{"filename":"test\/jdk\/java\/util\/concurrent\/tck\/JSR166TestCase.java"}],"sha":"7e3aa126754ebc93ec052734f70a796446112796"},{"commit":{"message":"for JDK-8277090"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/ForkJoinPool.java"}],"sha":"a2521708771059fb1537209284564d9d181a1be9"}]