{"files":[{"patch":"@@ -34,0 +34,1 @@\n+import java.lang.annotation.Native;\n@@ -73,0 +74,1 @@\n+    @Native\n@@ -74,0 +76,1 @@\n+    @Native\n@@ -75,0 +78,1 @@\n+    @Native\n@@ -76,1 +80,0 @@\n-    private static final int DT_DOUBLE = 3;\n@@ -89,31 +92,10 @@\n-    private LCMSImageLayout(int np, int pixelType, int pixelSize) {\n-        this.pixelType = pixelType;\n-        width = np;\n-        height = 1;\n-        nextPixelOffset = pixelSize;\n-        nextRowOffset = safeMult(pixelSize, np);\n-        offset = 0;\n-    }\n-\n-    private LCMSImageLayout(int width, int height, int pixelType, int pixelSize)\n-    {\n-        this.pixelType = pixelType;\n-        this.width = width;\n-        this.height = height;\n-        nextPixelOffset = pixelSize;\n-        nextRowOffset = safeMult(pixelSize, width);\n-        offset = 0;\n-    }\n-\n-    LCMSImageLayout(byte[] data, int np, int pixelType, int pixelSize) {\n-        this(np, pixelType, pixelSize);\n-        dataType = DT_BYTE;\n-        dataArray = data;\n-        dataArrayLength = data.length;\n-\n-        verify();\n-    }\n-\n-    LCMSImageLayout(short[] data, int np, int pixelType, int pixelSize) {\n-        this(np, pixelType, pixelSize);\n-        dataType = DT_SHORT;\n+    \/**\n+     * Creates a layout object for given parameters.\n+     *\n+     * @param  data the storage of pixels: {@code byte[], short[] or int[]}\n+     * @param  length the length of the data array\n+     * @param  nc the number of color components\n+     * @param  dt the type of data array: DT_BYTE, DT_SHORT or DT_INT\n+     * @param  size the size of one color component in bytes\n+     *\/\n+    private LCMSImageLayout(Object data, int length, int nc, int dt, int size) {\n@@ -121,2 +103,7 @@\n-        dataArrayLength = 2 * data.length;\n-\n+        dataType = dt;\n+        dataArrayLength = length * size;\n+        pixelType = CHANNELS_SH(nc) | BYTES_SH(size);\n+        width = length \/ nc;\n+        height = 1;\n+        nextPixelOffset = nc * size;\n+        nextRowOffset = dataArrayLength; \/\/ outside of data since height is 1\n@@ -126,7 +113,2 @@\n-    LCMSImageLayout(int[] data, int np, int pixelType, int pixelSize) {\n-        this(np, pixelType, pixelSize);\n-        dataType = DT_INT;\n-        dataArray = data;\n-        dataArrayLength = 4 * data.length;\n-\n-        verify();\n+    LCMSImageLayout(byte[] data, int nc) {\n+        this(data, data.length, nc, DT_BYTE, Byte.BYTES);\n@@ -135,7 +117,2 @@\n-    LCMSImageLayout(double[] data, int np, int pixelType, int pixelSize) {\n-        this(np, pixelType, pixelSize);\n-        dataType = DT_DOUBLE;\n-        dataArray = data;\n-        dataArrayLength = 8 * data.length;\n-\n-        verify();\n+    LCMSImageLayout(short[] data, int nc) {\n+        this(data, data.length, nc, DT_SHORT, Short.BYTES);\n@@ -154,1 +131,1 @@\n-            case BufferedImage.TYPE_INT_RGB:\n+            case BufferedImage.TYPE_INT_RGB, BufferedImage.TYPE_INT_ARGB:\n@@ -160,3 +137,0 @@\n-            case BufferedImage.TYPE_INT_ARGB:\n-                l.pixelType = PT_ARGB_8 ^ SWAP_ENDIAN;\n-                break;\n@@ -204,61 +178,42 @@\n-            case BufferedImage.TYPE_INT_RGB:\n-            case BufferedImage.TYPE_INT_ARGB:\n-            case BufferedImage.TYPE_INT_ARGB_PRE:\n-            case BufferedImage.TYPE_INT_BGR:\n-                do {\n-                    IntegerComponentRaster intRaster = (IntegerComponentRaster)\n-                            image.getRaster();\n-                    l.nextRowOffset = safeMult(4, intRaster.getScanlineStride());\n-                    l.nextPixelOffset = safeMult(4, intRaster.getPixelStride());\n-                    l.offset = safeMult(4, intRaster.getDataOffset(0));\n-                    l.dataArray = intRaster.getDataStorage();\n-                    l.dataArrayLength = 4 * intRaster.getDataStorage().length;\n-                    l.dataType = DT_INT;\n-                } while (false);\n-                break;\n-\n-            case BufferedImage.TYPE_3BYTE_BGR:\n-            case BufferedImage.TYPE_4BYTE_ABGR:\n-            case BufferedImage.TYPE_4BYTE_ABGR_PRE:\n-                do {\n-                    ByteComponentRaster byteRaster = (ByteComponentRaster)\n-                            image.getRaster();\n-                    l.nextRowOffset = byteRaster.getScanlineStride();\n-                    l.nextPixelOffset = byteRaster.getPixelStride();\n-\n-                    int firstBand = byteRaster.getSampleModel().getNumBands() - 1;\n-                    l.offset = byteRaster.getDataOffset(firstBand);\n-                    l.dataArray = byteRaster.getDataStorage();\n-                    l.dataArrayLength = byteRaster.getDataStorage().length;\n-                    l.dataType = DT_BYTE;\n-                } while (false);\n-                break;\n-\n-            case BufferedImage.TYPE_BYTE_GRAY:\n-                do {\n-                    ByteComponentRaster byteRaster = (ByteComponentRaster)\n-                            image.getRaster();\n-                    l.nextRowOffset = byteRaster.getScanlineStride();\n-                    l.nextPixelOffset = byteRaster.getPixelStride();\n-\n-                    l.dataArrayLength = byteRaster.getDataStorage().length;\n-                    l.offset = byteRaster.getDataOffset(0);\n-                    l.dataArray = byteRaster.getDataStorage();\n-                    l.dataType = DT_BYTE;\n-                } while (false);\n-                break;\n-\n-            case BufferedImage.TYPE_USHORT_GRAY:\n-                do {\n-                    ShortComponentRaster shortRaster = (ShortComponentRaster)\n-                            image.getRaster();\n-                    l.nextRowOffset = safeMult(2, shortRaster.getScanlineStride());\n-                    l.nextPixelOffset = safeMult(2, shortRaster.getPixelStride());\n-\n-                    l.offset = safeMult(2, shortRaster.getDataOffset(0));\n-                    l.dataArray = shortRaster.getDataStorage();\n-                    l.dataArrayLength = 2 * shortRaster.getDataStorage().length;\n-                    l.dataType = DT_SHORT;\n-                } while (false);\n-                break;\n-            default:\n+            case BufferedImage.TYPE_INT_RGB, BufferedImage.TYPE_INT_ARGB,\n+                 BufferedImage.TYPE_INT_ARGB_PRE, BufferedImage.TYPE_INT_BGR ->\n+            {\n+                var intRaster = (IntegerComponentRaster) image.getRaster();\n+                l.nextRowOffset = safeMult(4, intRaster.getScanlineStride());\n+                l.nextPixelOffset = safeMult(4, intRaster.getPixelStride());\n+                l.offset = safeMult(4, intRaster.getDataOffset(0));\n+                l.dataArray = intRaster.getDataStorage();\n+                l.dataArrayLength = 4 * intRaster.getDataStorage().length;\n+                l.dataType = DT_INT;\n+            }\n+            case BufferedImage.TYPE_3BYTE_BGR, BufferedImage.TYPE_4BYTE_ABGR,\n+                 BufferedImage.TYPE_4BYTE_ABGR_PRE ->\n+            {\n+                var byteRaster = (ByteComponentRaster) image.getRaster();\n+                l.nextRowOffset = byteRaster.getScanlineStride();\n+                l.nextPixelOffset = byteRaster.getPixelStride();\n+                int firstBand = byteRaster.getSampleModel().getNumBands() - 1;\n+                l.offset = byteRaster.getDataOffset(firstBand);\n+                l.dataArray = byteRaster.getDataStorage();\n+                l.dataArrayLength = byteRaster.getDataStorage().length;\n+                l.dataType = DT_BYTE;\n+            }\n+            case BufferedImage.TYPE_BYTE_GRAY -> {\n+                var byteRaster = (ByteComponentRaster) image.getRaster();\n+                l.nextRowOffset = byteRaster.getScanlineStride();\n+                l.nextPixelOffset = byteRaster.getPixelStride();\n+                l.offset = byteRaster.getDataOffset(0);\n+                l.dataArray = byteRaster.getDataStorage();\n+                l.dataArrayLength = byteRaster.getDataStorage().length;\n+                l.dataType = DT_BYTE;\n+            }\n+            case BufferedImage.TYPE_USHORT_GRAY -> {\n+                var shortRaster = (ShortComponentRaster) image.getRaster();\n+                l.nextRowOffset = safeMult(2, shortRaster.getScanlineStride());\n+                l.nextPixelOffset = safeMult(2, shortRaster.getPixelStride());\n+                l.offset = safeMult(2, shortRaster.getDataOffset(0));\n+                l.dataArray = shortRaster.getDataStorage();\n+                l.dataArrayLength = 2 * shortRaster.getDataStorage().length;\n+                l.dataType = DT_SHORT;\n+            }\n+            default -> {\n@@ -266,0 +221,1 @@\n+            }\n@@ -271,1 +227,1 @@\n-    private static enum BandOrder {\n+    private enum BandOrder {\n@@ -336,6 +292,3 @@\n-        if (r instanceof ByteComponentRaster &&\n-                r.getSampleModel() instanceof ComponentSampleModel) {\n-            ByteComponentRaster br = (ByteComponentRaster)r;\n-\n-            ComponentSampleModel csm = (ComponentSampleModel)r.getSampleModel();\n-\n+        if (r instanceof ByteComponentRaster br &&\n+                r.getSampleModel() instanceof ComponentSampleModel csm)\n+        {\n","filename":"src\/java.desktop\/share\/classes\/sun\/java2d\/cmm\/lcms\/LCMSImageLayout.java","additions":73,"deletions":120,"binary":false,"changes":193,"status":"modified"},{"patch":"@@ -209,8 +209,2 @@\n-            srcIL = new LCMSImageLayout(\n-                    srcLine, srcLine.length\/getNumInComponents(),\n-                    LCMSImageLayout.CHANNELS_SH(getNumInComponents()) |\n-                    LCMSImageLayout.BYTES_SH(1), getNumInComponents());\n-            dstIL = new LCMSImageLayout(\n-                    dstLine, dstLine.length\/getNumOutComponents(),\n-                    LCMSImageLayout.CHANNELS_SH(getNumOutComponents()) |\n-                    LCMSImageLayout.BYTES_SH(1), getNumOutComponents());\n+            srcIL = new LCMSImageLayout(srcLine, getNumInComponents());\n+            dstIL = new LCMSImageLayout(dstLine, getNumOutComponents());\n@@ -265,9 +259,2 @@\n-            srcIL = new LCMSImageLayout(\n-                    srcLine, srcLine.length\/getNumInComponents(),\n-                    LCMSImageLayout.CHANNELS_SH(getNumInComponents()) |\n-                    LCMSImageLayout.BYTES_SH(2), getNumInComponents()*2);\n-\n-            dstIL = new LCMSImageLayout(\n-                    dstLine, dstLine.length\/getNumOutComponents(),\n-                    LCMSImageLayout.CHANNELS_SH(getNumOutComponents()) |\n-                    LCMSImageLayout.BYTES_SH(2), getNumOutComponents()*2);\n+            srcIL = new LCMSImageLayout(srcLine, getNumInComponents());\n+            dstIL = new LCMSImageLayout(dstLine, getNumOutComponents());\n@@ -382,9 +369,2 @@\n-        srcIL = new LCMSImageLayout(\n-                srcLine, srcLine.length\/getNumInComponents(),\n-                LCMSImageLayout.CHANNELS_SH(getNumInComponents()) |\n-                LCMSImageLayout.BYTES_SH(2), getNumInComponents()*2);\n-\n-        dstIL = new LCMSImageLayout(\n-                dstLine, dstLine.length\/getNumOutComponents(),\n-                LCMSImageLayout.CHANNELS_SH(getNumOutComponents()) |\n-                LCMSImageLayout.BYTES_SH(2), getNumOutComponents()*2);\n+        srcIL = new LCMSImageLayout(srcLine, getNumInComponents());\n+        dstIL = new LCMSImageLayout(dstLine, getNumOutComponents());\n@@ -481,8 +461,2 @@\n-            srcIL = new LCMSImageLayout(\n-                    srcLine, srcLine.length\/getNumInComponents(),\n-                    LCMSImageLayout.CHANNELS_SH(getNumInComponents()) |\n-                    LCMSImageLayout.BYTES_SH(1), getNumInComponents());\n-            dstIL = new LCMSImageLayout(\n-                    dstLine, dstLine.length\/getNumOutComponents(),\n-                    LCMSImageLayout.CHANNELS_SH(getNumOutComponents()) |\n-                    LCMSImageLayout.BYTES_SH(1), getNumOutComponents());\n+            srcIL = new LCMSImageLayout(srcLine, getNumInComponents());\n+            dstIL = new LCMSImageLayout(dstLine, getNumOutComponents());\n@@ -520,9 +494,2 @@\n-            srcIL = new LCMSImageLayout(\n-                    srcLine, srcLine.length\/getNumInComponents(),\n-                    LCMSImageLayout.CHANNELS_SH(getNumInComponents()) |\n-                    LCMSImageLayout.BYTES_SH(2), getNumInComponents()*2);\n-\n-            dstIL = new LCMSImageLayout(\n-                    dstLine, dstLine.length\/getNumOutComponents(),\n-                    LCMSImageLayout.CHANNELS_SH(getNumOutComponents()) |\n-                    LCMSImageLayout.BYTES_SH(2), getNumOutComponents()*2);\n+            srcIL = new LCMSImageLayout(srcLine, getNumInComponents());\n+            dstIL = new LCMSImageLayout(dstLine, getNumOutComponents());\n@@ -564,1 +531,0 @@\n-\n@@ -566,1 +532,1 @@\n-            dst = new short [(src.length\/getNumInComponents())*getNumOutComponents()];\n+            dst = new short[(src.length \/ numInComponents) * numOutComponents];\n@@ -568,12 +534,2 @@\n-        LCMSImageLayout srcIL = new LCMSImageLayout(\n-                src, src.length\/getNumInComponents(),\n-                LCMSImageLayout.CHANNELS_SH(getNumInComponents()) |\n-                LCMSImageLayout.BYTES_SH(2), getNumInComponents()*2);\n-\n-        LCMSImageLayout dstIL = new LCMSImageLayout(\n-                dst, dst.length\/getNumOutComponents(),\n-                LCMSImageLayout.CHANNELS_SH(getNumOutComponents()) |\n-                LCMSImageLayout.BYTES_SH(2), getNumOutComponents()*2);\n-\n-        doTransform(srcIL, dstIL);\n-\n+        doTransform(new LCMSImageLayout(src, numInComponents),\n+                    new LCMSImageLayout(dst, numOutComponents));\n@@ -585,1 +541,1 @@\n-            dst = new byte [(src.length\/getNumInComponents())*getNumOutComponents()];\n+            dst = new byte[(src.length \/ numInComponents) * numOutComponents];\n@@ -587,11 +543,2 @@\n-        LCMSImageLayout srcIL = new LCMSImageLayout(\n-                src, src.length\/getNumInComponents(),\n-                LCMSImageLayout.CHANNELS_SH(getNumInComponents()) |\n-                LCMSImageLayout.BYTES_SH(1), getNumInComponents());\n-\n-        LCMSImageLayout dstIL = new LCMSImageLayout(\n-                dst, dst.length\/getNumOutComponents(),\n-                LCMSImageLayout.CHANNELS_SH(getNumOutComponents()) |\n-                LCMSImageLayout.BYTES_SH(1), getNumOutComponents());\n-\n-        doTransform(srcIL, dstIL);\n+        doTransform(new LCMSImageLayout(src, numInComponents),\n+                    new LCMSImageLayout(dst, numOutComponents));\n","filename":"src\/java.desktop\/share\/classes\/sun\/java2d\/cmm\/lcms\/LCMSTransform.java","additions":16,"deletions":69,"binary":false,"changes":85,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+#include \"sun_java2d_cmm_lcms_LCMSImageLayout.h\"\n@@ -48,4 +49,3 @@\n-#define DT_BYTE     0\n-#define DT_SHORT    1\n-#define DT_INT      2\n-#define DT_DOUBLE   3\n+#define DT_BYTE     sun_java2d_cmm_lcms_LCMSImageLayout_DT_BYTE\n+#define DT_SHORT    sun_java2d_cmm_lcms_LCMSImageLayout_DT_SHORT\n+#define DT_INT      sun_java2d_cmm_lcms_LCMSImageLayout_DT_INT\n@@ -481,2 +481,0 @@\n-        case DT_DOUBLE:\n-            return (*env)->GetDoubleArrayElements(env, data, 0);\n@@ -500,3 +498,0 @@\n-        case DT_DOUBLE:\n-            (*env)->ReleaseDoubleArrayElements(env, data, (jdouble *) pData, mode);\n-            break;\n","filename":"src\/java.desktop\/share\/native\/liblcms\/LCMS.c","additions":4,"deletions":9,"binary":false,"changes":13,"status":"modified"}]}