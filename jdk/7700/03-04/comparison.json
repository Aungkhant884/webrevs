{"files":[{"patch":"@@ -96,0 +96,21 @@\n+        private final static MethodHandle defaultLatin1HashCodeMH;\n+        private final static MethodHandle defaultUTF16HashCodeMH;\n+\n+        static {\n+            try {\n+                Class<?> stringLatin1 = Class.forName(\"java.lang.StringLatin1\");\n+                Method stringLatin1HashCode = stringLatin1.getDeclaredMethod(\"hashCode\", byte[].class);\n+                stringLatin1HashCode.setAccessible(true);\n+\n+                defaultLatin1HashCodeMH = MethodHandles.lookup().unreflect(stringLatin1HashCode);\n+\n+                Class<?> stringUTF16 = Class.forName(\"java.lang.StringUTF16\");\n+                Method stringUTF16HashCode = stringUTF16.getDeclaredMethod(\"hashCode\", byte[].class);\n+                stringUTF16HashCode.setAccessible(true);\n+\n+                defaultUTF16HashCodeMH = MethodHandles.lookup().unreflect(stringUTF16HashCode);\n+            } catch (Exception e) {\n+                throw new RuntimeException(e);\n+            }\n+        }\n+\n@@ -102,3 +123,0 @@\n-        private MethodHandle defaultLatin1HashCodeMH;\n-        private MethodHandle defaultUTF16HashCodeMH;\n-\n@@ -113,11 +131,0 @@\n-\n-            Class<?> stringLatin1 = Class.forName(\"java.lang.StringLatin1\");\n-            Method stringLatin1HashCode = stringLatin1.getDeclaredMethod(\"hashCode\", byte[].class);\n-            stringLatin1HashCode.setAccessible(true);\n-\n-            Class<?> stringUTF16 = Class.forName(\"java.lang.StringLatin1\");\n-            Method stringUTF16HashCode = stringUTF16.getDeclaredMethod(\"hashCode\", byte[].class);\n-            stringUTF16HashCode.setAccessible(true);\n-\n-            defaultLatin1HashCodeMH = MethodHandles.lookup().unreflect(stringLatin1HashCode);\n-            defaultUTF16HashCodeMH = MethodHandles.lookup().unreflect(stringUTF16HashCode);\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/StringHashCode.java","additions":21,"deletions":14,"binary":false,"changes":35,"status":"modified"}]}