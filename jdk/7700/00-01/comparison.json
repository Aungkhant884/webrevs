{"files":[{"patch":"@@ -88,1 +88,0 @@\n-        private final static byte[] alphabet;\n@@ -90,7 +89,1 @@\n-        static {\n-            try {\n-                alphabet = \"abcdefghijklmnopqrstuvwxyz\".getBytes(\"US-ASCII\");\n-            } catch (UnsupportedEncodingException e) {\n-                throw new RuntimeException(e);\n-            }\n-        }\n+        private final static String alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n@@ -101,1 +94,2 @@\n-        private byte[] value;\n+        private byte[] latin1;\n+        private byte[] utf16;\n@@ -105,1 +99,1 @@\n-            value = new byte[size];\n+            char[] str = new char[size];\n@@ -107,1 +101,33 @@\n-                value[i] = alphabet[ThreadLocalRandom.current().nextInt(alphabet.length)];\n+                str[i] = alphabet.charAt(ThreadLocalRandom.current().nextInt(alphabet.length()));\n+            }\n+            latin1 = new String(str).getBytes(\"US-ASCII\");\n+            utf16 = new String(str).getBytes(\"UTF-16\");\n+        }\n+\n+        @Benchmark\n+        public int scalarLatin1() {\n+            int h = 0;\n+            int i = 0, len = latin1.length;\n+            for (; i < len; i++) {\n+                h = 31 * h + (latin1[i] & 0xff);\n+            }\n+            return h;\n+        }\n+\n+        @Benchmark\n+        public int scalarLatin1Unrolled8() {\n+            int h = 0;\n+            int i = 0, len = latin1.length;\n+            for (; i < (len & ~(8 - 1)); i += 8) {\n+                h = -1807454463 * h                   +\n+                     1742810335 * (latin1[i+0] & 0xff) +\n+                      887503681 * (latin1[i+1] & 0xff) +\n+                       28629151 * (latin1[i+2] & 0xff) +\n+                         923521 * (latin1[i+3] & 0xff) +\n+                          29791 * (latin1[i+4] & 0xff) +\n+                            961 * (latin1[i+5] & 0xff) +\n+                             31 * (latin1[i+6] & 0xff) +\n+                              1 * (latin1[i+7] & 0xff);\n+            }\n+            for (; i < len; i++) {\n+                h = 31 * h + (latin1[i] & 0xff);\n@@ -109,0 +135,37 @@\n+            return h;\n+        }\n+\n+        @Benchmark\n+        public int scalarLatin1Unrolled16() {\n+            int h = 0;\n+            int i = 0, len = latin1.length;\n+            for (; i < (len & ~(16 - 1)); i += 16) {\n+                h =  1353309697 * h                    +\n+                     -510534177 * (latin1[i+ 0] & 0xff) +\n+                     1507551809 * (latin1[i+ 1] & 0xff) +\n+                     -505558625 * (latin1[i+ 2] & 0xff) +\n+                     -293403007 * (latin1[i+ 3] & 0xff) +\n+                      129082719 * (latin1[i+ 4] & 0xff) +\n+                    -1796951359 * (latin1[i+ 5] & 0xff) +\n+                     -196513505 * (latin1[i+ 6] & 0xff) +\n+                    -1807454463 * (latin1[i+ 7] & 0xff) +\n+                     1742810335 * (latin1[i+ 8] & 0xff) +\n+                      887503681 * (latin1[i+ 9] & 0xff) +\n+                       28629151 * (latin1[i+10] & 0xff) +\n+                         923521 * (latin1[i+11] & 0xff) +\n+                          29791 * (latin1[i+12] & 0xff) +\n+                            961 * (latin1[i+13] & 0xff) +\n+                             31 * (latin1[i+14] & 0xff) +\n+                              1 * (latin1[i+15] & 0xff);\n+            }\n+            for (; i < len; i++) {\n+                h = 31 * h + (latin1[i] & 0xff);\n+            }\n+            return h;\n+        }\n+\n+        char getCharUTF16(byte[] value, int index) {\n+            index <<= 1;\n+            \/\/ assuming little endian\n+            return (char)(((value[index++] & 0xff) << 0) |\n+                          ((value[index]   & 0xff) << 8));\n@@ -112,1 +175,1 @@\n-        public int scalar() {\n+        public int scalarUTF16() {\n@@ -114,3 +177,3 @@\n-            int i = 0;\n-            for (; i < value.length; i++) {\n-                h = 31 * h + (value[i] & 0xff);\n+            int i = 0, len = utf16.length \/ 2;\n+            for (; i < len; i++) {\n+                h = 31 * h + getCharUTF16(utf16, i);\n@@ -122,1 +185,1 @@\n-        public int scalarUnrolled8() {\n+        public int scalarUTF16Unrolled8() {\n@@ -124,2 +187,2 @@\n-            int i = 0;\n-            for (; i < (value.length & ~(8 - 1)); i += 8) {\n+            int i = 0, len = utf16.length \/ 2;\n+            for (; i < (len & ~(8 - 1)); i += 8) {\n@@ -127,8 +190,8 @@\n-                     1742810335 * (value[i+0] & 0xff) +\n-                      887503681 * (value[i+1] & 0xff) +\n-                       28629151 * (value[i+2] & 0xff) +\n-                         923521 * (value[i+3] & 0xff) +\n-                          29791 * (value[i+4] & 0xff) +\n-                            961 * (value[i+5] & 0xff) +\n-                             31 * (value[i+6] & 0xff) +\n-                              1 * (value[i+7] & 0xff);\n+                     1742810335 * getCharUTF16(utf16, i+0) +\n+                      887503681 * getCharUTF16(utf16, i+1) +\n+                       28629151 * getCharUTF16(utf16, i+2) +\n+                         923521 * getCharUTF16(utf16, i+3) +\n+                          29791 * getCharUTF16(utf16, i+4) +\n+                            961 * getCharUTF16(utf16, i+5) +\n+                             31 * getCharUTF16(utf16, i+6) +\n+                              1 * getCharUTF16(utf16, i+7);\n@@ -136,2 +199,2 @@\n-            for (; i < value.length; i++) {\n-                h = 31 * h + (value[i] & 0xff);\n+            for (; i < len; i++) {\n+                h = 31 * h + getCharUTF16(utf16, i);\n@@ -143,1 +206,1 @@\n-        public int scalarUnrolled16() {\n+        public int scalarUTF16Unrolled16() {\n@@ -145,2 +208,2 @@\n-            int i = 0;\n-            for (; i < (value.length & ~(16 - 1)); i += 16) {\n+            int i = 0, len = utf16.length \/ 2;\n+            for (; i < (len & ~(16 - 1)); i += 16) {\n@@ -148,16 +211,16 @@\n-                     -510534177 * (value[i+ 0] & 0xff) +\n-                     1507551809 * (value[i+ 1] & 0xff) +\n-                     -505558625 * (value[i+ 2] & 0xff) +\n-                     -293403007 * (value[i+ 3] & 0xff) +\n-                      129082719 * (value[i+ 4] & 0xff) +\n-                    -1796951359 * (value[i+ 5] & 0xff) +\n-                     -196513505 * (value[i+ 6] & 0xff) +\n-                    -1807454463 * (value[i+ 7] & 0xff) +\n-                     1742810335 * (value[i+ 8] & 0xff) +\n-                      887503681 * (value[i+ 9] & 0xff) +\n-                       28629151 * (value[i+10] & 0xff) +\n-                         923521 * (value[i+11] & 0xff) +\n-                          29791 * (value[i+12] & 0xff) +\n-                            961 * (value[i+13] & 0xff) +\n-                             31 * (value[i+14] & 0xff) +\n-                              1 * (value[i+15] & 0xff);\n+                     -510534177 * getCharUTF16(utf16, i+0) +\n+                     1507551809 * getCharUTF16(utf16, i+1) +\n+                     -505558625 * getCharUTF16(utf16, i+2) +\n+                     -293403007 * getCharUTF16(utf16, i+3) +\n+                      129082719 * getCharUTF16(utf16, i+4) +\n+                    -1796951359 * getCharUTF16(utf16, i+5) +\n+                     -196513505 * getCharUTF16(utf16, i+6) +\n+                    -1807454463 * getCharUTF16(utf16, i+7) +\n+                     1742810335 * getCharUTF16(utf16, i+8) +\n+                      887503681 * getCharUTF16(utf16, i+9) +\n+                       28629151 * getCharUTF16(utf16, i+10) +\n+                         923521 * getCharUTF16(utf16, i+11) +\n+                          29791 * getCharUTF16(utf16, i+12) +\n+                            961 * getCharUTF16(utf16, i+13) +\n+                             31 * getCharUTF16(utf16, i+14) +\n+                              1 * getCharUTF16(utf16, i+15);\n@@ -165,2 +228,2 @@\n-            for (; i < value.length; i++) {\n-                h = 31 * h + (value[i] & 0xff);\n+            for (; i < len; i++) {\n+                h = 31 * h + getCharUTF16(utf16, i);\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/StringHashCode.java","additions":112,"deletions":49,"binary":false,"changes":161,"status":"modified"}]}