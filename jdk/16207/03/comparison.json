{"files":[{"patch":"@@ -544,1 +544,3 @@\n-        return StreamEncoder.forEncoder(ch, enc.reset(), minBufferCap);\n+        Objects.requireNonNull(enc, \"enc\");\n+        OutputStream out = newOutputStream(ch);\n+        return StreamEncoder.forOutputStreamWriter(out, enc.reset());\n","filename":"src\/java.base\/share\/classes\/java\/nio\/channels\/Channels.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -34,1 +34,0 @@\n-import java.nio.channels.WritableByteChannel;\n@@ -82,6 +81,2 @@\n-\n-    \/\/ Factory for java.nio.channels.Channels.newWriter\n-\n-    public static StreamEncoder forEncoder(WritableByteChannel ch,\n-                                           CharsetEncoder enc,\n-                                           int minBufferCap)\n+    public static StreamEncoder forOutputStreamWriter(OutputStream out,\n+                                                      CharsetEncoder enc)\n@@ -89,1 +84,1 @@\n-        return new StreamEncoder(ch, enc, minBufferCap);\n+        return new StreamEncoder(out, enc);\n@@ -92,1 +87,0 @@\n-\n@@ -255,1 +249,0 @@\n-    \/\/ Exactly one of these is non-null\n@@ -257,1 +250,0 @@\n-    private final WritableByteChannel ch;\n@@ -274,1 +266,0 @@\n-        this.ch = null;\n@@ -282,3 +273,3 @@\n-    private StreamEncoder(WritableByteChannel ch, CharsetEncoder enc, int mbc) {\n-        this.out = null;\n-        this.ch = ch;\n+    private StreamEncoder(OutputStream out, CharsetEncoder enc) {\n+        super();\n+        this.out = out;\n@@ -288,7 +279,2 @@\n-        if (mbc > 0) {\n-            this.bb = ByteBuffer.allocate(mbc);\n-            this.maxBufferCapacity = mbc;\n-        } else {\n-            this.bb = ByteBuffer.allocate(INITIAL_BYTE_BUFFER_CAPACITY);\n-            this.maxBufferCapacity = MAX_BYTE_BUFFER_CAPACITY;\n-        }\n+        this.bb = ByteBuffer.allocate(INITIAL_BYTE_BUFFER_CAPACITY);\n+        this.maxBufferCapacity = MAX_BYTE_BUFFER_CAPACITY;\n@@ -305,6 +291,1 @@\n-            if (ch != null) {\n-                int wc = ch.write(bb);\n-                assert wc == rem : rem;\n-            } else {\n-                out.write(bb.array(), bb.arrayOffset() + pos, rem);\n-            }\n+            out.write(bb.array(), bb.arrayOffset() + pos, rem);\n@@ -411,3 +392,1 @@\n-        if (out != null) {\n-            out.flush();\n-        }\n+        out.flush();\n@@ -417,1 +396,1 @@\n-        try (ch; out) {\n+        try (out) {\n@@ -433,2 +412,1 @@\n-            if (out != null)\n-                out.flush();\n+            out.flush();\n","filename":"src\/java.base\/share\/classes\/sun\/nio\/cs\/StreamEncoder.java","additions":12,"deletions":34,"binary":false,"changes":46,"status":"modified"}]}