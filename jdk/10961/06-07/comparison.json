{"files":[{"patch":"@@ -26,1 +26,1 @@\n- * @test id=all-policies-no-system-gc\n+ * @test id=policy-1-without-gc-with-verification\n@@ -29,1 +29,2 @@\n- * @requires vm.flavor == \"server\" & (vm.opt.TieredCompilation == null | vm.opt.TieredCompilation == false)\n+ * @requires vm.flavor == \"server\" & vm.opt.TieredCompilation != true\n+ * @enablePreview\n@@ -36,1 +37,1 @@\n- * @run main\/othervm\/timeout=300   --enable-preview -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n+ * @run main\/othervm   -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n@@ -42,1 +43,1 @@\n- *                     BasicExp 0 0\n+ *                     BasicExp 1 0\n@@ -46,1 +47,1 @@\n- * @test id=policy-1-gc-after-yield\n+ * @test id=policy-2-without-gc-with-verification\n@@ -49,1 +50,2 @@\n- * @requires vm.flavor == \"server\" & (vm.opt.TieredCompilation == null | vm.opt.TieredCompilation == false)\n+ * @requires vm.flavor == \"server\" & vm.opt.TieredCompilation != true\n+ * @enablePreview\n@@ -56,1 +58,85 @@\n- * @run main\/othervm\/timeout=300   --enable-preview -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n+ * @run main\/othervm   -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n+ *                     -XX:+IgnoreUnrecognizedVMOptions -XX:+VerifyContinuations -Xbatch -XX:-TieredCompilation\n+ *                     -XX:CompileCommand=dontinline,*::*dontinline*\n+ *                     -XX:CompileCommand=dontinline,*::*dontjit*\n+ *                     -XX:CompileCommand=exclude,*::*dontjit*\n+ *                     -XX:CompileCommand=dontinline,java\/lang\/String*.*\n+ *                     BasicExp 2 0\n+ *\/\n+\n+\/**\n+ * @test id=policy-3-without-gc-with-verification\n+ * @summary Collection of basic continuation tests. CompilationPolicy controls which frames in a sequence should be compiled when calling Continuation.yield().\n+ * @requires vm.continuations\n+ * @requires vm.flavor == \"server\" & vm.opt.TieredCompilation != true\n+ * @enablePreview\n+ * @modules java.base\/jdk.internal.vm\n+ * @library \/test\/lib \/test\/hotspot\/jtreg\n+ * @build java.base\/java.lang.StackWalkerHelper\n+ * @build jdk.test.whitebox.WhiteBox\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller jdk.test.whitebox.WhiteBox\n+ *\n+ * @run main\/othervm   -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n+ *                     -XX:+IgnoreUnrecognizedVMOptions -XX:+VerifyContinuations -Xbatch -XX:-TieredCompilation\n+ *                     -XX:CompileCommand=dontinline,*::*dontinline*\n+ *                     -XX:CompileCommand=dontinline,*::*dontjit*\n+ *                     -XX:CompileCommand=exclude,*::*dontjit*\n+ *                     -XX:CompileCommand=dontinline,java\/lang\/String*.*\n+ *                     BasicExp 3 0\n+ *\/\n+\n+\/**\n+ * @test id=policy-4-without-gc-with-verification\n+ * @summary Collection of basic continuation tests. CompilationPolicy controls which frames in a sequence should be compiled when calling Continuation.yield().\n+ * @requires vm.continuations\n+ * @requires vm.flavor == \"server\" & vm.opt.TieredCompilation != true\n+ * @enablePreview\n+ * @modules java.base\/jdk.internal.vm\n+ * @library \/test\/lib \/test\/hotspot\/jtreg\n+ * @build java.base\/java.lang.StackWalkerHelper\n+ * @build jdk.test.whitebox.WhiteBox\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller jdk.test.whitebox.WhiteBox\n+ *\n+ * @run main\/othervm   -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n+ *                     -XX:+IgnoreUnrecognizedVMOptions -XX:+VerifyContinuations -Xbatch -XX:-TieredCompilation\n+ *                     -XX:CompileCommand=dontinline,*::*dontinline*\n+ *                     -XX:CompileCommand=dontinline,*::*dontjit*\n+ *                     -XX:CompileCommand=exclude,*::*dontjit*\n+ *                     -XX:CompileCommand=dontinline,java\/lang\/String*.*\n+ *                     BasicExp 4 0\n+ *\/\n+\n+\/**\n+ * @test id=policy-5-without-gc-with-verification\n+ * @summary Collection of basic continuation tests. CompilationPolicy controls which frames in a sequence should be compiled when calling Continuation.yield().\n+ * @requires vm.continuations\n+ * @requires vm.flavor == \"server\" & vm.opt.TieredCompilation != true\n+ * @enablePreview\n+ * @modules java.base\/jdk.internal.vm\n+ * @library \/test\/lib \/test\/hotspot\/jtreg\n+ * @build java.base\/java.lang.StackWalkerHelper\n+ * @build jdk.test.whitebox.WhiteBox\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller jdk.test.whitebox.WhiteBox\n+ *\n+ * @run main\/othervm   -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n+ *                     -XX:+IgnoreUnrecognizedVMOptions -XX:+VerifyContinuations -Xbatch -XX:-TieredCompilation\n+ *                     -XX:CompileCommand=dontinline,*::*dontinline*\n+ *                     -XX:CompileCommand=dontinline,*::*dontjit*\n+ *                     -XX:CompileCommand=exclude,*::*dontjit*\n+ *                     -XX:CompileCommand=dontinline,java\/lang\/String*.*\n+ *                     BasicExp 5 0\n+ *\/\n+\n+\/**\n+ * @test id=policy-1-with-gc-without-verification\n+ * @summary Collection of basic continuation tests. CompilationPolicy controls which frames in a sequence should be compiled when calling Continuation.yield().\n+ * @requires vm.continuations\n+ * @requires vm.flavor == \"server\" & vm.opt.TieredCompilation != true\n+ * @enablePreview\n+ * @modules java.base\/jdk.internal.vm\n+ * @library \/test\/lib \/test\/hotspot\/jtreg\n+ * @build java.base\/java.lang.StackWalkerHelper\n+ * @build jdk.test.whitebox.WhiteBox\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller jdk.test.whitebox.WhiteBox\n+ *\n+ * @run main\/othervm   -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n@@ -66,1 +152,1 @@\n- * @test id=policy-2-gc-after-yield\n+ * @test id=policy-2-with-gc-without-verification\n@@ -69,1 +155,2 @@\n- * @requires vm.flavor == \"server\" & (vm.opt.TieredCompilation == null | vm.opt.TieredCompilation == false)\n+ * @requires vm.flavor == \"server\" & vm.opt.TieredCompilation != true\n+ * @enablePreview\n@@ -76,1 +163,1 @@\n- * @run main\/othervm\/timeout=300   --enable-preview -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n+ * @run main\/othervm   -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n@@ -86,1 +173,1 @@\n- * @test id=policy-3-gc-after-yield\n+ * @test id=policy-3-with-gc-without-verification\n@@ -89,1 +176,2 @@\n- * @requires vm.flavor == \"server\" & (vm.opt.TieredCompilation == null | vm.opt.TieredCompilation == false)\n+ * @requires vm.flavor == \"server\" & vm.opt.TieredCompilation != true\n+ * @enablePreview\n@@ -96,1 +184,1 @@\n- * @run main\/othervm\/timeout=300   --enable-preview -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n+ * @run main\/othervm   -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n@@ -106,1 +194,1 @@\n- * @test id=policy-4-gc-after-yield\n+ * @test id=policy-4-with-gc-without-verification\n@@ -109,1 +197,2 @@\n- * @requires vm.flavor == \"server\" & (vm.opt.TieredCompilation == null | vm.opt.TieredCompilation == false)\n+ * @requires vm.flavor == \"server\" & vm.opt.TieredCompilation != true\n+ * @enablePreview\n@@ -116,1 +205,1 @@\n- * @run main\/othervm\/timeout=300   --enable-preview -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n+ * @run main\/othervm   -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n@@ -126,1 +215,1 @@\n- * @test id=policy-5-gc-after-yield\n+ * @test id=policy-5-with-gc-without-verification\n@@ -129,1 +218,2 @@\n- * @requires vm.flavor == \"server\" & (vm.opt.TieredCompilation == null | vm.opt.TieredCompilation == false)\n+ * @requires vm.flavor == \"server\" & vm.opt.TieredCompilation != true\n+ * @enablePreview\n@@ -136,1 +226,1 @@\n- * @run main\/othervm\/timeout=300   --enable-preview -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n+ * @run main\/othervm   -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n@@ -169,1 +259,1 @@\n-    public static boolean callSystemGC;\n+    public static boolean triggerGCAfterYield;\n@@ -196,1 +286,1 @@\n-            callSystemGC = Integer.parseInt(args[1]) == 1;\n+            triggerGCAfterYield = Integer.parseInt(args[1]) == 1;\n@@ -206,1 +296,1 @@\n-        System.out.println(\"callSystemGC=\" + callSystemGC);\n+        System.out.println(\"callSystemGC=\" + triggerGCAfterYield);\n@@ -212,6 +302,12 @@\n-        if (compPolicySelection == 1 || all) runTests(new CompilationPolicy(7 \/*warmup*\/, COMP_NONE, COMP_NONE \/*Cont. pattern*\/));\n-        if (compPolicySelection == 2 || all) runTests(new CompilationPolicy(7 \/*warmup*\/, 1 \/* length comp. window *\/));\n-        if (compPolicySelection == 3 || all) runTests(new CompilationPolicy(7 \/*warmup*\/, 2 \/* length comp. window *\/));\n-        if (compPolicySelection == 4 || all) runTests(new CompilationPolicy(7 \/*warmup*\/, 3 \/* length comp. window *\/));\n-        if (compPolicySelection == 5 || all) runTests(new CompilationPolicy(7 \/*warmup*\/, COMP_ALL, CONT_METHS \/*Cont. pattern*\/));\n-        if (compPolicySelection >= 6) throw new Error(\"CompilationPolicy with number \" + compPolicySelection + \" does not exist\");\n+        if (compPolicySelection == 1 || all)\n+            runTests(new CompilationPolicy(7 \/*warmup*\/, COMP_NONE, COMP_NONE \/*Cont. pattern*\/));\n+        if (compPolicySelection == 2 || all)\n+            runTests(new CompilationPolicy(7 \/*warmup*\/, 1 \/* length comp. window *\/));\n+        if (compPolicySelection == 3 || all)\n+            runTests(new CompilationPolicy(7 \/*warmup*\/, 2 \/* length comp. window *\/));\n+        if (compPolicySelection == 4 || all)\n+            runTests(new CompilationPolicy(7 \/*warmup*\/, 3 \/* length comp. window *\/));\n+        if (compPolicySelection == 5 || all)\n+            runTests(new CompilationPolicy(7 \/*warmup*\/, COMP_ALL, CONT_METHS \/*Cont. pattern*\/));\n+        if (compPolicySelection >= 6)\n+            throw new Error(\"CompilationPolicy with number \" + compPolicySelection + \" does not exist\");\n@@ -260,2 +356,4 @@\n-        public CompilationPolicy(int warmupIterations, Pattern methodPattern, Pattern contMethPattern) {\n-            this(warmupIterations, 0, methodPattern, contMethPattern, CompWindowMode.NO_COMP_WINDOW);\n+        public CompilationPolicy(int warmupIterations, Pattern methodPattern,\n+                                 Pattern contMethPattern) {\n+            this(warmupIterations, 0, methodPattern, contMethPattern,\n+                 CompWindowMode.NO_COMP_WINDOW);\n@@ -264,2 +362,4 @@\n-        public CompilationPolicy(int warmupIterations, int windowLength, Pattern methodPattern, Pattern contMethPattern) {\n-            this(warmupIterations, windowLength, methodPattern, contMethPattern, CompWindowMode.COMP_WINDOW);\n+        public CompilationPolicy(int warmupIterations, int windowLength,\n+                                 Pattern methodPattern, Pattern contMethPattern) {\n+            this(warmupIterations, windowLength, methodPattern, contMethPattern,\n+                 CompWindowMode.COMP_WINDOW);\n@@ -268,1 +368,2 @@\n-        public CompilationPolicy(int warmupIterations, int windowLength, Pattern methodPattern, Pattern contMethPattern,\n+        public CompilationPolicy(int warmupIterations, int windowLength,\n+                                 Pattern methodPattern, Pattern contMethPattern,\n@@ -292,1 +393,1 @@\n-                boolean inWindow = i >= winPos && i < (winPos+winLen);\n+                boolean inWindow = i >= winPos && i < (winPos + winLen);\n@@ -297,1 +398,2 @@\n-                log(\"methods[\"+i+\"] inWindow=\"+inWindow + \" isCompiled=\"+isCompiled+\" shouldBeCompiled=\"+shouldBeCompiled+\" method=`\"+meth+\"`\");\n+                log(\"methods[\" + i + \"] inWindow=\" + inWindow + \" isCompiled=\" + isCompiled +\n+                    \" shouldBeCompiled=\" + shouldBeCompiled + \" method=`\" + meth + \"`\");\n@@ -300,1 +402,1 @@\n-                        log(\"           Compiling methods[\"+i+\"]\");\n+                        log(\"           Compiling methods[\" + i + \"]\");\n@@ -306,1 +408,1 @@\n-                        log(\"           Deoptimizing methods[\"+i+\"]\");\n+                        log(\"           Deoptimizing methods[\" + i + \"]\");\n@@ -382,1 +484,2 @@\n-            log_dontjit(\">>>> Executing test case \" + getClass().getName() + \" (yieldCalls=\" + yieldCalls + \", \" + \"testVariant=\" + testVariant + \")\");\n+            log_dontjit(\">>>> Executing test case \" + getClass().getName() +\n+                        \" (yieldCalls=\" + yieldCalls + \", \" + \"testVariant=\" + testVariant + \")\");\n@@ -451,1 +554,1 @@\n-                            p1 = Integer.parseInt(n1.substring(i+3, i+6));\n+                            p1 = Integer.parseInt(n1.substring(i + 3, i + 6));\n@@ -455,1 +558,1 @@\n-                            p2 = Integer.parseInt(n2.substring(i+3, i+6));\n+                            p2 = Integer.parseInt(n2.substring(i + 3, i + 6));\n@@ -484,1 +587,1 @@\n-                if (callSystemGC) System.gc();\n+                if (triggerGCAfterYield) WB.youngGC();\n@@ -505,3 +608,5 @@\n-        static final long i4=4; static final long i5=5; static final long i6=6; static final long i7=7;\n-        static final long i8=8; static final long i9=9; static final long i10=10; static final long i11=11; static final long i12=12;\n-        static final long i13=13; static final long i14=14; static final long i15=15; static final long i16=16;\n+        static final long i4=4; static final long i5=5; static final long i6=6;\n+        static final long i7=7; static final long i8=8; static final long i9=9;\n+        static final long i10=10; static final long i11=11; static final long\n+        i12=12; static final long i13=13; static final long i14=14; static final\n+        long i15=15; static final long i16=16;\n@@ -523,1 +628,1 @@\n-                String s2 = s1+\"str2\";\n+                String s2 = s1 + \"str2\";\n@@ -590,1 +695,2 @@\n-                    assertEQ(result, testVariant == TestCaseVariants.EXPR_STACK_NOT_EMPTY ? \"exprStckVal str1str2str3\" : \"str1str2str3\");\n+                    assertEQ(result, testVariant == TestCaseVariants.EXPR_STACK_NOT_EMPTY ?\n+                             \"exprStckVal str1str2str3\" : \"str1str2str3\");\n@@ -594,1 +700,2 @@\n-                assertTrue(testVariant != TestCaseVariants.THROW_HANDLED_EXCEPTION || (caughtException instanceof HandledException),\n+                assertTrue(testVariant != TestCaseVariants.THROW_HANDLED_EXCEPTION\n+                           || (caughtException instanceof HandledException),\n@@ -599,2 +706,3 @@\n-        public String ord101_testMethod_dontinline(long a1, long a2, long a3, String s1) throws HandledException {\n-            String s2 = s1+\"str2\";\n+        public String ord101_testMethod_dontinline(long a1, long a2, long a3, String s1)\n+            throws HandledException {\n+            String s2 = s1 + \"str2\";\n@@ -604,1 +712,2 @@\n-        public String ord102_testMethod_dontinline(long a1, long a2, long a3, String s2) throws HandledException {\n+        public String ord102_testMethod_dontinline(long a1, long a2, long a3, String s2)\n+            throws HandledException {\n@@ -618,1 +727,2 @@\n-        public String ord103_testMethod_dontinline(long a1, long a2, long a3, String s2) throws HandledException {\n+        public String ord103_testMethod_dontinline(long a1, long a2, long a3, String s2)\n+            throws HandledException {\n@@ -622,1 +732,2 @@\n-        public String ord104_testMethod_dontinline(long a1, long a2, long a3, String s2) throws HandledException {\n+        public String ord104_testMethod_dontinline(long a1, long a2, long a3, String s2)\n+            throws HandledException {\n@@ -624,2 +735,4 @@\n-            String s3 = s2+\"str3\";\n-            log_dontjit(\"Yield #\" + yieldCount++); Continuation.yield(THE_SCOPE); log_dontjit(\"\/Yield #\" + yieldCount);\n+            String s3 = s2 + \"str3\";\n+            log_dontjit(\"Yield #\" + yieldCount++);\n+            Continuation.yield(THE_SCOPE);\n+            log_dontjit(\"\/Yield #\" + yieldCount);\n@@ -634,1 +747,1 @@\n-            resLong += res+a1+a3;\n+            resLong += res + a1 + a3;\n@@ -644,1 +757,3 @@\n-            List<String> frames = cont.stackWalker().walk(fs -> fs.map(StackWalker.StackFrame::getMethodName).collect(Collectors.toList()));\n+            List<String> frames =\n+                cont.stackWalker()\n+                .walk(fs -> fs.map(StackWalker.StackFrame::getMethodName).collect(Collectors.toList()));\n@@ -646,2 +761,5 @@\n-                         : Arrays.asList(\"yield\", \"ord104_testMethod_dontinline\", \"ord103_testMethod_dontinline\",\n-                                         \"ord102_testMethod_dontinline\", \"ord101_testMethod_dontinline\", \"run\", \"enter0\", \"enter\"));\n+                         : Arrays.asList(\"yield\", \"ord104_testMethod_dontinline\",\n+                                         \"ord103_testMethod_dontinline\",\n+                                         \"ord102_testMethod_dontinline\",\n+                                         \"ord101_testMethod_dontinline\",\n+                                         \"run\", \"enter0\", \"enter\"));\n@@ -729,1 +847,1 @@\n-            if (res != i1+i2+i3+i4+i5+i6+i7+i8+i9+i10+i11) {\n+            if (res != i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8 + i9 + i10 + i11) {\n@@ -734,1 +852,4 @@\n-        public long ord101_recurse_dontinline(int depth, long l1, long l2, long l3, long l4, long l5, long l6, long l7, long l8, long l9, long l10, long l11) {\n+        public long ord101_recurse_dontinline(int depth, long l1, long l2, long\n+                                              l3, long l4, long l5, long l6,\n+                                              long l7, long l8, long l9, long\n+                                              l10, long l11) {\n@@ -739,1 +860,1 @@\n-                return l1+l2+l3+l4+l5+l6+l7+l8+l9+l10+l11;\n+                return l1 + l2 + l3 + l4 + l5 + l6 + l7 + l8 + l9 + l10 + l11;\n@@ -741,2 +862,3 @@\n-            long res = ord101_recurse_dontinline(depth + 1, l1, l2, l3, l4, l5, l6, l7, l8, l9, l10, l11);\n-            if (res != l1+l2+l3+l4+l5+l6+l7+l8+l9+l10+l11) {\n+            long res = ord101_recurse_dontinline(depth + 1, l1, l2, l3, l4, l5,\n+                                                 l6, l7, l8, l9, l10, l11);\n+            if (res != l1 + l2 + l3 + l4 + l5 + l6 + l7 + l8 + l9 + l10 + l11) {\n@@ -748,1 +870,1 @@\n-                if (res1 != l1+l2+l3+l4+l5+l6+l7+l8+l9+l10+l11) {\n+                if (res1 != l1 + l2 + l3 + l4 + l5 + l6 + l7 + l8 + l9 + l10 + l11) {\n@@ -757,1 +879,2 @@\n-        public long ord102_yield_dontinline(int depth, long l1, long l2, long l3, long l4, long l5, long l6, long l7, long l8, long l9, long l10, long l11) {\n+        public long ord102_yield_dontinline(int depth, long l1, long l2, long l3, long l4, long l5,\n+                                            long l6, long l7, long l8, long l9, long l10, long l11) {\n@@ -760,1 +883,1 @@\n-                return l1+l2+l3+l4+l5+l6+l7+l8+l9+l10+l11;\n+                return l1 + l2 + l3 + l4 + l5 + l6 + l7 + l8 + l9 + l10 + l11;\n@@ -763,1 +886,1 @@\n-            if (res != l1+l2+l3+l4+l5+l6+l7+l8+l9+l10+l11) {\n+            if (res != l1 + l2 + l3 + l4 + l5 + l6 + l7 + l8 + l9 + l10 + l11) {\n@@ -795,3 +918,6 @@\n-        public long ord102_testMethod_dontinline(long a1, long a2, long a3, long a4, long a5, long a6, long a7, long a8,\n-                                                 long a9, long a10, long a11) {\n-            long res = a1+a2+a3+a4+a5+a6+a7+a8+a9+a10+a11+i12+i13+i14+i15+i16;\n+        public long ord102_testMethod_dontinline(long a1, long a2, long a3, long\n+                                                 a4, long a5, long a6, long a7,\n+                                                 long a8, long a9, long a10,\n+                                                 long a11) {\n+            long res = a1 + a2 + a3 + a4 + a5 + a6 + a7 + a8 + a9 + a10 + a11\n+                       + i12 + i13 + i14 + i15 + i16;\n@@ -832,3 +958,7 @@\n-        public long ord102_testMethod_dontinline(long a1, long a2, long a3, long a4, long a5, long a6, long a7, long a8,\n-                                                 long a9, long a10, long a11, long a12, long a13, long a14) {\n-            long res = ord103_testMethod_dontinline(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, i15);\n+        public long ord102_testMethod_dontinline(long a1, long a2, long a3, long\n+                                                 a4, long a5, long a6, long a7,\n+                                                 long a8, long a9, long a10,\n+                                                 long a11, long a12, long a13,\n+                                                 long a14) {\n+            long res = ord103_testMethod_dontinline(a1, a2, a3, a4, a5, a6, a7, a8,\n+                                                    a9, a10, a11, a12, a13, a14, i15);\n@@ -843,3 +973,7 @@\n-        public long ord103_testMethod_dontinline(long a1, long a2, long a3, long a4, long a5, long a6, long a7,\n-                                                 long a8, long a9, long a10, long a11, long a12, long a13, long a14, long a15) {\n-            long res = a1+a2+a3+a4+a5+a6+a7+a8+a9+a10+a11+a12+a13+a14+a15+i16;\n+        public long ord103_testMethod_dontinline(long a1, long a2, long a3, long\n+                                                 a4, long a5, long a6, long a7,\n+                                                 long a8, long a9, long a10,\n+                                                 long a11, long a12, long a13,\n+                                                 long a14, long a15) {\n+            long res = a1 + a2 + a3 + a4 + a5 + a6 + a7 + a8 + a9 + a10 + a11\n+                       + a12 + a13 + a14 + a15 + i16;\n@@ -871,1 +1005,3 @@\n-           log_dontjit(\"Yield #\" + yieldCount); Continuation.yield(THE_SCOPE); log_dontjit(\"\/Yield #\" + yieldCount++);\n+           log_dontjit(\"Yield #\" + yieldCount);\n+           Continuation.yield(THE_SCOPE);\n+           log_dontjit(\"\/Yield #\" + yieldCount++);\n@@ -877,1 +1013,3 @@\n-           log_dontjit(\"Yield #\" + yieldCount); Continuation.yield(THE_SCOPE); log_dontjit(\"\/Yield #\" + yieldCount++);\n+           log_dontjit(\"Yield #\" + yieldCount);\n+           Continuation.yield(THE_SCOPE);\n+           log_dontjit(\"\/Yield #\" + yieldCount++);\n@@ -883,1 +1021,3 @@\n-           log_dontjit(\"Yield #\" + yieldCount); Continuation.yield(THE_SCOPE); log_dontjit(\"\/Yield #\" + yieldCount++);\n+           log_dontjit(\"Yield #\" + yieldCount);\n+           Continuation.yield(THE_SCOPE);\n+           log_dontjit(\"\/Yield #\" + yieldCount++);\n@@ -889,1 +1029,3 @@\n-           log_dontjit(\"Yield #\" + yieldCount); Continuation.yield(THE_SCOPE); log_dontjit(\"\/Yield #\" + yieldCount++);\n+           log_dontjit(\"Yield #\" + yieldCount);\n+           Continuation.yield(THE_SCOPE);\n+           log_dontjit(\"\/Yield #\" + yieldCount++);\n@@ -895,1 +1037,3 @@\n-           log_dontjit(\"Yield #\" + yieldCount); Continuation.yield(THE_SCOPE); log_dontjit(\"\/Yield #\" + yieldCount++);\n+           log_dontjit(\"Yield #\" + yieldCount);\n+           Continuation.yield(THE_SCOPE);\n+           log_dontjit(\"\/Yield #\" + yieldCount++);\n@@ -901,1 +1045,3 @@\n-           log_dontjit(\"Yield #\" + yieldCount); Continuation.yield(THE_SCOPE); log_dontjit(\"\/Yield #\" + yieldCount++);\n+           log_dontjit(\"Yield #\" + yieldCount);\n+           Continuation.yield(THE_SCOPE);\n+           log_dontjit(\"\/Yield #\" + yieldCount++);\n@@ -905,1 +1051,2 @@\n-        public long ord107_testMethod_dontinline(long a1, long a2, long a3, long a4, long a5, long a6, long a7) {\n+        public long ord107_testMethod_dontinline(long a1, long a2, long a3, long\n+                                                 a4, long a5, long a6, long a7) {\n@@ -915,1 +1062,2 @@\n-        public long ord108_testMethod_dontinline(long a1, long a2, long a3, long a4, long a5, long a6, long a7, long a8) {\n+        public long ord108_testMethod_dontinline(long a1, long a2, long a3, long\n+                                                 a4, long a5, long a6, long a7, long a8) {\n@@ -925,1 +1073,2 @@\n-        public long ord109_testMethod_dontinline(long a1, long a2, long a3, long a4, long a5, long a6, long a7, long a8, long a9) {\n+        public long ord109_testMethod_dontinline(long a1, long a2, long a3, long a4, long a5, long a6,\n+                                                 long a7, long a8, long a9) {\n@@ -931,1 +1080,2 @@\n-       public long ord110_testMethod_dontinline(long a1, long a2, long a3, long a4, long a5, long a6, long a7, long a8, long a9, long a10) {\n+       public long ord110_testMethod_dontinline(long a1, long a2, long a3, long a4, long a5, long a6,\n+                                                long a7, long a8, long a9, long a10) {\n@@ -937,1 +1087,2 @@\n-       public long ord111_testMethod_dontinline(long a1, long a2, long a3, long a4, long a5, long a6, long a7, long a8, long a9, long a10, long a11) {\n+       public long ord111_testMethod_dontinline(long a1, long a2, long a3, long a4, long a5, long a6,\n+                                                long a7, long a8, long a9, long a10, long a11) {\n@@ -939,1 +1090,3 @@\n-           log_dontjit(\"Yield #\" + yieldCount); Continuation.yield(THE_SCOPE); log_dontjit(\"\/Yield #\" + yieldCount++);\n+           log_dontjit(\"Yield #\" + yieldCount);\n+           Continuation.yield(THE_SCOPE);\n+           log_dontjit(\"\/Yield #\" + yieldCount++);\n@@ -943,1 +1096,2 @@\n-       public long ord112_testMethod_dontinline(long a1, long a2, long a3, long a4, long a5, long a6, long a7, long a8, long a9, long a10, long a11, long a12) {\n+       public long ord112_testMethod_dontinline(long a1, long a2, long a3, long a4, long a5, long a6,\n+                                                long a7, long a8, long a9, long a10, long a11, long a12) {\n@@ -945,1 +1099,3 @@\n-           log_dontjit(\"Yield #\" + yieldCount); Continuation.yield(THE_SCOPE); log_dontjit(\"\/Yield #\" + yieldCount++);\n+           log_dontjit(\"Yield #\" + yieldCount);\n+           Continuation.yield(THE_SCOPE);\n+           log_dontjit(\"\/Yield #\" + yieldCount++);\n@@ -949,1 +1105,3 @@\n-       public long ord113_testMethod_dontinline(long a1, long a2, long a3, long a4, long a5, long a6, long a7, long a8, long a9, long a10, long a11, long a12, long a13) {\n+       public long ord113_testMethod_dontinline(long a1, long a2, long a3, long a4, long a5, long a6,\n+                                                long a7, long a8, long a9, long a10, long a11, long a12,\n+                                                long a13) {\n@@ -951,1 +1109,3 @@\n-           log_dontjit(\"Yield #\" + yieldCount); Continuation.yield(THE_SCOPE); log_dontjit(\"\/Yield #\" + yieldCount++);\n+           log_dontjit(\"Yield #\" + yieldCount);\n+           Continuation.yield(THE_SCOPE);\n+           log_dontjit(\"\/Yield #\" + yieldCount++);\n@@ -955,1 +1115,3 @@\n-       public long ord114_testMethod_dontinline(long a1, long a2, long a3, long a4, long a5, long a6, long a7, long a8, long a9, long a10, long a11, long a12, long a13, long a14) {\n+       public long ord114_testMethod_dontinline(long a1, long a2, long a3, long a4, long a5, long a6,\n+                                                long a7, long a8, long a9, long a10, long a11, long a12,\n+                                                long a13, long a14) {\n@@ -957,1 +1119,3 @@\n-           log_dontjit(\"Yield #\" + yieldCount); Continuation.yield(THE_SCOPE); log_dontjit(\"\/Yield #\" + yieldCount++);\n+           log_dontjit(\"Yield #\" + yieldCount);\n+           Continuation.yield(THE_SCOPE);\n+           log_dontjit(\"\/Yield #\" + yieldCount++);\n@@ -961,1 +1125,3 @@\n-       public long ord115_testMethod_dontinline(long a1, long a2, long a3, long a4, long a5, long a6, long a7, long a8, long a9, long a10, long a11, long a12, long a13, long a14, long a15) {\n+       public long ord115_testMethod_dontinline(long a1, long a2, long a3, long a4, long a5, long a6,\n+                                                long a7, long a8, long a9, long a10, long a11, long a12,\n+                                                long a13, long a14, long a15) {\n@@ -963,1 +1129,3 @@\n-           log_dontjit(\"Yield #\" + yieldCount); Continuation.yield(THE_SCOPE); log_dontjit(\"\/Yield #\" + yieldCount++);\n+           log_dontjit(\"Yield #\" + yieldCount);\n+           Continuation.yield(THE_SCOPE);\n+           log_dontjit(\"\/Yield #\" + yieldCount++);\n@@ -967,4 +1135,8 @@\n-        public long ord116_testMethod_dontinline(long a1, long a2, long a3, long a4, long a5, long a6, long a7, long a8, long a9, long a10, long a11, long a12, long a13, long a14, long a15, long a16) {\n-            long res = a2+a4+a6+a8+a10+a12+a14+a16;\n-            log_dontjit(\"Yield #\" + yieldCount); Continuation.yield(THE_SCOPE); log_dontjit(\"\/Yield #\" + yieldCount++);\n-            res += a1+a3+a5+a7+a9+a11+a13+a15;\n+        public long ord116_testMethod_dontinline(long a1, long a2, long a3, long a4, long a5, long a6,\n+                                                 long a7, long a8, long a9, long a10, long a11, long a12,\n+                                                 long a13, long a14, long a15, long a16) {\n+            long res = a2 + a4 + a6 + a8 + a10 + a12 + a14 + a16;\n+            log_dontjit(\"Yield #\" + yieldCount);\n+            Continuation.yield(THE_SCOPE);\n+            log_dontjit(\"\/Yield #\" + yieldCount++);\n+            res += a1 + a3 + a5 + a7 + a9 + a11 + a13 + a15;\n","filename":"test\/jdk\/jdk\/internal\/vm\/Continuation\/BasicExp.java","additions":272,"deletions":100,"binary":false,"changes":372,"status":"modified"}]}