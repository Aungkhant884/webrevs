{"files":[{"patch":"@@ -25,1 +25,1 @@\n- * @test\n+ * @test id=no-cs\n@@ -29,0 +29,1 @@\n+ * @library \/lib\/testlibrary \/test\/lib\n@@ -30,1 +31,13 @@\n- * @run main\/othervm -Xms5G -Xmx5G HugeCapacity\n+ * @requires !vm.opt.final.CompactStrings\n+ * @run main\/othervm -Xms5G -Xmx5G HugeCapacity false\n+ *\/\n+\n+\/**\n+ * @test id=cs\n+ * @bug 8149330 8218227\n+ * @summary Capacity should not get close to Integer.MAX_VALUE unless\n+ *          necessary\n+ * @library \/lib\/testlibrary \/test\/lib\n+ * @requires (sun.arch.data.model == \"64\" & os.maxMemory >= 6G)\n+ * @requires vm.opt.final.CompactStrings\n+ * @run main\/othervm -Xms5G -Xmx5G HugeCapacity true\n@@ -37,1 +50,6 @@\n-        testLatin1();\n+        if (args.length == 0) {\n+           throw new IllegalArgumentException(\"Need the argument\");\n+        }\n+        boolean isCompact = Boolean.parseBoolean(args[0]);\n+\n+        testLatin1(isCompact);\n@@ -46,1 +64,1 @@\n-    private static void testLatin1() {\n+    private static void testLatin1(boolean isCompact) {\n@@ -48,0 +66,1 @@\n+            int divisor = isCompact ? 2 : 4;\n@@ -49,2 +68,2 @@\n-            sb.ensureCapacity(Integer.MAX_VALUE \/ 2);\n-            sb.ensureCapacity(Integer.MAX_VALUE \/ 2 + 1);\n+            sb.ensureCapacity(Integer.MAX_VALUE \/ divisor);\n+            sb.ensureCapacity(Integer.MAX_VALUE \/ divisor + 1);\n","filename":"test\/jdk\/java\/lang\/StringBuilder\/HugeCapacity.java","additions":25,"deletions":6,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -314,0 +314,1 @@\n+        vmOptFinalFlag(map, \"CompactStrings\");\n","filename":"test\/jtreg-ext\/requires\/VMProps.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}