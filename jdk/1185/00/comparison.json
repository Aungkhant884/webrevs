{"files":[{"patch":"@@ -708,1 +708,1 @@\n-#ifdef ASSERT\n+#ifndef PRODUCT\n@@ -750,1 +750,1 @@\n-#endif \/\/ ASSERT\n+#endif \/\/ !PRODUCT\n","filename":"src\/hotspot\/share\/classfile\/vmIntrinsics.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1091,1 +1091,1 @@\n-#ifdef ASSERT\n+#ifndef PRODUCT\n","filename":"src\/hotspot\/share\/classfile\/vmIntrinsics.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -71,1 +71,1 @@\n-  void assert_scan_top_is_null(uint hrm_index) PRODUCT_RETURN;\n+  void assert_scan_top_is_null(uint hrm_index) NOT_DEBUG_RETURN;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1RemSet.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -104,1 +104,1 @@\n-  void assert_is_frame_safe(const frame& f) PRODUCT_RETURN;\n+  void assert_is_frame_safe(const frame& f) NOT_DEBUG_RETURN;\n","filename":"src\/hotspot\/share\/runtime\/stackWatermark.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}