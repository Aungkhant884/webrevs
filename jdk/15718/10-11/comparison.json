{"files":[{"patch":"@@ -1535,1 +1535,0 @@\n-\n","filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.cpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -76,1 +76,1 @@\n-\/\/ Not implemented yet\n+\/\/ Not implemented yet, see JDK-8318414\n","filename":"src\/hotspot\/cpu\/arm\/globals_arm.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -79,2 +79,1 @@\n-\/\/ Not implemented yet\n-define_pd_global(uint, SecondarySuperMissBackoff, 0);\n+define_pd_global(uint, SecondarySuperMissBackoff, 1000);\n","filename":"src\/hotspot\/cpu\/riscv\/globals_riscv.hpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -3091,2 +3091,17 @@\n-  \/\/ Success. Cache the super we found an proceed in triumph.\n-  sd(super_klass, super_cache_addr);\n+  \/\/ Success. Try to cache the super we found and proceed in triumph.\n+  uint32_t super_cache_backoff = checked_cast<uint32_t>(SecondarySuperMissBackoff);\n+  if (super_cache_backoff > 0) {\n+    Label L_skip;\n+\n+    lwu(t0, Address(xthread, JavaThread::backoff_secondary_super_miss_offset()));\n+    subw(t0, t0, 1);\n+    bgez(t0, L_skip);\n+\n+    sd(super_klass, super_cache_addr);\n+    mv(t0, super_cache_backoff);\n+\n+    bind(L_skip);\n+    sw(t0, Address(xthread, JavaThread::backoff_secondary_super_miss_offset()));\n+  } else {\n+    sd(super_klass, super_cache_addr);\n+  }\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp","additions":17,"deletions":2,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -4619,1 +4619,0 @@\n-\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86.cpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -146,1 +146,1 @@\n-  uint32_t       _backoff_secondary_super_miss;\n+  uint32_t      _backoff_secondary_super_miss;\n","filename":"src\/hotspot\/share\/runtime\/javaThread.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-@Fork(value = 3, jvmArgsAppend = \"-XX:TieredStopAtLevel=1\")\n+@Fork(value = 3, jvmArgsAppend = {\"-XX:+TieredCompilation\", \"-XX:TieredStopAtLevel=1\"})\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/SecondarySuperCache.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}