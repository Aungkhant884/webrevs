{"files":[{"patch":"@@ -133,2 +133,2 @@\n-  _gc_par_phases[EagerlyReclaimHumongousObjects]->create_thread_work_items(\"Humongous Total\", EagerlyReclaimNumTotal);\n-  _gc_par_phases[EagerlyReclaimHumongousObjects]->create_thread_work_items(\"Humongous Candidates\", EagerlyReclaimNumCandidates);\n+  _gc_par_phases[EagerlyReclaimHumongousObjects]->create_thread_work_items(\"Humongous Total\", EagerlyReclaimNumTotal, 1);\n+  _gc_par_phases[EagerlyReclaimHumongousObjects]->create_thread_work_items(\"Humongous Candidates\", EagerlyReclaimNumCandidates, 1);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1GCPhaseTimes.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -267,2 +267,4 @@\n-  uint _humongous_regions_reclaimed;\n-  size_t _bytes_freed;\n+  uint _humongous_reclaim_candidates;\n+  volatile uint _humongous_regions_reclaimed;\n+  volatile size_t _bytes_freed;\n+  HeapRegionClaimer _claimer;\n@@ -273,0 +275,1 @@\n+    _humongous_reclaim_candidates(G1CollectedHeap::heap()->num_humongous_reclaim_candidates()),\n@@ -274,1 +277,5 @@\n-    _bytes_freed(0) { }\n+    _bytes_freed(0),\n+    _claimer(0) {\n+      record_work_item(0, G1GCPhaseTimes::EagerlyReclaimNumTotal, G1CollectedHeap::heap()->num_humongous_objects());\n+      record_work_item(0, G1GCPhaseTimes::EagerlyReclaimNumCandidates, _humongous_reclaim_candidates);\n+    }\n@@ -283,1 +290,7 @@\n-  static bool should_execute() {   return G1CollectedHeap::heap()->should_do_eager_reclaim(); }\n+  static bool should_execute() { return G1CollectedHeap::heap()->should_do_eager_reclaim(); }\n+\n+  double worker_cost() const override { return MAX2(1u, _humongous_reclaim_candidates); }\n+\n+  void set_max_workers(uint max_workers) override {\n+    _claimer.set_n_workers(max_workers);\n+  }\n@@ -285,1 +298,0 @@\n-  double worker_cost() const override { return 1.0; }\n@@ -290,1 +302,1 @@\n-    g1h->heap_region_iterate(&cl);\n+    g1h->heap_region_par_iterate_from_worker_offset(&cl, &_claimer, worker_id);\n@@ -292,2 +304,1 @@\n-    record_work_item(worker_id, G1GCPhaseTimes::EagerlyReclaimNumTotal, g1h->num_humongous_objects());\n-    record_work_item(worker_id, G1GCPhaseTimes::EagerlyReclaimNumCandidates, g1h->num_humongous_reclaim_candidates());\n+    \/\/ Record the number of objects reclaimed by this worker and update the total stats.\n@@ -295,3 +306,2 @@\n-\n-    _humongous_regions_reclaimed = cl.humongous_regions_reclaimed();\n-    _bytes_freed = cl.bytes_freed();\n+    Atomic::add(&_humongous_regions_reclaimed, cl.humongous_regions_reclaimed());\n+    Atomic::add(&_bytes_freed, cl.bytes_freed());\n@@ -677,1 +687,1 @@\n-    add_serial_task(new EagerlyReclaimHumongousObjectsTask());\n+    add_parallel_task(new EagerlyReclaimHumongousObjectsTask());\n","filename":"src\/hotspot\/share\/gc\/g1\/g1YoungGCPostEvacuateTasks.cpp","additions":22,"deletions":12,"binary":false,"changes":34,"status":"modified"}]}