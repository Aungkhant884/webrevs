{"files":[{"patch":"@@ -92,0 +92,3 @@\n+            if (table != null) {\n+                header = table.getTableHeader();\n+            }\n","filename":"src\/java.desktop\/windows\/classes\/com\/sun\/java\/swing\/plaf\/windows\/WindowsTableHeaderUI.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -0,0 +1,124 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Component;\n+import java.awt.Dimension;\n+import java.awt.Graphics2D;\n+import java.awt.image.BufferedImage;\n+\n+import javax.swing.JTable;\n+import javax.swing.SwingUtilities;\n+import javax.swing.UIManager;\n+import javax.swing.UnsupportedLookAndFeelException;\n+\n+import javax.swing.table.AbstractTableModel;\n+import javax.swing.table.JTableHeader;\n+import javax.swing.table.TableCellRenderer;\n+\n+\/*\n+ * @test\n+ * @bug 6429812\n+ * @summary Test to check if table is printed without NPE\n+ * @run main TableHeaderRendererTest\n+ *\/\n+\n+public class TableHeaderRendererTest {\n+    static String LnFName = null;\n+    public static void main(String[] args) throws Exception {\n+\n+        UIManager.LookAndFeelInfo[] lookAndFeel = UIManager.getInstalledLookAndFeels();\n+        for (UIManager.LookAndFeelInfo look : lookAndFeel) {\n+            \/\/ initialize should not throw NullPointerException\n+            LnFName = look.getName();\n+            System.out.println(LnFName+ \" LookAndFeel Set\");\n+            setLookAndFeel(look.getClassName());\n+            SwingUtilities.invokeAndWait(TableHeaderRendererTest::initialize);\n+        }\n+        System.out.println(\"Test Passed\");\n+    }\n+\n+    \/\/Initialize the table and paint it to Buffered Image\n+    static void initialize() {\n+        JTable table = new JTable(new SampleTableModel());\n+\n+        final JTableHeader header = table.getTableHeader();\n+        TableCellRenderer renderer = new DecoratedHeaderRenderer(header.getDefaultRenderer());\n+        header.setDefaultRenderer(renderer);\n+\n+        table.updateUI();\n+\n+        Dimension size = header.getPreferredSize();\n+        header.setSize(size);\n+        BufferedImage img = new BufferedImage(size.width, size.height,\n+                BufferedImage.TYPE_INT_ARGB);\n+        Graphics2D g2d = img.createGraphics();\n+        try {\n+            header.paint(g2d);\n+        } finally {\n+            g2d.dispose();\n+        }\n+    }\n+\n+    \/\/Table Model data\n+    static class SampleTableModel extends AbstractTableModel {\n+        @Override\n+        public int getRowCount() {\n+            return 10;\n+        }\n+        @Override\n+        public int getColumnCount() {\n+            return 10;\n+        }\n+        @Override\n+        public Object getValueAt(int rowIndex, int columnIndex) {\n+            return \"\"+rowIndex + \" X \" + columnIndex;\n+        }\n+    }\n+\n+    \/\/Table header renderer\n+    static class DecoratedHeaderRenderer implements TableCellRenderer {\n+        public DecoratedHeaderRenderer(TableCellRenderer render) {\n+            this.render = render;\n+        }\n+\n+        private final TableCellRenderer render;\n+\n+        @Override\n+        public Component getTableCellRendererComponent(JTable table,\n+                                                       Object value, boolean isSelected,\n+                                                       boolean hasFocus, int row, int column) {\n+            return render.getTableCellRendererComponent(\n+                    table, value, isSelected, hasFocus, row, column);\n+        }\n+    }\n+    private static void setLookAndFeel(String laf) {\n+        try {\n+            UIManager.setLookAndFeel(laf);\n+        } catch (UnsupportedLookAndFeelException ignored) {\n+            System.out.println(\"Unsupported L&F: \" + laf);\n+        } catch (ClassNotFoundException | InstantiationException\n+                | IllegalAccessException e) {\n+            throw new RuntimeException(e);\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JTableHeader\/TableHeaderRendererTest.java","additions":124,"deletions":0,"binary":false,"changes":124,"status":"added"}]}