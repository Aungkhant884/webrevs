{"files":[{"patch":"@@ -34,0 +34,2 @@\n+import java.awt.Robot;\n+\n@@ -48,6 +50,1 @@\n-    static String instructions\n-            = \" INSTRUCTIONS:\" +\n-            \" 1. This is a Windows specific test. If you are not on Windows, press Pass.\"+\n-            \" 2. Check if the Table with header and rows are painted without NPE.\"+\n-            \" 3. If the table appears without any NPE, press Pass\";\n-    static PassFailJFrame passFailJFrame;\n+    static Boolean PassFailStatus = true;\n@@ -57,0 +54,1 @@\n+        Robot robot = new Robot();\n@@ -60,1 +58,1 @@\n-                    passFailJFrame = new PassFailJFrame(instructions);\n+                    Thread.currentThread().setUncaughtExceptionHandler(new ExceptionCheck());\n@@ -63,2 +61,0 @@\n-                    PassFailJFrame.addTestFrame(testObj);\n-                    PassFailJFrame.positionTestFrame(testObj, PassFailJFrame.Position.HORIZONTAL);\n@@ -70,1 +66,18 @@\n-        passFailJFrame.awaitAndCheck();\n+\n+        robot.delay(2000);\n+        robot.waitForIdle();\n+\n+        if (!PassFailStatus) {\n+            testObj.dispose();\n+            throw new RuntimeException(\"Test Case Failed. NPE raised!\");\n+        }\n+        System.out.println(\"Test Pass!\");\n+        testObj.dispose();\n+    }\n+\n+    static class ExceptionCheck implements Thread.UncaughtExceptionHandler {\n+        public void uncaughtException(Thread t, Throwable e)\n+        {\n+            PassFailStatus = false;\n+            System.out.println(\"Uncaught Exception Handled : \" + e);\n+        }\n","filename":"test\/jdk\/javax\/swing\/JTableHeader\/TableRendererTest.java","additions":23,"deletions":10,"binary":false,"changes":33,"status":"modified"}]}