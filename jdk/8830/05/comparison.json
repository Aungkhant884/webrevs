{"files":[{"patch":"@@ -92,0 +92,3 @@\n+            if (table != null) {\n+                header = table.getTableHeader();\n+            }\n","filename":"src\/java.desktop\/windows\/classes\/com\/sun\/java\/swing\/plaf\/windows\/WindowsTableHeaderUI.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -0,0 +1,131 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\/* @test\n+   @bug 6429812\n+   @key headful\n+   @requires (os.family == \"windows\")\n+   @library \/java\/awt\/regtesthelpers\n+   @build PassFailJFrame\n+   @summary Test to check if table is printed without NPE\n+   @run main TableRendererTest\n+*\/\n+\n+import java.awt.Component;\n+import java.awt.Robot;\n+\n+import javax.swing.UIManager;\n+import javax.swing.SwingUtilities;\n+import javax.swing.JFrame;\n+import javax.swing.JTable;\n+import javax.swing.JScrollPane;\n+\n+import javax.swing.table.AbstractTableModel;\n+import javax.swing.table.JTableHeader;\n+import javax.swing.table.TableCellRenderer;\n+\n+public class TableRendererTest{\n+    static Boolean PassFailStatus = true;\n+    static JFrame frame = null;\n+    private static JScrollPane jScrollPane = null;\n+    private static JTable table = null;\n+\n+    public static void main(String[] args) throws Exception {\n+        UIManager.setLookAndFeel(\"com.sun.java.swing.plaf.windows.WindowsLookAndFeel\");\n+\n+        Robot robot = new Robot();\n+        SwingUtilities.invokeAndWait(new Runnable() {\n+            public void run() {\n+                try {\n+                    Thread.currentThread().setUncaughtExceptionHandler(new ExceptionCheck());\n+                    initialize();\n+                    \/\/Adding the Test Frame to handle dispose\n+                } catch (Exception e) {\n+                    e.printStackTrace();\n+                }\n+            }\n+        });\n+\n+        robot.delay(2000);\n+        robot.waitForIdle();\n+\n+        if (!PassFailStatus) {\n+            frame.dispose();\n+            throw new RuntimeException(\"Test Case Failed. NPE raised!\");\n+        }\n+        System.out.println(\"Test Pass!\");\n+        frame.dispose();\n+    }\n+\n+    static void initialize() {\n+        frame = new JFrame();\n+        frame.setTitle(\"JFrame\");\n+        table = new JTable(new MyModel());\n+        jScrollPane = new JScrollPane();\n+        jScrollPane.setBounds(new java.awt.Rectangle(0,0,350,618));\n+        jScrollPane.setViewportView(table);\n+\n+        JTableHeader header = table.getTableHeader();\n+        TableCellRenderer render = new DecoratedHeaderRenderer(header.getDefaultRenderer());\n+        header.setDefaultRenderer(render);\n+\n+        frame.getContentPane().add(jScrollPane,null);\n+        frame.setSize(363, 658);\n+        frame.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);\n+\n+        table.updateUI();\n+\n+        frame.setVisible(true);\n+    }\n+\n+    static class ExceptionCheck implements Thread.UncaughtExceptionHandler {\n+        public void uncaughtException(Thread t, Throwable e)\n+        {\n+            PassFailStatus = false;\n+            System.out.println(\"Uncaught Exception Handled : \" + e);\n+        }\n+    }\n+\n+    static class MyModel extends AbstractTableModel {\n+        public int getRowCount() {\n+            return 10;\n+        }\n+        public int getColumnCount() {\n+            return 10;\n+        }\n+        public Object getValueAt(int rowIndex, int columnIndex) {\n+            return \"\"+rowIndex + \" X \" + columnIndex;\n+        }\n+    }\n+\n+    static class DecoratedHeaderRenderer implements TableCellRenderer {\n+        public DecoratedHeaderRenderer(TableCellRenderer render) {\n+            this.render = render;\n+        }\n+\n+        private final TableCellRenderer render;\n+\n+        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {\n+            return render.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JTableHeader\/TableRendererTest.java","additions":131,"deletions":0,"binary":false,"changes":131,"status":"added"}]}