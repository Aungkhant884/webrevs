{"files":[{"patch":"@@ -25,0 +25,4 @@\n+import java.util.function.DoubleUnaryOperator;\n+import java.util.function.IntUnaryOperator;\n+import java.util.function.LongUnaryOperator;\n+import java.util.function.UnaryOperator;\n@@ -192,1 +196,1 @@\n-            forEach(f -> {errors.addAndGet(testFloatAbs(Math::abs, f));});\n+            forEach(f -> {errors.addAndGet(testFloatAbs(f));});\n@@ -197,1 +201,10 @@\n-    private static int testFloatAbs(UnaryOperator<Float> absFunc, float f) {\n+    private static int testFloatAbs(float f) {\n+        int errors  = testFloatAbs(\"Math.abs\", Math::abs, f);\n+        errors     += testFloatAbs(\"Math.abs\", Math::abs, -f);\n+        errors     += testFloatAbs(\"StrictMath.abs\", StrictMath::abs, f);\n+        errors     += testFloatAbs(\"StrictMath.abs\", StrictMath::abs, -f);\n+        return errors;\n+    }\n+\n+    private static int testFloatAbs(String testName,\n+                                    UnaryOperator<Float> absFunc, float f) {\n@@ -199,8 +212,1 @@\n-        if (Float.isNaN(f)) {\n-            return Float.floatToRawIntBits(result) !=\n-                Float.floatToRawIntBits(f) ? 1 : 0;\n-        } else if ((f >= 0 && result != f) || (f < 0 && result != -f)) {\n-            System.err.printf(\"Unexpected float abs result %f for argument %f%n\",\n-                              result, f);\n-            return 1;\n-        } else {\n+        if (Float.isNaN(f) && Float.isNaN(result)) {\n@@ -209,0 +215,3 @@\n+\n+        float expected = f == -0.0F ? 0.0F : (f < 0.0F ? -f : f);\n+        return Tests.test(testName, f, result, expected);\n@@ -217,1 +226,1 @@\n-        doubles.forEach(d -> {errors.addAndGet(testDoubleAbs(Math::abs, d));});\n+        doubles.forEach(d -> {errors.addAndGet(testDoubleAbs(d));});\n@@ -222,1 +231,10 @@\n-    private static int testDoubleAbs(DoubleUnaryOperator absFunc, double d) {\n+    private static int testDoubleAbs(double d) {\n+        int errors  = testDoubleAbs(\"Math.abs\", Math::abs, d);\n+        errors     += testDoubleAbs(\"Math.abs\", Math::abs, -d);\n+        errors     += testDoubleAbs(\"StrictMath.abs\", StrictMath::abs, d);\n+        errors     += testDoubleAbs(\"StrictMath.abs\", StrictMath::abs, -d);\n+        return errors;\n+    }\n+\n+    private static int testDoubleAbs(String testName,\n+                                     DoubleUnaryOperator absFunc, double d) {\n@@ -224,8 +242,1 @@\n-        if (Double.isNaN(d)) {\n-            return Double.doubleToRawLongBits(result) !=\n-                Double.doubleToRawLongBits(d) ? 1 : 0;\n-        } else if ((d >= 0 && result != d) || (d < 0 && result != -d)) {\n-            System.err.printf(\"Unexpected double abs result %f for argument %f%n\",\n-                              result, d);\n-            return 1;\n-        } else {\n+        if (Double.isNaN(d) && Double.isNaN(result)) {\n@@ -234,0 +245,3 @@\n+\n+        double expected = d == -0.0F ? 0.0F : (d < 0.0F ? -d : d);\n+        return Tests.test(testName, d, result, expected);\n","filename":"test\/jdk\/java\/lang\/Math\/AbsTests.java","additions":34,"deletions":20,"binary":false,"changes":54,"status":"modified"}]}