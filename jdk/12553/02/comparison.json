{"files":[{"patch":"@@ -1638,1 +1638,1 @@\n-                                           bool is_double, bool is_min) {\n+                                           bool is_double, bool is_min, int length_in_bytes) {\n@@ -1642,1 +1642,1 @@\n-  vsetvli(t0, x0, is_double ? Assembler::e64 : Assembler::e32);\n+  rvv_vsetvli(is_double ? T_DOUBLE : T_FLOAT, length_in_bytes);\n@@ -1675,1 +1675,1 @@\n-                                            BasicType bt, int opc) {\n+                                            BasicType bt, int opc, int length_in_bytes) {\n@@ -1678,2 +1678,1 @@\n-  Assembler::SEW sew = Assembler::elemtype_to_sew(bt);\n-  vsetvli(t0, x0, sew);\n+  rvv_vsetvli(bt, length_in_bytes);\n@@ -1709,0 +1708,10 @@\n+\n+void C2_MacroAssembler::rvv_vsetvli(BasicType bt, int length_in_bytes) {\n+  Assembler::SEW sew = Assembler::elemtype_to_sew(bt);\n+  if (length_in_bytes != MaxVectorSize) {\n+    mv(t0, length_in_bytes \/ type2aelembytes(bt));\n+    vsetvli(t0, t0, sew);\n+  } else {\n+    vsetvli(t0, x0, sew);\n+  }\n+}\n","filename":"src\/hotspot\/cpu\/riscv\/c2_MacroAssembler_riscv.cpp","additions":14,"deletions":5,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -193,1 +193,1 @@\n-                         bool is_double, bool is_min);\n+                         bool is_double, bool is_min, int length_in_bytes);\n@@ -197,1 +197,3 @@\n-                          BasicType bt, int opc);\n+                          BasicType bt, int opc, int length_in_bytes);\n+\n+ void rvv_vsetvli(BasicType bt, int length_in_bytes);\n","filename":"src\/hotspot\/cpu\/riscv\/c2_MacroAssembler_riscv.hpp","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1925,1 +1925,6 @@\n-    return MaxVectorSize;\n+    int size = MaxVectorSize;\n+    \/\/ Minimum 2 values in vector\n+    if (size < 2 * type2aelembytes(bt)) size = 0;\n+    \/\/ But never < 4\n+    if (size < 4) size = 0;\n+    return size;\n@@ -1934,0 +1939,1 @@\n+\n@@ -1935,1 +1941,9 @@\n-  return max_vector_size(bt);\n+  int max_size = max_vector_size(bt);\n+  \/\/ Limit the min vector size to 8 bytes.\n+  int size = 8 \/ type2aelembytes(bt);\n+  if (bt == T_BOOLEAN) {\n+    \/\/ To support vector api load\/store mask.\n+    size = 2;\n+  }\n+  if (size < 2) size = 2;\n+  return MIN2(size, max_size);\n","filename":"src\/hotspot\/cpu\/riscv\/riscv.ad","additions":16,"deletions":2,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n-                        VectorRegister reg, BasicType bt, Register base) {\n+                        VectorRegister reg, BasicType bt, Register base, int length_in_bytes) {\n@@ -40,1 +40,2 @@\n-    masm.vsetvli(t0, x0, sew);\n+    masm.rvv_vsetvli(bt, length_in_bytes);\n+\n@@ -104,1 +105,1 @@\n-  format %{ \"vle $dst, $mem\\t#@loadV\" %}\n+  format %{ \"loadV $dst, $mem\\t# vector (rvv)\" %}\n@@ -108,1 +109,1 @@\n-              Matcher::vector_element_basic_type(this), as_Register($mem$$base));\n+              Matcher::vector_element_basic_type(this), as_Register($mem$$base), Matcher::vector_length_in_bytes(this));\n@@ -116,1 +117,1 @@\n-  format %{ \"vse $src, $mem\\t#@storeV\" %}\n+  format %{ \"storeV $mem, $src\\t# vector (rvv)\" %}\n@@ -120,1 +121,1 @@\n-              Matcher::vector_element_basic_type(this, $src), as_Register($mem$$base));\n+              Matcher::vector_element_basic_type(this, $src), as_Register($mem$$base), Matcher::vector_length_in_bytes(this, $src));\n@@ -825,1 +826,2 @@\n-                           $src1$$Register, as_VectorRegister($src2$$reg), bt, this->ideal_Opcode());\n+                           $src1$$Register, as_VectorRegister($src2$$reg), bt,\n+                           this->ideal_Opcode(), Matcher::vector_length_in_bytes(this, $src2));\n@@ -841,1 +843,2 @@\n-                           $src1$$Register, as_VectorRegister($src2$$reg), bt, this->ideal_Opcode());\n+                           $src1$$Register, as_VectorRegister($src2$$reg), bt,\n+                           this->ideal_Opcode(), Matcher::vector_length_in_bytes(this, $src2));\n@@ -861,1 +864,2 @@\n-                           $src1$$Register, as_VectorRegister($src2$$reg), bt, this->ideal_Opcode());\n+                           $src1$$Register, as_VectorRegister($src2$$reg), bt,\n+                           this->ideal_Opcode(), Matcher::vector_length_in_bytes(this, $src2));\n@@ -877,1 +881,2 @@\n-                           $src1$$Register, as_VectorRegister($src2$$reg), bt, this->ideal_Opcode());\n+                           $src1$$Register, as_VectorRegister($src2$$reg), bt,\n+                           this->ideal_Opcode(), Matcher::vector_length_in_bytes(this, $src2));\n@@ -897,1 +902,2 @@\n-                           $src1$$Register, as_VectorRegister($src2$$reg), bt, this->ideal_Opcode());\n+                           $src1$$Register, as_VectorRegister($src2$$reg), bt,\n+                           this->ideal_Opcode(), Matcher::vector_length_in_bytes(this, $src2));\n@@ -913,1 +919,2 @@\n-                           $src1$$Register, as_VectorRegister($src2$$reg), bt, this->ideal_Opcode());\n+                           $src1$$Register, as_VectorRegister($src2$$reg), bt,\n+                           this->ideal_Opcode(), Matcher::vector_length_in_bytes(this, $src2));\n@@ -933,1 +940,2 @@\n-                           $src1$$Register, as_VectorRegister($src2$$reg), bt, this->ideal_Opcode());\n+                           $src1$$Register, as_VectorRegister($src2$$reg), bt,\n+                           this->ideal_Opcode(), Matcher::vector_length_in_bytes(this, $src2));\n@@ -949,1 +957,2 @@\n-                           $src1$$Register, as_VectorRegister($src2$$reg), bt, this->ideal_Opcode());\n+                           $src1$$Register, as_VectorRegister($src2$$reg), bt,\n+                           this->ideal_Opcode(), Matcher::vector_length_in_bytes(this, $src2));\n@@ -962,1 +971,1 @@\n-    __ vsetvli(t0, x0, Assembler::e32);\n+    __ rvv_vsetvli(T_FLOAT, Matcher::vector_length_in_bytes(this, $src2));\n@@ -979,1 +988,1 @@\n-    __ vsetvli(t0, x0, Assembler::e64);\n+    __ rvv_vsetvli(T_DOUBLE, Matcher::vector_length_in_bytes(this, $src2));\n@@ -1001,1 +1010,2 @@\n-                           $src1$$Register, as_VectorRegister($src2$$reg), bt, this->ideal_Opcode());\n+                           $src1$$Register, as_VectorRegister($src2$$reg), bt,\n+                           this->ideal_Opcode(), Matcher::vector_length_in_bytes(this, $src2));\n@@ -1015,1 +1025,2 @@\n-                           $src1$$Register, as_VectorRegister($src2$$reg), bt, this->ideal_Opcode());\n+                           $src1$$Register, as_VectorRegister($src2$$reg), bt,\n+                           this->ideal_Opcode(), Matcher::vector_length_in_bytes(this, $src2));\n@@ -1033,1 +1044,2 @@\n-                           $src1$$Register, as_VectorRegister($src2$$reg), bt, this->ideal_Opcode());\n+                           $src1$$Register, as_VectorRegister($src2$$reg), bt,\n+                           this->ideal_Opcode(), Matcher::vector_length_in_bytes(this, $src2));\n@@ -1047,1 +1059,2 @@\n-                           $src1$$Register, as_VectorRegister($src2$$reg), bt, this->ideal_Opcode());\n+                           $src1$$Register, as_VectorRegister($src2$$reg), bt,\n+                           this->ideal_Opcode(), Matcher::vector_length_in_bytes(this, $src2));\n@@ -1064,1 +1077,1 @@\n-                          false \/* is_double *\/, false \/* is_min *\/);\n+                          false \/* is_double *\/, false \/* is_min *\/, Matcher::vector_length_in_bytes(this, $src2));\n@@ -1079,1 +1092,1 @@\n-                          true \/* is_double *\/, false \/* is_min *\/);\n+                          true \/* is_double *\/, false \/* is_min *\/, Matcher::vector_length_in_bytes(this, $src2));\n@@ -1096,1 +1109,1 @@\n-                          false \/* is_double *\/, true \/* is_min *\/);\n+                          false \/* is_double *\/, true \/* is_min *\/, Matcher::vector_length_in_bytes(this, $src2));\n@@ -1111,1 +1124,1 @@\n-                          true \/* is_double *\/, true \/* is_min *\/);\n+                          true \/* is_double *\/, true \/* is_min *\/, Matcher::vector_length_in_bytes(this, $src2));\n","filename":"src\/hotspot\/cpu\/riscv\/riscv_v.ad","additions":37,"deletions":24,"binary":false,"changes":61,"status":"modified"}]}