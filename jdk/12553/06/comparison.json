{"files":[{"patch":"@@ -1620,1 +1620,1 @@\n-                                    bool is_double, bool is_min) {\n+                                    bool is_double, bool is_min, int length_in_bytes) {\n@@ -1623,1 +1623,1 @@\n-  vsetvli(t0, x0, is_double ? Assembler::e64 : Assembler::e32);\n+  rvv_vsetvli(is_double ? T_DOUBLE : T_FLOAT, length_in_bytes);\n@@ -1638,1 +1638,1 @@\n-                                           bool is_double, bool is_min) {\n+                                           bool is_double, bool is_min, int length_in_bytes) {\n@@ -1642,1 +1642,1 @@\n-  vsetvli(t0, x0, is_double ? Assembler::e64 : Assembler::e32);\n+  rvv_vsetvli(is_double ? T_DOUBLE : T_FLOAT, length_in_bytes);\n@@ -1675,1 +1675,1 @@\n-                                            BasicType bt, int opc) {\n+                                            BasicType bt, int opc, int length_in_bytes) {\n@@ -1678,2 +1678,1 @@\n-  Assembler::SEW sew = Assembler::elemtype_to_sew(bt);\n-  vsetvli(t0, x0, sew);\n+  rvv_vsetvli(bt, length_in_bytes);\n@@ -1709,0 +1708,15 @@\n+\n+void C2_MacroAssembler::rvv_vsetvli(BasicType bt, int length_in_bytes, Register tmp) {\n+  Assembler::SEW sew = Assembler::elemtype_to_sew(bt);\n+  if (length_in_bytes == MaxVectorSize) {\n+    vsetvli(tmp, x0, sew);\n+  } else {\n+    int num_elements = length_in_bytes \/ type2aelembytes(bt);\n+    if (num_elements <= 31) {\n+      vsetivli(tmp, num_elements, sew);\n+    } else {\n+      mv(tmp, num_elements);\n+      vsetvli(tmp, tmp, sew);\n+    }\n+  }\n+}\n","filename":"src\/hotspot\/cpu\/riscv\/c2_MacroAssembler_riscv.cpp","additions":21,"deletions":7,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -188,1 +188,1 @@\n-                  bool is_double, bool is_min);\n+                  bool is_double, bool is_min, int length_in_bytes);\n@@ -193,1 +193,1 @@\n-                         bool is_double, bool is_min);\n+                         bool is_double, bool is_min, int length_in_bytes);\n@@ -197,1 +197,3 @@\n-                          BasicType bt, int opc);\n+                          BasicType bt, int opc, int length_in_bytes);\n+\n+ void rvv_vsetvli(BasicType bt, int length_in_bytes, Register tmp = t0);\n","filename":"src\/hotspot\/cpu\/riscv\/c2_MacroAssembler_riscv.hpp","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1925,1 +1925,6 @@\n-    return MaxVectorSize;\n+    int size = MaxVectorSize;\n+    \/\/ Minimum 2 values in vector\n+    if (size < 2 * type2aelembytes(bt)) size = 0;\n+    \/\/ But never < 4\n+    if (size < 4) size = 0;\n+    return size;\n@@ -1934,0 +1939,1 @@\n+\n@@ -1935,1 +1941,9 @@\n-  return max_vector_size(bt);\n+  int max_size = max_vector_size(bt);\n+  \/\/ Limit the min vector size to 8 bytes.\n+  int size = 8 \/ type2aelembytes(bt);\n+  if (bt == T_BOOLEAN) {\n+    \/\/ To support vector api load\/store mask.\n+    size = 2;\n+  }\n+  if (size < 2) size = 2;\n+  return MIN2(size, max_size);\n","filename":"src\/hotspot\/cpu\/riscv\/riscv.ad","additions":16,"deletions":2,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n-                        VectorRegister reg, BasicType bt, Register base) {\n+                        VectorRegister reg, BasicType bt, Register base, int length_in_bytes) {\n@@ -40,1 +40,2 @@\n-    masm.vsetvli(t0, x0, sew);\n+    masm.rvv_vsetvli(bt, length_in_bytes);\n+\n@@ -104,1 +105,1 @@\n-  format %{ \"vle $dst, $mem\\t#@loadV\" %}\n+  format %{ \"loadV $dst, $mem\\t# vector (rvv)\" %}\n@@ -108,1 +109,1 @@\n-              Matcher::vector_element_basic_type(this), as_Register($mem$$base));\n+              Matcher::vector_element_basic_type(this), as_Register($mem$$base), Matcher::vector_length_in_bytes(this));\n@@ -116,1 +117,1 @@\n-  format %{ \"vse $src, $mem\\t#@storeV\" %}\n+  format %{ \"storeV $mem, $src\\t# vector (rvv)\" %}\n@@ -120,1 +121,1 @@\n-              Matcher::vector_element_basic_type(this, $src), as_Register($mem$$base));\n+              Matcher::vector_element_basic_type(this, $src), as_Register($mem$$base), Matcher::vector_length_in_bytes(this, $src));\n@@ -134,1 +135,1 @@\n-    __ vsetvli(t0, x0, Assembler::e8);\n+    __ rvv_vsetvli(T_BYTE, Matcher::vector_length_in_bytes(this));\n@@ -148,1 +149,1 @@\n-    __ vsetvli(t0, x0, Assembler::e16);\n+    __ rvv_vsetvli(T_SHORT, Matcher::vector_length_in_bytes(this));\n@@ -162,1 +163,1 @@\n-    __ vsetvli(t0, x0, Assembler::e32);\n+    __ rvv_vsetvli(T_INT, Matcher::vector_length_in_bytes(this));\n@@ -176,1 +177,1 @@\n-    __ vsetvli(t0, x0, Assembler::e64);\n+    __ rvv_vsetvli(T_LONG, Matcher::vector_length_in_bytes(this));\n@@ -188,1 +189,1 @@\n-    __ vsetvli(t0, x0, Assembler::e32);\n+    __ rvv_vsetvli(T_FLOAT, Matcher::vector_length_in_bytes(this));\n@@ -199,1 +200,1 @@\n-    __ vsetvli(t0, x0, Assembler::e64);\n+    __ rvv_vsetvli(T_DOUBLE, Matcher::vector_length_in_bytes(this));\n@@ -212,1 +213,1 @@\n-    __ vsetvli(t0, x0, Assembler::e8);\n+    __ rvv_vsetvli(T_BYTE, Matcher::vector_length_in_bytes(this));\n@@ -225,1 +226,1 @@\n-    __ vsetvli(t0, x0, Assembler::e16);\n+    __ rvv_vsetvli(T_SHORT, Matcher::vector_length_in_bytes(this));\n@@ -238,1 +239,1 @@\n-    __ vsetvli(t0, x0, Assembler::e32);\n+    __ rvv_vsetvli(T_INT, Matcher::vector_length_in_bytes(this));\n@@ -251,1 +252,1 @@\n-    __ vsetvli(t0, x0, Assembler::e64);\n+    __ rvv_vsetvli(T_LONG, Matcher::vector_length_in_bytes(this));\n@@ -264,1 +265,1 @@\n-    __ vsetvli(t0, x0, Assembler::e32);\n+    __ rvv_vsetvli(T_FLOAT, Matcher::vector_length_in_bytes(this));\n@@ -277,1 +278,1 @@\n-    __ vsetvli(t0, x0, Assembler::e64);\n+    __ rvv_vsetvli(T_DOUBLE, Matcher::vector_length_in_bytes(this));\n@@ -292,1 +293,1 @@\n-    __ vsetvli(t0, x0, Assembler::e64);\n+    __ rvv_vsetvli(T_LONG, Matcher::vector_length_in_bytes(this));\n@@ -307,1 +308,1 @@\n-    __ vsetvli(t0, x0, Assembler::e64);\n+    __ rvv_vsetvli(T_LONG, Matcher::vector_length_in_bytes(this));\n@@ -322,1 +323,1 @@\n-    __ vsetvli(t0, x0, Assembler::e64);\n+    __ rvv_vsetvli(T_LONG, Matcher::vector_length_in_bytes(this));\n@@ -337,1 +338,1 @@\n-    __ vsetvli(t0, x0, Assembler::e32);\n+    __ rvv_vsetvli(T_FLOAT, Matcher::vector_length_in_bytes(this));\n@@ -350,1 +351,1 @@\n-    __ vsetvli(t0, x0, Assembler::e64);\n+    __ rvv_vsetvli(T_DOUBLE, Matcher::vector_length_in_bytes(this));\n@@ -368,2 +369,1 @@\n-    Assembler::SEW sew = Assembler::elemtype_to_sew(bt);\n-    __ vsetvli(t0, x0, sew);\n+    __ rvv_vsetvli(bt, Matcher::vector_length_in_bytes(this));\n@@ -384,2 +384,1 @@\n-    Assembler::SEW sew = Assembler::elemtype_to_sew(bt);\n-    __ vsetvli(t0, x0, sew);\n+    __ rvv_vsetvli(bt, Matcher::vector_length_in_bytes(this));\n@@ -403,1 +402,1 @@\n-                   false \/* is_double *\/, false \/* is_min *\/);\n+                   false \/* is_double *\/, false \/* is_min *\/, Matcher::vector_length_in_bytes(this));\n@@ -417,1 +416,1 @@\n-                   true \/* is_double *\/, false \/* is_min *\/);\n+                   true \/* is_double *\/, false \/* is_min *\/, Matcher::vector_length_in_bytes(this));\n@@ -431,1 +430,1 @@\n-                   false \/* is_double *\/, true \/* is_min *\/);\n+                   false \/* is_double *\/, true \/* is_min *\/, Matcher::vector_length_in_bytes(this));\n@@ -445,1 +444,1 @@\n-                   true \/* is_double *\/, true \/* is_min *\/);\n+                   true \/* is_double *\/, true \/* is_min *\/, Matcher::vector_length_in_bytes(this));\n@@ -459,1 +458,1 @@\n-    __ vsetvli(t0, x0, Assembler::e32);\n+    __ rvv_vsetvli(T_FLOAT, Matcher::vector_length_in_bytes(this));\n@@ -473,1 +472,1 @@\n-    __ vsetvli(t0, x0, Assembler::e64);\n+    __ rvv_vsetvli(T_DOUBLE, Matcher::vector_length_in_bytes(this));\n@@ -491,1 +490,1 @@\n-    __ vsetvli(t0, x0, Assembler::e32);\n+    __ rvv_vsetvli(T_FLOAT, Matcher::vector_length_in_bytes(this));\n@@ -507,1 +506,1 @@\n-    __ vsetvli(t0, x0, Assembler::e64);\n+    __ rvv_vsetvli(T_DOUBLE, Matcher::vector_length_in_bytes(this));\n@@ -525,1 +524,1 @@\n-    __ vsetvli(t0, x0, Assembler::e32);\n+    __ rvv_vsetvli(T_FLOAT, Matcher::vector_length_in_bytes(this));\n@@ -541,1 +540,1 @@\n-    __ vsetvli(t0, x0, Assembler::e64);\n+    __ rvv_vsetvli(T_DOUBLE, Matcher::vector_length_in_bytes(this));\n@@ -557,1 +556,1 @@\n-    __ vsetvli(t0, x0, Assembler::e32);\n+    __ rvv_vsetvli(T_FLOAT, Matcher::vector_length_in_bytes(this));\n@@ -571,1 +570,1 @@\n-    __ vsetvli(t0, x0, Assembler::e64);\n+    __ rvv_vsetvli(T_DOUBLE, Matcher::vector_length_in_bytes(this));\n@@ -586,1 +585,1 @@\n-    __ vsetvli(t0, x0, Assembler::e8);\n+    __ rvv_vsetvli(T_BYTE, Matcher::vector_length_in_bytes(this));\n@@ -599,1 +598,1 @@\n-    __ vsetvli(t0, x0, Assembler::e16);\n+    __ rvv_vsetvli(T_SHORT, Matcher::vector_length_in_bytes(this));\n@@ -612,1 +611,1 @@\n-    __ vsetvli(t0, x0, Assembler::e32);\n+    __ rvv_vsetvli(T_INT, Matcher::vector_length_in_bytes(this));\n@@ -625,1 +624,1 @@\n-    __ vsetvli(t0, x0, Assembler::e64);\n+    __ rvv_vsetvli(T_LONG, Matcher::vector_length_in_bytes(this));\n@@ -640,1 +639,1 @@\n-    __ vsetvli(t0, x0, Assembler::e8);\n+    __ rvv_vsetvli(T_BYTE, Matcher::vector_length_in_bytes(this));\n@@ -653,1 +652,1 @@\n-    __ vsetvli(t0, x0, Assembler::e16);\n+    __ rvv_vsetvli(T_SHORT, Matcher::vector_length_in_bytes(this));\n@@ -666,1 +665,1 @@\n-    __ vsetvli(t0, x0, Assembler::e32);\n+    __ rvv_vsetvli(T_INT, Matcher::vector_length_in_bytes(this));\n@@ -679,1 +678,1 @@\n-    __ vsetvli(t0, x0, Assembler::e64);\n+    __ rvv_vsetvli(T_LONG, Matcher::vector_length_in_bytes(this));\n@@ -693,1 +692,1 @@\n-    __ vsetvli(t0, x0, Assembler::e8);\n+    __ rvv_vsetvli(T_BYTE, Matcher::vector_length_in_bytes(this));\n@@ -705,1 +704,1 @@\n-    __ vsetvli(t0, x0, Assembler::e16);\n+    __ rvv_vsetvli(T_SHORT, Matcher::vector_length_in_bytes(this));\n@@ -717,1 +716,1 @@\n-    __ vsetvli(t0, x0, Assembler::e32);\n+    __ rvv_vsetvli(T_INT, Matcher::vector_length_in_bytes(this));\n@@ -729,1 +728,1 @@\n-    __ vsetvli(t0, x0, Assembler::e64);\n+    __ rvv_vsetvli(T_LONG, Matcher::vector_length_in_bytes(this));\n@@ -741,1 +740,1 @@\n-    __ vsetvli(t0, x0, Assembler::e32);\n+    __ rvv_vsetvli(T_FLOAT, Matcher::vector_length_in_bytes(this));\n@@ -753,1 +752,1 @@\n-    __ vsetvli(t0, x0, Assembler::e64);\n+    __ rvv_vsetvli(T_DOUBLE, Matcher::vector_length_in_bytes(this));\n@@ -768,2 +767,1 @@\n-    Assembler::SEW sew = Assembler::elemtype_to_sew(bt);\n-    __ vsetvli(t0, x0, sew);\n+    __ rvv_vsetvli(bt, Matcher::vector_length_in_bytes(this));\n@@ -780,1 +778,1 @@\n-    __ vsetvli(t0, x0, Assembler::e64);\n+    __ rvv_vsetvli(T_LONG, Matcher::vector_length_in_bytes(this));\n@@ -793,1 +791,1 @@\n-    __ vsetvli(t0, x0, Assembler::e32);\n+    __ rvv_vsetvli(T_FLOAT, Matcher::vector_length_in_bytes(this));\n@@ -804,1 +802,1 @@\n-    __ vsetvli(t0, x0, Assembler::e64);\n+    __ rvv_vsetvli(T_DOUBLE, Matcher::vector_length_in_bytes(this));\n@@ -825,1 +823,2 @@\n-                           $src1$$Register, as_VectorRegister($src2$$reg), bt, this->ideal_Opcode());\n+                           $src1$$Register, as_VectorRegister($src2$$reg), bt,\n+                           this->ideal_Opcode(), Matcher::vector_length_in_bytes(this, $src2));\n@@ -841,1 +840,2 @@\n-                           $src1$$Register, as_VectorRegister($src2$$reg), bt, this->ideal_Opcode());\n+                           $src1$$Register, as_VectorRegister($src2$$reg), bt,\n+                           this->ideal_Opcode(), Matcher::vector_length_in_bytes(this, $src2));\n@@ -861,1 +861,2 @@\n-                           $src1$$Register, as_VectorRegister($src2$$reg), bt, this->ideal_Opcode());\n+                           $src1$$Register, as_VectorRegister($src2$$reg), bt,\n+                           this->ideal_Opcode(), Matcher::vector_length_in_bytes(this, $src2));\n@@ -877,1 +878,2 @@\n-                           $src1$$Register, as_VectorRegister($src2$$reg), bt, this->ideal_Opcode());\n+                           $src1$$Register, as_VectorRegister($src2$$reg), bt,\n+                           this->ideal_Opcode(), Matcher::vector_length_in_bytes(this, $src2));\n@@ -897,1 +899,2 @@\n-                           $src1$$Register, as_VectorRegister($src2$$reg), bt, this->ideal_Opcode());\n+                           $src1$$Register, as_VectorRegister($src2$$reg), bt,\n+                           this->ideal_Opcode(), Matcher::vector_length_in_bytes(this, $src2));\n@@ -913,1 +916,2 @@\n-                           $src1$$Register, as_VectorRegister($src2$$reg), bt, this->ideal_Opcode());\n+                           $src1$$Register, as_VectorRegister($src2$$reg), bt,\n+                           this->ideal_Opcode(), Matcher::vector_length_in_bytes(this, $src2));\n@@ -933,1 +937,2 @@\n-                           $src1$$Register, as_VectorRegister($src2$$reg), bt, this->ideal_Opcode());\n+                           $src1$$Register, as_VectorRegister($src2$$reg), bt,\n+                           this->ideal_Opcode(), Matcher::vector_length_in_bytes(this, $src2));\n@@ -949,1 +954,2 @@\n-                           $src1$$Register, as_VectorRegister($src2$$reg), bt, this->ideal_Opcode());\n+                           $src1$$Register, as_VectorRegister($src2$$reg), bt,\n+                           this->ideal_Opcode(), Matcher::vector_length_in_bytes(this, $src2));\n@@ -962,1 +968,1 @@\n-    __ vsetvli(t0, x0, Assembler::e32);\n+    __ rvv_vsetvli(T_FLOAT, Matcher::vector_length_in_bytes(this, $src2));\n@@ -979,1 +985,1 @@\n-    __ vsetvli(t0, x0, Assembler::e64);\n+    __ rvv_vsetvli(T_DOUBLE, Matcher::vector_length_in_bytes(this, $src2));\n@@ -1001,1 +1007,2 @@\n-                           $src1$$Register, as_VectorRegister($src2$$reg), bt, this->ideal_Opcode());\n+                           $src1$$Register, as_VectorRegister($src2$$reg), bt,\n+                           this->ideal_Opcode(), Matcher::vector_length_in_bytes(this, $src2));\n@@ -1015,1 +1022,2 @@\n-                           $src1$$Register, as_VectorRegister($src2$$reg), bt, this->ideal_Opcode());\n+                           $src1$$Register, as_VectorRegister($src2$$reg), bt,\n+                           this->ideal_Opcode(), Matcher::vector_length_in_bytes(this, $src2));\n@@ -1033,1 +1041,2 @@\n-                           $src1$$Register, as_VectorRegister($src2$$reg), bt, this->ideal_Opcode());\n+                           $src1$$Register, as_VectorRegister($src2$$reg), bt,\n+                           this->ideal_Opcode(), Matcher::vector_length_in_bytes(this, $src2));\n@@ -1047,1 +1056,2 @@\n-                           $src1$$Register, as_VectorRegister($src2$$reg), bt, this->ideal_Opcode());\n+                           $src1$$Register, as_VectorRegister($src2$$reg), bt,\n+                           this->ideal_Opcode(), Matcher::vector_length_in_bytes(this, $src2));\n@@ -1064,1 +1074,1 @@\n-                          false \/* is_double *\/, false \/* is_min *\/);\n+                          false \/* is_double *\/, false \/* is_min *\/, Matcher::vector_length_in_bytes(this, $src2));\n@@ -1079,1 +1089,1 @@\n-                          true \/* is_double *\/, false \/* is_min *\/);\n+                          true \/* is_double *\/, false \/* is_min *\/, Matcher::vector_length_in_bytes(this, $src2));\n@@ -1096,1 +1106,1 @@\n-                          false \/* is_double *\/, true \/* is_min *\/);\n+                          false \/* is_double *\/, true \/* is_min *\/, Matcher::vector_length_in_bytes(this, $src2));\n@@ -1111,1 +1121,1 @@\n-                          true \/* is_double *\/, true \/* is_min *\/);\n+                          true \/* is_double *\/, true \/* is_min *\/, Matcher::vector_length_in_bytes(this, $src2));\n@@ -1151,1 +1161,1 @@\n-    __ vsetvli(t0, x0, Assembler::e8);\n+    __ rvv_vsetvli(T_BYTE, Matcher::vector_length_in_bytes(this));\n@@ -1162,1 +1172,1 @@\n-    __ vsetvli(t0, x0, Assembler::e16);\n+    __ rvv_vsetvli(T_SHORT, Matcher::vector_length_in_bytes(this));\n@@ -1173,1 +1183,1 @@\n-    __ vsetvli(t0, x0, Assembler::e32);\n+    __ rvv_vsetvli(T_INT, Matcher::vector_length_in_bytes(this));\n@@ -1184,1 +1194,1 @@\n-    __ vsetvli(t0, x0, Assembler::e64);\n+    __ rvv_vsetvli(T_LONG, Matcher::vector_length_in_bytes(this));\n@@ -1195,1 +1205,1 @@\n-    __ vsetvli(t0, x0, Assembler::e8);\n+    __ rvv_vsetvli(T_BYTE, Matcher::vector_length_in_bytes(this));\n@@ -1206,1 +1216,1 @@\n-    __ vsetvli(t0, x0, Assembler::e16);\n+    __ rvv_vsetvli(T_SHORT, Matcher::vector_length_in_bytes(this));\n@@ -1217,1 +1227,1 @@\n-    __ vsetvli(t0, x0, Assembler::e32);\n+    __ rvv_vsetvli(T_INT, Matcher::vector_length_in_bytes(this));\n@@ -1228,1 +1238,1 @@\n-    __ vsetvli(t0, x0, Assembler::e64);\n+    __ rvv_vsetvli(T_LONG, Matcher::vector_length_in_bytes(this));\n@@ -1239,1 +1249,1 @@\n-    __ vsetvli(t0, x0, Assembler::e32);\n+    __ rvv_vsetvli(T_FLOAT, Matcher::vector_length_in_bytes(this));\n@@ -1250,1 +1260,1 @@\n-    __ vsetvli(t0, x0, Assembler::e64);\n+    __ rvv_vsetvli(T_DOUBLE, Matcher::vector_length_in_bytes(this));\n@@ -1267,1 +1277,1 @@\n-    __ vsetvli(t0, x0, Assembler::e8);\n+    __ rvv_vsetvli(T_BYTE, Matcher::vector_length_in_bytes(this));\n@@ -1289,1 +1299,1 @@\n-    __ vsetvli(t0, x0, Assembler::e16);\n+    __ rvv_vsetvli(T_SHORT, Matcher::vector_length_in_bytes(this));\n@@ -1307,1 +1317,1 @@\n-    __ vsetvli(t0, x0, Assembler::e32);\n+    __ rvv_vsetvli(T_INT, Matcher::vector_length_in_bytes(this));\n@@ -1319,1 +1329,1 @@\n-    __ vsetvli(t0, x0, Assembler::e64);\n+    __ rvv_vsetvli(T_LONG, Matcher::vector_length_in_bytes(this));\n@@ -1335,1 +1345,1 @@\n-    __ vsetvli(t0, x0, Assembler::e8);\n+    __ rvv_vsetvli(T_BYTE, Matcher::vector_length_in_bytes(this));\n@@ -1357,1 +1367,1 @@\n-    __ vsetvli(t0, x0, Assembler::e16);\n+    __ rvv_vsetvli(T_SHORT, Matcher::vector_length_in_bytes(this));\n@@ -1375,1 +1385,1 @@\n-    __ vsetvli(t0, x0, Assembler::e32);\n+    __ rvv_vsetvli(T_INT, Matcher::vector_length_in_bytes(this));\n@@ -1387,1 +1397,1 @@\n-    __ vsetvli(t0, x0, Assembler::e64);\n+    __ rvv_vsetvli(T_LONG, Matcher::vector_length_in_bytes(this));\n@@ -1403,1 +1413,1 @@\n-    __ vsetvli(t0, x0, Assembler::e8);\n+    __ rvv_vsetvli(T_BYTE, Matcher::vector_length_in_bytes(this));\n@@ -1425,1 +1435,1 @@\n-    __ vsetvli(t0, x0, Assembler::e16);\n+    __ rvv_vsetvli(T_SHORT, Matcher::vector_length_in_bytes(this));\n@@ -1444,1 +1454,1 @@\n-    __ vsetvli(t0, x0, Assembler::e32);\n+    __ rvv_vsetvli(T_INT, Matcher::vector_length_in_bytes(this));\n@@ -1457,1 +1467,1 @@\n-    __ vsetvli(t0, x0, Assembler::e64);\n+    __ rvv_vsetvli(T_LONG, Matcher::vector_length_in_bytes(this));\n@@ -1470,1 +1480,1 @@\n-    __ vsetvli(t0, x0, Assembler::e8);\n+    __ rvv_vsetvli(T_BYTE, Matcher::vector_length_in_bytes(this));\n@@ -1488,1 +1498,1 @@\n-    __ vsetvli(t0, x0, Assembler::e16);\n+    __ rvv_vsetvli(T_SHORT, Matcher::vector_length_in_bytes(this));\n@@ -1506,1 +1516,1 @@\n-    __ vsetvli(t0, x0, Assembler::e32);\n+    __ rvv_vsetvli(T_INT, Matcher::vector_length_in_bytes(this));\n@@ -1524,1 +1534,1 @@\n-    __ vsetvli(t0, x0, Assembler::e64);\n+    __ rvv_vsetvli(T_LONG, Matcher::vector_length_in_bytes(this));\n@@ -1541,1 +1551,1 @@\n-    __ vsetvli(t0, x0, Assembler::e8);\n+    __ rvv_vsetvli(T_BYTE, Matcher::vector_length_in_bytes(this));\n@@ -1563,1 +1573,1 @@\n-    __ vsetvli(t0, x0, Assembler::e16);\n+    __ rvv_vsetvli(T_SHORT, Matcher::vector_length_in_bytes(this));\n@@ -1585,1 +1595,1 @@\n-    __ vsetvli(t0, x0, Assembler::e32);\n+    __ rvv_vsetvli(T_INT, Matcher::vector_length_in_bytes(this));\n@@ -1603,1 +1613,1 @@\n-    __ vsetvli(t0, x0, Assembler::e64);\n+    __ rvv_vsetvli(T_LONG, Matcher::vector_length_in_bytes(this));\n@@ -1620,1 +1630,1 @@\n-    __ vsetvli(t0, x0, Assembler::e8);\n+    __ rvv_vsetvli(T_BYTE, Matcher::vector_length_in_bytes(this));\n@@ -1637,1 +1647,1 @@\n-    __ vsetvli(t0, x0, Assembler::e16);\n+    __ rvv_vsetvli(T_SHORT, Matcher::vector_length_in_bytes(this));\n@@ -1654,1 +1664,1 @@\n-    __ vsetvli(t0, x0, Assembler::e32);\n+    __ rvv_vsetvli(T_INT, Matcher::vector_length_in_bytes(this));\n@@ -1667,1 +1677,1 @@\n-    __ vsetvli(t0, x0, Assembler::e64);\n+    __ rvv_vsetvli(T_LONG, Matcher::vector_length_in_bytes(this));\n@@ -1679,1 +1689,1 @@\n-    __ vsetvli(t0, x0, Assembler::e8);\n+    __ rvv_vsetvli(T_BYTE, Matcher::vector_length_in_bytes(this));\n@@ -1692,1 +1702,1 @@\n-    __ vsetvli(t0, x0, Assembler::e16);\n+    __ rvv_vsetvli(T_SHORT, Matcher::vector_length_in_bytes(this));\n@@ -1704,1 +1714,1 @@\n-    __ vsetvli(t0, x0, Assembler::e32);\n+    __ rvv_vsetvli(T_INT, Matcher::vector_length_in_bytes(this));\n@@ -1716,1 +1726,1 @@\n-    __ vsetvli(t0, x0, Assembler::e64);\n+    __ rvv_vsetvli(T_LONG, Matcher::vector_length_in_bytes(this));\n@@ -1729,1 +1739,1 @@\n-    __ vsetvli(t0, x0, Assembler::e32);\n+    __ rvv_vsetvli(T_FLOAT, Matcher::vector_length_in_bytes(this));\n@@ -1740,1 +1750,1 @@\n-    __ vsetvli(t0, x0, Assembler::e64);\n+    __ rvv_vsetvli(T_DOUBLE, Matcher::vector_length_in_bytes(this));\n@@ -1753,1 +1763,1 @@\n-    __ vsetvli(t0, x0, Assembler::e8);\n+    __ rvv_vsetvli(T_BYTE, Matcher::vector_length_in_bytes(this));\n@@ -1765,1 +1775,1 @@\n-    __ vsetvli(t0, x0, Assembler::e16);\n+    __ rvv_vsetvli(T_SHORT, Matcher::vector_length_in_bytes(this));\n@@ -1777,1 +1787,1 @@\n-    __ vsetvli(t0, x0, Assembler::e32);\n+    __ rvv_vsetvli(T_INT, Matcher::vector_length_in_bytes(this));\n@@ -1789,1 +1799,1 @@\n-    __ vsetvli(t0, x0, Assembler::e64);\n+    __ rvv_vsetvli(T_LONG, Matcher::vector_length_in_bytes(this));\n@@ -1801,1 +1811,1 @@\n-    __ vsetvli(t0, x0, Assembler::e32);\n+    __ rvv_vsetvli(T_FLOAT, Matcher::vector_length_in_bytes(this));\n@@ -1813,1 +1823,1 @@\n-    __ vsetvli(t0, x0, Assembler::e64);\n+    __ rvv_vsetvli(T_DOUBLE, Matcher::vector_length_in_bytes(this));\n@@ -2087,2 +2097,1 @@\n-    Assembler::SEW sew = Assembler::elemtype_to_sew(bt);\n-    __ vsetvli(t0, x0, sew);\n+    __ rvv_vsetvli(bt, Matcher::vector_length_in_bytes(this));\n","filename":"src\/hotspot\/cpu\/riscv\/riscv_v.ad","additions":133,"deletions":124,"binary":false,"changes":257,"status":"modified"}]}