{"files":[{"patch":"@@ -2486,20 +2486,0 @@\n-            public int stringSize(int i) {\n-                return Integer.stringSize(i);\n-            }\n-\n-            public int stringSize(long i) {\n-                return Long.stringSize(i);\n-            }\n-\n-            public int getChars(int i, int index, byte[] buf) {\n-                return StringLatin1.getChars(i, index, buf);\n-            }\n-\n-            public int getChars(long i, int index, byte[] buf) {\n-                return StringLatin1.getChars(i, index, buf);\n-            }\n-\n-            public short digitPair(int i) {\n-                return StringLatin1.PACKED_DIGITS[i];\n-            }\n-\n","filename":"src\/java.base\/share\/classes\/java\/lang\/System.java","additions":0,"deletions":20,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -111,0 +111,1 @@\n+import jdk.internal.util.DecimalDigits;\n@@ -2172,1 +2173,1 @@\n-        return jla.stringSize(year) + (year > 9999 ? 1 : 0);\n+        return DecimalDigits.stringSize(year) + (year > 9999 ? 1 : 0);\n@@ -2189,1 +2190,1 @@\n-                    (jla.digitPair(y23) << 16) | jla.digitPair(y01));\n+                    (DecimalDigits.digitPair(y23) << 16) | DecimalDigits.digitPair(y01));\n@@ -2194,1 +2195,1 @@\n-            jla.getChars(year, off + yearSize, buf);\n+            DecimalDigits.getCharsLatin1(year, off + yearSize, buf);\n@@ -2202,1 +2203,1 @@\n-                jla.digitPair(month)); \/\/ mm\n+                DecimalDigits.digitPair(month)); \/\/ mm\n@@ -2207,1 +2208,1 @@\n-                jla.digitPair(day)); \/\/ dd\n+                DecimalDigits.digitPair(day)); \/\/ dd\n","filename":"src\/java.base\/share\/classes\/java\/time\/LocalDate.java","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -100,0 +100,1 @@\n+import jdk.internal.util.DecimalDigits;\n@@ -1685,1 +1686,1 @@\n-                jla.digitPair(hour)); \/\/ hh\n+                DecimalDigits.digitPair(hour)); \/\/ hh\n@@ -1690,1 +1691,1 @@\n-                jla.digitPair(minute)); \/\/ minute\n+                DecimalDigits.digitPair(minute)); \/\/ minute\n@@ -1695,1 +1696,1 @@\n-                jla.digitPair(second)); \/\/ second\n+                DecimalDigits.digitPair(second)); \/\/ second\n","filename":"src\/java.base\/share\/classes\/java\/time\/LocalTime.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -94,0 +94,1 @@\n+import jdk.internal.util.DecimalDigits;\n@@ -471,1 +472,1 @@\n-                jla.digitPair(absHours));\n+                DecimalDigits.digitPair(absHours));\n@@ -476,1 +477,1 @@\n-                jla.digitPair(absMinutes));\n+                DecimalDigits.digitPair(absMinutes));\n@@ -482,1 +483,1 @@\n-                    jla.digitPair(absSeconds));\n+                    DecimalDigits.digitPair(absSeconds));\n","filename":"src\/java.base\/share\/classes\/java\/time\/ZoneOffset.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -38,0 +38,1 @@\n+import jdk.internal.util.DecimalDigits;\n@@ -1041,1 +1042,1 @@\n-        int yearSize = year >= 1000 && year <= 9999 ? 4 : jla.stringSize(year);\n+        int yearSize = year >= 1000 && year <= 9999 ? 4 : DecimalDigits.stringSize(year);\n@@ -1060,1 +1061,1 @@\n-                jla.digitPair(date.getDayOfMonth())); \/\/ dd\n+                DecimalDigits.digitPair(date.getDayOfMonth())); \/\/ dd\n@@ -1065,1 +1066,1 @@\n-                jla.digitPair(date.getHours())); \/\/ HH\n+                DecimalDigits.digitPair(date.getHours())); \/\/ HH\n@@ -1070,1 +1071,1 @@\n-                jla.digitPair(date.getMinutes())); \/\/ mm\n+                DecimalDigits.digitPair(date.getMinutes())); \/\/ mm\n@@ -1075,1 +1076,1 @@\n-                jla.digitPair(date.getSeconds())); \/\/ ss\n+                DecimalDigits.digitPair(date.getSeconds())); \/\/ ss\n@@ -1081,1 +1082,1 @@\n-        jla.getChars(year, buf.length, buf);\n+        DecimalDigits.getCharsLatin1(year, buf.length, buf);\n@@ -1161,1 +1162,1 @@\n-        int yearSize = year >= 1000 && year <= 9999 ? 4 : jla.stringSize(year);\n+        int yearSize = year >= 1000 && year <= 9999 ? 4 : DecimalDigits.stringSize(year);\n@@ -1173,1 +1174,1 @@\n-                    jla.digitPair(dayOfMonth)); \/\/ dd\n+                    DecimalDigits.digitPair(dayOfMonth)); \/\/ dd\n@@ -1179,1 +1180,1 @@\n-        jla.getChars(year, off + yearSize + 4, buf);\n+        DecimalDigits.getCharsLatin1(year, off + yearSize + 4, buf);\n@@ -1185,1 +1186,1 @@\n-                jla.digitPair(date.getHours())); \/\/ HH\n+                DecimalDigits.digitPair(date.getHours())); \/\/ HH\n@@ -1190,1 +1191,1 @@\n-                jla.digitPair(date.getMinutes())); \/\/ mm\n+                DecimalDigits.digitPair(date.getMinutes())); \/\/ mm\n@@ -1195,1 +1196,1 @@\n-                jla.digitPair(date.getSeconds())); \/\/ mm\n+                DecimalDigits.digitPair(date.getSeconds())); \/\/ mm\n","filename":"src\/java.base\/share\/classes\/java\/util\/Date.java","additions":13,"deletions":12,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -336,50 +336,0 @@\n-    \/**\n-     * Returns the string representation size for a given int value.\n-     *\n-     * @param x int value\n-     * @return string size\n-     *\/\n-    int stringSize(int x);\n-\n-    \/**\n-     * Returns the string representation size for a given long value.\n-     *\n-     * @param x long value\n-     * @return string size\n-     *\/\n-    int stringSize(long i);\n-\n-    \/**\n-     * For values from 0 to 99 return a short encoding a pair of ASCII-encoded digit characters in little-endian,\n-     * e.g. 0 -> ('0' << 8 | '0'). Used for formatting\n-     *\/\n-    short digitPair(int i);\n-\n-    \/**\n-     * Places characters representing the integer i into the\n-     * character array buf. The characters are placed into\n-     * the buffer backwards starting with the least significant\n-     * digit at the specified index (exclusive), and working\n-     * backwards from there.\n-     *\n-     * @param i     value to convert\n-     * @param index next index, after the least significant digit\n-     * @param buf   target buffer, Latin1-encoded\n-     * @return index of the most significant digit or minus sign, if present\n-     *\/\n-    int getChars(int i, int index, byte[] buf);\n-\n-    \/**\n-     * Places characters representing the long i into the\n-     * character array buf. The characters are placed into\n-     * the buffer backwards starting with the least significant\n-     * digit at the specified index (exclusive), and working\n-     * backwards from there.\n-     *\n-     * @param i     value to convert\n-     * @param index next index, after the least significant digit\n-     * @param buf   target buffer, Latin1-encoded\n-     * @return index of the most significant digit or minus sign, if present\n-     *\/\n-    int getChars(long i, int index, byte[] buf);\n-\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/access\/JavaLangAccess.java","additions":0,"deletions":50,"binary":false,"changes":50,"status":"modified"}]}