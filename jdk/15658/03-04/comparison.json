{"files":[{"patch":"@@ -1163,1 +1163,1 @@\n-\/\/ Mirror of DecimalDigits.stringSize() method, return the count of digits in integer,\n+\/\/ Mirror of Integer.stringSize() method, return the count of digits in integer,\n","filename":"src\/hotspot\/share\/opto\/stringopts.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-import jdk.internal.util.DecimalDigits;\n","filename":"src\/java.base\/share\/classes\/java\/lang\/AbstractStringBuilder.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-import jdk.internal.util.DecimalDigits;\n@@ -442,0 +441,18 @@\n+    \/**\n+     * Returns a string representation of the argument as an unsigned\n+     * decimal value.\n+     *\n+     * The argument is converted to unsigned decimal representation\n+     * and returned as a string exactly as if the argument and radix\n+     * 10 were given as arguments to the {@link #toUnsignedString(int,\n+     * int)} method.\n+     *\n+     * @param   i  an integer to be converted to an unsigned string.\n+     * @return  an unsigned string representation of the argument.\n+     * @see     #toUnsignedString(int, int)\n+     * @since 1.8\n+     *\/\n+    public static String toUnsignedString(int i) {\n+        return Long.toString(toUnsignedLong(i));\n+    }\n+\n@@ -468,18 +485,0 @@\n-    \/**\n-     * Returns a string representation of the argument as an unsigned\n-     * decimal value.\n-     *\n-     * The argument is converted to unsigned decimal representation\n-     * and returned as a string exactly as if the argument and radix\n-     * 10 were given as arguments to the {@link #toUnsignedString(int,\n-     * int)} method.\n-     *\n-     * @param   i  an integer to be converted to an unsigned string.\n-     * @return  an unsigned string representation of the argument.\n-     * @see     #toUnsignedString(int, int)\n-     * @since 1.8\n-     *\/\n-    public static String toUnsignedString(int i) {\n-        return Long.toString(toUnsignedLong(i));\n-    }\n-\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Integer.java","additions":18,"deletions":19,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n-import jdk.internal.util.DecimalDigits;\n@@ -472,0 +471,18 @@\n+    \/**\n+     * Returns a string representation of the argument as an unsigned\n+     * decimal value.\n+     *\n+     * The argument is converted to unsigned decimal representation\n+     * and returned as a string exactly as if the argument and radix\n+     * 10 were given as arguments to the {@link #toUnsignedString(long,\n+     * int)} method.\n+     *\n+     * @param   i  an integer to be converted to an unsigned string.\n+     * @return  an unsigned string representation of the argument.\n+     * @see     #toUnsignedString(long, int)\n+     * @since 1.8\n+     *\/\n+    public static String toUnsignedString(long i) {\n+        return toUnsignedString(i, 10);\n+    }\n+\n@@ -498,18 +515,0 @@\n-    \/**\n-     * Returns a string representation of the argument as an unsigned\n-     * decimal value.\n-     *\n-     * The argument is converted to unsigned decimal representation\n-     * and returned as a string exactly as if the argument and radix\n-     * 10 were given as arguments to the {@link #toUnsignedString(long,\n-     * int)} method.\n-     *\n-     * @param   i  an integer to be converted to an unsigned string.\n-     * @return  an unsigned string representation of the argument.\n-     * @see     #toUnsignedString(long, int)\n-     * @since 1.8\n-     *\/\n-    public static String toUnsignedString(long i) {\n-        return toUnsignedString(i, 10);\n-    }\n-\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Long.java","additions":18,"deletions":19,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-import jdk.internal.util.DecimalDigits;\n@@ -102,1 +101,1 @@\n-        return checkOverflow(lengthCoder + DecimalDigits.stringSize(value));\n+        return checkOverflow(lengthCoder + Integer.stringSize(value));\n@@ -254,1 +253,1 @@\n-            return DecimalDigits.getCharsLatin1(value, (int)indexCoder, buf);\n+            return StringLatin1.getChars(value, (int)indexCoder, buf);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/StringConcatHelper.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"}]}