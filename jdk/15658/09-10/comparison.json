{"files":[{"patch":"@@ -91,3 +91,0 @@\n-import jdk.internal.access.JavaLangAccess;\n-import jdk.internal.access.SharedSecrets;\n-import jdk.internal.util.ByteArrayLittleEndian;\n@@ -143,2 +140,0 @@\n-    private static final JavaLangAccess jla = SharedSecrets.getJavaLangAccess();\n-\n@@ -459,31 +454,13 @@\n-        }\n-\n-        int absTotalSeconds = Math.abs(totalSeconds);\n-        int absHours = absTotalSeconds \/ SECONDS_PER_HOUR;\n-        int minuteSeconds = absTotalSeconds - absHours * SECONDS_PER_HOUR;\n-        int absMinutes = minuteSeconds \/ SECONDS_PER_MINUTE;\n-        int absSeconds = minuteSeconds - absMinutes * SECONDS_PER_MINUTE;\n-\n-        byte[] buf = new byte[6 + (absSeconds != 0 ? 3 : 0)];\n-        buf[0] = (byte) (totalSeconds < 0 ? '-' : '+');\n-        ByteArrayLittleEndian.setShort(\n-                buf,\n-                1,\n-                DecimalDigits.digitPair(absHours));\n-        buf[3] = ':';\n-        ByteArrayLittleEndian.setShort(\n-                buf,\n-                4,\n-                DecimalDigits.digitPair(absMinutes));\n-        if (absSeconds != 0) {\n-            buf[6] = ':';\n-            ByteArrayLittleEndian.setShort(\n-                    buf,\n-                    7,\n-                    DecimalDigits.digitPair(absSeconds));\n-        }\n-\n-        try {\n-            return jla.newStringNoRepl(buf, StandardCharsets.ISO_8859_1);\n-        } catch (CharacterCodingException cce) {\n-            throw new AssertionError(cce);\n+        } else {\n+            int absTotalSeconds = Math.abs(totalSeconds);\n+            StringBuilder buf = new StringBuilder();\n+            int absHours = absTotalSeconds \/ SECONDS_PER_HOUR;\n+            int absMinutes = (absTotalSeconds \/ SECONDS_PER_MINUTE) % MINUTES_PER_HOUR;\n+            buf.append(totalSeconds < 0 ? \"-\" : \"+\")\n+                    .append(absHours < 10 ? \"0\" : \"\").append(absHours)\n+                    .append(absMinutes < 10 ? \":0\" : \":\").append(absMinutes);\n+            int absSeconds = absTotalSeconds % SECONDS_PER_MINUTE;\n+            if (absSeconds != 0) {\n+                buf.append(absSeconds < 10 ? \":0\" : \":\").append(absSeconds);\n+            }\n+            return buf.toString();\n","filename":"src\/java.base\/share\/classes\/java\/time\/ZoneOffset.java","additions":13,"deletions":36,"binary":false,"changes":49,"status":"modified"}]}