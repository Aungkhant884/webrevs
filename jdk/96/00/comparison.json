{"files":[{"patch":"@@ -144,0 +144,3 @@\n+                \/\/ No trace file given.  Copy all entries.\n+                if (traceFileStream == null) return entry;\n+\n","filename":"src\/jdk.jlink\/share\/classes\/jdk\/tools\/jlink\/internal\/plugins\/GenerateJLIClassesPlugin.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,0 +37,3 @@\n+import org.testng.annotations.BeforeTest;\n+import org.testng.annotations.Test;\n+\n@@ -39,0 +42,1 @@\n+ * @bug 8252919\n@@ -48,1 +52,1 @@\n- * @run main\/othervm GenerateJLIClassesPluginTest\n+ * @run testng\/othervm GenerateJLIClassesPluginTest\n@@ -54,1 +58,2 @@\n-    public static void main(String[] args) throws Exception {\n+    @BeforeTest\n+    public static void setup() throws Exception {\n@@ -60,1 +65,0 @@\n-\n@@ -62,0 +66,1 @@\n+    }\n@@ -63,0 +68,2 @@\n+    @Test\n+    public static void testSpecies()  throws IOException {\n@@ -76,1 +83,1 @@\n-\n+        validateHolderClasses(image);\n@@ -80,0 +87,1 @@\n+    }\n@@ -81,0 +89,2 @@\n+    @Test\n+    public static void testInvalidSignatures() throws IOException {\n@@ -82,1 +92,1 @@\n-        ensureInvalidSignaturesFail(\n+        String[] args = new String[] {\n@@ -86,4 +96,1 @@\n-        );\n-    }\n-\n-    private static void ensureInvalidSignaturesFail(String ... args) throws IOException {\n+        };\n@@ -96,1 +103,1 @@\n-                    .output(helper.createNewImageDir(\"generate-jli-file\"))\n+                    .output(helper.createNewImageDir(\"invalid-signature\"))\n@@ -105,0 +112,22 @@\n+    @Test\n+    public static void nonExistentTraceFile() throws IOException {\n+        Result result = JImageGenerator.getJLinkTask()\n+                .modulePath(helper.defaultModulePath())\n+                .output(helper.createNewImageDir(\"non-existent-tracefile\"))\n+                .option(\"--generate-jli-classes=@NON_EXISTENT_FILE\")\n+                .addMods(\"java.base\")\n+                .call();\n+\n+        Path image = result.assertSuccess();\n+        validateHolderClasses(image);\n+    }\n+\n+    private static void validateHolderClasses(Path image) throws IOException {\n+        JImageValidator.validate(image.resolve(\"lib\").resolve(\"modules\"),\n+                List.of(\"\/java.base\/java\/lang\/invoke\/DirectMethodHandle$Holder.class\",\n+                        \"\/java.base\/java\/lang\/invoke\/DelegatingMethodHandle$Holder.class\",\n+                        \"\/java.base\/java\/lang\/invoke\/LambdaForm$Holder.class\",\n+                        \"\/java.base\/java\/lang\/invoke\/Invokers$Holder.class\"),\n+                List.of());\n+    }\n+\n","filename":"test\/jdk\/tools\/jlink\/plugins\/GenerateJLIClassesPluginTest.java","additions":40,"deletions":11,"binary":false,"changes":51,"status":"modified"}]}