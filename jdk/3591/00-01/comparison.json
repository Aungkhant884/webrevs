{"files":[{"patch":"@@ -351,0 +351,7 @@\n+JImageFile* ClassPathImageEntry::jimage_non_null() const {\n+  assert(ClassLoader::has_jrt_entry(), \"must be\");\n+  assert(jimage() != NULL, \"should have been opened by ClassLoader::lookup_vm_options \"\n+                           \"and remained throughout normal JVM lifetime\");\n+  return jimage();\n+}\n+\n@@ -372,8 +379,0 @@\n-ClassPathImageEntry::~ClassPathImageEntry() {\n-  assert(_singleton == this, \"must be\");\n-  DEBUG_ONLY(_singleton = NULL);\n-\n-  FREE_C_HEAP_ARRAY(const char, _name);\n-  close_jimage();\n-}\n-\n@@ -393,1 +392,1 @@\n-  JImageLocationRef location = (*JImageFindResource)(jimage(), \"\", get_jimage_version_string(), name, &size);\n+  JImageLocationRef location = (*JImageFindResource)(jimage_non_null(), \"\", get_jimage_version_string(), name, &size);\n@@ -401,1 +400,1 @@\n-        location = (*JImageFindResource)(jimage(), JAVA_BASE_NAME, get_jimage_version_string(), name, &size);\n+        location = (*JImageFindResource)(jimage_non_null(), JAVA_BASE_NAME, get_jimage_version_string(), name, &size);\n@@ -412,1 +411,1 @@\n-            location = (*JImageFindResource)(jimage(), module_name, get_jimage_version_string(), name, &size);\n+            location = (*JImageFindResource)(jimage_non_null(), module_name, get_jimage_version_string(), name, &size);\n@@ -423,1 +422,1 @@\n-    (*JImageGetResource)(jimage(), location, data, size);\n+    (*JImageGetResource)(jimage_non_null(), location, data, size);\n","filename":"src\/hotspot\/share\/classfile\/classLoader.cpp","additions":11,"deletions":12,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -126,0 +126,1 @@\n+  JImageFile* jimage_non_null() const;\n@@ -129,1 +130,1 @@\n-  virtual ~ClassPathImageEntry();\n+  virtual ~ClassPathImageEntry() { ShouldNotReachHere(); }\n","filename":"src\/hotspot\/share\/classfile\/classLoader.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"}]}