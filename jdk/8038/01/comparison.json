{"files":[{"patch":"@@ -529,1 +529,1 @@\n-void GraphKit::builtin_throw(Deoptimization::DeoptReason reason, Node* arg) {\n+void GraphKit::builtin_throw(Deoptimization::DeoptReason reason) {\n@@ -3337,1 +3337,1 @@\n-          builtin_throw(reason, makecon(TypeKlassPtr::make(objtp->klass())));\n+          builtin_throw(reason);\n@@ -3422,1 +3422,1 @@\n-        builtin_throw(reason, load_object_klass(not_null_obj));\n+        builtin_throw(reason);\n","filename":"src\/hotspot\/share\/opto\/graphKit.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -269,6 +269,2 @@\n-  \/\/ Range checks take the offending index.\n-  \/\/ Cast and array store checks take the offending class.\n-  \/\/ Others do not take the optional argument.\n-  \/\/ The JVMS must allow the bytecode to be re-executed\n-  \/\/ via an uncommon trap.\n-  void builtin_throw(Deoptimization::DeoptReason reason, Node* arg = NULL);\n+  \/\/ The JVMS must allow the bytecode to be re-executed via an uncommon trap.\n+  void builtin_throw(Deoptimization::DeoptReason reason);\n","filename":"src\/hotspot\/share\/opto\/graphKit.hpp","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -197,1 +197,1 @@\n-        builtin_throw(Deoptimization::Reason_range_check, idx);\n+        builtin_throw(Deoptimization::Reason_range_check);\n","filename":"src\/hotspot\/share\/opto\/parse2.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}