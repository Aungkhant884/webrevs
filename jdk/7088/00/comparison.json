{"files":[{"patch":"@@ -2083,1 +2083,1 @@\n-  print_method(PHASE_AFTER_PARSING);\n+  print_method(PHASE_AFTER_PARSING, 1);\n@@ -2801,1 +2801,1 @@\n-  print_method(PHASE_FINAL_CODE);\n+  print_method(PHASE_FINAL_CODE, 1);\n@@ -4033,1 +4033,1 @@\n-    C->print_method(PHASE_FAILURE);\n+    C->print_method(PHASE_FAILURE, 1);\n@@ -4763,1 +4763,17 @@\n-void Compile::print_method(CompilerPhaseType cpt, const char *name, int level) {\n+void Compile::print_method(CompilerPhaseType cpt, int level) {\n+  print_method_impl(cpt, CompilerPhaseTypeHelper::to_string(cpt), level);\n+}\n+\n+void Compile::print_method(CompilerPhaseType cpt, Node* n, int level) {\n+  ResourceMark rm;\n+  stringStream ss;\n+  ss.print_raw(CompilerPhaseTypeHelper::to_string(cpt));\n+  if (n != NULL) {\n+    ss.print(\": %d %s \", n->_idx, NodeClassNames[n->Opcode()]);\n+  } else {\n+    ss.print_raw(\": NULL\");\n+  }\n+  C->print_method_impl(cpt, ss.as_string(), level);\n+}\n+\n+void Compile::print_method_impl(CompilerPhaseType cpt, const char *name, int level) {\n@@ -4776,2 +4792,2 @@\n-void Compile::print_method(CompilerPhaseType cpt, int level, int idx) {\n-  char output[1024];\n+\/\/ Only used from CompileWrapper\n+void Compile::begin_method() {\n@@ -4779,4 +4795,2 @@\n-  if (idx != 0) {\n-    jio_snprintf(output, sizeof(output), \"%s:%d\", CompilerPhaseTypeHelper::to_string(cpt), idx);\n-  } else {\n-    jio_snprintf(output, sizeof(output), \"%s\", CompilerPhaseTypeHelper::to_string(cpt));\n+  if (_method != NULL && should_print(1)) {\n+    _printer->begin_method();\n@@ -4785,13 +4799,1 @@\n-  print_method(cpt, output, level);\n-}\n-\n-void Compile::print_method(CompilerPhaseType cpt, Node* n, int level) {\n-  ResourceMark rm;\n-  stringStream ss;\n-  ss.print_raw(CompilerPhaseTypeHelper::to_string(cpt));\n-  if (n != NULL) {\n-    ss.print(\": %d %s \", n->_idx, NodeClassNames[n->Opcode()]);\n-  } else {\n-    ss.print_raw(\": NULL\");\n-  }\n-  C->print_method(cpt, ss.as_string(), level);\n+  C->_latest_stage_start_counter.stamp();\n@@ -4800,1 +4802,2 @@\n-void Compile::end_method(int level) {\n+\/\/ Only used from CompileWrapper\n+void Compile::end_method() {\n@@ -4803,1 +4806,1 @@\n-    CompilerEvent::PhaseEvent::post(event, C->_latest_stage_start_counter, PHASE_END, C->_compile_id, level);\n+    CompilerEvent::PhaseEvent::post(event, C->_latest_stage_start_counter, PHASE_END, C->_compile_id, 1);\n@@ -4807,1 +4810,1 @@\n-  if (_method != NULL && should_print(level)) {\n+  if (_method != NULL && should_print(1)) {\n@@ -4813,0 +4816,16 @@\n+bool Compile::should_print(int level) {\n+#ifndef PRODUCT\n+  if (PrintIdealGraphLevel < 0) { \/\/ disabled by the user\n+    return false;\n+  }\n+\n+  bool need = directive()->IGVPrintLevelOption >= level;\n+  if (need && !_printer) {\n+    _printer = IdealGraphPrinter::printer();\n+    _printer->set_compile(this);\n+  }\n+  return need;\n+#else\n+  return false;\n+#endif\n+}\n","filename":"src\/hotspot\/share\/opto\/compile.cpp","additions":45,"deletions":26,"binary":false,"changes":71,"status":"modified"},{"patch":"@@ -653,26 +653,3 @@\n-  void begin_method(int level = 1) {\n-#ifndef PRODUCT\n-    if (_method != NULL && should_print(level)) {\n-      _printer->begin_method();\n-    }\n-#endif\n-    C->_latest_stage_start_counter.stamp();\n-  }\n-\n-  bool should_print(int level = 1) {\n-#ifndef PRODUCT\n-    if (PrintIdealGraphLevel < 0) { \/\/ disabled by the user\n-      return false;\n-    }\n-\n-    bool need = directive()->IGVPrintLevelOption >= level;\n-    if (need && !_printer) {\n-      _printer = IdealGraphPrinter::printer();\n-      assert(_printer != NULL, \"_printer is NULL when we need it!\");\n-      _printer->set_compile(this);\n-    }\n-    return need;\n-#else\n-    return false;\n-#endif\n-  }\n+  void begin_method();\n+  void end_method();\n+  bool should_print(int level);\n@@ -680,2 +657,1 @@\n-  void print_method(CompilerPhaseType cpt, const char *name, int level = 1);\n-  void print_method(CompilerPhaseType cpt, int level = 1, int idx = 0);\n+  void print_method(CompilerPhaseType cpt, int level);\n@@ -683,0 +659,1 @@\n+  void print_method_impl(CompilerPhaseType cpt, const char *name, int level);\n@@ -691,2 +668,0 @@\n-  void end_method(int level = 1);\n-\n","filename":"src\/hotspot\/share\/opto\/compile.hpp","additions":5,"deletions":30,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -325,1 +325,1 @@\n-  C->print_method(PHASE_BEFORE_MATCHING);\n+  C->print_method(PHASE_BEFORE_MATCHING, 1);\n","filename":"src\/hotspot\/share\/opto\/matcher.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}