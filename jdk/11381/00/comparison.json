{"files":[{"patch":"@@ -195,0 +195,9 @@\n+     * <p>\n+     * The following example shows how to listen to new event types, register\n+     * an action if the event type name matches a regular expression and increase a\n+     * counter if a matching event is found. A benefit of using an action per\n+     * event type, instead of the generic {@link #onEvent(Consumer)} method,\n+     * is that a stream implementation can avoid reading events that are of no\n+     * interest.\n+     *\n+     * {@snippet class = \"Snippets\" region = \"EventStreamMetadata\"}\n@@ -202,0 +211,1 @@\n+     * @since 16\n@@ -208,0 +218,5 @@\n+     * <p>\n+     * To perform an action on a subset of event types, consider using\n+     * {@link #onEvent(String, Consumer)} and {@link #onMetadata(Consumer)} as it is\n+     * likely more performant than any selection or filtering mechanism implemented\n+     * in a generic action.\n@@ -211,0 +226,3 @@\n+     *\n+     * @see #onEvent(Consumer)\n+     * @see #onMetadata(Consumer)\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/consumer\/EventStream.java","additions":18,"deletions":0,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+import java.util.regex.Pattern;\n@@ -39,0 +40,1 @@\n+import jdk.jfr.EventType;\n@@ -43,1 +45,1 @@\n-    class PackageOveriview {\n+    class PackageOverview {\n@@ -91,0 +93,19 @@\n+    class EventStreamMetadata {\n+        \/\/ @start region=\"EventStreamMetadata\"\n+        static long count = 0;\n+        public static void main(String... args) throws IOException {\n+            Path file = Path.of(args[0]);\n+            String regExp = args[1];\n+            var pr = Pattern.compile(regExp).asMatchPredicate();\n+            try (var s = EventStream.openFile(file)) {\n+                s.setOrdered(false);\n+                s.onMetadata(metadata -> metadata.getAddedEventTypes()\n+                 .stream().map(EventType::getName).filter(pr)\n+                 .forEach(eventName -> s.onEvent(eventName, event -> count++)));\n+                s.start();\n+                System.out.println(count + \" events matches \" + regExp);\n+            }\n+        }\n+        \/\/ @end\n+    }\n+\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/consumer\/snippet-files\/Snippets.java","additions":22,"deletions":1,"binary":false,"changes":23,"status":"modified"}]}