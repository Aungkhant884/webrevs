{"files":[{"patch":"@@ -114,1 +114,1 @@\n-\n+#if INCLUDE_CDS\n@@ -125,0 +125,1 @@\n+#endif\n","filename":"src\/hotspot\/share\/interpreter\/rewriter.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -202,0 +202,1 @@\n+#if INCLUDE_CDS\n@@ -233,0 +234,1 @@\n+#endif \/\/ INCLUDE_CDS\n","filename":"src\/hotspot\/share\/jfr\/recorder\/checkpoint\/types\/traceid\/jfrTraceId.cpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -105,0 +105,1 @@\n+#if INCLUDE_CDS\n@@ -108,0 +109,1 @@\n+#endif\n","filename":"src\/hotspot\/share\/jfr\/recorder\/checkpoint\/types\/traceid\/jfrTraceId.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -273,0 +273,1 @@\n+#if INCLUDE_CDS\n@@ -280,0 +281,4 @@\n+#else\n+  static bool is_shared(const MetaspaceObj* p) { return false; }\n+  bool is_shared() const { return false; }\n+#endif\n","filename":"src\/hotspot\/share\/memory\/allocation.hpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -159,0 +159,1 @@\n+#if INCLUDE_CDS\n@@ -185,0 +186,1 @@\n+#endif \/\/ INCLUDE_CDS\n","filename":"src\/hotspot\/share\/oops\/arrayKlass.cpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -117,0 +117,1 @@\n+#if INCLUDE_CDS\n@@ -121,0 +122,1 @@\n+#endif\n","filename":"src\/hotspot\/share\/oops\/arrayKlass.hpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -332,0 +332,1 @@\n+#if INCLUDE_CDS\n@@ -345,3 +346,0 @@\n-  \/\/ restore the C++ vtable from the shared archive\n-  restore_vtable();\n-\n@@ -430,0 +428,1 @@\n+#endif \/\/ INCLUDE_CDS\n","filename":"src\/hotspot\/share\/oops\/constantPool.cpp","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -694,0 +694,1 @@\n+#if INCLUDE_CDS\n@@ -700,5 +701,1 @@\n-  \/\/ The ConstantPool vtable is restored by this call when the ConstantPool is\n-  \/\/ in the shared archive.  See patch_klass_vtables() in metaspaceShared.cpp for\n-  \/\/ all the gory details.  SA, dtrace and pstack helpers distinguish metadata\n-  \/\/ by their vtable.\n-  void restore_vtable() { guarantee(is_constantPool(), \"vtable restored by this call\"); }\n+#endif\n","filename":"src\/hotspot\/share\/oops\/constantPool.hpp","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -687,1 +687,0 @@\n-void ConstantPoolCache::save_for_archive(TRAPS) {\n@@ -689,0 +688,1 @@\n+void ConstantPoolCache::save_for_archive(TRAPS) {\n@@ -694,1 +694,0 @@\n-#endif\n@@ -698,1 +697,0 @@\n-#if INCLUDE_CDS\n@@ -711,1 +709,0 @@\n-#endif\n@@ -713,0 +710,1 @@\n+#endif \/\/ INCLUDE_CDS\n","filename":"src\/hotspot\/share\/oops\/cpCache.cpp","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -458,1 +458,1 @@\n-  \/\/ CDS support\n+#if INCLUDE_CDS\n@@ -461,0 +461,2 @@\n+#endif\n+\n","filename":"src\/hotspot\/share\/oops\/cpCache.hpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2454,0 +2454,1 @@\n+#if INCLUDE_CDS\n@@ -2654,0 +2655,1 @@\n+#endif \/\/ INCLUDE_CDS\n","filename":"src\/hotspot\/share\/oops\/instanceKlass.cpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1214,0 +1214,2 @@\n+\n+#if INCLUDE_CDS\n@@ -1220,0 +1222,1 @@\n+#endif\n","filename":"src\/hotspot\/share\/oops\/instanceKlass.hpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -540,0 +540,1 @@\n+#if INCLUDE_CDS\n@@ -630,0 +631,1 @@\n+#endif \/\/ INCLUDE_CDS\n","filename":"src\/hotspot\/share\/oops\/klass.cpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -548,0 +548,1 @@\n+#if INCLUDE_CDS\n@@ -549,0 +550,1 @@\n+#endif\n@@ -557,0 +559,1 @@\n+#if INCLUDE_CDS\n@@ -572,0 +575,1 @@\n+#endif \/\/ INCLUDE_CDS\n","filename":"src\/hotspot\/share\/oops\/klass.hpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -404,0 +404,1 @@\n+#if INCLUDE_CDS\n@@ -414,0 +415,5 @@\n+void Method::restore_unshareable_info(TRAPS) {\n+  assert(is_method() && is_valid_method(this), \"ensure C++ vtable is restored\");\n+}\n+#endif\n+\n@@ -1262,4 +1268,0 @@\n-void Method::restore_unshareable_info(TRAPS) {\n-  assert(is_method() && is_valid_method(this), \"ensure C++ vtable is restored\");\n-}\n-\n","filename":"src\/hotspot\/share\/oops\/method.cpp","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -137,0 +137,2 @@\n+#if INCLUDE_CDS\n+  void remove_unshareable_info();\n@@ -138,0 +140,1 @@\n+#endif\n@@ -427,4 +430,0 @@\n-  \/\/ Clear (non-shared space) pointers which could not be relevant\n-  \/\/ if this (shared) method were mapped into another JVM.\n-  void remove_unshareable_info();\n-\n","filename":"src\/hotspot\/share\/oops\/method.hpp","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"}]}