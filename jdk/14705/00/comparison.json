{"files":[{"patch":"@@ -27,1 +27,0 @@\n-import jdk.internal.classfile.BufWriter;\n@@ -82,22 +81,0 @@\n-\n-    public boolean writeTo(BufWriter b) {\n-        var lc = ((BufWriterImpl)b).labelContext();\n-        int startBci = lc.labelToBci(startScope());\n-        int endBci = lc.labelToBci(endScope());\n-        if (startBci == -1 || endBci == -1) {\n-            return false;\n-        }\n-        int length = endBci - startBci;\n-        b.writeU2(startBci);\n-        b.writeU2(length);\n-        if (b.canWriteDirect(code.constantPool())) {\n-            b.writeU2(nameIndex());\n-            b.writeU2(secondaryIndex());\n-        }\n-        else {\n-            b.writeIndex(name());\n-            b.writeIndex(secondaryEntry());\n-        }\n-        b.writeU2(slot());\n-        return true;\n-    }\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/AbstractBoundLocalVariable.java","additions":0,"deletions":23,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-import jdk.internal.classfile.BufWriter;\n@@ -191,16 +190,0 @@\n-\n-        public boolean writeTo(BufWriter b) {\n-            var lc = ((BufWriterImpl)b).labelContext();\n-            int startBci = lc.labelToBci(startScope());\n-            int endBci = lc.labelToBci(endScope());\n-            if (startBci == -1 || endBci == -1) {\n-                return false;\n-            }\n-            int length = endBci - startBci;\n-            b.writeU2(startBci);\n-            b.writeU2(length);\n-            b.writeIndex(name);\n-            b.writeIndex(descriptor);\n-            b.writeU2(slot());\n-            return true;\n-        }\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/AbstractPseudoInstruction.java","additions":0,"deletions":17,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -27,1 +27,0 @@\n-import java.lang.constant.MethodTypeDesc;\n@@ -44,1 +43,0 @@\n-import jdk.internal.classfile.Instruction;\n@@ -51,1 +49,0 @@\n-import jdk.internal.classfile.attribute.StackMapTableAttribute;\n@@ -266,0 +263,1 @@\n+                        var lc = ((BufWriterImpl) b).labelContext();\n@@ -267,1 +265,3 @@\n-                            if (!l.writeTo(b)) {\n+                            int startBci = lc.labelToBci(l.startScope());\n+                            int endBci = lc.labelToBci(l.endScope());\n+                            if (startBci == -1 || endBci == -1) {\n@@ -270,0 +270,1 @@\n+                                    continue;\n@@ -274,0 +275,6 @@\n+                            int length = endBci - startBci;\n+                            b.writeU2(startBci);\n+                            b.writeU2(length);\n+                            b.writeIndex(l.name());\n+                            b.writeIndex(l.type());\n+                            b.writeU2(l.slot());\n@@ -289,0 +296,1 @@\n+                        var lc = ((BufWriterImpl) b).labelContext();\n@@ -290,1 +298,3 @@\n-                            if (!l.writeTo(b)) {\n+                            int startBci = lc.labelToBci(l.startScope());\n+                            int endBci = lc.labelToBci(l.endScope());\n+                            if (startBci == -1 || endBci == -1) {\n@@ -293,0 +303,1 @@\n+                                    continue;\n@@ -297,0 +308,6 @@\n+                            int length = endBci - startBci;\n+                            b.writeU2(startBci);\n+                            b.writeU2(length);\n+                            b.writeIndex(l.name());\n+                            b.writeIndex(l.signature());\n+                            b.writeU2(l.slot());\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/DirectCodeBuilder.java","additions":22,"deletions":5,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-import jdk.internal.classfile.BufWriter;\n@@ -83,2 +82,0 @@\n-    boolean writeTo(BufWriter buf);\n-\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/instruction\/LocalVariable.java","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -27,1 +27,0 @@\n-import jdk.internal.classfile.BufWriter;\n@@ -80,2 +79,0 @@\n-    boolean writeTo(BufWriter buf);\n-\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/instruction\/LocalVariableType.java","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+import jdk.internal.classfile.impl.BufWriterImpl;\n@@ -99,1 +100,9 @@\n-                        lv.writeTo(b);\n+                        var lc = ((BufWriterImpl) b).labelContext();\n+                        int startBci = lc.labelToBci(lv.startScope());\n+                        int endBci = lc.labelToBci(lv.endScope());\n+                        int length = endBci - startBci;\n+                        b.writeU2(startBci);\n+                        b.writeU2(length);\n+                        b.writeIndex(lv.name());\n+                        b.writeIndex(lv.type());\n+                        b.writeU2(lv.slot());\n@@ -106,1 +115,9 @@\n-                        lvt.writeTo(b);\n+                        var lc = ((BufWriterImpl) b).labelContext();\n+                        int startBci = lc.labelToBci(lvt.startScope());\n+                        int endBci = lc.labelToBci(lvt.endScope());\n+                        int length = endBci - startBci;\n+                        b.writeU2(startBci);\n+                        b.writeU2(length);\n+                        b.writeIndex(lvt.name());\n+                        b.writeIndex(lvt.signature());\n+                        b.writeU2(lvt.slot());\n","filename":"test\/jdk\/jdk\/classfile\/CorpusTest.java","additions":19,"deletions":2,"binary":false,"changes":21,"status":"modified"}]}