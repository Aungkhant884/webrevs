{"files":[{"patch":"@@ -42,1 +42,1 @@\n-                                             mlib_s32, mlib_s32, void *);\n+                                             mlib_s32, mlib_s32, const void *);\n","filename":"src\/java.desktop\/share\/native\/libawt\/awt\/medialib\/awt_ImagingLib.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -46,0 +46,7 @@\n+#ifdef STATIC_BUILD\n+extern void Java_sun_xawt_motif_XsessionWMcommand(JNIEnv *env, jobject this,\n+jobject frame, jstring jcommand);\n+\n+extern void Java_sun_xawt_motif_XsessionWMcommand_New(JNIEnv *env, jobjectArray jarray);\n+#endif\n+\n@@ -121,1 +128,1 @@\n-\n+#ifndef STATIC_BUILD\n@@ -127,1 +134,1 @@\n-\n+#endif\n@@ -159,0 +166,1 @@\n+#ifndef STATIC_BUILD\n@@ -161,0 +169,1 @@\n+#endif\n@@ -169,0 +178,2 @@\n+\n+#ifndef STATIC_BUILD\n@@ -176,1 +187,1 @@\n-\n+#endif\n@@ -201,1 +212,1 @@\n-\n+#ifndef STATIC_BUILD\n@@ -207,2 +218,4 @@\n-        dlsym(awtHandle, \"Java_sun_awt_motif_XsessionWMcommand\");\n-\n+        dlsym(awtHandle, \"Java_sun_xawt_motif_XsessionWMcommand\");\n+#else\n+    XsessionWMcommand = (XsessionWMcommand_type *)Java_sun_xawt_motif_XsessionWMcommand;\n+#endif\n@@ -228,1 +241,1 @@\n-\n+#ifndef STATIC_BUILD\n@@ -234,1 +247,4 @@\n-        dlsym(awtHandle, \"Java_sun_awt_motif_XsessionWMcommand_New\");\n+        dlsym(awtHandle, \"Java_sun_xawt_motif_XsessionWMcommand_New\");\n+#else\n+    XsessionWMcommand = (XsessionWMcommand_New_type *)Java_sun_xawt_motif_XsessionWMcommand_New;\n+#endif\n@@ -241,0 +257,11 @@\n+\n+#ifdef STATIC_BUILD\n+__attribute__((weak)) void Java_sun_xawt_motif_XsessionWMcommand_New(JNIEnv *env, jobjectArray jarray)\n+{\n+}\n+\n+__attribute__((weak)) void Java_sun_xawt_motif_XsessionWMcommand(JNIEnv *env, jobject this,\n+        jobject frame, jstring jcommand)\n+{\n+}\n+#endif\n","filename":"src\/java.desktop\/unix\/native\/libawt\/awt\/awt_LoadLibrary.c","additions":35,"deletions":8,"binary":false,"changes":43,"status":"modified"},{"patch":"@@ -39,0 +39,4 @@\n+#ifdef STATIC_BUILD\n+#include \"mlib_image.h\"\n+#endif\n+\n@@ -42,0 +46,37 @@\n+#ifdef STATIC_BUILD\n+\/\/ Mapping functions to their names for runtime check\n+static mlibFnS_t sMlibFnsStatic[] = {\n+    {j2d_mlib_ImageConvMxN, \"j2d_mlib_ImageConvMxN\"},\n+    {j2d_mlib_ImageAffine, \"j2d_mlib_ImageAffine\"},\n+    {j2d_mlib_ImageLookUp, \"j2d_mlib_ImageLookUp\"},\n+    {j2d_mlib_ImageConvKernelConvert, \"j2d_mlib_ImageConvKernelConvert\"},\n+};\n+\n+mlib_status awt_getImagingLib(JNIEnv *env, mlibFnS_t *sMlibFns,\n+                              mlibSysFnS_t *sMlibSysFns) {\n+    mlibFnS_t *mptr;\n+    int i;\n+    char *fName;\n+    mlibSysFnS_t tempSysFns;\n+    mlib_status ret = MLIB_SUCCESS;\n+\n+    tempSysFns.createFP = j2d_mlib_ImageCreate;\n+    tempSysFns.createStructFP = j2d_mlib_ImageCreateStruct;\n+    tempSysFns.deleteImageFP = j2d_mlib_ImageDelete;\n+    *sMlibSysFns = tempSysFns;\n+\n+    mptr = sMlibFns;\n+    i = 0;\n+    while (mptr[i].fname != NULL) {\n+        fName = mptr[i].fname;\n+        if(strcmp(fName, sMlibFnsStatic[i].fname) == 0) {\n+            mptr[i].fptr = sMlibFnsStatic[i].fptr;\n+        } else {\n+            ret = MLIB_FAILURE;\n+        }\n+        i++;\n+    }\n+\n+    return ret;\n+}\n+#else\n@@ -124,0 +165,1 @@\n+#endif\n","filename":"src\/java.desktop\/unix\/native\/libawt\/awt\/awt_Mlib.c","additions":42,"deletions":0,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -302,0 +302,2 @@\n+#ifndef STATIC_BUILD\n+\/\/ The same function exists in libawt.a::awt_LoadLibrary.c\n@@ -309,0 +311,1 @@\n+#endif\n@@ -817,1 +820,1 @@\n-Java_sun_awt_motif_XsessionWMcommand(JNIEnv *env, jobject this,\n+Java_sun_xawt_motif_XsessionWMcommand(JNIEnv *env, jobject this,\n@@ -862,1 +865,1 @@\n-Java_sun_awt_motif_XsessionWMcommand_New(JNIEnv *env, jobjectArray jarray)\n+Java_sun_xawt_motif_XsessionWMcommand_New(JNIEnv *env, jobjectArray jarray)\n","filename":"src\/java.desktop\/unix\/native\/libawt_xawt\/xawt\/XToolkit.c","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"}]}