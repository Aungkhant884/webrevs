{"files":[{"patch":"@@ -663,1 +663,0 @@\n-java\/awt\/Mixing\/AWT_Mixing\/ViewportOverlapping.java 8253184,8295813 windows-x64\n","filename":"test\/jdk\/ProblemList.txt","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,2 +24,16 @@\n-import java.awt.*;\n-import java.awt.event.*;\n+import java.awt.Canvas;\n+import java.awt.Choice;\n+import java.awt.Color;\n+import java.awt.Component;\n+import java.awt.Container;\n+import java.awt.Dimension;\n+import java.awt.Font;\n+import java.awt.List;\n+import java.awt.Point;\n+import java.awt.Robot;\n+import java.awt.Scrollbar;\n+import java.awt.TextField;\n+import java.awt.Toolkit;\n+import java.awt.event.InputEvent;\n+import java.awt.event.MouseAdapter;\n+import java.awt.event.MouseEvent;\n@@ -27,0 +41,3 @@\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.InputStreamReader;\n@@ -31,1 +48,4 @@\n-import javax.swing.*;\n+\n+import javax.swing.JFrame;\n+import javax.swing.SwingUtilities;\n+import javax.swing.WindowConstants;\n@@ -35,1 +55,2 @@\n-import java.io.*;\n+import sun.awt.OSInfo;\n+\n@@ -404,1 +425,1 @@\n-        }catch(Exception exx){\n+        } catch(Exception exx) {\n@@ -411,1 +432,1 @@\n-        if (!(System.getProperty(\"os.name\").toLowerCase().contains(\"os x\"))) {\n+        if (!(OSInfo.getOSType() == OSInfo.OSType.MACOSX)) {\n@@ -413,1 +434,1 @@\n-            System.out.println(\"C&B. color: \"+c+\" compare with \"+AWT_VERIFY_COLOR);\n+            System.out.println(\"C&B. color: \" + c + \" compare with \" + AWT_VERIFY_COLOR);\n@@ -425,2 +446,2 @@\n-        robot.mousePress(InputEvent.BUTTON1_MASK);\n-        robot.mouseRelease(InputEvent.BUTTON1_MASK);\n+        robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+        robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n@@ -457,1 +478,2 @@\n-    private void testComponent(Component component) throws InterruptedException, InvocationTargetException {\n+    private void testComponent(Component component) throws InterruptedException,\n+                                                           InvocationTargetException {\n@@ -461,1 +483,1 @@\n-        }catch(Exception ignorex) {\n+        } catch(Exception ignored) {\n@@ -465,5 +487,3 @@\n-        SwingUtilities.invokeAndWait(new Runnable() {\n-            public void run() {\n-                prepareControls();\n-            }\n-        });\n+\n+        SwingUtilities.invokeAndWait(() -> prepareControls());\n+\n@@ -474,4 +494,4 @@\n-        try {\n-            Thread.sleep(500); \/\/ wait for graphic effects on systems like Win7\n-        } catch (InterruptedException ex) {\n-        }\n+\n+        \/\/ wait for graphic effects on systems like Win7\n+        robot.delay(500);\n+\n@@ -482,5 +502,2 @@\n-        SwingUtilities.invokeAndWait(new Runnable() {\n-            public void run() {\n-                cleanup();\n-            }\n-        });\n+\n+        SwingUtilities.invokeAndWait(() -> cleanup());\n","filename":"test\/jdk\/java\/awt\/Mixing\/AWT_Mixing\/OverlappingTestBase.java","additions":43,"deletions":26,"binary":false,"changes":69,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,1 @@\n+import java.awt.Rectangle;\n@@ -30,0 +31,1 @@\n+import java.awt.Toolkit;\n@@ -33,0 +35,3 @@\n+import java.io.File;\n+import java.io.IOException;\n+import javax.imageio.ImageIO;\n@@ -40,1 +45,0 @@\n-import test.java.awt.regtesthelpers.Util;\n@@ -68,0 +72,1 @@\n+    private static Robot robot;\n@@ -84,1 +89,0 @@\n-\n@@ -102,4 +106,3 @@\n-            SwingUtilities.invokeAndWait(new Runnable() {\n-                public void run() {\n-                    \/\/ prepare test data\n-                    frameClicked = 0;\n+            SwingUtilities.invokeAndWait(() -> {\n+                \/\/ prepare test data\n+                frameClicked = 0;\n@@ -107,1 +110,1 @@\n-                    b.requestFocus();\n+                b.requestFocus();\n@@ -109,2 +112,2 @@\n-                    scrollPane.getHorizontalScrollBar().setUnitIncrement(40);\n-                    scrollPane.getVerticalScrollBar().setUnitIncrement(40);\n+                scrollPane.getHorizontalScrollBar().setUnitIncrement(40);\n+                scrollPane.getVerticalScrollBar().setUnitIncrement(40);\n@@ -112,4 +115,4 @@\n-                    hLoc = scrollPane.getHorizontalScrollBar().getLocationOnScreen();\n-                    hLoc.translate(scrollPane.getHorizontalScrollBar().getWidth() - 3, 3);\n-                    vLoc = scrollPane.getVerticalScrollBar().getLocationOnScreen();\n-                    vLoc.translate(3, scrollPane.getVerticalScrollBar().getHeight() - 3);\n+                hLoc = scrollPane.getHorizontalScrollBar().getLocationOnScreen();\n+                hLoc.translate(scrollPane.getHorizontalScrollBar().getWidth() - 3, 3);\n+                vLoc = scrollPane.getVerticalScrollBar().getLocationOnScreen();\n+                vLoc.translate(3, scrollPane.getVerticalScrollBar().getHeight() - 3);\n@@ -117,2 +120,2 @@\n-                    testLoc = p.getLocationOnScreen();\n-                    testLoc.translate(-3, -3);\n+                testLoc = p.getLocationOnScreen();\n+                testLoc.translate(-3, -3);\n@@ -120,3 +123,2 @@\n-                    resizeLoc = f.getLocationOnScreen();\n-                    resizeLoc.translate(f.getWidth() - 1, f.getHeight() - 1);\n-                }\n+                resizeLoc = f.getLocationOnScreen();\n+                resizeLoc.translate(f.getWidth() - 1, f.getHeight() - 1);\n@@ -128,3 +130,0 @@\n-        \/\/ run robot\n-        Robot robot = Util.createRobot();\n-        robot.setAutoDelay(ROBOT_DELAY);\n@@ -133,3 +132,4 @@\n-        robot.mousePress(InputEvent.BUTTON1_MASK);\n-        robot.mouseRelease(InputEvent.BUTTON1_MASK);\n-        Util.waitForIdle(robot);\n+        robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+        robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+        robot.waitForIdle();\n+        captureScreen(\"Img_1.png\");\n@@ -138,3 +138,4 @@\n-        robot.mousePress(InputEvent.BUTTON1_MASK);\n-        robot.mouseRelease(InputEvent.BUTTON1_MASK);\n-        Util.waitForIdle(robot);\n+        robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+        robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+        robot.waitForIdle();\n+        captureScreen(\"Img_2.png\");\n@@ -144,1 +145,1 @@\n-        robot.mousePress(InputEvent.BUTTON1_MASK);\n+        robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n@@ -146,2 +147,3 @@\n-        robot.mouseRelease(InputEvent.BUTTON1_MASK);\n-        Util.waitForIdle(robot);\n+        robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+        robot.waitForIdle();\n+        captureScreen(\"Img_3.png\");\n@@ -150,1 +152,2 @@\n-        return frameClicked == 2;\n+        captureScreen(\"Img_4.png\");\n+        return (frameClicked == 2);\n@@ -154,1 +157,4 @@\n-    public static void main(String args[]) throws InterruptedException {\n+    public static void main(String args[]) throws Exception {\n+        robot = new Robot();\n+        robot.setAutoDelay(ROBOT_DELAY);\n+\n@@ -157,0 +163,13 @@\n+        captureScreen(\"Img_5.png\");\n+    }\n+\n+    private static void captureScreen(String filename) {\n+        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();\n+        try {\n+            ImageIO.write(\n+                    robot.createScreenCapture(new Rectangle(0, 0, screenSize.width, screenSize.height)),\n+                    \"png\",\n+                    new File(filename)\n+            );\n+        } catch (IOException ignored) {\n+        }\n","filename":"test\/jdk\/java\/awt\/Mixing\/AWT_Mixing\/ViewportOverlapping.java","additions":52,"deletions":33,"binary":false,"changes":85,"status":"modified"}]}