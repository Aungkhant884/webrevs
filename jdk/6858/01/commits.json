[{"commit":{"message":"Merge branch 'master'."},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/IRNode.java"}],"sha":"5c9bcfd817abab23287d7aa96b336875fe83111c"},{"commit":{"message":"include bug id for the test."},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/TestIRAddIdealNotXPlusC.java"}],"sha":"05bdf2876488a140caa1124f01b23085a212d0e4"},{"commit":{"message":"Merge branch 'master'."},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/IRNode.java"}],"sha":"ccbb3b9d23e7ae4297514ceec46565061ed7b53d"},{"commit":{"message":"fix copyright year."},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/IRNode.java"}],"sha":"aa80aa0392dc68e1391d23a2adf633ccd5ce9afe"},{"commit":{"message":"update copyright year to 2022."},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"},{"filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/IRNode.java"}],"sha":"28993c592761fb6729fd1efe5c70f04843b4de1d"},{"commit":{"message":"update copyright year."},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/TestIRAddIdealNotXPlusC.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/AddIdealNotXPlusC.java"}],"sha":"23dcb06fc860318dd8838bef443b92849ab90699"},{"commit":{"message":"update benchmark."},"files":[{"filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/AddIdealNotXPlusC.java"}],"sha":"a2daf3f82849adaf566b6f0528137914bee2149c"},{"commit":{"message":"Merge branch 'master' of https:\/\/github.com\/openjdk\/jdk into addnode-PAddSub1202"},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"}],"sha":"3e0c914366c6b5b0212c44c86fe1e63f6906a38e"},{"commit":{"message":"update microbenchmark."},"files":[{"filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/AddIdealNotXPlusC.java"}],"sha":"725be3adca8046807b8a5423d856f13f8afa45a5"},{"commit":{"message":"replace normal jtreg test with ir test."},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/TestIRAddIdealNotXPlusC.java"},{"filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/IRNode.java"}],"sha":"b549b2771a950f054f6f38e0b074aab114877d70"},{"commit":{"message":"icrease the number of iterations in microbenmark tests to reduce errors."},"files":[{"filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/AddIdealNotXPlusC.java"}],"sha":"d32a18e16d1ea88d89e9e03d6ebdeeef06354ea3"},{"commit":{"message":"add the associated microbenchmark test."},"files":[{"filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/AddIdealNotXPlusC.java"}],"sha":"d1b9d379cb2dbcc93fc34c14d4b62c6984d829e9"},{"commit":{"message":"Merge master."},"files":[],"sha":"539ffa02abc3c76531c97889cee7572411ada91a"},{"commit":{"message":"Include a jtreg test for the optimization introduced."},"files":[],"sha":"705e0641ac97d7e1939dbfdb72278dbadadbabcf"},{"commit":{"message":"Use add_ring instead of java_subtract to compute for constants.\n\nBecause java_subtract cannot tell int from long in this case."},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"}],"sha":"430badff8008892c49f5ef4301a84e1fff161555"},{"commit":{"message":"generalize transformation from (~x+1) into -x."},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"}],"sha":"37c1d87cccd9376c9e81dddf43c74eb8c6fae6e0"}]