{"files":[{"patch":"@@ -1279,28 +1279,0 @@\n-\/\/ Returns true if the current mismatch is due to a resolved\/unresolved\n-\/\/ class pair. Otherwise, returns false.\n-bool ConstantPool::is_unresolved_class_mismatch(int index1,\n-  const constantPoolHandle& cp2, int index2) {\n-\n-  jbyte t1 = tag_at(index1).value();\n-  if (t1 != JVM_CONSTANT_Class && t1 != JVM_CONSTANT_UnresolvedClass) {\n-    return false;  \/\/ wrong entry type; not our special case\n-  }\n-\n-  jbyte t2 = cp2->tag_at(index2).value();\n-  if (t2 != JVM_CONSTANT_Class && t2 != JVM_CONSTANT_UnresolvedClass) {\n-    return false;  \/\/ wrong entry type; not our special case\n-  }\n-\n-  if (t1 == t2) {\n-    return false;  \/\/ not a mismatch; not our special case\n-  }\n-\n-  char *s1 = klass_name_at(index1)->as_C_string();\n-  char *s2 = cp2->klass_name_at(index2)->as_C_string();\n-  if (strcmp(s1, s2) != 0) {\n-    return false;  \/\/ strings don't match; not our special case\n-  }\n-\n-  return true;  \/\/ made it through the gauntlet; this is our special case\n-} \/\/ end is_unresolved_class_mismatch()\n-\n@@ -1316,0 +1288,7 @@\n+  if (t1 == JVM_CONSTANT_Class) {\n+    \/\/ Some classes are pre-resolved (like Throwable) which may lead to \n+    \/\/ consider it as a different entry. we then revert them back temporarily\n+    \/\/ to ensure proper comparison.\n+    t1 = JVM_CONSTANT_UnresolvedClass;\n+  }\n+\n@@ -1361,1 +1340,0 @@\n-    match |= is_unresolved_class_mismatch(recur1, cp2, recur2);\n","filename":"src\/hotspot\/share\/oops\/constantPool.cpp","additions":7,"deletions":29,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -856,1 +856,0 @@\n-  bool is_unresolved_class_mismatch(int index1, const constantPoolHandle& cp2, int index2);\n","filename":"src\/hotspot\/share\/oops\/constantPool.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1674,8 +1674,0 @@\n-      } else if (scratch_cp->is_unresolved_class_mismatch(scratch_i, *merge_cp_p,\n-        scratch_i)) {\n-        \/\/ The mismatch in compare_entry_to() above is because of a\n-        \/\/ resolved versus unresolved class entry at the same index\n-        \/\/ with the same string value. Since Pass 0 reverted any\n-        \/\/ class entries to unresolved class entries in *merge_cp_p,\n-        \/\/ we go with the unresolved class entry.\n-        continue;\n","filename":"src\/hotspot\/share\/prims\/jvmtiRedefineClasses.cpp","additions":0,"deletions":8,"binary":false,"changes":8,"status":"modified"}]}