{"files":[{"patch":"@@ -609,7 +609,15 @@\n-  intptr_t* ret_pc_loc = sp() - return_addr_offset;\n-  address ret_pc = *(address*)ret_pc_loc;\n-  if (Continuation::is_return_barrier_entry(ret_pc))\n-    values.describe(frame_no, ret_pc_loc, \"return address (return barrier)\");\n-  else\n-    values.describe(frame_no, ret_pc_loc, err_msg(\"return address for #%d\", frame_no));\n-  values.describe(frame_no, sp() - sender_sp_offset, err_msg(\"saved fp for #%d\", frame_no), 0);\n+  if (is_java_frame() || Continuation::is_continuation_enterSpecial(*this)) {\n+    intptr_t* ret_pc_loc;\n+    intptr_t* fp_loc;\n+    if (is_interpreted_frame()) {\n+      ret_pc_loc = fp() + return_addr_offset;\n+      fp_loc = fp();\n+    } else {\n+      ret_pc_loc = real_fp() - return_addr_offset;\n+      fp_loc = real_fp() - sender_sp_offset;\n+    }\n+    address ret_pc = *(address*)ret_pc_loc;\n+    values.describe(frame_no, ret_pc_loc,\n+      Continuation::is_return_barrier_entry(ret_pc) ? \"return address (return barrier)\" : \"return address\");\n+    values.describe(-1, fp_loc, \"saved fp\", 0); \/\/ \"unowned\" as value belongs to sender\n+  }\n","filename":"src\/hotspot\/cpu\/aarch64\/frame_aarch64.cpp","additions":15,"deletions":7,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -622,7 +622,15 @@\n-  intptr_t* ret_pc_loc = sp() - return_addr_offset;\n-  address ret_pc = *(address*)ret_pc_loc;\n-  if (Continuation::is_return_barrier_entry(ret_pc))\n-    values.describe(frame_no, ret_pc_loc, \"return address (return barrier)\");\n-  else\n-    values.describe(frame_no, ret_pc_loc, err_msg(\"return address for #%d\", frame_no));\n-  values.describe(frame_no, sp() - sender_sp_offset, err_msg(\"saved fp for #%d\", frame_no), 0);\n+  if (is_java_frame() || Continuation::is_continuation_enterSpecial(*this)) {\n+    intptr_t* ret_pc_loc;\n+    intptr_t* fp_loc;\n+    if (is_interpreted_frame()) {\n+      ret_pc_loc = fp() + return_addr_offset;\n+      fp_loc = fp();\n+    } else {\n+      ret_pc_loc = real_fp() - return_addr_offset;\n+      fp_loc = real_fp() - sender_sp_offset;\n+    }\n+    address ret_pc = *(address*)ret_pc_loc;\n+    values.describe(frame_no, ret_pc_loc,\n+      Continuation::is_return_barrier_entry(ret_pc) ? \"return address (return barrier)\" : \"return address\");\n+    values.describe(-1, fp_loc, \"saved fp\", 0); \/\/ \"unowned\" as value belongs to sender\n+  }\n","filename":"src\/hotspot\/cpu\/x86\/frame_x86.cpp","additions":15,"deletions":7,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -40,0 +40,8 @@\n+*\/\n+\n+\/**\n+* @test\n+* @requires vm.continuations\n+* @requires vm.debug\n+* @modules java.base\/jdk.internal.vm\n+* @build java.base\/java.lang.StackWalkerHelper\n@@ -41,0 +49,3 @@\n+* @run testng\/othervm --enable-preview -XX:+VerifyStack -Xint Basic\n+* @run testng\/othervm --enable-preview -XX:+VerifyStack -Xcomp -XX:TieredStopAtLevel=3 -XX:CompileOnly=jdk\/internal\/vm\/Continuation,Basic Basic\n+* @run testng\/othervm --enable-preview -XX:+VerifyStack -Xcomp -XX:-TieredCompilation -XX:CompileOnly=jdk\/internal\/vm\/Continuation,Basic Basic\n","filename":"test\/jdk\/jdk\/internal\/vm\/Continuation\/Basic.java","additions":11,"deletions":0,"binary":false,"changes":11,"status":"modified"}]}