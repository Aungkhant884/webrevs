{"files":[{"patch":"@@ -841,1 +841,1 @@\n-    private transient Set<Service> serviceSet;\n+    private transient volatile Set<Service> serviceSet;\n@@ -892,3 +892,3 @@\n-    \/\/ returns false if the key is provider-related, i.e.name, version, info,\n-    \/\/ and className\n-    private boolean checkLegacy(Object key) {\n+    \/\/ returns false if no update necessary, i.e. key isn't String or\n+    \/\/ is String but it's provider-related (name\/version\/info\/className)\n+    private static boolean checkLegacy(Object key) {\n@@ -899,1 +899,1 @@\n-            legacyChanged = true;\n+            return true;\n@@ -901,1 +901,0 @@\n-        return true;\n@@ -970,0 +969,3 @@\n+        \/\/ clear out all existing mappings and start fresh\n+        legacyMap.clear();\n+        legacyChanged = true;\n@@ -977,1 +979,1 @@\n-                parseLegacy(sk, sv, OPType.REPLACE);\n+                parseLegacy(sk, sv, OPType.ADD);\n@@ -1139,0 +1141,1 @@\n+            legacyChanged = true;\n@@ -1176,0 +1179,1 @@\n+            legacyChanged = true;\n@@ -1285,5 +1289,3 @@\n-        if (!serviceMap.isEmpty()) {\n-            Service s = serviceMap.get(key);\n-            if (s != null) {\n-                return s;\n-            }\n+        Service s = serviceMap.get(key);\n+        if (s != null) {\n+            return s;\n@@ -1292,7 +1294,5 @@\n-        if (!legacyMap.isEmpty()) {\n-            Service s = legacyMap.get(key);\n-            if (s != null && !s.isValid()) {\n-                legacyMap.remove(key);\n-            } else {\n-                return s;\n-            }\n+        s = legacyMap.get(key);\n+        if (s != null && !s.isValid()) {\n+            legacyMap.remove(key, s);\n+        } else {\n+            return s;\n","filename":"src\/java.base\/share\/classes\/java\/security\/Provider.java","additions":19,"deletions":19,"binary":false,"changes":38,"status":"modified"}]}