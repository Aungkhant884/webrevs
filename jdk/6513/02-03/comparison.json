{"files":[{"patch":"@@ -195,2 +195,1 @@\n-        this.prngAlgos =\n-                Collections.synchronizedSet(new LinkedHashSet<String>(6));\n+        this.prngAlgos = new LinkedHashSet<String>(6);\n@@ -363,1 +362,1 @@\n-    public void clear() {\n+    public synchronized void clear() {\n@@ -380,1 +379,1 @@\n-    public void load(InputStream inStream) throws IOException {\n+    public synchronized void load(InputStream inStream) throws IOException {\n@@ -398,1 +397,1 @@\n-    public void putAll(Map<?,?> t) {\n+    public synchronized void putAll(Map<?,?> t) {\n@@ -414,1 +413,1 @@\n-    public Set<Map.Entry<Object,Object>> entrySet() {\n+    public synchronized Set<Map.Entry<Object,Object>> entrySet() {\n@@ -475,1 +474,1 @@\n-    public Object put(Object key, Object value) {\n+    public synchronized Object put(Object key, Object value) {\n@@ -502,1 +501,1 @@\n-    public Object putIfAbsent(Object key, Object value) {\n+    public synchronized Object putIfAbsent(Object key, Object value) {\n@@ -528,1 +527,1 @@\n-    public Object remove(Object key) {\n+    public synchronized Object remove(Object key) {\n@@ -553,1 +552,1 @@\n-    public boolean remove(Object key, Object value) {\n+    public synchronized boolean remove(Object key, Object value) {\n@@ -578,1 +577,2 @@\n-    public boolean replace(Object key, Object oldValue, Object newValue) {\n+    public synchronized boolean replace(Object key, Object oldValue,\n+            Object newValue) {\n@@ -603,1 +603,1 @@\n-    public Object replace(Object key, Object value) {\n+    public synchronized Object replace(Object key, Object value) {\n@@ -630,2 +630,2 @@\n-    public void replaceAll(BiFunction<? super Object, ? super Object,\n-            ? extends Object> function) {\n+    public synchronized void replaceAll(BiFunction<? super Object,\n+            ? super Object, ? extends Object> function) {\n@@ -658,1 +658,1 @@\n-    public Object compute(Object key, BiFunction<? super Object,\n+    public synchronized Object compute(Object key, BiFunction<? super Object,\n@@ -688,2 +688,2 @@\n-    public Object computeIfAbsent(Object key, Function<? super Object,\n-            ? extends Object> mappingFunction) {\n+    public synchronized Object computeIfAbsent(Object key,\n+            Function<? super Object, ? extends Object> mappingFunction) {\n@@ -717,2 +717,3 @@\n-    public Object computeIfPresent(Object key, BiFunction<? super Object,\n-            ? super Object, ? extends Object> remappingFunction) {\n+    public synchronized Object computeIfPresent(Object key,\n+            BiFunction<? super Object, ? super Object, ? extends Object>\n+            remappingFunction) {\n@@ -749,2 +750,3 @@\n-    public Object merge(Object key, Object value,  BiFunction<? super Object,\n-            ? super Object, ? extends Object>  remappingFunction) {\n+    public synchronized Object merge(Object key, Object value,\n+            BiFunction<? super Object, ? super Object, ? extends Object>\n+            remappingFunction) {\n@@ -769,1 +771,1 @@\n-    public Object getOrDefault(Object key, Object defaultValue) {\n+    public synchronized Object getOrDefault(Object key, Object defaultValue) {\n@@ -778,1 +780,2 @@\n-    public void forEach(BiConsumer<? super Object, ? super Object> action) {\n+    public synchronized void forEach(BiConsumer<? super Object, ? super Object>\n+            action) {\n@@ -1388,3 +1391,4 @@\n-        putPropertyStrings(s);\n-\n-        checkAndUpdateSecureRandom(type, algorithm, true);\n+        synchronized (this) {\n+            putPropertyStrings(s);\n+            checkAndUpdateSecureRandom(type, algorithm, true);\n+        }\n","filename":"src\/java.base\/share\/classes\/java\/security\/Provider.java","additions":30,"deletions":26,"binary":false,"changes":56,"status":"modified"}]}