{"files":[{"patch":"@@ -351,3 +351,2 @@\n-                RSAPadding.Output po = padding.pad(buffer, 0, bufOfs);\n-                if (po.status()) {\n-                    paddingCopy = po.result();\n+                paddingCopy = padding.pad(buffer, 0, bufOfs);\n+                if (paddingCopy != null) {\n@@ -362,4 +361,2 @@\n-                po = padding.unpad(paddingCopy);\n-                if (po.status()) {\n-                    result = po.result();\n-                } else {\n+                result = padding.unpad(paddingCopy);\n+                if (result == null) {\n@@ -371,3 +368,3 @@\n-                po = padding.pad(buffer, 0, bufOfs);\n-                if (po.status()) {\n-                    result = RSACore.rsa(po.result(), publicKey);\n+                paddingCopy = padding.pad(buffer, 0, bufOfs);\n+                if (paddingCopy != null) {\n+                    result = RSACore.rsa(paddingCopy, publicKey);\n@@ -382,4 +379,2 @@\n-                po = padding.unpad(paddingCopy);\n-                if (po.status()) {\n-                    result = po.result();\n-                } else {\n+                result = padding.unpad(paddingCopy);\n+                if (result == null) {\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/RSACipher.java","additions":9,"deletions":14,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -93,8 +93,0 @@\n-    public record Output(boolean status, byte[] result) {\n-        public static Output FAIL = new Output(false, null);\n-        public static Output pass(byte[] result) {\n-            return new Output(true, result);\n-        };\n-    }\n-\n-\n@@ -246,1 +238,1 @@\n-     * Pad the data and return the result in an RSAPadding.Output record.\n+     * Pad the data and return the result or null if error occurred.\n@@ -248,1 +240,1 @@\n-    public Output pad(byte[] data) {\n+    public byte[] pad(byte[] data) {\n@@ -253,1 +245,1 @@\n-     * Pad the data and return the result in an RSAPadding.Output record.\n+     * Pad the data and return the result or null if error occurred.\n@@ -255,1 +247,1 @@\n-    public Output pad(byte[] data, int ofs, int len) {\n+    public byte[] pad(byte[] data, int ofs, int len) {\n@@ -257,1 +249,1 @@\n-            return Output.FAIL;\n+            return null;\n@@ -262,1 +254,1 @@\n-            return Output.pass(RSACore.convert(data, ofs, len));\n+            return RSACore.convert(data, ofs, len);\n@@ -274,2 +266,1 @@\n-     * Unpad the padded block and return the result in an RSAPadding.Output\n-     * record.\n+     * Unpad the padded block and return the result or null if error occurred.\n@@ -277,1 +268,1 @@\n-    public Output unpad(byte[] padded) {\n+    public byte[] unpad(byte[] padded) {\n@@ -280,1 +271,1 @@\n-                case PAD_NONE -> Output.pass(padded);\n+                case PAD_NONE -> padded;\n@@ -286,1 +277,1 @@\n-            return Output.FAIL;\n+            return null;\n@@ -293,1 +284,1 @@\n-    private Output padV15(byte[] data, int ofs, int len) {\n+    private byte[] padV15(byte[] data, int ofs, int len) {\n@@ -325,1 +316,1 @@\n-        return Output.pass(padded);\n+        return padded;\n@@ -330,1 +321,1 @@\n-     * Return the result in an RSAPadding.Output record.\n+     * Return the result or null if error occurred.\n@@ -333,1 +324,1 @@\n-    private Output unpadV15(byte[] padded) {\n+    private byte[] unpadV15(byte[] padded) {\n@@ -370,1 +361,1 @@\n-            return Output.FAIL;\n+            return null;\n@@ -372,1 +363,1 @@\n-            return Output.pass(data);\n+            return data;\n@@ -379,1 +370,1 @@\n-     * Return the result in an RSAPadding.Output record.\n+     * Return the result or null if error occurred.\n@@ -381,1 +372,1 @@\n-    private Output padOAEP(byte[] M, int ofs, int len) {\n+    private byte[] padOAEP(byte[] M, int ofs, int len) {\n@@ -425,1 +416,1 @@\n-        return Output.pass(EM);\n+        return EM;\n@@ -430,0 +421,1 @@\n+     * Return the result or null if error occurred.\n@@ -431,1 +423,1 @@\n-    private Output unpadOAEP(byte[] padded) {\n+    private byte[] unpadOAEP(byte[] padded) {\n@@ -487,1 +479,1 @@\n-        return (bp? Output.FAIL : Output.pass(m));\n+        return (bp? null : m);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/rsa\/RSAPadding.java","additions":22,"deletions":30,"binary":false,"changes":52,"status":"modified"},{"patch":"@@ -192,3 +192,3 @@\n-            RSAPadding.Output po = padding.pad(encoded);\n-            if (po.status()) {\n-                return RSACore.rsa(po.result(), privateKey, true);\n+            byte[] padded = padding.pad(encoded);\n+            if (padded != null) {\n+                return RSACore.rsa(padded, privateKey, true);\n@@ -215,0 +215,3 @@\n+\n+            \/\/ https:\/\/www.rfc-editor.org\/rfc\/rfc8017.html#section-8.2.2\n+            \/\/ Step 4 suggests comparing the encoded message\n@@ -216,0 +219,2 @@\n+            byte[] encoded = RSAUtil.encodeSignature(digestOID, digest);\n+            byte[] padded = padding.pad(encoded);\n@@ -217,5 +222,0 @@\n-            RSAPadding.Output po = padding.unpad(decrypted);\n-            \/\/ https:\/\/www.rfc-editor.org\/rfc\/rfc8017.html#section-8.2.2\n-            \/\/ Step 4 suggests comparing the encoded message instead of the\n-            byte[] encodedDigest = RSAUtil.encodeSignature(digestOID,\n-                    digest);\n@@ -223,2 +223,10 @@\n-            return po.status() &&\n-                    MessageDigest.isEqual(encodedDigest, po.result());\n+            boolean status = MessageDigest.isEqual(padded, decrypted);\n+            if (!status) {\n+                \/\/ fall back to the decode approach for max compatibility\n+                byte[] unpadded = padding.unpad(decrypted);\n+                if (unpadded != null) {\n+                    status = MessageDigest.isEqual(digest,\n+                            RSAUtil.decodeSignature(digestOID, unpadded));\n+                }\n+            }\n+            return status;\n@@ -227,0 +235,2 @@\n+        } catch (IOException e) {\n+            throw new SignatureException(\"Signature encoding error\", e);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/rsa\/RSASignature.java","additions":20,"deletions":10,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -762,4 +762,2 @@\n-            RSAPadding.Output po = padding.pad(data);\n-            if (po.status()) {\n-                return po.result();\n-            } else {\n+            byte[] result = padding.pad(data);\n+            if (result == null) {\n@@ -768,0 +766,1 @@\n+            return result;\n","filename":"src\/jdk.crypto.cryptoki\/share\/classes\/sun\/security\/pkcs11\/P11Signature.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -26,2 +26,1 @@\n- * @summary Ensure that RSAPadding class refactoring w\/ RSAPadding.Output\n- *         works as expected\n+ * @summary Ensure that RSAPadding class works as expected after refactoring\n@@ -50,2 +49,2 @@\n-            RSAPadding.Output po = padding.pad(data);\n-            if (!po.status()) {\n+            byte[] paddedData = padding.pad(data);\n+            if (paddedData == null) {\n@@ -54,1 +53,0 @@\n-            byte[] paddedData = po.result();\n@@ -56,2 +54,2 @@\n-            po = padding.unpad(paddedData);\n-            if (!po.status()) {\n+            byte[] data2 = padding.unpad(paddedData);\n+            if (data2 == null) {\n@@ -60,1 +58,0 @@\n-            byte[] data2 = po.result();\n","filename":"test\/jdk\/sun\/security\/rsa\/RSAPaddingCheck.java","additions":5,"deletions":8,"binary":false,"changes":13,"status":"modified"}]}