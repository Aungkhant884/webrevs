{"files":[{"patch":"@@ -86,1 +86,4 @@\n-  collector()->mark_bitmap()->clear_region(hr);\n+  if (G1VerifyBitmaps) {\n+    collector()->mark_bitmap()->clear_region(hr);\n+  }\n+\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCCompactTask.cpp","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -214,0 +214,2 @@\n+  HeapWord* threshold = current->initialize_threshold();\n+  HeapWord* pre_addr;\n@@ -217,0 +219,2 @@\n+    pre_addr = next_addr;\n+\n@@ -236,1 +240,1 @@\n-      assert(_bitmap->is_marked(next_addr) || next_addr == limit, \"next_addr is the limit or is marked\");\n+      assert(next_addr == limit || _bitmap->is_marked(next_addr), \"next_addr is the limit or is marked\");\n@@ -240,0 +244,4 @@\n+\n+    if (next_addr > threshold) {\n+      threshold = current->cross_threshold(pre_addr, next_addr);\n+    }\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCPrepareTask.cpp","additions":9,"deletions":1,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -52,1 +52,0 @@\n-  uint size = G1CollectedHeap::heap()->max_regions();\n@@ -54,1 +53,2 @@\n-  for (uint i = 0; i < size; i++) {\n+  for (uint i = 0; i < _num_cache_entries; i++) {\n+    _cache[i].clear();\n","filename":"src\/hotspot\/share\/gc\/g1\/g1RegionMarkStatsCache.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -494,0 +494,1 @@\n+    reset_after_full_gc_common();\n","filename":"src\/hotspot\/share\/gc\/g1\/heapRegion.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}