{"files":[{"patch":"@@ -1258,1 +1258,1 @@\n-            KrbException ke = new KrbException(\"Cannot locate KDC\");\n+            KrbException ke = new KrbException(\"Cannot locate KDC for \" + realm);\n","filename":"src\/java.security.jgss\/share\/classes\/sun\/security\/krb5\/Config.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -329,0 +329,1 @@\n+        KrbException ke = null;\n@@ -334,0 +335,1 @@\n+                ke = e;\n@@ -338,3 +340,13 @@\n-        return serviceCredsSingle(options, asCreds, cname,\n-                asCreds.getClientAlias(), sname, sname, s4u2Type,\n-                user, additionalCreds, extraPAs);\n+        try {\n+            return serviceCredsSingle(options, asCreds, cname,\n+                    asCreds.getClientAlias(), sname, sname, s4u2Type,\n+                    user, additionalCreds, extraPAs);\n+        } catch (KrbException ke2) {\n+            if (ke != null) {\n+                \/\/ Still throw original exception\n+                ke.addSuppressed(ke2);\n+                throw ke;\n+            } else {\n+                throw ke2;\n+            }\n+        }\n","filename":"src\/java.security.jgss\/share\/classes\/sun\/security\/krb5\/internal\/CredentialsUtil.java","additions":16,"deletions":4,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2021, Red Hat, Inc.\n+ * Copyright (c) 2019, 2023, Red Hat, Inc.\n@@ -26,1 +26,1 @@\n- * @bug 8215032\n+ * @bug 8215032 8308540\n@@ -32,1 +32,0 @@\n-import java.io.File;\n@@ -54,0 +53,2 @@\n+    private static final String krbConfigNameOnlyOne =\n+            \"krb5-localkdc-onlyone.conf\";\n@@ -101,10 +102,7 @@\n-        try {\n-            initializeKDCs();\n-            testSubjectCredentials();\n-            testDelegation();\n-            testImpersonation();\n-            testDelegationWithReferrals();\n-            testNoCanonicalize();\n-        } finally {\n-            cleanup();\n-        }\n+        initializeKDCs();\n+        testSubjectCredentials();\n+        testDelegation();\n+        testImpersonation();\n+        testDelegationWithReferrals();\n+        testNoCanonicalize();\n+        testOnlyOne();\n@@ -150,0 +148,2 @@\n+        KDC.saveConfig(krbConfigNameOnlyOne, kdc1,\n+                \"forwardable=true\", \"canonicalize=true\");\n@@ -153,11 +153,0 @@\n-    private static void cleanup() {\n-        String[] configFiles = new String[]{krbConfigName,\n-                krbConfigNameNoCanonicalize};\n-        for (String configFile : configFiles) {\n-            File f = new File(configFile);\n-            if (f.exists()) {\n-                f.delete();\n-            }\n-        }\n-    }\n-\n@@ -378,0 +367,17 @@\n+\n+    \/\/ For JDK-8308540. When a KDC is not found, provide better error info.\n+    private static void testOnlyOne() throws Exception {\n+        System.setProperty(\"java.security.krb5.conf\", krbConfigNameOnlyOne);\n+        Config.refresh();\n+        Context c = Context.fromUserPass(userKDC1Name, password, false);\n+        c.startAsClient(serviceName, GSSUtil.GSS_KRB5_MECH_OID);\n+        try {\n+            Context.handshake(c, null);\n+            throw new RuntimeException(\"Should not succeed\");\n+        } catch (Exception le) {\n+            if (le.getMessage().contains(\"Cannot locate KDC for DEV.RABBIT.HOLE\")) {\n+                return;\n+            }\n+            throw le;\n+        }\n+    }\n","filename":"test\/jdk\/sun\/security\/krb5\/auto\/ReferralsTest.java","additions":30,"deletions":24,"binary":false,"changes":54,"status":"modified"}]}