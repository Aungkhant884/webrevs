{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -113,2 +113,2 @@\n-        sb.append(\"  Trust Anchor: \" + getTrustAnchor().toString() + \"\\n\");\n-        sb.append(\"  Policy Tree: \" + String.valueOf(getPolicyTree()) + \"\\n\");\n+        sb.append(\"  Trust Anchor: \" + getTrustAnchor() + \"\\n\");\n+        sb.append(\"  Policy Tree: \" + getPolicyTree() + \"\\n\");\n","filename":"src\/java.base\/share\/classes\/java\/security\/cert\/PKIXCertPathBuilderResult.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -153,2 +153,2 @@\n-        sb.append(\"  Trust Anchor: \" + trustAnchor.toString() + \"\\n\");\n-        sb.append(\"  Policy Tree: \" + String.valueOf(policyTree) + \"\\n\");\n+        sb.append(\"  Trust Anchor: \" + trustAnchor + \"\\n\");\n+        sb.append(\"  Policy Tree: \" + policyTree + \"\\n\");\n","filename":"src\/java.base\/share\/classes\/java\/security\/cert\/PKIXCertPathValidatorResult.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -699,2 +699,1 @@\n-            sb.append(\"  Trust Anchors: \" + unmodTrustAnchors.toString()\n-                + \"\\n\");\n+            sb.append(\"  Trust Anchors: \" + unmodTrustAnchors + \"\\n\");\n@@ -709,1 +708,1 @@\n-                    + unmodInitialPolicies.toString() + \"]\\n\");\n+                    + unmodInitialPolicies + \"]\\n\");\n@@ -714,2 +713,2 @@\n-        sb.append(\"  Validity Date: \" + String.valueOf(date) + \"\\n\");\n-        sb.append(\"  Signature Provider: \" + String.valueOf(sigProvider) + \"\\n\");\n+        sb.append(\"  Validity Date: \" + date + \"\\n\");\n+        sb.append(\"  Signature Provider: \" + sigProvider + \"\\n\");\n@@ -723,1 +722,1 @@\n-        sb.append(\"  Target Cert Constraints: \" + String.valueOf(certSelector) + \"\\n\");\n+        sb.append(\"  Target Cert Constraints: \" + certSelector + \"\\n\");\n@@ -728,1 +727,1 @@\n-                + certPathCheckers.toString() + \"]\\n\");\n+                + certPathCheckers + \"]\\n\");\n@@ -730,1 +729,1 @@\n-            sb.append(\"  CertStores: [\" + certStores.toString() + \"]\\n\");\n+            sb.append(\"  CertStores: [\" + certStores + \"]\\n\");\n","filename":"src\/java.base\/share\/classes\/java\/security\/cert\/PKIXParameters.java","additions":7,"deletions":8,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,1 +35,0 @@\n-import sun.security.x509.X500Name;\n@@ -330,3 +329,2 @@\n-            sb.append(\"  Trusted CA Public Key: \" + pubKey.toString() + \"\\n\");\n-            sb.append(\"  Trusted CA Issuer Name: \"\n-                + String.valueOf(caName) + \"\\n\");\n+            sb.append(\"  Trusted CA Public Key: \" + pubKey + \"\\n\");\n+            sb.append(\"  Trusted CA Issuer Name: \" + caName + \"\\n\");\n@@ -334,1 +332,1 @@\n-            sb.append(\"  Trusted CA cert: \" + trustedCert.toString() + \"\\n\");\n+            sb.append(\"  Trusted CA cert: \" + trustedCert + \"\\n\");\n@@ -337,1 +335,1 @@\n-            sb.append(\"  Name Constraints: \" + nc.toString() + \"\\n\");\n+            sb.append(\"  Name Constraints: \" + nc + \"\\n\");\n","filename":"src\/java.base\/share\/classes\/java\/security\/cert\/TrustAnchor.java","additions":5,"deletions":7,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -1766,1 +1766,1 @@\n-            sb.append(\"  Certificate: \" + x509Cert.toString() + \"\\n\");\n+            sb.append(\"  Certificate: \" + x509Cert + \"\\n\");\n@@ -1769,1 +1769,1 @@\n-            sb.append(\"  Serial Number: \" + serialNumber.toString() + \"\\n\");\n+            sb.append(\"  Serial Number: \" + serialNumber + \"\\n\");\n@@ -1778,1 +1778,1 @@\n-                  + String.valueOf(matchAllSubjectAltNames) + \"\\n\");\n+                  + matchAllSubjectAltNames + \"\\n\");\n@@ -1798,1 +1798,1 @@\n-                      certificateValid.toString() + \"\\n\");\n+                      certificateValid + \"\\n\");\n@@ -1802,1 +1802,1 @@\n-                      privateKeyValid.toString() + \"\\n\");\n+                      privateKeyValid + \"\\n\");\n@@ -1806,1 +1806,1 @@\n-                      subjectPublicKeyAlgID.toString() + \"\\n\");\n+                      subjectPublicKeyAlgID + \"\\n\");\n@@ -1810,1 +1810,1 @@\n-                      subjectPublicKey.toString() + \"\\n\");\n+                      subjectPublicKey + \"\\n\");\n@@ -1817,1 +1817,1 @@\n-                      keyPurposeSet.toString() + \"\\n\");\n+                      keyPurposeSet + \"\\n\");\n@@ -1820,1 +1820,1 @@\n-            sb.append(\"  Policy: \" + policy.toString() + \"\\n\");\n+            sb.append(\"  Policy: \" + policy + \"\\n\");\n@@ -2148,1 +2148,1 @@\n-                    + this.toString());\n+                    + this);\n@@ -2156,1 +2156,1 @@\n-                    + this.toString());\n+                    + this);\n","filename":"src\/java.base\/share\/classes\/java\/security\/cert\/X509CertSelector.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2836,1 +2836,1 @@\n-                sb.append(\"error:\").append(Integer.toString(opmode));\n+                sb.append(\"error:\").append(opmode);\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/Cipher.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -398,1 +398,1 @@\n-                                       \"number \"+String.valueOf(st.nval));\n+                                       \"number \" + st.nval);\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/CryptoPolicyParser.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -736,2 +736,1 @@\n-                LocalizedMessage.getNonlocalized(\"number.\") +\n-                    String.valueOf(st.nval));\n+                LocalizedMessage.getNonlocalized(\"number.\") + st.nval);\n@@ -829,2 +828,1 @@\n-                        LocalizedMessage.getNonlocalized(\"number.\") +\n-                            String.valueOf(st.nval));\n+                        LocalizedMessage.getNonlocalized(\"number.\") + st.nval);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/PolicyParser.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,0 @@\n-import java.security.AccessController;\n@@ -340,1 +339,1 @@\n-                + String.valueOf(constraints));\n+                + constraints);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/certpath\/Builder.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -188,1 +188,1 @@\n-                        \", newNC = \" + String.valueOf(newConstraints));\n+                        \", newNC = \" + newConstraints);\n@@ -195,1 +195,1 @@\n-                debug.println(\"mergedNC = \" + String.valueOf(newConstraints));\n+                debug.println(\"mergedNC = \" + newConstraints);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/certpath\/ConstraintsChecker.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,0 @@\n-import java.security.cert.PKIXBuilderParameters;\n@@ -601,2 +600,2 @@\n-                    debug.println(METHOD_NME +\" tAo1: \" + String.valueOf(tAo1));\n-                    debug.println(METHOD_NME +\" tAo2: \" + String.valueOf(tAo2));\n+                    debug.println(METHOD_NME +\" tAo1: \" + tAo1);\n+                    debug.println(METHOD_NME +\" tAo2: \" + tAo2);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/certpath\/ForwardBuilder.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2012, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -120,3 +120,2 @@\n-        sb.append(\"\\n  init: \").append(String.valueOf(init));\n-        sb.append(\"\\n  keyParamsNeeded: \").append\n-                 (String.valueOf(keyParamsNeededFlag));\n+        sb.append(\"\\n  init: \").append(init);\n+        sb.append(\"\\n  keyParamsNeeded: \").append(keyParamsNeededFlag);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/certpath\/ForwardState.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -173,1 +173,1 @@\n-            String.valueOf(names) + \"]\\n\";\n+            names + \"]\\n\";\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/CertificateIssuerExtension.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -171,1 +171,1 @@\n-        return super.toString() + \"    Invalidity Date: \" + String.valueOf(date);\n+        return super.toString() + \"    Invalidity Date: \" + date;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/InvalidityDateExtension.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}