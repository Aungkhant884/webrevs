{"files":[{"patch":"@@ -547,0 +547,1 @@\n+                        \/\/ if all patterns are the same we do not need an extra test for the first (it is covered by the BSM)\n@@ -598,1 +599,4 @@\n-                for (var p : c.labels) {\n+                List<JCCaseLabel> labels = c.labels;\n+                boolean defaultAdded = false;\n+                for (int j = 0; j < labels.size() && !defaultAdded; j++) {\n+                    var p = labels.get(j);\n@@ -603,1 +607,1 @@\n-                               c == lastCase && p.hasTag(Tag.PATTERNCASELABEL)) {\n+                            c == lastCase && p.hasTag(Tag.PATTERNCASELABEL)) {\n@@ -608,0 +612,1 @@\n+                        defaultAdded = true;\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/TransPatterns.java","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -44,0 +44,3 @@\n+        assertEquals(1, testMixUnconditionalAndConditional(new R1()));\n+        assertEquals(2, testMixUnconditionalAndConditional(new R2()));\n+        assertEquals(2, testMixUnconditionalAndConditional(new R3()));\n@@ -148,0 +151,7 @@\n+    int testMixUnconditionalAndConditional(Base t) {\n+        return switch(t) {\n+            case R1 _ -> 1;\n+            case R2 _, Base _-> 2;\n+        };\n+    }\n+\n@@ -177,1 +187,0 @@\n-\n","filename":"test\/langtools\/tools\/javac\/patterns\/Unnamed.java","additions":10,"deletions":1,"binary":false,"changes":11,"status":"modified"}]}