{"files":[{"patch":"@@ -71,0 +71,2 @@\n+        @JEP(number=443, title=\"Unnamed Patterns and Variables\")\n+        UNNAMED,\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/javac\/PreviewFeature.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,0 +28,2 @@\n+import jdk.internal.javac.PreviewFeature;\n+\n@@ -99,0 +101,10 @@\n+\n+    \/**\n+     * {@return {@code true} if this is an unnamed variable and {@code\n+     * false} otherwise}\n+     *\n+     * @jls 6.1 Declarations\n+     * @jls 14.4 Local Variable Declarations\n+     *\/\n+    @PreviewFeature(feature=PreviewFeature.Feature.UNNAMED, reflective = true)\n+    default boolean isUnnamed() { return false; }\n","filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/element\/VariableElement.java","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -28,0 +28,2 @@\n+import jdk.internal.javac.PreviewFeature;\n+\n@@ -716,1 +718,2 @@\n-    default boolean hasEmptyName(Element element) {\n+    @PreviewFeature(feature=PreviewFeature.Feature.UNNAMED, reflective = true)\n+    default boolean isUnnamed(Element element) {\n","filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/util\/Elements.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -87,1 +87,1 @@\n-                    stringName != stringName2 || eltUtils.hasEmptyName(stringMirror2))\n+                    stringName != stringName2)\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/element\/TestNames.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @enablePreview\n@@ -84,1 +85,1 @@\n-            if (!elements.hasEmptyName(element)) {\n+            if (!elements.isUnnamed(element)) {\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/element\/TestUnnamedVariableElement.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"}]}