{"files":[{"patch":"@@ -825,2 +825,6 @@\n-                UnnamedDetails result = identOrFlagUnderscore(mods);\n-                JCVariableDecl var = toP(F.at(result.varPos()).VarDef(mods, result.name(), e, null));\n+                int varPos = token.pos;\n+                Name name = identOrUnderscore();\n+                if (name == names.underscore) {\n+                    mods.flags |= Flags.UNNAMED;\n+                }\n+                JCVariableDecl var = toP(F.at(varPos).VarDef(mods, name, e, null));\n@@ -829,2 +833,2 @@\n-                    if (result.name() == names.underscore) {\n-                        log.error(DiagnosticFlag.SYNTAX, result.varPos(), Errors.UnderscoreAsIdentifier);\n+                    if (name == names.underscore) {\n+                        log.error(DiagnosticFlag.SYNTAX, varPos, Errors.UnderscoreAsIdentifier);\n@@ -839,14 +843,0 @@\n-    private UnnamedDetails identOrFlagUnderscore(JCModifiers mods) {\n-        int varPos = token.pos;\n-        Name name = identOrUnderscore();\n-        if (name == names.underscore) {\n-            mods.flags |= Flags.UNNAMED;\n-        }\n-        UnnamedDetails result = new UnnamedDetails(varPos, name);\n-        return result;\n-    }\n-\n-    private record UnnamedDetails(int varPos, Name name) {\n-    }\n-\n-\n@@ -3521,2 +3511,1 @@\n-        UnnamedDetails result = identOrFlagUnderscore(mods);\n-        return variableDeclaratorsRest(result.varPos(), mods, type, result.name(), false, null, vdefs, localDecl);\n+        return variableDeclaratorsRest(token.pos, mods, type, identOrUnderscore(), false, null, vdefs, localDecl);\n@@ -3555,5 +3544,1 @@\n-        UnnamedDetails result = identOrFlagUnderscore(mods);\n-        if (!localDecl && result.name() == names.underscore) {\n-            log.error(DiagnosticFlag.SYNTAX, result.varPos(), Errors.UnderscoreAsIdentifier);\n-        }\n-        return variableDeclaratorRest(result.varPos(), mods, type, result.name(), reqInit, dc, localDecl, true);\n+        return variableDeclaratorRest(token.pos, mods, type, identOrUnderscore(), reqInit, dc, localDecl, true);\n@@ -3573,0 +3558,8 @@\n+\n+        if (Feature.UNNAMED_VARIABLES.allowedInSource(source) && name == names.underscore) {\n+            mods.flags |= Flags.UNNAMED;\n+            if (!localDecl) {\n+                log.error(DiagnosticFlag.SYNTAX, pos, Errors.UnderscoreAsIdentifier);\n+            }\n+        }\n+\n@@ -3754,2 +3747,1 @@\n-            UnnamedDetails result = identOrFlagUnderscore(mods);\n-            return variableDeclaratorRest(result.varPos(), mods, t, result.name(), true, null, true, false);\n+            return variableDeclaratorRest(token.pos, mods, t, identOrUnderscore(), true, null, true, false);\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/parser\/JavacParser.java","additions":19,"deletions":27,"binary":false,"changes":46,"status":"modified"}]}