{"files":[{"patch":"@@ -2066,1 +2066,0 @@\n-\n@@ -2069,1 +2068,0 @@\n-        List<JCVariableDecl> params;\n@@ -2071,0 +2069,9 @@\n+        \/**\n+         * analyzeParens() has already classified the lambda as EXPLICIT_LAMBDA, due to\n+         * two consecutive identifiers. adding an erroneous parameter (one that\n+         * introduces a mixed implicit\/explicit state) does not need to class with\n+         * either:\n+         *\n+         *  - an explicit parameter, or\n+         *  - one declared with var\n+         * *\/\n@@ -2072,9 +2079,3 @@\n-            if (param.vartype != null && param.name != names.error) {\n-                if (restrictedTypeName(param.vartype, false) != null) {\n-                    reduce(LambdaParameterKind.VAR);\n-                } else {\n-                    reduce(LambdaParameterKind.EXPLICIT);\n-                }\n-            }\n-            if (param.vartype == null && param.name != names.error ||\n-                param.vartype != null && param.name == names.error) {\n+            Assert.check(param.vartype != null);\n+\n+            if (param.name == names.error) {\n@@ -2082,0 +2083,7 @@\n+                return;\n+            }\n+\n+            if (restrictedTypeName(param.vartype, false) != null) {\n+                reduce(LambdaParameterKind.VAR);\n+            } else {\n+                reduce(LambdaParameterKind.EXPLICIT);\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/parser\/JavacParser.java","additions":19,"deletions":11,"binary":false,"changes":30,"status":"modified"}]}