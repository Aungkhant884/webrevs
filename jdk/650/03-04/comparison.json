{"files":[{"patch":"@@ -0,0 +1,413 @@\n+\/*\n+ * Copyright (c) 2020, Red Hat, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8253525\n+ * @summary Test for fInst.getObjectSize with 32-bit compressed oops\n+ * @library \/test\/lib\n+ *\n+ * @build sun.hotspot.WhiteBox\n+ * @run build GetObjectSizeIntrinsicsTest\n+ * @run shell MakeJAR.sh basicAgent\n+ *\n+ * @run driver ClassFileInstaller sun.hotspot.WhiteBox\n+ *\n+ * @run main\/othervm -Xmx128m\n+ *                   -XX:+UnlockDiagnosticVMOptions -XX:+AbortVMOnCompilationFailure -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n+ *                   -Xint\n+ *                   -javaagent:basicAgent.jar GetObjectSizeIntrinsicsTest GetObjectSizeIntrinsicsTest\n+ *\n+ * @run main\/othervm -Xmx128m\n+ *                   -XX:+UnlockDiagnosticVMOptions -XX:+AbortVMOnCompilationFailure -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n+ *                   -XX:TieredStopAtLevel=1\n+ *                   -javaagent:basicAgent.jar GetObjectSizeIntrinsicsTest GetObjectSizeIntrinsicsTest\n+ *\n+ * @run main\/othervm -Xmx128m\n+ *                   -XX:+UnlockDiagnosticVMOptions -XX:+AbortVMOnCompilationFailure -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n+ *                   -XX:-TieredCompilation\n+ *                   -javaagent:basicAgent.jar GetObjectSizeIntrinsicsTest GetObjectSizeIntrinsicsTest\n+ *\/\n+\n+\/*\n+ * @test\n+ * @summary Test for fInst.getObjectSize with zero-based compressed oops\n+ * @library \/test\/lib\n+ * @requires vm.bits == 64\n+ *\n+ * @build sun.hotspot.WhiteBox\n+ * @run build GetObjectSizeIntrinsicsTest\n+ * @run shell MakeJAR.sh basicAgent\n+ *\n+ * @run driver ClassFileInstaller sun.hotspot.WhiteBox\n+ *\n+ * @run main\/othervm -Xmx4g\n+ *                   -XX:+UnlockDiagnosticVMOptions -XX:+AbortVMOnCompilationFailure -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n+ *                   -Xint\n+ *                   -javaagent:basicAgent.jar GetObjectSizeIntrinsicsTest GetObjectSizeIntrinsicsTest\n+ *\n+ * @run main\/othervm -Xmx4g\n+ *                   -XX:+UnlockDiagnosticVMOptions -XX:+AbortVMOnCompilationFailure -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n+ *                   -XX:TieredStopAtLevel=1\n+ *                   -javaagent:basicAgent.jar GetObjectSizeIntrinsicsTest GetObjectSizeIntrinsicsTest\n+ *\n+ * @run main\/othervm -Xmx4g\n+ *                   -XX:+UnlockDiagnosticVMOptions -XX:+AbortVMOnCompilationFailure -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n+ *                   -XX:-TieredCompilation\n+ *                   -javaagent:basicAgent.jar GetObjectSizeIntrinsicsTest GetObjectSizeIntrinsicsTest\n+ *\/\n+\n+\/*\n+ * @test\n+ * @summary Test for fInst.getObjectSize without compressed oops\n+ * @library \/test\/lib\n+ * @requires vm.bits == 64\n+ *\n+ * @build sun.hotspot.WhiteBox\n+ * @run build GetObjectSizeIntrinsicsTest\n+ * @run shell MakeJAR.sh basicAgent\n+ *\n+ * @run driver ClassFileInstaller sun.hotspot.WhiteBox\n+ *\n+ * @run main\/othervm -Xmx128m -XX:-UseCompressedOops\n+ *                   -XX:+UnlockDiagnosticVMOptions -XX:+AbortVMOnCompilationFailure -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n+ *                   -Xint\n+ *                   -javaagent:basicAgent.jar GetObjectSizeIntrinsicsTest GetObjectSizeIntrinsicsTest\n+ *\n+ * @run main\/othervm -Xmx128m -XX:-UseCompressedOops\n+ *                   -XX:+UnlockDiagnosticVMOptions -XX:+AbortVMOnCompilationFailure -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n+ *                   -XX:TieredStopAtLevel=1\n+ *                   -javaagent:basicAgent.jar GetObjectSizeIntrinsicsTest GetObjectSizeIntrinsicsTest\n+ *\n+ * @run main\/othervm -Xmx128m -XX:-UseCompressedOops\n+ *                   -XX:+UnlockDiagnosticVMOptions -XX:+AbortVMOnCompilationFailure -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n+ *                   -XX:-TieredCompilation\n+ *                   -javaagent:basicAgent.jar GetObjectSizeIntrinsicsTest GetObjectSizeIntrinsicsTest\n+ *\/\n+\n+\/*\n+ * @test\n+ * @summary Test for fInst.getObjectSize with 32-bit compressed oops\n+ * @library \/test\/lib\n+ * @requires vm.debug\n+ *\n+ * @build sun.hotspot.WhiteBox\n+ * @run build GetObjectSizeIntrinsicsTest\n+ * @run shell MakeJAR.sh basicAgent\n+ *\n+ * @run driver ClassFileInstaller sun.hotspot.WhiteBox\n+ *\n+ * @run main\/othervm -Xmx128m\n+ *                   -XX:+UnlockDiagnosticVMOptions -XX:+AbortVMOnCompilationFailure -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n+ *                   -XX:FastAllocateSizeLimit=0\n+ *                   -Xint\n+ *                   -javaagent:basicAgent.jar GetObjectSizeIntrinsicsTest GetObjectSizeIntrinsicsTest\n+ *\n+ * @run main\/othervm -Xmx128m\n+ *                   -XX:+UnlockDiagnosticVMOptions -XX:+AbortVMOnCompilationFailure -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n+ *                   -XX:FastAllocateSizeLimit=0\n+ *                   -XX:TieredStopAtLevel=1\n+ *                   -javaagent:basicAgent.jar GetObjectSizeIntrinsicsTest GetObjectSizeIntrinsicsTest\n+ *\n+ * @run main\/othervm -Xmx128m\n+ *                   -XX:+UnlockDiagnosticVMOptions -XX:+AbortVMOnCompilationFailure -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n+ *                   -XX:FastAllocateSizeLimit=0\n+ *                   -XX:-TieredCompilation\n+ *                   -javaagent:basicAgent.jar GetObjectSizeIntrinsicsTest GetObjectSizeIntrinsicsTest\n+ *\/\n+\n+\/*\n+ * @test\n+ * @summary Test for fInst.getObjectSize with zero-based compressed oops\n+ * @library \/test\/lib\n+ * @requires vm.bits == 64\n+ * @requires vm.debug\n+ *\n+ * @build sun.hotspot.WhiteBox\n+ * @run build GetObjectSizeIntrinsicsTest\n+ * @run shell MakeJAR.sh basicAgent\n+ *\n+ * @run driver ClassFileInstaller sun.hotspot.WhiteBox\n+ *\n+ * @run main\/othervm -Xmx4g\n+ *                   -XX:+UnlockDiagnosticVMOptions -XX:+AbortVMOnCompilationFailure -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n+ *                   -XX:FastAllocateSizeLimit=0\n+ *                   -Xint\n+ *                   -javaagent:basicAgent.jar GetObjectSizeIntrinsicsTest GetObjectSizeIntrinsicsTest\n+ *\n+ * @run main\/othervm -Xmx4g\n+ *                   -XX:+UnlockDiagnosticVMOptions -XX:+AbortVMOnCompilationFailure -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n+ *                   -XX:FastAllocateSizeLimit=0\n+ *                   -XX:TieredStopAtLevel=1\n+ *                   -javaagent:basicAgent.jar GetObjectSizeIntrinsicsTest GetObjectSizeIntrinsicsTest\n+ *\n+ * @run main\/othervm -Xmx4g\n+ *                   -XX:+UnlockDiagnosticVMOptions -XX:+AbortVMOnCompilationFailure -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n+ *                   -XX:FastAllocateSizeLimit=0\n+ *                   -XX:-TieredCompilation\n+ *                   -javaagent:basicAgent.jar GetObjectSizeIntrinsicsTest GetObjectSizeIntrinsicsTest\n+ *\/\n+\n+\/*\n+ * @test\n+ * @summary Test for fInst.getObjectSize without compressed oops\n+ * @library \/test\/lib\n+ * @requires vm.bits == 64\n+ * @requires vm.debug\n+ *\n+ * @build sun.hotspot.WhiteBox\n+ * @run build GetObjectSizeIntrinsicsTest\n+ * @run shell MakeJAR.sh basicAgent\n+ *\n+ * @run driver ClassFileInstaller sun.hotspot.WhiteBox\n+ *\n+ * @run main\/othervm -Xmx128m -XX:-UseCompressedOops\n+ *                   -XX:+UnlockDiagnosticVMOptions -XX:+AbortVMOnCompilationFailure -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n+ *                   -XX:FastAllocateSizeLimit=0\n+ *                   -Xint\n+ *                   -javaagent:basicAgent.jar GetObjectSizeIntrinsicsTest GetObjectSizeIntrinsicsTest\n+ *\n+ * @run main\/othervm -Xmx128m -XX:-UseCompressedOops\n+ *                   -XX:+UnlockDiagnosticVMOptions -XX:+AbortVMOnCompilationFailure -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n+ *                   -XX:FastAllocateSizeLimit=0\n+ *                   -XX:TieredStopAtLevel=1\n+ *                   -javaagent:basicAgent.jar GetObjectSizeIntrinsicsTest GetObjectSizeIntrinsicsTest\n+ *\n+ * @run main\/othervm -Xmx128m -XX:-UseCompressedOops\n+ *                   -XX:+UnlockDiagnosticVMOptions -XX:+AbortVMOnCompilationFailure -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n+ *                   -XX:FastAllocateSizeLimit=0\n+ *                   -XX:-TieredCompilation\n+ *                   -javaagent:basicAgent.jar GetObjectSizeIntrinsicsTest GetObjectSizeIntrinsicsTest\n+ *\/\n+\n+\/*\n+ * @test\n+ * @summary Test for fInst.getObjectSize with 32-bit compressed oops\n+ * @library \/test\/lib\n+ * @requires vm.bits == 64\n+ * @requires vm.debug\n+ *\n+ * @build sun.hotspot.WhiteBox\n+ * @run build GetObjectSizeIntrinsicsTest\n+ * @run shell MakeJAR.sh basicAgent\n+ *\n+ * @run driver ClassFileInstaller sun.hotspot.WhiteBox\n+ *\n+ * @run main\/othervm -Xmx128m\n+ *                   -XX:+UnlockDiagnosticVMOptions -XX:+AbortVMOnCompilationFailure -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n+ *                   -XX:ObjectAlignmentInBytes=32\n+ *                   -Xint\n+ *                   -javaagent:basicAgent.jar GetObjectSizeIntrinsicsTest GetObjectSizeIntrinsicsTest\n+ *\n+ * @run main\/othervm -Xmx128m\n+ *                   -XX:+UnlockDiagnosticVMOptions -XX:+AbortVMOnCompilationFailure -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n+ *                   -XX:ObjectAlignmentInBytes=32\n+ *                   -XX:TieredStopAtLevel=1\n+ *                   -javaagent:basicAgent.jar GetObjectSizeIntrinsicsTest GetObjectSizeIntrinsicsTest\n+ *\n+ * @run main\/othervm -Xmx128m\n+ *                   -XX:+UnlockDiagnosticVMOptions -XX:+AbortVMOnCompilationFailure -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n+ *                   -XX:ObjectAlignmentInBytes=32\n+ *                   -XX:-TieredCompilation\n+ *                   -javaagent:basicAgent.jar GetObjectSizeIntrinsicsTest GetObjectSizeIntrinsicsTest\n+ *\/\n+\n+\/*\n+ * @test\n+ * @summary Test for fInst.getObjectSize with zero-based compressed oops\n+ * @library \/test\/lib\n+ * @requires vm.bits == 64\n+ * @requires vm.debug\n+ *\n+ * @build sun.hotspot.WhiteBox\n+ * @run build GetObjectSizeIntrinsicsTest\n+ * @run shell MakeJAR.sh basicAgent\n+ *\n+ * @run driver ClassFileInstaller sun.hotspot.WhiteBox\n+ *\n+ * @run main\/othervm -Xmx4g\n+ *                   -XX:+UnlockDiagnosticVMOptions -XX:+AbortVMOnCompilationFailure -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n+ *                   -XX:ObjectAlignmentInBytes=32\n+ *                   -Xint\n+ *                   -javaagent:basicAgent.jar GetObjectSizeIntrinsicsTest GetObjectSizeIntrinsicsTest\n+ *\n+ * @run main\/othervm -Xmx4g\n+ *                   -XX:+UnlockDiagnosticVMOptions -XX:+AbortVMOnCompilationFailure -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n+ *                   -XX:ObjectAlignmentInBytes=32\n+ *                   -XX:TieredStopAtLevel=1\n+ *                   -javaagent:basicAgent.jar GetObjectSizeIntrinsicsTest GetObjectSizeIntrinsicsTest\n+ *\n+ * @run main\/othervm -Xmx4g\n+ *                   -XX:+UnlockDiagnosticVMOptions -XX:+AbortVMOnCompilationFailure -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n+ *                   -XX:ObjectAlignmentInBytes=32\n+ *                   -XX:-TieredCompilation\n+ *                   -javaagent:basicAgent.jar GetObjectSizeIntrinsicsTest GetObjectSizeIntrinsicsTest\n+ *\/\n+\n+import java.util.*;\n+\n+import jdk.test.lib.Platform;\n+import sun.hotspot.WhiteBox;\n+\n+public class GetObjectSizeIntrinsicsTest extends ASimpleInstrumentationTestCase {\n+\n+    static final Boolean compressedOops = WhiteBox.getWhiteBox().getBooleanVMFlag(\"UseCompressedOops\");\n+    static final int R = ((compressedOops == null) || (compressedOops == true)) ?  4 : 8;\n+\n+    static final Long align = WhiteBox.getWhiteBox().getIntxVMFlag(\"ObjectAlignmentInBytes\");\n+    static final int A = (align == null ? 8 : align.intValue());\n+\n+    public GetObjectSizeIntrinsicsTest(String name) {\n+        super(name);\n+    }\n+\n+    public static void main(String[] args)throws Throwable {\n+        new GetObjectSizeIntrinsicsTest(args[0]).runTest();\n+    }\n+\n+    public static final int ITERS = 1_000_000;\n+\n+    public static void assertEquals(long expected, long actual) {\n+        if (expected != actual) {\n+            throw new IllegalStateException(\n+               \"Error: expected: \" + expected + \" (\" + Long.toHexString(expected) +\n+                \"), actual: \" + actual + \" (\" + Long.toHexString(actual) + \")\");\n+        }\n+    }\n+\n+    public static void assertNotEquals(long notExpected, long actual) {\n+        if (notExpected == actual) {\n+            throw new IllegalStateException(\n+               \"Error: not expected: \" + notExpected + \" (\" + Long.toHexString(notExpected) +\n+                \"), actual: \" + actual + \" (\" + Long.toHexString(actual) + \")\");\n+        }\n+    }\n+\n+    public static void assertFail() {\n+        throw new IllegalStateException(\"Should not be here\");\n+    }\n+\n+    protected final void doRunTest() throws Throwable {\n+        testSize_newObject();\n+        testSize_localObject();\n+        testSize_fieldObject();\n+\n+        testSize_newSmallByteArray();\n+        testSize_localSmallByteArray();\n+        testSize_fieldSmallByteArray();\n+\n+        testSize_newSmallObjArray();\n+        testSize_localSmallObjArray();\n+        testSize_fieldSmallObjArray();\n+\n+        testNulls();\n+    }\n+\n+    private static int roundUp(int v, int a) {\n+        return (v + a - 1) \/ a * a;\n+    }\n+\n+    private void testSize_newObject() {\n+        int expected = roundUp(Platform.is64bit() ? 16 : 8, A);\n+        for (int c = 0; c < ITERS; c++) {\n+            assertEquals(expected, fInst.getObjectSize(new Object()));\n+        }\n+    }\n+\n+    private void testSize_localObject() {\n+        int expected = roundUp(Platform.is64bit() ? 16 : 8, A);\n+        Object o = new Object();\n+        for (int c = 0; c < ITERS; c++) {\n+            assertEquals(expected, fInst.getObjectSize(o));\n+        }\n+    }\n+\n+    static Object staticO = new Object();\n+\n+    private void testSize_fieldObject() {\n+        int expected = roundUp(Platform.is64bit() ? 16 : 8, A);\n+        for (int c = 0; c < ITERS; c++) {\n+            assertEquals(expected, fInst.getObjectSize(staticO));\n+        }\n+    }\n+\n+    private void testSize_newSmallByteArray() {\n+        int expected = roundUp(1024 + 16, A);\n+        for (int c = 0; c < ITERS; c++) {\n+            assertEquals(expected, fInst.getObjectSize(new byte[1024]));\n+        }\n+    }\n+\n+    private void testSize_localSmallByteArray() {\n+        byte[] arr = new byte[1024];\n+        int expected = roundUp(arr.length + 16, A);\n+        for (int c = 0; c < ITERS; c++) {\n+            assertEquals(expected, fInst.getObjectSize(arr));\n+        }\n+    }\n+\n+    static byte[] smallArr = new byte[1024];\n+\n+    private void testSize_fieldSmallByteArray() {\n+        int expected = roundUp(smallArr.length + 16, A);\n+        for (int c = 0; c < ITERS; c++) {\n+            assertEquals(expected, fInst.getObjectSize(smallArr));\n+        }\n+    }\n+\n+    private void testSize_newSmallObjArray() {\n+        int expected = roundUp(1024*R + 16, A);\n+        for (int c = 0; c < ITERS; c++) {\n+            assertEquals(expected, fInst.getObjectSize(new Object[1024]));\n+        }\n+    }\n+\n+    private void testSize_localSmallObjArray() {\n+        Object[] arr = new Object[1024];\n+        int expected = roundUp(arr.length*R + 16, A);\n+        for (int c = 0; c < ITERS; c++) {\n+            assertEquals(expected, fInst.getObjectSize(arr));\n+        }\n+    }\n+\n+    static Object[] smallObjArr = new Object[1024];\n+\n+    private void testSize_fieldSmallObjArray() {\n+        int expected = roundUp(smallArr.length*R + 16, A);\n+        for (int c = 0; c < ITERS; c++) {\n+            assertEquals(expected, fInst.getObjectSize(smallObjArr));\n+        }\n+    }\n+\n+    private void testNulls() {\n+        for (int c = 0; c < ITERS; c++) {\n+            try {\n+                fInst.getObjectSize(null);\n+                assertFail();\n+            } catch (NullPointerException e) {\n+                \/\/ expected\n+            }\n+        }\n+    }\n+\n+}\n","filename":"test\/jdk\/java\/lang\/instrument\/GetObjectSizeIntrinsicsTest.java","additions":413,"deletions":0,"binary":false,"changes":413,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Red Hat, Inc. All rights reserved.\n+ * Copyright (c) 2003, 2015, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,85 +24,1 @@\n-\/*\n- * @test\n- * @bug 4882798 8253525\n- * @summary Test for fInst.getObjectSize with 32-bit compressed oops\n- * @library \/test\/lib\n- *\n- * @build sun.hotspot.WhiteBox\n- * @run build GetObjectSizeTest\n- * @run shell MakeJAR.sh basicAgent\n- *\n- * @run driver ClassFileInstaller sun.hotspot.WhiteBox\n- *\n- * @run main\/othervm -Xmx128m\n- *                   -XX:+UnlockDiagnosticVMOptions -XX:+AbortVMOnCompilationFailure -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n- *                   -Xint\n- *                   -javaagent:basicAgent.jar GetObjectSizeTest GetObjectSizeTest\n- *\n- * @run main\/othervm -Xmx128m\n- *                   -XX:+UnlockDiagnosticVMOptions -XX:+AbortVMOnCompilationFailure -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n- *                   -XX:TieredStopAtLevel=1\n- *                   -javaagent:basicAgent.jar GetObjectSizeTest GetObjectSizeTest\n- *\n- * @run main\/othervm -Xmx128m\n- *                   -XX:+UnlockDiagnosticVMOptions -XX:+AbortVMOnCompilationFailure -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n- *                   -XX:-TieredCompilation\n- *                   -javaagent:basicAgent.jar GetObjectSizeTest GetObjectSizeTest\n- *\/\n-\n-\/*\n- * @test\n- * @summary Test for fInst.getObjectSize with zero-based compressed oops\n- * @library \/test\/lib\n- * @requires vm.bits == 64\n- *\n- * @build sun.hotspot.WhiteBox\n- * @run build GetObjectSizeTest\n- * @run shell MakeJAR.sh basicAgent\n- *\n- * @run driver ClassFileInstaller sun.hotspot.WhiteBox\n- *\n- * @run main\/othervm -Xmx4g\n- *                   -XX:+UnlockDiagnosticVMOptions -XX:+AbortVMOnCompilationFailure -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n- *                   -Xint\n- *                   -javaagent:basicAgent.jar GetObjectSizeTest GetObjectSizeTest\n- *\n- * @run main\/othervm -Xmx4g\n- *                   -XX:+UnlockDiagnosticVMOptions -XX:+AbortVMOnCompilationFailure -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n- *                   -XX:TieredStopAtLevel=1\n- *                   -javaagent:basicAgent.jar GetObjectSizeTest GetObjectSizeTest\n- *\n- * @run main\/othervm -Xmx4g\n- *                   -XX:+UnlockDiagnosticVMOptions -XX:+AbortVMOnCompilationFailure -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n- *                   -XX:-TieredCompilation\n- *                   -javaagent:basicAgent.jar GetObjectSizeTest GetObjectSizeTest\n- *\/\n-\n-\/*\n- * @test\n- * @summary Test for fInst.getObjectSize without compressed oops\n- * @library \/test\/lib\n- * @requires vm.bits == 64\n- *\n- * @build sun.hotspot.WhiteBox\n- * @run build GetObjectSizeTest\n- * @run shell MakeJAR.sh basicAgent\n- *\n- * @run driver ClassFileInstaller sun.hotspot.WhiteBox\n- *\n- * @run main\/othervm -Xmx128m -XX:-UseCompressedOops\n- *                   -XX:+UnlockDiagnosticVMOptions -XX:+AbortVMOnCompilationFailure -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n- *                   -Xint\n- *                   -javaagent:basicAgent.jar GetObjectSizeTest GetObjectSizeTest\n- *\n- * @run main\/othervm -Xmx128m -XX:-UseCompressedOops\n- *                   -XX:+UnlockDiagnosticVMOptions -XX:+AbortVMOnCompilationFailure -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n- *                   -XX:TieredStopAtLevel=1\n- *                   -javaagent:basicAgent.jar GetObjectSizeTest GetObjectSizeTest\n- *\n- * @run main\/othervm -Xmx128m -XX:-UseCompressedOops\n- *                   -XX:+UnlockDiagnosticVMOptions -XX:+AbortVMOnCompilationFailure -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n- *                   -XX:-TieredCompilation\n- *                   -javaagent:basicAgent.jar GetObjectSizeTest GetObjectSizeTest\n- *\/\n-\n-\/*\n+\/**\n@@ -110,3 +26,3 @@\n- * @summary Test for fInst.getObjectSize with 32-bit compressed oops\n- * @library \/test\/lib\n- * @requires vm.debug\n+ * @bug 4882798\n+ * @summary round-trip test for getObjectSize (does it return, and is the result non-zero?)\n+ * @author Gabriel Adauto, Wily Technology\n@@ -114,1 +30,0 @@\n- * @build sun.hotspot.WhiteBox\n@@ -117,84 +32,1 @@\n- *\n- * @run driver ClassFileInstaller sun.hotspot.WhiteBox\n- *\n- * @run main\/othervm -Xmx128m\n- *                   -XX:+UnlockDiagnosticVMOptions -XX:+AbortVMOnCompilationFailure -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n- *                   -XX:FastAllocateSizeLimit=0\n- *                   -Xint\n- *                   -javaagent:basicAgent.jar GetObjectSizeTest GetObjectSizeTest\n- *\n- * @run main\/othervm -Xmx128m\n- *                   -XX:+UnlockDiagnosticVMOptions -XX:+AbortVMOnCompilationFailure -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n- *                   -XX:FastAllocateSizeLimit=0\n- *                   -XX:TieredStopAtLevel=1\n- *                   -javaagent:basicAgent.jar GetObjectSizeTest GetObjectSizeTest\n- *\n- * @run main\/othervm -Xmx128m\n- *                   -XX:+UnlockDiagnosticVMOptions -XX:+AbortVMOnCompilationFailure -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n- *                   -XX:FastAllocateSizeLimit=0\n- *                   -XX:-TieredCompilation\n- *                   -javaagent:basicAgent.jar GetObjectSizeTest GetObjectSizeTest\n- *\/\n-\n-\/*\n- * @test\n- * @summary Test for fInst.getObjectSize with zero-based compressed oops\n- * @library \/test\/lib\n- * @requires vm.bits == 64\n- * @requires vm.debug\n- *\n- * @build sun.hotspot.WhiteBox\n- * @run build GetObjectSizeTest\n- * @run shell MakeJAR.sh basicAgent\n- *\n- * @run driver ClassFileInstaller sun.hotspot.WhiteBox\n- *\n- * @run main\/othervm -Xmx4g\n- *                   -XX:+UnlockDiagnosticVMOptions -XX:+AbortVMOnCompilationFailure -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n- *                   -XX:FastAllocateSizeLimit=0\n- *                   -Xint\n- *                   -javaagent:basicAgent.jar GetObjectSizeTest GetObjectSizeTest\n- *\n- * @run main\/othervm -Xmx4g\n- *                   -XX:+UnlockDiagnosticVMOptions -XX:+AbortVMOnCompilationFailure -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n- *                   -XX:FastAllocateSizeLimit=0\n- *                   -XX:TieredStopAtLevel=1\n- *                   -javaagent:basicAgent.jar GetObjectSizeTest GetObjectSizeTest\n- *\n- * @run main\/othervm -Xmx4g\n- *                   -XX:+UnlockDiagnosticVMOptions -XX:+AbortVMOnCompilationFailure -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n- *                   -XX:FastAllocateSizeLimit=0\n- *                   -XX:-TieredCompilation\n- *                   -javaagent:basicAgent.jar GetObjectSizeTest GetObjectSizeTest\n- *\/\n-\n-\/*\n- * @test\n- * @summary Test for fInst.getObjectSize without compressed oops\n- * @library \/test\/lib\n- * @requires vm.bits == 64\n- * @requires vm.debug\n- *\n- * @build sun.hotspot.WhiteBox\n- * @run build GetObjectSizeTest\n- * @run shell MakeJAR.sh basicAgent\n- *\n- * @run driver ClassFileInstaller sun.hotspot.WhiteBox\n- *\n- * @run main\/othervm -Xmx128m -XX:-UseCompressedOops\n- *                   -XX:+UnlockDiagnosticVMOptions -XX:+AbortVMOnCompilationFailure -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n- *                   -XX:FastAllocateSizeLimit=0\n- *                   -Xint\n- *                   -javaagent:basicAgent.jar GetObjectSizeTest GetObjectSizeTest\n- *\n- * @run main\/othervm -Xmx128m -XX:-UseCompressedOops\n- *                   -XX:+UnlockDiagnosticVMOptions -XX:+AbortVMOnCompilationFailure -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n- *                   -XX:FastAllocateSizeLimit=0\n- *                   -XX:TieredStopAtLevel=1\n- *                   -javaagent:basicAgent.jar GetObjectSizeTest GetObjectSizeTest\n- *\n- * @run main\/othervm -Xmx128m -XX:-UseCompressedOops\n- *                   -XX:+UnlockDiagnosticVMOptions -XX:+AbortVMOnCompilationFailure -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n- *                   -XX:FastAllocateSizeLimit=0\n- *                   -XX:-TieredCompilation\n- *                   -javaagent:basicAgent.jar GetObjectSizeTest GetObjectSizeTest\n+ * @run main\/othervm -javaagent:basicAgent.jar GetObjectSizeTest GetObjectSizeTest\n@@ -202,65 +34,0 @@\n-\n-\/*\n- * @test\n- * @summary Test for fInst.getObjectSize with 32-bit compressed oops\n- * @library \/test\/lib\n- * @requires vm.bits == 64\n- * @requires vm.debug\n- *\n- * @build sun.hotspot.WhiteBox\n- * @run build GetObjectSizeTest\n- * @run shell MakeJAR.sh basicAgent\n- *\n- * @run driver ClassFileInstaller sun.hotspot.WhiteBox\n- *\n- * @run main\/othervm -Xmx128m\n- *                   -XX:+UnlockDiagnosticVMOptions -XX:+AbortVMOnCompilationFailure -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n- *                   -XX:ObjectAlignmentInBytes=32\n- *                   -Xint\n- *                   -javaagent:basicAgent.jar GetObjectSizeTest GetObjectSizeTest\n- *\n- * @run main\/othervm -Xmx128m\n- *                   -XX:+UnlockDiagnosticVMOptions -XX:+AbortVMOnCompilationFailure -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n- *                   -XX:ObjectAlignmentInBytes=32\n- *                   -XX:TieredStopAtLevel=1\n- *                   -javaagent:basicAgent.jar GetObjectSizeTest GetObjectSizeTest\n- *\n- * @run main\/othervm -Xmx128m\n- *                   -XX:+UnlockDiagnosticVMOptions -XX:+AbortVMOnCompilationFailure -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n- *                   -XX:ObjectAlignmentInBytes=32\n- *                   -XX:-TieredCompilation\n- *                   -javaagent:basicAgent.jar GetObjectSizeTest GetObjectSizeTest\n- *\/\n-\n-\/*\n- * @test\n- * @summary Test for fInst.getObjectSize with zero-based compressed oops\n- * @library \/test\/lib\n- * @requires vm.bits == 64\n- * @requires vm.debug\n- *\n- * @build sun.hotspot.WhiteBox\n- * @run build GetObjectSizeTest\n- * @run shell MakeJAR.sh basicAgent\n- *\n- * @run driver ClassFileInstaller sun.hotspot.WhiteBox\n- *\n- * @run main\/othervm -Xmx4g\n- *                   -XX:+UnlockDiagnosticVMOptions -XX:+AbortVMOnCompilationFailure -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n- *                   -XX:ObjectAlignmentInBytes=32\n- *                   -Xint\n- *                   -javaagent:basicAgent.jar GetObjectSizeTest GetObjectSizeTest\n- *\n- * @run main\/othervm -Xmx4g\n- *                   -XX:+UnlockDiagnosticVMOptions -XX:+AbortVMOnCompilationFailure -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n- *                   -XX:ObjectAlignmentInBytes=32\n- *                   -XX:TieredStopAtLevel=1\n- *                   -javaagent:basicAgent.jar GetObjectSizeTest GetObjectSizeTest\n- *\n- * @run main\/othervm -Xmx4g\n- *                   -XX:+UnlockDiagnosticVMOptions -XX:+AbortVMOnCompilationFailure -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n- *                   -XX:ObjectAlignmentInBytes=32\n- *                   -XX:-TieredCompilation\n- *                   -javaagent:basicAgent.jar GetObjectSizeTest GetObjectSizeTest\n- *\/\n-\n@@ -269,12 +36,11 @@\n-import jdk.test.lib.Platform;\n-import sun.hotspot.WhiteBox;\n-\n-public class GetObjectSizeTest extends ASimpleInstrumentationTestCase {\n-\n-    static final Boolean compressedOops = WhiteBox.getWhiteBox().getBooleanVMFlag(\"UseCompressedOops\");\n-    static final int R = ((compressedOops == null) || (compressedOops == true)) ?  4 : 8;\n-\n-    static final Long align = WhiteBox.getWhiteBox().getIntxVMFlag(\"ObjectAlignmentInBytes\");\n-    static final int A = (align == null ? 8 : align.intValue());\n-\n-    public GetObjectSizeTest(String name) {\n+public class\n+GetObjectSizeTest\n+    extends ASimpleInstrumentationTestCase\n+{\n+\n+    \/**\n+     * Constructor for GetObjectSizeTest.\n+     * @param name\n+     *\/\n+    public GetObjectSizeTest(String name)\n+    {\n@@ -284,126 +50,32 @@\n-    public static void main(String[] args)throws Throwable {\n-        new GetObjectSizeTest(args[0]).runTest();\n-    }\n-\n-    public static final int ITERS = 1_000_000;\n-\n-    public static void assertEquals(long expected, long actual) {\n-        if (expected != actual) {\n-            throw new IllegalStateException(\n-               \"Error: expected: \" + expected + \" (\" + Long.toHexString(expected) +\n-                \"), actual: \" + actual + \" (\" + Long.toHexString(actual) + \")\");\n-        }\n-    }\n-\n-    public static void assertNotEquals(long notExpected, long actual) {\n-        if (notExpected == actual) {\n-            throw new IllegalStateException(\n-               \"Error: not expected: \" + notExpected + \" (\" + Long.toHexString(notExpected) +\n-                \"), actual: \" + actual + \" (\" + Long.toHexString(actual) + \")\");\n-        }\n-    }\n-\n-    public static void assertFail() {\n-        throw new IllegalStateException(\"Should not be here\");\n-    }\n-\n-    protected final void doRunTest() throws Throwable {\n-        testSize_newObject();\n-        testSize_localObject();\n-        testSize_fieldObject();\n-\n-        testSize_newSmallByteArray();\n-        testSize_localSmallByteArray();\n-        testSize_fieldSmallByteArray();\n-\n-        testSize_newSmallObjArray();\n-        testSize_localSmallObjArray();\n-        testSize_fieldSmallObjArray();\n-\n-        testNulls();\n-    }\n-\n-    private static int roundUp(int v, int a) {\n-        return (v + a - 1) \/ a * a;\n-    }\n-\n-    private void testSize_newObject() {\n-        int expected = roundUp(Platform.is64bit() ? 16 : 8, A);\n-        for (int c = 0; c < ITERS; c++) {\n-            assertEquals(expected, fInst.getObjectSize(new Object()));\n-        }\n-    }\n-\n-    private void testSize_localObject() {\n-        int expected = roundUp(Platform.is64bit() ? 16 : 8, A);\n-        Object o = new Object();\n-        for (int c = 0; c < ITERS; c++) {\n-            assertEquals(expected, fInst.getObjectSize(o));\n-        }\n-    }\n-\n-    static Object staticO = new Object();\n-\n-    private void testSize_fieldObject() {\n-        int expected = roundUp(Platform.is64bit() ? 16 : 8, A);\n-        for (int c = 0; c < ITERS; c++) {\n-            assertEquals(expected, fInst.getObjectSize(staticO));\n-        }\n-    }\n-\n-    private void testSize_newSmallByteArray() {\n-        int expected = roundUp(1024 + 16, A);\n-        for (int c = 0; c < ITERS; c++) {\n-            assertEquals(expected, fInst.getObjectSize(new byte[1024]));\n-        }\n-    }\n-\n-    private void testSize_localSmallByteArray() {\n-        byte[] arr = new byte[1024];\n-        int expected = roundUp(arr.length + 16, A);\n-        for (int c = 0; c < ITERS; c++) {\n-            assertEquals(expected, fInst.getObjectSize(arr));\n-        }\n-    }\n-\n-    static byte[] smallArr = new byte[1024];\n-\n-    private void testSize_fieldSmallByteArray() {\n-        int expected = roundUp(smallArr.length + 16, A);\n-        for (int c = 0; c < ITERS; c++) {\n-            assertEquals(expected, fInst.getObjectSize(smallArr));\n-        }\n-    }\n-\n-    private void testSize_newSmallObjArray() {\n-        int expected = roundUp(1024*R + 16, A);\n-        for (int c = 0; c < ITERS; c++) {\n-            assertEquals(expected, fInst.getObjectSize(new Object[1024]));\n-        }\n-    }\n-\n-    private void testSize_localSmallObjArray() {\n-        Object[] arr = new Object[1024];\n-        int expected = roundUp(arr.length*R + 16, A);\n-        for (int c = 0; c < ITERS; c++) {\n-            assertEquals(expected, fInst.getObjectSize(arr));\n-        }\n-    }\n-\n-    static Object[] smallObjArr = new Object[1024];\n-\n-    private void testSize_fieldSmallObjArray() {\n-        int expected = roundUp(smallArr.length*R + 16, A);\n-        for (int c = 0; c < ITERS; c++) {\n-            assertEquals(expected, fInst.getObjectSize(smallObjArr));\n-        }\n-    }\n-\n-    private void testNulls() {\n-        for (int c = 0; c < ITERS; c++) {\n-            try {\n-                fInst.getObjectSize(null);\n-                assertFail();\n-            } catch (NullPointerException e) {\n-                \/\/ expected\n-            }\n+    public static void\n+    main (String[] args)\n+        throws Throwable {\n+        ATestCaseScaffold   test = new GetObjectSizeTest(args[0]);\n+        test.runTest();\n+    }\n+\n+    protected final void\n+    doRunTest()\n+        throws Throwable {\n+        testGetObjectSize();\n+    }\n+\n+    \/*\n+     *  Lame test just to show we can do the roundtrip\n+     *\/\n+    public void\n+    testGetObjectSize()\n+    {\n+        Object[] objects = new Object[] {\n+            \"Hello World\",\n+            new Integer(8),\n+            this,\n+            new StringBuffer(\"Another test object\"),\n+            new Vector(99),\n+            \/\/ Add more objects here\n+            };\n+        for (int i = 0; i < objects.length; i++)\n+        {\n+            Object o = objects[i];\n+            long size = fInst.getObjectSize(o);\n+            assertTrue(size > 0);\n","filename":"test\/jdk\/java\/lang\/instrument\/GetObjectSizeTest.java","additions":49,"deletions":377,"binary":false,"changes":426,"status":"modified"}]}