{"files":[{"patch":"@@ -136,1 +136,1 @@\n-    public abstract void setOption(FileDescriptor fd, SocketOption<?> option, Object value)\n+    public abstract void setOption(FileDescriptor fd, SocketOption<?> option, Object value, boolean isIPv6)\n@@ -140,1 +140,1 @@\n-    public abstract Object getOption(FileDescriptor fd, SocketOption<?> option)\n+    public abstract Object getOption(FileDescriptor fd, SocketOption<?> option, boolean isIPv6)\n@@ -209,1 +209,1 @@\n-        public void setOption(FileDescriptor fd, SocketOption<?> option, Object value)\n+        public void setOption(FileDescriptor fd, SocketOption<?> option, Object value, boolean isIPv6)\n@@ -217,1 +217,1 @@\n-        public Object getOption(FileDescriptor fd, SocketOption<?> option)\n+        public Object getOption(FileDescriptor fd, SocketOption<?> option, boolean isIPv6)\n","filename":"src\/java.base\/share\/classes\/sun\/net\/ext\/ExtendedSocketOptions.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -405,0 +405,1 @@\n+        boolean isIPv6 = (family == StandardProtocolFamily.INET6);\n@@ -407,1 +408,1 @@\n-            extendedOptions.setOption(fd, name, value);\n+            extendedOptions.setOption(fd, name, value, isIPv6);\n@@ -454,1 +455,0 @@\n-        boolean isIPv6 = (family == StandardProtocolFamily.INET6);\n@@ -470,1 +470,2 @@\n-            return extendedOptions.getOption(fd, name);\n+            boolean isIPv6 = (family == StandardProtocolFamily.INET6);\n+            return extendedOptions.getOption(fd, name, isIPv6);\n","filename":"src\/java.base\/share\/classes\/sun\/nio\/ch\/Net.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -111,2 +111,2 @@\n-    void setIpDontFragment(int fd, final boolean value) throws SocketException {\n-        setIpDontFragment0(fd, value);\n+    void setIpDontFragment(int fd, final boolean value, boolean isIPv6) throws SocketException {\n+        setIpDontFragment0(fd, value, isIPv6);\n@@ -116,2 +116,2 @@\n-    boolean getIpDontFragment(int fd) throws SocketException {\n-        return getIpDontFragment0(fd);\n+    boolean getIpDontFragment(int fd, boolean isIPv6) throws SocketException {\n+        return getIpDontFragment0(fd, isIPv6);\n@@ -133,1 +133,1 @@\n-    private static native void setIpDontFragment0(int fd, boolean value) throws SocketException;\n+    private static native void setIpDontFragment0(int fd, boolean value, boolean isIPv6) throws SocketException;\n@@ -137,1 +137,1 @@\n-    private static native boolean getIpDontFragment0(int fd) throws SocketException;\n+    private static native boolean getIpDontFragment0(int fd, boolean isIPv6) throws SocketException;\n","filename":"src\/jdk.net\/linux\/classes\/jdk\/net\/LinuxSocketOptions.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -247,11 +247,0 @@\n-static int socketFamily(jint fd) {\n-    struct sockaddr_storage st;\n-    struct sockaddr *sa = (struct sockaddr *)&st;\n-    socklen_t sa_len = sizeof(st);\n-\n-    if (getsockname(fd, sa, &sa_len) == 0) {\n-        return sa->sa_family;\n-    }\n-    return -1;\n-}\n-\n@@ -261,1 +250,1 @@\n- * Signature: (IZ)V\n+ * Signature: (IZZ)V\n@@ -264,1 +253,1 @@\n-(JNIEnv *env, jobject unused, jint fd, jboolean optval) {\n+(JNIEnv *env, jobject unused, jint fd, jboolean optval, jboolean isIPv6) {\n@@ -266,5 +255,0 @@\n-    jint family = socketFamily(fd);\n-    if (family == -1) {\n-        handleError(env, family, \"get socket family failed\");\n-        return;\n-    }\n@@ -274,1 +258,1 @@\n-    if (family == AF_INET) {\n+    if (!isIPv6) {\n@@ -285,1 +269,1 @@\n- * Signature: (I)Z;\n+ * Signature: (IZ)Z;\n@@ -288,1 +272,1 @@\n-(JNIEnv *env, jobject unused, jint fd) {\n+(JNIEnv *env, jobject unused, jint fd, jboolean isIPv6) {\n@@ -290,5 +274,0 @@\n-    jint family = socketFamily(fd);\n-    if (family == -1) {\n-        handleError(env, family, \"get socket family failed\");\n-        return JNI_FALSE;\n-    }\n@@ -296,1 +275,1 @@\n-    if (family == AF_INET) {\n+    if (!isIPv6) {\n","filename":"src\/jdk.net\/linux\/native\/libextnet\/LinuxSocketOptions.c","additions":6,"deletions":27,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -87,2 +87,2 @@\n-    void setIpDontFragment(int fd, final boolean value) throws SocketException {\n-        setIpDontFragment0(fd, value);\n+    void setIpDontFragment(int fd, final boolean value, boolean isIPv6) throws SocketException {\n+        setIpDontFragment0(fd, value, isIPv6);\n@@ -92,2 +92,2 @@\n-    boolean getIpDontFragment(int fd) throws SocketException {\n-        return getIpDontFragment0(fd);\n+    boolean getIpDontFragment(int fd, boolean isIPv6) throws SocketException {\n+        return getIpDontFragment0(fd, isIPv6);\n@@ -109,1 +109,1 @@\n-    private static native void setIpDontFragment0(int fd, boolean value) throws SocketException;\n+    private static native void setIpDontFragment0(int fd, boolean value, boolean isIPv6) throws SocketException;\n@@ -113,1 +113,1 @@\n-    private static native boolean getIpDontFragment0(int fd) throws SocketException;\n+    private static native boolean getIpDontFragment0(int fd, boolean isIPv6) throws SocketException;\n","filename":"src\/jdk.net\/macosx\/classes\/jdk\/net\/MacOSXSocketOptions.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -181,11 +181,0 @@\n-static int socketFamily(jint fd) {\n-    struct sockaddr_storage st;\n-    struct sockaddr* sa = (struct sockaddr *)&st;\n-    socklen_t sa_len = sizeof(st);\n-\n-    if (getsockname(fd, sa, &sa_len) == 0) {\n-        return sa->sa_family;\n-    }\n-    return -1;\n-}\n-\n@@ -201,7 +190,7 @@\n-    if (fd == -1)\n-        return JNI_FALSE;\n-    value = 1;\n-    rv = setsockopt(fd, IPPROTO_IP, IP_DONTFRAG, &value, sizeof(value));\n-    close(fd);\n-    if (rv == -1) {\n-        return JNI_FALSE;\n+    if (fd != -1) {\n+        value = 1;\n+        rv = setsockopt(fd, IPPROTO_IP, IP_DONTFRAG, &value, sizeof(value));\n+        close(fd);\n+        if (rv == -1) {\n+            return JNI_FALSE;\n+        }\n@@ -210,7 +199,7 @@\n-    if (fd == -1)\n-        return JNI_FALSE;\n-    value = 1;\n-    rv = setsockopt(fd, IPPROTO_IPV6, IPV6_DONTFRAG, &value, sizeof(value));\n-    close(fd);\n-    if (rv == -1) {\n-        return JNI_FALSE;\n+    if (fd != -1) {\n+        value = 1;\n+        rv = setsockopt(fd, IPPROTO_IPV6, IPV6_DONTFRAG, &value, sizeof(value));\n+        close(fd);\n+        if (rv == -1) {\n+            return JNI_FALSE;\n+        }\n@@ -224,1 +213,1 @@\n- * Signature: (IZ)V\n+ * Signature: (IZZ)V\n@@ -227,1 +216,1 @@\n-(JNIEnv *env, jobject unused, jint fd, jboolean optval) {\n+(JNIEnv *env, jobject unused, jint fd, jboolean optval, jboolean isIPv6) {\n@@ -229,1 +218,0 @@\n-    jint family = socketFamily(fd);\n@@ -232,5 +220,1 @@\n-    if (family == -1) {\n-        handleError(env, family, \"get socket family failed\");\n-        return;\n-    }\n-    if (family == AF_INET) {\n+    if (!isIPv6) {\n@@ -247,1 +231,1 @@\n- * Signature: (I)Z;\n+ * Signature: (IZ)Z;\n@@ -250,1 +234,1 @@\n-(JNIEnv *env, jobject unused, jint fd) {\n+(JNIEnv *env, jobject unused, jint fd, jboolean isIPv6) {\n@@ -253,6 +237,1 @@\n-    jint family = socketFamily(fd);\n-    if (family == -1) {\n-        handleError(env, family, \"get socket family failed\");\n-        return 0;\n-    }\n-    if (family == AF_INET) {\n+    if (!isIPv6) {\n","filename":"src\/jdk.net\/macosx\/native\/libextnet\/MacOSXSocketOptions.c","additions":20,"deletions":41,"binary":false,"changes":61,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+import java.net.StandardProtocolFamily;\n@@ -212,0 +213,3 @@\n+     * For {@link StandardProtocolFamily#INET6 IPv6} sockets it is\n+     * system dependent whether the option also applies to datagrams\n+     * sent to IPv4 addresses.\n@@ -266,1 +270,0 @@\n-            @SuppressWarnings(\"removal\")\n@@ -269,1 +272,1 @@\n-                                  Object value)\n+                                  Object value, boolean isIPv6)\n@@ -280,1 +283,1 @@\n-                    setIpDontFragment(fd, (Boolean) value);\n+                    setIpDontFragment(fd, (Boolean) value, isIPv6);\n@@ -298,1 +301,0 @@\n-            @SuppressWarnings(\"removal\")\n@@ -300,1 +302,1 @@\n-                                    SocketOption<?> option)\n+                                    SocketOption<?> option, boolean isIPv6)\n@@ -311,1 +313,1 @@\n-                    return getIpDontFragment(fd);\n+                    return getIpDontFragment(fd, isIPv6);\n@@ -355,1 +357,1 @@\n-    private static void setIpDontFragment(FileDescriptor fd, boolean value)\n+    private static void setIpDontFragment(FileDescriptor fd, boolean value, boolean isIPv6)\n@@ -357,1 +359,1 @@\n-        platformSocketOptions.setIpDontFragment(fdAccess.get(fd), value);\n+        platformSocketOptions.setIpDontFragment(fdAccess.get(fd), value, isIPv6);\n@@ -369,2 +371,2 @@\n-    private static boolean getIpDontFragment(FileDescriptor fd) throws SocketException {\n-        return platformSocketOptions.getIpDontFragment(fdAccess.get(fd));\n+    private static boolean getIpDontFragment(FileDescriptor fd, boolean isIPv6) throws SocketException {\n+        return platformSocketOptions.getIpDontFragment(fdAccess.get(fd), isIPv6);\n@@ -465,1 +467,1 @@\n-        void setIpDontFragment(int fd, final boolean value) throws SocketException {\n+        void setIpDontFragment(int fd, final boolean value, boolean isIPv6) throws SocketException {\n@@ -469,1 +471,1 @@\n-        boolean getIpDontFragment(int fd) throws SocketException {\n+        boolean getIpDontFragment(int fd, boolean isIPv6) throws SocketException {\n","filename":"src\/jdk.net\/share\/classes\/jdk\/net\/ExtendedSocketOptions.java","additions":14,"deletions":12,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -45,2 +45,2 @@\n-    void setIpDontFragment(int fd, final boolean value) throws SocketException {\n-        setIpDontFragment0(fd, value);\n+    void setIpDontFragment(int fd, final boolean value, boolean isIPv6) throws SocketException {\n+        setIpDontFragment0(fd, value, isIPv6);\n@@ -50,2 +50,2 @@\n-    boolean getIpDontFragment(int fd) throws SocketException {\n-        return getIpDontFragment0(fd);\n+    boolean getIpDontFragment(int fd, boolean isIPv6) throws SocketException {\n+        return getIpDontFragment0(fd, isIPv6);\n@@ -54,2 +54,2 @@\n-    private static native void setIpDontFragment0(int fd, boolean value) throws SocketException;\n-    private static native boolean getIpDontFragment0(int fd) throws SocketException;\n+    private static native void setIpDontFragment0(int fd, boolean value, boolean isIPv6) throws SocketException;\n+    private static native boolean getIpDontFragment0(int fd, boolean isIPv6) throws SocketException;\n","filename":"src\/jdk.net\/windows\/classes\/jdk\/net\/WindowsSocketOptions.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -46,10 +46,0 @@\n-static int socketFamily(jint fd) {\n-    WSAPROTOCOL_INFO info;\n-    socklen_t sa_len = sizeof(info);\n-\n-    if (getsockopt(fd, SOL_SOCKET, SO_PROTOCOL_INFO, (char *)&info, &sa_len) == 0) {\n-        return info.iAddressFamily;\n-    }\n-    return -1;\n-}\n-\n@@ -59,1 +49,1 @@\n- * Signature: (IZ)V\n+ * Signature: (IZZ)V\n@@ -62,1 +52,1 @@\n-(JNIEnv *env, jobject unused, jint fd, jboolean optval) {\n+(JNIEnv *env, jobject unused, jint fd, jboolean optval, jboolean isIPv6) {\n@@ -64,5 +54,0 @@\n-    jint family = socketFamily(fd);\n-    if (family == -1) {\n-        handleError(env, family, \"get socket family failed\");\n-        return;\n-    }\n@@ -70,2 +55,1 @@\n-\n-    if (family == AF_INET) {\n+    if (!isIPv6) {\n@@ -84,1 +68,1 @@\n-            rv = setsockopt(fd, IPPROTO_IP, IP_DONTFRAGMENT, (char *)&opt, sizeof(int));\n+            rv = setsockopt(fd, IPPROTO_IPV6, IPV6_DONTFRAG, (char *)&opt, sizeof(int));\n@@ -93,1 +77,1 @@\n- * Signature: (I)Z;\n+ * Signature: (IZ)Z;\n@@ -96,1 +80,1 @@\n-(JNIEnv *env, jobject unused, jint fd) {\n+(JNIEnv *env, jobject unused, jint fd, jboolean isIPv6) {\n@@ -98,5 +82,0 @@\n-    jint family = socketFamily(fd);\n-    if (family == -1) {\n-        handleError(env, family, \"get socket family failed\");\n-        return JNI_FALSE;\n-    }\n@@ -104,1 +83,1 @@\n-    if (family == AF_INET) {\n+    if (!isIPv6) {\n@@ -118,1 +97,1 @@\n-            rv = getsockopt(fd, IPPROTO_IP, IP_DONTFRAGMENT, (char *)&optval, &sz);\n+            rv = getsockopt(fd, IPPROTO_IPV6, IPV6_DONTFRAG, (char *)&optval, &sz);\n","filename":"src\/jdk.net\/windows\/native\/libextnet\/WindowsSocketOptions.c","additions":8,"deletions":29,"binary":false,"changes":37,"status":"modified"}]}