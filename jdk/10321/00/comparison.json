{"files":[{"patch":"@@ -230,0 +230,1 @@\n+JVM_VirtualThreadToggleTmpVTMSTrans\n","filename":"make\/data\/hotspot-symbols\/symbols-unix","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1162,0 +1162,3 @@\n+JNIEXPORT void JNICALL\n+JVM_VirtualThreadToggleTmpVTMSTrans(JNIEnv* env, jobject vthread, jboolean end_tmp_trans);\n+\n","filename":"src\/hotspot\/share\/include\/jvm.h","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -3950,0 +3950,1 @@\n+  assert(!thread->is_in_VTMS_transition(), \"sanity check\");\n@@ -4022,1 +4023,0 @@\n-\n@@ -4051,0 +4051,13 @@\n+JVM_ENTRY(void, JVM_VirtualThreadToggleTmpVTMSTrans(JNIEnv* env, jobject vthread, jboolean end_tmp_trans))\n+#if INCLUDE_JVMTI\n+  if (!DoJVMTIVirtualThreadTransitions) {\n+    assert(!JvmtiExport::can_support_virtual_threads(), \"sanity check\");\n+    return;\n+  }\n+  assert(thread->is_in_tmp_VTMS_transition() == (bool)end_tmp_trans, \"sanity check\");\n+  thread->toggle_is_in_tmp_VTMS_transition();\n+#else\n+  fatal(\"Should only be called with JVMTI enabled\");\n+#endif\n+JVM_END\n+\n","filename":"src\/hotspot\/share\/prims\/jvm.cpp","additions":14,"deletions":1,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -709,1 +709,5 @@\n-  jvf = check_and_skip_hidden_frames(jt, jvf);\n+  \/\/ Skipping hidden frames when jt->is_in_tmp_VTMS_transition()==true results\n+  \/\/ in returning jvf==NULL, and so, empty stack traces for carrier threads.\n+  if (!jt->is_in_tmp_VTMS_transition()) {\n+    jvf = check_and_skip_hidden_frames(jt, jvf);\n+  }\n@@ -1596,1 +1600,1 @@\n-  assert(!java_thread->is_in_VTMS_transition(), \"sanity check\");\n+  assert(!java_thread->is_in_non_tmp_VTMS_transition(), \"sanity check\");\n@@ -1663,1 +1667,1 @@\n-  assert(!java_thread->is_in_VTMS_transition(), \"sanity check\");\n+  assert(!java_thread->is_in_non_tmp_VTMS_transition(), \"sanity check\");\n","filename":"src\/hotspot\/share\/prims\/jvmtiEnvBase.cpp","additions":7,"deletions":3,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -1053,0 +1053,3 @@\n+  if (JavaThread::current()->is_in_tmp_VTMS_transition()) {\n+    return false;\n+  }\n@@ -1343,0 +1346,3 @@\n+  if (thread->is_in_tmp_VTMS_transition()) {\n+    return;\n+  }\n@@ -1378,0 +1384,3 @@\n+  if (thread->is_in_tmp_VTMS_transition()) {\n+    return;\n+  }\n","filename":"src\/hotspot\/share\/prims\/jvmtiExport.cpp","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -757,1 +757,1 @@\n-  JVMTI_ONLY(assert(!_handshakee->is_in_VTMS_transition(), \"no suspend allowed in VTMS transition\");)\n+  JVMTI_ONLY(assert(!_handshakee->is_in_non_tmp_VTMS_transition(), \"no suspend allowed in VTMS transition\");)\n","filename":"src\/hotspot\/share\/runtime\/handshake.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -424,0 +424,1 @@\n+  _is_in_tmp_VTMS_transition(false),\n@@ -1173,1 +1174,1 @@\n-  assert(!is_in_VTMS_transition(), \"no suspend allowed in VTMS transition\");\n+  assert(!is_in_non_tmp_VTMS_transition(), \"no suspend allowed in VTMS transition\");\n","filename":"src\/hotspot\/share\/runtime\/javaThread.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -313,0 +313,1 @@\n+  bool                  _is_in_tmp_VTMS_transition;      \/\/ thread is in temporary virtual thread mount state transition\n@@ -645,1 +646,2 @@\n-  bool is_in_VTMS_transition() const             { return _is_in_VTMS_transition; }\n+  bool is_in_non_tmp_VTMS_transition() const     { return _is_in_VTMS_transition; }\n+  bool is_in_VTMS_transition() const             { return _is_in_VTMS_transition || _is_in_tmp_VTMS_transition; }\n@@ -647,0 +649,2 @@\n+  bool is_in_tmp_VTMS_transition() const         { return _is_in_tmp_VTMS_transition; }\n+  void toggle_is_in_tmp_VTMS_transition()        { _is_in_tmp_VTMS_transition = !_is_in_tmp_VTMS_transition; };\n","filename":"src\/hotspot\/share\/runtime\/javaThread.hpp","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -586,0 +586,2 @@\n+        if (notifyJvmtiEvents) toggleJvmtiTmpVTMSTrans(false);\n+\n@@ -593,0 +595,1 @@\n+            if (notifyJvmtiEvents) toggleJvmtiTmpVTMSTrans(true);\n@@ -602,0 +605,2 @@\n+            if (notifyJvmtiEvents) toggleJvmtiTmpVTMSTrans(false);\n+\n@@ -609,0 +614,1 @@\n+                if (notifyJvmtiEvents) toggleJvmtiTmpVTMSTrans(true);\n@@ -628,0 +634,2 @@\n+                    if (notifyJvmtiEvents) toggleJvmtiTmpVTMSTrans(false);\n+\n@@ -634,0 +642,1 @@\n+                        if (notifyJvmtiEvents) toggleJvmtiTmpVTMSTrans(true);\n@@ -1008,0 +1017,3 @@\n+    @JvmtiMountTransition\n+    private native void toggleJvmtiTmpVTMSTrans(boolean endTmpTrans);\n+\n","filename":"src\/java.base\/share\/classes\/java\/lang\/VirtualThread.java","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -39,0 +39,1 @@\n+    { \"toggleJvmtiTmpVTMSTrans\", \"(Z)V\", (void *)&JVM_VirtualThreadToggleTmpVTMSTrans },\n","filename":"src\/java.base\/share\/native\/libjava\/VirtualThread.c","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}