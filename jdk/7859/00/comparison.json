{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1994, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1994, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -471,1 +471,2 @@\n-static void check_and_push(context_type *context, const void *ptr, int kind);\n+static void check_and_push_malloc_block(context_type *context, void *ptr);\n+static void check_and_push_string_utf(context_type *context, const void *ptr);\n@@ -607,1 +608,1 @@\n-    check_and_push(context, name, VM_STRING_UTF);\n+    check_and_push_string_utf(context, name);\n@@ -942,1 +943,1 @@\n-    check_and_push(context, lengths, VM_MALLOC_BLK);\n+    check_and_push_malloc_block(context, lengths);\n@@ -945,1 +946,1 @@\n-    check_and_push(context, code, VM_MALLOC_BLK);\n+    check_and_push_malloc_block(context, code);\n@@ -954,1 +955,1 @@\n-            check_and_push(context, code[i], VM_MALLOC_BLK);\n+            check_and_push_malloc_block(context, code[i]);\n@@ -1308,1 +1309,1 @@\n-        check_and_push(context, methodname, VM_STRING_UTF);\n+        check_and_push_string_utf(context, methodname);\n@@ -1357,1 +1358,1 @@\n-            check_and_push(context, signature, VM_STRING_UTF);\n+            check_and_push_string_utf(context, signature);\n@@ -1655,1 +1656,1 @@\n-            check_and_push(context, classname, VM_STRING_UTF);\n+            check_and_push_string_utf(context, classname);\n@@ -1810,1 +1811,1 @@\n-    check_and_push(context, signature, VM_STRING_UTF);\n+    check_and_push_string_utf(context, signature);\n@@ -2053,1 +2054,1 @@\n-            check_and_push(context, signature, VM_STRING_UTF);\n+            check_and_push_string_utf(context, signature);\n@@ -2079,1 +2080,1 @@\n-            check_and_push(context, signature, VM_STRING_UTF);\n+            check_and_push_string_utf(context, signature);\n@@ -2379,1 +2380,1 @@\n-            check_and_push(context, signature, VM_STRING_UTF);\n+            check_and_push_string_utf(context, signature);\n@@ -2761,1 +2762,1 @@\n-            check_and_push(context, signature, VM_STRING_UTF);\n+            check_and_push_string_utf(context, signature);\n@@ -2783,1 +2784,1 @@\n-            check_and_push(context, signature, VM_STRING_UTF);\n+            check_and_push_string_utf(context, signature);\n@@ -3624,1 +3625,1 @@\n-    check_and_push(context, classname, VM_STRING_UTF);\n+    check_and_push_string_utf(context, classname);\n@@ -3825,2 +3826,2 @@\n-                    buffer = calloc(length + 1, sizeof(char));\n-                    check_and_push(context, buffer, VM_MALLOC_BLK);\n+                    buffer = malloc(length + 1);\n+                    check_and_push_malloc_block(context, buffer);\n@@ -4145,1 +4146,1 @@\n-static void check_and_push(context_type *context, const void *ptr, int kind)\n+static void check_and_push_common(context_type *context, void *ptr, int kind)\n@@ -4157,1 +4158,1 @@\n-            free_block((void *)ptr, kind);\n+            free_block(ptr, kind);\n@@ -4162,1 +4163,1 @@\n-    p->ptr = (void *)ptr;\n+    p->ptr = ptr;\n@@ -4167,0 +4168,8 @@\n+static void check_and_push_malloc_block(context_type *context, void *ptr) {\n+  check_and_push_common(context, ptr, VM_MALLOC_BLK);\n+}\n+\n+static void check_and_push_string_utf(context_type *context, const void *ptr) {\n+  check_and_push_common(context, (void*)ptr, VM_STRING_UTF);\n+}\n+\n","filename":"src\/java.base\/share\/native\/libverify\/check_code.c","additions":30,"deletions":21,"binary":false,"changes":51,"status":"modified"}]}