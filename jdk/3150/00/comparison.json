{"files":[{"patch":"@@ -1168,1 +1168,5 @@\n-            run(suin);\n+            while (run(suin)) {\n+                if (!live) {\n+                    resetState();\n+                }\n+            }\n@@ -1190,0 +1194,2 @@\n+     * @return true iff something remains in the input after this method finishes\n+     *              (e.g. due to live == false).\n@@ -1191,1 +1197,1 @@\n-    private void run(IOContext in) {\n+    private boolean run(IOContext in) {\n@@ -1205,0 +1211,1 @@\n+            return false;\n@@ -1210,0 +1217,1 @@\n+        return true;\n","filename":"src\/jdk.jshell\/share\/classes\/jdk\/internal\/jshell\/tool\/JShellTool.java","additions":10,"deletions":2,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -27,0 +27,1 @@\n+import java.io.EOFException;\n@@ -344,0 +345,2 @@\n+        } catch (EOFException ex) {\n+            throw new EngineTerminationException(\"Terminated.\");\n","filename":"src\/jdk.jshell\/share\/classes\/jdk\/jshell\/execution\/StreamingExecutionControl.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 8143037 8142447 8144095 8140265 8144906 8146138 8147887 8147886 8148316 8148317 8143955 8157953 8080347 8154714 8166649 8167643 8170162 8172102 8165405 8174796 8174797 8175304 8167554 8180508 8166232 8196133 8199912 8211694 8223688\n+ * @bug 8143037 8142447 8144095 8140265 8144906 8146138 8147887 8147886 8148316 8148317 8143955 8157953 8080347 8154714 8166649 8167643 8170162 8172102 8165405 8174796 8174797 8175304 8167554 8180508 8166232 8196133 8199912 8211694 8223688 8254196\n@@ -51,0 +51,1 @@\n+import java.util.Locale;\n@@ -892,0 +893,12 @@\n+    public void testSystemExitStartUp() {\n+        Compiler compiler = new Compiler();\n+        Path startup = compiler.getPath(\"SystemExitStartUp\/startup.txt\");\n+        compiler.writeToFile(startup, \"int i1 = 0;\\n\" +\n+                                      \"System.exit(0);\\n\" +\n+                                      \"int i2 = 0;\\n\");\n+        test(Locale.ROOT, true, new String[]{\"--startup\", startup.toString()},\n+                \"State engine terminated.\",\n+                (a) -> assertCommand(a, \"i2\", \"i2 ==> 0\"),\n+                (a) -> assertCommandOutputContains(a, \"i1\", \"Error:\", \"variable i1\")\n+        );\n+    }\n","filename":"test\/langtools\/jdk\/jshell\/ToolBasicTest.java","additions":14,"deletions":1,"binary":false,"changes":15,"status":"modified"}]}