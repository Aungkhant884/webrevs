{"files":[{"patch":"@@ -140,0 +140,3 @@\n+# Hook to include the corresponding custom post file, if present.\n+$(eval $(call IncludeCustomExtension, ToolsJdk-post.gmk))\n+\n","filename":"make\/ToolsJdk.gmk","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -117,0 +117,1 @@\n+    static String jdkHeaderTemplate;\n@@ -232,0 +233,4 @@\n+                    case \"-jdk-header-template\":\n+                        jdkHeaderTemplate = Files.readString(Paths.get(args[++i]));\n+                        break;\n+\n@@ -307,1 +312,3 @@\n-                + \"\\t-utf8          use UTF-8 rather than \\\\uxxxx (for debug)%n\");\n+                + \"\\t-utf8          use UTF-8 rather than \\\\uxxxx (for debug)%n\"\n+                + \"\\t-jdk-header-template <file>%n\"\n+                + \"\\t\\t       override default GPL header with contents of file%n\");\n","filename":"make\/jdk\/src\/classes\/build\/tools\/cldrconverter\/CLDRConverter.java","additions":8,"deletions":1,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -177,1 +177,1 @@\n-            out.println(CopyrightHeaders.getOpenJDKCopyright(CLDRConverter.copyrightYear));\n+            out.println(getOpenJDKCopyright());\n@@ -297,1 +297,1 @@\n-            out.printf(CopyrightHeaders.getOpenJDKCopyright(CLDRConverter.copyrightYear));\n+            out.printf(getOpenJDKCopyright());\n@@ -451,0 +451,8 @@\n+\n+    private static String getOpenJDKCopyright() {\n+        if (CLDRConverter.jdkHeaderTemplate != null) {\n+            return String.format(CLDRConverter.jdkHeaderTemplate, CLDRConverter.copyrightYear);\n+        } else {\n+            return CopyrightHeaders.getOpenJDKCopyright(CLDRConverter.copyrightYear);\n+        }\n+    }\n","filename":"make\/jdk\/src\/classes\/build\/tools\/cldrconverter\/ResourceBundleGenerator.java","additions":10,"deletions":2,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -56,1 +56,13 @@\n-        if (args.length != 3) {\n+        int i = 0;\n+        boolean valid = true;\n+        if (args.length != 5 && args.length !=3) {\n+            valid = false;\n+        } else if (args.length == 5) {\n+            if (\"-jdk-header-template\".equals(args[i])) {\n+                jdkHeaderTemplate = Files.readString(Paths.get(args[++i]));\n+                i++;\n+            } else {\n+                valid = false;\n+            }\n+        }\n+        if (!valid) {\n@@ -58,0 +70,1 @@\n+                    + \" [-jdk-header-template <file>]\"\n@@ -61,2 +74,5 @@\n-        copyrightYear = Integer.parseInt(args[2]);\n-        readLSRfile(args[0]);\n+        String lsrFile = args[i++];\n+        String outputFile = args[i++];\n+        copyrightYear = Integer.parseInt(args[i++]);\n+\n+        readLSRfile(lsrFile);\n@@ -66,1 +82,1 @@\n-        generateSourceCode(args[1]);\n+        generateSourceCode(outputFile);\n@@ -71,0 +87,1 @@\n+    private static String jdkHeaderTemplate;\n@@ -228,0 +245,1 @@\n+            writer.write(\"\\n\");\n@@ -244,1 +262,2 @@\n-        return String.format(Locale.US, COPYRIGHT, copyrightYear);\n+        return String.format(Locale.US,\n+                (jdkHeaderTemplate != null ? jdkHeaderTemplate : COPYRIGHT), copyrightYear);\n@@ -273,1 +292,0 @@\n-\n","filename":"make\/jdk\/src\/classes\/build\/tools\/generatelsrequivmaps\/EquivMapsGenerator.java","additions":24,"deletions":6,"binary":false,"changes":30,"status":"modified"}]}