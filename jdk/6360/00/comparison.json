{"files":[{"patch":"@@ -144,11 +144,22 @@\n-\n-        \/\/ writing 3 GB of random bytes into source file\n-        for (int i = 0; i < NUM_WRITES; i++)\n-            Files.write(sourceFile, createRandomBytes(BYTES_PER_WRITE, 0), StandardOpenOption.APPEND);\n-\n-        \/\/ performing actual transfer, effectively by multiple invocations of Filechannel.transferTo(FileChannel)\n-        long count;\n-        try (InputStream inputStream = Channels.newInputStream(FileChannel.open(sourceFile));\n-                OutputStream outputStream = Channels\n-                        .newOutputStream(FileChannel.open(targetFile, StandardOpenOption.WRITE))) {\n-            count = inputStream.transferTo(outputStream);\n+        try {\n+            \/\/ writing 3 GB of random bytes into source file\n+            for (int i = 0; i < NUM_WRITES; i++)\n+                Files.write(sourceFile, createRandomBytes(BYTES_PER_WRITE, 0), StandardOpenOption.APPEND);\n+\n+            \/\/ performing actual transfer, effectively by multiple invocations of Filechannel.transferTo(FileChannel)\n+            long count;\n+            try (InputStream inputStream = Channels.newInputStream(FileChannel.open(sourceFile));\n+                 OutputStream outputStream = Channels\n+                         .newOutputStream(FileChannel.open(targetFile, StandardOpenOption.WRITE))) {\n+                count = inputStream.transferTo(outputStream);\n+            }\n+\n+            \/\/ comparing reported transferred bytes, must be 3 GB\n+            assertEquals(count, BYTES_WRITTEN);\n+\n+            \/\/ comparing content of both files, failing in case of any difference\n+            assertEquals(Files.mismatch(sourceFile, targetFile), -1);\n+        } finally {\n+            System.out.printf(\"Cleaning up: %s, %s%n\", sourceFile, targetFile);\n+            Files.deleteIfExists(sourceFile);\n+            Files.deleteIfExists(targetFile);\n@@ -156,6 +167,0 @@\n-\n-        \/\/ comparing reported transferred bytes, must be 3 GB\n-        assertEquals(count, BYTES_WRITTEN);\n-\n-        \/\/ comparing content of both files, failing in case of any difference\n-        assertEquals(Files.mismatch(sourceFile, targetFile), -1);\n","filename":"test\/jdk\/java\/nio\/channels\/Channels\/TransferTo.java","additions":22,"deletions":17,"binary":false,"changes":39,"status":"modified"}]}