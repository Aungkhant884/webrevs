{"files":[{"patch":"@@ -2017,1 +2017,2 @@\n-                         !loop->_has_call;\n+                         !loop->_has_call &&\n+                         is_deleteable_safept(sfpt);\n","filename":"src\/hotspot\/share\/opto\/loopnode.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -0,0 +1,56 @@\n+\/*\n+ * Copyright (c) 2023, Red Hat, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8307131\n+ * @summary C2: assert(false) failed: malformed control flow\n+ * @library \/test\/lib\n+ * @run main\/othervm -Xcomp -XX:CompileOnly=TestNondeleteableSafePoint -XX:-TieredCompilation TestNondeleteableSafePoint\n+ *\/\n+\n+import jdk.test.lib.Utils;\n+\n+public class TestNondeleteableSafePoint {\n+    static int N;\n+\n+    public static void main(String[] strArr) throws Exception {\n+        Thread thread = new Thread() {\n+                public void run() {\n+                    test();\n+                }\n+            };\n+        \/\/ Give thread some time to trigger compilation\n+        thread.setDaemon(true);\n+        thread.start();\n+        Thread.sleep(Utils.adjustTimeout(500));\n+    }\n+\n+    static void test() {\n+        int i19, i21, iArr1[] = new int[N];\n+        while (true) {\n+            for (i19 = i21 = 2; i21 > i19; --i21) {\n+            }\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/loopstripmining\/TestNondeleteableSafePoint.java","additions":56,"deletions":0,"binary":false,"changes":56,"status":"added"}]}