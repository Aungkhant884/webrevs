{"files":[{"patch":"@@ -56,0 +56,1 @@\n+        private Object[] indexLocks;\n@@ -60,2 +61,4 @@\n-                        synchronized (this) {\n-                                int index = LocalRandom.nextInt(array.length);\n+                        int index = LocalRandom.nextInt(array.length);\n+                        \/\/ Synchronizing on array object would reduce the concurrency.\n+                        synchronized (indexLocks[index]) {\n+                                array[index] = null;\n@@ -75,3 +78,1 @@\n-                \/\/ Keep object count to 4, intention is to juggle\n-                \/\/ not to overwhelm gc\n-                int objectCount = 4;\n+                int objectCount = memoryStrategy.getCount(memory);\n@@ -82,0 +83,4 @@\n+                indexLocks = new Object[objectCount - 1];\n+                for (int i = 0; i < indexLocks.length; i++) {\n+                    indexLocks[i] = new Object();\n+                }\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/gc\/ArrayJuggle\/Juggle01\/Juggle01.java","additions":10,"deletions":5,"binary":false,"changes":15,"status":"modified"}]}