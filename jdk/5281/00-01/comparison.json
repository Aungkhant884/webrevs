{"files":[{"patch":"@@ -130,1 +130,1 @@\n-  \/\/ it's not  permanent, then free the  BufferBlob.  The rest of  the memory\n+  \/\/ it's not permanent, then free the BufferBlob.  The rest of the memory\n@@ -1083,1 +1083,1 @@\n-  \/\/ does not  change the state  of the list  per se), supportig  a simplistic\n+  \/\/ does not change the state of the list per se), supportig a simplistic\n@@ -1129,1 +1129,1 @@\n-\/\/ Acting as interface to reference  counted mapping [offset -> remark], where\n+\/\/ Acting as interface to reference counted mapping [offset -> remark], where\n","filename":"src\/hotspot\/share\/asm\/codeBuffer.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -281,3 +281,3 @@\n-\/\/ The assumption made  here is that most code remarks  (or comments) added to\n-\/\/ the generated assembly  code are unique, i.e. there is  very little gain in\n-\/\/ trying to  share the  strings between  the different  offsets tracked  in a\n+\/\/ The assumption made here is that most code remarks (or comments) added to\n+\/\/ the generated assembly code are unique, i.e. there is very little gain in\n+\/\/ trying to share the strings between the different offsets tracked in a\n@@ -306,1 +306,1 @@\n-\/\/ The assumption made here is that the  number of debug strings (with a fixed\n+\/\/ The assumption made here is that the number of debug strings (with a fixed\n","filename":"src\/hotspot\/share\/asm\/codeBuffer.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -82,1 +82,1 @@\n-    \/\/ InterpreterCodelets reside in the StubQueue  and should not be deleted,\n+    \/\/ InterpreterCodelets reside in the StubQueue and should not be deleted,\n","filename":"src\/hotspot\/share\/interpreter\/interpreter.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -38,2 +38,2 @@\n-    \/\/ Remove any  address expression  \"0x0123456789abcdef\" found in  order to\n-    \/\/ aid string comparison. Also remove  any trailing printout from a padded\n+    \/\/ Remove any address expression \"0x0123456789abcdef\" found in order to\n+    \/\/ aid string comparison. Also remove any trailing printout from a padded\n@@ -214,2 +214,2 @@\n-    \/\/ in tainting  the location start and  limit if no location  info. buffer\n-    \/\/ is present.\n+    \/\/ in tainting the location start and limit if no location info. buffer is\n+    \/\/ present.\n","filename":"test\/hotspot\/gtest\/code\/test_codestrings.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}