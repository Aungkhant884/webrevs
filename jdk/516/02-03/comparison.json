{"files":[{"patch":"@@ -702,16 +702,11 @@\n- * <p> Values of <i>precision<\/i> and <i>width<\/i> are maximally constrained by\n- * {@link Integer#MAX_VALUE}. Values appearing for these arguments that are\n- * larger than {@link Integer#MAX_VALUE} will result in\n- * {@link IllegalFormatPrecisionException} or\n- * {@link IllegalFormatWidthException} being thrown, respectively.\n- * Values for these fields in their associated exceptions will be given as\n- * {@link Integer#MIN_VALUE} for these cases.\n- * <\/p>\n- *\n- * <p>Values of <i>index<\/i> are maximally constrained by\n- * {@link Integer#MAX_VALUE} and minimally constrained by\n- * {@link Integer#MIN_VALUE}. Values appearing for <i>index<\/i> outside of these\n- * bounds will result in {@link IllegalFormatArgumentIndexException} being\n- * thrown with an indicated field value of {@link Integer#MIN_VALUE} for these\n- * cases.\n- * <\/p>\n+ * <p> Values of <i>precision<\/i> must be in the range zero to\n+ * {@link Integer#MAX_VALUE}, inclusive, otherwise\n+ * {@link IllegalFormatPrecisionException} is thrown.<\/p>\n+ *\n+ * <p> Values of <i>width<\/i> must be in the range {@link Integer#MIN_VALUE} to\n+ * {@link Integer#MAX_VALUE}, inclusive, otherwise\n+ * {@link IllegalFormatWidthException} will be thrown<\/p>\n+ *\n+ * <p> Values of <i>index<\/i> must be in the range one to\n+ * {@link Integer#MAX_VALUE}, inclusive, otherwise\n+ * {@link IllegalFormatArgumentIndexException} will be thrown.<\/p>\n","filename":"src\/java.base\/share\/classes\/java\/util\/Formatter.java","additions":11,"deletions":16,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -52,1 +52,1 @@\n-     * Get the value of the illegal index.\n+     * Gets the value of the illegal index.\n@@ -55,1 +55,1 @@\n-     * @return The value of the illegal index from a format string.\n+     * @return the illegal index value\n","filename":"src\/java.base\/share\/classes\/java\/util\/IllegalFormatArgumentIndexException.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}