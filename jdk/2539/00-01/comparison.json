{"files":[{"patch":"@@ -42,10 +42,1 @@\n-    bool samestack = _call_stack.equals(stack);\n-    \/\/ Note: in theory, if two callstacks end with the same lowest frame, they should always\n-    \/\/ reference the same single allocation call site and therefore share the same MEMFLAGS\n-    \/\/ value.\n-    \/\/ But if the call stack capturing was not precise enough (eg skipping too many\n-    \/\/ frames at the low end) we could accidentally lump several allocation sites together,\n-    \/\/ potentially with different flags. Lets assert that.\n-    assert(!samestack || _flag == flag,\n-           \"same stack different flags (%d vs %d)?\", (int)_flag, (int)flag);\n-    return samestack;\n+    return _call_stack.equals(stack);\n","filename":"src\/hotspot\/share\/services\/allocationSite.hpp","additions":1,"deletions":10,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -141,1 +141,1 @@\n-    if (site->equals(key, flags)) {\n+    if (site->flag() == flags && site->equals(key, flags)) {\n","filename":"src\/hotspot\/share\/services\/mallocSiteTable.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}