{"files":[{"patch":"@@ -8570,0 +8570,1 @@\n+  match(StoreStoreFence);\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64.ad","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -4520,0 +4520,1 @@\n+  match(StoreStoreFence);\n","filename":"src\/hotspot\/cpu\/arm\/arm.ad","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -7156,0 +7156,1 @@\n+  match(StoreStoreFence);\n","filename":"src\/hotspot\/cpu\/ppc\/ppc.ad","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -5058,0 +5058,1 @@\n+  match(StoreStoreFence);\n","filename":"src\/hotspot\/cpu\/s390\/s390.ad","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -6662,0 +6662,1 @@\n+  match(StoreStoreFence);\n","filename":"src\/hotspot\/cpu\/x86\/x86_32.ad","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -6790,0 +6790,1 @@\n+  match(StoreStoreFence);\n","filename":"src\/hotspot\/cpu\/x86\/x86_64.ad","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -4120,0 +4120,1 @@\n+    !strcmp(_opType,\"StoreStoreFence\") ||\n","filename":"src\/hotspot\/share\/adlc\/formssel.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -145,0 +145,1 @@\n+  case vmIntrinsics::_storeStoreFence:\n","filename":"src\/hotspot\/share\/c1\/c1_Compiler.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2987,0 +2987,3 @@\n+  case vmIntrinsics::_storeStoreFence:\n+    __ membar_storestore();\n+    break;\n","filename":"src\/hotspot\/share\/c1\/c1_LIRGenerator.cpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -526,0 +526,3 @@\n+  do_intrinsic(_storeStoreFence,          jdk_internal_misc_Unsafe,     storeStoreFence_name, storeStoreFence_signature, F_R)    \\\n+   do_name(     storeStoreFence_name,                                   \"storeStoreFence\")                                       \\\n+   do_alias(    storeStoreFence_signature,                              void_method_signature)                                   \\\n","filename":"src\/hotspot\/share\/classfile\/vmIntrinsics.hpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -607,0 +607,1 @@\n+  case vmIntrinsics::_storeStoreFence:\n","filename":"src\/hotspot\/share\/opto\/c2compiler.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -222,0 +222,1 @@\n+macro(StoreStoreFence)\n","filename":"src\/hotspot\/share\/opto\/classes.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -470,0 +470,1 @@\n+  case vmIntrinsics::_storeStoreFence:\n@@ -2698,0 +2699,3 @@\n+    case vmIntrinsics::_storeStoreFence:\n+      insert_mem_bar(Op_StoreStoreFence);\n+      return true;\n","filename":"src\/hotspot\/share\/opto\/library_call.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1083,1 +1083,2 @@\n-          opc == Op_MemBarStoreStore) {\n+          opc == Op_MemBarStoreStore ||\n+          opc == Op_StoreStoreFence) {\n@@ -3303,0 +3304,2 @@\n+  case Op_MemBarStoreStore:  return new MemBarStoreStoreNode(C, atp, pn);\n+  case Op_StoreStoreFence:   return new StoreStoreFenceNode(C, atp, pn);\n@@ -3309,1 +3312,0 @@\n-  case Op_MemBarStoreStore:  return new MemBarStoreStoreNode(C, atp, pn);\n","filename":"src\/hotspot\/share\/opto\/memnode.cpp","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1312,0 +1312,7 @@\n+class StoreStoreFenceNode: public MemBarNode {\n+public:\n+  StoreStoreFenceNode(Compile* C, int alias_idx, Node* precedent)\n+    : MemBarNode(C, alias_idx, precedent) {}\n+  virtual int Opcode() const;\n+};\n+\n","filename":"src\/hotspot\/share\/opto\/memnode.hpp","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -3444,3 +3444,0 @@\n-     * @implNote\n-     * This method is operationally equivalent to {@link #storeFence()}.\n-     *\n@@ -3449,0 +3446,1 @@\n+    @IntrinsicCandidate\n@@ -3450,0 +3448,2 @@\n+        \/\/ Without the special intrinsic, default to a stronger storeFence,\n+        \/\/ which is already intrinsified.\n@@ -3453,1 +3453,0 @@\n-\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/misc\/Unsafe.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"}]}