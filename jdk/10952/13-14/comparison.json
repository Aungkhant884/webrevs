{"files":[{"patch":"@@ -789,1 +789,1 @@\n-        this.scopedValueBindings = Thread.class;\n+        this.scopedValueBindings = NEW_THREAD_BINDINGS;\n@@ -1620,0 +1620,3 @@\n+    \/\/ The VM recognizes this method as special, so any changes to the\n+    \/\/ name or signature require corresponding changes in\n+    \/\/ JVM_FindScopedValueBindings().\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Thread.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -159,1 +159,1 @@\n- * then bind a single `ScopedValue` to an instance of that record.\n+ * then bind a single {@code ScopedValue} to an instance of that record.\n@@ -187,1 +187,1 @@\n- * @param <T> the type of the value\n+ * @param <T> the type of the object bound to this {@code ScopedValue}\n@@ -420,1 +420,1 @@\n-         * Execute the action with a set of ScopedValue bindings.\n+         * Execute the action with a set of {@code ScopedValue} bindings.\n@@ -482,1 +482,1 @@\n-     * @param key the ScopedValue\n+     * @param key the {@code ScopedValue}\n@@ -517,1 +517,1 @@\n-     * @param key the ScopedValue\n+     * @param key the {@code ScopedValue}\n@@ -720,1 +720,1 @@\n-    private static class Cache {\n+    private static final class Cache {\n@@ -749,1 +749,1 @@\n-        static final int primaryIndex(ScopedValue<?> key) {\n+        static int primaryIndex(ScopedValue<?> key) {\n@@ -753,1 +753,1 @@\n-        static final int secondaryIndex(ScopedValue<?> key) {\n+        static int secondaryIndex(ScopedValue<?> key) {\n@@ -757,1 +757,1 @@\n-        private static final int primarySlot(ScopedValue<?> key) {\n+        private static int primarySlot(ScopedValue<?> key) {\n@@ -761,1 +761,1 @@\n-        private static final int secondarySlot(ScopedValue<?> key) {\n+        private static int secondarySlot(ScopedValue<?> key) {\n@@ -765,1 +765,1 @@\n-        static final int primarySlot(int hash) {\n+        static int primarySlot(int hash) {\n@@ -769,1 +769,1 @@\n-        static final int secondarySlot(int hash) {\n+        static int secondarySlot(int hash) {\n@@ -824,4 +824,0 @@\n-        public static void invalidate() {\n-            setScopedValueCache(null);\n-        }\n-\n","filename":"src\/jdk.incubator.concurrent\/share\/classes\/jdk\/incubator\/concurrent\/ScopedValue.java","additions":12,"deletions":16,"binary":false,"changes":28,"status":"modified"}]}