{"files":[{"patch":"@@ -56,4 +56,3 @@\n-        String wrapper = args[0];\n-        String className = args[1];\n-        String[] classArgs = new String[args.length - 2];\n-        System.arraycopy(args, 2, classArgs, 0, args.length - 2);\n+        String className = args[0];\n+        String[] classArgs = new String[args.length - 1];\n+        System.arraycopy(args, 1, classArgs, 0, args.length - 1);\n@@ -64,1 +63,1 @@\n-        if (wrapper.equals(\"Virtual\")) {\n+        if (isVirtual()) {\n@@ -89,1 +88,1 @@\n-        } else if (wrapper.equals(\"Kernel\")) {\n+        } else if (getWrapperName().equals(\"Kernel\")) {\n","filename":"test\/jdk\/com\/sun\/jdi\/DebuggeeWrapper.java","additions":5,"deletions":6,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -514,2 +514,2 @@\n-        \/\/     argInfo.targetAppCommandLine : DebuggeeWrapper Virtual Frames2Targ\n-        \/\/     argInfo.targetVMArgs : -Xss4M\n+        \/\/     argInfo.targetAppCommandLine : DebuggeeWrapper Frames2Targ\n+        \/\/     argInfo.targetVMArgs : -Xss4M -Dmain.wrapper=Virtual\n@@ -550,2 +550,2 @@\n-        \/\/ Need to change args to run wrapper using command like 'DebuggeeWrapper Virtual <app-name>'\n-        \/\/ Additionally property 'main.wrapper' should be set for tests which start additional threads\n+        \/\/ Need to change args to run wrapper using command like 'DebuggeeWrapper <app-name>'\n+        \/\/ and set property 'main.wrapper' so test could use DebuggeeWrapper.isVirtual() method\n@@ -555,2 +555,1 @@\n-            argInfo.targetAppCommandLine = DebuggeeWrapper.class.getName() + ' '\n-                    + mainWrapper + ' ' + argInfo.targetAppCommandLine;\n+            argInfo.targetAppCommandLine = DebuggeeWrapper.class.getName() + ' ' + argInfo.targetAppCommandLine;\n","filename":"test\/jdk\/com\/sun\/jdi\/TestScaffold.java","additions":5,"deletions":6,"binary":false,"changes":11,"status":"modified"}]}