{"files":[{"patch":"@@ -60,4 +60,2 @@\n-  \/\/ Protects the buffers\n-  \/\/ Note: Uses a SemaphoreLock instead of a Mutex because it:\n-  \/\/ 1) provides trylock()\n-  \/\/ 2) doesn't require a lock order (precious logging is a leaf operation)\n+  \/\/ Protects the buffers - Uses a SemaphoreLock instead of a Mutex because\n+  \/\/ it doesn't require a lock order (precious logging is a leaf operation)\n","filename":"src\/hotspot\/share\/gc\/shared\/gcLogPrecious.hpp","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -70,3 +70,3 @@\n-  void lock()    { _semaphore.wait(); }\n-  void unlock()  { _semaphore.signal(); }\n-  bool trylock() { return _semaphore.trywait(); }\n+  void lock()     { _semaphore.wait(); }\n+  void unlock()   { _semaphore.signal(); }\n+  bool try_lock() { return _semaphore.trywait(); }\n","filename":"src\/hotspot\/share\/runtime\/semaphore.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -113,1 +113,1 @@\n-TEST(SemaphoreLock, trylock) {\n+TEST(SemaphoreLock, try_lock) {\n@@ -116,1 +116,1 @@\n-  ASSERT_EQ(lock.trylock(), false);\n+  ASSERT_EQ(lock.try_lock(), false);\n@@ -119,1 +119,1 @@\n-  ASSERT_EQ(lock.trylock(), true);\n+  ASSERT_EQ(lock.try_lock(), true);\n@@ -128,1 +128,1 @@\n-    ASSERT_EQ(lock.trylock(), false);\n+    ASSERT_EQ(lock.try_lock(), false);\n@@ -131,1 +131,1 @@\n-  ASSERT_EQ(lock.trylock(), true);\n+  ASSERT_EQ(lock.try_lock(), true);\n","filename":"test\/hotspot\/gtest\/runtime\/test_semaphore.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"}]}