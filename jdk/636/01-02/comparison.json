{"files":[{"patch":"@@ -450,0 +450,14 @@\n+#if defined(AIX)\n+\n+\/\/ Set thread signal mask (for some reason on AIX sigthreadmask() seems\n+\/\/ to be the thing to call; documentation is not terribly clear about whether\n+\/\/ pthread_sigmask also works, and if it does, whether it does the same.\n+bool set_thread_signal_mask(int how, const sigset_t* set, sigset_t* oset) {\n+  const int rc = ::pthread_sigmask(how, set, oset);\n+  \/\/ return value semantics differ slightly for error case:\n+  \/\/ pthread_sigmask returns error number, sigthreadmask -1 and sets global errno\n+  \/\/ (so, pthread_sigmask is more theadsafe for error handling)\n+  \/\/ But success is always 0.\n+  return rc == 0 ? true : false;\n+}\n+\n@@ -453,1 +467,1 @@\n-int unblock_program_error_signals() {\n+bool unblock_program_error_signals() {\n@@ -460,1 +474,1 @@\n-  return PosixSignals::unblock_thread_signal_mask(&set);\n+  return set_thread_signal_mask(SIG_UNBLOCK, &set, NULL);\n@@ -463,0 +477,2 @@\n+#endif\n+\n@@ -467,0 +483,2 @@\n+\/\/ TODO: reconcile the differences between Linux\/BSD vs AIX here!\n+#if defined(AIX)\n@@ -471,0 +489,1 @@\n+#endif\n@@ -1278,1 +1297,1 @@\n-#if defined(AIX)\n+#if defined(SIGDANGER)\n@@ -1282,1 +1301,2 @@\n-#elif defined(PPC64) || defined(AIX)\n+#endif\n+#if defined(SIGTRAP)\n@@ -1299,10 +1319,2 @@\n-\/\/ Set thread signal mask (for some reason on AIX sigthreadmask() seems\n-\/\/ to be the thing to call; documentation is not terribly clear about whether\n-\/\/ pthread_sigmask also works, and if it does, whether it does the same.\n-bool PosixSignals::unblock_thread_signal_mask(const sigset_t *set) {\n-  const int rc = pthread_sigmask(SIG_UNBLOCK, set, NULL);\n-  \/\/ return value semantics differ slightly for error case:\n-  \/\/ pthread_sigmask returns error number, sigthreadmask -1 and sets global errno\n-  \/\/ (so, pthread_sigmask is more theadsafe for error handling)\n-  \/\/ But success is always 0.\n-  return rc == 0 ? true : false;\n+int PosixSignals::unblock_thread_signal_mask(const sigset_t *set) {\n+  return pthread_sigmask(SIG_UNBLOCK, set, NULL);\n","filename":"src\/hotspot\/os\/posix\/signals_posix.cpp","additions":26,"deletions":14,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -54,1 +54,1 @@\n-  static bool unblock_thread_signal_mask(const sigset_t *set);\n+  static int unblock_thread_signal_mask(const sigset_t *set);\n","filename":"src\/hotspot\/os\/posix\/signals_posix.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}