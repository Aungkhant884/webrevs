{"files":[{"patch":"@@ -1442,19 +1442,0 @@\n-void os::print_signal_handlers(outputStream* st, char* buf, size_t buflen) {\n-  st->print_cr(\"Signal Handlers:\");\n-  PosixSignals::print_signal_handler(st, SIGSEGV, buf, buflen);\n-  PosixSignals::print_signal_handler(st, SIGBUS , buf, buflen);\n-  PosixSignals::print_signal_handler(st, SIGFPE , buf, buflen);\n-  PosixSignals::print_signal_handler(st, SIGPIPE, buf, buflen);\n-  PosixSignals::print_signal_handler(st, SIGXFSZ, buf, buflen);\n-  PosixSignals::print_signal_handler(st, SIGILL , buf, buflen);\n-  PosixSignals::print_signal_handler(st, SR_signum, buf, buflen);\n-  PosixSignals::print_signal_handler(st, SHUTDOWN1_SIGNAL, buf, buflen);\n-  PosixSignals::print_signal_handler(st, SHUTDOWN2_SIGNAL , buf, buflen);\n-  PosixSignals::print_signal_handler(st, SHUTDOWN3_SIGNAL , buf, buflen);\n-  PosixSignals::print_signal_handler(st, BREAK_SIGNAL, buf, buflen);\n-  PosixSignals::print_signal_handler(st, SIGTRAP, buf, buflen);\n-  \/\/ We also want to know if someone else adds a SIGDANGER handler because\n-  \/\/ that will interfere with OOM killling.\n-  PosixSignals::print_signal_handler(st, SIGDANGER, buf, buflen);\n-}\n-\n@@ -2520,3 +2501,1 @@\n-  \/\/ initialize suspend\/resume support - must do this before signal_sets_init()\n-  if (PosixSignals::SR_initialize() != 0) {\n-    perror(\"SR_initialize failed\");\n+  if (PosixSignals::init() == JNI_ERR) {\n@@ -2526,7 +2505,0 @@\n-  PosixSignals::signal_sets_init();\n-  PosixSignals::install_signal_handlers();\n-  \/\/ Initialize data for jdk.internal.misc.Signal\n-  if (!ReduceSignalUsage) {\n-    PosixSignals::jdk_misc_signal_init();\n-  }\n-\n@@ -2602,8 +2574,0 @@\n-void os::SuspendedThreadTask::internal_do_task() {\n-  if (PosixSignals::do_suspend(_thread->osthread())) {\n-    SuspendedThreadTaskContext context(_thread, _thread->osthread()->ucontext());\n-    do_task(context);\n-    PosixSignals::do_resume(_thread->osthread());\n-  }\n-}\n-\n","filename":"src\/hotspot\/os\/aix\/os_aix.cpp","additions":1,"deletions":37,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -95,1 +95,0 @@\n-  static address   ucontext_get_pc(const ucontext_t* uc);\n@@ -98,2 +97,0 @@\n-  \/\/ Set PC into context. Needed for continuation after signal.\n-  static void ucontext_set_pc(ucontext_t* uc, address pc);\n","filename":"src\/hotspot\/os\/aix\/os_aix.hpp","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1542,15 +1542,0 @@\n-void os::print_signal_handlers(outputStream* st, char* buf, size_t buflen) {\n-  st->print_cr(\"Signal Handlers:\");\n-  PosixSignals::print_signal_handler(st, SIGSEGV, buf, buflen);\n-  PosixSignals::print_signal_handler(st, SIGBUS , buf, buflen);\n-  PosixSignals::print_signal_handler(st, SIGFPE , buf, buflen);\n-  PosixSignals::print_signal_handler(st, SIGPIPE, buf, buflen);\n-  PosixSignals::print_signal_handler(st, SIGXFSZ, buf, buflen);\n-  PosixSignals::print_signal_handler(st, SIGILL , buf, buflen);\n-  PosixSignals::print_signal_handler(st, SR_signum, buf, buflen);\n-  PosixSignals::print_signal_handler(st, SHUTDOWN1_SIGNAL, buf, buflen);\n-  PosixSignals::print_signal_handler(st, SHUTDOWN2_SIGNAL , buf, buflen);\n-  PosixSignals::print_signal_handler(st, SHUTDOWN3_SIGNAL , buf, buflen);\n-  PosixSignals::print_signal_handler(st, BREAK_SIGNAL, buf, buflen);\n-}\n-\n@@ -2141,3 +2126,1 @@\n-  \/\/ initialize suspend\/resume support - must do this before signal_sets_init()\n-  if (PosixSignals::SR_initialize() != 0) {\n-    perror(\"SR_initialize failed\");\n+  if (PosixSignals::init() == JNI_ERR) {\n@@ -2147,7 +2130,0 @@\n-  PosixSignals::signal_sets_init();\n-  PosixSignals::install_signal_handlers();\n-  \/\/ Initialize data for jdk.internal.misc.Signal\n-  if (!ReduceSignalUsage) {\n-    PosixSignals::jdk_misc_signal_init();\n-  }\n-\n@@ -2284,8 +2260,0 @@\n-void os::SuspendedThreadTask::internal_do_task() {\n-  if (PosixSignals::do_suspend(_thread->osthread())) {\n-    SuspendedThreadTaskContext context(_thread, _thread->osthread()->ucontext());\n-    do_task(context);\n-    PosixSignals::do_resume(_thread->osthread());\n-  }\n-}\n-\n","filename":"src\/hotspot\/os\/bsd\/os_bsd.cpp","additions":1,"deletions":33,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -71,2 +71,0 @@\n-  static address   ucontext_get_pc(const ucontext_t* uc);\n-  static void ucontext_set_pc(ucontext_t* uc, address pc);\n","filename":"src\/hotspot\/os\/bsd\/os_bsd.hpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -978,1 +978,1 @@\n-  assert(!sigismember(&current, SR_signum), \"SR signal should not be blocked!\");\n+  assert(!sigismember(&current, PosixSignals::SR_signum), \"SR signal should not be blocked!\");\n@@ -2603,18 +2603,0 @@\n-void os::print_signal_handlers(outputStream* st, char* buf, size_t buflen) {\n-  st->print_cr(\"Signal Handlers:\");\n-  PosixSignals::print_signal_handler(st, SIGSEGV, buf, buflen);\n-  PosixSignals::print_signal_handler(st, SIGBUS , buf, buflen);\n-  PosixSignals::print_signal_handler(st, SIGFPE , buf, buflen);\n-  PosixSignals::print_signal_handler(st, SIGPIPE, buf, buflen);\n-  PosixSignals::print_signal_handler(st, SIGXFSZ, buf, buflen);\n-  PosixSignals::print_signal_handler(st, SIGILL , buf, buflen);\n-  PosixSignals::print_signal_handler(st, SR_signum, buf, buflen);\n-  PosixSignals::print_signal_handler(st, SHUTDOWN1_SIGNAL, buf, buflen);\n-  PosixSignals::print_signal_handler(st, SHUTDOWN2_SIGNAL , buf, buflen);\n-  PosixSignals::print_signal_handler(st, SHUTDOWN3_SIGNAL , buf, buflen);\n-  PosixSignals::print_signal_handler(st, BREAK_SIGNAL, buf, buflen);\n-#if defined(PPC64)\n-  PosixSignals::print_signal_handler(st, SIGTRAP, buf, buflen);\n-#endif\n-}\n-\n@@ -4457,3 +4439,1 @@\n-  \/\/ initialize suspend\/resume support - must do this before signal_sets_init()\n-  if (PosixSignals::SR_initialize() != 0) {\n-    perror(\"SR_initialize failed\");\n+  if (PosixSignals::init() == JNI_ERR) {\n@@ -4463,7 +4443,0 @@\n-  PosixSignals::signal_sets_init();\n-  PosixSignals::install_signal_handlers();\n-  \/\/ Initialize data for jdk.internal.misc.Signal\n-  if (!ReduceSignalUsage) {\n-    PosixSignals::jdk_misc_signal_init();\n-  }\n-\n@@ -4707,10 +4680,0 @@\n-\/\/\/\n-\n-void os::SuspendedThreadTask::internal_do_task() {\n-  if (PosixSignals::do_suspend(_thread->osthread())) {\n-    SuspendedThreadTaskContext context(_thread, _thread->osthread()->ucontext());\n-    do_task(context);\n-    PosixSignals::do_resume(_thread->osthread());\n-  }\n-}\n-\n","filename":"src\/hotspot\/os\/linux\/os_linux.cpp","additions":2,"deletions":39,"binary":false,"changes":41,"status":"modified"},{"patch":"@@ -137,2 +137,0 @@\n-  static address   ucontext_get_pc(const ucontext_t* uc);\n-  static void ucontext_set_pc(ucontext_t* uc, address pc);\n","filename":"src\/hotspot\/os\/linux\/os_linux.hpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -91,0 +91,4 @@\n+  \/\/ Set PC into context. Needed for continuation after signal.\n+  static address ucontext_get_pc(const ucontext_t* ctx);\n+  static void    ucontext_set_pc(ucontext_t* ctx, address pc);\n+\n","filename":"src\/hotspot\/os\/posix\/os_posix.hpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -39,0 +39,2 @@\n+#include <signal.h>\n+\n@@ -46,10 +48,0 @@\n-\/\/ glibc on Bsd platform uses non-documented flag\n-\/\/ to indicate, that some special sort of signal\n-\/\/ trampoline is used.\n-\/\/ We will never set this flag, and we should\n-\/\/ ignore this flag in our diagnostic\n-#ifdef SIGNIFICANT_SIGNAL_MASK\n-  #undef SIGNIFICANT_SIGNAL_MASK\n-#endif\n-#define SIGNIFICANT_SIGNAL_MASK (~0x04000000)\n-\n@@ -97,0 +89,4 @@\n+\/\/ Signal number used to suspend\/resume a thread\n+\/\/ do not use any signal number less than SIGSEGV, see 4355769\n+int PosixSignals::SR_signum = SIGUSR2;\n+\n@@ -267,1 +263,1 @@\n-void PosixSignals::jdk_misc_signal_init() {\n+void jdk_misc_signal_init() {\n@@ -634,3 +630,0 @@\n-\n-  act.sa_flags &= SIGNIFICANT_SIGNAL_MASK;\n-\n@@ -660,1 +653,1 @@\n-    if (sig == SR_signum) {\n+    if (sig == PosixSignals::SR_signum) {\n@@ -766,1 +759,1 @@\n-#if defined(PPC64)\n+#if defined(PPC64) || defined(AIX)\n@@ -779,1 +772,1 @@\n-  do_signal_check(SR_signum);\n+  do_signal_check(PosixSignals::SR_signum);\n@@ -1144,1 +1137,1 @@\n-void PosixSignals::install_signal_handlers() {\n+void install_signal_handlers() {\n@@ -1249,3 +1242,0 @@\n-  \/\/ See comment for SIGNIFICANT_SIGNAL_MASK define\n-  sa.sa_flags &= SIGNIFICANT_SIGNAL_MASK;\n-\n@@ -1273,1 +1263,1 @@\n-    sa.sa_flags = VMError::get_resetted_sigflags(sig) & SIGNIFICANT_SIGNAL_MASK;\n+    sa.sa_flags = VMError::get_resetted_sigflags(sig);\n@@ -1294,0 +1284,23 @@\n+void os::print_signal_handlers(outputStream* st, char* buf, size_t buflen) {\n+  st->print_cr(\"Signal Handlers:\");\n+  PosixSignals::print_signal_handler(st, SIGSEGV, buf, buflen);\n+  PosixSignals::print_signal_handler(st, SIGBUS , buf, buflen);\n+  PosixSignals::print_signal_handler(st, SIGFPE , buf, buflen);\n+  PosixSignals::print_signal_handler(st, SIGPIPE, buf, buflen);\n+  PosixSignals::print_signal_handler(st, SIGXFSZ, buf, buflen);\n+  PosixSignals::print_signal_handler(st, SIGILL , buf, buflen);\n+  PosixSignals::print_signal_handler(st, PosixSignals::SR_signum, buf, buflen);\n+  PosixSignals::print_signal_handler(st, SHUTDOWN1_SIGNAL, buf, buflen);\n+  PosixSignals::print_signal_handler(st, SHUTDOWN2_SIGNAL , buf, buflen);\n+  PosixSignals::print_signal_handler(st, SHUTDOWN3_SIGNAL , buf, buflen);\n+  PosixSignals::print_signal_handler(st, BREAK_SIGNAL, buf, buflen);\n+#if defined(SIGDANGER)\n+  \/\/ We also want to know if someone else adds a SIGDANGER handler because\n+  \/\/ that will interfere with OOM killling.\n+  PosixSignals::print_signal_handler(st, SIGDANGER, buf, buflen);\n+#endif\n+#if defined(SIGTRAP)\n+  PosixSignals::print_signal_handler(st, SIGTRAP, buf, buflen);\n+#endif\n+}\n+\n@@ -1310,25 +1323,1 @@\n-address PosixSignals::ucontext_get_pc(const ucontext_t* ctx) {\n-#if defined(AIX)\n-   return os::Aix::ucontext_get_pc(ctx);\n-#elif defined(BSD)\n-   return os::Bsd::ucontext_get_pc(ctx);\n-#elif defined(LINUX)\n-   return os::Linux::ucontext_get_pc(ctx);\n-#else\n-   VMError::report_and_die(\"unimplemented ucontext_get_pc\");\n-#endif\n-}\n-\n-void PosixSignals::ucontext_set_pc(ucontext_t* ctx, address pc) {\n-#if defined(AIX)\n-   os::Aix::ucontext_set_pc(ctx, pc);\n-#elif defined(BSD)\n-   os::Bsd::ucontext_set_pc(ctx, pc);\n-#elif defined(LINUX)\n-   os::Linux::ucontext_set_pc(ctx, pc);\n-#else\n-   VMError::report_and_die(\"unimplemented ucontext_set_pc\");\n-#endif\n-}\n-\n-void PosixSignals::signal_sets_init() {\n+void signal_sets_init() {\n@@ -1360,1 +1349,1 @@\n-  sigaddset(&unblocked_sigs, SR_signum);\n+  sigaddset(&unblocked_sigs, PosixSignals::SR_signum);\n@@ -1507,1 +1496,1 @@\n-      sigdelset(&suspend_set, SR_signum);\n+      sigdelset(&suspend_set, PosixSignals::SR_signum);\n@@ -1543,1 +1532,1 @@\n-int PosixSignals::SR_initialize() {\n+int SR_initialize() {\n@@ -1551,1 +1540,1 @@\n-      SR_signum = sig;\n+      PosixSignals::SR_signum = sig;\n@@ -1554,1 +1543,1 @@\n-              sig, MAX2(SIGSEGV, SIGBUS)+1, NSIG-1, SR_signum);\n+              sig, MAX2(SIGSEGV, SIGBUS)+1, NSIG-1, PosixSignals::SR_signum);\n@@ -1558,1 +1547,1 @@\n-  assert(SR_signum > SIGSEGV && SR_signum > SIGBUS,\n+  assert(PosixSignals::SR_signum > SIGSEGV && PosixSignals::SR_signum > SIGBUS,\n@@ -1562,1 +1551,1 @@\n-  sigaddset(&SR_sigset, SR_signum);\n+  sigaddset(&SR_sigset, PosixSignals::SR_signum);\n@@ -1571,1 +1560,1 @@\n-  if (sigaction(SR_signum, &act, 0) == -1) {\n+  if (sigaction(PosixSignals::SR_signum, &act, 0) == -1) {\n@@ -1576,1 +1565,1 @@\n-  set_our_sigflags(SR_signum, act.sa_flags);\n+  set_our_sigflags(PosixSignals::SR_signum, act.sa_flags);\n@@ -1581,1 +1570,1 @@\n-  int status = pthread_kill(osthread->pthread_id(), SR_signum);\n+  int status = pthread_kill(osthread->pthread_id(), PosixSignals::SR_signum);\n@@ -1651,0 +1640,27 @@\n+\n+void os::SuspendedThreadTask::internal_do_task() {\n+  if (PosixSignals::do_suspend(_thread->osthread())) {\n+    os::SuspendedThreadTaskContext context(_thread, _thread->osthread()->ucontext());\n+    do_task(context);\n+    PosixSignals::do_resume(_thread->osthread());\n+  }\n+}\n+\n+int PosixSignals::init() {\n+  \/\/ initialize suspend\/resume support - must do this before signal_sets_init()\n+  if (SR_initialize() != 0) {\n+    perror(\"SR_initialize failed\");\n+    return JNI_ERR;\n+  }\n+\n+  signal_sets_init();\n+\n+  install_signal_handlers();\n+\n+  \/\/ Initialize data for jdk.internal.misc.Signal\n+  if (!ReduceSignalUsage) {\n+    jdk_misc_signal_init();\n+  }\n+\n+  return JNI_OK;\n+}\n","filename":"src\/hotspot\/os\/posix\/signals_posix.cpp","additions":73,"deletions":57,"binary":false,"changes":130,"status":"modified"},{"patch":"@@ -28,2 +28,1 @@\n-#include \"memory\/allocation.hpp\"\n-#include \"utilities\/globalDefinitions.hpp\"\n+#include \"memory\/allStatic.hpp\"\n@@ -31,1 +30,1 @@\n-#include <signal.h>\n+\/\/ Forward declarations to be independent of the include structure.\n@@ -33,3 +32,6 @@\n-\/\/ Signal number used to suspend\/resume a thread\n-\/\/ do not use any signal number less than SIGSEGV, see 4355769\n-static int SR_signum = SIGUSR2;\n+typedef siginfo_t siginfo_t;\n+typedef sigset_t sigset_t;\n+\n+class outputStream;\n+class Thread;\n+class OSThread;\n@@ -41,0 +43,5 @@\n+  \/\/ Signal number used to suspend\/resume a thread\n+  static int SR_signum;\n+\n+  static int init();\n+\n@@ -42,1 +49,0 @@\n-  static void install_signal_handlers();\n@@ -45,1 +51,0 @@\n-  static void signal_sets_init();\n@@ -53,4 +58,0 @@\n-  static address ucontext_get_pc(const ucontext_t* ctx);\n-  \/\/ Set PC into context. Needed for continuation after signal.\n-  static void ucontext_set_pc(ucontext_t* ctx, address pc);\n-\n@@ -58,1 +59,0 @@\n-  static int SR_initialize();\n@@ -64,3 +64,0 @@\n-\n-  \/\/ sun.misc.Signal support\n-  static void jdk_misc_signal_init();\n","filename":"src\/hotspot\/os\/posix\/signals_posix.hpp","additions":13,"deletions":16,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -116,1 +116,1 @@\n-  address pc = (uc != NULL) ? PosixSignals::ucontext_get_pc(uc) : NULL;\n+  address pc = (uc != NULL) ? os::Posix::ucontext_get_pc(uc) : NULL;\n@@ -125,1 +125,1 @@\n-    PosixSignals::ucontext_set_pc(uc, StubRoutines::continuation_for_safefetch_fault(pc));\n+    os::Posix::ucontext_set_pc(uc, StubRoutines::continuation_for_safefetch_fault(pc));\n","filename":"src\/hotspot\/os\/posix\/vmError_posix.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1874,4 +1874,0 @@\n-\n-void os::print_signal_handlers(outputStream* st, char* buf, size_t buflen) {\n-  \/\/ do nothing\n-}\n","filename":"src\/hotspot\/os\/windows\/os_windows.cpp","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -92,1 +92,1 @@\n-address os::Aix::ucontext_get_pc(const ucontext_t * uc) {\n+address os::Posix::ucontext_get_pc(const ucontext_t * uc) {\n@@ -96,1 +96,1 @@\n-intptr_t* os::Aix::ucontext_get_sp(const ucontext_t * uc) {\n+intptr_t* os::Posix::ucontext_get_sp(const ucontext_t * uc) {\n@@ -105,1 +105,1 @@\n-void os::Aix::ucontext_set_pc(ucontext_t* uc, address new_pc) {\n+void os::Posix::ucontext_set_pc(ucontext_t* uc, address new_pc) {\n@@ -120,1 +120,1 @@\n-    epc = os::Aix::ucontext_get_pc(uc);\n+    epc = os::Posix::ucontext_get_pc(uc);\n@@ -146,1 +146,1 @@\n-  address pc = (address) os::Aix::ucontext_get_pc(uc);\n+  address pc = (address) os::Posix::ucontext_get_pc(uc);\n@@ -244,1 +244,1 @@\n-  address const pc = uc ? os::Aix::ucontext_get_pc(uc) : NULL;\n+  address const pc = uc ? os::Posix::ucontext_get_pc(uc) : NULL;\n@@ -253,1 +253,1 @@\n-    address const pc = os::Aix::ucontext_get_pc(uc);\n+    address const pc = os::Posix::ucontext_get_pc(uc);\n@@ -255,1 +255,1 @@\n-      os::Aix::ucontext_set_pc(uc, StubRoutines::continuation_for_safefetch_fault(pc));\n+      os::Posix::ucontext_set_pc(uc, StubRoutines::continuation_for_safefetch_fault(pc));\n@@ -477,1 +477,1 @@\n-          os::Aix::ucontext_set_pc(uc, next_pc);\n+          os::Posix::ucontext_set_pc(uc, next_pc);\n@@ -502,1 +502,1 @@\n-        os::Aix::ucontext_set_pc(uc, next_pc);\n+        os::Posix::ucontext_set_pc(uc, next_pc);\n@@ -524,1 +524,1 @@\n-    os::Aix::ucontext_set_pc(uc, stub);\n+    os::Posix::ucontext_set_pc(uc, stub);\n@@ -606,1 +606,1 @@\n-  address pc = os::Aix::ucontext_get_pc(uc);\n+  address pc = os::Posix::ucontext_get_pc(uc);\n","filename":"src\/hotspot\/os_cpu\/aix_ppc\/os_aix_ppc.cpp","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -300,1 +300,1 @@\n-address os::Bsd::ucontext_get_pc(const ucontext_t * uc) {\n+address os::Posix::ucontext_get_pc(const ucontext_t * uc) {\n@@ -304,1 +304,1 @@\n-void os::Bsd::ucontext_set_pc(ucontext_t * uc, address pc) {\n+void os::Posix::ucontext_set_pc(ucontext_t * uc, address pc) {\n@@ -323,1 +323,1 @@\n-    epc = os::Bsd::ucontext_get_pc(uc);\n+    epc = os::Posix::ucontext_get_pc(uc);\n@@ -343,1 +343,1 @@\n-  address pc = (address) os::Bsd::ucontext_get_pc(uc);\n+  address pc = (address) os::Posix::ucontext_get_pc(uc);\n@@ -484,1 +484,1 @@\n-    pc = (address) os::Bsd::ucontext_get_pc(uc);\n+    pc = (address) os::Posix::ucontext_get_pc(uc);\n@@ -487,1 +487,1 @@\n-      os::Bsd::ucontext_set_pc(uc, StubRoutines::continuation_for_safefetch_fault(pc));\n+      os::Posix::ucontext_set_pc(uc, StubRoutines::continuation_for_safefetch_fault(pc));\n@@ -676,1 +676,1 @@\n-    address pc = os::Bsd::ucontext_get_pc(uc);\n+    address pc = os::Posix::ucontext_get_pc(uc);\n@@ -738,1 +738,1 @@\n-    os::Bsd::ucontext_set_pc(uc, stub);\n+    os::Posix::ucontext_set_pc(uc, stub);\n@@ -753,1 +753,1 @@\n-    pc = os::Bsd::ucontext_get_pc(uc);\n+    pc = os::Posix::ucontext_get_pc(uc);\n@@ -1016,1 +1016,1 @@\n-  address pc = os::Bsd::ucontext_get_pc(uc);\n+  address pc = os::Posix::ucontext_get_pc(uc);\n","filename":"src\/hotspot\/os_cpu\/bsd_x86\/os_bsd_x86.cpp","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -97,1 +97,1 @@\n-address os::Bsd::ucontext_get_pc(const ucontext_t* uc) {\n+address os::Posix::ucontext_get_pc(const ucontext_t* uc) {\n@@ -102,1 +102,1 @@\n-void os::Bsd::ucontext_set_pc(ucontext_t * uc, address pc) {\n+void os::Posix::ucontext_set_pc(ucontext_t * uc, address pc) {\n","filename":"src\/hotspot\/os_cpu\/bsd_zero\/os_bsd_zero.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -95,1 +95,1 @@\n-address os::Linux::ucontext_get_pc(const ucontext_t * uc) {\n+address os::Posix::ucontext_get_pc(const ucontext_t * uc) {\n@@ -99,1 +99,1 @@\n-void os::Linux::ucontext_set_pc(ucontext_t * uc, address pc) {\n+void os::Posix::ucontext_set_pc(ucontext_t * uc, address pc) {\n@@ -118,1 +118,1 @@\n-    epc = os::Linux::ucontext_get_pc(uc);\n+    epc = os::Posix::ucontext_get_pc(uc);\n@@ -138,1 +138,1 @@\n-  address pc = (address) os::Linux::ucontext_get_pc(uc);\n+  address pc = (address) os::Posix::ucontext_get_pc(uc);\n@@ -264,1 +264,1 @@\n-    pc = (address) os::Linux::ucontext_get_pc(uc);\n+    pc = (address) os::Posix::ucontext_get_pc(uc);\n@@ -267,1 +267,1 @@\n-      os::Linux::ucontext_set_pc(uc, StubRoutines::continuation_for_safefetch_fault(pc));\n+      os::Posix::ucontext_set_pc(uc, StubRoutines::continuation_for_safefetch_fault(pc));\n@@ -424,1 +424,1 @@\n-    os::Linux::ucontext_set_pc(uc, stub);\n+    os::Posix::ucontext_set_pc(uc, stub);\n@@ -439,1 +439,1 @@\n-    pc = os::Linux::ucontext_get_pc(uc);\n+    pc = os::Posix::ucontext_get_pc(uc);\n@@ -506,1 +506,1 @@\n-  address pc = os::Linux::ucontext_get_pc(uc);\n+  address pc = os::Posix::ucontext_get_pc(uc);\n","filename":"src\/hotspot\/os_cpu\/linux_aarch64\/os_linux_aarch64.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -111,1 +111,1 @@\n-address os::Linux::ucontext_get_pc(const ucontext_t* uc) {\n+address os::Posix::ucontext_get_pc(const ucontext_t* uc) {\n@@ -115,1 +115,1 @@\n-void os::Linux::ucontext_set_pc(ucontext_t* uc, address pc) {\n+void os::Posix::ucontext_set_pc(ucontext_t* uc, address pc) {\n@@ -152,1 +152,1 @@\n-    epc = os::Linux::ucontext_get_pc(uc);\n+    epc = os::Posix::ucontext_get_pc(uc);\n@@ -265,1 +265,1 @@\n-    os::Linux::ucontext_set_pc(uc, (address)info->si_addr + 8);\n+    os::Posix::ucontext_set_pc(uc, (address)info->si_addr + 8);\n@@ -313,1 +313,1 @@\n-    pc = (address) os::Linux::ucontext_get_pc(uc);\n+    pc = (address) os::Posix::ucontext_get_pc(uc);\n@@ -320,1 +320,1 @@\n-        os::Linux::ucontext_set_pc(uc, StubRoutines::continuation_for_safefetch_fault(pc));\n+        os::Posix::ucontext_set_pc(uc, StubRoutines::continuation_for_safefetch_fault(pc));\n@@ -439,1 +439,1 @@\n-    os::Linux::ucontext_set_pc(uc, stub);\n+    os::Posix::ucontext_set_pc(uc, stub);\n@@ -454,1 +454,1 @@\n-    pc = os::Linux::ucontext_get_pc(uc);\n+    pc = os::Posix::ucontext_get_pc(uc);\n@@ -537,1 +537,1 @@\n-  address pc = os::Linux::ucontext_get_pc(uc);\n+  address pc = os::Posix::ucontext_get_pc(uc);\n","filename":"src\/hotspot\/os_cpu\/linux_arm\/os_linux_arm.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -100,1 +100,1 @@\n-address os::Linux::ucontext_get_pc(const ucontext_t * uc) {\n+address os::Posix::ucontext_get_pc(const ucontext_t * uc) {\n@@ -118,1 +118,1 @@\n-void os::Linux::ucontext_set_pc(ucontext_t * uc, address pc) {\n+void os::Posix::ucontext_set_pc(ucontext_t * uc, address pc) {\n@@ -146,1 +146,1 @@\n-    epc = os::Linux::ucontext_get_pc(uc);\n+    epc = os::Posix::ucontext_get_pc(uc);\n@@ -166,1 +166,1 @@\n-  address pc = (address) os::Linux::ucontext_get_pc(uc);\n+  address pc = (address) os::Posix::ucontext_get_pc(uc);\n@@ -294,1 +294,1 @@\n-    address const pc = os::Linux::ucontext_get_pc(uc);\n+    address const pc = os::Posix::ucontext_get_pc(uc);\n@@ -296,1 +296,1 @@\n-      os::Linux::ucontext_set_pc(uc, StubRoutines::continuation_for_safefetch_fault(pc));\n+      os::Posix::ucontext_set_pc(uc, StubRoutines::continuation_for_safefetch_fault(pc));\n@@ -306,1 +306,1 @@\n-    pc = (address) os::Linux::ucontext_get_pc(uc);\n+    pc = (address) os::Posix::ucontext_get_pc(uc);\n@@ -507,1 +507,1 @@\n-          os::Linux::ucontext_set_pc(uc, next_pc);\n+          os::Posix::ucontext_set_pc(uc, next_pc);\n@@ -528,1 +528,1 @@\n-        os::Linux::ucontext_set_pc(uc, next_pc);\n+        os::Posix::ucontext_set_pc(uc, next_pc);\n@@ -546,1 +546,1 @@\n-    os::Linux::ucontext_set_pc(uc, stub);\n+    os::Posix::ucontext_set_pc(uc, stub);\n@@ -561,1 +561,1 @@\n-    pc = os::Linux::ucontext_get_pc(uc);\n+    pc = os::Posix::ucontext_get_pc(uc);\n@@ -637,1 +637,1 @@\n-  address pc = os::Linux::ucontext_get_pc(uc);\n+  address pc = os::Posix::ucontext_get_pc(uc);\n","filename":"src\/hotspot\/os_cpu\/linux_ppc\/os_linux_ppc.cpp","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -102,1 +102,1 @@\n-address os::Linux::ucontext_get_pc(const ucontext_t * uc) {\n+address os::Posix::ucontext_get_pc(const ucontext_t * uc) {\n@@ -106,1 +106,1 @@\n-void os::Linux::ucontext_set_pc(ucontext_t * uc, address pc) {\n+void os::Posix::ucontext_set_pc(ucontext_t * uc, address pc) {\n@@ -129,1 +129,1 @@\n-    epc = os::Linux::ucontext_get_pc(uc);\n+    epc = os::Posix::ucontext_get_pc(uc);\n@@ -149,1 +149,1 @@\n-  address pc = (address) os::Linux::ucontext_get_pc(uc);\n+  address pc = (address) os::Posix::ucontext_get_pc(uc);\n@@ -294,1 +294,1 @@\n-    address const pc = os::Linux::ucontext_get_pc(uc);\n+    address const pc = os::Posix::ucontext_get_pc(uc);\n@@ -296,1 +296,1 @@\n-      os::Linux::ucontext_set_pc(uc, StubRoutines::continuation_for_safefetch_fault(pc));\n+      os::Posix::ucontext_set_pc(uc, StubRoutines::continuation_for_safefetch_fault(pc));\n@@ -308,1 +308,1 @@\n-    pc = os::Linux::ucontext_get_pc(uc);\n+    pc = os::Posix::ucontext_get_pc(uc);\n@@ -480,1 +480,1 @@\n-        os::Linux::ucontext_set_pc(uc, pc + Assembler::instr_len(pc));\n+        os::Posix::ucontext_set_pc(uc, pc + Assembler::instr_len(pc));\n@@ -498,1 +498,1 @@\n-    os::Linux::ucontext_set_pc(uc, stub);\n+    os::Posix::ucontext_set_pc(uc, stub);\n@@ -513,1 +513,1 @@\n-    pc = os::Linux::ucontext_get_pc(uc);\n+    pc = os::Posix::ucontext_get_pc(uc);\n@@ -620,1 +620,1 @@\n-  address pc = os::Linux::ucontext_get_pc(uc);\n+  address pc = os::Posix::ucontext_get_pc(uc);\n","filename":"src\/hotspot\/os_cpu\/linux_s390\/os_linux_s390.cpp","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -109,1 +109,1 @@\n-address os::Linux::ucontext_get_pc(const ucontext_t * uc) {\n+address os::Posix::ucontext_get_pc(const ucontext_t * uc) {\n@@ -113,1 +113,1 @@\n-void os::Linux::ucontext_set_pc(ucontext_t * uc, address pc) {\n+void os::Posix::ucontext_set_pc(ucontext_t * uc, address pc) {\n@@ -132,1 +132,1 @@\n-    epc = os::Linux::ucontext_get_pc(uc);\n+    epc = os::Posix::ucontext_get_pc(uc);\n@@ -152,1 +152,1 @@\n-  address pc = (address) os::Linux::ucontext_get_pc(uc);\n+  address pc = (address) os::Posix::ucontext_get_pc(uc);\n@@ -303,1 +303,1 @@\n-    pc = (address) os::Linux::ucontext_get_pc(uc);\n+    pc = (address) os::Posix::ucontext_get_pc(uc);\n@@ -306,1 +306,1 @@\n-      os::Linux::ucontext_set_pc(uc, StubRoutines::continuation_for_safefetch_fault(pc));\n+      os::Posix::ucontext_set_pc(uc, StubRoutines::continuation_for_safefetch_fault(pc));\n@@ -491,1 +491,1 @@\n-    address pc = os::Linux::ucontext_get_pc(uc);\n+    address pc = os::Posix::ucontext_get_pc(uc);\n@@ -553,1 +553,1 @@\n-    os::Linux::ucontext_set_pc(uc, stub);\n+    os::Posix::ucontext_set_pc(uc, stub);\n@@ -568,1 +568,1 @@\n-    pc = os::Linux::ucontext_get_pc(uc);\n+    pc = os::Posix::ucontext_get_pc(uc);\n@@ -749,1 +749,1 @@\n-  address pc = os::Linux::ucontext_get_pc(uc);\n+  address pc = os::Posix::ucontext_get_pc(uc);\n","filename":"src\/hotspot\/os_cpu\/linux_x86\/os_linux_x86.cpp","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -93,1 +93,1 @@\n-address os::Linux::ucontext_get_pc(const ucontext_t* uc) {\n+address os::Posix::ucontext_get_pc(const ucontext_t* uc) {\n@@ -98,1 +98,1 @@\n-void os::Linux::ucontext_set_pc(ucontext_t * uc, address pc) {\n+void os::Posix::ucontext_set_pc(ucontext_t * uc, address pc) {\n","filename":"src\/hotspot\/os_cpu\/linux_zero\/os_linux_zero.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -969,1 +969,0 @@\n-\n","filename":"src\/hotspot\/share\/runtime\/os.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"}]}