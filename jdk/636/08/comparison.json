{"files":[{"patch":"@@ -1442,19 +1442,0 @@\n-void os::print_signal_handlers(outputStream* st, char* buf, size_t buflen) {\n-  st->print_cr(\"Signal Handlers:\");\n-  PosixSignals::print_signal_handler(st, SIGSEGV, buf, buflen);\n-  PosixSignals::print_signal_handler(st, SIGBUS , buf, buflen);\n-  PosixSignals::print_signal_handler(st, SIGFPE , buf, buflen);\n-  PosixSignals::print_signal_handler(st, SIGPIPE, buf, buflen);\n-  PosixSignals::print_signal_handler(st, SIGXFSZ, buf, buflen);\n-  PosixSignals::print_signal_handler(st, SIGILL , buf, buflen);\n-  PosixSignals::print_signal_handler(st, SR_signum, buf, buflen);\n-  PosixSignals::print_signal_handler(st, SHUTDOWN1_SIGNAL, buf, buflen);\n-  PosixSignals::print_signal_handler(st, SHUTDOWN2_SIGNAL , buf, buflen);\n-  PosixSignals::print_signal_handler(st, SHUTDOWN3_SIGNAL , buf, buflen);\n-  PosixSignals::print_signal_handler(st, BREAK_SIGNAL, buf, buflen);\n-  PosixSignals::print_signal_handler(st, SIGTRAP, buf, buflen);\n-  \/\/ We also want to know if someone else adds a SIGDANGER handler because\n-  \/\/ that will interfere with OOM killling.\n-  PosixSignals::print_signal_handler(st, SIGDANGER, buf, buflen);\n-}\n-\n@@ -2520,3 +2501,1 @@\n-  \/\/ initialize suspend\/resume support - must do this before signal_sets_init()\n-  if (PosixSignals::SR_initialize() != 0) {\n-    perror(\"SR_initialize failed\");\n+  if (PosixSignals::init() == JNI_ERR) {\n@@ -2526,7 +2505,0 @@\n-  PosixSignals::signal_sets_init();\n-  PosixSignals::install_signal_handlers();\n-  \/\/ Initialize data for jdk.internal.misc.Signal\n-  if (!ReduceSignalUsage) {\n-    PosixSignals::jdk_misc_signal_init();\n-  }\n-\n@@ -2602,8 +2574,0 @@\n-void os::SuspendedThreadTask::internal_do_task() {\n-  if (PosixSignals::do_suspend(_thread->osthread())) {\n-    SuspendedThreadTaskContext context(_thread, _thread->osthread()->ucontext());\n-    do_task(context);\n-    PosixSignals::do_resume(_thread->osthread());\n-  }\n-}\n-\n","filename":"src\/hotspot\/os\/aix\/os_aix.cpp","additions":1,"deletions":37,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -95,1 +95,0 @@\n-  static address   ucontext_get_pc(const ucontext_t* uc);\n@@ -98,2 +97,0 @@\n-  \/\/ Set PC into context. Needed for continuation after signal.\n-  static void ucontext_set_pc(ucontext_t* uc, address pc);\n","filename":"src\/hotspot\/os\/aix\/os_aix.hpp","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1542,15 +1542,0 @@\n-void os::print_signal_handlers(outputStream* st, char* buf, size_t buflen) {\n-  st->print_cr(\"Signal Handlers:\");\n-  PosixSignals::print_signal_handler(st, SIGSEGV, buf, buflen);\n-  PosixSignals::print_signal_handler(st, SIGBUS , buf, buflen);\n-  PosixSignals::print_signal_handler(st, SIGFPE , buf, buflen);\n-  PosixSignals::print_signal_handler(st, SIGPIPE, buf, buflen);\n-  PosixSignals::print_signal_handler(st, SIGXFSZ, buf, buflen);\n-  PosixSignals::print_signal_handler(st, SIGILL , buf, buflen);\n-  PosixSignals::print_signal_handler(st, SR_signum, buf, buflen);\n-  PosixSignals::print_signal_handler(st, SHUTDOWN1_SIGNAL, buf, buflen);\n-  PosixSignals::print_signal_handler(st, SHUTDOWN2_SIGNAL , buf, buflen);\n-  PosixSignals::print_signal_handler(st, SHUTDOWN3_SIGNAL , buf, buflen);\n-  PosixSignals::print_signal_handler(st, BREAK_SIGNAL, buf, buflen);\n-}\n-\n@@ -2141,3 +2126,1 @@\n-  \/\/ initialize suspend\/resume support - must do this before signal_sets_init()\n-  if (PosixSignals::SR_initialize() != 0) {\n-    perror(\"SR_initialize failed\");\n+  if (PosixSignals::init() == JNI_ERR) {\n@@ -2147,7 +2130,0 @@\n-  PosixSignals::signal_sets_init();\n-  PosixSignals::install_signal_handlers();\n-  \/\/ Initialize data for jdk.internal.misc.Signal\n-  if (!ReduceSignalUsage) {\n-    PosixSignals::jdk_misc_signal_init();\n-  }\n-\n@@ -2284,8 +2260,0 @@\n-void os::SuspendedThreadTask::internal_do_task() {\n-  if (PosixSignals::do_suspend(_thread->osthread())) {\n-    SuspendedThreadTaskContext context(_thread, _thread->osthread()->ucontext());\n-    do_task(context);\n-    PosixSignals::do_resume(_thread->osthread());\n-  }\n-}\n-\n","filename":"src\/hotspot\/os\/bsd\/os_bsd.cpp","additions":1,"deletions":33,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -71,2 +71,0 @@\n-  static address   ucontext_get_pc(const ucontext_t* uc);\n-  static void ucontext_set_pc(ucontext_t* uc, address pc);\n","filename":"src\/hotspot\/os\/bsd\/os_bsd.hpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -996,1 +996,1 @@\n-  assert(!sigismember(&current, SR_signum), \"SR signal should not be blocked!\");\n+  assert(!sigismember(&current, PosixSignals::SR_signum), \"SR signal should not be blocked!\");\n@@ -2622,18 +2622,0 @@\n-void os::print_signal_handlers(outputStream* st, char* buf, size_t buflen) {\n-  st->print_cr(\"Signal Handlers:\");\n-  PosixSignals::print_signal_handler(st, SIGSEGV, buf, buflen);\n-  PosixSignals::print_signal_handler(st, SIGBUS , buf, buflen);\n-  PosixSignals::print_signal_handler(st, SIGFPE , buf, buflen);\n-  PosixSignals::print_signal_handler(st, SIGPIPE, buf, buflen);\n-  PosixSignals::print_signal_handler(st, SIGXFSZ, buf, buflen);\n-  PosixSignals::print_signal_handler(st, SIGILL , buf, buflen);\n-  PosixSignals::print_signal_handler(st, SR_signum, buf, buflen);\n-  PosixSignals::print_signal_handler(st, SHUTDOWN1_SIGNAL, buf, buflen);\n-  PosixSignals::print_signal_handler(st, SHUTDOWN2_SIGNAL , buf, buflen);\n-  PosixSignals::print_signal_handler(st, SHUTDOWN3_SIGNAL , buf, buflen);\n-  PosixSignals::print_signal_handler(st, BREAK_SIGNAL, buf, buflen);\n-#if defined(PPC64)\n-  PosixSignals::print_signal_handler(st, SIGTRAP, buf, buflen);\n-#endif\n-}\n-\n@@ -4545,3 +4527,1 @@\n-  \/\/ initialize suspend\/resume support - must do this before signal_sets_init()\n-  if (PosixSignals::SR_initialize() != 0) {\n-    perror(\"SR_initialize failed\");\n+  if (PosixSignals::init() == JNI_ERR) {\n@@ -4551,7 +4531,0 @@\n-  PosixSignals::signal_sets_init();\n-  PosixSignals::install_signal_handlers();\n-  \/\/ Initialize data for jdk.internal.misc.Signal\n-  if (!ReduceSignalUsage) {\n-    PosixSignals::jdk_misc_signal_init();\n-  }\n-\n@@ -4810,10 +4783,0 @@\n-\/\/\/\n-\n-void os::SuspendedThreadTask::internal_do_task() {\n-  if (PosixSignals::do_suspend(_thread->osthread())) {\n-    SuspendedThreadTaskContext context(_thread, _thread->osthread()->ucontext());\n-    do_task(context);\n-    PosixSignals::do_resume(_thread->osthread());\n-  }\n-}\n-\n","filename":"src\/hotspot\/os\/linux\/os_linux.cpp","additions":2,"deletions":39,"binary":false,"changes":41,"status":"modified"},{"patch":"@@ -137,2 +137,0 @@\n-  static address   ucontext_get_pc(const ucontext_t* uc);\n-  static void ucontext_set_pc(ucontext_t* uc, address pc);\n","filename":"src\/hotspot\/os\/linux\/os_linux.hpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -91,0 +91,4 @@\n+  \/\/ Set PC into context. Needed for continuation after signal.\n+  static address ucontext_get_pc(const ucontext_t* ctx);\n+  static void    ucontext_set_pc(ucontext_t* ctx, address pc);\n+\n","filename":"src\/hotspot\/os\/posix\/os_posix.hpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+#include \"runtime\/java.hpp\"\n@@ -40,0 +41,2 @@\n+#include <signal.h>\n+\n@@ -47,10 +50,0 @@\n-\/\/ glibc on Bsd platform uses non-documented flag\n-\/\/ to indicate, that some special sort of signal\n-\/\/ trampoline is used.\n-\/\/ We will never set this flag, and we should\n-\/\/ ignore this flag in our diagnostic\n-#ifdef SIGNIFICANT_SIGNAL_MASK\n-  #undef SIGNIFICANT_SIGNAL_MASK\n-#endif\n-#define SIGNIFICANT_SIGNAL_MASK (~0x04000000)\n-\n@@ -94,0 +87,4 @@\n+\/\/ Signal number used to suspend\/resume a thread\n+\/\/ do not use any signal number less than SIGSEGV, see 4355769\n+int PosixSignals::SR_signum = SIGUSR2;\n+\n@@ -266,1 +263,1 @@\n-void PosixSignals::jdk_misc_signal_init() {\n+void jdk_misc_signal_init() {\n@@ -577,1 +574,1 @@\n-        pc = PosixSignals::ucontext_get_pc(uc);\n+        pc = os::Posix::ucontext_get_pc(uc);\n@@ -740,3 +737,0 @@\n-\n-  act.sa_flags &= SIGNIFICANT_SIGNAL_MASK;\n-\n@@ -766,1 +760,1 @@\n-    if (sig == SR_signum) {\n+    if (sig == PosixSignals::SR_signum) {\n@@ -867,1 +861,1 @@\n-  do_signal_check(SR_signum);\n+  do_signal_check(PosixSignals::SR_signum);\n@@ -1220,2 +1214,1 @@\n-void PosixSignals::install_signal_handlers() {\n-\n+void install_signal_handlers() {\n@@ -1320,3 +1313,0 @@\n-  \/\/ See comment for SIGNIFICANT_SIGNAL_MASK define\n-  sa.sa_flags &= SIGNIFICANT_SIGNAL_MASK;\n-\n@@ -1344,1 +1334,1 @@\n-    sa.sa_flags = VMError::get_resetted_sigflags(sig) & SIGNIFICANT_SIGNAL_MASK;\n+    sa.sa_flags = VMError::get_resetted_sigflags(sig);\n@@ -1365,0 +1355,23 @@\n+void os::print_signal_handlers(outputStream* st, char* buf, size_t buflen) {\n+  st->print_cr(\"Signal Handlers:\");\n+  PosixSignals::print_signal_handler(st, SIGSEGV, buf, buflen);\n+  PosixSignals::print_signal_handler(st, SIGBUS , buf, buflen);\n+  PosixSignals::print_signal_handler(st, SIGFPE , buf, buflen);\n+  PosixSignals::print_signal_handler(st, SIGPIPE, buf, buflen);\n+  PosixSignals::print_signal_handler(st, SIGXFSZ, buf, buflen);\n+  PosixSignals::print_signal_handler(st, SIGILL , buf, buflen);\n+  PosixSignals::print_signal_handler(st, PosixSignals::SR_signum, buf, buflen);\n+  PosixSignals::print_signal_handler(st, SHUTDOWN1_SIGNAL, buf, buflen);\n+  PosixSignals::print_signal_handler(st, SHUTDOWN2_SIGNAL , buf, buflen);\n+  PosixSignals::print_signal_handler(st, SHUTDOWN3_SIGNAL , buf, buflen);\n+  PosixSignals::print_signal_handler(st, BREAK_SIGNAL, buf, buflen);\n+#if defined(SIGDANGER)\n+  \/\/ We also want to know if someone else adds a SIGDANGER handler because\n+  \/\/ that will interfere with OOM killling.\n+  PosixSignals::print_signal_handler(st, SIGDANGER, buf, buflen);\n+#endif\n+#if defined(SIGTRAP)\n+  PosixSignals::print_signal_handler(st, SIGTRAP, buf, buflen);\n+#endif\n+}\n+\n@@ -1377,25 +1390,1 @@\n-address PosixSignals::ucontext_get_pc(const ucontext_t* ctx) {\n-#if defined(AIX)\n-   return os::Aix::ucontext_get_pc(ctx);\n-#elif defined(BSD)\n-   return os::Bsd::ucontext_get_pc(ctx);\n-#elif defined(LINUX)\n-   return os::Linux::ucontext_get_pc(ctx);\n-#else\n-   VMError::report_and_die(\"unimplemented ucontext_get_pc\");\n-#endif\n-}\n-\n-void PosixSignals::ucontext_set_pc(ucontext_t* ctx, address pc) {\n-#if defined(AIX)\n-   os::Aix::ucontext_set_pc(ctx, pc);\n-#elif defined(BSD)\n-   os::Bsd::ucontext_set_pc(ctx, pc);\n-#elif defined(LINUX)\n-   os::Linux::ucontext_set_pc(ctx, pc);\n-#else\n-   VMError::report_and_die(\"unimplemented ucontext_set_pc\");\n-#endif\n-}\n-\n-void PosixSignals::signal_sets_init() {\n+static void signal_sets_init() {\n@@ -1425,1 +1414,1 @@\n-  sigaddset(&unblocked_sigs, SR_signum);\n+  sigaddset(&unblocked_sigs, PosixSignals::SR_signum);\n@@ -1575,1 +1564,1 @@\n-      sigdelset(&suspend_set, SR_signum);\n+      sigdelset(&suspend_set, PosixSignals::SR_signum);\n@@ -1611,1 +1600,1 @@\n-int PosixSignals::SR_initialize() {\n+int SR_initialize() {\n@@ -1619,1 +1608,1 @@\n-      SR_signum = sig;\n+      PosixSignals::SR_signum = sig;\n@@ -1622,1 +1611,1 @@\n-              sig, MAX2(SIGSEGV, SIGBUS)+1, NSIG-1, SR_signum);\n+              sig, MAX2(SIGSEGV, SIGBUS)+1, NSIG-1, PosixSignals::SR_signum);\n@@ -1626,1 +1615,1 @@\n-  assert(SR_signum > SIGSEGV && SR_signum > SIGBUS,\n+  assert(PosixSignals::SR_signum > SIGSEGV && PosixSignals::SR_signum > SIGBUS,\n@@ -1630,1 +1619,1 @@\n-  sigaddset(&SR_sigset, SR_signum);\n+  sigaddset(&SR_sigset, PosixSignals::SR_signum);\n@@ -1640,1 +1629,1 @@\n-  if (sigaction(SR_signum, &act, 0) == -1) {\n+  if (sigaction(PosixSignals::SR_signum, &act, 0) == -1) {\n@@ -1645,1 +1634,1 @@\n-  set_our_sigflags(SR_signum, act.sa_flags);\n+  set_our_sigflags(PosixSignals::SR_signum, act.sa_flags);\n@@ -1650,1 +1639,1 @@\n-  int status = pthread_kill(osthread->pthread_id(), SR_signum);\n+  int status = pthread_kill(osthread->pthread_id(), PosixSignals::SR_signum);\n@@ -1720,0 +1709,27 @@\n+\n+void os::SuspendedThreadTask::internal_do_task() {\n+  if (PosixSignals::do_suspend(_thread->osthread())) {\n+    os::SuspendedThreadTaskContext context(_thread, _thread->osthread()->ucontext());\n+    do_task(context);\n+    PosixSignals::do_resume(_thread->osthread());\n+  }\n+}\n+\n+int PosixSignals::init() {\n+  \/\/ initialize suspend\/resume support - must do this before signal_sets_init()\n+  if (SR_initialize() != 0) {\n+    vm_exit_during_initialization(\"SR_initialize failed\");\n+    return JNI_ERR;\n+  }\n+\n+  signal_sets_init();\n+\n+  install_signal_handlers();\n+\n+  \/\/ Initialize data for jdk.internal.misc.Signal\n+  if (!ReduceSignalUsage) {\n+    jdk_misc_signal_init();\n+  }\n+\n+  return JNI_OK;\n+}\n","filename":"src\/hotspot\/os\/posix\/signals_posix.cpp","additions":74,"deletions":58,"binary":false,"changes":132,"status":"modified"},{"patch":"@@ -31,5 +31,3 @@\n-#include <signal.h>\n-\n-\/\/ Signal number used to suspend\/resume a thread\n-\/\/ do not use any signal number less than SIGSEGV, see 4355769\n-static int SR_signum = SIGUSR2;\n+class outputStream;\n+class Thread;\n+class OSThread;\n@@ -41,0 +39,4 @@\n+  \/\/ Signal number used to suspend\/resume a thread\n+  static int SR_signum;\n+\n+  static int init();\n@@ -46,2 +48,0 @@\n-  static void install_signal_handlers();\n-\n@@ -49,1 +49,0 @@\n-  static void signal_sets_init();\n@@ -55,4 +54,0 @@\n-  static address ucontext_get_pc(const ucontext_t* ctx);\n-  \/\/ Set PC into context. Needed for continuation after signal.\n-  static void ucontext_set_pc(ucontext_t* ctx, address pc);\n-\n@@ -60,1 +55,0 @@\n-  static int SR_initialize();\n@@ -67,3 +61,0 @@\n-  \/\/ sun.misc.Signal support\n-  static void jdk_misc_signal_init();\n-\n@@ -73,1 +64,0 @@\n-\n","filename":"src\/hotspot\/os\/posix\/signals_posix.hpp","additions":7,"deletions":17,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -109,1 +109,1 @@\n-  address pc = (uc != NULL) ? PosixSignals::ucontext_get_pc(uc) : NULL;\n+  address pc = (uc != NULL) ? os::Posix::ucontext_get_pc(uc) : NULL;\n@@ -118,1 +118,1 @@\n-    PosixSignals::ucontext_set_pc(uc, StubRoutines::continuation_for_safefetch_fault(pc));\n+    os::Posix::ucontext_set_pc(uc, StubRoutines::continuation_for_safefetch_fault(pc));\n","filename":"src\/hotspot\/os\/posix\/vmError_posix.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -92,1 +92,1 @@\n-address os::Aix::ucontext_get_pc(const ucontext_t * uc) {\n+address os::Posix::ucontext_get_pc(const ucontext_t * uc) {\n@@ -105,1 +105,1 @@\n-void os::Aix::ucontext_set_pc(ucontext_t* uc, address new_pc) {\n+void os::Posix::ucontext_set_pc(ucontext_t* uc, address new_pc) {\n@@ -120,1 +120,1 @@\n-    epc = os::Aix::ucontext_get_pc(uc);\n+    epc = os::Posix::ucontext_get_pc(uc);\n@@ -178,1 +178,1 @@\n-  address const pc = uc ? os::Aix::ucontext_get_pc(uc) : NULL;\n+  address const pc = uc ? os::Posix::ucontext_get_pc(uc) : NULL;\n@@ -187,1 +187,1 @@\n-    address const pc = os::Aix::ucontext_get_pc(uc);\n+    address const pc = os::Posix::ucontext_get_pc(uc);\n@@ -189,1 +189,1 @@\n-      os::Aix::ucontext_set_pc(uc, StubRoutines::continuation_for_safefetch_fault(pc));\n+      os::Posix::ucontext_set_pc(uc, StubRoutines::continuation_for_safefetch_fault(pc));\n@@ -356,1 +356,1 @@\n-          os::Aix::ucontext_set_pc(uc, next_pc);\n+          os::Posix::ucontext_set_pc(uc, next_pc);\n@@ -381,1 +381,1 @@\n-        os::Aix::ucontext_set_pc(uc, next_pc);\n+        os::Posix::ucontext_set_pc(uc, next_pc);\n@@ -403,1 +403,1 @@\n-    os::Aix::ucontext_set_pc(uc, stub);\n+    os::Posix::ucontext_set_pc(uc, stub);\n@@ -463,1 +463,1 @@\n-  address pc = os::Aix::ucontext_get_pc(uc);\n+  address pc = os::Posix::ucontext_get_pc(uc);\n","filename":"src\/hotspot\/os_cpu\/aix_ppc\/os_aix_ppc.cpp","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -300,1 +300,1 @@\n-address os::Bsd::ucontext_get_pc(const ucontext_t * uc) {\n+address os::Posix::ucontext_get_pc(const ucontext_t * uc) {\n@@ -304,1 +304,1 @@\n-void os::Bsd::ucontext_set_pc(ucontext_t * uc, address pc) {\n+void os::Posix::ucontext_set_pc(ucontext_t * uc, address pc) {\n@@ -323,1 +323,1 @@\n-    epc = os::Bsd::ucontext_get_pc(uc);\n+    epc = os::Posix::ucontext_get_pc(uc);\n@@ -412,1 +412,1 @@\n-    pc = (address) os::Bsd::ucontext_get_pc(uc);\n+    pc = (address) os::Posix::ucontext_get_pc(uc);\n@@ -415,1 +415,1 @@\n-      os::Bsd::ucontext_set_pc(uc, StubRoutines::continuation_for_safefetch_fault(pc));\n+      os::Posix::ucontext_set_pc(uc, StubRoutines::continuation_for_safefetch_fault(pc));\n@@ -573,1 +573,1 @@\n-    address pc = os::Bsd::ucontext_get_pc(uc);\n+    address pc = os::Posix::ucontext_get_pc(uc);\n@@ -635,1 +635,1 @@\n-    os::Bsd::ucontext_set_pc(uc, stub);\n+    os::Posix::ucontext_set_pc(uc, stub);\n@@ -890,1 +890,1 @@\n-  address pc = os::Bsd::ucontext_get_pc(uc);\n+  address pc = os::Posix::ucontext_get_pc(uc);\n","filename":"src\/hotspot\/os_cpu\/bsd_x86\/os_bsd_x86.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -97,1 +97,1 @@\n-address os::Bsd::ucontext_get_pc(const ucontext_t* uc) {\n+address os::Posix::ucontext_get_pc(const ucontext_t* uc) {\n@@ -102,1 +102,1 @@\n-void os::Bsd::ucontext_set_pc(ucontext_t * uc, address pc) {\n+void os::Posix::ucontext_set_pc(ucontext_t * uc, address pc) {\n","filename":"src\/hotspot\/os_cpu\/bsd_zero\/os_bsd_zero.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -94,1 +94,1 @@\n-address os::Linux::ucontext_get_pc(const ucontext_t * uc) {\n+address os::Posix::ucontext_get_pc(const ucontext_t * uc) {\n@@ -98,1 +98,1 @@\n-void os::Linux::ucontext_set_pc(ucontext_t * uc, address pc) {\n+void os::Posix::ucontext_set_pc(ucontext_t * uc, address pc) {\n@@ -117,1 +117,1 @@\n-    epc = os::Linux::ucontext_get_pc(uc);\n+    epc = os::Posix::ucontext_get_pc(uc);\n@@ -186,1 +186,1 @@\n-    pc = (address) os::Linux::ucontext_get_pc(uc);\n+    pc = (address) os::Posix::ucontext_get_pc(uc);\n@@ -189,1 +189,1 @@\n-      os::Linux::ucontext_set_pc(uc, StubRoutines::continuation_for_safefetch_fault(pc));\n+      os::Posix::ucontext_set_pc(uc, StubRoutines::continuation_for_safefetch_fault(pc));\n@@ -290,1 +290,1 @@\n-    os::Linux::ucontext_set_pc(uc, stub);\n+    os::Posix::ucontext_set_pc(uc, stub);\n@@ -295,1 +295,0 @@\n-\n@@ -350,1 +349,1 @@\n-  address pc = os::Linux::ucontext_get_pc(uc);\n+  address pc = os::Posix::ucontext_get_pc(uc);\n","filename":"src\/hotspot\/os_cpu\/linux_aarch64\/os_linux_aarch64.cpp","additions":7,"deletions":8,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -111,1 +111,1 @@\n-address os::Linux::ucontext_get_pc(const ucontext_t* uc) {\n+address os::Posix::ucontext_get_pc(const ucontext_t* uc) {\n@@ -115,1 +115,1 @@\n-void os::Linux::ucontext_set_pc(ucontext_t* uc, address pc) {\n+void os::Posix::ucontext_set_pc(ucontext_t* uc, address pc) {\n@@ -152,1 +152,1 @@\n-    epc = os::Linux::ucontext_get_pc(uc);\n+    epc = os::Posix::ucontext_get_pc(uc);\n@@ -255,1 +255,1 @@\n-    os::Linux::ucontext_set_pc(uc, (address)info->si_addr + 8);\n+    os::Posix::ucontext_set_pc(uc, (address)info->si_addr + 8);\n@@ -265,1 +265,1 @@\n-    pc = (address) os::Linux::ucontext_get_pc(uc);\n+    pc = (address) os::Posix::ucontext_get_pc(uc);\n@@ -272,1 +272,1 @@\n-        os::Linux::ucontext_set_pc(uc, StubRoutines::continuation_for_safefetch_fault(pc));\n+        os::Posix::ucontext_set_pc(uc, StubRoutines::continuation_for_safefetch_fault(pc));\n@@ -392,1 +392,1 @@\n-    os::Linux::ucontext_set_pc(uc, stub);\n+    os::Posix::ucontext_set_pc(uc, stub);\n@@ -397,1 +397,0 @@\n-\n@@ -468,1 +467,1 @@\n-  address pc = os::Linux::ucontext_get_pc(uc);\n+  address pc = os::Posix::ucontext_get_pc(uc);\n","filename":"src\/hotspot\/os_cpu\/linux_arm\/os_linux_arm.cpp","additions":8,"deletions":9,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -100,1 +100,1 @@\n-address os::Linux::ucontext_get_pc(const ucontext_t * uc) {\n+address os::Posix::ucontext_get_pc(const ucontext_t * uc) {\n@@ -118,1 +118,1 @@\n-void os::Linux::ucontext_set_pc(ucontext_t * uc, address pc) {\n+void os::Posix::ucontext_set_pc(ucontext_t * uc, address pc) {\n@@ -146,1 +146,1 @@\n-    epc = os::Linux::ucontext_get_pc(uc);\n+    epc = os::Posix::ucontext_get_pc(uc);\n@@ -219,1 +219,1 @@\n-    address const pc = os::Linux::ucontext_get_pc(uc);\n+    address const pc = os::Posix::ucontext_get_pc(uc);\n@@ -221,1 +221,1 @@\n-      os::Linux::ucontext_set_pc(uc, StubRoutines::continuation_for_safefetch_fault(pc));\n+      os::Posix::ucontext_set_pc(uc, StubRoutines::continuation_for_safefetch_fault(pc));\n@@ -231,1 +231,1 @@\n-    pc = (address) os::Linux::ucontext_get_pc(uc);\n+    pc = (address) os::Posix::ucontext_get_pc(uc);\n@@ -367,1 +367,1 @@\n-          os::Linux::ucontext_set_pc(uc, next_pc);\n+          os::Posix::ucontext_set_pc(uc, next_pc);\n@@ -388,1 +388,1 @@\n-        os::Linux::ucontext_set_pc(uc, next_pc);\n+        os::Posix::ucontext_set_pc(uc, next_pc);\n@@ -406,1 +406,1 @@\n-    os::Linux::ucontext_set_pc(uc, stub);\n+    os::Posix::ucontext_set_pc(uc, stub);\n@@ -411,1 +411,0 @@\n-\n@@ -474,1 +473,1 @@\n-  address pc = os::Linux::ucontext_get_pc(uc);\n+  address pc = os::Posix::ucontext_get_pc(uc);\n","filename":"src\/hotspot\/os_cpu\/linux_ppc\/os_linux_ppc.cpp","additions":10,"deletions":11,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -102,1 +102,1 @@\n-address os::Linux::ucontext_get_pc(const ucontext_t * uc) {\n+address os::Posix::ucontext_get_pc(const ucontext_t * uc) {\n@@ -106,1 +106,1 @@\n-void os::Linux::ucontext_set_pc(ucontext_t * uc, address pc) {\n+void os::Posix::ucontext_set_pc(ucontext_t * uc, address pc) {\n@@ -129,1 +129,1 @@\n-    epc = os::Linux::ucontext_get_pc(uc);\n+    epc = os::Posix::ucontext_get_pc(uc);\n@@ -213,1 +213,1 @@\n-    address const pc = os::Linux::ucontext_get_pc(uc);\n+    address const pc = os::Posix::ucontext_get_pc(uc);\n@@ -215,1 +215,1 @@\n-      os::Linux::ucontext_set_pc(uc, StubRoutines::continuation_for_safefetch_fault(pc));\n+      os::Posix::ucontext_set_pc(uc, StubRoutines::continuation_for_safefetch_fault(pc));\n@@ -227,1 +227,1 @@\n-    pc = os::Linux::ucontext_get_pc(uc);\n+    pc = os::Posix::ucontext_get_pc(uc);\n@@ -348,1 +348,1 @@\n-        os::Linux::ucontext_set_pc(uc, pc + Assembler::instr_len(pc));\n+        os::Posix::ucontext_set_pc(uc, pc + Assembler::instr_len(pc));\n@@ -366,1 +366,1 @@\n-    os::Linux::ucontext_set_pc(uc, stub);\n+    os::Posix::ucontext_set_pc(uc, stub);\n@@ -371,1 +371,0 @@\n-\n@@ -458,1 +457,1 @@\n-  address pc = os::Linux::ucontext_get_pc(uc);\n+  address pc = os::Posix::ucontext_get_pc(uc);\n","filename":"src\/hotspot\/os_cpu\/linux_s390\/os_linux_s390.cpp","additions":9,"deletions":10,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -109,1 +109,1 @@\n-address os::Linux::ucontext_get_pc(const ucontext_t * uc) {\n+address os::Posix::ucontext_get_pc(const ucontext_t * uc) {\n@@ -113,1 +113,1 @@\n-void os::Linux::ucontext_set_pc(ucontext_t * uc, address pc) {\n+void os::Posix::ucontext_set_pc(ucontext_t * uc, address pc) {\n@@ -132,1 +132,1 @@\n-    epc = os::Linux::ucontext_get_pc(uc);\n+    epc = os::Posix::ucontext_get_pc(uc);\n@@ -222,1 +222,1 @@\n-    pc = (address) os::Linux::ucontext_get_pc(uc);\n+    pc = (address) os::Posix::ucontext_get_pc(uc);\n@@ -225,1 +225,1 @@\n-      os::Linux::ucontext_set_pc(uc, StubRoutines::continuation_for_safefetch_fault(pc));\n+      os::Posix::ucontext_set_pc(uc, StubRoutines::continuation_for_safefetch_fault(pc));\n@@ -358,1 +358,1 @@\n-    address pc = os::Linux::ucontext_get_pc(uc);\n+    address pc = os::Posix::ucontext_get_pc(uc);\n@@ -420,1 +420,1 @@\n-    os::Linux::ucontext_set_pc(uc, stub);\n+    os::Posix::ucontext_set_pc(uc, stub);\n@@ -593,1 +593,1 @@\n-  address pc = os::Linux::ucontext_get_pc(uc);\n+  address pc = os::Posix::ucontext_get_pc(uc);\n","filename":"src\/hotspot\/os_cpu\/linux_x86\/os_linux_x86.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -93,1 +93,1 @@\n-address os::Linux::ucontext_get_pc(const ucontext_t* uc) {\n+address os::Posix::ucontext_get_pc(const ucontext_t* uc) {\n@@ -98,1 +98,1 @@\n-void os::Linux::ucontext_set_pc(ucontext_t * uc, address pc) {\n+void os::Posix::ucontext_set_pc(ucontext_t * uc, address pc) {\n","filename":"src\/hotspot\/os_cpu\/linux_zero\/os_linux_zero.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -973,1 +973,0 @@\n-\n","filename":"src\/hotspot\/share\/runtime\/os.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"}]}