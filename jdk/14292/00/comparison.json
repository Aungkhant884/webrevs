{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,1 @@\n-        output.shouldContain(\"Exception in thread \\\"main\\\" java.lang.ExceptionInInitializerError\");\n+        output.shouldMatch(\"Exception in thread \\\".+\\\" java.lang.ExceptionInInitializerError\");\n","filename":"test\/hotspot\/jtreg\/runtime\/BootstrapMethod\/TestLambdaExceptionInInitializer.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -882,0 +882,2 @@\n+    public static final String OLD_MAIN_THREAD_NAME = \"old-m-a-i-n\";\n+\n@@ -897,1 +899,1 @@\n-            Thread vthread = startVirtualThread(() -> {\n+            Thread vthread = createVirtualThread(() -> {\n@@ -906,0 +908,3 @@\n+            Thread.currentThread().setName(OLD_MAIN_THREAD_NAME);\n+            vthread.setName(\"main\");\n+            vthread.start();\n@@ -943,1 +948,1 @@\n-    static Thread startVirtualThread(Runnable task) {\n+    static Thread createVirtualThread(Runnable task) {\n@@ -947,2 +952,2 @@\n-            Method start = clazz.getMethod(\"start\", Runnable.class);\n-            return (Thread) start.invoke(builder, task);\n+            Method unstarted = clazz.getMethod(\"unstarted\", Runnable.class);\n+            return (Thread) unstarted.invoke(builder, task);\n","filename":"test\/lib\/jdk\/test\/lib\/process\/ProcessTools.java","additions":9,"deletions":4,"binary":false,"changes":13,"status":"modified"}]}