{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -176,1 +176,1 @@\n-    public final void clearPassword() {\n+    public final synchronized void clearPassword() {\n@@ -194,1 +194,1 @@\n-    public final char[] getPassword() {\n+    public final synchronized char[] getPassword() {\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/spec\/PBEKeySpec.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -0,0 +1,95 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 6383195\n+ * @summary javax.crypto.spec.PBEKeySpec is not thread safe\n+ *\/\n+\n+\/*\n+ * Use one thread to clear the password, another to check the password state.\n+ *\n+ * If a partially cleared password is ever obtained, fail the test.\n+ *\/\n+import java.util.Arrays;\n+import javax.crypto.spec.PBEKeySpec;\n+\n+public class PBEKeySpecRacing {\n+    private static final int NUMTESTS = 1000;\n+    private static final int PASSWORD_LEN = 25;\n+\n+    private static PBEKeySpec keySpec;\n+\n+    private static final char[] password;\n+\n+    static {\n+        password = new char[PASSWORD_LEN];\n+        Arrays.fill(password, 'A');\n+    }\n+\n+    \/\/ flag for failed test case.\n+\n+    private static volatile char[] failed = null;\n+\n+    public static void main(String[] args) {\n+        System.out.println(\"Testing: \");\n+        for (int i = 0; i < NUMTESTS; i++) {\n+            keySpec = new PBEKeySpec(password);\n+            Thread reader = new Thread(() -> {\n+                try {\n+                    \/\/ Repeat until state changes or failure seen\n+                    while (true) {\n+                        char[] pbePass = keySpec.getPassword();\n+                        if (!Arrays.equals(password, pbePass)) {\n+                            failed = pbePass;\n+                            return;\n+                        }\n+                    }\n+                } catch (IllegalStateException e) {\n+                    System.out.print(\".\");\n+                }\n+            });\n+            Thread clearer = new Thread(() -> keySpec.clearPassword());\n+            reader.start();\n+            clearer.start();\n+            try {\n+                reader.join();\n+                clearer.join();\n+            } catch (InterruptedException e) {\n+                \/\/ Swallow\n+            }\n+\n+            if (failed != null) {\n+                throw new RuntimeException(\n+                        \"Inconsistent Password: \" + Arrays.toString(failed));\n+            }\n+\n+            \/\/ avoid long output lines.\n+            if ((i % 80) == 79) {\n+                System.out.println();\n+            }\n+        }\n+        System.out.println(\"Test PASSED\");\n+    }\n+}\n","filename":"test\/jdk\/javax\/crypto\/spec\/PBEKeySpec\/PBEKeySpecRacing.java","additions":95,"deletions":0,"binary":false,"changes":95,"status":"added"}]}