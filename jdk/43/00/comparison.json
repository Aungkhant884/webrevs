{"files":[{"patch":"@@ -70,0 +70,1 @@\n+import com.sun.tools.javac.main.Option;\n@@ -249,0 +250,2 @@\n+            fm.handleOption(Option.MULTIRELEASE, sourceVersion);\n+\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/platform\/JDKPlatformProvider.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 8158123 8161906 8162713 8202832\n+ * @bug 8158123 8161906 8162713 8202832 8235229\n@@ -41,0 +41,1 @@\n+import java.util.jar.Attributes;\n@@ -42,0 +43,1 @@\n+import toolbox.JarTask;\n@@ -801,0 +803,49 @@\n+\n+    @Test\n+    public void testMultiReleaseJarAndReleaseOption(Path base) throws Exception {\n+        Path src = base.resolve(\"src\");\n+        tb.writeJavaFiles(src, \"package api; public class A { }\");\n+        Path classes = base.resolve(\"classes\");\n+        Files.createDirectories(classes);\n+        new JavacTask(tb)\n+                .outdir(classes)\n+                .files(findJavaFiles(src))\n+                .run()\n+                .writeAll();\n+\n+        Path src9 = base.resolve(\"src9\");\n+        tb.writeJavaFiles(src9, \"module m { exports api; }\");\n+        Path classes9 = classes.resolve(\"META-INF\").resolve(\"versions\").resolve(\"9\");\n+        Files.createDirectories(classes9);\n+        new JavacTask(tb)\n+                .sourcepath(src, src9)\n+                .outdir(classes9)\n+                .files(findJavaFiles(src9))\n+                .run()\n+                .writeAll();\n+        Path jar = base.resolve(\"lib.jar\");\n+        new JarTask(tb, jar)\n+                .baseDir(classes)\n+                .files(Arrays.stream(tb.findFiles(\"class\", classes)).map(f -> classes.relativize(f).toString()).toArray(i -> new String[i]))\n+                .manifest(Attributes.Name.MULTI_RELEASE + \": true\\n\\n\")\n+                .run();\n+        Path testSrc = base.resolve(\"test-src\");\n+        tb.writeJavaFiles(testSrc, \"module test { requires transitive m; }\", \"package impl; public class I { api.A a; }\");\n+        Path testClasses = base.resolve(\"test-classes\");\n+        Files.createDirectories(testClasses);\n+        new JavacTask(tb)\n+                .options(\"-Werror\", \"--module-path\", jar.toString())\n+                .sourcepath(testSrc)\n+                .outdir(testClasses)\n+                .files(findJavaFiles(testSrc))\n+                .run()\n+                .writeAll();\n+        new JavacTask(tb)\n+                .options(\"-Werror\", \"--module-path\", jar.toString(), \"--release\", \"9\", \"-doe\")\n+                .sourcepath(testSrc)\n+                .outdir(testClasses)\n+                .files(findJavaFiles(testSrc))\n+                .run()\n+                .writeAll();\n+    }\n+\n","filename":"test\/langtools\/tools\/javac\/modules\/ModuleInfoTest.java","additions":52,"deletions":1,"binary":false,"changes":53,"status":"modified"}]}