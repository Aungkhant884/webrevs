{"files":[{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -117,1 +117,8 @@\n-ifeq ($(BUILD_CDS_ARCHIVE), true)\n+# Helper function for creating the CDS archives for the JDK and JRE\n+#\n+# Param1 - VM variant (e.g., server, client, zero, ...)\n+# Param2 - _nocoops, or empty\n+define create_cds_archive\n+  $1_$2_DUMP_EXTRA_ARG := $(if $(filter _nocoops, $2),-XX:-UseCompressedOops,)\n+  $1_$2_DUMP_TYPE      := $(if $(filter _nocoops, $2),-NOCOOPS,)\n+\n@@ -119,2 +126,1 @@\n-    CDS_ARCHIVE := bin\/server\/classes.jsa\n-    CDS_NOCOOPS_ARCHIVE := bin\/server\/classes_nocoops.jsa\n+    $1_$2_CDS_ARCHIVE := bin\/$1\/classes$2.jsa\n@@ -122,2 +128,1 @@\n-    CDS_ARCHIVE := lib\/server\/classes.jsa\n-    CDS_NOCOOPS_ARCHIVE := lib\/server\/classes_nocoops.jsa\n+    $1_$2_CDS_ARCHIVE := lib\/$1\/classes$2.jsa\n@@ -126,8 +131,8 @@\n-  $(eval $(call SetupExecute, gen_cds_archive_jdk, \\\n-      WARN := Creating CDS archive for jdk image, \\\n-      DEPS := $(jlink_jdk), \\\n-      OUTPUT_FILE := $(JDK_IMAGE_DIR)\/$(CDS_ARCHIVE), \\\n-      SUPPORT_DIR := $(SUPPORT_OUTPUTDIR)\/images\/jdk, \\\n-      COMMAND := $(FIXPATH) $(JDK_IMAGE_DIR)\/bin\/java -Xshare:dump \\\n-          -XX:SharedArchiveFile=$(JDK_IMAGE_DIR)\/$(CDS_ARCHIVE) \\\n-          -Xmx128M -Xms128M $(LOG_INFO), \\\n+  $$(eval $$(call SetupExecute, $1_$2_gen_cds_archive_jdk, \\\n+      WARN := Creating CDS$$($1_$2_DUMP_TYPE) archive for jdk image for $1, \\\n+      DEPS := $$(jlink_jdk), \\\n+      OUTPUT_FILE := $$(JDK_IMAGE_DIR)\/$$($1_$2_CDS_ARCHIVE), \\\n+      SUPPORT_DIR := $$(SUPPORT_OUTPUTDIR)\/images\/jdk, \\\n+      COMMAND := $$(FIXPATH) $$(JDK_IMAGE_DIR)\/bin\/java -Xshare:dump \\\n+          -XX:SharedArchiveFile=$$(JDK_IMAGE_DIR)\/$$($1_$2_CDS_ARCHIVE) \\\n+          $$($1_$2_DUMP_EXTRA_ARG) -Xmx128M -Xms128M $$(LOG_INFO), \\\n@@ -136,1 +141,1 @@\n-  JDK_TARGETS += $(gen_cds_archive_jdk)\n+  JDK_TARGETS += $$($1_$2_gen_cds_archive_jdk)\n@@ -138,8 +143,8 @@\n-  $(eval $(call SetupExecute, gen_cds_archive_jre, \\\n-      WARN := Creating CDS archive for jre image, \\\n-      DEPS := $(jlink_jre), \\\n-      OUTPUT_FILE := $(JRE_IMAGE_DIR)\/$(CDS_ARCHIVE), \\\n-      SUPPORT_DIR := $(SUPPORT_OUTPUTDIR)\/images\/jre, \\\n-      COMMAND := $(FIXPATH) $(JRE_IMAGE_DIR)\/bin\/java -Xshare:dump \\\n-          -XX:SharedArchiveFile=$(JRE_IMAGE_DIR)\/$(CDS_ARCHIVE) \\\n-          -Xmx128M -Xms128M $(LOG_INFO), \\\n+  $$(eval $$(call SetupExecute, $1_$2_gen_cds_archive_jre, \\\n+      WARN := Creating CDS$$($1_$2_DUMP_TYPE) archive for jre image, \\\n+      DEPS := $$(jlink_jre), \\\n+      OUTPUT_FILE := $$(JRE_IMAGE_DIR)\/$$($1_$2_CDS_ARCHIVE), \\\n+      SUPPORT_DIR := $$(SUPPORT_OUTPUTDIR)\/images\/jre, \\\n+      COMMAND := $$(FIXPATH) $$(JRE_IMAGE_DIR)\/bin\/java -Xshare:dump \\\n+          -XX:SharedArchiveFile=$$(JRE_IMAGE_DIR)\/$$($1_$2_CDS_ARCHIVE) \\\n+          $$($1_$2_DUMP_EXTRA_ARG) -Xmx128M -Xms128M $$(LOG_INFO), \\\n@@ -148,1 +153,7 @@\n-  JRE_TARGETS += $(gen_cds_archive_jre)\n+  JRE_TARGETS += $$($1_$2_gen_cds_archive_jre)\n+endef\n+\n+ifeq ($(BUILD_CDS_ARCHIVE), true)\n+  $(foreach v, $(JVM_VARIANTS), \\\n+    $(eval $(call create_cds_archive,$v,)) \\\n+  )\n@@ -151,25 +162,3 @@\n-    $(eval $(call SetupExecute, gen_cds_nocoops_archive_jdk, \\\n-        WARN := Creating CDS-NOCOOPS archive for jdk image, \\\n-        DEPS := $(jlink_jdk), \\\n-        OUTPUT_FILE := $(JDK_IMAGE_DIR)\/$(CDS_NOCOOPS_ARCHIVE), \\\n-        SUPPORT_DIR := $(SUPPORT_OUTPUTDIR)\/images\/jdk, \\\n-        COMMAND := $(FIXPATH) $(JDK_IMAGE_DIR)\/bin\/java -Xshare:dump \\\n-            -XX:SharedArchiveFile=$(JDK_IMAGE_DIR)\/$(CDS_NOCOOPS_ARCHIVE) \\\n-            -XX:-UseCompressedOops \\\n-            -Xmx128M -Xms128M $(LOG_INFO), \\\n-    ))\n-\n-    JDK_TARGETS += $(gen_cds_nocoops_archive_jdk)\n-\n-    $(eval $(call SetupExecute, gen_cds_nocoops_archive_jre, \\\n-        WARN := Creating CDS-NOCOOPS archive for jre image, \\\n-        DEPS := $(jlink_jre), \\\n-        OUTPUT_FILE := $(JRE_IMAGE_DIR)\/$(CDS_NOCOOPS_ARCHIVE), \\\n-        SUPPORT_DIR := $(SUPPORT_OUTPUTDIR)\/images\/jre, \\\n-        COMMAND := $(FIXPATH) $(JRE_IMAGE_DIR)\/bin\/java -Xshare:dump \\\n-            -XX:SharedArchiveFile=$(JRE_IMAGE_DIR)\/$(CDS_NOCOOPS_ARCHIVE) \\\n-            -XX:-UseCompressedOops \\\n-            -Xmx128M -Xms128M $(LOG_INFO), \\\n-    ))\n-\n-    JRE_TARGETS += $(gen_cds_nocoops_archive_jre)\n+    $(foreach v, $(JVM_VARIANTS), \\\n+      $(eval $(call create_cds_archive,$v,_nocoops)) \\\n+    )\n@@ -177,1 +166,0 @@\n-\n","filename":"make\/Images.gmk","additions":38,"deletions":50,"binary":false,"changes":88,"status":"modified"},{"patch":"@@ -413,1 +413,1 @@\n-    JVM_FEATURES_VARIANT_UNAVAILABLE=\"cds compiler1 compiler2 \\\n+    JVM_FEATURES_VARIANT_UNAVAILABLE=\"compiler1 compiler2 \\\n","filename":"make\/autoconf\/jvm-features.m4","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -40,0 +40,1 @@\n+#include \"runtime\/arguments.hpp\"\n@@ -180,0 +181,7 @@\n+  \/\/ CDS uses Bytecodes::_nofast_xxx to indicate that the bytecode\n+  \/\/ is in a method that lives in read-only memory and shouldn't be\n+  \/\/ rewritten. However, _nofast_xxx is not supported by ZERO yet.\n+  \/\/ Let's disable bytecode rewriting altogether at dump time, and defer\n+  \/\/ all rewriting to runtime.\n+  bool rewrite = RewriteBytecodes && !Arguments::is_dumping_archive();\n+\n@@ -189,1 +197,1 @@\n-      if (RewriteBytecodes) {\n+      if (rewrite) {\n@@ -195,1 +203,1 @@\n-      if (RewriteBytecodes) {\n+      if (rewrite) {\n","filename":"src\/hotspot\/cpu\/zero\/zeroInterpreter_zero.cpp","additions":10,"deletions":2,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -1830,0 +1830,8 @@\n+#ifdef ZERO\n+  if (i == MetaspaceShared::ro) {\n+    \/\/ The \"nofast\" bytecodes are not supported by ZERO yet, so the bytecodes\n+    \/\/ (stored in the \"ro\" region) need to be rewritten at runtime.\n+    si->set_read_only(false);\n+  }\n+#endif\n+\n","filename":"src\/hotspot\/share\/cds\/filemap.cpp","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -404,0 +404,2 @@\n+#ifndef ZERO\n+  \/\/ TODO: these \"nofast\" bytecodes are not supported by ZERO yet, so we can't rewrite.\n@@ -420,0 +422,1 @@\n+#endif\n","filename":"src\/hotspot\/share\/cds\/metaspaceShared.cpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"}]}