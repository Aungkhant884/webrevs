{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n-import java.awt.Point;\n@@ -50,1 +49,0 @@\n-import java.util.Arrays;\n@@ -52,0 +50,1 @@\n+\n@@ -53,1 +52,0 @@\n-import javax.imageio.IIOImage;\n@@ -1165,3 +1163,3 @@\n-     * Returns <code>true<\/code> if the given <code>ColorSpace<\/code> object is\n-     * an instance of <code>ICC_ColorSpace<\/code> but is not one of the standard\n-     * <code>ColorSpace<\/code>s returned by <code>ColorSpace.getInstance()<\/code>.\n+     * Returns {@code true} if the given {@code ColorSpace} object is an\n+     * instance of {@code ICC_ColorSpace} but is not one of the standard\n+     * {@code ColorSpace}s returned by {@code ColorSpace.getInstance()}.\n@@ -1169,1 +1167,1 @@\n-     * @param cs The <code>ColorSpace<\/code> to test.\n+     * @param  cs the {@code ColorSpace} to test\n@@ -1172,18 +1170,5 @@\n-        boolean retval = false;\n-\n-        try {\n-            \/\/ Check the standard ColorSpaces in decreasing order of\n-            \/\/ likelihood except check CS_PYCC last as in some JREs\n-            \/\/ PYCC.pf used not to be installed.\n-            retval =\n-                (cs instanceof ICC_ColorSpace) &&\n-                !(cs.isCS_sRGB() ||\n-                  cs.equals(ColorSpace.getInstance(ColorSpace.CS_LINEAR_RGB)) ||\n-                  cs.equals(ColorSpace.getInstance(ColorSpace.CS_GRAY)) ||\n-                  cs.equals(ColorSpace.getInstance(ColorSpace.CS_CIEXYZ)) ||\n-                  cs.equals(ColorSpace.getInstance(ColorSpace.CS_PYCC)));\n-        } catch(IllegalArgumentException e) {\n-            \/\/ PYCC.pf not installed: ignore it - 'retval' is still 'false'.\n-        }\n-\n-        return retval;\n+        return cs instanceof ICC_ColorSpace && !cs.isCS_sRGB()\n+                && !cs.equals(ColorSpace.getInstance(ColorSpace.CS_LINEAR_RGB))\n+                && !cs.equals(ColorSpace.getInstance(ColorSpace.CS_GRAY))\n+                && !cs.equals(ColorSpace.getInstance(ColorSpace.CS_CIEXYZ))\n+                && !cs.equals(ColorSpace.getInstance(ColorSpace.CS_PYCC));\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/imageio\/plugins\/common\/ImageUtil.java","additions":11,"deletions":26,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -1004,1 +1004,1 @@\n-            ColorModel cm = new ComponentColorModel(JPEG.JCS.sRGB,\n+            ColorModel cm = new ComponentColorModel(JPEG.sRGB,\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/imageio\/plugins\/jpeg\/JFIFMarkerSegment.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,3 @@\n+import java.awt.color.ColorSpace;\n+import java.awt.image.ColorModel;\n+\n@@ -29,1 +32,0 @@\n-import javax.imageio.plugins.jpeg.JPEGQTable;\n@@ -31,4 +33,1 @@\n-\n-import java.awt.image.ColorModel;\n-import java.awt.color.ColorSpace;\n-import java.awt.color.ICC_ColorSpace;\n+import javax.imageio.plugins.jpeg.JPEGQTable;\n@@ -202,8 +201,1 @@\n-    \/* These are kept in the inner class to avoid static initialization\n-     * of the CMM class until someone actually needs it.\n-     * (e.g. do not init CMM on the request for jpeg mime types)\n-     *\/\n-    public static class JCS {\n-        public static final ColorSpace sRGB =\n-            ColorSpace.getInstance(ColorSpace.CS_sRGB);\n-    }\n+    static final ColorSpace sRGB = ColorSpace.getInstance(ColorSpace.CS_sRGB);\n@@ -214,21 +206,0 @@\n-    \/**\n-     * Returns {@code true} if the given {@code ColorSpace}\n-     * object is an instance of ICC_ColorSpace but is not one of the\n-     * standard {@code ColorSpaces} returned by\n-     * {@code ColorSpace.getInstance()}.\n-     *\/\n-    static boolean isNonStandardICC(ColorSpace cs) {\n-        boolean retval = false;\n-        if ((cs instanceof ICC_ColorSpace)\n-            && (!cs.isCS_sRGB())\n-            && (!cs.equals(ColorSpace.getInstance(ColorSpace.CS_CIEXYZ)))\n-            && (!cs.equals(ColorSpace.getInstance(ColorSpace.CS_GRAY)))\n-            && (!cs.equals(ColorSpace.getInstance(ColorSpace.CS_LINEAR_RGB)))\n-            && (!cs.equals(ColorSpace.getInstance(ColorSpace.CS_PYCC)))\n-            ) {\n-            retval = true;\n-        }\n-        return retval;\n-    }\n-\n-\n@@ -345,1 +316,0 @@\n-\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/imageio\/plugins\/jpeg\/JPEG.java","additions":6,"deletions":36,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -1050,1 +1050,1 @@\n-                convert = new ColorConvertOp(JPEG.JCS.sRGB, cs, null);\n+                convert = new ColorConvertOp(JPEG.sRGB, cs, null);\n@@ -1901,1 +1901,1 @@\n-                return ImageTypeSpecifier.createInterleaved(JPEG.JCS.sRGB,\n+                return ImageTypeSpecifier.createInterleaved(JPEG.sRGB,\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/imageio\/plugins\/jpeg\/JPEGImageReader.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,19 @@\n+import java.awt.Dimension;\n+import java.awt.Rectangle;\n+import java.awt.Transparency;\n+import java.awt.color.ColorSpace;\n+import java.awt.color.ICC_ColorSpace;\n+import java.awt.color.ICC_Profile;\n+import java.awt.image.BufferedImage;\n+import java.awt.image.ColorConvertOp;\n+import java.awt.image.ColorModel;\n+import java.awt.image.DataBufferByte;\n+import java.awt.image.IndexColorModel;\n+import java.awt.image.Raster;\n+import java.awt.image.RenderedImage;\n+import java.awt.image.WritableRaster;\n+import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.Iterator;\n+import java.util.List;\n+\n@@ -29,2 +48,0 @@\n-import javax.imageio.ImageWriter;\n-import javax.imageio.ImageWriteParam;\n@@ -33,0 +50,3 @@\n+import javax.imageio.ImageWriteParam;\n+import javax.imageio.ImageWriter;\n+import javax.imageio.metadata.IIOInvalidTreeException;\n@@ -35,3 +55,1 @@\n-import javax.imageio.metadata.IIOInvalidTreeException;\n-import javax.imageio.spi.ImageWriterSpi;\n-import javax.imageio.stream.ImageOutputStream;\n+import javax.imageio.plugins.jpeg.JPEGHuffmanTable;\n@@ -40,1 +58,2 @@\n-import javax.imageio.plugins.jpeg.JPEGHuffmanTable;\n+import javax.imageio.spi.ImageWriterSpi;\n+import javax.imageio.stream.ImageOutputStream;\n@@ -42,0 +61,1 @@\n+import com.sun.imageio.plugins.common.ImageUtil;\n@@ -43,22 +63,0 @@\n-\n-import java.awt.image.Raster;\n-import java.awt.image.WritableRaster;\n-import java.awt.image.DataBufferByte;\n-import java.awt.image.ColorModel;\n-import java.awt.image.IndexColorModel;\n-import java.awt.image.ColorConvertOp;\n-import java.awt.image.RenderedImage;\n-import java.awt.image.BufferedImage;\n-import java.awt.color.ColorSpace;\n-import java.awt.color.ICC_ColorSpace;\n-import java.awt.color.ICC_Profile;\n-import java.awt.Dimension;\n-import java.awt.Rectangle;\n-import java.awt.Transparency;\n-\n-import java.io.IOException;\n-\n-import java.util.List;\n-import java.util.ArrayList;\n-import java.util.Iterator;\n-\n@@ -690,1 +688,1 @@\n-                    if (JPEG.isNonStandardICC(cs)) {\n+                    if (ImageUtil.isNonStandardICCColorSpace(cs)) {\n@@ -701,1 +699,1 @@\n-                    if (JPEG.isNonStandardICC(cs)) {\n+                    if (ImageUtil.isNonStandardICCColorSpace(cs)) {\n@@ -725,1 +723,1 @@\n-                        if (JPEG.isNonStandardICC(cs)) {\n+                        if (ImageUtil.isNonStandardICCColorSpace(cs)) {\n@@ -769,1 +767,1 @@\n-                                if (JPEG.isNonStandardICC(cs)\n+                                if (ImageUtil.isNonStandardICCColorSpace(cs)\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/imageio\/plugins\/jpeg\/JPEGImageWriter.java","additions":31,"deletions":33,"binary":false,"changes":64,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,13 @@\n+import java.awt.Point;\n+import java.awt.color.ColorSpace;\n+import java.awt.color.ICC_ColorSpace;\n+import java.awt.color.ICC_Profile;\n+import java.awt.image.BufferedImage;\n+import java.awt.image.ColorModel;\n+import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.ListIterator;\n+\n+import javax.imageio.IIOException;\n@@ -30,3 +43,1 @@\n-import javax.imageio.IIOException;\n-import javax.imageio.stream.ImageInputStream;\n-import javax.imageio.stream.ImageOutputStream;\n+import javax.imageio.metadata.IIOInvalidTreeException;\n@@ -34,2 +45,0 @@\n-import javax.imageio.metadata.IIOMetadataNode;\n-import javax.imageio.metadata.IIOMetadataFormat;\n@@ -37,2 +46,1 @@\n-import javax.imageio.metadata.IIOInvalidTreeException;\n-import javax.imageio.plugins.jpeg.JPEGQTable;\n+import javax.imageio.metadata.IIOMetadataNode;\n@@ -41,0 +49,2 @@\n+import javax.imageio.stream.ImageInputStream;\n+import javax.imageio.stream.ImageOutputStream;\n@@ -42,0 +52,2 @@\n+import com.sun.imageio.plugins.common.ImageUtil;\n+import org.w3c.dom.NamedNodeMap;\n@@ -44,14 +56,0 @@\n-import org.w3c.dom.NamedNodeMap;\n-\n-import java.util.List;\n-import java.util.ArrayList;\n-import java.util.Arrays;\n-import java.util.Iterator;\n-import java.util.ListIterator;\n-import java.io.IOException;\n-import java.awt.color.ICC_Profile;\n-import java.awt.color.ICC_ColorSpace;\n-import java.awt.color.ColorSpace;\n-import java.awt.image.BufferedImage;\n-import java.awt.image.ColorModel;\n-import java.awt.Point;\n@@ -579,1 +577,1 @@\n-        if (wantJFIF && JPEG.isNonStandardICC(cs)) {\n+        if (wantJFIF && ImageUtil.isNonStandardICCColorSpace(cs)) {\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/imageio\/plugins\/jpeg\/JPEGMetadata.java","additions":21,"deletions":23,"binary":false,"changes":44,"status":"modified"}]}