{"files":[{"patch":"@@ -1169,4 +1169,24 @@\n-# If the property is set to an illegal value,\n-# an iteration count that is not a positive integer, or an unknown algorithm\n-# name, an exception will be thrown when the property is used.\n-# If the property is not set or empty, a default value will be used.\n+# If the property is set to an illegal value, an iteration count that is not\n+# a positive integer, or an unknown algorithm name, an exception will be thrown\n+# when the property is used. If the property is not set or empty, a default\n+# value will be used.\n+#\n+# Some PKCS12 tools and libraries may not support algorithms based on PBES2\n+# and AES. To create a PKCS12 keystore which they can load, set the system\n+# property \"keystore.pkcs12.legacy\" which overrides the values of the properties\n+# defined below with legacy algorithms. Setting this system property (which can\n+# only be enabled and has no value) is equivalent to\n+#\n+#   -Dkeystore.pkcs12.certProtectionAlgorithm=PBEWithSHA1AndRC2_40\n+#   -Dkeystore.pkcs12.keyProtectionAlgorithm=PBEWithSHA1AndDESede\n+#   -Dkeystore.pkcs12.macAlgorithm=HmacPBESHA1\n+#   -Dkeystore.pkcs12.certPbeIterationCount=50000\n+#   -Dkeystore.pkcs12.keyPbeIterationCount=50000\n+#   -Dkeystore.pkcs12.macIterationCount=100000\n+#\n+# Also, you can downgrade an existing PKCS12 keystore created with stronger\n+# algorithms to legacy algorithms with\n+#\n+#    keytool -J-Dkeystore.pkcs12.legacy -importkeystore -srckeystore ks -destkeystore ks\n+#\n+# This system property should be used at your own risk.\n","filename":"src\/java.base\/share\/conf\/security\/java.security","additions":24,"deletions":4,"binary":false,"changes":28,"status":"modified"}]}