{"files":[{"patch":"@@ -309,8 +309,3 @@\n-        long[] result;\n-        if (bLatin1) {\n-            result = new long[256];\n-        } else {\n-            result = new long[1<<16];\n-        }\n-        int k=0;\n-        int codePoint = plane<<16;\n+        long[] result = new long[bLatin1 ? 256 : 1 << 16];\n+        int k = 0;\n+        int codePoint = plane << 16;\n@@ -640,1 +635,1 @@\n-            \/\/ Find out whether there is already a block just like it in the buffer.\n+                \/\/ Find out whether there is already a block just like it in the buffer.\n@@ -652,1 +647,1 @@\n-            if (m >= 0) System.arraycopy(map, i, buffer, ptr, m);\n+            if (m > 0) System.arraycopy(map, i, buffer, ptr, m);\n@@ -659,1 +654,1 @@\n-        if (ptr >= 0) System.arraycopy(buffer, 0, newdata, 0, ptr);\n+        if (ptr > 0) System.arraycopy(buffer, 0, newdata, 0, ptr);\n@@ -661,2 +656,1 @@\n-        long[][] result = { newmap, newdata };\n-        return result;\n+        return new long[][]{ newmap, newdata };\n@@ -709,1 +703,1 @@\n-                    char ch = 'x';\n+                    char ch;\n@@ -807,2 +801,0 @@\n-        if (x.equals(\"valueDigit\")) return \"0x\" + hex8(valueDigit);\n-        if (x.equals(\"valueStrangeNumeric\")) return \"0x\" + hex8(valueStrangeNumeric);\n@@ -1181,1 +1173,1 @@\n-            StringBuffer theString = new StringBuffer();\n+            StringBuilder theString = new StringBuilder();\n@@ -1586,1 +1578,1 @@\n-        StringBuffer desc = new StringBuffer(\"java GenerateCharacter\");\n+        StringBuilder desc = new StringBuilder(\"java GenerateCharacter\");\n@@ -1588,1 +1580,1 @@\n-            desc.append(\" \" + arg);\n+            desc.append(\" \").append(arg);\n@@ -1745,1 +1737,1 @@\n-        for (int i=0; i<binsOccupied; ++i) bitsFree -= sizes[i];\n+        for (int i = 0; i < binsOccupied; ++i) bitsFree -= sizes[i];\n@@ -1751,1 +1743,1 @@\n-            for (int i=1; i<bitsFree; ++i) { \/\/ Don't allow bins of 0 except for last one\n+            for (int i = 1; i < bitsFree; ++i) { \/\/ Don't allow bins of 0 except for last one\n@@ -1777,1 +1769,1 @@\n-            tables[j-1] = temp[0];\n+            tables[j - 1] = temp[0];\n@@ -1784,2 +1776,2 @@\n-            int len = tables[j+1].length;\n-            int size = sizes[j+1];\n+            int len = tables[j + 1].length;\n+            int size = sizes[j + 1];\n@@ -1821,1 +1813,3 @@\n-            for (int size : sizes) System.out.print(\" \" + size);\n+            for (int size : sizes) {\n+                System.out.print(\" \" + size);\n+            }\n","filename":"make\/jdk\/src\/classes\/build\/tools\/generatecharacter\/GenerateCharacter.java","additions":19,"deletions":25,"binary":false,"changes":44,"status":"modified"}]}