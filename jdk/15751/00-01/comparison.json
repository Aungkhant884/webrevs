{"files":[{"patch":"@@ -33,0 +33,1 @@\n+import java.util.concurrent.atomic.AtomicInteger;\n@@ -41,4 +42,0 @@\n-\/\/ Subclass of Frame, creates two buttons: one that moves the Frame by\n-\/\/ invoking setBounds, and the other that invokes repaint directly on\n-\/\/ the Frame to repaint a Component. The Component displays an integer\n-\/\/ that increments everytime paint is invoked on it.\n@@ -62,2 +59,1 @@\n-            int count = counter.getCount();\n-            robot.delay(300);\n+            int count = counter.getCount().get();\n@@ -65,1 +61,1 @@\n-            EventQueue.invokeAndWait(() -> panel.repaint());\n+            EventQueue.invokeAndWait(panel::repaint);\n@@ -69,1 +65,1 @@\n-            if (counter.getCount() == count) {\n+            if (counter.getCount().get() == count) {\n@@ -115,1 +111,1 @@\n-        private static int paintCount;\n+        private static AtomicInteger paintCount = new AtomicInteger(0);\n@@ -121,1 +117,1 @@\n-        public int getCount() {\n+        public AtomicInteger getCount() {\n@@ -130,1 +126,1 @@\n-            String string = Integer.toString(paintCount++);\n+            String string = Integer.toString(paintCount.getAndIncrement());\n","filename":"test\/jdk\/java\/awt\/event\/PaintEvent\/RepaintTest.java","additions":7,"deletions":11,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -30,5 +30,5 @@\n-* @test\n-* @bug 4214848\n-* @summary Tests whether  HTMLEditorKit.read(...)\n-*          creates Document for html with empty BODY\n-*\/\n+ * @test\n+ * @bug 4214848\n+ * @summary Tests whether  HTMLEditorKit.read(...)\n+ *          creates Document for html with empty BODY\n+ *\/\n@@ -39,7 +39,7 @@\n-        String test1=\"<HTML><BODY><\/BODY><\/HTML>\";\n-        HTMLEditorKit c= new HTMLEditorKit();\n-        Document doc = c.createDefaultDocument();\n-        c.read(new StringReader(test1), doc, 0); \/\/ prepare test document\n-        c.write(sw, doc, 0, 10);\n-        String au=sw.toString().toLowerCase();\n-        if (au.indexOf(\"<body>\") != au.lastIndexOf(\"<body>\")) {\n+        String test = \"<HTML><BODY><\/BODY><\/HTML>\";\n+        HTMLEditorKit kit = new HTMLEditorKit();\n+        Document doc = kit.createDefaultDocument();\n+        kit.read(new StringReader(test), doc, 0); \/\/ prepare test document\n+        kit.write(sw, doc, 0, 10);\n+        String out = sw.toString().toLowerCase();\n+        if (out.indexOf(\"<body>\") != out.lastIndexOf(\"<body>\")) {\n","filename":"test\/jdk\/javax\/swing\/text\/html\/HTMLEditorKit\/bug4214848.java","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-        kit.insertHTML(doc, 0, \"<sub>0<\/sub>\", 0, 0, HTML.Tag.SUB);\n+        kit.insertHTML(doc, doc.getLength(), \"<sub>0<\/sub>\", 0, 0, HTML.Tag.SUB);\n@@ -48,4 +48,6 @@\n-        String au = sw.toString().toLowerCase();\n-        if ((!au.contains(\"<sub>0<\/sub>\")) || (!au.contains(\"<sup>0<\/sup>\"))\n-                || (!au.contains(\"<code>0<\/code>\")) || (!au.contains(\"<b>0<\/b>\"))\n-                || (!au.contains(\"<i>0<\/i>\"))) {\n+        String out = sw.toString().toLowerCase();\n+        if ((!out.contains(\"<sub>0<\/sub>\"))\n+                || (!out.contains(\"<sup>0<\/sup>\"))\n+                || (!out.contains(\"<code>0<\/code>\"))\n+                || (!out.contains(\"<b>0<\/b>\"))\n+                || (!out.contains(\"<i>0<\/i>\"))) {\n","filename":"test\/jdk\/javax\/swing\/text\/html\/HTMLEditorKit\/bug4230197.java","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n- *          correct `pos' argument.\n+ *          correct 'pos' argument.\n@@ -52,2 +52,2 @@\n-            if (! (new String(data)).equals(commentData) ||\n-                    pos != commentIndex) {\n+            if (!(new String(data)).equals(commentData)\n+                    || pos != commentIndex) {\n@@ -64,2 +64,2 @@\n-            if (! tag.equals(endTags[endTagIndex]) ||\n-                    pos != endTagPositions[endTagIndex]) {\n+            if (!tag.equals(endTags[endTagIndex])\n+                    || pos != endTagPositions[endTagIndex]) {\n@@ -95,2 +95,2 @@\n-            if (!tag.equals(startTags[startTagIndex]) ||\n-                    pos != startTagPositions[startTagIndex]) {\n+            if (!tag.equals(startTags[startTagIndex])\n+                    || pos != startTagPositions[startTagIndex]) {\n@@ -108,2 +108,2 @@\n-            if (!textData[textIndex].equals(new String(data)) ||\n-                    pos != textPositions[textIndex]) {\n+            if (!textData[textIndex].equals(new String(data))\n+                    || pos != textPositions[textIndex]) {\n","filename":"test\/jdk\/javax\/swing\/text\/html\/HTMLEditorKit\/bug4238223.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"}]}