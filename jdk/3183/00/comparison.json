{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -524,2 +524,9 @@\n-    if (SetEndOfFile(h) == 0)\n-        throwWindowsException(env, GetLastError());\n+    if (SetEndOfFile(h) == 0) {\n+        DWORD error = GetLastError();\n+        LARGE_INTEGER size;\n+        if (GetFileSizeEx(h, &size) == 0) {\n+            throwWindowsException(env, GetLastError());\n+        } else if (size.QuadPart != 0) {\n+            throwWindowsException(env, error);\n+        }\n+    }\n","filename":"src\/java.base\/windows\/native\/libnio\/fs\/WindowsNativeDispatcher.c","additions":10,"deletions":3,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -0,0 +1,43 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.io.OutputStream;\n+import java.nio.file.Files;\n+\n+\/* @test\n+ * @bug 8263898\n+ * @summary Verify a byte can be written to the null device.\n+ * @run main NullDevice\n+*\/\n+public class NullDevice {\n+    public static void main(final String[] args) throws IOException {\n+        System.getProperties().list(System.out);\n+        final File f = new File(\"nul\");\n+        try (final OutputStream os = Files.newOutputStream(f.toPath())) {\n+            os.write(0x02);\n+            System.out.printf(\"Wrote a byte to %s%n\", f);\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/nio\/file\/Files\/NullDevice.java","additions":43,"deletions":0,"binary":false,"changes":43,"status":"added"}]}