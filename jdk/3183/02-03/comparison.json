{"files":[{"patch":"@@ -0,0 +1,72 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.OutputStream;\n+import java.nio.ByteBuffer;\n+import java.nio.channels.FileChannel;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import static java.nio.file.StandardOpenOption.*;\n+\n+\/* @test\n+ * @bug 8263898\n+ * @summary Verify a byte can be written to the null device.\n+ * @requires os.family == \"windows\"\n+ * @run main NulDevice\n+*\/\n+public class NulDevice {\n+    public static void main(final String[] args) throws IOException {\n+        System.getProperties().list(System.out);\n+        System.out.println();\n+        Path path = Path.of(\"nul\");\n+        try (final OutputStream os = Files.newOutputStream(path)) {\n+            os.write(0x02);\n+            System.out.printf(\"Wrote a byte to %s%n\", path);\n+            try (InputStream is = Files.newInputStream(path);) {\n+                int aByte = is.read();\n+                System.out.printf(\"read %d from %s%n\", aByte, path);\n+                if (aByte != -1) {\n+                    throw new RuntimeException(\"Should only read -1 from NUL\");\n+                }\n+            }\n+        }\n+        try (final OutputStream os = Files.newOutputStream(path, WRITE)) {\n+            os.write(0x02);\n+            System.out.printf(\"Wrote a byte to %s%n\", path);\n+        }\n+        try (final FileChannel ch = FileChannel.open(path, CREATE,\n+             TRUNCATE_EXISTING, WRITE)) {\n+            byte[] bytes = \"Whatever\".getBytes();\n+            ByteBuffer buf = ByteBuffer.allocate(2*bytes.length);\n+            buf.put(bytes);\n+            int nw = ch.write(buf);\n+            System.out.printf(\"Wrote %d bytes to %s%n\", nw, path);\n+            if (nw != bytes.length) {\n+                throw new RuntimeException(\"Should write \" + bytes.length +\n+                    \" to NUL\");\n+            }\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/nio\/file\/Files\/NulDevice.java","additions":72,"deletions":0,"binary":false,"changes":72,"status":"added"},{"patch":"@@ -1,44 +0,0 @@\n-\/*\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-import java.io.File;\n-import java.io.IOException;\n-import java.io.OutputStream;\n-import java.nio.file.Files;\n-\n-\/* @test\n- * @bug 8263898\n- * @summary Verify a byte can be written to the null device.\n- * @requires os.family == \"windows\"\n- * @run main NullDevice\n-*\/\n-public class NullDevice {\n-    public static void main(final String[] args) throws IOException {\n-        System.getProperties().list(System.out);\n-        final File f = new File(\"nul\");\n-        try (final OutputStream os = Files.newOutputStream(f.toPath())) {\n-            os.write(0x02);\n-            System.out.printf(\"Wrote a byte to %s%n\", f);\n-        }\n-    }\n-}\n","filename":"test\/jdk\/java\/nio\/file\/Files\/NullDevice.java","additions":0,"deletions":44,"binary":false,"changes":44,"status":"deleted"}]}