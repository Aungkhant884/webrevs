{"files":[{"patch":"@@ -28,0 +28,1 @@\n+import java.nio.channels.AsynchronousFileChannel;\n@@ -32,0 +33,1 @@\n+import java.util.concurrent.ExecutionException;\n@@ -35,1 +37,1 @@\n- * @summary Verify a byte can be written to the null device.\n+ * @summary Verify stream and channel behavior with NUL device\n@@ -40,3 +42,2 @@\n-    public static void main(final String[] args) throws IOException {\n-        System.getProperties().list(System.out);\n-        System.out.println();\n+    public static void main(final String[] args)\n+        throws ExecutionException, InterruptedException, IOException {\n@@ -44,0 +45,1 @@\n+\n@@ -46,1 +48,0 @@\n-            System.out.printf(\"Wrote a byte to %s%n\", path);\n@@ -48,0 +49,3 @@\n+                if (is.available() != 0) {\n+                    throw new RuntimeException(\"No bytes should be available\");\n+                }\n@@ -49,1 +53,0 @@\n-                System.out.printf(\"read %d from %s%n\", aByte, path);\n@@ -55,0 +58,1 @@\n+\n@@ -57,1 +61,0 @@\n-            System.out.printf(\"Wrote a byte to %s%n\", path);\n@@ -59,0 +62,1 @@\n+\n@@ -65,1 +69,0 @@\n-            System.out.printf(\"Wrote %d bytes to %s%n\", nw, path);\n@@ -71,0 +74,27 @@\n+\n+        try (final FileChannel ch = FileChannel.open(path, READ)) {\n+            if (ch.size() != 0) {\n+                throw new RuntimeException(\"Size should be zero\");\n+            }\n+            ByteBuffer buf = ByteBuffer.allocate(10);\n+            int nr = ch.read(buf);\n+            if (nr != -1) {\n+                throw new RuntimeException(\"Read returns \" + nr + \" not -1\");\n+            }\n+        }\n+\n+        try (final AsynchronousFileChannel ch =\n+            AsynchronousFileChannel.open(path, READ, WRITE)) {\n+            if (ch.size() != 0) {\n+                throw new RuntimeException(\"Size should be zero\");\n+            }\n+            int nw = ch.write(ByteBuffer.wrap(new byte[] {(byte)0x02}), 0L).get();\n+            if (nw != 1) {\n+                throw new RuntimeException(\"Wrote \" + nw + \" bytes, not one\");\n+            }\n+            ByteBuffer buf = ByteBuffer.allocate(10);\n+            int nr = ch.read(buf, 0L).get();\n+            if (nr != -1) {\n+                throw new RuntimeException(\"Read returns \" + nr + \" not -1\");\n+            }\n+        }\n","filename":"test\/jdk\/java\/nio\/file\/Files\/NulDevice.java","additions":38,"deletions":8,"binary":false,"changes":46,"status":"modified"}]}