{"files":[{"patch":"@@ -59,1 +59,1 @@\n-  void notify_allocation(JavaThread* thread);\n+  void notify_allocation();\n@@ -63,1 +63,1 @@\n-  void notify_allocation_dtrace_sampler(JavaThread* thread);\n+  void notify_allocation_dtrace_sampler();\n@@ -73,1 +73,0 @@\n-      _thread(JavaThread::current()),\n@@ -80,0 +79,3 @@\n+    assert(Thread::current()->is_Java_thread(), \"must be used by JavaThreads only\");\n+    assert(Thread::current() == allocator._thread, \"do not pass MemAllocator across threads\");\n+    _thread = JavaThread::cast(allocator._thread);\n@@ -85,1 +87,1 @@\n-      notify_allocation(_thread);\n+      notify_allocation();\n@@ -98,1 +100,1 @@\n-  PreserveObj(JavaThread* thread, oop* obj_ptr)\n+  PreserveObj(Thread* thread, oop* obj_ptr)\n@@ -159,1 +161,1 @@\n-  JavaThread::cast(_thread)->check_for_valid_safepoint_state();\n+  _thread->check_for_valid_safepoint_state();\n@@ -220,1 +222,1 @@\n-void MemAllocator::Allocation::notify_allocation_dtrace_sampler(JavaThread* thread) {\n+void MemAllocator::Allocation::notify_allocation_dtrace_sampler() {\n@@ -226,1 +228,1 @@\n-      SharedRuntime::dtrace_object_alloc(thread, obj(), word_size);\n+      SharedRuntime::dtrace_object_alloc(_thread, obj(), word_size);\n@@ -231,1 +233,1 @@\n-void MemAllocator::Allocation::notify_allocation(JavaThread* thread) {\n+void MemAllocator::Allocation::notify_allocation() {\n@@ -234,1 +236,1 @@\n-  notify_allocation_dtrace_sampler(thread);\n+  notify_allocation_dtrace_sampler();\n@@ -338,1 +340,1 @@\n-  debug_only(JavaThread::cast(_thread)->check_for_valid_safepoint_state());\n+  debug_only(allocation._thread->check_for_valid_safepoint_state());\n","filename":"src\/hotspot\/share\/gc\/shared\/memAllocator.cpp","additions":13,"deletions":11,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -64,1 +64,3 @@\n-  { }\n+  {\n+    assert(_thread == Thread::current(), \"must be\");\n+  }\n","filename":"src\/hotspot\/share\/gc\/shared\/memAllocator.hpp","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"}]}