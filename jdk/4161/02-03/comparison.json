{"files":[{"patch":"@@ -1706,2 +1706,2 @@\n-                    case \"gregory\" -> new GregorianCalendar(zone, aLocale);\n-                    default -> null;\n+                    case \"gregory\"  -> new GregorianCalendar(zone, aLocale);\n+                    default         -> null;\n@@ -2261,2 +2261,2 @@\n-            case ERA -> symbols.getEras();\n-            case MONTH -> (baseStyle == LONG) ? symbols.getMonths() : symbols.getShortMonths();\n+            case ERA         -> symbols.getEras();\n+            case MONTH       -> (baseStyle == LONG) ? symbols.getMonths() : symbols.getShortMonths();\n@@ -2264,1 +2264,1 @@\n-            case AM_PM -> symbols.getAmPmStrings();\n+            case AM_PM       -> symbols.getAmPmStrings();\n","filename":"src\/java.base\/share\/classes\/java\/util\/Calendar.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -4349,2 +4349,2 @@\n-                        case DateTime.YEAR_2 -> i %= 100;\n-                        case DateTime.YEAR_4 -> size = 4;\n+                        case DateTime.YEAR_2  -> i %= 100;\n+                        case DateTime.YEAR_4  -> size = 4;\n","filename":"src\/java.base\/share\/classes\/java\/util\/Formatter.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -660,2 +660,2 @@\n-                            case 'a', 'b', 'c', 'd', 'e', 'f' -> (value << 4) + 10 + aChar - 'a';\n-                            case 'A', 'B', 'C', 'D', 'E', 'F' -> (value << 4) + 10 + aChar - 'A';\n+                            case 'a', 'b', 'c', 'd', 'e', 'f'                     -> (value << 4) + 10 + aChar - 'a';\n+                            case 'A', 'B', 'C', 'D', 'E', 'F'                     -> (value << 4) + 10 + aChar - 'A';\n","filename":"src\/java.base\/share\/classes\/java\/util\/Properties.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -338,2 +338,2 @@\n-            case READ -> SecurityConstants.PROPERTY_READ_ACTION;\n-            case WRITE -> SecurityConstants.PROPERTY_WRITE_ACTION;\n+            case READ         -> SecurityConstants.PROPERTY_READ_ACTION;\n+            case WRITE        -> SecurityConstants.PROPERTY_WRITE_ACTION;\n@@ -341,1 +341,1 @@\n-            default -> \"\";\n+            default           -> \"\";\n","filename":"src\/java.base\/share\/classes\/java\/util\/PropertyPermission.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2912,1 +2912,1 @@\n-                            case \"CN\", \"SG\" -> script = \"Hans\";\n+                            case \"CN\", \"SG\"       -> script = \"Hans\";\n","filename":"src\/java.base\/share\/classes\/java\/util\/ResourceBundle.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -497,1 +497,1 @@\n-            case NORMAL -> \"[Completed normally]\";\n+            case NORMAL      -> \"[Completed normally]\";\n@@ -499,1 +499,3 @@\n-            case CANCELLED, INTERRUPTING, INTERRUPTED -> \"[Cancelled]\";\n+            case CANCELLED,\n+                 INTERRUPTING,\n+                 INTERRUPTED -> \"[Cancelled]\";\n","filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/FutureTask.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -187,1 +187,1 @@\n-            case NANOSECONDS -> sourceUnit.toNanos(sourceDuration);\n+            case NANOSECONDS  -> sourceUnit.toNanos(sourceDuration);\n@@ -190,2 +190,2 @@\n-            case SECONDS -> sourceUnit.toSeconds(sourceDuration);\n-            default -> cvt(sourceDuration, scale, sourceUnit.scale);\n+            case SECONDS      -> sourceUnit.toSeconds(sourceDuration);\n+            default           -> cvt(sourceDuration, scale, sourceUnit.scale);\n@@ -458,1 +458,1 @@\n-            case NANOSECONDS -> ChronoUnit.NANOS;\n+            case NANOSECONDS  -> ChronoUnit.NANOS;\n@@ -461,4 +461,4 @@\n-            case SECONDS -> ChronoUnit.SECONDS;\n-            case MINUTES -> ChronoUnit.MINUTES;\n-            case HOURS -> ChronoUnit.HOURS;\n-            case DAYS -> ChronoUnit.DAYS;\n+            case SECONDS      -> ChronoUnit.SECONDS;\n+            case MINUTES      -> ChronoUnit.MINUTES;\n+            case HOURS        -> ChronoUnit.HOURS;\n+            case DAYS         -> ChronoUnit.DAYS;\n@@ -480,3 +480,3 @@\n-            case NANOS -> TimeUnit.NANOSECONDS;\n-            case MICROS -> TimeUnit.MICROSECONDS;\n-            case MILLIS -> TimeUnit.MILLISECONDS;\n+            case NANOS   -> TimeUnit.NANOSECONDS;\n+            case MICROS  -> TimeUnit.MICROSECONDS;\n+            case MILLIS  -> TimeUnit.MILLISECONDS;\n@@ -485,3 +485,3 @@\n-            case HOURS -> TimeUnit.HOURS;\n-            case DAYS -> TimeUnit.DAYS;\n-            default -> throw new IllegalArgumentException(\"No TimeUnit equivalent for \" + chronoUnit);\n+            case HOURS   -> TimeUnit.HOURS;\n+            case DAYS    -> TimeUnit.DAYS;\n+            default      -> throw new IllegalArgumentException(\"No TimeUnit equivalent for \" + chronoUnit);\n","filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/TimeUnit.java","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -80,13 +80,13 @@\n-            case UPPER -> \"ASCII.UPPER\";\n-            case LOWER -> \"ASCII.LOWER\";\n-            case DIGIT -> \"ASCII.DIGIT\";\n-            case SPACE -> \"ASCII.SPACE\";\n-            case PUNCT -> \"ASCII.PUNCT\";\n-            case CNTRL -> \"ASCII.CNTRL\";\n-            case BLANK -> \"ASCII.BLANK\";\n-            case UNDER -> \"ASCII.UNDER\";\n-            case ASCII -> \"ASCII.ASCII\";\n-            case ALPHA -> \"ASCII.ALPHA\";\n-            case ALNUM -> \"ASCII.ALNUM\";\n-            case GRAPH -> \"ASCII.GRAPH\";\n-            case WORD -> \"ASCII.WORD\";\n+            case UPPER  -> \"ASCII.UPPER\";\n+            case LOWER  -> \"ASCII.LOWER\";\n+            case DIGIT  -> \"ASCII.DIGIT\";\n+            case SPACE  -> \"ASCII.SPACE\";\n+            case PUNCT  -> \"ASCII.PUNCT\";\n+            case CNTRL  -> \"ASCII.CNTRL\";\n+            case BLANK  -> \"ASCII.BLANK\";\n+            case UNDER  -> \"ASCII.UNDER\";\n+            case ASCII  -> \"ASCII.ASCII\";\n+            case ALPHA  -> \"ASCII.ALPHA\";\n+            case ALNUM  -> \"ASCII.ALNUM\";\n+            case GRAPH  -> \"ASCII.GRAPH\";\n+            case WORD   -> \"ASCII.WORD\";\n@@ -94,1 +94,1 @@\n-            default -> \"ASCII ?\";\n+            default     -> \"ASCII ?\";\n","filename":"src\/java.base\/share\/classes\/java\/util\/regex\/PrintPattern.java","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -92,3 +92,3 @@\n-            case REFERENCE -> EMPTY_NODE;\n-            case INT_VALUE -> EMPTY_INT_NODE;\n-            case LONG_VALUE -> EMPTY_LONG_NODE;\n+            case REFERENCE    -> EMPTY_NODE;\n+            case INT_VALUE    -> EMPTY_INT_NODE;\n+            case LONG_VALUE   -> EMPTY_LONG_NODE;\n@@ -121,3 +121,3 @@\n-            case REFERENCE -> new ConcNode<>(left, right);\n-            case INT_VALUE -> new ConcNode.OfInt((Node.OfInt) left, (Node.OfInt) right);\n-            case LONG_VALUE -> new ConcNode.OfLong((Node.OfLong) left, (Node.OfLong) right);\n+            case REFERENCE    -> new ConcNode<>(left, right);\n+            case INT_VALUE    -> new ConcNode.OfInt((Node.OfInt) left, (Node.OfInt) right);\n+            case LONG_VALUE   -> new ConcNode.OfLong((Node.OfLong) left, (Node.OfLong) right);\n","filename":"src\/java.base\/share\/classes\/java\/util\/stream\/Nodes.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -85,3 +85,3 @@\n-            case DEFLATED -> 20;\n-            case STORED -> 10;\n-            default -> throw new ZipException(\"unsupported compression method\");\n+        case DEFLATED -> 20;\n+        case STORED   -> 10;\n+        default       -> throw new ZipException(\"unsupported compression method\");\n","filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipOutputStream.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}