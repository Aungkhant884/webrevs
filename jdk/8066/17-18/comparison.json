{"files":[{"patch":"@@ -253,10 +253,12 @@\n-     * Returns the file name extension of this path as a {@code String}. The\n-     * extension is the portion of the {@linkplain #getFileName file name}\n-     * string after the last period character ('.', U+002E FULL STOP). Leading\n-     * period characters in the string are ignored. If there is no  extension,\n-     * then {@code null} is returned. This will occur if the path has zero\n-     * elements ({@link #getFileName()} returns {@code null}), the file name\n-     * string does not contain a period character, or only the first character\n-     * is a period character. If the last character is a period character but\n-     * some other character is not, then the extension is the\n-     * {@linkplain String#isEmpty() empty} string.\n+     * Returns the file name extension of this path as a {@code String}.\n+     * The extension is derived from this {@code Path} by obtaining the\n+     * {@linkplain #getFileName file name element}, deriving its {@linkplain\n+     * #toString string representation}, and then extracting a substring\n+     * determined by the position of a period character ('.', U+002E FULL STOP)\n+     * within the file name string. If the file name element is {@code null},\n+     * or if the file name string does not contain a period character, or if\n+     * the only period in the file name string is its first character, then\n+     * the extension is {@code null}. Otherwise, the extension is the substring\n+     * after the last period in the file name string. If this last period is\n+     * also the last character in the file name string, then the  extension is\n+     * {@linkplain String#isEmpty empty}.\n@@ -270,3 +272,3 @@\n-     * return lastPeriod == fileName.length() - 1 ?\n-     *     \"\" :\n-     *     fileName.substring(lastPeriod + 1);\n+     * return (lastPeriod == fileName.length() - 1)\n+     *     ? \"\"\n+     *     : fileName.substring(lastPeriod + 1);\n@@ -296,3 +298,2 @@\n-                    \/\/ null if all period characters, otherwise empty\n-                    return fileNameString.matches(\"\\\\.{\" + length + \"}\") ?\n-                        null : \"\";\n+                    \/\/ empty string\n+                    return \"\";\n","filename":"src\/java.base\/share\/classes\/java\/nio\/file\/Path.java","additions":17,"deletions":16,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n- * @summary Verify extension methods\n+ * @summary Verify getExtension method\n@@ -48,4 +48,4 @@\n-            {\"..\",             null},\n-            {\"...\",            null},\n-            {\"....\",           null},\n-            {\".....\",          null},\n+            {\"..\",             \"\"},\n+            {\"...\",            \"\"},\n+            {\"....\",           \"\"},\n+            {\".....\",          \"\"},\n@@ -76,0 +76,2 @@\n+            {\"waitwhat.&$!#%\", \"&$!#%\"},\n+            {\"6.283185307\",    \"283185307\"}\n","filename":"test\/jdk\/java\/nio\/file\/Path\/Extensions.java","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"}]}