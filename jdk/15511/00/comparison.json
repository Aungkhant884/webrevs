{"files":[{"patch":"@@ -100,0 +100,3 @@\n+        if (bci < 0 || bci > codeLength)\n+            throw new IllegalArgumentException(String.format(\"Bytecode offset out of range; bci=%d, codeLength=%d\",\n+                                                             bci, codeLength));\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/CodeImpl.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+import jdk.internal.classfile.impl.LabelContext;\n@@ -74,0 +75,9 @@\n+\n+    @Test\n+    void testCodeRange() {\n+        var cf = Classfile.of();\n+        var lc = (LabelContext)cf.parse(cf.build(ClassDesc.of(\"EmptyClass\"), cb -> cb.withMethodBody(\n+                \"aMethod\", MethodTypeDesc.of(ConstantDescs.CD_void), 0, cob -> cob.return_()))).methods().get(0).code().get();\n+        assertThrows(IllegalArgumentException.class, () -> lc.getLabel(-1));\n+        assertThrows(IllegalArgumentException.class, () -> lc.getLabel(10));\n+    }\n","filename":"test\/jdk\/jdk\/classfile\/LimitsTest.java","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"}]}