{"files":[{"patch":"@@ -1756,0 +1756,15 @@\n+\n+            \/\/Check if any files are selected before setting multi-Selection.\n+            \/\/If selected, retain them and update the selected files in FileChooser class.\n+            File[] selectedFiles = null;\n+            if(getFileChooser().getSelectedFiles().length != 0) {\n+                selectedFiles = getFileChooser().getSelectedFiles();\n+            } else if(getFileChooser().getSelectedFile() != null) {\n+                File selectedFile = getFileChooser().getSelectedFile();\n+                selectedFiles = new File[1];\n+                selectedFiles[0] = selectedFile;\n+            }\n+\n+            if(selectedFiles != null) {\n+                getFileChooser().setSelectedFiles(selectedFiles);\n+            }\n","filename":"src\/java.desktop\/share\/classes\/sun\/swing\/FilePane.java","additions":15,"deletions":0,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -0,0 +1,91 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Color;\n+import java.io.File;\n+import javax.swing.JFileChooser;\n+import javax.swing.JFrame;\n+import javax.swing.JTextArea;\n+import javax.swing.SwingUtilities;\n+\n+\/*\n+ * @test\n+ * @bug 4834298\n+ * @key headful\n+ * @summary Test to check if the getSelectedFiles of JFilesChooser\n+ *          returns selectedFiles when Multi-Selection is enabled.\n+ * @run main\/manual MultiSelectionEnabledSelectedFilesTest\n+ *\/\n+public class MultiSelectionEnabledSelectedFilesTest {\n+    private static JFrame frame;\n+    public static void main(String[] args) throws Exception {\n+        SwingUtilities.invokeAndWait(new Runnable() {\n+            public void run() {\n+                try {\n+                    runTest();\n+                } finally {\n+                    frame.dispose();\n+                }\n+            }\n+        });\n+        System.out.println(\"Test Pass!\");\n+    }\n+\n+    static void runTest() {\n+        \/\/Initialize the components\n+        String INSTRUCTIONS\n+                = \"Instructions to Test:\"+\n+                \"\\n1. Select a valid file from mouse click on first \"+\n+                \"dialog.\"+\n+                \"\\n2. After Selection, first dialog closes and second \" +\n+                \"dialog opens where multi-Selection is enabled.\"+\n+                \"\\n3. Select the same previously selected file without changing \" +\n+                \"mouse position or selection.\"+\n+                \"\\n4. If the selected file is updated in then getSelectedFiles \"+\n+                \"returns the file selected and test is PASS.\"+\n+                \"\\n5. If the selected file is not updated and getSelectedFiles \"+\n+                \"returns empty array, then Test FAILS.\";\n+\n+        JFileChooser chooser = new JFileChooser();\n+        JTextArea textArea = new JTextArea();\n+        frame = new JFrame(\"Test Instructions\");\n+\n+        textArea.setText(INSTRUCTIONS);\n+        textArea.setEnabled(false);\n+        textArea.setDisabledTextColor(Color.black);\n+        textArea.setBackground(Color.white);\n+\n+        frame.add(textArea);\n+        frame.pack();\n+        frame.setVisible(true);\n+\n+        chooser.showOpenDialog(null);\n+        chooser.setMultiSelectionEnabled(true);\n+        chooser.showOpenDialog(null);\n+        File[] files = chooser.getSelectedFiles();\n+\n+        if(files.length <= 0) {\n+            throw new RuntimeException(\"Test Failed since selected files are empty!!\");\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JFileChooser\/MultiSelectionEnabledSelectedFilesTest.java","additions":91,"deletions":0,"binary":false,"changes":91,"status":"added"}]}