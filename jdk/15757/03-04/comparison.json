{"files":[{"patch":"@@ -38,1 +38,0 @@\n-import java.util.ArrayList;\n@@ -53,0 +52,3 @@\n+    \/\/\n+    \/\/ This class is spawned to test combinations of parameters.\n+    \/\/\n@@ -55,9 +57,11 @@\n-            if (arg.equals(\"io\")) {\n-                File file = null;\n-                try {\n-                    file = File.createTempFile(\"prefix\", \".suffix\");\n-                } catch (Exception e) {\n-                    e.printStackTrace();\n-                } finally {\n-                    if (file != null && file.exists())\n-                        file.delete();\n+            switch (arg) {\n+                case \"io\" -> {\n+                    File file = null;\n+                    try {\n+                        file = File.createTempFile(\"prefix\", \".suffix\");\n+                    } catch (Exception e) {\n+                        e.printStackTrace();\n+                    } finally {\n+                        if (file != null && file.exists())\n+                            file.delete();\n+                    }\n@@ -65,1 +69,1 @@\n-            } else if (arg.equals(\"nio\")) {\n+                case \"nio\" -> {\n@@ -67,7 +71,11 @@\n-                try {\n-                    path = Files.createTempFile(\"prefix\", \".suffix\");\n-                } catch (Exception e) {\n-                    e.printStackTrace();\n-                } finally {\n-                    if (path != null)\n-                        Files.deleteIfExists(path);\n+                    try {\n+                        path = Files.createTempFile(\"prefix\", \".suffix\");\n+                    } catch (Exception e) {\n+                        e.printStackTrace();\n+                    } finally {\n+                        if (path != null)\n+                            Files.deleteIfExists(path);\n+                    }\n+                }\n+                default -> {\n+                    throw new RuntimeException(\"unknown case: \" + arg);\n@@ -75,2 +83,0 @@\n-            } else {\n-                throw new RuntimeException(\"unknown case: \" + arg);\n@@ -87,4 +93,1 @@\n-        List<Arguments> list = new ArrayList<Arguments>();\n-\n-        \/\/ invalid custom java.io.tmpdir\n-        Arguments args = Arguments.of(0, WARNING,\n+        return Stream.of(Arguments.of(0, WARNING,\n@@ -95,3 +98,2 @@\n-                                      });\n-        list.add(args);\n-        args = Arguments.of(0, WARNING,\n+                                      }),\n+                         Arguments.of(0, WARNING,\n@@ -101,5 +103,2 @@\n-                            });\n-        list.add(args);\n-\n-        \/\/ test with security manager\n-        args = Arguments.of(0, WARNING,\n+                            }),\n+                         Arguments.of(0, WARNING,\n@@ -110,3 +109,2 @@\n-                            });\n-        list.add(args);\n-        args = Arguments.of(0, WARNING,\n+                            }),\n+                         Arguments.of(0, WARNING,\n@@ -117,4 +115,1 @@\n-                            });\n-        list.add(args);\n-\n-        return list.stream();\n+                            }));\n@@ -124,4 +119,1 @@\n-        List<Arguments> list = new ArrayList<Arguments>();\n-\n-        \/\/ standard test with default setting for java.io.tmpdir\n-        Arguments args = Arguments.of(0, WARNING,\n+        return Stream.of(Arguments.of(0, WARNING,\n@@ -131,23 +123,15 @@\n-                                      });\n-        list.add(args);\n-        args = Arguments.of(0, WARNING,\n-                            new String[] {\n-                                \"TempDirDoesNotExist\", \"nio\"\n-                            });\n-        list.add(args);\n-\n-        \/\/ valid custom java.io.tmpdir\n-        args = Arguments.of(0, WARNING,\n-                            new String[] {\n-                                \"-Djava.io.tmpdir=\" + USER_DIR,\n-                                \"TempDirDoesNotExist\", \"io\"\n-                            });\n-        list.add(args);\n-        args = Arguments.of(0, WARNING,\n-                            new String[] {\n-                                \"-Djava.io.tmpdir=\" + USER_DIR,\n-                                \"TempDirDoesNotExist\", \"nio\"\n-                            });\n-        list.add(args);\n-\n-        return list.stream();\n+                                      }),\n+                         Arguments.of(0, WARNING,\n+                                      new String[] {\n+                                          \"TempDirDoesNotExist\", \"nio\"\n+                                      }),\n+                         Arguments.of(0, WARNING,\n+                                      new String[] {\n+                                          \"-Djava.io.tmpdir=\" + USER_DIR,\n+                                          \"TempDirDoesNotExist\", \"io\"\n+                                      }),\n+                         Arguments.of(0, WARNING,\n+                                      new String[] {\n+                                          \"-Djava.io.tmpdir=\" + USER_DIR,\n+                                          \"TempDirDoesNotExist\", \"nio\"\n+                                      }));\n@@ -157,2 +141,0 @@\n-        List<Arguments> list = new ArrayList<Arguments>();\n-\n@@ -160,1 +142,1 @@\n-        Arguments args = Arguments.of(0,\n+        return Stream.of(Arguments.of(0,\n@@ -164,4 +146,1 @@\n-                                      });\n-        list.add(args);\n-\n-        return list.stream();\n+                                      }));\n","filename":"test\/jdk\/java\/io\/File\/TempDirDoesNotExist.java","additions":52,"deletions":73,"binary":false,"changes":125,"status":"modified"}]}