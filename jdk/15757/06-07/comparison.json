{"files":[{"patch":"@@ -95,23 +95,10 @@\n-        return Stream.of(Arguments.of(0, WARNING,\n-                                      new String[] {\n-                                          \"-Djava.io.tmpdir=\" +\n-                                          tempDir(),\n-                                          \"TempDirDoesNotExist\", \"io\"\n-                                      }),\n-                         Arguments.of(0, WARNING,\n-                                      new String[] {\n-                                          \"-Djava.io.tmpdir=\" + tempDir(),\n-                                          \"TempDirDoesNotExist\", \"nio\"\n-                                      }),\n-                         Arguments.of(0, WARNING,\n-                                      new String[] {\n-                                          \"-Djava.io.tmpdir=\" + tempDir()\n-                                          + \" -Djava.security.manager\",\n-                                          \"TempDirDoesNotExist\", \"io\"\n-                                      }),\n-                         Arguments.of(0, WARNING,\n-                                      new String[] {\n-                                          \"-Djava.io.tmpdir=\" + tempDir()\n-                                          + \" -Djava.security.manager\",\n-                                          \"TempDirDoesNotExist\", \"nio\"\n-                                      }));\n+        return Stream.of(Arguments.of(List.of(\"-Djava.io.tmpdir=\" + tempDir(),\n+                                              \"TempDirDoesNotExist\", \"io\")),\n+                         Arguments.of(List.of(\"-Djava.io.tmpdir=\" + tempDir(),\n+                                              \"TempDirDoesNotExist\", \"nio\")),\n+                         Arguments.of(List.of(\"-Djava.io.tmpdir=\" + tempDir() +\n+                                              \" -Djava.security.manager\",\n+                                              \"TempDirDoesNotExist\", \"io\")),\n+                         Arguments.of(List.of(\"-Djava.io.tmpdir=\" + tempDir() +\n+                                              \" -Djava.security.manager\",\n+                                              \"TempDirDoesNotExist\", \"nio\")));\n@@ -121,19 +108,6 @@\n-        return Stream.of(Arguments.of(0, WARNING,\n-                                      new String[] {\n-                                          \"TempDirDoesNotExist\",\n-                                          \"io\"\n-                                      }),\n-                         Arguments.of(0, WARNING,\n-                                      new String[] {\n-                                          \"TempDirDoesNotExist\", \"nio\"\n-                                      }),\n-                         Arguments.of(0, WARNING,\n-                                      new String[] {\n-                                          \"-Djava.io.tmpdir=\" + USER_DIR,\n-                                          \"TempDirDoesNotExist\", \"io\"\n-                                      }),\n-                         Arguments.of(0, WARNING,\n-                                      new String[] {\n-                                          \"-Djava.io.tmpdir=\" + USER_DIR,\n-                                          \"TempDirDoesNotExist\", \"nio\"\n-                                      }));\n+        return Stream.of(Arguments.of(List.of(\"TempDirDoesNotExist\", \"io\")),\n+                         Arguments.of(List.of(\"TempDirDoesNotExist\", \"nio\")),\n+                         Arguments.of(List.of(\"-Djava.io.tmpdir=\" + USER_DIR,\n+                                              \"TempDirDoesNotExist\", \"io\")),\n+                         Arguments.of(List.of(\"-Djava.io.tmpdir=\" + USER_DIR,\n+                                              \"TempDirDoesNotExist\", \"nio\")));\n@@ -144,5 +118,3 @@\n-        return Stream.of(Arguments.of(0,\n-                                      new String[] {\n-                                          \"-Djava.io.tmpdir=\" + tempDir(),\n-                                          \"TempDirDoesNotExist\", \"io\", \"nio\"\n-                                      }));\n+        return Stream.of(Arguments.of(List.of(\"-Djava.io.tmpdir=\" + tempDir(),\n+                                             \"TempDirDoesNotExist\",\n+                                             \"io\", \"nio\")));\n@@ -153,4 +125,3 @@\n-    public void existingMessage(int exitValue, String errorMsg,\n-                                String... options) throws Exception {\n-       ProcessTools.executeTestJvm(options).shouldContain(errorMsg)\n-           .shouldHaveExitValue(exitValue);\n+    public void existingMessage(List<String> options) throws Exception {\n+       ProcessTools.executeTestJvm(options).shouldContain(WARNING)\n+           .shouldHaveExitValue(0);\n@@ -161,4 +132,3 @@\n-    public void nonexistentMessage(int exitValue, String errorMsg,\n-                                   String... options) throws Exception {\n-        ProcessTools.executeTestJvm(options).shouldNotContain(errorMsg)\n-            .shouldHaveExitValue(exitValue);\n+    public void nonexistentMessage(List<String> options) throws Exception {\n+        ProcessTools.executeTestJvm(options).shouldNotContain(WARNING)\n+            .shouldHaveExitValue(0);\n@@ -169,2 +139,1 @@\n-    public  void messageCounter(int exitValue, String... options)\n-        throws Exception {\n+    public void messageCounter(List<String> options) throws Exception {\n@@ -174,3 +143,7 @@\n-        if (list.size() != 1 || originalOutput.getExitValue() != exitValue)\n-            throw new Exception(\"counter of messages is not one, but \" + list.size()\n-                    + \"\\n\" + originalOutput.asLines().toString() + \"\\n\");\n+        if (list.size() != 1)\n+            throw new RuntimeException(\"counter of messages is not one, but \" +\n+                                       list.size() + \"\\n\" +\n+                                       originalOutput.asLines().toString());\n+        int exitValue = originalOutput.getExitValue();\n+        if (exitValue != 0)\n+            throw new RuntimeException(\"non-zero exit value \" + exitValue);\n","filename":"test\/jdk\/java\/io\/File\/TempDirDoesNotExist.java","additions":33,"deletions":60,"binary":false,"changes":93,"status":"modified"}]}