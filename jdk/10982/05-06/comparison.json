{"files":[{"patch":"@@ -70,23 +70,0 @@\n-################################################################################\n-# Generate interim versions of the Preview.java and TransPatters.java files for\n-# the interim langtools modules, which will allow to compile Classfile API.\n-\n-$(BUILDTOOLS_OUTPUTDIR)\/gensrc\/jdk.compiler.interim\/com\/sun\/tools\/javac\/code\/Preview.java: \\\n-    $(TOPDIR)\/src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Preview.java\n-\t$(call LogInfo, Generating Preview.java for jdk.compiler.interim)\n-\t$(call MakeDir, $(@D))\n-\t$(GREP) -v 'case PATTERN_SWITCH ->' $< > $@\n-\n-$(BUILDTOOLS_OUTPUTDIR)\/gensrc\/jdk.compiler.interim\/com\/sun\/tools\/javac\/comp\/TransPatterns.java: \\\n-    $(TOPDIR)\/src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/TransPatterns.java\n-\t$(call LogInfo, Generating TransPatterns.java for jdk.compiler.interim)\n-\t$(call MakeDir, $(@D))\n-\t$(GREP) -v 'Assert.check(preview.' $< > $@\n-\n-jdk.compiler.interim_EXTRA_FILES := \\\n-     $(BUILDTOOLS_OUTPUTDIR)\/gensrc\/jdk.compiler.interim\/com\/sun\/tools\/javac\/code\/Preview.java \\\n-     $(BUILDTOOLS_OUTPUTDIR)\/gensrc\/jdk.compiler.interim\/com\/sun\/tools\/javac\/comp\/TransPatterns.java\n-\n-TARGETS += $(BUILDTOOLS_OUTPUTDIR)\/gensrc\/jdk.compiler.interim\/com\/sun\/tools\/javac\/code\/Preview.java\n-TARGETS += $(BUILDTOOLS_OUTPUTDIR)\/gensrc\/jdk.compiler.interim\/com\/sun\/tools\/javac\/comp\/TransPatterns.java\n-\n","filename":"make\/CompileInterimLangtools.gmk","additions":0,"deletions":23,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -29,0 +29,2 @@\n+JAVAC_FLAGS += --enable-preview\n+DISABLED_WARNINGS_java += preview\n","filename":"make\/modules\/java.base\/Java.gmk","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -110,0 +110,2 @@\n+    private Symtab syms;\n+\n@@ -175,0 +177,1 @@\n+        syms = Symtab.instance(context);\n@@ -1636,1 +1639,3 @@\n-        if (preview.isEnabled() && preview.usesPreview(c.sourcefile)) {\n+        if (preview.isEnabled() && preview.usesPreview(c.sourcefile)\n+                \/\/ do not write PREVIEW_MINOR_VERSION for classes participating in preview\n+                && !preview.participatesInPreview(syms, c, syms.java_base.unnamedPackage)) {\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/jvm\/ClassWriter.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"}]}