{"files":[{"patch":"@@ -30,1 +30,0 @@\n-import java.util.Date;\n@@ -47,1 +46,0 @@\n-import com.sun.source.util.DocTreePath;\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlConfiguration.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -175,0 +175,2 @@\n+    private final Set<String> headingIds = new HashSet<>();\n+\n@@ -1516,4 +1518,0 @@\n-                private boolean equalsIgnoreCase(Name name, String s) {\n-                    return name != null && name.toString().equalsIgnoreCase(s);\n-                }\n-\n@@ -1686,0 +1684,3 @@\n+                    if (node.getName().toString().matches(\"(?i)h[1-6]\") && !hasIdAttribute(node)) {\n+                        generateHeadingId(node, trees, attrs);\n+                    }\n@@ -1755,0 +1756,33 @@\n+    private boolean equalsIgnoreCase(Name name, String s) {\n+        return name != null && name.toString().equalsIgnoreCase(s);\n+    }\n+\n+    private boolean hasIdAttribute(StartElementTree node) {\n+        return node.getAttributes().stream().anyMatch(\n+                dt -> dt instanceof AttributeTree at && equalsIgnoreCase(at.getName(), \"id\"));\n+    }\n+\n+    private void generateHeadingId(StartElementTree node, List<? extends DocTree> trees, Content content) {\n+        StringBuilder sb = new StringBuilder();\n+        String tagName = node.getName().toString().toLowerCase(Locale.ROOT);\n+        for (DocTree docTree : trees.subList(trees.indexOf(node) + 1, trees.size())) {\n+            if (docTree instanceof TextTree text) {\n+                sb.append(text.getBody());\n+            } else if (docTree instanceof LiteralTree literal) {\n+                sb.append(literal.getBody().getBody());\n+            } else if (docTree instanceof LinkTree link) {\n+                var label = link.getLabel();\n+                sb.append(label.isEmpty() ? link.getReference().getSignature() : label.toString());\n+            } else if (docTree instanceof EndElementTree endElement\n+                    && equalsIgnoreCase(endElement.getName(), tagName)) {\n+                break;\n+            } else if (docTree instanceof StartElementTree nested\n+                    && equalsIgnoreCase(nested.getName(), \"a\")\n+                    && hasIdAttribute(nested)) {\n+                return; \/\/ Avoid generating id if embedded <a id=...> is present\n+            }\n+        }\n+        HtmlId htmlId = htmlIds.forHeading(sb, headingIds);\n+        content.add(\"id=\\\"\").add(htmlId.name()).add(\"\\\"\");\n+    }\n+\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlDocletWriter.java","additions":38,"deletions":4,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+import java.util.Set;\n@@ -514,0 +515,25 @@\n+\n+    \/**\n+     * Returns an id for a heading in a doc comment. The id value is derived from the contents\n+     * of the heading with additional checks to make it unique within its containing page.\n+     *\n+     * @param headingText the text contained by the heading\n+     * @param headingIds the set of heading ids already generated for the current page\n+     * @return a unique id value for the heading\n+     *\/\n+    public HtmlId forHeading(CharSequence headingText, Set<String> headingIds) {\n+        String idValue = headingText.toString()\n+                .toLowerCase(Locale.ROOT)\n+                .trim()\n+                .replaceAll(\"[^\\\\w_-]+\", \"-\");\n+        \/\/ Make id value unique\n+        idValue = idValue + \"-heading\";\n+        if (!headingIds.add(idValue)) {\n+            int counter = 1;\n+            while (!headingIds.add(idValue + counter)) {\n+                counter++;\n+            }\n+            idValue = idValue + counter;\n+        }\n+        return HtmlId.of(idValue);\n+    }\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlIds.java","additions":26,"deletions":0,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -0,0 +1,126 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8289332\n+ * @summary Auto-generate ids for user-defined headings\n+ * @library \/tools\/lib ..\/..\/lib\n+ * @modules jdk.javadoc\/jdk.javadoc.internal.tool\n+ * @build javadoc.tester.* toolbox.ToolBox\n+ * @run main TestAutoHeaderId\n+ *\/\n+\n+import java.nio.file.Path;\n+\n+import toolbox.ToolBox;\n+\n+import javadoc.tester.JavadocTester;\n+\n+public class TestAutoHeaderId extends JavadocTester {\n+\n+    public static void main(String... args) throws Exception {\n+        TestAutoHeaderId tester = new TestAutoHeaderId();\n+        tester.runTests();\n+    }\n+\n+    private final ToolBox tb;\n+\n+    TestAutoHeaderId() {\n+        tb = new ToolBox();\n+    }\n+\n+    @Test\n+    public void testAutoHeaderId(Path base) throws Exception {\n+        Path src = base.resolve(\"src\");\n+        tb.writeJavaFiles(src,\n+                \"\"\"\n+                        package p;\n+                        \/**\n+                         * First sentence.\n+                         *\n+                         * <h2>First Header<\/h2>\n+                         *\n+                         * <h3 id=\"fixed-id-1\">Header with ID<\/h3>\n+                         *\n+                         * <h4><a id=\"fixed-id-2\">Embedded A-Tag with ID<\/a><\/h4>\n+                         *\n+                         * <h5>{@code Embedded Code Tag}<\/h5>\n+                         *\n+                         * <h6>{@linkplain C Embedded Link Tag}<\/h6>\n+                         *\n+                         * <h3>Duplicate Text<\/h3>\n+                         *\n+                         * <h4>Duplicate Text<\/h4>\n+                         *\n+                         * <h2>Extra (#*!. chars<\/h2>\n+                         *\n+                         * <h3 style=\"color: red;\" class=\"some-class\">Other attributes<\/h3>\n+                         *\n+                         * <h4><\/h4>\n+                         *\n+                         * Last sentence.\n+                         *\/\n+                        public class C {\n+                            \/** Comment. *\/\n+                            C() { }\n+                        }\n+                        \"\"\");\n+\n+        javadoc(\"-d\", base.resolve(\"api\").toString(),\n+                \"-sourcepath\", src.toString(),\n+                \"--no-platform-links\", \"p\");\n+\n+        checkOutput(\"p\/C.html\", true,\n+                \"\"\"\n+                    <h2 id=\"first-header-heading\">First Header<\/h2>\n+                    \"\"\",\n+                \"\"\"\n+                    <h3 id=\"fixed-id-1\">Header with ID<\/h3>\n+                    \"\"\",\n+                \"\"\"\n+                    <h4><a id=\"fixed-id-2\">Embedded A-Tag with ID<\/a><\/h4>\n+                    \"\"\",\n+                \"\"\"\n+                    <h5 id=\"embedded-code-tag-heading\"><code>Embedded Code Tag<\/code><\/h5>\n+                    \"\"\",\n+                \"\"\"\n+                    <h6 id=\"embedded-link-tag-heading\"><a href=\"C.html\" title=\"class in p\">Embedded Link Tag<\/a><\/h6>\n+                    \"\"\",\n+                \"\"\"\n+                    <h3 id=\"duplicate-text-heading\">Duplicate Text<\/h3>\n+                    \"\"\",\n+                \"\"\"\n+                    <h4 id=\"duplicate-text-heading1\">Duplicate Text<\/h4>\n+                    \"\"\",\n+                \"\"\"\n+                    <h2 id=\"extra-chars-heading\">Extra (#*!. chars<\/h2>\n+                    \"\"\",\n+                \"\"\"\n+                    <h3 id=\"other-attributes-heading\" style=\"color: red;\" class=\"some-class\">Other attributes<\/h3>\n+                    \"\"\",\n+                \"\"\"\n+                    <h4 id=\"-heading\"><\/h4>\n+                    \"\"\");\n+    }\n+}\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testAutoHeaderId\/TestAutoHeaderId.java","additions":126,"deletions":0,"binary":false,"changes":126,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -103,1 +103,1 @@\n-                    <h1>Package HTML file<\/h1>\n+                    <h1 id=\"package-html-file-heading\">Package HTML file<\/h1>\n@@ -109,1 +109,1 @@\n-                    <h1>Package HTML file<\/h1>\n+                    <h1 id=\"package-html-file-heading\">Package HTML file<\/h1>\n@@ -173,1 +173,1 @@\n-                    <h1>Module HTML file<\/h1>\n+                    <h1 id=\"module-html-file-heading\">Module HTML file<\/h1>\n@@ -179,1 +179,1 @@\n-                    <h1>Package HTML file<\/h1>\n+                    <h1 id=\"package-html-file-heading\">Package HTML file<\/h1>\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testIndexInDocFiles\/TestIndexInDocFiles.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"}]}