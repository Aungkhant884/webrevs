{"files":[{"patch":"@@ -133,1 +133,1 @@\n-        int ps = Bits.pageSize();\n+        int ps = pageSize();\n@@ -167,0 +167,13 @@\n+\n+    \/\/ Returns the platform defined page size, which could be different from the one Bits.pageSize\n+    \/\/ is aware of. If no implementation is provided, return Bits.pageSize instead.\n+    private static int pageSize() {\n+        int ps = pageSize0();\n+        if (ps > 0) {\n+            return ps;\n+        } else {\n+            return Bits.pageSize();\n+        }\n+    }\n+\n+    private static native int pageSize0();\n","filename":"src\/java.base\/share\/classes\/java\/nio\/MappedMemoryUtils.java","additions":14,"deletions":1,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -138,0 +138,6 @@\n+\n+JNIEXPORT jint JNICALL\n+Java_java_nio_MappedMemoryUtils_pageSize0()\n+{\n+    return (jint)sysconf(_SC_PAGESIZE);\n+}\n","filename":"src\/java.base\/unix\/native\/libnio\/MappedMemoryUtils.c","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -109,0 +109,7 @@\n+\n+JNIEXPORT jint JNICALL\n+Java_java_nio_MappedMemoryUtils_pageSize0()\n+{\n+    \/\/ Not required on Windows.\n+    return -1;\n+}\n","filename":"src\/java.base\/windows\/native\/libnio\/MappedMemoryUtils.c","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"}]}