{"files":[{"patch":"@@ -40,1 +40,0 @@\n-serviceability\/tmtools\/jstat\/GcNewTest.java 8293218 linux-x64,macosx-x64\n","filename":"test\/hotspot\/jtreg\/ProblemList-Xcomp.txt","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -62,5 +62,17 @@\n-            long edenSize = Pools.getEdenCommittedSize();\n-            long heapSize = Pools.getHeapCommittedSize();\n-            float targetPercent = ((float) edenSize) \/ (heapSize);\n-            if ((targetPercent < 0) || (targetPercent > 1.0)) {\n-                throw new RuntimeException(\"Error in the percent calculation\" + \" (eden size: \" + edenSize + \", heap size: \" + heapSize + \", calculated eden percent: \" + targetPercent + \")\");\n+            float targetFraction = 0;\n+            \/\/ Read sizes of eden and overall heap.\n+            \/\/ Recognise if heap is changing size, and retry (heap is expected to initially shrink).\n+            for (int j = 0; j < 3; j++) {\n+                long heapSize0 = Pools.getHeapCommittedSize();\n+                long edenSize = Pools.getEdenCommittedSize();\n+                long heapSize = Pools.getHeapCommittedSize();\n+                if (heapSize < heapSize0) {\n+                    System.out.println(\"provokeGc: Heap shrinking, retry. eden: \" + edenSize + \", heap0: \" + heapSize0 + \", heap: \" + heapSize);\n+                    System.gc();\n+                    continue;\n+                }\n+                targetFraction = ((float) edenSize) \/ (heapSize);\n+                if ((targetFraction < 0) || (targetFraction > 1.0)) {\n+                    throw new RuntimeException(\"Error in fraction calculation\" + \" (eden size: \" + edenSize + \", heap size: \" + heapSize\n+                                               + \", calculated eden fraction: \" + targetFraction + \")\");\n+                }\n@@ -68,2 +80,2 @@\n-            allocateHeap(targetPercent);\n-            allocateHeap(targetPercent);\n+            allocateHeap(targetFraction);\n+            allocateHeap(targetFraction);\n","filename":"test\/hotspot\/jtreg\/serviceability\/tmtools\/jstat\/utils\/GcProvoker.java","additions":20,"deletions":8,"binary":false,"changes":28,"status":"modified"}]}