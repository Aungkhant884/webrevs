{"files":[{"patch":"@@ -76,7 +76,0 @@\n-            } else {\n-                targetFraction = ((float) edenSize) \/ (heapSize);\n-                if ((targetFraction < 0) || (targetFraction > 1.0)) {\n-                    throw new RuntimeException(\"Error in fraction calculation\" + \" (eden size: \" + edenSize + \", heap size: \" + heapSize\n-                                               + \", calculated eden fraction: \" + targetFraction + \")\");\n-                }\n-                break;\n@@ -84,0 +77,6 @@\n+            targetFraction = ((float) edenSize) \/ (heapSize);\n+            if ((targetFraction < 0) || (targetFraction > 1.0)) {\n+                throw new RuntimeException(\"Error in fraction calculation\" + \" (eden size: \" + edenSize + \", heap size: \" + heapSize\n+                                           + \", calculated eden fraction: \" + targetFraction + \")\");\n+            }\n+            break; \/\/ We have found eden as a fraction of heap.\n@@ -85,0 +84,2 @@\n+        \/\/ Previously these allocations and GC call were in a loop.\n+        \/\/ That appears unnecesary as the goal is simply to cause a GC:\n","filename":"test\/hotspot\/jtreg\/serviceability\/tmtools\/jstat\/utils\/GcProvoker.java","additions":8,"deletions":7,"binary":false,"changes":15,"status":"modified"}]}