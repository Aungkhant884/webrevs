{"files":[{"patch":"@@ -533,1 +533,1 @@\n-        (context->transform.yy > 0))\n+        (context->transform.xx > 0) && (context->transform.yy > 0))\n","filename":"src\/java.desktop\/share\/native\/libfontmanager\/freetypeScaler.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n- * @summary Vertial mirrored characters should be drawn correctly\n+ * @summary Mirrored characters should be drawn correctly\n@@ -63,1 +63,1 @@\n-    static BufferedImage drawMirror(Font font) {\n+    static BufferedImage drawVerticalMirror(Font font) {\n@@ -86,0 +86,24 @@\n+    static BufferedImage drawHorizontalMirror(Font font) {\n+        BufferedImage image = new BufferedImage(SIZE, SIZE,\n+                                      BufferedImage.TYPE_BYTE_BINARY);\n+        Graphics2D g2d = image.createGraphics();\n+        g2d.setColor(Color.white);\n+        g2d.fillRect(0, 0, image.getWidth(), image.getHeight());\n+        g2d.setColor(Color.black);\n+        g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING,\n+                             RenderingHints.VALUE_ANTIALIAS_OFF);\n+\n+        AffineTransform base = g2d.getTransform();\n+        AffineTransform trans = new AffineTransform(-1.0, 0, 0, 1.0, 0, 0);\n+        trans.concatenate(base);\n+        g2d.setTransform(trans);\n+\n+        g2d.setFont(font);\n+\n+        FontMetrics fm = g2d.getFontMetrics();\n+        g2d.drawString(target, 5-image.getWidth(), fm.getAscent());\n+        g2d.dispose();\n+        return image;\n+    }\n+\n+\n@@ -97,2 +121,2 @@\n-            BufferedImage img2 = drawMirror(font);\n-            int errorCount = 0;\n+            BufferedImage img2 = drawVerticalMirror(font);\n+            int errorCount1 = 0;\n@@ -104,1 +128,1 @@\n-                        errorCount++;\n+                        errorCount1++;\n@@ -108,3 +132,15 @@\n-            if (errorCount > LIMIT) {\n-                System.out.println(\"ErrorCount=\"+errorCount);\n-                System.out.println(\"Font=\"+font);\n+\n+            img2 = drawHorizontalMirror(font);\n+            int errorCount2 = 0;\n+            for (int j = 0; j < SIZE; j++) {\n+                for (int i = 0; i < SIZE; i++) {\n+                    int c1 = img1.getRGB(i, j) & 0xFFFFFF;\n+                    int c2 = img2.getRGB(SIZE-i-1, j) & 0xFFFFFF;\n+                    if (c1 != c2) {\n+                        errorCount2++;\n+                    }\n+                }\n+            }\n+\n+            if (errorCount1 > LIMIT || errorCount2 > LIMIT) {\n+                System.out.println(\"ErrorCount:\"+errorCount1+\",\"+errorCount2);\n","filename":"test\/jdk\/java\/awt\/font\/Rotate\/MirrorTest.java","additions":44,"deletions":8,"binary":false,"changes":52,"status":"modified"}]}