{"files":[{"patch":"@@ -36,0 +36,1 @@\n+import java.awt.Point;\n@@ -43,1 +44,23 @@\n-    static final int LIMIT = 40;\n+    static final int SHIFT = 20;\n+    static final int LIMIT = 5;\n+\n+    static Point getCenterOfGravity(BufferedImage img) {\n+        int count = 0;\n+        int sx = 0;\n+        int sy = 0;\n+        for (int y = 0; y < SIZE; y++) {\n+            for (int x = 0; x < SIZE; x++) {\n+                int c = img.getRGB(x, y) & 0xFFFFFF;\n+                if (c == 0) {\n+                    count++;\n+                    sx += x;\n+                    sy += y;\n+                }\n+            }\n+        }\n+        if (count == 0) {\n+            return null;\n+        } else {\n+            return new Point(sx\/count, sy\/count);\n+        }\n+    }\n@@ -58,1 +81,1 @@\n-        g2d.drawString(target, 5, fm.getAscent());\n+        g2d.drawString(target, SHIFT, SHIFT+fm.getAscent());\n@@ -79,1 +102,0 @@\n-\n@@ -81,1 +103,1 @@\n-        g2d.drawString(target, 5, -image.getHeight()+fm.getAscent());\n+        g2d.drawString(target, SHIFT, SHIFT-image.getHeight()+fm.getAscent());\n@@ -102,1 +124,0 @@\n-\n@@ -104,1 +125,1 @@\n-        g2d.drawString(target, 5-image.getWidth(), fm.getAscent());\n+        g2d.drawString(target, SHIFT-image.getWidth(), SHIFT+fm.getAscent());\n@@ -109,1 +130,0 @@\n-\n@@ -122,21 +142,6 @@\n-            int errorCount1 = 0;\n-            for (int j = 0; j < SIZE; j++) {\n-                for (int i = 0; i < SIZE; i++) {\n-                    int c1 = img1.getRGB(i, j) & 0xFFFFFF;\n-                    int c2 = img2.getRGB(i, SIZE-j-1) & 0xFFFFFF;\n-                    if (c1 != c2) {\n-                        errorCount1++;\n-                    }\n-                }\n-            }\n-\n-            img2 = drawHorizontalMirror(font);\n-            int errorCount2 = 0;\n-            for (int j = 0; j < SIZE; j++) {\n-                for (int i = 0; i < SIZE; i++) {\n-                    int c1 = img1.getRGB(i, j) & 0xFFFFFF;\n-                    int c2 = img2.getRGB(SIZE-i-1, j) & 0xFFFFFF;\n-                    if (c1 != c2) {\n-                        errorCount2++;\n-                    }\n-                }\n+            BufferedImage img3 = drawHorizontalMirror(font);\n+            Point p1 = getCenterOfGravity(img1);\n+            Point p2 = getCenterOfGravity(img2);\n+            Point p3 = getCenterOfGravity(img3);\n+            if (p1 == null || p2 == null || p3 == null ) {\n+                continue;\n@@ -144,3 +149,8 @@\n-\n-            if (errorCount1 > LIMIT || errorCount2 > LIMIT) {\n-                System.out.println(\"ErrorCount:\"+errorCount1+\",\"+errorCount2);\n+            p2.y = SIZE - p2.y - 2; \/\/ Back from vertical mirror\n+            p3.x = SIZE - p3.x - 2; \/\/ Back from horizontal mirror\n+\n+            if (Math.abs(p1.x - p2.x) > LIMIT ||\n+                Math.abs(p1.y - p2.y) > LIMIT ||\n+                Math.abs(p1.x - p3.x) > LIMIT ||\n+                Math.abs(p1.y - p3.y) > LIMIT) {\n+                System.out.println(\"Error: \"+p1+\",\"+p2+\",\"+p3);\n","filename":"test\/jdk\/java\/awt\/font\/Rotate\/MirrorTest.java","additions":41,"deletions":31,"binary":false,"changes":72,"status":"modified"}]}