{"files":[{"patch":"@@ -76,1 +76,1 @@\n-        table.setSize(WIDTH,HEIGHT);\n+        table.setSize(WIDTH, HEIGHT);\n@@ -87,1 +87,1 @@\n-        imgHeader = new BufferedImage((int)(w),(int)(h),BufferedImage.TYPE_INT_RGB);\n+        imgHeader = new BufferedImage((int)(w), (int)(h), BufferedImage.TYPE_INT_RGB);\n@@ -110,1 +110,1 @@\n-        expectedRGB = imgData.getRGB(verticalLineCol,0);\n+        expectedRGB = imgData.getRGB(verticalLineCol, 0);\n@@ -112,3 +112,3 @@\n-        for(int i = 0; i < imgHeader.getHeight(); i++) {\n-            for(int j = verticalLineCol; j < verticalLineCol + 3; j++) {\n-                if(expectedRGB != imgHeader.getRGB(j, i)) {\n+        for (int i = 0; i < imgHeader.getHeight(); i++) {\n+            for (int j = verticalLineCol; j < verticalLineCol + 3; j++) {\n+                if (expectedRGB != imgHeader.getRGB(j, i)) {\n@@ -120,3 +120,3 @@\n-        for(int i = 0; i < table.getRowCount() * table.getRowHeight() * SCALE; i++) {\n-            for(int j = verticalLineCol; j < verticalLineCol + 3; j++) {\n-                if(expectedRGB != imgData.getRGB(j, i)) {\n+        for (int i = 0; i < table.getRowCount() * table.getRowHeight() * SCALE; i++) {\n+            for (int j = verticalLineCol; j < verticalLineCol + 3; j++) {\n+                if (expectedRGB != imgData.getRGB(j, i)) {\n","filename":"test\/jdk\/javax\/swing\/JTableHeader\/TableHeaderBorderPositionTest.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"}]}