{"files":[{"patch":"@@ -217,2 +217,2 @@\n-  product(bool, PreserveHeapbaseReg, false,                                 \\\n-          \"preserve r12 as heapbase reg\")                                   \\\n+  LP64_ONLY(product(bool, PreserveHeapbaseReg, false,                       \\\n+          \"preserve r12 as heapbase reg\"))                                  \\\n","filename":"src\/hotspot\/cpu\/x86\/globals_x86.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -382,1 +382,0 @@\n-  \/\/ return UseCompressedOops && (PreserveHeapbaseReg || CompressedOops::ptrs_base() != nullptr);\n","filename":"src\/hotspot\/cpu\/x86\/x86_64.ad","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+#include \"runtime\/globals.hpp\"\n@@ -100,2 +101,3 @@\n-#ifdef AMD64\n-  static bool need_heapbase_reg()            { return UseCompressedOops && (PreserveHeapbaseReg || _narrow_oop._base != nullptr); }\n+#if defined(X86)\n+#ifdef _LP64\n+  static bool     need_heapbase_reg()        { return UseCompressedOops && (PreserveHeapbaseReg || _narrow_oop._base != nullptr); }\n@@ -103,0 +105,1 @@\n+#endif \/\/ X86_64 only\n","filename":"src\/hotspot\/share\/oops\/compressedOops.hpp","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n- * Copyright (c) 2020, Red Hat Inc. All rights reserved.\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, Alibaba Group Holding Limited. All rights reserved.\n","filename":"test\/hotspot\/gtest\/x86\/test_assembler_x86.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}