{"files":[{"patch":"@@ -2292,0 +2292,4 @@\n+WB_ENTRY(void, WB_WaitUnsafe(JNIEnv* env, jobject wb, jint time))\n+    os::naked_short_sleep(time);\n+WB_END\n+\n@@ -2543,0 +2547,1 @@\n+  {CC\"waitUnsafe\", CC\"(I)V\",                          (void*)&WB_WaitUnsafe},\n","filename":"src\/hotspot\/share\/prims\/whitebox.cpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,0 +2,1 @@\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +27,1 @@\n+import sun.hotspot.WhiteBox;\n@@ -31,5 +33,4 @@\n- * @requires vm.compiler2.enabled\n- * @library \/test\/lib\n- * @modules java.base\/jdk.internal.misc\n- *          java.management\n- * @run driver TestAbortVMOnSafepointTimeout\n+ * @library \/testlibrary \/test\/lib\n+ * @build TestAbortVMOnSafepointTimeout\n+ * @run driver ClassFileInstaller sun.hotspot.WhiteBox\n+ * @run main\/othervm -Xbootclasspath\/a:. -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI TestAbortVMOnSafepointTimeout\n@@ -41,28 +42,0 @@\n-        if (args.length > 0) {\n-            int result = test_loop(3);\n-            System.out.println(\"This message would occur after some time with result \" + result);\n-            return;\n-        }\n-\n-        testWith(500, 500);\n-    }\n-\n-    static int test_loop(int x) {\n-        int sum = 0;\n-        if (x != 0) {\n-            \/\/ Long running loop without safepoint.\n-            for (int y = 1; y < Integer.MAX_VALUE; ++y) {\n-                if (y % x == 0) ++sum;\n-            }\n-        }\n-        return sum;\n-    }\n-\n-    public static void testWith(int sfpt_interval, int timeout_delay) throws Exception {\n-        \/\/ -XX:-UseCountedLoopSafepoints - is used to prevent the loop\n-        \/\/ in test_loop() to poll for safepoints.\n-        \/\/ -XX:LoopStripMiningIter=0 and -XX:LoopUnrollLimit=0 - are\n-        \/\/ used to prevent optimizations over the loop in test_loop()\n-        \/\/ since we actually want it to provoke a safepoint timeout.\n-        \/\/ -XX:-UseBiasedLocking - is used to prevent biased locking\n-        \/\/ handshakes from changing the timing of this test.\n@@ -70,0 +43,1 @@\n+                \"-Xbootclasspath\/a:.\",\n@@ -71,1 +45,1 @@\n-                \"-XX:-UseBiasedLocking\",\n+                \"-XX:+WhiteBoxAPI\",\n@@ -75,8 +49,2 @@\n-                \"-XX:SafepointTimeoutDelay=\" + timeout_delay,\n-                \"-XX:GuaranteedSafepointInterval=\" + sfpt_interval,\n-                \"-XX:-TieredCompilation\",\n-                \"-XX:-UseCountedLoopSafepoints\",\n-                \"-XX:LoopStripMiningIter=0\",\n-                \"-XX:LoopUnrollLimit=0\",\n-                \"-XX:CompileCommand=compileonly,TestAbortVMOnSafepointTimeout::test_loop\",\n-                \"-Xcomp\",\n+                \"-XX:SafepointTimeoutDelay=50\",\n+                \"-XX:GuaranteedSafepointInterval=1\",\n@@ -85,2 +53,2 @@\n-                \"TestAbortVMOnSafepointTimeout\",\n-                \"runTestLoop\"\n+                \"TestAbortVMOnSafepointTimeout$Test\",\n+                \"999\" \/* 999 is max unsafe sleep *\/\n@@ -90,0 +58,1 @@\n+        output.shouldMatch(\"Timed out while spinning to reach a safepoint.\");\n@@ -97,1 +66,0 @@\n-            output.shouldMatch(\"TestAbortVMOnSafepointTimeout.test_loop\");\n@@ -101,0 +69,11 @@\n+\n+    public static class Test {\n+        public static void main(String[] args) throws Exception {\n+            Integer waitTime = Integer.parseInt(args[0]);\n+            WhiteBox wb = WhiteBox.getWhiteBox();\n+            \/\/ Loop here to cause a safepoint timeout.\n+            while (true) {\n+                wb.waitUnsafe(waitTime);\n+            }\n+        }\n+    }\n","filename":"test\/hotspot\/jtreg\/runtime\/Safepoint\/TestAbortVMOnSafepointTimeout.java","additions":24,"deletions":45,"binary":false,"changes":69,"status":"modified"},{"patch":"@@ -620,0 +620,2 @@\n+\n+  public native void waitUnsafe(int time_ms);\n","filename":"test\/lib\/sun\/hotspot\/WhiteBox.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"}]}