{"files":[{"patch":"@@ -719,2 +719,0 @@\n-    _is_scalar_replaceable = false;\n-    _is_non_escaping = false;\n@@ -728,2 +726,0 @@\n-    _is_scalar_replaceable = false;\n-    _is_non_escaping = false;\n@@ -733,4 +729,0 @@\n-  \/\/ Result of Escape Analysis\n-  bool _is_scalar_replaceable;\n-  bool _is_non_escaping;\n-\n","filename":"src\/hotspot\/share\/opto\/callnode.hpp","additions":0,"deletions":8,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -249,3 +249,0 @@\n-    if (n->is_CallStaticJava()) {\n-      n->as_CallStaticJava()->_is_non_escaping = noescape;\n-    }\n@@ -3071,5 +3068,0 @@\n-        if (alloc->is_CallStaticJava()) {\n-          \/\/ Set the scalar_replaceable flag for boxing method\n-          \/\/ so it could be eliminated if it has no uses.\n-          alloc->as_CallStaticJava()->_is_scalar_replaceable = true;\n-        }\n@@ -3124,5 +3116,0 @@\n-      if (alloc->is_CallStaticJava()) {\n-        \/\/ Set the scalar_replaceable flag for boxing method\n-        \/\/ so it could be eliminated.\n-        alloc->as_CallStaticJava()->_is_scalar_replaceable = true;\n-      }\n","filename":"src\/hotspot\/share\/opto\/escape.cpp","additions":0,"deletions":13,"binary":false,"changes":13,"status":"modified"}]}