{"files":[{"patch":"@@ -45,0 +45,1 @@\n+import java.lang.ref.ReferenceQueue;\n@@ -110,1 +111,0 @@\n-        Class<?> clazz = null;\n@@ -114,0 +114,1 @@\n+        ReferenceQueue<Object> refQueue = new ReferenceQueue<>();\n@@ -119,1 +120,1 @@\n-            wCanary[i] = new WeakReference<>(canary[i]);\n+            wCanary[i] = new WeakReference<>(canary[i], refQueue);\n@@ -121,1 +122,1 @@\n-            clazz = new TestLoader().loadClass(\"p.Class1\");\n+            Class<?> clazz = new TestLoader().loadClass(\"p.Class1\");\n@@ -158,2 +159,0 @@\n-        WeakReference<Class<?>> wClass = new WeakReference<>(clazz);\n-\n@@ -161,1 +160,0 @@\n-        clazz = null;\n@@ -165,3 +163,3 @@\n-        if (!ForceGC.wait(() -> wClass.refersTo(null))) {\n-            throw new RuntimeException(\"Class1 hasn't been GC'ed\");\n-        }\n+\n+        \/\/ Wait for the canary for each of the libraries to be GC'd\n+        \/\/ before exiting the test.\n@@ -169,3 +167,5 @@\n-            var wCan = wCanary[i];\n-            if (!ForceGC.wait(() -> wCan.refersTo(null))) {\n-                System.out.println(\"canary[\" + i + \"] hasn't been GC'ed\");\n+            System.gc();\n+            var res = refQueue.remove();\n+            System.out.println(i + \" dequeued: \" + res);\n+            if (res == null) {\n+                Asserts.fail(\"Too few cleared Weak references\");\n","filename":"test\/jdk\/java\/lang\/ClassLoader\/loadLibraryUnload\/LoadLibraryUnload.java","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"}]}