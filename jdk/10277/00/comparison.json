{"files":[{"patch":"@@ -293,1 +293,1 @@\n-  __ far_call(RuntimeAddress(Runtime1::entry_for(_stub)), NULL, t1);\n+  __ far_call(RuntimeAddress(Runtime1::entry_for(_stub)), t1);\n","filename":"src\/hotspot\/cpu\/riscv\/c1_CodeStubs_riscv.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2438,1 +2438,1 @@\n-void MacroAssembler::far_jump(Address entry, CodeBuffer *cbuf, Register tmp) {\n+void MacroAssembler::far_jump(Address entry, Register tmp) {\n@@ -2447,1 +2447,0 @@\n-    if (cbuf != NULL) { cbuf->set_insts_mark(); }\n@@ -2450,1 +2449,0 @@\n-    if (cbuf != NULL) { cbuf->set_insts_mark(); }\n@@ -2455,1 +2453,1 @@\n-void MacroAssembler::far_call(Address entry, CodeBuffer *cbuf, Register tmp) {\n+void MacroAssembler::far_call(Address entry, Register tmp) {\n@@ -2464,1 +2462,0 @@\n-    if (cbuf != NULL) { cbuf->set_insts_mark(); }\n@@ -2467,1 +2464,0 @@\n-    if (cbuf != NULL) { cbuf->set_insts_mark(); }\n@@ -2812,1 +2808,1 @@\n-address MacroAssembler::trampoline_call(Address entry, CodeBuffer* cbuf) {\n+address MacroAssembler::trampoline_call(Address entry) {\n@@ -2839,1 +2835,1 @@\n-  if (cbuf != NULL) { cbuf->set_insts_mark(); }\n+  address call_pc = pc();\n@@ -2846,1 +2842,1 @@\n-  \/\/ just need to return a non-null address\n+\n@@ -2848,1 +2844,1 @@\n-  return pc();\n+  return call_pc;\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp","additions":6,"deletions":10,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -601,2 +601,2 @@\n-  void far_call(Address entry, CodeBuffer *cbuf = NULL, Register tmp = t0);\n-  void far_jump(Address entry, CodeBuffer *cbuf = NULL, Register tmp = t0);\n+  void far_call(Address entry, Register tmp = t0);\n+  void far_jump(Address entry, Register tmp = t0);\n@@ -638,1 +638,2 @@\n-  address trampoline_call(Address entry, CodeBuffer* cbuf = NULL);\n+  \/\/ Return: the call PC or NULL if CodeCache is full.\n+  address trampoline_call(Address entry);\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.hpp","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2272,1 +2272,1 @@\n-      call = __ trampoline_call(Address(addr, relocInfo::runtime_call_type), &cbuf);\n+      call = __ trampoline_call(Address(addr, relocInfo::runtime_call_type));\n@@ -2281,1 +2281,1 @@\n-      call = __ trampoline_call(Address(addr, rspec), &cbuf);\n+      call = __ trampoline_call(Address(addr, rspec));\n@@ -2290,1 +2290,1 @@\n-        cbuf.shared_stub_to_interp_for(_method, cbuf.insts()->mark_off());\n+        cbuf.shared_stub_to_interp_for(_method, call - cbuf.insts_begin());\n@@ -2293,1 +2293,1 @@\n-        address stub = CompiledStaticCall::emit_to_interp_stub(cbuf);\n+        address stub = CompiledStaticCall::emit_to_interp_stub(cbuf, call);\n","filename":"src\/hotspot\/cpu\/riscv\/riscv.ad","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}