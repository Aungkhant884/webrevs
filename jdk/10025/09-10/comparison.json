{"files":[{"patch":"@@ -118,1 +118,1 @@\n-  if (_buffer[_position] & (1 << (7 - _bit_pos))) {\n+  if (_buffer[_position] & (1 << (7 - _bit_position))) {\n@@ -121,1 +121,1 @@\n-  if (++_bit_pos == 8) {\n+  if (++_bit_position == 8) {\n@@ -123,1 +123,1 @@\n-    _bit_pos = 0;\n+    _bit_position = 0;\n@@ -129,1 +129,1 @@\n-  if (_bit_pos == 0) {\n+  if (_bit_position == 0) {\n@@ -132,2 +132,2 @@\n-  uint8_t b1 = _buffer[_position] << _bit_pos;\n-  uint8_t b2 = _buffer[++_position] >> (8 - _bit_pos);\n+  uint8_t b1 = _buffer[_position] << _bit_position;\n+  uint8_t b2 = _buffer[++_position] >> (8 - _bit_position);\n@@ -172,4 +172,2 @@\n-  if (_position >= _size) {\n-    grow();\n-  }\n-  if (_bit_pos == 0) {\n+  if (_bit_position == 0) {\n+    grow_if_need();\n@@ -178,2 +176,2 @@\n-  _bit_pos++;\n-  if (_bit_pos == 8) {\n+  _bit_position++;\n+  if (_bit_position == 8) {\n@@ -181,5 +179,1 @@\n-    if (_position >= _size) {\n-      grow();\n-    }\n-    _buffer[_position] = 0;\n-    _bit_pos = 0;\n+    _bit_position = 0;\n@@ -190,4 +184,2 @@\n-  if (_position >= _size) {\n-    grow();\n-  }\n-  if (_bit_pos == 0) {\n+  grow_if_need();\n+  if (_bit_position == 0) {\n@@ -196,1 +188,1 @@\n-    _buffer[_position] |= (b >> _bit_pos);\n+    _buffer[_position] |= (b >> _bit_position);\n@@ -199,5 +191,3 @@\n-  if (_bit_pos > 0) {\n-    if (_position >= _size) {\n-      grow();\n-    }\n-    _buffer[_position] = (b << (8 - _bit_pos));\n+  if (_bit_position > 0) {\n+    grow_if_need();\n+    _buffer[_position] = (b << (8 - _bit_position));\n@@ -225,0 +215,1 @@\n+  assert(_size <= INT_MAX \/ 2, \"debug data size must not exceed INT_MAX\");\n@@ -226,1 +217,0 @@\n-  assert(nsize > 0, \"debug data size must not exceed MAX_INT\");\n","filename":"src\/hotspot\/share\/code\/compressedStream.cpp","additions":18,"deletions":28,"binary":false,"changes":46,"status":"modified"},{"patch":"@@ -115,1 +115,1 @@\n-class CompressedBitStream : public ResourceObj {\n+class CompressedSparseData : public ResourceObj {\n@@ -119,1 +119,1 @@\n-  size_t  _bit_pos {0}; \/\/ current bit offset\n+  size_t  _bit_position {0}; \/\/ current bit offset\n@@ -122,1 +122,1 @@\n-  CompressedBitStream(u_char* buffer = NULL, int position = 0) {\n+  CompressedSparseData(u_char* buffer = NULL, int position = 0) {\n@@ -131,1 +131,1 @@\n-class CompressedSparseDataReadStream : public CompressedBitStream {\n+class CompressedSparseDataReadStream : public CompressedSparseData {\n@@ -133,1 +133,1 @@\n-  CompressedSparseDataReadStream(u_char* buffer, int position) : CompressedBitStream(buffer, position) {}\n+  CompressedSparseDataReadStream(u_char* buffer, int position) : CompressedSparseData(buffer, position) {}\n@@ -136,1 +136,1 @@\n-    _bit_pos = 0;\n+    _bit_position = 0;\n@@ -161,1 +161,1 @@\n-class CompressedSparseDataWriteStream : public CompressedBitStream {\n+class CompressedSparseDataWriteStream : public CompressedSparseData {\n@@ -163,1 +163,1 @@\n-  CompressedSparseDataWriteStream(int initial_size) : CompressedBitStream() {\n+  CompressedSparseDataWriteStream(int initial_size) : CompressedSparseData() {\n@@ -184,2 +184,2 @@\n-  void flush() {\n-    if (_bit_pos > 0) {\n+  void align() {\n+    if (_bit_position > 0) {\n@@ -188,1 +188,1 @@\n-      _bit_pos = 0;\n+      _bit_position = 0;\n@@ -192,1 +192,1 @@\n-    flush(); \/\/ method have a side effect: the current byte becomes aligned\n+    align(); \/\/ method positon() have a side effect: the current data becomes aligned\n@@ -196,1 +196,0 @@\n-    flush();\n@@ -198,1 +197,2 @@\n-    _bit_pos = 0;\n+    _bit_position = 0;\n+    assert(_position < _size, \"set_position is only used for rollback\");\n@@ -204,1 +204,5 @@\n-\n+  inline void grow_if_need() {\n+    if (_position >= _size) {\n+      grow();\n+    }\n+  }\n","filename":"src\/hotspot\/share\/code\/compressedStream.hpp","additions":19,"deletions":15,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -74,1 +74,1 @@\n-  out.flush();\n+  out.align();\n@@ -94,1 +94,1 @@\n-  out.flush();\n+  out.align();\n","filename":"test\/hotspot\/gtest\/code\/test_debugInfoCompression.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}