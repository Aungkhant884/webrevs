{"files":[{"patch":"@@ -119,1 +119,1 @@\n-    return 0; \/\/ not a zero data\n+    return false; \/\/ not a zero data\n@@ -125,1 +125,1 @@\n-  return 1;\n+  return true;\n","filename":"src\/hotspot\/share\/code\/compressedStream.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n-  int bit_pos = 0;\n+  int bitPos = 0;\n@@ -36,1 +36,1 @@\n-  protected short buffer(int position) {\n+  private short buffer(int position) {\n@@ -40,2 +40,2 @@\n-  public byte readByteImpl() {\n-    if (bit_pos == 0) {\n+  private byte readByteImpl() {\n+    if (bitPos == 0) {\n@@ -44,2 +44,2 @@\n-    byte b1 = (byte)(buffer(position) << bit_pos);\n-    byte b2 = (byte)(buffer(++position) >> (8 - bit_pos));\n+    byte b1 = (byte)(buffer(position) << bitPos);\n+    byte b2 = (byte)(buffer(++position) >> (8 - bitPos));\n@@ -62,2 +62,2 @@\n-  boolean readZero() {\n-    if (0 != (buffer(position) & (1 << (7 - bit_pos)))) {\n+  private boolean readZero() {\n+    if (0 != (buffer(position) & (1 << (7 - bitPos)))) {\n@@ -66,1 +66,1 @@\n-    if (++bit_pos == 8) {\n+    if (++bitPos == 8) {\n@@ -68,1 +68,1 @@\n-      bit_pos = 0;\n+      bitPos = 0;\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/code\/CompressedSparseDataReadStream.java","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n-    public static void main(String[] args) throws Exception {\n+    public static void testReadInt() {\n@@ -53,0 +53,14 @@\n+    public static void testReadB() {\n+        byte data[] = { (byte)0x08, (byte)0x18, (byte)0x18, (byte)0x10 };\n+        CompressedSparseDataReadStream in = new CompressedSparseDataReadStream(new Addr(data), 0);\n+        assertEquals(in.readByte(), 0);         \/\/ zero bit -> 0\n+        assertEquals(in.readByte(), 0);         \/\/ zero bit -> 0\n+        assertEquals(in.readBoolean(), false);  \/\/ zero bit -> false\n+        assertEquals(in.readBoolean(), false);  \/\/ zero bit -> false\n+        assertEquals(in.readByte(), 1);         \/\/ 0x81     -> 1\n+        assertEquals(in.readBoolean(), true);   \/\/ 0x81     -> true\n+    }\n+    public static void main(String[] args) {\n+        testReadInt();\n+        testReadB();\n+    }\n@@ -56,0 +70,3 @@\n+    private static void assertEquals(boolean a, boolean b) {\n+        if (a != b) throw new RuntimeException(\"assert failed: \" + a + \" != \" + b);\n+    }\n","filename":"test\/hotspot\/jtreg\/serviceability\/sa\/TestCompressedSparseDataReadStream.java","additions":18,"deletions":1,"binary":false,"changes":19,"status":"modified"}]}