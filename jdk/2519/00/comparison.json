{"files":[{"patch":"@@ -631,0 +631,1 @@\n+    st->print_cr(\"Create histogram with %u threads\", parallel_thread_num);\n","filename":"src\/hotspot\/share\/memory\/heapInspection.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -264,1 +264,1 @@\n-\/\/   arg2: parallel thread number\n+\/\/   arg2: Parallel \"true\" or \"false\"\n@@ -289,8 +289,3 @@\n-  const char* num_str = op->arg(2);\n-  if (num_str != NULL && num_str[0] != '\\0') {\n-    uintx num;\n-    if (!Arguments::parse_uintx(num_str, &num, 0)) {\n-      out->print_cr(\"Invalid parallel thread number: [%s]\", num_str);\n-      return JNI_ERR;\n-    }\n-    parallel_thread_num = num == 0 ? parallel_thread_num : (uint)num;\n+  const char* parallel = op->arg(2);\n+  if (strcmp(parallel, \"false\") == 0) {\n+    parallel_thread_num = 1;\n","filename":"src\/hotspot\/share\/services\/attachListener.cpp","additions":4,"deletions":9,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -172,1 +172,1 @@\n-        String parallel = null;\n+        Boolean parallel = true;\n@@ -187,6 +187,2 @@\n-            } else if (subopt.startsWith(\"parallel=\")) {\n-               parallel = subopt.substring(\"parallel=\".length());\n-               if (parallel == null) {\n-                    System.err.println(\"Fail: no number provided in option: '\" + subopt + \"'\");\n-                    usage(1);\n-               }\n+            } else if (subopt.equals(\"noparallel\")) {\n+                parallel = false;\n@@ -202,1 +198,1 @@\n-        executeCommandForPid(pid, \"inspectheap\", liveopt, filename, parallel);\n+        executeCommandForPid(pid, \"inspectheap\", liveopt, filename, Boolean.toString(parallel));\n@@ -322,4 +318,1 @@\n-        System.err.println(\"      parallel=<number>  parallel threads number for heap iteration:\");\n-        System.err.println(\"                                  parallel=0 default behavior, use predefined number of threads\");\n-        System.err.println(\"                                  parallel=1 disable parallel heap iteration\");\n-        System.err.println(\"                                  parallel=<N> use N threads for parallel heap iteration\");\n+        System.err.println(\"      noparallel   If specified, the heap is inspected serially.\");\n","filename":"src\/jdk.jcmd\/share\/classes\/sun\/tools\/jmap\/JMap.java","additions":6,"deletions":13,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -112,0 +112,1 @@\n+        testHistoNonParallel();\n@@ -115,0 +116,1 @@\n+        testHistoToFileNonParallel();\n@@ -140,10 +142,0 @@\n-    private static void testHistoParallelZero() throws Exception {\n-        OutputAnalyzer output = jmap(\"-histo:parallel=0\");\n-        output.shouldHaveExitValue(0);\n-    }\n-\n-    private static void testHistoParallel() throws Exception {\n-        OutputAnalyzer output = jmap(\"-histo:parallel=2\");\n-        output.shouldHaveExitValue(0);\n-    }\n-\n@@ -151,1 +143,1 @@\n-        OutputAnalyzer output = jmap(\"-histo:parallel=1\");\n+        OutputAnalyzer output = jmap(\"-histo:noparallel\");\n@@ -156,1 +148,1 @@\n-        histoToFile(false, false, 1);\n+        histoToFile(false, false);\n@@ -160,1 +152,1 @@\n-        histoToFile(true, false, 1);\n+        histoToFile(true, false);\n@@ -164,1 +156,1 @@\n-        histoToFile(false, true, 1);\n+        histoToFile(false, true);\n@@ -167,2 +159,2 @@\n-    private static void testHistoFileParallelZero() throws Exception {\n-        histoToFile(false, false, 0);\n+    private static void testHistoToFileNonParallel() throws Exception {\n+        histoToFile(false, false, true);\n@@ -171,2 +163,3 @@\n-    private static void testHistoFileParallel() throws Exception {\n-        histoToFile(false, false, 2);\n+    private static void histoToFile(boolean live,\n+                                    boolean explicitAll) throws Exception {\n+        histoToFile(live, explicitAll, false);\n@@ -177,1 +170,1 @@\n-                                    int parallelThreadNum) throws Exception {\n+                                    boolean noParallel) throws Exception {\n@@ -180,1 +173,1 @@\n-        String parArg = \"parallel=\" + parallelThreadNum;\n+        String parArg = \"\";\n@@ -192,0 +185,3 @@\n+        if (noParallel) {\n+            parArg=\"noparallel\";\n+        }\n","filename":"test\/jdk\/sun\/tools\/jmap\/BasicJMapTest.java","additions":17,"deletions":21,"binary":false,"changes":38,"status":"modified"}]}