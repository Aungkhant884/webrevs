{"files":[{"patch":"@@ -4159,2 +4159,2 @@\n-    Node* opaque = _zero_trip_guard_opaque_nodes.at(i);\n-    DEBUG_ONLY(CountedLoopNode* loop = ((OpaqueZeroTripGuardNode*) opaque)->guarded_loop());\n+    OpaqueZeroTripGuardNode* opaque = ((OpaqueZeroTripGuardNode*)_zero_trip_guard_opaque_nodes.at(i));\n+    DEBUG_ONLY(CountedLoopNode* guarded_loop = opaque->guarded_loop());\n@@ -4162,2 +4162,13 @@\n-      assert(loop == nullptr || loop->is_in_infinite_subgraph(), \"opaque associated with loop only if in an infinite loop\");\n-      this->_igvn.replace_node(opaque, opaque->in(1));\n+      IfNode* iff = opaque->if_node();\n+      IdealLoopTree* loop = get_loop(iff);\n+      while (loop != _ltree_root && loop != nullptr) {\n+        loop = loop->_parent;\n+      }\n+      if (loop == nullptr) {\n+        \/\/ unreachable from _ltree_root: zero trip guard is in a newly discovered infinite loop.\n+        \/\/ We can't tell if the opaque node is useful or not\n+        assert(guarded_loop == nullptr || guarded_loop->is_in_infinite_subgraph(), \"\");\n+      } else {\n+        assert(guarded_loop == nullptr, \"\");\n+        this->_igvn.replace_node(opaque, opaque->in(1));\n+      }\n@@ -4165,1 +4176,1 @@\n-      assert(loop != nullptr, \"\");\n+      assert(guarded_loop != nullptr, \"\");\n","filename":"src\/hotspot\/share\/opto\/loopnode.cpp","additions":16,"deletions":5,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -60,6 +60,1 @@\n-  Node* cmp = unique_out();\n-  assert(cmp->Opcode() == Op_CmpI, \"\");\n-  Node* bol = cmp->unique_out();\n-  assert(bol->Opcode() == Op_Bool, \"\");\n-  Node* iff = bol->unique_out();\n-  assert(iff->is_If(), \"\");\n+  Node* iff = if_node();\n@@ -91,0 +86,9 @@\n+IfNode* OpaqueZeroTripGuardNode::if_node() const {\n+  Node* cmp = unique_out();\n+  assert(cmp->Opcode() == Op_CmpI, \"\");\n+  Node* bol = cmp->unique_out();\n+  assert(bol->Opcode() == Op_Bool, \"\");\n+  Node* iff = bol->unique_out();\n+  return iff->as_If();\n+}\n+\n","filename":"src\/hotspot\/share\/opto\/opaquenode.cpp","additions":10,"deletions":6,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -88,0 +88,2 @@\n+\n+  IfNode* if_node() const;\n","filename":"src\/hotspot\/share\/opto\/opaquenode.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"}]}