{"files":[{"patch":"@@ -85,4 +85,4 @@\n-    guarantee(cur != NULL, \"Regions after _front_idx %u cannot be NULL but %u is\", _front_idx, idx);\n-    \/\/ Currently the decision whether young gc moves region is determined at region\n-    \/\/ allocation time. It is not possible that a region becomes non-movable at a\n-    \/\/ later point, which means below condition always holds true.\n+    guarantee(cur != nullptr, \"Regions after _front_idx %u cannot be NULL but %u is\", _front_idx, idx);\n+    \/\/ Currently the decision whether young gc moves region contents is determined\n+    \/\/ at region allocation time. It is not possible that a region becomes non-movable\n+    \/\/ at a later point, which means below condition always holds true.\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectionSetCandidates.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -255,1 +255,1 @@\n-         G1CollectedHeap::heap()->policy()->is_young_gc_movable(hr) &&\n+         !hr->is_humongous() &&\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectionSetChooser.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -37,1 +37,2 @@\n-\/\/ (1) the HeapRegion itself is non-movable (like for young gcs) at the start of Full GC.\n+\/\/ (1) the HeapRegion itself can not be moved during this phase of the full gc\n+\/\/     (e.g. Humongous regions).\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCHeapRegionAttr.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1553,4 +1553,0 @@\n-\n-bool G1Policy::is_young_gc_movable(HeapRegion* r) const {\n-  return !r->is_humongous();\n-}\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Policy.cpp","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -453,4 +453,0 @@\n-\n-  \/\/ Indicates whether the (live) contents of the given region may be moved during\n-  \/\/ young collection. The region contents may still be reclaimed.\n-  bool is_young_gc_movable(HeapRegion* r) const;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Policy.hpp","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -560,2 +560,1 @@\n-    assert(_g1h->policy()->is_young_gc_movable(r), \"Unexpected non-movable region at index %u\", r->hrm_index());\n-    assert(r->in_collection_set(), \"Bad collection set\");\n+    assert(r->in_collection_set(), \"Failed evacuation of region %u not in collection set\", r->hrm_index());\n","filename":"src\/hotspot\/share\/gc\/g1\/g1YoungGCPostEvacuateTasks.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"}]}