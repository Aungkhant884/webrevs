{"files":[{"patch":"@@ -870,1 +870,1 @@\n-            out.write(\"    JfrEventSetting::unhide_internal_events();\");\n+            out.write(\"    JfrEventSetting::unhide_internal_types();\");\n","filename":"make\/src\/classes\/build\/tools\/jfr\/GenerateJfrFiles.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,2 +29,2 @@\n-  <!-- Internal event are meant for Hotspot engineers during developement, i.e. temporary time measurements,\n-       without the need to modify .jfc files. Code that commits an internal event should NEVER be checked in.\n+  <!-- Internal events are only to be used during development, i.e. temporary time measurements, without the need \n+       to modify .jfc files etc. Code that commits an internal event should NEVER be checked in.\n@@ -39,1 +39,1 @@\n-\t baz();\n+         baz();\n@@ -47,1 +47,1 @@\n-       ...\n+\n@@ -50,1 +50,1 @@\n-           while (rf.hasMoreEvent()) {\n+           while (rf.hasMoreEvents()) {\n@@ -64,1 +64,1 @@\n-    <Field type=\"uint\" name=\"value\" label=\"Value\"\/>\n+    <Field type=\"ulong\" name=\"value\" label=\"Value\"\/>\n","filename":"src\/hotspot\/share\/jfr\/metadata\/metadata.xml","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-static void check_internal_events(JavaThread* jt) {\n+static void check_internal_types(JavaThread* jt) {\n@@ -46,1 +46,1 @@\n-    if (JfrEventSetting::is_internal_events_visible()) {\n+    if (JfrEventSetting::is_internal_types_visible()) {\n@@ -76,1 +76,1 @@\n-  check_internal_events(jt);\n+  check_internal_types(jt);\n","filename":"src\/hotspot\/share\/jfr\/recorder\/checkpoint\/jfrMetadataEvent.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n-bool JfrEventSetting::_internal_events = false;\n+bool JfrEventSetting::_internal_types = false;\n@@ -62,3 +62,2 @@\n-void JfrEventSetting::unhide_internal_events() {\n- printf(\"internal_events = true\\n\");\n-  _internal_events = true;\n+void JfrEventSetting::unhide_internal_types() {\n+  _internal_types = true;\n@@ -67,2 +66,2 @@\n-bool JfrEventSetting::is_internal_events_visible() {\n-  return _internal_events;\n+bool JfrEventSetting::is_internal_types_visible() {\n+  return _internal_types;\n@@ -83,0 +82,1 @@\n+\n","filename":"src\/hotspot\/share\/jfr\/recorder\/jfrEventSetting.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-  static bool _internal_events;\n+  static bool _internal_types;\n@@ -52,2 +52,2 @@\n-  static void unhide_internal_events();\n-  static bool is_internal_events_visible();\n+  static void unhide_internal_types();\n+  static bool is_internal_types_visible();\n","filename":"src\/hotspot\/share\/jfr\/recorder\/jfrEventSetting.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}