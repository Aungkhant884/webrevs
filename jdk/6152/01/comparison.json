{"files":[{"patch":"@@ -242,1 +242,2 @@\n-      # Default is to calculate a string like this 'adhoc.<username>.<base dir name>'\n+      # Default is to calculate a string like this:\n+      # 'adhoc.<username>.<base dir name>'\n@@ -268,2 +269,0 @@\n-      # FIXME: Until all code can cope with an empty VERSION_BUILD, set it to 0.\n-      VERSION_BUILD=0\n@@ -442,3 +441,12 @@\n-  # The complete version string, with additional build information\n-  if test \"x$VERSION_BUILD$VERSION_OPT\" = x; then\n-    VERSION_STRING=$VERSION_NUMBER${VERSION_PRE:+-$VERSION_PRE}\n+  # A build number of \"0\" is interpreted as \"no build number\".\n+  if test \"x$VERSION_BUILD\" = x0; then\n+    VERSION_BUILD=\n+  fi\n+\n+  # Compute the complete version string, with additional build information\n+  version_with_pre=$VERSION_NUMBER${VERSION_PRE:+-$VERSION_PRE}\n+  if test \"x$VERSION_BUILD\" != x || \\\n+      ( test \"x$VERSION_OPT\" != x && test \"x$VERSION_PRE\" = x ); then\n+    # As per JEP 223, if build is set, or if opt is set but not pre,\n+    # we need a + separator\n+    version_with_build=$version_with_pre+$VERSION_BUILD\n@@ -446,2 +454,1 @@\n-    # If either build or opt is set, we need a + separator\n-    VERSION_STRING=$VERSION_NUMBER${VERSION_PRE:+-$VERSION_PRE}+$VERSION_BUILD${VERSION_OPT:+-$VERSION_OPT}\n+    version_with_build=$version_with_pre\n@@ -449,0 +456,1 @@\n+  VERSION_STRING=$version_with_build${VERSION_OPT:+-$VERSION_OPT}\n","filename":"make\/autoconf\/jdk-version.m4","additions":16,"deletions":8,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -79,0 +79,3 @@\n+#define IS_EMPTY_INNER(ARG)  ARG ## 1\n+#define IS_EMPTY(ARG)        IS_EMPTY_INNER(ARG)\n+\n@@ -85,0 +88,3 @@\n+#if (IS_EMPTY(VERSION_BUILD) == 1)\n+int Abstract_VM_Version::_vm_build_number = 0;\n+#else\n@@ -86,0 +92,1 @@\n+#endif\n","filename":"src\/hotspot\/share\/runtime\/abstract_vm_version.cpp","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"}]}