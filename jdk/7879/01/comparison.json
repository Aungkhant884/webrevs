{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -307,1 +307,1 @@\n-          \/\/ We don't really need a stub here! Just set the pending exeption and\n+          \/\/ We don't really need a stub here! Just set the pending exception and\n@@ -332,1 +332,1 @@\n-        \/\/ We don't really need a stub here! Just set the pending exeption and\n+        \/\/ We don't really need a stub here! Just set the pending exception and\n","filename":"src\/hotspot\/os_cpu\/linux_s390\/os_linux_s390.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -71,1 +71,1 @@\n-  _size   = 0; \/\/ no space allocated by ExeptionHandlerTable!\n+  _size   = 0; \/\/ no space allocated by ExceptionHandlerTable!\n","filename":"src\/hotspot\/share\/code\/exceptionHandlerTable.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -1177,1 +1177,1 @@\n-    \/\/ throw InvalidParameterExeption if not\n+    \/\/ throw InvalidParameterException if not\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/Cipher.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,0 @@\n-import jdk.internal.access.JavaLangInvokeAccess;\n@@ -227,1 +226,1 @@\n-                throw new RuntimeException(\"IOExeption happens during drain stream to file \" +\n+                throw new RuntimeException(\"IOException happens during drain stream to file \" +\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/misc\/CDS.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,1 +35,0 @@\n-import sun.lwawt.macosx.CFLayer;\n@@ -202,1 +201,1 @@\n-     * The exeption enforce clients not to use it.\n+     * The exception enforces clients not to use it.\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/lwawt\/macosx\/CPlatformEmbeddedFrame.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -72,1 +72,1 @@\n-     * Method just exits if OOME is expected and throws an exeption if not.\n+     * Method just exits if OOME is expected and throws an exception if not.\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/vm\/mlvm\/share\/MlvmOOMTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -675,1 +675,1 @@\n-                               \" threw exeption \" + e);\n+                               \" threw exception \" + e);\n@@ -688,1 +688,1 @@\n-                               \" threw exeption \" + e);\n+                               \" threw exception \" + e);\n","filename":"test\/jdk\/java\/awt\/Window\/AlwaysOnTop\/AutoTestOnTop.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2009, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2009, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -79,1 +79,1 @@\n-    String[] problem = {\"unready\", \"throw exeption\", \"good\"};\n+    String[] problem = {\"unready\", \"throw exception\", \"good\"};\n","filename":"test\/jdk\/java\/awt\/dnd\/ImageDecoratedDnDNegative\/DnDSource.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -129,1 +129,1 @@\n-     * throws NullPointerExeption otherwise.\n+     * throws NullPointerException otherwise.\n","filename":"test\/jdk\/java\/lang\/Throwable\/StackTraceSerialization.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -74,1 +74,1 @@\n-            throw new RuntimeException(\"Unexpected exeption.\");\n+            throw new RuntimeException(\"Unexpected exception.\");\n","filename":"test\/jdk\/java\/text\/BreakIterator\/Bug7104012.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}