{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,1 +50,1 @@\n-\/\/ movl reg, fs:[0]                        Get exeception pointer\n+\/\/ movl reg, fs:[0]                        Get exception pointer\n","filename":"src\/hotspot\/os_cpu\/windows_x86\/assembler_windows_x86.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -135,1 +135,1 @@\n-    \/\/ Don't clear excption on startup, JVM should fail initialization.\n+    \/\/ Don't clear exception on startup, JVM should fail initialization.\n","filename":"src\/hotspot\/share\/jfr\/dcmd\/jfrDcmds.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n- * KrbCryptoExceptoin is a wrapper exception for exceptions thrown by JCE.\n+ * KrbCryptoException is a wrapper exception for exceptions thrown by JCE.\n@@ -42,1 +42,1 @@\n-    public KrbCryptoException (String s) {\n+    public KrbCryptoException(String s) {\n","filename":"src\/java.security.jgss\/share\/classes\/sun\/security\/krb5\/KrbCryptoException.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -284,1 +284,1 @@\n-                log3(\"Unexpected excption while getting ObjectReference for monitors\");\n+                log3(\"Unexpected exception while getting ObjectReference for monitors\");\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ThreadReference\/ownedMonitors\/ownedmonitors001.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -270,1 +270,1 @@\n-        \/\/ get excepion objectID value for static field\n+        \/\/ get exception objectID value for static field\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdwp\/Event\/EXCEPTION\/exception001.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,1 @@\n- * @summary Test schemaFactory.newSchema doesn't throw NullPointerExceptio for empty schema.\n+ * @summary Test schemaFactory.newSchema doesn't throw NullPointerException for empty schema.\n","filename":"test\/jaxp\/javax\/xml\/jaxp\/unittest\/validation\/Bug4987574.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,1 +46,1 @@\n-     * Validate that an SerialExcepion is thrown when the object specified\n+     * Validate that an SerialException is thrown when the object specified\n","filename":"test\/jdk\/javax\/sql\/testng\/test\/rowset\/serial\/SerialJavaObjectTests.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}