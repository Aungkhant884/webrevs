{"files":[{"patch":"@@ -2126,0 +2126,2 @@\n+        double startX = 0.0;\n+        double startY = 0.0;\n@@ -2134,2 +2136,2 @@\n-                    endX = coords[0];\n-                    endY = coords[1];\n+                    startX = endX = coords[0];\n+                    startY = endY = coords[1];\n@@ -2150,0 +2152,3 @@\n+                    endX = startX;\n+                    endY = startY;\n+                    break;\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/geom\/Path2D.java","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -52,0 +52,1 @@\n+import java.util.Random;\n@@ -92,1 +93,4 @@\n-    public static void init() {\n+    Random random;\n+\n+    public UnitTest(long randomSeed) {\n+        this.random = new Random(randomSeed);\n@@ -159,1 +163,1 @@\n-                t = (int) (Math.random() * 5);\n+                t = (int) (random.nextDouble() * 5);\n@@ -193,1 +197,1 @@\n-    public static GeneralPath makeGeneralPath(int windingrule, double sign) {\n+    public GeneralPath makeGeneralPath(int windingrule, double sign) {\n@@ -230,2 +234,2 @@\n-    public static double rpc() {\n-        return (Math.random() * 100.0) + 10.0;\n+    public double rpc() {\n+        return (random.nextDouble() * 100.0) + 10.0;\n@@ -236,2 +240,2 @@\n-    public static double rnc() {\n-        return (Math.random() * 100.0) - 200.0;\n+    public double rnc() {\n+        return (random.nextDouble() * 100.0) - 200.0;\n@@ -241,2 +245,2 @@\n-    public static double rd() {\n-        return (Math.random() * 40.0) + 20.0;\n+    public double rd() {\n+        return (random.nextDouble() * 40.0) + 20.0;\n@@ -246,2 +250,2 @@\n-    public static double ra() {\n-        return (Math.random() * 5.0) + 0.1;\n+    public double ra() {\n+        return (random.nextDouble() * 5.0) + 0.1;\n@@ -251,2 +255,2 @@\n-    public static double rt() {\n-        return (Math.random() * Math.PI) + Math.PI\/4;\n+    public double rt() {\n+        return (random.nextDouble() * Math.PI) + Math.PI\/4;\n@@ -1002,1 +1006,1 @@\n-    public static void checkHits(Shape stest, Shape sref) {\n+    public void checkHits(Shape stest, Shape sref) {\n@@ -1004,2 +1008,2 @@\n-            double px = Math.random() * 500 - 250;\n-            double py = Math.random() * 500 - 250;\n+            double px = random.nextDouble() * 500 - 250;\n+            double py = random.nextDouble() * 500 - 250;\n@@ -1008,2 +1012,2 @@\n-            double rw = Math.random()*10+0.4;\n-            double rh = Math.random()*10+0.4;\n+            double rw = random.nextDouble()*10+0.4;\n+            double rh = random.nextDouble()*10+0.4;\n@@ -1171,1 +1175,1 @@\n-    public static void test(Creator c) {\n+    public void test(Creator c) {\n@@ -1405,1 +1409,1 @@\n-    public static void testHits(Creator c) {\n+    public void testHits(Creator c) {\n@@ -1419,1 +1423,1 @@\n-    public static void testHits(Creator c, SampleShape ref) {\n+    public void testHits(Creator c, SampleShape ref) {\n@@ -1428,1 +1432,11 @@\n-        int limit = (argv.length > 0) ? 10000 : 1;\n+        \/\/ as specific failures come up we can add them to this array to make sure they're frequently tested:\n+        long[] previousBugSeeds = new long[] {\n+\n+            \/\/ these are all failures related to JDK-8176501\n+            4603421469924484958L,\n+            4596019360892069260L,\n+            4604586530476373958L,\n+            4603766396818608126L\n+\n+        };\n+\n@@ -1430,0 +1444,6 @@\n+\n+        for (long seed : previousBugSeeds) {\n+            test(\"\", seed);\n+        }\n+\n+        int limit = (argv.length > 0) ? 10000 : 1;\n@@ -1431,7 +1451,2 @@\n-            if (limit > 1) {\n-                System.out.println(\"loop #\"+(i+1));\n-            }\n-            init();\n-            test(new GPCreator());\n-            test(new FltCreator());\n-            test(new DblCreator());\n+            long seed = Double.doubleToLongBits(Math.random());\n+            test(\"loop #\" + (i + 1), seed);\n@@ -1440,0 +1455,12 @@\n+\n+    private static void test(String logPrefix, long seed) {\n+        String msg = \"seed = \" + seed;\n+        if (!logPrefix.isEmpty())\n+            msg = logPrefix + \", \" + msg;\n+        System.out.println(msg);\n+\n+        UnitTest t = new UnitTest(seed);\n+        t.test(new GPCreator());\n+        t.test(new FltCreator());\n+        t.test(new DblCreator());\n+    }\n","filename":"test\/jdk\/java\/awt\/geom\/Path2D\/UnitTest.java","additions":56,"deletions":29,"binary":false,"changes":85,"status":"modified"}]}