{"files":[{"patch":"@@ -1367,2 +1367,1 @@\n-\n-            sym.owner.appendUniqueTypeAttributes(newattrs.toList());\n+            appendTypeAnnotationsToOwner(sym, newattrs.toList());\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/TypeAnnotations.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 8198945 8207018\n+ * @bug 8198945 8207018 8207017\n@@ -97,0 +97,10 @@\n+    \/\/ intance initializer\n+    {\n+        new @TA(5) Object() {};\n+    }\n+\n+    \/\/ static initializer\n+    static {\n+        new @TA(6) Object() {};\n+    }\n+\n@@ -102,0 +112,1 @@\n+        testInstanceAndClassInit();\n@@ -168,0 +179,15 @@\n+    static void testInstanceAndClassInit() throws Exception {\n+        ClassFile cf = ClassFile.read(Paths.get(ToolBox.testClasses, \"AnonymousClassTest.class\"));\n+        Method method = findMethod(cf, \"<init>\");\n+        Set<TypeAnnotation> annotations = getRuntimeVisibleTypeAnnotations(method);\n+        assertEquals(\n+                Set.of(\"@LAnonymousClassTest$TA;(5) NEW, offset=4, location=[INNER_TYPE]\"),\n+                annotations.stream().map(a -> annotationDebugString(cf, a)).collect(toSet()) );\n+\n+        method = findMethod(cf, \"<clinit>\");\n+        annotations = getRuntimeVisibleTypeAnnotations(method);\n+        assertEquals(\n+                Set.of(\"@LAnonymousClassTest$TA;(6) NEW, offset=0, location=[INNER_TYPE]\"),\n+                annotations.stream().map(a -> annotationDebugString(cf, a)).collect(toSet()) );\n+    }\n+\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/classfile\/AnonymousClassTest.java","additions":27,"deletions":1,"binary":false,"changes":28,"status":"modified"}]}