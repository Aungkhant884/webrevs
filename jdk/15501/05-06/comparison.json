{"files":[{"patch":"@@ -894,7 +894,2 @@\n-        } catch (UnixException x) {\n-            x.rethrowAsIOException(source);\n-        }\n-\n-        if (sourceAttrs.isDirectory()) {\n-            \/\/ ensure source can be moved\n-            try {\n+            if (sourceAttrs.isDirectory()) {\n+                \/\/ ensure source can be moved\n@@ -902,2 +897,0 @@\n-            } catch (UnixException exc) {\n-                exc.rethrowAsIOException(source);\n@@ -905,0 +898,2 @@\n+        } catch (UnixException x) {\n+            x.rethrowAsIOException(source);\n","filename":"src\/java.base\/unix\/classes\/sun\/nio\/fs\/UnixFileSystem.java","additions":4,"deletions":9,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+import java.io.UncheckedIOException;\n@@ -49,0 +50,1 @@\n+import org.junit.jupiter.api.condition.EnabledIf;\n@@ -68,0 +70,24 @@\n+    private static final boolean SUPPORTS_POSIX_PERMISSIONS;\n+\n+    static {\n+        Path tmp = null;\n+        try {\n+            tmp = Files.createTempFile(\"this\", \"that\");\n+            SUPPORTS_POSIX_PERMISSIONS =\n+                Files.getFileStore(tmp).supportsFileAttributeView(\"posix\");\n+        } catch (IOException cause) {\n+            throw new UncheckedIOException(cause);\n+        } finally {\n+            if (tmp != null) {\n+                try {\n+                    Files.delete(tmp);\n+                } catch (IOException ignore)  {\n+                }\n+            }\n+        }\n+    }\n+\n+    private static boolean supportsPosixPermissions() {\n+        return SUPPORTS_POSIX_PERMISSIONS;\n+    }\n+\n@@ -90,0 +116,1 @@\n+    @EnabledIf(\"supportsPosixPermissions\")\n@@ -97,0 +124,1 @@\n+    @EnabledIf(\"supportsPosixPermissions\")\n@@ -104,0 +132,1 @@\n+    @EnabledIf(\"supportsPosixPermissions\")\n@@ -129,8 +158,6 @@\n-            if (Files.getFileStore(source).supportsFileAttributeView(\"posix\")) {\n-                Set<PosixFilePermission> perms =\n-                    PosixFilePermissions.fromString(mode);\n-                if (op == OpType.COPY && type == PathType.LINK && followLinks)\n-                    Files.setPosixFilePermissions(linkTarget, perms);\n-                else\n-                    Files.setPosixFilePermissions(source, perms);\n-            }\n+            Set<PosixFilePermission> perms =\n+                PosixFilePermissions.fromString(mode);\n+            if (op == OpType.COPY && type == PathType.LINK && followLinks)\n+                Files.setPosixFilePermissions(linkTarget, perms);\n+            else\n+                Files.setPosixFilePermissions(source, perms);\n","filename":"test\/jdk\/java\/nio\/file\/Files\/CopyMoveVariations.java","additions":35,"deletions":8,"binary":false,"changes":43,"status":"modified"}]}