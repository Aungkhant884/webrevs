{"files":[{"patch":"@@ -918,2 +918,6 @@\n-                \/\/ Ensure source can be read\n-                provider.checkAccess(source, AccessMode.READ);\n+                \/\/ Ensure source can be moved\n+                try {\n+                    access(source, W_OK);\n+                } catch (UnixException exc) {\n+                    exc.rethrowAsIOException(source);\n+                }\n","filename":"src\/java.base\/unix\/classes\/sun\/nio\/fs\/UnixFileSystem.java","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -394,0 +394,21 @@\n+        \/**\n+         * Test: ensure target not deleted if source permissions are zero\n+         *\/\n+        source = createSourceFile(dir1);\n+        if (getFileStore(source).supportsFileAttributeView(\"posix\")) {\n+            Files.setPosixFilePermissions(source, Set.of());\n+            target = getTargetFile(dir2);\n+            createFile(target);\n+            try {\n+                Files.move(source, target, REPLACE_EXISTING);\n+                throw new RuntimeException(\"AccessDeniedException not thrown\");\n+            } catch (AccessDeniedException expected) {\n+                if (!Files.exists(source))\n+                    throw new RuntimeException(\"source deleted\");\n+            }\n+            if (!Files.exists(target))\n+                throw new RuntimeException(\"target deleted\");\n+            delete(target);\n+        }\n+        delete(source);\n+\n","filename":"test\/jdk\/java\/nio\/file\/Files\/CopyAndMove.java","additions":21,"deletions":0,"binary":false,"changes":21,"status":"modified"}]}