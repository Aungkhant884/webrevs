{"files":[{"patch":"@@ -523,17 +523,5 @@\n-     * <p> If {@code more} does not specify any {@code Path}s,\n-     * then the result is {@link #resolve(Path) resolve(first)}. If\n-     * {@code more} specifies one or more {@code Path}s, then {@code first}\n-     * is resolved against this path and then the additional paths in\n-     * {@code more} are iteratively resolved.\n-     *\n-     * If {@code first} and {@code more} specify only empty paths, then this\n-     * method returns this path. If any of the paths in {@code first} and\n-     * {@code more} is absolute, then the result will be as if the paths\n-     * after the last absolute path in the sequence were resolved iteratively\n-     * against that last absolute path.\n-     *\n-     * <p> The result of this method is the same as would be obtained\n-     * by resolving the first parameter path against this path, and then\n-     * repeating the same procedure for each path in the sequence. Each\n-     * single resolution in the chain behaves as specified by {@link\n-     * #resolve(Path) resolve}.\n+     * <p> This method resolves {@code first} against this {@code Path} as if\n+     * by calling {@link #resolve(Path)}. If {@code more} has one or more\n+     * elements then it resolves the first element against the result, then\n+     * iteratively resolves all subsequent elements. This method returns the\n+     * result from the final resolve.\n@@ -542,1 +530,1 @@\n-     * The default implementation is equivalent for this path to:\n+     * The default implementation is equivalent to the result obtained with:\n@@ -544,4 +532,4 @@\n-     * Path result = resolve(first);\n-     * for (Path p : more) {\n-     *     result = result.resolve(p);\n-     * }\n+     *     Path result = resolve(first);\n+     *     for (Path p : more) {\n+     *         result = result.resolve(p);\n+     *     }\n@@ -552,1 +540,0 @@\n-     *\n@@ -554,1 +541,1 @@\n-     *          additional paths to be iteratively resolved\n+     *          additional paths to iteratively resolve\n@@ -559,1 +546,0 @@\n-     *\n@@ -571,17 +557,10 @@\n-     * Converts a path string to a path, resolves it against this path, and\n-     * then iteratively converts and resolves any additional path strings.\n-     *\n-     * <p> If {@code more} does not\n-     * specify any path strings, then the result is {@link #resolve(String)\n-     * resolve(first)}. If {@code more} specifies one or more path strings,\n-     * then {@code first} is converted to a {@code Path}, resolved against\n-     * this path, and then the additional path strings in {@code more} are\n-     * iteratively converted to {@code Path}s and resolved. Path strings which\n-     * convert to empty or absolute paths are handled as specified by\n-     * {@link #resolve(Path,Path...)}.\n-     *\n-     * <p> The result of this method is the same as would be obtained by\n-     * resolving the path converted from the first path string against\n-     * this path, and then repeating the same procedure for each path\n-     * string in the sequence. Each single resolution in the chain\n-     * behaves as specified by {@link #resolve(String) resolve}.\n+     * Converts a path string to a path, resolves that path against this path,\n+     * and then iteratively performs the same procedure for any additional\n+     * path strings.\n+     *\n+     * <p> This method converts {@code first} to a {@code Path} and resolves\n+     * that {@code Path} against this {@code Path} as if by calling\n+     * {@link #resolve(String)}. If {@code more} has one or more elements\n+     * then it converts the first element to a path, resolves that path against\n+     * the result, then iteratively converts and resolves all subsequent\n+     * elements. This method returns the result from the final resolve.\n@@ -590,1 +569,1 @@\n-     * The default implementation is equivalent for this path to:\n+     * The default implementation is equivalent to the result obtained with:\n","filename":"src\/java.base\/share\/classes\/java\/nio\/file\/Path.java","additions":22,"deletions":43,"binary":false,"changes":65,"status":"modified"}]}