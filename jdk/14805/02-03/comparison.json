{"files":[{"patch":"@@ -520,1 +520,12 @@\n-     * Resolves a path, or a sequence of paths against this path.\n+     * Resolves one or more {@code Path}s iteratively against this\n+     * {@code Path}. If {@code more} does not specify any {@code Path}s,\n+     * then the result is {@link #resolve(Path) resolve(first)}. If\n+     * {@code more} specifies one or more {@code Path}s, then each non-empty\n+     * {@code Path}, including {@code first}, is resolved iteratively against\n+     * this {@code Path}.\n+     *\n+     * If {@code first} and {@code more} specify only empty paths, then this\n+     * method returns this path. If any of the paths in {@code first} and\n+     * {@code more} is absolute, then the result will be as if the paths\n+     * after the last absolute path in the sequence were resolved iteratively\n+     * against that last absolute path.\n@@ -539,1 +550,1 @@\n-     * @param more additional paths to be joined to form the path\n+     * @param more additional paths to be iteratively resolved against this path\n@@ -556,2 +567,8 @@\n-     * Resolves the path or paths converted from a path string, or a\n-     * sequence of path strings, against this path.\n+     * Resolves one or more {@code Path}s converted from the supplied path\n+     * srings iteratively against this {@code Path}. If {@code more} does not\n+     * specify any path strings, then the result is {@link #resolve(String)\n+     * resolve(first)}. If {@code more} specifies one or more path strings,\n+     * then each non-empty path string, including {@code first}, is iteratively\n+     * converted to a {@code Path} and resolved against this {@code Path}.\n+     * Path strings which convert to empty or absolute paths are handled as\n+     * specified by {@link #resolve(Path,Path...)}.\n@@ -574,1 +591,2 @@\n-     * @param first the first path string to resolve against this path\n+     * @param first the first path string to convert to a path and\n+     *        resolve against this path\n@@ -576,1 +594,2 @@\n-     * @param more additional path strings to be joined to form the path\n+     * @param more additional path strings to be iteratively converted to\n+     *        paths and resolved against this path\n","filename":"src\/java.base\/share\/classes\/java\/nio\/file\/Path.java","additions":25,"deletions":6,"binary":false,"changes":31,"status":"modified"}]}