{"files":[{"patch":"@@ -122,3 +122,9 @@\n-        \/\/ The following 3 tests are not essential for the resolution of JDK-8264999, but IMO they raise some\n-        \/\/ interesting questions about what the expected behavior is. (My apologies if the expected behavior\n-        \/\/ is specified somewhere: I'm not sure where that is?)\n+        \/\/ This test reaches the line in Stroker.java where we detect a change of (+0, +0)\n+        \/\/ and manually change the dx:\n+        \/\/ dx = 1.0d;\n+\n+\/\/        tests.add(new Test(\"Redundant lineTo after moveTo\",\n+\/\/                \"m 0 0 [l 0 0] l 10 10\",\n+\/\/                \"This creates a diagonal line that may include a redundant lineTo after the moveTo\"));\n+\n+        \/\/ This test does NOT reach the same \"dx = 1.0d\" line. I'm not sure what the expected behavior here is.\n@@ -127,1 +133,1 @@\n-\/\/                \"m 19 180 z [l 19 180]\",\n+\/\/                \"m 0 0 z [l 10 10]\",\n@@ -129,1 +135,4 @@\n-\/\/\n+\n+        \/\/ The following 2 tests fail because the mitered stroke covers different ares.\n+        \/\/ They might (?) be working as expected, and I just don't understand the expected behavior?\n+\n@@ -138,1 +147,0 @@\n-\n@@ -145,1 +153,1 @@\n-\n+\/\/\n@@ -149,1 +157,1 @@\n-\n+\/\/\n@@ -153,1 +161,1 @@\n-\n+\/\/\n","filename":"test\/jdk\/sun\/java2d\/marlin\/JoinMiterRedundantLineSegmentsTest.java","additions":17,"deletions":9,"binary":false,"changes":26,"status":"modified"}]}