{"files":[{"patch":"@@ -231,5 +231,12 @@\n-        while (processed > MAX_LEN) {\n-            src.get(in, 0, MAX_LEN);\n-            encrypt(in, 0, MAX_LEN, in, 0);\n-            dst.put(in, 0, MAX_LEN);\n-            processed -= MAX_LEN;\n+        try {\n+            while (processed > MAX_LEN) {\n+                src.get(in, 0, MAX_LEN);\n+                encrypt(in, 0, MAX_LEN, in, 0);\n+                dst.put(in, 0, MAX_LEN);\n+                processed -= MAX_LEN;\n+            }\n+            src.get(in, 0, processed);\n+            encrypt(in, 0, processed, in, 0);\n+            dst.put(in, 0, processed);\n+        } finally {\n+            Arrays.fill(in, (byte)0);\n@@ -237,3 +244,0 @@\n-        src.get(in, 0, processed);\n-        encrypt(in, 0, processed, in, 0);\n-        dst.put(in, 0, processed);\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/GCTR.java","additions":12,"deletions":8,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -1014,0 +1014,1 @@\n+            dst.clear().put(new byte[dst.capacity()]);\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/GaloisCounterMode.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+import java.util.Arrays;\n@@ -788,0 +789,1 @@\n+                    Arrays.fill(outArray, (byte)0);\n@@ -801,0 +803,1 @@\n+                    Arrays.fill(outArray, (byte)0);\n@@ -812,4 +815,18 @@\n-            do {\n-                int chunk = Math.min(inLen, tempIn.length);\n-                if (chunk > 0) {\n-                    input.get(tempIn, 0, chunk);\n+            try {\n+                do {\n+                    int chunk = Math.min(inLen, tempIn.length);\n+                    if (chunk > 0) {\n+                        input.get(tempIn, 0, chunk);\n+                    }\n+                    int n;\n+                    if (isUpdate || (inLen > chunk)) {\n+                        n = engineUpdate(tempIn, 0, chunk, tempOut, outOfs);\n+                    } else {\n+                        n = engineDoFinal(tempIn, 0, chunk, tempOut, outOfs);\n+                    }\n+                    outOfs += n;\n+                    total += n;\n+                    inLen -= chunk;\n+                } while (inLen > 0);\n+                if (total > 0) {\n+                    output.put(tempOut, 0, total);\n@@ -817,12 +834,3 @@\n-                int n;\n-                if (isUpdate || (inLen > chunk)) {\n-                    n = engineUpdate(tempIn, 0, chunk, tempOut, outOfs);\n-                } else {\n-                    n = engineDoFinal(tempIn, 0, chunk, tempOut, outOfs);\n-                }\n-                outOfs += n;\n-                total += n;\n-                inLen -= chunk;\n-            } while (inLen > 0);\n-            if (total > 0) {\n-                output.put(tempOut, 0, total);\n+            } finally {\n+                Arrays.fill(tempOut, (byte) 0);\n+                Arrays.fill(tempIn, (byte) 0);\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/CipherSpi.java","additions":24,"deletions":16,"binary":false,"changes":40,"status":"modified"}]}