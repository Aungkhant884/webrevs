{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,0 +27,2 @@\n+import org.openjdk.jmh.annotations.Fork;\n+import org.openjdk.jmh.annotations.Measurement;\n@@ -31,0 +33,1 @@\n+import org.openjdk.jmh.annotations.Warmup;\n@@ -41,0 +44,3 @@\n+@Warmup(iterations = 4, time = 2)\n+@Measurement(iterations = 4, time = 2)\n+@Fork(value = 3)\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/util\/ArraysEquals.java","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,0 +27,1 @@\n+import org.openjdk.jmh.annotations.Fork;\n@@ -42,0 +43,3 @@\n+@Warmup(iterations = 4, time = 2)\n+@Measurement(iterations = 4, time = 2)\n+@Fork(value = 3)\n@@ -68,2 +72,0 @@\n-    @Warmup(iterations = 3)\n-    @Measurement(iterations = 3)\n@@ -75,2 +77,0 @@\n-    @Warmup(iterations = 3)\n-    @Measurement(iterations = 3)\n@@ -82,2 +82,0 @@\n-    @Warmup(iterations = 3)\n-    @Measurement(iterations = 3)\n@@ -89,2 +87,0 @@\n-    @Warmup(iterations = 3)\n-    @Measurement(iterations = 3)\n@@ -96,2 +92,0 @@\n-    @Warmup(iterations = 3)\n-    @Measurement(iterations = 3)\n@@ -103,2 +97,0 @@\n-    @Warmup(iterations = 3)\n-    @Measurement(iterations = 3)\n@@ -110,2 +102,0 @@\n-    @Warmup(iterations = 3)\n-    @Measurement(iterations = 3)\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/util\/ArraysFill.java","additions":5,"deletions":15,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,0 +36,1 @@\n+import org.openjdk.jmh.annotations.Fork;\n@@ -48,0 +49,3 @@\n+@Warmup(iterations = 4, time = 2)\n+@Measurement(iterations = 4, time = 2)\n+@Fork(value = 3)\n@@ -93,2 +97,0 @@\n-        @Warmup(iterations = 3)\n-        @Measurement(iterations = 3)\n@@ -100,2 +102,0 @@\n-        @Warmup(iterations = 3)\n-        @Measurement(iterations = 3)\n@@ -107,2 +107,0 @@\n-        @Warmup(iterations = 3)\n-        @Measurement(iterations = 3)\n@@ -114,2 +112,0 @@\n-        @Warmup(iterations = 3)\n-        @Measurement(iterations = 3)\n@@ -121,2 +117,0 @@\n-        @Warmup(iterations = 3)\n-        @Measurement(iterations = 3)\n@@ -149,2 +143,0 @@\n-        @Warmup(iterations = 3)\n-        @Measurement(iterations = 3)\n@@ -156,2 +148,0 @@\n-        @Warmup(iterations = 3)\n-        @Measurement(iterations = 3)\n@@ -163,2 +153,0 @@\n-        @Warmup(iterations = 3)\n-        @Measurement(iterations = 3)\n@@ -170,2 +158,0 @@\n-        @Warmup(iterations = 3)\n-        @Measurement(iterations = 3)\n@@ -177,2 +163,0 @@\n-        @Warmup(iterations = 3)\n-        @Measurement(iterations = 3)\n@@ -205,2 +189,0 @@\n-        @Warmup(iterations = 3)\n-        @Measurement(iterations = 3)\n@@ -212,2 +194,0 @@\n-        @Warmup(iterations = 3)\n-        @Measurement(iterations = 3)\n@@ -219,2 +199,0 @@\n-        @Warmup(iterations = 3)\n-        @Measurement(iterations = 3)\n@@ -226,2 +204,0 @@\n-        @Warmup(iterations = 3)\n-        @Measurement(iterations = 3)\n@@ -233,2 +209,0 @@\n-        @Warmup(iterations = 3)\n-        @Measurement(iterations = 3)\n@@ -261,2 +235,0 @@\n-        @Warmup(iterations = 3)\n-        @Measurement(iterations = 3)\n@@ -268,2 +240,0 @@\n-        @Warmup(iterations = 3)\n-        @Measurement(iterations = 3)\n@@ -275,2 +245,0 @@\n-        @Warmup(iterations = 3)\n-        @Measurement(iterations = 3)\n@@ -282,2 +250,0 @@\n-        @Warmup(iterations = 3)\n-        @Measurement(iterations = 3)\n@@ -289,2 +255,0 @@\n-        @Warmup(iterations = 3)\n-        @Measurement(iterations = 3)\n@@ -317,2 +281,0 @@\n-        @Warmup(iterations = 3)\n-        @Measurement(iterations = 3)\n@@ -324,2 +286,0 @@\n-        @Warmup(iterations = 3)\n-        @Measurement(iterations = 3)\n@@ -331,2 +291,0 @@\n-        @Warmup(iterations = 3)\n-        @Measurement(iterations = 3)\n@@ -338,2 +296,0 @@\n-        @Warmup(iterations = 3)\n-        @Measurement(iterations = 3)\n@@ -345,2 +301,0 @@\n-        @Warmup(iterations = 3)\n-        @Measurement(iterations = 3)\n@@ -373,2 +327,0 @@\n-        @Warmup(iterations = 3)\n-        @Measurement(iterations = 3)\n@@ -380,2 +332,0 @@\n-        @Warmup(iterations = 3)\n-        @Measurement(iterations = 3)\n@@ -387,2 +337,0 @@\n-        @Warmup(iterations = 3)\n-        @Measurement(iterations = 3)\n@@ -394,2 +342,0 @@\n-        @Warmup(iterations = 3)\n-        @Measurement(iterations = 3)\n@@ -401,2 +347,0 @@\n-        @Warmup(iterations = 3)\n-        @Measurement(iterations = 3)\n@@ -429,2 +373,0 @@\n-        @Warmup(iterations = 3)\n-        @Measurement(iterations = 3)\n@@ -436,2 +378,0 @@\n-        @Warmup(iterations = 3)\n-        @Measurement(iterations = 3)\n@@ -443,2 +383,0 @@\n-        @Warmup(iterations = 3)\n-        @Measurement(iterations = 3)\n@@ -450,2 +388,0 @@\n-        @Warmup(iterations = 3)\n-        @Measurement(iterations = 3)\n@@ -457,2 +393,0 @@\n-        @Warmup(iterations = 3)\n-        @Measurement(iterations = 3)\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/util\/ArraysMismatch.java","additions":5,"deletions":71,"binary":false,"changes":76,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,1 @@\n+import org.openjdk.jmh.annotations.Fork;\n@@ -41,0 +42,3 @@\n+@Warmup(iterations = 4, time = 2)\n+@Measurement(iterations = 4, time = 2)\n+@Fork(value = 3)\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/util\/ArraysMismatchPartialInlining.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -37,0 +37,3 @@\n+@Warmup(iterations = 4, time = 2)\n+@Measurement(iterations = 4, time = 2)\n+@Fork(value = 3)\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/util\/Base64Decode.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -37,0 +37,3 @@\n+@Warmup(iterations = 4, time = 2)\n+@Measurement(iterations = 4, time = 2)\n+@Fork(value = 3)\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/util\/Base64Encode.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle America, Inc.\n+ * Copyright (c) 2020, 2022, Oracle America, Inc.\n@@ -47,1 +47,0 @@\n-            System.out.println(\"Do Trial Setup\");\n@@ -88,0 +87,3 @@\n+    @Warmup(iterations = 4, time = 2)\n+    @Measurement(iterations = 4, time = 2)\n+    @Fork(value = 3)\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/util\/Base64VarLenDecode.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,0 +27,2 @@\n+import org.openjdk.jmh.annotations.Fork;\n+import org.openjdk.jmh.annotations.Measurement;\n@@ -31,0 +33,1 @@\n+import org.openjdk.jmh.annotations.Warmup;\n@@ -38,0 +41,3 @@\n+@Warmup(iterations = 4, time = 2)\n+@Measurement(iterations = 4, time = 2)\n+@Fork(value = 3)\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/util\/Dates.java","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,0 +27,2 @@\n+import org.openjdk.jmh.annotations.Fork;\n+import org.openjdk.jmh.annotations.Measurement;\n@@ -32,0 +34,1 @@\n+import org.openjdk.jmh.annotations.Warmup;\n@@ -40,0 +43,3 @@\n+@Warmup(iterations = 4, time = 2)\n+@Measurement(iterations = 4, time = 2)\n+@Fork(value = 3)\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/util\/GregorianCalendars.java","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -28,0 +28,2 @@\n+import org.openjdk.jmh.annotations.Fork;\n+import org.openjdk.jmh.annotations.Measurement;\n@@ -34,0 +36,1 @@\n+import org.openjdk.jmh.annotations.Warmup;\n@@ -48,0 +51,3 @@\n+@Warmup(iterations = 4, time = 2)\n+@Measurement(iterations = 4, time = 2)\n+@Fork(value = 3)\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/util\/HashMapBench.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,0 +27,2 @@\n+import org.openjdk.jmh.annotations.Fork;\n+import org.openjdk.jmh.annotations.Measurement;\n@@ -31,0 +33,1 @@\n+import org.openjdk.jmh.annotations.Warmup;\n@@ -41,0 +44,3 @@\n+@Warmup(iterations = 4, time = 2)\n+@Measurement(iterations = 4, time = 2)\n+@Fork(value = 3)\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/util\/LocaleDefaults.java","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,0 +27,2 @@\n+import org.openjdk.jmh.annotations.Fork;\n+import org.openjdk.jmh.annotations.Measurement;\n@@ -33,0 +35,2 @@\n+import org.openjdk.jmh.annotations.Warmup;\n+\n@@ -43,0 +47,3 @@\n+@Warmup(iterations = 4, time = 2)\n+@Measurement(iterations = 4, time = 2)\n+@Fork(value = 3)\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/util\/RandomGeneratorNext.java","additions":8,"deletions":1,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,0 +27,2 @@\n+import org.openjdk.jmh.annotations.Fork;\n+import org.openjdk.jmh.annotations.Measurement;\n@@ -32,0 +34,1 @@\n+import org.openjdk.jmh.annotations.Warmup;\n@@ -42,0 +45,3 @@\n+@Warmup(iterations = 4, time = 2)\n+@Measurement(iterations = 4, time = 2)\n+@Fork(value = 3)\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/util\/RandomNext.java","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,1 @@\n-    @Param({\"64\", \"128\", \"256\", \"512\", \"1024\", \"2048\", \"4096\", \"8192\", \"16384\", \"32768\", \"65536\"})\n+    @Param({\"64\", \"128\", \"256\", \"512\", \/* \"1024\", *\/ \"2048\", \/* \"4096\", \"8192\", *\/ \"16384\", \/* \"32768\", *\/ \"65536\"})\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/util\/TestAdler32.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,2 +33,3 @@\n-@Fork(value = 2)\n-\n+@Warmup(iterations = 4, time = 2)\n+@Measurement(iterations = 4, time = 2)\n+@Fork(value = 3)\n@@ -41,1 +42,1 @@\n-    @Param({\"64\", \"128\", \"256\", \"512\", \"1024\", \"2048\", \"4096\", \"8192\", \"16384\", \"32768\", \"65536\"})\n+    @Param({\"64\", \"128\", \"256\", \"512\", \/* \"1024\", *\/ \"2048\", \/* \"4096\", \"8192\", *\/ \"16384\", \/* \"32768\", *\/ \"65536\"})\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/util\/TestCRC32C.java","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,0 +27,2 @@\n+import org.openjdk.jmh.annotations.Fork;\n+import org.openjdk.jmh.annotations.Measurement;\n@@ -33,0 +35,1 @@\n+import org.openjdk.jmh.annotations.Warmup;\n@@ -47,0 +50,3 @@\n+@Warmup(iterations = 4, time = 2)\n+@Measurement(iterations = 4, time = 2)\n+@Fork(value = 3)\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/util\/ZipFind.java","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"}]}