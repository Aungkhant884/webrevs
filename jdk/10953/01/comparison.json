{"files":[{"patch":"@@ -1,1 +1,1 @@\n-## libpng v1.6.37\n+## libpng v1.6.38\n@@ -12,5 +12,5 @@\n- * Copyright (c) 1995-2019 The PNG Reference Library Authors.\n- * Copyright (c) 2018-2019 Cosmin Truta.\n- * Copyright (c) 2000-2002, 2004, 2006-2018 Glenn Randers-Pehrson.\n- * Copyright (c) 1996-1997 Andreas Dilger.\n- * Copyright (c) 1995-1996 Guy Eric Schalnat, Group 42, Inc.\n+Copyright (c) 1995-2022 The PNG Reference Library Authors.\n+Copyright (c) 2018-2022 Cosmin Truta\n+Copyright (c) 1998-2018 Glenn Randers-Pehrson\n+Copyright (c) 1996-1997 Andreas Dilger\n+Copyright (c) 1995-1996 Guy Eric Schalnat, Group 42, Inc.\n@@ -141,0 +141,9 @@\n+TRADEMARK\n+=========\n+\n+The name \"libpng\" has not been registered by the Copyright owners\n+as a trademark in any jurisdiction.  However, because libpng has\n+been distributed and maintained world-wide, continually since 1995,\n+the Copyright owners claim \"common-law trademark protection\" in any\n+jurisdiction where common-law trademark is recognized.\n+\n@@ -142,0 +151,53 @@\n+\n+### AUTHORS File Information\n+```\n+PNG REFERENCE LIBRARY AUTHORS\n+=============================\n+\n+This is the list of PNG Reference Library (\"libpng\") Contributing\n+Authors, for copyright and licensing purposes.\n+\n+ * Andreas Dilger\n+ * Cosmin Truta\n+ * Dave Martindale\n+ * Eric S. Raymond\n+ * Gilles Vollant\n+ * Glenn Randers-Pehrson\n+ * Greg Roelofs\n+ * Guy Eric Schalnat\n+ * James Yu\n+ * John Bowler\n+ * Kevin Bracey\n+ * Magnus Holmgren\n+ * Mandar Sahastrabuddhe\n+ * Mans Rullgard\n+ * Matt Sarett\n+ * Mike Klein\n+ * Pascal Massimino\n+ * Paul Schmidt\n+ * Qiang Zhou\n+ * Sam Bushell\n+ * Samuel Williams\n+ * Simon-Pierre Cadieux\n+ * Tim Wegner\n+ * Tom Lane\n+ * Tom Tanner\n+ * Vadim Barkov\n+ * Willem van Schaik\n+ * Zhijie Liang\n+ * Arm Holdings\n+   - Richard Townsend\n+ * Google Inc.\n+   - Matt Sarett\n+   - Mike Klein\n+   - Dan Field\n+   - Sami Boukortt\n+\n+The build projects, the build scripts, the test scripts, and other\n+files in the \"ci\", \"projects\", \"scripts\" and \"tests\" directories, have\n+other copyright owners, but are released under the libpng license.\n+\n+Some files in the \"contrib\" directory, and some tools-generated files\n+that are distributed with libpng, have other copyright owners, and are\n+released under other open source licenses.\n+```\n","filename":"src\/java.desktop\/share\/legal\/libpng.md","additions":68,"deletions":6,"binary":false,"changes":74,"status":"modified"},{"patch":"@@ -2298,1 +2298,1 @@\n-  Reformated sources in libpng style (3-space intentation, comment format)\n+  Reformated sources in libpng style (3-space indentation, comment format)\n@@ -3889,1 +3889,1 @@\n-    current vesions of GCC. This eliminates those warnings by\n+    current versions of GCC. This eliminates those warnings by\n@@ -6106,0 +6106,6 @@\n+Version 1.6.38 [September 14, 2022]\n+  Added configurations and scripts for continuous integration.\n+  Fixed various errors in the handling of tRNS, hIST and eXIf.\n+  Implemented many stability improvements across all platforms.\n+  Updated the internal documentation.\n+\n","filename":"src\/java.desktop\/share\/native\/libsplashscreen\/libpng\/CHANGES","additions":8,"deletions":2,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -7,2 +7,2 @@\n- * Copyright (c) 1995-2019 The PNG Reference Library Authors.\n- * Copyright (c) 2018-2019 Cosmin Truta.\n+ * Copyright (c) 1995-2022 The PNG Reference Library Authors.\n+ * Copyright (c) 2018-2022 Cosmin Truta.\n","filename":"src\/java.desktop\/share\/native\/libsplashscreen\/libpng\/LICENSE","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1,2 +1,2 @@\n-README for libpng version 1.6.37 - April 14, 2019\n-=================================================\n+README for libpng version 1.6.38\n+================================\n@@ -8,2 +8,2 @@\n-libpng-*.tar.xz or if you want UNIX-style line endings in the text\n-files, or lpng*.7z or lpng*.zip if you want DOS-style line endings.\n+libpng-*.tar.xz if you want UNIX-style line endings in the text files,\n+or lpng*.7z or lpng*.zip if you want DOS-style line endings.\n","filename":"src\/java.desktop\/share\/native\/libsplashscreen\/libpng\/README","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -38,7 +38,18 @@\n-Use expand to remove tabs\n-expand ${f} > ${f}.tmp\n-mv ${f}.tmp $f\n-\n-Use sed to remove trailing white space\n-sed -e 's\/[ ]* $\/\/' ${f} > ${f}.tmp\n-mv ${f}.tmp $f\n+First cd into the libpng folder and run the following scripts.\n+\n+    Use expand to remove tabs\n+        for f in *.c *.h;\n+        do\n+        expand ${f} > ${f}.tmp;\n+        mv ${f}.tmp $f;\n+        done\n+\n+    Use sed to remove trailing white space\n+        for f in *.c *.h;\n+        do\n+        sed -e 's\/[ ]* $\/\/' ${f} > ${f}.tmp;\n+        mv ${f}.tmp $f;\n+        done\n+\n+Make sure all the updated files have UNIX-STYLE (LF) line endings to avoid\n+whitespace errors.\n","filename":"src\/java.desktop\/share\/native\/libsplashscreen\/libpng\/UPDATING.txt","additions":18,"deletions":7,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n- * Copyright (c) 2018-2019 Cosmin Truta\n+ * Copyright (c) 2018-2022 Cosmin Truta\n@@ -45,1 +45,1 @@\n-typedef png_libpng_version_1_6_37 Your_png_h_is_not_version_1_6_37;\n+typedef png_libpng_version_1_6_38 Your_png_h_is_not_version_1_6_38;\n@@ -751,1 +751,1 @@\n- * correspnding to the 2's complement representation.\n+ * corresponding to the 2's complement representation.\n@@ -846,2 +846,2 @@\n-      \"libpng version 1.6.37\" PNG_STRING_NEWLINE \\\n-      \"Copyright (c) 2018-2019 Cosmin Truta\" PNG_STRING_NEWLINE \\\n+      \"libpng version 1.6.38\" PNG_STRING_NEWLINE \\\n+      \"Copyright (c) 2018-2022 Cosmin Truta\" PNG_STRING_NEWLINE \\\n@@ -1874,1 +1874,1 @@\n-         char number[PNG_NUMBER_BUFFER_SIZE]; \/* +24 = 114*\/\n+         char number[PNG_NUMBER_BUFFER_SIZE]; \/* +24 = 114 *\/\n@@ -1879,1 +1879,1 @@\n-         pos = png_safecat(message, (sizeof message), pos, \"h: \"); \/*+2 = 116*\/\n+         pos = png_safecat(message, (sizeof message), pos, \"h: \"); \/* +2 = 116 *\/\n","filename":"src\/java.desktop\/share\/native\/libsplashscreen\/libpng\/png.c","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n- * libpng version 1.6.37 - April 14, 2019\n+ * libpng version 1.6.38 - September 14, 2022\n@@ -34,1 +34,1 @@\n- * Copyright (c) 2018-2019 Cosmin Truta\n+ * Copyright (c) 2018-2022 Cosmin Truta\n@@ -46,1 +46,1 @@\n- *   libpng versions 1.6.36, December 2018, through 1.6.37, April 2019:\n+ *   libpng versions 1.6.36, December 2018, through 1.6.38, September 2022:\n@@ -58,2 +58,2 @@\n- *  * Copyright (c) 1995-2019 The PNG Reference Library Authors.\n- *  * Copyright (c) 2018-2019 Cosmin Truta.\n+ *  * Copyright (c) 1995-2022 The PNG Reference Library Authors.\n+ *  * Copyright (c) 2018-2022 Cosmin Truta.\n@@ -270,1 +270,1 @@\n- *    1.6.37                  16    10637  16.so.16.37[.0]\n+ *    1.6.38                  16    10638  16.so.16.38[.0]\n@@ -309,2 +309,2 @@\n-#define PNG_LIBPNG_VER_STRING \"1.6.37\"\n-#define PNG_HEADER_VERSION_STRING \" libpng version 1.6.37 - April 14, 2019\\n\"\n+#define PNG_LIBPNG_VER_STRING \"1.6.38\"\n+#define PNG_HEADER_VERSION_STRING \" libpng version 1.6.38 - September 14, 2022\\n\"\n@@ -318,1 +318,1 @@\n-#define PNG_LIBPNG_VER_RELEASE 37\n+#define PNG_LIBPNG_VER_RELEASE 38\n@@ -349,1 +349,1 @@\n-#define PNG_LIBPNG_VER 10637 \/* 1.6.37 *\/\n+#define PNG_LIBPNG_VER 10638 \/* 1.6.38 *\/\n@@ -459,1 +459,1 @@\n-typedef char* png_libpng_version_1_6_37;\n+typedef char* png_libpng_version_1_6_38;\n@@ -1477,1 +1477,1 @@\n- * header file (zlib.h) for an explination of the compression functions.\n+ * header file (zlib.h) for an explanation of the compression functions.\n@@ -1532,1 +1532,1 @@\n- * for PNG images, and do considerably fewer caclulations.  In the future,\n+ * for PNG images, and do considerably fewer calculations.  In the future,\n","filename":"src\/java.desktop\/share\/native\/libsplashscreen\/libpng\/png.h","additions":13,"deletions":13,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n- * libpng version 1.6.37\n+ * libpng version 1.6.38\n@@ -34,1 +34,1 @@\n- * Copyright (c) 2018-2019 Cosmin Truta\n+ * Copyright (c) 2018-2022 Cosmin Truta\n@@ -211,2 +211,2 @@\n-#if defined(_Windows) || defined(_WINDOWS) || defined(WIN32) ||\\\n-    defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)\n+#if defined(_WIN32) || defined(__WIN32__) || defined(__NT__) || \\\n+    defined(__CYGWIN__)\n","filename":"src\/java.desktop\/share\/native\/libsplashscreen\/libpng\/pngconf.h","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -0,0 +1,1 @@\n+\n","filename":"src\/java.desktop\/share\/native\/libsplashscreen\/libpng\/pngdebug.h","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1182,1 +1182,1 @@\n-png_get_rgb_to_gray_status (png_const_structrp png_ptr)\n+png_get_rgb_to_gray_status(png_const_structrp png_ptr)\n@@ -1223,1 +1223,1 @@\n-png_get_user_width_max (png_const_structrp png_ptr)\n+png_get_user_width_max(png_const_structrp png_ptr)\n@@ -1229,1 +1229,1 @@\n-png_get_user_height_max (png_const_structrp png_ptr)\n+png_get_user_height_max(png_const_structrp png_ptr)\n@@ -1236,1 +1236,1 @@\n-png_get_chunk_cache_max (png_const_structrp png_ptr)\n+png_get_chunk_cache_max(png_const_structrp png_ptr)\n@@ -1243,1 +1243,1 @@\n-png_get_chunk_malloc_max (png_const_structrp png_ptr)\n+png_get_chunk_malloc_max(png_const_structrp png_ptr)\n@@ -1252,1 +1252,1 @@\n-png_get_io_state (png_const_structrp png_ptr)\n+png_get_io_state(png_const_structrp png_ptr)\n@@ -1258,1 +1258,1 @@\n-png_get_io_chunk_type (png_const_structrp png_ptr)\n+png_get_io_chunk_type(png_const_structrp png_ptr)\n","filename":"src\/java.desktop\/share\/native\/libsplashscreen\/libpng\/pngget.c","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n-\/* libpng version 1.6.37 *\/\n+\/* libpng version 1.6.38 *\/\n@@ -36,1 +36,1 @@\n-\/* Copyright (c) 2018-2019 Cosmin Truta *\/\n+\/* Copyright (c) 2018-2022 Cosmin Truta *\/\n","filename":"src\/java.desktop\/share\/native\/libsplashscreen\/libpng\/pnglibconf.h","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n- * Copyright (c) 2018-2019 Cosmin Truta\n+ * Copyright (c) 2018-2022 Cosmin Truta\n@@ -205,1 +205,1 @@\n-#        if !defined(__aarch64__)\n+#        if !defined(__aarch64__) && !defined(_M_ARM64)\n@@ -216,0 +216,2 @@\n+#else \/* PNG_ARM_NEON_OPT == 0 *\/\n+#     define PNG_ARM_NEON_IMPLEMENTATION 0\n@@ -294,0 +296,2 @@\n+#else\n+#  define PNG_MIPS_MSA_IMPLEMENTATION 0\n@@ -299,0 +303,2 @@\n+#else\n+#  define PNG_POWERPC_VSX_IMPLEMENTATION 0\n@@ -523,10 +529,1 @@\n-#  ifdef _WIN64\n-#     ifdef __GNUC__\n-         typedef unsigned long long png_ptruint;\n-#     else\n-         typedef unsigned __int64 png_ptruint;\n-#     endif\n-#  else\n-      typedef unsigned long png_ptruint;\n-#  endif\n-#  define png_constcast(type, value) ((type)(png_ptruint)(const void*)(value))\n+#  define png_constcast(type, value) ((type)(void*)(const void*)(value))\n@@ -574,3 +571,2 @@\n-#if defined(WIN32) || defined(_Windows) || defined(_WINDOWS) || \\\n-    defined(_WIN32) || defined(__WIN32__)\n-#  include <windows.h>  \/* defines _WINDOWS_ macro *\/\n+#if defined(_WIN32) || defined(__WIN32__) || defined(__NT__)\n+#  include <windows.h>\n@@ -585,1 +581,1 @@\n-\/* Memory model\/platform independent fns *\/\n+\/* Platform-independent functions *\/\n@@ -587,5 +583,1 @@\n-#  ifdef _WINDOWS_\n-#    define PNG_ABORT() ExitProcess(0)\n-#  else\n-#    define PNG_ABORT() abort()\n-#  endif\n+#  define PNG_ABORT() abort()\n@@ -595,2 +587,2 @@\n-#define PNG_ALIGN_NONE   0 \/* do not use data alignment *\/\n-#define PNG_ALIGN_ALWAYS 1 \/* assume unaligned accesses are OK *\/\n+#define PNG_ALIGN_NONE      0 \/* do not use data alignment *\/\n+#define PNG_ALIGN_ALWAYS    1 \/* assume unaligned accesses are OK *\/\n@@ -598,1 +590,1 @@\n-#  define PNG_ALIGN_OFFSET 2 \/* use offsetof to determine alignment *\/\n+#  define PNG_ALIGN_OFFSET  2 \/* use offsetof to determine alignment *\/\n@@ -602,1 +594,1 @@\n-#define PNG_ALIGN_SIZE   3 \/* use sizeof to determine alignment *\/\n+#define PNG_ALIGN_SIZE      3 \/* use sizeof to determine alignment *\/\n@@ -616,2 +608,2 @@\n-    * is good for performance.  Do not do this unless you have tested the result\n-    * and understand it.\n+    * is good for performance.  Do not do this unless you have tested the\n+    * result and understand it.\n@@ -619,1 +611,1 @@\n-#  define png_alignof(type) (sizeof (type))\n+#  define png_alignof(type) (sizeof(type))\n@@ -622,1 +614,1 @@\n-#     define png_alignof(type) offsetof(struct{char c; type t;}, t)\n+#    define png_alignof(type) offsetof(struct{char c; type t;}, t)\n@@ -624,4 +616,4 @@\n-#     if PNG_ALIGN_TYPE == PNG_ALIGN_ALWAYS\n-#        define png_alignof(type) (1)\n-#     endif\n-      \/* Else leave png_alignof undefined to prevent use thereof *\/\n+#    if PNG_ALIGN_TYPE == PNG_ALIGN_ALWAYS\n+#      define png_alignof(type) 1\n+#    endif\n+     \/* Else leave png_alignof undefined to prevent use thereof *\/\n@@ -631,1 +623,1 @@\n-\/* This implicitly assumes alignment is always to a power of 2. *\/\n+\/* This implicitly assumes alignment is always a multiple of 2. *\/\n@@ -633,3 +625,2 @@\n-#  define png_isaligned(ptr, type)\\\n-   (((type)((const char*)ptr-(const char*)0) & \\\n-   (type)(png_alignof(type)-1)) == 0)\n+#  define png_isaligned(ptr, type) \\\n+   (((type)(size_t)((const void*)(ptr)) & (type)(png_alignof(type)-1)) == 0)\n","filename":"src\/java.desktop\/share\/native\/libsplashscreen\/libpng\/pngpriv.h","additions":28,"deletions":37,"binary":false,"changes":65,"status":"modified"},{"patch":"@@ -3483,1 +3483,0 @@\n-               png_bytep row = png_voidcast(png_bytep, display->first_row);\n@@ -3588,2 +3587,0 @@\n-\n-                     row += display->row_bytes;\n","filename":"src\/java.desktop\/share\/native\/libsplashscreen\/libpng\/pngread.c","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -52,1 +52,1 @@\n-#    if defined(_MSC_VER) && defined(_M_ARM64)\n+#    if defined(_MSC_VER) && !defined(__clang__) && defined(_M_ARM64)\n","filename":"src\/java.desktop\/share\/native\/libsplashscreen\/libpng\/pngrtran.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n- * Copyright (c) 2018 Cosmin Truta\n+ * Copyright (c) 2018-2022 Cosmin Truta\n@@ -332,1 +332,0 @@\n-      png_ptr->read_buffer = NULL;\n@@ -2107,2 +2106,1 @@\n-      if (i == 1 && buf[0] != 'M' && buf[0] != 'I'\n-                 && info_ptr->eXIf_buf[0] != buf[0])\n+      if (i == 1)\n@@ -2110,5 +2108,9 @@\n-         png_crc_finish(png_ptr, length);\n-         png_chunk_benign_error(png_ptr, \"incorrect byte-order specifier\");\n-         png_free(png_ptr, info_ptr->eXIf_buf);\n-         info_ptr->eXIf_buf = NULL;\n-         return;\n+         if ((buf[0] != 'M' && buf[0] != 'I') ||\n+             (info_ptr->eXIf_buf[0] != buf[0]))\n+         {\n+            png_crc_finish(png_ptr, length - 2);\n+            png_chunk_benign_error(png_ptr, \"incorrect byte-order specifier\");\n+            png_free(png_ptr, info_ptr->eXIf_buf);\n+            info_ptr->eXIf_buf = NULL;\n+            return;\n+         }\n@@ -2118,4 +2120,2 @@\n-   if (png_crc_finish(png_ptr, 0) != 0)\n-      return;\n-\n-   png_set_eXIf_1(png_ptr, info_ptr, length, info_ptr->eXIf_buf);\n+   if (png_crc_finish(png_ptr, 0) == 0)\n+      png_set_eXIf_1(png_ptr, info_ptr, length, info_ptr->eXIf_buf);\n@@ -2157,2 +2157,3 @@\n-   if (num != (unsigned int) png_ptr->num_palette ||\n-       num > (unsigned int) PNG_MAX_PALETTE_LENGTH)\n+   if (length != num * 2 ||\n+       num != (unsigned int)png_ptr->num_palette ||\n+       num > (unsigned int)PNG_MAX_PALETTE_LENGTH)\n@@ -4652,1 +4653,1 @@\n-         int extra = (int)((temp - (png_bytep)0) & 0x0f);\n+         size_t extra = (size_t)temp & 0x0f;\n@@ -4656,1 +4657,1 @@\n-         extra = (int)((temp - (png_bytep)0) & 0x0f);\n+         extra = (size_t)temp & 0x0f;\n@@ -4659,1 +4660,0 @@\n-\n","filename":"src\/java.desktop\/share\/native\/libsplashscreen\/libpng\/pngrutil.c","additions":18,"deletions":18,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n- * Copyright (c) 2018 Cosmin Truta\n+ * Copyright (c) 2018-2022 Cosmin Truta\n@@ -1050,0 +1050,3 @@\n+\n+          info_ptr->valid |= PNG_INFO_tRNS;\n+          info_ptr->free_me |= PNG_FREE_TRNS;\n@@ -1357,1 +1360,1 @@\n-png_permit_mng_features (png_structrp png_ptr, png_uint_32 mng_features)\n+png_permit_mng_features(png_structrp png_ptr, png_uint_32 mng_features)\n@@ -1664,1 +1667,1 @@\n-png_set_user_limits (png_structrp png_ptr, png_uint_32 user_width_max,\n+png_set_user_limits(png_structrp png_ptr, png_uint_32 user_width_max,\n@@ -1680,1 +1683,1 @@\n-png_set_chunk_cache_max (png_structrp png_ptr, png_uint_32 user_chunk_cache_max)\n+png_set_chunk_cache_max(png_structrp png_ptr, png_uint_32 user_chunk_cache_max)\n@@ -1688,1 +1691,1 @@\n-png_set_chunk_malloc_max (png_structrp png_ptr,\n+png_set_chunk_malloc_max(png_structrp png_ptr,\n","filename":"src\/java.desktop\/share\/native\/libsplashscreen\/libpng\/pngset.c","additions":8,"deletions":5,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n- * Copyright (c) 2018-2019 Cosmin Truta\n+ * Copyright (c) 2018-2022 Cosmin Truta\n@@ -365,1 +365,0 @@\n-\n@@ -368,9 +367,0 @@\n-#if defined(__TURBOC__) && !defined(_Windows) && !defined(__FLAT__)\n-\/* For the Borland special 64K segment handler *\/\n-   png_bytepp offset_table_ptr;\n-   png_bytep offset_table;\n-   png_uint_16 offset_table_number;\n-   png_uint_16 offset_table_count;\n-   png_uint_16 offset_table_count_free;\n-#endif\n-\n","filename":"src\/java.desktop\/share\/native\/libsplashscreen\/libpng\/pngstruct.h","additions":1,"deletions":11,"binary":false,"changes":12,"status":"modified"}]}