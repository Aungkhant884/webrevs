{"files":[{"patch":"@@ -219,7 +219,2 @@\n-julong os::available_memory() {\n-  return Linux::available_memory();\n-}\n-\n-julong os::Linux::available_memory() {\n-  julong avail_mem = 0UL;\n-\n+julong os::Linux::available_memory_in_container() {\n+  julong avail_mem = static_cast<julong>(-1L);\n@@ -234,2 +229,0 @@\n-      log_trace(os)(\"available container memory: \" JULONG_FORMAT, avail_mem);\n-      return avail_mem;\n@@ -238,0 +231,13 @@\n+  return avail_mem;\n+}\n+\n+julong os::available_memory() {\n+  return Linux::available_memory();\n+}\n+\n+julong os::Linux::available_memory() {\n+  julong avail_mem = available_memory_in_container();\n+  if (avail_mem != static_cast<julong>(-1L)) {\n+    log_trace(os)(\"available container memory: \" JULONG_FORMAT, avail_mem);\n+    return avail_mem;\n+  }\n@@ -243,3 +249,2 @@\n-      julong mem_available;\n-      if (fscanf(fp, \"MemAvailable: \" JULONG_FORMAT \" kB\", &mem_available) == 1) {\n-        avail_mem = mem_available;\n+      if (fscanf(fp, \"MemAvailable: \" JULONG_FORMAT \" kB\", &avail_mem) == 1) {\n+        avail_mem *= K;\n@@ -251,1 +256,1 @@\n-  if (avail_mem == 0UL) {\n+  if (avail_mem == static_cast<julong>(-1L)) {\n@@ -265,13 +270,4 @@\n-  julong free_mem;\n-\n-  if (OSContainer::is_containerized()) {\n-    jlong mem_limit = OSContainer::memory_limit_in_bytes();\n-    jlong mem_usage;\n-    if (mem_limit > 0 && (mem_usage = OSContainer::memory_usage_in_bytes()) < 1) {\n-      log_debug(os, container)(\"container memory usage failed: \" JLONG_FORMAT \", using host value\", mem_usage);\n-    }\n-    if (mem_limit > 0 && mem_usage > 0) {\n-      free_mem = mem_limit > mem_usage ? (julong)mem_limit - (julong)mem_usage : 0;\n-      log_trace(os)(\"free container memory: \" JULONG_FORMAT, free_mem);\n-      return free_mem;\n-    }\n+  julong free_mem = available_memory_in_container();\n+  if (free_mem != static_cast<julong>(-1L)) {\n+    log_trace(os)(\"free container memory: \" JULONG_FORMAT, free_mem);\n+    return free_mem;\n","filename":"src\/hotspot\/os\/linux\/os_linux.cpp","additions":22,"deletions":26,"binary":false,"changes":48,"status":"modified"},{"patch":"@@ -54,0 +54,2 @@\n+  static julong available_memory_in_container();\n+\n@@ -59,0 +61,4 @@\n+  \/\/ Usually available memory (MemAvailable in \/proc\/meminfo) is greater\n+  \/\/ than free memory (MemFree in \/proc\/meminfo) because Linux would use\n+  \/\/ free memory aggressively (e.g. caches).\n+  \/\/ Thus we distinguish free memory and available memory in Linux.\n@@ -61,0 +67,1 @@\n+\n","filename":"src\/hotspot\/os\/linux\/os_linux.hpp","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"}]}