{"files":[{"patch":"@@ -46,16 +46,0 @@\n-\/\/ To enable runtime-resolution of GC barriers on primitives, please\n-\/\/ define SUPPORT_BARRIER_ON_PRIMITIVES.\n-#ifdef SUPPORT_BARRIER_ON_PRIMITIVES\n-#define ACCESS_PRIMITIVE_SUPPORT INTERNAL_BT_BARRIER_ON_PRIMITIVES\n-#else\n-#define ACCESS_PRIMITIVE_SUPPORT DECORATORS_NONE\n-#endif\n-\n-#ifdef SUPPORT_NOT_TO_SPACE_INVARIANT\n-#define ACCESS_TO_SPACE_INVARIANT_SUPPORT DECORATORS_NONE\n-#else\n-#define ACCESS_TO_SPACE_INVARIANT_SUPPORT INTERNAL_BT_TO_SPACE_INVARIANT\n-#endif\n-\n-#define BT_BUILDTIME_DECORATORS (ACCESS_PRIMITIVE_SUPPORT | ACCESS_TO_SPACE_INVARIANT_SUPPORT)\n-\n","filename":"src\/hotspot\/share\/gc\/shared\/barrierSetConfig.hpp","additions":0,"deletions":16,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -272,5 +272,0 @@\n-\n-  static oop resolve(oop obj) {\n-    verify_decorators<DECORATORS_NONE>();\n-    return AccessInternal::resolve<decorators>(obj);\n-  }\n","filename":"src\/hotspot\/share\/oops\/access.hpp","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -652,2 +652,1 @@\n-      return !HasDecorator<decorators, INTERNAL_BT_BARRIER_ON_PRIMITIVES>::value &&\n-             !HasDecorator<decorators, INTERNAL_VALUE_IS_OOP>::value;\n+      return !HasDecorator<decorators, INTERNAL_VALUE_IS_OOP>::value;\n@@ -949,15 +948,0 @@\n-\n-    template <DecoratorSet decorators>\n-    inline static typename EnableIf<\n-      HasDecorator<decorators, INTERNAL_BT_TO_SPACE_INVARIANT>::value, oop>::type\n-    resolve(oop obj) {\n-      typedef RawAccessBarrier<decorators & RAW_DECORATOR_MASK> Raw;\n-      return Raw::resolve(obj);\n-    }\n-\n-    template <DecoratorSet decorators>\n-    inline static typename EnableIf<\n-      !HasDecorator<decorators, INTERNAL_BT_TO_SPACE_INVARIANT>::value, oop>::type\n-    resolve(oop obj) {\n-      return RuntimeDispatch<decorators, oop, BARRIER_RESOLVE>::resolve(obj);\n-    }\n@@ -1256,6 +1240,0 @@\n-  template <DecoratorSet decorators>\n-  inline oop resolve(oop obj) {\n-    const DecoratorSet expanded_decorators = DecoratorFixup<decorators>::value;\n-    return PreRuntimeDispatch::resolve<expanded_decorators>(obj);\n-  }\n-\n","filename":"src\/hotspot\/share\/oops\/accessBackend.hpp","additions":1,"deletions":23,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -57,7 +57,0 @@\n-\/\/ == Internal build-time Decorators ==\n-\/\/ * INTERNAL_BT_BARRIER_ON_PRIMITIVES: This is set in the barrierSetConfig.hpp file.\n-\/\/ * INTERNAL_BT_TO_SPACE_INVARIANT: This is set in the barrierSetConfig.hpp file iff\n-\/\/   no GC is bundled in the build that is to-space invariant.\n-const DecoratorSet INTERNAL_BT_BARRIER_ON_PRIMITIVES = UCONST64(1) << 3;\n-const DecoratorSet INTERNAL_BT_TO_SPACE_INVARIANT    = UCONST64(1) << 4;\n-\n@@ -70,1 +63,1 @@\n-                                                       INTERNAL_BT_BARRIER_ON_PRIMITIVES | INTERNAL_RT_USE_COMPRESSED_OOPS;\n+                                                       INTERNAL_RT_USE_COMPRESSED_OOPS;\n@@ -241,1 +234,1 @@\n-    static const DecoratorSet value = barrier_strength_default | BT_BUILDTIME_DECORATORS;\n+    static const DecoratorSet value = barrier_strength_default;\n@@ -257,2 +250,1 @@\n-    DecoratorSet value = barrier_strength_default | BT_BUILDTIME_DECORATORS;\n-    return value;\n+    return barrier_strength_default;\n","filename":"src\/hotspot\/share\/oops\/accessDecorators.hpp","additions":3,"deletions":11,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -32,2 +32,1 @@\n-  oop resolved_obj = Access<>::resolve(as_oop());\n-  return arrayOop(resolved_obj)->base_raw(type);\n+  return arrayOop(as_oop())->base_raw(type);\n","filename":"src\/hotspot\/share\/oops\/arrayOop.inline.hpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -249,1 +249,1 @@\n-void*    oopDesc::field_addr(int offset)         const { return Access<>::resolve(as_oop())->field_addr_raw(offset); }\n+void*    oopDesc::field_addr(int offset)         const { return as_oop()->field_addr_raw(offset); }\n","filename":"src\/hotspot\/share\/oops\/oop.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -190,2 +190,1 @@\n-    const oop obj = Access<>::resolve(key);\n-    const unsigned int hash = Universe::heap()->hash_oop(obj);\n+    const unsigned int hash = Universe::heap()->hash_oop(key);\n","filename":"src\/hotspot\/share\/prims\/jvmtiTagMap.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -131,4 +131,0 @@\n-  if (p != NULL) {\n-    p = Access<>::resolve(p);\n-  }\n-\n","filename":"src\/hotspot\/share\/prims\/unsafe.cpp","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"}]}