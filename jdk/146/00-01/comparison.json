{"files":[{"patch":"@@ -116,1 +116,1 @@\n-  return ref->obj_field_addr_raw<HeapWord>(_referent_offset);\n+  return ref->obj_field_addr<HeapWord>(_referent_offset);\n@@ -132,1 +132,1 @@\n-  return ref->obj_field_addr_raw<HeapWord>(_next_offset);\n+  return ref->obj_field_addr<HeapWord>(_next_offset);\n@@ -148,1 +148,1 @@\n-  return ref->obj_field_addr_raw<HeapWord>(_discovered_offset);\n+  return ref->obj_field_addr<HeapWord>(_discovered_offset);\n","filename":"src\/hotspot\/share\/classfile\/javaClasses.inline.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -51,1 +51,1 @@\n-          obj->init_mark_raw();\n+          obj->init_mark();\n@@ -74,1 +74,1 @@\n-  oop(destination)->init_mark_raw();\n+  oop(destination)->init_mark();\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCCompactTask.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -115,1 +115,1 @@\n-      object->init_mark_raw();\n+      object->init_mark();\n@@ -119,1 +119,1 @@\n-      assert(object->mark_raw() == markWord::prototype_for_klass(object->klass()) || \/\/ Correct mark\n+      assert(object->mark() == markWord::prototype_for_klass(object->klass()) || \/\/ Correct mark\n@@ -121,1 +121,1 @@\n-             (UseBiasedLocking && object->has_bias_pattern_raw()), \/\/ Will be restored by BiasedLocking\n+             (UseBiasedLocking && object->has_bias_pattern()), \/\/ Will be restored by BiasedLocking\n@@ -123,1 +123,1 @@\n-             p2i(object), object->mark_raw().value(), markWord::prototype_for_klass(object->klass()).value());\n+             p2i(object), object->mark().value(), markWord::prototype_for_klass(object->klass()).value());\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCCompactionPoint.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-  markWord mark = obj->mark_raw();\n+  markWord mark = obj->mark();\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCMarker.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -80,1 +80,1 @@\n-    assert(obj->mark_raw() == markWord::prototype_for_klass(obj->klass()) || \/\/ Correct mark\n+    assert(obj->mark() == markWord::prototype_for_klass(obj->klass()) || \/\/ Correct mark\n@@ -82,1 +82,1 @@\n-           (UseBiasedLocking && obj->has_bias_pattern_raw()), \/\/ Will be restored by BiasedLocking\n+           (UseBiasedLocking && obj->has_bias_pattern()), \/\/ Will be restored by BiasedLocking\n@@ -84,1 +84,1 @@\n-           p2i(obj), obj->mark_raw().value(), markWord::prototype_for_klass(obj->klass()).value());\n+           p2i(obj), obj->mark().value(), markWord::prototype_for_klass(obj->klass()).value());\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCOopClosures.inline.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -234,1 +234,1 @@\n-    markWord m = obj->mark_raw();\n+    markWord m = obj->mark();\n","filename":"src\/hotspot\/share\/gc\/g1\/g1OopClosures.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -196,1 +196,1 @@\n-  markWord m = obj->mark_raw();\n+  markWord m = obj->mark();\n@@ -488,1 +488,1 @@\n-        obj->set_mark_raw(old_mark);\n+        obj->set_mark(old_mark);\n@@ -492,1 +492,1 @@\n-        obj->set_mark_raw(old_mark.set_age(age));\n+        obj->set_mark(old_mark.set_age(age));\n@@ -496,1 +496,1 @@\n-      obj->set_mark_raw(old_mark);\n+      obj->set_mark(old_mark);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ParScanThreadState.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -136,1 +136,1 @@\n-  T* const base = (T*)obj->base_raw();\n+  T* const base = (T*)obj->base();\n","filename":"src\/hotspot\/share\/gc\/parallel\/psCompactionManager.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -86,1 +86,1 @@\n-  filler_oop->set_mark_raw(markWord::prototype());\n+  filler_oop->set_mark(markWord::prototype());\n","filename":"src\/hotspot\/share\/gc\/parallel\/psPromotionLAB.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -144,1 +144,1 @@\n-  markWord test_mark = o->mark_raw();\n+  markWord test_mark = o->mark();\n","filename":"src\/hotspot\/share\/gc\/parallel\/psPromotionManager.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -696,1 +696,1 @@\n-  _preserved_marks_set.get()->push_if_necessary(old, old->mark_raw());\n+  _preserved_marks_set.get()->push_if_necessary(old, old->mark());\n","filename":"src\/hotspot\/share\/gc\/serial\/defNewGeneration.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -135,1 +135,1 @@\n-    if (!obj->mark_raw().is_marked()) {\n+    if (!obj->mark().is_marked()) {\n@@ -151,1 +151,1 @@\n-  _obj->set_mark_raw(_mark);\n+  _obj->set_mark(_mark);\n@@ -208,1 +208,1 @@\n-    obj->set_mark_raw(mark);\n+    obj->set_mark(mark);\n","filename":"src\/hotspot\/share\/gc\/serial\/markSweep.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -41,2 +41,2 @@\n-  markWord mark = obj->mark_raw();\n-  obj->set_mark_raw(markWord::prototype().set_marked());\n+  markWord mark = obj->mark();\n+  obj->set_mark(markWord::prototype().set_marked());\n@@ -53,1 +53,1 @@\n-    if (!obj->mark_raw().is_marked()) {\n+    if (!obj->mark().is_marked()) {\n@@ -82,1 +82,1 @@\n-    oop new_obj = oop(obj->mark_raw().decode_pointer());\n+    oop new_obj = oop(obj->mark().decode_pointer());\n@@ -84,3 +84,3 @@\n-    assert(new_obj != NULL ||                          \/\/ is forwarding ptr?\n-           obj->mark_raw() == markWord::prototype() || \/\/ not gc marked?\n-           (UseBiasedLocking && obj->mark_raw().has_bias_pattern()),\n+    assert(new_obj != NULL ||                      \/\/ is forwarding ptr?\n+           obj->mark() == markWord::prototype() || \/\/ not gc marked?\n+           (UseBiasedLocking && obj->mark().has_bias_pattern()),\n","filename":"src\/hotspot\/share\/gc\/serial\/markSweep.inline.hpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -50,1 +50,1 @@\n-  obj->init_mark_raw();\n+  obj->init_mark();\n@@ -62,1 +62,1 @@\n-  _o->set_mark_raw(_m);\n+  _o->set_mark(_m);\n","filename":"src\/hotspot\/share\/gc\/shared\/preservedMarks.inline.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -382,1 +382,1 @@\n-    q->init_mark_raw();\n+    q->init_mark();\n@@ -620,1 +620,1 @@\n-    t->set_mark_raw(markWord::prototype());\n+    t->set_mark(markWord::prototype());\n@@ -627,1 +627,1 @@\n-    obj->set_mark_raw(markWord::prototype());\n+    obj->set_mark(markWord::prototype());\n","filename":"src\/hotspot\/share\/gc\/shared\/space.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -120,1 +120,1 @@\n-      obj->set_mark_raw(obj->mark_raw().set_marked());\n+      obj->set_mark(obj->mark().set_marked());\n@@ -339,1 +339,1 @@\n-      oop(compaction_top)->init_mark_raw();\n+      oop(compaction_top)->init_mark();\n","filename":"src\/hotspot\/share\/gc\/shared\/space.inline.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-  markWord mark = obj->mark_raw();\n+  markWord mark = obj->mark();\n@@ -58,1 +58,1 @@\n-  markWord mark = obj->mark_raw();\n+  markWord mark = obj->mark();\n@@ -74,1 +74,1 @@\n-  return obj->mark_raw().is_marked();\n+  return obj->mark().is_marked();\n@@ -78,1 +78,1 @@\n-  markWord old_mark = obj->mark_raw();\n+  markWord old_mark = obj->mark();\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahForwarding.inline.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -326,1 +326,1 @@\n-    _preserved_marks->push_if_necessary(p, p->mark_raw());\n+    _preserved_marks->push_if_necessary(p, p->mark());\n@@ -434,1 +434,1 @@\n-        _preserved_marks->get(0)->push_if_necessary(old_obj, old_obj->mark_raw());\n+        _preserved_marks->get(0)->push_if_necessary(old_obj, old_obj->mark());\n@@ -809,1 +809,1 @@\n-      new_obj->init_mark_raw();\n+      new_obj->init_mark();\n@@ -925,1 +925,1 @@\n-      new_obj->init_mark_raw();\n+      new_obj->init_mark();\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahMarkCompact.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -194,1 +194,1 @@\n-    archived_oop->set_mark_raw(markWord::prototype().copy_set_hash(hash_original));\n+    archived_oop->set_mark(markWord::prototype().copy_set_hash(hash_original));\n","filename":"src\/hotspot\/share\/memory\/heapShared.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -365,1 +365,1 @@\n-  dst->init_mark_raw();\n+  dst->init_mark();\n","filename":"src\/hotspot\/share\/oops\/accessBackend.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -94,1 +94,0 @@\n-  inline void* base_raw(BasicType type) const; \/\/ GC barrier invariant\n","filename":"src\/hotspot\/share\/oops\/arrayOop.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,4 +32,0 @@\n-  return arrayOop(as_oop())->base_raw(type);\n-}\n-\n-void* arrayOopDesc::base_raw(BasicType type) const {\n","filename":"src\/hotspot\/share\/oops\/arrayOop.inline.hpp","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -60,1 +60,1 @@\n-  T* p         = (T*)obj->obj_field_addr_raw<T>(map->offset());\n+  T* p         = (T*)obj->obj_field_addr<T>(map->offset());\n@@ -70,1 +70,1 @@\n-  T* const start = (T*)obj->obj_field_addr_raw<T>(map->offset());\n+  T* const start = (T*)obj->obj_field_addr<T>(map->offset());\n@@ -81,1 +81,1 @@\n-  T* p   = (T*)obj->obj_field_addr_raw<T>(map->offset());\n+  T* p   = (T*)obj->obj_field_addr<T>(map->offset());\n","filename":"src\/hotspot\/share\/oops\/instanceKlass.inline.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -297,1 +297,1 @@\n-           objArrayOop(s)->obj_at_addr_raw<narrowOop>(src_pos), \"sanity\");\n+           objArrayOop(s)->obj_at_addr<narrowOop>(src_pos), \"sanity\");\n@@ -299,1 +299,1 @@\n-           objArrayOop(d)->obj_at_addr_raw<narrowOop>(dst_pos), \"sanity\");\n+           objArrayOop(d)->obj_at_addr<narrowOop>(dst_pos), \"sanity\");\n@@ -305,1 +305,1 @@\n-           objArrayOop(s)->obj_at_addr_raw<oop>(src_pos), \"sanity\");\n+           objArrayOop(s)->obj_at_addr<oop>(src_pos), \"sanity\");\n@@ -307,1 +307,1 @@\n-           objArrayOop(d)->obj_at_addr_raw<oop>(dst_pos), \"sanity\");\n+           objArrayOop(d)->obj_at_addr<oop>(dst_pos), \"sanity\");\n","filename":"src\/hotspot\/share\/oops\/objArrayKlass.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-  T* p         = (T*)a->base_raw();\n+  T* p         = (T*)a->base();\n@@ -55,1 +55,1 @@\n-  T* p   = (T*)a->base_raw();\n+  T* p   = (T*)a->base();\n@@ -104,2 +104,2 @@\n-  T* low = (T*)a->base_raw() + start;\n-  T* high = (T*)a->base_raw() + end;\n+  T* low = (T*)a->base() + start;\n+  T* high = (T*)a->base() + end;\n","filename":"src\/hotspot\/share\/oops\/objArrayKlass.inline.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -43,1 +43,0 @@\n-  template <class T> T* obj_at_addr_raw(int index) const;\n@@ -84,1 +83,0 @@\n-  HeapWord* base_raw() const;\n","filename":"src\/hotspot\/share\/oops\/objArrayOop.hpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -35,1 +35,0 @@\n-inline HeapWord* objArrayOopDesc::base_raw() const { return (HeapWord*) arrayOopDesc::base_raw(T_OBJECT); }\n@@ -42,5 +41,0 @@\n-template <class T> T* objArrayOopDesc::obj_at_addr_raw(int index) const {\n-  assert(is_within_bounds(index), \"index %d out of bounds %d\", index, length());\n-  return &((T*)base_raw())[index];\n-}\n-\n","filename":"src\/hotspot\/share\/oops\/objArrayOop.inline.hpp","additions":0,"deletions":6,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -114,1 +114,1 @@\n-  if (obj->mark_raw().value() != 0) {\n+  if (obj->mark().value() != 0) {\n","filename":"src\/hotspot\/share\/oops\/oop.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -62,1 +62,0 @@\n-  inline markWord  mark_raw()      const;\n@@ -66,1 +65,0 @@\n-  inline void set_mark_raw(markWord m);\n@@ -76,1 +74,0 @@\n-  inline void init_mark_raw();\n@@ -120,2 +117,1 @@\n-  inline void* field_addr(int offset)     const;\n-  inline void* field_addr_raw(int offset) const;\n+  inline void* field_addr(int offset) const;\n@@ -124,1 +120,1 @@\n-  template <class T> inline T* obj_field_addr_raw(int offset) const;\n+  template <class T> inline T* obj_field_addr(int offset) const;\n@@ -240,1 +236,0 @@\n-  inline bool has_bias_pattern_raw() const;\n@@ -294,3 +289,3 @@\n-  inline bool     has_displaced_mark_raw() const;\n-  inline markWord displaced_mark_raw() const;\n-  inline void     set_displaced_mark_raw(markWord m);\n+  inline bool     has_displaced_mark() const;\n+  inline markWord displaced_mark() const;\n+  inline void     set_displaced_mark(markWord m);\n","filename":"src\/hotspot\/share\/oops\/oop.hpp","additions":5,"deletions":10,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -50,4 +50,0 @@\n-markWord oopDesc::mark_raw() const {\n-  return Atomic::load(&_mark);\n-}\n-\n@@ -62,4 +58,0 @@\n-void oopDesc::set_mark_raw(markWord m) {\n-  Atomic::store(&_mark, m);\n-}\n-\n@@ -87,4 +79,0 @@\n-void oopDesc::init_mark_raw() {\n-  set_mark_raw(markWord::prototype_for_klass(klass()));\n-}\n-\n@@ -219,2 +207,1 @@\n-void*    oopDesc::field_addr_raw(int offset)     const { return reinterpret_cast<void*>(cast_from_oop<intptr_t>(as_oop()) + offset); }\n-void*    oopDesc::field_addr(int offset)         const { return as_oop()->field_addr_raw(offset); }\n+void*    oopDesc::field_addr(int offset)     const { return reinterpret_cast<void*>(cast_from_oop<intptr_t>(as_oop()) + offset); }\n@@ -223,1 +210,1 @@\n-T*       oopDesc::obj_field_addr_raw(int offset) const { return (T*) field_addr_raw(offset); }\n+T*       oopDesc::obj_field_addr(int offset) const { return (T*) field_addr(offset); }\n@@ -272,4 +259,0 @@\n-bool oopDesc::has_bias_pattern_raw() const {\n-  return mark_raw().has_bias_pattern();\n-}\n-\n@@ -278,1 +261,1 @@\n-  return mark_raw().is_marked();\n+  return mark().is_marked();\n@@ -285,1 +268,1 @@\n-  return mark_raw().is_marked();\n+  return mark().is_marked();\n@@ -293,1 +276,1 @@\n-  set_mark_raw(m);\n+  set_mark(m);\n@@ -320,1 +303,1 @@\n-  return (oop) mark_raw().decode_pointer();\n+  return (oop) mark().decode_pointer();\n@@ -333,2 +316,2 @@\n-  if (has_displaced_mark_raw()) {\n-    return displaced_mark_raw().age();\n+  if (has_displaced_mark()) {\n+    return displaced_mark().age();\n@@ -336,1 +319,1 @@\n-    return mark_raw().age();\n+    return mark().age();\n@@ -342,2 +325,2 @@\n-  if (has_displaced_mark_raw()) {\n-    set_displaced_mark_raw(displaced_mark_raw().incr_age());\n+  if (has_displaced_mark()) {\n+    set_displaced_mark(displaced_mark().incr_age());\n@@ -345,1 +328,1 @@\n-    set_mark_raw(mark_raw().incr_age());\n+    set_mark(mark().incr_age());\n@@ -397,2 +380,2 @@\n-bool oopDesc::has_displaced_mark_raw() const {\n-  return mark_raw().has_displaced_mark_helper();\n+bool oopDesc::has_displaced_mark() const {\n+  return mark().has_displaced_mark_helper();\n@@ -401,2 +384,2 @@\n-markWord oopDesc::displaced_mark_raw() const {\n-  return mark_raw().displaced_mark_helper();\n+markWord oopDesc::displaced_mark() const {\n+  return mark().displaced_mark_helper();\n@@ -405,2 +388,2 @@\n-void oopDesc::set_displaced_mark_raw(markWord m) {\n-  mark_raw().set_displaced_mark_helper(m);\n+void oopDesc::set_displaced_mark(markWord m) {\n+  mark().set_displaced_mark_helper(m);\n@@ -423,1 +406,1 @@\n-  return mark_must_be_preserved(mark_raw());\n+  return mark_must_be_preserved(mark());\n","filename":"src\/hotspot\/share\/oops\/oop.inline.hpp","additions":19,"deletions":36,"binary":false,"changes":55,"status":"modified"},{"patch":"@@ -118,2 +118,2 @@\n-      assert(p->field_addr_raw((jint)byte_offset) == ptr_plus_disp,\n-             \"raw [ptr+disp] must be consistent with oop::field_addr_raw\");\n+      assert(p->field_addr((jint)byte_offset) == ptr_plus_disp,\n+             \"raw [ptr+disp] must be consistent with oop::field_addr\");\n","filename":"src\/hotspot\/share\/prims\/unsafe.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-  FakeOop() : _oop() { _oop.set_mark_raw(originalMark()); }\n+  FakeOop() : _oop() { _oop.set_mark(originalMark()); }\n@@ -45,2 +45,2 @@\n-  markWord mark() { return _oop.mark_raw(); }\n-  void set_mark(markWord m) { _oop.set_mark_raw(m); }\n+  markWord mark() { return _oop.mark(); }\n+  void set_mark(markWord m) { _oop.set_mark(m); }\n@@ -49,1 +49,1 @@\n-    _oop.set_mark_raw(m);\n+    _oop.set_mark(m);\n","filename":"test\/hotspot\/gtest\/gc\/shared\/test_preservedMarks.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}