{"files":[{"patch":"@@ -8974,1 +8974,1 @@\n-instruct verify_vector_alignment(rRegP r, rRegL mask, rRegP tmp) %{\n+instruct verify_vector_alignment(rRegP r, immL32 mask) %{\n@@ -8976,2 +8976,1 @@\n-  effect(TEMP tmp);\n-  format %{ \"verify_alignment $r $mask \\t! verify alignment\" %}\n+  format %{ \"verify_vector_alignment $r $mask \\t! verify alignment\" %}\n@@ -8979,3 +8978,0 @@\n-    Register Rr = $r$$Register;\n-    Register Rmask = $mask$$Register;\n-    Register Rtmp = $tmp$$Register;\n@@ -8983,3 +8979,2 @@\n-    __ movq(Rtmp, Rr);    \/\/ copy r to tmp\n-    __ andq(Rtmp, Rmask); \/\/ mask off tmp\n-    __ cmpq(Rtmp, 0x0);   \/\/ check if zero\n+    \/\/ check if masked bits of r are zero\n+    __ testq($r$$Register, $mask$$constant);\n@@ -8987,1 +8982,1 @@\n-    __ stop(\"verify_alignment found a misaligned vector memory access\");\n+    __ stop(\"verify_vector_alignment found a misaligned vector memory access\");\n","filename":"src\/hotspot\/cpu\/x86\/x86.ad","additions":5,"deletions":10,"binary":false,"changes":15,"status":"modified"}]}