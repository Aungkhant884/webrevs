{"files":[{"patch":"@@ -855,6 +855,6 @@\n-    <Field type=\"long\" contentType=\"count\" name=\"size\" label=\"Size\" description=\"Current queue size\"\/>\n-    <Field type=\"long\" contentType=\"count\" name=\"peak\" label=\"Peak Size\" description=\"Peak queue size\"\/>\n-    <Field type=\"long\" contentType=\"count\" name=\"added\" label=\"Added\" description=\"Added requests\"\/>\n-    <Field type=\"long\" contentType=\"count\" name=\"removed\" label=\"Removed\" description=\"Removed requests\"\/>\n-    <Field type=\"long\" contentType=\"count\" name=\"totalAdded\" label=\"Total Added\" description=\"Total requests\"\/>\n-    <Field type=\"long\" contentType=\"count\" name=\"totalRemoved\" label=\"Total Removed\" description=\"Total removed requests\"\/>\n+    <Field type=\"long\" name=\"size\" label=\"Size\"\/>\n+    <Field type=\"long\" name=\"peak\" label=\"Peak Size\"\/>\n+    <Field type=\"long\" name=\"added\" label=\"Added\"\/>\n+    <Field type=\"long\" name=\"removed\" label=\"Removed\"\/>\n+    <Field type=\"long\" name=\"totalAdded\" label=\"Total Added\"\/>\n+    <Field type=\"long\" name=\"totalRemoved\" label=\"Total Removed\"\/>\n","filename":"src\/hotspot\/share\/jfr\/metadata\/metadata.xml","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,4 +45,4 @@\n-        Recording recording = new Recording();\n-        recording.enable(EVENT_NAME);\n-        recording.start();\n-        recording.stop();\n+        try (Recording recording = new Recording()) {\n+            recording.enable(EVENT_NAME);\n+            recording.start();\n+            recording.stop();\n@@ -50,14 +50,15 @@\n-        List<RecordedEvent> events = Events.fromRecording(recording);\n-        Events.hasEvents(events);\n-        for (RecordedEvent event : events) {\n-            System.out.println(\"Event:\" + event);\n-            Events.assertField(event, \"compiler\").notEmpty();\n-            Events.assertField(event, \"ingress\").atLeast(0L);\n-            Events.assertField(event, \"egress\").atLeast(0L);\n-            Events.assertField(event, \"size\").atLeast(0L);\n-            Events.assertField(event, \"peak\").atLeast(0L);\n-            Events.assertField(event, \"added\").atLeast(0L);\n-            Events.assertField(event, \"removed\").atLeast(0L);\n-            Events.assertField(event, \"totalAdded\").atLeast(0L);\n-            Events.assertField(event, \"totalRemoved\").atLeast(0L);\n-            Events.assertField(event, \"compilerThreadCount\").atLeast(0);\n+            List<RecordedEvent> events = Events.fromRecording(recording);\n+            Events.hasEvents(events);\n+            for (RecordedEvent event : events) {\n+                System.out.println(\"Event:\" + event);\n+                Events.assertField(event, \"compiler\").notEmpty();\n+                Events.assertField(event, \"ingress\").atLeast(0L);\n+                Events.assertField(event, \"egress\").atLeast(0L);\n+                Events.assertField(event, \"size\").atLeast(0L);\n+                Events.assertField(event, \"peak\").atLeast(0L);\n+                Events.assertField(event, \"added\").atLeast(0L);\n+                Events.assertField(event, \"removed\").atLeast(0L);\n+                Events.assertField(event, \"totalAdded\").atLeast(0L);\n+                Events.assertField(event, \"totalRemoved\").atLeast(0L);\n+                Events.assertField(event, \"compilerThreadCount\").atLeast(0);\n+            }\n","filename":"test\/jdk\/jdk\/jfr\/event\/compiler\/TestCompilerQueueUtilization.java","additions":20,"deletions":19,"binary":false,"changes":39,"status":"modified"}]}