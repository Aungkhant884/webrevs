{"files":[{"patch":"@@ -77,1 +77,0 @@\n-    private PublicKey trustedPubKey;\n@@ -79,1 +78,0 @@\n-    private PublicKey prevPubKey;\n@@ -81,0 +79,2 @@\n+    private PublicKey trustedPubKey;\n+    private PublicKey prevPubKey;\n@@ -178,5 +178,1 @@\n-            if (trustedPubKey != null) {\n-                prevPubKey = trustedPubKey;\n-            } else {\n-                prevPubKey = null;\n-            }\n+            prevPubKey = trustedPubKey;\n@@ -314,13 +310,8 @@\n-        \/\/ If there is no previous key, set one and exit\n-        if (prevPubKey == null) {\n-            prevPubKey = currPubKey;\n-            return;\n-        }\n-\n-        \/\/ Inherit key parameters from previous key\n-        if (PKIX.isDSAPublicKeyWithoutParams(currPubKey)) {\n-            \/\/ Inherit DSA parameters from previous key\n-            if (!(prevPubKey instanceof DSAPublicKey)) {\n-                throw new CertPathValidatorException(\"Input key is not \" +\n-                        \"of a appropriate type for inheriting parameters\");\n-            }\n+        if (prevPubKey != null) {\n+            \/\/ Inherit key parameters from previous key\n+            if (PKIX.isDSAPublicKeyWithoutParams(currPubKey)) {\n+                \/\/ Inherit DSA parameters from previous key\n+                if (!(prevPubKey instanceof DSAPublicKey)) {\n+                    throw new CertPathValidatorException(\"Input key is not \" +\n+                            \"of a appropriate type for inheriting parameters\");\n+                }\n@@ -328,5 +319,5 @@\n-            DSAParams params = ((DSAPublicKey)prevPubKey).getParams();\n-            if (params == null) {\n-                throw new CertPathValidatorException(\n-                        \"Key parameters missing from public key.\");\n-            }\n+                DSAParams params = ((DSAPublicKey)prevPubKey).getParams();\n+                if (params == null) {\n+                    throw new CertPathValidatorException(\n+                            \"Key parameters missing from public key.\");\n+                }\n@@ -334,9 +325,11 @@\n-            try {\n-                BigInteger y = ((DSAPublicKey)currPubKey).getY();\n-                KeyFactory kf = KeyFactory.getInstance(\"DSA\");\n-                DSAPublicKeySpec ks = new DSAPublicKeySpec(y, params.getP(),\n-                        params.getQ(), params.getG());\n-                currPubKey = kf.generatePublic(ks);\n-            } catch (GeneralSecurityException e) {\n-                throw new CertPathValidatorException(\"Unable to generate \" +\n-                        \"key with inherited parameters: \" + e.getMessage(), e);\n+                try {\n+                    BigInteger y = ((DSAPublicKey)currPubKey).getY();\n+                    KeyFactory kf = KeyFactory.getInstance(\"DSA\");\n+                    DSAPublicKeySpec ks = new DSAPublicKeySpec(y, params.getP(),\n+                            params.getQ(), params.getG());\n+                    currPubKey = kf.generatePublic(ks);\n+                } catch (GeneralSecurityException e) {\n+                    throw new CertPathValidatorException(\"Unable to generate \" +\n+                            \"key with inherited parameters: \" +\n+                            e.getMessage(), e);\n+                }\n@@ -362,6 +355,1 @@\n-        if (this.prevPubKey == null) {\n-            if (anchor == null) {\n-                throw new IllegalArgumentException(\n-                        \"The trust anchor cannot be null\");\n-            }\n-\n+        if (this.trustedPubKey == null) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/certpath\/AlgorithmChecker.java","additions":28,"deletions":40,"binary":false,"changes":68,"status":"modified"}]}