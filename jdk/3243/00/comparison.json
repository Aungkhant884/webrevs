{"files":[{"patch":"@@ -4034,1 +4034,0 @@\n-  assert(free_list != NULL, \"pre-condition\");\n@@ -4186,0 +4185,1 @@\n+      _g1h->hr_printer()->cleanup(r);\n@@ -4339,2 +4339,0 @@\n-private:\n-  FreeRegionList* _free_region_list;\n@@ -4347,2 +4345,2 @@\n-  G1FreeHumongousRegionClosure(FreeRegionList* free_region_list) :\n-    _free_region_list(free_region_list), _proxy_set(NULL), _humongous_objects_reclaimed(0), _humongous_regions_reclaimed(0), _freed_bytes(0) {\n+  G1FreeHumongousRegionClosure() :\n+    _proxy_set(NULL), _humongous_objects_reclaimed(0), _humongous_regions_reclaimed(0), _freed_bytes(0) {\n@@ -4433,1 +4431,2 @@\n-      g1h->free_humongous_region(r, _free_region_list);\n+      g1h->free_humongous_region(r, NULL);\n+      g1h->hr_printer()->cleanup(r);\n@@ -4464,3 +4463,1 @@\n-  FreeRegionList local_cleanup_list(\"Local Humongous Cleanup List\");\n-\n-  G1FreeHumongousRegionClosure cl(&local_cleanup_list);\n+  G1FreeHumongousRegionClosure cl;\n@@ -4471,9 +4468,0 @@\n-  G1HRPrinter* hrp = hr_printer();\n-  if (hrp->is_active()) {\n-    FreeRegionListIterator iter(&local_cleanup_list);\n-    while (iter.more_available()) {\n-      HeapRegion* hr = iter.get_next();\n-      hrp->cleanup(hr);\n-    }\n-  }\n-\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.cpp","additions":6,"deletions":18,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -1291,8 +1291,1 @@\n-    G1HRPrinter* hrp = _g1h->hr_printer();\n-    if (hrp->is_active()) {\n-      FreeRegionListIterator iter(&empty_regions_list);\n-      while (iter.more_available()) {\n-        HeapRegion* hr = iter.get_next();\n-        hrp->cleanup(hr);\n-      }\n-    }\n+    _g1h->hr_printer()->cleanup(&empty_regions_list);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentMark.cpp","additions":1,"deletions":8,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -0,0 +1,38 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+#include \"precompiled.hpp\"\n+\n+#include \"gc\/g1\/g1HRPrinter.hpp\"\n+#include \"gc\/g1\/heapRegionSet.hpp\"\n+\n+void G1HRPrinter::cleanup(FreeRegionList* cleanup_list) {\n+  if (is_active()) {\n+    FreeRegionListIterator iter(cleanup_list);\n+    while (iter.more_available()) {\n+      HeapRegion* hr = iter.get_next();\n+      cleanup(hr);\n+    }\n+  }\n+}\n","filename":"src\/hotspot\/share\/gc\/g1\/g1HRPrinter.cpp","additions":38,"deletions":0,"binary":false,"changes":38,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,0 +33,2 @@\n+class FreeRegionList;\n+\n@@ -89,0 +91,2 @@\n+  void cleanup(FreeRegionList* free_list);\n+\n","filename":"src\/hotspot\/share\/gc\/g1\/g1HRPrinter.hpp","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"}]}