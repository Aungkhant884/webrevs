{"files":[{"patch":"@@ -447,1 +447,1 @@\n-  void writer_loop()                    { _backend.thread_loop(false); }\n+  void writer_loop()                    { _backend.thread_loop(); }\n","filename":"src\/hotspot\/share\/services\/heapDumper.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -253,1 +253,1 @@\n-  \/\/ Wait for the threads to drain the compression work list.\n+  \/\/ Wait for the threads to drain the compression work list and do some work yourself.\n@@ -255,7 +255,1 @@\n-    \/\/ If we have no threads, compress the current one itself.\n-    if (_nr_of_threads == 0) {\n-      MutexUnlocker mu(_lock, Mutex::_no_safepoint_check_flag);\n-      thread_loop(true);\n-    } else {\n-      ml.wait();\n-    }\n+    do_foreground_work();\n@@ -268,3 +262,2 @@\n-void CompressionBackend::thread_loop(bool single_run) {\n-  \/\/ Register if this is a worker thread.\n-  if (!single_run) {\n+void CompressionBackend::thread_loop() {\n+  {\n@@ -275,19 +268,4 @@\n-  while (true) {\n-    WriteWork* work = get_work();\n-\n-    if (work == NULL) {\n-      assert(!single_run, \"Should never happen for single thread\");\n-      MonitorLocker ml(_lock, Mutex::_no_safepoint_check_flag);\n-      _nr_of_threads--;\n-      assert(_nr_of_threads >= 0, \"Too many threads finished\");\n-      ml.notify_all();\n-\n-      return;\n-    } else {\n-      do_compress(work);\n-      finish_work(work);\n-    }\n-\n-    if (single_run) {\n-      return;\n-    }\n+  WriteWork* work;\n+  while ((work = get_work()) != NULL) {\n+    do_compress(work);\n+    finish_work(work);\n@@ -295,0 +273,4 @@\n+\n+  MonitorLocker ml(_lock, Mutex::_no_safepoint_check_flag);\n+  _nr_of_threads--;\n+  assert(_nr_of_threads >= 0, \"Too many threads finished\");\n@@ -366,0 +348,10 @@\n+void CompressionBackend::do_foreground_work() {\n+  assert(!_to_compress.is_empty(), \"Must have work to do\");\n+  assert(_lock->owned_by_self(), \"Must have the lock\");\n+\n+  WriteWork* work = _to_compress.remove_first();\n+  MutexUnlocker mu(_lock, Mutex::_no_safepoint_check_flag);\n+  do_compress(work);\n+  finish_work(work);\n+}\n+\n@@ -408,3 +400,1 @@\n-        \/\/ If we have no threads, compress the current one itself.\n-        MutexUnlocker mu(_lock, Mutex::_no_safepoint_check_flag);\n-        thread_loop(true);\n+        do_foreground_work();\n","filename":"src\/hotspot\/share\/services\/heapDumperCompression.cpp","additions":23,"deletions":33,"binary":false,"changes":56,"status":"modified"},{"patch":"@@ -202,0 +202,1 @@\n+  void do_foreground_work();\n@@ -224,2 +225,2 @@\n-  \/\/ The entry point for a worker thread. If single_run is true, we only handle one entry.\n-  void thread_loop(bool single_run);\n+  \/\/ The entry point for a worker thread.\n+  void thread_loop();\n","filename":"src\/hotspot\/share\/services\/heapDumperCompression.hpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"}]}