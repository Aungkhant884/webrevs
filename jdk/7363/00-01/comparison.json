{"files":[{"patch":"@@ -0,0 +1,23 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n@@ -30,1 +53,1 @@\n-    \/\/2 days in milliseconds\n+    \/\/ 2 days in milliseconds\n@@ -32,0 +55,1 @@\n+\n@@ -34,0 +58,6 @@\n+    private static volatile Point spinnerLocationOnScreen;\n+    private static volatile Date spinnerValue;\n+    private static volatile int spinnerEditorWidth;\n+    private static volatile int spinnerButtonWidth;\n+    private static volatile int spinnerQuarterHeight;\n+\n@@ -74,4 +104,0 @@\n-            SwingUtilities.invokeAndWait(() -> {\n-                setLookAndFeel(laf);\n-                createUI();\n-            });\n@@ -79,5 +105,8 @@\n-                final Point spinnerLocationOnScreen = spinner.getLocationOnScreen();\n-                final int spinnerEditorWidth = spinner.getEditor().getWidth();\n-                final int spinnerButtonWidth = spinner.getWidth() -\n-                        spinnerEditorWidth;\n-                final int spinnerQuarterHeight = spinner.getHeight() \/ 4;\n+                SwingUtilities.invokeAndWait(() -> {\n+                    setLookAndFeel(laf);\n+                    createUI();\n+                    spinnerLocationOnScreen = spinner.getLocationOnScreen();\n+                    spinnerEditorWidth = spinner.getEditor().getWidth();\n+                    spinnerButtonWidth = spinner.getWidth() - spinnerEditorWidth;\n+                    spinnerQuarterHeight = spinner.getHeight() \/ 4;\n+                });\n@@ -86,4 +115,3 @@\n-                spinnerUpButtonCenter.x = spinnerLocationOnScreen.x + spinnerEditorWidth +\n-                        (spinnerButtonWidth \/ 2);\n-                spinnerUpButtonCenter.y = spinnerLocationOnScreen.y +\n-                        spinnerQuarterHeight;\n+                spinnerUpButtonCenter.x = spinnerLocationOnScreen.x + spinnerEditorWidth\n+                        + (spinnerButtonWidth \/ 2);\n+                spinnerUpButtonCenter.y = spinnerLocationOnScreen.y + spinnerQuarterHeight;\n@@ -93,2 +121,1 @@\n-                spinnerDownButtonCenter.y = spinnerLocationOnScreen.y +\n-                        3 * spinnerQuarterHeight;\n+                spinnerDownButtonCenter.y = spinnerLocationOnScreen.y + (3 * spinnerQuarterHeight);\n@@ -96,1 +123,1 @@\n-                \/\/Mouse press use-case\n+                \/\/ Mouse press use-case\n@@ -99,2 +126,2 @@\n-                robot.mousePress(InputEvent.BUTTON1_MASK);\n-                robot.mouseRelease(InputEvent.BUTTON1_MASK);\n+                robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+                robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n@@ -102,1 +129,2 @@\n-                long upValue = ((Date) spinner.getValue()).getTime();\n+                updateSpinnerValue();\n+                long upValue = spinnerValue.getTime();\n@@ -106,2 +134,2 @@\n-                robot.mousePress(InputEvent.BUTTON1_MASK);\n-                robot.mouseRelease(InputEvent.BUTTON1_MASK);\n+                robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+                robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n@@ -109,1 +137,2 @@\n-                long downValue = ((Date) spinner.getValue()).getTime();\n+                updateSpinnerValue();\n+                long downValue = spinnerValue.getTime();\n@@ -113,2 +142,2 @@\n-                \/\/Key press use-case\n-                \/\/Up Key press\n+                \/\/ Key press use-case\n+                \/\/ Up Key press\n@@ -118,1 +147,2 @@\n-                upValue = ((Date) spinner.getValue()).getTime();\n+                updateSpinnerValue();\n+                upValue = spinnerValue.getTime();\n@@ -120,1 +150,1 @@\n-                \/\/Down Key press\n+                \/\/ Down Key press\n@@ -124,1 +154,2 @@\n-                downValue = ((Date) spinner.getValue()).getTime();\n+                updateSpinnerValue();\n+                downValue = spinnerValue.getTime();\n@@ -144,0 +175,4 @@\n+    private static void updateSpinnerValue() throws Exception {\n+        SwingUtilities.invokeAndWait(() -> spinnerValue = (Date) spinner.getValue());\n+    }\n+\n","filename":"test\/jdk\/javax\/swing\/JSpinner\/4515999\/JSpinnerMouseAndKeyPressTest.java","additions":63,"deletions":28,"binary":false,"changes":91,"status":"modified"}]}