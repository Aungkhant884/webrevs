{"files":[{"patch":"@@ -0,0 +1,169 @@\n+import java.awt.ComponentOrientation;\n+import java.awt.Point;\n+import java.awt.Robot;\n+import java.awt.event.InputEvent;\n+import java.awt.event.KeyEvent;\n+import java.util.Arrays;\n+import java.util.Calendar;\n+import java.util.Date;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+import javax.swing.JFrame;\n+import javax.swing.JPanel;\n+import javax.swing.JSpinner;\n+import javax.swing.SpinnerDateModel;\n+import javax.swing.SwingUtilities;\n+import javax.swing.UIManager;\n+\n+\n+import static javax.swing.UIManager.getInstalledLookAndFeels;\n+\n+\/*\n+ * @test\n+ * @key headful\n+ * @bug 4515999\n+ * @summary Check whether incrementing dates via the keyboard (up\/down) gives\n+ * the same results as using mouse press on the arrow buttons in a JSpinner.\n+ * @run main JSpinnerMouseAndKeyPressTest\n+ *\/\n+public class JSpinnerMouseAndKeyPressTest {\n+    \/\/2 days in milliseconds\n+    private static final int EXPECTED_VALUE_2_DAYS = 2 * 24 * 60 * 60 * 1000;\n+    private static JFrame frame;\n+    private static JSpinner spinner;\n+\n+    public static void main(String[] s) throws Exception {\n+        runTest();\n+    }\n+\n+    private static void setLookAndFeel(final String laf) {\n+        try {\n+            UIManager.setLookAndFeel(laf);\n+            System.out.println(\"LookAndFeel: \" + laf);\n+        } catch (Exception e) {\n+            throw new RuntimeException(e);\n+        }\n+    }\n+\n+    private static void createUI() {\n+        frame = new JFrame();\n+        JPanel panel = new JPanel();\n+        spinner = new JSpinner();\n+        spinner.setModel(new DateModel());\n+        JSpinner.DateEditor editor = new JSpinner.DateEditor(spinner, \"dd\/MM\/yy\");\n+        spinner.setEditor(editor);\n+        spinner.setComponentOrientation(ComponentOrientation.LEFT_TO_RIGHT);\n+        panel.add(spinner);\n+        frame.add(panel);\n+        frame.setUndecorated(true);\n+        frame.pack();\n+        frame.setAlwaysOnTop(true);\n+        frame.setLocationRelativeTo(null);\n+        frame.setVisible(true);\n+    }\n+\n+\n+    public static void runTest() throws Exception {\n+        Robot robot = new Robot();\n+        robot.setAutoWaitForIdle(true);\n+        robot.setAutoDelay(100);\n+        List<String> lafs = Arrays.stream(getInstalledLookAndFeels())\n+                                  .map(UIManager.LookAndFeelInfo::getClassName)\n+                                  .collect(Collectors.toList());\n+        for (final String laf : lafs) {\n+            SwingUtilities.invokeAndWait(() -> {\n+                setLookAndFeel(laf);\n+                createUI();\n+            });\n+            try {\n+                final Point spinnerLocationOnScreen = spinner.getLocationOnScreen();\n+                final int spinnerEditorWidth = spinner.getEditor().getWidth();\n+                final int spinnerButtonWidth = spinner.getWidth() -\n+                        spinnerEditorWidth;\n+                final int spinnerQuarterHeight = spinner.getHeight() \/ 4;\n+\n+                Point spinnerUpButtonCenter = new Point();\n+                spinnerUpButtonCenter.x = spinnerLocationOnScreen.x + spinnerEditorWidth +\n+                        (spinnerButtonWidth \/ 2);\n+                spinnerUpButtonCenter.y = spinnerLocationOnScreen.y +\n+                        spinnerQuarterHeight;\n+\n+                Point spinnerDownButtonCenter = new Point();\n+                spinnerDownButtonCenter.x = spinnerUpButtonCenter.x;\n+                spinnerDownButtonCenter.y = spinnerLocationOnScreen.y +\n+                        3 * spinnerQuarterHeight;\n+\n+                \/\/Mouse press use-case\n+                \/\/ Move Mouse pointer to UP button center and click it\n+                robot.mouseMove(spinnerUpButtonCenter.x, spinnerUpButtonCenter.y);\n+                robot.mousePress(InputEvent.BUTTON1_MASK);\n+                robot.mouseRelease(InputEvent.BUTTON1_MASK);\n+\n+                long upValue = ((Date) spinner.getValue()).getTime();\n+\n+                \/\/ Move Mouse pointer to DOWN button center and click it\n+                robot.mouseMove(spinnerDownButtonCenter.x, spinnerDownButtonCenter.y);\n+                robot.mousePress(InputEvent.BUTTON1_MASK);\n+                robot.mouseRelease(InputEvent.BUTTON1_MASK);\n+\n+                long downValue = ((Date) spinner.getValue()).getTime();\n+\n+                long mouseIncrement = upValue - downValue;\n+\n+                \/\/Key press use-case\n+                \/\/Up Key press\n+                robot.keyPress(KeyEvent.VK_UP);\n+                robot.keyRelease(KeyEvent.VK_UP);\n+\n+                upValue = ((Date) spinner.getValue()).getTime();\n+\n+                \/\/Down Key press\n+                robot.keyPress(KeyEvent.VK_DOWN);\n+                robot.keyRelease(KeyEvent.VK_DOWN);\n+\n+                downValue = ((Date) spinner.getValue()).getTime();\n+\n+                long keyIncrement = upValue - downValue;\n+\n+                if ((keyIncrement == EXPECTED_VALUE_2_DAYS) &&\n+                        (mouseIncrement == EXPECTED_VALUE_2_DAYS)) {\n+                    System.out.println(\"Test passed\");\n+                } else {\n+                    throw new RuntimeException(\"Test failed because keyIncrement: \" +\n+                            keyIncrement + \" and mouseIncrement: \" +\n+                            mouseIncrement + \" should match with the expected value \" +\n+                            EXPECTED_VALUE_2_DAYS + \" for LnF \" + laf);\n+                }\n+\n+            } finally {\n+                SwingUtilities.invokeAndWait(JSpinnerMouseAndKeyPressTest::disposeFrame);\n+            }\n+        }\n+    }\n+\n+    private static void disposeFrame() {\n+        if (frame != null) {\n+            frame.dispose();\n+            frame = null;\n+        }\n+    }\n+\n+    private static class DateModel extends SpinnerDateModel {\n+\n+        private final Calendar cal = Calendar.getInstance();\n+\n+        @Override\n+        public Object getNextValue() {\n+            cal.setTime(getDate());\n+            cal.add(Calendar.DAY_OF_MONTH, 2); \/\/ Increment two days\n+            return cal.getTime();\n+        }\n+\n+        @Override\n+        public Object getPreviousValue() {\n+            cal.setTime(getDate());\n+            cal.add(Calendar.DAY_OF_MONTH, -2); \/\/ Decrement two days\n+            return cal.getTime();\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JSpinner\/4515999\/JSpinnerMouseAndKeyPressTest.java","additions":169,"deletions":0,"binary":false,"changes":169,"status":"added"}]}