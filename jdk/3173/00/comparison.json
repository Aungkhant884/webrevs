{"files":[{"patch":"@@ -688,0 +688,4 @@\n+                if (dl.hasUnreachableError()) {\n+                    guts = Wrap.methodUnreachableWrap(compileSource);\n+                    dl = trialCompile(guts);\n+                }\n","filename":"src\/jdk.jshell\/share\/classes\/jdk\/jshell\/Eval.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+import com.sun.tools.javac.code.Source;\n@@ -31,1 +32,0 @@\n-import com.sun.tools.javac.parser.ParserFactory;\n@@ -35,1 +35,0 @@\n-import com.sun.tools.javac.resources.CompilerProperties;\n@@ -46,0 +45,1 @@\n+import static com.sun.tools.javac.parser.Tokens.TokenKind.SWITCH;\n@@ -62,1 +62,0 @@\n-import static com.sun.tools.javac.parser.Tokens.TokenKind.IDENTIFIER;\n@@ -74,0 +73,1 @@\n+    private final Source source;\n@@ -75,1 +75,1 @@\n-    public ReplParser(ParserFactory fac,\n+    public ReplParser(ReplParserFactory fac,\n@@ -83,0 +83,1 @@\n+        this.source = fac.source;\n@@ -179,0 +180,5 @@\n+            case SWITCH:\n+                if (token.kind == SWITCH && !Feature.SWITCH_EXPRESSION.allowedInSource(source)) {\n+                    return List.<JCTree>of(parseStatement());\n+                }\n+                \/\/fall-through\n","filename":"src\/jdk.jshell\/share\/classes\/jdk\/jshell\/ReplParser.java","additions":10,"deletions":4,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+import com.sun.tools.javac.code.Source;\n@@ -52,0 +53,1 @@\n+            final Source source;\n@@ -57,0 +59,1 @@\n+        this.source = Source.instance(context);\n","filename":"src\/jdk.jshell\/share\/classes\/jdk\/jshell\/ReplParserFactory.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -88,19 +88,0 @@\n-    @Test\n-    public void testRawString() {\n-        \/\/ can't set --enable-preview for local, ignore\n-    }\n-\n-    @Test\n-    public void testSwitchExpression() {\n-        \/\/ can't set --enable-preview for local, ignore\n-    }\n-\n-    @Test\n-    public void testSwitchExpressionCompletion() {\n-        \/\/ can't set --enable-preview for local, ignore\n-    }\n-\n-    @Override\n-    public void testRecords() {\n-        \/\/ can't set --enable-preview for local, ignore\n-    }\n","filename":"test\/langtools\/jdk\/jshell\/ToolLocalSimpleTest.java","additions":0,"deletions":19,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 8153716 8143955 8151754 8150382 8153920 8156910 8131024 8160089 8153897 8167128 8154513 8170015 8170368 8172102 8172103  8165405 8173073 8173848 8174041 8173916 8174028 8174262 8174797 8177079 8180508 8177466 8172154 8192979 8191842 8198573 8198801 8210596 8210959 8215099 8199623 8236715 8239536 8247456 8246774\n+ * @bug 8153716 8143955 8151754 8150382 8153920 8156910 8131024 8160089 8153897 8167128 8154513 8170015 8170368 8172102 8172103  8165405 8173073 8173848 8174041 8173916 8174028 8174262 8174797 8177079 8180508 8177466 8172154 8192979 8191842 8198573 8198801 8210596 8210959 8215099 8199623 8236715 8239536 8247456 8246774 8238173\n@@ -943,0 +943,16 @@\n+\n+    @Test\n+    public void testSwitchStatementExpressionDisambiguation() {\n+        test(false, new String[]{\"--no-startup\"},\n+                (a) -> assertCommand(a, \"switch (0) { default -> 0; }\", \"$1 ==> 0\"),\n+                (a) -> assertCommand(a, \"int i;\", \"i ==> 0\"),\n+                (a) -> assertCommand(a, \"switch (0) { case 0 -> i = 1; }\", \"\"),\n+                (a) -> assertCommand(a, \"i\", \"i ==> 1\"),\n+                (a) -> assertCommandOutputStartsWith(a, \"switch (0) { default -> throw new IllegalStateException(); }\", \"|  Exception java.lang.IllegalStateException\")\n+                );\n+        test(false, new String[]{\"--no-startup\", \"-C-source\", \"-C8\"},\n+                (a) -> assertCommand(a, \"int i;\", \"i ==> 0\"),\n+                (a) -> assertCommand(a, \"switch (0) { default: i = 1; }\", \"\"),\n+                (a) -> assertCommand(a, \"i\", \"i ==> 1\")\n+                );\n+    }\n","filename":"test\/langtools\/jdk\/jshell\/ToolSimpleTest.java","additions":17,"deletions":1,"binary":false,"changes":18,"status":"modified"}]}