{"files":[{"patch":"@@ -2603,1 +2603,1 @@\n-        return (byte)(ROR_scalar(a,b));\n+        return (byte)(ROR_scalar(a, b));\n@@ -2645,1 +2645,1 @@\n-        return (byte)(ROL_scalar(a,b));\n+        return (byte)(ROL_scalar(a, b));\n@@ -2814,1 +2814,1 @@\n-        return (byte)(ROR_scalar(a,CONST_SHIFT));\n+        return (byte)(ROR_scalar(a, CONST_SHIFT));\n@@ -2855,1 +2855,1 @@\n-        return (byte)(ROL_scalar(a,CONST_SHIFT));\n+        return (byte)(ROL_scalar(a, CONST_SHIFT));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Byte128VectorTests.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2603,1 +2603,1 @@\n-        return (byte)(ROR_scalar(a,b));\n+        return (byte)(ROR_scalar(a, b));\n@@ -2645,1 +2645,1 @@\n-        return (byte)(ROL_scalar(a,b));\n+        return (byte)(ROL_scalar(a, b));\n@@ -2814,1 +2814,1 @@\n-        return (byte)(ROR_scalar(a,CONST_SHIFT));\n+        return (byte)(ROR_scalar(a, CONST_SHIFT));\n@@ -2855,1 +2855,1 @@\n-        return (byte)(ROL_scalar(a,CONST_SHIFT));\n+        return (byte)(ROL_scalar(a, CONST_SHIFT));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Byte256VectorTests.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2603,1 +2603,1 @@\n-        return (byte)(ROR_scalar(a,b));\n+        return (byte)(ROR_scalar(a, b));\n@@ -2645,1 +2645,1 @@\n-        return (byte)(ROL_scalar(a,b));\n+        return (byte)(ROL_scalar(a, b));\n@@ -2814,1 +2814,1 @@\n-        return (byte)(ROR_scalar(a,CONST_SHIFT));\n+        return (byte)(ROR_scalar(a, CONST_SHIFT));\n@@ -2855,1 +2855,1 @@\n-        return (byte)(ROL_scalar(a,CONST_SHIFT));\n+        return (byte)(ROL_scalar(a, CONST_SHIFT));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Byte512VectorTests.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2603,1 +2603,1 @@\n-        return (byte)(ROR_scalar(a,b));\n+        return (byte)(ROR_scalar(a, b));\n@@ -2645,1 +2645,1 @@\n-        return (byte)(ROL_scalar(a,b));\n+        return (byte)(ROL_scalar(a, b));\n@@ -2814,1 +2814,1 @@\n-        return (byte)(ROR_scalar(a,CONST_SHIFT));\n+        return (byte)(ROR_scalar(a, CONST_SHIFT));\n@@ -2855,1 +2855,1 @@\n-        return (byte)(ROL_scalar(a,CONST_SHIFT));\n+        return (byte)(ROL_scalar(a, CONST_SHIFT));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Byte64VectorTests.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2608,1 +2608,1 @@\n-        return (byte)(ROR_scalar(a,b));\n+        return (byte)(ROR_scalar(a, b));\n@@ -2650,1 +2650,1 @@\n-        return (byte)(ROL_scalar(a,b));\n+        return (byte)(ROL_scalar(a, b));\n@@ -2819,1 +2819,1 @@\n-        return (byte)(ROR_scalar(a,CONST_SHIFT));\n+        return (byte)(ROR_scalar(a, CONST_SHIFT));\n@@ -2860,1 +2860,1 @@\n-        return (byte)(ROL_scalar(a,CONST_SHIFT));\n+        return (byte)(ROL_scalar(a, CONST_SHIFT));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/ByteMaxVectorTests.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2568,1 +2568,1 @@\n-        return (int)(ROR_scalar(a,b));\n+        return (int)(ROR_scalar(a, b));\n@@ -2610,1 +2610,1 @@\n-        return (int)(ROL_scalar(a,b));\n+        return (int)(ROL_scalar(a, b));\n@@ -2779,1 +2779,1 @@\n-        return (int)(ROR_scalar(a,CONST_SHIFT));\n+        return (int)(ROR_scalar(a, CONST_SHIFT));\n@@ -2820,1 +2820,1 @@\n-        return (int)(ROL_scalar(a,CONST_SHIFT));\n+        return (int)(ROL_scalar(a, CONST_SHIFT));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Int128VectorTests.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2568,1 +2568,1 @@\n-        return (int)(ROR_scalar(a,b));\n+        return (int)(ROR_scalar(a, b));\n@@ -2610,1 +2610,1 @@\n-        return (int)(ROL_scalar(a,b));\n+        return (int)(ROL_scalar(a, b));\n@@ -2779,1 +2779,1 @@\n-        return (int)(ROR_scalar(a,CONST_SHIFT));\n+        return (int)(ROR_scalar(a, CONST_SHIFT));\n@@ -2820,1 +2820,1 @@\n-        return (int)(ROL_scalar(a,CONST_SHIFT));\n+        return (int)(ROL_scalar(a, CONST_SHIFT));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Int256VectorTests.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2568,1 +2568,1 @@\n-        return (int)(ROR_scalar(a,b));\n+        return (int)(ROR_scalar(a, b));\n@@ -2610,1 +2610,1 @@\n-        return (int)(ROL_scalar(a,b));\n+        return (int)(ROL_scalar(a, b));\n@@ -2779,1 +2779,1 @@\n-        return (int)(ROR_scalar(a,CONST_SHIFT));\n+        return (int)(ROR_scalar(a, CONST_SHIFT));\n@@ -2820,1 +2820,1 @@\n-        return (int)(ROL_scalar(a,CONST_SHIFT));\n+        return (int)(ROL_scalar(a, CONST_SHIFT));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Int512VectorTests.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2568,1 +2568,1 @@\n-        return (int)(ROR_scalar(a,b));\n+        return (int)(ROR_scalar(a, b));\n@@ -2610,1 +2610,1 @@\n-        return (int)(ROL_scalar(a,b));\n+        return (int)(ROL_scalar(a, b));\n@@ -2779,1 +2779,1 @@\n-        return (int)(ROR_scalar(a,CONST_SHIFT));\n+        return (int)(ROR_scalar(a, CONST_SHIFT));\n@@ -2820,1 +2820,1 @@\n-        return (int)(ROL_scalar(a,CONST_SHIFT));\n+        return (int)(ROL_scalar(a, CONST_SHIFT));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Int64VectorTests.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2573,1 +2573,1 @@\n-        return (int)(ROR_scalar(a,b));\n+        return (int)(ROR_scalar(a, b));\n@@ -2615,1 +2615,1 @@\n-        return (int)(ROL_scalar(a,b));\n+        return (int)(ROL_scalar(a, b));\n@@ -2784,1 +2784,1 @@\n-        return (int)(ROR_scalar(a,CONST_SHIFT));\n+        return (int)(ROR_scalar(a, CONST_SHIFT));\n@@ -2825,1 +2825,1 @@\n-        return (int)(ROL_scalar(a,CONST_SHIFT));\n+        return (int)(ROL_scalar(a, CONST_SHIFT));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/IntMaxVectorTests.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2590,1 +2590,1 @@\n-        return (long)(ROR_scalar(a,b));\n+        return (long)(ROR_scalar(a, b));\n@@ -2632,1 +2632,1 @@\n-        return (long)(ROL_scalar(a,b));\n+        return (long)(ROL_scalar(a, b));\n@@ -2801,1 +2801,1 @@\n-        return (long)(ROR_scalar(a,CONST_SHIFT));\n+        return (long)(ROR_scalar(a, CONST_SHIFT));\n@@ -2842,1 +2842,1 @@\n-        return (long)(ROL_scalar(a,CONST_SHIFT));\n+        return (long)(ROL_scalar(a, CONST_SHIFT));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Long128VectorTests.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2590,1 +2590,1 @@\n-        return (long)(ROR_scalar(a,b));\n+        return (long)(ROR_scalar(a, b));\n@@ -2632,1 +2632,1 @@\n-        return (long)(ROL_scalar(a,b));\n+        return (long)(ROL_scalar(a, b));\n@@ -2801,1 +2801,1 @@\n-        return (long)(ROR_scalar(a,CONST_SHIFT));\n+        return (long)(ROR_scalar(a, CONST_SHIFT));\n@@ -2842,1 +2842,1 @@\n-        return (long)(ROL_scalar(a,CONST_SHIFT));\n+        return (long)(ROL_scalar(a, CONST_SHIFT));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Long256VectorTests.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2590,1 +2590,1 @@\n-        return (long)(ROR_scalar(a,b));\n+        return (long)(ROR_scalar(a, b));\n@@ -2632,1 +2632,1 @@\n-        return (long)(ROL_scalar(a,b));\n+        return (long)(ROL_scalar(a, b));\n@@ -2801,1 +2801,1 @@\n-        return (long)(ROR_scalar(a,CONST_SHIFT));\n+        return (long)(ROR_scalar(a, CONST_SHIFT));\n@@ -2842,1 +2842,1 @@\n-        return (long)(ROL_scalar(a,CONST_SHIFT));\n+        return (long)(ROL_scalar(a, CONST_SHIFT));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Long512VectorTests.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2590,1 +2590,1 @@\n-        return (long)(ROR_scalar(a,b));\n+        return (long)(ROR_scalar(a, b));\n@@ -2632,1 +2632,1 @@\n-        return (long)(ROL_scalar(a,b));\n+        return (long)(ROL_scalar(a, b));\n@@ -2801,1 +2801,1 @@\n-        return (long)(ROR_scalar(a,CONST_SHIFT));\n+        return (long)(ROR_scalar(a, CONST_SHIFT));\n@@ -2842,1 +2842,1 @@\n-        return (long)(ROL_scalar(a,CONST_SHIFT));\n+        return (long)(ROL_scalar(a, CONST_SHIFT));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Long64VectorTests.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2595,1 +2595,1 @@\n-        return (long)(ROR_scalar(a,b));\n+        return (long)(ROR_scalar(a, b));\n@@ -2637,1 +2637,1 @@\n-        return (long)(ROL_scalar(a,b));\n+        return (long)(ROL_scalar(a, b));\n@@ -2806,1 +2806,1 @@\n-        return (long)(ROR_scalar(a,CONST_SHIFT));\n+        return (long)(ROR_scalar(a, CONST_SHIFT));\n@@ -2847,1 +2847,1 @@\n-        return (long)(ROL_scalar(a,CONST_SHIFT));\n+        return (long)(ROL_scalar(a, CONST_SHIFT));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/LongMaxVectorTests.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2593,1 +2593,1 @@\n-        return (short)(ROR_scalar(a,b));\n+        return (short)(ROR_scalar(a, b));\n@@ -2635,1 +2635,1 @@\n-        return (short)(ROL_scalar(a,b));\n+        return (short)(ROL_scalar(a, b));\n@@ -2804,1 +2804,1 @@\n-        return (short)(ROR_scalar(a,CONST_SHIFT));\n+        return (short)(ROR_scalar(a, CONST_SHIFT));\n@@ -2845,1 +2845,1 @@\n-        return (short)(ROL_scalar(a,CONST_SHIFT));\n+        return (short)(ROL_scalar(a, CONST_SHIFT));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Short128VectorTests.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2593,1 +2593,1 @@\n-        return (short)(ROR_scalar(a,b));\n+        return (short)(ROR_scalar(a, b));\n@@ -2635,1 +2635,1 @@\n-        return (short)(ROL_scalar(a,b));\n+        return (short)(ROL_scalar(a, b));\n@@ -2804,1 +2804,1 @@\n-        return (short)(ROR_scalar(a,CONST_SHIFT));\n+        return (short)(ROR_scalar(a, CONST_SHIFT));\n@@ -2845,1 +2845,1 @@\n-        return (short)(ROL_scalar(a,CONST_SHIFT));\n+        return (short)(ROL_scalar(a, CONST_SHIFT));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Short256VectorTests.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2593,1 +2593,1 @@\n-        return (short)(ROR_scalar(a,b));\n+        return (short)(ROR_scalar(a, b));\n@@ -2635,1 +2635,1 @@\n-        return (short)(ROL_scalar(a,b));\n+        return (short)(ROL_scalar(a, b));\n@@ -2804,1 +2804,1 @@\n-        return (short)(ROR_scalar(a,CONST_SHIFT));\n+        return (short)(ROR_scalar(a, CONST_SHIFT));\n@@ -2845,1 +2845,1 @@\n-        return (short)(ROL_scalar(a,CONST_SHIFT));\n+        return (short)(ROL_scalar(a, CONST_SHIFT));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Short512VectorTests.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2593,1 +2593,1 @@\n-        return (short)(ROR_scalar(a,b));\n+        return (short)(ROR_scalar(a, b));\n@@ -2635,1 +2635,1 @@\n-        return (short)(ROL_scalar(a,b));\n+        return (short)(ROL_scalar(a, b));\n@@ -2804,1 +2804,1 @@\n-        return (short)(ROR_scalar(a,CONST_SHIFT));\n+        return (short)(ROR_scalar(a, CONST_SHIFT));\n@@ -2845,1 +2845,1 @@\n-        return (short)(ROL_scalar(a,CONST_SHIFT));\n+        return (short)(ROL_scalar(a, CONST_SHIFT));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Short64VectorTests.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2598,1 +2598,1 @@\n-        return (short)(ROR_scalar(a,b));\n+        return (short)(ROR_scalar(a, b));\n@@ -2640,1 +2640,1 @@\n-        return (short)(ROL_scalar(a,b));\n+        return (short)(ROL_scalar(a, b));\n@@ -2809,1 +2809,1 @@\n-        return (short)(ROR_scalar(a,CONST_SHIFT));\n+        return (short)(ROR_scalar(a, CONST_SHIFT));\n@@ -2850,1 +2850,1 @@\n-        return (short)(ROL_scalar(a,CONST_SHIFT));\n+        return (short)(ROL_scalar(a, CONST_SHIFT));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/ShortMaxVectorTests.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -446,2 +446,2 @@\n-gen_shift_op  \"ROR\" \"ROR_scalar(a,b)\" \"BITWISE\"\n-gen_shift_op  \"ROL\" \"ROL_scalar(a,b)\" \"BITWISE\"\n+gen_shift_op  \"ROR\" \"ROR_scalar(a, b)\" \"BITWISE\"\n+gen_shift_op  \"ROL\" \"ROL_scalar(a, b)\" \"BITWISE\"\n@@ -455,2 +455,2 @@\n-gen_shift_cst_op  \"ROR\" \"ROR_scalar(a,CONST_SHIFT)\" \"BITWISE\"\n-gen_shift_cst_op  \"ROL\" \"ROL_scalar(a,CONST_SHIFT)\" \"BITWISE\"\n+gen_shift_cst_op  \"ROR\" \"ROR_scalar(a, CONST_SHIFT)\" \"BITWISE\"\n+gen_shift_cst_op  \"ROL\" \"ROL_scalar(a, CONST_SHIFT)\" \"BITWISE\"\n","filename":"test\/jdk\/jdk\/incubator\/vector\/gen-template.sh","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -4,12 +4,1 @@\n-        $type$[] a = fa.apply(SPECIES.length());\n-        $type$[] r = fr.apply(SPECIES.length());\n-        boolean[] mask = fm.apply(SPECIES.length());\n-        VectorMask<$Wideboxtype$> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n-\n-        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n-            for (int i = 0; i < a.length; i += SPECIES.length()) {\n-                $abstractvectortype$ av = $abstractvectortype$.fromArray(SPECIES, a, i);\n-                av.lanewise(VectorOperators.[[TEST]], CONST_SHIFT, vmask).intoArray(r, i);\n-            }\n-        }\n-\n+[[KERNEL]]\n","filename":"test\/jdk\/jdk\/incubator\/vector\/templates\/Unit-Shift-Masked-Const-op.template","additions":1,"deletions":12,"binary":false,"changes":13,"status":"modified"}]}