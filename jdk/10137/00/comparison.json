{"files":[{"patch":"@@ -275,1 +275,1 @@\n-                                         Address dst, Register val, Register tmp1, Register tmp2) {\n+                                         Address dst, Register val, Register tmp1, Register tmp2, Register tmp3) {\n@@ -278,2 +278,2 @@\n-    if (dst.base() != x13) {\n-      __ mv(x13, dst.base());\n+    if (dst.base() != tmp3) {\n+      __ mv(tmp3, dst.base());\n@@ -282,1 +282,1 @@\n-    __ la(x13, dst);\n+    __ la(tmp3, dst);\n@@ -286,1 +286,1 @@\n-                       x13 \/* obj *\/,\n+                       tmp3 \/* obj *\/,\n@@ -294,1 +294,1 @@\n-    BarrierSetAssembler::store_at(masm, decorators, type, Address(x13, 0), noreg, noreg, noreg);\n+    BarrierSetAssembler::store_at(masm, decorators, type, Address(tmp3, 0), noreg, noreg, noreg, noreg);\n@@ -302,1 +302,1 @@\n-    BarrierSetAssembler::store_at(masm, decorators, type, Address(x13, 0), val, noreg, noreg);\n+    BarrierSetAssembler::store_at(masm, decorators, type, Address(tmp3, 0), val, noreg, noreg, noreg);\n@@ -304,1 +304,1 @@\n-                          x13 \/* store_adr *\/,\n+                          tmp3 \/* store_adr *\/,\n","filename":"src\/hotspot\/cpu\/riscv\/gc\/g1\/g1BarrierSetAssembler_riscv.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -63,1 +63,1 @@\n-                            Address dst, Register val, Register tmp1, Register tmp2);\n+                            Address dst, Register val, Register tmp1, Register tmp2, Register tmp3);\n","filename":"src\/hotspot\/cpu\/riscv\/gc\/g1\/g1BarrierSetAssembler_riscv.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -82,1 +82,1 @@\n-                                   Address dst, Register val, Register tmp1, Register tmp2) {\n+                                   Address dst, Register val, Register tmp1, Register tmp2, Register tmp3) {\n","filename":"src\/hotspot\/cpu\/riscv\/gc\/shared\/barrierSetAssembler_riscv.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -55,1 +55,1 @@\n-                        Address dst, Register val, Register tmp1, Register tmp2);\n+                        Address dst, Register val, Register tmp1, Register tmp2, Register tmp3);\n","filename":"src\/hotspot\/cpu\/riscv\/gc\/shared\/barrierSetAssembler_riscv.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -91,1 +91,1 @@\n-                                                Address dst, Register val, Register tmp1, Register tmp2) {\n+                                                Address dst, Register val, Register tmp1, Register tmp2, Register tmp3) {\n@@ -98,1 +98,1 @@\n-  BarrierSetAssembler::store_at(masm, decorators, type, dst, val, noreg, noreg);\n+  BarrierSetAssembler::store_at(masm, decorators, type, dst, val, noreg, noreg, noreg);\n@@ -102,1 +102,1 @@\n-      store_check(masm, dst.base(), x13);\n+      store_check(masm, dst.base(), tmp3);\n@@ -104,2 +104,2 @@\n-      __ la(x13, dst);\n-      store_check(masm, x13, t0);\n+      __ la(tmp3, dst);\n+      store_check(masm, tmp3, t0);\n","filename":"src\/hotspot\/cpu\/riscv\/gc\/shared\/cardTableBarrierSetAssembler_riscv.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- * Copyright (c) 2020, 2021, Huawei Technologies Co., Ltd. All rights reserved.\n+ * Copyright (c) 2020, 2022, Huawei Technologies Co., Ltd. All rights reserved.\n@@ -39,1 +39,1 @@\n-                            Address dst, Register val, Register tmp1, Register tmp2);\n+                            Address dst, Register val, Register tmp1, Register tmp2, Register tmp3);\n","filename":"src\/hotspot\/cpu\/riscv\/gc\/shared\/cardTableBarrierSetAssembler_riscv.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-                                         Address dst, Register val, Register tmp1, Register tmp2) {\n+                                         Address dst, Register val, Register tmp1, Register tmp2, Register tmp3) {\n@@ -50,1 +50,1 @@\n-    oop_store_at(masm, decorators, type, dst, val, tmp1, tmp2);\n+    oop_store_at(masm, decorators, type, dst, val, tmp1, tmp2, tmp3);\n@@ -52,1 +52,1 @@\n-    BarrierSetAssembler::store_at(masm, decorators, type, dst, val, tmp1, tmp2);\n+    BarrierSetAssembler::store_at(masm, decorators, type, dst, val, tmp1, tmp2, tmp3);\n","filename":"src\/hotspot\/cpu\/riscv\/gc\/shared\/modRefBarrierSetAssembler_riscv.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- * Copyright (c) 2020, 2021, Huawei Technologies Co., Ltd. All rights reserved.\n+ * Copyright (c) 2020, 2022, Huawei Technologies Co., Ltd. All rights reserved.\n@@ -44,1 +44,1 @@\n-                            Address dst, Register val, Register tmp1, Register tmp2) = 0;\n+                            Address dst, Register val, Register tmp1, Register tmp2, Register tmp3) = 0;\n@@ -52,1 +52,1 @@\n-                        Address dst, Register val, Register tmp1, Register tmp2);\n+                        Address dst, Register val, Register tmp1, Register tmp2, Register tmp3);\n","filename":"src\/hotspot\/cpu\/riscv\/gc\/shared\/modRefBarrierSetAssembler_riscv.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -397,1 +397,1 @@\n-                                             Address dst, Register val, Register tmp1, Register tmp2) {\n+                                             Address dst, Register val, Register tmp1, Register tmp2, Register tmp3) {\n@@ -400,1 +400,1 @@\n-    BarrierSetAssembler::store_at(masm, decorators, type, dst, val, tmp1, tmp2);\n+    BarrierSetAssembler::store_at(masm, decorators, type, dst, val, tmp1, tmp2, tmp3);\n@@ -406,2 +406,2 @@\n-    if (dst.base() != x13) {\n-      __ mv(x13, dst.base());\n+    if (dst.base() != tmp3) {\n+      __ mv(tmp3, dst.base());\n@@ -410,1 +410,1 @@\n-    __ la(x13, dst);\n+    __ la(tmp3, dst);\n@@ -414,1 +414,1 @@\n-                               x13 \/* obj *\/,\n+                               tmp3 \/* obj *\/,\n@@ -422,1 +422,1 @@\n-    BarrierSetAssembler::store_at(masm, decorators, type, Address(x13, 0), noreg, noreg, noreg);\n+    BarrierSetAssembler::store_at(masm, decorators, type, Address(tmp3, 0), noreg, noreg, noreg, noreg);\n@@ -431,1 +431,1 @@\n-    BarrierSetAssembler::store_at(masm, decorators, type, Address(x13, 0), val, noreg, noreg);\n+    BarrierSetAssembler::store_at(masm, decorators, type, Address(tmp3, 0), val, noreg, noreg, noreg);\n","filename":"src\/hotspot\/cpu\/riscv\/gc\/shenandoah\/shenandoahBarrierSetAssembler_riscv.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -81,1 +81,1 @@\n-                        Address dst, Register val, Register tmp1, Register tmp2);\n+                        Address dst, Register val, Register tmp1, Register tmp2, Register tmp3);\n","filename":"src\/hotspot\/cpu\/riscv\/gc\/shenandoah\/shenandoahBarrierSetAssembler_riscv.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -114,1 +114,2 @@\n-                                    Register tmp2) {\n+                                    Register tmp2,\n+                                    Register tmp3) {\n@@ -122,1 +123,1 @@\n-      \/\/ tmp1 and tmp2 are often set to noreg.\n+      \/\/ tmp1, tmp2 and tmp3 are often set to noreg.\n@@ -137,1 +138,1 @@\n-  BarrierSetAssembler::store_at(masm, decorators, type, dst, val, tmp1, tmp2);\n+  BarrierSetAssembler::store_at(masm, decorators, type, dst, val, tmp1, tmp2, noreg);\n","filename":"src\/hotspot\/cpu\/riscv\/gc\/z\/zBarrierSetAssembler_riscv.cpp","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -64,1 +64,2 @@\n-                        Register tmp2);\n+                        Register tmp2,\n+                        Register tmp3);\n","filename":"src\/hotspot\/cpu\/riscv\/gc\/z\/zBarrierSetAssembler_riscv.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1783,1 +1783,1 @@\n-                                     Register tmp1, Register thread_tmp) {\n+                                     Register tmp1, Register tmp2, Register tmp3) {\n@@ -1788,1 +1788,1 @@\n-    bs->BarrierSetAssembler::store_at(this, decorators, type, dst, src, tmp1, thread_tmp);\n+    bs->BarrierSetAssembler::store_at(this, decorators, type, dst, src, tmp1, tmp2, tmp3);\n@@ -1790,1 +1790,1 @@\n-    bs->store_at(this, decorators, type, dst, src, tmp1, thread_tmp);\n+    bs->store_at(this, decorators, type, dst, src, tmp1, tmp2, tmp3);\n@@ -1958,2 +1958,2 @@\n-                                    Register thread_tmp, DecoratorSet decorators) {\n-  access_store_at(T_OBJECT, IN_HEAP | decorators, dst, src, tmp1, thread_tmp);\n+                                    Register tmp2, Register tmp3, DecoratorSet decorators) {\n+  access_store_at(T_OBJECT, IN_HEAP | decorators, dst, src, tmp1, tmp2, tmp3);\n@@ -1974,1 +1974,1 @@\n-  access_store_at(T_OBJECT, IN_HEAP, dst, noreg, noreg, noreg);\n+  access_store_at(T_OBJECT, IN_HEAP, dst, noreg, noreg, noreg, noreg);\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -188,1 +188,1 @@\n-                       Register src, Register tmp1, Register thread_tmp);\n+                       Register src, Register tmp1, Register tmp2, Register tmp3);\n@@ -208,1 +208,1 @@\n-                      Register thread_tmp = noreg, DecoratorSet decorators = 0);\n+                      Register tmp2 = noreg, Register tmp3 = noreg, DecoratorSet decorators = 0);\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1497,1 +1497,1 @@\n-    __ store_heap_oop(Address(to, 0), copied_oop, noreg, noreg, AS_RAW);  \/\/ store the oop\n+    __ store_heap_oop(Address(to, 0), copied_oop, noreg, noreg, noreg, AS_RAW); \/\/ store the oop\n","filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -133,1 +133,1 @@\n-  __ store_heap_oop(dst, val, x29, x11, decorators);\n+  __ store_heap_oop(dst, val, x29, x11, x13, decorators);\n@@ -1044,1 +1044,1 @@\n-  __ access_store_at(T_INT, IN_HEAP | IS_ARRAY, Address(t0, 0), x10, noreg, noreg);\n+  __ access_store_at(T_INT, IN_HEAP | IS_ARRAY, Address(t0, 0), x10, noreg, noreg, noreg);\n@@ -1057,1 +1057,1 @@\n-  __ access_store_at(T_LONG, IN_HEAP | IS_ARRAY, Address(t0, 0), x10, noreg, noreg);\n+  __ access_store_at(T_LONG, IN_HEAP | IS_ARRAY, Address(t0, 0), x10, noreg, noreg, noreg);\n@@ -1070,1 +1070,1 @@\n-  __ access_store_at(T_FLOAT, IN_HEAP | IS_ARRAY, Address(t0, 0), noreg \/* ftos *\/, noreg, noreg);\n+  __ access_store_at(T_FLOAT, IN_HEAP | IS_ARRAY, Address(t0, 0), noreg \/* ftos *\/, noreg, noreg, noreg);\n@@ -1083,1 +1083,1 @@\n-  __ access_store_at(T_DOUBLE, IN_HEAP | IS_ARRAY, Address(t0, 0), noreg \/* dtos *\/, noreg, noreg);\n+  __ access_store_at(T_DOUBLE, IN_HEAP | IS_ARRAY, Address(t0, 0), noreg \/* dtos *\/, noreg, noreg, noreg);\n@@ -1164,1 +1164,1 @@\n-  __ access_store_at(T_BYTE, IN_HEAP | IS_ARRAY, Address(x11, 0), x10, noreg, noreg);\n+  __ access_store_at(T_BYTE, IN_HEAP | IS_ARRAY, Address(x11, 0), x10, noreg, noreg, noreg);\n@@ -1178,1 +1178,1 @@\n-  __ access_store_at(T_CHAR, IN_HEAP | IS_ARRAY, Address(t0, 0), x10, noreg, noreg);\n+  __ access_store_at(T_CHAR, IN_HEAP | IS_ARRAY, Address(t0, 0), x10, noreg, noreg, noreg);\n@@ -2670,1 +2670,1 @@\n-    __ access_store_at(T_BYTE, IN_HEAP, field, x10, noreg, noreg);\n+    __ access_store_at(T_BYTE, IN_HEAP, field, x10, noreg, noreg, noreg);\n@@ -2690,1 +2690,1 @@\n-    __ access_store_at(T_BOOLEAN, IN_HEAP, field, x10, noreg, noreg);\n+    __ access_store_at(T_BOOLEAN, IN_HEAP, field, x10, noreg, noreg, noreg);\n@@ -2731,1 +2731,1 @@\n-    __ access_store_at(T_INT, IN_HEAP, field, x10, noreg, noreg);\n+    __ access_store_at(T_INT, IN_HEAP, field, x10, noreg, noreg, noreg);\n@@ -2751,1 +2751,1 @@\n-    __ access_store_at(T_CHAR, IN_HEAP, field, x10, noreg, noreg);\n+    __ access_store_at(T_CHAR, IN_HEAP, field, x10, noreg, noreg, noreg);\n@@ -2771,1 +2771,1 @@\n-    __ access_store_at(T_SHORT, IN_HEAP, field, x10, noreg, noreg);\n+    __ access_store_at(T_SHORT, IN_HEAP, field, x10, noreg, noreg, noreg);\n@@ -2791,1 +2791,1 @@\n-    __ access_store_at(T_LONG, IN_HEAP, field, x10, noreg, noreg);\n+    __ access_store_at(T_LONG, IN_HEAP, field, x10, noreg, noreg, noreg);\n@@ -2811,1 +2811,1 @@\n-    __ access_store_at(T_FLOAT, IN_HEAP, field, noreg \/* ftos *\/, noreg, noreg);\n+    __ access_store_at(T_FLOAT, IN_HEAP, field, noreg \/* ftos *\/, noreg, noreg, noreg);\n@@ -2833,1 +2833,1 @@\n-    __ access_store_at(T_DOUBLE, IN_HEAP, field, noreg \/* dtos *\/, noreg, noreg);\n+    __ access_store_at(T_DOUBLE, IN_HEAP, field, noreg \/* dtos *\/, noreg, noreg, noreg);\n@@ -2970,1 +2970,1 @@\n-      __ access_store_at(T_LONG, IN_HEAP, field, x10, noreg, noreg);\n+      __ access_store_at(T_LONG, IN_HEAP, field, x10, noreg, noreg, noreg);\n@@ -2973,1 +2973,1 @@\n-      __ access_store_at(T_INT, IN_HEAP, field, x10, noreg, noreg);\n+      __ access_store_at(T_INT, IN_HEAP, field, x10, noreg, noreg, noreg);\n@@ -2976,1 +2976,1 @@\n-      __ access_store_at(T_BOOLEAN, IN_HEAP, field, x10, noreg, noreg);\n+      __ access_store_at(T_BOOLEAN, IN_HEAP, field, x10, noreg, noreg, noreg);\n@@ -2979,1 +2979,1 @@\n-      __ access_store_at(T_BYTE, IN_HEAP, field, x10, noreg, noreg);\n+      __ access_store_at(T_BYTE, IN_HEAP, field, x10, noreg, noreg, noreg);\n@@ -2982,1 +2982,1 @@\n-      __ access_store_at(T_SHORT, IN_HEAP, field, x10, noreg, noreg);\n+      __ access_store_at(T_SHORT, IN_HEAP, field, x10, noreg, noreg, noreg);\n@@ -2985,1 +2985,1 @@\n-      __ access_store_at(T_CHAR, IN_HEAP, field, x10, noreg, noreg);\n+      __ access_store_at(T_CHAR, IN_HEAP, field, x10, noreg, noreg, noreg);\n@@ -2988,1 +2988,1 @@\n-      __ access_store_at(T_FLOAT, IN_HEAP, field, noreg \/* ftos *\/, noreg, noreg);\n+      __ access_store_at(T_FLOAT, IN_HEAP, field, noreg \/* ftos *\/, noreg, noreg, noreg);\n@@ -2991,1 +2991,1 @@\n-      __ access_store_at(T_DOUBLE, IN_HEAP, field, noreg \/* dtos *\/, noreg, noreg);\n+      __ access_store_at(T_DOUBLE, IN_HEAP, field, noreg \/* dtos *\/, noreg, noreg, noreg);\n","filename":"src\/hotspot\/cpu\/riscv\/templateTable_riscv.cpp","additions":23,"deletions":23,"binary":false,"changes":46,"status":"modified"}]}