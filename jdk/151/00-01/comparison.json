{"files":[{"patch":"@@ -825,2 +825,1 @@\n-  assert(current_thread == java_thread ||\n-         SafepointSynchronize::is_at_safepoint() ||\n+  assert(SafepointSynchronize::is_at_safepoint() ||\n","filename":"src\/hotspot\/share\/prims\/jvmtiEnvBase.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -222,2 +222,1 @@\n-  assert(current_thread == get_thread() ||\n-         SafepointSynchronize::is_at_safepoint() ||\n+  assert(SafepointSynchronize::is_at_safepoint() ||\n","filename":"src\/hotspot\/share\/prims\/jvmtiThreadState.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -86,1 +86,1 @@\n-  int _result_count[2][HandshakeState::ProcessResult::_number_states];\n+  int _result_count[2][HandshakeState::_number_states];\n@@ -107,1 +107,1 @@\n-    for (int i = 0; i < HandshakeState::ProcessResult::_number_states; i++) {\n+    for (int i = 0; i < HandshakeState::_number_states; i++) {\n@@ -117,1 +117,1 @@\n-    for (int i = 0; i < HandshakeState::ProcessResult::_number_states; i++) {\n+    for (int i = 0; i < HandshakeState::_number_states; i++) {\n@@ -134,1 +134,1 @@\n-    _result_count[current_result_pos()][pr.result()]++;\n+    _result_count[current_result_pos()][pr]++;\n@@ -195,1 +195,1 @@\n-static void log_handshake_info(jlong start_time_ns, const char* name, int targets, int vmt_executed, const char* extra = NULL) {\n+static void log_handshake_info(jlong start_time_ns, const char* name, int targets, int requester_executed, const char* extra = NULL) {\n@@ -198,1 +198,1 @@\n-    log_info(handshake)(\"Handshake \\\"%s\\\", Targeted threads: %d, Executed by targeted threads: %d, Total completion time: \" JLONG_FORMAT \" ns%s%s\",\n+    log_info(handshake)(\"Handshake \\\"%s\\\", Targeted threads: %d, Executed by requesting thread: %d, Total completion time: \" JLONG_FORMAT \" ns%s%s\",\n@@ -200,1 +200,1 @@\n-                        targets - vmt_executed,\n+                        requester_executed,\n@@ -244,1 +244,1 @@\n-        HandshakeState::ProcessResult pr = thr->handshake_state()->try_process();\n+        HandshakeState::ProcessResult pr = thr->handshake_state()->try_process(_op);\n@@ -246,1 +246,3 @@\n-        executed_by_driver += pr.processed();\n+        if (pr == HandshakeState::_succeed) {\n+          executed_by_driver++;\n+        }\n@@ -271,0 +273,1 @@\n+    NoSafepointVerifier nsv;\n@@ -313,3 +316,4 @@\n-    HandshakeState::ProcessResult pr(0);\n-    pr = target->handshake_state()->try_process();\n-    executed_by_driver += pr.processed();\n+    HandshakeState::ProcessResult pr = target->handshake_state()->try_process(&op);\n+    if (pr == HandshakeState::_succeed) {\n+      executed_by_driver++;\n+    }\n@@ -459,1 +463,11 @@\n-HandshakeState::ProcessResult HandshakeState::try_process() {\n+const char* executioner_name(Thread* current_thread, Thread* handshakee, bool current_is_requester) {\n+  if (current_thread == handshakee) return \"self(JavaThread)\";\n+  if (current_is_requester) {\n+    if (current_thread->is_VM_thread()) return \"handshaker(VM Thread)\";\n+    else return \"handshaker(JavaThread)\";\n+  }\n+  if (current_thread->is_VM_thread()) return \"cooperative(VM Thread)\";\n+  else return \"cooperative(JavaThread)\";\n+}\n+\n+HandshakeState::ProcessResult HandshakeState::try_process(HandshakeOperation* match_op) {\n@@ -462,1 +476,1 @@\n-    return ProcessResult(HandshakeState::ProcessResult::_no_operation);\n+    return HandshakeState::_no_operation;\n@@ -467,1 +481,1 @@\n-    return ProcessResult(HandshakeState::ProcessResult::_not_safe);\n+    return HandshakeState::_not_safe;\n@@ -472,1 +486,1 @@\n-    return ProcessResult(HandshakeState::ProcessResult::_claim_failed);\n+    return HandshakeState::_claim_failed;\n@@ -480,1 +494,1 @@\n-    return ProcessResult(HandshakeState::ProcessResult::_not_safe);\n+    return HandshakeState::_not_safe;\n@@ -483,0 +497,3 @@\n+  Thread* current_thread = Thread::current();\n+\n+  HandshakeState::ProcessResult pr_ret = HandshakeState::_processed;\n@@ -484,0 +501,1 @@\n+\n@@ -489,2 +507,8 @@\n-      log_trace(handshake)(\"Processing handshake \" INTPTR_FORMAT \" by %s\", p2i(op), Thread::current()->is_VM_thread() ? \"VMThread\" : \"Handshaker\");\n-      _active_handshaker = Thread::current();\n+      log_trace(handshake)(\"Processing handshake \" INTPTR_FORMAT \" by %s\", p2i(op),\n+                           executioner_name(current_thread, _handshakee, op == match_op));\n+\n+      if (op == match_op) {\n+        pr_ret = HandshakeState::_succeed;\n+      }\n+\n+      _active_handshaker = current_thread;\n@@ -493,0 +517,1 @@\n+\n@@ -498,1 +523,6 @@\n-  return ProcessResult(executed);\n+\n+  log_trace(handshake)(\"Thread %s(\" INTPTR_FORMAT \") executed %d ops for JavaThread: \" INTPTR_FORMAT \" %s target op: \" INTPTR_FORMAT,\n+                       executioner_name(current_thread, _handshakee, pr_ret == HandshakeState::_succeed),\n+                       p2i(current_thread), executed, p2i(_handshakee),\n+                       pr_ret == HandshakeState::_succeed ? \"including\" : \"excluding\", p2i(match_op));\n+  return pr_ret;\n","filename":"src\/hotspot\/share\/runtime\/handshake.cpp","additions":50,"deletions":20,"binary":false,"changes":70,"status":"modified"},{"patch":"@@ -78,0 +78,1 @@\n+  Thread* _active_handshaker;\n@@ -101,3 +102,1 @@\n-  class ProcessResult {\n-   public:\n-    enum Result {\n+  enum ProcessResult {\n@@ -107,1 +106,2 @@\n-      _success,\n+      _processed,\n+      _succeed,\n@@ -109,10 +109,0 @@\n-    };\n-   private:\n-    int _processed;\n-    Result _result;\n-   public:\n-    ProcessResult(int processed) : _processed(processed), _result(_success)\n-      { if (_processed <= 0) _result = _no_operation; }\n-    ProcessResult(Result r) : _processed(0), _result(r)  {}\n-    int processed() { return _processed; }\n-    Result result() { return _processed > 0 ? _success : _result; }\n@@ -120,1 +110,1 @@\n-  ProcessResult try_process();\n+  ProcessResult try_process(HandshakeOperation* match_op);\n@@ -122,1 +112,0 @@\n-  Thread* _active_handshaker;\n","filename":"src\/hotspot\/share\/runtime\/handshake.hpp","additions":5,"deletions":16,"binary":false,"changes":21,"status":"modified"}]}