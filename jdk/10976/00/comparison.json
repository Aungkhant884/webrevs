{"files":[{"patch":"@@ -354,16 +354,5 @@\n-  class uxtw : public extend {\n-  public:\n-    uxtw(int shift = -1): extend(shift, 0b010, ext::uxtw) { }\n-  };\n-  class lsl : public extend {\n-  public:\n-    lsl(int shift = -1): extend(shift, 0b011, ext::uxtx) { }\n-  };\n-  class sxtw : public extend {\n-  public:\n-    sxtw(int shift = -1): extend(shift, 0b110, ext::sxtw) { }\n-  };\n-  class sxtx : public extend {\n-  public:\n-    sxtx(int shift = -1): extend(shift, 0b111, ext::sxtx) { }\n-  };\n+\n+  static extend uxtw(int shift = -1) { return extend(shift, 0b010, ext::uxtw); }\n+  static extend lsl(int shift = -1)  { return extend(shift, 0b011, ext::uxtx); }\n+  static extend sxtw(int shift = -1) { return extend(shift, 0b110, ext::sxtw); }\n+  static extend sxtx(int shift = -1) { return extend(shift, 0b111, ext::sxtx); }\n","filename":"src\/hotspot\/cpu\/aarch64\/assembler_aarch64.hpp","additions":5,"deletions":16,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -69,1 +69,0 @@\n-#define TIMES_OOP Address::sxtw(exact_log2(UseCompressedOops ? 4 : 8))\n@@ -622,2 +621,0 @@\n-  void array_overlap_test(Label& L_no_overlap, Address::sxtw sf) { __ b(L_no_overlap); }\n-\n@@ -1811,1 +1808,1 @@\n-      array_overlap_test(L, TIMES_OOP);\n+      __ b(L);                  \/\/ conjoint check not yet implemented\n","filename":"src\/hotspot\/cpu\/aarch64\/stubGenerator_aarch64.cpp","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"}]}