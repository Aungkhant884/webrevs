{"files":[{"patch":"@@ -44,0 +44,1 @@\n+@class MTLLayer;\n@@ -76,1 +77,0 @@\n-@property (strong) id<MTLCommandQueue>         blitCommandQueue;\n@@ -96,1 +96,1 @@\n-- (id)initWithDevice:(id<MTLDevice>)d shadersLib:(NSString*)shadersLib;\n+- (id)initWithDevice:(jint)displayID shadersLib:(NSString*)shadersLib;\n@@ -231,1 +231,2 @@\n-- (id<MTLCommandBuffer>)createBlitCommandBuffer;\n+- (void)startRedraw:(MTLLayer*)layer;\n+- (void)stopRedraw:(MTLLayer*)layer;\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/java2d\/metal\/MTLContext.h","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -27,0 +27,1 @@\n+#import <ThreadUtilities.h>\n@@ -36,0 +37,1 @@\n+#define KEEP_ALIVE_COUNT 4\n@@ -109,0 +111,4 @@\n+    CVDisplayLinkRef _displayLink;\n+    NSMutableSet* _layers;\n+    int _displayLinkCount;\n+    NSLock* _dlLock;\n@@ -124,1 +130,1 @@\n-            commandQueue, blitCommandQueue, vertexBuffer,\n+            commandQueue, vertexBuffer,\n@@ -130,1 +136,1 @@\n-- (id)initWithDevice:(id<MTLDevice>)d shadersLib:(NSString*)shadersLib {\n+- (id)initWithDevice:(jint)displayID shadersLib:(NSString*)shadersLib {\n@@ -134,1 +140,6 @@\n-        device = d;\n+        device = CGDirectDisplayCopyCurrentMetalDevice(displayID);\n+        if (device == nil) {\n+            J2dRlsTraceLn1(J2D_TRACE_ERROR, \"MTLContext.initWithDevice(): Cannot create device from displayID=%d\",\n+                           displayID);\n+            return nil;\n+        }\n@@ -162,1 +173,0 @@\n-        blitCommandQueue = [device newCommandQueue];\n@@ -165,0 +175,5 @@\n+        _layers = [[NSMutableArray alloc] init];\n+        _displayLinkCount = 0;\n+        _dlLock = [[NSLock alloc] init];\n+        CVDisplayLinkCreateWithCGDisplay(displayID, &_displayLink);\n+        CVDisplayLinkSetOutputCallback(_displayLink, &mtlDisplayLinkCallback, (__bridge void *) self);\n@@ -177,1 +192,0 @@\n-    self.blitCommandQueue = nil;\n@@ -220,0 +234,11 @@\n+    [_layers release];\n+\n+    if (CVDisplayLinkIsRunning(_displayLink)) {\n+        CVDisplayLinkStop(_displayLink);\n+        J2dTraceLn1(J2D_TRACE_VERBOSE, \"MTLContext_CVDisplayLinkStop: ctx=%p\", self);\n+    }\n+    CVDisplayLinkRelease(_displayLink);\n+\n+    [_dlLock unlock];\n+    [_dlLock release];\n+\n@@ -473,7 +498,0 @@\n-\/*\n- * This should be exclusively used only for final blit\n- * and present of CAMetalDrawable in MTLLayer\n- *\/\n-- (id<MTLCommandBuffer>)createBlitCommandBuffer {\n-    return [self.blitCommandQueue commandBuffer];\n-}\n@@ -492,0 +510,70 @@\n+- (void) redraw {\n+    AWT_ASSERT_APPKIT_THREAD;\n+    [_dlLock lock];\n+    @try {\n+        for (MTLLayer *layer in _layers) {\n+            [layer setNeedsDisplay];\n+        }\n+        if (_displayLinkCount > 0) {\n+            _displayLinkCount--;\n+        } else {\n+            if (_layers.count > 0) {\n+                [_layers removeAllObjects];\n+            }\n+            if (CVDisplayLinkIsRunning(_displayLink)) {\n+                CVDisplayLinkStop(_displayLink);\n+                J2dTraceLn1(J2D_TRACE_VERBOSE, \"MTLContext_CVDisplayLinkStop: ctx=%p\", self);\n+            }\n+        }\n+    } @finally {\n+        [_dlLock unlock];\n+    }\n+}\n+\n+CVReturn mtlDisplayLinkCallback(CVDisplayLinkRef displayLink, const CVTimeStamp* now, const CVTimeStamp* outputTime, CVOptionFlags flagsIn, CVOptionFlags* flagsOut, void* displayLinkContext)\n+{\n+    J2dTraceLn1(J2D_TRACE_VERBOSE, \"MTLContext_mtlDisplayLinkCallback: ctx=%p\", displayLinkContext);\n+    @autoreleasepool {\n+        MTLContext *ctx = (__bridge MTLContext *)displayLinkContext;\n+        [ctx performSelectorOnMainThread:@selector(redraw) withObject:nil waitUntilDone:NO];\n+    }\n+    return kCVReturnSuccess;\n+}\n+\n+- (void)startRedraw:(MTLLayer*)layer {\n+    [_dlLock lock];\n+    layer.redrawCount++;\n+    J2dTraceLn2(J2D_TRACE_VERBOSE, \"MTLContext_startRedraw: ctx=%p layer=%p\", self, layer);\n+    @try {\n+        _displayLinkCount = KEEP_ALIVE_COUNT;\n+        [_layers addObject:layer];\n+        if (_displayLink != NULL && !CVDisplayLinkIsRunning(_displayLink)) {\n+            CVDisplayLinkStart(_displayLink);\n+            J2dTraceLn1(J2D_TRACE_VERBOSE, \"MTLContext_CVDisplayLinkStart: ctx=%p\", self);\n+        }\n+    } @finally {\n+        [_dlLock unlock];\n+    }\n+}\n+\n+- (void)stopRedraw:(MTLLayer*) layer {\n+    J2dTraceLn2(J2D_TRACE_VERBOSE, \"MTLContext_stopRedraw: ctx=%p layer=%p\", self, layer);\n+    [_dlLock lock];\n+    @try {\n+        if (_displayLink != nil) {\n+            if (--layer.redrawCount <= 0) {\n+                [_layers removeObject:layer];\n+                layer.redrawCount = 0;\n+            }\n+            if (_layers.count == 0 && _displayLinkCount == 0) {\n+                if (CVDisplayLinkIsRunning(_displayLink)) {\n+                    CVDisplayLinkStop(_displayLink);\n+                    J2dTraceLn1(J2D_TRACE_VERBOSE, \"MTLContext_CVDisplayLinkStop: ctx=%p\", self);\n+                }\n+            }\n+        }\n+    } @finally {\n+        [_dlLock unlock];\n+    }\n+}\n+\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/java2d\/metal\/MTLContext.m","additions":100,"deletions":12,"binary":false,"changes":112,"status":"modified"},{"patch":"@@ -124,1 +124,1 @@\n-        mtlc = [[MTLContext alloc] initWithDevice:CGDirectDisplayCopyCurrentMetalDevice(displayID)\n+        mtlc = [[MTLContext alloc] initWithDevice:displayID\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/java2d\/metal\/MTLGraphicsConfig.m","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -57,2 +57,1 @@\n-@property (readwrite, assign) CVDisplayLinkRef displayLink;\n-@property (readwrite, atomic) int displayLinkCount;\n+@property (readwrite, atomic) int redrawCount;\n@@ -72,2 +71,2 @@\n-- (void) startDisplayLink;\n-- (void) stopDisplayLink;\n+- (void) startRedraw;\n+- (void) stopRedraw:(BOOL)force;\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/java2d\/metal\/MTLLayer.h","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -32,1 +32,0 @@\n-#define KEEP_ALIVE_INC 4\n@@ -45,2 +44,0 @@\n-@synthesize displayLink;\n-@synthesize displayLinkCount;\n@@ -77,3 +74,1 @@\n-    CVDisplayLinkCreateWithActiveCGDisplays(&displayLink);\n-    CVDisplayLinkSetOutputCallback(displayLink, &displayLinkCallback, (__bridge void*)self);\n-    self.displayLinkCount = 0;\n+    self.redrawCount = 0;\n@@ -87,2 +82,2 @@\n-                    self.javaLayer, self.buffer, ctx.device);\n-        [self stopDisplayLink];\n+                    self.javaLayer, self.buffer, self.ctx.device);\n+        [self stopRedraw:YES];\n@@ -95,0 +90,1 @@\n+    [self stopRedraw:NO];\n@@ -98,1 +94,0 @@\n-            [self stopDisplayLink];\n@@ -109,1 +104,0 @@\n-            [self stopDisplayLink];\n@@ -113,1 +107,1 @@\n-        id<MTLCommandBuffer> commandBuf = [self.ctx createBlitCommandBuffer];\n+        id<MTLCommandBuffer> commandBuf = [self.ctx createCommandBuffer];\n@@ -116,1 +110,0 @@\n-            [self stopDisplayLink];\n@@ -122,1 +115,0 @@\n-            [self stopDisplayLink];\n@@ -137,0 +129,2 @@\n+        __block MTLLayer* layer = self;\n+        [layer retain];\n@@ -138,1 +132,2 @@\n-            self.nextDrawableCount--;\n+            layer.nextDrawableCount--;\n+            [layer release];\n@@ -142,5 +137,0 @@\n-\n-        if (--self.displayLinkCount <= 0) {\n-            self.displayLinkCount = 0;\n-            [self stopDisplayLink];\n-        }\n@@ -154,3 +144,1 @@\n-    [self stopDisplayLink];\n-    CVDisplayLinkRelease(self.displayLink);\n-    self.displayLink = nil;\n+    [self stopRedraw:YES];\n@@ -188,4 +176,3 @@\n-- (void) startDisplayLink {\n-    if (!CVDisplayLinkIsRunning(self.displayLink)) {\n-        CVDisplayLinkStart(self.displayLink);\n-        J2dTraceLn(J2D_TRACE_VERBOSE, \"MTLLayer_startDisplayLink\");\n+- (void)startRedraw {\n+    if (self.ctx != nil) {\n+        [self.ctx startRedraw:self];\n@@ -193,1 +180,0 @@\n-    displayLinkCount += KEEP_ALIVE_INC; \/\/ Keep alive displaylink counter\n@@ -196,4 +182,6 @@\n-- (void) stopDisplayLink {\n-    if (CVDisplayLinkIsRunning(self.displayLink)) {\n-        CVDisplayLinkStop(self.displayLink);\n-        J2dTraceLn(J2D_TRACE_VERBOSE, \"MTLLayer_stopDisplayLink\");\n+- (void)stopRedraw:(BOOL)force {\n+    if (self.ctx != nil) {\n+        if (force) {\n+            self.redrawCount = 0;\n+        }\n+        [self.ctx stopRedraw:self];\n@@ -258,1 +246,1 @@\n-        [layer startDisplayLink];\n+        [layer startRedraw];\n@@ -261,1 +249,1 @@\n-        [layer stopDisplayLink];\n+        [layer stopRedraw:YES];\n@@ -299,1 +287,3 @@\n-        [layer stopDisplayLink];\n+        if (layer != nil) {\n+            [layer stopRedraw:YES];\n+        }\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/java2d\/metal\/MTLLayer.m","additions":24,"deletions":34,"binary":false,"changes":58,"status":"modified"},{"patch":"@@ -893,1 +893,1 @@\n-                    [layer startDisplayLink];\n+                    [layer startRedraw];\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/java2d\/metal\/MTLRenderQueue.m","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}