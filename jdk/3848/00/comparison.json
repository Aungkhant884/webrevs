{"files":[{"patch":"@@ -28,0 +28,1 @@\n+#include \"runtime\/os.hpp\"\n@@ -143,1 +144,1 @@\n-    _java_version = version;\n+    _java_version = os::strdup(version);\n@@ -150,1 +151,1 @@\n-    _runtime_name = name;\n+    _runtime_name = os::strdup(name);\n@@ -157,1 +158,1 @@\n-    _runtime_version = version;\n+    _runtime_version = os::strdup(version);\n@@ -164,1 +165,1 @@\n-    _runtime_vendor_version = vendor_version;\n+    _runtime_vendor_version = os::strdup(vendor_version);\n@@ -171,1 +172,1 @@\n-    _runtime_vendor_vm_bug_url = vendor_vm_bug_url;\n+    _runtime_vendor_vm_bug_url = os::strdup(vendor_vm_bug_url);\n","filename":"src\/hotspot\/share\/runtime\/java.hpp","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -784,7 +784,4 @@\n-static char java_version[64] = \"\";\n-static char java_runtime_name[128] = \"\";\n-static char java_runtime_version[128] = \"\";\n-static char java_runtime_vendor_version[128] = \"\";\n-static char java_runtime_vendor_vm_bug_url[128] = \"\";\n-\n-\/\/ Extract version and vendor specific information.\n+\/\/ Extract version and vendor specific information from\n+\/\/ java.lang.VersionProps fields.\n+\/\/ Returned char* is allocated in the thread's resource area\n+\/\/ so must be copied for permanency.\n@@ -792,3 +789,1 @@\n-                                         Symbol* field_name,\n-                                         char* buffer,\n-                                         int buffer_size) {\n+                                         Symbol* field_name) {\n@@ -804,3 +799,1 @@\n-    const char* name = java_lang_String::as_utf8_string(name_oop,\n-                                                        buffer,\n-                                                        buffer_size);\n+    const char* name = java_lang_String::as_utf8_string(name_oop);\n@@ -2667,1 +2660,3 @@\n-  \/\/ get the Java runtime name, version, and vendor info after java.lang.System is initialized\n+  \/\/ Get the Java runtime name, version, and vendor info after java.lang.System is initialized.\n+  \/\/ Some values are actually configure-time constants but some can be set via the jlink tool and\n+  \/\/ so must be read dynamically. We treat them all the same.\n@@ -2670,0 +2665,3 @@\n+  {\n+    ResourceMark rm(main_thread);\n+    JDK_Version::set_java_version(get_java_version_info(ik, vmSymbols::java_version_name()));\n@@ -2671,5 +2669,1 @@\n-  JDK_Version::set_java_version(get_java_version_info(ik, vmSymbols::java_version_name(),\n-                                                      java_version, sizeof(java_version)));\n-\n-  JDK_Version::set_runtime_name(get_java_version_info(ik, vmSymbols::java_runtime_name_name(),\n-                                                      java_runtime_name, sizeof(java_runtime_name)));\n+    JDK_Version::set_runtime_name(get_java_version_info(ik, vmSymbols::java_runtime_name_name()));\n@@ -2677,2 +2671,1 @@\n-  JDK_Version::set_runtime_version(get_java_version_info(ik, vmSymbols::java_runtime_version_name(),\n-                                                         java_runtime_version, sizeof(java_runtime_version)));\n+    JDK_Version::set_runtime_version(get_java_version_info(ik, vmSymbols::java_runtime_version_name()));\n@@ -2680,3 +2673,1 @@\n-  JDK_Version::set_runtime_vendor_version(get_java_version_info(ik, vmSymbols::java_runtime_vendor_version_name(),\n-                                                                java_runtime_vendor_version,\n-                                                                sizeof(java_runtime_vendor_version)));\n+    JDK_Version::set_runtime_vendor_version(get_java_version_info(ik, vmSymbols::java_runtime_vendor_version_name()));\n@@ -2684,3 +2675,2 @@\n-  JDK_Version::set_runtime_vendor_vm_bug_url(get_java_version_info(ik, vmSymbols::java_runtime_vendor_vm_bug_url_name(),\n-                                                                   java_runtime_vendor_vm_bug_url,\n-                                                                   sizeof(java_runtime_vendor_vm_bug_url)));\n+    JDK_Version::set_runtime_vendor_vm_bug_url(get_java_version_info(ik, vmSymbols::java_runtime_vendor_vm_bug_url_name()));\n+  }\n","filename":"src\/hotspot\/share\/runtime\/thread.cpp","additions":17,"deletions":27,"binary":false,"changes":44,"status":"modified"}]}