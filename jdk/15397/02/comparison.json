{"files":[{"patch":"@@ -891,1 +891,7 @@\n-        \/\/ where the previous element is not a link.\n+        \/\/ where the previous element is neither a link nor \"..\".\n+        \/\/ if there is a preceding \"..\", then it might have followed\n+        \/\/ a link or a link followed by a sequence of two or more \"..\".\n+        \/\/ if for example one has the path \"link\/..\/..\/file\",\n+        \/\/ then if a preceding \"..\" were eliminated, then the result\n+        \/\/ would be \"<root>\/link\/file\" instead of the correct\n+        \/\/ \"<root>\/link\/..\/..\/file\".\n@@ -893,0 +899,1 @@\n+        boolean parentIsDotDot = false;\n@@ -901,1 +908,1 @@\n-            \/\/ cannot eliminate \"..\" if previous element is a link\n+            \/\/ cannot eliminate \"..\" if previous element is a link or \"..\"\n@@ -912,1 +919,1 @@\n-                if (!attrs.isSymbolicLink()) {\n+                if (!attrs.isSymbolicLink() && !parentIsDotDot) {\n@@ -919,0 +926,3 @@\n+                parentIsDotDot = true;\n+            } else {\n+                parentIsDotDot = false;\n","filename":"src\/java.base\/unix\/classes\/sun\/nio\/fs\/UnixPath.java","additions":13,"deletions":3,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -546,0 +546,2 @@\n+java\/nio\/channels\/DatagramChannel\/AfterDisconnect.java          8308807 aix-ppc64\n+\n@@ -550,1 +552,1 @@\n-jdk\/nio\/zipfs\/TestLocOffsetFromZip64EF.java                     8301183 linux-all\n+java\/nio\/file\/Path\/ToRealPath.java                              8315273 windows-all\n@@ -552,1 +554,1 @@\n-java\/nio\/channels\/DatagramChannel\/AfterDisconnect.java          8308807 aix-ppc64\n+jdk\/nio\/zipfs\/TestLocOffsetFromZip64EF.java                     8301183 linux-all\n","filename":"test\/jdk\/ProblemList.txt","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -25,1 +25,1 @@\n- * @bug 8295753\n+ * @bug 8295753 8306882\n@@ -145,0 +145,46 @@\n+    @Test\n+    @EnabledIf(\"supportsLinks\")\n+    public void noCollapseDots1() throws IOException {\n+        Path subPath = DIR.resolve(Path.of(\"dir\", \"subdir\"));\n+        Path sub = Files.createDirectories(subPath);\n+        System.out.println(\"sub: \" + sub);\n+        Files.createSymbolicLink(LINK, sub);\n+        System.out.println(\"LINK: \" + LINK + \" -> \" + sub);\n+        Path p = Path.of(\"..\", \"..\", FILE.getFileName().toString());\n+        System.out.println(\"p: \" + p);\n+        Path path = LINK.resolve(p);\n+        System.out.println(\"path:      \" + path);\n+        System.out.println(\"no follow: \" + path.toRealPath(NOFOLLOW_LINKS));\n+        assertEquals(path.toRealPath(NOFOLLOW_LINKS), path);\n+\n+        Files.delete(sub);\n+        Files.delete(sub.getParent());\n+        Files.delete(LINK);\n+    }\n+\n+    @Test\n+    @EnabledIf(\"supportsLinks\")\n+    public void noCollapseDots2() throws IOException {\n+        Path subPath = DIR.resolve(Path.of(\"dir\", \"subdir\"));\n+        Path sub = Files.createDirectories(subPath);\n+        Path out = Files.createFile(DIR.resolve(Path.of(\"out.txt\")));\n+        Path aaa = DIR.resolve(Path.of(\"aaa\"));\n+        Files.createSymbolicLink(aaa, sub);\n+        System.out.println(\"aaa: \" + aaa + \" -> \" + sub);\n+        Path bbb = DIR.resolve(Path.of(\"bbb\"));\n+        Files.createSymbolicLink(bbb, sub);\n+        System.out.println(\"bbb: \" + bbb + \" -> \" + sub);\n+        Path p = Path.of(\"aaa\", \"..\", \"..\", \"bbb\", \"..\", \"..\", \"out.txt\");\n+        Path path = DIR.resolve(p);\n+        System.out.println(\"path:      \" + path);\n+        System.out.println(\"no follow: \" + path.toRealPath(NOFOLLOW_LINKS));\n+        assertEquals(path.toRealPath(NOFOLLOW_LINKS), path);\n+        System.out.println(path.toRealPath());\n+\n+        Files.delete(sub);\n+        Files.delete(sub.getParent());\n+        Files.delete(out);\n+        Files.delete(aaa);\n+        Files.delete(bbb);\n+    }\n+\n@@ -183,0 +229,1 @@\n+        Files.delete(theLink);\n@@ -188,1 +235,0 @@\n-        Files.delete(SUBDIR);\n@@ -190,0 +236,4 @@\n+        Files.delete(SUBDIR);\n+        for (String s : DIR.toFile().list())\n+            System.out.println(\"DIR: \" + s);\n+        Files.delete(DIR);\n","filename":"test\/jdk\/java\/nio\/file\/Path\/ToRealPath.java","additions":52,"deletions":2,"binary":false,"changes":54,"status":"modified"}]}