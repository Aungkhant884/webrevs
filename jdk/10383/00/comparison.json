{"files":[{"patch":"@@ -808,1 +808,1 @@\n-            if (!isDirectory(dir, LinkOption.NOFOLLOW_LINKS))\n+            if (!isDirectory(dir))\n","filename":"src\/java.base\/share\/classes\/java\/nio\/file\/Files.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,78 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+\n+import org.testng.Assert;\n+import org.testng.annotations.Test;\n+\n+\/*\n+ * @test\n+ * @bug 8293792\n+ * @summary Test java.nio.file.Files.createDirectories method\n+ * @run testng CreateDirectories\n+ *\/\n+public class CreateDirectories {\n+\n+    \/**\n+     * Creates a symlink which points to a directory that exists. Then calls Files.createDirectories\n+     * method passing it the path to the symlink and verifies that no exception gets thrown\n+     *\/\n+    @Test\n+    public void testSymlinkDir() throws Exception {\n+        \/\/ create a temp dir as the \"root\" in which we will run our tests.\n+        final Path startingDir = Files.createTempDirectory(Path.of(\".\"), \"8293792\");\n+        System.out.println(\"Running tests under directory \" + startingDir.toAbsolutePath());\n+        final Path fooDir = Files.createDirectory(Path.of(startingDir.toString(), \"foo\"));\n+        Assert.assertTrue(Files.isDirectory(fooDir),\n+                fooDir + \" was expected to be a directory but wasn't\");\n+\n+        \/\/ now create a symlink to the \"foo\" dir\n+        final Path symlink = Files.createSymbolicLink(\n+                Path.of(startingDir.toString(), \"symlinkToFoo\"), fooDir.toAbsolutePath());\n+        Assert.assertTrue(Files.isSymbolicLink(symlink),\n+                symlink + \" was expected to be a symlink but wasn't\");\n+        Assert.assertTrue(Files.isDirectory(symlink),\n+                symlink + \" was expected to be a directory but wasn't\");\n+\n+        \/\/ now create a directory under the symlink (which effectively creates a directory under\n+        \/\/ \"foo\")\n+        final Path barDir = Files.createDirectory(Path.of(symlink.toString(), \"bar\"));\n+        Assert.assertTrue(Files.isDirectory(barDir),\n+                barDir + \" was expected to be a directory but wasn't\");\n+        \/\/ ultimately, we now have this directory structure:\n+        \/\/ <root-dir>\n+        \/\/   |--- foo\n+        \/\/   |     |--- bar\n+        \/\/   |\n+        \/\/   |--- symlinkToFoo -> (links to) <absolute-path-to-root-dir>\/foo\n+\n+\n+        \/\/ now call Files.createDirectories on each of these existing directory\/symlink paths\n+        \/\/ and expect each one to succeed\n+        Files.createDirectories(fooDir); \/\/ .\/<root-dir>\/foo\n+        Files.createDirectories(symlink); \/\/ .\/<root-dir>\/symlinkToFoo\n+        Files.createDirectories(barDir); \/\/ .\/<root-dir>\/symlinkToFoo\/bar\n+    }\n+}\n","filename":"test\/jdk\/java\/nio\/file\/Files\/CreateDirectories.java","additions":78,"deletions":0,"binary":false,"changes":78,"status":"added"}]}