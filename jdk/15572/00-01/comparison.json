{"files":[{"patch":"@@ -249,1 +249,1 @@\n-        out.println(\"check equals\");\n+        out.format(\"test equals %s\\n\", other);\n@@ -251,2 +251,0 @@\n-        Path thisFile = path;\n-        Path thatFile = Path.of(other);\n@@ -254,2 +252,3 @@\n-        check(thisFile.equals(thisFile), true);\n-        check(thisFile.equals(thatFile), false);\n+        Path that = Path.of(other);\n+        check(that, path.toString());\n+        check(path.hashCode() == that.hashCode(), true);\n@@ -257,10 +256,2 @@\n-        check(thisFile.equals(null), false);\n-        check(thisFile.equals(new Object()), false);\n-\n-        String s = thisFile.toString();\n-        Path likeThis;\n-        if (Character.isLowerCase(s.charAt(0))) {\n-            likeThis = Path.of(s.toUpperCase());\n-        } else {\n-            likeThis = Path.of(s.toLowerCase());\n-        }\n+        return this;\n+    }\n@@ -268,8 +259,4 @@\n-        if (Platform.isWindows()) {\n-            \/\/ case insensitive\n-            check(thisFile.equals(likeThis), true);\n-            check(thisFile.hashCode() == likeThis.hashCode(), true);\n-        } else {\n-            \/\/ case sensitive\n-            check(thisFile.equals(likeThis), false);\n-        }\n+    PathOps notEquals(Object other) {\n+        out.format(\"test not equals %s\\n\", other);\n+        checkPath();\n+        check(path.equals(other), false);\n@@ -1496,1 +1483,5 @@\n-            .equals(\"that\");\n+            .equals(\"this\")\n+            .notEquals(Path.of(\"that\"))\n+            .notEquals(null)\n+            .notEquals(new Object())\n+            .equals(Path.of(\"This\"));\n@@ -2181,1 +2172,5 @@\n-            .equals(\"that\");\n+            .equals(\"this\")\n+            .notEquals(Path.of(\"that\"))\n+            .notEquals(null)\n+            .notEquals(new Object())\n+            .notEquals(Path.of(\"This\"));\n","filename":"test\/jdk\/java\/nio\/file\/Path\/PathOps.java","additions":20,"deletions":25,"binary":false,"changes":45,"status":"modified"}]}