{"files":[{"patch":"@@ -73,2 +73,0 @@\n-        @JEP(number=443, title=\"Unnamed Patterns and Variables\")\n-        UNNAMED,\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/javac\/PreviewFeature.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -114,1 +114,1 @@\n-     * @since 21\n+     * @since 22\n@@ -116,1 +116,0 @@\n-    @PreviewFeature(feature=PreviewFeature.Feature.UNNAMED, reflective = true)\n","filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/element\/VariableElement.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n- * @since 21\n+ * @since 22\n@@ -43,1 +43,0 @@\n-@PreviewFeature(feature=PreviewFeature.Feature.UNNAMED)\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/source\/tree\/AnyPatternTree.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -233,1 +233,1 @@\n-         * @since 21\n+         * @since 22\n@@ -235,1 +235,0 @@\n-        @PreviewFeature(feature=PreviewFeature.Feature.UNNAMED)\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/source\/tree\/Tree.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -276,1 +276,1 @@\n-     * @since 21\n+     * @since 22\n@@ -278,1 +278,0 @@\n-    @PreviewFeature(feature=PreviewFeature.Feature.UNNAMED)\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/source\/tree\/TreeVisitor.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -652,1 +652,1 @@\n-     * @since 21\n+     * @since 22\n@@ -655,1 +655,0 @@\n-    @PreviewFeature(feature=PreviewFeature.Feature.UNNAMED)\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/source\/util\/SimpleTreeVisitor.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -214,1 +214,0 @@\n-            case UNNAMED_VARIABLES -> true;\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Preview.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -250,1 +250,1 @@\n-        UNNAMED_VARIABLES(JDK21, Fragments.FeatureUnnamedVariables, DiagKind.PLURAL),\n+        UNNAMED_VARIABLES(JDK22, Fragments.FeatureUnnamedVariables, DiagKind.PLURAL),\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Source.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -656,2 +656,2 @@\n-                if (preview.isEnabled() && Feature.UNNAMED_VARIABLES.allowedInSource(source)) {\n-                    log.error(DiagnosticFlag.SYNTAX, token.pos, Errors.UseOfUnderscoreNotAllowed);\n+                if (Feature.UNNAMED_VARIABLES.allowedInSource(source)) {\n+                    log.error(DiagnosticFlag.SYNTAX, token.pos, Errors.UseOfUnderscoreNotAllowedNonVariable);\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/parser\/JavacParser.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -3207,2 +3207,6 @@\n-    as of release 21, the underscore keyword ''_'' is only allowed to declare\\n\\\n-    unnamed patterns, local variables, exception parameters or lambda parameters\n+    underscore not allowed here\\n\\\n+    as of release 9, ''_'' is a keyword, and may not be used as an identifier\\n\\\n+    as of release 22, ''_'' can be used as a name in the declaration of unnamed patterns, local variables, exception parameters or lambda parameters\n+\n+compiler.err.use.of.underscore.not.allowed.non.variable=\\\n+    underscore not allowed here\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/compiler.properties","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -327,1 +327,0 @@\n-    @PreviewFeature(feature=PreviewFeature.Feature.UNNAMED)\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/tree\/TreeScanner.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -5,1 +5,0 @@\n- * @enablePreview\n@@ -8,0 +7,1 @@\n+\n","filename":"test\/langtools\/tools\/javac\/T8312163.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,2 +7,0 @@\n-- compiler.note.preview.filename: T8312163.java, DEFAULT\n-- compiler.note.preview.recompile\n","filename":"test\/langtools\/tools\/javac\/T8312163.out","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -5,1 +5,1 @@\n- * @compile\/fail\/ref=T8314216.out -XDrawDiagnostics --enable-preview --source ${jdk.version} T8314216.java\n+ * @compile\/fail\/ref=T8314216.out -XDrawDiagnostics T8314216.java\n","filename":"test\/langtools\/tools\/javac\/T8314216.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -3,2 +3,0 @@\n-- compiler.note.preview.filename: T8314216.java, DEFAULT\n-- compiler.note.preview.recompile\n","filename":"test\/langtools\/tools\/javac\/T8314216.out","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -5,2 +5,2 @@\n- * @compile\/fail\/ref=T8314423.out -XDrawDiagnostics T8314423.java\n- * @compile --enable-preview --source ${jdk.version} T8314423.java\n+ * @compile\/fail\/ref=T8314423.out -XDrawDiagnostics --release 21 T8314423.java\n+ * @compile T8314423.java\n","filename":"test\/langtools\/tools\/javac\/T8314423.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1,2 +1,2 @@\n-T8314423.java:15:24: compiler.err.preview.feature.disabled.plural: (compiler.misc.feature.unnamed.variables)\n-1 error\n\\ No newline at end of file\n+T8314423.java:15:24: compiler.err.feature.not.supported.in.source.plural: (compiler.misc.feature.unnamed.variables), 21, 22\n+1 error\n","filename":"test\/langtools\/tools\/javac\/T8314423.out","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -5,2 +5,1 @@\n- * @enablePreview\n- * @compile\/ref=TwrLintUnderscore.out --enable-preview -source ${jdk.version} -Xlint:try -XDrawDiagnostics TwrLintUnderscore.java\n+ * @compile -Xlint:try -XDrawDiagnostics TwrLintUnderscore.java\n","filename":"test\/langtools\/tools\/javac\/TryWithResources\/TwrLintUnderscore.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1,2 +0,0 @@\n-- compiler.note.preview.filename: TwrLintUnderscore.java, DEFAULT\n-- compiler.note.preview.recompile\n","filename":"test\/langtools\/tools\/javac\/TryWithResources\/TwrLintUnderscore.out","additions":0,"deletions":2,"binary":false,"changes":2,"status":"deleted"},{"patch":"@@ -25,0 +25,1 @@\n+\/\/ options: --release 21\n","filename":"test\/langtools\/tools\/javac\/diags\/examples\/UnderscoreAsIdentifierError.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -24,0 +24,1 @@\n+\/\/ key: compiler.err.feature.not.supported.in.source.plural\n@@ -25,2 +26,2 @@\n-\/\/ key: compiler.warn.preview.feature.use.plural\n-\/\/ options: --enable-preview -source ${jdk.version} -Xlint:preview\n+\/\/ key: compiler.warn.source.no.system.modules.path\n+\/\/ options: -source 21\n","filename":"test\/langtools\/tools\/javac\/diags\/examples\/UnderscoreInLambdaExpression.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -0,0 +1,32 @@\n+\/*\n+ * Copyright (c) 2013, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/\/ key: compiler.err.feature.not.supported.in.source.plural\n+\/\/ key: compiler.misc.feature.unnamed.variables\n+\/\/ options: -Xlint:-options --source 21\n+\n+class UnnamedVariables {\n+    void test() {\n+        String _ = null;\n+    }\n+}\n","filename":"test\/langtools\/tools\/javac\/diags\/examples\/UnnamedVariables.java","additions":32,"deletions":0,"binary":false,"changes":32,"status":"added"},{"patch":"@@ -25,3 +25,0 @@\n-\/\/ options: --enable-preview -source ${jdk.version} -Xlint:preview\n-\n-import java.util.function.*;\n@@ -30,1 +27,1 @@\n-    IntBinaryOperator f = (int x, int y) -> _ + x;\n+    private int a = 0, _ = 1;\n","filename":"test\/langtools\/tools\/javac\/diags\/examples\/UseOfUnderscoreNotAllowed.java","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -0,0 +1,30 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/\/ key: compiler.err.use.of.underscore.not.allowed.non.variable\n+\n+import java.util.function.*;\n+\n+class UseOfUnderscoreNotAllowedNonVar {\n+    IntBinaryOperator f = (int x, int y) -> _ + x;\n+}\n","filename":"test\/langtools\/tools\/javac\/diags\/examples\/UseOfUnderscoreNotAllowedNonVar.java","additions":30,"deletions":0,"binary":false,"changes":30,"status":"added"},{"patch":"@@ -25,3 +25,0 @@\n-\/\/ key: compiler.misc.feature.unnamed.variables\n-\/\/ key: compiler.warn.preview.feature.use.plural\n-\/\/ options: --enable-preview -source ${jdk.version} -Xlint:preview\n","filename":"test\/langtools\/tools\/javac\/diags\/examples\/UseOfUnderscoreNotAllowedWithBrackets.java","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -7,2 +7,2 @@\n- * @compile\/fail\/ref=IdentifierTest9.out -XDrawDiagnostics IdentifierTest.java\n- * @compile\/fail\/ref=IdentifierTest21.out -source ${jdk.version} --enable-preview -XDrawDiagnostics IdentifierTest.java\n+ * @compile\/fail\/ref=IdentifierTest9.out --release 9 -XDrawDiagnostics IdentifierTest.java\n+ * @compile\/fail\/ref=IdentifierTest22.out -XDrawDiagnostics IdentifierTest.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/IdentifierTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1,40 +0,0 @@\n-IdentifierTest.java:42:11: compiler.err.use.of.underscore.not.allowed\n-IdentifierTest.java:45:16: compiler.err.use.of.underscore.not.allowed\n-IdentifierTest.java:47:22: compiler.err.use.of.underscore.not.allowed\n-IdentifierTest.java:52:13: compiler.err.use.of.underscore.not.allowed\n-IdentifierTest.java:52:23: compiler.err.use.of.underscore.not.allowed\n-IdentifierTest.java:54:13: compiler.err.use.of.underscore.not.allowed\n-IdentifierTest.java:56:13: compiler.err.use.of.underscore.not.allowed\n-IdentifierTest.java:64:67: compiler.err.use.of.underscore.not.allowed\n-IdentifierTest.java:71:13: compiler.err.use.of.underscore.not.allowed\n-IdentifierTest.java:72:14: compiler.err.use.of.underscore.not.allowed\n-IdentifierTest.java:73:18: compiler.err.use.of.underscore.not.allowed\n-IdentifierTest.java:80:13: compiler.err.use.of.underscore.not.allowed\n-IdentifierTest.java:80:15: compiler.err.use.of.underscore.not.allowed\n-IdentifierTest.java:82:13: compiler.err.use.of.underscore.not.allowed\n-IdentifierTest.java:82:15: compiler.err.use.of.underscore.not.allowed\n-IdentifierTest.java:89:10: compiler.err.use.of.underscore.not.allowed\n-IdentifierTest.java:89:38: compiler.err.use.of.underscore.not.allowed\n-IdentifierTest.java:95:14: compiler.err.use.of.underscore.not.allowed\n-IdentifierTest.java:102:17: compiler.err.use.of.underscore.not.allowed\n-IdentifierTest.java:102:26: compiler.err.use.of.underscore.not.allowed\n-IdentifierTest.java:119:20: compiler.err.use.of.underscore.not.allowed\n-IdentifierTest.java:124:10: compiler.err.use.of.underscore.not.allowed\n-IdentifierTest.java:129:17: compiler.err.use.of.underscore.not.allowed\n-IdentifierTest.java:132:17: compiler.err.use.of.underscore.not.allowed\n-IdentifierTest.java:139:24: compiler.err.use.of.underscore.not.allowed\n-IdentifierTest.java:139:33: compiler.err.use.of.underscore.not.allowed\n-IdentifierTest.java:140:39: compiler.err.use.of.underscore.not.allowed\n-IdentifierTest.java:145:15: compiler.err.use.of.underscore.not.allowed\n-IdentifierTest.java:146:13: compiler.err.use.of.underscore.not.allowed\n-IdentifierTest.java:151:15: compiler.err.use.of.underscore.not.allowed\n-IdentifierTest.java:152:17: compiler.err.use.of.underscore.not.allowed\n-IdentifierTest.java:158:16: compiler.err.use.of.underscore.not.allowed.with.brackets\n-IdentifierTest.java:160:25: compiler.err.use.of.underscore.not.allowed\n-IdentifierTest.java:169:5: compiler.err.use.of.underscore.not.allowed\n-IdentifierTest.java:173:26: compiler.err.use.of.underscore.not.allowed\n-IdentifierTest.java:175:19: compiler.err.use.of.underscore.not.allowed\n-IdentifierTest.java:181:11: compiler.err.use.of.underscore.not.allowed\n-- compiler.note.preview.filename: IdentifierTest.java, DEFAULT\n-- compiler.note.preview.recompile\n-37 errors\n\\ No newline at end of file\n","filename":"test\/langtools\/tools\/javac\/lambda\/IdentifierTest21.out","additions":0,"deletions":40,"binary":false,"changes":40,"status":"deleted"},{"patch":"@@ -0,0 +1,38 @@\n+IdentifierTest.java:42:11: compiler.err.use.of.underscore.not.allowed.non.variable\n+IdentifierTest.java:45:16: compiler.err.use.of.underscore.not.allowed.non.variable\n+IdentifierTest.java:47:22: compiler.err.use.of.underscore.not.allowed.non.variable\n+IdentifierTest.java:52:13: compiler.err.use.of.underscore.not.allowed.non.variable\n+IdentifierTest.java:52:23: compiler.err.use.of.underscore.not.allowed.non.variable\n+IdentifierTest.java:54:13: compiler.err.use.of.underscore.not.allowed.non.variable\n+IdentifierTest.java:56:13: compiler.err.use.of.underscore.not.allowed.non.variable\n+IdentifierTest.java:64:67: compiler.err.use.of.underscore.not.allowed.non.variable\n+IdentifierTest.java:71:13: compiler.err.use.of.underscore.not.allowed.non.variable\n+IdentifierTest.java:72:14: compiler.err.use.of.underscore.not.allowed.non.variable\n+IdentifierTest.java:73:18: compiler.err.use.of.underscore.not.allowed.non.variable\n+IdentifierTest.java:80:13: compiler.err.use.of.underscore.not.allowed.non.variable\n+IdentifierTest.java:80:15: compiler.err.use.of.underscore.not.allowed.non.variable\n+IdentifierTest.java:82:13: compiler.err.use.of.underscore.not.allowed.non.variable\n+IdentifierTest.java:82:15: compiler.err.use.of.underscore.not.allowed.non.variable\n+IdentifierTest.java:89:10: compiler.err.use.of.underscore.not.allowed.non.variable\n+IdentifierTest.java:89:38: compiler.err.use.of.underscore.not.allowed.non.variable\n+IdentifierTest.java:95:14: compiler.err.use.of.underscore.not.allowed.non.variable\n+IdentifierTest.java:102:17: compiler.err.use.of.underscore.not.allowed.non.variable\n+IdentifierTest.java:102:26: compiler.err.use.of.underscore.not.allowed.non.variable\n+IdentifierTest.java:119:20: compiler.err.use.of.underscore.not.allowed.non.variable\n+IdentifierTest.java:124:10: compiler.err.use.of.underscore.not.allowed.non.variable\n+IdentifierTest.java:129:17: compiler.err.use.of.underscore.not.allowed.non.variable\n+IdentifierTest.java:132:17: compiler.err.use.of.underscore.not.allowed.non.variable\n+IdentifierTest.java:139:24: compiler.err.use.of.underscore.not.allowed.non.variable\n+IdentifierTest.java:139:33: compiler.err.use.of.underscore.not.allowed.non.variable\n+IdentifierTest.java:140:39: compiler.err.use.of.underscore.not.allowed.non.variable\n+IdentifierTest.java:145:15: compiler.err.use.of.underscore.not.allowed.non.variable\n+IdentifierTest.java:146:13: compiler.err.use.of.underscore.not.allowed.non.variable\n+IdentifierTest.java:151:15: compiler.err.use.of.underscore.not.allowed.non.variable\n+IdentifierTest.java:152:17: compiler.err.use.of.underscore.not.allowed.non.variable\n+IdentifierTest.java:158:16: compiler.err.use.of.underscore.not.allowed.with.brackets\n+IdentifierTest.java:160:25: compiler.err.use.of.underscore.not.allowed.non.variable\n+IdentifierTest.java:169:5: compiler.err.use.of.underscore.not.allowed.non.variable\n+IdentifierTest.java:173:26: compiler.err.use.of.underscore.not.allowed.non.variable\n+IdentifierTest.java:175:19: compiler.err.use.of.underscore.not.allowed.non.variable\n+IdentifierTest.java:181:11: compiler.err.use.of.underscore.not.allowed.non.variable\n+37 errors\n\\ No newline at end of file\n","filename":"test\/langtools\/tools\/javac\/lambda\/IdentifierTest22.out","additions":38,"deletions":0,"binary":false,"changes":38,"status":"added"},{"patch":"@@ -3,1 +3,1 @@\n-IdentifierTest.java:46:20: compiler.err.preview.feature.disabled.plural: (compiler.misc.feature.unnamed.variables)\n+IdentifierTest.java:46:20: compiler.err.feature.not.supported.in.source.plural: (compiler.misc.feature.unnamed.variables), 9, 22\n","filename":"test\/langtools\/tools\/javac\/lambda\/IdentifierTest9.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -5,2 +5,2 @@\n- * @compile\/fail\/ref=UnderscoreAsIdent9.out -XDrawDiagnostics -Werror UnderscoreAsIdent.java\n- * @compile\/fail\/ref=UnderscoreAsIdent21.out -source ${jdk.version} --enable-preview -XDrawDiagnostics UnderscoreAsIdent.java\n+ * @compile\/fail\/ref=UnderscoreAsIdent9.out --release 9 -XDrawDiagnostics -Werror UnderscoreAsIdent.java\n+ * @compile\/fail\/ref=UnderscoreAsIdent22.out -XDrawDiagnostics UnderscoreAsIdent.java\n","filename":"test\/langtools\/tools\/javac\/lambda\/UnderscoreAsIdent.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1,17 +0,0 @@\n-UnderscoreAsIdent.java:8:9: compiler.err.use.of.underscore.not.allowed\n-UnderscoreAsIdent.java:8:11: compiler.err.use.of.underscore.not.allowed\n-UnderscoreAsIdent.java:10:8: compiler.err.use.of.underscore.not.allowed\n-UnderscoreAsIdent.java:10:10: compiler.err.use.of.underscore.not.allowed\n-UnderscoreAsIdent.java:12:7: compiler.err.use.of.underscore.not.allowed\n-UnderscoreAsIdent.java:13:12: compiler.err.use.of.underscore.not.allowed\n-UnderscoreAsIdent.java:14:10: compiler.err.use.of.underscore.not.allowed\n-UnderscoreAsIdent.java:14:19: compiler.err.use.of.underscore.not.allowed\n-UnderscoreAsIdent.java:19:25: compiler.err.use.of.underscore.not.allowed\n-UnderscoreAsIdent.java:19:33: compiler.err.use.of.underscore.not.allowed\n-UnderscoreAsIdent.java:25:9: compiler.err.use.of.underscore.not.allowed\n-UnderscoreAsIdent.java:27:19: compiler.err.use.of.underscore.not.allowed\n-UnderscoreAsIdent.java:29:9: compiler.err.use.of.underscore.not.allowed\n-UnderscoreAsIdent.java:31:22: compiler.err.use.of.underscore.not.allowed\n-- compiler.note.preview.filename: UnderscoreAsIdent.java, DEFAULT\n-- compiler.note.preview.recompile\n-14 errors\n","filename":"test\/langtools\/tools\/javac\/lambda\/UnderscoreAsIdent21.out","additions":0,"deletions":17,"binary":false,"changes":17,"status":"deleted"},{"patch":"@@ -0,0 +1,15 @@\n+UnderscoreAsIdent.java:8:9: compiler.err.use.of.underscore.not.allowed.non.variable\n+UnderscoreAsIdent.java:8:11: compiler.err.use.of.underscore.not.allowed.non.variable\n+UnderscoreAsIdent.java:10:8: compiler.err.use.of.underscore.not.allowed.non.variable\n+UnderscoreAsIdent.java:10:10: compiler.err.use.of.underscore.not.allowed.non.variable\n+UnderscoreAsIdent.java:12:7: compiler.err.use.of.underscore.not.allowed.non.variable\n+UnderscoreAsIdent.java:13:12: compiler.err.use.of.underscore.not.allowed.non.variable\n+UnderscoreAsIdent.java:14:10: compiler.err.use.of.underscore.not.allowed.non.variable\n+UnderscoreAsIdent.java:14:19: compiler.err.use.of.underscore.not.allowed.non.variable\n+UnderscoreAsIdent.java:19:25: compiler.err.use.of.underscore.not.allowed.non.variable\n+UnderscoreAsIdent.java:19:33: compiler.err.use.of.underscore.not.allowed.non.variable\n+UnderscoreAsIdent.java:25:9: compiler.err.use.of.underscore.not.allowed.non.variable\n+UnderscoreAsIdent.java:27:19: compiler.err.use.of.underscore.not.allowed.non.variable\n+UnderscoreAsIdent.java:29:9: compiler.err.use.of.underscore.not.allowed.non.variable\n+UnderscoreAsIdent.java:31:22: compiler.err.use.of.underscore.not.allowed.non.variable\n+14 errors\n\\ No newline at end of file\n","filename":"test\/langtools\/tools\/javac\/lambda\/UnderscoreAsIdent22.out","additions":15,"deletions":0,"binary":false,"changes":15,"status":"added"},{"patch":"@@ -9,1 +9,1 @@\n-UnderscoreAsIdent.java:16:16: compiler.err.preview.feature.disabled.plural: (compiler.misc.feature.unnamed.variables)\n+UnderscoreAsIdent.java:16:16: compiler.err.feature.not.supported.in.source.plural: (compiler.misc.feature.unnamed.variables), 9, 22\n","filename":"test\/langtools\/tools\/javac\/lambda\/UnderscoreAsIdent9.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2209,1 +2209,1 @@\n-                         Test.java:3:5: compiler.err.underscore.as.identifier\n+                         Test.java:3:5: compiler.err.use.of.underscore.not.allowed.non.variable\n@@ -2244,1 +2244,1 @@\n-                         Test.java:3:5: compiler.err.underscore.as.identifier\n+                         Test.java:3:5: compiler.err.use.of.underscore.not.allowed.non.variable\n@@ -2333,1 +2333,1 @@\n-                         Test.java:3:5: compiler.err.underscore.as.identifier\n+                         Test.java:3:5: compiler.err.use.of.underscore.not.allowed.non.variable\n","filename":"test\/langtools\/tools\/javac\/parser\/JavacParserTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -4,2 +4,0 @@\n-- compiler.note.preview.filename: T8314578.java, DEFAULT\n-- compiler.note.preview.recompile\n","filename":"test\/langtools\/tools\/javac\/patterns\/T8314578.out","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -5,1 +5,0 @@\n- * @enablePreview\n@@ -8,0 +7,1 @@\n+\n","filename":"test\/langtools\/tools\/javac\/patterns\/T8314632.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -4,2 +4,0 @@\n-- compiler.note.preview.filename: T8314632.java, DEFAULT\n-- compiler.note.preview.recompile\n","filename":"test\/langtools\/tools\/javac\/patterns\/T8314632.out","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -24,1 +24,1 @@\n-\/**\n+\/*\n@@ -28,1 +28,0 @@\n- * @enablePreview\n@@ -101,0 +100,3 @@\n+        try (Lock _ = null) { }\n+        catch (Exception | Error _) { }\n+\n","filename":"test\/langtools\/tools\/javac\/patterns\/Unnamed.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-\/**\n+\/*\n@@ -5,1 +5,0 @@\n- * @enablePreview\n@@ -114,0 +113,6 @@\n+    void testUnderscoreInExpression() {\n+        for(String s : _) {\n+            int i = 1;\n+        }\n+    }\n+\n","filename":"test\/langtools\/tools\/javac\/patterns\/UnnamedErrors.java","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -1,6 +1,7 @@\n-UnnamedErrors.java:9:17: compiler.err.use.of.underscore.not.allowed\n-UnnamedErrors.java:10:17: compiler.err.use.of.underscore.not.allowed\n-UnnamedErrors.java:11:20: compiler.err.use.of.underscore.not.allowed\n-UnnamedErrors.java:11:26: compiler.err.use.of.underscore.not.allowed\n-UnnamedErrors.java:11:32: compiler.err.use.of.underscore.not.allowed\n-UnnamedErrors.java:12:17: compiler.err.use.of.underscore.not.allowed\n+UnnamedErrors.java:8:17: compiler.err.use.of.underscore.not.allowed.non.variable\n+UnnamedErrors.java:9:17: compiler.err.use.of.underscore.not.allowed.non.variable\n+UnnamedErrors.java:10:20: compiler.err.use.of.underscore.not.allowed\n+UnnamedErrors.java:10:26: compiler.err.use.of.underscore.not.allowed\n+UnnamedErrors.java:10:32: compiler.err.use.of.underscore.not.allowed\n+UnnamedErrors.java:11:17: compiler.err.use.of.underscore.not.allowed.non.variable\n+UnnamedErrors.java:11:24: compiler.err.use.of.underscore.not.allowed\n@@ -8,30 +9,28 @@\n-UnnamedErrors.java:13:24: compiler.err.use.of.underscore.not.allowed\n-UnnamedErrors.java:15:18: compiler.err.use.of.underscore.not.allowed\n-UnnamedErrors.java:16:23: compiler.err.use.of.underscore.not.allowed\n-UnnamedErrors.java:17:19: compiler.err.use.of.underscore.not.allowed\n-UnnamedErrors.java:22:26: compiler.err.use.of.underscore.not.allowed\n-UnnamedErrors.java:24:26: compiler.err.use.of.underscore.not.allowed\n-UnnamedErrors.java:27:18: compiler.err.use.of.underscore.not.allowed\n-UnnamedErrors.java:34:18: compiler.err.restricted.type.not.allowed.here: var\n-UnnamedErrors.java:77:18: compiler.err.use.of.underscore.not.allowed\n-UnnamedErrors.java:77:19: compiler.err.expected: token.identifier\n-UnnamedErrors.java:82:40: compiler.err.expected2: :, ->\n-UnnamedErrors.java:82:51: compiler.err.expected: =\n-UnnamedErrors.java:82:58: compiler.err.expected: ';'\n-UnnamedErrors.java:101:14: compiler.err.expected: =\n-UnnamedErrors.java:102:22: compiler.err.expected: =\n-UnnamedErrors.java:104:26: compiler.err.expected: =\n-UnnamedErrors.java:110:13: compiler.err.use.of.underscore.not.allowed.with.brackets\n-UnnamedErrors.java:111:18: compiler.err.use.of.underscore.not.allowed.with.brackets\n-UnnamedErrors.java:11:17: compiler.err.already.defined: kindname.variable, x, kindname.class, UnnamedErrors\n-UnnamedErrors.java:36:13: compiler.err.unconditional.pattern.and.default\n-UnnamedErrors.java:45:18: compiler.err.pattern.dominated\n-UnnamedErrors.java:54:29: compiler.err.flows.through.from.pattern\n-UnnamedErrors.java:61:29: compiler.err.flows.through.from.pattern\n-UnnamedErrors.java:68:32: compiler.err.flows.through.from.pattern\n-UnnamedErrors.java:82:56: compiler.err.already.defined: kindname.variable, x2, kindname.method, guardErrors(java.lang.Object,int,int)\n-UnnamedErrors.java:83:13: compiler.err.switch.mixing.case.types\n-UnnamedErrors.java:90:30: compiler.err.pattern.dominated\n-- compiler.note.preview.filename: UnnamedErrors.java, DEFAULT\n-- compiler.note.preview.recompile\n-34 errors\n\\ No newline at end of file\n+UnnamedErrors.java:14:18: compiler.err.use.of.underscore.not.allowed.non.variable\n+UnnamedErrors.java:15:23: compiler.err.use.of.underscore.not.allowed.non.variable\n+UnnamedErrors.java:16:19: compiler.err.use.of.underscore.not.allowed.non.variable\n+UnnamedErrors.java:21:26: compiler.err.use.of.underscore.not.allowed.non.variable\n+UnnamedErrors.java:23:26: compiler.err.use.of.underscore.not.allowed.non.variable\n+UnnamedErrors.java:26:18: compiler.err.use.of.underscore.not.allowed.non.variable\n+UnnamedErrors.java:33:18: compiler.err.restricted.type.not.allowed.here: var\n+UnnamedErrors.java:76:18: compiler.err.use.of.underscore.not.allowed.non.variable\n+UnnamedErrors.java:76:19: compiler.err.expected: token.identifier\n+UnnamedErrors.java:81:40: compiler.err.expected2: :, ->\n+UnnamedErrors.java:81:51: compiler.err.expected: =\n+UnnamedErrors.java:81:58: compiler.err.expected: ';'\n+UnnamedErrors.java:100:14: compiler.err.expected: =\n+UnnamedErrors.java:101:22: compiler.err.expected: =\n+UnnamedErrors.java:103:26: compiler.err.expected: =\n+UnnamedErrors.java:109:13: compiler.err.use.of.underscore.not.allowed.with.brackets\n+UnnamedErrors.java:110:18: compiler.err.use.of.underscore.not.allowed.with.brackets\n+UnnamedErrors.java:114:24: compiler.err.use.of.underscore.not.allowed.non.variable\n+UnnamedErrors.java:10:17: compiler.err.already.defined: kindname.variable, x, kindname.class, UnnamedErrors\n+UnnamedErrors.java:35:13: compiler.err.unconditional.pattern.and.default\n+UnnamedErrors.java:44:18: compiler.err.pattern.dominated\n+UnnamedErrors.java:53:29: compiler.err.flows.through.from.pattern\n+UnnamedErrors.java:60:29: compiler.err.flows.through.from.pattern\n+UnnamedErrors.java:67:32: compiler.err.flows.through.from.pattern\n+UnnamedErrors.java:81:56: compiler.err.already.defined: kindname.variable, x2, kindname.method, guardErrors(java.lang.Object,int,int)\n+UnnamedErrors.java:82:13: compiler.err.switch.mixing.case.types\n+UnnamedErrors.java:89:30: compiler.err.pattern.dominated\n+35 errors\n\\ No newline at end of file\n","filename":"test\/langtools\/tools\/javac\/patterns\/UnnamedErrors.out","additions":35,"deletions":36,"binary":false,"changes":71,"status":"modified"}]}