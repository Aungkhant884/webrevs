{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-\/\/ so they can a later staged be removed.\n+\/\/ so they can at a later staged be removed.\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/FilePurger.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -460,2 +460,2 @@\n-        } catch (FileNotFoundException e)  {\n-            chunk.emitMissingChunkFileEvent(time);\n+        } catch (MissingChunkFileError e) {\n+            Logger.log(LogTag.JFR, LogLevel.ERROR, e.getMessage());\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/PlatformRecorder.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -725,1 +725,1 @@\n-                        Logger.log(LogTag.JFR, LogLevel.ERROR, \"Chunkfile was missing when dumping recording: \" + nsfe.getMessage() + \".\");\n+                        Logger.log(LogTag.JFR, LogLevel.ERROR, \"Missing chunkfile when writing recording \\\"\" + name + \"\\\" (\" + id + \") to \" + userPath.getRealPathText() + \".\");\n@@ -903,1 +903,1 @@\n-                    chunk.emitMissingChunkFileEvent();\n+                    Logger.log(JFR, ERROR, chunk.missingChunkFileErrorMessage());\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/PlatformRecording.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-import java.io.FileNotFoundException;\n@@ -64,1 +63,1 @@\n-    void finish(Instant endTime) throws FileNotFoundException, IOException {\n+    void finish(Instant endTime) throws MissingChunkFileError, IOException {\n@@ -75,1 +74,1 @@\n-                throw new FileNotFoundException();\n+                throw new MissingChunkFileError(missingChunkFileErrorMessage(endTime));\n@@ -195,2 +194,2 @@\n-    void emitMissingChunkFileEvent() {\n-        emitMissingChunkFileEvent(this.endTime);\n+    String missingChunkFileErrorMessage() {\n+        return missingChunkFileErrorMessage(this.endTime);\n@@ -199,4 +198,3 @@\n-    void emitMissingChunkFileEvent(Instant endTime) {\n-        String message = \"Chunkfile \\\"\"+ chunkFile.toString() + \"\\\" is missing.\";\n-        Logger.log(LogTag.JFR, LogLevel.ERROR, message + \" Data loss might occur from \" + startTime.toString() + (endTime != null ? \" to \" + endTime.toString() : \"\"));\n-        ErrorThrownEvent.commit(startTime.getNano(), endTime != null ? Duration.between(startTime, endTime).toNanos() : 0L, message, MissingChunkFileError.class);\n+    private String missingChunkFileErrorMessage(Instant endTime) {\n+        return \"Chunkfile \\\"\"+ chunkFile.toString() + \"\\\" is missing. \" +\n+            \"Data loss might occur from \" + startTime.toString() + (endTime != null ? \" to \" + endTime.toString() : \"\");\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/RepositoryChunk.java","additions":7,"deletions":9,"binary":false,"changes":16,"status":"modified"}]}