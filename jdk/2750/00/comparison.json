{"files":[{"patch":"@@ -905,2 +905,5 @@\n-\/\/ extract the JRE version string from java.lang.VersionProps.java_version\n-static const char* get_java_version(InstanceKlass* ik) {\n+\/\/ Extract version and vendor specific information.\n+static const char* get_java_version_info(InstanceKlass* ik,\n+                                         Symbol* field_name,\n+                                         char* buffer,\n+                                         int buffer_size) {\n@@ -909,1 +912,1 @@\n-               ik->find_local_field(vmSymbols::java_version_name(),\n+               ik->find_local_field(field_name,\n@@ -917,82 +920,2 @@\n-                                                        java_version,\n-                                                        sizeof(java_version));\n-    return name;\n-  } else {\n-    return NULL;\n-  }\n-}\n-\n-\/\/ extract the JRE name from java.lang.VersionProps.java_runtime_name\n-static const char* get_java_runtime_name(InstanceKlass* ik) {\n-  fieldDescriptor fd;\n-  bool found = ik != NULL &&\n-               ik->find_local_field(vmSymbols::java_runtime_name_name(),\n-                                    vmSymbols::string_signature(), &fd);\n-  if (found) {\n-    oop name_oop = ik->java_mirror()->obj_field(fd.offset());\n-    if (name_oop == NULL) {\n-      return NULL;\n-    }\n-    const char* name = java_lang_String::as_utf8_string(name_oop,\n-                                                        java_runtime_name,\n-                                                        sizeof(java_runtime_name));\n-    return name;\n-  } else {\n-    return NULL;\n-  }\n-}\n-\n-\/\/ extract the JRE version from java.lang.VersionProps.java_runtime_version\n-static const char* get_java_runtime_version(InstanceKlass* ik) {\n-  fieldDescriptor fd;\n-  bool found = ik != NULL &&\n-               ik->find_local_field(vmSymbols::java_runtime_version_name(),\n-                                    vmSymbols::string_signature(), &fd);\n-  if (found) {\n-    oop name_oop = ik->java_mirror()->obj_field(fd.offset());\n-    if (name_oop == NULL) {\n-      return NULL;\n-    }\n-    const char* name = java_lang_String::as_utf8_string(name_oop,\n-                                                        java_runtime_version,\n-                                                        sizeof(java_runtime_version));\n-    return name;\n-  } else {\n-    return NULL;\n-  }\n-}\n-\n-\/\/ extract the JRE vendor version from java.lang.VersionProps.VENDOR_VERSION\n-static const char* get_java_runtime_vendor_version(InstanceKlass* ik) {\n-  fieldDescriptor fd;\n-  bool found = ik != NULL &&\n-               ik->find_local_field(vmSymbols::java_runtime_vendor_version_name(),\n-                                    vmSymbols::string_signature(), &fd);\n-  if (found) {\n-    oop name_oop = ik->java_mirror()->obj_field(fd.offset());\n-    if (name_oop == NULL) {\n-      return NULL;\n-    }\n-    const char* name = java_lang_String::as_utf8_string(name_oop,\n-                                                        java_runtime_vendor_version,\n-                                                        sizeof(java_runtime_vendor_version));\n-    return name;\n-  } else {\n-    return NULL;\n-  }\n-}\n-\n-\/\/ extract the JRE vendor VM bug URL from java.lang.VersionProps.VENDOR_URL_VM_BUG\n-static const char* get_java_runtime_vendor_vm_bug_url(InstanceKlass* ik) {\n-  fieldDescriptor fd;\n-  bool found = ik != NULL &&\n-               ik->find_local_field(vmSymbols::java_runtime_vendor_vm_bug_url_name(),\n-                                    vmSymbols::string_signature(), &fd);\n-  if (found) {\n-    oop name_oop = ik->java_mirror()->obj_field(fd.offset());\n-    if (name_oop == NULL) {\n-      return NULL;\n-    }\n-    const char* name = java_lang_String::as_utf8_string(name_oop,\n-                                                        java_runtime_vendor_vm_bug_url,\n-                                                        sizeof(java_runtime_vendor_vm_bug_url));\n+                                                        buffer,\n+                                                        buffer_size);\n@@ -3017,5 +2940,17 @@\n-  JDK_Version::set_java_version(get_java_version(ik));\n-  JDK_Version::set_runtime_name(get_java_runtime_name(ik));\n-  JDK_Version::set_runtime_version(get_java_runtime_version(ik));\n-  JDK_Version::set_runtime_vendor_version(get_java_runtime_vendor_version(ik));\n-  JDK_Version::set_runtime_vendor_vm_bug_url(get_java_runtime_vendor_vm_bug_url(ik));\n+\n+  JDK_Version::set_java_version(get_java_version_info(ik, vmSymbols::java_version_name(),\n+                                                      java_version, sizeof(java_version)));\n+\n+  JDK_Version::set_runtime_name(get_java_version_info(ik, vmSymbols::java_runtime_name_name(),\n+                                                      java_runtime_name, sizeof(java_runtime_name)));\n+\n+  JDK_Version::set_runtime_version(get_java_version_info(ik, vmSymbols::java_runtime_version_name(),\n+                                                         java_runtime_version, sizeof(java_runtime_version)));\n+\n+  JDK_Version::set_runtime_vendor_version(get_java_version_info(ik, vmSymbols::java_runtime_vendor_version_name(),\n+                                                                java_runtime_vendor_version,\n+                                                                sizeof(java_runtime_vendor_version)));\n+\n+  JDK_Version::set_runtime_vendor_vm_bug_url(get_java_version_info(ik, vmSymbols::java_runtime_vendor_vm_bug_url_name(),\n+                                                                   java_runtime_vendor_vm_bug_url,\n+                                                                   sizeof(java_runtime_vendor_vm_bug_url)));\n","filename":"src\/hotspot\/share\/runtime\/thread.cpp","additions":25,"deletions":90,"binary":false,"changes":115,"status":"modified"}]}