{"files":[{"patch":"@@ -50,1 +50,0 @@\n-  DO(_mdx);\n@@ -87,1 +86,0 @@\n-  istate->set_mdx(NULL);\n","filename":"src\/hotspot\/cpu\/zero\/bytecodeInterpreter_zero.cpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -110,1 +110,2 @@\n-  return (intptr_t*) &(get_interpreterState()->_mdx);\n+  fatal(\"Should not call this: Zero never profiles\");\n+  return NULL; \/\/ silence compiler warnings\n","filename":"src\/hotspot\/cpu\/zero\/frame_zero.inline.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -752,1 +752,0 @@\n-  istate->set_mdx(NULL);\n","filename":"src\/hotspot\/cpu\/zero\/zeroInterpreter_zero.cpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-#include \"interpreter\/zero\/bytecodeInterpreterProfiling.hpp\"\n@@ -419,2 +418,0 @@\n-  static int _compiling;  \/\/ (UseCompiler || CountCompiledCalls)\n-\n@@ -549,1 +546,2 @@\n-  const uint mdo_last_branch_taken_count = 0;\n+  assert(!UseCompiler, \"Zero does not support compilers\");\n+  assert(!CountCompiledCalls, \"Zero does not support counting compiled calls\");\n@@ -554,1 +552,0 @@\n-      _compiling = (UseCompiler || CountCompiledCalls);\n@@ -565,5 +562,0 @@\n-      if (_compiling) {\n-        \/\/ Get or create profile data. Check for pending (async) exceptions.\n-        BI_PROFILE_GET_OR_CREATE_METHOD_DATA(handle_exception);\n-        SAFEPOINT;\n-      }\n@@ -692,6 +684,0 @@\n-      if (_compiling) {\n-        \/\/ Set MDX back to the ProfileData of the invoke bytecode that will be\n-        \/\/ restarted.\n-        SET_MDX(NULL);\n-        BI_PROFILE_GET_OR_CREATE_METHOD_DATA(handle_exception);\n-      }\n@@ -719,5 +705,0 @@\n-\n-      if (_compiling) {\n-        \/\/ Get or create profile data. Check for pending (async) exceptions.\n-        BI_PROFILE_GET_OR_CREATE_METHOD_DATA(handle_exception);\n-      }\n@@ -731,5 +712,0 @@\n-\n-      if (_compiling) {\n-        \/\/ Get or create profile data. Check for pending (async) exceptions.\n-        BI_PROFILE_GET_OR_CREATE_METHOD_DATA(handle_exception);\n-      }\n@@ -758,5 +734,0 @@\n-\n-      if (_compiling) {\n-        \/\/ Get or create profile data. Check for pending (async) exceptions.\n-        BI_PROFILE_GET_OR_CREATE_METHOD_DATA(handle_exception);\n-      }\n@@ -1061,3 +1032,0 @@\n-                  \/\/ Profile ret.\n-                  BI_PROFILE_UPDATE_RET(\/*bci=*\/((int)(intptr_t)(LOCALS_ADDR(reg))));\n-                  \/\/ Now, update the pc.\n@@ -1373,2 +1341,1 @@\n-          const bool cmp = (STACK_INT(-2) comparison STACK_INT(-1));         \\\n-          int skip = cmp                                                     \\\n+          int skip = (STACK_INT(-2) comparison STACK_INT(-1))                \\\n@@ -1377,2 +1344,0 @@\n-          \/* Profile branch. *\/                                              \\\n-          BI_PROFILE_UPDATE_BRANCH(\/*is_taken=*\/cmp);                        \\\n@@ -1384,2 +1349,1 @@\n-          const bool cmp = (STACK_INT(-1) comparison 0);                     \\\n-          int skip = cmp                                                     \\\n+          int skip = (STACK_INT(-1) comparison 0)                            \\\n@@ -1388,2 +1352,0 @@\n-          \/* Profile branch. *\/                                              \\\n-          BI_PROFILE_UPDATE_BRANCH(\/*is_taken=*\/cmp);                        \\\n@@ -1398,2 +1360,1 @@\n-          const bool cmp = (STACK_OBJECT(-2) comparison STACK_OBJECT(-1));   \\\n-          int skip = cmp                                                     \\\n+          int skip = (STACK_OBJECT(-2) comparison STACK_OBJECT(-1))          \\\n@@ -1402,2 +1363,0 @@\n-          \/* Profile branch. *\/                                              \\\n-          BI_PROFILE_UPDATE_BRANCH(\/*is_taken=*\/cmp);                        \\\n@@ -1411,2 +1370,1 @@\n-          const bool cmp = (!(STACK_OBJECT(-1) == NULL));                    \\\n-          int skip = cmp                                                     \\\n+          int skip = (!(STACK_OBJECT(-1) == NULL))                           \\\n@@ -1415,2 +1373,0 @@\n-          \/* Profile branch. *\/                                              \\\n-          BI_PROFILE_UPDATE_BRANCH(\/*is_taken=*\/cmp);                        \\\n@@ -1424,2 +1380,1 @@\n-          const bool cmp = ((STACK_OBJECT(-1) == NULL));                     \\\n-          int skip = cmp                                                     \\\n+          int skip = ((STACK_OBJECT(-1) == NULL))                            \\\n@@ -1428,2 +1383,0 @@\n-          \/* Profile branch. *\/                                              \\\n-          BI_PROFILE_UPDATE_BRANCH(\/*is_taken=*\/cmp);                        \\\n@@ -1453,1 +1406,0 @@\n-            key = -1;\n@@ -1458,2 +1410,0 @@\n-          \/\/ Profile switch.\n-          BI_PROFILE_UPDATE_SWITCH(\/*switch_index=*\/key);\n@@ -1473,3 +1423,0 @@\n-          \/\/ Remember index.\n-          int      index = -1;\n-          int      newindex = 0;\n@@ -1481,1 +1428,0 @@\n-              index = newindex;\n@@ -1484,1 +1430,0 @@\n-            newindex += 1;\n@@ -1486,2 +1431,0 @@\n-          \/\/ Profile switch.\n-          BI_PROFILE_UPDATE_SWITCH(\/*switch_index=*\/index);\n@@ -1653,2 +1596,0 @@\n-              \/\/ Decrement counter if subtype check failed.\n-              BI_PROFILE_SUBTYPECHECK_FAILED(rhsKlass);\n@@ -1657,5 +1598,0 @@\n-            \/\/ Profile checkcast with null_seen and receiver.\n-            BI_PROFILE_UPDATE_CHECKCAST(\/*null_seen=*\/false, rhsKlass);\n-          } else {\n-            \/\/ Profile checkcast with null_seen and receiver.\n-            BI_PROFILE_UPDATE_CHECKCAST(\/*null_seen=*\/true, NULL);\n@@ -2172,2 +2108,0 @@\n-              \/\/ Decrement counter at checkcast.\n-              BI_PROFILE_SUBTYPECHECK_FAILED(objKlass);\n@@ -2179,5 +2113,0 @@\n-            \/\/ Profile checkcast with null_seen and receiver.\n-            BI_PROFILE_UPDATE_CHECKCAST(\/*null_seen=*\/false, objKlass);\n-          } else {\n-            \/\/ Profile checkcast with null_seen and receiver.\n-            BI_PROFILE_UPDATE_CHECKCAST(\/*null_seen=*\/true, NULL);\n@@ -2190,2 +2119,0 @@\n-            \/\/ Profile instanceof with null_seen and receiver.\n-            BI_PROFILE_UPDATE_INSTANCEOF(\/*null_seen=*\/true, NULL);\n@@ -2210,2 +2137,0 @@\n-              \/\/ Decrement counter at checkcast.\n-              BI_PROFILE_SUBTYPECHECK_FAILED(objKlass);\n@@ -2213,2 +2138,0 @@\n-            \/\/ Profile instanceof with null_seen and receiver.\n-            BI_PROFILE_UPDATE_INSTANCEOF(\/*null_seen=*\/false, objKlass);\n@@ -2389,3 +2312,0 @@\n-        \/\/ Invokedynamic has got a call counter, just like an invokestatic -> increment!\n-        BI_PROFILE_UPDATE_CALL();\n-\n@@ -2420,3 +2340,0 @@\n-        \/\/ Invokehandle has got a call counter, just like a final call -> increment!\n-        BI_PROFILE_UPDATE_FINALCALL();\n-\n@@ -2448,2 +2365,0 @@\n-            \/\/ Profile 'special case of invokeinterface' final call.\n-            BI_PROFILE_UPDATE_FINALCALL();\n@@ -2458,2 +2373,0 @@\n-            \/\/ Profile 'special case of invokeinterface' virtual call.\n-            BI_PROFILE_UPDATE_VIRTUALCALL(rcvrKlass);\n@@ -2546,3 +2459,0 @@\n-        \/\/ Profile virtual call.\n-        BI_PROFILE_UPDATE_VIRTUALCALL(rcvr->klass());\n-\n@@ -2582,2 +2492,0 @@\n-              \/\/ Profile final call.\n-              BI_PROFILE_UPDATE_FINALCALL();\n@@ -2613,2 +2521,0 @@\n-              \/\/ Profile virtual call.\n-              BI_PROFILE_UPDATE_VIRTUALCALL(rcvrKlass);\n@@ -2621,3 +2527,0 @@\n-\n-            \/\/ Profile call.\n-            BI_PROFILE_UPDATE_CALL();\n@@ -2678,2 +2581,0 @@\n-          \/\/ Profile jump.\n-          BI_PROFILE_UPDATE_JUMP();\n@@ -2696,2 +2597,0 @@\n-          \/\/ Profile jump.\n-          BI_PROFILE_UPDATE_JUMP();\n@@ -2707,3 +2606,0 @@\n-          \/\/ Profile ret.\n-          BI_PROFILE_UPDATE_RET(\/*bci=*\/((int)(intptr_t)(LOCALS_ADDR(pc[1]))));\n-          \/\/ Now, update the pc.\n@@ -2792,3 +2688,0 @@\n-\n-      \/\/ Update profiling data.\n-      BI_PROFILE_ALIGN_TO_CURRENT_BCI();\n@@ -3386,1 +3279,0 @@\n-  tty->print_cr(\"mdx: \" INTPTR_FORMAT, (uintptr_t) this->_mdx);\n","filename":"src\/hotspot\/share\/interpreter\/zero\/bytecodeInterpreter.cpp","additions":7,"deletions":115,"binary":false,"changes":122,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-#include \"oops\/methodData.hpp\"\n@@ -113,1 +112,0 @@\n-    DataLayout*           _mdx;           \/\/ compiler profiling data for current bytecode\n@@ -191,2 +189,0 @@\n-inline DataLayout* mdx() { return _mdx; }\n-inline void set_mdx(DataLayout *new_mdx) { _mdx = new_mdx; }\n","filename":"src\/hotspot\/share\/interpreter\/zero\/bytecodeInterpreter.hpp","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1,55 +0,0 @@\n-\/*\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n- * Copyright (c) 2012, 2014 SAP SE. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-\/\/ This file defines a set of macros which are used by the c++-interpreter\n-\/\/ for updating a method's methodData object.\n-\n-\n-#ifndef SHARE_INTERPRETER_BYTECODEINTERPRETERPROFILING_HPP\n-#define SHARE_INTERPRETER_BYTECODEINTERPRETERPROFILING_HPP\n-\n-\/\/ Empty dummy implementations if profiling code is switched off. \/\/\/\/\/\/\/\/\/\/\/\/\/\/\n-\n-#define SET_MDX(mdx)\n-\n-#define BI_PROFILE_GET_OR_CREATE_METHOD_DATA(exception_handler)                \\\n-  if (ProfileInterpreter) {                                                    \\\n-    ShouldNotReachHere();                                                      \\\n-  }\n-\n-#define BI_PROFILE_ALIGN_TO_CURRENT_BCI()\n-\n-#define BI_PROFILE_UPDATE_JUMP()\n-#define BI_PROFILE_UPDATE_BRANCH(is_taken)\n-#define BI_PROFILE_UPDATE_RET(bci)\n-#define BI_PROFILE_SUBTYPECHECK_FAILED(receiver)\n-#define BI_PROFILE_UPDATE_CHECKCAST(null_seen, receiver)\n-#define BI_PROFILE_UPDATE_INSTANCEOF(null_seen, receiver)\n-#define BI_PROFILE_UPDATE_CALL()\n-#define BI_PROFILE_UPDATE_FINALCALL()\n-#define BI_PROFILE_UPDATE_VIRTUALCALL(receiver)\n-#define BI_PROFILE_UPDATE_SWITCH(switch_index)\n-\n-#endif \/\/ SHARE_INTERPRETER_BYTECODEINTERPRETERPROFILING_HPP\n","filename":"src\/hotspot\/share\/interpreter\/zero\/bytecodeInterpreterProfiling.hpp","additions":0,"deletions":55,"binary":false,"changes":55,"status":"deleted"}]}