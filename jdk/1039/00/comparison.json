{"files":[{"patch":"@@ -44,0 +44,2 @@\n+int VM_Version::_max_cpu_cores;\n+\n@@ -184,1 +186,1 @@\n-  \/\/ If an olde style \/proc\/cpuinfo (cores == 1) then if _model is an A57 (0xd07)\n+  \/\/ If max number of cores (on Linux reported in \/proc\/cpuinfo) then if _model is an A57 (0xd07)\n@@ -187,1 +189,2 @@\n-  if (_cpu == CPU_ARM && os::processor_count() == 1 && _model == 0xd07) _features |= CPU_A53MAC;\n+  assert(_max_cpu_cores != 0, \"should be initialized\");\n+  if (_cpu == CPU_ARM && _max_cpu_cores == 1 && _model == 0xd07) _features |= CPU_A53MAC;\n","filename":"src\/hotspot\/cpu\/aarch64\/vm_version_aarch64.cpp","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -43,0 +43,5 @@\n+  \/\/ Used to decide CPU_A53MAC feature of some single-core CPUs. Note this\n+  \/\/ value may be bigger than os::processor_count, which is number of online\n+  \/\/ cores on Linux, see JDK-8255716.\n+  static int _max_cpu_cores;\n+\n","filename":"src\/hotspot\/cpu\/aarch64\/vm_version_aarch64.hpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -145,0 +145,1 @@\n+  int cpu_lines = 0;\n@@ -153,0 +154,1 @@\n+          cpu_lines++;\n@@ -169,0 +171,1 @@\n+  _max_cpu_cores = cpu_lines;\n","filename":"src\/hotspot\/os_cpu\/linux_aarch64\/vm_version_linux_aarch64.cpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -99,0 +99,2 @@\n+\n+  _max_cpu_cores = os::processor_count();\n","filename":"src\/hotspot\/os_cpu\/windows_aarch64\/vm_version_windows_aarch64.cpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"}]}