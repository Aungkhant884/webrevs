{"files":[{"patch":"@@ -39,0 +39,1 @@\n+#include \"runtime\/mutexLocker.hpp\"\n@@ -63,1 +64,0 @@\n-      lock,\n@@ -74,1 +74,0 @@\n-        lock,\n@@ -85,1 +84,1 @@\n-\n+  MutexLocker fcl(lock(), Mutex::_no_safepoint_check_flag);\n@@ -93,0 +92,1 @@\n+  MutexLocker fcl(lock(), Mutex::_no_safepoint_check_flag);\n@@ -134,0 +134,1 @@\n+  MutexLocker fcl(lock(), Mutex::_no_safepoint_check_flag);\n@@ -144,0 +145,1 @@\n+  MutexLocker fcl(lock(), Mutex::_no_safepoint_check_flag);\n@@ -154,0 +156,1 @@\n+  MutexLocker fcl(lock(), Mutex::_no_safepoint_check_flag);\n@@ -175,1 +178,0 @@\n-  usage_numbers(Metaspace::MetadataType::NonClassType, &used_nc, &comm_nc, &cap_nc);\n@@ -177,2 +179,6 @@\n-  if (Metaspace::using_class_space()) {\n-    usage_numbers(Metaspace::MetadataType::ClassType, &used_c, &comm_c, &cap_c);\n+  {\n+    MutexLocker fcl(lock(), Mutex::_no_safepoint_check_flag);\n+    usage_numbers(Metaspace::MetadataType::NonClassType, &used_nc, &comm_nc, &cap_nc);\n+    if (Metaspace::using_class_space()) {\n+      usage_numbers(Metaspace::MetadataType::ClassType, &used_c, &comm_c, &cap_c);\n+    }\n","filename":"src\/hotspot\/share\/memory\/classLoaderMetaspace.cpp","additions":12,"deletions":6,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -61,1 +61,0 @@\n-  assert_lock_strong(lock());\n@@ -83,2 +82,0 @@\n-  assert_lock_strong(lock());\n-\n@@ -115,1 +112,1 @@\n-                               Mutex* lock, SizeAtomicCounter* total_used_words_counter,\n+                               SizeAtomicCounter* total_used_words_counter,\n@@ -117,1 +114,0 @@\n-  _lock(lock),\n@@ -141,2 +137,0 @@\n-\n-  MutexLocker fcl(lock(), Mutex::_no_safepoint_check_flag);\n@@ -176,2 +170,0 @@\n-  assert_lock_strong(lock());\n-\n@@ -227,1 +219,0 @@\n-  MutexLocker cl(lock(), Mutex::_no_safepoint_check_flag);\n@@ -273,2 +264,0 @@\n-\n-  assert_lock_strong(lock());\n@@ -348,1 +337,1 @@\n-  SOMETIMES(verify_locked();)\n+  SOMETIMES(verify();)\n@@ -365,2 +354,1 @@\n-void MetaspaceArena::deallocate_locked(MetaWord* p, size_t word_size) {\n-  assert_lock_strong(lock());\n+void MetaspaceArena::deallocate(MetaWord* p, size_t word_size) {\n@@ -385,8 +373,1 @@\n-  SOMETIMES(verify_locked();)\n-}\n-\n-\/\/ Prematurely returns a metaspace allocation to the _block_freelists because it is not\n-\/\/ needed anymore.\n-void MetaspaceArena::deallocate(MetaWord* p, size_t word_size) {\n-  MutexLocker cl(lock(), Mutex::_no_safepoint_check_flag);\n-  deallocate_locked(p, word_size);\n+  SOMETIMES(verify();)\n@@ -397,2 +378,0 @@\n-  MutexLocker cl(lock(), Mutex::_no_safepoint_check_flag);\n-\n@@ -424,1 +403,0 @@\n-  MutexLocker cl(lock(), Mutex::_no_safepoint_check_flag);\n@@ -444,2 +422,1 @@\n-void MetaspaceArena::verify_locked() const {\n-  assert_lock_strong(lock());\n+void MetaspaceArena::verify() const {\n@@ -465,5 +442,0 @@\n-void MetaspaceArena::verify() const {\n-  MutexLocker cl(lock(), Mutex::_no_safepoint_check_flag);\n-  verify_locked();\n-}\n-\n@@ -486,6 +458,0 @@\n-  MutexLocker fcl(_lock, Mutex::_no_safepoint_check_flag);\n-  print_on_locked(st);\n-}\n-\n-void MetaspaceArena::print_on_locked(outputStream* st) const {\n-  assert_lock_strong(_lock);\n@@ -496,2 +462,2 @@\n-  st->print_cr(\"growth-policy \" PTR_FORMAT \", lock \" PTR_FORMAT \", cm \" PTR_FORMAT \", fbl \" PTR_FORMAT,\n-                p2i(_growth_policy), p2i(_lock), p2i(_chunk_manager), p2i(_fbl));\n+  st->print_cr(\"growth-policy \" PTR_FORMAT \", cm \" PTR_FORMAT \", fbl \" PTR_FORMAT,\n+                p2i(_growth_policy), p2i(_chunk_manager), p2i(_fbl));\n","filename":"src\/hotspot\/share\/memory\/metaspace\/metaspaceArena.cpp","additions":7,"deletions":41,"binary":false,"changes":48,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-#include \"memory\/metaspace\/chunkManager.hpp\"\n@@ -33,1 +32,0 @@\n-#include \"memory\/metaspace\/metachunk.hpp\"\n@@ -35,1 +33,0 @@\n-#include \"memory\/metaspace\/metaspaceCommon.hpp\"\n@@ -43,0 +40,2 @@\n+class ChunkManager;\n+class Metachunk;\n@@ -79,9 +78,0 @@\n-  \/\/ Reference to an outside lock to use for synchronizing access to this arena.\n-  \/\/  This lock is normally owned by the CLD which owns the ClassLoaderMetaspace which\n-  \/\/  owns this arena.\n-  \/\/ Todo: This should be changed. Either the CLD should synchronize access to the\n-  \/\/       CLMS and its arenas itself, or the arena should have an own lock. The latter\n-  \/\/       would allow for more fine granular locking since it would allow access to\n-  \/\/       both class- and non-class arena in the CLMS independently.\n-  Mutex* const _lock;\n-\n@@ -132,1 +122,0 @@\n-  Mutex* lock() const                           { return _lock; }\n@@ -155,4 +144,0 @@\n-  \/\/ Prematurely returns a metaspace allocation to the _block_freelists\n-  \/\/ because it is not needed anymore (requires CLD lock to be active).\n-  void deallocate_locked(MetaWord* p, size_t word_size);\n-\n@@ -169,1 +154,1 @@\n-                 Mutex* lock, SizeAtomicCounter* total_used_words_counter,\n+                 SizeAtomicCounter* total_used_words_counter,\n@@ -194,1 +179,0 @@\n-  DEBUG_ONLY(void verify_locked() const;)\n@@ -198,1 +182,0 @@\n-  void print_on_locked(outputStream* st) const;\n","filename":"src\/hotspot\/share\/memory\/metaspace\/metaspaceArena.hpp","additions":3,"deletions":20,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -27,0 +27,1 @@\n+#include \"memory\/metaspace\/chunkManager.hpp\"\n@@ -47,1 +48,4 @@\n-  delete _arena;\n+  {\n+    MutexLocker fcl(_lock, Mutex::_no_safepoint_check_flag);\n+    delete _arena;\n+  }\n@@ -52,0 +56,1 @@\n+  MutexLocker fcl(_lock, Mutex::_no_safepoint_check_flag);\n@@ -56,0 +61,1 @@\n+  MutexLocker fcl(_lock, Mutex::_no_safepoint_check_flag);\n@@ -100,1 +106,1 @@\n-    arena = new MetaspaceArena(_context->cm(), growth_policy, lock, &_used_words_counter, _name);\n+    arena = new MetaspaceArena(_context->cm(), growth_policy, &_used_words_counter, _name);\n","filename":"src\/hotspot\/share\/memory\/metaspace\/testHelpers.cpp","additions":8,"deletions":2,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -27,0 +27,1 @@\n+#include \"memory\/metaspace\/chunkManager.hpp\"\n@@ -32,0 +33,1 @@\n+#include \"memory\/metaspace\/metaspaceCommon.hpp\"\n@@ -34,2 +36,0 @@\n-#include \"runtime\/mutex.hpp\"\n-#include \"runtime\/mutexLocker.hpp\"\n@@ -58,1 +58,0 @@\n-  Mutex* _lock;\n@@ -65,7 +64,1 @@\n-    _lock = new Mutex(Monitor::nosafepoint, \"gtest-MetaspaceArenaTest_lock\");\n-    \/\/ Lock during space creation, since this is what happens in the VM too\n-    \/\/  (see ClassLoaderData::metaspace_non_null(), which we mimick here).\n-    {\n-      MutexLocker ml(_lock,  Mutex::_no_safepoint_check_flag);\n-      _arena = new MetaspaceArena(&_context.cm(), _growth_policy, _lock, &_used_words_counter, name);\n-    }\n+    _arena = new MetaspaceArena(&_context.cm(), _growth_policy, &_used_words_counter, name);\n@@ -73,1 +66,0 @@\n-\n@@ -97,1 +89,0 @@\n-    delete _lock;\n","filename":"test\/hotspot\/gtest\/metaspace\/test_metaspacearena.cpp","additions":3,"deletions":12,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -62,2 +62,0 @@\n-  Mutex* _lock;\n-\n@@ -134,1 +132,0 @@\n-    _lock(NULL),\n@@ -141,5 +138,1 @@\n-    _lock = new Mutex(Monitor::nosafepoint, \"gtest-MetaspaceArenaTestBed_lock\");\n-    \/\/ Lock during space creation, since this is what happens in the VM too\n-    \/\/  (see ClassLoaderData::metaspace_non_null(), which we mimick here).\n-    MutexLocker ml(_lock,  Mutex::_no_safepoint_check_flag);\n-    _arena = new MetaspaceArena(cm, alloc_sequence, _lock, used_words_counter, \"gtest-MetaspaceArenaTestBed-sm\");\n+    _arena = new MetaspaceArena(cm, alloc_sequence, used_words_counter, \"gtest-MetaspaceArenaTestBed-sm\");\n@@ -164,1 +157,0 @@\n-    delete _lock;\n","filename":"test\/hotspot\/gtest\/metaspace\/test_metaspacearena_stress.cpp","additions":1,"deletions":9,"binary":false,"changes":10,"status":"modified"}]}