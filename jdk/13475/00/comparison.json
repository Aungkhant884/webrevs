{"files":[{"patch":"@@ -87,1 +87,0 @@\n-bool   Arguments::_java_compiler                = false;\n@@ -1307,2 +1306,9 @@\n-    process_java_compiler_argument(value);\n-    \/\/ Record value in Arguments, but let it get passed to Java.\n+    \/\/ we no longer support java.compiler system property, log a warning and let it get\n+    \/\/ passed to Java, like any other system property\n+    if (strlen(value) == 0 || strcasecmp(value, \"NONE\") == 0) {\n+        \/\/ for applications using NONE or empty value, log a more informative message\n+        warning(\"The java.compiler system property is obsolete and no longer supported,\"\n+                \" use -Xint if you want to run the application in interpreted-only mode.\");\n+    } else {\n+        warning(\"The java.compiler system property is obsolete and no longer supported.\");\n+    }\n@@ -1413,1 +1419,0 @@\n-  set_java_compiler(false);\n@@ -1903,10 +1908,0 @@\n-\/\/ Parsing of java.compiler property\n-\n-void Arguments::process_java_compiler_argument(const char* arg) {\n-  \/\/ For backwards compatibility, Djava.compiler=NONE or \"\"\n-  \/\/ causes us to switch to -Xint mode UNLESS -Xdebug\n-  \/\/ is also specified.\n-  if (strlen(arg) == 0 || strcasecmp(arg, \"NONE\") == 0) {\n-    set_java_compiler(true);    \/\/ \"-Djava.compiler[=...]\" most recently seen.\n-  }\n-}\n@@ -3044,9 +3039,0 @@\n-  \/\/ This must be done after all arguments have been processed.\n-  \/\/ java_compiler() true means set to \"NONE\" or empty.\n-  if (java_compiler() && !xdebug_mode()) {\n-    \/\/ For backwards compatibility, we switch to interpreted mode if\n-    \/\/ -Djava.compiler=\"NONE\" or \"\" is specified AND \"-Xdebug\" was\n-    \/\/ not specified.\n-    set_mode_flags(_int);\n-  }\n-\n","filename":"src\/hotspot\/share\/runtime\/arguments.cpp","additions":9,"deletions":23,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -349,3 +349,0 @@\n-  static bool _java_compiler;\n-  static void set_java_compiler(bool arg) { _java_compiler = arg; }\n-  static bool java_compiler()   { return _java_compiler; }\n@@ -409,1 +406,0 @@\n-  static void process_java_compiler_argument(const char* arg);\n","filename":"src\/hotspot\/share\/runtime\/arguments.hpp","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -763,2 +763,0 @@\n-     * <tr><th scope=\"row\">{@systemProperty java.compiler}<\/th>\n-     *     <td>Name of JIT compiler to use<\/td><\/tr>\n","filename":"src\/java.base\/share\/classes\/java\/lang\/System.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"}]}