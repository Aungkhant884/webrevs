{"files":[{"patch":"@@ -510,1 +510,1 @@\n-  if (AndIL_shift_and_mask(phase, in(1), in(2), T_INT, true)) {\n+  if (AndIL_shift_and_mask_is_always_zero(phase, in(1), in(2), T_INT, true)) {\n@@ -649,1 +649,1 @@\n-  if (AndIL_shift_and_mask(phase, in(1), in(2), T_LONG, true)) {\n+  if (AndIL_shift_and_mask_is_always_zero(phase, in(1), in(2), T_LONG, true)) {\n@@ -1730,1 +1730,1 @@\n-bool MulNode::AndIL_shift_and_mask(PhaseGVN* phase, Node* shift, Node* mask, BasicType bt, bool check_reverse) {\n+bool MulNode::AndIL_shift_and_mask_is_always_zero(PhaseGVN* phase, Node* shift, Node* mask, BasicType bt, bool check_reverse) {\n@@ -1756,1 +1756,1 @@\n-      return AndIL_shift_and_mask(phase, mask, shift, bt, false);\n+      return AndIL_shift_and_mask_is_always_zero(phase, mask, shift, bt, false);\n@@ -1809,1 +1809,1 @@\n-      if (AndIL_shift_and_mask(phase, add1, mask, bt, false)) {\n+      if (AndIL_shift_and_mask_is_always_zero(phase, add1, mask, bt, false)) {\n@@ -1812,1 +1812,1 @@\n-      } else if (AndIL_shift_and_mask(phase, add2, mask, bt, false)) {\n+      } else if (AndIL_shift_and_mask_is_always_zero(phase, add2, mask, bt, false)) {\n","filename":"src\/hotspot\/share\/opto\/mulnode.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -86,1 +86,1 @@\n-  static bool AndIL_shift_and_mask(PhaseGVN* phase, Node* shift, Node* mask, BasicType bt, bool check_reverse);\n+  static bool AndIL_shift_and_mask_is_always_zero(PhaseGVN* phase, Node* shift, Node* mask, BasicType bt, bool check_reverse);\n","filename":"src\/hotspot\/share\/opto\/mulnode.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}