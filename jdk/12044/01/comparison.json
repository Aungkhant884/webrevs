{"files":[{"patch":"@@ -607,1 +607,1 @@\n-      THREAD->set_do_not_unlock();\n+      THREAD->set_do_not_unlock_if_synchronized(true);\n@@ -642,1 +642,1 @@\n-      THREAD->clr_do_not_unlock();\n+      THREAD->set_do_not_unlock_if_synchronized(false);\n@@ -3101,1 +3101,1 @@\n-    if (THREAD->do_not_unlock()) {\n+    if (THREAD->do_not_unlock_if_synchronized()) {\n@@ -3106,1 +3106,1 @@\n-      THREAD->clr_do_not_unlock();\n+      THREAD->set_do_not_unlock_if_synchronized(false);\n@@ -3232,1 +3232,1 @@\n-    THREAD->clr_do_not_unlock();\n+    THREAD->set_do_not_unlock_if_synchronized(false);\n","filename":"src\/hotspot\/share\/interpreter\/zero\/bytecodeInterpreter.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -744,4 +744,0 @@\n-  void set_do_not_unlock(void)                   { _do_not_unlock_if_synchronized = true; }\n-  void clr_do_not_unlock(void)                   { _do_not_unlock_if_synchronized = false; }\n-  bool do_not_unlock(void)                       { return _do_not_unlock_if_synchronized; }\n-\n","filename":"src\/hotspot\/share\/runtime\/javaThread.hpp","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"}]}