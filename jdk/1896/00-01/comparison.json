{"files":[{"patch":"@@ -0,0 +1,74 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8198317\n+ * @summary Enhance JavacTool.getTask for flexibility\n+ * @library \/tools\/lib\n+ * @modules jdk.compiler\/com.sun.tools.javac.api\n+ *          jdk.compiler\/com.sun.tools.javac.main\n+ *          jdk.compiler\/com.sun.tools.javac.util\n+ * @build toolbox.ToolBox\n+ * @run main T8198317\n+ *\/\n+\n+import java.io.*;\n+import java.lang.reflect.*;\n+import javax.tools.ToolProvider;\n+\n+import com.sun.tools.javac.api.JavacTaskImpl;\n+import com.sun.tools.javac.util.Log;\n+\n+import toolbox.ToolBox;\n+import toolbox.TestRunner;\n+\n+public class T8198317 extends TestRunner{\n+    ToolBox tb;\n+\n+    public T8198317() {\n+        super(System.err);\n+        tb = new ToolBox();\n+    }\n+\n+    public static void main(String[] args) throws Exception {\n+        T8198317 t = new T8198317();\n+        t.runTests();\n+    }\n+\n+    @Test\n+    public void testLogSettingInJavacTool() throws Exception {\n+        \/\/ TODO Situation: out is null and the value is not set in the context.\n+        \/\/ TODO Situation: out is not null and out is not a PrintWriter.\n+\n+        \/\/ Situation: out is not null and out is a PrintWriter.\n+        PrintWriter expectedPW = new PrintWriter(System.out);\n+        JavacTaskImpl task2 = (JavacTaskImpl) ToolProvider\n+                .getSystemJavaCompiler()\n+                .getTask(expectedPW, null, null, null, null, null);\n+        PrintWriter writer2 = task2.getContext().get(Log.errKey);\n+        if (!expectedPW.equals(writer2)) {\n+            throw new Error(\"The PrintWriter is set uncorrectly.\");\n+        }\n+    }\n+}\n","filename":"test\/langtools\/tools\/javac\/api\/8198317\/T8198317.java","additions":74,"deletions":0,"binary":false,"changes":74,"status":"added"}]}