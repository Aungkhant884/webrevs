{"files":[{"patch":"@@ -36,2 +36,7 @@\n-import java.io.*;\n-import java.lang.reflect.*;\n+import java.io.StringWriter;\n+import java.io.PrintWriter;\n+import java.io.ByteArrayOutputStream;\n+import java.io.PrintStream;\n+import java.net.URI;\n+import java.util.List;\n+import java.util.Arrays;\n@@ -39,0 +44,2 @@\n+import javax.tools.SimpleJavaFileObject;\n+import javax.tools.JavaFileObject;\n@@ -45,0 +52,1 @@\n+import static toolbox.ToolBox.lineSeparator;\n@@ -61,2 +69,22 @@\n-        \/\/ TODO Situation: out is null and the value is not set in the context.\n-        \/\/ TODO Situation: out is not null and out is not a PrintWriter.\n+        String code = \"\"\"\n+                import java.io.Serializable;\n+                class Test implements Serializable {\n+                    public static final int serialVersionUID = 1;\n+                }\"\"\";\n+\n+        List<String> expected = Arrays.asList(\n+                \"Test.java:3:29: compiler.warn.long.SVUID: Test\",\n+                \"1 warning\");\n+\n+        List<? extends JavaFileObject> files = Arrays.asList(new MemFile(\"Test.java\", code));\n+\n+        \/\/ Situation: out is null and the value is not set in the context.\n+        ByteArrayOutputStream bais = new ByteArrayOutputStream();\n+        PrintStream printStream = new PrintStream(bais);\n+        PrintStream prev = System.err;\n+        System.setErr(printStream);\n+        ToolProvider.getSystemJavaCompiler()\n+                .getTask(null, null, null, Arrays.asList(\"-XDrawDiagnostics\", \"-Xlint:serial\"), null, files)\n+                .call();\n+        tb.checkEqual(expected, Arrays.asList(bais.toString().split(lineSeparator)));\n+        System.setErr(prev);\n@@ -65,7 +93,31 @@\n-        PrintWriter expectedPW = new PrintWriter(System.out);\n-        JavacTaskImpl task2 = (JavacTaskImpl) ToolProvider\n-                .getSystemJavaCompiler()\n-                .getTask(expectedPW, null, null, null, null, null);\n-        PrintWriter writer2 = task2.getContext().get(Log.errKey);\n-        if (!expectedPW.equals(writer2)) {\n-            throw new Error(\"The PrintWriter is set uncorrectly.\");\n+        StringWriter stringWriter2 = new StringWriter();\n+        PrintWriter expectedPW2 = new PrintWriter(stringWriter2);\n+        ToolProvider.getSystemJavaCompiler()\n+                .getTask(expectedPW2, null, null, Arrays.asList(\"-XDrawDiagnostics\", \"-Xlint:serial\"), null, files)\n+                .call();\n+        tb.checkEqual(expected, Arrays.asList(stringWriter2.toString().split(lineSeparator)));\n+\n+        \/\/ Situation: out is not null and out is not a PrintWriter.\n+        StringWriter stringWriter3 = new StringWriter();\n+        ToolProvider.getSystemJavaCompiler()\n+                .getTask(stringWriter3, null, null, Arrays.asList(\"-XDrawDiagnostics\", \"-Xlint:serial\"), null, files)\n+                .call();\n+        tb.checkEqual(expected, Arrays.asList(stringWriter3.toString().split(lineSeparator)));\n+    }\n+\n+    class MemFile extends SimpleJavaFileObject {\n+        public final String text;\n+\n+        MemFile(String name, String text) {\n+            super(URI.create(name), JavaFileObject.Kind.SOURCE);\n+            this.text = text;\n+        }\n+\n+        @Override\n+        public String getName() {\n+            return uri.toString();\n+        }\n+\n+        @Override\n+        public String getCharContent(boolean ignoreEncodingErrors) {\n+            return text;\n","filename":"test\/langtools\/tools\/javac\/api\/8198317\/T8198317.java","additions":63,"deletions":11,"binary":false,"changes":74,"status":"modified"}]}