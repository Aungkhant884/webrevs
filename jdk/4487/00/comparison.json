{"files":[{"patch":"@@ -656,8 +656,1 @@\n-        Object[] candidatesArray = candidates.toArray();\n-        Provider[] result = new Provider[candidatesArray.length];\n-\n-        for (int i = 0; i < result.length; i++) {\n-            result[i] = (Provider)candidatesArray[i];\n-        }\n-\n-        return result;\n+        return candidates.toArray(new Provider[0]);\n","filename":"src\/java.base\/share\/classes\/java\/security\/Security.java","additions":1,"deletions":8,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2006, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -244,4 +244,2 @@\n-        Object[] attribVals = attributes.values().toArray();\n-\n-        out.putOrderedSetOf(DerValue.tag_SetOf,\n-                            castToDerEncoder(attribVals));\n+        DerEncoder[] attribVals = attributes.values().toArray(new DerEncoder[0]);\n+        out.putOrderedSetOf(DerValue.tag_SetOf, attribVals);\n@@ -351,13 +349,0 @@\n-    \/**\n-     * Cast an object array whose components are\n-     * <code>DerEncoder<\/code>s to <code>DerEncoder[]<\/code>.\n-     *\/\n-    static DerEncoder[] castToDerEncoder(Object[] objs) {\n-\n-        DerEncoder[] encoders = new DerEncoder[objs.length];\n-\n-        for (int i=0; i < encoders.length; i++)\n-            encoders[i] = (DerEncoder) objs[i];\n-\n-        return encoders;\n-    }\n","filename":"src\/java.base\/share\/classes\/sun\/security\/pkcs\/PKCS9Attributes.java","additions":3,"deletions":18,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -3355,8 +3355,1 @@\n-            String[] fontNames = null;\n-            if (fontMapNames.size() > 0) {\n-                fontNames = new String[fontMapNames.size()];\n-                Object [] keyNames = fontMapNames.keySet().toArray();\n-                for (int i=0; i < keyNames.length; i++) {\n-                    fontNames[i] = (String)keyNames[i];\n-                }\n-            }\n+            String[] fontNames = fontMapNames.keySet().toArray(new String[0]);\n@@ -3431,5 +3424,1 @@\n-        String[] retval =  new String[familyNames.size()];\n-        Object [] keyNames = familyNames.keySet().toArray();\n-        for (int i=0; i < keyNames.length; i++) {\n-            retval[i] = familyNames.get(keyNames[i]);\n-        }\n+        String[] retval = familyNames.values().toArray(new String[0]);\n","filename":"src\/java.desktop\/share\/classes\/sun\/font\/SunFontManager.java","additions":2,"deletions":13,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -191,5 +191,1 @@\n-            String[] retval =  new String[map.size()];\n-            Object [] keyNames = map.keySet().toArray();\n-            for (int i=0; i < keyNames.length; i++) {\n-                retval[i] = map.get(keyNames[i]);\n-            }\n+            String[] retval = map.values().toArray(new String[0]);\n","filename":"src\/java.desktop\/share\/classes\/sun\/java2d\/SunGraphicsEnvironment.java","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -92,6 +92,1 @@\n-        Object[]  keys = map.keySet().toArray();\n-        String[]  sortedKeys = new String[keys.length];\n-\n-        for ( int nkey = 0; nkey < keys.length; nkey++ ) {\n-            sortedKeys[nkey] = keys[nkey].toString();\n-        }\n+        String[] sortedKeys = map.keySet().toArray(new String[0]);\n","filename":"src\/java.desktop\/windows\/classes\/sun\/awt\/windows\/WDesktopProperties.java","additions":2,"deletions":7,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2012, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -430,7 +430,1 @@\n-        Object [] arr = vecTableNames.toArray();\n-        String []strArr = new String[arr.length];\n-\n-        for( int i = 0;i < arr.length; i++) {\n-           strArr[i] = arr[i].toString();\n-        }\n-\n+        String[] strArr = vecTableNames.toArray(new String[0]);\n","filename":"src\/java.sql.rowset\/share\/classes\/com\/sun\/rowset\/JoinRowSetImpl.java","additions":2,"deletions":8,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -237,2 +237,1 @@\n-         JavaVFrame[] jvframes = new JavaVFrame[tmp.size()];\n-         System.arraycopy(tmp.toArray(), 0, jvframes, 0, jvframes.length);\n+         JavaVFrame[] jvframes = tmp.toArray(new JavaVFrame[0]);\n@@ -289,2 +288,1 @@\n-      String[] res = new String[names.size()];\n-      System.arraycopy(names.toArray(), 0, res, 0, res.length);\n+      String[] res = names.toArray(new String[0]);\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/tools\/PStack.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -68,3 +68,1 @@\n-      Object[] tmpArray = tmp.toArray();\n-      klasses = new InstanceKlass[tmpArray.length];\n-      System.arraycopy(tmpArray, 0, klasses, 0, tmpArray.length);\n+      klasses = tmp.toArray(new InstanceKlass[0]);\n@@ -94,3 +92,1 @@\n-      Object[] tmpArray = tmp.toArray();\n-      InstanceKlass[] searchResult = new InstanceKlass[tmpArray.length];\n-      System.arraycopy(tmpArray, 0, searchResult, 0, tmpArray.length);\n+      InstanceKlass[] searchResult = tmp.toArray(new InstanceKlass[0]);\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/utilities\/SystemDictionaryHelper.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"}]}