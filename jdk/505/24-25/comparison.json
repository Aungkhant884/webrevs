{"files":[{"patch":"@@ -63,1 +63,1 @@\n-    ShenandoahConcurrentMark::mark_through_ref<T, UPDATE_REFS, NO_DEDUP>(p, _heap, _queue, _mark_context, true);\n+    ShenandoahConcurrentMark::mark_through_ref<T, UPDATE_REFS, NO_DEDUP>(p, _heap, _queue, _mark_context, false);\n@@ -81,1 +81,1 @@\n-  _strong(true)\n+  _weak(false)\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentMark.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -77,1 +77,1 @@\n-  static inline void mark_through_ref(T* p, ShenandoahHeap* heap, ShenandoahObjToScanQueue* q, ShenandoahMarkingContext* const mark_context, bool strong);\n+  static inline void mark_through_ref(T* p, ShenandoahHeap* heap, ShenandoahObjToScanQueue* q, ShenandoahMarkingContext* const mark_context, bool weak);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentMark.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -48,2 +48,4 @@\n-  bool strong = task->is_strong();\n-  cl->set_strong(strong);\n+  \/\/ Are we in weak subgraph scan?\n+  bool weak = task->is_weak();\n+  cl->set_weak(weak);\n+\n@@ -57,1 +59,1 @@\n-      do_chunked_array_start<T>(q, cl, obj, strong);\n+      do_chunked_array_start<T>(q, cl, obj, weak);\n@@ -73,1 +75,1 @@\n-    do_chunked_array<T>(q, cl, obj, task->chunk(), task->pow(), strong);\n+    do_chunked_array<T>(q, cl, obj, task->chunk(), task->pow(), weak);\n@@ -107,1 +109,1 @@\n-inline void ShenandoahConcurrentMark::do_chunked_array_start(ShenandoahObjToScanQueue* q, T* cl, oop obj, bool strong) {\n+inline void ShenandoahConcurrentMark::do_chunked_array_start(ShenandoahObjToScanQueue* q, T* cl, oop obj, bool weak) {\n@@ -138,1 +140,1 @@\n-      bool pushed = q->push(ShenandoahMarkTask(array, false, strong, 1, pow));\n+      bool pushed = q->push(ShenandoahMarkTask(array, true, weak, 1, pow));\n@@ -151,1 +153,1 @@\n-        bool pushed = q->push(ShenandoahMarkTask(array, false, strong, left_chunk, pow));\n+        bool pushed = q->push(ShenandoahMarkTask(array, true, weak, left_chunk, pow));\n@@ -169,1 +171,1 @@\n-inline void ShenandoahConcurrentMark::do_chunked_array(ShenandoahObjToScanQueue* q, T* cl, oop obj, int chunk, int pow, bool strong) {\n+inline void ShenandoahConcurrentMark::do_chunked_array(ShenandoahObjToScanQueue* q, T* cl, oop obj, int chunk, int pow, bool weak) {\n@@ -180,1 +182,1 @@\n-    bool pushed = q->push(ShenandoahMarkTask(array, false, strong, chunk - 1, pow));\n+    bool pushed = q->push(ShenandoahMarkTask(array, true, weak, chunk - 1, pow));\n@@ -224,1 +226,1 @@\n-      ShenandoahConcurrentMark::mark_through_ref<oop, NONE, STRING_DEDUP>(p, _heap, _queue, _mark_context, true);\n+      ShenandoahConcurrentMark::mark_through_ref<oop, NONE, STRING_DEDUP>(p, _heap, _queue, _mark_context, false);\n@@ -230,1 +232,1 @@\n-inline void ShenandoahConcurrentMark::mark_through_ref(T *p, ShenandoahHeap* heap, ShenandoahObjToScanQueue* q, ShenandoahMarkingContext* const mark_context, bool strong) {\n+inline void ShenandoahConcurrentMark::mark_through_ref(T *p, ShenandoahHeap* heap, ShenandoahObjToScanQueue* q, ShenandoahMarkingContext* const mark_context, bool weak) {\n@@ -263,3 +265,1 @@\n-      if (strong) {\n-        marked = mark_context->mark_strong(obj, \/* was_upgraded = *\/ skip_live);\n-      } else {\n+      if (weak) {\n@@ -267,0 +267,2 @@\n+      } else {\n+        marked = mark_context->mark_strong(obj, \/* was_upgraded = *\/ skip_live);\n@@ -269,1 +271,1 @@\n-        bool pushed = q->push(ShenandoahMarkTask(obj, skip_live, strong));\n+        bool pushed = q->push(ShenandoahMarkTask(obj, skip_live, weak));\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentMark.inline.hpp","additions":17,"deletions":15,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -52,1 +52,1 @@\n-  bool _strong;\n+  bool _weak;\n@@ -61,2 +61,2 @@\n-  bool is_strong() const {\n-    return _strong;\n+  bool is_weak() const {\n+    return _weak;\n@@ -65,2 +65,2 @@\n-  void set_strong(bool strong) {\n-    _strong = strong;\n+  void set_weak(bool weak) {\n+    _weak = weak;\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOopClosures.hpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-  ShenandoahConcurrentMark::mark_through_ref<T, UPDATE_REFS, STRING_DEDUP>(p, _heap, _queue, _mark_context, _strong);\n+  ShenandoahConcurrentMark::mark_through_ref<T, UPDATE_REFS, STRING_DEDUP>(p, _heap, _queue, _mark_context, _weak);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOopClosures.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -337,1 +337,0 @@\n-    Thread* thread = Thread::current();\n@@ -339,2 +338,2 @@\n-    bool strong = cl->is_strong();\n-    cl->set_strong(false);\n+    bool weak = cl->is_weak();\n+    cl->set_weak(true);\n@@ -346,1 +345,1 @@\n-    cl->set_strong(strong);\n+    cl->set_weak(weak);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahReferenceProcessor.cpp","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -84,2 +84,1 @@\n-\/\/ and \"strong\". For \"strong\", this inverts the natural boolean meaning. This improves the frequent case\n-\/\/ by avoiding additional math for strong\/counted-live references.\n+\/\/ and \"weak\". This aligns with their frequent values: strong\/counted-live references.\n@@ -155,1 +154,1 @@\n-  static const uintptr_t strong_extract_mask    = 1 << 1;\n+  static const uintptr_t weak_extract_mask      = 1 << 1;\n@@ -179,2 +178,2 @@\n-  inline bool decode_strong(uintptr_t val) const {\n-    return (val & strong_extract_mask) == 0;\n+  inline bool decode_weak(uintptr_t val) const {\n+    return (val & weak_extract_mask) != 0;\n@@ -187,1 +186,1 @@\n-  inline uintptr_t encode_oop(oop obj, bool skip_live, bool strong) const {\n+  inline uintptr_t encode_oop(oop obj, bool skip_live, bool weak) const {\n@@ -193,2 +192,2 @@\n-    if (!strong) {\n-      encoded |= strong_extract_mask;\n+    if (weak) {\n+      encoded |= weak_extract_mask;\n@@ -208,3 +207,3 @@\n-  ShenandoahMarkTask(oop o = NULL, bool skip_live = false, bool strong = true) {\n-    uintptr_t enc = encode_oop(o, skip_live, strong);\n-    assert(decode_oop(enc) == o,    \"oop encoding should work: \" PTR_FORMAT, p2i(o));\n+  ShenandoahMarkTask(oop o = NULL, bool skip_live = false, bool weak = false) {\n+    uintptr_t enc = encode_oop(o, skip_live, weak);\n+    assert(decode_oop(enc) == o,     \"oop encoding should work: \" PTR_FORMAT, p2i(o));\n@@ -212,2 +211,2 @@\n-    assert(decode_strong(enc) == strong, \"strong encoding should work\");\n-    assert(decode_not_chunked(enc), \"task should not be chunked\");\n+    assert(decode_weak(enc) == weak, \"weak encoding should work\");\n+    assert(decode_not_chunked(enc),  \"task should not be chunked\");\n@@ -217,2 +216,2 @@\n-  ShenandoahMarkTask(oop o, bool skip_live, bool strong, int chunk, int pow) {\n-    uintptr_t enc_oop = encode_oop(o, skip_live, strong);\n+  ShenandoahMarkTask(oop o, bool skip_live, bool weak, int chunk, int pow) {\n+    uintptr_t enc_oop = encode_oop(o, skip_live, weak);\n@@ -223,2 +222,2 @@\n-    assert(decode_cnt_live(enc) == !skip_live, \"skip_live encoding should work\");\n-    assert(decode_strong(enc) == strong, \"strong encoding should work\");\n+    assert(decode_cnt_live(enc) == !skip_live, \"skip_live should be true for chunked tasks\");\n+    assert(decode_weak(enc) == weak,   \"weak encoding should work\");\n@@ -238,3 +237,3 @@\n-  inline bool is_not_chunked() const { return decode_not_chunked(_obj);    }\n-  inline bool is_strong()      const { return decode_strong(_obj);         }\n-  inline bool count_liveness() const { return decode_cnt_live(_obj);       }\n+  inline bool is_not_chunked() const { return decode_not_chunked(_obj); }\n+  inline bool is_weak()        const { return decode_weak(_obj);        }\n+  inline bool count_liveness() const { return decode_cnt_live(_obj);    }\n@@ -262,2 +261,2 @@\n-  bool _count_liveness;\n-  bool _strong;\n+  bool _skip_live;\n+  bool _weak;\n@@ -268,2 +267,2 @@\n-  ShenandoahMarkTask(oop o = NULL, bool skip_live = false, bool strong = true, int chunk = 0, int pow = 0):\n-    _obj(o), _count_liveness(!skip_live), _strong(strong), _chunk(chunk), _pow(pow) {\n+  ShenandoahMarkTask(oop o = NULL, bool skip_live = false, bool weak = false, int chunk = 0, int pow = 0):\n+    _obj(o), _skip_live(skip_live), _weak(weak), _chunk(chunk), _pow(pow) {\n@@ -280,2 +279,2 @@\n-  inline bool is_strong()      const { return _strong; }\n-  inline bool count_liveness() const { return _count_liveness; }\n+  inline bool is_weak()        const { return _weak; }\n+  inline bool count_liveness() const { return !_skip_live; }\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahTaskqueue.hpp","additions":25,"deletions":26,"binary":false,"changes":51,"status":"modified"}]}