{"files":[{"patch":"@@ -112,1 +112,1 @@\n-    result = load_reference_barrier(access.gen(), result, LIR_OprFact::addressConst(0), ShenandoahBarrierSet::NORMAL);\n+    result = load_reference_barrier(access.gen(), result, LIR_OprFact::addressConst(0), ShenandoahBarrierSet::ShenandoahLRBKind::NORMAL);\n","filename":"src\/hotspot\/cpu\/aarch64\/gc\/shenandoah\/c1\/shenandoahBarrierSetC1_aarch64.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -677,1 +677,1 @@\n-    case ShenandoahBarrierSet::NORMAL:\n+    case ShenandoahBarrierSet::ShenandoahLRBKind::NORMAL:\n@@ -680,4 +680,1 @@\n-    case ShenandoahBarrierSet::NATIVE:\n-      __ far_call(RuntimeAddress(bs->load_reference_barrier_native_rt_code_blob()->code_begin()));\n-      break;\n-    case ShenandoahBarrierSet::WEAK:\n+    case ShenandoahBarrierSet::ShenandoahLRBKind::WEAK:\n@@ -686,0 +683,3 @@\n+    case ShenandoahBarrierSet::ShenandoahLRBKind::NATIVE:\n+      __ far_call(RuntimeAddress(bs->load_reference_barrier_native_rt_code_blob()->code_begin()));\n+      break;\n@@ -750,6 +750,16 @@\n-  if (kind == ShenandoahBarrierSet::NATIVE) {\n-    __ mov(lr, CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier_native));\n-  } else if (kind == ShenandoahBarrierSet::WEAK) {\n-    if (UseCompressedOops) {\n-      __ mov(lr, CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier_native_narrow));\n-    } else {\n+  switch (kind) {\n+    case ShenandoahBarrierSet::ShenandoahLRBKind::NORMAL:\n+      if (UseCompressedOops) {\n+        __ mov(lr, CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier_narrow));\n+      } else {\n+        __ mov(lr, CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier));\n+      }\n+      break;\n+    case ShenandoahBarrierSet::ShenandoahLRBKind::WEAK:\n+      if (UseCompressedOops) {\n+        __ mov(lr, CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier_native_narrow));\n+      } else {\n+        __ mov(lr, CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier_native));\n+      }\n+      break;\n+    case ShenandoahBarrierSet::ShenandoahLRBKind::NATIVE:\n@@ -757,8 +767,3 @@\n-    }\n-  } else {\n-    assert(kind == ShenandoahBarrierSet::NORMAL, \"what else?\");\n-    if (UseCompressedOops) {\n-      __ mov(lr, CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier_narrow));\n-    } else {\n-      __ mov(lr, CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier));\n-    }\n+      break;\n+   default:\n+      ShouldNotReachHere();\n","filename":"src\/hotspot\/cpu\/aarch64\/gc\/shenandoah\/shenandoahBarrierSetAssembler_aarch64.cpp","additions":24,"deletions":19,"binary":false,"changes":43,"status":"modified"},{"patch":"@@ -114,1 +114,1 @@\n-    result = load_reference_barrier(access.gen(), result, LIR_OprFact::addressConst(0), ShenandoahBarrierSet::NORMAL);\n+    result = load_reference_barrier(access.gen(), result, LIR_OprFact::addressConst(0), ShenandoahBarrierSet::ShenandoahLRBKind::NORMAL);\n","filename":"src\/hotspot\/cpu\/x86\/gc\/shenandoah\/c1\/shenandoahBarrierSetC1_x86.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -878,1 +878,1 @@\n-    case ShenandoahBarrierSet::NORMAL:\n+    case ShenandoahBarrierSet::ShenandoahLRBKind::NORMAL:\n@@ -881,4 +881,1 @@\n-    case ShenandoahBarrierSet::NATIVE:\n-      __ call(RuntimeAddress(bs->load_reference_barrier_native_rt_code_blob()->code_begin()));\n-      break;\n-    case ShenandoahBarrierSet::WEAK:\n+    case ShenandoahBarrierSet::ShenandoahLRBKind::WEAK:\n@@ -887,0 +884,3 @@\n+    case ShenandoahBarrierSet::ShenandoahLRBKind::NATIVE:\n+      __ call(RuntimeAddress(bs->load_reference_barrier_native_rt_code_blob()->code_begin()));\n+      break;\n@@ -962,6 +962,16 @@\n-  if (kind == ShenandoahBarrierSet::NATIVE) {\n-    __ call_VM_leaf(CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier_native), c_rarg0, c_rarg1);\n-  } else if (kind == ShenandoahBarrierSet::WEAK) {\n-    if (UseCompressedOops) {\n-      __ call_VM_leaf(CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier_native_narrow), c_rarg0, c_rarg1);\n-    } else {\n+  switch (kind) {\n+    case ShenandoahBarrierSet::ShenandoahLRBKind::NORMAL:\n+      if (UseCompressedOops) {\n+        __ call_VM_leaf(CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier_narrow), c_rarg0, c_rarg1);\n+      } else {\n+        __ call_VM_leaf(CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier), c_rarg0, c_rarg1);\n+      }\n+      break;\n+    case ShenandoahBarrierSet::ShenandoahLRBKind::WEAK:\n+      if (UseCompressedOops) {\n+        __ call_VM_leaf(CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier_native_narrow), c_rarg0, c_rarg1);\n+      } else {\n+        __ call_VM_leaf(CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier_native), c_rarg0, c_rarg1);\n+      }\n+      break;\n+    case ShenandoahBarrierSet::ShenandoahLRBKind::NATIVE:\n@@ -969,8 +979,3 @@\n-    }\n-  } else {\n-    assert(kind == ShenandoahBarrierSet::NORMAL, \"what else?\");\n-    if (UseCompressedOops) {\n-      __ call_VM_leaf(CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier_narrow), c_rarg0, c_rarg1);\n-    } else {\n-      __ call_VM_leaf(CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier), c_rarg0, c_rarg1);\n-    }\n+      break;\n+    default:\n+      ShouldNotReachHere();\n@@ -981,4 +986,10 @@\n-  if (kind == ShenandoahBarrierSet::NORMAL) {\n-    __ call_VM_leaf(CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier), rax, rbx);\n-  } else {\n-    __ call_VM_leaf(CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier_native), rax, rbx);\n+  switch (kind) {\n+    case ShenandoahBarrierSet::ShenandoahLRBKind::NORMAL:\n+      __ call_VM_leaf(CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier), rax, rbx);\n+      break;\n+    case ShenandoahBarrierSet::ShenandoahLRBKind::WEAK:\n+    case ShenandoahBarrierSet::ShenandoahLRBKind::NATIVE:\n+      __ call_VM_leaf(CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier_native), rax, rbx);\n+      break;\n+    default:\n+      ShouldNotReachHere();\n","filename":"src\/hotspot\/cpu\/x86\/gc\/shenandoah\/shenandoahBarrierSetAssembler_x86.cpp","additions":34,"deletions":23,"binary":false,"changes":57,"status":"modified"},{"patch":"@@ -274,1 +274,1 @@\n-    C1ShenandoahLoadReferenceBarrierCodeGenClosure lrb_code_gen_cl(ShenandoahBarrierSet::NORMAL);\n+    C1ShenandoahLoadReferenceBarrierCodeGenClosure lrb_code_gen_cl(ShenandoahBarrierSet::ShenandoahLRBKind::NORMAL);\n@@ -279,1 +279,1 @@\n-    C1ShenandoahLoadReferenceBarrierCodeGenClosure lrb_native_code_gen_cl(ShenandoahBarrierSet::NATIVE);\n+    C1ShenandoahLoadReferenceBarrierCodeGenClosure lrb_native_code_gen_cl(ShenandoahBarrierSet::ShenandoahLRBKind::NATIVE);\n@@ -284,1 +284,1 @@\n-    C1ShenandoahLoadReferenceBarrierCodeGenClosure lrb_weakref_code_gen_cl(ShenandoahBarrierSet::WEAK);\n+    C1ShenandoahLoadReferenceBarrierCodeGenClosure lrb_weakref_code_gen_cl(ShenandoahBarrierSet::ShenandoahLRBKind::WEAK);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/c1\/shenandoahBarrierSetC1.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -646,1 +646,1 @@\n-    load_store = kit->gvn().transform(new ShenandoahLoadReferenceBarrierNode(NULL, load_store, ShenandoahBarrierSet::NORMAL));\n+    load_store = kit->gvn().transform(new ShenandoahLoadReferenceBarrierNode(NULL, load_store, ShenandoahBarrierSet::ShenandoahLRBKind::NORMAL));\n@@ -714,1 +714,1 @@\n-    result = kit->gvn().transform(new ShenandoahLoadReferenceBarrierNode(NULL, result, ShenandoahBarrierSet::NORMAL));\n+    result = kit->gvn().transform(new ShenandoahLoadReferenceBarrierNode(NULL, result, ShenandoahBarrierSet::ShenandoahLRBKind::NORMAL));\n@@ -1063,1 +1063,1 @@\n-         ((ShenandoahLoadReferenceBarrierNode*)in2)->kind() == ShenandoahBarrierSet::NORMAL)) {\n+         ((ShenandoahLoadReferenceBarrierNode*)in2)->kind() == ShenandoahBarrierSet::ShenandoahLRBKind::NORMAL)) {\n@@ -1068,1 +1068,1 @@\n-         ((ShenandoahLoadReferenceBarrierNode*)in1)->kind() == ShenandoahBarrierSet::NORMAL)) {\n+         ((ShenandoahLoadReferenceBarrierNode*)in1)->kind() == ShenandoahBarrierSet::ShenandoahLRBKind::NORMAL)) {\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/c2\/shenandoahBarrierSetC2.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -979,1 +979,1 @@\n-    case ShenandoahBarrierSet::NATIVE:\n+    case ShenandoahBarrierSet::ShenandoahLRBKind::NATIVE:\n@@ -983,1 +983,1 @@\n-    case ShenandoahBarrierSet::WEAK:\n+    case ShenandoahBarrierSet::ShenandoahLRBKind::WEAK:\n@@ -989,1 +989,1 @@\n-    case ShenandoahBarrierSet::NORMAL:\n+    case ShenandoahBarrierSet::ShenandoahLRBKind::NORMAL:\n@@ -1362,1 +1362,1 @@\n-    if (lrb->kind() == ShenandoahBarrierSet::NORMAL) {\n+    if (lrb->kind() == ShenandoahBarrierSet::ShenandoahLRBKind::NORMAL) {\n@@ -2917,1 +2917,15 @@\n-  return Node::hash() + _kind;\n+  uint hash = Node::hash();\n+  switch (_kind) {\n+    case ShenandoahBarrierSet::ShenandoahLRBKind::NORMAL:\n+      hash += 0;\n+      break;\n+    case ShenandoahBarrierSet::ShenandoahLRBKind::WEAK:\n+      hash += 1;\n+      break;\n+    case ShenandoahBarrierSet::ShenandoahLRBKind::NATIVE:\n+      hash += 2;\n+      break;\n+    default:\n+      ShouldNotReachHere();\n+  }\n+  return hash;\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/c2\/shenandoahSupport.cpp","additions":19,"deletions":5,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -120,1 +120,1 @@\n-    return NATIVE;\n+    return ShenandoahLRBKind::NATIVE;\n@@ -122,1 +122,1 @@\n-    return WEAK;\n+    return ShenandoahLRBKind::WEAK;\n@@ -124,1 +124,1 @@\n-    return NORMAL;\n+    return ShenandoahLRBKind::NORMAL;\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahBarrierSet.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n-  enum ShenandoahLRBKind {\n+  enum class ShenandoahLRBKind {\n@@ -42,1 +42,0 @@\n-private:\n@@ -44,0 +43,1 @@\n+private:\n@@ -100,1 +100,1 @@\n-  template <class T>\n+  template <typename T>\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahBarrierSet.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -137,3 +137,0 @@\n-\n-  \/\/ template <typename T>\n-  \/\/ void keep_alive(oop reference, ReferenceType type) const;\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahReferenceProcessor.hpp","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"}]}