{"files":[{"patch":"@@ -2006,1 +2006,1 @@\n-    ref_processor()->process_references(workers());\n+    ref_processor()->process_references(workers(), true \/* concurrent *\/);\n@@ -2148,1 +2148,5 @@\n-      op_weak_refs();\n+      {\n+        ShenandoahTimingsTracker t(ShenandoahPhaseTimings::conc_weak_refs_work);\n+        ShenandoahGCWorkerPhase worker_phase(ShenandoahPhaseTimings::conc_weak_refs_work);\n+        ref_processor()->process_references(workers(), false \/* concurrent *\/);\n+      }\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -252,1 +252,1 @@\n-  rp->process_references(heap->workers());\n+  rp->process_references(heap->workers(), false \/* concurrent *\/);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahMarkCompact.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -345,2 +345,0 @@\n-  assert(reference_discovered<T>(reference) == NULL, \"Already discovered: \" PTR_FORMAT \" discovered: \" PTR_FORMAT,\n-         p2i(reference), p2i(reference_discovered<T>(reference)));\n@@ -487,1 +485,1 @@\n-void ShenandoahReferenceProcessor::process_references(WorkGang* workers) {\n+void ShenandoahReferenceProcessor::process_references(WorkGang* workers, bool concurrent) {\n@@ -501,1 +499,1 @@\n-  enqueue_references();\n+  enqueue_references(concurrent);\n@@ -514,1 +512,1 @@\n-void ShenandoahReferenceProcessor::enqueue_references() {\n+void ShenandoahReferenceProcessor::enqueue_references(bool concurrent) {\n@@ -520,1 +518,2 @@\n-  if (ShenandoahSafepoint::is_at_shenandoah_safepoint()) {\n+  if (!concurrent) {\n+    \/\/ When called from mark-compact or degen-GC, the locking is done by the VMOperation,\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahReferenceProcessor.cpp","additions":5,"deletions":6,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -155,1 +155,1 @@\n-  void enqueue_references();\n+  void enqueue_references(bool concurrent);\n@@ -171,1 +171,1 @@\n-  void process_references(WorkGang* workers);\n+  void process_references(WorkGang* workers, bool concurrent);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahReferenceProcessor.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @requires vm.gc != \"Shenandoah\"\n","filename":"test\/hotspot\/jtreg\/gc\/TestSoftReferencesBehaviorOnOOME.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}