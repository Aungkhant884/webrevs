{"files":[{"patch":"@@ -112,1 +112,1 @@\n-    result = load_reference_barrier(access.gen(), result, LIR_OprFact::addressConst(0), ShenandoahBarrierSet::ShenandoahLRBKind::NORMAL);\n+    result = load_reference_barrier(access.gen(), result, LIR_OprFact::addressConst(0), ShenandoahBarrierSet::AccessKind::NORMAL);\n","filename":"src\/hotspot\/cpu\/aarch64\/gc\/shenandoah\/c1\/shenandoahBarrierSetC1_aarch64.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -677,1 +677,1 @@\n-    case ShenandoahBarrierSet::ShenandoahLRBKind::NORMAL:\n+    case ShenandoahBarrierSet::AccessKind::NORMAL:\n@@ -680,1 +680,1 @@\n-    case ShenandoahBarrierSet::ShenandoahLRBKind::WEAK:\n+    case ShenandoahBarrierSet::AccessKind::WEAK:\n@@ -683,1 +683,1 @@\n-    case ShenandoahBarrierSet::ShenandoahLRBKind::NATIVE:\n+    case ShenandoahBarrierSet::AccessKind::NATIVE:\n@@ -743,1 +743,1 @@\n-void ShenandoahBarrierSetAssembler::generate_c1_load_reference_barrier_runtime_stub(StubAssembler* sasm, ShenandoahBarrierSet::ShenandoahLRBKind kind) {\n+void ShenandoahBarrierSetAssembler::generate_c1_load_reference_barrier_runtime_stub(StubAssembler* sasm, ShenandoahBarrierSet::AccessKind kind) {\n@@ -751,1 +751,1 @@\n-    case ShenandoahBarrierSet::ShenandoahLRBKind::NORMAL:\n+    case ShenandoahBarrierSet::AccessKind::NORMAL:\n@@ -758,1 +758,1 @@\n-    case ShenandoahBarrierSet::ShenandoahLRBKind::WEAK:\n+    case ShenandoahBarrierSet::AccessKind::WEAK:\n@@ -765,1 +765,1 @@\n-    case ShenandoahBarrierSet::ShenandoahLRBKind::NATIVE:\n+    case ShenandoahBarrierSet::AccessKind::NATIVE:\n","filename":"src\/hotspot\/cpu\/aarch64\/gc\/shenandoah\/shenandoahBarrierSetAssembler_aarch64.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -76,1 +76,1 @@\n-  void generate_c1_load_reference_barrier_runtime_stub(StubAssembler* sasm, ShenandoahBarrierSet::ShenandoahLRBKind kind);\n+  void generate_c1_load_reference_barrier_runtime_stub(StubAssembler* sasm, ShenandoahBarrierSet::AccessKind kind);\n","filename":"src\/hotspot\/cpu\/aarch64\/gc\/shenandoah\/shenandoahBarrierSetAssembler_aarch64.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -114,1 +114,1 @@\n-    result = load_reference_barrier(access.gen(), result, LIR_OprFact::addressConst(0), ShenandoahBarrierSet::ShenandoahLRBKind::NORMAL);\n+    result = load_reference_barrier(access.gen(), result, LIR_OprFact::addressConst(0), ShenandoahBarrierSet::AccessKind::NORMAL);\n","filename":"src\/hotspot\/cpu\/x86\/gc\/shenandoah\/c1\/shenandoahBarrierSetC1_x86.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -878,1 +878,1 @@\n-    case ShenandoahBarrierSet::ShenandoahLRBKind::NORMAL:\n+    case ShenandoahBarrierSet::AccessKind::NORMAL:\n@@ -881,1 +881,1 @@\n-    case ShenandoahBarrierSet::ShenandoahLRBKind::WEAK:\n+    case ShenandoahBarrierSet::AccessKind::WEAK:\n@@ -884,1 +884,1 @@\n-    case ShenandoahBarrierSet::ShenandoahLRBKind::NATIVE:\n+    case ShenandoahBarrierSet::AccessKind::NATIVE:\n@@ -953,1 +953,1 @@\n-void ShenandoahBarrierSetAssembler::generate_c1_load_reference_barrier_runtime_stub(StubAssembler* sasm, ShenandoahBarrierSet::ShenandoahLRBKind kind) {\n+void ShenandoahBarrierSetAssembler::generate_c1_load_reference_barrier_runtime_stub(StubAssembler* sasm, ShenandoahBarrierSet::AccessKind kind) {\n@@ -963,1 +963,1 @@\n-    case ShenandoahBarrierSet::ShenandoahLRBKind::NORMAL:\n+    case ShenandoahBarrierSet::AccessKind::NORMAL:\n@@ -970,1 +970,1 @@\n-    case ShenandoahBarrierSet::ShenandoahLRBKind::WEAK:\n+    case ShenandoahBarrierSet::AccessKind::WEAK:\n@@ -977,1 +977,1 @@\n-    case ShenandoahBarrierSet::ShenandoahLRBKind::NATIVE:\n+    case ShenandoahBarrierSet::AccessKind::NATIVE:\n@@ -987,1 +987,1 @@\n-    case ShenandoahBarrierSet::ShenandoahLRBKind::NORMAL:\n+    case ShenandoahBarrierSet::AccessKind::NORMAL:\n@@ -990,2 +990,2 @@\n-    case ShenandoahBarrierSet::ShenandoahLRBKind::WEAK:\n-    case ShenandoahBarrierSet::ShenandoahLRBKind::NATIVE:\n+    case ShenandoahBarrierSet::AccessKind::WEAK:\n+    case ShenandoahBarrierSet::AccessKind::NATIVE:\n","filename":"src\/hotspot\/cpu\/x86\/gc\/shenandoah\/shenandoahBarrierSetAssembler_x86.cpp","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -75,1 +75,1 @@\n-  void generate_c1_load_reference_barrier_runtime_stub(StubAssembler* sasm, ShenandoahBarrierSet::ShenandoahLRBKind kind);\n+  void generate_c1_load_reference_barrier_runtime_stub(StubAssembler* sasm, ShenandoahBarrierSet::AccessKind kind);\n","filename":"src\/hotspot\/cpu\/x86\/gc\/shenandoah\/shenandoahBarrierSetAssembler_x86.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -112,1 +112,1 @@\n-LIR_Opr ShenandoahBarrierSetC1::load_reference_barrier(LIRGenerator* gen, LIR_Opr obj, LIR_Opr addr, ShenandoahBarrierSet::ShenandoahLRBKind kind) {\n+LIR_Opr ShenandoahBarrierSetC1::load_reference_barrier(LIRGenerator* gen, LIR_Opr obj, LIR_Opr addr, ShenandoahBarrierSet::AccessKind kind) {\n@@ -120,1 +120,1 @@\n-LIR_Opr ShenandoahBarrierSetC1::load_reference_barrier_impl(LIRGenerator* gen, LIR_Opr obj, LIR_Opr addr, ShenandoahBarrierSet::ShenandoahLRBKind kind) {\n+LIR_Opr ShenandoahBarrierSetC1::load_reference_barrier_impl(LIRGenerator* gen, LIR_Opr obj, LIR_Opr addr, ShenandoahBarrierSet::AccessKind kind) {\n@@ -216,1 +216,1 @@\n-    ShenandoahBarrierSet::ShenandoahLRBKind kind = ShenandoahBarrierSet::access_kind(decorators, type);\n+    ShenandoahBarrierSet::AccessKind kind = ShenandoahBarrierSet::access_kind(decorators, type);\n@@ -256,1 +256,1 @@\n-  const ShenandoahBarrierSet::ShenandoahLRBKind _kind;\n+  const ShenandoahBarrierSet::AccessKind _kind;\n@@ -259,1 +259,1 @@\n-  C1ShenandoahLoadReferenceBarrierCodeGenClosure(ShenandoahBarrierSet::ShenandoahLRBKind kind) : _kind(kind) {}\n+  C1ShenandoahLoadReferenceBarrierCodeGenClosure(ShenandoahBarrierSet::AccessKind kind) : _kind(kind) {}\n@@ -274,1 +274,1 @@\n-    C1ShenandoahLoadReferenceBarrierCodeGenClosure lrb_code_gen_cl(ShenandoahBarrierSet::ShenandoahLRBKind::NORMAL);\n+    C1ShenandoahLoadReferenceBarrierCodeGenClosure lrb_code_gen_cl(ShenandoahBarrierSet::AccessKind::NORMAL);\n@@ -279,1 +279,1 @@\n-    C1ShenandoahLoadReferenceBarrierCodeGenClosure lrb_native_code_gen_cl(ShenandoahBarrierSet::ShenandoahLRBKind::NATIVE);\n+    C1ShenandoahLoadReferenceBarrierCodeGenClosure lrb_native_code_gen_cl(ShenandoahBarrierSet::AccessKind::NATIVE);\n@@ -284,1 +284,1 @@\n-    C1ShenandoahLoadReferenceBarrierCodeGenClosure lrb_weakref_code_gen_cl(ShenandoahBarrierSet::ShenandoahLRBKind::WEAK);\n+    C1ShenandoahLoadReferenceBarrierCodeGenClosure lrb_weakref_code_gen_cl(ShenandoahBarrierSet::AccessKind::WEAK);\n@@ -286,2 +286,2 @@\n-                                                                          \"shenandoah_load_reference_barrier_weakref_slow\",\n-                                                                          false, &lrb_weakref_code_gen_cl);\n+                                                                           \"shenandoah_load_reference_barrier_weakref_slow\",\n+                                                                           false, &lrb_weakref_code_gen_cl);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/c1\/shenandoahBarrierSetC1.cpp","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -97,1 +97,1 @@\n-  ShenandoahBarrierSet::ShenandoahLRBKind _kind;\n+  ShenandoahBarrierSet::AccessKind _kind;\n@@ -99,1 +99,1 @@\n-  ShenandoahLoadReferenceBarrierStub(LIR_Opr obj, LIR_Opr addr, LIR_Opr result, LIR_Opr tmp1, LIR_Opr tmp2, ShenandoahBarrierSet::ShenandoahLRBKind kind) :\n+  ShenandoahLoadReferenceBarrierStub(LIR_Opr obj, LIR_Opr addr, LIR_Opr result, LIR_Opr tmp1, LIR_Opr tmp2, ShenandoahBarrierSet::AccessKind kind) :\n@@ -114,1 +114,1 @@\n-  ShenandoahBarrierSet::ShenandoahLRBKind kind() const { return _kind; }\n+  ShenandoahBarrierSet::AccessKind kind() const { return _kind; }\n@@ -199,1 +199,1 @@\n-  LIR_Opr load_reference_barrier(LIRGenerator* gen, LIR_Opr obj, LIR_Opr addr, ShenandoahBarrierSet::ShenandoahLRBKind kind);\n+  LIR_Opr load_reference_barrier(LIRGenerator* gen, LIR_Opr obj, LIR_Opr addr, ShenandoahBarrierSet::AccessKind kind);\n@@ -202,1 +202,1 @@\n-  LIR_Opr load_reference_barrier_impl(LIRGenerator* gen, LIR_Opr obj, LIR_Opr addr, ShenandoahBarrierSet::ShenandoahLRBKind kind);\n+  LIR_Opr load_reference_barrier_impl(LIRGenerator* gen, LIR_Opr obj, LIR_Opr addr, ShenandoahBarrierSet::AccessKind kind);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/c1\/shenandoahBarrierSetC1.hpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -548,1 +548,1 @@\n-    ShenandoahBarrierSet::ShenandoahLRBKind kind = ShenandoahBarrierSet::access_kind(decorators, type);\n+    ShenandoahBarrierSet::AccessKind kind = ShenandoahBarrierSet::access_kind(decorators, type);\n@@ -646,1 +646,1 @@\n-    load_store = kit->gvn().transform(new ShenandoahLoadReferenceBarrierNode(NULL, load_store, ShenandoahBarrierSet::ShenandoahLRBKind::NORMAL));\n+    load_store = kit->gvn().transform(new ShenandoahLoadReferenceBarrierNode(NULL, load_store, ShenandoahBarrierSet::AccessKind::NORMAL));\n@@ -714,1 +714,1 @@\n-    result = kit->gvn().transform(new ShenandoahLoadReferenceBarrierNode(NULL, result, ShenandoahBarrierSet::ShenandoahLRBKind::NORMAL));\n+    result = kit->gvn().transform(new ShenandoahLoadReferenceBarrierNode(NULL, result, ShenandoahBarrierSet::AccessKind::NORMAL));\n@@ -1063,1 +1063,1 @@\n-         ((ShenandoahLoadReferenceBarrierNode*)in2)->kind() == ShenandoahBarrierSet::ShenandoahLRBKind::NORMAL)) {\n+         ((ShenandoahLoadReferenceBarrierNode*)in2)->kind() == ShenandoahBarrierSet::AccessKind::NORMAL)) {\n@@ -1068,1 +1068,1 @@\n-         ((ShenandoahLoadReferenceBarrierNode*)in1)->kind() == ShenandoahBarrierSet::ShenandoahLRBKind::NORMAL)) {\n+         ((ShenandoahLoadReferenceBarrierNode*)in1)->kind() == ShenandoahBarrierSet::AccessKind::NORMAL)) {\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/c2\/shenandoahBarrierSetC2.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -965,1 +965,1 @@\n-                                               ShenandoahBarrierSet::ShenandoahLRBKind kind, PhaseIdealLoop* phase) {\n+                                               ShenandoahBarrierSet::AccessKind kind, PhaseIdealLoop* phase) {\n@@ -979,1 +979,1 @@\n-    case ShenandoahBarrierSet::ShenandoahLRBKind::NATIVE:\n+    case ShenandoahBarrierSet::AccessKind::NATIVE:\n@@ -983,1 +983,1 @@\n-    case ShenandoahBarrierSet::ShenandoahLRBKind::WEAK:\n+    case ShenandoahBarrierSet::AccessKind::WEAK:\n@@ -989,1 +989,1 @@\n-    case ShenandoahBarrierSet::ShenandoahLRBKind::NORMAL:\n+    case ShenandoahBarrierSet::AccessKind::NORMAL:\n@@ -1362,1 +1362,1 @@\n-    if (lrb->kind() == ShenandoahBarrierSet::ShenandoahLRBKind::NORMAL) {\n+    if (lrb->kind() == ShenandoahBarrierSet::AccessKind::NORMAL) {\n@@ -2903,1 +2903,1 @@\n-ShenandoahLoadReferenceBarrierNode::ShenandoahLoadReferenceBarrierNode(Node* ctrl, Node* obj, ShenandoahBarrierSet::ShenandoahLRBKind kind)\n+ShenandoahLoadReferenceBarrierNode::ShenandoahLoadReferenceBarrierNode(Node* ctrl, Node* obj, ShenandoahBarrierSet::AccessKind kind)\n@@ -2908,1 +2908,1 @@\n-ShenandoahBarrierSet::ShenandoahLRBKind ShenandoahLoadReferenceBarrierNode::kind() const {\n+ShenandoahBarrierSet::AccessKind ShenandoahLoadReferenceBarrierNode::kind() const {\n@@ -2919,1 +2919,1 @@\n-    case ShenandoahBarrierSet::ShenandoahLRBKind::NORMAL:\n+    case ShenandoahBarrierSet::AccessKind::NORMAL:\n@@ -2922,1 +2922,1 @@\n-    case ShenandoahBarrierSet::ShenandoahLRBKind::WEAK:\n+    case ShenandoahBarrierSet::AccessKind::WEAK:\n@@ -2925,1 +2925,1 @@\n-    case ShenandoahBarrierSet::ShenandoahLRBKind::NATIVE:\n+    case ShenandoahBarrierSet::AccessKind::NATIVE:\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/c2\/shenandoahSupport.cpp","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -65,1 +65,1 @@\n-                            ShenandoahBarrierSet::ShenandoahLRBKind kind, PhaseIdealLoop* phase);\n+                            ShenandoahBarrierSet::AccessKind kind, PhaseIdealLoop* phase);\n@@ -234,1 +234,1 @@\n-  ShenandoahBarrierSet::ShenandoahLRBKind _kind;\n+  ShenandoahBarrierSet::AccessKind _kind;\n@@ -237,1 +237,1 @@\n-  ShenandoahLoadReferenceBarrierNode(Node* ctrl, Node* val, ShenandoahBarrierSet::ShenandoahLRBKind kind);\n+  ShenandoahLoadReferenceBarrierNode(Node* ctrl, Node* val, ShenandoahBarrierSet::AccessKind kind);\n@@ -239,1 +239,1 @@\n-  ShenandoahBarrierSet::ShenandoahLRBKind kind() const;\n+  ShenandoahBarrierSet::AccessKind kind() const;\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/c2\/shenandoahSupport.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -118,1 +118,1 @@\n-ShenandoahBarrierSet::ShenandoahLRBKind ShenandoahBarrierSet::access_kind(DecoratorSet decorators, BasicType type) {\n+ShenandoahBarrierSet::AccessKind ShenandoahBarrierSet::access_kind(DecoratorSet decorators, BasicType type) {\n@@ -120,1 +120,1 @@\n-    return ShenandoahLRBKind::NATIVE;\n+    return AccessKind::NATIVE;\n@@ -122,1 +122,1 @@\n-    return ShenandoahLRBKind::WEAK;\n+    return AccessKind::WEAK;\n@@ -124,1 +124,1 @@\n-    return ShenandoahLRBKind::NORMAL;\n+    return AccessKind::NORMAL;\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahBarrierSet.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -37,1 +37,2 @@\n-  enum class ShenandoahLRBKind {\n+  enum class AccessKind {\n+    \/\/ Regular in-heap access on reference fields\n@@ -39,0 +40,2 @@\n+\n+    \/\/ Off-heap reference access\n@@ -40,0 +43,2 @@\n+\n+    \/\/ In-heap reference access on referent fields of j.l.r.Reference objects\n@@ -64,1 +69,1 @@\n-  static ShenandoahLRBKind access_kind(DecoratorSet decorators, BasicType type);\n+  static AccessKind access_kind(DecoratorSet decorators, BasicType type);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahBarrierSet.hpp","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -50,0 +50,4 @@\n+static bool is_instance_ref_klass(Klass* k) {\n+  return k->is_instance_klass() && InstanceKlass::cast(k)->reference_type() != REF_NONE;\n+}\n+\n@@ -97,1 +101,3 @@\n-      obj = ShenandoahForwarding::get_forwardee(obj);\n+      if (is_instance_ref_klass(obj->klass())) {\n+        obj = ShenandoahForwarding::get_forwardee(obj);\n+      }\n@@ -576,4 +582,0 @@\n-  static bool is_instance_ref_klass(Klass* k) {\n-    return k->is_instance_klass() && InstanceKlass::cast(k)->reference_type() != REF_NONE;\n-  }\n-\n@@ -851,1 +853,1 @@\n-          _verify_forwarded_none,                  \/\/ no forwarded references\n+          _verify_forwarded_none,                    \/\/ no forwarded references\n@@ -853,4 +855,4 @@\n-          _verify_cset_disable,                        \/\/ non-forwarded references to cset expected\n-          _verify_liveness_complete,                \/\/ liveness data must be complete here\n-          _verify_regions_disable,                  \/\/ trash regions not yet recycled\n-          _verify_gcstate_stable,                   \/\/ mark should have stabilized the heap\n+          _verify_cset_disable,                      \/\/ non-forwarded references to cset expected\n+          _verify_liveness_complete,                 \/\/ liveness data must be complete here\n+          _verify_regions_disable,                   \/\/ trash regions not yet recycled\n+          _verify_gcstate_stable,                    \/\/ mark should have stabilized the heap\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahVerifier.cpp","additions":12,"deletions":10,"binary":false,"changes":22,"status":"modified"}]}