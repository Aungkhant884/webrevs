{"files":[{"patch":"@@ -148,1 +148,1 @@\n-  static const uintptr_t oop_extract_mask       = right_n_bits(oop_bits);\n+  static const uintptr_t oop_extract_mask       = right_n_bits(oop_bits) & ~((uintptr_t)3);\n@@ -154,0 +154,3 @@\n+  static const uintptr_t count_liveness_decode_mask = 1 << 0;\n+  static const uintptr_t strong_decode_mask         = 1 << 1;\n+\n@@ -172,1 +175,9 @@\n-  inline uintptr_t encode_oop(oop obj) const {\n+  inline bool decode_strong(uintptr_t val) const {\n+    return (val & strong_decode_mask) != 0;\n+  }\n+\n+  inline bool decode_count_liveness(uintptr_t val) const {\n+    return (val & count_liveness_decode_mask) != 0;\n+  }\n+\n+  inline uintptr_t encode_oop(oop obj, bool count_liveness, bool strong) const {\n@@ -174,1 +185,8 @@\n-    return cast_from_oop<uintptr_t>(obj);\n+    uintptr_t encoded = cast_from_oop<uintptr_t>(obj);\n+    if (count_liveness) {\n+      encoded |= count_liveness_decode_mask;\n+    }\n+    if (strong) {\n+      encoded |= strong_decode_mask;\n+    }\n+    return encoded;\n@@ -186,2 +204,2 @@\n-  ShenandoahMarkTask(oop o = NULL) {\n-    uintptr_t enc = encode_oop(o);\n+  ShenandoahMarkTask(oop o = NULL, bool count_liveness = true, bool strong = true) {\n+    uintptr_t enc = encode_oop(o, count_liveness, strong);\n@@ -190,0 +208,2 @@\n+    assert(decode_count_liveness(enc) == count_liveness, \"count_liveness encoding should work\");\n+    assert(decode_strong(enc) == strong, \"strong encoding should work\");\n@@ -193,2 +213,2 @@\n-  ShenandoahMarkTask(oop o, int chunk, int pow) {\n-    uintptr_t enc_oop = encode_oop(o);\n+  ShenandoahMarkTask(oop o, bool count_liveness, bool strong, int chunk, int pow) {\n+    uintptr_t enc_oop = encode_oop(o, count_liveness, strong);\n@@ -202,0 +222,2 @@\n+    assert(decode_count_liveness(enc) == count_liveness, \"count_liveness encoding should work\");\n+    assert(decode_strong(enc) == strong, \"strong encoding should work\");\n@@ -212,1 +234,3 @@\n-  inline bool is_not_chunked() const { return decode_not_chunked(_obj); }\n+  inline bool is_not_chunked() const { return decode_not_chunked(_obj);    }\n+  inline bool is_strong()      const { return decode_strong(_obj);         }\n+  inline bool count_liveness() const { return decode_count_liveness(_obj); }\n@@ -234,0 +258,2 @@\n+  bool _count_liveness;\n+  bool _strong;\n@@ -238,2 +264,2 @@\n-  ShenandoahMarkTask(oop o = NULL, int chunk = 0, int pow = 0):\n-    _obj(o), _chunk(chunk), _pow(pow) {\n+  ShenandoahMarkTask(oop o = NULL, bool count_liveness = true, bool strong = true, int chunk = 0, int pow = 0):\n+    _obj(o), _count_liveness(count_liveness), _strong(strong), _chunk(chunk), _pow(pow) {\n@@ -250,0 +276,2 @@\n+  inline bool is_strong()      const { return _strong; }\n+  inline bool count_liveness() const { return _count_liveness; }\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahTaskqueue.hpp","additions":38,"deletions":10,"binary":false,"changes":48,"status":"modified"}]}