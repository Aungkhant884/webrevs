[{"commit":{"message":"Merge branch 'master' into JDK-8302673"},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"},{"filename":"src\/hotspot\/share\/opto\/addnode.hpp"},{"filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/IRNode.java"}],"sha":"a6db3cc449302024662ff051f5937077f08c3332"},{"commit":{"message":"Defer op(x, x) to constant\/identity propagation early"},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"}],"sha":"c3ea6f75acdc831472fd764ed7fedb9b9e38d00e"},{"commit":{"message":"Merge branch 'master' into JDK-8302673"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/IRNode.java"}],"sha":"a769913de7905273cdd364fb0f1ea606e2461a82"},{"commit":{"message":"Refactor idealization and extracted Identity transformation for clarity"},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"},{"filename":"src\/hotspot\/share\/opto\/addnode.hpp"}],"sha":"3aba9bcd34685c2eeb8ce721343dfd44067558d3"},{"commit":{"message":"Make auxiliary add operand extraction function return a tuple"},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"}],"sha":"8f8faf271464ef2ca96fef32c6b51b834dfc8f49"},{"commit":{"message":"Randomize array values in min\/max test computation"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/superword\/MinMaxRed_Int.java"}],"sha":"c736c0a008c1514883ae476ef5e9fc0f8fcc314d"},{"commit":{"message":"Merge branch 'master' into JDK-8302673"},"files":[],"sha":"6308044099d85a4e05fba9afc31966a6b241b3a0"},{"commit":{"message":"Merge branch 'master' into JDK-8302673"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/IRNode.java"}],"sha":"80b100edfade7be7dc609ce663bc43f65127045d"},{"commit":{"message":"Refine comments"},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"}],"sha":"9fd482b5e98dea03e0a1e4e6b65970edf04595ff"},{"commit":{"message":"Update copyright header"},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.hpp"}],"sha":"83e7630ea287fd03d46454e1c8292a6fe6f7c863"},{"commit":{"message":"Uncomment tests"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/superword\/MinMaxRed_Int.java"}],"sha":"3c120957ea70c94be6e0fa4caeb023246d0599db"},{"commit":{"message":"Complement idealization tests with negative ones"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/MaxMinINodeIdealizationTests.java"}],"sha":"d53cb5341cd8e851990f440f9883b3d26ab353f2"},{"commit":{"message":"Add some comments"},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"}],"sha":"89cebb15334ebd016b2be46c618d88973466a231"},{"commit":{"message":"Refactor"},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"},{"filename":"src\/hotspot\/share\/opto\/addnode.hpp"}],"sha":"d7c7987c0b68eee5155d152a1252eb41a195dbb4"},{"commit":{"message":"Simplify"},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"},{"filename":"src\/hotspot\/share\/opto\/addnode.hpp"}],"sha":"872bcbee39941956b9819de5b81c9c02623cfee5"},{"commit":{"message":"Re-add comment"},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"}],"sha":"7adf075429668fbe8b0c81ba5382ef156acad789"},{"commit":{"message":"Flatten nested if"},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"}],"sha":"2149d34af7e28a2ae928dba9c5415e2846dd22f2"},{"commit":{"message":"Extract MaxINode::Ideal() and MinINode::Ideal() into MaxNode::IdealI()"},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"},{"filename":"src\/hotspot\/share\/opto\/addnode.hpp"}],"sha":"c56efa2d341b2a8d93e2855aebd0076bf896f7f7"},{"commit":{"message":"Handle all four max-of-max cases without canonicalization"},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"},{"filename":"src\/hotspot\/share\/opto\/addnode.hpp"}],"sha":"3973102146928ee5b047d266d7db5e18633e430f"},{"commit":{"message":"Added more Max test cases with swapped inputs"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/MaxMinINodeIdealizationTests.java"}],"sha":"cd8422736f90fdec22b51e24d340c9e1c7110d7b"},{"commit":{"message":"Add basic test from https:\/\/github.com\/openjdk\/jdk\/pull\/13260"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/IRNode.java"},{"filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/superword\/MinMaxRed_Int.java"}],"sha":"9b218df8e547c492d28b780033195237abf3309b"},{"commit":{"message":"Clean up MinI\/MaxI Ideal function"},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"},{"filename":"src\/hotspot\/share\/opto\/addnode.hpp"}],"sha":"be1888f9c9c530010d2d0d428fd3c4d7814c65df"}]