{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2009, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2009, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -1003,4 +1003,7 @@\n-          if (scopes.peek() == null) {\n-              Phase p = phaseStack.peek();\n-              assert p != null && p.getName().equals(\"optimizer\") : \"should not be in parse here\";\n-          } else {\n+            Phase p = phaseStack.peek();\n+            if (scopes.peek() == null && p != null) {\n+                \/\/ Do not process other phases when scopes is null\n+                if (p.getName().equals(\"parse\")) {\n+                  reportInternalError( \"should not be in parse here:\" + p.getName());\n+                }\n+            } else {\n@@ -1057,3 +1060,6 @@\n-            if (scopes.peek() == null) {\n-                Phase p = phaseStack.peek();\n-                assert p != null && p.getName().equals(\"optimizer\") : \"should not be in parse here\";\n+            Phase p = phaseStack.peek();\n+            if (scopes.peek() == null && p != null) {\n+                \/\/ Do not process other phases when scopes is null\n+                if (p.getName().equals(\"parse\")) {\n+                  reportInternalError( \"should not be in parse here:\" + p.getName());\n+                }\n","filename":"src\/utils\/LogCompilation\/src\/main\/java\/com\/sun\/hotspot\/tools\/compiler\/LogParser.java","additions":14,"deletions":8,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+import org.junit.Assert;\n@@ -128,0 +129,9 @@\n+    void doItOrFail(String[] args) {\n+        try {\n+            LogCompilation.main(args);\n+        } catch (Throwable e) {\n+            e.printStackTrace();\n+            Assert.fail(e.getMessage());\n+        }\n+    }\n+\n@@ -129,2 +139,2 @@\n-    public void testDashi() throws Exception {\n-        String[] args = {\"-i\",\n+    public void testDefault() throws Exception {\n+        String[] args = {\n@@ -133,2 +143,1 @@\n-\n-        LogCompilation.main(args);\n+        doItOrFail(args);\n@@ -138,1 +147,1 @@\n-    public void testDashiDasht() throws Exception {\n+    public void testDashi() throws Exception {\n@@ -140,1 +149,0 @@\n-            \"-t\",\n@@ -143,2 +151,1 @@\n-\n-        LogCompilation.main(args);\n+        doItOrFail(args);\n@@ -148,2 +155,3 @@\n-    public void testDefault() throws Exception {\n-        String[] args = {\n+    public void testDashiDasht() throws Exception {\n+        String[] args = {\"-i\",\n+            \"-t\",\n@@ -152,2 +160,1 @@\n-\n-        LogCompilation.main(args);\n+        doItOrFail(args);\n@@ -161,2 +168,1 @@\n-\n-        LogCompilation.main(args);\n+        doItOrFail(args);\n@@ -170,2 +176,1 @@\n-\n-        LogCompilation.main(args);\n+        doItOrFail(args);\n@@ -179,2 +184,1 @@\n-\n-        LogCompilation.main(args);\n+        doItOrFail(args);\n@@ -188,2 +192,1 @@\n-\n-        LogCompilation.main(args);\n+        doItOrFail(args);\n@@ -197,2 +200,1 @@\n-\n-        LogCompilation.main(args);\n+        doItOrFail(args);\n","filename":"src\/utils\/LogCompilation\/src\/test\/java\/com\/sun\/hotspot\/tools\/compiler\/TestLogCompilation.java","additions":25,"deletions":23,"binary":false,"changes":48,"status":"modified"}]}