{"files":[{"patch":"@@ -1092,0 +1092,1 @@\n+\n@@ -1103,20 +1104,1 @@\n-          LP64_ONLY(assert(ft == T_LONG, \"must be\"));\n-          NOT_LP64 (assert(ft == T_INT, \"must be\"));\n-\n-          \/\/ We have a field that looks like an integer, but it's actually a pointer to a MetaspaceObj.\n-          address source_native_ptr = (address)\n-            LP64_ONLY(_source_obj->long_field(fd->offset()))\n-            NOT_LP64( _source_obj->int_field (fd->offset()));\n-          ArchiveBuilder* builder = ArchiveBuilder::current();\n-\n-          \/\/ The value of the native pointer at runtime.\n-          address requested_native_ptr = builder->to_requested(builder->get_buffered_addr(source_native_ptr));\n-\n-          \/\/ The address of _source_obj at runtime\n-          oop requested_obj = ArchiveHeapWriter::source_obj_to_requested_obj(_source_obj);\n-          \/\/ The address of this field in the requested space\n-          address requested_field_addr = cast_from_oop<address>(requested_obj) + fd->offset();\n-\n-          fd->print_on(_st);\n-          _st->print_cr(PTR_FORMAT \" (marked metadata pointer @\" PTR_FORMAT \" )\",\n-                        p2i(requested_native_ptr), p2i(requested_field_addr));\n+          print_as_native_pointer(fd);\n@@ -1129,0 +1111,23 @@\n+\n+    void print_as_native_pointer(fieldDescriptor* fd) {\n+      LP64_ONLY(assert(fd->field_type() == T_LONG, \"must be\"));\n+      NOT_LP64 (assert(fd->field_type() == T_INT,  \"must be\"));\n+\n+      \/\/ We have a field that looks like an integer, but it's actually a pointer to a MetaspaceObj.\n+      address source_native_ptr = (address)\n+          LP64_ONLY(_source_obj->long_field(fd->offset()))\n+          NOT_LP64( _source_obj->int_field (fd->offset()));\n+      ArchiveBuilder* builder = ArchiveBuilder::current();\n+\n+      \/\/ The value of the native pointer at runtime.\n+      address requested_native_ptr = builder->to_requested(builder->get_buffered_addr(source_native_ptr));\n+\n+      \/\/ The address of _source_obj at runtime\n+      oop requested_obj = ArchiveHeapWriter::source_obj_to_requested_obj(_source_obj);\n+      \/\/ The address of this field in the requested space\n+      address requested_field_addr = cast_from_oop<address>(requested_obj) + fd->offset();\n+\n+      fd->print_on(_st);\n+      _st->print_cr(PTR_FORMAT \" (marked metadata pointer @\" PTR_FORMAT \" )\",\n+                    p2i(requested_native_ptr), p2i(requested_field_addr));\n+    }\n@@ -1153,1 +1158,1 @@\n-        st.print_cr(\" - ---- fields (total size \" SIZE_FORMAT \" words):\", source_oop->size());\n+        st.print_cr(\" - fields (\" SIZE_FORMAT \" words):\", source_oop->size());\n","filename":"src\/hotspot\/share\/cds\/archiveBuilder.cpp","additions":26,"deletions":21,"binary":false,"changes":47,"status":"modified"},{"patch":"@@ -546,1 +546,1 @@\n-  return idx < heap_info->ptrmap()->size() && heap_info->ptrmap()->at(idx);\n+  return (idx < heap_info->ptrmap()->size()) && (heap_info->ptrmap()->at(idx) == true);\n","filename":"src\/hotspot\/share\/cds\/archiveHeapWriter.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}