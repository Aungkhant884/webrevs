{"files":[{"patch":"@@ -152,0 +152,4 @@\n+            default:\n+                \/\/ There are some controllers (such as freezer) that Java doesn't\n+                \/\/ care about. Just ignore them. These are not considered in the\n+                \/\/ anyCgroupsV1Controller\/anyCgroupsV1Controller checks.\n@@ -223,0 +227,6 @@\n+        String name = tokens[1];\n+        if (!name.equals(\"\")) {\n+            \/\/ This must be a v1 controller that we have ignored (e.g., freezer)\n+            assert infos.get(name) == null;\n+            return;\n+        }\n","filename":"src\/java.base\/linux\/classes\/jdk\/internal\/platform\/CgroupSubsystemFactory.java","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2021, Red Hat Inc.\n+ * Copyright (c) 2020, 2022, Red Hat Inc.\n@@ -26,0 +26,1 @@\n+ * @bug 8287107\n@@ -75,0 +76,3 @@\n+    private Path cgroupv2CgInfoNoZeroHierarchyOnlyFreezer;\n+    private Path cgroupv2MntInfoNoZeroHierarchyOnlyFreezer;\n+    private Path cgroupv2SelfNoZeroHierarchyOnlyFreezer;\n@@ -179,0 +183,24 @@\n+    \/\/ We have a mix of V1 and V2 controllers, but none of the V1 controllers\n+    \/\/ are used by Java, so the JDK should start in V2 mode.\n+    private String cgroupsNonZeroHierarchyOnlyFreezer =\n+            \"#subsys_name hierarchy  num_cgroups  enabled\\n\" +\n+            \"cpuset  0  171  1\\n\" +\n+            \"cpu  0  171  1\\n\" +\n+            \"cpuacct  0  171  1\\n\" +\n+            \"blkio  0  171  1\\n\" +\n+            \"memory  0  171  1\\n\" +\n+            \"devices  0  171  1\\n\" +\n+            \"freezer  1  1  1\\n\" +\n+            \"net_cls  0  171  1\\n\" +\n+            \"perf_event  0  171  1\\n\" +\n+            \"net_prio  0  171  1\\n\" +\n+            \"hugetlb  0  171  1\\n\" +\n+            \"pids  0  171  1\\n\" +\n+            \"rdma  0  171  1\\n\" +\n+            \"misc  0  171  1\\n\";\n+    private String cgroupv1SelfOnlyFreezerContent = \"1:freezer:\/\\n\" +\n+            \"0::\/user.slice\/user-1000.slice\/session-2.scope\";\n+    private String mntInfoOnlyFreezerInV1 =\n+            \"32 23 0:27 \/ \/sys\/fs\/cgroup rw,nosuid,nodev,noexec,relatime shared:9 - cgroup2 cgroup2 rw,nsdelegate,memory_recursiveprot\\n\" +\n+            \"911 32 0:47 \/ \/sys\/fs\/cgroup\/freezer rw,relatime shared:476 - cgroup freezer rw,freezer\\n\";\n+\n@@ -230,0 +258,9 @@\n+\n+            cgroupv2CgInfoNoZeroHierarchyOnlyFreezer = Paths.get(existingDirectory.toString(), \"cgroups_cgv2_non_zero_only_freezer\");\n+            Files.writeString(cgroupv2CgInfoNoZeroHierarchyOnlyFreezer, cgroupsNonZeroHierarchyOnlyFreezer);\n+\n+            cgroupv2SelfNoZeroHierarchyOnlyFreezer = Paths.get(existingDirectory.toString(), \"self_cgroup_non_zero_only_freezer\");\n+            Files.writeString(cgroupv2SelfNoZeroHierarchyOnlyFreezer, cgroupv1SelfOnlyFreezerContent);\n+\n+            cgroupv2MntInfoNoZeroHierarchyOnlyFreezer = Paths.get(existingDirectory.toString(), \"self_mountinfo_cgv2_non_zero_only_freezer\");\n+            Files.writeString(cgroupv2MntInfoNoZeroHierarchyOnlyFreezer, mntInfoOnlyFreezerInV1);\n@@ -337,0 +374,9 @@\n+    public void testNonZeroHierarchyOnlyFreezer(WhiteBox wb) {\n+        String cgroups = cgroupv2CgInfoNoZeroHierarchyOnlyFreezer.toString();\n+        String mountInfo = cgroupv2MntInfoNoZeroHierarchyOnlyFreezer.toString();\n+        String selfCgroup = cgroupv2SelfNoZeroHierarchyOnlyFreezer.toString();\n+        int retval = wb.validateCgroup(cgroups, selfCgroup, mountInfo);\n+        Asserts.assertEQ(CGROUPS_V2, retval, \"All V1 controllers are ignored\");\n+        Asserts.assertTrue(isValidCgroup(retval));\n+        System.out.println(\"testNonZeroHierarchyOnlyFreezer PASSED!\");\n+    }\n@@ -353,0 +399,1 @@\n+            test.testNonZeroHierarchyOnlyFreezer(wb);\n","filename":"test\/hotspot\/jtreg\/containers\/cgroup\/CgroupSubsystemFactory.java","additions":48,"deletions":1,"binary":false,"changes":49,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Red Hat Inc.\n+ * Copyright (c) 2020, 2022, Red Hat Inc.\n@@ -53,0 +53,1 @@\n+ * @bug 8287107\n@@ -58,1 +59,1 @@\n- * @run junit\/othervm TestCgroupSubsystemFactory\n+ * @run junit\/othervm -esa TestCgroupSubsystemFactory\n@@ -82,0 +83,3 @@\n+    private Path cgroupv2CgInfoNoZeroHierarchyOnlyFreezer;\n+    private Path cgroupv2MntInfoNoZeroHierarchyOnlyFreezer;\n+    private Path cgroupv2SelfNoZeroHierarchyOnlyFreezer;\n@@ -222,0 +226,24 @@\n+    \/\/ We have a mix of V1 and V2 controllers, but none of the V1 controllers\n+    \/\/ are used by Java, so the JDK should start in V2 mode.\n+    private String cgroupsNonZeroHierarchyOnlyFreezer =\n+            \"#subsys_name hierarchy  num_cgroups  enabled\\n\" +\n+            \"cpuset  0  171  1\\n\" +\n+            \"cpu  0  171  1\\n\" +\n+            \"cpuacct  0  171  1\\n\" +\n+            \"blkio  0  171  1\\n\" +\n+            \"memory  0  171  1\\n\" +\n+            \"devices  0  171  1\\n\" +\n+            \"freezer  1  1  1\\n\" +\n+            \"net_cls  0  171  1\\n\" +\n+            \"perf_event  0  171  1\\n\" +\n+            \"net_prio  0  171  1\\n\" +\n+            \"hugetlb  0  171  1\\n\" +\n+            \"pids  0  171  1\\n\" +\n+            \"rdma  0  171  1\\n\" +\n+            \"misc  0  171  1\\n\";\n+    private String cgroupv1SelfOnlyFreezerContent = \"1:freezer:\/\\n\" +\n+            \"0::\/user.slice\/user-1000.slice\/session-2.scope\";\n+    private String mntInfoOnlyFreezerInV1 =\n+            \"32 23 0:27 \/ \/sys\/fs\/cgroup rw,nosuid,nodev,noexec,relatime shared:9 - cgroup2 cgroup2 rw,nsdelegate,memory_recursiveprot\\n\" +\n+            \"911 32 0:47 \/ \/sys\/fs\/cgroup\/freezer rw,relatime shared:476 - cgroup freezer rw,freezer\\n\";\n+\n@@ -280,0 +308,9 @@\n+\n+            cgroupv2CgInfoNoZeroHierarchyOnlyFreezer = Paths.get(existingDirectory.toString(), \"cgroups_cgv2_non_zero_only_freezer\");\n+            Files.writeString(cgroupv2CgInfoNoZeroHierarchyOnlyFreezer, cgroupsNonZeroHierarchyOnlyFreezer);\n+\n+            cgroupv2SelfNoZeroHierarchyOnlyFreezer = Paths.get(existingDirectory.toString(), \"self_cgroup_non_zero_only_freezer\");\n+            Files.writeString(cgroupv2SelfNoZeroHierarchyOnlyFreezer, cgroupv1SelfOnlyFreezerContent);\n+\n+            cgroupv2MntInfoNoZeroHierarchyOnlyFreezer = Paths.get(existingDirectory.toString(), \"self_mountinfo_cgv2_non_zero_only_freezer\");\n+            Files.writeString(cgroupv2MntInfoNoZeroHierarchyOnlyFreezer, mntInfoOnlyFreezerInV1);\n@@ -406,0 +443,20 @@\n+    @Test\n+    public void testNonZeroHierarchyOnlyFreezer() throws IOException {\n+        String cgroups = cgroupv2CgInfoNoZeroHierarchyOnlyFreezer.toString();\n+        String mountInfo = cgroupv2MntInfoNoZeroHierarchyOnlyFreezer.toString();\n+        String selfCgroup = cgroupv2SelfNoZeroHierarchyOnlyFreezer.toString();\n+        Optional<CgroupTypeResult> result = CgroupSubsystemFactory.determineType(mountInfo, cgroups, selfCgroup);\n+\n+        assertTrue(\"Expected non-empty cgroup result\", result.isPresent());\n+        CgroupTypeResult res = result.get();\n+\n+        assertTrue(\"if all mounted v1 controllers are ignored, we should user cgroups v2\", res.isCgroupV2());\n+        CgroupInfo memoryInfo = res.getInfos().get(\"memory\");\n+        assertEquals(\"\/user.slice\/user-1000.slice\/session-2.scope\", memoryInfo.getCgroupPath());\n+        CgroupInfo cpuInfo = res.getInfos().get(\"cpu\");\n+        assertEquals(memoryInfo.getCgroupPath(), cpuInfo.getCgroupPath());\n+        assertEquals(memoryInfo.getMountPoint(), cpuInfo.getMountPoint());\n+        assertEquals(memoryInfo.getMountRoot(), cpuInfo.getMountRoot());\n+        assertEquals(\"\/sys\/fs\/cgroup\", cpuInfo.getMountPoint());\n+    }\n+\n","filename":"test\/jdk\/jdk\/internal\/platform\/cgroup\/TestCgroupSubsystemFactory.java","additions":59,"deletions":2,"binary":false,"changes":61,"status":"modified"}]}