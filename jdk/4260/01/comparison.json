{"files":[{"patch":"@@ -758,0 +758,11 @@\n+void* Disassembler::dll_load(char* buf, int offset, size_t buflen, char* ebuf, size_t ebuflen, outputStream* st) {\n+  if (offset + strlen(hsdis_library_name) + strlen(os::dll_file_extension()) < buflen) {\n+    strcpy(&buf[offset], hsdis_library_name);\n+    strcat(&buf[offset], os::dll_file_extension());\n+    if (Verbose) st->print_cr(\"Trying to load: %s\", buf);\n+    return os::dll_load(buf, ebuf, ebuflen);\n+  } else if (Verbose) {\n+    st->print_cr(\"Try to load hsdis library failed: the length of path is beyond the OS limit\");\n+  }\n+  return NULL;\n+}\n@@ -807,8 +818,1 @@\n-    if (jvm_offset + strlen(hsdis_library_name) + strlen(os::dll_file_extension()) < JVM_MAXPATHLEN) {\n-      strcpy(&buf[jvm_offset], hsdis_library_name);\n-      strcat(&buf[jvm_offset], os::dll_file_extension());\n-      if (Verbose) st->print_cr(\"Trying to load: %s\", buf);\n-      _library = os::dll_load(buf, ebuf, sizeof ebuf);\n-    } else {\n-      if (Verbose) st->print_cr(\"Try to load hsdis library failed: the length of path is beyond the OS limit\");\n-    }\n+    _library = dll_load(buf, jvm_offset, sizeof buf, ebuf, sizeof ebuf, st);\n@@ -817,8 +821,1 @@\n-      if (lib_offset + strlen(hsdis_library_name) + strlen(os::dll_file_extension()) < JVM_MAXPATHLEN) {\n-        strcpy(&buf[lib_offset], hsdis_library_name);\n-        strcat(&buf[lib_offset], os::dll_file_extension());\n-        if (Verbose) st->print_cr(\"Trying to load: %s\", buf);\n-        _library = os::dll_load(buf, ebuf, sizeof ebuf);\n-      } else {\n-        if (Verbose) st->print_cr(\"Try to load hsdis library failed: the length of path is beyond the OS limit\");\n-      }\n+      _library = dll_load(buf, lib_offset, sizeof buf, ebuf, sizeof ebuf, st);\n@@ -832,8 +829,1 @@\n-        if (lib_offset + strlen(hsdis_library_name) + strlen(os::dll_file_extension()) < JVM_MAXPATHLEN) {\n-          strcpy(&buf[lib_offset], hsdis_library_name);\n-          strcat(&buf[lib_offset], os::dll_file_extension());\n-          if (Verbose) st->print_cr(\"Trying to load: %s\", buf);\n-          _library = os::dll_load(buf, ebuf, sizeof ebuf);\n-        } else {\n-          if (Verbose) st->print_cr(\"Try to load hsdis library failed: the length of path is beyond the OS limit\");\n-        }\n+        _library = dll_load(buf, lib_offset, sizeof buf, ebuf, sizeof ebuf, st);\n@@ -844,5 +834,1 @@\n-    \/\/ 4. hsdis-<arch>.so  (using LD_LIBRARY_PATH)\n-    strcpy(&buf[0], hsdis_library_name);\n-    strcat(&buf[0], os::dll_file_extension());\n-    if (Verbose) st->print_cr(\"Trying to load: %s via LD_LIBRARY_PATH or equivalent\", buf);\n-    _library = os::dll_load(buf, ebuf, sizeof ebuf);\n+    _library = dll_load(buf, 0, sizeof buf, ebuf, sizeof ebuf, st);\n","filename":"src\/hotspot\/share\/compiler\/disassembler.cpp","additions":15,"deletions":29,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -68,0 +68,1 @@\n+  static void* dll_load(char* buf, int offset, size_t buflen, char* ebuf, int ebuflen, outputStream* st);\n","filename":"src\/hotspot\/share\/compiler\/disassembler.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"}]}