{"files":[{"patch":"@@ -56,1 +56,1 @@\n-          \"Generate random seed for LCM, GCM, and IGVN stress testing\")     \\\n+          \"Generate random seed for IGVN stress testing\")                   \\\n@@ -59,1 +59,1 @@\n-          \"Random seed for LCM, GCM, and IGVN stress testing\")              \\\n+          \"Random seed for IGVN stress testing\")                            \\\n","filename":"src\/hotspot\/share\/opto\/c2_globals.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -526,0 +526,1 @@\n+                  _stress_seed(0),\n@@ -730,6 +731,5 @@\n-  \/\/ If any phase is randomized for stress testing, seed random\n-  \/\/ number generation and log the seed for repeatability.\n-  if (StressLCM || StressGCM || StressIGVN) {\n-    unsigned int seed = GenerateStressSeed ?\n-      (unsigned int)(Ticks::now().nanoseconds()) : StressSeed;\n-    os::init_random(seed);\n+  \/\/ If IGVN is randomized for stress testing, seed random number\n+  \/\/ generation and log the seed for repeatability.\n+  if (StressIGVN) {\n+    _stress_seed = GenerateStressSeed ?\n+      static_cast<uint>(Ticks::now().nanoseconds()) : StressSeed;\n@@ -737,1 +737,1 @@\n-      _log->elem(\"stress_test seed='%u'\", seed);\n+      _log->elem(\"stress_test seed='%u'\", _stress_seed);\n@@ -739,2 +739,1 @@\n-      tty->print_cr(\"Warning:  +LogCompilation must be set to record \"\n-                    \"the generated seed.\");\n+      tty->print_cr(\"Warning:  set +LogCompilation to log the seed.\");\n@@ -826,0 +825,1 @@\n+    _stress_seed(0),\n@@ -4453,2 +4453,15 @@\n-\/\/ Auxiliary method to support randomized stressing\/fuzzing.\n-\/\/\n+\/\/ Auxiliary methods to support randomized stressing\/fuzzing.\n+\n+int Compile::random() {\n+  _stress_seed = os::next_random(_stress_seed);\n+  return static_cast<int>(_stress_seed);\n+}\n+\n+void Compile::shuffle(Unique_Node_List* l) {\n+  if (l->size() < 2) return;\n+  for (uint i = l->size() - 1; i >= 1; i--) {\n+    uint j = random() % (i + 1);\n+    l->swap(i, j);\n+  }\n+}\n+\n","filename":"src\/hotspot\/share\/opto\/compile.cpp","additions":24,"deletions":11,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -304,0 +304,1 @@\n+  uint                  _stress_seed;           \/\/ Seed for stress testing\n@@ -1140,1 +1141,3 @@\n-  \/\/ Auxiliary method for randomized fuzzing\/stressing\n+  \/\/ Auxiliary methods for randomized fuzzing\/stressing\n+  int random();\n+  void shuffle(Unique_Node_List* l);\n","filename":"src\/hotspot\/share\/opto\/compile.hpp","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2332,0 +2332,7 @@\n+\/\/-----------------------------------------------------------------------------\n+void Node_Array::swap(uint i, uint j) {\n+  Node* tmp = _nodes[i];\n+  _nodes[i] = _nodes[j];\n+  _nodes[j] = tmp;\n+}\n+\n@@ -2428,8 +2435,0 @@\n-void Node_List::shuffle() {\n-  if (_cnt < 2) return;\n-  for (uint i = _cnt - 1; i >= 1; i--) {\n-    uint j = os::random() % (i + 1);\n-    swap(_nodes[i], _nodes[j]);\n-  }\n-}\n-\n","filename":"src\/hotspot\/share\/opto\/node.cpp","additions":7,"deletions":8,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -1491,0 +1491,1 @@\n+  void swap(uint i, uint j);\n@@ -1517,1 +1518,0 @@\n-  void shuffle();\n","filename":"src\/hotspot\/share\/opto\/node.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1153,1 +1153,1 @@\n-  if (StressIGVN) _worklist.shuffle();\n+  if (StressIGVN) C->shuffle(&_worklist);\n","filename":"src\/hotspot\/share\/opto\/phaseX.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -818,1 +818,1 @@\n-static int random_helper(unsigned int rand_seed) {\n+int os::next_random(unsigned int rand_seed) {\n@@ -856,1 +856,1 @@\n-    unsigned int rand = random_helper(seed);\n+    unsigned int rand = next_random(seed);\n","filename":"src\/hotspot\/share\/runtime\/os.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -759,0 +759,1 @@\n+  static int next_random(unsigned int rand_seed); \/\/ pure version of random()\n","filename":"src\/hotspot\/share\/runtime\/os.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -36,2 +36,1 @@\n- *          combination with one of the -XX:+StressX options, C2 generates and\n- *          logs a seed.\n+ *          combination with -XX:+StressIGVN, C2 generates and logs a seed.\n","filename":"test\/hotspot\/jtreg\/compiler\/debug\/TestGenerateStressSeed.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"}]}