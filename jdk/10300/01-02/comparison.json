{"files":[{"patch":"@@ -150,4 +150,4 @@\n-                        || configuration.findModule(req.name()).isPresent())\n-                        .map(Requires::name)\n-                        .map(configuration::findModule)  \/\/ must be present\n-                        .forEach(v -> builder.addEdge(v.get(), m));\n+                            || configuration.findModule(req.name()).isPresent())\n+                            .map(Requires::name)\n+                            .map(configuration::findModule)  \/\/ must be present\n+                            .forEach(v -> builder.addEdge(v.get(), m));\n","filename":"src\/jdk.jdeps\/share\/classes\/com\/sun\/tools\/jdeps\/InverseDepsAnalyzer.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n- * @run testng OptionalDependencyError\n+ * @run testng OptionalDependencyTest\n@@ -43,1 +43,1 @@\n-public class OptionalDependencyError {\n+public class OptionalDependencyTest {\n@@ -70,1 +70,1 @@\n-     * \n+     * Test if a requires static dependence is resolved in the configuration.\n@@ -73,1 +73,1 @@\n-    public void noOptionalDependencyError() {\n+    public void optionalDependenceResolved() {\n@@ -75,1 +75,1 @@\n-                                                  \"--inverse\", \"--add-modules\", \"m3\",\n+                                                  \"--inverse\",\n","filename":"test\/langtools\/tools\/jdeps\/optionalDependency\/OptionalDependencyTest.java","additions":5,"deletions":5,"binary":false,"changes":10,"previous_filename":"test\/langtools\/tools\/jdeps\/optionalDependency\/OptionalDependencyError.java","status":"renamed"}]}