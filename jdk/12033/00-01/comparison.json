{"files":[{"patch":"@@ -205,1 +205,1 @@\n-    st->print_cr(\" nullptr\");\n+    st->print_cr(\" null\");\n","filename":"src\/hotspot\/share\/interpreter\/bytecodeTracer.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -295,5 +295,5 @@\n-  def(_iload               , \"iload\"               , \"bi\"   , \"wbii\"  , T_INT    ,  1, false);\n-  def(_lload               , \"lload\"               , \"bi\"   , \"wbii\"  , T_LONG   ,  2, false);\n-  def(_fload               , \"fload\"               , \"bi\"   , \"wbii\"  , T_FLOAT  ,  1, false);\n-  def(_dload               , \"dload\"               , \"bi\"   , \"wbii\"  , T_DOUBLE ,  2, false);\n-  def(_aload               , \"aload\"               , \"bi\"   , \"wbii\"  , T_OBJECT ,  1, false);\n+  def(_iload               , \"iload\"               , \"bi\"   , \"wbii\"     , T_INT    ,  1, false);\n+  def(_lload               , \"lload\"               , \"bi\"   , \"wbii\"     , T_LONG   ,  2, false);\n+  def(_fload               , \"fload\"               , \"bi\"   , \"wbii\"     , T_FLOAT  ,  1, false);\n+  def(_dload               , \"dload\"               , \"bi\"   , \"wbii\"     , T_DOUBLE ,  2, false);\n+  def(_aload               , \"aload\"               , \"bi\"   , \"wbii\"     , T_OBJECT ,  1, false);\n@@ -328,5 +328,5 @@\n-  def(_istore              , \"istore\"              , \"bi\"   , \"wbii\"  , T_VOID   , -1, false);\n-  def(_lstore              , \"lstore\"              , \"bi\"   , \"wbii\"  , T_VOID   , -2, false);\n-  def(_fstore              , \"fstore\"              , \"bi\"   , \"wbii\"  , T_VOID   , -1, false);\n-  def(_dstore              , \"dstore\"              , \"bi\"   , \"wbii\"  , T_VOID   , -2, false);\n-  def(_astore              , \"astore\"              , \"bi\"   , \"wbii\"  , T_VOID   , -1, false);\n+  def(_istore              , \"istore\"              , \"bi\"   , \"wbii\"     , T_VOID   , -1, false);\n+  def(_lstore              , \"lstore\"              , \"bi\"   , \"wbii\"     , T_VOID   , -2, false);\n+  def(_fstore              , \"fstore\"              , \"bi\"   , \"wbii\"     , T_VOID   , -1, false);\n+  def(_dstore              , \"dstore\"              , \"bi\"   , \"wbii\"     , T_VOID   , -2, false);\n+  def(_astore              , \"astore\"              , \"bi\"   , \"wbii\"     , T_VOID   , -1, false);\n@@ -406,1 +406,1 @@\n-  def(_iinc                , \"iinc\"                , \"bic\"  , \"wbiicc\", T_VOID   ,  0, false);\n+  def(_iinc                , \"iinc\"                , \"bic\"  , \"wbiicc\",    T_VOID   ,  0, false);\n@@ -443,1 +443,1 @@\n-  def(_ret                 , \"ret\"                 , \"bi\"   , \"wbii\"  , T_VOID   ,  0, false);\n+  def(_ret                 , \"ret\"                 , \"bi\"   , \"wbii\"     , T_VOID   ,  0, false);\n@@ -515,1 +515,1 @@\n-  def(_return_register_finalizer , \"return_register_finalizer\" , \"b\"    , nullptr    , T_VOID   ,  0, true, _return);\n+  def(_return_register_finalizer , \"return_register_finalizer\" , \"b\"     , nullptr    , T_VOID   ,  0, true, _return);\n","filename":"src\/hotspot\/share\/interpreter\/bytecodes.cpp","additions":13,"deletions":13,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -368,1 +368,1 @@\n-  \/\/ nullptr since in that case the bcp and Method* are unrelated\n+  \/\/ null since in that case the bcp and Method* are unrelated\n","filename":"src\/hotspot\/share\/interpreter\/bytecodes.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -507,1 +507,1 @@\n-    assert(h_exception.not_null(), \"nullptr exceptions should be handled by athrow\");\n+    assert(h_exception.not_null(), \"null exceptions should be handled by athrow\");\n@@ -743,1 +743,1 @@\n-         \"must be nullptr or an object\");\n+         \"must be null or an object\");\n@@ -746,1 +746,1 @@\n-         \"must be nullptr or an object\");\n+         \"must be null or an object\");\n","filename":"src\/hotspot\/share\/interpreter\/interpreterRuntime.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -734,1 +734,1 @@\n-    THROW_MSG_nullptr(vmSymbols::java_lang_IncompatibleClassChangeError(), buf);\n+    THROW_MSG_NULL(vmSymbols::java_lang_IncompatibleClassChangeError(), buf);\n@@ -744,1 +744,1 @@\n-    THROW_MSG_nullptr(vmSymbols::java_lang_IncompatibleClassChangeError(), ss.as_string());\n+    THROW_MSG_NULL(vmSymbols::java_lang_IncompatibleClassChangeError(), ss.as_string());\n@@ -840,1 +840,1 @@\n-    THROW_MSG_nullptr(vmSymbols::java_lang_IncompatibleClassChangeError(), buf);\n+    THROW_MSG_NULL(vmSymbols::java_lang_IncompatibleClassChangeError(), buf);\n@@ -850,1 +850,1 @@\n-    THROW_MSG_nullptr(vmSymbols::java_lang_IncompatibleClassChangeError(), ss.as_string());\n+    THROW_MSG_NULL(vmSymbols::java_lang_IncompatibleClassChangeError(), ss.as_string());\n@@ -869,1 +869,1 @@\n-    THROW_MSG_nullptr(vmSymbols::java_lang_NoSuchMethodError(), ss.as_string());\n+    THROW_MSG_NULL(vmSymbols::java_lang_NoSuchMethodError(), ss.as_string());\n@@ -896,1 +896,1 @@\n-    THROW_MSG_nullptr(vmSymbols::java_lang_IncompatibleClassChangeError(), ss.as_string());\n+    THROW_MSG_NULL(vmSymbols::java_lang_IncompatibleClassChangeError(), ss.as_string());\n@@ -1118,1 +1118,1 @@\n-    THROW_MSG_nullptr(vmSymbols::java_lang_IncompatibleClassChangeError(), ss.as_string());\n+    THROW_MSG_NULL(vmSymbols::java_lang_IncompatibleClassChangeError(), ss.as_string());\n@@ -1184,1 +1184,1 @@\n-      THROW_MSG_nullptr(vmSymbols::java_lang_IncompatibleClassChangeError(), ss.as_string());\n+      THROW_MSG_NULL(vmSymbols::java_lang_IncompatibleClassChangeError(), ss.as_string());\n@@ -1195,1 +1195,1 @@\n-    THROW_MSG_nullptr(vmSymbols::java_lang_IncompatibleClassChangeError(), ss.as_string());\n+    THROW_MSG_NULL(vmSymbols::java_lang_IncompatibleClassChangeError(), ss.as_string());\n@@ -1336,1 +1336,1 @@\n-    THROW_MSG_nullptr(vmSymbols::java_lang_IncompatibleClassChangeError(), ss.as_string());\n+    THROW_MSG_NULL(vmSymbols::java_lang_IncompatibleClassChangeError(), ss.as_string());\n@@ -1346,1 +1346,1 @@\n-    THROW_MSG_nullptr(vmSymbols::java_lang_IncompatibleClassChangeError(), ss.as_string());\n+    THROW_MSG_NULL(vmSymbols::java_lang_IncompatibleClassChangeError(), ss.as_string());\n","filename":"src\/hotspot\/share\/interpreter\/linkResolver.cpp","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -3083,1 +3083,1 @@\n-    \/\/ a nullptr oop in it and then overwrite the oop later as needed. This isn't\n+    \/\/ a null oop in it and then overwrite the oop later as needed. This isn't\n","filename":"src\/hotspot\/share\/interpreter\/zero\/bytecodeInterpreter.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n-        assert(oopDesc::is_oop_or_null(oop(o_)), \"Expected an oop or nullptr at \" PTR_FORMAT, p2i(oop(o_))); \\\n+        assert(oopDesc::is_oop_or_null(oop(o_)), \"Expected an oop or null at \" PTR_FORMAT, p2i(oop(o_))); \\\n","filename":"src\/hotspot\/share\/interpreter\/zero\/bytecodeInterpreter.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}