{"files":[{"patch":"@@ -415,1 +415,6 @@\n-      thread->print_owned_locks();\n+      if (least->rank() > Mutex::tty) {\n+        \/\/ Printing owned locks acquires tty lock. If lowest rank is below or equal\n+        \/\/ tty, then deadlock detection code would circle back here, until we run\n+        \/\/ out of stack and crash hard. Print locks only when it is safe.\n+        thread->print_owned_locks();\n+      }\n","filename":"src\/hotspot\/share\/runtime\/mutex.cpp","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -107,0 +107,30 @@\n+TEST_VM_ASSERT_MSG(MutexRank, mutex_wait_access_leaf,\n+                   \".* Attempting to acquire lock mutex_rank_leaf\/11 out of order with lock mutex_rank_access\/1 \"\n+                   \"-- possible deadlock\") {\n+  JavaThread* THREAD = JavaThread::current();\n+  ThreadInVMfromNative invm(THREAD);\n+\n+  Mutex* mutex_rank_access = new Mutex(Mutex::access, \"mutex_rank_access\", false, Mutex::_safepoint_check_never);\n+  Mutex* mutex_rank_leaf = new Mutex(Mutex::leaf, \"mutex_rank_leaf\", false, Mutex::_safepoint_check_never);\n+\n+  mutex_rank_access->lock_without_safepoint_check();\n+  mutex_rank_leaf->lock_without_safepoint_check();\n+  mutex_rank_leaf->unlock();\n+  mutex_rank_access->unlock();\n+}\n+\n+TEST_VM_ASSERT_MSG(MutexRank, mutex_wait_tty_special,\n+                   \".* Attempting to acquire lock mutex_rank_special\/6 out of order with lock mutex_rank_tty\/3 \"\n+                   \"-- possible deadlock\") {\n+  JavaThread* THREAD = JavaThread::current();\n+  ThreadInVMfromNative invm(THREAD);\n+\n+  Mutex* mutex_rank_tty = new Mutex(Mutex::tty, \"mutex_rank_tty\", false, Mutex::_safepoint_check_never);\n+  Mutex* mutex_rank_special = new Mutex(Mutex::special, \"mutex_rank_special\", false, Mutex::_safepoint_check_never);\n+\n+  mutex_rank_tty->lock_without_safepoint_check();\n+  mutex_rank_special->lock_without_safepoint_check();\n+  mutex_rank_special->unlock();\n+  mutex_rank_tty->unlock();\n+}\n+\n@@ -168,0 +198,32 @@\n+\n+TEST_VM_ASSERT_MSG(MutexRank, monitor_wait_access_leaf,\n+                   \".* Attempting to acquire lock monitor_rank_leaf\/11 out of order with lock monitor_rank_access\/1 \"\n+                   \"-- possible deadlock\") {\n+  JavaThread* THREAD = JavaThread::current();\n+  ThreadInVMfromNative invm(THREAD);\n+\n+  Monitor* monitor_rank_access = new Monitor(Mutex::access, \"monitor_rank_access\", false, Mutex::_safepoint_check_never);\n+  Monitor* monitor_rank_leaf = new Monitor(Mutex::leaf, \"monitor_rank_leaf\", false, Mutex::_safepoint_check_never);\n+\n+  monitor_rank_access->lock_without_safepoint_check();\n+  monitor_rank_leaf->lock_without_safepoint_check();\n+  monitor_rank_leaf->wait_without_safepoint_check(1);\n+  monitor_rank_leaf->unlock();\n+  monitor_rank_access->unlock();\n+}\n+\n+TEST_VM_ASSERT_MSG(MutexRank, monitor_wait_tty_special,\n+                   \".* Attempting to acquire lock monitor_rank_special\/6 out of order with lock monitor_rank_tty\/3 \"\n+                   \"-- possible deadlock\") {\n+  JavaThread* THREAD = JavaThread::current();\n+  ThreadInVMfromNative invm(THREAD);\n+\n+  Monitor* monitor_rank_tty = new Monitor(Mutex::tty, \"monitor_rank_tty\", false, Mutex::_safepoint_check_never);\n+  Monitor* monitor_rank_special = new Monitor(Mutex::special, \"monitor_rank_special\", false, Mutex::_safepoint_check_never);\n+\n+  monitor_rank_tty->lock_without_safepoint_check();\n+  monitor_rank_special->lock_without_safepoint_check();\n+  monitor_rank_special->wait_without_safepoint_check(1);\n+  monitor_rank_special->unlock();\n+  monitor_rank_tty->unlock();\n+}\n","filename":"test\/hotspot\/gtest\/runtime\/test_mutex_rank.cpp","additions":62,"deletions":0,"binary":false,"changes":62,"status":"modified"}]}