{"files":[{"patch":"@@ -203,9 +203,0 @@\n-\/\/ Returns true if the vslist is not expandable and no more root chunks\n-\/\/ can be allocated.\n-bool VirtualSpaceList::is_full() const {\n-  if (!_can_expand && _first_node != NULL && _first_node->free_words() == 0) {\n-    return true;\n-  }\n-  return false;\n-}\n-\n","filename":"src\/hotspot\/share\/memory\/metaspace\/virtualSpaceList.cpp","additions":0,"deletions":9,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -131,4 +131,0 @@\n-  \/\/ Returns true if the list is not expandable and no more root chunks\n-  \/\/ can be allocated.\n-  bool is_full() const;\n-\n","filename":"src\/hotspot\/share\/memory\/metaspace\/virtualSpaceList.hpp","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -64,1 +64,1 @@\n-  \/\/ Return true if, after an allocation error happened, a reserve error seems likely.\n+  \/\/ Return true if, after an allocation error happened, a reserve error seems possible.\n@@ -66,1 +66,1 @@\n-    return _context.vslist().is_full();\n+    return _context.reserve_limit() < max_uintx;\n","filename":"test\/hotspot\/gtest\/metaspace\/test_chunkManager_stress.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}