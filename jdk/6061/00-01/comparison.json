{"files":[{"patch":"@@ -123,1 +123,1 @@\n-                .addTab(contents.exceptionClasses, e -> utils.isExceptionClass((TypeElement)e))\n+                .addTab(contents.exceptionClasses, e -> utils.isThrowable((TypeElement)e))\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/AllClassesIndexWriter.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -260,1 +260,1 @@\n-                .addTab(contents.exceptionClasses, e -> utils.isExceptionClass((TypeElement)e))\n+                .addTab(contents.exceptionClasses, e -> utils.isThrowable((TypeElement)e))\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/PackageWriterImpl.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -123,1 +123,1 @@\n-                        if (utils.isExceptionClass(te)) {\n+                        if (utils.isThrowable(te)) {\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/SummaryAPIListBuilder.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -182,7 +182,1 @@\n-    public TypeMirror getExceptionType() {\n-        return getSymbol(\"java.lang.Exception\");\n-    }\n-\n-    public TypeMirror getErrorType() {\n-        return getSymbol(\"java.lang.Error\");\n-    }\n+    public TypeMirror getThrowableType() { return getSymbol(\"java.lang.Throwable\"); }\n@@ -504,1 +498,1 @@\n-        return !isExceptionClass(te);\n+        return !isThrowable(te);\n@@ -513,1 +507,1 @@\n-    public boolean isExceptionClass(TypeElement te) {\n+    public boolean isThrowable(TypeElement te) {\n@@ -517,2 +511,1 @@\n-        return typeUtils.isSubtype(te.asType(), getExceptionType())\n-            || typeUtils.isSubtype(te.asType(), getErrorType());\n+        return typeUtils.isSubtype(te.asType(), getThrowableType());\n@@ -1268,1 +1261,1 @@\n-                    isExceptionClass(te) ? \"doclet.ExceptionClass\"\n+                    isThrowable(te) ? \"doclet.ExceptionClass\"\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/Utils.java","additions":5,"deletions":12,"binary":false,"changes":17,"status":"modified"}]}