{"files":[{"patch":"@@ -660,13 +660,12 @@\n-            try {\n-                \/\/ first lookup the hostname\n-                host = nameService.getHostByAddr(addr.getAddress());\n-\n-                \/* check to see if calling code is allowed to know\n-                 * the hostname for this IP address, ie, connect to the host\n-                 *\/\n-                if (check) {\n-                    @SuppressWarnings(\"removal\")\n-                    SecurityManager sec = System.getSecurityManager();\n-                    if (sec != null) {\n-                        sec.checkConnect(host, -1);\n-                    }\n+        try {\n+            \/\/ first lookup the hostname\n+            host = nameService.getHostByAddr(addr.getAddress());\n+\n+            \/* check to see if calling code is allowed to know\n+             * the hostname for this IP address, ie, connect to the host\n+             *\/\n+            if (check) {\n+                @SuppressWarnings(\"removal\")\n+                SecurityManager sec = System.getSecurityManager();\n+                if (sec != null) {\n+                    sec.checkConnect(host, -1);\n@@ -674,0 +673,1 @@\n+            }\n@@ -675,4 +675,4 @@\n-                \/* now get all the IP addresses for this hostname,\n-                 * and make sure one of them matches the original IP\n-                 * address. We do this to try and prevent spoofing.\n-                 *\/\n+            \/* now get all the IP addresses for this hostname,\n+             * and make sure one of them matches the original IP\n+             * address. We do this to try and prevent spoofing.\n+             *\/\n@@ -680,2 +680,2 @@\n-                InetAddress[] arr = InetAddress.getAllByName0(host, check);\n-                boolean ok = false;\n+            InetAddress[] arr = InetAddress.getAllByName0(host, check);\n+            boolean ok = false;\n@@ -683,4 +683,3 @@\n-                if(arr != null) {\n-                    for(int i = 0; !ok && i < arr.length; i++) {\n-                        ok = addr.equals(arr[i]);\n-                    }\n+            if (arr != null) {\n+                for (int i = 0; !ok && i < arr.length; i++) {\n+                    ok = addr.equals(arr[i]);\n@@ -688,0 +687,1 @@\n+            }\n@@ -689,8 +689,2 @@\n-                \/\/XXX: if it looks a spoof just return the address?\n-                if (!ok) {\n-                    host = addr.getHostAddress();\n-                    return host;\n-                }\n-            } catch (SecurityException e) {\n-                host = addr.getHostAddress();\n-            } catch (UnknownHostException e) {\n+            \/\/XXX: if it looks like a spoof just return the address?\n+            if (!ok) {\n@@ -698,1 +692,1 @@\n-                \/\/ let next provider resolve the hostname\n+                return host;\n@@ -700,0 +694,6 @@\n+        } catch (SecurityException e) {\n+            host = addr.getHostAddress();\n+        } catch (UnknownHostException e) {\n+            host = addr.getHostAddress();\n+            \/\/ let next provider resolve the hostname\n+        }\n@@ -1139,1 +1139,1 @@\n-        }\n+    }\n@@ -1513,2 +1513,1 @@\n-        throws UnknownHostException\n-    {\n+            throws UnknownHostException {\n@@ -1518,9 +1517,7 @@\n-            try {\n-                addresses = nameService.lookupAllHostAddr(host);\n-            } catch (UnknownHostException uhe) {\n-                if (host.equalsIgnoreCase(\"localhost\")) {\n-                    addresses = new InetAddress[] { impl.loopbackAddress() };\n-                }\n-                else {\n-                    ex = uhe;\n-                }\n+        try {\n+            addresses = nameService.lookupAllHostAddr(host);\n+        } catch (UnknownHostException uhe) {\n+            if (host.equalsIgnoreCase(\"localhost\")) {\n+                addresses = new InetAddress[]{impl.loopbackAddress()};\n+            } else {\n+                ex = uhe;\n@@ -1528,0 +1525,1 @@\n+        }\n","filename":"src\/java.base\/share\/classes\/java\/net\/InetAddress.java","additions":42,"deletions":44,"binary":false,"changes":86,"status":"modified"}]}