{"files":[{"patch":"@@ -423,1 +423,1 @@\n-      __ call_VM_leaf(CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier_strong_narrow), arg0, arg1);\n+      __ super_call_VM_leaf(CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier_strong_narrow), arg0, arg1);\n@@ -425,1 +425,1 @@\n-      __ call_VM_leaf(CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier_strong), arg0, arg1);\n+      __ super_call_VM_leaf(CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier_strong), arg0, arg1);\n@@ -436,1 +436,1 @@\n-    __ call_VM_leaf(CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier_phantom), arg0, arg1);\n+    __ super_call_VM_leaf(CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier_phantom), arg0, arg1);\n","filename":"src\/hotspot\/cpu\/x86\/gc\/shenandoah\/shenandoahBarrierSetAssembler_x86.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -448,0 +448,15 @@\n+address TemplateInterpreterGenerator::generate_currentThread() {\n+\n+  address entry_point = __ pc();\n+\n+  __ movptr(rax, Address(r15_thread, JavaThread::threadObj_offset()));\n+\n+  __ resolve_oop_handle(rax, rscratch1);\n+\n+  __ pop(rcx);\n+  __ mov(rsp, r13);\n+  __ jmp(rcx);\n+\n+  return entry_point;\n+}\n+\n","filename":"src\/hotspot\/cpu\/x86\/templateInterpreterGenerator_x86_64.cpp","additions":15,"deletions":0,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -137,0 +137,3 @@\n+#ifdef AMD64\n+      case vmIntrinsics::_currentThread:     return java_lang_Thread_currentThread;\n+#endif\n","filename":"src\/hotspot\/share\/interpreter\/abstractInterpreter.cpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -93,0 +93,1 @@\n+    java_lang_Thread_currentThread,                             \/\/ implementation of java.lang.Thread.currentThread()\n","filename":"src\/hotspot\/share\/interpreter\/abstractInterpreter.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -204,1 +204,3 @@\n-\n+#ifdef AMD64\n+  method_entry(java_lang_Thread_currentThread)\n+#endif\n@@ -434,0 +436,5 @@\n+#ifdef AMD64\n+  case Interpreter::java_lang_Thread_currentThread\n+                                           : entry_point = generate_currentThread(); break;\n+#endif\n+\n","filename":"src\/hotspot\/share\/interpreter\/templateInterpreterGenerator.cpp","additions":8,"deletions":1,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -97,0 +97,3 @@\n+#ifdef AMD64\n+  address generate_currentThread();\n+#endif\n","filename":"src\/hotspot\/share\/interpreter\/templateInterpreterGenerator.hpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"}]}