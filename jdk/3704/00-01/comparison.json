{"files":[{"patch":"@@ -33,9 +33,11 @@\n-static bool check_get_mempolicy_support() {\n-  int dummy = 0;\n-  int mode = -1;\n-  \/\/ Check whether get_mempolicy is supported since most containers may disable it by default.\n-  if (ZSyscall::get_mempolicy(&mode, NULL, 0, (void*)&dummy, MPOL_F_NODE | MPOL_F_ADDR) == -1) {\n-    if (!FLAG_IS_DEFAULT(UseNUMA)) {\n-      warning(\"ZGC NUMA support is disabled since get_mempolicy is unsupported.\");\n-    }\n-    return false;\n+static bool numa_memory_id(void* addr, uint32_t* id) {\n+  return ZSyscall::get_mempolicy((int*)id, NULL, 0, addr, MPOL_F_NODE | MPOL_F_ADDR) != -1;\n+}\n+\n+static bool is_numa_supported() {\n+  \/\/ Test if syscall is available\n+  uint32_t dummy = 0;\n+  const bool available = numa_memory_id(&dummy, &dummy);\n+\n+  if (!available && !FLAG_IS_DEFAULT(UseNUMA)) {\n+    warning(\"NUMA support disabled, system call get_mempolicy not available\");\n@@ -44,1 +46,1 @@\n-  return true;\n+  return available;\n@@ -48,1 +50,1 @@\n-  _enabled = UseNUMA && check_get_mempolicy_support();\n+  _enabled = UseNUMA && is_numa_supported();\n@@ -77,1 +79,1 @@\n-  if (ZSyscall::get_mempolicy((int*)&id, NULL, 0, (void*)addr, MPOL_F_NODE | MPOL_F_ADDR) == -1) {\n+  if (!numa_memory_id((void*)addr, &id)) {\n","filename":"src\/hotspot\/os\/linux\/gc\/z\/zNUMA_linux.cpp","additions":14,"deletions":12,"binary":false,"changes":26,"status":"modified"}]}