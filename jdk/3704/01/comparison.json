{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,1 @@\n+#include \"runtime\/globals_extension.hpp\"\n@@ -32,0 +33,16 @@\n+static bool numa_memory_id(void* addr, uint32_t* id) {\n+  return ZSyscall::get_mempolicy((int*)id, NULL, 0, addr, MPOL_F_NODE | MPOL_F_ADDR) != -1;\n+}\n+\n+static bool is_numa_supported() {\n+  \/\/ Test if syscall is available\n+  uint32_t dummy = 0;\n+  const bool available = numa_memory_id(&dummy, &dummy);\n+\n+  if (!available && !FLAG_IS_DEFAULT(UseNUMA)) {\n+    warning(\"NUMA support disabled, system call get_mempolicy not available\");\n+  }\n+\n+  return available;\n+}\n+\n@@ -33,1 +50,1 @@\n-  _enabled = UseNUMA;\n+  _enabled = UseNUMA && is_numa_supported();\n@@ -62,1 +79,1 @@\n-  if (ZSyscall::get_mempolicy((int*)&id, NULL, 0, (void*)addr, MPOL_F_NODE | MPOL_F_ADDR) == -1) {\n+  if (!numa_memory_id((void*)addr, &id)) {\n","filename":"src\/hotspot\/os\/linux\/gc\/z\/zNUMA_linux.cpp","additions":20,"deletions":3,"binary":false,"changes":23,"status":"modified"}]}