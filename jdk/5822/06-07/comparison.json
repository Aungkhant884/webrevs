{"files":[{"patch":"@@ -169,1 +169,1 @@\n- * depend on the configuration of the local machine.\n+ * depends on the configuration of the local machine.\n@@ -1052,0 +1052,1 @@\n+            Objects.requireNonNull(addr);\n@@ -1094,1 +1095,1 @@\n-\n+            Objects.requireNonNull(addr);\n@@ -1148,0 +1149,3 @@\n+\n+            Objects.requireNonNull(host);\n+            Objects.requireNonNull(lookupPolicy);\n@@ -1155,2 +1159,0 @@\n-            Objects.requireNonNull(host);\n-\n","filename":"src\/java.base\/share\/classes\/java\/net\/InetAddress.java","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -35,4 +35,2 @@\n- * An instance of {@code InetAddressResolver} is\n- * deployed as a <a href=\"InetAddressResolverProvider.html#system-wide-resolver\">\n- * system-wide resolver<\/a>. {@link InetAddress} delegates all lookup requests to\n- * the deployed <i>system-wide resolver<\/i> instance.\n+ * {@link InetAddress} delegates all lookup operations to the <i>system-wide\n+ * resolver<\/i>.\n@@ -87,0 +85,1 @@\n+     * @throws NullPointerException     if addr is {@code null}\n@@ -136,2 +135,2 @@\n-         * This factory method creates {@link LookupPolicy LookupPolicy} instance with a provided\n-         * {@code characteristics} value.\n+         * This factory method creates a {@link LookupPolicy LookupPolicy} instance with\n+         * the given {@code characteristics} value.\n","filename":"src\/java.base\/share\/classes\/java\/net\/spi\/InetAddressResolver.java","additions":5,"deletions":6,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -45,1 +45,3 @@\n- * InetAddress<\/a>.\n+ * InetAddress<\/a>. It is set after the VM is fully initialized and when an\n+ * invocation of a method in {@link InetAddress} class triggers the first lookup\n+ * operation.\n@@ -47,19 +49,2 @@\n- * <h2 id=\"system-wide-resolver\"> Deploying a system-wide resolver <\/h2>\n- *\n- * <p> Resolver providers are discovered by {@link InetAddress}. It instantiates and\n- * sets the <i>system-wide resolver<\/i>. Resolver providers are located by\n- * {@link InetAddress} using the {@link ServiceLoader} facility.\n- *\n- * <p> Host name resolution and reverse name resolution operations performed by\n- * {@link InetAddress} use the <i>system-wide<\/i> {@linkplain InetAddressResolver\n- * resolver}. The system-wide resolver is set once, lazily, after the VM is fully\n- * initialized and when an invocation of a method in {@link InetAddress} class\n- * triggers the first lookup operation.\n- *\n- * <p> A <i>custom resolver<\/i> can be installed as the system-wide resolver\n- * by deploying an {@code InetAddressResolverProvider}. If no resolver provider is\n- * found, then the <a href=\"{@docRoot}\/java.base\/java\/net\/InetAddress.html#built-in-resolver\">\n- * built-in resolver<\/a> will be set as the system-wide resolver.\n- *\n- * <p> A custom resolver is found and installed as the system-wide resolver\n- * as follows:\n+ * <p id=\"system-wide-resolver\"> A resolver provider is located and loaded by\n+ * {@link InetAddress} to create the system-wide resolver as follows:\n@@ -75,1 +60,1 @@\n- *      method. The returned {@code InetAddressResolver} will be installed as the\n+ *      method. The returned {@code InetAddressResolver} will be set as the\n@@ -78,1 +63,2 @@\n- *      built-in resolver will be set as the system-wide resolver.\n+ *      <a href=\"{@docRoot}\/java.base\/java\/net\/InetAddress.html#built-in-resolver\">\n+ *      built-in resolver<\/a> will be set as the system-wide resolver.\n@@ -83,2 +69,2 @@\n- * installed and the error or exception will be propagated to the calling thread.\n- * Otherwise, any lookup operation will be performed through the installed\n+ * set and the error or exception will be propagated to the calling thread.\n+ * Otherwise, any lookup operation will be performed using the\n@@ -95,1 +81,1 @@\n-     * Initialise and return an {@link InetAddressResolver} provided by\n+     * Initialize and return an {@link InetAddressResolver} provided by\n@@ -110,3 +96,1 @@\n-     * Returns the name of this provider.\n-     *\n-     * @return the resolver provider name or {@code null} if unnamed\n+     * {@return the name of this provider, or {@code null} if unnamed}\n","filename":"src\/java.base\/share\/classes\/java\/net\/spi\/InetAddressResolverProvider.java","additions":12,"deletions":28,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -40,1 +40,2 @@\n- * @run testng\/othervm -Dtest.dataFileName=nonExistentFile ResolvePermissionTest\n+ * @run testng\/othervm -Dtest.dataFileName=nonExistentFile -Djava.security.manager=allow\n+ *                      ResolvePermissionTest\n","filename":"test\/jdk\/java\/net\/spi\/InetAddressResolverProvider\/ResolvePermissionTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n- * @run testng\/othervm RuntimePermissionTest\n+ * @run testng\/othervm -Djava.security.manager=allow RuntimePermissionTest\n","filename":"test\/jdk\/java\/net\/spi\/InetAddressResolverProvider\/RuntimePermissionTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}