{"files":[{"patch":"@@ -148,18 +148,11 @@\n- * <P>There is a <a href=\"doc-files\/net-properties.html#Ipv4IPv6\">couple of\n- * System Properties<\/a> affecting how IPv4 and IPv6 addresses are used.<\/P>\n- *\n- * <h3> Host Name Resolution <\/h3>\n- * Host name-to-IP address <i>resolution<\/i> is accomplished through the use\n- * of an {@linkplain InetAddressResolver InetAddress resolver}. Lookup operations\n- * performed by this class use the\n- * <a href=\"spi\/InetAddressResolverProvider.html#system-wide-resolver\">\n- * system-wide resolver<\/a>. The <i>system-wide resolver<\/i> can be customized\n- * by <a href=\"spi\/InetAddressResolverProvider.html#system-wide-resolver\">\n- * deploying<\/a> an {@link InetAddressResolverProvider}.\n- * <p id=\"built-in-resolver\">The built-in resolver implementation is used by\n- * default and accomplishes host name-to-IP address <i>resolution<\/i> through the\n- * use of a combination of local machine configuration information and network\n- * naming services such as the Domain Name System (DNS) and Network Information\n- * Service(NIS). The particular naming services(s) being used is by default the\n- * local machine configured one. For any host name, its corresponding IP address\n- * is returned.\n+ * <p> There is a <a href=\"doc-files\/net-properties.html#Ipv4IPv6\">couple of\n+ * System Properties<\/a> affecting how IPv4 and IPv6 addresses are used.\n+ *\n+ * <h2 id=\"host-name-resolution\"> Host Name Resolution <\/h2>\n+ *\n+ * <p> The InetAddress class provides methods to resolve host names to\n+ * their IP addresses and vice versa. The actual resolution is delegated to an\n+ * {@linkplain InetAddressResolver InetAddress resolver}.\n+ *\n+ * <p> <i>Host name-to-IP address resolution<\/i> maps a host name to an IP address.\n+ * For any host name, its corresponding IP address is returned.\n@@ -170,2 +163,12 @@\n- * <p> The InetAddress class provides methods to resolve host names to\n- * their IP addresses and vice versa.\n+ * <p id=\"built-in-resolver\"> The built-in InetAddress resolver implementation does\n+ * host name-to-IP address resolution and vice versa through the use of\n+ * a combination of local machine configuration information and network\n+ * naming services such as the Domain Name System (DNS) and the Lightweight Directory\n+ * Access Protocol (LDAP).\n+ * The particular naming services that the built-in resolver uses by default\n+ * depend on the configuration of the local machine.\n+ *\n+ * <p> {@code InetAddress} has a service provider mechanism for InetAddress resolvers\n+ * that allows a custom InetAddress resolver to be used instead of the built-in implementation.\n+ * {@link InetAddressResolverProvider} is the service provider class. Its API docs provide all the\n+ * details on this mechanism.\n@@ -173,1 +176,1 @@\n- * <h3> InetAddress Caching <\/h3>\n+ * <h2> InetAddress Caching <\/h2>\n","filename":"src\/java.base\/share\/classes\/java\/net\/InetAddress.java","additions":24,"deletions":21,"binary":false,"changes":45,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n- * This interface defines operations for looking-up host names and IP addresses.\n+ * This interface defines operations for looking up host names and IP addresses.\n@@ -36,5 +36,5 @@\n- * <a href=\"InetAddressResolverProvider.html#system-wide-resolver\">installed<\/a> as a\n- * <i>system-wide resolver<\/i>. {@link InetAddress} delegates all lookup requests to\n- * the installed <i>system-wide resolver<\/i> instance.\n- * <p>\n- * The <i>system-wide resolver<\/i> can be customized by\n+ * deployed as a <a href=\"InetAddressResolverProvider.html#system-wide-resolver\">\n+ * system-wide resolver<\/a>. {@link InetAddress} delegates all lookup requests to\n+ * the deployed <i>system-wide resolver<\/i> instance.\n+ *\n+ * <p> The <i>system-wide resolver<\/i> can be customized by\n@@ -51,2 +51,2 @@\n-     * <p>\n-     * {@code host} should be a machine name, such as \"{@code www.example.com}\",\n+     *\n+     * <p> {@code host} should be a machine name, such as \"{@code www.example.com}\",\n@@ -56,5 +56,7 @@\n-     * <p>\n-     * The address family type and addresses order are specified by the {@code LookupPolicy} instance.\n-     * Lookup operation characteristics could be acquired with {@link LookupPolicy#characteristics()}. If\n-     * {@link InetAddressResolver.LookupPolicy#IPV4} and {@link InetAddressResolver.LookupPolicy#IPV6}\n-     * characteristics provided then this method returns addresses of both IPV4 and IPV6 families.\n+     *\n+     * <p> The address family type and addresses order are specified by the\n+     * {@code LookupPolicy} instance. Lookup operation characteristics could be\n+     * acquired with {@link LookupPolicy#characteristics()}.\n+     * If {@link InetAddressResolver.LookupPolicy#IPV4} and\n+     * {@link InetAddressResolver.LookupPolicy#IPV6} characteristics provided then this\n+     * method returns addresses of both IPV4 and IPV6 families.\n@@ -65,1 +67,1 @@\n-     * @throws NullPointerException if {@code host} is {@code null}\n+     * @throws NullPointerException if either parameter is {@code null}\n@@ -74,1 +76,1 @@\n-     * <p>{@code addr} argument is in network byte order: the highest order byte of the address\n+     * <p> {@code addr} argument is in network byte order: the highest order byte of the address\n@@ -82,2 +84,3 @@\n-     * @throws UnknownHostException     if no host found for the specified IP address\n-     * @throws IllegalArgumentException if IP address is of illegal length\n+     * @throws UnknownHostException     if no host name is found for the specified IP address\n+     * @throws IllegalArgumentException if the length of the provided byte array doesn't correspond\n+     *                                  to a valid IP address length\n@@ -89,4 +92,4 @@\n-     * In particular, it is used to specify which ordering and filtering should be performed when\n-     * {@linkplain InetAddressResolver#lookupByName(String, LookupPolicy) looking up a host addresses}.\n-     * <p>\n-     * The default platform-wide lookup policy is constructed by consulting\n+     * In particular, it is used to specify the ordering and which filtering should be performed when\n+     * {@linkplain InetAddressResolver#lookupByName(String, LookupPolicy) looking up host addresses}.\n+     *\n+     * <p> The default platform-wide lookup policy is constructed by consulting\n@@ -133,1 +136,1 @@\n-         * This factory method creates {@link LookupPolicy LookupPolicy} instance with the provided\n+         * This factory method creates {@link LookupPolicy LookupPolicy} instance with a provided\n@@ -135,0 +138,1 @@\n+         *\n@@ -142,0 +146,1 @@\n+         *\n@@ -148,0 +153,1 @@\n+         *\n@@ -158,1 +164,1 @@\n-         * @param characteristics value which represents the set of lookup characteristics\n+         * @param characteristics a value which represents the set of lookup characteristics\n@@ -160,1 +166,1 @@\n-         * @throws IllegalArgumentException if illegal characteristic bit mask is provided\n+         * @throws IllegalArgumentException if an illegal characteristics bit mask is provided\n@@ -163,1 +169,1 @@\n-        public static final LookupPolicy of(int characteristics) {\n+        public static LookupPolicy of(int characteristics) {\n@@ -187,2 +193,1 @@\n-         * Returns a set of characteristics of this lookup policy.\n-         * Type and order of address families queried during resolution of host IP addresses.\n+         * Returns the set of characteristics of this lookup policy.\n@@ -193,1 +198,1 @@\n-        public final int characteristics() {\n+        public int characteristics() {\n","filename":"src\/java.base\/share\/classes\/java\/net\/spi\/InetAddressResolver.java","additions":33,"deletions":28,"binary":false,"changes":61,"status":"modified"},{"patch":"@@ -36,3 +36,3 @@\n- * <p>A resolver provider is a factory for custom implementations of {@linkplain\n- * InetAddressResolver resolvers}. A resolver define operations for looking up\n- * (resolving) host names and IP addresses.\n+ * <p> A resolver provider is a factory for custom implementations of {@linkplain\n+ * InetAddressResolver InetAddress resolvers}. A resolver defines operations for\n+ * looking up (resolving) host names and IP addresses.\n@@ -42,3 +42,9 @@\n- * <h2 id=\"system-wide-resolver\"> Installing the system-wide resolver <\/h2>\n- * <p> Resolver providers are discovered by {@link InetAddress} to instantiate and\n- * install a <i>system-wide resolver<\/i>. Resolver providers are located by\n+ * <p> A given invocation of the Java virtual machine maintains a single\n+ * system-wide resolver instance, which is used by\n+ * <a href=\"{@docRoot}\/java.base\/java\/net\/InetAddress.html#host-name-resolution\">\n+ * InetAddress<\/a>.\n+ *\n+ * <h2 id=\"system-wide-resolver\"> Deploying a system-wide resolver <\/h2>\n+ *\n+ * <p> Resolver providers are discovered by {@link InetAddress}. It instantiates and\n+ * sets the <i>system-wide resolver<\/i>. Resolver providers are located by\n@@ -47,1 +53,1 @@\n- * <p>Host name resolution and reverse name resolution operations performed by\n+ * <p> Host name resolution and reverse name resolution operations performed by\n@@ -54,3 +60,3 @@\n- * by deploying an {@code InetAddressResolverProvider}. If no resolver provider\n- * is found, then the <a href=\"..\/InetAddress.html#built-in-resolver\">built-in\n- * resolver<\/a> will be set as the system-wide resolver.\n+ * by deploying an {@code InetAddressResolverProvider}. If no resolver provider is\n+ * found, then the <a href=\"{@docRoot}\/java.base\/java\/net\/InetAddress.html#built-in-resolver\">\n+ * built-in resolver<\/a> will be set as the system-wide resolver.\n@@ -93,2 +99,2 @@\n-     * <p>\n-     * Any error or exception thrown by this method is considered as\n+     *\n+     * <p> Any error or exception thrown by this method is considered as\n@@ -106,1 +112,1 @@\n-     * @return the resolver provider name\n+     * @return the resolver provider name or {@code null} if unnamed\n@@ -148,3 +154,3 @@\n-     * {@link InetAddressResolverProvider#get(Configuration)} method when installing a\n-     * system-wide custom resolver implementation.\n-     * The custom resolver implementation can then delegate to the built-in resolver\n+     * {@link InetAddressResolverProvider#get(Configuration)} method when\n+     * setting the system-wide resolver.\n+     * A resolver implementation can then delegate to the built-in resolver\n@@ -157,1 +163,1 @@\n-         * Returns platform built-in {@linkplain InetAddressResolver resolver}.\n+         * Returns the built-in {@linkplain InetAddressResolver resolver}.\n","filename":"src\/java.base\/share\/classes\/java\/net\/spi\/InetAddressResolverProvider.java","additions":23,"deletions":17,"binary":false,"changes":40,"status":"modified"}]}