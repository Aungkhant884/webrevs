{"files":[{"patch":"@@ -506,1 +506,0 @@\n-  Node_List           *defs,*phis;\n@@ -523,2 +522,4 @@\n-  defs = new Node_List();\n-  phis = new Node_List();\n+  Arena defs_arena{mtCompiler, Chunk::medium_size};\n+  Arena phis_arena{mtCompiler, Chunk::medium_size}\n+  Node_List defs{&defs_arena};\n+  Node_List phis{&phis_arena};\n@@ -572,2 +573,4 @@\n-  for( slidx = 0; slidx < spill_cnt; slidx++ )\n-    UP_entry[slidx] = new VectorSet(split_arena);\n+  \/\/ Each containing at most spill_cnt * _cfg.number_of_blocks() entries.\n+  for (slidx = 0; slidx < spill_cnt; slidx++) {\n+    UP_entry[slidx] = new(split_arena) VectorSet(split_arena);\n+  }\n@@ -705,1 +708,1 @@\n-        phis->push(phi);\n+        phis.push(phi);\n@@ -1192,1 +1195,1 @@\n-        defs->push(n);\n+        defs.push(n);\n@@ -1311,1 +1314,1 @@\n-  for( insidx = 0; insidx < defs->size(); insidx++ ) {\n+  for( insidx = 0; insidx < defs.size(); insidx++ ) {\n@@ -1313,1 +1316,1 @@\n-    n1 = defs->at(insidx);\n+    n1 = defs.at(insidx);\n@@ -1323,2 +1326,2 @@\n-  for( insidx = 0; insidx < phis->size(); insidx++ ) {\n-    Node *phi = phis->at(insidx);\n+  for( insidx = 0; insidx < phis.size(); insidx++ ) {\n+    Node *phi = phis.at(insidx);\n@@ -1392,2 +1395,2 @@\n-  for( insidx = 0; insidx < phis->size(); insidx++ ) {\n-    Node *phi = phis->at(insidx);\n+  for( insidx = 0; insidx < phis.size(); insidx++ ) {\n+    Node *phi = phis.at(insidx);\n@@ -1411,1 +1414,1 @@\n-  for (insidx = 0; insidx < defs->size(); insidx++) {\n+  for (insidx = 0; insidx < defs.size(); insidx++) {\n@@ -1413,1 +1416,1 @@\n-    n1 = defs->at(insidx);\n+    n1 = defs.at(insidx);\n","filename":"src\/hotspot\/share\/opto\/reg_split.cpp","additions":18,"deletions":15,"binary":false,"changes":33,"status":"modified"}]}