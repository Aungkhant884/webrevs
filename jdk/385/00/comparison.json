{"files":[{"patch":"@@ -214,1 +214,1 @@\n-  void unlock_object(Register lock_reg, bool check_for_exceptions = true);\n+  void unlock_object(Register lock_reg);\n","filename":"src\/hotspot\/cpu\/ppc\/interp_masm_ppc.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -998,1 +998,1 @@\n-void InterpreterMacroAssembler::unlock_object(Register monitor, bool check_for_exceptions) {\n+void InterpreterMacroAssembler::unlock_object(Register monitor) {\n","filename":"src\/hotspot\/cpu\/ppc\/interp_masm_ppc_64.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1552,3 +1552,1 @@\n-    \/\/ Don't check for exceptions since we're still in the i2n frame. Do that\n-    \/\/ manually afterwards.\n-    __ unlock_object(R26_monitor, false); \/\/ Can also unlock methods.\n+    __ unlock_object(R26_monitor); \/\/ Can also unlock methods.\n@@ -1595,3 +1593,1 @@\n-    \/\/ Don't check for exceptions since we're still in the i2n frame. Do that\n-    \/\/ manually afterwards.\n-    __ unlock_object(R26_monitor, false); \/\/ Can also unlock methods.\n+    __ unlock_object(R26_monitor); \/\/ Can also unlock methods.\n@@ -2108,1 +2104,1 @@\n-    __ restore_interpreter_state(R11_scratch1, \/*bcp_and_mdx_only*\/ true);\n+\n","filename":"src\/hotspot\/cpu\/ppc\/templateInterpreterGenerator_ppc.cpp","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"}]}