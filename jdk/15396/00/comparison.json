{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -58,6 +58,0 @@\n-#ifdef _MSC_VER\n-# ifndef snprintf\n-#       define snprintf  _snprintf\n-# endif\n-#endif\n-\n@@ -78,1 +72,1 @@\n-    char errMsg[ERR_MSG_SIZE];\n+    char errMsg[ERR_MSG_SIZE] = {0};\n@@ -80,6 +74,1 @@\n-    int count = snprintf(errMsg, ERR_MSG_SIZE,\n-                          \"LCMS error %d: %s\", errorCode, errorText);\n-    if (count < 0 || count >= ERR_MSG_SIZE) {\n-        count = ERR_MSG_SIZE - 1;\n-    }\n-    errMsg[count] = 0;\n+    snprintf(errMsg, ERR_MSG_SIZE, \"LCMS error %d: %s\", errorCode, errorText);\n","filename":"src\/java.desktop\/share\/native\/liblcms\/LCMS.c","additions":3,"deletions":14,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -0,0 +1,80 @@\n+\/*\n+ * Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.color.CMMException;\n+import java.awt.color.ColorSpace;\n+import java.awt.color.ICC_ColorSpace;\n+import java.awt.color.ICC_Profile;\n+import java.awt.image.BufferedImage;\n+import java.awt.image.ColorConvertOp;\n+import java.io.File;\n+import java.io.FileInputStream;\n+import java.util.zip.ZipInputStream;\n+\n+import static java.awt.image.BufferedImage.TYPE_INT_RGB;\n+\n+\/**\n+ * @test\n+ * @bug 8313220\n+ * @summary Verifies that CMM errors reported properly\n+ *\/\n+public final class TriggerCMMError {\n+\n+    public static void main(String[] args) throws Exception {\n+        \/\/ \"broken.zip\" is a copy of \"PYCC.pf\"\n+        File file = new File(System.getProperty(\"test.src\", \".\"), \"broken.zip\");\n+        ICC_Profile profile;\n+        try (FileInputStream fis = new FileInputStream(file);\n+             ZipInputStream zis = new ZipInputStream(fis))\n+        {\n+            zis.getNextEntry();\n+            profile = ICC_Profile.getInstance(zis);\n+        }\n+        var from = new ICC_ColorSpace(profile);\n+        var to = (ICC_ColorSpace) ColorSpace.getInstance(ColorSpace.CS_CIEXYZ);\n+\n+        from.getProfile().getData();\n+\n+        convert(from, to);\n+\n+        try {\n+            from.getProfile().getData();\n+        } catch (CMMException cmm) {\n+            String message = cmm.getMessage();\n+            System.err.println(\"message = \" + message);\n+            if (message.length() > 255) {\n+                throw new RuntimeException(\"The message is too long\");\n+            }\n+            if (!message.matches(\"LCMS error \\\\d+:\\\\s.*\")) {\n+                throw new RuntimeException(\"The message format is unexpected\");\n+            }\n+        }\n+    }\n+\n+    private static void convert(ColorSpace from, ColorSpace to) {\n+        BufferedImage src = new BufferedImage(10, 10, TYPE_INT_RGB);\n+        BufferedImage dst = new BufferedImage(10, 10, TYPE_INT_RGB);\n+        ColorConvertOp op = new ColorConvertOp(from, to, null);\n+        op.filter(src, dst);\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/color\/ICC_Profile\/TriggerCMMError\/TriggerCMMError.java","additions":80,"deletions":0,"binary":false,"changes":80,"status":"added"},{"filename":"test\/jdk\/java\/awt\/color\/ICC_Profile\/TriggerCMMError\/broken.zip","binary":true,"status":"added"}]}