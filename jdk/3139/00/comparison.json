{"files":[{"patch":"@@ -563,20 +563,0 @@\n-\n-address NativeLookup::base_library_lookup(const char* class_name, const char* method_name, const char* signature) {\n-  EXCEPTION_MARK;\n-  bool in_base_library = true;  \/\/ SharedRuntime inits some math methods.\n-  TempNewSymbol c_name = SymbolTable::new_symbol(class_name);\n-  TempNewSymbol m_name = SymbolTable::new_symbol(method_name);\n-  TempNewSymbol s_name = SymbolTable::new_symbol(signature);\n-\n-  \/\/ Find the class\n-  Klass* k = SystemDictionary::resolve_or_fail(c_name, true, CATCH);\n-  InstanceKlass* klass  = InstanceKlass::cast(k);\n-\n-  \/\/ Find method and invoke standard lookup\n-  methodHandle method (THREAD,\n-                       klass->uncached_lookup_method(m_name, s_name, Klass::OverpassLookupMode::find));\n-  address result = lookup(method, in_base_library, CATCH);\n-  assert(in_base_library, \"must be in basic library\");\n-  guarantee(result != NULL, \"must be non NULL\");\n-  return result;\n-}\n","filename":"src\/hotspot\/share\/prims\/nativeLookup.cpp","additions":0,"deletions":20,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -55,3 +55,0 @@\n-\n-  \/\/ Lookup native functions in base library.\n-  static address base_library_lookup(const char* class_name, const char* method_name, const char* signature);\n","filename":"src\/hotspot\/share\/prims\/nativeLookup.hpp","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"}]}