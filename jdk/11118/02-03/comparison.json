{"files":[{"patch":"@@ -1635,1 +1635,1 @@\n-        char tmp[256]; \/\/ cannot use global scratch buffer\n+        static char tmp[256]; \/\/ cannot use global scratch buffer\n@@ -1653,6 +1653,14 @@\n-        if (ErrorLogSecondaryErrorDetails) {\n-          \/\/ Print even more information for secondary errors.\n-          \/\/ This is more dangerous, therefore optional and only in debug builds.\n-          if (siginfo != nullptr) {\n-            st->print(\"[\");\n-            os::print_siginfo(st, siginfo);\n+        {\n+          static bool recursed = false;\n+          if (ErrorLogSecondaryErrorDetails && !recursed) {\n+            recursed = true;\n+            \/\/ Print even more information for secondary errors. This may generate a lot of output\n+            \/\/ and possibly disturb error reporting, therefore its optional and only available in debug builds.\n+            if (siginfo != nullptr) {\n+              st->print(\"[\");\n+              os::print_siginfo(st, siginfo);\n+              st->print_cr(\"]\");\n+            }\n+            st->print(\"[stack: \");\n+            frame fr = context ? os::fetch_frame_from_context(context) : os::current_frame();\n+            print_native_stack(st, fr, _thread, false \/* source info *\/, tmp, sizeof(tmp));\n@@ -1660,0 +1668,1 @@\n+            recursed = false;\n@@ -1661,4 +1670,0 @@\n-          st->print(\"[stack: \");\n-          frame fr = context ? os::fetch_frame_from_context(context) : os::current_frame();\n-          print_native_stack(st, fr, _thread, true, tmp, sizeof(tmp));\n-          st->print_cr(\"]\");\n","filename":"src\/hotspot\/share\/utilities\/vmError.cpp","additions":16,"deletions":11,"binary":false,"changes":27,"status":"modified"}]}