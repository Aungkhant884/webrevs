{"files":[{"patch":"@@ -748,1 +748,1 @@\n-  VMError::print_native_stack(tty, fr, t, false, buf, sizeof(buf));\n+  VMError::print_native_stack(tty, fr, t, false, -1, buf, sizeof(buf));\n@@ -768,1 +768,1 @@\n-    VMError::print_native_stack(tty, fr, t, false, buf, sizeof(buf));\n+    VMError::print_native_stack(tty, fr, t, false, -1, buf, sizeof(buf));\n","filename":"src\/hotspot\/share\/utilities\/debug.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -350,1 +350,1 @@\n-void VMError::print_native_stack(outputStream* st, frame fr, Thread* t, bool print_source_info, char* buf, int buf_size) {\n+void VMError::print_native_stack(outputStream* st, frame fr, Thread* t, bool print_source_info, int max_frames, char* buf, int buf_size) {\n@@ -355,1 +355,1 @@\n-\n+    const int limit = max_frames == -1 ? StackPrintLimit : max_frames;\n@@ -357,1 +357,1 @@\n-    while (count++ < StackPrintLimit) {\n+    while (count++ < limit) {\n@@ -377,1 +377,1 @@\n-    if (count > StackPrintLimit) {\n+    if (count > limit) {\n@@ -847,1 +847,1 @@\n-       print_native_stack(st, fr, _thread, true, buf, sizeof(buf));\n+       print_native_stack(st, fr, _thread, true, -1, buf, sizeof(buf));\n@@ -859,1 +859,1 @@\n-     print_native_stack(st, fr, _thread, false, buf, sizeof(buf));\n+     print_native_stack(st, fr, _thread, false, -1, buf, sizeof(buf));\n@@ -1654,8 +1654,18 @@\n-          static bool recursed = false;\n-          if (ErrorLogSecondaryErrorDetails && !recursed) {\n-            recursed = true;\n-            \/\/ Print even more information for secondary errors. This may generate a lot of output\n-            \/\/ and possibly disturb error reporting, therefore its optional and only available in debug builds.\n-            if (siginfo != nullptr) {\n-              st->print(\"[\");\n-              os::print_siginfo(st, siginfo);\n+          if (ErrorLogSecondaryErrorDetails) {\n+            static bool recursed = false;\n+            if (!recursed) {\n+              recursed = true;\n+              \/\/ Print even more information for secondary errors. This may generate a lot of output\n+              \/\/ and possibly disturb error reporting, therefore its optional and only available in debug builds.\n+              if (siginfo != nullptr) {\n+                st->print(\"[\");\n+                os::print_siginfo(st, siginfo);\n+                st->print_cr(\"]\");\n+              }\n+              st->print(\"[stack: \");\n+              frame fr = context ? os::fetch_frame_from_context(context) : os::current_frame();\n+              \/\/ Subsequent secondary errors build up stack; to avoid flooding the hs-err file with irrelevant\n+              \/\/ call stacks, limit the stack we print here (we are only interested in what happened before the\n+              \/\/ last assert\/fault).\n+              const int max_stack_size = 15;\n+              print_native_stack(st, fr, _thread, true, max_stack_size, tmp, sizeof(tmp));\n@@ -1663,6 +1673,2 @@\n-            }\n-            st->print(\"[stack: \");\n-            frame fr = context ? os::fetch_frame_from_context(context) : os::current_frame();\n-            print_native_stack(st, fr, _thread, false \/* source info *\/, tmp, sizeof(tmp));\n-            st->print_cr(\"]\");\n-            recursed = false;\n+            } \/\/ !recursed\n+            recursed = false; \/\/ Note: reset outside !recursed\n","filename":"src\/hotspot\/share\/utilities\/vmError.cpp","additions":26,"deletions":20,"binary":false,"changes":46,"status":"modified"},{"patch":"@@ -108,0 +108,3 @@\n+  \/\/ print_source_info: if true, we try to resolve the source information on platforms that support it\n+  \/\/  (useful but may slow down, timeout or misfunction in error situations)\n+  \/\/ max_frames: if not -1, overrides StackPrintLimit\n@@ -109,1 +112,1 @@\n-                                 char* buf, int buf_size);\n+                                 int max_frames, char* buf, int buf_size);\n","filename":"src\/hotspot\/share\/utilities\/vmError.hpp","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -130,2 +130,0 @@\n-      patternlist.add(Pattern.compile(\".*VMError::report\\\\(.*\"));\n-      patternlist.add(Pattern.compile(\".*VMError::report_and_die\\\\(.*\"));\n@@ -140,2 +138,0 @@\n-      patternlist.add(Pattern.compile(\".*VMError::report\\\\(.*\"));\n-      patternlist.add(Pattern.compile(\".*VMError::report_and_die\\\\(.*\"));\n","filename":"test\/hotspot\/jtreg\/runtime\/ErrorHandling\/SecondaryErrorTest.java","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"}]}