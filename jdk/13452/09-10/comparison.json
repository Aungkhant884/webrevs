{"files":[{"patch":"@@ -41,1 +41,2 @@\n-    private int setsize;\n+    private final long pollBuffer;\n+    private static final int POLL_BUFFER_SIZE = 16;\n@@ -45,1 +46,0 @@\n-        this.setsize = 0;\n@@ -47,0 +47,1 @@\n+        this.pollBuffer = Pollset.allocatePollArray(POLL_BUFFER_SIZE);\n@@ -61,1 +62,0 @@\n-        setsize++;\n@@ -66,1 +66,0 @@\n-        assert (setsize > 0);\n@@ -69,1 +68,0 @@\n-        setsize--;\n@@ -97,5 +95,1 @@\n-        \/\/ The poll loop may start polling before any fds have been registered. But, if we use set\n-        \/\/ size 0 to allocatePollArray, it will return the null address and pollsetPoll will complain.\n-        \/\/ We avoid that by just passing set size 1, and letting poll block for subInterval.\n-        long buffer = Pollset.allocatePollArray(setsize > 0 ? setsize : 1);\n-        int n = Pollset.pollsetPoll(setid, buffer, setsize, subInterval);\n+        int n = Pollset.pollsetPoll(setid, pollBuffer, POLL_BUFFER_SIZE, subInterval);\n@@ -103,1 +97,1 @@\n-            long eventAddress = Pollset.getEvent(buffer, i);\n+            long eventAddress = Pollset.getEvent(pollBuffer, i);\n@@ -107,1 +101,0 @@\n-        Pollset.freePollArray(buffer);\n","filename":"src\/java.base\/aix\/classes\/sun\/nio\/ch\/PollsetPoller.java","additions":5,"deletions":12,"binary":false,"changes":17,"status":"modified"}]}