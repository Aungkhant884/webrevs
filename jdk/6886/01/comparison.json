{"files":[{"patch":"@@ -53,0 +53,1 @@\n+\n@@ -56,0 +57,1 @@\n+\n@@ -2912,0 +2914,6 @@\n+            Type enclType = clazztype.getEnclosingType();\n+            if (enclType != null &&\n+                    enclType.hasTag(CLASS) &&\n+                    !chk.checkDenotable((ClassType)enclType)) {\n+                log.error(tree.encl, Errors.EnclosingClassTypeNonDenotable(enclType));\n+            }\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -3915,0 +3915,5 @@\n+\n+# 0: type\n+compiler.err.enclosing.class.type.non.denotable=\\\n+    enclosing class type: {0}\\n\\\n+    is non-denotable, try casting to a denotable type\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/compiler.properties","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- * @bug 8203436\n+ * @bug 8203436 8211004\n","filename":"test\/langtools\/tools\/javac\/8203436\/T8203436a.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-- compiler.err.cannot.generate.class: compiler.misc.anonymous.class: T8203436a$1, (compiler.misc.illegal.signature: compiler.misc.anonymous.class: T8203436a$1, compiler.misc.type.captureof: 1, ?)\n+T8203436a.java:12:7: compiler.err.enclosing.class.type.non.denotable: T8203436a<compiler.misc.type.captureof: 1, ?>\n","filename":"test\/langtools\/tools\/javac\/8203436\/T8203436a.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-- compiler.err.cannot.generate.class: compiler.misc.anonymous.class: T8203436b$1, (compiler.misc.illegal.signature: compiler.misc.anonymous.class: T8203436b$1, java.lang.Object&T8203436b.A&T8203436b.B)\n+T8203436b.java:17:10: compiler.err.enclosing.class.type.non.denotable: T8203436b<java.lang.Object&T8203436b.A&T8203436b.B>\n","filename":"test\/langtools\/tools\/javac\/8203436\/T8203436b.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -209,0 +209,1 @@\n+compiler.misc.illegal.signature                               # the compiler can now detect more non-denotable types before class writing\n","filename":"test\/langtools\/tools\/javac\/diags\/examples.not-yet.txt","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -24,2 +24,1 @@\n-\/\/ key: compiler.err.cannot.generate.class\n-\/\/ key: compiler.misc.illegal.signature\n+\/\/ key: compiler.err.enclosing.class.type.non.denotable\n","filename":"test\/langtools\/tools\/javac\/diags\/examples\/IllegalSignature.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -0,0 +1,1 @@\n+Neg21.java:13:9: compiler.err.enclosing.class.type.non.denotable: Neg21<java.lang.Object&java.io.Serializable&java.lang.Cloneable>\n@@ -2,1 +3,1 @@\n-1 error\n+2 errors\n","filename":"test\/langtools\/tools\/javac\/generics\/diamond\/neg\/Neg21.out","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"}]}