{"files":[{"patch":"@@ -184,0 +184,20 @@\n+    @DataProvider(name = \"sanityBadRequest\")\n+    public Object[][] sanityBadRequest() {\n+        return new Object[][]{\n+                { httpURIVarLen  }, \/\/ no query string\n+                { httpsURIVarLen },\n+                { httpURIFixLen  },\n+        };\n+    }\n+\n+    @Test(dataProvider = \"sanityBadRequest\")\n+    void sanityBadRequest(String url) throws Exception {\n+        HttpClient client = newHttpClient();\n+        url = uniqueURL(url);\n+        HttpRequest request = HttpRequest.newBuilder(URI.create(url)).build();\n+        out.println(\"Request: \" + request);\n+        HttpResponse<String> response = client.send(request, ofString());\n+        assertEquals(response.statusCode(), 400);\n+        assertEquals(response.body(), \"\");\n+    }\n+\n@@ -489,0 +509,5 @@\n+        private static final String BAD_REQUEST_RESPONSE =\n+                \"HTTP\/1.1 400 Bad Request\\r\\n\" +\n+                        \"Content-Length: 0\\r\\n\" +\n+                        \"Connection: close\\r\\n\\r\\n\";\n+\n@@ -505,1 +530,4 @@\n-                        out.println(\"Request headers: [\" + headers + \"]\");\n+                        out.println(\"Unexpected request without query string received. Got headers: [\" + headers + \"]\");\n+                        out.println(\"Replying with 400 Bad Request\");\n+                        writeResponse(s, BAD_REQUEST_RESPONSE, BAD_REQUEST_RESPONSE.length());\n+                        continue;\n@@ -507,1 +535,0 @@\n-                    assert query != null : \"null query for uriPath: \" + uriPath;\n@@ -516,1 +543,0 @@\n-                    OutputStream os = s.getOutputStream();\n@@ -518,5 +544,1 @@\n-                    byte[] responseBytes = response().getBytes(US_ASCII);\n-                    for (int i = 0; i< len; i++) {\n-                        os.write(responseBytes[i]);\n-                        os.flush();\n-                    }\n+                    writeResponse(s, response(), len);\n@@ -533,0 +555,9 @@\n+        private static void writeResponse(Socket socket, String response, int len) throws IOException {\n+            OutputStream os = socket.getOutputStream();\n+            byte[] responseBytes = response.getBytes(US_ASCII);\n+            for (int i = 0; i < len; ++i) {\n+                os.write(responseBytes[i]);\n+                os.flush();\n+            }\n+        }\n+\n","filename":"test\/jdk\/java\/net\/httpclient\/ShortResponseBody.java","additions":39,"deletions":8,"binary":false,"changes":47,"status":"modified"}]}