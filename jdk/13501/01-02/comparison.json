{"files":[{"patch":"@@ -40,0 +40,1 @@\n+import java.util.regex.Pattern;\n@@ -42,1 +43,0 @@\n-import java.util.stream.Collectors;\n@@ -143,2 +143,1 @@\n-                final String finalPref = \",\"+preferred;\n-                final String inbtwnPref = \",\"+preferred+\",\";\n+                Pattern pattern = Pattern.compile(\"\\\\b\"+preferred+\"\\\\b\");\n@@ -146,5 +145,5 @@\n-                List<StringBuilder> doublePrefs = initialLanguageMap.entrySet()\n-                        .stream().filter(e -> (e.getValue().toString().endsWith(finalPref) ||\n-                                e.getValue().toString().contains(inbtwnPref)))\n-                        .map(Map.Entry::getValue)\n-                        .collect(Collectors.toList());\n+                List<StringBuilder> doublePrefs = initialLanguageMap\n+                        .values()\n+                        .stream()\n+                        .filter(e -> pattern.matcher(e.toString()).find())\n+                        .toList();\n@@ -156,1 +155,2 @@\n-                if (!foundInOther) { \/\/ does not exist in other pref value, so add as new entry\n+                if (!foundInOther) {\n+                    \/\/ does not exist in any other pref's values, so add as new entry\n@@ -178,1 +178,1 @@\n-                    .collect(Collectors.toList())\n+                    .toList()\n@@ -263,1 +263,1 @@\n-        + \"        singleEquivMap = new HashMap<>(\";\n+        + \"        singleEquivMap = HashMap.newHashMap(\";\n@@ -286,1 +286,1 @@\n-                + \"        multiEquivsMap = new HashMap<>(\"\n+                + \"        multiEquivsMap = HashMap.newHashMap(\"\n@@ -288,1 +288,1 @@\n-                + \"        regionVariantEquivMap = new HashMap<>(\"\n+                + \"        regionVariantEquivMap = HashMap.newHashMap(\"\n","filename":"make\/jdk\/src\/classes\/build\/tools\/generatelsrequivmaps\/EquivMapsGenerator.java","additions":13,"deletions":13,"binary":false,"changes":26,"status":"modified"}]}