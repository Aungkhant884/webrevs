{"files":[{"patch":"@@ -2066,1 +2066,7 @@\n-                        ret = new VarSymbol(sym.flags() & FINAL, sym.name, sym.type, translatedSym);\n+                        ret = new VarSymbol(sym.flags() & FINAL, sym.name, sym.type, translatedSym) {\n+                            @Override\n+                            public Symbol baseSymbol() {\n+                                \/\/keep mapping with original symbol\n+                                return sym;\n+                            }\n+                        };\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/LambdaToMethod.java","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1224,1 +1224,1 @@\n-                Symbol translatedSym = lambdaTranslationMap.get(sym);\n+                Symbol translatedSym = lambdaTranslationMap.get(sym.baseSymbol());\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Lower.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,65 @@\n+import java.util.function.Supplier;\n+\n+\/**\n+ * @test\n+ *\/\n+public class CaptureVariables {\n+    static Supplier<Integer> supplier1 = () -> {\n+        boolean b0 = false;\n+        int i0 = 6;\n+        boolean b1 = false;\n+        String s0 = \"hello\";\n+\n+        class Local {\n+            int i = s0.length() + i0;\n+        }\n+\n+        return ((Supplier<Integer>) () -> new Local().i).get();\n+    };\n+\n+    static Supplier<Integer> supplier2 = () -> {\n+        boolean b0 = false;\n+        int i0 = 6;\n+        boolean b1 = false;\n+        String s0 = \"hello\";\n+\n+        class Local {\n+            int i = s0.length() + i0;\n+        }\n+\n+        return ((Supplier<Integer>) () -> ((Supplier<Integer>) () -> new Local().i).get()).get();\n+    };\n+\n+    Supplier<Integer> supplier3 = () -> {\n+        boolean b0 = false;\n+        int i0 = 6;\n+        boolean b1 = false;\n+        String s0 = \"hello\";\n+\n+        class Local {\n+            int i = s0.length() + i0;\n+        }\n+\n+        return ((Supplier<Integer>) () -> new Local().i).get();\n+    };\n+\n+    Supplier<Integer> supplier4 = () -> {\n+        boolean b0 = false;\n+        int i0 = 6;\n+        boolean b1 = false;\n+        String s0 = \"hello\";\n+\n+        class Local {\n+            int i = s0.length() + i0;\n+        }\n+\n+        return ((Supplier<Integer>) () -> ((Supplier<Integer>) () -> new Local().i).get()).get();\n+    };\n+\n+    public static void main(String[] args) {\n+        assert supplier1.get() == 11;\n+        assert supplier2.get() == 11;\n+        assert new CaptureVariables().supplier3.get() == 11;\n+        assert new CaptureVariables().supplier4.get() == 11;\n+    }\n+}\n","filename":"test\/langtools\/tools\/javac\/lambda\/8258897\/CaptureVariables.java","additions":65,"deletions":0,"binary":false,"changes":65,"status":"added"},{"patch":"@@ -0,0 +1,65 @@\n+import java.util.function.Supplier;\n+\n+\/**\n+ * @test\n+ *\/\n+public class CaptureVariablesAnonymous {\n+    static Supplier<Integer> supplier1 = () -> {\n+        boolean b0 = false;\n+        int i0 = 6;\n+        boolean b1 = false;\n+        String s0 = \"hello\";\n+\n+        class Local {\n+            int i = s0.length() + i0;\n+        }\n+\n+        return ((Supplier<Integer>) () -> new Local() {}.i).get();\n+    };\n+\n+    static Supplier<Integer> supplier2 = () -> {\n+        boolean b0 = false;\n+        int i0 = 6;\n+        boolean b1 = false;\n+        String s0 = \"hello\";\n+\n+        class Local {\n+            int i = s0.length() + i0;\n+        }\n+\n+        return ((Supplier<Integer>) () -> ((Supplier<Integer>) () -> new Local() {}.i).get()).get();\n+    };\n+\n+    Supplier<Integer> supplier3 = () -> {\n+        boolean b0 = false;\n+        int i0 = 6;\n+        boolean b1 = false;\n+        String s0 = \"hello\";\n+\n+        class Local {\n+            int i = s0.length() + i0;\n+        }\n+\n+        return ((Supplier<Integer>) () -> new Local() {}.i).get();\n+    };\n+\n+    Supplier<Integer> supplier4 = () -> {\n+        boolean b0 = false;\n+        int i0 = 6;\n+        boolean b1 = false;\n+        String s0 = \"hello\";\n+\n+        class Local {\n+            int i = s0.length() + i0;\n+        }\n+\n+        return ((Supplier<Integer>) () -> ((Supplier<Integer>) () -> new Local() {}.i).get()).get();\n+    };\n+\n+    public static void main(String[] args) {\n+        assert supplier1.get() == 11;\n+        assert supplier2.get() == 11;\n+        assert new CaptureVariablesAnonymous().supplier3.get() == 11;\n+        assert new CaptureVariablesAnonymous().supplier4.get() == 11;\n+    }\n+}\n","filename":"test\/langtools\/tools\/javac\/lambda\/8258897\/CaptureVariablesAnonymous.java","additions":65,"deletions":0,"binary":false,"changes":65,"status":"added"}]}