{"files":[{"patch":"@@ -113,2 +113,2 @@\n-  vmIntrinsics::ID id = m->intrinsic_id();\n-  if (id != vmIntrinsics::_none) {\n+  vmIntrinsics::ID iid = m->intrinsic_id();\n+  if (iid != vmIntrinsics::_none) {\n@@ -118,1 +118,1 @@\n-                                    vmIntrinsics::as_int(id) -\n+                                    vmIntrinsics::as_int(iid) -\n@@ -124,0 +124,1 @@\n+    switch (iid) {\n@@ -125,1 +126,0 @@\n-    switch (m->intrinsic_id()) {\n@@ -127,2 +127,2 @@\n-      case vmIntrinsics::_updateCRC32: return java_util_zip_CRC32_update;\n-      case vmIntrinsics::_updateBytesCRC32: return java_util_zip_CRC32_updateBytes;\n+      case vmIntrinsics::_updateCRC32:       return java_util_zip_CRC32_update;\n+      case vmIntrinsics::_updateBytesCRC32:  return java_util_zip_CRC32_updateBytes;\n@@ -133,1 +133,1 @@\n-      case vmIntrinsics::_intBitsToFloat: return java_lang_Float_intBitsToFloat;\n+      case vmIntrinsics::_intBitsToFloat:    return java_lang_Float_intBitsToFloat;\n@@ -135,1 +135,1 @@\n-      case vmIntrinsics::_longBitsToDouble: return java_lang_Double_longBitsToDouble;\n+      case vmIntrinsics::_longBitsToDouble:  return java_lang_Double_longBitsToDouble;\n@@ -137,4 +137,12 @@\n-      case vmIntrinsics::_dsin: return java_lang_math_sin;\n-      case vmIntrinsics::_dcos: return java_lang_math_cos;\n-      case vmIntrinsics::_dtan: return java_lang_math_tan;\n-      case vmIntrinsics::_dabs: return java_lang_math_abs;\n+#endif\n+      case vmIntrinsics::_dsin:              return java_lang_math_sin;\n+      case vmIntrinsics::_dcos:              return java_lang_math_cos;\n+      case vmIntrinsics::_dtan:              return java_lang_math_tan;\n+      case vmIntrinsics::_dabs:              return java_lang_math_abs;\n+      case vmIntrinsics::_dlog:              return java_lang_math_log;\n+      case vmIntrinsics::_dlog10:            return java_lang_math_log10;\n+      case vmIntrinsics::_dpow:              return java_lang_math_pow;\n+      case vmIntrinsics::_dexp:              return java_lang_math_exp;\n+      case vmIntrinsics::_fmaD:              return java_lang_math_fmaD;\n+      case vmIntrinsics::_fmaF:              return java_lang_math_fmaF;\n+      case vmIntrinsics::_Reference_get:     return java_lang_ref_reference_get;\n@@ -148,7 +156,0 @@\n-      case vmIntrinsics::_dlog: return java_lang_math_log;\n-      case vmIntrinsics::_dlog10: return java_lang_math_log10;\n-      case vmIntrinsics::_dpow: return java_lang_math_pow;\n-      case vmIntrinsics::_dexp: return java_lang_math_exp;\n-      case vmIntrinsics::_fmaD: return java_lang_math_fmaD;\n-      case vmIntrinsics::_fmaF: return java_lang_math_fmaF;\n-      case vmIntrinsics::_Reference_get: return java_lang_ref_reference_get;\n","filename":"src\/hotspot\/share\/interpreter\/abstractInterpreter.cpp","additions":20,"deletions":19,"binary":false,"changes":39,"status":"modified"}]}