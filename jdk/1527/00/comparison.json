{"files":[{"patch":"@@ -27,0 +27,1 @@\n+import org.testng.annotations.DataProvider;\n@@ -31,0 +32,1 @@\n+import java.nio.file.FileSystem;\n@@ -41,1 +43,1 @@\n- * @bug 8255380\n+ * @bug 8255380 8257445\n@@ -94,0 +96,14 @@\n+    \/*\n+     * DataProvider used to verify that a Zip file that contains a Zip64 Extra\n+     * (EXT) header can be traversed\n+     *\/\n+    @DataProvider(name = \"zipInfoTimeMap\")\n+    protected Object[][] zipInfoTimeMap() {\n+        return new Object[][]{\n+                {Map.of()},\n+                {Map.of(\"zipinfo-time\", \"False\")},\n+                {Map.of(\"zipinfo-time\", \"true\")},\n+                {Map.of(\"zipinfo-time\", \"false\")}\n+        };\n+    }\n+\n@@ -96,0 +112,1 @@\n+     * @param env Zip FS properties to use when accessing the Zip file\n@@ -98,2 +115,2 @@\n-    @Test\n-    public void walkZipFSTest() throws IOException {\n+    @Test(dataProvider = \"zipInfoTimeMap\")\n+    public void walkZipFSTest(final Map<String, String> env) throws IOException {\n@@ -101,1 +118,1 @@\n-                     FileSystems.newFileSystem(Paths.get(ZIP_FILE_NAME), Map.of(\"zipinfo-time\", \"False\"))) {\n+                     FileSystems.newFileSystem(Paths.get(ZIP_FILE_NAME), env)) {\n","filename":"test\/jdk\/jdk\/nio\/zipfs\/TestLocOffsetFromZip64EF.java","additions":21,"deletions":4,"binary":false,"changes":25,"status":"modified"}]}