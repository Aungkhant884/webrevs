{"files":[{"patch":"@@ -2513,0 +2513,4 @@\n+# 0: message segment\n+compiler.misc.prob.found.req=\\\n+    incompatible types: {0}\n+\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/compiler.properties","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -185,1 +185,5 @@\n-                s = formatMessage(diagnostic, l);\n+                JCDiagnostic rewrittenDiagnostic = null;\n+                if (diagnostic.hasRewriter()) {\n+                    rewrittenDiagnostic = diagnostic.rewrite();\n+                }\n+                s = formatMessage(rewrittenDiagnostic != null? rewrittenDiagnostic : diagnostic, l);\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/util\/AbstractDiagnosticFormatter.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -4,1 +4,1 @@\n-T8012003b.java:33:12: compiler.err.prob.found.req: (compiler.misc.invalid.mref: kindname.method, (compiler.misc.cant.apply.symbol: kindname.method, g, java.lang.String, java.lang.Integer, kindname.class, T8012003b, (compiler.misc.no.conforming.assignment.exists: (compiler.misc.inconvertible.types: java.lang.Integer, java.lang.String))))\n+T8012003b.java:33:12: compiler.err.prob.found.req: (compiler.misc.invalid.mref: kindname.method, (compiler.misc.prob.found.req: (compiler.misc.inconvertible.types: java.lang.Integer, java.lang.String)))\n","filename":"test\/langtools\/tools\/javac\/Diagnostics\/compressed\/T8012003b.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -25,3 +25,1 @@\n-\/\/ key: compiler.misc.kindname.class\n-\/\/ key: compiler.misc.no.conforming.assignment.exists\n-\/\/ key: compiler.misc.cant.apply.symbol\n+\/\/ key: compiler.misc.prob.found.req\n","filename":"test\/langtools\/tools\/javac\/diags\/examples\/ProbFoundReqFragment.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"}]}