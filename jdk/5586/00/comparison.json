{"files":[{"patch":"@@ -4790,5 +4790,1 @@\n-                DiagnosticPosition pos = d.getDiagnosticPosition();\n-                if (pos == null) {\n-                    pos = preferredPos;\n-                }\n-                return diags.create(preferredKind, preferredSource, pos,\n+                return diags.create(preferredKind, preferredSource, preferredPos,\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Resolve.java","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-T8067883.java:15:17: compiler.err.prob.found.req: (compiler.misc.inconvertible.types: java.util.List<java.lang.Integer>, java.util.List<java.lang.String>)\n+T8067883.java:15:9: compiler.err.prob.found.req: (compiler.misc.inconvertible.types: java.util.List<java.lang.Integer>, java.util.List<java.lang.String>)\n@@ -3,1 +3,1 @@\n-T8067883.java:20:25: compiler.err.prob.found.req: (compiler.misc.inconvertible.types: java.util.List<java.lang.Integer>, java.util.List<java.lang.String>)\n+T8067883.java:20:9: compiler.err.prob.found.req: (compiler.misc.inconvertible.types: java.util.List<java.lang.Integer>, java.util.List<java.lang.String>)\n","filename":"test\/langtools\/tools\/javac\/Diagnostics\/compressed\/8067883\/T8067883a.out","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1,3 +1,3 @@\n-T8012003a.java:19:12: compiler.err.prob.found.req: (compiler.misc.inconvertible.types: java.lang.String, java.lang.Integer)\n-T8012003a.java:20:20: compiler.err.prob.found.req: (compiler.misc.incompatible.type.in.conditional: (compiler.misc.inconvertible.types: java.lang.String, java.lang.Integer))\n-T8012003a.java:21:12: compiler.err.prob.found.req: (compiler.misc.inconvertible.types: java.lang.String, java.lang.Integer)\n+T8012003a.java:19:9: compiler.err.prob.found.req: (compiler.misc.inconvertible.types: java.lang.String, java.lang.Integer)\n+T8012003a.java:20:9: compiler.err.prob.found.req: (compiler.misc.incompatible.type.in.conditional: (compiler.misc.inconvertible.types: java.lang.String, java.lang.Integer))\n+T8012003a.java:21:9: compiler.err.prob.found.req: (compiler.misc.inconvertible.types: java.lang.String, java.lang.Integer)\n","filename":"test\/langtools\/tools\/javac\/Diagnostics\/compressed\/T8012003a.out","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1,5 +1,5 @@\n-T8012003b.java:30:12: compiler.err.prob.found.req: (compiler.misc.invalid.mref: kindname.method, (compiler.misc.cant.apply.symbol: kindname.method, g, java.lang.String, compiler.misc.no.args, kindname.class, T8012003b, (compiler.misc.arg.length.mismatch)))\n-T8012003b.java:31:16: compiler.err.prob.found.req: (compiler.misc.stat.expr.expected)\n-T8012003b.java:32:22: compiler.err.prob.found.req: (compiler.misc.incompatible.ret.type.in.lambda: (compiler.misc.conditional.target.cant.be.void))\n-T8012003b.java:33:12: compiler.err.prob.found.req: (compiler.misc.invalid.mref: kindname.method, (compiler.misc.prob.found.req: (compiler.misc.inconvertible.types: java.lang.Integer, java.lang.String)))\n-T8012003b.java:34:12: compiler.err.prob.found.req: (compiler.misc.incompatible.ret.type.in.mref: (compiler.misc.inconvertible.types: java.lang.String, java.lang.Integer))\n+T8012003b.java:30:9: compiler.err.prob.found.req: (compiler.misc.invalid.mref: kindname.method, (compiler.misc.cant.apply.symbol: kindname.method, g, java.lang.String, compiler.misc.no.args, kindname.class, T8012003b, (compiler.misc.arg.length.mismatch)))\n+T8012003b.java:31:9: compiler.err.prob.found.req: (compiler.misc.stat.expr.expected)\n+T8012003b.java:32:9: compiler.err.prob.found.req: (compiler.misc.incompatible.ret.type.in.lambda: (compiler.misc.conditional.target.cant.be.void))\n+T8012003b.java:33:9: compiler.err.prob.found.req: (compiler.misc.invalid.mref: kindname.method, (compiler.misc.prob.found.req: (compiler.misc.inconvertible.types: java.lang.Integer, java.lang.String)))\n+T8012003b.java:34:9: compiler.err.prob.found.req: (compiler.misc.incompatible.ret.type.in.mref: (compiler.misc.inconvertible.types: java.lang.String, java.lang.Integer))\n","filename":"test\/langtools\/tools\/javac\/Diagnostics\/compressed\/T8012003b.out","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -1,2 +1,2 @@\n-T8020286.java:12:13: compiler.err.prob.found.req: (compiler.misc.inconvertible.types: int, java.lang.String)\n-T8020286.java:13:10: compiler.err.prob.found.req: (compiler.misc.inconvertible.types: int, java.lang.String)\n+T8020286.java:12:8: compiler.err.prob.found.req: (compiler.misc.inconvertible.types: int, java.lang.String)\n+T8020286.java:13:8: compiler.err.prob.found.req: (compiler.misc.inconvertible.types: int, java.lang.String)\n","filename":"test\/langtools\/tools\/javac\/Diagnostics\/compressed\/T8020286.out","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-DiagnosticRewriterTest.java:12:15: compiler.err.prob.found.req: (compiler.misc.possible.loss.of.precision: long, int)\n+DiagnosticRewriterTest.java:12:13: compiler.err.prob.found.req: (compiler.misc.possible.loss.of.precision: long, int)\n","filename":"test\/langtools\/tools\/javac\/diags\/DiagnosticRewriterTest.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-DiagnosticRewriterTest2.java:15:15: compiler.err.prob.found.req: (compiler.misc.possible.loss.of.precision: long, int)\n+DiagnosticRewriterTest2.java:15:13: compiler.err.prob.found.req: (compiler.misc.possible.loss.of.precision: long, int)\n","filename":"test\/langtools\/tools\/javac\/diags\/DiagnosticRewriterTest2.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}