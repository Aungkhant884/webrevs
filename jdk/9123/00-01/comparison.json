{"files":[{"patch":"@@ -31,0 +31,1 @@\n+import sun.hotspot.WhiteBox;\n@@ -38,1 +39,4 @@\n- * @run driver VMDeprecatedOptions\n+ * @build sun.hotspot.WhiteBox\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller sun.hotspot.WhiteBox\n+ * @run main\/othervm -Xbootclasspath\/a:. -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI VMDeprecatedOptions\n+\n@@ -42,0 +46,1 @@\n+    private final static WhiteBox wb = WhiteBox.getWhiteBox();\n@@ -60,1 +65,0 @@\n-            { \"FlightRecorder\",           \"false\"},\n@@ -74,4 +78,0 @@\n-    static String getUnrecognizedOptionMessage(String optionName) {\n-        return \"Unrecognized VM option '\" + optionName + \"'\";\n-    }\n-\n@@ -95,7 +95,5 @@\n-        \/\/ Verify ExtendedDTraceProbes option for jdk19\n-        \/\/ if DTRACE_ENABLED is defined, Deprecated VM option\n-        \/\/ if not, Unrecognized VM option\n-        String dtraceOptionNames[] =  { \"ExtendedDTraceProbes\" };\n-        String dtraceEexpectedValues[] = { \"false\" };\n-        output = CommandLineOptionTest.startVMWithOptions(dtraceOptionNames, dTraceEexpectedValues);\n-        try {\n+        Object jfr = wb.getVMFlag(\"FlightRecorder\");\n+        if (jfr != null) {\n+            String jfrOptionNames[] =  { \"FlightRecorder\" };\n+            String jfrEexpectedValues[] = { \"false\" };\n+            output = CommandLineOptionTest.startVMWithOptions(jfrOptionNames, jfrEexpectedValues);\n@@ -103,5 +101,1 @@\n-            String match = getDeprecationString(dtraceOptionNames[0]);\n-            output.shouldMatch(match);\n-        }\n-        catch (RuntimeException e) {\n-            String match = getUnrecognizedOptionMessage(dtraceOptionNames[0]);\n+            String match = getDeprecationString(jfrOptionNames[0]);\n","filename":"test\/hotspot\/jtreg\/runtime\/CommandLine\/VMDeprecatedOptions.java","additions":12,"deletions":18,"binary":false,"changes":30,"status":"modified"}]}