{"files":[{"patch":"@@ -528,1 +528,1 @@\n-    RefProcSubPhasesWorkerTimeTracker tt(ReferenceProcessor::SoftRefSubPhase1, _phase_times, worker_id);\n+    RefProcSubPhasesWorkerTimeTracker tt(ReferenceProcessor::SoftRefSubPhase1, _phase_times, tracker_id(worker_id));\n@@ -566,1 +566,1 @@\n-    RefProcWorkerTimeTracker t(_phase_times->phase2_worker_time_sec(), worker_id);\n+    RefProcWorkerTimeTracker t(_phase_times->phase2_worker_time_sec(), tracker_id(worker_id));\n@@ -568,1 +568,1 @@\n-      RefProcSubPhasesWorkerTimeTracker tt(ReferenceProcessor::SoftRefSubPhase2, _phase_times, worker_id);\n+      RefProcSubPhasesWorkerTimeTracker tt(ReferenceProcessor::SoftRefSubPhase2, _phase_times, tracker_id(worker_id));\n@@ -572,1 +572,1 @@\n-      RefProcSubPhasesWorkerTimeTracker tt(ReferenceProcessor::WeakRefSubPhase2, _phase_times, worker_id);\n+      RefProcSubPhasesWorkerTimeTracker tt(ReferenceProcessor::WeakRefSubPhase2, _phase_times, tracker_id(worker_id));\n@@ -576,1 +576,1 @@\n-      RefProcSubPhasesWorkerTimeTracker tt(ReferenceProcessor::FinalRefSubPhase2, _phase_times, worker_id);\n+      RefProcSubPhasesWorkerTimeTracker tt(ReferenceProcessor::FinalRefSubPhase2, _phase_times, tracker_id(worker_id));\n@@ -597,1 +597,1 @@\n-    RefProcSubPhasesWorkerTimeTracker tt(ReferenceProcessor::FinalRefSubPhase3, _phase_times, worker_id);\n+    RefProcSubPhasesWorkerTimeTracker tt(ReferenceProcessor::FinalRefSubPhase3, _phase_times, tracker_id(worker_id));\n@@ -614,1 +614,1 @@\n-    RefProcSubPhasesWorkerTimeTracker tt(ReferenceProcessor::PhantomRefSubPhase4, _phase_times, worker_id);\n+    RefProcSubPhasesWorkerTimeTracker tt(ReferenceProcessor::PhantomRefSubPhase4, _phase_times, tracker_id(worker_id));\n","filename":"src\/hotspot\/share\/gc\/shared\/referenceProcessor.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -576,0 +576,4 @@\n+  \/\/ Used for tracking how much time a worker spends in a (sub)phase.\n+  uint tracker_id(uint worker_id) const {\n+    return _ref_processor.processing_is_mt() ? worker_id : 0;\n+  }\n","filename":"src\/hotspot\/share\/gc\/shared\/referenceProcessor.hpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -101,1 +101,1 @@\n-  _worker_time->set(_worker_id, result);\n+  _worker_time->set_or_add(_worker_id, result);\n","filename":"src\/hotspot\/share\/gc\/shared\/referenceProcessorPhaseTimes.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -70,0 +70,1 @@\n+  void set_or_add(uint worker_i, T value);\n","filename":"src\/hotspot\/share\/gc\/shared\/workerDataArray.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -56,0 +56,10 @@\n+template <typename T>\n+void WorkerDataArray<T>::set_or_add(uint worker_i, T value) {\n+  assert(worker_i < _length, \"Worker %d is greater than max: %d\", worker_i, _length);\n+  if (_data[worker_i] == uninitialized()) {\n+    _data[worker_i] = value;\n+  } else {\n+    _data[worker_i] += value;\n+  }\n+}\n+\n","filename":"src\/hotspot\/share\/gc\/shared\/workerDataArray.inline.hpp","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"}]}