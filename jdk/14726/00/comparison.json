{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,0 +31,1 @@\n+import java.util.Objects;\n@@ -589,0 +590,1 @@\n+    @Override\n@@ -593,8 +595,2 @@\n-        if (this.name != null ) {\n-            if (!this.name.equals(that.name)) {\n-                return false;\n-            }\n-        } else {\n-            if (that.name != null) {\n-                return false;\n-            }\n+        if (!Objects.equals(this.name, that.name)) {\n+            return false;\n@@ -615,4 +611,1 @@\n-        InetAddress[] thatAddrs = that.addrs;\n-        int count = thatAddrs.length;\n-\n-        for (int i=0; i<count; i++) {\n+        for (InetAddress thisAddr : this.addrs) {\n@@ -620,2 +613,2 @@\n-            for (int j=0; j<count; j++) {\n-                if (addrs[i].equals(thatAddrs[j])) {\n+            for (InetAddress thatAddr : that.addrs) {\n+                if (thisAddr.equals(thatAddr)) {\n@@ -633,0 +626,1 @@\n+    @Override\n@@ -634,1 +628,1 @@\n-        return name == null? 0: name.hashCode();\n+        return Objects.hashCode(name);\n","filename":"src\/java.base\/share\/classes\/java\/net\/NetworkInterface.java","additions":10,"deletions":16,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,2 @@\n+import java.util.Objects;\n+\n@@ -148,0 +150,1 @@\n+    @Override\n@@ -152,4 +155,1 @@\n-            if (address() == null) {\n-                return (p.address() == null);\n-            } else\n-                return address().equals(p.address());\n+            return Objects.equals(address(), p.address());\n@@ -161,3 +161,1 @@\n-     * Returns a hashcode for this Proxy.\n-     *\n-     * @return  a hash code value for this Proxy.\n+     * {@return a hash code value for this Proxy}\n@@ -165,0 +163,1 @@\n+    @Override\n","filename":"src\/java.base\/share\/classes\/java\/net\/Proxy.java","additions":7,"deletions":8,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,0 +35,1 @@\n+import java.util.Objects;\n@@ -379,0 +380,1 @@\n+    @Override\n@@ -392,5 +394,1 @@\n-        if (this.path != null) {\n-            return this.path.equals(that.path);\n-        } else {\n-            return that.path == null;\n-        }\n+        return Objects.equals(this.path, that.path);\n@@ -403,0 +401,1 @@\n+    @Override\n@@ -407,1 +406,1 @@\n-            + (path == null ? 0 : path.hashCode());\n+            + Objects.hashCode(path);\n","filename":"src\/java.base\/share\/classes\/java\/net\/URLPermission.java","additions":6,"deletions":7,"binary":false,"changes":13,"status":"modified"}]}