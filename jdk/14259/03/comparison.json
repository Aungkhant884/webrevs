{"files":[{"patch":"@@ -232,1 +232,1 @@\n-    FLAG_SET_ERGO(GCDrainStackTargetSize, MIN2(GCDrainStackTargetSize, (uintx)TASKQUEUE_SIZE \/ 4));\n+    FLAG_SET_ERGO(GCDrainStackTargetSize, MIN2(GCDrainStackTargetSize, TASKQUEUE_SIZE \/ 4));\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Arguments.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2311,1 +2311,1 @@\n-    target_size = MIN2((size_t)_task_queue->max_elems()\/3, (size_t)GCDrainStackTargetSize);\n+    target_size = MIN2((size_t)_task_queue->max_elems()\/3, GCDrainStackTargetSize);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentMark.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -45,1 +45,1 @@\n-JVMFlag::Error InitialTenuringThresholdConstraintFuncParallel(uintx value, bool verbose) {\n+JVMFlag::Error InitialTenuringThresholdConstraintFuncParallel(uint value, bool verbose) {\n@@ -49,2 +49,2 @@\n-                          \"InitialTenuringThreshold (\" UINTX_FORMAT \") must be \"\n-                          \"less than or equal to MaxTenuringThreshold (\" UINTX_FORMAT \")\\n\",\n+                          \"InitialTenuringThreshold (%u) must be \"\n+                          \"less than or equal to MaxTenuringThreshold (%u)\\n\",\n@@ -57,1 +57,1 @@\n-JVMFlag::Error MaxTenuringThresholdConstraintFuncParallel(uintx value, bool verbose) {\n+JVMFlag::Error MaxTenuringThresholdConstraintFuncParallel(uint value, bool verbose) {\n@@ -62,2 +62,2 @@\n-                        \"MaxTenuringThreshold (\" UINTX_FORMAT \") must be \"\n-                        \"greater than or equal to InitialTenuringThreshold (\" UINTX_FORMAT \")\\n\",\n+                        \"MaxTenuringThreshold (%u) must be \"\n+                        \"greater than or equal to InitialTenuringThreshold (%u)\\n\",\n","filename":"src\/hotspot\/share\/gc\/parallel\/jvmFlagConstraintsParallel.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -34,2 +34,2 @@\n-  f(uintx, InitialTenuringThresholdConstraintFuncParallel)  \\\n-  f(uintx, MaxTenuringThresholdConstraintFuncParallel)\n+  f(uint, InitialTenuringThresholdConstraintFuncParallel)   \\\n+  f(uint, MaxTenuringThresholdConstraintFuncParallel)\n","filename":"src\/hotspot\/share\/gc\/parallel\/jvmFlagConstraintsParallel.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -352,1 +352,1 @@\n-          \" GCTimeLimit: \" UINTX_FORMAT,\n+          \" GCTimeLimit: %u\",\n@@ -529,1 +529,1 @@\n-          \" GCTimeLimit: \" UINTX_FORMAT,\n+          \" GCTimeLimit: %u\",\n","filename":"src\/hotspot\/share\/gc\/parallel\/psAdaptiveSizePolicy.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -556,1 +556,1 @@\n-       log_debug(gc, age)(\"Desired survivor size \" SIZE_FORMAT \" bytes, new threshold %u (max threshold \" UINTX_FORMAT \")\",\n+       log_debug(gc, age)(\"Desired survivor size %zu bytes, new threshold %u (max threshold %u)\",\n","filename":"src\/hotspot\/share\/gc\/parallel\/psScavenge.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -85,1 +85,1 @@\n-           \"MaxTenuringThreshold should be 0 or markWord::max_age + 1, but is \" UINTX_FORMAT, MaxTenuringThreshold);\n+           \"MaxTenuringThreshold should be 0 or markWord::max_age + 1, but is %u\", MaxTenuringThreshold);\n@@ -102,1 +102,1 @@\n-  log_debug(gc, age)(\"Desired survivor size \" SIZE_FORMAT \" bytes, new threshold \" UINTX_FORMAT \" (max threshold \" UINTX_FORMAT \")\",\n+  log_debug(gc, age)(\"Desired survivor size %zu bytes, new threshold \" UINTX_FORMAT \" (max threshold %u)\",\n@@ -117,1 +117,1 @@\n-  st->print_cr(\"Age table with threshold %u (max threshold \" UINTX_FORMAT \")\",\n+  st->print_cr(\"Age table with threshold %u (max threshold %u)\",\n","filename":"src\/hotspot\/share\/gc\/shared\/ageTable.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -94,1 +94,1 @@\n-      log_trace(gc, ergo)(\"GC is exceeding overhead limit of \" UINTX_FORMAT \"%%\", GCTimeLimit);\n+      log_trace(gc, ergo)(\"GC is exceeding overhead limit of %u%%\", GCTimeLimit);\n@@ -98,1 +98,1 @@\n-      log_trace(gc, ergo)(\"GC would exceed overhead limit of \" UINTX_FORMAT \"%% %d consecutive time(s)\",\n+      log_trace(gc, ergo)(\"GC would exceed overhead limit of %u%% %d consecutive time(s)\",\n","filename":"src\/hotspot\/share\/gc\/shared\/gcOverheadChecker.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -169,1 +169,1 @@\n-  product(uintx, GCLockerEdenExpansionPercent, 5,                           \\\n+  product(uint, GCLockerEdenExpansionPercent, 5,                            \\\n@@ -179,1 +179,1 @@\n-  product(uintx, ParallelGCBufferWastePct, 10,                              \\\n+  product(uint, ParallelGCBufferWastePct, 10,                               \\\n@@ -183,1 +183,1 @@\n-  product(uintx, TargetPLABWastePct, 10,                                    \\\n+  product(uint, TargetPLABWastePct, 10,                                     \\\n@@ -188,1 +188,1 @@\n-  product(uintx, PLABWeight, 75,                                            \\\n+  product(uint, PLABWeight, 75,                                             \\\n@@ -199,1 +199,1 @@\n-          range(1, max_jint\/3)                                              \\\n+          range(1, INT_MAX\/3)                                               \\\n@@ -215,1 +215,1 @@\n-          range(1, (max_jint - 1))                                          \\\n+          range(1, (INT_MAX - 1))                                          \\\n@@ -220,1 +220,1 @@\n-          range(1, (max_jint - 1))                                          \\\n+          range(1, (INT_MAX - 1))                                          \\\n@@ -234,1 +234,1 @@\n-  product(uintx, InitiatingHeapOccupancyPercent, 45,                        \\\n+  product(uint, InitiatingHeapOccupancyPercent, 45,                         \\\n@@ -367,1 +367,1 @@\n-  product(uintx, AdaptiveSizeThroughPutPolicy, 0,                           \\\n+  product(uint, AdaptiveSizeThroughPutPolicy, 0,                            \\\n@@ -385,1 +385,1 @@\n-  product(uintx, AdaptiveSizePolicyWeight, 10,                              \\\n+  product(uint, AdaptiveSizePolicyWeight, 10,                               \\\n@@ -389,1 +389,1 @@\n-  product(uintx, AdaptiveTimeWeight,       25,                              \\\n+  product(uint, AdaptiveTimeWeight,       25,                               \\\n@@ -393,1 +393,1 @@\n-  product(uintx, PausePadding, 1,                                           \\\n+  product(uint, PausePadding, 1,                                            \\\n@@ -395,1 +395,1 @@\n-          range(0, max_juint)                                               \\\n+          range(0, UINT_MAX)                                                \\\n@@ -397,1 +397,1 @@\n-  product(uintx, PromotedPadding, 3,                                        \\\n+  product(uint, PromotedPadding, 3,                                         \\\n@@ -399,1 +399,1 @@\n-          range(0, max_juint)                                               \\\n+          range(0, UINT_MAX)                                                \\\n@@ -401,1 +401,1 @@\n-  product(uintx, SurvivorPadding, 3,                                        \\\n+  product(uint, SurvivorPadding, 3,                                         \\\n@@ -403,1 +403,1 @@\n-          range(0, max_juint)                                               \\\n+          range(0, UINT_MAX)                                                \\\n@@ -405,1 +405,1 @@\n-  product(uintx, ThresholdTolerance, 10,                                    \\\n+  product(uint, ThresholdTolerance, 10,                                     \\\n@@ -409,1 +409,1 @@\n-  product(uintx, AdaptiveSizePolicyCollectionCostMargin, 50,                \\\n+  product(uint, AdaptiveSizePolicyCollectionCostMargin, 50,                 \\\n@@ -414,1 +414,1 @@\n-  product(uintx, YoungGenerationSizeIncrement, 20,                          \\\n+  product(uint, YoungGenerationSizeIncrement, 20,                           \\\n@@ -418,1 +418,1 @@\n-  product(uintx, YoungGenerationSizeSupplement, 80,                         \\\n+  product(uint, YoungGenerationSizeSupplement, 80,                          \\\n@@ -426,1 +426,1 @@\n-  product(uintx, TenuredGenerationSizeIncrement, 20,                        \\\n+  product(uint, TenuredGenerationSizeIncrement, 20,                         \\\n@@ -430,1 +430,1 @@\n-  product(uintx, TenuredGenerationSizeSupplement, 80,                       \\\n+  product(uint, TenuredGenerationSizeSupplement, 80,                        \\\n@@ -453,1 +453,1 @@\n-  product(uintx, GCTimeRatio, 99,                                           \\\n+  product(uint, GCTimeRatio, 99,                                            \\\n@@ -455,1 +455,1 @@\n-          range(0, max_juint)                                               \\\n+          range(0, UINT_MAX)                                                \\\n@@ -484,1 +484,1 @@\n-  product(uintx, GCTimeLimit, 98,                                           \\\n+  product(uint, GCTimeLimit, 98,                                            \\\n@@ -489,1 +489,1 @@\n-  product(uintx, GCHeapFreeLimit, 2,                                        \\\n+  product(uint, GCHeapFreeLimit, 2,                                         \\\n@@ -570,1 +570,1 @@\n-  notproduct(intx, ScavengeALotInterval,     1,                             \\\n+  notproduct(int, ScavengeALotInterval,     1,                              \\\n@@ -573,1 +573,1 @@\n-  notproduct(intx, FullGCALotInterval,     1,                               \\\n+  notproduct(int, FullGCALotInterval,     1,                                \\\n@@ -576,1 +576,1 @@\n-  notproduct(intx, FullGCALotStart,     0,                                  \\\n+  notproduct(int, FullGCALotStart,     0,                                   \\\n@@ -579,1 +579,1 @@\n-  notproduct(intx, FullGCALotDummies,  32*K,                                \\\n+  notproduct(int, FullGCALotDummies,  32*K,                                 \\\n@@ -645,1 +645,1 @@\n-  product(intx, VerifyGCLevel,     0, DIAGNOSTIC,                           \\\n+  product(int, VerifyGCLevel,     0, DIAGNOSTIC,                            \\\n@@ -649,1 +649,1 @@\n-  product(uintx, MaxTenuringThreshold,    15,                               \\\n+  product(uint, MaxTenuringThreshold,    15,                                \\\n@@ -654,1 +654,1 @@\n-  product(uintx, InitialTenuringThreshold,    7,                            \\\n+  product(uint, InitialTenuringThreshold,    7,                             \\\n@@ -659,1 +659,1 @@\n-  product(uintx, TargetSurvivorRatio,    50,                                \\\n+  product(uint, TargetSurvivorRatio,    50,                                 \\\n@@ -663,1 +663,1 @@\n-  product(uintx, MarkSweepDeadRatio,     5,                                 \\\n+  product(uint, MarkSweepDeadRatio,     5,                                  \\\n@@ -680,1 +680,1 @@\n-          range(1, max_juint)                                               \\\n+          range(1, UINT_MAX)                                                \\\n","filename":"src\/hotspot\/share\/gc\/shared\/gc_globals.hpp","additions":37,"deletions":37,"binary":false,"changes":74,"status":"modified"},{"patch":"@@ -442,1 +442,0 @@\n-\n@@ -1079,1 +1078,1 @@\n-#define TASKQUEUE_SIZE (NOT_LP64(1<<14) LP64_ONLY(1<<17))\n+const size_t TASKQUEUE_SIZE = (NOT_LP64(1<<14) LP64_ONLY(1<<17));\n","filename":"src\/hotspot\/share\/utilities\/globalDefinitions.hpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"}]}