{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,0 @@\n-import java.nio.charset.Charset;\n@@ -82,2 +81,1 @@\n-        for (String line : Files.readAllLines(Paths.get(filename),\n-                                              Charset.forName(\"UTF-8\"))) {\n+        for (String line : Files.readAllLines(Paths.get(filename))) {\n","filename":"make\/jdk\/src\/classes\/build\/tools\/generatelsrequivmaps\/EquivMapsGenerator.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -75,0 +75,2 @@\n+import static java.nio.charset.StandardCharsets.UTF_16;\n+\n@@ -592,1 +594,1 @@\n-              fileText = new String( byteData, \"UTF-16\" );\n+              fileText = new String(byteData, UTF_16);\n@@ -650,1 +652,1 @@\n-            byte[] toBeWritten = completeOptions.getBytes( \"UTF-16\" );\n+            byte[] toBeWritten = completeOptions.getBytes(UTF_16);\n@@ -715,1 +717,1 @@\n-            String options = new String( byteData, \"UTF-16\" );\n+            String options = new String(byteData, UTF_16);\n","filename":"src\/demo\/share\/jfc\/Font2DTest\/Font2DTest.java","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -83,0 +83,1 @@\n+import static java.nio.charset.StandardCharsets.ISO_8859_1;\n@@ -646,1 +647,1 @@\n-                    byte[] lineBytes = line.getBytes( \"ISO-8859-1\" );\n+                    byte[] lineBytes = line.getBytes(ISO_8859_1);\n","filename":"src\/demo\/share\/jfc\/Font2DTest\/FontPanel.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,2 +2,1 @@\n- *\n- * Copyright (c) 2007, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,0 +48,2 @@\n+import static java.nio.charset.StandardCharsets.UTF_8;\n+\n@@ -158,1 +159,1 @@\n-                isr = new InputStreamReader(is, \"UTF-8\");\n+                isr = new InputStreamReader(is, UTF_8);\n","filename":"src\/demo\/share\/jfc\/SwingSet2\/DemoModule.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,2 +2,1 @@\n- *\n- * Copyright (c) 2007, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,0 +46,2 @@\n+import static java.nio.charset.StandardCharsets.UTF_8;\n+\n@@ -87,1 +88,1 @@\n-            InputStreamReader isr = new InputStreamReader(is, \"UTF-8\");\n+            InputStreamReader isr = new InputStreamReader(is, UTF_8);\n","filename":"src\/demo\/share\/jfc\/SwingSet2\/TreeDemo.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -40,1 +40,4 @@\n-import static java.nio.charset.StandardCharsets.*;\n+import static java.nio.charset.StandardCharsets.ISO_8859_1;\n+import static java.nio.charset.StandardCharsets.US_ASCII;\n+import static java.nio.charset.StandardCharsets.UTF_16BE;\n+import static java.nio.charset.StandardCharsets.UTF_8;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/DerOutputStream.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -37,1 +37,4 @@\n-import static java.nio.charset.StandardCharsets.*;\n+import static java.nio.charset.StandardCharsets.ISO_8859_1;\n+import static java.nio.charset.StandardCharsets.US_ASCII;\n+import static java.nio.charset.StandardCharsets.UTF_16BE;\n+import static java.nio.charset.StandardCharsets.UTF_8;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/DerValue.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,0 +54,7 @@\n+import static java.nio.charset.StandardCharsets.ISO_8859_1;\n+import static java.nio.charset.StandardCharsets.US_ASCII;\n+import static java.nio.charset.StandardCharsets.UTF_16;\n+import static java.nio.charset.StandardCharsets.UTF_16BE;\n+import static java.nio.charset.StandardCharsets.UTF_16LE;\n+import static java.nio.charset.StandardCharsets.UTF_8;\n+\n@@ -118,6 +125,6 @@\n-            tempSet.add(\"US-ASCII\");\n-            tempSet.add(\"ISO-8859-1\");\n-            tempSet.add(\"UTF-8\");\n-            tempSet.add(\"UTF-16BE\");\n-            tempSet.add(\"UTF-16LE\");\n-            tempSet.add(\"UTF-16\");\n+            tempSet.add(US_ASCII.name());\n+            tempSet.add(ISO_8859_1.name());\n+            tempSet.add(UTF_8.name());\n+            tempSet.add(UTF_16BE.name());\n+            tempSet.add(UTF_16LE.name());\n+            tempSet.add(UTF_16.name());\n@@ -321,4 +328,4 @@\n-            charsetsMap.put(canonicalName(\"UTF-16LE\"), 4);\n-            charsetsMap.put(canonicalName(\"UTF-16BE\"), 5);\n-            charsetsMap.put(canonicalName(\"UTF-8\"), 6);\n-            charsetsMap.put(canonicalName(\"UTF-16\"), 7);\n+            charsetsMap.put(UTF_16LE.name(), 4);\n+            charsetsMap.put(UTF_16BE.name(), 5);\n+            charsetsMap.put(UTF_8.name(), 6);\n+            charsetsMap.put(UTF_16.name(), 7);\n@@ -327,1 +334,1 @@\n-            charsetsMap.put(canonicalName(\"US-ASCII\"), WORST_CHARSET_INDEX);\n+            charsetsMap.put(US_ASCII.name(), WORST_CHARSET_INDEX);\n","filename":"src\/java.datatransfer\/share\/classes\/sun\/datatransfer\/DataFlavorUtil.java","additions":19,"deletions":12,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,0 +30,1 @@\n+\n@@ -31,2 +32,2 @@\n-import sun.font.CompositeFontDescriptor;\n-import sun.font.SunFontManager;\n+\n+import static java.nio.charset.StandardCharsets.ISO_8859_1;\n@@ -82,1 +83,1 @@\n-        return Charset.forName(\"ISO8859_1\");\n+        return ISO_8859_1;\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/font\/CFontConfiguration.java","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -45,0 +45,1 @@\n+import java.nio.charset.Charset;\n@@ -219,1 +220,1 @@\n-    private String readNullTerminatedString(String charset, int maxLen) throws IOException {\n+    private String readNullTerminatedString(Charset charset, int maxLen) throws IOException {\n@@ -441,1 +442,1 @@\n-        String keyword = readNullTerminatedString(\"ISO-8859-1\", 80);\n+        String keyword = readNullTerminatedString(ISO_8859_1, 80);\n@@ -461,1 +462,1 @@\n-        String keyword = readNullTerminatedString(\"ISO-8859-1\", 80);\n+        String keyword = readNullTerminatedString(ISO_8859_1, 80);\n@@ -472,1 +473,1 @@\n-        String languageTag = readNullTerminatedString(\"UTF8\", remainingLen);\n+        String languageTag = readNullTerminatedString(UTF_8, remainingLen);\n@@ -481,1 +482,1 @@\n-            readNullTerminatedString(\"UTF8\", remainingLen);\n+            readNullTerminatedString(UTF_8, remainingLen);\n@@ -541,1 +542,1 @@\n-        metadata.sPLT_paletteName = readNullTerminatedString(\"ISO-8859-1\", 80);\n+        metadata.sPLT_paletteName = readNullTerminatedString(ISO_8859_1, 80);\n@@ -588,1 +589,1 @@\n-        String keyword = readNullTerminatedString(\"ISO-8859-1\", 80);\n+        String keyword = readNullTerminatedString(ISO_8859_1, 80);\n@@ -686,1 +687,1 @@\n-        String keyword = readNullTerminatedString(\"ISO-8859-1\", 80);\n+        String keyword = readNullTerminatedString(ISO_8859_1, 80);\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/imageio\/plugins\/png\/PNGImageReader.java","additions":9,"deletions":8,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -161,1 +161,1 @@\n-        return Charset.forName(\"ISO8859_1\");\n+        return ISO_8859_1;\n","filename":"src\/java.desktop\/unix\/classes\/sun\/font\/FcFontConfiguration.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,0 +42,2 @@\n+import static java.nio.charset.StandardCharsets.ISO_8859_1;\n+\n@@ -183,1 +185,1 @@\n-        return Charset.forName(\"ISO8859_1\");\n+        return ISO_8859_1;\n","filename":"src\/java.desktop\/unix\/classes\/sun\/font\/MFontConfiguration.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -37,1 +37,2 @@\n-import static java.nio.charset.StandardCharsets.*;\n+import static java.nio.charset.StandardCharsets.ISO_8859_1;\n+import static java.nio.charset.StandardCharsets.UTF_8;\n","filename":"src\/java.security.jgss\/share\/classes\/sun\/security\/krb5\/internal\/PAData.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -39,1 +39,0 @@\n-import java.nio.charset.Charset;\n@@ -47,1 +46,2 @@\n-import static java.nio.charset.StandardCharsets.*;\n+import static java.nio.charset.StandardCharsets.UTF_16LE;\n+import static java.nio.charset.StandardCharsets.UTF_8;\n","filename":"src\/java.security.jgss\/share\/classes\/sun\/security\/krb5\/internal\/crypto\/dk\/DkCrypto.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -32,1 +32,2 @@\n-import static java.nio.charset.StandardCharsets.*;\n+import static java.nio.charset.StandardCharsets.US_ASCII;\n+import static java.nio.charset.StandardCharsets.UTF_8;\n","filename":"src\/java.security.jgss\/share\/classes\/sun\/security\/krb5\/internal\/util\/KerberosString.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -44,1 +44,2 @@\n-import static java.nio.charset.StandardCharsets.*;\n+import static java.nio.charset.StandardCharsets.ISO_8859_1;\n+import static java.nio.charset.StandardCharsets.UTF_8;\n","filename":"src\/java.security.sasl\/share\/classes\/com\/sun\/security\/sasl\/digest\/DigestMD5Base.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -42,1 +42,2 @@\n-import static java.nio.charset.StandardCharsets.*;\n+import static java.nio.charset.StandardCharsets.ISO_8859_1;\n+import static java.nio.charset.StandardCharsets.UTF_8;\n","filename":"src\/java.security.sasl\/share\/classes\/com\/sun\/security\/sasl\/digest\/DigestMD5Server.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -37,0 +37,2 @@\n+import static java.nio.charset.StandardCharsets.UTF_8;\n+\n@@ -293,6 +295,1 @@\n-            byte b[];\n-            try {\n-                b = s.getBytes(\"UTF-8\");\n-            } catch (java.io.UnsupportedEncodingException x) {\n-                throw new InternalError(x);\n-            }\n+            byte[] b = s.getBytes(UTF_8);\n","filename":"src\/jdk.attach\/aix\/classes\/sun\/tools\/attach\/VirtualMachineImpl.java","additions":3,"deletions":6,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -35,1 +35,0 @@\n-import java.nio.charset.StandardCharsets;\n@@ -40,0 +39,2 @@\n+import static java.nio.charset.StandardCharsets.UTF_8;\n+\n@@ -318,6 +319,1 @@\n-            byte b[];\n-            try {\n-                b = s.getBytes(\"UTF-8\");\n-            } catch (java.io.UnsupportedEncodingException x) {\n-                throw new InternalError(x);\n-            }\n+            byte[] b = s.getBytes(UTF_8);\n@@ -346,1 +342,1 @@\n-            for (String line : Files.readAllLines(statusPath, StandardCharsets.UTF_8)) {\n+            for (String line : Files.readAllLines(statusPath)) {\n","filename":"src\/jdk.attach\/linux\/classes\/sun\/tools\/attach\/VirtualMachineImpl.java","additions":4,"deletions":8,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,0 +36,2 @@\n+import static java.nio.charset.StandardCharsets.UTF_8;\n+\n@@ -277,6 +279,1 @@\n-            byte b[];\n-            try {\n-                b = s.getBytes(\"UTF-8\");\n-            } catch (java.io.UnsupportedEncodingException x) {\n-                throw new InternalError(x);\n-            }\n+            byte[] b = s.getBytes(UTF_8);\n","filename":"src\/jdk.attach\/macosx\/classes\/sun\/tools\/attach\/VirtualMachineImpl.java","additions":4,"deletions":7,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -85,0 +85,1 @@\n+import static java.nio.charset.StandardCharsets.US_ASCII;\n@@ -284,7 +285,2 @@\n-        String message;\n-        try {\n-            final String ascii = \"US-ASCII\";\n-            message = new String(String.format(null, format, args).getBytes(ascii), ascii);\n-        } catch (java.io.UnsupportedEncodingException ex) {\n-            throw new AssertionError(ex);\n-        }\n+        String message = new String(\n+                String.format(null, format, args).getBytes(US_ASCII), US_ASCII);\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/file\/JavacFileManager.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-import java.nio.charset.Charset;\n@@ -75,0 +74,2 @@\n+import static java.nio.charset.StandardCharsets.UTF_8;\n+\n@@ -265,1 +266,0 @@\n-                    Charset utf8 = Charset.forName(\"UTF-8\");\n@@ -291,1 +291,1 @@\n-                                Files.lines(systemModules, utf8)) {\n+                                Files.lines(systemModules, UTF_8)) {\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/platform\/JDKPlatformProvider.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2006, 2012, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2006, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,0 +36,2 @@\n+import static java.nio.charset.StandardCharsets.UTF_8;\n+\n@@ -89,1 +91,1 @@\n-            r = new BufferedReader(new InputStreamReader(in, \"utf-8\"));\n+            r = new BufferedReader(new InputStreamReader(in, UTF_8));\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/processing\/ServiceProxy.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,0 @@\n-import java.nio.charset.StandardCharsets;\n@@ -82,1 +81,1 @@\n-            List<String> configFileLines = Files.readAllLines(Path.of(configFile), StandardCharsets.UTF_8);\n+            List<String> configFileLines = Files.readAllLines(Path.of(configFile));\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/sjavac\/client\/SjavacClient.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2001, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,2 @@\n+import static java.nio.charset.StandardCharsets.US_ASCII;\n+\n@@ -155,6 +157,1 @@\n-    try {\n-      return new String(b, \"US-ASCII\");\n-    }\n-    catch (UnsupportedEncodingException e) {\n-      throw new IOException(e.toString());\n-    }\n+    return new String(b, US_ASCII);\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/debugger\/InputLexer.java","additions":4,"deletions":7,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,1 +35,0 @@\n-    private static final String US_ASCII = \"US-ASCII\";\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/debugger\/posix\/elf\/ELFFileParser.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,0 +37,2 @@\n+import static java.nio.charset.StandardCharsets.US_ASCII;\n+\n@@ -52,2 +54,0 @@\n-  private static final String US_ASCII = \"US-ASCII\";\n-\n@@ -1198,5 +1198,1 @@\n-                  try {\n-                    return new String(res, US_ASCII);\n-                  } catch (UnsupportedEncodingException e) {\n-                    throw new COFFException(e);\n-                  }\n+                  return new String(res, US_ASCII);\n@@ -3339,5 +3335,1 @@\n-          try {\n-            return new String(res, US_ASCII);\n-          } catch (UnsupportedEncodingException e) {\n-            throw new COFFException(e);\n-          }\n+          return new String(res, US_ASCII);\n@@ -3388,2 +3380,0 @@\n-            } catch (UnsupportedEncodingException e) {\n-              throw new COFFException(e);\n@@ -3395,10 +3385,4 @@\n-            try {\n-              int length = 0;\n-              \/\/ find last non-NULL\n-              for (; length < tmpName.length && tmpName[length] != '\\0';) {\n-                length++;\n-              }\n-              \/\/ don't include NULL chars in returned name String\n-              name = new String(tmpName, 0, length, US_ASCII);\n-            } catch (UnsupportedEncodingException e) {\n-              throw new COFFException(e);\n+            int length = 0;\n+            \/\/ find last non-NULL\n+            for (; length < tmpName.length && tmpName[length] != '\\0';) {\n+              length++;\n@@ -3406,0 +3390,2 @@\n+            \/\/ don't include NULL chars in returned name String\n+            name = new String(tmpName, 0, length, US_ASCII);\n@@ -3639,5 +3625,1 @@\n-          try {\n-            name = new String(tmpName, US_ASCII);\n-          } catch (UnsupportedEncodingException e) {\n-            throw new COFFException(e);\n-          }\n+          name = new String(tmpName, US_ASCII);\n@@ -3754,6 +3736,2 @@\n-            try {\n-              strings[i] = new COFFString(new String(data, lastPtr, ptr - lastPtr, US_ASCII),\n-                                          offset + ptr + 4);\n-            } catch (UnsupportedEncodingException e) {\n-              throw new COFFException(e);\n-            }\n+            strings[i] = new COFFString(new String(data, lastPtr, ptr - lastPtr, US_ASCII),\n+                                        offset + ptr + 4);\n@@ -3913,5 +3891,1 @@\n-      try {\n-        return new String(bytes, US_ASCII);\n-      } catch (UnsupportedEncodingException e) {\n-        throw new COFFException(e);\n-      }\n+      return new String(bytes, US_ASCII);\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/debugger\/win32\/coff\/COFFFileParser.java","additions":15,"deletions":41,"binary":false,"changes":56,"status":"modified"},{"patch":"@@ -40,0 +40,2 @@\n+import static java.nio.charset.StandardCharsets.UTF_8;\n+\n@@ -1131,1 +1133,1 @@\n-              byte[] buf = sym.asString().getBytes(\"UTF-8\");\n+              byte[] buf = sym.asString().getBytes(UTF_8);\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/utilities\/HeapHprofBinWriter.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -41,0 +41,2 @@\n+import static java.nio.charset.StandardCharsets.ISO_8859_1;\n+\n@@ -762,1 +764,1 @@\n-                byte[] b = s.getBytes(\"ISO8859_1\");\n+                byte[] b = s.getBytes(ISO_8859_1);\n","filename":"src\/jdk.httpserver\/share\/classes\/sun\/net\/httpserver\/ServerImpl.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,0 @@\n-import java.nio.charset.Charset;\n@@ -44,0 +43,2 @@\n+\n+import static java.nio.charset.StandardCharsets.UTF_8;\n@@ -123,1 +124,1 @@\n-        Files.write(tmpfile, initialText.getBytes(Charset.forName(\"UTF-8\")));\n+        Files.write(tmpfile, initialText.getBytes(UTF_8));\n","filename":"src\/jdk.internal.ed\/share\/classes\/jdk\/internal\/editor\/external\/ExternalEditor.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,1 +34,0 @@\n-import java.nio.charset.*;\n@@ -209,1 +208,1 @@\n-            for (String line : Files.readAllLines(statusPath, StandardCharsets.UTF_8)) {\n+            for (String line : Files.readAllLines(statusPath)) {\n","filename":"src\/jdk.internal.jvmstat\/linux\/classes\/sun\/jvmstat\/PlatformSupportImpl.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -41,0 +41,2 @@\n+import static java.nio.charset.StandardCharsets.UTF_8;\n+\n@@ -289,2 +291,2 @@\n-                    byte[] utf8Name = name.getBytes(\"UTF-8\");\n-                    byte[] utf8Value = value.getBytes(\"UTF-8\");\n+                    byte[] utf8Name = name.getBytes(UTF_8);\n+                    byte[] utf8Value = value.getBytes(UTF_8);\n@@ -332,2 +334,2 @@\n-                String name = new String(nameBytes, \"UTF-8\");\n-                String value = new String(valueBytes, \"UTF-8\");\n+                String name = new String(nameBytes, UTF_8);\n+                String value = new String(valueBytes, UTF_8);\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk.vm.ci.services\/src\/jdk\/vm\/ci\/services\/Services.java","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,0 +35,2 @@\n+import static java.nio.charset.StandardCharsets.UTF_8;\n+\n@@ -50,1 +52,1 @@\n-             InputStreamReader isr = new InputStreamReader(bis, \"UTF-8\")) {\n+             InputStreamReader isr = new InputStreamReader(bis, UTF_8)) {\n","filename":"src\/jdk.jcmd\/share\/classes\/sun\/tools\/common\/PrintStreamPrinter.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-import java.io.UnsupportedEncodingException;\n@@ -40,0 +39,2 @@\n+import static java.nio.charset.StandardCharsets.UTF_8;\n+\n@@ -126,2 +127,1 @@\n-        throws AttachNotSupportedException, IOException,\n-               UnsupportedEncodingException {\n+        throws AttachNotSupportedException, IOException {\n@@ -140,1 +140,1 @@\n-                  String s = new String(b, 0, n, \"UTF-8\");\n+                  String s = new String(b, 0, n, UTF_8);\n@@ -168,2 +168,1 @@\n-        throws AttachNotSupportedException, IOException,\n-               UnsupportedEncodingException {\n+        throws AttachNotSupportedException, IOException {\n@@ -206,2 +205,1 @@\n-        throws AttachNotSupportedException, IOException,\n-               UnsupportedEncodingException {\n+        throws AttachNotSupportedException, IOException {\n","filename":"src\/jdk.jcmd\/share\/classes\/sun\/tools\/jmap\/JMap.java","additions":6,"deletions":8,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,2 @@\n-import java.nio.charset.Charset;\n+\n+import static java.nio.charset.StandardCharsets.UTF_8;\n@@ -42,1 +43,0 @@\n-    private static final Charset UTF8 = Charset.forName(\"UTF-8\");\n@@ -61,1 +61,1 @@\n-        return new String(debug_extension, UTF8);\n+        return new String(debug_extension, UTF_8);\n","filename":"src\/jdk.jdeps\/share\/classes\/com\/sun\/tools\/classfile\/SourceDebugExtension_attribute.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,0 +50,2 @@\n+import static java.nio.charset.StandardCharsets.UTF_8;\n+\n@@ -192,7 +194,3 @@\n-        try {\n-            byte[] stringBytes = string.getBytes(\"UTF8\");\n-            writeInt(stringBytes.length);\n-            writeByteArray(stringBytes);\n-        } catch (java.io.UnsupportedEncodingException e) {\n-            throw new InternalException(\"Cannot convert string to UTF8 bytes\");\n-        }\n+        byte[] stringBytes = string.getBytes(UTF_8);\n+        writeInt(stringBytes.length);\n+        writeByteArray(stringBytes);\n@@ -408,1 +406,0 @@\n-        String ret;\n@@ -410,7 +407,1 @@\n-\n-        try {\n-            ret = new String(pkt.data, inCursor, len, \"UTF8\");\n-        } catch(java.io.UnsupportedEncodingException e) {\n-            System.err.println(e);\n-            ret = \"Conversion error!\";\n-        }\n+        String ret = new String(pkt.data, inCursor, len, UTF_8);\n","filename":"src\/jdk.jdi\/share\/classes\/com\/sun\/tools\/jdi\/PacketStream.java","additions":7,"deletions":16,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,0 +42,2 @@\n+import static java.nio.charset.StandardCharsets.UTF_8;\n+\n@@ -123,1 +125,1 @@\n-        byte[] hello = \"JDWP-Handshake\".getBytes(\"UTF-8\");\n+        byte[] hello = \"JDWP-Handshake\".getBytes(UTF_8);\n","filename":"src\/jdk.jdi\/share\/classes\/com\/sun\/tools\/jdi\/SocketTransportService.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2012, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,0 +34,2 @@\n+import static java.nio.charset.StandardCharsets.UTF_8;\n+\n@@ -49,1 +51,1 @@\n-        byte[] hello = \"JDWP-Handshake\".getBytes(\"UTF-8\");\n+        byte[] hello = \"JDWP-Handshake\".getBytes(UTF_8);\n","filename":"src\/jdk.jdi\/windows\/classes\/com\/sun\/tools\/jdi\/SharedMemoryConnection.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,0 +31,3 @@\n+import static java.nio.charset.StandardCharsets.ISO_8859_1;\n+import static java.nio.charset.StandardCharsets.UTF_8;\n+\n@@ -56,2 +59,0 @@\n-    private static final Charset UTF8 = Charset.forName(\"UTF-8\");\n-    private static final Charset LATIN1 = Charset.forName(\"ISO-8859-1\");\n@@ -157,2 +158,2 @@\n-    private final CharsetParser utf8parser = new CharsetParser(UTF8);\n-    private final CharsetParser latin1parser = new CharsetParser(LATIN1);\n+    private final CharsetParser utf8parser = new CharsetParser(UTF_8);\n+    private final CharsetParser latin1parser = new CharsetParser(ISO_8859_1);\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/consumer\/StringParser.java","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-import java.nio.charset.Charset;\n@@ -39,0 +38,2 @@\n+import static java.nio.charset.StandardCharsets.UTF_8;\n+\n@@ -134,1 +135,1 @@\n-        try (PrintWriter p = new PrintWriter(path.toFile(), Charset.forName(\"UTF-8\"))) {\n+        try (PrintWriter p = new PrintWriter(path.toFile(), UTF_8)) {\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/jfc\/model\/JFCModel.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-import java.nio.charset.Charset;\n@@ -42,0 +41,2 @@\n+import static java.nio.charset.StandardCharsets.UTF_8;\n+\n@@ -45,1 +46,1 @@\n-        try (FileReader r = new FileReader(path.toFile(), Charset.forName(\"UTF-8\"))) {\n+        try (FileReader r = new FileReader(path.toFile(), UTF_8)) {\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/jfc\/model\/Parser.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-import java.nio.charset.Charset;\n@@ -50,0 +49,2 @@\n+import static java.nio.charset.StandardCharsets.UTF_8;\n+\n@@ -200,1 +201,1 @@\n-        try (PrintWriter pw = new PrintWriter(System.out, false, Charset.forName(\"UTF-8\"))) {\n+        try (PrintWriter pw = new PrintWriter(System.out, false, UTF_8)) {\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/tool\/Metadata.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-import java.nio.charset.Charset;\n@@ -40,0 +39,2 @@\n+import static java.nio.charset.StandardCharsets.UTF_8;\n+\n@@ -103,1 +104,1 @@\n-        PrintWriter pw = new PrintWriter(System.out, false, Charset.forName(\"UTF-8\"));\n+        PrintWriter pw = new PrintWriter(System.out, false, UTF_8);\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/tool\/Print.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -38,1 +38,0 @@\n-import java.nio.charset.Charset;\n@@ -93,0 +92,2 @@\n+import static java.nio.charset.StandardCharsets.UTF_8;\n+\n@@ -1312,1 +1313,1 @@\n-            super(\"non-system-in\", terminal, output, Charset.forName(\"UTF-8\"));\n+            super(\"non-system-in\", terminal, output, UTF_8);\n","filename":"src\/jdk.jshell\/share\/classes\/jdk\/internal\/jshell\/tool\/ConsoleIOContext.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,0 +33,2 @@\n+import static java.nio.charset.StandardCharsets.UTF_8;\n+\n@@ -67,1 +69,1 @@\n-                String chan = new String(name, \"UTF-8\");\n+                String chan = new String(name, UTF_8);\n","filename":"src\/jdk.jshell\/share\/classes\/jdk\/jshell\/execution\/DemultiplexInput.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,2 @@\n-import java.io.UnsupportedEncodingException;\n+\n+import static java.nio.charset.StandardCharsets.UTF_8;\n@@ -43,6 +44,2 @@\n-        try {\n-            this.name = name.getBytes(\"UTF-8\");\n-            this.delegate = delegate;\n-        } catch (UnsupportedEncodingException ex) {\n-            throw new IllegalStateException(ex); \/\/should not happen\n-        }\n+        this.name = name.getBytes(UTF_8);\n+        this.delegate = delegate;\n","filename":"src\/jdk.jshell\/share\/classes\/jdk\/jshell\/execution\/MultiplexingOutputStream.java","additions":5,"deletions":8,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,0 +48,1 @@\n+import static java.nio.charset.StandardCharsets.UTF_8;\n@@ -123,1 +124,1 @@\n-                            throw new IOException(new String(message, \"UTF-8\"));\n+                            throw new IOException(new String(message, UTF_8));\n@@ -186,1 +187,1 @@\n-                        byte[] message = exc.getMessage().getBytes(\"UTF-8\");\n+                        byte[] message = exc.getMessage().getBytes(UTF_8);\n","filename":"src\/jdk.jshell\/share\/classes\/jdk\/jshell\/execution\/Util.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,0 @@\n-import java.io.UnsupportedEncodingException;\n@@ -36,0 +35,2 @@\n+import static java.nio.charset.StandardCharsets.UTF_8;\n+\n@@ -93,1 +94,1 @@\n-            return new String(b, \"UTF-8\");\n+            return new String(b, UTF_8);\n@@ -97,2 +98,0 @@\n-        } catch (UnsupportedEncodingException ex) {\n-            throw new JdpException(\"Broken JDP packet. Unable to decode entry.\");\n","filename":"src\/jdk.management.agent\/share\/classes\/sun\/management\/jdp\/JdpPacketReader.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2003, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -56,0 +56,2 @@\n+import static java.nio.charset.StandardCharsets.ISO_8859_1;\n+\n@@ -388,8 +390,4 @@\n-        try {\n-            byte[] result = c.crypt\n-                (arg[0].getBytes(\"ISO-8859-1\"), arg[1].getBytes(\"ISO-8859-1\"));\n-            for (int i=0; i<result.length; i++) {\n-                System.out.println(\" \"+i+\" \"+(char)result[i]);\n-            }\n-        } catch (java.io.UnsupportedEncodingException uee) {\n-            \/\/ cannot happen\n+        byte[] result = c.crypt\n+            (arg[0].getBytes(ISO_8859_1), arg[1].getBytes(ISO_8859_1));\n+        for (int i=0; i<result.length; i++) {\n+            System.out.println(\" \"+i+\" \"+(char)result[i]);\n","filename":"src\/jdk.security.auth\/share\/classes\/com\/sun\/security\/auth\/module\/Crypt.java","additions":7,"deletions":9,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -41,0 +41,2 @@\n+\n+import static java.nio.charset.StandardCharsets.UTF_8;\n@@ -553,1 +555,1 @@\n-                String encryptedPwd = new String((byte[])pwd.get(), \"UTF8\");\n+                String encryptedPwd = new String((byte[])pwd.get(), UTF_8);\n@@ -643,9 +645,0 @@\n-        } catch (java.io.UnsupportedEncodingException uee) {\n-            \/\/ password stored in incorrect format\n-            if (debug) {\n-                System.out.println(\"\\t\\t[JndiLoginModule]:  \" +\n-                                \"password incorrectly encoded\");\n-                uee.printStackTrace();\n-            }\n-            throw new LoginException(\"Login failure due to incorrect \" +\n-                                \"password encoding in the password database\");\n@@ -732,12 +725,4 @@\n-        try {\n-            byte[] oldCrypt = encryptedPassword.getBytes(\"UTF8\");\n-            byte[] newCrypt = c.crypt(password.getBytes(\"UTF8\"),\n-                                      oldCrypt);\n-            if (newCrypt.length != oldCrypt.length)\n-                return false;\n-            for (int i = 0; i < newCrypt.length; i++) {\n-                if (oldCrypt[i] != newCrypt[i])\n-                    return false;\n-            }\n-        } catch (java.io.UnsupportedEncodingException uee) {\n-            \/\/ cannot happen, but return false just to be safe\n+        byte[] oldCrypt = encryptedPassword.getBytes(UTF_8);\n+        byte[] newCrypt = c.crypt(password.getBytes(UTF_8),\n+                                  oldCrypt);\n+        if (newCrypt.length != oldCrypt.length)\n@@ -745,0 +730,3 @@\n+        for (int i = 0; i < newCrypt.length; i++) {\n+            if (oldCrypt[i] != newCrypt[i])\n+                return false;\n","filename":"src\/jdk.security.auth\/share\/classes\/com\/sun\/security\/auth\/module\/JndiLoginModule.java","additions":10,"deletions":22,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,1 +34,0 @@\n-import java.nio.charset.Charset;\n@@ -42,0 +41,2 @@\n+import static java.nio.charset.StandardCharsets.UTF_8;\n+\n@@ -72,2 +73,0 @@\n-    private static final Charset utf8 = Charset.forName(\"UTF-8\");\n-\n@@ -344,1 +343,1 @@\n-        return new String(readBytes(), utf8).intern();\n+        return new String(readBytes(), UTF_8).intern();\n","filename":"src\/utils\/IdealGraphVisualizer\/Data\/src\/main\/java\/com\/sun\/hotspot\/igv\/data\/serialization\/BinaryParser.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -31,0 +31,2 @@\n+\n+import static java.nio.charset.StandardCharsets.UTF_8;\n@@ -70,0 +72,1 @@\n+        InputStream in = new ByteArrayInputStream(xmlString.getBytes(UTF_8));\n@@ -71,11 +74,6 @@\n-            InputStream in = new ByteArrayInputStream(xmlString.getBytes(\"UTF-8\"));\n-            try {\n-                Parser parser = new Parser(Channels.newChannel(in));\n-                parser.setInvokeLater(false);\n-                final GraphDocument parsedDocument = parser.parse();\n-                Util.assertGraphDocumentEquals(document, parsedDocument);\n-            } catch (IOException ex) {\n-                fail(ex.toString());\n-            }\n-        } catch (UnsupportedEncodingException ex) {\n-            Exceptions.printStackTrace(ex);\n+            Parser parser = new Parser(Channels.newChannel(in));\n+            parser.setInvokeLater(false);\n+            final GraphDocument parsedDocument = parser.parse();\n+            Util.assertGraphDocumentEquals(document, parsedDocument);\n+        } catch (IOException ex) {\n+            fail(ex.toString());\n","filename":"src\/utils\/IdealGraphVisualizer\/Data\/src\/test\/java\/com\/sun\/hotspot\/igv\/data\/serialization\/ParserTest.java","additions":9,"deletions":11,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -73,0 +73,2 @@\n+import static java.nio.charset.StandardCharsets.UTF_8;\n+\n@@ -114,1 +116,1 @@\n-                    Writer out = new OutputStreamWriter(os, \"UTF-8\");\n+                    Writer out = new OutputStreamWriter(os, UTF_8);\n@@ -119,2 +121,0 @@\n-\n-                } catch (UnsupportedEncodingException e) {\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/EditorTopComponent.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}