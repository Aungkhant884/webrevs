{"files":[{"patch":"@@ -86,1 +86,1 @@\n-    \/* Path to native executables;  sleepmillis *\/\n+    \/* Path to native executables;  basicsleep *\/\n@@ -2630,0 +2630,1 @@\n+     *\n@@ -2634,3 +2635,4 @@\n-        Path sleepExe = TEST_NATIVEPATH.resolve(\"sleepmillis\");\n-        if (sleepExe.toFile().canExecute()) {\n-            childArgs = List.of(sleepExe.toString(), \"600000\");\n+        String exeName = \"BasicSleep\" + (Windows.is() ? \".exe\" : \"\");\n+        Path exePath = TEST_NATIVEPATH.resolve(exeName);\n+        if (exePath.toFile().canExecute()) {\n+            childArgs = List.of(exePath.toString(), \"600\");\n@@ -2639,0 +2641,2 @@\n+            \/\/ The fallback the Java child is used if the test is run without building\n+            \/\/ the basicsleep native executable.\n@@ -2641,0 +2645,1 @@\n+            System.out.println(\"Using fallback to JavaChild: \" + childArgs);\n","filename":"test\/jdk\/java\/lang\/ProcessBuilder\/Basic.java","additions":9,"deletions":4,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -0,0 +1,53 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+#include <stdio.h>\n+#include <stdlib.h>\n+\n+#ifdef _WIN32\n+    #include <windows.h>\n+#else\n+    #include <unistd.h>\n+#endif\n+\/**\n+ * Command line program to sleep at least given number of seconds.\n+ * Actual time sleeping may vary if interrupted, the remaining time\n+ * returned from sleep has limited accuracy.\n+ *\n+ * Note: the file name prefix \"exe\" identifies the source should be built into SleepMillis(.exe).\n+ *\/\n+int main(int argc, char** argv) {\n+    int seconds;\n+\n+    if (argc < 2 || (seconds = atoi(argv[1])) < 0) {\n+        fprintf(stderr, \"usage: basicsleep <non-negative seconds>\\n\");\n+        exit(1);\n+    }\n+\n+#ifdef _WIN32\n+    Sleep(seconds * 1000);\n+#else\n+    while ((seconds = sleep(seconds)) > 0) {\n+        \/\/ until no more to sleep\n+    }\n+#endif\n+}\n","filename":"test\/jdk\/java\/lang\/ProcessBuilder\/exeBasicSleep.c","additions":53,"deletions":0,"binary":false,"changes":53,"status":"added"},{"patch":"@@ -1,49 +0,0 @@\n-\/*\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-#include <stdio.h>\n-#include <stdlib.h>\n-#include <time.h>\n-\n-\/**\n- * Command line program to sleep at least given number of seconds.\n- *\n- * Note: the file name prefix \"exe\" identifies the source should be built into SleepMillis(.exe).\n- *\/\n-int main(int argc, char** argv) {\n-    \/\/ Use higher resolution nanosleep to be able to retry accurately if interrupted\n-    struct timespec sleeptime;\n-    int millis;\n-\n-    if (argc < 2 || (millis = atoi(argv[1])) < 0) {\n-        fprintf(stderr, \"usage: sleepmillis <non-negative milli-seconds>\\n\");\n-        exit(1);\n-    }\n-\n-    sleeptime.tv_sec = millis \/ 1000;\n-    sleeptime.tv_nsec = (millis % 1000) * 1000 * 1000;\n-    int rc;\n-    while ((rc = nanosleep(&sleeptime, &sleeptime)) > 0) {\n-        \/\/ Repeat until == 0 or negative (error)\n-    }\n-    exit(rc == 0 ? 0 : 1);\n-}\n","filename":"test\/jdk\/java\/lang\/ProcessBuilder\/exeSleepMillis.c","additions":0,"deletions":49,"binary":false,"changes":49,"status":"deleted"}]}