{"files":[{"patch":"@@ -419,1 +419,1 @@\n-  develop(bool, OptimizeUnstableIf, true,                                   \\\n+  product(bool, OptimizeUnstableIf, true, DIAGNOSTIC,                       \\\n","filename":"src\/hotspot\/share\/opto\/c2_globals.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1878,0 +1878,3 @@\n+\n+\/\/ Remove the unstable if trap associated with 'unc' from candidates. It is either dead\n+\/\/ or fold-compares case. Return true if succeed or not found.\n@@ -1879,5 +1882,2 @@\n-\/\/ Remove unstable_if trap of unc from candicates. It is either dead or fold-compares case.\n-\/\/ Return true if succeed or not found.\n-\/\/\n-\/\/ In rare cases, the found traps have been processed. It is too late to delete. return false\n-\/\/ and ask fold-compares to yield.\n+\/\/ In rare cases, the found trap has been processed. It is too late to delete it. Return\n+\/\/ false and ask fold-compares to yield.\n@@ -1888,1 +1888,0 @@\n-\/\/\n","filename":"src\/hotspot\/share\/opto\/compile.cpp","additions":5,"deletions":6,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -842,1 +842,2 @@\n-          igvn->C->remove_unstable_if_trap(dom_unc, true)) {\n+          \/\/ Return true if c2 manages to reconcile with UnstableIf optimization. See the comments for it.\n+          igvn->C->remove_unstable_if_trap(dom_unc, true\/*yield*\/)) {\n","filename":"src\/hotspot\/share\/opto\/ifnode.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -606,3 +606,1 @@\n-\/\/ Specialized uncommon_trap of unstable_if, we have 2 optimizations for them:\n-\/\/   1. suppress trivial Unstable_If traps\n-\/\/   2. use next_bci of path to update live locals.\n+\/\/ Specialized uncommon_trap of unstable_if. C2 uses next_bci of path to update the live locals of it.\n","filename":"src\/hotspot\/share\/opto\/parse.hpp","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"}]}