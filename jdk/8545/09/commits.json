[{"commit":{"message":"Merge branch 'master' into JDK-8286104"},"files":[{"filename":"src\/hotspot\/share\/opto\/compile.cpp"}],"sha":"4130cd10e6bd14d6fb9fe52ea2192189e4f94172"},{"commit":{"message":"Remame all methods to _unstable_if_trap(s) and group them."},"files":[{"filename":"src\/hotspot\/share\/opto\/compile.cpp"},{"filename":"src\/hotspot\/share\/opto\/compile.hpp"},{"filename":"src\/hotspot\/share\/opto\/ifnode.cpp"},{"filename":"src\/hotspot\/share\/opto\/parse2.cpp"}],"sha":"428aeafd2da434f538b79442f23eacc34ba9288b"},{"commit":{"message":"move preprocess() after remove Useless."},"files":[{"filename":"src\/hotspot\/share\/opto\/compile.cpp"},{"filename":"src\/hotspot\/share\/opto\/compile.hpp"},{"filename":"src\/hotspot\/share\/opto\/ifnode.cpp"},{"filename":"src\/hotspot\/share\/opto\/parse.hpp"}],"sha":"f6771d69832d6dc9e1e8da9fac190a94e52f2a96"},{"commit":{"message":"Refactor per reviewer's feedback."},"files":[{"filename":"src\/hotspot\/share\/opto\/compile.cpp"},{"filename":"src\/hotspot\/share\/opto\/compile.hpp"},{"filename":"src\/hotspot\/share\/opto\/parse.hpp"},{"filename":"src\/hotspot\/share\/opto\/parse1.cpp"}],"sha":"d7e5f0620b6a51f6d0b3611d706dab9470fda026"},{"commit":{"message":"Remove useless flag. if jdwp is on, liveness_at_bci() marks all local\nvariables live."},"files":[{"filename":"src\/hotspot\/share\/opto\/callnode.cpp"},{"filename":"src\/hotspot\/share\/opto\/callnode.hpp"},{"filename":"src\/hotspot\/share\/opto\/compile.cpp"},{"filename":"src\/hotspot\/share\/opto\/compile.hpp"},{"filename":"src\/hotspot\/share\/opto\/ifnode.cpp"},{"filename":"src\/hotspot\/share\/opto\/parse.hpp"}],"sha":"6e9f26707d735e08511a927396dc8b087432e51a"},{"commit":{"message":"support option AggressiveLivessForUnstableIf"},"files":[{"filename":"src\/hotspot\/share\/opto\/compile.cpp"}],"sha":"4fdd1c88643ec6531098976398c84499f6524bb4"},{"commit":{"message":"Merge branch 'master' into JDK-8286104"},"files":[],"sha":"a30e0ef398bb6115efe34e060916c0e8ed9dd71f"},{"commit":{"message":"update comments."},"files":[{"filename":"src\/hotspot\/share\/opto\/compile.cpp"},{"filename":"src\/hotspot\/share\/opto\/parse.hpp"}],"sha":"7c305a4e4bf9e1a667006a983024f122f127fd64"},{"commit":{"message":"Merge branch 'master' into JDK-8286104"},"files":[{"filename":"src\/hotspot\/share\/opto\/compile.cpp"},{"filename":"src\/hotspot\/share\/opto\/graphKit.cpp"}],"sha":"849cdec33659b515d9a660570244c9844308ca12"},{"commit":{"message":"reimplement process_unstable_ifs"},"files":[{"filename":"src\/hotspot\/share\/opto\/compile.cpp"},{"filename":"src\/hotspot\/share\/opto\/compile.hpp"},{"filename":"src\/hotspot\/share\/opto\/ifnode.cpp"},{"filename":"src\/hotspot\/share\/opto\/parse1.cpp"}],"sha":"3eae8c5e7eb3cb4ede2330ab38ab30e8c1851574"},{"commit":{"message":"remember UnstableIfTrap in parser.\n\nAlso add a statistical counter for trivial counter"},"files":[{"filename":"src\/hotspot\/share\/opto\/compile.cpp"},{"filename":"src\/hotspot\/share\/opto\/compile.hpp"},{"filename":"src\/hotspot\/share\/opto\/graphKit.cpp"},{"filename":"src\/hotspot\/share\/opto\/graphKit.hpp"},{"filename":"src\/hotspot\/share\/opto\/ifnode.cpp"},{"filename":"src\/hotspot\/share\/opto\/parse.hpp"},{"filename":"src\/hotspot\/share\/opto\/parse1.cpp"},{"filename":"src\/hotspot\/share\/opto\/parse2.cpp"}],"sha":"80b9e4407b036224f7ca647579864fa6413c5bfe"},{"commit":{"message":"Merge branch 'master' into JDK-8286104"},"files":[{"filename":"src\/hotspot\/share\/opto\/callnode.cpp"},{"filename":"src\/hotspot\/share\/opto\/callnode.hpp"},{"filename":"src\/hotspot\/share\/opto\/compile.cpp"},{"filename":"src\/hotspot\/share\/opto\/compile.hpp"},{"filename":"src\/hotspot\/share\/opto\/parse2.cpp"}],"sha":"1a2d04816e40cd9c746819ab87b0ca2c8d39fea5"},{"commit":{"message":"bail out a corner case that ifnode postpones fold-compares after loop\noptimization."},"files":[{"filename":"src\/hotspot\/share\/opto\/ifnode.cpp"}],"sha":"c3f0cbc36d2c850344337f508ec73e99b0336e89"},{"commit":{"message":"revert code change from 1st revision."},"files":[{"filename":"src\/hotspot\/share\/opto\/compile.cpp"},{"filename":"src\/hotspot\/share\/opto\/parse2.cpp"}],"sha":"2f047457cb48647827d6b1eb1292d735ef24f53d"},{"commit":{"message":"Merge branch 'JDK-8276998' into JDK-8286104"},"files":[{"filename":"src\/hotspot\/share\/opto\/parse2.cpp"}],"sha":"1b5cb89515e4977fa2e85335531980859969a4d6"},{"commit":{"message":"rule out if a If nodes has 2 branches of unstable_if trap."},"files":[{"filename":"src\/hotspot\/share\/opto\/compile.cpp"},{"filename":"src\/hotspot\/share\/opto\/ifnode.cpp"}],"sha":"4f75dda4dc54c81282bcb09114a954c5a6334145"},{"commit":{"message":"change the flag to diagnostic."},"files":[{"filename":"src\/hotspot\/share\/opto\/c2_globals.hpp"},{"filename":"src\/hotspot\/share\/opto\/compile.cpp"}],"sha":"5e689d4d3810ce6dbb96a9c05744e192b385fc4b"},{"commit":{"message":"add sanity check for operands if bc is if_acmp_eq\/ne and ifnull\/nonnull"},"files":[{"filename":"src\/hotspot\/share\/opto\/callnode.cpp"},{"filename":"src\/hotspot\/share\/opto\/callnode.hpp"},{"filename":"src\/hotspot\/share\/opto\/compile.cpp"},{"filename":"src\/hotspot\/share\/opto\/compile.hpp"},{"filename":"src\/hotspot\/share\/opto\/ifnode.cpp"}],"sha":"89fa3cec24c63cd095ac1f9170e30f0ec56de746"},{"commit":{"message":"fix release build"},"files":[{"filename":"src\/hotspot\/share\/opto\/compile.cpp"}],"sha":"77ee4dbf0049e3b14feb3b1f7138f028ee7165d2"},{"commit":{"message":"update unstable_if after igvn."},"files":[{"filename":"src\/hotspot\/share\/opto\/compile.cpp"},{"filename":"src\/hotspot\/share\/opto\/compile.hpp"},{"filename":"src\/hotspot\/share\/opto\/ifnode.cpp"}],"sha":"b4ceec555a319fb021737116e0ee079b428e4cd8"},{"commit":{"message":"adjust unstable_if after fold_compares"},"files":[{"filename":"src\/hotspot\/share\/opto\/ifnode.cpp"},{"filename":"src\/hotspot\/share\/opto\/parse2.cpp"}],"sha":"8d9ba3079c659049e8a11f982df1f37da2ca345e"},{"commit":{"message":"disable comparison_folding temporarily.\n\nThis feature not only folds two CMPI but also merge two uncommon_traps.\nit uses the dominating uncommon_trap and revaluate the two if in\ninterpreter.  currently, aggressiveliveness can't work for that."},"files":[{"filename":"src\/hotspot\/share\/opto\/ifnode.cpp"}],"sha":"2f650bf0182619ba892c9d7a897116d96ab64070"},{"commit":{"message":"retain bci for unstable_if"},"files":[{"filename":"src\/hotspot\/share\/compiler\/methodLiveness.hpp"},{"filename":"src\/hotspot\/share\/opto\/parse2.cpp"},{"filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/TestAggressiveLivenessForUnstableIf.java"}],"sha":"c482800936a7a450470755c2863fdd4084cf42b5"},{"commit":{"message":"8286104: use aggressive liveness for unstable_if traps"},"files":[{"filename":"src\/hotspot\/share\/opto\/c2_globals.hpp"},{"filename":"src\/hotspot\/share\/opto\/parse2.cpp"},{"filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/TestAggressiveLivenessForUnstableIf.java"}],"sha":"37de8fe8ecbdeea0f5fe434973ece6d81e3969df"},{"commit":{"message":"8286104: use aggressive liveness for unstable_if traps"},"files":[{"filename":"src\/hotspot\/share\/opto\/parse2.cpp"}],"sha":"2c38b87bee664d1ec5c1275abcaf73de5c2d0772"}]