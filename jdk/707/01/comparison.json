{"files":[{"patch":"@@ -30,3 +30,3 @@\n- * <code>ARRAY<\/code>.\n- * By default, an <code>Array<\/code> value is a transaction-duration\n- * reference to an SQL <code>ARRAY<\/code> value.  By default, an <code>Array<\/code>\n+ * {@code ARRAY}.\n+ * By default, an {@code Array} value is a transaction-duration\n+ * reference to an SQL {@code ARRAY} value.  By default, an {@code Array}\n@@ -34,3 +34,3 @@\n- * means that an <code>Array<\/code> object contains a logical pointer\n- * to the data in the SQL <code>ARRAY<\/code> value rather\n- * than containing the <code>ARRAY<\/code> value's data.\n+ * means that an {@code Array} object contains a logical pointer\n+ * to the data in the SQL {@code ARRAY} value rather\n+ * than containing the {@code ARRAY} value's data.\n@@ -38,4 +38,4 @@\n- * The <code>Array<\/code> interface provides methods for bringing an SQL\n- * <code>ARRAY<\/code> value's data to the client as either an array or a\n- * <code>ResultSet<\/code> object.\n- * If the elements of the SQL <code>ARRAY<\/code>\n+ * The {@code Array} interface provides methods for bringing an SQL\n+ * {@code ARRAY} value's data to the client as either an array or a\n+ * {@code ResultSet} object.\n+ * If the elements of the SQL {@code ARRAY}\n@@ -50,2 +50,2 @@\n- *   <li>the <code>Class<\/code> object for the class implementing\n- *       <code>SQLData<\/code>\n+ *   <li>the {@code Class} object for the class implementing\n+ *       {@code SQLData}\n@@ -56,3 +56,3 @@\n- * the base type is supplied to the methods <code>getArray<\/code>\n- * and <code>getResultSet<\/code>, the mapping\n- * it contains will be used to map the elements of the <code>ARRAY<\/code> value.\n+ * the base type is supplied to the methods {@code getArray}\n+ * and {@code getResultSet}, the mapping\n+ * it contains will be used to map the elements of the {@code ARRAY} value.\n@@ -64,1 +64,1 @@\n- * All methods on the <code>Array<\/code> interface must be fully implemented if the\n+ * All methods on the {@code Array} interface must be fully implemented if the\n@@ -74,1 +74,1 @@\n-   * the array designated by this <code>Array<\/code> object.\n+   * the array designated by this {@code Array} object.\n@@ -80,1 +80,1 @@\n-   * @return a <code>String<\/code> that is the database-specific\n+   * @return a {@code String} that is the database-specific\n@@ -93,1 +93,1 @@\n-   * by this <code>Array<\/code> object.\n+   * by this {@code Array} object.\n@@ -97,1 +97,1 @@\n-   * <code>Array<\/code> object\n+   * {@code Array} object\n@@ -107,1 +107,1 @@\n-   * Retrieves the contents of the SQL <code>ARRAY<\/code> value designated\n+   * Retrieves the contents of the SQL {@code ARRAY} value designated\n@@ -109,2 +109,2 @@\n-   * <code>Array<\/code> object in the form of an array in the Java\n-   * programming language. This version of the method <code>getArray<\/code>\n+   * {@code Array} object in the form of an array in the Java\n+   * programming language. This version of the method {@code getArray}\n@@ -114,1 +114,1 @@\n-   * <strong>Note:<\/strong> When <code>getArray<\/code> is used to materialize\n+   * <strong>Note:<\/strong> When {@code getArray} is used to materialize\n@@ -117,1 +117,1 @@\n-   * that primitive data type or an array of <code>Object<\/code>.\n+   * that primitive data type or an array of {@code Object}.\n@@ -120,2 +120,2 @@\n-   * the ordered elements of the SQL <code>ARRAY<\/code> value\n-   * designated by this <code>Array<\/code> object\n+   * the ordered elements of the SQL {@code ARRAY} value\n+   * designated by this {@code Array} object\n@@ -131,2 +131,2 @@\n-   * Retrieves the contents of the SQL <code>ARRAY<\/code> value designated by this\n-   * <code>Array<\/code> object.\n+   * Retrieves the contents of the SQL {@code ARRAY} value designated by this\n+   * {@code Array} object.\n@@ -134,1 +134,1 @@\n-   * the specified <code>map<\/code> for type map customizations\n+   * the specified {@code map} for type map customizations\n@@ -136,1 +136,1 @@\n-   * type in <code>map<\/code>, in which case it\n+   * type in {@code map}, in which case it\n@@ -138,1 +138,1 @@\n-   * <code>getArray<\/code> uses either the given type map or the standard mapping;\n+   * {@code getArray} uses either the given type map or the standard mapping;\n@@ -141,1 +141,1 @@\n-   * <strong>Note:<\/strong> When <code>getArray<\/code> is used to materialize\n+   * <strong>Note:<\/strong> When {@code getArray} is used to materialize\n@@ -144,1 +144,1 @@\n-   * that primitive data type or an array of <code>Object<\/code>.\n+   * that primitive data type or an array of {@code Object}.\n@@ -146,1 +146,1 @@\n-   * @param map a <code>java.util.Map<\/code> object that contains mappings\n+   * @param map a {@code java.util.Map} object that contains mappings\n@@ -159,3 +159,3 @@\n-   * Retrieves a slice of the SQL <code>ARRAY<\/code>\n-   * value designated by this <code>Array<\/code> object, beginning with the\n-   * specified <code>index<\/code> and containing up to <code>count<\/code>\n+   * Retrieves a slice of the SQL {@code ARRAY}\n+   * value designated by this {@code Array} object, beginning with the\n+   * specified {@code index} and containing up to {@code count}\n@@ -165,1 +165,1 @@\n-   * <strong>Note:<\/strong> When <code>getArray<\/code> is used to materialize\n+   * <strong>Note:<\/strong> When {@code getArray} is used to materialize\n@@ -168,1 +168,1 @@\n-   * that primitive data type or an array of <code>Object<\/code>.\n+   * that primitive data type or an array of {@code Object}.\n@@ -173,2 +173,2 @@\n-   * @return an array containing up to <code>count<\/code> consecutive elements\n-   * of the SQL array, beginning with element <code>index<\/code>\n+   * @return an array containing up to {@code count} consecutive elements\n+   * of the SQL array, beginning with element {@code index}\n@@ -184,3 +184,3 @@\n-   * Retrieves a slice of the SQL <code>ARRAY<\/code> value\n-   * designated by this <code>Array<\/code> object, beginning with the specified\n-   * <code>index<\/code> and containing up to <code>count<\/code>\n+   * Retrieves a slice of the SQL {@code ARRAY} value\n+   * designated by this {@code Array} object, beginning with the specified\n+   * {@code index} and containing up to {@code count}\n@@ -190,1 +190,1 @@\n-   * the specified <code>map<\/code> for type map customizations\n+   * the specified {@code map} for type map customizations\n@@ -192,1 +192,1 @@\n-   * type in <code>map<\/code>, in which case it\n+   * type in {@code map}, in which case it\n@@ -194,1 +194,1 @@\n-   * <code>getArray<\/code> uses either the given type map or the standard mapping;\n+   * {@code getArray} uses either the given type map or the standard mapping;\n@@ -197,1 +197,1 @@\n-   * <strong>Note:<\/strong> When <code>getArray<\/code> is used to materialize\n+   * <strong>Note:<\/strong> When {@code getArray} is used to materialize\n@@ -200,1 +200,1 @@\n-   * that primitive data type or an array of <code>Object<\/code>.\n+   * that primitive data type or an array of {@code Object}.\n@@ -206,1 +206,1 @@\n-   * @param map a <code>java.util.Map<\/code> object\n+   * @param map a {@code java.util.Map} object\n@@ -209,4 +209,4 @@\n-   * @return an array containing up to <code>count<\/code>\n-   * consecutive elements of the SQL <code>ARRAY<\/code> value designated by this\n-   * <code>Array<\/code> object, beginning with element\n-   * <code>index<\/code>\n+   * @return an array containing up to {@code count}\n+   * consecutive elements of the SQL {@code ARRAY} value designated by this\n+   * {@code Array} object, beginning with element\n+   * {@code index}\n@@ -224,2 +224,2 @@\n-   * <code>ARRAY<\/code> value\n-   * designated by this <code>Array<\/code> object.  If appropriate,\n+   * {@code ARRAY} value\n+   * designated by this {@code Array} object.  If appropriate,\n@@ -237,1 +237,1 @@\n-   * of the elements in the array designated by this <code>Array<\/code>\n+   * of the elements in the array designated by this {@code Array}\n@@ -249,1 +249,1 @@\n-   * <code>ARRAY<\/code> value designated by this <code>Array<\/code> object.\n+   * {@code ARRAY} value designated by this {@code Array} object.\n@@ -251,1 +251,1 @@\n-   * the specified <code>map<\/code> for type map customizations\n+   * the specified {@code map} for type map customizations\n@@ -253,1 +253,1 @@\n-   * type in <code>map<\/code>, in which case it\n+   * type in {@code map}, in which case it\n@@ -255,1 +255,1 @@\n-   * <code>getResultSet<\/code> uses either the given type map or the standard mapping;\n+   * {@code getResultSet} uses either the given type map or the standard mapping;\n@@ -267,2 +267,2 @@\n-   * @return a <code>ResultSet<\/code> object containing one row for each\n-   * of the elements in the array designated by this <code>Array<\/code>\n+   * @return a {@code ResultSet} object containing one row for each\n+   * of the elements in the array designated by this {@code Array}\n@@ -280,2 +280,2 @@\n-   * starts at index <code>index<\/code> and contains up to\n-   * <code>count<\/code> successive elements.  This method uses\n+   * starts at index {@code index} and contains up to\n+   * {@code count} successive elements.  This method uses\n@@ -288,2 +288,2 @@\n-   * element at index <code>index<\/code>.  The result set has\n-   * up to <code>count<\/code> rows in ascending order based on the\n+   * element at index {@code index}.  The result set has\n+   * up to {@code count} rows in ascending order based on the\n@@ -297,4 +297,4 @@\n-   * @return a <code>ResultSet<\/code> object containing up to\n-   * <code>count<\/code> consecutive elements of the SQL array\n-   * designated by this <code>Array<\/code> object, starting at\n-   * index <code>index<\/code>.\n+   * @return a {@code ResultSet} object containing up to\n+   * {@code count} consecutive elements of the SQL array\n+   * designated by this {@code Array} object, starting at\n+   * index {@code index}.\n@@ -311,2 +311,2 @@\n-   * starts at index <code>index<\/code> and contains up to\n-   * <code>count<\/code> successive elements.\n+   * starts at index {@code index} and contains up to\n+   * {@code count} successive elements.\n@@ -314,1 +314,1 @@\n-   * the specified <code>map<\/code> for type map customizations\n+   * the specified {@code map} for type map customizations\n@@ -316,1 +316,1 @@\n-   * type in <code>map<\/code>, in which case it\n+   * type in {@code map}, in which case it\n@@ -318,1 +318,1 @@\n-   * <code>getResultSet<\/code> uses either the given type map or the standard mapping;\n+   * {@code getResultSet} uses either the given type map or the standard mapping;\n@@ -323,2 +323,2 @@\n-   * element at index <code>index<\/code>.  The result set has\n-   * up to <code>count<\/code> rows in ascending order based on the\n+   * element at index {@code index}.  The result set has\n+   * up to {@code count} rows in ascending order based on the\n@@ -332,1 +332,1 @@\n-   * @param map the <code>Map<\/code> object that contains the mapping\n+   * @param map the {@code Map} object that contains the mapping\n@@ -334,4 +334,4 @@\n-   * @return a <code>ResultSet<\/code> object containing up to\n-   * <code>count<\/code> consecutive elements of the SQL array\n-   * designated by this <code>Array<\/code> object, starting at\n-   * index <code>index<\/code>.\n+   * @return a {@code ResultSet} object containing up to\n+   * {@code count} consecutive elements of the SQL array\n+   * designated by this {@code Array} object, starting at\n+   * index {@code index}.\n@@ -348,2 +348,2 @@\n-     * This method frees the <code>Array<\/code> object and releases the resources that\n-     * it holds. The object is invalid once the <code>free<\/code>\n+     * This method frees the {@code Array} object and releases the resources that\n+     * it holds. The object is invalid once the {@code free}\n@@ -352,4 +352,4 @@\n-     * After <code>free<\/code> has been called, any attempt to invoke a\n-     * method other than <code>free<\/code> will result in a <code>SQLException<\/code>\n-     * being thrown.  If <code>free<\/code> is called multiple times, the subsequent\n-     * calls to <code>free<\/code> are treated as a no-op.\n+     * After {@code free} has been called, any attempt to invoke a\n+     * method other than {@code free} will result in a {@code SQLException}\n+     * being thrown.  If {@code free} is called multiple times, the subsequent\n+     * calls to {@code free} are treated as a no-op.\n","filename":"src\/java.sql\/share\/classes\/java\/sql\/Array.java","additions":90,"deletions":90,"binary":false,"changes":180,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n- * <code>BatchUpdateException<\/code> provides the update\n+ * {@code BatchUpdateException} provides the update\n@@ -45,1 +45,1 @@\n- * and a <code>BatchUpdateException<\/code> is thrown, the driver\n+ * and a {@code BatchUpdateException} is thrown, the driver\n@@ -49,1 +49,1 @@\n- * <code>BatchUpdateException.getUpdateCounts<\/code> will have\n+ * {@code BatchUpdateException.getUpdateCounts} will have\n@@ -54,1 +54,1 @@\n- * that failed is <code>Statement.EXECUTE_FAILED<\/code>.\n+ * that failed is {@code Statement.EXECUTE_FAILED}.\n@@ -71,4 +71,4 @@\n-   * Constructs a <code>BatchUpdateException<\/code> object initialized with a given\n-   * <code>reason<\/code>, <code>SQLState<\/code>, <code>vendorCode<\/code> and\n-   * <code>updateCounts<\/code>.\n-   * The <code>cause<\/code> is not initialized, and may subsequently be\n+   * Constructs a {@code BatchUpdateException} object initialized with a given\n+   * {@code reason}, {@code SQLState}, {@code vendorCode} and\n+   * {@code updateCounts}.\n+   * The {@code cause} is not initialized, and may subsequently be\n@@ -87,3 +87,3 @@\n-   * @param updateCounts an array of <code>int<\/code>, with each element\n-   * indicating the update count, <code>Statement.SUCCESS_NO_INFO<\/code> or\n-   * <code>Statement.EXECUTE_FAILED<\/code> for each SQL command in\n+   * @param updateCounts an array of {@code int}, with each element\n+   * indicating the update count, {@code Statement.SUCCESS_NO_INFO} or\n+   * {@code Statement.EXECUTE_FAILED} for each SQL command in\n@@ -92,1 +92,1 @@\n-   * <code>Statement.SUCCESS_NO_INFO<\/code> for each SQL command in the batch\n+   * {@code Statement.SUCCESS_NO_INFO} for each SQL command in the batch\n@@ -107,4 +107,4 @@\n-   * Constructs a <code>BatchUpdateException<\/code> object initialized with a given\n-   * <code>reason<\/code>, <code>SQLState<\/code> and\n-   * <code>updateCounts<\/code>.\n-   * The <code>cause<\/code> is not initialized, and may subsequently be\n+   * Constructs a {@code BatchUpdateException} object initialized with a given\n+   * {@code reason}, {@code SQLState} and\n+   * {@code updateCounts}.\n+   * The {@code cause} is not initialized, and may subsequently be\n@@ -122,3 +122,3 @@\n-   * @param updateCounts an array of <code>int<\/code>, with each element\n-   * indicating the update count, <code>Statement.SUCCESS_NO_INFO<\/code> or\n-   * <code>Statement.EXECUTE_FAILED<\/code> for each SQL command in\n+   * @param updateCounts an array of {@code int}, with each element\n+   * indicating the update count, {@code Statement.SUCCESS_NO_INFO} or\n+   * {@code Statement.EXECUTE_FAILED} for each SQL command in\n@@ -127,1 +127,1 @@\n-   * <code>Statement.SUCCESS_NO_INFO<\/code> for each SQL command in the batch\n+   * {@code Statement.SUCCESS_NO_INFO} for each SQL command in the batch\n@@ -140,3 +140,3 @@\n-   * Constructs a <code>BatchUpdateException<\/code> object initialized with a given\n-   * <code>reason<\/code> and <code>updateCounts<\/code>.\n-   * The <code>cause<\/code> is not initialized, and may subsequently be\n+   * Constructs a {@code BatchUpdateException} object initialized with a given\n+   * {@code reason} and {@code updateCounts}.\n+   * The {@code cause} is not initialized, and may subsequently be\n@@ -145,1 +145,1 @@\n-   * <code>SQLState<\/code> is initialized to <code>null<\/code>\n+   * {@code SQLState} is initialized to {@code null}\n@@ -154,3 +154,3 @@\n-   * @param updateCounts an array of <code>int<\/code>, with each element\n-   * indicating the update count, <code>Statement.SUCCESS_NO_INFO<\/code> or\n-   * <code>Statement.EXECUTE_FAILED<\/code> for each SQL command in\n+   * @param updateCounts an array of {@code int}, with each element\n+   * indicating the update count, {@code Statement.SUCCESS_NO_INFO} or\n+   * {@code Statement.EXECUTE_FAILED} for each SQL command in\n@@ -159,1 +159,1 @@\n-   * <code>Statement.SUCCESS_NO_INFO<\/code> for each SQL command in the batch\n+   * {@code Statement.SUCCESS_NO_INFO} for each SQL command in the batch\n@@ -171,2 +171,2 @@\n-   * Constructs a <code>BatchUpdateException<\/code> object initialized with a given\n-   * <code>updateCounts<\/code>.\n+   * Constructs a {@code BatchUpdateException} object initialized with a given\n+   * {@code updateCounts}.\n@@ -174,2 +174,2 @@\n-   * {@link Throwable#initCause(java.lang.Throwable)} method. The  <code>reason<\/code>\n-   * and <code>SQLState<\/code> are initialized to null and the vendor code\n+   * {@link Throwable#initCause(java.lang.Throwable)} method. The  {@code reason}\n+   * and {@code SQLState} are initialized to null and the vendor code\n@@ -183,3 +183,3 @@\n-   * @param updateCounts an array of <code>int<\/code>, with each element\n-   * indicating the update count, <code>Statement.SUCCESS_NO_INFO<\/code> or\n-   * <code>Statement.EXECUTE_FAILED<\/code> for each SQL command in\n+   * @param updateCounts an array of {@code int}, with each element\n+   * indicating the update count, {@code Statement.SUCCESS_NO_INFO} or\n+   * {@code Statement.EXECUTE_FAILED} for each SQL command in\n@@ -188,1 +188,1 @@\n-   * <code>Statement.SUCCESS_NO_INFO<\/code> for each SQL command in the batch\n+   * {@code Statement.SUCCESS_NO_INFO} for each SQL command in the batch\n@@ -200,4 +200,4 @@\n-   * Constructs a <code>BatchUpdateException<\/code> object.\n-   * The <code>reason<\/code>, <code>SQLState<\/code> and <code>updateCounts<\/code>\n-   *  are initialized to <code>null<\/code> and the vendor code is initialized to 0.\n-   * The <code>cause<\/code> is not initialized, and may subsequently be\n+   * Constructs a {@code BatchUpdateException} object.\n+   * The {@code reason}, {@code SQLState} and {@code updateCounts}\n+   *  are initialized to {@code null} and the vendor code is initialized to 0.\n+   * The {@code cause} is not initialized, and may subsequently be\n@@ -216,3 +216,3 @@\n-   * Constructs a <code>BatchUpdateException<\/code> object initialized with\n-   *  a given <code>cause<\/code>.\n-   * The <code>SQLState<\/code> and <code>updateCounts<\/code>\n+   * Constructs a {@code BatchUpdateException} object initialized with\n+   *  a given {@code cause}.\n+   * The {@code SQLState} and {@code updateCounts}\n@@ -220,6 +220,6 @@\n-   * to <code>null<\/code> and the vendor code is initialized to 0.\n-   * The <code>reason<\/code>  is initialized to <code>null<\/code> if\n-   * <code>cause==null<\/code> or to <code>cause.toString()<\/code> if\n-   *  <code>cause!=null<\/code>.\n-   * @param cause the underlying reason for this <code>SQLException<\/code>\n-   * (which is saved for later retrieval by the <code>getCause()<\/code> method);\n+   * to {@code null} and the vendor code is initialized to 0.\n+   * The {@code reason}  is initialized to {@code null} if\n+   * {@code cause==null} or to {@code cause.toString()} if\n+   *  {@code cause!=null}.\n+   * @param cause the underlying reason for this {@code SQLException}\n+   * (which is saved for later retrieval by the {@code getCause()} method);\n@@ -236,7 +236,7 @@\n-   * Constructs a <code>BatchUpdateException<\/code> object initialized with a\n-   * given <code>cause<\/code> and <code>updateCounts<\/code>.\n-   * The <code>SQLState<\/code> is initialized\n-   * to <code>null<\/code> and the vendor code is initialized to 0.\n-   * The <code>reason<\/code>  is initialized to <code>null<\/code> if\n-   * <code>cause==null<\/code> or to <code>cause.toString()<\/code> if\n-   * <code>cause!=null<\/code>.\n+   * Constructs a {@code BatchUpdateException} object initialized with a\n+   * given {@code cause} and {@code updateCounts}.\n+   * The {@code SQLState} is initialized\n+   * to {@code null} and the vendor code is initialized to 0.\n+   * The {@code reason}  is initialized to {@code null} if\n+   * {@code cause==null} or to {@code cause.toString()} if\n+   * {@code cause!=null}.\n@@ -249,3 +249,3 @@\n-   * @param updateCounts an array of <code>int<\/code>, with each element\n-   * indicating the update count, <code>Statement.SUCCESS_NO_INFO<\/code> or\n-   * <code>Statement.EXECUTE_FAILED<\/code> for each SQL command in\n+   * @param updateCounts an array of {@code int}, with each element\n+   * indicating the update count, {@code Statement.SUCCESS_NO_INFO} or\n+   * {@code Statement.EXECUTE_FAILED} for each SQL command in\n@@ -254,1 +254,1 @@\n-   * <code>Statement.SUCCESS_NO_INFO<\/code> for each SQL command in the batch\n+   * {@code Statement.SUCCESS_NO_INFO} for each SQL command in the batch\n@@ -257,2 +257,2 @@\n-   * @param cause the underlying reason for this <code>SQLException<\/code>\n-   * (which is saved for later retrieval by the <code>getCause()<\/code> method); may be null indicating\n+   * @param cause the underlying reason for this {@code SQLException}\n+   * (which is saved for later retrieval by the {@code getCause()} method); may be null indicating\n@@ -269,4 +269,4 @@\n-   * Constructs a <code>BatchUpdateException<\/code> object initialized with\n-   * a given <code>reason<\/code>, <code>cause<\/code>\n-   * and <code>updateCounts<\/code>. The <code>SQLState<\/code> is initialized\n-   * to <code>null<\/code> and the vendor code is initialized to 0.\n+   * Constructs a {@code BatchUpdateException} object initialized with\n+   * a given {@code reason}, {@code cause}\n+   * and {@code updateCounts}. The {@code SQLState} is initialized\n+   * to {@code null} and the vendor code is initialized to 0.\n@@ -280,3 +280,3 @@\n-   * @param updateCounts an array of <code>int<\/code>, with each element\n-   *indicating the update count, <code>Statement.SUCCESS_NO_INFO<\/code> or\n-   * <code>Statement.EXECUTE_FAILED<\/code> for each SQL command in\n+   * @param updateCounts an array of {@code int}, with each element\n+   * indicating the update count, {@code Statement.SUCCESS_NO_INFO} or\n+   * {@code Statement.EXECUTE_FAILED} for each SQL command in\n@@ -285,1 +285,1 @@\n-   * <code>Statement.SUCCESS_NO_INFO<\/code> for each SQL command in the batch\n+   * {@code Statement.SUCCESS_NO_INFO} for each SQL command in the batch\n@@ -288,1 +288,1 @@\n-   * @param cause the underlying reason for this <code>SQLException<\/code> (which is saved for later retrieval by the <code>getCause()<\/code> method);\n+   * @param cause the underlying reason for this {@code SQLException} (which is saved for later retrieval by the {@code getCause()} method);\n@@ -300,3 +300,3 @@\n-   * Constructs a <code>BatchUpdateException<\/code> object initialized with\n-   * a given <code>reason<\/code>, <code>SQLState<\/code>,<code>cause<\/code>, and\n-   * <code>updateCounts<\/code>. The vendor code is initialized to 0.\n+   * Constructs a {@code BatchUpdateException} object initialized with\n+   * a given {@code reason}, {@code SQLState},{@code cause}, and\n+   * {@code updateCounts}. The vendor code is initialized to 0.\n@@ -306,3 +306,3 @@\n-   * @param updateCounts an array of <code>int<\/code>, with each element\n-   * indicating the update count, <code>Statement.SUCCESS_NO_INFO<\/code> or\n-   * <code>Statement.EXECUTE_FAILED<\/code> for each SQL command in\n+   * @param updateCounts an array of {@code int}, with each element\n+   * indicating the update count, {@code Statement.SUCCESS_NO_INFO} or\n+   * {@code Statement.EXECUTE_FAILED} for each SQL command in\n@@ -311,1 +311,1 @@\n-   * <code>Statement.SUCCESS_NO_INFO<\/code> for each SQL command in the batch\n+   * {@code Statement.SUCCESS_NO_INFO} for each SQL command in the batch\n@@ -320,2 +320,2 @@\n-   * @param cause the underlying reason for this <code>SQLException<\/code>\n-   * (which is saved for later retrieval by the <code>getCause()<\/code> method);\n+   * @param cause the underlying reason for this {@code SQLException}\n+   * (which is saved for later retrieval by the {@code getCause()} method);\n@@ -334,3 +334,3 @@\n-   * Constructs a <code>BatchUpdateException<\/code> object initialized with\n-   * a given <code>reason<\/code>, <code>SQLState<\/code>, <code>vendorCode<\/code>\n-   * <code>cause<\/code> and <code>updateCounts<\/code>.\n+   * Constructs a {@code BatchUpdateException} object initialized with\n+   * a given {@code reason}, {@code SQLState}, {@code vendorCode}\n+   * {@code cause} and {@code updateCounts}.\n@@ -342,3 +342,3 @@\n-   * @param updateCounts an array of <code>int<\/code>, with each element\n-   *indicating the update count, <code>Statement.SUCCESS_NO_INFO<\/code> or\n-   * <code>Statement.EXECUTE_FAILED<\/code> for each SQL command in\n+   * @param updateCounts an array of {@code int}, with each element\n+   *indicating the update count, {@code Statement.SUCCESS_NO_INFO} or\n+   * {@code Statement.EXECUTE_FAILED} for each SQL command in\n@@ -347,1 +347,1 @@\n-   * <code>Statement.SUCCESS_NO_INFO<\/code> for each SQL command in the batch\n+   * {@code Statement.SUCCESS_NO_INFO} for each SQL command in the batch\n@@ -356,1 +356,1 @@\n-   * @param cause the underlying reason for this <code>SQLException<\/code> (which is saved for later retrieval by the <code>getCause()<\/code> method);\n+   * @param cause the underlying reason for this {@code SQLException} (which is saved for later retrieval by the {@code getCause()} method);\n@@ -379,1 +379,1 @@\n-   * the <code>BatchUpdateException<\/code> was thrown.\n+   * the {@code BatchUpdateException} was thrown.\n@@ -384,1 +384,1 @@\n-   * in a batch update after a <code>BatchUpdateException<\/code> object\n+   * in a batch update after a {@code BatchUpdateException} object\n@@ -387,1 +387,1 @@\n-   * @return an array of <code>int<\/code> containing the update counts\n+   * @return an array of {@code int} containing the update counts\n@@ -393,1 +393,1 @@\n-   *  <LI><code>Statement.SUCCESS_NO_INFO<\/code> to indicate that the command\n+   *  <LI>{@code Statement.SUCCESS_NO_INFO} to indicate that the command\n@@ -395,1 +395,1 @@\n-   *  <LI><code>Statement.EXECUTE_FAILED<\/code> to indicate that the command\n+   *  <LI>{@code Statement.EXECUTE_FAILED} to indicate that the command\n@@ -406,3 +406,3 @@\n-   * Constructs a <code>BatchUpdateException<\/code> object initialized with\n-   * a given <code>reason<\/code>, <code>SQLState<\/code>, <code>vendorCode<\/code>\n-   * <code>cause<\/code> and <code>updateCounts<\/code>.\n+   * Constructs a {@code BatchUpdateException} object initialized with\n+   * a given {@code reason}, {@code SQLState}, {@code vendorCode}\n+   * {@code cause} and {@code updateCounts}.\n@@ -417,3 +417,3 @@\n-   * @param updateCounts an array of <code>long<\/code>, with each element\n-   *indicating the update count, <code>Statement.SUCCESS_NO_INFO<\/code> or\n-   * <code>Statement.EXECUTE_FAILED<\/code> for each SQL command in\n+   * @param updateCounts an array of {@code long}, with each element\n+   *indicating the update count, {@code Statement.SUCCESS_NO_INFO} or\n+   * {@code Statement.EXECUTE_FAILED} for each SQL command in\n@@ -422,1 +422,1 @@\n-   * <code>Statement.SUCCESS_NO_INFO<\/code> for each SQL command in the batch\n+   * {@code Statement.SUCCESS_NO_INFO} for each SQL command in the batch\n@@ -425,2 +425,2 @@\n-   * @param cause the underlying reason for this <code>SQLException<\/code>\n-   * (which is saved for later retrieval by the <code>getCause()<\/code> method);\n+   * @param cause the underlying reason for this {@code SQLException}\n+   * (which is saved for later retrieval by the {@code getCause()} method);\n@@ -446,1 +446,1 @@\n-   * the <code>BatchUpdateException<\/code> was thrown.\n+   * the {@code BatchUpdateException} was thrown.\n@@ -451,1 +451,1 @@\n-   * @return an array of <code>long<\/code> containing the update counts\n+   * @return an array of {@code long} containing the update counts\n@@ -457,1 +457,1 @@\n-   *  <LI><code>Statement.SUCCESS_NO_INFO<\/code> to indicate that the command\n+   *  <LI>{@code Statement.SUCCESS_NO_INFO} to indicate that the command\n@@ -459,1 +459,1 @@\n-   *  <LI><code>Statement.EXECUTE_FAILED<\/code> to indicate that the command\n+   *  <LI>{@code Statement.EXECUTE_FAILED} to indicate that the command\n","filename":"src\/java.sql\/share\/classes\/java\/sql\/BatchUpdateException.java","additions":106,"deletions":106,"binary":false,"changes":212,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n- * IN parameter values are set using the <code>set<\/code> methods inherited from\n+ * IN parameter values are set using the {@code set} methods inherited from\n@@ -49,1 +49,1 @@\n- * are retrieved after execution via the <code>get<\/code> methods provided here.\n+ * are retrieved after execution via the {@code get} methods provided here.\n@@ -51,3 +51,3 @@\n- * A <code>CallableStatement<\/code> can return one {@link ResultSet} object or\n- * multiple <code>ResultSet<\/code> objects.  Multiple\n- * <code>ResultSet<\/code> objects are handled using operations\n+ * A {@code CallableStatement} can return one {@link ResultSet} object or\n+ * multiple {@code ResultSet} objects.  Multiple\n+ * {@code ResultSet} objects are handled using operations\n@@ -56,1 +56,1 @@\n- * For maximum portability, a call's <code>ResultSet<\/code> objects and\n+ * For maximum portability, a call's {@code ResultSet} objects and\n@@ -70,2 +70,2 @@\n-     * <code>parameterIndex<\/code> to the JDBC type\n-     * <code>sqlType<\/code>.  All OUT parameters must be registered\n+     * {@code parameterIndex} to the JDBC type\n+     * {@code sqlType}.  All OUT parameters must be registered\n@@ -74,1 +74,1 @@\n-     * The JDBC type specified by <code>sqlType<\/code> for an OUT\n+     * The JDBC type specified by {@code sqlType} for an OUT\n@@ -76,1 +76,1 @@\n-     * in the <code>get<\/code> method to read the value of that parameter.\n+     * in the {@code get} method to read the value of that parameter.\n@@ -79,2 +79,2 @@\n-     * is specific to this particular database, <code>sqlType<\/code>\n-     * should be <code>java.sql.Types.OTHER<\/code>.  The method\n+     * is specific to this particular database, {@code sqlType}\n+     * should be {@code java.sql.Types.OTHER}.  The method\n@@ -85,4 +85,4 @@\n-     * @param sqlType the JDBC type code defined by <code>java.sql.Types<\/code>.\n-     *        If the parameter is of JDBC type <code>NUMERIC<\/code>\n-     *        or <code>DECIMAL<\/code>, the version of\n-     *        <code>registerOutParameter<\/code> that accepts a scale value\n+     * @param sqlType the JDBC type code defined by {@code java.sql.Types}.\n+     *        If the parameter is of JDBC type {@code NUMERIC}\n+     *        or {@code DECIMAL}, the version of\n+     *        {@code registerOutParameter} that accepts a scale value\n@@ -108,2 +108,2 @@\n-     * <code>parameterIndex<\/code> to be of JDBC type\n-     * <code>sqlType<\/code>. All OUT parameters must be registered\n+     * {@code parameterIndex} to be of JDBC type\n+     * {@code sqlType}. All OUT parameters must be registered\n@@ -112,1 +112,1 @@\n-     * The JDBC type specified by <code>sqlType<\/code> for an OUT\n+     * The JDBC type specified by {@code sqlType} for an OUT\n@@ -114,1 +114,1 @@\n-     * in the <code>get<\/code> method to read the value of that parameter.\n+     * in the {@code get} method to read the value of that parameter.\n@@ -116,3 +116,3 @@\n-     * This version of <code>registerOutParameter<\/code> should be\n-     * used when the parameter is of JDBC type <code>NUMERIC<\/code>\n-     * or <code>DECIMAL<\/code>.\n+     * This version of {@code registerOutParameter} should be\n+     * used when the parameter is of JDBC type {@code NUMERIC}\n+     * or {@code DECIMAL}.\n@@ -122,1 +122,1 @@\n-     * @param sqlType the SQL type code defined by <code>java.sql.Types<\/code>.\n+     * @param sqlType the SQL type code defined by {@code java.sql.Types}.\n@@ -142,1 +142,1 @@\n-     * SQL <code>NULL<\/code>.  Note that this method should be called only after\n+     * SQL {@code NULL}.  Note that this method should be called only after\n@@ -144,1 +144,1 @@\n-     * determining whether it is <code>null<\/code> or not.\n+     * determining whether it is {@code null} or not.\n@@ -146,2 +146,2 @@\n-     * @return <code>true<\/code> if the last parameter read was SQL\n-     * <code>NULL<\/code>; <code>false<\/code> otherwise\n+     * @return {@code true} if the last parameter read was SQL\n+     * {@code NULL}; {@code false} otherwise\n@@ -154,3 +154,3 @@\n-     * Retrieves the value of the designated JDBC <code>CHAR<\/code>,\n-     * <code>VARCHAR<\/code>, or <code>LONGVARCHAR<\/code> parameter as a\n-     * <code>String<\/code> in the Java programming language.\n+     * Retrieves the value of the designated JDBC {@code CHAR},\n+     * {@code VARCHAR}, or {@code LONGVARCHAR} parameter as a\n+     * {@code String} in the Java programming language.\n@@ -158,2 +158,2 @@\n-     * For the fixed-length type JDBC <code>CHAR<\/code>,\n-     * the <code>String<\/code> object\n+     * For the fixed-length type JDBC {@code CHAR},\n+     * the {@code String} object\n@@ -161,1 +161,1 @@\n-     * <code>CHAR<\/code> value had in the\n+     * {@code CHAR} value had in the\n@@ -166,1 +166,1 @@\n-     * @return the parameter value. If the value is SQL <code>NULL<\/code>,\n+     * @return the parameter value. If the value is SQL {@code NULL},\n@@ -168,1 +168,1 @@\n-     *         is <code>null<\/code>.\n+     *         is {@code null}.\n@@ -177,3 +177,3 @@\n-     * Retrieves the value of the designated JDBC <code>BIT<\/code>\n-     * or <code>BOOLEAN<\/code> parameter as a\n-     * <code>boolean<\/code> in the Java programming language.\n+     * Retrieves the value of the designated JDBC {@code BIT}\n+     * or {@code BOOLEAN} parameter as a\n+     * {@code boolean} in the Java programming language.\n@@ -183,2 +183,2 @@\n-     * @return the parameter value.  If the value is SQL <code>NULL<\/code>,\n-     *         the result is <code>false<\/code>.\n+     * @return the parameter value.  If the value is SQL {@code NULL},\n+     *         the result is {@code false}.\n@@ -193,2 +193,2 @@\n-     * Retrieves the value of the designated JDBC <code>TINYINT<\/code> parameter\n-     * as a <code>byte<\/code> in the Java programming language.\n+     * Retrieves the value of the designated JDBC {@code TINYINT} parameter\n+     * as a {@code byte} in the Java programming language.\n@@ -198,2 +198,2 @@\n-     * @return the parameter value.  If the value is SQL <code>NULL<\/code>, the result\n-     * is <code>0<\/code>.\n+     * @return the parameter value.  If the value is SQL {@code NULL}, the result\n+     * is {@code 0}.\n@@ -208,2 +208,2 @@\n-     * Retrieves the value of the designated JDBC <code>SMALLINT<\/code> parameter\n-     * as a <code>short<\/code> in the Java programming language.\n+     * Retrieves the value of the designated JDBC {@code SMALLINT} parameter\n+     * as a {@code short} in the Java programming language.\n@@ -213,2 +213,2 @@\n-     * @return the parameter value.  If the value is SQL <code>NULL<\/code>, the result\n-     * is <code>0<\/code>.\n+     * @return the parameter value.  If the value is SQL {@code NULL}, the result\n+     * is {@code 0}.\n@@ -223,2 +223,2 @@\n-     * Retrieves the value of the designated JDBC <code>INTEGER<\/code> parameter\n-     * as an <code>int<\/code> in the Java programming language.\n+     * Retrieves the value of the designated JDBC {@code INTEGER} parameter\n+     * as an {@code int} in the Java programming language.\n@@ -228,2 +228,2 @@\n-     * @return the parameter value.  If the value is SQL <code>NULL<\/code>, the result\n-     * is <code>0<\/code>.\n+     * @return the parameter value.  If the value is SQL {@code NULL}, the result\n+     * is {@code 0}.\n@@ -238,2 +238,2 @@\n-     * Retrieves the value of the designated JDBC <code>BIGINT<\/code> parameter\n-     * as a <code>long<\/code> in the Java programming language.\n+     * Retrieves the value of the designated JDBC {@code BIGINT} parameter\n+     * as a {@code long} in the Java programming language.\n@@ -243,2 +243,2 @@\n-     * @return the parameter value.  If the value is SQL <code>NULL<\/code>, the result\n-     * is <code>0<\/code>.\n+     * @return the parameter value.  If the value is SQL {@code NULL}, the result\n+     * is {@code 0}.\n@@ -253,2 +253,2 @@\n-     * Retrieves the value of the designated JDBC <code>FLOAT<\/code> parameter\n-     * as a <code>float<\/code> in the Java programming language.\n+     * Retrieves the value of the designated JDBC {@code FLOAT} parameter\n+     * as a {@code float} in the Java programming language.\n@@ -258,2 +258,2 @@\n-     * @return the parameter value.  If the value is SQL <code>NULL<\/code>, the result\n-     *         is <code>0<\/code>.\n+     * @return the parameter value.  If the value is SQL {@code NULL}, the result\n+     *         is {@code 0}.\n@@ -268,1 +268,1 @@\n-     * Retrieves the value of the designated JDBC <code>DOUBLE<\/code> parameter as a <code>double<\/code>\n+     * Retrieves the value of the designated JDBC {@code DOUBLE} parameter as a {@code double}\n@@ -272,2 +272,2 @@\n-     * @return the parameter value.  If the value is SQL <code>NULL<\/code>, the result\n-     *         is <code>0<\/code>.\n+     * @return the parameter value.  If the value is SQL {@code NULL}, the result\n+     *         is {@code 0}.\n@@ -282,2 +282,2 @@\n-     * Retrieves the value of the designated JDBC <code>NUMERIC<\/code> parameter as a\n-     * <code>java.math.BigDecimal<\/code> object with <i>scale<\/i> digits to\n+     * Retrieves the value of the designated JDBC {@code NUMERIC} parameter as a\n+     * {@code java.math.BigDecimal} object with <i>scale<\/i> digits to\n@@ -288,2 +288,2 @@\n-     * @return the parameter value.  If the value is SQL <code>NULL<\/code>, the result\n-     *         is <code>null<\/code>.\n+     * @return the parameter value.  If the value is SQL {@code NULL}, the result\n+     *         is {@code null}.\n@@ -304,2 +304,2 @@\n-     * Retrieves the value of the designated JDBC <code>BINARY<\/code> or\n-     * <code>VARBINARY<\/code> parameter as an array of <code>byte<\/code>\n+     * Retrieves the value of the designated JDBC {@code BINARY} or\n+     * {@code VARBINARY} parameter as an array of {@code byte}\n@@ -309,2 +309,2 @@\n-     * @return the parameter value.  If the value is SQL <code>NULL<\/code>, the result\n-     *         is <code>null<\/code>.\n+     * @return the parameter value.  If the value is SQL {@code NULL}, the result\n+     *         is {@code null}.\n@@ -319,2 +319,2 @@\n-     * Retrieves the value of the designated JDBC <code>DATE<\/code> parameter as a\n-     * <code>java.sql.Date<\/code> object.\n+     * Retrieves the value of the designated JDBC {@code DATE} parameter as a\n+     * {@code java.sql.Date} object.\n@@ -323,2 +323,2 @@\n-     * @return the parameter value.  If the value is SQL <code>NULL<\/code>, the result\n-     *         is <code>null<\/code>.\n+     * @return the parameter value.  If the value is SQL {@code NULL}, the result\n+     *         is {@code null}.\n@@ -333,2 +333,2 @@\n-     * Retrieves the value of the designated JDBC <code>TIME<\/code> parameter as a\n-     * <code>java.sql.Time<\/code> object.\n+     * Retrieves the value of the designated JDBC {@code TIME} parameter as a\n+     * {@code java.sql.Time} object.\n@@ -338,2 +338,2 @@\n-     * @return the parameter value.  If the value is SQL <code>NULL<\/code>, the result\n-     *         is <code>null<\/code>.\n+     * @return the parameter value.  If the value is SQL {@code NULL}, the result\n+     *         is {@code null}.\n@@ -348,2 +348,2 @@\n-     * Retrieves the value of the designated JDBC <code>TIMESTAMP<\/code> parameter as a\n-     * <code>java.sql.Timestamp<\/code> object.\n+     * Retrieves the value of the designated JDBC {@code TIMESTAMP} parameter as a\n+     * {@code java.sql.Timestamp} object.\n@@ -353,2 +353,2 @@\n-     * @return the parameter value.  If the value is SQL <code>NULL<\/code>, the result\n-     *         is <code>null<\/code>.\n+     * @return the parameter value.  If the value is SQL {@code NULL}, the result\n+     *         is {@code null}.\n@@ -368,3 +368,3 @@\n-     * Retrieves the value of the designated parameter as an <code>Object<\/code>\n-     * in the Java programming language. If the value is an SQL <code>NULL<\/code>,\n-     * the driver returns a Java <code>null<\/code>.\n+     * Retrieves the value of the designated parameter as an {@code Object}\n+     * in the Java programming language. If the value is an SQL {@code NULL},\n+     * the driver returns a Java {@code null}.\n@@ -374,2 +374,2 @@\n-     * <code>registerOutParameter<\/code>.  By registering the target JDBC\n-     * type as <code>java.sql.Types.OTHER<\/code>, this method can be used\n+     * {@code registerOutParameter}.  By registering the target JDBC\n+     * type as {@code java.sql.Types.OTHER}, this method can be used\n@@ -380,1 +380,1 @@\n-     * @return A <code>java.lang.Object<\/code> holding the OUT parameter value\n+     * @return A {@code java.lang.Object} holding the OUT parameter value\n@@ -393,2 +393,2 @@\n-     * Retrieves the value of the designated JDBC <code>NUMERIC<\/code> parameter as a\n-     * <code>java.math.BigDecimal<\/code> object with as many digits to the\n+     * Retrieves the value of the designated JDBC {@code NUMERIC} parameter as a\n+     * {@code java.math.BigDecimal} object with as many digits to the\n@@ -399,1 +399,1 @@\n-     * SQL <code>NULL<\/code>, the result is <code>null<\/code>.\n+     * SQL {@code NULL}, the result is {@code null}.\n@@ -410,1 +410,1 @@\n-     * <code>parameterIndex<\/code> and uses <code>map<\/code> for the custom\n+     * {@code parameterIndex} and uses {@code map} for the custom\n@@ -415,2 +415,2 @@\n-     * <code>registerOutParameter<\/code>.  By registering the target\n-     * JDBC type as <code>java.sql.Types.OTHER<\/code>, this method can\n+     * {@code registerOutParameter}.  By registering the target\n+     * JDBC type as {@code java.sql.Types.OTHER}, this method can\n@@ -420,1 +420,1 @@\n-     * @return a <code>java.lang.Object<\/code> holding the OUT parameter value\n+     * @return a {@code java.lang.Object} holding the OUT parameter value\n@@ -433,1 +433,1 @@\n-     * Retrieves the value of the designated JDBC <code>REF(&lt;structured-type&gt;)<\/code>\n+     * Retrieves the value of the designated JDBC {@code REF(<structured-type>)}\n@@ -437,3 +437,3 @@\n-     * @return the parameter value as a <code>Ref<\/code> object in the\n-     * Java programming language.  If the value was SQL <code>NULL<\/code>, the value\n-     * <code>null<\/code> is returned.\n+     * @return the parameter value as a {@code Ref} object in the\n+     * Java programming language.  If the value was SQL {@code NULL}, the value\n+     * {@code null} is returned.\n@@ -450,1 +450,1 @@\n-     * Retrieves the value of the designated JDBC <code>BLOB<\/code> parameter as a\n+     * Retrieves the value of the designated JDBC {@code BLOB} parameter as a\n@@ -453,3 +453,3 @@\n-     * @return the parameter value as a <code>Blob<\/code> object in the\n-     * Java programming language.  If the value was SQL <code>NULL<\/code>, the value\n-     * <code>null<\/code> is returned.\n+     * @return the parameter value as a {@code Blob} object in the\n+     * Java programming language.  If the value was SQL {@code NULL}, the value\n+     * {@code null} is returned.\n@@ -466,2 +466,2 @@\n-     * Retrieves the value of the designated JDBC <code>CLOB<\/code> parameter as a\n-     * <code>java.sql.Clob<\/code> object in the Java programming language.\n+     * Retrieves the value of the designated JDBC {@code CLOB} parameter as a\n+     * {@code java.sql.Clob} object in the Java programming language.\n@@ -470,3 +470,3 @@\n-     * @return the parameter value as a <code>Clob<\/code> object in the\n-     * Java programming language.  If the value was SQL <code>NULL<\/code>, the\n-     * value <code>null<\/code> is returned.\n+     * @return the parameter value as a {@code Clob} object in the\n+     * Java programming language.  If the value was SQL {@code NULL}, the\n+     * value {@code null} is returned.\n@@ -484,1 +484,1 @@\n-     * Retrieves the value of the designated JDBC <code>ARRAY<\/code> parameter as an\n+     * Retrieves the value of the designated JDBC {@code ARRAY} parameter as an\n@@ -488,3 +488,3 @@\n-     * @return the parameter value as an <code>Array<\/code> object in\n-     * the Java programming language.  If the value was SQL <code>NULL<\/code>, the\n-     * value <code>null<\/code> is returned.\n+     * @return the parameter value as an {@code Array} object in\n+     * the Java programming language.  If the value was SQL {@code NULL}, the\n+     * value {@code null} is returned.\n@@ -501,3 +501,3 @@\n-     * Retrieves the value of the designated JDBC <code>DATE<\/code> parameter as a\n-     * <code>java.sql.Date<\/code> object, using\n-     * the given <code>Calendar<\/code> object\n+     * Retrieves the value of the designated JDBC {@code DATE} parameter as a\n+     * {@code java.sql.Date} object, using\n+     * the given {@code Calendar} object\n@@ -505,1 +505,1 @@\n-     * With a <code>Calendar<\/code> object, the driver\n+     * With a {@code Calendar} object, the driver\n@@ -507,1 +507,1 @@\n-     * If no <code>Calendar<\/code> object is specified, the driver uses the\n+     * If no {@code Calendar} object is specified, the driver uses the\n@@ -512,1 +512,1 @@\n-     * @param cal the <code>Calendar<\/code> object the driver will use\n+     * @param cal the {@code Calendar} object the driver will use\n@@ -514,2 +514,2 @@\n-     * @return the parameter value.  If the value is SQL <code>NULL<\/code>, the result\n-     *         is <code>null<\/code>.\n+     * @return the parameter value.  If the value is SQL {@code NULL}, the result\n+     *         is {@code null}.\n@@ -526,3 +526,3 @@\n-     * Retrieves the value of the designated JDBC <code>TIME<\/code> parameter as a\n-     * <code>java.sql.Time<\/code> object, using\n-     * the given <code>Calendar<\/code> object\n+     * Retrieves the value of the designated JDBC {@code TIME} parameter as a\n+     * {@code java.sql.Time} object, using\n+     * the given {@code Calendar} object\n@@ -530,1 +530,1 @@\n-     * With a <code>Calendar<\/code> object, the driver\n+     * With a {@code Calendar} object, the driver\n@@ -532,1 +532,1 @@\n-     * If no <code>Calendar<\/code> object is specified, the driver uses the\n+     * If no {@code Calendar} object is specified, the driver uses the\n@@ -537,1 +537,1 @@\n-     * @param cal the <code>Calendar<\/code> object the driver will use\n+     * @param cal the {@code Calendar} object the driver will use\n@@ -539,2 +539,2 @@\n-     * @return the parameter value; if the value is SQL <code>NULL<\/code>, the result\n-     *         is <code>null<\/code>.\n+     * @return the parameter value; if the value is SQL {@code NULL}, the result\n+     *         is {@code null}.\n@@ -551,5 +551,5 @@\n-     * Retrieves the value of the designated JDBC <code>TIMESTAMP<\/code> parameter as a\n-     * <code>java.sql.Timestamp<\/code> object, using\n-     * the given <code>Calendar<\/code> object to construct\n-     * the <code>Timestamp<\/code> object.\n-     * With a <code>Calendar<\/code> object, the driver\n+     * Retrieves the value of the designated JDBC {@code TIMESTAMP} parameter as a\n+     * {@code java.sql.Timestamp} object, using\n+     * the given {@code Calendar} object to construct\n+     * the {@code Timestamp} object.\n+     * With a {@code Calendar} object, the driver\n@@ -557,1 +557,1 @@\n-     * If no <code>Calendar<\/code> object is specified, the driver uses the\n+     * If no {@code Calendar} object is specified, the driver uses the\n@@ -563,1 +563,1 @@\n-     * @param cal the <code>Calendar<\/code> object the driver will use\n+     * @param cal the {@code Calendar} object the driver will use\n@@ -565,2 +565,2 @@\n-     * @return the parameter value.  If the value is SQL <code>NULL<\/code>, the result\n-     *         is <code>null<\/code>.\n+     * @return the parameter value.  If the value is SQL {@code NULL}, the result\n+     *         is {@code null}.\n@@ -580,4 +580,4 @@\n-     * the method <code>registerOutParameter<\/code>\n-     * should be used for a user-defined or <code>REF<\/code> output parameter.  Examples\n-     * of user-defined types include: <code>STRUCT<\/code>, <code>DISTINCT<\/code>,\n-     * <code>JAVA_OBJECT<\/code>, and named array types.\n+     * the method {@code registerOutParameter}\n+     * should be used for a user-defined or {@code REF} output parameter.  Examples\n+     * of user-defined types include: {@code STRUCT}, {@code DISTINCT},\n+     * {@code JAVA_OBJECT}, and named array types.\n@@ -588,1 +588,1 @@\n-     * type name of the parameter should also be given, while a <code>REF<\/code>\n+     * type name of the parameter should also be given, while a {@code REF}\n@@ -593,1 +593,1 @@\n-     * user-defined and <code>REF<\/code> parameters.\n+     * user-defined and {@code REF} parameters.\n@@ -595,1 +595,1 @@\n-     * Although it is intended for user-defined and <code>REF<\/code> parameters,\n+     * Although it is intended for user-defined and {@code REF} parameters,\n@@ -597,1 +597,1 @@\n-     * If the parameter does not have a user-defined or <code>REF<\/code> type, the\n+     * If the parameter does not have a user-defined or {@code REF} type, the\n@@ -627,2 +627,2 @@\n-     * <code>parameterName<\/code> to the JDBC type\n-     * <code>sqlType<\/code>.  All OUT parameters must be registered\n+     * {@code parameterName} to the JDBC type\n+     * {@code sqlType}.  All OUT parameters must be registered\n@@ -631,1 +631,1 @@\n-     * The JDBC type specified by <code>sqlType<\/code> for an OUT\n+     * The JDBC type specified by {@code sqlType} for an OUT\n@@ -633,1 +633,1 @@\n-     * in the <code>get<\/code> method to read the value of that parameter.\n+     * in the {@code get} method to read the value of that parameter.\n@@ -636,2 +636,2 @@\n-     * is specific to this particular database, <code>sqlType<\/code>\n-     * should be <code>java.sql.Types.OTHER<\/code>.  The method\n+     * is specific to this particular database, {@code sqlType}\n+     * should be {@code java.sql.Types.OTHER}.  The method\n@@ -640,4 +640,4 @@\n-     * @param sqlType the JDBC type code defined by <code>java.sql.Types<\/code>.\n-     * If the parameter is of JDBC type <code>NUMERIC<\/code>\n-     * or <code>DECIMAL<\/code>, the version of\n-     * <code>registerOutParameter<\/code> that accepts a scale value\n+     * @param sqlType the JDBC type code defined by {@code java.sql.Types}.\n+     * If the parameter is of JDBC type {@code NUMERIC}\n+     * or {@code DECIMAL}, the version of\n+     * {@code registerOutParameter} that accepts a scale value\n@@ -664,2 +664,2 @@\n-     * <code>parameterName<\/code> to be of JDBC type\n-     * <code>sqlType<\/code>.  All OUT parameters must be registered\n+     * {@code parameterName} to be of JDBC type\n+     * {@code sqlType}.  All OUT parameters must be registered\n@@ -668,1 +668,1 @@\n-     * The JDBC type specified by <code>sqlType<\/code> for an OUT\n+     * The JDBC type specified by {@code sqlType} for an OUT\n@@ -670,1 +670,1 @@\n-     * in the <code>get<\/code> method to read the value of that parameter.\n+     * in the {@code get} method to read the value of that parameter.\n@@ -672,3 +672,3 @@\n-     * This version of <code>registerOutParameter<\/code> should be\n-     * used when the parameter is of JDBC type <code>NUMERIC<\/code>\n-     * or <code>DECIMAL<\/code>.\n+     * This version of {@code registerOutParameter} should be\n+     * used when the parameter is of JDBC type {@code NUMERIC}\n+     * or {@code DECIMAL}.\n@@ -677,1 +677,1 @@\n-     * @param sqlType SQL type code defined by <code>java.sql.Types<\/code>.\n+     * @param sqlType SQL type code defined by {@code java.sql.Types}.\n@@ -699,1 +699,1 @@\n-     * the method <code>registerOutParameter<\/code>\n+     * the method {@code registerOutParameter}\n@@ -721,1 +721,1 @@\n-     * must use the <code>getXXX<\/code> method whose Java type XXX corresponds to the\n+     * must use the {@code getXXX} method whose Java type XXX corresponds to the\n@@ -745,2 +745,2 @@\n-     * Retrieves the value of the designated JDBC <code>DATALINK<\/code> parameter as a\n-     * <code>java.net.URL<\/code> object.\n+     * Retrieves the value of the designated JDBC {@code DATALINK} parameter as a\n+     * {@code java.net.URL} object.\n@@ -749,2 +749,2 @@\n-     * @return a <code>java.net.URL<\/code> object that represents the\n-     *         JDBC <code>DATALINK<\/code> value used as the designated\n+     * @return a {@code java.net.URL} object that represents the\n+     *         JDBC {@code DATALINK} value used as the designated\n@@ -765,2 +765,2 @@\n-     * Sets the designated parameter to the given <code>java.net.URL<\/code> object.\n-     * The driver converts this to an SQL <code>DATALINK<\/code> value when\n+     * Sets the designated parameter to the given {@code java.net.URL} object.\n+     * The driver converts this to an SQL {@code DATALINK} value when\n@@ -783,1 +783,1 @@\n-     * Sets the designated parameter to SQL <code>NULL<\/code>.\n+     * Sets the designated parameter to SQL {@code NULL}.\n@@ -788,1 +788,1 @@\n-     * @param sqlType the SQL type code defined in <code>java.sql.Types<\/code>\n+     * @param sqlType the SQL type code defined in {@code java.sql.Types}\n@@ -799,1 +799,1 @@\n-     * Sets the designated parameter to the given Java <code>boolean<\/code> value.\n+     * Sets the designated parameter to the given Java {@code boolean} value.\n@@ -801,1 +801,1 @@\n-     * to an SQL <code>BIT<\/code> or <code>BOOLEAN<\/code> value when it sends it to the database.\n+     * to an SQL {@code BIT} or {@code BOOLEAN} value when it sends it to the database.\n@@ -816,1 +816,1 @@\n-     * Sets the designated parameter to the given Java <code>byte<\/code> value.\n+     * Sets the designated parameter to the given Java {@code byte} value.\n@@ -818,1 +818,1 @@\n-     * to an SQL <code>TINYINT<\/code> value when it sends it to the database.\n+     * to an SQL {@code TINYINT} value when it sends it to the database.\n@@ -833,1 +833,1 @@\n-     * Sets the designated parameter to the given Java <code>short<\/code> value.\n+     * Sets the designated parameter to the given Java {@code short} value.\n@@ -835,1 +835,1 @@\n-     * to an SQL <code>SMALLINT<\/code> value when it sends it to the database.\n+     * to an SQL {@code SMALLINT} value when it sends it to the database.\n@@ -850,1 +850,1 @@\n-     * Sets the designated parameter to the given Java <code>int<\/code> value.\n+     * Sets the designated parameter to the given Java {@code int} value.\n@@ -852,1 +852,1 @@\n-     * to an SQL <code>INTEGER<\/code> value when it sends it to the database.\n+     * to an SQL {@code INTEGER} value when it sends it to the database.\n@@ -867,1 +867,1 @@\n-     * Sets the designated parameter to the given Java <code>long<\/code> value.\n+     * Sets the designated parameter to the given Java {@code long} value.\n@@ -869,1 +869,1 @@\n-     * to an SQL <code>BIGINT<\/code> value when it sends it to the database.\n+     * to an SQL {@code BIGINT} value when it sends it to the database.\n@@ -884,1 +884,1 @@\n-     * Sets the designated parameter to the given Java <code>float<\/code> value.\n+     * Sets the designated parameter to the given Java {@code float} value.\n@@ -886,1 +886,1 @@\n-     * to an SQL <code>FLOAT<\/code> value when it sends it to the database.\n+     * to an SQL {@code FLOAT} value when it sends it to the database.\n@@ -901,1 +901,1 @@\n-     * Sets the designated parameter to the given Java <code>double<\/code> value.\n+     * Sets the designated parameter to the given Java {@code double} value.\n@@ -903,1 +903,1 @@\n-     * to an SQL <code>DOUBLE<\/code> value when it sends it to the database.\n+     * to an SQL {@code DOUBLE} value when it sends it to the database.\n@@ -919,2 +919,2 @@\n-     * <code>java.math.BigDecimal<\/code> value.\n-     * The driver converts this to an SQL <code>NUMERIC<\/code> value when\n+     * {@code java.math.BigDecimal} value.\n+     * The driver converts this to an SQL {@code NUMERIC} value when\n@@ -936,1 +936,1 @@\n-     * Sets the designated parameter to the given Java <code>String<\/code> value.\n+     * Sets the designated parameter to the given Java {@code String} value.\n@@ -938,1 +938,1 @@\n-     * to an SQL <code>VARCHAR<\/code> or <code>LONGVARCHAR<\/code> value\n+     * to an SQL {@code VARCHAR} or {@code LONGVARCHAR} value\n@@ -940,1 +940,1 @@\n-     * size relative to the driver's limits on <code>VARCHAR<\/code> values)\n+     * size relative to the driver's limits on {@code VARCHAR} values)\n@@ -957,3 +957,3 @@\n-     * The driver converts this to an SQL <code>VARBINARY<\/code> or\n-     * <code>LONGVARBINARY<\/code> (depending on the argument's size relative\n-     * to the driver's limits on <code>VARBINARY<\/code> values) when it sends\n+     * The driver converts this to an SQL {@code VARBINARY} or\n+     * {@code LONGVARBINARY} (depending on the argument's size relative\n+     * to the driver's limits on {@code VARBINARY} values) when it sends\n@@ -975,1 +975,1 @@\n-     * Sets the designated parameter to the given <code>java.sql.Date<\/code> value\n+     * Sets the designated parameter to the given {@code java.sql.Date} value\n@@ -979,1 +979,1 @@\n-     * to an SQL <code>DATE<\/code> value when it sends it to the database.\n+     * to an SQL {@code DATE} value when it sends it to the database.\n@@ -995,1 +995,1 @@\n-     * Sets the designated parameter to the given <code>java.sql.Time<\/code> value.\n+     * Sets the designated parameter to the given {@code java.sql.Time} value.\n@@ -997,1 +997,1 @@\n-     * to an SQL <code>TIME<\/code> value when it sends it to the database.\n+     * to an SQL {@code TIME} value when it sends it to the database.\n@@ -1013,1 +1013,1 @@\n-     * Sets the designated parameter to the given <code>java.sql.Timestamp<\/code> value.\n+     * Sets the designated parameter to the given {@code java.sql.Timestamp} value.\n@@ -1015,1 +1015,1 @@\n-     * converts this to an SQL <code>TIMESTAMP<\/code> value when it sends it to the\n+     * converts this to an SQL {@code TIMESTAMP} value when it sends it to the\n@@ -1034,1 +1034,1 @@\n-     * When a very large ASCII value is input to a <code>LONGVARCHAR<\/code>\n+     * When a very large ASCII value is input to a {@code LONGVARCHAR}\n@@ -1036,1 +1036,1 @@\n-     * <code>java.io.InputStream<\/code>. Data will be read from the stream\n+     * {@code java.io.InputStream}. Data will be read from the stream\n@@ -1060,1 +1060,1 @@\n-     * When a very large binary value is input to a <code>LONGVARBINARY<\/code>\n+     * When a very large binary value is input to a {@code LONGVARBINARY}\n@@ -1062,1 +1062,1 @@\n-     * <code>java.io.InputStream<\/code> object. The data will be read from the stream\n+     * {@code java.io.InputStream} object. The data will be read from the stream\n@@ -1089,2 +1089,2 @@\n-     * interface <code>SQLData<\/code>),\n-     * the JDBC driver should call the method <code>SQLData.writeSQL<\/code> to write it\n+     * interface {@code SQLData}),\n+     * the JDBC driver should call the method {@code SQLData.writeSQL} to write it\n@@ -1093,3 +1093,3 @@\n-     * <code>Ref<\/code>, <code>Blob<\/code>, <code>Clob<\/code>,  <code>NClob<\/code>,\n-     *  <code>Struct<\/code>, <code>java.net.URL<\/code>,\n-     * or <code>Array<\/code>, the driver should pass it to the database as a\n+     * {@code Ref}, {@code Blob}, {@code Clob},  {@code NClob},\n+     *  {@code Struct}, {@code java.net.URL},\n+     * or {@code Array}, the driver should pass it to the database as a\n@@ -1146,1 +1146,1 @@\n-     * Java <code>Object<\/code> types to SQL types.  The given argument\n+     * Java {@code Object} types to SQL types.  The given argument\n@@ -1153,2 +1153,2 @@\n-     * If the object is of a class implementing the interface <code>SQLData<\/code>,\n-     * the JDBC driver should call the method <code>SQLData.writeSQL<\/code>\n+     * If the object is of a class implementing the interface {@code SQLData},\n+     * the JDBC driver should call the method {@code SQLData.writeSQL}\n@@ -1157,3 +1157,3 @@\n-     * <code>Ref<\/code>, <code>Blob<\/code>, <code>Clob<\/code>,  <code>NClob<\/code>,\n-     *  <code>Struct<\/code>, <code>java.net.URL<\/code>,\n-     * or <code>Array<\/code>, the driver should pass it to the database as a\n+     * {@code Ref}, {@code Blob}, {@code Clob},  {@code NClob},\n+     *  {@code Struct}, {@code java.net.URL},\n+     * or {@code Array}, the driver should pass it to the database as a\n@@ -1166,2 +1166,2 @@\n-     * the backend. For maximum portability, the <code>setNull<\/code> or the\n-     * <code>setObject(String parameterName, Object x, int sqlType)<\/code>\n+     * the backend. For maximum portability, the {@code setNull} or the\n+     * {@code setObject(String parameterName, Object x, int sqlType)}\n@@ -1169,1 +1169,1 @@\n-     * instead of <code>setObject(String parameterName, Object x)<\/code>.\n+     * instead of {@code setObject(String parameterName, Object x)}.\n@@ -1186,1 +1186,1 @@\n-     * Sets the designated parameter to the given <code>Reader<\/code>\n+     * Sets the designated parameter to the given {@code Reader}\n@@ -1188,1 +1188,1 @@\n-     * When a very large UNICODE value is input to a <code>LONGVARCHAR<\/code>\n+     * When a very large UNICODE value is input to a {@code LONGVARCHAR}\n@@ -1190,1 +1190,1 @@\n-     * <code>java.io.Reader<\/code> object. The data will be read from the stream\n+     * {@code java.io.Reader} object. The data will be read from the stream\n@@ -1199,1 +1199,1 @@\n-     * @param reader the <code>java.io.Reader<\/code> object that\n+     * @param reader the {@code java.io.Reader} object that\n@@ -1214,3 +1214,3 @@\n-     * Sets the designated parameter to the given <code>java.sql.Date<\/code> value,\n-     * using the given <code>Calendar<\/code> object.  The driver uses\n-     * the <code>Calendar<\/code> object to construct an SQL <code>DATE<\/code> value,\n+     * Sets the designated parameter to the given {@code java.sql.Date} value,\n+     * using the given {@code Calendar} object.  The driver uses\n+     * the {@code Calendar} object to construct an SQL {@code DATE} value,\n@@ -1218,1 +1218,1 @@\n-     * a <code>Calendar<\/code> object, the driver can calculate the date\n+     * a {@code Calendar} object, the driver can calculate the date\n@@ -1220,1 +1220,1 @@\n-     * <code>Calendar<\/code> object is specified, the driver uses the default\n+     * {@code Calendar} object is specified, the driver uses the default\n@@ -1225,1 +1225,1 @@\n-     * @param cal the <code>Calendar<\/code> object the driver will use\n+     * @param cal the {@code Calendar} object the driver will use\n@@ -1239,3 +1239,3 @@\n-     * Sets the designated parameter to the given <code>java.sql.Time<\/code> value,\n-     * using the given <code>Calendar<\/code> object.  The driver uses\n-     * the <code>Calendar<\/code> object to construct an SQL <code>TIME<\/code> value,\n+     * Sets the designated parameter to the given {@code java.sql.Time} value,\n+     * using the given {@code Calendar} object.  The driver uses\n+     * the {@code Calendar} object to construct an SQL {@code TIME} value,\n@@ -1243,1 +1243,1 @@\n-     * a <code>Calendar<\/code> object, the driver can calculate the time\n+     * a {@code Calendar} object, the driver can calculate the time\n@@ -1245,1 +1245,1 @@\n-     * <code>Calendar<\/code> object is specified, the driver uses the default\n+     * {@code Calendar} object is specified, the driver uses the default\n@@ -1250,1 +1250,1 @@\n-     * @param cal the <code>Calendar<\/code> object the driver will use\n+     * @param cal the {@code Calendar} object the driver will use\n@@ -1264,3 +1264,3 @@\n-     * Sets the designated parameter to the given <code>java.sql.Timestamp<\/code> value,\n-     * using the given <code>Calendar<\/code> object.  The driver uses\n-     * the <code>Calendar<\/code> object to construct an SQL <code>TIMESTAMP<\/code> value,\n+     * Sets the designated parameter to the given {@code java.sql.Timestamp} value,\n+     * using the given {@code Calendar} object.  The driver uses\n+     * the {@code Calendar} object to construct an SQL {@code TIMESTAMP} value,\n@@ -1268,1 +1268,1 @@\n-     * a <code>Calendar<\/code> object, the driver can calculate the timestamp\n+     * a {@code Calendar} object, the driver can calculate the timestamp\n@@ -1270,1 +1270,1 @@\n-     * <code>Calendar<\/code> object is specified, the driver uses the default\n+     * {@code Calendar} object is specified, the driver uses the default\n@@ -1275,1 +1275,1 @@\n-     * @param cal the <code>Calendar<\/code> object the driver will use\n+     * @param cal the {@code Calendar} object the driver will use\n@@ -1289,2 +1289,2 @@\n-     * Sets the designated parameter to SQL <code>NULL<\/code>.\n-     * This version of the method <code>setNull<\/code> should\n+     * Sets the designated parameter to SQL {@code NULL}.\n+     * This version of the method {@code setNull} should\n@@ -1308,1 +1308,1 @@\n-     * @param sqlType a value from <code>java.sql.Types<\/code>\n+     * @param sqlType a value from {@code java.sql.Types}\n@@ -1311,1 +1311,1 @@\n-     *        SQL <code>REF<\/code> value\n+     *        SQL {@code REF} value\n@@ -1323,2 +1323,2 @@\n-     * Retrieves the value of a JDBC <code>CHAR<\/code>, <code>VARCHAR<\/code>,\n-     * or <code>LONGVARCHAR<\/code> parameter as a <code>String<\/code> in\n+     * Retrieves the value of a JDBC {@code CHAR}, {@code VARCHAR},\n+     * or {@code LONGVARCHAR} parameter as a {@code String} in\n@@ -1327,2 +1327,2 @@\n-     * For the fixed-length type JDBC <code>CHAR<\/code>,\n-     * the <code>String<\/code> object\n+     * For the fixed-length type JDBC {@code CHAR},\n+     * the {@code String} object\n@@ -1330,1 +1330,1 @@\n-     * <code>CHAR<\/code> value had in the\n+     * {@code CHAR} value had in the\n@@ -1333,2 +1333,2 @@\n-     * @return the parameter value. If the value is SQL <code>NULL<\/code>, the result\n-     * is <code>null<\/code>.\n+     * @return the parameter value. If the value is SQL {@code NULL}, the result\n+     * is {@code null}.\n@@ -1346,1 +1346,1 @@\n-     * Retrieves the value of a JDBC <code>BIT<\/code> or <code>BOOLEAN<\/code>\n+     * Retrieves the value of a JDBC {@code BIT} or {@code BOOLEAN}\n@@ -1348,1 +1348,1 @@\n-     * <code>boolean<\/code> in the Java programming language.\n+     * {@code boolean} in the Java programming language.\n@@ -1350,2 +1350,2 @@\n-     * @return the parameter value.  If the value is SQL <code>NULL<\/code>, the result\n-     * is <code>false<\/code>.\n+     * @return the parameter value.  If the value is SQL {@code NULL}, the result\n+     * is {@code false}.\n@@ -1363,1 +1363,1 @@\n-     * Retrieves the value of a JDBC <code>TINYINT<\/code> parameter as a <code>byte<\/code>\n+     * Retrieves the value of a JDBC {@code TINYINT} parameter as a {@code byte}\n@@ -1366,2 +1366,2 @@\n-     * @return the parameter value.  If the value is SQL <code>NULL<\/code>, the result\n-     * is <code>0<\/code>.\n+     * @return the parameter value.  If the value is SQL {@code NULL}, the result\n+     * is {@code 0}.\n@@ -1379,1 +1379,1 @@\n-     * Retrieves the value of a JDBC <code>SMALLINT<\/code> parameter as a <code>short<\/code>\n+     * Retrieves the value of a JDBC {@code SMALLINT} parameter as a {@code short}\n@@ -1382,2 +1382,2 @@\n-     * @return the parameter value.  If the value is SQL <code>NULL<\/code>, the result\n-     * is <code>0<\/code>.\n+     * @return the parameter value.  If the value is SQL {@code NULL}, the result\n+     * is {@code 0}.\n@@ -1395,1 +1395,1 @@\n-     * Retrieves the value of a JDBC <code>INTEGER<\/code> parameter as an <code>int<\/code>\n+     * Retrieves the value of a JDBC {@code INTEGER} parameter as an {@code int}\n@@ -1399,2 +1399,2 @@\n-     * @return the parameter value.  If the value is SQL <code>NULL<\/code>,\n-     *         the result is <code>0<\/code>.\n+     * @return the parameter value.  If the value is SQL {@code NULL},\n+     *         the result is {@code 0}.\n@@ -1412,1 +1412,1 @@\n-     * Retrieves the value of a JDBC <code>BIGINT<\/code> parameter as a <code>long<\/code>\n+     * Retrieves the value of a JDBC {@code BIGINT} parameter as a {@code long}\n@@ -1416,2 +1416,2 @@\n-     * @return the parameter value.  If the value is SQL <code>NULL<\/code>,\n-     *         the result is <code>0<\/code>.\n+     * @return the parameter value.  If the value is SQL {@code NULL},\n+     *         the result is {@code 0}.\n@@ -1429,1 +1429,1 @@\n-     * Retrieves the value of a JDBC <code>FLOAT<\/code> parameter as a <code>float<\/code>\n+     * Retrieves the value of a JDBC {@code FLOAT} parameter as a {@code float}\n@@ -1432,2 +1432,2 @@\n-     * @return the parameter value.  If the value is SQL <code>NULL<\/code>,\n-     *         the result is <code>0<\/code>.\n+     * @return the parameter value.  If the value is SQL {@code NULL},\n+     *         the result is {@code 0}.\n@@ -1445,1 +1445,1 @@\n-     * Retrieves the value of a JDBC <code>DOUBLE<\/code> parameter as a <code>double<\/code>\n+     * Retrieves the value of a JDBC {@code DOUBLE} parameter as a {@code double}\n@@ -1448,2 +1448,2 @@\n-     * @return the parameter value.  If the value is SQL <code>NULL<\/code>,\n-     *         the result is <code>0<\/code>.\n+     * @return the parameter value.  If the value is SQL {@code NULL},\n+     *         the result is {@code 0}.\n@@ -1461,2 +1461,2 @@\n-     * Retrieves the value of a JDBC <code>BINARY<\/code> or <code>VARBINARY<\/code>\n-     * parameter as an array of <code>byte<\/code> values in the Java\n+     * Retrieves the value of a JDBC {@code BINARY} or {@code VARBINARY}\n+     * parameter as an array of {@code byte} values in the Java\n@@ -1465,2 +1465,2 @@\n-     * @return the parameter value.  If the value is SQL <code>NULL<\/code>, the result is\n-     *  <code>null<\/code>.\n+     * @return the parameter value.  If the value is SQL {@code NULL}, the result is\n+     *  {@code null}.\n@@ -1478,2 +1478,2 @@\n-     * Retrieves the value of a JDBC <code>DATE<\/code> parameter as a\n-     * <code>java.sql.Date<\/code> object.\n+     * Retrieves the value of a JDBC {@code DATE} parameter as a\n+     * {@code java.sql.Date} object.\n@@ -1481,2 +1481,2 @@\n-     * @return the parameter value.  If the value is SQL <code>NULL<\/code>, the result\n-     * is <code>null<\/code>.\n+     * @return the parameter value.  If the value is SQL {@code NULL}, the result\n+     * is {@code null}.\n@@ -1494,2 +1494,2 @@\n-     * Retrieves the value of a JDBC <code>TIME<\/code> parameter as a\n-     * <code>java.sql.Time<\/code> object.\n+     * Retrieves the value of a JDBC {@code TIME} parameter as a\n+     * {@code java.sql.Time} object.\n@@ -1497,2 +1497,2 @@\n-     * @return the parameter value.  If the value is SQL <code>NULL<\/code>, the result\n-     * is <code>null<\/code>.\n+     * @return the parameter value.  If the value is SQL {@code NULL}, the result\n+     * is {@code null}.\n@@ -1510,2 +1510,2 @@\n-     * Retrieves the value of a JDBC <code>TIMESTAMP<\/code> parameter as a\n-     * <code>java.sql.Timestamp<\/code> object.\n+     * Retrieves the value of a JDBC {@code TIMESTAMP} parameter as a\n+     * {@code java.sql.Timestamp} object.\n@@ -1513,2 +1513,2 @@\n-     * @return the parameter value.  If the value is SQL <code>NULL<\/code>, the result\n-     * is <code>null<\/code>.\n+     * @return the parameter value.  If the value is SQL {@code NULL}, the result\n+     * is {@code null}.\n@@ -1526,3 +1526,3 @@\n-     * Retrieves the value of a parameter as an <code>Object<\/code> in the Java\n-     * programming language. If the value is an SQL <code>NULL<\/code>, the\n-     * driver returns a Java <code>null<\/code>.\n+     * Retrieves the value of a parameter as an {@code Object} in the Java\n+     * programming language. If the value is an SQL {@code NULL}, the\n+     * driver returns a Java {@code null}.\n@@ -1532,2 +1532,2 @@\n-     * <code>registerOutParameter<\/code>.  By registering the target JDBC\n-     * type as <code>java.sql.Types.OTHER<\/code>, this method can be used\n+     * {@code registerOutParameter}.  By registering the target JDBC\n+     * type as {@code java.sql.Types.OTHER}, this method can be used\n@@ -1536,1 +1536,1 @@\n-     * @return A <code>java.lang.Object<\/code> holding the OUT parameter value.\n+     * @return A {@code java.lang.Object} holding the OUT parameter value.\n@@ -1549,2 +1549,2 @@\n-     * Retrieves the value of a JDBC <code>NUMERIC<\/code> parameter as a\n-     * <code>java.math.BigDecimal<\/code> object with as many digits to the\n+     * Retrieves the value of a JDBC {@code NUMERIC} parameter as a\n+     * {@code java.math.BigDecimal} object with as many digits to the\n@@ -1554,1 +1554,1 @@\n-     * SQL <code>NULL<\/code>, the result is <code>null<\/code>.\n+     * SQL {@code NULL}, the result is {@code null}.\n@@ -1567,1 +1567,1 @@\n-     * <code>parameterName<\/code> and uses <code>map<\/code> for the custom\n+     * {@code parameterName} and uses {@code map} for the custom\n@@ -1572,2 +1572,2 @@\n-     * <code>registerOutParameter<\/code>.  By registering the target\n-     * JDBC type as <code>java.sql.Types.OTHER<\/code>, this method can\n+     * {@code registerOutParameter}.  By registering the target\n+     * JDBC type as {@code java.sql.Types.OTHER}, this method can\n@@ -1577,1 +1577,1 @@\n-     * @return a <code>java.lang.Object<\/code> holding the OUT parameter value\n+     * @return a {@code java.lang.Object} holding the OUT parameter value\n@@ -1590,1 +1590,1 @@\n-     * Retrieves the value of a JDBC <code>REF(&lt;structured-type&gt;)<\/code>\n+     * Retrieves the value of a JDBC {@code REF(<structured-type>)}\n@@ -1594,3 +1594,3 @@\n-     * @return the parameter value as a <code>Ref<\/code> object in the\n-     *         Java programming language.  If the value was SQL <code>NULL<\/code>,\n-     *         the value <code>null<\/code> is returned.\n+     * @return the parameter value as a {@code Ref} object in the\n+     *         Java programming language.  If the value was SQL {@code NULL},\n+     *         the value {@code null} is returned.\n@@ -1607,1 +1607,1 @@\n-     * Retrieves the value of a JDBC <code>BLOB<\/code> parameter as a\n+     * Retrieves the value of a JDBC {@code BLOB} parameter as a\n@@ -1611,3 +1611,3 @@\n-     * @return the parameter value as a <code>Blob<\/code> object in the\n-     *         Java programming language.  If the value was SQL <code>NULL<\/code>,\n-     *         the value <code>null<\/code> is returned.\n+     * @return the parameter value as a {@code Blob} object in the\n+     *         Java programming language.  If the value was SQL {@code NULL},\n+     *         the value {@code null} is returned.\n@@ -1624,2 +1624,2 @@\n-     * Retrieves the value of a JDBC <code>CLOB<\/code> parameter as a\n-     * <code>java.sql.Clob<\/code> object in the Java programming language.\n+     * Retrieves the value of a JDBC {@code CLOB} parameter as a\n+     * {@code java.sql.Clob} object in the Java programming language.\n@@ -1627,3 +1627,3 @@\n-     * @return the parameter value as a <code>Clob<\/code> object in the\n-     *         Java programming language.  If the value was SQL <code>NULL<\/code>,\n-     *         the value <code>null<\/code> is returned.\n+     * @return the parameter value as a {@code Clob} object in the\n+     *         Java programming language.  If the value was SQL {@code NULL},\n+     *         the value {@code null} is returned.\n@@ -1640,1 +1640,1 @@\n-     * Retrieves the value of a JDBC <code>ARRAY<\/code> parameter as an\n+     * Retrieves the value of a JDBC {@code ARRAY} parameter as an\n@@ -1644,3 +1644,3 @@\n-     * @return the parameter value as an <code>Array<\/code> object in\n-     *         Java programming language.  If the value was SQL <code>NULL<\/code>,\n-     *         the value <code>null<\/code> is returned.\n+     * @return the parameter value as an {@code Array} object in\n+     *         Java programming language.  If the value was SQL {@code NULL},\n+     *         the value {@code null} is returned.\n@@ -1657,3 +1657,3 @@\n-     * Retrieves the value of a JDBC <code>DATE<\/code> parameter as a\n-     * <code>java.sql.Date<\/code> object, using\n-     * the given <code>Calendar<\/code> object\n+     * Retrieves the value of a JDBC {@code DATE} parameter as a\n+     * {@code java.sql.Date} object, using\n+     * the given {@code Calendar} object\n@@ -1661,1 +1661,1 @@\n-     * With a <code>Calendar<\/code> object, the driver\n+     * With a {@code Calendar} object, the driver\n@@ -1663,1 +1663,1 @@\n-     * If no <code>Calendar<\/code> object is specified, the driver uses the\n+     * If no {@code Calendar} object is specified, the driver uses the\n@@ -1667,1 +1667,1 @@\n-     * @param cal the <code>Calendar<\/code> object the driver will use\n+     * @param cal the {@code Calendar} object the driver will use\n@@ -1669,2 +1669,2 @@\n-     * @return the parameter value.  If the value is SQL <code>NULL<\/code>,\n-     * the result is <code>null<\/code>.\n+     * @return the parameter value.  If the value is SQL {@code NULL},\n+     * the result is {@code null}.\n@@ -1683,3 +1683,3 @@\n-     * Retrieves the value of a JDBC <code>TIME<\/code> parameter as a\n-     * <code>java.sql.Time<\/code> object, using\n-     * the given <code>Calendar<\/code> object\n+     * Retrieves the value of a JDBC {@code TIME} parameter as a\n+     * {@code java.sql.Time} object, using\n+     * the given {@code Calendar} object\n@@ -1687,1 +1687,1 @@\n-     * With a <code>Calendar<\/code> object, the driver\n+     * With a {@code Calendar} object, the driver\n@@ -1689,1 +1689,1 @@\n-     * If no <code>Calendar<\/code> object is specified, the driver uses the\n+     * If no {@code Calendar} object is specified, the driver uses the\n@@ -1693,1 +1693,1 @@\n-     * @param cal the <code>Calendar<\/code> object the driver will use\n+     * @param cal the {@code Calendar} object the driver will use\n@@ -1695,2 +1695,2 @@\n-     * @return the parameter value; if the value is SQL <code>NULL<\/code>, the result is\n-     * <code>null<\/code>.\n+     * @return the parameter value; if the value is SQL {@code NULL}, the result is\n+     * {@code null}.\n@@ -1709,5 +1709,5 @@\n-     * Retrieves the value of a JDBC <code>TIMESTAMP<\/code> parameter as a\n-     * <code>java.sql.Timestamp<\/code> object, using\n-     * the given <code>Calendar<\/code> object to construct\n-     * the <code>Timestamp<\/code> object.\n-     * With a <code>Calendar<\/code> object, the driver\n+     * Retrieves the value of a JDBC {@code TIMESTAMP} parameter as a\n+     * {@code java.sql.Timestamp} object, using\n+     * the given {@code Calendar} object to construct\n+     * the {@code Timestamp} object.\n+     * With a {@code Calendar} object, the driver\n@@ -1715,1 +1715,1 @@\n-     * If no <code>Calendar<\/code> object is specified, the driver uses the\n+     * If no {@code Calendar} object is specified, the driver uses the\n@@ -1720,1 +1720,1 @@\n-     * @param cal the <code>Calendar<\/code> object the driver will use\n+     * @param cal the {@code Calendar} object the driver will use\n@@ -1722,2 +1722,2 @@\n-     * @return the parameter value.  If the value is SQL <code>NULL<\/code>, the result is\n-     * <code>null<\/code>.\n+     * @return the parameter value.  If the value is SQL {@code NULL}, the result is\n+     * {@code null}.\n@@ -1736,2 +1736,2 @@\n-     * Retrieves the value of a JDBC <code>DATALINK<\/code> parameter as a\n-     * <code>java.net.URL<\/code> object.\n+     * Retrieves the value of a JDBC {@code DATALINK} parameter as a\n+     * {@code java.net.URL} object.\n@@ -1740,3 +1740,3 @@\n-     * @return the parameter value as a <code>java.net.URL<\/code> object in the\n-     * Java programming language.  If the value was SQL <code>NULL<\/code>, the\n-     * value <code>null<\/code> is returned.\n+     * @return the parameter value as a {@code java.net.URL} object in the\n+     * Java programming language.  If the value was SQL {@code NULL}, the\n+     * value {@code null} is returned.\n@@ -1757,2 +1757,2 @@\n-     * Retrieves the value of the designated JDBC <code>ROWID<\/code> parameter as a\n-     * <code>java.sql.RowId<\/code> object.\n+     * Retrieves the value of the designated JDBC {@code ROWID} parameter as a\n+     * {@code java.sql.RowId} object.\n@@ -1761,1 +1761,1 @@\n-     * @return a <code>RowId<\/code> object that represents the JDBC <code>ROWID<\/code>\n+     * @return a {@code RowId} object that represents the JDBC {@code ROWID}\n@@ -1763,1 +1763,1 @@\n-     * a SQL <code>NULL<\/code>, then a <code>null<\/code> value is returned.\n+     * a SQL {@code NULL}, then a {@code null} value is returned.\n@@ -1766,1 +1766,1 @@\n-     * this method is called on a closed <code>CallableStatement<\/code>\n+     * this method is called on a closed {@code CallableStatement}\n@@ -1774,2 +1774,2 @@\n-     * Retrieves the value of the designated JDBC <code>ROWID<\/code> parameter as a\n-     * <code>java.sql.RowId<\/code> object.\n+     * Retrieves the value of the designated JDBC {@code ROWID} parameter as a\n+     * {@code java.sql.RowId} object.\n@@ -1778,1 +1778,1 @@\n-     * @return a <code>RowId<\/code> object that represents the JDBC <code>ROWID<\/code>\n+     * @return a {@code RowId} object that represents the JDBC {@code ROWID}\n@@ -1780,1 +1780,1 @@\n-     * a SQL <code>NULL<\/code>, then a <code>null<\/code> value is returned.\n+     * a SQL {@code NULL}, then a {@code null} value is returned.\n@@ -1783,1 +1783,1 @@\n-     * this method is called on a closed <code>CallableStatement<\/code>\n+     * this method is called on a closed {@code CallableStatement}\n@@ -1791,2 +1791,2 @@\n-     * Sets the designated parameter to the given <code>java.sql.RowId<\/code> object. The\n-     * driver converts this to a SQL <code>ROWID<\/code> when it sends it to the\n+     * Sets the designated parameter to the given {@code java.sql.RowId} object. The\n+     * driver converts this to a SQL {@code ROWID} when it sends it to the\n@@ -1799,1 +1799,1 @@\n-     * this method is called on a closed <code>CallableStatement<\/code>\n+     * this method is called on a closed {@code CallableStatement}\n@@ -1807,3 +1807,3 @@\n-     * Sets the designated parameter to the given <code>String<\/code> object.\n-     * The driver converts this to a SQL <code>NCHAR<\/code> or\n-     * <code>NVARCHAR<\/code> or <code>LONGNVARCHAR<\/code>\n+     * Sets the designated parameter to the given {@code String} object.\n+     * The driver converts this to a SQL {@code NCHAR} or\n+     * {@code NVARCHAR} or {@code LONGNVARCHAR}\n@@ -1816,1 +1816,1 @@\n-     * this method is called on a closed <code>CallableStatement<\/code>\n+     * this method is called on a closed {@code CallableStatement}\n@@ -1825,2 +1825,2 @@\n-     * Sets the designated parameter to a <code>Reader<\/code> object. The\n-     * <code>Reader<\/code> reads the data till end-of-file is reached. The\n+     * Sets the designated parameter to a {@code Reader} object. The\n+     * {@code Reader} reads the data till end-of-file is reached. The\n@@ -1836,1 +1836,1 @@\n-     * this method is called on a closed <code>CallableStatement<\/code>\n+     * this method is called on a closed {@code CallableStatement}\n@@ -1845,3 +1845,3 @@\n-     * Sets the designated parameter to a <code>java.sql.NClob<\/code> object. The object\n-     * implements the <code>java.sql.NClob<\/code> interface. This <code>NClob<\/code>\n-     * object maps to a SQL <code>NCLOB<\/code>.\n+     * Sets the designated parameter to a {@code java.sql.NClob} object. The object\n+     * implements the {@code java.sql.NClob} interface. This {@code NClob}\n+     * object maps to a SQL {@code NCLOB}.\n@@ -1854,1 +1854,1 @@\n-     * this method is called on a closed <code>CallableStatement<\/code>\n+     * this method is called on a closed {@code CallableStatement}\n@@ -1862,4 +1862,4 @@\n-     * Sets the designated parameter to a <code>Reader<\/code> object.  The <code>reader<\/code> must contain  the number\n-     * of characters specified by length otherwise a <code>SQLException<\/code> will be\n-     * generated when the <code>CallableStatement<\/code> is executed.\n-     * This method differs from the <code>setCharacterStream (int, Reader, int)<\/code> method\n+     * Sets the designated parameter to a {@code Reader} object.  The {@code reader} must contain  the number\n+     * of characters specified by length otherwise a {@code SQLException} will be\n+     * generated when the {@code CallableStatement} is executed.\n+     * This method differs from the {@code setCharacterStream (int, Reader, int)} method\n@@ -1867,1 +1867,1 @@\n-     * the server as a <code>CLOB<\/code>.  When the <code>setCharacterStream<\/code> method is used, the\n+     * the server as a {@code CLOB}.  When the {@code setCharacterStream} method is used, the\n@@ -1869,1 +1869,1 @@\n-     * data should be send to the server as a <code>LONGVARCHAR<\/code> or a <code>CLOB<\/code>\n+     * data should be send to the server as a {@code LONGVARCHAR} or a {@code CLOB}\n@@ -1876,1 +1876,1 @@\n-     * this method is called on a closed <code>CallableStatement<\/code>\n+     * this method is called on a closed {@code CallableStatement}\n@@ -1887,4 +1887,4 @@\n-     * The <code>Inputstream<\/code> must contain the number\n-     * of characters specified by length, otherwise a <code>SQLException<\/code> will be\n-     * generated when the <code>CallableStatement<\/code> is executed.\n-     * This method differs from the <code>setBinaryStream (int, InputStream, int)<\/code>\n+     * The {@code Inputstream} must contain the number\n+     * of characters specified by length, otherwise a {@code SQLException} will be\n+     * generated when the {@code CallableStatement} is executed.\n+     * This method differs from the {@code setBinaryStream (int, InputStream, int)}\n@@ -1892,1 +1892,1 @@\n-     * sent to the server as a <code>BLOB<\/code>.  When the <code>setBinaryStream<\/code> method is used,\n+     * sent to the server as a {@code BLOB}.  When the {@code setBinaryStream} method is used,\n@@ -1894,1 +1894,1 @@\n-     * data should be sent to the server as a <code>LONGVARBINARY<\/code> or a <code>BLOB<\/code>\n+     * data should be sent to the server as a {@code LONGVARBINARY} or a {@code BLOB}\n@@ -1906,1 +1906,1 @@\n-     * this method is called on a closed <code>CallableStatement<\/code>\n+     * this method is called on a closed {@code CallableStatement}\n@@ -1915,4 +1915,4 @@\n-     * Sets the designated parameter to a <code>Reader<\/code> object.  The <code>reader<\/code> must contain  the number\n-     * of characters specified by length otherwise a <code>SQLException<\/code> will be\n-     * generated when the <code>CallableStatement<\/code> is executed.\n-     * This method differs from the <code>setCharacterStream (int, Reader, int)<\/code> method\n+     * Sets the designated parameter to a {@code Reader} object.  The {@code reader} must contain  the number\n+     * of characters specified by length otherwise a {@code SQLException} will be\n+     * generated when the {@code CallableStatement} is executed.\n+     * This method differs from the {@code setCharacterStream (int, Reader, int)} method\n@@ -1920,1 +1920,1 @@\n-     * the server as a <code>NCLOB<\/code>.  When the <code>setCharacterStream<\/code> method is used, the\n+     * the server as a {@code NCLOB}.  When the {@code setCharacterStream} method is used, the\n@@ -1922,1 +1922,1 @@\n-     * data should be send to the server as a <code>LONGNVARCHAR<\/code> or a <code>NCLOB<\/code>\n+     * data should be send to the server as a {@code LONGNVARCHAR} or a {@code NCLOB}\n@@ -1932,1 +1932,1 @@\n-     * this method is called on a closed <code>CallableStatement<\/code>\n+     * this method is called on a closed {@code CallableStatement}\n@@ -1941,2 +1941,2 @@\n-     * Retrieves the value of the designated JDBC <code>NCLOB<\/code> parameter as a\n-     * <code>java.sql.NClob<\/code> object in the Java programming language.\n+     * Retrieves the value of the designated JDBC {@code NCLOB} parameter as a\n+     * {@code java.sql.NClob} object in the Java programming language.\n@@ -1946,3 +1946,3 @@\n-     * @return the parameter value as a <code>NClob<\/code> object in the\n-     * Java programming language.  If the value was SQL <code>NULL<\/code>, the\n-     * value <code>null<\/code> is returned.\n+     * @return the parameter value as a {@code NClob} object in the\n+     * Java programming language.  If the value was SQL {@code NULL}, the\n+     * value {@code null} is returned.\n@@ -1962,2 +1962,2 @@\n-     * Retrieves the value of a JDBC <code>NCLOB<\/code> parameter as a\n-     * <code>java.sql.NClob<\/code> object in the Java programming language.\n+     * Retrieves the value of a JDBC {@code NCLOB} parameter as a\n+     * {@code java.sql.NClob} object in the Java programming language.\n@@ -1965,3 +1965,3 @@\n-     * @return the parameter value as a <code>NClob<\/code> object in the\n-     *         Java programming language.  If the value was SQL <code>NULL<\/code>,\n-     *         the value <code>null<\/code> is returned.\n+     * @return the parameter value as a {@code NClob} object in the\n+     *         Java programming language.  If the value was SQL {@code NULL},\n+     *         the value {@code null} is returned.\n@@ -1980,2 +1980,2 @@\n-     * Sets the designated parameter to the given <code>java.sql.SQLXML<\/code> object. The driver converts this to an\n-     * <code>SQL XML<\/code> value when it sends it to the database.\n+     * Sets the designated parameter to the given {@code java.sql.SQLXML} object. The driver converts this to an\n+     * {@code SQL XML} value when it sends it to the database.\n@@ -1984,1 +1984,1 @@\n-     * @param xmlObject a <code>SQLXML<\/code> object that maps an <code>SQL XML<\/code> value\n+     * @param xmlObject a {@code SQLXML} object that maps an {@code SQL XML} value\n@@ -1987,3 +1987,3 @@\n-     * this method is called on a closed <code>CallableStatement<\/code> or\n-     * the <code>java.xml.transform.Result<\/code>,\n-   *  <code>Writer<\/code> or <code>OutputStream<\/code> has not been closed for the <code>SQLXML<\/code> object\n+     * this method is called on a closed {@code CallableStatement} or\n+     * the {@code java.xml.transform.Result},\n+   *  {@code Writer} or {@code OutputStream} has not been closed for the {@code SQLXML} object\n@@ -1998,2 +1998,2 @@\n-     * Retrieves the value of the designated <code>SQL XML<\/code> parameter as a\n-     * <code>java.sql.SQLXML<\/code> object in the Java programming language.\n+     * Retrieves the value of the designated {@code SQL XML} parameter as a\n+     * {@code java.sql.SQLXML} object in the Java programming language.\n@@ -2001,1 +2001,1 @@\n-     * @return a <code>SQLXML<\/code> object that maps an <code>SQL XML<\/code> value\n+     * @return a {@code SQLXML} object that maps an {@code SQL XML} value\n@@ -2004,1 +2004,1 @@\n-     * this method is called on a closed <code>CallableStatement<\/code>\n+     * this method is called on a closed {@code CallableStatement}\n@@ -2012,2 +2012,2 @@\n-     * Retrieves the value of the designated <code>SQL XML<\/code> parameter as a\n-     * <code>java.sql.SQLXML<\/code> object in the Java programming language.\n+     * Retrieves the value of the designated {@code SQL XML} parameter as a\n+     * {@code java.sql.SQLXML} object in the Java programming language.\n@@ -2015,1 +2015,1 @@\n-     * @return a <code>SQLXML<\/code> object that maps an <code>SQL XML<\/code> value\n+     * @return a {@code SQLXML} object that maps an {@code SQL XML} value\n@@ -2018,1 +2018,1 @@\n-     * this method is called on a closed <code>CallableStatement<\/code>\n+     * this method is called on a closed {@code CallableStatement}\n@@ -2026,4 +2026,4 @@\n-     * Retrieves the value of the designated <code>NCHAR<\/code>,\n-     * <code>NVARCHAR<\/code>\n-     * or <code>LONGNVARCHAR<\/code> parameter as\n-     * a <code>String<\/code> in the Java programming language.\n+     * Retrieves the value of the designated {@code NCHAR},\n+     * {@code NVARCHAR}\n+     * or {@code LONGNVARCHAR} parameter as\n+     * a {@code String} in the Java programming language.\n@@ -2031,2 +2031,2 @@\n-     * For the fixed-length type JDBC <code>NCHAR<\/code>,\n-     * the <code>String<\/code> object\n+     * For the fixed-length type JDBC {@code NCHAR},\n+     * the {@code String} object\n@@ -2034,1 +2034,1 @@\n-     * <code>NCHAR<\/code> value had in the\n+     * {@code NCHAR} value had in the\n@@ -2038,2 +2038,2 @@\n-     * @return a <code>String<\/code> object that maps an\n-     * <code>NCHAR<\/code>, <code>NVARCHAR<\/code> or <code>LONGNVARCHAR<\/code> value\n+     * @return a {@code String} object that maps an\n+     * {@code NCHAR}, {@code NVARCHAR} or {@code LONGNVARCHAR} value\n@@ -2052,4 +2052,4 @@\n-     *  Retrieves the value of the designated <code>NCHAR<\/code>,\n-     * <code>NVARCHAR<\/code>\n-     * or <code>LONGNVARCHAR<\/code> parameter as\n-     * a <code>String<\/code> in the Java programming language.\n+     *  Retrieves the value of the designated {@code NCHAR},\n+     * {@code NVARCHAR}\n+     * or {@code LONGNVARCHAR} parameter as\n+     * a {@code String} in the Java programming language.\n@@ -2057,2 +2057,2 @@\n-     * For the fixed-length type JDBC <code>NCHAR<\/code>,\n-     * the <code>String<\/code> object\n+     * For the fixed-length type JDBC {@code NCHAR},\n+     * the {@code String} object\n@@ -2060,1 +2060,1 @@\n-     * <code>NCHAR<\/code> value had in the\n+     * {@code NCHAR} value had in the\n@@ -2064,2 +2064,2 @@\n-     * @return a <code>String<\/code> object that maps an\n-     * <code>NCHAR<\/code>, <code>NVARCHAR<\/code> or <code>LONGNVARCHAR<\/code> value\n+     * @return a {@code String} object that maps an\n+     * {@code NCHAR}, {@code NVARCHAR} or {@code LONGNVARCHAR} value\n@@ -2079,1 +2079,1 @@\n-     * <code>java.io.Reader<\/code> object in the Java programming language.\n+     * {@code java.io.Reader} object in the Java programming language.\n@@ -2081,2 +2081,2 @@\n-     * accessing  <code>NCHAR<\/code>,<code>NVARCHAR<\/code>\n-     * and <code>LONGNVARCHAR<\/code> parameters.\n+     * accessing  {@code NCHAR},{@code NVARCHAR}\n+     * and {@code LONGNVARCHAR} parameters.\n@@ -2084,3 +2084,3 @@\n-     * @return a <code>java.io.Reader<\/code> object that contains the parameter\n-     * value; if the value is SQL <code>NULL<\/code>, the value returned is\n-     * <code>null<\/code> in the Java programming language.\n+     * @return a {@code java.io.Reader} object that contains the parameter\n+     * value; if the value is SQL {@code NULL}, the value returned is\n+     * {@code null} in the Java programming language.\n@@ -2099,1 +2099,1 @@\n-     * <code>java.io.Reader<\/code> object in the Java programming language.\n+     * {@code java.io.Reader} object in the Java programming language.\n@@ -2101,2 +2101,2 @@\n-     * accessing  <code>NCHAR<\/code>,<code>NVARCHAR<\/code>\n-     * and <code>LONGNVARCHAR<\/code> parameters.\n+     * accessing  {@code NCHAR},{@code NVARCHAR}\n+     * and {@code LONGNVARCHAR} parameters.\n@@ -2105,3 +2105,3 @@\n-     * @return a <code>java.io.Reader<\/code> object that contains the parameter\n-     * value; if the value is SQL <code>NULL<\/code>, the value returned is\n-     * <code>null<\/code> in the Java programming language\n+     * @return a {@code java.io.Reader} object that contains the parameter\n+     * value; if the value is SQL {@code NULL}, the value returned is\n+     * {@code null} in the Java programming language\n@@ -2119,1 +2119,1 @@\n-     * <code>java.io.Reader<\/code> object in the Java programming language.\n+     * {@code java.io.Reader} object in the Java programming language.\n@@ -2121,3 +2121,3 @@\n-     * @return a <code>java.io.Reader<\/code> object that contains the parameter\n-     * value; if the value is SQL <code>NULL<\/code>, the value returned is\n-     * <code>null<\/code> in the Java programming language.\n+     * @return a {@code java.io.Reader} object that contains the parameter\n+     * value; if the value is SQL {@code NULL}, the value returned is\n+     * {@code null} in the Java programming language.\n@@ -2133,1 +2133,1 @@\n-     * <code>java.io.Reader<\/code> object in the Java programming language.\n+     * {@code java.io.Reader} object in the Java programming language.\n@@ -2136,3 +2136,3 @@\n-     * @return a <code>java.io.Reader<\/code> object that contains the parameter\n-     * value; if the value is SQL <code>NULL<\/code>, the value returned is\n-     * <code>null<\/code> in the Java programming language\n+     * @return a {@code java.io.Reader} object that contains the parameter\n+     * value; if the value is SQL {@code NULL}, the value returned is\n+     * {@code null} in the Java programming language\n@@ -2149,2 +2149,2 @@\n-     * Sets the designated parameter to the given <code>java.sql.Blob<\/code> object.\n-     * The driver converts this to an SQL <code>BLOB<\/code> value when it\n+     * Sets the designated parameter to the given {@code java.sql.Blob} object.\n+     * The driver converts this to an SQL {@code BLOB} value when it\n@@ -2154,1 +2154,1 @@\n-     * @param x a <code>Blob<\/code> object that maps an SQL <code>BLOB<\/code> value\n+     * @param x a {@code Blob} object that maps an SQL {@code BLOB} value\n@@ -2165,2 +2165,2 @@\n-     * Sets the designated parameter to the given <code>java.sql.Clob<\/code> object.\n-     * The driver converts this to an SQL <code>CLOB<\/code> value when it\n+     * Sets the designated parameter to the given {@code java.sql.Clob} object.\n+     * The driver converts this to an SQL {@code CLOB} value when it\n@@ -2170,1 +2170,1 @@\n-     * @param x a <code>Clob<\/code> object that maps an SQL <code>CLOB<\/code> value\n+     * @param x a {@code Clob} object that maps an SQL {@code CLOB} value\n@@ -2182,1 +2182,1 @@\n-     * When a very large ASCII value is input to a <code>LONGVARCHAR<\/code>\n+     * When a very large ASCII value is input to a {@code LONGVARCHAR}\n@@ -2184,1 +2184,1 @@\n-     * <code>java.io.InputStream<\/code>. Data will be read from the stream\n+     * {@code java.io.InputStream}. Data will be read from the stream\n@@ -2208,1 +2208,1 @@\n-     * When a very large binary value is input to a <code>LONGVARBINARY<\/code>\n+     * When a very large binary value is input to a {@code LONGVARBINARY}\n@@ -2210,1 +2210,1 @@\n-     * <code>java.io.InputStream<\/code> object. The data will be read from the stream\n+     * {@code java.io.InputStream} object. The data will be read from the stream\n@@ -2230,1 +2230,1 @@\n-     * Sets the designated parameter to the given <code>Reader<\/code>\n+     * Sets the designated parameter to the given {@code Reader}\n@@ -2232,1 +2232,1 @@\n-     * When a very large UNICODE value is input to a <code>LONGVARCHAR<\/code>\n+     * When a very large UNICODE value is input to a {@code LONGVARCHAR}\n@@ -2234,1 +2234,1 @@\n-     * <code>java.io.Reader<\/code> object. The data will be read from the stream\n+     * {@code java.io.Reader} object. The data will be read from the stream\n@@ -2243,1 +2243,1 @@\n-     * @param reader the <code>java.io.Reader<\/code> object that\n+     * @param reader the {@code java.io.Reader} object that\n@@ -2259,1 +2259,1 @@\n-     * When a very large ASCII value is input to a <code>LONGVARCHAR<\/code>\n+     * When a very large ASCII value is input to a {@code LONGVARCHAR}\n@@ -2261,1 +2261,1 @@\n-     * <code>java.io.InputStream<\/code>. Data will be read from the stream\n+     * {@code java.io.InputStream}. Data will be read from the stream\n@@ -2270,1 +2270,1 @@\n-     * <code>setAsciiStream<\/code> which takes a length parameter.\n+     * {@code setAsciiStream} which takes a length parameter.\n@@ -2284,1 +2284,1 @@\n-     * When a very large binary value is input to a <code>LONGVARBINARY<\/code>\n+     * When a very large binary value is input to a {@code LONGVARBINARY}\n@@ -2286,1 +2286,1 @@\n-     * <code>java.io.InputStream<\/code> object. The data will be read from the\n+     * {@code java.io.InputStream} object. The data will be read from the\n@@ -2294,1 +2294,1 @@\n-     * <code>setBinaryStream<\/code> which takes a length parameter.\n+     * {@code setBinaryStream} which takes a length parameter.\n@@ -2307,1 +2307,1 @@\n-     * Sets the designated parameter to the given <code>Reader<\/code>\n+     * Sets the designated parameter to the given {@code Reader}\n@@ -2309,1 +2309,1 @@\n-     * When a very large UNICODE value is input to a <code>LONGVARCHAR<\/code>\n+     * When a very large UNICODE value is input to a {@code LONGVARCHAR}\n@@ -2311,1 +2311,1 @@\n-     * <code>java.io.Reader<\/code> object. The data will be read from the stream\n+     * {@code java.io.Reader} object. The data will be read from the stream\n@@ -2320,1 +2320,1 @@\n-     * <code>setCharacterStream<\/code> which takes a length parameter.\n+     * {@code setCharacterStream} which takes a length parameter.\n@@ -2323,1 +2323,1 @@\n-     * @param reader the <code>java.io.Reader<\/code> object that contains the\n+     * @param reader the {@code java.io.Reader} object that contains the\n@@ -2334,2 +2334,2 @@\n-     * Sets the designated parameter to a <code>Reader<\/code> object. The\n-     * <code>Reader<\/code> reads the data till end-of-file is reached. The\n+     * Sets the designated parameter to a {@code Reader} object. The\n+     * {@code Reader} reads the data till end-of-file is reached. The\n@@ -2344,1 +2344,1 @@\n-     * <code>setNCharacterStream<\/code> which takes a length parameter.\n+     * {@code setNCharacterStream} which takes a length parameter.\n@@ -2352,1 +2352,1 @@\n-     * this method is called on a closed <code>CallableStatement<\/code>\n+     * this method is called on a closed {@code CallableStatement}\n@@ -2359,2 +2359,2 @@\n-     * Sets the designated parameter to a <code>Reader<\/code> object.\n-     * This method differs from the <code>setCharacterStream (int, Reader)<\/code> method\n+     * Sets the designated parameter to a {@code Reader} object.\n+     * This method differs from the {@code setCharacterStream (int, Reader)} method\n@@ -2362,1 +2362,1 @@\n-     * the server as a <code>CLOB<\/code>.  When the <code>setCharacterStream<\/code> method is used, the\n+     * the server as a {@code CLOB}.  When the {@code setCharacterStream} method is used, the\n@@ -2364,1 +2364,1 @@\n-     * data should be send to the server as a <code>LONGVARCHAR<\/code> or a <code>CLOB<\/code>\n+     * data should be send to the server as a {@code LONGVARCHAR} or a {@code CLOB}\n@@ -2368,1 +2368,1 @@\n-     * <code>setClob<\/code> which takes a length parameter.\n+     * {@code setClob} which takes a length parameter.\n@@ -2374,1 +2374,1 @@\n-     * a closed <code>CallableStatement<\/code>\n+     * a closed {@code CallableStatement}\n@@ -2384,1 +2384,1 @@\n-     * This method differs from the <code>setBinaryStream (int, InputStream)<\/code>\n+     * This method differs from the {@code setBinaryStream (int, InputStream)}\n@@ -2386,1 +2386,1 @@\n-     * sent to the server as a <code>BLOB<\/code>.  When the <code>setBinaryStream<\/code> method is used,\n+     * sent to the server as a {@code BLOB}.  When the {@code setBinaryStream} method is used,\n@@ -2388,1 +2388,1 @@\n-     * data should be send to the server as a <code>LONGVARBINARY<\/code> or a <code>BLOB<\/code>\n+     * data should be send to the server as a {@code LONGVARBINARY} or a {@code BLOB}\n@@ -2392,1 +2392,1 @@\n-     * <code>setBlob<\/code> which takes a length parameter.\n+     * {@code setBlob} which takes a length parameter.\n@@ -2399,1 +2399,1 @@\n-     * this method is called on a closed <code>CallableStatement<\/code>\n+     * this method is called on a closed {@code CallableStatement}\n@@ -2407,2 +2407,2 @@\n-     * Sets the designated parameter to a <code>Reader<\/code> object.\n-     * This method differs from the <code>setCharacterStream (int, Reader)<\/code> method\n+     * Sets the designated parameter to a {@code Reader} object.\n+     * This method differs from the {@code setCharacterStream (int, Reader)} method\n@@ -2410,1 +2410,1 @@\n-     * the server as a <code>NCLOB<\/code>.  When the <code>setCharacterStream<\/code> method is used, the\n+     * the server as a {@code NCLOB}.  When the {@code setCharacterStream} method is used, the\n@@ -2412,1 +2412,1 @@\n-     * data should be send to the server as a <code>LONGNVARCHAR<\/code> or a <code>NCLOB<\/code>\n+     * data should be send to the server as a {@code LONGNVARCHAR} or a {@code NCLOB}\n@@ -2415,1 +2415,1 @@\n-     * <code>setNClob<\/code> which takes a length parameter.\n+     * {@code setNClob} which takes a length parameter.\n@@ -2423,1 +2423,1 @@\n-     * this method is called on a closed <code>CallableStatement<\/code>\n+     * this method is called on a closed {@code CallableStatement}\n@@ -2440,1 +2440,1 @@\n-     * <code>SQLException<\/code> is thrown.\n+     * {@code SQLException} is thrown.\n@@ -2469,1 +2469,1 @@\n-     * <code>SQLException<\/code> is thrown.\n+     * {@code SQLException} is thrown.\n@@ -2703,1 +2703,1 @@\n-     * <code>parameterName<\/code> to the JDBC type\n+     * {@code parameterName} to the JDBC type\n@@ -2744,1 +2744,1 @@\n-     * <code>parameterName<\/code> to be of JDBC type\n+     * {@code parameterName} to be of JDBC type\n","filename":"src\/java.sql\/share\/classes\/java\/sql\/CallableStatement.java","additions":509,"deletions":509,"binary":false,"changes":1018,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2006, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2006, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,1 +32,1 @@\n- * via a call to <code>Connection.setClientInfo<\/code>\n+ * via a call to {@code Connection.setClientInfo}\n","filename":"src\/java.sql\/share\/classes\/java\/sql\/ClientInfoStatus.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -36,1 +36,1 @@\n- * A <code>Connection<\/code> object's database is able to provide information\n+ * A {@code Connection} object's database is able to provide information\n@@ -39,1 +39,1 @@\n- * information is obtained with the <code>getMetaData<\/code> method.\n+ * information is obtained with the {@code getMetaData} method.\n@@ -41,3 +41,3 @@\n- * <P><B>Note:<\/B> When configuring a <code>Connection<\/code>, JDBC applications\n- *  should use the appropriate <code>Connection<\/code> method such as\n- *  <code>setAutoCommit<\/code> or <code>setTransactionIsolation<\/code>.\n+ * <P><B>Note:<\/B> When configuring a {@code Connection}, JDBC applications\n+ *  should use the appropriate {@code Connection} method such as\n+ *  {@code setAutoCommit} or {@code setTransactionIsolation}.\n@@ -45,1 +45,1 @@\n- *   configuration when there is a JDBC method available.  By default a <code>Connection<\/code> object is in\n+ *   configuration when there is a JDBC method available.  By default a {@code Connection} object is in\n@@ -48,1 +48,1 @@\n- * disabled, the method <code>commit<\/code> must be called explicitly in\n+ * disabled, the method {@code commit} must be called explicitly in\n@@ -51,1 +51,1 @@\n- * A new <code>Connection<\/code> object created using the JDBC 2.1 core API\n+ * A new {@code Connection} object created using the JDBC 2.1 core API\n@@ -55,1 +55,1 @@\n- * method <code>ResultSet.getObject<\/code>, the <code>getObject<\/code> method\n+ * method {@code ResultSet.getObject}, the {@code getObject} method\n@@ -57,1 +57,1 @@\n- * UDT.  If so, the <code>getObject<\/code> method will map the UDT to the\n+ * UDT.  If so, the {@code getObject} method will map the UDT to the\n@@ -61,2 +61,2 @@\n- * A user may create a new type map, which is a <code>java.util.Map<\/code>\n- * object, make an entry in it, and pass it to the <code>java.sql<\/code>\n+ * A user may create a new type map, which is a {@code java.util.Map}\n+ * object, make an entry in it, and pass it to the {@code java.sql}\n@@ -68,4 +68,4 @@\n- * type <code>ATHLETES<\/code> will be mapped to the class\n- * <code>Athletes<\/code> in the Java programming language.\n- * The code fragment retrieves the type map for the <code>Connection\n- * <\/code> object <code>con<\/code>, inserts the entry into it, and then sets\n+ * type {@code ATHLETES} will be mapped to the class\n+ * {@code Athletes} in the Java programming language.\n+ * The code fragment retrieves the type map for the {@code Connection\n+ * } object {@code con}, inserts the entry into it, and then sets\n@@ -88,1 +88,1 @@\n-     * Creates a <code>Statement<\/code> object for sending\n+     * Creates a {@code Statement} object for sending\n@@ -91,1 +91,1 @@\n-     * executed using <code>Statement<\/code> objects. If the same SQL statement\n+     * executed using {@code Statement} objects. If the same SQL statement\n@@ -93,1 +93,1 @@\n-     * <code>PreparedStatement<\/code> object.\n+     * {@code PreparedStatement} object.\n@@ -95,3 +95,3 @@\n-     * Result sets created using the returned <code>Statement<\/code>\n-     * object will by default be type <code>TYPE_FORWARD_ONLY<\/code>\n-     * and have a concurrency level of <code>CONCUR_READ_ONLY<\/code>.\n+     * Result sets created using the returned {@code Statement}\n+     * object will by default be type {@code TYPE_FORWARD_ONLY}\n+     * and have a concurrency level of {@code CONCUR_READ_ONLY}.\n@@ -101,1 +101,1 @@\n-     * @return a new default <code>Statement<\/code> object\n+     * @return a new default {@code Statement} object\n@@ -108,1 +108,1 @@\n-     * Creates a <code>PreparedStatement<\/code> object for sending\n+     * Creates a {@code PreparedStatement} object for sending\n@@ -112,1 +112,1 @@\n-     * pre-compiled and stored in a <code>PreparedStatement<\/code> object. This\n+     * pre-compiled and stored in a {@code PreparedStatement} object. This\n@@ -119,1 +119,1 @@\n-     * the method <code>prepareStatement<\/code> will send\n+     * the method {@code prepareStatement} will send\n@@ -122,1 +122,1 @@\n-     * not be sent to the database until the <code>PreparedStatement<\/code>\n+     * not be sent to the database until the {@code PreparedStatement}\n@@ -124,1 +124,1 @@\n-     * affect which methods throw certain <code>SQLException<\/code> objects.\n+     * affect which methods throw certain {@code SQLException} objects.\n@@ -126,3 +126,3 @@\n-     * Result sets created using the returned <code>PreparedStatement<\/code>\n-     * object will by default be type <code>TYPE_FORWARD_ONLY<\/code>\n-     * and have a concurrency level of <code>CONCUR_READ_ONLY<\/code>.\n+     * Result sets created using the returned {@code PreparedStatement}\n+     * object will by default be type {@code TYPE_FORWARD_ONLY}\n+     * and have a concurrency level of {@code CONCUR_READ_ONLY}.\n@@ -134,1 +134,1 @@\n-     * @return a new default <code>PreparedStatement<\/code> object containing the\n+     * @return a new default {@code PreparedStatement} object containing the\n@@ -143,1 +143,1 @@\n-     * Creates a <code>CallableStatement<\/code> object for calling\n+     * Creates a {@code CallableStatement} object for calling\n@@ -145,1 +145,1 @@\n-     * The <code>CallableStatement<\/code> object provides\n+     * The {@code CallableStatement} object provides\n@@ -151,1 +151,1 @@\n-     * statement to the database when the method <code>prepareCall<\/code>\n+     * statement to the database when the method {@code prepareCall}\n@@ -153,1 +153,1 @@\n-     * may wait until the <code>CallableStatement<\/code> object\n+     * may wait until the {@code CallableStatement} object\n@@ -158,3 +158,3 @@\n-     * Result sets created using the returned <code>CallableStatement<\/code>\n-     * object will by default be type <code>TYPE_FORWARD_ONLY<\/code>\n-     * and have a concurrency level of <code>CONCUR_READ_ONLY<\/code>.\n+     * Result sets created using the returned {@code CallableStatement}\n+     * object will by default be type {@code TYPE_FORWARD_ONLY}\n+     * and have a concurrency level of {@code CONCUR_READ_ONLY}.\n@@ -167,1 +167,1 @@\n-     * @return a new default <code>CallableStatement<\/code> object containing the\n+     * @return a new default {@code CallableStatement} object containing the\n@@ -194,1 +194,1 @@\n-     * the method <code>commit<\/code> or the method <code>rollback<\/code>.\n+     * the method {@code commit} or the method {@code rollback}.\n@@ -205,1 +205,1 @@\n-     * <li>For <code>CallableStatement<\/code> objects or for statements that return\n+     * <li>For {@code CallableStatement} objects or for statements that return\n@@ -213,1 +213,1 @@\n-     * <code>setAutoCommit<\/code> is called and the auto-commit mode is\n+     * {@code setAutoCommit} is called and the auto-commit mode is\n@@ -216,2 +216,2 @@\n-     * @param autoCommit <code>true<\/code> to enable auto-commit mode;\n-     *         <code>false<\/code> to disable it\n+     * @param autoCommit {@code true} to enable auto-commit mode;\n+     *         {@code false} to disable it\n@@ -226,1 +226,1 @@\n-     * Retrieves the current auto-commit mode for this <code>Connection<\/code>\n+     * Retrieves the current auto-commit mode for this {@code Connection}\n@@ -229,1 +229,1 @@\n-     * @return the current state of this <code>Connection<\/code> object's\n+     * @return the current state of this {@code Connection} object's\n@@ -240,1 +240,1 @@\n-     * currently held by this <code>Connection<\/code> object.\n+     * currently held by this {@code Connection} object.\n@@ -255,1 +255,1 @@\n-     * by this <code>Connection<\/code> object. This method should be\n+     * by this {@code Connection} object. This method should be\n@@ -267,1 +267,1 @@\n-     * Releases this <code>Connection<\/code> object's database and JDBC resources\n+     * Releases this {@code Connection} object's database and JDBC resources\n@@ -270,1 +270,1 @@\n-     * Calling the method <code>close<\/code> on a <code>Connection<\/code>\n+     * Calling the method {@code close} on a {@code Connection}\n@@ -275,1 +275,1 @@\n-     * <code>close<\/code> method.  If the <code>close<\/code> method is called\n+     * {@code close} method.  If the {@code close} method is called\n@@ -283,2 +283,2 @@\n-     * Retrieves whether this <code>Connection<\/code> object has been\n-     * closed.  A connection is closed if the method <code>close<\/code>\n+     * Retrieves whether this {@code Connection} object has been\n+     * closed.  A connection is closed if the method {@code close}\n@@ -286,2 +286,2 @@\n-     * This method is guaranteed to return <code>true<\/code> only when\n-     * it is called after the method <code>Connection.close<\/code> has\n+     * This method is guaranteed to return {@code true} only when\n+     * it is called after the method {@code Connection.close} has\n@@ -295,2 +295,2 @@\n-     * @return <code>true<\/code> if this <code>Connection<\/code> object\n-     *         is closed; <code>false<\/code> if it is still open\n+     * @return {@code true} if this {@code Connection} object\n+     *         is closed; {@code false} if it is still open\n@@ -305,1 +305,1 @@\n-     * Retrieves a <code>DatabaseMetaData<\/code> object that contains\n+     * Retrieves a {@code DatabaseMetaData} object that contains\n@@ -307,1 +307,1 @@\n-     * <code>Connection<\/code> object represents a connection.\n+     * {@code Connection} object represents a connection.\n@@ -312,2 +312,2 @@\n-     * @return a <code>DatabaseMetaData<\/code> object for this\n-     *         <code>Connection<\/code> object\n+     * @return a {@code DatabaseMetaData} object for this\n+     *         {@code Connection} object\n@@ -325,2 +325,2 @@\n-     * @param readOnly <code>true<\/code> enables read-only mode;\n-     *        <code>false<\/code> disables it\n+     * @param readOnly {@code true} enables read-only mode;\n+     *        {@code false} disables it\n@@ -334,1 +334,1 @@\n-     * Retrieves whether this <code>Connection<\/code>\n+     * Retrieves whether this {@code Connection}\n@@ -337,2 +337,2 @@\n-     * @return <code>true<\/code> if this <code>Connection<\/code> object\n-     *         is read-only; <code>false<\/code> otherwise\n+     * @return {@code true} if this {@code Connection} object\n+     *         is read-only; {@code false} otherwise\n@@ -346,1 +346,1 @@\n-     * a subspace of this <code>Connection<\/code> object's database\n+     * a subspace of this {@code Connection} object's database\n@@ -360,1 +360,1 @@\n-     *        <code>Connection<\/code> object's database) in which to work\n+     *        {@code Connection} object's database) in which to work\n@@ -368,1 +368,1 @@\n-     * Retrieves this <code>Connection<\/code> object's current catalog name.\n+     * Retrieves this {@code Connection} object's current catalog name.\n@@ -370,1 +370,1 @@\n-     * @return the current catalog name or <code>null<\/code> if there is none\n+     * @return the current catalog name or {@code null} if there is none\n@@ -416,1 +416,1 @@\n-     * <code>TRANSACTION_REPEATABLE_READ<\/code> and further prohibits the\n+     * {@code TRANSACTION_REPEATABLE_READ} and further prohibits the\n@@ -418,2 +418,2 @@\n-     * a <code>WHERE<\/code> condition, a second transaction inserts a row that\n-     * satisfies that <code>WHERE<\/code> condition, and the first transaction\n+     * a {@code WHERE} condition, a second transaction inserts a row that\n+     * satisfies that {@code WHERE} condition, and the first transaction\n@@ -427,2 +427,2 @@\n-     * <code>Connection<\/code> object to the one given.\n-     * The constants defined in the interface <code>Connection<\/code>\n+     * {@code Connection} object to the one given.\n+     * The constants defined in the interface {@code Connection}\n@@ -434,6 +434,6 @@\n-     * @param level one of the following <code>Connection<\/code> constants:\n-     *        <code>Connection.TRANSACTION_READ_UNCOMMITTED<\/code>,\n-     *        <code>Connection.TRANSACTION_READ_COMMITTED<\/code>,\n-     *        <code>Connection.TRANSACTION_REPEATABLE_READ<\/code>, or\n-     *        <code>Connection.TRANSACTION_SERIALIZABLE<\/code>.\n-     *        (Note that <code>Connection.TRANSACTION_NONE<\/code> cannot be used\n+     * @param level one of the following {@code Connection} constants:\n+     *        {@code Connection.TRANSACTION_READ_UNCOMMITTED},\n+     *        {@code Connection.TRANSACTION_READ_COMMITTED},\n+     *        {@code Connection.TRANSACTION_REPEATABLE_READ}, or\n+     *        {@code Connection.TRANSACTION_SERIALIZABLE}.\n+     *        (Note that {@code Connection.TRANSACTION_NONE} cannot be used\n@@ -451,1 +451,1 @@\n-     * Retrieves this <code>Connection<\/code> object's current\n+     * Retrieves this {@code Connection} object's current\n@@ -456,5 +456,5 @@\n-     *        <code>Connection.TRANSACTION_READ_UNCOMMITTED<\/code>,\n-     *        <code>Connection.TRANSACTION_READ_COMMITTED<\/code>,\n-     *        <code>Connection.TRANSACTION_REPEATABLE_READ<\/code>,\n-     *        <code>Connection.TRANSACTION_SERIALIZABLE<\/code>, or\n-     *        <code>Connection.TRANSACTION_NONE<\/code>.\n+     *        {@code Connection.TRANSACTION_READ_UNCOMMITTED},\n+     *        {@code Connection.TRANSACTION_READ_COMMITTED},\n+     *        {@code Connection.TRANSACTION_REPEATABLE_READ},\n+     *        {@code Connection.TRANSACTION_SERIALIZABLE}, or\n+     *        {@code Connection.TRANSACTION_NONE}.\n@@ -469,1 +469,1 @@\n-     * <code>Connection<\/code> object.  If there is more than one\n+     * {@code Connection} object.  If there is more than one\n@@ -472,1 +472,1 @@\n-     * <code>SQLWarning.getNextWarning<\/code> on the warning\n+     * {@code SQLWarning.getNextWarning} on the warning\n@@ -477,1 +477,1 @@\n-     * <code>SQLException<\/code> to be thrown.\n+     * {@code SQLException} to be thrown.\n@@ -482,1 +482,1 @@\n-     * @return the first <code>SQLWarning<\/code> object or <code>null<\/code>\n+     * @return the first {@code SQLWarning} object or {@code null}\n@@ -491,4 +491,4 @@\n-     * Clears all warnings reported for this <code>Connection<\/code> object.\n-     * After a call to this method, the method <code>getWarnings<\/code>\n-     * returns <code>null<\/code> until a new warning is\n-     * reported for this <code>Connection<\/code> object.\n+     * Clears all warnings reported for this {@code Connection} object.\n+     * After a call to this method, the method {@code getWarnings}\n+     * returns {@code null} until a new warning is\n+     * reported for this {@code Connection} object.\n@@ -505,3 +505,3 @@\n-     * Creates a <code>Statement<\/code> object that will generate\n-     * <code>ResultSet<\/code> objects with the given type and concurrency.\n-     * This method is the same as the <code>createStatement<\/code> method\n+     * Creates a {@code Statement} object that will generate\n+     * {@code ResultSet} objects with the given type and concurrency.\n+     * This method is the same as the {@code createStatement} method\n@@ -514,3 +514,3 @@\n-     *        <code>ResultSet.TYPE_FORWARD_ONLY<\/code>,\n-     *        <code>ResultSet.TYPE_SCROLL_INSENSITIVE<\/code>, or\n-     *        <code>ResultSet.TYPE_SCROLL_SENSITIVE<\/code>\n+     *        {@code ResultSet.TYPE_FORWARD_ONLY},\n+     *        {@code ResultSet.TYPE_SCROLL_INSENSITIVE}, or\n+     *        {@code ResultSet.TYPE_SCROLL_SENSITIVE}\n@@ -518,4 +518,4 @@\n-     *        <code>ResultSet.CONCUR_READ_ONLY<\/code> or\n-     *        <code>ResultSet.CONCUR_UPDATABLE<\/code>\n-     * @return a new <code>Statement<\/code> object that will generate\n-     *         <code>ResultSet<\/code> objects with the given type and\n+     *        {@code ResultSet.CONCUR_READ_ONLY} or\n+     *        {@code ResultSet.CONCUR_UPDATABLE}\n+     * @return a new {@code Statement} object that will generate\n+     *         {@code ResultSet} objects with the given type and\n@@ -537,3 +537,3 @@\n-     * Creates a <code>PreparedStatement<\/code> object that will generate\n-     * <code>ResultSet<\/code> objects with the given type and concurrency.\n-     * This method is the same as the <code>prepareStatement<\/code> method\n+     * Creates a {@code PreparedStatement} object that will generate\n+     * {@code ResultSet} objects with the given type and concurrency.\n+     * This method is the same as the {@code prepareStatement} method\n@@ -545,1 +545,1 @@\n-     * @param sql a <code>String<\/code> object that is the SQL statement to\n+     * @param sql a {@code String} object that is the SQL statement to\n@@ -549,3 +549,3 @@\n-     *         <code>ResultSet.TYPE_FORWARD_ONLY<\/code>,\n-     *         <code>ResultSet.TYPE_SCROLL_INSENSITIVE<\/code>, or\n-     *         <code>ResultSet.TYPE_SCROLL_SENSITIVE<\/code>\n+     *         {@code ResultSet.TYPE_FORWARD_ONLY},\n+     *         {@code ResultSet.TYPE_SCROLL_INSENSITIVE}, or\n+     *         {@code ResultSet.TYPE_SCROLL_SENSITIVE}\n@@ -553,2 +553,2 @@\n-     *         <code>ResultSet.CONCUR_READ_ONLY<\/code> or\n-     *         <code>ResultSet.CONCUR_UPDATABLE<\/code>\n+     *         {@code ResultSet.CONCUR_READ_ONLY} or\n+     *         {@code ResultSet.CONCUR_UPDATABLE}\n@@ -556,1 +556,1 @@\n-     * pre-compiled SQL statement that will produce <code>ResultSet<\/code>\n+     * pre-compiled SQL statement that will produce {@code ResultSet}\n@@ -572,3 +572,3 @@\n-     * Creates a <code>CallableStatement<\/code> object that will generate\n-     * <code>ResultSet<\/code> objects with the given type and concurrency.\n-     * This method is the same as the <code>prepareCall<\/code> method\n+     * Creates a {@code CallableStatement} object that will generate\n+     * {@code ResultSet} objects with the given type and concurrency.\n+     * This method is the same as the {@code prepareCall} method\n@@ -580,1 +580,1 @@\n-     * @param sql a <code>String<\/code> object that is the SQL statement to\n+     * @param sql a {@code String} object that is the SQL statement to\n@@ -583,3 +583,3 @@\n-     *         <code>ResultSet.TYPE_FORWARD_ONLY<\/code>,\n-     *         <code>ResultSet.TYPE_SCROLL_INSENSITIVE<\/code>, or\n-     *         <code>ResultSet.TYPE_SCROLL_SENSITIVE<\/code>\n+     *         {@code ResultSet.TYPE_FORWARD_ONLY},\n+     *         {@code ResultSet.TYPE_SCROLL_INSENSITIVE}, or\n+     *         {@code ResultSet.TYPE_SCROLL_SENSITIVE}\n@@ -587,4 +587,4 @@\n-     *         <code>ResultSet.CONCUR_READ_ONLY<\/code> or\n-     *         <code>ResultSet.CONCUR_UPDATABLE<\/code>\n-     * @return a new <code>CallableStatement<\/code> object containing the\n-     * pre-compiled SQL statement that will produce <code>ResultSet<\/code>\n+     *         {@code ResultSet.CONCUR_READ_ONLY} or\n+     *         {@code ResultSet.CONCUR_UPDATABLE}\n+     * @return a new {@code CallableStatement} object containing the\n+     * pre-compiled SQL statement that will produce {@code ResultSet}\n@@ -605,2 +605,2 @@\n-     * Retrieves the <code>Map<\/code> object associated with this\n-     * <code>Connection<\/code> object.\n+     * Retrieves the {@code Map} object associated with this\n+     * {@code Connection} object.\n@@ -610,4 +610,4 @@\n-     * You must invoke <code>setTypeMap<\/code> after making changes to the\n-     * <code>Map<\/code> object returned from\n-     *  <code>getTypeMap<\/code> as a JDBC driver may create an internal\n-     * copy of the <code>Map<\/code> object passed to <code>setTypeMap<\/code>:\n+     * You must invoke {@code setTypeMap} after making changes to the\n+     * {@code Map} object returned from\n+     *  {@code getTypeMap} as a JDBC driver may create an internal\n+     * copy of the {@code Map} object passed to {@code setTypeMap}:\n@@ -620,2 +620,2 @@\n-     * @return the <code>java.util.Map<\/code> object associated\n-     *         with this <code>Connection<\/code> object\n+     * @return the {@code java.util.Map} object associated\n+     *         with this {@code Connection} object\n@@ -632,2 +632,2 @@\n-     * Installs the given <code>TypeMap<\/code> object as the type map for\n-     * this <code>Connection<\/code> object.  The type map will be used for the\n+     * Installs the given {@code TypeMap} object as the type map for\n+     * this {@code Connection} object.  The type map will be used for the\n@@ -636,3 +636,3 @@\n-     * You must set the values for the <code>TypeMap<\/code> prior to\n-     * callng <code>setMap<\/code> as a JDBC driver may create an internal copy\n-     * of the <code>TypeMap<\/code>:\n+     * You must set the values for the {@code TypeMap} prior to\n+     * callng {@code setMap} as a JDBC driver may create an internal copy\n+     * of the {@code TypeMap}:\n@@ -645,2 +645,2 @@\n-     * @param map the <code>java.util.Map<\/code> object to install\n-     *        as the replacement for this <code>Connection<\/code>\n+     * @param map the {@code java.util.Map} object to install\n+     *        as the replacement for this {@code Connection}\n@@ -663,3 +663,3 @@\n-     * Changes the default holdability of <code>ResultSet<\/code> objects\n-     * created using this <code>Connection<\/code> object to the given\n-     * holdability.  The default holdability of <code>ResultSet<\/code> objects\n+     * Changes the default holdability of {@code ResultSet} objects\n+     * created using this {@code Connection} object to the given\n+     * holdability.  The default holdability of {@code ResultSet} objects\n@@ -669,3 +669,3 @@\n-     * @param holdability a <code>ResultSet<\/code> holdability constant; one of\n-     *        <code>ResultSet.HOLD_CURSORS_OVER_COMMIT<\/code> or\n-     *        <code>ResultSet.CLOSE_CURSORS_AT_COMMIT<\/code>\n+     * @param holdability a {@code ResultSet} holdability constant; one of\n+     *        {@code ResultSet.HOLD_CURSORS_OVER_COMMIT} or\n+     *        {@code ResultSet.CLOSE_CURSORS_AT_COMMIT}\n@@ -674,1 +674,1 @@\n-     *         is not a <code>ResultSet<\/code> constant indicating holdability\n+     *         is not a {@code ResultSet} constant indicating holdability\n@@ -684,2 +684,2 @@\n-     * Retrieves the current holdability of <code>ResultSet<\/code> objects\n-     * created using this <code>Connection<\/code> object.\n+     * Retrieves the current holdability of {@code ResultSet} objects\n+     * created using this {@code Connection} object.\n@@ -688,2 +688,2 @@\n-     *        <code>ResultSet.HOLD_CURSORS_OVER_COMMIT<\/code> or\n-     *        <code>ResultSet.CLOSE_CURSORS_AT_COMMIT<\/code>\n+     *        {@code ResultSet.HOLD_CURSORS_OVER_COMMIT} or\n+     *        {@code ResultSet.CLOSE_CURSORS_AT_COMMIT}\n@@ -701,1 +701,1 @@\n-     * returns the new <code>Savepoint<\/code> object that represents it.\n+     * returns the new {@code Savepoint} object that represents it.\n@@ -706,1 +706,1 @@\n-     * @return the new <code>Savepoint<\/code> object\n+     * @return the new {@code Savepoint} object\n@@ -721,1 +721,1 @@\n-     * and returns the new <code>Savepoint<\/code> object that represents it.\n+     * and returns the new {@code Savepoint} object that represents it.\n@@ -726,2 +726,2 @@\n-     * @param name a <code>String<\/code> containing the name of the savepoint\n-     * @return the new <code>Savepoint<\/code> object\n+     * @param name a {@code String} containing the name of the savepoint\n+     * @return the new {@code Savepoint} object\n@@ -741,1 +741,1 @@\n-     * Undoes all changes made after the given <code>Savepoint<\/code> object\n+     * Undoes all changes made after the given {@code Savepoint} object\n@@ -746,1 +746,1 @@\n-     * @param savepoint the <code>Savepoint<\/code> object to roll back to\n+     * @param savepoint the {@code Savepoint} object to roll back to\n@@ -762,1 +762,1 @@\n-     * Removes the specified <code>Savepoint<\/code>  and subsequent <code>Savepoint<\/code> objects from the current\n+     * Removes the specified {@code Savepoint}  and subsequent {@code Savepoint} objects from the current\n@@ -764,1 +764,1 @@\n-     * will cause an <code>SQLException<\/code> to be thrown.\n+     * will cause an {@code SQLException} to be thrown.\n@@ -766,1 +766,1 @@\n-     * @param savepoint the <code>Savepoint<\/code> object to be removed\n+     * @param savepoint the {@code Savepoint} object to be removed\n@@ -778,2 +778,2 @@\n-     * Creates a <code>Statement<\/code> object that will generate\n-     * <code>ResultSet<\/code> objects with the given type, concurrency,\n+     * Creates a {@code Statement} object that will generate\n+     * {@code ResultSet} objects with the given type, concurrency,\n@@ -781,1 +781,1 @@\n-     * This method is the same as the <code>createStatement<\/code> method\n+     * This method is the same as the {@code createStatement} method\n@@ -785,1 +785,1 @@\n-     * @param resultSetType one of the following <code>ResultSet<\/code>\n+     * @param resultSetType one of the following {@code ResultSet}\n@@ -787,4 +787,4 @@\n-     *         <code>ResultSet.TYPE_FORWARD_ONLY<\/code>,\n-     *         <code>ResultSet.TYPE_SCROLL_INSENSITIVE<\/code>, or\n-     *         <code>ResultSet.TYPE_SCROLL_SENSITIVE<\/code>\n-     * @param resultSetConcurrency one of the following <code>ResultSet<\/code>\n+     *         {@code ResultSet.TYPE_FORWARD_ONLY},\n+     *         {@code ResultSet.TYPE_SCROLL_INSENSITIVE}, or\n+     *         {@code ResultSet.TYPE_SCROLL_SENSITIVE}\n+     * @param resultSetConcurrency one of the following {@code ResultSet}\n@@ -792,3 +792,3 @@\n-     *         <code>ResultSet.CONCUR_READ_ONLY<\/code> or\n-     *         <code>ResultSet.CONCUR_UPDATABLE<\/code>\n-     * @param resultSetHoldability one of the following <code>ResultSet<\/code>\n+     *         {@code ResultSet.CONCUR_READ_ONLY} or\n+     *         {@code ResultSet.CONCUR_UPDATABLE}\n+     * @param resultSetHoldability one of the following {@code ResultSet}\n@@ -796,4 +796,4 @@\n-     *         <code>ResultSet.HOLD_CURSORS_OVER_COMMIT<\/code> or\n-     *         <code>ResultSet.CLOSE_CURSORS_AT_COMMIT<\/code>\n-     * @return a new <code>Statement<\/code> object that will generate\n-     *         <code>ResultSet<\/code> objects with the given type,\n+     *         {@code ResultSet.HOLD_CURSORS_OVER_COMMIT} or\n+     *         {@code ResultSet.CLOSE_CURSORS_AT_COMMIT}\n+     * @return a new {@code Statement} object that will generate\n+     *         {@code ResultSet} objects with the given type,\n@@ -815,2 +815,2 @@\n-     * Creates a <code>PreparedStatement<\/code> object that will generate\n-     * <code>ResultSet<\/code> objects with the given type, concurrency,\n+     * Creates a {@code PreparedStatement} object that will generate\n+     * {@code ResultSet} objects with the given type, concurrency,\n@@ -819,1 +819,1 @@\n-     * This method is the same as the <code>prepareStatement<\/code> method\n+     * This method is the same as the {@code prepareStatement} method\n@@ -823,1 +823,1 @@\n-     * @param sql a <code>String<\/code> object that is the SQL statement to\n+     * @param sql a {@code String} object that is the SQL statement to\n@@ -826,1 +826,1 @@\n-     * @param resultSetType one of the following <code>ResultSet<\/code>\n+     * @param resultSetType one of the following {@code ResultSet}\n@@ -828,4 +828,4 @@\n-     *         <code>ResultSet.TYPE_FORWARD_ONLY<\/code>,\n-     *         <code>ResultSet.TYPE_SCROLL_INSENSITIVE<\/code>, or\n-     *         <code>ResultSet.TYPE_SCROLL_SENSITIVE<\/code>\n-     * @param resultSetConcurrency one of the following <code>ResultSet<\/code>\n+     *         {@code ResultSet.TYPE_FORWARD_ONLY},\n+     *         {@code ResultSet.TYPE_SCROLL_INSENSITIVE}, or\n+     *         {@code ResultSet.TYPE_SCROLL_SENSITIVE}\n+     * @param resultSetConcurrency one of the following {@code ResultSet}\n@@ -833,3 +833,3 @@\n-     *         <code>ResultSet.CONCUR_READ_ONLY<\/code> or\n-     *         <code>ResultSet.CONCUR_UPDATABLE<\/code>\n-     * @param resultSetHoldability one of the following <code>ResultSet<\/code>\n+     *         {@code ResultSet.CONCUR_READ_ONLY} or\n+     *         {@code ResultSet.CONCUR_UPDATABLE}\n+     * @param resultSetHoldability one of the following {@code ResultSet}\n@@ -837,3 +837,3 @@\n-     *         <code>ResultSet.HOLD_CURSORS_OVER_COMMIT<\/code> or\n-     *         <code>ResultSet.CLOSE_CURSORS_AT_COMMIT<\/code>\n-     * @return a new <code>PreparedStatement<\/code> object, containing the\n+     *         {@code ResultSet.HOLD_CURSORS_OVER_COMMIT} or\n+     *         {@code ResultSet.CLOSE_CURSORS_AT_COMMIT}\n+     * @return a new {@code PreparedStatement} object, containing the\n@@ -841,1 +841,1 @@\n-     *         <code>ResultSet<\/code> objects with the given type,\n+     *         {@code ResultSet} objects with the given type,\n@@ -858,3 +858,3 @@\n-     * Creates a <code>CallableStatement<\/code> object that will generate\n-     * <code>ResultSet<\/code> objects with the given type and concurrency.\n-     * This method is the same as the <code>prepareCall<\/code> method\n+     * Creates a {@code CallableStatement} object that will generate\n+     * {@code ResultSet} objects with the given type and concurrency.\n+     * This method is the same as the {@code prepareCall} method\n@@ -864,1 +864,1 @@\n-     * @param sql a <code>String<\/code> object that is the SQL statement to\n+     * @param sql a {@code String} object that is the SQL statement to\n@@ -866,1 +866,1 @@\n-     * @param resultSetType one of the following <code>ResultSet<\/code>\n+     * @param resultSetType one of the following {@code ResultSet}\n@@ -868,4 +868,4 @@\n-     *         <code>ResultSet.TYPE_FORWARD_ONLY<\/code>,\n-     *         <code>ResultSet.TYPE_SCROLL_INSENSITIVE<\/code>, or\n-     *         <code>ResultSet.TYPE_SCROLL_SENSITIVE<\/code>\n-     * @param resultSetConcurrency one of the following <code>ResultSet<\/code>\n+     *         {@code ResultSet.TYPE_FORWARD_ONLY},\n+     *         {@code ResultSet.TYPE_SCROLL_INSENSITIVE}, or\n+     *         {@code ResultSet.TYPE_SCROLL_SENSITIVE}\n+     * @param resultSetConcurrency one of the following {@code ResultSet}\n@@ -873,3 +873,3 @@\n-     *         <code>ResultSet.CONCUR_READ_ONLY<\/code> or\n-     *         <code>ResultSet.CONCUR_UPDATABLE<\/code>\n-     * @param resultSetHoldability one of the following <code>ResultSet<\/code>\n+     *         {@code ResultSet.CONCUR_READ_ONLY} or\n+     *         {@code ResultSet.CONCUR_UPDATABLE}\n+     * @param resultSetHoldability one of the following {@code ResultSet}\n@@ -877,3 +877,3 @@\n-     *         <code>ResultSet.HOLD_CURSORS_OVER_COMMIT<\/code> or\n-     *         <code>ResultSet.CLOSE_CURSORS_AT_COMMIT<\/code>\n-     * @return a new <code>CallableStatement<\/code> object, containing the\n+     *         {@code ResultSet.HOLD_CURSORS_OVER_COMMIT} or\n+     *         {@code ResultSet.CLOSE_CURSORS_AT_COMMIT}\n+     * @return a new {@code CallableStatement} object, containing the\n@@ -881,1 +881,1 @@\n-     *         <code>ResultSet<\/code> objects with the given type,\n+     *         {@code ResultSet} objects with the given type,\n@@ -899,1 +899,1 @@\n-     * Creates a default <code>PreparedStatement<\/code> object that has\n+     * Creates a default {@code PreparedStatement} object that has\n@@ -903,1 +903,1 @@\n-     * is not an <code>INSERT<\/code> statement, or an SQL statement able to return\n+     * is not an {@code INSERT} statement, or an SQL statement able to return\n@@ -909,1 +909,1 @@\n-     * the method <code>prepareStatement<\/code> will send\n+     * the method {@code prepareStatement} will send\n@@ -912,1 +912,1 @@\n-     * not be sent to the database until the <code>PreparedStatement<\/code>\n+     * not be sent to the database until the {@code PreparedStatement}\n@@ -916,3 +916,3 @@\n-     * Result sets created using the returned <code>PreparedStatement<\/code>\n-     * object will by default be type <code>TYPE_FORWARD_ONLY<\/code>\n-     * and have a concurrency level of <code>CONCUR_READ_ONLY<\/code>.\n+     * Result sets created using the returned {@code PreparedStatement}\n+     * object will by default be type {@code TYPE_FORWARD_ONLY}\n+     * and have a concurrency level of {@code CONCUR_READ_ONLY}.\n@@ -926,3 +926,3 @@\n-     *        <code>Statement.RETURN_GENERATED_KEYS<\/code> or\n-     *        <code>Statement.NO_GENERATED_KEYS<\/code>\n-     * @return a new <code>PreparedStatement<\/code> object, containing the\n+     *        {@code Statement.RETURN_GENERATED_KEYS} or\n+     *        {@code Statement.NO_GENERATED_KEYS}\n+     * @return a new {@code PreparedStatement} object, containing the\n@@ -944,1 +944,1 @@\n-     * Creates a default <code>PreparedStatement<\/code> object capable\n+     * Creates a default {@code PreparedStatement} object capable\n@@ -949,1 +949,1 @@\n-     * is not an <code>INSERT<\/code> statement, or an SQL statement able to return\n+     * is not an {@code INSERT} statement, or an SQL statement able to return\n@@ -953,1 +953,1 @@\n-     * pre-compiled and stored in a <code>PreparedStatement<\/code> object. This\n+     * pre-compiled and stored in a {@code PreparedStatement} object. This\n@@ -960,1 +960,1 @@\n-     * the method <code>prepareStatement<\/code> will send\n+     * the method {@code prepareStatement} will send\n@@ -963,1 +963,1 @@\n-     * not be sent to the database until the <code>PreparedStatement<\/code>\n+     * not be sent to the database until the {@code PreparedStatement}\n@@ -967,3 +967,3 @@\n-     * Result sets created using the returned <code>PreparedStatement<\/code>\n-     * object will by default be type <code>TYPE_FORWARD_ONLY<\/code>\n-     * and have a concurrency level of <code>CONCUR_READ_ONLY<\/code>.\n+     * Result sets created using the returned {@code PreparedStatement}\n+     * object will by default be type {@code TYPE_FORWARD_ONLY}\n+     * and have a concurrency level of {@code CONCUR_READ_ONLY}.\n@@ -977,1 +977,1 @@\n-     * @return a new <code>PreparedStatement<\/code> object, containing the\n+     * @return a new {@code PreparedStatement} object, containing the\n@@ -992,1 +992,1 @@\n-     * Creates a default <code>PreparedStatement<\/code> object capable\n+     * Creates a default {@code PreparedStatement} object capable\n@@ -997,1 +997,1 @@\n-     * is not an <code>INSERT<\/code> statement, or an SQL statement able to return\n+     * is not an {@code INSERT} statement, or an SQL statement able to return\n@@ -1001,1 +1001,1 @@\n-     * pre-compiled and stored in a <code>PreparedStatement<\/code> object. This\n+     * pre-compiled and stored in a {@code PreparedStatement} object. This\n@@ -1008,1 +1008,1 @@\n-     * the method <code>prepareStatement<\/code> will send\n+     * the method {@code prepareStatement} will send\n@@ -1011,1 +1011,1 @@\n-     * not be sent to the database until the <code>PreparedStatement<\/code>\n+     * not be sent to the database until the {@code PreparedStatement}\n@@ -1015,3 +1015,3 @@\n-     * Result sets created using the returned <code>PreparedStatement<\/code>\n-     * object will by default be type <code>TYPE_FORWARD_ONLY<\/code>\n-     * and have a concurrency level of <code>CONCUR_READ_ONLY<\/code>.\n+     * Result sets created using the returned {@code PreparedStatement}\n+     * object will by default be type {@code TYPE_FORWARD_ONLY}\n+     * and have a concurrency level of {@code CONCUR_READ_ONLY}.\n@@ -1025,1 +1025,1 @@\n-     * @return a new <code>PreparedStatement<\/code> object, containing the\n+     * @return a new {@code PreparedStatement} object, containing the\n@@ -1040,5 +1040,5 @@\n-     * Constructs an object that implements the <code>Clob<\/code> interface. The object\n-     * returned initially contains no data.  The <code>setAsciiStream<\/code>,\n-     * <code>setCharacterStream<\/code> and <code>setString<\/code> methods of\n-     * the <code>Clob<\/code> interface may be used to add data to the <code>Clob<\/code>.\n-     * @return An object that implements the <code>Clob<\/code> interface\n+     * Constructs an object that implements the {@code Clob} interface. The object\n+     * returned initially contains no data.  The {@code setAsciiStream},\n+     * {@code setCharacterStream} and {@code setString} methods of\n+     * the {@code Clob} interface may be used to add data to the {@code Clob}.\n+     * @return An object that implements the {@code Clob} interface\n@@ -1046,1 +1046,1 @@\n-     * <code>Clob<\/code> interface can not be constructed, this method is\n+     * {@code Clob} interface can not be constructed, this method is\n@@ -1056,5 +1056,5 @@\n-     * Constructs an object that implements the <code>Blob<\/code> interface. The object\n-     * returned initially contains no data.  The <code>setBinaryStream<\/code> and\n-     * <code>setBytes<\/code> methods of the <code>Blob<\/code> interface may be used to add data to\n-     * the <code>Blob<\/code>.\n-     * @return  An object that implements the <code>Blob<\/code> interface\n+     * Constructs an object that implements the {@code Blob} interface. The object\n+     * returned initially contains no data.  The {@code setBinaryStream} and\n+     * {@code setBytes} methods of the {@code Blob} interface may be used to add data to\n+     * the {@code Blob}.\n+     * @return  An object that implements the {@code Blob} interface\n@@ -1062,1 +1062,1 @@\n-     * <code>Blob<\/code> interface can not be constructed, this method is\n+     * {@code Blob} interface can not be constructed, this method is\n@@ -1072,5 +1072,5 @@\n-     * Constructs an object that implements the <code>NClob<\/code> interface. The object\n-     * returned initially contains no data.  The <code>setAsciiStream<\/code>,\n-     * <code>setCharacterStream<\/code> and <code>setString<\/code> methods of the <code>NClob<\/code> interface may\n-     * be used to add data to the <code>NClob<\/code>.\n-     * @return An object that implements the <code>NClob<\/code> interface\n+     * Constructs an object that implements the {@code NClob} interface. The object\n+     * returned initially contains no data.  The {@code setAsciiStream},\n+     * {@code setCharacterStream} and {@code setString} methods of the {@code NClob} interface may\n+     * be used to add data to the {@code NClob}.\n+     * @return An object that implements the {@code NClob} interface\n@@ -1078,1 +1078,1 @@\n-     * <code>NClob<\/code> interface can not be constructed, this method is\n+     * {@code NClob} interface can not be constructed, this method is\n@@ -1088,3 +1088,3 @@\n-     * Constructs an object that implements the <code>SQLXML<\/code> interface. The object\n-     * returned initially contains no data. The <code>createXmlStreamWriter<\/code> object and\n-     * <code>setString<\/code> method of the <code>SQLXML<\/code> interface may be used to add data to the <code>SQLXML<\/code>\n+     * Constructs an object that implements the {@code SQLXML} interface. The object\n+     * returned initially contains no data. The {@code createXmlStreamWriter} object and\n+     * {@code setString} method of the {@code SQLXML} interface may be used to add data to the {@code SQLXML}\n@@ -1092,2 +1092,2 @@\n-     * @return An object that implements the <code>SQLXML<\/code> interface\n-     * @throws SQLException if an object that implements the <code>SQLXML<\/code> interface can not\n+     * @return An object that implements the {@code SQLXML} interface\n+     * @throws SQLException if an object that implements the {@code SQLXML} interface can not\n@@ -1131,1 +1131,1 @@\n-         * Applications may use the <code>DatabaseMetaData.getClientInfoProperties<\/code>\n+         * Applications may use the {@code DatabaseMetaData.getClientInfoProperties}\n@@ -1149,2 +1149,2 @@\n-         * generate a warning or generate a <code>SQLClientInfoException<\/code>.  If the driver\n-         * generates a <code>SQLClientInfoException<\/code>, the value specified was not set on the\n+         * generate a warning or generate a {@code SQLClientInfoException}.  If the driver\n+         * generates a {@code SQLClientInfoException}, the value specified was not set on the\n@@ -1185,1 +1185,1 @@\n-     * <code>Properties<\/code> object contains the names and values of the client info\n+     * {@code Properties} object contains the names and values of the client info\n@@ -1191,1 +1191,1 @@\n-     * properties on the connection.  See <code>setClientInfo (String, String)<\/code> for\n+     * properties on the connection.  See {@code setClientInfo (String, String)} for\n@@ -1195,1 +1195,1 @@\n-     * <code>SQLClientInfoException<\/code> is thrown. The <code>SQLClientInfoException<\/code>\n+     * {@code SQLClientInfoException} is thrown. The {@code SQLClientInfoException}\n@@ -1223,1 +1223,1 @@\n-         * Applications may use the <code>DatabaseMetaData.getClientInfoProperties<\/code>\n+         * Applications may use the {@code DatabaseMetaData.getClientInfoProperties}\n@@ -1247,1 +1247,1 @@\n-         * @return      A <code>Properties<\/code> object that contains the name and current value of\n+         * @return      A {@code Properties} object that contains the name and current value of\n@@ -1262,1 +1262,1 @@\n-  * <b>Note: <\/b>When <code>createArrayOf<\/code> is used to create an array object\n+  * <b>Note: <\/b>When {@code createArrayOf} is used to create an array object\n@@ -1264,2 +1264,2 @@\n-  * whether the <code>Array<\/code> object is an array of that primitive\n-  * data type or an array of <code>Object<\/code>.\n+  * whether the {@code Array} object is an array of that primitive\n+  * data type or an array of {@code Object}.\n@@ -1268,2 +1268,2 @@\n-  * <code>Object<\/code> array to the default JDBC SQL type defined in\n-  * java.sql.Types for the given class of <code>Object<\/code>. The default\n+  * {@code Object} array to the default JDBC SQL type defined in\n+  * java.sql.Types for the given class of {@code Object}. The default\n@@ -1272,1 +1272,1 @@\n-  * it is implementation defined whether an <code>SQLException<\/code> is\n+  * it is implementation defined whether an {@code SQLException} is\n@@ -1277,1 +1277,1 @@\n-  *  is the value returned by <code>Array.getBaseTypeName<\/code>\n+  *  is the value returned by {@code Array.getBaseTypeName}\n@@ -1291,1 +1291,1 @@\n-  * @param typeName the SQL type name of the SQL structured type that this <code>Struct<\/code>\n+  * @param typeName the SQL type name of the SQL structured type that this {@code Struct}\n@@ -1294,1 +1294,1 @@\n-  * <code>Struct.getSQLTypeName<\/code>.\n+  * {@code Struct.getSQLTypeName}.\n@@ -1329,1 +1329,1 @@\n-     * Retrieves this <code>Connection<\/code> object's current schema name.\n+     * Retrieves this {@code Connection} object's current schema name.\n@@ -1331,1 +1331,1 @@\n-     * @return the current schema name or <code>null<\/code> if there is none\n+     * @return the current schema name or {@code null} if there is none\n@@ -1340,1 +1340,1 @@\n-     * Terminates an open connection.  Calling <code>abort<\/code> results in:\n+     * Terminates an open connection.  Calling {@code abort} results in:\n@@ -1346,1 +1346,1 @@\n-     * will either progress to completion or throw an <code>SQLException<\/code>.\n+     * will either progress to completion or throw an {@code SQLException}.\n@@ -1349,2 +1349,2 @@\n-     * Calling <code>abort<\/code> marks the connection closed and releases any\n-     * resources. Calling <code>abort<\/code> on a closed connection is a\n+     * Calling {@code abort} marks the connection closed and releases any\n+     * resources. Calling {@code abort} on a closed connection is a\n@@ -1355,2 +1355,2 @@\n-     * <code>abort<\/code> method returns, the connection will have been marked as\n-     * closed and the <code>Executor<\/code> that was passed as a parameter to abort\n+     * {@code abort} method returns, the connection will have been marked as\n+     * closed and the {@code Executor} that was passed as a parameter to abort\n@@ -1359,1 +1359,1 @@\n-     * This method checks to see that there is an <code>SQLPermission<\/code>\n+     * This method checks to see that there is an {@code SQLPermission}\n@@ -1361,2 +1361,2 @@\n-     * <code>SecurityManager<\/code> exists and its\n-     * <code>checkPermission<\/code> method denies calling <code>abort<\/code>,\n+     * {@code SecurityManager} exists and its\n+     * {@code checkPermission} method denies calling {@code abort},\n@@ -1364,3 +1364,3 @@\n-     * <code>java.lang.SecurityException<\/code>.\n-     * @param executor  The <code>Executor<\/code>  implementation which will\n-     * be used by <code>abort<\/code>.\n+     * {@code java.lang.SecurityException}.\n+     * @param executor  The {@code Executor}  implementation which will\n+     * be used by {@code abort}.\n@@ -1370,1 +1370,1 @@\n-     *    <code>checkPermission<\/code> method denies calling <code>abort<\/code>\n+     *    {@code checkPermission} method denies calling {@code abort}\n@@ -1379,2 +1379,2 @@\n-     * Sets the maximum period a <code>Connection<\/code> or\n-     * objects created from the <code>Connection<\/code>\n+     * Sets the maximum period a {@code Connection} or\n+     * objects created from the {@code Connection}\n@@ -1383,2 +1383,2 @@\n-     * return with a <code>SQLException<\/code>, and the <code>Connection<\/code>\n-     * or objects created from the <code>Connection<\/code>  will be marked as\n+     * return with a {@code SQLException}, and the {@code Connection}\n+     * or objects created from the {@code Connection}  will be marked as\n@@ -1386,3 +1386,3 @@\n-     * the objects, with the exception of the <code>close<\/code>,\n-     * <code>isClosed<\/code> or <code>Connection.isValid<\/code>\n-     * methods, will result in  a <code>SQLException<\/code>.\n+     * the objects, with the exception of the {@code close},\n+     * {@code isClosed} or {@code Connection.isValid}\n+     * methods, will result in  a {@code SQLException}.\n@@ -1397,1 +1397,1 @@\n-     * The <code>setNetworkTimeout<\/code> method will cover cases where\n+     * The {@code setNetworkTimeout} method will cover cases where\n@@ -1435,1 +1435,1 @@\n-     * This method checks to see that there is an <code>SQLPermission<\/code>\n+     * This method checks to see that there is an {@code SQLPermission}\n@@ -1437,4 +1437,4 @@\n-     * <code>SecurityManager<\/code> exists and its\n-     * <code>checkPermission<\/code> method denies calling\n-     * <code>setNetworkTimeout<\/code>, this method throws a\n-     * <code>java.lang.SecurityException<\/code>.\n+     * {@code SecurityManager} exists and its\n+     * {@code checkPermission} method denies calling\n+     * {@code setNetworkTimeout}, this method throws a\n+     * {@code java.lang.SecurityException}.\n@@ -1442,2 +1442,2 @@\n-     * @param executor  The <code>Executor<\/code>  implementation which will\n-     * be used by <code>setNetworkTimeout<\/code>.\n+     * @param executor  The {@code Executor}  implementation which will\n+     * be used by {@code setNetworkTimeout}.\n@@ -1454,1 +1454,1 @@\n-     * or the value specified for <code>seconds<\/code> is less than 0.\n+     * or the value specified for {@code seconds} is less than 0.\n@@ -1456,2 +1456,2 @@\n-     *    <code>checkPermission<\/code> method denies calling\n-     * <code>setNetworkTimeout<\/code>.\n+     *    {@code checkPermission} method denies calling\n+     * {@code setNetworkTimeout}.\n@@ -1474,1 +1474,1 @@\n-     * <code>SQLException<\/code> is thrown.\n+     * {@code SQLException} is thrown.\n@@ -1479,1 +1479,1 @@\n-     * this method is called on a closed <code>Connection<\/code>\n+     * this method is called on a closed {@code Connection}\n","filename":"src\/java.sql\/share\/classes\/java\/sql\/Connection.java","additions":313,"deletions":313,"binary":false,"changes":626,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,1 @@\n- * An exception  thrown as a <code>DataTruncation<\/code> exception\n+ * An exception  thrown as a {@code DataTruncation} exception\n@@ -31,1 +31,1 @@\n- * <code>DataTruncation<\/code> warning (on reads)\n+ * {@code DataTruncation} warning (on reads)\n@@ -33,1 +33,1 @@\n- *  exceeded <code>MaxFieldSize<\/code>.\n+ *  exceeded {@code MaxFieldSize}.\n@@ -35,2 +35,2 @@\n- * <P>The SQLstate for a <code>DataTruncation<\/code> during read is <code>01004<\/code>.\n- * <P>The SQLstate for a <code>DataTruncation<\/code> during write is <code>22001<\/code>.\n+ * <P>The SQLstate for a {@code DataTruncation} during read is {@code 01004}.\n+ * <P>The SQLstate for a {@code DataTruncation} during write is {@code 22001}.\n@@ -44,1 +44,1 @@\n-     * Creates a <code>DataTruncation<\/code> object\n+     * Creates a {@code DataTruncation} object\n@@ -46,2 +46,2 @@\n-     * to 01004 when <code>read<\/code> is set to <code>true<\/code> and 22001\n-     * when <code>read<\/code> is set to <code>false<\/code>,\n+     * to 01004 when {@code read} is set to {@code true} and 22001\n+     * when {@code read} is set to {@code false},\n@@ -51,1 +51,1 @@\n-     * The <code>cause<\/code> is not initialized, and may subsequently be\n+     * The {@code cause} is not initialized, and may subsequently be\n@@ -74,1 +74,1 @@\n-     * Creates a <code>DataTruncation<\/code> object\n+     * Creates a {@code DataTruncation} object\n@@ -76,2 +76,2 @@\n-     * to 01004 when <code>read<\/code> is set to <code>true<\/code> and 22001\n-     * when <code>read<\/code> is set to <code>false<\/code>,\n+     * to 01004 when {@code read} is set to {@code true} and 22001\n+     * when {@code read} is set to {@code false},\n@@ -87,2 +87,2 @@\n-     * @param cause the underlying reason for this <code>DataTruncation<\/code>\n-     * (which is saved for later retrieval by the <code>getCause()<\/code> method);\n+     * @param cause the underlying reason for this {@code DataTruncation}\n+     * (which is saved for later retrieval by the {@code getCause()} method);\n@@ -108,1 +108,1 @@\n-     * which case the <code>parameter<\/code> and <code>read<\/code> fields should be ignored.\n+     * which case the {@code parameter} and {@code read} fields should be ignored.\n@@ -120,2 +120,2 @@\n-     * @return <code>true<\/code> if the value truncated was a parameter;\n-         *         <code>false<\/code> if it was a column value\n+     * @return {@code true} if the value truncated was a parameter;\n+         *         {@code false} if it was a column value\n@@ -130,2 +130,2 @@\n-     * @return <code>true<\/code> if the value was truncated when read from\n-         *         the database; <code>false<\/code> if the data was truncated on a write\n+     * @return {@code true} if the value was truncated when read from\n+         *         the database; {@code false} if the data was truncated on a write\n@@ -140,1 +140,1 @@\n-     * performed.  The value may be <code>-1<\/code> if the size is unknown.\n+     * performed.  The value may be {@code -1} if the size is unknown.\n@@ -150,1 +150,1 @@\n-     * The value may be <code>-1<\/code> if the size is unknown.\n+     * The value may be {@code -1} if the size is unknown.\n","filename":"src\/java.sql\/share\/classes\/java\/sql\/DataTruncation.java","additions":22,"deletions":22,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -46,4 +46,4 @@\n- * <code>getTypeInfo<\/code> to find out what data types can be used in a\n- * <code>CREATE TABLE<\/code> statement.  Or a user might call the method\n- * <code>supportsCorrelatedSubqueries<\/code> to see if it is possible to use\n- * a correlated subquery or <code>supportsBatchUpdates<\/code> to see if it is\n+ * {@code getTypeInfo} to find out what data types can be used in a\n+ * {@code CREATE TABLE} statement.  Or a user might call the method\n+ * {@code supportsCorrelatedSubqueries} to see if it is possible to use\n+ * a correlated subquery or {@code supportsBatchUpdates} to see if it is\n@@ -52,6 +52,6 @@\n- * Some <code>DatabaseMetaData<\/code> methods return lists of information\n- * in the form of <code>ResultSet<\/code> objects.\n- * Regular <code>ResultSet<\/code> methods, such as\n- * <code>getString<\/code> and <code>getInt<\/code>, can be used\n- * to retrieve the data from these <code>ResultSet<\/code> objects.  If\n- * a given form of metadata is not available, an empty <code>ResultSet<\/code>\n+ * Some {@code DatabaseMetaData} methods return lists of information\n+ * in the form of {@code ResultSet} objects.\n+ * Regular {@code ResultSet} methods, such as\n+ * {@code getString} and {@code getInt}, can be used\n+ * to retrieve the data from these {@code ResultSet} objects.  If\n+ * a given form of metadata is not available, an empty {@code ResultSet}\n@@ -59,1 +59,1 @@\n- * returned by the <code>ResultSet<\/code> object for a given method\n+ * returned by the {@code ResultSet} object for a given method\n@@ -63,1 +63,1 @@\n- * Some <code>DatabaseMetaData<\/code> methods take arguments that are\n+ * Some {@code DatabaseMetaData} methods take arguments that are\n@@ -68,1 +68,1 @@\n- * argument is set to <code>null<\/code>, that argument's criterion will\n+ * argument is set to {@code null}, that argument's criterion will\n@@ -80,1 +80,1 @@\n-     * returned by the method <code>getProcedures<\/code>.\n+     * returned by the method {@code getProcedures}.\n@@ -82,1 +82,1 @@\n-     * @return <code>true<\/code> if so; <code>false<\/code> otherwise\n+     * @return {@code true} if so; {@code false} otherwise\n@@ -89,1 +89,1 @@\n-     * by the method <code>getTables<\/code> in a <code>SELECT<\/code>\n+     * by the method {@code getTables} in a {@code SELECT}\n@@ -92,1 +92,1 @@\n-     * @return <code>true<\/code> if so; <code>false<\/code> otherwise\n+     * @return {@code true} if so; {@code false} otherwise\n@@ -100,1 +100,1 @@\n-     * @return the URL for this DBMS or <code>null<\/code> if it cannot be\n+     * @return the URL for this DBMS or {@code null} if it cannot be\n@@ -117,1 +117,1 @@\n-     * @return <code>true<\/code> if so; <code>false<\/code> otherwise\n+     * @return {@code true} if so; {@code false} otherwise\n@@ -123,2 +123,2 @@\n-     * Retrieves whether <code>NULL<\/code> values are sorted high.\n-     * Sorted high means that <code>NULL<\/code> values\n+     * Retrieves whether {@code NULL} values are sorted high.\n+     * Sorted high means that {@code NULL} values\n@@ -126,1 +126,1 @@\n-     * if this method returns <code>true<\/code>,  <code>NULL<\/code> values\n+     * if this method returns {@code true},  {@code NULL} values\n@@ -128,1 +128,1 @@\n-     * <code>nullsAreSortedAtEnd<\/code> indicates whether <code>NULL<\/code> values\n+     * {@code nullsAreSortedAtEnd} indicates whether {@code NULL} values\n@@ -131,1 +131,1 @@\n-     * @return <code>true<\/code> if so; <code>false<\/code> otherwise\n+     * @return {@code true} if so; {@code false} otherwise\n@@ -137,2 +137,2 @@\n-     * Retrieves whether <code>NULL<\/code> values are sorted low.\n-     * Sorted low means that <code>NULL<\/code> values\n+     * Retrieves whether {@code NULL} values are sorted low.\n+     * Sorted low means that {@code NULL} values\n@@ -140,1 +140,1 @@\n-     * if this method returns <code>true<\/code>,  <code>NULL<\/code> values\n+     * if this method returns {@code true},  {@code NULL} values\n@@ -142,1 +142,1 @@\n-     * <code>nullsAreSortedAtStart<\/code> indicates whether <code>NULL<\/code> values\n+     * {@code nullsAreSortedAtStart} indicates whether {@code NULL} values\n@@ -145,1 +145,1 @@\n-     * @return <code>true<\/code> if so; <code>false<\/code> otherwise\n+     * @return {@code true} if so; {@code false} otherwise\n@@ -151,1 +151,1 @@\n-     * Retrieves whether <code>NULL<\/code> values are sorted at the start regardless\n+     * Retrieves whether {@code NULL} values are sorted at the start regardless\n@@ -154,1 +154,1 @@\n-     * @return <code>true<\/code> if so; <code>false<\/code> otherwise\n+     * @return {@code true} if so; {@code false} otherwise\n@@ -160,1 +160,1 @@\n-     * Retrieves whether <code>NULL<\/code> values are sorted at the end regardless of\n+     * Retrieves whether {@code NULL} values are sorted at the end regardless of\n@@ -163,1 +163,1 @@\n-     * @return <code>true<\/code> if so; <code>false<\/code> otherwise\n+     * @return {@code true} if so; {@code false} otherwise\n@@ -193,1 +193,1 @@\n-     * Retrieves the version number of this JDBC driver as a <code>String<\/code>.\n+     * Retrieves the version number of this JDBC driver as a {@code String}.\n@@ -217,1 +217,1 @@\n-     * @return <code>true<\/code> if so; <code>false<\/code> otherwise\n+     * @return {@code true} if so; {@code false} otherwise\n@@ -225,2 +225,2 @@\n-     * @return <code>true<\/code> if this database uses a local file for each table;\n-     *         <code>false<\/code> otherwise\n+     * @return {@code true} if this database uses a local file for each table;\n+     *         {@code false} otherwise\n@@ -235,1 +235,1 @@\n-     * @return <code>true<\/code> if so; <code>false<\/code> otherwise\n+     * @return {@code true} if so; {@code false} otherwise\n@@ -244,1 +244,1 @@\n-     * @return <code>true<\/code> if so; <code>false<\/code> otherwise\n+     * @return {@code true} if so; {@code false} otherwise\n@@ -253,1 +253,1 @@\n-     * @return <code>true<\/code> if so; <code>false<\/code> otherwise\n+     * @return {@code true} if so; {@code false} otherwise\n@@ -262,1 +262,1 @@\n-     * @return <code>true<\/code> if so; <code>false<\/code> otherwise\n+     * @return {@code true} if so; {@code false} otherwise\n@@ -271,1 +271,1 @@\n-     * @return <code>true<\/code> if so; <code>false<\/code> otherwise\n+     * @return {@code true} if so; {@code false} otherwise\n@@ -280,1 +280,1 @@\n-     * @return <code>true<\/code> if so; <code>false<\/code> otherwise\n+     * @return {@code true} if so; {@code false} otherwise\n@@ -289,1 +289,1 @@\n-     * @return <code>true<\/code> if so; <code>false<\/code> otherwise\n+     * @return {@code true} if so; {@code false} otherwise\n@@ -298,1 +298,1 @@\n-     * @return <code>true<\/code> if so; <code>false<\/code> otherwise\n+     * @return {@code true} if so; {@code false} otherwise\n@@ -389,1 +389,1 @@\n-     * Retrieves whether this database supports <code>ALTER TABLE<\/code>\n+     * Retrieves whether this database supports {@code ALTER TABLE}\n@@ -392,1 +392,1 @@\n-     * @return <code>true<\/code> if so; <code>false<\/code> otherwise\n+     * @return {@code true} if so; {@code false} otherwise\n@@ -398,1 +398,1 @@\n-     * Retrieves whether this database supports <code>ALTER TABLE<\/code>\n+     * Retrieves whether this database supports {@code ALTER TABLE}\n@@ -401,1 +401,1 @@\n-     * @return <code>true<\/code> if so; <code>false<\/code> otherwise\n+     * @return {@code true} if so; {@code false} otherwise\n@@ -413,1 +413,1 @@\n-     * @return <code>true<\/code> if so; <code>false<\/code> otherwise\n+     * @return {@code true} if so; {@code false} otherwise\n@@ -420,2 +420,2 @@\n-     * <code>NULL<\/code> and non-<code>NULL<\/code> values being\n-     * <code>NULL<\/code>.\n+     * {@code NULL} and non-{@code NULL} values being\n+     * {@code NULL}.\n@@ -423,1 +423,1 @@\n-     * @return <code>true<\/code> if so; <code>false<\/code> otherwise\n+     * @return {@code true} if so; {@code false} otherwise\n@@ -430,1 +430,1 @@\n-     * <code>CONVERT<\/code> for the conversion of one JDBC type to another.\n+     * {@code CONVERT} for the conversion of one JDBC type to another.\n@@ -432,1 +432,1 @@\n-     * in <code>java.sql.Types<\/code>.\n+     * in {@code java.sql.Types}.\n@@ -434,1 +434,1 @@\n-     * @return <code>true<\/code> if so; <code>false<\/code> otherwise\n+     * @return {@code true} if so; {@code false} otherwise\n@@ -441,1 +441,1 @@\n-     * <code>CONVERT<\/code> for conversions between the JDBC types <i>fromType<\/i>\n+     * {@code CONVERT} for conversions between the JDBC types <i>fromType<\/i>\n@@ -443,1 +443,1 @@\n-     * in <code>java.sql.Types<\/code>.\n+     * in {@code java.sql.Types}.\n@@ -446,1 +446,1 @@\n-     *        the class <code>java.sql.Types<\/code>\n+     *        the class {@code java.sql.Types}\n@@ -448,2 +448,2 @@\n-     *        the class <code>java.sql.Types<\/code>\n-     * @return <code>true<\/code> if so; <code>false<\/code> otherwise\n+     *        the class {@code java.sql.Types}\n+     * @return {@code true} if so; {@code false} otherwise\n@@ -458,1 +458,1 @@\n-     * @return <code>true<\/code> if so; <code>false<\/code> otherwise\n+     * @return {@code true} if so; {@code false} otherwise\n@@ -467,1 +467,1 @@\n-     * @return <code>true<\/code> if so; <code>false<\/code> otherwise\n+     * @return {@code true} if so; {@code false} otherwise\n@@ -474,1 +474,1 @@\n-     * <code>ORDER BY<\/code> lists.\n+     * {@code ORDER BY} lists.\n@@ -476,1 +476,1 @@\n-     * @return <code>true<\/code> if so; <code>false<\/code> otherwise\n+     * @return {@code true} if so; {@code false} otherwise\n@@ -483,2 +483,2 @@\n-     * not in the <code>SELECT<\/code> statement in an\n-     * <code>ORDER BY<\/code> clause.\n+     * not in the {@code SELECT} statement in an\n+     * {@code ORDER BY} clause.\n@@ -486,1 +486,1 @@\n-     * @return <code>true<\/code> if so; <code>false<\/code> otherwise\n+     * @return {@code true} if so; {@code false} otherwise\n@@ -493,1 +493,1 @@\n-     * <code>GROUP BY<\/code> clause.\n+     * {@code GROUP BY} clause.\n@@ -495,1 +495,1 @@\n-     * @return <code>true<\/code> if so; <code>false<\/code> otherwise\n+     * @return {@code true} if so; {@code false} otherwise\n@@ -502,2 +502,2 @@\n-     * not in the <code>SELECT<\/code> statement in a\n-     * <code>GROUP BY<\/code> clause.\n+     * not in the {@code SELECT} statement in a\n+     * {@code GROUP BY} clause.\n@@ -505,1 +505,1 @@\n-     * @return <code>true<\/code> if so; <code>false<\/code> otherwise\n+     * @return {@code true} if so; {@code false} otherwise\n@@ -512,3 +512,3 @@\n-     * the <code>SELECT<\/code> statement in a <code>GROUP BY<\/code> clause\n-     * provided that all of the columns in the <code>SELECT<\/code> statement\n-     * are included in the <code>GROUP BY<\/code> clause.\n+     * the {@code SELECT} statement in a {@code GROUP BY} clause\n+     * provided that all of the columns in the {@code SELECT} statement\n+     * are included in the {@code GROUP BY} clause.\n@@ -516,1 +516,1 @@\n-     * @return <code>true<\/code> if so; <code>false<\/code> otherwise\n+     * @return {@code true} if so; {@code false} otherwise\n@@ -523,1 +523,1 @@\n-     * <code>LIKE<\/code> escape clause.\n+     * {@code LIKE} escape clause.\n@@ -525,1 +525,1 @@\n-     * @return <code>true<\/code> if so; <code>false<\/code> otherwise\n+     * @return {@code true} if so; {@code false} otherwise\n@@ -532,2 +532,2 @@\n-     * <code>ResultSet<\/code> objects from a single call to the\n-     * method <code>execute<\/code>.\n+     * {@code ResultSet} objects from a single call to the\n+     * method {@code execute}.\n@@ -535,1 +535,1 @@\n-     * @return <code>true<\/code> if so; <code>false<\/code> otherwise\n+     * @return {@code true} if so; {@code false} otherwise\n@@ -544,1 +544,1 @@\n-     * @return <code>true<\/code> if so; <code>false<\/code> otherwise\n+     * @return {@code true} if so; {@code false} otherwise\n@@ -552,1 +552,1 @@\n-     * @return <code>true<\/code> if so; <code>false<\/code> otherwise\n+     * @return {@code true} if so; {@code false} otherwise\n@@ -560,1 +560,1 @@\n-     * @return <code>true<\/code> if so; <code>false<\/code> otherwise\n+     * @return {@code true} if so; {@code false} otherwise\n@@ -568,1 +568,1 @@\n-     * @return <code>true<\/code> if so; <code>false<\/code> otherwise\n+     * @return {@code true} if so; {@code false} otherwise\n@@ -576,1 +576,1 @@\n-     * @return <code>true<\/code> if so; <code>false<\/code> otherwise\n+     * @return {@code true} if so; {@code false} otherwise\n@@ -585,1 +585,1 @@\n-     * @return <code>true<\/code> if so; <code>false<\/code> otherwise\n+     * @return {@code true} if so; {@code false} otherwise\n@@ -593,1 +593,1 @@\n-     * @return <code>true<\/code> if so; <code>false<\/code> otherwise\n+     * @return {@code true} if so; {@code false} otherwise\n@@ -601,1 +601,1 @@\n-     * @return <code>true<\/code> if so; <code>false<\/code> otherwise\n+     * @return {@code true} if so; {@code false} otherwise\n@@ -610,1 +610,1 @@\n-     * @return <code>true<\/code> if so; <code>false<\/code> otherwise\n+     * @return {@code true} if so; {@code false} otherwise\n@@ -618,1 +618,1 @@\n-     * @return <code>true<\/code> if so; <code>false<\/code> otherwise\n+     * @return {@code true} if so; {@code false} otherwise\n@@ -626,1 +626,1 @@\n-     * @return <code>true<\/code> if so; <code>false<\/code> otherwise\n+     * @return {@code true} if so; {@code false} otherwise\n@@ -633,2 +633,2 @@\n-     * joins.  (This will be <code>true<\/code> if the method\n-     * <code>supportsFullOuterJoins<\/code> returns <code>true<\/code>).\n+     * joins.  (This will be {@code true} if the method\n+     * {@code supportsFullOuterJoins} returns {@code true}).\n@@ -636,1 +636,1 @@\n-     * @return <code>true<\/code> if so; <code>false<\/code> otherwise\n+     * @return {@code true} if so; {@code false} otherwise\n@@ -669,2 +669,2 @@\n-     * @return <code>true<\/code> if the catalog name appears at the beginning\n-     *         of a fully qualified table name; <code>false<\/code> otherwise\n+     * @return {@code true} if the catalog name appears at the beginning\n+     *         of a fully qualified table name; {@code false} otherwise\n@@ -676,1 +676,1 @@\n-     * Retrieves the <code>String<\/code> that this database uses as the\n+     * Retrieves the {@code String} that this database uses as the\n@@ -687,1 +687,1 @@\n-     * @return <code>true<\/code> if so; <code>false<\/code> otherwise\n+     * @return {@code true} if so; {@code false} otherwise\n@@ -695,1 +695,1 @@\n-     * @return <code>true<\/code> if so; <code>false<\/code> otherwise\n+     * @return {@code true} if so; {@code false} otherwise\n@@ -703,1 +703,1 @@\n-     * @return <code>true<\/code> if so; <code>false<\/code> otherwise\n+     * @return {@code true} if so; {@code false} otherwise\n@@ -711,1 +711,1 @@\n-     * @return <code>true<\/code> if so; <code>false<\/code> otherwise\n+     * @return {@code true} if so; {@code false} otherwise\n@@ -719,1 +719,1 @@\n-     * @return <code>true<\/code> if so; <code>false<\/code> otherwise\n+     * @return {@code true} if so; {@code false} otherwise\n@@ -727,1 +727,1 @@\n-     * @return <code>true<\/code> if so; <code>false<\/code> otherwise\n+     * @return {@code true} if so; {@code false} otherwise\n@@ -735,1 +735,1 @@\n-     * @return <code>true<\/code> if so; <code>false<\/code> otherwise\n+     * @return {@code true} if so; {@code false} otherwise\n@@ -743,1 +743,1 @@\n-     * @return <code>true<\/code> if so; <code>false<\/code> otherwise\n+     * @return {@code true} if so; {@code false} otherwise\n@@ -751,1 +751,1 @@\n-     * @return <code>true<\/code> if so; <code>false<\/code> otherwise\n+     * @return {@code true} if so; {@code false} otherwise\n@@ -759,1 +759,1 @@\n-     * @return <code>true<\/code> if so; <code>false<\/code> otherwise\n+     * @return {@code true} if so; {@code false} otherwise\n@@ -766,1 +766,1 @@\n-     * Retrieves whether this database supports positioned <code>DELETE<\/code>\n+     * Retrieves whether this database supports positioned {@code DELETE}\n@@ -769,1 +769,1 @@\n-     * @return <code>true<\/code> if so; <code>false<\/code> otherwise\n+     * @return {@code true} if so; {@code false} otherwise\n@@ -775,1 +775,1 @@\n-     * Retrieves whether this database supports positioned <code>UPDATE<\/code>\n+     * Retrieves whether this database supports positioned {@code UPDATE}\n@@ -778,1 +778,1 @@\n-     * @return <code>true<\/code> if so; <code>false<\/code> otherwise\n+     * @return {@code true} if so; {@code false} otherwise\n@@ -784,1 +784,1 @@\n-     * Retrieves whether this database supports <code>SELECT FOR UPDATE<\/code>\n+     * Retrieves whether this database supports {@code SELECT FOR UPDATE}\n@@ -787,1 +787,1 @@\n-     * @return <code>true<\/code> if so; <code>false<\/code> otherwise\n+     * @return {@code true} if so; {@code false} otherwise\n@@ -796,1 +796,1 @@\n-     * @return <code>true<\/code> if so; <code>false<\/code> otherwise\n+     * @return {@code true} if so; {@code false} otherwise\n@@ -805,1 +805,1 @@\n-     * @return <code>true<\/code> if so; <code>false<\/code> otherwise\n+     * @return {@code true} if so; {@code false} otherwise\n@@ -812,1 +812,1 @@\n-     * <code>EXISTS<\/code> expressions.\n+     * {@code EXISTS} expressions.\n@@ -814,1 +814,1 @@\n-     * @return <code>true<\/code> if so; <code>false<\/code> otherwise\n+     * @return {@code true} if so; {@code false} otherwise\n@@ -821,1 +821,1 @@\n-     * <code>IN<\/code> expressions.\n+     * {@code IN} expressions.\n@@ -823,1 +823,1 @@\n-     * @return <code>true<\/code> if so; <code>false<\/code> otherwise\n+     * @return {@code true} if so; {@code false} otherwise\n@@ -832,1 +832,1 @@\n-     * @return <code>true<\/code> if so; <code>false<\/code> otherwise\n+     * @return {@code true} if so; {@code false} otherwise\n@@ -840,1 +840,1 @@\n-     * @return <code>true<\/code> if so; <code>false<\/code> otherwise\n+     * @return {@code true} if so; {@code false} otherwise\n@@ -846,1 +846,1 @@\n-     * Retrieves whether this database supports SQL <code>UNION<\/code>.\n+     * Retrieves whether this database supports SQL {@code UNION}.\n@@ -848,1 +848,1 @@\n-     * @return <code>true<\/code> if so; <code>false<\/code> otherwise\n+     * @return {@code true} if so; {@code false} otherwise\n@@ -854,1 +854,1 @@\n-     * Retrieves whether this database supports SQL <code>UNION ALL<\/code>.\n+     * Retrieves whether this database supports SQL {@code UNION ALL}.\n@@ -856,1 +856,1 @@\n-     * @return <code>true<\/code> if so; <code>false<\/code> otherwise\n+     * @return {@code true} if so; {@code false} otherwise\n@@ -865,2 +865,2 @@\n-     * @return <code>true<\/code> if cursors always remain open;\n-     *       <code>false<\/code> if they might not remain open\n+     * @return {@code true} if cursors always remain open;\n+     *       {@code false} if they might not remain open\n@@ -875,2 +875,2 @@\n-     * @return <code>true<\/code> if cursors always remain open;\n-     *       <code>false<\/code> if they might not remain open\n+     * @return {@code true} if cursors always remain open;\n+     *       {@code false} if they might not remain open\n@@ -885,2 +885,2 @@\n-     * @return <code>true<\/code> if statements always remain open;\n-     *       <code>false<\/code> if they might not remain open\n+     * @return {@code true} if statements always remain open;\n+     *       {@code false} if they might not remain open\n@@ -895,2 +895,2 @@\n-     * @return <code>true<\/code> if statements always remain open;\n-     *       <code>false<\/code> if they might not remain open\n+     * @return {@code true} if statements always remain open;\n+     *       {@code false} if they might not remain open\n@@ -944,1 +944,1 @@\n-     * <code>GROUP BY<\/code> clause.\n+     * {@code GROUP BY} clause.\n@@ -965,1 +965,1 @@\n-     * <code>ORDER BY<\/code> clause.\n+     * {@code ORDER BY} clause.\n@@ -976,1 +976,1 @@\n-     * <code>SELECT<\/code> list.\n+     * {@code SELECT} list.\n@@ -1074,2 +1074,2 @@\n-     * <code>getMaxRowSize<\/code> includes the SQL data types\n-     * <code>LONGVARCHAR<\/code> and <code>LONGVARBINARY<\/code>.\n+     * {@code getMaxRowSize} includes the SQL data types\n+     * {@code LONGVARCHAR} and {@code LONGVARBINARY}.\n@@ -1077,1 +1077,1 @@\n-     * @return <code>true<\/code> if so; <code>false<\/code> otherwise\n+     * @return {@code true} if so; {@code false} otherwise\n@@ -1117,1 +1117,1 @@\n-     * <code>SELECT<\/code> statement.\n+     * {@code SELECT} statement.\n@@ -1119,1 +1119,1 @@\n-     * @return the maximum number of tables allowed in a <code>SELECT<\/code>\n+     * @return the maximum number of tables allowed in a {@code SELECT}\n@@ -1141,1 +1141,1 @@\n-     * possible values are defined in <code>java.sql.Connection<\/code>.\n+     * possible values are defined in {@code java.sql.Connection}.\n@@ -1151,2 +1151,2 @@\n-     * method <code>commit<\/code> is a noop, and the isolation level is\n-     * <code>TRANSACTION_NONE<\/code>.\n+     * method {@code commit} is a noop, and the isolation level is\n+     * {@code TRANSACTION_NONE}.\n@@ -1154,2 +1154,2 @@\n-     * @return <code>true<\/code> if transactions are supported;\n-     *         <code>false<\/code> otherwise\n+     * @return {@code true} if transactions are supported;\n+     *         {@code false} otherwise\n@@ -1164,2 +1164,2 @@\n-     *         <code>java.sql.Connection<\/code>\n-     * @return <code>true<\/code> if so; <code>false<\/code> otherwise\n+     *         {@code java.sql.Connection}\n+     * @return {@code true} if so; {@code false} otherwise\n@@ -1176,1 +1176,1 @@\n-     * @return <code>true<\/code> if so; <code>false<\/code> otherwise\n+     * @return {@code true} if so; {@code false} otherwise\n@@ -1185,1 +1185,1 @@\n-     * @return <code>true<\/code> if so; <code>false<\/code> otherwise\n+     * @return {@code true} if so; {@code false} otherwise\n@@ -1195,1 +1195,1 @@\n-     * @return <code>true<\/code> if so; <code>false<\/code> otherwise\n+     * @return {@code true} if so; {@code false} otherwise\n@@ -1205,1 +1205,1 @@\n-     * @return <code>true<\/code> if so; <code>false<\/code> otherwise\n+     * @return {@code true} if so; {@code false} otherwise\n@@ -1217,2 +1217,2 @@\n-     * <code>PROCEDURE_CAT<\/code>, <code>PROCEDURE_SCHEM<\/code>,\n-     * <code>PROCEDURE_NAME<\/code> and <code>SPECIFIC_ NAME<\/code>.\n+     * {@code PROCEDURE_CAT}, {@code PROCEDURE_SCHEM},\n+     * {@code PROCEDURE_NAME} and {@code SPECIFIC_ NAME}.\n@@ -1222,2 +1222,2 @@\n-     *  <LI><B>PROCEDURE_CAT<\/B> String {@code =>} procedure catalog (may be <code>null<\/code>)\n-     *  <LI><B>PROCEDURE_SCHEM<\/B> String {@code =>} procedure schema (may be <code>null<\/code>)\n+     *  <LI><B>PROCEDURE_CAT<\/B> String {@code =>} procedure catalog (may be {@code null})\n+     *  <LI><B>PROCEDURE_SCHEM<\/B> String {@code =>} procedure schema (may be {@code null})\n@@ -1241,1 +1241,1 @@\n-     * returned by <code>getProcedures<\/code>\n+     * returned by {@code getProcedures}\n@@ -1245,1 +1245,1 @@\n-     *        <code>null<\/code> means that the catalog name should not be used to narrow\n+     *        {@code null} means that the catalog name should not be used to narrow\n@@ -1249,1 +1249,1 @@\n-     *        <code>null<\/code> means that the schema name should not be used to narrow\n+     *        {@code null} means that the schema name should not be used to narrow\n@@ -1253,1 +1253,1 @@\n-     * @return <code>ResultSet<\/code> - each row is a procedure description\n+     * @return {@code ResultSet} - each row is a procedure description\n@@ -1264,3 +1264,3 @@\n-     * A possible value for column <code>PROCEDURE_TYPE<\/code> in the\n-     * <code>ResultSet<\/code> object returned by the method\n-     * <code>getProcedures<\/code>.\n+     * A possible value for column {@code PROCEDURE_TYPE} in the\n+     * {@code ResultSet} object returned by the method\n+     * {@code getProcedures}.\n@@ -1273,3 +1273,3 @@\n-     * A possible value for column <code>PROCEDURE_TYPE<\/code> in the\n-     * <code>ResultSet<\/code> object returned by the method\n-     * <code>getProcedures<\/code>.\n+     * A possible value for column {@code PROCEDURE_TYPE} in the\n+     * {@code ResultSet} object returned by the method\n+     * {@code getProcedures}.\n@@ -1282,3 +1282,3 @@\n-     * A possible value for column <code>PROCEDURE_TYPE<\/code> in the\n-     * <code>ResultSet<\/code> object returned by the method\n-     * <code>getProcedures<\/code>.\n+     * A possible value for column {@code PROCEDURE_TYPE} in the\n+     * {@code ResultSet} object returned by the method\n+     * {@code getProcedures}.\n@@ -1298,1 +1298,1 @@\n-     * <P>Each row in the <code>ResultSet<\/code> is a parameter description or\n+     * <P>Each row in the {@code ResultSet} is a parameter description or\n@@ -1301,2 +1301,2 @@\n-     *  <LI><B>PROCEDURE_CAT<\/B> String {@code =>} procedure catalog (may be <code>null<\/code>)\n-     *  <LI><B>PROCEDURE_SCHEM<\/B> String {@code =>} procedure schema (may be <code>null<\/code>)\n+     *  <LI><B>PROCEDURE_CAT<\/B> String {@code =>} procedure catalog (may be {@code null})\n+     *  <LI><B>PROCEDURE_SCHEM<\/B> String {@code =>} procedure schema (may be {@code null})\n@@ -1312,1 +1312,1 @@\n-     *      <LI> procedureColumnResult - result column in <code>ResultSet<\/code>\n+     *      <LI> procedureColumnResult - result column in {@code ResultSet}\n@@ -1329,1 +1329,1 @@\n-     *  <LI><B>COLUMN_DEF<\/B> String {@code =>} default value for the column, which should be interpreted as a string when the value is enclosed in single quotes (may be <code>null<\/code>)\n+     *  <LI><B>COLUMN_DEF<\/B> String {@code =>} default value for the column, which should be interpreted as a string when the value is enclosed in single quotes (may be {@code null})\n@@ -1365,1 +1365,1 @@\n-     *        <code>null<\/code> means that the catalog name should not be used to narrow\n+     *        {@code null} means that the catalog name should not be used to narrow\n@@ -1369,1 +1369,1 @@\n-     *        <code>null<\/code> means that the schema name should not be used to narrow\n+     *        {@code null} means that the schema name should not be used to narrow\n@@ -1375,1 +1375,1 @@\n-     * @return <code>ResultSet<\/code> - each row describes a stored procedure parameter or\n+     * @return {@code ResultSet} - each row describes a stored procedure parameter or\n@@ -1389,3 +1389,3 @@\n-     * <code>COLUMN_TYPE<\/code>\n-     * in the <code>ResultSet<\/code>\n-     * returned by the method <code>getProcedureColumns<\/code>.\n+     * {@code COLUMN_TYPE}\n+     * in the {@code ResultSet}\n+     * returned by the method {@code getProcedureColumns}.\n@@ -1399,3 +1399,3 @@\n-     * <code>COLUMN_TYPE<\/code>\n-     * in the <code>ResultSet<\/code>\n-     * returned by the method <code>getProcedureColumns<\/code>.\n+     * {@code COLUMN_TYPE}\n+     * in the {@code ResultSet}\n+     * returned by the method {@code getProcedureColumns}.\n@@ -1409,3 +1409,3 @@\n-     * <code>COLUMN_TYPE<\/code>\n-     * in the <code>ResultSet<\/code>\n-     * returned by the method <code>getProcedureColumns<\/code>.\n+     * {@code COLUMN_TYPE}\n+     * in the {@code ResultSet}\n+     * returned by the method {@code getProcedureColumns}.\n@@ -1419,3 +1419,3 @@\n-     * <code>COLUMN_TYPE<\/code>\n-     * in the <code>ResultSet<\/code>\n-     * returned by the method <code>getProcedureColumns<\/code>.\n+     * {@code COLUMN_TYPE}\n+     * in the {@code ResultSet}\n+     * returned by the method {@code getProcedureColumns}.\n@@ -1428,3 +1428,3 @@\n-     * <code>COLUMN_TYPE<\/code>\n-     * in the <code>ResultSet<\/code>\n-     * returned by the method <code>getProcedureColumns<\/code>.\n+     * {@code COLUMN_TYPE}\n+     * in the {@code ResultSet}\n+     * returned by the method {@code getProcedureColumns}.\n@@ -1438,3 +1438,3 @@\n-     * <code>COLUMN_TYPE<\/code>\n-     * in the <code>ResultSet<\/code>\n-     * returned by the method <code>getProcedureColumns<\/code>.\n+     * {@code COLUMN_TYPE}\n+     * in the {@code ResultSet}\n+     * returned by the method {@code getProcedureColumns}.\n@@ -1445,1 +1445,1 @@\n-     * Indicates that <code>NULL<\/code> values are not allowed.\n+     * Indicates that {@code NULL} values are not allowed.\n@@ -1448,3 +1448,3 @@\n-     * <code>NULLABLE<\/code>\n-     * in the <code>ResultSet<\/code> object\n-     * returned by the method <code>getProcedureColumns<\/code>.\n+     * {@code NULLABLE}\n+     * in the {@code ResultSet} object\n+     * returned by the method {@code getProcedureColumns}.\n@@ -1455,1 +1455,1 @@\n-     * Indicates that <code>NULL<\/code> values are allowed.\n+     * Indicates that {@code NULL} values are allowed.\n@@ -1458,3 +1458,3 @@\n-     * <code>NULLABLE<\/code>\n-     * in the <code>ResultSet<\/code> object\n-     * returned by the method <code>getProcedureColumns<\/code>.\n+     * {@code NULLABLE}\n+     * in the {@code ResultSet} object\n+     * returned by the method {@code getProcedureColumns}.\n@@ -1465,1 +1465,1 @@\n-     * Indicates that whether <code>NULL<\/code> values are allowed\n+     * Indicates that whether {@code NULL} values are allowed\n@@ -1469,3 +1469,3 @@\n-     * <code>NULLABLE<\/code>\n-     * in the <code>ResultSet<\/code> object\n-     * returned by the method <code>getProcedureColumns<\/code>.\n+     * {@code NULLABLE}\n+     * in the {@code ResultSet} object\n+     * returned by the method {@code getProcedureColumns}.\n@@ -1480,2 +1480,2 @@\n-     * <code>TABLE_TYPE<\/code>, <code>TABLE_CAT<\/code>,\n-     * <code>TABLE_SCHEM<\/code> and <code>TABLE_NAME<\/code>.\n+     * {@code TABLE_TYPE}, {@code TABLE_CAT},\n+     * {@code TABLE_SCHEM} and {@code TABLE_NAME}.\n@@ -1485,2 +1485,2 @@\n-     *  <LI><B>TABLE_CAT<\/B> String {@code =>} table catalog (may be <code>null<\/code>)\n-     *  <LI><B>TABLE_SCHEM<\/B> String {@code =>} table schema (may be <code>null<\/code>)\n+     *  <LI><B>TABLE_CAT<\/B> String {@code =>} table catalog (may be {@code null})\n+     *  <LI><B>TABLE_SCHEM<\/B> String {@code =>} table schema (may be {@code null})\n@@ -1492,3 +1492,3 @@\n-     *  <LI><B>TYPE_CAT<\/B> String {@code =>} the types catalog (may be <code>null<\/code>)\n-     *  <LI><B>TYPE_SCHEM<\/B> String {@code =>} the types schema (may be <code>null<\/code>)\n-     *  <LI><B>TYPE_NAME<\/B> String {@code =>} type name (may be <code>null<\/code>)\n+     *  <LI><B>TYPE_CAT<\/B> String {@code =>} the types catalog (may be {@code null})\n+     *  <LI><B>TYPE_SCHEM<\/B> String {@code =>} the types schema (may be {@code null})\n+     *  <LI><B>TYPE_NAME<\/B> String {@code =>} type name (may be {@code null})\n@@ -1496,1 +1496,1 @@\n-     *                  \"identifier\" column of a typed table (may be <code>null<\/code>)\n+     *                  \"identifier\" column of a typed table (may be {@code null})\n@@ -1499,1 +1499,1 @@\n-     *                  \"SYSTEM\", \"USER\", \"DERIVED\". (may be <code>null<\/code>)\n+     *                  \"SYSTEM\", \"USER\", \"DERIVED\". (may be {@code null})\n@@ -1507,1 +1507,1 @@\n-     *        <code>null<\/code> means that the catalog name should not be used to narrow\n+     *        {@code null} means that the catalog name should not be used to narrow\n@@ -1511,1 +1511,1 @@\n-     *        <code>null<\/code> means that the schema name should not be used to narrow\n+     *        {@code null} means that the schema name should not be used to narrow\n@@ -1516,1 +1516,1 @@\n-     *         returned from {@link #getTableTypes},to include; <code>null<\/code> returns\n+     *         returned from {@link #getTableTypes},to include; {@code null} returns\n@@ -1518,1 +1518,1 @@\n-     * @return <code>ResultSet<\/code> - each row is a table description\n+     * @return {@code ResultSet} - each row is a table description\n@@ -1527,2 +1527,2 @@\n-     * are ordered by <code>TABLE_CATALOG<\/code> and\n-     * <code>TABLE_SCHEM<\/code>.\n+     * are ordered by {@code TABLE_CATALOG} and\n+     * {@code TABLE_SCHEM}.\n@@ -1533,1 +1533,1 @@\n-     *  <LI><B>TABLE_CATALOG<\/B> String {@code =>} catalog name (may be <code>null<\/code>)\n+     *  <LI><B>TABLE_CATALOG<\/B> String {@code =>} catalog name (may be {@code null})\n@@ -1536,1 +1536,1 @@\n-     * @return a <code>ResultSet<\/code> object in which each row is a\n+     * @return a {@code ResultSet} object in which each row is a\n@@ -1552,2 +1552,2 @@\n-     * @return a <code>ResultSet<\/code> object in which each row has a\n-     *         single <code>String<\/code> column that is a catalog name\n+     * @return a {@code ResultSet} object in which each row has a\n+     *         single {@code String} column that is a catalog name\n@@ -1569,2 +1569,2 @@\n-     * @return a <code>ResultSet<\/code> object in which each row has a\n-     *         single <code>String<\/code> column that is a table type\n+     * @return a {@code ResultSet} object in which each row has a\n+     *         single {@code String} column that is a table type\n@@ -1581,2 +1581,2 @@\n-     * <code>TABLE_CAT<\/code>,<code>TABLE_SCHEM<\/code>,\n-     * <code>TABLE_NAME<\/code>, and <code>ORDINAL_POSITION<\/code>.\n+     * {@code TABLE_CAT},{@code TABLE_SCHEM},\n+     * {@code TABLE_NAME}, and {@code ORDINAL_POSITION}.\n@@ -1586,2 +1586,2 @@\n-     *  <LI><B>TABLE_CAT<\/B> String {@code =>} table catalog (may be <code>null<\/code>)\n-     *  <LI><B>TABLE_SCHEM<\/B> String {@code =>} table schema (may be <code>null<\/code>)\n+     *  <LI><B>TABLE_CAT<\/B> String {@code =>} table catalog (may be {@code null})\n+     *  <LI><B>TABLE_SCHEM<\/B> String {@code =>} table schema (may be {@code null})\n@@ -1600,2 +1600,2 @@\n-     *      <LI> columnNoNulls - might not allow <code>NULL<\/code> values\n-     *      <LI> columnNullable - definitely allows <code>NULL<\/code> values\n+     *      <LI> columnNoNulls - might not allow {@code NULL} values\n+     *      <LI> columnNullable - definitely allows {@code NULL} values\n@@ -1604,2 +1604,2 @@\n-     *  <LI><B>REMARKS<\/B> String {@code =>} comment describing column (may be <code>null<\/code>)\n-     *  <LI><B>COLUMN_DEF<\/B> String {@code =>} default value for the column, which should be interpreted as a string when the value is enclosed in single quotes (may be <code>null<\/code>)\n+     *  <LI><B>REMARKS<\/B> String {@code =>} comment describing column (may be {@code null})\n+     *  <LI><B>COLUMN_DEF<\/B> String {@code =>} default value for the column, which should be interpreted as a string when the value is enclosed in single quotes (may be {@code null})\n@@ -1620,1 +1620,1 @@\n-     *      of a reference attribute (<code>null<\/code> if DATA_TYPE isn't REF)\n+     *      of a reference attribute ({@code null} if DATA_TYPE isn't REF)\n@@ -1622,1 +1622,1 @@\n-     *      of a reference attribute (<code>null<\/code> if the DATA_TYPE isn't REF)\n+     *      of a reference attribute ({@code null} if the DATA_TYPE isn't REF)\n@@ -1624,1 +1624,1 @@\n-     *      of a reference attribute (<code>null<\/code> if the DATA_TYPE isn't REF)\n+     *      of a reference attribute ({@code null} if the DATA_TYPE isn't REF)\n@@ -1626,1 +1626,1 @@\n-     *      Ref type, SQL type from java.sql.Types (<code>null<\/code> if DATA_TYPE\n+     *      Ref type, SQL type from java.sql.Types ({@code null} if DATA_TYPE\n@@ -1651,1 +1651,1 @@\n-     *        <code>null<\/code> means that the catalog name should not be used to narrow\n+     *        {@code null} means that the catalog name should not be used to narrow\n@@ -1655,1 +1655,1 @@\n-     *        <code>null<\/code> means that the schema name should not be used to narrow\n+     *        {@code null} means that the schema name should not be used to narrow\n@@ -1661,1 +1661,1 @@\n-     * @return <code>ResultSet<\/code> - each row is a column description\n+     * @return {@code ResultSet} - each row is a column description\n@@ -1670,1 +1670,1 @@\n-     * Indicates that the column might not allow <code>NULL<\/code> values.\n+     * Indicates that the column might not allow {@code NULL} values.\n@@ -1673,3 +1673,3 @@\n-     * <code>NULLABLE<\/code>\n-     * in the <code>ResultSet<\/code> returned by the method\n-     * <code>getColumns<\/code>.\n+     * {@code NULLABLE}\n+     * in the {@code ResultSet} returned by the method\n+     * {@code getColumns}.\n@@ -1680,1 +1680,1 @@\n-     * Indicates that the column definitely allows <code>NULL<\/code> values.\n+     * Indicates that the column definitely allows {@code NULL} values.\n@@ -1683,3 +1683,3 @@\n-     * <code>NULLABLE<\/code>\n-     * in the <code>ResultSet<\/code> returned by the method\n-     * <code>getColumns<\/code>.\n+     * {@code NULLABLE}\n+     * in the {@code ResultSet} returned by the method\n+     * {@code getColumns}.\n@@ -1693,3 +1693,3 @@\n-     * <code>NULLABLE<\/code>\n-     * in the <code>ResultSet<\/code> returned by the method\n-     * <code>getColumns<\/code>.\n+     * {@code NULLABLE}\n+     * in the {@code ResultSet} returned by the method\n+     * {@code getColumns}.\n@@ -1707,2 +1707,2 @@\n-     *  <LI><B>TABLE_CAT<\/B> String {@code =>} table catalog (may be <code>null<\/code>)\n-     *  <LI><B>TABLE_SCHEM<\/B> String {@code =>} table schema (may be <code>null<\/code>)\n+     *  <LI><B>TABLE_CAT<\/B> String {@code =>} table catalog (may be {@code null})\n+     *  <LI><B>TABLE_SCHEM<\/B> String {@code =>} table schema (may be {@code null})\n@@ -1711,1 +1711,1 @@\n-     *  <LI><B>GRANTOR<\/B> String {@code =>} grantor of access (may be <code>null<\/code>)\n+     *  <LI><B>GRANTOR<\/B> String {@code =>} grantor of access (may be {@code null})\n@@ -1716,1 +1716,1 @@\n-     *      to grant to others; \"NO\" if not; <code>null<\/code> if unknown\n+     *      to grant to others; \"NO\" if not; {@code null} if unknown\n@@ -1721,1 +1721,1 @@\n-     *        <code>null<\/code> means that the catalog name should not be used to narrow\n+     *        {@code null} means that the catalog name should not be used to narrow\n@@ -1725,1 +1725,1 @@\n-     *        <code>null<\/code> means that the schema name should not be used to narrow\n+     *        {@code null} means that the schema name should not be used to narrow\n@@ -1731,1 +1731,1 @@\n-     * @return <code>ResultSet<\/code> - each row is a column privilege description\n+     * @return {@code ResultSet} - each row is a column privilege description\n@@ -1747,3 +1747,3 @@\n-     * <code>TABLE_CAT<\/code>,\n-     * <code>TABLE_SCHEM<\/code>, <code>TABLE_NAME<\/code>,\n-     * and <code>PRIVILEGE<\/code>.\n+     * {@code TABLE_CAT},\n+     * {@code TABLE_SCHEM}, {@code TABLE_NAME},\n+     * and {@code PRIVILEGE}.\n@@ -1753,2 +1753,2 @@\n-     *  <LI><B>TABLE_CAT<\/B> String {@code =>} table catalog (may be <code>null<\/code>)\n-     *  <LI><B>TABLE_SCHEM<\/B> String {@code =>} table schema (may be <code>null<\/code>)\n+     *  <LI><B>TABLE_CAT<\/B> String {@code =>} table catalog (may be {@code null})\n+     *  <LI><B>TABLE_SCHEM<\/B> String {@code =>} table schema (may be {@code null})\n@@ -1756,1 +1756,1 @@\n-     *  <LI><B>GRANTOR<\/B> String {@code =>} grantor of access (may be <code>null<\/code>)\n+     *  <LI><B>GRANTOR<\/B> String {@code =>} grantor of access (may be {@code null})\n@@ -1761,1 +1761,1 @@\n-     *      to grant to others; \"NO\" if not; <code>null<\/code> if unknown\n+     *      to grant to others; \"NO\" if not; {@code null} if unknown\n@@ -1766,1 +1766,1 @@\n-     *        <code>null<\/code> means that the catalog name should not be used to narrow\n+     *        {@code null} means that the catalog name should not be used to narrow\n@@ -1770,1 +1770,1 @@\n-     *        <code>null<\/code> means that the schema name should not be used to narrow\n+     *        {@code null} means that the schema name should not be used to narrow\n@@ -1774,1 +1774,1 @@\n-     * @return <code>ResultSet<\/code> - each row is a table privilege description\n+     * @return {@code ResultSet} - each row is a table privilege description\n@@ -1819,1 +1819,1 @@\n-     *        <code>null<\/code> means that the catalog name should not be used to narrow\n+     *        {@code null} means that the catalog name should not be used to narrow\n@@ -1823,1 +1823,1 @@\n-     *        <code>null<\/code> means that the schema name should not be used to narrow\n+     *        {@code null} means that the schema name should not be used to narrow\n@@ -1829,1 +1829,1 @@\n-     * @return <code>ResultSet<\/code> - each row is a column description\n+     * @return {@code ResultSet} - each row is a column description\n@@ -1841,3 +1841,3 @@\n-     * <code>SCOPE<\/code>\n-     * in the <code>ResultSet<\/code> object\n-     * returned by the method <code>getBestRowIdentifier<\/code>.\n+     * {@code SCOPE}\n+     * in the {@code ResultSet} object\n+     * returned by the method {@code getBestRowIdentifier}.\n@@ -1852,3 +1852,3 @@\n-     * <code>SCOPE<\/code>\n-     * in the <code>ResultSet<\/code> object\n-     * returned by the method <code>getBestRowIdentifier<\/code>.\n+     * {@code SCOPE}\n+     * in the {@code ResultSet} object\n+     * returned by the method {@code getBestRowIdentifier}.\n@@ -1863,3 +1863,3 @@\n-     * <code>SCOPE<\/code>\n-     * in the <code>ResultSet<\/code> object\n-     * returned by the method <code>getBestRowIdentifier<\/code>.\n+     * {@code SCOPE}\n+     * in the {@code ResultSet} object\n+     * returned by the method {@code getBestRowIdentifier}.\n@@ -1873,3 +1873,3 @@\n-     * <code>PSEUDO_COLUMN<\/code>\n-     * in the <code>ResultSet<\/code> object\n-     * returned by the method <code>getBestRowIdentifier<\/code>.\n+     * {@code PSEUDO_COLUMN}\n+     * in the {@code ResultSet} object\n+     * returned by the method {@code getBestRowIdentifier}.\n@@ -1883,3 +1883,3 @@\n-     * <code>PSEUDO_COLUMN<\/code>\n-     * in the <code>ResultSet<\/code> object\n-     * returned by the method <code>getBestRowIdentifier<\/code>.\n+     * {@code PSEUDO_COLUMN}\n+     * in the {@code ResultSet} object\n+     * returned by the method {@code getBestRowIdentifier}.\n@@ -1893,3 +1893,3 @@\n-     * <code>PSEUDO_COLUMN<\/code>\n-     * in the <code>ResultSet<\/code> object\n-     * returned by the method <code>getBestRowIdentifier<\/code>.\n+     * {@code PSEUDO_COLUMN}\n+     * in the {@code ResultSet} object\n+     * returned by the method {@code getBestRowIdentifier}.\n@@ -1908,1 +1908,1 @@\n-     *  <LI><B>DATA_TYPE<\/B> int {@code =>} SQL data type from <code>java.sql.Types<\/code>\n+     *  <LI><B>DATA_TYPE<\/B> int {@code =>} SQL data type from {@code java.sql.Types}\n@@ -1931,1 +1931,1 @@\n-     *        <code>null<\/code> means that the catalog name should not be used to narrow\n+     *        {@code null} means that the catalog name should not be used to narrow\n@@ -1935,1 +1935,1 @@\n-     *        <code>null<\/code> means that the schema name should not be used to narrow\n+     *        {@code null} means that the schema name should not be used to narrow\n@@ -1939,1 +1939,1 @@\n-     * @return a <code>ResultSet<\/code> object in which each row is a\n+     * @return a {@code ResultSet} object in which each row is a\n@@ -1950,3 +1950,3 @@\n-     * <code>PSEUDO_COLUMN<\/code>\n-     * in the <code>ResultSet<\/code> object\n-     * returned by the method <code>getVersionColumns<\/code>.\n+     * {@code PSEUDO_COLUMN}\n+     * in the {@code ResultSet} object\n+     * returned by the method {@code getVersionColumns}.\n@@ -1960,3 +1960,3 @@\n-     * <code>PSEUDO_COLUMN<\/code>\n-     * in the <code>ResultSet<\/code> object\n-     * returned by the method <code>getVersionColumns<\/code>.\n+     * {@code PSEUDO_COLUMN}\n+     * in the {@code ResultSet} object\n+     * returned by the method {@code getVersionColumns}.\n@@ -1970,3 +1970,3 @@\n-     * <code>PSEUDO_COLUMN<\/code>\n-     * in the <code>ResultSet<\/code> object\n-     * returned by the method <code>getVersionColumns<\/code>.\n+     * {@code PSEUDO_COLUMN}\n+     * in the {@code ResultSet} object\n+     * returned by the method {@code getVersionColumns}.\n@@ -1982,2 +1982,2 @@\n-     *  <LI><B>TABLE_CAT<\/B> String {@code =>} table catalog (may be <code>null<\/code>)\n-     *  <LI><B>TABLE_SCHEM<\/B> String {@code =>} table schema (may be <code>null<\/code>)\n+     *  <LI><B>TABLE_CAT<\/B> String {@code =>} table catalog (may be {@code null})\n+     *  <LI><B>TABLE_SCHEM<\/B> String {@code =>} table schema (may be {@code null})\n@@ -1989,1 +1989,1 @@\n-     *  <LI><B>PK_NAME<\/B> String {@code =>} primary key name (may be <code>null<\/code>)\n+     *  <LI><B>PK_NAME<\/B> String {@code =>} primary key name (may be {@code null})\n@@ -1994,1 +1994,1 @@\n-     *        <code>null<\/code> means that the catalog name should not be used to narrow\n+     *        {@code null} means that the catalog name should not be used to narrow\n@@ -1998,1 +1998,1 @@\n-     *        <code>null<\/code> means that the schema name should not be used to narrow\n+     *        {@code null} means that the schema name should not be used to narrow\n@@ -2002,1 +2002,1 @@\n-     * @return <code>ResultSet<\/code> - each row is a primary key column description\n+     * @return {@code ResultSet} - each row is a primary key column description\n@@ -2017,1 +2017,1 @@\n-     *      being imported (may be <code>null<\/code>)\n+     *      being imported (may be {@code null})\n@@ -2019,1 +2019,1 @@\n-     *      being imported (may be <code>null<\/code>)\n+     *      being imported (may be {@code null})\n@@ -2024,2 +2024,2 @@\n-     *  <LI><B>FKTABLE_CAT<\/B> String {@code =>} foreign key table catalog (may be <code>null<\/code>)\n-     *  <LI><B>FKTABLE_SCHEM<\/B> String {@code =>} foreign key table schema (may be <code>null<\/code>)\n+     *  <LI><B>FKTABLE_CAT<\/B> String {@code =>} foreign key table catalog (may be {@code null})\n+     *  <LI><B>FKTABLE_SCHEM<\/B> String {@code =>} foreign key table schema (may be {@code null})\n@@ -2038,1 +2038,1 @@\n-     *      <LI> importedKeySetNull - change imported key to <code>NULL<\/code>\n+     *      <LI> importedKeySetNull - change imported key to {@code NULL}\n@@ -2058,2 +2058,2 @@\n-     *  <LI><B>FK_NAME<\/B> String {@code =>} foreign key name (may be <code>null<\/code>)\n-     *  <LI><B>PK_NAME<\/B> String {@code =>} primary key name (may be <code>null<\/code>)\n+     *  <LI><B>FK_NAME<\/B> String {@code =>} foreign key name (may be {@code null})\n+     *  <LI><B>PK_NAME<\/B> String {@code =>} primary key name (may be {@code null})\n@@ -2071,1 +2071,1 @@\n-     *        <code>null<\/code> means that the catalog name should not be used to narrow\n+     *        {@code null} means that the catalog name should not be used to narrow\n@@ -2075,1 +2075,1 @@\n-     *        <code>null<\/code> means that the schema name should not be used to narrow\n+     *        {@code null} means that the schema name should not be used to narrow\n@@ -2079,1 +2079,1 @@\n-     * @return <code>ResultSet<\/code> - each row is a primary key column description\n+     * @return {@code ResultSet} - each row is a primary key column description\n@@ -2087,1 +2087,1 @@\n-     * For the column <code>UPDATE_RULE<\/code>,\n+     * For the column {@code UPDATE_RULE},\n@@ -2091,1 +2091,1 @@\n-     * For the column <code>DELETE_RULE<\/code>,\n+     * For the column {@code DELETE_RULE},\n@@ -2096,5 +2096,5 @@\n-     * A possible value for the columns <code>UPDATE_RULE<\/code>\n-     * and <code>DELETE_RULE<\/code> in the\n-     * <code>ResultSet<\/code> objects returned by the methods\n-     * <code>getImportedKeys<\/code>,  <code>getExportedKeys<\/code>,\n-     * and <code>getCrossReference<\/code>.\n+     * A possible value for the columns {@code UPDATE_RULE}\n+     * and {@code DELETE_RULE} in the\n+     * {@code ResultSet} objects returned by the methods\n+     * {@code getImportedKeys},  {@code getExportedKeys},\n+     * and {@code getCrossReference}.\n@@ -2105,1 +2105,1 @@\n-     * For the column <code>UPDATE_RULE<\/code>, indicates that\n+     * For the column {@code UPDATE_RULE}, indicates that\n@@ -2108,1 +2108,1 @@\n-     * For the column <code>DELETE_RULE<\/code>, indicates that\n+     * For the column {@code DELETE_RULE}, indicates that\n@@ -2112,5 +2112,5 @@\n-     * A possible value for the columns <code>UPDATE_RULE<\/code>\n-     * and <code>DELETE_RULE<\/code> in the\n-     * <code>ResultSet<\/code> objects returned by the methods\n-     * <code>getImportedKeys<\/code>,  <code>getExportedKeys<\/code>,\n-     * and <code>getCrossReference<\/code>.\n+     * A possible value for the columns {@code UPDATE_RULE}\n+     * and {@code DELETE_RULE} in the\n+     * {@code ResultSet} objects returned by the methods\n+     * {@code getImportedKeys},  {@code getExportedKeys},\n+     * and {@code getCrossReference}.\n@@ -2121,2 +2121,2 @@\n-     * For the columns <code>UPDATE_RULE<\/code>\n-     * and <code>DELETE_RULE<\/code>, indicates that\n+     * For the columns {@code UPDATE_RULE}\n+     * and {@code DELETE_RULE}, indicates that\n@@ -2124,1 +2124,1 @@\n-     * is changed to <code>NULL<\/code>.\n+     * is changed to {@code NULL}.\n@@ -2126,5 +2126,5 @@\n-     * A possible value for the columns <code>UPDATE_RULE<\/code>\n-     * and <code>DELETE_RULE<\/code> in the\n-     * <code>ResultSet<\/code> objects returned by the methods\n-     * <code>getImportedKeys<\/code>,  <code>getExportedKeys<\/code>,\n-     * and <code>getCrossReference<\/code>.\n+     * A possible value for the columns {@code UPDATE_RULE}\n+     * and {@code DELETE_RULE} in the\n+     * {@code ResultSet} objects returned by the methods\n+     * {@code getImportedKeys},  {@code getExportedKeys},\n+     * and {@code getCrossReference}.\n@@ -2135,2 +2135,2 @@\n-     * For the columns <code>UPDATE_RULE<\/code>\n-     * and <code>DELETE_RULE<\/code>, indicates that\n+     * For the columns {@code UPDATE_RULE}\n+     * and {@code DELETE_RULE}, indicates that\n@@ -2139,5 +2139,5 @@\n-     * A possible value for the columns <code>UPDATE_RULE<\/code>\n-     * and <code>DELETE_RULE<\/code> in the\n-     * <code>ResultSet<\/code> objects returned by the methods\n-     * <code>getImportedKeys<\/code>,  <code>getExportedKeys<\/code>,\n-     * and <code>getCrossReference<\/code>.\n+     * A possible value for the columns {@code UPDATE_RULE}\n+     * and {@code DELETE_RULE} in the\n+     * {@code ResultSet} objects returned by the methods\n+     * {@code getImportedKeys},  {@code getExportedKeys},\n+     * and {@code getCrossReference}.\n@@ -2148,2 +2148,2 @@\n-     * For the columns <code>UPDATE_RULE<\/code>\n-     * and <code>DELETE_RULE<\/code>, indicates that\n+     * For the columns {@code UPDATE_RULE}\n+     * and {@code DELETE_RULE}, indicates that\n@@ -2153,5 +2153,5 @@\n-     * A possible value for the columns <code>UPDATE_RULE<\/code>\n-     * and <code>DELETE_RULE<\/code> in the\n-     * <code>ResultSet<\/code> objects returned by the methods\n-     * <code>getImportedKeys<\/code>,  <code>getExportedKeys<\/code>,\n-     * and <code>getCrossReference<\/code>.\n+     * A possible value for the columns {@code UPDATE_RULE}\n+     * and {@code DELETE_RULE} in the\n+     * {@code ResultSet} objects returned by the methods\n+     * {@code getImportedKeys},  {@code getExportedKeys},\n+     * and {@code getCrossReference}.\n@@ -2164,4 +2164,4 @@\n-     * A possible value for the column <code>DEFERRABILITY<\/code>\n-     * in the <code>ResultSet<\/code> objects returned by the methods\n-     * <code>getImportedKeys<\/code>,  <code>getExportedKeys<\/code>,\n-     * and <code>getCrossReference<\/code>.\n+     * A possible value for the column {@code DEFERRABILITY}\n+     * in the {@code ResultSet} objects returned by the methods\n+     * {@code getImportedKeys},  {@code getExportedKeys},\n+     * and {@code getCrossReference}.\n@@ -2174,4 +2174,4 @@\n-     * A possible value for the column <code>DEFERRABILITY<\/code>\n-     * in the <code>ResultSet<\/code> objects returned by the methods\n-     * <code>getImportedKeys<\/code>,  <code>getExportedKeys<\/code>,\n-     * and <code>getCrossReference<\/code>.\n+     * A possible value for the column {@code DEFERRABILITY}\n+     * in the {@code ResultSet} objects returned by the methods\n+     * {@code getImportedKeys},  {@code getExportedKeys},\n+     * and {@code getCrossReference}.\n@@ -2184,4 +2184,4 @@\n-     * A possible value for the column <code>DEFERRABILITY<\/code>\n-     * in the <code>ResultSet<\/code> objects returned by the methods\n-     * <code>getImportedKeys<\/code>,  <code>getExportedKeys<\/code>,\n-     * and <code>getCrossReference<\/code>.\n+     * A possible value for the column {@code DEFERRABILITY}\n+     * in the {@code ResultSet} objects returned by the methods\n+     * {@code getImportedKeys},  {@code getExportedKeys},\n+     * and {@code getCrossReference}.\n@@ -2199,2 +2199,2 @@\n-     *  <LI><B>PKTABLE_CAT<\/B> String {@code =>} primary key table catalog (may be <code>null<\/code>)\n-     *  <LI><B>PKTABLE_SCHEM<\/B> String {@code =>} primary key table schema (may be <code>null<\/code>)\n+     *  <LI><B>PKTABLE_CAT<\/B> String {@code =>} primary key table catalog (may be {@code null})\n+     *  <LI><B>PKTABLE_SCHEM<\/B> String {@code =>} primary key table schema (may be {@code null})\n@@ -2203,4 +2203,4 @@\n-     *  <LI><B>FKTABLE_CAT<\/B> String {@code =>} foreign key table catalog (may be <code>null<\/code>)\n-     *      being exported (may be <code>null<\/code>)\n-     *  <LI><B>FKTABLE_SCHEM<\/B> String {@code =>} foreign key table schema (may be <code>null<\/code>)\n-     *      being exported (may be <code>null<\/code>)\n+     *  <LI><B>FKTABLE_CAT<\/B> String {@code =>} foreign key table catalog (may be {@code null})\n+     *      being exported (may be {@code null})\n+     *  <LI><B>FKTABLE_SCHEM<\/B> String {@code =>} foreign key table schema (may be {@code null})\n+     *      being exported (may be {@code null})\n@@ -2221,1 +2221,1 @@\n-     *      <LI> importedKeySetNull - change imported key to <code>NULL<\/code> if\n+     *      <LI> importedKeySetNull - change imported key to {@code NULL} if\n@@ -2234,1 +2234,1 @@\n-     *      <LI> importedKeySetNull - change imported key to <code>NULL<\/code> if\n+     *      <LI> importedKeySetNull - change imported key to {@code NULL} if\n@@ -2241,2 +2241,2 @@\n-     *  <LI><B>FK_NAME<\/B> String {@code =>} foreign key name (may be <code>null<\/code>)\n-     *  <LI><B>PK_NAME<\/B> String {@code =>} primary key name (may be <code>null<\/code>)\n+     *  <LI><B>FK_NAME<\/B> String {@code =>} foreign key name (may be {@code null})\n+     *  <LI><B>PK_NAME<\/B> String {@code =>} primary key name (may be {@code null})\n@@ -2254,1 +2254,1 @@\n-     *        <code>null<\/code> means that the catalog name should not be used to narrow\n+     *        {@code null} means that the catalog name should not be used to narrow\n@@ -2258,1 +2258,1 @@\n-     *        <code>null<\/code> means that the schema name should not be used to narrow\n+     *        {@code null} means that the schema name should not be used to narrow\n@@ -2262,1 +2262,1 @@\n-     * @return a <code>ResultSet<\/code> object in which each row is a\n+     * @return a {@code ResultSet} object in which each row is a\n@@ -2280,2 +2280,2 @@\n-     *  <LI><B>PKTABLE_CAT<\/B> String {@code =>} parent key table catalog (may be <code>null<\/code>)\n-     *  <LI><B>PKTABLE_SCHEM<\/B> String {@code =>} parent key table schema (may be <code>null<\/code>)\n+     *  <LI><B>PKTABLE_CAT<\/B> String {@code =>} parent key table catalog (may be {@code null})\n+     *  <LI><B>PKTABLE_SCHEM<\/B> String {@code =>} parent key table schema (may be {@code null})\n@@ -2284,4 +2284,4 @@\n-     *  <LI><B>FKTABLE_CAT<\/B> String {@code =>} foreign key table catalog (may be <code>null<\/code>)\n-     *      being exported (may be <code>null<\/code>)\n-     *  <LI><B>FKTABLE_SCHEM<\/B> String {@code =>} foreign key table schema (may be <code>null<\/code>)\n-     *      being exported (may be <code>null<\/code>)\n+     *  <LI><B>FKTABLE_CAT<\/B> String {@code =>} foreign key table catalog (may be {@code null})\n+     *      being exported (may be {@code null})\n+     *  <LI><B>FKTABLE_SCHEM<\/B> String {@code =>} foreign key table schema (may be {@code null})\n+     *      being exported (may be {@code null})\n@@ -2302,1 +2302,1 @@\n-     *      <LI> importedKeySetNull - change imported key to <code>NULL<\/code> if\n+     *      <LI> importedKeySetNull - change imported key to {@code NULL} if\n@@ -2315,1 +2315,1 @@\n-     *      <LI> importedKeySetNull - change imported key to <code>NULL<\/code> if\n+     *      <LI> importedKeySetNull - change imported key to {@code NULL} if\n@@ -2322,2 +2322,2 @@\n-     *  <LI><B>FK_NAME<\/B> String {@code =>} foreign key name (may be <code>null<\/code>)\n-     *  <LI><B>PK_NAME<\/B> String {@code =>} parent key name (may be <code>null<\/code>)\n+     *  <LI><B>FK_NAME<\/B> String {@code =>} foreign key name (may be {@code null})\n+     *  <LI><B>PK_NAME<\/B> String {@code =>} parent key name (may be {@code null})\n@@ -2335,1 +2335,1 @@\n-     * catalog; <code>null<\/code> means drop catalog name from the selection criteria\n+     * catalog; {@code null} means drop catalog name from the selection criteria\n@@ -2338,1 +2338,1 @@\n-     * <code>null<\/code> means drop schema name from the selection criteria\n+     * {@code null} means drop schema name from the selection criteria\n@@ -2343,1 +2343,1 @@\n-     * catalog; <code>null<\/code> means drop catalog name from the selection criteria\n+     * catalog; {@code null} means drop catalog name from the selection criteria\n@@ -2346,1 +2346,1 @@\n-     * <code>null<\/code> means drop schema name from the selection criteria\n+     * {@code null} means drop schema name from the selection criteria\n@@ -2349,1 +2349,1 @@\n-     * @return <code>ResultSet<\/code> - each row is a foreign key column description\n+     * @return {@code ResultSet} - each row is a foreign key column description\n@@ -2378,1 +2378,1 @@\n-     *      (may be <code>null<\/code>)\n+     *      (may be {@code null})\n@@ -2380,1 +2380,1 @@\n-     *  (may be <code>null<\/code>)\n+     *  (may be {@code null})\n@@ -2382,1 +2382,1 @@\n-     *      the type (may be <code>null<\/code>)\n+     *      the type (may be {@code null})\n@@ -2402,1 +2402,1 @@\n-     *      (may be <code>null<\/code>)\n+     *      (may be {@code null})\n@@ -2417,1 +2417,1 @@\n-     * @return a <code>ResultSet<\/code> object in which each row is an SQL\n+     * @return a {@code ResultSet} object in which each row is an SQL\n@@ -2424,1 +2424,1 @@\n-     * Indicates that a <code>NULL<\/code> value is NOT allowed for this\n+     * Indicates that a {@code NULL} value is NOT allowed for this\n@@ -2427,3 +2427,3 @@\n-     * A possible value for column <code>NULLABLE<\/code> in the\n-     * <code>ResultSet<\/code> object returned by the method\n-     * <code>getTypeInfo<\/code>.\n+     * A possible value for column {@code NULLABLE} in the\n+     * {@code ResultSet} object returned by the method\n+     * {@code getTypeInfo}.\n@@ -2434,1 +2434,1 @@\n-     * Indicates that a <code>NULL<\/code> value is allowed for this\n+     * Indicates that a {@code NULL} value is allowed for this\n@@ -2437,3 +2437,3 @@\n-     * A possible value for column <code>NULLABLE<\/code> in the\n-     * <code>ResultSet<\/code> object returned by the method\n-     * <code>getTypeInfo<\/code>.\n+     * A possible value for column {@code NULLABLE} in the\n+     * {@code ResultSet} object returned by the method\n+     * {@code getTypeInfo}.\n@@ -2444,1 +2444,1 @@\n-     * Indicates that it is not known whether a <code>NULL<\/code> value\n+     * Indicates that it is not known whether a {@code NULL} value\n@@ -2447,3 +2447,3 @@\n-     * A possible value for column <code>NULLABLE<\/code> in the\n-     * <code>ResultSet<\/code> object returned by the method\n-     * <code>getTypeInfo<\/code>.\n+     * A possible value for column {@code NULLABLE} in the\n+     * {@code ResultSet} object returned by the method\n+     * {@code getTypeInfo}.\n@@ -2454,1 +2454,1 @@\n-     * Indicates that <code>WHERE<\/code> search clauses are not supported\n+     * Indicates that {@code WHERE} search clauses are not supported\n@@ -2457,3 +2457,3 @@\n-     * A possible value for column <code>SEARCHABLE<\/code> in the\n-     * <code>ResultSet<\/code> object returned by the method\n-     * <code>getTypeInfo<\/code>.\n+     * A possible value for column {@code SEARCHABLE} in the\n+     * {@code ResultSet} object returned by the method\n+     * {@code getTypeInfo}.\n@@ -2465,2 +2465,2 @@\n-     * can be only be used in <code>WHERE<\/code> search clauses\n-     * that  use <code>LIKE<\/code> predicates.\n+     * can be only be used in {@code WHERE} search clauses\n+     * that  use {@code LIKE} predicates.\n@@ -2468,3 +2468,3 @@\n-     * A possible value for column <code>SEARCHABLE<\/code> in the\n-     * <code>ResultSet<\/code> object returned by the method\n-     * <code>getTypeInfo<\/code>.\n+     * A possible value for column {@code SEARCHABLE} in the\n+     * {@code ResultSet} object returned by the method\n+     * {@code getTypeInfo}.\n@@ -2475,1 +2475,1 @@\n-     * Indicates that the data type can be only be used in <code>WHERE<\/code>\n+     * Indicates that the data type can be only be used in {@code WHERE}\n@@ -2477,1 +2477,1 @@\n-     * that do not use <code>LIKE<\/code> predicates.\n+     * that do not use {@code LIKE} predicates.\n@@ -2479,3 +2479,3 @@\n-     * A possible value for column <code>SEARCHABLE<\/code> in the\n-     * <code>ResultSet<\/code> object returned by the method\n-     * <code>getTypeInfo<\/code>.\n+     * A possible value for column {@code SEARCHABLE} in the\n+     * {@code ResultSet} object returned by the method\n+     * {@code getTypeInfo}.\n@@ -2486,1 +2486,1 @@\n-     * Indicates that all <code>WHERE<\/code> search clauses can be\n+     * Indicates that all {@code WHERE} search clauses can be\n@@ -2489,3 +2489,3 @@\n-     * A possible value for column <code>SEARCHABLE<\/code> in the\n-     * <code>ResultSet<\/code> object returned by the method\n-     * <code>getTypeInfo<\/code>.\n+     * A possible value for column {@code SEARCHABLE} in the\n+     * {@code ResultSet} object returned by the method\n+     * {@code getTypeInfo}.\n@@ -2501,2 +2501,2 @@\n-     *  <LI><B>TABLE_CAT<\/B> String {@code =>} table catalog (may be <code>null<\/code>)\n-     *  <LI><B>TABLE_SCHEM<\/B> String {@code =>} table schema (may be <code>null<\/code>)\n+     *  <LI><B>TABLE_CAT<\/B> String {@code =>} table catalog (may be {@code null})\n+     *  <LI><B>TABLE_SCHEM<\/B> String {@code =>} table schema (may be {@code null})\n@@ -2506,3 +2506,3 @@\n-     *  <LI><B>INDEX_QUALIFIER<\/B> String {@code =>} index catalog (may be <code>null<\/code>);\n-     *      <code>null<\/code> when TYPE is tableIndexStatistic\n-     *  <LI><B>INDEX_NAME<\/B> String {@code =>} index name; <code>null<\/code> when TYPE is\n+     *  <LI><B>INDEX_QUALIFIER<\/B> String {@code =>} index catalog (may be {@code null});\n+     *      {@code null} when TYPE is tableIndexStatistic\n+     *  <LI><B>INDEX_NAME<\/B> String {@code =>} index name; {@code null} when TYPE is\n@@ -2520,1 +2520,1 @@\n-     *  <LI><B>COLUMN_NAME<\/B> String {@code =>} column name; <code>null<\/code> when TYPE is\n+     *  <LI><B>COLUMN_NAME<\/B> String {@code =>} column name; {@code null} when TYPE is\n@@ -2523,2 +2523,2 @@\n-     *      \"D\" {@code =>} descending, may be <code>null<\/code> if sort sequence is not supported;\n-     *      <code>null<\/code> when TYPE is tableIndexStatistic\n+     *      \"D\" {@code =>} descending, may be {@code null} if sort sequence is not supported;\n+     *      {@code null} when TYPE is tableIndexStatistic\n@@ -2532,1 +2532,1 @@\n-     *      (may be <code>null<\/code>)\n+     *      (may be {@code null})\n@@ -2537,1 +2537,1 @@\n-     *        <code>null<\/code> means that the catalog name should not be used to narrow\n+     *        {@code null} means that the catalog name should not be used to narrow\n@@ -2541,1 +2541,1 @@\n-     *        <code>null<\/code> means that the schema name should not be used to narrow\n+     *        {@code null} means that the schema name should not be used to narrow\n@@ -2550,1 +2550,1 @@\n-     * @return <code>ResultSet<\/code> - each row is an index column description\n+     * @return {@code ResultSet} - each row is an index column description\n@@ -2561,3 +2561,3 @@\n-     * A possible value for column <code>TYPE<\/code> in the\n-     * <code>ResultSet<\/code> object returned by the method\n-     * <code>getIndexInfo<\/code>.\n+     * A possible value for column {@code TYPE} in the\n+     * {@code ResultSet} object returned by the method\n+     * {@code getIndexInfo}.\n@@ -2570,3 +2570,3 @@\n-     * A possible value for column <code>TYPE<\/code> in the\n-     * <code>ResultSet<\/code> object returned by the method\n-     * <code>getIndexInfo<\/code>.\n+     * A possible value for column {@code TYPE} in the\n+     * {@code ResultSet} object returned by the method\n+     * {@code getIndexInfo}.\n@@ -2579,3 +2579,3 @@\n-     * A possible value for column <code>TYPE<\/code> in the\n-     * <code>ResultSet<\/code> object returned by the method\n-     * <code>getIndexInfo<\/code>.\n+     * A possible value for column {@code TYPE} in the\n+     * {@code ResultSet} object returned by the method\n+     * {@code getIndexInfo}.\n@@ -2590,3 +2590,3 @@\n-     * A possible value for column <code>TYPE<\/code> in the\n-     * <code>ResultSet<\/code> object returned by the method\n-     * <code>getIndexInfo<\/code>.\n+     * A possible value for column {@code TYPE} in the\n+     * {@code ResultSet} object returned by the method\n+     * {@code getIndexInfo}.\n@@ -2601,2 +2601,2 @@\n-     * @param type defined in <code>java.sql.ResultSet<\/code>\n-     * @return <code>true<\/code> if so; <code>false<\/code> otherwise\n+     * @param type defined in {@code java.sql.ResultSet}\n+     * @return {@code true} if so; {@code false} otherwise\n@@ -2613,3 +2613,3 @@\n-     * @param type defined in <code>java.sql.ResultSet<\/code>\n-     * @param concurrency type defined in <code>java.sql.ResultSet<\/code>\n-     * @return <code>true<\/code> if so; <code>false<\/code> otherwise\n+     * @param type defined in {@code java.sql.ResultSet}\n+     * @param concurrency type defined in {@code java.sql.ResultSet}\n+     * @return {@code true} if so; {@code false} otherwise\n@@ -2625,1 +2625,1 @@\n-     * Retrieves whether for the given type of <code>ResultSet<\/code> object,\n+     * Retrieves whether for the given type of {@code ResultSet} object,\n@@ -2628,6 +2628,6 @@\n-     * @param type the <code>ResultSet<\/code> type; one of\n-     *        <code>ResultSet.TYPE_FORWARD_ONLY<\/code>,\n-     *        <code>ResultSet.TYPE_SCROLL_INSENSITIVE<\/code>, or\n-     *        <code>ResultSet.TYPE_SCROLL_SENSITIVE<\/code>\n-     * @return <code>true<\/code> if updates are visible for the given result set type;\n-     *        <code>false<\/code> otherwise\n+     * @param type the {@code ResultSet} type; one of\n+     *        {@code ResultSet.TYPE_FORWARD_ONLY},\n+     *        {@code ResultSet.TYPE_SCROLL_INSENSITIVE}, or\n+     *        {@code ResultSet.TYPE_SCROLL_SENSITIVE}\n+     * @return {@code true} if updates are visible for the given result set type;\n+     *        {@code false} otherwise\n@@ -2642,6 +2642,6 @@\n-     * @param type the <code>ResultSet<\/code> type; one of\n-     *        <code>ResultSet.TYPE_FORWARD_ONLY<\/code>,\n-     *        <code>ResultSet.TYPE_SCROLL_INSENSITIVE<\/code>, or\n-     *        <code>ResultSet.TYPE_SCROLL_SENSITIVE<\/code>\n-     * @return <code>true<\/code> if deletes are visible for the given result set type;\n-     *        <code>false<\/code> otherwise\n+     * @param type the {@code ResultSet} type; one of\n+     *        {@code ResultSet.TYPE_FORWARD_ONLY},\n+     *        {@code ResultSet.TYPE_SCROLL_INSENSITIVE}, or\n+     *        {@code ResultSet.TYPE_SCROLL_SENSITIVE}\n+     * @return {@code true} if deletes are visible for the given result set type;\n+     *        {@code false} otherwise\n@@ -2656,6 +2656,6 @@\n-     * @param type the <code>ResultSet<\/code> type; one of\n-     *        <code>ResultSet.TYPE_FORWARD_ONLY<\/code>,\n-     *        <code>ResultSet.TYPE_SCROLL_INSENSITIVE<\/code>, or\n-     *        <code>ResultSet.TYPE_SCROLL_SENSITIVE<\/code>\n-     * @return <code>true<\/code> if inserts are visible for the given result set type;\n-     *        <code>false<\/code> otherwise\n+     * @param type the {@code ResultSet} type; one of\n+     *        {@code ResultSet.TYPE_FORWARD_ONLY},\n+     *        {@code ResultSet.TYPE_SCROLL_INSENSITIVE}, or\n+     *        {@code ResultSet.TYPE_SCROLL_SENSITIVE}\n+     * @return {@code true} if inserts are visible for the given result set type;\n+     *        {@code false} otherwise\n@@ -2670,5 +2670,5 @@\n-     * @param type the <code>ResultSet<\/code> type; one of\n-     *        <code>ResultSet.TYPE_FORWARD_ONLY<\/code>,\n-     *        <code>ResultSet.TYPE_SCROLL_INSENSITIVE<\/code>, or\n-     *        <code>ResultSet.TYPE_SCROLL_SENSITIVE<\/code>\n-     * @return <code>true<\/code> if updates made by others\n+     * @param type the {@code ResultSet} type; one of\n+     *        {@code ResultSet.TYPE_FORWARD_ONLY},\n+     *        {@code ResultSet.TYPE_SCROLL_INSENSITIVE}, or\n+     *        {@code ResultSet.TYPE_SCROLL_SENSITIVE}\n+     * @return {@code true} if updates made by others\n@@ -2676,1 +2676,1 @@\n-     *        <code>false<\/code> otherwise\n+     *        {@code false} otherwise\n@@ -2685,5 +2685,5 @@\n-     * @param type the <code>ResultSet<\/code> type; one of\n-     *        <code>ResultSet.TYPE_FORWARD_ONLY<\/code>,\n-     *        <code>ResultSet.TYPE_SCROLL_INSENSITIVE<\/code>, or\n-     *        <code>ResultSet.TYPE_SCROLL_SENSITIVE<\/code>\n-     * @return <code>true<\/code> if deletes made by others\n+     * @param type the {@code ResultSet} type; one of\n+     *        {@code ResultSet.TYPE_FORWARD_ONLY},\n+     *        {@code ResultSet.TYPE_SCROLL_INSENSITIVE}, or\n+     *        {@code ResultSet.TYPE_SCROLL_SENSITIVE}\n+     * @return {@code true} if deletes made by others\n@@ -2691,1 +2691,1 @@\n-     *        <code>false<\/code> otherwise\n+     *        {@code false} otherwise\n@@ -2700,5 +2700,5 @@\n-     * @param type the <code>ResultSet<\/code> type; one of\n-     *        <code>ResultSet.TYPE_FORWARD_ONLY<\/code>,\n-     *        <code>ResultSet.TYPE_SCROLL_INSENSITIVE<\/code>, or\n-     *        <code>ResultSet.TYPE_SCROLL_SENSITIVE<\/code>\n-     * @return <code>true<\/code> if inserts made by others\n+     * @param type the {@code ResultSet} type; one of\n+     *        {@code ResultSet.TYPE_FORWARD_ONLY},\n+     *        {@code ResultSet.TYPE_SCROLL_INSENSITIVE}, or\n+     *        {@code ResultSet.TYPE_SCROLL_SENSITIVE}\n+     * @return {@code true} if inserts made by others\n@@ -2706,1 +2706,1 @@\n-     *         <code>false<\/code> otherwise\n+     *         {@code false} otherwise\n@@ -2714,1 +2714,1 @@\n-     * calling the method <code>ResultSet.rowUpdated<\/code>.\n+     * calling the method {@code ResultSet.rowUpdated}.\n@@ -2716,6 +2716,6 @@\n-     * @param type the <code>ResultSet<\/code> type; one of\n-     *        <code>ResultSet.TYPE_FORWARD_ONLY<\/code>,\n-     *        <code>ResultSet.TYPE_SCROLL_INSENSITIVE<\/code>, or\n-     *        <code>ResultSet.TYPE_SCROLL_SENSITIVE<\/code>\n-     * @return <code>true<\/code> if changes are detected by the result set type;\n-     *         <code>false<\/code> otherwise\n+     * @param type the {@code ResultSet} type; one of\n+     *        {@code ResultSet.TYPE_FORWARD_ONLY},\n+     *        {@code ResultSet.TYPE_SCROLL_INSENSITIVE}, or\n+     *        {@code ResultSet.TYPE_SCROLL_SENSITIVE}\n+     * @return {@code true} if changes are detected by the result set type;\n+     *         {@code false} otherwise\n@@ -2729,2 +2729,2 @@\n-     * calling the method <code>ResultSet.rowDeleted<\/code>.  If the method\n-     * <code>deletesAreDetected<\/code> returns <code>false<\/code>, it means that\n+     * calling the method {@code ResultSet.rowDeleted}.  If the method\n+     * {@code deletesAreDetected} returns {@code false}, it means that\n@@ -2733,6 +2733,6 @@\n-     * @param type the <code>ResultSet<\/code> type; one of\n-     *        <code>ResultSet.TYPE_FORWARD_ONLY<\/code>,\n-     *        <code>ResultSet.TYPE_SCROLL_INSENSITIVE<\/code>, or\n-     *        <code>ResultSet.TYPE_SCROLL_SENSITIVE<\/code>\n-     * @return <code>true<\/code> if deletes are detected by the given result set type;\n-     *         <code>false<\/code> otherwise\n+     * @param type the {@code ResultSet} type; one of\n+     *        {@code ResultSet.TYPE_FORWARD_ONLY},\n+     *        {@code ResultSet.TYPE_SCROLL_INSENSITIVE}, or\n+     *        {@code ResultSet.TYPE_SCROLL_SENSITIVE}\n+     * @return {@code true} if deletes are detected by the given result set type;\n+     *         {@code false} otherwise\n@@ -2746,1 +2746,1 @@\n-     * by calling the method <code>ResultSet.rowInserted<\/code>.\n+     * by calling the method {@code ResultSet.rowInserted}.\n@@ -2748,6 +2748,6 @@\n-     * @param type the <code>ResultSet<\/code> type; one of\n-     *        <code>ResultSet.TYPE_FORWARD_ONLY<\/code>,\n-     *        <code>ResultSet.TYPE_SCROLL_INSENSITIVE<\/code>, or\n-     *        <code>ResultSet.TYPE_SCROLL_SENSITIVE<\/code>\n-     * @return <code>true<\/code> if changes are detected by the specified result\n-     *         set type; <code>false<\/code> otherwise\n+     * @param type the {@code ResultSet} type; one of\n+     *        {@code ResultSet.TYPE_FORWARD_ONLY},\n+     *        {@code ResultSet.TYPE_SCROLL_INSENSITIVE}, or\n+     *        {@code ResultSet.TYPE_SCROLL_SENSITIVE}\n+     * @return {@code true} if changes are detected by the specified result\n+     *         set type; {@code false} otherwise\n@@ -2762,2 +2762,2 @@\n-     * @return <code>true<\/code> if this database supports batch updates;\n-     *         <code>false<\/code> otherwise\n+     * @return {@code true} if this database supports batch updates;\n+     *         {@code false} otherwise\n@@ -2772,2 +2772,2 @@\n-     * <code>JAVA_OBJECT<\/code>, <code>STRUCT<\/code>,\n-     * or <code>DISTINCT<\/code>.\n+     * {@code JAVA_OBJECT}, {@code STRUCT},\n+     * or {@code DISTINCT}.\n@@ -2776,3 +2776,3 @@\n-     * criteria are returned.  They are ordered by <code>DATA_TYPE<\/code>,\n-     * <code>TYPE_CAT<\/code>, <code>TYPE_SCHEM<\/code>  and\n-     * <code>TYPE_NAME<\/code>.  The type name parameter may be a fully-qualified\n+     * criteria are returned.  They are ordered by {@code DATA_TYPE},\n+     * {@code TYPE_CAT}, {@code TYPE_SCHEM}  and\n+     * {@code TYPE_NAME}.  The type name parameter may be a fully-qualified\n@@ -2784,2 +2784,2 @@\n-     *  <LI><B>TYPE_CAT<\/B> String {@code =>} the type's catalog (may be <code>null<\/code>)\n-     *  <LI><B>TYPE_SCHEM<\/B> String {@code =>} type's schema (may be <code>null<\/code>)\n+     *  <LI><B>TYPE_CAT<\/B> String {@code =>} the type's catalog (may be {@code null})\n+     *  <LI><B>TYPE_SCHEM<\/B> String {@code =>} type's schema (may be {@code null})\n@@ -2794,1 +2794,1 @@\n-     *     type as defined in java.sql.Types (<code>null<\/code> if DATA_TYPE is not\n+     *     type as defined in java.sql.Types ({@code null} if DATA_TYPE is not\n@@ -2803,1 +2803,1 @@\n-     *        <code>null<\/code> means that the catalog name should not be used to narrow\n+     *        {@code null} means that the catalog name should not be used to narrow\n@@ -2807,1 +2807,1 @@\n-     *        <code>null<\/code> means that the schema name should not be used to narrow\n+     *        {@code null} means that the schema name should not be used to narrow\n@@ -2812,2 +2812,2 @@\n-     *        STRUCT, or DISTINCT) to include; <code>null<\/code> returns all types\n-     * @return <code>ResultSet<\/code> object in which each row describes a UDT\n+     *        STRUCT, or DISTINCT) to include; {@code null} returns all types\n+     * @return {@code ResultSet} object in which each row describes a UDT\n@@ -2836,2 +2836,2 @@\n-     * @return <code>true<\/code> if savepoints are supported;\n-     *         <code>false<\/code> otherwise\n+     * @return {@code true} if savepoints are supported;\n+     *         {@code false} otherwise\n@@ -2847,2 +2847,2 @@\n-     * @return <code>true<\/code> if named parameters are supported;\n-     *         <code>false<\/code> otherwise\n+     * @return {@code true} if named parameters are supported;\n+     *         {@code false} otherwise\n@@ -2855,2 +2855,2 @@\n-     * Retrieves whether it is possible to have multiple <code>ResultSet<\/code> objects\n-     * returned from a <code>CallableStatement<\/code> object\n+     * Retrieves whether it is possible to have multiple {@code ResultSet} objects\n+     * returned from a {@code CallableStatement} object\n@@ -2859,3 +2859,3 @@\n-     * @return <code>true<\/code> if a <code>CallableStatement<\/code> object\n-     *         can return multiple <code>ResultSet<\/code> objects\n-     *         simultaneously; <code>false<\/code> otherwise\n+     * @return {@code true} if a {@code CallableStatement} object\n+     *         can return multiple {@code ResultSet} objects\n+     *         simultaneously; {@code false} otherwise\n@@ -2871,3 +2871,3 @@\n-     * @return <code>true<\/code> if auto-generated keys can be retrieved\n-     *         after a statement has executed; <code>false<\/code> otherwise\n-     * <p>If <code>true<\/code> is returned, the JDBC driver must support the\n+     * @return {@code true} if auto-generated keys can be retrieved\n+     *         after a statement has executed; {@code false} otherwise\n+     * <p>If {@code true} is returned, the JDBC driver must support the\n@@ -2893,1 +2893,1 @@\n-     * A row of the <code>ResultSet<\/code> object returned by this method\n+     * A row of the {@code ResultSet} object returned by this method\n@@ -2897,2 +2897,2 @@\n-     *  <LI><B>TYPE_CAT<\/B> String {@code =>} the UDT's catalog (may be <code>null<\/code>)\n-     *  <LI><B>TYPE_SCHEM<\/B> String {@code =>} UDT's schema (may be <code>null<\/code>)\n+     *  <LI><B>TYPE_CAT<\/B> String {@code =>} the UDT's catalog (may be {@code null})\n+     *  <LI><B>TYPE_SCHEM<\/B> String {@code =>} UDT's schema (may be {@code null})\n@@ -2901,1 +2901,1 @@\n-     *                           (may be <code>null<\/code>)\n+     *                           (may be {@code null})\n@@ -2903,1 +2903,1 @@\n-     *                             (may be <code>null<\/code>)\n+     *                             (may be {@code null})\n@@ -2911,1 +2911,1 @@\n-     *        <code>null<\/code> means drop catalog name from the selection criteria\n+     *        {@code null} means drop catalog name from the selection criteria\n@@ -2916,1 +2916,1 @@\n-     * @return a <code>ResultSet<\/code> object in which a row gives information\n+     * @return a {@code ResultSet} object in which a row gives information\n@@ -2939,2 +2939,2 @@\n-     *  <LI><B>TABLE_CAT<\/B> String {@code =>} the type's catalog (may be <code>null<\/code>)\n-     *  <LI><B>TABLE_SCHEM<\/B> String {@code =>} type's schema (may be <code>null<\/code>)\n+     *  <LI><B>TABLE_CAT<\/B> String {@code =>} the type's catalog (may be {@code null})\n+     *  <LI><B>TABLE_SCHEM<\/B> String {@code =>} type's schema (may be {@code null})\n@@ -2949,1 +2949,1 @@\n-     *        <code>null<\/code> means drop catalog name from the selection criteria\n+     *        {@code null} means drop catalog name from the selection criteria\n@@ -2954,1 +2954,1 @@\n-     * @return a <code>ResultSet<\/code> object in which each row is a type description\n+     * @return a {@code ResultSet} object in which each row is a type description\n@@ -2963,1 +2963,1 @@\n-     * Indicates that <code>NULL<\/code> values might not be allowed.\n+     * Indicates that {@code NULL} values might not be allowed.\n@@ -2966,2 +2966,2 @@\n-     * <code>NULLABLE<\/code> in the <code>ResultSet<\/code> object\n-     * returned by the method <code>getAttributes<\/code>.\n+     * {@code NULLABLE} in the {@code ResultSet} object\n+     * returned by the method {@code getAttributes}.\n@@ -2972,1 +2972,1 @@\n-     * Indicates that <code>NULL<\/code> values are definitely allowed.\n+     * Indicates that {@code NULL} values are definitely allowed.\n@@ -2974,3 +2974,3 @@\n-     * A possible value for the column <code>NULLABLE<\/code>\n-     * in the <code>ResultSet<\/code> object\n-     * returned by the method <code>getAttributes<\/code>.\n+     * A possible value for the column {@code NULLABLE}\n+     * in the {@code ResultSet} object\n+     * returned by the method {@code getAttributes}.\n@@ -2981,1 +2981,1 @@\n-     * Indicates that whether <code>NULL<\/code> values are allowed is not\n+     * Indicates that whether {@code NULL} values are allowed is not\n@@ -2984,3 +2984,3 @@\n-     * A possible value for the column <code>NULLABLE<\/code>\n-     * in the <code>ResultSet<\/code> object\n-     * returned by the method <code>getAttributes<\/code>.\n+     * A possible value for the column {@code NULLABLE}\n+     * in the {@code ResultSet} object\n+     * returned by the method {@code getAttributes}.\n@@ -2997,2 +2997,2 @@\n-     * <code>TYPE_CAT<\/code>, <code>TYPE_SCHEM<\/code>,\n-     * <code>TYPE_NAME<\/code> and <code>ORDINAL_POSITION<\/code>. This description\n+     * {@code TYPE_CAT}, {@code TYPE_SCHEM},\n+     * {@code TYPE_NAME} and {@code ORDINAL_POSITION}. This description\n@@ -3001,1 +3001,1 @@\n-     * The <code>ResultSet<\/code> object that is returned has the following\n+     * The {@code ResultSet} object that is returned has the following\n@@ -3004,2 +3004,2 @@\n-     *  <LI><B>TYPE_CAT<\/B> String {@code =>} type catalog (may be <code>null<\/code>)\n-     *  <LI><B>TYPE_SCHEM<\/B> String {@code =>} type schema (may be <code>null<\/code>)\n+     *  <LI><B>TYPE_CAT<\/B> String {@code =>} type catalog (may be {@code null})\n+     *  <LI><B>TYPE_SCHEM<\/B> String {@code =>} type schema (may be {@code null})\n@@ -3024,2 +3024,2 @@\n-     *  <LI><B>REMARKS<\/B> String {@code =>} comment describing column (may be <code>null<\/code>)\n-     *  <LI><B>ATTR_DEF<\/B> String {@code =>} default value (may be <code>null<\/code>)\n+     *  <LI><B>REMARKS<\/B> String {@code =>} comment describing column (may be {@code null})\n+     *  <LI><B>ATTR_DEF<\/B> String {@code =>} default value (may be {@code null})\n@@ -3041,1 +3041,1 @@\n-     *      scope of a reference attribute (<code>null<\/code> if DATA_TYPE isn't REF)\n+     *      scope of a reference attribute ({@code null} if DATA_TYPE isn't REF)\n@@ -3043,1 +3043,1 @@\n-     *      scope of a reference attribute (<code>null<\/code> if DATA_TYPE isn't REF)\n+     *      scope of a reference attribute ({@code null} if DATA_TYPE isn't REF)\n@@ -3045,1 +3045,1 @@\n-     *      reference attribute (<code>null<\/code> if the DATA_TYPE isn't REF)\n+     *      reference attribute ({@code null} if the DATA_TYPE isn't REF)\n@@ -3047,1 +3047,1 @@\n-     *      Ref type,SQL type from java.sql.Types (<code>null<\/code> if DATA_TYPE\n+     *      Ref type,SQL type from java.sql.Types ({@code null} if DATA_TYPE\n@@ -3052,1 +3052,1 @@\n-     *        <code>null<\/code> means that the catalog name should not be used to narrow\n+     *        {@code null} means that the catalog name should not be used to narrow\n@@ -3056,1 +3056,1 @@\n-     *        <code>null<\/code> means that the schema name should not be used to narrow\n+     *        {@code null} means that the schema name should not be used to narrow\n@@ -3062,1 +3062,1 @@\n-     * @return a <code>ResultSet<\/code> object in which each row is an\n+     * @return a {@code ResultSet} object in which each row is an\n@@ -3076,3 +3076,3 @@\n-     *          <code>ResultSet.HOLD_CURSORS_OVER_COMMIT<\/code> or\n-     *          <code>ResultSet.CLOSE_CURSORS_AT_COMMIT<\/code>\n-     * @return <code>true<\/code> if so; <code>false<\/code> otherwise\n+     *          {@code ResultSet.HOLD_CURSORS_OVER_COMMIT} or\n+     *          {@code ResultSet.CLOSE_CURSORS_AT_COMMIT}\n+     * @return {@code true} if so; {@code false} otherwise\n@@ -3086,1 +3086,1 @@\n-     * Retrieves this database's default holdability for <code>ResultSet<\/code>\n+     * Retrieves this database's default holdability for {@code ResultSet}\n@@ -3090,2 +3090,2 @@\n-     *         <code>ResultSet.HOLD_CURSORS_OVER_COMMIT<\/code> or\n-     *         <code>ResultSet.CLOSE_CURSORS_AT_COMMIT<\/code>\n+     *         {@code ResultSet.HOLD_CURSORS_OVER_COMMIT} or\n+     *         {@code ResultSet.CLOSE_CURSORS_AT_COMMIT}\n@@ -3137,1 +3137,1 @@\n-     * <code>DatabaseMetaData.getSQLStateType<\/code> which is used to indicate\n+     * {@code DatabaseMetaData.getSQLStateType} which is used to indicate\n@@ -3139,1 +3139,1 @@\n-     * <code>SQLException.getSQLState<\/code> is an\n+     * {@code SQLException.getSQLState} is an\n@@ -3148,1 +3148,1 @@\n-     * <code>DatabaseMetaData.getSQLStateType<\/code> which is used to indicate\n+     * {@code DatabaseMetaData.getSQLStateType} which is used to indicate\n@@ -3150,1 +3150,1 @@\n-     * <code>SQLException.getSQLState<\/code> is an SQLSTATE value.\n+     * {@code SQLException.getSQLState} is an SQLSTATE value.\n@@ -3158,1 +3158,1 @@\n-     * <code>DatabaseMetaData.getSQLStateType<\/code> which is used to indicate\n+     * {@code DatabaseMetaData.getSQLStateType} which is used to indicate\n@@ -3160,1 +3160,1 @@\n-     * <code>SQLException.getSQLState<\/code> is an SQL99 SQLSTATE value.\n+     * {@code SQLException.getSQLState} is an SQL99 SQLSTATE value.\n@@ -3163,1 +3163,1 @@\n-     * should use the constant <code>sqlStateSQL<\/code> instead.\n+     * should use the constant {@code sqlStateSQL} instead.\n@@ -3170,1 +3170,1 @@\n-     * Indicates whether the SQLSTATE returned by <code>SQLException.getSQLState<\/code>\n+     * Indicates whether the SQLSTATE returned by {@code SQLException.getSQLState}\n@@ -3183,2 +3183,2 @@\n-     * @return <code>true<\/code> if updates are made to a copy of the LOB;\n-     *         <code>false<\/code> if updates are made directly to the LOB\n+     * @return {@code true} if updates are made to a copy of the LOB;\n+     *         {@code false} if updates are made directly to the LOB\n@@ -3193,1 +3193,1 @@\n-     * @return <code>true<\/code> if so; <code>false<\/code> otherwise\n+     * @return {@code true} if so; {@code false} otherwise\n@@ -3213,2 +3213,2 @@\n-     * are ordered by <code>TABLE_CATALOG<\/code> and\n-     * <code>TABLE_SCHEM<\/code>.\n+     * are ordered by {@code TABLE_CATALOG} and\n+     * {@code TABLE_SCHEM}.\n@@ -3219,1 +3219,1 @@\n-     *  <LI><B>TABLE_CATALOG<\/B> String {@code =>} catalog name (may be <code>null<\/code>)\n+     *  <LI><B>TABLE_CATALOG<\/B> String {@code =>} catalog name (may be {@code null})\n@@ -3229,1 +3229,1 @@\n-     * @return a <code>ResultSet<\/code> object in which each row is a\n+     * @return a {@code ResultSet} object in which each row is a\n@@ -3241,1 +3241,1 @@\n-     * @return <code>true<\/code> if so; <code>false<\/code> otherwise\n+     * @return {@code true} if so; {@code false} otherwise\n@@ -3248,3 +3248,3 @@\n-     * Retrieves whether a <code>SQLException<\/code> while autoCommit is <code>true<\/code> indicates\n-     * that all open ResultSets are closed, even ones that are holdable.  When a <code>SQLException<\/code> occurs while\n-     * autocommit is <code>true<\/code>, it is vendor specific whether the JDBC driver responds with a commit operation, a\n+     * Retrieves whether a {@code SQLException} while autoCommit is {@code true} indicates\n+     * that all open ResultSets are closed, even ones that are holdable.  When a {@code SQLException} occurs while\n+     * autocommit is {@code true}, it is vendor specific whether the JDBC driver responds with a commit operation, a\n@@ -3254,1 +3254,1 @@\n-     * @return <code>true<\/code> if so; <code>false<\/code> otherwise\n+     * @return {@code true} if so; {@code false} otherwise\n@@ -3272,1 +3272,1 @@\n-         * The <code>ResultSet<\/code> is sorted by the NAME column\n+         * The {@code ResultSet} is sorted by the NAME column\n@@ -3274,1 +3274,1 @@\n-         * @return      A <code>ResultSet<\/code> object; each row is a supported client info\n+         * @return      A {@code ResultSet} object; each row is a supported client info\n@@ -3290,3 +3290,3 @@\n-     * <code>FUNCTION_CAT<\/code>, <code>FUNCTION_SCHEM<\/code>,\n-     * <code>FUNCTION_NAME<\/code> and\n-     * <code>SPECIFIC_ NAME<\/code>.\n+     * {@code FUNCTION_CAT}, {@code FUNCTION_SCHEM},\n+     * {@code FUNCTION_NAME} and\n+     * {@code SPECIFIC_ NAME}.\n@@ -3296,2 +3296,2 @@\n-     *  <LI><B>FUNCTION_CAT<\/B> String {@code =>} function catalog (may be <code>null<\/code>)\n-     *  <LI><B>FUNCTION_SCHEM<\/B> String {@code =>} function schema (may be <code>null<\/code>)\n+     *  <LI><B>FUNCTION_CAT<\/B> String {@code =>} function catalog (may be {@code null})\n+     *  <LI><B>FUNCTION_SCHEM<\/B> String {@code =>} function schema (may be {@code null})\n@@ -3310,1 +3310,1 @@\n-     * generated, name that may be different then the <code>FUNCTION_NAME<\/code>\n+     * generated, name that may be different then the {@code FUNCTION_NAME}\n@@ -3315,1 +3315,1 @@\n-     * returned by <code>getFunctions<\/code>\n+     * returned by {@code getFunctions}\n@@ -3319,1 +3319,1 @@\n-     *        <code>null<\/code> means that the catalog name should not be used to narrow\n+     *        {@code null} means that the catalog name should not be used to narrow\n@@ -3323,1 +3323,1 @@\n-     *        <code>null<\/code> means that the schema name should not be used to narrow\n+     *        {@code null} means that the schema name should not be used to narrow\n@@ -3327,1 +3327,1 @@\n-     * @return <code>ResultSet<\/code> - each row is a function description\n+     * @return {@code ResultSet} - each row is a function description\n@@ -3340,3 +3340,3 @@\n-     * <code>FUNCTION_CAT<\/code>, <code>FUNCTION_SCHEM<\/code>,\n-     * <code>FUNCTION_NAME<\/code> and\n-     * <code>SPECIFIC_ NAME<\/code>. Within this, the return value,\n+     * {@code FUNCTION_CAT}, {@code FUNCTION_SCHEM},\n+     * {@code FUNCTION_NAME} and\n+     * {@code SPECIFIC_ NAME}. Within this, the return value,\n@@ -3346,1 +3346,1 @@\n-     * <P>Each row in the <code>ResultSet<\/code>\n+     * <P>Each row in the {@code ResultSet}\n@@ -3350,2 +3350,2 @@\n-     *  <LI><B>FUNCTION_CAT<\/B> String {@code =>} function catalog (may be <code>null<\/code>)\n-     *  <LI><B>FUNCTION_SCHEM<\/B> String {@code =>} function schema (may be <code>null<\/code>)\n+     *  <LI><B>FUNCTION_CAT<\/B> String {@code =>} function catalog (may be {@code null})\n+     *  <LI><B>FUNCTION_SCHEM<\/B> String {@code =>} function schema (may be {@code null})\n@@ -3363,1 +3363,1 @@\n-     *  is a column in the <code>ResultSet<\/code>\n+     *  is a column in the {@code ResultSet}\n@@ -3398,1 +3398,1 @@\n-     * generated, name that may be different then the <code>FUNCTION_NAME<\/code>\n+     * generated, name that may be different then the {@code FUNCTION_NAME}\n@@ -3411,1 +3411,1 @@\n-     *        <code>null<\/code> means that the catalog name should not be used to narrow\n+     *        {@code null} means that the catalog name should not be used to narrow\n@@ -3415,1 +3415,1 @@\n-     *        <code>null<\/code> means that the schema name should not be used to narrow\n+     *        {@code null} means that the schema name should not be used to narrow\n@@ -3421,1 +3421,1 @@\n-     * @return <code>ResultSet<\/code> - each row describes a\n+     * @return {@code ResultSet} - each row describes a\n@@ -3438,3 +3438,3 @@\n-     * <code>COLUMN_TYPE<\/code>\n-     * in the <code>ResultSet<\/code>\n-     * returned by the method <code>getFunctionColumns<\/code>.\n+     * {@code COLUMN_TYPE}\n+     * in the {@code ResultSet}\n+     * returned by the method {@code getFunctionColumns}.\n@@ -3448,3 +3448,3 @@\n-     * <code>COLUMN_TYPE<\/code>\n-     * in the <code>ResultSet<\/code>\n-     * returned by the method <code>getFunctionColumns<\/code>.\n+     * {@code COLUMN_TYPE}\n+     * in the {@code ResultSet}\n+     * returned by the method {@code getFunctionColumns}.\n@@ -3459,3 +3459,3 @@\n-     * <code>COLUMN_TYPE<\/code>\n-     * in the <code>ResultSet<\/code>\n-     * returned by the method <code>getFunctionColumns<\/code>.\n+     * {@code COLUMN_TYPE}\n+     * in the {@code ResultSet}\n+     * returned by the method {@code getFunctionColumns}.\n@@ -3470,3 +3470,3 @@\n-     * <code>COLUMN_TYPE<\/code>\n-     * in the <code>ResultSet<\/code>\n-     * returned by the method <code>getFunctionColumns<\/code>.\n+     * {@code COLUMN_TYPE}\n+     * in the {@code ResultSet}\n+     * returned by the method {@code getFunctionColumns}.\n@@ -3480,3 +3480,3 @@\n-     * <code>COLUMN_TYPE<\/code>\n-     * in the <code>ResultSet<\/code>\n-     * returned by the method <code>getFunctionColumns<\/code>.\n+     * {@code COLUMN_TYPE}\n+     * in the {@code ResultSet}\n+     * returned by the method {@code getFunctionColumns}.\n@@ -3491,3 +3491,3 @@\n-     * <code>COLUMN_TYPE<\/code>\n-     * in the <code>ResultSet<\/code>\n-     * returned by the method <code>getFunctionColumns<\/code>.\n+     * {@code COLUMN_TYPE}\n+     * in the {@code ResultSet}\n+     * returned by the method {@code getFunctionColumns}.\n@@ -3500,1 +3500,1 @@\n-     * Indicates that <code>NULL<\/code> values are not allowed.\n+     * Indicates that {@code NULL} values are not allowed.\n@@ -3503,3 +3503,3 @@\n-     * <code>NULLABLE<\/code>\n-     * in the <code>ResultSet<\/code> object\n-     * returned by the method <code>getFunctionColumns<\/code>.\n+     * {@code NULLABLE}\n+     * in the {@code ResultSet} object\n+     * returned by the method {@code getFunctionColumns}.\n@@ -3511,1 +3511,1 @@\n-     * Indicates that <code>NULL<\/code> values are allowed.\n+     * Indicates that {@code NULL} values are allowed.\n@@ -3514,3 +3514,3 @@\n-     * <code>NULLABLE<\/code>\n-     * in the <code>ResultSet<\/code> object\n-     * returned by the method <code>getFunctionColumns<\/code>.\n+     * {@code NULLABLE}\n+     * in the {@code ResultSet} object\n+     * returned by the method {@code getFunctionColumns}.\n@@ -3522,1 +3522,1 @@\n-     * Indicates that whether <code>NULL<\/code> values are allowed\n+     * Indicates that whether {@code NULL} values are allowed\n@@ -3526,3 +3526,3 @@\n-     * <code>NULLABLE<\/code>\n-     * in the <code>ResultSet<\/code> object\n-     * returned by the method <code>getFunctionColumns<\/code>.\n+     * {@code NULLABLE}\n+     * in the {@code ResultSet} object\n+     * returned by the method {@code getFunctionColumns}.\n@@ -3537,3 +3537,3 @@\n-     * A possible value for column <code>FUNCTION_TYPE<\/code> in the\n-     * <code>ResultSet<\/code> object returned by the method\n-     * <code>getFunctions<\/code>.\n+     * A possible value for column {@code FUNCTION_TYPE} in the\n+     * {@code ResultSet} object returned by the method\n+     * {@code getFunctions}.\n@@ -3547,3 +3547,3 @@\n-     * A possible value for column <code>FUNCTION_TYPE<\/code> in the\n-     * <code>ResultSet<\/code> object returned by the method\n-     * <code>getFunctions<\/code>.\n+     * A possible value for column {@code FUNCTION_TYPE} in the\n+     * {@code ResultSet} object returned by the method\n+     * {@code getFunctions}.\n@@ -3557,3 +3557,3 @@\n-     * A possible value for column <code>FUNCTION_TYPE<\/code> in the\n-     * <code>ResultSet<\/code> object returned by the method\n-     * <code>getFunctions<\/code>.\n+     * A possible value for column {@code FUNCTION_TYPE} in the\n+     * {@code ResultSet} object returned by the method\n+     * {@code getFunctions}.\n@@ -3577,2 +3577,2 @@\n-     * <code>TABLE_CAT<\/code>,<code>TABLE_SCHEM<\/code>, <code>TABLE_NAME<\/code>\n-     * and <code>COLUMN_NAME<\/code>.\n+     * {@code TABLE_CAT},{@code TABLE_SCHEM}, {@code TABLE_NAME}\n+     * and {@code COLUMN_NAME}.\n@@ -3582,2 +3582,2 @@\n-     *  <LI><B>TABLE_CAT<\/B> String {@code =>} table catalog (may be <code>null<\/code>)\n-     *  <LI><B>TABLE_SCHEM<\/B> String {@code =>} table schema (may be <code>null<\/code>)\n+     *  <LI><B>TABLE_CAT<\/B> String {@code =>} table catalog (may be {@code null})\n+     *  <LI><B>TABLE_SCHEM<\/B> String {@code =>} table schema (may be {@code null})\n@@ -3593,1 +3593,1 @@\n-     *  <LI><B>REMARKS<\/B> String {@code =>} comment describing column (may be <code>null<\/code>)\n+     *  <LI><B>REMARKS<\/B> String {@code =>} comment describing column (may be {@code null})\n@@ -3613,1 +3613,1 @@\n-     *        <code>null<\/code> means that the catalog name should not be used to narrow\n+     *        {@code null} means that the catalog name should not be used to narrow\n@@ -3617,1 +3617,1 @@\n-     *        <code>null<\/code> means that the schema name should not be used to narrow\n+     *        {@code null} means that the schema name should not be used to narrow\n@@ -3623,1 +3623,1 @@\n-     * @return <code>ResultSet<\/code> - each row is a column description\n+     * @return {@code ResultSet} - each row is a column description\n@@ -3638,1 +3638,1 @@\n-     * @return <code>true<\/code> if so; <code>false<\/code> otherwise\n+     * @return {@code true} if so; {@code false} otherwise\n","filename":"src\/java.sql\/share\/classes\/java\/sql\/DatabaseMetaData.java","additions":681,"deletions":681,"binary":false,"changes":1362,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n- * JDBC to identify this as an SQL <code>DATE<\/code> value.  A\n+ * JDBC to identify this as an SQL {@code DATE} value.  A\n@@ -37,2 +37,2 @@\n- * To conform with the definition of SQL <code>DATE<\/code>, the\n- * millisecond values wrapped by a <code>java.sql.Date<\/code> instance\n+ * To conform with the definition of SQL {@code DATE}, the\n+ * millisecond values wrapped by a {@code java.sql.Date} instance\n@@ -48,1 +48,1 @@\n-     * Constructs a <code>Date<\/code> object initialized with the given\n+     * Constructs a {@code Date} object initialized with the given\n@@ -57,1 +57,1 @@\n-     * @deprecated instead use the constructor <code>Date(long date)<\/code>\n+     * @deprecated instead use the constructor {@code Date(long date)}\n@@ -65,1 +65,1 @@\n-     * Constructs a <code>Date<\/code> object using the given milliseconds\n+     * Constructs a {@code Date} object using the given milliseconds\n@@ -83,1 +83,1 @@\n-     * Sets an existing <code>Date<\/code> object\n+     * Sets an existing {@code Date} object\n@@ -102,1 +102,1 @@\n-     * a <code>Date<\/code> value.\n+     * a {@code Date} value.\n@@ -104,4 +104,4 @@\n-     * @param s a <code>String<\/code> object representing a date in\n-     *        in the format \"yyyy-[m]m-[d]d\". The leading zero for <code>mm<\/code>\n-     * and <code>dd<\/code> may also be omitted.\n-     * @return a <code>java.sql.Date<\/code> object representing the\n+     * @param s a {@code String} object representing a date in\n+     *        in the format \"yyyy-[m]m-[d]d\". The leading zero for {@code mm}\n+     * and {@code dd} may also be omitted.\n+     * @return a {@code java.sql.Date} object representing the\n","filename":"src\/java.sql\/share\/classes\/java\/sql\/Date.java","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -68,1 +68,1 @@\n-     * <P>The driver should throw an <code>SQLException<\/code> if it is the right\n+     * <P>The driver should throw an {@code SQLException} if it is the right\n@@ -86,1 +86,1 @@\n-     * @return a <code>Connection<\/code> object that represents a\n+     * @return a {@code Connection} object that represents a\n@@ -96,2 +96,2 @@\n-     * to the given URL.  Typically drivers will return <code>true<\/code> if they\n-     * understand the sub-protocol specified in the URL and <code>false<\/code> if\n+     * to the given URL.  Typically drivers will return {@code true} if they\n+     * understand the sub-protocol specified in the URL and {@code false} if\n@@ -101,2 +101,2 @@\n-     * @return <code>true<\/code> if this driver understands the given URL;\n-     *         <code>false<\/code> otherwise\n+     * @return {@code true} if this driver understands the given URL;\n+     *         {@code false} otherwise\n@@ -112,1 +112,1 @@\n-     * The <code>getPropertyInfo<\/code> method is intended to allow a generic\n+     * The {@code getPropertyInfo} method is intended to allow a generic\n@@ -118,1 +118,1 @@\n-     * to the <code>getPropertyInfo<\/code> method.\n+     * to the {@code getPropertyInfo} method.\n@@ -123,1 +123,1 @@\n-     * @return an array of <code>DriverPropertyInfo<\/code> objects describing\n+     * @return an array of {@code DriverPropertyInfo} objects describing\n@@ -149,2 +149,2 @@\n-     * A driver may only report <code>true<\/code> here if it passes the JDBC\n-     * compliance tests; otherwise it is required to return <code>false<\/code>.\n+     * A driver may only report {@code true} here if it passes the JDBC\n+     * compliance tests; otherwise it is required to return {@code false}.\n@@ -162,1 +162,1 @@\n-     * @return <code>true<\/code> if this driver is JDBC Compliant; <code>false<\/code>\n+     * @return {@code true} if this driver is JDBC Compliant; {@code false}\n","filename":"src\/java.sql\/share\/classes\/java\/sql\/Driver.java","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -101,1 +101,1 @@\n-     * The <code>SQLPermission<\/code> constant that allows the\n+     * The {@code SQLPermission} constant that allows the\n@@ -121,1 +121,1 @@\n-     * The <code>getLogWriter<\/code> and <code>setLogWriter<\/code>\n+     * The {@code getLogWriter} and {@code setLogWriter}\n@@ -123,2 +123,2 @@\n-     * of the <code>get\/setlogStream<\/code> methods, which are deprecated.\n-     * @return a <code>java.io.PrintWriter<\/code> object\n+     * of the {@code get\/setlogStream} methods, which are deprecated.\n+     * @return a {@code java.io.PrintWriter} object\n@@ -133,2 +133,2 @@\n-     * Sets the logging\/tracing <code>PrintWriter<\/code> object\n-     * that is used by the <code>DriverManager<\/code> and all drivers.\n+     * Sets the logging\/tracing {@code PrintWriter} object\n+     * that is used by the {@code DriverManager} and all drivers.\n@@ -140,2 +140,2 @@\n-     * @param out the new logging\/tracing <code>PrintStream<\/code> object;\n-     *      <code>null<\/code> to disable logging and tracing\n+     * @param out the new logging\/tracing {@code PrintStream} object;\n+     *      {@code null} to disable logging and tracing\n@@ -163,1 +163,1 @@\n-     * The <code>DriverManager<\/code> attempts to select an appropriate driver from\n+     * The {@code DriverManager} attempts to select an appropriate driver from\n@@ -194,1 +194,1 @@\n-     * The <code>DriverManager<\/code> attempts to select an appropriate driver from\n+     * The {@code DriverManager} attempts to select an appropriate driver from\n@@ -233,1 +233,1 @@\n-     * The <code>DriverManager<\/code> attempts to select an appropriate driver from\n+     * The {@code DriverManager} attempts to select an appropriate driver from\n@@ -256,1 +256,1 @@\n-     * The <code>DriverManager<\/code> attempts to select an appropriate driver from\n+     * The {@code DriverManager} attempts to select an appropriate driver from\n@@ -261,1 +261,1 @@\n-     * @return a <code>Driver<\/code> object representing a driver\n+     * @return a {@code Driver} object representing a driver\n@@ -417,1 +417,1 @@\n-     * <CODE>d.getClass().getName()<\/CODE>\n+     * {@code d.getClass().getName()}\n@@ -483,1 +483,1 @@\n-     * by the <code>DriverManager<\/code>\n+     * by the {@code DriverManager}\n@@ -490,1 +490,1 @@\n-     * @param out the new logging\/tracing PrintStream; to disable, set to <code>null<\/code>\n+     * @param out the new logging\/tracing PrintStream; to disable, set to {@code null}\n@@ -513,1 +513,1 @@\n-     * Retrieves the logging\/tracing PrintStream that is used by the <code>DriverManager<\/code>\n+     * Retrieves the logging\/tracing PrintStream that is used by the {@code DriverManager}\n@@ -516,1 +516,1 @@\n-     * @return the logging\/tracing PrintStream; if disabled, is <code>null<\/code>\n+     * @return the logging\/tracing PrintStream; if disabled, is {@code null}\n","filename":"src\/java.sql\/share\/classes\/java\/sql\/DriverManager.java","additions":18,"deletions":18,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,1 @@\n- * <code>DriverPropertyInfo<\/code> class is of interest only to advanced programmers\n+ * {@code DriverPropertyInfo} class is of interest only to advanced programmers\n@@ -32,1 +32,1 @@\n- * <code>getDriverProperties<\/code> to discover\n+ * {@code getDriverProperties} to discover\n@@ -41,4 +41,4 @@\n-     * Constructs a <code>DriverPropertyInfo<\/code> object with a  given\n-     * name and value.  The <code>description<\/code> and <code>choices<\/code>\n-     * are initialized to <code>null<\/code> and <code>required<\/code> is initialized\n-     * to <code>false<\/code>.\n+     * Constructs a {@code DriverPropertyInfo} object with a  given\n+     * name and value.  The {@code description} and {@code choices}\n+     * are initialized to {@code null} and {@code required} is initialized\n+     * to {@code false}.\n@@ -65,1 +65,1 @@\n-     * The <code>required<\/code> field is <code>true<\/code> if a value must be\n+     * The {@code required} field is {@code true} if a value must be\n@@ -67,1 +67,1 @@\n-     * during <code>Driver.connect<\/code> and <code>false<\/code> otherwise.\n+     * during {@code Driver.connect} and {@code false} otherwise.\n@@ -72,1 +72,1 @@\n-     * The <code>value<\/code> field specifies the current value of\n+     * The {@code value} field specifies the current value of\n@@ -74,1 +74,1 @@\n-         * supplied to the method <code>getPropertyInfo<\/code>, the\n+         * supplied to the method {@code getPropertyInfo}, the\n@@ -82,1 +82,1 @@\n-         * <code>DriverPropertyInfo.value<\/code> may be selected\n+         * {@code DriverPropertyInfo.value} may be selected\n","filename":"src\/java.sql\/share\/classes\/java\/sql\/DriverPropertyInfo.java","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,2 +30,2 @@\n- * for the SQL <code>NCLOB<\/code> type.\n- * An SQL <code>NCLOB<\/code> is a built-in type\n+ * for the SQL {@code NCLOB} type.\n+ * An SQL {@code NCLOB} is a built-in type\n@@ -34,1 +34,1 @@\n- * <P>The <code>NClob<\/code> interface extends the <code>Clob<\/code> interface\n+ * <P>The {@code NClob} interface extends the {@code Clob} interface\n@@ -36,4 +36,4 @@\n- * length of an SQL <code>NCLOB<\/code> value,\n- * for materializing a <code>NCLOB<\/code> value on the client, and for\n- * searching for a substring or <code>NCLOB<\/code> object within a\n- * <code>NCLOB<\/code> value. A <code>NClob<\/code> object, just like a <code>Clob<\/code> object, is valid for the duration\n+ * length of an SQL {@code NCLOB} value,\n+ * for materializing a {@code NCLOB} value on the client, and for\n+ * searching for a substring or {@code NCLOB} object within a\n+ * {@code NCLOB} value. A {@code NClob} object, just like a {@code Clob} object, is valid for the duration\n@@ -43,3 +43,3 @@\n- * <code>getNClob<\/code> and <code>setNClob<\/code> allow a programmer to\n- * access an SQL <code>NCLOB<\/code> value.  In addition, this interface\n- * has methods for updating a <code>NCLOB<\/code> value.\n+ * {@code getNClob} and {@code setNClob} allow a programmer to\n+ * access an SQL {@code NCLOB} value.  In addition, this interface\n+ * has methods for updating a {@code NCLOB} value.\n@@ -47,1 +47,1 @@\n- * All methods on the <code>NClob<\/code> interface must be fully implemented if the\n+ * All methods on the {@code NClob} interface must be fully implemented if the\n","filename":"src\/java.sql\/share\/classes\/java\/sql\/NClob.java","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -31,3 +31,3 @@\n- * <code>PreparedStatement<\/code> object. For some queries and driver\n- * implementations, the data that would be returned by a <code>ParameterMetaData<\/code>\n- * object may not be available until the <code>PreparedStatement<\/code> has\n+ * {@code PreparedStatement} object. For some queries and driver\n+ * implementations, the data that would be returned by a {@code ParameterMetaData}\n+ * object may not be available until the {@code PreparedStatement} has\n@@ -37,1 +37,1 @@\n- *types and properties for each parameter marker in a <code>CallableStatement<\/code>\n+ *types and properties for each parameter marker in a {@code CallableStatement}\n@@ -46,2 +46,2 @@\n-     * Retrieves the number of parameters in the <code>PreparedStatement<\/code>\n-     * object for which this <code>ParameterMetaData<\/code> object contains\n+     * Retrieves the number of parameters in the {@code PreparedStatement}\n+     * object for which this {@code ParameterMetaData} object contains\n@@ -61,3 +61,3 @@\n-     *        <code>ParameterMetaData.parameterNoNulls<\/code>,\n-     *        <code>ParameterMetaData.parameterNullable<\/code>, or\n-     *        <code>ParameterMetaData.parameterNullableUnknown<\/code>\n+     *        {@code ParameterMetaData.parameterNoNulls},\n+     *        {@code ParameterMetaData.parameterNullable}, or\n+     *        {@code ParameterMetaData.parameterNullableUnknown}\n@@ -71,1 +71,1 @@\n-     * parameter will not allow <code>NULL<\/code> values.\n+     * parameter will not allow {@code NULL} values.\n@@ -77,1 +77,1 @@\n-     * parameter will allow <code>NULL<\/code> values.\n+     * parameter will allow {@code NULL} values.\n@@ -91,1 +91,1 @@\n-     * @return <code>true<\/code> if so; <code>false<\/code> otherwise\n+     * @return {@code true} if so; {@code false} otherwise\n@@ -129,1 +129,1 @@\n-     * @return SQL type from <code>java.sql.Types<\/code>\n+     * @return SQL type from {@code java.sql.Types}\n@@ -150,1 +150,1 @@\n-     * should be passed to the method <code>PreparedStatement.setObject<\/code>.\n+     * should be passed to the method {@code PreparedStatement.setObject}.\n@@ -155,1 +155,1 @@\n-     *         <code>PreparedStatement.setObject<\/code> to set the value\n+     *         {@code PreparedStatement.setObject} to set the value\n@@ -188,4 +188,4 @@\n-     *        <code>ParameterMetaData.parameterModeIn<\/code>,\n-     *        <code>ParameterMetaData.parameterModeOut<\/code>, or\n-     *        <code>ParameterMetaData.parameterModeInOut<\/code>\n-     *        <code>ParameterMetaData.parameterModeUnknown<\/code>.\n+     *        {@code ParameterMetaData.parameterModeIn},\n+     *        {@code ParameterMetaData.parameterModeOut}, or\n+     *        {@code ParameterMetaData.parameterModeInOut}\n+     *        {@code ParameterMetaData.parameterModeUnknown}.\n","filename":"src\/java.sql\/share\/classes\/java\/sql\/ParameterMetaData.java","additions":19,"deletions":19,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -36,1 +36,1 @@\n- * <code>PreparedStatement<\/code> object. This object can then be used to\n+ * {@code PreparedStatement} object. This object can then be used to\n@@ -39,1 +39,1 @@\n- * <P><B>Note:<\/B> The setter methods (<code>setShort<\/code>, <code>setString<\/code>,\n+ * <P><B>Note:<\/B> The setter methods ({@code setShort}, {@code setString},\n@@ -43,1 +43,1 @@\n- * <code>INTEGER<\/code>, then the method <code>setInt<\/code> should be used.\n+ * {@code INTEGER}, then the method {@code setInt} should be used.\n@@ -46,1 +46,1 @@\n- * <code>setObject<\/code> should be used with a target SQL type.\n+ * {@code setObject} should be used with a target SQL type.\n@@ -48,1 +48,1 @@\n- * In the following example of setting a parameter, <code>con<\/code> represents\n+ * In the following example of setting a parameter, {@code con} represents\n@@ -66,2 +66,2 @@\n-     * Executes the SQL query in this <code>PreparedStatement<\/code> object\n-     * and returns the <code>ResultSet<\/code> object generated by the query.\n+     * Executes the SQL query in this {@code PreparedStatement} object\n+     * and returns the {@code ResultSet} object generated by the query.\n@@ -69,2 +69,2 @@\n-     * @return a <code>ResultSet<\/code> object that contains the data produced by the\n-     *         query; never <code>null<\/code>\n+     * @return a {@code ResultSet} object that contains the data produced by the\n+     *         query; never {@code null}\n@@ -82,3 +82,3 @@\n-     * Executes the SQL statement in this <code>PreparedStatement<\/code> object,\n-     * which must be an SQL Data Manipulation Language (DML) statement, such as <code>INSERT<\/code>, <code>UPDATE<\/code> or\n-     * <code>DELETE<\/code>; or an SQL statement that returns nothing,\n+     * Executes the SQL statement in this {@code PreparedStatement} object,\n+     * which must be an SQL Data Manipulation Language (DML) statement, such as {@code INSERT}, {@code UPDATE} or\n+     * {@code DELETE}; or an SQL statement that returns nothing,\n@@ -100,1 +100,1 @@\n-     * Sets the designated parameter to SQL <code>NULL<\/code>.\n+     * Sets the designated parameter to SQL {@code NULL}.\n@@ -105,1 +105,1 @@\n-     * @param sqlType the SQL type code defined in <code>java.sql.Types<\/code>\n+     * @param sqlType the SQL type code defined in {@code java.sql.Types}\n@@ -120,1 +120,1 @@\n-     * Sets the designated parameter to the given Java <code>boolean<\/code> value.\n+     * Sets the designated parameter to the given Java {@code boolean} value.\n@@ -122,1 +122,1 @@\n-     * to an SQL <code>BIT<\/code> or <code>BOOLEAN<\/code> value when it sends it to the database.\n+     * to an SQL {@code BIT} or {@code BOOLEAN} value when it sends it to the database.\n@@ -134,1 +134,1 @@\n-     * Sets the designated parameter to the given Java <code>byte<\/code> value.\n+     * Sets the designated parameter to the given Java {@code byte} value.\n@@ -136,1 +136,1 @@\n-     * to an SQL <code>TINYINT<\/code> value when it sends it to the database.\n+     * to an SQL {@code TINYINT} value when it sends it to the database.\n@@ -147,1 +147,1 @@\n-     * Sets the designated parameter to the given Java <code>short<\/code> value.\n+     * Sets the designated parameter to the given Java {@code short} value.\n@@ -149,1 +149,1 @@\n-     * to an SQL <code>SMALLINT<\/code> value when it sends it to the database.\n+     * to an SQL {@code SMALLINT} value when it sends it to the database.\n@@ -160,1 +160,1 @@\n-     * Sets the designated parameter to the given Java <code>int<\/code> value.\n+     * Sets the designated parameter to the given Java {@code int} value.\n@@ -162,1 +162,1 @@\n-     * to an SQL <code>INTEGER<\/code> value when it sends it to the database.\n+     * to an SQL {@code INTEGER} value when it sends it to the database.\n@@ -173,1 +173,1 @@\n-     * Sets the designated parameter to the given Java <code>long<\/code> value.\n+     * Sets the designated parameter to the given Java {@code long} value.\n@@ -175,1 +175,1 @@\n-     * to an SQL <code>BIGINT<\/code> value when it sends it to the database.\n+     * to an SQL {@code BIGINT} value when it sends it to the database.\n@@ -186,1 +186,1 @@\n-     * Sets the designated parameter to the given Java <code>float<\/code> value.\n+     * Sets the designated parameter to the given Java {@code float} value.\n@@ -188,1 +188,1 @@\n-     * to an SQL <code>REAL<\/code> value when it sends it to the database.\n+     * to an SQL {@code REAL} value when it sends it to the database.\n@@ -199,1 +199,1 @@\n-     * Sets the designated parameter to the given Java <code>double<\/code> value.\n+     * Sets the designated parameter to the given Java {@code double} value.\n@@ -201,1 +201,1 @@\n-     * to an SQL <code>DOUBLE<\/code> value when it sends it to the database.\n+     * to an SQL {@code DOUBLE} value when it sends it to the database.\n@@ -212,2 +212,2 @@\n-     * Sets the designated parameter to the given <code>java.math.BigDecimal<\/code> value.\n-     * The driver converts this to an SQL <code>NUMERIC<\/code> value when\n+     * Sets the designated parameter to the given {@code java.math.BigDecimal} value.\n+     * The driver converts this to an SQL {@code NUMERIC} value when\n@@ -225,1 +225,1 @@\n-     * Sets the designated parameter to the given Java <code>String<\/code> value.\n+     * Sets the designated parameter to the given Java {@code String} value.\n@@ -227,1 +227,1 @@\n-     * to an SQL <code>VARCHAR<\/code> or <code>LONGVARCHAR<\/code> value\n+     * to an SQL {@code VARCHAR} or {@code LONGVARCHAR} value\n@@ -229,1 +229,1 @@\n-     * size relative to the driver's limits on <code>VARCHAR<\/code> values)\n+     * size relative to the driver's limits on {@code VARCHAR} values)\n@@ -242,1 +242,1 @@\n-     * this to an SQL <code>VARBINARY<\/code> or <code>LONGVARBINARY<\/code>\n+     * this to an SQL {@code VARBINARY} or {@code LONGVARBINARY}\n@@ -244,1 +244,1 @@\n-     * <code>VARBINARY<\/code> values) when it sends it to the database.\n+     * {@code VARBINARY} values) when it sends it to the database.\n@@ -255,1 +255,1 @@\n-     * Sets the designated parameter to the given <code>java.sql.Date<\/code> value\n+     * Sets the designated parameter to the given {@code java.sql.Date} value\n@@ -259,1 +259,1 @@\n-     * to an SQL <code>DATE<\/code> value when it sends it to the database.\n+     * to an SQL {@code DATE} value when it sends it to the database.\n@@ -271,1 +271,1 @@\n-     * Sets the designated parameter to the given <code>java.sql.Time<\/code> value.\n+     * Sets the designated parameter to the given {@code java.sql.Time} value.\n@@ -273,1 +273,1 @@\n-     * to an SQL <code>TIME<\/code> value when it sends it to the database.\n+     * to an SQL {@code TIME} value when it sends it to the database.\n@@ -285,1 +285,1 @@\n-     * Sets the designated parameter to the given <code>java.sql.Timestamp<\/code> value.\n+     * Sets the designated parameter to the given {@code java.sql.Timestamp} value.\n@@ -287,1 +287,1 @@\n-     * converts this to an SQL <code>TIMESTAMP<\/code> value when it sends it to the\n+     * converts this to an SQL {@code TIMESTAMP} value when it sends it to the\n@@ -301,1 +301,1 @@\n-     * When a very large ASCII value is input to a <code>LONGVARCHAR<\/code>\n+     * When a very large ASCII value is input to a {@code LONGVARCHAR}\n@@ -303,1 +303,1 @@\n-     * <code>java.io.InputStream<\/code>. Data will be read from the stream\n+     * {@code java.io.InputStream}. Data will be read from the stream\n@@ -325,1 +325,1 @@\n-     * When a very large Unicode value is input to a <code>LONGVARCHAR<\/code>\n+     * When a very large Unicode value is input to a {@code LONGVARCHAR}\n@@ -327,1 +327,1 @@\n-     * <code>java.io.InputStream<\/code> object. The data will be read from the\n+     * {@code java.io.InputStream} object. The data will be read from the\n@@ -339,1 +339,1 @@\n-     * @param x a <code>java.io.InputStream<\/code> object that contains the\n+     * @param x a {@code java.io.InputStream} object that contains the\n@@ -356,1 +356,1 @@\n-     * When a very large binary value is input to a <code>LONGVARBINARY<\/code>\n+     * When a very large binary value is input to a {@code LONGVARBINARY}\n@@ -358,1 +358,1 @@\n-     * <code>java.io.InputStream<\/code> object. The data will be read from the\n+     * {@code java.io.InputStream} object. The data will be read from the\n@@ -381,1 +381,1 @@\n-     * be done by calling the method <code>clearParameters<\/code>.\n+     * be done by calling the method {@code clearParameters}.\n@@ -416,1 +416,1 @@\n-     * Java <code>Object<\/code> types to SQL types.  The given argument\n+     * Java {@code Object} types to SQL types.  The given argument\n@@ -424,2 +424,2 @@\n-     * If the object is of a class implementing the interface <code>SQLData<\/code>,\n-     * the JDBC driver should call the method <code>SQLData.writeSQL<\/code>\n+     * If the object is of a class implementing the interface {@code SQLData},\n+     * the JDBC driver should call the method {@code SQLData.writeSQL}\n@@ -428,3 +428,3 @@\n-     * <code>Ref<\/code>, <code>Blob<\/code>, <code>Clob<\/code>,  <code>NClob<\/code>,\n-     *  <code>Struct<\/code>, <code>java.net.URL<\/code>, <code>RowId<\/code>, <code>SQLXML<\/code>\n-     * or <code>Array<\/code>, the driver should pass it to the database as a\n+     * {@code Ref}, {@code Blob}, {@code Clob},  {@code NClob},\n+     *  {@code Struct}, {@code java.net.URL}, {@code RowId}, {@code SQLXML}\n+     * or {@code Array}, the driver should pass it to the database as a\n@@ -434,2 +434,2 @@\n-     * the backend. For maximum portability, the <code>setNull<\/code> or the\n-     * <code>setObject(int parameterIndex, Object x, int sqlType)<\/code>\n+     * the backend. For maximum portability, the {@code setNull} or the\n+     * {@code setObject(int parameterIndex, Object x, int sqlType)}\n@@ -437,1 +437,1 @@\n-     * instead of <code>setObject(int parameterIndex, Object x)<\/code>.\n+     * instead of {@code setObject(int parameterIndex, Object x)}.\n@@ -452,1 +452,1 @@\n-     * Executes the SQL statement in this <code>PreparedStatement<\/code> object,\n+     * Executes the SQL statement in this {@code PreparedStatement} object,\n@@ -454,1 +454,1 @@\n-     * Some prepared statements return multiple results; the <code>execute<\/code>\n+     * Some prepared statements return multiple results; the {@code execute}\n@@ -456,2 +456,2 @@\n-     * form of statements handled by the methods <code>executeQuery<\/code>\n-     * and <code>executeUpdate<\/code>.\n+     * form of statements handled by the methods {@code executeQuery}\n+     * and {@code executeUpdate}.\n@@ -459,1 +459,1 @@\n-     * The <code>execute<\/code> method returns a <code>boolean<\/code> to\n+     * The {@code execute} method returns a {@code boolean} to\n@@ -461,2 +461,2 @@\n-     * <code>getResultSet<\/code> or <code>getUpdateCount<\/code>\n-     * to retrieve the result; you must call <code>getMoreResults<\/code> to\n+     * {@code getResultSet} or {@code getUpdateCount}\n+     * to retrieve the result; you must call {@code getMoreResults} to\n@@ -465,2 +465,2 @@\n-     * @return <code>true<\/code> if the first result is a <code>ResultSet<\/code>\n-     *         object; <code>false<\/code> if the first result is an update\n+     * @return {@code true} if the first result is a {@code ResultSet}\n+     *         object; {@code false} if the first result is an update\n@@ -486,1 +486,1 @@\n-     * Adds a set of parameters to this <code>PreparedStatement<\/code>\n+     * Adds a set of parameters to this {@code PreparedStatement}\n@@ -497,1 +497,1 @@\n-     * Sets the designated parameter to the given <code>Reader<\/code>\n+     * Sets the designated parameter to the given {@code Reader}\n@@ -499,1 +499,1 @@\n-     * When a very large UNICODE value is input to a <code>LONGVARCHAR<\/code>\n+     * When a very large UNICODE value is input to a {@code LONGVARCHAR}\n@@ -501,1 +501,1 @@\n-     * <code>java.io.Reader<\/code> object. The data will be read from the stream\n+     * {@code java.io.Reader} object. The data will be read from the stream\n@@ -510,1 +510,1 @@\n-     * @param reader the <code>java.io.Reader<\/code> object that contains the\n+     * @param reader the {@code java.io.Reader} object that contains the\n@@ -524,2 +524,2 @@\n-     *  <code>REF(&lt;structured-type&gt;)<\/code> value.\n-     * The driver converts this to an SQL <code>REF<\/code> value when it\n+     *  {@code REF(<structured-type>)} value.\n+     * The driver converts this to an SQL {@code REF} value when it\n@@ -529,1 +529,1 @@\n-     * @param x an SQL <code>REF<\/code> value\n+     * @param x an SQL {@code REF} value\n@@ -539,2 +539,2 @@\n-     * Sets the designated parameter to the given <code>java.sql.Blob<\/code> object.\n-     * The driver converts this to an SQL <code>BLOB<\/code> value when it\n+     * Sets the designated parameter to the given {@code java.sql.Blob} object.\n+     * The driver converts this to an SQL {@code BLOB} value when it\n@@ -544,1 +544,1 @@\n-     * @param x a <code>Blob<\/code> object that maps an SQL <code>BLOB<\/code> value\n+     * @param x a {@code Blob} object that maps an SQL {@code BLOB} value\n@@ -554,2 +554,2 @@\n-     * Sets the designated parameter to the given <code>java.sql.Clob<\/code> object.\n-     * The driver converts this to an SQL <code>CLOB<\/code> value when it\n+     * Sets the designated parameter to the given {@code java.sql.Clob} object.\n+     * The driver converts this to an SQL {@code CLOB} value when it\n@@ -559,1 +559,1 @@\n-     * @param x a <code>Clob<\/code> object that maps an SQL <code>CLOB<\/code> value\n+     * @param x a {@code Clob} object that maps an SQL {@code CLOB} value\n@@ -569,2 +569,2 @@\n-     * Sets the designated parameter to the given <code>java.sql.Array<\/code> object.\n-     * The driver converts this to an SQL <code>ARRAY<\/code> value when it\n+     * Sets the designated parameter to the given {@code java.sql.Array} object.\n+     * The driver converts this to an SQL {@code ARRAY} value when it\n@@ -574,1 +574,1 @@\n-     * @param x an <code>Array<\/code> object that maps an SQL <code>ARRAY<\/code> value\n+     * @param x an {@code Array} object that maps an SQL {@code ARRAY} value\n@@ -584,3 +584,3 @@\n-     * Retrieves a <code>ResultSetMetaData<\/code> object that contains\n-     * information about the columns of the <code>ResultSet<\/code> object\n-     * that will be returned when this <code>PreparedStatement<\/code> object\n+     * Retrieves a {@code ResultSetMetaData} object that contains\n+     * information about the columns of the {@code ResultSet} object\n+     * that will be returned when this {@code PreparedStatement} object\n@@ -589,2 +589,2 @@\n-     * Because a <code>PreparedStatement<\/code> object is precompiled, it is\n-     * possible to know about the <code>ResultSet<\/code> object that it will\n+     * Because a {@code PreparedStatement} object is precompiled, it is\n+     * possible to know about the {@code ResultSet} object that it will\n@@ -592,4 +592,4 @@\n-     * to invoke the method <code>getMetaData<\/code> on a\n-     * <code>PreparedStatement<\/code> object rather than waiting to execute\n-     * it and then invoking the <code>ResultSet.getMetaData<\/code> method\n-     * on the <code>ResultSet<\/code> object that is returned.\n+     * to invoke the method {@code getMetaData} on a\n+     * {@code PreparedStatement} object rather than waiting to execute\n+     * it and then invoking the {@code ResultSet.getMetaData} method\n+     * on the {@code ResultSet} object that is returned.\n@@ -600,3 +600,3 @@\n-     * @return the description of a <code>ResultSet<\/code> object's columns or\n-     *         <code>null<\/code> if the driver cannot return a\n-     *         <code>ResultSetMetaData<\/code> object\n+     * @return the description of a {@code ResultSet} object's columns or\n+     *         {@code null} if the driver cannot return a\n+     *         {@code ResultSetMetaData} object\n@@ -612,3 +612,3 @@\n-     * Sets the designated parameter to the given <code>java.sql.Date<\/code> value,\n-     * using the given <code>Calendar<\/code> object.  The driver uses\n-     * the <code>Calendar<\/code> object to construct an SQL <code>DATE<\/code> value,\n+     * Sets the designated parameter to the given {@code java.sql.Date} value,\n+     * using the given {@code Calendar} object.  The driver uses\n+     * the {@code Calendar} object to construct an SQL {@code DATE} value,\n@@ -616,1 +616,1 @@\n-     * a <code>Calendar<\/code> object, the driver can calculate the date\n+     * a {@code Calendar} object, the driver can calculate the date\n@@ -618,1 +618,1 @@\n-     * <code>Calendar<\/code> object is specified, the driver uses the default\n+     * {@code Calendar} object is specified, the driver uses the default\n@@ -623,1 +623,1 @@\n-     * @param cal the <code>Calendar<\/code> object the driver will use\n+     * @param cal the {@code Calendar} object the driver will use\n@@ -634,3 +634,3 @@\n-     * Sets the designated parameter to the given <code>java.sql.Time<\/code> value,\n-     * using the given <code>Calendar<\/code> object.  The driver uses\n-     * the <code>Calendar<\/code> object to construct an SQL <code>TIME<\/code> value,\n+     * Sets the designated parameter to the given {@code java.sql.Time} value,\n+     * using the given {@code Calendar} object.  The driver uses\n+     * the {@code Calendar} object to construct an SQL {@code TIME} value,\n@@ -638,1 +638,1 @@\n-     * a <code>Calendar<\/code> object, the driver can calculate the time\n+     * a {@code Calendar} object, the driver can calculate the time\n@@ -640,1 +640,1 @@\n-     * <code>Calendar<\/code> object is specified, the driver uses the default\n+     * {@code Calendar} object is specified, the driver uses the default\n@@ -645,1 +645,1 @@\n-     * @param cal the <code>Calendar<\/code> object the driver will use\n+     * @param cal the {@code Calendar} object the driver will use\n@@ -656,3 +656,3 @@\n-     * Sets the designated parameter to the given <code>java.sql.Timestamp<\/code> value,\n-     * using the given <code>Calendar<\/code> object.  The driver uses\n-     * the <code>Calendar<\/code> object to construct an SQL <code>TIMESTAMP<\/code> value,\n+     * Sets the designated parameter to the given {@code java.sql.Timestamp} value,\n+     * using the given {@code Calendar} object.  The driver uses\n+     * the {@code Calendar} object to construct an SQL {@code TIMESTAMP} value,\n@@ -660,1 +660,1 @@\n-     *  <code>Calendar<\/code> object, the driver can calculate the timestamp\n+     *  {@code Calendar} object, the driver can calculate the timestamp\n@@ -662,1 +662,1 @@\n-     * <code>Calendar<\/code> object is specified, the driver uses the default\n+     * {@code Calendar} object is specified, the driver uses the default\n@@ -667,1 +667,1 @@\n-     * @param cal the <code>Calendar<\/code> object the driver will use\n+     * @param cal the {@code Calendar} object the driver will use\n@@ -678,2 +678,2 @@\n-     * Sets the designated parameter to SQL <code>NULL<\/code>.\n-     * This version of the method <code>setNull<\/code> should\n+     * Sets the designated parameter to SQL {@code NULL}.\n+     * This version of the method {@code setNull} should\n@@ -699,1 +699,1 @@\n-     * @param sqlType a value from <code>java.sql.Types<\/code>\n+     * @param sqlType a value from {@code java.sql.Types}\n@@ -720,2 +720,2 @@\n-     * Sets the designated parameter to the given <code>java.net.URL<\/code> value.\n-     * The driver converts this to an SQL <code>DATALINK<\/code> value\n+     * Sets the designated parameter to the given {@code java.net.URL} value.\n+     * The driver converts this to an SQL {@code DATALINK} value\n@@ -725,1 +725,1 @@\n-     * @param x the <code>java.net.URL<\/code> object to be set\n+     * @param x the {@code java.net.URL} object to be set\n@@ -736,1 +736,1 @@\n-     * <code>PreparedStatement<\/code> object's parameters.\n+     * {@code PreparedStatement} object's parameters.\n@@ -738,1 +738,1 @@\n-     * @return a <code>ParameterMetaData<\/code> object that contains information\n+     * @return a {@code ParameterMetaData} object that contains information\n@@ -740,1 +740,1 @@\n-     *  parameter marker of this <code>PreparedStatement<\/code> object\n+     *  parameter marker of this {@code PreparedStatement} object\n@@ -751,2 +751,2 @@\n-     * Sets the designated parameter to the given <code>java.sql.RowId<\/code> object. The\n-     * driver converts this to a SQL <code>ROWID<\/code> value when it sends it\n+     * Sets the designated parameter to the given {@code java.sql.RowId} object. The\n+     * driver converts this to a SQL {@code ROWID} value when it sends it\n@@ -759,1 +759,1 @@\n-     * this method is called on a closed <code>PreparedStatement<\/code>\n+     * this method is called on a closed {@code PreparedStatement}\n@@ -768,3 +768,3 @@\n-     * Sets the designated parameter to the given <code>String<\/code> object.\n-     * The driver converts this to a SQL <code>NCHAR<\/code> or\n-     * <code>NVARCHAR<\/code> or <code>LONGNVARCHAR<\/code> value\n+     * Sets the designated parameter to the given {@code String} object.\n+     * The driver converts this to a SQL {@code NCHAR} or\n+     * {@code NVARCHAR} or {@code LONGNVARCHAR} value\n@@ -772,1 +772,1 @@\n-     * size relative to the driver's limits on <code>NVARCHAR<\/code> values)\n+     * size relative to the driver's limits on {@code NVARCHAR} values)\n@@ -781,1 +781,1 @@\n-     * this method is called on a closed <code>PreparedStatement<\/code>\n+     * this method is called on a closed {@code PreparedStatement}\n@@ -788,2 +788,2 @@\n-     * Sets the designated parameter to a <code>Reader<\/code> object. The\n-     * <code>Reader<\/code> reads the data till end-of-file is reached. The\n+     * Sets the designated parameter to a {@code Reader} object. The\n+     * {@code Reader} reads the data till end-of-file is reached. The\n@@ -799,1 +799,1 @@\n-     * this method is called on a closed <code>PreparedStatement<\/code>\n+     * this method is called on a closed {@code PreparedStatement}\n@@ -806,2 +806,2 @@\n-     * Sets the designated parameter to a <code>java.sql.NClob<\/code> object. The driver converts this to a\n-     * SQL <code>NCLOB<\/code> value when it sends it to the database.\n+     * Sets the designated parameter to a {@code java.sql.NClob} object. The driver converts this to a\n+     * SQL {@code NCLOB} value when it sends it to the database.\n@@ -814,1 +814,1 @@\n-     * this method is called on a closed <code>PreparedStatement<\/code>\n+     * this method is called on a closed {@code PreparedStatement}\n@@ -821,4 +821,4 @@\n-     * Sets the designated parameter to a <code>Reader<\/code> object.  The reader must contain  the number\n-     * of characters specified by length otherwise a <code>SQLException<\/code> will be\n-     * generated when the <code>PreparedStatement<\/code> is executed.\n-     *This method differs from the <code>setCharacterStream (int, Reader, int)<\/code> method\n+     * Sets the designated parameter to a {@code Reader} object.  The reader must contain  the number\n+     * of characters specified by length otherwise a {@code SQLException} will be\n+     * generated when the {@code PreparedStatement} is executed.\n+     *This method differs from the {@code setCharacterStream (int, Reader, int)} method\n@@ -826,1 +826,1 @@\n-     * the server as a <code>CLOB<\/code>.  When the <code>setCharacterStream<\/code> method is used, the\n+     * the server as a {@code CLOB}.  When the {@code setCharacterStream} method is used, the\n@@ -828,1 +828,1 @@\n-     * data should be sent to the server as a <code>LONGVARCHAR<\/code> or a <code>CLOB<\/code>\n+     * data should be sent to the server as a {@code LONGVARCHAR} or a {@code CLOB}\n@@ -834,1 +834,1 @@\n-     * a closed <code>PreparedStatement<\/code> or if the length specified is less than zero.\n+     * a closed {@code PreparedStatement} or if the length specified is less than zero.\n@@ -843,1 +843,1 @@\n-     * Sets the designated parameter to a <code>InputStream<\/code> object.\n+     * Sets the designated parameter to a {@code InputStream} object.\n@@ -845,3 +845,3 @@\n-     * of characters specified by length otherwise a <code>SQLException<\/code> will be\n-     * generated when the <code>PreparedStatement<\/code> is executed.\n-     * This method differs from the <code>setBinaryStream (int, InputStream, int)<\/code>\n+     * of characters specified by length otherwise a {@code SQLException} will be\n+     * generated when the {@code PreparedStatement} is executed.\n+     * This method differs from the {@code setBinaryStream (int, InputStream, int)}\n@@ -849,1 +849,1 @@\n-     * sent to the server as a <code>BLOB<\/code>.  When the <code>setBinaryStream<\/code> method is used,\n+     * sent to the server as a {@code BLOB}.  When the {@code setBinaryStream} method is used,\n@@ -851,1 +851,1 @@\n-     * data should be sent to the server as a <code>LONGVARBINARY<\/code> or a <code>BLOB<\/code>\n+     * data should be sent to the server as a {@code LONGVARBINARY} or a {@code BLOB}\n@@ -859,1 +859,1 @@\n-     * this method is called on a closed <code>PreparedStatement<\/code>;\n+     * this method is called on a closed {@code PreparedStatement};\n@@ -870,4 +870,4 @@\n-     * Sets the designated parameter to a <code>Reader<\/code> object.  The reader must contain  the number\n-     * of characters specified by length otherwise a <code>SQLException<\/code> will be\n-     * generated when the <code>PreparedStatement<\/code> is executed.\n-     * This method differs from the <code>setCharacterStream (int, Reader, int)<\/code> method\n+     * Sets the designated parameter to a {@code Reader} object.  The reader must contain  the number\n+     * of characters specified by length otherwise a {@code SQLException} will be\n+     * generated when the {@code PreparedStatement} is executed.\n+     * This method differs from the {@code setCharacterStream (int, Reader, int)} method\n@@ -875,1 +875,1 @@\n-     * the server as a <code>NCLOB<\/code>.  When the <code>setCharacterStream<\/code> method is used, the\n+     * the server as a {@code NCLOB}.  When the {@code setCharacterStream} method is used, the\n@@ -877,1 +877,1 @@\n-     * data should be sent to the server as a <code>LONGNVARCHAR<\/code> or a <code>NCLOB<\/code>\n+     * data should be sent to the server as a {@code LONGNVARCHAR} or a {@code NCLOB}\n@@ -886,1 +886,1 @@\n-     * this method is called on a closed <code>PreparedStatement<\/code>\n+     * this method is called on a closed {@code PreparedStatement}\n@@ -895,1 +895,1 @@\n-      * Sets the designated parameter to the given <code>java.sql.SQLXML<\/code> object.\n+      * Sets the designated parameter to the given {@code java.sql.SQLXML} object.\n@@ -897,1 +897,1 @@\n-      * SQL <code>XML<\/code> value when it sends it to the database.\n+      * SQL {@code XML} value when it sends it to the database.\n@@ -900,1 +900,1 @@\n-      * @param xmlObject a <code>SQLXML<\/code> object that maps an SQL <code>XML<\/code> value\n+      * @param xmlObject a {@code SQLXML} object that maps an SQL {@code XML} value\n@@ -903,4 +903,4 @@\n-      *  this method is called on a closed <code>PreparedStatement<\/code>\n-      * or the <code>java.xml.transform.Result<\/code>,\n-      *  <code>Writer<\/code> or <code>OutputStream<\/code> has not been closed for\n-      * the <code>SQLXML<\/code> object\n+      *  this method is called on a closed {@code PreparedStatement}\n+      * or the {@code java.xml.transform.Result},\n+      *  {@code Writer} or {@code OutputStream} has not been closed for\n+      * the {@code SQLXML} object\n@@ -916,1 +916,1 @@\n-     * If the second argument is an <code>InputStream<\/code> then the stream must contain\n+     * If the second argument is an {@code InputStream} then the stream must contain\n@@ -918,1 +918,1 @@\n-     * <code>Reader<\/code> then the reader must contain the number of characters specified\n+     * {@code Reader} then the reader must contain the number of characters specified\n@@ -920,1 +920,1 @@\n-     * <code>SQLException<\/code> when the prepared statement is executed.\n+     * {@code SQLException} when the prepared statement is executed.\n@@ -926,2 +926,2 @@\n-     * interface <code>SQLData<\/code>),\n-     * the JDBC driver should call the method <code>SQLData.writeSQL<\/code> to\n+     * interface {@code SQLData}),\n+     * the JDBC driver should call the method {@code SQLData.writeSQL} to\n@@ -930,3 +930,3 @@\n-     * <code>Ref<\/code>, <code>Blob<\/code>, <code>Clob<\/code>,  <code>NClob<\/code>,\n-     *  <code>Struct<\/code>, <code>java.net.URL<\/code>,\n-     * or <code>Array<\/code>, the driver should pass it to the database as a\n+     * {@code Ref}, {@code Blob}, {@code Clob},  {@code NClob},\n+     *  {@code Struct}, {@code java.net.URL},\n+     * or {@code Array}, the driver should pass it to the database as a\n@@ -942,2 +942,2 @@\n-     * @param scaleOrLength for <code>java.sql.Types.DECIMAL<\/code>\n-     *          or <code>java.sql.Types.NUMERIC types<\/code>,\n+     * @param scaleOrLength for {@code java.sql.Types.DECIMAL}\n+     *          or {@code java.sql.Types.NUMERIC types},\n@@ -945,1 +945,1 @@\n-     *          Java Object types <code>InputStream<\/code> and <code>Reader<\/code>,\n+     *          Java Object types {@code InputStream} and {@code Reader},\n@@ -965,1 +965,1 @@\n-     * When a very large ASCII value is input to a <code>LONGVARCHAR<\/code>\n+     * When a very large ASCII value is input to a {@code LONGVARCHAR}\n@@ -967,1 +967,1 @@\n-     * <code>java.io.InputStream<\/code>. Data will be read from the stream\n+     * {@code java.io.InputStream}. Data will be read from the stream\n@@ -988,1 +988,1 @@\n-     * When a very large binary value is input to a <code>LONGVARBINARY<\/code>\n+     * When a very large binary value is input to a {@code LONGVARBINARY}\n@@ -990,1 +990,1 @@\n-     * <code>java.io.InputStream<\/code> object. The data will be read from the\n+     * {@code java.io.InputStream} object. The data will be read from the\n@@ -1008,1 +1008,1 @@\n-     * Sets the designated parameter to the given <code>Reader<\/code>\n+     * Sets the designated parameter to the given {@code Reader}\n@@ -1010,1 +1010,1 @@\n-     * When a very large UNICODE value is input to a <code>LONGVARCHAR<\/code>\n+     * When a very large UNICODE value is input to a {@code LONGVARCHAR}\n@@ -1012,1 +1012,1 @@\n-     * <code>java.io.Reader<\/code> object. The data will be read from the stream\n+     * {@code java.io.Reader} object. The data will be read from the stream\n@@ -1021,1 +1021,1 @@\n-     * @param reader the <code>java.io.Reader<\/code> object that contains the\n+     * @param reader the {@code java.io.Reader} object that contains the\n@@ -1035,1 +1035,1 @@\n-     * When a very large ASCII value is input to a <code>LONGVARCHAR<\/code>\n+     * When a very large ASCII value is input to a {@code LONGVARCHAR}\n@@ -1037,1 +1037,1 @@\n-     * <code>java.io.InputStream<\/code>. Data will be read from the stream\n+     * {@code java.io.InputStream}. Data will be read from the stream\n@@ -1046,1 +1046,1 @@\n-     * <code>setAsciiStream<\/code> which takes a length parameter.\n+     * {@code setAsciiStream} which takes a length parameter.\n@@ -1060,1 +1060,1 @@\n-     * When a very large binary value is input to a <code>LONGVARBINARY<\/code>\n+     * When a very large binary value is input to a {@code LONGVARBINARY}\n@@ -1062,1 +1062,1 @@\n-     * <code>java.io.InputStream<\/code> object. The data will be read from the\n+     * {@code java.io.InputStream} object. The data will be read from the\n@@ -1070,1 +1070,1 @@\n-     * <code>setBinaryStream<\/code> which takes a length parameter.\n+     * {@code setBinaryStream} which takes a length parameter.\n@@ -1083,1 +1083,1 @@\n-     * Sets the designated parameter to the given <code>Reader<\/code>\n+     * Sets the designated parameter to the given {@code Reader}\n@@ -1085,1 +1085,1 @@\n-     * When a very large UNICODE value is input to a <code>LONGVARCHAR<\/code>\n+     * When a very large UNICODE value is input to a {@code LONGVARCHAR}\n@@ -1087,1 +1087,1 @@\n-     * <code>java.io.Reader<\/code> object. The data will be read from the stream\n+     * {@code java.io.Reader} object. The data will be read from the stream\n@@ -1096,1 +1096,1 @@\n-     * <code>setCharacterStream<\/code> which takes a length parameter.\n+     * {@code setCharacterStream} which takes a length parameter.\n@@ -1099,1 +1099,1 @@\n-     * @param reader the <code>java.io.Reader<\/code> object that contains the\n+     * @param reader the {@code java.io.Reader} object that contains the\n@@ -1110,2 +1110,2 @@\n-     * Sets the designated parameter to a <code>Reader<\/code> object. The\n-     * <code>Reader<\/code> reads the data till end-of-file is reached. The\n+     * Sets the designated parameter to a {@code Reader} object. The\n+     * {@code Reader} reads the data till end-of-file is reached. The\n@@ -1120,1 +1120,1 @@\n-     * <code>setNCharacterStream<\/code> which takes a length parameter.\n+     * {@code setNCharacterStream} which takes a length parameter.\n@@ -1128,1 +1128,1 @@\n-     * this method is called on a closed <code>PreparedStatement<\/code>\n+     * this method is called on a closed {@code PreparedStatement}\n@@ -1135,2 +1135,2 @@\n-     * Sets the designated parameter to a <code>Reader<\/code> object.\n-     * This method differs from the <code>setCharacterStream (int, Reader)<\/code> method\n+     * Sets the designated parameter to a {@code Reader} object.\n+     * This method differs from the {@code setCharacterStream (int, Reader)} method\n@@ -1138,1 +1138,1 @@\n-     * the server as a <code>CLOB<\/code>.  When the <code>setCharacterStream<\/code> method is used, the\n+     * the server as a {@code CLOB}.  When the {@code setCharacterStream} method is used, the\n@@ -1140,1 +1140,1 @@\n-     * data should be sent to the server as a <code>LONGVARCHAR<\/code> or a <code>CLOB<\/code>\n+     * data should be sent to the server as a {@code LONGVARCHAR} or a {@code CLOB}\n@@ -1144,1 +1144,1 @@\n-     * <code>setClob<\/code> which takes a length parameter.\n+     * {@code setClob} which takes a length parameter.\n@@ -1150,1 +1150,1 @@\n-     * a closed <code>PreparedStatement<\/code>or if parameterIndex does not correspond to a parameter\n+     * a closed {@code PreparedStatement}or if parameterIndex does not correspond to a parameter\n@@ -1160,2 +1160,2 @@\n-     * Sets the designated parameter to a <code>InputStream<\/code> object.\n-     * This method differs from the <code>setBinaryStream (int, InputStream)<\/code>\n+     * Sets the designated parameter to a {@code InputStream} object.\n+     * This method differs from the {@code setBinaryStream (int, InputStream)}\n@@ -1163,1 +1163,1 @@\n-     * sent to the server as a <code>BLOB<\/code>.  When the <code>setBinaryStream<\/code> method is used,\n+     * sent to the server as a {@code BLOB}.  When the {@code setBinaryStream} method is used,\n@@ -1165,1 +1165,1 @@\n-     * data should be sent to the server as a <code>LONGVARBINARY<\/code> or a <code>BLOB<\/code>\n+     * data should be sent to the server as a {@code LONGVARBINARY} or a {@code BLOB}\n@@ -1169,1 +1169,1 @@\n-     * <code>setBlob<\/code> which takes a length parameter.\n+     * {@code setBlob} which takes a length parameter.\n@@ -1177,1 +1177,1 @@\n-     * this method is called on a closed <code>PreparedStatement<\/code> or\n+     * this method is called on a closed {@code PreparedStatement} or\n@@ -1187,2 +1187,2 @@\n-     * Sets the designated parameter to a <code>Reader<\/code> object.\n-     * This method differs from the <code>setCharacterStream (int, Reader)<\/code> method\n+     * Sets the designated parameter to a {@code Reader} object.\n+     * This method differs from the {@code setCharacterStream (int, Reader)} method\n@@ -1190,1 +1190,1 @@\n-     * the server as a <code>NCLOB<\/code>.  When the <code>setCharacterStream<\/code> method is used, the\n+     * the server as a {@code NCLOB}.  When the {@code setCharacterStream} method is used, the\n@@ -1192,1 +1192,1 @@\n-     * data should be sent to the server as a <code>LONGNVARCHAR<\/code> or a <code>NCLOB<\/code>\n+     * data should be sent to the server as a {@code LONGNVARCHAR} or a {@code NCLOB}\n@@ -1195,1 +1195,1 @@\n-     * <code>setNClob<\/code> which takes a length parameter.\n+     * {@code setNClob} which takes a length parameter.\n@@ -1204,1 +1204,1 @@\n-     * this method is called on a closed <code>PreparedStatement<\/code>\n+     * this method is called on a closed {@code PreparedStatement}\n@@ -1297,1 +1297,1 @@\n-     * Executes the SQL statement in this <code>PreparedStatement<\/code> object,\n+     * Executes the SQL statement in this {@code PreparedStatement} object,\n@@ -1299,2 +1299,2 @@\n-     * such as <code>INSERT<\/code>, <code>UPDATE<\/code> or\n-     * <code>DELETE<\/code>; or an SQL statement that returns nothing,\n+     * such as {@code INSERT}, {@code UPDATE} or\n+     * {@code DELETE}; or an SQL statement that returns nothing,\n","filename":"src\/java.sql\/share\/classes\/java\/sql\/PreparedStatement.java","additions":220,"deletions":220,"binary":false,"changes":440,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n- * The mapping in the Java programming language of an SQL <code>REF<\/code>\n+ * The mapping in the Java programming language of an SQL {@code REF}\n@@ -32,2 +32,2 @@\n- * SQL <code>REF<\/code> values are stored in a table that contains\n- * instances of a referenceable SQL structured type, and each <code>REF<\/code>\n+ * SQL {@code REF} values are stored in a table that contains\n+ * instances of a referenceable SQL structured type, and each {@code REF}\n@@ -35,1 +35,1 @@\n- * An SQL <code>REF<\/code> value may be used in place of the\n+ * An SQL {@code REF} value may be used in place of the\n@@ -39,4 +39,4 @@\n- * Because an SQL <code>REF<\/code> value is a logical pointer to an\n- * SQL structured type, a <code>Ref<\/code> object is by default also a logical\n- * pointer. Thus, retrieving an SQL <code>REF<\/code> value as\n- * a <code>Ref<\/code> object does not materialize\n+ * Because an SQL {@code REF} value is a logical pointer to an\n+ * SQL structured type, a {@code Ref} object is by default also a logical\n+ * pointer. Thus, retrieving an SQL {@code REF} value as\n+ * a {@code Ref} object does not materialize\n@@ -45,2 +45,2 @@\n- * A <code>Ref<\/code> object can be stored in the database using the\n- * <code>PreparedStatement.setRef<\/code> method.\n+ * A {@code Ref} object can be stored in the database using the\n+ * {@code PreparedStatement.setRef} method.\n@@ -48,1 +48,1 @@\n- * All methods on the <code>Ref<\/code> interface must be fully implemented if the\n+ * All methods on the {@code Ref} interface must be fully implemented if the\n@@ -58,1 +58,1 @@\n-     * this <code>Ref<\/code> object references.\n+     * this {@code Ref} object references.\n@@ -72,1 +72,1 @@\n-     * @param map a <code>java.util.Map<\/code> object that contains\n+     * @param map a {@code java.util.Map} object that contains\n@@ -75,1 +75,1 @@\n-     *        <code>SQLData<\/code> implementation to which the SQL\n+     *        {@code SQLData} implementation to which the SQL\n@@ -77,2 +77,2 @@\n-     * @return  a Java <code>Object<\/code> that is the custom mapping for\n-     *          the SQL structured type to which this <code>Ref<\/code>\n+     * @return  a Java {@code Object} that is the custom mapping for\n+     *          the SQL structured type to which this {@code Ref}\n@@ -91,1 +91,1 @@\n-     * this <code>Ref<\/code> object.  If the connection's type map has an entry\n+     * this {@code Ref} object.  If the connection's type map has an entry\n@@ -94,1 +94,1 @@\n-     * structured type instance will be mapped to a <code>Struct<\/code> object.\n+     * structured type instance will be mapped to a {@code Struct} object.\n@@ -96,2 +96,2 @@\n-     * @return  a Java <code>Object<\/code> that is the mapping for\n-     *          the SQL structured type to which this <code>Ref<\/code>\n+     * @return  a Java {@code Object} that is the mapping for\n+     *          the SQL structured type to which this {@code Ref}\n@@ -108,2 +108,2 @@\n-     * Sets the structured type value that this <code>Ref<\/code>\n-     * object references to the given instance of <code>Object<\/code>.\n+     * Sets the structured type value that this {@code Ref}\n+     * object references to the given instance of {@code Object}.\n@@ -113,1 +113,1 @@\n-     * @param value an <code>Object<\/code> representing the SQL\n+     * @param value an {@code Object} representing the SQL\n@@ -115,1 +115,1 @@\n-     *        <code>Ref<\/code> object will reference\n+     *        {@code Ref} object will reference\n","filename":"src\/java.sql\/share\/classes\/java\/sql\/Ref.java","additions":24,"deletions":24,"binary":false,"changes":48,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n- * <P>A <code>ResultSet<\/code> object  maintains a cursor pointing\n+ * <P>A {@code ResultSet} object  maintains a cursor pointing\n@@ -39,4 +39,4 @@\n- * before the first row. The <code>next<\/code> method moves the\n- * cursor to the next row, and because it returns <code>false<\/code>\n- * when there are no more rows in the <code>ResultSet<\/code> object,\n- * it can be used in a <code>while<\/code> loop to iterate through\n+ * before the first row. The {@code next} method moves the\n+ * cursor to the next row, and because it returns {@code false}\n+ * when there are no more rows in the {@code ResultSet} object,\n+ * it can be used in a {@code while} loop to iterate through\n@@ -45,1 +45,1 @@\n- * A default <code>ResultSet<\/code> object is not updatable and\n+ * A default {@code ResultSet} object is not updatable and\n@@ -49,3 +49,3 @@\n- * produce <code>ResultSet<\/code> objects that are scrollable and\/or\n- * updatable.  The following code fragment, in which <code>con<\/code>\n- * is a valid <code>Connection<\/code> object, illustrates how to make\n+ * produce {@code ResultSet} objects that are scrollable and\/or\n+ * updatable.  The following code fragment, in which {@code con}\n+ * is a valid {@code Connection} object, illustrates how to make\n@@ -53,1 +53,1 @@\n- * that is updatable. See <code>ResultSet<\/code> fields for other\n+ * that is updatable. See {@code ResultSet} fields for other\n@@ -65,2 +65,2 @@\n- * The <code>ResultSet<\/code> interface provides\n- * <i>getter<\/i> methods (<code>getBoolean<\/code>, <code>getLong<\/code>, and so on)\n+ * The {@code ResultSet} interface provides\n+ * <i>getter<\/i> methods ({@code getBoolean}, {@code getLong}, and so on)\n@@ -78,1 +78,1 @@\n- * that can be used by the <code>ResultSet<\/code> getter methods.\n+ * that can be used by the {@code ResultSet} getter methods.\n@@ -101,1 +101,1 @@\n- *     <code>ResultSet<\/code> object, the cursor can be moved backwards\n+ *     {@code ResultSet} object, the cursor can be moved backwards\n@@ -104,4 +104,4 @@\n- *     The following code fragment updates the <code>NAME<\/code> column\n- *     in the fifth row of the <code>ResultSet<\/code> object\n- *     <code>rs<\/code> and then uses the method <code>updateRow<\/code>\n- *     to update the data source table from which <code>rs<\/code> was derived.\n+ *     The following code fragment updates the {@code NAME} column\n+ *     in the fifth row of the {@code ResultSet} object\n+ *     {@code rs} and then uses the method {@code updateRow}\n+ *     to update the data source table from which {@code rs} was derived.\n@@ -112,1 +112,1 @@\n- *          \/\/ <code>NAME<\/code> column of row 5 to be <code>AINSWORTH<\/code>\n+ *          \/\/ {@code NAME} column of row 5 to be {@code AINSWORTH}\n@@ -117,1 +117,1 @@\n- *     <code>ResultSet<\/code> object has a special row associated with\n+ *     {@code ResultSet} object has a special row associated with\n@@ -120,2 +120,2 @@\n- *     a three-column row, and inserts it into <code>rs<\/code> and into\n- *     the data source table using the method <code>insertRow<\/code>.\n+ *     a three-column row, and inserts it into {@code rs} and into\n+ *     the data source table using the method {@code insertRow}.\n@@ -126,3 +126,3 @@\n- *          \/\/ first column of the insert row to be <code>AINSWORTH<\/code>\n- *       rs.updateInt(2,35); \/\/ updates the second column to be <code>35<\/code>\n- *       rs.updateBoolean(3, true); \/\/ updates the third column to <code>true<\/code>\n+ *          \/\/ first column of the insert row to be {@code AINSWORTH}\n+ *       rs.updateInt(2,35); \/\/ updates the second column to be {@code 35}\n+ *       rs.updateBoolean(3, true); \/\/ updates the third column to {@code true}\n@@ -134,2 +134,2 @@\n- * <P>A <code>ResultSet<\/code> object is automatically closed when the\n- * <code>Statement<\/code> object that\n+ * <P>A {@code ResultSet} object is automatically closed when the\n+ * {@code Statement} object that\n@@ -139,3 +139,3 @@\n- * <P>The number, types and properties of a <code>ResultSet<\/code>\n- * object's columns are provided by the <code>ResultSetMetaData<\/code>\n- * object returned by the <code>ResultSet.getMetaData<\/code> method.\n+ * <P>The number, types and properties of a {@code ResultSet}\n+ * object's columns are provided by the {@code ResultSetMetaData}\n+ * object returned by the {@code ResultSet.getMetaData} method.\n@@ -153,1 +153,1 @@\n-     * A <code>ResultSet<\/code> cursor is initially positioned\n+     * A {@code ResultSet} cursor is initially positioned\n@@ -155,1 +155,1 @@\n-     * <code>next<\/code> makes the first row the current row; the\n+     * {@code next} makes the first row the current row; the\n@@ -158,1 +158,1 @@\n-     * When a call to the <code>next<\/code> method returns <code>false<\/code>,\n+     * When a call to the {@code next} method returns {@code false},\n@@ -160,6 +160,6 @@\n-     * invocation of a <code>ResultSet<\/code> method which requires a\n-     * current row will result in a <code>SQLException<\/code> being thrown.\n-     *  If the result set type is <code>TYPE_FORWARD_ONLY<\/code>, it is vendor specified\n-     * whether their JDBC driver implementation will return <code>false<\/code> or\n-     *  throw an <code>SQLException<\/code> on a\n-     * subsequent call to <code>next<\/code>.\n+     * invocation of a {@code ResultSet} method which requires a\n+     * current row will result in a {@code SQLException} being thrown.\n+     *  If the result set type is {@code TYPE_FORWARD_ONLY}, it is vendor specified\n+     * whether their JDBC driver implementation will return {@code false} or\n+     *  throw an {@code SQLException} on a\n+     * subsequent call to {@code next}.\n@@ -168,2 +168,2 @@\n-     * to the method <code>next<\/code> will\n-     * implicitly close it. A <code>ResultSet<\/code> object's\n+     * to the method {@code next} will\n+     * implicitly close it. A {@code ResultSet} object's\n@@ -172,2 +172,2 @@\n-     * @return <code>true<\/code> if the new current row is valid;\n-     * <code>false<\/code> if there are no more rows\n+     * @return {@code true} if the new current row is valid;\n+     * {@code false} if there are no more rows\n@@ -181,1 +181,1 @@\n-     * Releases this <code>ResultSet<\/code> object's database and\n+     * Releases this {@code ResultSet} object's database and\n@@ -185,4 +185,4 @@\n-     * <P>The closing of a <code>ResultSet<\/code> object does <strong>not<\/strong> close the <code>Blob<\/code>,\n-     * <code>Clob<\/code> or <code>NClob<\/code> objects created by the <code>ResultSet<\/code>. <code>Blob<\/code>,\n-     * <code>Clob<\/code> or <code>NClob<\/code> objects remain valid for at least the duration of the\n-     * transaction in which they are created, unless their <code>free<\/code> method is invoked.\n+     * <P>The closing of a {@code ResultSet} object does <strong>not<\/strong> close the {@code Blob},\n+     * {@code Clob} or {@code NClob} objects created by the {@code ResultSet}. {@code Blob},\n+     * {@code Clob} or {@code NClob} objects remain valid for at least the duration of the\n+     * transaction in which they are created, unless their {@code free} method is invoked.\n@@ -190,2 +190,2 @@\n-     * When a <code>ResultSet<\/code> is closed, any <code>ResultSetMetaData<\/code>\n-     * instances that were created by calling the  <code>getMetaData<\/code>\n+     * When a {@code ResultSet} is closed, any {@code ResultSetMetaData}\n+     * instances that were created by calling the  {@code getMetaData}\n@@ -194,1 +194,1 @@\n-     * <P><B>Note:<\/B> A <code>ResultSet<\/code> object\n+     * <P><B>Note:<\/B> A {@code ResultSet} object\n@@ -196,2 +196,2 @@\n-     * <code>Statement<\/code> object that generated it when\n-     * that <code>Statement<\/code> object is closed,\n+     * {@code Statement} object that generated it when\n+     * that {@code Statement} object is closed,\n@@ -201,1 +201,1 @@\n-     * Calling the method <code>close<\/code> on a <code>ResultSet<\/code>\n+     * Calling the method {@code close} on a {@code ResultSet}\n@@ -211,1 +211,1 @@\n-     * the last column read had a value of SQL <code>NULL<\/code>.\n+     * the last column read had a value of SQL {@code NULL}.\n@@ -214,2 +214,2 @@\n-     * the method <code>wasNull<\/code> to see if the value read was\n-     * SQL <code>NULL<\/code>.\n+     * the method {@code wasNull} to see if the value read was\n+     * SQL {@code NULL}.\n@@ -217,2 +217,2 @@\n-     * @return <code>true<\/code> if the last column value read was SQL\n-     *         <code>NULL<\/code> and <code>false<\/code> otherwise\n+     * @return {@code true} if the last column value read was SQL\n+     *         {@code NULL} and {@code false} otherwise\n@@ -228,2 +228,2 @@\n-     * of this <code>ResultSet<\/code> object as\n-     * a <code>String<\/code> in the Java programming language.\n+     * of this {@code ResultSet} object as\n+     * a {@code String} in the Java programming language.\n@@ -232,2 +232,2 @@\n-     * @return the column value; if the value is SQL <code>NULL<\/code>, the\n-     * value returned is <code>null<\/code>\n+     * @return the column value; if the value is SQL {@code NULL}, the\n+     * value returned is {@code null}\n@@ -242,2 +242,2 @@\n-     * of this <code>ResultSet<\/code> object as\n-     * a <code>boolean<\/code> in the Java programming language.\n+     * of this {@code ResultSet} object as\n+     * a {@code boolean} in the Java programming language.\n@@ -247,1 +247,1 @@\n-     * and contains  a 0, a value of <code>false<\/code> is returned.  If the designated column has a datatype\n+     * and contains  a 0, a value of {@code false} is returned.  If the designated column has a datatype\n@@ -250,1 +250,1 @@\n-     * and contains  a 1, a value of <code>true<\/code> is returned.\n+     * and contains  a 1, a value of {@code true} is returned.\n@@ -253,2 +253,2 @@\n-     * @return the column value; if the value is SQL <code>NULL<\/code>, the\n-     * value returned is <code>false<\/code>\n+     * @return the column value; if the value is SQL {@code NULL}, the\n+     * value returned is {@code false}\n@@ -263,2 +263,2 @@\n-     * of this <code>ResultSet<\/code> object as\n-     * a <code>byte<\/code> in the Java programming language.\n+     * of this {@code ResultSet} object as\n+     * a {@code byte} in the Java programming language.\n@@ -267,2 +267,2 @@\n-     * @return the column value; if the value is SQL <code>NULL<\/code>, the\n-     * value returned is <code>0<\/code>\n+     * @return the column value; if the value is SQL {@code NULL}, the\n+     * value returned is {@code 0}\n@@ -277,2 +277,2 @@\n-     * of this <code>ResultSet<\/code> object as\n-     * a <code>short<\/code> in the Java programming language.\n+     * of this {@code ResultSet} object as\n+     * a {@code short} in the Java programming language.\n@@ -281,2 +281,2 @@\n-     * @return the column value; if the value is SQL <code>NULL<\/code>, the\n-     * value returned is <code>0<\/code>\n+     * @return the column value; if the value is SQL {@code NULL}, the\n+     * value returned is {@code 0}\n@@ -291,2 +291,2 @@\n-     * of this <code>ResultSet<\/code> object as\n-     * an <code>int<\/code> in the Java programming language.\n+     * of this {@code ResultSet} object as\n+     * an {@code int} in the Java programming language.\n@@ -295,2 +295,2 @@\n-     * @return the column value; if the value is SQL <code>NULL<\/code>, the\n-     * value returned is <code>0<\/code>\n+     * @return the column value; if the value is SQL {@code NULL}, the\n+     * value returned is {@code 0}\n@@ -305,2 +305,2 @@\n-     * of this <code>ResultSet<\/code> object as\n-     * a <code>long<\/code> in the Java programming language.\n+     * of this {@code ResultSet} object as\n+     * a {@code long} in the Java programming language.\n@@ -309,2 +309,2 @@\n-     * @return the column value; if the value is SQL <code>NULL<\/code>, the\n-     * value returned is <code>0<\/code>\n+     * @return the column value; if the value is SQL {@code NULL}, the\n+     * value returned is {@code 0}\n@@ -319,2 +319,2 @@\n-     * of this <code>ResultSet<\/code> object as\n-     * a <code>float<\/code> in the Java programming language.\n+     * of this {@code ResultSet} object as\n+     * a {@code float} in the Java programming language.\n@@ -323,2 +323,2 @@\n-     * @return the column value; if the value is SQL <code>NULL<\/code>, the\n-     * value returned is <code>0<\/code>\n+     * @return the column value; if the value is SQL {@code NULL}, the\n+     * value returned is {@code 0}\n@@ -333,2 +333,2 @@\n-     * of this <code>ResultSet<\/code> object as\n-     * a <code>double<\/code> in the Java programming language.\n+     * of this {@code ResultSet} object as\n+     * a {@code double} in the Java programming language.\n@@ -337,2 +337,2 @@\n-     * @return the column value; if the value is SQL <code>NULL<\/code>, the\n-     * value returned is <code>0<\/code>\n+     * @return the column value; if the value is SQL {@code NULL}, the\n+     * value returned is {@code 0}\n@@ -347,2 +347,2 @@\n-     * of this <code>ResultSet<\/code> object as\n-     * a <code>java.sql.BigDecimal<\/code> in the Java programming language.\n+     * of this {@code ResultSet} object as\n+     * a {@code java.sql.BigDecimal} in the Java programming language.\n@@ -352,2 +352,2 @@\n-     * @return the column value; if the value is SQL <code>NULL<\/code>, the\n-     * value returned is <code>null<\/code>\n+     * @return the column value; if the value is SQL {@code NULL}, the\n+     * value returned is {@code null}\n@@ -367,2 +367,2 @@\n-     * of this <code>ResultSet<\/code> object as\n-     * a <code>byte<\/code> array in the Java programming language.\n+     * of this {@code ResultSet} object as\n+     * a {@code byte} array in the Java programming language.\n@@ -372,2 +372,2 @@\n-     * @return the column value; if the value is SQL <code>NULL<\/code>, the\n-     * value returned is <code>null<\/code>\n+     * @return the column value; if the value is SQL {@code NULL}, the\n+     * value returned is {@code null}\n@@ -382,2 +382,2 @@\n-     * of this <code>ResultSet<\/code> object as\n-     * a <code>java.sql.Date<\/code> object in the Java programming language.\n+     * of this {@code ResultSet} object as\n+     * a {@code java.sql.Date} object in the Java programming language.\n@@ -386,2 +386,2 @@\n-     * @return the column value; if the value is SQL <code>NULL<\/code>, the\n-     * value returned is <code>null<\/code>\n+     * @return the column value; if the value is SQL {@code NULL}, the\n+     * value returned is {@code null}\n@@ -396,2 +396,2 @@\n-     * of this <code>ResultSet<\/code> object as\n-     * a <code>java.sql.Time<\/code> object in the Java programming language.\n+     * of this {@code ResultSet} object as\n+     * a {@code java.sql.Time} object in the Java programming language.\n@@ -400,2 +400,2 @@\n-     * @return the column value; if the value is SQL <code>NULL<\/code>, the\n-     * value returned is <code>null<\/code>\n+     * @return the column value; if the value is SQL {@code NULL}, the\n+     * value returned is {@code null}\n@@ -410,2 +410,2 @@\n-     * of this <code>ResultSet<\/code> object as\n-     * a <code>java.sql.Timestamp<\/code> object in the Java programming language.\n+     * of this {@code ResultSet} object as\n+     * a {@code java.sql.Timestamp} object in the Java programming language.\n@@ -414,2 +414,2 @@\n-     * @return the column value; if the value is SQL <code>NULL<\/code>, the\n-     * value returned is <code>null<\/code>\n+     * @return the column value; if the value is SQL {@code NULL}, the\n+     * value returned is {@code null}\n@@ -424,1 +424,1 @@\n-     * of this <code>ResultSet<\/code> object as\n+     * of this {@code ResultSet} object as\n@@ -427,1 +427,1 @@\n-     * suitable for retrieving large <code>LONGVARCHAR<\/code> values.\n+     * suitable for retrieving large {@code LONGVARCHAR} values.\n@@ -434,2 +434,2 @@\n-     * stream may return <code>0<\/code> when the method\n-     * <code>InputStream.available<\/code>\n+     * stream may return {@code 0} when the method\n+     * {@code InputStream.available}\n@@ -441,2 +441,2 @@\n-     * if the value is SQL <code>NULL<\/code>, the\n-     * value returned is <code>null<\/code>\n+     * if the value is SQL {@code NULL}, the\n+     * value returned is {@code null}\n@@ -451,1 +451,1 @@\n-     * of this <code>ResultSet<\/code> object as\n+     * of this {@code ResultSet} object as\n@@ -457,1 +457,1 @@\n-     * suitable for retrieving large <code>LONGVARCHAR<\/code>values.  The\n+     * suitable for retrieving large {@code LONGVARCHAR}values.  The\n@@ -464,2 +464,2 @@\n-     * Also, a stream may return <code>0<\/code> when the method\n-     * <code>InputStream.available<\/code>\n+     * Also, a stream may return {@code 0} when the method\n+     * {@code InputStream.available}\n@@ -471,2 +471,2 @@\n-     *         if the value is SQL <code>NULL<\/code>, the value returned is\n-     *         <code>null<\/code>\n+     *         if the value is SQL {@code NULL}, the value returned is\n+     *         {@code null}\n@@ -479,2 +479,2 @@\n-     * @deprecated use <code>getCharacterStream<\/code> in place of\n-     *              <code>getUnicodeStream<\/code>\n+     * @deprecated use {@code getCharacterStream} in place of\n+     *              {@code getUnicodeStream}\n@@ -487,1 +487,1 @@\n-     * of this <code>ResultSet<\/code> object as a  stream of\n+     * of this {@code ResultSet} object as a  stream of\n@@ -490,1 +490,1 @@\n-     * suitable for retrieving large <code>LONGVARBINARY<\/code> values.\n+     * suitable for retrieving large {@code LONGVARBINARY} values.\n@@ -495,2 +495,2 @@\n-     * stream may return <code>0<\/code> when the method\n-     * <code>InputStream.available<\/code>\n+     * stream may return {@code 0} when the method\n+     * {@code InputStream.available}\n@@ -502,2 +502,2 @@\n-     *         if the value is SQL <code>NULL<\/code>, the value returned is\n-     *         <code>null<\/code>\n+     *         if the value is SQL {@code NULL}, the value returned is\n+     *         {@code null}\n@@ -516,2 +516,2 @@\n-     * of this <code>ResultSet<\/code> object as\n-     * a <code>String<\/code> in the Java programming language.\n+     * of this {@code ResultSet} object as\n+     * a {@code String} in the Java programming language.\n@@ -520,2 +520,2 @@\n-     * @return the column value; if the value is SQL <code>NULL<\/code>, the\n-     * value returned is <code>null<\/code>\n+     * @return the column value; if the value is SQL {@code NULL}, the\n+     * value returned is {@code null}\n@@ -530,2 +530,2 @@\n-     * of this <code>ResultSet<\/code> object as\n-     * a <code>boolean<\/code> in the Java programming language.\n+     * of this {@code ResultSet} object as\n+     * a {@code boolean} in the Java programming language.\n@@ -535,1 +535,1 @@\n-     * and contains  a 0, a value of <code>false<\/code> is returned.  If the designated column has a datatype\n+     * and contains  a 0, a value of {@code false} is returned.  If the designated column has a datatype\n@@ -538,1 +538,1 @@\n-     * and contains  a 1, a value of <code>true<\/code> is returned.\n+     * and contains  a 1, a value of {@code true} is returned.\n@@ -541,2 +541,2 @@\n-     * @return the column value; if the value is SQL <code>NULL<\/code>, the\n-     * value returned is <code>false<\/code>\n+     * @return the column value; if the value is SQL {@code NULL}, the\n+     * value returned is {@code false}\n@@ -551,2 +551,2 @@\n-     * of this <code>ResultSet<\/code> object as\n-     * a <code>byte<\/code> in the Java programming language.\n+     * of this {@code ResultSet} object as\n+     * a {@code byte} in the Java programming language.\n@@ -555,2 +555,2 @@\n-     * @return the column value; if the value is SQL <code>NULL<\/code>, the\n-     * value returned is <code>0<\/code>\n+     * @return the column value; if the value is SQL {@code NULL}, the\n+     * value returned is {@code 0}\n@@ -565,2 +565,2 @@\n-     * of this <code>ResultSet<\/code> object as\n-     * a <code>short<\/code> in the Java programming language.\n+     * of this {@code ResultSet} object as\n+     * a {@code short} in the Java programming language.\n@@ -569,2 +569,2 @@\n-     * @return the column value; if the value is SQL <code>NULL<\/code>, the\n-     * value returned is <code>0<\/code>\n+     * @return the column value; if the value is SQL {@code NULL}, the\n+     * value returned is {@code 0}\n@@ -579,2 +579,2 @@\n-     * of this <code>ResultSet<\/code> object as\n-     * an <code>int<\/code> in the Java programming language.\n+     * of this {@code ResultSet} object as\n+     * an {@code int} in the Java programming language.\n@@ -583,2 +583,2 @@\n-     * @return the column value; if the value is SQL <code>NULL<\/code>, the\n-     * value returned is <code>0<\/code>\n+     * @return the column value; if the value is SQL {@code NULL}, the\n+     * value returned is {@code 0}\n@@ -593,2 +593,2 @@\n-     * of this <code>ResultSet<\/code> object as\n-     * a <code>long<\/code> in the Java programming language.\n+     * of this {@code ResultSet} object as\n+     * a {@code long} in the Java programming language.\n@@ -597,2 +597,2 @@\n-     * @return the column value; if the value is SQL <code>NULL<\/code>, the\n-     * value returned is <code>0<\/code>\n+     * @return the column value; if the value is SQL {@code NULL}, the\n+     * value returned is {@code 0}\n@@ -607,2 +607,2 @@\n-     * of this <code>ResultSet<\/code> object as\n-     * a <code>float<\/code> in the Java programming language.\n+     * of this {@code ResultSet} object as\n+     * a {@code float} in the Java programming language.\n@@ -611,2 +611,2 @@\n-     * @return the column value; if the value is SQL <code>NULL<\/code>, the\n-     * value returned is <code>0<\/code>\n+     * @return the column value; if the value is SQL {@code NULL}, the\n+     * value returned is {@code 0}\n@@ -621,2 +621,2 @@\n-     * of this <code>ResultSet<\/code> object as\n-     * a <code>double<\/code> in the Java programming language.\n+     * of this {@code ResultSet} object as\n+     * a {@code double} in the Java programming language.\n@@ -625,2 +625,2 @@\n-     * @return the column value; if the value is SQL <code>NULL<\/code>, the\n-     * value returned is <code>0<\/code>\n+     * @return the column value; if the value is SQL {@code NULL}, the\n+     * value returned is {@code 0}\n@@ -635,2 +635,2 @@\n-     * of this <code>ResultSet<\/code> object as\n-     * a <code>java.math.BigDecimal<\/code> in the Java programming language.\n+     * of this {@code ResultSet} object as\n+     * a {@code java.math.BigDecimal} in the Java programming language.\n@@ -640,2 +640,2 @@\n-     * @return the column value; if the value is SQL <code>NULL<\/code>, the\n-     * value returned is <code>null<\/code>\n+     * @return the column value; if the value is SQL {@code NULL}, the\n+     * value returned is {@code null}\n@@ -655,2 +655,2 @@\n-     * of this <code>ResultSet<\/code> object as\n-     * a <code>byte<\/code> array in the Java programming language.\n+     * of this {@code ResultSet} object as\n+     * a {@code byte} array in the Java programming language.\n@@ -660,2 +660,2 @@\n-     * @return the column value; if the value is SQL <code>NULL<\/code>, the\n-     * value returned is <code>null<\/code>\n+     * @return the column value; if the value is SQL {@code NULL}, the\n+     * value returned is {@code null}\n@@ -670,2 +670,2 @@\n-     * of this <code>ResultSet<\/code> object as\n-     * a <code>java.sql.Date<\/code> object in the Java programming language.\n+     * of this {@code ResultSet} object as\n+     * a {@code java.sql.Date} object in the Java programming language.\n@@ -674,2 +674,2 @@\n-     * @return the column value; if the value is SQL <code>NULL<\/code>, the\n-     * value returned is <code>null<\/code>\n+     * @return the column value; if the value is SQL {@code NULL}, the\n+     * value returned is {@code null}\n@@ -684,2 +684,2 @@\n-     * of this <code>ResultSet<\/code> object as\n-     * a <code>java.sql.Time<\/code> object in the Java programming language.\n+     * of this {@code ResultSet} object as\n+     * a {@code java.sql.Time} object in the Java programming language.\n@@ -689,2 +689,2 @@\n-     * if the value is SQL <code>NULL<\/code>,\n-     * the value returned is <code>null<\/code>\n+     * if the value is SQL {@code NULL},\n+     * the value returned is {@code null}\n@@ -699,2 +699,2 @@\n-     * of this <code>ResultSet<\/code> object as\n-     * a <code>java.sql.Timestamp<\/code> object in the Java programming language.\n+     * of this {@code ResultSet} object as\n+     * a {@code java.sql.Timestamp} object in the Java programming language.\n@@ -703,2 +703,2 @@\n-     * @return the column value; if the value is SQL <code>NULL<\/code>, the\n-     * value returned is <code>null<\/code>\n+     * @return the column value; if the value is SQL {@code NULL}, the\n+     * value returned is {@code null}\n@@ -713,1 +713,1 @@\n-     * of this <code>ResultSet<\/code> object as a stream of\n+     * of this {@code ResultSet} object as a stream of\n@@ -716,1 +716,1 @@\n-     * suitable for retrieving large <code>LONGVARCHAR<\/code> values.\n+     * suitable for retrieving large {@code LONGVARCHAR} values.\n@@ -723,1 +723,1 @@\n-     * stream may return <code>0<\/code> when the method <code>available<\/code>\n+     * stream may return {@code 0} when the method {@code available}\n@@ -729,2 +729,2 @@\n-     * If the value is SQL <code>NULL<\/code>,\n-     * the value returned is <code>null<\/code>.\n+     * If the value is SQL {@code NULL},\n+     * the value returned is {@code null}.\n@@ -739,1 +739,1 @@\n-     * of this <code>ResultSet<\/code> object as a stream of two-byte\n+     * of this {@code ResultSet} object as a stream of two-byte\n@@ -745,1 +745,1 @@\n-     * suitable for retrieving large <code>LONGVARCHAR<\/code> values.\n+     * suitable for retrieving large {@code LONGVARCHAR} values.\n@@ -752,2 +752,2 @@\n-     * Also, a stream may return <code>0<\/code> when the method\n-     * <code>InputStream.available<\/code> is called, whether there\n+     * Also, a stream may return {@code 0} when the method\n+     * {@code InputStream.available} is called, whether there\n@@ -759,2 +759,2 @@\n-     *         If the value is SQL <code>NULL<\/code>, the value returned\n-     *         is <code>null<\/code>.\n+     *         If the value is SQL {@code NULL}, the value returned\n+     *         is {@code null}.\n@@ -766,1 +766,1 @@\n-     * @deprecated use <code>getCharacterStream<\/code> instead\n+     * @deprecated use {@code getCharacterStream} instead\n@@ -773,2 +773,2 @@\n-     * of this <code>ResultSet<\/code> object as a stream of uninterpreted\n-     * <code>byte<\/code>s.\n+     * of this {@code ResultSet} object as a stream of uninterpreted\n+     * {@code byte}s.\n@@ -777,1 +777,1 @@\n-     * suitable for retrieving large <code>LONGVARBINARY<\/code>\n+     * suitable for retrieving large {@code LONGVARBINARY}\n@@ -783,1 +783,1 @@\n-     * stream may return <code>0<\/code> when the method <code>available<\/code>\n+     * stream may return {@code 0} when the method {@code available}\n@@ -789,1 +789,1 @@\n-     * if the value is SQL <code>NULL<\/code>, the result is <code>null<\/code>\n+     * if the value is SQL {@code NULL}, the result is {@code null}\n@@ -802,3 +802,3 @@\n-     * <code>ResultSet<\/code> object.\n-     * Subsequent warnings on this <code>ResultSet<\/code> object\n-     * will be chained to the <code>SQLWarning<\/code> object that\n+     * {@code ResultSet} object.\n+     * Subsequent warnings on this {@code ResultSet} object\n+     * will be chained to the {@code SQLWarning} object that\n@@ -808,1 +808,1 @@\n-     * row is read.  This method may not be called on a <code>ResultSet<\/code>\n+     * row is read.  This method may not be called on a {@code ResultSet}\n@@ -810,1 +810,1 @@\n-     * <code>SQLException<\/code> to be thrown.\n+     * {@code SQLException} to be thrown.\n@@ -813,2 +813,2 @@\n-     * by <code>ResultSet<\/code> methods.  Any warning caused by\n-     * <code>Statement<\/code> methods\n+     * by {@code ResultSet} methods.  Any warning caused by\n+     * {@code Statement} methods\n@@ -816,1 +816,1 @@\n-     * <code>Statement<\/code> object.\n+     * {@code Statement} object.\n@@ -818,2 +818,2 @@\n-     * @return the first <code>SQLWarning<\/code> object reported or\n-     *         <code>null<\/code> if there are none\n+     * @return the first {@code SQLWarning} object reported or\n+     *         {@code null} if there are none\n@@ -826,4 +826,4 @@\n-     * Clears all warnings reported on this <code>ResultSet<\/code> object.\n-     * After this method is called, the method <code>getWarnings<\/code>\n-     * returns <code>null<\/code> until a new warning is\n-     * reported for this <code>ResultSet<\/code> object.\n+     * Clears all warnings reported on this {@code ResultSet} object.\n+     * After this method is called, the method {@code getWarnings}\n+     * returns {@code null} until a new warning is\n+     * reported for this {@code ResultSet} object.\n@@ -837,1 +837,1 @@\n-     * Retrieves the name of the SQL cursor used by this <code>ResultSet<\/code>\n+     * Retrieves the name of the SQL cursor used by this {@code ResultSet}\n@@ -844,3 +844,3 @@\n-     * level to support update, the cursor's <code>SELECT<\/code> statement\n-     * should be of the form <code>SELECT FOR UPDATE<\/code>. If\n-     * <code>FOR UPDATE<\/code> is omitted, the positioned updates may fail.\n+     * level to support update, the cursor's {@code SELECT} statement\n+     * should be of the form {@code SELECT FOR UPDATE}. If\n+     * {@code FOR UPDATE} is omitted, the positioned updates may fail.\n@@ -849,2 +849,2 @@\n-     * SQL cursor used by a <code>ResultSet<\/code> object.\n-     * The current row of a <code>ResultSet<\/code> object\n+     * SQL cursor used by a {@code ResultSet} object.\n+     * The current row of a {@code ResultSet} object\n@@ -853,1 +853,1 @@\n-     * @return the SQL name for this <code>ResultSet<\/code> object's cursor\n+     * @return the SQL name for this {@code ResultSet} object's cursor\n@@ -862,1 +862,1 @@\n-     * this <code>ResultSet<\/code> object's columns.\n+     * this {@code ResultSet} object's columns.\n@@ -864,1 +864,1 @@\n-     * @return the description of this <code>ResultSet<\/code> object's columns\n+     * @return the description of this {@code ResultSet} object's columns\n@@ -872,2 +872,2 @@\n-     * of this <code>ResultSet<\/code> object as\n-     * an <code>Object<\/code> in the Java programming language.\n+     * of this {@code ResultSet} object as\n+     * an {@code Object} in the Java programming language.\n@@ -879,2 +879,2 @@\n-     * specification. If the value is an SQL <code>NULL<\/code>,\n-     * the driver returns a Java <code>null<\/code>.\n+     * specification. If the value is an SQL {@code NULL},\n+     * the driver returns a Java {@code null}.\n@@ -886,1 +886,1 @@\n-     * <code>getObject<\/code> is extended to materialize\n+     * {@code getObject} is extended to materialize\n@@ -889,2 +889,2 @@\n-     * If <code>Connection.getTypeMap<\/code> does not throw a\n-     * <code>SQLFeatureNotSupportedException<\/code>,\n+     * If {@code Connection.getTypeMap} does not throw a\n+     * {@code SQLFeatureNotSupportedException},\n@@ -893,2 +893,2 @@\n-     * if it were a call to: <code>getObject(columnIndex,\n-     * this.getStatement().getConnection().getTypeMap())<\/code>.\n+     * if it were a call to: {@code getObject(columnIndex,\n+     * this.getStatement().getConnection().getTypeMap())}.\n@@ -896,2 +896,2 @@\n-     * If <code>Connection.getTypeMap<\/code> does throw a\n-     * <code>SQLFeatureNotSupportedException<\/code>,\n+     * If {@code Connection.getTypeMap} does throw a\n+     * {@code SQLFeatureNotSupportedException},\n@@ -903,1 +903,1 @@\n-     * @return a <code>java.lang.Object<\/code> holding the column value\n+     * @return a {@code java.lang.Object} holding the column value\n@@ -912,2 +912,2 @@\n-     * of this <code>ResultSet<\/code> object as\n-     * an <code>Object<\/code> in the Java programming language.\n+     * of this {@code ResultSet} object as\n+     * an {@code Object} in the Java programming language.\n@@ -919,2 +919,2 @@\n-     * specification. If the value is an SQL <code>NULL<\/code>,\n-     * the driver returns a Java <code>null<\/code>.\n+     * specification. If the value is an SQL {@code NULL},\n+     * the driver returns a Java {@code null}.\n@@ -926,1 +926,1 @@\n-     * <code>getObject<\/code> is extended to materialize\n+     * {@code getObject} is extended to materialize\n@@ -929,2 +929,2 @@\n-     * if it were a call to: <code>getObject(columnIndex,\n-     * this.getStatement().getConnection().getTypeMap())<\/code>.\n+     * if it were a call to: {@code getObject(columnIndex,\n+     * this.getStatement().getConnection().getTypeMap())}.\n@@ -933,1 +933,1 @@\n-     * @return a <code>java.lang.Object<\/code> holding the column value\n+     * @return a {@code java.lang.Object} holding the column value\n@@ -943,2 +943,2 @@\n-     * Maps the given <code>ResultSet<\/code> column label to its\n-     * <code>ResultSet<\/code> column index.\n+     * Maps the given {@code ResultSet} column label to its\n+     * {@code ResultSet} column index.\n@@ -963,5 +963,5 @@\n-     * of this <code>ResultSet<\/code> object as a\n-     * <code>java.io.Reader<\/code> object.\n-     * @return a <code>java.io.Reader<\/code> object that contains the column\n-     * value; if the value is SQL <code>NULL<\/code>, the value returned is\n-     * <code>null<\/code> in the Java programming language.\n+     * of this {@code ResultSet} object as a\n+     * {@code java.io.Reader} object.\n+     * @return a {@code java.io.Reader} object that contains the column\n+     * value; if the value is SQL {@code NULL}, the value returned is\n+     * {@code null} in the Java programming language.\n@@ -978,2 +978,2 @@\n-     * of this <code>ResultSet<\/code> object as a\n-     * <code>java.io.Reader<\/code> object.\n+     * of this {@code ResultSet} object as a\n+     * {@code java.io.Reader} object.\n@@ -982,3 +982,3 @@\n-     * @return a <code>java.io.Reader<\/code> object that contains the column\n-     * value; if the value is SQL <code>NULL<\/code>, the value returned is\n-     * <code>null<\/code> in the Java programming language\n+     * @return a {@code java.io.Reader} object that contains the column\n+     * value; if the value is SQL {@code NULL}, the value returned is\n+     * {@code null} in the Java programming language\n@@ -994,2 +994,2 @@\n-     * of this <code>ResultSet<\/code> object as a\n-     * <code>java.math.BigDecimal<\/code> with full precision.\n+     * of this {@code ResultSet} object as a\n+     * {@code java.math.BigDecimal} with full precision.\n@@ -999,2 +999,2 @@\n-     * if the value is SQL <code>NULL<\/code>, the value returned is\n-     * <code>null<\/code> in the Java programming language.\n+     * if the value is SQL {@code NULL}, the value returned is\n+     * {@code null} in the Java programming language.\n@@ -1010,2 +1010,2 @@\n-     * of this <code>ResultSet<\/code> object as a\n-     * <code>java.math.BigDecimal<\/code> with full precision.\n+     * of this {@code ResultSet} object as a\n+     * {@code java.math.BigDecimal} with full precision.\n@@ -1015,2 +1015,2 @@\n-     * if the value is SQL <code>NULL<\/code>, the value returned is\n-     * <code>null<\/code> in the Java programming language.\n+     * if the value is SQL {@code NULL}, the value returned is\n+     * {@code null} in the Java programming language.\n@@ -1031,1 +1031,1 @@\n-     * this <code>ResultSet<\/code> object.\n+     * this {@code ResultSet} object.\n@@ -1033,3 +1033,3 @@\n-     * <strong>Note:<\/strong>Support for the <code>isBeforeFirst<\/code> method\n-     * is optional for <code>ResultSet<\/code>s with a result\n-     * set type of <code>TYPE_FORWARD_ONLY<\/code>\n+     * <strong>Note:<\/strong>Support for the {@code isBeforeFirst} method\n+     * is optional for {@code ResultSet}s with a result\n+     * set type of {@code TYPE_FORWARD_ONLY}\n@@ -1037,2 +1037,2 @@\n-     * @return <code>true<\/code> if the cursor is before the first row;\n-     * <code>false<\/code> if the cursor is at any other position or the\n+     * @return {@code true} if the cursor is before the first row;\n+     * {@code false} if the cursor is at any other position or the\n@@ -1050,1 +1050,1 @@\n-     * this <code>ResultSet<\/code> object.\n+     * this {@code ResultSet} object.\n@@ -1052,3 +1052,3 @@\n-     * <strong>Note:<\/strong>Support for the <code>isAfterLast<\/code> method\n-     * is optional for <code>ResultSet<\/code>s with a result\n-     * set type of <code>TYPE_FORWARD_ONLY<\/code>\n+     * <strong>Note:<\/strong>Support for the {@code isAfterLast} method\n+     * is optional for {@code ResultSet}s with a result\n+     * set type of {@code TYPE_FORWARD_ONLY}\n@@ -1056,2 +1056,2 @@\n-     * @return <code>true<\/code> if the cursor is after the last row;\n-     * <code>false<\/code> if the cursor is at any other position or the\n+     * @return {@code true} if the cursor is after the last row;\n+     * {@code false} if the cursor is at any other position or the\n@@ -1069,1 +1069,1 @@\n-     * this <code>ResultSet<\/code> object.\n+     * this {@code ResultSet} object.\n@@ -1071,3 +1071,3 @@\n-     * <strong>Note:<\/strong>Support for the <code>isFirst<\/code> method\n-     * is optional for <code>ResultSet<\/code>s with a result\n-     * set type of <code>TYPE_FORWARD_ONLY<\/code>\n+     * <strong>Note:<\/strong>Support for the {@code isFirst} method\n+     * is optional for {@code ResultSet}s with a result\n+     * set type of {@code TYPE_FORWARD_ONLY}\n@@ -1075,2 +1075,2 @@\n-     * @return <code>true<\/code> if the cursor is on the first row;\n-     * <code>false<\/code> otherwise\n+     * @return {@code true} if the cursor is on the first row;\n+     * {@code false} otherwise\n@@ -1087,2 +1087,2 @@\n-     * this <code>ResultSet<\/code> object.\n-     *  <strong>Note:<\/strong> Calling the method <code>isLast<\/code> may be expensive\n+     * this {@code ResultSet} object.\n+     *  <strong>Note:<\/strong> Calling the method {@code isLast} may be expensive\n@@ -1093,5 +1093,5 @@\n-     * <strong>Note:<\/strong> Support for the <code>isLast<\/code> method\n-     * is optional for <code>ResultSet<\/code>s with a result\n-     * set type of <code>TYPE_FORWARD_ONLY<\/code>\n-     * @return <code>true<\/code> if the cursor is on the last row;\n-     * <code>false<\/code> otherwise\n+     * <strong>Note:<\/strong> Support for the {@code isLast} method\n+     * is optional for {@code ResultSet}s with a result\n+     * set type of {@code TYPE_FORWARD_ONLY}\n+     * @return {@code true} if the cursor is on the last row;\n+     * {@code false} otherwise\n@@ -1108,1 +1108,1 @@\n-     * this <code>ResultSet<\/code> object, just before the\n+     * this {@code ResultSet} object, just before the\n@@ -1122,1 +1122,1 @@\n-     * this <code>ResultSet<\/code> object, just after the\n+     * this {@code ResultSet} object, just after the\n@@ -1135,1 +1135,1 @@\n-     * this <code>ResultSet<\/code> object.\n+     * this {@code ResultSet} object.\n@@ -1137,2 +1137,2 @@\n-     * @return <code>true<\/code> if the cursor is on a valid row;\n-     * <code>false<\/code> if there are no rows in the result set\n+     * @return {@code true} if the cursor is on a valid row;\n+     * {@code false} if there are no rows in the result set\n@@ -1150,1 +1150,1 @@\n-     * this <code>ResultSet<\/code> object.\n+     * this {@code ResultSet} object.\n@@ -1152,2 +1152,2 @@\n-     * @return <code>true<\/code> if the cursor is on a valid row;\n-     * <code>false<\/code> if there are no rows in the result set\n+     * @return {@code true} if the cursor is on a valid row;\n+     * {@code false} if there are no rows in the result set\n@@ -1167,3 +1167,3 @@\n-     * <strong>Note:<\/strong>Support for the <code>getRow<\/code> method\n-     * is optional for <code>ResultSet<\/code>s with a result\n-     * set type of <code>TYPE_FORWARD_ONLY<\/code>\n+     * <strong>Note:<\/strong>Support for the {@code getRow} method\n+     * is optional for {@code ResultSet}s with a result\n+     * set type of {@code TYPE_FORWARD_ONLY}\n@@ -1171,1 +1171,1 @@\n-     * @return the current row number; <code>0<\/code> if there is no current row\n+     * @return the current row number; {@code 0} if there is no current row\n@@ -1182,1 +1182,1 @@\n-     * this <code>ResultSet<\/code> object.\n+     * this {@code ResultSet} object.\n@@ -1192,2 +1192,2 @@\n-     * <code>absolute(-1)<\/code> positions the\n-     * cursor on the last row; calling the method <code>absolute(-2)<\/code>\n+     * {@code absolute(-1)} positions the\n+     * cursor on the last row; calling the method {@code absolute(-2)}\n@@ -1203,3 +1203,3 @@\n-     * <p><B>Note:<\/B> Calling <code>absolute(1)<\/code> is the same\n-     * as calling <code>first()<\/code>. Calling <code>absolute(-1)<\/code>\n-     * is the same as calling <code>last()<\/code>.\n+     * <p><B>Note:<\/B> Calling {@code absolute(1)} is the same\n+     * as calling {@code first()}. Calling {@code absolute(-1)}\n+     * is the same as calling {@code last()}.\n@@ -1212,3 +1212,3 @@\n-     * @return <code>true<\/code> if the cursor is moved to a position in this\n-     * <code>ResultSet<\/code> object;\n-     * <code>false<\/code> if the cursor is before the first row or after the\n+     * @return {@code true} if the cursor is moved to a position in this\n+     * {@code ResultSet} object;\n+     * {@code false} if the cursor is before the first row or after the\n@@ -1229,1 +1229,1 @@\n-     * the first\/last row. Calling <code>relative(0)<\/code> is valid, but does\n+     * the first\/last row. Calling {@code relative(0)} is valid, but does\n@@ -1232,4 +1232,4 @@\n-     * <p>Note: Calling the method <code>relative(1)<\/code>\n-     * is identical to calling the method <code>next()<\/code> and\n-     * calling the method <code>relative(-1)<\/code> is identical\n-     * to calling the method <code>previous()<\/code>.\n+     * <p>Note: Calling the method {@code relative(1)}\n+     * is identical to calling the method {@code next()} and\n+     * calling the method {@code relative(-1)} is identical\n+     * to calling the method {@code previous()}.\n@@ -1237,1 +1237,1 @@\n-     * @param rows an <code>int<\/code> specifying the number of rows to\n+     * @param rows an {@code int} specifying the number of rows to\n@@ -1240,2 +1240,2 @@\n-     * @return <code>true<\/code> if the cursor is on a row;\n-     *         <code>false<\/code> otherwise\n+     * @return {@code true} if the cursor is on a row;\n+     *         {@code false} otherwise\n@@ -1253,1 +1253,1 @@\n-     * <code>ResultSet<\/code> object.\n+     * {@code ResultSet} object.\n@@ -1255,1 +1255,1 @@\n-     * When a call to the <code>previous<\/code> method returns <code>false<\/code>,\n+     * When a call to the {@code previous} method returns {@code false},\n@@ -1257,2 +1257,2 @@\n-     * <code>ResultSet<\/code> method which requires a current row will result in a\n-     * <code>SQLException<\/code> being thrown.\n+     * {@code ResultSet} method which requires a current row will result in a\n+     * {@code SQLException} being thrown.\n@@ -1261,1 +1261,1 @@\n-     * <code>previous<\/code> will implicitly close it.  A <code>ResultSet<\/code>\n+     * {@code previous} will implicitly close it.  A {@code ResultSet}\n@@ -1264,2 +1264,2 @@\n-     * @return <code>true<\/code> if the cursor is now positioned on a valid row;\n-     * <code>false<\/code> if the cursor is positioned before the first row\n+     * @return {@code true} if the cursor is now positioned on a valid row;\n+     * {@code false} if the cursor is positioned before the first row\n@@ -1282,1 +1282,1 @@\n-     * This constant is used by the method <code>setFetchDirection<\/code>\n+     * This constant is used by the method {@code setFetchDirection}\n@@ -1291,1 +1291,1 @@\n-     * This constant is used by the method <code>setFetchDirection<\/code>\n+     * This constant is used by the method {@code setFetchDirection}\n@@ -1300,1 +1300,1 @@\n-     * This constant is used by the method <code>setFetchDirection<\/code>\n+     * This constant is used by the method {@code setFetchDirection}\n@@ -1307,1 +1307,1 @@\n-     * <code>ResultSet<\/code> object will be processed.\n+     * {@code ResultSet} object will be processed.\n@@ -1309,2 +1309,2 @@\n-     * <code>Statement<\/code> object\n-     * that produced this <code>ResultSet<\/code> object.\n+     * {@code Statement} object\n+     * that produced this {@code ResultSet} object.\n@@ -1313,4 +1313,4 @@\n-     * @param direction an <code>int<\/code> specifying the suggested\n-     *        fetch direction; one of <code>ResultSet.FETCH_FORWARD<\/code>,\n-     *        <code>ResultSet.FETCH_REVERSE<\/code>, or\n-     *        <code>ResultSet.FETCH_UNKNOWN<\/code>\n+     * @param direction an {@code int} specifying the suggested\n+     *        fetch direction; one of {@code ResultSet.FETCH_FORWARD},\n+     *        {@code ResultSet.FETCH_REVERSE}, or\n+     *        {@code ResultSet.FETCH_UNKNOWN}\n@@ -1329,1 +1329,1 @@\n-     * <code>ResultSet<\/code> object.\n+     * {@code ResultSet} object.\n@@ -1331,1 +1331,1 @@\n-     * @return the current fetch direction for this <code>ResultSet<\/code> object\n+     * @return the current fetch direction for this {@code ResultSet} object\n@@ -1342,1 +1342,1 @@\n-     * <code>ResultSet<\/code> object.\n+     * {@code ResultSet} object.\n@@ -1346,1 +1346,1 @@\n-     * <code>Statement<\/code> object\n+     * {@code Statement} object\n@@ -1360,1 +1360,1 @@\n-     * <code>ResultSet<\/code> object.\n+     * {@code ResultSet} object.\n@@ -1362,1 +1362,1 @@\n-     * @return the current fetch size for this <code>ResultSet<\/code> object\n+     * @return the current fetch size for this {@code ResultSet} object\n@@ -1371,1 +1371,1 @@\n-     * The constant indicating the type for a <code>ResultSet<\/code> object\n+     * The constant indicating the type for a {@code ResultSet} object\n@@ -1378,1 +1378,1 @@\n-     * The constant indicating the type for a <code>ResultSet<\/code> object\n+     * The constant indicating the type for a {@code ResultSet} object\n@@ -1380,1 +1380,1 @@\n-     * that underlies the <code>ResultSet<\/code>.\n+     * that underlies the {@code ResultSet}.\n@@ -1386,1 +1386,1 @@\n-     * The constant indicating the type for a <code>ResultSet<\/code> object\n+     * The constant indicating the type for a {@code ResultSet} object\n@@ -1388,1 +1388,1 @@\n-     * that underlies the <code>ResultSet<\/code>.\n+     * that underlies the {@code ResultSet}.\n@@ -1394,2 +1394,2 @@\n-     * Retrieves the type of this <code>ResultSet<\/code> object.\n-     * The type is determined by the <code>Statement<\/code> object\n+     * Retrieves the type of this {@code ResultSet} object.\n+     * The type is determined by the {@code Statement} object\n@@ -1398,3 +1398,3 @@\n-     * @return <code>ResultSet.TYPE_FORWARD_ONLY<\/code>,\n-     *         <code>ResultSet.TYPE_SCROLL_INSENSITIVE<\/code>,\n-     *         or <code>ResultSet.TYPE_SCROLL_SENSITIVE<\/code>\n+     * @return {@code ResultSet.TYPE_FORWARD_ONLY},\n+     *         {@code ResultSet.TYPE_SCROLL_INSENSITIVE},\n+     *         or {@code ResultSet.TYPE_SCROLL_SENSITIVE}\n@@ -1409,1 +1409,1 @@\n-     * <code>ResultSet<\/code> object that may NOT be updated.\n+     * {@code ResultSet} object that may NOT be updated.\n@@ -1416,1 +1416,1 @@\n-     * <code>ResultSet<\/code> object that may be updated.\n+     * {@code ResultSet} object that may be updated.\n@@ -1422,1 +1422,1 @@\n-     * Retrieves the concurrency mode of this <code>ResultSet<\/code> object.\n+     * Retrieves the concurrency mode of this {@code ResultSet} object.\n@@ -1424,1 +1424,1 @@\n-     * <code>Statement<\/code> object that created the result set.\n+     * {@code Statement} object that created the result set.\n@@ -1427,2 +1427,2 @@\n-     *         <code>ResultSet.CONCUR_READ_ONLY<\/code>\n-     *         or <code>ResultSet.CONCUR_UPDATABLE<\/code>\n+     *         {@code ResultSet.CONCUR_READ_ONLY}\n+     *         or {@code ResultSet.CONCUR_UPDATABLE}\n@@ -1443,4 +1443,4 @@\n-     * <strong>Note:<\/strong> Support for the <code>rowUpdated<\/code> method is optional with a result set\n-     * concurrency of <code>CONCUR_READ_ONLY<\/code>\n-     * @return <code>true<\/code> if the current row is detected to\n-     * have been visibly updated by the owner or another; <code>false<\/code> otherwise\n+     * <strong>Note:<\/strong> Support for the {@code rowUpdated} method is optional with a result set\n+     * concurrency of {@code CONCUR_READ_ONLY}\n+     * @return {@code true} if the current row is detected to\n+     * have been visibly updated by the owner or another; {@code false} otherwise\n@@ -1459,1 +1459,1 @@\n-     * <code>ResultSet<\/code> object can detect visible inserts.\n+     * {@code ResultSet} object can detect visible inserts.\n@@ -1461,4 +1461,4 @@\n-     * <strong>Note:<\/strong> Support for the <code>rowInserted<\/code> method is optional with a result set\n-     * concurrency of <code>CONCUR_READ_ONLY<\/code>\n-     * @return <code>true<\/code> if the current row is detected to\n-     * have been inserted; <code>false<\/code> otherwise\n+     * <strong>Note:<\/strong> Support for the {@code rowInserted} method is optional with a result set\n+     * concurrency of {@code CONCUR_READ_ONLY}\n+     * @return {@code true} if the current row is detected to\n+     * have been inserted; {@code false} otherwise\n@@ -1479,1 +1479,1 @@\n-     * or not this <code>ResultSet<\/code> object can detect deletions.\n+     * or not this {@code ResultSet} object can detect deletions.\n@@ -1481,4 +1481,4 @@\n-     * <strong>Note:<\/strong> Support for the <code>rowDeleted<\/code> method is optional with a result set\n-     * concurrency of <code>CONCUR_READ_ONLY<\/code>\n-     * @return <code>true<\/code> if the current row is detected to\n-     * have been deleted by the owner or another; <code>false<\/code> otherwise\n+     * <strong>Note:<\/strong> Support for the {@code rowDeleted} method is optional with a result set\n+     * concurrency of {@code CONCUR_READ_ONLY}\n+     * @return {@code true} if the current row is detected to\n+     * have been deleted by the owner or another; {@code false} otherwise\n@@ -1496,1 +1496,1 @@\n-     * Updates the designated column with a <code>null<\/code> value.\n+     * Updates the designated column with a {@code null} value.\n@@ -1500,2 +1500,2 @@\n-     * update the underlying database; instead the <code>updateRow<\/code>\n-     * or <code>insertRow<\/code> methods are called to update the database.\n+     * update the underlying database; instead the {@code updateRow}\n+     * or {@code insertRow} methods are called to update the database.\n@@ -1515,1 +1515,1 @@\n-     * Updates the designated column with a <code>boolean<\/code> value.\n+     * Updates the designated column with a {@code boolean} value.\n@@ -1518,2 +1518,2 @@\n-     * update the underlying database; instead the <code>updateRow<\/code> or\n-     * <code>insertRow<\/code> methods are called to update the database.\n+     * update the underlying database; instead the {@code updateRow} or\n+     * {@code insertRow} methods are called to update the database.\n@@ -1534,1 +1534,1 @@\n-     * Updates the designated column with a <code>byte<\/code> value.\n+     * Updates the designated column with a {@code byte} value.\n@@ -1537,2 +1537,2 @@\n-     * update the underlying database; instead the <code>updateRow<\/code> or\n-     * <code>insertRow<\/code> methods are called to update the database.\n+     * update the underlying database; instead the {@code updateRow} or\n+     * {@code insertRow} methods are called to update the database.\n@@ -1554,1 +1554,1 @@\n-     * Updates the designated column with a <code>short<\/code> value.\n+     * Updates the designated column with a {@code short} value.\n@@ -1557,2 +1557,2 @@\n-     * update the underlying database; instead the <code>updateRow<\/code> or\n-     * <code>insertRow<\/code> methods are called to update the database.\n+     * update the underlying database; instead the {@code updateRow} or\n+     * {@code insertRow} methods are called to update the database.\n@@ -1573,1 +1573,1 @@\n-     * Updates the designated column with an <code>int<\/code> value.\n+     * Updates the designated column with an {@code int} value.\n@@ -1576,2 +1576,2 @@\n-     * update the underlying database; instead the <code>updateRow<\/code> or\n-     * <code>insertRow<\/code> methods are called to update the database.\n+     * update the underlying database; instead the {@code updateRow} or\n+     * {@code insertRow} methods are called to update the database.\n@@ -1592,1 +1592,1 @@\n-     * Updates the designated column with a <code>long<\/code> value.\n+     * Updates the designated column with a {@code long} value.\n@@ -1595,2 +1595,2 @@\n-     * update the underlying database; instead the <code>updateRow<\/code> or\n-     * <code>insertRow<\/code> methods are called to update the database.\n+     * update the underlying database; instead the {@code updateRow} or\n+     * {@code insertRow} methods are called to update the database.\n@@ -1611,1 +1611,1 @@\n-     * Updates the designated column with a <code>float<\/code> value.\n+     * Updates the designated column with a {@code float} value.\n@@ -1614,2 +1614,2 @@\n-     * update the underlying database; instead the <code>updateRow<\/code> or\n-     * <code>insertRow<\/code> methods are called to update the database.\n+     * update the underlying database; instead the {@code updateRow} or\n+     * {@code insertRow} methods are called to update the database.\n@@ -1630,1 +1630,1 @@\n-     * Updates the designated column with a <code>double<\/code> value.\n+     * Updates the designated column with a {@code double} value.\n@@ -1633,2 +1633,2 @@\n-     * update the underlying database; instead the <code>updateRow<\/code> or\n-     * <code>insertRow<\/code> methods are called to update the database.\n+     * update the underlying database; instead the {@code updateRow} or\n+     * {@code insertRow} methods are called to update the database.\n@@ -1649,1 +1649,1 @@\n-     * Updates the designated column with a <code>java.math.BigDecimal<\/code>\n+     * Updates the designated column with a {@code java.math.BigDecimal}\n@@ -1653,2 +1653,2 @@\n-     * update the underlying database; instead the <code>updateRow<\/code> or\n-     * <code>insertRow<\/code> methods are called to update the database.\n+     * update the underlying database; instead the {@code updateRow} or\n+     * {@code insertRow} methods are called to update the database.\n@@ -1669,1 +1669,1 @@\n-     * Updates the designated column with a <code>String<\/code> value.\n+     * Updates the designated column with a {@code String} value.\n@@ -1672,2 +1672,2 @@\n-     * update the underlying database; instead the <code>updateRow<\/code> or\n-     * <code>insertRow<\/code> methods are called to update the database.\n+     * update the underlying database; instead the {@code updateRow} or\n+     * {@code insertRow} methods are called to update the database.\n@@ -1688,1 +1688,1 @@\n-     * Updates the designated column with a <code>byte<\/code> array value.\n+     * Updates the designated column with a {@code byte} array value.\n@@ -1691,2 +1691,2 @@\n-     * update the underlying database; instead the <code>updateRow<\/code> or\n-     * <code>insertRow<\/code> methods are called to update the database.\n+     * update the underlying database; instead the {@code updateRow} or\n+     * {@code insertRow} methods are called to update the database.\n@@ -1707,1 +1707,1 @@\n-     * Updates the designated column with a <code>java.sql.Date<\/code> value.\n+     * Updates the designated column with a {@code java.sql.Date} value.\n@@ -1710,2 +1710,2 @@\n-     * update the underlying database; instead the <code>updateRow<\/code> or\n-     * <code>insertRow<\/code> methods are called to update the database.\n+     * update the underlying database; instead the {@code updateRow} or\n+     * {@code insertRow} methods are called to update the database.\n@@ -1726,1 +1726,1 @@\n-     * Updates the designated column with a <code>java.sql.Time<\/code> value.\n+     * Updates the designated column with a {@code java.sql.Time} value.\n@@ -1729,2 +1729,2 @@\n-     * update the underlying database; instead the <code>updateRow<\/code> or\n-     * <code>insertRow<\/code> methods are called to update the database.\n+     * update the underlying database; instead the {@code updateRow} or\n+     * {@code insertRow} methods are called to update the database.\n@@ -1745,1 +1745,1 @@\n-     * Updates the designated column with a <code>java.sql.Timestamp<\/code>\n+     * Updates the designated column with a {@code java.sql.Timestamp}\n@@ -1749,2 +1749,2 @@\n-     * update the underlying database; instead the <code>updateRow<\/code> or\n-     * <code>insertRow<\/code> methods are called to update the database.\n+     * update the underlying database; instead the {@code updateRow} or\n+     * {@code insertRow} methods are called to update the database.\n@@ -1770,2 +1770,2 @@\n-     * update the underlying database; instead the <code>updateRow<\/code> or\n-     * <code>insertRow<\/code> methods are called to update the database.\n+     * update the underlying database; instead the {@code updateRow} or\n+     * {@code insertRow} methods are called to update the database.\n@@ -1793,2 +1793,2 @@\n-     * update the underlying database; instead the <code>updateRow<\/code> or\n-     * <code>insertRow<\/code> methods are called to update the database.\n+     * update the underlying database; instead the {@code updateRow} or\n+     * {@code insertRow} methods are called to update the database.\n@@ -1816,2 +1816,2 @@\n-     * update the underlying database; instead the <code>updateRow<\/code> or\n-     * <code>insertRow<\/code> methods are called to update the database.\n+     * update the underlying database; instead the {@code updateRow} or\n+     * {@code insertRow} methods are called to update the database.\n@@ -1835,1 +1835,1 @@\n-     * Updates the designated column with an <code>Object<\/code> value.\n+     * Updates the designated column with an {@code Object} value.\n@@ -1839,2 +1839,2 @@\n-     * update the underlying database; instead the <code>updateRow<\/code> or\n-     * <code>insertRow<\/code> methods are called to update the database.\n+     * update the underlying database; instead the {@code updateRow} or\n+     * {@code insertRow} methods are called to update the database.\n@@ -1842,1 +1842,1 @@\n-     * If the second argument is an <code>InputStream<\/code> then the stream must contain\n+     * If the second argument is an {@code InputStream} then the stream must contain\n@@ -1844,1 +1844,1 @@\n-     * <code>Reader<\/code> then the reader must contain the number of characters specified\n+     * {@code Reader} then the reader must contain the number of characters specified\n@@ -1846,1 +1846,1 @@\n-     * <code>SQLException<\/code> when the statement is executed.\n+     * {@code SQLException} when the statement is executed.\n@@ -1850,1 +1850,1 @@\n-     * @param scaleOrLength for an object of <code>java.math.BigDecimal<\/code> ,\n+     * @param scaleOrLength for an object of {@code java.math.BigDecimal} ,\n@@ -1852,1 +1852,1 @@\n-     *          Java Object types <code>InputStream<\/code> and <code>Reader<\/code>,\n+     *          Java Object types {@code InputStream} and {@code Reader},\n@@ -1868,1 +1868,1 @@\n-     * Updates the designated column with an <code>Object<\/code> value.\n+     * Updates the designated column with an {@code Object} value.\n@@ -1872,2 +1872,2 @@\n-     * update the underlying database; instead the <code>updateRow<\/code> or\n-     * <code>insertRow<\/code> methods are called to update the database.\n+     * update the underlying database; instead the {@code updateRow} or\n+     * {@code insertRow} methods are called to update the database.\n@@ -1888,1 +1888,1 @@\n-     * Updates the designated column with a <code>null<\/code> value.\n+     * Updates the designated column with a {@code null} value.\n@@ -1891,2 +1891,2 @@\n-     * update the underlying database; instead the <code>updateRow<\/code> or\n-     * <code>insertRow<\/code> methods are called to update the database.\n+     * update the underlying database; instead the {@code updateRow} or\n+     * {@code insertRow} methods are called to update the database.\n@@ -1906,1 +1906,1 @@\n-     * Updates the designated column with a <code>boolean<\/code> value.\n+     * Updates the designated column with a {@code boolean} value.\n@@ -1909,2 +1909,2 @@\n-     * update the underlying database; instead the <code>updateRow<\/code> or\n-     * <code>insertRow<\/code> methods are called to update the database.\n+     * update the underlying database; instead the {@code updateRow} or\n+     * {@code insertRow} methods are called to update the database.\n@@ -1925,1 +1925,1 @@\n-     * Updates the designated column with a <code>byte<\/code> value.\n+     * Updates the designated column with a {@code byte} value.\n@@ -1928,2 +1928,2 @@\n-     * update the underlying database; instead the <code>updateRow<\/code> or\n-     * <code>insertRow<\/code> methods are called to update the database.\n+     * update the underlying database; instead the {@code updateRow} or\n+     * {@code insertRow} methods are called to update the database.\n@@ -1944,1 +1944,1 @@\n-     * Updates the designated column with a <code>short<\/code> value.\n+     * Updates the designated column with a {@code short} value.\n@@ -1947,2 +1947,2 @@\n-     * update the underlying database; instead the <code>updateRow<\/code> or\n-     * <code>insertRow<\/code> methods are called to update the database.\n+     * update the underlying database; instead the {@code updateRow} or\n+     * {@code insertRow} methods are called to update the database.\n@@ -1963,1 +1963,1 @@\n-     * Updates the designated column with an <code>int<\/code> value.\n+     * Updates the designated column with an {@code int} value.\n@@ -1966,2 +1966,2 @@\n-     * update the underlying database; instead the <code>updateRow<\/code> or\n-     * <code>insertRow<\/code> methods are called to update the database.\n+     * update the underlying database; instead the {@code updateRow} or\n+     * {@code insertRow} methods are called to update the database.\n@@ -1982,1 +1982,1 @@\n-     * Updates the designated column with a <code>long<\/code> value.\n+     * Updates the designated column with a {@code long} value.\n@@ -1985,2 +1985,2 @@\n-     * update the underlying database; instead the <code>updateRow<\/code> or\n-     * <code>insertRow<\/code> methods are called to update the database.\n+     * update the underlying database; instead the {@code updateRow} or\n+     * {@code insertRow} methods are called to update the database.\n@@ -2001,1 +2001,1 @@\n-     * Updates the designated column with a <code>float <\/code> value.\n+     * Updates the designated column with a {@code float} value.\n@@ -2004,2 +2004,2 @@\n-     * update the underlying database; instead the <code>updateRow<\/code> or\n-     * <code>insertRow<\/code> methods are called to update the database.\n+     * update the underlying database; instead the {@code updateRow} or\n+     * {@code insertRow} methods are called to update the database.\n@@ -2020,1 +2020,1 @@\n-     * Updates the designated column with a <code>double<\/code> value.\n+     * Updates the designated column with a {@code double} value.\n@@ -2023,2 +2023,2 @@\n-     * update the underlying database; instead the <code>updateRow<\/code> or\n-     * <code>insertRow<\/code> methods are called to update the database.\n+     * update the underlying database; instead the {@code updateRow} or\n+     * {@code insertRow} methods are called to update the database.\n@@ -2039,1 +2039,1 @@\n-     * Updates the designated column with a <code>java.sql.BigDecimal<\/code>\n+     * Updates the designated column with a {@code java.sql.BigDecimal}\n@@ -2043,2 +2043,2 @@\n-     * update the underlying database; instead the <code>updateRow<\/code> or\n-     * <code>insertRow<\/code> methods are called to update the database.\n+     * update the underlying database; instead the {@code updateRow} or\n+     * {@code insertRow} methods are called to update the database.\n@@ -2059,1 +2059,1 @@\n-     * Updates the designated column with a <code>String<\/code> value.\n+     * Updates the designated column with a {@code String} value.\n@@ -2062,2 +2062,2 @@\n-     * update the underlying database; instead the <code>updateRow<\/code> or\n-     * <code>insertRow<\/code> methods are called to update the database.\n+     * update the underlying database; instead the {@code updateRow} or\n+     * {@code insertRow} methods are called to update the database.\n@@ -2082,2 +2082,2 @@\n-     * update the underlying database; instead the <code>updateRow<\/code>\n-     * or <code>insertRow<\/code> methods are called to update the database.\n+     * update the underlying database; instead the {@code updateRow}\n+     * or {@code insertRow} methods are called to update the database.\n@@ -2098,1 +2098,1 @@\n-     * Updates the designated column with a <code>java.sql.Date<\/code> value.\n+     * Updates the designated column with a {@code java.sql.Date} value.\n@@ -2101,2 +2101,2 @@\n-     * update the underlying database; instead the <code>updateRow<\/code> or\n-     * <code>insertRow<\/code> methods are called to update the database.\n+     * update the underlying database; instead the {@code updateRow} or\n+     * {@code insertRow} methods are called to update the database.\n@@ -2117,1 +2117,1 @@\n-     * Updates the designated column with a <code>java.sql.Time<\/code> value.\n+     * Updates the designated column with a {@code java.sql.Time} value.\n@@ -2120,2 +2120,2 @@\n-     * update the underlying database; instead the <code>updateRow<\/code> or\n-     * <code>insertRow<\/code> methods are called to update the database.\n+     * update the underlying database; instead the {@code updateRow} or\n+     * {@code insertRow} methods are called to update the database.\n@@ -2136,1 +2136,1 @@\n-     * Updates the designated column with a <code>java.sql.Timestamp<\/code>\n+     * Updates the designated column with a {@code java.sql.Timestamp}\n@@ -2140,2 +2140,2 @@\n-     * update the underlying database; instead the <code>updateRow<\/code> or\n-     * <code>insertRow<\/code> methods are called to update the database.\n+     * update the underlying database; instead the {@code updateRow} or\n+     * {@code insertRow} methods are called to update the database.\n@@ -2161,2 +2161,2 @@\n-     * update the underlying database; instead the <code>updateRow<\/code> or\n-     * <code>insertRow<\/code> methods are called to update the database.\n+     * update the underlying database; instead the {@code updateRow} or\n+     * {@code insertRow} methods are called to update the database.\n@@ -2184,2 +2184,2 @@\n-     * update the underlying database; instead the <code>updateRow<\/code> or\n-     * <code>insertRow<\/code> methods are called to update the database.\n+     * update the underlying database; instead the {@code updateRow} or\n+     * {@code insertRow} methods are called to update the database.\n@@ -2207,2 +2207,2 @@\n-     * update the underlying database; instead the <code>updateRow<\/code> or\n-     * <code>insertRow<\/code> methods are called to update the database.\n+     * update the underlying database; instead the {@code updateRow} or\n+     * {@code insertRow} methods are called to update the database.\n@@ -2211,1 +2211,1 @@\n-     * @param reader the <code>java.io.Reader<\/code> object containing\n+     * @param reader the {@code java.io.Reader} object containing\n@@ -2227,1 +2227,1 @@\n-     * Updates the designated column with an <code>Object<\/code> value.\n+     * Updates the designated column with an {@code Object} value.\n@@ -2231,2 +2231,2 @@\n-     * update the underlying database; instead the <code>updateRow<\/code> or\n-     * <code>insertRow<\/code> methods are called to update the database.\n+     * update the underlying database; instead the {@code updateRow} or\n+     * {@code insertRow} methods are called to update the database.\n@@ -2234,1 +2234,1 @@\n-     * If the second argument is an <code>InputStream<\/code> then the stream must contain\n+     * If the second argument is an {@code InputStream} then the stream must contain\n@@ -2236,1 +2236,1 @@\n-     * <code>Reader<\/code> then the reader must contain the number of characters specified\n+     * {@code Reader} then the reader must contain the number of characters specified\n@@ -2238,1 +2238,1 @@\n-     * <code>SQLException<\/code> when the statement is executed.\n+     * {@code SQLException} when the statement is executed.\n@@ -2242,1 +2242,1 @@\n-     * @param scaleOrLength for an object of <code>java.math.BigDecimal<\/code> ,\n+     * @param scaleOrLength for an object of {@code java.math.BigDecimal} ,\n@@ -2244,1 +2244,1 @@\n-     *          Java Object types <code>InputStream<\/code> and <code>Reader<\/code>,\n+     *          Java Object types {@code InputStream} and {@code Reader},\n@@ -2260,1 +2260,1 @@\n-     * Updates the designated column with an <code>Object<\/code> value.\n+     * Updates the designated column with an {@code Object} value.\n@@ -2264,2 +2264,2 @@\n-     * update the underlying database; instead the <code>updateRow<\/code> or\n-     * <code>insertRow<\/code> methods are called to update the database.\n+     * update the underlying database; instead the {@code updateRow} or\n+     * {@code insertRow} methods are called to update the database.\n@@ -2281,1 +2281,1 @@\n-     * <code>ResultSet<\/code> object and into the database.\n+     * {@code ResultSet} object and into the database.\n@@ -2298,1 +2298,1 @@\n-     * current row of this <code>ResultSet<\/code> object.\n+     * current row of this {@code ResultSet} object.\n@@ -2312,1 +2312,1 @@\n-     * Deletes the current row from this <code>ResultSet<\/code> object\n+     * Deletes the current row from this {@code ResultSet} object\n@@ -2331,1 +2331,1 @@\n-     * <P>The <code>refreshRow<\/code> method provides a way for an\n+     * <P>The {@code refreshRow} method provides a way for an\n@@ -2334,1 +2334,1 @@\n-     * database.  An application may want to call <code>refreshRow<\/code> when\n+     * database.  An application may want to call {@code refreshRow} when\n@@ -2341,1 +2341,1 @@\n-     * level and cursor sensitivity.  If <code>refreshRow<\/code> is called after\n+     * level and cursor sensitivity.  If {@code refreshRow} is called after\n@@ -2343,1 +2343,1 @@\n-     * the method <code>updateRow<\/code>, then the\n+     * the method {@code updateRow}, then the\n@@ -2345,1 +2345,1 @@\n-     * <code>refreshRow<\/code> frequently will likely slow performance.\n+     * {@code refreshRow} frequently will likely slow performance.\n@@ -2360,1 +2360,1 @@\n-     * <code>ResultSet<\/code> object.\n+     * {@code ResultSet} object.\n@@ -2363,1 +2363,1 @@\n-     * the method <code>updateRow<\/code> to roll back\n+     * the method {@code updateRow} to roll back\n@@ -2365,1 +2365,1 @@\n-     * <code>updateRow<\/code> has already been called, this method has no\n+     * {@code updateRow} has already been called, this method has no\n@@ -2389,1 +2389,1 @@\n-     * and <code>insertRow<\/code> methods may be\n+     * and {@code insertRow} methods may be\n@@ -2392,1 +2392,1 @@\n-     * called before calling <code>insertRow<\/code>.\n+     * called before calling {@code insertRow}.\n@@ -2420,2 +2420,2 @@\n-     * Retrieves the <code>Statement<\/code> object that produced this\n-     * <code>ResultSet<\/code> object.\n+     * Retrieves the {@code Statement} object that produced this\n+     * {@code ResultSet} object.\n@@ -2423,2 +2423,2 @@\n-     * <code>DatabaseMetaData<\/code> method, this method  may return\n-     * <code>null<\/code>.\n+     * {@code DatabaseMetaData} method, this method  may return\n+     * {@code null}.\n@@ -2426,2 +2426,2 @@\n-     * @return the <code>Statement<\/code> object that produced\n-     * this <code>ResultSet<\/code> object or <code>null<\/code>\n+     * @return the {@code Statement} object that produced\n+     * this {@code ResultSet} object or {@code null}\n@@ -2437,1 +2437,1 @@\n-     * of this <code>ResultSet<\/code> object as an <code>Object<\/code>\n+     * of this {@code ResultSet} object as an {@code Object}\n@@ -2439,3 +2439,3 @@\n-     * If the value is an SQL <code>NULL<\/code>,\n-     * the driver returns a Java <code>null<\/code>.\n-     * This method uses the given <code>Map<\/code> object\n+     * If the value is an SQL {@code NULL},\n+     * the driver returns a Java {@code null}.\n+     * This method uses the given {@code Map} object\n@@ -2446,1 +2446,1 @@\n-     * @param map a <code>java.util.Map<\/code> object that contains the mapping\n+     * @param map a {@code java.util.Map} object that contains the mapping\n@@ -2448,1 +2448,1 @@\n-     * @return an <code>Object<\/code> in the Java programming language\n+     * @return an {@code Object} in the Java programming language\n@@ -2462,1 +2462,1 @@\n-     * of this <code>ResultSet<\/code> object as a <code>Ref<\/code> object\n+     * of this {@code ResultSet} object as a {@code Ref} object\n@@ -2466,1 +2466,1 @@\n-     * @return a <code>Ref<\/code> object representing an SQL <code>REF<\/code>\n+     * @return a {@code Ref} object representing an SQL {@code REF}\n@@ -2479,1 +2479,1 @@\n-     * of this <code>ResultSet<\/code> object as a <code>Blob<\/code> object\n+     * of this {@code ResultSet} object as a {@code Blob} object\n@@ -2483,2 +2483,2 @@\n-     * @return a <code>Blob<\/code> object representing the SQL\n-     *         <code>BLOB<\/code> value in the specified column\n+     * @return a {@code Blob} object representing the SQL\n+     *         {@code BLOB} value in the specified column\n@@ -2496,1 +2496,1 @@\n-     * of this <code>ResultSet<\/code> object as a <code>Clob<\/code> object\n+     * of this {@code ResultSet} object as a {@code Clob} object\n@@ -2500,2 +2500,2 @@\n-     * @return a <code>Clob<\/code> object representing the SQL\n-     *         <code>CLOB<\/code> value in the specified column\n+     * @return a {@code Clob} object representing the SQL\n+     *         {@code CLOB} value in the specified column\n@@ -2513,1 +2513,1 @@\n-     * of this <code>ResultSet<\/code> object as an <code>Array<\/code> object\n+     * of this {@code ResultSet} object as an {@code Array} object\n@@ -2517,2 +2517,2 @@\n-     * @return an <code>Array<\/code> object representing the SQL\n-     *         <code>ARRAY<\/code> value in the specified column\n+     * @return an {@code Array} object representing the SQL\n+     *         {@code ARRAY} value in the specified column\n@@ -2530,1 +2530,1 @@\n-     * of this <code>ResultSet<\/code> object as an <code>Object<\/code>\n+     * of this {@code ResultSet} object as an {@code Object}\n@@ -2532,3 +2532,3 @@\n-     * If the value is an SQL <code>NULL<\/code>,\n-     * the driver returns a Java <code>null<\/code>.\n-     * This method uses the specified <code>Map<\/code> object for\n+     * If the value is an SQL {@code NULL},\n+     * the driver returns a Java {@code null}.\n+     * This method uses the specified {@code Map} object for\n@@ -2538,1 +2538,1 @@\n-     * @param map a <code>java.util.Map<\/code> object that contains the mapping\n+     * @param map a {@code java.util.Map} object that contains the mapping\n@@ -2540,1 +2540,1 @@\n-     * @return an <code>Object<\/code> representing the SQL value in the\n+     * @return an {@code Object} representing the SQL value in the\n@@ -2554,1 +2554,1 @@\n-     * of this <code>ResultSet<\/code> object as a <code>Ref<\/code> object\n+     * of this {@code ResultSet} object as a {@code Ref} object\n@@ -2558,1 +2558,1 @@\n-     * @return a <code>Ref<\/code> object representing the SQL <code>REF<\/code>\n+     * @return a {@code Ref} object representing the SQL {@code REF}\n@@ -2571,1 +2571,1 @@\n-     * of this <code>ResultSet<\/code> object as a <code>Blob<\/code> object\n+     * of this {@code ResultSet} object as a {@code Blob} object\n@@ -2575,1 +2575,1 @@\n-     * @return a <code>Blob<\/code> object representing the SQL <code>BLOB<\/code>\n+     * @return a {@code Blob} object representing the SQL {@code BLOB}\n@@ -2588,1 +2588,1 @@\n-     * of this <code>ResultSet<\/code> object as a <code>Clob<\/code> object\n+     * of this {@code ResultSet} object as a {@code Clob} object\n@@ -2592,1 +2592,1 @@\n-     * @return a <code>Clob<\/code> object representing the SQL <code>CLOB<\/code>\n+     * @return a {@code Clob} object representing the SQL {@code CLOB}\n@@ -2605,1 +2605,1 @@\n-     * of this <code>ResultSet<\/code> object as an <code>Array<\/code> object\n+     * of this {@code ResultSet} object as an {@code Array} object\n@@ -2609,1 +2609,1 @@\n-     * @return an <code>Array<\/code> object representing the SQL <code>ARRAY<\/code> value in\n+     * @return an {@code Array} object representing the SQL {@code ARRAY} value in\n@@ -2622,1 +2622,1 @@\n-     * of this <code>ResultSet<\/code> object as a <code>java.sql.Date<\/code> object\n+     * of this {@code ResultSet} object as a {@code java.sql.Date} object\n@@ -2629,1 +2629,1 @@\n-     * @param cal the <code>java.util.Calendar<\/code> object\n+     * @param cal the {@code java.util.Calendar} object\n@@ -2631,3 +2631,3 @@\n-     * @return the column value as a <code>java.sql.Date<\/code> object;\n-     * if the value is SQL <code>NULL<\/code>,\n-     * the value returned is <code>null<\/code> in the Java programming language\n+     * @return the column value as a {@code java.sql.Date} object;\n+     * if the value is SQL {@code NULL},\n+     * the value returned is {@code null} in the Java programming language\n@@ -2643,1 +2643,1 @@\n-     * of this <code>ResultSet<\/code> object as a <code>java.sql.Date<\/code> object\n+     * of this {@code ResultSet} object as a {@code java.sql.Date} object\n@@ -2650,1 +2650,1 @@\n-     * @param cal the <code>java.util.Calendar<\/code> object\n+     * @param cal the {@code java.util.Calendar} object\n@@ -2652,3 +2652,3 @@\n-     * @return the column value as a <code>java.sql.Date<\/code> object;\n-     * if the value is SQL <code>NULL<\/code>,\n-     * the value returned is <code>null<\/code> in the Java programming language\n+     * @return the column value as a {@code java.sql.Date} object;\n+     * if the value is SQL {@code NULL},\n+     * the value returned is {@code null} in the Java programming language\n@@ -2664,1 +2664,1 @@\n-     * of this <code>ResultSet<\/code> object as a <code>java.sql.Time<\/code> object\n+     * of this {@code ResultSet} object as a {@code java.sql.Time} object\n@@ -2671,1 +2671,1 @@\n-     * @param cal the <code>java.util.Calendar<\/code> object\n+     * @param cal the {@code java.util.Calendar} object\n@@ -2673,3 +2673,3 @@\n-     * @return the column value as a <code>java.sql.Time<\/code> object;\n-     * if the value is SQL <code>NULL<\/code>,\n-     * the value returned is <code>null<\/code> in the Java programming language\n+     * @return the column value as a {@code java.sql.Time} object;\n+     * if the value is SQL {@code NULL},\n+     * the value returned is {@code null} in the Java programming language\n@@ -2685,1 +2685,1 @@\n-     * of this <code>ResultSet<\/code> object as a <code>java.sql.Time<\/code> object\n+     * of this {@code ResultSet} object as a {@code java.sql.Time} object\n@@ -2692,1 +2692,1 @@\n-     * @param cal the <code>java.util.Calendar<\/code> object\n+     * @param cal the {@code java.util.Calendar} object\n@@ -2694,3 +2694,3 @@\n-     * @return the column value as a <code>java.sql.Time<\/code> object;\n-     * if the value is SQL <code>NULL<\/code>,\n-     * the value returned is <code>null<\/code> in the Java programming language\n+     * @return the column value as a {@code java.sql.Time} object;\n+     * if the value is SQL {@code NULL},\n+     * the value returned is {@code null} in the Java programming language\n@@ -2706,1 +2706,1 @@\n-     * of this <code>ResultSet<\/code> object as a <code>java.sql.Timestamp<\/code> object\n+     * of this {@code ResultSet} object as a {@code java.sql.Timestamp} object\n@@ -2713,1 +2713,1 @@\n-     * @param cal the <code>java.util.Calendar<\/code> object\n+     * @param cal the {@code java.util.Calendar} object\n@@ -2715,3 +2715,3 @@\n-     * @return the column value as a <code>java.sql.Timestamp<\/code> object;\n-     * if the value is SQL <code>NULL<\/code>,\n-     * the value returned is <code>null<\/code> in the Java programming language\n+     * @return the column value as a {@code java.sql.Timestamp} object;\n+     * if the value is SQL {@code NULL},\n+     * the value returned is {@code null} in the Java programming language\n@@ -2728,1 +2728,1 @@\n-     * of this <code>ResultSet<\/code> object as a <code>java.sql.Timestamp<\/code> object\n+     * of this {@code ResultSet} object as a {@code java.sql.Timestamp} object\n@@ -2735,1 +2735,1 @@\n-     * @param cal the <code>java.util.Calendar<\/code> object\n+     * @param cal the {@code java.util.Calendar} object\n@@ -2737,3 +2737,3 @@\n-     * @return the column value as a <code>java.sql.Timestamp<\/code> object;\n-     * if the value is SQL <code>NULL<\/code>,\n-     * the value returned is <code>null<\/code> in the Java programming language\n+     * @return the column value as a {@code java.sql.Timestamp} object;\n+     * if the value is SQL {@code NULL},\n+     * the value returned is {@code null} in the Java programming language\n@@ -2751,1 +2751,1 @@\n-     * The constant indicating that open <code>ResultSet<\/code> objects with this\n+     * The constant indicating that open {@code ResultSet} objects with this\n@@ -2759,1 +2759,1 @@\n-     * The constant indicating that open <code>ResultSet<\/code> objects with this\n+     * The constant indicating that open {@code ResultSet} objects with this\n@@ -2768,1 +2768,1 @@\n-     * of this <code>ResultSet<\/code> object as a <code>java.net.URL<\/code>\n+     * of this {@code ResultSet} object as a {@code java.net.URL}\n@@ -2772,3 +2772,3 @@\n-     * @return the column value as a <code>java.net.URL<\/code> object;\n-     * if the value is SQL <code>NULL<\/code>,\n-     * the value returned is <code>null<\/code> in the Java programming language\n+     * @return the column value as a {@code java.net.URL} object;\n+     * if the value is SQL {@code NULL},\n+     * the value returned is {@code null} in the Java programming language\n@@ -2786,1 +2786,1 @@\n-     * of this <code>ResultSet<\/code> object as a <code>java.net.URL<\/code>\n+     * of this {@code ResultSet} object as a {@code java.net.URL}\n@@ -2790,3 +2790,3 @@\n-     * @return the column value as a <code>java.net.URL<\/code> object;\n-     * if the value is SQL <code>NULL<\/code>,\n-     * the value returned is <code>null<\/code> in the Java programming language\n+     * @return the column value as a {@code java.net.URL} object;\n+     * if the value is SQL {@code NULL},\n+     * the value returned is {@code null} in the Java programming language\n@@ -2803,1 +2803,1 @@\n-     * Updates the designated column with a <code>java.sql.Ref<\/code> value.\n+     * Updates the designated column with a {@code java.sql.Ref} value.\n@@ -2806,2 +2806,2 @@\n-     * update the underlying database; instead the <code>updateRow<\/code> or\n-     * <code>insertRow<\/code> methods are called to update the database.\n+     * update the underlying database; instead the {@code updateRow} or\n+     * {@code insertRow} methods are called to update the database.\n@@ -2822,1 +2822,1 @@\n-     * Updates the designated column with a <code>java.sql.Ref<\/code> value.\n+     * Updates the designated column with a {@code java.sql.Ref} value.\n@@ -2825,2 +2825,2 @@\n-     * update the underlying database; instead the <code>updateRow<\/code> or\n-     * <code>insertRow<\/code> methods are called to update the database.\n+     * update the underlying database; instead the {@code updateRow} or\n+     * {@code insertRow} methods are called to update the database.\n@@ -2841,1 +2841,1 @@\n-     * Updates the designated column with a <code>java.sql.Blob<\/code> value.\n+     * Updates the designated column with a {@code java.sql.Blob} value.\n@@ -2844,2 +2844,2 @@\n-     * update the underlying database; instead the <code>updateRow<\/code> or\n-     * <code>insertRow<\/code> methods are called to update the database.\n+     * update the underlying database; instead the {@code updateRow} or\n+     * {@code insertRow} methods are called to update the database.\n@@ -2860,1 +2860,1 @@\n-     * Updates the designated column with a <code>java.sql.Blob<\/code> value.\n+     * Updates the designated column with a {@code java.sql.Blob} value.\n@@ -2863,2 +2863,2 @@\n-     * update the underlying database; instead the <code>updateRow<\/code> or\n-     * <code>insertRow<\/code> methods are called to update the database.\n+     * update the underlying database; instead the {@code updateRow} or\n+     * {@code insertRow} methods are called to update the database.\n@@ -2879,1 +2879,1 @@\n-     * Updates the designated column with a <code>java.sql.Clob<\/code> value.\n+     * Updates the designated column with a {@code java.sql.Clob} value.\n@@ -2882,2 +2882,2 @@\n-     * update the underlying database; instead the <code>updateRow<\/code> or\n-     * <code>insertRow<\/code> methods are called to update the database.\n+     * update the underlying database; instead the {@code updateRow} or\n+     * {@code insertRow} methods are called to update the database.\n@@ -2898,1 +2898,1 @@\n-     * Updates the designated column with a <code>java.sql.Clob<\/code> value.\n+     * Updates the designated column with a {@code java.sql.Clob} value.\n@@ -2901,2 +2901,2 @@\n-     * update the underlying database; instead the <code>updateRow<\/code> or\n-     * <code>insertRow<\/code> methods are called to update the database.\n+     * update the underlying database; instead the {@code updateRow} or\n+     * {@code insertRow} methods are called to update the database.\n@@ -2917,1 +2917,1 @@\n-     * Updates the designated column with a <code>java.sql.Array<\/code> value.\n+     * Updates the designated column with a {@code java.sql.Array} value.\n@@ -2920,2 +2920,2 @@\n-     * update the underlying database; instead the <code>updateRow<\/code> or\n-     * <code>insertRow<\/code> methods are called to update the database.\n+     * update the underlying database; instead the {@code updateRow} or\n+     * {@code insertRow} methods are called to update the database.\n@@ -2936,1 +2936,1 @@\n-     * Updates the designated column with a <code>java.sql.Array<\/code> value.\n+     * Updates the designated column with a {@code java.sql.Array} value.\n@@ -2939,2 +2939,2 @@\n-     * update the underlying database; instead the <code>updateRow<\/code> or\n-     * <code>insertRow<\/code> methods are called to update the database.\n+     * update the underlying database; instead the {@code updateRow} or\n+     * {@code insertRow} methods are called to update the database.\n@@ -2958,1 +2958,1 @@\n-     * <code>ResultSet<\/code> object as a <code>java.sql.RowId<\/code> object in the Java\n+     * {@code ResultSet} object as a {@code java.sql.RowId} object in the Java\n@@ -2962,2 +2962,2 @@\n-     * @return the column value; if the value is a SQL <code>NULL<\/code> the\n-     *     value returned is <code>null<\/code>\n+     * @return the column value; if the value is a SQL {@code NULL} the\n+     *     value returned is {@code null}\n@@ -2975,1 +2975,1 @@\n-     * <code>ResultSet<\/code> object as a <code>java.sql.RowId<\/code> object in the Java\n+     * {@code ResultSet} object as a {@code java.sql.RowId} object in the Java\n@@ -2979,2 +2979,2 @@\n-     * @return the column value ; if the value is a SQL <code>NULL<\/code> the\n-     *     value returned is <code>null<\/code>\n+     * @return the column value ; if the value is a SQL {@code NULL} the\n+     *     value returned is {@code null}\n@@ -2991,1 +2991,1 @@\n-     * Updates the designated column with a <code>RowId<\/code> value. The updater\n+     * Updates the designated column with a {@code RowId} value. The updater\n@@ -2994,1 +2994,1 @@\n-     * the <code>updateRow<\/code> or <code>insertRow<\/code> methods are called\n+     * the {@code updateRow} or {@code insertRow} methods are called\n@@ -3010,1 +3010,1 @@\n-     * Updates the designated column with a <code>RowId<\/code> value. The updater\n+     * Updates the designated column with a {@code RowId} value. The updater\n@@ -3013,1 +3013,1 @@\n-     * the <code>updateRow<\/code> or <code>insertRow<\/code> methods are called\n+     * the {@code updateRow} or {@code insertRow} methods are called\n@@ -3029,2 +3029,2 @@\n-     * Retrieves the holdability of this <code>ResultSet<\/code> object\n-     * @return  either <code>ResultSet.HOLD_CURSORS_OVER_COMMIT<\/code> or <code>ResultSet.CLOSE_CURSORS_AT_COMMIT<\/code>\n+     * Retrieves the holdability of this {@code ResultSet} object\n+     * @return  either {@code ResultSet.HOLD_CURSORS_OVER_COMMIT} or {@code ResultSet.CLOSE_CURSORS_AT_COMMIT}\n@@ -3038,1 +3038,1 @@\n-     * Retrieves whether this <code>ResultSet<\/code> object has been closed. A <code>ResultSet<\/code> is closed if the\n+     * Retrieves whether this {@code ResultSet} object has been closed. A {@code ResultSet} is closed if the\n@@ -3041,1 +3041,1 @@\n-     * @return true if this <code>ResultSet<\/code> object is closed; false if it is still open\n+     * @return true if this {@code ResultSet} object is closed; false if it is still open\n@@ -3048,3 +3048,3 @@\n-     * Updates the designated column with a <code>String<\/code> value.\n-     * It is intended for use when updating <code>NCHAR<\/code>,<code>NVARCHAR<\/code>\n-     * and <code>LONGNVARCHAR<\/code> columns.\n+     * Updates the designated column with a {@code String} value.\n+     * It is intended for use when updating {@code NCHAR},{@code NVARCHAR}\n+     * and {@code LONGNVARCHAR} columns.\n@@ -3053,2 +3053,2 @@\n-     * update the underlying database; instead the <code>updateRow<\/code> or\n-     * <code>insertRow<\/code> methods are called to update the database.\n+     * update the underlying database; instead the {@code updateRow} or\n+     * {@code insertRow} methods are called to update the database.\n@@ -3062,1 +3062,1 @@\n-     * the result set concurrency is <code>CONCUR_READ_ONLY<\/code>\n+     * the result set concurrency is {@code CONCUR_READ_ONLY}\n@@ -3071,3 +3071,3 @@\n-     * Updates the designated column with a <code>String<\/code> value.\n-     * It is intended for use when updating <code>NCHAR<\/code>,<code>NVARCHAR<\/code>\n-     * and <code>LONGNVARCHAR<\/code> columns.\n+     * Updates the designated column with a {@code String} value.\n+     * It is intended for use when updating {@code NCHAR},{@code NVARCHAR}\n+     * and {@code LONGNVARCHAR} columns.\n@@ -3076,2 +3076,2 @@\n-     * update the underlying database; instead the <code>updateRow<\/code> or\n-     * <code>insertRow<\/code> methods are called to update the database.\n+     * update the underlying database; instead the {@code updateRow} or\n+     * {@code insertRow} methods are called to update the database.\n@@ -3085,1 +3085,1 @@\n-     * the result set concurrency is <CODE>CONCUR_READ_ONLY<\/code>\n+     * the result set concurrency is {@code CONCUR_READ_ONLY}\n@@ -3094,1 +3094,1 @@\n-     * Updates the designated column with a <code>java.sql.NClob<\/code> value.\n+     * Updates the designated column with a {@code java.sql.NClob} value.\n@@ -3097,2 +3097,2 @@\n-     * update the underlying database; instead the <code>updateRow<\/code> or\n-     * <code>insertRow<\/code> methods are called to update the database.\n+     * update the underlying database; instead the {@code updateRow} or\n+     * {@code insertRow} methods are called to update the database.\n@@ -3107,1 +3107,1 @@\n-     * the result set concurrency is <code>CONCUR_READ_ONLY<\/code>\n+     * the result set concurrency is {@code CONCUR_READ_ONLY}\n@@ -3115,1 +3115,1 @@\n-     * Updates the designated column with a <code>java.sql.NClob<\/code> value.\n+     * Updates the designated column with a {@code java.sql.NClob} value.\n@@ -3118,2 +3118,2 @@\n-     * update the underlying database; instead the <code>updateRow<\/code> or\n-     * <code>insertRow<\/code> methods are called to update the database.\n+     * update the underlying database; instead the {@code updateRow} or\n+     * {@code insertRow} methods are called to update the database.\n@@ -3128,1 +3128,1 @@\n-     * the result set concurrency is <code>CONCUR_READ_ONLY<\/code>\n+     * the result set concurrency is {@code CONCUR_READ_ONLY}\n@@ -3137,1 +3137,1 @@\n-     * of this <code>ResultSet<\/code> object as a <code>NClob<\/code> object\n+     * of this {@code ResultSet} object as a {@code NClob} object\n@@ -3141,2 +3141,2 @@\n-     * @return a <code>NClob<\/code> object representing the SQL\n-     *         <code>NCLOB<\/code> value in the specified column\n+     * @return a {@code NClob} object representing the SQL\n+     *         {@code NCLOB} value in the specified column\n@@ -3156,1 +3156,1 @@\n-     * of this <code>ResultSet<\/code> object as a <code>NClob<\/code> object\n+     * of this {@code ResultSet} object as a {@code NClob} object\n@@ -3160,1 +3160,1 @@\n-     * @return a <code>NClob<\/code> object representing the SQL <code>NCLOB<\/code>\n+     * @return a {@code NClob} object representing the SQL {@code NCLOB}\n@@ -3175,2 +3175,2 @@\n-     *  this <code>ResultSet<\/code> as a\n-     * <code>java.sql.SQLXML<\/code> object in the Java programming language.\n+     *  this {@code ResultSet} as a\n+     * {@code java.sql.SQLXML} object in the Java programming language.\n@@ -3178,1 +3178,1 @@\n-     * @return a <code>SQLXML<\/code> object that maps an <code>SQL XML<\/code> value\n+     * @return a {@code SQLXML} object that maps an {@code SQL XML} value\n@@ -3190,2 +3190,2 @@\n-     *  this <code>ResultSet<\/code> as a\n-     * <code>java.sql.SQLXML<\/code> object in the Java programming language.\n+     *  this {@code ResultSet} as a\n+     * {@code java.sql.SQLXML} object in the Java programming language.\n@@ -3193,1 +3193,1 @@\n-     * @return a <code>SQLXML<\/code> object that maps an <code>SQL XML<\/code> value\n+     * @return a {@code SQLXML} object that maps an {@code SQL XML} value\n@@ -3203,1 +3203,1 @@\n-     * Updates the designated column with a <code>java.sql.SQLXML<\/code> value.\n+     * Updates the designated column with a {@code java.sql.SQLXML} value.\n@@ -3207,1 +3207,1 @@\n-     * the <code>updateRow<\/code> or <code>insertRow<\/code> methods are called\n+     * the {@code updateRow} or {@code insertRow} methods are called\n@@ -3215,3 +3215,3 @@\n-     * the <code>java.xml.transform.Result<\/code>,\n-     *  <code>Writer<\/code> or <code>OutputStream<\/code> has not been closed\n-     * for the <code>SQLXML<\/code> object;\n+     * the {@code java.xml.transform.Result},\n+     *  {@code Writer} or {@code OutputStream} has not been closed\n+     * for the {@code SQLXML} object;\n@@ -3219,1 +3219,1 @@\n-     * the result set concurrency is <code>CONCUR_READ_ONLY<\/code>.  The <code>getCause<\/code> method\n+     * the result set concurrency is {@code CONCUR_READ_ONLY}.  The {@code getCause} method\n@@ -3228,1 +3228,1 @@\n-     * Updates the designated column with a <code>java.sql.SQLXML<\/code> value.\n+     * Updates the designated column with a {@code java.sql.SQLXML} value.\n@@ -3232,1 +3232,1 @@\n-     * the <code>updateRow<\/code> or <code>insertRow<\/code> methods are called\n+     * the {@code updateRow} or {@code insertRow} methods are called\n@@ -3240,3 +3240,3 @@\n-     * the <code>java.xml.transform.Result<\/code>,\n-     *  <code>Writer<\/code> or <code>OutputStream<\/code> has not been closed\n-     * for the <code>SQLXML<\/code> object;\n+     * the {@code java.xml.transform.Result},\n+     *  {@code Writer} or {@code OutputStream} has not been closed\n+     * for the {@code SQLXML} object;\n@@ -3244,1 +3244,1 @@\n-     * the result set concurrency is <code>CONCUR_READ_ONLY<\/code>.  The <code>getCause<\/code> method\n+     * the result set concurrency is {@code CONCUR_READ_ONLY}.  The {@code getCause} method\n@@ -3255,2 +3255,2 @@\n-     * of this <code>ResultSet<\/code> object as\n-     * a <code>String<\/code> in the Java programming language.\n+     * of this {@code ResultSet} object as\n+     * a {@code String} in the Java programming language.\n@@ -3258,2 +3258,2 @@\n-     * accessing  <code>NCHAR<\/code>,<code>NVARCHAR<\/code>\n-     * and <code>LONGNVARCHAR<\/code> columns.\n+     * accessing  {@code NCHAR},{@code NVARCHAR}\n+     * and {@code LONGNVARCHAR} columns.\n@@ -3262,2 +3262,2 @@\n-     * @return the column value; if the value is SQL <code>NULL<\/code>, the\n-     * value returned is <code>null<\/code>\n+     * @return the column value; if the value is SQL {@code NULL}, the\n+     * value returned is {@code null}\n@@ -3276,2 +3276,2 @@\n-     * of this <code>ResultSet<\/code> object as\n-     * a <code>String<\/code> in the Java programming language.\n+     * of this {@code ResultSet} object as\n+     * a {@code String} in the Java programming language.\n@@ -3279,2 +3279,2 @@\n-     * accessing  <code>NCHAR<\/code>,<code>NVARCHAR<\/code>\n-     * and <code>LONGNVARCHAR<\/code> columns.\n+     * accessing  {@code NCHAR},{@code NVARCHAR}\n+     * and {@code LONGNVARCHAR} columns.\n@@ -3283,2 +3283,2 @@\n-     * @return the column value; if the value is SQL <code>NULL<\/code>, the\n-     * value returned is <code>null<\/code>\n+     * @return the column value; if the value is SQL {@code NULL}, the\n+     * value returned is {@code null}\n@@ -3297,2 +3297,2 @@\n-     * of this <code>ResultSet<\/code> object as a\n-     * <code>java.io.Reader<\/code> object.\n+     * of this {@code ResultSet} object as a\n+     * {@code java.io.Reader} object.\n@@ -3300,2 +3300,2 @@\n-     * accessing  <code>NCHAR<\/code>,<code>NVARCHAR<\/code>\n-     * and <code>LONGNVARCHAR<\/code> columns.\n+     * accessing  {@code NCHAR},{@code NVARCHAR}\n+     * and {@code LONGNVARCHAR} columns.\n@@ -3303,3 +3303,3 @@\n-     * @return a <code>java.io.Reader<\/code> object that contains the column\n-     * value; if the value is SQL <code>NULL<\/code>, the value returned is\n-     * <code>null<\/code> in the Java programming language.\n+     * @return a {@code java.io.Reader} object that contains the column\n+     * value; if the value is SQL {@code NULL}, the value returned is\n+     * {@code null} in the Java programming language.\n@@ -3318,2 +3318,2 @@\n-     * of this <code>ResultSet<\/code> object as a\n-     * <code>java.io.Reader<\/code> object.\n+     * of this {@code ResultSet} object as a\n+     * {@code java.io.Reader} object.\n@@ -3321,2 +3321,2 @@\n-     * accessing  <code>NCHAR<\/code>,<code>NVARCHAR<\/code>\n-     * and <code>LONGNVARCHAR<\/code> columns.\n+     * accessing  {@code NCHAR},{@code NVARCHAR}\n+     * and {@code LONGNVARCHAR} columns.\n@@ -3325,3 +3325,3 @@\n-     * @return a <code>java.io.Reader<\/code> object that contains the column\n-     * value; if the value is SQL <code>NULL<\/code>, the value returned is\n-     * <code>null<\/code> in the Java programming language\n+     * @return a {@code java.io.Reader} object that contains the column\n+     * value; if the value is SQL {@code NULL}, the value returned is\n+     * {@code null} in the Java programming language\n@@ -3343,2 +3343,2 @@\n-     * updating  <code>NCHAR<\/code>,<code>NVARCHAR<\/code>\n-     * and <code>LONGNVARCHAR<\/code> columns.\n+     * updating  {@code NCHAR},{@code NVARCHAR}\n+     * and {@code LONGNVARCHAR} columns.\n@@ -3348,2 +3348,2 @@\n-     * update the underlying database; instead the <code>updateRow<\/code> or\n-     * <code>insertRow<\/code> methods are called to update the database.\n+     * update the underlying database; instead the {@code updateRow} or\n+     * {@code insertRow} methods are called to update the database.\n@@ -3371,2 +3371,2 @@\n-     * updating  <code>NCHAR<\/code>,<code>NVARCHAR<\/code>\n-     * and <code>LONGNVARCHAR<\/code> columns.\n+     * updating  {@code NCHAR},{@code NVARCHAR}\n+     * and {@code LONGNVARCHAR} columns.\n@@ -3376,2 +3376,2 @@\n-     * update the underlying database; instead the <code>updateRow<\/code> or\n-     * <code>insertRow<\/code> methods are called to update the database.\n+     * update the underlying database; instead the {@code updateRow} or\n+     * {@code insertRow} methods are called to update the database.\n@@ -3380,1 +3380,1 @@\n-     * @param reader the <code>java.io.Reader<\/code> object containing\n+     * @param reader the {@code java.io.Reader} object containing\n@@ -3399,2 +3399,2 @@\n-     * update the underlying database; instead the <code>updateRow<\/code> or\n-     * <code>insertRow<\/code> methods are called to update the database.\n+     * update the underlying database; instead the {@code updateRow} or\n+     * {@code insertRow} methods are called to update the database.\n@@ -3423,2 +3423,2 @@\n-     * update the underlying database; instead the <code>updateRow<\/code> or\n-     * <code>insertRow<\/code> methods are called to update the database.\n+     * update the underlying database; instead the {@code updateRow} or\n+     * {@code insertRow} methods are called to update the database.\n@@ -3447,2 +3447,2 @@\n-     * update the underlying database; instead the <code>updateRow<\/code> or\n-     * <code>insertRow<\/code> methods are called to update the database.\n+     * update the underlying database; instead the {@code updateRow} or\n+     * {@code insertRow} methods are called to update the database.\n@@ -3470,2 +3470,2 @@\n-     * update the underlying database; instead the <code>updateRow<\/code> or\n-     * <code>insertRow<\/code> methods are called to update the database.\n+     * update the underlying database; instead the {@code updateRow} or\n+     * {@code insertRow} methods are called to update the database.\n@@ -3494,2 +3494,2 @@\n-     * update the underlying database; instead the <code>updateRow<\/code> or\n-     * <code>insertRow<\/code> methods are called to update the database.\n+     * update the underlying database; instead the {@code updateRow} or\n+     * {@code insertRow} methods are called to update the database.\n@@ -3518,2 +3518,2 @@\n-     * update the underlying database; instead the <code>updateRow<\/code> or\n-     * <code>insertRow<\/code> methods are called to update the database.\n+     * update the underlying database; instead the {@code updateRow} or\n+     * {@code insertRow} methods are called to update the database.\n@@ -3522,1 +3522,1 @@\n-     * @param reader the <code>java.io.Reader<\/code> object containing\n+     * @param reader the {@code java.io.Reader} object containing\n@@ -3543,2 +3543,2 @@\n-     * update the underlying database; instead the <code>updateRow<\/code> or\n-     * <code>insertRow<\/code> methods are called to update the database.\n+     * update the underlying database; instead the {@code updateRow} or\n+     * {@code insertRow} methods are called to update the database.\n@@ -3567,2 +3567,2 @@\n-     * update the underlying database; instead the <code>updateRow<\/code> or\n-     * <code>insertRow<\/code> methods are called to update the database.\n+     * update the underlying database; instead the {@code updateRow} or\n+     * {@code insertRow} methods are called to update the database.\n@@ -3585,1 +3585,1 @@\n-     * Updates the designated column using the given <code>Reader<\/code>\n+     * Updates the designated column using the given {@code Reader}\n@@ -3587,1 +3587,1 @@\n-     * When a very large UNICODE value is input to a <code>LONGVARCHAR<\/code>\n+     * When a very large UNICODE value is input to a {@code LONGVARCHAR}\n@@ -3589,1 +3589,1 @@\n-     * <code>java.io.Reader<\/code> object. The JDBC driver will\n+     * {@code java.io.Reader} object. The JDBC driver will\n@@ -3595,2 +3595,2 @@\n-     * update the underlying database; instead the <code>updateRow<\/code> or\n-     * <code>insertRow<\/code> methods are called to update the database.\n+     * update the underlying database; instead the {@code updateRow} or\n+     * {@code insertRow} methods are called to update the database.\n@@ -3612,1 +3612,1 @@\n-     * Updates the designated column using the given <code>Reader<\/code>\n+     * Updates the designated column using the given {@code Reader}\n@@ -3614,1 +3614,1 @@\n-     * When a very large UNICODE value is input to a <code>LONGVARCHAR<\/code>\n+     * When a very large UNICODE value is input to a {@code LONGVARCHAR}\n@@ -3616,1 +3616,1 @@\n-     * <code>java.io.Reader<\/code> object.  The JDBC driver will\n+     * {@code java.io.Reader} object.  The JDBC driver will\n@@ -3622,2 +3622,2 @@\n-     * update the underlying database; instead the <code>updateRow<\/code> or\n-     * <code>insertRow<\/code> methods are called to update the database.\n+     * update the underlying database; instead the {@code updateRow} or\n+     * {@code insertRow} methods are called to update the database.\n@@ -3638,1 +3638,1 @@\n-     * Updates the designated column using the given <code>Reader<\/code>\n+     * Updates the designated column using the given {@code Reader}\n@@ -3640,1 +3640,1 @@\n-     * When a very large UNICODE value is input to a <code>LONGVARCHAR<\/code>\n+     * When a very large UNICODE value is input to a {@code LONGVARCHAR}\n@@ -3642,1 +3642,1 @@\n-     * <code>java.io.Reader<\/code> object. The JDBC driver will\n+     * {@code java.io.Reader} object. The JDBC driver will\n@@ -3648,2 +3648,2 @@\n-     * update the underlying database; instead the <code>updateRow<\/code> or\n-     * <code>insertRow<\/code> methods are called to update the database.\n+     * update the underlying database; instead the {@code updateRow} or\n+     * {@code insertRow} methods are called to update the database.\n@@ -3659,1 +3659,1 @@\n-     * the result set concurrency is <code>CONCUR_READ_ONLY<\/code>\n+     * the result set concurrency is {@code CONCUR_READ_ONLY}\n@@ -3667,1 +3667,1 @@\n-     * Updates the designated column using the given <code>Reader<\/code>\n+     * Updates the designated column using the given {@code Reader}\n@@ -3669,1 +3669,1 @@\n-     * When a very large UNICODE value is input to a <code>LONGVARCHAR<\/code>\n+     * When a very large UNICODE value is input to a {@code LONGVARCHAR}\n@@ -3671,1 +3671,1 @@\n-     * <code>java.io.Reader<\/code> object. The JDBC driver will\n+     * {@code java.io.Reader} object. The JDBC driver will\n@@ -3677,2 +3677,2 @@\n-     * update the underlying database; instead the <code>updateRow<\/code> or\n-     * <code>insertRow<\/code> methods are called to update the database.\n+     * update the underlying database; instead the {@code updateRow} or\n+     * {@code insertRow} methods are called to update the database.\n@@ -3688,1 +3688,1 @@\n-     * the result set concurrency is <code>CONCUR_READ_ONLY<\/code>\n+     * the result set concurrency is {@code CONCUR_READ_ONLY}\n@@ -3704,2 +3704,2 @@\n-     * updating  <code>NCHAR<\/code>,<code>NVARCHAR<\/code>\n-     * and <code>LONGNVARCHAR<\/code> columns.\n+     * updating  {@code NCHAR},{@code NVARCHAR}\n+     * and {@code LONGNVARCHAR} columns.\n@@ -3709,2 +3709,2 @@\n-     * update the underlying database; instead the <code>updateRow<\/code> or\n-     * <code>insertRow<\/code> methods are called to update the database.\n+     * update the underlying database; instead the {@code updateRow} or\n+     * {@code insertRow} methods are called to update the database.\n@@ -3714,1 +3714,1 @@\n-     * <code>updateNCharacterStream<\/code> which takes a length parameter.\n+     * {@code updateNCharacterStream} which takes a length parameter.\n@@ -3735,2 +3735,2 @@\n-     * updating  <code>NCHAR<\/code>,<code>NVARCHAR<\/code>\n-     * and <code>LONGNVARCHAR<\/code> columns.\n+     * updating  {@code NCHAR},{@code NVARCHAR}\n+     * and {@code LONGNVARCHAR} columns.\n@@ -3740,2 +3740,2 @@\n-     * update the underlying database; instead the <code>updateRow<\/code> or\n-     * <code>insertRow<\/code> methods are called to update the database.\n+     * update the underlying database; instead the {@code updateRow} or\n+     * {@code insertRow} methods are called to update the database.\n@@ -3745,1 +3745,1 @@\n-     * <code>updateNCharacterStream<\/code> which takes a length parameter.\n+     * {@code updateNCharacterStream} which takes a length parameter.\n@@ -3748,1 +3748,1 @@\n-     * @param reader the <code>java.io.Reader<\/code> object containing\n+     * @param reader the {@code java.io.Reader} object containing\n@@ -3766,2 +3766,2 @@\n-     * update the underlying database; instead the <code>updateRow<\/code> or\n-     * <code>insertRow<\/code> methods are called to update the database.\n+     * update the underlying database; instead the {@code updateRow} or\n+     * {@code insertRow} methods are called to update the database.\n@@ -3771,1 +3771,1 @@\n-     * <code>updateAsciiStream<\/code> which takes a length parameter.\n+     * {@code updateAsciiStream} which takes a length parameter.\n@@ -3793,2 +3793,2 @@\n-     * update the underlying database; instead the <code>updateRow<\/code> or\n-     * <code>insertRow<\/code> methods are called to update the database.\n+     * update the underlying database; instead the {@code updateRow} or\n+     * {@code insertRow} methods are called to update the database.\n@@ -3798,1 +3798,1 @@\n-     * <code>updateBinaryStream<\/code> which takes a length parameter.\n+     * {@code updateBinaryStream} which takes a length parameter.\n@@ -3820,2 +3820,2 @@\n-     * update the underlying database; instead the <code>updateRow<\/code> or\n-     * <code>insertRow<\/code> methods are called to update the database.\n+     * update the underlying database; instead the {@code updateRow} or\n+     * {@code insertRow} methods are called to update the database.\n@@ -3825,1 +3825,1 @@\n-     * <code>updateCharacterStream<\/code> which takes a length parameter.\n+     * {@code updateCharacterStream} which takes a length parameter.\n@@ -3846,2 +3846,2 @@\n-     * update the underlying database; instead the <code>updateRow<\/code> or\n-     * <code>insertRow<\/code> methods are called to update the database.\n+     * update the underlying database; instead the {@code updateRow} or\n+     * {@code insertRow} methods are called to update the database.\n@@ -3851,1 +3851,1 @@\n-     * <code>updateAsciiStream<\/code> which takes a length parameter.\n+     * {@code updateAsciiStream} which takes a length parameter.\n@@ -3873,2 +3873,2 @@\n-     * update the underlying database; instead the <code>updateRow<\/code> or\n-     * <code>insertRow<\/code> methods are called to update the database.\n+     * update the underlying database; instead the {@code updateRow} or\n+     * {@code insertRow} methods are called to update the database.\n@@ -3878,1 +3878,1 @@\n-     * <code>updateBinaryStream<\/code> which takes a length parameter.\n+     * {@code updateBinaryStream} which takes a length parameter.\n@@ -3900,2 +3900,2 @@\n-     * update the underlying database; instead the <code>updateRow<\/code> or\n-     * <code>insertRow<\/code> methods are called to update the database.\n+     * update the underlying database; instead the {@code updateRow} or\n+     * {@code insertRow} methods are called to update the database.\n@@ -3905,1 +3905,1 @@\n-     * <code>updateCharacterStream<\/code> which takes a length parameter.\n+     * {@code updateCharacterStream} which takes a length parameter.\n@@ -3908,1 +3908,1 @@\n-     * @param reader the <code>java.io.Reader<\/code> object containing\n+     * @param reader the {@code java.io.Reader} object containing\n@@ -3925,2 +3925,2 @@\n-     * update the underlying database; instead the <code>updateRow<\/code> or\n-     * <code>insertRow<\/code> methods are called to update the database.\n+     * update the underlying database; instead the {@code updateRow} or\n+     * {@code insertRow} methods are called to update the database.\n@@ -3930,1 +3930,1 @@\n-     * <code>updateBlob<\/code> which takes a length parameter.\n+     * {@code updateBlob} which takes a length parameter.\n@@ -3950,2 +3950,2 @@\n-     * update the underlying database; instead the <code>updateRow<\/code> or\n-     * <code>insertRow<\/code> methods are called to update the database.\n+     * update the underlying database; instead the {@code updateRow} or\n+     * {@code insertRow} methods are called to update the database.\n@@ -3955,1 +3955,1 @@\n-     * <code>updateBlob<\/code> which takes a length parameter.\n+     * {@code updateBlob} which takes a length parameter.\n@@ -3970,1 +3970,1 @@\n-     * Updates the designated column using the given <code>Reader<\/code>\n+     * Updates the designated column using the given {@code Reader}\n@@ -3979,2 +3979,2 @@\n-     * update the underlying database; instead the <code>updateRow<\/code> or\n-     * <code>insertRow<\/code> methods are called to update the database.\n+     * update the underlying database; instead the {@code updateRow} or\n+     * {@code insertRow} methods are called to update the database.\n@@ -3984,1 +3984,1 @@\n-     * <code>updateClob<\/code> which takes a length parameter.\n+     * {@code updateClob} which takes a length parameter.\n@@ -3999,1 +3999,1 @@\n-     * Updates the designated column using the given <code>Reader<\/code>\n+     * Updates the designated column using the given {@code Reader}\n@@ -4008,2 +4008,2 @@\n-     * update the underlying database; instead the <code>updateRow<\/code> or\n-     * <code>insertRow<\/code> methods are called to update the database.\n+     * update the underlying database; instead the {@code updateRow} or\n+     * {@code insertRow} methods are called to update the database.\n@@ -4013,1 +4013,1 @@\n-     * <code>updateClob<\/code> which takes a length parameter.\n+     * {@code updateClob} which takes a length parameter.\n@@ -4026,1 +4026,1 @@\n-     * Updates the designated column using the given <code>Reader<\/code>\n+     * Updates the designated column using the given {@code Reader}\n@@ -4035,2 +4035,2 @@\n-     * update the underlying database; instead the <code>updateRow<\/code> or\n-     * <code>insertRow<\/code> methods are called to update the database.\n+     * update the underlying database; instead the {@code updateRow} or\n+     * {@code insertRow} methods are called to update the database.\n@@ -4040,1 +4040,1 @@\n-     * <code>updateNClob<\/code> which takes a length parameter.\n+     * {@code updateNClob} which takes a length parameter.\n@@ -4049,1 +4049,1 @@\n-     * the result set concurrency is <code>CONCUR_READ_ONLY<\/code>\n+     * the result set concurrency is {@code CONCUR_READ_ONLY}\n@@ -4057,1 +4057,1 @@\n-     * Updates the designated column using the given <code>Reader<\/code>\n+     * Updates the designated column using the given {@code Reader}\n@@ -4066,2 +4066,2 @@\n-     * update the underlying database; instead the <code>updateRow<\/code> or\n-     * <code>insertRow<\/code> methods are called to update the database.\n+     * update the underlying database; instead the {@code updateRow} or\n+     * {@code insertRow} methods are called to update the database.\n@@ -4071,1 +4071,1 @@\n-     * <code>updateNClob<\/code> which takes a length parameter.\n+     * {@code updateNClob} which takes a length parameter.\n@@ -4079,1 +4079,1 @@\n-     * the result set concurrency is <code>CONCUR_READ_ONLY<\/code>\n+     * the result set concurrency is {@code CONCUR_READ_ONLY}\n@@ -4091,1 +4091,1 @@\n-     * of this <code>ResultSet<\/code> object and will convert from the\n+     * of this {@code ResultSet} object and will convert from the\n@@ -4095,1 +4095,1 @@\n-     * <code>SQLException<\/code> is thrown.\n+     * {@code SQLException} is thrown.\n@@ -4119,1 +4119,1 @@\n-     * of this <code>ResultSet<\/code> object and will convert from the\n+     * of this {@code ResultSet} object and will convert from the\n@@ -4123,1 +4123,1 @@\n-     * <code>SQLException<\/code> is thrown.\n+     * {@code SQLException} is thrown.\n","filename":"src\/java.sql\/share\/classes\/java\/sql\/ResultSet.java","additions":795,"deletions":795,"binary":false,"changes":1590,"status":"modified"},{"patch":"@@ -30,3 +30,3 @@\n- * and properties of the columns in a <code>ResultSet<\/code> object.\n- * The following code fragment creates the <code>ResultSet<\/code> object rs,\n- * creates the <code>ResultSetMetaData<\/code> object rsmd, and uses rsmd\n+ * and properties of the columns in a {@code ResultSet} object.\n+ * The following code fragment creates the {@code ResultSet} object rs,\n+ * creates the {@code ResultSetMetaData} object rsmd, and uses rsmd\n@@ -34,1 +34,1 @@\n- * can be used in a <code>WHERE<\/code> clause.\n+ * can be used in a {@code WHERE} clause.\n@@ -50,1 +50,1 @@\n-     * Returns the number of columns in this <code>ResultSet<\/code> object.\n+     * Returns the number of columns in this {@code ResultSet} object.\n@@ -61,1 +61,1 @@\n-     * @return <code>true<\/code> if so; <code>false<\/code> otherwise\n+     * @return {@code true} if so; {@code false} otherwise\n@@ -70,1 +70,1 @@\n-     * @return <code>true<\/code> if so; <code>false<\/code> otherwise\n+     * @return {@code true} if so; {@code false} otherwise\n@@ -79,1 +79,1 @@\n-     * @return <code>true<\/code> if so; <code>false<\/code> otherwise\n+     * @return {@code true} if so; {@code false} otherwise\n@@ -88,1 +88,1 @@\n-     * @return <code>true<\/code> if so; <code>false<\/code> otherwise\n+     * @return {@code true} if so; {@code false} otherwise\n@@ -97,2 +97,2 @@\n-     * @return the nullability status of the given column; one of <code>columnNoNulls<\/code>,\n-     *          <code>columnNullable<\/code> or <code>columnNullableUnknown<\/code>\n+     * @return the nullability status of the given column; one of {@code columnNoNulls},\n+     *          {@code columnNullable} or {@code columnNullableUnknown}\n@@ -105,1 +105,1 @@\n-     * column does not allow <code>NULL<\/code> values.\n+     * column does not allow {@code NULL} values.\n@@ -111,1 +111,1 @@\n-     * column allows <code>NULL<\/code> values.\n+     * column allows {@code NULL} values.\n@@ -125,1 +125,1 @@\n-     * @return <code>true<\/code> if so; <code>false<\/code> otherwise\n+     * @return {@code true} if so; {@code false} otherwise\n@@ -142,4 +142,4 @@\n-     * displays. The suggested title is usually specified by the SQL <code>AS<\/code>\n-     * clause.  If a SQL <code>AS<\/code> is not specified, the value returned from\n-     * <code>getColumnLabel<\/code> will be the same as the value returned by the\n-     * <code>getColumnName<\/code> method.\n+     * displays. The suggested title is usually specified by the SQL {@code AS}\n+     * clause.  If a SQL {@code AS} is not specified, the value returned from\n+     * {@code getColumnLabel} will be the same as the value returned by the\n+     * {@code getColumnName} method.\n@@ -238,1 +238,1 @@\n-     * @return <code>true<\/code> if so; <code>false<\/code> otherwise\n+     * @return {@code true} if so; {@code false} otherwise\n@@ -247,1 +247,1 @@\n-     * @return <code>true<\/code> if so; <code>false<\/code> otherwise\n+     * @return {@code true} if so; {@code false} otherwise\n@@ -256,1 +256,1 @@\n-     * @return <code>true<\/code> if so; <code>false<\/code> otherwise\n+     * @return {@code true} if so; {@code false} otherwise\n@@ -265,1 +265,1 @@\n-     * are manufactured if the method <code>ResultSet.getObject<\/code>\n+     * are manufactured if the method {@code ResultSet.getObject}\n@@ -267,1 +267,1 @@\n-     * from the column.  <code>ResultSet.getObject<\/code> may return a subclass of the\n+     * from the column.  {@code ResultSet.getObject} may return a subclass of the\n@@ -273,1 +273,1 @@\n-     * <code>ResultSet.getObject<\/code> to retrieve the value in the specified\n+     * {@code ResultSet.getObject} to retrieve the value in the specified\n","filename":"src\/java.sql\/share\/classes\/java\/sql\/ResultSetMetaData.java","additions":24,"deletions":24,"binary":false,"changes":48,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2006, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,3 +36,3 @@\n- * Methods in the interfaces <code>ResultSet<\/code>, <code>CallableStatement<\/code>,\n- * and <code>PreparedStatement<\/code>, such as <code>getRowId<\/code> and <code>setRowId<\/code>\n- * allow a programmer to access a SQL <code>ROWID<\/code>  value. The <code>RowId<\/code>\n+ * Methods in the interfaces {@code ResultSet}, {@code CallableStatement},\n+ * and {@code PreparedStatement}, such as {@code getRowId} and {@code setRowId}\n+ * allow a programmer to access a SQL {@code ROWID}  value. The {@code RowId}\n@@ -40,2 +40,2 @@\n- * for representing the value of the <code>ROWID<\/code> as a byte array or as a\n- * <code>String<\/code>.\n+ * for representing the value of the {@code ROWID} as a byte array or as a\n+ * {@code String}.\n@@ -43,1 +43,1 @@\n- * The method <code>getRowIdLifetime<\/code> in the interface <code>DatabaseMetaData<\/code>,\n+ * The method {@code getRowIdLifetime} in the interface {@code DatabaseMetaData},\n@@ -45,3 +45,3 @@\n- * to determine if a <code>RowId<\/code> object remains valid for the duration of the transaction in\n- * which  the <code>RowId<\/code> was created, the duration of the session in which\n- * the <code>RowId<\/code> was created,\n+ * to determine if a {@code RowId} object remains valid for the duration of the transaction in\n+ * which  the {@code RowId} was created, the duration of the session in which\n+ * the {@code RowId} was created,\n@@ -50,1 +50,1 @@\n- * source, <code>getRowIdLifetime<\/code> specifies the duration of a <code>ROWID<\/code>\n+ * source, {@code getRowIdLifetime} specifies the duration of a {@code ROWID}\n@@ -56,1 +56,1 @@\n- * All methods on the <code>RowId<\/code> interface must be fully implemented if the\n+ * All methods on the {@code RowId} interface must be fully implemented if the\n@@ -65,2 +65,2 @@\n-     * Compares this <code>RowId<\/code> to the specified object. The result is\n-     * <code>true<\/code> if and only if the argument is not null and is a RowId\n+     * Compares this {@code RowId} to the specified object. The result is\n+     * {@code true} if and only if the argument is not null and is a RowId\n@@ -70,2 +70,2 @@\n-     * to consider both the origin and the valid lifetime of a <code>RowId<\/code>\n-     * when comparing it to another <code>RowId<\/code>. If both are valid, and\n+     * to consider both the origin and the valid lifetime of a {@code RowId}\n+     * when comparing it to another {@code RowId}. If both are valid, and\n@@ -79,1 +79,1 @@\n-     * @param obj the <code>Object<\/code> to compare this <code>RowId<\/code> object\n+     * @param obj the {@code Object} to compare this {@code RowId} object\n@@ -81,1 +81,1 @@\n-     * @return true if the <code>RowId<\/code>s are equal; false otherwise\n+     * @return true if the {@code RowId}s are equal; false otherwise\n@@ -87,2 +87,2 @@\n-     * Returns an array of bytes representing the value of the SQL <code>ROWID<\/code>\n-     * designated by this <code>java.sql.RowId<\/code> object.\n+     * Returns an array of bytes representing the value of the SQL {@code ROWID}\n+     * designated by this {@code java.sql.RowId} object.\n@@ -98,1 +98,1 @@\n-      * <code>java.sql.RowId<\/code> object.\n+      * {@code java.sql.RowId} object.\n@@ -100,3 +100,3 @@\n-      *Like <code>java.sql.Date.toString()<\/code>\n-      * returns the contents of its DATE as the <code>String<\/code> \"2004-03-17\"\n-      * rather than as  DATE literal in SQL (which would have been the <code>String<\/code>\n+      *Like {@code java.sql.Date.toString()}\n+      * returns the contents of its DATE as the {@code String} \"2004-03-17\"\n+      * rather than as  DATE literal in SQL (which would have been the {@code String}\n@@ -105,1 +105,1 @@\n-      * the connection, and possibly not as a <code>ROWID<\/code> literal.\n+      * the connection, and possibly not as a {@code ROWID} literal.\n@@ -108,2 +108,2 @@\n-      *     connection, representing the value of the <code>ROWID<\/code> designated\n-      *     by this <code>java.sql.RowId<\/code>  object.\n+      *     connection, representing the value of the {@code ROWID} designated\n+      *     by this {@code java.sql.RowId}  object.\n@@ -114,1 +114,1 @@\n-      * Returns a hash code value of this <code>RowId<\/code> object.\n+      * Returns a hash code value of this {@code RowId} object.\n@@ -116,1 +116,1 @@\n-      * @return a hash code for the <code>RowId<\/code>\n+      * @return a hash code for the {@code RowId}\n","filename":"src\/java.sql\/share\/classes\/java\/sql\/RowId.java","additions":29,"deletions":29,"binary":false,"changes":58,"status":"modified"},{"patch":"@@ -31,2 +31,2 @@\n- * could not be set on a <code>Connection<\/code>.  In addition to the information provided\n- * by <code>SQLException<\/code>, a <code>SQLClientInfoException<\/code> provides a list of client info\n+ * could not be set on a {@code Connection}.  In addition to the information provided\n+ * by {@code SQLException}, a {@code SQLClientInfoException} provides a list of client info\n@@ -37,2 +37,2 @@\n- * info properties had been set even though the <code>Connection.setClientInfo<\/code>\n- * method threw an exception.  An application can use the <code>getFailedProperties <\/code>\n+ * info properties had been set even though the {@code Connection.setClientInfo}\n+ * method threw an exception.  An application can use the {@code getFailedProperties}\n@@ -41,2 +41,2 @@\n- * <code>Map&lt;String,ClientInfoStatus&gt;<\/code> to\n- * the appropriate <code>SQLClientInfoException<\/code> constructor.\n+ * {@code Map<String,ClientInfoStatus>} to\n+ * the appropriate {@code SQLClientInfoException} constructor.\n@@ -57,5 +57,5 @@\n-     * Constructs a <code>SQLClientInfoException<\/code>  Object.\n-     * The <code>reason<\/code>,\n-     * <code>SQLState<\/code>, and failedProperties list are initialized to\n-     * <code> null<\/code> and the vendor code is initialized to 0.\n-     * The <code>cause<\/code> is not initialized, and may subsequently be\n+     * Constructs a {@code SQLClientInfoException}  Object.\n+     * The {@code reason},\n+     * {@code SQLState}, and failedProperties list are initialized to\n+     * {@code null} and the vendor code is initialized to 0.\n+     * The {@code cause} is not initialized, and may subsequently be\n@@ -73,4 +73,4 @@\n-     * Constructs a <code>SQLClientInfoException<\/code> object initialized with a\n-     * given <code>failedProperties<\/code>.\n-     * The <code>reason<\/code> and <code>SQLState<\/code> are initialized\n-     * to <code>null<\/code> and the vendor code is initialized to 0.\n+     * Constructs a {@code SQLClientInfoException} object initialized with a\n+     * given {@code failedProperties}.\n+     * The {@code reason} and {@code SQLState} are initialized\n+     * to {@code null} and the vendor code is initialized to 0.\n@@ -78,1 +78,1 @@\n-     * The <code>cause<\/code> is not initialized, and may subsequently be\n+     * The {@code cause} is not initialized, and may subsequently be\n@@ -87,1 +87,1 @@\n-     *                                  defined in <code>ClientInfoStatus<\/code>\n+     *                                  defined in {@code ClientInfoStatus}\n@@ -97,2 +97,2 @@\n-     * Constructs a <code>SQLClientInfoException<\/code> object initialized with\n-     * a given <code>cause<\/code> and <code>failedProperties<\/code>.\n+     * Constructs a {@code SQLClientInfoException} object initialized with\n+     * a given {@code cause} and {@code failedProperties}.\n@@ -100,3 +100,3 @@\n-     * The <code>reason<\/code>  is initialized to <code>null<\/code> if\n-     * <code>cause==null<\/code> or to <code>cause.toString()<\/code> if\n-     * <code>cause!=null<\/code> and the vendor code is initialized to 0.\n+     * The {@code reason}  is initialized to {@code null} if\n+     * {@code cause==null} or to {@code cause.toString()} if\n+     * {@code cause!=null} and the vendor code is initialized to 0.\n@@ -109,2 +109,2 @@\n-     *                                  defined in <code>ClientInfoStatus<\/code>\n-     * @param cause                                     the (which is saved for later retrieval by the <code>getCause()<\/code> method); may be null indicating\n+     *                                  defined in {@code ClientInfoStatus}\n+     * @param cause                                     the (which is saved for later retrieval by the {@code getCause()} method); may be null indicating\n@@ -124,4 +124,4 @@\n-     * Constructs a <code>SQLClientInfoException<\/code> object initialized with a\n-     * given <code>reason<\/code> and <code>failedProperties<\/code>.\n-     * The <code>SQLState<\/code> is initialized\n-     * to <code>null<\/code> and the vendor code is initialized to 0.\n+     * Constructs a {@code SQLClientInfoException} object initialized with a\n+     * given {@code reason} and {@code failedProperties}.\n+     * The {@code SQLState} is initialized\n+     * to {@code null} and the vendor code is initialized to 0.\n@@ -129,1 +129,1 @@\n-     * The <code>cause<\/code> is not initialized, and may subsequently be\n+     * The {@code cause} is not initialized, and may subsequently be\n@@ -139,1 +139,1 @@\n-     *                                  defined in <code>ClientInfoStatus<\/code>\n+     *                                  defined in {@code ClientInfoStatus}\n@@ -151,5 +151,5 @@\n-     * Constructs a <code>SQLClientInfoException<\/code> object initialized with a\n-     * given <code>reason<\/code>, <code>cause<\/code> and\n-     * <code>failedProperties<\/code>.\n-     * The  <code>SQLState<\/code> is initialized\n-     * to <code>null<\/code> and the vendor code is initialized to 0.\n+     * Constructs a {@code SQLClientInfoException} object initialized with a\n+     * given {@code reason}, {@code cause} and\n+     * {@code failedProperties}.\n+     * The  {@code SQLState} is initialized\n+     * to {@code null} and the vendor code is initialized to 0.\n@@ -163,2 +163,2 @@\n-     *                                  defined in <code>ClientInfoStatus<\/code>\n-     * @param cause                                     the underlying reason for this <code>SQLException<\/code> (which is saved for later retrieval by the <code>getCause()<\/code> method); may be null indicating\n+     *                                  defined in {@code ClientInfoStatus}\n+     * @param cause                                     the underlying reason for this {@code SQLException} (which is saved for later retrieval by the {@code getCause()} method); may be null indicating\n@@ -179,4 +179,4 @@\n-     * Constructs a <code>SQLClientInfoException<\/code> object initialized with a\n-     * given  <code>reason<\/code>, <code>SQLState<\/code>  and\n-     * <code>failedProperties<\/code>.\n-     * The <code>cause<\/code> is not initialized, and may subsequently be\n+     * Constructs a {@code SQLClientInfoException} object initialized with a\n+     * given  {@code reason}, {@code SQLState}  and\n+     * {@code failedProperties}.\n+     * The {@code cause} is not initialized, and may subsequently be\n@@ -194,1 +194,1 @@\n-     *                                  defined in <code>ClientInfoStatus<\/code>\n+     *                                  defined in {@code ClientInfoStatus}\n@@ -207,3 +207,3 @@\n-     * Constructs a <code>SQLClientInfoException<\/code> object initialized with a\n-     * given  <code>reason<\/code>, <code>SQLState<\/code>, <code>cause<\/code>\n-     * and <code>failedProperties<\/code>.  The vendor code is initialized to 0.\n+     * Constructs a {@code SQLClientInfoException} object initialized with a\n+     * given  {@code reason}, {@code SQLState}, {@code cause}\n+     * and {@code failedProperties}.  The vendor code is initialized to 0.\n@@ -218,2 +218,2 @@\n-     *                                  defined in <code>ClientInfoStatus<\/code>\n-     * @param cause                     the underlying reason for this <code>SQLException<\/code> (which is saved for later retrieval by the <code>getCause()<\/code> method); may be null indicating\n+     *                                  defined in {@code ClientInfoStatus}\n+     * @param cause                     the underlying reason for this {@code SQLException} (which is saved for later retrieval by the {@code getCause()} method); may be null indicating\n@@ -235,4 +235,4 @@\n-     * Constructs a <code>SQLClientInfoException<\/code> object initialized with a\n-     * given  <code>reason<\/code>, <code>SQLState<\/code>,\n-     * <code>vendorCode<\/code>  and <code>failedProperties<\/code>.\n-     * The <code>cause<\/code> is not initialized, and may subsequently be\n+     * Constructs a {@code SQLClientInfoException} object initialized with a\n+     * given  {@code reason}, {@code SQLState},\n+     * {@code vendorCode}  and {@code failedProperties}.\n+     * The {@code cause} is not initialized, and may subsequently be\n@@ -250,1 +250,1 @@\n-     *                                  defined in <code>ClientInfoStatus<\/code>\n+     *                                  defined in {@code ClientInfoStatus}\n@@ -264,4 +264,4 @@\n-     * Constructs a <code>SQLClientInfoException<\/code> object initialized with a\n-     * given  <code>reason<\/code>, <code>SQLState<\/code>,\n-     * <code>cause<\/code>, <code>vendorCode<\/code> and\n-     * <code>failedProperties<\/code>.\n+     * Constructs a {@code SQLClientInfoException} object initialized with a\n+     * given  {@code reason}, {@code SQLState},\n+     * {@code cause}, {@code vendorCode} and\n+     * {@code failedProperties}.\n@@ -277,2 +277,2 @@\n-     *                                  defined in <code>ClientInfoStatus<\/code>\n-     * @param cause                     the underlying reason for this <code>SQLException<\/code> (which is saved for later retrieval by the <code>getCause()<\/code> method); may be null indicating\n+     *                                  defined in {@code ClientInfoStatus}\n+     * @param cause                     the underlying reason for this {@code SQLException} (which is saved for later retrieval by the {@code getCause()} method); may be null indicating\n@@ -298,1 +298,1 @@\n-     * reason codes defined in <code>ClientInfoStatus<\/code>\n+     * reason codes defined in {@code ClientInfoStatus}\n","filename":"src\/java.sql\/share\/classes\/java\/sql\/SQLClientInfoException.java","additions":59,"deletions":59,"binary":false,"changes":118,"status":"modified"},{"patch":"@@ -31,2 +31,2 @@\n- * implementing the <code>SQLData<\/code> interface will be entered in the\n- * appropriate <code>Connection<\/code> object's type map along with the SQL\n+ * implementing the {@code SQLData} interface will be entered in the\n+ * appropriate {@code Connection} object's type map along with the SQL\n@@ -35,1 +35,1 @@\n- * Typically, a <code>SQLData<\/code> implementation\n+ * Typically, a {@code SQLData} implementation\n@@ -37,2 +37,2 @@\n- * single field for an SQL <code>DISTINCT<\/code> type. When the UDT is\n- * retrieved from a data source with the <code>ResultSet.getObject<\/code>\n+ * single field for an SQL {@code DISTINCT} type. When the UDT is\n+ * retrieved from a data source with the {@code ResultSet.getObject}\n@@ -42,1 +42,1 @@\n- * calling the <code>PreparedStatement.setObject<\/code> method,\n+ * calling the {@code PreparedStatement.setObject} method,\n@@ -50,5 +50,5 @@\n- * this information to implement the <code>SQLData.readSQL<\/code> and\n- * <code>SQLData.writeSQL<\/code> methods.  The <code>readSQL<\/code> method\n- * calls the appropriate <code>SQLInput<\/code> methods to read\n- * each attribute from an <code>SQLInput<\/code> object, and the\n- * <code>writeSQL<\/code> method calls <code>SQLOutput<\/code> methods\n+ * this information to implement the {@code SQLData.readSQL} and\n+ * {@code SQLData.writeSQL} methods.  The {@code readSQL} method\n+ * calls the appropriate {@code SQLInput} methods to read\n+ * each attribute from an {@code SQLInput} object, and the\n+ * {@code writeSQL} method calls {@code SQLOutput} methods\n@@ -56,1 +56,1 @@\n- * <code>SQLOutput<\/code> object.\n+ * {@code SQLOutput} object.\n@@ -58,3 +58,3 @@\n- * An application programmer will not normally call <code>SQLData<\/code> methods\n- * directly, and the <code>SQLInput<\/code> and <code>SQLOutput<\/code> methods\n- * are called internally by <code>SQLData<\/code> methods, not by application code.\n+ * An application programmer will not normally call {@code SQLData} methods\n+ * directly, and the {@code SQLInput} and {@code SQLOutput} methods\n+ * are called internally by {@code SQLData} methods, not by application code.\n@@ -71,1 +71,1 @@\n-  * <code>SQLData<\/code>.\n+  * {@code SQLData}.\n@@ -73,1 +73,1 @@\n-  * @return the type name that was passed to the method <code>readSQL<\/code>\n+  * @return the type name that was passed to the method {@code readSQL}\n@@ -91,1 +91,1 @@\n-  * <LI>The method <code>readSQL<\/code> then\n+  * <LI>The method {@code readSQL} then\n@@ -95,1 +95,1 @@\n-  * (<code>SQLInput.readString<\/code>, <code>SQLInput.readBigDecimal<\/code>,\n+  * ({@code SQLInput.readString}, {@code SQLInput.readBigDecimal},\n@@ -102,1 +102,1 @@\n-  * <code>SQLInput<\/code> reader method on the stream.\n+  * {@code SQLInput} reader method on the stream.\n@@ -104,1 +104,1 @@\n-  * @param stream the <code>SQLInput<\/code> object from which to read the data for\n+  * @param stream the {@code SQLInput} object from which to read the data for\n@@ -123,2 +123,2 @@\n-  * Specifically, it must call the appropriate <code>SQLOutput<\/code> writer\n-  * method(s) (<code>writeInt<\/code>, <code>writeString<\/code>, and so on)\n+  * Specifically, it must call the appropriate {@code SQLOutput} writer\n+  * method(s) ({@code writeInt}, {@code writeString}, and so on)\n@@ -128,1 +128,1 @@\n-  * @param stream the <code>SQLOutput<\/code> object to which to write the data for\n+  * @param stream the {@code SQLOutput} object to which to write the data for\n","filename":"src\/java.sql\/share\/classes\/java\/sql\/SQLData.java","additions":24,"deletions":24,"binary":false,"changes":48,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,1 +35,1 @@\n- * conditions for which this <code>Exception<\/code> may be thrown.\n+ * conditions for which this {@code Exception} may be thrown.\n@@ -41,3 +41,3 @@\n-         * Constructs a <code>SQLDataException<\/code> object.\n-         * The <code>reason<\/code>, <code>SQLState<\/code> are initialized\n-         * to <code>null<\/code> and the vendor code is initialized to 0.\n+         * Constructs a {@code SQLDataException} object.\n+         * The {@code reason}, {@code SQLState} are initialized\n+         * to {@code null} and the vendor code is initialized to 0.\n@@ -45,1 +45,1 @@\n-         * The <code>cause<\/code> is not initialized, and may subsequently be\n+         * The {@code cause} is not initialized, and may subsequently be\n@@ -56,4 +56,4 @@\n-         * Constructs a <code>SQLDataException<\/code> object with a given\n-         * <code>reason<\/code>.\n-         * The <code>SQLState<\/code> is initialized\n-         * to <code>null<\/code> and the vendor code is initialized to 0.\n+         * Constructs a {@code SQLDataException} object with a given\n+         * {@code reason}.\n+         * The {@code SQLState} is initialized\n+         * to {@code null} and the vendor code is initialized to 0.\n@@ -61,1 +61,1 @@\n-         * The <code>cause<\/code> is not initialized, and may subsequently be\n+         * The {@code cause} is not initialized, and may subsequently be\n@@ -73,2 +73,2 @@\n-         * Constructs a <code>SQLDataException<\/code> object with a given\n-         * <code>reason<\/code> and <code>SQLState<\/code>. The\n+         * Constructs a {@code SQLDataException} object with a given\n+         * {@code reason} and {@code SQLState}. The\n@@ -77,1 +77,1 @@\n-         * The <code>cause<\/code> is not initialized, and may subsequently be\n+         * The {@code cause} is not initialized, and may subsequently be\n@@ -90,3 +90,3 @@\n-         * Constructs a <code>SQLDataException<\/code> object with a given\n-         * <code>reason<\/code>, <code>SQLState<\/code>  and\n-         * <code>vendorCode<\/code>.\n+         * Constructs a {@code SQLDataException} object with a given\n+         * {@code reason}, {@code SQLState}  and\n+         * {@code vendorCode}.\n@@ -94,1 +94,1 @@\n-         * The <code>cause<\/code> is not initialized, and may subsequently be\n+         * The {@code cause} is not initialized, and may subsequently be\n@@ -108,7 +108,7 @@\n-     * Constructs a <code>SQLDataException<\/code> object with a given\n-     * <code>cause<\/code>.\n-     * The <code>SQLState<\/code> is initialized\n-     * to <code>null<\/code> and the vendor code is initialized to 0.\n-     * The <code>reason<\/code>  is initialized to <code>null<\/code> if\n-     * <code>cause==null<\/code> or to <code>cause.toString()<\/code> if\n-     * <code>cause!=null<\/code>.\n+     * Constructs a {@code SQLDataException} object with a given\n+     * {@code cause}.\n+     * The {@code SQLState} is initialized\n+     * to {@code null} and the vendor code is initialized to 0.\n+     * The {@code reason}  is initialized to {@code null} if\n+     * {@code cause==null} or to {@code cause.toString()} if\n+     * {@code cause!=null}.\n@@ -116,1 +116,1 @@\n-     * @param cause the underlying reason for this <code>SQLException<\/code> (which is saved for later retrieval by the <code>getCause()<\/code> method); may be null indicating\n+     * @param cause the underlying reason for this {@code SQLException} (which is saved for later retrieval by the {@code getCause()} method); may be null indicating\n@@ -125,3 +125,3 @@\n-     * Constructs a <code>SQLDataException<\/code> object with a given\n-     * <code>reason<\/code> and  <code>cause<\/code>.\n-     * The <code>SQLState<\/code> is  initialized to <code>null<\/code>\n+     * Constructs a {@code SQLDataException} object with a given\n+     * {@code reason} and  {@code cause}.\n+     * The {@code SQLState} is  initialized to {@code null}\n@@ -131,1 +131,1 @@\n-     * @param cause the underlying reason for this <code>SQLException<\/code> (which is saved for later retrieval by the <code>getCause()<\/code> method); may be null indicating\n+     * @param cause the underlying reason for this {@code SQLException} (which is saved for later retrieval by the {@code getCause()} method); may be null indicating\n@@ -140,2 +140,2 @@\n-     *  Constructs a <code>SQLDataException<\/code> object with a given\n-     * <code>reason<\/code>, <code>SQLState<\/code> and  <code>cause<\/code>.\n+     *  Constructs a {@code SQLDataException} object with a given\n+     * {@code reason}, {@code SQLState} and  {@code cause}.\n@@ -146,1 +146,1 @@\n-     * @param cause the underlying reason for this <code>SQLException<\/code> (which is saved for later retrieval by the <code>getCause()<\/code> method); may be null indicating\n+     * @param cause the underlying reason for this {@code SQLException} (which is saved for later retrieval by the {@code getCause()} method); may be null indicating\n@@ -155,3 +155,3 @@\n-     * Constructs a <code>SQLDataException<\/code> object with a given\n-     * <code>reason<\/code>, <code>SQLState<\/code>, <code>vendorCode<\/code>\n-     * and  <code>cause<\/code>.\n+     * Constructs a {@code SQLDataException} object with a given\n+     * {@code reason}, {@code SQLState}, {@code vendorCode}\n+     * and  {@code cause}.\n@@ -162,1 +162,1 @@\n-     * @param cause the underlying reason for this <code>SQLException<\/code> (which is saved for later retrieval by the <code>getCause()<\/code> method); may be null indicating\n+     * @param cause the underlying reason for this {@code SQLException} (which is saved for later retrieval by the {@code getCause()} method); may be null indicating\n","filename":"src\/java.sql\/share\/classes\/java\/sql\/SQLDataException.java","additions":37,"deletions":37,"binary":false,"changes":74,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n- * <P>Each <code>SQLException<\/code> provides several kinds of information:\n+ * <P>Each {@code SQLException} provides several kinds of information:\n@@ -39,1 +39,1 @@\n- *       message, available via the method <code>getMessage<\/code>.\n+ *       message, available via the method {@code getMessage}.\n@@ -43,1 +43,1 @@\n- *       The <code>DatabaseMetaData<\/code> method <code>getSQLStateType<\/code>\n+ *       The {@code DatabaseMetaData} method {@code getSQLStateType}\n@@ -50,1 +50,1 @@\n- *   <LI> the causal relationship, if any for this <code>SQLException<\/code>.\n+ *   <LI> the causal relationship, if any for this {@code SQLException}.\n@@ -59,3 +59,3 @@\n-     *  Constructs a <code>SQLException<\/code> object with a given\n-     * <code>reason<\/code>, <code>SQLState<\/code>  and\n-     * <code>vendorCode<\/code>.\n+     *  Constructs a {@code SQLException} object with a given\n+     * {@code reason}, {@code SQLState}  and\n+     * {@code vendorCode}.\n@@ -63,1 +63,1 @@\n-     * The <code>cause<\/code> is not initialized, and may subsequently be\n+     * The {@code cause} is not initialized, and may subsequently be\n@@ -86,2 +86,2 @@\n-     * Constructs a <code>SQLException<\/code> object with a given\n-     * <code>reason<\/code> and <code>SQLState<\/code>.\n+     * Constructs a {@code SQLException} object with a given\n+     * {@code reason} and {@code SQLState}.\n@@ -89,1 +89,1 @@\n-     * The <code>cause<\/code> is not initialized, and may subsequently be\n+     * The {@code cause} is not initialized, and may subsequently be\n@@ -110,3 +110,3 @@\n-     *  Constructs a <code>SQLException<\/code> object with a given\n-     * <code>reason<\/code>. The  <code>SQLState<\/code>  is initialized to\n-     * <code>null<\/code> and the vendor code is initialized to 0.\n+     *  Constructs a {@code SQLException} object with a given\n+     * {@code reason}. The  {@code SQLState}  is initialized to\n+     * {@code null} and the vendor code is initialized to 0.\n@@ -114,1 +114,1 @@\n-     * The <code>cause<\/code> is not initialized, and may subsequently be\n+     * The {@code cause} is not initialized, and may subsequently be\n@@ -132,3 +132,3 @@\n-     * Constructs a <code>SQLException<\/code> object.\n-     * The <code>reason<\/code>, <code>SQLState<\/code> are initialized\n-     * to <code>null<\/code> and the vendor code is initialized to 0.\n+     * Constructs a {@code SQLException} object.\n+     * The {@code reason}, {@code SQLState} are initialized\n+     * to {@code null} and the vendor code is initialized to 0.\n@@ -136,1 +136,1 @@\n-     * The <code>cause<\/code> is not initialized, and may subsequently be\n+     * The {@code cause} is not initialized, and may subsequently be\n@@ -153,7 +153,7 @@\n-     *  Constructs a <code>SQLException<\/code> object with a given\n-     * <code>cause<\/code>.\n-     * The <code>SQLState<\/code> is initialized\n-     * to <code>null<\/code> and the vendor code is initialized to 0.\n-     * The <code>reason<\/code>  is initialized to <code>null<\/code> if\n-     * <code>cause==null<\/code> or to <code>cause.toString()<\/code> if\n-     * <code>cause!=null<\/code>.\n+     *  Constructs a {@code SQLException} object with a given\n+     * {@code cause}.\n+     * The {@code SQLState} is initialized\n+     * to {@code null} and the vendor code is initialized to 0.\n+     * The {@code reason}  is initialized to {@code null} if\n+     * {@code cause==null} or to {@code cause.toString()} if\n+     * {@code cause!=null}.\n@@ -161,2 +161,2 @@\n-     * @param cause the underlying reason for this <code>SQLException<\/code>\n-     * (which is saved for later retrieval by the <code>getCause()<\/code> method);\n+     * @param cause the underlying reason for this {@code SQLException}\n+     * (which is saved for later retrieval by the {@code getCause()} method);\n@@ -177,3 +177,3 @@\n-     * Constructs a <code>SQLException<\/code> object with a given\n-     * <code>reason<\/code> and  <code>cause<\/code>.\n-     * The <code>SQLState<\/code> is  initialized to <code>null<\/code>\n+     * Constructs a {@code SQLException} object with a given\n+     * {@code reason} and  {@code cause}.\n+     * The {@code SQLState} is  initialized to {@code null}\n@@ -183,2 +183,2 @@\n-     * @param cause the underlying reason for this <code>SQLException<\/code>\n-     * (which is saved for later retrieval by the <code>getCause()<\/code> method);\n+     * @param cause the underlying reason for this {@code SQLException}\n+     * (which is saved for later retrieval by the {@code getCause()} method);\n@@ -199,2 +199,2 @@\n-     * Constructs a <code>SQLException<\/code> object with a given\n-     * <code>reason<\/code>, <code>SQLState<\/code> and  <code>cause<\/code>.\n+     * Constructs a {@code SQLException} object with a given\n+     * {@code reason}, {@code SQLState} and  {@code cause}.\n@@ -205,1 +205,1 @@\n-     * @param cause the underlying reason for this <code>SQLException<\/code>\n+     * @param cause the underlying reason for this {@code SQLException}\n@@ -207,1 +207,1 @@\n-     * <code>getCause()<\/code> method); may be null indicating\n+     * {@code getCause()} method); may be null indicating\n@@ -225,3 +225,3 @@\n-     * Constructs a <code>SQLException<\/code> object with a given\n-     * <code>reason<\/code>, <code>SQLState<\/code>, <code>vendorCode<\/code>\n-     * and  <code>cause<\/code>.\n+     * Constructs a {@code SQLException} object with a given\n+     * {@code reason}, {@code SQLState}, {@code vendorCode}\n+     * and  {@code cause}.\n@@ -232,2 +232,2 @@\n-     * @param cause the underlying reason for this <code>SQLException<\/code>\n-     * (which is saved for later retrieval by the <code>getCause()<\/code> method);\n+     * @param cause the underlying reason for this {@code SQLException}\n+     * (which is saved for later retrieval by the {@code getCause()} method);\n@@ -252,1 +252,1 @@\n-     * Retrieves the SQLState for this <code>SQLException<\/code> object.\n+     * Retrieves the SQLState for this {@code SQLException} object.\n@@ -262,1 +262,1 @@\n-     * for this <code>SQLException<\/code> object.\n+     * for this {@code SQLException} object.\n@@ -272,1 +272,1 @@\n-     * <code>SQLException<\/code> object by setNextException(SQLException ex).\n+     * {@code SQLException} object by setNextException(SQLException ex).\n@@ -274,2 +274,2 @@\n-     * @return the next <code>SQLException<\/code> object in the chain;\n-     *         <code>null<\/code> if there are none\n+     * @return the next {@code SQLException} object in the chain;\n+     *         {@code null} if there are none\n@@ -283,1 +283,1 @@\n-     * Adds an <code>SQLException<\/code> object to the end of the chain.\n+     * Adds an {@code SQLException} object to the end of the chain.\n@@ -286,1 +286,1 @@\n-     *            the <code>SQLException<\/code> chain\n+     *            the {@code SQLException} chain\n","filename":"src\/java.sql\/share\/classes\/java\/sql\/SQLException.java","additions":50,"deletions":50,"binary":false,"changes":100,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,3 +46,3 @@\n-         * Constructs a <code>SQLFeatureNotSupportedException<\/code> object.\n-         *  The <code>reason<\/code>, <code>SQLState<\/code> are initialized\n-         * to <code>null<\/code> and the vendor code is initialized to 0.\n+         * Constructs a {@code SQLFeatureNotSupportedException} object.\n+         *  The {@code reason}, {@code SQLState} are initialized\n+         * to {@code null} and the vendor code is initialized to 0.\n@@ -50,1 +50,1 @@\n-         * The <code>cause<\/code> is not initialized, and may subsequently be\n+         * The {@code cause} is not initialized, and may subsequently be\n@@ -61,3 +61,3 @@\n-         * Constructs a <code>SQLFeatureNotSupportedException<\/code> object\n-         * with a given <code>reason<\/code>. The <code>SQLState<\/code>\n-         * is initialized to <code>null<\/code> and the vendor code is initialized\n+         * Constructs a {@code SQLFeatureNotSupportedException} object\n+         * with a given {@code reason}. The {@code SQLState}\n+         * is initialized to {@code null} and the vendor code is initialized\n@@ -66,1 +66,1 @@\n-         * The <code>cause<\/code> is not initialized, and may subsequently be\n+         * The {@code cause} is not initialized, and may subsequently be\n@@ -78,2 +78,2 @@\n-         * Constructs a <code>SQLFeatureNotSupportedException<\/code> object\n-         * with a given <code>reason<\/code> and <code>SQLState<\/code>.\n+         * Constructs a {@code SQLFeatureNotSupportedException} object\n+         * with a given {@code reason} and {@code SQLState}.\n@@ -81,1 +81,1 @@\n-         * The <code>cause<\/code> is not initialized, and may subsequently be\n+         * The {@code cause} is not initialized, and may subsequently be\n@@ -95,3 +95,3 @@\n-         * Constructs a <code>SQLFeatureNotSupportedException<\/code> object\n-         *  with a given <code>reason<\/code>, <code>SQLState<\/code>  and\n-         * <code>vendorCode<\/code>.\n+         * Constructs a {@code SQLFeatureNotSupportedException} object\n+         *  with a given {@code reason}, {@code SQLState}  and\n+         * {@code vendorCode}.\n@@ -99,1 +99,1 @@\n-         * The <code>cause<\/code> is not initialized, and may subsequently be\n+         * The {@code cause} is not initialized, and may subsequently be\n@@ -113,7 +113,7 @@\n-     * Constructs a <code>SQLFeatureNotSupportedException<\/code> object\n-     *   with a given  <code>cause<\/code>.\n-     * The <code>SQLState<\/code> is initialized\n-     * to <code>null<\/code> and the vendor code is initialized to 0.\n-     * The <code>reason<\/code>  is initialized to <code>null<\/code> if\n-     * <code>cause==null<\/code> or to <code>cause.toString()<\/code> if\n-     * <code>cause!=null<\/code>.\n+     * Constructs a {@code SQLFeatureNotSupportedException} object\n+     *   with a given  {@code cause}.\n+     * The {@code SQLState} is initialized\n+     * to {@code null} and the vendor code is initialized to 0.\n+     * The {@code reason}  is initialized to {@code null} if\n+     * {@code cause==null} or to {@code cause.toString()} if\n+     * {@code cause!=null}.\n@@ -121,1 +121,1 @@\n-     * @param cause the underlying reason for this <code>SQLException<\/code> (which is saved for later retrieval by the <code>getCause()<\/code> method); may be null indicating\n+     * @param cause the underlying reason for this {@code SQLException} (which is saved for later retrieval by the {@code getCause()} method); may be null indicating\n@@ -130,1 +130,1 @@\n-     * Constructs a <code>SQLFeatureNotSupportedException<\/code> object\n+     * Constructs a {@code SQLFeatureNotSupportedException} object\n@@ -132,2 +132,2 @@\n-     * <code>reason<\/code> and  <code>cause<\/code>.\n-     * The <code>SQLState<\/code> is  initialized to <code>null<\/code>\n+     * {@code reason} and  {@code cause}.\n+     * The {@code SQLState} is  initialized to {@code null}\n@@ -137,1 +137,1 @@\n-     * @param cause the underlying reason for this <code>SQLException<\/code> (which is saved for later retrieval by the <code>getCause()<\/code> method); may be null indicating\n+     * @param cause the underlying reason for this {@code SQLException} (which is saved for later retrieval by the {@code getCause()} method); may be null indicating\n@@ -146,1 +146,1 @@\n-     * Constructs a <code>SQLFeatureNotSupportedException<\/code> object\n+     * Constructs a {@code SQLFeatureNotSupportedException} object\n@@ -148,1 +148,1 @@\n-     * <code>reason<\/code>, <code>SQLState<\/code> and  <code>cause<\/code>.\n+     * {@code reason}, {@code SQLState} and  {@code cause}.\n@@ -153,1 +153,1 @@\n-     * @param cause the (which is saved for later retrieval by the <code>getCause()<\/code> method); may be null indicating\n+     * @param cause the (which is saved for later retrieval by the {@code getCause()} method); may be null indicating\n@@ -162,1 +162,1 @@\n-     *  Constructs a <code>SQLFeatureNotSupportedException<\/code> object\n+     *  Constructs a {@code SQLFeatureNotSupportedException} object\n@@ -164,2 +164,2 @@\n-     * <code>reason<\/code>, <code>SQLState<\/code>, <code>vendorCode<\/code>\n-     * and  <code>cause<\/code>.\n+     * {@code reason}, {@code SQLState}, {@code vendorCode}\n+     * and  {@code cause}.\n@@ -170,1 +170,1 @@\n-     * @param cause the underlying reason for this <code>SQLException<\/code> (which is saved for later retrieval by the <code>getCause()<\/code> method); may be null indicating\n+     * @param cause the underlying reason for this {@code SQLException} (which is saved for later retrieval by the {@code getCause()} method); may be null indicating\n","filename":"src\/java.sql\/share\/classes\/java\/sql\/SQLFeatureNotSupportedException.java","additions":35,"deletions":35,"binary":false,"changes":70,"status":"modified"},{"patch":"@@ -33,5 +33,5 @@\n- * <code>SQLInput<\/code> methods. The <i>reader<\/i> methods\n- * (<code>readLong<\/code>, <code>readBytes<\/code>, and so on)\n- * provide a way  for an implementation of the <code>SQLData<\/code>\n- *  interface to read the values in an <code>SQLInput<\/code> object.\n- *  And as described in <code>SQLData<\/code>, calls to reader methods must\n+ * {@code SQLInput} methods. The <i>reader<\/i> methods\n+ * ({@code readLong}, {@code readBytes}, and so on)\n+ * provide a way  for an implementation of the {@code SQLData}\n+ *  interface to read the values in an {@code SQLInput} object.\n+ *  And as described in {@code SQLData}, calls to reader methods must\n@@ -40,5 +40,5 @@\n- * The method <code>wasNull<\/code> is used to determine whether\n- * the last value read was SQL <code>NULL<\/code>.\n- * <P>When the method <code>getObject<\/code> is called with an\n- * object of a class implementing the interface <code>SQLData<\/code>,\n- * the JDBC driver calls the method <code>SQLData.getSQLType<\/code>\n+ * The method {@code wasNull} is used to determine whether\n+ * the last value read was SQL {@code NULL}.\n+ * <P>When the method {@code getObject} is called with an\n+ * object of a class implementing the interface {@code SQLData},\n+ * the JDBC driver calls the method {@code SQLData.getSQLType}\n@@ -47,1 +47,1 @@\n- * creates an instance of <code>SQLInput<\/code>, populating it with the\n+ * creates an instance of {@code SQLInput}, populating it with the\n@@ -49,2 +49,2 @@\n- * stream to the method <code>SQLData.readSQL<\/code>, which in turn\n- * calls the <code>SQLInput<\/code> reader methods\n+ * stream to the method {@code SQLData.readSQL}, which in turn\n+ * calls the {@code SQLInput} reader methods\n@@ -66,1 +66,1 @@\n-     * Reads the next attribute in the stream and returns it as a <code>String<\/code>\n+     * Reads the next attribute in the stream and returns it as a {@code String}\n@@ -69,1 +69,1 @@\n-     * @return the attribute; if the value is SQL <code>NULL<\/code>, returns <code>null<\/code>\n+     * @return the attribute; if the value is SQL {@code NULL}, returns {@code null}\n@@ -78,1 +78,1 @@\n-     * Reads the next attribute in the stream and returns it as a <code>boolean<\/code>\n+     * Reads the next attribute in the stream and returns it as a {@code boolean}\n@@ -81,1 +81,1 @@\n-     * @return the attribute; if the value is SQL <code>NULL<\/code>, returns <code>false<\/code>\n+     * @return the attribute; if the value is SQL {@code NULL}, returns {@code false}\n@@ -90,1 +90,1 @@\n-     * Reads the next attribute in the stream and returns it as a <code>byte<\/code>\n+     * Reads the next attribute in the stream and returns it as a {@code byte}\n@@ -93,1 +93,1 @@\n-     * @return the attribute; if the value is SQL <code>NULL<\/code>, returns <code>0<\/code>\n+     * @return the attribute; if the value is SQL {@code NULL}, returns {@code 0}\n@@ -102,1 +102,1 @@\n-     * Reads the next attribute in the stream and returns it as a <code>short<\/code>\n+     * Reads the next attribute in the stream and returns it as a {@code short}\n@@ -105,1 +105,1 @@\n-     * @return the attribute; if the value is SQL <code>NULL<\/code>, returns <code>0<\/code>\n+     * @return the attribute; if the value is SQL {@code NULL}, returns {@code 0}\n@@ -114,1 +114,1 @@\n-     * Reads the next attribute in the stream and returns it as an <code>int<\/code>\n+     * Reads the next attribute in the stream and returns it as an {@code int}\n@@ -117,1 +117,1 @@\n-     * @return the attribute; if the value is SQL <code>NULL<\/code>, returns <code>0<\/code>\n+     * @return the attribute; if the value is SQL {@code NULL}, returns {@code 0}\n@@ -126,1 +126,1 @@\n-     * Reads the next attribute in the stream and returns it as a <code>long<\/code>\n+     * Reads the next attribute in the stream and returns it as a {@code long}\n@@ -129,1 +129,1 @@\n-     * @return the attribute; if the value is SQL <code>NULL<\/code>, returns <code>0<\/code>\n+     * @return the attribute; if the value is SQL {@code NULL}, returns {@code 0}\n@@ -138,1 +138,1 @@\n-     * Reads the next attribute in the stream and returns it as a <code>float<\/code>\n+     * Reads the next attribute in the stream and returns it as a {@code float}\n@@ -141,1 +141,1 @@\n-     * @return the attribute; if the value is SQL <code>NULL<\/code>, returns <code>0<\/code>\n+     * @return the attribute; if the value is SQL {@code NULL}, returns {@code 0}\n@@ -150,1 +150,1 @@\n-     * Reads the next attribute in the stream and returns it as a <code>double<\/code>\n+     * Reads the next attribute in the stream and returns it as a {@code double}\n@@ -153,1 +153,1 @@\n-     * @return the attribute; if the value is SQL <code>NULL<\/code>, returns <code>0<\/code>\n+     * @return the attribute; if the value is SQL {@code NULL}, returns {@code 0}\n@@ -162,1 +162,1 @@\n-     * Reads the next attribute in the stream and returns it as a <code>java.math.BigDecimal<\/code>\n+     * Reads the next attribute in the stream and returns it as a {@code java.math.BigDecimal}\n@@ -165,1 +165,1 @@\n-     * @return the attribute; if the value is SQL <code>NULL<\/code>, returns <code>null<\/code>\n+     * @return the attribute; if the value is SQL {@code NULL}, returns {@code null}\n@@ -177,1 +177,1 @@\n-     * @return the attribute; if the value is SQL <code>NULL<\/code>, returns <code>null<\/code>\n+     * @return the attribute; if the value is SQL {@code NULL}, returns {@code null}\n@@ -186,1 +186,1 @@\n-     * Reads the next attribute in the stream and returns it as a <code>java.sql.Date<\/code> object.\n+     * Reads the next attribute in the stream and returns it as a {@code java.sql.Date} object.\n@@ -188,1 +188,1 @@\n-     * @return the attribute; if the value is SQL <code>NULL<\/code>, returns <code>null<\/code>\n+     * @return the attribute; if the value is SQL {@code NULL}, returns {@code null}\n@@ -197,1 +197,1 @@\n-     * Reads the next attribute in the stream and returns it as a <code>java.sql.Time<\/code> object.\n+     * Reads the next attribute in the stream and returns it as a {@code java.sql.Time} object.\n@@ -199,1 +199,1 @@\n-     * @return the attribute; if the value is SQL <code>NULL<\/code>, returns <code>null<\/code>\n+     * @return the attribute; if the value is SQL {@code NULL}, returns {@code null}\n@@ -208,1 +208,1 @@\n-     * Reads the next attribute in the stream and returns it as a <code>java.sql.Timestamp<\/code> object.\n+     * Reads the next attribute in the stream and returns it as a {@code java.sql.Timestamp} object.\n@@ -210,1 +210,1 @@\n-     * @return the attribute; if the value is SQL <code>NULL<\/code>, returns <code>null<\/code>\n+     * @return the attribute; if the value is SQL {@code NULL}, returns {@code null}\n@@ -221,1 +221,1 @@\n-     * @return the attribute; if the value is SQL <code>NULL<\/code>, returns <code>null<\/code>\n+     * @return the attribute; if the value is SQL {@code NULL}, returns {@code null}\n@@ -232,1 +232,1 @@\n-     * @return the attribute; if the value is SQL <code>NULL<\/code>, returns <code>null<\/code>\n+     * @return the attribute; if the value is SQL {@code NULL}, returns {@code null}\n@@ -244,1 +244,1 @@\n-     * @return the attribute; if the value is SQL <code>NULL<\/code>, returns <code>null<\/code>\n+     * @return the attribute; if the value is SQL {@code NULL}, returns {@code null}\n@@ -258,1 +258,1 @@\n-     * <code>Object<\/code> in the Java programming language.  The\n+     * {@code Object} in the Java programming language.  The\n@@ -265,2 +265,2 @@\n-     * <P>When the datum at the head of the stream is an SQL <code>NULL<\/code>,\n-     * the method returns <code>null<\/code>.  If the datum is an SQL structured or distinct\n+     * <P>When the datum at the head of the stream is an SQL {@code NULL},\n+     * the method returns {@code null}.  If the datum is an SQL structured or distinct\n@@ -270,1 +270,1 @@\n-     * <code>SQLData.readSQL<\/code> on that object, which reads additional data from the\n+     * {@code SQLData.readSQL} on that object, which reads additional data from the\n@@ -273,2 +273,2 @@\n-     * @return the datum at the head of the stream as an <code>Object<\/code> in the\n-     * Java programming language;<code>null<\/code> if the datum is SQL <code>NULL<\/code>\n+     * @return the datum at the head of the stream as an {@code Object} in the\n+     * Java programming language;{@code null} if the datum is SQL {@code NULL}\n@@ -283,2 +283,2 @@\n-     * Reads an SQL <code>REF<\/code> value from the stream and returns it as a\n-     * <code>Ref<\/code> object in the Java programming language.\n+     * Reads an SQL {@code REF} value from the stream and returns it as a\n+     * {@code Ref} object in the Java programming language.\n@@ -286,3 +286,3 @@\n-     * @return a <code>Ref<\/code> object representing the SQL <code>REF<\/code> value\n-     * at the head of the stream; <code>null<\/code> if the value read is\n-     * SQL <code>NULL<\/code>\n+     * @return a {@code Ref} object representing the SQL {@code REF} value\n+     * at the head of the stream; {@code null} if the value read is\n+     * SQL {@code NULL}\n@@ -297,2 +297,2 @@\n-     * Reads an SQL <code>BLOB<\/code> value from the stream and returns it as a\n-     * <code>Blob<\/code> object in the Java programming language.\n+     * Reads an SQL {@code BLOB} value from the stream and returns it as a\n+     * {@code Blob} object in the Java programming language.\n@@ -300,3 +300,3 @@\n-     * @return a <code>Blob<\/code> object representing data of the SQL <code>BLOB<\/code> value\n-     * at the head of the stream; <code>null<\/code> if the value read is\n-     * SQL <code>NULL<\/code>\n+     * @return a {@code Blob} object representing data of the SQL {@code BLOB} value\n+     * at the head of the stream; {@code null} if the value read is\n+     * SQL {@code NULL}\n@@ -311,2 +311,2 @@\n-     * Reads an SQL <code>CLOB<\/code> value from the stream and returns it as a\n-     * <code>Clob<\/code> object in the Java programming language.\n+     * Reads an SQL {@code CLOB} value from the stream and returns it as a\n+     * {@code Clob} object in the Java programming language.\n@@ -314,3 +314,3 @@\n-     * @return a <code>Clob<\/code> object representing data of the SQL <code>CLOB<\/code> value\n-     * at the head of the stream; <code>null<\/code> if the value read is\n-     * SQL <code>NULL<\/code>\n+     * @return a {@code Clob} object representing data of the SQL {@code CLOB} value\n+     * at the head of the stream; {@code null} if the value read is\n+     * SQL {@code NULL}\n@@ -325,2 +325,2 @@\n-     * Reads an SQL <code>ARRAY<\/code> value from the stream and returns it as an\n-     * <code>Array<\/code> object in the Java programming language.\n+     * Reads an SQL {@code ARRAY} value from the stream and returns it as an\n+     * {@code Array} object in the Java programming language.\n@@ -328,3 +328,3 @@\n-     * @return an <code>Array<\/code> object representing data of the SQL\n-     * <code>ARRAY<\/code> value at the head of the stream; <code>null<\/code>\n-     * if the value read is SQL <code>NULL<\/code>\n+     * @return an {@code Array} object representing data of the SQL\n+     * {@code ARRAY} value at the head of the stream; {@code null}\n+     * if the value read is SQL {@code NULL}\n@@ -339,1 +339,1 @@\n-     * Retrieves whether the last value read was SQL <code>NULL<\/code>.\n+     * Retrieves whether the last value read was SQL {@code NULL}.\n@@ -341,2 +341,2 @@\n-     * @return <code>true<\/code> if the most recently read SQL value was SQL\n-     * <code>NULL<\/code>; <code>false<\/code> otherwise\n+     * @return {@code true} if the most recently read SQL value was SQL\n+     * {@code NULL}; {@code false} otherwise\n@@ -354,2 +354,2 @@\n-     * Reads an SQL <code>DATALINK<\/code> value from the stream and returns it as a\n-     * <code>java.net.URL<\/code> object in the Java programming language.\n+     * Reads an SQL {@code DATALINK} value from the stream and returns it as a\n+     * {@code java.net.URL} object in the Java programming language.\n@@ -357,1 +357,1 @@\n-     * @return a <code>java.net.URL<\/code> object.\n+     * @return a {@code java.net.URL} object.\n@@ -369,2 +369,2 @@\n-     * Reads an SQL <code>NCLOB<\/code> value from the stream and returns it as a\n-     * <code>NClob<\/code> object in the Java programming language.\n+     * Reads an SQL {@code NCLOB} value from the stream and returns it as a\n+     * {@code NClob} object in the Java programming language.\n@@ -372,3 +372,3 @@\n-     * @return a <code>NClob<\/code> object representing data of the SQL <code>NCLOB<\/code> value\n-     * at the head of the stream; <code>null<\/code> if the value read is\n-     * SQL <code>NULL<\/code>\n+     * @return a {@code NClob} object representing data of the SQL {@code NCLOB} value\n+     * at the head of the stream; {@code null} if the value read is\n+     * SQL {@code NULL}\n@@ -383,1 +383,1 @@\n-     * Reads the next attribute in the stream and returns it as a <code>String<\/code>\n+     * Reads the next attribute in the stream and returns it as a {@code String}\n@@ -385,2 +385,2 @@\n-     * accessing  <code>NCHAR<\/code>,<code>NVARCHAR<\/code>\n-     * and <code>LONGNVARCHAR<\/code> columns.\n+     * accessing  {@code NCHAR},{@code NVARCHAR}\n+     * and {@code LONGNVARCHAR} columns.\n@@ -388,1 +388,1 @@\n-     * @return the attribute; if the value is SQL <code>NULL<\/code>, returns <code>null<\/code>\n+     * @return the attribute; if the value is SQL {@code NULL}, returns {@code null}\n@@ -397,2 +397,2 @@\n-     * Reads an SQL <code>XML<\/code> value from the stream and returns it as a\n-     * <code>SQLXML<\/code> object in the Java programming language.\n+     * Reads an SQL {@code XML} value from the stream and returns it as a\n+     * {@code SQLXML} object in the Java programming language.\n@@ -400,3 +400,3 @@\n-     * @return a <code>SQLXML<\/code> object representing data of the SQL <code>XML<\/code> value\n-     * at the head of the stream; <code>null<\/code> if the value read is\n-     * SQL <code>NULL<\/code>\n+     * @return a {@code SQLXML} object representing data of the SQL {@code XML} value\n+     * at the head of the stream; {@code null} if the value read is\n+     * SQL {@code NULL}\n@@ -411,2 +411,2 @@\n-     * Reads an SQL <code>ROWID<\/code> value from the stream and returns it as a\n-     * <code>RowId<\/code> object in the Java programming language.\n+     * Reads an SQL {@code ROWID} value from the stream and returns it as a\n+     * {@code RowId} object in the Java programming language.\n@@ -414,3 +414,3 @@\n-     * @return a <code>RowId<\/code> object representing data of the SQL <code>ROWID<\/code> value\n-     * at the head of the stream; <code>null<\/code> if the value read is\n-     * SQL <code>NULL<\/code>\n+     * @return a {@code RowId} object representing data of the SQL {@code ROWID} value\n+     * at the head of the stream; {@code null} if the value read is\n+     * SQL {@code NULL}\n","filename":"src\/java.sql\/share\/classes\/java\/sql\/SQLInput.java","additions":92,"deletions":92,"binary":false,"changes":184,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,1 +35,1 @@\n- * conditions for which this <code>Exception<\/code> may be thrown.\n+ * conditions for which this {@code Exception} may be thrown.\n@@ -41,3 +41,3 @@\n-         * Constructs a <code>SQLIntegrityConstraintViolationException<\/code> object.\n-         * The <code>reason<\/code>, <code>SQLState<\/code> are initialized\n-         * to <code>null<\/code> and the vendor code is initialized to 0.\n+         * Constructs a {@code SQLIntegrityConstraintViolationException} object.\n+         * The {@code reason}, {@code SQLState} are initialized\n+         * to {@code null} and the vendor code is initialized to 0.\n@@ -45,1 +45,1 @@\n-         * The <code>cause<\/code> is not initialized, and may subsequently be\n+         * The {@code cause} is not initialized, and may subsequently be\n@@ -56,3 +56,3 @@\n-         * Constructs a <code>SQLIntegrityConstraintViolationException<\/code>\n-         *  with a given <code>reason<\/code>. The <code>SQLState<\/code>\n-         * is initialized to <code>null<\/code> and the vendor code is initialized\n+         * Constructs a {@code SQLIntegrityConstraintViolationException}\n+         *  with a given {@code reason}. The {@code SQLState}\n+         * is initialized to {@code null} and the vendor code is initialized\n@@ -61,1 +61,1 @@\n-         * The <code>cause<\/code> is not initialized, and may subsequently be\n+         * The {@code cause} is not initialized, and may subsequently be\n@@ -73,2 +73,2 @@\n-         * Constructs a <code>SQLIntegrityConstraintViolationException<\/code>\n-         * object with a given <code>reason<\/code> and <code>SQLState<\/code>.\n+         * Constructs a {@code SQLIntegrityConstraintViolationException}\n+         * object with a given {@code reason} and {@code SQLState}.\n@@ -76,1 +76,1 @@\n-         * The <code>cause<\/code> is not initialized, and may subsequently be\n+         * The {@code cause} is not initialized, and may subsequently be\n@@ -90,3 +90,3 @@\n-         * Constructs a <code>SQLIntegrityConstraintViolationException<\/code> object\n-         * with a given <code>reason<\/code>, <code>SQLState<\/code>  and\n-         * <code>vendorCode<\/code>.\n+         * Constructs a {@code SQLIntegrityConstraintViolationException} object\n+         * with a given {@code reason}, {@code SQLState}  and\n+         * {@code vendorCode}.\n@@ -94,1 +94,1 @@\n-         * The <code>cause<\/code> is not initialized, and may subsequently be\n+         * The {@code cause} is not initialized, and may subsequently be\n@@ -108,7 +108,7 @@\n-         * Constructs an <code>SQLIntegrityConstraintViolationException<\/code> object with\n-         *  a given  <code>cause<\/code>.\n-     * The <code>SQLState<\/code> is initialized\n-     * to <code>null<\/code> and the vendor code is initialized to 0.\n-     * The <code>reason<\/code>  is initialized to <code>null<\/code> if\n-     * <code>cause==null<\/code> or to <code>cause.toString()<\/code> if\n-     * <code>cause!=null<\/code>.\n+         * Constructs an {@code SQLIntegrityConstraintViolationException} object with\n+         *  a given  {@code cause}.\n+     * The {@code SQLState} is initialized\n+     * to {@code null} and the vendor code is initialized to 0.\n+     * The {@code reason}  is initialized to {@code null} if\n+     * {@code cause==null} or to {@code cause.toString()} if\n+     * {@code cause!=null}.\n@@ -116,1 +116,1 @@\n-     * @param cause the underlying reason for this <code>SQLException<\/code> (which is saved for later retrieval by the <code>getCause()<\/code>  method); may be null indicating\n+     * @param cause the underlying reason for this {@code SQLException} (which is saved for later retrieval by the {@code getCause()}  method); may be null indicating\n@@ -125,1 +125,1 @@\n-     * Constructs a <code>SQLIntegrityConstraintViolationException<\/code> object\n+     * Constructs a {@code SQLIntegrityConstraintViolationException} object\n@@ -127,2 +127,2 @@\n-     * <code>reason<\/code> and  <code>cause<\/code>.\n-     * The <code>SQLState<\/code> is  initialized to <code>null<\/code>\n+     * {@code reason} and  {@code cause}.\n+     * The {@code SQLState} is  initialized to {@code null}\n@@ -132,1 +132,1 @@\n-     * @param cause the (which is saved for later retrieval by the <code>getCause()<\/code> method); may be null indicating\n+     * @param cause the (which is saved for later retrieval by the {@code getCause()} method); may be null indicating\n@@ -141,1 +141,1 @@\n-     * Constructs a <code>SQLIntegrityConstraintViolationException<\/code> object\n+     * Constructs a {@code SQLIntegrityConstraintViolationException} object\n@@ -143,1 +143,1 @@\n-     * <code>reason<\/code>, <code>SQLState<\/code> and  <code>cause<\/code>.\n+     * {@code reason}, {@code SQLState} and  {@code cause}.\n@@ -148,1 +148,1 @@\n-     * @param cause the underlying reason for this <code>SQLException<\/code> (which is saved for later retrieval by the <code>getCause()<\/code>  method); may be null indicating\n+     * @param cause the underlying reason for this {@code SQLException} (which is saved for later retrieval by the {@code getCause()}  method); may be null indicating\n@@ -157,1 +157,1 @@\n-     *  Constructs a <code>SQLIntegrityConstraintViolationException<\/code> object\n+     *  Constructs a {@code SQLIntegrityConstraintViolationException} object\n@@ -159,2 +159,2 @@\n-     * <code>reason<\/code>, <code>SQLState<\/code>, <code>vendorCode<\/code>\n-     * and  <code>cause<\/code>.\n+     * {@code reason}, {@code SQLState}, {@code vendorCode}\n+     * and  {@code cause}.\n@@ -165,1 +165,1 @@\n-     * @param cause the (which is saved for later retrieval by the <code>getCause()<\/code> method); may be null indicating\n+     * @param cause the (which is saved for later retrieval by the {@code getCause()} method); may be null indicating\n","filename":"src\/java.sql\/share\/classes\/java\/sql\/SQLIntegrityConstraintViolationException.java","additions":36,"deletions":36,"binary":false,"changes":72,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,1 +35,1 @@\n- * conditions for which this <code>Exception<\/code> may be thrown.\n+ * conditions for which this {@code Exception} may be thrown.\n@@ -41,3 +41,3 @@\n-         * Constructs a <code>SQLInvalidAuthorizationSpecException<\/code> object.\n-         * The <code>reason<\/code>, <code>SQLState<\/code> are initialized\n-         * to <code>null<\/code> and the vendor code is initialized to 0.\n+         * Constructs a {@code SQLInvalidAuthorizationSpecException} object.\n+         * The {@code reason}, {@code SQLState} are initialized\n+         * to {@code null} and the vendor code is initialized to 0.\n@@ -45,1 +45,1 @@\n-         * The <code>cause<\/code> is not initialized, and may subsequently be\n+         * The {@code cause} is not initialized, and may subsequently be\n@@ -56,3 +56,3 @@\n-         * Constructs a <code>SQLInvalidAuthorizationSpecException<\/code> object\n-         *  with a given <code>reason<\/code>. The <code>SQLState<\/code>\n-         * is initialized to <code>null<\/code> and the vendor code is initialized\n+         * Constructs a {@code SQLInvalidAuthorizationSpecException} object\n+         *  with a given {@code reason}. The {@code SQLState}\n+         * is initialized to {@code null} and the vendor code is initialized\n@@ -61,1 +61,1 @@\n-         * The <code>cause<\/code> is not initialized, and may subsequently be\n+         * The {@code cause} is not initialized, and may subsequently be\n@@ -73,2 +73,2 @@\n-         * Constructs a <code>SQLInvalidAuthorizationSpecException<\/code> object\n-         * with a given <code>reason<\/code> and <code>SQLState<\/code>.\n+         * Constructs a {@code SQLInvalidAuthorizationSpecException} object\n+         * with a given {@code reason} and {@code SQLState}.\n@@ -76,1 +76,1 @@\n-         * The <code>cause<\/code> is not initialized, and may subsequently be\n+         * The {@code cause} is not initialized, and may subsequently be\n@@ -90,3 +90,3 @@\n-         * Constructs a <code>SQLInvalidAuthorizationSpecException<\/code> object\n-         * with a given <code>reason<\/code>, <code>SQLState<\/code>  and\n-         * <code>vendorCode<\/code>.\n+         * Constructs a {@code SQLInvalidAuthorizationSpecException} object\n+         * with a given {@code reason}, {@code SQLState}  and\n+         * {@code vendorCode}.\n@@ -94,1 +94,1 @@\n-         * The <code>cause<\/code> is not initialized, and may subsequently be\n+         * The {@code cause} is not initialized, and may subsequently be\n@@ -108,7 +108,7 @@\n-     * Constructs a <code>SQLInvalidAuthorizationSpecException<\/code> object\n-     * with a given  <code>cause<\/code>.\n-     * The <code>SQLState<\/code> is initialized\n-     * to <code>null<\/code> and the vendor code is initialized to 0.\n-     * The <code>reason<\/code>  is initialized to <code>null<\/code> if\n-     * <code>cause==null<\/code> or to <code>cause.toString()<\/code> if\n-     * <code>cause!=null<\/code>.\n+     * Constructs a {@code SQLInvalidAuthorizationSpecException} object\n+     * with a given  {@code cause}.\n+     * The {@code SQLState} is initialized\n+     * to {@code null} and the vendor code is initialized to 0.\n+     * The {@code reason}  is initialized to {@code null} if\n+     * {@code cause==null} or to {@code cause.toString()} if\n+     * {@code cause!=null}.\n@@ -116,1 +116,1 @@\n-     * @param cause the underlying reason for this <code>SQLException<\/code> (which is saved for later retrieval by the <code>getCause()<\/code> method); may be null indicating\n+     * @param cause the underlying reason for this {@code SQLException} (which is saved for later retrieval by the {@code getCause()} method); may be null indicating\n@@ -125,1 +125,1 @@\n-     * Constructs a <code>SQLInvalidAuthorizationSpecException<\/code> object\n+     * Constructs a {@code SQLInvalidAuthorizationSpecException} object\n@@ -127,2 +127,2 @@\n-     * <code>reason<\/code> and  <code>cause<\/code>.\n-     * The <code>SQLState<\/code> is  initialized to <code>null<\/code>\n+     * {@code reason} and  {@code cause}.\n+     * The {@code SQLState} is  initialized to {@code null}\n@@ -132,1 +132,1 @@\n-     * @param cause the underlying reason for this <code>SQLException<\/code> (which is saved for later retrieval by the <code>getCause()<\/code> method); may be null indicating\n+     * @param cause the underlying reason for this {@code SQLException} (which is saved for later retrieval by the {@code getCause()} method); may be null indicating\n@@ -141,1 +141,1 @@\n-     * Constructs a <code>SQLInvalidAuthorizationSpecException<\/code> object\n+     * Constructs a {@code SQLInvalidAuthorizationSpecException} object\n@@ -143,1 +143,1 @@\n-     * <code>reason<\/code>, <code>SQLState<\/code> and  <code>cause<\/code>.\n+     * {@code reason}, {@code SQLState} and  {@code cause}.\n@@ -148,1 +148,1 @@\n-     * @param cause the underlying reason for this <code>SQLException<\/code> (which is saved for later retrieval by the <code>getCause()<\/code>  method); may be null indicating\n+     * @param cause the underlying reason for this {@code SQLException} (which is saved for later retrieval by the {@code getCause()}  method); may be null indicating\n@@ -157,1 +157,1 @@\n-     *  Constructs a <code>SQLInvalidAuthorizationSpecException<\/code> object\n+     *  Constructs a {@code SQLInvalidAuthorizationSpecException} object\n@@ -159,2 +159,2 @@\n-     * <code>reason<\/code>, <code>SQLState<\/code>, <code>vendorCode<\/code>\n-     * and  <code>cause<\/code>.\n+     * {@code reason}, {@code SQLState}, {@code vendorCode}\n+     * and  {@code cause}.\n@@ -165,1 +165,1 @@\n-     * @param cause the underlying reason for this <code>SQLException<\/code> (which is saved for later retrieval by the <code>getCause()<\/code> method); may be null indicating\n+     * @param cause the underlying reason for this {@code SQLException} (which is saved for later retrieval by the {@code getCause()} method); may be null indicating\n","filename":"src\/java.sql\/share\/classes\/java\/sql\/SQLInvalidAuthorizationSpecException.java","additions":36,"deletions":36,"binary":false,"changes":72,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,1 +35,1 @@\n- * conditions for which this <code>Exception<\/code> may be thrown.\n+ * conditions for which this {@code Exception} may be thrown.\n@@ -41,3 +41,3 @@\n-         * Constructs a <code>SQLNonTransientConnectionException<\/code> object.\n-         * The <code>reason<\/code>, <code>SQLState<\/code> are initialized\n-         * to <code>null<\/code> and the vendor code is initialized to 0.\n+         * Constructs a {@code SQLNonTransientConnectionException} object.\n+         * The {@code reason}, {@code SQLState} are initialized\n+         * to {@code null} and the vendor code is initialized to 0.\n@@ -45,1 +45,1 @@\n-         * The <code>cause<\/code> is not initialized, and may subsequently be\n+         * The {@code cause} is not initialized, and may subsequently be\n@@ -56,3 +56,3 @@\n-         * Constructs a <code>SQLNonTransientConnectionException<\/code> object\n-         *  with a given <code>reason<\/code>. The <code>SQLState<\/code>\n-         * is initialized to <code>null<\/code> and the vendor code is initialized\n+         * Constructs a {@code SQLNonTransientConnectionException} object\n+         *  with a given {@code reason}. The {@code SQLState}\n+         * is initialized to {@code null} and the vendor code is initialized\n@@ -61,1 +61,1 @@\n-         * The <code>cause<\/code> is not initialized, and may subsequently be\n+         * The {@code cause} is not initialized, and may subsequently be\n@@ -73,2 +73,2 @@\n-         * Constructs a <code>SQLNonTransientConnectionException<\/code> object\n-         * with a given <code>reason<\/code> and <code>SQLState<\/code>.\n+         * Constructs a {@code SQLNonTransientConnectionException} object\n+         * with a given {@code reason} and {@code SQLState}.\n@@ -76,1 +76,1 @@\n-         * The <code>cause<\/code> is not initialized, and may subsequently be\n+         * The {@code cause} is not initialized, and may subsequently be\n@@ -90,3 +90,3 @@\n-         * Constructs a <code>SQLNonTransientConnectionException<\/code> object\n-         * with a given <code>reason<\/code>, <code>SQLState<\/code>  and\n-         * <code>vendorCode<\/code>.\n+         * Constructs a {@code SQLNonTransientConnectionException} object\n+         * with a given {@code reason}, {@code SQLState}  and\n+         * {@code vendorCode}.\n@@ -94,1 +94,1 @@\n-         * The <code>cause<\/code> is not initialized, and may subsequently be\n+         * The {@code cause} is not initialized, and may subsequently be\n@@ -108,7 +108,7 @@\n-     * Constructs a <code>SQLNonTransientConnectionException<\/code> object\n-     * with a given  <code>cause<\/code>.\n-     * The <code>SQLState<\/code> is initialized\n-     * to <code>null<\/code> and the vendor code is initialized to 0.\n-     * The <code>reason<\/code>  is initialized to <code>null<\/code> if\n-     * <code>cause==null<\/code> or to <code>cause.toString()<\/code> if\n-     * <code>cause!=null<\/code>.\n+     * Constructs a {@code SQLNonTransientConnectionException} object\n+     * with a given  {@code cause}.\n+     * The {@code SQLState} is initialized\n+     * to {@code null} and the vendor code is initialized to 0.\n+     * The {@code reason}  is initialized to {@code null} if\n+     * {@code cause==null} or to {@code cause.toString()} if\n+     * {@code cause!=null}.\n@@ -116,1 +116,1 @@\n-     * @param cause the underlying reason for this <code>SQLException<\/code> (which is saved for later retrieval by the <code>getCause()<\/code> method); may be null indicating\n+     * @param cause the underlying reason for this {@code SQLException} (which is saved for later retrieval by the {@code getCause()} method); may be null indicating\n@@ -125,1 +125,1 @@\n-     * Constructs a <code>SQLTransientException<\/code> object\n+     * Constructs a {@code SQLNonTransientConnectionException} object\n@@ -127,2 +127,2 @@\n-     * <code>reason<\/code> and  <code>cause<\/code>.\n-     * The <code>SQLState<\/code> is  initialized to <code>null<\/code>\n+     * {@code reason} and  {@code cause}.\n+     * The {@code SQLState} is  initialized to {@code null}\n@@ -132,1 +132,1 @@\n-     * @param cause the underlying reason for this <code>SQLException<\/code> (which is saved for later retrieval by the <code>getCause()<\/code> method); may be null indicating\n+     * @param cause the underlying reason for this {@code SQLException} (which is saved for later retrieval by the {@code getCause()} method); may be null indicating\n@@ -141,1 +141,1 @@\n-     * Constructs a <code>SQLNonTransientConnectionException<\/code> object\n+     * Constructs a {@code SQLNonTransientConnectionException} object\n@@ -143,1 +143,1 @@\n-     * <code>reason<\/code>, <code>SQLState<\/code> and  <code>cause<\/code>.\n+     * {@code reason}, {@code SQLState} and  {@code cause}.\n@@ -148,1 +148,1 @@\n-     * @param cause the (which is saved for later retrieval by the <code>getCause()<\/code> method); may be null indicating\n+     * @param cause the (which is saved for later retrieval by the {@code getCause()} method); may be null indicating\n@@ -157,1 +157,1 @@\n-     * Constructs a <code>SQLNonTransientConnectionException<\/code> object\n+     * Constructs a {@code SQLNonTransientConnectionException} object\n@@ -159,2 +159,2 @@\n-     * <code>reason<\/code>, <code>SQLState<\/code>, <code>vendorCode<\/code>\n-     * and  <code>cause<\/code>.\n+     * {@code reason}, {@code SQLState}, {@code vendorCode}\n+     * and  {@code cause}.\n@@ -165,1 +165,1 @@\n-     * @param cause the underlying reason for this <code>SQLException<\/code> (which is saved for later retrieval by the <code>getCause()<\/code> method); may be null indicating\n+     * @param cause the underlying reason for this {@code SQLException} (which is saved for later retrieval by the {@code getCause()} method); may be null indicating\n","filename":"src\/java.sql\/share\/classes\/java\/sql\/SQLNonTransientConnectionException.java","additions":36,"deletions":36,"binary":false,"changes":72,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,1 @@\n- * of the same operation would fail unless the cause of the <code>SQLException<\/code>\n+ * of the same operation would fail unless the cause of the {@code SQLException}\n@@ -38,3 +38,3 @@\n-         * Constructs a <code>SQLNonTransientException<\/code> object.\n-         *  The <code>reason<\/code>, <code>SQLState<\/code> are initialized\n-         * to <code>null<\/code> and the vendor code is initialized to 0.\n+         * Constructs a {@code SQLNonTransientException} object.\n+         *  The {@code reason}, {@code SQLState} are initialized\n+         * to {@code null} and the vendor code is initialized to 0.\n@@ -42,1 +42,1 @@\n-         * The <code>cause<\/code> is not initialized, and may subsequently be\n+         * The {@code cause} is not initialized, and may subsequently be\n@@ -53,3 +53,3 @@\n-         * Constructs a <code>SQLNonTransientException<\/code> object\n-         * with a given <code>reason<\/code>. The <code>SQLState<\/code>\n-         * is initialized to <code>null<\/code> and the vendor code is initialized\n+         * Constructs a {@code SQLNonTransientException} object\n+         * with a given {@code reason}. The {@code SQLState}\n+         * is initialized to {@code null} and the vendor code is initialized\n@@ -58,1 +58,1 @@\n-         * The <code>cause<\/code> is not initialized, and may subsequently be\n+         * The {@code cause} is not initialized, and may subsequently be\n@@ -70,2 +70,2 @@\n-         * Constructs a <code>SQLNonTransientException<\/code> object\n-         * with a given <code>reason<\/code> and <code>SQLState<\/code>.\n+         * Constructs a {@code SQLNonTransientException} object\n+         * with a given {@code reason} and {@code SQLState}.\n@@ -73,1 +73,1 @@\n-         * The <code>cause<\/code> is not initialized, and may subsequently be\n+         * The {@code cause} is not initialized, and may subsequently be\n@@ -87,3 +87,3 @@\n-         * Constructs a <code>SQLNonTransientException<\/code> object\n-         * with a given <code>reason<\/code>, <code>SQLState<\/code>  and\n-         * <code>vendorCode<\/code>.\n+         * Constructs a {@code SQLNonTransientException} object\n+         * with a given {@code reason}, {@code SQLState}  and\n+         * {@code vendorCode}.\n@@ -91,1 +91,1 @@\n-         * The <code>cause<\/code> is not initialized, and may subsequently be\n+         * The {@code cause} is not initialized, and may subsequently be\n@@ -105,7 +105,7 @@\n-     * Constructs a <code>SQLNonTransientException<\/code> object\n-     *  with a given  <code>cause<\/code>.\n-     * The <code>SQLState<\/code> is initialized\n-     * to <code>null<\/code> and the vendor code is initialized to 0.\n-     * The <code>reason<\/code>  is initialized to <code>null<\/code> if\n-     * <code>cause==null<\/code> or to <code>cause.toString()<\/code> if\n-     * <code>cause!=null<\/code>.\n+     * Constructs a {@code SQLNonTransientException} object\n+     *  with a given  {@code cause}.\n+     * The {@code SQLState} is initialized\n+     * to {@code null} and the vendor code is initialized to 0.\n+     * The {@code reason}  is initialized to {@code null} if\n+     * {@code cause==null} or to {@code cause.toString()} if\n+     * {@code cause!=null}.\n@@ -113,1 +113,1 @@\n-     * @param cause the underlying reason for this <code>SQLException<\/code> (which is saved for later retrieval by the <code>getCause()<\/code> method); may be null indicating\n+     * @param cause the underlying reason for this {@code SQLException} (which is saved for later retrieval by the {@code getCause()} method); may be null indicating\n@@ -122,1 +122,1 @@\n-     * Constructs a <code>SQLTransientException<\/code> object\n+     * Constructs a {@code SQLNonTransientException} object\n@@ -124,2 +124,2 @@\n-     * <code>reason<\/code> and  <code>cause<\/code>.\n-     * The <code>SQLState<\/code> is  initialized to <code>null<\/code>\n+     * {@code reason} and  {@code cause}.\n+     * The {@code SQLState} is  initialized to {@code null}\n@@ -129,1 +129,1 @@\n-     * @param cause the underlying reason for this <code>SQLException<\/code> (which is saved for later retrieval by the <code>getCause()<\/code> method); may be null indicating\n+     * @param cause the underlying reason for this {@code SQLException} (which is saved for later retrieval by the {@code getCause()} method); may be null indicating\n@@ -139,1 +139,1 @@\n-     * Constructs a <code>SQLNonTransientException<\/code> object\n+     * Constructs a {@code SQLNonTransientException} object\n@@ -141,1 +141,1 @@\n-     * <code>reason<\/code>, <code>SQLState<\/code> and  <code>cause<\/code>.\n+     * {@code reason}, {@code SQLState} and  {@code cause}.\n@@ -146,1 +146,1 @@\n-     * @param cause the underlying reason for this <code>SQLException<\/code> (which is saved for later retrieval by the <code>getCause()<\/code> method); may be null indicating\n+     * @param cause the underlying reason for this {@code SQLException} (which is saved for later retrieval by the {@code getCause()} method); may be null indicating\n@@ -155,1 +155,1 @@\n-     * Constructs a <code>SQLNonTransientException<\/code> object\n+     * Constructs a {@code SQLNonTransientException} object\n@@ -157,2 +157,2 @@\n-     * <code>reason<\/code>, <code>SQLState<\/code>, <code>vendorCode<\/code>\n-     * and  <code>cause<\/code>.\n+     * {@code reason}, {@code SQLState}, {@code vendorCode}\n+     * and  {@code cause}.\n@@ -163,1 +163,1 @@\n-     * @param cause the underlying reason for this <code>SQLException<\/code> (which is saved for later retrieval by the <code>getCause()<\/code> method); may be null indicating\n+     * @param cause the underlying reason for this {@code SQLException} (which is saved for later retrieval by the {@code getCause()} method); may be null indicating\n","filename":"src\/java.sql\/share\/classes\/java\/sql\/SQLNonTransientException.java","additions":36,"deletions":36,"binary":false,"changes":72,"status":"modified"},{"patch":"@@ -34,2 +34,2 @@\n- * <code>SQLData<\/code> is passed as an argument to an SQL statement, the\n- * JDBC driver calls the method <code>SQLData.getSQLType<\/code> to\n+ * {@code SQLData} is passed as an argument to an SQL statement, the\n+ * JDBC driver calls the method {@code SQLData.getSQLType} to\n@@ -38,7 +38,7 @@\n- * The driver then creates an instance of <code>SQLOutput<\/code> and\n- * passes it to the method <code>SQLData.writeSQL<\/code>.\n- * The method <code>writeSQL<\/code> in turn calls the\n- * appropriate <code>SQLOutput<\/code> <i>writer<\/i> methods\n- * <code>writeBoolean<\/code>, <code>writeCharacterStream<\/code>, and so on)\n- * to write data from the <code>SQLData<\/code> object to\n- * the <code>SQLOutput<\/code> output stream as the\n+ * The driver then creates an instance of {@code SQLOutput} and\n+ * passes it to the method {@code SQLData.writeSQL}.\n+ * The method {@code writeSQL} in turn calls the\n+ * appropriate {@code SQLOutput} <i>writer<\/i> methods\n+ * {@code writeBoolean}, {@code writeCharacterStream}, and so on)\n+ * to write data from the {@code SQLData} object to\n+ * the {@code SQLOutput} output stream as the\n@@ -58,1 +58,1 @@\n-   * Writes the next attribute to the stream as a <code>String<\/code>\n+   * Writes the next attribute to the stream as a {@code String}\n@@ -71,1 +71,1 @@\n-   * Writes the next attribute to the stream as a <code>String<\/code>\n+   * Writes the next attribute to the stream as a {@code String}\n@@ -84,1 +84,1 @@\n-   * Writes the next attribute to the stream as a <code>String<\/code>\n+   * Writes the next attribute to the stream as a {@code String}\n@@ -97,1 +97,1 @@\n-   * Writes the next attribute to the stream as a <code>String<\/code>\n+   * Writes the next attribute to the stream as a {@code String}\n@@ -110,1 +110,1 @@\n-   * Writes the next attribute to the stream as a <code>String<\/code>\n+   * Writes the next attribute to the stream as a {@code String}\n@@ -123,1 +123,1 @@\n-   * Writes the next attribute to the stream as a <code>String<\/code>\n+   * Writes the next attribute to the stream as a {@code String}\n@@ -136,1 +136,1 @@\n-   * Writes the next attribute to the stream as a <code>String<\/code>\n+   * Writes the next attribute to the stream as a {@code String}\n@@ -149,1 +149,1 @@\n-   * Writes the next attribute to the stream as a <code>String<\/code>\n+   * Writes the next attribute to the stream as a {@code String}\n@@ -162,1 +162,1 @@\n-   * Writes the next attribute to the stream as a <code>String<\/code>\n+   * Writes the next attribute to the stream as a {@code String}\n@@ -175,1 +175,1 @@\n-   * Writes the next attribute to the stream as a <code>String<\/code>\n+   * Writes the next attribute to the stream as a {@code String}\n@@ -188,1 +188,1 @@\n-   * Writes the next attribute to the stream as a <code>java.sql.Date<\/code> object\n+   * Writes the next attribute to the stream as a {@code java.sql.Date} object\n@@ -201,1 +201,1 @@\n-   * Writes the next attribute to the stream as a <code>java.sql.Date<\/code> object\n+   * Writes the next attribute to the stream as a {@code java.sql.Date} object\n@@ -214,1 +214,1 @@\n-   * Writes the next attribute to the stream as a <code>java.sql.Date<\/code> object\n+   * Writes the next attribute to the stream as a {@code java.sql.Date} object\n@@ -269,4 +269,4 @@\n-   * <code>SQLData<\/code> object.\n-   * When the <code>SQLData<\/code> object is <code>null<\/code>, this\n-   * method writes an SQL <code>NULL<\/code> to the stream.\n-   * Otherwise, it calls the <code>SQLData.writeSQL<\/code>\n+   * {@code SQLData} object.\n+   * When the {@code SQLData} object is {@code null}, this\n+   * method writes an SQL {@code NULL} to the stream.\n+   * Otherwise, it calls the {@code SQLData.writeSQL}\n@@ -275,2 +275,2 @@\n-   * The implementation of the method <code>SQLData.writeSQL<\/code>\n-   * calls the appropriate <code>SQLOutput<\/code> writer method(s)\n+   * The implementation of the method {@code SQLData.writeSQL}\n+   * calls the appropriate {@code SQLOutput} writer method(s)\n@@ -278,2 +278,2 @@\n-   * The attributes must be read from an <code>SQLInput<\/code>\n-   * input stream and written to an <code>SQLOutput<\/code>\n+   * The attributes must be read from an {@code SQLInput}\n+   * input stream and written to an {@code SQLOutput}\n@@ -293,1 +293,1 @@\n-   * Writes an SQL <code>REF<\/code> value to the stream.\n+   * Writes an SQL {@code REF} value to the stream.\n@@ -295,2 +295,2 @@\n-   * @param x a <code>Ref<\/code> object representing data of an SQL\n-   * <code>REF<\/code> value\n+   * @param x a {@code Ref} object representing data of an SQL\n+   * {@code REF} value\n@@ -305,1 +305,1 @@\n-   * Writes an SQL <code>BLOB<\/code> value to the stream.\n+   * Writes an SQL {@code BLOB} value to the stream.\n@@ -307,2 +307,2 @@\n-   * @param x a <code>Blob<\/code> object representing data of an SQL\n-   * <code>BLOB<\/code> value\n+   * @param x a {@code Blob} object representing data of an SQL\n+   * {@code BLOB} value\n@@ -318,1 +318,1 @@\n-   * Writes an SQL <code>CLOB<\/code> value to the stream.\n+   * Writes an SQL {@code CLOB} value to the stream.\n@@ -320,2 +320,2 @@\n-   * @param x a <code>Clob<\/code> object representing data of an SQL\n-   * <code>CLOB<\/code> value\n+   * @param x a {@code Clob} object representing data of an SQL\n+   * {@code CLOB} value\n@@ -333,1 +333,1 @@\n-   * @param x a <code>Struct<\/code> object representing data of an SQL\n+   * @param x a {@code Struct} object representing data of an SQL\n@@ -344,1 +344,1 @@\n-   * Writes an SQL <code>ARRAY<\/code> value to the stream.\n+   * Writes an SQL {@code ARRAY} value to the stream.\n@@ -346,2 +346,2 @@\n-   * @param x an <code>Array<\/code> object representing data of an SQL\n-   * <code>ARRAY<\/code> type\n+   * @param x an {@code Array} object representing data of an SQL\n+   * {@code ARRAY} type\n@@ -359,1 +359,1 @@\n-      * Writes a SQL <code>DATALINK<\/code> value to the stream.\n+      * Writes a SQL {@code DATALINK} value to the stream.\n@@ -361,1 +361,1 @@\n-      * @param x a <code>java.net.URL<\/code> object representing the data\n+      * @param x a {@code java.net.URL} object representing the data\n@@ -374,1 +374,1 @@\n-   * Writes the next attribute to the stream as a <code>String<\/code>\n+   * Writes the next attribute to the stream as a {@code String}\n@@ -376,2 +376,2 @@\n-   * SQL <code>NCHAR<\/code> or\n-   * <code>NVARCHAR<\/code> or <code>LONGNVARCHAR<\/code> value\n+   * SQL {@code NCHAR} or\n+   * {@code NVARCHAR} or {@code LONGNVARCHAR} value\n@@ -379,1 +379,1 @@\n-   * size relative to the driver's limits on <code>NVARCHAR<\/code> values)\n+   * size relative to the driver's limits on {@code NVARCHAR} values)\n@@ -391,1 +391,1 @@\n-   * Writes an SQL <code>NCLOB<\/code> value to the stream.\n+   * Writes an SQL {@code NCLOB} value to the stream.\n@@ -393,2 +393,2 @@\n-   * @param x a <code>NClob<\/code> object representing data of an SQL\n-   * <code>NCLOB<\/code> value\n+   * @param x a {@code NClob} object representing data of an SQL\n+   * {@code NCLOB} value\n@@ -405,1 +405,1 @@\n-   * Writes an SQL <code>ROWID<\/code> value to the stream.\n+   * Writes an SQL {@code ROWID} value to the stream.\n@@ -407,2 +407,2 @@\n-   * @param x a <code>RowId<\/code> object representing data of an SQL\n-   * <code>ROWID<\/code> value\n+   * @param x a {@code RowId} object representing data of an SQL\n+   * {@code ROWID} value\n@@ -419,1 +419,1 @@\n-   * Writes an SQL <code>XML<\/code> value to the stream.\n+   * Writes an SQL {@code XML} value to the stream.\n@@ -421,2 +421,2 @@\n-   * @param x a <code>SQLXML<\/code> object representing data of an SQL\n-   * <code>XML<\/code> value\n+   * @param x a {@code SQLXML} object representing data of an SQL\n+   * {@code XML} value\n@@ -425,3 +425,3 @@\n-   * the <code>java.xml.transform.Result<\/code>,\n-   *  <code>Writer<\/code> or <code>OutputStream<\/code> has not been closed for the <code>SQLXML<\/code> object or\n-   *  if there is an error processing the XML value.  The <code>getCause<\/code> method\n+   * the {@code java.xml.transform.Result},\n+   *  {@code Writer} or {@code OutputStream} has not been closed for the {@code SQLXML} object or\n+   *  if there is an error processing the XML value.  The {@code getCause} method\n","filename":"src\/java.sql\/share\/classes\/java\/sql\/SQLOutput.java","additions":61,"deletions":61,"binary":false,"changes":122,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,1 +32,1 @@\n- * The permission for which the <code>SecurityManager<\/code> will check\n+ * The permission for which the {@code SecurityManager} will check\n@@ -34,1 +34,1 @@\n- * <code>SecurityManager<\/code> enabled, calls the\n+ * {@code SecurityManager} enabled, calls the\n@@ -36,2 +36,2 @@\n- * <code>DriverManager.setLogWriter<\/code> method,\n- * <code>DriverManager.setLogStream<\/code> (deprecated) method,\n+ * {@code DriverManager.setLogWriter} method,\n+ * {@code DriverManager.setLogStream} (deprecated) method,\n@@ -41,3 +41,3 @@\n- * or the <code>Connection.abort<\/code> method.\n- * If there is no <code>SQLPermission<\/code> object, these methods\n- * throw a <code>java.lang.SecurityException<\/code> as a runtime exception.\n+ * or the {@code Connection.abort} method.\n+ * If there is no {@code SQLPermission} object, these methods\n+ * throw a {@code java.lang.SecurityException} as a runtime exception.\n@@ -45,1 +45,1 @@\n- * A <code>SQLPermission<\/code> object contains\n+ * A {@code SQLPermission} object contains\n@@ -52,3 +52,3 @@\n- * signify a wildcard match. For example: <code>loadLibrary.*<\/code>\n- * and <code>*<\/code> signify a wildcard match,\n- * while <code>*loadLibrary<\/code> and <code>a*b<\/code> do not.\n+ * signify a wildcard match. For example: {@code loadLibrary.*}\n+ * and {@code *} signify a wildcard match,\n+ * while {@code *loadLibrary} and {@code a*b} do not.\n@@ -56,1 +56,1 @@\n- * The following table lists all the possible <code>SQLPermission<\/code> target names.\n+ * The following table lists all the possible {@code SQLPermission} target names.\n@@ -100,2 +100,2 @@\n- * <code>Connection<\/code> or\n- * objects created from the <code>Connection<\/code>\n+ * {@code Connection} or\n+ * objects created from the {@code Connection}\n@@ -125,2 +125,2 @@\n-     * Creates a new <code>SQLPermission<\/code> object with the specified name.\n-     * The name is the symbolic name of the <code>SQLPermission<\/code>.\n+     * Creates a new {@code SQLPermission} object with the specified name.\n+     * The name is the symbolic name of the {@code SQLPermission}.\n@@ -128,1 +128,1 @@\n-     * @param name the name of this <code>SQLPermission<\/code> object, which must\n+     * @param name the name of this {@code SQLPermission} object, which must\n@@ -131,2 +131,2 @@\n-     * @throws NullPointerException if <code>name<\/code> is <code>null<\/code>.\n-     * @throws IllegalArgumentException if <code>name<\/code> is empty.\n+     * @throws NullPointerException if {@code name} is {@code null}.\n+     * @throws IllegalArgumentException if {@code name} is empty.\n@@ -141,4 +141,4 @@\n-     * Creates a new <code>SQLPermission<\/code> object with the specified name.\n-     * The name is the symbolic name of the <code>SQLPermission<\/code>; the\n-     * actions <code>String<\/code> is currently unused and should be\n-     * <code>null<\/code>.\n+     * Creates a new {@code SQLPermission} object with the specified name.\n+     * The name is the symbolic name of the {@code SQLPermission}; the\n+     * actions {@code String} is currently unused and should be\n+     * {@code null}.\n@@ -146,1 +146,1 @@\n-     * @param name the name of this <code>SQLPermission<\/code> object, which must\n+     * @param name the name of this {@code SQLPermission} object, which must\n@@ -149,3 +149,3 @@\n-     * @param actions should be <code>null<\/code>\n-     * @throws NullPointerException if <code>name<\/code> is <code>null<\/code>.\n-     * @throws IllegalArgumentException if <code>name<\/code> is empty.\n+     * @param actions should be {@code null}\n+     * @throws NullPointerException if {@code name} is {@code null}.\n+     * @throws IllegalArgumentException if {@code name} is empty.\n","filename":"src\/java.sql\/share\/classes\/java\/sql\/SQLPermission.java","additions":28,"deletions":28,"binary":false,"changes":56,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2006, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2006, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,3 +41,3 @@\n-         * Constructs a <code>SQLRecoverableException<\/code> object.\n-         * The <code>reason<\/code>, <code>SQLState<\/code> are initialized\n-         * to <code>null<\/code> and the vendor code is initialized to 0.\n+         * Constructs a {@code SQLRecoverableException} object.\n+         * The {@code reason}, {@code SQLState} are initialized\n+         * to {@code null} and the vendor code is initialized to 0.\n@@ -45,1 +45,1 @@\n-         * The <code>cause<\/code> is not initialized, and may subsequently be\n+         * The {@code cause} is not initialized, and may subsequently be\n@@ -56,3 +56,3 @@\n-         * Constructs a <code>SQLRecoverableException<\/code> object\n-         *  with a given <code>reason<\/code>. The <code>SQLState<\/code>\n-         * is initialized to <code>null<\/code> and the vendor code is initialized\n+         * Constructs a {@code SQLRecoverableException} object\n+         *  with a given {@code reason}. The {@code SQLState}\n+         * is initialized to {@code null} and the vendor code is initialized\n@@ -61,1 +61,1 @@\n-         * The <code>cause<\/code> is not initialized, and may subsequently be\n+         * The {@code cause} is not initialized, and may subsequently be\n@@ -73,2 +73,2 @@\n-         * Constructs a <code>SQLRecoverableException<\/code> object\n-         * with a given <code>reason<\/code> and <code>SQLState<\/code>.\n+         * Constructs a {@code SQLRecoverableException} object\n+         * with a given {@code reason} and {@code SQLState}.\n@@ -76,1 +76,1 @@\n-         * The <code>cause<\/code> is not initialized, and may subsequently be\n+         * The {@code cause} is not initialized, and may subsequently be\n@@ -90,3 +90,3 @@\n-         * Constructs a <code>SQLRecoverableException<\/code> object\n-         *  with a given <code>reason<\/code>, <code>SQLState<\/code>  and\n-         * <code>vendorCode<\/code>.\n+         * Constructs a {@code SQLRecoverableException} object\n+         *  with a given {@code reason}, {@code SQLState}  and\n+         * {@code vendorCode}.\n@@ -94,1 +94,1 @@\n-         * The <code>cause<\/code> is not initialized, and may subsequently be\n+         * The {@code cause} is not initialized, and may subsequently be\n@@ -108,7 +108,7 @@\n-     * Constructs a <code>SQLRecoverableException<\/code> object\n-     * with a given  <code>cause<\/code>.\n-     * The <code>SQLState<\/code> is initialized\n-     * to <code>null<\/code> and the vendor code is initialized to 0.\n-     * The <code>reason<\/code>  is initialized to <code>null<\/code> if\n-     * <code>cause==null<\/code> or to <code>cause.toString()<\/code> if\n-     * <code>cause!=null<\/code>.\n+     * Constructs a {@code SQLRecoverableException} object\n+     * with a given  {@code cause}.\n+     * The {@code SQLState} is initialized\n+     * to {@code null} and the vendor code is initialized to 0.\n+     * The {@code reason}  is initialized to {@code null} if\n+     * {@code cause==null} or to {@code cause.toString()} if\n+     * {@code cause!=null}.\n@@ -116,1 +116,1 @@\n-     * @param cause the underlying reason for this <code>SQLException<\/code> (which is saved for later retrieval by the <code>getCause()<\/code> method); may be null indicating\n+     * @param cause the underlying reason for this {@code SQLException} (which is saved for later retrieval by the {@code getCause()} method); may be null indicating\n@@ -125,1 +125,1 @@\n-     * Constructs a <code>SQLRecoverableException<\/code> object\n+     * Constructs a {@code SQLRecoverableException} object\n@@ -127,2 +127,2 @@\n-     * <code>reason<\/code> and  <code>cause<\/code>.\n-     * The <code>SQLState<\/code> is  initialized to <code>null<\/code>\n+     * {@code reason} and  {@code cause}.\n+     * The {@code SQLState} is  initialized to {@code null}\n@@ -132,1 +132,1 @@\n-     * @param cause the underlying reason for this <code>SQLException<\/code> (which is saved for later retrieval by the <code>getCause()<\/code> method); may be null indicating\n+     * @param cause the underlying reason for this {@code SQLException} (which is saved for later retrieval by the {@code getCause()} method); may be null indicating\n@@ -141,1 +141,1 @@\n-     * Constructs a <code>SQLRecoverableException<\/code> object\n+     * Constructs a {@code SQLRecoverableException} object\n@@ -143,1 +143,1 @@\n-     * <code>reason<\/code>, <code>SQLState<\/code> and  <code>cause<\/code>.\n+     * {@code reason}, {@code SQLState} and  {@code cause}.\n@@ -148,1 +148,1 @@\n-     * @param cause the underlying reason for this <code>SQLException<\/code> (which is saved for later retrieval by the <code>getCause()<\/code> method); may be null indicating\n+     * @param cause the underlying reason for this {@code SQLException} (which is saved for later retrieval by the {@code getCause()} method); may be null indicating\n@@ -157,1 +157,1 @@\n-     *  Constructs a <code>SQLRecoverableException<\/code> object\n+     *  Constructs a {@code SQLRecoverableException} object\n@@ -159,2 +159,2 @@\n-     * <code>reason<\/code>, <code>SQLState<\/code>, <code>vendorCode<\/code>\n-     * and  <code>cause<\/code>.\n+     * {@code reason}, {@code SQLState}, {@code vendorCode}\n+     * and  {@code cause}.\n@@ -165,1 +165,1 @@\n-     * @param cause the underlying reason for this <code>SQLException<\/code> (which is saved for later retrieval by the <code>getCause()<\/code> method); may be null indicating\n+     * @param cause the underlying reason for this {@code SQLException} (which is saved for later retrieval by the {@code getCause()} method); may be null indicating\n","filename":"src\/java.sql\/share\/classes\/java\/sql\/SQLRecoverableException.java","additions":35,"deletions":35,"binary":false,"changes":70,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,1 +34,1 @@\n- * conditions for which this <code>Exception<\/code> may be thrown.\n+ * conditions for which this {@code Exception} may be thrown.\n@@ -40,3 +40,3 @@\n-         * Constructs a <code>SQLSyntaxErrorException<\/code> object.\n-         *  The <code>reason<\/code>, <code>SQLState<\/code> are initialized\n-         * to <code>null<\/code> and the vendor code is initialized to 0.\n+         * Constructs a {@code SQLSyntaxErrorException} object.\n+         *  The {@code reason}, {@code SQLState} are initialized\n+         * to {@code null} and the vendor code is initialized to 0.\n@@ -44,1 +44,1 @@\n-         * The <code>cause<\/code> is not initialized, and may subsequently be\n+         * The {@code cause} is not initialized, and may subsequently be\n@@ -55,3 +55,3 @@\n-         * Constructs a <code>SQLSyntaxErrorException<\/code> object\n-         * with a given <code>reason<\/code>. The <code>SQLState<\/code>\n-         * is initialized to <code>null<\/code> and the vendor code is initialized\n+         * Constructs a {@code SQLSyntaxErrorException} object\n+         * with a given {@code reason}. The {@code SQLState}\n+         * is initialized to {@code null} and the vendor code is initialized\n@@ -60,1 +60,1 @@\n-         * The <code>cause<\/code> is not initialized, and may subsequently be\n+         * The {@code cause} is not initialized, and may subsequently be\n@@ -72,2 +72,2 @@\n-         * Constructs a <code>SQLSyntaxErrorException<\/code> object\n-         * with a given <code>reason<\/code> and <code>SQLState<\/code>.\n+         * Constructs a {@code SQLSyntaxErrorException} object\n+         * with a given {@code reason} and {@code SQLState}.\n@@ -75,1 +75,1 @@\n-         * The <code>cause<\/code> is not initialized, and may subsequently be\n+         * The {@code cause} is not initialized, and may subsequently be\n@@ -89,3 +89,3 @@\n-         * Constructs a <code>SQLSyntaxErrorException<\/code> object\n-         *  with a given <code>reason<\/code>, <code>SQLState<\/code>  and\n-         * <code>vendorCode<\/code>.\n+         * Constructs a {@code SQLSyntaxErrorException} object\n+         *  with a given {@code reason}, {@code SQLState}  and\n+         * {@code vendorCode}.\n@@ -93,1 +93,1 @@\n-         * The <code>cause<\/code> is not initialized, and may subsequently be\n+         * The {@code cause} is not initialized, and may subsequently be\n@@ -107,7 +107,7 @@\n-     * Constructs a <code>SQLSyntaxErrorException<\/code> object\n-     *   with a given  <code>cause<\/code>.\n-     * The <code>SQLState<\/code> is initialized\n-     * to <code>null<\/code> and the vendor code is initialized to 0.\n-     * The <code>reason<\/code>  is initialized to <code>null<\/code> if\n-     * <code>cause==null<\/code> or to <code>cause.toString()<\/code> if\n-     * <code>cause!=null<\/code>.\n+     * Constructs a {@code SQLSyntaxErrorException} object\n+     *   with a given  {@code cause}.\n+     * The {@code SQLState} is initialized\n+     * to {@code null} and the vendor code is initialized to 0.\n+     * The {@code reason}  is initialized to {@code null} if\n+     * {@code cause==null} or to {@code cause.toString()} if\n+     * {@code cause!=null}.\n@@ -115,1 +115,1 @@\n-     * @param cause the underlying reason for this <code>SQLException<\/code> (which is saved for later retrieval by the <code>getCause()<\/code> method); may be null indicating\n+     * @param cause the underlying reason for this {@code SQLException} (which is saved for later retrieval by the {@code getCause()} method); may be null indicating\n@@ -124,1 +124,1 @@\n-     * Constructs a <code>SQLSyntaxErrorException<\/code> object\n+     * Constructs a {@code SQLSyntaxErrorException} object\n@@ -126,2 +126,2 @@\n-     * <code>reason<\/code> and  <code>cause<\/code>.\n-     * The <code>SQLState<\/code> is  initialized to <code>null<\/code>\n+     * {@code reason} and  {@code cause}.\n+     * The {@code SQLState} is  initialized to {@code null}\n@@ -131,1 +131,1 @@\n-     * @param cause the underlying reason for this <code>SQLException<\/code> (which is saved for later retrieval by the <code>getCause()<\/code> method); may be null indicating\n+     * @param cause the underlying reason for this {@code SQLException} (which is saved for later retrieval by the {@code getCause()} method); may be null indicating\n@@ -140,1 +140,1 @@\n-     * Constructs a <code>SQLSyntaxErrorException<\/code> object\n+     * Constructs a {@code SQLSyntaxErrorException} object\n@@ -142,1 +142,1 @@\n-     * <code>reason<\/code>, <code>SQLState<\/code> and  <code>cause<\/code>.\n+     * {@code reason}, {@code SQLState} and  {@code cause}.\n@@ -147,1 +147,1 @@\n-     * @param cause the (which is saved for later retrieval by the <code>getCause()<\/code> method); may be null indicating\n+     * @param cause the (which is saved for later retrieval by the {@code getCause()} method); may be null indicating\n@@ -156,1 +156,1 @@\n-     *  Constructs a <code>SQLSyntaxErrorException<\/code> object\n+     *  Constructs a {@code SQLSyntaxErrorException} object\n@@ -158,2 +158,2 @@\n-     * <code>reason<\/code>, <code>SQLState<\/code>, <code>vendorCode<\/code>\n-     * and  <code>cause<\/code>.\n+     * {@code reason}, {@code SQLState}, {@code vendorCode}\n+     * and  {@code cause}.\n@@ -164,1 +164,1 @@\n-     * @param cause the underlying reason for this <code>SQLException<\/code> (which is saved for later retrieval by the <code>getCause()<\/code> method); may be null indicating\n+     * @param cause the underlying reason for this {@code SQLException} (which is saved for later retrieval by the {@code getCause()} method); may be null indicating\n","filename":"src\/java.sql\/share\/classes\/java\/sql\/SQLSyntaxErrorException.java","additions":36,"deletions":36,"binary":false,"changes":72,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,3 +40,3 @@\n-         * Constructs a <code>SQLTimeoutException<\/code> object.\n-         * The <code>reason<\/code>, <code>SQLState<\/code> are initialized\n-         * to <code>null<\/code> and the vendor code is initialized to 0.\n+         * Constructs a {@code SQLTimeoutException} object.\n+         * The {@code reason}, {@code SQLState} are initialized\n+         * to {@code null} and the vendor code is initialized to 0.\n@@ -44,1 +44,1 @@\n-         * The <code>cause<\/code> is not initialized, and may subsequently be\n+         * The {@code cause} is not initialized, and may subsequently be\n@@ -55,3 +55,3 @@\n-         * Constructs a <code>SQLTimeoutException<\/code> object\n-         * with a given <code>reason<\/code>. The <code>SQLState<\/code>\n-         * is initialized to <code>null<\/code> and the vendor code is initialized\n+         * Constructs a {@code SQLTimeoutException} object\n+         * with a given {@code reason}. The {@code SQLState}\n+         * is initialized to {@code null} and the vendor code is initialized\n@@ -60,1 +60,1 @@\n-         * The <code>cause<\/code> is not initialized, and may subsequently be\n+         * The {@code cause} is not initialized, and may subsequently be\n@@ -72,2 +72,2 @@\n-         * Constructs a <code>SQLTimeoutException<\/code> object\n-         * with a given <code>reason<\/code> and <code>SQLState<\/code>.\n+         * Constructs a {@code SQLTimeoutException} object\n+         * with a given {@code reason} and {@code SQLState}.\n@@ -75,1 +75,1 @@\n-         * The <code>cause<\/code> is not initialized, and may subsequently be\n+         * The {@code cause} is not initialized, and may subsequently be\n@@ -89,3 +89,3 @@\n-         * Constructs a <code>SQLTimeoutException<\/code> object\n-         * with a given <code>reason<\/code>, <code>SQLState<\/code>  and\n-         * <code>vendorCode<\/code>.\n+         * Constructs a {@code SQLTimeoutException} object\n+         * with a given {@code reason}, {@code SQLState}  and\n+         * {@code vendorCode}.\n@@ -93,1 +93,1 @@\n-         * The <code>cause<\/code> is not initialized, and may subsequently be\n+         * The {@code cause} is not initialized, and may subsequently be\n@@ -107,7 +107,7 @@\n-     * Constructs a <code>SQLTimeoutException<\/code> object\n-     * with a given  <code>cause<\/code>.\n-     * The <code>SQLState<\/code> is initialized\n-     * to <code>null<\/code> and the vendor code is initialized to 0.\n-     * The <code>reason<\/code>  is initialized to <code>null<\/code> if\n-     * <code>cause==null<\/code> or to <code>cause.toString()<\/code> if\n-     * <code>cause!=null<\/code>.\n+     * Constructs a {@code SQLTimeoutException} object\n+     * with a given  {@code cause}.\n+     * The {@code SQLState} is initialized\n+     * to {@code null} and the vendor code is initialized to 0.\n+     * The {@code reason}  is initialized to {@code null} if\n+     * {@code cause==null} or to {@code cause.toString()} if\n+     * {@code cause!=null}.\n@@ -115,1 +115,1 @@\n-     * @param cause the underlying reason for this <code>SQLException<\/code> (which is saved for later retrieval by the <code>getCause()<\/code> method); may be null indicating\n+     * @param cause the underlying reason for this {@code SQLException} (which is saved for later retrieval by the {@code getCause()} method); may be null indicating\n@@ -124,1 +124,1 @@\n-     * Constructs a <code>SQLTimeoutException<\/code> object\n+     * Constructs a {@code SQLTimeoutException} object\n@@ -126,2 +126,2 @@\n-     * <code>reason<\/code> and  <code>cause<\/code>.\n-     * The <code>SQLState<\/code> is  initialized to <code>null<\/code>\n+     * {@code reason} and  {@code cause}.\n+     * The {@code SQLState} is  initialized to {@code null}\n@@ -131,1 +131,1 @@\n-     * @param cause the underlying reason for this <code>SQLException<\/code> (which is saved for later retrieval by the <code>getCause()<\/code> method); may be null indicating\n+     * @param cause the underlying reason for this {@code SQLException} (which is saved for later retrieval by the {@code getCause()} method); may be null indicating\n@@ -140,1 +140,1 @@\n-     * Constructs a <code>SQLTimeoutException<\/code> object\n+     * Constructs a {@code SQLTimeoutException} object\n@@ -142,1 +142,1 @@\n-     * <code>reason<\/code>, <code>SQLState<\/code> and  <code>cause<\/code>.\n+     * {@code reason}, {@code SQLState} and  {@code cause}.\n@@ -147,1 +147,1 @@\n-     * @param cause the underlying reason for this <code>SQLException<\/code> (which is saved for later retrieval by the <code>getCause()<\/code> method); may be null indicating\n+     * @param cause the underlying reason for this {@code SQLException} (which is saved for later retrieval by the {@code getCause()} method); may be null indicating\n@@ -156,1 +156,1 @@\n-     *  Constructs a <code>SQLTimeoutException<\/code> object\n+     *  Constructs a {@code SQLTimeoutException} object\n@@ -158,2 +158,2 @@\n-     * <code>reason<\/code>, <code>SQLState<\/code>, <code>vendorCode<\/code>\n-     * and  <code>cause<\/code>.\n+     * {@code reason}, {@code SQLState}, {@code vendorCode}\n+     * and  {@code cause}.\n@@ -164,1 +164,1 @@\n-     * @param cause the underlying reason for this <code>SQLException<\/code> (which is saved for later retrieval by the <code>getCause()<\/code> method); may be null indicating\n+     * @param cause the underlying reason for this {@code SQLException} (which is saved for later retrieval by the {@code getCause()} method); may be null indicating\n","filename":"src\/java.sql\/share\/classes\/java\/sql\/SQLTimeoutException.java","additions":35,"deletions":35,"binary":false,"changes":70,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,1 +35,1 @@\n- * conditions for which this <code>Exception<\/code> may be thrown.\n+ * conditions for which this {@code Exception} may be thrown.\n@@ -40,3 +40,3 @@\n-         * Constructs a <code>SQLTransactionRollbackException<\/code> object.\n-         * The <code>reason<\/code>, <code>SQLState<\/code> are initialized\n-         * to <code>null<\/code> and the vendor code is initialized to 0.\n+         * Constructs a {@code SQLTransactionRollbackException} object.\n+         * The {@code reason}, {@code SQLState} are initialized\n+         * to {@code null} and the vendor code is initialized to 0.\n@@ -44,1 +44,1 @@\n-         * The <code>cause<\/code> is not initialized, and may subsequently be\n+         * The {@code cause} is not initialized, and may subsequently be\n@@ -55,3 +55,3 @@\n-         * Constructs a <code>SQLTransactionRollbackException<\/code> object\n-         * with a given <code>reason<\/code>. The <code>SQLState<\/code>\n-         * is initialized to <code>null<\/code> and the vendor code is initialized\n+         * Constructs a {@code SQLTransactionRollbackException} object\n+         * with a given {@code reason}. The {@code SQLState}\n+         * is initialized to {@code null} and the vendor code is initialized\n@@ -60,1 +60,1 @@\n-         * The <code>cause<\/code> is not initialized, and may subsequently be\n+         * The {@code cause} is not initialized, and may subsequently be\n@@ -72,2 +72,2 @@\n-         * Constructs a <code>SQLTransactionRollbackException<\/code> object\n-         * with a given <code>reason<\/code> and <code>SQLState<\/code>.\n+         * Constructs a {@code SQLTransactionRollbackException} object\n+         * with a given {@code reason} and {@code SQLState}.\n@@ -75,1 +75,1 @@\n-         * The <code>cause<\/code> is not initialized, and may subsequently be\n+         * The {@code cause} is not initialized, and may subsequently be\n@@ -89,3 +89,3 @@\n-         * Constructs a <code>SQLTransactionRollbackException<\/code> object\n-         * with a given <code>reason<\/code>, <code>SQLState<\/code>  and\n-         * <code>vendorCode<\/code>.\n+         * Constructs a {@code SQLTransactionRollbackException} object\n+         * with a given {@code reason}, {@code SQLState}  and\n+         * {@code vendorCode}.\n@@ -93,1 +93,1 @@\n-         * The <code>cause<\/code> is not initialized, and may subsequently be\n+         * The {@code cause} is not initialized, and may subsequently be\n@@ -107,7 +107,7 @@\n-     * Constructs a <code>SQLTransactionRollbackException<\/code> object\n-     * with a given  <code>cause<\/code>.\n-     * The <code>SQLState<\/code> is initialized\n-     * to <code>null<\/code> and the vendor code is initialized to 0.\n-     * The <code>reason<\/code>  is initialized to <code>null<\/code> if\n-     * <code>cause==null<\/code> or to <code>cause.toString()<\/code> if\n-     * <code>cause!=null<\/code>.\n+     * Constructs a {@code SQLTransactionRollbackException} object\n+     * with a given  {@code cause}.\n+     * The {@code SQLState} is initialized\n+     * to {@code null} and the vendor code is initialized to 0.\n+     * The {@code reason}  is initialized to {@code null} if\n+     * {@code cause==null} or to {@code cause.toString()} if\n+     * {@code cause!=null}.\n@@ -115,1 +115,1 @@\n-     * @param cause the underlying reason for this <code>SQLException<\/code> (which is saved for later retrieval by the <code>getCause()<\/code> method); may be null indicating\n+     * @param cause the underlying reason for this {@code SQLException} (which is saved for later retrieval by the {@code getCause()} method); may be null indicating\n@@ -124,1 +124,1 @@\n-     * Constructs a <code>SQLTransactionRollbackException<\/code> object\n+     * Constructs a {@code SQLTransactionRollbackException} object\n@@ -126,2 +126,2 @@\n-     * <code>reason<\/code> and  <code>cause<\/code>.\n-     * The <code>SQLState<\/code> is  initialized to <code>null<\/code>\n+     * {@code reason} and  {@code cause}.\n+     * The {@code SQLState} is  initialized to {@code null}\n@@ -131,1 +131,1 @@\n-     * @param cause the underlying reason for this <code>SQLException<\/code> (which is saved for later retrieval by the <code>getCause()<\/code> method); may be null indicating\n+     * @param cause the underlying reason for this {@code SQLException} (which is saved for later retrieval by the {@code getCause()} method); may be null indicating\n@@ -140,1 +140,1 @@\n-     * Constructs a <code>SQLTransactionRollbackException<\/code> object\n+     * Constructs a {@code SQLTransactionRollbackException} object\n@@ -142,1 +142,1 @@\n-     * <code>reason<\/code>, <code>SQLState<\/code> and  <code>cause<\/code>.\n+     * {@code reason}, {@code SQLState} and  {@code cause}.\n@@ -147,1 +147,1 @@\n-     * @param cause the underlying reason for this <code>SQLException<\/code> (which is saved for later retrieval by the <code>getCause()<\/code> method); may be null indicating\n+     * @param cause the underlying reason for this {@code SQLException} (which is saved for later retrieval by the {@code getCause()} method); may be null indicating\n@@ -156,1 +156,1 @@\n-     *  Constructs a <code>SQLTransactionRollbackException<\/code> object\n+     *  Constructs a {@code SQLTransactionRollbackException} object\n@@ -158,2 +158,2 @@\n-     * <code>reason<\/code>, <code>SQLState<\/code>, <code>vendorCode<\/code>\n-     * and  <code>cause<\/code>.\n+     * {@code reason}, {@code SQLState}, {@code vendorCode}\n+     * and  {@code cause}.\n@@ -164,1 +164,1 @@\n-     * @param cause the underlying reason for this <code>SQLException<\/code> (which is saved for later retrieval by the <code>getCause()<\/code> method); may be null indicating\n+     * @param cause the underlying reason for this {@code SQLException} (which is saved for later retrieval by the {@code getCause()} method); may be null indicating\n","filename":"src\/java.sql\/share\/classes\/java\/sql\/SQLTransactionRollbackException.java","additions":36,"deletions":36,"binary":false,"changes":72,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,1 +35,1 @@\n- * conditions for which this <code>Exception<\/code> may be thrown.\n+ * conditions for which this {@code Exception} may be thrown.\n@@ -41,3 +41,3 @@\n-         * Constructs a <code>SQLTransientConnectionException<\/code> object.\n-         * The <code>reason<\/code>, <code>SQLState<\/code> are initialized\n-         * to <code>null<\/code> and the vendor code is initialized to 0.\n+         * Constructs a {@code SQLTransientConnectionException} object.\n+         * The {@code reason}, {@code SQLState} are initialized\n+         * to {@code null} and the vendor code is initialized to 0.\n@@ -45,1 +45,1 @@\n-         * The <code>cause<\/code> is not initialized, and may subsequently be\n+         * The {@code cause} is not initialized, and may subsequently be\n@@ -56,3 +56,3 @@\n-         * Constructs a <code>SQLTransientConnectionException<\/code> object\n-         * with a given <code>reason<\/code>. The <code>SQLState<\/code>\n-         * is initialized to <code>null<\/code> and the vendor code is initialized\n+         * Constructs a {@code SQLTransientConnectionException} object\n+         * with a given {@code reason}. The {@code SQLState}\n+         * is initialized to {@code null} and the vendor code is initialized\n@@ -61,1 +61,1 @@\n-         * The <code>cause<\/code> is not initialized, and may subsequently be\n+         * The {@code cause} is not initialized, and may subsequently be\n@@ -73,2 +73,2 @@\n-         * Constructs a <code>SQLTransientConnectionException<\/code> object\n-         * with a given <code>reason<\/code> and <code>SQLState<\/code>.\n+         * Constructs a {@code SQLTransientConnectionException} object\n+         * with a given {@code reason} and {@code SQLState}.\n@@ -76,1 +76,1 @@\n-         * The <code>cause<\/code> is not initialized, and may subsequently be\n+         * The {@code cause} is not initialized, and may subsequently be\n@@ -90,3 +90,3 @@\n-         * Constructs a <code>SQLTransientConnectionException<\/code> object\n-         * with a given <code>reason<\/code>, <code>SQLState<\/code>  and\n-         * <code>vendorCode<\/code>.\n+         * Constructs a {@code SQLTransientConnectionException} object\n+         * with a given {@code reason}, {@code SQLState}  and\n+         * {@code vendorCode}.\n@@ -94,1 +94,1 @@\n-         * The <code>cause<\/code> is not initialized, and may subsequently be\n+         * The {@code cause} is not initialized, and may subsequently be\n@@ -108,7 +108,7 @@\n-     * Constructs a <code>SQLTransientConnectionException<\/code> object\n-     * with a given  <code>cause<\/code>.\n-     * The <code>SQLState<\/code> is initialized\n-     * to <code>null<\/code> and the vendor code is initialized to 0.\n-     * The <code>reason<\/code>  is initialized to <code>null<\/code> if\n-     * <code>cause==null<\/code> or to <code>cause.toString()<\/code> if\n-     * <code>cause!=null<\/code>.\n+     * Constructs a {@code SQLTransientConnectionException} object\n+     * with a given  {@code cause}.\n+     * The {@code SQLState} is initialized\n+     * to {@code null} and the vendor code is initialized to 0.\n+     * The {@code reason}  is initialized to {@code null} if\n+     * {@code cause==null} or to {@code cause.toString()} if\n+     * {@code cause!=null}.\n@@ -116,1 +116,1 @@\n-     * @param cause the underlying reason for this <code>SQLException<\/code> (which is saved for later retrieval by the <code>getCause()<\/code> method); may be null indicating\n+     * @param cause the underlying reason for this {@code SQLException} (which is saved for later retrieval by the {@code getCause()} method); may be null indicating\n@@ -125,1 +125,1 @@\n-     * Constructs a <code>SQLTransientConnectionException<\/code> object\n+     * Constructs a {@code SQLTransientConnectionException} object\n@@ -127,2 +127,2 @@\n-     * <code>reason<\/code> and  <code>cause<\/code>.\n-     * The <code>SQLState<\/code> is  initialized to <code>null<\/code>\n+     * {@code reason} and  {@code cause}.\n+     * The {@code SQLState} is  initialized to {@code null}\n@@ -132,1 +132,1 @@\n-     * @param cause the underlying reason for this <code>SQLException<\/code>(which is saved for later retrieval by the <code>getCause()<\/code> method); may be null indicating\n+     * @param cause the underlying reason for this {@code SQLException}(which is saved for later retrieval by the {@code getCause()} method); may be null indicating\n@@ -141,1 +141,1 @@\n-     * Constructs a <code>SQLTransientConnectionException<\/code> object\n+     * Constructs a {@code SQLTransientConnectionException} object\n@@ -143,1 +143,1 @@\n-     * <code>reason<\/code>, <code>SQLState<\/code> and  <code>cause<\/code>.\n+     * {@code reason}, {@code SQLState} and  {@code cause}.\n@@ -148,1 +148,1 @@\n-     * @param cause the underlying reason for this <code>SQLException<\/code> (which is saved for later retrieval by the <code>getCause()<\/code> method); may be null indicating\n+     * @param cause the underlying reason for this {@code SQLException} (which is saved for later retrieval by the {@code getCause()} method); may be null indicating\n@@ -157,1 +157,1 @@\n-     *  Constructs a <code>SQLTransientConnectionException<\/code> object\n+     *  Constructs a {@code SQLTransientConnectionException} object\n@@ -159,2 +159,2 @@\n-     * <code>reason<\/code>, <code>SQLState<\/code>, <code>vendorCode<\/code>\n-     * and  <code>cause<\/code>.\n+     * {@code reason}, {@code SQLState}, {@code vendorCode}\n+     * and  {@code cause}.\n@@ -165,1 +165,1 @@\n-     * @param cause the underlying reason for this <code>SQLException<\/code> (which is saved for later retrieval by the <code>getCause()<\/code> method); may be null indicating\n+     * @param cause the underlying reason for this {@code SQLException} (which is saved for later retrieval by the {@code getCause()} method); may be null indicating\n","filename":"src\/java.sql\/share\/classes\/java\/sql\/SQLTransientConnectionException.java","additions":36,"deletions":36,"binary":false,"changes":72,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,3 +38,3 @@\n-         * Constructs a <code>SQLTransientException<\/code> object.\n-         * The <code>reason<\/code>, <code>SQLState<\/code> are initialized\n-         * to <code>null<\/code> and the vendor code is initialized to 0.\n+         * Constructs a {@code SQLTransientException} object.\n+         * The {@code reason}, {@code SQLState} are initialized\n+         * to {@code null} and the vendor code is initialized to 0.\n@@ -42,1 +42,1 @@\n-         * The <code>cause<\/code> is not initialized, and may subsequently be\n+         * The {@code cause} is not initialized, and may subsequently be\n@@ -53,3 +53,3 @@\n-         * Constructs a <code>SQLTransientException<\/code> object\n-         *  with a given <code>reason<\/code>. The <code>SQLState<\/code>\n-         * is initialized to <code>null<\/code> and the vendor code is initialized\n+         * Constructs a {@code SQLTransientException} object\n+         *  with a given {@code reason}. The {@code SQLState}\n+         * is initialized to {@code null} and the vendor code is initialized\n@@ -58,1 +58,1 @@\n-         * The <code>cause<\/code> is not initialized, and may subsequently be\n+         * The {@code cause} is not initialized, and may subsequently be\n@@ -70,2 +70,2 @@\n-         * Constructs a <code>SQLTransientException<\/code> object\n-         * with a given <code>reason<\/code> and <code>SQLState<\/code>.\n+         * Constructs a {@code SQLTransientException} object\n+         * with a given {@code reason} and {@code SQLState}.\n@@ -73,1 +73,1 @@\n-         * The <code>cause<\/code> is not initialized, and may subsequently be\n+         * The {@code cause} is not initialized, and may subsequently be\n@@ -87,3 +87,3 @@\n-         * Constructs a <code>SQLTransientException<\/code> object\n-         *  with a given <code>reason<\/code>, <code>SQLState<\/code>  and\n-         * <code>vendorCode<\/code>.\n+         * Constructs a {@code SQLTransientException} object\n+         *  with a given {@code reason}, {@code SQLState}  and\n+         * {@code vendorCode}.\n@@ -91,1 +91,1 @@\n-         * The <code>cause<\/code> is not initialized, and may subsequently be\n+         * The {@code cause} is not initialized, and may subsequently be\n@@ -105,7 +105,7 @@\n-     * Constructs a <code>SQLTransientException<\/code> object\n-     * with a given  <code>cause<\/code>.\n-     * The <code>SQLState<\/code> is initialized\n-     * to <code>null<\/code> and the vendor code is initialized to 0.\n-     * The <code>reason<\/code>  is initialized to <code>null<\/code> if\n-     * <code>cause==null<\/code> or to <code>cause.toString()<\/code> if\n-     * <code>cause!=null<\/code>.\n+     * Constructs a {@code SQLTransientException} object\n+     * with a given  {@code cause}.\n+     * The {@code SQLState} is initialized\n+     * to {@code null} and the vendor code is initialized to 0.\n+     * The {@code reason}  is initialized to {@code null} if\n+     * {@code cause==null} or to {@code cause.toString()} if\n+     * {@code cause!=null}.\n@@ -113,1 +113,1 @@\n-     * @param cause the underlying reason for this <code>SQLException<\/code> (which is saved for later retrieval by the <code>getCause()<\/code> method); may be null indicating\n+     * @param cause the underlying reason for this {@code SQLException} (which is saved for later retrieval by the {@code getCause()} method); may be null indicating\n@@ -122,1 +122,1 @@\n-     * Constructs a <code>SQLTransientException<\/code> object\n+     * Constructs a {@code SQLTransientException} object\n@@ -124,2 +124,2 @@\n-     * <code>reason<\/code> and  <code>cause<\/code>.\n-     * The <code>SQLState<\/code> is  initialized to <code>null<\/code>\n+     * {@code reason} and  {@code cause}.\n+     * The {@code SQLState} is  initialized to {@code null}\n@@ -129,1 +129,1 @@\n-     * @param cause the underlying reason for this <code>SQLException<\/code> (which is saved for later retrieval by the <code>getCause()<\/code> method); may be null indicating\n+     * @param cause the underlying reason for this {@code SQLException} (which is saved for later retrieval by the {@code getCause()} method); may be null indicating\n@@ -138,1 +138,1 @@\n-     * Constructs a <code>SQLTransientException<\/code> object\n+     * Constructs a {@code SQLTransientException} object\n@@ -140,1 +140,1 @@\n-     * <code>reason<\/code>, <code>SQLState<\/code> and  <code>cause<\/code>.\n+     * {@code reason}, {@code SQLState} and  {@code cause}.\n@@ -145,1 +145,1 @@\n-     * @param cause the underlying reason for this <code>SQLException<\/code> (which is saved for later retrieval by the <code>getCause()<\/code> method); may be null indicating\n+     * @param cause the underlying reason for this {@code SQLException} (which is saved for later retrieval by the {@code getCause()} method); may be null indicating\n@@ -154,1 +154,1 @@\n-     *  Constructs a <code>SQLTransientException<\/code> object\n+     *  Constructs a {@code SQLTransientException} object\n@@ -156,2 +156,2 @@\n-     * <code>reason<\/code>, <code>SQLState<\/code>, <code>vendorCode<\/code>\n-     * and  <code>cause<\/code>.\n+     * {@code reason}, {@code SQLState}, {@code vendorCode}\n+     * and  {@code cause}.\n@@ -162,1 +162,1 @@\n-     * @param cause the underlying reason for this <code>SQLException<\/code> (which is saved for later retrieval by the <code>getCause()<\/code> method); may be null indicating\n+     * @param cause the underlying reason for this {@code SQLException} (which is saved for later retrieval by the {@code getCause()} method); may be null indicating\n","filename":"src\/java.sql\/share\/classes\/java\/sql\/SQLTransientException.java","additions":35,"deletions":35,"binary":false,"changes":70,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,2 +33,2 @@\n- * Warnings may be retrieved from <code>Connection<\/code>, <code>Statement<\/code>,\n- * and <code>ResultSet<\/code> objects.  Trying to retrieve a warning on a\n+ * Warnings may be retrieved from {@code Connection}, {@code Statement},\n+ * and {@code ResultSet} objects.  Trying to retrieve a warning on a\n@@ -49,3 +49,3 @@\n-     * Constructs a  <code>SQLWarning<\/code> object\n-     *  with a given <code>reason<\/code>, <code>SQLState<\/code>  and\n-     * <code>vendorCode<\/code>.\n+     * Constructs a  {@code SQLWarning} object\n+     *  with a given {@code reason}, {@code SQLState}  and\n+     * {@code vendorCode}.\n@@ -53,1 +53,1 @@\n-     * The <code>cause<\/code> is not initialized, and may subsequently be\n+     * The {@code cause} is not initialized, and may subsequently be\n@@ -70,2 +70,2 @@\n-     * Constructs a <code>SQLWarning<\/code> object\n-     * with a given <code>reason<\/code> and <code>SQLState<\/code>.\n+     * Constructs a {@code SQLWarning} object\n+     * with a given {@code reason} and {@code SQLState}.\n@@ -73,1 +73,1 @@\n-     * The <code>cause<\/code> is not initialized, and may subsequently be\n+     * The {@code cause} is not initialized, and may subsequently be\n@@ -88,3 +88,3 @@\n-     * Constructs a <code>SQLWarning<\/code> object\n-     * with a given <code>reason<\/code>. The <code>SQLState<\/code>\n-     * is initialized to <code>null<\/code> and the vendor code is initialized\n+     * Constructs a {@code SQLWarning} object\n+     * with a given {@code reason}. The {@code SQLState}\n+     * is initialized to {@code null} and the vendor code is initialized\n@@ -93,1 +93,1 @@\n-     * The <code>cause<\/code> is not initialized, and may subsequently be\n+     * The {@code cause} is not initialized, and may subsequently be\n@@ -105,3 +105,3 @@\n-     * Constructs a  <code>SQLWarning<\/code> object.\n-     * The <code>reason<\/code>, <code>SQLState<\/code> are initialized\n-     * to <code>null<\/code> and the vendor code is initialized to 0.\n+     * Constructs a  {@code SQLWarning} object.\n+     * The {@code reason}, {@code SQLState} are initialized\n+     * to {@code null} and the vendor code is initialized to 0.\n@@ -109,1 +109,1 @@\n-     * The <code>cause<\/code> is not initialized, and may subsequently be\n+     * The {@code cause} is not initialized, and may subsequently be\n@@ -120,7 +120,7 @@\n-     * Constructs a <code>SQLWarning<\/code> object\n-     * with a given  <code>cause<\/code>.\n-     * The <code>SQLState<\/code> is initialized\n-     * to <code>null<\/code> and the vendor code is initialized to 0.\n-     * The <code>reason<\/code>  is initialized to <code>null<\/code> if\n-     * <code>cause==null<\/code> or to <code>cause.toString()<\/code> if\n-     * <code>cause!=null<\/code>.\n+     * Constructs a {@code SQLWarning} object\n+     * with a given  {@code cause}.\n+     * The {@code SQLState} is initialized\n+     * to {@code null} and the vendor code is initialized to 0.\n+     * The {@code reason}  is initialized to {@code null} if\n+     * {@code cause==null} or to {@code cause.toString()} if\n+     * {@code cause!=null}.\n@@ -128,1 +128,1 @@\n-     * @param cause the underlying reason for this <code>SQLWarning<\/code> (which is saved for later retrieval by the <code>getCause()<\/code> method); may be null indicating\n+     * @param cause the underlying reason for this {@code SQLWarning} (which is saved for later retrieval by the {@code getCause()} method); may be null indicating\n@@ -137,1 +137,1 @@\n-     * Constructs a <code>SQLWarning<\/code> object\n+     * Constructs a {@code SQLWarning} object\n@@ -139,2 +139,2 @@\n-     * <code>reason<\/code> and  <code>cause<\/code>.\n-     * The <code>SQLState<\/code> is  initialized to <code>null<\/code>\n+     * {@code reason} and  {@code cause}.\n+     * The {@code SQLState} is  initialized to {@code null}\n@@ -144,2 +144,2 @@\n-     * @param cause  the underlying reason for this <code>SQLWarning<\/code>\n-     * (which is saved for later retrieval by the <code>getCause()<\/code> method);\n+     * @param cause  the underlying reason for this {@code SQLWarning}\n+     * (which is saved for later retrieval by the {@code getCause()} method);\n@@ -154,1 +154,1 @@\n-     * Constructs a <code>SQLWarning<\/code> object\n+     * Constructs a {@code SQLWarning} object\n@@ -156,1 +156,1 @@\n-     * <code>reason<\/code>, <code>SQLState<\/code> and  <code>cause<\/code>.\n+     * {@code reason}, {@code SQLState} and  {@code cause}.\n@@ -161,1 +161,1 @@\n-     * @param cause the underlying reason for this <code>SQLWarning<\/code> (which is saved for later retrieval by the <code>getCause()<\/code> method); may be null indicating\n+     * @param cause the underlying reason for this {@code SQLWarning} (which is saved for later retrieval by the {@code getCause()} method); may be null indicating\n@@ -171,1 +171,1 @@\n-     * Constructs a<code>SQLWarning<\/code> object\n+     * Constructs a{@code SQLWarning} object\n@@ -173,2 +173,2 @@\n-     * <code>reason<\/code>, <code>SQLState<\/code>, <code>vendorCode<\/code>\n-     * and  <code>cause<\/code>.\n+     * {@code reason}, {@code SQLState}, {@code vendorCode}\n+     * and  {@code cause}.\n@@ -179,1 +179,1 @@\n-     * @param cause the underlying reason for this <code>SQLWarning<\/code> (which is saved for later retrieval by the <code>getCause()<\/code> method); may be null indicating\n+     * @param cause the underlying reason for this {@code SQLWarning} (which is saved for later retrieval by the {@code getCause()} method); may be null indicating\n@@ -190,2 +190,2 @@\n-     * Retrieves the warning chained to this <code>SQLWarning<\/code> object by\n-     * <code>setNextWarning<\/code>.\n+     * Retrieves the warning chained to this {@code SQLWarning} object by\n+     * {@code setNextWarning}.\n@@ -193,1 +193,1 @@\n-     * @return the next <code>SQLException<\/code> in the chain; <code>null<\/code> if none\n+     * @return the next {@code SQLException} in the chain; {@code null} if none\n@@ -208,1 +208,1 @@\n-     * Adds a <code>SQLWarning<\/code> object to the end of the chain.\n+     * Adds a {@code SQLWarning} object to the end of the chain.\n@@ -210,1 +210,1 @@\n-     * @param w the new end of the <code>SQLException<\/code> chain\n+     * @param w the new end of the {@code SQLException} chain\n","filename":"src\/java.sql\/share\/classes\/java\/sql\/SQLWarning.java","additions":43,"deletions":43,"binary":false,"changes":86,"status":"modified"},{"patch":"@@ -182,1 +182,1 @@\n- * All methods on the <code>SQLXML<\/code> interface must be fully implemented if the\n+ * All methods on the {@code SQLXML} interface must be fully implemented if the\n@@ -198,4 +198,4 @@\n-   * After <code>free<\/code> has been called, any attempt to invoke a\n-   * method other than <code>free<\/code> will result in a <code>SQLException<\/code>\n-   * being thrown.  If <code>free<\/code> is called multiple times, the subsequent\n-   * calls to <code>free<\/code> are treated as a no-op.\n+   * After {@code free} has been called, any attempt to invoke a\n+   * method other than {@code free} will result in a {@code SQLException}\n+   * being thrown.  If {@code free} is called multiple times, the subsequent\n+   * calls to {@code free} are treated as a no-op.\n","filename":"src\/java.sql\/share\/classes\/java\/sql\/SQLXML.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -31,1 +31,1 @@\n- * <code>Connection.rollback<\/code> method. When a transaction\n+ * {@code Connection.rollback} method. When a transaction\n@@ -45,1 +45,1 @@\n-     * <code>Savepoint<\/code> object represents.\n+     * {@code Savepoint} object represents.\n@@ -53,1 +53,1 @@\n-     * Retrieves the name of the savepoint that this <code>Savepoint<\/code>\n+     * Retrieves the name of the savepoint that this {@code Savepoint}\n","filename":"src\/java.sql\/share\/classes\/java\/sql\/Savepoint.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n- * By default, only one <code>ResultSet<\/code> object per <code>Statement<\/code>\n+ * By default, only one {@code ResultSet} object per {@code Statement}\n@@ -37,1 +37,1 @@\n- * <code>ResultSet<\/code> object is interleaved\n+ * {@code ResultSet} object is interleaved\n@@ -39,3 +39,3 @@\n- * different <code>Statement<\/code> objects. All execution methods in the\n- * <code>Statement<\/code> interface implicitly close a current\n- * <code>ResultSet<\/code> object of the statement if an open one exists.\n+ * different {@code Statement} objects. All execution methods in the\n+ * {@code Statement} interface implicitly close a current\n+ * {@code ResultSet} object of the statement if an open one exists.\n@@ -51,1 +51,1 @@\n-     * <code>ResultSet<\/code> object.\n+     * {@code ResultSet} object.\n@@ -54,1 +54,1 @@\n-     * <code>PreparedStatement<\/code> or <code>CallableStatement<\/code>.\n+     * {@code PreparedStatement} or {@code CallableStatement}.\n@@ -56,3 +56,3 @@\n-     *        static SQL <code>SELECT<\/code> statement\n-     * @return a <code>ResultSet<\/code> object that contains the data produced\n-     *         by the given query; never <code>null<\/code>\n+     *        static SQL {@code SELECT} statement\n+     * @return a {@code ResultSet} object that contains the data produced\n+     *         by the given query; never {@code null}\n@@ -72,2 +72,2 @@\n-     * Executes the given SQL statement, which may be an <code>INSERT<\/code>,\n-     * <code>UPDATE<\/code>, or <code>DELETE<\/code> statement or an\n+     * Executes the given SQL statement, which may be an {@code INSERT},\n+     * {@code UPDATE}, or {@code DELETE} statement or an\n@@ -77,3 +77,3 @@\n-     * <code>PreparedStatement<\/code> or <code>CallableStatement<\/code>.\n-     * @param sql an SQL Data Manipulation Language (DML) statement, such as <code>INSERT<\/code>, <code>UPDATE<\/code> or\n-     * <code>DELETE<\/code>; or an SQL statement that returns nothing,\n+     * {@code PreparedStatement} or {@code CallableStatement}.\n+     * @param sql an SQL Data Manipulation Language (DML) statement, such as {@code INSERT}, {@code UPDATE} or\n+     * {@code DELETE}; or an SQL statement that returns nothing,\n@@ -97,1 +97,1 @@\n-     * Releases this <code>Statement<\/code> object's database\n+     * Releases this {@code Statement} object's database\n@@ -104,1 +104,1 @@\n-     * Calling the method <code>close<\/code> on a <code>Statement<\/code>\n+     * Calling the method {@code close} on a {@code Statement}\n@@ -107,2 +107,2 @@\n-     * <B>Note:<\/B>When a <code>Statement<\/code> object is\n-     * closed, its current <code>ResultSet<\/code> object, if one exists, is\n+     * <B>Note:<\/B>When a {@code Statement} object is\n+     * closed, its current {@code ResultSet} object, if one exists, is\n@@ -119,6 +119,6 @@\n-     * returned for character and binary column values in a <code>ResultSet<\/code>\n-     * object produced by this <code>Statement<\/code> object.\n-     * This limit applies only to  <code>BINARY<\/code>, <code>VARBINARY<\/code>,\n-     * <code>LONGVARBINARY<\/code>, <code>CHAR<\/code>, <code>VARCHAR<\/code>,\n-     * <code>NCHAR<\/code>, <code>NVARCHAR<\/code>, <code>LONGNVARCHAR<\/code>\n-     * and <code>LONGVARCHAR<\/code> columns.  If the limit is exceeded, the\n+     * returned for character and binary column values in a {@code ResultSet}\n+     * object produced by this {@code Statement} object.\n+     * This limit applies only to  {@code BINARY}, {@code VARBINARY},\n+     * {@code LONGVARBINARY}, {@code CHAR}, {@code VARCHAR},\n+     * {@code NCHAR}, {@code NVARCHAR}, {@code LONGNVARCHAR}\n+     * and {@code LONGVARCHAR} columns.  If the limit is exceeded, the\n@@ -137,2 +137,2 @@\n-     * character and binary column values in a <code>ResultSet<\/code>\n-     * object produced by this <code>Statement<\/code> object.\n+     * character and binary column values in a {@code ResultSet}\n+     * object produced by this {@code Statement} object.\n@@ -141,4 +141,4 @@\n-     * only to <code>BINARY<\/code>, <code>VARBINARY<\/code>,\n-     * <code>LONGVARBINARY<\/code>, <code>CHAR<\/code>, <code>VARCHAR<\/code>,\n-     * <code>NCHAR<\/code>, <code>NVARCHAR<\/code>, <code>LONGNVARCHAR<\/code> and\n-     * <code>LONGVARCHAR<\/code> fields.  If the limit is exceeded, the excess data\n+     * only to {@code BINARY}, {@code VARBINARY},\n+     * {@code LONGVARBINARY}, {@code CHAR}, {@code VARCHAR},\n+     * {@code NCHAR}, {@code NVARCHAR}, {@code LONGNVARCHAR} and\n+     * {@code LONGVARCHAR} fields.  If the limit is exceeded, the excess data\n@@ -158,2 +158,2 @@\n-     * <code>ResultSet<\/code> object produced by this\n-     * <code>Statement<\/code> object can contain.  If this limit is exceeded,\n+     * {@code ResultSet} object produced by this\n+     * {@code Statement} object can contain.  If this limit is exceeded,\n@@ -162,2 +162,2 @@\n-     * @return the current maximum number of rows for a <code>ResultSet<\/code>\n-     *         object produced by this <code>Statement<\/code> object;\n+     * @return the current maximum number of rows for a {@code ResultSet}\n+     *         object produced by this {@code Statement} object;\n@@ -173,1 +173,1 @@\n-     * <code>ResultSet<\/code> object  generated by this <code>Statement<\/code>\n+     * {@code ResultSet} object  generated by this {@code Statement}\n@@ -201,1 +201,1 @@\n-     * <code>PreparedStatements<\/code> objects will have no effect.\n+     * {@code PreparedStatements} objects will have no effect.\n@@ -203,2 +203,2 @@\n-     * @param enable <code>true<\/code> to enable escape processing;\n-     *       <code>false<\/code> to disable it\n+     * @param enable {@code true} to enable escape processing;\n+     *       {@code false} to disable it\n@@ -212,1 +212,1 @@\n-     * wait for a <code>Statement<\/code> object to execute.\n+     * wait for a {@code Statement} object to execute.\n@@ -214,1 +214,1 @@\n-     * <code>SQLException<\/code> is thrown.\n+     * {@code SQLException} is thrown.\n@@ -226,1 +226,1 @@\n-     * <code>Statement<\/code> object to execute to the given number of seconds.\n+     * {@code Statement} object to execute to the given number of seconds.\n@@ -229,3 +229,3 @@\n-     * <code>SQLTimeoutException<\/code> is thrown.\n-     * A JDBC driver must apply this limit to the <code>execute<\/code>,\n-     * <code>executeQuery<\/code> and <code>executeUpdate<\/code> methods.\n+     * {@code SQLTimeoutException} is thrown.\n+     * A JDBC driver must apply this limit to the {@code execute},\n+     * {@code executeQuery} and {@code executeUpdate} methods.\n@@ -253,1 +253,1 @@\n-     * Cancels this <code>Statement<\/code> object if both the DBMS and\n+     * Cancels this {@code Statement} object if both the DBMS and\n@@ -266,3 +266,3 @@\n-     * Retrieves the first warning reported by calls on this <code>Statement<\/code> object.\n-     * Subsequent <code>Statement<\/code> object warnings will be chained to this\n-     * <code>SQLWarning<\/code> object.\n+     * Retrieves the first warning reported by calls on this {@code Statement} object.\n+     * Subsequent {@code Statement} object warnings will be chained to this\n+     * {@code SQLWarning} object.\n@@ -272,1 +272,1 @@\n-     * <code>Statement<\/code> object; doing so will cause an <code>SQLException<\/code>\n+     * {@code Statement} object; doing so will cause an {@code SQLException}\n@@ -275,3 +275,3 @@\n-     * <P><B>Note:<\/B> If you are processing a <code>ResultSet<\/code> object, any\n-     * warnings associated with reads on that <code>ResultSet<\/code> object\n-     * will be chained on it rather than on the <code>Statement<\/code>\n+     * <P><B>Note:<\/B> If you are processing a {@code ResultSet} object, any\n+     * warnings associated with reads on that {@code ResultSet} object\n+     * will be chained on it rather than on the {@code Statement}\n@@ -280,1 +280,1 @@\n-     * @return the first <code>SQLWarning<\/code> object or <code>null<\/code>\n+     * @return the first {@code SQLWarning} object or {@code null}\n@@ -288,1 +288,1 @@\n-     * Clears all the warnings reported on this <code>Statement<\/code>\n+     * Clears all the warnings reported on this {@code Statement}\n@@ -290,3 +290,3 @@\n-     * the method <code>getWarnings<\/code> will return\n-     * <code>null<\/code> until a new warning is reported for this\n-     * <code>Statement<\/code> object.\n+     * the method {@code getWarnings} will return\n+     * {@code null} until a new warning is reported for this\n+     * {@code Statement} object.\n@@ -300,3 +300,3 @@\n-     * Sets the SQL cursor name to the given <code>String<\/code>, which\n-     * will be used by subsequent <code>Statement<\/code> object\n-     * <code>execute<\/code> methods. This name can then be\n+     * Sets the SQL cursor name to the given {@code String}, which\n+     * will be used by subsequent {@code Statement} object\n+     * {@code execute} methods. This name can then be\n@@ -304,1 +304,1 @@\n-     * current row in the <code>ResultSet<\/code> object generated by this\n+     * current row in the {@code ResultSet} object generated by this\n@@ -307,3 +307,3 @@\n-     * level to support updates, the cursor's <code>SELECT<\/code> statement\n-     * should have the form <code>SELECT FOR UPDATE<\/code>.  If\n-     * <code>FOR UPDATE<\/code> is not present, positioned updates may fail.\n+     * level to support updates, the cursor's {@code SELECT} statement\n+     * should have the form {@code SELECT FOR UPDATE}.  If\n+     * {@code FOR UPDATE} is not present, positioned updates may fail.\n@@ -312,2 +312,2 @@\n-     * deletes must be done by a different <code>Statement<\/code> object than\n-     * the one that generated the <code>ResultSet<\/code> object being used for\n+     * deletes must be done by a different {@code Statement} object than\n+     * the one that generated the {@code ResultSet} object being used for\n@@ -334,1 +334,1 @@\n-     * The <code>execute<\/code> method executes an SQL statement and indicates the\n+     * The {@code execute} method executes an SQL statement and indicates the\n@@ -336,2 +336,2 @@\n-     * <code>getResultSet<\/code> or <code>getUpdateCount<\/code>\n-     * to retrieve the result, and <code>getMoreResults<\/code> to\n+     * {@code getResultSet} or {@code getUpdateCount}\n+     * to retrieve the result, and {@code getMoreResults} to\n@@ -341,1 +341,1 @@\n-     * <code>PreparedStatement<\/code> or <code>CallableStatement<\/code>.\n+     * {@code PreparedStatement} or {@code CallableStatement}.\n@@ -343,2 +343,2 @@\n-     * @return <code>true<\/code> if the first result is a <code>ResultSet<\/code>\n-     *         object; <code>false<\/code> if it is an update count or there are\n+     * @return {@code true} if the first result is a {@code ResultSet}\n+     *         object; {@code false} if it is an update count or there are\n@@ -361,1 +361,1 @@\n-     *  Retrieves the current result as a <code>ResultSet<\/code> object.\n+     *  Retrieves the current result as a {@code ResultSet} object.\n@@ -364,2 +364,2 @@\n-     * @return the current result as a <code>ResultSet<\/code> object or\n-     * <code>null<\/code> if the result is an update count or there are no more results\n+     * @return the current result as a {@code ResultSet} object or\n+     * {@code null} if the result is an update count or there are no more results\n@@ -374,1 +374,1 @@\n-     *  if the result is a <code>ResultSet<\/code> object or there are no more results, -1\n+     *  if the result is a {@code ResultSet} object or there are no more results, -1\n@@ -378,1 +378,1 @@\n-     * <code>ResultSet<\/code> object or there are no more results\n+     * {@code ResultSet} object or there are no more results\n@@ -386,4 +386,4 @@\n-     * Moves to this <code>Statement<\/code> object's next result, returns\n-     * <code>true<\/code> if it is a <code>ResultSet<\/code> object, and\n-     * implicitly closes any current <code>ResultSet<\/code>\n-     * object(s) obtained with the method <code>getResultSet<\/code>.\n+     * Moves to this {@code Statement} object's next result, returns\n+     * {@code true} if it is a {@code ResultSet} object, and\n+     * implicitly closes any current {@code ResultSet}\n+     * object(s) obtained with the method {@code getResultSet}.\n@@ -397,2 +397,2 @@\n-     * @return <code>true<\/code> if the next result is a <code>ResultSet<\/code>\n-     *         object; <code>false<\/code> if it is an update count or there are\n+     * @return {@code true} if the next result is a {@code ResultSet}\n+     *         object; {@code false} if it is an update count or there are\n@@ -412,3 +412,3 @@\n-     * rows will be processed in <code>ResultSet<\/code>\n-     * objects created using this <code>Statement<\/code> object.  The\n-     * default value is <code>ResultSet.FETCH_FORWARD<\/code>.\n+     * rows will be processed in {@code ResultSet}\n+     * objects created using this {@code Statement} object.  The\n+     * default value is {@code ResultSet.FETCH_FORWARD}.\n@@ -417,1 +417,1 @@\n-     * result sets generated by this <code>Statement<\/code> object.\n+     * result sets generated by this {@code Statement} object.\n@@ -435,3 +435,3 @@\n-     * generated from this <code>Statement<\/code> object.\n-     * If this <code>Statement<\/code> object has not set\n-     * a fetch direction by calling the method <code>setFetchDirection<\/code>,\n+     * generated from this {@code Statement} object.\n+     * If this {@code Statement} object has not set\n+     * a fetch direction by calling the method {@code setFetchDirection},\n@@ -441,1 +441,1 @@\n-     *          from this <code>Statement<\/code> object\n+     *          from this {@code Statement} object\n@@ -452,1 +452,1 @@\n-     * <code>ResultSet<\/code> objects generated by this <code>Statement<\/code>.\n+     * {@code ResultSet} objects generated by this {@code Statement}.\n@@ -467,4 +467,4 @@\n-     * fetch size for <code>ResultSet<\/code> objects\n-     * generated from this <code>Statement<\/code> object.\n-     * If this <code>Statement<\/code> object has not set\n-     * a fetch size by calling the method <code>setFetchSize<\/code>,\n+     * fetch size for {@code ResultSet} objects\n+     * generated from this {@code Statement} object.\n+     * If this {@code Statement} object has not set\n+     * a fetch size by calling the method {@code setFetchSize},\n@@ -474,1 +474,1 @@\n-     *          from this <code>Statement<\/code> object\n+     *          from this {@code Statement} object\n@@ -483,2 +483,2 @@\n-     * Retrieves the result set concurrency for <code>ResultSet<\/code> objects\n-     * generated by this <code>Statement<\/code> object.\n+     * Retrieves the result set concurrency for {@code ResultSet} objects\n+     * generated by this {@code Statement} object.\n@@ -486,2 +486,2 @@\n-     * @return either <code>ResultSet.CONCUR_READ_ONLY<\/code> or\n-     * <code>ResultSet.CONCUR_UPDATABLE<\/code>\n+     * @return either {@code ResultSet.CONCUR_READ_ONLY} or\n+     * {@code ResultSet.CONCUR_UPDATABLE}\n@@ -495,2 +495,2 @@\n-     * Retrieves the result set type for <code>ResultSet<\/code> objects\n-     * generated by this <code>Statement<\/code> object.\n+     * Retrieves the result set type for {@code ResultSet} objects\n+     * generated by this {@code Statement} object.\n@@ -498,3 +498,3 @@\n-     * @return one of <code>ResultSet.TYPE_FORWARD_ONLY<\/code>,\n-     * <code>ResultSet.TYPE_SCROLL_INSENSITIVE<\/code>, or\n-     * <code>ResultSet.TYPE_SCROLL_SENSITIVE<\/code>\n+     * @return one of {@code ResultSet.TYPE_FORWARD_ONLY},\n+     * {@code ResultSet.TYPE_SCROLL_INSENSITIVE}, or\n+     * {@code ResultSet.TYPE_SCROLL_SENSITIVE}\n@@ -509,2 +509,2 @@\n-     * <code>Statement<\/code> object. The commands in this list can be\n-     * executed as a batch by calling the method <code>executeBatch<\/code>.\n+     * {@code Statement} object. The commands in this list can be\n+     * executed as a batch by calling the method {@code executeBatch}.\n@@ -513,3 +513,3 @@\n-     * <code>PreparedStatement<\/code> or <code>CallableStatement<\/code>.\n-     * @param sql typically this is a SQL <code>INSERT<\/code> or\n-     * <code>UPDATE<\/code> statement\n+     * {@code PreparedStatement} or {@code CallableStatement}.\n+     * @param sql typically this is a SQL {@code INSERT} or\n+     * {@code UPDATE} statement\n@@ -527,1 +527,1 @@\n-     * Empties this <code>Statement<\/code> object's current list of\n+     * Empties this {@code Statement} object's current list of\n@@ -542,1 +542,1 @@\n-     * The <code>int<\/code> elements of the array that is returned are ordered\n+     * The {@code int} elements of the array that is returned are ordered\n@@ -545,1 +545,1 @@\n-     * The elements in the array returned by the method <code>executeBatch<\/code>\n+     * The elements in the array returned by the method {@code executeBatch}\n@@ -552,1 +552,1 @@\n-     * <LI>A value of <code>SUCCESS_NO_INFO<\/code> -- indicates that the command was\n+     * <LI>A value of {@code SUCCESS_NO_INFO} -- indicates that the command was\n@@ -557,1 +557,1 @@\n-     * this method throws a <code>BatchUpdateException<\/code>, and a JDBC\n+     * this method throws a {@code BatchUpdateException}, and a JDBC\n@@ -563,1 +563,1 @@\n-     * <code>BatchUpdateException.getUpdateCounts<\/code>\n+     * {@code BatchUpdateException.getUpdateCounts}\n@@ -567,1 +567,1 @@\n-     * <LI>A value of <code>EXECUTE_FAILED<\/code> -- indicates that the command failed\n+     * <LI>A value of {@code EXECUTE_FAILED} -- indicates that the command failed\n@@ -575,1 +575,1 @@\n-     * update after a <code>BatchUpdateException<\/code> object has been thrown.\n+     * update after a {@code BatchUpdateException} object has been thrown.\n@@ -597,2 +597,2 @@\n-     * Retrieves the <code>Connection<\/code> object\n-     * that produced this <code>Statement<\/code> object.\n+     * Retrieves the {@code Connection} object\n+     * that produced this {@code Statement} object.\n@@ -609,2 +609,2 @@\n-     * The constant indicating that the current <code>ResultSet<\/code> object\n-     * should be closed when calling <code>getMoreResults<\/code>.\n+     * The constant indicating that the current {@code ResultSet} object\n+     * should be closed when calling {@code getMoreResults}.\n@@ -617,2 +617,2 @@\n-     * The constant indicating that the current <code>ResultSet<\/code> object\n-     * should not be closed when calling <code>getMoreResults<\/code>.\n+     * The constant indicating that the current {@code ResultSet} object\n+     * should not be closed when calling {@code getMoreResults}.\n@@ -625,1 +625,1 @@\n-     * The constant indicating that all <code>ResultSet<\/code> objects that\n+     * The constant indicating that all {@code ResultSet} objects that\n@@ -627,1 +627,1 @@\n-     * <code>getMoreResults<\/code>.\n+     * {@code getMoreResults}.\n@@ -666,2 +666,2 @@\n-     * Moves to this <code>Statement<\/code> object's next result, deals with\n-     * any current <code>ResultSet<\/code> object(s) according  to the instructions\n+     * Moves to this {@code Statement} object's next result, deals with\n+     * any current {@code ResultSet} object(s) according  to the instructions\n@@ -669,1 +669,1 @@\n-     * <code>true<\/code> if the next result is a <code>ResultSet<\/code> object.\n+     * {@code true} if the next result is a {@code ResultSet} object.\n@@ -677,1 +677,1 @@\n-     * @param current one of the following <code>Statement<\/code>\n+     * @param current one of the following {@code Statement}\n@@ -679,7 +679,7 @@\n-     *        <code>ResultSet<\/code> objects obtained using the method\n-     *        <code>getResultSet<\/code>:\n-     *        <code>Statement.CLOSE_CURRENT_RESULT<\/code>,\n-     *        <code>Statement.KEEP_CURRENT_RESULT<\/code>, or\n-     *        <code>Statement.CLOSE_ALL_RESULTS<\/code>\n-     * @return <code>true<\/code> if the next result is a <code>ResultSet<\/code>\n-     *         object; <code>false<\/code> if it is an update count or there are no\n+     *        {@code ResultSet} objects obtained using the method\n+     *        {@code getResultSet}:\n+     *        {@code Statement.CLOSE_CURRENT_RESULT},\n+     *        {@code Statement.KEEP_CURRENT_RESULT}, or\n+     *        {@code Statement.CLOSE_ALL_RESULTS}\n+     * @return {@code true} if the next result is a {@code ResultSet}\n+     *         object; {@code false} if it is an update count or there are no\n@@ -706,2 +706,2 @@\n-     * <code>Statement<\/code> object. If this <code>Statement<\/code> object did\n-     * not generate any keys, an empty <code>ResultSet<\/code>\n+     * {@code Statement} object. If this {@code Statement} object did\n+     * not generate any keys, an empty {@code ResultSet}\n@@ -713,2 +713,2 @@\n-     * @return a <code>ResultSet<\/code> object containing the auto-generated key(s)\n-     *         generated by the execution of this <code>Statement<\/code> object\n+     * @return a {@code ResultSet} object containing the auto-generated key(s)\n+     *         generated by the execution of this {@code Statement} object\n@@ -725,1 +725,1 @@\n-     * auto-generated keys produced by this <code>Statement<\/code> object\n+     * auto-generated keys produced by this {@code Statement} object\n@@ -728,1 +728,1 @@\n-     * is not an <code>INSERT<\/code> statement, or an SQL statement able to return\n+     * is not an {@code INSERT} statement, or an SQL statement able to return\n@@ -732,3 +732,3 @@\n-     * <code>PreparedStatement<\/code> or <code>CallableStatement<\/code>.\n-     * @param sql an SQL Data Manipulation Language (DML) statement, such as <code>INSERT<\/code>, <code>UPDATE<\/code> or\n-     * <code>DELETE<\/code>; or an SQL statement that returns nothing,\n+     * {@code PreparedStatement} or {@code CallableStatement}.\n+     * @param sql an SQL Data Manipulation Language (DML) statement, such as {@code INSERT}, {@code UPDATE} or\n+     * {@code DELETE}; or an SQL statement that returns nothing,\n@@ -740,2 +740,2 @@\n-     *         <code>Statement.RETURN_GENERATED_KEYS<\/code>\n-     *         <code>Statement.NO_GENERATED_KEYS<\/code>\n+     *         {@code Statement.RETURN_GENERATED_KEYS}\n+     *         {@code Statement.NO_GENERATED_KEYS}\n@@ -766,1 +766,1 @@\n-     * is not an <code>INSERT<\/code> statement, or an SQL statement able to return\n+     * is not an {@code INSERT} statement, or an SQL statement able to return\n@@ -770,3 +770,3 @@\n-     * <code>PreparedStatement<\/code> or <code>CallableStatement<\/code>.\n-     * @param sql an SQL Data Manipulation Language (DML) statement, such as <code>INSERT<\/code>, <code>UPDATE<\/code> or\n-     * <code>DELETE<\/code>; or an SQL statement that returns nothing,\n+     * {@code PreparedStatement} or {@code CallableStatement}.\n+     * @param sql an SQL Data Manipulation Language (DML) statement, such as {@code INSERT}, {@code UPDATE} or\n+     * {@code DELETE}; or an SQL statement that returns nothing,\n@@ -801,1 +801,1 @@\n-     * is not an <code>INSERT<\/code> statement, or an SQL statement able to return\n+     * is not an {@code INSERT} statement, or an SQL statement able to return\n@@ -805,3 +805,3 @@\n-     * <code>PreparedStatement<\/code> or <code>CallableStatement<\/code>.\n-     * @param sql an SQL Data Manipulation Language (DML) statement, such as <code>INSERT<\/code>, <code>UPDATE<\/code> or\n-     * <code>DELETE<\/code>; or an SQL statement that returns nothing,\n+     * {@code PreparedStatement} or {@code CallableStatement}.\n+     * @param sql an SQL Data Manipulation Language (DML) statement, such as {@code INSERT}, {@code UPDATE} or\n+     * {@code DELETE}; or an SQL statement that returns nothing,\n@@ -811,2 +811,2 @@\n-     * @return either the row count for <code>INSERT<\/code>, <code>UPDATE<\/code>,\n-     *         or <code>DELETE<\/code> statements, or 0 for SQL statements\n+     * @return either the row count for {@code INSERT}, {@code UPDATE},\n+     *         or {@code DELETE} statements, or 0 for SQL statements\n@@ -834,1 +834,1 @@\n-     * is not an <code>INSERT<\/code> statement, or an SQL statement able to return\n+     * is not an {@code INSERT} statement, or an SQL statement able to return\n@@ -843,1 +843,1 @@\n-     * The <code>execute<\/code> method executes an SQL statement and indicates the\n+     * The {@code execute} method executes an SQL statement and indicates the\n@@ -845,2 +845,2 @@\n-     * <code>getResultSet<\/code> or <code>getUpdateCount<\/code>\n-     * to retrieve the result, and <code>getMoreResults<\/code> to\n+     * {@code getResultSet} or {@code getUpdateCount}\n+     * to retrieve the result, and {@code getMoreResults} to\n@@ -850,1 +850,1 @@\n-     * <code>PreparedStatement<\/code> or <code>CallableStatement<\/code>.\n+     * {@code PreparedStatement} or {@code CallableStatement}.\n@@ -854,5 +854,5 @@\n-     *        <code>getGeneratedKeys<\/code>; one of the following constants:\n-     *        <code>Statement.RETURN_GENERATED_KEYS<\/code> or\n-     *        <code>Statement.NO_GENERATED_KEYS<\/code>\n-     * @return <code>true<\/code> if the first result is a <code>ResultSet<\/code>\n-     *         object; <code>false<\/code> if it is an update count or there are\n+     *        {@code getGeneratedKeys}; one of the following constants:\n+     *        {@code Statement.RETURN_GENERATED_KEYS} or\n+     *        {@code Statement.NO_GENERATED_KEYS}\n+     * @return {@code true} if the first result is a {@code ResultSet}\n+     *         object; {@code false} if it is an update count or there are\n@@ -889,1 +889,1 @@\n-     * is not an <code>INSERT<\/code> statement, or an SQL statement able to return\n+     * is not an {@code INSERT} statement, or an SQL statement able to return\n@@ -898,1 +898,1 @@\n-     * The <code>execute<\/code> method executes an SQL statement and indicates the\n+     * The {@code execute} method executes an SQL statement and indicates the\n@@ -900,2 +900,2 @@\n-     * <code>getResultSet<\/code> or <code>getUpdateCount<\/code>\n-     * to retrieve the result, and <code>getMoreResults<\/code> to\n+     * {@code getResultSet} or {@code getUpdateCount}\n+     * to retrieve the result, and {@code getMoreResults} to\n@@ -905,1 +905,1 @@\n-     * <code>PreparedStatement<\/code> or <code>CallableStatement<\/code>.\n+     * {@code PreparedStatement} or {@code CallableStatement}.\n@@ -909,3 +909,3 @@\n-     *        call to the method <code>getGeneratedKeys<\/code>\n-     * @return <code>true<\/code> if the first result is a <code>ResultSet<\/code>\n-     *         object; <code>false<\/code> if it is an update count or there\n+     *        call to the method {@code getGeneratedKeys}\n+     * @return {@code true} if the first result is a {@code ResultSet}\n+     *         object; {@code false} if it is an update count or there\n@@ -938,1 +938,1 @@\n-     * is not an <code>INSERT<\/code> statement, or an SQL statement able to return\n+     * is not an {@code INSERT} statement, or an SQL statement able to return\n@@ -947,1 +947,1 @@\n-     * The <code>execute<\/code> method executes an SQL statement and indicates the\n+     * The {@code execute} method executes an SQL statement and indicates the\n@@ -949,2 +949,2 @@\n-     * <code>getResultSet<\/code> or <code>getUpdateCount<\/code>\n-     * to retrieve the result, and <code>getMoreResults<\/code> to\n+     * {@code getResultSet} or {@code getUpdateCount}\n+     * to retrieve the result, and {@code getMoreResults} to\n@@ -954,1 +954,1 @@\n-     * <code>PreparedStatement<\/code> or <code>CallableStatement<\/code>.\n+     * {@code PreparedStatement} or {@code CallableStatement}.\n@@ -958,3 +958,3 @@\n-     *        method <code>getGeneratedKeys<\/code>\n-     * @return <code>true<\/code> if the next result is a <code>ResultSet<\/code>\n-     *         object; <code>false<\/code> if it is an update count or there\n+     *        method {@code getGeneratedKeys}\n+     * @return {@code true} if the next result is a {@code ResultSet}\n+     *         object; {@code false} if it is an update count or there\n@@ -982,2 +982,2 @@\n-     * Retrieves the result set holdability for <code>ResultSet<\/code> objects\n-     * generated by this <code>Statement<\/code> object.\n+     * Retrieves the result set holdability for {@code ResultSet} objects\n+     * generated by this {@code Statement} object.\n@@ -985,2 +985,2 @@\n-     * @return either <code>ResultSet.HOLD_CURSORS_OVER_COMMIT<\/code> or\n-     *         <code>ResultSet.CLOSE_CURSORS_AT_COMMIT<\/code>\n+     * @return either {@code ResultSet.HOLD_CURSORS_OVER_COMMIT} or\n+     *         {@code ResultSet.CLOSE_CURSORS_AT_COMMIT}\n@@ -995,1 +995,1 @@\n-     * Retrieves whether this <code>Statement<\/code> object has been closed. A <code>Statement<\/code> is closed if the\n+     * Retrieves whether this {@code Statement} object has been closed. A {@code Statement} is closed if the\n@@ -997,1 +997,1 @@\n-     * @return true if this <code>Statement<\/code> object is closed; false if it is still open\n+     * @return true if this {@code Statement} object is closed; false if it is still open\n@@ -1004,1 +1004,1 @@\n-         * Requests that a <code>Statement<\/code> be pooled or not pooled.  The value\n+         * Requests that a {@code Statement} be pooled or not pooled.  The value\n@@ -1013,2 +1013,2 @@\n-         * By default, a <code>Statement<\/code> is not poolable when created, and\n-         * a <code>PreparedStatement<\/code> and <code>CallableStatement<\/code>\n+         * By default, a {@code Statement} is not poolable when created, and\n+         * a {@code PreparedStatement} and {@code CallableStatement}\n@@ -1021,1 +1021,1 @@\n-         * <code>Statement<\/code>\n+         * {@code Statement}\n@@ -1029,1 +1029,1 @@\n-         * Returns a  value indicating whether the <code>Statement<\/code>\n+         * Returns a  value indicating whether the {@code Statement}\n@@ -1032,2 +1032,2 @@\n-         * @return              <code>true<\/code> if the <code>Statement<\/code>\n-         * is poolable; <code>false<\/code> otherwise\n+         * @return              {@code true} if the {@code Statement}\n+         * is poolable; {@code false} otherwise\n@@ -1036,1 +1036,1 @@\n-         * <code>Statement<\/code>\n+         * {@code Statement}\n@@ -1080,1 +1080,1 @@\n-     * is a <code>ResultSet<\/code> object or there are no more results, -1\n+     * is a {@code ResultSet} object or there are no more results, -1\n@@ -1089,1 +1089,1 @@\n-     * is a <code>ResultSet<\/code> object or there are no more results\n+     * is a {@code ResultSet} object or there are no more results\n@@ -1101,1 +1101,1 @@\n-     * <code>ResultSet<\/code> object  generated by this <code>Statement<\/code>\n+     * {@code ResultSet} object  generated by this {@code Statement}\n@@ -1124,2 +1124,2 @@\n-     * <code>ResultSet<\/code> object produced by this\n-     * <code>Statement<\/code> object can contain.  If this limit is exceeded,\n+     * {@code ResultSet} object produced by this\n+     * {@code Statement} object can contain.  If this limit is exceeded,\n@@ -1133,2 +1133,2 @@\n-     * @return the current maximum number of rows for a <code>ResultSet<\/code>\n-     *         object produced by this <code>Statement<\/code> object;\n+     * @return the current maximum number of rows for a {@code ResultSet}\n+     *         object produced by this {@code Statement} object;\n@@ -1148,1 +1148,1 @@\n-     * The <code>long<\/code> elements of the array that is returned are ordered\n+     * The {@code long} elements of the array that is returned are ordered\n@@ -1158,1 +1158,1 @@\n-     * <LI>A value of <code>SUCCESS_NO_INFO<\/code> -- indicates that the command was\n+     * <LI>A value of {@code SUCCESS_NO_INFO} -- indicates that the command was\n@@ -1163,1 +1163,1 @@\n-     * this method throws a <code>BatchUpdateException<\/code>, and a JDBC\n+     * this method throws a {@code BatchUpdateException}, and a JDBC\n@@ -1169,1 +1169,1 @@\n-     * <code>BatchUpdateException.getLargeUpdateCounts<\/code>\n+     * {@code BatchUpdateException.getLargeUpdateCounts}\n@@ -1173,1 +1173,1 @@\n-     * <LI>A value of <code>EXECUTE_FAILED<\/code> -- indicates that the command failed\n+     * <LI>A value of {@code EXECUTE_FAILED} -- indicates that the command failed\n@@ -1205,2 +1205,2 @@\n-     * Executes the given SQL statement, which may be an <code>INSERT<\/code>,\n-     * <code>UPDATE<\/code>, or <code>DELETE<\/code> statement or an\n+     * Executes the given SQL statement, which may be an {@code INSERT},\n+     * {@code UPDATE}, or {@code DELETE} statement or an\n@@ -1213,1 +1213,1 @@\n-     * <code>PreparedStatement<\/code> or <code>CallableStatement<\/code>.\n+     * {@code PreparedStatement} or {@code CallableStatement}.\n@@ -1218,2 +1218,2 @@\n-     * such as <code>INSERT<\/code>, <code>UPDATE<\/code> or\n-     * <code>DELETE<\/code>; or an SQL statement that returns nothing,\n+     * such as {@code INSERT}, {@code UPDATE} or\n+     * {@code DELETE}; or an SQL statement that returns nothing,\n@@ -1242,1 +1242,1 @@\n-     * auto-generated keys produced by this <code>Statement<\/code> object\n+     * auto-generated keys produced by this {@code Statement} object\n@@ -1245,1 +1245,1 @@\n-     * is not an <code>INSERT<\/code> statement, or an SQL statement able to return\n+     * is not an {@code INSERT} statement, or an SQL statement able to return\n@@ -1252,1 +1252,1 @@\n-     * <code>PreparedStatement<\/code> or <code>CallableStatement<\/code>.\n+     * {@code PreparedStatement} or {@code CallableStatement}.\n@@ -1257,2 +1257,2 @@\n-     * such as <code>INSERT<\/code>, <code>UPDATE<\/code> or\n-     * <code>DELETE<\/code>; or an SQL statement that returns nothing,\n+     * such as {@code INSERT}, {@code UPDATE} or\n+     * {@code DELETE}; or an SQL statement that returns nothing,\n@@ -1264,2 +1264,2 @@\n-     *         <code>Statement.RETURN_GENERATED_KEYS<\/code>\n-     *         <code>Statement.NO_GENERATED_KEYS<\/code>\n+     *         {@code Statement.RETURN_GENERATED_KEYS}\n+     *         {@code Statement.NO_GENERATED_KEYS}\n@@ -1293,1 +1293,1 @@\n-     * is not an <code>INSERT<\/code> statement, or an SQL statement able to return\n+     * is not an {@code INSERT} statement, or an SQL statement able to return\n@@ -1300,1 +1300,1 @@\n-     * <code>PreparedStatement<\/code> or <code>CallableStatement<\/code>.\n+     * {@code PreparedStatement} or {@code CallableStatement}.\n@@ -1305,2 +1305,2 @@\n-     * such as <code>INSERT<\/code>, <code>UPDATE<\/code> or\n-     * <code>DELETE<\/code>; or an SQL statement that returns nothing,\n+     * such as {@code INSERT}, {@code UPDATE} or\n+     * {@code DELETE}; or an SQL statement that returns nothing,\n@@ -1337,1 +1337,1 @@\n-     * is not an <code>INSERT<\/code> statement, or an SQL statement able to return\n+     * is not an {@code INSERT} statement, or an SQL statement able to return\n@@ -1344,1 +1344,1 @@\n-     * <code>PreparedStatement<\/code> or <code>CallableStatement<\/code>.\n+     * {@code PreparedStatement} or {@code CallableStatement}.\n@@ -1349,2 +1349,2 @@\n-     * such as <code>INSERT<\/code>, <code>UPDATE<\/code> or\n-     * <code>DELETE<\/code>; or an SQL statement that returns nothing,\n+     * such as {@code INSERT}, {@code UPDATE} or\n+     * {@code DELETE}; or an SQL statement that returns nothing,\n@@ -1354,2 +1354,2 @@\n-     * @return either the row count for <code>INSERT<\/code>, <code>UPDATE<\/code>,\n-     *         or <code>DELETE<\/code> statements, or 0 for SQL statements\n+     * @return either the row count for {@code INSERT}, {@code UPDATE},\n+     *         or {@code DELETE} statements, or 0 for SQL statements\n","filename":"src\/java.sql\/share\/classes\/java\/sql\/Statement.java","additions":234,"deletions":234,"binary":false,"changes":468,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n- * structured type. A <code>Struct<\/code> object contains a\n+ * structured type. A {@code Struct} object contains a\n@@ -33,1 +33,1 @@\n- * By default, an instance of<code>Struct<\/code> is valid as long as the\n+ * By default, an instance of{@code Struct} is valid as long as the\n@@ -36,1 +36,1 @@\n- * All methods on the <code>Struct<\/code> interface must be fully implemented if the\n+ * All methods on the {@code Struct} interface must be fully implemented if the\n@@ -45,1 +45,1 @@\n-   * that this <code>Struct<\/code> object represents.\n+   * that this {@code Struct} object represents.\n@@ -48,1 +48,1 @@\n-   *          type for which this <code>Struct<\/code> object\n+   *          type for which this {@code Struct} object\n@@ -59,1 +59,1 @@\n-   * structured type that this <code>Struct<\/code> object represents.\n+   * structured type that this {@code Struct} object represents.\n@@ -69,1 +69,1 @@\n-   * <code>getObject<\/code> on each attribute\n+   * {@code getObject} on each attribute\n@@ -83,1 +83,1 @@\n-   * structured type that this <code>Struct<\/code> object represents.\n+   * structured type that this {@code Struct} object represents.\n@@ -93,1 +93,1 @@\n-   * <code>getObject<\/code> on each attribute\n+   * {@code getObject} on each attribute\n","filename":"src\/java.sql\/share\/classes\/java\/sql\/Struct.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -32,2 +32,2 @@\n- * <P>A thin wrapper around the <code>java.util.Date<\/code> class that allows the JDBC\n- * API to identify this as an SQL <code>TIME<\/code> value. The <code>Time<\/code>\n+ * <P>A thin wrapper around the {@code java.util.Date} class that allows the JDBC\n+ * API to identify this as an SQL {@code TIME} value. The {@code Time}\n@@ -45,1 +45,1 @@\n-     * Constructs a <code>Time<\/code> object initialized with the\n+     * Constructs a {@code Time} object initialized with the\n@@ -49,2 +49,2 @@\n-     * <code>Time<\/code> object will throw a\n-     * <code>java.lang.IllegalArgumentException<\/code>.\n+     * {@code Time} object will throw a\n+     * {@code java.lang.IllegalArgumentException}.\n@@ -67,1 +67,1 @@\n-     * Constructs a <code>Time<\/code> object using a milliseconds time value.\n+     * Constructs a {@code Time} object using a milliseconds time value.\n@@ -78,1 +78,1 @@\n-     * Sets a <code>Time<\/code> object using a milliseconds time value.\n+     * Sets a {@code Time} object using a milliseconds time value.\n@@ -89,1 +89,1 @@\n-     * Converts a string in JDBC time escape format to a <code>Time<\/code> value.\n+     * Converts a string in JDBC time escape format to a {@code Time} value.\n@@ -92,1 +92,1 @@\n-     * @return a corresponding <code>Time<\/code> object\n+     * @return a corresponding {@code Time} object\n@@ -118,1 +118,1 @@\n-     * @return a <code>String<\/code> in hh:mm:ss format\n+     * @return a {@code String} in hh:mm:ss format\n@@ -139,1 +139,1 @@\n-    * This method is deprecated and should not be used because SQL <code>TIME<\/code>\n+    * This method is deprecated and should not be used because SQL {@code TIME}\n@@ -153,1 +153,1 @@\n-    * This method is deprecated and should not be used because SQL <code>TIME<\/code>\n+    * This method is deprecated and should not be used because SQL {@code TIME}\n@@ -167,1 +167,1 @@\n-    * This method is deprecated and should not be used because SQL <code>TIME<\/code>\n+    * This method is deprecated and should not be used because SQL {@code TIME}\n@@ -180,1 +180,1 @@\n-    * This method is deprecated and should not be used because SQL <code>TIME<\/code>\n+    * This method is deprecated and should not be used because SQL {@code TIME}\n@@ -194,1 +194,1 @@\n-    * This method is deprecated and should not be used because SQL <code>TIME<\/code>\n+    * This method is deprecated and should not be used because SQL {@code TIME}\n@@ -208,1 +208,1 @@\n-    * This method is deprecated and should not be used because SQL <code>TIME<\/code>\n+    * This method is deprecated and should not be used because SQL {@code TIME}\n@@ -222,1 +222,1 @@\n-    * This method is deprecated and should not be used because SQL <code>TIME<\/code>\n+    * This method is deprecated and should not be used because SQL {@code TIME}\n","filename":"src\/java.sql\/share\/classes\/java\/sql\/Time.java","additions":17,"deletions":17,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,1 @@\n- * <code>BIT<\/code>.\n+ * {@code BIT}.\n@@ -48,1 +48,1 @@\n- * <code>TINYINT<\/code>.\n+ * {@code TINYINT}.\n@@ -55,1 +55,1 @@\n- * <code>SMALLINT<\/code>.\n+ * {@code SMALLINT}.\n@@ -62,1 +62,1 @@\n- * <code>INTEGER<\/code>.\n+ * {@code INTEGER}.\n@@ -69,1 +69,1 @@\n- * <code>BIGINT<\/code>.\n+ * {@code BIGINT}.\n@@ -76,1 +76,1 @@\n- * <code>FLOAT<\/code>.\n+ * {@code FLOAT}.\n@@ -83,1 +83,1 @@\n- * <code>REAL<\/code>.\n+ * {@code REAL}.\n@@ -91,1 +91,1 @@\n- * <code>DOUBLE<\/code>.\n+ * {@code DOUBLE}.\n@@ -98,1 +98,1 @@\n- * <code>NUMERIC<\/code>.\n+ * {@code NUMERIC}.\n@@ -105,1 +105,1 @@\n- * <code>DECIMAL<\/code>.\n+ * {@code DECIMAL}.\n@@ -112,1 +112,1 @@\n- * <code>CHAR<\/code>.\n+ * {@code CHAR}.\n@@ -119,1 +119,1 @@\n- * <code>VARCHAR<\/code>.\n+ * {@code VARCHAR}.\n@@ -126,1 +126,1 @@\n- * <code>LONGVARCHAR<\/code>.\n+ * {@code LONGVARCHAR}.\n@@ -134,1 +134,1 @@\n- * <code>DATE<\/code>.\n+ * {@code DATE}.\n@@ -141,1 +141,1 @@\n- * <code>TIME<\/code>.\n+ * {@code TIME}.\n@@ -148,1 +148,1 @@\n- * <code>TIMESTAMP<\/code>.\n+ * {@code TIMESTAMP}.\n@@ -156,1 +156,1 @@\n- * <code>BINARY<\/code>.\n+ * {@code BINARY}.\n@@ -163,1 +163,1 @@\n- * <code>VARBINARY<\/code>.\n+ * {@code VARBINARY}.\n@@ -170,1 +170,1 @@\n- * <code>LONGVARBINARY<\/code>.\n+ * {@code LONGVARBINARY}.\n@@ -177,1 +177,1 @@\n- * <code>NULL<\/code>.\n+ * {@code NULL}.\n@@ -185,1 +185,1 @@\n-     * the methods <code>getObject<\/code> and <code>setObject<\/code>.\n+     * the methods {@code getObject} and {@code setObject}.\n@@ -194,1 +194,1 @@\n-     * <code>JAVA_OBJECT<\/code>.\n+     * {@code JAVA_OBJECT}.\n@@ -202,1 +202,1 @@\n-     * <code>DISTINCT<\/code>.\n+     * {@code DISTINCT}.\n@@ -210,1 +210,1 @@\n-     * <code>STRUCT<\/code>.\n+     * {@code STRUCT}.\n@@ -218,1 +218,1 @@\n-     * <code>ARRAY<\/code>.\n+     * {@code ARRAY}.\n@@ -226,1 +226,1 @@\n-     * <code>BLOB<\/code>.\n+     * {@code BLOB}.\n@@ -234,1 +234,1 @@\n-     * <code>CLOB<\/code>.\n+     * {@code CLOB}.\n@@ -242,1 +242,1 @@\n-     * <code>REF<\/code>.\n+     * {@code REF}.\n@@ -249,1 +249,1 @@\n-     * as a type code, that identifies the generic SQL type <code>DATALINK<\/code>.\n+     * as a type code, that identifies the generic SQL type {@code DATALINK}.\n@@ -257,1 +257,1 @@\n-     * as a type code, that identifies the generic SQL type <code>BOOLEAN<\/code>.\n+     * as a type code, that identifies the generic SQL type {@code BOOLEAN}.\n@@ -267,1 +267,1 @@\n-     * as a type code, that identifies the generic SQL type <code>ROWID<\/code>\n+     * as a type code, that identifies the generic SQL type {@code ROWID}\n@@ -276,1 +276,1 @@\n-     * as a type code, that identifies the generic SQL type <code>NCHAR<\/code>\n+     * as a type code, that identifies the generic SQL type {@code NCHAR}\n@@ -284,1 +284,1 @@\n-     * as a type code, that identifies the generic SQL type <code>NVARCHAR<\/code>.\n+     * as a type code, that identifies the generic SQL type {@code NVARCHAR}.\n@@ -292,1 +292,1 @@\n-     * as a type code, that identifies the generic SQL type <code>LONGNVARCHAR<\/code>.\n+     * as a type code, that identifies the generic SQL type {@code LONGNVARCHAR}.\n@@ -300,1 +300,1 @@\n-     * as a type code, that identifies the generic SQL type <code>NCLOB<\/code>.\n+     * as a type code, that identifies the generic SQL type {@code NCLOB}.\n@@ -308,1 +308,1 @@\n-     * as a type code, that identifies the generic SQL type <code>XML<\/code>.\n+     * as a type code, that identifies the generic SQL type {@code XML}.\n","filename":"src\/java.sql\/share\/classes\/java\/sql\/Types.java","additions":37,"deletions":37,"binary":false,"changes":74,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -52,1 +52,1 @@\n-     * the result of calling <code>unwrap<\/code> recursively on the wrapped object\n+     * the result of calling {@code unwrap} recursively on the wrapped object\n@@ -54,1 +54,1 @@\n-     * wrapper and does not implement the interface, then an <code>SQLException<\/code> is thrown.\n+     * wrapper and does not implement the interface, then an {@code SQLException} is thrown.\n@@ -67,1 +67,1 @@\n-     * else if this is a wrapper then return the result of recursively calling <code>isWrapperFor<\/code> on the wrapped\n+     * else if this is a wrapper then return the result of recursively calling {@code isWrapperFor} on the wrapped\n@@ -69,3 +69,3 @@\n-     * This method should be implemented as a low-cost operation compared to <code>unwrap<\/code> so that\n-     * callers can use this method to avoid expensive <code>unwrap<\/code> calls that may fail. If this method\n-     * returns true then calling <code>unwrap<\/code> with the same argument should succeed.\n+     * This method should be implemented as a low-cost operation compared to {@code unwrap} so that\n+     * callers can use this method to avoid expensive {@code unwrap} calls that may fail. If this method\n+     * returns true then calling {@code unwrap} with the same argument should succeed.\n","filename":"src\/java.sql\/share\/classes\/java\/sql\/Wrapper.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -34,2 +34,2 @@\n- * Interface that defines the methods which are common between <code>DataSource<\/code>,\n- * <code>XADataSource<\/code> and <code>ConnectionPoolDataSource<\/code>.\n+ * Interface that defines the methods which are common between {@code DataSource},\n+ * {@code XADataSource} and {@code ConnectionPoolDataSource}.\n@@ -42,1 +42,1 @@\n-     * <p>Retrieves the log writer for this <code>DataSource<\/code>\n+     * <p>Retrieves the log writer for this {@code DataSource}\n@@ -51,2 +51,2 @@\n-     * with the <code>java.sql.DriverManager<\/code> class.  When a\n-     * <code>DataSource<\/code> object is\n+     * with the {@code java.sql.DriverManager} class.  When a\n+     * {@code DataSource} object is\n@@ -64,2 +64,2 @@\n-     * <p>Sets the log writer for this <code>DataSource<\/code>\n-     * object to the given <code>java.io.PrintWriter<\/code> object.\n+     * <p>Sets the log writer for this {@code DataSource}\n+     * object to the given {@code java.io.PrintWriter} object.\n@@ -73,2 +73,2 @@\n-     * with the <code>java.sql.DriverManager<\/code> class. When a\n-     * <code>DataSource<\/code> object is created the log writer is\n+     * with the {@code java.sql.DriverManager} class. When a\n+     * {@code DataSource} object is created the log writer is\n@@ -89,1 +89,1 @@\n-     * When a <code>DataSource<\/code> object is created, the login timeout is\n+     * When a {@code DataSource} object is created, the login timeout is\n@@ -103,1 +103,1 @@\n-     * When a <code>DataSource<\/code> object is created, the login timeout is\n+     * When a {@code DataSource} object is created, the login timeout is\n","filename":"src\/java.sql\/share\/classes\/javax\/sql\/CommonDataSource.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2006, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,2 +31,2 @@\n- * <P>An <code>Event<\/code> object that provides information about the\n- * source of a connection-related event.  <code>ConnectionEvent<\/code>\n+ * <P>An {@code Event} object that provides information about the\n+ * source of a connection-related event.  {@code ConnectionEvent}\n@@ -34,1 +34,1 @@\n- * and when an error occurs.  The <code>ConnectionEvent<\/code> object\n+ * and when an error occurs.  The {@code ConnectionEvent} object\n@@ -38,1 +38,1 @@\n- *   <LI>In the case of an error event, the <code>SQLException<\/code>\n+ *   <LI>In the case of an error event, the {@code SQLException}\n@@ -48,3 +48,3 @@\n-   * <P>Constructs a <code>ConnectionEvent<\/code> object initialized with\n-   * the given <code>PooledConnection<\/code> object. <code>SQLException<\/code>\n-   * defaults to <code>null<\/code>.\n+   * <P>Constructs a {@code ConnectionEvent} object initialized with\n+   * the given {@code PooledConnection} object. {@code SQLException}\n+   * defaults to {@code null}.\n@@ -53,1 +53,1 @@\n-   * @throws IllegalArgumentException if <code>con<\/code> is null.\n+   * @throws IllegalArgumentException if {@code con} is null.\n@@ -60,3 +60,3 @@\n-   * <P>Constructs a <code>ConnectionEvent<\/code> object initialized with\n-   * the given <code>PooledConnection<\/code> object and\n-   * <code>SQLException<\/code> object.\n+   * <P>Constructs a {@code ConnectionEvent} object initialized with\n+   * the given {@code PooledConnection} object and\n+   * {@code SQLException} object.\n@@ -66,1 +66,1 @@\n-   * @throws IllegalArgumentException if <code>con<\/code> is null.\n+   * @throws IllegalArgumentException if {@code con} is null.\n@@ -74,2 +74,2 @@\n-   * <P>Retrieves the <code>SQLException<\/code> for this\n-   * <code>ConnectionEvent<\/code> object. May be <code>null<\/code>.\n+   * <P>Retrieves the {@code SQLException} for this\n+   * {@code ConnectionEvent} object. May be {@code null}.\n@@ -77,1 +77,1 @@\n-   * @return the SQLException about to be thrown or <code>null<\/code>\n+   * @return the SQLException about to be thrown or {@code null}\n@@ -82,1 +82,1 @@\n-   * The <code>SQLException<\/code> that the driver will throw to the\n+   * The {@code SQLException} that the driver will throw to the\n","filename":"src\/java.sql\/share\/classes\/javax\/sql\/ConnectionEvent.java","additions":17,"deletions":17,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2001, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,1 @@\n- * <code>PooledConnection<\/code> object.\n+ * {@code PooledConnection} object.\n@@ -33,1 +33,1 @@\n- * The <code>ConnectionEventListener<\/code> interface is implemented by a\n+ * The {@code ConnectionEventListener} interface is implemented by a\n@@ -36,1 +36,1 @@\n- * vendor.  A JDBC driver notifies a <code>ConnectionEventListener<\/code>\n+ * vendor.  A JDBC driver notifies a {@code ConnectionEventListener}\n@@ -39,4 +39,4 @@\n- * occurs after the application calls the method <code>close<\/code> on\n- * its representation of a <code>PooledConnection<\/code> object.  A\n- * <code>ConnectionEventListener<\/code> is also notified when a\n- * connection error occurs due to the fact that the <code>PooledConnection<\/code>\n+ * occurs after the application calls the method {@code close} on\n+ * its representation of a {@code PooledConnection} object.  A\n+ * {@code ConnectionEventListener} is also notified when a\n+ * connection error occurs due to the fact that the {@code PooledConnection}\n@@ -45,2 +45,2 @@\n- * <code>SQLException<\/code> to the application using the\n- * <code>PooledConnection<\/code> object.\n+ * {@code SQLException} to the application using the\n+ * {@code PooledConnection} object.\n@@ -54,2 +54,2 @@\n-   * Notifies this <code>ConnectionEventListener<\/code> that\n-   * the application has called the method <code>close<\/code> on its\n+   * Notifies this {@code ConnectionEventListener} that\n+   * the application has called the method {@code close} on its\n@@ -64,1 +64,1 @@\n-   * Notifies this <code>ConnectionEventListener<\/code> that\n+   * Notifies this {@code ConnectionEventListener} that\n@@ -67,2 +67,2 @@\n-   * before it throws the application the <code>SQLException<\/code>\n-   * contained in the given <code>ConnectionEvent<\/code> object.\n+   * before it throws the application the {@code SQLException}\n+   * contained in the given {@code ConnectionEvent} object.\n@@ -71,1 +71,1 @@\n-   * the event and containing the <code>SQLException<\/code> that the\n+   * the event and containing the {@code SQLException} that the\n","filename":"src\/java.sql\/share\/classes\/javax\/sql\/ConnectionEventListener.java","additions":16,"deletions":16,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n- * A factory for <code>PooledConnection<\/code>\n+ * A factory for {@code PooledConnection}\n@@ -48,1 +48,1 @@\n-   * @return  a <code>PooledConnection<\/code> object that is a physical\n+   * @return  a {@code PooledConnection} object that is a physical\n@@ -50,1 +50,1 @@\n-   *         <code>ConnectionPoolDataSource<\/code> object represents\n+   *         {@code ConnectionPoolDataSource} object represents\n@@ -64,1 +64,1 @@\n-   * @return  a <code>PooledConnection<\/code> object that is a physical\n+   * @return  a {@code PooledConnection} object that is a physical\n@@ -66,1 +66,1 @@\n-   *         <code>ConnectionPoolDataSource<\/code> object represents\n+   *         {@code ConnectionPoolDataSource} object represents\n","filename":"src\/java.sql\/share\/classes\/javax\/sql\/ConnectionPoolDataSource.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n- * A <code>PooledConnection<\/code> object\n+ * A {@code PooledConnection} object\n@@ -39,1 +39,1 @@\n- * An application programmer does not use the <code>PooledConnection<\/code>\n+ * An application programmer does not use the {@code PooledConnection}\n@@ -43,4 +43,4 @@\n- * When an application calls the method <code>DataSource.getConnection<\/code>,\n- * it gets back a <code>Connection<\/code> object.  If connection pooling is\n- * being done, that <code>Connection<\/code> object is actually a handle to\n- * a <code>PooledConnection<\/code> object, which is a physical connection.\n+ * When an application calls the method {@code DataSource.getConnection},\n+ * it gets back a {@code Connection} object.  If connection pooling is\n+ * being done, that {@code Connection} object is actually a handle to\n+ * a {@code PooledConnection} object, which is a physical connection.\n@@ -49,3 +49,3 @@\n- * a pool of <code>PooledConnection<\/code> objects.  If there is a\n- * <code>PooledConnection<\/code> object available in the pool, the\n- * connection pool manager returns a <code>Connection<\/code> object that\n+ * a pool of {@code PooledConnection} objects.  If there is a\n+ * {@code PooledConnection} object available in the pool, the\n+ * connection pool manager returns a {@code Connection} object that\n@@ -53,5 +53,5 @@\n- * If no <code>PooledConnection<\/code> object is available, the\n- * connection pool manager calls the <code>ConnectionPoolDataSource<\/code>\n- * method <code>getPoolConnection<\/code> to create a new physical connection.  The\n- *  JDBC driver implementing <code>ConnectionPoolDataSource<\/code> creates a\n- *  new <code>PooledConnection<\/code> object and returns a handle to it.\n+ * If no {@code PooledConnection} object is available, the\n+ * connection pool manager calls the {@code ConnectionPoolDataSource}\n+ * method {@code getPoolConnection} to create a new physical connection.  The\n+ *  JDBC driver implementing {@code ConnectionPoolDataSource} creates a\n+ *  new {@code PooledConnection} object and returns a handle to it.\n@@ -59,2 +59,2 @@\n- * When an application closes a connection, it calls the <code>Connection<\/code>\n- * method <code>close<\/code>. When connection pooling is being done,\n+ * When an application closes a connection, it calls the {@code Connection}\n+ * method {@code close}. When connection pooling is being done,\n@@ -62,2 +62,2 @@\n- * a <code>ConnectionEventListener<\/code> object using the\n- * <code>ConnectionPool<\/code> method <code>addConnectionEventListener<\/code>.\n+ * a {@code ConnectionEventListener} object using the\n+ * {@code ConnectionPool} method {@code addConnectionEventListener}.\n@@ -65,2 +65,2 @@\n- * the <code>PooledConnection<\/code> object and  returns the\n- * <code>PooledConnection<\/code> object to the pool of connections so that\n+ * the {@code PooledConnection} object and  returns the\n+ * {@code PooledConnection} object to the pool of connections so that\n@@ -81,1 +81,1 @@\n- * calls the <code>PooledConnection<\/code> method <code>close<\/code>.\n+ * calls the {@code PooledConnection} method {@code close}.\n@@ -87,1 +87,1 @@\n- *  a pool of <code>PreparedStatement<\/code> objects.\n+ *  a pool of {@code PreparedStatement} objects.\n@@ -89,2 +89,2 @@\n- *  <code>PreparedStatement<\/code>\n- * method <code>close<\/code>. When <code>Statement<\/code> pooling is being done,\n+ *  {@code PreparedStatement}\n+ * method {@code close}. When {@code Statement} pooling is being done,\n@@ -92,3 +92,3 @@\n- * a <code>StatementEventListener<\/code> object using the\n- * <code>ConnectionPool<\/code> method <code>addStatementEventListener<\/code>.\n- *  Thus, when an application closes its  <code>PreparedStatement<\/code>,\n+ * a {@code StatementEventListener} object using the\n+ * {@code ConnectionPool} method {@code addStatementEventListener}.\n+ *  Thus, when an application closes its  {@code PreparedStatement},\n@@ -103,1 +103,1 @@\n-   * Creates and returns a <code>Connection<\/code> object that is a handle\n+   * Creates and returns a {@code Connection} object that is a handle\n@@ -105,1 +105,1 @@\n-   * this <code>PooledConnection<\/code> object represents.\n+   * this {@code PooledConnection} object represents.\n@@ -107,2 +107,2 @@\n-   * called the method <code>DataSource.getConnection<\/code> and there are\n-   * no <code>PooledConnection<\/code> objects available. See the\n+   * called the method {@code DataSource.getConnection} and there are\n+   * no {@code PooledConnection} objects available. See the\n@@ -111,2 +111,2 @@\n-   * @return  a <code>Connection<\/code> object that is a handle to\n-   *          this <code>PooledConnection<\/code> object\n+   * @return  a {@code Connection} object that is a handle to\n+   *          this {@code PooledConnection} object\n@@ -121,1 +121,1 @@\n-   * Closes the physical connection that this <code>PooledConnection<\/code>\n+   * Closes the physical connection that this {@code PooledConnection}\n@@ -137,1 +137,1 @@\n-   * when an event occurs on this <code>PooledConnection<\/code> object.\n+   * when an event occurs on this {@code PooledConnection} object.\n@@ -141,1 +141,1 @@\n-   *        <code>ConnectionEventListener<\/code> interface and wants to be\n+   *        {@code ConnectionEventListener} interface and wants to be\n@@ -150,1 +150,1 @@\n-   * <code>PooledConnection<\/code> object.\n+   * {@code PooledConnection} object.\n@@ -154,2 +154,2 @@\n-   *        <code>ConnectionEventListener<\/code> interface and\n-   *        been registered with this <code>PooledConnection<\/code> object as\n+   *        {@code ConnectionEventListener} interface and\n+   *        been registered with this {@code PooledConnection} object as\n@@ -162,2 +162,2 @@\n-         * Registers a <code>StatementEventListener<\/code> with this <code>PooledConnection<\/code> object.  Components that\n-         * wish to be notified when  <code>PreparedStatement<\/code>s created by the\n+         * Registers a {@code StatementEventListener} with this {@code PooledConnection} object.  Components that\n+         * wish to be notified when  {@code PreparedStatement}s created by the\n@@ -165,1 +165,1 @@\n-         * to register a <code>StatementEventListener<\/code> with this <code>PooledConnection<\/code> object.\n+         * to register a {@code StatementEventListener} with this {@code PooledConnection} object.\n@@ -167,2 +167,2 @@\n-         * @param listener      an component which implements the <code>StatementEventListener<\/code>\n-         *                                      interface that is to be registered with this <code>PooledConnection<\/code> object\n+         * @param listener      an component which implements the {@code StatementEventListener}\n+         *                                      interface that is to be registered with this {@code PooledConnection} object\n@@ -175,1 +175,1 @@\n-         * Removes the specified <code>StatementEventListener<\/code> from the list of\n+         * Removes the specified {@code StatementEventListener} from the list of\n@@ -177,1 +177,1 @@\n-         * <code>PreparedStatement<\/code> has been closed or is invalid.\n+         * {@code PreparedStatement} has been closed or is invalid.\n@@ -180,2 +180,2 @@\n-         *                                      <code>StatementEventListener<\/code> interface that was previously\n-         *                                      registered with this <code>PooledConnection<\/code> object\n+         *                                      {@code StatementEventListener} interface that was previously\n+         *                                      registered with this {@code PooledConnection} object\n","filename":"src\/java.sql\/share\/classes\/javax\/sql\/PooledConnection.java","additions":48,"deletions":48,"binary":false,"changes":96,"status":"modified"},{"patch":"@@ -40,2 +40,2 @@\n- * The <code>RowSet<\/code>\n- * interface provides a set of JavaBeans properties that allow a <code>RowSet<\/code>\n+ * The {@code RowSet}\n+ * interface provides a set of JavaBeans properties that allow a {@code RowSet}\n@@ -43,2 +43,2 @@\n- * some data from the data source.  A group of setter methods (<code>setInt<\/code>,\n- * <code>setBytes<\/code>, <code>setString<\/code>, and so on)\n+ * some data from the data source.  A group of setter methods ({@code setInt},\n+ * {@code setBytes}, {@code setString}, and so on)\n@@ -49,1 +49,1 @@\n- * The <code>RowSet<\/code>\n+ * The {@code RowSet}\n@@ -54,1 +54,1 @@\n- * <P>The <code>RowSet<\/code> interface is unique in that it is intended to be\n+ * <P>The {@code RowSet} interface is unique in that it is intended to be\n@@ -56,2 +56,2 @@\n- * <code>RowSet<\/code> implementation is a layer of software that executes \"on top\"\n- * of a JDBC driver.  Implementations of the <code>RowSet<\/code> interface can\n+ * {@code RowSet} implementation is a layer of software that executes \"on top\"\n+ * of a JDBC driver.  Implementations of the {@code RowSet} interface can\n@@ -59,1 +59,1 @@\n- * provide a <code>RowSet<\/code> implementation as part of their JDBC products.\n+ * provide a {@code RowSet} implementation as part of their JDBC products.\n@@ -61,1 +61,1 @@\n- * A <code>RowSet<\/code> object may make a connection with a data source and\n+ * A {@code RowSet} object may make a connection with a data source and\n@@ -69,2 +69,2 @@\n- * A disconnected rowset may have a {@code Reader} (a <code>RowSetReader<\/code> object)\n- * and a writer (a <code>RowSetWriter<\/code> object) associated with it.\n+ * A disconnected rowset may have a {@code Reader} (a {@code RowSetReader} object)\n+ * and a writer (a {@code RowSetWriter} object) associated with it.\n@@ -76,3 +76,3 @@\n- * Rowsets are easy to use.  The <code>RowSet<\/code> interface extends the standard\n- * <code>java.sql.ResultSet<\/code> interface.  The <code>RowSetMetaData<\/code>\n- * interface extends the <code>java.sql.ResultSetMetaData<\/code> interface.\n+ * Rowsets are easy to use.  The {@code RowSet} interface extends the standard\n+ * {@code java.sql.ResultSet} interface.  The {@code RowSetMetaData}\n+ * interface extends the {@code java.sql.ResultSetMetaData} interface.\n@@ -82,1 +82,1 @@\n- * JDBC <code>ResultSet<\/code> objects will also easily be made to work with rowsets.\n+ * JDBC {@code ResultSet} objects will also easily be made to work with rowsets.\n@@ -98,4 +98,4 @@\n-   * Retrieves the url property this <code>RowSet<\/code> object will use to\n-   * create a connection if it uses the <code>DriverManager<\/code>\n-   * instead of a <code>DataSource<\/code> object to establish the connection.\n-   * The default value is <code>null<\/code>.\n+   * Retrieves the url property this {@code RowSet} object will use to\n+   * create a connection if it uses the {@code DriverManager}\n+   * instead of a {@code DataSource} object to establish the connection.\n+   * The default value is {@code null}.\n@@ -110,2 +110,2 @@\n-   * Sets the URL this <code>RowSet<\/code> object will use when it uses the\n-   * <code>DriverManager<\/code> to create a connection.\n+   * Sets the URL this {@code RowSet} object will use when it uses the\n+   * {@code DriverManager} to create a connection.\n@@ -120,1 +120,1 @@\n-   * @param url a string value; may be <code>null<\/code>\n+   * @param url a string value; may be {@code null}\n@@ -128,1 +128,1 @@\n-   * <code>RowSet<\/code> object.\n+   * {@code RowSet} object.\n@@ -137,2 +137,2 @@\n-   * Sets the data source name property for this <code>RowSet<\/code> object to the\n-   * given <code>String<\/code>.\n+   * Sets the data source name property for this {@code RowSet} object to the\n+   * given {@code String}.\n@@ -141,2 +141,2 @@\n-   * a <code>DataSource<\/code> object that has been registered with a naming\n-   * service.  After being retrieved, the <code>DataSource<\/code> object can be\n+   * a {@code DataSource} object that has been registered with a naming\n+   * service.  After being retrieved, the {@code DataSource} object can be\n@@ -145,2 +145,2 @@\n-   * @param name the logical name of the data source for this <code>RowSet<\/code>\n-   *        object; may be <code>null<\/code>\n+   * @param name the logical name of the data source for this {@code RowSet}\n+   *        object; may be {@code null}\n@@ -154,1 +154,1 @@\n-   * <code>RowSet<\/code> object.\n+   * {@code RowSet} object.\n@@ -156,2 +156,2 @@\n-   * <code>execute<\/code>.  It is\n-   * not usually part of the serialized state of a <code>RowSet<\/code> object.\n+   * {@code execute}.  It is\n+   * not usually part of the serialized state of a {@code RowSet} object.\n@@ -165,2 +165,2 @@\n-   * Sets the username property for this <code>RowSet<\/code> object to the\n-   * given <code>String<\/code>.\n+   * Sets the username property for this {@code RowSet} object to the\n+   * given {@code String}.\n@@ -177,2 +177,2 @@\n-   * <code>execute<\/code>.  It is not usually part of the serialized state\n-   * of a <code>RowSet<\/code> object.\n+   * {@code execute}.  It is not usually part of the serialized state\n+   * of a {@code RowSet} object.\n@@ -186,2 +186,2 @@\n-   * Sets the database password for this <code>RowSet<\/code> object to\n-   * the given <code>String<\/code>.\n+   * Sets the database password for this {@code RowSet} object to\n+   * the given {@code String}.\n@@ -197,1 +197,1 @@\n-   * <code>RowSet<\/code> object.\n+   * {@code RowSet} object.\n@@ -200,4 +200,4 @@\n-   *      <code>Connection.TRANSACTION_READ_UNCOMMITTED<\/code>,\n-   *      <code>Connection.TRANSACTION_READ_COMMITTED<\/code>,\n-   *      <code>Connection.TRANSACTION_REPEATABLE_READ<\/code>, or\n-   *      <code>Connection.TRANSACTION_SERIALIZABLE<\/code>\n+   *      {@code Connection.TRANSACTION_READ_UNCOMMITTED},\n+   *      {@code Connection.TRANSACTION_READ_COMMITTED},\n+   *      {@code Connection.TRANSACTION_REPEATABLE_READ}, or\n+   *      {@code Connection.TRANSACTION_SERIALIZABLE}\n@@ -209,1 +209,1 @@\n-   * Sets the transaction isolation level for this <code>RowSet<\/code> object.\n+   * Sets the transaction isolation level for this {@code RowSet} object.\n@@ -212,4 +212,4 @@\n-   *      <code>Connection.TRANSACTION_READ_UNCOMMITTED<\/code>,\n-   *      <code>Connection.TRANSACTION_READ_COMMITTED<\/code>,\n-   *      <code>Connection.TRANSACTION_REPEATABLE_READ<\/code>, or\n-   *      <code>Connection.TRANSACTION_SERIALIZABLE<\/code>\n+   *      {@code Connection.TRANSACTION_READ_UNCOMMITTED},\n+   *      {@code Connection.TRANSACTION_READ_COMMITTED},\n+   *      {@code Connection.TRANSACTION_REPEATABLE_READ}, or\n+   *      {@code Connection.TRANSACTION_SERIALIZABLE}\n@@ -222,2 +222,2 @@\n-   * Retrieves the <code>Map<\/code> object associated with this\n-   * <code>RowSet<\/code> object, which specifies the custom mapping\n+   * Retrieves the {@code Map} object associated with this\n+   * {@code RowSet} object, which specifies the custom mapping\n@@ -227,1 +227,1 @@\n-   * @return a <code>java.util.Map<\/code> object containing the names of\n+   * @return a {@code java.util.Map} object containing the names of\n@@ -237,2 +237,2 @@\n-   * Installs the given <code>java.util.Map<\/code> object as the default\n-   * type map for this <code>RowSet<\/code> object. This type map will be\n+   * Installs the given {@code java.util.Map} object as the default\n+   * type map for this {@code RowSet} object. This type map will be\n@@ -241,1 +241,1 @@\n-   * @param map  a <code>java.util.Map<\/code> object containing the names of\n+   * @param map  a {@code java.util.Map} object containing the names of\n@@ -254,1 +254,1 @@\n-   * Retrieves this <code>RowSet<\/code> object's command property.\n+   * Retrieves this {@code RowSet} object's command property.\n@@ -258,1 +258,1 @@\n-   * The default value is <code>null<\/code>.\n+   * The default value is {@code null}.\n@@ -260,1 +260,1 @@\n-   * @return the command string; may be <code>null<\/code>\n+   * @return the command string; may be {@code null}\n@@ -266,1 +266,1 @@\n-   * Sets this <code>RowSet<\/code> object's command property to the given\n+   * Sets this {@code RowSet} object's command property to the given\n@@ -274,1 +274,1 @@\n-   *        <code>RowSet<\/code> object; may be <code>null<\/code>\n+   *        {@code RowSet} object; may be {@code null}\n@@ -281,1 +281,1 @@\n-   * Retrieves whether this <code>RowSet<\/code> object is read-only.\n+   * Retrieves whether this {@code RowSet} object is read-only.\n@@ -286,1 +286,1 @@\n-   * <code>SQLException<\/code> being thrown.\n+   * {@code SQLException} being thrown.\n@@ -288,2 +288,2 @@\n-   * @return <code>true<\/code> if this <code>RowSet<\/code> object is\n-   *         read-only; <code>false<\/code> if it is updatable\n+   * @return {@code true} if this {@code RowSet} object is\n+   *         read-only; {@code false} if it is updatable\n@@ -295,2 +295,2 @@\n-   * Sets whether this <code>RowSet<\/code> object is read-only to the\n-   * given <code>boolean<\/code>.\n+   * Sets whether this {@code RowSet} object is read-only to the\n+   * given {@code boolean}.\n@@ -298,1 +298,1 @@\n-   * @param value <code>true<\/code> if read-only; <code>false<\/code> if\n+   * @param value {@code true} if read-only; {@code false} if\n@@ -308,4 +308,4 @@\n-   * This limit applies only to <code>BINARY<\/code>,\n-   * <code>VARBINARY<\/code>, <code>LONGVARBINARYBINARY<\/code>, <code>CHAR<\/code>,\n-   * <code>VARCHAR<\/code>, <code>LONGVARCHAR<\/code>, <code>NCHAR<\/code>\n-   * and <code>NVARCHAR<\/code> columns.\n+   * This limit applies only to {@code BINARY},\n+   * {@code VARBINARY}, {@code LONGVARBINARYBINARY}, {@code CHAR},\n+   * {@code VARCHAR}, {@code LONGVARCHAR}, {@code NCHAR}\n+   * and {@code NVARCHAR} columns.\n@@ -324,4 +324,4 @@\n-   * This limit applies only to <code>BINARY<\/code>,\n-   * <code>VARBINARY<\/code>, <code>LONGVARBINARYBINARY<\/code>, <code>CHAR<\/code>,\n-   * <code>VARCHAR<\/code>, <code>LONGVARCHAR<\/code>, <code>NCHAR<\/code>\n-   * and <code>NVARCHAR<\/code> columns.\n+   * This limit applies only to {@code BINARY},\n+   * {@code VARBINARY}, {@code LONGVARBINARYBINARY}, {@code CHAR},\n+   * {@code VARCHAR}, {@code LONGVARCHAR}, {@code NCHAR}\n+   * and {@code NVARCHAR} columns.\n@@ -338,1 +338,1 @@\n-   * Retrieves the maximum number of rows that this <code>RowSet<\/code>\n+   * Retrieves the maximum number of rows that this {@code RowSet}\n@@ -342,1 +342,1 @@\n-   * @return the current maximum number of rows that this <code>RowSet<\/code>\n+   * @return the current maximum number of rows that this {@code RowSet}\n@@ -350,1 +350,1 @@\n-   * Sets the maximum number of rows that this <code>RowSet<\/code>\n+   * Sets the maximum number of rows that this {@code RowSet}\n@@ -362,1 +362,1 @@\n-   * <code>RowSet<\/code> object.\n+   * {@code RowSet} object.\n@@ -366,2 +366,2 @@\n-   * @return <code>true<\/code> if escape processing is enabled;\n-   *         <code>false<\/code> if it is disabled\n+   * @return {@code true} if escape processing is enabled;\n+   *         {@code false} if it is disabled\n@@ -374,1 +374,1 @@\n-   * Sets escape processing for this <code>RowSet<\/code> object on or\n+   * Sets escape processing for this {@code RowSet} object on or\n@@ -378,2 +378,2 @@\n-   * @param enable <code>true<\/code> to enable escape processing;\n-   *        <code>false<\/code> to disable it\n+   * @param enable {@code true} to enable escape processing;\n+   *        {@code false} to disable it\n@@ -388,1 +388,1 @@\n-   * If this limit is exceeded, an <code>SQLException<\/code> is thrown.\n+   * If this limit is exceeded, an {@code SQLException} is thrown.\n@@ -400,1 +400,1 @@\n-   * If this limit is exceeded, an <code>SQLException<\/code> is thrown.\n+   * If this limit is exceeded, an {@code SQLException} is thrown.\n@@ -410,1 +410,1 @@\n-   * Sets the type of this <code>RowSet<\/code> object to the given type.\n+   * Sets the type of this {@code RowSet} object to the given type.\n@@ -414,4 +414,4 @@\n-   * @param type one of the <code>ResultSet<\/code> constants specifying a type:\n-   *        <code>ResultSet.TYPE_FORWARD_ONLY<\/code>,\n-   *        <code>ResultSet.TYPE_SCROLL_INSENSITIVE<\/code>, or\n-   *        <code>ResultSet.TYPE_SCROLL_SENSITIVE<\/code>\n+   * @param type one of the {@code ResultSet} constants specifying a type:\n+   *        {@code ResultSet.TYPE_FORWARD_ONLY},\n+   *        {@code ResultSet.TYPE_SCROLL_INSENSITIVE}, or\n+   *        {@code ResultSet.TYPE_SCROLL_SENSITIVE}\n@@ -424,1 +424,1 @@\n-   * Sets the concurrency of this <code>RowSet<\/code> object to the given\n+   * Sets the concurrency of this {@code RowSet} object to the given\n@@ -426,1 +426,1 @@\n-   * of a rowset, which is by default <code>ResultSet.CONCUR_READ_ONLY<\/code>\n+   * of a rowset, which is by default {@code ResultSet.CONCUR_READ_ONLY}\n@@ -428,3 +428,3 @@\n-   * @param concurrency one of the <code>ResultSet<\/code> constants specifying a\n-   *        concurrency level:  <code>ResultSet.CONCUR_READ_ONLY<\/code> or\n-   *        <code>ResultSet.CONCUR_UPDATABLE<\/code>\n+   * @param concurrency one of the {@code ResultSet} constants specifying a\n+   *        concurrency level:  {@code ResultSet.CONCUR_READ_ONLY} or\n+   *        {@code ResultSet.CONCUR_UPDATABLE}\n@@ -441,2 +441,2 @@\n-   * The <code>RowSet<\/code> setter methods are used to set any input parameters\n-   * needed by the <code>RowSet<\/code> object's command.\n+   * The {@code RowSet} setter methods are used to set any input parameters\n+   * needed by the {@code RowSet} object's command.\n@@ -447,2 +447,2 @@\n-   * Sets the designated parameter in this <code>RowSet<\/code> object's SQL\n-   * command to SQL <code>NULL<\/code>.\n+   * Sets the designated parameter in this {@code RowSet} object's SQL\n+   * command to SQL {@code NULL}.\n@@ -453,1 +453,1 @@\n-   * @param sqlType a SQL type code defined by <code>java.sql.Types<\/code>\n+   * @param sqlType a SQL type code defined by {@code java.sql.Types}\n@@ -459,1 +459,1 @@\n-     * Sets the designated parameter to SQL <code>NULL<\/code>.\n+     * Sets the designated parameter to SQL {@code NULL}.\n@@ -464,1 +464,1 @@\n-     * @param sqlType the SQL type code defined in <code>java.sql.Types<\/code>\n+     * @param sqlType the SQL type code defined in {@code java.sql.Types}\n@@ -474,5 +474,5 @@\n-   * Sets the designated parameter in this <code>RowSet<\/code> object's SQL\n-   * command to SQL <code>NULL<\/code>. This version of the method <code>setNull<\/code>\n-   * should  be used for SQL user-defined types (UDTs) and <code>REF<\/code> type\n-   * parameters.  Examples of UDTs include: <code>STRUCT<\/code>, <code>DISTINCT<\/code>,\n-   * <code>JAVA_OBJECT<\/code>, and named array types.\n+   * Sets the designated parameter in this {@code RowSet} object's SQL\n+   * command to SQL {@code NULL}. This version of the method {@code setNull}\n+   * should  be used for SQL user-defined types (UDTs) and {@code REF} type\n+   * parameters.  Examples of UDTs include: {@code STRUCT}, {@code DISTINCT},\n+   * {@code JAVA_OBJECT}, and named array types.\n@@ -482,2 +482,2 @@\n-   * a NULL UDT or <code>REF<\/code> parameter.  In the case of a UDT,\n-   * the name is the type name of the parameter itself.  For a <code>REF<\/code>\n+   * a NULL UDT or {@code REF} parameter.  In the case of a UDT,\n+   * the name is the type name of the parameter itself.  For a {@code REF}\n@@ -488,1 +488,1 @@\n-   * Although it is intended for UDT and <code>REF<\/code> parameters,\n+   * Although it is intended for UDT and {@code REF} parameters,\n@@ -490,1 +490,1 @@\n-   * If the parameter does not have a user-defined or <code>REF<\/code> type,\n+   * If the parameter does not have a user-defined or {@code REF} type,\n@@ -495,1 +495,1 @@\n-   * @param sqlType a value from <code>java.sql.Types<\/code>\n+   * @param sqlType a value from {@code java.sql.Types}\n@@ -497,2 +497,2 @@\n-   *        name of the SQL structured type being referenced by a <code>REF<\/code>\n-   *        type; ignored if the parameter is not a UDT or <code>REF<\/code> type\n+   *        name of the SQL structured type being referenced by a {@code REF}\n+   *        type; ignored if the parameter is not a UDT or {@code REF} type\n@@ -505,2 +505,2 @@\n-     * Sets the designated parameter to SQL <code>NULL<\/code>.\n-     * This version of the method <code>setNull<\/code> should\n+     * Sets the designated parameter to SQL {@code NULL}.\n+     * This version of the method {@code setNull} should\n@@ -526,1 +526,1 @@\n-     * @param sqlType a value from <code>java.sql.Types<\/code>\n+     * @param sqlType a value from {@code java.sql.Types}\n@@ -529,1 +529,1 @@\n-     *        SQL <code>REF<\/code> value\n+     *        SQL {@code REF} value\n@@ -540,3 +540,3 @@\n-   * Sets the designated parameter in this <code>RowSet<\/code> object's command\n-   * to the given Java <code>boolean<\/code> value. The driver converts this to\n-   * an SQL <code>BIT<\/code> value before sending it to the database.\n+   * Sets the designated parameter in this {@code RowSet} object's command\n+   * to the given Java {@code boolean} value. The driver converts this to\n+   * an SQL {@code BIT} value before sending it to the database.\n@@ -551,1 +551,1 @@\n-     * Sets the designated parameter to the given Java <code>boolean<\/code> value.\n+     * Sets the designated parameter to the given Java {@code boolean} value.\n@@ -553,1 +553,1 @@\n-     * to an SQL <code>BIT<\/code> or <code>BOOLEAN<\/code> value when it sends it to the database.\n+     * to an SQL {@code BIT} or {@code BOOLEAN} value when it sends it to the database.\n@@ -567,3 +567,3 @@\n-   * Sets the designated parameter in this <code>RowSet<\/code> object's command\n-   * to the given Java <code>byte<\/code> value. The driver converts this to\n-   * an SQL <code>TINYINT<\/code> value before sending it to the database.\n+   * Sets the designated parameter in this {@code RowSet} object's command\n+   * to the given Java {@code byte} value. The driver converts this to\n+   * an SQL {@code TINYINT} value before sending it to the database.\n@@ -578,1 +578,1 @@\n-     * Sets the designated parameter to the given Java <code>byte<\/code> value.\n+     * Sets the designated parameter to the given Java {@code byte} value.\n@@ -580,1 +580,1 @@\n-     * to an SQL <code>TINYINT<\/code> value when it sends it to the database.\n+     * to an SQL {@code TINYINT} value when it sends it to the database.\n@@ -594,3 +594,3 @@\n-   * Sets the designated parameter in this <code>RowSet<\/code> object's command\n-   * to the given Java <code>short<\/code> value. The driver converts this to\n-   * an SQL <code>SMALLINT<\/code> value before sending it to the database.\n+   * Sets the designated parameter in this {@code RowSet} object's command\n+   * to the given Java {@code short} value. The driver converts this to\n+   * an SQL {@code SMALLINT} value before sending it to the database.\n@@ -605,1 +605,1 @@\n-     * Sets the designated parameter to the given Java <code>short<\/code> value.\n+     * Sets the designated parameter to the given Java {@code short} value.\n@@ -607,1 +607,1 @@\n-     * to an SQL <code>SMALLINT<\/code> value when it sends it to the database.\n+     * to an SQL {@code SMALLINT} value when it sends it to the database.\n@@ -621,3 +621,3 @@\n-   * Sets the designated parameter in this <code>RowSet<\/code> object's command\n-   * to the given Java <code>int<\/code> value. The driver converts this to\n-   * an SQL <code>INTEGER<\/code> value before sending it to the database.\n+   * Sets the designated parameter in this {@code RowSet} object's command\n+   * to the given Java {@code int} value. The driver converts this to\n+   * an SQL {@code INTEGER} value before sending it to the database.\n@@ -632,1 +632,1 @@\n-     * Sets the designated parameter to the given Java <code>int<\/code> value.\n+     * Sets the designated parameter to the given Java {@code int} value.\n@@ -634,1 +634,1 @@\n-     * to an SQL <code>INTEGER<\/code> value when it sends it to the database.\n+     * to an SQL {@code INTEGER} value when it sends it to the database.\n@@ -648,3 +648,3 @@\n-   * Sets the designated parameter in this <code>RowSet<\/code> object's command\n-   * to the given Java <code>long<\/code> value. The driver converts this to\n-   * an SQL <code>BIGINT<\/code> value before sending it to the database.\n+   * Sets the designated parameter in this {@code RowSet} object's command\n+   * to the given Java {@code long} value. The driver converts this to\n+   * an SQL {@code BIGINT} value before sending it to the database.\n@@ -659,1 +659,1 @@\n-     * Sets the designated parameter to the given Java <code>long<\/code> value.\n+     * Sets the designated parameter to the given Java {@code long} value.\n@@ -661,1 +661,1 @@\n-     * to an SQL <code>BIGINT<\/code> value when it sends it to the database.\n+     * to an SQL {@code BIGINT} value when it sends it to the database.\n@@ -675,3 +675,3 @@\n-   * Sets the designated parameter in this <code>RowSet<\/code> object's command\n-   * to the given Java <code>float<\/code> value. The driver converts this to\n-   * an SQL <code>REAL<\/code> value before sending it to the database.\n+   * Sets the designated parameter in this {@code RowSet} object's command\n+   * to the given Java {@code float} value. The driver converts this to\n+   * an SQL {@code REAL} value before sending it to the database.\n@@ -686,1 +686,1 @@\n-     * Sets the designated parameter to the given Java <code>float<\/code> value.\n+     * Sets the designated parameter to the given Java {@code float} value.\n@@ -688,1 +688,1 @@\n-     * to an SQL <code>FLOAT<\/code> value when it sends it to the database.\n+     * to an SQL {@code FLOAT} value when it sends it to the database.\n@@ -702,3 +702,3 @@\n-   * Sets the designated parameter in this <code>RowSet<\/code> object's command\n-   * to the given Java <code>double<\/code> value. The driver converts this to\n-   * an SQL <code>DOUBLE<\/code> value before sending it to the database.\n+   * Sets the designated parameter in this {@code RowSet} object's command\n+   * to the given Java {@code double} value. The driver converts this to\n+   * an SQL {@code DOUBLE} value before sending it to the database.\n@@ -713,1 +713,1 @@\n-     * Sets the designated parameter to the given Java <code>double<\/code> value.\n+     * Sets the designated parameter to the given Java {@code double} value.\n@@ -715,1 +715,1 @@\n-     * to an SQL <code>DOUBLE<\/code> value when it sends it to the database.\n+     * to an SQL {@code DOUBLE} value when it sends it to the database.\n@@ -729,1 +729,1 @@\n-   * Sets the designated parameter in this <code>RowSet<\/code> object's command\n+   * Sets the designated parameter in this {@code RowSet} object's command\n@@ -732,1 +732,1 @@\n-   * an SQL <code>NUMERIC<\/code> value before sending it to the database.\n+   * an SQL {@code NUMERIC} value before sending it to the database.\n@@ -742,2 +742,2 @@\n-     * <code>java.math.BigDecimal<\/code> value.\n-     * The driver converts this to an SQL <code>NUMERIC<\/code> value when\n+     * {@code java.math.BigDecimal} value.\n+     * The driver converts this to an SQL {@code NUMERIC} value when\n@@ -758,5 +758,5 @@\n-   * Sets the designated parameter in this <code>RowSet<\/code> object's command\n-   * to the given Java <code>String<\/code> value. Before sending it to the\n-   * database, the driver converts this to an SQL <code>VARCHAR<\/code> or\n-   * <code>LONGVARCHAR<\/code> value, depending on the argument's size relative\n-   * to the driver's limits on <code>VARCHAR<\/code> values.\n+   * Sets the designated parameter in this {@code RowSet} object's command\n+   * to the given Java {@code String} value. Before sending it to the\n+   * database, the driver converts this to an SQL {@code VARCHAR} or\n+   * {@code LONGVARCHAR} value, depending on the argument's size relative\n+   * to the driver's limits on {@code VARCHAR} values.\n@@ -771,1 +771,1 @@\n-     * Sets the designated parameter to the given Java <code>String<\/code> value.\n+     * Sets the designated parameter to the given Java {@code String} value.\n@@ -773,1 +773,1 @@\n-     * to an SQL <code>VARCHAR<\/code> or <code>LONGVARCHAR<\/code> value\n+     * to an SQL {@code VARCHAR} or {@code LONGVARCHAR} value\n@@ -775,1 +775,1 @@\n-     * size relative to the driver's limits on <code>VARCHAR<\/code> values)\n+     * size relative to the driver's limits on {@code VARCHAR} values)\n@@ -790,5 +790,5 @@\n-   * Sets the designated parameter in this <code>RowSet<\/code> object's command\n-   * to the given Java array of <code>byte<\/code> values. Before sending it to the\n-   * database, the driver converts this to an SQL <code>VARBINARY<\/code> or\n-   * <code>LONGVARBINARY<\/code> value, depending on the argument's size relative\n-   * to the driver's limits on <code>VARBINARY<\/code> values.\n+   * Sets the designated parameter in this {@code RowSet} object's command\n+   * to the given Java array of {@code byte} values. Before sending it to the\n+   * database, the driver converts this to an SQL {@code VARBINARY} or\n+   * {@code LONGVARBINARY} value, depending on the argument's size relative\n+   * to the driver's limits on {@code VARBINARY} values.\n@@ -804,3 +804,3 @@\n-     * The driver converts this to an SQL <code>VARBINARY<\/code> or\n-     * <code>LONGVARBINARY<\/code> (depending on the argument's size relative\n-     * to the driver's limits on <code>VARBINARY<\/code> values) when it sends\n+     * The driver converts this to an SQL {@code VARBINARY} or\n+     * {@code LONGVARBINARY} (depending on the argument's size relative\n+     * to the driver's limits on {@code VARBINARY} values) when it sends\n@@ -821,4 +821,4 @@\n-   * Sets the designated parameter in this <code>RowSet<\/code> object's command\n-   * to the given <code>java.sql.Date<\/code> value. The driver converts this to\n-   * an SQL <code>DATE<\/code> value before sending it to the database, using the\n-   * default <code>java.util.Calendar<\/code> to calculate the date.\n+   * Sets the designated parameter in this {@code RowSet} object's command\n+   * to the given {@code java.sql.Date} value. The driver converts this to\n+   * an SQL {@code DATE} value before sending it to the database, using the\n+   * default {@code java.util.Calendar} to calculate the date.\n@@ -833,4 +833,4 @@\n-   * Sets the designated parameter in this <code>RowSet<\/code> object's command\n-   * to the given <code>java.sql.Time<\/code> value. The driver converts this to\n-   * an SQL <code>TIME<\/code> value before sending it to the database, using the\n-   * default <code>java.util.Calendar<\/code> to calculate it.\n+   * Sets the designated parameter in this {@code RowSet} object's command\n+   * to the given {@code java.sql.Time} value. The driver converts this to\n+   * an SQL {@code TIME} value before sending it to the database, using the\n+   * default {@code java.util.Calendar} to calculate it.\n@@ -845,4 +845,4 @@\n-   * Sets the designated parameter in this <code>RowSet<\/code> object's command\n-   * to the given <code>java.sql.Timestamp<\/code> value. The driver converts this to\n-   * an SQL <code>TIMESTAMP<\/code> value before sending it to the database, using the\n-   * default <code>java.util.Calendar<\/code> to calculate it.\n+   * Sets the designated parameter in this {@code RowSet} object's command\n+   * to the given {@code java.sql.Timestamp} value. The driver converts this to\n+   * an SQL {@code TIMESTAMP} value before sending it to the database, using the\n+   * default {@code java.util.Calendar} to calculate it.\n@@ -858,1 +858,1 @@\n-     * Sets the designated parameter to the given <code>java.sql.Timestamp<\/code> value.\n+     * Sets the designated parameter to the given {@code java.sql.Timestamp} value.\n@@ -860,1 +860,1 @@\n-     * converts this to an SQL <code>TIMESTAMP<\/code> value when it sends it to the\n+     * converts this to an SQL {@code TIMESTAMP} value when it sends it to the\n@@ -876,2 +876,2 @@\n-   * Sets the designated parameter in this <code>RowSet<\/code> object's command\n-   * to the given <code>java.io.InputStream<\/code> value.\n+   * Sets the designated parameter in this {@code RowSet} object's command\n+   * to the given {@code java.io.InputStream} value.\n@@ -879,1 +879,1 @@\n-   * <code>java.io.InputStream<\/code> rather than as a <code>LONGVARCHAR<\/code>\n+   * {@code java.io.InputStream} rather than as a {@code LONGVARCHAR}\n@@ -898,1 +898,1 @@\n-     * When a very large ASCII value is input to a <code>LONGVARCHAR<\/code>\n+     * When a very large ASCII value is input to a {@code LONGVARCHAR}\n@@ -900,1 +900,1 @@\n-     * <code>java.io.InputStream<\/code>. Data will be read from the stream\n+     * {@code java.io.InputStream}. Data will be read from the stream\n@@ -921,2 +921,2 @@\n-   * Sets the designated parameter in this <code>RowSet<\/code> object's command\n-   * to the given <code>java.io.InputStream<\/code> value.\n+   * Sets the designated parameter in this {@code RowSet} object's command\n+   * to the given {@code java.io.InputStream} value.\n@@ -924,1 +924,1 @@\n-   * <code>java.io.InputStream<\/code> rather than as a <code>LONGVARBINARY<\/code>\n+   * {@code java.io.InputStream} rather than as a {@code LONGVARBINARY}\n@@ -943,1 +943,1 @@\n-     * When a very large binary value is input to a <code>LONGVARBINARY<\/code>\n+     * When a very large binary value is input to a {@code LONGVARBINARY}\n@@ -945,1 +945,1 @@\n-     * <code>java.io.InputStream<\/code> object. The data will be read from the stream\n+     * {@code java.io.InputStream} object. The data will be read from the stream\n@@ -965,2 +965,2 @@\n-   * Sets the designated parameter in this <code>RowSet<\/code> object's command\n-   * to the given <code>java.io.Reader<\/code> value.\n+   * Sets the designated parameter in this {@code RowSet} object's command\n+   * to the given {@code java.io.Reader} value.\n@@ -968,1 +968,1 @@\n-   * <code>java.io.Reader<\/code> rather than as a <code>LONGVARCHAR<\/code>\n+   * {@code java.io.Reader} rather than as a {@code LONGVARCHAR}\n@@ -989,1 +989,1 @@\n-     * When a very large UNICODE value is input to a <code>LONGVARCHAR<\/code>\n+     * When a very large UNICODE value is input to a {@code LONGVARCHAR}\n@@ -991,1 +991,1 @@\n-     * <code>java.io.Reader<\/code> object. The data will be read from the stream\n+     * {@code java.io.Reader} object. The data will be read from the stream\n@@ -1000,1 +1000,1 @@\n-     * @param reader the <code>java.io.Reader<\/code> object that\n+     * @param reader the {@code java.io.Reader} object that\n@@ -1014,1 +1014,1 @@\n-   * Sets the designated parameter in this <code>RowSet<\/code> object's command\n+   * Sets the designated parameter in this {@code RowSet} object's command\n@@ -1016,1 +1016,1 @@\n-   * When a very large ASCII value is input to a <code>LONGVARCHAR<\/code>\n+   * When a very large ASCII value is input to a {@code LONGVARCHAR}\n@@ -1018,1 +1018,1 @@\n-   * <code>java.io.InputStream<\/code>. Data will be read from the stream\n+   * {@code java.io.InputStream}. Data will be read from the stream\n@@ -1027,1 +1027,1 @@\n-   * <code>setAsciiStream<\/code> which takes a length parameter.\n+   * {@code setAsciiStream} which takes a length parameter.\n@@ -1041,1 +1041,1 @@\n-     * When a very large ASCII value is input to a <code>LONGVARCHAR<\/code>\n+     * When a very large ASCII value is input to a {@code LONGVARCHAR}\n@@ -1043,1 +1043,1 @@\n-     * <code>java.io.InputStream<\/code>. Data will be read from the stream\n+     * {@code java.io.InputStream}. Data will be read from the stream\n@@ -1052,1 +1052,1 @@\n-     * <code>setAsciiStream<\/code> which takes a length parameter.\n+     * {@code setAsciiStream} which takes a length parameter.\n@@ -1065,1 +1065,1 @@\n-   * Sets the designated parameter in this <code>RowSet<\/code> object's command\n+   * Sets the designated parameter in this {@code RowSet} object's command\n@@ -1067,1 +1067,1 @@\n-   * When a very large binary value is input to a <code>LONGVARBINARY<\/code>\n+   * When a very large binary value is input to a {@code LONGVARBINARY}\n@@ -1069,1 +1069,1 @@\n-   * <code>java.io.InputStream<\/code> object. The data will be read from the\n+   * {@code java.io.InputStream} object. The data will be read from the\n@@ -1077,1 +1077,1 @@\n-   * <code>setBinaryStream<\/code> which takes a length parameter.\n+   * {@code setBinaryStream} which takes a length parameter.\n@@ -1091,1 +1091,1 @@\n-     * When a very large binary value is input to a <code>LONGVARBINARY<\/code>\n+     * When a very large binary value is input to a {@code LONGVARBINARY}\n@@ -1093,1 +1093,1 @@\n-     * <code>java.io.InputStream<\/code> object. The data will be read from the\n+     * {@code java.io.InputStream} object. The data will be read from the\n@@ -1101,1 +1101,1 @@\n-     * <code>setBinaryStream<\/code> which takes a length parameter.\n+     * {@code setBinaryStream} which takes a length parameter.\n@@ -1114,1 +1114,1 @@\n-   * Sets the designated parameter in this <code>RowSet<\/code> object's command\n+   * Sets the designated parameter in this {@code RowSet} object's command\n@@ -1117,1 +1117,1 @@\n-   * When a very large UNICODE value is input to a <code>LONGVARCHAR<\/code>\n+   * When a very large UNICODE value is input to a {@code LONGVARCHAR}\n@@ -1119,1 +1119,1 @@\n-   * <code>java.io.Reader<\/code> object. The data will be read from the stream\n+   * {@code java.io.Reader} object. The data will be read from the stream\n@@ -1128,1 +1128,1 @@\n-   * <code>setCharacterStream<\/code> which takes a length parameter.\n+   * {@code setCharacterStream} which takes a length parameter.\n@@ -1131,1 +1131,1 @@\n-   * @param reader the <code>java.io.Reader<\/code> object that contains the\n+   * @param reader the {@code java.io.Reader} object that contains the\n@@ -1144,1 +1144,1 @@\n-     * When a very large UNICODE value is input to a <code>LONGVARCHAR<\/code>\n+     * When a very large UNICODE value is input to a {@code LONGVARCHAR}\n@@ -1146,1 +1146,1 @@\n-     * <code>java.io.Reader<\/code> object. The data will be read from the stream\n+     * {@code java.io.Reader} object. The data will be read from the stream\n@@ -1155,1 +1155,1 @@\n-     * <code>setCharacterStream<\/code> which takes a length parameter.\n+     * {@code setCharacterStream} which takes a length parameter.\n@@ -1158,1 +1158,1 @@\n-     * @param reader the <code>java.io.Reader<\/code> object that contains the\n+     * @param reader the {@code java.io.Reader} object that contains the\n@@ -1169,1 +1169,1 @@\n-   * Sets the designated parameter in this <code>RowSet<\/code> object's command\n+   * Sets the designated parameter in this {@code RowSet} object's command\n@@ -1180,1 +1180,1 @@\n-   * <code>setNCharacterStream<\/code> which takes a length parameter.\n+   * {@code setNCharacterStream} which takes a length parameter.\n@@ -1187,1 +1187,1 @@\n-   * this method is called on a closed <code>PreparedStatement<\/code>\n+   * this method is called on a closed {@code PreparedStatement}\n@@ -1196,4 +1196,4 @@\n-   * Sets the designated parameter in this <code>RowSet<\/code> object's command\n-   * with the given Java <code>Object<\/code>.  For integral values, the\n-   * <code>java.lang<\/code> equivalent objects should be used (for example,\n-   * an instance of the class <code>Integer<\/code> for an <code>int<\/code>).\n+   * Sets the designated parameter in this {@code RowSet} object's command\n+   * with the given Java {@code Object}.  For integral values, the\n+   * {@code java.lang} equivalent objects should be used (for example,\n+   * an instance of the class {@code Integer} for an {@code int}).\n@@ -1201,1 +1201,1 @@\n-   * If the second argument is an <code>InputStream<\/code> then the stream must contain\n+   * If the second argument is an {@code InputStream} then the stream must contain\n@@ -1205,1 +1205,1 @@\n-   * <code>SQLException<\/code> when the prepared statement is executed.\n+   * {@code SQLException} when the prepared statement is executed.\n@@ -1210,3 +1210,3 @@\n-   * If the object is of a class implementing <code>SQLData<\/code>,\n-   * the rowset should call the method <code>SQLData.writeSQL<\/code>\n-   * to write the object to an <code>SQLOutput<\/code> data stream.\n+   * If the object is of a class implementing {@code SQLData},\n+   * the rowset should call the method {@code SQLData.writeSQL}\n+   * to write the object to an {@code SQLOutput} data stream.\n@@ -1214,3 +1214,3 @@\n-   * <code>Ref<\/code>, <code>Blob<\/code>, <code>Clob<\/code>,  <code>NClob<\/code>,\n-   *  <code>Struct<\/code>, <code>java.net.URL<\/code>,\n-   * or <code>Array<\/code>, the driver should pass it to the database as a\n+   * {@code Ref}, {@code Blob}, {@code Clob},  {@code NClob},\n+   *  {@code Struct}, {@code java.net.URL},\n+   * or {@code Array}, the driver should pass it to the database as a\n@@ -1225,1 +1225,1 @@\n-   * @param targetSqlType the SQL type (as defined in <code>java.sql.Types<\/code>)\n+   * @param targetSqlType the SQL type (as defined in {@code java.sql.Types})\n@@ -1228,2 +1228,2 @@\n-   * @param scaleOrLength for <code>java.sql.Types.DECIMAL<\/code>\n-   *          or <code>java.sql.Types.NUMERIC types<\/code>,\n+   * @param scaleOrLength for {@code java.sql.Types.DECIMAL}\n+   *          or {@code java.sql.Types.NUMERIC types},\n@@ -1231,1 +1231,1 @@\n-   *          Java Object types <code>InputStream<\/code> and {@code Reader},\n+   *          Java Object types {@code InputStream} and {@code Reader},\n@@ -1244,1 +1244,1 @@\n-     * <code>java.lang<\/code> equivalent objects should be used.\n+     * {@code java.lang} equivalent objects should be used.\n@@ -1250,2 +1250,2 @@\n-     * interface <code>SQLData<\/code>),\n-     * the JDBC driver should call the method <code>SQLData.writeSQL<\/code> to write it\n+     * interface {@code SQLData}),\n+     * the JDBC driver should call the method {@code SQLData.writeSQL} to write it\n@@ -1254,3 +1254,3 @@\n-     * <code>Ref<\/code>, <code>Blob<\/code>, <code>Clob<\/code>,  <code>NClob<\/code>,\n-     *  <code>Struct<\/code>, <code>java.net.URL<\/code>,\n-     * or <code>Array<\/code>, the driver should pass it to the database as a\n+     * {@code Ref}, {@code Blob}, {@code Clob},  {@code NClob},\n+     *  {@code Struct}, {@code java.net.URL},\n+     * or {@code Array}, the driver should pass it to the database as a\n@@ -1286,4 +1286,4 @@\n-   * Sets the designated parameter in this <code>RowSet<\/code> object's command\n-   * with a Java <code>Object<\/code>.  For integral values, the\n-   * <code>java.lang<\/code> equivalent objects should be used.\n-   * This method is like <code>setObject<\/code> above, but the scale used is the scale\n+   * Sets the designated parameter in this {@code RowSet} object's command\n+   * with a Java {@code Object}.  For integral values, the\n+   * {@code java.lang} equivalent objects should be used.\n+   * This method is like {@code setObject} above, but the scale used is the scale\n@@ -1298,1 +1298,1 @@\n-   * @param targetSqlType the SQL type (as defined in <code>java.sql.Types<\/code>)\n+   * @param targetSqlType the SQL type (as defined in {@code java.sql.Types})\n@@ -1307,1 +1307,1 @@\n-     * This method is like the method <code>setObject<\/code>\n+     * This method is like the method {@code setObject}\n@@ -1331,2 +1331,2 @@\n-     * The second parameter must be of type <code>Object<\/code>; therefore, the\n-     * <code>java.lang<\/code> equivalent objects should be used for built-in types.\n+     * The second parameter must be of type {@code Object}; therefore, the\n+     * {@code java.lang} equivalent objects should be used for built-in types.\n@@ -1335,1 +1335,1 @@\n-     * Java <code>Object<\/code> types to SQL types.  The given argument\n+     * Java {@code Object} types to SQL types.  The given argument\n@@ -1343,2 +1343,2 @@\n-     * If the object is of a class implementing the interface <code>SQLData<\/code>,\n-     * the JDBC driver should call the method <code>SQLData.writeSQL<\/code>\n+     * If the object is of a class implementing the interface {@code SQLData},\n+     * the JDBC driver should call the method {@code SQLData.writeSQL}\n@@ -1347,3 +1347,3 @@\n-     * <code>Ref<\/code>, <code>Blob<\/code>, <code>Clob<\/code>,  <code>NClob<\/code>,\n-     *  <code>Struct<\/code>, <code>java.net.URL<\/code>,\n-     * or <code>Array<\/code>, the driver should pass it to the database as a\n+     * {@code Ref}, {@code Blob}, {@code Clob},  {@code NClob},\n+     *  {@code Struct}, {@code java.net.URL},\n+     * or {@code Array}, the driver should pass it to the database as a\n@@ -1368,3 +1368,3 @@\n-   * Sets the designated parameter in this <code>RowSet<\/code> object's command\n-   * with a Java <code>Object<\/code>.  For integral values, the\n-   * <code>java.lang<\/code> equivalent objects should be used.\n+   * Sets the designated parameter in this {@code RowSet} object's command\n+   * with a Java {@code Object}.  For integral values, the\n+   * {@code java.lang} equivalent objects should be used.\n@@ -1380,3 +1380,3 @@\n-   * If the object is of a class implementing <code>SQLData<\/code>,\n-   * the rowset should call the method <code>SQLData.writeSQL<\/code>\n-   * to write the object to an <code>SQLOutput<\/code> data stream.\n+   * If the object is of a class implementing {@code SQLData},\n+   * the rowset should call the method {@code SQLData.writeSQL}\n+   * to write the object to an {@code SQLOutput} data stream.\n@@ -1384,3 +1384,3 @@\n-   * <code>Ref<\/code>, <code>Blob<\/code>, <code>Clob<\/code>,  <code>NClob<\/code>,\n-   *  <code>Struct<\/code>, <code>java.net.URL<\/code>,\n-   * or <code>Array<\/code>, the driver should pass it to the database as a\n+   * {@code Ref}, {@code Blob}, {@code Clob},  {@code NClob},\n+   *  {@code Struct}, {@code java.net.URL},\n+   * or {@code Array}, the driver should pass it to the database as a\n@@ -1401,3 +1401,3 @@\n-   * Sets the designated parameter in this <code>RowSet<\/code> object's command\n-   * with the given  <code>Ref<\/code> value.  The driver will convert this\n-   * to the appropriate <code>REF(&lt;structured-type&gt;)<\/code> value.\n+   * Sets the designated parameter in this {@code RowSet} object's command\n+   * with the given  {@code Ref} value.  The driver will convert this\n+   * to the appropriate {@code REF(<structured-type>)} value.\n@@ -1406,1 +1406,1 @@\n-   * @param x an object representing data of an SQL <code>REF<\/code> type\n+   * @param x an object representing data of an SQL {@code REF} type\n@@ -1412,3 +1412,3 @@\n-   * Sets the designated parameter in this <code>RowSet<\/code> object's command\n-   * with the given  <code>Blob<\/code> value.  The driver will convert this\n-   * to the <code>BLOB<\/code> value that the <code>Blob<\/code> object\n+   * Sets the designated parameter in this {@code RowSet} object's command\n+   * with the given  {@code Blob} value.  The driver will convert this\n+   * to the {@code BLOB} value that the {@code Blob} object\n@@ -1424,5 +1424,5 @@\n-     * Sets the designated parameter to a <code>InputStream<\/code> object.\n-     * The <code>InputStream<\/code> must contain  the number\n-     * of characters specified by length otherwise a <code>SQLException<\/code> will be\n-     * generated when the <code>PreparedStatement<\/code> is executed.\n-     * This method differs from the <code>setBinaryStream (int, InputStream, int)<\/code>\n+     * Sets the designated parameter to a {@code InputStream} object.\n+     * The {@code InputStream} must contain  the number\n+     * of characters specified by length otherwise a {@code SQLException} will be\n+     * generated when the {@code PreparedStatement} is executed.\n+     * This method differs from the {@code setBinaryStream (int, InputStream, int)}\n@@ -1430,1 +1430,1 @@\n-     * sent to the server as a <code>BLOB<\/code>.  When the <code>setBinaryStream<\/code> method is used,\n+     * sent to the server as a {@code BLOB}.  When the {@code setBinaryStream} method is used,\n@@ -1432,1 +1432,1 @@\n-     * data should be sent to the server as a <code>LONGVARBINARY<\/code> or a <code>BLOB<\/code>\n+     * data should be sent to the server as a {@code LONGVARBINARY} or a {@code BLOB}\n@@ -1439,1 +1439,1 @@\n-     * this method is called on a closed <code>PreparedStatement<\/code>,\n+     * this method is called on a closed {@code PreparedStatement},\n@@ -1442,1 +1442,1 @@\n-     * is less than zero or if the number of bytes in the <code>InputStream<\/code> does not match\n+     * is less than zero or if the number of bytes in the {@code InputStream} does not match\n@@ -1452,2 +1452,2 @@\n-     * Sets the designated parameter to a <code>InputStream<\/code> object.\n-     * This method differs from the <code>setBinaryStream (int, InputStream)<\/code>\n+     * Sets the designated parameter to a {@code InputStream} object.\n+     * This method differs from the {@code setBinaryStream (int, InputStream)}\n@@ -1455,1 +1455,1 @@\n-     * sent to the server as a <code>BLOB<\/code>.  When the <code>setBinaryStream<\/code> method is used,\n+     * sent to the server as a {@code BLOB}.  When the {@code setBinaryStream} method is used,\n@@ -1457,1 +1457,1 @@\n-     * data should be sent to the server as a <code>LONGVARBINARY<\/code> or a <code>BLOB<\/code>\n+     * data should be sent to the server as a {@code LONGVARBINARY} or a {@code BLOB}\n@@ -1461,1 +1461,1 @@\n-     * <code>setBlob<\/code> which takes a length parameter.\n+     * {@code setBlob} which takes a length parameter.\n@@ -1468,1 +1468,1 @@\n-     * this method is called on a closed <code>PreparedStatement<\/code> or\n+     * this method is called on a closed {@code PreparedStatement} or\n@@ -1479,1 +1479,1 @@\n-     * Sets the designated parameter to a <code>InputStream<\/code> object.\n+     * Sets the designated parameter to a {@code InputStream} object.\n@@ -1481,3 +1481,3 @@\n-     * of characters specified by length, otherwise a <code>SQLException<\/code> will be\n-     * generated when the <code>CallableStatement<\/code> is executed.\n-     * This method differs from the <code>setBinaryStream (int, InputStream, int)<\/code>\n+     * of characters specified by length, otherwise a {@code SQLException} will be\n+     * generated when the {@code CallableStatement} is executed.\n+     * This method differs from the {@code setBinaryStream (int, InputStream, int)}\n@@ -1485,1 +1485,1 @@\n-     * sent to the server as a <code>BLOB<\/code>.  When the <code>setBinaryStream<\/code> method is used,\n+     * sent to the server as a {@code BLOB}.  When the {@code setBinaryStream} method is used,\n@@ -1487,1 +1487,1 @@\n-     * data should be sent to the server as a <code>LONGVARBINARY<\/code> or a <code>BLOB<\/code>\n+     * data should be sent to the server as a {@code LONGVARBINARY} or a {@code BLOB}\n@@ -1497,1 +1497,1 @@\n-     * is less than zero; if the number of bytes in the <code>InputStream<\/code> does not match\n+     * is less than zero; if the number of bytes in the {@code InputStream} does not match\n@@ -1499,1 +1499,1 @@\n-     * this method is called on a closed <code>CallableStatement<\/code>\n+     * this method is called on a closed {@code CallableStatement}\n@@ -1509,2 +1509,2 @@\n-     * Sets the designated parameter to the given <code>java.sql.Blob<\/code> object.\n-     * The driver converts this to an SQL <code>BLOB<\/code> value when it\n+     * Sets the designated parameter to the given {@code java.sql.Blob} object.\n+     * The driver converts this to an SQL {@code BLOB} value when it\n@@ -1514,1 +1514,1 @@\n-     * @param x a <code>Blob<\/code> object that maps an SQL <code>BLOB<\/code> value\n+     * @param x a {@code Blob} object that maps an SQL {@code BLOB} value\n@@ -1524,2 +1524,2 @@\n-     * Sets the designated parameter to a <code>InputStream<\/code> object.\n-     * This method differs from the <code>setBinaryStream (int, InputStream)<\/code>\n+     * Sets the designated parameter to a {@code InputStream} object.\n+     * This method differs from the {@code setBinaryStream (int, InputStream)}\n@@ -1527,1 +1527,1 @@\n-     * sent to the server as a <code>BLOB<\/code>.  When the <code>setBinaryStream<\/code> method is used,\n+     * sent to the server as a {@code BLOB}.  When the {@code setBinaryStream} method is used,\n@@ -1529,1 +1529,1 @@\n-     * data should be send to the server as a <code>LONGVARBINARY<\/code> or a <code>BLOB<\/code>\n+     * data should be send to the server as a {@code LONGVARBINARY} or a {@code BLOB}\n@@ -1533,1 +1533,1 @@\n-     * <code>setBlob<\/code> which takes a length parameter.\n+     * {@code setBlob} which takes a length parameter.\n@@ -1539,1 +1539,1 @@\n-     * this method is called on a closed <code>CallableStatement<\/code>\n+     * this method is called on a closed {@code CallableStatement}\n@@ -1548,3 +1548,3 @@\n-   * Sets the designated parameter in this <code>RowSet<\/code> object's command\n-   * with the given  <code>Clob<\/code> value.  The driver will convert this\n-   * to the <code>CLOB<\/code> value that the <code>Clob<\/code> object\n+   * Sets the designated parameter in this {@code RowSet} object's command\n+   * with the given  {@code Clob} value.  The driver will convert this\n+   * to the {@code CLOB} value that the {@code Clob} object\n@@ -1562,3 +1562,3 @@\n-     * of characters specified by length otherwise a <code>SQLException<\/code> will be\n-     * generated when the <code>PreparedStatement<\/code> is executed.\n-     *This method differs from the <code>setCharacterStream (int, Reader, int)<\/code> method\n+     * of characters specified by length otherwise a {@code SQLException} will be\n+     * generated when the {@code PreparedStatement} is executed.\n+     *This method differs from the {@code setCharacterStream (int, Reader, int)} method\n@@ -1566,1 +1566,1 @@\n-     * the server as a <code>CLOB<\/code>.  When the <code>setCharacterStream<\/code> method is used, the\n+     * the server as a {@code CLOB}.  When the {@code setCharacterStream} method is used, the\n@@ -1568,1 +1568,1 @@\n-     * data should be sent to the server as a <code>LONGVARCHAR<\/code> or a <code>CLOB<\/code>\n+     * data should be sent to the server as a {@code LONGVARCHAR} or a {@code CLOB}\n@@ -1573,1 +1573,1 @@\n-     * a closed <code>PreparedStatement<\/code>, if parameterIndex does not correspond to a parameter\n+     * a closed {@code PreparedStatement}, if parameterIndex does not correspond to a parameter\n@@ -1584,1 +1584,1 @@\n-     * This method differs from the <code>setCharacterStream (int, Reader)<\/code> method\n+     * This method differs from the {@code setCharacterStream (int, Reader)} method\n@@ -1586,1 +1586,1 @@\n-     * the server as a <code>CLOB<\/code>.  When the <code>setCharacterStream<\/code> method is used, the\n+     * the server as a {@code CLOB}.  When the {@code setCharacterStream} method is used, the\n@@ -1588,1 +1588,1 @@\n-     * data should be sent to the server as a <code>LONGVARCHAR<\/code> or a <code>CLOB<\/code>\n+     * data should be sent to the server as a {@code LONGVARCHAR} or a {@code CLOB}\n@@ -1592,1 +1592,1 @@\n-     * <code>setClob<\/code> which takes a length parameter.\n+     * {@code setClob} which takes a length parameter.\n@@ -1597,1 +1597,1 @@\n-     * a closed <code>PreparedStatement<\/code>or if parameterIndex does not correspond to a parameter\n+     * a closed {@code PreparedStatement}or if parameterIndex does not correspond to a parameter\n@@ -1609,3 +1609,3 @@\n-     * of characters specified by length otherwise a <code>SQLException<\/code> will be\n-     * generated when the <code>CallableStatement<\/code> is executed.\n-     * This method differs from the <code>setCharacterStream (int, Reader, int)<\/code> method\n+     * of characters specified by length otherwise a {@code SQLException} will be\n+     * generated when the {@code CallableStatement} is executed.\n+     * This method differs from the {@code setCharacterStream (int, Reader, int)} method\n@@ -1613,1 +1613,1 @@\n-     * the server as a <code>CLOB<\/code>.  When the <code>setCharacterStream<\/code> method is used, the\n+     * the server as a {@code CLOB}.  When the {@code setCharacterStream} method is used, the\n@@ -1615,1 +1615,1 @@\n-     * data should be send to the server as a <code>LONGVARCHAR<\/code> or a <code>CLOB<\/code>\n+     * data should be send to the server as a {@code LONGVARCHAR} or a {@code CLOB}\n@@ -1622,1 +1622,1 @@\n-     * this method is called on a closed <code>CallableStatement<\/code>\n+     * this method is called on a closed {@code CallableStatement}\n@@ -1632,2 +1632,2 @@\n-     * Sets the designated parameter to the given <code>java.sql.Clob<\/code> object.\n-     * The driver converts this to an SQL <code>CLOB<\/code> value when it\n+     * Sets the designated parameter to the given {@code java.sql.Clob} object.\n+     * The driver converts this to an SQL {@code CLOB} value when it\n@@ -1637,1 +1637,1 @@\n-     * @param x a <code>Clob<\/code> object that maps an SQL <code>CLOB<\/code> value\n+     * @param x a {@code Clob} object that maps an SQL {@code CLOB} value\n@@ -1648,1 +1648,1 @@\n-     * This method differs from the <code>setCharacterStream (int, Reader)<\/code> method\n+     * This method differs from the {@code setCharacterStream (int, Reader)} method\n@@ -1650,1 +1650,1 @@\n-     * the server as a <code>CLOB<\/code>.  When the <code>setCharacterStream<\/code> method is used, the\n+     * the server as a {@code CLOB}.  When the {@code setCharacterStream} method is used, the\n@@ -1652,1 +1652,1 @@\n-     * data should be send to the server as a <code>LONGVARCHAR<\/code> or a <code>CLOB<\/code>\n+     * data should be send to the server as a {@code LONGVARCHAR} or a {@code CLOB}\n@@ -1656,1 +1656,1 @@\n-     * <code>setClob<\/code> which takes a length parameter.\n+     * {@code setClob} which takes a length parameter.\n@@ -1661,1 +1661,1 @@\n-     * a closed <code>CallableStatement<\/code>\n+     * a closed {@code CallableStatement}\n@@ -1670,3 +1670,3 @@\n-   * Sets the designated parameter in this <code>RowSet<\/code> object's command\n-   * with the given  <code>Array<\/code> value.  The driver will convert this\n-   * to the <code>ARRAY<\/code> value that the <code>Array<\/code> object\n+   * Sets the designated parameter in this {@code RowSet} object's command\n+   * with the given  {@code Array} value.  The driver will convert this\n+   * to the {@code ARRAY} value that the {@code Array} object\n@@ -1682,3 +1682,3 @@\n-   * Sets the designated parameter in this <code>RowSet<\/code> object's command\n-   * with the given  <code>java.sql.Date<\/code> value.  The driver will convert this\n-   * to an SQL <code>DATE<\/code> value, using the given <code>java.util.Calendar<\/code>\n+   * Sets the designated parameter in this {@code RowSet} object's command\n+   * with the given  {@code java.sql.Date} value.  The driver will convert this\n+   * to an SQL {@code DATE} value, using the given {@code java.util.Calendar}\n@@ -1689,1 +1689,1 @@\n-   * @param cal the <code>java.util.Calendar<\/code> object to use for calculating the date\n+   * @param cal the {@code java.util.Calendar} object to use for calculating the date\n@@ -1696,1 +1696,1 @@\n-     * Sets the designated parameter to the given <code>java.sql.Date<\/code> value\n+     * Sets the designated parameter to the given {@code java.sql.Date} value\n@@ -1700,1 +1700,1 @@\n-     * to an SQL <code>DATE<\/code> value when it sends it to the database.\n+     * to an SQL {@code DATE} value when it sends it to the database.\n@@ -1715,3 +1715,3 @@\n-     * Sets the designated parameter to the given <code>java.sql.Date<\/code> value,\n-     * using the given <code>Calendar<\/code> object.  The driver uses\n-     * the <code>Calendar<\/code> object to construct an SQL <code>DATE<\/code> value,\n+     * Sets the designated parameter to the given {@code java.sql.Date} value,\n+     * using the given {@code Calendar} object.  The driver uses\n+     * the {@code Calendar} object to construct an SQL {@code DATE} value,\n@@ -1719,1 +1719,1 @@\n-     * a <code>Calendar<\/code> object, the driver can calculate the date\n+     * a {@code Calendar} object, the driver can calculate the date\n@@ -1721,1 +1721,1 @@\n-     * <code>Calendar<\/code> object is specified, the driver uses the default\n+     * {@code Calendar} object is specified, the driver uses the default\n@@ -1726,1 +1726,1 @@\n-     * @param cal the <code>Calendar<\/code> object the driver will use\n+     * @param cal the {@code Calendar} object the driver will use\n@@ -1739,3 +1739,3 @@\n-   * Sets the designated parameter in this <code>RowSet<\/code> object's command\n-   * with the given  <code>java.sql.Time<\/code> value.  The driver will convert this\n-   * to an SQL <code>TIME<\/code> value, using the given <code>java.util.Calendar<\/code>\n+   * Sets the designated parameter in this {@code RowSet} object's command\n+   * with the given  {@code java.sql.Time} value.  The driver will convert this\n+   * to an SQL {@code TIME} value, using the given {@code java.util.Calendar}\n@@ -1746,1 +1746,1 @@\n-   * @param cal the <code>java.util.Calendar<\/code> object to use for calculating the time\n+   * @param cal the {@code java.util.Calendar} object to use for calculating the time\n@@ -1753,1 +1753,1 @@\n-     * Sets the designated parameter to the given <code>java.sql.Time<\/code> value.\n+     * Sets the designated parameter to the given {@code java.sql.Time} value.\n@@ -1755,1 +1755,1 @@\n-     * to an SQL <code>TIME<\/code> value when it sends it to the database.\n+     * to an SQL {@code TIME} value when it sends it to the database.\n@@ -1770,3 +1770,3 @@\n-     * Sets the designated parameter to the given <code>java.sql.Time<\/code> value,\n-     * using the given <code>Calendar<\/code> object.  The driver uses\n-     * the <code>Calendar<\/code> object to construct an SQL <code>TIME<\/code> value,\n+     * Sets the designated parameter to the given {@code java.sql.Time} value,\n+     * using the given {@code Calendar} object.  The driver uses\n+     * the {@code Calendar} object to construct an SQL {@code TIME} value,\n@@ -1774,1 +1774,1 @@\n-     * a <code>Calendar<\/code> object, the driver can calculate the time\n+     * a {@code Calendar} object, the driver can calculate the time\n@@ -1776,1 +1776,1 @@\n-     * <code>Calendar<\/code> object is specified, the driver uses the default\n+     * {@code Calendar} object is specified, the driver uses the default\n@@ -1781,1 +1781,1 @@\n-     * @param cal the <code>Calendar<\/code> object the driver will use\n+     * @param cal the {@code Calendar} object the driver will use\n@@ -1794,4 +1794,4 @@\n-   * Sets the designated parameter in this <code>RowSet<\/code> object's command\n-   * with the given  <code>java.sql.Timestamp<\/code> value.  The driver will\n-   * convert this to an SQL <code>TIMESTAMP<\/code> value, using the given\n-   * <code>java.util.Calendar<\/code> object to calculate it, before sending it to the\n+   * Sets the designated parameter in this {@code RowSet} object's command\n+   * with the given  {@code java.sql.Timestamp} value.  The driver will\n+   * convert this to an SQL {@code TIMESTAMP} value, using the given\n+   * {@code java.util.Calendar} object to calculate it, before sending it to the\n@@ -1802,1 +1802,1 @@\n-   * @param cal the <code>java.util.Calendar<\/code> object to use for calculating the\n+   * @param cal the {@code java.util.Calendar} object to use for calculating the\n@@ -1810,3 +1810,3 @@\n-     * Sets the designated parameter to the given <code>java.sql.Timestamp<\/code> value,\n-     * using the given <code>Calendar<\/code> object.  The driver uses\n-     * the <code>Calendar<\/code> object to construct an SQL <code>TIMESTAMP<\/code> value,\n+     * Sets the designated parameter to the given {@code java.sql.Timestamp} value,\n+     * using the given {@code Calendar} object.  The driver uses\n+     * the {@code Calendar} object to construct an SQL {@code TIMESTAMP} value,\n@@ -1814,1 +1814,1 @@\n-     * a <code>Calendar<\/code> object, the driver can calculate the timestamp\n+     * a {@code Calendar} object, the driver can calculate the timestamp\n@@ -1816,1 +1816,1 @@\n-     * <code>Calendar<\/code> object is specified, the driver uses the default\n+     * {@code Calendar} object is specified, the driver uses the default\n@@ -1821,1 +1821,1 @@\n-     * @param cal the <code>Calendar<\/code> object the driver will use\n+     * @param cal the {@code Calendar} object the driver will use\n@@ -1834,1 +1834,1 @@\n-   * Clears the parameters set for this <code>RowSet<\/code> object's command.\n+   * Clears the parameters set for this {@code RowSet} object's command.\n@@ -1836,1 +1836,1 @@\n-   * <code>RowSet<\/code> object. Setting a parameter value automatically clears its\n+   * {@code RowSet} object. Setting a parameter value automatically clears its\n@@ -1839,1 +1839,1 @@\n-   * be done by calling the method <code>clearParameters<\/code>.\n+   * be done by calling the method {@code clearParameters}.\n@@ -1850,1 +1850,1 @@\n-   * Fills this <code>RowSet<\/code> object with data.\n+   * Fills this {@code RowSet} object with data.\n@@ -1852,1 +1852,1 @@\n-   * The <code>execute<\/code> method may use the following properties\n+   * The {@code execute} method may use the following properties\n@@ -1856,1 +1856,1 @@\n-   * The <code>execute<\/code> method  may use the following properties\n+   * The {@code execute} method  may use the following properties\n@@ -1866,2 +1866,2 @@\n-   * If this <code>RowSet<\/code> object does not maintain a continuous connection\n-   * with its source of data, it may use a {@code Reader} (a <code>RowSetReader<\/code>\n+   * If this {@code RowSet} object does not maintain a continuous connection\n+   * with its source of data, it may use a {@code Reader} (a {@code RowSetReader}\n@@ -1869,2 +1869,2 @@\n-   * registered with this <code>RowSet<\/code> object, and the method\n-   * <code>execute<\/code> will call on the {@code Reader}'s <code>readData<\/code>\n+   * registered with this {@code RowSet} object, and the method\n+   * {@code execute} will call on the {@code Reader}'s {@code readData}\n@@ -1885,1 +1885,1 @@\n-   * that occur on this <code>RowSet<\/code> object.\n+   * that occur on this {@code RowSet} object.\n@@ -1887,1 +1887,1 @@\n-   * @param listener a component that has implemented the <code>RowSetListener<\/code>\n+   * @param listener a component that has implemented the {@code RowSetListener}\n@@ -1889,1 +1889,1 @@\n-   *        <code>RowSet<\/code> object\n+   *        {@code RowSet} object\n@@ -1896,1 +1896,1 @@\n-   * notified when an event occurs on this <code>RowSet<\/code> object.\n+   * notified when an event occurs on this {@code RowSet} object.\n@@ -1899,1 +1899,1 @@\n-   *        <code>RowSet<\/code> object\n+   *        {@code RowSet} object\n@@ -1905,2 +1905,2 @@\n-      * Sets the designated parameter to the given <code>java.sql.SQLXML<\/code> object. The driver converts this to an\n-      * SQL <code>XML<\/code> value when it sends it to the database.\n+      * Sets the designated parameter to the given {@code java.sql.SQLXML} object. The driver converts this to an\n+      * SQL {@code XML} value when it sends it to the database.\n@@ -1908,1 +1908,1 @@\n-      * @param xmlObject a <code>SQLXML<\/code> object that maps an SQL <code>XML<\/code> value\n+      * @param xmlObject a {@code SQLXML} object that maps an SQL {@code XML} value\n@@ -1911,4 +1911,4 @@\n-      * the <code>java.xml.transform.Result<\/code>,\n-      *  <code>Writer<\/code> or <code>OutputStream<\/code> has not been closed\n-      * for the <code>SQLXML<\/code> object  or\n-      *  if there is an error processing the XML value.  The <code>getCause<\/code> method\n+      * the {@code java.xml.transform.Result},\n+      *  {@code Writer} or {@code OutputStream} has not been closed\n+      * for the {@code SQLXML} object  or\n+      *  if there is an error processing the XML value.  The {@code getCause} method\n@@ -1922,2 +1922,2 @@\n-     * Sets the designated parameter to the given <code>java.sql.SQLXML<\/code> object. The driver converts this to an\n-     * <code>SQL XML<\/code> value when it sends it to the database.\n+     * Sets the designated parameter to the given {@code java.sql.SQLXML} object. The driver converts this to an\n+     * {@code SQL XML} value when it sends it to the database.\n@@ -1925,1 +1925,1 @@\n-     * @param xmlObject a <code>SQLXML<\/code> object that maps an <code>SQL XML<\/code> value\n+     * @param xmlObject a {@code SQLXML} object that maps an {@code SQL XML} value\n@@ -1928,4 +1928,4 @@\n-     * the <code>java.xml.transform.Result<\/code>,\n-     *  <code>Writer<\/code> or <code>OutputStream<\/code> has not been closed\n-     * for the <code>SQLXML<\/code> object  or\n-     *  if there is an error processing the XML value.  The <code>getCause<\/code> method\n+     * the {@code java.xml.transform.Result},\n+     *  {@code Writer} or {@code OutputStream} has not been closed\n+     * for the {@code SQLXML} object  or\n+     *  if there is an error processing the XML value.  The {@code getCause} method\n@@ -1939,2 +1939,2 @@\n-     * Sets the designated parameter to the given <code>java.sql.RowId<\/code> object. The\n-     * driver converts this to a SQL <code>ROWID<\/code> value when it sends it\n+     * Sets the designated parameter to the given {@code java.sql.RowId} object. The\n+     * driver converts this to a SQL {@code ROWID} value when it sends it\n@@ -1952,2 +1952,2 @@\n-    * Sets the designated parameter to the given <code>java.sql.RowId<\/code> object. The\n-    * driver converts this to a SQL <code>ROWID<\/code> when it sends it to the\n+    * Sets the designated parameter to the given {@code java.sql.RowId} object. The\n+    * driver converts this to a SQL {@code ROWID} when it sends it to the\n@@ -1964,3 +1964,3 @@\n-     * Sets the designated parameter to the given <code>String<\/code> object.\n-     * The driver converts this to a SQL <code>NCHAR<\/code> or\n-     * <code>NVARCHAR<\/code> or <code>LONGNVARCHAR<\/code> value\n+     * Sets the designated parameter to the given {@code String} object.\n+     * The driver converts this to a SQL {@code NCHAR} or\n+     * {@code NVARCHAR} or {@code LONGNVARCHAR} value\n@@ -1968,1 +1968,1 @@\n-     * size relative to the driver's limits on <code>NVARCHAR<\/code> values)\n+     * size relative to the driver's limits on {@code NVARCHAR} values)\n@@ -1981,3 +1981,3 @@\n-     * Sets the designated parameter to the given <code>String<\/code> object.\n-     * The driver converts this to a SQL <code>NCHAR<\/code> or\n-     * <code>NVARCHAR<\/code> or <code>LONGNVARCHAR<\/code>\n+     * Sets the designated parameter to the given {@code String} object.\n+     * The driver converts this to a SQL {@code NCHAR} or\n+     * {@code NVARCHAR} or {@code LONGNVARCHAR}\n@@ -2036,1 +2036,1 @@\n-     * <code>setNCharacterStream<\/code> which takes a length parameter.\n+     * {@code setNCharacterStream} which takes a length parameter.\n@@ -2043,1 +2043,1 @@\n-     * this method is called on a closed <code>CallableStatement<\/code>\n+     * this method is called on a closed {@code CallableStatement}\n@@ -2050,3 +2050,3 @@\n-    * Sets the designated parameter to a <code>java.sql.NClob<\/code> object. The object\n-    * implements the <code>java.sql.NClob<\/code> interface. This <code>NClob<\/code>\n-    * object maps to a SQL <code>NCLOB<\/code>.\n+    * Sets the designated parameter to a {@code java.sql.NClob} object. The object\n+    * implements the {@code java.sql.NClob} interface. This {@code NClob}\n+    * object maps to a SQL {@code NCLOB}.\n@@ -2065,3 +2065,3 @@\n-     * of characters specified by length otherwise a <code>SQLException<\/code> will be\n-     * generated when the <code>CallableStatement<\/code> is executed.\n-     * This method differs from the <code>setCharacterStream (int, Reader, int)<\/code> method\n+     * of characters specified by length otherwise a {@code SQLException} will be\n+     * generated when the {@code CallableStatement} is executed.\n+     * This method differs from the {@code setCharacterStream (int, Reader, int)} method\n@@ -2069,1 +2069,1 @@\n-     * the server as a <code>NCLOB<\/code>.  When the <code>setCharacterStream<\/code> method is used, the\n+     * the server as a {@code NCLOB}.  When the {@code setCharacterStream} method is used, the\n@@ -2071,1 +2071,1 @@\n-     * data should be send to the server as a <code>LONGNVARCHAR<\/code> or a <code>NCLOB<\/code>\n+     * data should be send to the server as a {@code LONGNVARCHAR} or a {@code NCLOB}\n@@ -2081,1 +2081,1 @@\n-     * this method is called on a closed <code>CallableStatement<\/code>\n+     * this method is called on a closed {@code CallableStatement}\n@@ -2091,1 +2091,1 @@\n-     * This method differs from the <code>setCharacterStream (int, Reader)<\/code> method\n+     * This method differs from the {@code setCharacterStream (int, Reader)} method\n@@ -2093,1 +2093,1 @@\n-     * the server as a <code>NCLOB<\/code>.  When the <code>setCharacterStream<\/code> method is used, the\n+     * the server as a {@code NCLOB}.  When the {@code setCharacterStream} method is used, the\n@@ -2095,1 +2095,1 @@\n-     * data should be send to the server as a <code>LONGNVARCHAR<\/code> or a <code>NCLOB<\/code>\n+     * data should be send to the server as a {@code LONGNVARCHAR} or a {@code NCLOB}\n@@ -2098,1 +2098,1 @@\n-     * <code>setNClob<\/code> which takes a length parameter.\n+     * {@code setNClob} which takes a length parameter.\n@@ -2105,1 +2105,1 @@\n-     * this method is called on a closed <code>CallableStatement<\/code>\n+     * this method is called on a closed {@code CallableStatement}\n@@ -2116,3 +2116,3 @@\n-     * of characters specified by length otherwise a <code>SQLException<\/code> will be\n-     * generated when the <code>PreparedStatement<\/code> is executed.\n-     * This method differs from the <code>setCharacterStream (int, Reader, int)<\/code> method\n+     * of characters specified by length otherwise a {@code SQLException} will be\n+     * generated when the {@code PreparedStatement} is executed.\n+     * This method differs from the {@code setCharacterStream (int, Reader, int)} method\n@@ -2120,1 +2120,1 @@\n-     * the server as a <code>NCLOB<\/code>.  When the <code>setCharacterStream<\/code> method is used, the\n+     * the server as a {@code NCLOB}.  When the {@code setCharacterStream} method is used, the\n@@ -2122,1 +2122,1 @@\n-     * data should be sent to the server as a <code>LONGNVARCHAR<\/code> or a <code>NCLOB<\/code>\n+     * data should be sent to the server as a {@code LONGNVARCHAR} or a {@code NCLOB}\n@@ -2131,1 +2131,1 @@\n-     * this method is called on a closed <code>PreparedStatement<\/code>\n+     * this method is called on a closed {@code PreparedStatement}\n@@ -2140,2 +2140,2 @@\n-     * Sets the designated parameter to a <code>java.sql.NClob<\/code> object. The driver converts this to a\n-     * SQL <code>NCLOB<\/code> value when it sends it to the database.\n+     * Sets the designated parameter to a {@code java.sql.NClob} object. The driver converts this to a\n+     * SQL {@code NCLOB} value when it sends it to the database.\n@@ -2153,1 +2153,1 @@\n-     * This method differs from the <code>setCharacterStream (int, Reader)<\/code> method\n+     * This method differs from the {@code setCharacterStream (int, Reader)} method\n@@ -2155,1 +2155,1 @@\n-     * the server as a <code>NCLOB<\/code>.  When the <code>setCharacterStream<\/code> method is used, the\n+     * the server as a {@code NCLOB}.  When the {@code setCharacterStream} method is used, the\n@@ -2157,1 +2157,1 @@\n-     * data should be sent to the server as a <code>LONGNVARCHAR<\/code> or a <code>NCLOB<\/code>\n+     * data should be sent to the server as a {@code LONGNVARCHAR} or a {@code NCLOB}\n@@ -2160,1 +2160,1 @@\n-     * <code>setNClob<\/code> which takes a length parameter.\n+     * {@code setNClob} which takes a length parameter.\n@@ -2169,1 +2169,1 @@\n-     * this method is called on a closed <code>PreparedStatement<\/code>\n+     * this method is called on a closed {@code PreparedStatement}\n@@ -2178,2 +2178,2 @@\n-     * Sets the designated parameter to the given <code>java.net.URL<\/code> value.\n-     * The driver converts this to an SQL <code>DATALINK<\/code> value\n+     * Sets the designated parameter to the given {@code java.net.URL} value.\n+     * The driver converts this to an SQL {@code DATALINK} value\n@@ -2183,1 +2183,1 @@\n-     * @param x the <code>java.net.URL<\/code> object to be set\n+     * @param x the {@code java.net.URL} object to be set\n","filename":"src\/java.sql\/share\/classes\/javax\/sql\/RowSet.java","additions":452,"deletions":452,"binary":false,"changes":904,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2006, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,2 +29,2 @@\n- * An <code>Event<\/code> object generated when an event occurs to a\n- * <code>RowSet<\/code> object.  A <code>RowSetEvent<\/code> object is\n+ * An {@code Event} object generated when an event occurs to a\n+ * {@code RowSet} object.  A {@code RowSetEvent} object is\n@@ -34,5 +34,5 @@\n- * When an event occurs on a <code>RowSet<\/code> object, one of the\n- * <code>RowSetListener<\/code> methods will be sent to all registered\n- * listeners to notify them of the event.  An <code>Event<\/code> object\n- * is supplied to the <code>RowSetListener<\/code> method so that the\n- * listener can use it to find out which <code>RowSet<\/code> object is\n+ * When an event occurs on a {@code RowSet} object, one of the\n+ * {@code RowSetListener} methods will be sent to all registered\n+ * listeners to notify them of the event.  An {@code Event} object\n+ * is supplied to the {@code RowSetListener} method so that the\n+ * listener can use it to find out which {@code RowSet} object is\n@@ -47,2 +47,2 @@\n-   * Constructs a <code>RowSetEvent<\/code> object initialized with the\n-   * given <code>RowSet<\/code> object.\n+   * Constructs a {@code RowSetEvent} object initialized with the\n+   * given {@code RowSet} object.\n@@ -50,1 +50,1 @@\n-   * @param source the <code>RowSet<\/code> object whose data has changed or\n+   * @param source the {@code RowSet} object whose data has changed or\n@@ -52,1 +52,1 @@\n-   * @throws IllegalArgumentException if <code>source<\/code> is null.\n+   * @throws IllegalArgumentException if {@code source} is null.\n","filename":"src\/java.sql\/share\/classes\/javax\/sql\/RowSetEvent.java","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -31,3 +31,3 @@\n- * The interface that a <code>RowSet<\/code> object implements in order to\n- * present itself to a <code>RowSetReader<\/code> or <code>RowSetWriter<\/code>\n- * object. The <code>RowSetInternal<\/code> interface contains\n+ * The interface that a {@code RowSet} object implements in order to\n+ * present itself to a {@code RowSetReader} or {@code RowSetWriter}\n+ * object. The {@code RowSetInternal} interface contains\n@@ -44,1 +44,1 @@\n-   * <code>RowSet<\/code> object's command.\n+   * {@code RowSet} object's command.\n@@ -46,1 +46,1 @@\n-   * @return an array of the current parameter values for this <code>RowSet<\/code>\n+   * @return an array of the current parameter values for this {@code RowSet}\n@@ -53,2 +53,2 @@\n-   * Retrieves the <code>Connection<\/code> object that was passed to this\n-   * <code>RowSet<\/code> object.\n+   * Retrieves the {@code Connection} object that was passed to this\n+   * {@code RowSet} object.\n@@ -56,2 +56,2 @@\n-   * @return the <code>Connection<\/code> object passed to the rowset\n-   *      or <code>null<\/code> if none was passed\n+   * @return the {@code Connection} object passed to the rowset\n+   *      or {@code null} if none was passed\n@@ -63,4 +63,4 @@\n-   * Sets the given <code>RowSetMetaData<\/code> object as the\n-   * <code>RowSetMetaData<\/code> object for this <code>RowSet<\/code>\n-   * object. The <code>RowSetReader<\/code> object associated with the rowset\n-   * will use <code>RowSetMetaData<\/code> methods to set the values giving\n+   * Sets the given {@code RowSetMetaData} object as the\n+   * {@code RowSetMetaData} object for this {@code RowSet}\n+   * object. The {@code RowSetReader} object associated with the rowset\n+   * will use {@code RowSetMetaData} methods to set the values giving\n@@ -69,1 +69,1 @@\n-   * @param md the <code>RowSetMetaData<\/code> object that will be set with\n+   * @param md the {@code RowSetMetaData} object that will be set with\n@@ -77,2 +77,2 @@\n-   * Retrieves a <code>ResultSet<\/code> object containing the original\n-   * value of this <code>RowSet<\/code> object.\n+   * Retrieves a {@code ResultSet} object containing the original\n+   * value of this {@code RowSet} object.\n@@ -82,1 +82,1 @@\n-   * <code>getOriginal<\/code> are said to have an original value.\n+   * {@code getOriginal} are said to have an original value.\n@@ -90,1 +90,1 @@\n-   * Retrieves a <code>ResultSet<\/code> object containing the original value\n+   * Retrieves a {@code ResultSet} object containing the original value\n@@ -95,1 +95,1 @@\n-   * @return the original value of the current row as a <code>ResultSet<\/code>\n+   * @return the original value of the current row as a {@code ResultSet}\n","filename":"src\/java.sql\/share\/classes\/javax\/sql\/RowSetInternal.java","additions":19,"deletions":19,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2001, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,1 @@\n- * event happens in the life of a <code>RowSet<\/code> object.\n+ * event happens in the life of a {@code RowSet} object.\n@@ -33,1 +33,1 @@\n- * <code>RowSet<\/code> object via the method <code>RowSet.addRowSetListener<\/code>.\n+ * {@code RowSet} object via the method {@code RowSet.addRowSetListener}.\n@@ -43,2 +43,2 @@\n-   * Notifies registered listeners that a <code>RowSet<\/code> object\n-   * in the given <code>RowSetEvent<\/code> object has changed its entire contents.\n+   * Notifies registered listeners that a {@code RowSet} object\n+   * in the given {@code RowSetEvent} object has changed its entire contents.\n@@ -47,1 +47,1 @@\n-   * <code>event.getSource<\/code>.\n+   * {@code event.getSource}.\n@@ -49,2 +49,2 @@\n-   * @param event a <code>RowSetEvent<\/code> object that contains\n-   *         the <code>RowSet<\/code> object that is the source of the event\n+   * @param event a {@code RowSetEvent} object that contains\n+   *         the {@code RowSet} object that is the source of the event\n@@ -55,1 +55,1 @@\n-   * Notifies registered listeners that a <code>RowSet<\/code> object\n+   * Notifies registered listeners that a {@code RowSet} object\n@@ -59,1 +59,1 @@\n-   * <code>event.getSource<\/code>.\n+   * {@code event.getSource}.\n@@ -61,2 +61,2 @@\n-   * @param event a <code>RowSetEvent<\/code> object that contains\n-   *         the <code>RowSet<\/code> object that is the source of the event\n+   * @param event a {@code RowSetEvent} object that contains\n+   *         the {@code RowSet} object that is the source of the event\n@@ -67,1 +67,1 @@\n-   * Notifies registered listeners that a <code>RowSet<\/code> object's\n+   * Notifies registered listeners that a {@code RowSet} object's\n@@ -71,1 +71,1 @@\n-   * <code>event.getSource<\/code>.\n+   * {@code event.getSource}.\n@@ -73,2 +73,2 @@\n-   * @param event a <code>RowSetEvent<\/code> object that contains\n-   *         the <code>RowSet<\/code> object that is the source of the event\n+   * @param event a {@code RowSetEvent} object that contains\n+   *         the {@code RowSet} object that is the source of the event\n","filename":"src\/java.sql\/share\/classes\/javax\/sql\/RowSetListener.java","additions":16,"deletions":16,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -32,7 +32,7 @@\n- * <code>RowSet<\/code> object.  This interface is\n- * an extension of the <code>ResultSetMetaData<\/code> interface with\n- * methods for setting the values in a <code>RowSetMetaData<\/code> object.\n- * When a <code>RowSetReader<\/code> object reads data into a <code>RowSet<\/code>\n- * object, it creates a <code>RowSetMetaData<\/code> object and initializes it\n- * using the methods in the <code>RowSetMetaData<\/code> interface.  Then the\n- * reader passes the <code>RowSetMetaData<\/code> object to the rowset.\n+ * {@code RowSet} object.  This interface is\n+ * an extension of the {@code ResultSetMetaData} interface with\n+ * methods for setting the values in a {@code RowSetMetaData} object.\n+ * When a {@code RowSetReader} object reads data into a {@code RowSet}\n+ * object, it creates a {@code RowSetMetaData} object and initializes it\n+ * using the methods in the {@code RowSetMetaData} interface.  Then the\n+ * reader passes the {@code RowSetMetaData} object to the rowset.\n@@ -41,1 +41,1 @@\n- * calls the method <code>RowSet.execute<\/code>; an application\n+ * calls the method {@code RowSet.execute}; an application\n@@ -50,1 +50,1 @@\n-   * Sets the number of columns in the <code>RowSet<\/code> object to\n+   * Sets the number of columns in the {@code RowSet} object to\n@@ -53,1 +53,1 @@\n-   * @param columnCount the number of columns in the <code>RowSet<\/code> object\n+   * @param columnCount the number of columns in the {@code RowSet} object\n@@ -60,1 +60,1 @@\n-   * The default is for a <code>RowSet<\/code> object's\n+   * The default is for a {@code RowSet} object's\n@@ -64,2 +64,2 @@\n-   * @param property <code>true<\/code> if the column is automatically\n-   *                 numbered; <code>false<\/code> if it is not\n+   * @param property {@code true} if the column is automatically\n+   *                 numbered; {@code false} if it is not\n@@ -73,1 +73,1 @@\n-   * The default is <code>false<\/code>.\n+   * The default is {@code false}.\n@@ -76,2 +76,2 @@\n-   * @param property <code>true<\/code> if the column is case sensitive;\n-   *                 <code>false<\/code> if it is not\n+   * @param property {@code true} if the column is case sensitive;\n+   *                 {@code false} if it is not\n@@ -85,1 +85,1 @@\n-   * The default is <code>false<\/code>.\n+   * The default is {@code false}.\n@@ -88,2 +88,2 @@\n-   * @param property <code>true<\/code> if the column can be used in a\n-   *                 <code>WHERE<\/code> clause; <code>false<\/code> if it cannot\n+   * @param property {@code true} if the column can be used in a\n+   *                 {@code WHERE} clause; {@code false} if it cannot\n@@ -97,1 +97,1 @@\n-   * The default is <code>false<\/code>.\n+   * The default is {@code false}.\n@@ -100,2 +100,2 @@\n-   * @param property <code>true<\/code> if the column is a cash value;\n-   *                 <code>false<\/code> if it is not\n+   * @param property {@code true} if the column is a cash value;\n+   *                 {@code false} if it is not\n@@ -109,2 +109,2 @@\n-   * <code>NULL<\/code>.\n-   * The default is <code>ResultSetMetaData.columnNullableUnknown<\/code>\n+   * {@code NULL}.\n+   * The default is {@code ResultSetMetaData.columnNullableUnknown}\n@@ -114,3 +114,3 @@\n-   *                 <code>ResultSetMetaData.columnNoNulls<\/code>,\n-   *                 <code>ResultSetMetaData.columnNullable<\/code>, or\n-   *                 <code>ResultSetMetaData.columnNullableUnknown<\/code>\n+   *                 {@code ResultSetMetaData.columnNoNulls},\n+   *                 {@code ResultSetMetaData.columnNullable}, or\n+   *                 {@code ResultSetMetaData.columnNullableUnknown}\n@@ -124,1 +124,1 @@\n-   * The default is <code>false<\/code>.\n+   * The default is {@code false}.\n@@ -127,2 +127,2 @@\n-   * @param property <code>true<\/code> if the column is a signed number;\n-   *                 <code>false<\/code> if it is not\n+   * @param property {@code true} if the column is a signed number;\n+   *                 {@code false} if it is not\n@@ -136,1 +136,1 @@\n-   * given <code>int<\/code>.\n+   * given {@code int}.\n@@ -148,1 +148,1 @@\n-   * displays, if any, to the given <code>String<\/code>.\n+   * displays, if any, to the given {@code String}.\n@@ -157,1 +157,1 @@\n-   * Sets the name of the designated column to the given <code>String<\/code>.\n+   * Sets the name of the designated column to the given {@code String}.\n@@ -167,1 +167,1 @@\n-   * the given <code>String<\/code>.\n+   * the given {@code String}.\n@@ -177,1 +177,1 @@\n-   * given <code>int<\/code>.\n+   * given {@code int}.\n@@ -187,1 +187,1 @@\n-   * right of the decimal point to the given <code>int<\/code>.\n+   * right of the decimal point to the given {@code int}.\n@@ -197,1 +197,1 @@\n-   * <code>String<\/code>.\n+   * {@code String}.\n@@ -207,1 +207,1 @@\n-   * <code>String<\/code>.\n+   * {@code String}.\n@@ -227,1 +227,1 @@\n-   * data source, if any, to the given <code>String<\/code>.\n+   * data source, if any, to the given {@code String}.\n","filename":"src\/java.sql\/share\/classes\/javax\/sql\/RowSetMetaData.java","additions":39,"deletions":39,"binary":false,"changes":78,"status":"modified"},{"patch":"@@ -31,1 +31,1 @@\n- * The facility that a disconnected <code>RowSet<\/code> object calls on\n+ * The facility that a disconnected {@code RowSet} object calls on\n@@ -33,4 +33,4 @@\n- * <code>RowSetReader<\/code> interface) may be registered with\n- * a <code>RowSet<\/code> object that supports the reader\/writer paradigm.\n- * When the <code>RowSet<\/code> object's <code>execute<\/code> method is\n- * called, it in turn calls the reader's <code>readData<\/code> method.\n+ * {@code RowSetReader} interface) may be registered with\n+ * a {@code RowSet} object that supports the reader\/writer paradigm.\n+ * When the {@code RowSet} object's {@code execute} method is\n+ * called, it in turn calls the reader's {@code readData} method.\n@@ -44,6 +44,6 @@\n-   * Reads the new contents of the calling <code>RowSet<\/code> object.\n-   * In order to call this method, a <code>RowSet<\/code>\n-   * object must have implemented the <code>RowSetInternal<\/code> interface\n-   * and registered this <code>RowSetReader<\/code> object as its reader.\n-   * The <code>readData<\/code>  method is invoked internally\n-   * by the <code>RowSet.execute<\/code> method for rowsets that support the\n+   * Reads the new contents of the calling {@code RowSet} object.\n+   * In order to call this method, a {@code RowSet}\n+   * object must have implemented the {@code RowSetInternal} interface\n+   * and registered this {@code RowSetReader} object as its reader.\n+   * The {@code readData}  method is invoked internally\n+   * by the {@code RowSet.execute} method for rowsets that support the\n@@ -52,1 +52,1 @@\n-   * <P>The <code>readData<\/code> method adds rows to the caller.\n+   * <P>The {@code readData} method adds rows to the caller.\n@@ -56,6 +56,6 @@\n-   * with one exception. Calling the method <code>execute<\/code> will\n-   * cause an <code>SQLException<\/code> to be thrown\n-   * because <code>execute<\/code> may not be called recursively.  Also,\n-   * when a reader invokes <code>RowSet<\/code> methods, no listeners\n-   * are notified; that is, no <code>RowSetEvent<\/code> objects are\n-   * generated and no <code>RowSetListener<\/code> methods are invoked.\n+   * with one exception. Calling the method {@code execute} will\n+   * cause an {@code SQLException} to be thrown\n+   * because {@code execute} may not be called recursively.  Also,\n+   * when a reader invokes {@code RowSet} methods, no listeners\n+   * are notified; that is, no {@code RowSetEvent} objects are\n+   * generated and no {@code RowSetListener} methods are invoked.\n@@ -63,1 +63,1 @@\n-   * <code>execute<\/code>.\n+   * {@code execute}.\n@@ -65,3 +65,3 @@\n-   * @param caller the <code>RowSet<\/code> object (1) that has implemented the\n-   *         <code>RowSetInternal<\/code> interface, (2) with which this reader is\n-   *        registered, and (3) whose <code>execute<\/code> method called this reader\n+   * @param caller the {@code RowSet} object (1) that has implemented the\n+   *         {@code RowSetInternal} interface, (2) with which this reader is\n+   *        registered, and (3) whose {@code execute} method called this reader\n","filename":"src\/java.sql\/share\/classes\/javax\/sql\/RowSetReader.java","additions":22,"deletions":22,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -31,2 +31,2 @@\n- * An object that implements the <code>RowSetWriter<\/code> interface,\n- * called a <i>writer<\/i>. A writer may be registered with a <code>RowSet<\/code>\n+ * An object that implements the {@code RowSetWriter} interface,\n+ * called a <i>writer<\/i>. A writer may be registered with a {@code RowSet}\n@@ -35,1 +35,1 @@\n- * If a disconnected <code>RowSet<\/code> object modifies some of its data,\n+ * If a disconnected {@code RowSet} object modifies some of its data,\n@@ -37,1 +37,1 @@\n- * calls on the writer's <code>writeData<\/code> method internally\n+ * calls on the writer's {@code writeData} method internally\n@@ -52,1 +52,1 @@\n-   * Writes the changes in this <code>RowSetWriter<\/code> object's\n+   * Writes the changes in this {@code RowSetWriter} object's\n@@ -55,2 +55,2 @@\n-   * @param caller the <code>RowSet<\/code> object (1) that has implemented the\n-   *         <code>RowSetInternal<\/code> interface, (2) with which this writer is\n+   * @param caller the {@code RowSet} object (1) that has implemented the\n+   *         {@code RowSetInternal} interface, (2) with which this writer is\n@@ -58,1 +58,1 @@\n-   * @return <code>true<\/code> if the modified data was written; <code>false<\/code>\n+   * @return {@code true} if the modified data was written; {@code false}\n","filename":"src\/java.sql\/share\/classes\/javax\/sql\/RowSetWriter.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -36,3 +36,3 @@\n- * A <code>StatementEvent<\/code> is sent to all <code>StatementEventListener<\/code>s which were\n- * registered with a <code>PooledConnection<\/code>. This occurs when the driver determines that a\n- * <code>PreparedStatement<\/code> that is associated with the <code>PooledConnection<\/code> has been closed or the driver determines\n+ * A {@code StatementEvent} is sent to all {@code StatementEventListener}s which were\n+ * registered with a {@code PooledConnection}. This occurs when the driver determines that a\n+ * {@code PreparedStatement} that is associated with the {@code PooledConnection} has been closed or the driver determines\n@@ -58,2 +58,2 @@\n-         * Constructs a <code>StatementEvent<\/code> with the specified <code>PooledConnection<\/code> and\n-         * <code>PreparedStatement<\/code>.  The <code>SQLException<\/code> contained in the event defaults to\n+         * Constructs a {@code StatementEvent} with the specified {@code PooledConnection} and\n+         * {@code PreparedStatement}.  The {@code SQLException} contained in the event defaults to\n@@ -62,3 +62,3 @@\n-         * @param con                   The <code>PooledConnection<\/code> that the closed or invalid\n-         * <code>PreparedStatement<\/code>is associated with.\n-         * @param statement             The <code>PreparedStatement<\/code> that is being closed or is invalid\n+         * @param con                   The {@code PooledConnection} that the closed or invalid\n+         * {@code PreparedStatement}is associated with.\n+         * @param statement             The {@code PreparedStatement} that is being closed or is invalid\n@@ -66,1 +66,1 @@\n-         * @throws IllegalArgumentException if <code>con<\/code> is null.\n+         * @throws IllegalArgumentException if {@code con} is null.\n@@ -80,2 +80,2 @@\n-         * Constructs a <code>StatementEvent<\/code> with the specified <code>PooledConnection<\/code>,\n-         * <code>PreparedStatement<\/code> and <code>SQLException<\/code>\n+         * Constructs a {@code StatementEvent} with the specified {@code PooledConnection},\n+         * {@code PreparedStatement} and {@code SQLException}\n@@ -83,1 +83,1 @@\n-         * @param con                   The <code>PooledConnection<\/code> that the closed or invalid <code>PreparedStatement<\/code>\n+         * @param con                   The {@code PooledConnection} that the closed or invalid {@code PreparedStatement}\n@@ -85,2 +85,2 @@\n-         * @param statement             The <code>PreparedStatement<\/code> that is being closed or is invalid\n-         * @param exception             The <code>SQLException <\/code>the driver is about to throw to\n+         * @param statement             The {@code PreparedStatement} that is being closed or is invalid\n+         * @param exception             The {@code SQLException }the driver is about to throw to\n@@ -89,1 +89,1 @@\n-         * @throws IllegalArgumentException if <code>con<\/code> is null.\n+         * @throws IllegalArgumentException if {@code con} is null.\n@@ -104,1 +104,1 @@\n-         * Returns the <code>PreparedStatement<\/code> that is being closed or is invalid\n+         * Returns the {@code PreparedStatement} that is being closed or is invalid\n@@ -106,1 +106,1 @@\n-         * @return      The <code>PreparedStatement<\/code> that is being closed or is invalid\n+         * @return      The {@code PreparedStatement} that is being closed or is invalid\n@@ -116,1 +116,1 @@\n-         * Returns the <code>SQLException<\/code> the driver is about to throw\n+         * Returns the {@code SQLException} the driver is about to throw\n@@ -118,1 +118,1 @@\n-         * @return      The <code>SQLException<\/code> the driver is about to throw\n+         * @return      The {@code SQLException} the driver is about to throw\n","filename":"src\/java.sql\/share\/classes\/javax\/sql\/StatementEvent.java","additions":19,"deletions":19,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,2 +36,2 @@\n- * <code>ConnectionPooledDataSource<\/code> property to provide a standard mechanism for\n- * enabling the pooling of <code>PreparedStatements<\/code>\n+ * {@code ConnectionPooledDataSource} property to provide a standard mechanism for\n+ * enabling the pooling of {@code PreparedStatements}\n@@ -40,1 +40,1 @@\n- * statement pool when a <code>PreparedStatement<\/code> becomes invalid.  For some databases, a\n+ * statement pool when a {@code PreparedStatement} becomes invalid.  For some databases, a\n@@ -47,2 +47,2 @@\n- * Similar to the methods defined in the <code>ConnectionEventListener<\/code> interface,\n- * the driver will call the <code>StatementEventListener.statementErrorOccurred<\/code>\n+ * Similar to the methods defined in the {@code ConnectionEventListener} interface,\n+ * the driver will call the {@code StatementEventListener.statementErrorOccurred}\n@@ -50,2 +50,2 @@\n- * The driver will also call the <code>StatementEventListener.statementClosed<\/code>\n- * method when a <code>PreparedStatement<\/code> is closed.\n+ * The driver will also call the {@code StatementEventListener.statementClosed}\n+ * method when a {@code PreparedStatement} is closed.\n@@ -54,1 +54,1 @@\n- * <code>PooledConnection<\/code> have been added to the <code>PooledConnection<\/code> interface.\n+ * {@code PooledConnection} have been added to the {@code PooledConnection} interface.\n@@ -60,2 +60,2 @@\n-   * The driver calls this method on all <code>StatementEventListener<\/code>s registered on the connection when it detects that a\n-   * <code>PreparedStatement<\/code> is closed.\n+   * The driver calls this method on all {@code StatementEventListener}s registered on the connection when it detects that a\n+   * {@code PreparedStatement} is closed.\n@@ -64,1 +64,1 @@\n-   * the event and that the <code>PreparedStatement<\/code> was closed.\n+   * the event and that the {@code PreparedStatement} was closed.\n@@ -70,1 +70,1 @@\n-         * The driver calls this method on all <code>StatementEventListener<\/code>s\n+         * The driver calls this method on all {@code StatementEventListener}s\n@@ -72,2 +72,2 @@\n-         * <code>PreparedStatement<\/code> is invalid. The driver calls this method\n-         * just before it throws the <code>SQLException<\/code>,\n+         * {@code PreparedStatement} is invalid. The driver calls this method\n+         * just before it throws the {@code SQLException},\n@@ -79,1 +79,1 @@\n-         *                 the <code>PooledConnection<\/code> which the invalid <code>PreparedStatement<\/code>\n+         *                 the {@code PooledConnection} which the invalid {@code PreparedStatement}\n","filename":"src\/java.sql\/share\/classes\/javax\/sql\/StatementEventListener.java","additions":16,"deletions":16,"binary":false,"changes":32,"status":"modified"}]}