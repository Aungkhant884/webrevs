{"files":[{"patch":"@@ -1586,0 +1586,4 @@\n+            \/\/ Currently, an InapplicableMethodException occurs.\n+            \/\/ If bestSoFar.kind was ABSENT_MTH, return an InapplicableSymbolError(kind is WRONG_MTH).\n+            \/\/ If bestSoFar.kind was HIDDEN(AccessError)\/WRONG_MTH\/WRONG_MTHS, return an InapplicableSymbolsError(kind is WRONG_MTHS).\n+            \/\/ See JDK-8255968 for more information.\n@@ -1589,0 +1593,10 @@\n+                case HIDDEN:\n+                    if (bestSoFar instanceof AccessError) {\n+                        \/\/ Add the JCDiagnostic of previous AccessError to the currentResolutionContext\n+                        \/\/ and construct InapplicableSymbolsError.\n+                        \/\/ Intentionally fallthrough.\n+                        currentResolutionContext.addInapplicableCandidate(((AccessError) bestSoFar).sym,\n+                                ((AccessError) bestSoFar).getDiagnostic(JCDiagnostic.DiagnosticType.FRAGMENT, null, null, site, null, argtypes, typeargtypes));\n+                    } else {\n+                        return bestSoFar;\n+                    }\n@@ -1596,3 +1610,25 @@\n-            return (bestSoFar.kind == ABSENT_MTH)\n-                ? new AccessError(env, site, sym)\n-                : bestSoFar;\n+            AccessError curAccessError = new AccessError(env, site, sym);\n+            JCDiagnostic curDiagnostic = curAccessError.getDiagnostic(JCDiagnostic.DiagnosticType.FRAGMENT, null, null, site, null, argtypes, typeargtypes);\n+            \/\/ Currently, an AccessError occurs.\n+            \/\/ If bestSoFar.kind was ABSENT_MTH, return an AccessError(kind is HIDDEN).\n+            \/\/ If bestSoFar.kind was HIDDEN(AccessError), WRONG_MTH, WRONG_MTHS, return an InapplicableSymbolsError(kind is WRONG_MTHS).\n+            \/\/ See JDK-8255968 for more information.\n+            if (bestSoFar.kind == ABSENT_MTH) {\n+                bestSoFar = curAccessError;\n+            } else if (bestSoFar.kind == WRONG_MTH) {\n+                \/\/ Add the JCDiagnostic of current AccessError to the currentResolutionContext\n+                \/\/ and construct InapplicableSymbolsError.\n+                currentResolutionContext.addInapplicableCandidate(sym, curDiagnostic);\n+                bestSoFar = new InapplicableSymbolsError(currentResolutionContext);\n+            } else if (bestSoFar.kind == WRONG_MTHS) {\n+                \/\/ Add the JCDiagnostic of current AccessError to the currentResolutionContext\n+                currentResolutionContext.addInapplicableCandidate(sym, curDiagnostic);\n+            } else if (bestSoFar.kind == HIDDEN && bestSoFar instanceof AccessError) {\n+                \/\/ Add the JCDiagnostics of previous and current AccessError to the currentResolutionContext\n+                \/\/ and construct InapplicableSymbolsError.\n+                currentResolutionContext.addInapplicableCandidate(((AccessError) bestSoFar).sym,\n+                        ((AccessError) bestSoFar).getDiagnostic(JCDiagnostic.DiagnosticType.FRAGMENT, null, null, site, null, argtypes, typeargtypes));\n+                currentResolutionContext.addInapplicableCandidate(sym, curDiagnostic);\n+                bestSoFar = new InapplicableSymbolsError(currentResolutionContext);\n+            }\n+            return bestSoFar;\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Resolve.java","additions":39,"deletions":3,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -0,0 +1,37 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8255968\n+ * @summary Confusing error message for inaccessible constructor\n+ * @run compile\/fail\/ref=T8255968_1.out -XDrawDiagnostics T8255968_1.java\n+ *\/\n+\n+class T8255968_1 {\n+    T8255968_1_Test c = new T8255968_1_Test(0);\n+}\n+\n+class T8255968_1_Test {\n+    private T8255968_1_Test(int x) {}\n+}\n","filename":"test\/langtools\/tools\/javac\/T8255968\/T8255968_1.java","additions":37,"deletions":0,"binary":false,"changes":37,"status":"added"},{"patch":"@@ -0,0 +1,2 @@\n+T8255968_1.java:32:25: compiler.err.report.access: T8255968_1_Test(int), private, T8255968_1_Test\n+1 error\n","filename":"test\/langtools\/tools\/javac\/T8255968\/T8255968_1.out","additions":2,"deletions":0,"binary":false,"changes":2,"status":"added"},{"patch":"@@ -0,0 +1,41 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8255968\n+ * @summary Confusing error message for inaccessible constructor\n+ * @run compile\/fail\/ref=T8255968_10.out -XDrawDiagnostics T8255968_10.java\n+ *\/\n+\n+class T8255968_10 {\n+    T8255968_10_TestMethodReference c = T8255968_10_Test::new;\n+}\n+\n+interface T8255968_10_TestMethodReference {\n+    T8255968_10_Test create(int x);\n+}\n+\n+class T8255968_10_Test {\n+    private T8255968_10_Test(int x) {}\n+}\n","filename":"test\/langtools\/tools\/javac\/T8255968\/T8255968_10.java","additions":41,"deletions":0,"binary":false,"changes":41,"status":"added"},{"patch":"@@ -0,0 +1,2 @@\n+T8255968_10.java:32:41: compiler.err.prob.found.req: (compiler.misc.invalid.mref: kindname.constructor, (compiler.misc.report.access: T8255968_10_Test(int), private, T8255968_10_Test))\n+1 error\n","filename":"test\/langtools\/tools\/javac\/T8255968\/T8255968_10.out","additions":2,"deletions":0,"binary":false,"changes":2,"status":"added"},{"patch":"@@ -0,0 +1,41 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8255968\n+ * @summary Confusing error message for inaccessible constructor\n+ * @run compile\/fail\/ref=T8255968_11.out -XDrawDiagnostics T8255968_11.java\n+ *\/\n+\n+class T8255968_11 {\n+    T8255968_11_TestMethodReference c = T8255968_11_Test::new;\n+}\n+\n+interface T8255968_11_TestMethodReference {\n+    T8255968_11_Test create(int x);\n+}\n+\n+class T8255968_11_Test {\n+    T8255968_11_Test(String x) {}  \/\/ If this method is private, compiler will output the same error message.\n+}\n","filename":"test\/langtools\/tools\/javac\/T8255968\/T8255968_11.java","additions":41,"deletions":0,"binary":false,"changes":41,"status":"added"},{"patch":"@@ -0,0 +1,2 @@\n+T8255968_11.java:32:41: compiler.err.prob.found.req: (compiler.misc.invalid.mref: kindname.constructor, (compiler.misc.cant.apply.symbol: kindname.constructor, T8255968_11_Test, java.lang.String, int, kindname.class, T8255968_11_Test, (compiler.misc.no.conforming.assignment.exists: (compiler.misc.inconvertible.types: int, java.lang.String))))\n+1 error\n","filename":"test\/langtools\/tools\/javac\/T8255968\/T8255968_11.out","additions":2,"deletions":0,"binary":false,"changes":2,"status":"added"},{"patch":"@@ -0,0 +1,42 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8255968\n+ * @summary Confusing error message for inaccessible constructor\n+ * @run compile\/fail\/ref=T8255968_12.out -XDrawDiagnostics T8255968_12.java\n+ *\/\n+\n+class T8255968_12 {\n+    T8255968_12_TestMethodReference c = T8255968_12_Test::new;\n+}\n+\n+interface T8255968_12_TestMethodReference {\n+    T8255968_12_Test create(int x);\n+}\n+\n+class T8255968_12_Test {\n+    private T8255968_12_Test(int x) {}  \/\/ This method is not at the end.\n+    T8255968_12_Test(String x) {}  \/\/ If this method is private, compiler will output the same error message.\n+}\n","filename":"test\/langtools\/tools\/javac\/T8255968\/T8255968_12.java","additions":42,"deletions":0,"binary":false,"changes":42,"status":"added"},{"patch":"@@ -0,0 +1,2 @@\n+T8255968_12.java:32:41: compiler.err.prob.found.req: (compiler.misc.invalid.mref: kindname.constructor, (compiler.misc.cant.apply.symbols: kindname.constructor, T8255968_12_Test, int,{(compiler.misc.inapplicable.method: kindname.constructor, T8255968_12_Test, T8255968_12_Test(int), (compiler.misc.report.access: T8255968_12_Test(int), private, T8255968_12_Test)),(compiler.misc.inapplicable.method: kindname.constructor, T8255968_12_Test, T8255968_12_Test(java.lang.String), (compiler.misc.no.conforming.assignment.exists: (compiler.misc.inconvertible.types: int, java.lang.String)))}))\n+1 error\n","filename":"test\/langtools\/tools\/javac\/T8255968\/T8255968_12.out","additions":2,"deletions":0,"binary":false,"changes":2,"status":"added"},{"patch":"@@ -0,0 +1,42 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8255968\n+ * @summary Confusing error message for inaccessible constructor\n+ * @run compile\/fail\/ref=T8255968_13.out -XDrawDiagnostics T8255968_13.java\n+ *\/\n+\n+class T8255968_13 {\n+    T8255968_13_TestMethodReference c = T8255968_13_Test::new;\n+}\n+\n+interface T8255968_13_TestMethodReference {\n+    T8255968_13_Test create(int x);\n+}\n+\n+class T8255968_13_Test {\n+    T8255968_13_Test(String x) {}  \/\/ If this method is private, compiler will output the same error message.\n+    private T8255968_13_Test(int x) {}  \/\/ This method is at the end.\n+}\n","filename":"test\/langtools\/tools\/javac\/T8255968\/T8255968_13.java","additions":42,"deletions":0,"binary":false,"changes":42,"status":"added"},{"patch":"@@ -0,0 +1,2 @@\n+T8255968_13.java:32:41: compiler.err.prob.found.req: (compiler.misc.invalid.mref: kindname.constructor, (compiler.misc.cant.apply.symbols: kindname.constructor, T8255968_13_Test, int,{(compiler.misc.inapplicable.method: kindname.constructor, T8255968_13_Test, T8255968_13_Test(int), (compiler.misc.report.access: T8255968_13_Test(int), private, T8255968_13_Test)),(compiler.misc.inapplicable.method: kindname.constructor, T8255968_13_Test, T8255968_13_Test(java.lang.String), (compiler.misc.no.conforming.assignment.exists: (compiler.misc.inconvertible.types: int, java.lang.String)))}))\n+1 error\n","filename":"test\/langtools\/tools\/javac\/T8255968\/T8255968_13.out","additions":2,"deletions":0,"binary":false,"changes":2,"status":"added"},{"patch":"@@ -0,0 +1,43 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8255968\n+ * @summary Confusing error message for inaccessible constructor\n+ * @run compile\/fail\/ref=T8255968_14.out -XDrawDiagnostics T8255968_14.java\n+ *\/\n+\n+class T8255968_14 {\n+    T8255968_14_TestMethodReference c = T8255968_14_Test::new;\n+}\n+\n+interface T8255968_14_TestMethodReference {\n+    T8255968_14_Test create(int x);\n+}\n+\n+class T8255968_14_Test {\n+    private T8255968_14_Test(int x) {}  \/\/ This method is not at the end.\n+    T8255968_14_Test(String x) {}  \/\/ If this method is private, compiler will output the same error message.\n+    private T8255968_14_Test(int[] x) {}\n+}\n","filename":"test\/langtools\/tools\/javac\/T8255968\/T8255968_14.java","additions":43,"deletions":0,"binary":false,"changes":43,"status":"added"},{"patch":"@@ -0,0 +1,2 @@\n+T8255968_14.java:32:41: compiler.err.prob.found.req: (compiler.misc.invalid.mref: kindname.constructor, (compiler.misc.cant.apply.symbols: kindname.constructor, T8255968_14_Test, int,{(compiler.misc.inapplicable.method: kindname.constructor, T8255968_14_Test, T8255968_14_Test(int), (compiler.misc.report.access: T8255968_14_Test(int), private, T8255968_14_Test)),(compiler.misc.inapplicable.method: kindname.constructor, T8255968_14_Test, T8255968_14_Test(java.lang.String), (compiler.misc.no.conforming.assignment.exists: (compiler.misc.inconvertible.types: int, java.lang.String))),(compiler.misc.inapplicable.method: kindname.constructor, T8255968_14_Test, T8255968_14_Test(int[]), (compiler.misc.no.conforming.assignment.exists: (compiler.misc.inconvertible.types: int, int[])))}))\n+1 error\n","filename":"test\/langtools\/tools\/javac\/T8255968\/T8255968_14.out","additions":2,"deletions":0,"binary":false,"changes":2,"status":"added"},{"patch":"@@ -0,0 +1,43 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8255968\n+ * @summary Confusing error message for inaccessible constructor\n+ * @run compile\/fail\/ref=T8255968_15.out -XDrawDiagnostics T8255968_15.java\n+ *\/\n+\n+class T8255968_15 {\n+    T8255968_15_TestMethodReference c = T8255968_15_Test::new;\n+}\n+\n+interface T8255968_15_TestMethodReference {\n+    T8255968_15_Test create(int x);\n+}\n+\n+class T8255968_15_Test {\n+    T8255968_15_Test(String x) {}  \/\/ If this method is private, compiler will output the same error message.\n+    private T8255968_15_Test(int x) {}  \/\/ This method is not at the end.\n+    private T8255968_15_Test(int[] x) {}\n+}\n","filename":"test\/langtools\/tools\/javac\/T8255968\/T8255968_15.java","additions":43,"deletions":0,"binary":false,"changes":43,"status":"added"},{"patch":"@@ -0,0 +1,2 @@\n+T8255968_15.java:32:41: compiler.err.prob.found.req: (compiler.misc.invalid.mref: kindname.constructor, (compiler.misc.cant.apply.symbols: kindname.constructor, T8255968_15_Test, int,{(compiler.misc.inapplicable.method: kindname.constructor, T8255968_15_Test, T8255968_15_Test(java.lang.String), (compiler.misc.no.conforming.assignment.exists: (compiler.misc.inconvertible.types: int, java.lang.String))),(compiler.misc.inapplicable.method: kindname.constructor, T8255968_15_Test, T8255968_15_Test(int), (compiler.misc.report.access: T8255968_15_Test(int), private, T8255968_15_Test)),(compiler.misc.inapplicable.method: kindname.constructor, T8255968_15_Test, T8255968_15_Test(int[]), (compiler.misc.no.conforming.assignment.exists: (compiler.misc.inconvertible.types: int, int[])))}))\n+1 error\n","filename":"test\/langtools\/tools\/javac\/T8255968\/T8255968_15.out","additions":2,"deletions":0,"binary":false,"changes":2,"status":"added"},{"patch":"@@ -0,0 +1,43 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8255968\n+ * @summary Confusing error message for inaccessible constructor\n+ * @run compile\/fail\/ref=T8255968_16.out -XDrawDiagnostics T8255968_16.java\n+ *\/\n+\n+class T8255968_16 {\n+    T8255968_16_TestMethodReference c = T8255968_16_Test::new;\n+}\n+\n+interface T8255968_16_TestMethodReference {\n+    T8255968_16_Test create(int x);\n+}\n+\n+class T8255968_16_Test {\n+    T8255968_16_Test(String x) {}  \/\/ If this method is private, compiler will output the same error message.\n+    private T8255968_16_Test(int[] x) {}\n+    private T8255968_16_Test(int x) {}  \/\/ This method is at the end.\n+}\n","filename":"test\/langtools\/tools\/javac\/T8255968\/T8255968_16.java","additions":43,"deletions":0,"binary":false,"changes":43,"status":"added"},{"patch":"@@ -0,0 +1,2 @@\n+T8255968_16.java:32:41: compiler.err.prob.found.req: (compiler.misc.invalid.mref: kindname.constructor, (compiler.misc.cant.apply.symbols: kindname.constructor, T8255968_16_Test, int,{(compiler.misc.inapplicable.method: kindname.constructor, T8255968_16_Test, T8255968_16_Test(java.lang.String), (compiler.misc.no.conforming.assignment.exists: (compiler.misc.inconvertible.types: int, java.lang.String))),(compiler.misc.inapplicable.method: kindname.constructor, T8255968_16_Test, T8255968_16_Test(int), (compiler.misc.report.access: T8255968_16_Test(int), private, T8255968_16_Test)),(compiler.misc.inapplicable.method: kindname.constructor, T8255968_16_Test, T8255968_16_Test(int[]), (compiler.misc.no.conforming.assignment.exists: (compiler.misc.inconvertible.types: int, int[])))}))\n+1 error\n","filename":"test\/langtools\/tools\/javac\/T8255968\/T8255968_16.out","additions":2,"deletions":0,"binary":false,"changes":2,"status":"added"},{"patch":"@@ -0,0 +1,37 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8255968\n+ * @summary Confusing error message for inaccessible constructor\n+ * @run compile\/fail\/ref=T8255968_2.out -XDrawDiagnostics T8255968_2.java\n+ *\/\n+\n+class T8255968_2 {\n+    T8255968_2_Test c = new T8255968_2_Test(0);\n+}\n+\n+class T8255968_2_Test {\n+    T8255968_2_Test(String x) {}  \/\/ If this method is private, compiler will output the same error message.\n+}\n","filename":"test\/langtools\/tools\/javac\/T8255968\/T8255968_2.java","additions":37,"deletions":0,"binary":false,"changes":37,"status":"added"},{"patch":"@@ -0,0 +1,2 @@\n+T8255968_2.java:32:25: compiler.err.cant.apply.symbol: kindname.constructor, T8255968_2_Test, java.lang.String, int, kindname.class, T8255968_2_Test, (compiler.misc.no.conforming.assignment.exists: (compiler.misc.inconvertible.types: int, java.lang.String))\n+1 error\n","filename":"test\/langtools\/tools\/javac\/T8255968\/T8255968_2.out","additions":2,"deletions":0,"binary":false,"changes":2,"status":"added"},{"patch":"@@ -0,0 +1,38 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8255968\n+ * @summary Confusing error message for inaccessible constructor\n+ * @run compile\/fail\/ref=T8255968_3.out -XDrawDiagnostics T8255968_3.java\n+ *\/\n+\n+class T8255968_3 {\n+    T8255968_3_Test c = new T8255968_3_Test(0);\n+}\n+\n+class T8255968_3_Test {\n+    private T8255968_3_Test(int x) {}  \/\/ This method is not at the end.\n+    T8255968_3_Test(String x) {}  \/\/ If this method is private, compiler will output the same error message.\n+}\n","filename":"test\/langtools\/tools\/javac\/T8255968\/T8255968_3.java","additions":38,"deletions":0,"binary":false,"changes":38,"status":"added"},{"patch":"@@ -0,0 +1,2 @@\n+T8255968_3.java:32:25: compiler.err.cant.apply.symbols: kindname.constructor, T8255968_3_Test, int,{(compiler.misc.inapplicable.method: kindname.constructor, T8255968_3_Test, T8255968_3_Test(int), (compiler.misc.report.access: T8255968_3_Test(int), private, T8255968_3_Test)),(compiler.misc.inapplicable.method: kindname.constructor, T8255968_3_Test, T8255968_3_Test(java.lang.String), (compiler.misc.no.conforming.assignment.exists: (compiler.misc.inconvertible.types: int, java.lang.String)))}\n+1 error\n","filename":"test\/langtools\/tools\/javac\/T8255968\/T8255968_3.out","additions":2,"deletions":0,"binary":false,"changes":2,"status":"added"},{"patch":"@@ -0,0 +1,38 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8255968\n+ * @summary Confusing error message for inaccessible constructor\n+ * @run compile\/fail\/ref=T8255968_4.out -XDrawDiagnostics T8255968_4.java\n+ *\/\n+\n+class T8255968_4 {\n+    T8255968_4_Test c = new T8255968_4_Test(0);\n+}\n+\n+class T8255968_4_Test {\n+    T8255968_4_Test(String x) {}  \/\/ If this method is private, compiler will output the same error message.\n+    private T8255968_4_Test(int x) {}  \/\/ This method is at the end.\n+}\n","filename":"test\/langtools\/tools\/javac\/T8255968\/T8255968_4.java","additions":38,"deletions":0,"binary":false,"changes":38,"status":"added"},{"patch":"@@ -0,0 +1,2 @@\n+T8255968_4.java:32:25: compiler.err.cant.apply.symbols: kindname.constructor, T8255968_4_Test, int,{(compiler.misc.inapplicable.method: kindname.constructor, T8255968_4_Test, T8255968_4_Test(int), (compiler.misc.report.access: T8255968_4_Test(int), private, T8255968_4_Test)),(compiler.misc.inapplicable.method: kindname.constructor, T8255968_4_Test, T8255968_4_Test(java.lang.String), (compiler.misc.no.conforming.assignment.exists: (compiler.misc.inconvertible.types: int, java.lang.String)))}\n+1 error\n","filename":"test\/langtools\/tools\/javac\/T8255968\/T8255968_4.out","additions":2,"deletions":0,"binary":false,"changes":2,"status":"added"},{"patch":"@@ -0,0 +1,39 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8255968\n+ * @summary Confusing error message for inaccessible constructor\n+ * @run compile\/fail\/ref=T8255968_5.out -XDrawDiagnostics T8255968_5.java\n+ *\/\n+\n+class T8255968_5 {\n+    T8255968_5_Test c = new T8255968_5_Test(0);\n+}\n+\n+class T8255968_5_Test {\n+    private T8255968_5_Test(int x) {}  \/\/ This method is not at the end.\n+    T8255968_5_Test(String x) {}  \/\/ If this method is private, compiler will output the same error message.\n+    private T8255968_5_Test(int[] x) {}\n+}\n","filename":"test\/langtools\/tools\/javac\/T8255968\/T8255968_5.java","additions":39,"deletions":0,"binary":false,"changes":39,"status":"added"},{"patch":"@@ -0,0 +1,2 @@\n+T8255968_5.java:32:25: compiler.err.cant.apply.symbols: kindname.constructor, T8255968_5_Test, int,{(compiler.misc.inapplicable.method: kindname.constructor, T8255968_5_Test, T8255968_5_Test(int), (compiler.misc.report.access: T8255968_5_Test(int), private, T8255968_5_Test)),(compiler.misc.inapplicable.method: kindname.constructor, T8255968_5_Test, T8255968_5_Test(java.lang.String), (compiler.misc.no.conforming.assignment.exists: (compiler.misc.inconvertible.types: int, java.lang.String))),(compiler.misc.inapplicable.method: kindname.constructor, T8255968_5_Test, T8255968_5_Test(int[]), (compiler.misc.no.conforming.assignment.exists: (compiler.misc.inconvertible.types: int, int[])))}\n+1 error\n","filename":"test\/langtools\/tools\/javac\/T8255968\/T8255968_5.out","additions":2,"deletions":0,"binary":false,"changes":2,"status":"added"},{"patch":"@@ -0,0 +1,39 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8255968\n+ * @summary Confusing error message for inaccessible constructor\n+ * @run compile\/fail\/ref=T8255968_6.out -XDrawDiagnostics T8255968_6.java\n+ *\/\n+\n+class T8255968_6 {\n+    T8255968_6_Test c = new T8255968_6_Test(0);\n+}\n+\n+class T8255968_6_Test {\n+    T8255968_6_Test(String x) {}  \/\/ If this method is private, compiler will output the same error message.\n+    private T8255968_6_Test(int x) {}  \/\/ This method is not at the end.\n+    private T8255968_6_Test(int[] x) {}\n+}\n","filename":"test\/langtools\/tools\/javac\/T8255968\/T8255968_6.java","additions":39,"deletions":0,"binary":false,"changes":39,"status":"added"},{"patch":"@@ -0,0 +1,2 @@\n+T8255968_6.java:32:25: compiler.err.cant.apply.symbols: kindname.constructor, T8255968_6_Test, int,{(compiler.misc.inapplicable.method: kindname.constructor, T8255968_6_Test, T8255968_6_Test(java.lang.String), (compiler.misc.no.conforming.assignment.exists: (compiler.misc.inconvertible.types: int, java.lang.String))),(compiler.misc.inapplicable.method: kindname.constructor, T8255968_6_Test, T8255968_6_Test(int), (compiler.misc.report.access: T8255968_6_Test(int), private, T8255968_6_Test)),(compiler.misc.inapplicable.method: kindname.constructor, T8255968_6_Test, T8255968_6_Test(int[]), (compiler.misc.no.conforming.assignment.exists: (compiler.misc.inconvertible.types: int, int[])))}\n+1 error\n","filename":"test\/langtools\/tools\/javac\/T8255968\/T8255968_6.out","additions":2,"deletions":0,"binary":false,"changes":2,"status":"added"},{"patch":"@@ -0,0 +1,39 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8255968\n+ * @summary Confusing error message for inaccessible constructor\n+ * @run compile\/fail\/ref=T8255968_7.out -XDrawDiagnostics T8255968_7.java\n+ *\/\n+\n+class T8255968_7 {\n+    T8255968_7_Test c = new T8255968_7_Test(0);\n+}\n+\n+class T8255968_7_Test {\n+    T8255968_7_Test(String x) {}  \/\/ If this method is private, compiler will output the same error message.\n+    private T8255968_7_Test(int[] x) {}\n+    private T8255968_7_Test(int x) {}  \/\/ This method is at the end.\n+}\n","filename":"test\/langtools\/tools\/javac\/T8255968\/T8255968_7.java","additions":39,"deletions":0,"binary":false,"changes":39,"status":"added"},{"patch":"@@ -0,0 +1,2 @@\n+T8255968_7.java:32:25: compiler.err.cant.apply.symbols: kindname.constructor, T8255968_7_Test, int,{(compiler.misc.inapplicable.method: kindname.constructor, T8255968_7_Test, T8255968_7_Test(java.lang.String), (compiler.misc.no.conforming.assignment.exists: (compiler.misc.inconvertible.types: int, java.lang.String))),(compiler.misc.inapplicable.method: kindname.constructor, T8255968_7_Test, T8255968_7_Test(int), (compiler.misc.report.access: T8255968_7_Test(int), private, T8255968_7_Test)),(compiler.misc.inapplicable.method: kindname.constructor, T8255968_7_Test, T8255968_7_Test(int[]), (compiler.misc.no.conforming.assignment.exists: (compiler.misc.inconvertible.types: int, int[])))}\n+1 error\n","filename":"test\/langtools\/tools\/javac\/T8255968\/T8255968_7.out","additions":2,"deletions":0,"binary":false,"changes":2,"status":"added"},{"patch":"@@ -0,0 +1,45 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8255968\n+ * @summary Confusing error message for inaccessible constructor\n+ * @run compile -XDrawDiagnostics T8255968_8.java\n+ *\/\n+\n+class T8255968_8_Outer {\n+    void m() {}\n+    void m(String s) {}\n+\n+    class T8255968_8_Inner extends T8255968_8_Sup {\n+        void test() {\n+            m();\n+        }\n+    }\n+}\n+\n+class T8255968_8_Sup {\n+    private void m(String s) {}\n+    private void m() {}\n+}\n","filename":"test\/langtools\/tools\/javac\/T8255968\/T8255968_8.java","additions":45,"deletions":0,"binary":false,"changes":45,"status":"added"},{"patch":"@@ -0,0 +1,41 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8255968\n+ * @summary Confusing error message for inaccessible constructor\n+ * @run compile -XDrawDiagnostics T8255968_9.java\n+ *\/\n+\n+class T8255968_9 {\n+    T8255968_9_TestMethodReference c = T8255968_9_Test::new;\n+}\n+\n+interface T8255968_9_TestMethodReference {\n+    T8255968_9_Test create(int x);\n+}\n+\n+class T8255968_9_Test {\n+    T8255968_9_Test(int x) {}\n+}\n","filename":"test\/langtools\/tools\/javac\/T8255968\/T8255968_9.java","additions":41,"deletions":0,"binary":false,"changes":41,"status":"added"}]}