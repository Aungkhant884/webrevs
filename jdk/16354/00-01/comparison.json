{"files":[{"patch":"@@ -1577,0 +1577,4 @@\n+  Node* index    = argument(11);\n+  Node* indexMap = argument(12);\n+  Node* indexM   = argument(13);\n+\n@@ -1598,2 +1602,2 @@\n-        Node* index_arr_base = array_element_address(argument(12), argument(13), T_INT);\n-        vload = gvn().transform(new LoadVectorGatherMaskedNode(control(), memory(addr), addr, addr_type, vector_type, index_arr_base, mask, argument(11)));\n+        Node* index_arr_base = array_element_address(indexMap, indexM, T_INT);\n+        vload = gvn().transform(new LoadVectorGatherMaskedNode(control(), memory(addr), addr, addr_type, vector_type, index_arr_base, mask, index));\n@@ -1605,2 +1609,2 @@\n-        Node* index_arr_base = array_element_address(argument(12), argument(13), T_INT);\n-        vload = gvn().transform(new LoadVectorGatherNode(control(), memory(addr), addr, addr_type, vector_type, index_arr_base, argument(11)));\n+        Node* index_arr_base = array_element_address(indexMap, indexM, T_INT);\n+        vload = gvn().transform(new LoadVectorGatherNode(control(), memory(addr), addr, addr_type, vector_type, index_arr_base, index));\n","filename":"src\/hotspot\/share\/opto\/vectorIntrinsics.cpp","additions":8,"deletions":4,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -1000,1 +1000,1 @@\n-    if (is_subword_type(vect_type()->is_vect()->element_basic_type())) {\n+    if (is_subword_type(vt->element_basic_type())) {\n","filename":"src\/hotspot\/share\/opto\/vectornode.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}