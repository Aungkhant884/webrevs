{"files":[{"patch":"@@ -25,0 +25,1 @@\n+import static java.util.Collections.emptyMap;\n@@ -50,1 +51,0 @@\n-        EnumSet<CPUFeature> features = EnumSet.noneOf(CPUFeature.class);\n@@ -52,2 +52,1 @@\n-        HotSpotJVMCIBackendFactory.convertFeatures(features, constants, config.vmVersionFeatures, CPUFeature::valueOf);\n-        return features;\n+        return HotSpotJVMCIBackendFactory.convertFeatures(CPUFeature.class, constants, config.vmVersionFeatures, emptyMap());\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk.vm.ci.hotspot.aarch64\/src\/jdk\/vm\/ci\/hotspot\/aarch64\/AArch64HotSpotJVMCIBackendFactory.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-import java.util.function.Function;\n@@ -51,1 +50,2 @@\n-        EnumSet<CPUFeature> features = EnumSet.noneOf(CPUFeature.class);\n+        Map<String, Long> constants = config.getStore().getConstants();\n+        Map<String, String> renaming = Map.of(\"3DNOW_PREFETCH\", \"AMD_3DNOW_PREFETCH\");\n@@ -53,0 +53,1 @@\n+        EnumSet<CPUFeature> features = HotSpotJVMCIBackendFactory.convertFeatures(CPUFeature.class, constants, config.vmVersionFeatures, renaming);\n@@ -55,4 +56,0 @@\n-\n-        Map<String, Long> constants = config.getStore().getConstants();\n-        Function<String, CPUFeature> nameToFeature = name -> name.equals(\"3DNOW_PREFETCH\") ? CPUFeature.AMD_3DNOW_PREFETCH : CPUFeature.valueOf(name);\n-        HotSpotJVMCIBackendFactory.convertFeatures(features, constants, config.vmVersionFeatures, nameToFeature);\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk.vm.ci.hotspot.amd64\/src\/jdk\/vm\/ci\/hotspot\/amd64\/AMD64HotSpotJVMCIBackendFactory.java","additions":3,"deletions":6,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-import java.util.function.Function;\n@@ -48,1 +47,1 @@\n-     * @param outFeatures the set to which the converted values are added\n+     * @param enumType the class of {@code CPUFeatureType}\n@@ -53,2 +52,1 @@\n-     * @param nameToFeature maps a feature name to a feature enum constant or throws\n-     *            {@link IllegalArgumentException}\n+     * @param renaming maps from VM feature names to enum constant names where the two differ\n@@ -57,0 +55,1 @@\n+     * @return the set of converted values\n@@ -58,2 +57,2 @@\n-    static <CPUFeatureType extends Enum<CPUFeatureType>> void convertFeatures(\n-                    EnumSet<CPUFeatureType> outFeatures,\n+    static <CPUFeatureType extends Enum<CPUFeatureType>> EnumSet<CPUFeatureType> convertFeatures(\n+                    Class<CPUFeatureType> enumType,\n@@ -62,2 +61,2 @@\n-                    Function<String, CPUFeatureType> nameToFeature) {\n-\n+                    Map<String, String> renaming) {\n+        EnumSet<CPUFeatureType> outFeatures = EnumSet.noneOf(enumType);\n@@ -71,1 +70,1 @@\n-                    CPUFeatureType feature = nameToFeature.apply(name);\n+                    CPUFeatureType feature = Enum.valueOf(enumType, renaming.getOrDefault(name, name));\n@@ -83,0 +82,1 @@\n+        return outFeatures;\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk.vm.ci.hotspot\/src\/jdk\/vm\/ci\/hotspot\/HotSpotJVMCIBackendFactory.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"}]}