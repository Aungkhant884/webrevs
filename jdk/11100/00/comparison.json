{"files":[{"patch":"@@ -3338,1 +3338,1 @@\n-      StubRoutines::_dtan = generate_libmTan();\n+      StubRoutines::_dtan = generate_libmTan(); \/\/ from stubGenerator_x86_64_tan.cpp\n@@ -3341,1 +3341,1 @@\n-      StubRoutines::_dexp = generate_libmExp();\n+      StubRoutines::_dexp = generate_libmExp(); \/\/ from stubGenerator_x86_64_exp.cpp\n@@ -3344,1 +3344,1 @@\n-      StubRoutines::_dpow = generate_libmPow();\n+      StubRoutines::_dpow = generate_libmPow(); \/\/ from stubGenerator_x86_64_pow.cpp\n@@ -3347,1 +3347,1 @@\n-      StubRoutines::_dlog = generate_libmLog();\n+      StubRoutines::_dlog = generate_libmLog(); \/\/ from stubGenerator_x86_64_log.cpp\n@@ -3350,1 +3350,1 @@\n-      StubRoutines::_dlog10 = generate_libmLog10();\n+      StubRoutines::_dlog10 = generate_libmLog10(); \/\/ from stubGenerator_x86_64_log.cpp\n@@ -3722,0 +3722,2 @@\n+\n+  generate_libm_stubs();\n","filename":"src\/hotspot\/cpu\/x86\/stubGenerator_x86_64.cpp","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -1791,1 +1791,0 @@\n-#define FN_PTR(f) CAST_FROM_FN_PTR(address, f)\n@@ -1793,1 +1792,0 @@\n-    \/\/ These intrinsics are not properly supported on all hardware\n@@ -1797,1 +1795,1 @@\n-      runtime_math(OptoRuntime::Math_D_D_Type(), FN_PTR(SharedRuntime::dsin),   \"SIN\");\n+      runtime_math(OptoRuntime::Math_D_D_Type(), CAST_FROM_FN_PTR(address, SharedRuntime::dsin),   \"SIN\");\n@@ -1801,1 +1799,1 @@\n-      runtime_math(OptoRuntime::Math_D_D_Type(), FN_PTR(SharedRuntime::dcos),   \"COS\");\n+      runtime_math(OptoRuntime::Math_D_D_Type(), CAST_FROM_FN_PTR(address, SharedRuntime::dcos),   \"COS\");\n@@ -1805,1 +1803,5 @@\n-      runtime_math(OptoRuntime::Math_D_D_Type(), FN_PTR(SharedRuntime::dtan), \"TAN\");\n+      runtime_math(OptoRuntime::Math_D_D_Type(), CAST_FROM_FN_PTR(address, SharedRuntime::dtan), \"TAN\");\n+  case vmIntrinsics::_dexp:\n+    return StubRoutines::dexp() != NULL ?\n+      runtime_math(OptoRuntime::Math_D_D_Type(), StubRoutines::dexp(),  \"dexp\") :\n+      runtime_math(OptoRuntime::Math_D_D_Type(), CAST_FROM_FN_PTR(address, SharedRuntime::dexp),  \"EXP\");\n@@ -1809,1 +1811,1 @@\n-      runtime_math(OptoRuntime::Math_D_D_Type(), FN_PTR(SharedRuntime::dlog),   \"LOG\");\n+      runtime_math(OptoRuntime::Math_D_D_Type(), CAST_FROM_FN_PTR(address, SharedRuntime::dlog),   \"LOG\");\n@@ -1813,1 +1815,1 @@\n-      runtime_math(OptoRuntime::Math_D_D_Type(), FN_PTR(SharedRuntime::dlog10), \"LOG10\");\n+      runtime_math(OptoRuntime::Math_D_D_Type(), CAST_FROM_FN_PTR(address, SharedRuntime::dlog10), \"LOG10\");\n@@ -1815,1 +1817,0 @@\n-    \/\/ These intrinsics are supported on all hardware\n@@ -1829,6 +1830,0 @@\n-  case vmIntrinsics::_dexp:\n-    return StubRoutines::dexp() != NULL ?\n-      runtime_math(OptoRuntime::Math_D_D_Type(), StubRoutines::dexp(),  \"dexp\") :\n-      runtime_math(OptoRuntime::Math_D_D_Type(), FN_PTR(SharedRuntime::dexp),  \"EXP\");\n-#undef FN_PTR\n-\n","filename":"src\/hotspot\/share\/opto\/library_call.cpp","additions":9,"deletions":14,"binary":false,"changes":23,"status":"modified"}]}