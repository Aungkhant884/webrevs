{"files":[{"patch":"@@ -454,5 +454,6 @@\n-                return switch(m) {\n-                case 0, 1 ->  y;              \/\/ atan(+\/-0, +anything)  = +\/-0\n-                case 2    ->  Math.PI + tiny; \/\/ atan(+0,   -anything)  =  pi\n-                default   -> -Math.PI - tiny; \/\/ atan(-0,   -anything)  = -pi\n-                };\n+                switch(m) {\n+                case 0:\n+                case 1: return y;               \/\/ atan(+\/-0, +anything)  = +\/-0\n+                case 2: return  Math.PI + tiny; \/\/ atan(+0,   -anything)  =  pi\n+                case 3: return -Math.PI - tiny; \/\/ atan(-0,   -anything)  = -pi\n+                }\n@@ -468,6 +469,6 @@\n-                    return switch(m) {\n-                    case 0  ->  pi_o_4 + tiny;      \/\/ atan(+INF, +INF)\n-                    case 1  -> -pi_o_4 - tiny;      \/\/ atan(-INF, +INF)\n-                    case 2  ->  3.0*pi_o_4 + tiny;  \/\/ atan(+INF, -INF)\n-                    default -> -3.0*pi_o_4 - tiny;  \/\/ atan(-INF, -INF)\n-                    };\n+                    switch(m) {\n+                    case 0: return  pi_o_4 + tiny;      \/\/ atan(+INF, +INF)\n+                    case 1: return -pi_o_4 - tiny;      \/\/ atan(-INF, +INF)\n+                    case 2: return  3.0*pi_o_4 + tiny;  \/\/ atan(+INF, -INF)\n+                    case 3: return -3.0*pi_o_4 - tiny;  \/\/ atan(-INF, -INF)\n+                    }\n@@ -475,6 +476,6 @@\n-                    return switch(m) {\n-                    case 0  ->  0.0;                \/\/ atan(+..., +INF)\n-                    case 1  -> -0.0;                \/\/ atan(-..., +INF)\n-                    case 2  ->  Math.PI + tiny;     \/\/ atan(+..., -INF)\n-                    default -> -Math.PI - tiny;     \/\/ atan(-..., -INF)\n-                    };\n+                    switch(m) {\n+                    case 0: return  0.0;                \/\/ atan(+..., +INF)\n+                    case 1: return -0.0;                \/\/ atan(-..., +INF)\n+                    case 2: return  Math.PI + tiny;     \/\/ atan(+..., -INF)\n+                    case 3: return -Math.PI - tiny;     \/\/ atan(-..., -INF)\n+                    }\n@@ -497,6 +498,6 @@\n-            return switch (m) {\n-            case 0  ->  z;                    \/\/ atan(+, +)\n-            case 1  -> -z;                    \/\/ atan(-, +)\n-            case 2  -> Math.PI - (z - pi_lo); \/\/ atan(+, -)\n-            default -> (z - pi_lo) - Math.PI; \/\/ atan(-, -), case 3\n-            };\n+            switch (m) {\n+            case 0:  return  z;                     \/\/ atan(+, +)\n+            case 1:  return -z;                     \/\/ atan(-, +)\n+            case 2:  return  Math.PI - (z - pi_lo); \/\/ atan(+, -)\n+            default: return (z - pi_lo) - Math.PI;  \/\/ atan(-, -), case 3\n+            }\n","filename":"src\/java.base\/share\/classes\/java\/lang\/FdLibm.java","additions":24,"deletions":23,"binary":false,"changes":47,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -203,0 +203,7 @@\n+            \/\/ Note: in terms of computation, the result of the double\n+            \/\/ expression\n+            \/\/   3*PI\/4.0\n+            \/\/ is the same as a high-precision decimal value of pi\n+            \/\/ scaled accordingly and rounded to double:\n+            \/\/   BigDecimal bdPi = new BigDecimal(\"3.14159265358979323846264338327950288419716939937510\");\n+            \/\/   bdPi.multiply(BigDecimal.valueOf(3)).divide(BigDecimal.valueOf(4)).doubleValue();\n","filename":"test\/jdk\/java\/lang\/Math\/Atan2Tests.java","additions":8,"deletions":1,"binary":false,"changes":9,"status":"modified"}]}