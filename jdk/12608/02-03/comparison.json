{"files":[{"patch":"@@ -57,18 +57,7 @@\n-        double [][] testCases = {\n-            \/*\n-             * If either argument is NaN, then the result is NaN.\n-             *\/\n-            {NaNd,      0.0,       NaNd},\n-            {0.0,       NaNd,      NaNd},\n-            {NaNd,      InfinityD, NaNd},\n-            {InfinityD, NaNd,      NaNd},\n-\n-            \/\/ Test exotic NaN bit patterns\n-            {Double.longBitsToDouble(0x7FF0_0000_0000_0001L), 0.0, NaNd},\n-            {0.0, Double.longBitsToDouble(0x7FF0_0000_0000_0001L), NaNd},\n-            {Double.longBitsToDouble(0xFFF_00000_0000_0001L), 0.0, NaNd},\n-            {0.0, Double.longBitsToDouble(0xFFF0_0000_0000_0001L), NaNd},\n-            {Double.longBitsToDouble(0x7FF_00000_7FFF_FFFFL), 0.0, NaNd},\n-            {0.0, Double.longBitsToDouble(0x7FF0_7FFF_0000_FFFFL), NaNd},\n-            {Double.longBitsToDouble(0xFFF_00000_7FFF_FFFFL), 0.0, NaNd},\n-            {0.0, Double.longBitsToDouble(0xFFF0_7FFF_0000_FFFFL), NaNd},\n+        \/*\n+         * If either argument is NaN, then the result is NaN.\n+         *\/\n+        for(double nan : Tests.NaNs) {\n+            failures += testAtan2Case(nan, 0.0, NaNd);\n+            failures += testAtan2Case(0.0, nan, NaNd);\n+        }\n@@ -76,0 +65,1 @@\n+        double [][] testCases = {\n","filename":"test\/jdk\/java\/lang\/Math\/Atan2Tests.java","additions":8,"deletions":18,"binary":false,"changes":26,"status":"modified"}]}