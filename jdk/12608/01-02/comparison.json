{"files":[{"patch":"@@ -446,2 +446,1 @@\n-            if (((ix | ((lx | -lx) >> 31)) > 0x7ff0_0000)||\n-                ((iy |((ly | - ly) >> 31)) > 0x7ff0_0000))    \/\/ x or y is NaN\n+            if (Double.isNaN(x) || Double.isNaN(y))\n","filename":"src\/java.base\/share\/classes\/java\/lang\/FdLibm.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -66,0 +66,10 @@\n+            \/\/ Test exotic NaN bit patterns\n+            {Double.longBitsToDouble(0x7FF0_0000_0000_0001L), 0.0, NaNd},\n+            {0.0, Double.longBitsToDouble(0x7FF0_0000_0000_0001L), NaNd},\n+            {Double.longBitsToDouble(0xFFF_00000_0000_0001L), 0.0, NaNd},\n+            {0.0, Double.longBitsToDouble(0xFFF0_0000_0000_0001L), NaNd},\n+            {Double.longBitsToDouble(0x7FF_00000_7FFF_FFFFL), 0.0, NaNd},\n+            {0.0, Double.longBitsToDouble(0x7FF0_7FFF_0000_FFFFL), NaNd},\n+            {Double.longBitsToDouble(0xFFF_00000_7FFF_FFFFL), 0.0, NaNd},\n+            {0.0, Double.longBitsToDouble(0xFFF0_7FFF_0000_FFFFL), NaNd},\n+\n","filename":"test\/jdk\/java\/lang\/Math\/Atan2Tests.java","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -83,0 +83,17 @@\n+        \/\/ Test exotic NaN bit patterns\n+        double[][] exoticNaNs = {\n+            {Double.longBitsToDouble(0x7FF0_0000_0000_0001L), 0.0},\n+            {0.0, Double.longBitsToDouble(0x7FF0_0000_0000_0001L)},\n+            {Double.longBitsToDouble(0xFFF_00000_0000_0001L), 0.0},\n+            {0.0, Double.longBitsToDouble(0xFFF0_0000_0000_0001L)},\n+            {Double.longBitsToDouble(0x7FF_00000_7FFF_FFFFL), 0.0},\n+            {0.0, Double.longBitsToDouble(0x7FF0_7FFF_0000_FFFFL)},\n+            {Double.longBitsToDouble(0xFFF_00000_7FFF_FFFFL), 0.0},\n+            {0.0, Double.longBitsToDouble(0xFFF0_7FFF_0000_FFFFL)},\n+        };\n+\n+        for (double[] exoticNaN: exoticNaNs) {\n+            failures += testAtan2Case(exoticNaN[0], exoticNaN[1],\n+                                      FdlibmTranslit.atan2(exoticNaN[0], exoticNaN[1]));\n+        }\n+\n","filename":"test\/jdk\/java\/lang\/StrictMath\/Atan2Tests.java","additions":17,"deletions":0,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -450,2 +450,2 @@\n-            if(((ix|((lx|-lx)>>31))>0x7ff00000)||\n-               ((iy|((ly|-ly)>>31))>0x7ff00000))    \/* x or y is NaN *\/\n+            if(((ix|((lx|-lx)>>>31))>0x7ff00000)|| \/\/ Note unsigned shifts\n+               ((iy|((ly|-ly)>>>31))>0x7ff00000))    \/* x or y is NaN *\/\n","filename":"test\/jdk\/java\/lang\/StrictMath\/FdlibmTranslit.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}