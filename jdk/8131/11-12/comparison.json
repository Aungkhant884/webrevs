{"files":[{"patch":"@@ -1154,2 +1154,4 @@\n-     * Generates an exponentially-distributed value with a \"soft\" maximum value. When the exponential distribution would\n-     * produce a value larger than {@code maxValue}, returns either {@code maxValue} or that value.\n+     * Generates a pseudorandom value {@code x} such that {@code Math.min(x, maxValue)} follows the same distribution\n+     * as it would if {@code x} was exponentially distributed with mean 1, but with a worst-case number of calls to\n+     * {@link RandomGenerator#nextLong()} that's linear with {@code maxValue}.\n+     * @param rng the random generator whose nextLong method will be used\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/util\/random\/RandomSupport.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"}]}