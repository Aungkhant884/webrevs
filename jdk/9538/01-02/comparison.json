{"files":[{"patch":"@@ -44,1 +44,0 @@\n-import java.util.stream.Stream;\n@@ -118,1 +117,1 @@\n-        try (Stream<String> stream = reader.list()){\n+        try {\n@@ -120,1 +119,1 @@\n-            stream.sorted().forEach(rn -> {\n+            reader.list().sorted().forEach(rn -> {\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/module\/ModuleHashes.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-import java.util.stream.Stream;\n@@ -83,3 +82,2 @@\n-        try (ModuleReader reader = mref.open();\n-             Stream<String> stream = reader.list()) {\n-            stream.forEach(name -> {\n+        try (ModuleReader reader = mref.open()) {\n+            reader.list().forEach(name -> {\n","filename":"test\/jdk\/java\/lang\/ClassLoader\/getResource\/automaticmodules\/Main.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -409,3 +409,2 @@\n-        try (ModuleReader reader = mref.open();\n-             Stream<String> stream = reader.list()) {\n-            return stream\n+        try (ModuleReader reader = mref.open()) {\n+            return reader.list()\n","filename":"test\/jdk\/java\/lang\/invoke\/callerSensitive\/CallerSensitiveAccess.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -57,1 +57,0 @@\n-import java.util.stream.Stream;\n@@ -417,4 +416,1 @@\n-        final List<String> list;\n-        try (Stream<String> stream = reader.list()) {\n-            list = stream.toList();\n-        }\n+        List<String> list = reader.list().collect(Collectors.toList());\n","filename":"test\/jdk\/java\/lang\/module\/ModuleReader\/ModuleReaderTest.java","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -47,1 +47,0 @@\n-import java.util.stream.Stream;\n@@ -112,3 +111,2 @@\n-            try (ModuleReader reader = mref.open();\n-                 Stream<String> stream = reader.list()) {\n-                stream.forEach(name -> System.out.format(\"  %s%n\", name));\n+            try (ModuleReader reader = mref.open()) {\n+                reader.list().forEach(name -> System.out.format(\"  %s%n\", name));\n","filename":"test\/jdk\/java\/lang\/module\/customfs\/ModulesInCustomFileSystem.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"}]}