{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -119,0 +119,1 @@\n+import java.util.Hashtable;\n@@ -358,0 +359,1 @@\n+                            resetScreenInsetsCache();\n@@ -361,0 +363,5 @@\n+                    } else {\n+                        final XAtom XA_NET_WORKAREA = XAtom.get(\"_NET_WORKAREA\");\n+                        final boolean rootWindowWorkareaResized = (ev.get_type() == XConstants.PropertyNotify\n+                                && ev.get_xproperty().get_atom() == XA_NET_WORKAREA.getAtom());\n+                        if (rootWindowWorkareaResized) resetScreenInsetsCache();\n@@ -846,2 +853,1 @@\n-    @Override\n-    public Insets getScreenInsets(final GraphicsConfiguration gc) {\n+    private Insets getScreenInsetsImpl(final GraphicsConfiguration gc) {\n@@ -875,0 +881,10 @@\n+    private final Hashtable<GraphicsConfiguration, Insets> cachedInsets = new Hashtable<>();\n+    private void resetScreenInsetsCache() {\n+        cachedInsets.clear();\n+    }\n+\n+    @Override\n+    public Insets getScreenInsets(final GraphicsConfiguration gc) {\n+        return (Insets)cachedInsets.computeIfAbsent(gc, this::getScreenInsetsImpl).clone();\n+    }\n+\n","filename":"src\/java.desktop\/unix\/classes\/sun\/awt\/X11\/XToolkit.java","additions":19,"deletions":3,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -121,1 +121,1 @@\n-    public Rectangle getBounds() {\n+    private Rectangle getBoundsImpl() {\n@@ -132,0 +132,21 @@\n+    private volatile Rectangle boundsCached;\n+\n+    private Rectangle getBoundsCached() {\n+        final Rectangle localBoundsCached = boundsCached;\n+        if (localBoundsCached == null) {\n+            final Rectangle newBounds = getBoundsImpl();\n+            boundsCached = newBounds;\n+            return newBounds;\n+        } else {\n+            return localBoundsCached;\n+        }\n+    }\n+\n+    public void resetBoundsCache() {\n+        boundsCached = null;\n+    }\n+\n+    public Rectangle getBounds() {\n+        return new Rectangle(getBoundsCached());\n+    }\n+\n@@ -583,0 +604,1 @@\n+        resetBoundsCache();\n","filename":"src\/java.desktop\/unix\/classes\/sun\/awt\/X11GraphicsDevice.java","additions":24,"deletions":2,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -261,0 +261,3 @@\n+        for (final X11GraphicsDevice gd : devices.values()) {\n+            gd.resetBoundsCache();\n+        }\n","filename":"src\/java.desktop\/unix\/classes\/sun\/awt\/X11GraphicsEnvironment.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"}]}