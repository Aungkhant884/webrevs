{"files":[{"patch":"@@ -1491,1 +1491,0 @@\n-            if (isStatic(env1)) staticOnly = true;\n@@ -1495,0 +1494,3 @@\n+                    if (staticOnly) {\n+                        return new StaticError(sym);\n+                    }\n@@ -1498,0 +1500,1 @@\n+            if (isStatic(env1)) staticOnly = true;\n@@ -2326,3 +2329,5 @@\n-                    !isInnerClassOfMethod(sym.owner, originalEnv.tree.hasTag(CLASSDEF) ?\n-                            ((JCClassDecl)originalEnv.tree).sym :\n-                            originalEnv.enclClass.sym)))) {\n+                        (!isInnerClassOfMethod(sym.owner, originalEnv.tree.hasTag(CLASSDEF) ?\n+                        ((JCClassDecl)originalEnv.tree).sym :\n+                        originalEnv.enclClass.sym) ||\n+                        originalEnv.info.staticLevel > currentEnv.info.staticLevel)\n+                    ))) {\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Resolve.java","additions":9,"deletions":4,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -749,0 +749,5 @@\n+                record R() {\n+                    void test(U u) {}\n+                }\n+                \"\"\",\n+                \"\"\"\n@@ -755,0 +760,7 @@\n+                \"\"\"\n+                record R() {\n+                    void test1() {\n+                        class X { void test2(U u) {} }\n+                    }\n+                }\n+                \"\"\",\n@@ -804,0 +816,5 @@\n+                interface I {\n+                    default void test(U u) {}\n+                }\n+                \"\"\",\n+                \"\"\"\n@@ -810,0 +827,7 @@\n+                \"\"\"\n+                interface I {\n+                    default void test1() {\n+                        class X { void test2(U u) {} }\n+                    }\n+                }\n+                \"\"\",\n@@ -866,0 +890,6 @@\n+                enum E {\n+                    A;\n+                    void test(U u) {}\n+                }\n+                \"\"\",\n+                \"\"\"\n@@ -873,0 +903,8 @@\n+                \"\"\"\n+                enum E {\n+                    A;\n+                    void test1() {\n+                        class X { void test2(U u) {} }\n+                    }\n+                }\n+                \"\"\",\n@@ -922,0 +960,5 @@\n+                static class SC {\n+                    void test(U u) {}\n+                }\n+                \"\"\",\n+                \"\"\"\n@@ -927,0 +970,7 @@\n+                \"\"\",\n+                \"\"\"\n+                static class SC {\n+                    void test1() {\n+                        class X { void test2(U u) {} }\n+                    }\n+                }\n@@ -968,0 +1018,24 @@\n+\n+        \/\/ but still non-static declarations can't be accessed from a static method inside a local class\n+        for (String s : List.of(\n+                \"System.out.println(localVar)\",\n+                \"System.out.println(param)\",\n+                \"System.out.println(field)\",\n+                \"T t\",\n+                \"U u\"\n+        )) {\n+            assertFail(\"compiler.err.non-static.cant.be.ref\",\n+                    \"\"\"\n+                    class C<T> {\n+                        int field = 0;\n+                        <U> void foo(int param) {\n+                            int localVar = 1;\n+                            class Local {\n+                                static void m() {\n+                                    #S;\n+                                }\n+                            }\n+                        }\n+                    }\n+                    \"\"\".replaceFirst(\"#S\", s));\n+        }\n","filename":"test\/langtools\/tools\/javac\/records\/RecordCompilationTests.java","additions":74,"deletions":0,"binary":false,"changes":74,"status":"modified"}]}