{"files":[{"patch":"@@ -136,0 +136,4 @@\n+     * The type {@code java.lang.Object} has no direct supertype\n+     * ({@jls 8.1.4}) so an empty list is returned for the direct\n+     * supertypes of a type mirror representing {@code\n+     * java.lang.Object}.\n","filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/util\/Types.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -0,0 +1,55 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8296287\n+ * @summary Test Types methods on module and package TypeMirrors\n+ * @library \/tools\/javac\/lib\n+ * @build   JavacTestingAbstractProcessor TestDirectSupertypeObject\n+ * @compile -processor TestDirectSupertypeObject -proc:only TestDirectSupertypeObject.java\n+ *\/\n+\n+import java.util.*;\n+import javax.annotation.processing.*;\n+import javax.lang.model.element.TypeElement;\n+import javax.lang.model.type.TypeMirror;\n+import javax.lang.model.util.Types;\n+import static java.util.Objects.*;\n+\n+\/**\n+ * Verify java.lang.Object has an empty list of direct supertypes.\n+ *\/\n+public class TestDirectSupertypeObject extends JavacTestingAbstractProcessor {\n+    public boolean process(Set<? extends TypeElement> annotations,\n+                           RoundEnvironment roundEnv) {\n+        if (!roundEnv.processingOver()) {\n+            TypeMirror objectType  = requireNonNull(eltUtils.getTypeElement(\"java.lang.Object\")).asType();\n+            var ojectSupertypes = typeUtils.directSupertypes(objectType);\n+            if (!ojectSupertypes.isEmpty()) {\n+                messager.printError(\"Direct supertypes: \" + ojectSupertypes);\n+            }\n+        }\n+        return true;\n+    }\n+}\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/util\/types\/TestDirectSupertypeObject.java","additions":55,"deletions":0,"binary":false,"changes":55,"status":"added"}]}