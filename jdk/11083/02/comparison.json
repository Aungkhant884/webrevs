{"files":[{"patch":"@@ -280,1 +280,0 @@\n-            saveGlobalRef(env, localAgentProperties, &(gdata->agent_properties));\n@@ -286,0 +285,1 @@\n+            saveGlobalRef(env, localAgentProperties, &(gdata->agent_properties));\n","filename":"src\/jdk.jdwp.agent\/share\/native\/libjdwp\/util.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,64 @@\n+\/*\n+ * Copyright (c) 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.io.File;\n+import java.io.IOException;\n+\n+\/**\n+ * @test\n+ * @bug 8187442\n+ * @summary Launching app shouldn't produce any jni warnings.\n+ * @modules jdk.compiler\n+ *          jdk.zipfs\n+ * @compile TestXcheckJdwpJNIWarnings.java\n+ * @run main TestXcheckJdwpJNIWarnings\n+ *\/\n+public final class TestXcheckJdwpJNIWarnings extends TestHelper {\n+\n+    static void createJarFile(File testJar) throws IOException {\n+        StringBuilder tsrc = new StringBuilder();\n+        tsrc.append(\"public static void main(String... args) {\\n\");\n+        tsrc.append(\"    System.out.println(\\\"Hello World\\\");\\n\");\n+        tsrc.append(\"}\\n\");\n+        createJar(testJar, new File(\"Foo\"), tsrc.toString());\n+    }\n+\n+    public static void main(String... args) throws IOException {\n+        File testJarFile = new File(\"test.jar\");\n+        createJarFile(testJarFile);\n+        TestResult tr = doExec(javaCmd, \"-jar\", \"-Xcheck:jni\", \"-agentlib:jdwp=transport=dt_socket,server=y,suspend=n\",\n+                               testJarFile.getName());\n+        if (!tr.isOK()) {\n+            System.out.println(tr);\n+            throw new RuntimeException(\"test returned non-positive value\");\n+        }\n+        if (!tr.contains(\"Hello World\")) {\n+            System.out.println(tr);\n+            throw new RuntimeException(\"expected output not found\");\n+        }\n+        if (tr.contains(\"WARNING\")) {\n+            System.out.println(tr);\n+            throw new RuntimeException(\"WARNING was found in the output\");\n+        }\n+    }\n+}\n","filename":"test\/jdk\/tools\/launcher\/TestXcheckJdwpJNIWarnings.java","additions":64,"deletions":0,"binary":false,"changes":64,"status":"added"}]}