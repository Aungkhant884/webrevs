{"files":[{"patch":"@@ -57,0 +57,8 @@\n+    void checkEncoding(byte[] a, int pos, int nlen) throws ZipException {\n+        try {\n+            toString(a, pos, nlen);\n+        } catch(Exception e) {\n+            throw new ZipException(\"invalid CEN header (bad entry name)\");\n+        }\n+    }\n+\n@@ -206,0 +214,19 @@\n+        @Override\n+        void checkEncoding(byte[] a, int pos, int len) throws ZipException {\n+            try {\n+                int end = pos + len;\n+                while (pos < end) {\n+                    \/\/ ASCII fast-path: When checking that a range of bytes is\n+                    \/\/ valid UTF-8, we can avoid some allocation by skipping\n+                    \/\/ past bytes in the 0-127 range\n+                    if (a[pos] < 0) {\n+                        ZipCoder.toStringUTF8(a, pos, end - pos);\n+                        break;\n+                    }\n+                    pos++;\n+                }\n+            } catch(Exception e) {\n+                throw new ZipException(\"invalid CEN header (bad entry name)\");\n+            }\n+        }\n+\n","filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipCoder.java","additions":27,"deletions":0,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -1312,25 +1312,0 @@\n-        private static final void checkUTF8(byte[] a, int pos, int len) throws ZipException {\n-            try {\n-                int end = pos + len;\n-                while (pos < end) {\n-                    \/\/ ASCII fast-path: When checking that a range of bytes is\n-                    \/\/ valid UTF-8, we can avoid some allocation by skipping\n-                    \/\/ past bytes in the 0-127 range\n-                    if (a[pos] < 0) {\n-                        ZipCoder.toStringUTF8(a, pos, end - pos);\n-                        break;\n-                    }\n-                    pos++;\n-                }\n-            } catch(Exception e) {\n-                zerror(\"invalid CEN header (bad entry name)\");\n-            }\n-        }\n-\n-        private final void checkEncoding(ZipCoder zc, byte[] a, int pos, int nlen) throws ZipException {\n-            try {\n-                zc.toString(a, pos, nlen);\n-            } catch(Exception e) {\n-                zerror(\"invalid CEN header (bad entry name)\");\n-            }\n-        }\n@@ -1523,5 +1498,2 @@\n-                if (zc.isUTF8() || (flag & USE_UTF8) != 0) {\n-                    checkUTF8(cen, pos + CENHDR, nlen);\n-                } else {\n-                    checkEncoding(zc, cen, pos + CENHDR, nlen);\n-                }\n+                ZipCoder zcp = zipCoderForPos(pos);\n+                zcp.checkEncoding(cen, pos + CENHDR, nlen);\n@@ -1529,1 +1501,1 @@\n-                hash = zipCoderForPos(pos).normalizedHash(cen, entryPos, nlen);\n+                hash = zcp.normalizedHash(cen, entryPos, nlen);\n","filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipFile.java","additions":3,"deletions":31,"binary":false,"changes":34,"status":"modified"}]}