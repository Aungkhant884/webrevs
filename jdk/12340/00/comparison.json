{"files":[{"patch":"@@ -32,1 +32,1 @@\n-  vmassert(_anchor.last_Java_pc() != NULL, \"not walkable\");\n+  vmassert(_anchor.last_Java_pc() != nullptr, \"not walkable\");\n@@ -64,1 +64,1 @@\n-    if (ret_frame.pc() == NULL || ret_frame.sp() == NULL ) {\n+    if (ret_frame.pc() == nullptr || ret_frame.sp() == nullptr ) {\n@@ -71,2 +71,2 @@\n-      \/\/ C2 and JVMCI use ebp as a general register see if NULL fp helps\n-      frame ret_frame2(ret_frame.sp(), NULL, ret_frame.pc());\n+      \/\/ C2 and JVMCI use ebp as a general register see if null fp helps\n+      frame ret_frame2(ret_frame.sp(), nullptr, ret_frame.pc());\n","filename":"src\/hotspot\/os_cpu\/windows_aarch64\/javaThread_windows_aarch64.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -82,1 +82,1 @@\n-  if (uc != NULL) {\n+  if (uc != nullptr) {\n@@ -88,3 +88,3 @@\n-    epc = NULL;\n-    if (ret_sp) *ret_sp = (intptr_t *)NULL;\n-    if (ret_fp) *ret_fp = (intptr_t *)NULL;\n+    epc = nullptr;\n+    if (ret_sp) *ret_sp = (intptr_t *)nullptr;\n+    if (ret_fp) *ret_fp = (intptr_t *)nullptr;\n@@ -120,1 +120,1 @@\n-    if (cb == NULL || !cb->is_nmethod() || cb->is_frame_complete_at(pc)) {\n+    if (cb == nullptr || !cb->is_nmethod() || cb->is_frame_complete_at(pc)) {\n@@ -164,1 +164,1 @@\n-  if (context == NULL) return;\n+  if (context == nullptr) return;\n@@ -210,1 +210,1 @@\n-  if (context == NULL) return;\n+  if (context == nullptr) return;\n@@ -228,1 +228,1 @@\n- if (context == NULL) return;\n+ if (context == nullptr) return;\n","filename":"src\/hotspot\/os_cpu\/windows_aarch64\/os_windows_aarch64.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -56,1 +56,1 @@\n-    PSYSTEM_LOGICAL_PROCESSOR_INFORMATION buffer = NULL;\n+    PSYSTEM_LOGICAL_PROCESSOR_INFORMATION buffer = nullptr;\n@@ -60,1 +60,1 @@\n-    GetLogicalProcessorInformation(NULL, &returnLength);\n+    GetLogicalProcessorInformation(nullptr, &returnLength);\n@@ -84,1 +84,1 @@\n-    if (buf && strstr(buf, \"Ampere(TM)\") != NULL) {\n+    if (buf && strstr(buf, \"Ampere(TM)\") != nullptr) {\n@@ -86,1 +86,1 @@\n-    } else if (buf && strstr(buf, \"Cavium Inc.\") != NULL) {\n+    } else if (buf && strstr(buf, \"Cavium Inc.\") != nullptr) {\n@@ -103,1 +103,1 @@\n-  assert(buf != NULL, \"invalid argument\");\n+  assert(buf != nullptr, \"invalid argument\");\n","filename":"src\/hotspot\/os_cpu\/windows_aarch64\/vm_version_windows_aarch64.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"}]}