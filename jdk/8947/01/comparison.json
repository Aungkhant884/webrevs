{"files":[{"patch":"@@ -2302,1 +2302,1 @@\n-  int nb = 0;\n+  int loops_with_shared_head = 0;\n@@ -2312,1 +2312,1 @@\n-        nb++;\n+        loops_with_shared_head++;\n@@ -2322,0 +2322,13 @@\n+        if (lp2->head() == lp2->tail()) {\n+          \/\/ For self-loops, clone->head becomes clone->clone\n+          flow_block(clone, temp_vector, temp_set);\n+          for (SuccIter iter(clone); !iter.done(); iter.next()) {\n+            if (iter.succ() == lp2->head()) {\n+              iter.set_succ(clone);\n+              \/\/ Update predecessor information\n+              lp2->head()->predecessors()->remove(clone);\n+              clone->predecessors()->append(clone);\n+              break;\n+            }\n+          }\n+        }\n@@ -2328,1 +2341,1 @@\n-  assert(nb >= 1, \"at least one new\");\n+  assert(loops_with_shared_head >= 1, \"at least one new\");\n@@ -2331,14 +2344,0 @@\n-  if (head == tail) {\n-    assert(nb == 1, \"only when the head is not shared\");\n-    \/\/ For self-loops, clone->head becomes clone->clone\n-    flow_block(clone, temp_vector, temp_set);\n-    for (SuccIter iter(clone); !iter.done(); iter.next()) {\n-      if (iter.succ() == head) {\n-        iter.set_succ(clone);\n-        \/\/ Update predecessor information\n-        head->predecessors()->remove(clone);\n-        clone->predecessors()->append(clone);\n-        break;\n-      }\n-    }\n-  }\n","filename":"src\/hotspot\/share\/ci\/ciTypeFlow.cpp","additions":16,"deletions":17,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -0,0 +1,52 @@\n+\/*\n+ * Copyright (c) 2022, Red Hat, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8286451\n+ * @summary C2: assert(nb == 1) failed: only when the head is not shared\n+ * @run main\/othervm -XX:-BackgroundCompilation TestSharedLoopHead\n+ *\/\n+\n+public class TestSharedLoopHead {\n+    public static void main(String[] args) {\n+        for (int i = 0; i < 20_000; i++) {\n+            test();\n+        }\n+    }\n+\n+    private static void test() {\n+        int j = 0;\n+        int i = 0;\n+        do {\n+            do {\n+                i++;\n+            } while (i < 2);\n+            do {\n+                i++;\n+            } while (i < 2);\n+            j++;\n+            i = 0;\n+        } while (j < 2);\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/ciTypeFlow\/TestSharedLoopHead.java","additions":52,"deletions":0,"binary":false,"changes":52,"status":"added"}]}