{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,1 +39,1 @@\n-int convertUft8ToPlatformString(char* utf8_str, int utf8_len, char* platform_str, int platform_len);\n+int convertUtf8ToPlatformString(char* utf8_str, int utf8_len, char* platform_str, int platform_len);\n","filename":"src\/java.instrument\/share\/native\/libinstrument\/EncodingSupport.h","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -834,1 +834,1 @@\n- * if it's not absolute then we get the canoncial path of the agent jar\n+ * if it's not absolute then we get the canonical path of the agent jar\n@@ -902,1 +902,1 @@\n-            int new_len = convertUft8ToPlatformString(path, len, platform, MAXPATHLEN);\n+            int new_len = convertUtf8ToPlatformString(path, len, platform, MAXPATHLEN);\n","filename":"src\/java.instrument\/share\/native\/libinstrument\/InvocationAdapter.c","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -1486,1 +1486,1 @@\n-            platformLen = convertUft8ToPlatformString((char*)utf8Chars, utf8Len, platformChars, MAXPATHLEN);\n+            platformLen = convertUtf8ToPlatformString((char*)utf8Chars, utf8Len, platformChars, MAXPATHLEN);\n","filename":"src\/java.instrument\/share\/native\/libinstrument\/JPLISAgent.c","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -63,0 +63,1 @@\n+#ifndef MACOSX\n@@ -72,0 +73,4 @@\n+#else \/* MACOSX *\/\n+    \/* On Mac, platform string (i.e., sun.jnu.encoding value) is always UTF-8 *\/\n+    codeset = \"UTF-8\";\n+#endif\n@@ -75,14 +80,0 @@\n-#ifdef MACOSX\n-    \/* On Mac, if US-ASCII, but with no env hints, use UTF-8 *\/\n-    const char* env_lang = getenv(\"LANG\");\n-    const char* env_lc_all = getenv(\"LC_ALL\");\n-    const char* env_lc_ctype = getenv(\"LC_CTYPE\");\n-\n-    if (strcmp(codeset,\"US-ASCII\") == 0 &&\n-        (env_lang == NULL || strlen(env_lang) == 0) &&\n-        (env_lc_all == NULL || strlen(env_lc_all) == 0) &&\n-        (env_lc_ctype == NULL || strlen(env_lc_ctype) == 0)) {\n-        codeset = \"UTF-8\";\n-    }\n-#endif\n-\n@@ -164,1 +155,1 @@\n-convertUft8ToPlatformString(char* utf8_str, int utf8_len, char* platform_str, int platform_len) {\n+convertUtf8ToPlatformString(char* utf8_str, int utf8_len, char* platform_str, int platform_len) {\n","filename":"src\/java.instrument\/unix\/native\/libinstrument\/EncodingSupport_md.c","additions":6,"deletions":15,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,1 +34,1 @@\n-convertUft8ToPlatformString(char* utf8_str, int utf8_len, char* platform_str, int platform_len) {\n+convertUtf8ToPlatformString(char* utf8_str, int utf8_len, char* platform_str, int platform_len) {\n","filename":"src\/java.instrument\/windows\/native\/libinstrument\/EncodingSupport_md.c","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -567,2 +567,0 @@\n-java\/lang\/instrument\/BootClassPath\/BootClassPathTest.sh         8273188 generic-all\n-\n","filename":"test\/jdk\/ProblemList.txt","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2004, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,1 +25,1 @@\n-# @bug 5055293\n+# @bug 5055293 8273188\n","filename":"test\/jdk\/java\/lang\/instrument\/BootClassPath\/BootClassPathTest.sh","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -97,1 +97,1 @@\n-            out.write(bootDir.getBytes(defaultEncoding));\n+            out.write(bootDir.getBytes(filePathEncoding));\n@@ -105,1 +105,1 @@\n-    private static final String defaultEncoding = Charset.defaultCharset().name();\n+    private static final String filePathEncoding = System.getProperty(\"sun.jnu.encoding\");\n@@ -177,1 +177,1 @@\n-             if (names[i][0].equalsIgnoreCase(defaultEncoding)) {\n+             if (names[i][0].equalsIgnoreCase(filePathEncoding)) {\n","filename":"test\/jdk\/java\/lang\/instrument\/BootClassPath\/Setup.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}