{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -181,1 +181,1 @@\n-       long v = sh;\n+            long v = sh;\n@@ -237,2 +237,2 @@\n-        \/\/ Convert the seed to 6 long values, of which the last 4 are not all zero.\n-        long[] data = RandomSupport.convertSeedBytesToLongs(seed, 6, 4);\n+        \/\/ Convert the seed to 8 long values, of which the last 4 are not all zero.\n+        long[] data = RandomSupport.convertSeedBytesToLongs(seed, 8, 4);\n@@ -256,1 +256,1 @@\n-       \/\/ Pick a new instance \"at random\", but use the brine for (the low half of) `a`.\n+        \/\/ Pick a new instance \"at random\", but use the brine for (the low half of) `a`.\n@@ -265,2 +265,2 @@\n-       \/\/ Compute the result based on current state information\n-       \/\/ (this allows the computation to be overlapped with state update).\n+        \/\/ Compute the result based on current state information\n+        \/\/ (this allows the computation to be overlapped with state update).\n@@ -269,1 +269,1 @@\n-       \/\/ Update the LCG subgenerator\n+        \/\/ Update the LCG subgenerator\n@@ -276,1 +276,1 @@\n-       \/\/ Update the XBG subgenerator\n+        \/\/ Update the XBG subgenerator\n","filename":"src\/jdk.random\/share\/classes\/jdk\/random\/L128X256MixRandom.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -0,0 +1,51 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.util.random.RandomGeneratorFactory;\n+\n+\/**\n+ * @test\n+ * @summary Check that the (byte[]) constructors do not throw (see bug report)\n+ * @bug 8283083\n+ *\/\n+\n+public class LXMRandomWithSeed {\n+\n+    public static void main(String[] args) {\n+        byte[] seed = new byte[0x100];\n+        for (var i = 0; i < seed.length; ++i) {\n+            seed[i] = (byte) i;\n+        }\n+        var lxmFactories = RandomGeneratorFactory.all()\n+                .filter(factory -> factory.group().equals(\"LXM\"))\n+                .toList();\n+        for (var lxmFactory : lxmFactories) {\n+            var lxmGen0 = lxmFactory.create(seed);\n+            var lxmGen1 = lxmFactory.create(seed);\n+            if (lxmGen0.nextLong() != lxmGen1.nextLong()) {\n+                throw new RuntimeException(\"%s(byte[]) is incorrect\".formatted(lxmFactory.name()));\n+            }\n+        }\n+    }\n+\n+}\n","filename":"test\/jdk\/java\/util\/Random\/LXMRandomWithSeed.java","additions":51,"deletions":0,"binary":false,"changes":51,"status":"added"}]}