{"files":[{"patch":"@@ -464,1 +464,1 @@\n-        Pair<Name, Name> key = new Pair<>(enclFlatname, c.name);\n+        Pair<Name, Name> key = localClassNameKey(c);\n@@ -476,0 +476,23 @@\n+    \/** Generate a key for the local class name index map.\n+     *\n+     *  To help avoid clashes on case-insensitive filesystems,\n+     *  we use case-insensitive local class names in our map.\n+     *  While this means clearLocalClassNameIndexes() could clear\n+     *  keys for more than one symbol, it's only invoked after\n+     *  all related local classes have been processed for a class.\n+     *  We only lowercase A-Z to avoid any locale issues.\n+     *\/\n+    private Pair<Name, Name> localClassNameKey(ClassSymbol c) {\n+        Name name1 = c.owner.enclClass().flatname;\n+        byte[] bytes2 = c.name.toUtf();\n+        for (int i = 0; i < bytes2.length; i++) {\n+            char ch = (char)(bytes2[i] & 0xff);\n+            if (ch >= 'A' && ch <= 'Z') {\n+                ch = (char)(ch - 'A' + 'a');\n+                bytes2[i] = (byte)ch;\n+            }\n+        }\n+        Name name2 = names.fromUtf(bytes2);\n+        return new Pair<>(name1, name2);\n+    }\n+\n@@ -478,2 +501,1 @@\n-            localClassNameIndexes.remove(new Pair<>(\n-                    c.owner.enclClass().flatname, c.name));\n+            localClassNameIndexes.remove(localClassNameKey(c));\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Check.java","additions":25,"deletions":3,"binary":false,"changes":28,"status":"modified"}]}