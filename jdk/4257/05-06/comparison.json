{"files":[{"patch":"@@ -278,9 +278,0 @@\n-\n-#ifdef ASSERT\n-  if (!enabled) {\n-    for (LogTagSet* ts = LogTagSet::first(); ts != NULL; ts = ts->next()) {\n-      assert(!ts->has_output(output), \"The node of output should been removed in ts->set_output_level.\");\n-    }\n-  }\n-#endif\n-\n","filename":"src\/hotspot\/share\/logging\/logConfiguration.cpp","additions":0,"deletions":9,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -36,0 +36,13 @@\n+class RotationLocker : public StackObj {\n+  Semaphore& _sem;\n+\n+ public:\n+  RotationLocker(Semaphore& sem) : _sem(sem) {\n+    sem.wait();\n+  }\n+\n+  ~RotationLocker() {\n+    _sem.signal();\n+  }\n+};\n+\n@@ -289,1 +302,1 @@\n-  _rotation_semaphore.wait();\n+  RotationLocker lock(_rotation_semaphore);\n@@ -303,1 +316,0 @@\n-  _rotation_semaphore.signal();\n@@ -335,1 +347,1 @@\n-  _rotation_semaphore.wait();\n+  RotationLocker lock(_rotation_semaphore);\n@@ -344,1 +356,0 @@\n-  _rotation_semaphore.signal();\n@@ -371,1 +382,1 @@\n-  _rotation_semaphore.wait();\n+  RotationLocker lock(_rotation_semaphore);\n@@ -373,1 +384,0 @@\n-  _rotation_semaphore.signal();\n@@ -377,1 +387,0 @@\n-\n","filename":"src\/hotspot\/share\/logging\/logFileOutput.cpp","additions":16,"deletions":7,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -305,1 +305,1 @@\n-    \/\/ Take turn logging with different decorators, either None or All.\n+    \/\/ turn on\/off the tagset 'logging'.\n@@ -308,0 +308,1 @@\n+    \/\/ sleep a prime number milliseconds to allow concurrent logsites write logs\n","filename":"test\/hotspot\/gtest\/logging\/test_logConfiguration.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"}]}