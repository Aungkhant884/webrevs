{"files":[{"patch":"@@ -1647,1 +1647,1 @@\n-void find_node_by_name(Node* start, const char* name) {\n+void find_nodes_by_name(Node* start, const char* name) {\n@@ -1662,1 +1662,1 @@\n-void find_node_by_dump(Node* start, const char* pattern) {\n+void find_nodes_by_dump(Node* start, const char* pattern) {\n@@ -1682,1 +1682,1 @@\n-void find_node_by_name(const char* name) {\n+void find_nodes_by_name(const char* name) {\n@@ -1684,1 +1684,1 @@\n-  find_node_by_name(root, name);\n+  find_nodes_by_name(root, name);\n@@ -1690,1 +1690,1 @@\n-void find_old_node_by_name(const char* name) {\n+void find_old_nodes_by_name(const char* name) {\n@@ -1692,1 +1692,1 @@\n-  find_node_by_name(root, name);\n+  find_nodes_by_name(root, name);\n@@ -1698,1 +1698,1 @@\n-void find_node_by_dump(const char* pattern) {\n+void find_nodes_by_dump(const char* pattern) {\n@@ -1700,1 +1700,1 @@\n-  find_node_by_dump(root, pattern);\n+  find_nodes_by_dump(root, pattern);\n@@ -1706,1 +1706,1 @@\n-void find_old_node_by_dump(const char* pattern) {\n+void find_old_nodes_by_dump(const char* pattern) {\n@@ -1708,1 +1708,1 @@\n-  find_node_by_dump(root, pattern);\n+  find_nodes_by_dump(root, pattern);\n@@ -1802,0 +1802,10 @@\n+    \/\/ Check if the filter accepts the node. Go by the type categories, but also all CFG nodes\n+    \/\/ are considered to have control.\n+    bool accepts(const Node* n) {\n+      const Type* t = n->bottom_type();\n+      return ( _data    &&  t->has_category(Type::Category::Data)                    ) ||\n+             ( _memory  &&  t->has_category(Type::Category::Memory)                  ) ||\n+             ( _mixed   &&  t->has_category(Type::Category::Mixed)                   ) ||\n+             ( _control && (t->has_category(Type::Category::Control) || n->is_CFG()) ) ||\n+             ( _other   &&  t->has_category(Type::Category::Other)                   );\n+    }\n@@ -1814,2 +1824,0 @@\n-  \/\/ node category (filter \/ color)\n-  static bool filter_category(const Node* n, Filter& filter); \/\/ filter node category against options\n@@ -1910,1 +1918,1 @@\n-    if (!filter_category(n, _filter_visit) && n != _start) {\n+    if (!_filter_visit.accepts(n) && n != _start) {\n@@ -2209,20 +2217,0 @@\n-bool PrintBFS::filter_category(const Node* n, Filter& filter) {\n-  const Type* t = n->bottom_type();\n-  if (filter._data && t->has_category(Type::Category::Data)) {\n-    return true;\n-  }\n-  if (filter._memory && t->has_category(Type::Category::Memory)) {\n-    return true;\n-  }\n-  if (filter._mixed && t->has_category(Type::Category::Mixed)) {\n-    return true;\n-  }\n-  if (filter._control && (t->has_category(Type::Category::Control) || n->is_CFG())) {\n-    return true;\n-  }\n-  if (filter._other && t->has_category(Type::Category::Other)) {\n-    return true;\n-  }\n-  return false;\n-}\n-\n@@ -2327,2 +2315,2 @@\n-     (filter_category(dst, _filter_visit) ||\n-      filter_category(dst, _filter_boundary) ||\n+     (_filter_visit.accepts(dst) ||\n+      _filter_boundary.accepts(dst) ||\n","filename":"src\/hotspot\/share\/opto\/node.cpp","additions":23,"deletions":35,"binary":false,"changes":58,"status":"modified"}]}