{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -1909,3 +1909,6 @@\n-            if (!isCurrentPlatform(p) && !Files.exists(p.resolve(\"lib\").resolve(\"jrt-fs.jar\")) &&\n-                    !Files.exists(systemJavaHome.resolve(\"modules\")))\n-                throw new IllegalArgumentException(p.toString());\n+            if (!isCurrentPlatform(p)) {\n+                var noJavaRuntimeFS = Files.notExists(resolveInJavaHomeLib(p, \"jrt-fs.jar\"));\n+                var noModulesFile = Files.notExists(resolveInJavaHomeLib(p, \"modules\"));\n+                if (noJavaRuntimeFS || noModulesFile)\n+                    throw new IllegalArgumentException(p.toString());\n+            }\n@@ -1924,0 +1927,4 @@\n+        private static Path resolveInJavaHomeLib(Path javaHomePath, String name) {\n+            return javaHomePath.resolve(\"lib\").resolve(name);\n+        }\n+\n@@ -1970,1 +1977,1 @@\n-                            URL javaHomeURL = systemJavaHome.resolve(\"jrt-fs.jar\").toUri().toURL();\n+                            URL jfsJar = resolveInJavaHomeLib(systemJavaHome, \"jrt-fs.jar\").toUri().toURL();\n@@ -1973,1 +1980,1 @@\n-                                    new URLClassLoader(new URL[] {javaHomeURL}, currentLoader);\n+                                    new URLClassLoader(new URL[] {jfsJar}, currentLoader);\n@@ -1985,1 +1992,1 @@\n-                    modules = systemJavaHome.resolve(\"modules\");\n+                    modules = resolveInJavaHomeLib(systemJavaHome, \"modules\");\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/file\/Locations.java","additions":14,"deletions":7,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 8196433\n+ * @bug 8196433 8307168\n@@ -258,0 +258,28 @@\n+    @Test\n+    public void consistentSystemOptionHandlingWithAnEmptyDirectory(Path base) throws Exception {\n+        tb.createDirectories(base);\n+        doTestNoSource(base, \"error: illegal argument for --system: %s\".formatted(base), String.format(\"--system %s\", base));\n+    }\n+\n+    @Test\n+    public void consistentSystemOptionHandlingWithLibJrtFsJar(Path base) throws Exception {\n+        tb.createDirectories(base);\n+        tb.writeFile(base.resolve(\"lib\").resolve(\"jrt-fs.jar\"), \"this is not a JAR file\");\n+        doTestNoSource(base, \"error: illegal argument for --system: %s\".formatted(base), String.format(\"--system %s\", base));\n+    }\n+\n+    @Test\n+    public void consistentSystemOptionHandlingWithLibModules(Path base) throws Exception {\n+        tb.createDirectories(base);\n+        tb.writeFile(base.resolve(\"lib\").resolve(\"modules\"), \"this is not a modules file\");\n+        doTestNoSource(base, \"error: illegal argument for --system: %s\".formatted(base), String.format(\"--system %s\", base));\n+    }\n+\n+    @Test\n+    public void consistentSystemOptionHandlingWithAlmostValidLibEntries(Path base) throws Exception {\n+        tb.createDirectories(base);\n+        tb.writeFile(base.resolve(\"lib\").resolve(\"jrt-fs.jar\"), \"this is not a JAR file\");\n+        tb.writeFile(base.resolve(\"lib\").resolve(\"modules\"), \"this is not a modules file\");\n+        doTestNoSource(base, \"error: no source files\", String.format(\"--system %s\", base));\n+    }\n+\n","filename":"test\/langtools\/tools\/javac\/options\/smokeTests\/OptionSmokeTest.java","additions":30,"deletions":2,"binary":false,"changes":32,"status":"modified"}]}