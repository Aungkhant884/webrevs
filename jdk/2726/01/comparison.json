{"files":[{"patch":"@@ -90,1 +90,0 @@\n-containers\/docker\/TestJFRWithJMX.java 8256417 linux-5.4.17-2011.5.3.el8uek.x86_64\n","filename":"test\/hotspot\/jtreg\/ProblemList.txt","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -57,0 +57,1 @@\n+import jdk.test.lib.Platform;\n@@ -78,0 +79,4 @@\n+        if (isPodman() & !Platform.isRoot()) {\n+            throw new SkippedException(\"test cannot be run under rootless podman configuration\");\n+        }\n+\n@@ -218,0 +223,7 @@\n+\n+    static boolean isPodman() {\n+        String[] parts = Container.ENGINE_COMMAND\n+            .toLowerCase()\n+            .split(File.pathSeparator);\n+        return \"podman\".equals(parts[parts.length - 1]);\n+    }\n","filename":"test\/hotspot\/jtreg\/containers\/docker\/TestJFRWithJMX.java","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+import java.io.File;\n@@ -118,0 +119,1 @@\n+        map.put(\"container.engine\", this::containerEngine);\n@@ -502,1 +504,14 @@\n-    \/**\n+   \/**\n+     * Container Engine command\n+     *\n+     * @return returns the name of container engine executable\n+     *\/\n+    protected String containerEngine() {\n+        \/\/ The ENGINE_COMMAND could be a path to the executable, or just a name.\n+        String[] parts = Container.ENGINE_COMMAND\n+            .toLowerCase()\n+            .split(File.pathSeparator);\n+        return parts[parts.length - 1];\n+    }\n+\n+   \/**\n","filename":"test\/jtreg-ext\/requires\/VMProps.java","additions":16,"deletions":1,"binary":false,"changes":17,"status":"modified"}]}