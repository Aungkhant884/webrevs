{"files":[{"patch":"@@ -1584,0 +1584,1 @@\n+    BarrierEnqueueDiscoveredFieldClosure enqueue;\n@@ -1585,1 +1586,1 @@\n-    _rp_task->rp_work(worker_id, &is_alive, &keep_alive, &complete_gc);\n+    _rp_task->rp_work(worker_id, &is_alive, &keep_alive, &enqueue, &complete_gc);\n@@ -1698,0 +1699,1 @@\n+  BarrierEnqueueDiscoveredFieldClosure enqueue;\n@@ -1709,0 +1711,1 @@\n+                                     &enqueue,\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentMark.cpp","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -251,0 +251,1 @@\n+    BarrierEnqueueDiscoveredFieldClosure enqueue;\n@@ -252,1 +253,1 @@\n-    _rp_task->rp_work(worker_id, &is_alive, &keep_alive, complete_gc);\n+    _rp_task->rp_work(worker_id, &is_alive, &keep_alive, &enqueue, complete_gc);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullCollector.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -915,0 +915,1 @@\n+    BarrierEnqueueDiscoveredFieldClosure enqueue;\n@@ -916,1 +917,1 @@\n-    _rp_task->rp_work(worker_id, &is_alive, &keep_alive, &complete_gc);\n+    _rp_task->rp_work(worker_id, &is_alive, &keep_alive, &enqueue, &complete_gc);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1YoungCollector.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2070,0 +2070,1 @@\n+    BarrierEnqueueDiscoveredFieldClosure enqueue;\n@@ -2071,1 +2072,1 @@\n-    _rp_task->rp_work(worker_id, PSParallelCompact::is_alive_closure(), &keep_alive, &complete_gc);\n+    _rp_task->rp_work(worker_id, PSParallelCompact::is_alive_closure(), &keep_alive, &enqueue, &complete_gc);\n","filename":"src\/hotspot\/share\/gc\/parallel\/psParallelCompact.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -212,1 +212,2 @@\n-    PSKeepAliveClosure keep_alive(promotion_manager);;\n+    PSKeepAliveClosure keep_alive(promotion_manager);\n+    BarrierEnqueueDiscoveredFieldClosure enqueue;\n@@ -214,1 +215,1 @@\n-    _rp_task->rp_work(worker_id, &is_alive, &keep_alive, &complete_gc);\n+    _rp_task->rp_work(worker_id, &is_alive, &keep_alive, &enqueue, &complete_gc);\n","filename":"src\/hotspot\/share\/gc\/parallel\/psScavenge.cpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -44,1 +44,2 @@\n-    _rp_task->rp_work(worker_id, &_is_alive, &_keep_alive, &_complete_gc);\n+    BarrierEnqueueDiscoveredFieldClosure enqueue;\n+    _rp_task->rp_work(worker_id, &_is_alive, &_keep_alive, &enqueue, &_complete_gc);\n","filename":"src\/hotspot\/share\/gc\/serial\/serialGcRefProcProxyTask.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -221,0 +221,6 @@\n+void BarrierEnqueueDiscoveredFieldClosure::enqueue(oop reference, oop value) {\n+  HeapAccess<AS_NO_KEEPALIVE>::oop_store_at(reference,\n+                                            java_lang_ref_Reference::discovered_offset(),\n+                                            value);\n+}\n+\n@@ -274,3 +280,1 @@\n-  HeapAccess<AS_NO_KEEPALIVE>::oop_store_at(_current_discovered,\n-                                            java_lang_ref_Reference::discovered_offset(),\n-                                            _next_discovered);\n+  _enqueue->enqueue(_current_discovered, _next_discovered);\n@@ -280,1 +284,1 @@\n-  if (_prev_discovered != NULL) {\n+  if (_prev_discovered != nullptr) {\n@@ -285,1 +289,1 @@\n-    HeapAccess<AS_NO_KEEPALIVE>::oop_store_at(_prev_discovered, java_lang_ref_Reference::discovered_offset(), old);\n+    _enqueue->enqueue(_prev_discovered, old);\n@@ -310,0 +314,1 @@\n+                                                        EnqueueDiscoveredFieldClosure* enqueue,\n@@ -311,1 +316,1 @@\n-  DiscoveredListIterator iter(refs_list, keep_alive, is_alive);\n+  DiscoveredListIterator iter(refs_list, keep_alive, is_alive, enqueue);\n@@ -353,2 +358,3 @@\n-                                                         OopClosure*     keep_alive) {\n-  DiscoveredListIterator iter(refs_list, keep_alive, NULL);\n+                                                         OopClosure*     keep_alive,\n+                                                         EnqueueDiscoveredFieldClosure* enqueue) {\n+  DiscoveredListIterator iter(refs_list, keep_alive, NULL, enqueue);\n@@ -424,1 +430,2 @@\n-                                          OopClosure* keep_alive) {\n+                                          OopClosure* keep_alive,\n+                                          EnqueueDiscoveredFieldClosure* enqueue) {\n@@ -456,0 +463,1 @@\n+                                                                       enqueue,\n@@ -471,0 +479,1 @@\n+               EnqueueDiscoveredFieldClosure* enqueue,\n@@ -474,1 +483,1 @@\n-    process_discovered_list(worker_id, REF_SOFT, is_alive, keep_alive);\n+    process_discovered_list(worker_id, REF_SOFT, is_alive, keep_alive, enqueue);\n@@ -476,1 +485,1 @@\n-    process_discovered_list(worker_id, REF_WEAK, is_alive, keep_alive);\n+    process_discovered_list(worker_id, REF_WEAK, is_alive, keep_alive, enqueue);\n@@ -478,1 +487,1 @@\n-    process_discovered_list(worker_id, REF_FINAL, is_alive, keep_alive);\n+    process_discovered_list(worker_id, REF_FINAL, is_alive, keep_alive, enqueue);\n@@ -496,0 +505,1 @@\n+               EnqueueDiscoveredFieldClosure* enqueue,\n@@ -498,1 +508,1 @@\n-    _ref_processor.process_final_keep_alive_work(_ref_processor._discoveredFinalRefs[worker_id], keep_alive);\n+    _ref_processor.process_final_keep_alive_work(_ref_processor._discoveredFinalRefs[worker_id], keep_alive, enqueue);\n@@ -514,0 +524,1 @@\n+               EnqueueDiscoveredFieldClosure* enqueue,\n@@ -515,1 +526,1 @@\n-    process_discovered_list(worker_id, REF_PHANTOM, is_alive, keep_alive);\n+    process_discovered_list(worker_id, REF_PHANTOM, is_alive, keep_alive, enqueue);\n@@ -1042,0 +1053,1 @@\n+                                                        EnqueueDiscoveredFieldClosure* enqueue,\n@@ -1056,1 +1068,1 @@\n-                                      keep_alive, complete_gc, yield)) {\n+                                      keep_alive, enqueue, complete_gc, yield)) {\n@@ -1073,1 +1085,1 @@\n-                                      keep_alive, complete_gc, yield)) {\n+                                      keep_alive, enqueue, complete_gc, yield)) {\n@@ -1090,1 +1102,1 @@\n-                                      keep_alive, complete_gc, yield)) {\n+                                      keep_alive, enqueue, complete_gc, yield)) {\n@@ -1107,1 +1119,1 @@\n-                                      keep_alive, complete_gc, yield)) {\n+                                      keep_alive, enqueue, complete_gc, yield)) {\n@@ -1127,0 +1139,1 @@\n+                                                     EnqueueDiscoveredFieldClosure* enqueue,\n@@ -1129,1 +1142,1 @@\n-  DiscoveredListIterator iter(refs_list, keep_alive, is_alive);\n+  DiscoveredListIterator iter(refs_list, keep_alive, is_alive, enqueue);\n","filename":"src\/hotspot\/share\/gc\/shared\/referenceProcessor.cpp","additions":32,"deletions":19,"binary":false,"changes":51,"status":"modified"},{"patch":"@@ -41,0 +41,20 @@\n+\/\/ Provides a callback to the garbage collector to set the given value to the\n+\/\/ discovered field of the j.l.ref.Reference instance. This is called during STW\n+\/\/ reference processing when iterating over the discovered lists for all\n+\/\/ discovered references.\n+\/\/ Typically garbage collectors may just call the barrier, but for some garbage\n+\/\/ collectors the barrier environment (e.g. card table) may not be set up correctly\n+\/\/ at the point of invocation.\n+class EnqueueDiscoveredFieldClosure {\n+public:\n+  \/\/ For the given j.l.ref.Reference reference, set the discovered field to value.\n+  virtual void enqueue(oop reference, oop value) = 0;\n+};\n+\n+\/\/ EnqueueDiscoveredFieldClosure that executes the default barrier on the discovered\n+\/\/ field of the j.l.ref.Reference reference with the given value.\n+class BarrierEnqueueDiscoveredFieldClosure : public EnqueueDiscoveredFieldClosure {\n+public:\n+  void enqueue(oop reference, oop value) override;\n+};\n+\n@@ -69,1 +89,0 @@\n-private:\n@@ -81,0 +100,1 @@\n+  EnqueueDiscoveredFieldClosure* _enqueue;\n@@ -92,1 +112,2 @@\n-                                BoolObjectClosure* is_alive);\n+                                BoolObjectClosure* is_alive,\n+                                EnqueueDiscoveredFieldClosure* enqueue);\n@@ -258,0 +279,1 @@\n+                                      EnqueueDiscoveredFieldClosure* enqueue,\n@@ -263,1 +285,2 @@\n-                                       OopClosure* keep_alive);\n+                                       OopClosure* keep_alive,\n+                                       EnqueueDiscoveredFieldClosure* enqueue);\n@@ -294,0 +317,1 @@\n+                                      EnqueueDiscoveredFieldClosure* enqueue,\n@@ -310,0 +334,1 @@\n+                                   EnqueueDiscoveredFieldClosure* enqueue,\n@@ -545,1 +570,2 @@\n-                               OopClosure* keep_alive);\n+                               OopClosure* keep_alive,\n+                               EnqueueDiscoveredFieldClosure* enqueue);\n@@ -555,0 +581,1 @@\n+                       EnqueueDiscoveredFieldClosure* enqueue,\n","filename":"src\/hotspot\/share\/gc\/shared\/referenceProcessor.hpp","additions":31,"deletions":4,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -63,1 +63,2 @@\n-                                               BoolObjectClosure* is_alive):\n+                                               BoolObjectClosure* is_alive,\n+                                               EnqueueDiscoveredFieldClosure* enqueue):\n@@ -73,0 +74,1 @@\n+  _enqueue(enqueue),\n","filename":"src\/hotspot\/share\/gc\/shared\/referenceProcessor.inline.hpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"}]}