{"files":[{"patch":"@@ -92,1 +92,1 @@\n-    public final static long NOPOS = -1;\n+    public static final long NOPOS = -1;\n","filename":"src\/java.compiler\/share\/classes\/javax\/tools\/Diagnostic.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -797,1 +797,1 @@\n-    public static abstract class TypeSymbol extends Symbol {\n+    public abstract static class TypeSymbol extends Symbol {\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Symbol.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -244,1 +244,1 @@\n-    public static abstract class StructuralTypeMapping<S> extends Types.TypeMapping<S> {\n+    public abstract static class StructuralTypeMapping<S> extends Types.TypeMapping<S> {\n@@ -1789,1 +1789,1 @@\n-    public static abstract class DelegatedType extends Type {\n+    public abstract static class DelegatedType extends Type {\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Type.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -4899,1 +4899,1 @@\n-    public static abstract class DefaultTypeVisitor<R,S> implements Type.Visitor<R,S> {\n+    public abstract static class DefaultTypeVisitor<R,S> implements Type.Visitor<R,S> {\n@@ -4926,1 +4926,1 @@\n-    public static abstract class DefaultSymbolVisitor<R,S> implements Symbol.Visitor<R,S> {\n+    public abstract static class DefaultSymbolVisitor<R,S> implements Symbol.Visitor<R,S> {\n@@ -4949,1 +4949,1 @@\n-    public static abstract class SimpleVisitor<R,S> extends DefaultTypeVisitor<R,S> {\n+    public abstract static class SimpleVisitor<R,S> extends DefaultTypeVisitor<R,S> {\n@@ -4969,1 +4969,1 @@\n-    public static abstract class TypeRelation extends SimpleVisitor<Boolean,Type> {}\n+    public abstract static class TypeRelation extends SimpleVisitor<Boolean,Type> {}\n@@ -4979,1 +4979,1 @@\n-    public static abstract class UnaryVisitor<R> extends SimpleVisitor<R,Void> {\n+    public abstract static class UnaryVisitor<R> extends SimpleVisitor<R,Void> {\n@@ -5044,1 +5044,1 @@\n-    public static abstract class SignatureGenerator {\n+    public abstract static class SignatureGenerator {\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Types.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -344,1 +344,1 @@\n-    static abstract class BaseAnalyzer extends TreeScanner {\n+    abstract static class BaseAnalyzer extends TreeScanner {\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Flow.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -59,1 +59,1 @@\n-    public synchronized static JRTIndex getSharedInstance() {\n+    public static synchronized JRTIndex getSharedInstance() {\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/file\/JRTIndex.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -447,1 +447,1 @@\n-    protected static abstract class LocationHandler {\n+    protected abstract static class LocationHandler {\n@@ -516,1 +516,1 @@\n-    private static abstract class BasicLocationHandler extends LocationHandler {\n+    private abstract static class BasicLocationHandler extends LocationHandler {\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/file\/Locations.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -257,1 +257,1 @@\n-    private static abstract class Indy extends StringConcat {\n+    private abstract static class Indy extends StringConcat {\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/jvm\/StringConcat.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -262,1 +262,1 @@\n-                transient final Method method;\n+                final transient Method method;\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/model\/AnnotationProxyMaker.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1118,1 +1118,1 @@\n-    private static abstract class TagParser {\n+    private abstract static class TagParser {\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/parser\/DocCommentParser.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -4991,1 +4991,1 @@\n-    protected static abstract class AbstractEndPosTable implements EndPosTable {\n+    protected abstract static class AbstractEndPosTable implements EndPosTable {\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/parser\/JavacParser.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -297,1 +297,1 @@\n-    public static abstract class DCEndPosTree<T extends DCEndPosTree<T>> extends DCTree {\n+    public abstract static class DCEndPosTree<T extends DCEndPosTree<T>> extends DCTree {\n@@ -384,1 +384,1 @@\n-    public static abstract class DCBlockTag extends DCTree implements BlockTagTree {\n+    public abstract static class DCBlockTag extends DCTree implements BlockTagTree {\n@@ -391,1 +391,1 @@\n-    public static abstract class DCInlineTag extends DCEndPosTree<DCInlineTag> implements InlineTagTree {\n+    public abstract static class DCInlineTag extends DCEndPosTree<DCInlineTag> implements InlineTagTree {\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/tree\/DCTree.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -692,1 +692,1 @@\n-    public static abstract class JCStatement extends JCTree implements StatementTree {\n+    public abstract static class JCStatement extends JCTree implements StatementTree {\n@@ -705,1 +705,1 @@\n-    public static abstract class JCCaseLabel extends JCTree implements CaseLabelTree {\n+    public abstract static class JCCaseLabel extends JCTree implements CaseLabelTree {\n@@ -713,1 +713,1 @@\n-    public static abstract class JCExpression extends JCCaseLabel implements ExpressionTree {\n+    public abstract static class JCExpression extends JCCaseLabel implements ExpressionTree {\n@@ -743,1 +743,1 @@\n-    public static abstract class JCPolyExpression extends JCExpression {\n+    public abstract static class JCPolyExpression extends JCExpression {\n@@ -765,1 +765,1 @@\n-    public static abstract class JCFunctionalExpression extends JCPolyExpression {\n+    public abstract static class JCFunctionalExpression extends JCPolyExpression {\n@@ -2059,1 +2059,1 @@\n-    public static abstract class JCOperatorExpression extends JCExpression {\n+    public abstract static class JCOperatorExpression extends JCExpression {\n@@ -2241,1 +2241,1 @@\n-    public static abstract class JCPattern extends JCCaseLabel\n+    public abstract static class JCPattern extends JCCaseLabel\n@@ -2992,1 +2992,1 @@\n-    public static abstract class JCDirective extends JCTree\n+    public abstract static class JCDirective extends JCTree\n@@ -3404,1 +3404,1 @@\n-    public static abstract class Visitor {\n+    public abstract static class Visitor {\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/tree\/JCTree.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -181,1 +181,1 @@\n-        public static abstract class Node extends GraphUtils.AbstractNode<ClassSymbol, Node>\n+        public abstract static class Node extends GraphUtils.AbstractNode<ClassSymbol, Node>\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/util\/Dependencies.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -57,1 +57,1 @@\n-    static abstract class NodeVisitor<D, N extends Node<D, N>, A> {\n+    abstract static class NodeVisitor<D, N extends Node<D, N>, A> {\n@@ -95,1 +95,1 @@\n-    public static abstract class AbstractNode<D, N extends AbstractNode<D, N>> implements Node<D, N> {\n+    public abstract static class AbstractNode<D, N extends AbstractNode<D, N>> implements Node<D, N> {\n@@ -132,1 +132,1 @@\n-    public static abstract class TarjanNode<D, N extends TarjanNode<D, N>> extends AbstractNode<D, N>\n+    public abstract static class TarjanNode<D, N extends TarjanNode<D, N>> extends AbstractNode<D, N>\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/util\/GraphUtils.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -482,1 +482,1 @@\n-    public static abstract class DiagnosticInfo {\n+    public abstract static class DiagnosticInfo {\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/util\/JCDiagnostic.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -93,1 +93,1 @@\n-    public static abstract class DiagnosticHandler {\n+    public abstract static class DiagnosticHandler {\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/util\/Log.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -208,1 +208,1 @@\n-    public static abstract class Table {\n+    public abstract static class Table {\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/util\/Name.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -242,1 +242,1 @@\n-    static abstract class Option {\n+    abstract static class Option {\n","filename":"src\/jdk.jartool\/share\/classes\/sun\/tools\/jar\/GNUStyleOptions.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -54,1 +54,1 @@\n-    private final static String TERMINALLY_DEPRECATED_KEY = \"doclet.Terminally_Deprecated_Elements\";\n+    private static final String TERMINALLY_DEPRECATED_KEY = \"doclet.Terminally_Deprecated_Elements\";\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/DeprecatedListWriter.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -87,2 +87,2 @@\n-    private final static int MAX_SUBPACKAGES = 20;\n-    private final static int MAX_SIBLING_PACKAGES = 5;\n+    private static final int MAX_SUBPACKAGES = 20;\n+    private static final int MAX_SIBLING_PACKAGES = 5;\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/PackageWriterImpl.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -86,1 +86,1 @@\n-    final static class Valued extends Attribute {\n+    static final class Valued extends Attribute {\n@@ -107,1 +107,1 @@\n-    final static class Valueless extends Attribute {\n+    static final class Valueless extends Attribute {\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/snippet\/Attribute.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -51,1 +51,1 @@\n-    private final static int EOI = 0x1A;\n+    private static final int EOI = 0x1A;\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/snippet\/MarkupParser.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -381,1 +381,1 @@\n-    static abstract class DeclScanner extends TreePathScanner<Void, Void> {\n+    abstract static class DeclScanner extends TreePathScanner<Void, Void> {\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclint\/DocLint.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}