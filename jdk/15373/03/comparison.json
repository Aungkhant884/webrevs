{"files":[{"patch":"@@ -57,0 +57,1 @@\n+                      volatile_static_field,                                                                                         \\\n","filename":"src\/hotspot\/share\/gc\/shared\/vmStructs_gc.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -54,1 +54,1 @@\n-int                      PerfMemory::_initialized = false;\n+volatile int             PerfMemory::_initialized = 0;\n@@ -56,1 +56,1 @@\n-bool                     PerfMemory::_destroyed = false;\n+volatile bool            PerfMemory::_destroyed = false;\n","filename":"src\/hotspot\/share\/runtime\/perfMemory.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -124,2 +124,2 @@\n-    static int    _initialized;\n-    static bool   _destroyed;\n+    static volatile int _initialized;\n+    static volatile bool _destroyed;\n","filename":"src\/hotspot\/share\/runtime\/perfMemory.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -183,1 +183,1 @@\n-                   static_ptr_volatile_field,                                                                                        \\\n+                   volatile_static_field,                                                                                            \\\n@@ -197,0 +197,1 @@\n+                volatile_static_field,                                                                                               \\\n@@ -450,1 +451,1 @@\n-     static_field(PerfMemory,                  _initialized,                                  int)                                   \\\n+     volatile_static_field(PerfMemory,         _initialized,                                  int)                                   \\\n@@ -480,1 +481,1 @@\n-  static_ptr_volatile_field(ClassLoaderDataGraph, _head,                                      ClassLoaderData*)                      \\\n+  volatile_static_field(ClassLoaderDataGraph, _head,                                          ClassLoaderData*)                      \\\n@@ -641,1 +642,1 @@\n-  static_ptr_volatile_field(ThreadsSMRSupport, _java_thread_list,                             ThreadsList*)                          \\\n+  volatile_static_field(ThreadsSMRSupport, _java_thread_list,                                 ThreadsList*)                          \\\n@@ -2688,1 +2689,1 @@\n-             GENERATE_STATIC_PTR_VOLATILE_VM_STRUCT_ENTRY,\n+             GENERATE_VOLATILE_STATIC_VM_STRUCT_ENTRY,\n@@ -2890,1 +2891,1 @@\n-             CHECK_STATIC_PTR_VOLATILE_VM_STRUCT_ENTRY,\n+             CHECK_VOLATILE_STATIC_VM_STRUCT_ENTRY,\n","filename":"src\/hotspot\/share\/runtime\/vmStructs.cpp","additions":7,"deletions":6,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -166,1 +166,1 @@\n-\/\/ This macro generates a VMStructEntry line for a static pointer volatile field,\n+\/\/ This macro generates a VMStructEntry line for a static volatile field,\n@@ -168,2 +168,2 @@\n-#define GENERATE_STATIC_PTR_VOLATILE_VM_STRUCT_ENTRY(typeName, fieldName, type)    \\\n- { QUOTE(typeName), QUOTE(fieldName), QUOTE(type), 1, 0, (void *)&typeName::fieldName },\n+#define GENERATE_VOLATILE_STATIC_VM_STRUCT_ENTRY(typeName, fieldName, type)    \\\n+  { QUOTE(typeName), QUOTE(fieldName), QUOTE(type), 1, 0, (type*)&typeName::fieldName },\n@@ -208,1 +208,1 @@\n-\/\/ This macro checks the type of a static pointer volatile VMStructEntry by comparing pointer types,\n+\/\/ This macro checks the type of a static volatile VMStructEntry by comparing pointer types,\n@@ -210,1 +210,1 @@\n-#define CHECK_STATIC_PTR_VOLATILE_VM_STRUCT_ENTRY(typeName, fieldName, type)       \\\n+#define CHECK_VOLATILE_STATIC_VM_STRUCT_ENTRY(typeName, fieldName, type)       \\\n","filename":"src\/hotspot\/share\/runtime\/vmStructs.hpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"}]}