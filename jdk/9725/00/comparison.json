{"files":[{"patch":"@@ -106,1 +106,0 @@\n-    private PanModeAction panModeAction;\n@@ -323,10 +322,0 @@\n-        ButtonGroup interactionButtons = new ButtonGroup();\n-\n-        panModeAction = new PanModeAction();\n-        panModeAction.setSelected(true);\n-        button = new JToggleButton(panModeAction);\n-        button.setSelected(true);\n-        interactionButtons.add(button);\n-        toolBar.add(button);\n-        panModeAction.addPropertyChangeListener(this);\n-\n@@ -335,1 +324,1 @@\n-        interactionButtons.add(button);\n+        button.setSelected(false);\n@@ -582,4 +571,3 @@\n-        } else if (evt.getSource() == this.selectionModeAction || evt.getSource() == this.panModeAction) {\n-            if (panModeAction.isSelected()) {\n-                scene.setInteractionMode(DiagramViewer.InteractionMode.PANNING);\n-            } else if (selectionModeAction.isSelected()) {\n+        } else if (evt.getSource() == this.selectionModeAction) {\n+            boolean b = (Boolean) selectionModeAction.getValue(SelectionModeAction.STATE);\n+            if (b) {\n@@ -587,0 +575,2 @@\n+            } else {\n+                scene.setInteractionMode(DiagramViewer.InteractionMode.PANNING);\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/EditorTopComponent.java","additions":6,"deletions":16,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -1,59 +0,0 @@\n-\/*\n- * Copyright (c) 2011, 2015, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-package com.sun.hotspot.igv.view.actions;\n-\n-import java.awt.event.ActionEvent;\n-import javax.swing.AbstractAction;\n-import javax.swing.Action;\n-import javax.swing.ImageIcon;\n-import org.openide.util.ImageUtilities;\n-\n-public class PanModeAction extends AbstractAction {\n-\n-    private boolean state;\n-\n-    public PanModeAction() {\n-        putValue(AbstractAction.SMALL_ICON, new ImageIcon(ImageUtilities.loadImage(iconResource())));\n-        putValue(SELECTED_KEY, false);\n-        putValue(Action.SHORT_DESCRIPTION, \"Panning mode\");\n-    }\n-\n-    public boolean isSelected() {\n-        return (Boolean)getValue(SELECTED_KEY);\n-    }\n-\n-    public void setSelected(boolean b) {\n-        if (isSelected() != b) {\n-            this.putValue(SELECTED_KEY, b);\n-        }\n-    }\n-\n-    protected String iconResource() {\n-        return \"com\/sun\/hotspot\/igv\/view\/images\/pan_mode.png\";\n-    }\n-\n-    @Override\n-    public void actionPerformed(ActionEvent e) {\n-    }\n-}\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/actions\/PanModeAction.java","additions":0,"deletions":59,"binary":false,"changes":59,"status":"deleted"},{"patch":"@@ -34,0 +34,4 @@\n+    private boolean state;\n+\n+    public static final String STATE = \"state\";\n+\n@@ -36,1 +40,0 @@\n-        putValue(SELECTED_KEY, false);\n@@ -38,0 +41,2 @@\n+        state = false;\n+        putValue(STATE, false);\n@@ -40,2 +45,3 @@\n-    public boolean isSelected() {\n-        return (Boolean)getValue(SELECTED_KEY);\n+    @Override\n+    public void actionPerformed(ActionEvent ev) {\n+        setState(!state);\n@@ -44,4 +50,3 @@\n-    public void setSelected(boolean b) {\n-        if (isSelected() != b) {\n-            this.putValue(SELECTED_KEY, b);\n-        }\n+    public void setState(boolean b) {\n+        this.putValue(STATE, b);\n+        this.state = b;\n@@ -53,4 +58,0 @@\n-\n-    @Override\n-    public void actionPerformed(ActionEvent e) {\n-    }\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/actions\/SelectionModeAction.java","additions":12,"deletions":11,"binary":false,"changes":23,"status":"modified"},{"filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/resources\/com\/sun\/hotspot\/igv\/view\/images\/pan_mode.png","binary":true,"status":"deleted"}]}