{"files":[{"patch":"@@ -630,1 +630,1 @@\n-class ThreadSuspensionHandshake : public AsyncHandshakeClosure {\n+class ThreadSelfSuspensionHandshake : public AsyncHandshakeClosure {\n@@ -632,1 +632,1 @@\n-  ThreadSuspensionHandshake() : AsyncHandshakeClosure(\"ThreadSuspension\") {}\n+  ThreadSelfSuspensionHandshake() : AsyncHandshakeClosure(\"ThreadSuspension\") {}\n@@ -634,2 +634,3 @@\n-    JavaThread* target = thr->as_Java_thread();\n-    target->handshake_state()->do_self_suspend();\n+    JavaThread* thread_current = thr->as_Java_thread();\n+    assert(thread_current == Thread::current(), \"Must be self executed.\");\n+    thread_current->handshake_state()->do_self_suspend();\n@@ -665,1 +666,1 @@\n-  ThreadSuspensionHandshake* ts = new ThreadSuspensionHandshake();\n+  ThreadSelfSuspensionHandshake* ts = new ThreadSelfSuspensionHandshake();\n","filename":"src\/hotspot\/share\/runtime\/handshake.cpp","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n-class ThreadSuspensionHandshake;\n+class ThreadSelfSuspensionHandshake;\n@@ -77,1 +77,1 @@\n-  friend ThreadSuspensionHandshake;\n+  friend ThreadSelfSuspensionHandshake;\n@@ -128,2 +128,1 @@\n-    \/\/ When doing thread suspension the holder of the _lock\n-    \/\/ can add an asynchronous handshake to queue.\n+    \/\/ The holder of the _lock can add an asynchronous handshake to queue.\n@@ -131,1 +130,1 @@\n-    \/\/ check the _lock, if held go to slow path.\n+    \/\/ check the _lock, and if held go to slow path.\n@@ -133,2 +132,2 @@\n-    \/\/ we know another thread cannot process any handshakes.\n-    \/\/ Now we can check queue if there is anything we should process.\n+    \/\/ we know other threads cannot process any handshakes.\n+    \/\/ Now we can check the queue to see if there is anything we should processs.\n","filename":"src\/hotspot\/share\/runtime\/handshake.hpp","additions":6,"deletions":7,"binary":false,"changes":13,"status":"modified"}]}