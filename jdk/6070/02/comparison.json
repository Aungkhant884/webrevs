{"files":[{"patch":"@@ -115,0 +115,1 @@\n+    SystemDictionaryShared::cleanup_lambda_proxy_class_dictionary();\n","filename":"src\/hotspot\/share\/cds\/dynamicArchive.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -524,0 +524,1 @@\n+  SystemDictionaryShared::cleanup_lambda_proxy_class_dictionary();\n","filename":"src\/hotspot\/share\/cds\/metaspaceShared.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1601,0 +1601,22 @@\n+class CleanupDumpTimeLambdaProxyClassTable: StackObj {\n+ public:\n+  bool do_entry(LambdaProxyClassKey& key, DumpTimeLambdaProxyClassInfo& info) {\n+    assert_lock_strong(DumpTimeTable_lock);\n+    for (int i = 0; i < info._proxy_klasses->length(); i++) {\n+      InstanceKlass* ik = info._proxy_klasses->at(i);\n+      if (!ik->can_be_verified_at_dumptime()) {\n+        info._proxy_klasses->remove_at(i);\n+      }\n+    }\n+    return info._proxy_klasses->length() == 0 ? true \/* delete the node*\/ : false;\n+  }\n+};\n+\n+void SystemDictionaryShared::cleanup_lambda_proxy_class_dictionary() {\n+  assert_lock_strong(DumpTimeTable_lock);\n+  if (_dumptime_lambda_proxy_class_dictionary != NULL) {\n+    CleanupDumpTimeLambdaProxyClassTable cleanup_proxy_classes;\n+    _dumptime_lambda_proxy_class_dictionary->unlink(&cleanup_proxy_classes);\n+  }\n+}\n+\n","filename":"src\/hotspot\/share\/classfile\/systemDictionaryShared.cpp","additions":22,"deletions":0,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -291,0 +291,1 @@\n+  static void cleanup_lambda_proxy_class_dictionary();\n","filename":"src\/hotspot\/share\/classfile\/systemDictionaryShared.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -358,0 +358,1 @@\n+ -runtime\/cds\/appcds\/LambdaContainsOldInf.java \\\n","filename":"test\/hotspot\/jtreg\/TEST.groups","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -0,0 +1,78 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8274944\n+ * @summary VM should not crash during CDS dump when a lambda proxy class\n+ *          contains an old version of interface.\n+ * @requires vm.cds\n+ * @library \/test\/lib\n+ * @compile test-classes\/OldProvider.jasm\n+ * @compile test-classes\/LambdaContainsOldInfApp.java\n+ * @run driver LambdaContainsOldInf\n+ *\/\n+\n+import jdk.test.lib.cds.CDSOptions;\n+import jdk.test.lib.cds.CDSTestUtils;\n+import jdk.test.lib.process.OutputAnalyzer;\n+\n+public class LambdaContainsOldInf {\n+\n+    public static void main(String[] args) throws Exception {\n+        String mainClass = \"LambdaContainsOldInfApp\";\n+        String namePrefix = \"lambdacontainsoldinf\";\n+        JarBuilder.build(namePrefix, mainClass, \"OldProvider\");\n+\n+        String appJar = TestCommon.getTestJar(namePrefix + \".jar\");\n+        String classList = namePrefix + \".list\";\n+        String archiveName = namePrefix + \".jsa\";\n+\n+        \/\/ dump class list\n+        CDSTestUtils.dumpClassList(classList, \"-cp\", appJar, mainClass);\n+\n+        \/\/ create archive with the class list\n+        CDSOptions opts = (new CDSOptions())\n+            .addPrefix(\"-XX:ExtraSharedClassListFile=\" + classList,\n+                       \"-cp\", appJar,\n+                       \"-Xlog:class+load,cds\")\n+            .setArchiveName(archiveName);\n+        OutputAnalyzer output = CDSTestUtils.createArchiveAndCheck(opts);\n+        TestCommon.checkExecReturn(output, 0, true,\n+                                   \"Skipping OldProvider: Old class has been linked\");\n+        output.shouldMatch(\"Skipping.LambdaContainsOldInfApp[$][$]Lambda[$].*0x.*:.*Old.class.has.been.linked\");\n+\n+        \/\/ run with archive\n+        CDSOptions runOpts = (new CDSOptions())\n+            .addPrefix(\"-cp\", appJar, \"-Xlog:class+load,cds=debug\")\n+            .setArchiveName(archiveName)\n+            .setUseVersion(false)\n+            .addSuffix(mainClass);\n+        output = CDSTestUtils.runWithArchive(runOpts);\n+        TestCommon.checkExecReturn(output, 0, true,\n+            \"[class,load] LambdaContainsOldInfApp source: shared objects file\");\n+        output.shouldMatch(\".class.load. OldProvider.source:.*lambdacontainsoldinf.jar\")\n+              .shouldMatch(\".class.load. LambdaContainsOldInfApp[$][$]Lambda[$].*\/0x.*source:.*LambdaContainsOldInf\");\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/LambdaContainsOldInf.java","additions":78,"deletions":0,"binary":false,"changes":78,"status":"added"},{"patch":"@@ -0,0 +1,81 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8274944\n+ * @summary VM should not crash during CDS dump when a lambda proxy class\n+ *          contains an old version of interface.\n+ * @requires vm.cds\n+ * @library \/test\/lib \/test\/hotspot\/jtreg\/runtime\/cds\/appcds\n+ *          \/test\/hotspot\/jtreg\/runtime\/cds\/appcds\/test-classes\n+ *          \/test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/test-classes\n+ * @build LambdaContainsOldInfApp sun.hotspot.WhiteBox OldProvider LambdaVerification\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller -jar lambda_contains_old_inf.jar LambdaVerification\n+ *             LambdaContainsOldInfApp OldProvider\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller -jar WhiteBox.jar sun.hotspot.WhiteBox\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller sun.hotspot.WhiteBox\n+ * @run main\/othervm -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI -Xbootclasspath\/a:. LambdaContainsOldInf\n+ *\/\n+\n+import jdk.test.lib.helpers.ClassFileInstaller;\n+\n+public class LambdaContainsOldInf extends DynamicArchiveTestBase {\n+    public static void main(String[] args) throws Exception {\n+        runTest(LambdaContainsOldInf::test);\n+    }\n+\n+    static void test() throws Exception {\n+        String topArchiveName = getNewArchiveName();\n+        String appJar = ClassFileInstaller.getJarPath(\"lambda_contains_old_inf.jar\");\n+        String mainClass = \"LambdaContainsOldInfApp\";\n+        String wbJar = ClassFileInstaller.getJarPath(\"WhiteBox.jar\");\n+        String use_whitebox_jar = \"-Xbootclasspath\/a:\" + wbJar;\n+\n+        dump(topArchiveName,\n+            \"-XX:+UnlockDiagnosticVMOptions\",\n+            \"-XX:+WhiteBoxAPI\",\n+            \"-Xlog:class+load=debug,cds=debug,cds+dynamic=info\",\n+            use_whitebox_jar,\n+            \"-cp\", appJar, mainClass)\n+            .assertNormalExit(output -> {\n+                output.shouldContain(\"Skipping OldProvider: Old class has been linked\")\n+                      .shouldMatch(\"Skipping.LambdaContainsOldInfApp[$][$]Lambda[$].*0x.*:.*Old.class.has.been.linked\")\n+                      .shouldHaveExitValue(0);\n+            });\n+\n+        run(topArchiveName,\n+            \"-XX:+UnlockDiagnosticVMOptions\",\n+            \"-XX:+WhiteBoxAPI\",\n+            use_whitebox_jar,\n+            \"-Xlog:class+load=debug\",\n+            \"-cp\", appJar, mainClass)\n+            .assertNormalExit(output -> {\n+                output.shouldContain(\"[class,load] LambdaContainsOldInfApp source: shared objects file (top)\")\n+                      .shouldMatch(\".class.load. OldProvider.source:.*lambda_contains_old_inf.jar\")\n+                      .shouldMatch(\".class.load. LambdaContainsOldInfApp[$][$]Lambda[$].*\/0x.*source:.*LambdaContainsOldInf\")\n+                      .shouldHaveExitValue(0);\n+            });\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/LambdaContainsOldInf.java","additions":81,"deletions":0,"binary":false,"changes":81,"status":"added"},{"patch":"@@ -0,0 +1,34 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+public class LambdaContainsOldInfApp {\n+    public static void main(final String... args) {\n+        getProvider();\n+    }\n+\n+    public static OldProvider getProvider() {\n+        return () -> {\n+            return null;\n+        };\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/test-classes\/LambdaContainsOldInfApp.java","additions":34,"deletions":0,"binary":false,"changes":34,"status":"added"},{"patch":"@@ -0,0 +1,29 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+public interface  OldProvider\n+\tversion 49:0\n+{\n+  public abstract Method get:\"()Ljava\/lang\/Object;\";\n+\n+} \/\/ end Class OldProvider\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/test-classes\/OldProvider.jasm","additions":29,"deletions":0,"binary":false,"changes":29,"status":"added"}]}