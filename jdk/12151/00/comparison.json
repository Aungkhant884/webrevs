{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -640,13 +640,0 @@\n-    void removeListener(ThreadListener listener) {\n-        synchronized (vm.state()) {\n-            Iterator<WeakReference<ThreadListener>> iter = listeners.iterator();\n-            while (iter.hasNext()) {\n-                WeakReference<ThreadListener> ref = iter.next();\n-                if (listener.equals(ref.get())) {\n-                    iter.remove();\n-                    break;\n-                }\n-            }\n-        }\n-    }\n-\n","filename":"src\/jdk.jdi\/share\/classes\/com\/sun\/tools\/jdi\/ThreadReferenceImpl.java","additions":1,"deletions":14,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -185,11 +185,0 @@\n-    synchronized void removeListener(VMListener listener) {\n-        Iterator<WeakReference<VMListener>> iter = listeners.iterator();\n-        while (iter.hasNext()) {\n-            WeakReference<VMListener> ref = iter.next();\n-            if (listener.equals(ref.get())) {\n-                iter.remove();\n-                break;\n-            }\n-        }\n-    }\n-\n","filename":"src\/jdk.jdi\/share\/classes\/com\/sun\/tools\/jdi\/VMState.java","additions":1,"deletions":12,"binary":false,"changes":13,"status":"modified"}]}