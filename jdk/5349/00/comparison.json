{"files":[{"patch":"@@ -555,0 +555,10 @@\n+        \/** Generate a base clause for a record type.\n+         *  @param pos              The position for trees and diagnostics, if any\n+         *  @param c                The class symbol of the record\n+         *\/\n+        protected  JCExpression recordBase(int pos, ClassSymbol c) {\n+            JCExpression result = make.at(pos).\n+                QualIdent(syms.recordType.tsym);\n+            return result;\n+        }\n+\n@@ -697,1 +707,4 @@\n-                : sym.isRecord() ? syms.recordType : syms.objectType;\n+                : sym.isRecord()\n+                ? attr.attribBase(recordBase(tree.pos, sym), baseEnv,\n+                                  true, false, false)\n+                : syms.objectType;\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/TypeEnter.java","additions":14,"deletions":1,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -61,0 +61,1 @@\n+        analyze(true, new String[] {\"--release\", \"8\", \"-XDshould-stop.at=FLOW\"}, \"TestGetElementReferenceDataWithRecord.java\");\n@@ -64,0 +65,4 @@\n+        analyze(allowErrors, new String[0], fileNames);\n+    }\n+\n+    private static void analyze(boolean allowErrors, String[] extraParams, String... fileNames) throws IOException {\n@@ -73,1 +78,3 @@\n-            List<String> options = List.of(\"-Xjcov\");\n+            List<String> options = new ArrayList<>();\n+            options.add(\"-Xjcov\");\n+            options.addAll(List.of(extraParams));\n","filename":"test\/langtools\/tools\/javac\/api\/TestGetElementReference.java","additions":8,"deletions":1,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -0,0 +1,29 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package test;\n+\n+public record TestGetElementReferenceDataWithRecord(String\/*getElement:CLASS:java.lang.String*\/ s1,\n+                                                    String\/*getElement:CLASS:java.lang.String*\/ s2) implements I {}\n+\n+interface I {}\n","filename":"test\/langtools\/tools\/javac\/api\/TestGetElementReferenceDataWithRecord.java","additions":29,"deletions":0,"binary":false,"changes":29,"status":"added"}]}