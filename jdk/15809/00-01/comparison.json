{"files":[{"patch":"@@ -779,1 +779,1 @@\n-      log_debug(class, init)(\"Thread %s waiting for linking of %s by thread %s\",\n+      log_debug(class, init)(\"Thread \\\"%s\\\" waiting for linking of %s by thread \\\"%s\\\"\",\n@@ -789,1 +789,1 @@\n-      log_debug(class, init)(\"Thread %s recursively linking %s\",\n+      log_debug(class, init)(\"Thread \\\"%s\\\" recursively linking %s\",\n@@ -799,1 +799,1 @@\n-      log_debug(class, init)(\"Thread %s linking %s\",\n+      log_debug(class, init)(\"Thread \\\"%s\\\" linking %s\",\n@@ -807,1 +807,1 @@\n-      log_debug(class, init)(\"Thread %s found %s already linked\",\n+      log_debug(class, init)(\"Thread \\\"%s\\\" found %s already linked\",\n@@ -1095,1 +1095,1 @@\n-        log_debug(class, init)(\"Thread %s waiting for initialization of %s by thread %s\",\n+        log_debug(class, init)(\"Thread \\\"%s\\\" waiting for initialization of %s by thread \\\"%s\\\"\",\n@@ -1109,1 +1109,1 @@\n-        log_debug(class, init)(\"Thread %s recursively initializing %s\",\n+        log_debug(class, init)(\"Thread \\\"%s\\\" recursively initializing %s\",\n@@ -1120,1 +1120,1 @@\n-        log_debug(class, init)(\"Thread %s found %s already initialized\",\n+        log_debug(class, init)(\"Thread \\\"%s\\\" found %s already initialized\",\n@@ -1131,1 +1131,1 @@\n-        log_debug(class, init)(\"Thread %s found %s is in error state\",\n+        log_debug(class, init)(\"Thread \\\"%s\\\" found %s is in error state\",\n@@ -1142,1 +1142,1 @@\n-        log_debug(class, init)(\"Thread %s is initializing %s\",\n+        log_debug(class, init)(\"Thread \\\"%s\\\" is initializing %s\",\n@@ -1618,1 +1618,1 @@\n-    ls.print_cr(\"%s (\" PTR_FORMAT \") by thread %s\",\n+    ls.print_cr(\"%s (\" PTR_FORMAT \") by thread \\\"%s\\\"\",\n","filename":"src\/hotspot\/share\/oops\/instanceKlass.cpp","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -502,1 +502,1 @@\n-    assert(_init_monitor->owned_by_self(), \" Must hold _init_monitor here\");\n+    assert(_init_monitor->owned_by_self(), \"Must hold _init_monitor here\");\n","filename":"src\/hotspot\/share\/oops\/instanceKlass.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}