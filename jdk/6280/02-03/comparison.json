{"files":[{"patch":"@@ -29,3 +29,3 @@\n-REGISTER_IMPL_DEFINITION(Register, RegisterImpl);\n-REGISTER_IMPL_DEFINITION(FloatRegister, FloatRegisterImpl);\n-REGISTER_IMPL_DEFINITION(PRegister, PRegisterImpl);\n+REGISTER_IMPL_DEFINITION(Register, RegisterImpl, RegisterImpl::number_of_declared_registers);\n+REGISTER_IMPL_DEFINITION(FloatRegister, FloatRegisterImpl, FloatRegisterImpl::number_of_registers);\n+REGISTER_IMPL_DEFINITION(PRegister, PRegisterImpl, PRegisterImpl::number_of_registers);\n","filename":"src\/hotspot\/cpu\/aarch64\/register_aarch64.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-  static constexpr Register invalid() { return first() + number_of_declared_registers; }\n+  static constexpr Register invalid() { return first() + number_of_registers; }\n@@ -70,1 +70,1 @@\n-REGISTER_IMPL_DECLARATION(Register, RegisterImpl);\n+REGISTER_IMPL_DECLARATION(Register, RegisterImpl, RegisterImpl::number_of_declared_registers);\n@@ -142,1 +142,1 @@\n-  static constexpr FloatRegister invalid() { return first() + number_of_declared_registers; }\n+  static constexpr FloatRegister invalid() { return first() + number_of_registers; }\n@@ -147,1 +147,0 @@\n-    number_of_declared_registers = 32,\n@@ -166,1 +165,1 @@\n-REGISTER_IMPL_DECLARATION(FloatRegister, FloatRegisterImpl);\n+REGISTER_IMPL_DECLARATION(FloatRegister, FloatRegisterImpl, FloatRegisterImpl::number_of_registers);\n@@ -171,1 +170,1 @@\n-CONSTANT_REGISTER_DECLARATION(FloatRegister, fnoreg , (FloatRegisterImpl::number_of_declared_registers));\n+CONSTANT_REGISTER_DECLARATION(FloatRegister, fnoreg , (FloatRegisterImpl::number_of_registers));\n@@ -250,1 +249,1 @@\n-  static constexpr PRegister invalid() { return first() + number_of_declared_registers; }\n+  static constexpr PRegister invalid() { return first() + number_of_registers; }\n@@ -255,1 +254,0 @@\n-    number_of_declared_registers = 16,\n@@ -274,1 +272,1 @@\n-REGISTER_IMPL_DECLARATION(PRegister, PRegisterImpl);\n+REGISTER_IMPL_DECLARATION(PRegister, PRegisterImpl, PRegisterImpl::number_of_registers);\n","filename":"src\/hotspot\/cpu\/aarch64\/register_aarch64.hpp","additions":7,"deletions":9,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -55,2 +55,2 @@\n-#define CONSTANT_REGISTER_DECLARATION(type, name, value)        \\\n-const type name = ((type)value);                                \\\n+#define CONSTANT_REGISTER_DECLARATION(type, name, value)                \\\n+const type name = ((type)value);                                        \\\n@@ -62,1 +62,1 @@\n-#define REGISTER_IMPL_DECLARATION(type, impl_type)                      \\\n+#define REGISTER_IMPL_DECLARATION(type, impl_type, reg_count)           \\\n@@ -64,1 +64,0 @@\n-  assert(encoding <= impl_type::number_of_declared_registers, \"invalid register\"); \\\n@@ -67,1 +66,1 @@\n-extern impl_type all_ ## type ## s[impl_type::number_of_declared_registers] INTERNAL_VISIBILITY; \\\n+extern impl_type all_ ## type ## s[reg_count + 1] INTERNAL_VISIBILITY;  \\\n@@ -70,2 +69,2 @@\n-#define REGISTER_IMPL_DEFINITION(type, impl_type)                    \\\n-impl_type all_ ## type ## s[impl_type::number_of_declared_registers];\n+#define REGISTER_IMPL_DEFINITION(type, impl_type, reg_count)            \\\n+impl_type all_ ## type ## s[reg_count + 1];\n@@ -73,2 +72,1 @@\n-#undef CONSTANT_REGISTER_DECLARATION\n-#define CONSTANT_REGISTER_DECLARATION(type, name, value)        \\\n+#define CONSTANT_REGISTER_DECLARATION(type, name, value)                \\\n","filename":"src\/hotspot\/share\/asm\/register.hpp","additions":7,"deletions":9,"binary":false,"changes":16,"status":"modified"}]}