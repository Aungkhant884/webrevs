{"files":[{"patch":"@@ -171,0 +171,9 @@\n+ * <tr><th scope=\"row\" style=\"vertical-align:top\">{@code UTF-32BE}<\/th>\n+ *     <td>Thirty-two-bit UCS Transformation Format,\n+ *         big-endian byte&nbsp;order<\/td><\/tr>\n+ * <tr><th scope=\"row\" style=\"vertical-align:top\">{@code UTF-32LE}<\/th>\n+ *     <td>Thirty-two-bit UCS Transformation Format,\n+ *         little-endian byte&nbsp;order<\/td><\/tr>\n+ * <tr><th scope=\"row\" style=\"vertical-align:top\">{@code UTF-32}<\/th>\n+ *     <td>Thirty-two-bit UCS Transformation Format,\n+ *         byte&nbsp;order identified by an optional byte-order mark<\/td><\/tr>\n@@ -177,1 +186,1 @@\n- * Amendment&nbsp;2 of ISO&nbsp;10646-1 and is also described in the <a\n+ * ISO&nbsp;10646-1 and is also described in the <a\n@@ -184,1 +193,7 @@\n- * Amendment&nbsp;1 of ISO&nbsp;10646-1 and are also described in the <a\n+ * ISO&nbsp;10646-1 and are also described in the <a\n+ * href=\"http:\/\/www.unicode.org\/standard\/standard.html\"><i>Unicode\n+ * Standard<\/i><\/a>.\n+ *\n+ * <p> The {@code UTF-32} charsets are based upon transformation formats\n+ * which are specified in\n+ * ISO&nbsp;10646-1 and are also described in the <a\n@@ -188,1 +203,2 @@\n- * <p> The {@code UTF-16} charsets use sixteen-bit quantities and are\n+ * <p> The {@code UTF-16} and {@code UTF-32} charsets use sixteen-bit and thirty-two-bit\n+ * quantities respectively, and are\n@@ -191,1 +207,1 @@\n- * the Unicode character <code>'&#92;uFEFF'<\/code>.  Byte-order marks are handled\n+ * the Unicode character {@code U+FEFF}.  Byte-order marks are handled\n@@ -196,1 +212,2 @@\n- *   <li><p> When decoding, the {@code UTF-16BE} and {@code UTF-16LE}\n+ *   <li><p> When decoding, the {@code UTF-16BE}, {@code UTF-16LE},\n+ *   {@code UTF-32BE}, and {@code UTF-32LE}\n@@ -201,1 +218,1 @@\n- *   <li><p> When decoding, the {@code UTF-16} charset interprets the\n+ *   <li><p> When decoding, the {@code UTF-16} and {@code UTF-32} charsets interpret the\n","filename":"src\/java.base\/share\/classes\/java\/nio\/charset\/Charset.java","additions":23,"deletions":6,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -77,0 +77,19 @@\n+\n+    \/**\n+     * Thirty-two-bit UCS Transformation Format, big-endian byte order.\n+     * @since 22\n+     *\/\n+    public static final Charset UTF_32BE = new sun.nio.cs.UTF_32BE();\n+\n+    \/**\n+     * Thirty-two-bit UCS Transformation Format, little-endian byte order.\n+     * @since 22\n+     *\/\n+    public static final Charset UTF_32LE = new sun.nio.cs.UTF_32LE();\n+\n+    \/**\n+     * Thirty-two-bit UCS Transformation Format, byte order identified by an\n+     * optional byte-order mark.\n+     * @since 22\n+     *\/\n+    public static final Charset UTF_32 = new sun.nio.cs.UTF_32();\n","filename":"src\/java.base\/share\/classes\/java\/nio\/charset\/StandardCharsets.java","additions":20,"deletions":1,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -96,0 +96,3 @@\n+            map.put(\"utf-32\", java.nio.charset.StandardCharsets.UTF_32);\n+            map.put(\"utf-32be\", java.nio.charset.StandardCharsets.UTF_32BE);\n+            map.put(\"utf-32le\", java.nio.charset.StandardCharsets.UTF_32LE);\n","filename":"src\/java.base\/share\/classes\/sun\/nio\/cs\/StandardCharsets.java.template","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 4884238\n+ * @bug 4884238 8310047\n@@ -44,1 +44,3 @@\n-        \"UTF-16BE\", \"UTF-16LE\", \"UTF-16\" };\n+        \"UTF-16BE\", \"UTF-16LE\", \"UTF-16\",\n+        \"UTF-32BE\", \"UTF-32LE\", \"UTF-32\",\n+    };\n@@ -53,0 +55,3 @@\n+        check(StandardCharsets.UTF_32BE instanceof Charset);\n+        check(StandardCharsets.UTF_32LE instanceof Charset);\n+        check(StandardCharsets.UTF_32 instanceof Charset);\n@@ -60,0 +65,3 @@\n+        check(\"UTF-32BE\".equals(StandardCharsets.UTF_32BE.name()));\n+        check(\"UTF-32LE\".equals(StandardCharsets.UTF_32LE.name()));\n+        check(\"UTF-32\".equals(StandardCharsets.UTF_32.name()));\n@@ -67,0 +75,3 @@\n+        check(Charset.forName(\"UTF-32BE\") == StandardCharsets.UTF_32BE);\n+        check(Charset.forName(\"UTF-32LE\") == StandardCharsets.UTF_32LE);\n+        check(Charset.forName(\"UTF-32\") == StandardCharsets.UTF_32);\n","filename":"test\/jdk\/java\/nio\/charset\/StandardCharsets\/Standard.java","additions":14,"deletions":3,"binary":false,"changes":17,"status":"modified"}]}