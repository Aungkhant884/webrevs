{"files":[{"patch":"@@ -725,9 +725,5 @@\n-is permitted alongside <code>alignas<\/code> for querying the alignment\n-of a complete object type, an array type with a complete element type,\n-or a reference type to either as an alternative to\n-<code>std::alignment_of&lt;&gt;<\/code>.\n-<code>std::alignment_of&lt;&gt;<\/code> precedes the operator in the\n-development of the language and just returns the corresponding\n-<code>alignof<\/code> value, the operator simply provides less verbose\n-syntax for doing so. Newer code should prefer <code>alignof<\/code> to\n-<code>std::alignment_of&lt;&gt;<\/code> if possible.<\/p>\n+is permitted alongside <code>alignas<\/code> for checking alignment as a\n+less verbose alternative to <code>std::alignment_of&lt;&gt;<\/code>. The\n+template precedes the operator in the language, so <code>alignof<\/code>\n+should be preferred to <code>std::alignment_of&lt;&gt;<\/code> if\n+possible.<\/p>\n","filename":"doc\/hotspot-style.html","additions":5,"deletions":9,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -703,6 +703,4 @@\n-is permitted alongside `alignas` for querying the alignment of a complete object\n-type, an array type with a complete element type, or a reference type to either as\n-an alternative to `std::alignment_of<>`. `std::alignment_of<>` precedes the\n-operator in the development of the language and just returns the corresponding\n-`alignof` value, the operator simply provides less verbose syntax for doing so.\n-Newer code should prefer `alignof` to `std::alignment_of<>` if possible.\n+is permitted alongside `alignas` for checking alignment as a less verbose\n+alternative to `std::alignment_of<>`. The template precedes the operator\n+in the language, so `alignof` should be preferred to `std::alignment_of<>`\n+if possible.\n","filename":"doc\/hotspot-style.md","additions":4,"deletions":6,"binary":false,"changes":10,"status":"modified"}]}