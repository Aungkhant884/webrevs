{"files":[{"patch":"@@ -76,0 +76,1 @@\n+<li><a href=\"#alignof\" id=\"toc-alignof\">alignof<\/a><\/li>\n@@ -721,0 +722,8 @@\n+<h3 id=\"alignof\">alignof<\/h3>\n+<p><code>alignof<\/code> (<a\n+href=\"https:\/\/www.open-std.org\/jtc1\/sc22\/wg21\/docs\/papers\/2007\/n2341.pdf\">n2341<\/a>)\n+is permitted alongside <code>alignas<\/code> for checking alignment as a\n+less verbose alternative to <code>std::alignment_of&lt;&gt;<\/code>. The\n+template precedes the operator in the language, so <code>alignof<\/code>\n+should be preferred to <code>std::alignment_of&lt;&gt;<\/code> if\n+possible.<\/p>\n","filename":"doc\/hotspot-style.html","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -699,0 +699,9 @@\n+### alignof\n+\n+`alignof`\n+([n2341](https:\/\/www.open-std.org\/jtc1\/sc22\/wg21\/docs\/papers\/2007\/n2341.pdf))\n+is permitted alongside `alignas` for checking alignment as a less verbose\n+alternative to `std::alignment_of<>`. The template precedes the operator\n+in the language, so `alignof` should be preferred to `std::alignment_of<>`\n+if possible.\n+\n","filename":"doc\/hotspot-style.md","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"}]}