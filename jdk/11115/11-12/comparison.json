{"files":[{"patch":"@@ -225,9 +225,2 @@\n-  int printed_len = os::snprintf(buf, sizeof(buf), \"0x%02x:0x%x:0x%03x:%d\", _cpu, _variant, _model, _revision);\n-  assert(printed_len > 0, \"error occurs at os::snprintf\");\n-  assert((size_t)printed_len < sizeof(buf), \"insufficient buf\");\n-  if (_model2) {\n-    size_t remaining_size = sizeof(buf) - printed_len;\n-    printed_len = os::snprintf(buf + printed_len, remaining_size, \"(0x%03x)\", _model2);\n-    assert(printed_len > 0, \"error occurs for os::snprintf\");\n-    assert((size_t)printed_len < remaining_size, \"insufficient buf\");\n-  }\n+  int buf_used_len = os::snprintf_checked(buf, sizeof(buf), \"0x%02x:0x%x:0x%03x:%d\", _cpu, _variant, _model, _revision);\n+  if (_model2) os::snprintf_checked(buf + buf_used_len, sizeof(buf) - buf_used_len, \"(0x%03x)\", _model2);\n","filename":"src\/hotspot\/cpu\/aarch64\/vm_version_aarch64.cpp","additions":2,"deletions":9,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -251,3 +251,1 @@\n-  int printed_ver_len = os::snprintf(ver_str, sizeof(ver_str), \"%d\", ATTACH_PROTOCOL_VER);\n-  assert(printed_ver_len > 0, \"error occurs at os::snprintf\");\n-  assert((size_t)printed_ver_len < sizeof(ver_str), \"insufficient ver_str buf\");\n+  size_t ver_str_len = os::snprintf_checked(ver_str, sizeof(ver_str), \"%d\", ATTACH_PROTOCOL_VER);\n@@ -262,1 +260,1 @@\n-  const int max_len = (printed_ver_len + 1) + (AttachOperation::name_length_max + 1) +\n+  const int max_len = (ver_str_len + 1) + (AttachOperation::name_length_max + 1) +\n@@ -293,1 +291,1 @@\n-          if ((strlen(buf) != (size_t)printed_ver_len) ||\n+          if ((strlen(buf) != ver_str_len) ||\n@@ -296,4 +294,2 @@\n-            int printed_msg_len = os::snprintf(msg, sizeof(msg), \"%d\\n\", ATTACH_ERROR_BADVERSION);\n-            assert(printed_msg_len > 0, \"error occurs at os::snprintf\");\n-            assert((size_t)printed_msg_len < sizeof(msg), \"insufficient msg buf\");\n-            write_fully(s, msg, printed_msg_len);\n+            int msg_len = os::snprintf_checked(msg, sizeof(msg), \"%d\\n\", ATTACH_ERROR_BADVERSION);\n+            write_fully(s, msg, msg_len);\n@@ -418,4 +414,2 @@\n-  int printed_msg_len = os::snprintf(msg, sizeof(msg), \"%d\\n\", result);\n-  assert(printed_msg_len > 0, \"error occurs at os::snprintf\");\n-  assert((size_t)printed_msg_len < sizeof(msg), \"insufficient msg buf\");\n-  int rc = BsdAttachListener::write_fully(this->socket(), msg, printed_msg_len);\n+  int msg_len = os::snprintf_checked(msg, sizeof(msg), \"%d\\n\", result);\n+  int rc = BsdAttachListener::write_fully(this->socket(), msg, msg_len);\n","filename":"src\/hotspot\/os\/bsd\/attachListener_bsd.cpp","additions":7,"deletions":13,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -382,3 +382,1 @@\n-    int printed_len = os::snprintf(ld_library_path, ld_library_path_size, \"%s%s\" SYS_EXT_DIR \"\/lib\/%s:\" DEFAULT_LIBPATH, v, v_colon, cpu_arch);\n-    assert(printed_len > 0, \"error occurs at os::snprintf\");\n-    assert((size_t)printed_len < ld_library_path_size, \"insufficient ld_library_path buf\");\n+    os::snprintf_checked(ld_library_path, ld_library_path_size, \"%s%s\" SYS_EXT_DIR \"\/lib\/%s:\" DEFAULT_LIBPATH, v, v_colon, cpu_arch);\n@@ -390,3 +388,1 @@\n-  int printed_len = os::snprintf(buf, bufsize, \"%s\" EXTENSIONS_DIR \":\" SYS_EXT_DIR EXTENSIONS_DIR, Arguments::get_java_home());\n-  assert(printed_len > 0, \"error occurs at os::snprintf\");\n-  assert((size_t)printed_len < bufsize, \"insufficient buf\");\n+  os::snprintf_checked(buf, bufsize, \"%s\" EXTENSIONS_DIR \":\" SYS_EXT_DIR EXTENSIONS_DIR, Arguments::get_java_home());\n@@ -479,1 +475,1 @@\n-    int printed_len = os::snprintf(ld_library_path, ld_library_path_size, \"%s%s%s%s%s\" SYS_EXTENSIONS_DIR \":\" SYS_EXTENSIONS_DIRS \":.\",\n+    os::snprintf_checked(ld_library_path, ld_library_path_size, \"%s%s%s%s%s\" SYS_EXTENSIONS_DIR \":\" SYS_EXTENSIONS_DIRS \":.\",\n@@ -481,2 +477,0 @@\n-    assert(printed_len > 0, \"error occurs at os::snprintf\");\n-    assert((size_t)printed_len < ld_library_path_size, \"insufficient ld_library_path buf\");\n@@ -492,1 +486,1 @@\n-  int printed_len = os::snprintf(buf, bufsize, \"%s\" SYS_EXTENSIONS_DIR \":%s\" EXTENSIONS_DIR \":\" SYS_EXTENSIONS_DIRS,\n+  os::snprintf_checked(buf, bufsize, \"%s\" SYS_EXTENSIONS_DIR \":%s\" EXTENSIONS_DIR \":\" SYS_EXTENSIONS_DIRS,\n@@ -494,2 +488,0 @@\n-  assert(printed_len > 0, \"error occurs at os::snprintf\");\n-  assert((size_t)printed_len < bufsize, \"insufficient buf\");\n","filename":"src\/hotspot\/os\/bsd\/os_bsd.cpp","additions":4,"deletions":12,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -216,3 +216,1 @@\n-          int printed_len = snprintf(buf, buf_size, \"%s_%d\", instr->_ident, match_rules_cnt++);\n-          assert(printed_len > 0, \"error occurs at snprintf\");\n-          assert((size_t)printed_len < buf_size, \"insufficient buf\");\n+          snprintf_checked(buf, buf_size, \"%s_%d\", instr->_ident, match_rules_cnt++);\n@@ -2884,3 +2882,2 @@\n-  int printed_len = snprintf(ec_name, ec_name_size, \"%s%s\", prefix, inst._ident);\n-  assert(printed_len > 0, \"error occurs at snprintf\");\n-  assert((size_t)printed_len < ec_name_size, \"insufficient ec_name buf\");\n+  snprintf(ec_name, ec_name_size, \"%s%s\", prefix, inst._ident);\n+\n@@ -3357,3 +3354,2 @@\n-  int printed_len = snprintf(ec_name, ec_name_size, \"%s%s\", prefix, inst._ident);\n-  assert(printed_len > 0, \"error occurs at snprintf\");\n-  assert((size_t)printed_len < ec_name_size, \"insufficient ec_name buf\");\n+  snprintf(ec_name, ec_name_size, \"%s%s\", prefix, inst._ident);\n+\n@@ -4679,3 +4675,1 @@\n-      int printed_len = snprintf(buf, buf_size, \"(%s)\", param);\n-      assert(printed_len > 0, \"error occurs at snprintf\");\n-      assert((size_t)printed_len < buf_size, \"insufficient buf\");\n+      snprintf(buf, buf_size, \"(%s)\", param);\n@@ -5290,3 +5284,1 @@\n-  int printed_len = snprintf(location, location_size, \"\\n#line %d \\\"%s\\\"\\n\", line, file);\n-  assert(printed_len > 0, \"error occurs at snprintf\");\n-  assert((size_t)printed_len < location_size, \"insufficient location buf\");\n+  snprintf(location, location_size, \"\\n#line %d \\\"%s\\\"\\n\", line, file);\n","filename":"src\/hotspot\/share\/adlc\/adlparse.cpp","additions":7,"deletions":15,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -818,3 +818,1 @@\n-    int printed_len = snprintf(regMask, length, \"%s%s()\", rc_name, mask);\n-    assert(printed_len > 0, \"error occurs at snprintf\");\n-    assert(printed_len < length, \"insufficient regMask buf\");\n+    snprintf(regMask, length, \"%s%s()\", rc_name, mask);\n@@ -913,3 +911,1 @@\n-  int printed_len = snprintf(result, length, \"%s%s\", stack_or, reg_mask_name);\n-  assert(printed_len > 0, \"error occurs at snprintf\");\n-  assert(printed_len < length, \"insufficient result buf\");\n+  snprintf(result, length, \"%s%s\", stack_or, reg_mask_name);\n","filename":"src\/hotspot\/share\/adlc\/archDesc.cpp","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -215,3 +215,1 @@\n-    int printed_len = snprintf(Expr::buffer(), STRING_BUFFER_LENGTH, \"_kids[0]->_cost[%s]\", lchild_to_upper);\n-    assert(printed_len > 0, \"error occurs at snprintf\");\n-    assert(printed_len < STRING_BUFFER_LENGTH, \"lchild_to_upper overflow\");\n+    snprintf(Expr::buffer(), STRING_BUFFER_LENGTH, \"_kids[0]->_cost[%s]\", lchild_to_upper);\n@@ -223,3 +221,1 @@\n-    int printed_len = snprintf(Expr::buffer(), STRING_BUFFER_LENGTH, \"_kids[1]->_cost[%s]\", rchild_to_upper);\n-    assert(printed_len > 0, \"error occurs at snprintf\");\n-    assert(printed_len < STRING_BUFFER_LENGTH, \"rchild_to_upper overflow\");\n+    snprintf(Expr::buffer(), STRING_BUFFER_LENGTH, \"_kids[1]->_cost[%s]\", rchild_to_upper);\n","filename":"src\/hotspot\/share\/adlc\/dfa.cpp","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1538,4 +1538,1 @@\n-      size_t remaining_len = remaining_buflen(buf, s);\n-      int printed_len =  snprintf(s, remaining_len, \"\/*%s*\/(\",(char*)i._key);\n-      assert(printed_len > 0, \"error occurs at snprintf\");\n-      assert((size_t)printed_len < remaining_len, \"insufficient buf\");\n+      snprintf(s, remaining_buflen(buf, s), \"\/*%s*\/(\",(char*)i._key);\n@@ -3480,3 +3477,1 @@\n-  int printed_len = snprintf(subtree, len, \"_%s_%s_%s\", _opType, lstr, rstr);\n-  assert(printed_len > 0, \"error occurs at snprintf\");\n-  assert(printed_len < len, \"insufficient buf\");\n+  snprintf(subtree, len, \"_%s_%s_%s\", _opType, lstr, rstr);\n","filename":"src\/hotspot\/share\/adlc\/formssel.cpp","additions":2,"deletions":7,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -469,3 +469,1 @@\n-  int printed_len = snprintf(fname,len,\"%s%s\",base,suffix);\n-  assert(printed_len > 0, \"error occurs at snprintf\");\n-  assert(printed_len < len, \"insufficient fname buf\");\n+  snprintf(fname,len,\"%s%s\",base,suffix);\n","filename":"src\/hotspot\/share\/adlc\/main.cpp","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -217,8 +217,3 @@\n-    size_t remaining_len = operand_stages_size - templen;\n-    int printed_len = snprintf(&operand_stages[templen],\n-        remaining_len, \"  stage_%s%c\\n\",\n-        tmppipeopnd ? tmppipeopnd->_stage : \"undefined\",\n-        (++i < paramcount ? ',' : ' ') );\n-    assert(printed_len > 0, \"error occurs at snprintf\");\n-    assert((size_t)printed_len < remaining_len, \"insufficient operand_stages buf\");\n-    templen += printed_len;\n+    templen += snprintf(&operand_stages[templen], operand_stages_size - templen, \"  stage_%s%c\\n\",\n+      tmppipeopnd ? tmppipeopnd->_stage : \"undefined\",\n+      (++i < paramcount ? ',' : ' ') );\n@@ -296,9 +291,5 @@\n-    size_t remaining_len = resource_stages_size - templen;\n-    int printed_len = snprintf(&resource_stages[templen],\n-        remaining_len, \"  stage_%s%-*s \/\/ %s\\n\",\n-        resname, max_stage - (int)strlen(resname) + 1,\n-        (i < pipeline->_rescount-1) ? \",\" : \"\",\n-        pipeline->_reslist.name(i));\n-    assert(printed_len > 0, \"error occurs at snprintf\");\n-    assert((size_t)printed_len < remaining_len, \"insufficient resource_stages buf\");\n-    templen += printed_len;\n+\n+    templen += snprintf(&resource_stages[templen], resource_stages_size - templen, \"  stage_%s%-*s \/\/ %s\\n\",\n+      resname, max_stage - (int)strlen(resname) + 1,\n+      (i < pipeline->_rescount-1) ? \",\" : \"\",\n+      pipeline->_reslist.name(i));\n@@ -361,2 +352,0 @@\n-    assert(templen > 0, \"error occurs at snprintf\");\n-    assert((size_t)templen < sizeof(temp), \"insufficient temp buf\");\n@@ -377,7 +366,2 @@\n-    size_t remaining_len = resource_cycles_size - templen;\n-    int printed_len = snprintf(&resource_cycles[templen], remaining_len,\n-        \"  %*d%c \/\/ %s\\n\", cyclelen, res_cycles[i],\n-        (i < pipeline->_rescount-1) ? ',' : ' ', pipeline->_reslist.name(i));\n-    assert(printed_len > 0, \"error occurs at snprintf\");\n-    assert((size_t)printed_len < remaining_len, \"insufficient resource_cycles buf\");\n-    templen += printed_len;\n+    templen += snprintf(&resource_cycles[templen], resource_cycles_size - templen, \"  %*d%c \/\/ %s\\n\",\n+      cyclelen, res_cycles[i], (i < pipeline->_rescount-1) ? ',' : ' ', pipeline->_reslist.name(i));\n@@ -480,3 +464,2 @@\n-    size_t remaining_len = resource_mask_size - templen;\n-    int formatlen = snprintf(&resource_mask[templen],\n-        remaining_len, \"  %s(0x%0*x, %*d, %*d, %s %s(\",\n+    int formatlen =\n+      snprintf(&resource_mask[templen], resource_mask_size - templen, \"  %s(0x%0*x, %*d, %*d, %s %s(\",\n@@ -488,2 +471,1 @@\n-    assert(formatlen > 0, \"error occurs at snprintf\");\n-    assert((size_t)formatlen < remaining_len, \"insufficient resource_mask buf\");\n+\n@@ -522,5 +504,2 @@\n-      remaining_len = resource_mask_size - templen;\n-      formatlen = snprintf(&resource_mask[templen],\n-          remaining_len, \"0x%08x%s\", res_mask[j], j > 0 ? \", \" : \"\");\n-      assert(formatlen > 0, \"error occurs at snprintf\");\n-      assert((size_t)formatlen < remaining_len, \"insufficient resource_mask buf\");\n+      formatlen =\n+        snprintf(&resource_mask[templen], resource_mask_size - templen, \"0x%08x%s\", res_mask[j], j > 0 ? \", \" : \"\");\n@@ -557,1 +536,1 @@\n-    int printed_len = snprintf(args, 37, \"0x%x, 0x%x, %u\",\n+    snprintf(args, 37, \"0x%x, 0x%x, %u\",\n@@ -559,2 +538,0 @@\n-    assert(printed_len > 0, \"error occurs at snprintf\");\n-    assert(printed_len < 37, \"insufficient resources_used buf\");\n@@ -1097,3 +1074,1 @@\n-        int printed_len = snprintf(inst_prefix, sizeof(inst_prefix), \"inst%d_\",   inst_position);\n-        assert(printed_len > 0, \"error occurs at snprintf\");\n-        assert((size_t)printed_len < sizeof(inst_prefix), \"inst_prefix buf overflow\");\n+        snprintf(inst_prefix, sizeof(inst_prefix), \"inst%d_\",   inst_position);\n@@ -1101,3 +1076,1 @@\n-        printed_len = snprintf(receiver, sizeof(receiver), \"inst%d->\", inst_position);\n-        assert(printed_len > 0, \"error occurs at snprintf\");\n-        assert((size_t)printed_len < sizeof(receiver), \"receiver buf overflow\");\n+        snprintf(receiver, sizeof(receiver), \"inst%d->\", inst_position);\n@@ -1197,3 +1170,1 @@\n-          int printed_len = snprintf(left_reg_index, sizeof(left_reg_index), \",inst%u_idx%u\", (unsigned)left_index, (unsigned)left_op_index);\n-          assert(printed_len > 0, \"error occurs at snprintf\");\n-          assert((size_t)printed_len < sizeof(left_reg_index), \"left_reg_index buf overflow\");\n+          snprintf(left_reg_index, sizeof(left_reg_index), \",inst%u_idx%u\", (unsigned)left_index, (unsigned)left_op_index);\n@@ -1211,3 +1182,1 @@\n-            int printed_len = snprintf(right_reg_index, sizeof(right_reg_index), \",inst%u_idx%u\", (unsigned)right_index, (unsigned)right_op_index);\n-            assert(printed_len > 0, \"error occurs at snprintf\");\n-            assert((size_t)printed_len < sizeof(right_reg_index), \"right_reg_index buf overflow\");\n+            snprintf(right_reg_index, sizeof(right_reg_index), \",inst%u_idx%u\", (unsigned)right_index, (unsigned)right_op_index);\n@@ -2602,14 +2571,3 @@\n-      size_t remaining_len = remaining_buflen(idxbuf, ib);\n-      int printed_len = snprintf(ib, remaining_len,\n-          \"  unsigned idx_%-5s = mach_constant_base_node_input(); \\t\/\/ %s, \\t%s\\n\",\n-          name, type, arg_name);\n-      assert(printed_len > 0, \"error occurs at snprintf\");\n-      assert((size_t)printed_len < remaining_len, \"ib buf overflow\");\n-      ib += printed_len;\n-\n-      remaining_len = remaining_buflen(nbuf, nb);\n-      printed_len = snprintf(nb, remaining_len,\n-          \"  Node    *n_%-7s = lookup(idx_%s);\\n\", name, name);\n-      assert(printed_len > 0, \"error occurs at snprintf\");\n-      assert((size_t)printed_len < remaining_len, \"nb buf overflow\");\n-      nb += printed_len;\n+      ib += snprintf(ib, remaining_buflen(idxbuf, ib), \"  unsigned idx_%-5s = mach_constant_base_node_input(); \\t\/\/ %s, \\t%s\\n\",\n+                    name, type, arg_name);\n+      nb += snprintf(nb, remaining_buflen(nbuf, nb), \"  Node    *n_%-7s = lookup(idx_%s);\\n\", name, name);\n@@ -2622,21 +2580,4 @@\n-      size_t remaining_len = remaining_buflen(idxbuf, ib);\n-      int printed_len = snprintf(ib, remaining_len,\n-          \"  unsigned idx_%-5s = idx%d; \\t\/\/ %s, \\t%s\\n\",\n-          name, idx, type, arg_name);\n-      assert(printed_len > 0, \"error occurs at snprintf\");\n-      assert((size_t)printed_len < remaining_len, \"ib buf overflow\");\n-      ib += printed_len;\n-\n-      remaining_len = remaining_buflen(nbuf, nb);\n-      printed_len = snprintf(nb, remaining_len,\n-          \"  Node    *n_%-7s = lookup(idx_%s);\\n\", name, name);\n-      assert(printed_len > 0, \"error occurs at snprintf\");\n-      assert((size_t)printed_len < remaining_len, \"nb buf overflow\");\n-      nb += printed_len;\n-\n-      remaining_len = remaining_buflen(opbuf, ob);\n-      printed_len = snprintf(ob, remaining_len,\n-          \"  %sOper *op_%s = (%sOper *)opnd_array(%d);\\n\", type, name, type, idx);\n-      assert(printed_len > 0, \"error occurs at snprintf\");\n-      assert((size_t)printed_len < remaining_len, \"ob buf overflow\");\n-      ob += printed_len;\n+      ib += snprintf(ib, remaining_buflen(idxbuf, ib), \"  unsigned idx_%-5s = idx%d; \\t\/\/ %s, \\t%s\\n\",\n+                    name, idx, type, arg_name);\n+      nb += snprintf(nb, remaining_buflen(nbuf, nb), \"  Node    *n_%-7s = lookup(idx_%s);\\n\", name, name);\n+      ob += snprintf(ob, remaining_buflen(opbuf, ob), \"  %sOper *op_%s = (%sOper *)opnd_array(%d);\\n\", type, name, type, idx);\n","filename":"src\/hotspot\/share\/adlc\/output_c.cpp","additions":27,"deletions":86,"binary":false,"changes":113,"status":"modified"},{"patch":"@@ -691,3 +691,1 @@\n-  int printed_len = os::snprintf(message, sizeof(message), \"Index %d out of bounds for length %d\", index, a->length());\n-  assert(printed_len > 0, \"error occurs at os::snprintf\");\n-  assert((size_t)printed_len < sizeof(message), \"message buf overflow\");\n+  os::snprintf(message, sizeof(message), \"Index %d out of bounds for length %d\", index, a->length());\n@@ -705,3 +703,1 @@\n-  int printed_len = os::snprintf(message, sizeof(message), \"%d\", index);\n-  assert(printed_len > 0, \"error occurs at os::snprintf\");\n-  assert((size_t)printed_len < sizeof(sizeof(message)), \"message buf overflow\");\n+  os::snprintf(message, sizeof(message), \"%d\", index);\n","filename":"src\/hotspot\/share\/c1\/c1_Runtime1.cpp","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -164,3 +164,1 @@\n-    int printed_len = os::snprintf(&header_version[JVM_IDENT_MAX-9], 9, \"%08x\", hash);\n-    assert(printed_len > 0, \"error occurs at os::snprintf\");\n-    assert(printed_len < 9, \"header_version buf overflow\");\n+    os::snprintf(&header_version[JVM_IDENT_MAX-9], 9, \"%08x\", hash);\n","filename":"src\/hotspot\/share\/cds\/filemap.cpp","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2527,4 +2527,1 @@\n-  int printed_len = os::snprintf(buf, buf_size, \"\\tat %s.%s(\", klass_name, method_name);\n-  assert(printed_len > 0, \"error occurs at os::snprintf\");\n-  assert((size_t)printed_len < buf_size, \"insufficient buf\");\n-  size_t buf_off = printed_len;\n+  size_t buf_off = os::snprintf(buf, buf_size, \"\\tat %s.%s(\", klass_name, method_name);\n@@ -2534,1 +2531,0 @@\n-    size_t remaining_len = buf_size - buf_off;\n@@ -2536,9 +2532,3 @@\n-      int printed_len = os::snprintf(buf + buf_off, remaining_len, \"%s@%s\/\", module_name, module_version);\n-      assert(printed_len > 0, \"error occurs at snprintf\");\n-      assert((size_t)printed_len < remaining_len, \"buf overflow\");\n-      buf_off += printed_len;\n-    } else {;\n-      int printed_len = os::snprintf(buf + buf_off, remaining_len, \"%s\/\", module_name);\n-      assert(printed_len > 0, \"error occurs at snprintf\");\n-      assert((size_t)printed_len < remaining_len, \"buf overflow\");\n-      buf_off += printed_len;\n+      buf_off += os::snprintf(buf + buf_off, buf_size - buf_off, \"%s@%s\/\", module_name, module_version);\n+    } else {\n+      buf_off += os::snprintf(buf + buf_off, buf_size - buf_off, \"%s\/\", module_name);\n@@ -2557,1 +2547,0 @@\n-      size_t remaining_len = buf_size - buf_off;\n@@ -2560,4 +2549,1 @@\n-        int printed_len = os::snprintf(buf + buf_off, remaining_len, \"%s:%d)\", source_file_name, line_number);\n-        assert(printed_len > 0, \"error occurs at snprintf\");\n-        assert((size_t)printed_len < remaining_len, \"buf overflow\");\n-        buf_off += printed_len;\n+        buf_off += os::snprintf(buf + buf_off, buf_size - buf_off, \"%s:%d)\", source_file_name, line_number);\n@@ -2566,4 +2552,1 @@\n-        int printed_len = os::snprintf(buf + buf_off, remaining_len, \"%s)\", source_file_name);\n-        assert(printed_len > 0, \"error occurs at snprintf\");\n-        assert((size_t)printed_len < remaining_len, \"buf overflow\");\n-        buf_off += printed_len;\n+        buf_off += os::snprintf(buf + buf_off, buf_size - buf_off, \"%s)\", source_file_name);\n@@ -2572,4 +2555,1 @@\n-        int printed_len = os::snprintf(buf + buf_off, remaining_len, \"Unknown Source)\");\n-        assert(printed_len > 0, \"error occurs at snprintf\");\n-        assert((size_t)printed_len < remaining_len, \"buf overflow\");\n-        buf_off += printed_len;\n+        buf_off += os::snprintf(buf + buf_off, buf_size - buf_off, \"Unknown Source)\");\n@@ -2577,1 +2557,0 @@\n-\n@@ -2580,5 +2559,1 @@\n-        remaining_len = buf_size - buf_off;\n-        int printed_len = os::snprintf(buf + buf_off, remaining_len, \"(nmethod \" INTPTR_FORMAT \")\", (intptr_t)nm);\n-        assert(printed_len > 0, \"error occurs at snprintf\");\n-        assert((size_t)printed_len < remaining_len, \"buf overflow\");\n-        buf_off += printed_len;\n+        os::snprintf(buf + buf_off, buf_size - buf_off, \"(nmethod \" INTPTR_FORMAT \")\", (intptr_t)nm);\n","filename":"src\/hotspot\/share\/classfile\/javaClasses.cpp","additions":8,"deletions":33,"binary":false,"changes":41,"status":"modified"},{"patch":"@@ -781,3 +781,1 @@\n-      int printed_len = os::snprintf(xn, sizeof(xn), \"x%d\", j);\n-      assert(printed_len > 0, \"error occurs at os::snprintf\");\n-      assert((size_t)printed_len < sizeof(xn), \"xn buf overflow\");\n+      os::snprintf(xn, sizeof(xn), \"x%d\", j);\n","filename":"src\/hotspot\/share\/code\/dependencies.cpp","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -935,3 +935,1 @@\n-    int printed_len = os::snprintf(name_buffer, sizeof(name_buffer), \"%s CompilerThread%d\", _compilers[1]->name(), i);\n-    assert(printed_len > 0, \"error occurs at os::snprintf\");\n-    assert((size_t)printed_len < sizeof(name_buffer), \"name_buffer overflow\");\n+    os::snprintf(name_buffer, sizeof(name_buffer), \"%s CompilerThread%d\", _compilers[1]->name(), i);\n@@ -959,3 +957,1 @@\n-    int printed_len = os::snprintf(name_buffer, sizeof(name_buffer), \"C1 CompilerThread%d\", i);\n-    assert(printed_len > 0, \"error occurs at os::snprintf\");\n-    assert((size_t)printed_len < sizeof(name_buffer), \"name_buffer overflow\");\n+    os::snprintf(name_buffer, sizeof(name_buffer), \"C1 CompilerThread%d\", i);\n@@ -1025,3 +1021,1 @@\n-        int printed_len = os::snprintf(name_buffer, sizeof(name_buffer), \"%s CompilerThread%d\", _compilers[1]->name(), i);\n-        assert(printed_len > 0, \"error occurs at os::snprintf\");\n-        assert((size_t)printed_len < sizeof(name_buffer), \"name_buffer overflow\");\n+        os::snprintf(name_buffer, sizeof(name_buffer), \"%s CompilerThread%d\", _compilers[1]->name(), i);\n@@ -2609,3 +2603,1 @@\n-      int printed_len = os::snprintf(tier_name, sizeof(tier_name), \"Tier%d\", tier);\n-      assert(printed_len > 0, \"error occurs at os::snprintf\");\n-      assert((size_t)printed_len < sizeof(tier_name), \"tier_name buf overflow\");\n+      os::snprintf(tier_name, sizeof(tier_name), \"Tier%d\", tier);\n","filename":"src\/hotspot\/share\/compiler\/compileBroker.cpp","additions":4,"deletions":12,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -232,9 +232,4 @@\n-  if (_indy_index != -1) {\n-    int printed_len = os::snprintf(what, sizeof(what), \"indy#%d\", decode_indy_index());\n-    assert(printed_len > 0, \"error occurs at os::snprintf\");\n-    assert((size_t)printed_len < sizeof(what), \"what buf overflow\");\n-  } else {\n-    int printed_len = os::snprintf(what, sizeof(what), \"condy\");\n-    assert(printed_len > 0, \"error occurs at os::snprintf\");\n-    assert((size_t)printed_len < sizeof(what), \"what buf overflow\");\n-  }\n+  if (_indy_index != -1)\n+    os::snprintf(what, sizeof(what), \"indy#%d\", decode_indy_index());\n+  else\n+    os::snprintf(what, sizeof(what), \"condy\");\n@@ -256,1 +251,0 @@\n-    int pos = 0;\n@@ -258,0 +252,1 @@\n+      int pos = (int) strlen(argbuf);\n@@ -259,5 +254,1 @@\n-        size_t remaining_len = sizeof(argbuf) - pos;\n-        int printed_len = os::snprintf(argbuf + pos, remaining_len, \"...\");\n-        assert(printed_len > 0, \"error occurs at os::snprintf\");\n-        assert((size_t)printed_len < remaining_len, \"argbuf overflow\");\n-        pos += printed_len;\n+        os::snprintf(argbuf + pos, sizeof(argbuf) - pos, \"...\");\n@@ -266,8 +257,2 @@\n-      if (i > 0) {\n-          argbuf[pos++] = ',';\n-      }\n-      size_t remaining_len = sizeof(argbuf) - pos;\n-      int printed_len = os::snprintf(argbuf+pos, remaining_len, \"%d\", arg_index(i));\n-      assert(printed_len > 0, \"error occurs at os::snprintf\");\n-      assert((size_t)printed_len < remaining_len, \"argbuf overflow\");\n-      pos += printed_len;\n+      if (i > 0)  argbuf[pos++] = ',';\n+      os::snprintf(argbuf+pos, sizeof(argbuf) - pos, \"%d\", arg_index(i));\n","filename":"src\/hotspot\/share\/interpreter\/bootstrapInfo.cpp","additions":8,"deletions":23,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -262,3 +262,1 @@\n-  int printed_len = os::snprintf(hash_buf, sizeof(hash_buf), \"\/\" UINTX_FORMAT, hash);\n-  assert(printed_len > 0, \"error occurs at os::snprintf\");\n-  assert((size_t)printed_len < sizeof(hash_buf), \"hash_buf overflow\");\n+  os::snprintf(hash_buf, sizeof(hash_buf), \"\/\" UINTX_FORMAT, hash);\n","filename":"src\/hotspot\/share\/jfr\/support\/jfrSymbolTable.cpp","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -313,3 +313,1 @@\n-    int printed_len = os::snprintf(name_buf, name_buf_size, \"%s::%s\", vmField.typeName, vmField.fieldName);\n-    assert(printed_len > 0, \"error occurs at os::snprintf\");\n-    assert((size_t)printed_len < name_buf_size, \"name_buf overflow\");\n+    os::snprintf(name_buf, name_buf_size, \"%s::%s\", vmField.typeName, vmField.fieldName);\n","filename":"src\/hotspot\/share\/jvmci\/jvmciCompilerToVMInit.cpp","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -177,3 +177,1 @@\n-      int printed_len = os::snprintf(buf, sizeof(buf), \"<null>\");\n-      assert(printed_len > 0, \"error occurs at os::snprintf\");\n-      assert((size_t)printed_len < sizeof(buf), \"insufficient buf\");\n+      os::snprintf(buf, sizeof(buf), \"<null>\");\n","filename":"src\/hotspot\/share\/prims\/wbtestmethods\/parserTests.cpp","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2599,3 +2599,1 @@\n-  int printed_len = os::snprintf(buf, sizeof(buf), \"reason%d\", reason);\n-  assert(printed_len > 0, \"error occurs at os::snprintf\");\n-  assert((size_t)printed_len < sizeof(buf), \"insufficient buf\");\n+  os::snprintf(buf, sizeof(buf), \"reason%d\", reason);\n@@ -2611,3 +2609,1 @@\n-  int printed_len = os::snprintf(buf, sizeof(buf), \"action%d\", action);\n-  assert(printed_len > 0, \"error occurs at os::snprintf\");\n-  assert((size_t)printed_len < sizeof(buf), \"insufficient buf\");\n+  os::snprintf(buf, sizeof(buf), \"action%d\", action);\n@@ -2734,1 +2730,1 @@\n-            if (bc_case == BC_CASE_LIMIT && (int)bc == 0) {\n+            if (bc_case == BC_CASE_LIMIT && (int)bc == 0)\n@@ -2736,2 +2732,1 @@\n-            }\n-            int printed_len = os::snprintf(name, sizeof(name), \"%s\/%s\/%s\",\n+            os::snprintf(name, sizeof(name), \"%s\/%s\/%s\",\n@@ -2741,2 +2736,0 @@\n-            assert(printed_len > 0, \"error occurs at os::snprintf\");\n-            assert((size_t)printed_len < sizeof(name), \"name buffer overflow\");\n","filename":"src\/hotspot\/share\/runtime\/deoptimization.cpp","additions":4,"deletions":11,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -102,0 +102,10 @@\n+int os::snprintf_checked(char* buf, size_t len, const char* fmt, ...) {\n+  va_list args;\n+  va_start(args, fmt);\n+  int result = os::vsnprintf(buf, len, fmt, args);\n+  va_end(args);\n+  assert(result >= 0, \"os::snprintf error\");\n+  assert(static_cast<size_t>(result) < size, \"os::snprintf truncated\");\n+  return result;\n+}\n+\n@@ -1276,3 +1286,1 @@\n-  int printed_len = os::snprintf(modified_mode, sizeof(modified_mode), \"%s\" LINUX_ONLY(\"e\") BSD_ONLY(\"e\") WINDOWS_ONLY(\"N\"), mode);\n-  assert(printed_len > 0, \"error occurs at os::snprintf\");\n-  assert((size_t)printed_len < sizeof(modified_mode), \"modified_mode buf overflow\");\n+  os::snprintf_checked(modified_mode, sizeof(modified_mode), \"%s\" LINUX_ONLY(\"e\") BSD_ONLY(\"e\") WINDOWS_ONLY(\"N\"), mode);\n","filename":"src\/hotspot\/share\/runtime\/os.cpp","additions":11,"deletions":3,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -743,0 +743,4 @@\n+  \/\/ Performs snprintf and asserts the result is non-negative (so there was not\n+  \/\/ an encoding error) and that the output was not truncated.\n+  static int snprintf_checked(char* buf, size_t len, const char* fmt, ...) ATTRIBUTE_PRINTF(3, 4);\n+\n","filename":"src\/hotspot\/share\/runtime\/os.hpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -104,3 +104,1 @@\n-    int printed_len = os::snprintf(_name, _name_size, \"%s.%s\", prefix, name);\n-    assert(printed_len > 0, \"error occurs at os::snprintf\");\n-    assert((size_t)printed_len < _name_size, \"_name buf overflow\");\n+    os::snprintf(_name, _name_size, \"%s.%s\", prefix, name);\n@@ -370,3 +368,1 @@\n-   int printed_len = os::snprintf(result, len, \"%s.%s\", ns, name);\n-   assert(printed_len > 0, \"error occurs at os::snprintf\");\n-   assert((size_t)printed_len < len, \"result buf overflow\");\n+   os::snprintf(result, len, \"%s.%s\", ns, name);\n","filename":"src\/hotspot\/share\/runtime\/perfData.cpp","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -449,3 +449,1 @@\n-  int printed_len = os::snprintf(buffer, sizeof(buffer), \"printnm: \" INTPTR_FORMAT, p);\n-  assert(printed_len > 0, \"error occurs at os::snprintf\");\n-  assert((size_t)printed_len < sizeof(buffer), \"buffer overflow\");\n+  os::snprintf(buffer, sizeof(buffer), \"printnm: \" INTPTR_FORMAT, p);\n","filename":"src\/hotspot\/share\/utilities\/debug.cpp","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -521,1 +521,1 @@\n-      os::snprintf(p, 7, \"\\\\u%04x\", c);    \/\/ counting terminating zero in\n+      os::snprintf(p, 7, \"\\\\u%04x\", c);\n","filename":"src\/hotspot\/share\/utilities\/utf8.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}