{"files":[{"patch":"@@ -225,2 +225,2 @@\n-  sprintf(buf, \"0x%02x:0x%x:0x%03x:%d\", _cpu, _variant, _model, _revision);\n-  if (_model2) sprintf(buf+strlen(buf), \"(0x%03x)\", _model2);\n+  os::snprintf(buf, sizeof(buf), \"0x%02x:0x%x:0x%03x:%d\", _cpu, _variant, _model, _revision);\n+  if (_model2) os::snprintf(buf+strlen(buf), sizeof(buf) - strlen(buf), \"(0x%03x)\", _model2);\n","filename":"src\/hotspot\/cpu\/aarch64\/vm_version_aarch64.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -251,1 +251,1 @@\n-  sprintf(ver_str, \"%d\", ATTACH_PROTOCOL_VER);\n+  os::snprintf(ver_str, sizeof(ver_str), \"%d\", ATTACH_PROTOCOL_VER);\n@@ -294,1 +294,1 @@\n-            sprintf(msg, \"%d\\n\", ATTACH_ERROR_BADVERSION);\n+            os::snprintf(msg, sizeof(msg), \"%d\\n\", ATTACH_ERROR_BADVERSION);\n@@ -414,1 +414,1 @@\n-  sprintf(msg, \"%d\\n\", result);\n+  os::snprintf(msg, sizeof(msg), \"%d\\n\", result);\n","filename":"src\/hotspot\/os\/bsd\/attachListener_bsd.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -323,1 +323,1 @@\n-  \/\/ Buffer that fits several sprintfs.\n+  \/\/ Buffer that fits several snprintfs.\n@@ -379,5 +379,4 @@\n-    char *ld_library_path = NEW_C_HEAP_ARRAY(char,\n-                                             strlen(v) + 1 +\n-                                             sizeof(SYS_EXT_DIR) + sizeof(\"\/lib\/\") + strlen(cpu_arch) + sizeof(DEFAULT_LIBPATH) + 1,\n-                                             mtInternal);\n-    sprintf(ld_library_path, \"%s%s\" SYS_EXT_DIR \"\/lib\/%s:\" DEFAULT_LIBPATH, v, v_colon, cpu_arch);\n+    const size_t ld_library_path_size = strlen(v) + 1 + sizeof(SYS_EXT_DIR) +\n+            sizeof(\"\/lib\/\") + strlen(cpu_arch) + sizeof(DEFAULT_LIBPATH) + 1;\n+    char *ld_library_path = NEW_C_HEAP_ARRAY(char, ld_library_path_size, mtInternal);\n+    os::snprintf(ld_library_path, ld_library_path_size, \"%s%s\" SYS_EXT_DIR \"\/lib\/%s:\" DEFAULT_LIBPATH, v, v_colon, cpu_arch);\n@@ -389,1 +388,1 @@\n-  sprintf(buf, \"%s\" EXTENSIONS_DIR \":\" SYS_EXT_DIR EXTENSIONS_DIR, Arguments::get_java_home());\n+  os::snprintf(buf, bufsize, \"%s\" EXTENSIONS_DIR \":\" SYS_EXT_DIR EXTENSIONS_DIR, Arguments::get_java_home());\n@@ -404,1 +403,1 @@\n-  \/\/ Buffer that fits several sprintfs.\n+  \/\/ Buffer that fits several snprintfs.\n@@ -474,5 +473,3 @@\n-    char *ld_library_path = NEW_C_HEAP_ARRAY(char,\n-                                             strlen(v) + 1 + strlen(l) + 1 +\n-                                             system_ext_size + 3,\n-                                             mtInternal);\n-    sprintf(ld_library_path, \"%s%s%s%s%s\" SYS_EXTENSIONS_DIR \":\" SYS_EXTENSIONS_DIRS \":.\",\n+    const size_t ld_library_path_size = strlen(v) + 1 + strlen(l) + 1 + system_ext_size + 3;\n+    char *ld_library_path = NEW_C_HEAP_ARRAY(char, ld_library_path_size, mtInternal);\n+    os::snprintf(ld_library_path, ld_library_path_size, \"%s%s%s%s%s\" SYS_EXTENSIONS_DIR \":\" SYS_EXTENSIONS_DIRS \":.\",\n@@ -489,1 +486,1 @@\n-  sprintf(buf, \"%s\" SYS_EXTENSIONS_DIR \":%s\" EXTENSIONS_DIR \":\" SYS_EXTENSIONS_DIRS,\n+  os::snprintf(buf, bufsize, \"%s\" SYS_EXTENSIONS_DIR \":%s\" EXTENSIONS_DIR \":\" SYS_EXTENSIONS_DIRS,\n","filename":"src\/hotspot\/os\/bsd\/os_bsd.cpp","additions":11,"deletions":14,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -214,2 +214,3 @@\n-          char* buf = (char*) AdlAllocateHeap(strlen(instr->_ident) + 4);\n-          sprintf(buf, \"%s_%d\", instr->_ident, match_rules_cnt++);\n+          const size_t buf_size = strlen(instr->_ident) + 4;\n+          char* buf = (char*) AdlAllocateHeap(buf_size);\n+          snprintf(buf, buf_size, \"%s_%d\", instr->_ident, match_rules_cnt++);\n@@ -2879,2 +2880,3 @@\n-  char* ec_name = (char*) AdlAllocateHeap(strlen(inst._ident) + strlen(prefix) + 1);\n-  sprintf(ec_name, \"%s%s\", prefix, inst._ident);\n+  const size_t ec_name_size = strlen(inst._ident) + strlen(prefix) + 1;\n+  char* ec_name = (char*) AdlAllocateHeap(ec_name_size);\n+  snprintf(ec_name, ec_name_size, \"%s%s\", prefix, inst._ident);\n@@ -3350,2 +3352,3 @@\n-  char* ec_name = (char*) AdlAllocateHeap(strlen(inst._ident) + strlen(prefix) + 1);\n-  sprintf(ec_name, \"%s%s\", prefix, inst._ident);\n+  const size_t ec_name_size = strlen(inst._ident) + strlen(prefix) + 1;\n+  char* ec_name = (char*) AdlAllocateHeap(ec_name_size);\n+  snprintf(ec_name, ec_name_size, \"%s%s\", prefix, inst._ident);\n@@ -4670,2 +4673,3 @@\n-      char* buf = (char*) AdlAllocateHeap(strlen(param) + 3);\n-      sprintf(buf, \"(%s)\", param);\n+      const size_t buf_size = strlen(param) + 3;\n+      char* buf = (char*) AdlAllocateHeap(buf_size);\n+      snprintf(buf, buf_size, \"(%s)\", param);\n@@ -5278,2 +5282,3 @@\n-  char* location = (char *)AdlAllocateHeap(strlen(file) + 100);\n-  sprintf(location, \"\\n#line %d \\\"%s\\\"\\n\", line, file);\n+  const size_t location_size = strlen(file) + 100;\n+  char* location = (char *)AdlAllocateHeap(location_size);\n+  snprintf(location, location_size, \"\\n#line %d \\\"%s\\\"\\n\", line, file);\n","filename":"src\/hotspot\/share\/adlc\/adlparse.cpp","additions":15,"deletions":10,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -818,1 +818,1 @@\n-    sprintf(regMask,\"%s%s()\", rc_name, mask);\n+    snprintf(regMask, length, \"%s%s()\", rc_name, mask);\n@@ -911,1 +911,1 @@\n-  sprintf(result,\"%s%s\", stack_or, reg_mask_name);\n+  snprintf(result, length, \"%s%s\", stack_or, reg_mask_name);\n","filename":"src\/hotspot\/share\/adlc\/archDesc.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -215,1 +215,1 @@\n-    sprintf(Expr::buffer(), \"_kids[0]->_cost[%s]\", lchild_to_upper);\n+    snprintf(Expr::buffer(), STRING_BUFFER_LENGTH, \"_kids[0]->_cost[%s]\", lchild_to_upper);\n@@ -221,1 +221,1 @@\n-    sprintf(Expr::buffer(), \"_kids[1]->_cost[%s]\", rchild_to_upper);\n+    snprintf(Expr::buffer(), STRING_BUFFER_LENGTH, \"_kids[1]->_cost[%s]\", rchild_to_upper);\n@@ -760,1 +760,1 @@\n-    sprintf( string_buffer, \"0\");\n+    snprintf(string_buffer, STRING_BUFFER_LENGTH, \"0\");\n","filename":"src\/hotspot\/share\/adlc\/dfa.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1536,1 +1536,1 @@\n-      sprintf(s,\"\/*%s*\/(\",(char*)i._key);\n+      snprintf(s, (buflen - (s - buf)), \"\/*%s*\/(\",(char*)i._key);\n@@ -3475,1 +3475,1 @@\n-  sprintf(subtree,\"_%s_%s_%s\", _opType, lstr, rstr);\n+  snprintf(subtree, len, \"_%s_%s_%s\", _opType, lstr, rstr);\n@@ -3922,2 +3922,3 @@\n-  char* buf = (char*) AdlAllocateHeap(strlen(instr_ident) + 4);\n-  sprintf(buf, \"%s_%d\", instr_ident, match_rules_cnt++);\n+  const size_t buf_size = strlen(instr_ident) + 4;\n+  char* buf = (char*) AdlAllocateHeap(buf_size);\n+  snprintf(buf, buf_size, \"%s_%d\", instr_ident, match_rules_cnt++);\n","filename":"src\/hotspot\/share\/adlc\/formssel.cpp","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -469,1 +469,1 @@\n-  sprintf(fname,\"%s%s\",base,suffix);\n+  snprintf(fname,len,\"%s%s\",base,suffix);\n","filename":"src\/hotspot\/share\/adlc\/main.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -200,1 +200,2 @@\n-  char *operand_stages = new char [templen];\n+  const size_t operand_stages_size = templen;\n+  char *operand_stages = new char [operand_stages_size];\n@@ -214,1 +215,1 @@\n-    templen += sprintf(&operand_stages[templen], \"  stage_%s%c\\n\",\n+    templen += snprintf(&operand_stages[templen], operand_stages_size - templen, \"  stage_%s%c\\n\",\n@@ -281,0 +282,1 @@\n+  const size_t resource_stages_size = templen;\n@@ -288,1 +290,1 @@\n-    templen += sprintf(&resource_stages[templen], \"  stage_%s%-*s \/\/ %s\\n\",\n+    templen += snprintf(&resource_stages[templen], resource_stages_size - templen, \"  stage_%s%-*s \/\/ %s\\n\",\n@@ -347,1 +349,1 @@\n-    templen = sprintf(temp, \"%d\", res_cycles[i]);\n+    templen = snprintf(temp, sizeof(temp), \"%d\", res_cycles[i]);\n@@ -356,1 +358,2 @@\n-  char * resource_cycles = new char [templen];\n+  const size_t resource_cycles_size = templen;\n+  char * resource_cycles = new char [resource_cycles_size];\n@@ -361,1 +364,1 @@\n-    templen += sprintf(&resource_cycles[templen], \"  %*d%c \/\/ %s\\n\",\n+    templen += snprintf(&resource_cycles[templen], resource_cycles_size - templen, \"  %*d%c \/\/ %s\\n\",\n@@ -434,1 +437,2 @@\n-  char * resource_mask = new char [templen];\n+  const size_t resource_mask_size = templen;\n+  char * resource_mask = new char [resource_mask_size];\n@@ -459,1 +463,1 @@\n-      sprintf(&resource_mask[templen], \"  %s(0x%0*x, %*d, %*d, %s %s(\",\n+      snprintf(&resource_mask[templen], resource_mask_size - templen, \"  %s(0x%0*x, %*d, %*d, %s %s(\",\n@@ -499,1 +503,1 @@\n-        sprintf(&resource_mask[templen], \"0x%08x%s\", res_mask[j], j > 0 ? \", \" : \"\");\n+        snprintf(&resource_mask[templen], resource_mask_size - templen, \"0x%08x%s\", res_mask[j], j > 0 ? \", \" : \"\");\n@@ -530,1 +534,1 @@\n-    int printed = sprintf(args, \"0x%x, 0x%x, %u\",\n+    int printed = snprintf(args, 37, \"0x%x, 0x%x, %u\",\n@@ -1069,1 +1073,1 @@\n-        sprintf(inst_prefix, \"inst%d_\",   inst_position);\n+        snprintf(inst_prefix, sizeof(inst_prefix), \"inst%d_\",   inst_position);\n@@ -1071,1 +1075,1 @@\n-        sprintf(receiver,    \"inst%d->\", inst_position);\n+        snprintf(receiver, sizeof(receiver), \"inst%d->\", inst_position);\n@@ -1165,1 +1169,1 @@\n-          sprintf(left_reg_index,\",inst%u_idx%u\", (unsigned)left_index, (unsigned)left_op_index);\n+          snprintf(left_reg_index, sizeof(left_reg_index), \",inst%u_idx%u\", (unsigned)left_index, (unsigned)left_op_index);\n@@ -1177,1 +1181,1 @@\n-            sprintf(right_reg_index,\",inst%u_idx%u\", (unsigned)right_index, (unsigned)right_op_index);\n+            snprintf(right_reg_index, sizeof(right_reg_index), \",inst%u_idx%u\", (unsigned)right_index, (unsigned)right_op_index);\n@@ -2566,1 +2570,1 @@\n-      ib += sprintf(ib, \"  unsigned idx_%-5s = mach_constant_base_node_input(); \\t\/\/ %s, \\t%s\\n\",\n+      ib += snprintf(ib, (buflen - (ib - idxbuf)), \"  unsigned idx_%-5s = mach_constant_base_node_input(); \\t\/\/ %s, \\t%s\\n\",\n@@ -2568,1 +2572,1 @@\n-      nb += sprintf(nb, \"  Node    *n_%-7s = lookup(idx_%s);\\n\", name, name);\n+      nb += snprintf(nb, (buflen - (nb - nbuf)), \"  Node    *n_%-7s = lookup(idx_%s);\\n\", name, name);\n@@ -2575,1 +2579,1 @@\n-      ib += sprintf(ib, \"  unsigned idx_%-5s = idx%d; \\t\/\/ %s, \\t%s\\n\",\n+      ib += snprintf(ib, (buflen - (ib - idxbuf)), \"  unsigned idx_%-5s = idx%d; \\t\/\/ %s, \\t%s\\n\",\n@@ -2577,2 +2581,2 @@\n-      nb += sprintf(nb, \"  Node    *n_%-7s = lookup(idx_%s);\\n\", name, name);\n-      ob += sprintf(ob, \"  %sOper *op_%s = (%sOper *)opnd_array(%d);\\n\", type, name, type, idx);\n+      nb += snprintf(nb, (buflen - (nb - nbuf)), \"  Node    *n_%-7s = lookup(idx_%s);\\n\", name, name);\n+      ob += snprintf(ob, (buflen - (ob - opbuf)), \"  %sOper *op_%s = (%sOper *)opnd_array(%d);\\n\", type, name, type, idx);\n","filename":"src\/hotspot\/share\/adlc\/output_c.cpp","additions":23,"deletions":19,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -691,1 +691,1 @@\n-  sprintf(message, \"Index %d out of bounds for length %d\", index, a->length());\n+  os::snprintf(message, sizeof(message), \"Index %d out of bounds for length %d\", index, a->length());\n@@ -703,1 +703,1 @@\n-  sprintf(message, \"%d\", index);\n+  os::snprintf(message, sizeof(message), \"%d\", index);\n","filename":"src\/hotspot\/share\/c1\/c1_Runtime1.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -164,1 +164,1 @@\n-    sprintf(&header_version[JVM_IDENT_MAX-9], \"%08x\", hash);\n+    os::snprintf(&header_version[JVM_IDENT_MAX-9], 9, \"%08x\", hash);\n","filename":"src\/hotspot\/share\/cds\/filemap.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2523,1 +2523,3 @@\n-  char* buf = NEW_RESOURCE_ARRAY(char, buf_len + 64);\n+  const size_t buf_size = buf_len + 64;\n+  size_t buf_off;\n+  char* buf = NEW_RESOURCE_ARRAY(char, buf_size);\n@@ -2526,1 +2528,1 @@\n-  sprintf(buf, \"\\tat %s.%s(\", klass_name, method_name);\n+  os::snprintf(buf, buf_size, \"\\tat %s.%s(\", klass_name, method_name);\n@@ -2530,0 +2532,1 @@\n+    buf_off = (int)strlen(buf);\n@@ -2531,1 +2534,1 @@\n-      sprintf(buf + (int)strlen(buf), \"%s@%s\/\", module_name, module_version);\n+      os::snprintf(buf + buf_off, buf_size - buf_off, \"%s@%s\/\", module_name, module_version);\n@@ -2533,1 +2536,1 @@\n-      sprintf(buf + (int)strlen(buf), \"%s\/\", module_name);\n+      os::snprintf(buf + buf_off, buf_size - buf_off, \"%s\/\", module_name);\n@@ -2546,0 +2549,1 @@\n+      buf_off = (int)strlen(buf);\n@@ -2548,1 +2552,1 @@\n-        sprintf(buf + (int)strlen(buf), \"%s:%d)\", source_file_name, line_number);\n+        os::snprintf(buf + buf_off, buf_size - buf_off, \"%s:%d)\", source_file_name, line_number);\n@@ -2551,1 +2555,1 @@\n-        sprintf(buf + (int)strlen(buf), \"%s)\", source_file_name);\n+        os::snprintf(buf + buf_off, buf_size - buf_off, \"%s)\", source_file_name);\n@@ -2554,1 +2558,1 @@\n-        sprintf(buf + (int)strlen(buf), \"Unknown Source)\");\n+        os::snprintf(buf + buf_off, buf_size - buf_off, \"Unknown Source)\");\n@@ -2558,1 +2562,1 @@\n-        sprintf(buf + (int)strlen(buf), \"(nmethod \" INTPTR_FORMAT \")\", (intptr_t)nm);\n+        os::snprintf(buf + buf_off, buf_size - buf_off, \"(nmethod \" INTPTR_FORMAT \")\", (intptr_t)nm);\n","filename":"src\/hotspot\/share\/classfile\/javaClasses.cpp","additions":12,"deletions":8,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -780,1 +780,1 @@\n-      char xn[12]; sprintf(xn, \"x%d\", j);\n+      char xn[12]; os::snprintf(xn, sizeof(xn), \"x%d\", j);\n","filename":"src\/hotspot\/share\/code\/dependencies.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -935,1 +935,1 @@\n-    sprintf(name_buffer, \"%s CompilerThread%d\", _compilers[1]->name(), i);\n+    os::snprintf(name_buffer, sizeof(name_buffer), \"%s CompilerThread%d\", _compilers[1]->name(), i);\n@@ -957,1 +957,1 @@\n-    sprintf(name_buffer, \"C1 CompilerThread%d\", i);\n+    os::snprintf(name_buffer, sizeof(name_buffer), \"C1 CompilerThread%d\", i);\n@@ -1021,1 +1021,1 @@\n-        sprintf(name_buffer, \"%s CompilerThread%d\", _compilers[1]->name(), i);\n+        os::snprintf(name_buffer, sizeof(name_buffer), \"%s CompilerThread%d\", _compilers[1]->name(), i);\n@@ -2603,1 +2603,1 @@\n-      sprintf(tier_name, \"Tier%d\", tier);\n+      os::snprintf(tier_name, sizeof(tier_name), \"Tier%d\", tier);\n","filename":"src\/hotspot\/share\/compiler\/compileBroker.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -233,1 +233,1 @@\n-    sprintf(what, \"indy#%d\", decode_indy_index());\n+    os::snprintf(what, sizeof(what), \"indy#%d\", decode_indy_index());\n@@ -235,1 +235,1 @@\n-    sprintf(what, \"condy\");\n+    os::snprintf(what, sizeof(what), \"condy\");\n@@ -254,1 +254,1 @@\n-        sprintf(argbuf + pos, \"...\");\n+        os::snprintf(argbuf + pos, sizeof(argbuf) - pos, \"...\");\n@@ -258,1 +258,1 @@\n-      sprintf(argbuf+pos, \"%d\", arg_index(i));\n+      os::snprintf(argbuf+pos, sizeof(argbuf) - pos, \"%d\", arg_index(i));\n","filename":"src\/hotspot\/share\/interpreter\/bootstrapInfo.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -262,1 +262,1 @@\n-  sprintf(hash_buf, \"\/\" UINTX_FORMAT, hash);\n+  os::snprintf(hash_buf, sizeof(hash_buf), \"\/\" UINTX_FORMAT, hash);\n","filename":"src\/hotspot\/share\/jfr\/support\/jfrSymbolTable.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -311,3 +311,3 @@\n-    size_t name_buf_len = strlen(vmField.typeName) + strlen(vmField.fieldName) + 2 \/* \"::\" *\/;\n-    char* name_buf = NEW_RESOURCE_ARRAY_IN_THREAD(THREAD, char, name_buf_len + 1);\n-    sprintf(name_buf, \"%s::%s\", vmField.typeName, vmField.fieldName);\n+    const size_t name_buf_size = strlen(vmField.typeName) + strlen(vmField.fieldName) + 3 \/* \"::\" *\/;\n+    char* name_buf = NEW_RESOURCE_ARRAY_IN_THREAD(THREAD, char, name_buf_size);\n+    os::snprintf(name_buf, name_buf_size, \"%s::%s\", vmField.typeName, vmField.fieldName);\n","filename":"src\/hotspot\/share\/jvmci\/jvmciCompilerToVMInit.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -177,1 +177,1 @@\n-      sprintf(buf, \"<null>\");\n+      os::snprintf(buf, sizeof(buf), \"<null>\");\n","filename":"src\/hotspot\/share\/prims\/wbtestmethods\/parserTests.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2599,1 +2599,1 @@\n-  sprintf(buf, \"reason%d\", reason);\n+  os::snprintf(buf, sizeof(buf), \"reason%d\", reason);\n@@ -2609,1 +2609,1 @@\n-  sprintf(buf, \"action%d\", action);\n+  os::snprintf(buf, sizeof(buf), \"action%d\", action);\n@@ -2732,1 +2732,1 @@\n-            sprintf(name, \"%s\/%s\/%s\",\n+            os::snprintf(name, sizeof(name), \"%s\/%s\/%s\",\n","filename":"src\/hotspot\/share\/runtime\/deoptimization.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1276,1 +1276,1 @@\n-  sprintf(modified_mode, \"%s\" LINUX_ONLY(\"e\") BSD_ONLY(\"e\") WINDOWS_ONLY(\"N\"), mode);\n+  os::snprintf(modified_mode, sizeof(modified_mode), \"%s\" LINUX_ONLY(\"e\") BSD_ONLY(\"e\") WINDOWS_ONLY(\"N\"), mode);\n","filename":"src\/hotspot\/share\/runtime\/os.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -87,1 +87,2 @@\n-  _name = NEW_C_HEAP_ARRAY(char, strlen(name) + strlen(prefix) + 2, mtInternal);\n+  const size_t _name_size = strlen(name) + strlen(prefix) + 2;\n+  _name = NEW_C_HEAP_ARRAY(char, _name_size, mtInternal);\n@@ -103,1 +104,1 @@\n-    sprintf(_name, \"%s.%s\", prefix, name);\n+    os::snprintf(_name, _name_size, \"%s.%s\", prefix, name);\n@@ -367,1 +368,1 @@\n-   sprintf(result, \"%s.%s\", ns, name);\n+   os::snprintf(result, len, \"%s.%s\", ns, name);\n","filename":"src\/hotspot\/share\/runtime\/perfData.cpp","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -449,1 +449,1 @@\n-  sprintf(buffer, \"printnm: \" INTPTR_FORMAT, p);\n+  os::snprintf(buffer, sizeof(buffer), \"printnm: \" INTPTR_FORMAT, p);\n","filename":"src\/hotspot\/share\/utilities\/debug.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -227,1 +227,1 @@\n-      sprintf(p, \"\\\\u%04x\", c);\n+      os::snprintf(p, 7, \"\\\\u%04x\", c);\n@@ -521,1 +521,1 @@\n-      sprintf(p, \"\\\\u%04x\", c);\n+      os::snprintf(p, 7, \"\\\\u%04x\", c);\n","filename":"src\/hotspot\/share\/utilities\/utf8.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -638,1 +638,1 @@\n-                    sprintf(channelName, \"Ch %d\", ch);\n+                    os::snprintf(channelName, 16, \"Ch %d\", ch);\n","filename":"src\/java.desktop\/macosx\/native\/libjsound\/PLATFORM_API_MacOSX_Ports.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}