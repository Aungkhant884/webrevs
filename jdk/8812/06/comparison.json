{"files":[{"patch":"@@ -70,0 +70,1 @@\n+  LOG_TAG(deoptimization) \\\n","filename":"src\/hotspot\/share\/logging\/logTag.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -41,0 +41,4 @@\n+#include \"logging\/log.hpp\"\n+#include \"logging\/logLevel.hpp\"\n+#include \"logging\/logMessage.hpp\"\n+#include \"logging\/logStream.hpp\"\n@@ -46,0 +50,1 @@\n+#include \"oops\/fieldStreams.inline.hpp\"\n@@ -50,1 +55,0 @@\n-#include \"oops\/fieldStreams.inline.hpp\"\n@@ -56,1 +60,0 @@\n-#include \"prims\/vectorSupport.hpp\"\n@@ -58,0 +61,1 @@\n+#include \"prims\/vectorSupport.hpp\"\n@@ -1837,0 +1841,21 @@\n+void Deoptimization::print_ul(CompiledMethod* nm, intptr_t pc, frame& fr, int trap_bci,\n+                              const char* reason_name, const char* reason_action) {\n+  LogTarget(Debug, deoptimization) lt;\n+  bool is_osr = nm->is_osr_method();\n+  if (lt.is_enabled()) {\n+    LogStream ls(lt);\n+    ls.print(\"cid=%d %s pc=\" INTPTR_FORMAT \" relative_pc=\" INTPTR_FORMAT \" level=%d\",\n+             nm->compile_id(), (is_osr ? \"%\" : \"\"), pc, fr.pc() - nm->code_begin(),\n+             nm->comp_level());\n+    nm->method()->print_short_name(&ls);\n+    ls.print(\" @ \");\n+    ls.print(\"%d \", trap_bci);\n+    if (is_osr) {\n+      ls.print(\"%d \", nm->osr_entry_bci());\n+    }\n+    ls.print(\"%s \", reason_name);\n+    ls.print(\"%s\", reason_action);\n+    ls.cr();\n+  }\n+}\n+\n@@ -1930,6 +1955,12 @@\n-    JFR_ONLY(post_deoptimization_event(nm, trap_method(), trap_bci, trap_bc, reason, action);)\n-\n-    \/\/ Log a message\n-    Events::log_deopt_message(current, \"Uncommon trap: reason=%s action=%s pc=\" INTPTR_FORMAT \" method=%s @ %d %s\",\n-                              trap_reason_name(reason), trap_action_name(action), p2i(fr.pc()),\n-                              trap_method->name_and_sig_as_C_string(), trap_bci, nm->compiler_name());\n+    { \/\/ Log Deoptimization event for JFR, UL and event system\n+      Method* tm = trap_method();\n+      const char* reason_name = trap_reason_name(reason);\n+      const char* reason_action = trap_action_name(action);\n+      intptr_t pc = p2i(fr.pc());\n+\n+      JFR_ONLY(post_deoptimization_event(nm, tm, trap_bci, trap_bc, reason, action);)\n+      print_ul(nm, pc, fr, trap_bci, reason_name, reason_action);\n+      Events::log_deopt_message(current, \"Uncommon trap: reason=%s action=%s pc=\" INTPTR_FORMAT \" method=%s @ %d %s\",\n+                                reason_name, reason_action, pc,\n+                                tm->name_and_sig_as_C_string(), trap_bci, nm->compiler_name());\n+    }\n","filename":"src\/hotspot\/share\/runtime\/deoptimization.cpp","additions":39,"deletions":8,"binary":false,"changes":47,"status":"modified"},{"patch":"@@ -47,1 +47,2 @@\n- public:\n+\n+public:\n@@ -166,1 +167,4 @@\n-  private:\n+private:\n+  static void print_ul(CompiledMethod* nm, intptr_t pc, frame& fr, int trap_bci,\n+                       const char* reason_name, const char* reason_action);\n+\n","filename":"src\/hotspot\/share\/runtime\/deoptimization.hpp","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"}]}