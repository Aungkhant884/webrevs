{"files":[{"patch":"@@ -974,0 +974,1 @@\n+  bool has_failed = false;\n@@ -977,2 +978,1 @@\n-    dynamic_mapinfo = open_dynamic_archive();\n-\n+    dynamic_mapinfo = open_dynamic_archive(has_failed);\n@@ -1020,0 +1020,1 @@\n+  \/\/ If mapping failed and -XShare:on, the vm should exit\n@@ -1021,0 +1022,1 @@\n+    has_failed = true;\n@@ -1024,0 +1026,1 @@\n+    has_failed = true;\n@@ -1026,0 +1029,3 @@\n+  if (RequireSharedSpaces && has_failed) {\n+      FileMapInfo::fail_stop(\"Unable to map shared spaces\");\n+  }\n@@ -1039,1 +1045,1 @@\n-FileMapInfo* MetaspaceShared::open_dynamic_archive() {\n+FileMapInfo* MetaspaceShared::open_dynamic_archive(bool &has_failed) {\n@@ -1051,0 +1057,1 @@\n+    has_failed = true;\n","filename":"src\/hotspot\/share\/cds\/metaspaceShared.cpp","additions":10,"deletions":3,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -184,1 +184,1 @@\n-  static FileMapInfo* open_dynamic_archive();\n+  static FileMapInfo* open_dynamic_archive(bool &has_failed);\n","filename":"src\/hotspot\/share\/cds\/metaspaceShared.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2919,0 +2919,3 @@\n+  if (UseSharedSpaces && RequireSharedSpaces) {\n+    LogConfiguration::configure_stdout(LogLevel::Info, true, LOG_TAGS(cds));\n+  }\n","filename":"src\/hotspot\/share\/runtime\/arguments.cpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -54,1 +54,1 @@\n-        opts.addSuffix(\"-showversion\", \"-Xlog:all=warning::level,tags\", \"ServiceLoaderApp\");\n+        opts.addSuffix(\"-showversion\", \"-Xlog:all=warning::level,tags\", \"-Xshare:auto\", \"ServiceLoaderApp\");\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/ServiceLoaderTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -117,1 +117,1 @@\n-      .ifNoMappingFailure(output -> check(output, 1, true, lastCheckMsg, \"[Timestamp mismatch]\"));\n+      .ifNoMappingFailure(output -> check(output, 1, true, lastCheckMsg, \"Timestamp mismatch\"));\n@@ -131,1 +131,1 @@\n-      .ifNoMappingFailure(output -> check(output, 1, true, lastCheckMsg, \"[Required classpath entry does not exist: \" + appJar + \"]\"));\n+      .ifNoMappingFailure(output -> check(output, 1, true, lastCheckMsg, \"Required classpath entry does not exist: \" + appJar));\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/PrintSharedArchiveAndExit.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -162,1 +162,1 @@\n-            \"-Xshare:on\",\n+            \"-Xshare:auto\",\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/cacheObject\/ArchivedModuleWithCustomImageTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -117,0 +117,1 @@\n+            \"-Xshare:auto\",\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/MainModuleOnly.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -192,0 +192,1 @@\n+             \"-Xshare:auto\",\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/SharedArchiveFileOption.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -67,0 +67,1 @@\n+            \"-Xshare:auto\",\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/UsedAllArchivedLambdas.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}