{"files":[{"patch":"@@ -423,1 +423,1 @@\n-    FileMapInfo::fail_continue(\"Dynamic archive cannot be used: static archive header checksum verification failed.\");\n+    log_warning(cds)(\"Dynamic archive cannot be used: static archive header checksum verification failed.\");\n@@ -430,1 +430,1 @@\n-      FileMapInfo::fail_continue(\"Dynamic archive cannot be used: static archive region #%d checksum verification failed.\", i);\n+      log_warning(cds)(\"Dynamic archive cannot be used: static archive region #%d checksum verification failed.\", i);\n","filename":"src\/hotspot\/share\/cds\/dynamicArchive.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -105,38 +105,0 @@\n-\n-\/\/ Complain and continue.  Recoverable errors during the reading of the\n-\/\/ archive file may continue (with sharing disabled).\n-\/\/\n-\/\/ If we continue, then disable shared spaces and close the file.\n-\n-void FileMapInfo::fail_continue(const char *msg, ...) {\n-  va_list ap;\n-  va_start(ap, msg);\n-  fail_continue_impl(LogLevel::Info, msg, ap);\n-  va_end(ap);\n-}\n-\n-void FileMapInfo::fail_continue(LogLevelType level, const char *msg, ...) {\n-  va_list ap;\n-  va_start(ap, msg);\n-  fail_continue_impl(level, msg, ap);\n-  va_end(ap);\n-}\n-\n-void FileMapInfo::fail_continue_impl(LogLevelType level, const char *msg, va_list ap) {\n-  if (PrintSharedArchiveAndExit && _validating_shared_path_table) {\n-    \/\/ If we are doing PrintSharedArchiveAndExit and some of the classpath entries\n-    \/\/ do not validate, we can still continue \"limping\" to validate the remaining\n-    \/\/ entries. No need to quit.\n-    tty->print(\"[\");\n-    tty->vprint(msg, ap);\n-    tty->print_cr(\"]\");\n-  } else {\n-    if (RequireSharedSpaces) {\n-      fail_exit(msg, ap);\n-    } else {\n-      LogMessage(cds) lm;\n-      lm.vwrite(level, msg, ap);\n-    }\n-  }\n-}\n-\n@@ -466,1 +428,1 @@\n-    FileMapInfo::fail_continue(\"Required classpath entry does not exist: %s\", name);\n+    log_warning(cds)(\"Required classpath entry does not exist: %s\", name);\n@@ -470,1 +432,1 @@\n-      FileMapInfo::fail_continue(\"directory is not empty: %s\", name);\n+      log_warning(cds)(\"directory is not empty: %s\", name);\n@@ -477,1 +439,1 @@\n-      FileMapInfo::fail_continue(_timestamp != st.st_mtime ?\n+      log_warning(cds)(_timestamp != st.st_mtime ?\n@@ -482,1 +444,1 @@\n-      FileMapInfo::fail_continue(\"%s %s\", bad_jar_msg, name);\n+      log_warning(cds)(\"%s %s\", bad_jar_msg, name);\n@@ -1137,1 +1099,1 @@\n-      fail_continue(LogLevel::Warning, \"%s%s\", mismatch_msg, hint_msg);\n+      log_warning(cds)(\"%s%s\", mismatch_msg, hint_msg);\n@@ -1215,1 +1177,1 @@\n-      FileMapInfo::fail_continue(\"Specified shared archive not found (%s)\", _archive_name);\n+      log_info(cds)(\"Specified shared archive not found (%s)\", _archive_name);\n@@ -1231,1 +1193,1 @@\n-      FileMapInfo::fail_continue(\"Unable to read generic CDS file map header from shared archive\");\n+      log_warning(cds)(\"Unable to read generic CDS file map header from shared archive\");\n@@ -1237,1 +1199,1 @@\n-      FileMapInfo::fail_continue(\"The shared archive file has a bad magic number: %#x\", gen_header._magic);\n+      log_warning(cds)(\"The shared archive file has a bad magic number: %#x\", gen_header._magic);\n@@ -1242,1 +1204,1 @@\n-      FileMapInfo::fail_continue(\"Cannot handle shared archive file version 0x%x. Must be at least 0x%x.\",\n+      log_warning(cds)(\"Cannot handle shared archive file version 0x%x. Must be at least 0x%x.\",\n@@ -1248,1 +1210,1 @@\n-      FileMapInfo::fail_continue(\"The shared archive file version 0x%x does not match the required version 0x%x.\",\n+      log_warning(cds)(\"The shared archive file version 0x%x does not match the required version 0x%x.\",\n@@ -1254,1 +1216,1 @@\n-      FileMapInfo::fail_continue(\"Archive file header larger than archive file\");\n+      log_warning(cds)(\"Archive file header larger than archive file\");\n@@ -1264,1 +1226,1 @@\n-      FileMapInfo::fail_continue(\"Unable to read actual CDS file map header from shared archive\");\n+      log_warning(cds)(\"Unable to read actual CDS file map header from shared archive\");\n@@ -1299,1 +1261,1 @@\n-        FileMapInfo::fail_continue(\"Header checksum verification failed.\");\n+        log_warning(cds)(\"Header checksum verification failed.\");\n@@ -1312,1 +1274,1 @@\n-      FileMapInfo::fail_continue(\"base_archive_name offset\/size overflow: \" UINT32_FORMAT \"\/\" UINT32_FORMAT,\n+      log_warning(cds)(\"base_archive_name offset\/size overflow: \" UINT32_FORMAT \"\/\" UINT32_FORMAT,\n@@ -1318,1 +1280,1 @@\n-        FileMapInfo::fail_continue(\"static shared archive must have zero _base_archive_name_offset\");\n+        log_warning(cds)(\"static shared archive must have zero _base_archive_name_offset\");\n@@ -1322,1 +1284,1 @@\n-        FileMapInfo::fail_continue(\"static shared archive must have zero _base_archive_name_size\");\n+        log_warning(cds)(\"static shared archive must have zero _base_archive_name_size\");\n@@ -1330,1 +1292,1 @@\n-        FileMapInfo::fail_continue(\"Invalid base_archive_name offset\/size: \" UINT32_FORMAT \"\/\" UINT32_FORMAT,\n+        log_warning(cds)(\"Invalid base_archive_name offset\/size: \" UINT32_FORMAT \"\/\" UINT32_FORMAT,\n@@ -1336,1 +1298,1 @@\n-          FileMapInfo::fail_continue(\"Invalid base_archive_name offset\/size (out of range): \"\n+          log_warning(cds)(\"Invalid base_archive_name offset\/size (out of range): \"\n@@ -1343,1 +1305,1 @@\n-          FileMapInfo::fail_continue(\"Base archive name is damaged\");\n+          log_warning(cds)(\"Base archive name is damaged\");\n@@ -1347,1 +1309,1 @@\n-          FileMapInfo::fail_continue(\"Base archive %s does not exist\", name);\n+          log_warning(cds)(\"Base archive %s does not exist\", name);\n@@ -1397,1 +1359,1 @@\n-    fail_continue(\"Unable to read the file header.\");\n+    log_warning(cds)(\"Unable to read the file header.\");\n@@ -1404,1 +1366,1 @@\n-      FileMapInfo::fail_continue(\"Not a base shared archive: %s\", _full_path);\n+      log_warning(cds)(\"Not a base shared archive: %s\", _full_path);\n@@ -1409,1 +1371,1 @@\n-      FileMapInfo::fail_continue(\"Not a top shared archive: %s\", _full_path);\n+      log_warning(cds)(\"Not a top shared archive: %s\", _full_path);\n@@ -1419,1 +1381,1 @@\n-    fail_continue(\"Failed to read file header from the top archive file\\n\");\n+    log_warning(cds)(\"Failed to read file header from the top archive file\\n\");\n@@ -1426,1 +1388,1 @@\n-    fail_continue(\"The shared archive file has the wrong version.\");\n+    log_warning(cds)(\"The shared archive file has the wrong version.\");\n@@ -1432,1 +1394,1 @@\n-      FileMapInfo::fail_continue(\"common app classpath prefix len < 0\");\n+      log_warning(cds)(\"common app classpath prefix len < 0\");\n@@ -1445,1 +1407,1 @@\n-      FileMapInfo::fail_continue(\"The shared archive file has an incorrect header size.\");\n+      log_warning(cds)(\"The shared archive file has an incorrect header size.\");\n@@ -1453,1 +1415,1 @@\n-    FileMapInfo::fail_continue(\"JVM version identifier is corrupted.\");\n+    log_warning(cds)(\"JVM version identifier is corrupted.\");\n@@ -1462,1 +1424,1 @@\n-    FileMapInfo::fail_continue(\"The shared archive file was created by a different\"\n+    log_warning(cds)(\"The shared archive file was created by a different\"\n@@ -1474,1 +1436,1 @@\n-      fail_continue(\"The shared archive file has been truncated.\");\n+      log_warning(cds)(\"The shared archive file has been truncated.\");\n@@ -1497,1 +1459,1 @@\n-      fail_continue(\"Specified shared archive not found (%s)\", _full_path);\n+      log_info(cds)(\"Specified shared archive not found (%s)\", _full_path);\n@@ -1499,1 +1461,1 @@\n-      fail_continue(\"Failed to open shared archive file (%s)\",\n+      log_warning(cds)(\"Failed to open shared archive file (%s)\",\n@@ -2523,1 +2485,1 @@\n-    fail_continue(\"Checksum verification failed.\");\n+    log_warning(cds)(\"Checksum verification failed.\");\n@@ -2592,3 +2554,2 @@\n-\/\/ information (version, boot classpath, etc.).  If initialization\n-\/\/ fails, shared spaces are disabled and the file is closed. [See\n-\/\/ fail_continue.]\n+\/\/ information (version, boot classpath, etc.). If initialization\n+\/\/ fails, shared spaces are disabled and the file is closed.\n@@ -2609,1 +2570,1 @@\n-    FileMapInfo::fail_continue(\"CDS is disabled because early JVMTI ClassFileLoadHook is in use.\");\n+    log_info(cds)(\"CDS is disabled because early JVMTI ClassFileLoadHook is in use.\");\n@@ -2614,1 +2575,1 @@\n-    FileMapInfo::fail_continue(\"The shared archive file cannot be used with an exploded module build.\");\n+    log_info(cds)(\"The shared archive file cannot be used with an exploded module build.\");\n@@ -2620,1 +2581,1 @@\n-      FileMapInfo::fail_continue(\"Initialize static archive failed.\");\n+      log_info(cds)(\"Initialize static archive failed.\");\n@@ -2623,1 +2584,1 @@\n-      FileMapInfo::fail_continue(\"Initialize dynamic archive failed.\");\n+      log_info(cds)(\"Initialize dynamic archive failed.\");\n@@ -2666,1 +2627,1 @@\n-    FileMapInfo::fail_continue(\"The shared archive file's ObjectAlignmentInBytes of %d\"\n+    log_info(cds)(\"The shared archive file's ObjectAlignmentInBytes of %d\"\n@@ -2672,1 +2633,1 @@\n-    FileMapInfo::fail_continue(\"The shared archive file's CompactStrings setting (%s)\"\n+    log_info(cds)(\"The shared archive file's CompactStrings setting (%s)\"\n@@ -2692,1 +2653,1 @@\n-    FileMapInfo::fail_continue(\"The shared archive file's BytecodeVerificationLocal setting (%s)\"\n+    log_info(cds)(\"The shared archive file's BytecodeVerificationLocal setting (%s)\"\n@@ -2704,1 +2665,1 @@\n-    FileMapInfo::fail_continue(\"The shared archive file was created with less restrictive \"\n+    log_info(cds)(\"The shared archive file was created with less restrictive \"\n@@ -2716,1 +2677,1 @@\n-    FileMapInfo::fail_continue(\"The setting of the AllowArchivingWithJavaAgent is different \"\n+    log_warning(cds)(\"The setting of the AllowArchivingWithJavaAgent is different \"\n@@ -2729,1 +2690,1 @@\n-    FileMapInfo::fail_continue(\"Unable to use shared archive.\\nThe saved state of UseCompressedOops and UseCompressedClassPointers is \"\n+    log_info(cds)(\"Unable to use shared archive.\\nThe saved state of UseCompressedOops and UseCompressedClassPointers is \"\n","filename":"src\/hotspot\/share\/cds\/filemap.cpp","additions":45,"deletions":84,"binary":false,"changes":129,"status":"modified"},{"patch":"@@ -487,3 +487,0 @@\n-  static void fail_continue(const char *msg, ...) ATTRIBUTE_PRINTF(1, 2);\n-  static void fail_continue(LogLevelType level, const char *msg, ...) ATTRIBUTE_PRINTF(2, 3);\n-  static void fail_continue_impl(LogLevelType level, const char *msg, va_list ap) ATTRIBUTE_PRINTF(2, 0);\n","filename":"src\/hotspot\/share\/cds\/filemap.hpp","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -974,0 +974,1 @@\n+  bool has_failed = false;\n@@ -977,2 +978,1 @@\n-    dynamic_mapinfo = open_dynamic_archive();\n-\n+    dynamic_mapinfo = open_dynamic_archive(has_failed);\n@@ -1012,1 +1012,1 @@\n-    FileMapInfo::fail_continue(\"Unable to map shared spaces\");\n+    log_info(cds)(\"Unable to map shared spaces\");\n@@ -1015,0 +1015,2 @@\n+    } else if (RequireSharedSpaces) {\n+      FileMapInfo::fail_stop(\"Unable to map shared spaces\");\n@@ -1018,0 +1020,1 @@\n+  \/\/ If mapping failed and -XShare:on, the vm should exit\n@@ -1019,0 +1022,1 @@\n+    has_failed = true;\n@@ -1022,0 +1026,1 @@\n+    has_failed = true;\n@@ -1024,0 +1029,3 @@\n+  if (RequireSharedSpaces && has_failed) {\n+      FileMapInfo::fail_stop(\"Unable to map shared spaces\");\n+  }\n@@ -1037,1 +1045,1 @@\n-FileMapInfo* MetaspaceShared::open_dynamic_archive() {\n+FileMapInfo* MetaspaceShared::open_dynamic_archive(bool &has_failed) {\n@@ -1049,0 +1057,1 @@\n+    has_failed = true;\n","filename":"src\/hotspot\/share\/cds\/metaspaceShared.cpp","additions":13,"deletions":4,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -184,1 +184,1 @@\n-  static FileMapInfo* open_dynamic_archive();\n+  static FileMapInfo* open_dynamic_archive(bool &has_failed);\n","filename":"src\/hotspot\/share\/cds\/metaspaceShared.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2919,0 +2919,3 @@\n+  if (UseSharedSpaces && RequireSharedSpaces) {\n+    LogConfiguration::configure_stdout(LogLevel::Info, true, LOG_TAGS(cds));\n+  }\n","filename":"src\/hotspot\/share\/runtime\/arguments.cpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -54,1 +54,1 @@\n-        opts.addSuffix(\"-showversion\", \"-Xlog:all=warning::level,tags\", \"ServiceLoaderApp\");\n+        opts.addSuffix(\"-showversion\", \"-Xlog:all=warning::level,tags\", \"-Xshare:auto\", \"ServiceLoaderApp\");\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/ServiceLoaderTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -117,1 +117,1 @@\n-      .ifNoMappingFailure(output -> check(output, 1, true, lastCheckMsg, \"[Timestamp mismatch]\"));\n+      .ifNoMappingFailure(output -> check(output, 1, true, lastCheckMsg, \"Timestamp mismatch\"));\n@@ -131,1 +131,1 @@\n-      .ifNoMappingFailure(output -> check(output, 1, true, lastCheckMsg, \"[Required classpath entry does not exist: \" + appJar + \"]\"));\n+      .ifNoMappingFailure(output -> check(output, 1, true, lastCheckMsg, \"Required classpath entry does not exist: \" + appJar));\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/PrintSharedArchiveAndExit.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -162,1 +162,1 @@\n-            \"-Xshare:on\",\n+            \"-Xshare:auto\",\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/cacheObject\/ArchivedModuleWithCustomImageTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -117,0 +117,1 @@\n+            \"-Xshare:auto\",\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/MainModuleOnly.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -192,0 +192,1 @@\n+             \"-Xshare:auto\",\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/SharedArchiveFileOption.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -67,0 +67,1 @@\n+            \"-Xshare:auto\",\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/UsedAllArchivedLambdas.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}