{"files":[{"patch":"@@ -910,1 +910,0 @@\n-  bool has_failed = false;\n@@ -914,1 +913,1 @@\n-    dynamic_mapinfo = open_dynamic_archive(has_failed);\n+    dynamic_mapinfo = open_dynamic_archive();\n@@ -959,0 +958,1 @@\n+  bool has_failed = false;\n@@ -983,1 +983,1 @@\n-FileMapInfo* MetaspaceShared::open_dynamic_archive(bool &has_failed) {\n+FileMapInfo* MetaspaceShared::open_dynamic_archive() {\n@@ -995,1 +995,3 @@\n-    has_failed = true;\n+    if (RequireSharedSpaces) {\n+      FileMapInfo::fail_stop(\"Failed to initialize dynamic archive\");\n+    }\n","filename":"src\/hotspot\/share\/cds\/metaspaceShared.cpp","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -184,1 +184,1 @@\n-  static FileMapInfo* open_dynamic_archive(bool &has_failed);\n+  static FileMapInfo* open_dynamic_archive();\n","filename":"src\/hotspot\/share\/cds\/metaspaceShared.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2922,3 +2922,0 @@\n-  if (UseSharedSpaces && RequireSharedSpaces) {\n-    LogConfiguration::configure_stdout(LogLevel::Info, true, LOG_TAGS(cds));\n-  }\n","filename":"src\/hotspot\/share\/runtime\/arguments.cpp","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -49,1 +49,1 @@\n-\n+        opts.addPrefix(\"-Xlog:cds\");\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/ArchiveDoesNotExist.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -51,1 +51,1 @@\n-        OutputAnalyzer out = CDSTestUtils.runWithArchive(loadCompactStringsArgument);\n+        OutputAnalyzer out = CDSTestUtils.runWithArchive(\"-Xlog:cds\", loadCompactStringsArgument);\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/CdsDifferentCompactStrings.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -66,1 +66,1 @@\n-        OutputAnalyzer out = CDSTestUtils.runWithArchive(loadAlignmentArgument);\n+        OutputAnalyzer out = CDSTestUtils.runWithArchive(\"-Xlog:cds\", loadAlignmentArgument);\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/CdsDifferentObjectAlignment.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -54,1 +54,1 @@\n-        opts.addSuffix(\"-showversion\", \"-Xlog:all=warning::level,tags\", \"-Xshare:auto\", \"ServiceLoaderApp\");\n+        opts.addSuffix(\"-showversion\", \"-Xlog:all=warning::level,tags\", \"ServiceLoaderApp\");\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/ServiceLoaderTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -224,0 +224,1 @@\n+                           \"-Xlog:cds\",\n@@ -304,0 +305,1 @@\n+                           \"-Xlog:cds\",\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/VerifierTest.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -162,1 +162,0 @@\n-            \"-Xshare:auto\",\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/cacheObject\/ArchivedModuleWithCustomImageTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -117,1 +117,0 @@\n-            \"-Xshare:auto\",\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/MainModuleOnly.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -192,1 +192,0 @@\n-             \"-Xshare:auto\",\n@@ -257,1 +256,0 @@\n-                 \"-Xshare:auto\",\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/SharedArchiveFileOption.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"}]}