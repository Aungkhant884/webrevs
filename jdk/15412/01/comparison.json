{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,1 +47,1 @@\n-    private BlockCipherParamsCore core;\n+    private final BlockCipherParamsCore core;\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/AESParameters.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,1 +49,1 @@\n-    private int block_size = 0;\n+    private final int block_size;\n@@ -52,1 +52,1 @@\n-    private int[] moreSizes = null;\n+    private final int[] moreSizes;\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/BlockCipherParamsCore.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,1 +32,0 @@\n-import sun.security.util.*;\n@@ -34,1 +33,0 @@\n-import javax.crypto.spec.*;\n@@ -60,1 +58,1 @@\n-    private CipherCore core = null;\n+    private final CipherCore core;\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/BlowfishCipher.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,1 +47,1 @@\n-    private BlockCipherParamsCore core;\n+    private final BlockCipherParamsCore core;\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/BlowfishParameters.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,0 @@\n-import java.util.Objects;\n@@ -58,1 +57,1 @@\n-    private byte[] k;\n+    private final byte[] k;\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/CipherBlockChaining.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -60,1 +60,1 @@\n-    private byte[] buffer = null;\n+    private final byte[] buffer;\n@@ -65,1 +65,1 @@\n-    private int blockSize = 0;\n+    private final int blockSize;\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/CipherCore.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -60,1 +60,1 @@\n-    private int numBytes;\n+    private final int numBytes;\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/CipherFeedback.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,1 +32,0 @@\n-import javax.crypto.spec.*;\n@@ -55,1 +54,1 @@\n-    private CipherCore core = null;\n+    private final CipherCore core;\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/DESCipher.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,1 +47,1 @@\n-    private BlockCipherParamsCore core;\n+    private final BlockCipherParamsCore core;\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/DESParameters.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,1 +32,0 @@\n-import javax.crypto.spec.*;\n@@ -53,1 +52,1 @@\n-    private CipherCore core = null;\n+    private final CipherCore core;\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/DESedeCipher.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2007, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,1 +51,2 @@\n-    private byte[] buf1, buf2;\n+    private final byte[] buf1;\n+    private final byte[] buf2;\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/DESedeCrypt.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,1 +46,1 @@\n-    private BlockCipherParamsCore core;\n+    private final BlockCipherParamsCore core;\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/DESedeParameters.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -60,1 +60,1 @@\n-    private FeedbackCipher cipher;\n+    private final FeedbackCipher cipher;\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/DESedeWrapCipher.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -52,1 +52,1 @@\n-    static final long serialVersionUID = 7565477590005668886L;\n+    private static final long serialVersionUID = 7565477590005668886L;\n@@ -58,1 +58,1 @@\n-    private BigInteger x;\n+    private final BigInteger x;\n@@ -67,1 +67,1 @@\n-    private BigInteger p;\n+    private final BigInteger p;\n@@ -70,1 +70,1 @@\n-    private BigInteger g;\n+    private final BigInteger g;\n@@ -73,1 +73,1 @@\n-    private int l;\n+    private final int l;\n@@ -166,0 +166,2 @@\n+            } else {\n+                this.l = 0;\n@@ -175,1 +177,3 @@\n-            parseKeyBits();\n+\n+            DerInputStream in = new DerInputStream(this.key);\n+            this.x = in.getBigInteger();\n@@ -276,10 +280,0 @@\n-    private void parseKeyBits() throws InvalidKeyException {\n-        try {\n-            DerInputStream in = new DerInputStream(this.key);\n-            this.x = in.getBigInteger();\n-        } catch (IOException e) {\n-            throw new InvalidKeyException(\n-                \"Error parsing key encoding: \" + e.getMessage(), e);\n-        }\n-    }\n-\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/DHPrivateKey.java","additions":10,"deletions":16,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -51,1 +51,1 @@\n-    static final long serialVersionUID = 7647557958927458271L;\n+    private static final long serialVersionUID = 7647557958927458271L;\n@@ -54,1 +54,1 @@\n-    private BigInteger y;\n+    private final BigInteger y;\n@@ -63,1 +63,1 @@\n-    private BigInteger p;\n+    private final BigInteger p;\n@@ -66,1 +66,1 @@\n-    private BigInteger g;\n+    private final BigInteger g;\n@@ -69,1 +69,1 @@\n-    private int l;\n+    private final int l;\n@@ -72,1 +72,1 @@\n-    static ObjectIdentifier DH_OID =\n+    static final ObjectIdentifier DH_OID =\n@@ -158,0 +158,2 @@\n+            } else {\n+                this.l = 0;\n@@ -167,1 +169,4 @@\n-            parseKeyBits();\n+\n+            DerInputStream in = new DerInputStream(this.key);\n+            this.y = in.getBigInteger();\n+\n@@ -268,10 +273,0 @@\n-    private void parseKeyBits() throws InvalidKeyException {\n-        try {\n-            DerInputStream in = new DerInputStream(this.key);\n-            this.y = in.getBigInteger();\n-        } catch (IOException e) {\n-            throw new InvalidKeyException(\n-                \"Error parsing key encoding: \" + e.toString());\n-        }\n-    }\n-\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/DHPublicKey.java","additions":12,"deletions":17,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,1 +47,1 @@\n-    private AlgorithmId algid;\n+    private final AlgorithmId algid;\n@@ -50,1 +50,1 @@\n-    private byte[] encryptedData;\n+    private final byte[] encryptedData;\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/EncryptedPrivateKeyInfo.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -127,1 +127,1 @@\n-    private long[] subkeyHtbl;\n+    private final long[] subkeyHtbl;\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/GHASH.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -77,2 +77,2 @@\n-    static int DEFAULT_IV_LEN = 12; \/\/ in bytes\n-    static int DEFAULT_TAG_LEN = 16; \/\/ in bytes\n+    private static final int DEFAULT_IV_LEN = 12; \/\/ in bytes\n+    private static final int DEFAULT_TAG_LEN = 16; \/\/ in bytes\n@@ -101,1 +101,1 @@\n-    SymmetricCipher blockCipher;\n+    final SymmetricCipher blockCipher;\n@@ -109,1 +109,1 @@\n-    int keySize;\n+    private final int keySize;\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/GaloisCounterMode.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,1 @@\n-    private int blockSize;\n+    private final int blockSize;\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/ISO10126Padding.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -102,1 +102,1 @@\n-    private Hashtable<String, Object> entries = new Hashtable<String, Object>();\n+    private final Hashtable<String, Object> entries = new Hashtable<>();\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/JceKeyStore.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -81,1 +81,1 @@\n-    private char[] password;\n+    private final char[] password;\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/KeyProtector.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -59,1 +59,1 @@\n-    private static ObjectIdentifier OID_MGF1 =\n+    private static final ObjectIdentifier OID_MGF1 =\n@@ -61,1 +61,1 @@\n-    private static ObjectIdentifier OID_PSpecified =\n+    private static final ObjectIdentifier OID_PSpecified =\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/OAEPParameters.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,1 +48,1 @@\n-    private byte[] k = null;\n+    private final byte[] k;\n@@ -53,1 +53,1 @@\n-    private byte[] register = null;\n+    private final byte[] register;\n@@ -59,1 +59,1 @@\n-    private int numBytes;\n+    private final int numBytes;\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/OutputFeedback.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -49,1 +49,1 @@\n-    static final long serialVersionUID = -2234768909660948176L;\n+    private static final long serialVersionUID = -2234768909660948176L;\n@@ -53,1 +53,1 @@\n-    private String type;\n+    private final String type;\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/PBEKey.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -49,1 +49,1 @@\n-    private String type;\n+    private final String type;\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/PBEKeyFactory.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,4 +46,3 @@\n-    private CipherCore cipher;\n-    private MessageDigest md;\n-    private int blkSize;\n-    private String algo = null;\n+    private final CipherCore cipher;\n+    private final MessageDigest md;\n+    private final String algo;\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/PBES1Core.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -95,1 +95,1 @@\n-    private static ObjectIdentifier pkcs5PBKDF2_OID =\n+    private static final ObjectIdentifier pkcs5PBKDF2_OID =\n@@ -97,1 +97,1 @@\n-    private static ObjectIdentifier pkcs5PBES2_OID =\n+    private static final ObjectIdentifier pkcs5PBES2_OID =\n@@ -99,1 +99,1 @@\n-    private static ObjectIdentifier aes128CBC_OID =\n+    private static final ObjectIdentifier aes128CBC_OID =\n@@ -101,1 +101,1 @@\n-    private static ObjectIdentifier aes192CBC_OID =\n+    private static final ObjectIdentifier aes192CBC_OID =\n@@ -103,1 +103,1 @@\n-    private static ObjectIdentifier aes256CBC_OID =\n+    private static final ObjectIdentifier aes256CBC_OID =\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/PBES2Parameters.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,1 +46,1 @@\n-    private PBES1Core core;\n+    private final PBES1Core core;\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/PBEWithMD5AndDESCipher.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -56,1 +56,1 @@\n-    private PBES1Core core;\n+    private final PBES1Core core;\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/PBEWithMD5AndTripleDESCipher.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -61,1 +61,1 @@\n-    static final long serialVersionUID = -2234868909660948157L;\n+    private static final long serialVersionUID = -2234868909660948157L;\n@@ -63,4 +63,4 @@\n-    private char[] passwd;\n-    private byte[] salt;\n-    private int iterCount;\n-    private byte[] key;\n+    private final char[] passwd;\n+    private final byte[] salt;\n+    private final int iterCount;\n+    private final byte[] key;\n@@ -69,2 +69,2 @@\n-    private transient Mac prf;\n-    private transient Cleaner.Cleanable cleaner;\n+    private final transient Mac prf;\n+    private final transient Cleaner.Cleanable cleaner;\n@@ -96,0 +96,1 @@\n+        byte[] key = null;\n@@ -114,1 +115,1 @@\n-            this.key = deriveKey(prf, passwdBytes, salt, iterCount, keyLength);\n+            key = deriveKey(prf, passwdBytes, salt, iterCount, keyLength);\n@@ -125,1 +126,1 @@\n-        final byte[] k = this.key;\n+        final byte[] k = this.key = key;\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/PBKDF2KeyImpl.java","additions":10,"deletions":9,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,1 @@\n-    private int blockSize;\n+    private final int blockSize;\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/PKCS5Padding.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -56,1 +56,1 @@\n-    private AlgorithmId algid;\n+    private final AlgorithmId algid;\n@@ -59,1 +59,1 @@\n-    private byte[] privkey;\n+    private final byte[] privkey;\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/PrivateKeyInfo.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}