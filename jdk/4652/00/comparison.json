{"files":[{"patch":"@@ -94,1 +94,1 @@\n-  Label(const Label&) { ShouldNotReachHere(); }\n+  NONCOPYABLE(Label);\n","filename":"src\/hotspot\/share\/asm\/assembler.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,0 +44,1 @@\n+  NONCOPYABLE(verification_type_info);\n@@ -48,1 +49,0 @@\n-  verification_type_info(const verification_type_info&) {}\n@@ -172,0 +172,2 @@\n+  NONCOPYABLE(stack_map_frame);\n+\n@@ -177,1 +179,0 @@\n-  stack_map_frame(const stack_map_frame&) {}\n@@ -904,0 +905,1 @@\n+  NONCOPYABLE(stack_map_table);\n@@ -908,1 +910,0 @@\n-  stack_map_table(const stack_map_table&) {}\n@@ -936,0 +937,1 @@\n+  NONCOPYABLE(stack_map_table_attribute);\n@@ -940,1 +942,0 @@\n-  stack_map_table_attribute(const stack_map_table_attribute&) {}\n","filename":"src\/hotspot\/share\/classfile\/stackMapTableFormat.hpp","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -85,0 +85,1 @@\n+  NONCOPYABLE(ShenandoahRefProcThreadLocal);\n@@ -89,3 +90,0 @@\n-  ShenandoahRefProcThreadLocal(const ShenandoahRefProcThreadLocal&) = delete; \/\/ non construction-copyable\n-  ShenandoahRefProcThreadLocal& operator=(const ShenandoahRefProcThreadLocal&) = delete; \/\/ non copyable\n-\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahReferenceProcessor.hpp","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,2 +57,1 @@\n-  void operator=(const LogMessageBuffer& ref) {}\n-  LogMessageBuffer(const LogMessageBuffer& ref) {}\n+  NONCOPYABLE(LogMessageBuffer);\n","filename":"src\/hotspot\/share\/logging\/logMessageBuffer.hpp","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -223,2 +223,1 @@\n-  Node(const Node&);            \/\/ not defined; linker error to use these\n-  Node &operator=(const Node &rhs);\n+  NONCOPYABLE(Node);\n","filename":"src\/hotspot\/share\/opto\/node.hpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -65,1 +65,1 @@\n-  FormatBuffer(const FormatBuffer &); \/\/ prevent copies\n+  NONCOPYABLE(FormatBuffer);\n","filename":"src\/hotspot\/share\/utilities\/formatBuffer.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}