{"files":[{"patch":"@@ -427,0 +427,20 @@\n+\/\/ Filters\n+static bool non_self_executable_filter(HandshakeOperation* op) {\n+  return !op->is_async();\n+}\n+static bool no_async_exception_filter(HandshakeOperation* op) {\n+  return !op->is_async_exception();\n+}\n+static bool async_exception_filter(HandshakeOperation* op) {\n+  return op->is_async_exception();\n+}\n+static bool is_ThreadDeath_filter(HandshakeOperation* op) {\n+  return op->is_ThreadDeath();\n+}\n+static bool no_suspend_no_async_exception_filter(HandshakeOperation* op) {\n+  return !op->is_suspend() && !op->is_async_exception();\n+}\n+static bool all_ops_filter(HandshakeOperation* op) {\n+  return true;\n+}\n+\n@@ -434,2 +454,9 @@\n-  _async_suspend_handshake(false)\n-{\n+  _async_suspend_handshake(false) {\n+}\n+\n+HandshakeState::~HandshakeState() {\n+  while (has_operation()) {\n+    HandshakeOperation* op = _queue.pop(all_ops_filter);\n+    guarantee(op->is_async(), \"Only async operations may still be present on queue\");\n+    delete op;\n+  }\n@@ -450,17 +477,0 @@\n-\/\/ Filters\n-static bool non_self_executable_filter(HandshakeOperation* op) {\n-  return !op->is_async();\n-}\n-static bool no_async_exception_filter(HandshakeOperation* op) {\n-  return !op->is_async_exception();\n-}\n-static bool async_exception_filter(HandshakeOperation* op) {\n-  return op->is_async_exception();\n-}\n-static bool is_ThreadDeath_filter(HandshakeOperation* op) {\n-  return op->is_ThreadDeath();\n-}\n-static bool no_suspend_no_async_exception_filter(HandshakeOperation* op) {\n-  return !op->is_suspend() && !op->is_async_exception();\n-}\n-\n","filename":"src\/hotspot\/share\/runtime\/handshake.cpp","additions":29,"deletions":19,"binary":false,"changes":48,"status":"modified"},{"patch":"@@ -129,0 +129,1 @@\n+  ~HandshakeState();\n","filename":"src\/hotspot\/share\/runtime\/handshake.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1673,0 +1673,3 @@\n+  ~InstallAsyncExceptionHandshake() {\n+    delete _aeh;\n+  }\n@@ -1676,0 +1679,1 @@\n+    _aeh = nullptr;\n","filename":"src\/hotspot\/share\/runtime\/thread.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 8167108 8266130 8282704 8283467\n+ * @bug 8167108 8266130 8282704 8283467 8284632\n@@ -96,1 +96,0 @@\n-            Throwable myException = new ThreadDeath();\n@@ -106,0 +105,1 @@\n+                long inner_count = 0;\n@@ -107,0 +107,12 @@\n+                    inner_count++;\n+\n+                    \/\/ Throw RuntimeException before ThreadDeath since a\n+                    \/\/ ThreadDeath can also be queued up when there's already\n+                    \/\/ a non-ThreadDeath async execution queued up.\n+                    Throwable myException;\n+                    if ((inner_count % 1) == 1) {\n+                        myException = new RuntimeException();\n+                    } else {\n+                        myException = new ThreadDeath();\n+                    }\n+\n@@ -142,1 +154,1 @@\n-            retCode = stopThread(thread, myException);\n+            retCode = stopThread(thread, new ThreadDeath());\n","filename":"test\/hotspot\/jtreg\/runtime\/Thread\/StopAtExit.java","additions":15,"deletions":3,"binary":false,"changes":18,"status":"modified"}]}