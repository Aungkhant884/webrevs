{"files":[{"patch":"@@ -424,2 +424,6 @@\n-  \/\/ unused... but returns fp() to minimize changes introduced by 7087445\n-  return fp();\n+  \/\/ `this` is the caller of the deoptee. We want to trimm it, if compiled, to\n+  \/\/ unextended_sp. This is necessary if the deoptee frame is the bottom frame\n+  \/\/ of a continuation on stack (more frames could be in a StackChunk) as it\n+  \/\/ will pop its stack args. Otherwise the recursion in\n+  \/\/ FreezeBase::recurse_freeze_java_frame() would not stop at the bottom frame.\n+  return is_compiled_frame() ? unextended_sp() : sp();\n","filename":"src\/hotspot\/cpu\/ppc\/frame_ppc.cpp","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -3093,0 +3093,5 @@\n+  \/\/ Freezing continuation frames requires that the caller is trimmed to unextended sp if compiled.\n+  Register caller_sp = R23_tmp3;\n+  __ ld_ptr(caller_sp, Deoptimization::UnrollBlock::initial_info_offset_in_bytes(), unroll_block_reg);\n+  __ resize_frame_absolute(caller_sp, R24_tmp4, R25_tmp5);\n+\n@@ -3228,0 +3233,5 @@\n+  \/\/ Freezing continuation frames requires that the caller is trimmed to unextended sp if compiled.\n+  Register caller_sp = R23_tmp3;\n+  __ ld_ptr(caller_sp, Deoptimization::UnrollBlock::initial_info_offset_in_bytes(), unroll_block_reg);\n+  __ resize_frame_absolute(caller_sp, R24_tmp4, R25_tmp5);\n+\n","filename":"src\/hotspot\/cpu\/ppc\/sharedRuntime_ppc.cpp","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @test id=policy-1-without-gc-with-verification\n+ * @test id=COMP_NONE\n@@ -43,1 +43,1 @@\n- *                     BasicExt 1 0\n+ *                     BasicExt COMP_NONE\n@@ -47,1 +47,1 @@\n- * @test id=policy-2-without-gc-with-verification\n+ * @test id=COMP_WINDOW_LENGTH_1\n@@ -64,1 +64,1 @@\n- *                     BasicExt 2 0\n+ *                     BasicExt COMP_WINDOW_LENGTH_1\n@@ -68,1 +68,1 @@\n- * @test id=policy-3-without-gc-with-verification\n+ * @test id=COMP_WINDOW_LENGTH_2\n@@ -85,1 +85,1 @@\n- *                     BasicExt 3 0\n+ *                     BasicExt COMP_WINDOW_LENGTH_2\n@@ -89,1 +89,1 @@\n- * @test id=policy-4-without-gc-with-verification\n+ * @test id=COMP_WINDOW_LENGTH_3\n@@ -106,1 +106,1 @@\n- *                     BasicExt 4 0\n+ *                     BasicExt COMP_WINDOW_LENGTH_3\n@@ -110,1 +110,1 @@\n- * @test id=policy-5-without-gc-with-verification\n+ * @test id=COMP_ALL\n@@ -127,1 +127,1 @@\n- *                     BasicExt 5 0\n+ *                     BasicExt COMP_ALL\n@@ -131,1 +131,1 @@\n- * @test id=policy-1-with-gc-without-verification\n+ * @test id=COMP_NONE-GC_AFTER_YIELD\n@@ -148,1 +148,1 @@\n- *                     BasicExt 1 1\n+ *                     BasicExt COMP_NONE GC_AFTER_YIELD\n@@ -152,1 +152,1 @@\n- * @test id=policy-2-with-gc-without-verification\n+ * @test id=COMP_WINDOW_LENGTH_1-GC_AFTER_YIELD\n@@ -169,1 +169,1 @@\n- *                     BasicExt 2 1\n+ *                     BasicExt COMP_WINDOW_LENGTH_1 GC_AFTER_YIELD\n@@ -173,1 +173,1 @@\n- * @test id=policy-3-with-gc-without-verification\n+ * @test id=COMP_WINDOW_LENGTH_2-GC_AFTER_YIELD\n@@ -190,1 +190,1 @@\n- *                     BasicExt 3 1\n+ *                     BasicExt COMP_WINDOW_LENGTH_2 GC_AFTER_YIELD\n@@ -194,1 +194,1 @@\n- * @test id=policy-4-with-gc-without-verification\n+ * @test id=COMP_WINDOW_LENGTH_3-GC_AFTER_YIELD\n@@ -211,1 +211,1 @@\n- *                     BasicExt 4 1\n+ *                     BasicExt COMP_WINDOW_LENGTH_3 GC_AFTER_YIELD\n@@ -215,1 +215,1 @@\n- * @test id=policy-5-with-gc-without-verification\n+ * @test id=COMP_ALL-GC_AFTER_YIELD\n@@ -232,1 +232,1 @@\n- *                     BasicExt 5 1\n+ *                     BasicExt COMP_ALL GC_AFTER_YIELD\n@@ -254,3 +254,3 @@\n-    public static final Pattern COMP_NONE  = Pattern.compile(\"COMP_NONE\");\n-    public static final Pattern COMP_ALL   = Pattern.compile(\"COMP_ALL\");\n-    public static final Pattern CONT_METHS = Pattern.compile(\"^(enter|enter0|yield|yield0)$\");\n+    public static final Pattern PAT_COMP_NONE  = Pattern.compile(\"COMP_NONE\");\n+    public static final Pattern PAT_COMP_ALL   = Pattern.compile(\"COMP_ALL\");\n+    public static final Pattern PAT_CONT_METHS = Pattern.compile(\"^(enter|enter0|yield|yield0)$\");\n@@ -258,2 +258,3 @@\n-    public static int compPolicySelection;\n-    public static boolean triggerGCAfterYield;\n+    public static CompilationPolicy compPolicySelection;\n+    public static DeoptBehaviour deoptBehaviour;\n+    public static GCBehaviour gcBehaviour;\n@@ -275,0 +276,10 @@\n+    enum GCBehaviour {\n+        GC_AFTER_YIELD,\n+        NO_GC_AFTER_YIELD,\n+    }\n+\n+    enum DeoptBehaviour {\n+        DEOPT_AFTER_YIELD,\n+        NO_DEOPT_AFTER_YIELD,\n+    }\n+\n@@ -285,2 +296,1 @@\n-            compPolicySelection = Integer.parseInt(args[0]);\n-            triggerGCAfterYield = Integer.parseInt(args[1]) == 1;\n+            parseArgument(args);\n@@ -289,1 +299,18 @@\n-            t.printStackTrace();\n+            throw t;\n+        }\n+    }\n+\n+    public static void parseArgument(String[] args) {\n+        compPolicySelection = CompilationPolicy.COMP_NONE;\n+        deoptBehaviour = DeoptBehaviour.NO_DEOPT_AFTER_YIELD;\n+        gcBehaviour = GCBehaviour.NO_GC_AFTER_YIELD;\n+        for (int i = 0; i < args.length; i++) {\n+            try {\n+                compPolicySelection = CompilationPolicy.valueOf(args[i]);\n+            } catch(IllegalArgumentException e) { \/* ignored *\/ }\n+            try {\n+                deoptBehaviour = DeoptBehaviour.valueOf(args[i]);\n+            } catch(IllegalArgumentException e) { \/* ignored *\/ }\n+            try {\n+                gcBehaviour = GCBehaviour.valueOf(args[i]);\n+            } catch(IllegalArgumentException e) { \/* ignored *\/ }\n@@ -296,1 +323,3 @@\n-        System.out.println(\"callSystemGC=\" + triggerGCAfterYield);\n+        System.out.println(\"compPolicySelection=\" + compPolicySelection);\n+        System.out.println(\"deoptbehaviour=\" + deoptBehaviour);\n+        System.out.println(\"gcBehaviour=\" + gcBehaviour);\n@@ -301,13 +330,1 @@\n-        boolean all = compPolicySelection == 0;\n-        if (compPolicySelection == 1 || all)\n-            runTests(new CompilationPolicy(7 \/*warmup*\/, COMP_NONE, COMP_NONE \/*Cont. pattern*\/));\n-        if (compPolicySelection == 2 || all)\n-            runTests(new CompilationPolicy(7 \/*warmup*\/, 1 \/* length comp. window *\/));\n-        if (compPolicySelection == 3 || all)\n-            runTests(new CompilationPolicy(7 \/*warmup*\/, 2 \/* length comp. window *\/));\n-        if (compPolicySelection == 4 || all)\n-            runTests(new CompilationPolicy(7 \/*warmup*\/, 3 \/* length comp. window *\/));\n-        if (compPolicySelection == 5 || all)\n-            runTests(new CompilationPolicy(7 \/*warmup*\/, COMP_ALL, CONT_METHS \/*Cont. pattern*\/));\n-        if (compPolicySelection >= 6)\n-            throw new Error(\"CompilationPolicy with number \" + compPolicySelection + \" does not exist\");\n+        runTests(compPolicySelection);\n@@ -331,0 +348,10 @@\n+        if (deoptBehaviour == DeoptBehaviour.NO_DEOPT_AFTER_YIELD) {\n+            DeoptBehaviour savedDeoptBehaviour = deoptBehaviour;\n+            try {\n+                \/\/ run at least the following test case with deoptimization\n+                deoptBehaviour = DeoptBehaviour.DEOPT_AFTER_YIELD;\n+                new ContinuationCompiledFramesWithStackArgs_3c4().runTestCase(1, compPolicy);\n+            } finally {\n+                deoptBehaviour = savedDeoptBehaviour;\n+            }\n+        }\n@@ -341,1 +368,6 @@\n-    public static class CompilationPolicy {\n+    public static enum CompilationPolicy {\n+        COMP_NONE(7 \/*warmup*\/, PAT_COMP_NONE, PAT_COMP_NONE \/*Cont. pattern*\/),\n+        COMP_WINDOW_LENGTH_1(7 \/*warmup*\/, 1 \/* length comp. window *\/),\n+        COMP_WINDOW_LENGTH_2(7 \/*warmup*\/, 2 \/* length comp. window *\/),\n+        COMP_WINDOW_LENGTH_3(7 \/*warmup*\/, 3 \/* length comp. window *\/),\n+        COMP_ALL(7 \/*warmup*\/, PAT_COMP_ALL, PAT_CONT_METHS \/*Cont. pattern*\/);\n@@ -356,1 +388,1 @@\n-        public CompilationPolicy(int warmupIterations, Pattern methodPattern,\n+        CompilationPolicy(int warmupIterations, Pattern methodPattern,\n@@ -362,1 +394,1 @@\n-        public CompilationPolicy(int warmupIterations, int windowLength,\n+        CompilationPolicy(int warmupIterations, int windowLength,\n@@ -368,1 +400,1 @@\n-        public CompilationPolicy(int warmupIterations, int windowLength,\n+        CompilationPolicy(int warmupIterations, int windowLength,\n@@ -379,2 +411,2 @@\n-        public CompilationPolicy(int warmupIterations, int windowLength) {\n-            this(warmupIterations, windowLength, COMP_ALL, CONT_METHS);\n+        CompilationPolicy(int warmupIterations, int windowLength) {\n+            this(warmupIterations, windowLength, PAT_COMP_ALL, PAT_CONT_METHS);\n@@ -521,1 +553,1 @@\n-            if (p != COMP_NONE) {\n+            if (p != PAT_COMP_NONE) {\n@@ -525,1 +557,1 @@\n-                    if (p == COMP_ALL || p.matcher(meth.getName()).matches()) {\n+                    if (p == PAT_COMP_ALL || p.matcher(meth.getName()).matches()) {\n@@ -534,1 +566,1 @@\n-            if (compPolicy.contMethPattern != COMP_NONE) {\n+            if (compPolicy.contMethPattern != PAT_COMP_NONE) {\n@@ -587,1 +619,1 @@\n-                if (triggerGCAfterYield) WB.youngGC();\n+                if (gcBehaviour == GCBehaviour.GC_AFTER_YIELD) WB.youngGC();\n@@ -628,0 +660,3 @@\n+                if (deoptBehaviour == DeoptBehaviour.DEOPT_AFTER_YIELD) {\n+                    WB.deoptimizeFrames(false \/* makeNotEntrant *\/);\n+                }\n@@ -642,0 +677,3 @@\n+            if (deoptBehaviour == DeoptBehaviour.DEOPT_AFTER_YIELD) {\n+                WB.deoptimizeFrames(false \/* makeNotEntrant *\/);\n+            }\n@@ -649,0 +687,3 @@\n+            if (deoptBehaviour == DeoptBehaviour.DEOPT_AFTER_YIELD) {\n+                WB.deoptimizeFrames(false \/* makeNotEntrant *\/);\n+            }\n@@ -664,0 +705,3 @@\n+            if (deoptBehaviour == DeoptBehaviour.DEOPT_AFTER_YIELD) {\n+                WB.deoptimizeFrames(false \/* makeNotEntrant *\/);\n+            }\n@@ -669,0 +713,3 @@\n+            if (deoptBehaviour == DeoptBehaviour.DEOPT_AFTER_YIELD) {\n+                WB.deoptimizeFrames(false \/* makeNotEntrant *\/);\n+            }\n@@ -738,0 +785,3 @@\n+            if (deoptBehaviour == DeoptBehaviour.DEOPT_AFTER_YIELD) {\n+                WB.deoptimizeFrames(false \/* makeNotEntrant *\/);\n+            }\n@@ -815,0 +865,3 @@\n+                if (deoptBehaviour == DeoptBehaviour.DEOPT_AFTER_YIELD) {\n+                    WB.deoptimizeFrames(false \/* makeNotEntrant *\/);\n+                }\n@@ -883,0 +936,3 @@\n+                if (deoptBehaviour == DeoptBehaviour.DEOPT_AFTER_YIELD) {\n+                    WB.deoptimizeFrames(false \/* makeNotEntrant *\/);\n+                }\n@@ -913,0 +969,3 @@\n+            if (deoptBehaviour == DeoptBehaviour.DEOPT_AFTER_YIELD) {\n+                WB.deoptimizeFrames(false \/* makeNotEntrant *\/);\n+            }\n@@ -927,0 +986,3 @@\n+            if (deoptBehaviour == DeoptBehaviour.DEOPT_AFTER_YIELD) {\n+                WB.deoptimizeFrames(false \/* makeNotEntrant *\/);\n+            }\n@@ -953,0 +1015,3 @@\n+            if (deoptBehaviour == DeoptBehaviour.DEOPT_AFTER_YIELD) {\n+                WB.deoptimizeFrames(false \/* makeNotEntrant *\/);\n+            }\n@@ -968,0 +1033,3 @@\n+            if (deoptBehaviour == DeoptBehaviour.DEOPT_AFTER_YIELD) {\n+                WB.deoptimizeFrames(false \/* makeNotEntrant *\/);\n+            }\n@@ -983,0 +1051,3 @@\n+            if (deoptBehaviour == DeoptBehaviour.DEOPT_AFTER_YIELD) {\n+                WB.deoptimizeFrames(false \/* makeNotEntrant *\/);\n+            }\n@@ -1007,0 +1078,3 @@\n+           if (deoptBehaviour == DeoptBehaviour.DEOPT_AFTER_YIELD) {\n+               WB.deoptimizeFrames(false \/* makeNotEntrant *\/);\n+           }\n@@ -1015,0 +1089,3 @@\n+           if (deoptBehaviour == DeoptBehaviour.DEOPT_AFTER_YIELD) {\n+               WB.deoptimizeFrames(false \/* makeNotEntrant *\/);\n+           }\n@@ -1023,0 +1100,3 @@\n+           if (deoptBehaviour == DeoptBehaviour.DEOPT_AFTER_YIELD) {\n+               WB.deoptimizeFrames(false \/* makeNotEntrant *\/);\n+           }\n@@ -1031,0 +1111,3 @@\n+           if (deoptBehaviour == DeoptBehaviour.DEOPT_AFTER_YIELD) {\n+               WB.deoptimizeFrames(false \/* makeNotEntrant *\/);\n+           }\n@@ -1039,0 +1122,3 @@\n+           if (deoptBehaviour == DeoptBehaviour.DEOPT_AFTER_YIELD) {\n+               WB.deoptimizeFrames(false \/* makeNotEntrant *\/);\n+           }\n@@ -1047,0 +1133,3 @@\n+           if (deoptBehaviour == DeoptBehaviour.DEOPT_AFTER_YIELD) {\n+               WB.deoptimizeFrames(false \/* makeNotEntrant *\/);\n+           }\n@@ -1057,0 +1146,3 @@\n+            if (deoptBehaviour == DeoptBehaviour.DEOPT_AFTER_YIELD) {\n+                WB.deoptimizeFrames(false \/* makeNotEntrant *\/);\n+            }\n@@ -1068,0 +1160,3 @@\n+            if (deoptBehaviour == DeoptBehaviour.DEOPT_AFTER_YIELD) {\n+                WB.deoptimizeFrames(false \/* makeNotEntrant *\/);\n+            }\n@@ -1077,0 +1172,3 @@\n+            if (deoptBehaviour == DeoptBehaviour.DEOPT_AFTER_YIELD) {\n+                WB.deoptimizeFrames(false \/* makeNotEntrant *\/);\n+            }\n@@ -1083,1 +1181,6 @@\n-           log_dontjit(\"Yield #\" + yieldCount); Continuation.yield(THE_SCOPE); log_dontjit(\"\/Yield #\" + yieldCount++);\n+           log_dontjit(\"Yield #\" + yieldCount);\n+           Continuation.yield(THE_SCOPE);\n+           if (deoptBehaviour == DeoptBehaviour.DEOPT_AFTER_YIELD) {\n+               WB.deoptimizeFrames(false \/* makeNotEntrant *\/);\n+           }\n+           log_dontjit(\"\/Yield #\" + yieldCount++);\n@@ -1092,0 +1195,3 @@\n+           if (deoptBehaviour == DeoptBehaviour.DEOPT_AFTER_YIELD) {\n+               WB.deoptimizeFrames(false \/* makeNotEntrant *\/);\n+           }\n@@ -1101,0 +1207,3 @@\n+           if (deoptBehaviour == DeoptBehaviour.DEOPT_AFTER_YIELD) {\n+               WB.deoptimizeFrames(false \/* makeNotEntrant *\/);\n+           }\n@@ -1111,0 +1220,3 @@\n+           if (deoptBehaviour == DeoptBehaviour.DEOPT_AFTER_YIELD) {\n+               WB.deoptimizeFrames(false \/* makeNotEntrant *\/);\n+           }\n@@ -1121,0 +1233,3 @@\n+           if (deoptBehaviour == DeoptBehaviour.DEOPT_AFTER_YIELD) {\n+               WB.deoptimizeFrames(false \/* makeNotEntrant *\/);\n+           }\n@@ -1131,0 +1246,3 @@\n+           if (deoptBehaviour == DeoptBehaviour.DEOPT_AFTER_YIELD) {\n+               WB.deoptimizeFrames(false \/* makeNotEntrant *\/);\n+           }\n@@ -1141,0 +1259,3 @@\n+            if (deoptBehaviour == DeoptBehaviour.DEOPT_AFTER_YIELD) {\n+                WB.deoptimizeFrames(false \/* makeNotEntrant *\/);\n+            }\n","filename":"test\/jdk\/jdk\/internal\/vm\/Continuation\/BasicExt.java","additions":174,"deletions":53,"binary":false,"changes":227,"status":"modified"}]}