{"files":[{"patch":"@@ -325,0 +325,14 @@\n+Node* ConvI2LNode::Identity(PhaseGVN* phase) {\n+  \/\/ If type is in \"int\" sub-range, we can\n+  \/\/ convert I2L(L2I(x)) => x\n+  \/\/ since the conversions have no effect.\n+  if (in(1)->Opcode() == Op_ConvL2I) {\n+    Node* x = in(1)->in(1);\n+    const TypeLong* t = phase->type(x)->is_long();\n+    if (t != nullptr && t->_lo >= min_jint && t->_hi <= max_jint) {\n+      return x;\n+    }\n+  }\n+  return this;\n+}\n+\n","filename":"src\/hotspot\/share\/opto\/convertnode.cpp","additions":14,"deletions":0,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -193,0 +193,1 @@\n+  virtual Node* Identity(PhaseGVN* phase);\n","filename":"src\/hotspot\/share\/opto\/convertnode.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}