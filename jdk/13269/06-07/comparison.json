{"files":[{"patch":"@@ -1261,21 +1261,0 @@\n-const Type* MaxLNode::add_ring(const Type* t0, const Type* t1) const {\n-  const TypeLong* r0 = t0->is_long();\n-  const TypeLong* r1 = t1->is_long();\n-\n-  return TypeLong::make(MAX2(r0->_lo, r1->_lo), MAX2(r0->_hi, r1->_hi), MAX2(r0->_widen, r1->_widen));\n-}\n-\n-Node* MaxLNode::Identity(PhaseGVN* phase) {\n-  const TypeLong* t1 = phase->type(in(1))->is_long();\n-  const TypeLong* t2 = phase->type(in(2))->is_long();\n-\n-  \/\/ Can we determine maximum statically?\n-  if (t1->_lo >= t2->_hi) {\n-    return in(1);\n-  } else if (t2->_lo >= t1->_hi) {\n-    return in(2);\n-  }\n-\n-  return MaxNode::Identity(phase);\n-}\n-\n@@ -1308,0 +1287,2 @@\n+\/\/ Note: we assume that SubL was already replaced by an AddL, and that the stride\n+\/\/ has its sign flipped: SubL(limit, stride) -> AddL(limit, -stride).\n@@ -1348,0 +1329,21 @@\n+const Type* MaxLNode::add_ring(const Type* t0, const Type* t1) const {\n+  const TypeLong* r0 = t0->is_long();\n+  const TypeLong* r1 = t1->is_long();\n+\n+  return TypeLong::make(MAX2(r0->_lo, r1->_lo), MAX2(r0->_hi, r1->_hi), MAX2(r0->_widen, r1->_widen));\n+}\n+\n+Node* MaxLNode::Identity(PhaseGVN* phase) {\n+  const TypeLong* t1 = phase->type(in(1))->is_long();\n+  const TypeLong* t2 = phase->type(in(2))->is_long();\n+\n+  \/\/ Can we determine maximum statically?\n+  if (t1->_lo >= t2->_hi) {\n+    return in(1);\n+  } else if (t2->_lo >= t1->_hi) {\n+    return in(2);\n+  }\n+\n+  return MaxNode::Identity(phase);\n+}\n+\n","filename":"src\/hotspot\/share\/opto\/addnode.cpp","additions":23,"deletions":21,"binary":false,"changes":44,"status":"modified"}]}