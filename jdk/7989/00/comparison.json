{"files":[{"patch":"@@ -745,1 +745,1 @@\n-\t\n+\n@@ -762,3 +762,0 @@\n-java\/time\/test\/java\/time\/TestZoneOffset.java                    8283716 generic-all\n-\n-\n","filename":"test\/jdk\/ProblemList.txt","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -69,0 +69,1 @@\n+import java.util.Set;\n@@ -86,0 +87,4 @@\n+        assertImmutable(cls, Set.of());\n+    }\n+\n+    protected static void assertImmutable(Class<?> cls, Set<String> ignoreFields) {\n@@ -90,1 +95,1 @@\n-            if (field.getName().contains(\"$\") == false) {\n+            if (!field.getName().contains(\"$\") && !ignoreFields.contains(field.getName())) {\n","filename":"test\/jdk\/java\/time\/test\/java\/time\/AbstractTest.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -64,0 +64,1 @@\n+import java.util.Set;\n@@ -76,1 +77,1 @@\n-        assertImmutable(ZoneOffset.class);\n+        assertImmutable(ZoneOffset.class, \/* ignore field *\/ Set.of(\"rules\"));\n","filename":"test\/jdk\/java\/time\/test\/java\/time\/TestZoneOffset.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"}]}