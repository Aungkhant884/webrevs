{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -145,5 +145,1 @@\n-  \/\/ If \"has_max_index\" is true, \"assumes \"max_index\" is the last valid one\n-  \/\/ in the array.\n-  inline HeapWord* block_at_or_preceding(const void* addr,\n-                                         bool has_max_index,\n-                                         size_t max_index) const;\n+  inline HeapWord* block_at_or_preceding(const void* addr) const;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1BlockOffsetTable.hpp","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-    HeapWord* q = block_at_or_preceding(addr, true, _next_offset_index-1);\n+    HeapWord* q = block_at_or_preceding(addr);\n@@ -45,1 +45,1 @@\n-    HeapWord* q = block_at_or_preceding(addr, true, _next_offset_index-1);\n+    HeapWord* q = block_at_or_preceding(addr);\n@@ -113,3 +113,1 @@\n-inline HeapWord* G1BlockOffsetTablePart::block_at_or_preceding(const void* addr,\n-                                                               bool has_max_index,\n-                                                               size_t max_index) const {\n+inline HeapWord* G1BlockOffsetTablePart::block_at_or_preceding(const void* addr) const {\n@@ -121,4 +119,3 @@\n-  \/\/ \"addr\" is past the end, start at the last known one and go forward.\n-  if (has_max_index) {\n-    index = MIN2(index, max_index);\n-  }\n+  \/\/ \"addr\" is past the end, start at the last valid index.\n+  index = MIN2(index, _next_offset_index - 1);\n+\n","filename":"src\/hotspot\/share\/gc\/g1\/g1BlockOffsetTable.inline.hpp","additions":7,"deletions":10,"binary":false,"changes":17,"status":"modified"}]}