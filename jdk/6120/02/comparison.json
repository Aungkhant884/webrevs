{"files":[{"patch":"@@ -231,2 +231,2 @@\n-    \/\/ Change to transition state and ensure it is seen by the VM thread.\n-    _thread->set_thread_state_fence(_thread_blocked_trans);\n+    \/\/ Change back to _thread_in_vm and ensure it is seen by the VM thread.\n+    _thread->set_thread_state_fence(_thread_in_vm);\n@@ -238,2 +238,0 @@\n-\n-    _thread->set_thread_state(_thread_in_vm);\n","filename":"src\/hotspot\/share\/runtime\/interfaceSupport.inline.hpp","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -709,1 +709,0 @@\n-  assert(is_a_block_safe_state(state), \"Illegal threadstate encountered: %d\", state);\n","filename":"src\/hotspot\/share\/runtime\/safepoint.cpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -131,8 +131,1 @@\n-    switch(state) {\n-      case _thread_in_vm:\n-      case _thread_in_Java:        \/\/ From compiled code\n-      case _thread_blocked_trans:\n-        return true;\n-      default:\n-        return false;\n-    }\n+    return state == _thread_in_vm || state == _thread_in_Java;\n","filename":"src\/hotspot\/share\/runtime\/safepoint.hpp","additions":1,"deletions":8,"binary":false,"changes":9,"status":"modified"}]}