{"files":[{"patch":"@@ -203,1 +203,4 @@\n-  size_t min_size           = os::vm_page_size();\n+  const size_t ps           = page_size(false, 8);\n+  size_t min_size           = MAX3(os::vm_page_size(),\n+                                   os::vm_allocation_granularity(),\n+                                   ps);\n@@ -237,0 +240,3 @@\n+      \/\/ Ensure at least min_size is available for profiled and non-profiled\n+      \/\/ methods\n+      non_nmethod_size = MIN2(non_nmethod_size, cache_size - 2 * min_size);\n@@ -313,1 +319,0 @@\n-  const size_t ps = page_size(false, 8);\n","filename":"src\/hotspot\/share\/code\/codeCache.cpp","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -0,0 +1,62 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test\n+ * @bug 8318817\n+ * @requires vm.debug\n+ * @summary Test flag with large values\n+ *\n+ * @run main\/othervm -XX:NMethodSizeLimit=351658240\n+ *                   compiler.arguments.TestC1Globals\n+ *\n+ * @run main\/othervm -XX:NMethodSizeLimit=224001703\n+ *                   compiler.arguments.TestC1Globals\n+ *\/\n+\n+\/**\n+ * @test\n+ * @bug 8318817\n+ * @requires vm.debug\n+ * @requires os.family == \"linux\"\n+ * @summary Test flag with large values combined with transparent huge pages on\n+ *          Linux.\n+ *\n+ * @run main\/othervm -XX:NMethodSizeLimit=351658240\n+ *                   -XX:+UseTransparentHugePages\n+ *                   compiler.arguments.TestC1Globals\n+ *\n+ * @run main\/othervm -XX:NMethodSizeLimit=224001703\n+ *                   -XX:+UseTransparentHugePages\n+ *                   compiler.arguments.TestC1Globals\n+ *\n+ *\/\n+\n+package compiler.arguments;\n+\n+public class TestC1Globals {\n+\n+    public static void main(String args[]) {\n+        System.out.println(\"Passed\");\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/arguments\/TestC1Globals.java","additions":62,"deletions":0,"binary":false,"changes":62,"status":"added"}]}