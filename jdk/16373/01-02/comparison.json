{"files":[{"patch":"@@ -204,4 +204,3 @@\n-  size_t min_size           = MAX3(os::vm_page_size(),\n-                                   os::vm_allocation_granularity(),\n-                                   ps);\n-  size_t cache_size         = ReservedCodeCacheSize;\n+  const size_t min_size     = MAX2(os::vm_allocation_granularity(), ps);\n+  assert(os::vm_page_size() >= min_size, \"page size smaller than min_size\");\n+  const size_t cache_size   = ReservedCodeCacheSize;\n@@ -331,1 +330,1 @@\n-  const size_t alignment = MAX2(ps, os::vm_allocation_granularity());\n+  const size_t alignment = min_size;\n","filename":"src\/hotspot\/share\/code\/codeCache.cpp","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n- * @summary Test flag with large values\n+ * @summary Test flag with large value\n@@ -32,0 +32,7 @@\n+ *\/\n+\n+\/**\n+ * @test\n+ * @bug 8318817\n+ * @requires vm.debug\n+ * @summary Test flag with large value\n@@ -42,1 +49,1 @@\n- * @summary Test flag with large values combined with transparent huge pages on\n+ * @summary Test flag with large value combined with transparent huge pages on\n@@ -49,0 +56,10 @@\n+ *\/\n+\n+\/**\n+ * @test\n+ * @bug 8318817\n+ * @requires vm.debug\n+ * @requires os.family == \"linux\"\n+ * @summary Test flag with large value combined with transparent huge pages on\n+ *          Linux.\n+ *\n","filename":"test\/hotspot\/jtreg\/compiler\/arguments\/TestC1Globals.java","additions":19,"deletions":2,"binary":false,"changes":21,"status":"modified"}]}