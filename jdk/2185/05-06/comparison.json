{"files":[{"patch":"@@ -182,22 +182,0 @@\n-class ShenandoahInitMarkRootsTask : public AbstractGangTask {\n-private:\n-  ShenandoahRootScanner              _root_scanner;\n-  ShenandoahObjToScanQueueSet* const _task_queues;\n-public:\n-  ShenandoahInitMarkRootsTask(uint n_workers, ShenandoahObjToScanQueueSet* task_queues) :\n-    AbstractGangTask(\"Shenandoah Init Mark Roots\"),\n-    _root_scanner(n_workers, ShenandoahPhaseTimings::scan_roots),\n-    _task_queues(task_queues) {\n-    assert(ShenandoahSafepoint::is_at_shenandoah_safepoint(), \"Must be at a safepoint\");\n-  }\n-\n-  void work(uint worker_id) {\n-    ShenandoahParallelWorkerSession worker_session(worker_id);\n-    assert(_task_queues->get_reserved() > worker_id, \"Queue has not been reserved for worker id: %d\", worker_id);\n-\n-    ShenandoahObjToScanQueue* q = _task_queues->queue(worker_id);\n-    ShenandoahInitMarkRootsClosure mark_cl(q);\n-    _root_scanner.roots_do(worker_id, &mark_cl);\n-  }\n-};\n-\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentMark.cpp","additions":0,"deletions":22,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -100,1 +100,0 @@\n-    case scan_roots:\n@@ -129,1 +128,0 @@\n-    case scan_roots:\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahPhaseTimings.cpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -56,2 +56,0 @@\n-  f(scan_roots,                                     \"  Scan Roots\")                    \\\n-  SHENANDOAH_PAR_PHASE_DO(scan_,                    \"    S: \", f)                      \\\n@@ -59,1 +57,1 @@\n-  f(conc_mark_roots,                                \"Concurrent Mark Roots \")          \\\n+  f(conc_mark_roots,                                \"  Roots \")                        \\\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahPhaseTimings.hpp","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"}]}