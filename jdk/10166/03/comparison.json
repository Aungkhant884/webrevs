{"files":[{"patch":"@@ -189,1 +189,2 @@\n-        jdk.jlink;\n+        jdk.jlink,\n+        jdk.jshell;\n","filename":"src\/java.base\/share\/classes\/module-info.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -27,0 +27,1 @@\n+import java.lang.reflect.Field;\n@@ -30,0 +31,7 @@\n+import java.util.stream.Stream;\n+import jdk.internal.org.objectweb.asm.ClassReader;\n+import jdk.internal.org.objectweb.asm.ClassVisitor;\n+import jdk.internal.org.objectweb.asm.ClassWriter;\n+import jdk.internal.org.objectweb.asm.Label;\n+import jdk.internal.org.objectweb.asm.MethodVisitor;\n+import jdk.internal.org.objectweb.asm.Opcodes;\n@@ -43,0 +51,1 @@\n+    private Field allStop = null;\n@@ -60,0 +69,47 @@\n+    @Override\n+    public void load(ClassBytecodes[] cbcs)\n+            throws ClassInstallException, NotImplementedException, EngineTerminationException {\n+        super.load(Stream.of(cbcs)\n+                .map(cbc -> new ClassBytecodes(cbc.name(), instrument(cbc.bytecodes())))\n+                .toArray(ClassBytecodes[]::new));\n+    }\n+\n+    private static byte[] instrument(byte[] classFile) {\n+        var reader  = new ClassReader(classFile);\n+        var writer = new ClassWriter(reader, 0);\n+        reader.accept(new ClassVisitor(Opcodes.ASM9, writer) {\n+            @Override\n+            public MethodVisitor visitMethod(int access, String name, String descriptor, String signature, String[] exceptions) {\n+                return new MethodVisitor(Opcodes.ASM9, super.visitMethod(access, name, descriptor, signature, exceptions)) {\n+                    @Override\n+                    public void visitJumpInsn(int opcode, Label label) {\n+                        visitMethodInsn(Opcodes.INVOKESTATIC, \"REPL\/$Cancel$\", \"stopCheck\", \"()V\", false);\n+                        super.visitJumpInsn(opcode, label);\n+                    }\n+                };\n+            }\n+        }, 0);\n+        return writer.toByteArray();\n+    }\n+\n+    private static ClassBytecodes genCancelClass() {\n+        var cancelWriter = new ClassWriter(ClassWriter.COMPUTE_FRAMES | ClassWriter.COMPUTE_MAXS);\n+        cancelWriter.visit(Opcodes.V19, Opcodes.ACC_PUBLIC, \"REPL\/$Cancel$\", null, \"java\/lang\/Object\", null);\n+        cancelWriter.visitField(Opcodes.ACC_PUBLIC | Opcodes.ACC_STATIC | Opcodes.ACC_VOLATILE, \"allStop\", \"Z\", null, null);\n+        var checkVisitor = cancelWriter.visitMethod(Opcodes.ACC_PUBLIC | Opcodes.ACC_STATIC, \"stopCheck\", \"()V\", null, null);\n+            checkVisitor.visitCode();\n+            checkVisitor.visitFieldInsn(Opcodes.GETSTATIC, \"REPL\/$Cancel$\", \"allStop\", \"Z\");\n+            var skip = new Label();\n+            checkVisitor.visitJumpInsn(Opcodes.IFEQ, skip);\n+            checkVisitor.visitTypeInsn(Opcodes.NEW, \"java\/lang\/ThreadDeath\");\n+            checkVisitor.visitInsn(Opcodes.DUP);\n+            checkVisitor.visitMethodInsn(Opcodes.INVOKESPECIAL, \"java\/lang\/ThreadDeath\", \"<init>\", \"()V\", false);\n+            checkVisitor.visitInsn(Opcodes.ATHROW);\n+            checkVisitor.visitLabel(skip);\n+            checkVisitor.visitInsn(Opcodes.RETURN);\n+            checkVisitor.visitMaxs(0, 0);\n+            checkVisitor.visitEnd();\n+        cancelWriter.visitEnd();\n+        return new ClassBytecodes(\"REPL.$Cancel$\", cancelWriter.toByteArray());\n+    }\n+\n@@ -62,0 +118,6 @@\n+        if (allStop == null) {\n+            super.load(new ClassBytecodes[]{ genCancelClass() });\n+            allStop = findClass(\"REPL.$Cancel$\").getDeclaredField(\"allStop\");\n+        }\n+        allStop.set(null, false);\n+\n@@ -127,1 +189,0 @@\n-    @SuppressWarnings({\"deprecation\", \"removal\"})\n@@ -136,1 +197,5 @@\n-\n+            try {\n+                allStop.set(null, true);\n+            } catch (IllegalArgumentException | IllegalAccessException ex) {\n+                throw new InternalException(\"Exception on local stop: \" + ex);\n+            }\n@@ -145,1 +210,1 @@\n-                threads[i].stop();\n+                threads[i].interrupt();\n","filename":"src\/jdk.jshell\/share\/classes\/jdk\/jshell\/execution\/LocalExecutionControl.java","additions":68,"deletions":3,"binary":false,"changes":71,"status":"modified"}]}