{"files":[{"patch":"@@ -27,0 +27,1 @@\n+import java.lang.reflect.Field;\n@@ -50,0 +51,1 @@\n+    private Field allStop = null;\n@@ -77,1 +79,1 @@\n-        var writer = new ClassWriter(reader, ClassWriter.COMPUTE_FRAMES);\n+        var writer = new ClassWriter(reader, 0);\n@@ -84,8 +86,1 @@\n-                        visitMethodInsn(Opcodes.INVOKESTATIC, \"java\/lang\/Thread\", \"interrupted\", \"()Z\", false);\n-                        var skip = new Label();\n-                        super.visitJumpInsn(Opcodes.IFEQ, skip);\n-                        visitTypeInsn(Opcodes.NEW, \"java\/lang\/ThreadDeath\");\n-                        visitInsn(Opcodes.DUP);\n-                        visitMethodInsn(Opcodes.INVOKESPECIAL, \"java\/lang\/ThreadDeath\", \"<init>\", \"()V\", false);\n-                        visitInsn(Opcodes.ATHROW);\n-                        visitLabel(skip);\n+                        visitMethodInsn(Opcodes.INVOKESTATIC, \"REPL\/$Cancel$\", \"stopCheck\", \"()V\", false);\n@@ -100,0 +95,21 @@\n+    private static ClassBytecodes genCancelClass() {\n+        var cancelWriter = new ClassWriter(ClassWriter.COMPUTE_FRAMES|ClassWriter.COMPUTE_MAXS);\n+        cancelWriter.visit(Opcodes.V19, Opcodes.ACC_PUBLIC, \"REPL\/$Cancel$\", null, \"java\/lang\/Object\", null);\n+        cancelWriter.visitField(Opcodes.ACC_PUBLIC|Opcodes.ACC_STATIC|Opcodes.ACC_VOLATILE, \"allStop\", \"Z\", null, null);\n+        var checkVisitor = cancelWriter.visitMethod(Opcodes.ACC_PUBLIC|Opcodes.ACC_STATIC, \"stopCheck\", \"()V\", null, null);\n+            checkVisitor.visitCode();\n+            checkVisitor.visitFieldInsn(Opcodes.GETSTATIC, \"REPL\/$Cancel$\", \"allStop\", \"Z\");\n+            var skip = new Label();\n+            checkVisitor.visitJumpInsn(Opcodes.IFEQ, skip);\n+            checkVisitor.visitTypeInsn(Opcodes.NEW, \"java\/lang\/ThreadDeath\");\n+            checkVisitor.visitInsn(Opcodes.DUP);\n+            checkVisitor.visitMethodInsn(Opcodes.INVOKESPECIAL, \"java\/lang\/ThreadDeath\", \"<init>\", \"()V\", false);\n+            checkVisitor.visitInsn(Opcodes.ATHROW);\n+            checkVisitor.visitLabel(skip);\n+            checkVisitor.visitInsn(Opcodes.RETURN);\n+            checkVisitor.visitMaxs(0, 0);\n+            checkVisitor.visitEnd();\n+        cancelWriter.visitEnd();\n+        return new ClassBytecodes(\"REPL.$Cancel$\", cancelWriter.toByteArray());\n+    }\n+\n@@ -102,0 +118,6 @@\n+        if (allStop == null) {\n+            super.load(new ClassBytecodes[]{genCancelClass()});\n+            allStop = findClass(\"REPL.$Cancel$\").getDeclaredField(\"allStop\");\n+        }\n+        allStop.set(null, false);\n+\n@@ -175,1 +197,5 @@\n-\n+            try {\n+                allStop.set(null, true);\n+            } catch (IllegalArgumentException| IllegalAccessException ex) {\n+                throw new InternalException(ex.getMessage());\n+            }\n","filename":"src\/jdk.jshell\/share\/classes\/jdk\/jshell\/execution\/LocalExecutionControl.java","additions":36,"deletions":10,"binary":false,"changes":46,"status":"modified"}]}