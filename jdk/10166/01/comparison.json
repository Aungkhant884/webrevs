{"files":[{"patch":"@@ -189,1 +189,2 @@\n-        jdk.jlink;\n+        jdk.jlink,\n+        jdk.jshell;\n","filename":"src\/java.base\/share\/classes\/module-info.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -30,0 +30,7 @@\n+import java.util.stream.Stream;\n+import jdk.internal.org.objectweb.asm.ClassReader;\n+import jdk.internal.org.objectweb.asm.ClassVisitor;\n+import jdk.internal.org.objectweb.asm.ClassWriter;\n+import jdk.internal.org.objectweb.asm.Label;\n+import jdk.internal.org.objectweb.asm.MethodVisitor;\n+import jdk.internal.org.objectweb.asm.Opcodes;\n@@ -60,0 +67,33 @@\n+    @Override\n+    public void load(ClassBytecodes[] cbcs)\n+            throws ClassInstallException, NotImplementedException, EngineTerminationException {\n+        super.load(Stream.of(cbcs)\n+                .map(cbc -> new ClassBytecodes(cbc.name(), instrument(cbc.bytecodes())))\n+                .toArray(ClassBytecodes[]::new));\n+    }\n+\n+    private static byte[] instrument(byte[] classFile) {\n+        var reader  = new ClassReader(classFile);\n+        var writer = new ClassWriter(reader, ClassWriter.COMPUTE_FRAMES);\n+        reader.accept(new ClassVisitor(Opcodes.ASM9, writer) {\n+            @Override\n+            public MethodVisitor visitMethod(int access, String name, String descriptor, String signature, String[] exceptions) {\n+                return new MethodVisitor(Opcodes.ASM9, super.visitMethod(access, name, descriptor, signature, exceptions)) {\n+                    @Override\n+                    public void visitJumpInsn(int opcode, Label label) {\n+                        visitMethodInsn(Opcodes.INVOKESTATIC, \"java\/lang\/Thread\", \"interrupted\", \"()Z\", false);\n+                        var skip = new Label();\n+                        super.visitJumpInsn(Opcodes.IFEQ, skip);\n+                        visitTypeInsn(Opcodes.NEW, \"java\/lang\/ThreadDeath\");\n+                        visitInsn(Opcodes.DUP);\n+                        visitMethodInsn(Opcodes.INVOKESPECIAL, \"java\/lang\/ThreadDeath\", \"<init>\", \"()V\", false);\n+                        visitInsn(Opcodes.ATHROW);\n+                        visitLabel(skip);\n+                        super.visitJumpInsn(opcode, label);\n+                    }\n+                };\n+            }\n+        }, 0);\n+        return writer.toByteArray();\n+    }\n+\n@@ -127,1 +167,0 @@\n-    @SuppressWarnings({\"deprecation\", \"removal\"})\n@@ -145,1 +184,1 @@\n-                threads[i].stop();\n+                threads[i].interrupt();\n","filename":"src\/jdk.jshell\/share\/classes\/jdk\/jshell\/execution\/LocalExecutionControl.java","additions":41,"deletions":2,"binary":false,"changes":43,"status":"modified"}]}