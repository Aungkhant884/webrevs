[{"commit":{"message":"Whitespace fixes"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/gc\/shenandoah\/shenandoahBarrierSetAssembler_aarch64.cpp"}],"sha":"03633594cbdc40bca690eefece77ad39834189d1"},{"commit":{"message":"Remaining aarch64 changes"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/gc\/shenandoah\/shenandoahBarrierSetAssembler_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/gc\/shenandoah\/shenandoahBarrierSetAssembler_x86.cpp"}],"sha":"eef816c895529adb099a675279697ecdbaa00558"},{"commit":{"message":"Don't call compressed-oops LRB on IN_NATIVE from C1"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/gc\/shenandoah\/shenandoahBarrierSetAssembler_x86.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/c1\/shenandoahBarrierSetC1.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/c1\/shenandoahBarrierSetC1.hpp"}],"sha":"51811e31c9ad41d27aed3cbb70f19c3c9b247e9d"},{"commit":{"message":"Avoid null-check and skip cset-check on non-strong refs in C1 LRB stub"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/gc\/shenandoah\/shenandoahBarrierSetAssembler_x86.cpp"}],"sha":"83c07cb8d1b1bd7322910cef865cef3112bb1e88"},{"commit":{"message":"Call weak-LRB with ON_WEAK_OOP_REF, not ON_UNKNOWN_OOP_REF (cosmetic)"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahRuntime.cpp"}],"sha":"5dfd192f49b620541875b906c2a788d107714e20"},{"commit":{"message":"Call phantom LRB when ON_PHANTOM_OOP_REF is requested in C1 LRB stub"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/gc\/shenandoah\/shenandoahBarrierSetAssembler_x86.cpp"}],"sha":"2934768222d332626ea969dbdf111ae718fb97d0"},{"commit":{"message":"Merge branch 'master' into JDK-8256011"},"files":[],"sha":"3eeee3c38cbfa0e5d993479f3628f1b74cc7a919"},{"commit":{"message":"Move resurrection-barrier from JDK-8256020 into right place after merge"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahBarrierSet.inline.hpp"}],"sha":"492cea4debf4ee1f9efe49fcbe55d4fdddf47519"},{"commit":{"message":"Merge branch 'master' into JDK-8256011"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahBarrierSet.inline.hpp"}],"sha":"245d601127863de943968f906585b6a0105e58ef"},{"commit":{"message":"Fix\/invert condition in CmpP optimization"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/c2\/shenandoahBarrierSetC2.cpp"}],"sha":"c0ee9346f2ac89f26d458661c7d7eead39700a70"},{"commit":{"message":"Fix after merge"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/c2\/shenandoahSupport.cpp"}],"sha":"7628e3a9ecfed9636cbf5c2e14f01be67112bec9"},{"commit":{"message":"Merge branch 'master' into JDK-8256011"},"files":[],"sha":"0087aa60ddc51340730db7058bf3cce4ac6023e7"},{"commit":{"message":"Merge branch 'master' into JDK-8256011"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/c2\/shenandoahSupport.cpp"}],"sha":"59a073300c904532e66576940461fd73193a465f"},{"commit":{"message":"Don't make phantom-access narrow (mistake when doing 32bit parts"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/gc\/shenandoah\/shenandoahBarrierSetAssembler_x86.cpp"}],"sha":"92a92fcd26470935da7015fe4f96035ae2b93a19"},{"commit":{"message":"Remove superfluous LP64 in aarch64 part"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/gc\/shenandoah\/shenandoahBarrierSetAssembler_aarch64.cpp"}],"sha":"37c977868e2f568a82023e25c93c6f8dee5db14b"},{"commit":{"message":"Fixes\/missing parts for x86_64"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/gc\/shenandoah\/shenandoahBarrierSetAssembler_x86.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/c2\/shenandoahSupport.cpp"}],"sha":"7f3f14bf849730c3ea1ae46b60bbc5d9586b9d74"},{"commit":{"message":"Aarch64 parts"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/gc\/shenandoah\/c1\/shenandoahBarrierSetC1_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/gc\/shenandoah\/shenandoahBarrierSetAssembler_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/gc\/shenandoah\/shenandoahBarrierSetAssembler_aarch64.hpp"}],"sha":"d361e60be2cb96a3f10d0c3658a10a4663e46685"},{"commit":{"message":"Whitespace changes"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/gc\/shenandoah\/shenandoahBarrierSetAssembler_x86.cpp"}],"sha":"ac2674f5108b4e7d49754874c8a71d2a1277350a"},{"commit":{"message":"Mask decorators in hash\/cmp, not in ctor"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/c2\/shenandoahSupport.cpp"}],"sha":"c0734e6efcfd457d0195495124650a7beadbc9e3"},{"commit":{"message":"Use ShBarrierSet::is_strong_access() in CmpP optimization"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/c2\/shenandoahBarrierSetC2.cpp"}],"sha":"3542ca50d106afef355f84c40f19767672e1f6cb"},{"commit":{"message":"separate code-paths for phantom- and weak-access in runtime-LRB"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahBarrierSet.inline.hpp"}],"sha":"05b2c5c8c2c6e26b01e7dd0c7bcd6b70606dcc38"},{"commit":{"message":"Give different name to different LRB runtime calls"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/c2\/shenandoahSupport.cpp"}],"sha":"81b44749ba034e7c8de20d4ae6d634b811b574bc"},{"commit":{"message":"Ensure correct strength and width of LRB runtime calls"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/gc\/shenandoah\/c1\/shenandoahBarrierSetC1_x86.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/gc\/shenandoah\/shenandoahBarrierSetAssembler_x86.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/gc\/shenandoah\/shenandoahBarrierSetAssembler_x86.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/c1\/shenandoahBarrierSetC1.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/c1\/shenandoahBarrierSetC1.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/c2\/shenandoahBarrierSetC2.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/c2\/shenandoahSupport.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/c2\/shenandoahSupport.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahBarrierSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahBarrierSet.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahBarrierSet.inline.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahRuntime.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahRuntime.hpp"}],"sha":"8d979eea9337bb814d426c8e3ed33f46c7b94f5a"},{"commit":{"message":"Merge branch 'master' into JDK-8256011"},"files":[],"sha":"ab1eda0c8a6a92e8247ae20d8d01d28a2e8aac36"},{"commit":{"message":"Merge branch 'master' into JDK-8256011"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahBarrierSet.inline.hpp"}],"sha":"126f1597f7b6d130158c34c5fcc8f6cd1454950a"},{"commit":{"message":"Simplify condition, don't resurrect finalizably reachable objects even on phantom access"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahBarrierSet.inline.hpp"}],"sha":"189be7824ab235e36731e3be769ea7299f0d1d8d"},{"commit":{"message":"8256011: Shenandoah: Don't resurrect finalizably reachable objects"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahBarrierSet.inline.hpp"}],"sha":"672333cc5421371279ddd60858ab9d68f4acd2b6"}]