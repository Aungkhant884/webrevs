{"files":[{"patch":"@@ -863,1 +863,1 @@\n-    assert(is_phantom, \"only remaining strenght\");\n+    assert(is_phantom, \"only remaining strength\");\n@@ -943,2 +943,1 @@\n-      __ call_VM_leaf(CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier_strong_narrow), c_rarg0,\n-                      c_rarg1);\n+      __ call_VM_leaf(CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier_strong_narrow), c_rarg0, c_rarg1);\n@@ -950,2 +949,1 @@\n-      __ call_VM_leaf(CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier_weak_narrow), c_rarg0,\n-                      c_rarg1);\n+      __ call_VM_leaf(CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier_weak_narrow), c_rarg0, c_rarg1);\n","filename":"src\/hotspot\/cpu\/x86\/gc\/shenandoah\/shenandoahBarrierSetAssembler_x86.cpp","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1063,1 +1063,1 @@\n-    \/\/ If one input is NULL, then step over the barriers normal LRB barriers on the other input\n+    \/\/ If one input is NULL, then step over the strong LRB barriers on the other input\n@@ -1066,1 +1066,1 @@\n-          (((ShenandoahLoadReferenceBarrierNode*)in2)->decorators() & ON_STRONG_OOP_REF) == 0)) {\n+          ShenandoahBarrierSet::is_strong_access(((ShenandoahLoadReferenceBarrierNode*)in2)->decorators()))) {\n@@ -1071,1 +1071,1 @@\n-          (((ShenandoahLoadReferenceBarrierNode*)in1)->decorators() & ON_STRONG_OOP_REF) == 0)) {\n+          ShenandoahBarrierSet::is_strong_access(((ShenandoahLoadReferenceBarrierNode*)in1)->decorators()))) {\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/c2\/shenandoahBarrierSetC2.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -981,0 +981,1 @@\n+      name = \"load_reference_barrier_strong_narrow\";\n@@ -983,0 +984,1 @@\n+      name = \"load_reference_barrier_strong\";\n@@ -984,1 +986,0 @@\n-    name = \"load_reference_barrier_strong\";\n@@ -988,0 +989,1 @@\n+      name = \"load_reference_barrier_weak_narrow\";\n@@ -990,0 +992,1 @@\n+      name = \"load_reference_barrier_weak\";\n@@ -991,1 +994,0 @@\n-    name = \"load_reference_barrier_weak\";\n@@ -2910,1 +2912,1 @@\n-: Node(ctrl, obj), _decorators(decorators & (ON_STRONG_OOP_REF | ON_WEAK_OOP_REF | ON_PHANTOM_OOP_REF | ON_UNKNOWN_OOP_REF | IN_NATIVE)) {\n+: Node(ctrl, obj), _decorators(decorators) {\n@@ -2922,0 +2924,4 @@\n+static DecoratorSet mask_decorators(DecoratorSet decorators) {\n+  return decorators & (ON_STRONG_OOP_REF | ON_WEAK_OOP_REF | ON_PHANTOM_OOP_REF | ON_UNKNOWN_OOP_REF | IN_NATIVE);\n+}\n+\n@@ -2924,1 +2930,1 @@\n-  hash += _decorators;\n+  hash += mask_decorators(_decorators);\n@@ -2930,1 +2936,1 @@\n-         _decorators == ((const ShenandoahLoadReferenceBarrierNode&)n)._decorators;\n+         mask_decorators(_decorators) == mask_decorators(((const ShenandoahLoadReferenceBarrierNode&)n)._decorators);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/c2\/shenandoahSupport.cpp","additions":11,"deletions":5,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -105,2 +105,2 @@\n-  \/\/ Prevent resurrection of unreachable non-strorg references.\n-  if (!HasDecorator<decorators, ON_STRONG_OOP_REF>::value && obj != NULL &&\n+  \/\/ Prevent resurrection of unreachable phantom (i.e. weak-native) references.\n+  if (HasDecorator<decorators, ON_PHANTOM_OOP_REF>::value && obj != NULL &&\n@@ -108,2 +108,1 @@\n-      !(HasDecorator<decorators, ON_PHANTOM_OOP_REF>::value ? _heap->marking_context()->is_marked(obj)\n-                                                            : _heap->marking_context()->is_marked_strong(obj))) {\n+      !_heap->marking_context()->is_marked(obj)) {\n@@ -120,0 +119,8 @@\n+  \/\/ Prevent resurrection of unreachable weak references.\n+  if ((HasDecorator<decorators, ON_WEAK_OOP_REF>::value || HasDecorator<decorators, ON_UNKNOWN_OOP_REF>::value) &&\n+      obj != NULL && _heap->is_concurrent_weak_root_in_progress() &&\n+      !_heap->marking_context()->is_marked_strong(obj)) {\n+    assert(Thread::current()->is_Java_thread(), \"only Java threads get here\");\n+    return NULL;\n+  }\n+\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahBarrierSet.inline.hpp","additions":11,"deletions":4,"binary":false,"changes":15,"status":"modified"}]}