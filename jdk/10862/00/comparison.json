{"files":[{"patch":"@@ -83,0 +83,1 @@\n+    _cost_per_byte_copied_ms_seq(TruncatedSeqLength),\n@@ -86,1 +87,0 @@\n-    _copy_cost_per_byte_ms_seq(TruncatedSeqLength),\n@@ -90,1 +90,0 @@\n-    _cost_per_byte_ms_during_cm_seq(TruncatedSeqLength),\n@@ -110,0 +109,1 @@\n+  _cost_per_byte_copied_ms_seq.set_initial(cost_per_byte_ms_defaults[index]);\n@@ -111,1 +111,0 @@\n-  _copy_cost_per_byte_ms_seq.add(cost_per_byte_ms_defaults[index]);\n@@ -200,6 +199,2 @@\n-void G1Analytics::report_cost_per_byte_ms(double cost_per_byte_ms, bool mark_or_rebuild_in_progress) {\n-  if (mark_or_rebuild_in_progress) {\n-    _cost_per_byte_ms_during_cm_seq.add(cost_per_byte_ms);\n-  } else {\n-    _copy_cost_per_byte_ms_seq.add(cost_per_byte_ms);\n-  }\n+void G1Analytics::report_cost_per_byte_ms(double cost_per_byte_ms, bool for_young_only_phase) {\n+  _cost_per_byte_copied_ms_seq.add(cost_per_byte_ms, for_young_only_phase);\n@@ -260,14 +255,2 @@\n-double G1Analytics::predict_object_copy_time_ms_during_cm(size_t bytes_to_copy) const {\n-  if (!enough_samples_available(&_cost_per_byte_ms_during_cm_seq)) {\n-    return (1.1 * bytes_to_copy) * predict_zero_bounded(&_copy_cost_per_byte_ms_seq);\n-  } else {\n-    return bytes_to_copy * predict_zero_bounded(&_cost_per_byte_ms_during_cm_seq);\n-  }\n-}\n-\n-double G1Analytics::predict_object_copy_time_ms(size_t bytes_to_copy, bool during_concurrent_mark) const {\n-  if (during_concurrent_mark) {\n-    return predict_object_copy_time_ms_during_cm(bytes_to_copy);\n-  } else {\n-    return bytes_to_copy * predict_zero_bounded(&_copy_cost_per_byte_ms_seq);\n-  }\n+double G1Analytics::predict_object_copy_time_ms(size_t bytes_to_copy, bool for_young_only_phase) const {\n+  return bytes_to_copy * predict_zero_bounded(&_cost_per_byte_copied_ms_seq, for_young_only_phase);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Analytics.cpp","additions":6,"deletions":23,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -58,1 +58,0 @@\n-\n@@ -61,0 +60,2 @@\n+  \/\/ The cost to copy a byte in ms.\n+  G1PhaseDependentSeq _cost_per_byte_copied_ms_seq;\n@@ -66,2 +67,0 @@\n-  \/\/ The cost to copy a byte in ms.\n-  TruncatedSeq _copy_cost_per_byte_ms_seq;\n@@ -134,1 +133,1 @@\n-  void report_cost_per_byte_ms(double cost_per_byte_ms, bool mark_or_rebuild_in_progress);\n+  void report_cost_per_byte_ms(double cost_per_byte_ms, bool for_young_only_phase);\n@@ -155,3 +154,1 @@\n-  double predict_object_copy_time_ms_during_cm(size_t bytes_to_copy) const;\n-\n-  double predict_object_copy_time_ms(size_t bytes_to_copy, bool during_concurrent_mark) const;\n+  double predict_object_copy_time_ms(size_t bytes_to_copy, bool for_young_only_phase) const;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Analytics.hpp","additions":4,"deletions":7,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -854,1 +854,1 @@\n-      _analytics->report_cost_per_byte_ms(cost_per_byte_ms, collector_state()->mark_or_rebuild_in_progress());\n+      _analytics->report_cost_per_byte_ms(cost_per_byte_ms, is_young_only_pause);\n@@ -1058,1 +1058,1 @@\n-  return _analytics->predict_object_copy_time_ms(expected_bytes, collector_state()->mark_or_rebuild_in_progress());\n+  return _analytics->predict_object_copy_time_ms(expected_bytes, collector_state()->in_young_only_phase());\n@@ -1063,1 +1063,1 @@\n-  return _analytics->predict_object_copy_time_ms(bytes_to_copy, collector_state()->mark_or_rebuild_in_progress());\n+  return _analytics->predict_object_copy_time_ms(bytes_to_copy, collector_state()->in_young_only_phase());\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Policy.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}