{"files":[{"patch":"@@ -33,2 +33,1 @@\n-int C2SafepointPollStub::size() const {\n-  \/\/ the max size this stub can emit\n+int C2SafepointPollStub::max_size() const {\n@@ -52,1 +51,1 @@\n-int C2EntryBarrierStub::size() const {\n+int C2EntryBarrierStub::max_size() const {\n","filename":"src\/hotspot\/cpu\/aarch64\/c2_CodeStubs_aarch64.cpp","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-int C2SafepointPollStub::size() const {\n+int C2SafepointPollStub::max_size() const {\n","filename":"src\/hotspot\/cpu\/ppc\/c2_CodeStubs_ppc.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -34,2 +34,1 @@\n-int C2SafepointPollStub::size() const {\n-  \/\/ the max size this stub can emit\n+int C2SafepointPollStub::max_size() const {\n@@ -54,2 +53,2 @@\n-int C2EntryBarrierStub::size() const {\n-  \/\/ the max size this stub can emit; 4 bytes for alignment\n+int C2EntryBarrierStub::max_size() const {\n+  \/\/ 4 bytes for alignment\n","filename":"src\/hotspot\/cpu\/riscv\/c2_CodeStubs_riscv.cpp","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -33,3 +33,2 @@\n-int C2SafepointPollStub::size() const {\n-  LP64_ONLY(return 22;)\n-  NOT_LP64(return 33;)\n+int C2SafepointPollStub::max_size() const {\n+  return 33;\n@@ -66,1 +65,1 @@\n-int C2EntryBarrierStub::size() const {\n+int C2EntryBarrierStub::max_size() const {\n","filename":"src\/hotspot\/cpu\/x86\/c2_CodeStubs_x86.cpp","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -49,1 +49,1 @@\n-  virtual int size() const = 0;\n+  virtual int max_size() const = 0;\n@@ -70,1 +70,1 @@\n-  int size() const;\n+  int max_size() const;\n@@ -85,1 +85,1 @@\n-  int size() const;\n+  int max_size() const;\n","filename":"src\/hotspot\/share\/opto\/c2_CodeStubs.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}