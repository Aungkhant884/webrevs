{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -111,1 +111,1 @@\n-        if (IvParameterSpec.class.isAssignableFrom(paramSpec)) {\n+        if (paramSpec.isAssignableFrom(IvParameterSpec.class)) {\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/BlockCipherParamsCore.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -150,1 +150,1 @@\n-        if (IvParameterSpec.class.isAssignableFrom(paramSpec)) {\n+        if (paramSpec.isAssignableFrom(IvParameterSpec.class)) {\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/ChaCha20Poly1305Parameters.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -101,1 +101,1 @@\n-        if (DHParameterSpec.class.isAssignableFrom(paramSpec)) {\n+        if (paramSpec.isAssignableFrom(DHParameterSpec.class)) {\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/DHParameters.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -110,1 +110,1 @@\n-        if (GCMParameterSpec.class.isAssignableFrom(paramSpec)) {\n+        if (paramSpec.isAssignableFrom(GCMParameterSpec.class)) {\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/GCMParameters.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -151,1 +151,1 @@\n-        if (OAEPParameterSpec.class.isAssignableFrom(paramSpec)) {\n+        if (paramSpec.isAssignableFrom(OAEPParameterSpec.class)) {\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/OAEPParameters.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -108,1 +108,1 @@\n-        if (PBEParameterSpec.class.isAssignableFrom(paramSpec)) {\n+        if (paramSpec.isAssignableFrom(PBEParameterSpec.class)) {\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/PBEParameters.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -337,1 +337,1 @@\n-        if (PBEParameterSpec.class.isAssignableFrom(paramSpec)) {\n+        if (paramSpec.isAssignableFrom(PBEParameterSpec.class)) {\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/PBES2Parameters.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -183,1 +183,1 @@\n-        if (RC2ParameterSpec.class.isAssignableFrom(paramSpec)) {\n+        if (paramSpec.isAssignableFrom(RC2ParameterSpec.class)) {\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/RC2Parameters.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -104,1 +104,1 @@\n-                if (dsaParamSpec.isAssignableFrom(paramSpec)) {\n+                if (paramSpec.isAssignableFrom(dsaParamSpec)) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/DSAParameters.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -183,1 +183,1 @@\n-        if (PSSParameterSpec.class.isAssignableFrom(paramSpec)) {\n+        if (paramSpec.isAssignableFrom(PSSParameterSpec.class)) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/rsa\/PSSParameters.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -114,1 +114,1 @@\n-        if (GCMParameterSpec.class.isAssignableFrom(paramSpec)) {\n+        if (paramSpec.isAssignableFrom(GCMParameterSpec.class)) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/GCMParameters.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -0,0 +1,84 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import sun.security.util.CurveDB;\n+\n+import javax.crypto.spec.DHParameterSpec;\n+import javax.crypto.spec.GCMParameterSpec;\n+import javax.crypto.spec.IvParameterSpec;\n+import javax.crypto.spec.OAEPParameterSpec;\n+import javax.crypto.spec.PBEParameterSpec;\n+import javax.crypto.spec.RC2ParameterSpec;\n+import java.math.BigInteger;\n+import java.nio.charset.StandardCharsets;\n+import java.security.AlgorithmParameters;\n+import java.security.spec.AlgorithmParameterSpec;\n+import java.security.spec.DSAParameterSpec;\n+import java.security.spec.ECGenParameterSpec;\n+import java.security.spec.ECParameterSpec;\n+import java.security.spec.PSSParameterSpec;\n+\n+\/**\n+ * @test\n+ * @bug 8279800\n+ * @modules java.base\/sun.security.util\n+ * @summary isAssignableFrom checks in AlgorithmParametersSpi.engineGetParameterSpec appear to be backwards\n+ *\/\n+\n+public class IsAssignableFromOrder {\n+\n+    public static void main(String[] args) throws Exception {\n+        test(\"AES\", new IvParameterSpec(new byte[16]));\n+        test(\"ChaCha20-Poly1305\", new IvParameterSpec(new byte[12]));\n+        test(\"DiffieHellman\", new DHParameterSpec(BigInteger.ONE, BigInteger.TWO));\n+        test(\"GCM\", new GCMParameterSpec(96, new byte[16]));\n+        test(\"OAEP\", OAEPParameterSpec.DEFAULT);\n+        test(\"PBEWithSHA1AndDESede\", new PBEParameterSpec(\n+                \"saltsalt\".getBytes(StandardCharsets.UTF_8), 10000));\n+        test(\"PBEWithHmacSHA256AndAES_256\", new PBEParameterSpec(\n+                \"saltsalt\".getBytes(StandardCharsets.UTF_8), 10000,\n+                new IvParameterSpec(new byte[16])));\n+        test(\"RC2\", new RC2ParameterSpec(256, new byte[32]));\n+        test(\"DSA\", new DSAParameterSpec(\n+                BigInteger.ONE, BigInteger.TWO, BigInteger.TEN));\n+        test(\"RSASSA-PSS\", PSSParameterSpec.DEFAULT);\n+        test(\"EC\", new ECGenParameterSpec(\"secp256r1\"));\n+        test(\"EC\", CurveDB.lookup(\"secp256r1\"),\n+                ECParameterSpec.class, AlgorithmParameterSpec.class);\n+    }\n+\n+    static void test(String algorithm, AlgorithmParameterSpec spec,\n+            Class<? extends AlgorithmParameterSpec>... classes) throws Exception {\n+        var ap1 = AlgorithmParameters.getInstance(algorithm);\n+        ap1.init(spec);\n+        var ap2 = AlgorithmParameters.getInstance(algorithm);\n+        ap2.init(ap1.getEncoded());\n+        if (classes.length == 0) {\n+            classes = new Class[]{spec.getClass(), AlgorithmParameterSpec.class};\n+        }\n+        for (var c : classes) {\n+            ap1.getParameterSpec(c);\n+            ap2.getParameterSpec(c);\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/security\/spec\/IsAssignableFromOrder.java","additions":84,"deletions":0,"binary":false,"changes":84,"status":"added"}]}