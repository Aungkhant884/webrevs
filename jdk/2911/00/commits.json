[{"commit":{"message":"8263058: Optimize vector shift with zero shift count\n\nLike scalar shift, vector shift could do nothing when shift count is\nzero.\n\nThis patch implements the 'Identity' method for all kinds of vector\nshift nodes to optimize out 'ShiftVCntNode 0', which is typically a\nredundant 'mov' in final generated code like below:\n\n```\n        add     x17, x12, x14\n        ldr     q16, [x17, #16]\n        mov     v16.16b, v16.16b\n        add     x14, x13, x14\n        str     q16, [x14, #16]\n```\n\nWith this patch, the code above could be optimized as below:\n\n```\n        add     x17, x12, x14\n        ldr     q16, [x17, #16]\n        add     x14, x13, x14\n        str     q16, [x14, #16]\n```\n\n[TESTS]\ncompiler\/vectorapi\/TestVectorShiftImm.java, jdk\/incubator\/vector,\nhotspot::tier1 passed without new failure.\n\nChange-Id: I7657c0daaa5f758966936b9ede670c8b9ad94c48"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/assembler_aarch64.hpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.hpp"},{"filename":"src\/hotspot\/share\/opto\/vectornode.cpp"},{"filename":"src\/hotspot\/share\/opto\/vectornode.hpp"}],"sha":"2a978dac9e48cab999db34c59bc8b779f2871ab7"}]