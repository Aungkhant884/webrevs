{"files":[{"patch":"@@ -29,2 +29,0 @@\n- *   Tests that jdk.internal.lambda.disableEagerInitialization=true creates a\n- *   get$Lambda method for non-capturing lambdas\n@@ -33,1 +31,0 @@\n- * @run main\/othervm -Djdk.internal.lambda.disableEagerInitialization=true BridgeMethod\n@@ -37,1 +34,0 @@\n-import java.util.Arrays;\n@@ -75,14 +71,0 @@\n-    private static Set<String> allowedMethods() {\n-        Set<String> s = new HashSet<>();\n-        s.add(\"m\");\n-        return s;\n-    }\n-\n-    private static boolean matchingMethodNames(Method[] methods) {\n-        Set<String> methodNames = new HashSet<>();\n-        for (Method m : methods) {\n-            methodNames.add(m.getName());\n-        }\n-        return methodNames.equals(allowedMethods());\n-    }\n-\n@@ -94,1 +76,0 @@\n-        assertTrue(matchingMethodNames(methods));\n@@ -98,6 +79,5 @@\n-            if (m.getName().equals(\"m\")) {\n-                System.out.println(m.toGenericString());\n-                Class[] parameterTypes = m.getParameterTypes();\n-                assertTrue(parameterTypes.length == 1);\n-                assertTrue(types.remove(parameterTypes[0].getName()));\n-            }\n+            assertTrue(m.getName().equals(\"m\"));\n+            System.out.println(m.toGenericString());\n+            Class[] parameterTypes = m.getParameterTypes();\n+            assertTrue(parameterTypes.length == 1);\n+            assertTrue(types.remove(parameterTypes[0].getName()));\n@@ -111,1 +91,0 @@\n-        assertTrue(matchingMethodNames(methods));\n@@ -115,6 +94,5 @@\n-            if (m.getName().equals(\"m\")) {\n-                System.out.println(m.toGenericString());\n-                Class<?>[] parameterTypes = m.getParameterTypes();\n-                assertTrue(parameterTypes.length == 1);\n-                assertTrue(types.remove(parameterTypes[0].getName()));\n-            }\n+            assertTrue(m.getName().equals(\"m\"));\n+            System.out.println(m.toGenericString());\n+            Class<?>[] parameterTypes = m.getParameterTypes();\n+            assertTrue(parameterTypes.length == 1);\n+            assertTrue(types.remove(parameterTypes[0].getName()));\n","filename":"test\/langtools\/tools\/javac\/lambda\/methodReference\/BridgeMethod.java","additions":10,"deletions":32,"binary":false,"changes":42,"status":"modified"}]}