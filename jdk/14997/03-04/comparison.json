{"files":[{"patch":"@@ -289,2 +289,1 @@\n-     *  MemorySegment.copy(MemorySegment.ofArray(elements), elementLayout, 0,\n-     *                     seg, elementLayout.withOrder(ByteOrder.nativeOrder()), 0, size);\n+     *  MemorySegment.copy(elements, 0, seg, elementLayout, 0, size);\n@@ -310,2 +309,1 @@\n-     *  MemorySegment.copy(MemorySegment.ofArray(elements), elementLayout, 0,\n-     *                     seg, elementLayout.withOrder(ByteOrder.nativeOrder()), 0, size);\n+     *  MemorySegment.copy(elements, 0, seg, elementLayout, 0, size);\n@@ -331,2 +329,1 @@\n-     *  MemorySegment.copy(MemorySegment.ofArray(elements), elementLayout, 0,\n-     *                     seg, elementLayout.withOrder(ByteOrder.nativeOrder()), 0, size);\n+     *  MemorySegment.copy(elements, 0, seg, elementLayout, 0, size);\n@@ -352,2 +349,1 @@\n-     *  MemorySegment.copy(MemorySegment.ofArray(elements), elementLayout, 0,\n-     *                     seg, elementLayout.withOrder(ByteOrder.nativeOrder()), 0, size);\n+     *  MemorySegment.copy(elements, 0, seg, elementLayout, 0, size);\n@@ -373,2 +369,1 @@\n-     *  MemorySegment.copy(MemorySegment.ofArray(elements), elementLayout, 0,\n-     *                     seg, elementLayout.withOrder(ByteOrder.nativeOrder()), 0, size);\n+     *  MemorySegment.copy(elements, 0, seg, elementLayout, 0, size);\n@@ -394,2 +389,1 @@\n-     *  MemorySegment.copy(MemorySegment.ofArray(elements), elementLayout, 0,\n-     *                     seg, elementLayout.withOrder(ByteOrder.nativeOrder()), 0, size);\n+     *  MemorySegment.copy(elements, 0, seg, elementLayout, 0, size);\n@@ -415,2 +409,1 @@\n-     *  MemorySegment.copy(MemorySegment.ofArray(elements), elementLayout, 0,\n-     *                     seg, elementLayout.withOrder(ByteOrder.nativeOrder()), 0, size);\n+     *  MemorySegment.copy(elements, 0, seg, elementLayout, 0, size);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/SegmentAllocator.java","additions":7,"deletions":14,"binary":false,"changes":21,"status":"modified"}]}