{"files":[{"patch":"@@ -275,0 +275,7 @@\n+        private Key(BaseLocale locale) {\n+            this.normalized = true;\n+            this.holderRef = new SoftReference<>(locale);\n+            this.holder = null;\n+            this.hash = hashCode(locale);\n+        }\n+\n@@ -355,1 +362,8 @@\n-            return Key.normalize(key).getBaseLocale();\n+            if (key.normalized) {\n+                return key.getBaseLocale();\n+            }\n+\n+            assert (key.holder != null && key.holderRef == null);\n+            BaseLocale l = key.holder;\n+            BaseLocale locale = new BaseLocale(l.getLanguage(), l.getScript(), l.getRegion(), l.getVariant(), true);\n+            return (new Key(locale)).getBaseLocale();\n","filename":"src\/java.base\/share\/classes\/sun\/util\/locale\/BaseLocale.java","additions":15,"deletions":1,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -60,1 +60,0 @@\n-            key = normalizeKey(key);\n@@ -62,1 +61,1 @@\n-            if (key == null || newVal == null) {\n+            if (newVal == null) {\n@@ -64,1 +63,1 @@\n-                return null;\n+                throw new NullPointerException();\n","filename":"src\/java.base\/share\/classes\/sun\/util\/locale\/LocaleObjectCache.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -63,0 +63,5 @@\n+\n+    @Benchmark\n+    public Locale forLanguageTag() {\n+        return Locale.forLanguageTag(\"en-US-x-lvariant-POSIX\");\n+    }\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/util\/LocaleDefaults.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"}]}