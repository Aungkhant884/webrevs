{"files":[{"patch":"@@ -824,1 +824,1 @@\n-     *         The file position at which the transfer is to begin;\n+     *         The position at which the transfer is to begin;\n","filename":"src\/java.base\/share\/classes\/java\/nio\/channels\/FileChannel.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @summary Test transferFrom to a position greater than size\n+ * @summary Test transferFrom to a position greater than the file size\n@@ -89,8 +89,4 @@\n-    \/\/\n-    \/\/ Test the direct and memory-mapped paths. At present the direct path\n-    \/\/ is implemented only on Linux. The mapped path will be taken only if\n-    \/\/ there is no direct path and the size of the transfer is more than\n-    \/\/ sun.nio.ch.FileChannelImpl::MAPPED_TRANSFER_THRESHOLD (16K).\n-    \/\/ This method therefore tests the direct path on Linux and the mapped\n-    \/\/ path on other platforms.\n-    \/\/\n+    \/*\n+     * This method tests the optimized path for transferring from a file\n+     * source to a file destination.\n+     *\/\n@@ -99,1 +95,3 @@\n-    void fromFast(long initialPosition, int bufSize, long offset) throws IOException {\n+    void fromFileChannel(long initialPosition, int bufSize, long offset)\n+        throws IOException\n+    {\n@@ -112,1 +110,1 @@\n-            transferFrom(src, src.size(), initialPosition, offset, bytes);\n+            testTransferFrom(src, src.size(), initialPosition, offset, bytes);\n@@ -123,1 +121,2 @@\n-        throws IOException {\n+        throws IOException\n+    {\n@@ -128,1 +127,1 @@\n-            transferFrom(src, bufSize, initialPosition, offset, bytes);\n+            testTransferFrom(src, bufSize, initialPosition, offset, bytes);\n@@ -141,3 +140,5 @@\n-    private static void transferFrom(ReadableByteChannel src, long count,\n-                                     long initialPos, long offset, byte[] bytes)\n-        throws IOException {\n+    private static void testTransferFrom(ReadableByteChannel src, long count,\n+                                         long initialPos, long offset,\n+                                         byte[] bytes)\n+        throws IOException\n+    {\n@@ -153,1 +154,1 @@\n-            assertFalse(transferred > count, transferred + \" > \" + count);\n+            assertFalse(count < transferred, count + \" < \" + transferred);\n","filename":"test\/jdk\/java\/nio\/channels\/FileChannel\/TransferFromExtend.java","additions":18,"deletions":17,"binary":false,"changes":35,"status":"modified"}]}