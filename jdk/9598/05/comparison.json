{"files":[{"patch":"@@ -317,1 +317,1 @@\n-          \"Update MethodData*s in Tier1-generated code\")                    \\\n+          \"Update MethodData*s in Tier 3 C1 generated code\")                \\\n","filename":"src\/hotspot\/share\/c1\/c1_globals.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n- *  * level 0 - interpreter\n+ *  * level 0 - interpreter (Profiling is tracked by a MethodData object, or MDO in short)\n@@ -40,2 +40,12 @@\n- *  * level 3 - C1 with full profiling (level 2 + MDO)\n- *  * level 4 - C2\n+ *  * level 3 - C1 with full profiling (level 2 + All other MDO profiling information)\n+ *  * level 4 - C2 with full profile guided optimization\n+ *\n+ * The MethodData object is used by both the interpreter and C1 to store any profiling\n+ * information collected on a method (CompilationPolicy::create_mdo, compilationPolicy.cpp\n+ * for the interpreter and ciMethod::ensure_method_data, ciMethod.cpp for C1), and interacts\n+ * with C1 and C2 via the compiler interface. It is updated periodically as more profiling\n+ * information is gathered, directly in the case of the interpreter and through ciMethodData\n+ * when level 3 code generated by C1 is executed.\n+ *\n+ * See ciMethod.cpp and ciMethodData.cpp for details on communication between the MDO and\n+ * compiler interface.\n","filename":"src\/hotspot\/share\/compiler\/compilationPolicy.hpp","additions":13,"deletions":3,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -41,1 +41,2 @@\n-\/\/ during zeroth-tier (interpretive) and first-tier execution.\n+\/\/ during execution at the zeroth-tier (interpreter) and third-tier (C1\n+\/\/ with full profiling).\n","filename":"src\/hotspot\/share\/oops\/methodData.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"}]}