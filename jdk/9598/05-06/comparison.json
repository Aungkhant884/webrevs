{"files":[{"patch":"@@ -43,9 +43,8 @@\n- * The MethodData object is used by both the interpreter and C1 to store any profiling\n- * information collected on a method (CompilationPolicy::create_mdo, compilationPolicy.cpp\n- * for the interpreter and ciMethod::ensure_method_data, ciMethod.cpp for C1), and interacts\n- * with C1 and C2 via the compiler interface. It is updated periodically as more profiling\n- * information is gathered, directly in the case of the interpreter and through ciMethodData\n- * when level 3 code generated by C1 is executed.\n- *\n- * See ciMethod.cpp and ciMethodData.cpp for details on communication between the MDO and\n- * compiler interface.\n+ * The MethodData object is created by both the interpreter or either compiler to store any\n+ * profiling information collected on a method (ciMethod::ensure_method_data() for C1 and C2\n+ * and CompilationPolicy::create_mdo() for the interpreter). Both the interpreter and code\n+ * compiled by C1 at level 3 will constantly update profiling information in the MDO during\n+ * execution. The information in the MDO is then used by C1 and C2 during compilation, via\n+ * the compiler interface (ciMethodXXX).\n+ * See ciMethod.cpp and ciMethodData.cpp for information transfer from an MDO to the compilers\n+ * through the compiler interface.\n","filename":"src\/hotspot\/share\/compiler\/compilationPolicy.hpp","additions":8,"deletions":9,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -41,2 +41,3 @@\n-\/\/ during execution at the zeroth-tier (interpreter) and third-tier (C1\n-\/\/ with full profiling).\n+\/\/ during zeroth-tier (interpreter) and third-tier (C1 with full profiling)\n+\/\/ execution.\n+\/\/\n","filename":"src\/hotspot\/share\/oops\/methodData.hpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"}]}