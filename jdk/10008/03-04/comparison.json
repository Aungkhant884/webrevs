{"files":[{"patch":"@@ -616,2 +616,1 @@\n-            applyFilterOnCandidates(new Criteria(e.getKey(), e.getValue()),\n-                    candidates);\n+            new Criteria(e.getKey(), e.getValue()).apply(candidates);\n@@ -866,13 +865,7 @@\n-    }\n-\n-    \/*\n-     * Apply the specified filter on the specified Provider candidates\n-     * and remove those which do not contain a match.\n-     *\/\n-    private static void applyFilterOnCandidates(Criteria cr,\n-            LinkedList<Provider> candidates) {\n-        Iterator<Provider> provs = candidates.iterator();\n-        while (provs.hasNext()) {\n-            Provider p = provs.next();\n-            if (!isCriterionSatisfied(p, cr)) {\n-                provs.remove();\n+        void apply(LinkedList<Provider> candidates) {\n+            Iterator<Provider> provs = candidates.iterator();\n+            while (provs.hasNext()) {\n+                Provider p = provs.next();\n+                if (!isCriterionSatisfied(p)) {\n+                    provs.remove();\n+                }\n@@ -881,1 +874,0 @@\n-    }\n@@ -883,25 +875,12 @@\n-    \/*\n-     * Returns {@code true} if the given provider satisfies\n-     * the selection criterion key:value.\n-     *\/\n-    private static boolean isCriterionSatisfied(Provider prov, Criteria cr) {\n-        \/\/ Constructed key have ONLY 1 space between algName and attrName\n-        String key = cr.serviceName + '.' + cr.algName +\n-                (cr.attrName != null ? ' ' + cr.attrName : \"\");\n-\n-        \/\/ Check whether the provider has a property\n-        \/\/ whose key is the same as the given key.\n-        String propValue = getProviderProperty(key, prov);\n-\n-        if (propValue == null) {\n-            \/\/ Check whether we have an alias instead\n-            \/\/ of a standard name in the key.\n-            String standardName = getProviderProperty(\"Alg.Alias.\" +\n-                                                      cr.serviceName + \".\" +\n-                                                      cr.algName,\n-                                                      prov);\n-            if (standardName != null) {\n-                key = cr.serviceName + \".\" + cr.algName +\n-                        (cr.attrName != null ? ' ' + cr.attrName : \"\");\n-                propValue = getProviderProperty(key, prov);\n-            }\n+        \/*\n+         * Returns {@code true} if the given provider satisfies\n+         * the selection criterion key:value.\n+         *\/\n+        private boolean isCriterionSatisfied(Provider prov) {\n+            \/\/ Constructed key have ONLY 1 space between algName and attrName\n+            String key = serviceName + '.' + algName +\n+                    (attrName != null ? ' ' + attrName : \"\");\n+\n+            \/\/ Check whether the provider has a property\n+            \/\/ whose key is the same as the given key.\n+            String propValue = getProviderProperty(key, prov);\n@@ -910,3 +889,15 @@\n-                \/\/ The provider doesn't have the given\n-                \/\/ key in its property list.\n-                return false;\n+                \/\/ Check whether we have an alias instead\n+                \/\/ of a standard name in the key.\n+                String standardName = getProviderProperty(\"Alg.Alias.\" +\n+                        serviceName + \".\" + algName, prov);\n+                if (standardName != null) {\n+                    key = serviceName + \".\" + standardName +\n+                            (attrName != null ? ' ' + attrName : \"\");\n+                    propValue = getProviderProperty(key, prov);\n+                }\n+\n+                if (propValue == null) {\n+                    \/\/ The provider doesn't have the given\n+                    \/\/ key in its property list.\n+                    return false;\n+                }\n@@ -914,1 +905,0 @@\n-        }\n@@ -916,6 +906,6 @@\n-        \/\/ If the key is in the format of:\n-        \/\/ <crypto_service>.<algorithm_or_type>,\n-        \/\/ there is no need to check the value.\n-        if (cr.attrName == null) {\n-            return true;\n-        }\n+            \/\/ If the key is in the format of:\n+            \/\/ <crypto_service>.<algorithm_or_type>,\n+            \/\/ there is no need to check the value.\n+            if (attrName == null) {\n+                return true;\n+            }\n@@ -923,3 +913,4 @@\n-        \/\/ If we get here, the key must be in the\n-        \/\/ format of <crypto_service>.<algorithm_or_type> <attribute_name>.\n-        return isConstraintSatisfied(cr.attrName, cr.attrValue, propValue);\n+            \/\/ If we get here, the key must be in the\n+            \/\/ format of <crypto_service>.<algorithm_or_type> <attribute_name>.\n+            return isConstraintSatisfied(attrName, attrValue, propValue);\n+        }\n","filename":"src\/java.base\/share\/classes\/java\/security\/Security.java","additions":45,"deletions":54,"binary":false,"changes":99,"status":"modified"},{"patch":"@@ -94,0 +94,4 @@\n+\n+        \/\/ test alias\n+        doit(\"Signature.NONEwithDSA\", p);\n+\n","filename":"test\/jdk\/java\/security\/Security\/ProviderFiltering.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"}]}