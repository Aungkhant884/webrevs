{"files":[{"patch":"@@ -72,2 +72,6 @@\n-        opt = optval;\n-        rv = setsockopt(fd, IPPROTO_IP, IP_DONTFRAGMENT, (char *)&opt, sizeof(int));\n+        opt = optval ? IP_PMTUDISC_DO : IP_PMTUDISC_DONT;\n+        rv = setsockopt(fd, IPPROTO_IP, IP_MTU_DISCOVER, (char *)&opt, sizeof(int));\n+        if (rv == SOCKET_ERROR && WSAGetLastError() == WSAENOPROTOOPT) {\n+            opt = optval;\n+            rv = setsockopt(fd, IPPROTO_IP, IP_DONTFRAGMENT, (char *)&opt, sizeof(int));\n+        }\n@@ -101,2 +105,8 @@\n-        rv = getsockopt(fd, IPPROTO_IP, IP_DONTFRAGMENT, (char *)&optval, &sz);\n-        handleError(env, rv, \"get option IP_DONTFRAGMENT failed\");\n+        rv = getsockopt(fd, IPPROTO_IP, IP_MTU_DISCOVER, (char *)&optval, &sz);\n+        if (rv == SOCKET_ERROR && WSAGetLastError() == WSAENOPROTOOPT) {\n+            rv = getsockopt(fd, IPPROTO_IP, IP_DONTFRAGMENT, (char *)&optval, &sz);\n+            handleError(env, rv, \"get option IP_DONTFRAGMENT failed\");\n+            return optval;\n+        }\n+            handleError(env, rv, \"get option IP_DONTFRAGMENT failed\");\n+        return optval == IP_PMTUDISC_DO ? JNI_TRUE : JNI_FALSE;\n","filename":"src\/jdk.net\/windows\/native\/libextnet\/WindowsSocketOptions.c","additions":14,"deletions":4,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -44,0 +44,10 @@\n+        testDatagramChannel(args, fam);\n+        DatagramSocket c = new DatagramSocket();\n+        testDatagramSocket(c);\n+        DatagramChannel dc = DatagramChannel.open(fam);\n+        c = dc.socket();\n+        testDatagramSocket(c);\n+        testMulticastSocket();\n+    }\n+\n+    public static void testDatagramChannel(String[] args, ProtocolFamily fam) throws IOException {\n@@ -59,0 +69,32 @@\n+\n+    public static void testDatagramSocket(DatagramSocket c1) throws IOException {\n+        if (c1.getOption(IP_DONTFRAGMENT)) {\n+            throw new RuntimeException(\"IP_DONTFRAGMENT should not be set\");\n+        }\n+        c1.setOption(IP_DONTFRAGMENT, true);\n+        if (!c1.getOption(IP_DONTFRAGMENT)) {\n+            throw new RuntimeException(\"IP_DONTFRAGMENT should be set\");\n+        }\n+        c1.setOption(IP_DONTFRAGMENT, false);\n+        if (c1.getOption(IP_DONTFRAGMENT)) {\n+            throw new RuntimeException(\"IP_DONTFRAGMENT should not be set\");\n+        }\n+        c1.close();\n+    }\n+\n+    public static void testMulticastSocket() throws IOException {\n+        MulticastSocket c1 = new MulticastSocket();\n+\n+        if (c1.getOption(IP_DONTFRAGMENT)) {\n+            throw new RuntimeException(\"IP_DONTFRAGMENT should not be set\");\n+        }\n+        c1.setOption(IP_DONTFRAGMENT, true);\n+        if (!c1.getOption(IP_DONTFRAGMENT)) {\n+            throw new RuntimeException(\"IP_DONTFRAGMENT should be set\");\n+        }\n+        c1.setOption(IP_DONTFRAGMENT, false);\n+        if (c1.getOption(IP_DONTFRAGMENT)) {\n+            throw new RuntimeException(\"IP_DONTFRAGMENT should not be set\");\n+        }\n+        c1.close();\n+    }\n","filename":"test\/jdk\/jdk\/net\/ExtendedSocketOption\/DontFragmentTest.java","additions":42,"deletions":0,"binary":false,"changes":42,"status":"modified"}]}