{"files":[{"patch":"@@ -28,1 +28,0 @@\n-import java.io.Serializable;\n@@ -343,0 +342,1 @@\n+        Comparator<? super K> comparator = this.comparator;\n@@ -344,1 +344,1 @@\n-            return getEntryUsingComparator(key);\n+            return getEntryUsingComparator(key, comparator);\n@@ -347,12 +347,2 @@\n-            Comparable<? super K> k = (Comparable<? super K>) key;\n-        Entry<K,V> p = root;\n-        while (p != null) {\n-            int cmp = k.compareTo(p.key);\n-            if (cmp < 0)\n-                p = p.left;\n-            else if (cmp > 0)\n-                p = p.right;\n-            else\n-                return p;\n-        }\n-        return null;\n+        Comparable<? super K> k = (Comparable<? super K>) key;\n+        return getEntryUsingComparator(k, natural());\n@@ -367,1 +357,1 @@\n-    final Entry<K,V> getEntryUsingComparator(Object key) {\n+    final Entry<K, V> getEntryUsingComparator(Object key, Comparator<? super K> cpr) {\n@@ -369,13 +359,10 @@\n-            K k = (K) key;\n-        Comparator<? super K> cpr = comparator;\n-        if (cpr != null) {\n-            Entry<K,V> p = root;\n-            while (p != null) {\n-                int cmp = cpr.compare(k, p.key);\n-                if (cmp < 0)\n-                    p = p.left;\n-                else if (cmp > 0)\n-                    p = p.right;\n-                else\n-                    return p;\n-            }\n+        K k = (K) key;\n+        Entry<K, V> p = root;\n+        while (p != null) {\n+            int cmp = cpr.compare(k, p.key);\n+            if (cmp < 0)\n+                p = p.left;\n+            else if (cmp > 0)\n+                p = p.right;\n+            else\n+                return p;\n@@ -1077,1 +1064,1 @@\n-     * {@link java.util.Spliterator#getComparator()}) is {@code null} if\n+     * {@link Spliterator#getComparator()}) is {@code null} if\n@@ -2964,0 +2951,5 @@\n+    @SuppressWarnings(\"unchecked\")\n+    private static <K> Comparator<? super K> natural() {\n+        return (Comparator<? super K>) Comparator.naturalOrder();\n+    }\n+\n@@ -3325,10 +3317,2 @@\n-            if (tree.comparator != null) {\n-                return Map.Entry.comparingByKey(tree.comparator);\n-            }\n-            else {\n-                return (Comparator<Map.Entry<K, V>> & Serializable) (e1, e2) -> {\n-                    @SuppressWarnings(\"unchecked\")\n-                    Comparable<? super K> k1 = (Comparable<? super K>) e1.getKey();\n-                    return k1.compareTo(e2.getKey());\n-                };\n-            }\n+            Comparator<? super K> treeComparator = tree.comparator;\n+            return Map.Entry.comparingByKey(treeComparator == null ? natural() : treeComparator);\n","filename":"src\/java.base\/share\/classes\/java\/util\/TreeMap.java","additions":23,"deletions":39,"binary":false,"changes":62,"status":"modified"}]}