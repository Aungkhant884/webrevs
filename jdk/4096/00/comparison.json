{"files":[{"patch":"@@ -90,2 +90,2 @@\n-                   true, \/\/ cancellable\n-                   ShenandoahStringDedup::is_enabled()); \/\/ perform string dedup\n+                   true \/*cancellable*\/,\n+                   ShenandoahStringDedup::is_enabled() ? ENQUEUE_DEDUP : NO_DEDUP);\n@@ -152,1 +152,0 @@\n-\n@@ -154,3 +153,2 @@\n-                   false, \/\/ not cancellable\n-                   _dedup_string);\n-\n+                   false \/*not cancellable*\/,\n+                   _dedup_string ? ENQUEUE_DEDUP : NO_DEDUP);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentMark.cpp","additions":4,"deletions":6,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -58,3 +58,2 @@\n-template <bool CANCELLABLE>\n-void ShenandoahMark::mark_loop_prework(uint w, TaskTerminator *t, ShenandoahReferenceProcessor *rp,\n-                                       bool strdedup) {\n+template <bool CANCELLABLE, StringDedupMode STRING_DEDUP>\n+void ShenandoahMark::mark_loop_prework(uint w, TaskTerminator *t, ShenandoahReferenceProcessor *rp) {\n@@ -70,9 +69,3 @@\n-      if (strdedup) {\n-        using Closure = ShenandoahMarkUpdateRefsMetadataClosure<ENQUEUE_DEDUP>;\n-        Closure cl(q, rp);\n-        mark_loop_work<Closure, CANCELLABLE>(&cl, ld, w, t);\n-      } else {\n-        using Closure = ShenandoahMarkUpdateRefsMetadataClosure<NO_DEDUP>;\n-        Closure cl(q, rp);\n-        mark_loop_work<Closure, CANCELLABLE>(&cl, ld, w, t);\n-      }\n+      using Closure = ShenandoahMarkUpdateRefsMetadataClosure<STRING_DEDUP>;\n+      Closure cl(q, rp);\n+      mark_loop_work<Closure, CANCELLABLE>(&cl, ld, w, t);\n@@ -80,9 +73,3 @@\n-      if (strdedup) {\n-        using Closure = ShenandoahMarkRefsMetadataClosure<ENQUEUE_DEDUP>;\n-        Closure cl(q, rp);\n-        mark_loop_work<Closure, CANCELLABLE>(&cl, ld, w, t);\n-      } else {\n-        using Closure = ShenandoahMarkRefsMetadataClosure<NO_DEDUP>;\n-        Closure cl(q, rp);\n-        mark_loop_work<Closure, CANCELLABLE>(&cl, ld, w, t);\n-      }\n+      using Closure = ShenandoahMarkRefsMetadataClosure<STRING_DEDUP>;\n+      Closure cl(q, rp);\n+      mark_loop_work<Closure, CANCELLABLE>(&cl, ld, w, t);\n@@ -92,9 +79,3 @@\n-      if (strdedup) {\n-        using Closure = ShenandoahMarkUpdateRefsClosure<ENQUEUE_DEDUP>;\n-        Closure cl(q, rp);\n-        mark_loop_work<Closure, CANCELLABLE>(&cl, ld, w, t);\n-      } else {\n-        using Closure = ShenandoahMarkUpdateRefsClosure<NO_DEDUP>;\n-        Closure cl(q, rp);\n-        mark_loop_work<Closure, CANCELLABLE>(&cl, ld, w, t);\n-      }\n+      using Closure = ShenandoahMarkUpdateRefsClosure<STRING_DEDUP>;\n+      Closure cl(q, rp);\n+      mark_loop_work<Closure, CANCELLABLE>(&cl, ld, w, t);\n@@ -102,9 +83,3 @@\n-      if (strdedup) {\n-        using Closure = ShenandoahMarkRefsClosure<ENQUEUE_DEDUP>;\n-        Closure cl(q, rp);\n-        mark_loop_work<Closure, CANCELLABLE>(&cl, ld, w, t);\n-      } else {\n-        using Closure = ShenandoahMarkRefsClosure<NO_DEDUP>;\n-        Closure cl(q, rp);\n-        mark_loop_work<Closure, CANCELLABLE>(&cl, ld, w, t);\n-      }\n+      using Closure = ShenandoahMarkRefsClosure<STRING_DEDUP>;\n+      Closure cl(q, rp);\n+      mark_loop_work<Closure, CANCELLABLE>(&cl, ld, w, t);\n@@ -117,0 +92,29 @@\n+void ShenandoahMark::mark_loop(uint worker_id, TaskTerminator* terminator, ShenandoahReferenceProcessor *rp,\n+               bool cancellable, StringDedupMode dedup_mode) {\n+  if (cancellable) {\n+    switch(dedup_mode) {\n+      case NO_DEDUP:\n+        mark_loop_prework<true, NO_DEDUP>(worker_id, terminator, rp);\n+        break;\n+      case ENQUEUE_DEDUP:\n+        mark_loop_prework<true, ENQUEUE_DEDUP>(worker_id, terminator, rp);\n+        break;\n+      case ALWAYS_DEDUP:\n+        mark_loop_prework<true, ALWAYS_DEDUP>(worker_id, terminator, rp);\n+        break;\n+    }\n+  } else {\n+    switch(dedup_mode) {\n+      case NO_DEDUP:\n+        mark_loop_prework<false, NO_DEDUP>(worker_id, terminator, rp);\n+        break;\n+      case ENQUEUE_DEDUP:\n+        mark_loop_prework<false, ENQUEUE_DEDUP>(worker_id, terminator, rp);\n+        break;\n+      case ALWAYS_DEDUP:\n+        mark_loop_prework<false, ALWAYS_DEDUP>(worker_id, terminator, rp);\n+        break;\n+    }\n+  }\n+}\n+\n@@ -191,9 +195,0 @@\n-\n-void ShenandoahMark::mark_loop(uint worker_id, TaskTerminator* terminator, ShenandoahReferenceProcessor *rp,\n-               bool cancellable, bool strdedup) {\n-  if (cancellable) {\n-    mark_loop_prework<true>(worker_id, terminator, rp, strdedup);\n-  } else {\n-    mark_loop_prework<false>(worker_id, terminator, rp, strdedup);\n-  }\n-}\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahMark.cpp","additions":43,"deletions":48,"binary":false,"changes":91,"status":"modified"},{"patch":"@@ -73,2 +73,2 @@\n-  template <bool CANCELLABLE>\n-  void mark_loop_prework(uint worker_id, TaskTerminator *terminator, ShenandoahReferenceProcessor *rp, bool strdedup);\n+  template <bool CANCELLABLE, StringDedupMode STRING_DEDUP>\n+  void mark_loop_prework(uint worker_id, TaskTerminator *terminator, ShenandoahReferenceProcessor *rp);\n@@ -78,1 +78,1 @@\n-                 bool cancellable, bool strdedup);\n+                 bool cancellable, StringDedupMode dedup_mode);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahMark.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -263,0 +263,3 @@\n+      } else if ((STRING_DEDUP == ALWAYS_DEDUP) && ShenandoahStringDedup::is_string_candidate(obj)) {\n+        assert(ShenandoahStringDedup::is_enabled(), \"Must be enabled\");\n+        req->add(obj);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahMark.inline.hpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -37,1 +37,2 @@\n-  ENQUEUE_DEDUP  \/\/ Enqueue candidate Strings for deduplication\n+  ENQUEUE_DEDUP, \/\/ Enqueue candidate Strings for deduplication, if meet age threshold\n+  ALWAYS_DEDUP   \/\/ Enqueue Strings for deduplication\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOopClosures.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -136,2 +136,2 @@\n-            false, \/\/ not cancellable\n-            ShenandoahStringDedup::is_enabled());\n+            false \/* not cancellable *\/,\n+            ShenandoahStringDedup::is_enabled() ? ALWAYS_DEDUP : NO_DEDUP);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahSTWMark.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+  static inline bool is_string_candidate(oop obj);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahStringDedup.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,1 +31,1 @@\n-bool ShenandoahStringDedup::is_candidate(oop obj) {\n+bool ShenandoahStringDedup::is_string_candidate(oop obj) {\n@@ -34,2 +34,6 @@\n-  if (!java_lang_String::is_instance_inlined(obj) ||\n-       java_lang_String::value(obj) == nullptr) {\n+  return java_lang_String::is_instance_inlined(obj) &&\n+         java_lang_String::value(obj) != nullptr;\n+}\n+\n+bool ShenandoahStringDedup::is_candidate(oop obj) {\n+  if (!is_string_candidate(obj)) {\n@@ -38,0 +42,1 @@\n+\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahStringDedup.inline.hpp","additions":8,"deletions":3,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2018, Red Hat, Inc. All rights reserved.\n+ * Copyright (c) 2017, 2021, Red Hat, Inc. All rights reserved.\n@@ -37,1 +37,1 @@\n- *      -XX:+ShenandoahDegeneratedGC\n+ *      -XX:+ShenandoahDegeneratedGC -DGCCount=1\n@@ -42,1 +42,1 @@\n- *      -XX:-ShenandoahDegeneratedGC\n+ *      -XX:-ShenandoahDegeneratedGC -DGCCount=1\n@@ -57,1 +57,1 @@\n- *      -XX:+UseShenandoahGC -XX:ShenandoahGCHeuristics=aggressive\n+ *      -XX:+UseShenandoahGC -XX:ShenandoahGCHeuristics=aggressive -XX:StringDeduplicationAgeThreshold=3\n@@ -61,1 +61,1 @@\n- *      -XX:+UseShenandoahGC\n+ *      -XX:+UseShenandoahGC -XX:StringDeduplicationAgeThreshold=3\n@@ -65,1 +65,1 @@\n- *      -XX:+UseShenandoahGC -XX:ShenandoahGCHeuristics=compact\n+ *      -XX:+UseShenandoahGC -XX:ShenandoahGCHeuristics=compact -XX:StringDeduplicationAgeThreshold=3\n@@ -80,1 +80,1 @@\n- *      -XX:+UseShenandoahGC -XX:ShenandoahGCMode=iu\n+ *      -XX:+UseShenandoahGC -XX:ShenandoahGCMode=iu -XX:StringDeduplicationAgeThreshold=3\n@@ -84,1 +84,1 @@\n- *      -XX:+UseShenandoahGC -XX:ShenandoahGCMode=iu -XX:ShenandoahGCHeuristics=aggressive\n+ *      -XX:+UseShenandoahGC -XX:ShenandoahGCMode=iu -XX:ShenandoahGCHeuristics=aggressive -XX:StringDeduplicationAgeThreshold=3\n@@ -99,0 +99,2 @@\n+    \/\/ How many GC cycles are needed to complete deduplication.\n+    private static final int GCCount = Integer.getInteger(\"GCCount\", 3);\n@@ -171,1 +173,0 @@\n-        System.out.println(\"Dedup: \" + dedup + \"\/\" + total + \" unique: \" + (total - dedup));\n@@ -178,10 +179,2 @@\n-        System.gc();\n-        System.gc();\n-        System.gc();\n-        System.gc();\n-        System.gc();\n-\n-        if (verifyDedepString(astrs) != UniqueStrings) {\n-            \/\/ Can not guarantee all strings are deduplicated, there can\n-            \/\/ still have pending items in queues.\n-            System.out.println(\"Not all strings are deduplicated\");\n+        for (int count = 0; count < GCCount; count ++) {\n+          System.gc();\n@@ -189,0 +182,17 @@\n+\n+        int unique_count = 0;\n+        for (int waitCount = 0; waitCount < 3; waitCount ++) {\n+            \/\/ Let concurrent string dedup thread to run\n+            try {\n+                Thread.sleep(1000);\n+            } catch (InterruptedException e) {\n+            }\n+\n+            \/\/ All deduplicated, done.\n+            unique_count = verifyDedepString(astrs);\n+            if ( unique_count == UniqueStrings) {\n+                return;\n+            }\n+        }\n+\n+        throw new RuntimeException(\"Expecting \" + UniqueStrings + \" unique strings, but got \" + unique_count);\n","filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/TestStringDedup.java","additions":29,"deletions":19,"binary":false,"changes":48,"status":"modified"}]}