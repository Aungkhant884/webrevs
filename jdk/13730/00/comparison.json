{"files":[{"patch":"@@ -0,0 +1,45 @@\n+\/*\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+   @test\n+   @bug 4167850\n+   @summary Verify no exception removing items from an empty list.\n+*\/\n+\n+import javax.swing.JComboBox;\n+\n+public class bug4167850 {\n+\n+    public static void main(String[] args) {\n+        JComboBox comboBox = new JComboBox(\n+            new Object[] {\n+                \"Coma Berenices\",\n+                \"Triangulum\",\n+                \"Camelopardis\",\n+                \"Cassiopea\"});\n+\n+        comboBox.removeAllItems();\n+        comboBox.removeAllItems();\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JComboBox\/bug4167850.java","additions":45,"deletions":0,"binary":false,"changes":45,"status":"added"},{"patch":"@@ -0,0 +1,53 @@\n+\/*\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/* @test\n+   @bug 4209474\n+   @summary setSelectedItem(int) should only fire events if selection changed - avoid recursive calls\n+*\/\n+\n+import javax.swing.JComboBox;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+\n+public class bug4209474 {\n+\n+    public static void main(String[] args) {\n+\n+        JComboBox comboBox = new JComboBox(\n+            new Object[] {\n+                        \"Coma Berenices\",\n+                        \"Triangulum\",\n+                        \"Camelopardis\",\n+                        \"Cassiopea\"});\n+\n+        ActionListener listener = new ActionListener() {\n+            public void actionPerformed(ActionEvent e) {\n+                comboBox.setSelectedIndex(0);\n+            }\n+        };\n+\n+        comboBox.addActionListener(listener);\n+        comboBox.setSelectedIndex(0);\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JComboBox\/bug4209474.java","additions":53,"deletions":0,"binary":false,"changes":53,"status":"added"},{"patch":"@@ -0,0 +1,46 @@\n+\/*\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+   @test\n+   @bug 4234119\n+   @summary Tests if adding items to ComboBox is slow\n+*\/\n+\n+import javax.swing.JComboBox;\n+\n+public class bug4234119 {\n+\n+    public static void main(String args[]) {\n+        JComboBox jComboBox1 = new JComboBox();\n+        long startTime = System.currentTimeMillis();\n+        for (int i = 0 ; i < 500; i++) {\n+            jComboBox1.addItem(Integer.valueOf(i));\n+        }\n+        long deltaTime = System.currentTimeMillis() - startTime;\n+        if (deltaTime > 20000) {\n+            throw new Error(\"Test failed: adding items to ComboBox is SLOW! (it took \" + deltaTime + \" ms\");\n+        }\n+        System.out.println(\"Elapsed time: \" + deltaTime);\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JComboBox\/bug4234119.java","additions":46,"deletions":0,"binary":false,"changes":46,"status":"added"},{"patch":"@@ -0,0 +1,154 @@\n+\/*\n+ * Copyright (c) 2004, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+   @test\n+   @bug 4890345\n+   @requires (os.family == \"windows\")\n+   @summary 1.4.2 REGRESSION: JComboBox has problem in JTable in Windows L&F\n+   @key headful\n+*\/\n+\n+import java.util.Vector;\n+import java.awt.BorderLayout;\n+import java.awt.Robot;\n+import java.awt.event.KeyEvent;\n+import javax.swing.DefaultCellEditor;\n+import javax.swing.JComboBox;\n+import javax.swing.JFrame;\n+import javax.swing.JScrollPane;\n+import javax.swing.JTable;\n+import javax.swing.SwingUtilities;\n+import javax.swing.UIManager;\n+import javax.swing.table.DefaultTableModel;\n+import javax.swing.table.TableModel;\n+import javax.swing.event.PopupMenuEvent;\n+import javax.swing.event.PopupMenuListener;\n+\n+public class bug4890345 {\n+\n+    volatile boolean passed = false;\n+    volatile boolean isLafOk = true;\n+\n+    volatile JFrame mainFrame;\n+    volatile JTable tbl;\n+\n+    public static void main(String[] args) throws Exception {\n+        bug4890345 test = new bug4890345();\n+        try {\n+            SwingUtilities.invokeAndWait(test::createUI);\n+            if (!test.isLafOk) {\n+                throw new RuntimeException(\"Could not create Win L&F\");\n+            }\n+            test.test();\n+        } finally {\n+            JFrame f = test.mainFrame;\n+            if (f != null) {\n+                SwingUtilities.invokeAndWait(() -> f.dispose());\n+            }\n+        }\n+    }\n+\n+    void createUI() {\n+        try {\n+            UIManager.setLookAndFeel(\"com.sun.java.swing.plaf.windows.WindowsLookAndFeel\");\n+        } catch (Exception ex) {\n+            System.err.println(\"Can not initialize Windows L&F. Testing skipped.\");\n+            isLafOk = false;\n+        }\n+\n+        if (isLafOk) {\n+            mainFrame = new JFrame(\"Bug4890345\");\n+            String[] items = {\"tt\", \"aa\", \"gg\", \"zz\", \"dd\", \"ll\" };\n+            JComboBox<String> comboBox = new JComboBox<String>(items);\n+\n+            tbl = new JTable();\n+            JScrollPane panel = new JScrollPane(tbl);\n+            TableModel tm = createTableModel();\n+            tbl.setModel(tm);\n+            tbl.setRowHeight(20);\n+            tbl.getColumnModel().getColumn(1).setCellEditor(\n+                new DefaultCellEditor(comboBox));\n+\n+            comboBox.addPopupMenuListener(new PopupMenuListener() {\n+                public void popupMenuWillBecomeVisible(PopupMenuEvent e) {\n+                    passed = true;\n+                }\n+\n+                public void popupMenuWillBecomeInvisible(PopupMenuEvent e) {}\n+                public void popupMenuCanceled(PopupMenuEvent e) {}\n+            });\n+\n+            mainFrame.setLayout(new BorderLayout());\n+            mainFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n+            mainFrame.add(panel, BorderLayout.CENTER);\n+            mainFrame.pack();\n+            mainFrame.setLocationRelativeTo(null);\n+            mainFrame.setVisible(true);\n+        }\n+    }\n+\n+    public void test() throws Exception {\n+        Robot robo = new Robot();\n+        robo.setAutoDelay(50);\n+        robo.delay(1000);\n+        tbl.editCellAt(0,0);\n+\n+        robo.keyPress(KeyEvent.VK_TAB);\n+        robo.keyRelease(KeyEvent.VK_TAB);\n+\n+        robo.keyPress(KeyEvent.VK_TAB);\n+        robo.keyRelease(KeyEvent.VK_TAB);\n+\n+        robo.keyPress(KeyEvent.VK_F2);\n+        robo.keyRelease(KeyEvent.VK_F2);\n+\n+        robo.keyPress(KeyEvent.VK_DOWN);\n+        robo.keyRelease(KeyEvent.VK_DOWN);\n+\n+        robo.keyPress(KeyEvent.VK_ENTER);\n+        robo.keyRelease(KeyEvent.VK_ENTER);\n+\n+        robo.delay(1000);\n+\n+        if (!passed) {\n+            throw new RuntimeException(\"Popup was not shown after VK_DOWN press. Test failed.\");\n+        }\n+    }\n+\n+    private TableModel createTableModel() {\n+        Vector<String> hdr = new Vector<String>();\n+        hdr.add(\"One\");\n+        hdr.add(\"Two\");\n+        Vector<Vector> data = new Vector<Vector>();\n+        Vector<String> row = new Vector<String>();\n+        row.add(\"tt\");\n+        row.add(\"dd\");\n+        data.add(row);\n+        row = new Vector<String>();\n+        row.add(\"ll\");\n+        row.add(\"jj\");\n+        data.add(row);\n+        return new DefaultTableModel(data, hdr);\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JComboBox\/bug4890345.java","additions":154,"deletions":0,"binary":false,"changes":154,"status":"added"},{"patch":"@@ -0,0 +1,94 @@\n+\/*\n+ * Copyright (c) 2004, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+   @test\n+   @bug 4996503\n+   @summary REGRESSION: NotSerializableException: javax.swing.plaf.basic.BasicComboPopup+1\n+   @key headful\n+*\/\n+\n+import java.io.ByteArrayOutputStream;\n+import java.io.ObjectOutputStream;\n+import java.io.IOException;\n+import java.awt.Dimension;\n+import java.awt.Point;\n+import java.awt.Robot;\n+import java.awt.event.KeyEvent;\n+import java.awt.event.InputEvent;\n+import javax.swing.JComboBox;\n+import javax.swing.JFrame;\n+import javax.swing.SwingUtilities;\n+\n+public class bug4996503 {\n+\n+    static volatile JFrame frame = null;\n+    static volatile JComboBox<String> comboBox = null;\n+\n+    public static void main(String[] args) throws Exception {\n+        try {\n+            SwingUtilities.invokeAndWait(() -> {\n+                frame = new JFrame(\"bug4996503\");\n+                String[] items = { \"item0\", \"item1\", \"item2\" };\n+                comboBox = new JComboBox<String>(items);\n+                frame.add(comboBox);\n+                frame.pack();\n+                frame.validate();\n+                frame.setLocationRelativeTo(null);\n+                frame.setVisible(true);\n+            });\n+\n+            Robot robot = new Robot();\n+            robot.setAutoDelay(50);\n+            robot.delay(1000);\n+            Point p = comboBox.getLocationOnScreen();\n+            Dimension size = comboBox.getSize();\n+            p.x += size.width \/ 2;\n+            p.y += size.height \/ 2;\n+            robot.mouseMove(p.x, p.y);\n+            robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+            robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+            robot.keyPress(KeyEvent.VK_ENTER);\n+            robot.keyRelease(KeyEvent.VK_ENTER);\n+\n+            ObjectOutputStream out = null;\n+\n+            ByteArrayOutputStream byteStream = new ByteArrayOutputStream();\n+            try {\n+                out = new ObjectOutputStream(byteStream);\n+            } catch (IOException e) {}\n+            if (out != null) {\n+                try {\n+                    out.writeObject(comboBox);\n+                } catch (Exception e) {\n+                    System.out.println(e);\n+                    throw new Error(\"Serialization exception. Test failed.\");\n+                }\n+            }\n+        } finally {\n+            if (frame != null) {\n+                 SwingUtilities.invokeAndWait(frame::dispose);\n+            }\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JComboBox\/bug4996503.java","additions":94,"deletions":0,"binary":false,"changes":94,"status":"added"}]}