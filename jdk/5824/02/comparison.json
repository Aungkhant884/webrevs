{"files":[{"patch":"@@ -171,1 +171,1 @@\n-            return super.readAllBytes();\n+            return super.readNBytes(len);\n","filename":"src\/java.base\/share\/classes\/sun\/nio\/ch\/ChannelInputStream.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 8268435\n+ * @bug 8268435 8274780\n@@ -32,1 +32,1 @@\n- * @run testng\/othervm -Xmx8G ReadXBytes\n+ * @run testng\/othervm\/timeout=900 -Xmx8G ReadXBytes\n@@ -37,0 +37,1 @@\n+import java.io.FilterInputStream;\n@@ -40,0 +41,1 @@\n+import java.nio.channels.Channel;\n@@ -42,0 +44,2 @@\n+import java.nio.channels.ReadableByteChannel;\n+import java.nio.channels.SeekableByteChannel;\n@@ -45,0 +49,1 @@\n+import java.util.List;\n@@ -54,0 +59,1 @@\n+import static org.testng.Assert.assertFalse;\n@@ -132,4 +138,16 @@\n-        try (FileInputStream fis = new FileInputStream(file.toFile());\n-             FileChannel fc = FileChannel.open(file, READ);\n-             InputStream cis = Channels.newInputStream(fc)) {\n-            f.test(length, cis, fis);\n+        try {\n+            for (boolean seekable : List.of(false, true)) {\n+                try (FileInputStream fis = new FileInputStream(file.toFile())) {\n+                    ReadableByteChannel ch;\n+                    if (seekable) {\n+                        ch = FileChannel.open(file, READ);\n+                    } else {\n+                        InputStream fis2 = new FileInputStream(file.toFile());\n+                        ch = Channels.newChannel(new FilterInputStream(fis2) {});\n+                        assertFalse(ch instanceof SeekableByteChannel);\n+                    }\n+                    try (InputStream cis = Channels.newInputStream(ch)) {\n+                        f.test(length, cis, fis);\n+                    }\n+                }\n+            }\n","filename":"test\/jdk\/java\/nio\/channels\/Channels\/ReadXBytes.java","additions":24,"deletions":6,"binary":false,"changes":30,"status":"modified"}]}