{"files":[{"patch":"@@ -2993,2 +2993,1 @@\n-        _ref_processor_stw->enable_discovery();\n-        _ref_processor_stw->setup_policy(false);\n+        _ref_processor_stw->start_discovery(false \/* always_clear *\/);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -719,3 +719,1 @@\n-  \/\/ enable (\"weak\") refs discovery\n-  rp->enable_discovery();\n-  rp->setup_policy(false); \/\/ snapshot the soft ref policy to be used in this cycle\n+  rp->start_discovery(false \/* always_clear *\/);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentMark.cpp","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -185,2 +185,1 @@\n-  reference_processor()->enable_discovery();\n-  reference_processor()->setup_policy(scope()->should_clear_soft_refs());\n+  reference_processor()->start_discovery(scope()->should_clear_soft_refs());\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullCollector.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1789,4 +1789,1 @@\n-    ref_processor()->enable_discovery();\n-    ref_processor()->setup_policy(maximum_heap_compaction);\n-\n-    bool marked_for_unloading = false;\n+    ref_processor()->start_discovery(maximum_heap_compaction);\n","filename":"src\/hotspot\/share\/gc\/parallel\/psParallelCompact.cpp","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -451,2 +451,1 @@\n-    reference_processor()->enable_discovery();\n-    reference_processor()->setup_policy(false);\n+    reference_processor()->start_discovery(false \/* always_clear *\/);\n","filename":"src\/hotspot\/share\/gc\/parallel\/psScavenge.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -481,2 +481,1 @@\n-    rp->enable_discovery();\n-    rp->setup_policy(clear_soft_refs);\n+    rp->start_discovery(clear_soft_refs);\n@@ -486,1 +485,0 @@\n-    rp->disable_discovery();\n","filename":"src\/hotspot\/share\/gc\/shared\/genCollectedHeap.cpp","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -288,0 +288,6 @@\n+\n+  void setup_policy(bool always_clear) {\n+    _current_soft_ref_policy = always_clear ?\n+                               _always_clear_soft_ref_policy : _default_soft_ref_policy;\n+    _current_soft_ref_policy->setup();   \/\/ snapshot the policy threshold\n+  }\n@@ -295,5 +301,3 @@\n-  ReferencePolicy* setup_policy(bool always_clear) {\n-    _current_soft_ref_policy = always_clear ?\n-      _always_clear_soft_ref_policy : _default_soft_ref_policy;\n-    _current_soft_ref_policy->setup();   \/\/ snapshot the policy threshold\n-    return _current_soft_ref_policy;\n+  void start_discovery(bool always_clear) {\n+    enable_discovery();\n+    setup_policy(always_clear);\n","filename":"src\/hotspot\/share\/gc\/shared\/referenceProcessor.hpp","additions":9,"deletions":5,"binary":false,"changes":14,"status":"modified"}]}