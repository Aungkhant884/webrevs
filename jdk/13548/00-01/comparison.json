{"files":[{"patch":"@@ -44,1 +44,1 @@\n- * TEST #2: Verifies that stop() works when suspended at a breakpoint.\n+ * TEST #2: Verify that stop() works when suspended at a breakpoint.\n@@ -179,1 +179,2 @@\n-             * Test #3: verify that stop() works when not suspended in a loop.\n+             * Test #3: verify that stop() works when not suspended in a loop. Expect\n+             * IllegalThreadStateException for virtual threads.\n@@ -217,6 +218,1 @@\n-                if (vthreadMode && objRef == null) {\n-                    log.complain(\"TEST #4 FAILED: expected OpaqueFrameException was not thrown\");\n-                    tot_res = Consts.TEST_FAILED;\n-                } else {\n-                    log.display(\"TEST #4 PASSED: stop() call succeeded.\");\n-                }\n+                log.display(\"TEST #4 PASSED: stop() call succeeded.\");\n@@ -224,7 +220,3 @@\n-                if (vthreadMode && ue instanceof OpaqueFrameException) {\n-                    log.display(\"TEST #4 PASSED: stop() call threw OpaqueFrameException for virtual thread.\");\n-                } else {\n-                    ue.printStackTrace();\n-                    log.complain(\"TEST #4 FAILED: caught unexpected \" + ue);\n-                    tot_res = Consts.TEST_FAILED;\n-                }\n+                ue.printStackTrace();\n+                log.complain(\"TEST #4 FAILED: caught unexpected \" + ue);\n+                tot_res = Consts.TEST_FAILED;\n@@ -242,1 +234,2 @@\n-             * Test #5: verify that stop() works when suspended in Thread.sleep()\n+             * Test #5: verify that stop() works when suspended in Thread.sleep(). Expect\n+             * OpaqueFrameException for virtual threads.\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ThreadReference\/stop\/stop002.java","additions":9,"deletions":16,"binary":false,"changes":25,"status":"modified"}]}