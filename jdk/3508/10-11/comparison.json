{"files":[{"patch":"@@ -102,0 +102,1 @@\n+- `-TestCompilationTimeout=20`: Change the default waiting time (default: 10s) for a compilation of a normal `@Test` annotated method.\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/README.md","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -136,0 +136,2 @@\n+    \/\/ Only used for internal testing and should not be used for normal user testing.\n+    private static final boolean SKIP_WHITEBOX_INSTALL = Boolean.getBoolean(\"SkipWhiteBoxInstall\");\n@@ -312,1 +314,3 @@\n-        installWhiteBox();\n+        if (!SKIP_WHITEBOX_INSTALL) {\n+            installWhiteBox();\n+        }\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/TestFramework.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -132,0 +132,1 @@\n+        int lastCompilationLevel = -10;\n@@ -152,1 +153,2 @@\n-            if (WHITE_BOX.getMethodCompilationLevel(testMethod, false) == test.getCompLevel().getValue()) {\n+            lastCompilationLevel = WHITE_BOX.getMethodCompilationLevel(testMethod, false);\n+            if (lastCompilationLevel == test.getCompLevel().getValue()) {\n@@ -158,1 +160,2 @@\n-                      \"Could not compile \" + testMethod + \" after \" + TEST_COMPILATION_TIMEOUT\/1000 + \"s\");\n+                      \"Could not compile \" + testMethod + \" at level \" + test.getCompLevel() + \" after \"\n+                      + TEST_COMPILATION_TIMEOUT\/1000 + \"s. Last compilation level: \" + lastCompilationLevel);\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/test\/AbstractTest.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n- *          This test runs directly the test VM which normally does not happen.\n+ *          This test partly runs directly the test VM which normally does and should not happen in user tests.\n@@ -38,2 +38,2 @@\n- * @run main\/othervm -Xbootclasspath\/a:. -XX:+IgnoreUnrecognizedVMOptions -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI\n- *                   compiler.lib.ir_framework.TestCompLevels\n+ * @run main\/othervm -Xbootclasspath\/a:. -DSkipWhiteBoxInstall=true -XX:+IgnoreUnrecognizedVMOptions -XX:+UnlockDiagnosticVMOptions\n+ *                   -XX:+WhiteBoxAPI compiler.lib.ir_framework.TestCompLevels\n@@ -49,0 +49,1 @@\n+\n","filename":"test\/hotspot\/jtreg\/testlibrary_tests\/compiler\/lib\/ir_framework\/TestCompLevels.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n- *          This test runs directly the test VM which normally does not happen.\n+ *          This test partly runs directly the test VM which normally does and should not happen in user tests.\n@@ -42,2 +42,2 @@\n- * @run main\/othervm -Xbootclasspath\/a:. -XX:+IgnoreUnrecognizedVMOptions -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI\n- *                   compiler.lib.ir_framework.TestControls\n+ * @run main\/othervm -Xbootclasspath\/a:. -DSkipWhiteBoxInstall=true -XX:+IgnoreUnrecognizedVMOptions -XX:+UnlockDiagnosticVMOptions\n+ *                   -XX:+WhiteBoxAPI compiler.lib.ir_framework.TestControls\n","filename":"test\/hotspot\/jtreg\/testlibrary_tests\/compiler\/lib\/ir_framework\/TestControls.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}