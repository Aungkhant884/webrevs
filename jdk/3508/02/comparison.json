{"files":[{"patch":"@@ -0,0 +1,131 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.test.lib.hotspot.ir_framework;\n+\n+import jdk.test.lib.Utils;\n+\n+import java.lang.reflect.Method;\n+import java.util.Arrays;\n+import java.util.Random;\n+import java.util.stream.Collectors;\n+\n+\/**\n+ * Base info class which provides some useful utility methods and information about a test.\n+ * <p>\n+ * <b>Base tests<\/b> and <b>checked tests<\/b> use {@link TestInfo} while <b>custom run tests<\/b> use {@link RunInfo}.\n+ *\n+ * @see Test\n+ * @see Check\n+ * @see Run\n+ *\/\n+abstract public class AbstractInfo {\n+    private static final Random random = Utils.getRandomInstance();\n+\n+    protected final Class<?> testClass;\n+    private boolean toggleBool = false;\n+    private boolean onWarmUp = true;\n+\n+    AbstractInfo(Class<?> testClass) {\n+        this.testClass = testClass;\n+    }\n+\n+    \/**\n+     * Returns a different boolean each time this method is invoked (switching between {@code false} and {@code true}).\n+     * The first invocation returns {@code false}.\n+     *\n+     * @return an inverted boolean of the result of the last invocation of this method.\n+     *\/\n+    public boolean toggleBoolean() {\n+        toggleBool = !toggleBool;\n+        return toggleBool;\n+    }\n+\n+    \/**\n+     * Get the initialized {@link Random} object.\n+     *\n+     * @return the random object.\n+     *\/\n+    public Random getRandom() {\n+        return random;\n+    }\n+\n+    \/**\n+     * Returns a boolean indicating if the framework is currently warming up the associated test.\n+     *\n+     * @return the warm-up status of the associated test.\n+     *\n+     * @see Warmup\n+     *\/\n+    public boolean isWarmUp() {\n+        return onWarmUp;\n+    }\n+\n+    \/**\n+     * Get the method object of the method {@code name} of class {@code c} with arguments {@code args}.\n+     *\n+     * @param c    the class containing the method.\n+     * @param name the name of the method.\n+     * @param args the arguments of the method, leave empty if no arguments.\n+     *\n+     * @return the method object of the requested method.\n+     *\/\n+    public Method getMethod(Class<?> c, String name, Class<?>... args) {\n+        try {\n+            return c.getMethod(name, args);\n+        } catch (NoSuchMethodException e) {\n+            String parameters = args == null || args.length == 0 ? \"\" :\n+                    \" with arguments [\" + Arrays.stream(args).map(Class::getName).collect(Collectors.joining(\",\")) + \"]\";\n+            throw new TestRunException(\"Could not find method \" + name + \" in \" + c + parameters);\n+        }\n+    }\n+\n+    \/**\n+     * Get the method object of the method {@code name} of the test class with arguments {@code args}.\n+     *\n+     * @param name the name of the method in the test class.\n+     * @param args the arguments of the method, leave empty if no arguments.\n+     *\n+     * @return the method object of the requested method in the test class.\n+     *\/\n+    public Method getTestClassMethod(String name, Class<?>... args) {\n+        return getMethod(testClass, name, args);\n+    }\n+\n+    \/**\n+     * Returns a boolean indicating if the test VM runs with flags that allow C2 compilations.\n+     *\n+     * @return {@code true} if C2 compilations are allowed;\n+     *         {@code false} otherwise (run with {@code -XX:TieredStopAtLevel={1,2,3}, -XX:-UseCompiler}).\n+     *\/\n+    public boolean isC2CompilationEnabled() {\n+        return TestFrameworkExecution.USE_COMPILER && !TestFrameworkExecution.TEST_C1;\n+    }\n+\n+    \/**\n+     * Called by framework when the warm-up is finished. Not exposed to users.\n+     *\/\n+    void setWarmUpFinished() {\n+        onWarmUp = false;\n+    }\n+}\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/AbstractInfo.java","additions":131,"deletions":0,"binary":false,"changes":131,"status":"added"},{"patch":"@@ -0,0 +1,82 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.test.lib.hotspot.ir_framework;\n+\n+\/**\n+ * Well-defined argument values that can be used in the {@link Arguments} annotation at a {@link Test} method for a\n+ * <b>base test<\/b> or a <b>checked test<\/b>.\n+ *\n+ * @see Arguments\n+ * @see Test\n+ * @see Check\n+ *\/\n+public enum Argument {\n+\n+    \/**\n+     * Provides the default value for any kind of primitive type and object type if the class provides a default constructor.\n+     *\/\n+    DEFAULT,\n+    \/**\n+     * Provides the number 42 for any primitive number type.\n+     *\/\n+    NUMBER_42,\n+    \/**\n+     * Provides the number -42 for any primitive number type.\n+     *\/\n+    NUMBER_MINUS_42,\n+    \/**\n+     * Provides the minimum value of the specified primitive number type.\n+     *\/\n+    MIN,\n+    \/**\n+     * Provides the maximum value of the specified primitive number type.\n+     *\/\n+    MAX,\n+    \/**\n+     * Provides the boolean value false.\n+     *\/\n+    FALSE,\n+    \/**\n+     * Provides the boolean value true.\n+     *\/\n+    TRUE,\n+    \/**\n+     * Provides a different boolean value on each test invocation, starting with false.\n+     *\/\n+    BOOLEAN_TOGGLE_FIRST_FALSE,\n+    \/**\n+     * Provides a different boolean value on each test invocation, starting with true.\n+     *\/\n+    BOOLEAN_TOGGLE_FIRST_TRUE,\n+    \/**\n+     * Provides a random primitive value on the first test invocation and reuses the same value for all invocation of the test.\n+     * Float and double values are restricted to the range [-10000,10000].\n+     *\/\n+    RANDOM_ONCE,\n+    \/**\n+     * Provides a different random primitive value on each test invocation.\n+     * Float and double values are restricted to the range [-10000,10000].\n+     *\/\n+    RANDOM_EACH\n+}\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/Argument.java","additions":82,"deletions":0,"binary":false,"changes":82,"status":"added"},{"patch":"@@ -0,0 +1,328 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.test.lib.hotspot.ir_framework;\n+\n+import jdk.test.lib.Utils;\n+\n+import java.lang.reflect.Constructor;\n+import java.lang.reflect.Method;\n+import java.lang.reflect.Parameter;\n+import java.util.Random;\n+\n+\/**\n+ * This class represents an argument value specified by {@link Argument} in {@link Arguments}.\n+ *\/\n+class ArgumentValue {\n+    private static final Random random = Utils.getRandomInstance();\n+\n+    private final Object argumentValue;\n+    private final boolean isRandomEach;\n+    private final boolean isFixedRandom;\n+    private final Class<?> randomClass;\n+\n+    ArgumentValue() {\n+        this.argumentValue = null;\n+        this.isRandomEach = false;\n+        this.randomClass = null;\n+        this.isFixedRandom = false;\n+    }\n+\n+    private ArgumentValue(Object argumentValue, boolean isFixedRandom) {\n+        this.argumentValue = argumentValue;\n+        this.isRandomEach = false;\n+        this.randomClass = null;\n+        this.isFixedRandom = isFixedRandom;\n+    }\n+\n+    private ArgumentValue(Object argumentValue, Class<?> randomClass) {\n+        this.argumentValue = argumentValue;\n+        this.isRandomEach = true;\n+        this.randomClass = randomClass;\n+        this.isFixedRandom = false;\n+    }\n+\n+    \/**\n+     * Return all arguments for the @Arguments annotation.\n+     *\n+     * @param m The @Test method.\n+     * @return Returns an array with Argument objects for each specified argument in the @Arguments annotation of m.\n+     *         Returns null if method has no @Arguments annotation.\n+     *\/\n+    public static ArgumentValue[] getArguments(Method m) {\n+        Arguments argumentsAnno = m.getAnnotation(Arguments.class);\n+        if (argumentsAnno == null) {\n+            return null;\n+        }\n+        Argument[] values = argumentsAnno.value();\n+        ArgumentValue[] arguments = new ArgumentValue[values.length];\n+        Class<?>[] declaredParameters = m.getParameterTypes();\n+        Parameter[] declaredParameterObjects = m.getParameters();\n+        try {\n+            TestFormat.check(values.length == declaredParameters.length,\n+                             \"Number of argument values provided in @Arguments does not match the number \" +\n+                             \"of actual arguments in \" + m);\n+\n+            for (int i = 0; i < values.length; i++) {\n+                Argument specifiedArg = values[i];\n+                Class<?> parameter = declaredParameters[i];\n+                Parameter parameterObj = declaredParameterObjects[i];\n+                try {\n+                    switch (specifiedArg) {\n+                        case DEFAULT -> {\n+                            try {\n+                                arguments[i] = createDefault(parameter);\n+                            } catch (NoSuchMethodException e) {\n+                                TestFormat.fail(\"Cannot create new default instance of \" + parameter\n+                                                + \" for \" + m + \" due to missing default constructor\");\n+                            } catch (Exception e) {\n+                                TestFormat.fail(\"Cannot create new default instance of \" + parameter\n+                                                + \" for \" + m + \": \" + e.getCause());\n+                            }\n+                        }\n+                        case NUMBER_42 -> {\n+                            TestFormat.check(isNumber(parameter), \"Provided invalid NUMBER_42 argument \" +\n+                                                                  \"for non-number \" + parameterObj + \" for \" + m);\n+                            arguments[i] = create((byte) 42);\n+                        }\n+                        case NUMBER_MINUS_42 -> {\n+                            TestFormat.check(isNumber(parameter), \"Provided invalid NUMBER_MINUS_42 argument \" +\n+                                                                  \"for non-number \" + parameterObj + \" for \" + m);\n+                            arguments[i] = create((byte) -42);\n+                        }\n+                        case MIN -> {\n+                            TestFormat.check(isNumber(parameter) || isChar(parameter),\n+                                             \"Provided invalid MIN argument for non-number \"\n+                                             + parameterObj + \" for \" + m);\n+                            arguments[i] = createMin(parameter);\n+                        }\n+                        case MAX -> {\n+                            TestFormat.check(isNumber(parameter) || isChar(parameter),\n+                                             \"Provided invalid MAX argument for non-number \"\n+                                             + parameterObj + \" for \" + m);\n+                            arguments[i] = createMax(parameter);\n+                        }\n+                        case FALSE -> {\n+                            TestFormat.check(ArgumentValue.isBoolean(parameter),\n+                                             \"Provided invalid FALSE argument for non-boolean \"\n+                                             + parameterObj + \" for \" + m);\n+                            arguments[i] = create(false);\n+                        }\n+                        case TRUE -> {\n+                            TestFormat.check(ArgumentValue.isBoolean(parameter),\n+                                             \"Provided invalid TRUE argument for non-boolean \"\n+                                             + parameterObj + \" for \" + m);\n+                            arguments[i] = create(true);\n+                        }\n+                        case BOOLEAN_TOGGLE_FIRST_FALSE -> {\n+                            TestFormat.check(isBoolean(parameter),\n+                                             \"Provided invalid BOOLEAN_TOGGLE_FIRST_FALSE argument for non-boolean \"\n+                                             + parameterObj + \" for \" + m);\n+                            arguments[i] = BooleanToggleValue.create(false);\n+                        }\n+                        case BOOLEAN_TOGGLE_FIRST_TRUE -> {\n+                            TestFormat.check(ArgumentValue.isBoolean(parameter),\n+                                             \"Provided invalid BOOLEAN_TOGGLE_FIRST_TRUE argument for non-boolean \"\n+                                             + parameterObj + \" for \" + m);\n+                            arguments[i] = BooleanToggleValue.create(true);\n+                        }\n+                        case RANDOM_ONCE -> {\n+                            TestFormat.check(isPrimitiveType(parameter),\n+                                             \"Provided invalid RANDOM_ONCE argument for non-primitive type \"\n+                                             + parameterObj + \" for \" + m);\n+                            arguments[i] = createRandom(parameter);\n+                        }\n+                        case RANDOM_EACH -> {\n+                            TestFormat.check(isPrimitiveType(parameter),\n+                                             \"Provided invalid RANDOM_EACH argument for non-primitive type \"\n+                                             + parameterObj + \" for \" + m);\n+                            arguments[i] = createRandomEach(parameter);\n+                        }\n+                    }\n+                } catch (TestFormatException e) {\n+                    \/\/ Catch and continue to check arguments.\n+                }\n+            }\n+        } catch (TestFormatException e) {\n+            \/\/ Catch and return empty array to check for additional failures.\n+            return new ArgumentValue[0];\n+        }\n+        return arguments;\n+    }\n+\n+    private static ArgumentValue create(Object argumentValue) {\n+        return new ArgumentValue(argumentValue, false);\n+    }\n+\n+    private static ArgumentValue createDefault(Class<?> c) throws Exception {\n+        if (ArgumentValue.isNumber(c)) {\n+            return ArgumentValue.create((byte)0);\n+        } else if (ArgumentValue.isChar(c)) {\n+            return ArgumentValue.create('\\u0000');\n+        } else if (ArgumentValue.isBoolean(c)) {\n+            return ArgumentValue.create(false);\n+        } else {\n+            \/\/ Object\n+            Constructor<?> constructor = c.getDeclaredConstructor();\n+            constructor.setAccessible(true); \/\/ Make sure to have access to private default constructor\n+            return ArgumentValue.create(constructor.newInstance());\n+        }\n+    }\n+\n+    private static ArgumentValue createMin(Class<?> c) {\n+        Object argument;\n+        if (c.equals(byte.class)) {\n+            argument = Byte.MIN_VALUE;\n+        } else if (isChar(c)) {\n+            argument = Character.MIN_VALUE;\n+        }  else if (c.equals(short.class)) {\n+            argument = Short.MIN_VALUE;\n+        } else if (c.equals(int.class)) {\n+            argument = Integer.MIN_VALUE;\n+        } else if (c.equals(long.class)) {\n+            argument = Long.MIN_VALUE;\n+        } else if (c.equals(float.class)) {\n+            argument = Float.MIN_VALUE;\n+        } else if (c.equals(double.class)) {\n+            argument = Double.MIN_VALUE;\n+        } else {\n+            throw new TestFrameworkException(\"Invalid class passed to createMin()\");\n+        }\n+        return new ArgumentValue(argument, false);\n+    }\n+\n+    private static ArgumentValue createMax(Class<?> c) {\n+        Object argument;\n+        if (c.equals(byte.class)) {\n+            argument = Byte.MAX_VALUE;\n+        } else if (isChar(c)) {\n+            argument = Character.MAX_VALUE;\n+        }  else if (c.equals(short.class)) {\n+            argument = Short.MAX_VALUE;\n+        } else if (c.equals(int.class)) {\n+            argument = Integer.MAX_VALUE;\n+        } else if (c.equals(long.class)) {\n+            argument = Long.MAX_VALUE;\n+        } else if (c.equals(float.class)) {\n+            argument = Float.MAX_VALUE;\n+        } else if (c.equals(double.class)) {\n+            argument = Double.MAX_VALUE;\n+        } else {\n+            throw new TestFrameworkException(\"Invalid class passed to createMax()\");\n+        }\n+        return new ArgumentValue(argument, false);\n+    }\n+\n+    private static ArgumentValue createRandom(Class<?> c) {\n+        return new ArgumentValue(getRandom(c), true);\n+    }\n+\n+    private static ArgumentValue createRandomEach(Class<?> c) {\n+        return new ArgumentValue(null, c);\n+    }\n+\n+    public boolean isFixedRandom() {\n+        return isFixedRandom;\n+    }\n+\n+    public Object getArgument() {\n+        if (isRandomEach) {\n+            return getRandom(randomClass);\n+        } else {\n+            return argumentValue;\n+        }\n+    }\n+\n+    private static boolean isPrimitiveType(Class<?> c) {\n+        return isNumber(c) || isBoolean(c) || isChar(c);\n+    }\n+\n+    private static boolean isBoolean(Class<?> c) {\n+        return c.equals(boolean.class);\n+    }\n+\n+    private static boolean isChar(Class<?> c) {\n+        return c.equals(char.class);\n+    }\n+\n+    private static boolean isNumber(Class<?> c) {\n+        return isIntNumber(c) || isFloatNumber(c);\n+    }\n+\n+    private static boolean isIntNumber(Class<?> c) {\n+        return c.equals(byte.class)\n+                || c.equals(short.class)\n+                || c.equals(int.class)\n+                || c.equals(long.class);\n+    }\n+\n+    private static boolean isFloatNumber(Class<?> c) {\n+        return c.equals(float.class) || c.equals(double.class);\n+    }\n+\n+    private static Object getRandom(Class<?> c) {\n+        if (isBoolean(c)) {\n+            return random.nextBoolean();\n+        } else if (c.equals(byte.class)) {\n+            return (byte)random.nextInt(256);\n+        } else if (isChar(c)) {\n+            return (char)random.nextInt(65536);\n+        }  else if (c.equals(short.class)) {\n+            return (short)random.nextInt(65536);\n+        } else if (c.equals(int.class)) {\n+            return random.nextInt();\n+        } else if (c.equals(long.class)) {\n+            return random.nextLong();\n+        } else if (c.equals(float.class)) {\n+            \/\/ Get float between -10000 and 10000.\n+            return random.nextFloat() * 20000 - 10000;\n+        } else if (c.equals(double.class)) {\n+            \/\/ Get double between -10000 and 10000.\n+            return random.nextDouble() * 20000 - 10000;\n+        } else {\n+            TestFormat.fail(\"Cannot generate random value for non-primitive type\");\n+            return null;\n+        }\n+    }\n+}\n+\n+\/**\n+ * Special class to handle boolean toggle argument values.\n+ *\/\n+class BooleanToggleValue extends ArgumentValue {\n+    private boolean previousBoolean;\n+\n+    BooleanToggleValue(boolean firstBoolean) {\n+        this.previousBoolean = !firstBoolean;\n+    }\n+\n+    @Override\n+    public Object getArgument() {\n+        previousBoolean = !previousBoolean;\n+        return previousBoolean;\n+    }\n+\n+    static BooleanToggleValue create(boolean firstBoolean) {\n+        return new BooleanToggleValue(firstBoolean);\n+    }\n+}\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/ArgumentValue.java","additions":328,"deletions":0,"binary":false,"changes":328,"status":"added"},{"patch":"@@ -0,0 +1,43 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.test.lib.hotspot.ir_framework;\n+\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+\n+\/**\n+ * This annotation is used to specify well-defined {@link Argument} values for test methods (specifying {@link Test}) when\n+ * used as part of a <b>base test<\/b> or <b>checked test<\/b>.\n+ *\n+ * @see Argument\n+ * @see Test\n+ * @see Check\n+ *\/\n+@Retention(RetentionPolicy.RUNTIME)\n+public @interface Arguments {\n+    \/**\n+     * Get the argument value.\n+     *\/\n+    Argument[] value();\n+}\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/Arguments.java","additions":43,"deletions":0,"binary":false,"changes":43,"status":"added"},{"patch":"@@ -0,0 +1,113 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.test.lib.hotspot.ir_framework;\n+\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+\n+\/**\n+ * Annotation for a check method of a <b>checked test<\/b>.\n+ *\n+ * <p>\n+ * Let {@code t} be a test method specifying the {@link Test @Test} annotation and {@code c} be a check method specifying\n+ * the {@code @Check(test = \"t\")} annotation. These two methods represent a so-called <i>checked test<\/i>. The only\n+ * difference to a <i>base test<\/i> (see {@link Test}) is that the framework will invoke the check method {@code c}\n+ * directly after the invocation of the test method {@code t} which allows to do some additional verification,\n+ * including the return value of {@code t}. The framework does the following, similar as for <i>base tests<\/i>:\n+ * <ol>\n+ *     <li><p>The framework warms {@code t} up by invoking it for a predefined number of iterations (default: 2000)\n+ *            or any number specified by an additional {@link Warmup @Warmup} annotation at {@code t} or by using\n+ *            {@link TestFramework#setDefaultWarmup(int)} (could also be 0 which skips the warm-up completely which is\n+ *            similar to simulating {@code -Xcomp}). After each invocation of {@code t}, the framework also invokes\n+ *            {@code c} if the {@code @Check} annotation specifies {@link CheckAt#EACH_INVOCATION} at {@link #when()}.\n+ *            More information about the warm-up in general can be found at {@link Warmup}<\/li>\n+ *     <li><p>After the warm-up, the framework compiles {@code t} at the specified compilation level set by\n+ *            {@link Test#compLevel()} (default {@link CompLevel#ANY} will pick the highest available level which is\n+ *            usually {@link CompLevel#C2}).<\/li>\n+ *     <li><p>The framework invokes {@code t} one more time to run the compilation. Afterwards, the framework will\n+ *            always invoke {@code c} again to be able perform additional checks after the compilation of {@code t}.<\/li>\n+ *     <li><p>The framework checks any specified {@link IR @IR} constraints at the test method {@code t}.\n+ *            More information about IR matching can be found at {@link IR}.<\/li>\n+ * <\/ol>\n+ *\n+ * <p>\n+ * The test method {@code t} has the same properties and follows the same constraints as stated in {@link Test}.\n+ * <p>\n+ * The following additional constraints must be met for the test method {@code t} and check method {@code c}:\n+ * <ul>\n+ *     <li><p>{@code c} must specify the method name {@code t} as property in {@code @Check(test = \"t\")}\n+ *     (see {@link #test()}. Specifying a non-{@code @Test} annotated method or a {@code @Test} method that\n+ *     has already been used by another {@code @Check} or {@link Run @Run} method results in a {@link TestFormatException}.\n+ *     <li><p>{@code c} can specify the following method parameter combinations:\n+ *     <ul>\n+ *         <li><p>void<\/li>\n+ *         <li><p>One parameter: {@link TestInfo} which provides some information about {@code t} and utility methods.<\/li>\n+ *         <li><p>One parameter: the <i>exact<\/i> same type as the return value of {@code t}. When {@code c} is\n+ *                invoked by the framework, this parameter contains the return value of {@code t}.<\/li>\n+ *         <li><p>1st parameter: {@link TestInfo}; 2nd parameter: the <i>exact<\/i> same type as the return value of\n+ *                {@code t} (see above)<\/li>\n+ *         <li><p> Any other combination will result in a {@link TestFormatException}.\n+ *     <\/ul>\n+ *     <li><p>{@code c} is not compiled nor inlined.\n+ *     <li><p>{@code c} must be part of the test class. Using {@code @Check} in nested or other classes is not allowed.<\/li>\n+ *     <li><p>{@code c} cannot specify any helper-method-specific compile command annotations\n+ *            ({@link ForceCompile @ForceCompile}, {@link DontCompile @DontCompile}, {@link ForceInline @ForceInline},\n+ *            {@link DontInline @DontInline}).<\/li>\n+ * <\/ul>\n+ *\n+ * <p>\n+ * If no verification is required, use a <i>base test<\/i> (see {@link Test}). If {@code t} must be invoked with more\n+ * complex or varying arguments and\/or the {@code t} must be invoked differently in subsequent invocations, use a\n+ * <i>custom run test<\/i> (see {@link Run}).\n+ *\n+ * <p>\n+ * Examples on how to write checked tests can be found in {@link jdk.test.lib.hotspot.ir_framework.examples.CheckedTestExample}\n+ * and also as part of the internal testing in the package {@link jdk.test.lib.hotspot.ir_framework.tests}.\n+ *\n+ * @see Test\n+ * @see TestInfo\n+ * @see CheckAt\n+ *\/\n+@Retention(RetentionPolicy.RUNTIME)\n+public @interface Check {\n+\n+    \/**\n+     * The unique associated {@link Test} method for this {@code @Check} annotated check method. The framework will directly\n+     * invoke the {@code @Check} method after each invocation or only after the compilation of the associated {@code @Test}\n+     * method (depending on the value set with {@link #when()}).\n+     * <p>\n+     * If a non-{@code @Test} annotated method or a {@code @Test} method that has already been used by another\n+     * {@code @Check} or {@link Run} method is specified, then a {@link TestFormatException} is thrown.\n+     *\n+     * @see Test\n+     *\/\n+    String test();\n+    \/**\n+     * When should the {@code @Check} method be invoked? By default, the check is done after each invocation which is\n+     * encouraged if performance is not critical.\n+     *\n+     * @see CheckAt\n+     *\/\n+    CheckAt when() default CheckAt.EACH_INVOCATION;\n+}\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/Check.java","additions":113,"deletions":0,"binary":false,"changes":113,"status":"added"},{"patch":"@@ -0,0 +1,44 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.test.lib.hotspot.ir_framework;\n+\n+\/**\n+ * This enum is used in {@link Check#when()} of a <b>checked test<\/b> to specify when the framework will invoke the\n+ * check method after invoking the associated {@link Test} method.\n+ *\n+ * @see Check\n+ * @see Test\n+ *\/\n+public enum CheckAt {\n+\n+    \/**\n+     * Default: Invoke the {@link Check} method each time after invoking the associated {@link Test} method.\n+     *\/\n+    EACH_INVOCATION,\n+    \/**\n+     * Invoke the {@link Check} method only once after the warm-up of the associated {@link Test} method had been completed\n+     * and the framework has compiled the associated {@link Test} method.\n+     *\/\n+    COMPILED\n+}\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/CheckAt.java","additions":44,"deletions":0,"binary":false,"changes":44,"status":"added"},{"patch":"@@ -0,0 +1,34 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.test.lib.hotspot.ir_framework;\n+\n+\/**\n+ * Checked internal exceptions in the framework to propagate error handling.\n+ *\/\n+class CheckedTestFrameworkException extends Exception {\n+\n+    CheckedTestFrameworkException(String msg) {\n+        super(msg);\n+    }\n+}\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/CheckedTestFrameworkException.java","additions":34,"deletions":0,"binary":false,"changes":34,"status":"added"},{"patch":"@@ -0,0 +1,134 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.test.lib.hotspot.ir_framework;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+\/**\n+ * Compilation levels used by the framework. The compilation levels map to the used levels in HotSpot (apart from the\n+ * framework specific values {@link #SKIP} and {@link #WAIT_FOR_COMPILATION} that cannot be found in HotSpot).\n+ *\n+ * <p>\n+ * The compilation levels can be specified in the {@link Test}, {@link ForceCompile} and {@link DontCompile} annotation.\n+ *\n+ *\n+ * @see Test\n+ * @see ForceCompile\n+ * @see DontCompile\n+ *\/\n+public enum CompLevel {\n+\n+    \/**\n+     * Can only be used at {@link Test#compLevel()}. After the warm-up, the framework keeps invoking the test over a span\n+     * of 10s (configurable by setting the property flag {@code -DWaitForCompilationTimeout}) until HotSpot compiles the\n+     * {@link Test} method. If the method was not compiled after 10s, an exception is thrown. The framework does not wait\n+     * for the compilation if the test VM is run with {@code -Xcomp}, {@code -XX:-UseCompiler} or {@code -DStressCC=true}.\n+     *\/\n+    WAIT_FOR_COMPILATION(-4),\n+    \/**\n+     * Can only be used at {@link Test#compLevel()}. Skip a compilation of the {@link Test @Test} method completely.\n+     *\/\n+    SKIP(-3),\n+    \/**\n+     *  Use any compilation level depending on the usage:\n+     *  <ul>\n+     *      <li><p>{@link Test @Test}, {@link ForceCompile @ForceCompile}: Use the highest available compilation level\n+     *      which is usually C2.<\/li>\n+     *      <li><p>{@link DontCompile @DontCompile}: Prevents any compilation of the associated helper method.<\/li>\n+     *  <\/ul>\n+     *\/\n+    ANY(-2),\n+    \/**\n+     *  Compilation level 1: C1 compilation without any profile information.\n+     *\/\n+    C1(1),\n+    \/**\n+     *  Compilation level 2: C1 compilation with limited profile information: Includes Invocation and backedge counters.\n+     *\/\n+    C1_LIMITED_PROFILE(2),\n+    \/**\n+     *  Compilation level 3: C1 compilation with full profile information: Includes Invocation and backedge counters with MDO.\n+     *\/\n+    C1_FULL_PROFILE(3),\n+    \/**\n+     * Compilation level 4: C2 compilation with full optimizations.\n+     *\/\n+    C2(4);\n+\n+    private static final Map<Integer, CompLevel> typesByValue = new HashMap<>();\n+    private final int value;\n+\n+    static {\n+        for (CompLevel level : CompLevel.values()) {\n+            typesByValue.put(level.value, level);\n+        }\n+    }\n+\n+    CompLevel(int level) {\n+        this.value = level;\n+    }\n+\n+    \/**\n+     * Get the compilation level as integer value. These will match the levels specified in HotSpot (if available).\n+     *\n+     * @return the compilation level as integer.\n+     *\/\n+    public int getValue() {\n+        return value;\n+    }\n+\n+    \/**\n+     * Get the compilation level enum from the specified integer.\n+     *\n+     * @param value the compilation level as integer.\n+     * @throws TestRunException if {@code value} does not specify a valid compilation level.\n+     * @return the compilation level enum for {@code value}.\n+     *\/\n+    public static CompLevel forValue(int value) {\n+        CompLevel level = typesByValue.get(value);\n+        TestRun.check(level != null, \"Invalid compilation level \" + value);\n+        return level;\n+    }\n+\n+    \/**\n+     * Checks if two compilation levels are overlapping.\n+     *\/\n+    static boolean overlapping(CompLevel l1, CompLevel l2) {\n+        return l1.isC1() == l2.isC1() || (l1 == C2 && l2 == C2);\n+    }\n+\n+    static CompLevel join(CompLevel l1, CompLevel l2) {\n+        return switch (l1) {\n+            case ANY -> l2;\n+            case C1, C1_LIMITED_PROFILE, C1_FULL_PROFILE -> l2.isC1() || l2 == ANY ? C1 : SKIP;\n+            case C2 -> l2 == C2 || l2 == ANY ? C2 : SKIP;\n+            default -> SKIP;\n+        };\n+    }\n+\n+    private boolean isC1() {\n+        return this == C1 || this == C1_LIMITED_PROFILE || this == C1_FULL_PROFILE;\n+    }\n+}\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/CompLevel.java","additions":134,"deletions":0,"binary":false,"changes":134,"status":"added"},{"patch":"@@ -0,0 +1,122 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.test.lib.hotspot.ir_framework;\n+\n+import java.lang.reflect.Method;\n+import java.util.Arrays;\n+\n+\/**\n+ * This class represents a @Test method.\n+ *\/\n+class DeclaredTest {\n+    private final Method testMethod;\n+    private final ArgumentValue[] arguments;\n+    private final int warmupIterations;\n+    private final CompLevel compLevel;\n+    private Method attachedMethod;\n+\n+    public DeclaredTest(Method testMethod, ArgumentValue[] arguments, CompLevel compLevel, int warmupIterations) {\n+        \/\/ Make sure we can also call non-public or public methods in package private classes\n+        testMethod.setAccessible(true);\n+        this.testMethod = testMethod;\n+        this.compLevel = compLevel;\n+        this.arguments = arguments;\n+        this.warmupIterations = warmupIterations;\n+        this.attachedMethod = null;\n+    }\n+\n+    public Method getTestMethod() {\n+        return testMethod;\n+    }\n+\n+    public CompLevel getCompLevel() {\n+        return compLevel;\n+    }\n+\n+    public int getWarmupIterations() {\n+        return warmupIterations;\n+    }\n+\n+    public boolean hasArguments() {\n+        return arguments != null;\n+    }\n+\n+    public Object[] getArguments() {\n+        return Arrays.stream(arguments).map(ArgumentValue::getArgument).toArray();\n+    }\n+\n+    public void setAttachedMethod(Method m) {\n+        attachedMethod = m;\n+    }\n+\n+    public Method getAttachedMethod() {\n+        return attachedMethod;\n+    }\n+\n+    public void printFixedRandomArguments() {\n+        if (hasArguments()) {\n+            boolean hasRandomArgs = false;\n+            StringBuilder builder = new StringBuilder(\"Fixed random arguments for method \").append(testMethod).append(\": \");\n+            for (int i = 0; i < arguments.length; i++) {\n+                ArgumentValue argument = arguments[i];\n+                if (argument.isFixedRandom()) {\n+                    hasRandomArgs = true;\n+                    Object argumentVal = argument.getArgument();\n+                    String argumentValString = argumentVal.toString();\n+                    if (argumentVal instanceof Character) {\n+                        argumentValString += \" (\" + (int)(Character)argumentVal + \")\";\n+                    }\n+                    builder.append(\"arg \").append(i).append(\": \").append(argumentValString).append(\", \");\n+                }\n+            }\n+            if (hasRandomArgs) {\n+                \/\/ Drop the last comma and space.\n+                builder.setLength(builder.length() - 2);\n+                System.out.println(builder.toString());\n+            }\n+        }\n+    }\n+\n+    public String getArgumentsString() {\n+        if (hasArguments()) {\n+            StringBuilder builder = new StringBuilder();\n+            for (int i = 0; i < arguments.length; i++) {\n+                builder.append(\"arg \").append(i).append(\": \").append(arguments[i].getArgument()).append(\", \");\n+            }\n+            builder.setLength(builder.length() - 2);\n+            return builder.toString();\n+        } else {\n+            return \"<void>\";\n+        }\n+    }\n+\n+    public Object invoke(Object obj, Object... args) {\n+        try {\n+            return testMethod.invoke(obj, args);\n+        } catch (Exception e) {\n+            throw new TestRunException(\"There was an error while invoking @Test method \" + testMethod, e);\n+        }\n+    }\n+}\n+\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/DeclaredTest.java","additions":122,"deletions":0,"binary":false,"changes":122,"status":"added"},{"patch":"@@ -0,0 +1,49 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.test.lib.hotspot.ir_framework;\n+\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+\n+\/**\n+ * Prevent a compilation of the annotated <b>helper method<\/b> (not specifying {@link Test @Test},\n+ * {@link Check @Check} or {@link Run @Run}):\n+ *\n+ * <ul>\n+ *     <li><p>{@link CompLevel#ANY} (default): No C1 or C2 compilation.<\/li>\n+ *     <li><p>{@link CompLevel#C1}: No C1 compilation, C2 compilation still possible.<\/li>\n+ *     <li><p>{@link CompLevel#C2}: No C2 compilation, C1 compilation still possible.<\/li>\n+ *     <li><p>The usage of any other compilation level is forbidden and results in a\n+ *            {@link TestFormatException TestFormatException}.<\/li>\n+ * <\/ul>\n+ * <p>\n+ * Using this annotation on <i>non-helper methods<\/i> results in a {@link TestFormatException TestFormatException}.\n+ *\/\n+@Retention(RetentionPolicy.RUNTIME)\n+public @interface DontCompile {\n+    \/**\n+     * The excluded compilation level for the helper method.\n+     *\/\n+    CompLevel value() default CompLevel.ANY;\n+}\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/DontCompile.java","additions":49,"deletions":0,"binary":false,"changes":49,"status":"added"},{"patch":"@@ -0,0 +1,36 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.test.lib.hotspot.ir_framework;\n+\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+\n+\/**\n+ * Prevent an inlining of the annotated <b>helper method<\/b> (not specifying {@link Test @Test}, {@link Check @Check},\n+ * or {@link Run @Run}). <i>Non-helper methods<\/i> are never inlined. Explicitly using this annotation on\n+ * <i>non-helper methods<\/i> results in a {@link TestFormatException}.\n+ *\/\n+@Retention(RetentionPolicy.RUNTIME)\n+public @interface DontInline {\n+}\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/DontInline.java","additions":36,"deletions":0,"binary":false,"changes":36,"status":"added"},{"patch":"@@ -0,0 +1,55 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.test.lib.hotspot.ir_framework;\n+\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+\n+\/**\n+ * Force a compilation of the annotated <b>helper method<\/b> (not specifying {@link Test @Test},\n+ * {@link Check @Check} or {@link Test @Run}) immediately at the specified level:\n+ * <ul>\n+ *     <li><p>{@link CompLevel#ANY} (default): Highest available compilation level is selected which is usually\n+ *            {@link CompLevel#C2}<\/li>\n+ *     <li><p>{@link CompLevel#C1}: Level 1: C1 compilation without any profile information.<\/li>\n+ *     <li><p>{@link CompLevel#C1_LIMITED_PROFILE}: Level 2: C1 compilation with limited profile information:\n+ *            Includes Invocation and backedge counters.<\/li>\n+ *     <li><p>{@link CompLevel#C1_FULL_PROFILE}: Level 3: C1 compilation with full profile information:\n+ *            Includes Invocation and backedge counters with MDO.<\/li>\n+ *     <li><p>{@link CompLevel#C2}: Level 4: C2 compilation with full optimizations.<\/li>\n+ *     <li><p>{@link CompLevel#SKIP}: Does not apply to {@code @ForceCompile} and results in a\n+ *            {@link TestFormatException}.<\/li>\n+ *     <li><p>{@link CompLevel#WAIT_FOR_COMPILATION}: Does not apply to {@code @ForceCompile} and results in a\n+ *            {@link TestFormatException}.<\/li>\n+ * <\/ul>\n+ * <p>\n+ *  Using this annotation on <i>non-helper<\/i> methods results in a {@link TestFormatException}.\n+ *\/\n+@Retention(RetentionPolicy.RUNTIME)\n+public @interface ForceCompile {\n+    \/**\n+     * The compilation level to compile the helper method at.\n+     *\/\n+    CompLevel value() default CompLevel.ANY;\n+}\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/ForceCompile.java","additions":55,"deletions":0,"binary":false,"changes":55,"status":"added"},{"patch":"@@ -0,0 +1,55 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.test.lib.hotspot.ir_framework;\n+\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+\n+\/**\n+ * Force a compilation of the static class initializer method ({@code <clinit>}) of the annotated test or helper class\n+ * immediately at the specified level:\n+ * <ul>\n+ *     <li><p>{@link CompLevel#ANY} (default): Highest available compilation level is selected which is usually\n+ *            {@link CompLevel#C2}<\/li>\n+ *     <li><p>{@link CompLevel#C1}: Level 1: C1 compilation without any profile information.<\/li>\n+ *     <li><p>{@link CompLevel#C1_LIMITED_PROFILE}: Level 2: C1 compilation with limited profile information:\n+ *     Includes Invocation and backedge counters.<\/li>\n+ *     <li><p>{@link CompLevel#C1_FULL_PROFILE}: Level 3: C1 compilation with full profile information:\n+ *     Includes Invocation and backedge counters with MDO.<\/li>\n+ *     <li><p>{@link CompLevel#C2}: Level 4: C2 compilation with full optimizations.<\/li>\n+ *     <li><p>{@link CompLevel#SKIP}: Does not apply to {@code @ForceCompileClassInitializer} and results in a\n+ *     {@link TestFormatException}.<\/li>\n+ *     <li><p>{@link CompLevel#WAIT_FOR_COMPILATION}: Does not apply to {@code @ForceCompileClassInitializer} and results in a\n+ *     {@link TestFormatException}.<\/li>\n+ * <\/ul>\n+ * <p>\n+ *  Using this annotation on non-classes results in a {@link TestFormatException}.\n+ *\/\n+@Retention(RetentionPolicy.RUNTIME)\n+public @interface ForceCompileClassInitializer {\n+    \/**\n+     * The compilation level to compile the static class initializer method ({@code <clinit>}) at.\n+     *\/\n+    CompLevel value() default CompLevel.ANY;\n+}\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/ForceCompileClassInitializer.java","additions":55,"deletions":0,"binary":false,"changes":55,"status":"added"},{"patch":"@@ -0,0 +1,35 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.test.lib.hotspot.ir_framework;\n+\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+\n+\/**\n+ * Force an inlining of the annotated <b>helper method<\/b> (not specifying {@link Test @Test}, {@link Check @Check},\n+ * or {@link Test @Run}). Using this annotation on <i>non-helper methods<\/i> results in a {@link TestFormatException}.\n+ *\/\n+@Retention(RetentionPolicy.RUNTIME)\n+public @interface ForceInline {\n+}\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/ForceInline.java","additions":35,"deletions":0,"binary":false,"changes":35,"status":"added"},{"patch":"@@ -0,0 +1,143 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.test.lib.hotspot.ir_framework;\n+\n+import java.lang.annotation.Repeatable;\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+\n+\/**\n+ * This annotation is used to define a constraint\/rule\/check on the resulting IR of a test method (method with\n+ * {@link Test @Test} annotation). A test method can define multiple {@code @IR} rules.\n+ * <p>\n+ * There are two kinds of checks that can be specified:\n+ * <ul>\n+ *     <li><p>{@link #failOn()}: Specify a list of (node) regexes that should not be matched on the {@code PrintIdeal} or\n+ *            {@code PrintOptoAssembly} output.<\/li>\n+ *     <li><p>{@link #counts()}: Specify a list of ({@code regex,count}) pairs: The (node) {@code regex} should be matched\n+ *            for the specified amount in {@code count} on the {@code PrintIdeal} or {@code PrintOptoAssembly} output.<\/li>\n+ * <\/ul>\n+ * An IR rule must specify either or both of these two checks. If one or both of the checks fails, an\n+ * {@link IRViolationException} is thrown. A user can provide a custom regex string or specify any of the default node\n+ * regexes defined in {@link IRNode}.\n+ * <p>\n+ * Sometimes, the shape of the resulting IR is changed by commonly used VM flags in such a way that an IR rule no longer\n+ * applies. Generally, the framework does <b>not<\/b> apply any IR rules when any of the following flags are used:\n+ * {@code -Xint, -XX:-UseCompiler, -XX:TieredStopAtLevel={1,2,3}, -DExcludeRandom=true, -DFlipC1C2=true}.\n+ * Furthermore, a JTreg test could be run with additional VM and Javaoptions flags. The IR verification is <b>not<\/b>\n+ * performed in this case if any of these JTreg flags is used that is not part of the whitelist specified by\n+ * {@link TestFramework#JTREG_WHITELIST_FLAGS}.\n+ * <p>\n+ * For any other flag specified either by user code (e.g. {@link Scenario#Scenario(int, String...)},\n+ * {@link TestFramework#runWithFlags(String...) etc.} or as part of the JTreg whitelist, IR verification is applied.\n+ * To restrict the application of IR rules when certain flags are present that could change the IR, each {@code @IR}\n+ * annotation can specify additional preconditions on the allowed test VM flags that must hold when an IR rule is applied.\n+ * If the specified preconditions fail, then the framework does not apply the IR rule. These preconditions can be\n+ * set with {@link #applyIf()}, {@link #applyIfNot()}, {@link #applyIfAnd()}, or {@link #applyIfOr()}.\n+ * <p>\n+ * Examples on how to write tests with IR rules can be found in {@link jdk.test.lib.hotspot.ir_framework.examples.IRExample}\n+ * and also as part of the internal testing in {@link jdk.test.lib.hotspot.ir_framework.tests.TestIRMatching}.\n+ *\n+ * @see Test\n+ * @see IRNode\n+ *\/\n+@Retention(RetentionPolicy.RUNTIME)\n+@Repeatable(IRs.class)\n+public @interface IR {\n+\n+    \/**\n+     * Define a list of (node) regexes. If any of these regexes are matched on the PrintIdeal or PrintOptoAssembly, the\n+     * IR rule fails and an {@link IRViolationException} is thrown.\n+     *\/\n+    String[] failOn() default {};\n+\n+    \/**\n+     * Define a list of ((node) regexes,count) string pairs: A regex to be matched on the PrintIdeal or PrintOptoAssembly\n+     * is immediately followed by a number specifying how often the regex should be matched. The number can be proceeded\n+     * by comparators ({@code =, !=, <, <=, =>, >}) where the equality operator is optional (default if no comparator is\n+     * specified).\n+     * <p>\n+     * If any constraint on the number of regexes cannot be met, the IR rule fails and an\n+     * {@link IRViolationException} is thrown.\n+     *\/\n+    String[] counts() default {};\n+\n+    \/**\n+     * Define a single VM flag precondition which <i>must hold<\/i> when applying the IR rule. If the VM flag precondition\n+     * fails, then the IR rule is not applied. This is useful if a commonly used flag alters the IR in such a way that an IR rule\n+     * would fail.\n+     * <p>\n+     * The precondition is a (flag, value) string pair where the flag must be a valid VM flag and the value must conform\n+     * with the type of the VM flag. A number based flag value can be proceeded with an additional comparator\n+     * ({@code =, !=, <, <=, =>, >}) where the equality operator is optional (default if no comparator is specified).\n+     * <p>\n+     * This is the inverse of {@link #applyIfNot()}. For multiple preconditions, use {@link #applyIfAnd()} or\n+     * {@link #applyIfOr()} depending on the use case.\n+     *\/\n+    String[] applyIf() default {};\n+\n+    \/**\n+     * Define a single VM flag precondition which <i>must <b>not<\/b> hold<\/i> when applying the IR rule. If, however,\n+     * the VM flag precondition holds, then the IR rule is not applied. This could also be defined as <i>negative<\/i>\n+     * precondition. This is useful if a commonly used flag alters the IR in such a way that an IR rule would fail.\n+     * <p>\n+     * The precondition is a (flag, value) string pair where the flag must be a valid VM flag and the value must conform\n+     * with the type of the VM flag. A number based flag value can be proceeded with an additional comparator\n+     * ({@code =, !=, <, <=, =>, >}) where the equality operator is optional (default if no comparator is specified).\n+     * <p>\n+     * This is the inverse of {@link #applyIf()}. For multiple preconditions, use {@link #applyIfAnd()} or\n+     * {@link #applyIfOr()} depending on the use case.\n+     *\/\n+    String[] applyIfNot() default {};\n+\n+    \/**\n+     * Define a list of at least two VM flag precondition which <i><b>all<\/b> must hold<\/i> when applying the IR rule.\n+     * If the one of the VM flag preconditions does not hold, then the IR rule is not applied. This is useful if\n+     * commonly used flags alter the IR in such a way that an IR rule would fail. This can also be defined as conjunction\n+     * of preconditions.\n+     * <p>\n+     * A precondition is a (flag, value) string pair where the flag must be a valid VM flag and the value must conform\n+     * with the type of the VM flag. A number based flag value can be proceeded with an additional comparator\n+     * ({@code =, !=, <, <=, =>, >}) where the equality operator is optional (default if no comparator is specified).\n+     * <p>\n+     * Use  {@link #applyIfOr()} for disjunction and for single precondition constraints use {@link #applyIf()} or\n+     * {@link #applyIfNot()} depending on the use case.\n+     *\/\n+    String[] applyIfAnd() default {};\n+\n+    \/**\n+     * Define a list of at least two VM flag precondition from which <i><b>at least one<\/b> must hold<\/i> when applying\n+     * the IR rule. If none of the VM flag preconditions holds, then the IR rule is not applied. This is useful if\n+     * commonly used flags alter the IR in such a way that an IR rule would fail. This can also be defined as disjunction\n+     * of preconditions.\n+     * <p>\n+     * A precondition is a (flag, value) string pair where the flag must be a valid VM flag and the value must conform\n+     * with the type of the VM flag. A number based flag value can be proceeded with an additional comparator\n+     * ({@code =, !=, <, <=, =>, >}) where the equality operator is optional (default if no comparator is specified).\n+     * <p>\n+     * Use  {@link #applyIfAnd()} for conjunction and for single precondition constraints use {@link #applyIf()} or\n+     * {@link #applyIfNot()} depending on the use case.\n+     *\/\n+    String[] applyIfOr() default {};\n+}\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/IR.java","additions":143,"deletions":0,"binary":false,"changes":143,"status":"added"},{"patch":"@@ -0,0 +1,285 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.test.lib.hotspot.ir_framework;\n+\n+import sun.hotspot.WhiteBox;\n+\n+import java.lang.reflect.Method;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.Objects;\n+import java.util.function.Function;\n+\n+\/**\n+ * Prints an encoding of all @Test methods whether an @IR rules should be applied to the dedicated test framework socket.\n+ *\/\n+class IREncodingPrinter {\n+    public static final String START = \"##### IRMatchRulesEncoding - used by TestFramework #####\";\n+    public static final String END = \"----- END -----\";\n+    public static final int NO_RULE_APPLIED = -1;\n+    private static final WhiteBox WHITE_BOX = WhiteBox.getWhiteBox();\n+    private static final List<Function<String, Object>> longGetters = Arrays.asList(\n+            WHITE_BOX::getIntVMFlag, WHITE_BOX::getUintVMFlag, WHITE_BOX::getIntxVMFlag,\n+            WHITE_BOX::getUintxVMFlag, WHITE_BOX::getUint64VMFlag, WHITE_BOX::getSizeTVMFlag);\n+    private final StringBuilder output = new StringBuilder();\n+\n+    private Method method;\n+    private int ruleIndex;\n+\n+    public IREncodingPrinter() {\n+        output.append(START).append(\"\\n\");\n+        output.append(\"<method>,{comma separated applied @IR rule ids}\\n\");\n+    }\n+\n+    \/**\n+     * Emits \"<method>,{ids}\" where {ids} is either:\n+     * - indices of all @IR rules that should be applied, separated by a comma\n+     * - \"-1\" if no @IR rule should not be applied\n+     *\/\n+    public void emitRuleEncoding(Method m, boolean skipped) {\n+        method = m;\n+        int i = 0;\n+        ArrayList<Integer> validRules = new ArrayList<>();\n+        IR[] irAnnos = m.getAnnotationsByType(IR.class);\n+        if (!skipped) {\n+            for (IR irAnno : irAnnos) {\n+                ruleIndex = i + 1;\n+                try {\n+                    if (shouldApplyIrRule(irAnno)) {\n+                        validRules.add(i);\n+                    }\n+                } catch (TestFormatException e) {\n+                    \/\/ Catch logged failure and continue to check other IR annotations.\n+                }\n+                i++;\n+            }\n+        }\n+        if (irAnnos.length != 0) {\n+            output.append(m.getName());\n+            if (validRules.isEmpty()) {\n+                output.append(\",\" + NO_RULE_APPLIED);\n+            } else {\n+                for (i = 0; i < validRules.size(); i++) {\n+                    output.append(\",\").append(validRules.get(i));\n+                }\n+            }\n+            output.append(\"\\n\");\n+        }\n+    }\n+\n+    private boolean shouldApplyIrRule(IR irAnno) {\n+        checkIRAnnotations(irAnno);\n+        if (irAnno.applyIf().length != 0) {\n+            return hasAllRequiredFlags(irAnno.applyIf(), \"applyIf\");\n+        }\n+\n+        if (irAnno.applyIfNot().length != 0) {\n+            return hasNoRequiredFlags(irAnno.applyIfNot(), \"applyIfNot\");\n+        }\n+\n+        if (irAnno.applyIfAnd().length != 0) {\n+            return hasAllRequiredFlags(irAnno.applyIfAnd(), \"applyIfAnd\");\n+        }\n+\n+        if (irAnno.applyIfOr().length != 0) {\n+            return !hasNoRequiredFlags(irAnno.applyIfOr(), \"applyIfOr\");\n+        }\n+        \/\/ No conditions, always apply.\n+        return true;\n+    }\n+\n+    private void checkIRAnnotations(IR irAnno) {\n+        TestFormat.checkNoThrow(irAnno.counts().length != 0 || irAnno.failOn().length != 0,\n+                                \"Must specify either counts or failOn constraint\" + failAt());\n+        int applyRules = 0;\n+        if (irAnno.applyIfAnd().length != 0) {\n+            applyRules++;\n+            TestFormat.checkNoThrow(irAnno.applyIfAnd().length > 2,\n+                                    \"Use applyIf or applyIfNot or at least 2 conditions for applyIfAnd\" + failAt());\n+        }\n+        if (irAnno.applyIfOr().length != 0) {\n+            applyRules++;\n+            TestFormat.checkNoThrow(irAnno.applyIfOr().length > 2,\n+                                    \"Use applyIf or applyIfNot or at least 2 conditions for applyIfOr\" + failAt());\n+        }\n+        if (irAnno.applyIf().length != 0) {\n+            applyRules++;\n+            TestFormat.checkNoThrow(irAnno.applyIf().length <= 2,\n+                                    \"Use applyIfAnd or applyIfOr or only 1 condition for applyIf\" + failAt());\n+        }\n+        if (irAnno.applyIfNot().length != 0) {\n+            applyRules++;\n+            TestFormat.checkNoThrow(irAnno.applyIfNot().length <= 2,\n+                                    \"Use applyIfAnd or applyIfOr or only 1 condition for applyIfNot\" + failAt());\n+        }\n+        TestFormat.checkNoThrow(applyRules <= 1,\n+                                \"Can only specify one apply constraint \" + failAt());\n+\n+    }\n+\n+    private boolean hasAllRequiredFlags(String[] andRules, String ruleType) {\n+        boolean returnValue = true;\n+        for (int i = 0; i < andRules.length; i++) {\n+            String flag = andRules[i].trim();\n+            i++;\n+            TestFormat.check(i < andRules.length, \"Missing value for flag \" + flag + \" in \" + ruleType + failAt());\n+            String value = andRules[i].trim();\n+            if (!check(flag, value) && returnValue) {\n+                \/\/ Rule will not be applied but keep processing the other flags to verify that they are sane.\n+                returnValue = false;\n+            }\n+        }\n+        return returnValue;\n+    }\n+\n+    private boolean hasNoRequiredFlags(String[] orRules, String ruleType) {\n+        boolean returnValue = true;\n+        for (int i = 0; i < orRules.length; i++) {\n+            String flag = orRules[i];\n+            i++;\n+            TestFormat.check(i < orRules.length, \"Missing value for flag \" + flag + \" in \" + ruleType + failAt());\n+            String value = orRules[i];\n+            if (check(flag, value) && returnValue) {\n+                \/\/ Rule will not be applied but keep processing the other flags to verify that they are sane.\n+                returnValue = false;\n+            }\n+        }\n+        return returnValue;\n+    }\n+\n+    private boolean check(String flag, String value) {\n+        if (flag.isEmpty()) {\n+            TestFormat.failNoThrow(\"Provided empty flag\" + failAt());\n+            return false;\n+        }\n+        if (value.isEmpty()) {\n+            TestFormat.failNoThrow(\"Provided empty value for flag \" + flag + failAt());\n+            return false;\n+        }\n+        Object actualFlagValue = WHITE_BOX.getBooleanVMFlag(flag);\n+        if (actualFlagValue != null) {\n+            return checkBooleanFlag(flag, value, (Boolean) actualFlagValue);\n+        }\n+        actualFlagValue = longGetters.stream().map(f -> f.apply(flag)).filter(Objects::nonNull).findAny().orElse(null);\n+        if (actualFlagValue != null) {\n+            return checkLongFlag(flag, value, (Long) actualFlagValue);\n+        }\n+        actualFlagValue = WHITE_BOX.getDoubleVMFlag(flag);\n+        if (actualFlagValue != null) {\n+            return checkDoubleFlag(flag, value, (Double) actualFlagValue);\n+        }\n+        actualFlagValue = WHITE_BOX.getStringVMFlag(flag);\n+        if (actualFlagValue != null) {\n+            return value.equals(actualFlagValue);\n+        }\n+\n+        \/\/ This could be improved if the Whitebox offers a \"isVMFlag\" function. For now, just check if we can actually set\n+        \/\/ a value for a string flag. If we find this value, it's a string flag. If null is returned, the flag is unknown.\n+        WHITE_BOX.setStringVMFlag(flag, \"test\");\n+        String stringFlagValue = WHITE_BOX.getStringVMFlag(flag);\n+        if (stringFlagValue == null) {\n+            TestFormat.failNoThrow(\"Could not find VM flag \\\"\" + flag + \"\\\"\" + failAt());\n+            return false;\n+        }\n+        TestFramework.check(stringFlagValue.equals(\"test\"),\n+                         \"Must find newly set flag value \\\"test\\\" but found \" + failAt());\n+        WHITE_BOX.setStringVMFlag(flag, null); \/\/ reset flag to NULL\n+        return false;\n+    }\n+\n+    private boolean checkBooleanFlag(String flag, String value, boolean actualFlagValue) {\n+        boolean booleanValue = false;\n+        if (\"true\".equalsIgnoreCase(value)) {\n+            booleanValue = true;\n+        } else if (!\"false\".equalsIgnoreCase(value)) {\n+            TestFormat.failNoThrow(\"Invalid value \\\"\" + value + \"\\\" for boolean flag \" + flag + failAt());\n+            return false;\n+        }\n+        return booleanValue == actualFlagValue;\n+    }\n+\n+    private boolean checkLongFlag(String flag, String value, long actualFlagValue) {\n+        long longValue;\n+        ParsedComparator<Long> parsedComparator;\n+        try {\n+            parsedComparator = ParsedComparator.parseComparator(value);\n+        } catch (CheckedTestFrameworkException e) {\n+            TestFormat.failNoThrow(\"Invalid comparator in \\\"\" + value + \"\\\" for integer based flag \" + flag + failAt());\n+            return false;\n+        }  catch (IndexOutOfBoundsException e) {\n+            TestFormat.failNoThrow(\"Provided empty value for integer based flag \" + flag + failAt());\n+            return false;\n+        }\n+        try {\n+            longValue = Long.parseLong(parsedComparator.getStrippedString());\n+        } catch (NumberFormatException e) {\n+            String comparator = parsedComparator.getComparator();\n+            if (!comparator.isEmpty()) {\n+                comparator = \"after comparator \\\"\" + parsedComparator.getComparator() + \"\\\"\";\n+            }\n+            TestFormat.failNoThrow(\"Invalid value \\\"\" + parsedComparator.getStrippedString() + \"\\\" \"\n+                            + comparator + \" for integer based flag \" + flag + failAt());\n+            return false;\n+        }\n+        return parsedComparator.getPredicate().test(actualFlagValue, longValue);\n+    }\n+\n+    private boolean checkDoubleFlag(String flag, String value, double actualFlagValue) {\n+        double doubleValue;\n+        ParsedComparator<Double> parsedComparator;\n+        try {\n+            parsedComparator = ParsedComparator.parseComparator(value);\n+        } catch (CheckedTestFrameworkException e) {\n+            TestFormat.failNoThrow(\"Invalid comparator in \\\"\" + value + \"\\\" for floating point based flag \" + flag + failAt());\n+            return false;\n+        } catch (IndexOutOfBoundsException e) {\n+            TestFormat.failNoThrow(\"Provided empty value for floating point based flag \" + flag + failAt());\n+            return false;\n+        }\n+        try {\n+            doubleValue = Double.parseDouble(parsedComparator.getStrippedString());\n+        } catch (NumberFormatException e) {\n+            String comparator = parsedComparator.getComparator();\n+            if (!comparator.isEmpty()) {\n+                comparator = \"after comparator \\\"\" + parsedComparator.getComparator() + \"\\\"\";\n+            }\n+            TestFormat.failNoThrow(\"Invalid value \\\"\" + parsedComparator.getStrippedString() + \"\\\" \"\n+                    + comparator + \" for floating point based flag \" + flag + failAt());\n+            return false;\n+        }\n+        return parsedComparator.getPredicate().test(actualFlagValue, doubleValue);\n+    }\n+\n+    private String failAt() {\n+        return \" for @IR rule \" + ruleIndex + \" at \" + method;\n+    }\n+\n+    public void emit() {\n+        output.append(END);\n+        TestFrameworkSocket.write(output.toString(), \"IR rule application encoding\");\n+    }\n+}\n+\n+\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/IREncodingPrinter.java","additions":285,"deletions":0,"binary":false,"changes":285,"status":"added"},{"patch":"@@ -0,0 +1,480 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.test.lib.hotspot.ir_framework;\n+\n+import java.io.*;\n+import java.lang.reflect.Method;\n+import java.nio.file.Files;\n+import java.nio.file.Paths;\n+import java.util.*;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+\n+\/**\n+ * Parse the hotspot pid file of the test VM to match all @IR rules.\n+ *\/\n+class IRMatcher {\n+    private static final boolean PRINT_IR_ENCODING = Boolean.parseBoolean(System.getProperty(\"PrintIREncoding\", \"false\"));\n+    private static final Pattern irEncodingPattern =\n+            Pattern.compile(\"(?<=\" + IREncodingPrinter.START + \"\\\\R)[\\\\s\\\\S]*(?=\" + IREncodingPrinter.END + \")\");\n+    private static final Pattern compileIdPattern = Pattern.compile(\"compile_id='(\\\\d+)'\");\n+\n+    private final Map<String, IRMethod> compilations;\n+    private final Class<?> testClass;\n+    private final Map<Method, List<String>> fails;\n+    private final Pattern compileIdPatternForTestClass;\n+    private final String hotspotPidFileName;\n+    private IRMethod irMethod; \/\/ Current IR method to which rules are applied\n+    private Method method; \/\/ Current method to which rules are applied\n+    private IR irAnno; \/\/ Current IR annotation that is processed.\n+    private int irRuleIndex; \/\/ Current IR rule index;\n+\n+    public IRMatcher(String hotspotPidFileName, String irEncoding, Class<?> testClass) {\n+        this.compilations =  new HashMap<>();\n+        this.fails = new HashMap<>();\n+        this.testClass = testClass;\n+        this.compileIdPatternForTestClass = Pattern.compile(\"compile_id='(\\\\d+)'.*\" + Pattern.quote(testClass.getCanonicalName())\n+                                                            + \" (\\\\S+)\");\n+        this.hotspotPidFileName = hotspotPidFileName;\n+        setupTestMethods(irEncoding);\n+        if (TestFramework.VERBOSE || PRINT_IR_ENCODING) {\n+            System.out.println(\"Read IR encoding from test VM:\");\n+            System.out.println(irEncoding);\n+        }\n+        parseHotspotPidFile();\n+        applyRules();\n+    }\n+\n+    \/**\n+     * Sets up a map testname -> IRMethod (containing the PrintIdeal and PrintOptoAssembly output for testname).\n+     *\/\n+    private void setupTestMethods(String irEncoding) {\n+        Map<String, int[]> irRulesMap = parseIREncoding(irEncoding);\n+        for (Method m : testClass.getDeclaredMethods()) {\n+            method = m;\n+            IR[] irAnnos =  m.getAnnotationsByType(IR.class);\n+            if (irAnnos.length > 0) {\n+                \/\/ Validation of legal @IR attributes and placement of the annotation was already done in Test VM.\n+                int[] ids = irRulesMap.get(m.getName());\n+                TestFramework.check(ids != null, \"Should find method name in validIrRulesMap for \" + m);\n+                TestFramework.check(ids.length > 0, \"Did not find any rule indices for \" + m);\n+                TestFramework.check(ids[ids.length - 1] < irAnnos.length, \"Invalid IR rule index found in validIrRulesMap for \" + m);\n+                if (ids[0] != IREncodingPrinter.NO_RULE_APPLIED) {\n+                    \/\/ If -1, than there was no matching IR rule for the given conditions.\n+                    compilations.put(m.getName(), new IRMethod(m, ids, irAnnos));\n+                }\n+            }\n+        }\n+    }\n+\n+    \/**\n+     * Read the IR encoding emitted by the test VM to decide if an @IR rule must be checked for a method.\n+     *\/\n+    private Map<String, int[]>  parseIREncoding(String irEncoding) {\n+        Map<String, int[]> irRulesMap = new HashMap<>();\n+        Matcher matcher = irEncodingPattern.matcher(irEncoding);\n+        TestFramework.check(matcher.find(), \"Did not find IR encoding\");\n+        String[] lines = matcher.group(0).split(\"\\\\R\");\n+\n+        \/\/ Skip first line containing information about the format only\n+        for (int i = 1; i < lines.length; i++) {\n+            String line = lines[i].trim();\n+            String[] splitComma = line.split(\",\");\n+            if (splitComma.length < 2) {\n+                TestFramework.fail(\"Invalid IR match rule encoding. No comma found: \" + splitComma[0]);\n+            }\n+            String testName = splitComma[0];\n+            int[] irRulesIdx = new int[splitComma.length - 1];\n+            for (int j = 1; j < splitComma.length; j++) {\n+                try {\n+                    irRulesIdx[j - 1] = Integer.parseInt(splitComma[j]);\n+                } catch (NumberFormatException e) {\n+                    TestFramework.fail(\"Invalid IR match rule encoding. No number found: \" + splitComma[j]);\n+                }\n+            }\n+            irRulesMap.put(testName, irRulesIdx);\n+        }\n+        return irRulesMap;\n+    }\n+\n+    \/**\n+     * Parse the hotspot_pid*.log file from the test VM. Read the PrintIdeal and PrintOptoAssembly entries for all\n+     * methods of the test class that need to be IR matched (according to IR encoding).\n+     *\/\n+    private void parseHotspotPidFile() {\n+        Map<Integer, String> compileIdMap = new HashMap<>();\n+        try (BufferedReader br = Files.newBufferedReader(Paths.get(\"\", hotspotPidFileName))) {\n+            String line;\n+            StringBuilder builder = new StringBuilder();\n+            boolean append = false;\n+            String currentMethod = \"\";\n+            while ((line = br.readLine()) != null) {\n+                if (append && line.startsWith(\"<\/\")) {\n+                    flushOutput(line, builder, currentMethod);\n+                    append = false;\n+                    currentMethod = \"\";\n+                    continue;\n+                } else if (append) {\n+                    appendLine(builder, line);\n+                    continue;\n+                }\n+\n+                if (maybeTestEntry(line)) {\n+                    addTestMethodCompileId(compileIdMap, line);\n+                } else if (isPrintIdealStart(line)) {\n+                    String methodName = getMethodName(compileIdMap, line);\n+                    if (methodName != null) {\n+                        currentMethod = methodName;\n+                        append = true; \/\/ Append all following lines until we hit the closing <\/ideal> tag.\n+                    }\n+                } else if (isPrintOptoAssemblyStart(line)) {\n+                    String methodName = getMethodName(compileIdMap, line);\n+                    if (methodName != null) {\n+                        TestFramework.check(compilations.containsKey(methodName), \"Must be second entry of \" + methodName);\n+                        currentMethod = methodName;\n+                        append = true; \/\/ Append all following lines until we hit the closing <\/opto_assembly> tag.\n+                    }\n+                }\n+            }\n+        } catch (IOException e) {\n+            TestFramework.fail(\"Error while reading \" + hotspotPidFileName, e);\n+        }\n+    }\n+\n+    \/**\n+     * Write the input to the IR method and reset the builder.\n+     *\/\n+    private void flushOutput(String line, StringBuilder builder, String currentMethod) {\n+        TestFramework.check(!currentMethod.isEmpty(), \"current method must be set\");\n+        IRMethod irMethod = compilations.get(currentMethod);\n+        if (line.startsWith(\"<\/i\")) {\n+            \/\/ PrintIdeal\n+            irMethod.appendIdealOutput(builder.toString());\n+        } else {\n+            \/\/ PrintOptoAssembly\n+            irMethod.appendOptoAssemblyOutput(builder.toString());\n+        }\n+        builder.setLength(0);\n+    }\n+\n+    \/**\n+     * Only consider non-osr (no \"compile_kind\") and compilations with C2 (no \"level\")\n+     *\/\n+    private boolean maybeTestEntry(String line) {\n+        return line.startsWith(\"<task_queued\") && !line.contains(\"compile_kind='\") && !line.contains(\"level='\");\n+    }\n+\n+    \/**\n+     * Need to escape XML special characters.\n+     *\/\n+    private static void appendLine(StringBuilder builder, String line) {\n+        if (line.contains(\"&\")) {\n+            line = line.replace(\"&amp;\", \"&\");\n+            line = line.replace(\"&lt;\", \"<\");\n+            line = line.replace(\"&gt;\", \">\");\n+            line = line.replace(\"&quot;\", \"\\\"\");\n+            line = line.replace(\"&apos;\", \"'\");\n+        }\n+        builder.append(line).append(\"\\n\");\n+    }\n+\n+    private static int getCompileId(Matcher matcher) {\n+        int compileId = -1;\n+        try {\n+            compileId = Integer.parseInt(matcher.group(1));\n+        } catch (NumberFormatException e) {\n+            TestRun.fail(\"Could not parse compile id\", e);\n+        }\n+        return compileId;\n+    }\n+\n+    \/**\n+     * Parse the compile id from this line if it belongs to a method that needs to be IR tested (part of test class\n+     * and IR encoding from the test VM specifies that this method has @IR rules to be checked).\n+     *\/\n+    private void addTestMethodCompileId(Map<Integer, String> compileIdMap, String line) {\n+        Matcher matcher = compileIdPatternForTestClass.matcher(line);\n+        if (matcher.find()) {\n+            \/\/ Only care about test class entries. Might have non-class entries as well if user specified additional\n+            \/\/ compile commands. Ignore these.\n+            String methodName = matcher.group(2);\n+            if (compilations.containsKey(methodName)) {\n+                \/\/ We only care about methods that we are actually gonna IR match based on IR encoding.\n+                int compileId = getCompileId(matcher);\n+                TestRun.check(!methodName.isEmpty(), \"method name cannot be empty\");\n+                compileIdMap.put(compileId, methodName);\n+            }\n+        }\n+    }\n+\n+    \/**\n+     * Make sure that line does not contain compile_kind which is used for OSR compilations which we are not\n+     * interested in.\n+     *\/\n+    private static boolean isPrintIdealStart(String line) {\n+        return line.startsWith(\"<ideal\") && !line.contains(\"compile_kind='\");\n+    }\n+\n+    \/**\n+     * Make sure that line does not contain compile_kind which is used for OSR compilations which we are not\n+     * interested in.\n+     *\/\n+    private static boolean isPrintOptoAssemblyStart(String line) {\n+        return line.startsWith(\"<opto_assembly\") && !line.contains(\"compile_kind='\");\n+    }\n+\n+    \/**\n+     * Get method name for this line by looking up the compile id.\n+     * Returns null if not an interesting method (i.e. from test class).\n+     *\/\n+    private String getMethodName(Map<Integer, String> compileIdMap, String line) {\n+        Matcher matcher = compileIdPattern.matcher(line);\n+        TestFramework.check(matcher.find(), \"Is \" + hotspotPidFileName + \" corrupted?\");\n+        int compileId = getCompileId(matcher);\n+        return compileIdMap.get(compileId);\n+    }\n+\n+    \/**\n+     * Do an IR matching of all methods with appliable @IR rules fetched during parsing of the hotspot pid file.\n+     *\/\n+    private void applyRules() {\n+        compilations.values().forEach(this::applyRulesForMethod);\n+        reportFailuresIfAny();\n+    }\n+\n+    private void applyRulesForMethod(IRMethod irMethod) {\n+        this.irMethod = irMethod;\n+        method = irMethod.getMethod();\n+        String testOutput = irMethod.getOutput();\n+        if (testOutput.isEmpty()) {\n+            String msg = \"Method was not compiled. Did you specify any compiler directives preventing a compilation or used a \" +\n+                         \"@Run method in STANDALONE mode? In the latter case, make sure to always trigger a C2 compilation \" +\n+                         \"by invoking the test enough times.\";\n+            fails.computeIfAbsent(method, k -> new ArrayList<>()).add(msg);\n+            return;\n+        }\n+\n+        if (TestFramework.VERBOSE) {\n+            System.out.println(\"Output of \" + method + \":\");\n+            System.out.println(testOutput);\n+        }\n+        Arrays.stream(irMethod.getRuleIds()).forEach(this::applyIRRule);\n+    }\n+\n+    \/**\n+     * Apply a single @IR rule as part of a method.\n+     *\/\n+    private void applyIRRule(int id) {\n+        irAnno = irMethod.getIrAnno(id);\n+        irRuleIndex = id;\n+        StringBuilder failMsg = new StringBuilder();\n+        applyFailOn(failMsg);\n+        try {\n+            applyCounts(failMsg);\n+        } catch (TestFormatException e) {\n+            \/\/ Logged. Continue to check other rules.\n+        }\n+        if (!failMsg.isEmpty()) {\n+            failMsg.insert(0, \"@IR rule \" + (id + 1) + \": \\\"\" + irAnno + \"\\\"\\n\");\n+            fails.computeIfAbsent(method, k -> new ArrayList<>()).add(failMsg.toString());\n+        }\n+    }\n+\n+    \/**\n+     * Apply the failOn regexes of the @IR rule.\n+     *\/\n+    private void applyFailOn(StringBuilder failMsg) {\n+        if (irAnno.failOn().length != 0) {\n+            String failOnRegex = String.join(\"|\", IRNode.mergeNodes(irAnno.failOn()));\n+            Pattern pattern = Pattern.compile(failOnRegex);\n+            Matcher matcher = pattern.matcher(irMethod.getOutput());\n+            long matchCount = matcher.results().count();\n+            if (matchCount > 0) {\n+                addFailOnFailsForOutput(failMsg, pattern, matchCount);\n+            }\n+        }\n+    }\n+\n+    \/**\n+     * A failOn regex failed. Apply all regexes again to log the exact regex which failed. The failure is later reported\n+     * to the user.\n+     *\/\n+    private void addFailOnFailsForOutput(StringBuilder failMsg, Pattern pattern, long matchCount) {\n+        long idealCount = pattern.matcher(irMethod.getIdealOutput()).results().count();\n+        long optoAssemblyCount = pattern.matcher(irMethod.getOptoAssemblyOutput()).results().count();\n+        if (matchCount != idealCount + optoAssemblyCount || (idealCount != 0 && optoAssemblyCount != 0)) {\n+            \/\/ Report with Ideal and Opto Assembly\n+            addFailOnFailsForOutput(failMsg, irMethod.getOutput());\n+            irMethod.needsAllOutput();\n+        } else if (optoAssemblyCount == 0) {\n+            \/\/ Report with Ideal only\n+            addFailOnFailsForOutput(failMsg, irMethod.getIdealOutput());\n+            irMethod.needsIdeal();\n+        } else {\n+            \/\/ Report with Opto Assembly only\n+            addFailOnFailsForOutput(failMsg, irMethod.getOptoAssemblyOutput());\n+            irMethod.needsOptoAssembly();\n+        }\n+    }\n+\n+    \/**\n+     * Apply the regexes to the testOutput and log the failures.\n+     *\/\n+    private void addFailOnFailsForOutput(StringBuilder failMsg, String testOutput) {\n+        List<String> failOnNodes = IRNode.mergeNodes(irAnno.failOn());\n+        Pattern pattern;\n+        Matcher matcher;\n+        failMsg.append(\"- failOn: Graph contains forbidden nodes:\\n\");\n+        int nodeId = 1;\n+        for (String nodeRegex : failOnNodes) {\n+            pattern = Pattern.compile(nodeRegex);\n+            matcher = pattern.matcher(testOutput);\n+            long matchCount = matcher.results().count();\n+            if (matchCount > 0) {\n+                matcher.reset();\n+                failMsg.append(\"    Regex \").append(nodeId).append(\") \").append(nodeRegex).append(\"\\n\");\n+                failMsg.append(\"    Matched forbidden node\").append(matchCount > 1 ? \"s (\" + matchCount + \")\" : \"\").append(\":\\n\");\n+                matcher.results().forEach(r -> failMsg.append(\"      \").append(r.group()).append(\"\\n\"));\n+            }\n+            nodeId++;\n+        }\n+    }\n+\n+    \/**\n+     * Apply the counts regexes of the @IR rule.\n+     *\/\n+    private void applyCounts(StringBuilder failMsg) {\n+        if (irAnno.counts().length != 0) {\n+            boolean hasFails = false;\n+            String testOutput = irMethod.getOutput();\n+            int countsId = 1;\n+            final List<String> nodesWithCount = IRNode.mergeNodes(irAnno.counts());\n+            for (int i = 0; i < nodesWithCount.size(); i += 2) {\n+                String node = nodesWithCount.get(i);\n+                TestFormat.check(i + 1 < nodesWithCount.size(), \"Missing count\"  + getPostfixErrorMsg(node));\n+                String countString = nodesWithCount.get(i + 1);\n+                long expectedCount;\n+                ParsedComparator<Long> parsedComparator;\n+                try {\n+                    parsedComparator = ParsedComparator.parseComparator(countString);\n+                    expectedCount = Long.parseLong(parsedComparator.getStrippedString());\n+                } catch (NumberFormatException e) {\n+                    TestFormat.fail(\"Provided invalid count \\\"\" + countString + \"\\\"\" + getPostfixErrorMsg(node));\n+                    return;\n+                } catch (CheckedTestFrameworkException e) {\n+                    TestFormat.fail(\"Invalid comparator \\\"\" + e.getMessage() + \"\\\" in \\\"\" + countString + \"\\\" for count\" + getPostfixErrorMsg(node));\n+                    return;\n+                } catch (IndexOutOfBoundsException e) {\n+                    TestFormat.fail(\"Provided empty value\" + getPostfixErrorMsg(node));\n+                    return;\n+                }\n+                TestFormat.check(expectedCount >= 0,\"Provided invalid negative count \\\"\" + countString + \"\\\"\" + getPostfixErrorMsg(node));\n+\n+                Pattern pattern = Pattern.compile(node);\n+                Matcher matcher = pattern.matcher(testOutput);\n+                long actualCount = matcher.results().count();\n+                if (!parsedComparator.getPredicate().test(actualCount, expectedCount)) {\n+                    if (!hasFails) {\n+                        failMsg.append(\"- counts: Graph contains wrong number of nodes:\\n\");\n+                        hasFails = true;\n+                    }\n+                    addCountsFail(failMsg, node, pattern, expectedCount, actualCount, countsId);\n+                }\n+                countsId++;\n+            }\n+        }\n+    }\n+\n+    private String getPostfixErrorMsg(String node) {\n+        return \" for IR rule \" + irRuleIndex + \", node \\\"\" + node + \"\\\" at \" + method;\n+    }\n+\n+    \/**\n+     * A counts regex failed. Apply all regexes again to log the exact regex which failed. The failure is later reported\n+     * to the user.\n+     *\/\n+    private void addCountsFail(StringBuilder failMsg, String node, Pattern pattern, long expectedCount, long actualCount, int countsId) {\n+        failMsg.append(\"    Regex \").append(countsId).append(\") \").append(node).append(\"\\n\");\n+        failMsg.append(\"    Expected \").append(expectedCount).append(\" but found \").append(actualCount);\n+\n+        if (actualCount > 0) {\n+            Matcher matcher = pattern.matcher(irMethod.getOutput());\n+            long idealCount = pattern.matcher(irMethod.getIdealOutput()).results().count();\n+            long optoAssemblyCount = pattern.matcher(irMethod.getOptoAssemblyOutput()).results().count();\n+            if (actualCount != idealCount + optoAssemblyCount || (idealCount != 0 && optoAssemblyCount != 0)) {\n+                irMethod.needsAllOutput();\n+            } else if (optoAssemblyCount == 0) {\n+                irMethod.needsIdeal();\n+            } else {\n+                irMethod.needsOptoAssembly();\n+            }\n+            failMsg.append(\" node\").append(actualCount > 1 ? \"s\" : \"\").append(\":\\n\");\n+            matcher.results().forEach(r -> failMsg.append(\"      \").append(r.group()).append(\"\\n\"));\n+        } else {\n+            irMethod.needsAllOutput();\n+            failMsg.append(\" nodes.\\n\");\n+        }\n+    }\n+\n+    \/**\n+     * Report all IR violations in a pretty format to the user. Depending on the failed regex, we only report\n+     * PrintIdeal or PrintOptoAssembly if the match failed there. If there were failures that matched things\n+     * in both outputs than the entire output is reported. Throws IRViolationException from which the compilation\n+     * can be read and reported to the stdout separately. The exception message only includes the summary of the\n+     * failures.\n+     *\/\n+    private void reportFailuresIfAny() {\n+        TestFormat.reportIfAnyFailures();\n+        if (!fails.isEmpty()) {\n+            StringBuilder failuresBuilder = new StringBuilder();\n+            StringBuilder compilationsBuilder = new StringBuilder();\n+            int failures = 0;\n+            for (Map.Entry<Method, List<String>> entry : fails.entrySet()) {\n+                Method method = entry.getKey();\n+                compilationsBuilder.append(\">>> Compilation of \").append(method).append(\":\\n\");\n+                IRMethod irMethod = compilations.get(method.getName());\n+                String output;\n+                if (irMethod.usesIdeal() && irMethod.usesOptoAssembly()) {\n+                    output = irMethod.getOutput();\n+                } else if (irMethod.usesIdeal()) {\n+                    output = irMethod.getIdealOutput();\n+                } else if (irMethod.usesOptoAssembly()) {\n+                    output = irMethod.getOptoAssemblyOutput();\n+                } else {\n+                    output = \"<empty>\";\n+                }\n+                compilationsBuilder.append(output).append(\"\\n\\n\");\n+                List<String> list = entry.getValue();\n+                failuresBuilder.append(\"- Method \\\"\").append(method).append(\"\\\":\\n\");\n+                failures += list.size();\n+                list.forEach(s -> failuresBuilder.append(\"  * \").append(s.replace(\"\\n\", \"\\n    \").trim()).append(\"\\n\"));\n+                failuresBuilder.append(\"\\n\");\n+            }\n+            failuresBuilder.insert(0, (\"\\nOne or more @IR rules failed:\\n\\n\" + \"Failed IR Rules (\" + failures + \")\\n\")\n+                              + \"-----------------\" + \"-\".repeat(String.valueOf(failures).length()) + \"\\n\");\n+            failuresBuilder.append(\">>> Check stdout for compilation output of the failed methods\\n\\n\");\n+            throw new IRViolationException(failuresBuilder.toString(), compilationsBuilder.toString());\n+        }\n+    }\n+}\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/IRMatcher.java","additions":480,"deletions":0,"binary":false,"changes":480,"status":"added"},{"patch":"@@ -0,0 +1,115 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.test.lib.hotspot.ir_framework;\n+\n+import java.lang.reflect.Method;\n+\n+\/**\n+ * Helper class to store information about a method that needs to be IR matched.\n+ *\/\n+class IRMethod {\n+    final private Method method;\n+    final private int[] ruleIds;\n+    final private IR[] irAnnos;\n+    final private StringBuilder outputBuilder;\n+    private String output;\n+    private String idealOutput;\n+    private String optoAssemblyOutput;\n+    private boolean needsIdeal;\n+    private boolean needsOptoAssembly;\n+\n+    public IRMethod(Method method, int[] ruleIds, IR[] irAnnos) {\n+        this.method = method;\n+        this.ruleIds = ruleIds;\n+        this.irAnnos = irAnnos;\n+        this.outputBuilder = new StringBuilder();\n+        this.output = \"\";\n+        this.idealOutput = \"\";\n+        this.optoAssemblyOutput = \"\";\n+    }\n+\n+    public Method getMethod() {\n+        return method;\n+    }\n+\n+    public int[] getRuleIds() {\n+        return ruleIds;\n+    }\n+\n+    public IR getIrAnno(int idx) {\n+        return irAnnos[idx];\n+    }\n+\n+    \/**\n+     * The Ideal output comes always before the Opto Assembly output. We might parse multiple C2 compilations of this method.\n+     * Only keep the very last one by overriding 'output'.\n+     *\/\n+    public void appendIdealOutput(String idealOutput) {\n+        outputBuilder.setLength(0);\n+        this.idealOutput = \"PrintIdeal:\\n\" + idealOutput;\n+        outputBuilder.append(this.idealOutput);\n+    }\n+\n+    \/**\n+     * The Opto Assembly output comes after the Ideal output. Simply append to 'output'.\n+     *\/\n+    public void appendOptoAssemblyOutput(String optoAssemblyOutput) {\n+        this.optoAssemblyOutput = \"PrintOptoAssembly:\\n\" + optoAssemblyOutput;\n+        outputBuilder.append(\"\\n\\n\").append(this.optoAssemblyOutput);\n+        output = outputBuilder.toString();\n+    }\n+\n+    public String getOutput() {\n+        return output;\n+    }\n+\n+    public String getIdealOutput() {\n+        return idealOutput;\n+    }\n+\n+    public String getOptoAssemblyOutput() {\n+        return optoAssemblyOutput;\n+    }\n+\n+    public void needsAllOutput() {\n+        needsIdeal();\n+        needsOptoAssembly();\n+    }\n+\n+    public void needsIdeal() {\n+        needsIdeal = true;\n+    }\n+\n+    public boolean usesIdeal() {\n+        return needsIdeal;\n+    }\n+\n+    public void needsOptoAssembly() {\n+        needsOptoAssembly = true;\n+    }\n+\n+    public boolean usesOptoAssembly() {\n+        return needsOptoAssembly;\n+    }\n+}\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/IRMethod.java","additions":115,"deletions":0,"binary":false,"changes":115,"status":"added"},{"patch":"@@ -0,0 +1,160 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.test.lib.hotspot.ir_framework;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.regex.Pattern;\n+\n+\/**\n+ * This class provides default regex strings that can be used in {@link IR @IR} annotations to specify IR constraints.\n+ * <p>\n+ * There are two types of default regexes:\n+ * <ul>\n+ *     <li><p>Standalone regexes: Use them directly.<\/li>\n+ *     <li><p>Composite regexes: Their names contain \"{@code _OF}\" and expect another string in a list in\n+ *            {@link IR#failOn()} and {@link IR#counts()}. They cannot be use as standalone regex and will result in a\n+ *            {@link TestFormatException} when doing so.<\/li>\n+ * <\/ul>\n+ *\n+ * @see IR\n+ *\/\n+public class IRNode {\n+    private static final String START = \"(\\\\d+(\\\\s){2}(\";\n+    private static final String MID = \".*)+(\\\\s){2}===.*\";\n+    private static final String END = \")\";\n+\n+    public static final String ALLOC = \"(.*precise klass .*\\\\R(.*(movl|xorl|nop|spill).*\\\\R)*.*call,static  wrapper for: _new_instance_Java\" + END;\n+    public static final String ALLOC_OF = \"(.*precise klass .*\";\n+    public static final String ALLOC_ARRAY = \"(.*precise klass \\\\[L.*\\\\R(.*(movl|xorl|nop|spill).*\\\\R)*.*call,static  wrapper for: _new_array_Java\" + END;\n+    public static final String ALLOC_ARRAY_OF = \"(.*precise klass \\\\[L.*\";\n+\n+    public static final String CHECKCAST_ARRAY = \"(cmp.*precise klass \\\\[.*;:\" + END;\n+    public static final String CHECKCAST_ARRAY_OF = \"(cmp.*precise klass \\\\[.*\";\n+    public static final String CHECKCAST_ARRAYCOPY = \"(.*call_leaf_nofp,runtime  checkcast_arraycopy.*\" + END;\n+\n+    public static final String FIELD_ACCESS = \"(.*Field: *\" + END;\n+\n+    public static final String STORE = START + \"Store(B|C|S|I|L|F|D|P|N)\" + MID + END;\n+    public static final String STORE_B = START + \"StoreB\" + MID + END; \/\/ Store to boolean is also mapped to byte\n+    public static final String STORE_C = START + \"StoreC\" + MID + END;\n+    public static final String STORE_I = START + \"StoreI\" + MID + END; \/\/ Store to short is also mapped to int\n+    public static final String STORE_L = START + \"StoreL\" + MID + END;\n+    public static final String STORE_F = START + \"StoreF\" + MID + END;\n+    public static final String STORE_D = START + \"StoreD\" + MID + END;\n+    public static final String STORE_P = START + \"StoreP\" + MID + END;\n+    public static final String STORE_N = START + \"StoreN\" + MID + END;\n+    public static final String STORE_OF_CLASS = START + \"Store(B|C|S|I|L|F|D|P|N)\" + MID + \"@\\\\S*\";\n+    public static final String STORE_B_OF_CLASS = START + \"StoreB\" + MID + \"@\\\\S*\";\n+    public static final String STORE_C_OF_CLASS = START + \"StoreC\" + MID + \"@\\\\S*\";\n+    public static final String STORE_I_OF_CLASS = START + \"StoreI\" + MID + \"@\\\\S*\";\n+    public static final String STORE_L_OF_CLASS = START + \"StoreL\" + MID + \"@\\\\S*\";\n+    public static final String STORE_F_OF_CLASS = START + \"StoreF\" + MID + \"@\\\\S*\";\n+    public static final String STORE_D_OF_CLASS = START + \"StoreD\" + MID + \"@\\\\S*\";\n+    public static final String STORE_P_OF_CLASS = START + \"StoreP\" + MID + \"@\\\\S*\";\n+    public static final String STORE_N_OF_CLASS = START + \"StoreN\" + MID + \"@\\\\S*\";\n+    public static final String STORE_OF_FIELD = START + \"Store(B|C|S|I|L|F|D|P|N)\" + MID + \"@.*name=\";\n+\n+    public static final String LOAD = START + \"Load(B|UB|S|US|I|L|F|D|P|N)\" + MID + END;\n+    public static final String LOAD_B = START + \"LoadB\" + MID + END;\n+    public static final String LOAD_UB = START + \"LoadUB\" + MID + END; \/\/ Load from boolean\n+    public static final String LOAD_S = START + \"LoadS\" + MID + END;\n+    public static final String LOAD_US = START + \"LoadUS\" + MID + END; \/\/ Load from char\n+    public static final String LOAD_I = START + \"LoadI\" + MID + END;\n+    public static final String LOAD_L = START + \"LoadL\" + MID + END;\n+    public static final String LOAD_F = START + \"LoadF\" + MID + END;\n+    public static final String LOAD_D = START + \"LoadD\" + MID + END;\n+    public static final String LOAD_P = START + \"LoadP\" + MID + END;\n+    public static final String LOAD_N = START + \"LoadN\" + MID + END;\n+    public static final String LOAD_OF_CLASS = START + \"Load(B|UB|S|US|I|L|F|D|P|N)\" + MID + \"@\\\\S*\";\n+    public static final String LOAD_B_OF_CLASS = START + \"LoadB\" + MID + \"@\\\\S*\";\n+    public static final String LOAD_UB_OF_CLASS = START + \"LoadUB\" + MID + \"@\\\\S*\";\n+    public static final String LOAD_S_OF_CLASS = START + \"LoadS\" + MID + \"@\\\\S*\";\n+    public static final String LOAD_US_OF_CLASS = START + \"LoadUS\" + MID + \"@\\\\S*\";\n+    public static final String LOAD_I_OF_CLASS = START + \"LoadI\" + MID + \"@\\\\S*\";\n+    public static final String LOAD_L_OF_CLASS = START + \"LoadL\" + MID + \"@\\\\S*\";\n+    public static final String LOAD_F_OF_CLASS = START + \"LoadF\" + MID + \"@\\\\S*\";\n+    public static final String LOAD_D_OF_CLASS = START + \"LoadD\" + MID + \"@\\\\S*\";\n+    public static final String LOAD_P_OF_CLASS = START + \"LoadP\" + MID + \"@\\\\S*\";\n+    public static final String LOAD_N_OF_CLASS = START + \"LoadN\" + MID + \"@\\\\S*\";\n+    public static final String LOAD_OF_FIELD = START + \"Load(B|C|S|I|L|F|D|P|N)\" + MID + \"@.*name=\";\n+    public static final String LOAD_KLASS  = START + \"LoadK\" + MID + END;\n+\n+    public static final String LOOP   = START + \"Loop\" + MID + \"\" + END;\n+    public static final String COUNTEDLOOP = START + \"CountedLoop\\\\b\" + MID + \"\" + END;\n+    public static final String COUNTEDLOOP_MAIN = START + \"CountedLoop\\\\b\" + MID + \"main\" + END;\n+\n+    public static final String CALL = START + \"CallStaticJava\" + MID + END;\n+    public static final String TRAP = START + \"CallStaticJava\" + MID + \"uncommon_trap.*reason\" + END;\n+    public static final String PREDICATE_TRAP = START + \"CallStaticJava\" + MID + \"uncommon_trap.*predicate\" + END;\n+    public static final String UNSTABLE_IF_TRAP = START + \"CallStaticJava\" + MID + \"uncommon_trap.*unstable_if\" + END;\n+    public static final String CLASS_CHECK_TRAP = START + \"CallStaticJava\" + MID + \"uncommon_trap.*class_check\" + END;\n+    public static final String NULL_CHECK_TRAP = START + \"CallStaticJava\" + MID + \"uncommon_trap.*null_check\" + END;\n+    public static final String NULL_ASSERT_TRAP = START + \"CallStaticJava\" + MID + \"uncommon_trap.*null_assert\" + END;\n+    public static final String RANGE_CHECK_TRAP = START + \"CallStaticJava\" + MID + \"uncommon_trap.*range_check\" + END;\n+    public static final String UNHANDLED_TRAP = START + \"CallStaticJava\" + MID + \"uncommon_trap.*unhandled\" + END;\n+    public static final String INTRINSIC_OR_TYPE_CHECKED_INLINING_TRAP = START + \"CallStaticJava\" + MID + \"uncommon_trap.*intrinsic_or_type_checked_inlining\" + END;\n+\n+    public static final String SCOPE_OBJECT = \"(.*# ScObj.*\" + END;\n+    public static final String MEMBAR = START + \"MemBar\" + MID + END;\n+\n+\n+    private static final String ALLOC_OF_POSTFIX =  \":.*\\\\R(.*(movl|xorl|nop|spill).*\\\\R)*.*call,static  wrapper for: _new_instance_Java\" + END;\n+    private static final String ALLOC_ARRAY_OF_POSTFIX = \";:.*\\\\R(.*(movl|xorl|nop|spill).*\\\\R)*.*call,static  wrapper for: _new_array_Java\" + END;\n+    private static final String CHECKCAST_ARRAY_OF_POSTFIX = \";:\" + END;\n+    private static final String STORE_OF_FIELD_POSTFIX = \",.*\" + END;\n+    private static final String STORE_OF_CLASS_POSTFIX = \"(:|\\\\+)\\\\S* \\\\*\" + END;\n+    private static final String LOAD_OF_CLASS_POSTFIX = \"(:|\\\\+)\\\\S* \\\\*\" + END;\n+    private static final String LOAD_OF_FIELD_POSTFIX = \",.*\" + END;\n+\n+    static List<String> mergeNodes(String[] nodes) {\n+        final List<String> mergedNodes = new ArrayList<>();\n+        for (int i = 0; i < nodes.length; i += 2) {\n+            String node = nodes[i];\n+            switch (node) {\n+                case ALLOC_OF -> mergeCompositeNodes(nodes, mergedNodes, i, node, ALLOC_OF_POSTFIX, \"ALLOC_OF\");\n+                case ALLOC_ARRAY_OF -> mergeCompositeNodes(nodes, mergedNodes, i, node, ALLOC_ARRAY_OF_POSTFIX, \"ALLOC_ARRAY_OF\");\n+                case CHECKCAST_ARRAY_OF -> mergeCompositeNodes(nodes, mergedNodes, i, node, CHECKCAST_ARRAY_OF_POSTFIX, \"CHECKCAST_ARRAY_OF\");\n+                case STORE_OF_CLASS, STORE_B_OF_CLASS, STORE_C_OF_CLASS, STORE_D_OF_CLASS, STORE_F_OF_CLASS, STORE_I_OF_CLASS,\n+                        STORE_L_OF_CLASS, STORE_N_OF_CLASS, STORE_P_OF_CLASS\n+                        -> mergeCompositeNodes(nodes, mergedNodes, i, node, STORE_OF_CLASS_POSTFIX, \"STORE_OF_CLASS\");\n+                case STORE_OF_FIELD -> mergeCompositeNodes(nodes, mergedNodes, i, node, STORE_OF_FIELD_POSTFIX, \"STORE_OF_FIELD\");\n+                case LOAD_OF_CLASS, LOAD_B_OF_CLASS, LOAD_UB_OF_CLASS, LOAD_D_OF_CLASS, LOAD_F_OF_CLASS, LOAD_I_OF_CLASS, LOAD_L_OF_CLASS,\n+                        LOAD_N_OF_CLASS, LOAD_P_OF_CLASS, LOAD_S_OF_CLASS, LOAD_US_OF_CLASS\n+                        -> mergeCompositeNodes(nodes, mergedNodes, i, node, LOAD_OF_CLASS_POSTFIX, \"LOAD_OF_CLASS\");\n+                case LOAD_OF_FIELD -> mergeCompositeNodes(nodes, mergedNodes, i, node, LOAD_OF_FIELD_POSTFIX, \"LOAD_OF_FIELD\");\n+                default -> {\n+                    i--; \/\/ No composite node, do not increment by 2.\n+                    mergedNodes.add(node);\n+                }\n+            }\n+        }\n+        return mergedNodes;\n+    }\n+\n+    private static void mergeCompositeNodes(String[] nodes, List<String> mergedNodes, int i, String node, String postFix, String varName) {\n+        TestFormat.check(i + 1 < nodes.length, \"Must provide class name at index \" + (i + 1) + \" right after \" + varName);\n+        mergedNodes.add(node + Pattern.quote(nodes[i + 1]) + postFix);\n+    }\n+}\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.java","additions":160,"deletions":0,"binary":false,"changes":160,"status":"added"},{"patch":"@@ -0,0 +1,59 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.test.lib.hotspot.ir_framework;\n+\n+\/**\n+ * Exception that is thrown if an {@link IR} rule\/constraint failed. The exception message contains a detailed list of\n+ * all failures, including failing method(s), {@code @IR} rule(s) (the first {@code @IR} constraint is rule 1) and the\n+ * specific regex(es) that could not be matched.\n+ *\n+ * @see IR\n+ * @see Test\n+ *\/\n+public class IRViolationException extends RuntimeException {\n+    private final String compilations;\n+    private String exceptionInfo;\n+\n+    IRViolationException(String message, String compilations) {\n+        super(message);\n+        this.compilations = compilations;\n+    }\n+\n+    \/**\n+     * Get some more detailed information about the violated IR rule(s) and how to reproduce it.\n+     *\n+     * @return a formatted string containing information about the violated IR rule(s) and how to reproduce it.\n+     *\/\n+    public String getExceptionInfo() {\n+        return exceptionInfo;\n+    }\n+\n+    String getCompilations() {\n+        return compilations;\n+    }\n+\n+    void setExceptionInfo(String exceptionInfo) {\n+        this.exceptionInfo = exceptionInfo;\n+    }\n+}\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/IRViolationException.java","additions":59,"deletions":0,"binary":false,"changes":59,"status":"added"},{"patch":"@@ -0,0 +1,35 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.test.lib.hotspot.ir_framework;\n+\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+\n+\/**\n+ * Annotation to allow to specify multiple {@link IR @IR} annotations at a {@link Test @Test} method.\n+ *\/\n+@Retention(RetentionPolicy.RUNTIME)\n+public @interface IRs {\n+    IR[] value();\n+}\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/IRs.java","additions":35,"deletions":0,"binary":false,"changes":35,"status":"added"},{"patch":"@@ -0,0 +1,43 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.test.lib.hotspot.ir_framework;\n+\n+\/**\n+ * Exception that is thrown by the test VM if no tests are run as a result of specifying {@code -DTest} and\/or\n+ * {@code -DExclude} defining an empty set with the used test VM flags.\n+ *\/\n+public class NoTestsRunException extends RuntimeException {\n+\n+    \/**\n+     * Default constructor used by test VM\n+     *\/\n+    NoTestsRunException() {}\n+\n+    \/**\n+     * Constructor used to eventually throw the exception in the driver VM.\n+     *\/\n+    NoTestsRunException(String message) {\n+        super(message);\n+    }\n+}\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/NoTestsRunException.java","additions":43,"deletions":0,"binary":false,"changes":43,"status":"added"},{"patch":"@@ -0,0 +1,104 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.test.lib.hotspot.ir_framework;\n+\n+import java.util.function.BiPredicate;\n+\n+\/**\n+ * Utility class to parse a comparator either in the applyIf* or in the counts properties of an @IR rules.\n+ *\/\n+class ParsedComparator<T extends Comparable<T>> {\n+    private final String strippedString;\n+    private final BiPredicate<T, T> predicate;\n+    private final String comparator;\n+\n+    public ParsedComparator(String strippedString, BiPredicate<T, T> predicate, String comparator) {\n+        this.strippedString = strippedString;\n+        this.predicate = predicate;\n+        this.comparator = comparator;\n+    }\n+\n+    public String getStrippedString() {\n+        return strippedString;\n+    }\n+\n+    public BiPredicate<T, T> getPredicate() {\n+        return predicate;\n+    }\n+\n+    public String getComparator() {\n+        return comparator;\n+    }\n+\n+    \/**\n+     * Return parsed comparator object which provides the predicate to perform the test.\n+     * Allowed comparators: <, <=, >, =>, =, !=\n+     *\/\n+    public static <T extends Comparable<T>> ParsedComparator<T> parseComparator(String value) throws CheckedTestFrameworkException {\n+        BiPredicate<T, T> comparison;\n+        value = value.trim();\n+        String comparator = \"\";\n+        switch (value.charAt(0)) {\n+            case '<':\n+                if (value.charAt(1) == '=') {\n+                    comparator = \"<=\";\n+                    comparison = (x, y) -> x.compareTo(y) <= 0;\n+                    value = value.substring(2).trim();\n+                } else {\n+                    comparator = \"<\";\n+                    comparison = (x, y) -> x.compareTo(y) < 0;\n+                    value = value.substring(1).trim();\n+                }\n+                break;\n+            case '>':\n+                if (value.charAt(1) == '=') {\n+                    comparator = \">=\";\n+                    comparison = (x, y) -> x.compareTo(y) >= 0;\n+                    value = value.substring(2).trim();\n+                } else {\n+                    comparator = \">\";\n+                    comparison = (x, y) -> x.compareTo(y) > 0;\n+                    value = value.substring(1).trim();\n+                }\n+                break;\n+            case '!':\n+                if (value.charAt(1) != '=') {\n+                    throw new CheckedTestFrameworkException(value.substring(0, 1));\n+                }\n+                comparator = \"!=\";\n+                comparison = (x, y) -> x.compareTo(y) != 0;\n+                value = value.substring(2).trim();\n+                break;\n+            case '=': \/\/ Allowed syntax, equivalent to not using any symbol.\n+                comparator = \"=\";\n+                value = value.substring(1).trim();\n+                \/\/ Fall through\n+            default:\n+                comparison = (x, y) -> x.compareTo(y) == 0;\n+                value = value.trim();\n+                break;\n+        }\n+        return new ParsedComparator<>(value, comparison, comparator);\n+    }\n+}\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/ParsedComparator.java","additions":104,"deletions":0,"binary":false,"changes":104,"status":"added"},{"patch":"@@ -0,0 +1,160 @@\n+<h1>IR Test Framework<\/h1>\n+\n+<p>This folder contains a test framework whose main purpose is to perform regex-based checks on the C2 IR shape of test methods emitted by the VM flags <em>-XX:+PrintIdeal<\/em> and <em>-XX:+PrintOptoAssembly<\/em>. The framework can also be used for other non-IR matching (and non-compiler) tests by providing easy to use annotations for commonly used testing patterns and compiler control flags.<\/p>\n+\n+<p>The framework is based on the ideas of the currently present IR test framework in <a href=\"https:\/\/github.com\/openjdk\/valhalla\/blob\/e9c78ce4fcfd01361c35883e0d68f9ae5a80d079\/test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/InlineTypesTest.java\">Valhalla<\/a> and aims to replace it at some point.<\/p>\n+\n+<h2>1. How to Use the Framework<\/h2>\n+\n+<p>The framework is intended to be used in JTreg tests. The JTreg header of the test must contain <code>@library \/test\/lib<\/code> and should be run as a driver with <code>@run driver<\/code>. Annotate the test code with the supported framework annotations and call the framework from within the test's <code>main()<\/code> method. A simple example is shown below:<\/p>\n+\n+<pre><code>\/*\n+ * @test\n+ * @summary A simple test using the test framework.\n+ * @library \/test\/lib\n+ * @run driver my.package.MySimpleTest\n+ *\/\n+\n+package my.package;\n+\n+import jdk.test.lib.hotspot.ir_framework.*;\n+\n+public class MySimpleTest {\n+\n+    public static void main(String[] args) {\n+        TestFramework.run(); \/\/ The framework runs all tests of this class.\n+    }\n+\n+    @Test\n+    @IR(failOn = IRNode.STORE) \/\/ Fail if the IR of myTest() contains any stores.\n+    public void myTest() {\n+        \/* ... *\/\n+    }\n+}\n+<\/code><\/pre>\n+\n+<p>There are various ways how to set up and run a test within the <code>main()<\/code> method of a JTreg test. These are described and can be found in the <a href=\".\/TestFramework.java\">TestFramework<\/a> class.<\/p>\n+\n+<h2>2. Features<\/h2>\n+\n+<p>The framework offers various annotations and flags to control how your test code should be invoked and being checked. This section gives an overview over all these features.<\/p>\n+\n+<h3>2.1 Different Tests<\/h3>\n+\n+<p>There are three kinds of tests depending on how much control is needed over the test invocation.<\/p>\n+\n+<h4>Base Tests<\/h4>\n+\n+<p>The simplest form of testing provides a single <code>@Test<\/code> annotated method which the framework will invoke as part of the testing. The test method has no or well-defined arguments that the framework can automatically provide. <\/p>\n+\n+<p>More information on base tasts with a precise definition can be found in the <a href=\".\/doc\/jdk\/test\/lib\/hotspot\/ir_framework\/Test.html\">Javadocs<\/a>. Concrete examples on how to specify a base test can be found in <a href=\".\/examples\/BaseTestExample.java\">BaseTestsExample<\/a>.<\/p>\n+\n+<h4>Checked Tests<\/h4>\n+\n+<p>The base tests do not provide any way of verification by user code. A checked test enabled that by allowing the user to define an additional <code>@Check<\/code> annotated method which is invoked directly after the <code>@Test<\/code> annotated method. This allows the user to perform various checks about the test method including return value verification.<\/p>\n+\n+<p>More information on checked tasts with a precise definition can be found in the <a href=\".\/doc\/jdk\/test\/lib\/hotspot\/ir_framework\/Check.html\">Javadocs<\/a>. Concrete examples on how to specify a checked test can be found in <a href=\".\/examples\/CheckedTestExample.java\">CheckedTestsExample<\/a>.<\/p>\n+\n+<h4>Custom Run Tests<\/h4>\n+\n+<p>Neither the base nor the checked tests provide any control over how a <code>@Test<\/code> annotated method is invoked in terms of customized argument values and\/or conditions for the invocation itself. A custom run test gives full control over the invocation of the <code>@Test<\/code> annotated method to the user. The framework calls a dedicated <code>@Run<\/code> annotated method from which the user can invoke the <code>@Test<\/code> method according to his\/her needs.<\/p>\n+\n+<p>More information on checked tasts with a precise definition can be found in the <a href=\".\/doc\/jdk\/test\/lib\/hotspot\/ir_framework\/Run.html\">Javadocs<\/a>. Concrete examples on how to specify a custom run test can be found in <a href=\".\/examples\/CustomRunTestExample.java\">CustomRunTestsExample<\/a>.<\/p>\n+\n+<h3>2.2 IR Verification<\/h3>\n+\n+<p>The main feature of this framework is to perform a simple but yet powerful regex-based C2 IR matching on the output of <em>-XX:+PrintIdeal<\/em> and <em>-XX:+PrintOptoAssembly<\/em>. For simplicity, we will refer to the \"IR\" or \"IR matching\" when actually meaning the combined output of <em>-XX:+PrintIdeal<\/em> and <em>-XX:+PrintOptoAssembly<\/em> for a C2 compilation.<\/p>\n+\n+<p>The user has the possibility to add an additional <code>@IR<\/code> annotation to any <code>@Test<\/code> annotated method (regardless of the kind of test mentioned in section 2.1) to specify a constraint\/rule on the compiled IR shape. The <code>@IR<\/code> annotation provides two kinds of regex checks:<\/p>\n+\n+<ul>\n+<li>A <code>failOn<\/code> check that verifies that the provided regex is not matched in the C2 IR.<\/li>\n+<li>A <code>counts<\/code> check that verifies that the provided regex is matched a user defined number of times in the C2 IR.<\/li>\n+<\/ul>\n+\n+<p>A regex can either be a custom string or any of the default regexes provided by the framework in <a href=\"IRNode.java\">IRNode<\/a> for some commonly used IR nodes (also provides the possibility of composite regexes).<\/p>\n+\n+<p>An IR verification cannot (and does not want to) always be performed. For example, a JTreg test could be run with <em>-Xint<\/em> or not a debug build (<em>-XX:+PrintIdeal<\/em> and <em>-XX:+PrintOptoAssembly<\/em> are debug build flags). But also CI tier testing could add additional JTreg VM and Javaoptions flags which could make an IR rule unstable. <\/p>\n+\n+<p>In general, the framework will only perform IR verification if the used VM flags allow a C2 compilation and if non-critical additional JTreg VM and Javaoptions are provided (see whiteflag list in <a href=\".\/TestFramework.java\">TestFramework<\/a>). The user test code, however, can specify any flags which still allow an IR verification to be performed if a C2 compilation is done (expected flags by user defined <code>@IR<\/code> annotations). <\/p>\n+\n+<p>An <code>@IR<\/code> annotation allows additional preconditions\/restrictions on the currently present VM flags to enable or disable rules when certain flags are present or have a specific value (see <code>applyIfXX<\/code> properties of an <code>@IR<\/code> annotation).<\/p>\n+\n+<p>More information about IR matching can be found in the <a href=\".\/doc\/jdk\/test\/lib\/hotspot\/ir_framework\/IR.html\">Javadocs<\/a>. Concrete examples on how to specify IR constraint\/rules can be found in <a href=\".\/examples\/IRExample.java\">IRExample<\/a> and <a href=\".\/tests\/TestIRMatching.java\">TestIRMatching<\/a> (an internal framework test).<\/p>\n+\n+<h3>2.3 Test VM Flags and Scenarios<\/h3>\n+\n+<p>The recommended way to use the framework is by using defining single <code>@run driver<\/code> statement in the JTreg header which, however, does not allow the specification of additional test VM flags. Instead, the user has the possibility to provide VM flags by calling <code>TestFramework.runWithFlags()<\/code> or by creating a <code>TestFramework<\/code> builder object on which <code>addFlags()<\/code> can be called.<\/p>\n+\n+<p>If a user wants to provide multiple flag combinations for a single test, he or she has the option to provide different scenarios. A scenario based flag will always have precedence over other user defined flags. More information about scenarios can be found in the <a href=\".\/doc\/jdk\/test\/lib\/hotspot\/ir_framework\/Scenario.html\">Javadocs<\/a>.<\/p>\n+\n+<h3>2.4 Compiler Controls<\/h3>\n+\n+<p>The framework allows the use of additional compiler control annotations for helper method and classes in the same fashion as JMH does. The following annotations are supported and described in the referenced Javadocs for the annotation class:<\/p>\n+\n+<ul>\n+<li><a href=\".\/doc\/jdk\/test\/lib\/hotspot\/ir_framework\/DontInline.html\">@DontInline<\/a><\/li>\n+<li><a href=\".\/doc\/jdk\/test\/lib\/hotspot\/ir_framework\/ForceInline.html\">@ForceInline<\/a><\/li>\n+<li><a href=\".\/doc\/jdk\/test\/lib\/hotspot\/ir_framework\/DontCompile.html\">@DontCompile<\/a><\/li>\n+<li><a href=\".\/doc\/jdk\/test\/lib\/hotspot\/ir_framework\/DontCompile.html\">@ForceCompile<\/a><\/li>\n+<li><a href=\".\/doc\/jdk\/test\/lib\/hotspot\/ir_framework\/ForceCompileClassInitializer.html\">@ForceCompileClassInitializer<\/a><\/li>\n+<\/ul>\n+\n+<h3>2.5 Framework Debug and Stress Flags<\/h3>\n+\n+<p>The framework provides various stress and debug flags. They should mainly be used as JTreg VM and\/or Javaoptions (apart from <code>VerifyIR<\/code>). The following (property) flags are supported:<\/p>\n+\n+<ul>\n+<li><code>-DVerifyIR=false<\/code>: Explicitly disable IR verification. This is useful, for example, if some scenarios use VM flags that let <code>@IR<\/code> annotation rules fail and the user does not want to provide separate IR rules or add flag preconditions to the already existing IR rules.<\/li>\n+<li><code>-DTest=test1,test2<\/code>: Provide a list of <code>@Test<\/code> method names which should be executed.<\/li>\n+<li><code>-DExclude=test3<\/code>: Provide a list of <code>@Test<\/code> method names which should be excluded from execution.<\/li>\n+<li><code>-DScenarios=1,2<\/code>: Provide a list of scenario indexes to specify which scenarios that should be executed.<\/li>\n+<li><code>-DWarmup=200<\/code>: Provide a new default value of the number of warm-up iterations. This might have an influence on the resulting IR and could lead to matching failures (the user can also set a fixed default warm-up value in a test with <code>testFrameworkObject.setDefaultWarmup(200)<\/code>).<\/li>\n+<li><code>-DVerbose=true<\/code>: Enable more fain-grained logging (slows the execution down).<\/li>\n+<li><code>-DReproduce=true<\/code>: Flag to use when directly running a test VM to bypass dependencies to the driver VM state (for example, when reproducing an issue).<\/li>\n+<li><code>-DPrintTimes=true<\/code>: Print the execution time measurements of each executed test.<\/li>\n+<li><code>-DVerifyVM=true<\/code>: The framework runs the test VM with additional verification flags (slows the execution down).<\/li>\n+<li><code>-DExcluceRandom=true<\/code>: The framework randomly excludes some methods from compilation. IR verification is disabled completely with this flag.<\/li>\n+<li><code>-DFlipC1C2=true<\/code>: The framework compiles all <code>@Test<\/code> annotated method with C1 if a C2 compilation would have been applied and vice versa. IR verification is disabled completely with this flag.<\/li>\n+<li><code>-DShuffleTests=false<\/code>: Disables the shuffling of tests (a shuffling is always done by default).<\/li>\n+<li><code>-DDumpReplay=true<\/code>: Add the <code>DumpReplay<\/code> directive to the test VM.<\/li>\n+<li><code>-DGCAfter=true<\/code>: Perform <code>System.gc()<\/code> after each test (slows the execution don).<\/li>\n+<\/ul>\n+\n+<h2>3. Test Framework Execution<\/h2>\n+\n+<p>This section gives an overview of how the framework is executing a JTreg test that calls the framework from within its <code>main()<\/code> method.<\/p>\n+\n+<p>The framework will spawn a new \"test VM\" to execute the user defined tests. The test VM collects all tests of the test class specified by the user code in <code>main()<\/code> and ensures that there is no violation of the required format by the framework. In a next step, the framework does the following for each test in general:\n+1. Warm the test up for a predefined number of times (default 2000). This can also be adapted for all tests by using <code>testFrameworkobject.setDefaultWarmup(100)<\/code> or for individual tests with an additional <a href=\".\/doc\/jdk\/test\/lib\/hotspot\/ir_framework\/Warmup.html\">@Warmup<\/a> annotation. \n+2. After the warm-up is finished, the framework compiles the associated <code>@Test<\/code> annotated method at the specified compilation level (default: C2).\n+3. After the compilation, the test is invokes one more time.<\/p>\n+\n+<p>Once the test VM terminates, IR verification (if possible) is performed on the output of the test VM. If any test throws an exception during its execution or if IR matching fails, the failures are collected and reported in a pretty format. Check the standard error and output for more information and how to reproduce these failures.<\/p>\n+\n+<p>Some of the steps above can be different due to the kind of the test or due to using non-default annotation properties. These details and differences are discribed in the Javadocs for the three tests (see section 2.1 Different Tests).<\/p>\n+\n+<p>More information about the internals and the workflow of the framework can be found at <a href=\".\/doc\/jdk\/test\/lib\/hotspot\/ir_framework\/TestFramework.html\">TestFramework<\/a>.  <\/p>\n+\n+<h2>4. Internal Framework Tests<\/h2>\n+\n+<p>There are various tests to verify the correctness of the test framework. These tests can be found in <a href=\"tests\">tests<\/a> and can directly be run with JTreg. The tests are not part of the normal JTreg tests of HotSpot and should only be run upon changing the framework code as a minimal form of testing.<\/p>\n+\n+<p>Additional testing was performed by converting all compiler Inline Types tests that used the currently present IR test framework in Valhalla (see <a href=\"https:\/\/bugs.openjdk.java.net\/browse\/JDK-8263024\">JDK-8263024<\/a>). It is strongly advised to make sure a change to the framework still lets these converted tests in Valhalla pass as part of an additional testing step.<\/p>\n+\n+<h2>5. Future Work<\/h2>\n+\n+<p>This framework is based on the idea of the currently present IR test framework in <a href=\"https:\/\/github.com\/openjdk\/valhalla\/blob\/e9c78ce4fcfd01361c35883e0d68f9ae5a80d079\/test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/InlineTypesTest.java\">Valhalla<\/a>. This IR framework was used with great success in Valhalla and thus served as a foundation for this new IR framework.<\/p>\n+\n+<p>The new framework supports all the features that are present in the Valhalla IR framework with the idea to replace it at some point. The initial design and feature set was kept simple and straight forward and serves well for small to medium sized tests. There are a lot of possibilities to further enhance the framework and make it more powerful. This can be tackled in additional RFEs. A few ideas include:<\/p>\n+\n+<ul>\n+<li>Provide more default IR regexes (e.g. for vector nodes etc.) in <a href=\".\/IRNode.java\">IRNode<\/a> (<a href=\"https:\/\/bugs.openjdk.java.net\/browse\/JDK-8265197\">JDK-8265197<\/a>).<\/li>\n+<li>Parsing the IR directly to perform queries on it, walking it, searching it, match on IR node properties etc. (<a href=\"https:\/\/bugs.openjdk.java.net\/browse\/JDK-8265198\">JDK-8265198<\/a>).<\/li>\n+<li>Investigate more verification possibilities based on additional\/other flags (e.g. <em>-XX:+PrintIdealGraph<\/em>, <em>-XX:+TraceNewVectors<\/em> etc.) (<a href=\"https:\/\/bugs.openjdk.java.net\/browse\/JDK-8265200\">JDK-8265200<\/a>).<\/li>\n+<li>More interface methods for verification in checked and custom run tests.<\/li>\n+<li>More stress\/debug framework flags.<\/li>\n+<li>Additional check possibilities in <code>@IR<\/code> annotations. <\/li>\n+<\/ul>\n+\n+<p>More information can be found in the JBS issue <a href=\"https:\/\/bugs.openjdk.java.net\/browse\/JDK-8254129\">JDK-8254129<\/a> (the initial IR Test Framework RFE).<\/p>\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/README.html","additions":160,"deletions":0,"binary":false,"changes":160,"status":"added"},{"patch":"@@ -0,0 +1,137 @@\n+# IR Test Framework\n+This folder contains a test framework whose main purpose is to perform regex-based checks on the C2 IR shape of test methods emitted by the VM flags _-XX:+PrintIdeal_ and _-XX:+PrintOptoAssembly_. The framework can also be used for other non-IR matching (and non-compiler) tests by providing easy to use annotations for commonly used testing patterns and compiler control flags.\n+\n+The framework is based on the ideas of the currently present IR test framework in [Valhalla](https:\/\/github.com\/openjdk\/valhalla\/blob\/e9c78ce4fcfd01361c35883e0d68f9ae5a80d079\/test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/InlineTypesTest.java) and aims to replace it at some point.\n+\n+## 1. How to Use the Framework\n+The framework is intended to be used in JTreg tests. The JTreg header of the test must contain `@library \/test\/lib` and should be run as a driver with `@run driver`. Annotate the test code with the supported framework annotations and call the framework from within the test's `main()` method. A simple example is shown below:\n+\n+    \/*\n+     * @test\n+     * @summary A simple test using the test framework.\n+     * @library \/test\/lib\n+     * @run driver my.package.MySimpleTest\n+     *\/\n+    \n+    package my.package;\n+    \n+    import jdk.test.lib.hotspot.ir_framework.*;\n+\n+    public class MySimpleTest {\n+        \n+        public static void main(String[] args) {\n+            TestFramework.run(); \/\/ The framework runs all tests of this class.\n+        }\n+    \n+        @Test\n+        @IR(failOn = IRNode.STORE) \/\/ Fail if the IR of myTest() contains any stores.\n+        public void myTest() {\n+            \/* ... *\/\n+        }\n+    }\n+\n+There are various ways how to set up and run a test within the `main()` method of a JTreg test. These are described and can be found in the [TestFramework](.\/TestFramework.java) class.\n+   \n+## 2. Features\n+ The framework offers various annotations and flags to control how your test code should be invoked and being checked. This section gives an overview over all these features.\n+\n+### 2.1 Different Tests\n+There are three kinds of tests depending on how much control is needed over the test invocation.\n+#### Base Tests\n+The simplest form of testing provides a single `@Test` annotated method which the framework will invoke as part of the testing. The test method has no or well-defined arguments that the framework can automatically provide. \n+\n+More information on base tasts with a precise definition can be found in the [Javadocs](.\/doc\/jdk\/test\/lib\/hotspot\/ir_framework\/Test.html). Concrete examples on how to specify a base test can be found in [BaseTestsExample](.\/examples\/BaseTestExample.java).\n+\n+#### Checked Tests\n+The base tests do not provide any way of verification by user code. A checked test enabled that by allowing the user to define an additional `@Check` annotated method which is invoked directly after the `@Test` annotated method. This allows the user to perform various checks about the test method including return value verification.\n+\n+More information on checked tasts with a precise definition can be found in the [Javadocs](.\/doc\/jdk\/test\/lib\/hotspot\/ir_framework\/Check.html). Concrete examples on how to specify a checked test can be found in [CheckedTestsExample](.\/examples\/CheckedTestExample.java).\n+\n+#### Custom Run Tests\n+Neither the base nor the checked tests provide any control over how a `@Test` annotated method is invoked in terms of customized argument values and\/or conditions for the invocation itself. A custom run test gives full control over the invocation of the `@Test` annotated method to the user. The framework calls a dedicated `@Run` annotated method from which the user can invoke the `@Test` method according to his\/her needs.\n+\n+More information on checked tasts with a precise definition can be found in the [Javadocs](.\/doc\/jdk\/test\/lib\/hotspot\/ir_framework\/Run.html). Concrete examples on how to specify a custom run test can be found in [CustomRunTestsExample](.\/examples\/CustomRunTestExample.java).\n+\n+### 2.2 IR Verification\n+The main feature of this framework is to perform a simple but yet powerful regex-based C2 IR matching on the output of _-XX:+PrintIdeal_ and _-XX:+PrintOptoAssembly_. For simplicity, we will refer to the \"IR\" or \"IR matching\" when actually meaning the combined output of _-XX:+PrintIdeal_ and _-XX:+PrintOptoAssembly_ for a C2 compilation.\n+\n+The user has the possibility to add an additional `@IR` annotation to any `@Test` annotated method (regardless of the kind of test mentioned in section 2.1) to specify a constraint\/rule on the compiled IR shape. The `@IR` annotation provides two kinds of regex checks:\n+\n+ - A `failOn` check that verifies that the provided regex is not matched in the C2 IR.\n+ - A `counts` check that verifies that the provided regex is matched a user defined number of times in the C2 IR.\n+ \n+A regex can either be a custom string or any of the default regexes provided by the framework in [IRNode](IRNode.java) for some commonly used IR nodes (also provides the possibility of composite regexes).\n+\n+An IR verification cannot (and does not want to) always be performed. For example, a JTreg test could be run with _-Xint_ or not a debug build (_-XX:+PrintIdeal_ and _-XX:+PrintOptoAssembly_ are debug build flags). But also CI tier testing could add additional JTreg VM and Javaoptions flags which could make an IR rule unstable. \n+\n+In general, the framework will only perform IR verification if the used VM flags allow a C2 compilation and if non-critical additional JTreg VM and Javaoptions are provided (see whiteflag list in [TestFramework](.\/TestFramework.java)). The user test code, however, can specify any flags which still allow an IR verification to be performed if a C2 compilation is done (expected flags by user defined `@IR` annotations). \n+\n+An `@IR` annotation allows additional preconditions\/restrictions on the currently present VM flags to enable or disable rules when certain flags are present or have a specific value (see `applyIfXX` properties of an `@IR` annotation).\n+\n+More information about IR matching can be found in the [Javadocs](.\/doc\/jdk\/test\/lib\/hotspot\/ir_framework\/IR.html). Concrete examples on how to specify IR constraint\/rules can be found in [IRExample](.\/examples\/IRExample.java) and [TestIRMatching](.\/tests\/TestIRMatching.java) (an internal framework test).\n+\n+### 2.3 Test VM Flags and Scenarios\n+The recommended way to use the framework is by using defining single `@run driver` statement in the JTreg header which, however, does not allow the specification of additional test VM flags. Instead, the user has the possibility to provide VM flags by calling `TestFramework.runWithFlags()` or by creating a `TestFramework` builder object on which `addFlags()` can be called.\n+\n+If a user wants to provide multiple flag combinations for a single test, he or she has the option to provide different scenarios. A scenario based flag will always have precedence over other user defined flags. More information about scenarios can be found in the [Javadocs](.\/doc\/jdk\/test\/lib\/hotspot\/ir_framework\/Scenario.html).\n+\n+### 2.4 Compiler Controls\n+The framework allows the use of additional compiler control annotations for helper method and classes in the same fashion as JMH does. The following annotations are supported and described in the referenced Javadocs for the annotation class:\n+\n+- [@DontInline](.\/doc\/jdk\/test\/lib\/hotspot\/ir_framework\/DontInline.html)\n+- [@ForceInline](.\/doc\/jdk\/test\/lib\/hotspot\/ir_framework\/ForceInline.html)\n+- [@DontCompile](.\/doc\/jdk\/test\/lib\/hotspot\/ir_framework\/DontCompile.html)\n+- [@ForceCompile](.\/doc\/jdk\/test\/lib\/hotspot\/ir_framework\/DontCompile.html)\n+- [@ForceCompileClassInitializer](.\/doc\/jdk\/test\/lib\/hotspot\/ir_framework\/ForceCompileClassInitializer.html)\n+\n+### 2.5 Framework Debug and Stress Flags\n+The framework provides various stress and debug flags. They should mainly be used as JTreg VM and\/or Javaoptions (apart from `VerifyIR`). The following (property) flags are supported:\n+\n+- `-DVerifyIR=false`: Explicitly disable IR verification. This is useful, for example, if some scenarios use VM flags that let `@IR` annotation rules fail and the user does not want to provide separate IR rules or add flag preconditions to the already existing IR rules.\n+- `-DTest=test1,test2`: Provide a list of `@Test` method names which should be executed.\n+- `-DExclude=test3`: Provide a list of `@Test` method names which should be excluded from execution.\n+- `-DScenarios=1,2`: Provide a list of scenario indexes to specify which scenarios that should be executed.\n+- `-DWarmup=200`: Provide a new default value of the number of warm-up iterations. This might have an influence on the resulting IR and could lead to matching failures (the user can also set a fixed default warm-up value in a test with `testFrameworkObject.setDefaultWarmup(200)`).\n+- `-DVerbose=true`: Enable more fain-grained logging (slows the execution down).\n+- `-DReproduce=true`: Flag to use when directly running a test VM to bypass dependencies to the driver VM state (for example, when reproducing an issue).\n+- `-DPrintTimes=true`: Print the execution time measurements of each executed test.\n+- `-DVerifyVM=true`: The framework runs the test VM with additional verification flags (slows the execution down).\n+- `-DExcluceRandom=true`: The framework randomly excludes some methods from compilation. IR verification is disabled completely with this flag.\n+- `-DFlipC1C2=true`: The framework compiles all `@Test` annotated method with C1 if a C2 compilation would have been applied and vice versa. IR verification is disabled completely with this flag.\n+- `-DShuffleTests=false`: Disables the shuffling of tests (a shuffling is always done by default).\n+- `-DDumpReplay=true`: Add the `DumpReplay` directive to the test VM.\n+- `-DGCAfter=true`: Perform `System.gc()` after each test (slows the execution don).\n+\n+\n+## 3. Test Framework Execution\n+This section gives an overview of how the framework is executing a JTreg test that calls the framework from within its `main()` method.\n+\n+The framework will spawn a new \"test VM\" to execute the user defined tests. The test VM collects all tests of the test class specified by the user code in `main()` and ensures that there is no violation of the required format by the framework. In a next step, the framework does the following for each test in general:\n+1. Warm the test up for a predefined number of times (default 2000). This can also be adapted for all tests by using `testFrameworkobject.setDefaultWarmup(100)` or for individual tests with an additional [@Warmup](.\/doc\/jdk\/test\/lib\/hotspot\/ir_framework\/Warmup.html) annotation. \n+2. After the warm-up is finished, the framework compiles the associated `@Test` annotated method at the specified compilation level (default: C2).\n+3. After the compilation, the test is invokes one more time.\n+\n+Once the test VM terminates, IR verification (if possible) is performed on the output of the test VM. If any test throws an exception during its execution or if IR matching fails, the failures are collected and reported in a pretty format. Check the standard error and output for more information and how to reproduce these failures.\n+\n+Some of the steps above can be different due to the kind of the test or due to using non-default annotation properties. These details and differences are discribed in the Javadocs for the three tests (see section 2.1 Different Tests).\n+\n+More information about the internals and the workflow of the framework can be found at [TestFramework](.\/doc\/jdk\/test\/lib\/hotspot\/ir_framework\/TestFramework.html).  \n+ \n+## 4. Internal Framework Tests\n+There are various tests to verify the correctness of the test framework. These tests can be found in [tests](tests) and can directly be run with JTreg. The tests are not part of the normal JTreg tests of HotSpot and should only be run upon changing the framework code as a minimal form of testing.\n+\n+Additional testing was performed by converting all compiler Inline Types tests that used the currently present IR test framework in Valhalla (see [JDK-8263024](https:\/\/bugs.openjdk.java.net\/browse\/JDK-8263024)). It is strongly advised to make sure a change to the framework still lets these converted tests in Valhalla pass as part of an additional testing step.\n+\n+## 5. Future Work\n+This framework is based on the idea of the currently present IR test framework in [Valhalla](https:\/\/github.com\/openjdk\/valhalla\/blob\/e9c78ce4fcfd01361c35883e0d68f9ae5a80d079\/test\/hotspot\/jtreg\/runtime\/valhalla\/inlinetypes\/InlineTypesTest.java). This IR framework was used with great success in Valhalla and thus served as a foundation for this new IR framework.\n+ \n+ The new framework supports all the features that are present in the Valhalla IR framework with the idea to replace it at some point. The initial design and feature set was kept simple and straight forward and serves well for small to medium sized tests. There are a lot of possibilities to further enhance the framework and make it more powerful. This can be tackled in additional RFEs. A few ideas include:\n+\n+- Provide more default IR regexes (e.g. for vector nodes etc.) in [IRNode](.\/IRNode.java) ([JDK-8265197](https:\/\/bugs.openjdk.java.net\/browse\/JDK-8265197)).\n+- Parsing the IR directly to perform queries on it, walking it, searching it, match on IR node properties etc. ([JDK-8265198](https:\/\/bugs.openjdk.java.net\/browse\/JDK-8265198)).\n+- Investigate more verification possibilities based on additional\/other flags (e.g. _-XX:+PrintIdealGraph_, _-XX:+TraceNewVectors_ etc.) ([JDK-8265200](https:\/\/bugs.openjdk.java.net\/browse\/JDK-8265200)).\n+- More interface methods for verification in checked and custom run tests.\n+- More stress\/debug framework flags.\n+- Additional check possibilities in `@IR` annotations. \n+\n+More information can be found in the JBS issue [JDK-8254129](https:\/\/bugs.openjdk.java.net\/browse\/JDK-8254129) (the initial IR Test Framework RFE).\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/README.md","additions":137,"deletions":0,"binary":false,"changes":137,"status":"added"},{"patch":"@@ -0,0 +1,108 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.test.lib.hotspot.ir_framework;\n+\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+\n+\/**\n+ * Annotation for a run method of a <b>custom run test<\/b>.\n+ *\n+ * <p>\n+ * Let {@code t} be a test method specifying the {@link Test @Test} annotation and {@code r} be a run method specifying\n+ * the {@code @Run(test = \"t\")} annotation. These two methods represent a so-called <i>custom run test<\/i>. The only\n+ * difference to a <i>base test<\/i> (see {@link Test}) is that the framework will not invoke the test method {@code t}\n+ * but instead the run method {@code r} which is then responsible to invoke {@code t} in any way and optionally do any\n+ * additional verification (e.g. of the return value). If {@code r} does not specify {@link RunMode#STANDALONE} as\n+ * {@link #mode()} property, the framework does the following, similar as for <i>base tests<\/i>:\n+ * <ol>\n+ *     <li><p>The framework warms {@code r} up by invoking it for a predefined number of iterations (default: 2000)\n+ *            or any number specified by an additional {@link Warmup} annotation at the run method {@code r} or by using\n+ *            {@link TestFramework#setDefaultWarmup(int)} (could also be 0 which skips the warm-up completely which is\n+ *            similar to simulating {@code -Xcomp}). More information about the warm-up in general can be found in\n+ *            {@link Warmup @Warmup}.<\/li>\n+ *     <li><p>After the warm-up, the framework compiles the test method {@code t} at the specified compilation level set by\n+ *            {@link Test#compLevel()} (default {@link CompLevel#ANY} will pick the highest available level which is usually\n+ *            {@link CompLevel#C2}).<\/li>\n+ *     <li><p>The framework invokes the run method {@code r} one more time to check the compilation.<\/li>\n+ *     <li><p>The framework checks any specified {@link IR @IR} constraints at the test method {@code t}.\n+ *            More information about IR matching can be found at {@link IR}.<\/li>\n+ * <\/ol>\n+ *\n+ * <p>\n+ *  If {@code r} specifies {@link RunMode#STANDALONE} as {@link #mode()} property, the framework gives complete\n+ *  control to the run method {@code r}:\n+ * <ol>\n+ *     <li><p>The framework invokes the run method {@code r} only one time without any warm-up or compilation of\n+ *            {@code t} ({@link Warmup @Warmup} is not allowed at {@code r} in this case).<\/li>\n+ *     <li><p>After this single invocation, the framework directly checks any specified {@link IR} constraints at the test\n+ *            method {@code t}. The run method {@code r} needs to make sure to reliably trigger a C2 compilation. Otherwise,\n+ *            IR matching will fail. More information about IR matching can be found at {@link IR}.<\/li>\n+ * <\/ol>\n+ *\n+ * <p>\n+ * The test method {@code t} and run method {@code r} have the following properties:\n+ * <ul>\n+ *     <li><p>{@code t} can specify any parameter or return type except {@link AbstractInfo} or any of its subclasses.<\/li>\n+ *     <li><p>{@code t} is not inlined.\n+ *     <li><p>{@code r} is not compiled nor inlined.\n+ *     <li><p>{@code r} is responsible to invoke {@code t} in any way (once, multiple times or even skipping on some\n+ *                      invocations of {@code r}).\n+ *     <li><p>{@code r} can specify the following method parameter combinations:\n+ *     <ul>\n+ *         <li><p>void<\/li>\n+ *         <li><p>One parameter: {@link RunInfo} which provides some information about {@code t} and utility methods.<\/li>\n+ *         <li><p>Any other combination will result in a {@link TestFormatException}.\n+ *     <\/ul>\n+ *     <li><p>{@code t} and {@code r} must be part of the test class. Using {@code @Run} and {@code @Test} in nested or\n+ *             other helper classes is not allowed.<\/li>\n+ *     <li><p>{@code t} and {@code r} cannot specify any helper-method-specific compile command annotations\n+ *            ({@link ForceCompile @ForceCompile}, {@link DontCompile @DontCompile}, {@link ForceInline @ForceInline},\n+ *            {@link DontInline @DontInline}).<\/li>\n+ * <\/ul>\n+ *\n+ * <p>\n+ * Examples on how to write custom run tests can be found in {@link jdk.test.lib.hotspot.ir_framework.examples.CustomRunTestExample}\n+ * and also as part of the internal testing in the package {@link jdk.test.lib.hotspot.ir_framework.tests}.\n+ *\n+ * @see Test\n+ * @see RunInfo\n+ * @see RunMode\n+ *\/\n+@Retention(RetentionPolicy.RUNTIME)\n+public @interface Run {\n+\n+    \/**\n+     * The associated {@link Test @Test} methods (one or more) for for this {@code @Run} annotated run method.\n+     * The framework directly invokes the run method instead of the associated {@code @Test} methods.\n+     *\/\n+    String[] test();\n+\n+    \/**\n+     * The mode of this custom run test.\n+     *\n+     * @see RunMode\n+     *\/\n+    RunMode mode() default RunMode.NORMAL;\n+}\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/Run.java","additions":108,"deletions":0,"binary":false,"changes":108,"status":"added"},{"patch":"@@ -0,0 +1,233 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.test.lib.hotspot.ir_framework;\n+\n+import java.lang.reflect.Method;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+\/**\n+ * Test info class which provides some useful utility methods and information about a <b>custom run test<\/b>.\n+ *\n+ * @see Run\n+ *\/\n+public class RunInfo extends AbstractInfo {\n+    private final Method testMethod;\n+    private final DeclaredTest test;\n+    private final Map<String, DeclaredTest> tests;\n+    private final boolean hasMultipleTests;\n+\n+    RunInfo(List<DeclaredTest> tests) {\n+        super(tests.get(0).getTestMethod().getDeclaringClass());\n+        this.test = tests.get(0);\n+        this.testMethod = test.getTestMethod();\n+        this.hasMultipleTests = tests.size() != 1;\n+        if (hasMultipleTests) {\n+            this.tests = new HashMap<>();\n+            for (DeclaredTest test : tests) {\n+                this.tests.put(test.getTestMethod().getName(), test);\n+            }\n+        } else {\n+            this.tests = null;\n+        }\n+    }\n+\n+    \/**\n+     * Get the associated test method object of this custom run test. This method can only be called if <i>one<\/i> test\n+     * method is specified in the custom run test ({@link Run#test()}). Otherwise, use {@link #getTest(String)}.\n+     *\n+     * @return the associated test method object.\n+     * @throws TestRunException if called for a custom run test that specifies multiple test methods in {@link Run#test()}.\n+     *\/\n+    public Method getTest() {\n+        checkSingleTest(\"getTest\");\n+        return testMethod;\n+    }\n+\n+    \/**\n+     * Get the associated method object of the test method with the name {@code testName}. This method can only be called\n+     * if the custom run test specifies more than one test method in ({@link Run#test()}). Otherwise, use {@link #getTest()}.\n+     *\n+     * @param testName the test method for which the method object should be returned.\n+     * @return the associated test method object with the name {@code testName}.\n+     * @throws TestRunException if there is no test method with the name {@code testName} or if called with only\n+     *         <i>one<\/i> associated test method.\n+     *\/\n+    public Method getTest(String testName) {\n+        checkMultipleTests(\"getTest\");\n+        return getMethod(testName);\n+    }\n+\n+    \/**\n+     * Return a boolean indicating if the framework skipped a compilation of the associated test method after the warm-up\n+     * due to VM flags not allowing a compilation on the requested level in {@link Test#compLevel()}. This method can only\n+     * be called if <i>one<\/i> test method is specified in the custom run test ({@link Run#test()}). Otherwise, use\n+     * {@link #isCompilationSkipped(String)}.\n+     *\n+     * @return {@code true} if the framework compiled the test;\n+     *         {@code false} otherwise.\n+     * @throws TestRunException if called for a custom run test that specifies multiple test methods in {@link Run#test()}.\n+     *\/\n+    public boolean isCompilationSkipped() {\n+        checkSingleTest(\"isCompilationSkipped\");\n+        return test.getCompLevel() == CompLevel.SKIP;\n+    }\n+\n+    \/**\n+     * Return a boolean indicating if the framework skipped a compilation of the associated test method with the name\n+     * {@code testName} after the warm-up due to VM flags not allowing a compilation on the requested level in\n+     * {@link Test#compLevel()}. This method can only be called if the custom run test specifies more than one test method\n+     * in ({@link Run#test()}). Otherwise, use {@link #isCompilationSkipped()}.\n+     *\n+     * @param testName the test method for which the method object should be returned.\n+     * @return {@code true} if the framework compiled the test;\n+     *         {@code false} otherwise.\n+     * @throws TestRunException if there is no test method with the name {@code testName} or if called with only\n+     *         <i>one<\/i> associated test method.\n+     *\/\n+    public boolean isCompilationSkipped(String testName) {\n+        checkMultipleTests(\"isCompilationSkipped\");\n+        return getDeclaredTest(testName).getCompLevel() == CompLevel.SKIP;\n+    }\n+\n+    \/**\n+     * Returns a boolean indicating if the associated test method is C1 compiled. This method can only be called if\n+     * <i>one<\/i> test method is specified in the custom run test ({@link Run#test()}). Otherwise, use\n+     * {@link #isTestC1Compiled(String)}.\n+     *\n+     * @return {@code true} if the associated test method is C1 compiled;\n+     *         {@code false} otherwise.\n+     * @throws TestRunException if called for a custom run test that specifies multiple test methods in {@link Run#test()}.\n+     *\/\n+    public boolean isTestC1Compiled() {\n+        checkSingleTest(\"isTestC1Compiled\");\n+        return TestFrameworkExecution.isC1Compiled(testMethod);\n+    }\n+\n+    \/**\n+     * Returns a boolean indicating if the associated test method with the name {@code testName} is C1 compiled.\n+     * This method can only be called if the custom run test specifies more than one test method in ({@link Run#test()}).\n+     * Otherwise, use {@link #isTestC1Compiled()}.\n+     *\n+     * @param testName the name of the test method.\n+     * @return {@code true} if the test method with the name {@code testName} is C1 compiled;\n+     *         {@code false} otherwise.\n+     * @throws TestRunException if there is no test method with the name {@code testName} or if called with only\n+     *         <i>one<\/i> associated test method.\n+     *\/\n+    public boolean isTestC1Compiled(String testName) {\n+        checkMultipleTests(\"isTestC1Compiled\");\n+        return TestFrameworkExecution.isC1Compiled(getMethod(testName));\n+    }\n+\n+    \/**\n+     * Returns a boolean indicating if the associated test method is C2 compiled. This method can only be called if\n+     * <i>one<\/i> test method is specified in the custom run test ({@link Run#test()}). Otherwise, use\n+     * {@link #isTestC2Compiled(String)}.\n+     *\n+     * @return {@code true} if the associated test method is C2 compiled;\n+     *         {@code false} otherwise.\n+     * @throws TestRunException if called for a custom run test that specifies multiple test methods in {@link Run#test()}.\n+     *\/\n+    public boolean isTestC2Compiled() {\n+        checkSingleTest(\"isTestC2Compiled\");\n+        return TestFrameworkExecution.isC2Compiled(testMethod);\n+    }\n+\n+    \/**\n+     * Returns a boolean indicating if the associated test method with the name {@code testName} is C2 compiled.\n+     * This method can only be called if the custom run test specifies more than one test method in ({@link Run#test()}).\n+     * Otherwise, use {@link #isTestC2Compiled()}.\n+     *\n+     * @param testName the name of the test method.\n+     * @return {@code true} if the test method with the name {@code testName} is C2 compiled;\n+     *         {@code false} otherwise.\n+     * @throws TestRunException if there is no test method with the name {@code testName} or if called with only\n+     *         <i>one<\/i> associated test method.\n+     *\/\n+    public boolean isTestC2Compiled(String testName) {\n+        checkMultipleTests(\"isTestC2Compiled\");\n+        return TestFrameworkExecution.isC2Compiled(getMethod(testName));\n+    }\n+\n+    \/**\n+     * Returns a boolean indicating if the associated test method is compiled at {@code compLevel}. This method can only\n+     * be called if <i>one<\/i> test method is specified in the custom run test ({@link Run#test()}).\n+     * Otherwise, use {@link #isTestCompiledAtLevel(String, CompLevel)}.\n+     *\n+     * @param compLevel the compilation level\n+     * @return {@code true} if the associated test method is compiled at {@code compLevel};\n+     *         {@code false} otherwise.\n+     * @throws TestRunException if called for a custom run test that specifies multiple test methods in {@link Run#test()}.\n+     *\/\n+    public boolean isTestCompiledAtLevel(CompLevel compLevel) {\n+        checkSingleTest(\"isTestCompiledAtLevel\");\n+        return TestFrameworkExecution.isCompiledAtLevel(testMethod, compLevel);\n+    }\n+\n+    \/**\n+     * Returns a boolean indicating if the associated test method with the name {@code testName} is compiled at\n+     * {@code compLevel}. This method can only be called if the custom run test specifies more than one test method\n+     * in ({@link Run#test()}). Otherwise, use {@link #isTestCompiledAtLevel(CompLevel)}.\n+     *\n+     * @param testName the name of the test method.\n+     * @param compLevel the compilation level.\n+     * @return {@code true} if the test method with the name {@code testName} is compiled at {@code compLevel};\n+     *         {@code false} otherwise.\n+     * @throws TestRunException if there is no test method with the name {@code testName} oor if called with only\n+     *         <i>one<\/i> associated test method.\n+     *\/\n+    public boolean isTestCompiledAtLevel(String testName, CompLevel compLevel) {\n+        checkMultipleTests(\"isTestCompiledAtLevel\");\n+        return TestFrameworkExecution.isCompiledAtLevel(getMethod(testName), compLevel);\n+    }\n+\n+    private void checkSingleTest(String calledMethod) {\n+        if (hasMultipleTests) {\n+            throw new TestRunException(\"Use \" + calledMethod + \"(String) with testName String argument in @Run method \" +\n+                                       \"for custom run test that specifies more than one @Test method.\");\n+        }\n+    }\n+\n+    private void checkMultipleTests(String calledMethod) {\n+        if (!hasMultipleTests) {\n+            throw new TestRunException(\"Use \" + calledMethod + \"() without testName String argument in @Run method \" +\n+                                       \"for custom run test that specifies exactly one @Test method.\");\n+        }\n+    }\n+\n+    private DeclaredTest getDeclaredTest(String testName) {\n+        DeclaredTest test = tests.get(testName);\n+        if (test == null) {\n+            throw new TestRunException(\"Could not find @Test \\\"\" + testName + \"\\\" in \" + testClass + \" being associated with\" +\n+                                       \" corresponding @Run method.\");\n+        }\n+        return test;\n+    }\n+\n+    private Method getMethod(String testName) {\n+        return getDeclaredTest(testName).getTestMethod();\n+    }\n+}\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/RunInfo.java","additions":233,"deletions":0,"binary":false,"changes":233,"status":"added"},{"patch":"@@ -0,0 +1,43 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.test.lib.hotspot.ir_framework;\n+\n+\/**\n+ * The run mode for a <b>custom run test<\/b> specified in {@link Run#mode}.\n+ *\n+ * @see Run\n+ *\/\n+public enum RunMode {\n+    \/**\n+     * Default mode: First warm up the run method (if a warm-up is done), then compile the associated {@link Test}\n+     * method and finally invoke the run method once more.\n+     *\/\n+    NORMAL,\n+    \/**\n+     * Standalone mode: There is no warm-up and no compilation done by the framework. The run method is responsible to\n+     * trigger the compilation(s), especially in regard of possible {@link IR} annotations at the associated {@link Test}\n+     * method.\n+     *\/\n+    STANDALONE\n+}\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/RunMode.java","additions":43,"deletions":0,"binary":false,"changes":43,"status":"added"},{"patch":"@@ -0,0 +1,146 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.test.lib.hotspot.ir_framework;\n+\n+import java.util.*;\n+\n+\/**\n+ * This class represents a scenario that can be executed by the {@link TestFramework}.\n+ * <p>\n+ * A JTreg test should use the test framework with {@code @run driver} (without directly specify any additional flags).\n+ * If a test should run with additional flags, use {@link TestFramework#runWithFlags(String...)} or\n+ * {@link TestFramework#addFlags(String...)}. If, however, the test should be run with different settings (equivalent\n+ * to having multiple {@code @run} entries in a normal JTreg test), use scenarios. A scenario will be run with the\n+ * scenario specific VM flags, if any, and optionally specified VM flags with {@link TestFramework#addFlags(String...)}\n+ * whereas scenario VM flags will have precedence.\n+ * <p>\n+ * There is also the possibility to specify additional VM flags for all scenarios by using {@code DScenarioFlags}.\n+ *\n+ * @see TestFramework\n+ *\/\n+public class Scenario {\n+    private static final String ADDITIONAL_SCENARIO_FLAGS = System.getProperty(\"ScenarioFlags\", \"\");\n+    private static final String SCENARIOS = System.getProperty(\"Scenarios\", \"\");\n+    private static final List<String> additionalScenarioFlags = new ArrayList<>();\n+    private static final Set<Integer> enabledScenarios = new HashSet<>();\n+\n+    private final List<String> flags;\n+    private final int index;\n+    private final boolean enabled;\n+    private String testVMOutput;\n+\n+    static {\n+        if (!SCENARIOS.isEmpty()) {\n+            System.out.println(Arrays.toString(SCENARIOS.split(\"\\\\s*,\\\\s*\")));\n+            try {\n+                Arrays.stream(SCENARIOS.split(\"\\\\s*,\\\\s*\")).map(Integer::parseInt).forEachOrdered(enabledScenarios::add);\n+            } catch (NumberFormatException e) {\n+                TestRun.fail(\"Provided a scenario index in the -DScenario comma-separated list which is not \" +\n+                             \"a number: \" + SCENARIOS);\n+            }\n+        }\n+\n+        if (!ADDITIONAL_SCENARIO_FLAGS.isEmpty()) {\n+            additionalScenarioFlags.addAll(Arrays.asList(ADDITIONAL_SCENARIO_FLAGS.split(\"\\\\s*,\\\\s*\")));\n+        }\n+    }\n+\n+    \/**\n+     * Create a scenario with {@code index} that will be run with the additional VM flags specified in {@code flags}\n+     * (or without any if null or parameter not provided).\n+     * <p>\n+     * The scenario {@code index} must be unique to be distinguishable in the stdout and stderr output and when specifying\n+     * {@code -DScenarios} (see {@link Scenario}).\n+     *\n+     * @param index the unique scenario index.\n+     * @param flags the scenario flags or null (i.e. no parameter specified) if no flags should be used.\n+     *\/\n+    public Scenario(int index, String... flags) {\n+        this.index = index;\n+        if (flags != null) {\n+            this.flags = new ArrayList<>(Arrays.asList(flags));\n+            this.flags.addAll(additionalScenarioFlags);\n+        } else {\n+            this.flags = new ArrayList<>();\n+        }\n+        this.enabled = enabledScenarios.isEmpty() || enabledScenarios.contains(index);\n+    }\n+\n+    \/**\n+     * Add additional VM flags to this scenario.\n+     *\n+     * @param flags the additional scenario VM flags.\n+     *\/\n+    public void addFlags(String... flags) {\n+        if (flags != null) {\n+            this.flags.addAll(Arrays.asList(flags));\n+        }\n+    }\n+\n+    \/**\n+     * Get all scenario specific VM flags as defined in {@link #Scenario(int, String...)}.\n+     *\n+     * @return the scenario VM flags.\n+     *\/\n+    public List<String> getFlags() {\n+        return flags;\n+    }\n+\n+    \/**\n+     * Get the unique scenario index as defined in {@link #Scenario(int, String...)}.\n+     *\n+     * @return the scenario index.\n+     *\/\n+    public int getIndex() {\n+        return index;\n+    }\n+\n+    \/**\n+     * Get the test VM output (stdout + stderr) of this scenario from the last execution of the framework.\n+     *\n+     * @return the test VM output.\n+     *\/\n+    public String getTestVMOutput() {\n+        return testVMOutput;\n+    }\n+\n+    \/**\n+     * Set the test VM output, called by the framework.\n+     *\/\n+    void setTestVMOutput(String testVMOutput) {\n+        this.testVMOutput = testVMOutput;\n+    }\n+\n+    \/**\n+     * Returns a boolean indicating if this scenario will be executed by the test framework. This only depends on\n+     * the property flag {@code -DScenarios} (see {@link Scenario}). This is only used by the framework internally.\n+     *\n+     * @return {@code true} if {@code -DScenarios} is either not set or if {@code -DScenarios} specifies the scenario\n+     *         index set by {@link #Scenario(int, String...)}.\n+     *         {@code false} otherwise.\n+     *\/\n+    boolean isEnabled() {\n+        return enabled;\n+    }\n+}\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/Scenario.java","additions":146,"deletions":0,"binary":false,"changes":146,"status":"added"},{"patch":"@@ -0,0 +1,88 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.test.lib.hotspot.ir_framework;\n+\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+\n+\/**\n+ * Annotate all methods in your test class which the framework should test with {@code @Test}.\n+ * <p>\n+ * Let {@code m} be a test method specifying the {@code @Test} annotation. If {@code m} is neither part of a\n+ * <b>checked test<\/b> (an additional method specifying {@link Check @Check} with {@code @Check(test = \"m\")}) nor part\n+ * of a <b>custom run test<\/b> (an additional method specifying {@link Run @Run} with {@code @Run(test = \"m\")}),\n+ * then {@code m} is a so-called <b>base test<\/b> and the the framework invokes {@code m} in the following way:\n+ * <ol>\n+ *     <li><p>The framework warms {@code m} up by invoking it for a predefined number of iterations (default: 2000)\n+ *     or any number specified by an additional {@link Warmup @Warmup} annotation at {@code m} or by using\n+ *     {@link TestFramework#setDefaultWarmup(int)} (could also be 0 which skips the warm-up completely which is similar\n+ *     to simulating {@code -Xcomp}). More information about the warm-up in general can be found at {@link Warmup}<\/li>\n+ *     <li><p>After the warm-up, the framework compiles {@code m} at the specified compilation level set by\n+ *     {@link #compLevel()} (default {@link CompLevel#ANY} will pick the highest available level which is usually\n+ *     {@link CompLevel#C2}).<\/li>\n+ *     <li><p>The framework invokes {@code m} one more time to run the compilation.<\/li>\n+ *     <li><p>The framework checks any specified {@link IR @IR} constraints at {@code m}. More information about IR matching\n+ *     can be found at {@link IR}.<\/li>\n+ * <\/ol>\n+ *\n+ * <p>\n+ * {@code m} has the following properties:\n+ * <ul>\n+ *     <li><p>If {@code m} specifies no parameters, the framework can directly invoke {@code m}.<\/li>\n+ *     <li><p>If {@code m} specifies parameters, the framework needs to know how to invoke {@code m}. Use {@link Arguments}\n+ *     with {@link Argument} properties for each parameter to use well-defined parameters by the framework. If the method\n+ *     requires a more specific argument value, use a custom run test (see {@link Run}).<\/li>\n+ *     <li><p>{@code m} cannot specify {@link AbstractInfo} or any of its subclasses as parameter or return type.<\/li>\n+ *     <li><p>{@code m} is not inlined by the framework.<\/li>\n+ *     <li><p>Verification of the return value of {@code m} can only be done in a checked test (see {@link Check}) or\n+ *     custom run test (see {@link Run}).<\/li>\n+ * <\/ul>\n+ *\n+ * <p>\n+ * The following constraints must be met for the test method {@code m} specifying {@code @Test}:\n+ * <ul>\n+ *     <li><p>{@code m} must be part of the test class. Using {@code @Test} in nested or helper classes is not allowed.<\/li>\n+ *     <li><p>{@code m} cannot have the same name as another {@code @Test} method in the same test class. Method\n+ *     overloading is only allowed (but not encouraged) with other non-{@code @Test} methods.<\/li>\n+ *     <li><p>{@code m} cannot specify any helper-method-specific compile command annotations\n+ *            ({@link ForceCompile @ForceCompile}, {@link DontCompile @DontCompile}, {@link ForceInline @ForceInline},\n+ *            {@link DontInline @DontInline}). <\/li>\n+ * <\/ul>\n+ *\n+ * <p>\n+ * Examples on how to write base tests can be found in {@link jdk.test.lib.hotspot.ir_framework.examples.BaseTestExample}\n+ * and also as part of the internal testing in the package {@link jdk.test.lib.hotspot.ir_framework.tests}.\n+ *\n+ * @see Arguments\n+ *\/\n+@Retention(RetentionPolicy.RUNTIME)\n+public @interface Test {\n+\n+    \/**\n+     * Specify at which compilation level the framework should eventually compile the test method after an optional\n+     * warm-up period. The default {@link CompLevel#ANY} will let the framework compile the method at the highest\n+     * available level which is usually {@link CompLevel#C2}.\n+     *\/\n+    CompLevel compLevel() default CompLevel.ANY;\n+}\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/Test.java","additions":88,"deletions":0,"binary":false,"changes":88,"status":"added"},{"patch":"@@ -0,0 +1,73 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.test.lib.hotspot.ir_framework;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+\/**\n+ * Utility class to report a {@link TestFormatException}.\n+ *\/\n+class TestFormat {\n+    private static final List<String> FAILURES = new ArrayList<>();\n+\n+    public static void check(boolean test, String failureMessage) {\n+        if (!test) {\n+            FAILURES.add(failureMessage);\n+            throw new TestFormatException(failureMessage);\n+        }\n+    }\n+\n+    public static void checkNoThrow(boolean test, String failureMessage) {\n+        if (!test) {\n+            FAILURES.add(failureMessage);\n+        }\n+    }\n+\n+    public static void fail(String failureMessage) {\n+        FAILURES.add(failureMessage);\n+        throw new TestFormatException(failureMessage);\n+    }\n+\n+    public static void failNoThrow(String failureMessage) {\n+        FAILURES.add(failureMessage);\n+    }\n+\n+    public static void reportIfAnyFailures() {\n+        if (FAILURES.isEmpty()) {\n+            \/\/ No format violation detected.\n+            return;\n+        }\n+        StringBuilder builder = new StringBuilder();\n+        builder.append(\"\\nOne or more format violations have been detected:\\n\\n\");\n+        builder.append(\"Violations (\").append(FAILURES.size()).append(\")\\n\");\n+        builder.append(\"-------------\").append(\"-\".repeat(String.valueOf(FAILURES.size()).length())).append(\"\\n\");\n+        for (String failure : FAILURES) {\n+            builder.append(\" - \").append(failure).append(\"\\n\");\n+        }\n+        builder.append(\"\/============\/\");\n+        FAILURES.clear();\n+        throw new TestFormatException(builder.toString());\n+    }\n+}\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/TestFormat.java","additions":73,"deletions":0,"binary":false,"changes":73,"status":"added"},{"patch":"@@ -0,0 +1,34 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.test.lib.hotspot.ir_framework;\n+\n+\/**\n+ * Exception that is thrown if a JTreg test violates the supported format by the test framework.\n+ *\/\n+public class TestFormatException extends RuntimeException {\n+\n+    TestFormatException(String message) {\n+        super(message);\n+    }\n+}\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/TestFormatException.java","additions":34,"deletions":0,"binary":false,"changes":34,"status":"added"},{"patch":"@@ -0,0 +1,1036 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.test.lib.hotspot.ir_framework;\n+\n+import jdk.test.lib.Platform;\n+import jdk.test.lib.Utils;\n+import jdk.test.lib.helpers.ClassFileInstaller;\n+import jdk.test.lib.process.OutputAnalyzer;\n+import jdk.test.lib.process.ProcessTools;\n+import sun.hotspot.WhiteBox;\n+\n+import java.io.PrintWriter;\n+import java.io.StringWriter;\n+import java.lang.reflect.Method;\n+import java.util.*;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+import java.util.stream.Collectors;\n+\n+\/**\n+ * This class represents the main entry point to the test framework whose main purpose is to perform regex-based checks on\n+ * the C2 IR shape emitted by the VM flags {@code -XX:+PrintIdeal} and {@code -XX:+PrintOptoAssembly}. The framework can\n+ * also be used for other non-IR matching (and non-compiler) tests by providing easy to use annotations for commonly used\n+ * testing patterns and compiler control flags.\n+ * <p>\n+ * The framework offers various annotations to control how your test code should be invoked and being checked. There are\n+ * three kinds of tests depending on how much control is needed over the test invocation:\n+ * <b>Base tests<\/b> (see {@link Test}), <b>checked tests<\/b> (see {@link Check}), and <b>custom run tests<\/b>\n+ * (see {@link Run}). Each type of test needs to define a unique <i>test method<\/i> that specifies a {@link Test @Test}\n+ * annotation which represents the test code that is eventually executed by the test framework. More information about\n+ * the usage and how to write different tests can be found in {@link Test}, {@link Check}, and {@link Run}.\n+ * <p>\n+ * Each test method can specify an arbitrary number of IR rules. This is done by using {@link IR @IR} annotations which\n+ * can define regex strings that are matched on the output of {@code -XX:+PrintIdeal} and {@code -XX:+PrintOptoAssembly}.\n+ * The matching is done after the test method was (optionally) warmed up and compiled. More information about the usage\n+ * and how to write different IR rules can be found at {@link IR}.\n+ * <p>\n+ * This framework should be used with the following JTreg setup in your Test.java file in package <i>some.package<\/i>:\n+ * <pre>\n+ * {@literal @}library \/test\/lib\n+ * {@literal @}run driver some.package.Test\n+ * <\/pre>\n+ * Note that even though the framework uses the Whitebox API internally, it is not required to build and enabel it in the\n+ * JTreg test if the test itself is not utilizing any Whitebox features directly.\n+ * <p>\n+ * To specify additional flags, use {@link #runWithFlags(String...)}, {@link #addFlags(String...)},\n+ * {@link #addScenarios(Scenario...)}, or {@link #runWithScenarios(Scenario...)} where the scenarios can also be used\n+ * to run different flag combinations (instead of specifying multiple JTreg {@code @run} entries).\n+ * <p>\n+ * After annotating your test code with the framework specific annotations, the framework needs to be invoked from the\n+ * {@code main()} method of your JTreg test. There are two ways to do so. The first way is by calling the various\n+ * {@code runXX()} methods of {@link TestFramework}. The second way, which gives more control, is to create a new\n+ * {@code TestFramework} builder object on which {@link #start()} needs to be eventually called to start the testing.\n+ * <p>\n+ * The framework is called from the <i>driver VM<\/i> in which the JTreg test is initially run by specifying {@code\n+ * @run driver} in the JTreg header. This strips all additionally specified JTreg VM and Javaoptions.\n+ * The framework creates a new <i>flag VM<\/i> with all these flags added again in order to figure out which flags are\n+ * required to run the tests specified in the test class (e.g. {@code -XX:+PrintIdeal} and {@code -XX:+PrintOptoAssembly}\n+ * for IR matching).\n+ * <p>\n+ * After the flag VM terminates, it starts a new <i>test VM<\/i> which performs the execution of the specified\n+ * tests in the test class as described in {@link Test}, {@link Check}, and {@link Run}.\n+ * <p>\n+ * In a last step, once the test VM has terminated without exceptions, IR matching is performed if there are any IR\n+ * rules and if no VM flags disable it (e.g. not running with {@code -Xint}, see {@link IR} for more details).\n+ * The IR regex matching is done on the output of {@code -XX:+PrintIdeal} and {@code -XX:+PrintOptoAssembly} by parsing\n+ * the hotspot_pid file of the test VM. Failing IR rules are reported by throwing a {@link IRViolationException}.\n+ *\n+ * @see Test\n+ * @see Check\n+ * @see Run\n+ * @see IR\n+ *\/\n+public class TestFramework {\n+    \/**\n+     * JTreg can define additional VM (-Dtest.vm.opts) and Javaoptions (-Dtest.java.opts) flags. IR verification is only\n+     * performed when all these additional JTreg flags (does not include additionally added framework and scenario flags\n+     * by user code) are whitelisted.\n+     *\n+     * A flag is whitelisted if it is a property flag (starting with -D), -ea, -esa, or if the flag name contains any of\n+     * the entries of this list as a substring (partial match).\n+     *\/\n+    public static final Set<String> JTREG_WHITELIST_FLAGS = new HashSet<>(\n+            Arrays.asList(\n+                    \/\/ The following substrings are part of more than one VM flag\n+                    \"RAM\",\n+                    \"Heap\",\n+                    \"Trace\",\n+                    \"Print\",\n+                    \"Verify\",\n+                    \"TLAB\",\n+                    \"UseNewCode\",\n+                    \/\/ The following substrings are only part of one VM flag (=exact match)\n+                    \"CreateCoredumpOnCrash\",\n+                    \"IgnoreUnrecognizedVMOptions\",\n+                    \"UnlockDiagnosticVMOptions\",\n+                    \"UnlockExperimentalVMOptions\",\n+                    \"BackgroundCompilation\",\n+                    \"Xbatch\",\n+                    \"TieredCompilation\"\n+            )\n+    );\n+\n+    static final boolean VERBOSE = Boolean.getBoolean(\"Verbose\");\n+    static final boolean TESTLIST = !System.getProperty(\"Test\", \"\").isEmpty();\n+    static final boolean EXCLUDELIST = !System.getProperty(\"Exclude\", \"\").isEmpty();\n+    static final String TEST_VM_FLAGS_START = \"##### TestFrameworkPrepareFlags - used by TestFramework #####\";\n+    static final String TEST_VM_FLAGS_DELIMITER = \" \";\n+    static final String TEST_VM_FLAGS_END = \"----- END -----\";\n+    static final String RERUN_HINT = \"\"\"\n+                                       #############################################################\n+                                        - To only run the failed tests use -DTest, -DExclude,\n+                                          and\/or -DScenarios.\n+                                        - To also get the standard output of the test VM run with\\s\n+                                          -DReportStdout=true or for even more fine-grained logging\n+                                          use -DVerbose=true.\n+                                       #############################################################\n+                                     \"\"\" + \"\\n\";\n+\n+    private static final int WARMUP_ITERATIONS = Integer.getInteger(\"Warmup\", -1);\n+    private static final boolean PREFER_COMMAND_LINE_FLAGS = Boolean.getBoolean(\"PreferCommandLineFlags\");\n+    private static final boolean EXCLUDE_RANDOM = Boolean.getBoolean(\"ExcludeRandom\");\n+    private static final boolean REPORT_STDOUT = Boolean.getBoolean(\"ReportStdout\");\n+    private final boolean VERIFY_VM = Boolean.getBoolean(\"VerifyVM\") && Platform.isDebugBuild();\n+    private boolean VERIFY_IR = Boolean.parseBoolean(System.getProperty(\"VerifyIR\", \"true\"));\n+    private boolean shouldVerifyIR; \/\/ Should we perform IR matching?\n+    private static String lastTestVMOutput;\n+\n+    private final Class<?> testClass;\n+    private Set<Class<?>> helperClasses = null;\n+    private List<Scenario> scenarios = null;\n+    private Set<Integer> scenarioIndices = null;\n+    private List<String> flags = null;\n+    private int defaultWarmup = -1;\n+    private TestFrameworkSocket socket;\n+    private Scenario scenario;\n+\n+    \/*\n+     * Public interface methods\n+     *\/\n+\n+    \/**\n+     * Creates an instance acting as a builder to test the class from which this constructor was invoked from.\n+     * Use this constructor if you want to use multiple run options (flags, helper classes, scenarios).\n+     * Use the associated add methods ({@link #addFlags(String...)}, {@link #addScenarios(Scenario...)},\n+     * {@link #addHelperClasses(Class...)}) to set up everything and then start the testing by invoking {@link #start()}.\n+     *\/\n+    public TestFramework() {\n+        this(StackWalker.getInstance(StackWalker.Option.RETAIN_CLASS_REFERENCE).getCallerClass());\n+    }\n+\n+    \/**\n+     * Creates an instance acting as a builder to test {@code testClass}.\n+     * Use this constructor if you want to use multiple run options (flags, helper classes, scenarios).\n+     * Use the associated add methods ({@link #addFlags(String...)}, @link #addScenarios(Scenario...)},\n+     * {@link #addHelperClasses(Class...)}) to set up everything and then start the testing by invoking {@link #start()}.\n+     *\n+     * @param testClass the class to be tested by the framework.\n+     * @see #TestFramework()\n+     *\/\n+    public TestFramework(Class<?> testClass) {\n+        TestRun.check(testClass != null, \"Test class cannot be null\");\n+        this.testClass = testClass;\n+        if (VERBOSE) {\n+            System.out.println(\"Test class: \" + testClass);\n+        }\n+    }\n+\n+    \/**\n+     * Default flags that are added used for the test VM.\n+     *\/\n+    private static String[] getDefaultFlags() {\n+        return new String[] {\"-XX:-BackgroundCompilation\", \"-XX:CompileCommand=quiet\"};\n+    }\n+\n+    \/**\n+     * Additional verification flags that are used if -DVerifyVM=true is with a debug build.\n+     *\/\n+    private static String[] getVerifyFlags() {\n+        return new String[] {\n+                \"-XX:+UnlockDiagnosticVMOptions\", \"-XX:+VerifyOops\", \"-XX:+VerifyStack\", \"-XX:+VerifyLastFrame\",\n+                \"-XX:+VerifyBeforeGC\", \"-XX:+VerifyAfterGC\", \"-XX:+VerifyDuringGC\", \"-XX:+VerifyAdapterSharing\"\n+        };\n+    }\n+\n+    \/**\n+     * Tests the class from which this method was invoked from.\n+     *\/\n+    public static void run() {\n+        StackWalker walker = StackWalker.getInstance(StackWalker.Option.RETAIN_CLASS_REFERENCE);\n+        run(walker.getCallerClass());\n+    }\n+\n+    \/**\n+     * Tests {@code testClass}.\n+     *\n+     * @param testClass the class to be tested by the framework.\n+     * @see #run()\n+     *\/\n+    public static void run(Class<?> testClass) {\n+        TestFramework framework = new TestFramework(testClass);\n+        framework.start();\n+    }\n+\n+    \/**\n+     * Tests the class from which this method was invoked from. The test VM is called with the specified {@code flags}.\n+     * <ul>\n+     *     <li><p>The {@code flags} override any set VM or Javaoptions flags by JTreg by default.<p>\n+     *            Use {@code -DPreferCommandLineFlags=true} if you want to prefer the JTreg VM and  Javaoptions flags over\n+     *            the specified {@code flags} of this method.<\/li>\n+     *     <li><p>If you want to run your entire JTreg test with additional flags, use this method.<\/li>\n+     *     <li><p>If you want to run your JTreg test with multiple flag combinations, use\n+     *            {@link #runWithScenarios(Scenario...)}<\/li>\n+     * <\/ul>\n+     *\n+     * @param flags VM flags to be used for the test VM.\n+     *\/\n+    public static void runWithFlags(String... flags) {\n+        StackWalker walker = StackWalker.getInstance(StackWalker.Option.RETAIN_CLASS_REFERENCE);\n+        runWithFlags(walker.getCallerClass(), flags);\n+    }\n+\n+    \/**\n+     * Tests {@code testClass}. The test VM is called with the specified {@code flags}.\n+     * <ul>\n+     *     <li><p>The {@code flags} override any set VM or Javaoptions flags by JTreg by default.<p>\n+     *            Use {@code -DPreferCommandLineFlags=true} if you want to prefer the JTreg VM and  Javaoptions flags over\n+     *            the specified {@code flags} of this method.<\/li>\n+     *     <li><p>If you want to run your entire JTreg test with additional flags, use this method.<\/li>\n+     *     <li><p>If you want to run your JTreg test with multiple flag combinations, use\n+     *            {@link #runWithScenarios(Scenario...)}<\/li>\n+     * <\/ul>\n+     *\n+     * @param testClass the class to be tested by the framework.\n+     * @param flags VM flags to be used for the test VM.\n+     *\n+     * @see #runWithFlags(String...)\n+     *\/\n+    public static void runWithFlags(Class<?> testClass, String... flags) {\n+        TestFramework framework = new TestFramework(testClass);\n+        framework.addFlags(flags);\n+        framework.start();\n+    }\n+\n+    \/**\n+     * Tests {@code testClass} which uses {@code helperClasses} that can specify additional compile command annotations\n+     * ({@link ForceCompile @ForceCompile}, {@link DontCompile @DontCompile}, {@link ForceInline @ForceInline},\n+     * {@link DontInline @DontInline}) to be applied while testing {@code testClass} (also see description of\n+     * {@link TestFramework}).\n+     *\n+     * <p>\n+     * If a class is used by the test class that does not specify any compile command annotations, you do not\n+     * need to include it in {@code helperClasses}. If no helper class specifies any compile commands, consider\n+     * using {@link #run()} or {@link #run(Class)}.\n+     *\n+     * @param testClass the class to be tested by the framework.\n+     * @param helperClasses helper classes containing compile command annotations ({@link ForceCompile},\n+     *                      {@link DontCompile}, {@link ForceInline}, {@link DontInline}) to be applied\n+     *                      while testing {@code testClass} (also see description of {@link TestFramework}).\n+     *\/\n+    public static void runWithHelperClasses(Class<?> testClass, Class<?>... helperClasses) {\n+        TestFramework framework = new TestFramework(testClass);\n+        framework.addHelperClasses(helperClasses);\n+        framework.start();\n+    }\n+\n+    \/**\n+     * Tests the class from which this method was invoked from. A test VM is called for each scenario in {@code scenarios}\n+     * by using the specified flags in the scenario.\n+     * <ul>\n+     *     <li><p>If there is only one scenario, consider using {@link #runWithFlags(String...)}.<\/li>\n+     *     <li><p>The scenario flags override any VM or Javaoptions set by JTreg by default.<p>\n+     *            Use {@code -DPreferCommandLineFlags=true} if you want to prefer the Java and VM options over the\n+     *            scenario flags.<\/li>\n+     * <\/ul>\n+     *\n+     * @param scenarios scenarios which specify specific flags for the test VM.\n+     *\/\n+    public static void runWithScenarios(Scenario... scenarios) {\n+        StackWalker walker = StackWalker.getInstance(StackWalker.Option.RETAIN_CLASS_REFERENCE);\n+        runWithScenarios(walker.getCallerClass(), scenarios);\n+    }\n+\n+    \/**\n+     * Tests {@code testClass} A test VM is called for each scenario in {@code scenarios} by using the specified flags\n+     * in the scenario.\n+     * <ul>\n+     *     <li><p>If there is only one scenario, consider using {@link #runWithFlags(String...)}.<\/li>\n+     *     <li><p>The scenario flags override any VM or Javaoptions set by JTreg by default.<p>\n+     *            Use {@code -DPreferCommandLineFlags=true} if you want to prefer the Java and VM options over the\n+     *            scenario flags.<\/li>\n+     * <\/ul>\n+     *\n+     * @param testClass the class to be tested by the framework.\n+     * @param scenarios scenarios which specify specific flags for the test VM.\n+     *\n+     * @see #runWithScenarios(Scenario...)\n+     *\/\n+    public static void runWithScenarios(Class<?> testClass, Scenario... scenarios) {\n+        TestFramework framework = new TestFramework(testClass);\n+        framework.addScenarios(scenarios);\n+        framework.start();\n+    }\n+\n+    \/**\n+     * Add VM flags to be used for the test VM. These flags override any VM or Javaoptions set by JTreg by default.<p>\n+     * Use {@code -DPreferCommandLineFlags=true} if you want to prefer the VM or Javaoptions over the scenario flags.\n+     *\n+     * <p>\n+     * The testing can be started by invoking {@link #start()}\n+     *\n+     * @param flags VM options to be applied to the test VM.\n+     * @return the same framework instance.\n+     *\/\n+    public TestFramework addFlags(String... flags) {\n+        TestRun.check(flags != null && Arrays.stream(flags).noneMatch(Objects::isNull), \"A flag cannot be null\");\n+        if (this.flags == null) {\n+            this.flags = new ArrayList<>();\n+        }\n+        this.flags.addAll(Arrays.asList(flags));\n+        return this;\n+    }\n+\n+    \/**\n+     * Add helper classes that can specify additional compile command annotations ({@link ForceCompile @ForceCompile},\n+     * {@link DontCompile @DontCompile}, {@link ForceInline @ForceInline}, {@link DontInline @DontInline}) to be applied\n+     * while testing {@code testClass} (also see description of {@link TestFramework}).\n+     *\n+     * <p>\n+     * If a class is used by the test class that does not specify any compile command annotations, you do not need\n+     * to include it with this method. If no helper class specifies any compile commands, you do not need to call\n+     * this method at all.\n+     *\n+     * <p>\n+     * The testing can be started by invoking {@link #start()}.\n+     *\n+     * @param helperClasses helper classes containing compile command annotations ({@link ForceCompile},\n+     *                      {@link DontCompile}, {@link ForceInline}, {@link DontInline}) to be applied\n+     *                      while testing {@code testClass} (also see description of {@link TestFramework}).\n+     * @return the same framework instance.\n+     *\/\n+    public TestFramework addHelperClasses(Class<?>... helperClasses) {\n+        TestRun.check(helperClasses != null && Arrays.stream(helperClasses).noneMatch(Objects::isNull),\n+                      \"A Helper class cannot be null\");\n+        if (this.helperClasses == null) {\n+            this.helperClasses = new HashSet<>();\n+        }\n+\n+        for (var helperClass : helperClasses) {\n+            TestRun.check(!this.helperClasses.contains(helperClass),\n+                          \"Cannot add the same class twice: \" + helperClass);\n+            this.helperClasses.add(helperClass);\n+        }\n+        return this;\n+    }\n+\n+    \/**\n+     * Add scenarios to be used for the test VM. A test VM is called for each scenario in {@code scenarios} by using the\n+     * specified VM flags in the scenario. The scenario flags override any flags set by {@link #addFlags(String...)}\n+     * and thus also override any VM or Javaoptions set by JTreg by default.<p>\n+     * Use {@code -DPreferCommandLineFlags=true} if you want to prefer the VM and Javaoptions over the scenario flags.\n+     *\n+     * <p>\n+     * The testing can be started by invoking {@link #start()}\n+     *\n+     * @param scenarios scenarios which specify specific flags for the test VM.\n+     * @return the same framework instance.\n+     *\/\n+    public TestFramework addScenarios(Scenario... scenarios) {\n+        TestFormat.check(scenarios != null && Arrays.stream(scenarios).noneMatch(Objects::isNull),\n+                         \"A scenario cannot be null\");\n+        if (this.scenarios == null) {\n+            this.scenarios = new ArrayList<>();\n+            this.scenarioIndices = new HashSet<>();\n+        }\n+\n+        for (Scenario scenario : scenarios) {\n+            int scenarioIndex = scenario.getIndex();\n+            TestFormat.check(scenarioIndices.add(scenarioIndex),\n+                             \"Cannot define two scenarios with the same index \" + scenarioIndex);\n+            this.scenarios.add(scenario);\n+        }\n+        return this;\n+    }\n+\n+    \/**\n+     * Start the testing of the implicitly (by {@link #TestFramework()}) or explicitly (by {@link #TestFramework(Class)})\n+     * set test class.\n+     *\/\n+    public void start() {\n+        installWhiteBox();\n+        disableIRVerificationIfNotFeasible();\n+\n+        if (scenarios == null) {\n+            try {\n+                start(null);\n+            } catch (TestVMException e) {\n+                System.err.println(\"\\n\" + e.getExceptionInfo());\n+                throw e;\n+            } catch (IRViolationException e) {\n+                System.out.println(\"Compilation(s) of failed match(es):\");\n+                System.out.println(e.getCompilations());\n+                System.err.println(\"\\n\" + e.getExceptionInfo());\n+                throw e;\n+            }\n+        } else {\n+            startWithScenarios();\n+        }\n+    }\n+\n+    \/**\n+     * Set a new default warm-up (overriding the framework default of 2000 at\n+     * {@link TestFrameworkExecution#WARMUP_ITERATIONS}) to be applied for all tests that do not specify an explicit\n+     * warm-up with {@link Warmup @Warmup}.\n+     *\n+     * @param defaultWarmup a new non-negative default warm-up.\n+     * @return the same framework instance.\n+     *\/\n+    public TestFramework setDefaultWarmup(int defaultWarmup) {\n+        TestFormat.check(defaultWarmup >= 0, \"Cannot specify a negative default warm-up\");\n+        this.defaultWarmup = defaultWarmup;\n+        return this;\n+    }\n+\n+    \/**\n+     * Get the VM output of the test VM. Use {@code -DVerbose=true} to enable more debug information. If scenarios\n+     * were run, use {@link Scenario#getTestVMOutput()}.\n+     *\n+     * @return the last test VM output.\n+     *\/\n+    public static String getLastTestVMOutput() {\n+        return lastTestVMOutput;\n+    }\n+\n+    \/*\n+     * The following methods are only intended to be called from actual @Test methods and not from the main() method of\n+     * a JTreg test. Calling these methods from main() results in a linking exception (Whitebox not yet loaded and enabled).\n+     *\/\n+\n+    \/**\n+     * Compile {@code m} at compilation level {@code compLevel}. {@code m} is first enqueued and might not be compiled,\n+     * yet, upon returning from this method.\n+     *\n+     * @param m the method to be compiled.\n+     * @param compLevel the (valid) compilation level at which the method should be compiled.\n+     * @throws TestRunException if compilation level is {@link CompLevel#SKIP} or {@link CompLevel#WAIT_FOR_COMPILATION}.\n+     *\/\n+    public static void compile(Method m, CompLevel compLevel) {\n+        TestFrameworkExecution.compile(m, compLevel);\n+    }\n+\n+    \/**\n+     * Deoptimize {@code m}.\n+     *\n+     * @param m the method to be deoptimized.\n+     *\/\n+    public static void deoptimize(Method m) {\n+        TestFrameworkExecution.deoptimize(m);\n+    }\n+\n+    \/**\n+     * Returns a boolean indicating if {@code m} is compiled at any level.\n+     *\n+     * @param m the method to be checked.\n+     * @return {@code true} if {@code m} is compiled at any level;\n+     *         {@code false} otherwise.\n+     *\/\n+    public static boolean isCompiled(Method m) {\n+        return TestFrameworkExecution.isCompiled(m);\n+    }\n+\n+    \/**\n+     * Returns a boolean indicating if {@code m} is compiled with C1.\n+     *\n+     * @param m the method to be checked.\n+     * @return {@code true} if {@code m} is compiled with C1;\n+     *         {@code false} otherwise.\n+     *\/\n+    public static boolean isC1Compiled(Method m) {\n+        return TestFrameworkExecution.isC1Compiled(m);\n+    }\n+\n+    \/**\n+     * Returns a boolean indicating if {@code m} is compiled with C2.\n+     *\n+     * @param m the method to be checked.\n+     * @return {@code true} if {@code m} is compiled with C2;\n+     *         {@code false} otherwise.\n+     *\/\n+    public static boolean isC2Compiled(Method m) {\n+        return TestFrameworkExecution.isC2Compiled(m);\n+    }\n+\n+    \/**\n+     * Returns a boolean indicating if {@code m} is compiled at the specified {@code compLevel}.\n+     *\n+     * @param m the method to be checked.\n+     * @param compLevel the compilation level.\n+     * @return {@code true} if {@code m} is compiled at {@code compLevel};\n+     *         {@code false} otherwise.\n+     *\/\n+    public static boolean isCompiledAtLevel(Method m, CompLevel compLevel) {\n+        return TestFrameworkExecution.isCompiledAtLevel(m, compLevel);\n+    }\n+\n+    \/**\n+     * Checks if {@code m} is compiled at any level.\n+     *\n+     * @param m the method to be checked.\n+     * @throws TestRunException if {@code m} is not compiled at any level.\n+     *\/\n+    public static void assertCompiled(Method m) {\n+        TestFrameworkExecution.assertCompiled(m);\n+    }\n+\n+    \/**\n+     * Checks if {@code m} is not compiled at any level.\n+     *\n+     * @param m the method to be checked.\n+     * @throws TestRunException if {@code m} is compiled at any level.\n+     *\/\n+    public static void assertNotCompiled(Method m) {\n+        TestFrameworkExecution.assertNotCompiled(m);\n+    }\n+\n+    \/**\n+     * Verifies that {@code m} is compiled with C1.\n+     *\n+     * @param m the method to be verified.\n+     * @throws TestRunException if {@code m} is not compiled with C1.\n+     *\/\n+    public static void assertCompiledByC1(Method m) {\n+        TestFrameworkExecution.assertCompiledByC1(m);\n+    }\n+\n+    \/**\n+     * Verifies that {@code m} is compiled with C2.\n+     *\n+     * @param m the method to be checked.\n+     * @throws TestRunException if {@code m} is not compiled with C2.\n+     *\/\n+    public static void assertCompiledByC2(Method m) {\n+        TestFrameworkExecution.assertCompiledByC2(m);\n+    }\n+\n+    \/**\n+     * Verifies that {@code m} is compiled at the specified {@code compLevel}.\n+     *\n+     * @param m the method to be checked.\n+     * @param compLevel the compilation level.\n+     * @throws TestRunException if {@code m} is not compiled at {@code compLevel}.\n+     *\/\n+    public static void assertCompiledAtLevel(Method m, CompLevel compLevel) {\n+        TestFrameworkExecution.assertCompiledAtLevel(m, compLevel);\n+    }\n+\n+    \/**\n+     * Verifies that {@code m} was deoptimized after being C1 compiled.\n+     *\n+     * @param m the method to be checked.\n+     * @throws TestRunException if {@code m} is was not deoptimized after being C1 compiled.\n+     *\/\n+    public static void assertDeoptimizedByC1(Method m) {\n+        TestFrameworkExecution.assertDeoptimizedByC1(m);\n+    }\n+\n+    \/**\n+     * Verifies that {@code m} was deoptimized after being C2 compiled.\n+     *\n+     * @param m the method to be checked.\n+     * @throws TestRunException if {@code m} is was not deoptimized after being C2 compiled.\n+     *\/\n+    public static void assertDeoptimizedByC2(Method m) {\n+        TestFrameworkExecution.assertDeoptimizedByC2(m);\n+    }\n+\n+    \/*\n+     * End of public interface methods\n+     *\/\n+\n+    \/**\n+     * Used to move Whitebox class to the right folder in the JTreg test\n+     *\/\n+    private void installWhiteBox() {\n+        try {\n+            ClassFileInstaller.main(WhiteBox.class.getName());\n+        } catch (Exception e) {\n+            throw new Error(\"failed to install whitebox classes\", e);\n+        }\n+    }\n+\n+    \/**\n+     * Disable IR verification completely in certain cases.\n+     *\/\n+    private void disableIRVerificationIfNotFeasible() {\n+        if (VERIFY_IR) {\n+            VERIFY_IR = Platform.isDebugBuild() && !Platform.isInt() && !Platform.isComp();\n+            if (!VERIFY_IR) {\n+                System.out.println(\"IR verification disabled due to not running a debug build (required for PrintIdeal\" +\n+                                   \"and PrintOptoAssembly), running with -Xint, or -Xcomp (use warm-up of 0 instead)\");\n+                return;\n+            }\n+\n+            VERIFY_IR = hasIRAnnotations();\n+            if (!VERIFY_IR) {\n+                System.out.println(\"IR verification disabled due to test \" + testClass + \" not specifying any @IR annotations\");\n+                return;\n+            }\n+\n+            \/\/ No IR verification is done if additional non-whitelisted JTreg VM or Javaoptions flag is specified.\n+            VERIFY_IR = onlyWhitelistedJTregVMAndJavaOptsFlags();\n+            if (!VERIFY_IR) {\n+                System.out.println(\"IR verification disabled due to using non-whitelisted JTreg VM or Javaoptions flag(s).\\n\");\n+            }\n+        }\n+    }\n+\n+    \/**\n+     * For scenarios: Run the tests with the scenario settings and collect all exceptions to be able to run all\n+     * scenarios without prematurely throwing an exception. Format violations, however, are wrong for all scenarios\n+     * and thus is reported immediately on the first scenario execution.\n+     *\/\n+    private void startWithScenarios() {\n+        Map<Scenario, Exception> exceptionMap = new TreeMap<>(Comparator.comparingInt(Scenario::getIndex));\n+        for (Scenario scenario : scenarios) {\n+            int scenarioIndex = scenario.getIndex();\n+            try {\n+                start(scenario);\n+            } catch (TestFormatException e) {\n+                \/\/ Test format violation is wrong for all the scenarios. Only report once.\n+                throw e;\n+            } catch (Exception e) {\n+                exceptionMap.put(scenario, e);\n+            }\n+        }\n+        if (!exceptionMap.isEmpty()) {\n+            reportScenarioFailures(exceptionMap);\n+        }\n+    }\n+\n+    private void reportScenarioFailures(Map<Scenario, Exception> exceptionMap) {\n+        String failedScenarios = \"The following scenarios have failed: #\"\n+                                 + exceptionMap.keySet().stream()\n+                                               .map(s -> String.valueOf(s.getIndex()))\n+                                               .collect(Collectors.joining(\", #\"));\n+        StringBuilder builder = new StringBuilder(failedScenarios);\n+        builder.append(\"\\n\\n\");\n+        for (Map.Entry<Scenario, Exception> entry : exceptionMap.entrySet()) {\n+            Exception e = entry.getValue();\n+            Scenario scenario = entry.getKey();\n+            String errorMsg = \"\";\n+            if (scenario != null) {\n+                errorMsg = getScenarioTitleAndFlags(scenario);\n+            }\n+            if (e instanceof IRViolationException irException) {\n+                \/\/ For IR violations, only show the actual violations and not the (uninteresting) stack trace.\n+                System.out.println((scenario != null ? \"Scenario #\" + scenario.getIndex() + \" - \" : \"\")\n+                                   + \"Compilation(s) of failed matche(s):\");\n+                System.out.println(irException.getCompilations());\n+                builder.append(errorMsg).append(\"\\n\").append(irException.getExceptionInfo()).append(e.getMessage());\n+            } else if (e instanceof TestVMException) {\n+                builder.append(errorMsg).append(\"\\n\").append(((TestVMException) e).getExceptionInfo());\n+            } else {\n+                \/\/ Print stack trace otherwise\n+                StringWriter errors = new StringWriter();\n+                e.printStackTrace(new PrintWriter(errors));\n+                builder.append(errors.toString());\n+            }\n+            builder.append(\"\\n\");\n+        }\n+        System.err.println(builder.toString());\n+        if (!VERBOSE && !REPORT_STDOUT && !TESTLIST && !EXCLUDELIST) {\n+            \/\/ Provide a hint to the user how to get additional output\/debugging information.\n+            System.err.println(RERUN_HINT);\n+        }\n+        TestRun.fail(failedScenarios + \". Please check stderr for more information.\");\n+    }\n+\n+    private static String getScenarioTitleAndFlags(Scenario scenario) {\n+        StringBuilder builder = new StringBuilder();\n+        String title = \"Scenario #\" + scenario.getIndex();\n+        builder.append(title).append(\"\\n\").append(\"=\".repeat(title.length())).append(\"\\n\");\n+        builder.append(\"Scenario flags: [\").append(String.join(\", \", scenario.getFlags())).append(\"]\\n\");\n+        return builder.toString();\n+    }\n+\n+    \/**\n+     * Execute a separate \"flag\" VM with White Box access to determine all test VM flags. The flag VM sends an encoding of\n+     * all required flags for the test VM to the driver VM over a socket. Once the flag VM exits, this driver VM parses the\n+     * test VM flags, which also determine if IR matching should be done, and then starts the test VM to execute all tests.\n+     *\/\n+    private void start(Scenario scenario) {\n+        if (scenario != null && !scenario.isEnabled()) {\n+            System.out.println(\"Disabled scenario #\" + scenario.getIndex() + \"! This scenario is not present in set flag \" +\n+                               \"-DScenarios and is therefore not executed.\");\n+            return;\n+        }\n+        shouldVerifyIR = VERIFY_IR;\n+        socket = TestFrameworkSocket.getSocket();\n+        this.scenario = scenario;\n+        try {\n+            \/\/ Use TestFramework flags and scenario flags for new VMs.\n+            List<String> additionalFlags = new ArrayList<>();\n+            if (flags != null) {\n+                additionalFlags.addAll(flags);\n+            }\n+            if (scenario != null) {\n+                List<String> scenarioFlags = scenario.getFlags();\n+                String scenarioFlagsString = scenarioFlags.isEmpty() ? \"\" : \" - [\" + String.join(\", \", scenarioFlags) + \"]\";\n+                System.out.println(\"Scenario #\" + scenario.getIndex() + scenarioFlagsString + \":\");\n+                additionalFlags.addAll(scenarioFlags);\n+            }\n+            socket.start();\n+            if (shouldVerifyIR) {\n+                System.out.println(\"Run Flag VM:\");\n+                runFlagVM(additionalFlags);\n+            } else {\n+                System.out.println(\"Skip Flag VM due to not performing IR verification.\");\n+            }\n+\n+            String flagsString = additionalFlags.isEmpty() ? \"\" : \" - [\" + String.join(\", \", additionalFlags) + \"]\";\n+            System.out.println(\"Run Test VM\" + flagsString + \":\");\n+            runTestVM(additionalFlags);\n+        } finally {\n+            System.out.println();\n+            socket.close();\n+        }\n+    }\n+\n+    private boolean hasIRAnnotations() {\n+        return Arrays.stream(testClass.getDeclaredMethods()).anyMatch(m -> m.getAnnotationsByType(IR.class) != null);\n+    }\n+\n+    private boolean onlyWhitelistedJTregVMAndJavaOptsFlags() {\n+        List<String> flags = Arrays.stream(Utils.getTestJavaOpts())\n+                                   .map(s -> s.replaceFirst(\"-XX:[+|-]?|-(?=[^D|^e])\", \"\"))\n+                                   .collect(Collectors.toList());\n+        for (String flag : flags) {\n+            \/\/ Property flags (prefix -D), -ea and -esa are whitelisted.\n+            if (!flag.startsWith(\"-D\") && !flag.startsWith(\"-e\") && JTREG_WHITELIST_FLAGS.stream().noneMatch(flag::contains)) {\n+                \/\/ Found VM flag that is not whitelisted\n+                return false;\n+            }\n+        }\n+        return true;\n+    }\n+\n+    private void runFlagVM(List<String> additionalFlags) {\n+        ArrayList<String> cmds = prepareFlagVMFlags(additionalFlags);\n+        OutputAnalyzer oa;\n+        try {\n+            \/\/ Run \"flag\" VM with White Box access to determine the test VM flags and if IR verification should be done.\n+            oa = ProcessTools.executeTestJvm(cmds);\n+        } catch (Exception e) {\n+            throw new TestRunException(\"Failed to execute TestFramework flag VM\", e);\n+        }\n+        checkFlagVMExitCode(oa);\n+    }\n+\n+    \/**\n+     * The \"flag\" VM needs White Box access to prepare all test VM flags. It sends these as encoding over a socket to the\n+     * driver VM which afterwards parses the flags and adds them to the test VM.\n+     *\/\n+    private ArrayList<String> prepareFlagVMFlags(List<String> additionalFlags) {\n+        ArrayList<String> cmds = new ArrayList<>();\n+        cmds.add(\"-Dtest.jdk=\" + Utils.TEST_JDK);\n+        \/\/ Set java.library.path so JNI tests which rely on jtreg nativepath setting work\n+        cmds.add(\"-Djava.library.path=\" + Utils.TEST_NATIVE_PATH);\n+        cmds.add(\"-cp\");\n+        cmds.add(Utils.TEST_CLASS_PATH);\n+        cmds.add(\"-Xbootclasspath\/a:.\");\n+        cmds.add(\"-XX:+UnlockDiagnosticVMOptions\");\n+        cmds.add(\"-XX:+WhiteBoxAPI\");\n+        cmds.add(socket.getPortPropertyFlag());\n+        \/\/ TestFramework and scenario flags might have an influence on the later used test VM flags. Add them as well.\n+        cmds.addAll(additionalFlags);\n+        cmds.add(TestFrameworkPrepareFlags.class.getCanonicalName());\n+        cmds.add(testClass.getCanonicalName());\n+        return cmds;\n+    }\n+\n+    private void checkFlagVMExitCode(OutputAnalyzer oa) {\n+        String flagVMOutput = oa.getOutput();\n+        int exitCode = oa.getExitValue();\n+        if (VERBOSE && exitCode == 0) {\n+            System.out.println(\"--- OUTPUT TestFramework flag VM ---\");\n+            System.out.println(flagVMOutput);\n+        }\n+\n+        if (exitCode != 0) {\n+            System.err.println(\"--- OUTPUT TestFramework flag VM ---\");\n+            System.err.println(flagVMOutput);\n+            throw new RuntimeException(\"TestFramework flag VM exited with \" + exitCode);\n+        }\n+    }\n+\n+    private void runTestVM(List<String> additionalFlags) {\n+        List<String> cmds = prepareTestVMFlags(additionalFlags);\n+        socket.start();\n+\n+        OutputAnalyzer oa;\n+        ProcessBuilder process = ProcessTools.createJavaProcessBuilder(cmds);\n+        try {\n+            \/\/ Calls 'main' of TestFrameworkExecution to run all specified tests with commands 'cmds'.\n+            \/\/ Use executeProcess instead of executeTestJvm as we have already added the JTreg VM and\n+            \/\/ Java options in prepareTestVMFlags().\n+            oa = ProcessTools.executeProcess(process);\n+        } catch (Exception e) {\n+            fail(\"Error while executing Test VM\", e);\n+            return;\n+        }\n+        JVMOutput output = new JVMOutput(oa, scenario, process);\n+        lastTestVMOutput = oa.getOutput();\n+        if (scenario != null) {\n+            scenario.setTestVMOutput(lastTestVMOutput);\n+        }\n+        String socketOutput = \"\";\n+        if (shouldVerifyIR || TESTLIST || EXCLUDELIST) {\n+            \/\/ Socket has only output to read if IR verification is done and\/or if a test list was provided by user\n+            socketOutput = socket.getOutputPrintStdout();\n+        }\n+        checkTestVMExitCode(output);\n+        if (shouldVerifyIR) {\n+            try {\n+                new IRMatcher(output.getHotspotPidFileName(), socketOutput, testClass);\n+            } catch (IRViolationException e) {\n+                e.setExceptionInfo(output.getExceptionInfo(scenario != null));\n+                throw e;\n+            }\n+        } else {\n+            System.out.println(\"IR verification disabled either due to no @IR annotations, through explicitly setting \" +\n+                               \"-DVerify=false, due to not running a debug build, using a non-whitelisted JTreg VM or \" +\n+                               \"Javaopts flag like -Xint, or running the test VM with other VM flags added by user code \" +\n+                               \"that make the IR verification impossible (e.g. -XX:-UseCompile, \" +\n+                               \"-XX:TieredStopAtLevel=[1,2,3], etc.).\");\n+        }\n+    }\n+\n+    private List<String> prepareTestVMFlags(List<String> additionalFlags) {\n+        ArrayList<String> cmds = new ArrayList<>();\n+        \/\/ Set java.library.path so JNI tests which rely on jtreg nativepath setting work\n+        cmds.add(\"-Djava.library.path=\" + Utils.TEST_NATIVE_PATH);\n+        \/\/ Need White Box access in test VM.\n+        cmds.add(\"-Xbootclasspath\/a:.\");\n+        cmds.add(\"-XX:+UnlockDiagnosticVMOptions\");\n+        cmds.add(\"-XX:+WhiteBoxAPI\");\n+        String[] jtregVMFlags = Utils.getTestJavaOpts();\n+        if (!PREFER_COMMAND_LINE_FLAGS) {\n+            cmds.addAll(Arrays.asList(jtregVMFlags));\n+        }\n+        cmds.addAll(additionalFlags);\n+        cmds.addAll(getTestVMFlags());\n+\n+        if (PREFER_COMMAND_LINE_FLAGS) {\n+            \/\/ Prefer flags set via the command line over the ones set by scenarios.\n+            cmds.addAll(Arrays.asList(jtregVMFlags));\n+        }\n+\n+        if (WARMUP_ITERATIONS < 0 && defaultWarmup != -1) {\n+            \/\/ Only use the set warmup for the framework if not overridden by a valid -DWarmup property set by a test.\n+            cmds.add(\"-DWarmup=\" + defaultWarmup);\n+        }\n+\n+        \/\/ Add server property flag that enables test VM to print encoding for IR verification last and debug messages.\n+        cmds.add(socket.getPortPropertyFlag());\n+\n+        cmds.add(TestFrameworkExecution.class.getName());\n+        cmds.add(testClass.getName());\n+        if (helperClasses != null) {\n+            helperClasses.forEach(c -> cmds.add(c.getName()));\n+        }\n+        return cmds;\n+    }\n+\n+    \/**\n+     * Parse the test VM flags as prepared by the flag VM. Additionally check the property flag DShouldDoIRVerification\n+     * to determine if IR matching should be done or not.\n+     *\/\n+    private List<String> getTestVMFlags() {\n+        List<String> flagList = new ArrayList<>();\n+\n+        if (VERIFY_VM) {\n+            flagList.addAll(Arrays.asList(getVerifyFlags()));\n+        }\n+\n+        flagList.addAll(Arrays.asList(getDefaultFlags()));\n+\n+        if (shouldVerifyIR) {\n+            String flags = socket.getOutput();\n+            if (VERBOSE) {\n+                System.out.println(\"Read sent data from flag VM from socket:\");\n+                System.out.println(flags);\n+            }\n+            String patternString = \"(?<=\" + TestFramework.TEST_VM_FLAGS_START + \"\\\\R)\" + \"(.*DShouldDoIRVerification=(true|false).*)\\\\R\"\n+                                   + \"(?=\" + IREncodingPrinter.END + \")\";\n+            Pattern pattern = Pattern.compile(patternString);\n+            Matcher matcher = pattern.matcher(flags);\n+            check(matcher.find(), \"Invalid flag encoding emitted by flag VM\");\n+            \/\/ Maybe we run with flags that make IR verification impossible\n+            shouldVerifyIR = Boolean.parseBoolean(matcher.group(2));\n+            flagList.addAll(Arrays.asList(matcher.group(1).split(TEST_VM_FLAGS_DELIMITER)));\n+        }\n+        return flagList;\n+    }\n+\n+    private void checkTestVMExitCode(JVMOutput vmOutput) {\n+        final int exitCode = vmOutput.getExitCode();\n+        if (EXCLUDE_RANDOM || REPORT_STDOUT || (VERBOSE && exitCode == 0)) {\n+            System.out.println(\"--- OUTPUT TestFramework test VM ---\");\n+            System.out.println(vmOutput.getOutput());\n+        }\n+\n+        if (exitCode != 0) {\n+            throwTestVMException(vmOutput);\n+        }\n+    }\n+\n+    private void throwTestVMException(JVMOutput vmOutput) {\n+        String stdErr = vmOutput.getStderr();\n+        if (stdErr.contains(\"TestFormat.reportIfAnyFailures\")) {\n+            Pattern pattern = Pattern.compile(\"Violations \\\\(\\\\d+\\\\)[\\\\s\\\\S]*(?=\/============\/)\");\n+            Matcher matcher = pattern.matcher(stdErr);\n+            TestFramework.check(matcher.find(), \"Must find violation matches\");\n+            throw new TestFormatException(\"\\n\\n\" + matcher.group());\n+        } else if (stdErr.contains(\"NoTestsRunException\")) {\n+            shouldVerifyIR = false;\n+            throw new NoTestsRunException(\">>> No tests run due to empty set specified with -DTest and\/or -DExclude. \" +\n+                                          \"Make sure to define a set of at least one @Test method\");\n+        } else {\n+            throw new TestVMException(vmOutput.getExceptionInfo(scenario != null));\n+        }\n+    }\n+\n+    static void check(boolean test, String failureMessage) {\n+        if (!test) {\n+            fail(failureMessage);\n+        }\n+    }\n+\n+    static void fail(String failureMessage) {\n+        throw new TestFrameworkException(\"Internal Test Framework exception - please file a bug:\\n\" + failureMessage);\n+    }\n+\n+    static void fail(String failureMessage, Throwable e) {\n+        throw new TestFrameworkException(\"Internal Test Framework exception - please file a bug:\\n\" + failureMessage, e);\n+    }\n+}\n+\n+\/**\n+ * Class to encapsulate information about the test VM output, the run process and the scenario.\n+ *\/\n+class JVMOutput {\n+\n+    private final Scenario scenario;\n+    private final OutputAnalyzer oa;\n+    private final ProcessBuilder process;\n+    private final String hotspotPidFileName;\n+\n+    JVMOutput(OutputAnalyzer oa, Scenario scenario, ProcessBuilder process) {\n+        this.oa = oa;\n+        this.scenario = scenario;\n+        this.process = process;\n+        this.hotspotPidFileName = String.format(\"hotspot_pid%d.log\", oa.pid());\n+    }\n+\n+    public Scenario getScenario() {\n+        return scenario;\n+    }\n+\n+    public String getCommandLine() {\n+        return \"Command Line:\\n\" + String.join(\" \", process.command()) + \"\\n\\n\";\n+    }\n+\n+    public int getExitCode() {\n+        return oa.getExitValue();\n+    }\n+\n+    public String getOutput() {\n+        return oa.getOutput();\n+    }\n+\n+    public String getStdout() {\n+        return oa.getStdout();\n+    }\n+\n+    public String getStderr() {\n+        return oa.getStderr();\n+    }\n+\n+    public String getHotspotPidFileName() {\n+        return hotspotPidFileName;\n+    }\n+\n+    \/**\n+     * Get more detailed information about the exception in a pretty format.\n+     *\/\n+    public String getExceptionInfo(boolean stripRerunHint) {\n+        int exitCode = getExitCode();\n+        String stdErr = getStderr();\n+        String rerunHint = \"\";\n+        String stdOut = \"\";\n+        if (exitCode == 134) {\n+            stdOut = \"\\n\\nStandard Output\\n---------------\\n\" + getOutput();\n+        } else if (!stripRerunHint) {\n+            rerunHint = TestFramework.RERUN_HINT;\n+        }\n+        if (exitCode == 0) {\n+            \/\/ IR exception\n+            return getCommandLine() + rerunHint;\n+        } else {\n+            return \"TestFramework test VM exited with code \" + exitCode + \"\\n\"\n+                   + stdOut + \"\\n\" + getCommandLine() + \"\\n\\nError Output\\n------------\\n\" + stdErr + \"\\n\\n\" + rerunHint;\n+        }\n+    }\n+}\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/TestFramework.java","additions":1036,"deletions":0,"binary":false,"changes":1036,"status":"added"},{"patch":"@@ -0,0 +1,39 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.test.lib.hotspot.ir_framework;\n+\n+\/**\n+ * Exception that is thrown if there is an internal error in the framework. This is most likely an indicator of a bug\n+ * in the framework.\n+ *\/\n+public class TestFrameworkException extends RuntimeException {\n+\n+    TestFrameworkException(String message) {\n+        super(message);\n+    }\n+\n+    TestFrameworkException(String message, Throwable e) {\n+        super(message, e);\n+    }\n+}\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/TestFrameworkException.java","additions":39,"deletions":0,"binary":false,"changes":39,"status":"added"},{"patch":"@@ -0,0 +1,1449 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.test.lib.hotspot.ir_framework;\n+\n+import jdk.test.lib.Platform;\n+import jdk.test.lib.Utils;\n+import sun.hotspot.WhiteBox;\n+\n+import java.io.PrintWriter;\n+import java.io.StringWriter;\n+import java.lang.annotation.Annotation;\n+import java.lang.reflect.*;\n+import java.util.*;\n+import java.util.concurrent.ExecutorService;\n+import java.util.concurrent.Executors;\n+import java.util.concurrent.TimeUnit;\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n+\n+\/**\n+ * This class' main method is called from {@link TestFramework} and represents the so-called \"test VM\". The class is\n+ * the heart of the framework and is responsible for executing all the specified tests in the test class. It uses the\n+ * Whitebox API and reflection to achieve this task.\n+ *\/\n+public class TestFrameworkExecution {\n+    private static final WhiteBox WHITE_BOX;\n+\n+    static {\n+        try {\n+            WHITE_BOX = WhiteBox.getWhiteBox();\n+        } catch (UnsatisfiedLinkError e) {\n+            System.err.println(\"\\n\" + \"\"\"\n+                               ##########################################################\n+                                - Did you call a test-related interface method from\n+                                  TestFramework in main() of your test? Make sure to\n+                                  only call setup\/run methods and no checks or\n+                                  assertions from main() of your test!\n+                                - Are you rerunning the test VM (TestFrameworkExecution)\n+                                  directly after a JTreg run? Make sure to start it\n+                                  from within JTwork\/scratch and with the flag\n+                                  -DReproduce=true!\n+                               ##########################################################\n+                               \"\"\");\n+            throw e;\n+        }\n+    }\n+\n+    \/**\n+     * The default number of warm-up iterations used to warm up a {@link Test} annotated test method.\n+     * Use {@code -DWarmup=XY} to specify a different default value. An individual warm-up can also be\n+     * set by specifying a {@link Warmup} iteration for a test.\n+     *\/\n+    public static final int WARMUP_ITERATIONS = Integer.parseInt(System.getProperty(\"Warmup\", \"2000\"));\n+\n+    private static final boolean TIERED_COMPILATION = (Boolean)WHITE_BOX.getVMFlag(\"TieredCompilation\");\n+    private static final CompLevel TIERED_COMPILATION_STOP_AT_LEVEL = CompLevel.forValue(((Long)WHITE_BOX.getVMFlag(\"TieredStopAtLevel\")).intValue());\n+    static final boolean TEST_C1 = TIERED_COMPILATION && TIERED_COMPILATION_STOP_AT_LEVEL.getValue() < CompLevel.C2.getValue();\n+\n+    \/\/ User defined settings\n+    static final boolean XCOMP = Platform.isComp();\n+    static final boolean VERBOSE = Boolean.getBoolean(\"Verbose\");\n+    private static final boolean PRINT_TIMES = Boolean.getBoolean(\"PrintTimes\");\n+\n+    static final boolean USE_COMPILER = WHITE_BOX.getBooleanVMFlag(\"UseCompiler\");\n+    static final boolean EXCLUDE_RANDOM = Boolean.getBoolean(\"ExcludeRandom\");\n+    private static final String TESTLIST = System.getProperty(\"Test\", \"\");\n+    private static final String EXCLUDELIST = System.getProperty(\"Exclude\", \"\");\n+    private static final boolean DUMP_REPLAY = Boolean.getBoolean(\"DumpReplay\");\n+    private static final boolean GC_AFTER = Boolean.getBoolean(\"GCAfter\");\n+    private static final boolean SHUFFLE_TESTS = Boolean.parseBoolean(System.getProperty(\"ShuffleTests\", \"true\"));\n+    \/\/ Use separate flag as VERIFY_IR could have been set by user but due to other flags it was disabled by flag VM.\n+    private static final boolean PRINT_VALID_IR_RULES = Boolean.getBoolean(\"ShouldDoIRVerification\");\n+    protected static final long PerMethodTrapLimit = (Long)WHITE_BOX.getVMFlag(\"PerMethodTrapLimit\");\n+    protected static final boolean ProfileInterpreter = (Boolean)WHITE_BOX.getVMFlag(\"ProfileInterpreter\");\n+    private static final boolean FLIP_C1_C2 = Boolean.getBoolean(\"FlipC1C2\");\n+\n+    private final HashMap<Method, DeclaredTest> declaredTests = new HashMap<>();\n+    private final List<AbstractTest> allTests = new ArrayList<>();\n+    private final HashMap<String, Method> testMethodMap = new HashMap<>();\n+    private final List<String> excludeList;\n+    private final List<String> testList;\n+    private Set<Class<?>> helperClasses = null; \/\/ Helper classes that contain framework annotations to be processed.\n+    private final IREncodingPrinter irMatchRulePrinter;\n+    private final Class<?> testClass;\n+    private final Map<Executable, CompLevel> forceCompileMap = new HashMap<>();\n+\n+    private TestFrameworkExecution(Class<?> testClass) {\n+        TestRun.check(testClass != null, \"Test class cannot be null\");\n+        this.testClass = testClass;\n+        this.testList = createTestFilterList(TESTLIST, testClass);\n+        this.excludeList = createTestFilterList(EXCLUDELIST, testClass);\n+\n+        if (PRINT_VALID_IR_RULES) {\n+            irMatchRulePrinter = new IREncodingPrinter();\n+        } else {\n+            irMatchRulePrinter = null;\n+        }\n+    }\n+\n+    \/**\n+     * Parse \"test1,test2,test3\" into a list.\n+     *\/\n+    private static List<String> createTestFilterList(String list, Class<?> testClass) {\n+        List<String> filterList = null;\n+        if (!list.isEmpty()) {\n+            String classPrefix = testClass.getSimpleName() + \".\";\n+            filterList = new ArrayList<>(Arrays.asList(list.split(\",\")));\n+            for (int i = filterList.size() - 1; i >= 0; i--) {\n+                String test = filterList.get(i);\n+                if (test.indexOf(\".\") > 0) {\n+                    if (test.startsWith(classPrefix)) {\n+                        test = test.substring(classPrefix.length());\n+                        filterList.set(i, test);\n+                    } else {\n+                        filterList.remove(i);\n+                    }\n+                }\n+            }\n+        }\n+        return filterList;\n+    }\n+\n+    \/**\n+     * Main entry point of the test VM.\n+     *\/\n+    public static void main(String[] args) {\n+        try {\n+            String testClassName = args[0];\n+            System.out.println(\"Framework main(), about to run tests in class \" + testClassName);\n+            Class<?> testClass;\n+            testClass = getClassObject(testClassName, \"test\");\n+\n+            TestFrameworkExecution framework = new TestFrameworkExecution(testClass);\n+            framework.addHelperClasses(args);\n+            framework.start();\n+        } finally {\n+            TestFrameworkSocket.closeClientSocket();\n+        }\n+    }\n+\n+    protected static Class<?> getClassObject(String className, String classType) {\n+        Class<?> c;\n+        try {\n+            c = Class.forName(className);\n+        } catch (Exception e) {\n+            TestRun.fail(\"Could not find \" + classType + \" class\", e);\n+            return null;\n+        }\n+        return c;\n+    }\n+\n+    \/**\n+     * Set up all helper classes and verify they are specified correctly.\n+     *\/\n+    private void addHelperClasses(String[] args) {\n+        Class<?>[] helperClasses = getHelperClasses(args);\n+        if (helperClasses != null) {\n+            TestRun.check(Arrays.stream(helperClasses).noneMatch(Objects::isNull), \"A Helper class cannot be null\");\n+            this.helperClasses = new HashSet<>();\n+\n+            for (Class<?> helperClass : helperClasses) {\n+                if (Arrays.stream(testClass.getDeclaredClasses()).anyMatch(c -> c == helperClass)) {\n+                    \/\/ Nested class of test class is automatically treated as helper class\n+                    TestFormat.failNoThrow(\"Nested \" + helperClass + \" inside test \" + testClass + \" is implicitly\"\n+                                           + \" treated as helper class and does not need to be specified as such.\");\n+                    continue;\n+                }\n+                TestRun.check(!this.helperClasses.contains(helperClass), \"Cannot add the same class twice: \" + helperClass);\n+                this.helperClasses.add(helperClass);\n+            }\n+        }\n+    }\n+\n+    private static Class<?>[] getHelperClasses(String[] args) {\n+        if (args.length == 1) {\n+            return null;\n+        }\n+        Class<?>[] helperClasses = new Class<?>[args.length - 1]; \/\/ First argument is test class\n+        for (int i = 1; i < args.length; i++) {\n+            String helperClassName = args[i];\n+            helperClasses[i - 1] = getClassObject(helperClassName, \"helper\");\n+        }\n+        return helperClasses;\n+    }\n+\n+    private void checkHelperClass(Class<?> clazz) {\n+        checkAnnotationsInClass(clazz, \"helper\");\n+        for (Class<?> c : clazz.getDeclaredClasses()) {\n+            checkAnnotationsInClass(c, \"nested (and helper)\");\n+        }\n+    }\n+\n+    private void checkAnnotationsInClass(Class<?> c, String clazzType) {\n+        Method[] methods = c.getDeclaredMethods();\n+        for (Method m : methods) {\n+            TestFormat.checkNoThrow(getAnnotation(m, Test.class) == null,\n+                                    \"Cannot use @Test annotation in \" + clazzType + \" \" + c + \" at \" + m);\n+            TestFormat.checkNoThrow(getAnnotation(m, Run.class) == null,\n+                                    \"Cannot use @Run annotation in \" + clazzType + \" \" + c + \" at \" + m);\n+            TestFormat.checkNoThrow(getAnnotation(m, Check.class) == null,\n+                                    \"Cannot use @Check annotation in \" + clazzType + \" \" + c + \" at \" + m);\n+        }\n+    }\n+\n+    \/**\n+     * Only called by internal tests testing the framework itself. Accessed by reflection. Not exposed to normal users.\n+     *\/\n+    private static void runTestsOnSameVM(Class<?> testClass) {\n+        if (testClass == null) {\n+            StackWalker walker = StackWalker.getInstance(StackWalker.Option.RETAIN_CLASS_REFERENCE);\n+            testClass = walker.getCallerClass();\n+        }\n+        TestFrameworkExecution framework = new TestFrameworkExecution(testClass);\n+        framework.start();\n+    }\n+\n+    \/**\n+     * Once everything is initialized and set up, start collecting tests and executing them afterwards.\n+     *\/\n+    private void start() {\n+        setupTests();\n+        checkForcedCompilationsCompleted();\n+        runTests();\n+    }\n+\n+    private void setupTests() {\n+        for (Class<?> clazz : testClass.getDeclaredClasses()) {\n+            checkAnnotationsInClass(clazz, \"inner\");\n+        }\n+        if (DUMP_REPLAY) {\n+            addReplay();\n+        }\n+        \/\/ Make sure to first setup test methods and make them non-inlineable and only then process compile commands.\n+        setupDeclaredTests();\n+        processControlAnnotations(testClass);\n+        processHelperClasses();\n+        setupCheckedAndCustomRunTests();\n+\n+        \/\/ All remaining tests are simple base tests without check or specific way to run them.\n+        addBaseTests();\n+        if (PRINT_VALID_IR_RULES) {\n+            irMatchRulePrinter.emit();\n+        }\n+        TestFormat.reportIfAnyFailures();\n+        declaredTests.clear();\n+        testMethodMap.clear();\n+    }\n+\n+    private void addBaseTests() {\n+        declaredTests.forEach((m, test) -> {\n+            if (test.getAttachedMethod() == null) {\n+                try {\n+                    Arguments argumentsAnno = getAnnotation(m, Arguments.class);\n+                    TestFormat.check(argumentsAnno != null || m.getParameterCount() == 0, \"Missing @Arguments annotation to define arguments of \" + m);\n+                    BaseTest baseTest = new BaseTest(test, shouldExcludeTest(m.getName()));\n+                    allTests.add(baseTest);\n+                    if (PRINT_VALID_IR_RULES) {\n+                       irMatchRulePrinter.emitRuleEncoding(m, baseTest.isSkipped());\n+                    }\n+                } catch (TestFormatException e) {\n+                    \/\/ Failure logged. Continue and report later.\n+                }\n+            }\n+        });\n+    }\n+\n+    \/**\n+     * Check if user wants to exclude this test by checking the -DTest and -DExclude lists.\n+     *\/\n+    private boolean shouldExcludeTest(String testName) {\n+        boolean hasTestList = testList != null;\n+        boolean hasExcludeList = excludeList != null;\n+        if (hasTestList) {\n+            return !testList.contains(testName) || (hasExcludeList && excludeList.contains(testName));\n+        } else if (hasExcludeList) {\n+            return excludeList.contains(testName);\n+        }\n+        return false;\n+    }\n+\n+    \/**\n+     * Generate replay compilation files.\n+     *\/\n+    private void addReplay() {\n+        String directive = \"[{ match: \\\"*.*\\\", DumpReplay: true }]\";\n+        TestFramework.check(WHITE_BOX.addCompilerDirective(directive) == 1, \"Failed to add DUMP_REPLAY directive\");\n+    }\n+\n+    private void processControlAnnotations(Class<?> clazz) {\n+        if (!XCOMP) {\n+            \/\/ Don't control compilations if -Xcomp is enabled.\n+            \/\/ Also apply compile commands to all inner classes of 'clazz'.\n+            ArrayList<Class<?>> classes = new ArrayList<>(Arrays.asList(clazz.getDeclaredClasses()));\n+            classes.add(clazz);\n+            for (Class<?> c : classes) {\n+                applyClassAnnotations(c);\n+                List<Executable> executables = new ArrayList<>(Arrays.asList(c.getDeclaredMethods()));\n+                Collections.addAll(executables, c.getDeclaredConstructors());\n+                for (Executable ex : executables) {\n+                    checkClassAnnotations(ex);\n+                    try {\n+                        applyIndependentCompilationCommands(ex);\n+                    } catch (TestFormatException e) {\n+                        \/\/ Failure logged. Continue and report later.\n+                    }\n+                }\n+\n+                \/\/ Only force compilation now because above annotations affect inlining\n+                for (Executable ex : executables) {\n+                    try {\n+                        applyForceCompileCommand(ex);\n+                    } catch (TestFormatException e) {\n+                        \/\/ Failure logged. Continue and report later.\n+                    }\n+                }\n+            }\n+        }\n+    }\n+\n+    private void applyClassAnnotations(Class<?> c) {\n+        ForceCompileClassInitializer anno = getAnnotation(c, ForceCompileClassInitializer.class);\n+        if (anno != null) {\n+            \/\/ Compile class initializer\n+            CompLevel level = anno.value();\n+            if (level == CompLevel.SKIP || level == CompLevel.WAIT_FOR_COMPILATION) {\n+                TestFormat.failNoThrow(\"Cannot define compilation level SKIP or WAIT_FOR_COMPILATION in \" +\n+                                       \"@ForceCompileClassInitializer at \" + c);\n+                return;\n+            }\n+            level = restrictCompLevel(anno.value());\n+            if (level != CompLevel.SKIP) {\n+                \/\/ Make sure class is initialized to avoid compilation bailout of <clinit>\n+                getClassObject(c.getName(), \"nested\"); \/\/ calls Class.forName() to initialize 'c'\n+                TestFormat.checkNoThrow(WHITE_BOX.enqueueInitializerForCompilation(c, level.getValue()),\n+                                        \"Failed to enqueue <clinit> of \" + c + \" for compilation. Did you specify \"\n+                                        + \"@ForceCompileClassInitializer without providing a static class initialization? \"\n+                                        + \"Make sure to provide any form of static initialization or remove the annotation.\");\n+            }\n+        }\n+    }\n+\n+    private void checkClassAnnotations(Executable ex) {\n+        TestFormat.checkNoThrow(getAnnotation(ex, ForceCompileClassInitializer.class) == null,\n+                                \"@ForceCompileClassInitializer only allowed at classes but not at method \" + ex);\n+    }\n+\n+    \/**\n+     * Exclude a method from compilation randomly and returns the compilation level on which a compilation is still\n+     * possible.\n+     *\/\n+    static CompLevel excludeRandomly(Executable ex) {\n+        Random random = Utils.getRandomInstance();\n+        boolean exclude = random.nextBoolean();\n+        CompLevel level = CompLevel.ANY;\n+        if (exclude) {\n+            String levelName;\n+            switch (random.nextInt() % 3) {\n+                case 1 -> {\n+                    level = CompLevel.C1;\n+                    WHITE_BOX.makeMethodNotCompilable(ex, CompLevel.C2.getValue(), false);\n+                    WHITE_BOX.makeMethodNotCompilable(ex, CompLevel.C2.getValue(), true);\n+                    levelName = \"C2\";\n+                }\n+                case 2 -> {\n+                    level = CompLevel.C2;\n+                    WHITE_BOX.makeMethodNotCompilable(ex, CompLevel.C1.getValue(), false);\n+                    WHITE_BOX.makeMethodNotCompilable(ex, CompLevel.C1.getValue(), true);\n+                    levelName = \"C1\";\n+                }\n+                default -> {\n+                    level = CompLevel.SKIP;\n+                    WHITE_BOX.makeMethodNotCompilable(ex, CompLevel.ANY.getValue(), false);\n+                    WHITE_BOX.makeMethodNotCompilable(ex, CompLevel.ANY.getValue(), true);\n+                    levelName = \"C1 and C2\";\n+                }\n+            }\n+            System.out.println(\"Excluding from \" + levelName + \" compilation: \" + ex);\n+        }\n+        return level;\n+    }\n+\n+    private void applyIndependentCompilationCommands(Executable ex) {\n+        ForceInline forceInlineAnno = getAnnotation(ex, ForceInline.class);\n+        DontInline dontInlineAnno = getAnnotation(ex, DontInline.class);\n+        ForceCompile forceCompileAnno = getAnnotation(ex, ForceCompile.class);\n+        DontCompile dontCompileAnno = getAnnotation(ex, DontCompile.class);\n+        checkCompilationCommandAnnotations(ex, forceInlineAnno, dontInlineAnno, forceCompileAnno, dontCompileAnno);\n+        \/\/ First handle inline annotations\n+        if (dontInlineAnno != null) {\n+            WHITE_BOX.testSetDontInlineMethod(ex, true);\n+        } else if (forceInlineAnno != null) {\n+            WHITE_BOX.testSetForceInlineMethod(ex, true);\n+        }\n+        if (dontCompileAnno != null) {\n+            CompLevel compLevel = dontCompileAnno.value();\n+            TestFormat.check(compLevel == CompLevel.C1 || compLevel == CompLevel.C2 || compLevel == CompLevel.ANY,\n+                             \"Can only specify compilation level C1 (no individual C1 levels), \" +\n+                             \"C2 or ANY (no compilation, same as specifying anything) in @DontCompile at \" + ex);\n+            dontCompileAtLevel(ex, compLevel);\n+        }\n+        if (EXCLUDE_RANDOM && getAnnotation(ex, Test.class) == null && forceCompileAnno == null && dontCompileAnno == null) {\n+            \/\/ Randomly exclude helper methods from compilation\n+            excludeRandomly(ex);\n+        }\n+    }\n+\n+    private void checkCompilationCommandAnnotations(Executable ex, ForceInline forceInlineAnno, DontInline dontInlineAnno, ForceCompile forceCompileAnno, DontCompile dontCompileAnno) {\n+        Test testAnno = getAnnotation(ex, Test.class);\n+        Run runAnno = getAnnotation(ex, Run.class);\n+        Check checkAnno = getAnnotation(ex, Check.class);\n+        TestFormat.check((testAnno == null && runAnno == null && checkAnno == null) || Stream.of(forceCompileAnno, dontCompileAnno, forceInlineAnno, dontInlineAnno).noneMatch(Objects::nonNull),\n+                         \"Cannot use explicit compile command annotations (@ForceInline, @DontInline,\" +\n+                         \"@ForceCompile or @DontCompile) together with @Test, @Check or @Run: \" + ex + \". Use compLevel in @Test for fine tuning.\");\n+        if (Stream.of(forceInlineAnno, dontCompileAnno, dontInlineAnno).filter(Objects::nonNull).count() > 1) {\n+            \/\/ Failure\n+            TestFormat.check(dontCompileAnno == null || dontInlineAnno == null,\n+                             \"@DontInline is implicitely done with @DontCompile annotation at \" + ex);\n+            TestFormat.fail(\"Cannot mix @ForceInline, @DontInline and @DontCompile at the same time at \" + ex);\n+        }\n+        TestFormat.check(forceInlineAnno == null || dontInlineAnno == null, \"Cannot have @ForceInline and @DontInline at the same time at \" + ex);\n+        if (forceCompileAnno != null && dontCompileAnno != null) {\n+            CompLevel forceCompile = forceCompileAnno.value();\n+            CompLevel dontCompile = dontCompileAnno.value();\n+            TestFormat.check(dontCompile != CompLevel.ANY,\n+                             \"Cannot have @DontCompile(CompLevel.ANY) and @ForceCompile at the same time at \" + ex);\n+            TestFormat.check(forceCompile != CompLevel.ANY,\n+                             \"Cannot have @ForceCompile(CompLevel.ANY) and @DontCompile at the same time at \" + ex);\n+            TestFormat.check(!CompLevel.overlapping(dontCompile, forceCompile),\n+                             \"Overlapping compilation levels with @ForceCompile and @DontCompile at \" + ex);\n+        }\n+    }\n+\n+    \/**\n+     * Exlude the method from compilation and make sure it is not inlined.\n+     *\/\n+    private void dontCompileAndDontInlineMethod(Method m) {\n+        WHITE_BOX.makeMethodNotCompilable(m, CompLevel.ANY.getValue(), true);\n+        WHITE_BOX.makeMethodNotCompilable(m, CompLevel.ANY.getValue(), false);\n+        WHITE_BOX.testSetDontInlineMethod(m, true);\n+    }\n+\n+    private void dontCompileAtLevel(Executable ex, CompLevel compLevel) {\n+        if (VERBOSE) {\n+            System.out.println(\"dontCompileAtLevel \" + ex + \" , level = \" + compLevel.name());\n+        }\n+        WHITE_BOX.makeMethodNotCompilable(ex, compLevel.getValue(), true);\n+        WHITE_BOX.makeMethodNotCompilable(ex, compLevel.getValue(), false);\n+        if (compLevel == CompLevel.ANY) {\n+            WHITE_BOX.testSetDontInlineMethod(ex, true);\n+        }\n+    }\n+\n+    private void applyForceCompileCommand(Executable ex) {\n+        ForceCompile forceCompileAnno = getAnnotation(ex, ForceCompile.class);\n+        if (forceCompileAnno != null) {\n+            CompLevel complevel = forceCompileAnno.value();\n+            TestFormat.check(complevel != CompLevel.SKIP && complevel != CompLevel.WAIT_FOR_COMPILATION,\n+                             \"Cannot define compilation level SKIP or WAIT_FOR_COMPILATION in @ForceCompile at \" + ex);\n+            complevel = restrictCompLevel(forceCompileAnno.value());\n+            if (EXCLUDE_RANDOM) {\n+                complevel = CompLevel.join(complevel, excludeRandomly(ex));\n+            }\n+            if (FLIP_C1_C2) {\n+                complevel = flipCompLevel(complevel);\n+            }\n+            if (complevel != CompLevel.SKIP) {\n+                enqueueForCompilation(ex, complevel);\n+                forceCompileMap.put(ex, complevel);\n+            }\n+        }\n+    }\n+\n+    static void enqueueForCompilation(Executable ex, CompLevel requestedCompLevel) {\n+        if (TestFrameworkExecution.VERBOSE) {\n+            System.out.println(\"enqueueForCompilation \" + ex + \", level = \" + requestedCompLevel);\n+        }\n+        CompLevel compLevel = restrictCompLevel(requestedCompLevel);\n+        if (compLevel != CompLevel.SKIP) {\n+            WHITE_BOX.enqueueMethodForCompilation(ex, compLevel.getValue());\n+        } else {\n+            System.out.println(\"Skipped compilation on level \" + requestedCompLevel + \" due to VM flags not allowing it.\");\n+        }\n+    }\n+\n+    \/**\n+     * Setup @Test annotated method an add them to the declaredTests map to have a convenient way of accessing them\n+     * once setting up a framework test (base  checked, or custom run test).\n+     *\/\n+    private void setupDeclaredTests() {\n+        for (Method m : testClass.getDeclaredMethods()) {\n+            Test testAnno = getAnnotation(m, Test.class);\n+            try {\n+                if (testAnno != null) {\n+                    addDeclaredTest(m);\n+                } else {\n+                    TestFormat.checkNoThrow(!m.isAnnotationPresent(IR.class), \"Found @IR annotation on non-@Test method \" + m);\n+                    TestFormat.checkNoThrow(!m.isAnnotationPresent(Warmup.class) || getAnnotation(m, Run.class) != null,\n+                                     \"Found @Warmup annotation on non-@Test or non-@Run method \" + m);\n+                }\n+            } catch (TestFormatException e) {\n+                \/\/ Failure logged. Continue and report later.\n+            }\n+        }\n+        TestFormat.checkNoThrow(!declaredTests.isEmpty(), \"Did not specify any @Test methods in \" + testClass);\n+    }\n+\n+    private void addDeclaredTest(Method m) {\n+        Test testAnno = getAnnotation(m, Test.class);\n+        checkTestAnnotations(m, testAnno);\n+        Warmup warmup = getAnnotation(m, Warmup.class);\n+        int warmupIterations = WARMUP_ITERATIONS;\n+        if (warmup != null) {\n+            warmupIterations = warmup.value();\n+            TestFormat.checkNoThrow(warmupIterations >= 0, \"Cannot have negative value for @Warmup at \" + m);\n+        }\n+\n+        if (!XCOMP) {\n+            \/\/ Don't inline test methods. Don't care when -Xcomp set.\n+            WHITE_BOX.testSetDontInlineMethod(m, true);\n+        }\n+        CompLevel compLevel = restrictCompLevel(testAnno.compLevel());\n+        if (FLIP_C1_C2) {\n+            compLevel = flipCompLevel(compLevel);\n+        }\n+        if (EXCLUDE_RANDOM) {\n+            compLevel = CompLevel.join(compLevel, excludeRandomly(m));\n+        }\n+        DeclaredTest test = new DeclaredTest(m, ArgumentValue.getArguments(m), compLevel, warmupIterations);\n+        declaredTests.put(m, test);\n+        testMethodMap.put(m.getName(), m);\n+    }\n+\n+    private void checkTestAnnotations(Method m, Test testAnno) {\n+        TestFormat.check(!testMethodMap.containsKey(m.getName()),\n+                         \"Cannot overload two @Test methods: \" + m + \", \" + testMethodMap.get(m.getName()));\n+        TestFormat.check(testAnno != null, m + \" must be a method with a @Test annotation\");\n+\n+        Check checkAnno = getAnnotation(m, Check.class);\n+        Run runAnno = getAnnotation(m, Run.class);\n+        TestFormat.check(checkAnno == null && runAnno == null,\n+                         m + \" has invalid @Check or @Run annotation while @Test annotation is present.\");\n+\n+        TestFormat.checkNoThrow(Arrays.stream(m.getParameterTypes()).noneMatch(AbstractInfo.class::isAssignableFrom),\n+                                \"Cannot \" + AbstractInfo.class + \" or any of its subclasses as parameter type at \" +\n+                                \"@Test method \" + m);\n+\n+        TestFormat.checkNoThrow(!AbstractInfo.class.isAssignableFrom(m.getReturnType()),\n+                                \"Cannot \" + AbstractInfo.class + \" or any of its subclasses as return type at \" +\n+                                \"@Test method \" + m);\n+    }\n+\n+\n+    \/**\n+     * Get the appropriate level as permitted by the test scenario and VM flags.\n+     *\/\n+    private static CompLevel restrictCompLevel(CompLevel compLevel) {\n+        if (!USE_COMPILER) {\n+            return CompLevel.SKIP;\n+        }\n+        if (compLevel == CompLevel.ANY) {\n+            \/\/ Use highest available compilation level by default (usually C2).\n+            compLevel = TIERED_COMPILATION_STOP_AT_LEVEL;\n+        }\n+        if (!TIERED_COMPILATION && compLevel.getValue() < CompLevel.C2.getValue()) {\n+            return CompLevel.SKIP;\n+        }\n+        if (TIERED_COMPILATION && compLevel.getValue() > TIERED_COMPILATION_STOP_AT_LEVEL.getValue()) {\n+            return CompLevel.SKIP;\n+        }\n+        return compLevel;\n+    }\n+\n+    private static CompLevel flipCompLevel(CompLevel compLevel) {\n+        switch (compLevel) {\n+            case C1, C1_LIMITED_PROFILE, C1_FULL_PROFILE -> {\n+                return CompLevel.C2;\n+            }\n+            case C2 -> {\n+                return CompLevel.C1;\n+            }\n+        }\n+        return compLevel;\n+    }\n+\n+    \/**\n+     * Verify that the helper classes do not contain illegal framework annotations and then apply the actions as\n+     * specified by the different helper class annotations.\n+     *\/\n+    private void processHelperClasses() {\n+        if (helperClasses != null) {\n+            for (Class<?> helperClass : helperClasses) {\n+                \/\/ Process the helper classes and apply the explicit compile commands\n+                TestFormat.checkNoThrow(helperClass != testClass,\n+                                        \"Cannot specify test \" + testClass + \" as helper class, too.\");\n+                checkHelperClass(helperClass);\n+                processControlAnnotations(helperClass);\n+            }\n+        }\n+    }\n+\n+    \/**\n+     * First set up checked (with @Check) and custom run tests (with @Run). All remaining unmatched\/unused @Test methods\n+     * are treated as base tests and set up as such later.\n+     *\/\n+    private void setupCheckedAndCustomRunTests() {\n+        for (Method m : testClass.getDeclaredMethods()) {\n+            Check checkAnno = getAnnotation(m, Check.class);\n+            Run runAnno = getAnnotation(m, Run.class);\n+            Arguments argumentsAnno = getAnnotation(m, Arguments.class);\n+            try {\n+                TestFormat.check(argumentsAnno == null || (checkAnno == null && runAnno == null),\n+                                 \"Cannot have @Argument annotation in combination with @Run or @Check at \" + m);\n+                if (checkAnno != null) {\n+                    addCheckedTest(m, checkAnno, runAnno);\n+                } else if (runAnno != null) {\n+                    addCustomRunTest(m, runAnno);\n+                }\n+            } catch (TestFormatException e) {\n+                \/\/ Failure logged. Continue and report later.\n+            }\n+        }\n+    }\n+\n+    \/**\n+     * Set up a checked test by first verifying the correct format of the @Test and @Check method and then adding it\n+     * to the allTests list which keeps track of all framework tests that are eventually executed.\n+     *\/\n+    private void addCheckedTest(Method m, Check checkAnno, Run runAnno) {\n+        Method testMethod = testMethodMap.get(checkAnno.test());\n+        DeclaredTest test = declaredTests.get(testMethod);\n+        checkCheckedTest(m, checkAnno, runAnno, testMethod, test);\n+        test.setAttachedMethod(m);\n+        CheckedTest.Parameter parameter = getCheckedTestParameter(m, testMethod);\n+        dontCompileAndDontInlineMethod(m);\n+        CheckedTest checkedTest = new CheckedTest(test, m, checkAnno, parameter, shouldExcludeTest(testMethod.getName()));\n+        allTests.add(checkedTest);\n+        if (PRINT_VALID_IR_RULES) {\n+            \/\/ Only need to emit IR verification information if IR verification is actually performed.\n+            irMatchRulePrinter.emitRuleEncoding(m, checkedTest.isSkipped());\n+        }\n+    }\n+\n+    private void checkCheckedTest(Method m, Check checkAnno, Run runAnno, Method testMethod, DeclaredTest test) {\n+        TestFormat.check(runAnno == null, m + \" has invalid @Run annotation while @Check annotation is present.\");\n+        TestFormat.check(testMethod != null, \"Did not find associated test method \\\"\" + m.getDeclaringClass().getName()\n+                                             + \".\" + checkAnno.test() + \"\\\" for @Check at \" + m);\n+        TestFormat.check(test != null, \"Missing @Test annotation for associated test method \" + testMethod + \" for @Check at \" + m);\n+        Method attachedMethod = test.getAttachedMethod();\n+        TestFormat.check(attachedMethod == null,\n+                         \"Cannot use @Test \" + testMethod + \" for more than one @Run or one @Check method. Found: \" + m + \", \" + attachedMethod);\n+    }\n+\n+    \/**\n+     * Only allow parameters as specified in {@link Check}.\n+     *\/\n+    private CheckedTest.Parameter getCheckedTestParameter(Method m, Method testMethod) {\n+        boolean firstParameterTestInfo = m.getParameterCount() > 0 && m.getParameterTypes()[0].equals(TestInfo.class);\n+        boolean secondParameterTestInfo = m.getParameterCount() > 1 && m.getParameterTypes()[1].equals(TestInfo.class);\n+        CheckedTest.Parameter parameter = null;\n+        Class<?> testReturnType = testMethod.getReturnType();\n+        switch (m.getParameterCount()) {\n+            case 0 -> parameter = CheckedTest.Parameter.NONE;\n+            case 1 -> {\n+                TestFormat.checkNoThrow(firstParameterTestInfo || m.getParameterTypes()[0] == testReturnType,\n+                                        \"Single-parameter version of @Check method \" + m + \" must match return type of @Test \" + testMethod);\n+                parameter = firstParameterTestInfo ? CheckedTest.Parameter.TEST_INFO_ONLY : CheckedTest.Parameter.RETURN_ONLY;\n+            }\n+            case 2 -> {\n+                TestFormat.checkNoThrow(m.getParameterTypes()[0] == testReturnType && secondParameterTestInfo,\n+                                        \"Two-parameter version of @Check method \" + m + \" must provide as first parameter the same\"\n+                                        + \" return type as @Test method \" + testMethod + \" and as second parameter an object of \" + TestInfo.class);\n+                parameter = CheckedTest.Parameter.BOTH;\n+            }\n+            default -> TestFormat.failNoThrow(\"@Check method \" + m + \" must provide either a none, single or two-parameter variant.\");\n+        }\n+        return parameter;\n+    }\n+\n+    \/**\n+     * Set up a custom run test by first verifying the correct format of the @Test and @Run method and then adding it\n+     * to the allTests list which keeps track of all framework tests that are eventually executed.\n+     *\/\n+    private void addCustomRunTest(Method m, Run runAnno) {\n+        checkRunMethod(m, runAnno);\n+        List<DeclaredTest> tests = new ArrayList<>();\n+        boolean shouldExcludeTest = true;\n+        for (String testName : runAnno.test()) {\n+            try {\n+                Method testMethod = testMethodMap.get(testName);\n+                DeclaredTest test = declaredTests.get(testMethod);\n+                checkCustomRunTest(m, testName, testMethod, test, runAnno.mode());\n+                test.setAttachedMethod(m);\n+                tests.add(test);\n+                \/\/ Only exclude custom run test if all test methods excluded\n+                shouldExcludeTest &= shouldExcludeTest(testMethod.getName());\n+            } catch (TestFormatException e) {\n+                \/\/ Logged, continue.\n+            }\n+        }\n+        if (tests.isEmpty()) {\n+            return; \/\/ There was a format violation. Return.\n+        }\n+        dontCompileAndDontInlineMethod(m);\n+        CustomRunTest customRunTest = new CustomRunTest(m, getAnnotation(m, Warmup.class), runAnno, tests, shouldExcludeTest);\n+        allTests.add(customRunTest);\n+        if (PRINT_VALID_IR_RULES) {\n+            tests.forEach(test -> irMatchRulePrinter.emitRuleEncoding(test.getTestMethod(), customRunTest.isSkipped()));\n+        }\n+    }\n+\n+    \/**\n+     * Only allow parameters as specified in {@link Run}.\n+     *\/\n+    private void checkCustomRunTest(Method m, String testName, Method testMethod, DeclaredTest test, RunMode runMode) {\n+        TestFormat.check(testMethod != null, \"Did not find associated @Test method \\\"\"  + m.getDeclaringClass().getName()\n+                                             + \".\" + testName + \"\\\" specified in @Run at \" + m);\n+        TestFormat.check(test != null,\n+                         \"Missing @Test annotation for associated test method \" + testName + \" for @Run at \" + m);\n+        Method attachedMethod = test.getAttachedMethod();\n+        TestFormat.check(attachedMethod == null,\n+                         \"Cannot use @Test \" + testMethod + \" for more than one @Run\/@Check method. Found: \"\n+                         + m + \", \" + attachedMethod);\n+        TestFormat.check(!test.hasArguments(),\n+                         \"Cannot use @Arguments at test method \" + testMethod + \" in combination with @Run method \" + m);\n+        Warmup warmupAnno = getAnnotation(testMethod, Warmup.class);\n+        TestFormat.checkNoThrow(warmupAnno == null,\n+                         \"Cannot set @Warmup at @Test method \" + testMethod + \" when used with its @Run method \"\n+                         + m + \". Use @Warmup at @Run method instead.\");\n+        Test testAnno = getAnnotation(testMethod, Test.class);\n+        TestFormat.checkNoThrow(runMode != RunMode.STANDALONE || testAnno.compLevel() == CompLevel.ANY,\n+                                \"Setting explicit compilation level for @Test method \" + testMethod + \" has no effect \"\n+                                + \"when used with STANDALONE @Run method \" + m);\n+    }\n+\n+    private void checkRunMethod(Method m, Run runAnno) {\n+        TestFormat.check(runAnno.test().length > 0, \"@Run method \" + m + \" must specify at least one test method\");\n+        TestFormat.checkNoThrow(m.getParameterCount() == 0 || (m.getParameterCount() == 1 && m.getParameterTypes()[0].equals(RunInfo.class)),\n+                                \"@Run method \" + m + \" must specify either no parameter or exactly one \" + RunInfo.class + \" parameter.\");\n+        Warmup warmupAnno = getAnnotation(m, Warmup.class);\n+        TestFormat.checkNoThrow(warmupAnno == null || runAnno.mode() != RunMode.STANDALONE,\n+                                \"Cannot set @Warmup at @Run method \" + m + \" when used with RunMode.STANDALONE. The @Run method is only invoked once.\");\n+    }\n+\n+    private static <T extends Annotation> T getAnnotation(AnnotatedElement element, Class<T> c) {\n+        T[] annos =  element.getAnnotationsByType(c);\n+        TestFormat.check(annos.length < 2, element + \" has duplicated annotations\");\n+        return Arrays.stream(annos).findFirst().orElse(null);\n+    }\n+\n+    \/**\n+     * Ensure that all compilations that were enforced (added to compilation queue) by framework annotations are\n+     * completed. Wait if necessary for a short amount of time for their completion.\n+     *\/\n+    private void checkForcedCompilationsCompleted() {\n+        if (forceCompileMap.isEmpty()) {\n+            return;\n+        }\n+        final long started = System.currentTimeMillis();\n+        long elapsed;\n+        do {\n+            forceCompileMap.entrySet().removeIf(entry -> WHITE_BOX.getMethodCompilationLevel(entry.getKey()) == entry.getValue().getValue());\n+            if (forceCompileMap.isEmpty()) {\n+                \/\/ All @ForceCompile methods are compiled at the requested level.\n+                return;\n+            }\n+            \/\/ Retry again if not yet compiled.\n+            forceCompileMap.forEach(TestFrameworkExecution::enqueueForCompilation);\n+            elapsed = System.currentTimeMillis() - started;\n+        } while (elapsed < 5000);\n+        StringBuilder builder = new StringBuilder();\n+        forceCompileMap.forEach((key, value) -> builder.append(\"- \").append(key).append(\" at CompLevel.\").append(value).append(\"\\n\"));\n+        TestRun.fail(\"Could not force compile the following @ForceCompile methods:\\n\" + builder.toString());\n+    }\n+\n+    \/**\n+     * Once all framework tests are collected, they are run in this method.\n+     *\/\n+    private void runTests() {\n+        TreeMap<Long, String> durations = (PRINT_TIMES || VERBOSE) ? new TreeMap<>() : null;\n+        long startTime = System.nanoTime();\n+        List<AbstractTest> testList;\n+        boolean testFilterPresent = testFilterPresent();\n+        if (testFilterPresent) {\n+            \/\/ Only run the specified tests by the user filters -DTest and\/or -DExclude.\n+            testList = allTests.stream().filter(test -> !test.isSkipped()).collect(Collectors.toList());\n+            if (testList.isEmpty()) {\n+                \/\/ Throw an exception to inform the user about an empty specified test set with -DTest and\/or -DExclude\n+                throw new NoTestsRunException();\n+            }\n+        } else {\n+            testList = allTests;\n+        }\n+\n+        if (SHUFFLE_TESTS) {\n+            \/\/ Execute tests in random order (execution sequence affects profiling). This is done by default.\n+            Collections.shuffle(testList);\n+        }\n+        StringBuilder builder = new StringBuilder();\n+        int failures = 0;\n+\n+        \/\/ Execute all tests and keep track of each exception that is thrown. These are then reported once all tests\n+        \/\/ are executing. This prevents a premature exit without running all tests.\n+        for (AbstractTest test : testList) {\n+            if (VERBOSE) {\n+                System.out.println(\"Run \" + test.toString());\n+            } else if (testFilterPresent) {\n+                TestFrameworkSocket.write(\"Run \" + test.toString(), \"testfilter\", true);\n+            }\n+            try {\n+                test.run();\n+            } catch (TestRunException e) {\n+                StringWriter sw = new StringWriter();\n+                PrintWriter pw = new PrintWriter(sw);\n+                e.printStackTrace(pw);\n+                builder.append(test.toString()).append(\":\\n\").append(sw.toString()).append(\"\\n\\n\");\n+                failures++;\n+            }\n+            if (PRINT_TIMES || VERBOSE) {\n+                long endTime = System.nanoTime();\n+                long duration = (endTime - startTime);\n+                durations.put(duration, test.getName());\n+                if (VERBOSE) {\n+                    System.out.println(\"Done \" + test.getName() + \": \" + duration + \" ns = \" + (duration \/ 1000000) + \" ms\");\n+                }\n+            }\n+            if (GC_AFTER) {\n+                System.out.println(\"doing GC\");\n+                System.gc();\n+            }\n+        }\n+\n+        \/\/ Print execution times\n+        if (VERBOSE || PRINT_TIMES) {\n+            System.out.println(\"\\n\\nTest execution times:\");\n+            for (Map.Entry<Long, String> entry : durations.entrySet()) {\n+                System.out.format(\"%-10s%15d ns\\n\", entry.getValue() + \":\", entry.getKey());\n+            }\n+        }\n+\n+        if (failures > 0) {\n+            \/\/ Finally, report all occurred exceptions in a nice format.\n+            String msg = \"\\n\\nTest Failures (\" + failures + \")\\n\" +\n+                         \"----------------\" + \"-\".repeat(String.valueOf(failures).length());\n+            throw new TestRunException(msg + \"\\n\" + builder.toString());\n+        }\n+    }\n+\n+    private boolean testFilterPresent() {\n+        return testList != null || excludeList != null;\n+    }\n+\n+    enum TriState {\n+        Maybe,\n+        Yes,\n+        No\n+    }\n+\n+    static void compile(Method m, CompLevel compLevel) {\n+        TestRun.check(compLevel != CompLevel.SKIP && compLevel != CompLevel.WAIT_FOR_COMPILATION,\n+                         \"Invalid compilation request with level \" + compLevel);\n+        enqueueForCompilation(m, compLevel);\n+    }\n+\n+    static void deoptimize(Method m) {\n+        WHITE_BOX.deoptimizeMethod(m);\n+    }\n+\n+    static boolean isCompiled(Method m) {\n+        return compiledAtLevel(m, CompLevel.ANY) == TriState.Yes;\n+    }\n+\n+    static boolean isC1Compiled(Method m) {\n+        return compiledByC1(m) == TriState.Yes;\n+    }\n+\n+    static boolean isC2Compiled(Method m) {\n+        return compiledByC2(m) == TriState.Yes;\n+    }\n+\n+    static boolean isCompiledAtLevel(Method m, CompLevel compLevel) {\n+        return compiledAtLevel(m, compLevel) == TriState.Yes;\n+    }\n+\n+    static void assertDeoptimizedByC1(Method m) {\n+        if (notUnstableDeoptAssertion(m, CompLevel.C1)) {\n+            TestRun.check(compiledByC1(m) != TriState.Yes || PerMethodTrapLimit == 0 || !ProfileInterpreter,\n+                          m + \" should have been deoptimized by C1\");\n+        }\n+    }\n+\n+    static void assertDeoptimizedByC2(Method m) {\n+        if (notUnstableDeoptAssertion(m, CompLevel.C2)) {\n+            TestRun.check(compiledByC2(m) != TriState.Yes || PerMethodTrapLimit == 0 || !ProfileInterpreter,\n+                          m + \" should have been deoptimized by C2\");\n+        }\n+    }\n+\n+    \/**\n+     * Some VM flags could make the deopt assertions unstable.\n+     *\/\n+    private static boolean notUnstableDeoptAssertion(Method m, CompLevel level) {\n+        return (USE_COMPILER && !XCOMP && !TEST_C1 &&\n+               (!EXCLUDE_RANDOM || WHITE_BOX.isMethodCompilable(m, level.getValue(), false)));\n+    }\n+\n+    static void assertCompiledByC1(Method m) {\n+        TestRun.check(compiledByC1(m) != TriState.No, m + \" should have been C1 compiled\");\n+    }\n+\n+    static void assertCompiledByC2(Method m) {\n+        TestRun.check(compiledByC2(m) != TriState.No, m + \" should have been C2 compiled\");\n+    }\n+\n+    static void assertCompiledAtLevel(Method m, CompLevel level) {\n+        TestRun.check(compiledAtLevel(m, level) != TriState.No, m + \" should have been compiled at level \" + level.name());\n+    }\n+\n+    static void assertNotCompiled(Method m) {\n+        TestRun.check(!isC1Compiled(m), m + \" should not have been compiled by C1\");\n+        TestRun.check(!isC2Compiled(m), m + \" should not have been compiled by C2\");\n+    }\n+\n+    static void assertCompiled(Method m) {\n+        TestRun.check(compiledByC1(m) != TriState.No || compiledByC2(m) != TriState.No, m + \" should have been compiled\");\n+    }\n+\n+    private static TriState compiledByC1(Method m) {\n+        TriState triState = compiledAtLevel(m, CompLevel.C1);\n+        if (triState != TriState.No) {\n+            return triState;\n+        }\n+        triState = compiledAtLevel(m, CompLevel.C1_LIMITED_PROFILE);\n+        if (triState != TriState.No) {\n+            return triState;\n+        }\n+        triState = compiledAtLevel(m, CompLevel.C1_FULL_PROFILE);\n+        return triState;\n+    }\n+\n+    private static TriState compiledByC2(Method m) {\n+        return compiledAtLevel(m, CompLevel.C2);\n+    }\n+\n+    private static TriState compiledAtLevel(Method m, CompLevel level) {\n+        if (WHITE_BOX.isMethodCompiled(m, false)) {\n+            switch (level) {\n+                case C1, C1_LIMITED_PROFILE, C1_FULL_PROFILE, C2 -> {\n+                    if (WHITE_BOX.getMethodCompilationLevel(m, false) == level.getValue()) {\n+                        return TriState.Yes;\n+                    }\n+                }\n+                case ANY -> {\n+                    return TriState.Yes;\n+                }\n+                default -> TestRun.fail(\"compiledAtLevel() should not be called with \" + level);\n+            }\n+        }\n+        if (!USE_COMPILER || XCOMP || TEST_C1 ||\n+            (EXCLUDE_RANDOM && !WHITE_BOX.isMethodCompilable(m, level.getValue(), false))) {\n+            return TriState.Maybe;\n+        }\n+        return TriState.No;\n+    }\n+}\n+\n+\/**\n+ * Abstract super class for base, checked and custom run tests.\n+ *\/\n+abstract class AbstractTest {\n+    protected static final WhiteBox WHITE_BOX = WhiteBox.getWhiteBox();\n+    protected static final int TEST_COMPILATION_TIMEOUT = Integer.parseInt(System.getProperty(\"TestCompilationTimeout\", \"10000\"));\n+    protected static final int WAIT_FOR_COMPILATION_TIMEOUT = Integer.parseInt(System.getProperty(\"WaitForCompilationTimeout\", \"10000\"));\n+    protected static final boolean VERIFY_OOPS = (Boolean)WHITE_BOX.getVMFlag(\"VerifyOops\");\n+\n+    protected final int warmupIterations;\n+    protected final boolean skip;\n+\n+    AbstractTest(int warmupIterations, boolean skip) {\n+        this.warmupIterations = warmupIterations;\n+        this.skip = skip;\n+    }\n+\n+    protected boolean shouldCompile(DeclaredTest test) {\n+        return test.getCompLevel() != CompLevel.SKIP;\n+    }\n+\n+    abstract String getName();\n+\n+    \/**\n+     * Should test be executed?\n+     *\/\n+    public boolean isSkipped() {\n+        return skip;\n+    }\n+\n+    \/**\n+     * See {@link CompLevel#WAIT_FOR_COMPILATION}.\n+     *\/\n+    protected static boolean isWaitForCompilation(DeclaredTest test) {\n+        return test.getCompLevel() == CompLevel.WAIT_FOR_COMPILATION;\n+    }\n+\n+    protected static Object createInvocationTarget(Method method) {\n+        Class<?> clazz = method.getDeclaringClass();\n+        Object invocationTarget;\n+        if (Modifier.isStatic(method.getModifiers())) {\n+            invocationTarget = null;\n+        } else {\n+            try {\n+                Constructor<?> constructor = clazz.getDeclaredConstructor();\n+                constructor.setAccessible(true);\n+                invocationTarget = constructor.newInstance();\n+            } catch (Exception e) {\n+                throw new TestRunException(\"Could not create instance of \" + clazz\n+                                           + \". Make sure there is a constructor without arguments.\", e);\n+            }\n+        }\n+        return invocationTarget;\n+    }\n+\n+    \/**\n+     * Run the associated test.\n+     *\/\n+    public void run() {\n+        if (skip) {\n+            return;\n+        }\n+        onStart();\n+        for (int i = 0; i < warmupIterations; i++) {\n+            invokeTest();\n+        }\n+        onWarmupFinished();\n+        compileTest();\n+        \/\/ Always run the test as a last step of the test execution.\n+        invokeTest();\n+    }\n+\n+    protected void onStart() {\n+        \/\/ Do nothing by default.\n+    }\n+\n+    abstract protected void invokeTest();\n+\n+    abstract protected void onWarmupFinished();\n+\n+    abstract protected void compileTest();\n+\n+    protected void compileMethod(DeclaredTest test) {\n+        final Method testMethod = test.getTestMethod();\n+        TestRun.check(WHITE_BOX.isMethodCompilable(testMethod, test.getCompLevel().getValue(), false),\n+                      \"Method \" + testMethod + \" not compilable at level \" + test.getCompLevel()\n+                      + \". Did you use compileonly without including all @Test methods?\");\n+        TestRun.check(WHITE_BOX.isMethodCompilable(testMethod),\n+                      \"Method \" + testMethod + \" not compilable at level \" + test.getCompLevel()\n+                      + \". Did you use compileonly without including all @Test methods?\");\n+        if (TestFramework.VERBOSE) {\n+            System.out.println(\"Compile method \" + testMethod + \" after warm-up...\");\n+        }\n+\n+        final boolean maybeCodeBufferOverflow = (TestFrameworkExecution.TEST_C1 && VERIFY_OOPS);\n+        final long started = System.currentTimeMillis();\n+        long elapsed = 0;\n+        enqueueMethodForCompilation(test);\n+\n+        do {\n+            if (!WHITE_BOX.isMethodQueuedForCompilation(testMethod)) {\n+                if (elapsed > 0) {\n+                    if (TestFrameworkExecution.VERBOSE) {\n+                        System.out.println(testMethod + \" is not in queue anymore due to compiling it simultaneously on \" +\n+                                           \"a different level. Enqueue again.\");\n+                    }\n+                    enqueueMethodForCompilation(test);\n+                }\n+            }\n+            if (maybeCodeBufferOverflow && elapsed > 1000 && !WHITE_BOX.isMethodCompiled(testMethod, false)) {\n+                \/\/ Let's disable VerifyOops temporarily and retry.\n+                WHITE_BOX.setBooleanVMFlag(\"VerifyOops\", false);\n+                WHITE_BOX.clearMethodState(testMethod);\n+                enqueueMethodForCompilation(test);\n+                WHITE_BOX.setBooleanVMFlag(\"VerifyOops\", true);\n+            }\n+\n+            if (WHITE_BOX.getMethodCompilationLevel(testMethod, false) == test.getCompLevel().getValue()) {\n+                break;\n+            }\n+            elapsed = System.currentTimeMillis() - started;\n+        } while (elapsed < TEST_COMPILATION_TIMEOUT);\n+        TestRun.check(elapsed < TEST_COMPILATION_TIMEOUT,\n+                      \"Could not compile \" + testMethod + \" after \" + TEST_COMPILATION_TIMEOUT\/1000 + \"s\");\n+        checkCompilationLevel(test);\n+    }\n+\n+    private void enqueueMethodForCompilation(DeclaredTest test) {\n+        TestFrameworkExecution.enqueueForCompilation(test.getTestMethod(), test.getCompLevel());\n+    }\n+\n+    protected void checkCompilationLevel(DeclaredTest test) {\n+        CompLevel level = CompLevel.forValue(WHITE_BOX.getMethodCompilationLevel(test.getTestMethod()));\n+        TestRun.check(level == test.getCompLevel(),  \"Compilation level should be \" + test.getCompLevel().name()\n+                                                     + \" (requested) but was \" + level.name() + \" for \" + test.getTestMethod());\n+    }\n+\n+    final protected void waitForCompilation(DeclaredTest test) {\n+        final Method testMethod = test.getTestMethod();\n+        final boolean maybeCodeBufferOverflow = (TestFrameworkExecution.TEST_C1 && VERIFY_OOPS);\n+        final long started = System.currentTimeMillis();\n+        boolean stateCleared = false;\n+        long elapsed;\n+        do {\n+            elapsed = System.currentTimeMillis() - started;\n+            int level = WHITE_BOX.getMethodCompilationLevel(testMethod);\n+            if (maybeCodeBufferOverflow && elapsed > 5000\n+                && (!WHITE_BOX.isMethodCompiled(testMethod, false) || level != test.getCompLevel().getValue())) {\n+                retryDisabledVerifyOops(testMethod, stateCleared);\n+                stateCleared = true;\n+            } else {\n+                invokeTest();\n+            }\n+\n+            boolean isCompiled = WHITE_BOX.isMethodCompiled(testMethod, false);\n+            if (TestFrameworkExecution.VERBOSE) {\n+                System.out.println(\"Is \" + testMethod + \" compiled? \" + isCompiled);\n+            }\n+            if (isCompiled || TestFrameworkExecution.XCOMP) {\n+                \/\/ Don't wait for compilation if -Xcomp is enabled.\n+                return;\n+            }\n+        } while (elapsed < WAIT_FOR_COMPILATION_TIMEOUT);\n+        TestRun.fail(testMethod + \" not compiled after waiting for \" + WAIT_FOR_COMPILATION_TIMEOUT\/1000 + \" s\");\n+    }\n+\n+    \/**\n+     * If it takes too long, try to disable Verify Oops.\n+     *\/\n+    private void retryDisabledVerifyOops(Method testMethod, boolean stateCleared) {\n+        System.out.println(\"Temporarily disabling VerifyOops\");\n+        try {\n+            WHITE_BOX.setBooleanVMFlag(\"VerifyOops\", false);\n+            if (!stateCleared) {\n+                WHITE_BOX.clearMethodState(testMethod);\n+            }\n+            invokeTest();\n+        } finally {\n+            WHITE_BOX.setBooleanVMFlag(\"VerifyOops\", true);\n+            System.out.println(\"Re-enabled VerifyOops\");\n+        }\n+    }\n+}\n+\n+\/**\n+ * A base test only consists of a single @Test method. See {@link Test} for more details and its precise definition.\n+ *\/\n+class BaseTest extends AbstractTest {\n+    private final DeclaredTest test;\n+    protected final Method testMethod;\n+    protected final TestInfo testInfo;\n+    protected final Object invocationTarget;\n+    private final boolean shouldCompile;\n+    private final boolean waitForCompilation;\n+\n+    public BaseTest(DeclaredTest test, boolean skip) {\n+        super(test.getWarmupIterations(), skip);\n+        this.test = test;\n+        this.testMethod = test.getTestMethod();\n+        this.testInfo = new TestInfo(test);\n+        this.invocationTarget = createInvocationTarget(testMethod);\n+        this.shouldCompile = shouldCompile(test);\n+        this.waitForCompilation = isWaitForCompilation(test);\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"Base Test: @Test \" + testMethod.getName();\n+    }\n+\n+    @Override\n+    public String getName() {\n+        return testMethod.getName();\n+    }\n+\n+    @Override\n+    protected void onStart() {\n+        test.printFixedRandomArguments();\n+    }\n+\n+    @Override\n+    public void onWarmupFinished() {\n+        testInfo.setWarmUpFinished();\n+    }\n+\n+    @Override\n+    protected void invokeTest() {\n+        verify(invokeTestMethod());\n+    }\n+\n+    private Object invokeTestMethod() {\n+        try {\n+            if (test.hasArguments()) {\n+                return testMethod.invoke(invocationTarget, test.getArguments());\n+            } else {\n+                return testMethod.invoke(invocationTarget);\n+            }\n+        } catch (Exception e) {\n+            throw new TestRunException(\"There was an error while invoking @Test method \" + testMethod\n+                                       + \". Used arguments: \" + test.getArgumentsString(), e);\n+        }\n+    }\n+\n+    @Override\n+    protected void compileTest() {\n+        if (shouldCompile) {\n+            if (waitForCompilation) {\n+                waitForCompilation(test);\n+            } else {\n+                compileMethod(test);\n+            }\n+        }\n+    }\n+\n+    \/**\n+     * Verify the result\n+     *\/\n+    public void verify(Object result) { \/* no verification in BaseTests *\/ }\n+}\n+\n+\/**\n+ * A checked test is an extension of a base test with additional verification done in a @Check method.\n+ * See {@link Check} for more details and its precise definition.\n+ *\/\n+class CheckedTest extends BaseTest {\n+    private final Method checkMethod;\n+    private final CheckAt checkAt;\n+    private final Parameter parameter;\n+    private final Object checkInvocationTarget;\n+\n+    enum Parameter {\n+        NONE, RETURN_ONLY, TEST_INFO_ONLY, BOTH\n+    }\n+\n+    public CheckedTest(DeclaredTest test, Method checkMethod, Check checkSpecification, Parameter parameter, boolean excludedByUser) {\n+        super(test, excludedByUser);\n+        \/\/ Make sure we can also call non-public or public methods in package private classes\n+        checkMethod.setAccessible(true);\n+        this.checkMethod = checkMethod;\n+        this.checkAt = checkSpecification.when();\n+        this.parameter = parameter;\n+        \/\/ Use the same invocation target\n+        if (Modifier.isStatic(checkMethod.getModifiers())) {\n+            this.checkInvocationTarget = null;\n+        } else {\n+            \/\/ Use the same invocation target as the test method if check method is non-static.\n+            this.checkInvocationTarget = this.invocationTarget != null ? this.invocationTarget : createInvocationTarget(checkMethod);\n+        }\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"Checked Test: @Check \" + checkMethod.getName() + \" - @Test: \" + testMethod.getName();\n+    }\n+\n+    @Override\n+    public String getName() {\n+        return checkMethod.getName();\n+    }\n+\n+    @Override\n+    public void verify(Object result) {\n+        boolean shouldVerify = false;\n+        switch (checkAt) {\n+            case EACH_INVOCATION -> shouldVerify = true;\n+            case COMPILED -> shouldVerify = !testInfo.isWarmUp();\n+        }\n+        if (shouldVerify) {\n+            try {\n+                switch (parameter) {\n+                    case NONE -> checkMethod.invoke(checkInvocationTarget);\n+                    case RETURN_ONLY -> checkMethod.invoke(checkInvocationTarget, result);\n+                    case TEST_INFO_ONLY -> checkMethod.invoke(checkInvocationTarget, testInfo);\n+                    case BOTH -> checkMethod.invoke(checkInvocationTarget, result, testInfo);\n+                }\n+            } catch (Exception e) {\n+                throw new TestRunException(\"There was an error while invoking @Check method \" + checkMethod, e);\n+            }\n+        }\n+    }\n+}\n+\n+\/**\n+ * A custom run test allows the user to have full control over how the @Test method is invoked by specifying\n+ * a dedicated @Run method. See {@link Run} for more details and its precise definition.\n+ *\/\n+class CustomRunTest extends AbstractTest {\n+    private final Method runMethod;\n+    private final RunMode mode;\n+    private final Object runInvocationTarget;\n+    private final List<DeclaredTest> tests;\n+    private final RunInfo runInfo;\n+\n+    public CustomRunTest(Method runMethod, Warmup warmUpAnno, Run runSpecification, List<DeclaredTest> tests, boolean skip) {\n+        \/\/ Make sure we can also call non-public or public methods in package private classes\n+        super(warmUpAnno != null ? warmUpAnno.value() : TestFrameworkExecution.WARMUP_ITERATIONS, skip);\n+        TestFormat.checkNoThrow(warmupIterations >= 0, \"Cannot have negative value for @Warmup at \" + runMethod);\n+        runMethod.setAccessible(true);\n+        this.runMethod = runMethod;\n+        this.runInvocationTarget = createInvocationTarget(runMethod);\n+        this.mode = runSpecification.mode();\n+        this.tests = tests;\n+        this.runInfo = new RunInfo(tests);\n+    }\n+\n+    @Override\n+    public String toString() {\n+        String s = \"Custom Run Test: @Run: \" + runMethod.getName() + \" - @Test\";\n+        if (tests.size() == 1) {\n+            s += \": \" + tests.get(0).getTestMethod().getName();\n+        } else {\n+            s += \"s: {\" + tests.stream().map(t -> t.getTestMethod().getName())\n+                                             .collect(Collectors.joining(\",\")) + \"}\";\n+        }\n+        return s;\n+    }\n+\n+    @Override\n+    String getName() {\n+        return runMethod.getName();\n+    }\n+\n+    @Override\n+    public void run() {\n+        if (skip) {\n+            return;\n+        }\n+        switch (mode) {\n+            case STANDALONE -> {\n+                runInfo.setWarmUpFinished();\n+                invokeTest();\n+            }\/\/ Invoke once but do not apply anything else.\n+            case NORMAL -> super.run();\n+        }\n+    }\n+\n+    @Override\n+    public void onWarmupFinished() {\n+        runInfo.setWarmUpFinished();\n+    }\n+\n+    @Override\n+    protected void compileTest() {\n+        if (tests.size() == 1) {\n+            compileSingleTest();\n+        } else {\n+            compileMultipleTests();\n+        }\n+    }\n+\n+    private void compileSingleTest() {\n+        DeclaredTest test = tests.get(0);\n+        if (shouldCompile(test)) {\n+            if (isWaitForCompilation(test)) {\n+                waitForCompilation(test);\n+            } else {\n+                compileMethod(test);\n+            }\n+        }\n+    }\n+\n+    private void compileMultipleTests() {\n+        boolean anyWaitForCompilation = false;\n+        boolean anyCompileMethod = false;\n+        ExecutorService executor = Executors.newFixedThreadPool(tests.size());\n+        for (DeclaredTest test : tests) {\n+            if (shouldCompile(test)) {\n+                if (isWaitForCompilation(test)) {\n+                    anyWaitForCompilation = true;\n+                    executor.execute(() -> waitForCompilation(test));\n+                } else {\n+                    anyCompileMethod = true;\n+                    executor.execute(() -> compileMethod(test));\n+                }\n+            }\n+        }\n+        executor.shutdown();\n+        int timeout;\n+        if (anyCompileMethod && anyWaitForCompilation) {\n+            timeout = Math.max(WAIT_FOR_COMPILATION_TIMEOUT, TEST_COMPILATION_TIMEOUT) + 5000;\n+        } else if (anyWaitForCompilation) {\n+            timeout = WAIT_FOR_COMPILATION_TIMEOUT + 5000;\n+        } else {\n+            timeout = TEST_COMPILATION_TIMEOUT + 5000;\n+        }\n+        try {\n+            executor.awaitTermination(timeout, TimeUnit.MILLISECONDS);\n+        } catch (InterruptedException e) {\n+            TestRun.fail(\"Some compilations did not complete after \" + timeout + \"ms for @Run method \" + runMethod);\n+        }\n+    }\n+\n+    \/**\n+     * Do not directly run the test but rather the run method that is responsible for invoking the actual test.\n+     *\/\n+    @Override\n+    protected void invokeTest() {\n+        try {\n+            if (runMethod.getParameterCount() == 1) {\n+                runMethod.invoke(runInvocationTarget, runInfo);\n+            } else {\n+                runMethod.invoke(runInvocationTarget);\n+            }\n+        } catch (Exception e) {\n+            throw new TestRunException(\"There was an error while invoking @Run method \" + runMethod, e);\n+        }\n+    }\n+\n+    @Override\n+    protected void checkCompilationLevel(DeclaredTest test) {\n+        CompLevel level = CompLevel.forValue(WhiteBox.getWhiteBox().getMethodCompilationLevel(test.getTestMethod()));\n+        if (level != test.getCompLevel()) {\n+            String message = \"Compilation level should be \" + test.getCompLevel().name() + \" (requested) but was \"\n+                             + level.name() + \" for \" + test.getTestMethod() + \".\";\n+            switch (mode) {\n+                case STANDALONE -> TestFramework.fail(\"Should not be called for STANDALONE method \" + runMethod);\n+                case NORMAL -> message = message + \"\\nCheck your @Run method \" + runMethod + \" to ensure that \"\n+                                         + test.getTestMethod() + \" is called at least once in each iteration.\";\n+            }\n+            TestRun.fail(message);\n+        }\n+    }\n+}\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/TestFrameworkExecution.java","additions":1449,"deletions":0,"binary":false,"changes":1449,"status":"added"},{"patch":"@@ -0,0 +1,120 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.test.lib.hotspot.ir_framework;\n+\n+import sun.hotspot.WhiteBox;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+\n+\/**\n+ * This class' main method is called from {@link TestFramework} and represents the so-called \"flag VM\". It uses the\n+ * Whitebox API to determine the necessary additional flags to run the test VM (e.g. to do IR matching). It returns\n+ * the flags over the dedicated TestFramework socket.\n+ *\/\n+class TestFrameworkPrepareFlags {\n+    private static final WhiteBox WHITE_BOX;\n+\n+    static {\n+        try {\n+            WHITE_BOX = WhiteBox.getWhiteBox();\n+        } catch (UnsatisfiedLinkError e) {\n+            TestFramework.fail(\"Could not load WhiteBox\", e);\n+            throw e; \/\/ Not reached\n+        }\n+    }\n+\n+    private static final boolean TIERED_COMPILATION = (Boolean)WHITE_BOX.getVMFlag(\"TieredCompilation\");\n+    private static final CompLevel TIERED_COMPILATION_STOP_AT_LEVEL =\n+            CompLevel.forValue(((Long)WHITE_BOX.getVMFlag(\"TieredStopAtLevel\")).intValue());\n+    private static final boolean TEST_C1 = TIERED_COMPILATION\n+                                           && TIERED_COMPILATION_STOP_AT_LEVEL.getValue() < CompLevel.C2.getValue();\n+\n+    private static final boolean VERBOSE = Boolean.getBoolean(\"Verbose\");\n+    private static final boolean USE_COMPILER = WHITE_BOX.getBooleanVMFlag(\"UseCompiler\");\n+    private static final boolean EXCLUDE_RANDOM = Boolean.getBoolean(\"ExcludeRandom\");\n+    private static final boolean FLIP_C1_C2 = Boolean.getBoolean(\"FlipC1C2\");\n+    private static final boolean REQUESTED_VERIFY_IR = Boolean.parseBoolean(System.getProperty(\"VerifyIR\", \"true\"));\n+    private static final boolean VERIFY_IR = REQUESTED_VERIFY_IR && USE_COMPILER && !EXCLUDE_RANDOM && !FLIP_C1_C2 && !TEST_C1;\n+\n+    private static String[] getPrintFlags() {\n+        return new String[] {\"-XX:+PrintCompilation\", \"-XX:+UnlockDiagnosticVMOptions\"};\n+    }\n+\n+    \/**\n+     * Main entry point of the flag VM.\n+     *\/\n+    public static void main(String[] args) {\n+        try {\n+            String testClassName = args[0];\n+            if (VERBOSE) {\n+                System.out.println(\"TestFrameworkPrepareFlags main() called. Prepare test VM flags to run class \" + testClassName);\n+            }\n+            Class<?> testClass;\n+            try {\n+                testClass = Class.forName(testClassName);\n+            } catch (Exception e) {\n+                throw new TestRunException(\"Could not find test class \" + testClassName, e);\n+            }\n+            emitTestVMFlags(prepareTestVmFlags(testClass));\n+        } finally {\n+            TestFrameworkSocket.closeClientSocket();\n+        }\n+    }\n+\n+    \/**\n+     * Emit test VM flags to standard output to parse them from the TestFramework \"driver\" VM again which adds them to the test VM.\n+     *\/\n+    private static void emitTestVMFlags(ArrayList<String> flags) {\n+        String encoding = TestFramework.TEST_VM_FLAGS_START + \"\\n\" + String.join(TestFramework.TEST_VM_FLAGS_DELIMITER, flags)\n+                      + \"\\n\" + TestFramework.TEST_VM_FLAGS_END;\n+        TestFrameworkSocket.write(encoding, \"flag encoding\");\n+    }\n+\n+    private static ArrayList<String> prepareTestVmFlags(Class<?> testClass) {\n+        return setupIrVerificationFlags(testClass);\n+    }\n+\n+    private static ArrayList<String> setupIrVerificationFlags(Class<?> testClass) {\n+        ArrayList<String> cmds = new ArrayList<>();\n+        if (VERIFY_IR) {\n+            \/\/ Add print flags for IR verification\n+            cmds.addAll(Arrays.asList(getPrintFlags()));\n+            cmds.add(\"-XX:+LogCompilation\");\n+            cmds.add(\"-XX:CompileCommand=log,\" + testClass.getCanonicalName() + \"::*\");\n+            addBoolOptionForClass(cmds, testClass, \"PrintIdeal\");\n+            addBoolOptionForClass(cmds, testClass, \"PrintOptoAssembly\");\n+            \/\/ Always trap for exception throwing to not confuse IR verification\n+            cmds.add(\"-XX:-OmitStackTraceInFastThrow\");\n+            cmds.add(\"-DShouldDoIRVerification=true\");\n+        } else {\n+            cmds.add(\"-DShouldDoIRVerification=false\");\n+        }\n+        return cmds;\n+    }\n+\n+    private static void addBoolOptionForClass(ArrayList<String> cmds, Class<?> testClass, String option) {\n+        cmds.add(\"-XX:CompileCommand=option,\" + testClass.getCanonicalName() + \"::*,bool,\" + option + \",true\");\n+    }\n+}\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/TestFrameworkPrepareFlags.java","additions":120,"deletions":0,"binary":false,"changes":120,"status":"added"},{"patch":"@@ -0,0 +1,222 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.test.lib.hotspot.ir_framework;\n+\n+import java.io.BufferedReader;\n+import java.io.IOException;\n+import java.io.InputStreamReader;\n+import java.io.PrintWriter;\n+import java.net.ServerSocket;\n+import java.net.Socket;\n+import java.util.Scanner;\n+import java.util.concurrent.FutureTask;\n+\n+\/**\n+ * Dedicated socket to send data from the flag and test VM back to the driver VM.\n+ *\/\n+class TestFrameworkSocket implements AutoCloseable {\n+    static final String SERVER_PORT_PROPERTY = \"ir.framework.server.port\";\n+\n+    \/\/ Static fields used by flag and test VM only.\n+    private static final int SERVER_PORT = Integer.getInteger(SERVER_PORT_PROPERTY, -1);\n+\n+    private static final boolean REPRODUCE = Boolean.getBoolean(\"Reproduce\");\n+    private static final String HOSTNAME = null;\n+    private static final String STDOUT_PREFIX = \"[STDOUT]\";\n+    private static Socket clientSocket = null;\n+    private static PrintWriter clientWriter = null;\n+\n+    private final String serverPortPropertyFlag;\n+    private FutureTask<String> socketTask;\n+    private ServerSocket serverSocket;\n+\n+    private static TestFrameworkSocket singleton = null;\n+\n+    private TestFrameworkSocket() {\n+        try {\n+            serverSocket = new ServerSocket(0);\n+        } catch (IOException e) {\n+            TestFramework.fail(\"Failed to create TestFramework server socket\", e);\n+        }\n+        int port = serverSocket.getLocalPort();\n+        if (TestFramework.VERBOSE) {\n+            System.out.println(\"TestFramework server socket uses port \" + port);\n+        }\n+        serverPortPropertyFlag = \"-D\" + SERVER_PORT_PROPERTY + \"=\" + port;\n+    }\n+\n+    public static TestFrameworkSocket getSocket() {\n+        if (singleton == null || singleton.serverSocket.isClosed()) {\n+            singleton = new TestFrameworkSocket();\n+            return singleton;\n+        }\n+        return singleton;\n+    }\n+\n+    public String getPortPropertyFlag() {\n+        return serverPortPropertyFlag;\n+    }\n+\n+    public void start() {\n+        socketTask = initSocketTask();\n+        Thread socketThread = new Thread(socketTask);\n+        socketThread.start();\n+    }\n+\n+    \/**\n+     * Waits for client sockets (created by flag or test VM) to connect. Return the messages received by the clients.\n+     *\/\n+    private FutureTask<String> initSocketTask() {\n+        return new FutureTask<>(() -> {\n+            try (Socket clientSocket = serverSocket.accept();\n+                 BufferedReader in = new BufferedReader(new InputStreamReader(clientSocket.getInputStream()))\n+            ) {\n+                StringBuilder builder = new StringBuilder();\n+                String next;\n+                while ((next = in.readLine()) != null) {\n+                    builder.append(next).append(\"\\n\");\n+                }\n+                return builder.toString();\n+            } catch (IOException e) {\n+                TestFramework.fail(\"Server socket error\", e);\n+                return null;\n+            }\n+        });\n+    }\n+\n+    @Override\n+    public void close() {\n+        try {\n+            serverSocket.close();\n+        } catch (IOException e) {\n+            TestFramework.fail(\"Could not close socket\", e);\n+        }\n+    }\n+\n+    \/**\n+     * Only called by flag and test VM to write to server socket.\n+     *\/\n+    public static void write(String msg, String type) {\n+        write(msg, type, false);\n+    }\n+\n+    \/**\n+     * Only called by flag and test VM to write to server socket.\n+     *\/\n+    public static void write(String msg, String type, boolean stdout) {\n+        if (REPRODUCE) {\n+            System.out.println(\"Debugging Test VM: Skip writing due to -DReproduce\");\n+            return;\n+        }\n+        TestFramework.check(SERVER_PORT != -1, \"Server port was not set correctly for flag and\/or test VM \"\n+                                               + \"or method not called from flag or test VM\");\n+        try {\n+            \/\/ Keep the client socket open until the flag or test VM terminates (calls closeClientSocket before exiting\n+            \/\/ main()).\n+            if (clientSocket == null) {\n+                clientSocket = new Socket(HOSTNAME, SERVER_PORT);\n+                clientWriter = new PrintWriter(clientSocket.getOutputStream(), true);\n+            }\n+            if (stdout) {\n+                msg = STDOUT_PREFIX + msg;\n+            }\n+            clientWriter.println(msg);\n+        } catch (Exception e) {\n+            \/\/ When the test VM is directly run, we should ignore all messages that would normally be sent to the\n+            \/\/ driver VM.\n+            String failMsg = \"\\n\\n\" + \"\"\"\n+                             ###########################################################\n+                              Did you directly run the test VM (TestFrameworkExecution)\n+                              to reproduce a bug?\n+                              => Append the flag -DReproduce=true and try again!\n+                             ###########################################################\n+                             \"\"\";\n+            TestRun.fail(failMsg, e);\n+        }\n+        if (TestFramework.VERBOSE) {\n+            System.out.println(\"Written \" + type + \" to socket:\");\n+            System.out.println(msg);\n+        }\n+    }\n+\n+    \/**\n+     * Closes (and flushes) the printer to the socket and the socket itself. Is called as last thing before exiting\n+     * the main() method of the flag and the test VM.\n+     *\/\n+    public static void closeClientSocket() {\n+        if (clientSocket != null) {\n+            try {\n+                clientWriter.close();\n+                clientSocket.close();\n+            } catch (IOException e) {\n+                throw new RuntimeException(\"Could not close TestFrameworkExecution socket\", e);\n+            }\n+        }\n+    }\n+\n+    \/**\n+     * Get the socket output of the flag VM.\n+     *\/\n+    public String getOutput() {\n+        try {\n+            return socketTask.get();\n+\n+        } catch (Exception e) {\n+            TestFramework.fail(\"Could not read from socket task\", e);\n+            return null;\n+        }\n+    }\n+\n+    \/**\n+     * Get the socket output from the test VM by stripping all lines starting with a [STDOUT] output and printing them\n+     * to the standard output.\n+     *\/\n+    public String getOutputPrintStdout() {\n+        try {\n+            String output = socketTask.get();\n+            if (TestFramework.TESTLIST || TestFramework.EXCLUDELIST) {\n+                StringBuilder builder = new StringBuilder();\n+                Scanner scanner = new Scanner(output);\n+                System.out.println(\"\\nRun flag defined test list\");\n+                System.out.println(\"--------------------------\");\n+                while (scanner.hasNextLine()) {\n+                    String line = scanner.nextLine();\n+                    if (line.startsWith(STDOUT_PREFIX)) {\n+                        line = \"> \" + line.substring(STDOUT_PREFIX.length());\n+                        System.out.println(line);\n+                    } else {\n+                        builder.append(line).append(\"\\n\");\n+                    }\n+                }\n+                System.out.println();\n+                return builder.toString();\n+            }\n+            return output;\n+\n+        } catch (Exception e) {\n+            TestFramework.fail(\"Could not read from socket task\", e);\n+            return null;\n+        }\n+    }\n+}\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/TestFrameworkSocket.java","additions":222,"deletions":0,"binary":false,"changes":222,"status":"added"},{"patch":"@@ -0,0 +1,94 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.test.lib.hotspot.ir_framework;\n+\n+import java.lang.reflect.Method;\n+\n+\/**\n+ * Test info class which provides some useful utility methods and information about a <b>checked test<\/b>.\n+ *\n+ * @see Test\n+ * @see Check\n+ *\/\n+public class TestInfo extends AbstractInfo {\n+    private final Method testMethod;\n+    private final boolean compilationSkipped;\n+\n+    TestInfo(DeclaredTest test) {\n+        super(test.getTestMethod().getDeclaringClass());\n+        this.testMethod = test.getTestMethod();\n+        this.compilationSkipped = test.getCompLevel() == CompLevel.SKIP;\n+    }\n+\n+    \/**\n+     * Get the associated test method object.\n+     *\n+     * @return the associated test method object.\n+     *\/\n+    public Method getTest() {\n+        return testMethod;\n+    }\n+\n+    \/**\n+     * Return a boolean indicating if the framework skipped a compilation after the warm-up due to VM flags not\n+     * allowing a compilation on the requested level in {@link Test#compLevel()}.\n+     *\n+     * @return {@code true} if the framework compiled the test;\n+     *         {@code false} otherwise.\n+     *\/\n+    public boolean isCompilationSkipped() {\n+        return compilationSkipped;\n+    }\n+\n+    \/**\n+     * Returns a boolean indicating if the associated test method is C1 compiled.\n+     *\n+     * @return {@code true} if the test method is C1 compiled;\n+     *         {@code false} otherwise.\n+     *\/\n+    public boolean isC1Compiled() {\n+        return TestFrameworkExecution.isC1Compiled(testMethod);\n+    }\n+\n+    \/**\n+     * Returns a boolean indicating if the associated test method is C2 compiled.\n+     *\n+     * @return {@code true} if the test method is C2 compiled;\n+     *         {@code false} otherwise.\n+     *\/\n+    public boolean isC2Compiled() {\n+        return TestFrameworkExecution.isC2Compiled(testMethod);\n+    }\n+\n+    \/**\n+     * Returns a boolean indicating if the associated test method is compiled at {@code compLevel}.\n+     *\n+     * @param compLevel the compilation level.\n+     * @return {@code true} if the test method is compiled at {@code compLevel};\n+     *         {@code false} otherwise.\n+     *\/\n+    public boolean isCompiledAtLevel(CompLevel compLevel) {\n+        return TestFrameworkExecution.isCompiledAtLevel(testMethod, compLevel);\n+    }\n+}\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/TestInfo.java","additions":94,"deletions":0,"binary":false,"changes":94,"status":"added"},{"patch":"@@ -0,0 +1,44 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.test.lib.hotspot.ir_framework;\n+\n+\/**\n+ * Utility class to report a {@link TestRunException}.\n+ *\/\n+class TestRun {\n+\n+    public static void check(boolean test, String failureMessage) {\n+        if (!test) {\n+            throw new TestRunException(failureMessage);\n+        }\n+    }\n+\n+    public static void fail(String failureMessage) {\n+        throw new TestRunException(failureMessage);\n+    }\n+\n+    public static void fail(String failureMessage, Exception e) {\n+        throw new TestRunException(failureMessage, e);\n+    }\n+}\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/TestRun.java","additions":44,"deletions":0,"binary":false,"changes":44,"status":"added"},{"patch":"@@ -0,0 +1,39 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.test.lib.hotspot.ir_framework;\n+\n+\/**\n+ * Exception that is thrown if the JTreg test throws an exception during the execution of individual tests of the\n+ * test class.\n+ *\/\n+public class TestRunException extends RuntimeException {\n+\n+    TestRunException(String message) {\n+        super(message);\n+    }\n+\n+    TestRunException(String message, Exception e) {\n+        super(message, e);\n+    }\n+}\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/TestRunException.java","additions":39,"deletions":0,"binary":false,"changes":39,"status":"added"},{"patch":"@@ -0,0 +1,45 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.test.lib.hotspot.ir_framework;\n+\n+\/**\n+ * Exception that is thrown if the test VM has thrown any kind of exception (except for {@link TestFormatException}).\n+ *\/\n+public class TestVMException extends RuntimeException {\n+    private final String exceptionInfo;\n+\n+    TestVMException(String exceptionInfo) {\n+        super(\"There were one or multiple errors. Please check stderr for more information.\");\n+        this.exceptionInfo = exceptionInfo;\n+    }\n+\n+    \/**\n+     * Get some more detailed information about the exception thrown in the test VM and how to reproduce it.\n+     *\n+     * @return a formatted string containing information about the exception of the test VM and how to reproduce it.\n+     *\/\n+    public String getExceptionInfo() {\n+        return exceptionInfo;\n+    }\n+}\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/TestVMException.java","additions":45,"deletions":0,"binary":false,"changes":45,"status":"added"},{"patch":"@@ -0,0 +1,48 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.test.lib.hotspot.ir_framework;\n+\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+\n+\/**\n+ * This annotation overrides the default number (2000) of times the framework should warm up a test.\n+ * <ul>\n+ *     <li><p>Any positive value or zero is permitted. A warm-up of zero allows a simulation of {@code -Xcomp}.<\/li>\n+ *     <li><p>Custom run tests (see {@link Run}) must specify a {@code @Warmup} annotation at the run method.<\/li>\n+ *     <li><p>Base and checked tests (see {@link Test}, {@link Check}) must specify a {@code @Warmup} annotation at\n+ *            the test method.<\/li>\n+ * <\/ul>\n+ *\n+ * @see Test\n+ * @see Check\n+ * @see Run\n+ *\/\n+@Retention(RetentionPolicy.RUNTIME)\n+public @interface Warmup {\n+    \/**\n+     * The warm-up iterations for the test.\n+     *\/\n+    int value();\n+}\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/Warmup.java","additions":48,"deletions":0,"binary":false,"changes":48,"status":"added"},{"patch":"@@ -0,0 +1,204 @@\n+<!DOCTYPE HTML>\n+<html lang=\"en\">\n+<head>\n+<!-- Generated by javadoc (17) on Wed Apr 14 13:12:12 CEST 2021 -->\n+<title>All Classes<\/title>\n+<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n+<meta http-equiv=\"Content-Type\" content=\"text\/html; charset=utf-8\">\n+<meta name=\"dc.created\" content=\"2021-04-14\">\n+<meta name=\"description\" content=\"class index\">\n+<meta name=\"generator\" content=\"javadoc\/AllClassesIndexWriter\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"stylesheet.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"script-dir\/jquery-ui.min.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"jquery-ui.overrides.css\" title=\"Style\">\n+<script type=\"text\/javascript\" src=\"script.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"script-dir\/jquery-3.5.1.min.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"script-dir\/jquery-ui.min.js\"><\/script>\n+<\/head>\n+<body class=\"all-classes-index-page\">\n+<script type=\"text\/javascript\">var evenRowColor = \"even-row-color\";\n+var oddRowColor = \"odd-row-color\";\n+var tableTab = \"table-tab\";\n+var activeTableTab = \"active-table-tab\";\n+var pathtoroot = \".\/\";\n+loadScripts(document, 'script');<\/script>\n+<noscript>\n+<div>JavaScript is disabled on your browser.<\/div>\n+<\/noscript>\n+<div class=\"flex-box\">\n+<header role=\"banner\" class=\"flex-header\">\n+<nav role=\"navigation\">\n+<!-- ========= START OF TOP NAVBAR ======= -->\n+<div class=\"top-nav\" id=\"navbar-top\">\n+<div class=\"skip-nav\"><a href=\"#skip-navbar-top\" title=\"Skip navigation links\">Skip navigation links<\/a><\/div>\n+<ul id=\"navbar-top-firstrow\" class=\"nav-list\" title=\"Navigation\">\n+<li><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/package-summary.html\">Package<\/a><\/li>\n+<li>Class<\/li>\n+<li><a href=\"overview-tree.html\">Tree<\/a><\/li>\n+<li><a href=\"index-files\/index-1.html\">Index<\/a><\/li>\n+<li><a href=\"help-doc.html\">Help<\/a><\/li>\n+<\/ul>\n+<\/div>\n+<div class=\"sub-nav\">\n+<div class=\"nav-list-search\"><label for=\"search\">SEARCH:<\/label>\n+<input type=\"text\" id=\"search\" value=\"search\" disabled=\"disabled\">\n+<input type=\"reset\" id=\"reset\" value=\"reset\" disabled=\"disabled\">\n+<\/div>\n+<\/div>\n+<!-- ========= END OF TOP NAVBAR ========= -->\n+<span class=\"skip-nav\" id=\"skip-navbar-top\"><\/span><\/nav>\n+<\/header>\n+<div class=\"flex-content\">\n+<main role=\"main\">\n+<div class=\"header\">\n+<h1 title=\"All&amp;nbsp;Classes\" class=\"title\">All&nbsp;Classes<\/h1>\n+<\/div>\n+<div id=\"all-classes-table\">\n+<div class=\"table-tabs\" role=\"tablist\" aria-orientation=\"horizontal\"><button id=\"all-classes-table-tab0\" role=\"tab\" aria-selected=\"true\" aria-controls=\"all-classes-table.tabpanel\" tabindex=\"0\" onkeydown=\"switchTab(event)\" onclick=\"show('all-classes-table', 'all-classes-table', 2)\" class=\"active-table-tab\">All Classes<\/button><button id=\"all-classes-table-tab2\" role=\"tab\" aria-selected=\"false\" aria-controls=\"all-classes-table.tabpanel\" tabindex=\"-1\" onkeydown=\"switchTab(event)\" onclick=\"show('all-classes-table', 'all-classes-table-tab2', 2)\" class=\"table-tab\">Class Summary<\/button><button id=\"all-classes-table-tab3\" role=\"tab\" aria-selected=\"false\" aria-controls=\"all-classes-table.tabpanel\" tabindex=\"-1\" onkeydown=\"switchTab(event)\" onclick=\"show('all-classes-table', 'all-classes-table-tab3', 2)\" class=\"table-tab\">Enum Class Summary<\/button><button id=\"all-classes-table-tab4\" role=\"tab\" aria-selected=\"false\" aria-controls=\"all-classes-table.tabpanel\" tabindex=\"-1\" onkeydown=\"switchTab(event)\" onclick=\"show('all-classes-table', 'all-classes-table-tab4', 2)\" class=\"table-tab\">Exception Summary<\/button><button id=\"all-classes-table-tab6\" role=\"tab\" aria-selected=\"false\" aria-controls=\"all-classes-table.tabpanel\" tabindex=\"-1\" onkeydown=\"switchTab(event)\" onclick=\"show('all-classes-table', 'all-classes-table-tab6', 2)\" class=\"table-tab\">Annotation Interfaces Summary<\/button><\/div>\n+<div id=\"all-classes-table.tabpanel\" role=\"tabpanel\">\n+<div class=\"summary-table two-column-summary\" aria-labelledby=\"all-classes-table-tab0\">\n+<div class=\"table-header col-first\">Class<\/div>\n+<div class=\"table-header col-last\">Description<\/div>\n+<div class=\"col-first even-row-color all-classes-table all-classes-table-tab2\"><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/AbstractInfo.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">AbstractInfo<\/a><\/div>\n+<div class=\"col-last even-row-color all-classes-table all-classes-table-tab2\">\n+<div class=\"block\">Base info class which provides some useful utility methods and information about a test.<\/div>\n+<\/div>\n+<div class=\"col-first odd-row-color all-classes-table all-classes-table-tab3\"><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/Argument.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">Argument<\/a><\/div>\n+<div class=\"col-last odd-row-color all-classes-table all-classes-table-tab3\">\n+<div class=\"block\">Well-defined argument values that can be used in the <a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/Arguments.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Arguments<\/code><\/a> annotation at a <a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Test<\/code><\/a> method for a\n+ <b>base test<\/b> or a <b>checked test<\/b>.<\/div>\n+<\/div>\n+<div class=\"col-first even-row-color all-classes-table all-classes-table-tab6\"><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/Arguments.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\">Arguments<\/a><\/div>\n+<div class=\"col-last even-row-color all-classes-table all-classes-table-tab6\">\n+<div class=\"block\">This annotation is used to specify well-defined <a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/Argument.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\"><code>Argument<\/code><\/a> values for test methods (specifying <a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Test<\/code><\/a>) when\n+ used as part of a <b>base test<\/b> or <b>checked test<\/b>.<\/div>\n+<\/div>\n+<div class=\"col-first odd-row-color all-classes-table all-classes-table-tab6\"><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/Check.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\">Check<\/a><\/div>\n+<div class=\"col-last odd-row-color all-classes-table all-classes-table-tab6\">\n+<div class=\"block\">Annotation for a check method of a <b>checked test<\/b>.<\/div>\n+<\/div>\n+<div class=\"col-first even-row-color all-classes-table all-classes-table-tab3\"><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/CheckAt.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">CheckAt<\/a><\/div>\n+<div class=\"col-last even-row-color all-classes-table all-classes-table-tab3\">\n+<div class=\"block\">This enum is used in <a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/Check.html#when()\"><code>Check.when()<\/code><\/a> of a <b>checked test<\/b> to specify when the framework will invoke the\n+ check method after invoking the associated <a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Test<\/code><\/a> method.<\/div>\n+<\/div>\n+<div class=\"col-first odd-row-color all-classes-table all-classes-table-tab3\"><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/CompLevel.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">CompLevel<\/a><\/div>\n+<div class=\"col-last odd-row-color all-classes-table all-classes-table-tab3\">\n+<div class=\"block\">Compilation levels used by the framework.<\/div>\n+<\/div>\n+<div class=\"col-first even-row-color all-classes-table all-classes-table-tab6\"><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/DontCompile.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\">DontCompile<\/a><\/div>\n+<div class=\"col-last even-row-color all-classes-table all-classes-table-tab6\">\n+<div class=\"block\">Prevent a compilation of the annotated <b>helper method<\/b> (not specifying <a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@Test<\/code><\/a>,\n+ <a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/Check.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@Check<\/code><\/a> or <a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/Run.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@Run<\/code><\/a>):\n+\n+ \n+     <\/div>\n+<\/div>\n+<div class=\"col-first odd-row-color all-classes-table all-classes-table-tab6\"><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/DontInline.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\">DontInline<\/a><\/div>\n+<div class=\"col-last odd-row-color all-classes-table all-classes-table-tab6\">\n+<div class=\"block\">Prevent an inlining of the annotated <b>helper method<\/b> (not specifying <a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@Test<\/code><\/a>, <a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/Check.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@Check<\/code><\/a>,\n+ or <a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/Run.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@Run<\/code><\/a>).<\/div>\n+<\/div>\n+<div class=\"col-first even-row-color all-classes-table all-classes-table-tab6\"><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/ForceCompile.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\">ForceCompile<\/a><\/div>\n+<div class=\"col-last even-row-color all-classes-table all-classes-table-tab6\">\n+<div class=\"block\">Force a compilation of the annotated <b>helper method<\/b> (not specifying <a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@Test<\/code><\/a>,\n+ <a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/Check.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@Check<\/code><\/a> or <a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@Run<\/code><\/a>) immediately at the specified level:\n+ \n+     <\/div>\n+<\/div>\n+<div class=\"col-first odd-row-color all-classes-table all-classes-table-tab6\"><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/ForceCompileClassInitializer.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\">ForceCompileClassInitializer<\/a><\/div>\n+<div class=\"col-last odd-row-color all-classes-table all-classes-table-tab6\">\n+<div class=\"block\">Force a compilation of the static class initializer method (<code>&lt;clinit&gt;<\/code>) of the annotated test or helper class\n+ immediately at the specified level:\n+ \n+     <\/div>\n+<\/div>\n+<div class=\"col-first even-row-color all-classes-table all-classes-table-tab6\"><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/ForceInline.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\">ForceInline<\/a><\/div>\n+<div class=\"col-last even-row-color all-classes-table all-classes-table-tab6\">\n+<div class=\"block\">Force an inlining of the annotated <b>helper method<\/b> (not specifying <a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@Test<\/code><\/a>, <a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/Check.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@Check<\/code><\/a>,\n+ or <a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@Run<\/code><\/a>).<\/div>\n+<\/div>\n+<div class=\"col-first odd-row-color all-classes-table all-classes-table-tab6\"><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/IR.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\">IR<\/a><\/div>\n+<div class=\"col-last odd-row-color all-classes-table all-classes-table-tab6\">\n+<div class=\"block\">This annotation is used to define a constraint\/rule\/check on the resulting IR of a test method (method with\n+ <a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@Test<\/code><\/a> annotation).<\/div>\n+<\/div>\n+<div class=\"col-first even-row-color all-classes-table all-classes-table-tab2\"><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">IRNode<\/a><\/div>\n+<div class=\"col-last even-row-color all-classes-table all-classes-table-tab2\">\n+<div class=\"block\">This class provides default regex strings that can be used in <a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/IR.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@IR<\/code><\/a> annotations to specify IR constraints.<\/div>\n+<\/div>\n+<div class=\"col-first odd-row-color all-classes-table all-classes-table-tab6\"><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/IRs.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\">IRs<\/a><\/div>\n+<div class=\"col-last odd-row-color all-classes-table all-classes-table-tab6\">\n+<div class=\"block\">Annotation to allow to specify multiple <a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/IR.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@IR<\/code><\/a> annotations at a <a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@Test<\/code><\/a> method.<\/div>\n+<\/div>\n+<div class=\"col-first even-row-color all-classes-table all-classes-table-tab4\"><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/IRViolationException.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">IRViolationException<\/a><\/div>\n+<div class=\"col-last even-row-color all-classes-table all-classes-table-tab4\">\n+<div class=\"block\">Exception that is thrown if an <a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/IR.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>IR<\/code><\/a> rule\/constraint failed.<\/div>\n+<\/div>\n+<div class=\"col-first odd-row-color all-classes-table all-classes-table-tab4\"><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/NoTestsRunException.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">NoTestsRunException<\/a><\/div>\n+<div class=\"col-last odd-row-color all-classes-table all-classes-table-tab4\">\n+<div class=\"block\">Exception that is thrown by the test VM if no tests are run as a result of specifying <code>-DTest<\/code> and\/or\n+ <code>-DExclude<\/code> defining an empty set with the used test VM flags.<\/div>\n+<\/div>\n+<div class=\"col-first even-row-color all-classes-table all-classes-table-tab6\"><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/Run.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\">Run<\/a><\/div>\n+<div class=\"col-last even-row-color all-classes-table all-classes-table-tab6\">\n+<div class=\"block\">Annotation for a run method of a <b>custom run test<\/b>.<\/div>\n+<\/div>\n+<div class=\"col-first odd-row-color all-classes-table all-classes-table-tab2\"><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/RunInfo.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">RunInfo<\/a><\/div>\n+<div class=\"col-last odd-row-color all-classes-table all-classes-table-tab2\">\n+<div class=\"block\">Test info class which provides some useful utility methods and information about a <b>custom run test<\/b>.<\/div>\n+<\/div>\n+<div class=\"col-first even-row-color all-classes-table all-classes-table-tab3\"><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/RunMode.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">RunMode<\/a><\/div>\n+<div class=\"col-last even-row-color all-classes-table all-classes-table-tab3\">\n+<div class=\"block\">The run mode for a <b>custom run test<\/b> specified in <a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/Run.html#mode()\"><code>Run.mode()<\/code><\/a>.<\/div>\n+<\/div>\n+<div class=\"col-first odd-row-color all-classes-table all-classes-table-tab2\"><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/Scenario.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">Scenario<\/a><\/div>\n+<div class=\"col-last odd-row-color all-classes-table all-classes-table-tab2\">\n+<div class=\"block\">This class represents a scenario that can be executed by the <a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/TestFramework.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\"><code>TestFramework<\/code><\/a>.<\/div>\n+<\/div>\n+<div class=\"col-first even-row-color all-classes-table all-classes-table-tab6\"><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\">Test<\/a><\/div>\n+<div class=\"col-last even-row-color all-classes-table all-classes-table-tab6\">\n+<div class=\"block\">Annotate all methods in your test class which the framework should test with <code>@Test<\/code>.<\/div>\n+<\/div>\n+<div class=\"col-first odd-row-color all-classes-table all-classes-table-tab4\"><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/TestFormatException.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestFormatException<\/a><\/div>\n+<div class=\"col-last odd-row-color all-classes-table all-classes-table-tab4\">\n+<div class=\"block\">Exception that is thrown if a JTreg test violates the supported format by the test framework.<\/div>\n+<\/div>\n+<div class=\"col-first even-row-color all-classes-table all-classes-table-tab2\"><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/TestFramework.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestFramework<\/a><\/div>\n+<div class=\"col-last even-row-color all-classes-table all-classes-table-tab2\">\n+<div class=\"block\">This class represents the main entry point to the test framework whose main purpose is to perform regex-based checks on\n+ the C2 IR shape emitted by the VM flags <code>-XX:+PrintIdeal<\/code> and <code>-XX:+PrintOptoAssembly<\/code>.<\/div>\n+<\/div>\n+<div class=\"col-first odd-row-color all-classes-table all-classes-table-tab4\"><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/TestFrameworkException.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestFrameworkException<\/a><\/div>\n+<div class=\"col-last odd-row-color all-classes-table all-classes-table-tab4\">\n+<div class=\"block\">Exception that is thrown if there is an internal error in the framework.<\/div>\n+<\/div>\n+<div class=\"col-first even-row-color all-classes-table all-classes-table-tab2\"><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/TestFrameworkExecution.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestFrameworkExecution<\/a><\/div>\n+<div class=\"col-last even-row-color all-classes-table all-classes-table-tab2\">\n+<div class=\"block\">This class' main method is called from <a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/TestFramework.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\"><code>TestFramework<\/code><\/a> and represents the so-called \"test VM\".<\/div>\n+<\/div>\n+<div class=\"col-first odd-row-color all-classes-table all-classes-table-tab2\"><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/TestInfo.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestInfo<\/a><\/div>\n+<div class=\"col-last odd-row-color all-classes-table all-classes-table-tab2\">\n+<div class=\"block\">Test info class which provides some useful utility methods and information about a <b>checked test<\/b>.<\/div>\n+<\/div>\n+<div class=\"col-first even-row-color all-classes-table all-classes-table-tab4\"><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/TestRunException.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestRunException<\/a><\/div>\n+<div class=\"col-last even-row-color all-classes-table all-classes-table-tab4\">\n+<div class=\"block\">Exception that is thrown if the JTreg test throws an exception during the execution of individual tests of the\n+ test class.<\/div>\n+<\/div>\n+<div class=\"col-first odd-row-color all-classes-table all-classes-table-tab4\"><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/TestVMException.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestVMException<\/a><\/div>\n+<div class=\"col-last odd-row-color all-classes-table all-classes-table-tab4\">\n+<div class=\"block\">Exception that is thrown if the test VM has thrown any kind of exception (except for <a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/TestFormatException.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\"><code>TestFormatException<\/code><\/a>).<\/div>\n+<\/div>\n+<div class=\"col-first even-row-color all-classes-table all-classes-table-tab6\"><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/Warmup.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\">Warmup<\/a><\/div>\n+<div class=\"col-last even-row-color all-classes-table all-classes-table-tab6\">\n+<div class=\"block\">This annotation overrides the default number (2000) of times the framework should warm up a test.<\/div>\n+<\/div>\n+<\/div>\n+<\/div>\n+<\/div>\n+<\/main>\n+<\/div>\n+<\/div>\n+<\/body>\n+<\/html>\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/doc\/allclasses-index.html","additions":204,"deletions":0,"binary":false,"changes":204,"status":"added"},{"patch":"@@ -0,0 +1,63 @@\n+<!DOCTYPE HTML>\n+<html lang=\"en\">\n+<head>\n+<!-- Generated by javadoc (17) on Wed Apr 14 13:12:12 CEST 2021 -->\n+<title>All Packages<\/title>\n+<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n+<meta http-equiv=\"Content-Type\" content=\"text\/html; charset=utf-8\">\n+<meta name=\"dc.created\" content=\"2021-04-14\">\n+<meta name=\"description\" content=\"package index\">\n+<meta name=\"generator\" content=\"javadoc\/AllPackagesIndexWriter\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"stylesheet.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"script-dir\/jquery-ui.min.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"jquery-ui.overrides.css\" title=\"Style\">\n+<script type=\"text\/javascript\" src=\"script.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"script-dir\/jquery-3.5.1.min.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"script-dir\/jquery-ui.min.js\"><\/script>\n+<\/head>\n+<body class=\"all-packages-index-page\">\n+<script type=\"text\/javascript\">var pathtoroot = \".\/\";\n+loadScripts(document, 'script');<\/script>\n+<noscript>\n+<div>JavaScript is disabled on your browser.<\/div>\n+<\/noscript>\n+<div class=\"flex-box\">\n+<header role=\"banner\" class=\"flex-header\">\n+<nav role=\"navigation\">\n+<!-- ========= START OF TOP NAVBAR ======= -->\n+<div class=\"top-nav\" id=\"navbar-top\">\n+<div class=\"skip-nav\"><a href=\"#skip-navbar-top\" title=\"Skip navigation links\">Skip navigation links<\/a><\/div>\n+<ul id=\"navbar-top-firstrow\" class=\"nav-list\" title=\"Navigation\">\n+<li><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/package-summary.html\">Package<\/a><\/li>\n+<li>Class<\/li>\n+<li><a href=\"overview-tree.html\">Tree<\/a><\/li>\n+<li><a href=\"index-files\/index-1.html\">Index<\/a><\/li>\n+<li><a href=\"help-doc.html\">Help<\/a><\/li>\n+<\/ul>\n+<\/div>\n+<div class=\"sub-nav\">\n+<div class=\"nav-list-search\"><label for=\"search\">SEARCH:<\/label>\n+<input type=\"text\" id=\"search\" value=\"search\" disabled=\"disabled\">\n+<input type=\"reset\" id=\"reset\" value=\"reset\" disabled=\"disabled\">\n+<\/div>\n+<\/div>\n+<!-- ========= END OF TOP NAVBAR ========= -->\n+<span class=\"skip-nav\" id=\"skip-navbar-top\"><\/span><\/nav>\n+<\/header>\n+<div class=\"flex-content\">\n+<main role=\"main\">\n+<div class=\"header\">\n+<h1 title=\"All&amp;nbsp;Packages\" class=\"title\">All&nbsp;Packages<\/h1>\n+<\/div>\n+<div class=\"caption\"><span>Package Summary<\/span><\/div>\n+<div class=\"summary-table two-column-summary\">\n+<div class=\"table-header col-first\">Package<\/div>\n+<div class=\"table-header col-last\">Description<\/div>\n+<div class=\"col-first even-row-color\"><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/package-summary.html\">jdk.test.lib.hotspot.ir_framework<\/a><\/div>\n+<div class=\"col-last even-row-color\">&nbsp;<\/div>\n+<\/div>\n+<\/main>\n+<\/div>\n+<\/div>\n+<\/body>\n+<\/html>\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/doc\/allpackages-index.html","additions":63,"deletions":0,"binary":false,"changes":63,"status":"added"},{"patch":"@@ -0,0 +1,273 @@\n+<!DOCTYPE HTML>\n+<html lang=\"en\">\n+<head>\n+<!-- Generated by javadoc (17) on Wed Apr 14 13:12:12 CEST 2021 -->\n+<title>Constant Field Values<\/title>\n+<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n+<meta http-equiv=\"Content-Type\" content=\"text\/html; charset=utf-8\">\n+<meta name=\"dc.created\" content=\"2021-04-14\">\n+<meta name=\"description\" content=\"summary of constants\">\n+<meta name=\"generator\" content=\"javadoc\/ConstantsSummaryWriterImpl\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"stylesheet.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"script-dir\/jquery-ui.min.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"jquery-ui.overrides.css\" title=\"Style\">\n+<script type=\"text\/javascript\" src=\"script.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"script-dir\/jquery-3.5.1.min.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"script-dir\/jquery-ui.min.js\"><\/script>\n+<\/head>\n+<body class=\"constants-summary-page\">\n+<script type=\"text\/javascript\">var pathtoroot = \".\/\";\n+loadScripts(document, 'script');<\/script>\n+<noscript>\n+<div>JavaScript is disabled on your browser.<\/div>\n+<\/noscript>\n+<div class=\"flex-box\">\n+<header role=\"banner\" class=\"flex-header\">\n+<nav role=\"navigation\">\n+<!-- ========= START OF TOP NAVBAR ======= -->\n+<div class=\"top-nav\" id=\"navbar-top\">\n+<div class=\"skip-nav\"><a href=\"#skip-navbar-top\" title=\"Skip navigation links\">Skip navigation links<\/a><\/div>\n+<ul id=\"navbar-top-firstrow\" class=\"nav-list\" title=\"Navigation\">\n+<li><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/package-summary.html\">Package<\/a><\/li>\n+<li>Class<\/li>\n+<li><a href=\"overview-tree.html\">Tree<\/a><\/li>\n+<li><a href=\"index-files\/index-1.html\">Index<\/a><\/li>\n+<li><a href=\"help-doc.html\">Help<\/a><\/li>\n+<\/ul>\n+<\/div>\n+<div class=\"sub-nav\">\n+<div class=\"nav-list-search\"><label for=\"search\">SEARCH:<\/label>\n+<input type=\"text\" id=\"search\" value=\"search\" disabled=\"disabled\">\n+<input type=\"reset\" id=\"reset\" value=\"reset\" disabled=\"disabled\">\n+<\/div>\n+<\/div>\n+<!-- ========= END OF TOP NAVBAR ========= -->\n+<span class=\"skip-nav\" id=\"skip-navbar-top\"><\/span><\/nav>\n+<\/header>\n+<div class=\"flex-content\">\n+<main role=\"main\">\n+<div class=\"header\">\n+<h1 title=\"Constant Field Values\" class=\"title\">Constant Field Values<\/h1>\n+<section class=\"packages\">\n+<h2 title=\"Contents\">Contents<\/h2>\n+<ul>\n+<li><a href=\"#jdk.test\">jdk.test.*<\/a><\/li>\n+<\/ul>\n+<\/section>\n+<\/div>\n+<section class=\"constants-summary\" id=\"jdk.test.lib.hotspot.ir_framework\">\n+<h2 title=\"jdk.test\">jdk.test.*<\/h2>\n+<ul class=\"block-list\">\n+<li>\n+<div class=\"caption\"><span>jdk.test.lib.hotspot.ir_framework.<a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">IRNode<\/a><\/span><\/div>\n+<div class=\"summary-table three-column-summary\">\n+<div class=\"table-header col-first\">Modifier and Type<\/div>\n+<div class=\"table-header col-second\">Constant Field<\/div>\n+<div class=\"table-header col-last\">Value<\/div>\n+<div class=\"col-first even-row-color\"><code id=\"jdk.test.lib.hotspot.ir_framework.IRNode.ALLOC\">public&nbsp;static&nbsp;final&nbsp;<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second even-row-color\"><code><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#ALLOC\">ALLOC<\/a><\/code><\/div>\n+<div class=\"col-last even-row-color\"><code>\"(.*precise klass .*\\\\R(.*(movl|xorl|nop|spill).*\\\\R)*.*call,static  wrapper for: _new_instance_Java)\"<\/code><\/div>\n+<div class=\"col-first odd-row-color\"><code id=\"jdk.test.lib.hotspot.ir_framework.IRNode.ALLOC_ARRAY\">public&nbsp;static&nbsp;final&nbsp;<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second odd-row-color\"><code><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#ALLOC_ARRAY\">ALLOC_ARRAY<\/a><\/code><\/div>\n+<div class=\"col-last odd-row-color\"><code>\"(.*precise klass \\\\[L.*\\\\R(.*(movl|xorl|nop|spill).*\\\\R)*.*call,static  wrapper for: _new_array_Java)\"<\/code><\/div>\n+<div class=\"col-first even-row-color\"><code id=\"jdk.test.lib.hotspot.ir_framework.IRNode.ALLOC_ARRAY_OF\">public&nbsp;static&nbsp;final&nbsp;<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second even-row-color\"><code><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#ALLOC_ARRAY_OF\">ALLOC_ARRAY_OF<\/a><\/code><\/div>\n+<div class=\"col-last even-row-color\"><code>\"(.*precise klass \\\\[L.*\"<\/code><\/div>\n+<div class=\"col-first odd-row-color\"><code id=\"jdk.test.lib.hotspot.ir_framework.IRNode.ALLOC_OF\">public&nbsp;static&nbsp;final&nbsp;<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second odd-row-color\"><code><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#ALLOC_OF\">ALLOC_OF<\/a><\/code><\/div>\n+<div class=\"col-last odd-row-color\"><code>\"(.*precise klass .*\"<\/code><\/div>\n+<div class=\"col-first even-row-color\"><code id=\"jdk.test.lib.hotspot.ir_framework.IRNode.CALL\">public&nbsp;static&nbsp;final&nbsp;<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second even-row-color\"><code><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#CALL\">CALL<\/a><\/code><\/div>\n+<div class=\"col-last even-row-color\"><code>\"(\\\\d+(\\\\s){2}(CallStaticJava.*)+(\\\\s){2}===.*)\"<\/code><\/div>\n+<div class=\"col-first odd-row-color\"><code id=\"jdk.test.lib.hotspot.ir_framework.IRNode.CHECKCAST_ARRAY\">public&nbsp;static&nbsp;final&nbsp;<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second odd-row-color\"><code><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#CHECKCAST_ARRAY\">CHECKCAST_ARRAY<\/a><\/code><\/div>\n+<div class=\"col-last odd-row-color\"><code>\"(cmp.*precise klass \\\\[.*;:)\"<\/code><\/div>\n+<div class=\"col-first even-row-color\"><code id=\"jdk.test.lib.hotspot.ir_framework.IRNode.CHECKCAST_ARRAY_OF\">public&nbsp;static&nbsp;final&nbsp;<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second even-row-color\"><code><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#CHECKCAST_ARRAY_OF\">CHECKCAST_ARRAY_OF<\/a><\/code><\/div>\n+<div class=\"col-last even-row-color\"><code>\"(cmp.*precise klass \\\\[.*\"<\/code><\/div>\n+<div class=\"col-first odd-row-color\"><code id=\"jdk.test.lib.hotspot.ir_framework.IRNode.CHECKCAST_ARRAYCOPY\">public&nbsp;static&nbsp;final&nbsp;<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second odd-row-color\"><code><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#CHECKCAST_ARRAYCOPY\">CHECKCAST_ARRAYCOPY<\/a><\/code><\/div>\n+<div class=\"col-last odd-row-color\"><code>\"(.*call_leaf_nofp,runtime  checkcast_arraycopy.*)\"<\/code><\/div>\n+<div class=\"col-first even-row-color\"><code id=\"jdk.test.lib.hotspot.ir_framework.IRNode.CLASS_CHECK_TRAP\">public&nbsp;static&nbsp;final&nbsp;<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second even-row-color\"><code><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#CLASS_CHECK_TRAP\">CLASS_CHECK_TRAP<\/a><\/code><\/div>\n+<div class=\"col-last even-row-color\"><code>\"(\\\\d+(\\\\s){2}(CallStaticJava.*)+(\\\\s){2}===.*uncommon_trap.*class_check)\"<\/code><\/div>\n+<div class=\"col-first odd-row-color\"><code id=\"jdk.test.lib.hotspot.ir_framework.IRNode.COUNTEDLOOP\">public&nbsp;static&nbsp;final&nbsp;<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second odd-row-color\"><code><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#COUNTEDLOOP\">COUNTEDLOOP<\/a><\/code><\/div>\n+<div class=\"col-last odd-row-color\"><code>\"(\\\\d+(\\\\s){2}(CountedLoop\\\\b.*)+(\\\\s){2}===.*)\"<\/code><\/div>\n+<div class=\"col-first even-row-color\"><code id=\"jdk.test.lib.hotspot.ir_framework.IRNode.COUNTEDLOOP_MAIN\">public&nbsp;static&nbsp;final&nbsp;<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second even-row-color\"><code><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#COUNTEDLOOP_MAIN\">COUNTEDLOOP_MAIN<\/a><\/code><\/div>\n+<div class=\"col-last even-row-color\"><code>\"(\\\\d+(\\\\s){2}(CountedLoop\\\\b.*)+(\\\\s){2}===.*main)\"<\/code><\/div>\n+<div class=\"col-first odd-row-color\"><code id=\"jdk.test.lib.hotspot.ir_framework.IRNode.FIELD_ACCESS\">public&nbsp;static&nbsp;final&nbsp;<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second odd-row-color\"><code><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#FIELD_ACCESS\">FIELD_ACCESS<\/a><\/code><\/div>\n+<div class=\"col-last odd-row-color\"><code>\"(.*Field: *)\"<\/code><\/div>\n+<div class=\"col-first even-row-color\"><code id=\"jdk.test.lib.hotspot.ir_framework.IRNode.INTRINSIC_OR_TYPE_CHECKED_INLINING_TRAP\">public&nbsp;static&nbsp;final&nbsp;<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second even-row-color\"><code><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#INTRINSIC_OR_TYPE_CHECKED_INLINING_TRAP\">INTRINSIC_OR_TYPE_CHECKED_INLINING_TRAP<\/a><\/code><\/div>\n+<div class=\"col-last even-row-color\"><code>\"(\\\\d+(\\\\s){2}(CallStaticJava.*)+(\\\\s){2}===.*uncommon_trap.*intrinsic_or_type_checked_inlining)\"<\/code><\/div>\n+<div class=\"col-first odd-row-color\"><code id=\"jdk.test.lib.hotspot.ir_framework.IRNode.LOAD\">public&nbsp;static&nbsp;final&nbsp;<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second odd-row-color\"><code><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#LOAD\">LOAD<\/a><\/code><\/div>\n+<div class=\"col-last odd-row-color\"><code>\"(\\\\d+(\\\\s){2}(Load(B|UB|S|US|I|L|F|D|P|N).*)+(\\\\s){2}===.*)\"<\/code><\/div>\n+<div class=\"col-first even-row-color\"><code id=\"jdk.test.lib.hotspot.ir_framework.IRNode.LOAD_B\">public&nbsp;static&nbsp;final&nbsp;<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second even-row-color\"><code><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#LOAD_B\">LOAD_B<\/a><\/code><\/div>\n+<div class=\"col-last even-row-color\"><code>\"(\\\\d+(\\\\s){2}(LoadB.*)+(\\\\s){2}===.*)\"<\/code><\/div>\n+<div class=\"col-first odd-row-color\"><code id=\"jdk.test.lib.hotspot.ir_framework.IRNode.LOAD_B_OF_CLASS\">public&nbsp;static&nbsp;final&nbsp;<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second odd-row-color\"><code><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#LOAD_B_OF_CLASS\">LOAD_B_OF_CLASS<\/a><\/code><\/div>\n+<div class=\"col-last odd-row-color\"><code>\"(\\\\d+(\\\\s){2}(LoadB.*)+(\\\\s){2}===.*@\\\\S*\"<\/code><\/div>\n+<div class=\"col-first even-row-color\"><code id=\"jdk.test.lib.hotspot.ir_framework.IRNode.LOAD_D\">public&nbsp;static&nbsp;final&nbsp;<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second even-row-color\"><code><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#LOAD_D\">LOAD_D<\/a><\/code><\/div>\n+<div class=\"col-last even-row-color\"><code>\"(\\\\d+(\\\\s){2}(LoadD.*)+(\\\\s){2}===.*)\"<\/code><\/div>\n+<div class=\"col-first odd-row-color\"><code id=\"jdk.test.lib.hotspot.ir_framework.IRNode.LOAD_D_OF_CLASS\">public&nbsp;static&nbsp;final&nbsp;<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second odd-row-color\"><code><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#LOAD_D_OF_CLASS\">LOAD_D_OF_CLASS<\/a><\/code><\/div>\n+<div class=\"col-last odd-row-color\"><code>\"(\\\\d+(\\\\s){2}(LoadD.*)+(\\\\s){2}===.*@\\\\S*\"<\/code><\/div>\n+<div class=\"col-first even-row-color\"><code id=\"jdk.test.lib.hotspot.ir_framework.IRNode.LOAD_F\">public&nbsp;static&nbsp;final&nbsp;<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second even-row-color\"><code><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#LOAD_F\">LOAD_F<\/a><\/code><\/div>\n+<div class=\"col-last even-row-color\"><code>\"(\\\\d+(\\\\s){2}(LoadF.*)+(\\\\s){2}===.*)\"<\/code><\/div>\n+<div class=\"col-first odd-row-color\"><code id=\"jdk.test.lib.hotspot.ir_framework.IRNode.LOAD_F_OF_CLASS\">public&nbsp;static&nbsp;final&nbsp;<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second odd-row-color\"><code><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#LOAD_F_OF_CLASS\">LOAD_F_OF_CLASS<\/a><\/code><\/div>\n+<div class=\"col-last odd-row-color\"><code>\"(\\\\d+(\\\\s){2}(LoadF.*)+(\\\\s){2}===.*@\\\\S*\"<\/code><\/div>\n+<div class=\"col-first even-row-color\"><code id=\"jdk.test.lib.hotspot.ir_framework.IRNode.LOAD_I\">public&nbsp;static&nbsp;final&nbsp;<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second even-row-color\"><code><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#LOAD_I\">LOAD_I<\/a><\/code><\/div>\n+<div class=\"col-last even-row-color\"><code>\"(\\\\d+(\\\\s){2}(LoadI.*)+(\\\\s){2}===.*)\"<\/code><\/div>\n+<div class=\"col-first odd-row-color\"><code id=\"jdk.test.lib.hotspot.ir_framework.IRNode.LOAD_I_OF_CLASS\">public&nbsp;static&nbsp;final&nbsp;<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second odd-row-color\"><code><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#LOAD_I_OF_CLASS\">LOAD_I_OF_CLASS<\/a><\/code><\/div>\n+<div class=\"col-last odd-row-color\"><code>\"(\\\\d+(\\\\s){2}(LoadI.*)+(\\\\s){2}===.*@\\\\S*\"<\/code><\/div>\n+<div class=\"col-first even-row-color\"><code id=\"jdk.test.lib.hotspot.ir_framework.IRNode.LOAD_KLASS\">public&nbsp;static&nbsp;final&nbsp;<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second even-row-color\"><code><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#LOAD_KLASS\">LOAD_KLASS<\/a><\/code><\/div>\n+<div class=\"col-last even-row-color\"><code>\"(\\\\d+(\\\\s){2}(LoadK.*)+(\\\\s){2}===.*)\"<\/code><\/div>\n+<div class=\"col-first odd-row-color\"><code id=\"jdk.test.lib.hotspot.ir_framework.IRNode.LOAD_L\">public&nbsp;static&nbsp;final&nbsp;<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second odd-row-color\"><code><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#LOAD_L\">LOAD_L<\/a><\/code><\/div>\n+<div class=\"col-last odd-row-color\"><code>\"(\\\\d+(\\\\s){2}(LoadL.*)+(\\\\s){2}===.*)\"<\/code><\/div>\n+<div class=\"col-first even-row-color\"><code id=\"jdk.test.lib.hotspot.ir_framework.IRNode.LOAD_L_OF_CLASS\">public&nbsp;static&nbsp;final&nbsp;<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second even-row-color\"><code><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#LOAD_L_OF_CLASS\">LOAD_L_OF_CLASS<\/a><\/code><\/div>\n+<div class=\"col-last even-row-color\"><code>\"(\\\\d+(\\\\s){2}(LoadL.*)+(\\\\s){2}===.*@\\\\S*\"<\/code><\/div>\n+<div class=\"col-first odd-row-color\"><code id=\"jdk.test.lib.hotspot.ir_framework.IRNode.LOAD_N\">public&nbsp;static&nbsp;final&nbsp;<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second odd-row-color\"><code><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#LOAD_N\">LOAD_N<\/a><\/code><\/div>\n+<div class=\"col-last odd-row-color\"><code>\"(\\\\d+(\\\\s){2}(LoadN.*)+(\\\\s){2}===.*)\"<\/code><\/div>\n+<div class=\"col-first even-row-color\"><code id=\"jdk.test.lib.hotspot.ir_framework.IRNode.LOAD_N_OF_CLASS\">public&nbsp;static&nbsp;final&nbsp;<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second even-row-color\"><code><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#LOAD_N_OF_CLASS\">LOAD_N_OF_CLASS<\/a><\/code><\/div>\n+<div class=\"col-last even-row-color\"><code>\"(\\\\d+(\\\\s){2}(LoadN.*)+(\\\\s){2}===.*@\\\\S*\"<\/code><\/div>\n+<div class=\"col-first odd-row-color\"><code id=\"jdk.test.lib.hotspot.ir_framework.IRNode.LOAD_OF_CLASS\">public&nbsp;static&nbsp;final&nbsp;<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second odd-row-color\"><code><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#LOAD_OF_CLASS\">LOAD_OF_CLASS<\/a><\/code><\/div>\n+<div class=\"col-last odd-row-color\"><code>\"(\\\\d+(\\\\s){2}(Load(B|UB|S|US|I|L|F|D|P|N).*)+(\\\\s){2}===.*@\\\\S*\"<\/code><\/div>\n+<div class=\"col-first even-row-color\"><code id=\"jdk.test.lib.hotspot.ir_framework.IRNode.LOAD_OF_FIELD\">public&nbsp;static&nbsp;final&nbsp;<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second even-row-color\"><code><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#LOAD_OF_FIELD\">LOAD_OF_FIELD<\/a><\/code><\/div>\n+<div class=\"col-last even-row-color\"><code>\"(\\\\d+(\\\\s){2}(Load(B|C|S|I|L|F|D|P|N).*)+(\\\\s){2}===.*@.*name=\"<\/code><\/div>\n+<div class=\"col-first odd-row-color\"><code id=\"jdk.test.lib.hotspot.ir_framework.IRNode.LOAD_P\">public&nbsp;static&nbsp;final&nbsp;<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second odd-row-color\"><code><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#LOAD_P\">LOAD_P<\/a><\/code><\/div>\n+<div class=\"col-last odd-row-color\"><code>\"(\\\\d+(\\\\s){2}(LoadP.*)+(\\\\s){2}===.*)\"<\/code><\/div>\n+<div class=\"col-first even-row-color\"><code id=\"jdk.test.lib.hotspot.ir_framework.IRNode.LOAD_P_OF_CLASS\">public&nbsp;static&nbsp;final&nbsp;<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second even-row-color\"><code><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#LOAD_P_OF_CLASS\">LOAD_P_OF_CLASS<\/a><\/code><\/div>\n+<div class=\"col-last even-row-color\"><code>\"(\\\\d+(\\\\s){2}(LoadP.*)+(\\\\s){2}===.*@\\\\S*\"<\/code><\/div>\n+<div class=\"col-first odd-row-color\"><code id=\"jdk.test.lib.hotspot.ir_framework.IRNode.LOAD_S\">public&nbsp;static&nbsp;final&nbsp;<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second odd-row-color\"><code><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#LOAD_S\">LOAD_S<\/a><\/code><\/div>\n+<div class=\"col-last odd-row-color\"><code>\"(\\\\d+(\\\\s){2}(LoadS.*)+(\\\\s){2}===.*)\"<\/code><\/div>\n+<div class=\"col-first even-row-color\"><code id=\"jdk.test.lib.hotspot.ir_framework.IRNode.LOAD_S_OF_CLASS\">public&nbsp;static&nbsp;final&nbsp;<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second even-row-color\"><code><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#LOAD_S_OF_CLASS\">LOAD_S_OF_CLASS<\/a><\/code><\/div>\n+<div class=\"col-last even-row-color\"><code>\"(\\\\d+(\\\\s){2}(LoadS.*)+(\\\\s){2}===.*@\\\\S*\"<\/code><\/div>\n+<div class=\"col-first odd-row-color\"><code id=\"jdk.test.lib.hotspot.ir_framework.IRNode.LOAD_UB\">public&nbsp;static&nbsp;final&nbsp;<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second odd-row-color\"><code><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#LOAD_UB\">LOAD_UB<\/a><\/code><\/div>\n+<div class=\"col-last odd-row-color\"><code>\"(\\\\d+(\\\\s){2}(LoadUB.*)+(\\\\s){2}===.*)\"<\/code><\/div>\n+<div class=\"col-first even-row-color\"><code id=\"jdk.test.lib.hotspot.ir_framework.IRNode.LOAD_UB_OF_CLASS\">public&nbsp;static&nbsp;final&nbsp;<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second even-row-color\"><code><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#LOAD_UB_OF_CLASS\">LOAD_UB_OF_CLASS<\/a><\/code><\/div>\n+<div class=\"col-last even-row-color\"><code>\"(\\\\d+(\\\\s){2}(LoadUB.*)+(\\\\s){2}===.*@\\\\S*\"<\/code><\/div>\n+<div class=\"col-first odd-row-color\"><code id=\"jdk.test.lib.hotspot.ir_framework.IRNode.LOAD_US\">public&nbsp;static&nbsp;final&nbsp;<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second odd-row-color\"><code><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#LOAD_US\">LOAD_US<\/a><\/code><\/div>\n+<div class=\"col-last odd-row-color\"><code>\"(\\\\d+(\\\\s){2}(LoadUS.*)+(\\\\s){2}===.*)\"<\/code><\/div>\n+<div class=\"col-first even-row-color\"><code id=\"jdk.test.lib.hotspot.ir_framework.IRNode.LOAD_US_OF_CLASS\">public&nbsp;static&nbsp;final&nbsp;<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second even-row-color\"><code><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#LOAD_US_OF_CLASS\">LOAD_US_OF_CLASS<\/a><\/code><\/div>\n+<div class=\"col-last even-row-color\"><code>\"(\\\\d+(\\\\s){2}(LoadUS.*)+(\\\\s){2}===.*@\\\\S*\"<\/code><\/div>\n+<div class=\"col-first odd-row-color\"><code id=\"jdk.test.lib.hotspot.ir_framework.IRNode.LOOP\">public&nbsp;static&nbsp;final&nbsp;<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second odd-row-color\"><code><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#LOOP\">LOOP<\/a><\/code><\/div>\n+<div class=\"col-last odd-row-color\"><code>\"(\\\\d+(\\\\s){2}(Loop.*)+(\\\\s){2}===.*)\"<\/code><\/div>\n+<div class=\"col-first even-row-color\"><code id=\"jdk.test.lib.hotspot.ir_framework.IRNode.MEMBAR\">public&nbsp;static&nbsp;final&nbsp;<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second even-row-color\"><code><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#MEMBAR\">MEMBAR<\/a><\/code><\/div>\n+<div class=\"col-last even-row-color\"><code>\"(\\\\d+(\\\\s){2}(MemBar.*)+(\\\\s){2}===.*)\"<\/code><\/div>\n+<div class=\"col-first odd-row-color\"><code id=\"jdk.test.lib.hotspot.ir_framework.IRNode.NULL_ASSERT_TRAP\">public&nbsp;static&nbsp;final&nbsp;<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second odd-row-color\"><code><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#NULL_ASSERT_TRAP\">NULL_ASSERT_TRAP<\/a><\/code><\/div>\n+<div class=\"col-last odd-row-color\"><code>\"(\\\\d+(\\\\s){2}(CallStaticJava.*)+(\\\\s){2}===.*uncommon_trap.*null_assert)\"<\/code><\/div>\n+<div class=\"col-first even-row-color\"><code id=\"jdk.test.lib.hotspot.ir_framework.IRNode.NULL_CHECK_TRAP\">public&nbsp;static&nbsp;final&nbsp;<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second even-row-color\"><code><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#NULL_CHECK_TRAP\">NULL_CHECK_TRAP<\/a><\/code><\/div>\n+<div class=\"col-last even-row-color\"><code>\"(\\\\d+(\\\\s){2}(CallStaticJava.*)+(\\\\s){2}===.*uncommon_trap.*null_check)\"<\/code><\/div>\n+<div class=\"col-first odd-row-color\"><code id=\"jdk.test.lib.hotspot.ir_framework.IRNode.PREDICATE_TRAP\">public&nbsp;static&nbsp;final&nbsp;<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second odd-row-color\"><code><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#PREDICATE_TRAP\">PREDICATE_TRAP<\/a><\/code><\/div>\n+<div class=\"col-last odd-row-color\"><code>\"(\\\\d+(\\\\s){2}(CallStaticJava.*)+(\\\\s){2}===.*uncommon_trap.*predicate)\"<\/code><\/div>\n+<div class=\"col-first even-row-color\"><code id=\"jdk.test.lib.hotspot.ir_framework.IRNode.RANGE_CHECK_TRAP\">public&nbsp;static&nbsp;final&nbsp;<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second even-row-color\"><code><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#RANGE_CHECK_TRAP\">RANGE_CHECK_TRAP<\/a><\/code><\/div>\n+<div class=\"col-last even-row-color\"><code>\"(\\\\d+(\\\\s){2}(CallStaticJava.*)+(\\\\s){2}===.*uncommon_trap.*range_check)\"<\/code><\/div>\n+<div class=\"col-first odd-row-color\"><code id=\"jdk.test.lib.hotspot.ir_framework.IRNode.SCOPE_OBJECT\">public&nbsp;static&nbsp;final&nbsp;<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second odd-row-color\"><code><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#SCOPE_OBJECT\">SCOPE_OBJECT<\/a><\/code><\/div>\n+<div class=\"col-last odd-row-color\"><code>\"(.*# ScObj.*)\"<\/code><\/div>\n+<div class=\"col-first even-row-color\"><code id=\"jdk.test.lib.hotspot.ir_framework.IRNode.STORE\">public&nbsp;static&nbsp;final&nbsp;<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second even-row-color\"><code><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#STORE\">STORE<\/a><\/code><\/div>\n+<div class=\"col-last even-row-color\"><code>\"(\\\\d+(\\\\s){2}(Store(B|C|S|I|L|F|D|P|N).*)+(\\\\s){2}===.*)\"<\/code><\/div>\n+<div class=\"col-first odd-row-color\"><code id=\"jdk.test.lib.hotspot.ir_framework.IRNode.STORE_B\">public&nbsp;static&nbsp;final&nbsp;<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second odd-row-color\"><code><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#STORE_B\">STORE_B<\/a><\/code><\/div>\n+<div class=\"col-last odd-row-color\"><code>\"(\\\\d+(\\\\s){2}(StoreB.*)+(\\\\s){2}===.*)\"<\/code><\/div>\n+<div class=\"col-first even-row-color\"><code id=\"jdk.test.lib.hotspot.ir_framework.IRNode.STORE_B_OF_CLASS\">public&nbsp;static&nbsp;final&nbsp;<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second even-row-color\"><code><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#STORE_B_OF_CLASS\">STORE_B_OF_CLASS<\/a><\/code><\/div>\n+<div class=\"col-last even-row-color\"><code>\"(\\\\d+(\\\\s){2}(StoreB.*)+(\\\\s){2}===.*@\\\\S*\"<\/code><\/div>\n+<div class=\"col-first odd-row-color\"><code id=\"jdk.test.lib.hotspot.ir_framework.IRNode.STORE_C\">public&nbsp;static&nbsp;final&nbsp;<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second odd-row-color\"><code><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#STORE_C\">STORE_C<\/a><\/code><\/div>\n+<div class=\"col-last odd-row-color\"><code>\"(\\\\d+(\\\\s){2}(StoreC.*)+(\\\\s){2}===.*)\"<\/code><\/div>\n+<div class=\"col-first even-row-color\"><code id=\"jdk.test.lib.hotspot.ir_framework.IRNode.STORE_C_OF_CLASS\">public&nbsp;static&nbsp;final&nbsp;<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second even-row-color\"><code><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#STORE_C_OF_CLASS\">STORE_C_OF_CLASS<\/a><\/code><\/div>\n+<div class=\"col-last even-row-color\"><code>\"(\\\\d+(\\\\s){2}(StoreC.*)+(\\\\s){2}===.*@\\\\S*\"<\/code><\/div>\n+<div class=\"col-first odd-row-color\"><code id=\"jdk.test.lib.hotspot.ir_framework.IRNode.STORE_D\">public&nbsp;static&nbsp;final&nbsp;<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second odd-row-color\"><code><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#STORE_D\">STORE_D<\/a><\/code><\/div>\n+<div class=\"col-last odd-row-color\"><code>\"(\\\\d+(\\\\s){2}(StoreD.*)+(\\\\s){2}===.*)\"<\/code><\/div>\n+<div class=\"col-first even-row-color\"><code id=\"jdk.test.lib.hotspot.ir_framework.IRNode.STORE_D_OF_CLASS\">public&nbsp;static&nbsp;final&nbsp;<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second even-row-color\"><code><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#STORE_D_OF_CLASS\">STORE_D_OF_CLASS<\/a><\/code><\/div>\n+<div class=\"col-last even-row-color\"><code>\"(\\\\d+(\\\\s){2}(StoreD.*)+(\\\\s){2}===.*@\\\\S*\"<\/code><\/div>\n+<div class=\"col-first odd-row-color\"><code id=\"jdk.test.lib.hotspot.ir_framework.IRNode.STORE_F\">public&nbsp;static&nbsp;final&nbsp;<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second odd-row-color\"><code><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#STORE_F\">STORE_F<\/a><\/code><\/div>\n+<div class=\"col-last odd-row-color\"><code>\"(\\\\d+(\\\\s){2}(StoreF.*)+(\\\\s){2}===.*)\"<\/code><\/div>\n+<div class=\"col-first even-row-color\"><code id=\"jdk.test.lib.hotspot.ir_framework.IRNode.STORE_F_OF_CLASS\">public&nbsp;static&nbsp;final&nbsp;<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second even-row-color\"><code><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#STORE_F_OF_CLASS\">STORE_F_OF_CLASS<\/a><\/code><\/div>\n+<div class=\"col-last even-row-color\"><code>\"(\\\\d+(\\\\s){2}(StoreF.*)+(\\\\s){2}===.*@\\\\S*\"<\/code><\/div>\n+<div class=\"col-first odd-row-color\"><code id=\"jdk.test.lib.hotspot.ir_framework.IRNode.STORE_I\">public&nbsp;static&nbsp;final&nbsp;<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second odd-row-color\"><code><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#STORE_I\">STORE_I<\/a><\/code><\/div>\n+<div class=\"col-last odd-row-color\"><code>\"(\\\\d+(\\\\s){2}(StoreI.*)+(\\\\s){2}===.*)\"<\/code><\/div>\n+<div class=\"col-first even-row-color\"><code id=\"jdk.test.lib.hotspot.ir_framework.IRNode.STORE_I_OF_CLASS\">public&nbsp;static&nbsp;final&nbsp;<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second even-row-color\"><code><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#STORE_I_OF_CLASS\">STORE_I_OF_CLASS<\/a><\/code><\/div>\n+<div class=\"col-last even-row-color\"><code>\"(\\\\d+(\\\\s){2}(StoreI.*)+(\\\\s){2}===.*@\\\\S*\"<\/code><\/div>\n+<div class=\"col-first odd-row-color\"><code id=\"jdk.test.lib.hotspot.ir_framework.IRNode.STORE_L\">public&nbsp;static&nbsp;final&nbsp;<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second odd-row-color\"><code><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#STORE_L\">STORE_L<\/a><\/code><\/div>\n+<div class=\"col-last odd-row-color\"><code>\"(\\\\d+(\\\\s){2}(StoreL.*)+(\\\\s){2}===.*)\"<\/code><\/div>\n+<div class=\"col-first even-row-color\"><code id=\"jdk.test.lib.hotspot.ir_framework.IRNode.STORE_L_OF_CLASS\">public&nbsp;static&nbsp;final&nbsp;<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second even-row-color\"><code><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#STORE_L_OF_CLASS\">STORE_L_OF_CLASS<\/a><\/code><\/div>\n+<div class=\"col-last even-row-color\"><code>\"(\\\\d+(\\\\s){2}(StoreL.*)+(\\\\s){2}===.*@\\\\S*\"<\/code><\/div>\n+<div class=\"col-first odd-row-color\"><code id=\"jdk.test.lib.hotspot.ir_framework.IRNode.STORE_N\">public&nbsp;static&nbsp;final&nbsp;<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second odd-row-color\"><code><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#STORE_N\">STORE_N<\/a><\/code><\/div>\n+<div class=\"col-last odd-row-color\"><code>\"(\\\\d+(\\\\s){2}(StoreN.*)+(\\\\s){2}===.*)\"<\/code><\/div>\n+<div class=\"col-first even-row-color\"><code id=\"jdk.test.lib.hotspot.ir_framework.IRNode.STORE_N_OF_CLASS\">public&nbsp;static&nbsp;final&nbsp;<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second even-row-color\"><code><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#STORE_N_OF_CLASS\">STORE_N_OF_CLASS<\/a><\/code><\/div>\n+<div class=\"col-last even-row-color\"><code>\"(\\\\d+(\\\\s){2}(StoreN.*)+(\\\\s){2}===.*@\\\\S*\"<\/code><\/div>\n+<div class=\"col-first odd-row-color\"><code id=\"jdk.test.lib.hotspot.ir_framework.IRNode.STORE_OF_CLASS\">public&nbsp;static&nbsp;final&nbsp;<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second odd-row-color\"><code><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#STORE_OF_CLASS\">STORE_OF_CLASS<\/a><\/code><\/div>\n+<div class=\"col-last odd-row-color\"><code>\"(\\\\d+(\\\\s){2}(Store(B|C|S|I|L|F|D|P|N).*)+(\\\\s){2}===.*@\\\\S*\"<\/code><\/div>\n+<div class=\"col-first even-row-color\"><code id=\"jdk.test.lib.hotspot.ir_framework.IRNode.STORE_OF_FIELD\">public&nbsp;static&nbsp;final&nbsp;<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second even-row-color\"><code><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#STORE_OF_FIELD\">STORE_OF_FIELD<\/a><\/code><\/div>\n+<div class=\"col-last even-row-color\"><code>\"(\\\\d+(\\\\s){2}(Store(B|C|S|I|L|F|D|P|N).*)+(\\\\s){2}===.*@.*name=\"<\/code><\/div>\n+<div class=\"col-first odd-row-color\"><code id=\"jdk.test.lib.hotspot.ir_framework.IRNode.STORE_P\">public&nbsp;static&nbsp;final&nbsp;<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second odd-row-color\"><code><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#STORE_P\">STORE_P<\/a><\/code><\/div>\n+<div class=\"col-last odd-row-color\"><code>\"(\\\\d+(\\\\s){2}(StoreP.*)+(\\\\s){2}===.*)\"<\/code><\/div>\n+<div class=\"col-first even-row-color\"><code id=\"jdk.test.lib.hotspot.ir_framework.IRNode.STORE_P_OF_CLASS\">public&nbsp;static&nbsp;final&nbsp;<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second even-row-color\"><code><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#STORE_P_OF_CLASS\">STORE_P_OF_CLASS<\/a><\/code><\/div>\n+<div class=\"col-last even-row-color\"><code>\"(\\\\d+(\\\\s){2}(StoreP.*)+(\\\\s){2}===.*@\\\\S*\"<\/code><\/div>\n+<div class=\"col-first odd-row-color\"><code id=\"jdk.test.lib.hotspot.ir_framework.IRNode.TRAP\">public&nbsp;static&nbsp;final&nbsp;<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second odd-row-color\"><code><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#TRAP\">TRAP<\/a><\/code><\/div>\n+<div class=\"col-last odd-row-color\"><code>\"(\\\\d+(\\\\s){2}(CallStaticJava.*)+(\\\\s){2}===.*uncommon_trap.*reason)\"<\/code><\/div>\n+<div class=\"col-first even-row-color\"><code id=\"jdk.test.lib.hotspot.ir_framework.IRNode.UNHANDLED_TRAP\">public&nbsp;static&nbsp;final&nbsp;<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second even-row-color\"><code><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#UNHANDLED_TRAP\">UNHANDLED_TRAP<\/a><\/code><\/div>\n+<div class=\"col-last even-row-color\"><code>\"(\\\\d+(\\\\s){2}(CallStaticJava.*)+(\\\\s){2}===.*uncommon_trap.*unhandled)\"<\/code><\/div>\n+<div class=\"col-first odd-row-color\"><code id=\"jdk.test.lib.hotspot.ir_framework.IRNode.UNSTABLE_IF_TRAP\">public&nbsp;static&nbsp;final&nbsp;<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second odd-row-color\"><code><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#UNSTABLE_IF_TRAP\">UNSTABLE_IF_TRAP<\/a><\/code><\/div>\n+<div class=\"col-last odd-row-color\"><code>\"(\\\\d+(\\\\s){2}(CallStaticJava.*)+(\\\\s){2}===.*uncommon_trap.*unstable_if)\"<\/code><\/div>\n+<\/div>\n+<\/li>\n+<\/ul>\n+<\/section>\n+<\/main>\n+<\/div>\n+<\/div>\n+<\/body>\n+<\/html>\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/doc\/constant-values.html","additions":273,"deletions":0,"binary":false,"changes":273,"status":"added"},{"patch":"@@ -0,0 +1,1 @@\n+jdk.test.lib.hotspot.ir_framework\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/doc\/element-list","additions":1,"deletions":0,"binary":false,"changes":1,"status":"added"},{"patch":"@@ -0,0 +1,149 @@\n+<!DOCTYPE HTML>\n+<html lang=\"en\">\n+<head>\n+<!-- Generated by javadoc (17) on Wed Apr 14 13:12:12 CEST 2021 -->\n+<title>API Help<\/title>\n+<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n+<meta http-equiv=\"Content-Type\" content=\"text\/html; charset=utf-8\">\n+<meta name=\"dc.created\" content=\"2021-04-14\">\n+<meta name=\"description\" content=\"help\">\n+<meta name=\"generator\" content=\"javadoc\/HelpWriter\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"stylesheet.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"script-dir\/jquery-ui.min.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"jquery-ui.overrides.css\" title=\"Style\">\n+<script type=\"text\/javascript\" src=\"script.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"script-dir\/jquery-3.5.1.min.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"script-dir\/jquery-ui.min.js\"><\/script>\n+<\/head>\n+<body class=\"help-page\">\n+<script type=\"text\/javascript\">var pathtoroot = \".\/\";\n+loadScripts(document, 'script');<\/script>\n+<noscript>\n+<div>JavaScript is disabled on your browser.<\/div>\n+<\/noscript>\n+<div class=\"flex-box\">\n+<header role=\"banner\" class=\"flex-header\">\n+<nav role=\"navigation\">\n+<!-- ========= START OF TOP NAVBAR ======= -->\n+<div class=\"top-nav\" id=\"navbar-top\">\n+<div class=\"skip-nav\"><a href=\"#skip-navbar-top\" title=\"Skip navigation links\">Skip navigation links<\/a><\/div>\n+<ul id=\"navbar-top-firstrow\" class=\"nav-list\" title=\"Navigation\">\n+<li><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/package-summary.html\">Package<\/a><\/li>\n+<li>Class<\/li>\n+<li><a href=\"overview-tree.html\">Tree<\/a><\/li>\n+<li><a href=\"index-files\/index-1.html\">Index<\/a><\/li>\n+<li class=\"nav-bar-cell1-rev\">Help<\/li>\n+<\/ul>\n+<\/div>\n+<div class=\"sub-nav\">\n+<div class=\"nav-list-search\"><label for=\"search\">SEARCH:<\/label>\n+<input type=\"text\" id=\"search\" value=\"search\" disabled=\"disabled\">\n+<input type=\"reset\" id=\"reset\" value=\"reset\" disabled=\"disabled\">\n+<\/div>\n+<\/div>\n+<!-- ========= END OF TOP NAVBAR ========= -->\n+<span class=\"skip-nav\" id=\"skip-navbar-top\"><\/span><\/nav>\n+<\/header>\n+<div class=\"flex-content\">\n+<main role=\"main\">\n+<div class=\"header\">\n+<h1 class=\"title\">How This API Document Is Organized<\/h1>\n+<div class=\"sub-title\">This API (Application Programming Interface) document has pages corresponding to the items in the navigation bar, described as follows.<\/div>\n+<\/div>\n+<section class=\"help-section\">\n+<h2>Package<\/h2>\n+<p>Each package has a page that contains a list of its classes and interfaces, with a summary for each. These pages may contain six categories:<\/p>\n+<ul class=\"help-section-list\">\n+<li>Interfaces<\/li>\n+<li>Classes<\/li>\n+<li>Enum Classes<\/li>\n+<li>Exceptions<\/li>\n+<li>Errors<\/li>\n+<li>Annotation Interfaces<\/li>\n+<\/ul>\n+<\/section>\n+<section class=\"help-section\">\n+<h2>Class or Interface<\/h2>\n+<p>Each class, interface, nested class and nested interface has its own separate page. Each of these pages has three sections consisting of a class\/interface description, summary tables, and detailed member descriptions:<\/p>\n+<ul class=\"help-section-list\">\n+<li>Class Inheritance Diagram<\/li>\n+<li>Direct Subclasses<\/li>\n+<li>All Known Subinterfaces<\/li>\n+<li>All Known Implementing Classes<\/li>\n+<li>Class or Interface Declaration<\/li>\n+<li>Class or Interface Description<\/li>\n+<\/ul>\n+<br>\n+<ul class=\"help-section-list\">\n+<li>Nested Class Summary<\/li>\n+<li>Field Summary<\/li>\n+<li>Property Summary<\/li>\n+<li>Constructor Summary<\/li>\n+<li>Method Summary<\/li>\n+<\/ul>\n+<br>\n+<ul class=\"help-section-list\">\n+<li>Field Details<\/li>\n+<li>Property Details<\/li>\n+<li>Constructor Details<\/li>\n+<li>Method Details<\/li>\n+<\/ul>\n+<p>The summary entries are alphabetical, while the detailed descriptions are in the order they appear in the source code. This preserves the logical groupings established by the programmer.<\/p>\n+<\/section>\n+<section class=\"help-section\">\n+<h2>Annotation Interface<\/h2>\n+<p>Each annotation interface has its own separate page with the following sections:<\/p>\n+<ul class=\"help-section-list\">\n+<li>Annotation Interface Declaration<\/li>\n+<li>Annotation Interface Description<\/li>\n+<li>Required Element Summary<\/li>\n+<li>Optional Element Summary<\/li>\n+<li>Element Details<\/li>\n+<\/ul>\n+<\/section>\n+<section class=\"help-section\">\n+<h2>Enum Class<\/h2>\n+<p>Each enum class has its own separate page with the following sections:<\/p>\n+<ul class=\"help-section-list\">\n+<li>Enum Declaration<\/li>\n+<li>Enum Description<\/li>\n+<li>Enum Constant Summary<\/li>\n+<li>Enum Constant Details<\/li>\n+<\/ul>\n+<\/section>\n+<section class=\"help-section\">\n+<h2>Tree (Class Hierarchy)<\/h2>\n+<p>There is a <a href=\"overview-tree.html\">Class Hierarchy<\/a> page for all packages, plus a hierarchy for each package. Each hierarchy page contains a list of classes and a list of interfaces. Classes are organized by inheritance structure starting with <code>java.lang.Object<\/code>. Interfaces do not inherit from <code>java.lang.Object<\/code>.<\/p>\n+<ul class=\"help-section-list\">\n+<li>When viewing the Overview page, clicking on \"Tree\" displays the hierarchy for all packages.<\/li>\n+<li>When viewing a particular package, class or interface page, clicking on \"Tree\" displays the hierarchy for only that package.<\/li>\n+<\/ul>\n+<\/section>\n+<section class=\"help-section\">\n+<h2>Index<\/h2>\n+<p>The <a href=\"index-files\/index-1.html\">Index<\/a> contains an alphabetic index of all classes, interfaces, constructors, methods, and fields, as well as lists of all packages and all classes.<\/p>\n+<\/section>\n+<section class=\"help-section\">\n+<h2>Serialized Form<\/h2>\n+<p>Each serializable or externalizable class has a description of its serialization fields and methods. This information is of interest to those who implement rather than use the API. While there is no link in the navigation bar, you can get to this information by going to any serialized class and clicking \"Serialized Form\" in the \"See Also\" section of the class description.<\/p>\n+<\/section>\n+<section class=\"help-section\">\n+<h2>Constant Field Values<\/h2>\n+<p>The <a href=\"constant-values.html\">Constant Field Values<\/a> page lists the static final fields and their values.<\/p>\n+<\/section>\n+<section class=\"help-section\">\n+<h2>Search<\/h2>\n+<p>You can search for definitions of modules, packages, types, fields, methods, system properties and other terms defined in the API, using some or all of the name, optionally using \"camel-case\" abbreviations. For example:<\/p>\n+<ul class=\"help-section-list\">\n+<li><code>j.l.obj<\/code> will match \"java.lang.Object\"<\/li>\n+<li><code>InpStr<\/code> will match \"java.io.InputStream\"<\/li>\n+<li><code>HM.cK<\/code> will match \"java.util.HashMap.containsKey(Object)\"<\/li>\n+<\/ul>\n+<p>Refer to <a href=\"https:\/\/docs.oracle.com\/en\/java\/javase\/17\/docs\/specs\/javadoc\/javadoc-search-spec.html\">the Javadoc Search Specification<\/a> for a full description of search features.<\/p>\n+<\/section>\n+<hr>\n+<span class=\"help-footnote\">This help file applies to API documentation generated by the standard doclet.<\/span><\/main>\n+<\/div>\n+<\/div>\n+<\/body>\n+<\/html>\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/doc\/help-doc.html","additions":149,"deletions":0,"binary":false,"changes":149,"status":"added"},{"patch":"@@ -0,0 +1,151 @@\n+<!DOCTYPE HTML>\n+<html lang=\"en\">\n+<head>\n+<!-- Generated by javadoc (17) on Wed Apr 14 13:12:12 CEST 2021 -->\n+<title>A-Index<\/title>\n+<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n+<meta http-equiv=\"Content-Type\" content=\"text\/html; charset=utf-8\">\n+<meta name=\"dc.created\" content=\"2021-04-14\">\n+<meta name=\"description\" content=\"index: A\">\n+<meta name=\"generator\" content=\"javadoc\/IndexWriter\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/stylesheet.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/script-dir\/jquery-ui.min.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/jquery-ui.overrides.css\" title=\"Style\">\n+<script type=\"text\/javascript\" src=\"..\/script.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/script-dir\/jquery-3.5.1.min.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/script-dir\/jquery-ui.min.js\"><\/script>\n+<\/head>\n+<body class=\"index-page\">\n+<script type=\"text\/javascript\">var pathtoroot = \"..\/\";\n+loadScripts(document, 'script');<\/script>\n+<noscript>\n+<div>JavaScript is disabled on your browser.<\/div>\n+<\/noscript>\n+<div class=\"flex-box\">\n+<header role=\"banner\" class=\"flex-header\">\n+<nav role=\"navigation\">\n+<!-- ========= START OF TOP NAVBAR ======= -->\n+<div class=\"top-nav\" id=\"navbar-top\">\n+<div class=\"skip-nav\"><a href=\"#skip-navbar-top\" title=\"Skip navigation links\">Skip navigation links<\/a><\/div>\n+<ul id=\"navbar-top-firstrow\" class=\"nav-list\" title=\"Navigation\">\n+<li><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/package-summary.html\">Package<\/a><\/li>\n+<li>Class<\/li>\n+<li><a href=\"..\/overview-tree.html\">Tree<\/a><\/li>\n+<li class=\"nav-bar-cell1-rev\">Index<\/li>\n+<li><a href=\"..\/help-doc.html\">Help<\/a><\/li>\n+<\/ul>\n+<\/div>\n+<div class=\"sub-nav\">\n+<div class=\"nav-list-search\"><label for=\"search\">SEARCH:<\/label>\n+<input type=\"text\" id=\"search\" value=\"search\" disabled=\"disabled\">\n+<input type=\"reset\" id=\"reset\" value=\"reset\" disabled=\"disabled\">\n+<\/div>\n+<\/div>\n+<!-- ========= END OF TOP NAVBAR ========= -->\n+<span class=\"skip-nav\" id=\"skip-navbar-top\"><\/span><\/nav>\n+<\/header>\n+<div class=\"flex-content\">\n+<main role=\"main\">\n+<div class=\"header\">\n+<h1>Index<\/h1>\n+<\/div>\n+<a href=\"index-1.html\">A<\/a>&nbsp;<a href=\"index-2.html\">B<\/a>&nbsp;<a href=\"index-3.html\">C<\/a>&nbsp;<a href=\"index-4.html\">D<\/a>&nbsp;<a href=\"index-5.html\">E<\/a>&nbsp;<a href=\"index-6.html\">F<\/a>&nbsp;<a href=\"index-7.html\">G<\/a>&nbsp;<a href=\"index-8.html\">I<\/a>&nbsp;<a href=\"index-9.html\">J<\/a>&nbsp;<a href=\"index-10.html\">L<\/a>&nbsp;<a href=\"index-11.html\">M<\/a>&nbsp;<a href=\"index-12.html\">N<\/a>&nbsp;<a href=\"index-13.html\">P<\/a>&nbsp;<a href=\"index-14.html\">R<\/a>&nbsp;<a href=\"index-15.html\">S<\/a>&nbsp;<a href=\"index-16.html\">T<\/a>&nbsp;<a href=\"index-17.html\">U<\/a>&nbsp;<a href=\"index-18.html\">V<\/a>&nbsp;<a href=\"index-19.html\">W<\/a>&nbsp;<br><a href=\"..\/allclasses-index.html\">All&nbsp;Classes<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/allpackages-index.html\">All&nbsp;Packages<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/constant-values.html\">Constant&nbsp;Field&nbsp;Values<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/serialized-form.html\">Serialized&nbsp;Form<\/a>\n+<h2 class=\"title\" id=\"I:A\">A<\/h2>\n+<dl class=\"index\">\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/AbstractInfo.html\" class=\"type-name-link\" title=\"class in jdk.test.lib.hotspot.ir_framework\">AbstractInfo<\/a> - Class in <a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/package-summary.html\">jdk.test.lib.hotspot.ir_framework<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Base info class which provides some useful utility methods and information about a test.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/Scenario.html#addFlags(java.lang.String...)\" class=\"member-name-link\">addFlags(String...)<\/a> - Method in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/Scenario.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">Scenario<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Add additional VM flags to this scenario.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/TestFramework.html#addFlags(java.lang.String...)\" class=\"member-name-link\">addFlags(String...)<\/a> - Method in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/TestFramework.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestFramework<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Add VM flags to be used for the test VM.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/TestFramework.html#addHelperClasses(java.lang.Class...)\" class=\"member-name-link\">addHelperClasses(Class&lt;?&gt;...)<\/a> - Method in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/TestFramework.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestFramework<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Add helper classes that can specify additional compile command annotations (<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/ForceCompile.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@ForceCompile<\/code><\/a>,\n+ <a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/DontCompile.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@DontCompile<\/code><\/a>, <a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/ForceInline.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@ForceInline<\/code><\/a>, <a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/DontInline.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@DontInline<\/code><\/a>) to be applied\n+ while testing <code>testClass<\/code> (also see description of <a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/TestFramework.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\"><code>TestFramework<\/code><\/a>).<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/TestFramework.html#addScenarios(jdk.test.lib.hotspot.ir_framework.Scenario...)\" class=\"member-name-link\">addScenarios(Scenario...)<\/a> - Method in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/TestFramework.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestFramework<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Add scenarios to be used for the test VM.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#ALLOC\" class=\"member-name-link\">ALLOC<\/a> - Static variable in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">IRNode<\/a><\/dt>\n+<dd>&nbsp;<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#ALLOC_ARRAY\" class=\"member-name-link\">ALLOC_ARRAY<\/a> - Static variable in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">IRNode<\/a><\/dt>\n+<dd>&nbsp;<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#ALLOC_ARRAY_OF\" class=\"member-name-link\">ALLOC_ARRAY_OF<\/a> - Static variable in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">IRNode<\/a><\/dt>\n+<dd>&nbsp;<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#ALLOC_OF\" class=\"member-name-link\">ALLOC_OF<\/a> - Static variable in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">IRNode<\/a><\/dt>\n+<dd>&nbsp;<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/CompLevel.html#ANY\" class=\"member-name-link\">ANY<\/a> - Enum constant in enum class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/CompLevel.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">CompLevel<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Use any compilation level depending on the usage:\n+  \n+      <\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IR.html#applyIf()\" class=\"member-name-link\">applyIf()<\/a> - Element in annotation interface jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IR.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\">IR<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Define a single VM flag precondition which <i>must hold<\/i> when applying the IR rule.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IR.html#applyIfAnd()\" class=\"member-name-link\">applyIfAnd()<\/a> - Element in annotation interface jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IR.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\">IR<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Define a list of at least two VM flag precondition which <i><b>all<\/b> must hold<\/i> when applying the IR rule.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IR.html#applyIfNot()\" class=\"member-name-link\">applyIfNot()<\/a> - Element in annotation interface jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IR.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\">IR<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Define a single VM flag precondition which <i>must <b>not<\/b> hold<\/i> when applying the IR rule.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IR.html#applyIfOr()\" class=\"member-name-link\">applyIfOr()<\/a> - Element in annotation interface jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IR.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\">IR<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Define a list of at least two VM flag precondition from which <i><b>at least one<\/b> must hold<\/i> when applying\n+ the IR rule.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/Argument.html\" class=\"type-name-link\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">Argument<\/a> - Enum Class in <a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/package-summary.html\">jdk.test.lib.hotspot.ir_framework<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Well-defined argument values that can be used in the <a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/Arguments.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Arguments<\/code><\/a> annotation at a <a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Test<\/code><\/a> method for a\n+ <b>base test<\/b> or a <b>checked test<\/b>.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/Arguments.html\" class=\"type-name-link\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\">Arguments<\/a> - Annotation Interface in <a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/package-summary.html\">jdk.test.lib.hotspot.ir_framework<\/a><\/dt>\n+<dd>\n+<div class=\"block\">This annotation is used to specify well-defined <a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/Argument.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\"><code>Argument<\/code><\/a> values for test methods (specifying <a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Test<\/code><\/a>) when\n+ used as part of a <b>base test<\/b> or <b>checked test<\/b>.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/TestFramework.html#assertCompiled(java.lang.reflect.Method)\" class=\"member-name-link\">assertCompiled(Method)<\/a> - Static method in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/TestFramework.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestFramework<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Checks if <code>m<\/code> is compiled at any level.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/TestFramework.html#assertCompiledAtLevel(java.lang.reflect.Method,jdk.test.lib.hotspot.ir_framework.CompLevel)\" class=\"member-name-link\">assertCompiledAtLevel(Method, CompLevel)<\/a> - Static method in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/TestFramework.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestFramework<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Verifies that <code>m<\/code> is compiled at the specified <code>compLevel<\/code>.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/TestFramework.html#assertCompiledByC1(java.lang.reflect.Method)\" class=\"member-name-link\">assertCompiledByC1(Method)<\/a> - Static method in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/TestFramework.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestFramework<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Verifies that <code>m<\/code> is compiled with C1.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/TestFramework.html#assertCompiledByC2(java.lang.reflect.Method)\" class=\"member-name-link\">assertCompiledByC2(Method)<\/a> - Static method in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/TestFramework.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestFramework<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Verifies that <code>m<\/code> is compiled with C2.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/TestFramework.html#assertDeoptimizedByC1(java.lang.reflect.Method)\" class=\"member-name-link\">assertDeoptimizedByC1(Method)<\/a> - Static method in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/TestFramework.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestFramework<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Verifies that <code>m<\/code> was deoptimized after being C1 compiled.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/TestFramework.html#assertDeoptimizedByC2(java.lang.reflect.Method)\" class=\"member-name-link\">assertDeoptimizedByC2(Method)<\/a> - Static method in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/TestFramework.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestFramework<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Verifies that <code>m<\/code> was deoptimized after being C2 compiled.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/TestFramework.html#assertNotCompiled(java.lang.reflect.Method)\" class=\"member-name-link\">assertNotCompiled(Method)<\/a> - Static method in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/TestFramework.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestFramework<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Checks if <code>m<\/code> is not compiled at any level.<\/div>\n+<\/dd>\n+<\/dl>\n+<a href=\"index-1.html\">A<\/a>&nbsp;<a href=\"index-2.html\">B<\/a>&nbsp;<a href=\"index-3.html\">C<\/a>&nbsp;<a href=\"index-4.html\">D<\/a>&nbsp;<a href=\"index-5.html\">E<\/a>&nbsp;<a href=\"index-6.html\">F<\/a>&nbsp;<a href=\"index-7.html\">G<\/a>&nbsp;<a href=\"index-8.html\">I<\/a>&nbsp;<a href=\"index-9.html\">J<\/a>&nbsp;<a href=\"index-10.html\">L<\/a>&nbsp;<a href=\"index-11.html\">M<\/a>&nbsp;<a href=\"index-12.html\">N<\/a>&nbsp;<a href=\"index-13.html\">P<\/a>&nbsp;<a href=\"index-14.html\">R<\/a>&nbsp;<a href=\"index-15.html\">S<\/a>&nbsp;<a href=\"index-16.html\">T<\/a>&nbsp;<a href=\"index-17.html\">U<\/a>&nbsp;<a href=\"index-18.html\">V<\/a>&nbsp;<a href=\"index-19.html\">W<\/a>&nbsp;<br><a href=\"..\/allclasses-index.html\">All&nbsp;Classes<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/allpackages-index.html\">All&nbsp;Packages<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/constant-values.html\">Constant&nbsp;Field&nbsp;Values<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/serialized-form.html\">Serialized&nbsp;Form<\/a><\/main>\n+<\/div>\n+<\/div>\n+<\/body>\n+<\/html>\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/doc\/index-files\/index-1.html","additions":151,"deletions":0,"binary":false,"changes":151,"status":"added"},{"patch":"@@ -0,0 +1,110 @@\n+<!DOCTYPE HTML>\n+<html lang=\"en\">\n+<head>\n+<!-- Generated by javadoc (17) on Wed Apr 14 13:12:12 CEST 2021 -->\n+<title>L-Index<\/title>\n+<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n+<meta http-equiv=\"Content-Type\" content=\"text\/html; charset=utf-8\">\n+<meta name=\"dc.created\" content=\"2021-04-14\">\n+<meta name=\"description\" content=\"index: L\">\n+<meta name=\"generator\" content=\"javadoc\/IndexWriter\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/stylesheet.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/script-dir\/jquery-ui.min.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/jquery-ui.overrides.css\" title=\"Style\">\n+<script type=\"text\/javascript\" src=\"..\/script.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/script-dir\/jquery-3.5.1.min.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/script-dir\/jquery-ui.min.js\"><\/script>\n+<\/head>\n+<body class=\"index-page\">\n+<script type=\"text\/javascript\">var pathtoroot = \"..\/\";\n+loadScripts(document, 'script');<\/script>\n+<noscript>\n+<div>JavaScript is disabled on your browser.<\/div>\n+<\/noscript>\n+<div class=\"flex-box\">\n+<header role=\"banner\" class=\"flex-header\">\n+<nav role=\"navigation\">\n+<!-- ========= START OF TOP NAVBAR ======= -->\n+<div class=\"top-nav\" id=\"navbar-top\">\n+<div class=\"skip-nav\"><a href=\"#skip-navbar-top\" title=\"Skip navigation links\">Skip navigation links<\/a><\/div>\n+<ul id=\"navbar-top-firstrow\" class=\"nav-list\" title=\"Navigation\">\n+<li><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/package-summary.html\">Package<\/a><\/li>\n+<li>Class<\/li>\n+<li><a href=\"..\/overview-tree.html\">Tree<\/a><\/li>\n+<li class=\"nav-bar-cell1-rev\">Index<\/li>\n+<li><a href=\"..\/help-doc.html\">Help<\/a><\/li>\n+<\/ul>\n+<\/div>\n+<div class=\"sub-nav\">\n+<div class=\"nav-list-search\"><label for=\"search\">SEARCH:<\/label>\n+<input type=\"text\" id=\"search\" value=\"search\" disabled=\"disabled\">\n+<input type=\"reset\" id=\"reset\" value=\"reset\" disabled=\"disabled\">\n+<\/div>\n+<\/div>\n+<!-- ========= END OF TOP NAVBAR ========= -->\n+<span class=\"skip-nav\" id=\"skip-navbar-top\"><\/span><\/nav>\n+<\/header>\n+<div class=\"flex-content\">\n+<main role=\"main\">\n+<div class=\"header\">\n+<h1>Index<\/h1>\n+<\/div>\n+<a href=\"index-1.html\">A<\/a>&nbsp;<a href=\"index-2.html\">B<\/a>&nbsp;<a href=\"index-3.html\">C<\/a>&nbsp;<a href=\"index-4.html\">D<\/a>&nbsp;<a href=\"index-5.html\">E<\/a>&nbsp;<a href=\"index-6.html\">F<\/a>&nbsp;<a href=\"index-7.html\">G<\/a>&nbsp;<a href=\"index-8.html\">I<\/a>&nbsp;<a href=\"index-9.html\">J<\/a>&nbsp;<a href=\"index-10.html\">L<\/a>&nbsp;<a href=\"index-11.html\">M<\/a>&nbsp;<a href=\"index-12.html\">N<\/a>&nbsp;<a href=\"index-13.html\">P<\/a>&nbsp;<a href=\"index-14.html\">R<\/a>&nbsp;<a href=\"index-15.html\">S<\/a>&nbsp;<a href=\"index-16.html\">T<\/a>&nbsp;<a href=\"index-17.html\">U<\/a>&nbsp;<a href=\"index-18.html\">V<\/a>&nbsp;<a href=\"index-19.html\">W<\/a>&nbsp;<br><a href=\"..\/allclasses-index.html\">All&nbsp;Classes<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/allpackages-index.html\">All&nbsp;Packages<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/constant-values.html\">Constant&nbsp;Field&nbsp;Values<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/serialized-form.html\">Serialized&nbsp;Form<\/a>\n+<h2 class=\"title\" id=\"I:L\">L<\/h2>\n+<dl class=\"index\">\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#LOAD\" class=\"member-name-link\">LOAD<\/a> - Static variable in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">IRNode<\/a><\/dt>\n+<dd>&nbsp;<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#LOAD_B\" class=\"member-name-link\">LOAD_B<\/a> - Static variable in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">IRNode<\/a><\/dt>\n+<dd>&nbsp;<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#LOAD_B_OF_CLASS\" class=\"member-name-link\">LOAD_B_OF_CLASS<\/a> - Static variable in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">IRNode<\/a><\/dt>\n+<dd>&nbsp;<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#LOAD_D\" class=\"member-name-link\">LOAD_D<\/a> - Static variable in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">IRNode<\/a><\/dt>\n+<dd>&nbsp;<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#LOAD_D_OF_CLASS\" class=\"member-name-link\">LOAD_D_OF_CLASS<\/a> - Static variable in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">IRNode<\/a><\/dt>\n+<dd>&nbsp;<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#LOAD_F\" class=\"member-name-link\">LOAD_F<\/a> - Static variable in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">IRNode<\/a><\/dt>\n+<dd>&nbsp;<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#LOAD_F_OF_CLASS\" class=\"member-name-link\">LOAD_F_OF_CLASS<\/a> - Static variable in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">IRNode<\/a><\/dt>\n+<dd>&nbsp;<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#LOAD_I\" class=\"member-name-link\">LOAD_I<\/a> - Static variable in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">IRNode<\/a><\/dt>\n+<dd>&nbsp;<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#LOAD_I_OF_CLASS\" class=\"member-name-link\">LOAD_I_OF_CLASS<\/a> - Static variable in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">IRNode<\/a><\/dt>\n+<dd>&nbsp;<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#LOAD_KLASS\" class=\"member-name-link\">LOAD_KLASS<\/a> - Static variable in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">IRNode<\/a><\/dt>\n+<dd>&nbsp;<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#LOAD_L\" class=\"member-name-link\">LOAD_L<\/a> - Static variable in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">IRNode<\/a><\/dt>\n+<dd>&nbsp;<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#LOAD_L_OF_CLASS\" class=\"member-name-link\">LOAD_L_OF_CLASS<\/a> - Static variable in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">IRNode<\/a><\/dt>\n+<dd>&nbsp;<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#LOAD_N\" class=\"member-name-link\">LOAD_N<\/a> - Static variable in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">IRNode<\/a><\/dt>\n+<dd>&nbsp;<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#LOAD_N_OF_CLASS\" class=\"member-name-link\">LOAD_N_OF_CLASS<\/a> - Static variable in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">IRNode<\/a><\/dt>\n+<dd>&nbsp;<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#LOAD_OF_CLASS\" class=\"member-name-link\">LOAD_OF_CLASS<\/a> - Static variable in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">IRNode<\/a><\/dt>\n+<dd>&nbsp;<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#LOAD_OF_FIELD\" class=\"member-name-link\">LOAD_OF_FIELD<\/a> - Static variable in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">IRNode<\/a><\/dt>\n+<dd>&nbsp;<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#LOAD_P\" class=\"member-name-link\">LOAD_P<\/a> - Static variable in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">IRNode<\/a><\/dt>\n+<dd>&nbsp;<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#LOAD_P_OF_CLASS\" class=\"member-name-link\">LOAD_P_OF_CLASS<\/a> - Static variable in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">IRNode<\/a><\/dt>\n+<dd>&nbsp;<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#LOAD_S\" class=\"member-name-link\">LOAD_S<\/a> - Static variable in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">IRNode<\/a><\/dt>\n+<dd>&nbsp;<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#LOAD_S_OF_CLASS\" class=\"member-name-link\">LOAD_S_OF_CLASS<\/a> - Static variable in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">IRNode<\/a><\/dt>\n+<dd>&nbsp;<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#LOAD_UB\" class=\"member-name-link\">LOAD_UB<\/a> - Static variable in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">IRNode<\/a><\/dt>\n+<dd>&nbsp;<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#LOAD_UB_OF_CLASS\" class=\"member-name-link\">LOAD_UB_OF_CLASS<\/a> - Static variable in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">IRNode<\/a><\/dt>\n+<dd>&nbsp;<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#LOAD_US\" class=\"member-name-link\">LOAD_US<\/a> - Static variable in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">IRNode<\/a><\/dt>\n+<dd>&nbsp;<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#LOAD_US_OF_CLASS\" class=\"member-name-link\">LOAD_US_OF_CLASS<\/a> - Static variable in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">IRNode<\/a><\/dt>\n+<dd>&nbsp;<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#LOOP\" class=\"member-name-link\">LOOP<\/a> - Static variable in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">IRNode<\/a><\/dt>\n+<dd>&nbsp;<\/dd>\n+<\/dl>\n+<a href=\"index-1.html\">A<\/a>&nbsp;<a href=\"index-2.html\">B<\/a>&nbsp;<a href=\"index-3.html\">C<\/a>&nbsp;<a href=\"index-4.html\">D<\/a>&nbsp;<a href=\"index-5.html\">E<\/a>&nbsp;<a href=\"index-6.html\">F<\/a>&nbsp;<a href=\"index-7.html\">G<\/a>&nbsp;<a href=\"index-8.html\">I<\/a>&nbsp;<a href=\"index-9.html\">J<\/a>&nbsp;<a href=\"index-10.html\">L<\/a>&nbsp;<a href=\"index-11.html\">M<\/a>&nbsp;<a href=\"index-12.html\">N<\/a>&nbsp;<a href=\"index-13.html\">P<\/a>&nbsp;<a href=\"index-14.html\">R<\/a>&nbsp;<a href=\"index-15.html\">S<\/a>&nbsp;<a href=\"index-16.html\">T<\/a>&nbsp;<a href=\"index-17.html\">U<\/a>&nbsp;<a href=\"index-18.html\">V<\/a>&nbsp;<a href=\"index-19.html\">W<\/a>&nbsp;<br><a href=\"..\/allclasses-index.html\">All&nbsp;Classes<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/allpackages-index.html\">All&nbsp;Packages<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/constant-values.html\">Constant&nbsp;Field&nbsp;Values<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/serialized-form.html\">Serialized&nbsp;Form<\/a><\/main>\n+<\/div>\n+<\/div>\n+<\/body>\n+<\/html>\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/doc\/index-files\/index-10.html","additions":110,"deletions":0,"binary":false,"changes":110,"status":"added"},{"patch":"@@ -0,0 +1,78 @@\n+<!DOCTYPE HTML>\n+<html lang=\"en\">\n+<head>\n+<!-- Generated by javadoc (17) on Wed Apr 14 13:12:12 CEST 2021 -->\n+<title>M-Index<\/title>\n+<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n+<meta http-equiv=\"Content-Type\" content=\"text\/html; charset=utf-8\">\n+<meta name=\"dc.created\" content=\"2021-04-14\">\n+<meta name=\"description\" content=\"index: M\">\n+<meta name=\"generator\" content=\"javadoc\/IndexWriter\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/stylesheet.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/script-dir\/jquery-ui.min.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/jquery-ui.overrides.css\" title=\"Style\">\n+<script type=\"text\/javascript\" src=\"..\/script.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/script-dir\/jquery-3.5.1.min.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/script-dir\/jquery-ui.min.js\"><\/script>\n+<\/head>\n+<body class=\"index-page\">\n+<script type=\"text\/javascript\">var pathtoroot = \"..\/\";\n+loadScripts(document, 'script');<\/script>\n+<noscript>\n+<div>JavaScript is disabled on your browser.<\/div>\n+<\/noscript>\n+<div class=\"flex-box\">\n+<header role=\"banner\" class=\"flex-header\">\n+<nav role=\"navigation\">\n+<!-- ========= START OF TOP NAVBAR ======= -->\n+<div class=\"top-nav\" id=\"navbar-top\">\n+<div class=\"skip-nav\"><a href=\"#skip-navbar-top\" title=\"Skip navigation links\">Skip navigation links<\/a><\/div>\n+<ul id=\"navbar-top-firstrow\" class=\"nav-list\" title=\"Navigation\">\n+<li><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/package-summary.html\">Package<\/a><\/li>\n+<li>Class<\/li>\n+<li><a href=\"..\/overview-tree.html\">Tree<\/a><\/li>\n+<li class=\"nav-bar-cell1-rev\">Index<\/li>\n+<li><a href=\"..\/help-doc.html\">Help<\/a><\/li>\n+<\/ul>\n+<\/div>\n+<div class=\"sub-nav\">\n+<div class=\"nav-list-search\"><label for=\"search\">SEARCH:<\/label>\n+<input type=\"text\" id=\"search\" value=\"search\" disabled=\"disabled\">\n+<input type=\"reset\" id=\"reset\" value=\"reset\" disabled=\"disabled\">\n+<\/div>\n+<\/div>\n+<!-- ========= END OF TOP NAVBAR ========= -->\n+<span class=\"skip-nav\" id=\"skip-navbar-top\"><\/span><\/nav>\n+<\/header>\n+<div class=\"flex-content\">\n+<main role=\"main\">\n+<div class=\"header\">\n+<h1>Index<\/h1>\n+<\/div>\n+<a href=\"index-1.html\">A<\/a>&nbsp;<a href=\"index-2.html\">B<\/a>&nbsp;<a href=\"index-3.html\">C<\/a>&nbsp;<a href=\"index-4.html\">D<\/a>&nbsp;<a href=\"index-5.html\">E<\/a>&nbsp;<a href=\"index-6.html\">F<\/a>&nbsp;<a href=\"index-7.html\">G<\/a>&nbsp;<a href=\"index-8.html\">I<\/a>&nbsp;<a href=\"index-9.html\">J<\/a>&nbsp;<a href=\"index-10.html\">L<\/a>&nbsp;<a href=\"index-11.html\">M<\/a>&nbsp;<a href=\"index-12.html\">N<\/a>&nbsp;<a href=\"index-13.html\">P<\/a>&nbsp;<a href=\"index-14.html\">R<\/a>&nbsp;<a href=\"index-15.html\">S<\/a>&nbsp;<a href=\"index-16.html\">T<\/a>&nbsp;<a href=\"index-17.html\">U<\/a>&nbsp;<a href=\"index-18.html\">V<\/a>&nbsp;<a href=\"index-19.html\">W<\/a>&nbsp;<br><a href=\"..\/allclasses-index.html\">All&nbsp;Classes<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/allpackages-index.html\">All&nbsp;Packages<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/constant-values.html\">Constant&nbsp;Field&nbsp;Values<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/serialized-form.html\">Serialized&nbsp;Form<\/a>\n+<h2 class=\"title\" id=\"I:M\">M<\/h2>\n+<dl class=\"index\">\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/TestFrameworkExecution.html#main(java.lang.String%5B%5D)\" class=\"member-name-link\">main(String[])<\/a> - Static method in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/TestFrameworkExecution.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestFrameworkExecution<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Main entry point of the test VM.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/Argument.html#MAX\" class=\"member-name-link\">MAX<\/a> - Enum constant in enum class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/Argument.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">Argument<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Provides the maximum value of the specified primitive number type.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#MEMBAR\" class=\"member-name-link\">MEMBAR<\/a> - Static variable in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">IRNode<\/a><\/dt>\n+<dd>&nbsp;<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/Argument.html#MIN\" class=\"member-name-link\">MIN<\/a> - Enum constant in enum class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/Argument.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">Argument<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Provides the minimum value of the specified primitive number type.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/Run.html#mode()\" class=\"member-name-link\">mode()<\/a> - Element in annotation interface jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/Run.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\">Run<\/a><\/dt>\n+<dd>\n+<div class=\"block\">The mode of this custom run test.<\/div>\n+<\/dd>\n+<\/dl>\n+<a href=\"index-1.html\">A<\/a>&nbsp;<a href=\"index-2.html\">B<\/a>&nbsp;<a href=\"index-3.html\">C<\/a>&nbsp;<a href=\"index-4.html\">D<\/a>&nbsp;<a href=\"index-5.html\">E<\/a>&nbsp;<a href=\"index-6.html\">F<\/a>&nbsp;<a href=\"index-7.html\">G<\/a>&nbsp;<a href=\"index-8.html\">I<\/a>&nbsp;<a href=\"index-9.html\">J<\/a>&nbsp;<a href=\"index-10.html\">L<\/a>&nbsp;<a href=\"index-11.html\">M<\/a>&nbsp;<a href=\"index-12.html\">N<\/a>&nbsp;<a href=\"index-13.html\">P<\/a>&nbsp;<a href=\"index-14.html\">R<\/a>&nbsp;<a href=\"index-15.html\">S<\/a>&nbsp;<a href=\"index-16.html\">T<\/a>&nbsp;<a href=\"index-17.html\">U<\/a>&nbsp;<a href=\"index-18.html\">V<\/a>&nbsp;<a href=\"index-19.html\">W<\/a>&nbsp;<br><a href=\"..\/allclasses-index.html\">All&nbsp;Classes<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/allpackages-index.html\">All&nbsp;Packages<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/constant-values.html\">Constant&nbsp;Field&nbsp;Values<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/serialized-form.html\">Serialized&nbsp;Form<\/a><\/main>\n+<\/div>\n+<\/div>\n+<\/body>\n+<\/html>\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/doc\/index-files\/index-11.html","additions":78,"deletions":0,"binary":false,"changes":78,"status":"added"},{"patch":"@@ -0,0 +1,82 @@\n+<!DOCTYPE HTML>\n+<html lang=\"en\">\n+<head>\n+<!-- Generated by javadoc (17) on Wed Apr 14 13:12:12 CEST 2021 -->\n+<title>N-Index<\/title>\n+<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n+<meta http-equiv=\"Content-Type\" content=\"text\/html; charset=utf-8\">\n+<meta name=\"dc.created\" content=\"2021-04-14\">\n+<meta name=\"description\" content=\"index: N\">\n+<meta name=\"generator\" content=\"javadoc\/IndexWriter\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/stylesheet.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/script-dir\/jquery-ui.min.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/jquery-ui.overrides.css\" title=\"Style\">\n+<script type=\"text\/javascript\" src=\"..\/script.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/script-dir\/jquery-3.5.1.min.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/script-dir\/jquery-ui.min.js\"><\/script>\n+<\/head>\n+<body class=\"index-page\">\n+<script type=\"text\/javascript\">var pathtoroot = \"..\/\";\n+loadScripts(document, 'script');<\/script>\n+<noscript>\n+<div>JavaScript is disabled on your browser.<\/div>\n+<\/noscript>\n+<div class=\"flex-box\">\n+<header role=\"banner\" class=\"flex-header\">\n+<nav role=\"navigation\">\n+<!-- ========= START OF TOP NAVBAR ======= -->\n+<div class=\"top-nav\" id=\"navbar-top\">\n+<div class=\"skip-nav\"><a href=\"#skip-navbar-top\" title=\"Skip navigation links\">Skip navigation links<\/a><\/div>\n+<ul id=\"navbar-top-firstrow\" class=\"nav-list\" title=\"Navigation\">\n+<li><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/package-summary.html\">Package<\/a><\/li>\n+<li>Class<\/li>\n+<li><a href=\"..\/overview-tree.html\">Tree<\/a><\/li>\n+<li class=\"nav-bar-cell1-rev\">Index<\/li>\n+<li><a href=\"..\/help-doc.html\">Help<\/a><\/li>\n+<\/ul>\n+<\/div>\n+<div class=\"sub-nav\">\n+<div class=\"nav-list-search\"><label for=\"search\">SEARCH:<\/label>\n+<input type=\"text\" id=\"search\" value=\"search\" disabled=\"disabled\">\n+<input type=\"reset\" id=\"reset\" value=\"reset\" disabled=\"disabled\">\n+<\/div>\n+<\/div>\n+<!-- ========= END OF TOP NAVBAR ========= -->\n+<span class=\"skip-nav\" id=\"skip-navbar-top\"><\/span><\/nav>\n+<\/header>\n+<div class=\"flex-content\">\n+<main role=\"main\">\n+<div class=\"header\">\n+<h1>Index<\/h1>\n+<\/div>\n+<a href=\"index-1.html\">A<\/a>&nbsp;<a href=\"index-2.html\">B<\/a>&nbsp;<a href=\"index-3.html\">C<\/a>&nbsp;<a href=\"index-4.html\">D<\/a>&nbsp;<a href=\"index-5.html\">E<\/a>&nbsp;<a href=\"index-6.html\">F<\/a>&nbsp;<a href=\"index-7.html\">G<\/a>&nbsp;<a href=\"index-8.html\">I<\/a>&nbsp;<a href=\"index-9.html\">J<\/a>&nbsp;<a href=\"index-10.html\">L<\/a>&nbsp;<a href=\"index-11.html\">M<\/a>&nbsp;<a href=\"index-12.html\">N<\/a>&nbsp;<a href=\"index-13.html\">P<\/a>&nbsp;<a href=\"index-14.html\">R<\/a>&nbsp;<a href=\"index-15.html\">S<\/a>&nbsp;<a href=\"index-16.html\">T<\/a>&nbsp;<a href=\"index-17.html\">U<\/a>&nbsp;<a href=\"index-18.html\">V<\/a>&nbsp;<a href=\"index-19.html\">W<\/a>&nbsp;<br><a href=\"..\/allclasses-index.html\">All&nbsp;Classes<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/allpackages-index.html\">All&nbsp;Packages<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/constant-values.html\">Constant&nbsp;Field&nbsp;Values<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/serialized-form.html\">Serialized&nbsp;Form<\/a>\n+<h2 class=\"title\" id=\"I:N\">N<\/h2>\n+<dl class=\"index\">\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/RunMode.html#NORMAL\" class=\"member-name-link\">NORMAL<\/a> - Enum constant in enum class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/RunMode.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">RunMode<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Default mode: First warm up the run method (if a warm-up is done), then compile the associated <a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Test<\/code><\/a>\n+ method and finally invoke the run method once more.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/NoTestsRunException.html\" class=\"type-name-link\" title=\"class in jdk.test.lib.hotspot.ir_framework\">NoTestsRunException<\/a> - Exception in <a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/package-summary.html\">jdk.test.lib.hotspot.ir_framework<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Exception that is thrown by the test VM if no tests are run as a result of specifying <code>-DTest<\/code> and\/or\n+ <code>-DExclude<\/code> defining an empty set with the used test VM flags.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#NULL_ASSERT_TRAP\" class=\"member-name-link\">NULL_ASSERT_TRAP<\/a> - Static variable in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">IRNode<\/a><\/dt>\n+<dd>&nbsp;<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#NULL_CHECK_TRAP\" class=\"member-name-link\">NULL_CHECK_TRAP<\/a> - Static variable in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">IRNode<\/a><\/dt>\n+<dd>&nbsp;<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/Argument.html#NUMBER_42\" class=\"member-name-link\">NUMBER_42<\/a> - Enum constant in enum class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/Argument.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">Argument<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Provides the number 42 for any primitive number type.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/Argument.html#NUMBER_MINUS_42\" class=\"member-name-link\">NUMBER_MINUS_42<\/a> - Enum constant in enum class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/Argument.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">Argument<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Provides the number -42 for any primitive number type.<\/div>\n+<\/dd>\n+<\/dl>\n+<a href=\"index-1.html\">A<\/a>&nbsp;<a href=\"index-2.html\">B<\/a>&nbsp;<a href=\"index-3.html\">C<\/a>&nbsp;<a href=\"index-4.html\">D<\/a>&nbsp;<a href=\"index-5.html\">E<\/a>&nbsp;<a href=\"index-6.html\">F<\/a>&nbsp;<a href=\"index-7.html\">G<\/a>&nbsp;<a href=\"index-8.html\">I<\/a>&nbsp;<a href=\"index-9.html\">J<\/a>&nbsp;<a href=\"index-10.html\">L<\/a>&nbsp;<a href=\"index-11.html\">M<\/a>&nbsp;<a href=\"index-12.html\">N<\/a>&nbsp;<a href=\"index-13.html\">P<\/a>&nbsp;<a href=\"index-14.html\">R<\/a>&nbsp;<a href=\"index-15.html\">S<\/a>&nbsp;<a href=\"index-16.html\">T<\/a>&nbsp;<a href=\"index-17.html\">U<\/a>&nbsp;<a href=\"index-18.html\">V<\/a>&nbsp;<a href=\"index-19.html\">W<\/a>&nbsp;<br><a href=\"..\/allclasses-index.html\">All&nbsp;Classes<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/allpackages-index.html\">All&nbsp;Packages<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/constant-values.html\">Constant&nbsp;Field&nbsp;Values<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/serialized-form.html\">Serialized&nbsp;Form<\/a><\/main>\n+<\/div>\n+<\/div>\n+<\/body>\n+<\/html>\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/doc\/index-files\/index-12.html","additions":82,"deletions":0,"binary":false,"changes":82,"status":"added"},{"patch":"@@ -0,0 +1,66 @@\n+<!DOCTYPE HTML>\n+<html lang=\"en\">\n+<head>\n+<!-- Generated by javadoc (17) on Wed Apr 14 13:12:12 CEST 2021 -->\n+<title>P-Index<\/title>\n+<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n+<meta http-equiv=\"Content-Type\" content=\"text\/html; charset=utf-8\">\n+<meta name=\"dc.created\" content=\"2021-04-14\">\n+<meta name=\"description\" content=\"index: P\">\n+<meta name=\"generator\" content=\"javadoc\/IndexWriter\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/stylesheet.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/script-dir\/jquery-ui.min.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/jquery-ui.overrides.css\" title=\"Style\">\n+<script type=\"text\/javascript\" src=\"..\/script.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/script-dir\/jquery-3.5.1.min.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/script-dir\/jquery-ui.min.js\"><\/script>\n+<\/head>\n+<body class=\"index-page\">\n+<script type=\"text\/javascript\">var pathtoroot = \"..\/\";\n+loadScripts(document, 'script');<\/script>\n+<noscript>\n+<div>JavaScript is disabled on your browser.<\/div>\n+<\/noscript>\n+<div class=\"flex-box\">\n+<header role=\"banner\" class=\"flex-header\">\n+<nav role=\"navigation\">\n+<!-- ========= START OF TOP NAVBAR ======= -->\n+<div class=\"top-nav\" id=\"navbar-top\">\n+<div class=\"skip-nav\"><a href=\"#skip-navbar-top\" title=\"Skip navigation links\">Skip navigation links<\/a><\/div>\n+<ul id=\"navbar-top-firstrow\" class=\"nav-list\" title=\"Navigation\">\n+<li><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/package-summary.html\">Package<\/a><\/li>\n+<li>Class<\/li>\n+<li><a href=\"..\/overview-tree.html\">Tree<\/a><\/li>\n+<li class=\"nav-bar-cell1-rev\">Index<\/li>\n+<li><a href=\"..\/help-doc.html\">Help<\/a><\/li>\n+<\/ul>\n+<\/div>\n+<div class=\"sub-nav\">\n+<div class=\"nav-list-search\"><label for=\"search\">SEARCH:<\/label>\n+<input type=\"text\" id=\"search\" value=\"search\" disabled=\"disabled\">\n+<input type=\"reset\" id=\"reset\" value=\"reset\" disabled=\"disabled\">\n+<\/div>\n+<\/div>\n+<!-- ========= END OF TOP NAVBAR ========= -->\n+<span class=\"skip-nav\" id=\"skip-navbar-top\"><\/span><\/nav>\n+<\/header>\n+<div class=\"flex-content\">\n+<main role=\"main\">\n+<div class=\"header\">\n+<h1>Index<\/h1>\n+<\/div>\n+<a href=\"index-1.html\">A<\/a>&nbsp;<a href=\"index-2.html\">B<\/a>&nbsp;<a href=\"index-3.html\">C<\/a>&nbsp;<a href=\"index-4.html\">D<\/a>&nbsp;<a href=\"index-5.html\">E<\/a>&nbsp;<a href=\"index-6.html\">F<\/a>&nbsp;<a href=\"index-7.html\">G<\/a>&nbsp;<a href=\"index-8.html\">I<\/a>&nbsp;<a href=\"index-9.html\">J<\/a>&nbsp;<a href=\"index-10.html\">L<\/a>&nbsp;<a href=\"index-11.html\">M<\/a>&nbsp;<a href=\"index-12.html\">N<\/a>&nbsp;<a href=\"index-13.html\">P<\/a>&nbsp;<a href=\"index-14.html\">R<\/a>&nbsp;<a href=\"index-15.html\">S<\/a>&nbsp;<a href=\"index-16.html\">T<\/a>&nbsp;<a href=\"index-17.html\">U<\/a>&nbsp;<a href=\"index-18.html\">V<\/a>&nbsp;<a href=\"index-19.html\">W<\/a>&nbsp;<br><a href=\"..\/allclasses-index.html\">All&nbsp;Classes<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/allpackages-index.html\">All&nbsp;Packages<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/constant-values.html\">Constant&nbsp;Field&nbsp;Values<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/serialized-form.html\">Serialized&nbsp;Form<\/a>\n+<h2 class=\"title\" id=\"I:P\">P<\/h2>\n+<dl class=\"index\">\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/TestFrameworkExecution.html#PerMethodTrapLimit\" class=\"member-name-link\">PerMethodTrapLimit<\/a> - Static variable in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/TestFrameworkExecution.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestFrameworkExecution<\/a><\/dt>\n+<dd>&nbsp;<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#PREDICATE_TRAP\" class=\"member-name-link\">PREDICATE_TRAP<\/a> - Static variable in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">IRNode<\/a><\/dt>\n+<dd>&nbsp;<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/TestFrameworkExecution.html#ProfileInterpreter\" class=\"member-name-link\">ProfileInterpreter<\/a> - Static variable in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/TestFrameworkExecution.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestFrameworkExecution<\/a><\/dt>\n+<dd>&nbsp;<\/dd>\n+<\/dl>\n+<a href=\"index-1.html\">A<\/a>&nbsp;<a href=\"index-2.html\">B<\/a>&nbsp;<a href=\"index-3.html\">C<\/a>&nbsp;<a href=\"index-4.html\">D<\/a>&nbsp;<a href=\"index-5.html\">E<\/a>&nbsp;<a href=\"index-6.html\">F<\/a>&nbsp;<a href=\"index-7.html\">G<\/a>&nbsp;<a href=\"index-8.html\">I<\/a>&nbsp;<a href=\"index-9.html\">J<\/a>&nbsp;<a href=\"index-10.html\">L<\/a>&nbsp;<a href=\"index-11.html\">M<\/a>&nbsp;<a href=\"index-12.html\">N<\/a>&nbsp;<a href=\"index-13.html\">P<\/a>&nbsp;<a href=\"index-14.html\">R<\/a>&nbsp;<a href=\"index-15.html\">S<\/a>&nbsp;<a href=\"index-16.html\">T<\/a>&nbsp;<a href=\"index-17.html\">U<\/a>&nbsp;<a href=\"index-18.html\">V<\/a>&nbsp;<a href=\"index-19.html\">W<\/a>&nbsp;<br><a href=\"..\/allclasses-index.html\">All&nbsp;Classes<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/allpackages-index.html\">All&nbsp;Packages<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/constant-values.html\">Constant&nbsp;Field&nbsp;Values<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/serialized-form.html\">Serialized&nbsp;Form<\/a><\/main>\n+<\/div>\n+<\/div>\n+<\/body>\n+<\/html>\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/doc\/index-files\/index-13.html","additions":66,"deletions":0,"binary":false,"changes":66,"status":"added"},{"patch":"@@ -0,0 +1,114 @@\n+<!DOCTYPE HTML>\n+<html lang=\"en\">\n+<head>\n+<!-- Generated by javadoc (17) on Wed Apr 14 13:12:12 CEST 2021 -->\n+<title>R-Index<\/title>\n+<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n+<meta http-equiv=\"Content-Type\" content=\"text\/html; charset=utf-8\">\n+<meta name=\"dc.created\" content=\"2021-04-14\">\n+<meta name=\"description\" content=\"index: R\">\n+<meta name=\"generator\" content=\"javadoc\/IndexWriter\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/stylesheet.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/script-dir\/jquery-ui.min.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/jquery-ui.overrides.css\" title=\"Style\">\n+<script type=\"text\/javascript\" src=\"..\/script.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/script-dir\/jquery-3.5.1.min.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/script-dir\/jquery-ui.min.js\"><\/script>\n+<\/head>\n+<body class=\"index-page\">\n+<script type=\"text\/javascript\">var pathtoroot = \"..\/\";\n+loadScripts(document, 'script');<\/script>\n+<noscript>\n+<div>JavaScript is disabled on your browser.<\/div>\n+<\/noscript>\n+<div class=\"flex-box\">\n+<header role=\"banner\" class=\"flex-header\">\n+<nav role=\"navigation\">\n+<!-- ========= START OF TOP NAVBAR ======= -->\n+<div class=\"top-nav\" id=\"navbar-top\">\n+<div class=\"skip-nav\"><a href=\"#skip-navbar-top\" title=\"Skip navigation links\">Skip navigation links<\/a><\/div>\n+<ul id=\"navbar-top-firstrow\" class=\"nav-list\" title=\"Navigation\">\n+<li><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/package-summary.html\">Package<\/a><\/li>\n+<li>Class<\/li>\n+<li><a href=\"..\/overview-tree.html\">Tree<\/a><\/li>\n+<li class=\"nav-bar-cell1-rev\">Index<\/li>\n+<li><a href=\"..\/help-doc.html\">Help<\/a><\/li>\n+<\/ul>\n+<\/div>\n+<div class=\"sub-nav\">\n+<div class=\"nav-list-search\"><label for=\"search\">SEARCH:<\/label>\n+<input type=\"text\" id=\"search\" value=\"search\" disabled=\"disabled\">\n+<input type=\"reset\" id=\"reset\" value=\"reset\" disabled=\"disabled\">\n+<\/div>\n+<\/div>\n+<!-- ========= END OF TOP NAVBAR ========= -->\n+<span class=\"skip-nav\" id=\"skip-navbar-top\"><\/span><\/nav>\n+<\/header>\n+<div class=\"flex-content\">\n+<main role=\"main\">\n+<div class=\"header\">\n+<h1>Index<\/h1>\n+<\/div>\n+<a href=\"index-1.html\">A<\/a>&nbsp;<a href=\"index-2.html\">B<\/a>&nbsp;<a href=\"index-3.html\">C<\/a>&nbsp;<a href=\"index-4.html\">D<\/a>&nbsp;<a href=\"index-5.html\">E<\/a>&nbsp;<a href=\"index-6.html\">F<\/a>&nbsp;<a href=\"index-7.html\">G<\/a>&nbsp;<a href=\"index-8.html\">I<\/a>&nbsp;<a href=\"index-9.html\">J<\/a>&nbsp;<a href=\"index-10.html\">L<\/a>&nbsp;<a href=\"index-11.html\">M<\/a>&nbsp;<a href=\"index-12.html\">N<\/a>&nbsp;<a href=\"index-13.html\">P<\/a>&nbsp;<a href=\"index-14.html\">R<\/a>&nbsp;<a href=\"index-15.html\">S<\/a>&nbsp;<a href=\"index-16.html\">T<\/a>&nbsp;<a href=\"index-17.html\">U<\/a>&nbsp;<a href=\"index-18.html\">V<\/a>&nbsp;<a href=\"index-19.html\">W<\/a>&nbsp;<br><a href=\"..\/allclasses-index.html\">All&nbsp;Classes<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/allpackages-index.html\">All&nbsp;Packages<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/constant-values.html\">Constant&nbsp;Field&nbsp;Values<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/serialized-form.html\">Serialized&nbsp;Form<\/a>\n+<h2 class=\"title\" id=\"I:R\">R<\/h2>\n+<dl class=\"index\">\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/Argument.html#RANDOM_EACH\" class=\"member-name-link\">RANDOM_EACH<\/a> - Enum constant in enum class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/Argument.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">Argument<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Provides a different random primitive value on each test invocation.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/Argument.html#RANDOM_ONCE\" class=\"member-name-link\">RANDOM_ONCE<\/a> - Enum constant in enum class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/Argument.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">Argument<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Provides a random primitive value on the first test invocation and reuses the same value for all invocation of the test.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#RANGE_CHECK_TRAP\" class=\"member-name-link\">RANGE_CHECK_TRAP<\/a> - Static variable in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">IRNode<\/a><\/dt>\n+<dd>&nbsp;<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/TestFramework.html#run()\" class=\"member-name-link\">run()<\/a> - Static method in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/TestFramework.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestFramework<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Tests the class from which this method was invoked from.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/TestFramework.html#run(java.lang.Class)\" class=\"member-name-link\">run(Class&lt;?&gt;)<\/a> - Static method in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/TestFramework.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestFramework<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Tests <code>testClass<\/code>.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/Run.html\" class=\"type-name-link\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\">Run<\/a> - Annotation Interface in <a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/package-summary.html\">jdk.test.lib.hotspot.ir_framework<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Annotation for a run method of a <b>custom run test<\/b>.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/RunInfo.html\" class=\"type-name-link\" title=\"class in jdk.test.lib.hotspot.ir_framework\">RunInfo<\/a> - Class in <a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/package-summary.html\">jdk.test.lib.hotspot.ir_framework<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Test info class which provides some useful utility methods and information about a <b>custom run test<\/b>.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/RunMode.html\" class=\"type-name-link\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">RunMode<\/a> - Enum Class in <a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/package-summary.html\">jdk.test.lib.hotspot.ir_framework<\/a><\/dt>\n+<dd>\n+<div class=\"block\">The run mode for a <b>custom run test<\/b> specified in <a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/Run.html#mode()\"><code>Run.mode()<\/code><\/a>.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/TestFramework.html#runWithFlags(java.lang.Class,java.lang.String...)\" class=\"member-name-link\">runWithFlags(Class&lt;?&gt;, String...)<\/a> - Static method in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/TestFramework.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestFramework<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Tests <code>testClass<\/code>.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/TestFramework.html#runWithFlags(java.lang.String...)\" class=\"member-name-link\">runWithFlags(String...)<\/a> - Static method in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/TestFramework.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestFramework<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Tests the class from which this method was invoked from.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/TestFramework.html#runWithHelperClasses(java.lang.Class,java.lang.Class...)\" class=\"member-name-link\">runWithHelperClasses(Class&lt;?&gt;, Class&lt;?&gt;...)<\/a> - Static method in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/TestFramework.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestFramework<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Tests <code>testClass<\/code> which uses <code>helperClasses<\/code> that can specify additional compile command annotations\n+ (<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/ForceCompile.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@ForceCompile<\/code><\/a>, <a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/DontCompile.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@DontCompile<\/code><\/a>, <a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/ForceInline.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@ForceInline<\/code><\/a>,\n+ <a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/DontInline.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@DontInline<\/code><\/a>) to be applied while testing <code>testClass<\/code> (also see description of\n+ <a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/TestFramework.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\"><code>TestFramework<\/code><\/a>).<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/TestFramework.html#runWithScenarios(java.lang.Class,jdk.test.lib.hotspot.ir_framework.Scenario...)\" class=\"member-name-link\">runWithScenarios(Class&lt;?&gt;, Scenario...)<\/a> - Static method in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/TestFramework.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestFramework<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Tests <code>testClass<\/code> A test VM is called for each scenario in <code>scenarios<\/code> by using the specified flags\n+ in the scenario.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/TestFramework.html#runWithScenarios(jdk.test.lib.hotspot.ir_framework.Scenario...)\" class=\"member-name-link\">runWithScenarios(Scenario...)<\/a> - Static method in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/TestFramework.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestFramework<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Tests the class from which this method was invoked from.<\/div>\n+<\/dd>\n+<\/dl>\n+<a href=\"index-1.html\">A<\/a>&nbsp;<a href=\"index-2.html\">B<\/a>&nbsp;<a href=\"index-3.html\">C<\/a>&nbsp;<a href=\"index-4.html\">D<\/a>&nbsp;<a href=\"index-5.html\">E<\/a>&nbsp;<a href=\"index-6.html\">F<\/a>&nbsp;<a href=\"index-7.html\">G<\/a>&nbsp;<a href=\"index-8.html\">I<\/a>&nbsp;<a href=\"index-9.html\">J<\/a>&nbsp;<a href=\"index-10.html\">L<\/a>&nbsp;<a href=\"index-11.html\">M<\/a>&nbsp;<a href=\"index-12.html\">N<\/a>&nbsp;<a href=\"index-13.html\">P<\/a>&nbsp;<a href=\"index-14.html\">R<\/a>&nbsp;<a href=\"index-15.html\">S<\/a>&nbsp;<a href=\"index-16.html\">T<\/a>&nbsp;<a href=\"index-17.html\">U<\/a>&nbsp;<a href=\"index-18.html\">V<\/a>&nbsp;<a href=\"index-19.html\">W<\/a>&nbsp;<br><a href=\"..\/allclasses-index.html\">All&nbsp;Classes<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/allpackages-index.html\">All&nbsp;Packages<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/constant-values.html\">Constant&nbsp;Field&nbsp;Values<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/serialized-form.html\">Serialized&nbsp;Form<\/a><\/main>\n+<\/div>\n+<\/div>\n+<\/body>\n+<\/html>\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/doc\/index-files\/index-14.html","additions":114,"deletions":0,"binary":false,"changes":114,"status":"added"},{"patch":"@@ -0,0 +1,128 @@\n+<!DOCTYPE HTML>\n+<html lang=\"en\">\n+<head>\n+<!-- Generated by javadoc (17) on Wed Apr 14 13:12:12 CEST 2021 -->\n+<title>S-Index<\/title>\n+<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n+<meta http-equiv=\"Content-Type\" content=\"text\/html; charset=utf-8\">\n+<meta name=\"dc.created\" content=\"2021-04-14\">\n+<meta name=\"description\" content=\"index: S\">\n+<meta name=\"generator\" content=\"javadoc\/IndexWriter\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/stylesheet.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/script-dir\/jquery-ui.min.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/jquery-ui.overrides.css\" title=\"Style\">\n+<script type=\"text\/javascript\" src=\"..\/script.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/script-dir\/jquery-3.5.1.min.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/script-dir\/jquery-ui.min.js\"><\/script>\n+<\/head>\n+<body class=\"index-page\">\n+<script type=\"text\/javascript\">var pathtoroot = \"..\/\";\n+loadScripts(document, 'script');<\/script>\n+<noscript>\n+<div>JavaScript is disabled on your browser.<\/div>\n+<\/noscript>\n+<div class=\"flex-box\">\n+<header role=\"banner\" class=\"flex-header\">\n+<nav role=\"navigation\">\n+<!-- ========= START OF TOP NAVBAR ======= -->\n+<div class=\"top-nav\" id=\"navbar-top\">\n+<div class=\"skip-nav\"><a href=\"#skip-navbar-top\" title=\"Skip navigation links\">Skip navigation links<\/a><\/div>\n+<ul id=\"navbar-top-firstrow\" class=\"nav-list\" title=\"Navigation\">\n+<li><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/package-summary.html\">Package<\/a><\/li>\n+<li>Class<\/li>\n+<li><a href=\"..\/overview-tree.html\">Tree<\/a><\/li>\n+<li class=\"nav-bar-cell1-rev\">Index<\/li>\n+<li><a href=\"..\/help-doc.html\">Help<\/a><\/li>\n+<\/ul>\n+<\/div>\n+<div class=\"sub-nav\">\n+<div class=\"nav-list-search\"><label for=\"search\">SEARCH:<\/label>\n+<input type=\"text\" id=\"search\" value=\"search\" disabled=\"disabled\">\n+<input type=\"reset\" id=\"reset\" value=\"reset\" disabled=\"disabled\">\n+<\/div>\n+<\/div>\n+<!-- ========= END OF TOP NAVBAR ========= -->\n+<span class=\"skip-nav\" id=\"skip-navbar-top\"><\/span><\/nav>\n+<\/header>\n+<div class=\"flex-content\">\n+<main role=\"main\">\n+<div class=\"header\">\n+<h1>Index<\/h1>\n+<\/div>\n+<a href=\"index-1.html\">A<\/a>&nbsp;<a href=\"index-2.html\">B<\/a>&nbsp;<a href=\"index-3.html\">C<\/a>&nbsp;<a href=\"index-4.html\">D<\/a>&nbsp;<a href=\"index-5.html\">E<\/a>&nbsp;<a href=\"index-6.html\">F<\/a>&nbsp;<a href=\"index-7.html\">G<\/a>&nbsp;<a href=\"index-8.html\">I<\/a>&nbsp;<a href=\"index-9.html\">J<\/a>&nbsp;<a href=\"index-10.html\">L<\/a>&nbsp;<a href=\"index-11.html\">M<\/a>&nbsp;<a href=\"index-12.html\">N<\/a>&nbsp;<a href=\"index-13.html\">P<\/a>&nbsp;<a href=\"index-14.html\">R<\/a>&nbsp;<a href=\"index-15.html\">S<\/a>&nbsp;<a href=\"index-16.html\">T<\/a>&nbsp;<a href=\"index-17.html\">U<\/a>&nbsp;<a href=\"index-18.html\">V<\/a>&nbsp;<a href=\"index-19.html\">W<\/a>&nbsp;<br><a href=\"..\/allclasses-index.html\">All&nbsp;Classes<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/allpackages-index.html\">All&nbsp;Packages<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/constant-values.html\">Constant&nbsp;Field&nbsp;Values<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/serialized-form.html\">Serialized&nbsp;Form<\/a>\n+<h2 class=\"title\" id=\"I:S\">S<\/h2>\n+<dl class=\"index\">\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/Scenario.html\" class=\"type-name-link\" title=\"class in jdk.test.lib.hotspot.ir_framework\">Scenario<\/a> - Class in <a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/package-summary.html\">jdk.test.lib.hotspot.ir_framework<\/a><\/dt>\n+<dd>\n+<div class=\"block\">This class represents a scenario that can be executed by the <a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/TestFramework.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\"><code>TestFramework<\/code><\/a>.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/Scenario.html#%3Cinit%3E(int,java.lang.String...)\" class=\"member-name-link\">Scenario(int, String...)<\/a> - Constructor for class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/Scenario.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">Scenario<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Create a scenario with <code>index<\/code> that will be run with the additional VM flags specified in <code>flags<\/code>\n+ (or without any if null or parameter not provided).<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#SCOPE_OBJECT\" class=\"member-name-link\">SCOPE_OBJECT<\/a> - Static variable in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">IRNode<\/a><\/dt>\n+<dd>&nbsp;<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/TestFramework.html#setDefaultWarmup(int)\" class=\"member-name-link\">setDefaultWarmup(int)<\/a> - Method in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/TestFramework.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestFramework<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Set a new default warm-up (overriding the framework default of 2000 at\n+ <a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/TestFrameworkExecution.html#WARMUP_ITERATIONS\"><code>TestFrameworkExecution.WARMUP_ITERATIONS<\/code><\/a>) to be applied for all tests that do not specify an explicit\n+ warm-up with <a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/Warmup.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@Warmup<\/code><\/a>.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/CompLevel.html#SKIP\" class=\"member-name-link\">SKIP<\/a> - Enum constant in enum class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/CompLevel.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">CompLevel<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Can only be used at <a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/Test.html#compLevel()\"><code>Test.compLevel()<\/code><\/a>.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/RunMode.html#STANDALONE\" class=\"member-name-link\">STANDALONE<\/a> - Enum constant in enum class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/RunMode.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">RunMode<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Standalone mode: There is no warm-up and no compilation done by the framework.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/TestFramework.html#start()\" class=\"member-name-link\">start()<\/a> - Method in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/TestFramework.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestFramework<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Start the testing of the implicitly (by <a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/TestFramework.html#%3Cinit%3E()\"><code>TestFramework()<\/code><\/a>) or explicitly (by <a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/TestFramework.html#%3Cinit%3E(java.lang.Class)\"><code>TestFramework(Class)<\/code><\/a>)\n+ set test class.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#STORE\" class=\"member-name-link\">STORE<\/a> - Static variable in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">IRNode<\/a><\/dt>\n+<dd>&nbsp;<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#STORE_B\" class=\"member-name-link\">STORE_B<\/a> - Static variable in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">IRNode<\/a><\/dt>\n+<dd>&nbsp;<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#STORE_B_OF_CLASS\" class=\"member-name-link\">STORE_B_OF_CLASS<\/a> - Static variable in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">IRNode<\/a><\/dt>\n+<dd>&nbsp;<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#STORE_C\" class=\"member-name-link\">STORE_C<\/a> - Static variable in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">IRNode<\/a><\/dt>\n+<dd>&nbsp;<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#STORE_C_OF_CLASS\" class=\"member-name-link\">STORE_C_OF_CLASS<\/a> - Static variable in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">IRNode<\/a><\/dt>\n+<dd>&nbsp;<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#STORE_D\" class=\"member-name-link\">STORE_D<\/a> - Static variable in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">IRNode<\/a><\/dt>\n+<dd>&nbsp;<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#STORE_D_OF_CLASS\" class=\"member-name-link\">STORE_D_OF_CLASS<\/a> - Static variable in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">IRNode<\/a><\/dt>\n+<dd>&nbsp;<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#STORE_F\" class=\"member-name-link\">STORE_F<\/a> - Static variable in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">IRNode<\/a><\/dt>\n+<dd>&nbsp;<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#STORE_F_OF_CLASS\" class=\"member-name-link\">STORE_F_OF_CLASS<\/a> - Static variable in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">IRNode<\/a><\/dt>\n+<dd>&nbsp;<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#STORE_I\" class=\"member-name-link\">STORE_I<\/a> - Static variable in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">IRNode<\/a><\/dt>\n+<dd>&nbsp;<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#STORE_I_OF_CLASS\" class=\"member-name-link\">STORE_I_OF_CLASS<\/a> - Static variable in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">IRNode<\/a><\/dt>\n+<dd>&nbsp;<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#STORE_L\" class=\"member-name-link\">STORE_L<\/a> - Static variable in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">IRNode<\/a><\/dt>\n+<dd>&nbsp;<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#STORE_L_OF_CLASS\" class=\"member-name-link\">STORE_L_OF_CLASS<\/a> - Static variable in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">IRNode<\/a><\/dt>\n+<dd>&nbsp;<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#STORE_N\" class=\"member-name-link\">STORE_N<\/a> - Static variable in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">IRNode<\/a><\/dt>\n+<dd>&nbsp;<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#STORE_N_OF_CLASS\" class=\"member-name-link\">STORE_N_OF_CLASS<\/a> - Static variable in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">IRNode<\/a><\/dt>\n+<dd>&nbsp;<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#STORE_OF_CLASS\" class=\"member-name-link\">STORE_OF_CLASS<\/a> - Static variable in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">IRNode<\/a><\/dt>\n+<dd>&nbsp;<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#STORE_OF_FIELD\" class=\"member-name-link\">STORE_OF_FIELD<\/a> - Static variable in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">IRNode<\/a><\/dt>\n+<dd>&nbsp;<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#STORE_P\" class=\"member-name-link\">STORE_P<\/a> - Static variable in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">IRNode<\/a><\/dt>\n+<dd>&nbsp;<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#STORE_P_OF_CLASS\" class=\"member-name-link\">STORE_P_OF_CLASS<\/a> - Static variable in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">IRNode<\/a><\/dt>\n+<dd>&nbsp;<\/dd>\n+<\/dl>\n+<a href=\"index-1.html\">A<\/a>&nbsp;<a href=\"index-2.html\">B<\/a>&nbsp;<a href=\"index-3.html\">C<\/a>&nbsp;<a href=\"index-4.html\">D<\/a>&nbsp;<a href=\"index-5.html\">E<\/a>&nbsp;<a href=\"index-6.html\">F<\/a>&nbsp;<a href=\"index-7.html\">G<\/a>&nbsp;<a href=\"index-8.html\">I<\/a>&nbsp;<a href=\"index-9.html\">J<\/a>&nbsp;<a href=\"index-10.html\">L<\/a>&nbsp;<a href=\"index-11.html\">M<\/a>&nbsp;<a href=\"index-12.html\">N<\/a>&nbsp;<a href=\"index-13.html\">P<\/a>&nbsp;<a href=\"index-14.html\">R<\/a>&nbsp;<a href=\"index-15.html\">S<\/a>&nbsp;<a href=\"index-16.html\">T<\/a>&nbsp;<a href=\"index-17.html\">U<\/a>&nbsp;<a href=\"index-18.html\">V<\/a>&nbsp;<a href=\"index-19.html\">W<\/a>&nbsp;<br><a href=\"..\/allclasses-index.html\">All&nbsp;Classes<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/allpackages-index.html\">All&nbsp;Packages<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/constant-values.html\">Constant&nbsp;Field&nbsp;Values<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/serialized-form.html\">Serialized&nbsp;Form<\/a><\/main>\n+<\/div>\n+<\/div>\n+<\/body>\n+<\/html>\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/doc\/index-files\/index-15.html","additions":128,"deletions":0,"binary":false,"changes":128,"status":"added"},{"patch":"@@ -0,0 +1,122 @@\n+<!DOCTYPE HTML>\n+<html lang=\"en\">\n+<head>\n+<!-- Generated by javadoc (17) on Wed Apr 14 13:12:12 CEST 2021 -->\n+<title>T-Index<\/title>\n+<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n+<meta http-equiv=\"Content-Type\" content=\"text\/html; charset=utf-8\">\n+<meta name=\"dc.created\" content=\"2021-04-14\">\n+<meta name=\"description\" content=\"index: T\">\n+<meta name=\"generator\" content=\"javadoc\/IndexWriter\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/stylesheet.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/script-dir\/jquery-ui.min.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/jquery-ui.overrides.css\" title=\"Style\">\n+<script type=\"text\/javascript\" src=\"..\/script.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/script-dir\/jquery-3.5.1.min.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/script-dir\/jquery-ui.min.js\"><\/script>\n+<\/head>\n+<body class=\"index-page\">\n+<script type=\"text\/javascript\">var pathtoroot = \"..\/\";\n+loadScripts(document, 'script');<\/script>\n+<noscript>\n+<div>JavaScript is disabled on your browser.<\/div>\n+<\/noscript>\n+<div class=\"flex-box\">\n+<header role=\"banner\" class=\"flex-header\">\n+<nav role=\"navigation\">\n+<!-- ========= START OF TOP NAVBAR ======= -->\n+<div class=\"top-nav\" id=\"navbar-top\">\n+<div class=\"skip-nav\"><a href=\"#skip-navbar-top\" title=\"Skip navigation links\">Skip navigation links<\/a><\/div>\n+<ul id=\"navbar-top-firstrow\" class=\"nav-list\" title=\"Navigation\">\n+<li><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/package-summary.html\">Package<\/a><\/li>\n+<li>Class<\/li>\n+<li><a href=\"..\/overview-tree.html\">Tree<\/a><\/li>\n+<li class=\"nav-bar-cell1-rev\">Index<\/li>\n+<li><a href=\"..\/help-doc.html\">Help<\/a><\/li>\n+<\/ul>\n+<\/div>\n+<div class=\"sub-nav\">\n+<div class=\"nav-list-search\"><label for=\"search\">SEARCH:<\/label>\n+<input type=\"text\" id=\"search\" value=\"search\" disabled=\"disabled\">\n+<input type=\"reset\" id=\"reset\" value=\"reset\" disabled=\"disabled\">\n+<\/div>\n+<\/div>\n+<!-- ========= END OF TOP NAVBAR ========= -->\n+<span class=\"skip-nav\" id=\"skip-navbar-top\"><\/span><\/nav>\n+<\/header>\n+<div class=\"flex-content\">\n+<main role=\"main\">\n+<div class=\"header\">\n+<h1>Index<\/h1>\n+<\/div>\n+<a href=\"index-1.html\">A<\/a>&nbsp;<a href=\"index-2.html\">B<\/a>&nbsp;<a href=\"index-3.html\">C<\/a>&nbsp;<a href=\"index-4.html\">D<\/a>&nbsp;<a href=\"index-5.html\">E<\/a>&nbsp;<a href=\"index-6.html\">F<\/a>&nbsp;<a href=\"index-7.html\">G<\/a>&nbsp;<a href=\"index-8.html\">I<\/a>&nbsp;<a href=\"index-9.html\">J<\/a>&nbsp;<a href=\"index-10.html\">L<\/a>&nbsp;<a href=\"index-11.html\">M<\/a>&nbsp;<a href=\"index-12.html\">N<\/a>&nbsp;<a href=\"index-13.html\">P<\/a>&nbsp;<a href=\"index-14.html\">R<\/a>&nbsp;<a href=\"index-15.html\">S<\/a>&nbsp;<a href=\"index-16.html\">T<\/a>&nbsp;<a href=\"index-17.html\">U<\/a>&nbsp;<a href=\"index-18.html\">V<\/a>&nbsp;<a href=\"index-19.html\">W<\/a>&nbsp;<br><a href=\"..\/allclasses-index.html\">All&nbsp;Classes<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/allpackages-index.html\">All&nbsp;Packages<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/constant-values.html\">Constant&nbsp;Field&nbsp;Values<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/serialized-form.html\">Serialized&nbsp;Form<\/a>\n+<h2 class=\"title\" id=\"I:T\">T<\/h2>\n+<dl class=\"index\">\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/Check.html#test()\" class=\"member-name-link\">test()<\/a> - Element in annotation interface jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/Check.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\">Check<\/a><\/dt>\n+<dd>\n+<div class=\"block\">The unique associated <a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Test<\/code><\/a> method for this <code>@Check<\/code> annotated check method.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/Run.html#test()\" class=\"member-name-link\">test()<\/a> - Element in annotation interface jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/Run.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\">Run<\/a><\/dt>\n+<dd>\n+<div class=\"block\">The associated <a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@Test<\/code><\/a> methods (one or more) for for this <code>@Run<\/code> annotated run method.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/Test.html\" class=\"type-name-link\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\">Test<\/a> - Annotation Interface in <a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/package-summary.html\">jdk.test.lib.hotspot.ir_framework<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Annotate all methods in your test class which the framework should test with <code>@Test<\/code>.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/AbstractInfo.html#testClass\" class=\"member-name-link\">testClass<\/a> - Variable in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/AbstractInfo.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">AbstractInfo<\/a><\/dt>\n+<dd>&nbsp;<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/TestFormatException.html\" class=\"type-name-link\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestFormatException<\/a> - Exception in <a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/package-summary.html\">jdk.test.lib.hotspot.ir_framework<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Exception that is thrown if a JTreg test violates the supported format by the test framework.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/TestFramework.html\" class=\"type-name-link\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestFramework<\/a> - Class in <a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/package-summary.html\">jdk.test.lib.hotspot.ir_framework<\/a><\/dt>\n+<dd>\n+<div class=\"block\">This class represents the main entry point to the test framework whose main purpose is to perform regex-based checks on\n+ the C2 IR shape emitted by the VM flags <code>-XX:+PrintIdeal<\/code> and <code>-XX:+PrintOptoAssembly<\/code>.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/TestFramework.html#%3Cinit%3E()\" class=\"member-name-link\">TestFramework()<\/a> - Constructor for class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/TestFramework.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestFramework<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Creates an instance acting as a builder to test the class from which this constructor was invoked from.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/TestFramework.html#%3Cinit%3E(java.lang.Class)\" class=\"member-name-link\">TestFramework(Class&lt;?&gt;)<\/a> - Constructor for class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/TestFramework.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestFramework<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Creates an instance acting as a builder to test <code>testClass<\/code>.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/TestFrameworkException.html\" class=\"type-name-link\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestFrameworkException<\/a> - Exception in <a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/package-summary.html\">jdk.test.lib.hotspot.ir_framework<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Exception that is thrown if there is an internal error in the framework.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/TestFrameworkExecution.html\" class=\"type-name-link\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestFrameworkExecution<\/a> - Class in <a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/package-summary.html\">jdk.test.lib.hotspot.ir_framework<\/a><\/dt>\n+<dd>\n+<div class=\"block\">This class' main method is called from <a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/TestFramework.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\"><code>TestFramework<\/code><\/a> and represents the so-called \"test VM\".<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/TestInfo.html\" class=\"type-name-link\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestInfo<\/a> - Class in <a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/package-summary.html\">jdk.test.lib.hotspot.ir_framework<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Test info class which provides some useful utility methods and information about a <b>checked test<\/b>.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/TestRunException.html\" class=\"type-name-link\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestRunException<\/a> - Exception in <a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/package-summary.html\">jdk.test.lib.hotspot.ir_framework<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Exception that is thrown if the JTreg test throws an exception during the execution of individual tests of the\n+ test class.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/TestVMException.html\" class=\"type-name-link\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestVMException<\/a> - Exception in <a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/package-summary.html\">jdk.test.lib.hotspot.ir_framework<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Exception that is thrown if the test VM has thrown any kind of exception (except for <a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/TestFormatException.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\"><code>TestFormatException<\/code><\/a>).<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/AbstractInfo.html#toggleBoolean()\" class=\"member-name-link\">toggleBoolean()<\/a> - Method in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/AbstractInfo.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">AbstractInfo<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Returns a different boolean each time this method is invoked (switching between <code>false<\/code> and <code>true<\/code>).<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#TRAP\" class=\"member-name-link\">TRAP<\/a> - Static variable in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">IRNode<\/a><\/dt>\n+<dd>&nbsp;<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/Argument.html#TRUE\" class=\"member-name-link\">TRUE<\/a> - Enum constant in enum class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/Argument.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">Argument<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Provides the boolean value true.<\/div>\n+<\/dd>\n+<\/dl>\n+<a href=\"index-1.html\">A<\/a>&nbsp;<a href=\"index-2.html\">B<\/a>&nbsp;<a href=\"index-3.html\">C<\/a>&nbsp;<a href=\"index-4.html\">D<\/a>&nbsp;<a href=\"index-5.html\">E<\/a>&nbsp;<a href=\"index-6.html\">F<\/a>&nbsp;<a href=\"index-7.html\">G<\/a>&nbsp;<a href=\"index-8.html\">I<\/a>&nbsp;<a href=\"index-9.html\">J<\/a>&nbsp;<a href=\"index-10.html\">L<\/a>&nbsp;<a href=\"index-11.html\">M<\/a>&nbsp;<a href=\"index-12.html\">N<\/a>&nbsp;<a href=\"index-13.html\">P<\/a>&nbsp;<a href=\"index-14.html\">R<\/a>&nbsp;<a href=\"index-15.html\">S<\/a>&nbsp;<a href=\"index-16.html\">T<\/a>&nbsp;<a href=\"index-17.html\">U<\/a>&nbsp;<a href=\"index-18.html\">V<\/a>&nbsp;<a href=\"index-19.html\">W<\/a>&nbsp;<br><a href=\"..\/allclasses-index.html\">All&nbsp;Classes<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/allpackages-index.html\">All&nbsp;Packages<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/constant-values.html\">Constant&nbsp;Field&nbsp;Values<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/serialized-form.html\">Serialized&nbsp;Form<\/a><\/main>\n+<\/div>\n+<\/div>\n+<\/body>\n+<\/html>\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/doc\/index-files\/index-16.html","additions":122,"deletions":0,"binary":false,"changes":122,"status":"added"},{"patch":"@@ -0,0 +1,64 @@\n+<!DOCTYPE HTML>\n+<html lang=\"en\">\n+<head>\n+<!-- Generated by javadoc (17) on Wed Apr 14 13:12:12 CEST 2021 -->\n+<title>U-Index<\/title>\n+<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n+<meta http-equiv=\"Content-Type\" content=\"text\/html; charset=utf-8\">\n+<meta name=\"dc.created\" content=\"2021-04-14\">\n+<meta name=\"description\" content=\"index: U\">\n+<meta name=\"generator\" content=\"javadoc\/IndexWriter\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/stylesheet.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/script-dir\/jquery-ui.min.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/jquery-ui.overrides.css\" title=\"Style\">\n+<script type=\"text\/javascript\" src=\"..\/script.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/script-dir\/jquery-3.5.1.min.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/script-dir\/jquery-ui.min.js\"><\/script>\n+<\/head>\n+<body class=\"index-page\">\n+<script type=\"text\/javascript\">var pathtoroot = \"..\/\";\n+loadScripts(document, 'script');<\/script>\n+<noscript>\n+<div>JavaScript is disabled on your browser.<\/div>\n+<\/noscript>\n+<div class=\"flex-box\">\n+<header role=\"banner\" class=\"flex-header\">\n+<nav role=\"navigation\">\n+<!-- ========= START OF TOP NAVBAR ======= -->\n+<div class=\"top-nav\" id=\"navbar-top\">\n+<div class=\"skip-nav\"><a href=\"#skip-navbar-top\" title=\"Skip navigation links\">Skip navigation links<\/a><\/div>\n+<ul id=\"navbar-top-firstrow\" class=\"nav-list\" title=\"Navigation\">\n+<li><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/package-summary.html\">Package<\/a><\/li>\n+<li>Class<\/li>\n+<li><a href=\"..\/overview-tree.html\">Tree<\/a><\/li>\n+<li class=\"nav-bar-cell1-rev\">Index<\/li>\n+<li><a href=\"..\/help-doc.html\">Help<\/a><\/li>\n+<\/ul>\n+<\/div>\n+<div class=\"sub-nav\">\n+<div class=\"nav-list-search\"><label for=\"search\">SEARCH:<\/label>\n+<input type=\"text\" id=\"search\" value=\"search\" disabled=\"disabled\">\n+<input type=\"reset\" id=\"reset\" value=\"reset\" disabled=\"disabled\">\n+<\/div>\n+<\/div>\n+<!-- ========= END OF TOP NAVBAR ========= -->\n+<span class=\"skip-nav\" id=\"skip-navbar-top\"><\/span><\/nav>\n+<\/header>\n+<div class=\"flex-content\">\n+<main role=\"main\">\n+<div class=\"header\">\n+<h1>Index<\/h1>\n+<\/div>\n+<a href=\"index-1.html\">A<\/a>&nbsp;<a href=\"index-2.html\">B<\/a>&nbsp;<a href=\"index-3.html\">C<\/a>&nbsp;<a href=\"index-4.html\">D<\/a>&nbsp;<a href=\"index-5.html\">E<\/a>&nbsp;<a href=\"index-6.html\">F<\/a>&nbsp;<a href=\"index-7.html\">G<\/a>&nbsp;<a href=\"index-8.html\">I<\/a>&nbsp;<a href=\"index-9.html\">J<\/a>&nbsp;<a href=\"index-10.html\">L<\/a>&nbsp;<a href=\"index-11.html\">M<\/a>&nbsp;<a href=\"index-12.html\">N<\/a>&nbsp;<a href=\"index-13.html\">P<\/a>&nbsp;<a href=\"index-14.html\">R<\/a>&nbsp;<a href=\"index-15.html\">S<\/a>&nbsp;<a href=\"index-16.html\">T<\/a>&nbsp;<a href=\"index-17.html\">U<\/a>&nbsp;<a href=\"index-18.html\">V<\/a>&nbsp;<a href=\"index-19.html\">W<\/a>&nbsp;<br><a href=\"..\/allclasses-index.html\">All&nbsp;Classes<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/allpackages-index.html\">All&nbsp;Packages<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/constant-values.html\">Constant&nbsp;Field&nbsp;Values<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/serialized-form.html\">Serialized&nbsp;Form<\/a>\n+<h2 class=\"title\" id=\"I:U\">U<\/h2>\n+<dl class=\"index\">\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#UNHANDLED_TRAP\" class=\"member-name-link\">UNHANDLED_TRAP<\/a> - Static variable in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">IRNode<\/a><\/dt>\n+<dd>&nbsp;<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#UNSTABLE_IF_TRAP\" class=\"member-name-link\">UNSTABLE_IF_TRAP<\/a> - Static variable in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">IRNode<\/a><\/dt>\n+<dd>&nbsp;<\/dd>\n+<\/dl>\n+<a href=\"index-1.html\">A<\/a>&nbsp;<a href=\"index-2.html\">B<\/a>&nbsp;<a href=\"index-3.html\">C<\/a>&nbsp;<a href=\"index-4.html\">D<\/a>&nbsp;<a href=\"index-5.html\">E<\/a>&nbsp;<a href=\"index-6.html\">F<\/a>&nbsp;<a href=\"index-7.html\">G<\/a>&nbsp;<a href=\"index-8.html\">I<\/a>&nbsp;<a href=\"index-9.html\">J<\/a>&nbsp;<a href=\"index-10.html\">L<\/a>&nbsp;<a href=\"index-11.html\">M<\/a>&nbsp;<a href=\"index-12.html\">N<\/a>&nbsp;<a href=\"index-13.html\">P<\/a>&nbsp;<a href=\"index-14.html\">R<\/a>&nbsp;<a href=\"index-15.html\">S<\/a>&nbsp;<a href=\"index-16.html\">T<\/a>&nbsp;<a href=\"index-17.html\">U<\/a>&nbsp;<a href=\"index-18.html\">V<\/a>&nbsp;<a href=\"index-19.html\">W<\/a>&nbsp;<br><a href=\"..\/allclasses-index.html\">All&nbsp;Classes<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/allpackages-index.html\">All&nbsp;Packages<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/constant-values.html\">Constant&nbsp;Field&nbsp;Values<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/serialized-form.html\">Serialized&nbsp;Form<\/a><\/main>\n+<\/div>\n+<\/div>\n+<\/body>\n+<\/html>\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/doc\/index-files\/index-17.html","additions":64,"deletions":0,"binary":false,"changes":64,"status":"added"},{"patch":"@@ -0,0 +1,118 @@\n+<!DOCTYPE HTML>\n+<html lang=\"en\">\n+<head>\n+<!-- Generated by javadoc (17) on Wed Apr 14 13:12:12 CEST 2021 -->\n+<title>V-Index<\/title>\n+<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n+<meta http-equiv=\"Content-Type\" content=\"text\/html; charset=utf-8\">\n+<meta name=\"dc.created\" content=\"2021-04-14\">\n+<meta name=\"description\" content=\"index: V\">\n+<meta name=\"generator\" content=\"javadoc\/IndexWriter\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/stylesheet.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/script-dir\/jquery-ui.min.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/jquery-ui.overrides.css\" title=\"Style\">\n+<script type=\"text\/javascript\" src=\"..\/script.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/script-dir\/jquery-3.5.1.min.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/script-dir\/jquery-ui.min.js\"><\/script>\n+<\/head>\n+<body class=\"index-page\">\n+<script type=\"text\/javascript\">var pathtoroot = \"..\/\";\n+loadScripts(document, 'script');<\/script>\n+<noscript>\n+<div>JavaScript is disabled on your browser.<\/div>\n+<\/noscript>\n+<div class=\"flex-box\">\n+<header role=\"banner\" class=\"flex-header\">\n+<nav role=\"navigation\">\n+<!-- ========= START OF TOP NAVBAR ======= -->\n+<div class=\"top-nav\" id=\"navbar-top\">\n+<div class=\"skip-nav\"><a href=\"#skip-navbar-top\" title=\"Skip navigation links\">Skip navigation links<\/a><\/div>\n+<ul id=\"navbar-top-firstrow\" class=\"nav-list\" title=\"Navigation\">\n+<li><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/package-summary.html\">Package<\/a><\/li>\n+<li>Class<\/li>\n+<li><a href=\"..\/overview-tree.html\">Tree<\/a><\/li>\n+<li class=\"nav-bar-cell1-rev\">Index<\/li>\n+<li><a href=\"..\/help-doc.html\">Help<\/a><\/li>\n+<\/ul>\n+<\/div>\n+<div class=\"sub-nav\">\n+<div class=\"nav-list-search\"><label for=\"search\">SEARCH:<\/label>\n+<input type=\"text\" id=\"search\" value=\"search\" disabled=\"disabled\">\n+<input type=\"reset\" id=\"reset\" value=\"reset\" disabled=\"disabled\">\n+<\/div>\n+<\/div>\n+<!-- ========= END OF TOP NAVBAR ========= -->\n+<span class=\"skip-nav\" id=\"skip-navbar-top\"><\/span><\/nav>\n+<\/header>\n+<div class=\"flex-content\">\n+<main role=\"main\">\n+<div class=\"header\">\n+<h1>Index<\/h1>\n+<\/div>\n+<a href=\"index-1.html\">A<\/a>&nbsp;<a href=\"index-2.html\">B<\/a>&nbsp;<a href=\"index-3.html\">C<\/a>&nbsp;<a href=\"index-4.html\">D<\/a>&nbsp;<a href=\"index-5.html\">E<\/a>&nbsp;<a href=\"index-6.html\">F<\/a>&nbsp;<a href=\"index-7.html\">G<\/a>&nbsp;<a href=\"index-8.html\">I<\/a>&nbsp;<a href=\"index-9.html\">J<\/a>&nbsp;<a href=\"index-10.html\">L<\/a>&nbsp;<a href=\"index-11.html\">M<\/a>&nbsp;<a href=\"index-12.html\">N<\/a>&nbsp;<a href=\"index-13.html\">P<\/a>&nbsp;<a href=\"index-14.html\">R<\/a>&nbsp;<a href=\"index-15.html\">S<\/a>&nbsp;<a href=\"index-16.html\">T<\/a>&nbsp;<a href=\"index-17.html\">U<\/a>&nbsp;<a href=\"index-18.html\">V<\/a>&nbsp;<a href=\"index-19.html\">W<\/a>&nbsp;<br><a href=\"..\/allclasses-index.html\">All&nbsp;Classes<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/allpackages-index.html\">All&nbsp;Packages<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/constant-values.html\">Constant&nbsp;Field&nbsp;Values<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/serialized-form.html\">Serialized&nbsp;Form<\/a>\n+<h2 class=\"title\" id=\"I:V\">V<\/h2>\n+<dl class=\"index\">\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/Arguments.html#value()\" class=\"member-name-link\">value()<\/a> - Element in annotation interface jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/Arguments.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\">Arguments<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Get the argument value.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/DontCompile.html#value()\" class=\"member-name-link\">value()<\/a> - Element in annotation interface jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/DontCompile.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\">DontCompile<\/a><\/dt>\n+<dd>\n+<div class=\"block\">The excluded compilation level for the helper method.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/ForceCompile.html#value()\" class=\"member-name-link\">value()<\/a> - Element in annotation interface jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/ForceCompile.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\">ForceCompile<\/a><\/dt>\n+<dd>\n+<div class=\"block\">The compilation level to compile the helper method at.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/ForceCompileClassInitializer.html#value()\" class=\"member-name-link\">value()<\/a> - Element in annotation interface jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/ForceCompileClassInitializer.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\">ForceCompileClassInitializer<\/a><\/dt>\n+<dd>\n+<div class=\"block\">The compilation level to compile the static class initializer method (<code>&lt;clinit&gt;<\/code>) at.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRs.html#value()\" class=\"member-name-link\">value()<\/a> - Element in annotation interface jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRs.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\">IRs<\/a><\/dt>\n+<dd>&nbsp;<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/Warmup.html#value()\" class=\"member-name-link\">value()<\/a> - Element in annotation interface jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/Warmup.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\">Warmup<\/a><\/dt>\n+<dd>\n+<div class=\"block\">The warm-up iterations for the test.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/Argument.html#valueOf(java.lang.String)\" class=\"member-name-link\">valueOf(String)<\/a> - Static method in enum class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/Argument.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">Argument<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Returns the enum constant of this class with the specified name.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/CheckAt.html#valueOf(java.lang.String)\" class=\"member-name-link\">valueOf(String)<\/a> - Static method in enum class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/CheckAt.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">CheckAt<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Returns the enum constant of this class with the specified name.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/CompLevel.html#valueOf(java.lang.String)\" class=\"member-name-link\">valueOf(String)<\/a> - Static method in enum class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/CompLevel.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">CompLevel<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Returns the enum constant of this class with the specified name.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/RunMode.html#valueOf(java.lang.String)\" class=\"member-name-link\">valueOf(String)<\/a> - Static method in enum class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/RunMode.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">RunMode<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Returns the enum constant of this class with the specified name.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/Argument.html#values()\" class=\"member-name-link\">values()<\/a> - Static method in enum class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/Argument.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">Argument<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Returns an array containing the constants of this enum class, in\n+the order they are declared.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/CheckAt.html#values()\" class=\"member-name-link\">values()<\/a> - Static method in enum class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/CheckAt.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">CheckAt<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Returns an array containing the constants of this enum class, in\n+the order they are declared.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/CompLevel.html#values()\" class=\"member-name-link\">values()<\/a> - Static method in enum class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/CompLevel.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">CompLevel<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Returns an array containing the constants of this enum class, in\n+the order they are declared.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/RunMode.html#values()\" class=\"member-name-link\">values()<\/a> - Static method in enum class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/RunMode.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">RunMode<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Returns an array containing the constants of this enum class, in\n+the order they are declared.<\/div>\n+<\/dd>\n+<\/dl>\n+<a href=\"index-1.html\">A<\/a>&nbsp;<a href=\"index-2.html\">B<\/a>&nbsp;<a href=\"index-3.html\">C<\/a>&nbsp;<a href=\"index-4.html\">D<\/a>&nbsp;<a href=\"index-5.html\">E<\/a>&nbsp;<a href=\"index-6.html\">F<\/a>&nbsp;<a href=\"index-7.html\">G<\/a>&nbsp;<a href=\"index-8.html\">I<\/a>&nbsp;<a href=\"index-9.html\">J<\/a>&nbsp;<a href=\"index-10.html\">L<\/a>&nbsp;<a href=\"index-11.html\">M<\/a>&nbsp;<a href=\"index-12.html\">N<\/a>&nbsp;<a href=\"index-13.html\">P<\/a>&nbsp;<a href=\"index-14.html\">R<\/a>&nbsp;<a href=\"index-15.html\">S<\/a>&nbsp;<a href=\"index-16.html\">T<\/a>&nbsp;<a href=\"index-17.html\">U<\/a>&nbsp;<a href=\"index-18.html\">V<\/a>&nbsp;<a href=\"index-19.html\">W<\/a>&nbsp;<br><a href=\"..\/allclasses-index.html\">All&nbsp;Classes<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/allpackages-index.html\">All&nbsp;Packages<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/constant-values.html\">Constant&nbsp;Field&nbsp;Values<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/serialized-form.html\">Serialized&nbsp;Form<\/a><\/main>\n+<\/div>\n+<\/div>\n+<\/body>\n+<\/html>\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/doc\/index-files\/index-18.html","additions":118,"deletions":0,"binary":false,"changes":118,"status":"added"},{"patch":"@@ -0,0 +1,77 @@\n+<!DOCTYPE HTML>\n+<html lang=\"en\">\n+<head>\n+<!-- Generated by javadoc (17) on Wed Apr 14 13:12:12 CEST 2021 -->\n+<title>W-Index<\/title>\n+<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n+<meta http-equiv=\"Content-Type\" content=\"text\/html; charset=utf-8\">\n+<meta name=\"dc.created\" content=\"2021-04-14\">\n+<meta name=\"description\" content=\"index: W\">\n+<meta name=\"generator\" content=\"javadoc\/IndexWriter\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/stylesheet.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/script-dir\/jquery-ui.min.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/jquery-ui.overrides.css\" title=\"Style\">\n+<script type=\"text\/javascript\" src=\"..\/script.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/script-dir\/jquery-3.5.1.min.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/script-dir\/jquery-ui.min.js\"><\/script>\n+<\/head>\n+<body class=\"index-page\">\n+<script type=\"text\/javascript\">var pathtoroot = \"..\/\";\n+loadScripts(document, 'script');<\/script>\n+<noscript>\n+<div>JavaScript is disabled on your browser.<\/div>\n+<\/noscript>\n+<div class=\"flex-box\">\n+<header role=\"banner\" class=\"flex-header\">\n+<nav role=\"navigation\">\n+<!-- ========= START OF TOP NAVBAR ======= -->\n+<div class=\"top-nav\" id=\"navbar-top\">\n+<div class=\"skip-nav\"><a href=\"#skip-navbar-top\" title=\"Skip navigation links\">Skip navigation links<\/a><\/div>\n+<ul id=\"navbar-top-firstrow\" class=\"nav-list\" title=\"Navigation\">\n+<li><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/package-summary.html\">Package<\/a><\/li>\n+<li>Class<\/li>\n+<li><a href=\"..\/overview-tree.html\">Tree<\/a><\/li>\n+<li class=\"nav-bar-cell1-rev\">Index<\/li>\n+<li><a href=\"..\/help-doc.html\">Help<\/a><\/li>\n+<\/ul>\n+<\/div>\n+<div class=\"sub-nav\">\n+<div class=\"nav-list-search\"><label for=\"search\">SEARCH:<\/label>\n+<input type=\"text\" id=\"search\" value=\"search\" disabled=\"disabled\">\n+<input type=\"reset\" id=\"reset\" value=\"reset\" disabled=\"disabled\">\n+<\/div>\n+<\/div>\n+<!-- ========= END OF TOP NAVBAR ========= -->\n+<span class=\"skip-nav\" id=\"skip-navbar-top\"><\/span><\/nav>\n+<\/header>\n+<div class=\"flex-content\">\n+<main role=\"main\">\n+<div class=\"header\">\n+<h1>Index<\/h1>\n+<\/div>\n+<a href=\"index-1.html\">A<\/a>&nbsp;<a href=\"index-2.html\">B<\/a>&nbsp;<a href=\"index-3.html\">C<\/a>&nbsp;<a href=\"index-4.html\">D<\/a>&nbsp;<a href=\"index-5.html\">E<\/a>&nbsp;<a href=\"index-6.html\">F<\/a>&nbsp;<a href=\"index-7.html\">G<\/a>&nbsp;<a href=\"index-8.html\">I<\/a>&nbsp;<a href=\"index-9.html\">J<\/a>&nbsp;<a href=\"index-10.html\">L<\/a>&nbsp;<a href=\"index-11.html\">M<\/a>&nbsp;<a href=\"index-12.html\">N<\/a>&nbsp;<a href=\"index-13.html\">P<\/a>&nbsp;<a href=\"index-14.html\">R<\/a>&nbsp;<a href=\"index-15.html\">S<\/a>&nbsp;<a href=\"index-16.html\">T<\/a>&nbsp;<a href=\"index-17.html\">U<\/a>&nbsp;<a href=\"index-18.html\">V<\/a>&nbsp;<a href=\"index-19.html\">W<\/a>&nbsp;<br><a href=\"..\/allclasses-index.html\">All&nbsp;Classes<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/allpackages-index.html\">All&nbsp;Packages<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/constant-values.html\">Constant&nbsp;Field&nbsp;Values<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/serialized-form.html\">Serialized&nbsp;Form<\/a>\n+<h2 class=\"title\" id=\"I:W\">W<\/h2>\n+<dl class=\"index\">\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/CompLevel.html#WAIT_FOR_COMPILATION\" class=\"member-name-link\">WAIT_FOR_COMPILATION<\/a> - Enum constant in enum class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/CompLevel.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">CompLevel<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Can only be used at <a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/Test.html#compLevel()\"><code>Test.compLevel()<\/code><\/a>.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/Warmup.html\" class=\"type-name-link\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\">Warmup<\/a> - Annotation Interface in <a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/package-summary.html\">jdk.test.lib.hotspot.ir_framework<\/a><\/dt>\n+<dd>\n+<div class=\"block\">This annotation overrides the default number (2000) of times the framework should warm up a test.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/TestFrameworkExecution.html#WARMUP_ITERATIONS\" class=\"member-name-link\">WARMUP_ITERATIONS<\/a> - Static variable in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/TestFrameworkExecution.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestFrameworkExecution<\/a><\/dt>\n+<dd>\n+<div class=\"block\">The default number of warm-up iterations used to warm up a <a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Test<\/code><\/a> annotated test method.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/Check.html#when()\" class=\"member-name-link\">when()<\/a> - Element in annotation interface jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/Check.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\">Check<\/a><\/dt>\n+<dd>\n+<div class=\"block\">When should the <code>@Check<\/code> method be invoked? By default, the check is done after each invocation which is\n+ encouraged if performance is not critical.<\/div>\n+<\/dd>\n+<\/dl>\n+<a href=\"index-1.html\">A<\/a>&nbsp;<a href=\"index-2.html\">B<\/a>&nbsp;<a href=\"index-3.html\">C<\/a>&nbsp;<a href=\"index-4.html\">D<\/a>&nbsp;<a href=\"index-5.html\">E<\/a>&nbsp;<a href=\"index-6.html\">F<\/a>&nbsp;<a href=\"index-7.html\">G<\/a>&nbsp;<a href=\"index-8.html\">I<\/a>&nbsp;<a href=\"index-9.html\">J<\/a>&nbsp;<a href=\"index-10.html\">L<\/a>&nbsp;<a href=\"index-11.html\">M<\/a>&nbsp;<a href=\"index-12.html\">N<\/a>&nbsp;<a href=\"index-13.html\">P<\/a>&nbsp;<a href=\"index-14.html\">R<\/a>&nbsp;<a href=\"index-15.html\">S<\/a>&nbsp;<a href=\"index-16.html\">T<\/a>&nbsp;<a href=\"index-17.html\">U<\/a>&nbsp;<a href=\"index-18.html\">V<\/a>&nbsp;<a href=\"index-19.html\">W<\/a>&nbsp;<br><a href=\"..\/allclasses-index.html\">All&nbsp;Classes<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/allpackages-index.html\">All&nbsp;Packages<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/constant-values.html\">Constant&nbsp;Field&nbsp;Values<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/serialized-form.html\">Serialized&nbsp;Form<\/a><\/main>\n+<\/div>\n+<\/div>\n+<\/body>\n+<\/html>\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/doc\/index-files\/index-19.html","additions":77,"deletions":0,"binary":false,"changes":77,"status":"added"},{"patch":"@@ -0,0 +1,68 @@\n+<!DOCTYPE HTML>\n+<html lang=\"en\">\n+<head>\n+<!-- Generated by javadoc (17) on Wed Apr 14 13:12:12 CEST 2021 -->\n+<title>B-Index<\/title>\n+<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n+<meta http-equiv=\"Content-Type\" content=\"text\/html; charset=utf-8\">\n+<meta name=\"dc.created\" content=\"2021-04-14\">\n+<meta name=\"description\" content=\"index: B\">\n+<meta name=\"generator\" content=\"javadoc\/IndexWriter\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/stylesheet.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/script-dir\/jquery-ui.min.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/jquery-ui.overrides.css\" title=\"Style\">\n+<script type=\"text\/javascript\" src=\"..\/script.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/script-dir\/jquery-3.5.1.min.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/script-dir\/jquery-ui.min.js\"><\/script>\n+<\/head>\n+<body class=\"index-page\">\n+<script type=\"text\/javascript\">var pathtoroot = \"..\/\";\n+loadScripts(document, 'script');<\/script>\n+<noscript>\n+<div>JavaScript is disabled on your browser.<\/div>\n+<\/noscript>\n+<div class=\"flex-box\">\n+<header role=\"banner\" class=\"flex-header\">\n+<nav role=\"navigation\">\n+<!-- ========= START OF TOP NAVBAR ======= -->\n+<div class=\"top-nav\" id=\"navbar-top\">\n+<div class=\"skip-nav\"><a href=\"#skip-navbar-top\" title=\"Skip navigation links\">Skip navigation links<\/a><\/div>\n+<ul id=\"navbar-top-firstrow\" class=\"nav-list\" title=\"Navigation\">\n+<li><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/package-summary.html\">Package<\/a><\/li>\n+<li>Class<\/li>\n+<li><a href=\"..\/overview-tree.html\">Tree<\/a><\/li>\n+<li class=\"nav-bar-cell1-rev\">Index<\/li>\n+<li><a href=\"..\/help-doc.html\">Help<\/a><\/li>\n+<\/ul>\n+<\/div>\n+<div class=\"sub-nav\">\n+<div class=\"nav-list-search\"><label for=\"search\">SEARCH:<\/label>\n+<input type=\"text\" id=\"search\" value=\"search\" disabled=\"disabled\">\n+<input type=\"reset\" id=\"reset\" value=\"reset\" disabled=\"disabled\">\n+<\/div>\n+<\/div>\n+<!-- ========= END OF TOP NAVBAR ========= -->\n+<span class=\"skip-nav\" id=\"skip-navbar-top\"><\/span><\/nav>\n+<\/header>\n+<div class=\"flex-content\">\n+<main role=\"main\">\n+<div class=\"header\">\n+<h1>Index<\/h1>\n+<\/div>\n+<a href=\"index-1.html\">A<\/a>&nbsp;<a href=\"index-2.html\">B<\/a>&nbsp;<a href=\"index-3.html\">C<\/a>&nbsp;<a href=\"index-4.html\">D<\/a>&nbsp;<a href=\"index-5.html\">E<\/a>&nbsp;<a href=\"index-6.html\">F<\/a>&nbsp;<a href=\"index-7.html\">G<\/a>&nbsp;<a href=\"index-8.html\">I<\/a>&nbsp;<a href=\"index-9.html\">J<\/a>&nbsp;<a href=\"index-10.html\">L<\/a>&nbsp;<a href=\"index-11.html\">M<\/a>&nbsp;<a href=\"index-12.html\">N<\/a>&nbsp;<a href=\"index-13.html\">P<\/a>&nbsp;<a href=\"index-14.html\">R<\/a>&nbsp;<a href=\"index-15.html\">S<\/a>&nbsp;<a href=\"index-16.html\">T<\/a>&nbsp;<a href=\"index-17.html\">U<\/a>&nbsp;<a href=\"index-18.html\">V<\/a>&nbsp;<a href=\"index-19.html\">W<\/a>&nbsp;<br><a href=\"..\/allclasses-index.html\">All&nbsp;Classes<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/allpackages-index.html\">All&nbsp;Packages<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/constant-values.html\">Constant&nbsp;Field&nbsp;Values<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/serialized-form.html\">Serialized&nbsp;Form<\/a>\n+<h2 class=\"title\" id=\"I:B\">B<\/h2>\n+<dl class=\"index\">\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/Argument.html#BOOLEAN_TOGGLE_FIRST_FALSE\" class=\"member-name-link\">BOOLEAN_TOGGLE_FIRST_FALSE<\/a> - Enum constant in enum class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/Argument.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">Argument<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Provides a different boolean value on each test invocation, starting with false.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/Argument.html#BOOLEAN_TOGGLE_FIRST_TRUE\" class=\"member-name-link\">BOOLEAN_TOGGLE_FIRST_TRUE<\/a> - Enum constant in enum class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/Argument.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">Argument<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Provides a different boolean value on each test invocation, starting with true.<\/div>\n+<\/dd>\n+<\/dl>\n+<a href=\"index-1.html\">A<\/a>&nbsp;<a href=\"index-2.html\">B<\/a>&nbsp;<a href=\"index-3.html\">C<\/a>&nbsp;<a href=\"index-4.html\">D<\/a>&nbsp;<a href=\"index-5.html\">E<\/a>&nbsp;<a href=\"index-6.html\">F<\/a>&nbsp;<a href=\"index-7.html\">G<\/a>&nbsp;<a href=\"index-8.html\">I<\/a>&nbsp;<a href=\"index-9.html\">J<\/a>&nbsp;<a href=\"index-10.html\">L<\/a>&nbsp;<a href=\"index-11.html\">M<\/a>&nbsp;<a href=\"index-12.html\">N<\/a>&nbsp;<a href=\"index-13.html\">P<\/a>&nbsp;<a href=\"index-14.html\">R<\/a>&nbsp;<a href=\"index-15.html\">S<\/a>&nbsp;<a href=\"index-16.html\">T<\/a>&nbsp;<a href=\"index-17.html\">U<\/a>&nbsp;<a href=\"index-18.html\">V<\/a>&nbsp;<a href=\"index-19.html\">W<\/a>&nbsp;<br><a href=\"..\/allclasses-index.html\">All&nbsp;Classes<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/allpackages-index.html\">All&nbsp;Packages<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/constant-values.html\">Constant&nbsp;Field&nbsp;Values<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/serialized-form.html\">Serialized&nbsp;Form<\/a><\/main>\n+<\/div>\n+<\/div>\n+<\/body>\n+<\/html>\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/doc\/index-files\/index-2.html","additions":68,"deletions":0,"binary":false,"changes":68,"status":"added"},{"patch":"@@ -0,0 +1,122 @@\n+<!DOCTYPE HTML>\n+<html lang=\"en\">\n+<head>\n+<!-- Generated by javadoc (17) on Wed Apr 14 13:12:12 CEST 2021 -->\n+<title>C-Index<\/title>\n+<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n+<meta http-equiv=\"Content-Type\" content=\"text\/html; charset=utf-8\">\n+<meta name=\"dc.created\" content=\"2021-04-14\">\n+<meta name=\"description\" content=\"index: C\">\n+<meta name=\"generator\" content=\"javadoc\/IndexWriter\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/stylesheet.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/script-dir\/jquery-ui.min.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/jquery-ui.overrides.css\" title=\"Style\">\n+<script type=\"text\/javascript\" src=\"..\/script.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/script-dir\/jquery-3.5.1.min.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/script-dir\/jquery-ui.min.js\"><\/script>\n+<\/head>\n+<body class=\"index-page\">\n+<script type=\"text\/javascript\">var pathtoroot = \"..\/\";\n+loadScripts(document, 'script');<\/script>\n+<noscript>\n+<div>JavaScript is disabled on your browser.<\/div>\n+<\/noscript>\n+<div class=\"flex-box\">\n+<header role=\"banner\" class=\"flex-header\">\n+<nav role=\"navigation\">\n+<!-- ========= START OF TOP NAVBAR ======= -->\n+<div class=\"top-nav\" id=\"navbar-top\">\n+<div class=\"skip-nav\"><a href=\"#skip-navbar-top\" title=\"Skip navigation links\">Skip navigation links<\/a><\/div>\n+<ul id=\"navbar-top-firstrow\" class=\"nav-list\" title=\"Navigation\">\n+<li><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/package-summary.html\">Package<\/a><\/li>\n+<li>Class<\/li>\n+<li><a href=\"..\/overview-tree.html\">Tree<\/a><\/li>\n+<li class=\"nav-bar-cell1-rev\">Index<\/li>\n+<li><a href=\"..\/help-doc.html\">Help<\/a><\/li>\n+<\/ul>\n+<\/div>\n+<div class=\"sub-nav\">\n+<div class=\"nav-list-search\"><label for=\"search\">SEARCH:<\/label>\n+<input type=\"text\" id=\"search\" value=\"search\" disabled=\"disabled\">\n+<input type=\"reset\" id=\"reset\" value=\"reset\" disabled=\"disabled\">\n+<\/div>\n+<\/div>\n+<!-- ========= END OF TOP NAVBAR ========= -->\n+<span class=\"skip-nav\" id=\"skip-navbar-top\"><\/span><\/nav>\n+<\/header>\n+<div class=\"flex-content\">\n+<main role=\"main\">\n+<div class=\"header\">\n+<h1>Index<\/h1>\n+<\/div>\n+<a href=\"index-1.html\">A<\/a>&nbsp;<a href=\"index-2.html\">B<\/a>&nbsp;<a href=\"index-3.html\">C<\/a>&nbsp;<a href=\"index-4.html\">D<\/a>&nbsp;<a href=\"index-5.html\">E<\/a>&nbsp;<a href=\"index-6.html\">F<\/a>&nbsp;<a href=\"index-7.html\">G<\/a>&nbsp;<a href=\"index-8.html\">I<\/a>&nbsp;<a href=\"index-9.html\">J<\/a>&nbsp;<a href=\"index-10.html\">L<\/a>&nbsp;<a href=\"index-11.html\">M<\/a>&nbsp;<a href=\"index-12.html\">N<\/a>&nbsp;<a href=\"index-13.html\">P<\/a>&nbsp;<a href=\"index-14.html\">R<\/a>&nbsp;<a href=\"index-15.html\">S<\/a>&nbsp;<a href=\"index-16.html\">T<\/a>&nbsp;<a href=\"index-17.html\">U<\/a>&nbsp;<a href=\"index-18.html\">V<\/a>&nbsp;<a href=\"index-19.html\">W<\/a>&nbsp;<br><a href=\"..\/allclasses-index.html\">All&nbsp;Classes<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/allpackages-index.html\">All&nbsp;Packages<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/constant-values.html\">Constant&nbsp;Field&nbsp;Values<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/serialized-form.html\">Serialized&nbsp;Form<\/a>\n+<h2 class=\"title\" id=\"I:C\">C<\/h2>\n+<dl class=\"index\">\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/CompLevel.html#C1\" class=\"member-name-link\">C1<\/a> - Enum constant in enum class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/CompLevel.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">CompLevel<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Compilation level 1: C1 compilation without any profile information.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/CompLevel.html#C1_FULL_PROFILE\" class=\"member-name-link\">C1_FULL_PROFILE<\/a> - Enum constant in enum class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/CompLevel.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">CompLevel<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Compilation level 3: C1 compilation with full profile information: Includes Invocation and backedge counters with MDO.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/CompLevel.html#C1_LIMITED_PROFILE\" class=\"member-name-link\">C1_LIMITED_PROFILE<\/a> - Enum constant in enum class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/CompLevel.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">CompLevel<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Compilation level 2: C1 compilation with limited profile information: Includes Invocation and backedge counters.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/CompLevel.html#C2\" class=\"member-name-link\">C2<\/a> - Enum constant in enum class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/CompLevel.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">CompLevel<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Compilation level 4: C2 compilation with full optimizations.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#CALL\" class=\"member-name-link\">CALL<\/a> - Static variable in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">IRNode<\/a><\/dt>\n+<dd>&nbsp;<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/Check.html\" class=\"type-name-link\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\">Check<\/a> - Annotation Interface in <a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/package-summary.html\">jdk.test.lib.hotspot.ir_framework<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Annotation for a check method of a <b>checked test<\/b>.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/CheckAt.html\" class=\"type-name-link\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">CheckAt<\/a> - Enum Class in <a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/package-summary.html\">jdk.test.lib.hotspot.ir_framework<\/a><\/dt>\n+<dd>\n+<div class=\"block\">This enum is used in <a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/Check.html#when()\"><code>Check.when()<\/code><\/a> of a <b>checked test<\/b> to specify when the framework will invoke the\n+ check method after invoking the associated <a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Test<\/code><\/a> method.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#CHECKCAST_ARRAY\" class=\"member-name-link\">CHECKCAST_ARRAY<\/a> - Static variable in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">IRNode<\/a><\/dt>\n+<dd>&nbsp;<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#CHECKCAST_ARRAY_OF\" class=\"member-name-link\">CHECKCAST_ARRAY_OF<\/a> - Static variable in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">IRNode<\/a><\/dt>\n+<dd>&nbsp;<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#CHECKCAST_ARRAYCOPY\" class=\"member-name-link\">CHECKCAST_ARRAYCOPY<\/a> - Static variable in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">IRNode<\/a><\/dt>\n+<dd>&nbsp;<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#CLASS_CHECK_TRAP\" class=\"member-name-link\">CLASS_CHECK_TRAP<\/a> - Static variable in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">IRNode<\/a><\/dt>\n+<dd>&nbsp;<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/TestFramework.html#compile(java.lang.reflect.Method,jdk.test.lib.hotspot.ir_framework.CompLevel)\" class=\"member-name-link\">compile(Method, CompLevel)<\/a> - Static method in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/TestFramework.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestFramework<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Compile <code>m<\/code> at compilation level <code>compLevel<\/code>.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/CheckAt.html#COMPILED\" class=\"member-name-link\">COMPILED<\/a> - Enum constant in enum class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/CheckAt.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">CheckAt<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Invoke the <a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/Check.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Check<\/code><\/a> method only once after the warm-up of the associated <a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Test<\/code><\/a> method had been completed\n+ and the framework has compiled the associated <a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Test<\/code><\/a> method.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/Test.html#compLevel()\" class=\"member-name-link\">compLevel()<\/a> - Element in annotation interface jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\">Test<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Specify at which compilation level the framework should eventually compile the test method after an optional\n+ warm-up period.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/CompLevel.html\" class=\"type-name-link\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">CompLevel<\/a> - Enum Class in <a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/package-summary.html\">jdk.test.lib.hotspot.ir_framework<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Compilation levels used by the framework.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#COUNTEDLOOP\" class=\"member-name-link\">COUNTEDLOOP<\/a> - Static variable in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">IRNode<\/a><\/dt>\n+<dd>&nbsp;<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#COUNTEDLOOP_MAIN\" class=\"member-name-link\">COUNTEDLOOP_MAIN<\/a> - Static variable in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">IRNode<\/a><\/dt>\n+<dd>&nbsp;<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IR.html#counts()\" class=\"member-name-link\">counts()<\/a> - Element in annotation interface jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IR.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\">IR<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Define a list of ((node) regexes,count) string pairs: A regex to be matched on the PrintIdeal or PrintOptoAssembly\n+ is immediately followed by a number specifying how often the regex should be matched.<\/div>\n+<\/dd>\n+<\/dl>\n+<a href=\"index-1.html\">A<\/a>&nbsp;<a href=\"index-2.html\">B<\/a>&nbsp;<a href=\"index-3.html\">C<\/a>&nbsp;<a href=\"index-4.html\">D<\/a>&nbsp;<a href=\"index-5.html\">E<\/a>&nbsp;<a href=\"index-6.html\">F<\/a>&nbsp;<a href=\"index-7.html\">G<\/a>&nbsp;<a href=\"index-8.html\">I<\/a>&nbsp;<a href=\"index-9.html\">J<\/a>&nbsp;<a href=\"index-10.html\">L<\/a>&nbsp;<a href=\"index-11.html\">M<\/a>&nbsp;<a href=\"index-12.html\">N<\/a>&nbsp;<a href=\"index-13.html\">P<\/a>&nbsp;<a href=\"index-14.html\">R<\/a>&nbsp;<a href=\"index-15.html\">S<\/a>&nbsp;<a href=\"index-16.html\">T<\/a>&nbsp;<a href=\"index-17.html\">U<\/a>&nbsp;<a href=\"index-18.html\">V<\/a>&nbsp;<a href=\"index-19.html\">W<\/a>&nbsp;<br><a href=\"..\/allclasses-index.html\">All&nbsp;Classes<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/allpackages-index.html\">All&nbsp;Packages<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/constant-values.html\">Constant&nbsp;Field&nbsp;Values<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/serialized-form.html\">Serialized&nbsp;Form<\/a><\/main>\n+<\/div>\n+<\/div>\n+<\/body>\n+<\/html>\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/doc\/index-files\/index-3.html","additions":122,"deletions":0,"binary":false,"changes":122,"status":"added"},{"patch":"@@ -0,0 +1,81 @@\n+<!DOCTYPE HTML>\n+<html lang=\"en\">\n+<head>\n+<!-- Generated by javadoc (17) on Wed Apr 14 13:12:12 CEST 2021 -->\n+<title>D-Index<\/title>\n+<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n+<meta http-equiv=\"Content-Type\" content=\"text\/html; charset=utf-8\">\n+<meta name=\"dc.created\" content=\"2021-04-14\">\n+<meta name=\"description\" content=\"index: D\">\n+<meta name=\"generator\" content=\"javadoc\/IndexWriter\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/stylesheet.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/script-dir\/jquery-ui.min.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/jquery-ui.overrides.css\" title=\"Style\">\n+<script type=\"text\/javascript\" src=\"..\/script.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/script-dir\/jquery-3.5.1.min.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/script-dir\/jquery-ui.min.js\"><\/script>\n+<\/head>\n+<body class=\"index-page\">\n+<script type=\"text\/javascript\">var pathtoroot = \"..\/\";\n+loadScripts(document, 'script');<\/script>\n+<noscript>\n+<div>JavaScript is disabled on your browser.<\/div>\n+<\/noscript>\n+<div class=\"flex-box\">\n+<header role=\"banner\" class=\"flex-header\">\n+<nav role=\"navigation\">\n+<!-- ========= START OF TOP NAVBAR ======= -->\n+<div class=\"top-nav\" id=\"navbar-top\">\n+<div class=\"skip-nav\"><a href=\"#skip-navbar-top\" title=\"Skip navigation links\">Skip navigation links<\/a><\/div>\n+<ul id=\"navbar-top-firstrow\" class=\"nav-list\" title=\"Navigation\">\n+<li><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/package-summary.html\">Package<\/a><\/li>\n+<li>Class<\/li>\n+<li><a href=\"..\/overview-tree.html\">Tree<\/a><\/li>\n+<li class=\"nav-bar-cell1-rev\">Index<\/li>\n+<li><a href=\"..\/help-doc.html\">Help<\/a><\/li>\n+<\/ul>\n+<\/div>\n+<div class=\"sub-nav\">\n+<div class=\"nav-list-search\"><label for=\"search\">SEARCH:<\/label>\n+<input type=\"text\" id=\"search\" value=\"search\" disabled=\"disabled\">\n+<input type=\"reset\" id=\"reset\" value=\"reset\" disabled=\"disabled\">\n+<\/div>\n+<\/div>\n+<!-- ========= END OF TOP NAVBAR ========= -->\n+<span class=\"skip-nav\" id=\"skip-navbar-top\"><\/span><\/nav>\n+<\/header>\n+<div class=\"flex-content\">\n+<main role=\"main\">\n+<div class=\"header\">\n+<h1>Index<\/h1>\n+<\/div>\n+<a href=\"index-1.html\">A<\/a>&nbsp;<a href=\"index-2.html\">B<\/a>&nbsp;<a href=\"index-3.html\">C<\/a>&nbsp;<a href=\"index-4.html\">D<\/a>&nbsp;<a href=\"index-5.html\">E<\/a>&nbsp;<a href=\"index-6.html\">F<\/a>&nbsp;<a href=\"index-7.html\">G<\/a>&nbsp;<a href=\"index-8.html\">I<\/a>&nbsp;<a href=\"index-9.html\">J<\/a>&nbsp;<a href=\"index-10.html\">L<\/a>&nbsp;<a href=\"index-11.html\">M<\/a>&nbsp;<a href=\"index-12.html\">N<\/a>&nbsp;<a href=\"index-13.html\">P<\/a>&nbsp;<a href=\"index-14.html\">R<\/a>&nbsp;<a href=\"index-15.html\">S<\/a>&nbsp;<a href=\"index-16.html\">T<\/a>&nbsp;<a href=\"index-17.html\">U<\/a>&nbsp;<a href=\"index-18.html\">V<\/a>&nbsp;<a href=\"index-19.html\">W<\/a>&nbsp;<br><a href=\"..\/allclasses-index.html\">All&nbsp;Classes<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/allpackages-index.html\">All&nbsp;Packages<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/constant-values.html\">Constant&nbsp;Field&nbsp;Values<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/serialized-form.html\">Serialized&nbsp;Form<\/a>\n+<h2 class=\"title\" id=\"I:D\">D<\/h2>\n+<dl class=\"index\">\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/Argument.html#DEFAULT\" class=\"member-name-link\">DEFAULT<\/a> - Enum constant in enum class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/Argument.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">Argument<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Provides the default value for any kind of primitive type and object type if the class provides a default constructor.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/TestFramework.html#deoptimize(java.lang.reflect.Method)\" class=\"member-name-link\">deoptimize(Method)<\/a> - Static method in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/TestFramework.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestFramework<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Deoptimize <code>m<\/code>.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/DontCompile.html\" class=\"type-name-link\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\">DontCompile<\/a> - Annotation Interface in <a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/package-summary.html\">jdk.test.lib.hotspot.ir_framework<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Prevent a compilation of the annotated <b>helper method<\/b> (not specifying <a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@Test<\/code><\/a>,\n+ <a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/Check.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@Check<\/code><\/a> or <a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/Run.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@Run<\/code><\/a>):\n+\n+ \n+     <\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/DontInline.html\" class=\"type-name-link\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\">DontInline<\/a> - Annotation Interface in <a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/package-summary.html\">jdk.test.lib.hotspot.ir_framework<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Prevent an inlining of the annotated <b>helper method<\/b> (not specifying <a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@Test<\/code><\/a>, <a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/Check.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@Check<\/code><\/a>,\n+ or <a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/Run.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@Run<\/code><\/a>).<\/div>\n+<\/dd>\n+<\/dl>\n+<a href=\"index-1.html\">A<\/a>&nbsp;<a href=\"index-2.html\">B<\/a>&nbsp;<a href=\"index-3.html\">C<\/a>&nbsp;<a href=\"index-4.html\">D<\/a>&nbsp;<a href=\"index-5.html\">E<\/a>&nbsp;<a href=\"index-6.html\">F<\/a>&nbsp;<a href=\"index-7.html\">G<\/a>&nbsp;<a href=\"index-8.html\">I<\/a>&nbsp;<a href=\"index-9.html\">J<\/a>&nbsp;<a href=\"index-10.html\">L<\/a>&nbsp;<a href=\"index-11.html\">M<\/a>&nbsp;<a href=\"index-12.html\">N<\/a>&nbsp;<a href=\"index-13.html\">P<\/a>&nbsp;<a href=\"index-14.html\">R<\/a>&nbsp;<a href=\"index-15.html\">S<\/a>&nbsp;<a href=\"index-16.html\">T<\/a>&nbsp;<a href=\"index-17.html\">U<\/a>&nbsp;<a href=\"index-18.html\">V<\/a>&nbsp;<a href=\"index-19.html\">W<\/a>&nbsp;<br><a href=\"..\/allclasses-index.html\">All&nbsp;Classes<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/allpackages-index.html\">All&nbsp;Packages<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/constant-values.html\">Constant&nbsp;Field&nbsp;Values<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/serialized-form.html\">Serialized&nbsp;Form<\/a><\/main>\n+<\/div>\n+<\/div>\n+<\/body>\n+<\/html>\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/doc\/index-files\/index-4.html","additions":81,"deletions":0,"binary":false,"changes":81,"status":"added"},{"patch":"@@ -0,0 +1,64 @@\n+<!DOCTYPE HTML>\n+<html lang=\"en\">\n+<head>\n+<!-- Generated by javadoc (17) on Wed Apr 14 13:12:12 CEST 2021 -->\n+<title>E-Index<\/title>\n+<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n+<meta http-equiv=\"Content-Type\" content=\"text\/html; charset=utf-8\">\n+<meta name=\"dc.created\" content=\"2021-04-14\">\n+<meta name=\"description\" content=\"index: E\">\n+<meta name=\"generator\" content=\"javadoc\/IndexWriter\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/stylesheet.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/script-dir\/jquery-ui.min.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/jquery-ui.overrides.css\" title=\"Style\">\n+<script type=\"text\/javascript\" src=\"..\/script.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/script-dir\/jquery-3.5.1.min.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/script-dir\/jquery-ui.min.js\"><\/script>\n+<\/head>\n+<body class=\"index-page\">\n+<script type=\"text\/javascript\">var pathtoroot = \"..\/\";\n+loadScripts(document, 'script');<\/script>\n+<noscript>\n+<div>JavaScript is disabled on your browser.<\/div>\n+<\/noscript>\n+<div class=\"flex-box\">\n+<header role=\"banner\" class=\"flex-header\">\n+<nav role=\"navigation\">\n+<!-- ========= START OF TOP NAVBAR ======= -->\n+<div class=\"top-nav\" id=\"navbar-top\">\n+<div class=\"skip-nav\"><a href=\"#skip-navbar-top\" title=\"Skip navigation links\">Skip navigation links<\/a><\/div>\n+<ul id=\"navbar-top-firstrow\" class=\"nav-list\" title=\"Navigation\">\n+<li><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/package-summary.html\">Package<\/a><\/li>\n+<li>Class<\/li>\n+<li><a href=\"..\/overview-tree.html\">Tree<\/a><\/li>\n+<li class=\"nav-bar-cell1-rev\">Index<\/li>\n+<li><a href=\"..\/help-doc.html\">Help<\/a><\/li>\n+<\/ul>\n+<\/div>\n+<div class=\"sub-nav\">\n+<div class=\"nav-list-search\"><label for=\"search\">SEARCH:<\/label>\n+<input type=\"text\" id=\"search\" value=\"search\" disabled=\"disabled\">\n+<input type=\"reset\" id=\"reset\" value=\"reset\" disabled=\"disabled\">\n+<\/div>\n+<\/div>\n+<!-- ========= END OF TOP NAVBAR ========= -->\n+<span class=\"skip-nav\" id=\"skip-navbar-top\"><\/span><\/nav>\n+<\/header>\n+<div class=\"flex-content\">\n+<main role=\"main\">\n+<div class=\"header\">\n+<h1>Index<\/h1>\n+<\/div>\n+<a href=\"index-1.html\">A<\/a>&nbsp;<a href=\"index-2.html\">B<\/a>&nbsp;<a href=\"index-3.html\">C<\/a>&nbsp;<a href=\"index-4.html\">D<\/a>&nbsp;<a href=\"index-5.html\">E<\/a>&nbsp;<a href=\"index-6.html\">F<\/a>&nbsp;<a href=\"index-7.html\">G<\/a>&nbsp;<a href=\"index-8.html\">I<\/a>&nbsp;<a href=\"index-9.html\">J<\/a>&nbsp;<a href=\"index-10.html\">L<\/a>&nbsp;<a href=\"index-11.html\">M<\/a>&nbsp;<a href=\"index-12.html\">N<\/a>&nbsp;<a href=\"index-13.html\">P<\/a>&nbsp;<a href=\"index-14.html\">R<\/a>&nbsp;<a href=\"index-15.html\">S<\/a>&nbsp;<a href=\"index-16.html\">T<\/a>&nbsp;<a href=\"index-17.html\">U<\/a>&nbsp;<a href=\"index-18.html\">V<\/a>&nbsp;<a href=\"index-19.html\">W<\/a>&nbsp;<br><a href=\"..\/allclasses-index.html\">All&nbsp;Classes<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/allpackages-index.html\">All&nbsp;Packages<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/constant-values.html\">Constant&nbsp;Field&nbsp;Values<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/serialized-form.html\">Serialized&nbsp;Form<\/a>\n+<h2 class=\"title\" id=\"I:E\">E<\/h2>\n+<dl class=\"index\">\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/CheckAt.html#EACH_INVOCATION\" class=\"member-name-link\">EACH_INVOCATION<\/a> - Enum constant in enum class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/CheckAt.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">CheckAt<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Default: Invoke the <a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/Check.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Check<\/code><\/a> method each time after invoking the associated <a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Test<\/code><\/a> method.<\/div>\n+<\/dd>\n+<\/dl>\n+<a href=\"index-1.html\">A<\/a>&nbsp;<a href=\"index-2.html\">B<\/a>&nbsp;<a href=\"index-3.html\">C<\/a>&nbsp;<a href=\"index-4.html\">D<\/a>&nbsp;<a href=\"index-5.html\">E<\/a>&nbsp;<a href=\"index-6.html\">F<\/a>&nbsp;<a href=\"index-7.html\">G<\/a>&nbsp;<a href=\"index-8.html\">I<\/a>&nbsp;<a href=\"index-9.html\">J<\/a>&nbsp;<a href=\"index-10.html\">L<\/a>&nbsp;<a href=\"index-11.html\">M<\/a>&nbsp;<a href=\"index-12.html\">N<\/a>&nbsp;<a href=\"index-13.html\">P<\/a>&nbsp;<a href=\"index-14.html\">R<\/a>&nbsp;<a href=\"index-15.html\">S<\/a>&nbsp;<a href=\"index-16.html\">T<\/a>&nbsp;<a href=\"index-17.html\">U<\/a>&nbsp;<a href=\"index-18.html\">V<\/a>&nbsp;<a href=\"index-19.html\">W<\/a>&nbsp;<br><a href=\"..\/allclasses-index.html\">All&nbsp;Classes<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/allpackages-index.html\">All&nbsp;Packages<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/constant-values.html\">Constant&nbsp;Field&nbsp;Values<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/serialized-form.html\">Serialized&nbsp;Form<\/a><\/main>\n+<\/div>\n+<\/div>\n+<\/body>\n+<\/html>\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/doc\/index-files\/index-5.html","additions":64,"deletions":0,"binary":false,"changes":64,"status":"added"},{"patch":"@@ -0,0 +1,93 @@\n+<!DOCTYPE HTML>\n+<html lang=\"en\">\n+<head>\n+<!-- Generated by javadoc (17) on Wed Apr 14 13:12:12 CEST 2021 -->\n+<title>F-Index<\/title>\n+<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n+<meta http-equiv=\"Content-Type\" content=\"text\/html; charset=utf-8\">\n+<meta name=\"dc.created\" content=\"2021-04-14\">\n+<meta name=\"description\" content=\"index: F\">\n+<meta name=\"generator\" content=\"javadoc\/IndexWriter\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/stylesheet.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/script-dir\/jquery-ui.min.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/jquery-ui.overrides.css\" title=\"Style\">\n+<script type=\"text\/javascript\" src=\"..\/script.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/script-dir\/jquery-3.5.1.min.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/script-dir\/jquery-ui.min.js\"><\/script>\n+<\/head>\n+<body class=\"index-page\">\n+<script type=\"text\/javascript\">var pathtoroot = \"..\/\";\n+loadScripts(document, 'script');<\/script>\n+<noscript>\n+<div>JavaScript is disabled on your browser.<\/div>\n+<\/noscript>\n+<div class=\"flex-box\">\n+<header role=\"banner\" class=\"flex-header\">\n+<nav role=\"navigation\">\n+<!-- ========= START OF TOP NAVBAR ======= -->\n+<div class=\"top-nav\" id=\"navbar-top\">\n+<div class=\"skip-nav\"><a href=\"#skip-navbar-top\" title=\"Skip navigation links\">Skip navigation links<\/a><\/div>\n+<ul id=\"navbar-top-firstrow\" class=\"nav-list\" title=\"Navigation\">\n+<li><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/package-summary.html\">Package<\/a><\/li>\n+<li>Class<\/li>\n+<li><a href=\"..\/overview-tree.html\">Tree<\/a><\/li>\n+<li class=\"nav-bar-cell1-rev\">Index<\/li>\n+<li><a href=\"..\/help-doc.html\">Help<\/a><\/li>\n+<\/ul>\n+<\/div>\n+<div class=\"sub-nav\">\n+<div class=\"nav-list-search\"><label for=\"search\">SEARCH:<\/label>\n+<input type=\"text\" id=\"search\" value=\"search\" disabled=\"disabled\">\n+<input type=\"reset\" id=\"reset\" value=\"reset\" disabled=\"disabled\">\n+<\/div>\n+<\/div>\n+<!-- ========= END OF TOP NAVBAR ========= -->\n+<span class=\"skip-nav\" id=\"skip-navbar-top\"><\/span><\/nav>\n+<\/header>\n+<div class=\"flex-content\">\n+<main role=\"main\">\n+<div class=\"header\">\n+<h1>Index<\/h1>\n+<\/div>\n+<a href=\"index-1.html\">A<\/a>&nbsp;<a href=\"index-2.html\">B<\/a>&nbsp;<a href=\"index-3.html\">C<\/a>&nbsp;<a href=\"index-4.html\">D<\/a>&nbsp;<a href=\"index-5.html\">E<\/a>&nbsp;<a href=\"index-6.html\">F<\/a>&nbsp;<a href=\"index-7.html\">G<\/a>&nbsp;<a href=\"index-8.html\">I<\/a>&nbsp;<a href=\"index-9.html\">J<\/a>&nbsp;<a href=\"index-10.html\">L<\/a>&nbsp;<a href=\"index-11.html\">M<\/a>&nbsp;<a href=\"index-12.html\">N<\/a>&nbsp;<a href=\"index-13.html\">P<\/a>&nbsp;<a href=\"index-14.html\">R<\/a>&nbsp;<a href=\"index-15.html\">S<\/a>&nbsp;<a href=\"index-16.html\">T<\/a>&nbsp;<a href=\"index-17.html\">U<\/a>&nbsp;<a href=\"index-18.html\">V<\/a>&nbsp;<a href=\"index-19.html\">W<\/a>&nbsp;<br><a href=\"..\/allclasses-index.html\">All&nbsp;Classes<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/allpackages-index.html\">All&nbsp;Packages<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/constant-values.html\">Constant&nbsp;Field&nbsp;Values<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/serialized-form.html\">Serialized&nbsp;Form<\/a>\n+<h2 class=\"title\" id=\"I:F\">F<\/h2>\n+<dl class=\"index\">\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IR.html#failOn()\" class=\"member-name-link\">failOn()<\/a> - Element in annotation interface jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IR.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\">IR<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Define a list of (node) regexes.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/Argument.html#FALSE\" class=\"member-name-link\">FALSE<\/a> - Enum constant in enum class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/Argument.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">Argument<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Provides the boolean value false.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#FIELD_ACCESS\" class=\"member-name-link\">FIELD_ACCESS<\/a> - Static variable in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">IRNode<\/a><\/dt>\n+<dd>&nbsp;<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/ForceCompile.html\" class=\"type-name-link\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\">ForceCompile<\/a> - Annotation Interface in <a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/package-summary.html\">jdk.test.lib.hotspot.ir_framework<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Force a compilation of the annotated <b>helper method<\/b> (not specifying <a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@Test<\/code><\/a>,\n+ <a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/Check.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@Check<\/code><\/a> or <a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@Run<\/code><\/a>) immediately at the specified level:\n+ \n+     <\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/ForceCompileClassInitializer.html\" class=\"type-name-link\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\">ForceCompileClassInitializer<\/a> - Annotation Interface in <a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/package-summary.html\">jdk.test.lib.hotspot.ir_framework<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Force a compilation of the static class initializer method (<code>&lt;clinit&gt;<\/code>) of the annotated test or helper class\n+ immediately at the specified level:\n+ \n+     <\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/ForceInline.html\" class=\"type-name-link\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\">ForceInline<\/a> - Annotation Interface in <a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/package-summary.html\">jdk.test.lib.hotspot.ir_framework<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Force an inlining of the annotated <b>helper method<\/b> (not specifying <a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@Test<\/code><\/a>, <a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/Check.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@Check<\/code><\/a>,\n+ or <a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@Run<\/code><\/a>).<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/CompLevel.html#forValue(int)\" class=\"member-name-link\">forValue(int)<\/a> - Static method in enum class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/CompLevel.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">CompLevel<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Get the compilation level enum from the specified integer.<\/div>\n+<\/dd>\n+<\/dl>\n+<a href=\"index-1.html\">A<\/a>&nbsp;<a href=\"index-2.html\">B<\/a>&nbsp;<a href=\"index-3.html\">C<\/a>&nbsp;<a href=\"index-4.html\">D<\/a>&nbsp;<a href=\"index-5.html\">E<\/a>&nbsp;<a href=\"index-6.html\">F<\/a>&nbsp;<a href=\"index-7.html\">G<\/a>&nbsp;<a href=\"index-8.html\">I<\/a>&nbsp;<a href=\"index-9.html\">J<\/a>&nbsp;<a href=\"index-10.html\">L<\/a>&nbsp;<a href=\"index-11.html\">M<\/a>&nbsp;<a href=\"index-12.html\">N<\/a>&nbsp;<a href=\"index-13.html\">P<\/a>&nbsp;<a href=\"index-14.html\">R<\/a>&nbsp;<a href=\"index-15.html\">S<\/a>&nbsp;<a href=\"index-16.html\">T<\/a>&nbsp;<a href=\"index-17.html\">U<\/a>&nbsp;<a href=\"index-18.html\">V<\/a>&nbsp;<a href=\"index-19.html\">W<\/a>&nbsp;<br><a href=\"..\/allclasses-index.html\">All&nbsp;Classes<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/allpackages-index.html\">All&nbsp;Packages<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/constant-values.html\">Constant&nbsp;Field&nbsp;Values<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/serialized-form.html\">Serialized&nbsp;Form<\/a><\/main>\n+<\/div>\n+<\/div>\n+<\/body>\n+<\/html>\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/doc\/index-files\/index-6.html","additions":93,"deletions":0,"binary":false,"changes":93,"status":"added"},{"patch":"@@ -0,0 +1,114 @@\n+<!DOCTYPE HTML>\n+<html lang=\"en\">\n+<head>\n+<!-- Generated by javadoc (17) on Wed Apr 14 13:12:12 CEST 2021 -->\n+<title>G-Index<\/title>\n+<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n+<meta http-equiv=\"Content-Type\" content=\"text\/html; charset=utf-8\">\n+<meta name=\"dc.created\" content=\"2021-04-14\">\n+<meta name=\"description\" content=\"index: G\">\n+<meta name=\"generator\" content=\"javadoc\/IndexWriter\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/stylesheet.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/script-dir\/jquery-ui.min.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/jquery-ui.overrides.css\" title=\"Style\">\n+<script type=\"text\/javascript\" src=\"..\/script.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/script-dir\/jquery-3.5.1.min.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/script-dir\/jquery-ui.min.js\"><\/script>\n+<\/head>\n+<body class=\"index-page\">\n+<script type=\"text\/javascript\">var pathtoroot = \"..\/\";\n+loadScripts(document, 'script');<\/script>\n+<noscript>\n+<div>JavaScript is disabled on your browser.<\/div>\n+<\/noscript>\n+<div class=\"flex-box\">\n+<header role=\"banner\" class=\"flex-header\">\n+<nav role=\"navigation\">\n+<!-- ========= START OF TOP NAVBAR ======= -->\n+<div class=\"top-nav\" id=\"navbar-top\">\n+<div class=\"skip-nav\"><a href=\"#skip-navbar-top\" title=\"Skip navigation links\">Skip navigation links<\/a><\/div>\n+<ul id=\"navbar-top-firstrow\" class=\"nav-list\" title=\"Navigation\">\n+<li><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/package-summary.html\">Package<\/a><\/li>\n+<li>Class<\/li>\n+<li><a href=\"..\/overview-tree.html\">Tree<\/a><\/li>\n+<li class=\"nav-bar-cell1-rev\">Index<\/li>\n+<li><a href=\"..\/help-doc.html\">Help<\/a><\/li>\n+<\/ul>\n+<\/div>\n+<div class=\"sub-nav\">\n+<div class=\"nav-list-search\"><label for=\"search\">SEARCH:<\/label>\n+<input type=\"text\" id=\"search\" value=\"search\" disabled=\"disabled\">\n+<input type=\"reset\" id=\"reset\" value=\"reset\" disabled=\"disabled\">\n+<\/div>\n+<\/div>\n+<!-- ========= END OF TOP NAVBAR ========= -->\n+<span class=\"skip-nav\" id=\"skip-navbar-top\"><\/span><\/nav>\n+<\/header>\n+<div class=\"flex-content\">\n+<main role=\"main\">\n+<div class=\"header\">\n+<h1>Index<\/h1>\n+<\/div>\n+<a href=\"index-1.html\">A<\/a>&nbsp;<a href=\"index-2.html\">B<\/a>&nbsp;<a href=\"index-3.html\">C<\/a>&nbsp;<a href=\"index-4.html\">D<\/a>&nbsp;<a href=\"index-5.html\">E<\/a>&nbsp;<a href=\"index-6.html\">F<\/a>&nbsp;<a href=\"index-7.html\">G<\/a>&nbsp;<a href=\"index-8.html\">I<\/a>&nbsp;<a href=\"index-9.html\">J<\/a>&nbsp;<a href=\"index-10.html\">L<\/a>&nbsp;<a href=\"index-11.html\">M<\/a>&nbsp;<a href=\"index-12.html\">N<\/a>&nbsp;<a href=\"index-13.html\">P<\/a>&nbsp;<a href=\"index-14.html\">R<\/a>&nbsp;<a href=\"index-15.html\">S<\/a>&nbsp;<a href=\"index-16.html\">T<\/a>&nbsp;<a href=\"index-17.html\">U<\/a>&nbsp;<a href=\"index-18.html\">V<\/a>&nbsp;<a href=\"index-19.html\">W<\/a>&nbsp;<br><a href=\"..\/allclasses-index.html\">All&nbsp;Classes<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/allpackages-index.html\">All&nbsp;Packages<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/constant-values.html\">Constant&nbsp;Field&nbsp;Values<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/serialized-form.html\">Serialized&nbsp;Form<\/a>\n+<h2 class=\"title\" id=\"I:G\">G<\/h2>\n+<dl class=\"index\">\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/TestFrameworkExecution.html#getClassObject(java.lang.String,java.lang.String)\" class=\"member-name-link\">getClassObject(String, String)<\/a> - Static method in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/TestFrameworkExecution.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestFrameworkExecution<\/a><\/dt>\n+<dd>&nbsp;<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRViolationException.html#getExceptionInfo()\" class=\"member-name-link\">getExceptionInfo()<\/a> - Method in exception jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRViolationException.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">IRViolationException<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Get some more detailed information about the violated IR rule(s) and how to reproduce it.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/TestVMException.html#getExceptionInfo()\" class=\"member-name-link\">getExceptionInfo()<\/a> - Method in exception jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/TestVMException.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestVMException<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Get some more detailed information about the exception thrown in the test VM and how to reproduce it.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/Scenario.html#getFlags()\" class=\"member-name-link\">getFlags()<\/a> - Method in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/Scenario.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">Scenario<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Get all scenario specific VM flags as defined in <a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/Scenario.html#%3Cinit%3E(int,java.lang.String...)\"><code>Scenario(int, String...)<\/code><\/a>.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/Scenario.html#getIndex()\" class=\"member-name-link\">getIndex()<\/a> - Method in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/Scenario.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">Scenario<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Get the unique scenario index as defined in <a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/Scenario.html#%3Cinit%3E(int,java.lang.String...)\"><code>Scenario(int, String...)<\/code><\/a>.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/TestFramework.html#getLastTestVMOutput()\" class=\"member-name-link\">getLastTestVMOutput()<\/a> - Static method in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/TestFramework.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestFramework<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Get the VM output of the test VM.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/AbstractInfo.html#getMethod(java.lang.Class,java.lang.String,java.lang.Class...)\" class=\"member-name-link\">getMethod(Class&lt;?&gt;, String, Class&lt;?&gt;...)<\/a> - Method in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/AbstractInfo.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">AbstractInfo<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Get the method object of the method <code>name<\/code> of class <code>c<\/code> with arguments <code>args<\/code>.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/AbstractInfo.html#getRandom()\" class=\"member-name-link\">getRandom()<\/a> - Method in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/AbstractInfo.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">AbstractInfo<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Get the initialized <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/util\/Random.html\" title=\"class or interface in java.util\" class=\"external-link\"><code>Random<\/code><\/a> object.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/RunInfo.html#getTest()\" class=\"member-name-link\">getTest()<\/a> - Method in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/RunInfo.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">RunInfo<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Get the associated test method object of this custom run test.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/TestInfo.html#getTest()\" class=\"member-name-link\">getTest()<\/a> - Method in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/TestInfo.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestInfo<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Get the associated test method object.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/RunInfo.html#getTest(java.lang.String)\" class=\"member-name-link\">getTest(String)<\/a> - Method in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/RunInfo.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">RunInfo<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Get the associated method object of the test method with the name <code>testName<\/code>.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/AbstractInfo.html#getTestClassMethod(java.lang.String,java.lang.Class...)\" class=\"member-name-link\">getTestClassMethod(String, Class&lt;?&gt;...)<\/a> - Method in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/AbstractInfo.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">AbstractInfo<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Get the method object of the method <code>name<\/code> of the test class with arguments <code>args<\/code>.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/Scenario.html#getTestVMOutput()\" class=\"member-name-link\">getTestVMOutput()<\/a> - Method in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/Scenario.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">Scenario<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Get the test VM output (stdout + stderr) of this scenario from the last execution of the framework.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/CompLevel.html#getValue()\" class=\"member-name-link\">getValue()<\/a> - Method in enum class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/CompLevel.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">CompLevel<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Get the compilation level as integer value.<\/div>\n+<\/dd>\n+<\/dl>\n+<a href=\"index-1.html\">A<\/a>&nbsp;<a href=\"index-2.html\">B<\/a>&nbsp;<a href=\"index-3.html\">C<\/a>&nbsp;<a href=\"index-4.html\">D<\/a>&nbsp;<a href=\"index-5.html\">E<\/a>&nbsp;<a href=\"index-6.html\">F<\/a>&nbsp;<a href=\"index-7.html\">G<\/a>&nbsp;<a href=\"index-8.html\">I<\/a>&nbsp;<a href=\"index-9.html\">J<\/a>&nbsp;<a href=\"index-10.html\">L<\/a>&nbsp;<a href=\"index-11.html\">M<\/a>&nbsp;<a href=\"index-12.html\">N<\/a>&nbsp;<a href=\"index-13.html\">P<\/a>&nbsp;<a href=\"index-14.html\">R<\/a>&nbsp;<a href=\"index-15.html\">S<\/a>&nbsp;<a href=\"index-16.html\">T<\/a>&nbsp;<a href=\"index-17.html\">U<\/a>&nbsp;<a href=\"index-18.html\">V<\/a>&nbsp;<a href=\"index-19.html\">W<\/a>&nbsp;<br><a href=\"..\/allclasses-index.html\">All&nbsp;Classes<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/allpackages-index.html\">All&nbsp;Packages<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/constant-values.html\">Constant&nbsp;Field&nbsp;Values<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/serialized-form.html\">Serialized&nbsp;Form<\/a><\/main>\n+<\/div>\n+<\/div>\n+<\/body>\n+<\/html>\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/doc\/index-files\/index-7.html","additions":114,"deletions":0,"binary":false,"changes":114,"status":"added"},{"patch":"@@ -0,0 +1,158 @@\n+<!DOCTYPE HTML>\n+<html lang=\"en\">\n+<head>\n+<!-- Generated by javadoc (17) on Wed Apr 14 13:12:12 CEST 2021 -->\n+<title>I-Index<\/title>\n+<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n+<meta http-equiv=\"Content-Type\" content=\"text\/html; charset=utf-8\">\n+<meta name=\"dc.created\" content=\"2021-04-14\">\n+<meta name=\"description\" content=\"index: I\">\n+<meta name=\"generator\" content=\"javadoc\/IndexWriter\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/stylesheet.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/script-dir\/jquery-ui.min.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/jquery-ui.overrides.css\" title=\"Style\">\n+<script type=\"text\/javascript\" src=\"..\/script.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/script-dir\/jquery-3.5.1.min.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/script-dir\/jquery-ui.min.js\"><\/script>\n+<\/head>\n+<body class=\"index-page\">\n+<script type=\"text\/javascript\">var pathtoroot = \"..\/\";\n+loadScripts(document, 'script');<\/script>\n+<noscript>\n+<div>JavaScript is disabled on your browser.<\/div>\n+<\/noscript>\n+<div class=\"flex-box\">\n+<header role=\"banner\" class=\"flex-header\">\n+<nav role=\"navigation\">\n+<!-- ========= START OF TOP NAVBAR ======= -->\n+<div class=\"top-nav\" id=\"navbar-top\">\n+<div class=\"skip-nav\"><a href=\"#skip-navbar-top\" title=\"Skip navigation links\">Skip navigation links<\/a><\/div>\n+<ul id=\"navbar-top-firstrow\" class=\"nav-list\" title=\"Navigation\">\n+<li><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/package-summary.html\">Package<\/a><\/li>\n+<li>Class<\/li>\n+<li><a href=\"..\/overview-tree.html\">Tree<\/a><\/li>\n+<li class=\"nav-bar-cell1-rev\">Index<\/li>\n+<li><a href=\"..\/help-doc.html\">Help<\/a><\/li>\n+<\/ul>\n+<\/div>\n+<div class=\"sub-nav\">\n+<div class=\"nav-list-search\"><label for=\"search\">SEARCH:<\/label>\n+<input type=\"text\" id=\"search\" value=\"search\" disabled=\"disabled\">\n+<input type=\"reset\" id=\"reset\" value=\"reset\" disabled=\"disabled\">\n+<\/div>\n+<\/div>\n+<!-- ========= END OF TOP NAVBAR ========= -->\n+<span class=\"skip-nav\" id=\"skip-navbar-top\"><\/span><\/nav>\n+<\/header>\n+<div class=\"flex-content\">\n+<main role=\"main\">\n+<div class=\"header\">\n+<h1>Index<\/h1>\n+<\/div>\n+<a href=\"index-1.html\">A<\/a>&nbsp;<a href=\"index-2.html\">B<\/a>&nbsp;<a href=\"index-3.html\">C<\/a>&nbsp;<a href=\"index-4.html\">D<\/a>&nbsp;<a href=\"index-5.html\">E<\/a>&nbsp;<a href=\"index-6.html\">F<\/a>&nbsp;<a href=\"index-7.html\">G<\/a>&nbsp;<a href=\"index-8.html\">I<\/a>&nbsp;<a href=\"index-9.html\">J<\/a>&nbsp;<a href=\"index-10.html\">L<\/a>&nbsp;<a href=\"index-11.html\">M<\/a>&nbsp;<a href=\"index-12.html\">N<\/a>&nbsp;<a href=\"index-13.html\">P<\/a>&nbsp;<a href=\"index-14.html\">R<\/a>&nbsp;<a href=\"index-15.html\">S<\/a>&nbsp;<a href=\"index-16.html\">T<\/a>&nbsp;<a href=\"index-17.html\">U<\/a>&nbsp;<a href=\"index-18.html\">V<\/a>&nbsp;<a href=\"index-19.html\">W<\/a>&nbsp;<br><a href=\"..\/allclasses-index.html\">All&nbsp;Classes<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/allpackages-index.html\">All&nbsp;Packages<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/constant-values.html\">Constant&nbsp;Field&nbsp;Values<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/serialized-form.html\">Serialized&nbsp;Form<\/a>\n+<h2 class=\"title\" id=\"I:I\">I<\/h2>\n+<dl class=\"index\">\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#INTRINSIC_OR_TYPE_CHECKED_INLINING_TRAP\" class=\"member-name-link\">INTRINSIC_OR_TYPE_CHECKED_INLINING_TRAP<\/a> - Static variable in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">IRNode<\/a><\/dt>\n+<dd>&nbsp;<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IR.html\" class=\"type-name-link\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\">IR<\/a> - Annotation Interface in <a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/package-summary.html\">jdk.test.lib.hotspot.ir_framework<\/a><\/dt>\n+<dd>\n+<div class=\"block\">This annotation is used to define a constraint\/rule\/check on the resulting IR of a test method (method with\n+ <a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@Test<\/code><\/a> annotation).<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html\" class=\"type-name-link\" title=\"class in jdk.test.lib.hotspot.ir_framework\">IRNode<\/a> - Class in <a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/package-summary.html\">jdk.test.lib.hotspot.ir_framework<\/a><\/dt>\n+<dd>\n+<div class=\"block\">This class provides default regex strings that can be used in <a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IR.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@IR<\/code><\/a> annotations to specify IR constraints.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html#%3Cinit%3E()\" class=\"member-name-link\">IRNode()<\/a> - Constructor for class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">IRNode<\/a><\/dt>\n+<dd>&nbsp;<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRs.html\" class=\"type-name-link\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\">IRs<\/a> - Annotation Interface in <a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/package-summary.html\">jdk.test.lib.hotspot.ir_framework<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Annotation to allow to specify multiple <a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IR.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@IR<\/code><\/a> annotations at a <a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@Test<\/code><\/a> method.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IRViolationException.html\" class=\"type-name-link\" title=\"class in jdk.test.lib.hotspot.ir_framework\">IRViolationException<\/a> - Exception in <a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/package-summary.html\">jdk.test.lib.hotspot.ir_framework<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Exception that is thrown if an <a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/IR.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>IR<\/code><\/a> rule\/constraint failed.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/TestInfo.html#isC1Compiled()\" class=\"member-name-link\">isC1Compiled()<\/a> - Method in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/TestInfo.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestInfo<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Returns a boolean indicating if the associated test method is C1 compiled.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/TestFramework.html#isC1Compiled(java.lang.reflect.Method)\" class=\"member-name-link\">isC1Compiled(Method)<\/a> - Static method in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/TestFramework.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestFramework<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Returns a boolean indicating if <code>m<\/code> is compiled with C1.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/AbstractInfo.html#isC2CompilationEnabled()\" class=\"member-name-link\">isC2CompilationEnabled()<\/a> - Method in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/AbstractInfo.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">AbstractInfo<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Returns a boolean indicating if the test VM runs with flags that allow C2 compilations.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/TestInfo.html#isC2Compiled()\" class=\"member-name-link\">isC2Compiled()<\/a> - Method in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/TestInfo.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestInfo<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Returns a boolean indicating if the associated test method is C2 compiled.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/TestFramework.html#isC2Compiled(java.lang.reflect.Method)\" class=\"member-name-link\">isC2Compiled(Method)<\/a> - Static method in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/TestFramework.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestFramework<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Returns a boolean indicating if <code>m<\/code> is compiled with C2.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/RunInfo.html#isCompilationSkipped()\" class=\"member-name-link\">isCompilationSkipped()<\/a> - Method in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/RunInfo.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">RunInfo<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Return a boolean indicating if the framework skipped a compilation of the associated test method after the warm-up\n+ due to VM flags not allowing a compilation on the requested level in <a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/Test.html#compLevel()\"><code>Test.compLevel()<\/code><\/a>.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/TestInfo.html#isCompilationSkipped()\" class=\"member-name-link\">isCompilationSkipped()<\/a> - Method in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/TestInfo.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestInfo<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Return a boolean indicating if the framework skipped a compilation after the warm-up due to VM flags not\n+ allowing a compilation on the requested level in <a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/Test.html#compLevel()\"><code>Test.compLevel()<\/code><\/a>.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/RunInfo.html#isCompilationSkipped(java.lang.String)\" class=\"member-name-link\">isCompilationSkipped(String)<\/a> - Method in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/RunInfo.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">RunInfo<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Return a boolean indicating if the framework skipped a compilation of the associated test method with the name\n+ <code>testName<\/code> after the warm-up due to VM flags not allowing a compilation on the requested level in\n+ <a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/Test.html#compLevel()\"><code>Test.compLevel()<\/code><\/a>.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/TestFramework.html#isCompiled(java.lang.reflect.Method)\" class=\"member-name-link\">isCompiled(Method)<\/a> - Static method in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/TestFramework.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestFramework<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Returns a boolean indicating if <code>m<\/code> is compiled at any level.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/TestFramework.html#isCompiledAtLevel(java.lang.reflect.Method,jdk.test.lib.hotspot.ir_framework.CompLevel)\" class=\"member-name-link\">isCompiledAtLevel(Method, CompLevel)<\/a> - Static method in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/TestFramework.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestFramework<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Returns a boolean indicating if <code>m<\/code> is compiled at the specified <code>compLevel<\/code>.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/TestInfo.html#isCompiledAtLevel(jdk.test.lib.hotspot.ir_framework.CompLevel)\" class=\"member-name-link\">isCompiledAtLevel(CompLevel)<\/a> - Method in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/TestInfo.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestInfo<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Returns a boolean indicating if the associated test method is compiled at <code>compLevel<\/code>.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/RunInfo.html#isTestC1Compiled()\" class=\"member-name-link\">isTestC1Compiled()<\/a> - Method in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/RunInfo.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">RunInfo<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Returns a boolean indicating if the associated test method is C1 compiled.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/RunInfo.html#isTestC1Compiled(java.lang.String)\" class=\"member-name-link\">isTestC1Compiled(String)<\/a> - Method in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/RunInfo.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">RunInfo<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Returns a boolean indicating if the associated test method with the name <code>testName<\/code> is C1 compiled.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/RunInfo.html#isTestC2Compiled()\" class=\"member-name-link\">isTestC2Compiled()<\/a> - Method in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/RunInfo.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">RunInfo<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Returns a boolean indicating if the associated test method is C2 compiled.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/RunInfo.html#isTestC2Compiled(java.lang.String)\" class=\"member-name-link\">isTestC2Compiled(String)<\/a> - Method in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/RunInfo.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">RunInfo<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Returns a boolean indicating if the associated test method with the name <code>testName<\/code> is C2 compiled.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/RunInfo.html#isTestCompiledAtLevel(java.lang.String,jdk.test.lib.hotspot.ir_framework.CompLevel)\" class=\"member-name-link\">isTestCompiledAtLevel(String, CompLevel)<\/a> - Method in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/RunInfo.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">RunInfo<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Returns a boolean indicating if the associated test method with the name <code>testName<\/code> is compiled at\n+ <code>compLevel<\/code>.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/RunInfo.html#isTestCompiledAtLevel(jdk.test.lib.hotspot.ir_framework.CompLevel)\" class=\"member-name-link\">isTestCompiledAtLevel(CompLevel)<\/a> - Method in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/RunInfo.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">RunInfo<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Returns a boolean indicating if the associated test method is compiled at <code>compLevel<\/code>.<\/div>\n+<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/AbstractInfo.html#isWarmUp()\" class=\"member-name-link\">isWarmUp()<\/a> - Method in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/AbstractInfo.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">AbstractInfo<\/a><\/dt>\n+<dd>\n+<div class=\"block\">Returns a boolean indicating if the framework is currently warming up the associated test.<\/div>\n+<\/dd>\n+<\/dl>\n+<a href=\"index-1.html\">A<\/a>&nbsp;<a href=\"index-2.html\">B<\/a>&nbsp;<a href=\"index-3.html\">C<\/a>&nbsp;<a href=\"index-4.html\">D<\/a>&nbsp;<a href=\"index-5.html\">E<\/a>&nbsp;<a href=\"index-6.html\">F<\/a>&nbsp;<a href=\"index-7.html\">G<\/a>&nbsp;<a href=\"index-8.html\">I<\/a>&nbsp;<a href=\"index-9.html\">J<\/a>&nbsp;<a href=\"index-10.html\">L<\/a>&nbsp;<a href=\"index-11.html\">M<\/a>&nbsp;<a href=\"index-12.html\">N<\/a>&nbsp;<a href=\"index-13.html\">P<\/a>&nbsp;<a href=\"index-14.html\">R<\/a>&nbsp;<a href=\"index-15.html\">S<\/a>&nbsp;<a href=\"index-16.html\">T<\/a>&nbsp;<a href=\"index-17.html\">U<\/a>&nbsp;<a href=\"index-18.html\">V<\/a>&nbsp;<a href=\"index-19.html\">W<\/a>&nbsp;<br><a href=\"..\/allclasses-index.html\">All&nbsp;Classes<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/allpackages-index.html\">All&nbsp;Packages<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/constant-values.html\">Constant&nbsp;Field&nbsp;Values<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/serialized-form.html\">Serialized&nbsp;Form<\/a><\/main>\n+<\/div>\n+<\/div>\n+<\/body>\n+<\/html>\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/doc\/index-files\/index-8.html","additions":158,"deletions":0,"binary":false,"changes":158,"status":"added"},{"patch":"@@ -0,0 +1,66 @@\n+<!DOCTYPE HTML>\n+<html lang=\"en\">\n+<head>\n+<!-- Generated by javadoc (17) on Wed Apr 14 13:12:12 CEST 2021 -->\n+<title>J-Index<\/title>\n+<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n+<meta http-equiv=\"Content-Type\" content=\"text\/html; charset=utf-8\">\n+<meta name=\"dc.created\" content=\"2021-04-14\">\n+<meta name=\"description\" content=\"index: J\">\n+<meta name=\"generator\" content=\"javadoc\/IndexWriter\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/stylesheet.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/script-dir\/jquery-ui.min.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/jquery-ui.overrides.css\" title=\"Style\">\n+<script type=\"text\/javascript\" src=\"..\/script.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/script-dir\/jquery-3.5.1.min.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/script-dir\/jquery-ui.min.js\"><\/script>\n+<\/head>\n+<body class=\"index-page\">\n+<script type=\"text\/javascript\">var pathtoroot = \"..\/\";\n+loadScripts(document, 'script');<\/script>\n+<noscript>\n+<div>JavaScript is disabled on your browser.<\/div>\n+<\/noscript>\n+<div class=\"flex-box\">\n+<header role=\"banner\" class=\"flex-header\">\n+<nav role=\"navigation\">\n+<!-- ========= START OF TOP NAVBAR ======= -->\n+<div class=\"top-nav\" id=\"navbar-top\">\n+<div class=\"skip-nav\"><a href=\"#skip-navbar-top\" title=\"Skip navigation links\">Skip navigation links<\/a><\/div>\n+<ul id=\"navbar-top-firstrow\" class=\"nav-list\" title=\"Navigation\">\n+<li><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/package-summary.html\">Package<\/a><\/li>\n+<li>Class<\/li>\n+<li><a href=\"..\/overview-tree.html\">Tree<\/a><\/li>\n+<li class=\"nav-bar-cell1-rev\">Index<\/li>\n+<li><a href=\"..\/help-doc.html\">Help<\/a><\/li>\n+<\/ul>\n+<\/div>\n+<div class=\"sub-nav\">\n+<div class=\"nav-list-search\"><label for=\"search\">SEARCH:<\/label>\n+<input type=\"text\" id=\"search\" value=\"search\" disabled=\"disabled\">\n+<input type=\"reset\" id=\"reset\" value=\"reset\" disabled=\"disabled\">\n+<\/div>\n+<\/div>\n+<!-- ========= END OF TOP NAVBAR ========= -->\n+<span class=\"skip-nav\" id=\"skip-navbar-top\"><\/span><\/nav>\n+<\/header>\n+<div class=\"flex-content\">\n+<main role=\"main\">\n+<div class=\"header\">\n+<h1>Index<\/h1>\n+<\/div>\n+<a href=\"index-1.html\">A<\/a>&nbsp;<a href=\"index-2.html\">B<\/a>&nbsp;<a href=\"index-3.html\">C<\/a>&nbsp;<a href=\"index-4.html\">D<\/a>&nbsp;<a href=\"index-5.html\">E<\/a>&nbsp;<a href=\"index-6.html\">F<\/a>&nbsp;<a href=\"index-7.html\">G<\/a>&nbsp;<a href=\"index-8.html\">I<\/a>&nbsp;<a href=\"index-9.html\">J<\/a>&nbsp;<a href=\"index-10.html\">L<\/a>&nbsp;<a href=\"index-11.html\">M<\/a>&nbsp;<a href=\"index-12.html\">N<\/a>&nbsp;<a href=\"index-13.html\">P<\/a>&nbsp;<a href=\"index-14.html\">R<\/a>&nbsp;<a href=\"index-15.html\">S<\/a>&nbsp;<a href=\"index-16.html\">T<\/a>&nbsp;<a href=\"index-17.html\">U<\/a>&nbsp;<a href=\"index-18.html\">V<\/a>&nbsp;<a href=\"index-19.html\">W<\/a>&nbsp;<br><a href=\"..\/allclasses-index.html\">All&nbsp;Classes<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/allpackages-index.html\">All&nbsp;Packages<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/constant-values.html\">Constant&nbsp;Field&nbsp;Values<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/serialized-form.html\">Serialized&nbsp;Form<\/a>\n+<h2 class=\"title\" id=\"I:J\">J<\/h2>\n+<dl class=\"index\">\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/package-summary.html\">jdk.test.lib.hotspot.ir_framework<\/a> - package jdk.test.lib.hotspot.ir_framework<\/dt>\n+<dd>&nbsp;<\/dd>\n+<dt><a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/TestFramework.html#JTREG_WHITELIST_FLAGS\" class=\"member-name-link\">JTREG_WHITELIST_FLAGS<\/a> - Static variable in class jdk.test.lib.hotspot.ir_framework.<a href=\"..\/jdk\/test\/lib\/hotspot\/ir_framework\/TestFramework.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestFramework<\/a><\/dt>\n+<dd>\n+<div class=\"block\">JTreg can define additional VM (-Dtest.vm.opts) and Javaoptions (-Dtest.java.opts) flags.<\/div>\n+<\/dd>\n+<\/dl>\n+<a href=\"index-1.html\">A<\/a>&nbsp;<a href=\"index-2.html\">B<\/a>&nbsp;<a href=\"index-3.html\">C<\/a>&nbsp;<a href=\"index-4.html\">D<\/a>&nbsp;<a href=\"index-5.html\">E<\/a>&nbsp;<a href=\"index-6.html\">F<\/a>&nbsp;<a href=\"index-7.html\">G<\/a>&nbsp;<a href=\"index-8.html\">I<\/a>&nbsp;<a href=\"index-9.html\">J<\/a>&nbsp;<a href=\"index-10.html\">L<\/a>&nbsp;<a href=\"index-11.html\">M<\/a>&nbsp;<a href=\"index-12.html\">N<\/a>&nbsp;<a href=\"index-13.html\">P<\/a>&nbsp;<a href=\"index-14.html\">R<\/a>&nbsp;<a href=\"index-15.html\">S<\/a>&nbsp;<a href=\"index-16.html\">T<\/a>&nbsp;<a href=\"index-17.html\">U<\/a>&nbsp;<a href=\"index-18.html\">V<\/a>&nbsp;<a href=\"index-19.html\">W<\/a>&nbsp;<br><a href=\"..\/allclasses-index.html\">All&nbsp;Classes<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/allpackages-index.html\">All&nbsp;Packages<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/constant-values.html\">Constant&nbsp;Field&nbsp;Values<\/a><span class=\"vertical-separator\">|<\/span><a href=\"..\/serialized-form.html\">Serialized&nbsp;Form<\/a><\/main>\n+<\/div>\n+<\/div>\n+<\/body>\n+<\/html>\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/doc\/index-files\/index-9.html","additions":66,"deletions":0,"binary":false,"changes":66,"status":"added"},{"patch":"@@ -0,0 +1,26 @@\n+<!DOCTYPE HTML>\n+<html lang=\"en\">\n+<head>\n+<!-- Generated by javadoc (17) on Wed Apr 14 13:12:12 CEST 2021 -->\n+<title>Generated Documentation (Untitled)<\/title>\n+<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n+<meta http-equiv=\"Content-Type\" content=\"text\/html; charset=utf-8\">\n+<meta name=\"dc.created\" content=\"2021-04-14\">\n+<meta name=\"description\" content=\"index redirect\">\n+<meta name=\"generator\" content=\"javadoc\/IndexRedirectWriter\">\n+<link rel=\"canonical\" href=\"jdk\/test\/lib\/hotspot\/ir_framework\/package-summary.html\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"stylesheet.css\" title=\"Style\">\n+<script type=\"text\/javascript\">window.location.replace('jdk\/test\/lib\/hotspot\/ir_framework\/package-summary.html')<\/script>\n+<noscript>\n+<meta http-equiv=\"Refresh\" content=\"0;jdk\/test\/lib\/hotspot\/ir_framework\/package-summary.html\">\n+<\/noscript>\n+<\/head>\n+<body class=\"index-redirect-page\">\n+<main role=\"main\">\n+<noscript>\n+<p>JavaScript is disabled on your browser.<\/p>\n+<\/noscript>\n+<p><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/package-summary.html\">jdk\/test\/lib\/hotspot\/ir_framework\/package-summary.html<\/a><\/p>\n+<\/main>\n+<\/body>\n+<\/html>\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/doc\/index.html","additions":26,"deletions":0,"binary":false,"changes":26,"status":"added"},{"patch":"@@ -0,0 +1,276 @@\n+<!DOCTYPE HTML>\n+<html lang=\"en\">\n+<head>\n+<!-- Generated by javadoc (17) on Wed Apr 14 13:12:12 CEST 2021 -->\n+<title>AbstractInfo<\/title>\n+<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n+<meta http-equiv=\"Content-Type\" content=\"text\/html; charset=utf-8\">\n+<meta name=\"dc.created\" content=\"2021-04-14\">\n+<meta name=\"description\" content=\"declaration: package: jdk.test.lib.hotspot.ir_framework, class: AbstractInfo\">\n+<meta name=\"generator\" content=\"javadoc\/ClassWriterImpl\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/..\/..\/..\/..\/stylesheet.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/..\/..\/..\/..\/script-dir\/jquery-ui.min.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/..\/..\/..\/..\/jquery-ui.overrides.css\" title=\"Style\">\n+<script type=\"text\/javascript\" src=\"..\/..\/..\/..\/..\/script.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/..\/..\/..\/..\/script-dir\/jquery-3.5.1.min.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/..\/..\/..\/..\/script-dir\/jquery-ui.min.js\"><\/script>\n+<\/head>\n+<body class=\"class-declaration-page\">\n+<script type=\"text\/javascript\">var evenRowColor = \"even-row-color\";\n+var oddRowColor = \"odd-row-color\";\n+var tableTab = \"table-tab\";\n+var activeTableTab = \"active-table-tab\";\n+var pathtoroot = \"..\/..\/..\/..\/..\/\";\n+loadScripts(document, 'script');<\/script>\n+<noscript>\n+<div>JavaScript is disabled on your browser.<\/div>\n+<\/noscript>\n+<div class=\"flex-box\">\n+<header role=\"banner\" class=\"flex-header\">\n+<nav role=\"navigation\">\n+<!-- ========= START OF TOP NAVBAR ======= -->\n+<div class=\"top-nav\" id=\"navbar-top\">\n+<div class=\"skip-nav\"><a href=\"#skip-navbar-top\" title=\"Skip navigation links\">Skip navigation links<\/a><\/div>\n+<ul id=\"navbar-top-firstrow\" class=\"nav-list\" title=\"Navigation\">\n+<li><a href=\"package-summary.html\">Package<\/a><\/li>\n+<li class=\"nav-bar-cell1-rev\">Class<\/li>\n+<li><a href=\"package-tree.html\">Tree<\/a><\/li>\n+<li><a href=\"..\/..\/..\/..\/..\/index-files\/index-1.html\">Index<\/a><\/li>\n+<li><a href=\"..\/..\/..\/..\/..\/help-doc.html\">Help<\/a><\/li>\n+<\/ul>\n+<\/div>\n+<div class=\"sub-nav\">\n+<div>\n+<ul class=\"sub-nav-list\">\n+<li>Summary:&nbsp;<\/li>\n+<li>Nested&nbsp;|&nbsp;<\/li>\n+<li><a href=\"#field-summary\">Field<\/a>&nbsp;|&nbsp;<\/li>\n+<li>Constr&nbsp;|&nbsp;<\/li>\n+<li><a href=\"#method-summary\">Method<\/a><\/li>\n+<\/ul>\n+<ul class=\"sub-nav-list\">\n+<li>Detail:&nbsp;<\/li>\n+<li><a href=\"#field-detail\">Field<\/a>&nbsp;|&nbsp;<\/li>\n+<li>Constr&nbsp;|&nbsp;<\/li>\n+<li><a href=\"#method-detail\">Method<\/a><\/li>\n+<\/ul>\n+<\/div>\n+<div class=\"nav-list-search\"><label for=\"search\">SEARCH:<\/label>\n+<input type=\"text\" id=\"search\" value=\"search\" disabled=\"disabled\">\n+<input type=\"reset\" id=\"reset\" value=\"reset\" disabled=\"disabled\">\n+<\/div>\n+<\/div>\n+<!-- ========= END OF TOP NAVBAR ========= -->\n+<span class=\"skip-nav\" id=\"skip-navbar-top\"><\/span><\/nav>\n+<\/header>\n+<div class=\"flex-content\">\n+<main role=\"main\">\n+<!-- ======== START OF CLASS DATA ======== -->\n+<div class=\"header\">\n+<div class=\"sub-title\"><span class=\"package-label-in-type\">Package<\/span>&nbsp;<a href=\"package-summary.html\">jdk.test.lib.hotspot.ir_framework<\/a><\/div>\n+<h1 title=\"Class AbstractInfo\" class=\"title\">Class AbstractInfo<\/h1>\n+<\/div>\n+<div class=\"inheritance\" title=\"Inheritance Tree\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html\" title=\"class or interface in java.lang\" class=\"external-link\">java.lang.Object<\/a>\n+<div class=\"inheritance\">jdk.test.lib.hotspot.ir_framework.AbstractInfo<\/div>\n+<\/div>\n+<section class=\"description\">\n+<dl class=\"notes\">\n+<dt>Direct Known Subclasses:<\/dt>\n+<dd><code><a href=\"RunInfo.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">RunInfo<\/a><\/code>, <code><a href=\"TestInfo.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestInfo<\/a><\/code><\/dd>\n+<\/dl>\n+<hr>\n+<div class=\"type-signature\"><span class=\"modifiers\">public abstract class <\/span><span class=\"element-name type-name-label\">AbstractInfo<\/span>\n+<span class=\"extends-implements\">extends <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html\" title=\"class or interface in java.lang\" class=\"external-link\">Object<\/a><\/span><\/div>\n+<div class=\"block\">Base info class which provides some useful utility methods and information about a test.\n+ <p>\n+ <b>Base tests<\/b> and <b>checked tests<\/b> use <a href=\"TestInfo.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\"><code>TestInfo<\/code><\/a> while <b>custom run tests<\/b> use <a href=\"RunInfo.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\"><code>RunInfo<\/code><\/a>.<\/div>\n+<dl class=\"notes\">\n+<dt>See Also:<\/dt>\n+<dd><a href=\"Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Test<\/code><\/a>, \n+<a href=\"Check.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Check<\/code><\/a>, \n+<a href=\"Run.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Run<\/code><\/a><\/dd>\n+<\/dl>\n+<\/section>\n+<section class=\"summary\">\n+<ul class=\"summary-list\">\n+<!-- =========== FIELD SUMMARY =========== -->\n+<li>\n+<section class=\"field-summary\" id=\"field-summary\">\n+<h2>Field Summary<\/h2>\n+<div class=\"caption\"><span>Fields<\/span><\/div>\n+<div class=\"summary-table three-column-summary\">\n+<div class=\"table-header col-first\">Modifier and Type<\/div>\n+<div class=\"table-header col-second\">Field<\/div>\n+<div class=\"table-header col-last\">Description<\/div>\n+<div class=\"col-first even-row-color\"><code>protected <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Class.html\" title=\"class or interface in java.lang\" class=\"external-link\">Class<\/a>&lt;?&gt;<\/code><\/div>\n+<div class=\"col-second even-row-color\"><code><a href=\"#testClass\" class=\"member-name-link\">testClass<\/a><\/code><\/div>\n+<div class=\"col-last even-row-color\">&nbsp;<\/div>\n+<\/div>\n+<\/section>\n+<\/li>\n+<!-- ========== METHOD SUMMARY =========== -->\n+<li>\n+<section class=\"method-summary\" id=\"method-summary\">\n+<h2>Method Summary<\/h2>\n+<div id=\"method-summary-table\">\n+<div class=\"table-tabs\" role=\"tablist\" aria-orientation=\"horizontal\"><button id=\"method-summary-table-tab0\" role=\"tab\" aria-selected=\"true\" aria-controls=\"method-summary-table.tabpanel\" tabindex=\"0\" onkeydown=\"switchTab(event)\" onclick=\"show('method-summary-table', 'method-summary-table', 3)\" class=\"active-table-tab\">All Methods<\/button><button id=\"method-summary-table-tab2\" role=\"tab\" aria-selected=\"false\" aria-controls=\"method-summary-table.tabpanel\" tabindex=\"-1\" onkeydown=\"switchTab(event)\" onclick=\"show('method-summary-table', 'method-summary-table-tab2', 3)\" class=\"table-tab\">Instance Methods<\/button><button id=\"method-summary-table-tab4\" role=\"tab\" aria-selected=\"false\" aria-controls=\"method-summary-table.tabpanel\" tabindex=\"-1\" onkeydown=\"switchTab(event)\" onclick=\"show('method-summary-table', 'method-summary-table-tab4', 3)\" class=\"table-tab\">Concrete Methods<\/button><\/div>\n+<div id=\"method-summary-table.tabpanel\" role=\"tabpanel\">\n+<div class=\"summary-table three-column-summary\" aria-labelledby=\"method-summary-table-tab0\">\n+<div class=\"table-header col-first\">Modifier and Type<\/div>\n+<div class=\"table-header col-second\">Method<\/div>\n+<div class=\"table-header col-last\">Description<\/div>\n+<div class=\"col-first even-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\"><code><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/reflect\/Method.html\" title=\"class or interface in java.lang.reflect\" class=\"external-link\">Method<\/a><\/code><\/div>\n+<div class=\"col-second even-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\"><code><a href=\"#getMethod(java.lang.Class,java.lang.String,java.lang.Class...)\" class=\"member-name-link\">getMethod<\/a>&#8203;(<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Class.html\" title=\"class or interface in java.lang\" class=\"external-link\">Class<\/a>&lt;?&gt;&nbsp;c,\n+ <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a>&nbsp;name,\n+ <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Class.html\" title=\"class or interface in java.lang\" class=\"external-link\">Class<\/a>&lt;?&gt;...&nbsp;args)<\/code><\/div>\n+<div class=\"col-last even-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\">\n+<div class=\"block\">Get the method object of the method <code>name<\/code> of class <code>c<\/code> with arguments <code>args<\/code>.<\/div>\n+<\/div>\n+<div class=\"col-first odd-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\"><code><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/util\/Random.html\" title=\"class or interface in java.util\" class=\"external-link\">Random<\/a><\/code><\/div>\n+<div class=\"col-second odd-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\"><code><a href=\"#getRandom()\" class=\"member-name-link\">getRandom<\/a>()<\/code><\/div>\n+<div class=\"col-last odd-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\">\n+<div class=\"block\">Get the initialized <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/util\/Random.html\" title=\"class or interface in java.util\" class=\"external-link\"><code>Random<\/code><\/a> object.<\/div>\n+<\/div>\n+<div class=\"col-first even-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\"><code><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/reflect\/Method.html\" title=\"class or interface in java.lang.reflect\" class=\"external-link\">Method<\/a><\/code><\/div>\n+<div class=\"col-second even-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\"><code><a href=\"#getTestClassMethod(java.lang.String,java.lang.Class...)\" class=\"member-name-link\">getTestClassMethod<\/a>&#8203;(<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a>&nbsp;name,\n+ <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Class.html\" title=\"class or interface in java.lang\" class=\"external-link\">Class<\/a>&lt;?&gt;...&nbsp;args)<\/code><\/div>\n+<div class=\"col-last even-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\">\n+<div class=\"block\">Get the method object of the method <code>name<\/code> of the test class with arguments <code>args<\/code>.<\/div>\n+<\/div>\n+<div class=\"col-first odd-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\"><code>boolean<\/code><\/div>\n+<div class=\"col-second odd-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\"><code><a href=\"#isC2CompilationEnabled()\" class=\"member-name-link\">isC2CompilationEnabled<\/a>()<\/code><\/div>\n+<div class=\"col-last odd-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\">\n+<div class=\"block\">Returns a boolean indicating if the test VM runs with flags that allow C2 compilations.<\/div>\n+<\/div>\n+<div class=\"col-first even-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\"><code>boolean<\/code><\/div>\n+<div class=\"col-second even-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\"><code><a href=\"#isWarmUp()\" class=\"member-name-link\">isWarmUp<\/a>()<\/code><\/div>\n+<div class=\"col-last even-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\">\n+<div class=\"block\">Returns a boolean indicating if the framework is currently warming up the associated test.<\/div>\n+<\/div>\n+<div class=\"col-first odd-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\"><code>boolean<\/code><\/div>\n+<div class=\"col-second odd-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\"><code><a href=\"#toggleBoolean()\" class=\"member-name-link\">toggleBoolean<\/a>()<\/code><\/div>\n+<div class=\"col-last odd-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\">\n+<div class=\"block\">Returns a different boolean each time this method is invoked (switching between <code>false<\/code> and <code>true<\/code>).<\/div>\n+<\/div>\n+<\/div>\n+<\/div>\n+<\/div>\n+<div class=\"inherited-list\">\n+<h3 id=\"methods-inherited-from-class-java.lang.Object\">Methods inherited from class&nbsp;java.lang.<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html\" title=\"class or interface in java.lang\" class=\"external-link\">Object<\/a><\/h3>\n+<code><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#clone()\" title=\"class or interface in java.lang\" class=\"external-link\">clone<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#equals(java.lang.Object)\" title=\"class or interface in java.lang\" class=\"external-link\">equals<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#finalize()\" title=\"class or interface in java.lang\" class=\"external-link\">finalize<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#getClass()\" title=\"class or interface in java.lang\" class=\"external-link\">getClass<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#hashCode()\" title=\"class or interface in java.lang\" class=\"external-link\">hashCode<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#notify()\" title=\"class or interface in java.lang\" class=\"external-link\">notify<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#notifyAll()\" title=\"class or interface in java.lang\" class=\"external-link\">notifyAll<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#toString()\" title=\"class or interface in java.lang\" class=\"external-link\">toString<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#wait()\" title=\"class or interface in java.lang\" class=\"external-link\">wait<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#wait(long)\" title=\"class or interface in java.lang\" class=\"external-link\">wait<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#wait(long,int)\" title=\"class or interface in java.lang\" class=\"external-link\">wait<\/a><\/code><\/div>\n+<\/section>\n+<\/li>\n+<\/ul>\n+<\/section>\n+<section class=\"details\">\n+<ul class=\"details-list\">\n+<!-- ============ FIELD DETAIL =========== -->\n+<li>\n+<section class=\"field-details\" id=\"field-detail\">\n+<h2>Field Details<\/h2>\n+<ul class=\"member-list\">\n+<li>\n+<section class=\"detail\" id=\"testClass\">\n+<h3>testClass<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">protected final<\/span>&nbsp;<span class=\"return-type\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Class.html\" title=\"class or interface in java.lang\" class=\"external-link\">Class<\/a>&lt;?&gt;<\/span>&nbsp;<span class=\"element-name\">testClass<\/span><\/div>\n+<\/section>\n+<\/li>\n+<\/ul>\n+<\/section>\n+<\/li>\n+<!-- ============ METHOD DETAIL ========== -->\n+<li>\n+<section class=\"method-details\" id=\"method-detail\">\n+<h2>Method Details<\/h2>\n+<ul class=\"member-list\">\n+<li>\n+<section class=\"detail\" id=\"toggleBoolean()\">\n+<h3>toggleBoolean<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public<\/span>&nbsp;<span class=\"return-type\">boolean<\/span>&nbsp;<span class=\"element-name\">toggleBoolean<\/span>()<\/div>\n+<div class=\"block\">Returns a different boolean each time this method is invoked (switching between <code>false<\/code> and <code>true<\/code>).\n+ The first invocation returns <code>false<\/code>.<\/div>\n+<dl class=\"notes\">\n+<dt>Returns:<\/dt>\n+<dd>an inverted boolean of the result of the last invocation of this method.<\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"getRandom()\">\n+<h3>getRandom<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public<\/span>&nbsp;<span class=\"return-type\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/util\/Random.html\" title=\"class or interface in java.util\" class=\"external-link\">Random<\/a><\/span>&nbsp;<span class=\"element-name\">getRandom<\/span>()<\/div>\n+<div class=\"block\">Get the initialized <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/util\/Random.html\" title=\"class or interface in java.util\" class=\"external-link\"><code>Random<\/code><\/a> object.<\/div>\n+<dl class=\"notes\">\n+<dt>Returns:<\/dt>\n+<dd>the random object.<\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"isWarmUp()\">\n+<h3>isWarmUp<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public<\/span>&nbsp;<span class=\"return-type\">boolean<\/span>&nbsp;<span class=\"element-name\">isWarmUp<\/span>()<\/div>\n+<div class=\"block\">Returns a boolean indicating if the framework is currently warming up the associated test.<\/div>\n+<dl class=\"notes\">\n+<dt>Returns:<\/dt>\n+<dd>the warm-up status of the associated test.<\/dd>\n+<dt>See Also:<\/dt>\n+<dd><a href=\"Warmup.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Warmup<\/code><\/a><\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"getMethod(java.lang.Class,java.lang.String,java.lang.Class...)\">\n+<h3>getMethod<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public<\/span>&nbsp;<span class=\"return-type\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/reflect\/Method.html\" title=\"class or interface in java.lang.reflect\" class=\"external-link\">Method<\/a><\/span>&nbsp;<span class=\"element-name\">getMethod<\/span>&#8203;<span class=\"parameters\">(<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Class.html\" title=\"class or interface in java.lang\" class=\"external-link\">Class<\/a>&lt;?&gt;&nbsp;c,\n+ <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a>&nbsp;name,\n+ <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Class.html\" title=\"class or interface in java.lang\" class=\"external-link\">Class<\/a>&lt;?&gt;...&nbsp;args)<\/span><\/div>\n+<div class=\"block\">Get the method object of the method <code>name<\/code> of class <code>c<\/code> with arguments <code>args<\/code>.<\/div>\n+<dl class=\"notes\">\n+<dt>Parameters:<\/dt>\n+<dd><code>c<\/code> - the class containing the method.<\/dd>\n+<dd><code>name<\/code> - the name of the method.<\/dd>\n+<dd><code>args<\/code> - the arguments of the method, leave empty if no arguments.<\/dd>\n+<dt>Returns:<\/dt>\n+<dd>the method object of the requested method.<\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"getTestClassMethod(java.lang.String,java.lang.Class...)\">\n+<h3>getTestClassMethod<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public<\/span>&nbsp;<span class=\"return-type\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/reflect\/Method.html\" title=\"class or interface in java.lang.reflect\" class=\"external-link\">Method<\/a><\/span>&nbsp;<span class=\"element-name\">getTestClassMethod<\/span>&#8203;<span class=\"parameters\">(<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a>&nbsp;name,\n+ <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Class.html\" title=\"class or interface in java.lang\" class=\"external-link\">Class<\/a>&lt;?&gt;...&nbsp;args)<\/span><\/div>\n+<div class=\"block\">Get the method object of the method <code>name<\/code> of the test class with arguments <code>args<\/code>.<\/div>\n+<dl class=\"notes\">\n+<dt>Parameters:<\/dt>\n+<dd><code>name<\/code> - the name of the method in the test class.<\/dd>\n+<dd><code>args<\/code> - the arguments of the method, leave empty if no arguments.<\/dd>\n+<dt>Returns:<\/dt>\n+<dd>the method object of the requested method in the test class.<\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"isC2CompilationEnabled()\">\n+<h3>isC2CompilationEnabled<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public<\/span>&nbsp;<span class=\"return-type\">boolean<\/span>&nbsp;<span class=\"element-name\">isC2CompilationEnabled<\/span>()<\/div>\n+<div class=\"block\">Returns a boolean indicating if the test VM runs with flags that allow C2 compilations.<\/div>\n+<dl class=\"notes\">\n+<dt>Returns:<\/dt>\n+<dd><code>true<\/code> if C2 compilations are allowed;\n+         <code>false<\/code> otherwise (run with <code>-XX:TieredStopAtLevel={1,2,3}, -XX:-UseCompiler<\/code>).<\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<\/ul>\n+<\/section>\n+<\/li>\n+<\/ul>\n+<\/section>\n+<!-- ========= END OF CLASS DATA ========= -->\n+<\/main>\n+<\/div>\n+<\/div>\n+<\/body>\n+<\/html>\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/doc\/jdk\/test\/lib\/hotspot\/ir_framework\/AbstractInfo.html","additions":276,"deletions":0,"binary":false,"changes":276,"status":"added"},{"patch":"@@ -0,0 +1,331 @@\n+<!DOCTYPE HTML>\n+<html lang=\"en\">\n+<head>\n+<!-- Generated by javadoc (17) on Wed Apr 14 13:12:12 CEST 2021 -->\n+<title>Argument<\/title>\n+<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n+<meta http-equiv=\"Content-Type\" content=\"text\/html; charset=utf-8\">\n+<meta name=\"dc.created\" content=\"2021-04-14\">\n+<meta name=\"description\" content=\"declaration: package: jdk.test.lib.hotspot.ir_framework, enum: Argument\">\n+<meta name=\"generator\" content=\"javadoc\/ClassWriterImpl\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/..\/..\/..\/..\/stylesheet.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/..\/..\/..\/..\/script-dir\/jquery-ui.min.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/..\/..\/..\/..\/jquery-ui.overrides.css\" title=\"Style\">\n+<script type=\"text\/javascript\" src=\"..\/..\/..\/..\/..\/script.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/..\/..\/..\/..\/script-dir\/jquery-3.5.1.min.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/..\/..\/..\/..\/script-dir\/jquery-ui.min.js\"><\/script>\n+<\/head>\n+<body class=\"class-declaration-page\">\n+<script type=\"text\/javascript\">var evenRowColor = \"even-row-color\";\n+var oddRowColor = \"odd-row-color\";\n+var tableTab = \"table-tab\";\n+var activeTableTab = \"active-table-tab\";\n+var pathtoroot = \"..\/..\/..\/..\/..\/\";\n+loadScripts(document, 'script');<\/script>\n+<noscript>\n+<div>JavaScript is disabled on your browser.<\/div>\n+<\/noscript>\n+<div class=\"flex-box\">\n+<header role=\"banner\" class=\"flex-header\">\n+<nav role=\"navigation\">\n+<!-- ========= START OF TOP NAVBAR ======= -->\n+<div class=\"top-nav\" id=\"navbar-top\">\n+<div class=\"skip-nav\"><a href=\"#skip-navbar-top\" title=\"Skip navigation links\">Skip navigation links<\/a><\/div>\n+<ul id=\"navbar-top-firstrow\" class=\"nav-list\" title=\"Navigation\">\n+<li><a href=\"package-summary.html\">Package<\/a><\/li>\n+<li class=\"nav-bar-cell1-rev\">Class<\/li>\n+<li><a href=\"package-tree.html\">Tree<\/a><\/li>\n+<li><a href=\"..\/..\/..\/..\/..\/index-files\/index-1.html\">Index<\/a><\/li>\n+<li><a href=\"..\/..\/..\/..\/..\/help-doc.html\">Help<\/a><\/li>\n+<\/ul>\n+<\/div>\n+<div class=\"sub-nav\">\n+<div>\n+<ul class=\"sub-nav-list\">\n+<li>Summary:&nbsp;<\/li>\n+<li><a href=\"#nested-class-summary\">Nested<\/a>&nbsp;|&nbsp;<\/li>\n+<li><a href=\"#enum-constant-summary\">Enum Constants<\/a>&nbsp;|&nbsp;<\/li>\n+<li>Field&nbsp;|&nbsp;<\/li>\n+<li><a href=\"#method-summary\">Method<\/a><\/li>\n+<\/ul>\n+<ul class=\"sub-nav-list\">\n+<li>Detail:&nbsp;<\/li>\n+<li><a href=\"#enum-constant-detail\">Enum Constants<\/a>&nbsp;|&nbsp;<\/li>\n+<li>Field&nbsp;|&nbsp;<\/li>\n+<li><a href=\"#method-detail\">Method<\/a><\/li>\n+<\/ul>\n+<\/div>\n+<div class=\"nav-list-search\"><label for=\"search\">SEARCH:<\/label>\n+<input type=\"text\" id=\"search\" value=\"search\" disabled=\"disabled\">\n+<input type=\"reset\" id=\"reset\" value=\"reset\" disabled=\"disabled\">\n+<\/div>\n+<\/div>\n+<!-- ========= END OF TOP NAVBAR ========= -->\n+<span class=\"skip-nav\" id=\"skip-navbar-top\"><\/span><\/nav>\n+<\/header>\n+<div class=\"flex-content\">\n+<main role=\"main\">\n+<!-- ======== START OF CLASS DATA ======== -->\n+<div class=\"header\">\n+<div class=\"sub-title\"><span class=\"package-label-in-type\">Package<\/span>&nbsp;<a href=\"package-summary.html\">jdk.test.lib.hotspot.ir_framework<\/a><\/div>\n+<h1 title=\"Enum Class Argument\" class=\"title\">Enum Class Argument<\/h1>\n+<\/div>\n+<div class=\"inheritance\" title=\"Inheritance Tree\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html\" title=\"class or interface in java.lang\" class=\"external-link\">java.lang.Object<\/a>\n+<div class=\"inheritance\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Enum.html\" title=\"class or interface in java.lang\" class=\"external-link\">java.lang.Enum<\/a>&lt;<a href=\"Argument.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">Argument<\/a>&gt;\n+<div class=\"inheritance\">jdk.test.lib.hotspot.ir_framework.Argument<\/div>\n+<\/div>\n+<\/div>\n+<section class=\"description\">\n+<dl class=\"notes\">\n+<dt>All Implemented Interfaces:<\/dt>\n+<dd><code><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/io\/Serializable.html\" title=\"class or interface in java.io\" class=\"external-link\">Serializable<\/a><\/code>, <code><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Comparable.html\" title=\"class or interface in java.lang\" class=\"external-link\">Comparable<\/a>&lt;<a href=\"Argument.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">Argument<\/a>&gt;<\/code>, <code><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/constant\/Constable.html\" title=\"class or interface in java.lang.constant\" class=\"external-link\">Constable<\/a><\/code><\/dd>\n+<\/dl>\n+<hr>\n+<div class=\"type-signature\"><span class=\"modifiers\">public enum <\/span><span class=\"element-name type-name-label\">Argument<\/span>\n+<span class=\"extends-implements\">extends <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Enum.html\" title=\"class or interface in java.lang\" class=\"external-link\">Enum<\/a>&lt;<a href=\"Argument.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">Argument<\/a>&gt;<\/span><\/div>\n+<div class=\"block\">Well-defined argument values that can be used in the <a href=\"Arguments.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Arguments<\/code><\/a> annotation at a <a href=\"Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Test<\/code><\/a> method for a\n+ <b>base test<\/b> or a <b>checked test<\/b>.<\/div>\n+<dl class=\"notes\">\n+<dt>See Also:<\/dt>\n+<dd><a href=\"Arguments.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Arguments<\/code><\/a>, \n+<a href=\"Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Test<\/code><\/a>, \n+<a href=\"Check.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Check<\/code><\/a><\/dd>\n+<\/dl>\n+<\/section>\n+<section class=\"summary\">\n+<ul class=\"summary-list\">\n+<!-- ======== NESTED CLASS SUMMARY ======== -->\n+<li>\n+<section class=\"nested-class-summary\" id=\"nested-class-summary\">\n+<h2>Nested Class Summary<\/h2>\n+<div class=\"inherited-list\">\n+<h2 id=\"nested-classes-inherited-from-class-java.lang.Enum\">Nested classes\/interfaces inherited from class&nbsp;java.lang.<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Enum.html\" title=\"class or interface in java.lang\" class=\"external-link\">Enum<\/a><\/h2>\n+<code><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Enum.EnumDesc.html\" title=\"class or interface in java.lang\" class=\"external-link\">Enum.EnumDesc<\/a>&lt;<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Enum.EnumDesc.html\" title=\"class or interface in java.lang\" class=\"external-link\">E<\/a> extends <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Enum.html\" title=\"class or interface in java.lang\" class=\"external-link\">Enum<\/a>&lt;<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Enum.EnumDesc.html\" title=\"class or interface in java.lang\" class=\"external-link\">E<\/a>&gt;&gt;<\/code><\/div>\n+<\/section>\n+<\/li>\n+<!-- =========== ENUM CONSTANT SUMMARY =========== -->\n+<li>\n+<section class=\"constants-summary\" id=\"enum-constant-summary\">\n+<h2>Enum Constant Summary<\/h2>\n+<div class=\"caption\"><span>Enum Constants<\/span><\/div>\n+<div class=\"summary-table two-column-summary\">\n+<div class=\"table-header col-first\">Enum Constant<\/div>\n+<div class=\"table-header col-last\">Description<\/div>\n+<div class=\"col-first even-row-color\"><code><a href=\"#BOOLEAN_TOGGLE_FIRST_FALSE\" class=\"member-name-link\">BOOLEAN_TOGGLE_FIRST_FALSE<\/a><\/code><\/div>\n+<div class=\"col-last even-row-color\">\n+<div class=\"block\">Provides a different boolean value on each test invocation, starting with false.<\/div>\n+<\/div>\n+<div class=\"col-first odd-row-color\"><code><a href=\"#BOOLEAN_TOGGLE_FIRST_TRUE\" class=\"member-name-link\">BOOLEAN_TOGGLE_FIRST_TRUE<\/a><\/code><\/div>\n+<div class=\"col-last odd-row-color\">\n+<div class=\"block\">Provides a different boolean value on each test invocation, starting with true.<\/div>\n+<\/div>\n+<div class=\"col-first even-row-color\"><code><a href=\"#DEFAULT\" class=\"member-name-link\">DEFAULT<\/a><\/code><\/div>\n+<div class=\"col-last even-row-color\">\n+<div class=\"block\">Provides the default value for any kind of primitive type and object type if the class provides a default constructor.<\/div>\n+<\/div>\n+<div class=\"col-first odd-row-color\"><code><a href=\"#FALSE\" class=\"member-name-link\">FALSE<\/a><\/code><\/div>\n+<div class=\"col-last odd-row-color\">\n+<div class=\"block\">Provides the boolean value false.<\/div>\n+<\/div>\n+<div class=\"col-first even-row-color\"><code><a href=\"#MAX\" class=\"member-name-link\">MAX<\/a><\/code><\/div>\n+<div class=\"col-last even-row-color\">\n+<div class=\"block\">Provides the maximum value of the specified primitive number type.<\/div>\n+<\/div>\n+<div class=\"col-first odd-row-color\"><code><a href=\"#MIN\" class=\"member-name-link\">MIN<\/a><\/code><\/div>\n+<div class=\"col-last odd-row-color\">\n+<div class=\"block\">Provides the minimum value of the specified primitive number type.<\/div>\n+<\/div>\n+<div class=\"col-first even-row-color\"><code><a href=\"#NUMBER_42\" class=\"member-name-link\">NUMBER_42<\/a><\/code><\/div>\n+<div class=\"col-last even-row-color\">\n+<div class=\"block\">Provides the number 42 for any primitive number type.<\/div>\n+<\/div>\n+<div class=\"col-first odd-row-color\"><code><a href=\"#NUMBER_MINUS_42\" class=\"member-name-link\">NUMBER_MINUS_42<\/a><\/code><\/div>\n+<div class=\"col-last odd-row-color\">\n+<div class=\"block\">Provides the number -42 for any primitive number type.<\/div>\n+<\/div>\n+<div class=\"col-first even-row-color\"><code><a href=\"#RANDOM_EACH\" class=\"member-name-link\">RANDOM_EACH<\/a><\/code><\/div>\n+<div class=\"col-last even-row-color\">\n+<div class=\"block\">Provides a different random primitive value on each test invocation.<\/div>\n+<\/div>\n+<div class=\"col-first odd-row-color\"><code><a href=\"#RANDOM_ONCE\" class=\"member-name-link\">RANDOM_ONCE<\/a><\/code><\/div>\n+<div class=\"col-last odd-row-color\">\n+<div class=\"block\">Provides a random primitive value on the first test invocation and reuses the same value for all invocation of the test.<\/div>\n+<\/div>\n+<div class=\"col-first even-row-color\"><code><a href=\"#TRUE\" class=\"member-name-link\">TRUE<\/a><\/code><\/div>\n+<div class=\"col-last even-row-color\">\n+<div class=\"block\">Provides the boolean value true.<\/div>\n+<\/div>\n+<\/div>\n+<\/section>\n+<\/li>\n+<!-- ========== METHOD SUMMARY =========== -->\n+<li>\n+<section class=\"method-summary\" id=\"method-summary\">\n+<h2>Method Summary<\/h2>\n+<div id=\"method-summary-table\">\n+<div class=\"table-tabs\" role=\"tablist\" aria-orientation=\"horizontal\"><button id=\"method-summary-table-tab0\" role=\"tab\" aria-selected=\"true\" aria-controls=\"method-summary-table.tabpanel\" tabindex=\"0\" onkeydown=\"switchTab(event)\" onclick=\"show('method-summary-table', 'method-summary-table', 3)\" class=\"active-table-tab\">All Methods<\/button><button id=\"method-summary-table-tab1\" role=\"tab\" aria-selected=\"false\" aria-controls=\"method-summary-table.tabpanel\" tabindex=\"-1\" onkeydown=\"switchTab(event)\" onclick=\"show('method-summary-table', 'method-summary-table-tab1', 3)\" class=\"table-tab\">Static Methods<\/button><button id=\"method-summary-table-tab4\" role=\"tab\" aria-selected=\"false\" aria-controls=\"method-summary-table.tabpanel\" tabindex=\"-1\" onkeydown=\"switchTab(event)\" onclick=\"show('method-summary-table', 'method-summary-table-tab4', 3)\" class=\"table-tab\">Concrete Methods<\/button><\/div>\n+<div id=\"method-summary-table.tabpanel\" role=\"tabpanel\">\n+<div class=\"summary-table three-column-summary\" aria-labelledby=\"method-summary-table-tab0\">\n+<div class=\"table-header col-first\">Modifier and Type<\/div>\n+<div class=\"table-header col-second\">Method<\/div>\n+<div class=\"table-header col-last\">Description<\/div>\n+<div class=\"col-first even-row-color method-summary-table method-summary-table-tab1 method-summary-table-tab4\"><code>static <a href=\"Argument.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">Argument<\/a><\/code><\/div>\n+<div class=\"col-second even-row-color method-summary-table method-summary-table-tab1 method-summary-table-tab4\"><code><a href=\"#valueOf(java.lang.String)\" class=\"member-name-link\">valueOf<\/a>&#8203;(<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a>&nbsp;name)<\/code><\/div>\n+<div class=\"col-last even-row-color method-summary-table method-summary-table-tab1 method-summary-table-tab4\">\n+<div class=\"block\">Returns the enum constant of this class with the specified name.<\/div>\n+<\/div>\n+<div class=\"col-first odd-row-color method-summary-table method-summary-table-tab1 method-summary-table-tab4\"><code>static <a href=\"Argument.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">Argument<\/a>[]<\/code><\/div>\n+<div class=\"col-second odd-row-color method-summary-table method-summary-table-tab1 method-summary-table-tab4\"><code><a href=\"#values()\" class=\"member-name-link\">values<\/a>()<\/code><\/div>\n+<div class=\"col-last odd-row-color method-summary-table method-summary-table-tab1 method-summary-table-tab4\">\n+<div class=\"block\">Returns an array containing the constants of this enum class, in\n+the order they are declared.<\/div>\n+<\/div>\n+<\/div>\n+<\/div>\n+<\/div>\n+<div class=\"inherited-list\">\n+<h3 id=\"methods-inherited-from-class-java.lang.Enum\">Methods inherited from class&nbsp;java.lang.<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Enum.html\" title=\"class or interface in java.lang\" class=\"external-link\">Enum<\/a><\/h3>\n+<code><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Enum.html#clone()\" title=\"class or interface in java.lang\" class=\"external-link\">clone<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Enum.html#compareTo(E)\" title=\"class or interface in java.lang\" class=\"external-link\">compareTo<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Enum.html#describeConstable()\" title=\"class or interface in java.lang\" class=\"external-link\">describeConstable<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Enum.html#equals(java.lang.Object)\" title=\"class or interface in java.lang\" class=\"external-link\">equals<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Enum.html#finalize()\" title=\"class or interface in java.lang\" class=\"external-link\">finalize<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Enum.html#getDeclaringClass()\" title=\"class or interface in java.lang\" class=\"external-link\">getDeclaringClass<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Enum.html#hashCode()\" title=\"class or interface in java.lang\" class=\"external-link\">hashCode<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Enum.html#name()\" title=\"class or interface in java.lang\" class=\"external-link\">name<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Enum.html#ordinal()\" title=\"class or interface in java.lang\" class=\"external-link\">ordinal<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Enum.html#toString()\" title=\"class or interface in java.lang\" class=\"external-link\">toString<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Enum.html#valueOf(java.lang.Class,java.lang.String)\" title=\"class or interface in java.lang\" class=\"external-link\">valueOf<\/a><\/code><\/div>\n+<div class=\"inherited-list\">\n+<h3 id=\"methods-inherited-from-class-java.lang.Object\">Methods inherited from class&nbsp;java.lang.<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html\" title=\"class or interface in java.lang\" class=\"external-link\">Object<\/a><\/h3>\n+<code><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#getClass()\" title=\"class or interface in java.lang\" class=\"external-link\">getClass<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#notify()\" title=\"class or interface in java.lang\" class=\"external-link\">notify<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#notifyAll()\" title=\"class or interface in java.lang\" class=\"external-link\">notifyAll<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#wait()\" title=\"class or interface in java.lang\" class=\"external-link\">wait<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#wait(long)\" title=\"class or interface in java.lang\" class=\"external-link\">wait<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#wait(long,int)\" title=\"class or interface in java.lang\" class=\"external-link\">wait<\/a><\/code><\/div>\n+<\/section>\n+<\/li>\n+<\/ul>\n+<\/section>\n+<section class=\"details\">\n+<ul class=\"details-list\">\n+<!-- ============ ENUM CONSTANT DETAIL =========== -->\n+<li>\n+<section class=\"constant-details\" id=\"enum-constant-detail\">\n+<h2>Enum Constant Details<\/h2>\n+<ul class=\"member-list\">\n+<li>\n+<section class=\"detail\" id=\"DEFAULT\">\n+<h3>DEFAULT<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static final<\/span>&nbsp;<span class=\"return-type\"><a href=\"Argument.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">Argument<\/a><\/span>&nbsp;<span class=\"element-name\">DEFAULT<\/span><\/div>\n+<div class=\"block\">Provides the default value for any kind of primitive type and object type if the class provides a default constructor.<\/div>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"NUMBER_42\">\n+<h3>NUMBER_42<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static final<\/span>&nbsp;<span class=\"return-type\"><a href=\"Argument.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">Argument<\/a><\/span>&nbsp;<span class=\"element-name\">NUMBER_42<\/span><\/div>\n+<div class=\"block\">Provides the number 42 for any primitive number type.<\/div>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"NUMBER_MINUS_42\">\n+<h3>NUMBER_MINUS_42<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static final<\/span>&nbsp;<span class=\"return-type\"><a href=\"Argument.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">Argument<\/a><\/span>&nbsp;<span class=\"element-name\">NUMBER_MINUS_42<\/span><\/div>\n+<div class=\"block\">Provides the number -42 for any primitive number type.<\/div>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"MIN\">\n+<h3>MIN<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static final<\/span>&nbsp;<span class=\"return-type\"><a href=\"Argument.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">Argument<\/a><\/span>&nbsp;<span class=\"element-name\">MIN<\/span><\/div>\n+<div class=\"block\">Provides the minimum value of the specified primitive number type.<\/div>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"MAX\">\n+<h3>MAX<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static final<\/span>&nbsp;<span class=\"return-type\"><a href=\"Argument.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">Argument<\/a><\/span>&nbsp;<span class=\"element-name\">MAX<\/span><\/div>\n+<div class=\"block\">Provides the maximum value of the specified primitive number type.<\/div>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"FALSE\">\n+<h3>FALSE<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static final<\/span>&nbsp;<span class=\"return-type\"><a href=\"Argument.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">Argument<\/a><\/span>&nbsp;<span class=\"element-name\">FALSE<\/span><\/div>\n+<div class=\"block\">Provides the boolean value false.<\/div>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"TRUE\">\n+<h3>TRUE<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static final<\/span>&nbsp;<span class=\"return-type\"><a href=\"Argument.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">Argument<\/a><\/span>&nbsp;<span class=\"element-name\">TRUE<\/span><\/div>\n+<div class=\"block\">Provides the boolean value true.<\/div>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"BOOLEAN_TOGGLE_FIRST_FALSE\">\n+<h3>BOOLEAN_TOGGLE_FIRST_FALSE<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static final<\/span>&nbsp;<span class=\"return-type\"><a href=\"Argument.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">Argument<\/a><\/span>&nbsp;<span class=\"element-name\">BOOLEAN_TOGGLE_FIRST_FALSE<\/span><\/div>\n+<div class=\"block\">Provides a different boolean value on each test invocation, starting with false.<\/div>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"BOOLEAN_TOGGLE_FIRST_TRUE\">\n+<h3>BOOLEAN_TOGGLE_FIRST_TRUE<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static final<\/span>&nbsp;<span class=\"return-type\"><a href=\"Argument.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">Argument<\/a><\/span>&nbsp;<span class=\"element-name\">BOOLEAN_TOGGLE_FIRST_TRUE<\/span><\/div>\n+<div class=\"block\">Provides a different boolean value on each test invocation, starting with true.<\/div>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"RANDOM_ONCE\">\n+<h3>RANDOM_ONCE<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static final<\/span>&nbsp;<span class=\"return-type\"><a href=\"Argument.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">Argument<\/a><\/span>&nbsp;<span class=\"element-name\">RANDOM_ONCE<\/span><\/div>\n+<div class=\"block\">Provides a random primitive value on the first test invocation and reuses the same value for all invocation of the test.\n+ Float and double values are restricted to the range [-10000,10000].<\/div>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"RANDOM_EACH\">\n+<h3>RANDOM_EACH<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static final<\/span>&nbsp;<span class=\"return-type\"><a href=\"Argument.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">Argument<\/a><\/span>&nbsp;<span class=\"element-name\">RANDOM_EACH<\/span><\/div>\n+<div class=\"block\">Provides a different random primitive value on each test invocation.\n+ Float and double values are restricted to the range [-10000,10000].<\/div>\n+<\/section>\n+<\/li>\n+<\/ul>\n+<\/section>\n+<\/li>\n+<!-- ============ METHOD DETAIL ========== -->\n+<li>\n+<section class=\"method-details\" id=\"method-detail\">\n+<h2>Method Details<\/h2>\n+<ul class=\"member-list\">\n+<li>\n+<section class=\"detail\" id=\"values()\">\n+<h3>values<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static<\/span>&nbsp;<span class=\"return-type\"><a href=\"Argument.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">Argument<\/a>[]<\/span>&nbsp;<span class=\"element-name\">values<\/span>()<\/div>\n+<div class=\"block\">Returns an array containing the constants of this enum class, in\n+the order they are declared.<\/div>\n+<dl class=\"notes\">\n+<dt>Returns:<\/dt>\n+<dd>an array containing the constants of this enum class, in the order they are declared<\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"valueOf(java.lang.String)\">\n+<h3>valueOf<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static<\/span>&nbsp;<span class=\"return-type\"><a href=\"Argument.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">Argument<\/a><\/span>&nbsp;<span class=\"element-name\">valueOf<\/span>&#8203;<span class=\"parameters\">(<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a>&nbsp;name)<\/span><\/div>\n+<div class=\"block\">Returns the enum constant of this class with the specified name.\n+The string must match <i>exactly<\/i> an identifier used to declare an\n+enum constant in this class.  (Extraneous whitespace characters are \n+not permitted.)<\/div>\n+<dl class=\"notes\">\n+<dt>Parameters:<\/dt>\n+<dd><code>name<\/code> - the name of the enum constant to be returned.<\/dd>\n+<dt>Returns:<\/dt>\n+<dd>the enum constant with the specified name<\/dd>\n+<dt>Throws:<\/dt>\n+<dd><code><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/IllegalArgumentException.html\" title=\"class or interface in java.lang\" class=\"external-link\">IllegalArgumentException<\/a><\/code> - if this enum class has no constant with the specified name<\/dd>\n+<dd><code><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/NullPointerException.html\" title=\"class or interface in java.lang\" class=\"external-link\">NullPointerException<\/a><\/code> - if the argument is null<\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<\/ul>\n+<\/section>\n+<\/li>\n+<\/ul>\n+<\/section>\n+<!-- ========= END OF CLASS DATA ========= -->\n+<\/main>\n+<\/div>\n+<\/div>\n+<\/body>\n+<\/html>\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/doc\/jdk\/test\/lib\/hotspot\/ir_framework\/Argument.html","additions":331,"deletions":0,"binary":false,"changes":331,"status":"added"},{"patch":"@@ -0,0 +1,125 @@\n+<!DOCTYPE HTML>\n+<html lang=\"en\">\n+<head>\n+<!-- Generated by javadoc (17) on Wed Apr 14 13:12:12 CEST 2021 -->\n+<title>Arguments<\/title>\n+<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n+<meta http-equiv=\"Content-Type\" content=\"text\/html; charset=utf-8\">\n+<meta name=\"dc.created\" content=\"2021-04-14\">\n+<meta name=\"description\" content=\"declaration: package: jdk.test.lib.hotspot.ir_framework, annotation type: Arguments\">\n+<meta name=\"generator\" content=\"javadoc\/ClassWriterImpl\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/..\/..\/..\/..\/stylesheet.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/..\/..\/..\/..\/script-dir\/jquery-ui.min.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/..\/..\/..\/..\/jquery-ui.overrides.css\" title=\"Style\">\n+<script type=\"text\/javascript\" src=\"..\/..\/..\/..\/..\/script.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/..\/..\/..\/..\/script-dir\/jquery-3.5.1.min.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/..\/..\/..\/..\/script-dir\/jquery-ui.min.js\"><\/script>\n+<\/head>\n+<body class=\"class-declaration-page\">\n+<script type=\"text\/javascript\">var pathtoroot = \"..\/..\/..\/..\/..\/\";\n+loadScripts(document, 'script');<\/script>\n+<noscript>\n+<div>JavaScript is disabled on your browser.<\/div>\n+<\/noscript>\n+<div class=\"flex-box\">\n+<header role=\"banner\" class=\"flex-header\">\n+<nav role=\"navigation\">\n+<!-- ========= START OF TOP NAVBAR ======= -->\n+<div class=\"top-nav\" id=\"navbar-top\">\n+<div class=\"skip-nav\"><a href=\"#skip-navbar-top\" title=\"Skip navigation links\">Skip navigation links<\/a><\/div>\n+<ul id=\"navbar-top-firstrow\" class=\"nav-list\" title=\"Navigation\">\n+<li><a href=\"package-summary.html\">Package<\/a><\/li>\n+<li class=\"nav-bar-cell1-rev\">Class<\/li>\n+<li><a href=\"package-tree.html\">Tree<\/a><\/li>\n+<li><a href=\"..\/..\/..\/..\/..\/index-files\/index-1.html\">Index<\/a><\/li>\n+<li><a href=\"..\/..\/..\/..\/..\/help-doc.html\">Help<\/a><\/li>\n+<\/ul>\n+<\/div>\n+<div class=\"sub-nav\">\n+<div>\n+<ul class=\"sub-nav-list\">\n+<li>Summary:&nbsp;<\/li>\n+<li>Field&nbsp;|&nbsp;<\/li>\n+<li><a href=\"#annotation-interface-required-element-summary\">Required<\/a>&nbsp;|&nbsp;<\/li>\n+<li>Optional<\/li>\n+<\/ul>\n+<ul class=\"sub-nav-list\">\n+<li>Detail:&nbsp;<\/li>\n+<li>Field&nbsp;|&nbsp;<\/li>\n+<li><a href=\"#annotation-interface-element-detail\">Element<\/a><\/li>\n+<\/ul>\n+<\/div>\n+<div class=\"nav-list-search\"><label for=\"search\">SEARCH:<\/label>\n+<input type=\"text\" id=\"search\" value=\"search\" disabled=\"disabled\">\n+<input type=\"reset\" id=\"reset\" value=\"reset\" disabled=\"disabled\">\n+<\/div>\n+<\/div>\n+<!-- ========= END OF TOP NAVBAR ========= -->\n+<span class=\"skip-nav\" id=\"skip-navbar-top\"><\/span><\/nav>\n+<\/header>\n+<div class=\"flex-content\">\n+<main role=\"main\">\n+<!-- ======== START OF CLASS DATA ======== -->\n+<div class=\"header\">\n+<div class=\"sub-title\"><span class=\"package-label-in-type\">Package<\/span>&nbsp;<a href=\"package-summary.html\">jdk.test.lib.hotspot.ir_framework<\/a><\/div>\n+<h1 title=\"Annotation Interface Arguments\" class=\"title\">Annotation Interface Arguments<\/h1>\n+<\/div>\n+<section class=\"description\">\n+<hr>\n+<div class=\"type-signature\"><span class=\"annotations\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/annotation\/Retention.html\" title=\"class or interface in java.lang.annotation\" class=\"external-link\">@Retention<\/a>(<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/annotation\/RetentionPolicy.html#RUNTIME\" title=\"class or interface in java.lang.annotation\" class=\"external-link\">RUNTIME<\/a>)\n+<\/span><span class=\"modifiers\">public @interface <\/span><span class=\"element-name type-name-label\">Arguments<\/span><\/div>\n+<div class=\"block\">This annotation is used to specify well-defined <a href=\"Argument.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\"><code>Argument<\/code><\/a> values for test methods (specifying <a href=\"Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Test<\/code><\/a>) when\n+ used as part of a <b>base test<\/b> or <b>checked test<\/b>.<\/div>\n+<dl class=\"notes\">\n+<dt>See Also:<\/dt>\n+<dd><a href=\"Argument.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\"><code>Argument<\/code><\/a>, \n+<a href=\"Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Test<\/code><\/a>, \n+<a href=\"Check.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Check<\/code><\/a><\/dd>\n+<\/dl>\n+<\/section>\n+<section class=\"summary\">\n+<ul class=\"summary-list\">\n+<!-- =========== ANNOTATION INTERFACE REQUIRED MEMBER SUMMARY =========== -->\n+<li>\n+<section class=\"member-summary\" id=\"annotation-interface-required-element-summary\">\n+<h2>Required Element Summary<\/h2>\n+<div class=\"caption\"><span>Required Elements<\/span><\/div>\n+<div class=\"summary-table three-column-summary\">\n+<div class=\"table-header col-first\">Modifier and Type<\/div>\n+<div class=\"table-header col-second\">Required Element<\/div>\n+<div class=\"table-header col-last\">Description<\/div>\n+<div class=\"col-first even-row-color\"><code><a href=\"Argument.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">Argument<\/a>[]<\/code><\/div>\n+<div class=\"col-second even-row-color\"><code><a href=\"#value()\" class=\"member-name-link\">value<\/a><\/code><\/div>\n+<div class=\"col-last even-row-color\">\n+<div class=\"block\">Get the argument value.<\/div>\n+<\/div>\n+<\/div>\n+<\/section>\n+<\/li>\n+<\/ul>\n+<\/section>\n+<section class=\"details\" id=\"annotation-interface-element-detail\">\n+<ul class=\"details-list\">\n+<!-- ============ ANNOTATION INTERFACE MEMBER DETAIL =========== -->\n+<li>\n+<section class=\"member-details\">\n+<h2>Element Details<\/h2>\n+<ul class=\"member-list\">\n+<li>\n+<section class=\"detail\" id=\"value()\">\n+<h3>value<\/h3>\n+<div class=\"member-signature\"><span class=\"return-type\"><a href=\"Argument.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">Argument<\/a>[]<\/span>&nbsp;<span class=\"element-name\">value<\/span><\/div>\n+<div class=\"block\">Get the argument value.<\/div>\n+<\/section>\n+<\/li>\n+<\/ul>\n+<\/section>\n+<\/li>\n+<\/ul>\n+<\/section>\n+<!-- ========= END OF CLASS DATA ========= -->\n+<\/main>\n+<\/div>\n+<\/div>\n+<\/body>\n+<\/html>\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/doc\/jdk\/test\/lib\/hotspot\/ir_framework\/Arguments.html","additions":125,"deletions":0,"binary":false,"changes":125,"status":"added"},{"patch":"@@ -0,0 +1,230 @@\n+<!DOCTYPE HTML>\n+<html lang=\"en\">\n+<head>\n+<!-- Generated by javadoc (17) on Wed Apr 14 13:12:12 CEST 2021 -->\n+<title>Check<\/title>\n+<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n+<meta http-equiv=\"Content-Type\" content=\"text\/html; charset=utf-8\">\n+<meta name=\"dc.created\" content=\"2021-04-14\">\n+<meta name=\"description\" content=\"declaration: package: jdk.test.lib.hotspot.ir_framework, annotation type: Check\">\n+<meta name=\"generator\" content=\"javadoc\/ClassWriterImpl\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/..\/..\/..\/..\/stylesheet.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/..\/..\/..\/..\/script-dir\/jquery-ui.min.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/..\/..\/..\/..\/jquery-ui.overrides.css\" title=\"Style\">\n+<script type=\"text\/javascript\" src=\"..\/..\/..\/..\/..\/script.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/..\/..\/..\/..\/script-dir\/jquery-3.5.1.min.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/..\/..\/..\/..\/script-dir\/jquery-ui.min.js\"><\/script>\n+<\/head>\n+<body class=\"class-declaration-page\">\n+<script type=\"text\/javascript\">var pathtoroot = \"..\/..\/..\/..\/..\/\";\n+loadScripts(document, 'script');<\/script>\n+<noscript>\n+<div>JavaScript is disabled on your browser.<\/div>\n+<\/noscript>\n+<div class=\"flex-box\">\n+<header role=\"banner\" class=\"flex-header\">\n+<nav role=\"navigation\">\n+<!-- ========= START OF TOP NAVBAR ======= -->\n+<div class=\"top-nav\" id=\"navbar-top\">\n+<div class=\"skip-nav\"><a href=\"#skip-navbar-top\" title=\"Skip navigation links\">Skip navigation links<\/a><\/div>\n+<ul id=\"navbar-top-firstrow\" class=\"nav-list\" title=\"Navigation\">\n+<li><a href=\"package-summary.html\">Package<\/a><\/li>\n+<li class=\"nav-bar-cell1-rev\">Class<\/li>\n+<li><a href=\"package-tree.html\">Tree<\/a><\/li>\n+<li><a href=\"..\/..\/..\/..\/..\/index-files\/index-1.html\">Index<\/a><\/li>\n+<li><a href=\"..\/..\/..\/..\/..\/help-doc.html\">Help<\/a><\/li>\n+<\/ul>\n+<\/div>\n+<div class=\"sub-nav\">\n+<div>\n+<ul class=\"sub-nav-list\">\n+<li>Summary:&nbsp;<\/li>\n+<li>Field&nbsp;|&nbsp;<\/li>\n+<li><a href=\"#annotation-interface-required-element-summary\">Required<\/a>&nbsp;|&nbsp;<\/li>\n+<li><a href=\"#annotation-interface-optional-element-summary\">Optional<\/a><\/li>\n+<\/ul>\n+<ul class=\"sub-nav-list\">\n+<li>Detail:&nbsp;<\/li>\n+<li>Field&nbsp;|&nbsp;<\/li>\n+<li><a href=\"#annotation-interface-element-detail\">Element<\/a><\/li>\n+<\/ul>\n+<\/div>\n+<div class=\"nav-list-search\"><label for=\"search\">SEARCH:<\/label>\n+<input type=\"text\" id=\"search\" value=\"search\" disabled=\"disabled\">\n+<input type=\"reset\" id=\"reset\" value=\"reset\" disabled=\"disabled\">\n+<\/div>\n+<\/div>\n+<!-- ========= END OF TOP NAVBAR ========= -->\n+<span class=\"skip-nav\" id=\"skip-navbar-top\"><\/span><\/nav>\n+<\/header>\n+<div class=\"flex-content\">\n+<main role=\"main\">\n+<!-- ======== START OF CLASS DATA ======== -->\n+<div class=\"header\">\n+<div class=\"sub-title\"><span class=\"package-label-in-type\">Package<\/span>&nbsp;<a href=\"package-summary.html\">jdk.test.lib.hotspot.ir_framework<\/a><\/div>\n+<h1 title=\"Annotation Interface Check\" class=\"title\">Annotation Interface Check<\/h1>\n+<\/div>\n+<section class=\"description\">\n+<hr>\n+<div class=\"type-signature\"><span class=\"annotations\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/annotation\/Retention.html\" title=\"class or interface in java.lang.annotation\" class=\"external-link\">@Retention<\/a>(<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/annotation\/RetentionPolicy.html#RUNTIME\" title=\"class or interface in java.lang.annotation\" class=\"external-link\">RUNTIME<\/a>)\n+<\/span><span class=\"modifiers\">public @interface <\/span><span class=\"element-name type-name-label\">Check<\/span><\/div>\n+<div class=\"block\">Annotation for a check method of a <b>checked test<\/b>.\n+\n+ <p>\n+ Let <code>t<\/code> be a test method specifying the <a href=\"Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@Test<\/code><\/a> annotation and <code>c<\/code> be a check method specifying\n+ the <code>@Check(test = \"t\")<\/code> annotation. These two methods represent a so-called <i>checked test<\/i>. The only\n+ difference to a <i>base test<\/i> (see <a href=\"Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Test<\/code><\/a>) is that the framework will invoke the check method <code>c<\/code>\n+ directly after the invocation of the test method <code>t<\/code> which allows to do some additional verification,\n+ including the return value of <code>t<\/code>. The framework does the following, similar as for <i>base tests<\/i>:\n+ <ol>\n+     <li><p>The framework warms <code>t<\/code> up by invoking it for a predefined number of iterations (default: 2000)\n+            or any number specified by an additional <a href=\"Warmup.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@Warmup<\/code><\/a> annotation at <code>t<\/code> or by using\n+            <a href=\"TestFramework.html#setDefaultWarmup(int)\"><code>TestFramework.setDefaultWarmup(int)<\/code><\/a> (could also be 0 which skips the warm-up completely which is\n+            similar to simulating <code>-Xcomp<\/code>). After each invocation of <code>t<\/code>, the framework also invokes\n+            <code>c<\/code> if the <code>@Check<\/code> annotation specifies <a href=\"CheckAt.html#EACH_INVOCATION\"><code>CheckAt.EACH_INVOCATION<\/code><\/a> at <a href=\"#when()\"><code>when()<\/code><\/a>.\n+            More information about the warm-up in general can be found at <a href=\"Warmup.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Warmup<\/code><\/a><\/li>\n+     <li><p>After the warm-up, the framework compiles <code>t<\/code> at the specified compilation level set by\n+            <a href=\"Test.html#compLevel()\"><code>Test.compLevel()<\/code><\/a> (default <a href=\"CompLevel.html#ANY\"><code>CompLevel.ANY<\/code><\/a> will pick the highest available level which is\n+            usually <a href=\"CompLevel.html#C2\"><code>CompLevel.C2<\/code><\/a>).<\/li>\n+     <li><p>The framework invokes <code>t<\/code> one more time to run the compilation. Afterwards, the framework will\n+            always invoke <code>c<\/code> again to be able perform additional checks after the compilation of <code>t<\/code>.<\/li>\n+     <li><p>The framework checks any specified <a href=\"IR.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@IR<\/code><\/a> constraints at the test method <code>t<\/code>.\n+            More information about IR matching can be found at <a href=\"IR.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>IR<\/code><\/a>.<\/li>\n+ <\/ol>\n+\n+ <p>\n+ The test method <code>t<\/code> has the same properties and follows the same constraints as stated in <a href=\"Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Test<\/code><\/a>.\n+ <p>\n+ The following additional constraints must be met for the test method <code>t<\/code> and check method <code>c<\/code>:\n+ <ul>\n+     <li><p><code>c<\/code> must specify the method name <code>t<\/code> as property in <code>@Check(test = \"t\")<\/code>\n+     (see <a href=\"#test()\"><code>test()<\/code><\/a>. Specifying a non-<code>@Test<\/code> annotated method or a <code>@Test<\/code> method that\n+     has already been used by another <code>@Check<\/code> or <a href=\"Run.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@Run<\/code><\/a> method results in a <a href=\"TestFormatException.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\"><code>TestFormatException<\/code><\/a>.\n+     <li><p><code>c<\/code> can specify the following method parameter combinations:\n+     <ul>\n+         <li><p>void<\/li>\n+         <li><p>One parameter: <a href=\"TestInfo.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\"><code>TestInfo<\/code><\/a> which provides some information about <code>t<\/code> and utility methods.<\/li>\n+         <li><p>One parameter: the <i>exact<\/i> same type as the return value of <code>t<\/code>. When <code>c<\/code> is\n+                invoked by the framework, this parameter contains the return value of <code>t<\/code>.<\/li>\n+         <li><p>1st parameter: <a href=\"TestInfo.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\"><code>TestInfo<\/code><\/a>; 2nd parameter: the <i>exact<\/i> same type as the return value of\n+                <code>t<\/code> (see above)<\/li>\n+         <li><p> Any other combination will result in a <a href=\"TestFormatException.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\"><code>TestFormatException<\/code><\/a>.\n+     <\/ul>\n+     <li><p><code>c<\/code> is not compiled nor inlined.\n+     <li><p><code>c<\/code> must be part of the test class. Using <code>@Check<\/code> in nested or other classes is not allowed.<\/li>\n+     <li><p><code>c<\/code> cannot specify any helper-method-specific compile command annotations\n+            (<a href=\"ForceCompile.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@ForceCompile<\/code><\/a>, <a href=\"DontCompile.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@DontCompile<\/code><\/a>, <a href=\"ForceInline.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@ForceInline<\/code><\/a>,\n+            <a href=\"DontInline.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@DontInline<\/code><\/a>).<\/li>\n+ <\/ul>\n+\n+ <p>\n+ If no verification is required, use a <i>base test<\/i> (see <a href=\"Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Test<\/code><\/a>). If <code>t<\/code> must be invoked with more\n+ complex or varying arguments and\/or the <code>t<\/code> must be invoked differently in subsequent invocations, use a\n+ <i>custom run test<\/i> (see <a href=\"Run.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Run<\/code><\/a>).\n+\n+ <p>\n+ Examples on how to write checked tests can be found in <code>CheckedTestExample<\/code>\n+ and also as part of the internal testing in the package <code>jdk.test.lib.hotspot.ir_framework.tests<\/code>.<\/div>\n+<dl class=\"notes\">\n+<dt>See Also:<\/dt>\n+<dd><a href=\"Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Test<\/code><\/a>, \n+<a href=\"TestInfo.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\"><code>TestInfo<\/code><\/a>, \n+<a href=\"CheckAt.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\"><code>CheckAt<\/code><\/a><\/dd>\n+<\/dl>\n+<\/section>\n+<section class=\"summary\">\n+<ul class=\"summary-list\">\n+<!-- =========== ANNOTATION INTERFACE REQUIRED MEMBER SUMMARY =========== -->\n+<li>\n+<section class=\"member-summary\" id=\"annotation-interface-required-element-summary\">\n+<h2>Required Element Summary<\/h2>\n+<div class=\"caption\"><span>Required Elements<\/span><\/div>\n+<div class=\"summary-table three-column-summary\">\n+<div class=\"table-header col-first\">Modifier and Type<\/div>\n+<div class=\"table-header col-second\">Required Element<\/div>\n+<div class=\"table-header col-last\">Description<\/div>\n+<div class=\"col-first even-row-color\"><code><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second even-row-color\"><code><a href=\"#test()\" class=\"member-name-link\">test<\/a><\/code><\/div>\n+<div class=\"col-last even-row-color\">\n+<div class=\"block\">The unique associated <a href=\"Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Test<\/code><\/a> method for this <code>@Check<\/code> annotated check method.<\/div>\n+<\/div>\n+<\/div>\n+<\/section>\n+<\/li>\n+<!-- =========== ANNOTATION INTERFACE OPTIONAL MEMBER SUMMARY =========== -->\n+<li>\n+<section class=\"member-summary\" id=\"annotation-interface-optional-element-summary\">\n+<h2>Optional Element Summary<\/h2>\n+<div class=\"caption\"><span>Optional Elements<\/span><\/div>\n+<div class=\"summary-table three-column-summary\">\n+<div class=\"table-header col-first\">Modifier and Type<\/div>\n+<div class=\"table-header col-second\">Optional Element<\/div>\n+<div class=\"table-header col-last\">Description<\/div>\n+<div class=\"col-first even-row-color\"><code><a href=\"CheckAt.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">CheckAt<\/a><\/code><\/div>\n+<div class=\"col-second even-row-color\"><code><a href=\"#when()\" class=\"member-name-link\">when<\/a><\/code><\/div>\n+<div class=\"col-last even-row-color\">\n+<div class=\"block\">When should the <code>@Check<\/code> method be invoked? By default, the check is done after each invocation which is\n+ encouraged if performance is not critical.<\/div>\n+<\/div>\n+<\/div>\n+<\/section>\n+<\/li>\n+<\/ul>\n+<\/section>\n+<section class=\"details\" id=\"annotation-interface-element-detail\">\n+<ul class=\"details-list\">\n+<!-- ============ ANNOTATION INTERFACE MEMBER DETAIL =========== -->\n+<li>\n+<section class=\"member-details\">\n+<h2>Element Details<\/h2>\n+<ul class=\"member-list\">\n+<li>\n+<section class=\"detail\" id=\"test()\">\n+<h3>test<\/h3>\n+<div class=\"member-signature\"><span class=\"return-type\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/span>&nbsp;<span class=\"element-name\">test<\/span><\/div>\n+<div class=\"block\">The unique associated <a href=\"Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Test<\/code><\/a> method for this <code>@Check<\/code> annotated check method. The framework will directly\n+ invoke the <code>@Check<\/code> method after each invocation or only after the compilation of the associated <code>@Test<\/code>\n+ method (depending on the value set with <a href=\"#when()\"><code>when()<\/code><\/a>).\n+ <p>\n+ If a non-<code>@Test<\/code> annotated method or a <code>@Test<\/code> method that has already been used by another\n+ <code>@Check<\/code> or <a href=\"Run.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Run<\/code><\/a> method is specified, then a <a href=\"TestFormatException.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\"><code>TestFormatException<\/code><\/a> is thrown.<\/div>\n+<dl class=\"notes\">\n+<dt>See Also:<\/dt>\n+<dd><a href=\"Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Test<\/code><\/a><\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<\/ul>\n+<\/section>\n+<\/li>\n+<!-- ============ ANNOTATION INTERFACE MEMBER DETAIL =========== -->\n+<li>\n+<section class=\"member-details\">\n+<ul class=\"member-list\">\n+<li>\n+<section class=\"detail\" id=\"when()\">\n+<h3>when<\/h3>\n+<div class=\"member-signature\"><span class=\"return-type\"><a href=\"CheckAt.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">CheckAt<\/a><\/span>&nbsp;<span class=\"element-name\">when<\/span><\/div>\n+<div class=\"block\">When should the <code>@Check<\/code> method be invoked? By default, the check is done after each invocation which is\n+ encouraged if performance is not critical.<\/div>\n+<dl class=\"notes\">\n+<dt>See Also:<\/dt>\n+<dd><a href=\"CheckAt.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\"><code>CheckAt<\/code><\/a><\/dd>\n+<\/dl>\n+<dl class=\"notes\">\n+<dt>Default:<\/dt>\n+<dd>EACH_INVOCATION<\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<\/ul>\n+<\/section>\n+<\/li>\n+<\/ul>\n+<\/section>\n+<!-- ========= END OF CLASS DATA ========= -->\n+<\/main>\n+<\/div>\n+<\/div>\n+<\/body>\n+<\/html>\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/doc\/jdk\/test\/lib\/hotspot\/ir_framework\/Check.html","additions":230,"deletions":0,"binary":false,"changes":230,"status":"added"},{"patch":"@@ -0,0 +1,231 @@\n+<!DOCTYPE HTML>\n+<html lang=\"en\">\n+<head>\n+<!-- Generated by javadoc (17) on Wed Apr 14 13:12:12 CEST 2021 -->\n+<title>CheckAt<\/title>\n+<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n+<meta http-equiv=\"Content-Type\" content=\"text\/html; charset=utf-8\">\n+<meta name=\"dc.created\" content=\"2021-04-14\">\n+<meta name=\"description\" content=\"declaration: package: jdk.test.lib.hotspot.ir_framework, enum: CheckAt\">\n+<meta name=\"generator\" content=\"javadoc\/ClassWriterImpl\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/..\/..\/..\/..\/stylesheet.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/..\/..\/..\/..\/script-dir\/jquery-ui.min.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/..\/..\/..\/..\/jquery-ui.overrides.css\" title=\"Style\">\n+<script type=\"text\/javascript\" src=\"..\/..\/..\/..\/..\/script.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/..\/..\/..\/..\/script-dir\/jquery-3.5.1.min.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/..\/..\/..\/..\/script-dir\/jquery-ui.min.js\"><\/script>\n+<\/head>\n+<body class=\"class-declaration-page\">\n+<script type=\"text\/javascript\">var evenRowColor = \"even-row-color\";\n+var oddRowColor = \"odd-row-color\";\n+var tableTab = \"table-tab\";\n+var activeTableTab = \"active-table-tab\";\n+var pathtoroot = \"..\/..\/..\/..\/..\/\";\n+loadScripts(document, 'script');<\/script>\n+<noscript>\n+<div>JavaScript is disabled on your browser.<\/div>\n+<\/noscript>\n+<div class=\"flex-box\">\n+<header role=\"banner\" class=\"flex-header\">\n+<nav role=\"navigation\">\n+<!-- ========= START OF TOP NAVBAR ======= -->\n+<div class=\"top-nav\" id=\"navbar-top\">\n+<div class=\"skip-nav\"><a href=\"#skip-navbar-top\" title=\"Skip navigation links\">Skip navigation links<\/a><\/div>\n+<ul id=\"navbar-top-firstrow\" class=\"nav-list\" title=\"Navigation\">\n+<li><a href=\"package-summary.html\">Package<\/a><\/li>\n+<li class=\"nav-bar-cell1-rev\">Class<\/li>\n+<li><a href=\"package-tree.html\">Tree<\/a><\/li>\n+<li><a href=\"..\/..\/..\/..\/..\/index-files\/index-1.html\">Index<\/a><\/li>\n+<li><a href=\"..\/..\/..\/..\/..\/help-doc.html\">Help<\/a><\/li>\n+<\/ul>\n+<\/div>\n+<div class=\"sub-nav\">\n+<div>\n+<ul class=\"sub-nav-list\">\n+<li>Summary:&nbsp;<\/li>\n+<li><a href=\"#nested-class-summary\">Nested<\/a>&nbsp;|&nbsp;<\/li>\n+<li><a href=\"#enum-constant-summary\">Enum Constants<\/a>&nbsp;|&nbsp;<\/li>\n+<li>Field&nbsp;|&nbsp;<\/li>\n+<li><a href=\"#method-summary\">Method<\/a><\/li>\n+<\/ul>\n+<ul class=\"sub-nav-list\">\n+<li>Detail:&nbsp;<\/li>\n+<li><a href=\"#enum-constant-detail\">Enum Constants<\/a>&nbsp;|&nbsp;<\/li>\n+<li>Field&nbsp;|&nbsp;<\/li>\n+<li><a href=\"#method-detail\">Method<\/a><\/li>\n+<\/ul>\n+<\/div>\n+<div class=\"nav-list-search\"><label for=\"search\">SEARCH:<\/label>\n+<input type=\"text\" id=\"search\" value=\"search\" disabled=\"disabled\">\n+<input type=\"reset\" id=\"reset\" value=\"reset\" disabled=\"disabled\">\n+<\/div>\n+<\/div>\n+<!-- ========= END OF TOP NAVBAR ========= -->\n+<span class=\"skip-nav\" id=\"skip-navbar-top\"><\/span><\/nav>\n+<\/header>\n+<div class=\"flex-content\">\n+<main role=\"main\">\n+<!-- ======== START OF CLASS DATA ======== -->\n+<div class=\"header\">\n+<div class=\"sub-title\"><span class=\"package-label-in-type\">Package<\/span>&nbsp;<a href=\"package-summary.html\">jdk.test.lib.hotspot.ir_framework<\/a><\/div>\n+<h1 title=\"Enum Class CheckAt\" class=\"title\">Enum Class CheckAt<\/h1>\n+<\/div>\n+<div class=\"inheritance\" title=\"Inheritance Tree\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html\" title=\"class or interface in java.lang\" class=\"external-link\">java.lang.Object<\/a>\n+<div class=\"inheritance\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Enum.html\" title=\"class or interface in java.lang\" class=\"external-link\">java.lang.Enum<\/a>&lt;<a href=\"CheckAt.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">CheckAt<\/a>&gt;\n+<div class=\"inheritance\">jdk.test.lib.hotspot.ir_framework.CheckAt<\/div>\n+<\/div>\n+<\/div>\n+<section class=\"description\">\n+<dl class=\"notes\">\n+<dt>All Implemented Interfaces:<\/dt>\n+<dd><code><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/io\/Serializable.html\" title=\"class or interface in java.io\" class=\"external-link\">Serializable<\/a><\/code>, <code><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Comparable.html\" title=\"class or interface in java.lang\" class=\"external-link\">Comparable<\/a>&lt;<a href=\"CheckAt.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">CheckAt<\/a>&gt;<\/code>, <code><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/constant\/Constable.html\" title=\"class or interface in java.lang.constant\" class=\"external-link\">Constable<\/a><\/code><\/dd>\n+<\/dl>\n+<hr>\n+<div class=\"type-signature\"><span class=\"modifiers\">public enum <\/span><span class=\"element-name type-name-label\">CheckAt<\/span>\n+<span class=\"extends-implements\">extends <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Enum.html\" title=\"class or interface in java.lang\" class=\"external-link\">Enum<\/a>&lt;<a href=\"CheckAt.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">CheckAt<\/a>&gt;<\/span><\/div>\n+<div class=\"block\">This enum is used in <a href=\"Check.html#when()\"><code>Check.when()<\/code><\/a> of a <b>checked test<\/b> to specify when the framework will invoke the\n+ check method after invoking the associated <a href=\"Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Test<\/code><\/a> method.<\/div>\n+<dl class=\"notes\">\n+<dt>See Also:<\/dt>\n+<dd><a href=\"Check.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Check<\/code><\/a>, \n+<a href=\"Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Test<\/code><\/a><\/dd>\n+<\/dl>\n+<\/section>\n+<section class=\"summary\">\n+<ul class=\"summary-list\">\n+<!-- ======== NESTED CLASS SUMMARY ======== -->\n+<li>\n+<section class=\"nested-class-summary\" id=\"nested-class-summary\">\n+<h2>Nested Class Summary<\/h2>\n+<div class=\"inherited-list\">\n+<h2 id=\"nested-classes-inherited-from-class-java.lang.Enum\">Nested classes\/interfaces inherited from class&nbsp;java.lang.<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Enum.html\" title=\"class or interface in java.lang\" class=\"external-link\">Enum<\/a><\/h2>\n+<code><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Enum.EnumDesc.html\" title=\"class or interface in java.lang\" class=\"external-link\">Enum.EnumDesc<\/a>&lt;<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Enum.EnumDesc.html\" title=\"class or interface in java.lang\" class=\"external-link\">E<\/a> extends <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Enum.html\" title=\"class or interface in java.lang\" class=\"external-link\">Enum<\/a>&lt;<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Enum.EnumDesc.html\" title=\"class or interface in java.lang\" class=\"external-link\">E<\/a>&gt;&gt;<\/code><\/div>\n+<\/section>\n+<\/li>\n+<!-- =========== ENUM CONSTANT SUMMARY =========== -->\n+<li>\n+<section class=\"constants-summary\" id=\"enum-constant-summary\">\n+<h2>Enum Constant Summary<\/h2>\n+<div class=\"caption\"><span>Enum Constants<\/span><\/div>\n+<div class=\"summary-table two-column-summary\">\n+<div class=\"table-header col-first\">Enum Constant<\/div>\n+<div class=\"table-header col-last\">Description<\/div>\n+<div class=\"col-first even-row-color\"><code><a href=\"#COMPILED\" class=\"member-name-link\">COMPILED<\/a><\/code><\/div>\n+<div class=\"col-last even-row-color\">\n+<div class=\"block\">Invoke the <a href=\"Check.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Check<\/code><\/a> method only once after the warm-up of the associated <a href=\"Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Test<\/code><\/a> method had been completed\n+ and the framework has compiled the associated <a href=\"Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Test<\/code><\/a> method.<\/div>\n+<\/div>\n+<div class=\"col-first odd-row-color\"><code><a href=\"#EACH_INVOCATION\" class=\"member-name-link\">EACH_INVOCATION<\/a><\/code><\/div>\n+<div class=\"col-last odd-row-color\">\n+<div class=\"block\">Default: Invoke the <a href=\"Check.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Check<\/code><\/a> method each time after invoking the associated <a href=\"Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Test<\/code><\/a> method.<\/div>\n+<\/div>\n+<\/div>\n+<\/section>\n+<\/li>\n+<!-- ========== METHOD SUMMARY =========== -->\n+<li>\n+<section class=\"method-summary\" id=\"method-summary\">\n+<h2>Method Summary<\/h2>\n+<div id=\"method-summary-table\">\n+<div class=\"table-tabs\" role=\"tablist\" aria-orientation=\"horizontal\"><button id=\"method-summary-table-tab0\" role=\"tab\" aria-selected=\"true\" aria-controls=\"method-summary-table.tabpanel\" tabindex=\"0\" onkeydown=\"switchTab(event)\" onclick=\"show('method-summary-table', 'method-summary-table', 3)\" class=\"active-table-tab\">All Methods<\/button><button id=\"method-summary-table-tab1\" role=\"tab\" aria-selected=\"false\" aria-controls=\"method-summary-table.tabpanel\" tabindex=\"-1\" onkeydown=\"switchTab(event)\" onclick=\"show('method-summary-table', 'method-summary-table-tab1', 3)\" class=\"table-tab\">Static Methods<\/button><button id=\"method-summary-table-tab4\" role=\"tab\" aria-selected=\"false\" aria-controls=\"method-summary-table.tabpanel\" tabindex=\"-1\" onkeydown=\"switchTab(event)\" onclick=\"show('method-summary-table', 'method-summary-table-tab4', 3)\" class=\"table-tab\">Concrete Methods<\/button><\/div>\n+<div id=\"method-summary-table.tabpanel\" role=\"tabpanel\">\n+<div class=\"summary-table three-column-summary\" aria-labelledby=\"method-summary-table-tab0\">\n+<div class=\"table-header col-first\">Modifier and Type<\/div>\n+<div class=\"table-header col-second\">Method<\/div>\n+<div class=\"table-header col-last\">Description<\/div>\n+<div class=\"col-first even-row-color method-summary-table method-summary-table-tab1 method-summary-table-tab4\"><code>static <a href=\"CheckAt.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">CheckAt<\/a><\/code><\/div>\n+<div class=\"col-second even-row-color method-summary-table method-summary-table-tab1 method-summary-table-tab4\"><code><a href=\"#valueOf(java.lang.String)\" class=\"member-name-link\">valueOf<\/a>&#8203;(<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a>&nbsp;name)<\/code><\/div>\n+<div class=\"col-last even-row-color method-summary-table method-summary-table-tab1 method-summary-table-tab4\">\n+<div class=\"block\">Returns the enum constant of this class with the specified name.<\/div>\n+<\/div>\n+<div class=\"col-first odd-row-color method-summary-table method-summary-table-tab1 method-summary-table-tab4\"><code>static <a href=\"CheckAt.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">CheckAt<\/a>[]<\/code><\/div>\n+<div class=\"col-second odd-row-color method-summary-table method-summary-table-tab1 method-summary-table-tab4\"><code><a href=\"#values()\" class=\"member-name-link\">values<\/a>()<\/code><\/div>\n+<div class=\"col-last odd-row-color method-summary-table method-summary-table-tab1 method-summary-table-tab4\">\n+<div class=\"block\">Returns an array containing the constants of this enum class, in\n+the order they are declared.<\/div>\n+<\/div>\n+<\/div>\n+<\/div>\n+<\/div>\n+<div class=\"inherited-list\">\n+<h3 id=\"methods-inherited-from-class-java.lang.Enum\">Methods inherited from class&nbsp;java.lang.<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Enum.html\" title=\"class or interface in java.lang\" class=\"external-link\">Enum<\/a><\/h3>\n+<code><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Enum.html#clone()\" title=\"class or interface in java.lang\" class=\"external-link\">clone<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Enum.html#compareTo(E)\" title=\"class or interface in java.lang\" class=\"external-link\">compareTo<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Enum.html#describeConstable()\" title=\"class or interface in java.lang\" class=\"external-link\">describeConstable<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Enum.html#equals(java.lang.Object)\" title=\"class or interface in java.lang\" class=\"external-link\">equals<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Enum.html#finalize()\" title=\"class or interface in java.lang\" class=\"external-link\">finalize<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Enum.html#getDeclaringClass()\" title=\"class or interface in java.lang\" class=\"external-link\">getDeclaringClass<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Enum.html#hashCode()\" title=\"class or interface in java.lang\" class=\"external-link\">hashCode<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Enum.html#name()\" title=\"class or interface in java.lang\" class=\"external-link\">name<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Enum.html#ordinal()\" title=\"class or interface in java.lang\" class=\"external-link\">ordinal<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Enum.html#toString()\" title=\"class or interface in java.lang\" class=\"external-link\">toString<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Enum.html#valueOf(java.lang.Class,java.lang.String)\" title=\"class or interface in java.lang\" class=\"external-link\">valueOf<\/a><\/code><\/div>\n+<div class=\"inherited-list\">\n+<h3 id=\"methods-inherited-from-class-java.lang.Object\">Methods inherited from class&nbsp;java.lang.<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html\" title=\"class or interface in java.lang\" class=\"external-link\">Object<\/a><\/h3>\n+<code><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#getClass()\" title=\"class or interface in java.lang\" class=\"external-link\">getClass<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#notify()\" title=\"class or interface in java.lang\" class=\"external-link\">notify<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#notifyAll()\" title=\"class or interface in java.lang\" class=\"external-link\">notifyAll<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#wait()\" title=\"class or interface in java.lang\" class=\"external-link\">wait<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#wait(long)\" title=\"class or interface in java.lang\" class=\"external-link\">wait<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#wait(long,int)\" title=\"class or interface in java.lang\" class=\"external-link\">wait<\/a><\/code><\/div>\n+<\/section>\n+<\/li>\n+<\/ul>\n+<\/section>\n+<section class=\"details\">\n+<ul class=\"details-list\">\n+<!-- ============ ENUM CONSTANT DETAIL =========== -->\n+<li>\n+<section class=\"constant-details\" id=\"enum-constant-detail\">\n+<h2>Enum Constant Details<\/h2>\n+<ul class=\"member-list\">\n+<li>\n+<section class=\"detail\" id=\"EACH_INVOCATION\">\n+<h3>EACH_INVOCATION<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static final<\/span>&nbsp;<span class=\"return-type\"><a href=\"CheckAt.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">CheckAt<\/a><\/span>&nbsp;<span class=\"element-name\">EACH_INVOCATION<\/span><\/div>\n+<div class=\"block\">Default: Invoke the <a href=\"Check.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Check<\/code><\/a> method each time after invoking the associated <a href=\"Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Test<\/code><\/a> method.<\/div>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"COMPILED\">\n+<h3>COMPILED<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static final<\/span>&nbsp;<span class=\"return-type\"><a href=\"CheckAt.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">CheckAt<\/a><\/span>&nbsp;<span class=\"element-name\">COMPILED<\/span><\/div>\n+<div class=\"block\">Invoke the <a href=\"Check.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Check<\/code><\/a> method only once after the warm-up of the associated <a href=\"Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Test<\/code><\/a> method had been completed\n+ and the framework has compiled the associated <a href=\"Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Test<\/code><\/a> method.<\/div>\n+<\/section>\n+<\/li>\n+<\/ul>\n+<\/section>\n+<\/li>\n+<!-- ============ METHOD DETAIL ========== -->\n+<li>\n+<section class=\"method-details\" id=\"method-detail\">\n+<h2>Method Details<\/h2>\n+<ul class=\"member-list\">\n+<li>\n+<section class=\"detail\" id=\"values()\">\n+<h3>values<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static<\/span>&nbsp;<span class=\"return-type\"><a href=\"CheckAt.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">CheckAt<\/a>[]<\/span>&nbsp;<span class=\"element-name\">values<\/span>()<\/div>\n+<div class=\"block\">Returns an array containing the constants of this enum class, in\n+the order they are declared.<\/div>\n+<dl class=\"notes\">\n+<dt>Returns:<\/dt>\n+<dd>an array containing the constants of this enum class, in the order they are declared<\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"valueOf(java.lang.String)\">\n+<h3>valueOf<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static<\/span>&nbsp;<span class=\"return-type\"><a href=\"CheckAt.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">CheckAt<\/a><\/span>&nbsp;<span class=\"element-name\">valueOf<\/span>&#8203;<span class=\"parameters\">(<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a>&nbsp;name)<\/span><\/div>\n+<div class=\"block\">Returns the enum constant of this class with the specified name.\n+The string must match <i>exactly<\/i> an identifier used to declare an\n+enum constant in this class.  (Extraneous whitespace characters are \n+not permitted.)<\/div>\n+<dl class=\"notes\">\n+<dt>Parameters:<\/dt>\n+<dd><code>name<\/code> - the name of the enum constant to be returned.<\/dd>\n+<dt>Returns:<\/dt>\n+<dd>the enum constant with the specified name<\/dd>\n+<dt>Throws:<\/dt>\n+<dd><code><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/IllegalArgumentException.html\" title=\"class or interface in java.lang\" class=\"external-link\">IllegalArgumentException<\/a><\/code> - if this enum class has no constant with the specified name<\/dd>\n+<dd><code><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/NullPointerException.html\" title=\"class or interface in java.lang\" class=\"external-link\">NullPointerException<\/a><\/code> - if the argument is null<\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<\/ul>\n+<\/section>\n+<\/li>\n+<\/ul>\n+<\/section>\n+<!-- ========= END OF CLASS DATA ========= -->\n+<\/main>\n+<\/div>\n+<\/div>\n+<\/body>\n+<\/html>\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/doc\/jdk\/test\/lib\/hotspot\/ir_framework\/CheckAt.html","additions":231,"deletions":0,"binary":false,"changes":231,"status":"added"},{"patch":"@@ -0,0 +1,334 @@\n+<!DOCTYPE HTML>\n+<html lang=\"en\">\n+<head>\n+<!-- Generated by javadoc (17) on Wed Apr 14 13:12:12 CEST 2021 -->\n+<title>CompLevel<\/title>\n+<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n+<meta http-equiv=\"Content-Type\" content=\"text\/html; charset=utf-8\">\n+<meta name=\"dc.created\" content=\"2021-04-14\">\n+<meta name=\"description\" content=\"declaration: package: jdk.test.lib.hotspot.ir_framework, enum: CompLevel\">\n+<meta name=\"generator\" content=\"javadoc\/ClassWriterImpl\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/..\/..\/..\/..\/stylesheet.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/..\/..\/..\/..\/script-dir\/jquery-ui.min.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/..\/..\/..\/..\/jquery-ui.overrides.css\" title=\"Style\">\n+<script type=\"text\/javascript\" src=\"..\/..\/..\/..\/..\/script.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/..\/..\/..\/..\/script-dir\/jquery-3.5.1.min.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/..\/..\/..\/..\/script-dir\/jquery-ui.min.js\"><\/script>\n+<\/head>\n+<body class=\"class-declaration-page\">\n+<script type=\"text\/javascript\">var evenRowColor = \"even-row-color\";\n+var oddRowColor = \"odd-row-color\";\n+var tableTab = \"table-tab\";\n+var activeTableTab = \"active-table-tab\";\n+var pathtoroot = \"..\/..\/..\/..\/..\/\";\n+loadScripts(document, 'script');<\/script>\n+<noscript>\n+<div>JavaScript is disabled on your browser.<\/div>\n+<\/noscript>\n+<div class=\"flex-box\">\n+<header role=\"banner\" class=\"flex-header\">\n+<nav role=\"navigation\">\n+<!-- ========= START OF TOP NAVBAR ======= -->\n+<div class=\"top-nav\" id=\"navbar-top\">\n+<div class=\"skip-nav\"><a href=\"#skip-navbar-top\" title=\"Skip navigation links\">Skip navigation links<\/a><\/div>\n+<ul id=\"navbar-top-firstrow\" class=\"nav-list\" title=\"Navigation\">\n+<li><a href=\"package-summary.html\">Package<\/a><\/li>\n+<li class=\"nav-bar-cell1-rev\">Class<\/li>\n+<li><a href=\"package-tree.html\">Tree<\/a><\/li>\n+<li><a href=\"..\/..\/..\/..\/..\/index-files\/index-1.html\">Index<\/a><\/li>\n+<li><a href=\"..\/..\/..\/..\/..\/help-doc.html\">Help<\/a><\/li>\n+<\/ul>\n+<\/div>\n+<div class=\"sub-nav\">\n+<div>\n+<ul class=\"sub-nav-list\">\n+<li>Summary:&nbsp;<\/li>\n+<li><a href=\"#nested-class-summary\">Nested<\/a>&nbsp;|&nbsp;<\/li>\n+<li><a href=\"#enum-constant-summary\">Enum Constants<\/a>&nbsp;|&nbsp;<\/li>\n+<li>Field&nbsp;|&nbsp;<\/li>\n+<li><a href=\"#method-summary\">Method<\/a><\/li>\n+<\/ul>\n+<ul class=\"sub-nav-list\">\n+<li>Detail:&nbsp;<\/li>\n+<li><a href=\"#enum-constant-detail\">Enum Constants<\/a>&nbsp;|&nbsp;<\/li>\n+<li>Field&nbsp;|&nbsp;<\/li>\n+<li><a href=\"#method-detail\">Method<\/a><\/li>\n+<\/ul>\n+<\/div>\n+<div class=\"nav-list-search\"><label for=\"search\">SEARCH:<\/label>\n+<input type=\"text\" id=\"search\" value=\"search\" disabled=\"disabled\">\n+<input type=\"reset\" id=\"reset\" value=\"reset\" disabled=\"disabled\">\n+<\/div>\n+<\/div>\n+<!-- ========= END OF TOP NAVBAR ========= -->\n+<span class=\"skip-nav\" id=\"skip-navbar-top\"><\/span><\/nav>\n+<\/header>\n+<div class=\"flex-content\">\n+<main role=\"main\">\n+<!-- ======== START OF CLASS DATA ======== -->\n+<div class=\"header\">\n+<div class=\"sub-title\"><span class=\"package-label-in-type\">Package<\/span>&nbsp;<a href=\"package-summary.html\">jdk.test.lib.hotspot.ir_framework<\/a><\/div>\n+<h1 title=\"Enum Class CompLevel\" class=\"title\">Enum Class CompLevel<\/h1>\n+<\/div>\n+<div class=\"inheritance\" title=\"Inheritance Tree\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html\" title=\"class or interface in java.lang\" class=\"external-link\">java.lang.Object<\/a>\n+<div class=\"inheritance\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Enum.html\" title=\"class or interface in java.lang\" class=\"external-link\">java.lang.Enum<\/a>&lt;<a href=\"CompLevel.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">CompLevel<\/a>&gt;\n+<div class=\"inheritance\">jdk.test.lib.hotspot.ir_framework.CompLevel<\/div>\n+<\/div>\n+<\/div>\n+<section class=\"description\">\n+<dl class=\"notes\">\n+<dt>All Implemented Interfaces:<\/dt>\n+<dd><code><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/io\/Serializable.html\" title=\"class or interface in java.io\" class=\"external-link\">Serializable<\/a><\/code>, <code><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Comparable.html\" title=\"class or interface in java.lang\" class=\"external-link\">Comparable<\/a>&lt;<a href=\"CompLevel.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">CompLevel<\/a>&gt;<\/code>, <code><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/constant\/Constable.html\" title=\"class or interface in java.lang.constant\" class=\"external-link\">Constable<\/a><\/code><\/dd>\n+<\/dl>\n+<hr>\n+<div class=\"type-signature\"><span class=\"modifiers\">public enum <\/span><span class=\"element-name type-name-label\">CompLevel<\/span>\n+<span class=\"extends-implements\">extends <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Enum.html\" title=\"class or interface in java.lang\" class=\"external-link\">Enum<\/a>&lt;<a href=\"CompLevel.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">CompLevel<\/a>&gt;<\/span><\/div>\n+<div class=\"block\">Compilation levels used by the framework. The compilation levels map to the used levels in HotSpot (apart from the\n+ framework specific values <a href=\"#SKIP\"><code>SKIP<\/code><\/a> and <a href=\"#WAIT_FOR_COMPILATION\"><code>WAIT_FOR_COMPILATION<\/code><\/a> that cannot be found in HotSpot).\n+\n+ <p>\n+ The compilation levels can be specified in the <a href=\"Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Test<\/code><\/a>, <a href=\"ForceCompile.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>ForceCompile<\/code><\/a> and <a href=\"DontCompile.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>DontCompile<\/code><\/a> annotation.<\/div>\n+<dl class=\"notes\">\n+<dt>See Also:<\/dt>\n+<dd><a href=\"Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Test<\/code><\/a>, \n+<a href=\"ForceCompile.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>ForceCompile<\/code><\/a>, \n+<a href=\"DontCompile.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>DontCompile<\/code><\/a><\/dd>\n+<\/dl>\n+<\/section>\n+<section class=\"summary\">\n+<ul class=\"summary-list\">\n+<!-- ======== NESTED CLASS SUMMARY ======== -->\n+<li>\n+<section class=\"nested-class-summary\" id=\"nested-class-summary\">\n+<h2>Nested Class Summary<\/h2>\n+<div class=\"inherited-list\">\n+<h2 id=\"nested-classes-inherited-from-class-java.lang.Enum\">Nested classes\/interfaces inherited from class&nbsp;java.lang.<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Enum.html\" title=\"class or interface in java.lang\" class=\"external-link\">Enum<\/a><\/h2>\n+<code><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Enum.EnumDesc.html\" title=\"class or interface in java.lang\" class=\"external-link\">Enum.EnumDesc<\/a>&lt;<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Enum.EnumDesc.html\" title=\"class or interface in java.lang\" class=\"external-link\">E<\/a> extends <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Enum.html\" title=\"class or interface in java.lang\" class=\"external-link\">Enum<\/a>&lt;<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Enum.EnumDesc.html\" title=\"class or interface in java.lang\" class=\"external-link\">E<\/a>&gt;&gt;<\/code><\/div>\n+<\/section>\n+<\/li>\n+<!-- =========== ENUM CONSTANT SUMMARY =========== -->\n+<li>\n+<section class=\"constants-summary\" id=\"enum-constant-summary\">\n+<h2>Enum Constant Summary<\/h2>\n+<div class=\"caption\"><span>Enum Constants<\/span><\/div>\n+<div class=\"summary-table two-column-summary\">\n+<div class=\"table-header col-first\">Enum Constant<\/div>\n+<div class=\"table-header col-last\">Description<\/div>\n+<div class=\"col-first even-row-color\"><code><a href=\"#ANY\" class=\"member-name-link\">ANY<\/a><\/code><\/div>\n+<div class=\"col-last even-row-color\">\n+<div class=\"block\">Use any compilation level depending on the usage:\n+  \n+      <\/div>\n+<\/div>\n+<div class=\"col-first odd-row-color\"><code><a href=\"#C1\" class=\"member-name-link\">C1<\/a><\/code><\/div>\n+<div class=\"col-last odd-row-color\">\n+<div class=\"block\">Compilation level 1: C1 compilation without any profile information.<\/div>\n+<\/div>\n+<div class=\"col-first even-row-color\"><code><a href=\"#C1_FULL_PROFILE\" class=\"member-name-link\">C1_FULL_PROFILE<\/a><\/code><\/div>\n+<div class=\"col-last even-row-color\">\n+<div class=\"block\">Compilation level 3: C1 compilation with full profile information: Includes Invocation and backedge counters with MDO.<\/div>\n+<\/div>\n+<div class=\"col-first odd-row-color\"><code><a href=\"#C1_LIMITED_PROFILE\" class=\"member-name-link\">C1_LIMITED_PROFILE<\/a><\/code><\/div>\n+<div class=\"col-last odd-row-color\">\n+<div class=\"block\">Compilation level 2: C1 compilation with limited profile information: Includes Invocation and backedge counters.<\/div>\n+<\/div>\n+<div class=\"col-first even-row-color\"><code><a href=\"#C2\" class=\"member-name-link\">C2<\/a><\/code><\/div>\n+<div class=\"col-last even-row-color\">\n+<div class=\"block\">Compilation level 4: C2 compilation with full optimizations.<\/div>\n+<\/div>\n+<div class=\"col-first odd-row-color\"><code><a href=\"#SKIP\" class=\"member-name-link\">SKIP<\/a><\/code><\/div>\n+<div class=\"col-last odd-row-color\">\n+<div class=\"block\">Can only be used at <a href=\"Test.html#compLevel()\"><code>Test.compLevel()<\/code><\/a>.<\/div>\n+<\/div>\n+<div class=\"col-first even-row-color\"><code><a href=\"#WAIT_FOR_COMPILATION\" class=\"member-name-link\">WAIT_FOR_COMPILATION<\/a><\/code><\/div>\n+<div class=\"col-last even-row-color\">\n+<div class=\"block\">Can only be used at <a href=\"Test.html#compLevel()\"><code>Test.compLevel()<\/code><\/a>.<\/div>\n+<\/div>\n+<\/div>\n+<\/section>\n+<\/li>\n+<!-- ========== METHOD SUMMARY =========== -->\n+<li>\n+<section class=\"method-summary\" id=\"method-summary\">\n+<h2>Method Summary<\/h2>\n+<div id=\"method-summary-table\">\n+<div class=\"table-tabs\" role=\"tablist\" aria-orientation=\"horizontal\"><button id=\"method-summary-table-tab0\" role=\"tab\" aria-selected=\"true\" aria-controls=\"method-summary-table.tabpanel\" tabindex=\"0\" onkeydown=\"switchTab(event)\" onclick=\"show('method-summary-table', 'method-summary-table', 3)\" class=\"active-table-tab\">All Methods<\/button><button id=\"method-summary-table-tab1\" role=\"tab\" aria-selected=\"false\" aria-controls=\"method-summary-table.tabpanel\" tabindex=\"-1\" onkeydown=\"switchTab(event)\" onclick=\"show('method-summary-table', 'method-summary-table-tab1', 3)\" class=\"table-tab\">Static Methods<\/button><button id=\"method-summary-table-tab2\" role=\"tab\" aria-selected=\"false\" aria-controls=\"method-summary-table.tabpanel\" tabindex=\"-1\" onkeydown=\"switchTab(event)\" onclick=\"show('method-summary-table', 'method-summary-table-tab2', 3)\" class=\"table-tab\">Instance Methods<\/button><button id=\"method-summary-table-tab4\" role=\"tab\" aria-selected=\"false\" aria-controls=\"method-summary-table.tabpanel\" tabindex=\"-1\" onkeydown=\"switchTab(event)\" onclick=\"show('method-summary-table', 'method-summary-table-tab4', 3)\" class=\"table-tab\">Concrete Methods<\/button><\/div>\n+<div id=\"method-summary-table.tabpanel\" role=\"tabpanel\">\n+<div class=\"summary-table three-column-summary\" aria-labelledby=\"method-summary-table-tab0\">\n+<div class=\"table-header col-first\">Modifier and Type<\/div>\n+<div class=\"table-header col-second\">Method<\/div>\n+<div class=\"table-header col-last\">Description<\/div>\n+<div class=\"col-first even-row-color method-summary-table method-summary-table-tab1 method-summary-table-tab4\"><code>static <a href=\"CompLevel.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">CompLevel<\/a><\/code><\/div>\n+<div class=\"col-second even-row-color method-summary-table method-summary-table-tab1 method-summary-table-tab4\"><code><a href=\"#forValue(int)\" class=\"member-name-link\">forValue<\/a>&#8203;(int&nbsp;value)<\/code><\/div>\n+<div class=\"col-last even-row-color method-summary-table method-summary-table-tab1 method-summary-table-tab4\">\n+<div class=\"block\">Get the compilation level enum from the specified integer.<\/div>\n+<\/div>\n+<div class=\"col-first odd-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\"><code>int<\/code><\/div>\n+<div class=\"col-second odd-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\"><code><a href=\"#getValue()\" class=\"member-name-link\">getValue<\/a>()<\/code><\/div>\n+<div class=\"col-last odd-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\">\n+<div class=\"block\">Get the compilation level as integer value.<\/div>\n+<\/div>\n+<div class=\"col-first even-row-color method-summary-table method-summary-table-tab1 method-summary-table-tab4\"><code>static <a href=\"CompLevel.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">CompLevel<\/a><\/code><\/div>\n+<div class=\"col-second even-row-color method-summary-table method-summary-table-tab1 method-summary-table-tab4\"><code><a href=\"#valueOf(java.lang.String)\" class=\"member-name-link\">valueOf<\/a>&#8203;(<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a>&nbsp;name)<\/code><\/div>\n+<div class=\"col-last even-row-color method-summary-table method-summary-table-tab1 method-summary-table-tab4\">\n+<div class=\"block\">Returns the enum constant of this class with the specified name.<\/div>\n+<\/div>\n+<div class=\"col-first odd-row-color method-summary-table method-summary-table-tab1 method-summary-table-tab4\"><code>static <a href=\"CompLevel.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">CompLevel<\/a>[]<\/code><\/div>\n+<div class=\"col-second odd-row-color method-summary-table method-summary-table-tab1 method-summary-table-tab4\"><code><a href=\"#values()\" class=\"member-name-link\">values<\/a>()<\/code><\/div>\n+<div class=\"col-last odd-row-color method-summary-table method-summary-table-tab1 method-summary-table-tab4\">\n+<div class=\"block\">Returns an array containing the constants of this enum class, in\n+the order they are declared.<\/div>\n+<\/div>\n+<\/div>\n+<\/div>\n+<\/div>\n+<div class=\"inherited-list\">\n+<h3 id=\"methods-inherited-from-class-java.lang.Enum\">Methods inherited from class&nbsp;java.lang.<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Enum.html\" title=\"class or interface in java.lang\" class=\"external-link\">Enum<\/a><\/h3>\n+<code><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Enum.html#clone()\" title=\"class or interface in java.lang\" class=\"external-link\">clone<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Enum.html#compareTo(E)\" title=\"class or interface in java.lang\" class=\"external-link\">compareTo<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Enum.html#describeConstable()\" title=\"class or interface in java.lang\" class=\"external-link\">describeConstable<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Enum.html#equals(java.lang.Object)\" title=\"class or interface in java.lang\" class=\"external-link\">equals<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Enum.html#finalize()\" title=\"class or interface in java.lang\" class=\"external-link\">finalize<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Enum.html#getDeclaringClass()\" title=\"class or interface in java.lang\" class=\"external-link\">getDeclaringClass<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Enum.html#hashCode()\" title=\"class or interface in java.lang\" class=\"external-link\">hashCode<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Enum.html#name()\" title=\"class or interface in java.lang\" class=\"external-link\">name<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Enum.html#ordinal()\" title=\"class or interface in java.lang\" class=\"external-link\">ordinal<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Enum.html#toString()\" title=\"class or interface in java.lang\" class=\"external-link\">toString<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Enum.html#valueOf(java.lang.Class,java.lang.String)\" title=\"class or interface in java.lang\" class=\"external-link\">valueOf<\/a><\/code><\/div>\n+<div class=\"inherited-list\">\n+<h3 id=\"methods-inherited-from-class-java.lang.Object\">Methods inherited from class&nbsp;java.lang.<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html\" title=\"class or interface in java.lang\" class=\"external-link\">Object<\/a><\/h3>\n+<code><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#getClass()\" title=\"class or interface in java.lang\" class=\"external-link\">getClass<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#notify()\" title=\"class or interface in java.lang\" class=\"external-link\">notify<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#notifyAll()\" title=\"class or interface in java.lang\" class=\"external-link\">notifyAll<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#wait()\" title=\"class or interface in java.lang\" class=\"external-link\">wait<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#wait(long)\" title=\"class or interface in java.lang\" class=\"external-link\">wait<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#wait(long,int)\" title=\"class or interface in java.lang\" class=\"external-link\">wait<\/a><\/code><\/div>\n+<\/section>\n+<\/li>\n+<\/ul>\n+<\/section>\n+<section class=\"details\">\n+<ul class=\"details-list\">\n+<!-- ============ ENUM CONSTANT DETAIL =========== -->\n+<li>\n+<section class=\"constant-details\" id=\"enum-constant-detail\">\n+<h2>Enum Constant Details<\/h2>\n+<ul class=\"member-list\">\n+<li>\n+<section class=\"detail\" id=\"WAIT_FOR_COMPILATION\">\n+<h3>WAIT_FOR_COMPILATION<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static final<\/span>&nbsp;<span class=\"return-type\"><a href=\"CompLevel.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">CompLevel<\/a><\/span>&nbsp;<span class=\"element-name\">WAIT_FOR_COMPILATION<\/span><\/div>\n+<div class=\"block\">Can only be used at <a href=\"Test.html#compLevel()\"><code>Test.compLevel()<\/code><\/a>. After the warm-up, the framework keeps invoking the test over a span\n+ of 10s (configurable by setting the property flag <code>-DWaitForCompilationTimeout<\/code>) until HotSpot compiles the\n+ <a href=\"Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Test<\/code><\/a> method. If the method was not compiled after 10s, an exception is thrown. The framework does not wait\n+ for the compilation if the test VM is run with <code>-Xcomp<\/code>, <code>-XX:-UseCompiler<\/code> or <code>-DStressCC=true<\/code>.<\/div>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"SKIP\">\n+<h3>SKIP<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static final<\/span>&nbsp;<span class=\"return-type\"><a href=\"CompLevel.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">CompLevel<\/a><\/span>&nbsp;<span class=\"element-name\">SKIP<\/span><\/div>\n+<div class=\"block\">Can only be used at <a href=\"Test.html#compLevel()\"><code>Test.compLevel()<\/code><\/a>. Skip a compilation of the <a href=\"Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@Test<\/code><\/a> method completely.<\/div>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"ANY\">\n+<h3>ANY<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static final<\/span>&nbsp;<span class=\"return-type\"><a href=\"CompLevel.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">CompLevel<\/a><\/span>&nbsp;<span class=\"element-name\">ANY<\/span><\/div>\n+<div class=\"block\">Use any compilation level depending on the usage:\n+  <ul>\n+      <li><p><a href=\"Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@Test<\/code><\/a>, <a href=\"ForceCompile.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@ForceCompile<\/code><\/a>: Use the highest available compilation level\n+      which is usually C2.<\/li>\n+      <li><p><a href=\"DontCompile.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@DontCompile<\/code><\/a>: Prevents any compilation of the associated helper method.<\/li>\n+  <\/ul><\/div>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"C1\">\n+<h3>C1<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static final<\/span>&nbsp;<span class=\"return-type\"><a href=\"CompLevel.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">CompLevel<\/a><\/span>&nbsp;<span class=\"element-name\">C1<\/span><\/div>\n+<div class=\"block\">Compilation level 1: C1 compilation without any profile information.<\/div>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"C1_LIMITED_PROFILE\">\n+<h3>C1_LIMITED_PROFILE<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static final<\/span>&nbsp;<span class=\"return-type\"><a href=\"CompLevel.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">CompLevel<\/a><\/span>&nbsp;<span class=\"element-name\">C1_LIMITED_PROFILE<\/span><\/div>\n+<div class=\"block\">Compilation level 2: C1 compilation with limited profile information: Includes Invocation and backedge counters.<\/div>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"C1_FULL_PROFILE\">\n+<h3>C1_FULL_PROFILE<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static final<\/span>&nbsp;<span class=\"return-type\"><a href=\"CompLevel.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">CompLevel<\/a><\/span>&nbsp;<span class=\"element-name\">C1_FULL_PROFILE<\/span><\/div>\n+<div class=\"block\">Compilation level 3: C1 compilation with full profile information: Includes Invocation and backedge counters with MDO.<\/div>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"C2\">\n+<h3>C2<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static final<\/span>&nbsp;<span class=\"return-type\"><a href=\"CompLevel.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">CompLevel<\/a><\/span>&nbsp;<span class=\"element-name\">C2<\/span><\/div>\n+<div class=\"block\">Compilation level 4: C2 compilation with full optimizations.<\/div>\n+<\/section>\n+<\/li>\n+<\/ul>\n+<\/section>\n+<\/li>\n+<!-- ============ METHOD DETAIL ========== -->\n+<li>\n+<section class=\"method-details\" id=\"method-detail\">\n+<h2>Method Details<\/h2>\n+<ul class=\"member-list\">\n+<li>\n+<section class=\"detail\" id=\"values()\">\n+<h3>values<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static<\/span>&nbsp;<span class=\"return-type\"><a href=\"CompLevel.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">CompLevel<\/a>[]<\/span>&nbsp;<span class=\"element-name\">values<\/span>()<\/div>\n+<div class=\"block\">Returns an array containing the constants of this enum class, in\n+the order they are declared.<\/div>\n+<dl class=\"notes\">\n+<dt>Returns:<\/dt>\n+<dd>an array containing the constants of this enum class, in the order they are declared<\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"valueOf(java.lang.String)\">\n+<h3>valueOf<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static<\/span>&nbsp;<span class=\"return-type\"><a href=\"CompLevel.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">CompLevel<\/a><\/span>&nbsp;<span class=\"element-name\">valueOf<\/span>&#8203;<span class=\"parameters\">(<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a>&nbsp;name)<\/span><\/div>\n+<div class=\"block\">Returns the enum constant of this class with the specified name.\n+The string must match <i>exactly<\/i> an identifier used to declare an\n+enum constant in this class.  (Extraneous whitespace characters are \n+not permitted.)<\/div>\n+<dl class=\"notes\">\n+<dt>Parameters:<\/dt>\n+<dd><code>name<\/code> - the name of the enum constant to be returned.<\/dd>\n+<dt>Returns:<\/dt>\n+<dd>the enum constant with the specified name<\/dd>\n+<dt>Throws:<\/dt>\n+<dd><code><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/IllegalArgumentException.html\" title=\"class or interface in java.lang\" class=\"external-link\">IllegalArgumentException<\/a><\/code> - if this enum class has no constant with the specified name<\/dd>\n+<dd><code><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/NullPointerException.html\" title=\"class or interface in java.lang\" class=\"external-link\">NullPointerException<\/a><\/code> - if the argument is null<\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"getValue()\">\n+<h3>getValue<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public<\/span>&nbsp;<span class=\"return-type\">int<\/span>&nbsp;<span class=\"element-name\">getValue<\/span>()<\/div>\n+<div class=\"block\">Get the compilation level as integer value. These will match the levels specified in HotSpot (if available).<\/div>\n+<dl class=\"notes\">\n+<dt>Returns:<\/dt>\n+<dd>the compilation level as integer.<\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"forValue(int)\">\n+<h3>forValue<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static<\/span>&nbsp;<span class=\"return-type\"><a href=\"CompLevel.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">CompLevel<\/a><\/span>&nbsp;<span class=\"element-name\">forValue<\/span>&#8203;<span class=\"parameters\">(int&nbsp;value)<\/span><\/div>\n+<div class=\"block\">Get the compilation level enum from the specified integer.<\/div>\n+<dl class=\"notes\">\n+<dt>Parameters:<\/dt>\n+<dd><code>value<\/code> - the compilation level as integer.<\/dd>\n+<dt>Returns:<\/dt>\n+<dd>the compilation level enum for <code>value<\/code>.<\/dd>\n+<dt>Throws:<\/dt>\n+<dd><code><a href=\"TestRunException.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestRunException<\/a><\/code> - if <code>value<\/code> does not specify a valid compilation level.<\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<\/ul>\n+<\/section>\n+<\/li>\n+<\/ul>\n+<\/section>\n+<!-- ========= END OF CLASS DATA ========= -->\n+<\/main>\n+<\/div>\n+<\/div>\n+<\/body>\n+<\/html>\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/doc\/jdk\/test\/lib\/hotspot\/ir_framework\/CompLevel.html","additions":334,"deletions":0,"binary":false,"changes":334,"status":"added"},{"patch":"@@ -0,0 +1,133 @@\n+<!DOCTYPE HTML>\n+<html lang=\"en\">\n+<head>\n+<!-- Generated by javadoc (17) on Wed Apr 14 13:12:12 CEST 2021 -->\n+<title>DontCompile<\/title>\n+<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n+<meta http-equiv=\"Content-Type\" content=\"text\/html; charset=utf-8\">\n+<meta name=\"dc.created\" content=\"2021-04-14\">\n+<meta name=\"description\" content=\"declaration: package: jdk.test.lib.hotspot.ir_framework, annotation type: DontCompile\">\n+<meta name=\"generator\" content=\"javadoc\/ClassWriterImpl\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/..\/..\/..\/..\/stylesheet.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/..\/..\/..\/..\/script-dir\/jquery-ui.min.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/..\/..\/..\/..\/jquery-ui.overrides.css\" title=\"Style\">\n+<script type=\"text\/javascript\" src=\"..\/..\/..\/..\/..\/script.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/..\/..\/..\/..\/script-dir\/jquery-3.5.1.min.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/..\/..\/..\/..\/script-dir\/jquery-ui.min.js\"><\/script>\n+<\/head>\n+<body class=\"class-declaration-page\">\n+<script type=\"text\/javascript\">var pathtoroot = \"..\/..\/..\/..\/..\/\";\n+loadScripts(document, 'script');<\/script>\n+<noscript>\n+<div>JavaScript is disabled on your browser.<\/div>\n+<\/noscript>\n+<div class=\"flex-box\">\n+<header role=\"banner\" class=\"flex-header\">\n+<nav role=\"navigation\">\n+<!-- ========= START OF TOP NAVBAR ======= -->\n+<div class=\"top-nav\" id=\"navbar-top\">\n+<div class=\"skip-nav\"><a href=\"#skip-navbar-top\" title=\"Skip navigation links\">Skip navigation links<\/a><\/div>\n+<ul id=\"navbar-top-firstrow\" class=\"nav-list\" title=\"Navigation\">\n+<li><a href=\"package-summary.html\">Package<\/a><\/li>\n+<li class=\"nav-bar-cell1-rev\">Class<\/li>\n+<li><a href=\"package-tree.html\">Tree<\/a><\/li>\n+<li><a href=\"..\/..\/..\/..\/..\/index-files\/index-1.html\">Index<\/a><\/li>\n+<li><a href=\"..\/..\/..\/..\/..\/help-doc.html\">Help<\/a><\/li>\n+<\/ul>\n+<\/div>\n+<div class=\"sub-nav\">\n+<div>\n+<ul class=\"sub-nav-list\">\n+<li>Summary:&nbsp;<\/li>\n+<li>Field&nbsp;|&nbsp;<\/li>\n+<li>Required&nbsp;|&nbsp;<\/li>\n+<li><a href=\"#annotation-interface-optional-element-summary\">Optional<\/a><\/li>\n+<\/ul>\n+<ul class=\"sub-nav-list\">\n+<li>Detail:&nbsp;<\/li>\n+<li>Field&nbsp;|&nbsp;<\/li>\n+<li><a href=\"#annotation-interface-element-detail\">Element<\/a><\/li>\n+<\/ul>\n+<\/div>\n+<div class=\"nav-list-search\"><label for=\"search\">SEARCH:<\/label>\n+<input type=\"text\" id=\"search\" value=\"search\" disabled=\"disabled\">\n+<input type=\"reset\" id=\"reset\" value=\"reset\" disabled=\"disabled\">\n+<\/div>\n+<\/div>\n+<!-- ========= END OF TOP NAVBAR ========= -->\n+<span class=\"skip-nav\" id=\"skip-navbar-top\"><\/span><\/nav>\n+<\/header>\n+<div class=\"flex-content\">\n+<main role=\"main\">\n+<!-- ======== START OF CLASS DATA ======== -->\n+<div class=\"header\">\n+<div class=\"sub-title\"><span class=\"package-label-in-type\">Package<\/span>&nbsp;<a href=\"package-summary.html\">jdk.test.lib.hotspot.ir_framework<\/a><\/div>\n+<h1 title=\"Annotation Interface DontCompile\" class=\"title\">Annotation Interface DontCompile<\/h1>\n+<\/div>\n+<section class=\"description\">\n+<hr>\n+<div class=\"type-signature\"><span class=\"annotations\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/annotation\/Retention.html\" title=\"class or interface in java.lang.annotation\" class=\"external-link\">@Retention<\/a>(<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/annotation\/RetentionPolicy.html#RUNTIME\" title=\"class or interface in java.lang.annotation\" class=\"external-link\">RUNTIME<\/a>)\n+<\/span><span class=\"modifiers\">public @interface <\/span><span class=\"element-name type-name-label\">DontCompile<\/span><\/div>\n+<div class=\"block\">Prevent a compilation of the annotated <b>helper method<\/b> (not specifying <a href=\"Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@Test<\/code><\/a>,\n+ <a href=\"Check.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@Check<\/code><\/a> or <a href=\"Run.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@Run<\/code><\/a>):\n+\n+ <ul>\n+     <li><p><a href=\"CompLevel.html#ANY\"><code>CompLevel.ANY<\/code><\/a> (default): No C1 or C2 compilation.<\/li>\n+     <li><p><a href=\"CompLevel.html#C1\"><code>CompLevel.C1<\/code><\/a>: No C1 compilation, C2 compilation still possible.<\/li>\n+     <li><p><a href=\"CompLevel.html#C2\"><code>CompLevel.C2<\/code><\/a>: No C2 compilation, C1 compilation still possible.<\/li>\n+     <li><p>The usage of any other compilation level is forbidden and results in a\n+            <a href=\"TestFormatException.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\"><code>TestFormatException<\/code><\/a>.<\/li>\n+ <\/ul>\n+ <p>\n+ Using this annotation on <i>non-helper methods<\/i> results in a <a href=\"TestFormatException.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\"><code>TestFormatException<\/code><\/a>.<\/div>\n+<\/section>\n+<section class=\"summary\">\n+<ul class=\"summary-list\">\n+<!-- =========== ANNOTATION INTERFACE OPTIONAL MEMBER SUMMARY =========== -->\n+<li>\n+<section class=\"member-summary\" id=\"annotation-interface-optional-element-summary\">\n+<h2>Optional Element Summary<\/h2>\n+<div class=\"caption\"><span>Optional Elements<\/span><\/div>\n+<div class=\"summary-table three-column-summary\">\n+<div class=\"table-header col-first\">Modifier and Type<\/div>\n+<div class=\"table-header col-second\">Optional Element<\/div>\n+<div class=\"table-header col-last\">Description<\/div>\n+<div class=\"col-first even-row-color\"><code><a href=\"CompLevel.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">CompLevel<\/a><\/code><\/div>\n+<div class=\"col-second even-row-color\"><code><a href=\"#value()\" class=\"member-name-link\">value<\/a><\/code><\/div>\n+<div class=\"col-last even-row-color\">\n+<div class=\"block\">The excluded compilation level for the helper method.<\/div>\n+<\/div>\n+<\/div>\n+<\/section>\n+<\/li>\n+<\/ul>\n+<\/section>\n+<section class=\"details\" id=\"annotation-interface-element-detail\">\n+<ul class=\"details-list\">\n+<!-- ============ ANNOTATION INTERFACE MEMBER DETAIL =========== -->\n+<li>\n+<section class=\"member-details\">\n+<h2>Element Details<\/h2>\n+<ul class=\"member-list\">\n+<li>\n+<section class=\"detail\" id=\"value()\">\n+<h3>value<\/h3>\n+<div class=\"member-signature\"><span class=\"return-type\"><a href=\"CompLevel.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">CompLevel<\/a><\/span>&nbsp;<span class=\"element-name\">value<\/span><\/div>\n+<div class=\"block\">The excluded compilation level for the helper method.<\/div>\n+<dl class=\"notes\">\n+<dt>Default:<\/dt>\n+<dd>ANY<\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<\/ul>\n+<\/section>\n+<\/li>\n+<\/ul>\n+<\/section>\n+<!-- ========= END OF CLASS DATA ========= -->\n+<\/main>\n+<\/div>\n+<\/div>\n+<\/body>\n+<\/html>\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/doc\/jdk\/test\/lib\/hotspot\/ir_framework\/DontCompile.html","additions":133,"deletions":0,"binary":false,"changes":133,"status":"added"},{"patch":"@@ -0,0 +1,80 @@\n+<!DOCTYPE HTML>\n+<html lang=\"en\">\n+<head>\n+<!-- Generated by javadoc (17) on Wed Apr 14 13:12:12 CEST 2021 -->\n+<title>DontInline<\/title>\n+<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n+<meta http-equiv=\"Content-Type\" content=\"text\/html; charset=utf-8\">\n+<meta name=\"dc.created\" content=\"2021-04-14\">\n+<meta name=\"description\" content=\"declaration: package: jdk.test.lib.hotspot.ir_framework, annotation type: DontInline\">\n+<meta name=\"generator\" content=\"javadoc\/ClassWriterImpl\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/..\/..\/..\/..\/stylesheet.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/..\/..\/..\/..\/script-dir\/jquery-ui.min.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/..\/..\/..\/..\/jquery-ui.overrides.css\" title=\"Style\">\n+<script type=\"text\/javascript\" src=\"..\/..\/..\/..\/..\/script.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/..\/..\/..\/..\/script-dir\/jquery-3.5.1.min.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/..\/..\/..\/..\/script-dir\/jquery-ui.min.js\"><\/script>\n+<\/head>\n+<body class=\"class-declaration-page\">\n+<script type=\"text\/javascript\">var pathtoroot = \"..\/..\/..\/..\/..\/\";\n+loadScripts(document, 'script');<\/script>\n+<noscript>\n+<div>JavaScript is disabled on your browser.<\/div>\n+<\/noscript>\n+<div class=\"flex-box\">\n+<header role=\"banner\" class=\"flex-header\">\n+<nav role=\"navigation\">\n+<!-- ========= START OF TOP NAVBAR ======= -->\n+<div class=\"top-nav\" id=\"navbar-top\">\n+<div class=\"skip-nav\"><a href=\"#skip-navbar-top\" title=\"Skip navigation links\">Skip navigation links<\/a><\/div>\n+<ul id=\"navbar-top-firstrow\" class=\"nav-list\" title=\"Navigation\">\n+<li><a href=\"package-summary.html\">Package<\/a><\/li>\n+<li class=\"nav-bar-cell1-rev\">Class<\/li>\n+<li><a href=\"package-tree.html\">Tree<\/a><\/li>\n+<li><a href=\"..\/..\/..\/..\/..\/index-files\/index-1.html\">Index<\/a><\/li>\n+<li><a href=\"..\/..\/..\/..\/..\/help-doc.html\">Help<\/a><\/li>\n+<\/ul>\n+<\/div>\n+<div class=\"sub-nav\">\n+<div>\n+<ul class=\"sub-nav-list\">\n+<li>Summary:&nbsp;<\/li>\n+<li>Field&nbsp;|&nbsp;<\/li>\n+<li>Required&nbsp;|&nbsp;<\/li>\n+<li>Optional<\/li>\n+<\/ul>\n+<ul class=\"sub-nav-list\">\n+<li>Detail:&nbsp;<\/li>\n+<li>Field&nbsp;|&nbsp;<\/li>\n+<li>Element<\/li>\n+<\/ul>\n+<\/div>\n+<div class=\"nav-list-search\"><label for=\"search\">SEARCH:<\/label>\n+<input type=\"text\" id=\"search\" value=\"search\" disabled=\"disabled\">\n+<input type=\"reset\" id=\"reset\" value=\"reset\" disabled=\"disabled\">\n+<\/div>\n+<\/div>\n+<!-- ========= END OF TOP NAVBAR ========= -->\n+<span class=\"skip-nav\" id=\"skip-navbar-top\"><\/span><\/nav>\n+<\/header>\n+<div class=\"flex-content\">\n+<main role=\"main\">\n+<!-- ======== START OF CLASS DATA ======== -->\n+<div class=\"header\">\n+<div class=\"sub-title\"><span class=\"package-label-in-type\">Package<\/span>&nbsp;<a href=\"package-summary.html\">jdk.test.lib.hotspot.ir_framework<\/a><\/div>\n+<h1 title=\"Annotation Interface DontInline\" class=\"title\">Annotation Interface DontInline<\/h1>\n+<\/div>\n+<section class=\"description\">\n+<hr>\n+<div class=\"type-signature\"><span class=\"annotations\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/annotation\/Retention.html\" title=\"class or interface in java.lang.annotation\" class=\"external-link\">@Retention<\/a>(<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/annotation\/RetentionPolicy.html#RUNTIME\" title=\"class or interface in java.lang.annotation\" class=\"external-link\">RUNTIME<\/a>)\n+<\/span><span class=\"modifiers\">public @interface <\/span><span class=\"element-name type-name-label\">DontInline<\/span><\/div>\n+<div class=\"block\">Prevent an inlining of the annotated <b>helper method<\/b> (not specifying <a href=\"Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@Test<\/code><\/a>, <a href=\"Check.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@Check<\/code><\/a>,\n+ or <a href=\"Run.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@Run<\/code><\/a>). <i>Non-helper methods<\/i> are never inlined. Explicitly using this annotation on\n+ <i>non-helper methods<\/i> results in a <a href=\"TestFormatException.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\"><code>TestFormatException<\/code><\/a>.<\/div>\n+<\/section>\n+<!-- ========= END OF CLASS DATA ========= -->\n+<\/main>\n+<\/div>\n+<\/div>\n+<\/body>\n+<\/html>\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/doc\/jdk\/test\/lib\/hotspot\/ir_framework\/DontInline.html","additions":80,"deletions":0,"binary":false,"changes":80,"status":"added"},{"patch":"@@ -0,0 +1,139 @@\n+<!DOCTYPE HTML>\n+<html lang=\"en\">\n+<head>\n+<!-- Generated by javadoc (17) on Wed Apr 14 13:12:12 CEST 2021 -->\n+<title>ForceCompile<\/title>\n+<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n+<meta http-equiv=\"Content-Type\" content=\"text\/html; charset=utf-8\">\n+<meta name=\"dc.created\" content=\"2021-04-14\">\n+<meta name=\"description\" content=\"declaration: package: jdk.test.lib.hotspot.ir_framework, annotation type: ForceCompile\">\n+<meta name=\"generator\" content=\"javadoc\/ClassWriterImpl\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/..\/..\/..\/..\/stylesheet.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/..\/..\/..\/..\/script-dir\/jquery-ui.min.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/..\/..\/..\/..\/jquery-ui.overrides.css\" title=\"Style\">\n+<script type=\"text\/javascript\" src=\"..\/..\/..\/..\/..\/script.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/..\/..\/..\/..\/script-dir\/jquery-3.5.1.min.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/..\/..\/..\/..\/script-dir\/jquery-ui.min.js\"><\/script>\n+<\/head>\n+<body class=\"class-declaration-page\">\n+<script type=\"text\/javascript\">var pathtoroot = \"..\/..\/..\/..\/..\/\";\n+loadScripts(document, 'script');<\/script>\n+<noscript>\n+<div>JavaScript is disabled on your browser.<\/div>\n+<\/noscript>\n+<div class=\"flex-box\">\n+<header role=\"banner\" class=\"flex-header\">\n+<nav role=\"navigation\">\n+<!-- ========= START OF TOP NAVBAR ======= -->\n+<div class=\"top-nav\" id=\"navbar-top\">\n+<div class=\"skip-nav\"><a href=\"#skip-navbar-top\" title=\"Skip navigation links\">Skip navigation links<\/a><\/div>\n+<ul id=\"navbar-top-firstrow\" class=\"nav-list\" title=\"Navigation\">\n+<li><a href=\"package-summary.html\">Package<\/a><\/li>\n+<li class=\"nav-bar-cell1-rev\">Class<\/li>\n+<li><a href=\"package-tree.html\">Tree<\/a><\/li>\n+<li><a href=\"..\/..\/..\/..\/..\/index-files\/index-1.html\">Index<\/a><\/li>\n+<li><a href=\"..\/..\/..\/..\/..\/help-doc.html\">Help<\/a><\/li>\n+<\/ul>\n+<\/div>\n+<div class=\"sub-nav\">\n+<div>\n+<ul class=\"sub-nav-list\">\n+<li>Summary:&nbsp;<\/li>\n+<li>Field&nbsp;|&nbsp;<\/li>\n+<li>Required&nbsp;|&nbsp;<\/li>\n+<li><a href=\"#annotation-interface-optional-element-summary\">Optional<\/a><\/li>\n+<\/ul>\n+<ul class=\"sub-nav-list\">\n+<li>Detail:&nbsp;<\/li>\n+<li>Field&nbsp;|&nbsp;<\/li>\n+<li><a href=\"#annotation-interface-element-detail\">Element<\/a><\/li>\n+<\/ul>\n+<\/div>\n+<div class=\"nav-list-search\"><label for=\"search\">SEARCH:<\/label>\n+<input type=\"text\" id=\"search\" value=\"search\" disabled=\"disabled\">\n+<input type=\"reset\" id=\"reset\" value=\"reset\" disabled=\"disabled\">\n+<\/div>\n+<\/div>\n+<!-- ========= END OF TOP NAVBAR ========= -->\n+<span class=\"skip-nav\" id=\"skip-navbar-top\"><\/span><\/nav>\n+<\/header>\n+<div class=\"flex-content\">\n+<main role=\"main\">\n+<!-- ======== START OF CLASS DATA ======== -->\n+<div class=\"header\">\n+<div class=\"sub-title\"><span class=\"package-label-in-type\">Package<\/span>&nbsp;<a href=\"package-summary.html\">jdk.test.lib.hotspot.ir_framework<\/a><\/div>\n+<h1 title=\"Annotation Interface ForceCompile\" class=\"title\">Annotation Interface ForceCompile<\/h1>\n+<\/div>\n+<section class=\"description\">\n+<hr>\n+<div class=\"type-signature\"><span class=\"annotations\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/annotation\/Retention.html\" title=\"class or interface in java.lang.annotation\" class=\"external-link\">@Retention<\/a>(<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/annotation\/RetentionPolicy.html#RUNTIME\" title=\"class or interface in java.lang.annotation\" class=\"external-link\">RUNTIME<\/a>)\n+<\/span><span class=\"modifiers\">public @interface <\/span><span class=\"element-name type-name-label\">ForceCompile<\/span><\/div>\n+<div class=\"block\">Force a compilation of the annotated <b>helper method<\/b> (not specifying <a href=\"Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@Test<\/code><\/a>,\n+ <a href=\"Check.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@Check<\/code><\/a> or <a href=\"Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@Run<\/code><\/a>) immediately at the specified level:\n+ <ul>\n+     <li><p><a href=\"CompLevel.html#ANY\"><code>CompLevel.ANY<\/code><\/a> (default): Highest available compilation level is selected which is usually\n+            <a href=\"CompLevel.html#C2\"><code>CompLevel.C2<\/code><\/a><\/li>\n+     <li><p><a href=\"CompLevel.html#C1\"><code>CompLevel.C1<\/code><\/a>: Level 1: C1 compilation without any profile information.<\/li>\n+     <li><p><a href=\"CompLevel.html#C1_LIMITED_PROFILE\"><code>CompLevel.C1_LIMITED_PROFILE<\/code><\/a>: Level 2: C1 compilation with limited profile information:\n+            Includes Invocation and backedge counters.<\/li>\n+     <li><p><a href=\"CompLevel.html#C1_FULL_PROFILE\"><code>CompLevel.C1_FULL_PROFILE<\/code><\/a>: Level 3: C1 compilation with full profile information:\n+            Includes Invocation and backedge counters with MDO.<\/li>\n+     <li><p><a href=\"CompLevel.html#C2\"><code>CompLevel.C2<\/code><\/a>: Level 4: C2 compilation with full optimizations.<\/li>\n+     <li><p><a href=\"CompLevel.html#SKIP\"><code>CompLevel.SKIP<\/code><\/a>: Does not apply to <code>@ForceCompile<\/code> and results in a\n+            <a href=\"TestFormatException.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\"><code>TestFormatException<\/code><\/a>.<\/li>\n+     <li><p><a href=\"CompLevel.html#WAIT_FOR_COMPILATION\"><code>CompLevel.WAIT_FOR_COMPILATION<\/code><\/a>: Does not apply to <code>@ForceCompile<\/code> and results in a\n+            <a href=\"TestFormatException.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\"><code>TestFormatException<\/code><\/a>.<\/li>\n+ <\/ul>\n+ <p>\n+  Using this annotation on <i>non-helper<\/i> methods results in a <a href=\"TestFormatException.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\"><code>TestFormatException<\/code><\/a>.<\/div>\n+<\/section>\n+<section class=\"summary\">\n+<ul class=\"summary-list\">\n+<!-- =========== ANNOTATION INTERFACE OPTIONAL MEMBER SUMMARY =========== -->\n+<li>\n+<section class=\"member-summary\" id=\"annotation-interface-optional-element-summary\">\n+<h2>Optional Element Summary<\/h2>\n+<div class=\"caption\"><span>Optional Elements<\/span><\/div>\n+<div class=\"summary-table three-column-summary\">\n+<div class=\"table-header col-first\">Modifier and Type<\/div>\n+<div class=\"table-header col-second\">Optional Element<\/div>\n+<div class=\"table-header col-last\">Description<\/div>\n+<div class=\"col-first even-row-color\"><code><a href=\"CompLevel.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">CompLevel<\/a><\/code><\/div>\n+<div class=\"col-second even-row-color\"><code><a href=\"#value()\" class=\"member-name-link\">value<\/a><\/code><\/div>\n+<div class=\"col-last even-row-color\">\n+<div class=\"block\">The compilation level to compile the helper method at.<\/div>\n+<\/div>\n+<\/div>\n+<\/section>\n+<\/li>\n+<\/ul>\n+<\/section>\n+<section class=\"details\" id=\"annotation-interface-element-detail\">\n+<ul class=\"details-list\">\n+<!-- ============ ANNOTATION INTERFACE MEMBER DETAIL =========== -->\n+<li>\n+<section class=\"member-details\">\n+<h2>Element Details<\/h2>\n+<ul class=\"member-list\">\n+<li>\n+<section class=\"detail\" id=\"value()\">\n+<h3>value<\/h3>\n+<div class=\"member-signature\"><span class=\"return-type\"><a href=\"CompLevel.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">CompLevel<\/a><\/span>&nbsp;<span class=\"element-name\">value<\/span><\/div>\n+<div class=\"block\">The compilation level to compile the helper method at.<\/div>\n+<dl class=\"notes\">\n+<dt>Default:<\/dt>\n+<dd>ANY<\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<\/ul>\n+<\/section>\n+<\/li>\n+<\/ul>\n+<\/section>\n+<!-- ========= END OF CLASS DATA ========= -->\n+<\/main>\n+<\/div>\n+<\/div>\n+<\/body>\n+<\/html>\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/doc\/jdk\/test\/lib\/hotspot\/ir_framework\/ForceCompile.html","additions":139,"deletions":0,"binary":false,"changes":139,"status":"added"},{"patch":"@@ -0,0 +1,139 @@\n+<!DOCTYPE HTML>\n+<html lang=\"en\">\n+<head>\n+<!-- Generated by javadoc (17) on Wed Apr 14 13:12:12 CEST 2021 -->\n+<title>ForceCompileClassInitializer<\/title>\n+<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n+<meta http-equiv=\"Content-Type\" content=\"text\/html; charset=utf-8\">\n+<meta name=\"dc.created\" content=\"2021-04-14\">\n+<meta name=\"description\" content=\"declaration: package: jdk.test.lib.hotspot.ir_framework, annotation type: ForceCompileClassInitializer\">\n+<meta name=\"generator\" content=\"javadoc\/ClassWriterImpl\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/..\/..\/..\/..\/stylesheet.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/..\/..\/..\/..\/script-dir\/jquery-ui.min.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/..\/..\/..\/..\/jquery-ui.overrides.css\" title=\"Style\">\n+<script type=\"text\/javascript\" src=\"..\/..\/..\/..\/..\/script.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/..\/..\/..\/..\/script-dir\/jquery-3.5.1.min.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/..\/..\/..\/..\/script-dir\/jquery-ui.min.js\"><\/script>\n+<\/head>\n+<body class=\"class-declaration-page\">\n+<script type=\"text\/javascript\">var pathtoroot = \"..\/..\/..\/..\/..\/\";\n+loadScripts(document, 'script');<\/script>\n+<noscript>\n+<div>JavaScript is disabled on your browser.<\/div>\n+<\/noscript>\n+<div class=\"flex-box\">\n+<header role=\"banner\" class=\"flex-header\">\n+<nav role=\"navigation\">\n+<!-- ========= START OF TOP NAVBAR ======= -->\n+<div class=\"top-nav\" id=\"navbar-top\">\n+<div class=\"skip-nav\"><a href=\"#skip-navbar-top\" title=\"Skip navigation links\">Skip navigation links<\/a><\/div>\n+<ul id=\"navbar-top-firstrow\" class=\"nav-list\" title=\"Navigation\">\n+<li><a href=\"package-summary.html\">Package<\/a><\/li>\n+<li class=\"nav-bar-cell1-rev\">Class<\/li>\n+<li><a href=\"package-tree.html\">Tree<\/a><\/li>\n+<li><a href=\"..\/..\/..\/..\/..\/index-files\/index-1.html\">Index<\/a><\/li>\n+<li><a href=\"..\/..\/..\/..\/..\/help-doc.html\">Help<\/a><\/li>\n+<\/ul>\n+<\/div>\n+<div class=\"sub-nav\">\n+<div>\n+<ul class=\"sub-nav-list\">\n+<li>Summary:&nbsp;<\/li>\n+<li>Field&nbsp;|&nbsp;<\/li>\n+<li>Required&nbsp;|&nbsp;<\/li>\n+<li><a href=\"#annotation-interface-optional-element-summary\">Optional<\/a><\/li>\n+<\/ul>\n+<ul class=\"sub-nav-list\">\n+<li>Detail:&nbsp;<\/li>\n+<li>Field&nbsp;|&nbsp;<\/li>\n+<li><a href=\"#annotation-interface-element-detail\">Element<\/a><\/li>\n+<\/ul>\n+<\/div>\n+<div class=\"nav-list-search\"><label for=\"search\">SEARCH:<\/label>\n+<input type=\"text\" id=\"search\" value=\"search\" disabled=\"disabled\">\n+<input type=\"reset\" id=\"reset\" value=\"reset\" disabled=\"disabled\">\n+<\/div>\n+<\/div>\n+<!-- ========= END OF TOP NAVBAR ========= -->\n+<span class=\"skip-nav\" id=\"skip-navbar-top\"><\/span><\/nav>\n+<\/header>\n+<div class=\"flex-content\">\n+<main role=\"main\">\n+<!-- ======== START OF CLASS DATA ======== -->\n+<div class=\"header\">\n+<div class=\"sub-title\"><span class=\"package-label-in-type\">Package<\/span>&nbsp;<a href=\"package-summary.html\">jdk.test.lib.hotspot.ir_framework<\/a><\/div>\n+<h1 title=\"Annotation Interface ForceCompileClassInitializer\" class=\"title\">Annotation Interface ForceCompileClassInitializer<\/h1>\n+<\/div>\n+<section class=\"description\">\n+<hr>\n+<div class=\"type-signature\"><span class=\"annotations\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/annotation\/Retention.html\" title=\"class or interface in java.lang.annotation\" class=\"external-link\">@Retention<\/a>(<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/annotation\/RetentionPolicy.html#RUNTIME\" title=\"class or interface in java.lang.annotation\" class=\"external-link\">RUNTIME<\/a>)\n+<\/span><span class=\"modifiers\">public @interface <\/span><span class=\"element-name type-name-label\">ForceCompileClassInitializer<\/span><\/div>\n+<div class=\"block\">Force a compilation of the static class initializer method (<code>&lt;clinit&gt;<\/code>) of the annotated test or helper class\n+ immediately at the specified level:\n+ <ul>\n+     <li><p><a href=\"CompLevel.html#ANY\"><code>CompLevel.ANY<\/code><\/a> (default): Highest available compilation level is selected which is usually\n+            <a href=\"CompLevel.html#C2\"><code>CompLevel.C2<\/code><\/a><\/li>\n+     <li><p><a href=\"CompLevel.html#C1\"><code>CompLevel.C1<\/code><\/a>: Level 1: C1 compilation without any profile information.<\/li>\n+     <li><p><a href=\"CompLevel.html#C1_LIMITED_PROFILE\"><code>CompLevel.C1_LIMITED_PROFILE<\/code><\/a>: Level 2: C1 compilation with limited profile information:\n+     Includes Invocation and backedge counters.<\/li>\n+     <li><p><a href=\"CompLevel.html#C1_FULL_PROFILE\"><code>CompLevel.C1_FULL_PROFILE<\/code><\/a>: Level 3: C1 compilation with full profile information:\n+     Includes Invocation and backedge counters with MDO.<\/li>\n+     <li><p><a href=\"CompLevel.html#C2\"><code>CompLevel.C2<\/code><\/a>: Level 4: C2 compilation with full optimizations.<\/li>\n+     <li><p><a href=\"CompLevel.html#SKIP\"><code>CompLevel.SKIP<\/code><\/a>: Does not apply to <code>@ForceCompileClassInitializer<\/code> and results in a\n+     <a href=\"TestFormatException.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\"><code>TestFormatException<\/code><\/a>.<\/li>\n+     <li><p><a href=\"CompLevel.html#WAIT_FOR_COMPILATION\"><code>CompLevel.WAIT_FOR_COMPILATION<\/code><\/a>: Does not apply to <code>@ForceCompileClassInitializer<\/code> and results in a\n+     <a href=\"TestFormatException.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\"><code>TestFormatException<\/code><\/a>.<\/li>\n+ <\/ul>\n+ <p>\n+  Using this annotation on non-classes results in a <a href=\"TestFormatException.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\"><code>TestFormatException<\/code><\/a>.<\/div>\n+<\/section>\n+<section class=\"summary\">\n+<ul class=\"summary-list\">\n+<!-- =========== ANNOTATION INTERFACE OPTIONAL MEMBER SUMMARY =========== -->\n+<li>\n+<section class=\"member-summary\" id=\"annotation-interface-optional-element-summary\">\n+<h2>Optional Element Summary<\/h2>\n+<div class=\"caption\"><span>Optional Elements<\/span><\/div>\n+<div class=\"summary-table three-column-summary\">\n+<div class=\"table-header col-first\">Modifier and Type<\/div>\n+<div class=\"table-header col-second\">Optional Element<\/div>\n+<div class=\"table-header col-last\">Description<\/div>\n+<div class=\"col-first even-row-color\"><code><a href=\"CompLevel.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">CompLevel<\/a><\/code><\/div>\n+<div class=\"col-second even-row-color\"><code><a href=\"#value()\" class=\"member-name-link\">value<\/a><\/code><\/div>\n+<div class=\"col-last even-row-color\">\n+<div class=\"block\">The compilation level to compile the static class initializer method (<code>&lt;clinit&gt;<\/code>) at.<\/div>\n+<\/div>\n+<\/div>\n+<\/section>\n+<\/li>\n+<\/ul>\n+<\/section>\n+<section class=\"details\" id=\"annotation-interface-element-detail\">\n+<ul class=\"details-list\">\n+<!-- ============ ANNOTATION INTERFACE MEMBER DETAIL =========== -->\n+<li>\n+<section class=\"member-details\">\n+<h2>Element Details<\/h2>\n+<ul class=\"member-list\">\n+<li>\n+<section class=\"detail\" id=\"value()\">\n+<h3>value<\/h3>\n+<div class=\"member-signature\"><span class=\"return-type\"><a href=\"CompLevel.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">CompLevel<\/a><\/span>&nbsp;<span class=\"element-name\">value<\/span><\/div>\n+<div class=\"block\">The compilation level to compile the static class initializer method (<code>&lt;clinit&gt;<\/code>) at.<\/div>\n+<dl class=\"notes\">\n+<dt>Default:<\/dt>\n+<dd>ANY<\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<\/ul>\n+<\/section>\n+<\/li>\n+<\/ul>\n+<\/section>\n+<!-- ========= END OF CLASS DATA ========= -->\n+<\/main>\n+<\/div>\n+<\/div>\n+<\/body>\n+<\/html>\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/doc\/jdk\/test\/lib\/hotspot\/ir_framework\/ForceCompileClassInitializer.html","additions":139,"deletions":0,"binary":false,"changes":139,"status":"added"},{"patch":"@@ -0,0 +1,79 @@\n+<!DOCTYPE HTML>\n+<html lang=\"en\">\n+<head>\n+<!-- Generated by javadoc (17) on Wed Apr 14 13:12:12 CEST 2021 -->\n+<title>ForceInline<\/title>\n+<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n+<meta http-equiv=\"Content-Type\" content=\"text\/html; charset=utf-8\">\n+<meta name=\"dc.created\" content=\"2021-04-14\">\n+<meta name=\"description\" content=\"declaration: package: jdk.test.lib.hotspot.ir_framework, annotation type: ForceInline\">\n+<meta name=\"generator\" content=\"javadoc\/ClassWriterImpl\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/..\/..\/..\/..\/stylesheet.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/..\/..\/..\/..\/script-dir\/jquery-ui.min.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/..\/..\/..\/..\/jquery-ui.overrides.css\" title=\"Style\">\n+<script type=\"text\/javascript\" src=\"..\/..\/..\/..\/..\/script.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/..\/..\/..\/..\/script-dir\/jquery-3.5.1.min.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/..\/..\/..\/..\/script-dir\/jquery-ui.min.js\"><\/script>\n+<\/head>\n+<body class=\"class-declaration-page\">\n+<script type=\"text\/javascript\">var pathtoroot = \"..\/..\/..\/..\/..\/\";\n+loadScripts(document, 'script');<\/script>\n+<noscript>\n+<div>JavaScript is disabled on your browser.<\/div>\n+<\/noscript>\n+<div class=\"flex-box\">\n+<header role=\"banner\" class=\"flex-header\">\n+<nav role=\"navigation\">\n+<!-- ========= START OF TOP NAVBAR ======= -->\n+<div class=\"top-nav\" id=\"navbar-top\">\n+<div class=\"skip-nav\"><a href=\"#skip-navbar-top\" title=\"Skip navigation links\">Skip navigation links<\/a><\/div>\n+<ul id=\"navbar-top-firstrow\" class=\"nav-list\" title=\"Navigation\">\n+<li><a href=\"package-summary.html\">Package<\/a><\/li>\n+<li class=\"nav-bar-cell1-rev\">Class<\/li>\n+<li><a href=\"package-tree.html\">Tree<\/a><\/li>\n+<li><a href=\"..\/..\/..\/..\/..\/index-files\/index-1.html\">Index<\/a><\/li>\n+<li><a href=\"..\/..\/..\/..\/..\/help-doc.html\">Help<\/a><\/li>\n+<\/ul>\n+<\/div>\n+<div class=\"sub-nav\">\n+<div>\n+<ul class=\"sub-nav-list\">\n+<li>Summary:&nbsp;<\/li>\n+<li>Field&nbsp;|&nbsp;<\/li>\n+<li>Required&nbsp;|&nbsp;<\/li>\n+<li>Optional<\/li>\n+<\/ul>\n+<ul class=\"sub-nav-list\">\n+<li>Detail:&nbsp;<\/li>\n+<li>Field&nbsp;|&nbsp;<\/li>\n+<li>Element<\/li>\n+<\/ul>\n+<\/div>\n+<div class=\"nav-list-search\"><label for=\"search\">SEARCH:<\/label>\n+<input type=\"text\" id=\"search\" value=\"search\" disabled=\"disabled\">\n+<input type=\"reset\" id=\"reset\" value=\"reset\" disabled=\"disabled\">\n+<\/div>\n+<\/div>\n+<!-- ========= END OF TOP NAVBAR ========= -->\n+<span class=\"skip-nav\" id=\"skip-navbar-top\"><\/span><\/nav>\n+<\/header>\n+<div class=\"flex-content\">\n+<main role=\"main\">\n+<!-- ======== START OF CLASS DATA ======== -->\n+<div class=\"header\">\n+<div class=\"sub-title\"><span class=\"package-label-in-type\">Package<\/span>&nbsp;<a href=\"package-summary.html\">jdk.test.lib.hotspot.ir_framework<\/a><\/div>\n+<h1 title=\"Annotation Interface ForceInline\" class=\"title\">Annotation Interface ForceInline<\/h1>\n+<\/div>\n+<section class=\"description\">\n+<hr>\n+<div class=\"type-signature\"><span class=\"annotations\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/annotation\/Retention.html\" title=\"class or interface in java.lang.annotation\" class=\"external-link\">@Retention<\/a>(<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/annotation\/RetentionPolicy.html#RUNTIME\" title=\"class or interface in java.lang.annotation\" class=\"external-link\">RUNTIME<\/a>)\n+<\/span><span class=\"modifiers\">public @interface <\/span><span class=\"element-name type-name-label\">ForceInline<\/span><\/div>\n+<div class=\"block\">Force an inlining of the annotated <b>helper method<\/b> (not specifying <a href=\"Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@Test<\/code><\/a>, <a href=\"Check.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@Check<\/code><\/a>,\n+ or <a href=\"Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@Run<\/code><\/a>). Using this annotation on <i>non-helper methods<\/i> results in a <a href=\"TestFormatException.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\"><code>TestFormatException<\/code><\/a>.<\/div>\n+<\/section>\n+<!-- ========= END OF CLASS DATA ========= -->\n+<\/main>\n+<\/div>\n+<\/div>\n+<\/body>\n+<\/html>\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/doc\/jdk\/test\/lib\/hotspot\/ir_framework\/ForceInline.html","additions":79,"deletions":0,"binary":false,"changes":79,"status":"added"},{"patch":"@@ -0,0 +1,284 @@\n+<!DOCTYPE HTML>\n+<html lang=\"en\">\n+<head>\n+<!-- Generated by javadoc (17) on Wed Apr 14 13:12:12 CEST 2021 -->\n+<title>IR<\/title>\n+<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n+<meta http-equiv=\"Content-Type\" content=\"text\/html; charset=utf-8\">\n+<meta name=\"dc.created\" content=\"2021-04-14\">\n+<meta name=\"description\" content=\"declaration: package: jdk.test.lib.hotspot.ir_framework, annotation type: IR\">\n+<meta name=\"generator\" content=\"javadoc\/ClassWriterImpl\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/..\/..\/..\/..\/stylesheet.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/..\/..\/..\/..\/script-dir\/jquery-ui.min.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/..\/..\/..\/..\/jquery-ui.overrides.css\" title=\"Style\">\n+<script type=\"text\/javascript\" src=\"..\/..\/..\/..\/..\/script.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/..\/..\/..\/..\/script-dir\/jquery-3.5.1.min.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/..\/..\/..\/..\/script-dir\/jquery-ui.min.js\"><\/script>\n+<\/head>\n+<body class=\"class-declaration-page\">\n+<script type=\"text\/javascript\">var pathtoroot = \"..\/..\/..\/..\/..\/\";\n+loadScripts(document, 'script');<\/script>\n+<noscript>\n+<div>JavaScript is disabled on your browser.<\/div>\n+<\/noscript>\n+<div class=\"flex-box\">\n+<header role=\"banner\" class=\"flex-header\">\n+<nav role=\"navigation\">\n+<!-- ========= START OF TOP NAVBAR ======= -->\n+<div class=\"top-nav\" id=\"navbar-top\">\n+<div class=\"skip-nav\"><a href=\"#skip-navbar-top\" title=\"Skip navigation links\">Skip navigation links<\/a><\/div>\n+<ul id=\"navbar-top-firstrow\" class=\"nav-list\" title=\"Navigation\">\n+<li><a href=\"package-summary.html\">Package<\/a><\/li>\n+<li class=\"nav-bar-cell1-rev\">Class<\/li>\n+<li><a href=\"package-tree.html\">Tree<\/a><\/li>\n+<li><a href=\"..\/..\/..\/..\/..\/index-files\/index-1.html\">Index<\/a><\/li>\n+<li><a href=\"..\/..\/..\/..\/..\/help-doc.html\">Help<\/a><\/li>\n+<\/ul>\n+<\/div>\n+<div class=\"sub-nav\">\n+<div>\n+<ul class=\"sub-nav-list\">\n+<li>Summary:&nbsp;<\/li>\n+<li>Field&nbsp;|&nbsp;<\/li>\n+<li>Required&nbsp;|&nbsp;<\/li>\n+<li><a href=\"#annotation-interface-optional-element-summary\">Optional<\/a><\/li>\n+<\/ul>\n+<ul class=\"sub-nav-list\">\n+<li>Detail:&nbsp;<\/li>\n+<li>Field&nbsp;|&nbsp;<\/li>\n+<li><a href=\"#annotation-interface-element-detail\">Element<\/a><\/li>\n+<\/ul>\n+<\/div>\n+<div class=\"nav-list-search\"><label for=\"search\">SEARCH:<\/label>\n+<input type=\"text\" id=\"search\" value=\"search\" disabled=\"disabled\">\n+<input type=\"reset\" id=\"reset\" value=\"reset\" disabled=\"disabled\">\n+<\/div>\n+<\/div>\n+<!-- ========= END OF TOP NAVBAR ========= -->\n+<span class=\"skip-nav\" id=\"skip-navbar-top\"><\/span><\/nav>\n+<\/header>\n+<div class=\"flex-content\">\n+<main role=\"main\">\n+<!-- ======== START OF CLASS DATA ======== -->\n+<div class=\"header\">\n+<div class=\"sub-title\"><span class=\"package-label-in-type\">Package<\/span>&nbsp;<a href=\"package-summary.html\">jdk.test.lib.hotspot.ir_framework<\/a><\/div>\n+<h1 title=\"Annotation Interface IR\" class=\"title\">Annotation Interface IR<\/h1>\n+<\/div>\n+<section class=\"description\">\n+<hr>\n+<div class=\"type-signature\"><span class=\"annotations\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/annotation\/Retention.html\" title=\"class or interface in java.lang.annotation\" class=\"external-link\">@Retention<\/a>(<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/annotation\/RetentionPolicy.html#RUNTIME\" title=\"class or interface in java.lang.annotation\" class=\"external-link\">RUNTIME<\/a>)\n+<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/annotation\/Repeatable.html\" title=\"class or interface in java.lang.annotation\" class=\"external-link\">@Repeatable<\/a>(<a href=\"IRs.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\">IRs.class<\/a>)\n+<\/span><span class=\"modifiers\">public @interface <\/span><span class=\"element-name type-name-label\">IR<\/span><\/div>\n+<div class=\"block\">This annotation is used to define a constraint\/rule\/check on the resulting IR of a test method (method with\n+ <a href=\"Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@Test<\/code><\/a> annotation). A test method can define multiple <code>@IR<\/code> rules.\n+ <p>\n+ There are two kinds of checks that can be specified:\n+ <ul>\n+     <li><p><a href=\"#failOn()\"><code>failOn()<\/code><\/a>: Specify a list of (node) regexes that should not be matched on the <code>PrintIdeal<\/code> or\n+            <code>PrintOptoAssembly<\/code> output.<\/li>\n+     <li><p><a href=\"#counts()\"><code>counts()<\/code><\/a>: Specify a list of (<code>regex,count<\/code>) pairs: The (node) <code>regex<\/code> should be matched\n+            for the specified amount in <code>count<\/code> on the <code>PrintIdeal<\/code> or <code>PrintOptoAssembly<\/code> output.<\/li>\n+ <\/ul>\n+ An IR rule must specify either or both of these two checks. If one or both of the checks fails, an\n+ <a href=\"IRViolationException.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\"><code>IRViolationException<\/code><\/a> is thrown. A user can provide a custom regex string or specify any of the default node\n+ regexes defined in <a href=\"IRNode.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\"><code>IRNode<\/code><\/a>.\n+ <p>\n+ Sometimes, the shape of the resulting IR is changed by commonly used VM flags in such a way that an IR rule no longer\n+ applies. Generally, the framework does <b>not<\/b> apply any IR rules when any of the following flags are used:\n+ <code>-Xint, -XX:-UseCompiler, -XX:TieredStopAtLevel={1,2,3}, -DExcludeRandom=true, -DFlipC1C2=true<\/code>.\n+ Furthermore, a JTreg test could be run with additional VM and Javaoptions flags. The IR verification is <b>not<\/b>\n+ performed in this case if any of these JTreg flags is used that is not part of the whitelist specified by\n+ <a href=\"TestFramework.html#JTREG_WHITELIST_FLAGS\"><code>TestFramework.JTREG_WHITELIST_FLAGS<\/code><\/a>.\n+ <p>\n+ For any other flag specified either by user code (e.g. <a href=\"Scenario.html#%3Cinit%3E(int,java.lang.String...)\"><code>Scenario(int, String...)<\/code><\/a>,\n+ <a href=\"TestFramework.html#runWithFlags(java.lang.String...)\"><code>etc.<\/code><\/a> or as part of the JTreg whitelist, IR verification is applied.\n+ To restrict the application of IR rules when certain flags are present that could change the IR, each <code>@IR<\/code>\n+ annotation can specify additional preconditions on the allowed test VM flags that must hold when an IR rule is applied.\n+ If the specified preconditions fail, then the framework does not apply the IR rule. These preconditions can be\n+ set with <a href=\"#applyIf()\"><code>applyIf()<\/code><\/a>, <a href=\"#applyIfNot()\"><code>applyIfNot()<\/code><\/a>, <a href=\"#applyIfAnd()\"><code>applyIfAnd()<\/code><\/a>, or <a href=\"#applyIfOr()\"><code>applyIfOr()<\/code><\/a>.\n+ <p>\n+ Examples on how to write tests with IR rules can be found in <code>IRExample<\/code>\n+ and also as part of the internal testing in <code>TestIRMatching<\/code>.<\/div>\n+<dl class=\"notes\">\n+<dt>See Also:<\/dt>\n+<dd><a href=\"Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Test<\/code><\/a>, \n+<a href=\"IRNode.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\"><code>IRNode<\/code><\/a><\/dd>\n+<\/dl>\n+<\/section>\n+<section class=\"summary\">\n+<ul class=\"summary-list\">\n+<!-- =========== ANNOTATION INTERFACE OPTIONAL MEMBER SUMMARY =========== -->\n+<li>\n+<section class=\"member-summary\" id=\"annotation-interface-optional-element-summary\">\n+<h2>Optional Element Summary<\/h2>\n+<div class=\"caption\"><span>Optional Elements<\/span><\/div>\n+<div class=\"summary-table three-column-summary\">\n+<div class=\"table-header col-first\">Modifier and Type<\/div>\n+<div class=\"table-header col-second\">Optional Element<\/div>\n+<div class=\"table-header col-last\">Description<\/div>\n+<div class=\"col-first even-row-color\"><code><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a>[]<\/code><\/div>\n+<div class=\"col-second even-row-color\"><code><a href=\"#applyIf()\" class=\"member-name-link\">applyIf<\/a><\/code><\/div>\n+<div class=\"col-last even-row-color\">\n+<div class=\"block\">Define a single VM flag precondition which <i>must hold<\/i> when applying the IR rule.<\/div>\n+<\/div>\n+<div class=\"col-first odd-row-color\"><code><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a>[]<\/code><\/div>\n+<div class=\"col-second odd-row-color\"><code><a href=\"#applyIfAnd()\" class=\"member-name-link\">applyIfAnd<\/a><\/code><\/div>\n+<div class=\"col-last odd-row-color\">\n+<div class=\"block\">Define a list of at least two VM flag precondition which <i><b>all<\/b> must hold<\/i> when applying the IR rule.<\/div>\n+<\/div>\n+<div class=\"col-first even-row-color\"><code><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a>[]<\/code><\/div>\n+<div class=\"col-second even-row-color\"><code><a href=\"#applyIfNot()\" class=\"member-name-link\">applyIfNot<\/a><\/code><\/div>\n+<div class=\"col-last even-row-color\">\n+<div class=\"block\">Define a single VM flag precondition which <i>must <b>not<\/b> hold<\/i> when applying the IR rule.<\/div>\n+<\/div>\n+<div class=\"col-first odd-row-color\"><code><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a>[]<\/code><\/div>\n+<div class=\"col-second odd-row-color\"><code><a href=\"#applyIfOr()\" class=\"member-name-link\">applyIfOr<\/a><\/code><\/div>\n+<div class=\"col-last odd-row-color\">\n+<div class=\"block\">Define a list of at least two VM flag precondition from which <i><b>at least one<\/b> must hold<\/i> when applying\n+ the IR rule.<\/div>\n+<\/div>\n+<div class=\"col-first even-row-color\"><code><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a>[]<\/code><\/div>\n+<div class=\"col-second even-row-color\"><code><a href=\"#counts()\" class=\"member-name-link\">counts<\/a><\/code><\/div>\n+<div class=\"col-last even-row-color\">\n+<div class=\"block\">Define a list of ((node) regexes,count) string pairs: A regex to be matched on the PrintIdeal or PrintOptoAssembly\n+ is immediately followed by a number specifying how often the regex should be matched.<\/div>\n+<\/div>\n+<div class=\"col-first odd-row-color\"><code><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a>[]<\/code><\/div>\n+<div class=\"col-second odd-row-color\"><code><a href=\"#failOn()\" class=\"member-name-link\">failOn<\/a><\/code><\/div>\n+<div class=\"col-last odd-row-color\">\n+<div class=\"block\">Define a list of (node) regexes.<\/div>\n+<\/div>\n+<\/div>\n+<\/section>\n+<\/li>\n+<\/ul>\n+<\/section>\n+<section class=\"details\" id=\"annotation-interface-element-detail\">\n+<ul class=\"details-list\">\n+<!-- ============ ANNOTATION INTERFACE MEMBER DETAIL =========== -->\n+<li>\n+<section class=\"member-details\">\n+<h2>Element Details<\/h2>\n+<ul class=\"member-list\">\n+<li>\n+<section class=\"detail\" id=\"failOn()\">\n+<h3>failOn<\/h3>\n+<div class=\"member-signature\"><span class=\"return-type\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a>[]<\/span>&nbsp;<span class=\"element-name\">failOn<\/span><\/div>\n+<div class=\"block\">Define a list of (node) regexes. If any of these regexes are matched on the PrintIdeal or PrintOptoAssembly, the\n+ IR rule fails and an <a href=\"IRViolationException.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\"><code>IRViolationException<\/code><\/a> is thrown.<\/div>\n+<dl class=\"notes\">\n+<dt>Default:<\/dt>\n+<dd>{}<\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"counts()\">\n+<h3>counts<\/h3>\n+<div class=\"member-signature\"><span class=\"return-type\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a>[]<\/span>&nbsp;<span class=\"element-name\">counts<\/span><\/div>\n+<div class=\"block\">Define a list of ((node) regexes,count) string pairs: A regex to be matched on the PrintIdeal or PrintOptoAssembly\n+ is immediately followed by a number specifying how often the regex should be matched. The number can be proceeded\n+ by comparators (<code>=, !=, &lt;, &lt;=, =&gt;, &gt;<\/code>) where the equality operator is optional (default if no comparator is\n+ specified).\n+ <p>\n+ If any constraint on the number of regexes cannot be met, the IR rule fails and an\n+ <a href=\"IRViolationException.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\"><code>IRViolationException<\/code><\/a> is thrown.<\/div>\n+<dl class=\"notes\">\n+<dt>Default:<\/dt>\n+<dd>{}<\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"applyIf()\">\n+<h3>applyIf<\/h3>\n+<div class=\"member-signature\"><span class=\"return-type\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a>[]<\/span>&nbsp;<span class=\"element-name\">applyIf<\/span><\/div>\n+<div class=\"block\">Define a single VM flag precondition which <i>must hold<\/i> when applying the IR rule. If the VM flag precondition\n+ fails, then the IR rule is not applied. This is useful if a commonly used flag alters the IR in such a way that an IR rule\n+ would fail.\n+ <p>\n+ The precondition is a (flag, value) string pair where the flag must be a valid VM flag and the value must conform\n+ with the type of the VM flag. A number based flag value can be proceeded with an additional comparator\n+ (<code>=, !=, &lt;, &lt;=, =&gt;, &gt;<\/code>) where the equality operator is optional (default if no comparator is specified).\n+ <p>\n+ This is the inverse of <a href=\"#applyIfNot()\"><code>applyIfNot()<\/code><\/a>. For multiple preconditions, use <a href=\"#applyIfAnd()\"><code>applyIfAnd()<\/code><\/a> or\n+ <a href=\"#applyIfOr()\"><code>applyIfOr()<\/code><\/a> depending on the use case.<\/div>\n+<dl class=\"notes\">\n+<dt>Default:<\/dt>\n+<dd>{}<\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"applyIfNot()\">\n+<h3>applyIfNot<\/h3>\n+<div class=\"member-signature\"><span class=\"return-type\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a>[]<\/span>&nbsp;<span class=\"element-name\">applyIfNot<\/span><\/div>\n+<div class=\"block\">Define a single VM flag precondition which <i>must <b>not<\/b> hold<\/i> when applying the IR rule. If, however,\n+ the VM flag precondition holds, then the IR rule is not applied. This could also be defined as <i>negative<\/i>\n+ precondition. This is useful if a commonly used flag alters the IR in such a way that an IR rule would fail.\n+ <p>\n+ The precondition is a (flag, value) string pair where the flag must be a valid VM flag and the value must conform\n+ with the type of the VM flag. A number based flag value can be proceeded with an additional comparator\n+ (<code>=, !=, &lt;, &lt;=, =&gt;, &gt;<\/code>) where the equality operator is optional (default if no comparator is specified).\n+ <p>\n+ This is the inverse of <a href=\"#applyIf()\"><code>applyIf()<\/code><\/a>. For multiple preconditions, use <a href=\"#applyIfAnd()\"><code>applyIfAnd()<\/code><\/a> or\n+ <a href=\"#applyIfOr()\"><code>applyIfOr()<\/code><\/a> depending on the use case.<\/div>\n+<dl class=\"notes\">\n+<dt>Default:<\/dt>\n+<dd>{}<\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"applyIfAnd()\">\n+<h3>applyIfAnd<\/h3>\n+<div class=\"member-signature\"><span class=\"return-type\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a>[]<\/span>&nbsp;<span class=\"element-name\">applyIfAnd<\/span><\/div>\n+<div class=\"block\">Define a list of at least two VM flag precondition which <i><b>all<\/b> must hold<\/i> when applying the IR rule.\n+ If the one of the VM flag preconditions does not hold, then the IR rule is not applied. This is useful if\n+ commonly used flags alter the IR in such a way that an IR rule would fail. This can also be defined as conjunction\n+ of preconditions.\n+ <p>\n+ A precondition is a (flag, value) string pair where the flag must be a valid VM flag and the value must conform\n+ with the type of the VM flag. A number based flag value can be proceeded with an additional comparator\n+ (<code>=, !=, &lt;, &lt;=, =&gt;, &gt;<\/code>) where the equality operator is optional (default if no comparator is specified).\n+ <p>\n+ Use  <a href=\"#applyIfOr()\"><code>applyIfOr()<\/code><\/a> for disjunction and for single precondition constraints use <a href=\"#applyIf()\"><code>applyIf()<\/code><\/a> or\n+ <a href=\"#applyIfNot()\"><code>applyIfNot()<\/code><\/a> depending on the use case.<\/div>\n+<dl class=\"notes\">\n+<dt>Default:<\/dt>\n+<dd>{}<\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"applyIfOr()\">\n+<h3>applyIfOr<\/h3>\n+<div class=\"member-signature\"><span class=\"return-type\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a>[]<\/span>&nbsp;<span class=\"element-name\">applyIfOr<\/span><\/div>\n+<div class=\"block\">Define a list of at least two VM flag precondition from which <i><b>at least one<\/b> must hold<\/i> when applying\n+ the IR rule. If none of the VM flag preconditions holds, then the IR rule is not applied. This is useful if\n+ commonly used flags alter the IR in such a way that an IR rule would fail. This can also be defined as disjunction\n+ of preconditions.\n+ <p>\n+ A precondition is a (flag, value) string pair where the flag must be a valid VM flag and the value must conform\n+ with the type of the VM flag. A number based flag value can be proceeded with an additional comparator\n+ (<code>=, !=, &lt;, &lt;=, =&gt;, &gt;<\/code>) where the equality operator is optional (default if no comparator is specified).\n+ <p>\n+ Use  <a href=\"#applyIfAnd()\"><code>applyIfAnd()<\/code><\/a> for conjunction and for single precondition constraints use <a href=\"#applyIf()\"><code>applyIf()<\/code><\/a> or\n+ <a href=\"#applyIfNot()\"><code>applyIfNot()<\/code><\/a> depending on the use case.<\/div>\n+<dl class=\"notes\">\n+<dt>Default:<\/dt>\n+<dd>{}<\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<\/ul>\n+<\/section>\n+<\/li>\n+<\/ul>\n+<\/section>\n+<!-- ========= END OF CLASS DATA ========= -->\n+<\/main>\n+<\/div>\n+<\/div>\n+<\/body>\n+<\/html>\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/doc\/jdk\/test\/lib\/hotspot\/ir_framework\/IR.html","additions":284,"deletions":0,"binary":false,"changes":284,"status":"added"},{"patch":"@@ -0,0 +1,1017 @@\n+<!DOCTYPE HTML>\n+<html lang=\"en\">\n+<head>\n+<!-- Generated by javadoc (17) on Wed Apr 14 13:12:12 CEST 2021 -->\n+<title>IRNode<\/title>\n+<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n+<meta http-equiv=\"Content-Type\" content=\"text\/html; charset=utf-8\">\n+<meta name=\"dc.created\" content=\"2021-04-14\">\n+<meta name=\"description\" content=\"declaration: package: jdk.test.lib.hotspot.ir_framework, class: IRNode\">\n+<meta name=\"generator\" content=\"javadoc\/ClassWriterImpl\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/..\/..\/..\/..\/stylesheet.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/..\/..\/..\/..\/script-dir\/jquery-ui.min.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/..\/..\/..\/..\/jquery-ui.overrides.css\" title=\"Style\">\n+<script type=\"text\/javascript\" src=\"..\/..\/..\/..\/..\/script.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/..\/..\/..\/..\/script-dir\/jquery-3.5.1.min.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/..\/..\/..\/..\/script-dir\/jquery-ui.min.js\"><\/script>\n+<\/head>\n+<body class=\"class-declaration-page\">\n+<script type=\"text\/javascript\">var pathtoroot = \"..\/..\/..\/..\/..\/\";\n+loadScripts(document, 'script');<\/script>\n+<noscript>\n+<div>JavaScript is disabled on your browser.<\/div>\n+<\/noscript>\n+<div class=\"flex-box\">\n+<header role=\"banner\" class=\"flex-header\">\n+<nav role=\"navigation\">\n+<!-- ========= START OF TOP NAVBAR ======= -->\n+<div class=\"top-nav\" id=\"navbar-top\">\n+<div class=\"skip-nav\"><a href=\"#skip-navbar-top\" title=\"Skip navigation links\">Skip navigation links<\/a><\/div>\n+<ul id=\"navbar-top-firstrow\" class=\"nav-list\" title=\"Navigation\">\n+<li><a href=\"package-summary.html\">Package<\/a><\/li>\n+<li class=\"nav-bar-cell1-rev\">Class<\/li>\n+<li><a href=\"package-tree.html\">Tree<\/a><\/li>\n+<li><a href=\"..\/..\/..\/..\/..\/index-files\/index-1.html\">Index<\/a><\/li>\n+<li><a href=\"..\/..\/..\/..\/..\/help-doc.html\">Help<\/a><\/li>\n+<\/ul>\n+<\/div>\n+<div class=\"sub-nav\">\n+<div>\n+<ul class=\"sub-nav-list\">\n+<li>Summary:&nbsp;<\/li>\n+<li>Nested&nbsp;|&nbsp;<\/li>\n+<li><a href=\"#field-summary\">Field<\/a>&nbsp;|&nbsp;<\/li>\n+<li><a href=\"#constructor-summary\">Constr<\/a>&nbsp;|&nbsp;<\/li>\n+<li><a href=\"#method-summary\">Method<\/a><\/li>\n+<\/ul>\n+<ul class=\"sub-nav-list\">\n+<li>Detail:&nbsp;<\/li>\n+<li><a href=\"#field-detail\">Field<\/a>&nbsp;|&nbsp;<\/li>\n+<li><a href=\"#constructor-detail\">Constr<\/a>&nbsp;|&nbsp;<\/li>\n+<li>Method<\/li>\n+<\/ul>\n+<\/div>\n+<div class=\"nav-list-search\"><label for=\"search\">SEARCH:<\/label>\n+<input type=\"text\" id=\"search\" value=\"search\" disabled=\"disabled\">\n+<input type=\"reset\" id=\"reset\" value=\"reset\" disabled=\"disabled\">\n+<\/div>\n+<\/div>\n+<!-- ========= END OF TOP NAVBAR ========= -->\n+<span class=\"skip-nav\" id=\"skip-navbar-top\"><\/span><\/nav>\n+<\/header>\n+<div class=\"flex-content\">\n+<main role=\"main\">\n+<!-- ======== START OF CLASS DATA ======== -->\n+<div class=\"header\">\n+<div class=\"sub-title\"><span class=\"package-label-in-type\">Package<\/span>&nbsp;<a href=\"package-summary.html\">jdk.test.lib.hotspot.ir_framework<\/a><\/div>\n+<h1 title=\"Class IRNode\" class=\"title\">Class IRNode<\/h1>\n+<\/div>\n+<div class=\"inheritance\" title=\"Inheritance Tree\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html\" title=\"class or interface in java.lang\" class=\"external-link\">java.lang.Object<\/a>\n+<div class=\"inheritance\">jdk.test.lib.hotspot.ir_framework.IRNode<\/div>\n+<\/div>\n+<section class=\"description\">\n+<hr>\n+<div class=\"type-signature\"><span class=\"modifiers\">public class <\/span><span class=\"element-name type-name-label\">IRNode<\/span>\n+<span class=\"extends-implements\">extends <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html\" title=\"class or interface in java.lang\" class=\"external-link\">Object<\/a><\/span><\/div>\n+<div class=\"block\">This class provides default regex strings that can be used in <a href=\"IR.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@IR<\/code><\/a> annotations to specify IR constraints.\n+ <p>\n+ There are two types of default regexes:\n+ <ul>\n+     <li><p>Standalone regexes: Use them directly.<\/li>\n+     <li><p>Composite regexes: Their names contain \"<code>_OF<\/code>\" and expect another string in a list in\n+            <a href=\"IR.html#failOn()\"><code>IR.failOn()<\/code><\/a> and <a href=\"IR.html#counts()\"><code>IR.counts()<\/code><\/a>. They cannot be use as standalone regex and will result in a\n+            <a href=\"TestFormatException.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\"><code>TestFormatException<\/code><\/a> when doing so.<\/li>\n+ <\/ul><\/div>\n+<dl class=\"notes\">\n+<dt>See Also:<\/dt>\n+<dd><a href=\"IR.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>IR<\/code><\/a><\/dd>\n+<\/dl>\n+<\/section>\n+<section class=\"summary\">\n+<ul class=\"summary-list\">\n+<!-- =========== FIELD SUMMARY =========== -->\n+<li>\n+<section class=\"field-summary\" id=\"field-summary\">\n+<h2>Field Summary<\/h2>\n+<div class=\"caption\"><span>Fields<\/span><\/div>\n+<div class=\"summary-table three-column-summary\">\n+<div class=\"table-header col-first\">Modifier and Type<\/div>\n+<div class=\"table-header col-second\">Field<\/div>\n+<div class=\"table-header col-last\">Description<\/div>\n+<div class=\"col-first even-row-color\"><code>static <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second even-row-color\"><code><a href=\"#ALLOC\" class=\"member-name-link\">ALLOC<\/a><\/code><\/div>\n+<div class=\"col-last even-row-color\">&nbsp;<\/div>\n+<div class=\"col-first odd-row-color\"><code>static <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second odd-row-color\"><code><a href=\"#ALLOC_ARRAY\" class=\"member-name-link\">ALLOC_ARRAY<\/a><\/code><\/div>\n+<div class=\"col-last odd-row-color\">&nbsp;<\/div>\n+<div class=\"col-first even-row-color\"><code>static <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second even-row-color\"><code><a href=\"#ALLOC_ARRAY_OF\" class=\"member-name-link\">ALLOC_ARRAY_OF<\/a><\/code><\/div>\n+<div class=\"col-last even-row-color\">&nbsp;<\/div>\n+<div class=\"col-first odd-row-color\"><code>static <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second odd-row-color\"><code><a href=\"#ALLOC_OF\" class=\"member-name-link\">ALLOC_OF<\/a><\/code><\/div>\n+<div class=\"col-last odd-row-color\">&nbsp;<\/div>\n+<div class=\"col-first even-row-color\"><code>static <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second even-row-color\"><code><a href=\"#CALL\" class=\"member-name-link\">CALL<\/a><\/code><\/div>\n+<div class=\"col-last even-row-color\">&nbsp;<\/div>\n+<div class=\"col-first odd-row-color\"><code>static <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second odd-row-color\"><code><a href=\"#CHECKCAST_ARRAY\" class=\"member-name-link\">CHECKCAST_ARRAY<\/a><\/code><\/div>\n+<div class=\"col-last odd-row-color\">&nbsp;<\/div>\n+<div class=\"col-first even-row-color\"><code>static <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second even-row-color\"><code><a href=\"#CHECKCAST_ARRAY_OF\" class=\"member-name-link\">CHECKCAST_ARRAY_OF<\/a><\/code><\/div>\n+<div class=\"col-last even-row-color\">&nbsp;<\/div>\n+<div class=\"col-first odd-row-color\"><code>static <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second odd-row-color\"><code><a href=\"#CHECKCAST_ARRAYCOPY\" class=\"member-name-link\">CHECKCAST_ARRAYCOPY<\/a><\/code><\/div>\n+<div class=\"col-last odd-row-color\">&nbsp;<\/div>\n+<div class=\"col-first even-row-color\"><code>static <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second even-row-color\"><code><a href=\"#CLASS_CHECK_TRAP\" class=\"member-name-link\">CLASS_CHECK_TRAP<\/a><\/code><\/div>\n+<div class=\"col-last even-row-color\">&nbsp;<\/div>\n+<div class=\"col-first odd-row-color\"><code>static <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second odd-row-color\"><code><a href=\"#COUNTEDLOOP\" class=\"member-name-link\">COUNTEDLOOP<\/a><\/code><\/div>\n+<div class=\"col-last odd-row-color\">&nbsp;<\/div>\n+<div class=\"col-first even-row-color\"><code>static <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second even-row-color\"><code><a href=\"#COUNTEDLOOP_MAIN\" class=\"member-name-link\">COUNTEDLOOP_MAIN<\/a><\/code><\/div>\n+<div class=\"col-last even-row-color\">&nbsp;<\/div>\n+<div class=\"col-first odd-row-color\"><code>static <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second odd-row-color\"><code><a href=\"#FIELD_ACCESS\" class=\"member-name-link\">FIELD_ACCESS<\/a><\/code><\/div>\n+<div class=\"col-last odd-row-color\">&nbsp;<\/div>\n+<div class=\"col-first even-row-color\"><code>static <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second even-row-color\"><code><a href=\"#INTRINSIC_OR_TYPE_CHECKED_INLINING_TRAP\" class=\"member-name-link\">INTRINSIC_OR_TYPE_CHECKED_INLINING_TRAP<\/a><\/code><\/div>\n+<div class=\"col-last even-row-color\">&nbsp;<\/div>\n+<div class=\"col-first odd-row-color\"><code>static <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second odd-row-color\"><code><a href=\"#LOAD\" class=\"member-name-link\">LOAD<\/a><\/code><\/div>\n+<div class=\"col-last odd-row-color\">&nbsp;<\/div>\n+<div class=\"col-first even-row-color\"><code>static <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second even-row-color\"><code><a href=\"#LOAD_B\" class=\"member-name-link\">LOAD_B<\/a><\/code><\/div>\n+<div class=\"col-last even-row-color\">&nbsp;<\/div>\n+<div class=\"col-first odd-row-color\"><code>static <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second odd-row-color\"><code><a href=\"#LOAD_B_OF_CLASS\" class=\"member-name-link\">LOAD_B_OF_CLASS<\/a><\/code><\/div>\n+<div class=\"col-last odd-row-color\">&nbsp;<\/div>\n+<div class=\"col-first even-row-color\"><code>static <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second even-row-color\"><code><a href=\"#LOAD_D\" class=\"member-name-link\">LOAD_D<\/a><\/code><\/div>\n+<div class=\"col-last even-row-color\">&nbsp;<\/div>\n+<div class=\"col-first odd-row-color\"><code>static <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second odd-row-color\"><code><a href=\"#LOAD_D_OF_CLASS\" class=\"member-name-link\">LOAD_D_OF_CLASS<\/a><\/code><\/div>\n+<div class=\"col-last odd-row-color\">&nbsp;<\/div>\n+<div class=\"col-first even-row-color\"><code>static <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second even-row-color\"><code><a href=\"#LOAD_F\" class=\"member-name-link\">LOAD_F<\/a><\/code><\/div>\n+<div class=\"col-last even-row-color\">&nbsp;<\/div>\n+<div class=\"col-first odd-row-color\"><code>static <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second odd-row-color\"><code><a href=\"#LOAD_F_OF_CLASS\" class=\"member-name-link\">LOAD_F_OF_CLASS<\/a><\/code><\/div>\n+<div class=\"col-last odd-row-color\">&nbsp;<\/div>\n+<div class=\"col-first even-row-color\"><code>static <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second even-row-color\"><code><a href=\"#LOAD_I\" class=\"member-name-link\">LOAD_I<\/a><\/code><\/div>\n+<div class=\"col-last even-row-color\">&nbsp;<\/div>\n+<div class=\"col-first odd-row-color\"><code>static <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second odd-row-color\"><code><a href=\"#LOAD_I_OF_CLASS\" class=\"member-name-link\">LOAD_I_OF_CLASS<\/a><\/code><\/div>\n+<div class=\"col-last odd-row-color\">&nbsp;<\/div>\n+<div class=\"col-first even-row-color\"><code>static <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second even-row-color\"><code><a href=\"#LOAD_KLASS\" class=\"member-name-link\">LOAD_KLASS<\/a><\/code><\/div>\n+<div class=\"col-last even-row-color\">&nbsp;<\/div>\n+<div class=\"col-first odd-row-color\"><code>static <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second odd-row-color\"><code><a href=\"#LOAD_L\" class=\"member-name-link\">LOAD_L<\/a><\/code><\/div>\n+<div class=\"col-last odd-row-color\">&nbsp;<\/div>\n+<div class=\"col-first even-row-color\"><code>static <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second even-row-color\"><code><a href=\"#LOAD_L_OF_CLASS\" class=\"member-name-link\">LOAD_L_OF_CLASS<\/a><\/code><\/div>\n+<div class=\"col-last even-row-color\">&nbsp;<\/div>\n+<div class=\"col-first odd-row-color\"><code>static <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second odd-row-color\"><code><a href=\"#LOAD_N\" class=\"member-name-link\">LOAD_N<\/a><\/code><\/div>\n+<div class=\"col-last odd-row-color\">&nbsp;<\/div>\n+<div class=\"col-first even-row-color\"><code>static <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second even-row-color\"><code><a href=\"#LOAD_N_OF_CLASS\" class=\"member-name-link\">LOAD_N_OF_CLASS<\/a><\/code><\/div>\n+<div class=\"col-last even-row-color\">&nbsp;<\/div>\n+<div class=\"col-first odd-row-color\"><code>static <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second odd-row-color\"><code><a href=\"#LOAD_OF_CLASS\" class=\"member-name-link\">LOAD_OF_CLASS<\/a><\/code><\/div>\n+<div class=\"col-last odd-row-color\">&nbsp;<\/div>\n+<div class=\"col-first even-row-color\"><code>static <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second even-row-color\"><code><a href=\"#LOAD_OF_FIELD\" class=\"member-name-link\">LOAD_OF_FIELD<\/a><\/code><\/div>\n+<div class=\"col-last even-row-color\">&nbsp;<\/div>\n+<div class=\"col-first odd-row-color\"><code>static <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second odd-row-color\"><code><a href=\"#LOAD_P\" class=\"member-name-link\">LOAD_P<\/a><\/code><\/div>\n+<div class=\"col-last odd-row-color\">&nbsp;<\/div>\n+<div class=\"col-first even-row-color\"><code>static <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second even-row-color\"><code><a href=\"#LOAD_P_OF_CLASS\" class=\"member-name-link\">LOAD_P_OF_CLASS<\/a><\/code><\/div>\n+<div class=\"col-last even-row-color\">&nbsp;<\/div>\n+<div class=\"col-first odd-row-color\"><code>static <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second odd-row-color\"><code><a href=\"#LOAD_S\" class=\"member-name-link\">LOAD_S<\/a><\/code><\/div>\n+<div class=\"col-last odd-row-color\">&nbsp;<\/div>\n+<div class=\"col-first even-row-color\"><code>static <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second even-row-color\"><code><a href=\"#LOAD_S_OF_CLASS\" class=\"member-name-link\">LOAD_S_OF_CLASS<\/a><\/code><\/div>\n+<div class=\"col-last even-row-color\">&nbsp;<\/div>\n+<div class=\"col-first odd-row-color\"><code>static <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second odd-row-color\"><code><a href=\"#LOAD_UB\" class=\"member-name-link\">LOAD_UB<\/a><\/code><\/div>\n+<div class=\"col-last odd-row-color\">&nbsp;<\/div>\n+<div class=\"col-first even-row-color\"><code>static <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second even-row-color\"><code><a href=\"#LOAD_UB_OF_CLASS\" class=\"member-name-link\">LOAD_UB_OF_CLASS<\/a><\/code><\/div>\n+<div class=\"col-last even-row-color\">&nbsp;<\/div>\n+<div class=\"col-first odd-row-color\"><code>static <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second odd-row-color\"><code><a href=\"#LOAD_US\" class=\"member-name-link\">LOAD_US<\/a><\/code><\/div>\n+<div class=\"col-last odd-row-color\">&nbsp;<\/div>\n+<div class=\"col-first even-row-color\"><code>static <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second even-row-color\"><code><a href=\"#LOAD_US_OF_CLASS\" class=\"member-name-link\">LOAD_US_OF_CLASS<\/a><\/code><\/div>\n+<div class=\"col-last even-row-color\">&nbsp;<\/div>\n+<div class=\"col-first odd-row-color\"><code>static <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second odd-row-color\"><code><a href=\"#LOOP\" class=\"member-name-link\">LOOP<\/a><\/code><\/div>\n+<div class=\"col-last odd-row-color\">&nbsp;<\/div>\n+<div class=\"col-first even-row-color\"><code>static <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second even-row-color\"><code><a href=\"#MEMBAR\" class=\"member-name-link\">MEMBAR<\/a><\/code><\/div>\n+<div class=\"col-last even-row-color\">&nbsp;<\/div>\n+<div class=\"col-first odd-row-color\"><code>static <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second odd-row-color\"><code><a href=\"#NULL_ASSERT_TRAP\" class=\"member-name-link\">NULL_ASSERT_TRAP<\/a><\/code><\/div>\n+<div class=\"col-last odd-row-color\">&nbsp;<\/div>\n+<div class=\"col-first even-row-color\"><code>static <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second even-row-color\"><code><a href=\"#NULL_CHECK_TRAP\" class=\"member-name-link\">NULL_CHECK_TRAP<\/a><\/code><\/div>\n+<div class=\"col-last even-row-color\">&nbsp;<\/div>\n+<div class=\"col-first odd-row-color\"><code>static <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second odd-row-color\"><code><a href=\"#PREDICATE_TRAP\" class=\"member-name-link\">PREDICATE_TRAP<\/a><\/code><\/div>\n+<div class=\"col-last odd-row-color\">&nbsp;<\/div>\n+<div class=\"col-first even-row-color\"><code>static <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second even-row-color\"><code><a href=\"#RANGE_CHECK_TRAP\" class=\"member-name-link\">RANGE_CHECK_TRAP<\/a><\/code><\/div>\n+<div class=\"col-last even-row-color\">&nbsp;<\/div>\n+<div class=\"col-first odd-row-color\"><code>static <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second odd-row-color\"><code><a href=\"#SCOPE_OBJECT\" class=\"member-name-link\">SCOPE_OBJECT<\/a><\/code><\/div>\n+<div class=\"col-last odd-row-color\">&nbsp;<\/div>\n+<div class=\"col-first even-row-color\"><code>static <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second even-row-color\"><code><a href=\"#STORE\" class=\"member-name-link\">STORE<\/a><\/code><\/div>\n+<div class=\"col-last even-row-color\">&nbsp;<\/div>\n+<div class=\"col-first odd-row-color\"><code>static <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second odd-row-color\"><code><a href=\"#STORE_B\" class=\"member-name-link\">STORE_B<\/a><\/code><\/div>\n+<div class=\"col-last odd-row-color\">&nbsp;<\/div>\n+<div class=\"col-first even-row-color\"><code>static <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second even-row-color\"><code><a href=\"#STORE_B_OF_CLASS\" class=\"member-name-link\">STORE_B_OF_CLASS<\/a><\/code><\/div>\n+<div class=\"col-last even-row-color\">&nbsp;<\/div>\n+<div class=\"col-first odd-row-color\"><code>static <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second odd-row-color\"><code><a href=\"#STORE_C\" class=\"member-name-link\">STORE_C<\/a><\/code><\/div>\n+<div class=\"col-last odd-row-color\">&nbsp;<\/div>\n+<div class=\"col-first even-row-color\"><code>static <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second even-row-color\"><code><a href=\"#STORE_C_OF_CLASS\" class=\"member-name-link\">STORE_C_OF_CLASS<\/a><\/code><\/div>\n+<div class=\"col-last even-row-color\">&nbsp;<\/div>\n+<div class=\"col-first odd-row-color\"><code>static <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second odd-row-color\"><code><a href=\"#STORE_D\" class=\"member-name-link\">STORE_D<\/a><\/code><\/div>\n+<div class=\"col-last odd-row-color\">&nbsp;<\/div>\n+<div class=\"col-first even-row-color\"><code>static <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second even-row-color\"><code><a href=\"#STORE_D_OF_CLASS\" class=\"member-name-link\">STORE_D_OF_CLASS<\/a><\/code><\/div>\n+<div class=\"col-last even-row-color\">&nbsp;<\/div>\n+<div class=\"col-first odd-row-color\"><code>static <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second odd-row-color\"><code><a href=\"#STORE_F\" class=\"member-name-link\">STORE_F<\/a><\/code><\/div>\n+<div class=\"col-last odd-row-color\">&nbsp;<\/div>\n+<div class=\"col-first even-row-color\"><code>static <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second even-row-color\"><code><a href=\"#STORE_F_OF_CLASS\" class=\"member-name-link\">STORE_F_OF_CLASS<\/a><\/code><\/div>\n+<div class=\"col-last even-row-color\">&nbsp;<\/div>\n+<div class=\"col-first odd-row-color\"><code>static <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second odd-row-color\"><code><a href=\"#STORE_I\" class=\"member-name-link\">STORE_I<\/a><\/code><\/div>\n+<div class=\"col-last odd-row-color\">&nbsp;<\/div>\n+<div class=\"col-first even-row-color\"><code>static <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second even-row-color\"><code><a href=\"#STORE_I_OF_CLASS\" class=\"member-name-link\">STORE_I_OF_CLASS<\/a><\/code><\/div>\n+<div class=\"col-last even-row-color\">&nbsp;<\/div>\n+<div class=\"col-first odd-row-color\"><code>static <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second odd-row-color\"><code><a href=\"#STORE_L\" class=\"member-name-link\">STORE_L<\/a><\/code><\/div>\n+<div class=\"col-last odd-row-color\">&nbsp;<\/div>\n+<div class=\"col-first even-row-color\"><code>static <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second even-row-color\"><code><a href=\"#STORE_L_OF_CLASS\" class=\"member-name-link\">STORE_L_OF_CLASS<\/a><\/code><\/div>\n+<div class=\"col-last even-row-color\">&nbsp;<\/div>\n+<div class=\"col-first odd-row-color\"><code>static <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second odd-row-color\"><code><a href=\"#STORE_N\" class=\"member-name-link\">STORE_N<\/a><\/code><\/div>\n+<div class=\"col-last odd-row-color\">&nbsp;<\/div>\n+<div class=\"col-first even-row-color\"><code>static <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second even-row-color\"><code><a href=\"#STORE_N_OF_CLASS\" class=\"member-name-link\">STORE_N_OF_CLASS<\/a><\/code><\/div>\n+<div class=\"col-last even-row-color\">&nbsp;<\/div>\n+<div class=\"col-first odd-row-color\"><code>static <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second odd-row-color\"><code><a href=\"#STORE_OF_CLASS\" class=\"member-name-link\">STORE_OF_CLASS<\/a><\/code><\/div>\n+<div class=\"col-last odd-row-color\">&nbsp;<\/div>\n+<div class=\"col-first even-row-color\"><code>static <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second even-row-color\"><code><a href=\"#STORE_OF_FIELD\" class=\"member-name-link\">STORE_OF_FIELD<\/a><\/code><\/div>\n+<div class=\"col-last even-row-color\">&nbsp;<\/div>\n+<div class=\"col-first odd-row-color\"><code>static <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second odd-row-color\"><code><a href=\"#STORE_P\" class=\"member-name-link\">STORE_P<\/a><\/code><\/div>\n+<div class=\"col-last odd-row-color\">&nbsp;<\/div>\n+<div class=\"col-first even-row-color\"><code>static <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second even-row-color\"><code><a href=\"#STORE_P_OF_CLASS\" class=\"member-name-link\">STORE_P_OF_CLASS<\/a><\/code><\/div>\n+<div class=\"col-last even-row-color\">&nbsp;<\/div>\n+<div class=\"col-first odd-row-color\"><code>static <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second odd-row-color\"><code><a href=\"#TRAP\" class=\"member-name-link\">TRAP<\/a><\/code><\/div>\n+<div class=\"col-last odd-row-color\">&nbsp;<\/div>\n+<div class=\"col-first even-row-color\"><code>static <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second even-row-color\"><code><a href=\"#UNHANDLED_TRAP\" class=\"member-name-link\">UNHANDLED_TRAP<\/a><\/code><\/div>\n+<div class=\"col-last even-row-color\">&nbsp;<\/div>\n+<div class=\"col-first odd-row-color\"><code>static <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second odd-row-color\"><code><a href=\"#UNSTABLE_IF_TRAP\" class=\"member-name-link\">UNSTABLE_IF_TRAP<\/a><\/code><\/div>\n+<div class=\"col-last odd-row-color\">&nbsp;<\/div>\n+<\/div>\n+<\/section>\n+<\/li>\n+<!-- ======== CONSTRUCTOR SUMMARY ======== -->\n+<li>\n+<section class=\"constructor-summary\" id=\"constructor-summary\">\n+<h2>Constructor Summary<\/h2>\n+<div class=\"caption\"><span>Constructors<\/span><\/div>\n+<div class=\"summary-table two-column-summary\">\n+<div class=\"table-header col-first\">Constructor<\/div>\n+<div class=\"table-header col-last\">Description<\/div>\n+<div class=\"col-constructor-name even-row-color\"><code><a href=\"#%3Cinit%3E()\" class=\"member-name-link\">IRNode<\/a>()<\/code><\/div>\n+<div class=\"col-last even-row-color\">&nbsp;<\/div>\n+<\/div>\n+<\/section>\n+<\/li>\n+<!-- ========== METHOD SUMMARY =========== -->\n+<li>\n+<section class=\"method-summary\" id=\"method-summary\">\n+<h2>Method Summary<\/h2>\n+<div class=\"inherited-list\">\n+<h3 id=\"methods-inherited-from-class-java.lang.Object\">Methods inherited from class&nbsp;java.lang.<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html\" title=\"class or interface in java.lang\" class=\"external-link\">Object<\/a><\/h3>\n+<code><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#clone()\" title=\"class or interface in java.lang\" class=\"external-link\">clone<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#equals(java.lang.Object)\" title=\"class or interface in java.lang\" class=\"external-link\">equals<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#finalize()\" title=\"class or interface in java.lang\" class=\"external-link\">finalize<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#getClass()\" title=\"class or interface in java.lang\" class=\"external-link\">getClass<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#hashCode()\" title=\"class or interface in java.lang\" class=\"external-link\">hashCode<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#notify()\" title=\"class or interface in java.lang\" class=\"external-link\">notify<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#notifyAll()\" title=\"class or interface in java.lang\" class=\"external-link\">notifyAll<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#toString()\" title=\"class or interface in java.lang\" class=\"external-link\">toString<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#wait()\" title=\"class or interface in java.lang\" class=\"external-link\">wait<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#wait(long)\" title=\"class or interface in java.lang\" class=\"external-link\">wait<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#wait(long,int)\" title=\"class or interface in java.lang\" class=\"external-link\">wait<\/a><\/code><\/div>\n+<\/section>\n+<\/li>\n+<\/ul>\n+<\/section>\n+<section class=\"details\">\n+<ul class=\"details-list\">\n+<!-- ============ FIELD DETAIL =========== -->\n+<li>\n+<section class=\"field-details\" id=\"field-detail\">\n+<h2>Field Details<\/h2>\n+<ul class=\"member-list\">\n+<li>\n+<section class=\"detail\" id=\"ALLOC\">\n+<h3>ALLOC<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static final<\/span>&nbsp;<span class=\"return-type\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/span>&nbsp;<span class=\"element-name\">ALLOC<\/span><\/div>\n+<dl class=\"notes\">\n+<dt>See Also:<\/dt>\n+<dd><a href=\"..\/..\/..\/..\/..\/constant-values.html#jdk.test.lib.hotspot.ir_framework.IRNode.ALLOC\">Constant Field Values<\/a><\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"ALLOC_OF\">\n+<h3>ALLOC_OF<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static final<\/span>&nbsp;<span class=\"return-type\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/span>&nbsp;<span class=\"element-name\">ALLOC_OF<\/span><\/div>\n+<dl class=\"notes\">\n+<dt>See Also:<\/dt>\n+<dd><a href=\"..\/..\/..\/..\/..\/constant-values.html#jdk.test.lib.hotspot.ir_framework.IRNode.ALLOC_OF\">Constant Field Values<\/a><\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"ALLOC_ARRAY\">\n+<h3>ALLOC_ARRAY<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static final<\/span>&nbsp;<span class=\"return-type\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/span>&nbsp;<span class=\"element-name\">ALLOC_ARRAY<\/span><\/div>\n+<dl class=\"notes\">\n+<dt>See Also:<\/dt>\n+<dd><a href=\"..\/..\/..\/..\/..\/constant-values.html#jdk.test.lib.hotspot.ir_framework.IRNode.ALLOC_ARRAY\">Constant Field Values<\/a><\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"ALLOC_ARRAY_OF\">\n+<h3>ALLOC_ARRAY_OF<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static final<\/span>&nbsp;<span class=\"return-type\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/span>&nbsp;<span class=\"element-name\">ALLOC_ARRAY_OF<\/span><\/div>\n+<dl class=\"notes\">\n+<dt>See Also:<\/dt>\n+<dd><a href=\"..\/..\/..\/..\/..\/constant-values.html#jdk.test.lib.hotspot.ir_framework.IRNode.ALLOC_ARRAY_OF\">Constant Field Values<\/a><\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"CHECKCAST_ARRAY\">\n+<h3>CHECKCAST_ARRAY<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static final<\/span>&nbsp;<span class=\"return-type\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/span>&nbsp;<span class=\"element-name\">CHECKCAST_ARRAY<\/span><\/div>\n+<dl class=\"notes\">\n+<dt>See Also:<\/dt>\n+<dd><a href=\"..\/..\/..\/..\/..\/constant-values.html#jdk.test.lib.hotspot.ir_framework.IRNode.CHECKCAST_ARRAY\">Constant Field Values<\/a><\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"CHECKCAST_ARRAY_OF\">\n+<h3>CHECKCAST_ARRAY_OF<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static final<\/span>&nbsp;<span class=\"return-type\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/span>&nbsp;<span class=\"element-name\">CHECKCAST_ARRAY_OF<\/span><\/div>\n+<dl class=\"notes\">\n+<dt>See Also:<\/dt>\n+<dd><a href=\"..\/..\/..\/..\/..\/constant-values.html#jdk.test.lib.hotspot.ir_framework.IRNode.CHECKCAST_ARRAY_OF\">Constant Field Values<\/a><\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"CHECKCAST_ARRAYCOPY\">\n+<h3>CHECKCAST_ARRAYCOPY<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static final<\/span>&nbsp;<span class=\"return-type\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/span>&nbsp;<span class=\"element-name\">CHECKCAST_ARRAYCOPY<\/span><\/div>\n+<dl class=\"notes\">\n+<dt>See Also:<\/dt>\n+<dd><a href=\"..\/..\/..\/..\/..\/constant-values.html#jdk.test.lib.hotspot.ir_framework.IRNode.CHECKCAST_ARRAYCOPY\">Constant Field Values<\/a><\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"FIELD_ACCESS\">\n+<h3>FIELD_ACCESS<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static final<\/span>&nbsp;<span class=\"return-type\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/span>&nbsp;<span class=\"element-name\">FIELD_ACCESS<\/span><\/div>\n+<dl class=\"notes\">\n+<dt>See Also:<\/dt>\n+<dd><a href=\"..\/..\/..\/..\/..\/constant-values.html#jdk.test.lib.hotspot.ir_framework.IRNode.FIELD_ACCESS\">Constant Field Values<\/a><\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"STORE\">\n+<h3>STORE<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static final<\/span>&nbsp;<span class=\"return-type\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/span>&nbsp;<span class=\"element-name\">STORE<\/span><\/div>\n+<dl class=\"notes\">\n+<dt>See Also:<\/dt>\n+<dd><a href=\"..\/..\/..\/..\/..\/constant-values.html#jdk.test.lib.hotspot.ir_framework.IRNode.STORE\">Constant Field Values<\/a><\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"STORE_B\">\n+<h3>STORE_B<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static final<\/span>&nbsp;<span class=\"return-type\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/span>&nbsp;<span class=\"element-name\">STORE_B<\/span><\/div>\n+<dl class=\"notes\">\n+<dt>See Also:<\/dt>\n+<dd><a href=\"..\/..\/..\/..\/..\/constant-values.html#jdk.test.lib.hotspot.ir_framework.IRNode.STORE_B\">Constant Field Values<\/a><\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"STORE_C\">\n+<h3>STORE_C<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static final<\/span>&nbsp;<span class=\"return-type\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/span>&nbsp;<span class=\"element-name\">STORE_C<\/span><\/div>\n+<dl class=\"notes\">\n+<dt>See Also:<\/dt>\n+<dd><a href=\"..\/..\/..\/..\/..\/constant-values.html#jdk.test.lib.hotspot.ir_framework.IRNode.STORE_C\">Constant Field Values<\/a><\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"STORE_I\">\n+<h3>STORE_I<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static final<\/span>&nbsp;<span class=\"return-type\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/span>&nbsp;<span class=\"element-name\">STORE_I<\/span><\/div>\n+<dl class=\"notes\">\n+<dt>See Also:<\/dt>\n+<dd><a href=\"..\/..\/..\/..\/..\/constant-values.html#jdk.test.lib.hotspot.ir_framework.IRNode.STORE_I\">Constant Field Values<\/a><\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"STORE_L\">\n+<h3>STORE_L<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static final<\/span>&nbsp;<span class=\"return-type\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/span>&nbsp;<span class=\"element-name\">STORE_L<\/span><\/div>\n+<dl class=\"notes\">\n+<dt>See Also:<\/dt>\n+<dd><a href=\"..\/..\/..\/..\/..\/constant-values.html#jdk.test.lib.hotspot.ir_framework.IRNode.STORE_L\">Constant Field Values<\/a><\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"STORE_F\">\n+<h3>STORE_F<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static final<\/span>&nbsp;<span class=\"return-type\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/span>&nbsp;<span class=\"element-name\">STORE_F<\/span><\/div>\n+<dl class=\"notes\">\n+<dt>See Also:<\/dt>\n+<dd><a href=\"..\/..\/..\/..\/..\/constant-values.html#jdk.test.lib.hotspot.ir_framework.IRNode.STORE_F\">Constant Field Values<\/a><\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"STORE_D\">\n+<h3>STORE_D<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static final<\/span>&nbsp;<span class=\"return-type\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/span>&nbsp;<span class=\"element-name\">STORE_D<\/span><\/div>\n+<dl class=\"notes\">\n+<dt>See Also:<\/dt>\n+<dd><a href=\"..\/..\/..\/..\/..\/constant-values.html#jdk.test.lib.hotspot.ir_framework.IRNode.STORE_D\">Constant Field Values<\/a><\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"STORE_P\">\n+<h3>STORE_P<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static final<\/span>&nbsp;<span class=\"return-type\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/span>&nbsp;<span class=\"element-name\">STORE_P<\/span><\/div>\n+<dl class=\"notes\">\n+<dt>See Also:<\/dt>\n+<dd><a href=\"..\/..\/..\/..\/..\/constant-values.html#jdk.test.lib.hotspot.ir_framework.IRNode.STORE_P\">Constant Field Values<\/a><\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"STORE_N\">\n+<h3>STORE_N<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static final<\/span>&nbsp;<span class=\"return-type\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/span>&nbsp;<span class=\"element-name\">STORE_N<\/span><\/div>\n+<dl class=\"notes\">\n+<dt>See Also:<\/dt>\n+<dd><a href=\"..\/..\/..\/..\/..\/constant-values.html#jdk.test.lib.hotspot.ir_framework.IRNode.STORE_N\">Constant Field Values<\/a><\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"STORE_OF_CLASS\">\n+<h3>STORE_OF_CLASS<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static final<\/span>&nbsp;<span class=\"return-type\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/span>&nbsp;<span class=\"element-name\">STORE_OF_CLASS<\/span><\/div>\n+<dl class=\"notes\">\n+<dt>See Also:<\/dt>\n+<dd><a href=\"..\/..\/..\/..\/..\/constant-values.html#jdk.test.lib.hotspot.ir_framework.IRNode.STORE_OF_CLASS\">Constant Field Values<\/a><\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"STORE_B_OF_CLASS\">\n+<h3>STORE_B_OF_CLASS<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static final<\/span>&nbsp;<span class=\"return-type\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/span>&nbsp;<span class=\"element-name\">STORE_B_OF_CLASS<\/span><\/div>\n+<dl class=\"notes\">\n+<dt>See Also:<\/dt>\n+<dd><a href=\"..\/..\/..\/..\/..\/constant-values.html#jdk.test.lib.hotspot.ir_framework.IRNode.STORE_B_OF_CLASS\">Constant Field Values<\/a><\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"STORE_C_OF_CLASS\">\n+<h3>STORE_C_OF_CLASS<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static final<\/span>&nbsp;<span class=\"return-type\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/span>&nbsp;<span class=\"element-name\">STORE_C_OF_CLASS<\/span><\/div>\n+<dl class=\"notes\">\n+<dt>See Also:<\/dt>\n+<dd><a href=\"..\/..\/..\/..\/..\/constant-values.html#jdk.test.lib.hotspot.ir_framework.IRNode.STORE_C_OF_CLASS\">Constant Field Values<\/a><\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"STORE_I_OF_CLASS\">\n+<h3>STORE_I_OF_CLASS<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static final<\/span>&nbsp;<span class=\"return-type\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/span>&nbsp;<span class=\"element-name\">STORE_I_OF_CLASS<\/span><\/div>\n+<dl class=\"notes\">\n+<dt>See Also:<\/dt>\n+<dd><a href=\"..\/..\/..\/..\/..\/constant-values.html#jdk.test.lib.hotspot.ir_framework.IRNode.STORE_I_OF_CLASS\">Constant Field Values<\/a><\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"STORE_L_OF_CLASS\">\n+<h3>STORE_L_OF_CLASS<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static final<\/span>&nbsp;<span class=\"return-type\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/span>&nbsp;<span class=\"element-name\">STORE_L_OF_CLASS<\/span><\/div>\n+<dl class=\"notes\">\n+<dt>See Also:<\/dt>\n+<dd><a href=\"..\/..\/..\/..\/..\/constant-values.html#jdk.test.lib.hotspot.ir_framework.IRNode.STORE_L_OF_CLASS\">Constant Field Values<\/a><\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"STORE_F_OF_CLASS\">\n+<h3>STORE_F_OF_CLASS<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static final<\/span>&nbsp;<span class=\"return-type\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/span>&nbsp;<span class=\"element-name\">STORE_F_OF_CLASS<\/span><\/div>\n+<dl class=\"notes\">\n+<dt>See Also:<\/dt>\n+<dd><a href=\"..\/..\/..\/..\/..\/constant-values.html#jdk.test.lib.hotspot.ir_framework.IRNode.STORE_F_OF_CLASS\">Constant Field Values<\/a><\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"STORE_D_OF_CLASS\">\n+<h3>STORE_D_OF_CLASS<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static final<\/span>&nbsp;<span class=\"return-type\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/span>&nbsp;<span class=\"element-name\">STORE_D_OF_CLASS<\/span><\/div>\n+<dl class=\"notes\">\n+<dt>See Also:<\/dt>\n+<dd><a href=\"..\/..\/..\/..\/..\/constant-values.html#jdk.test.lib.hotspot.ir_framework.IRNode.STORE_D_OF_CLASS\">Constant Field Values<\/a><\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"STORE_P_OF_CLASS\">\n+<h3>STORE_P_OF_CLASS<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static final<\/span>&nbsp;<span class=\"return-type\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/span>&nbsp;<span class=\"element-name\">STORE_P_OF_CLASS<\/span><\/div>\n+<dl class=\"notes\">\n+<dt>See Also:<\/dt>\n+<dd><a href=\"..\/..\/..\/..\/..\/constant-values.html#jdk.test.lib.hotspot.ir_framework.IRNode.STORE_P_OF_CLASS\">Constant Field Values<\/a><\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"STORE_N_OF_CLASS\">\n+<h3>STORE_N_OF_CLASS<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static final<\/span>&nbsp;<span class=\"return-type\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/span>&nbsp;<span class=\"element-name\">STORE_N_OF_CLASS<\/span><\/div>\n+<dl class=\"notes\">\n+<dt>See Also:<\/dt>\n+<dd><a href=\"..\/..\/..\/..\/..\/constant-values.html#jdk.test.lib.hotspot.ir_framework.IRNode.STORE_N_OF_CLASS\">Constant Field Values<\/a><\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"STORE_OF_FIELD\">\n+<h3>STORE_OF_FIELD<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static final<\/span>&nbsp;<span class=\"return-type\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/span>&nbsp;<span class=\"element-name\">STORE_OF_FIELD<\/span><\/div>\n+<dl class=\"notes\">\n+<dt>See Also:<\/dt>\n+<dd><a href=\"..\/..\/..\/..\/..\/constant-values.html#jdk.test.lib.hotspot.ir_framework.IRNode.STORE_OF_FIELD\">Constant Field Values<\/a><\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"LOAD\">\n+<h3>LOAD<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static final<\/span>&nbsp;<span class=\"return-type\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/span>&nbsp;<span class=\"element-name\">LOAD<\/span><\/div>\n+<dl class=\"notes\">\n+<dt>See Also:<\/dt>\n+<dd><a href=\"..\/..\/..\/..\/..\/constant-values.html#jdk.test.lib.hotspot.ir_framework.IRNode.LOAD\">Constant Field Values<\/a><\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"LOAD_B\">\n+<h3>LOAD_B<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static final<\/span>&nbsp;<span class=\"return-type\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/span>&nbsp;<span class=\"element-name\">LOAD_B<\/span><\/div>\n+<dl class=\"notes\">\n+<dt>See Also:<\/dt>\n+<dd><a href=\"..\/..\/..\/..\/..\/constant-values.html#jdk.test.lib.hotspot.ir_framework.IRNode.LOAD_B\">Constant Field Values<\/a><\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"LOAD_UB\">\n+<h3>LOAD_UB<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static final<\/span>&nbsp;<span class=\"return-type\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/span>&nbsp;<span class=\"element-name\">LOAD_UB<\/span><\/div>\n+<dl class=\"notes\">\n+<dt>See Also:<\/dt>\n+<dd><a href=\"..\/..\/..\/..\/..\/constant-values.html#jdk.test.lib.hotspot.ir_framework.IRNode.LOAD_UB\">Constant Field Values<\/a><\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"LOAD_S\">\n+<h3>LOAD_S<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static final<\/span>&nbsp;<span class=\"return-type\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/span>&nbsp;<span class=\"element-name\">LOAD_S<\/span><\/div>\n+<dl class=\"notes\">\n+<dt>See Also:<\/dt>\n+<dd><a href=\"..\/..\/..\/..\/..\/constant-values.html#jdk.test.lib.hotspot.ir_framework.IRNode.LOAD_S\">Constant Field Values<\/a><\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"LOAD_US\">\n+<h3>LOAD_US<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static final<\/span>&nbsp;<span class=\"return-type\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/span>&nbsp;<span class=\"element-name\">LOAD_US<\/span><\/div>\n+<dl class=\"notes\">\n+<dt>See Also:<\/dt>\n+<dd><a href=\"..\/..\/..\/..\/..\/constant-values.html#jdk.test.lib.hotspot.ir_framework.IRNode.LOAD_US\">Constant Field Values<\/a><\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"LOAD_I\">\n+<h3>LOAD_I<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static final<\/span>&nbsp;<span class=\"return-type\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/span>&nbsp;<span class=\"element-name\">LOAD_I<\/span><\/div>\n+<dl class=\"notes\">\n+<dt>See Also:<\/dt>\n+<dd><a href=\"..\/..\/..\/..\/..\/constant-values.html#jdk.test.lib.hotspot.ir_framework.IRNode.LOAD_I\">Constant Field Values<\/a><\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"LOAD_L\">\n+<h3>LOAD_L<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static final<\/span>&nbsp;<span class=\"return-type\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/span>&nbsp;<span class=\"element-name\">LOAD_L<\/span><\/div>\n+<dl class=\"notes\">\n+<dt>See Also:<\/dt>\n+<dd><a href=\"..\/..\/..\/..\/..\/constant-values.html#jdk.test.lib.hotspot.ir_framework.IRNode.LOAD_L\">Constant Field Values<\/a><\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"LOAD_F\">\n+<h3>LOAD_F<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static final<\/span>&nbsp;<span class=\"return-type\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/span>&nbsp;<span class=\"element-name\">LOAD_F<\/span><\/div>\n+<dl class=\"notes\">\n+<dt>See Also:<\/dt>\n+<dd><a href=\"..\/..\/..\/..\/..\/constant-values.html#jdk.test.lib.hotspot.ir_framework.IRNode.LOAD_F\">Constant Field Values<\/a><\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"LOAD_D\">\n+<h3>LOAD_D<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static final<\/span>&nbsp;<span class=\"return-type\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/span>&nbsp;<span class=\"element-name\">LOAD_D<\/span><\/div>\n+<dl class=\"notes\">\n+<dt>See Also:<\/dt>\n+<dd><a href=\"..\/..\/..\/..\/..\/constant-values.html#jdk.test.lib.hotspot.ir_framework.IRNode.LOAD_D\">Constant Field Values<\/a><\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"LOAD_P\">\n+<h3>LOAD_P<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static final<\/span>&nbsp;<span class=\"return-type\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/span>&nbsp;<span class=\"element-name\">LOAD_P<\/span><\/div>\n+<dl class=\"notes\">\n+<dt>See Also:<\/dt>\n+<dd><a href=\"..\/..\/..\/..\/..\/constant-values.html#jdk.test.lib.hotspot.ir_framework.IRNode.LOAD_P\">Constant Field Values<\/a><\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"LOAD_N\">\n+<h3>LOAD_N<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static final<\/span>&nbsp;<span class=\"return-type\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/span>&nbsp;<span class=\"element-name\">LOAD_N<\/span><\/div>\n+<dl class=\"notes\">\n+<dt>See Also:<\/dt>\n+<dd><a href=\"..\/..\/..\/..\/..\/constant-values.html#jdk.test.lib.hotspot.ir_framework.IRNode.LOAD_N\">Constant Field Values<\/a><\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"LOAD_OF_CLASS\">\n+<h3>LOAD_OF_CLASS<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static final<\/span>&nbsp;<span class=\"return-type\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/span>&nbsp;<span class=\"element-name\">LOAD_OF_CLASS<\/span><\/div>\n+<dl class=\"notes\">\n+<dt>See Also:<\/dt>\n+<dd><a href=\"..\/..\/..\/..\/..\/constant-values.html#jdk.test.lib.hotspot.ir_framework.IRNode.LOAD_OF_CLASS\">Constant Field Values<\/a><\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"LOAD_B_OF_CLASS\">\n+<h3>LOAD_B_OF_CLASS<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static final<\/span>&nbsp;<span class=\"return-type\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/span>&nbsp;<span class=\"element-name\">LOAD_B_OF_CLASS<\/span><\/div>\n+<dl class=\"notes\">\n+<dt>See Also:<\/dt>\n+<dd><a href=\"..\/..\/..\/..\/..\/constant-values.html#jdk.test.lib.hotspot.ir_framework.IRNode.LOAD_B_OF_CLASS\">Constant Field Values<\/a><\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"LOAD_UB_OF_CLASS\">\n+<h3>LOAD_UB_OF_CLASS<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static final<\/span>&nbsp;<span class=\"return-type\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/span>&nbsp;<span class=\"element-name\">LOAD_UB_OF_CLASS<\/span><\/div>\n+<dl class=\"notes\">\n+<dt>See Also:<\/dt>\n+<dd><a href=\"..\/..\/..\/..\/..\/constant-values.html#jdk.test.lib.hotspot.ir_framework.IRNode.LOAD_UB_OF_CLASS\">Constant Field Values<\/a><\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"LOAD_S_OF_CLASS\">\n+<h3>LOAD_S_OF_CLASS<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static final<\/span>&nbsp;<span class=\"return-type\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/span>&nbsp;<span class=\"element-name\">LOAD_S_OF_CLASS<\/span><\/div>\n+<dl class=\"notes\">\n+<dt>See Also:<\/dt>\n+<dd><a href=\"..\/..\/..\/..\/..\/constant-values.html#jdk.test.lib.hotspot.ir_framework.IRNode.LOAD_S_OF_CLASS\">Constant Field Values<\/a><\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"LOAD_US_OF_CLASS\">\n+<h3>LOAD_US_OF_CLASS<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static final<\/span>&nbsp;<span class=\"return-type\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/span>&nbsp;<span class=\"element-name\">LOAD_US_OF_CLASS<\/span><\/div>\n+<dl class=\"notes\">\n+<dt>See Also:<\/dt>\n+<dd><a href=\"..\/..\/..\/..\/..\/constant-values.html#jdk.test.lib.hotspot.ir_framework.IRNode.LOAD_US_OF_CLASS\">Constant Field Values<\/a><\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"LOAD_I_OF_CLASS\">\n+<h3>LOAD_I_OF_CLASS<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static final<\/span>&nbsp;<span class=\"return-type\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/span>&nbsp;<span class=\"element-name\">LOAD_I_OF_CLASS<\/span><\/div>\n+<dl class=\"notes\">\n+<dt>See Also:<\/dt>\n+<dd><a href=\"..\/..\/..\/..\/..\/constant-values.html#jdk.test.lib.hotspot.ir_framework.IRNode.LOAD_I_OF_CLASS\">Constant Field Values<\/a><\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"LOAD_L_OF_CLASS\">\n+<h3>LOAD_L_OF_CLASS<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static final<\/span>&nbsp;<span class=\"return-type\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/span>&nbsp;<span class=\"element-name\">LOAD_L_OF_CLASS<\/span><\/div>\n+<dl class=\"notes\">\n+<dt>See Also:<\/dt>\n+<dd><a href=\"..\/..\/..\/..\/..\/constant-values.html#jdk.test.lib.hotspot.ir_framework.IRNode.LOAD_L_OF_CLASS\">Constant Field Values<\/a><\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"LOAD_F_OF_CLASS\">\n+<h3>LOAD_F_OF_CLASS<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static final<\/span>&nbsp;<span class=\"return-type\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/span>&nbsp;<span class=\"element-name\">LOAD_F_OF_CLASS<\/span><\/div>\n+<dl class=\"notes\">\n+<dt>See Also:<\/dt>\n+<dd><a href=\"..\/..\/..\/..\/..\/constant-values.html#jdk.test.lib.hotspot.ir_framework.IRNode.LOAD_F_OF_CLASS\">Constant Field Values<\/a><\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"LOAD_D_OF_CLASS\">\n+<h3>LOAD_D_OF_CLASS<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static final<\/span>&nbsp;<span class=\"return-type\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/span>&nbsp;<span class=\"element-name\">LOAD_D_OF_CLASS<\/span><\/div>\n+<dl class=\"notes\">\n+<dt>See Also:<\/dt>\n+<dd><a href=\"..\/..\/..\/..\/..\/constant-values.html#jdk.test.lib.hotspot.ir_framework.IRNode.LOAD_D_OF_CLASS\">Constant Field Values<\/a><\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"LOAD_P_OF_CLASS\">\n+<h3>LOAD_P_OF_CLASS<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static final<\/span>&nbsp;<span class=\"return-type\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/span>&nbsp;<span class=\"element-name\">LOAD_P_OF_CLASS<\/span><\/div>\n+<dl class=\"notes\">\n+<dt>See Also:<\/dt>\n+<dd><a href=\"..\/..\/..\/..\/..\/constant-values.html#jdk.test.lib.hotspot.ir_framework.IRNode.LOAD_P_OF_CLASS\">Constant Field Values<\/a><\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"LOAD_N_OF_CLASS\">\n+<h3>LOAD_N_OF_CLASS<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static final<\/span>&nbsp;<span class=\"return-type\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/span>&nbsp;<span class=\"element-name\">LOAD_N_OF_CLASS<\/span><\/div>\n+<dl class=\"notes\">\n+<dt>See Also:<\/dt>\n+<dd><a href=\"..\/..\/..\/..\/..\/constant-values.html#jdk.test.lib.hotspot.ir_framework.IRNode.LOAD_N_OF_CLASS\">Constant Field Values<\/a><\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"LOAD_OF_FIELD\">\n+<h3>LOAD_OF_FIELD<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static final<\/span>&nbsp;<span class=\"return-type\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/span>&nbsp;<span class=\"element-name\">LOAD_OF_FIELD<\/span><\/div>\n+<dl class=\"notes\">\n+<dt>See Also:<\/dt>\n+<dd><a href=\"..\/..\/..\/..\/..\/constant-values.html#jdk.test.lib.hotspot.ir_framework.IRNode.LOAD_OF_FIELD\">Constant Field Values<\/a><\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"LOAD_KLASS\">\n+<h3>LOAD_KLASS<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static final<\/span>&nbsp;<span class=\"return-type\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/span>&nbsp;<span class=\"element-name\">LOAD_KLASS<\/span><\/div>\n+<dl class=\"notes\">\n+<dt>See Also:<\/dt>\n+<dd><a href=\"..\/..\/..\/..\/..\/constant-values.html#jdk.test.lib.hotspot.ir_framework.IRNode.LOAD_KLASS\">Constant Field Values<\/a><\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"LOOP\">\n+<h3>LOOP<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static final<\/span>&nbsp;<span class=\"return-type\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/span>&nbsp;<span class=\"element-name\">LOOP<\/span><\/div>\n+<dl class=\"notes\">\n+<dt>See Also:<\/dt>\n+<dd><a href=\"..\/..\/..\/..\/..\/constant-values.html#jdk.test.lib.hotspot.ir_framework.IRNode.LOOP\">Constant Field Values<\/a><\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"COUNTEDLOOP\">\n+<h3>COUNTEDLOOP<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static final<\/span>&nbsp;<span class=\"return-type\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/span>&nbsp;<span class=\"element-name\">COUNTEDLOOP<\/span><\/div>\n+<dl class=\"notes\">\n+<dt>See Also:<\/dt>\n+<dd><a href=\"..\/..\/..\/..\/..\/constant-values.html#jdk.test.lib.hotspot.ir_framework.IRNode.COUNTEDLOOP\">Constant Field Values<\/a><\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"COUNTEDLOOP_MAIN\">\n+<h3>COUNTEDLOOP_MAIN<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static final<\/span>&nbsp;<span class=\"return-type\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/span>&nbsp;<span class=\"element-name\">COUNTEDLOOP_MAIN<\/span><\/div>\n+<dl class=\"notes\">\n+<dt>See Also:<\/dt>\n+<dd><a href=\"..\/..\/..\/..\/..\/constant-values.html#jdk.test.lib.hotspot.ir_framework.IRNode.COUNTEDLOOP_MAIN\">Constant Field Values<\/a><\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"CALL\">\n+<h3>CALL<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static final<\/span>&nbsp;<span class=\"return-type\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/span>&nbsp;<span class=\"element-name\">CALL<\/span><\/div>\n+<dl class=\"notes\">\n+<dt>See Also:<\/dt>\n+<dd><a href=\"..\/..\/..\/..\/..\/constant-values.html#jdk.test.lib.hotspot.ir_framework.IRNode.CALL\">Constant Field Values<\/a><\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"TRAP\">\n+<h3>TRAP<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static final<\/span>&nbsp;<span class=\"return-type\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/span>&nbsp;<span class=\"element-name\">TRAP<\/span><\/div>\n+<dl class=\"notes\">\n+<dt>See Also:<\/dt>\n+<dd><a href=\"..\/..\/..\/..\/..\/constant-values.html#jdk.test.lib.hotspot.ir_framework.IRNode.TRAP\">Constant Field Values<\/a><\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"PREDICATE_TRAP\">\n+<h3>PREDICATE_TRAP<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static final<\/span>&nbsp;<span class=\"return-type\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/span>&nbsp;<span class=\"element-name\">PREDICATE_TRAP<\/span><\/div>\n+<dl class=\"notes\">\n+<dt>See Also:<\/dt>\n+<dd><a href=\"..\/..\/..\/..\/..\/constant-values.html#jdk.test.lib.hotspot.ir_framework.IRNode.PREDICATE_TRAP\">Constant Field Values<\/a><\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"UNSTABLE_IF_TRAP\">\n+<h3>UNSTABLE_IF_TRAP<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static final<\/span>&nbsp;<span class=\"return-type\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/span>&nbsp;<span class=\"element-name\">UNSTABLE_IF_TRAP<\/span><\/div>\n+<dl class=\"notes\">\n+<dt>See Also:<\/dt>\n+<dd><a href=\"..\/..\/..\/..\/..\/constant-values.html#jdk.test.lib.hotspot.ir_framework.IRNode.UNSTABLE_IF_TRAP\">Constant Field Values<\/a><\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"CLASS_CHECK_TRAP\">\n+<h3>CLASS_CHECK_TRAP<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static final<\/span>&nbsp;<span class=\"return-type\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/span>&nbsp;<span class=\"element-name\">CLASS_CHECK_TRAP<\/span><\/div>\n+<dl class=\"notes\">\n+<dt>See Also:<\/dt>\n+<dd><a href=\"..\/..\/..\/..\/..\/constant-values.html#jdk.test.lib.hotspot.ir_framework.IRNode.CLASS_CHECK_TRAP\">Constant Field Values<\/a><\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"NULL_CHECK_TRAP\">\n+<h3>NULL_CHECK_TRAP<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static final<\/span>&nbsp;<span class=\"return-type\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/span>&nbsp;<span class=\"element-name\">NULL_CHECK_TRAP<\/span><\/div>\n+<dl class=\"notes\">\n+<dt>See Also:<\/dt>\n+<dd><a href=\"..\/..\/..\/..\/..\/constant-values.html#jdk.test.lib.hotspot.ir_framework.IRNode.NULL_CHECK_TRAP\">Constant Field Values<\/a><\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"NULL_ASSERT_TRAP\">\n+<h3>NULL_ASSERT_TRAP<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static final<\/span>&nbsp;<span class=\"return-type\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/span>&nbsp;<span class=\"element-name\">NULL_ASSERT_TRAP<\/span><\/div>\n+<dl class=\"notes\">\n+<dt>See Also:<\/dt>\n+<dd><a href=\"..\/..\/..\/..\/..\/constant-values.html#jdk.test.lib.hotspot.ir_framework.IRNode.NULL_ASSERT_TRAP\">Constant Field Values<\/a><\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"RANGE_CHECK_TRAP\">\n+<h3>RANGE_CHECK_TRAP<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static final<\/span>&nbsp;<span class=\"return-type\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/span>&nbsp;<span class=\"element-name\">RANGE_CHECK_TRAP<\/span><\/div>\n+<dl class=\"notes\">\n+<dt>See Also:<\/dt>\n+<dd><a href=\"..\/..\/..\/..\/..\/constant-values.html#jdk.test.lib.hotspot.ir_framework.IRNode.RANGE_CHECK_TRAP\">Constant Field Values<\/a><\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"UNHANDLED_TRAP\">\n+<h3>UNHANDLED_TRAP<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static final<\/span>&nbsp;<span class=\"return-type\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/span>&nbsp;<span class=\"element-name\">UNHANDLED_TRAP<\/span><\/div>\n+<dl class=\"notes\">\n+<dt>See Also:<\/dt>\n+<dd><a href=\"..\/..\/..\/..\/..\/constant-values.html#jdk.test.lib.hotspot.ir_framework.IRNode.UNHANDLED_TRAP\">Constant Field Values<\/a><\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"INTRINSIC_OR_TYPE_CHECKED_INLINING_TRAP\">\n+<h3>INTRINSIC_OR_TYPE_CHECKED_INLINING_TRAP<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static final<\/span>&nbsp;<span class=\"return-type\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/span>&nbsp;<span class=\"element-name\">INTRINSIC_OR_TYPE_CHECKED_INLINING_TRAP<\/span><\/div>\n+<dl class=\"notes\">\n+<dt>See Also:<\/dt>\n+<dd><a href=\"..\/..\/..\/..\/..\/constant-values.html#jdk.test.lib.hotspot.ir_framework.IRNode.INTRINSIC_OR_TYPE_CHECKED_INLINING_TRAP\">Constant Field Values<\/a><\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"SCOPE_OBJECT\">\n+<h3>SCOPE_OBJECT<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static final<\/span>&nbsp;<span class=\"return-type\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/span>&nbsp;<span class=\"element-name\">SCOPE_OBJECT<\/span><\/div>\n+<dl class=\"notes\">\n+<dt>See Also:<\/dt>\n+<dd><a href=\"..\/..\/..\/..\/..\/constant-values.html#jdk.test.lib.hotspot.ir_framework.IRNode.SCOPE_OBJECT\">Constant Field Values<\/a><\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"MEMBAR\">\n+<h3>MEMBAR<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static final<\/span>&nbsp;<span class=\"return-type\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/span>&nbsp;<span class=\"element-name\">MEMBAR<\/span><\/div>\n+<dl class=\"notes\">\n+<dt>See Also:<\/dt>\n+<dd><a href=\"..\/..\/..\/..\/..\/constant-values.html#jdk.test.lib.hotspot.ir_framework.IRNode.MEMBAR\">Constant Field Values<\/a><\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<\/ul>\n+<\/section>\n+<\/li>\n+<!-- ========= CONSTRUCTOR DETAIL ======== -->\n+<li>\n+<section class=\"constructor-details\" id=\"constructor-detail\">\n+<h2>Constructor Details<\/h2>\n+<ul class=\"member-list\">\n+<li>\n+<section class=\"detail\" id=\"&lt;init&gt;()\">\n+<h3>IRNode<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public<\/span>&nbsp;<span class=\"element-name\">IRNode<\/span>()<\/div>\n+<\/section>\n+<\/li>\n+<\/ul>\n+<\/section>\n+<\/li>\n+<\/ul>\n+<\/section>\n+<!-- ========= END OF CLASS DATA ========= -->\n+<\/main>\n+<\/div>\n+<\/div>\n+<\/body>\n+<\/html>\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/doc\/jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html","additions":1017,"deletions":0,"binary":false,"changes":1017,"status":"added"},{"patch":"@@ -0,0 +1,159 @@\n+<!DOCTYPE HTML>\n+<html lang=\"en\">\n+<head>\n+<!-- Generated by javadoc (17) on Wed Apr 14 13:12:12 CEST 2021 -->\n+<title>IRViolationException<\/title>\n+<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n+<meta http-equiv=\"Content-Type\" content=\"text\/html; charset=utf-8\">\n+<meta name=\"dc.created\" content=\"2021-04-14\">\n+<meta name=\"description\" content=\"declaration: package: jdk.test.lib.hotspot.ir_framework, class: IRViolationException\">\n+<meta name=\"generator\" content=\"javadoc\/ClassWriterImpl\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/..\/..\/..\/..\/stylesheet.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/..\/..\/..\/..\/script-dir\/jquery-ui.min.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/..\/..\/..\/..\/jquery-ui.overrides.css\" title=\"Style\">\n+<script type=\"text\/javascript\" src=\"..\/..\/..\/..\/..\/script.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/..\/..\/..\/..\/script-dir\/jquery-3.5.1.min.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/..\/..\/..\/..\/script-dir\/jquery-ui.min.js\"><\/script>\n+<\/head>\n+<body class=\"class-declaration-page\">\n+<script type=\"text\/javascript\">var evenRowColor = \"even-row-color\";\n+var oddRowColor = \"odd-row-color\";\n+var tableTab = \"table-tab\";\n+var activeTableTab = \"active-table-tab\";\n+var pathtoroot = \"..\/..\/..\/..\/..\/\";\n+loadScripts(document, 'script');<\/script>\n+<noscript>\n+<div>JavaScript is disabled on your browser.<\/div>\n+<\/noscript>\n+<div class=\"flex-box\">\n+<header role=\"banner\" class=\"flex-header\">\n+<nav role=\"navigation\">\n+<!-- ========= START OF TOP NAVBAR ======= -->\n+<div class=\"top-nav\" id=\"navbar-top\">\n+<div class=\"skip-nav\"><a href=\"#skip-navbar-top\" title=\"Skip navigation links\">Skip navigation links<\/a><\/div>\n+<ul id=\"navbar-top-firstrow\" class=\"nav-list\" title=\"Navigation\">\n+<li><a href=\"package-summary.html\">Package<\/a><\/li>\n+<li class=\"nav-bar-cell1-rev\">Class<\/li>\n+<li><a href=\"package-tree.html\">Tree<\/a><\/li>\n+<li><a href=\"..\/..\/..\/..\/..\/index-files\/index-1.html\">Index<\/a><\/li>\n+<li><a href=\"..\/..\/..\/..\/..\/help-doc.html\">Help<\/a><\/li>\n+<\/ul>\n+<\/div>\n+<div class=\"sub-nav\">\n+<div>\n+<ul class=\"sub-nav-list\">\n+<li>Summary:&nbsp;<\/li>\n+<li>Nested&nbsp;|&nbsp;<\/li>\n+<li>Field&nbsp;|&nbsp;<\/li>\n+<li>Constr&nbsp;|&nbsp;<\/li>\n+<li><a href=\"#method-summary\">Method<\/a><\/li>\n+<\/ul>\n+<ul class=\"sub-nav-list\">\n+<li>Detail:&nbsp;<\/li>\n+<li>Field&nbsp;|&nbsp;<\/li>\n+<li>Constr&nbsp;|&nbsp;<\/li>\n+<li><a href=\"#method-detail\">Method<\/a><\/li>\n+<\/ul>\n+<\/div>\n+<div class=\"nav-list-search\"><label for=\"search\">SEARCH:<\/label>\n+<input type=\"text\" id=\"search\" value=\"search\" disabled=\"disabled\">\n+<input type=\"reset\" id=\"reset\" value=\"reset\" disabled=\"disabled\">\n+<\/div>\n+<\/div>\n+<!-- ========= END OF TOP NAVBAR ========= -->\n+<span class=\"skip-nav\" id=\"skip-navbar-top\"><\/span><\/nav>\n+<\/header>\n+<div class=\"flex-content\">\n+<main role=\"main\">\n+<!-- ======== START OF CLASS DATA ======== -->\n+<div class=\"header\">\n+<div class=\"sub-title\"><span class=\"package-label-in-type\">Package<\/span>&nbsp;<a href=\"package-summary.html\">jdk.test.lib.hotspot.ir_framework<\/a><\/div>\n+<h1 title=\"Class IRViolationException\" class=\"title\">Class IRViolationException<\/h1>\n+<\/div>\n+<div class=\"inheritance\" title=\"Inheritance Tree\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html\" title=\"class or interface in java.lang\" class=\"external-link\">java.lang.Object<\/a>\n+<div class=\"inheritance\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Throwable.html\" title=\"class or interface in java.lang\" class=\"external-link\">java.lang.Throwable<\/a>\n+<div class=\"inheritance\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Exception.html\" title=\"class or interface in java.lang\" class=\"external-link\">java.lang.Exception<\/a>\n+<div class=\"inheritance\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/RuntimeException.html\" title=\"class or interface in java.lang\" class=\"external-link\">java.lang.RuntimeException<\/a>\n+<div class=\"inheritance\">jdk.test.lib.hotspot.ir_framework.IRViolationException<\/div>\n+<\/div>\n+<\/div>\n+<\/div>\n+<\/div>\n+<section class=\"description\">\n+<dl class=\"notes\">\n+<dt>All Implemented Interfaces:<\/dt>\n+<dd><code><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/io\/Serializable.html\" title=\"class or interface in java.io\" class=\"external-link\">Serializable<\/a><\/code><\/dd>\n+<\/dl>\n+<hr>\n+<div class=\"type-signature\"><span class=\"modifiers\">public class <\/span><span class=\"element-name type-name-label\">IRViolationException<\/span>\n+<span class=\"extends-implements\">extends <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/RuntimeException.html\" title=\"class or interface in java.lang\" class=\"external-link\">RuntimeException<\/a><\/span><\/div>\n+<div class=\"block\">Exception that is thrown if an <a href=\"IR.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>IR<\/code><\/a> rule\/constraint failed. The exception message contains a detailed list of\n+ all failures, including failing method(s), <code>@IR<\/code> rule(s) (the first <code>@IR<\/code> constraint is rule 1) and the\n+ specific regex(es) that could not be matched.<\/div>\n+<dl class=\"notes\">\n+<dt>See Also:<\/dt>\n+<dd><a href=\"IR.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>IR<\/code><\/a>, \n+<a href=\"Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Test<\/code><\/a>, \n+<a href=\"..\/..\/..\/..\/..\/serialized-form.html#jdk.test.lib.hotspot.ir_framework.IRViolationException\">Serialized Form<\/a><\/dd>\n+<\/dl>\n+<\/section>\n+<section class=\"summary\">\n+<ul class=\"summary-list\">\n+<!-- ========== METHOD SUMMARY =========== -->\n+<li>\n+<section class=\"method-summary\" id=\"method-summary\">\n+<h2>Method Summary<\/h2>\n+<div id=\"method-summary-table\">\n+<div class=\"table-tabs\" role=\"tablist\" aria-orientation=\"horizontal\"><button id=\"method-summary-table-tab0\" role=\"tab\" aria-selected=\"true\" aria-controls=\"method-summary-table.tabpanel\" tabindex=\"0\" onkeydown=\"switchTab(event)\" onclick=\"show('method-summary-table', 'method-summary-table', 3)\" class=\"active-table-tab\">All Methods<\/button><button id=\"method-summary-table-tab2\" role=\"tab\" aria-selected=\"false\" aria-controls=\"method-summary-table.tabpanel\" tabindex=\"-1\" onkeydown=\"switchTab(event)\" onclick=\"show('method-summary-table', 'method-summary-table-tab2', 3)\" class=\"table-tab\">Instance Methods<\/button><button id=\"method-summary-table-tab4\" role=\"tab\" aria-selected=\"false\" aria-controls=\"method-summary-table.tabpanel\" tabindex=\"-1\" onkeydown=\"switchTab(event)\" onclick=\"show('method-summary-table', 'method-summary-table-tab4', 3)\" class=\"table-tab\">Concrete Methods<\/button><\/div>\n+<div id=\"method-summary-table.tabpanel\" role=\"tabpanel\">\n+<div class=\"summary-table three-column-summary\" aria-labelledby=\"method-summary-table-tab0\">\n+<div class=\"table-header col-first\">Modifier and Type<\/div>\n+<div class=\"table-header col-second\">Method<\/div>\n+<div class=\"table-header col-last\">Description<\/div>\n+<div class=\"col-first even-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\"><code><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second even-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\"><code><a href=\"#getExceptionInfo()\" class=\"member-name-link\">getExceptionInfo<\/a>()<\/code><\/div>\n+<div class=\"col-last even-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\">\n+<div class=\"block\">Get some more detailed information about the violated IR rule(s) and how to reproduce it.<\/div>\n+<\/div>\n+<\/div>\n+<\/div>\n+<\/div>\n+<div class=\"inherited-list\">\n+<h3 id=\"methods-inherited-from-class-java.lang.Throwable\">Methods inherited from class&nbsp;java.lang.<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Throwable.html\" title=\"class or interface in java.lang\" class=\"external-link\">Throwable<\/a><\/h3>\n+<code><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Throwable.html#addSuppressed(java.lang.Throwable)\" title=\"class or interface in java.lang\" class=\"external-link\">addSuppressed<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Throwable.html#fillInStackTrace()\" title=\"class or interface in java.lang\" class=\"external-link\">fillInStackTrace<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Throwable.html#getCause()\" title=\"class or interface in java.lang\" class=\"external-link\">getCause<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Throwable.html#getLocalizedMessage()\" title=\"class or interface in java.lang\" class=\"external-link\">getLocalizedMessage<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Throwable.html#getMessage()\" title=\"class or interface in java.lang\" class=\"external-link\">getMessage<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Throwable.html#getStackTrace()\" title=\"class or interface in java.lang\" class=\"external-link\">getStackTrace<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Throwable.html#getSuppressed()\" title=\"class or interface in java.lang\" class=\"external-link\">getSuppressed<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Throwable.html#initCause(java.lang.Throwable)\" title=\"class or interface in java.lang\" class=\"external-link\">initCause<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Throwable.html#printStackTrace()\" title=\"class or interface in java.lang\" class=\"external-link\">printStackTrace<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Throwable.html#printStackTrace(java.io.PrintStream)\" title=\"class or interface in java.lang\" class=\"external-link\">printStackTrace<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Throwable.html#printStackTrace(java.io.PrintWriter)\" title=\"class or interface in java.lang\" class=\"external-link\">printStackTrace<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Throwable.html#setStackTrace(java.lang.StackTraceElement%5B%5D)\" title=\"class or interface in java.lang\" class=\"external-link\">setStackTrace<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Throwable.html#toString()\" title=\"class or interface in java.lang\" class=\"external-link\">toString<\/a><\/code><\/div>\n+<div class=\"inherited-list\">\n+<h3 id=\"methods-inherited-from-class-java.lang.Object\">Methods inherited from class&nbsp;java.lang.<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html\" title=\"class or interface in java.lang\" class=\"external-link\">Object<\/a><\/h3>\n+<code><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#clone()\" title=\"class or interface in java.lang\" class=\"external-link\">clone<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#equals(java.lang.Object)\" title=\"class or interface in java.lang\" class=\"external-link\">equals<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#finalize()\" title=\"class or interface in java.lang\" class=\"external-link\">finalize<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#getClass()\" title=\"class or interface in java.lang\" class=\"external-link\">getClass<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#hashCode()\" title=\"class or interface in java.lang\" class=\"external-link\">hashCode<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#notify()\" title=\"class or interface in java.lang\" class=\"external-link\">notify<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#notifyAll()\" title=\"class or interface in java.lang\" class=\"external-link\">notifyAll<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#wait()\" title=\"class or interface in java.lang\" class=\"external-link\">wait<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#wait(long)\" title=\"class or interface in java.lang\" class=\"external-link\">wait<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#wait(long,int)\" title=\"class or interface in java.lang\" class=\"external-link\">wait<\/a><\/code><\/div>\n+<\/section>\n+<\/li>\n+<\/ul>\n+<\/section>\n+<section class=\"details\">\n+<ul class=\"details-list\">\n+<!-- ============ METHOD DETAIL ========== -->\n+<li>\n+<section class=\"method-details\" id=\"method-detail\">\n+<h2>Method Details<\/h2>\n+<ul class=\"member-list\">\n+<li>\n+<section class=\"detail\" id=\"getExceptionInfo()\">\n+<h3>getExceptionInfo<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public<\/span>&nbsp;<span class=\"return-type\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/span>&nbsp;<span class=\"element-name\">getExceptionInfo<\/span>()<\/div>\n+<div class=\"block\">Get some more detailed information about the violated IR rule(s) and how to reproduce it.<\/div>\n+<dl class=\"notes\">\n+<dt>Returns:<\/dt>\n+<dd>a formatted string containing information about the violated IR rule(s) and how to reproduce it.<\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<\/ul>\n+<\/section>\n+<\/li>\n+<\/ul>\n+<\/section>\n+<!-- ========= END OF CLASS DATA ========= -->\n+<\/main>\n+<\/div>\n+<\/div>\n+<\/body>\n+<\/html>\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/doc\/jdk\/test\/lib\/hotspot\/ir_framework\/IRViolationException.html","additions":159,"deletions":0,"binary":false,"changes":159,"status":"added"},{"patch":"@@ -0,0 +1,115 @@\n+<!DOCTYPE HTML>\n+<html lang=\"en\">\n+<head>\n+<!-- Generated by javadoc (17) on Wed Apr 14 13:12:12 CEST 2021 -->\n+<title>IRs<\/title>\n+<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n+<meta http-equiv=\"Content-Type\" content=\"text\/html; charset=utf-8\">\n+<meta name=\"dc.created\" content=\"2021-04-14\">\n+<meta name=\"description\" content=\"declaration: package: jdk.test.lib.hotspot.ir_framework, annotation type: IRs\">\n+<meta name=\"generator\" content=\"javadoc\/ClassWriterImpl\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/..\/..\/..\/..\/stylesheet.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/..\/..\/..\/..\/script-dir\/jquery-ui.min.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/..\/..\/..\/..\/jquery-ui.overrides.css\" title=\"Style\">\n+<script type=\"text\/javascript\" src=\"..\/..\/..\/..\/..\/script.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/..\/..\/..\/..\/script-dir\/jquery-3.5.1.min.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/..\/..\/..\/..\/script-dir\/jquery-ui.min.js\"><\/script>\n+<\/head>\n+<body class=\"class-declaration-page\">\n+<script type=\"text\/javascript\">var pathtoroot = \"..\/..\/..\/..\/..\/\";\n+loadScripts(document, 'script');<\/script>\n+<noscript>\n+<div>JavaScript is disabled on your browser.<\/div>\n+<\/noscript>\n+<div class=\"flex-box\">\n+<header role=\"banner\" class=\"flex-header\">\n+<nav role=\"navigation\">\n+<!-- ========= START OF TOP NAVBAR ======= -->\n+<div class=\"top-nav\" id=\"navbar-top\">\n+<div class=\"skip-nav\"><a href=\"#skip-navbar-top\" title=\"Skip navigation links\">Skip navigation links<\/a><\/div>\n+<ul id=\"navbar-top-firstrow\" class=\"nav-list\" title=\"Navigation\">\n+<li><a href=\"package-summary.html\">Package<\/a><\/li>\n+<li class=\"nav-bar-cell1-rev\">Class<\/li>\n+<li><a href=\"package-tree.html\">Tree<\/a><\/li>\n+<li><a href=\"..\/..\/..\/..\/..\/index-files\/index-1.html\">Index<\/a><\/li>\n+<li><a href=\"..\/..\/..\/..\/..\/help-doc.html\">Help<\/a><\/li>\n+<\/ul>\n+<\/div>\n+<div class=\"sub-nav\">\n+<div>\n+<ul class=\"sub-nav-list\">\n+<li>Summary:&nbsp;<\/li>\n+<li>Field&nbsp;|&nbsp;<\/li>\n+<li><a href=\"#annotation-interface-required-element-summary\">Required<\/a>&nbsp;|&nbsp;<\/li>\n+<li>Optional<\/li>\n+<\/ul>\n+<ul class=\"sub-nav-list\">\n+<li>Detail:&nbsp;<\/li>\n+<li>Field&nbsp;|&nbsp;<\/li>\n+<li><a href=\"#annotation-interface-element-detail\">Element<\/a><\/li>\n+<\/ul>\n+<\/div>\n+<div class=\"nav-list-search\"><label for=\"search\">SEARCH:<\/label>\n+<input type=\"text\" id=\"search\" value=\"search\" disabled=\"disabled\">\n+<input type=\"reset\" id=\"reset\" value=\"reset\" disabled=\"disabled\">\n+<\/div>\n+<\/div>\n+<!-- ========= END OF TOP NAVBAR ========= -->\n+<span class=\"skip-nav\" id=\"skip-navbar-top\"><\/span><\/nav>\n+<\/header>\n+<div class=\"flex-content\">\n+<main role=\"main\">\n+<!-- ======== START OF CLASS DATA ======== -->\n+<div class=\"header\">\n+<div class=\"sub-title\"><span class=\"package-label-in-type\">Package<\/span>&nbsp;<a href=\"package-summary.html\">jdk.test.lib.hotspot.ir_framework<\/a><\/div>\n+<h1 title=\"Annotation Interface IRs\" class=\"title\">Annotation Interface IRs<\/h1>\n+<\/div>\n+<section class=\"description\">\n+<hr>\n+<div class=\"type-signature\"><span class=\"annotations\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/annotation\/Retention.html\" title=\"class or interface in java.lang.annotation\" class=\"external-link\">@Retention<\/a>(<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/annotation\/RetentionPolicy.html#RUNTIME\" title=\"class or interface in java.lang.annotation\" class=\"external-link\">RUNTIME<\/a>)\n+<\/span><span class=\"modifiers\">public @interface <\/span><span class=\"element-name type-name-label\">IRs<\/span><\/div>\n+<div class=\"block\">Annotation to allow to specify multiple <a href=\"IR.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@IR<\/code><\/a> annotations at a <a href=\"Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@Test<\/code><\/a> method.<\/div>\n+<\/section>\n+<section class=\"summary\">\n+<ul class=\"summary-list\">\n+<!-- =========== ANNOTATION INTERFACE REQUIRED MEMBER SUMMARY =========== -->\n+<li>\n+<section class=\"member-summary\" id=\"annotation-interface-required-element-summary\">\n+<h2>Required Element Summary<\/h2>\n+<div class=\"caption\"><span>Required Elements<\/span><\/div>\n+<div class=\"summary-table three-column-summary\">\n+<div class=\"table-header col-first\">Modifier and Type<\/div>\n+<div class=\"table-header col-second\">Required Element<\/div>\n+<div class=\"table-header col-last\">Description<\/div>\n+<div class=\"col-first even-row-color\"><code><a href=\"IR.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\">IR<\/a>[]<\/code><\/div>\n+<div class=\"col-second even-row-color\"><code><a href=\"#value()\" class=\"member-name-link\">value<\/a><\/code><\/div>\n+<div class=\"col-last even-row-color\">&nbsp;<\/div>\n+<\/div>\n+<\/section>\n+<\/li>\n+<\/ul>\n+<\/section>\n+<section class=\"details\" id=\"annotation-interface-element-detail\">\n+<ul class=\"details-list\">\n+<!-- ============ ANNOTATION INTERFACE MEMBER DETAIL =========== -->\n+<li>\n+<section class=\"member-details\">\n+<h2>Element Details<\/h2>\n+<ul class=\"member-list\">\n+<li>\n+<section class=\"detail\" id=\"value()\">\n+<h3>value<\/h3>\n+<div class=\"member-signature\"><span class=\"return-type\"><a href=\"IR.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\">IR<\/a>[]<\/span>&nbsp;<span class=\"element-name\">value<\/span><\/div>\n+<\/section>\n+<\/li>\n+<\/ul>\n+<\/section>\n+<\/li>\n+<\/ul>\n+<\/section>\n+<!-- ========= END OF CLASS DATA ========= -->\n+<\/main>\n+<\/div>\n+<\/div>\n+<\/body>\n+<\/html>\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/doc\/jdk\/test\/lib\/hotspot\/ir_framework\/IRs.html","additions":115,"deletions":0,"binary":false,"changes":115,"status":"added"},{"patch":"@@ -0,0 +1,114 @@\n+<!DOCTYPE HTML>\n+<html lang=\"en\">\n+<head>\n+<!-- Generated by javadoc (17) on Wed Apr 14 13:12:12 CEST 2021 -->\n+<title>NoTestsRunException<\/title>\n+<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n+<meta http-equiv=\"Content-Type\" content=\"text\/html; charset=utf-8\">\n+<meta name=\"dc.created\" content=\"2021-04-14\">\n+<meta name=\"description\" content=\"declaration: package: jdk.test.lib.hotspot.ir_framework, class: NoTestsRunException\">\n+<meta name=\"generator\" content=\"javadoc\/ClassWriterImpl\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/..\/..\/..\/..\/stylesheet.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/..\/..\/..\/..\/script-dir\/jquery-ui.min.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/..\/..\/..\/..\/jquery-ui.overrides.css\" title=\"Style\">\n+<script type=\"text\/javascript\" src=\"..\/..\/..\/..\/..\/script.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/..\/..\/..\/..\/script-dir\/jquery-3.5.1.min.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/..\/..\/..\/..\/script-dir\/jquery-ui.min.js\"><\/script>\n+<\/head>\n+<body class=\"class-declaration-page\">\n+<script type=\"text\/javascript\">var pathtoroot = \"..\/..\/..\/..\/..\/\";\n+loadScripts(document, 'script');<\/script>\n+<noscript>\n+<div>JavaScript is disabled on your browser.<\/div>\n+<\/noscript>\n+<div class=\"flex-box\">\n+<header role=\"banner\" class=\"flex-header\">\n+<nav role=\"navigation\">\n+<!-- ========= START OF TOP NAVBAR ======= -->\n+<div class=\"top-nav\" id=\"navbar-top\">\n+<div class=\"skip-nav\"><a href=\"#skip-navbar-top\" title=\"Skip navigation links\">Skip navigation links<\/a><\/div>\n+<ul id=\"navbar-top-firstrow\" class=\"nav-list\" title=\"Navigation\">\n+<li><a href=\"package-summary.html\">Package<\/a><\/li>\n+<li class=\"nav-bar-cell1-rev\">Class<\/li>\n+<li><a href=\"package-tree.html\">Tree<\/a><\/li>\n+<li><a href=\"..\/..\/..\/..\/..\/index-files\/index-1.html\">Index<\/a><\/li>\n+<li><a href=\"..\/..\/..\/..\/..\/help-doc.html\">Help<\/a><\/li>\n+<\/ul>\n+<\/div>\n+<div class=\"sub-nav\">\n+<div>\n+<ul class=\"sub-nav-list\">\n+<li>Summary:&nbsp;<\/li>\n+<li>Nested&nbsp;|&nbsp;<\/li>\n+<li>Field&nbsp;|&nbsp;<\/li>\n+<li>Constr&nbsp;|&nbsp;<\/li>\n+<li><a href=\"#method-summary\">Method<\/a><\/li>\n+<\/ul>\n+<ul class=\"sub-nav-list\">\n+<li>Detail:&nbsp;<\/li>\n+<li>Field&nbsp;|&nbsp;<\/li>\n+<li>Constr&nbsp;|&nbsp;<\/li>\n+<li>Method<\/li>\n+<\/ul>\n+<\/div>\n+<div class=\"nav-list-search\"><label for=\"search\">SEARCH:<\/label>\n+<input type=\"text\" id=\"search\" value=\"search\" disabled=\"disabled\">\n+<input type=\"reset\" id=\"reset\" value=\"reset\" disabled=\"disabled\">\n+<\/div>\n+<\/div>\n+<!-- ========= END OF TOP NAVBAR ========= -->\n+<span class=\"skip-nav\" id=\"skip-navbar-top\"><\/span><\/nav>\n+<\/header>\n+<div class=\"flex-content\">\n+<main role=\"main\">\n+<!-- ======== START OF CLASS DATA ======== -->\n+<div class=\"header\">\n+<div class=\"sub-title\"><span class=\"package-label-in-type\">Package<\/span>&nbsp;<a href=\"package-summary.html\">jdk.test.lib.hotspot.ir_framework<\/a><\/div>\n+<h1 title=\"Class NoTestsRunException\" class=\"title\">Class NoTestsRunException<\/h1>\n+<\/div>\n+<div class=\"inheritance\" title=\"Inheritance Tree\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html\" title=\"class or interface in java.lang\" class=\"external-link\">java.lang.Object<\/a>\n+<div class=\"inheritance\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Throwable.html\" title=\"class or interface in java.lang\" class=\"external-link\">java.lang.Throwable<\/a>\n+<div class=\"inheritance\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Exception.html\" title=\"class or interface in java.lang\" class=\"external-link\">java.lang.Exception<\/a>\n+<div class=\"inheritance\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/RuntimeException.html\" title=\"class or interface in java.lang\" class=\"external-link\">java.lang.RuntimeException<\/a>\n+<div class=\"inheritance\">jdk.test.lib.hotspot.ir_framework.NoTestsRunException<\/div>\n+<\/div>\n+<\/div>\n+<\/div>\n+<\/div>\n+<section class=\"description\">\n+<dl class=\"notes\">\n+<dt>All Implemented Interfaces:<\/dt>\n+<dd><code><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/io\/Serializable.html\" title=\"class or interface in java.io\" class=\"external-link\">Serializable<\/a><\/code><\/dd>\n+<\/dl>\n+<hr>\n+<div class=\"type-signature\"><span class=\"modifiers\">public class <\/span><span class=\"element-name type-name-label\">NoTestsRunException<\/span>\n+<span class=\"extends-implements\">extends <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/RuntimeException.html\" title=\"class or interface in java.lang\" class=\"external-link\">RuntimeException<\/a><\/span><\/div>\n+<div class=\"block\">Exception that is thrown by the test VM if no tests are run as a result of specifying <code>-DTest<\/code> and\/or\n+ <code>-DExclude<\/code> defining an empty set with the used test VM flags.<\/div>\n+<dl class=\"notes\">\n+<dt>See Also:<\/dt>\n+<dd><a href=\"..\/..\/..\/..\/..\/serialized-form.html#jdk.test.lib.hotspot.ir_framework.NoTestsRunException\">Serialized Form<\/a><\/dd>\n+<\/dl>\n+<\/section>\n+<section class=\"summary\">\n+<ul class=\"summary-list\">\n+<!-- ========== METHOD SUMMARY =========== -->\n+<li>\n+<section class=\"method-summary\" id=\"method-summary\">\n+<h2>Method Summary<\/h2>\n+<div class=\"inherited-list\">\n+<h3 id=\"methods-inherited-from-class-java.lang.Throwable\">Methods inherited from class&nbsp;java.lang.<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Throwable.html\" title=\"class or interface in java.lang\" class=\"external-link\">Throwable<\/a><\/h3>\n+<code><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Throwable.html#addSuppressed(java.lang.Throwable)\" title=\"class or interface in java.lang\" class=\"external-link\">addSuppressed<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Throwable.html#fillInStackTrace()\" title=\"class or interface in java.lang\" class=\"external-link\">fillInStackTrace<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Throwable.html#getCause()\" title=\"class or interface in java.lang\" class=\"external-link\">getCause<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Throwable.html#getLocalizedMessage()\" title=\"class or interface in java.lang\" class=\"external-link\">getLocalizedMessage<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Throwable.html#getMessage()\" title=\"class or interface in java.lang\" class=\"external-link\">getMessage<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Throwable.html#getStackTrace()\" title=\"class or interface in java.lang\" class=\"external-link\">getStackTrace<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Throwable.html#getSuppressed()\" title=\"class or interface in java.lang\" class=\"external-link\">getSuppressed<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Throwable.html#initCause(java.lang.Throwable)\" title=\"class or interface in java.lang\" class=\"external-link\">initCause<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Throwable.html#printStackTrace()\" title=\"class or interface in java.lang\" class=\"external-link\">printStackTrace<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Throwable.html#printStackTrace(java.io.PrintStream)\" title=\"class or interface in java.lang\" class=\"external-link\">printStackTrace<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Throwable.html#printStackTrace(java.io.PrintWriter)\" title=\"class or interface in java.lang\" class=\"external-link\">printStackTrace<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Throwable.html#setStackTrace(java.lang.StackTraceElement%5B%5D)\" title=\"class or interface in java.lang\" class=\"external-link\">setStackTrace<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Throwable.html#toString()\" title=\"class or interface in java.lang\" class=\"external-link\">toString<\/a><\/code><\/div>\n+<div class=\"inherited-list\">\n+<h3 id=\"methods-inherited-from-class-java.lang.Object\">Methods inherited from class&nbsp;java.lang.<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html\" title=\"class or interface in java.lang\" class=\"external-link\">Object<\/a><\/h3>\n+<code><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#clone()\" title=\"class or interface in java.lang\" class=\"external-link\">clone<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#equals(java.lang.Object)\" title=\"class or interface in java.lang\" class=\"external-link\">equals<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#finalize()\" title=\"class or interface in java.lang\" class=\"external-link\">finalize<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#getClass()\" title=\"class or interface in java.lang\" class=\"external-link\">getClass<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#hashCode()\" title=\"class or interface in java.lang\" class=\"external-link\">hashCode<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#notify()\" title=\"class or interface in java.lang\" class=\"external-link\">notify<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#notifyAll()\" title=\"class or interface in java.lang\" class=\"external-link\">notifyAll<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#wait()\" title=\"class or interface in java.lang\" class=\"external-link\">wait<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#wait(long)\" title=\"class or interface in java.lang\" class=\"external-link\">wait<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#wait(long,int)\" title=\"class or interface in java.lang\" class=\"external-link\">wait<\/a><\/code><\/div>\n+<\/section>\n+<\/li>\n+<\/ul>\n+<\/section>\n+<!-- ========= END OF CLASS DATA ========= -->\n+<\/main>\n+<\/div>\n+<\/div>\n+<\/body>\n+<\/html>\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/doc\/jdk\/test\/lib\/hotspot\/ir_framework\/NoTestsRunException.html","additions":114,"deletions":0,"binary":false,"changes":114,"status":"added"},{"patch":"@@ -0,0 +1,221 @@\n+<!DOCTYPE HTML>\n+<html lang=\"en\">\n+<head>\n+<!-- Generated by javadoc (17) on Wed Apr 14 13:12:12 CEST 2021 -->\n+<title>Run<\/title>\n+<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n+<meta http-equiv=\"Content-Type\" content=\"text\/html; charset=utf-8\">\n+<meta name=\"dc.created\" content=\"2021-04-14\">\n+<meta name=\"description\" content=\"declaration: package: jdk.test.lib.hotspot.ir_framework, annotation type: Run\">\n+<meta name=\"generator\" content=\"javadoc\/ClassWriterImpl\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/..\/..\/..\/..\/stylesheet.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/..\/..\/..\/..\/script-dir\/jquery-ui.min.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/..\/..\/..\/..\/jquery-ui.overrides.css\" title=\"Style\">\n+<script type=\"text\/javascript\" src=\"..\/..\/..\/..\/..\/script.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/..\/..\/..\/..\/script-dir\/jquery-3.5.1.min.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/..\/..\/..\/..\/script-dir\/jquery-ui.min.js\"><\/script>\n+<\/head>\n+<body class=\"class-declaration-page\">\n+<script type=\"text\/javascript\">var pathtoroot = \"..\/..\/..\/..\/..\/\";\n+loadScripts(document, 'script');<\/script>\n+<noscript>\n+<div>JavaScript is disabled on your browser.<\/div>\n+<\/noscript>\n+<div class=\"flex-box\">\n+<header role=\"banner\" class=\"flex-header\">\n+<nav role=\"navigation\">\n+<!-- ========= START OF TOP NAVBAR ======= -->\n+<div class=\"top-nav\" id=\"navbar-top\">\n+<div class=\"skip-nav\"><a href=\"#skip-navbar-top\" title=\"Skip navigation links\">Skip navigation links<\/a><\/div>\n+<ul id=\"navbar-top-firstrow\" class=\"nav-list\" title=\"Navigation\">\n+<li><a href=\"package-summary.html\">Package<\/a><\/li>\n+<li class=\"nav-bar-cell1-rev\">Class<\/li>\n+<li><a href=\"package-tree.html\">Tree<\/a><\/li>\n+<li><a href=\"..\/..\/..\/..\/..\/index-files\/index-1.html\">Index<\/a><\/li>\n+<li><a href=\"..\/..\/..\/..\/..\/help-doc.html\">Help<\/a><\/li>\n+<\/ul>\n+<\/div>\n+<div class=\"sub-nav\">\n+<div>\n+<ul class=\"sub-nav-list\">\n+<li>Summary:&nbsp;<\/li>\n+<li>Field&nbsp;|&nbsp;<\/li>\n+<li><a href=\"#annotation-interface-required-element-summary\">Required<\/a>&nbsp;|&nbsp;<\/li>\n+<li><a href=\"#annotation-interface-optional-element-summary\">Optional<\/a><\/li>\n+<\/ul>\n+<ul class=\"sub-nav-list\">\n+<li>Detail:&nbsp;<\/li>\n+<li>Field&nbsp;|&nbsp;<\/li>\n+<li><a href=\"#annotation-interface-element-detail\">Element<\/a><\/li>\n+<\/ul>\n+<\/div>\n+<div class=\"nav-list-search\"><label for=\"search\">SEARCH:<\/label>\n+<input type=\"text\" id=\"search\" value=\"search\" disabled=\"disabled\">\n+<input type=\"reset\" id=\"reset\" value=\"reset\" disabled=\"disabled\">\n+<\/div>\n+<\/div>\n+<!-- ========= END OF TOP NAVBAR ========= -->\n+<span class=\"skip-nav\" id=\"skip-navbar-top\"><\/span><\/nav>\n+<\/header>\n+<div class=\"flex-content\">\n+<main role=\"main\">\n+<!-- ======== START OF CLASS DATA ======== -->\n+<div class=\"header\">\n+<div class=\"sub-title\"><span class=\"package-label-in-type\">Package<\/span>&nbsp;<a href=\"package-summary.html\">jdk.test.lib.hotspot.ir_framework<\/a><\/div>\n+<h1 title=\"Annotation Interface Run\" class=\"title\">Annotation Interface Run<\/h1>\n+<\/div>\n+<section class=\"description\">\n+<hr>\n+<div class=\"type-signature\"><span class=\"annotations\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/annotation\/Retention.html\" title=\"class or interface in java.lang.annotation\" class=\"external-link\">@Retention<\/a>(<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/annotation\/RetentionPolicy.html#RUNTIME\" title=\"class or interface in java.lang.annotation\" class=\"external-link\">RUNTIME<\/a>)\n+<\/span><span class=\"modifiers\">public @interface <\/span><span class=\"element-name type-name-label\">Run<\/span><\/div>\n+<div class=\"block\">Annotation for a run method of a <b>custom run test<\/b>.\n+\n+ <p>\n+ Let <code>t<\/code> be a test method specifying the <a href=\"Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@Test<\/code><\/a> annotation and <code>r<\/code> be a run method specifying\n+ the <code>@Run(test = \"t\")<\/code> annotation. These two methods represent a so-called <i>custom run test<\/i>. The only\n+ difference to a <i>base test<\/i> (see <a href=\"Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Test<\/code><\/a>) is that the framework will not invoke the test method <code>t<\/code>\n+ but instead the run method <code>r<\/code> which is then responsible to invoke <code>t<\/code> in any way and optionally do any\n+ additional verification (e.g. of the return value). If <code>r<\/code> does not specify <a href=\"RunMode.html#STANDALONE\"><code>RunMode.STANDALONE<\/code><\/a> as\n+ <a href=\"#mode()\"><code>mode()<\/code><\/a> property, the framework does the following, similar as for <i>base tests<\/i>:\n+ <ol>\n+     <li><p>The framework warms <code>r<\/code> up by invoking it for a predefined number of iterations (default: 2000)\n+            or any number specified by an additional <a href=\"Warmup.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Warmup<\/code><\/a> annotation at the run method <code>r<\/code> or by using\n+            <a href=\"TestFramework.html#setDefaultWarmup(int)\"><code>TestFramework.setDefaultWarmup(int)<\/code><\/a> (could also be 0 which skips the warm-up completely which is\n+            similar to simulating <code>-Xcomp<\/code>). More information about the warm-up in general can be found in\n+            <a href=\"Warmup.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@Warmup<\/code><\/a>.<\/li>\n+     <li><p>After the warm-up, the framework compiles the test method <code>t<\/code> at the specified compilation level set by\n+            <a href=\"Test.html#compLevel()\"><code>Test.compLevel()<\/code><\/a> (default <a href=\"CompLevel.html#ANY\"><code>CompLevel.ANY<\/code><\/a> will pick the highest available level which is usually\n+            <a href=\"CompLevel.html#C2\"><code>CompLevel.C2<\/code><\/a>).<\/li>\n+     <li><p>The framework invokes the run method <code>r<\/code> one more time to check the compilation.<\/li>\n+     <li><p>The framework checks any specified <a href=\"IR.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@IR<\/code><\/a> constraints at the test method <code>t<\/code>.\n+            More information about IR matching can be found at <a href=\"IR.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>IR<\/code><\/a>.<\/li>\n+ <\/ol>\n+\n+ <p>\n+  If <code>r<\/code> specifies <a href=\"RunMode.html#STANDALONE\"><code>RunMode.STANDALONE<\/code><\/a> as <a href=\"#mode()\"><code>mode()<\/code><\/a> property, the framework gives complete\n+  control to the run method <code>r<\/code>:\n+ <ol>\n+     <li><p>The framework invokes the run method <code>r<\/code> only one time without any warm-up or compilation of\n+            <code>t<\/code> (<a href=\"Warmup.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@Warmup<\/code><\/a> is not allowed at <code>r<\/code> in this case).<\/li>\n+     <li><p>After this single invocation, the framework directly checks any specified <a href=\"IR.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>IR<\/code><\/a> constraints at the test\n+            method <code>t<\/code>. The run method <code>r<\/code> needs to make sure to reliably trigger a C2 compilation. Otherwise,\n+            IR matching will fail. More information about IR matching can be found at <a href=\"IR.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>IR<\/code><\/a>.<\/li>\n+ <\/ol>\n+\n+ <p>\n+ The test method <code>t<\/code> and run method <code>r<\/code> have the following properties:\n+ <ul>\n+     <li><p><code>t<\/code> can specify any parameter or return type except <a href=\"AbstractInfo.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\"><code>AbstractInfo<\/code><\/a> or any of its subclasses.<\/li>\n+     <li><p><code>t<\/code> is not inlined.\n+     <li><p><code>r<\/code> is not compiled nor inlined.\n+     <li><p><code>r<\/code> is responsible to invoke <code>t<\/code> in any way (once, multiple times or even skipping on some\n+                      invocations of <code>r<\/code>).\n+     <li><p><code>r<\/code> can specify the following method parameter combinations:\n+     <ul>\n+         <li><p>void<\/li>\n+         <li><p>One parameter: <a href=\"RunInfo.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\"><code>RunInfo<\/code><\/a> which provides some information about <code>t<\/code> and utility methods.<\/li>\n+         <li><p>Any other combination will result in a <a href=\"TestFormatException.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\"><code>TestFormatException<\/code><\/a>.\n+     <\/ul>\n+     <li><p><code>t<\/code> and <code>r<\/code> must be part of the test class. Using <code>@Run<\/code> and <code>@Test<\/code> in nested or\n+             other helper classes is not allowed.<\/li>\n+     <li><p><code>t<\/code> and <code>r<\/code> cannot specify any helper-method-specific compile command annotations\n+            (<a href=\"ForceCompile.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@ForceCompile<\/code><\/a>, <a href=\"DontCompile.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@DontCompile<\/code><\/a>, <a href=\"ForceInline.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@ForceInline<\/code><\/a>,\n+            <a href=\"DontInline.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@DontInline<\/code><\/a>).<\/li>\n+ <\/ul>\n+\n+ <p>\n+ Examples on how to write custom run tests can be found in <code>CustomRunTestExample<\/code>\n+ and also as part of the internal testing in the package <code>jdk.test.lib.hotspot.ir_framework.tests<\/code>.<\/div>\n+<dl class=\"notes\">\n+<dt>See Also:<\/dt>\n+<dd><a href=\"Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Test<\/code><\/a>, \n+<a href=\"RunInfo.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\"><code>RunInfo<\/code><\/a>, \n+<a href=\"RunMode.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\"><code>RunMode<\/code><\/a><\/dd>\n+<\/dl>\n+<\/section>\n+<section class=\"summary\">\n+<ul class=\"summary-list\">\n+<!-- =========== ANNOTATION INTERFACE REQUIRED MEMBER SUMMARY =========== -->\n+<li>\n+<section class=\"member-summary\" id=\"annotation-interface-required-element-summary\">\n+<h2>Required Element Summary<\/h2>\n+<div class=\"caption\"><span>Required Elements<\/span><\/div>\n+<div class=\"summary-table three-column-summary\">\n+<div class=\"table-header col-first\">Modifier and Type<\/div>\n+<div class=\"table-header col-second\">Required Element<\/div>\n+<div class=\"table-header col-last\">Description<\/div>\n+<div class=\"col-first even-row-color\"><code><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a>[]<\/code><\/div>\n+<div class=\"col-second even-row-color\"><code><a href=\"#test()\" class=\"member-name-link\">test<\/a><\/code><\/div>\n+<div class=\"col-last even-row-color\">\n+<div class=\"block\">The associated <a href=\"Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@Test<\/code><\/a> methods (one or more) for for this <code>@Run<\/code> annotated run method.<\/div>\n+<\/div>\n+<\/div>\n+<\/section>\n+<\/li>\n+<!-- =========== ANNOTATION INTERFACE OPTIONAL MEMBER SUMMARY =========== -->\n+<li>\n+<section class=\"member-summary\" id=\"annotation-interface-optional-element-summary\">\n+<h2>Optional Element Summary<\/h2>\n+<div class=\"caption\"><span>Optional Elements<\/span><\/div>\n+<div class=\"summary-table three-column-summary\">\n+<div class=\"table-header col-first\">Modifier and Type<\/div>\n+<div class=\"table-header col-second\">Optional Element<\/div>\n+<div class=\"table-header col-last\">Description<\/div>\n+<div class=\"col-first even-row-color\"><code><a href=\"RunMode.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">RunMode<\/a><\/code><\/div>\n+<div class=\"col-second even-row-color\"><code><a href=\"#mode()\" class=\"member-name-link\">mode<\/a><\/code><\/div>\n+<div class=\"col-last even-row-color\">\n+<div class=\"block\">The mode of this custom run test.<\/div>\n+<\/div>\n+<\/div>\n+<\/section>\n+<\/li>\n+<\/ul>\n+<\/section>\n+<section class=\"details\" id=\"annotation-interface-element-detail\">\n+<ul class=\"details-list\">\n+<!-- ============ ANNOTATION INTERFACE MEMBER DETAIL =========== -->\n+<li>\n+<section class=\"member-details\">\n+<h2>Element Details<\/h2>\n+<ul class=\"member-list\">\n+<li>\n+<section class=\"detail\" id=\"test()\">\n+<h3>test<\/h3>\n+<div class=\"member-signature\"><span class=\"return-type\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a>[]<\/span>&nbsp;<span class=\"element-name\">test<\/span><\/div>\n+<div class=\"block\">The associated <a href=\"Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@Test<\/code><\/a> methods (one or more) for for this <code>@Run<\/code> annotated run method.\n+ The framework directly invokes the run method instead of the associated <code>@Test<\/code> methods.<\/div>\n+<\/section>\n+<\/li>\n+<\/ul>\n+<\/section>\n+<\/li>\n+<!-- ============ ANNOTATION INTERFACE MEMBER DETAIL =========== -->\n+<li>\n+<section class=\"member-details\">\n+<ul class=\"member-list\">\n+<li>\n+<section class=\"detail\" id=\"mode()\">\n+<h3>mode<\/h3>\n+<div class=\"member-signature\"><span class=\"return-type\"><a href=\"RunMode.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">RunMode<\/a><\/span>&nbsp;<span class=\"element-name\">mode<\/span><\/div>\n+<div class=\"block\">The mode of this custom run test.<\/div>\n+<dl class=\"notes\">\n+<dt>See Also:<\/dt>\n+<dd><a href=\"RunMode.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\"><code>RunMode<\/code><\/a><\/dd>\n+<\/dl>\n+<dl class=\"notes\">\n+<dt>Default:<\/dt>\n+<dd>NORMAL<\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<\/ul>\n+<\/section>\n+<\/li>\n+<\/ul>\n+<\/section>\n+<!-- ========= END OF CLASS DATA ========= -->\n+<\/main>\n+<\/div>\n+<\/div>\n+<\/body>\n+<\/html>\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/doc\/jdk\/test\/lib\/hotspot\/ir_framework\/Run.html","additions":221,"deletions":0,"binary":false,"changes":221,"status":"added"},{"patch":"@@ -0,0 +1,372 @@\n+<!DOCTYPE HTML>\n+<html lang=\"en\">\n+<head>\n+<!-- Generated by javadoc (17) on Wed Apr 14 13:12:12 CEST 2021 -->\n+<title>RunInfo<\/title>\n+<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n+<meta http-equiv=\"Content-Type\" content=\"text\/html; charset=utf-8\">\n+<meta name=\"dc.created\" content=\"2021-04-14\">\n+<meta name=\"description\" content=\"declaration: package: jdk.test.lib.hotspot.ir_framework, class: RunInfo\">\n+<meta name=\"generator\" content=\"javadoc\/ClassWriterImpl\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/..\/..\/..\/..\/stylesheet.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/..\/..\/..\/..\/script-dir\/jquery-ui.min.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/..\/..\/..\/..\/jquery-ui.overrides.css\" title=\"Style\">\n+<script type=\"text\/javascript\" src=\"..\/..\/..\/..\/..\/script.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/..\/..\/..\/..\/script-dir\/jquery-3.5.1.min.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/..\/..\/..\/..\/script-dir\/jquery-ui.min.js\"><\/script>\n+<\/head>\n+<body class=\"class-declaration-page\">\n+<script type=\"text\/javascript\">var evenRowColor = \"even-row-color\";\n+var oddRowColor = \"odd-row-color\";\n+var tableTab = \"table-tab\";\n+var activeTableTab = \"active-table-tab\";\n+var pathtoroot = \"..\/..\/..\/..\/..\/\";\n+loadScripts(document, 'script');<\/script>\n+<noscript>\n+<div>JavaScript is disabled on your browser.<\/div>\n+<\/noscript>\n+<div class=\"flex-box\">\n+<header role=\"banner\" class=\"flex-header\">\n+<nav role=\"navigation\">\n+<!-- ========= START OF TOP NAVBAR ======= -->\n+<div class=\"top-nav\" id=\"navbar-top\">\n+<div class=\"skip-nav\"><a href=\"#skip-navbar-top\" title=\"Skip navigation links\">Skip navigation links<\/a><\/div>\n+<ul id=\"navbar-top-firstrow\" class=\"nav-list\" title=\"Navigation\">\n+<li><a href=\"package-summary.html\">Package<\/a><\/li>\n+<li class=\"nav-bar-cell1-rev\">Class<\/li>\n+<li><a href=\"package-tree.html\">Tree<\/a><\/li>\n+<li><a href=\"..\/..\/..\/..\/..\/index-files\/index-1.html\">Index<\/a><\/li>\n+<li><a href=\"..\/..\/..\/..\/..\/help-doc.html\">Help<\/a><\/li>\n+<\/ul>\n+<\/div>\n+<div class=\"sub-nav\">\n+<div>\n+<ul class=\"sub-nav-list\">\n+<li>Summary:&nbsp;<\/li>\n+<li>Nested&nbsp;|&nbsp;<\/li>\n+<li><a href=\"#field-summary\">Field<\/a>&nbsp;|&nbsp;<\/li>\n+<li>Constr&nbsp;|&nbsp;<\/li>\n+<li><a href=\"#method-summary\">Method<\/a><\/li>\n+<\/ul>\n+<ul class=\"sub-nav-list\">\n+<li>Detail:&nbsp;<\/li>\n+<li>Field&nbsp;|&nbsp;<\/li>\n+<li>Constr&nbsp;|&nbsp;<\/li>\n+<li><a href=\"#method-detail\">Method<\/a><\/li>\n+<\/ul>\n+<\/div>\n+<div class=\"nav-list-search\"><label for=\"search\">SEARCH:<\/label>\n+<input type=\"text\" id=\"search\" value=\"search\" disabled=\"disabled\">\n+<input type=\"reset\" id=\"reset\" value=\"reset\" disabled=\"disabled\">\n+<\/div>\n+<\/div>\n+<!-- ========= END OF TOP NAVBAR ========= -->\n+<span class=\"skip-nav\" id=\"skip-navbar-top\"><\/span><\/nav>\n+<\/header>\n+<div class=\"flex-content\">\n+<main role=\"main\">\n+<!-- ======== START OF CLASS DATA ======== -->\n+<div class=\"header\">\n+<div class=\"sub-title\"><span class=\"package-label-in-type\">Package<\/span>&nbsp;<a href=\"package-summary.html\">jdk.test.lib.hotspot.ir_framework<\/a><\/div>\n+<h1 title=\"Class RunInfo\" class=\"title\">Class RunInfo<\/h1>\n+<\/div>\n+<div class=\"inheritance\" title=\"Inheritance Tree\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html\" title=\"class or interface in java.lang\" class=\"external-link\">java.lang.Object<\/a>\n+<div class=\"inheritance\"><a href=\"AbstractInfo.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">jdk.test.lib.hotspot.ir_framework.AbstractInfo<\/a>\n+<div class=\"inheritance\">jdk.test.lib.hotspot.ir_framework.RunInfo<\/div>\n+<\/div>\n+<\/div>\n+<section class=\"description\">\n+<hr>\n+<div class=\"type-signature\"><span class=\"modifiers\">public class <\/span><span class=\"element-name type-name-label\">RunInfo<\/span>\n+<span class=\"extends-implements\">extends <a href=\"AbstractInfo.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">AbstractInfo<\/a><\/span><\/div>\n+<div class=\"block\">Test info class which provides some useful utility methods and information about a <b>custom run test<\/b>.<\/div>\n+<dl class=\"notes\">\n+<dt>See Also:<\/dt>\n+<dd><a href=\"Run.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Run<\/code><\/a><\/dd>\n+<\/dl>\n+<\/section>\n+<section class=\"summary\">\n+<ul class=\"summary-list\">\n+<!-- =========== FIELD SUMMARY =========== -->\n+<li>\n+<section class=\"field-summary\" id=\"field-summary\">\n+<h2>Field Summary<\/h2>\n+<div class=\"inherited-list\">\n+<h3 id=\"fields-inherited-from-class-jdk.test.lib.hotspot.ir_framework.AbstractInfo\">Fields inherited from class&nbsp;jdk.test.lib.hotspot.ir_framework.<a href=\"AbstractInfo.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">AbstractInfo<\/a><\/h3>\n+<code><a href=\"AbstractInfo.html#testClass\">testClass<\/a><\/code><\/div>\n+<\/section>\n+<\/li>\n+<!-- ========== METHOD SUMMARY =========== -->\n+<li>\n+<section class=\"method-summary\" id=\"method-summary\">\n+<h2>Method Summary<\/h2>\n+<div id=\"method-summary-table\">\n+<div class=\"table-tabs\" role=\"tablist\" aria-orientation=\"horizontal\"><button id=\"method-summary-table-tab0\" role=\"tab\" aria-selected=\"true\" aria-controls=\"method-summary-table.tabpanel\" tabindex=\"0\" onkeydown=\"switchTab(event)\" onclick=\"show('method-summary-table', 'method-summary-table', 3)\" class=\"active-table-tab\">All Methods<\/button><button id=\"method-summary-table-tab2\" role=\"tab\" aria-selected=\"false\" aria-controls=\"method-summary-table.tabpanel\" tabindex=\"-1\" onkeydown=\"switchTab(event)\" onclick=\"show('method-summary-table', 'method-summary-table-tab2', 3)\" class=\"table-tab\">Instance Methods<\/button><button id=\"method-summary-table-tab4\" role=\"tab\" aria-selected=\"false\" aria-controls=\"method-summary-table.tabpanel\" tabindex=\"-1\" onkeydown=\"switchTab(event)\" onclick=\"show('method-summary-table', 'method-summary-table-tab4', 3)\" class=\"table-tab\">Concrete Methods<\/button><\/div>\n+<div id=\"method-summary-table.tabpanel\" role=\"tabpanel\">\n+<div class=\"summary-table three-column-summary\" aria-labelledby=\"method-summary-table-tab0\">\n+<div class=\"table-header col-first\">Modifier and Type<\/div>\n+<div class=\"table-header col-second\">Method<\/div>\n+<div class=\"table-header col-last\">Description<\/div>\n+<div class=\"col-first even-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\"><code><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/reflect\/Method.html\" title=\"class or interface in java.lang.reflect\" class=\"external-link\">Method<\/a><\/code><\/div>\n+<div class=\"col-second even-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\"><code><a href=\"#getTest()\" class=\"member-name-link\">getTest<\/a>()<\/code><\/div>\n+<div class=\"col-last even-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\">\n+<div class=\"block\">Get the associated test method object of this custom run test.<\/div>\n+<\/div>\n+<div class=\"col-first odd-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\"><code><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/reflect\/Method.html\" title=\"class or interface in java.lang.reflect\" class=\"external-link\">Method<\/a><\/code><\/div>\n+<div class=\"col-second odd-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\"><code><a href=\"#getTest(java.lang.String)\" class=\"member-name-link\">getTest<\/a>&#8203;(<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a>&nbsp;testName)<\/code><\/div>\n+<div class=\"col-last odd-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\">\n+<div class=\"block\">Get the associated method object of the test method with the name <code>testName<\/code>.<\/div>\n+<\/div>\n+<div class=\"col-first even-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\"><code>boolean<\/code><\/div>\n+<div class=\"col-second even-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\"><code><a href=\"#isCompilationSkipped()\" class=\"member-name-link\">isCompilationSkipped<\/a>()<\/code><\/div>\n+<div class=\"col-last even-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\">\n+<div class=\"block\">Return a boolean indicating if the framework skipped a compilation of the associated test method after the warm-up\n+ due to VM flags not allowing a compilation on the requested level in <a href=\"Test.html#compLevel()\"><code>Test.compLevel()<\/code><\/a>.<\/div>\n+<\/div>\n+<div class=\"col-first odd-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\"><code>boolean<\/code><\/div>\n+<div class=\"col-second odd-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\"><code><a href=\"#isCompilationSkipped(java.lang.String)\" class=\"member-name-link\">isCompilationSkipped<\/a>&#8203;(<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a>&nbsp;testName)<\/code><\/div>\n+<div class=\"col-last odd-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\">\n+<div class=\"block\">Return a boolean indicating if the framework skipped a compilation of the associated test method with the name\n+ <code>testName<\/code> after the warm-up due to VM flags not allowing a compilation on the requested level in\n+ <a href=\"Test.html#compLevel()\"><code>Test.compLevel()<\/code><\/a>.<\/div>\n+<\/div>\n+<div class=\"col-first even-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\"><code>boolean<\/code><\/div>\n+<div class=\"col-second even-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\"><code><a href=\"#isTestC1Compiled()\" class=\"member-name-link\">isTestC1Compiled<\/a>()<\/code><\/div>\n+<div class=\"col-last even-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\">\n+<div class=\"block\">Returns a boolean indicating if the associated test method is C1 compiled.<\/div>\n+<\/div>\n+<div class=\"col-first odd-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\"><code>boolean<\/code><\/div>\n+<div class=\"col-second odd-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\"><code><a href=\"#isTestC1Compiled(java.lang.String)\" class=\"member-name-link\">isTestC1Compiled<\/a>&#8203;(<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a>&nbsp;testName)<\/code><\/div>\n+<div class=\"col-last odd-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\">\n+<div class=\"block\">Returns a boolean indicating if the associated test method with the name <code>testName<\/code> is C1 compiled.<\/div>\n+<\/div>\n+<div class=\"col-first even-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\"><code>boolean<\/code><\/div>\n+<div class=\"col-second even-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\"><code><a href=\"#isTestC2Compiled()\" class=\"member-name-link\">isTestC2Compiled<\/a>()<\/code><\/div>\n+<div class=\"col-last even-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\">\n+<div class=\"block\">Returns a boolean indicating if the associated test method is C2 compiled.<\/div>\n+<\/div>\n+<div class=\"col-first odd-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\"><code>boolean<\/code><\/div>\n+<div class=\"col-second odd-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\"><code><a href=\"#isTestC2Compiled(java.lang.String)\" class=\"member-name-link\">isTestC2Compiled<\/a>&#8203;(<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a>&nbsp;testName)<\/code><\/div>\n+<div class=\"col-last odd-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\">\n+<div class=\"block\">Returns a boolean indicating if the associated test method with the name <code>testName<\/code> is C2 compiled.<\/div>\n+<\/div>\n+<div class=\"col-first even-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\"><code>boolean<\/code><\/div>\n+<div class=\"col-second even-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\"><code><a href=\"#isTestCompiledAtLevel(java.lang.String,jdk.test.lib.hotspot.ir_framework.CompLevel)\" class=\"member-name-link\">isTestCompiledAtLevel<\/a>&#8203;(<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a>&nbsp;testName,\n+ <a href=\"CompLevel.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">CompLevel<\/a>&nbsp;compLevel)<\/code><\/div>\n+<div class=\"col-last even-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\">\n+<div class=\"block\">Returns a boolean indicating if the associated test method with the name <code>testName<\/code> is compiled at\n+ <code>compLevel<\/code>.<\/div>\n+<\/div>\n+<div class=\"col-first odd-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\"><code>boolean<\/code><\/div>\n+<div class=\"col-second odd-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\"><code><a href=\"#isTestCompiledAtLevel(jdk.test.lib.hotspot.ir_framework.CompLevel)\" class=\"member-name-link\">isTestCompiledAtLevel<\/a>&#8203;(<a href=\"CompLevel.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">CompLevel<\/a>&nbsp;compLevel)<\/code><\/div>\n+<div class=\"col-last odd-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\">\n+<div class=\"block\">Returns a boolean indicating if the associated test method is compiled at <code>compLevel<\/code>.<\/div>\n+<\/div>\n+<\/div>\n+<\/div>\n+<\/div>\n+<div class=\"inherited-list\">\n+<h3 id=\"methods-inherited-from-class-jdk.test.lib.hotspot.ir_framework.AbstractInfo\">Methods inherited from class&nbsp;jdk.test.lib.hotspot.ir_framework.<a href=\"AbstractInfo.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">AbstractInfo<\/a><\/h3>\n+<code><a href=\"AbstractInfo.html#getMethod(java.lang.Class,java.lang.String,java.lang.Class...)\">getMethod<\/a>, <a href=\"AbstractInfo.html#getRandom()\">getRandom<\/a>, <a href=\"AbstractInfo.html#getTestClassMethod(java.lang.String,java.lang.Class...)\">getTestClassMethod<\/a>, <a href=\"AbstractInfo.html#isC2CompilationEnabled()\">isC2CompilationEnabled<\/a>, <a href=\"AbstractInfo.html#isWarmUp()\">isWarmUp<\/a>, <a href=\"AbstractInfo.html#toggleBoolean()\">toggleBoolean<\/a><\/code><\/div>\n+<div class=\"inherited-list\">\n+<h3 id=\"methods-inherited-from-class-java.lang.Object\">Methods inherited from class&nbsp;java.lang.<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html\" title=\"class or interface in java.lang\" class=\"external-link\">Object<\/a><\/h3>\n+<code><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#clone()\" title=\"class or interface in java.lang\" class=\"external-link\">clone<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#equals(java.lang.Object)\" title=\"class or interface in java.lang\" class=\"external-link\">equals<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#finalize()\" title=\"class or interface in java.lang\" class=\"external-link\">finalize<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#getClass()\" title=\"class or interface in java.lang\" class=\"external-link\">getClass<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#hashCode()\" title=\"class or interface in java.lang\" class=\"external-link\">hashCode<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#notify()\" title=\"class or interface in java.lang\" class=\"external-link\">notify<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#notifyAll()\" title=\"class or interface in java.lang\" class=\"external-link\">notifyAll<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#toString()\" title=\"class or interface in java.lang\" class=\"external-link\">toString<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#wait()\" title=\"class or interface in java.lang\" class=\"external-link\">wait<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#wait(long)\" title=\"class or interface in java.lang\" class=\"external-link\">wait<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#wait(long,int)\" title=\"class or interface in java.lang\" class=\"external-link\">wait<\/a><\/code><\/div>\n+<\/section>\n+<\/li>\n+<\/ul>\n+<\/section>\n+<section class=\"details\">\n+<ul class=\"details-list\">\n+<!-- ============ METHOD DETAIL ========== -->\n+<li>\n+<section class=\"method-details\" id=\"method-detail\">\n+<h2>Method Details<\/h2>\n+<ul class=\"member-list\">\n+<li>\n+<section class=\"detail\" id=\"getTest()\">\n+<h3>getTest<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public<\/span>&nbsp;<span class=\"return-type\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/reflect\/Method.html\" title=\"class or interface in java.lang.reflect\" class=\"external-link\">Method<\/a><\/span>&nbsp;<span class=\"element-name\">getTest<\/span>()<\/div>\n+<div class=\"block\">Get the associated test method object of this custom run test. This method can only be called if <i>one<\/i> test\n+ method is specified in the custom run test (<a href=\"Run.html#test()\"><code>Run.test()<\/code><\/a>). Otherwise, use <a href=\"#getTest(java.lang.String)\"><code>getTest(String)<\/code><\/a>.<\/div>\n+<dl class=\"notes\">\n+<dt>Returns:<\/dt>\n+<dd>the associated test method object.<\/dd>\n+<dt>Throws:<\/dt>\n+<dd><code><a href=\"TestRunException.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestRunException<\/a><\/code> - if called for a custom run test that specifies multiple test methods in <a href=\"Run.html#test()\"><code>Run.test()<\/code><\/a>.<\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"getTest(java.lang.String)\">\n+<h3>getTest<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public<\/span>&nbsp;<span class=\"return-type\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/reflect\/Method.html\" title=\"class or interface in java.lang.reflect\" class=\"external-link\">Method<\/a><\/span>&nbsp;<span class=\"element-name\">getTest<\/span>&#8203;<span class=\"parameters\">(<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a>&nbsp;testName)<\/span><\/div>\n+<div class=\"block\">Get the associated method object of the test method with the name <code>testName<\/code>. This method can only be called\n+ if the custom run test specifies more than one test method in (<a href=\"Run.html#test()\"><code>Run.test()<\/code><\/a>). Otherwise, use <a href=\"#getTest()\"><code>getTest()<\/code><\/a>.<\/div>\n+<dl class=\"notes\">\n+<dt>Parameters:<\/dt>\n+<dd><code>testName<\/code> - the test method for which the method object should be returned.<\/dd>\n+<dt>Returns:<\/dt>\n+<dd>the associated test method object with the name <code>testName<\/code>.<\/dd>\n+<dt>Throws:<\/dt>\n+<dd><code><a href=\"TestRunException.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestRunException<\/a><\/code> - if there is no test method with the name <code>testName<\/code> or if called with only\n+         <i>one<\/i> associated test method.<\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"isCompilationSkipped()\">\n+<h3>isCompilationSkipped<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public<\/span>&nbsp;<span class=\"return-type\">boolean<\/span>&nbsp;<span class=\"element-name\">isCompilationSkipped<\/span>()<\/div>\n+<div class=\"block\">Return a boolean indicating if the framework skipped a compilation of the associated test method after the warm-up\n+ due to VM flags not allowing a compilation on the requested level in <a href=\"Test.html#compLevel()\"><code>Test.compLevel()<\/code><\/a>. This method can only\n+ be called if <i>one<\/i> test method is specified in the custom run test (<a href=\"Run.html#test()\"><code>Run.test()<\/code><\/a>). Otherwise, use\n+ <a href=\"#isCompilationSkipped(java.lang.String)\"><code>isCompilationSkipped(String)<\/code><\/a>.<\/div>\n+<dl class=\"notes\">\n+<dt>Returns:<\/dt>\n+<dd><code>true<\/code> if the framework compiled the test;\n+         <code>false<\/code> otherwise.<\/dd>\n+<dt>Throws:<\/dt>\n+<dd><code><a href=\"TestRunException.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestRunException<\/a><\/code> - if called for a custom run test that specifies multiple test methods in <a href=\"Run.html#test()\"><code>Run.test()<\/code><\/a>.<\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"isCompilationSkipped(java.lang.String)\">\n+<h3>isCompilationSkipped<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public<\/span>&nbsp;<span class=\"return-type\">boolean<\/span>&nbsp;<span class=\"element-name\">isCompilationSkipped<\/span>&#8203;<span class=\"parameters\">(<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a>&nbsp;testName)<\/span><\/div>\n+<div class=\"block\">Return a boolean indicating if the framework skipped a compilation of the associated test method with the name\n+ <code>testName<\/code> after the warm-up due to VM flags not allowing a compilation on the requested level in\n+ <a href=\"Test.html#compLevel()\"><code>Test.compLevel()<\/code><\/a>. This method can only be called if the custom run test specifies more than one test method\n+ in (<a href=\"Run.html#test()\"><code>Run.test()<\/code><\/a>). Otherwise, use <a href=\"#isCompilationSkipped()\"><code>isCompilationSkipped()<\/code><\/a>.<\/div>\n+<dl class=\"notes\">\n+<dt>Parameters:<\/dt>\n+<dd><code>testName<\/code> - the test method for which the method object should be returned.<\/dd>\n+<dt>Returns:<\/dt>\n+<dd><code>true<\/code> if the framework compiled the test;\n+         <code>false<\/code> otherwise.<\/dd>\n+<dt>Throws:<\/dt>\n+<dd><code><a href=\"TestRunException.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestRunException<\/a><\/code> - if there is no test method with the name <code>testName<\/code> or if called with only\n+         <i>one<\/i> associated test method.<\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"isTestC1Compiled()\">\n+<h3>isTestC1Compiled<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public<\/span>&nbsp;<span class=\"return-type\">boolean<\/span>&nbsp;<span class=\"element-name\">isTestC1Compiled<\/span>()<\/div>\n+<div class=\"block\">Returns a boolean indicating if the associated test method is C1 compiled. This method can only be called if\n+ <i>one<\/i> test method is specified in the custom run test (<a href=\"Run.html#test()\"><code>Run.test()<\/code><\/a>). Otherwise, use\n+ <a href=\"#isTestC1Compiled(java.lang.String)\"><code>isTestC1Compiled(String)<\/code><\/a>.<\/div>\n+<dl class=\"notes\">\n+<dt>Returns:<\/dt>\n+<dd><code>true<\/code> if the associated test method is C1 compiled;\n+         <code>false<\/code> otherwise.<\/dd>\n+<dt>Throws:<\/dt>\n+<dd><code><a href=\"TestRunException.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestRunException<\/a><\/code> - if called for a custom run test that specifies multiple test methods in <a href=\"Run.html#test()\"><code>Run.test()<\/code><\/a>.<\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"isTestC1Compiled(java.lang.String)\">\n+<h3>isTestC1Compiled<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public<\/span>&nbsp;<span class=\"return-type\">boolean<\/span>&nbsp;<span class=\"element-name\">isTestC1Compiled<\/span>&#8203;<span class=\"parameters\">(<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a>&nbsp;testName)<\/span><\/div>\n+<div class=\"block\">Returns a boolean indicating if the associated test method with the name <code>testName<\/code> is C1 compiled.\n+ This method can only be called if the custom run test specifies more than one test method in (<a href=\"Run.html#test()\"><code>Run.test()<\/code><\/a>).\n+ Otherwise, use <a href=\"#isTestC1Compiled()\"><code>isTestC1Compiled()<\/code><\/a>.<\/div>\n+<dl class=\"notes\">\n+<dt>Parameters:<\/dt>\n+<dd><code>testName<\/code> - the name of the test method.<\/dd>\n+<dt>Returns:<\/dt>\n+<dd><code>true<\/code> if the test method with the name <code>testName<\/code> is C1 compiled;\n+         <code>false<\/code> otherwise.<\/dd>\n+<dt>Throws:<\/dt>\n+<dd><code><a href=\"TestRunException.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestRunException<\/a><\/code> - if there is no test method with the name <code>testName<\/code> or if called with only\n+         <i>one<\/i> associated test method.<\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"isTestC2Compiled()\">\n+<h3>isTestC2Compiled<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public<\/span>&nbsp;<span class=\"return-type\">boolean<\/span>&nbsp;<span class=\"element-name\">isTestC2Compiled<\/span>()<\/div>\n+<div class=\"block\">Returns a boolean indicating if the associated test method is C2 compiled. This method can only be called if\n+ <i>one<\/i> test method is specified in the custom run test (<a href=\"Run.html#test()\"><code>Run.test()<\/code><\/a>). Otherwise, use\n+ <a href=\"#isTestC2Compiled(java.lang.String)\"><code>isTestC2Compiled(String)<\/code><\/a>.<\/div>\n+<dl class=\"notes\">\n+<dt>Returns:<\/dt>\n+<dd><code>true<\/code> if the associated test method is C2 compiled;\n+         <code>false<\/code> otherwise.<\/dd>\n+<dt>Throws:<\/dt>\n+<dd><code><a href=\"TestRunException.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestRunException<\/a><\/code> - if called for a custom run test that specifies multiple test methods in <a href=\"Run.html#test()\"><code>Run.test()<\/code><\/a>.<\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"isTestC2Compiled(java.lang.String)\">\n+<h3>isTestC2Compiled<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public<\/span>&nbsp;<span class=\"return-type\">boolean<\/span>&nbsp;<span class=\"element-name\">isTestC2Compiled<\/span>&#8203;<span class=\"parameters\">(<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a>&nbsp;testName)<\/span><\/div>\n+<div class=\"block\">Returns a boolean indicating if the associated test method with the name <code>testName<\/code> is C2 compiled.\n+ This method can only be called if the custom run test specifies more than one test method in (<a href=\"Run.html#test()\"><code>Run.test()<\/code><\/a>).\n+ Otherwise, use <a href=\"#isTestC2Compiled()\"><code>isTestC2Compiled()<\/code><\/a>.<\/div>\n+<dl class=\"notes\">\n+<dt>Parameters:<\/dt>\n+<dd><code>testName<\/code> - the name of the test method.<\/dd>\n+<dt>Returns:<\/dt>\n+<dd><code>true<\/code> if the test method with the name <code>testName<\/code> is C2 compiled;\n+         <code>false<\/code> otherwise.<\/dd>\n+<dt>Throws:<\/dt>\n+<dd><code><a href=\"TestRunException.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestRunException<\/a><\/code> - if there is no test method with the name <code>testName<\/code> or if called with only\n+         <i>one<\/i> associated test method.<\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"isTestCompiledAtLevel(jdk.test.lib.hotspot.ir_framework.CompLevel)\">\n+<h3>isTestCompiledAtLevel<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public<\/span>&nbsp;<span class=\"return-type\">boolean<\/span>&nbsp;<span class=\"element-name\">isTestCompiledAtLevel<\/span>&#8203;<span class=\"parameters\">(<a href=\"CompLevel.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">CompLevel<\/a>&nbsp;compLevel)<\/span><\/div>\n+<div class=\"block\">Returns a boolean indicating if the associated test method is compiled at <code>compLevel<\/code>. This method can only\n+ be called if <i>one<\/i> test method is specified in the custom run test (<a href=\"Run.html#test()\"><code>Run.test()<\/code><\/a>).\n+ Otherwise, use <a href=\"#isTestCompiledAtLevel(java.lang.String,jdk.test.lib.hotspot.ir_framework.CompLevel)\"><code>isTestCompiledAtLevel(String, CompLevel)<\/code><\/a>.<\/div>\n+<dl class=\"notes\">\n+<dt>Parameters:<\/dt>\n+<dd><code>compLevel<\/code> - the compilation level<\/dd>\n+<dt>Returns:<\/dt>\n+<dd><code>true<\/code> if the associated test method is compiled at <code>compLevel<\/code>;\n+         <code>false<\/code> otherwise.<\/dd>\n+<dt>Throws:<\/dt>\n+<dd><code><a href=\"TestRunException.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestRunException<\/a><\/code> - if called for a custom run test that specifies multiple test methods in <a href=\"Run.html#test()\"><code>Run.test()<\/code><\/a>.<\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"isTestCompiledAtLevel(java.lang.String,jdk.test.lib.hotspot.ir_framework.CompLevel)\">\n+<h3>isTestCompiledAtLevel<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public<\/span>&nbsp;<span class=\"return-type\">boolean<\/span>&nbsp;<span class=\"element-name\">isTestCompiledAtLevel<\/span>&#8203;<span class=\"parameters\">(<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a>&nbsp;testName,\n+ <a href=\"CompLevel.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">CompLevel<\/a>&nbsp;compLevel)<\/span><\/div>\n+<div class=\"block\">Returns a boolean indicating if the associated test method with the name <code>testName<\/code> is compiled at\n+ <code>compLevel<\/code>. This method can only be called if the custom run test specifies more than one test method\n+ in (<a href=\"Run.html#test()\"><code>Run.test()<\/code><\/a>). Otherwise, use <a href=\"#isTestCompiledAtLevel(jdk.test.lib.hotspot.ir_framework.CompLevel)\"><code>isTestCompiledAtLevel(CompLevel)<\/code><\/a>.<\/div>\n+<dl class=\"notes\">\n+<dt>Parameters:<\/dt>\n+<dd><code>testName<\/code> - the name of the test method.<\/dd>\n+<dd><code>compLevel<\/code> - the compilation level.<\/dd>\n+<dt>Returns:<\/dt>\n+<dd><code>true<\/code> if the test method with the name <code>testName<\/code> is compiled at <code>compLevel<\/code>;\n+         <code>false<\/code> otherwise.<\/dd>\n+<dt>Throws:<\/dt>\n+<dd><code><a href=\"TestRunException.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestRunException<\/a><\/code> - if there is no test method with the name <code>testName<\/code> oor if called with only\n+         <i>one<\/i> associated test method.<\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<\/ul>\n+<\/section>\n+<\/li>\n+<\/ul>\n+<\/section>\n+<!-- ========= END OF CLASS DATA ========= -->\n+<\/main>\n+<\/div>\n+<\/div>\n+<\/body>\n+<\/html>\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/doc\/jdk\/test\/lib\/hotspot\/ir_framework\/RunInfo.html","additions":372,"deletions":0,"binary":false,"changes":372,"status":"added"},{"patch":"@@ -0,0 +1,231 @@\n+<!DOCTYPE HTML>\n+<html lang=\"en\">\n+<head>\n+<!-- Generated by javadoc (17) on Wed Apr 14 13:12:12 CEST 2021 -->\n+<title>RunMode<\/title>\n+<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n+<meta http-equiv=\"Content-Type\" content=\"text\/html; charset=utf-8\">\n+<meta name=\"dc.created\" content=\"2021-04-14\">\n+<meta name=\"description\" content=\"declaration: package: jdk.test.lib.hotspot.ir_framework, enum: RunMode\">\n+<meta name=\"generator\" content=\"javadoc\/ClassWriterImpl\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/..\/..\/..\/..\/stylesheet.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/..\/..\/..\/..\/script-dir\/jquery-ui.min.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/..\/..\/..\/..\/jquery-ui.overrides.css\" title=\"Style\">\n+<script type=\"text\/javascript\" src=\"..\/..\/..\/..\/..\/script.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/..\/..\/..\/..\/script-dir\/jquery-3.5.1.min.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/..\/..\/..\/..\/script-dir\/jquery-ui.min.js\"><\/script>\n+<\/head>\n+<body class=\"class-declaration-page\">\n+<script type=\"text\/javascript\">var evenRowColor = \"even-row-color\";\n+var oddRowColor = \"odd-row-color\";\n+var tableTab = \"table-tab\";\n+var activeTableTab = \"active-table-tab\";\n+var pathtoroot = \"..\/..\/..\/..\/..\/\";\n+loadScripts(document, 'script');<\/script>\n+<noscript>\n+<div>JavaScript is disabled on your browser.<\/div>\n+<\/noscript>\n+<div class=\"flex-box\">\n+<header role=\"banner\" class=\"flex-header\">\n+<nav role=\"navigation\">\n+<!-- ========= START OF TOP NAVBAR ======= -->\n+<div class=\"top-nav\" id=\"navbar-top\">\n+<div class=\"skip-nav\"><a href=\"#skip-navbar-top\" title=\"Skip navigation links\">Skip navigation links<\/a><\/div>\n+<ul id=\"navbar-top-firstrow\" class=\"nav-list\" title=\"Navigation\">\n+<li><a href=\"package-summary.html\">Package<\/a><\/li>\n+<li class=\"nav-bar-cell1-rev\">Class<\/li>\n+<li><a href=\"package-tree.html\">Tree<\/a><\/li>\n+<li><a href=\"..\/..\/..\/..\/..\/index-files\/index-1.html\">Index<\/a><\/li>\n+<li><a href=\"..\/..\/..\/..\/..\/help-doc.html\">Help<\/a><\/li>\n+<\/ul>\n+<\/div>\n+<div class=\"sub-nav\">\n+<div>\n+<ul class=\"sub-nav-list\">\n+<li>Summary:&nbsp;<\/li>\n+<li><a href=\"#nested-class-summary\">Nested<\/a>&nbsp;|&nbsp;<\/li>\n+<li><a href=\"#enum-constant-summary\">Enum Constants<\/a>&nbsp;|&nbsp;<\/li>\n+<li>Field&nbsp;|&nbsp;<\/li>\n+<li><a href=\"#method-summary\">Method<\/a><\/li>\n+<\/ul>\n+<ul class=\"sub-nav-list\">\n+<li>Detail:&nbsp;<\/li>\n+<li><a href=\"#enum-constant-detail\">Enum Constants<\/a>&nbsp;|&nbsp;<\/li>\n+<li>Field&nbsp;|&nbsp;<\/li>\n+<li><a href=\"#method-detail\">Method<\/a><\/li>\n+<\/ul>\n+<\/div>\n+<div class=\"nav-list-search\"><label for=\"search\">SEARCH:<\/label>\n+<input type=\"text\" id=\"search\" value=\"search\" disabled=\"disabled\">\n+<input type=\"reset\" id=\"reset\" value=\"reset\" disabled=\"disabled\">\n+<\/div>\n+<\/div>\n+<!-- ========= END OF TOP NAVBAR ========= -->\n+<span class=\"skip-nav\" id=\"skip-navbar-top\"><\/span><\/nav>\n+<\/header>\n+<div class=\"flex-content\">\n+<main role=\"main\">\n+<!-- ======== START OF CLASS DATA ======== -->\n+<div class=\"header\">\n+<div class=\"sub-title\"><span class=\"package-label-in-type\">Package<\/span>&nbsp;<a href=\"package-summary.html\">jdk.test.lib.hotspot.ir_framework<\/a><\/div>\n+<h1 title=\"Enum Class RunMode\" class=\"title\">Enum Class RunMode<\/h1>\n+<\/div>\n+<div class=\"inheritance\" title=\"Inheritance Tree\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html\" title=\"class or interface in java.lang\" class=\"external-link\">java.lang.Object<\/a>\n+<div class=\"inheritance\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Enum.html\" title=\"class or interface in java.lang\" class=\"external-link\">java.lang.Enum<\/a>&lt;<a href=\"RunMode.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">RunMode<\/a>&gt;\n+<div class=\"inheritance\">jdk.test.lib.hotspot.ir_framework.RunMode<\/div>\n+<\/div>\n+<\/div>\n+<section class=\"description\">\n+<dl class=\"notes\">\n+<dt>All Implemented Interfaces:<\/dt>\n+<dd><code><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/io\/Serializable.html\" title=\"class or interface in java.io\" class=\"external-link\">Serializable<\/a><\/code>, <code><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Comparable.html\" title=\"class or interface in java.lang\" class=\"external-link\">Comparable<\/a>&lt;<a href=\"RunMode.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">RunMode<\/a>&gt;<\/code>, <code><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/constant\/Constable.html\" title=\"class or interface in java.lang.constant\" class=\"external-link\">Constable<\/a><\/code><\/dd>\n+<\/dl>\n+<hr>\n+<div class=\"type-signature\"><span class=\"modifiers\">public enum <\/span><span class=\"element-name type-name-label\">RunMode<\/span>\n+<span class=\"extends-implements\">extends <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Enum.html\" title=\"class or interface in java.lang\" class=\"external-link\">Enum<\/a>&lt;<a href=\"RunMode.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">RunMode<\/a>&gt;<\/span><\/div>\n+<div class=\"block\">The run mode for a <b>custom run test<\/b> specified in <a href=\"Run.html#mode()\"><code>Run.mode()<\/code><\/a>.<\/div>\n+<dl class=\"notes\">\n+<dt>See Also:<\/dt>\n+<dd><a href=\"Run.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Run<\/code><\/a><\/dd>\n+<\/dl>\n+<\/section>\n+<section class=\"summary\">\n+<ul class=\"summary-list\">\n+<!-- ======== NESTED CLASS SUMMARY ======== -->\n+<li>\n+<section class=\"nested-class-summary\" id=\"nested-class-summary\">\n+<h2>Nested Class Summary<\/h2>\n+<div class=\"inherited-list\">\n+<h2 id=\"nested-classes-inherited-from-class-java.lang.Enum\">Nested classes\/interfaces inherited from class&nbsp;java.lang.<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Enum.html\" title=\"class or interface in java.lang\" class=\"external-link\">Enum<\/a><\/h2>\n+<code><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Enum.EnumDesc.html\" title=\"class or interface in java.lang\" class=\"external-link\">Enum.EnumDesc<\/a>&lt;<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Enum.EnumDesc.html\" title=\"class or interface in java.lang\" class=\"external-link\">E<\/a> extends <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Enum.html\" title=\"class or interface in java.lang\" class=\"external-link\">Enum<\/a>&lt;<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Enum.EnumDesc.html\" title=\"class or interface in java.lang\" class=\"external-link\">E<\/a>&gt;&gt;<\/code><\/div>\n+<\/section>\n+<\/li>\n+<!-- =========== ENUM CONSTANT SUMMARY =========== -->\n+<li>\n+<section class=\"constants-summary\" id=\"enum-constant-summary\">\n+<h2>Enum Constant Summary<\/h2>\n+<div class=\"caption\"><span>Enum Constants<\/span><\/div>\n+<div class=\"summary-table two-column-summary\">\n+<div class=\"table-header col-first\">Enum Constant<\/div>\n+<div class=\"table-header col-last\">Description<\/div>\n+<div class=\"col-first even-row-color\"><code><a href=\"#NORMAL\" class=\"member-name-link\">NORMAL<\/a><\/code><\/div>\n+<div class=\"col-last even-row-color\">\n+<div class=\"block\">Default mode: First warm up the run method (if a warm-up is done), then compile the associated <a href=\"Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Test<\/code><\/a>\n+ method and finally invoke the run method once more.<\/div>\n+<\/div>\n+<div class=\"col-first odd-row-color\"><code><a href=\"#STANDALONE\" class=\"member-name-link\">STANDALONE<\/a><\/code><\/div>\n+<div class=\"col-last odd-row-color\">\n+<div class=\"block\">Standalone mode: There is no warm-up and no compilation done by the framework.<\/div>\n+<\/div>\n+<\/div>\n+<\/section>\n+<\/li>\n+<!-- ========== METHOD SUMMARY =========== -->\n+<li>\n+<section class=\"method-summary\" id=\"method-summary\">\n+<h2>Method Summary<\/h2>\n+<div id=\"method-summary-table\">\n+<div class=\"table-tabs\" role=\"tablist\" aria-orientation=\"horizontal\"><button id=\"method-summary-table-tab0\" role=\"tab\" aria-selected=\"true\" aria-controls=\"method-summary-table.tabpanel\" tabindex=\"0\" onkeydown=\"switchTab(event)\" onclick=\"show('method-summary-table', 'method-summary-table', 3)\" class=\"active-table-tab\">All Methods<\/button><button id=\"method-summary-table-tab1\" role=\"tab\" aria-selected=\"false\" aria-controls=\"method-summary-table.tabpanel\" tabindex=\"-1\" onkeydown=\"switchTab(event)\" onclick=\"show('method-summary-table', 'method-summary-table-tab1', 3)\" class=\"table-tab\">Static Methods<\/button><button id=\"method-summary-table-tab4\" role=\"tab\" aria-selected=\"false\" aria-controls=\"method-summary-table.tabpanel\" tabindex=\"-1\" onkeydown=\"switchTab(event)\" onclick=\"show('method-summary-table', 'method-summary-table-tab4', 3)\" class=\"table-tab\">Concrete Methods<\/button><\/div>\n+<div id=\"method-summary-table.tabpanel\" role=\"tabpanel\">\n+<div class=\"summary-table three-column-summary\" aria-labelledby=\"method-summary-table-tab0\">\n+<div class=\"table-header col-first\">Modifier and Type<\/div>\n+<div class=\"table-header col-second\">Method<\/div>\n+<div class=\"table-header col-last\">Description<\/div>\n+<div class=\"col-first even-row-color method-summary-table method-summary-table-tab1 method-summary-table-tab4\"><code>static <a href=\"RunMode.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">RunMode<\/a><\/code><\/div>\n+<div class=\"col-second even-row-color method-summary-table method-summary-table-tab1 method-summary-table-tab4\"><code><a href=\"#valueOf(java.lang.String)\" class=\"member-name-link\">valueOf<\/a>&#8203;(<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a>&nbsp;name)<\/code><\/div>\n+<div class=\"col-last even-row-color method-summary-table method-summary-table-tab1 method-summary-table-tab4\">\n+<div class=\"block\">Returns the enum constant of this class with the specified name.<\/div>\n+<\/div>\n+<div class=\"col-first odd-row-color method-summary-table method-summary-table-tab1 method-summary-table-tab4\"><code>static <a href=\"RunMode.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">RunMode<\/a>[]<\/code><\/div>\n+<div class=\"col-second odd-row-color method-summary-table method-summary-table-tab1 method-summary-table-tab4\"><code><a href=\"#values()\" class=\"member-name-link\">values<\/a>()<\/code><\/div>\n+<div class=\"col-last odd-row-color method-summary-table method-summary-table-tab1 method-summary-table-tab4\">\n+<div class=\"block\">Returns an array containing the constants of this enum class, in\n+the order they are declared.<\/div>\n+<\/div>\n+<\/div>\n+<\/div>\n+<\/div>\n+<div class=\"inherited-list\">\n+<h3 id=\"methods-inherited-from-class-java.lang.Enum\">Methods inherited from class&nbsp;java.lang.<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Enum.html\" title=\"class or interface in java.lang\" class=\"external-link\">Enum<\/a><\/h3>\n+<code><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Enum.html#clone()\" title=\"class or interface in java.lang\" class=\"external-link\">clone<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Enum.html#compareTo(E)\" title=\"class or interface in java.lang\" class=\"external-link\">compareTo<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Enum.html#describeConstable()\" title=\"class or interface in java.lang\" class=\"external-link\">describeConstable<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Enum.html#equals(java.lang.Object)\" title=\"class or interface in java.lang\" class=\"external-link\">equals<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Enum.html#finalize()\" title=\"class or interface in java.lang\" class=\"external-link\">finalize<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Enum.html#getDeclaringClass()\" title=\"class or interface in java.lang\" class=\"external-link\">getDeclaringClass<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Enum.html#hashCode()\" title=\"class or interface in java.lang\" class=\"external-link\">hashCode<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Enum.html#name()\" title=\"class or interface in java.lang\" class=\"external-link\">name<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Enum.html#ordinal()\" title=\"class or interface in java.lang\" class=\"external-link\">ordinal<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Enum.html#toString()\" title=\"class or interface in java.lang\" class=\"external-link\">toString<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Enum.html#valueOf(java.lang.Class,java.lang.String)\" title=\"class or interface in java.lang\" class=\"external-link\">valueOf<\/a><\/code><\/div>\n+<div class=\"inherited-list\">\n+<h3 id=\"methods-inherited-from-class-java.lang.Object\">Methods inherited from class&nbsp;java.lang.<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html\" title=\"class or interface in java.lang\" class=\"external-link\">Object<\/a><\/h3>\n+<code><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#getClass()\" title=\"class or interface in java.lang\" class=\"external-link\">getClass<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#notify()\" title=\"class or interface in java.lang\" class=\"external-link\">notify<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#notifyAll()\" title=\"class or interface in java.lang\" class=\"external-link\">notifyAll<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#wait()\" title=\"class or interface in java.lang\" class=\"external-link\">wait<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#wait(long)\" title=\"class or interface in java.lang\" class=\"external-link\">wait<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#wait(long,int)\" title=\"class or interface in java.lang\" class=\"external-link\">wait<\/a><\/code><\/div>\n+<\/section>\n+<\/li>\n+<\/ul>\n+<\/section>\n+<section class=\"details\">\n+<ul class=\"details-list\">\n+<!-- ============ ENUM CONSTANT DETAIL =========== -->\n+<li>\n+<section class=\"constant-details\" id=\"enum-constant-detail\">\n+<h2>Enum Constant Details<\/h2>\n+<ul class=\"member-list\">\n+<li>\n+<section class=\"detail\" id=\"NORMAL\">\n+<h3>NORMAL<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static final<\/span>&nbsp;<span class=\"return-type\"><a href=\"RunMode.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">RunMode<\/a><\/span>&nbsp;<span class=\"element-name\">NORMAL<\/span><\/div>\n+<div class=\"block\">Default mode: First warm up the run method (if a warm-up is done), then compile the associated <a href=\"Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Test<\/code><\/a>\n+ method and finally invoke the run method once more.<\/div>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"STANDALONE\">\n+<h3>STANDALONE<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static final<\/span>&nbsp;<span class=\"return-type\"><a href=\"RunMode.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">RunMode<\/a><\/span>&nbsp;<span class=\"element-name\">STANDALONE<\/span><\/div>\n+<div class=\"block\">Standalone mode: There is no warm-up and no compilation done by the framework. The run method is responsible to\n+ trigger the compilation(s), especially in regard of possible <a href=\"IR.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>IR<\/code><\/a> annotations at the associated <a href=\"Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Test<\/code><\/a>\n+ method.<\/div>\n+<\/section>\n+<\/li>\n+<\/ul>\n+<\/section>\n+<\/li>\n+<!-- ============ METHOD DETAIL ========== -->\n+<li>\n+<section class=\"method-details\" id=\"method-detail\">\n+<h2>Method Details<\/h2>\n+<ul class=\"member-list\">\n+<li>\n+<section class=\"detail\" id=\"values()\">\n+<h3>values<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static<\/span>&nbsp;<span class=\"return-type\"><a href=\"RunMode.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">RunMode<\/a>[]<\/span>&nbsp;<span class=\"element-name\">values<\/span>()<\/div>\n+<div class=\"block\">Returns an array containing the constants of this enum class, in\n+the order they are declared.<\/div>\n+<dl class=\"notes\">\n+<dt>Returns:<\/dt>\n+<dd>an array containing the constants of this enum class, in the order they are declared<\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"valueOf(java.lang.String)\">\n+<h3>valueOf<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static<\/span>&nbsp;<span class=\"return-type\"><a href=\"RunMode.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">RunMode<\/a><\/span>&nbsp;<span class=\"element-name\">valueOf<\/span>&#8203;<span class=\"parameters\">(<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a>&nbsp;name)<\/span><\/div>\n+<div class=\"block\">Returns the enum constant of this class with the specified name.\n+The string must match <i>exactly<\/i> an identifier used to declare an\n+enum constant in this class.  (Extraneous whitespace characters are \n+not permitted.)<\/div>\n+<dl class=\"notes\">\n+<dt>Parameters:<\/dt>\n+<dd><code>name<\/code> - the name of the enum constant to be returned.<\/dd>\n+<dt>Returns:<\/dt>\n+<dd>the enum constant with the specified name<\/dd>\n+<dt>Throws:<\/dt>\n+<dd><code><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/IllegalArgumentException.html\" title=\"class or interface in java.lang\" class=\"external-link\">IllegalArgumentException<\/a><\/code> - if this enum class has no constant with the specified name<\/dd>\n+<dd><code><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/NullPointerException.html\" title=\"class or interface in java.lang\" class=\"external-link\">NullPointerException<\/a><\/code> - if the argument is null<\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<\/ul>\n+<\/section>\n+<\/li>\n+<\/ul>\n+<\/section>\n+<!-- ========= END OF CLASS DATA ========= -->\n+<\/main>\n+<\/div>\n+<\/div>\n+<\/body>\n+<\/html>\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/doc\/jdk\/test\/lib\/hotspot\/ir_framework\/RunMode.html","additions":231,"deletions":0,"binary":false,"changes":231,"status":"added"},{"patch":"@@ -0,0 +1,241 @@\n+<!DOCTYPE HTML>\n+<html lang=\"en\">\n+<head>\n+<!-- Generated by javadoc (17) on Wed Apr 14 13:12:12 CEST 2021 -->\n+<title>Scenario<\/title>\n+<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n+<meta http-equiv=\"Content-Type\" content=\"text\/html; charset=utf-8\">\n+<meta name=\"dc.created\" content=\"2021-04-14\">\n+<meta name=\"description\" content=\"declaration: package: jdk.test.lib.hotspot.ir_framework, class: Scenario\">\n+<meta name=\"generator\" content=\"javadoc\/ClassWriterImpl\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/..\/..\/..\/..\/stylesheet.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/..\/..\/..\/..\/script-dir\/jquery-ui.min.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/..\/..\/..\/..\/jquery-ui.overrides.css\" title=\"Style\">\n+<script type=\"text\/javascript\" src=\"..\/..\/..\/..\/..\/script.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/..\/..\/..\/..\/script-dir\/jquery-3.5.1.min.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/..\/..\/..\/..\/script-dir\/jquery-ui.min.js\"><\/script>\n+<\/head>\n+<body class=\"class-declaration-page\">\n+<script type=\"text\/javascript\">var evenRowColor = \"even-row-color\";\n+var oddRowColor = \"odd-row-color\";\n+var tableTab = \"table-tab\";\n+var activeTableTab = \"active-table-tab\";\n+var pathtoroot = \"..\/..\/..\/..\/..\/\";\n+loadScripts(document, 'script');<\/script>\n+<noscript>\n+<div>JavaScript is disabled on your browser.<\/div>\n+<\/noscript>\n+<div class=\"flex-box\">\n+<header role=\"banner\" class=\"flex-header\">\n+<nav role=\"navigation\">\n+<!-- ========= START OF TOP NAVBAR ======= -->\n+<div class=\"top-nav\" id=\"navbar-top\">\n+<div class=\"skip-nav\"><a href=\"#skip-navbar-top\" title=\"Skip navigation links\">Skip navigation links<\/a><\/div>\n+<ul id=\"navbar-top-firstrow\" class=\"nav-list\" title=\"Navigation\">\n+<li><a href=\"package-summary.html\">Package<\/a><\/li>\n+<li class=\"nav-bar-cell1-rev\">Class<\/li>\n+<li><a href=\"package-tree.html\">Tree<\/a><\/li>\n+<li><a href=\"..\/..\/..\/..\/..\/index-files\/index-1.html\">Index<\/a><\/li>\n+<li><a href=\"..\/..\/..\/..\/..\/help-doc.html\">Help<\/a><\/li>\n+<\/ul>\n+<\/div>\n+<div class=\"sub-nav\">\n+<div>\n+<ul class=\"sub-nav-list\">\n+<li>Summary:&nbsp;<\/li>\n+<li>Nested&nbsp;|&nbsp;<\/li>\n+<li>Field&nbsp;|&nbsp;<\/li>\n+<li><a href=\"#constructor-summary\">Constr<\/a>&nbsp;|&nbsp;<\/li>\n+<li><a href=\"#method-summary\">Method<\/a><\/li>\n+<\/ul>\n+<ul class=\"sub-nav-list\">\n+<li>Detail:&nbsp;<\/li>\n+<li>Field&nbsp;|&nbsp;<\/li>\n+<li><a href=\"#constructor-detail\">Constr<\/a>&nbsp;|&nbsp;<\/li>\n+<li><a href=\"#method-detail\">Method<\/a><\/li>\n+<\/ul>\n+<\/div>\n+<div class=\"nav-list-search\"><label for=\"search\">SEARCH:<\/label>\n+<input type=\"text\" id=\"search\" value=\"search\" disabled=\"disabled\">\n+<input type=\"reset\" id=\"reset\" value=\"reset\" disabled=\"disabled\">\n+<\/div>\n+<\/div>\n+<!-- ========= END OF TOP NAVBAR ========= -->\n+<span class=\"skip-nav\" id=\"skip-navbar-top\"><\/span><\/nav>\n+<\/header>\n+<div class=\"flex-content\">\n+<main role=\"main\">\n+<!-- ======== START OF CLASS DATA ======== -->\n+<div class=\"header\">\n+<div class=\"sub-title\"><span class=\"package-label-in-type\">Package<\/span>&nbsp;<a href=\"package-summary.html\">jdk.test.lib.hotspot.ir_framework<\/a><\/div>\n+<h1 title=\"Class Scenario\" class=\"title\">Class Scenario<\/h1>\n+<\/div>\n+<div class=\"inheritance\" title=\"Inheritance Tree\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html\" title=\"class or interface in java.lang\" class=\"external-link\">java.lang.Object<\/a>\n+<div class=\"inheritance\">jdk.test.lib.hotspot.ir_framework.Scenario<\/div>\n+<\/div>\n+<section class=\"description\">\n+<hr>\n+<div class=\"type-signature\"><span class=\"modifiers\">public class <\/span><span class=\"element-name type-name-label\">Scenario<\/span>\n+<span class=\"extends-implements\">extends <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html\" title=\"class or interface in java.lang\" class=\"external-link\">Object<\/a><\/span><\/div>\n+<div class=\"block\">This class represents a scenario that can be executed by the <a href=\"TestFramework.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\"><code>TestFramework<\/code><\/a>.\n+ <p>\n+ A JTreg test should use the test framework with <code>@run driver<\/code> (without directly specify any additional flags).\n+ If a test should run with additional flags, use <a href=\"TestFramework.html#runWithFlags(java.lang.String...)\"><code>TestFramework.runWithFlags(String...)<\/code><\/a> or\n+ <a href=\"TestFramework.html#addFlags(java.lang.String...)\"><code>TestFramework.addFlags(String...)<\/code><\/a>. If, however, the test should be run with different settings (equivalent\n+ to having multiple <code>@run<\/code> entries in a normal JTreg test), use scenarios. A scenario will be run with the\n+ scenario specific VM flags, if any, and optionally specified VM flags with <a href=\"TestFramework.html#addFlags(java.lang.String...)\"><code>TestFramework.addFlags(String...)<\/code><\/a>\n+ whereas scenario VM flags will have precedence.\n+ <p>\n+ There is also the possibility to specify additional VM flags for all scenarios by using <code>DScenarioFlags<\/code>.<\/div>\n+<dl class=\"notes\">\n+<dt>See Also:<\/dt>\n+<dd><a href=\"TestFramework.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\"><code>TestFramework<\/code><\/a><\/dd>\n+<\/dl>\n+<\/section>\n+<section class=\"summary\">\n+<ul class=\"summary-list\">\n+<!-- ======== CONSTRUCTOR SUMMARY ======== -->\n+<li>\n+<section class=\"constructor-summary\" id=\"constructor-summary\">\n+<h2>Constructor Summary<\/h2>\n+<div class=\"caption\"><span>Constructors<\/span><\/div>\n+<div class=\"summary-table two-column-summary\">\n+<div class=\"table-header col-first\">Constructor<\/div>\n+<div class=\"table-header col-last\">Description<\/div>\n+<div class=\"col-constructor-name even-row-color\"><code><a href=\"#%3Cinit%3E(int,java.lang.String...)\" class=\"member-name-link\">Scenario<\/a>&#8203;(int&nbsp;index,\n+ <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a>...&nbsp;flags)<\/code><\/div>\n+<div class=\"col-last even-row-color\">\n+<div class=\"block\">Create a scenario with <code>index<\/code> that will be run with the additional VM flags specified in <code>flags<\/code>\n+ (or without any if null or parameter not provided).<\/div>\n+<\/div>\n+<\/div>\n+<\/section>\n+<\/li>\n+<!-- ========== METHOD SUMMARY =========== -->\n+<li>\n+<section class=\"method-summary\" id=\"method-summary\">\n+<h2>Method Summary<\/h2>\n+<div id=\"method-summary-table\">\n+<div class=\"table-tabs\" role=\"tablist\" aria-orientation=\"horizontal\"><button id=\"method-summary-table-tab0\" role=\"tab\" aria-selected=\"true\" aria-controls=\"method-summary-table.tabpanel\" tabindex=\"0\" onkeydown=\"switchTab(event)\" onclick=\"show('method-summary-table', 'method-summary-table', 3)\" class=\"active-table-tab\">All Methods<\/button><button id=\"method-summary-table-tab2\" role=\"tab\" aria-selected=\"false\" aria-controls=\"method-summary-table.tabpanel\" tabindex=\"-1\" onkeydown=\"switchTab(event)\" onclick=\"show('method-summary-table', 'method-summary-table-tab2', 3)\" class=\"table-tab\">Instance Methods<\/button><button id=\"method-summary-table-tab4\" role=\"tab\" aria-selected=\"false\" aria-controls=\"method-summary-table.tabpanel\" tabindex=\"-1\" onkeydown=\"switchTab(event)\" onclick=\"show('method-summary-table', 'method-summary-table-tab4', 3)\" class=\"table-tab\">Concrete Methods<\/button><\/div>\n+<div id=\"method-summary-table.tabpanel\" role=\"tabpanel\">\n+<div class=\"summary-table three-column-summary\" aria-labelledby=\"method-summary-table-tab0\">\n+<div class=\"table-header col-first\">Modifier and Type<\/div>\n+<div class=\"table-header col-second\">Method<\/div>\n+<div class=\"table-header col-last\">Description<\/div>\n+<div class=\"col-first even-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\"><code>void<\/code><\/div>\n+<div class=\"col-second even-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\"><code><a href=\"#addFlags(java.lang.String...)\" class=\"member-name-link\">addFlags<\/a>&#8203;(<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a>...&nbsp;flags)<\/code><\/div>\n+<div class=\"col-last even-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\">\n+<div class=\"block\">Add additional VM flags to this scenario.<\/div>\n+<\/div>\n+<div class=\"col-first odd-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\"><code><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/util\/List.html\" title=\"class or interface in java.util\" class=\"external-link\">List<\/a>&lt;<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a>&gt;<\/code><\/div>\n+<div class=\"col-second odd-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\"><code><a href=\"#getFlags()\" class=\"member-name-link\">getFlags<\/a>()<\/code><\/div>\n+<div class=\"col-last odd-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\">\n+<div class=\"block\">Get all scenario specific VM flags as defined in <a href=\"#%3Cinit%3E(int,java.lang.String...)\"><code>Scenario(int, String...)<\/code><\/a>.<\/div>\n+<\/div>\n+<div class=\"col-first even-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\"><code>int<\/code><\/div>\n+<div class=\"col-second even-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\"><code><a href=\"#getIndex()\" class=\"member-name-link\">getIndex<\/a>()<\/code><\/div>\n+<div class=\"col-last even-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\">\n+<div class=\"block\">Get the unique scenario index as defined in <a href=\"#%3Cinit%3E(int,java.lang.String...)\"><code>Scenario(int, String...)<\/code><\/a>.<\/div>\n+<\/div>\n+<div class=\"col-first odd-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\"><code><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second odd-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\"><code><a href=\"#getTestVMOutput()\" class=\"member-name-link\">getTestVMOutput<\/a>()<\/code><\/div>\n+<div class=\"col-last odd-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\">\n+<div class=\"block\">Get the test VM output (stdout + stderr) of this scenario from the last execution of the framework.<\/div>\n+<\/div>\n+<\/div>\n+<\/div>\n+<\/div>\n+<div class=\"inherited-list\">\n+<h3 id=\"methods-inherited-from-class-java.lang.Object\">Methods inherited from class&nbsp;java.lang.<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html\" title=\"class or interface in java.lang\" class=\"external-link\">Object<\/a><\/h3>\n+<code><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#clone()\" title=\"class or interface in java.lang\" class=\"external-link\">clone<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#equals(java.lang.Object)\" title=\"class or interface in java.lang\" class=\"external-link\">equals<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#finalize()\" title=\"class or interface in java.lang\" class=\"external-link\">finalize<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#getClass()\" title=\"class or interface in java.lang\" class=\"external-link\">getClass<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#hashCode()\" title=\"class or interface in java.lang\" class=\"external-link\">hashCode<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#notify()\" title=\"class or interface in java.lang\" class=\"external-link\">notify<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#notifyAll()\" title=\"class or interface in java.lang\" class=\"external-link\">notifyAll<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#toString()\" title=\"class or interface in java.lang\" class=\"external-link\">toString<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#wait()\" title=\"class or interface in java.lang\" class=\"external-link\">wait<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#wait(long)\" title=\"class or interface in java.lang\" class=\"external-link\">wait<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#wait(long,int)\" title=\"class or interface in java.lang\" class=\"external-link\">wait<\/a><\/code><\/div>\n+<\/section>\n+<\/li>\n+<\/ul>\n+<\/section>\n+<section class=\"details\">\n+<ul class=\"details-list\">\n+<!-- ========= CONSTRUCTOR DETAIL ======== -->\n+<li>\n+<section class=\"constructor-details\" id=\"constructor-detail\">\n+<h2>Constructor Details<\/h2>\n+<ul class=\"member-list\">\n+<li>\n+<section class=\"detail\" id=\"&lt;init&gt;(int,java.lang.String...)\">\n+<h3>Scenario<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public<\/span>&nbsp;<span class=\"element-name\">Scenario<\/span>&#8203;<span class=\"parameters\">(int&nbsp;index,\n+ <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a>...&nbsp;flags)<\/span><\/div>\n+<div class=\"block\">Create a scenario with <code>index<\/code> that will be run with the additional VM flags specified in <code>flags<\/code>\n+ (or without any if null or parameter not provided).\n+ <p>\n+ The scenario <code>index<\/code> must be unique to be distinguishable in the stdout and stderr output and when specifying\n+ <code>-DScenarios<\/code> (see <a href=\"Scenario.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\"><code>Scenario<\/code><\/a>).<\/div>\n+<dl class=\"notes\">\n+<dt>Parameters:<\/dt>\n+<dd><code>index<\/code> - the unique scenario index.<\/dd>\n+<dd><code>flags<\/code> - the scenario flags or null (i.e. no parameter specified) if no flags should be used.<\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<\/ul>\n+<\/section>\n+<\/li>\n+<!-- ============ METHOD DETAIL ========== -->\n+<li>\n+<section class=\"method-details\" id=\"method-detail\">\n+<h2>Method Details<\/h2>\n+<ul class=\"member-list\">\n+<li>\n+<section class=\"detail\" id=\"addFlags(java.lang.String...)\">\n+<h3>addFlags<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public<\/span>&nbsp;<span class=\"return-type\">void<\/span>&nbsp;<span class=\"element-name\">addFlags<\/span>&#8203;<span class=\"parameters\">(<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a>...&nbsp;flags)<\/span><\/div>\n+<div class=\"block\">Add additional VM flags to this scenario.<\/div>\n+<dl class=\"notes\">\n+<dt>Parameters:<\/dt>\n+<dd><code>flags<\/code> - the additional scenario VM flags.<\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"getFlags()\">\n+<h3>getFlags<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public<\/span>&nbsp;<span class=\"return-type\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/util\/List.html\" title=\"class or interface in java.util\" class=\"external-link\">List<\/a>&lt;<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a>&gt;<\/span>&nbsp;<span class=\"element-name\">getFlags<\/span>()<\/div>\n+<div class=\"block\">Get all scenario specific VM flags as defined in <a href=\"#%3Cinit%3E(int,java.lang.String...)\"><code>Scenario(int, String...)<\/code><\/a>.<\/div>\n+<dl class=\"notes\">\n+<dt>Returns:<\/dt>\n+<dd>the scenario VM flags.<\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"getIndex()\">\n+<h3>getIndex<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public<\/span>&nbsp;<span class=\"return-type\">int<\/span>&nbsp;<span class=\"element-name\">getIndex<\/span>()<\/div>\n+<div class=\"block\">Get the unique scenario index as defined in <a href=\"#%3Cinit%3E(int,java.lang.String...)\"><code>Scenario(int, String...)<\/code><\/a>.<\/div>\n+<dl class=\"notes\">\n+<dt>Returns:<\/dt>\n+<dd>the scenario index.<\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"getTestVMOutput()\">\n+<h3>getTestVMOutput<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public<\/span>&nbsp;<span class=\"return-type\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/span>&nbsp;<span class=\"element-name\">getTestVMOutput<\/span>()<\/div>\n+<div class=\"block\">Get the test VM output (stdout + stderr) of this scenario from the last execution of the framework.<\/div>\n+<dl class=\"notes\">\n+<dt>Returns:<\/dt>\n+<dd>the test VM output.<\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<\/ul>\n+<\/section>\n+<\/li>\n+<\/ul>\n+<\/section>\n+<!-- ========= END OF CLASS DATA ========= -->\n+<\/main>\n+<\/div>\n+<\/div>\n+<\/body>\n+<\/html>\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/doc\/jdk\/test\/lib\/hotspot\/ir_framework\/Scenario.html","additions":241,"deletions":0,"binary":false,"changes":241,"status":"added"},{"patch":"@@ -0,0 +1,174 @@\n+<!DOCTYPE HTML>\n+<html lang=\"en\">\n+<head>\n+<!-- Generated by javadoc (17) on Wed Apr 14 13:12:12 CEST 2021 -->\n+<title>Test<\/title>\n+<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n+<meta http-equiv=\"Content-Type\" content=\"text\/html; charset=utf-8\">\n+<meta name=\"dc.created\" content=\"2021-04-14\">\n+<meta name=\"description\" content=\"declaration: package: jdk.test.lib.hotspot.ir_framework, annotation type: Test\">\n+<meta name=\"generator\" content=\"javadoc\/ClassWriterImpl\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/..\/..\/..\/..\/stylesheet.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/..\/..\/..\/..\/script-dir\/jquery-ui.min.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/..\/..\/..\/..\/jquery-ui.overrides.css\" title=\"Style\">\n+<script type=\"text\/javascript\" src=\"..\/..\/..\/..\/..\/script.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/..\/..\/..\/..\/script-dir\/jquery-3.5.1.min.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/..\/..\/..\/..\/script-dir\/jquery-ui.min.js\"><\/script>\n+<\/head>\n+<body class=\"class-declaration-page\">\n+<script type=\"text\/javascript\">var pathtoroot = \"..\/..\/..\/..\/..\/\";\n+loadScripts(document, 'script');<\/script>\n+<noscript>\n+<div>JavaScript is disabled on your browser.<\/div>\n+<\/noscript>\n+<div class=\"flex-box\">\n+<header role=\"banner\" class=\"flex-header\">\n+<nav role=\"navigation\">\n+<!-- ========= START OF TOP NAVBAR ======= -->\n+<div class=\"top-nav\" id=\"navbar-top\">\n+<div class=\"skip-nav\"><a href=\"#skip-navbar-top\" title=\"Skip navigation links\">Skip navigation links<\/a><\/div>\n+<ul id=\"navbar-top-firstrow\" class=\"nav-list\" title=\"Navigation\">\n+<li><a href=\"package-summary.html\">Package<\/a><\/li>\n+<li class=\"nav-bar-cell1-rev\">Class<\/li>\n+<li><a href=\"package-tree.html\">Tree<\/a><\/li>\n+<li><a href=\"..\/..\/..\/..\/..\/index-files\/index-1.html\">Index<\/a><\/li>\n+<li><a href=\"..\/..\/..\/..\/..\/help-doc.html\">Help<\/a><\/li>\n+<\/ul>\n+<\/div>\n+<div class=\"sub-nav\">\n+<div>\n+<ul class=\"sub-nav-list\">\n+<li>Summary:&nbsp;<\/li>\n+<li>Field&nbsp;|&nbsp;<\/li>\n+<li>Required&nbsp;|&nbsp;<\/li>\n+<li><a href=\"#annotation-interface-optional-element-summary\">Optional<\/a><\/li>\n+<\/ul>\n+<ul class=\"sub-nav-list\">\n+<li>Detail:&nbsp;<\/li>\n+<li>Field&nbsp;|&nbsp;<\/li>\n+<li><a href=\"#annotation-interface-element-detail\">Element<\/a><\/li>\n+<\/ul>\n+<\/div>\n+<div class=\"nav-list-search\"><label for=\"search\">SEARCH:<\/label>\n+<input type=\"text\" id=\"search\" value=\"search\" disabled=\"disabled\">\n+<input type=\"reset\" id=\"reset\" value=\"reset\" disabled=\"disabled\">\n+<\/div>\n+<\/div>\n+<!-- ========= END OF TOP NAVBAR ========= -->\n+<span class=\"skip-nav\" id=\"skip-navbar-top\"><\/span><\/nav>\n+<\/header>\n+<div class=\"flex-content\">\n+<main role=\"main\">\n+<!-- ======== START OF CLASS DATA ======== -->\n+<div class=\"header\">\n+<div class=\"sub-title\"><span class=\"package-label-in-type\">Package<\/span>&nbsp;<a href=\"package-summary.html\">jdk.test.lib.hotspot.ir_framework<\/a><\/div>\n+<h1 title=\"Annotation Interface Test\" class=\"title\">Annotation Interface Test<\/h1>\n+<\/div>\n+<section class=\"description\">\n+<hr>\n+<div class=\"type-signature\"><span class=\"annotations\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/annotation\/Retention.html\" title=\"class or interface in java.lang.annotation\" class=\"external-link\">@Retention<\/a>(<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/annotation\/RetentionPolicy.html#RUNTIME\" title=\"class or interface in java.lang.annotation\" class=\"external-link\">RUNTIME<\/a>)\n+<\/span><span class=\"modifiers\">public @interface <\/span><span class=\"element-name type-name-label\">Test<\/span><\/div>\n+<div class=\"block\">Annotate all methods in your test class which the framework should test with <code>@Test<\/code>.\n+ <p>\n+ Let <code>m<\/code> be a test method specifying the <code>@Test<\/code> annotation. If <code>m<\/code> is neither part of a\n+ <b>checked test<\/b> (an additional method specifying <a href=\"Check.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@Check<\/code><\/a> with <code>@Check(test = \"m\")<\/code>) nor part\n+ of a <b>custom run test<\/b> (an additional method specifying <a href=\"Run.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@Run<\/code><\/a> with <code>@Run(test = \"m\")<\/code>),\n+ then <code>m<\/code> is a so-called <b>base test<\/b> and the the framework invokes <code>m<\/code> in the following way:\n+ <ol>\n+     <li><p>The framework warms <code>m<\/code> up by invoking it for a predefined number of iterations (default: 2000)\n+     or any number specified by an additional <a href=\"Warmup.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@Warmup<\/code><\/a> annotation at <code>m<\/code> or by using\n+     <a href=\"TestFramework.html#setDefaultWarmup(int)\"><code>TestFramework.setDefaultWarmup(int)<\/code><\/a> (could also be 0 which skips the warm-up completely which is similar\n+     to simulating <code>-Xcomp<\/code>). More information about the warm-up in general can be found at <a href=\"Warmup.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Warmup<\/code><\/a><\/li>\n+     <li><p>After the warm-up, the framework compiles <code>m<\/code> at the specified compilation level set by\n+     <a href=\"#compLevel()\"><code>compLevel()<\/code><\/a> (default <a href=\"CompLevel.html#ANY\"><code>CompLevel.ANY<\/code><\/a> will pick the highest available level which is usually\n+     <a href=\"CompLevel.html#C2\"><code>CompLevel.C2<\/code><\/a>).<\/li>\n+     <li><p>The framework invokes <code>m<\/code> one more time to run the compilation.<\/li>\n+     <li><p>The framework checks any specified <a href=\"IR.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@IR<\/code><\/a> constraints at <code>m<\/code>. More information about IR matching\n+     can be found at <a href=\"IR.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>IR<\/code><\/a>.<\/li>\n+ <\/ol>\n+\n+ <p>\n+ <code>m<\/code> has the following properties:\n+ <ul>\n+     <li><p>If <code>m<\/code> specifies no parameters, the framework can directly invoke <code>m<\/code>.<\/li>\n+     <li><p>If <code>m<\/code> specifies parameters, the framework needs to know how to invoke <code>m<\/code>. Use <a href=\"Arguments.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Arguments<\/code><\/a>\n+     with <a href=\"Argument.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\"><code>Argument<\/code><\/a> properties for each parameter to use well-defined parameters by the framework. If the method\n+     requires a more specific argument value, use a custom run test (see <a href=\"Run.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Run<\/code><\/a>).<\/li>\n+     <li><p><code>m<\/code> cannot specify <a href=\"AbstractInfo.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\"><code>AbstractInfo<\/code><\/a> or any of its subclasses as parameter or return type.<\/li>\n+     <li><p><code>m<\/code> is not inlined by the framework.<\/li>\n+     <li><p>Verification of the return value of <code>m<\/code> can only be done in a checked test (see <a href=\"Check.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Check<\/code><\/a>) or\n+     custom run test (see <a href=\"Run.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Run<\/code><\/a>).<\/li>\n+ <\/ul>\n+\n+ <p>\n+ The following constraints must be met for the test method <code>m<\/code> specifying <code>@Test<\/code>:\n+ <ul>\n+     <li><p><code>m<\/code> must be part of the test class. Using <code>@Test<\/code> in nested or helper classes is not allowed.<\/li>\n+     <li><p><code>m<\/code> cannot have the same name as another <code>@Test<\/code> method in the same test class. Method\n+     overloading is only allowed (but not encouraged) with other non-<code>@Test<\/code> methods.<\/li>\n+     <li><p><code>m<\/code> cannot specify any helper-method-specific compile command annotations\n+            (<a href=\"ForceCompile.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@ForceCompile<\/code><\/a>, <a href=\"DontCompile.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@DontCompile<\/code><\/a>, <a href=\"ForceInline.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@ForceInline<\/code><\/a>,\n+            <a href=\"DontInline.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@DontInline<\/code><\/a>). <\/li>\n+ <\/ul>\n+\n+ <p>\n+ Examples on how to write base tests can be found in <code>BaseTestExample<\/code>\n+ and also as part of the internal testing in the package <code>jdk.test.lib.hotspot.ir_framework.tests<\/code>.<\/div>\n+<dl class=\"notes\">\n+<dt>See Also:<\/dt>\n+<dd><a href=\"Arguments.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Arguments<\/code><\/a><\/dd>\n+<\/dl>\n+<\/section>\n+<section class=\"summary\">\n+<ul class=\"summary-list\">\n+<!-- =========== ANNOTATION INTERFACE OPTIONAL MEMBER SUMMARY =========== -->\n+<li>\n+<section class=\"member-summary\" id=\"annotation-interface-optional-element-summary\">\n+<h2>Optional Element Summary<\/h2>\n+<div class=\"caption\"><span>Optional Elements<\/span><\/div>\n+<div class=\"summary-table three-column-summary\">\n+<div class=\"table-header col-first\">Modifier and Type<\/div>\n+<div class=\"table-header col-second\">Optional Element<\/div>\n+<div class=\"table-header col-last\">Description<\/div>\n+<div class=\"col-first even-row-color\"><code><a href=\"CompLevel.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">CompLevel<\/a><\/code><\/div>\n+<div class=\"col-second even-row-color\"><code><a href=\"#compLevel()\" class=\"member-name-link\">compLevel<\/a><\/code><\/div>\n+<div class=\"col-last even-row-color\">\n+<div class=\"block\">Specify at which compilation level the framework should eventually compile the test method after an optional\n+ warm-up period.<\/div>\n+<\/div>\n+<\/div>\n+<\/section>\n+<\/li>\n+<\/ul>\n+<\/section>\n+<section class=\"details\" id=\"annotation-interface-element-detail\">\n+<ul class=\"details-list\">\n+<!-- ============ ANNOTATION INTERFACE MEMBER DETAIL =========== -->\n+<li>\n+<section class=\"member-details\">\n+<h2>Element Details<\/h2>\n+<ul class=\"member-list\">\n+<li>\n+<section class=\"detail\" id=\"compLevel()\">\n+<h3>compLevel<\/h3>\n+<div class=\"member-signature\"><span class=\"return-type\"><a href=\"CompLevel.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">CompLevel<\/a><\/span>&nbsp;<span class=\"element-name\">compLevel<\/span><\/div>\n+<div class=\"block\">Specify at which compilation level the framework should eventually compile the test method after an optional\n+ warm-up period. The default <a href=\"CompLevel.html#ANY\"><code>CompLevel.ANY<\/code><\/a> will let the framework compile the method at the highest\n+ available level which is usually <a href=\"CompLevel.html#C2\"><code>CompLevel.C2<\/code><\/a>.<\/div>\n+<dl class=\"notes\">\n+<dt>Default:<\/dt>\n+<dd>ANY<\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<\/ul>\n+<\/section>\n+<\/li>\n+<\/ul>\n+<\/section>\n+<!-- ========= END OF CLASS DATA ========= -->\n+<\/main>\n+<\/div>\n+<\/div>\n+<\/body>\n+<\/html>\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/doc\/jdk\/test\/lib\/hotspot\/ir_framework\/Test.html","additions":174,"deletions":0,"binary":false,"changes":174,"status":"added"},{"patch":"@@ -0,0 +1,113 @@\n+<!DOCTYPE HTML>\n+<html lang=\"en\">\n+<head>\n+<!-- Generated by javadoc (17) on Wed Apr 14 13:12:12 CEST 2021 -->\n+<title>TestFormatException<\/title>\n+<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n+<meta http-equiv=\"Content-Type\" content=\"text\/html; charset=utf-8\">\n+<meta name=\"dc.created\" content=\"2021-04-14\">\n+<meta name=\"description\" content=\"declaration: package: jdk.test.lib.hotspot.ir_framework, class: TestFormatException\">\n+<meta name=\"generator\" content=\"javadoc\/ClassWriterImpl\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/..\/..\/..\/..\/stylesheet.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/..\/..\/..\/..\/script-dir\/jquery-ui.min.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/..\/..\/..\/..\/jquery-ui.overrides.css\" title=\"Style\">\n+<script type=\"text\/javascript\" src=\"..\/..\/..\/..\/..\/script.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/..\/..\/..\/..\/script-dir\/jquery-3.5.1.min.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/..\/..\/..\/..\/script-dir\/jquery-ui.min.js\"><\/script>\n+<\/head>\n+<body class=\"class-declaration-page\">\n+<script type=\"text\/javascript\">var pathtoroot = \"..\/..\/..\/..\/..\/\";\n+loadScripts(document, 'script');<\/script>\n+<noscript>\n+<div>JavaScript is disabled on your browser.<\/div>\n+<\/noscript>\n+<div class=\"flex-box\">\n+<header role=\"banner\" class=\"flex-header\">\n+<nav role=\"navigation\">\n+<!-- ========= START OF TOP NAVBAR ======= -->\n+<div class=\"top-nav\" id=\"navbar-top\">\n+<div class=\"skip-nav\"><a href=\"#skip-navbar-top\" title=\"Skip navigation links\">Skip navigation links<\/a><\/div>\n+<ul id=\"navbar-top-firstrow\" class=\"nav-list\" title=\"Navigation\">\n+<li><a href=\"package-summary.html\">Package<\/a><\/li>\n+<li class=\"nav-bar-cell1-rev\">Class<\/li>\n+<li><a href=\"package-tree.html\">Tree<\/a><\/li>\n+<li><a href=\"..\/..\/..\/..\/..\/index-files\/index-1.html\">Index<\/a><\/li>\n+<li><a href=\"..\/..\/..\/..\/..\/help-doc.html\">Help<\/a><\/li>\n+<\/ul>\n+<\/div>\n+<div class=\"sub-nav\">\n+<div>\n+<ul class=\"sub-nav-list\">\n+<li>Summary:&nbsp;<\/li>\n+<li>Nested&nbsp;|&nbsp;<\/li>\n+<li>Field&nbsp;|&nbsp;<\/li>\n+<li>Constr&nbsp;|&nbsp;<\/li>\n+<li><a href=\"#method-summary\">Method<\/a><\/li>\n+<\/ul>\n+<ul class=\"sub-nav-list\">\n+<li>Detail:&nbsp;<\/li>\n+<li>Field&nbsp;|&nbsp;<\/li>\n+<li>Constr&nbsp;|&nbsp;<\/li>\n+<li>Method<\/li>\n+<\/ul>\n+<\/div>\n+<div class=\"nav-list-search\"><label for=\"search\">SEARCH:<\/label>\n+<input type=\"text\" id=\"search\" value=\"search\" disabled=\"disabled\">\n+<input type=\"reset\" id=\"reset\" value=\"reset\" disabled=\"disabled\">\n+<\/div>\n+<\/div>\n+<!-- ========= END OF TOP NAVBAR ========= -->\n+<span class=\"skip-nav\" id=\"skip-navbar-top\"><\/span><\/nav>\n+<\/header>\n+<div class=\"flex-content\">\n+<main role=\"main\">\n+<!-- ======== START OF CLASS DATA ======== -->\n+<div class=\"header\">\n+<div class=\"sub-title\"><span class=\"package-label-in-type\">Package<\/span>&nbsp;<a href=\"package-summary.html\">jdk.test.lib.hotspot.ir_framework<\/a><\/div>\n+<h1 title=\"Class TestFormatException\" class=\"title\">Class TestFormatException<\/h1>\n+<\/div>\n+<div class=\"inheritance\" title=\"Inheritance Tree\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html\" title=\"class or interface in java.lang\" class=\"external-link\">java.lang.Object<\/a>\n+<div class=\"inheritance\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Throwable.html\" title=\"class or interface in java.lang\" class=\"external-link\">java.lang.Throwable<\/a>\n+<div class=\"inheritance\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Exception.html\" title=\"class or interface in java.lang\" class=\"external-link\">java.lang.Exception<\/a>\n+<div class=\"inheritance\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/RuntimeException.html\" title=\"class or interface in java.lang\" class=\"external-link\">java.lang.RuntimeException<\/a>\n+<div class=\"inheritance\">jdk.test.lib.hotspot.ir_framework.TestFormatException<\/div>\n+<\/div>\n+<\/div>\n+<\/div>\n+<\/div>\n+<section class=\"description\">\n+<dl class=\"notes\">\n+<dt>All Implemented Interfaces:<\/dt>\n+<dd><code><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/io\/Serializable.html\" title=\"class or interface in java.io\" class=\"external-link\">Serializable<\/a><\/code><\/dd>\n+<\/dl>\n+<hr>\n+<div class=\"type-signature\"><span class=\"modifiers\">public class <\/span><span class=\"element-name type-name-label\">TestFormatException<\/span>\n+<span class=\"extends-implements\">extends <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/RuntimeException.html\" title=\"class or interface in java.lang\" class=\"external-link\">RuntimeException<\/a><\/span><\/div>\n+<div class=\"block\">Exception that is thrown if a JTreg test violates the supported format by the test framework.<\/div>\n+<dl class=\"notes\">\n+<dt>See Also:<\/dt>\n+<dd><a href=\"..\/..\/..\/..\/..\/serialized-form.html#jdk.test.lib.hotspot.ir_framework.TestFormatException\">Serialized Form<\/a><\/dd>\n+<\/dl>\n+<\/section>\n+<section class=\"summary\">\n+<ul class=\"summary-list\">\n+<!-- ========== METHOD SUMMARY =========== -->\n+<li>\n+<section class=\"method-summary\" id=\"method-summary\">\n+<h2>Method Summary<\/h2>\n+<div class=\"inherited-list\">\n+<h3 id=\"methods-inherited-from-class-java.lang.Throwable\">Methods inherited from class&nbsp;java.lang.<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Throwable.html\" title=\"class or interface in java.lang\" class=\"external-link\">Throwable<\/a><\/h3>\n+<code><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Throwable.html#addSuppressed(java.lang.Throwable)\" title=\"class or interface in java.lang\" class=\"external-link\">addSuppressed<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Throwable.html#fillInStackTrace()\" title=\"class or interface in java.lang\" class=\"external-link\">fillInStackTrace<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Throwable.html#getCause()\" title=\"class or interface in java.lang\" class=\"external-link\">getCause<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Throwable.html#getLocalizedMessage()\" title=\"class or interface in java.lang\" class=\"external-link\">getLocalizedMessage<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Throwable.html#getMessage()\" title=\"class or interface in java.lang\" class=\"external-link\">getMessage<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Throwable.html#getStackTrace()\" title=\"class or interface in java.lang\" class=\"external-link\">getStackTrace<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Throwable.html#getSuppressed()\" title=\"class or interface in java.lang\" class=\"external-link\">getSuppressed<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Throwable.html#initCause(java.lang.Throwable)\" title=\"class or interface in java.lang\" class=\"external-link\">initCause<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Throwable.html#printStackTrace()\" title=\"class or interface in java.lang\" class=\"external-link\">printStackTrace<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Throwable.html#printStackTrace(java.io.PrintStream)\" title=\"class or interface in java.lang\" class=\"external-link\">printStackTrace<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Throwable.html#printStackTrace(java.io.PrintWriter)\" title=\"class or interface in java.lang\" class=\"external-link\">printStackTrace<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Throwable.html#setStackTrace(java.lang.StackTraceElement%5B%5D)\" title=\"class or interface in java.lang\" class=\"external-link\">setStackTrace<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Throwable.html#toString()\" title=\"class or interface in java.lang\" class=\"external-link\">toString<\/a><\/code><\/div>\n+<div class=\"inherited-list\">\n+<h3 id=\"methods-inherited-from-class-java.lang.Object\">Methods inherited from class&nbsp;java.lang.<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html\" title=\"class or interface in java.lang\" class=\"external-link\">Object<\/a><\/h3>\n+<code><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#clone()\" title=\"class or interface in java.lang\" class=\"external-link\">clone<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#equals(java.lang.Object)\" title=\"class or interface in java.lang\" class=\"external-link\">equals<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#finalize()\" title=\"class or interface in java.lang\" class=\"external-link\">finalize<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#getClass()\" title=\"class or interface in java.lang\" class=\"external-link\">getClass<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#hashCode()\" title=\"class or interface in java.lang\" class=\"external-link\">hashCode<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#notify()\" title=\"class or interface in java.lang\" class=\"external-link\">notify<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#notifyAll()\" title=\"class or interface in java.lang\" class=\"external-link\">notifyAll<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#wait()\" title=\"class or interface in java.lang\" class=\"external-link\">wait<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#wait(long)\" title=\"class or interface in java.lang\" class=\"external-link\">wait<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#wait(long,int)\" title=\"class or interface in java.lang\" class=\"external-link\">wait<\/a><\/code><\/div>\n+<\/section>\n+<\/li>\n+<\/ul>\n+<\/section>\n+<!-- ========= END OF CLASS DATA ========= -->\n+<\/main>\n+<\/div>\n+<\/div>\n+<\/body>\n+<\/html>\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/doc\/jdk\/test\/lib\/hotspot\/ir_framework\/TestFormatException.html","additions":113,"deletions":0,"binary":false,"changes":113,"status":"added"},{"patch":"@@ -0,0 +1,813 @@\n+<!DOCTYPE HTML>\n+<html lang=\"en\">\n+<head>\n+<!-- Generated by javadoc (17) on Wed Apr 14 13:12:12 CEST 2021 -->\n+<title>TestFramework<\/title>\n+<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n+<meta http-equiv=\"Content-Type\" content=\"text\/html; charset=utf-8\">\n+<meta name=\"dc.created\" content=\"2021-04-14\">\n+<meta name=\"description\" content=\"declaration: package: jdk.test.lib.hotspot.ir_framework, class: TestFramework\">\n+<meta name=\"generator\" content=\"javadoc\/ClassWriterImpl\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/..\/..\/..\/..\/stylesheet.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/..\/..\/..\/..\/script-dir\/jquery-ui.min.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/..\/..\/..\/..\/jquery-ui.overrides.css\" title=\"Style\">\n+<script type=\"text\/javascript\" src=\"..\/..\/..\/..\/..\/script.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/..\/..\/..\/..\/script-dir\/jquery-3.5.1.min.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/..\/..\/..\/..\/script-dir\/jquery-ui.min.js\"><\/script>\n+<\/head>\n+<body class=\"class-declaration-page\">\n+<script type=\"text\/javascript\">var evenRowColor = \"even-row-color\";\n+var oddRowColor = \"odd-row-color\";\n+var tableTab = \"table-tab\";\n+var activeTableTab = \"active-table-tab\";\n+var pathtoroot = \"..\/..\/..\/..\/..\/\";\n+loadScripts(document, 'script');<\/script>\n+<noscript>\n+<div>JavaScript is disabled on your browser.<\/div>\n+<\/noscript>\n+<div class=\"flex-box\">\n+<header role=\"banner\" class=\"flex-header\">\n+<nav role=\"navigation\">\n+<!-- ========= START OF TOP NAVBAR ======= -->\n+<div class=\"top-nav\" id=\"navbar-top\">\n+<div class=\"skip-nav\"><a href=\"#skip-navbar-top\" title=\"Skip navigation links\">Skip navigation links<\/a><\/div>\n+<ul id=\"navbar-top-firstrow\" class=\"nav-list\" title=\"Navigation\">\n+<li><a href=\"package-summary.html\">Package<\/a><\/li>\n+<li class=\"nav-bar-cell1-rev\">Class<\/li>\n+<li><a href=\"package-tree.html\">Tree<\/a><\/li>\n+<li><a href=\"..\/..\/..\/..\/..\/index-files\/index-1.html\">Index<\/a><\/li>\n+<li><a href=\"..\/..\/..\/..\/..\/help-doc.html\">Help<\/a><\/li>\n+<\/ul>\n+<\/div>\n+<div class=\"sub-nav\">\n+<div>\n+<ul class=\"sub-nav-list\">\n+<li>Summary:&nbsp;<\/li>\n+<li>Nested&nbsp;|&nbsp;<\/li>\n+<li><a href=\"#field-summary\">Field<\/a>&nbsp;|&nbsp;<\/li>\n+<li><a href=\"#constructor-summary\">Constr<\/a>&nbsp;|&nbsp;<\/li>\n+<li><a href=\"#method-summary\">Method<\/a><\/li>\n+<\/ul>\n+<ul class=\"sub-nav-list\">\n+<li>Detail:&nbsp;<\/li>\n+<li><a href=\"#field-detail\">Field<\/a>&nbsp;|&nbsp;<\/li>\n+<li><a href=\"#constructor-detail\">Constr<\/a>&nbsp;|&nbsp;<\/li>\n+<li><a href=\"#method-detail\">Method<\/a><\/li>\n+<\/ul>\n+<\/div>\n+<div class=\"nav-list-search\"><label for=\"search\">SEARCH:<\/label>\n+<input type=\"text\" id=\"search\" value=\"search\" disabled=\"disabled\">\n+<input type=\"reset\" id=\"reset\" value=\"reset\" disabled=\"disabled\">\n+<\/div>\n+<\/div>\n+<!-- ========= END OF TOP NAVBAR ========= -->\n+<span class=\"skip-nav\" id=\"skip-navbar-top\"><\/span><\/nav>\n+<\/header>\n+<div class=\"flex-content\">\n+<main role=\"main\">\n+<!-- ======== START OF CLASS DATA ======== -->\n+<div class=\"header\">\n+<div class=\"sub-title\"><span class=\"package-label-in-type\">Package<\/span>&nbsp;<a href=\"package-summary.html\">jdk.test.lib.hotspot.ir_framework<\/a><\/div>\n+<h1 title=\"Class TestFramework\" class=\"title\">Class TestFramework<\/h1>\n+<\/div>\n+<div class=\"inheritance\" title=\"Inheritance Tree\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html\" title=\"class or interface in java.lang\" class=\"external-link\">java.lang.Object<\/a>\n+<div class=\"inheritance\">jdk.test.lib.hotspot.ir_framework.TestFramework<\/div>\n+<\/div>\n+<section class=\"description\">\n+<hr>\n+<div class=\"type-signature\"><span class=\"modifiers\">public class <\/span><span class=\"element-name type-name-label\">TestFramework<\/span>\n+<span class=\"extends-implements\">extends <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html\" title=\"class or interface in java.lang\" class=\"external-link\">Object<\/a><\/span><\/div>\n+<div class=\"block\">This class represents the main entry point to the test framework whose main purpose is to perform regex-based checks on\n+ the C2 IR shape emitted by the VM flags <code>-XX:+PrintIdeal<\/code> and <code>-XX:+PrintOptoAssembly<\/code>. The framework can\n+ also be used for other non-IR matching (and non-compiler) tests by providing easy to use annotations for commonly used\n+ testing patterns and compiler control flags.\n+ <p>\n+ The framework offers various annotations to control how your test code should be invoked and being checked. There are\n+ three kinds of tests depending on how much control is needed over the test invocation:\n+ <b>Base tests<\/b> (see <a href=\"Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Test<\/code><\/a>), <b>checked tests<\/b> (see <a href=\"Check.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Check<\/code><\/a>), and <b>custom run tests<\/b>\n+ (see <a href=\"Run.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Run<\/code><\/a>). Each type of test needs to define a unique <i>test method<\/i> that specifies a <a href=\"Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@Test<\/code><\/a>\n+ annotation which represents the test code that is eventually executed by the test framework. More information about\n+ the usage and how to write different tests can be found in <a href=\"Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Test<\/code><\/a>, <a href=\"Check.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Check<\/code><\/a>, and <a href=\"Run.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Run<\/code><\/a>.\n+ <p>\n+ Each test method can specify an arbitrary number of IR rules. This is done by using <a href=\"IR.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@IR<\/code><\/a> annotations which\n+ can define regex strings that are matched on the output of <code>-XX:+PrintIdeal<\/code> and <code>-XX:+PrintOptoAssembly<\/code>.\n+ The matching is done after the test method was (optionally) warmed up and compiled. More information about the usage\n+ and how to write different IR rules can be found at <a href=\"IR.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>IR<\/code><\/a>.\n+ <p>\n+ This framework should be used with the following JTreg setup in your Test.java file in package <i>some.package<\/i>:\n+ <pre>\n+ @library \/test\/lib\n+ @run driver some.package.Test\n+ <\/pre>\n+ Note that even though the framework uses the Whitebox API internally, it is not required to build and enabel it in the\n+ JTreg test if the test itself is not utilizing any Whitebox features directly.\n+ <p>\n+ To specify additional flags, use <a href=\"#runWithFlags(java.lang.String...)\"><code>runWithFlags(String...)<\/code><\/a>, <a href=\"#addFlags(java.lang.String...)\"><code>addFlags(String...)<\/code><\/a>,\n+ <a href=\"#addScenarios(jdk.test.lib.hotspot.ir_framework.Scenario...)\"><code>addScenarios(Scenario...)<\/code><\/a>, or <a href=\"#runWithScenarios(jdk.test.lib.hotspot.ir_framework.Scenario...)\"><code>runWithScenarios(Scenario...)<\/code><\/a> where the scenarios can also be used\n+ to run different flag combinations (instead of specifying multiple JTreg <code>@run<\/code> entries).\n+ <p>\n+ After annotating your test code with the framework specific annotations, the framework needs to be invoked from the\n+ <code>main()<\/code> method of your JTreg test. There are two ways to do so. The first way is by calling the various\n+ <code>runXX()<\/code> methods of <a href=\"TestFramework.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\"><code>TestFramework<\/code><\/a>. The second way, which gives more control, is to create a new\n+ <code>TestFramework<\/code> builder object on which <a href=\"#start()\"><code>start()<\/code><\/a> needs to be eventually called to start the testing.\n+ <p>\n+ The framework is called from the <i>driver VM<\/i> in which the JTreg test is initially run by specifying <code>\n+ @run driver<\/code> in the JTreg header. This strips all additionally specified JTreg VM and Javaoptions.\n+ The framework creates a new <i>flag VM<\/i> with all these flags added again in order to figure out which flags are\n+ required to run the tests specified in the test class (e.g. <code>-XX:+PrintIdeal<\/code> and <code>-XX:+PrintOptoAssembly<\/code>\n+ for IR matching).\n+ <p>\n+ After the flag VM terminates, it starts a new <i>test VM<\/i> which performs the execution of the specified\n+ tests in the test class as described in <a href=\"Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Test<\/code><\/a>, <a href=\"Check.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Check<\/code><\/a>, and <a href=\"Run.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Run<\/code><\/a>.\n+ <p>\n+ In a last step, once the test VM has terminated without exceptions, IR matching is performed if there are any IR\n+ rules and if no VM flags disable it (e.g. not running with <code>-Xint<\/code>, see <a href=\"IR.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>IR<\/code><\/a> for more details).\n+ The IR regex matching is done on the output of <code>-XX:+PrintIdeal<\/code> and <code>-XX:+PrintOptoAssembly<\/code> by parsing\n+ the hotspot_pid file of the test VM. Failing IR rules are reported by throwing a <a href=\"IRViolationException.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\"><code>IRViolationException<\/code><\/a>.<\/div>\n+<dl class=\"notes\">\n+<dt>See Also:<\/dt>\n+<dd><a href=\"Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Test<\/code><\/a>, \n+<a href=\"Check.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Check<\/code><\/a>, \n+<a href=\"Run.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Run<\/code><\/a>, \n+<a href=\"IR.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>IR<\/code><\/a><\/dd>\n+<\/dl>\n+<\/section>\n+<section class=\"summary\">\n+<ul class=\"summary-list\">\n+<!-- =========== FIELD SUMMARY =========== -->\n+<li>\n+<section class=\"field-summary\" id=\"field-summary\">\n+<h2>Field Summary<\/h2>\n+<div class=\"caption\"><span>Fields<\/span><\/div>\n+<div class=\"summary-table three-column-summary\">\n+<div class=\"table-header col-first\">Modifier and Type<\/div>\n+<div class=\"table-header col-second\">Field<\/div>\n+<div class=\"table-header col-last\">Description<\/div>\n+<div class=\"col-first even-row-color\"><code>static <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/util\/Set.html\" title=\"class or interface in java.util\" class=\"external-link\">Set<\/a>&lt;<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a>&gt;<\/code><\/div>\n+<div class=\"col-second even-row-color\"><code><a href=\"#JTREG_WHITELIST_FLAGS\" class=\"member-name-link\">JTREG_WHITELIST_FLAGS<\/a><\/code><\/div>\n+<div class=\"col-last even-row-color\">\n+<div class=\"block\">JTreg can define additional VM (-Dtest.vm.opts) and Javaoptions (-Dtest.java.opts) flags.<\/div>\n+<\/div>\n+<\/div>\n+<\/section>\n+<\/li>\n+<!-- ======== CONSTRUCTOR SUMMARY ======== -->\n+<li>\n+<section class=\"constructor-summary\" id=\"constructor-summary\">\n+<h2>Constructor Summary<\/h2>\n+<div class=\"caption\"><span>Constructors<\/span><\/div>\n+<div class=\"summary-table two-column-summary\">\n+<div class=\"table-header col-first\">Constructor<\/div>\n+<div class=\"table-header col-last\">Description<\/div>\n+<div class=\"col-constructor-name even-row-color\"><code><a href=\"#%3Cinit%3E()\" class=\"member-name-link\">TestFramework<\/a>()<\/code><\/div>\n+<div class=\"col-last even-row-color\">\n+<div class=\"block\">Creates an instance acting as a builder to test the class from which this constructor was invoked from.<\/div>\n+<\/div>\n+<div class=\"col-constructor-name odd-row-color\"><code><a href=\"#%3Cinit%3E(java.lang.Class)\" class=\"member-name-link\">TestFramework<\/a>&#8203;(<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Class.html\" title=\"class or interface in java.lang\" class=\"external-link\">Class<\/a>&lt;?&gt;&nbsp;testClass)<\/code><\/div>\n+<div class=\"col-last odd-row-color\">\n+<div class=\"block\">Creates an instance acting as a builder to test <code>testClass<\/code>.<\/div>\n+<\/div>\n+<\/div>\n+<\/section>\n+<\/li>\n+<!-- ========== METHOD SUMMARY =========== -->\n+<li>\n+<section class=\"method-summary\" id=\"method-summary\">\n+<h2>Method Summary<\/h2>\n+<div id=\"method-summary-table\">\n+<div class=\"table-tabs\" role=\"tablist\" aria-orientation=\"horizontal\"><button id=\"method-summary-table-tab0\" role=\"tab\" aria-selected=\"true\" aria-controls=\"method-summary-table.tabpanel\" tabindex=\"0\" onkeydown=\"switchTab(event)\" onclick=\"show('method-summary-table', 'method-summary-table', 3)\" class=\"active-table-tab\">All Methods<\/button><button id=\"method-summary-table-tab1\" role=\"tab\" aria-selected=\"false\" aria-controls=\"method-summary-table.tabpanel\" tabindex=\"-1\" onkeydown=\"switchTab(event)\" onclick=\"show('method-summary-table', 'method-summary-table-tab1', 3)\" class=\"table-tab\">Static Methods<\/button><button id=\"method-summary-table-tab2\" role=\"tab\" aria-selected=\"false\" aria-controls=\"method-summary-table.tabpanel\" tabindex=\"-1\" onkeydown=\"switchTab(event)\" onclick=\"show('method-summary-table', 'method-summary-table-tab2', 3)\" class=\"table-tab\">Instance Methods<\/button><button id=\"method-summary-table-tab4\" role=\"tab\" aria-selected=\"false\" aria-controls=\"method-summary-table.tabpanel\" tabindex=\"-1\" onkeydown=\"switchTab(event)\" onclick=\"show('method-summary-table', 'method-summary-table-tab4', 3)\" class=\"table-tab\">Concrete Methods<\/button><\/div>\n+<div id=\"method-summary-table.tabpanel\" role=\"tabpanel\">\n+<div class=\"summary-table three-column-summary\" aria-labelledby=\"method-summary-table-tab0\">\n+<div class=\"table-header col-first\">Modifier and Type<\/div>\n+<div class=\"table-header col-second\">Method<\/div>\n+<div class=\"table-header col-last\">Description<\/div>\n+<div class=\"col-first even-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\"><code><a href=\"TestFramework.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestFramework<\/a><\/code><\/div>\n+<div class=\"col-second even-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\"><code><a href=\"#addFlags(java.lang.String...)\" class=\"member-name-link\">addFlags<\/a>&#8203;(<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a>...&nbsp;flags)<\/code><\/div>\n+<div class=\"col-last even-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\">\n+<div class=\"block\">Add VM flags to be used for the test VM.<\/div>\n+<\/div>\n+<div class=\"col-first odd-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\"><code><a href=\"TestFramework.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestFramework<\/a><\/code><\/div>\n+<div class=\"col-second odd-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\"><code><a href=\"#addHelperClasses(java.lang.Class...)\" class=\"member-name-link\">addHelperClasses<\/a>&#8203;(<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Class.html\" title=\"class or interface in java.lang\" class=\"external-link\">Class<\/a>&lt;?&gt;...&nbsp;helperClasses)<\/code><\/div>\n+<div class=\"col-last odd-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\">\n+<div class=\"block\">Add helper classes that can specify additional compile command annotations (<a href=\"ForceCompile.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@ForceCompile<\/code><\/a>,\n+ <a href=\"DontCompile.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@DontCompile<\/code><\/a>, <a href=\"ForceInline.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@ForceInline<\/code><\/a>, <a href=\"DontInline.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@DontInline<\/code><\/a>) to be applied\n+ while testing <code>testClass<\/code> (also see description of <a href=\"TestFramework.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\"><code>TestFramework<\/code><\/a>).<\/div>\n+<\/div>\n+<div class=\"col-first even-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\"><code><a href=\"TestFramework.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestFramework<\/a><\/code><\/div>\n+<div class=\"col-second even-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\"><code><a href=\"#addScenarios(jdk.test.lib.hotspot.ir_framework.Scenario...)\" class=\"member-name-link\">addScenarios<\/a>&#8203;(<a href=\"Scenario.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">Scenario<\/a>...&nbsp;scenarios)<\/code><\/div>\n+<div class=\"col-last even-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\">\n+<div class=\"block\">Add scenarios to be used for the test VM.<\/div>\n+<\/div>\n+<div class=\"col-first odd-row-color method-summary-table method-summary-table-tab1 method-summary-table-tab4\"><code>static void<\/code><\/div>\n+<div class=\"col-second odd-row-color method-summary-table method-summary-table-tab1 method-summary-table-tab4\"><code><a href=\"#assertCompiled(java.lang.reflect.Method)\" class=\"member-name-link\">assertCompiled<\/a>&#8203;(<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/reflect\/Method.html\" title=\"class or interface in java.lang.reflect\" class=\"external-link\">Method<\/a>&nbsp;m)<\/code><\/div>\n+<div class=\"col-last odd-row-color method-summary-table method-summary-table-tab1 method-summary-table-tab4\">\n+<div class=\"block\">Checks if <code>m<\/code> is compiled at any level.<\/div>\n+<\/div>\n+<div class=\"col-first even-row-color method-summary-table method-summary-table-tab1 method-summary-table-tab4\"><code>static void<\/code><\/div>\n+<div class=\"col-second even-row-color method-summary-table method-summary-table-tab1 method-summary-table-tab4\"><code><a href=\"#assertCompiledAtLevel(java.lang.reflect.Method,jdk.test.lib.hotspot.ir_framework.CompLevel)\" class=\"member-name-link\">assertCompiledAtLevel<\/a>&#8203;(<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/reflect\/Method.html\" title=\"class or interface in java.lang.reflect\" class=\"external-link\">Method<\/a>&nbsp;m,\n+ <a href=\"CompLevel.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">CompLevel<\/a>&nbsp;compLevel)<\/code><\/div>\n+<div class=\"col-last even-row-color method-summary-table method-summary-table-tab1 method-summary-table-tab4\">\n+<div class=\"block\">Verifies that <code>m<\/code> is compiled at the specified <code>compLevel<\/code>.<\/div>\n+<\/div>\n+<div class=\"col-first odd-row-color method-summary-table method-summary-table-tab1 method-summary-table-tab4\"><code>static void<\/code><\/div>\n+<div class=\"col-second odd-row-color method-summary-table method-summary-table-tab1 method-summary-table-tab4\"><code><a href=\"#assertCompiledByC1(java.lang.reflect.Method)\" class=\"member-name-link\">assertCompiledByC1<\/a>&#8203;(<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/reflect\/Method.html\" title=\"class or interface in java.lang.reflect\" class=\"external-link\">Method<\/a>&nbsp;m)<\/code><\/div>\n+<div class=\"col-last odd-row-color method-summary-table method-summary-table-tab1 method-summary-table-tab4\">\n+<div class=\"block\">Verifies that <code>m<\/code> is compiled with C1.<\/div>\n+<\/div>\n+<div class=\"col-first even-row-color method-summary-table method-summary-table-tab1 method-summary-table-tab4\"><code>static void<\/code><\/div>\n+<div class=\"col-second even-row-color method-summary-table method-summary-table-tab1 method-summary-table-tab4\"><code><a href=\"#assertCompiledByC2(java.lang.reflect.Method)\" class=\"member-name-link\">assertCompiledByC2<\/a>&#8203;(<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/reflect\/Method.html\" title=\"class or interface in java.lang.reflect\" class=\"external-link\">Method<\/a>&nbsp;m)<\/code><\/div>\n+<div class=\"col-last even-row-color method-summary-table method-summary-table-tab1 method-summary-table-tab4\">\n+<div class=\"block\">Verifies that <code>m<\/code> is compiled with C2.<\/div>\n+<\/div>\n+<div class=\"col-first odd-row-color method-summary-table method-summary-table-tab1 method-summary-table-tab4\"><code>static void<\/code><\/div>\n+<div class=\"col-second odd-row-color method-summary-table method-summary-table-tab1 method-summary-table-tab4\"><code><a href=\"#assertDeoptimizedByC1(java.lang.reflect.Method)\" class=\"member-name-link\">assertDeoptimizedByC1<\/a>&#8203;(<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/reflect\/Method.html\" title=\"class or interface in java.lang.reflect\" class=\"external-link\">Method<\/a>&nbsp;m)<\/code><\/div>\n+<div class=\"col-last odd-row-color method-summary-table method-summary-table-tab1 method-summary-table-tab4\">\n+<div class=\"block\">Verifies that <code>m<\/code> was deoptimized after being C1 compiled.<\/div>\n+<\/div>\n+<div class=\"col-first even-row-color method-summary-table method-summary-table-tab1 method-summary-table-tab4\"><code>static void<\/code><\/div>\n+<div class=\"col-second even-row-color method-summary-table method-summary-table-tab1 method-summary-table-tab4\"><code><a href=\"#assertDeoptimizedByC2(java.lang.reflect.Method)\" class=\"member-name-link\">assertDeoptimizedByC2<\/a>&#8203;(<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/reflect\/Method.html\" title=\"class or interface in java.lang.reflect\" class=\"external-link\">Method<\/a>&nbsp;m)<\/code><\/div>\n+<div class=\"col-last even-row-color method-summary-table method-summary-table-tab1 method-summary-table-tab4\">\n+<div class=\"block\">Verifies that <code>m<\/code> was deoptimized after being C2 compiled.<\/div>\n+<\/div>\n+<div class=\"col-first odd-row-color method-summary-table method-summary-table-tab1 method-summary-table-tab4\"><code>static void<\/code><\/div>\n+<div class=\"col-second odd-row-color method-summary-table method-summary-table-tab1 method-summary-table-tab4\"><code><a href=\"#assertNotCompiled(java.lang.reflect.Method)\" class=\"member-name-link\">assertNotCompiled<\/a>&#8203;(<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/reflect\/Method.html\" title=\"class or interface in java.lang.reflect\" class=\"external-link\">Method<\/a>&nbsp;m)<\/code><\/div>\n+<div class=\"col-last odd-row-color method-summary-table method-summary-table-tab1 method-summary-table-tab4\">\n+<div class=\"block\">Checks if <code>m<\/code> is not compiled at any level.<\/div>\n+<\/div>\n+<div class=\"col-first even-row-color method-summary-table method-summary-table-tab1 method-summary-table-tab4\"><code>static void<\/code><\/div>\n+<div class=\"col-second even-row-color method-summary-table method-summary-table-tab1 method-summary-table-tab4\"><code><a href=\"#compile(java.lang.reflect.Method,jdk.test.lib.hotspot.ir_framework.CompLevel)\" class=\"member-name-link\">compile<\/a>&#8203;(<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/reflect\/Method.html\" title=\"class or interface in java.lang.reflect\" class=\"external-link\">Method<\/a>&nbsp;m,\n+ <a href=\"CompLevel.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">CompLevel<\/a>&nbsp;compLevel)<\/code><\/div>\n+<div class=\"col-last even-row-color method-summary-table method-summary-table-tab1 method-summary-table-tab4\">\n+<div class=\"block\">Compile <code>m<\/code> at compilation level <code>compLevel<\/code>.<\/div>\n+<\/div>\n+<div class=\"col-first odd-row-color method-summary-table method-summary-table-tab1 method-summary-table-tab4\"><code>static void<\/code><\/div>\n+<div class=\"col-second odd-row-color method-summary-table method-summary-table-tab1 method-summary-table-tab4\"><code><a href=\"#deoptimize(java.lang.reflect.Method)\" class=\"member-name-link\">deoptimize<\/a>&#8203;(<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/reflect\/Method.html\" title=\"class or interface in java.lang.reflect\" class=\"external-link\">Method<\/a>&nbsp;m)<\/code><\/div>\n+<div class=\"col-last odd-row-color method-summary-table method-summary-table-tab1 method-summary-table-tab4\">\n+<div class=\"block\">Deoptimize <code>m<\/code>.<\/div>\n+<\/div>\n+<div class=\"col-first even-row-color method-summary-table method-summary-table-tab1 method-summary-table-tab4\"><code>static <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second even-row-color method-summary-table method-summary-table-tab1 method-summary-table-tab4\"><code><a href=\"#getLastTestVMOutput()\" class=\"member-name-link\">getLastTestVMOutput<\/a>()<\/code><\/div>\n+<div class=\"col-last even-row-color method-summary-table method-summary-table-tab1 method-summary-table-tab4\">\n+<div class=\"block\">Get the VM output of the test VM.<\/div>\n+<\/div>\n+<div class=\"col-first odd-row-color method-summary-table method-summary-table-tab1 method-summary-table-tab4\"><code>static boolean<\/code><\/div>\n+<div class=\"col-second odd-row-color method-summary-table method-summary-table-tab1 method-summary-table-tab4\"><code><a href=\"#isC1Compiled(java.lang.reflect.Method)\" class=\"member-name-link\">isC1Compiled<\/a>&#8203;(<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/reflect\/Method.html\" title=\"class or interface in java.lang.reflect\" class=\"external-link\">Method<\/a>&nbsp;m)<\/code><\/div>\n+<div class=\"col-last odd-row-color method-summary-table method-summary-table-tab1 method-summary-table-tab4\">\n+<div class=\"block\">Returns a boolean indicating if <code>m<\/code> is compiled with C1.<\/div>\n+<\/div>\n+<div class=\"col-first even-row-color method-summary-table method-summary-table-tab1 method-summary-table-tab4\"><code>static boolean<\/code><\/div>\n+<div class=\"col-second even-row-color method-summary-table method-summary-table-tab1 method-summary-table-tab4\"><code><a href=\"#isC2Compiled(java.lang.reflect.Method)\" class=\"member-name-link\">isC2Compiled<\/a>&#8203;(<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/reflect\/Method.html\" title=\"class or interface in java.lang.reflect\" class=\"external-link\">Method<\/a>&nbsp;m)<\/code><\/div>\n+<div class=\"col-last even-row-color method-summary-table method-summary-table-tab1 method-summary-table-tab4\">\n+<div class=\"block\">Returns a boolean indicating if <code>m<\/code> is compiled with C2.<\/div>\n+<\/div>\n+<div class=\"col-first odd-row-color method-summary-table method-summary-table-tab1 method-summary-table-tab4\"><code>static boolean<\/code><\/div>\n+<div class=\"col-second odd-row-color method-summary-table method-summary-table-tab1 method-summary-table-tab4\"><code><a href=\"#isCompiled(java.lang.reflect.Method)\" class=\"member-name-link\">isCompiled<\/a>&#8203;(<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/reflect\/Method.html\" title=\"class or interface in java.lang.reflect\" class=\"external-link\">Method<\/a>&nbsp;m)<\/code><\/div>\n+<div class=\"col-last odd-row-color method-summary-table method-summary-table-tab1 method-summary-table-tab4\">\n+<div class=\"block\">Returns a boolean indicating if <code>m<\/code> is compiled at any level.<\/div>\n+<\/div>\n+<div class=\"col-first even-row-color method-summary-table method-summary-table-tab1 method-summary-table-tab4\"><code>static boolean<\/code><\/div>\n+<div class=\"col-second even-row-color method-summary-table method-summary-table-tab1 method-summary-table-tab4\"><code><a href=\"#isCompiledAtLevel(java.lang.reflect.Method,jdk.test.lib.hotspot.ir_framework.CompLevel)\" class=\"member-name-link\">isCompiledAtLevel<\/a>&#8203;(<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/reflect\/Method.html\" title=\"class or interface in java.lang.reflect\" class=\"external-link\">Method<\/a>&nbsp;m,\n+ <a href=\"CompLevel.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">CompLevel<\/a>&nbsp;compLevel)<\/code><\/div>\n+<div class=\"col-last even-row-color method-summary-table method-summary-table-tab1 method-summary-table-tab4\">\n+<div class=\"block\">Returns a boolean indicating if <code>m<\/code> is compiled at the specified <code>compLevel<\/code>.<\/div>\n+<\/div>\n+<div class=\"col-first odd-row-color method-summary-table method-summary-table-tab1 method-summary-table-tab4\"><code>static void<\/code><\/div>\n+<div class=\"col-second odd-row-color method-summary-table method-summary-table-tab1 method-summary-table-tab4\"><code><a href=\"#run()\" class=\"member-name-link\">run<\/a>()<\/code><\/div>\n+<div class=\"col-last odd-row-color method-summary-table method-summary-table-tab1 method-summary-table-tab4\">\n+<div class=\"block\">Tests the class from which this method was invoked from.<\/div>\n+<\/div>\n+<div class=\"col-first even-row-color method-summary-table method-summary-table-tab1 method-summary-table-tab4\"><code>static void<\/code><\/div>\n+<div class=\"col-second even-row-color method-summary-table method-summary-table-tab1 method-summary-table-tab4\"><code><a href=\"#run(java.lang.Class)\" class=\"member-name-link\">run<\/a>&#8203;(<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Class.html\" title=\"class or interface in java.lang\" class=\"external-link\">Class<\/a>&lt;?&gt;&nbsp;testClass)<\/code><\/div>\n+<div class=\"col-last even-row-color method-summary-table method-summary-table-tab1 method-summary-table-tab4\">\n+<div class=\"block\">Tests <code>testClass<\/code>.<\/div>\n+<\/div>\n+<div class=\"col-first odd-row-color method-summary-table method-summary-table-tab1 method-summary-table-tab4\"><code>static void<\/code><\/div>\n+<div class=\"col-second odd-row-color method-summary-table method-summary-table-tab1 method-summary-table-tab4\"><code><a href=\"#runWithFlags(java.lang.Class,java.lang.String...)\" class=\"member-name-link\">runWithFlags<\/a>&#8203;(<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Class.html\" title=\"class or interface in java.lang\" class=\"external-link\">Class<\/a>&lt;?&gt;&nbsp;testClass,\n+ <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a>...&nbsp;flags)<\/code><\/div>\n+<div class=\"col-last odd-row-color method-summary-table method-summary-table-tab1 method-summary-table-tab4\">\n+<div class=\"block\">Tests <code>testClass<\/code>.<\/div>\n+<\/div>\n+<div class=\"col-first even-row-color method-summary-table method-summary-table-tab1 method-summary-table-tab4\"><code>static void<\/code><\/div>\n+<div class=\"col-second even-row-color method-summary-table method-summary-table-tab1 method-summary-table-tab4\"><code><a href=\"#runWithFlags(java.lang.String...)\" class=\"member-name-link\">runWithFlags<\/a>&#8203;(<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a>...&nbsp;flags)<\/code><\/div>\n+<div class=\"col-last even-row-color method-summary-table method-summary-table-tab1 method-summary-table-tab4\">\n+<div class=\"block\">Tests the class from which this method was invoked from.<\/div>\n+<\/div>\n+<div class=\"col-first odd-row-color method-summary-table method-summary-table-tab1 method-summary-table-tab4\"><code>static void<\/code><\/div>\n+<div class=\"col-second odd-row-color method-summary-table method-summary-table-tab1 method-summary-table-tab4\"><code><a href=\"#runWithHelperClasses(java.lang.Class,java.lang.Class...)\" class=\"member-name-link\">runWithHelperClasses<\/a>&#8203;(<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Class.html\" title=\"class or interface in java.lang\" class=\"external-link\">Class<\/a>&lt;?&gt;&nbsp;testClass,\n+ <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Class.html\" title=\"class or interface in java.lang\" class=\"external-link\">Class<\/a>&lt;?&gt;...&nbsp;helperClasses)<\/code><\/div>\n+<div class=\"col-last odd-row-color method-summary-table method-summary-table-tab1 method-summary-table-tab4\">\n+<div class=\"block\">Tests <code>testClass<\/code> which uses <code>helperClasses<\/code> that can specify additional compile command annotations\n+ (<a href=\"ForceCompile.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@ForceCompile<\/code><\/a>, <a href=\"DontCompile.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@DontCompile<\/code><\/a>, <a href=\"ForceInline.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@ForceInline<\/code><\/a>,\n+ <a href=\"DontInline.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@DontInline<\/code><\/a>) to be applied while testing <code>testClass<\/code> (also see description of\n+ <a href=\"TestFramework.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\"><code>TestFramework<\/code><\/a>).<\/div>\n+<\/div>\n+<div class=\"col-first even-row-color method-summary-table method-summary-table-tab1 method-summary-table-tab4\"><code>static void<\/code><\/div>\n+<div class=\"col-second even-row-color method-summary-table method-summary-table-tab1 method-summary-table-tab4\"><code><a href=\"#runWithScenarios(java.lang.Class,jdk.test.lib.hotspot.ir_framework.Scenario...)\" class=\"member-name-link\">runWithScenarios<\/a>&#8203;(<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Class.html\" title=\"class or interface in java.lang\" class=\"external-link\">Class<\/a>&lt;?&gt;&nbsp;testClass,\n+ <a href=\"Scenario.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">Scenario<\/a>...&nbsp;scenarios)<\/code><\/div>\n+<div class=\"col-last even-row-color method-summary-table method-summary-table-tab1 method-summary-table-tab4\">\n+<div class=\"block\">Tests <code>testClass<\/code> A test VM is called for each scenario in <code>scenarios<\/code> by using the specified flags\n+ in the scenario.<\/div>\n+<\/div>\n+<div class=\"col-first odd-row-color method-summary-table method-summary-table-tab1 method-summary-table-tab4\"><code>static void<\/code><\/div>\n+<div class=\"col-second odd-row-color method-summary-table method-summary-table-tab1 method-summary-table-tab4\"><code><a href=\"#runWithScenarios(jdk.test.lib.hotspot.ir_framework.Scenario...)\" class=\"member-name-link\">runWithScenarios<\/a>&#8203;(<a href=\"Scenario.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">Scenario<\/a>...&nbsp;scenarios)<\/code><\/div>\n+<div class=\"col-last odd-row-color method-summary-table method-summary-table-tab1 method-summary-table-tab4\">\n+<div class=\"block\">Tests the class from which this method was invoked from.<\/div>\n+<\/div>\n+<div class=\"col-first even-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\"><code><a href=\"TestFramework.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestFramework<\/a><\/code><\/div>\n+<div class=\"col-second even-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\"><code><a href=\"#setDefaultWarmup(int)\" class=\"member-name-link\">setDefaultWarmup<\/a>&#8203;(int&nbsp;defaultWarmup)<\/code><\/div>\n+<div class=\"col-last even-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\">\n+<div class=\"block\">Set a new default warm-up (overriding the framework default of 2000 at\n+ <a href=\"TestFrameworkExecution.html#WARMUP_ITERATIONS\"><code>TestFrameworkExecution.WARMUP_ITERATIONS<\/code><\/a>) to be applied for all tests that do not specify an explicit\n+ warm-up with <a href=\"Warmup.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@Warmup<\/code><\/a>.<\/div>\n+<\/div>\n+<div class=\"col-first odd-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\"><code>void<\/code><\/div>\n+<div class=\"col-second odd-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\"><code><a href=\"#start()\" class=\"member-name-link\">start<\/a>()<\/code><\/div>\n+<div class=\"col-last odd-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\">\n+<div class=\"block\">Start the testing of the implicitly (by <a href=\"#%3Cinit%3E()\"><code>TestFramework()<\/code><\/a>) or explicitly (by <a href=\"#%3Cinit%3E(java.lang.Class)\"><code>TestFramework(Class)<\/code><\/a>)\n+ set test class.<\/div>\n+<\/div>\n+<\/div>\n+<\/div>\n+<\/div>\n+<div class=\"inherited-list\">\n+<h3 id=\"methods-inherited-from-class-java.lang.Object\">Methods inherited from class&nbsp;java.lang.<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html\" title=\"class or interface in java.lang\" class=\"external-link\">Object<\/a><\/h3>\n+<code><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#clone()\" title=\"class or interface in java.lang\" class=\"external-link\">clone<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#equals(java.lang.Object)\" title=\"class or interface in java.lang\" class=\"external-link\">equals<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#finalize()\" title=\"class or interface in java.lang\" class=\"external-link\">finalize<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#getClass()\" title=\"class or interface in java.lang\" class=\"external-link\">getClass<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#hashCode()\" title=\"class or interface in java.lang\" class=\"external-link\">hashCode<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#notify()\" title=\"class or interface in java.lang\" class=\"external-link\">notify<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#notifyAll()\" title=\"class or interface in java.lang\" class=\"external-link\">notifyAll<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#toString()\" title=\"class or interface in java.lang\" class=\"external-link\">toString<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#wait()\" title=\"class or interface in java.lang\" class=\"external-link\">wait<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#wait(long)\" title=\"class or interface in java.lang\" class=\"external-link\">wait<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#wait(long,int)\" title=\"class or interface in java.lang\" class=\"external-link\">wait<\/a><\/code><\/div>\n+<\/section>\n+<\/li>\n+<\/ul>\n+<\/section>\n+<section class=\"details\">\n+<ul class=\"details-list\">\n+<!-- ============ FIELD DETAIL =========== -->\n+<li>\n+<section class=\"field-details\" id=\"field-detail\">\n+<h2>Field Details<\/h2>\n+<ul class=\"member-list\">\n+<li>\n+<section class=\"detail\" id=\"JTREG_WHITELIST_FLAGS\">\n+<h3>JTREG_WHITELIST_FLAGS<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static final<\/span>&nbsp;<span class=\"return-type\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/util\/Set.html\" title=\"class or interface in java.util\" class=\"external-link\">Set<\/a>&lt;<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a>&gt;<\/span>&nbsp;<span class=\"element-name\">JTREG_WHITELIST_FLAGS<\/span><\/div>\n+<div class=\"block\">JTreg can define additional VM (-Dtest.vm.opts) and Javaoptions (-Dtest.java.opts) flags. IR verification is only\n+ performed when all these additional JTreg flags (does not include additionally added framework and scenario flags\n+ by user code) are whitelisted.\n+\n+ A flag is whitelisted if it is a property flag (starting with -D), -ea, -esa, or if the flag name contains any of\n+ the entries of this list as a substring (partial match).<\/div>\n+<\/section>\n+<\/li>\n+<\/ul>\n+<\/section>\n+<\/li>\n+<!-- ========= CONSTRUCTOR DETAIL ======== -->\n+<li>\n+<section class=\"constructor-details\" id=\"constructor-detail\">\n+<h2>Constructor Details<\/h2>\n+<ul class=\"member-list\">\n+<li>\n+<section class=\"detail\" id=\"&lt;init&gt;()\">\n+<h3>TestFramework<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public<\/span>&nbsp;<span class=\"element-name\">TestFramework<\/span>()<\/div>\n+<div class=\"block\">Creates an instance acting as a builder to test the class from which this constructor was invoked from.\n+ Use this constructor if you want to use multiple run options (flags, helper classes, scenarios).\n+ Use the associated add methods (<a href=\"#addFlags(java.lang.String...)\"><code>addFlags(String...)<\/code><\/a>, <a href=\"#addScenarios(jdk.test.lib.hotspot.ir_framework.Scenario...)\"><code>addScenarios(Scenario...)<\/code><\/a>,\n+ <a href=\"#addHelperClasses(java.lang.Class...)\"><code>addHelperClasses(Class...)<\/code><\/a>) to set up everything and then start the testing by invoking <a href=\"#start()\"><code>start()<\/code><\/a>.<\/div>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"&lt;init&gt;(java.lang.Class)\">\n+<h3>TestFramework<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public<\/span>&nbsp;<span class=\"element-name\">TestFramework<\/span>&#8203;<span class=\"parameters\">(<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Class.html\" title=\"class or interface in java.lang\" class=\"external-link\">Class<\/a>&lt;?&gt;&nbsp;testClass)<\/span><\/div>\n+<div class=\"block\">Creates an instance acting as a builder to test <code>testClass<\/code>.\n+ Use this constructor if you want to use multiple run options (flags, helper classes, scenarios).\n+ Use the associated add methods (<a href=\"#addFlags(java.lang.String...)\"><code>addFlags(String...)<\/code><\/a>, @link #addScenarios(Scenario...)},\n+ <a href=\"#addHelperClasses(java.lang.Class...)\"><code>addHelperClasses(Class...)<\/code><\/a>) to set up everything and then start the testing by invoking <a href=\"#start()\"><code>start()<\/code><\/a>.<\/div>\n+<dl class=\"notes\">\n+<dt>Parameters:<\/dt>\n+<dd><code>testClass<\/code> - the class to be tested by the framework.<\/dd>\n+<dt>See Also:<\/dt>\n+<dd><a href=\"#%3Cinit%3E()\"><code>TestFramework()<\/code><\/a><\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<\/ul>\n+<\/section>\n+<\/li>\n+<!-- ============ METHOD DETAIL ========== -->\n+<li>\n+<section class=\"method-details\" id=\"method-detail\">\n+<h2>Method Details<\/h2>\n+<ul class=\"member-list\">\n+<li>\n+<section class=\"detail\" id=\"run()\">\n+<h3>run<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static<\/span>&nbsp;<span class=\"return-type\">void<\/span>&nbsp;<span class=\"element-name\">run<\/span>()<\/div>\n+<div class=\"block\">Tests the class from which this method was invoked from.<\/div>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"run(java.lang.Class)\">\n+<h3>run<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static<\/span>&nbsp;<span class=\"return-type\">void<\/span>&nbsp;<span class=\"element-name\">run<\/span>&#8203;<span class=\"parameters\">(<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Class.html\" title=\"class or interface in java.lang\" class=\"external-link\">Class<\/a>&lt;?&gt;&nbsp;testClass)<\/span><\/div>\n+<div class=\"block\">Tests <code>testClass<\/code>.<\/div>\n+<dl class=\"notes\">\n+<dt>Parameters:<\/dt>\n+<dd><code>testClass<\/code> - the class to be tested by the framework.<\/dd>\n+<dt>See Also:<\/dt>\n+<dd><a href=\"#run()\"><code>run()<\/code><\/a><\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"runWithFlags(java.lang.String...)\">\n+<h3>runWithFlags<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static<\/span>&nbsp;<span class=\"return-type\">void<\/span>&nbsp;<span class=\"element-name\">runWithFlags<\/span>&#8203;<span class=\"parameters\">(<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a>...&nbsp;flags)<\/span><\/div>\n+<div class=\"block\">Tests the class from which this method was invoked from. The test VM is called with the specified <code>flags<\/code>.\n+ <ul>\n+     <li><p>The <code>flags<\/code> override any set VM or Javaoptions flags by JTreg by default.<p>\n+            Use <code>-DPreferCommandLineFlags=true<\/code> if you want to prefer the JTreg VM and  Javaoptions flags over\n+            the specified <code>flags<\/code> of this method.<\/li>\n+     <li><p>If you want to run your entire JTreg test with additional flags, use this method.<\/li>\n+     <li><p>If you want to run your JTreg test with multiple flag combinations, use\n+            <a href=\"#runWithScenarios(jdk.test.lib.hotspot.ir_framework.Scenario...)\"><code>runWithScenarios(Scenario...)<\/code><\/a><\/li>\n+ <\/ul><\/div>\n+<dl class=\"notes\">\n+<dt>Parameters:<\/dt>\n+<dd><code>flags<\/code> - VM flags to be used for the test VM.<\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"runWithFlags(java.lang.Class,java.lang.String...)\">\n+<h3>runWithFlags<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static<\/span>&nbsp;<span class=\"return-type\">void<\/span>&nbsp;<span class=\"element-name\">runWithFlags<\/span>&#8203;<span class=\"parameters\">(<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Class.html\" title=\"class or interface in java.lang\" class=\"external-link\">Class<\/a>&lt;?&gt;&nbsp;testClass,\n+ <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a>...&nbsp;flags)<\/span><\/div>\n+<div class=\"block\">Tests <code>testClass<\/code>. The test VM is called with the specified <code>flags<\/code>.\n+ <ul>\n+     <li><p>The <code>flags<\/code> override any set VM or Javaoptions flags by JTreg by default.<p>\n+            Use <code>-DPreferCommandLineFlags=true<\/code> if you want to prefer the JTreg VM and  Javaoptions flags over\n+            the specified <code>flags<\/code> of this method.<\/li>\n+     <li><p>If you want to run your entire JTreg test with additional flags, use this method.<\/li>\n+     <li><p>If you want to run your JTreg test with multiple flag combinations, use\n+            <a href=\"#runWithScenarios(jdk.test.lib.hotspot.ir_framework.Scenario...)\"><code>runWithScenarios(Scenario...)<\/code><\/a><\/li>\n+ <\/ul><\/div>\n+<dl class=\"notes\">\n+<dt>Parameters:<\/dt>\n+<dd><code>testClass<\/code> - the class to be tested by the framework.<\/dd>\n+<dd><code>flags<\/code> - VM flags to be used for the test VM.<\/dd>\n+<dt>See Also:<\/dt>\n+<dd><a href=\"#runWithFlags(java.lang.String...)\"><code>runWithFlags(String...)<\/code><\/a><\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"runWithHelperClasses(java.lang.Class,java.lang.Class...)\">\n+<h3>runWithHelperClasses<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static<\/span>&nbsp;<span class=\"return-type\">void<\/span>&nbsp;<span class=\"element-name\">runWithHelperClasses<\/span>&#8203;<span class=\"parameters\">(<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Class.html\" title=\"class or interface in java.lang\" class=\"external-link\">Class<\/a>&lt;?&gt;&nbsp;testClass,\n+ <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Class.html\" title=\"class or interface in java.lang\" class=\"external-link\">Class<\/a>&lt;?&gt;...&nbsp;helperClasses)<\/span><\/div>\n+<div class=\"block\">Tests <code>testClass<\/code> which uses <code>helperClasses<\/code> that can specify additional compile command annotations\n+ (<a href=\"ForceCompile.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@ForceCompile<\/code><\/a>, <a href=\"DontCompile.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@DontCompile<\/code><\/a>, <a href=\"ForceInline.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@ForceInline<\/code><\/a>,\n+ <a href=\"DontInline.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@DontInline<\/code><\/a>) to be applied while testing <code>testClass<\/code> (also see description of\n+ <a href=\"TestFramework.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\"><code>TestFramework<\/code><\/a>).\n+ <ul>\n+     <li><p>If a helper class is not in the same file as the test class, make sure that JTreg compiles it by using\n+     @compile in the JTreg header comment block.<\/li>\n+     <li><p>If a class is used by the test class that does not specify any compile command annotations, you do not\n+     need to include it in <code>helperClasses<\/code>. If no helper class specifies any compile commands, consider\n+     using <a href=\"#run()\"><code>run()<\/code><\/a> or <a href=\"#run(java.lang.Class)\"><code>run(Class)<\/code><\/a>.<\/li>\n+ <\/ul><\/div>\n+<dl class=\"notes\">\n+<dt>Parameters:<\/dt>\n+<dd><code>testClass<\/code> - the class to be tested by the framework.<\/dd>\n+<dd><code>helperClasses<\/code> - helper classes containing compile command annotations (<a href=\"ForceCompile.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>ForceCompile<\/code><\/a>,\n+                      <a href=\"DontCompile.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>DontCompile<\/code><\/a>, <a href=\"ForceInline.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>ForceInline<\/code><\/a>, <a href=\"DontInline.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>DontInline<\/code><\/a>) to be applied\n+                      while testing <code>testClass<\/code> (also see description of <a href=\"TestFramework.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\"><code>TestFramework<\/code><\/a>).<\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"runWithScenarios(jdk.test.lib.hotspot.ir_framework.Scenario...)\">\n+<h3>runWithScenarios<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static<\/span>&nbsp;<span class=\"return-type\">void<\/span>&nbsp;<span class=\"element-name\">runWithScenarios<\/span>&#8203;<span class=\"parameters\">(<a href=\"Scenario.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">Scenario<\/a>...&nbsp;scenarios)<\/span><\/div>\n+<div class=\"block\">Tests the class from which this method was invoked from. A test VM is called for each scenario in <code>scenarios<\/code>\n+ by using the specified flags in the scenario.\n+ <ul>\n+     <li><p>If there is only one scenario, consider using <a href=\"#runWithFlags(java.lang.String...)\"><code>runWithFlags(String...)<\/code><\/a>.<\/li>\n+     <li><p>The scenario flags override any VM or Javaoptions set by JTreg by default.<p>\n+            Use <code>-DPreferCommandLineFlags=true<\/code> if you want to prefer the Java and VM options over the\n+            scenario flags.<\/li>\n+ <\/ul><\/div>\n+<dl class=\"notes\">\n+<dt>Parameters:<\/dt>\n+<dd><code>scenarios<\/code> - scenarios which specify specific flags for the test VM.<\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"runWithScenarios(java.lang.Class,jdk.test.lib.hotspot.ir_framework.Scenario...)\">\n+<h3>runWithScenarios<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static<\/span>&nbsp;<span class=\"return-type\">void<\/span>&nbsp;<span class=\"element-name\">runWithScenarios<\/span>&#8203;<span class=\"parameters\">(<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Class.html\" title=\"class or interface in java.lang\" class=\"external-link\">Class<\/a>&lt;?&gt;&nbsp;testClass,\n+ <a href=\"Scenario.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">Scenario<\/a>...&nbsp;scenarios)<\/span><\/div>\n+<div class=\"block\">Tests <code>testClass<\/code> A test VM is called for each scenario in <code>scenarios<\/code> by using the specified flags\n+ in the scenario.\n+ <ul>\n+     <li><p>If there is only one scenario, consider using <a href=\"#runWithFlags(java.lang.String...)\"><code>runWithFlags(String...)<\/code><\/a>.<\/li>\n+     <li><p>The scenario flags override any VM or Javaoptions set by JTreg by default.<p>\n+            Use <code>-DPreferCommandLineFlags=true<\/code> if you want to prefer the Java and VM options over the\n+            scenario flags.<\/li>\n+ <\/ul><\/div>\n+<dl class=\"notes\">\n+<dt>Parameters:<\/dt>\n+<dd><code>testClass<\/code> - the class to be tested by the framework.<\/dd>\n+<dd><code>scenarios<\/code> - scenarios which specify specific flags for the test VM.<\/dd>\n+<dt>See Also:<\/dt>\n+<dd><a href=\"#runWithScenarios(jdk.test.lib.hotspot.ir_framework.Scenario...)\"><code>runWithScenarios(Scenario...)<\/code><\/a><\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"addFlags(java.lang.String...)\">\n+<h3>addFlags<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public<\/span>&nbsp;<span class=\"return-type\"><a href=\"TestFramework.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestFramework<\/a><\/span>&nbsp;<span class=\"element-name\">addFlags<\/span>&#8203;<span class=\"parameters\">(<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a>...&nbsp;flags)<\/span><\/div>\n+<div class=\"block\">Add VM flags to be used for the test VM. These flags override any VM or Javaoptions set by JTreg by default.<p>\n+ Use <code>-DPreferCommandLineFlags=true<\/code> if you want to prefer the VM or Javaoptions over the scenario flags.\n+\n+ <p>\n+ The testing can be started by invoking <a href=\"#start()\"><code>start()<\/code><\/a><\/div>\n+<dl class=\"notes\">\n+<dt>Parameters:<\/dt>\n+<dd><code>flags<\/code> - VM options to be applied to the test VM.<\/dd>\n+<dt>Returns:<\/dt>\n+<dd>the same framework instance.<\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"addHelperClasses(java.lang.Class...)\">\n+<h3>addHelperClasses<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public<\/span>&nbsp;<span class=\"return-type\"><a href=\"TestFramework.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestFramework<\/a><\/span>&nbsp;<span class=\"element-name\">addHelperClasses<\/span>&#8203;<span class=\"parameters\">(<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Class.html\" title=\"class or interface in java.lang\" class=\"external-link\">Class<\/a>&lt;?&gt;...&nbsp;helperClasses)<\/span><\/div>\n+<div class=\"block\">Add helper classes that can specify additional compile command annotations (<a href=\"ForceCompile.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@ForceCompile<\/code><\/a>,\n+ <a href=\"DontCompile.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@DontCompile<\/code><\/a>, <a href=\"ForceInline.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@ForceInline<\/code><\/a>, <a href=\"DontInline.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@DontInline<\/code><\/a>) to be applied\n+ while testing <code>testClass<\/code> (also see description of <a href=\"TestFramework.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\"><code>TestFramework<\/code><\/a>).\n+ <ul>\n+     <li><p>If a helper class is not in the same file as the test class, make sure that JTreg compiles it by using\n+            <code>@compile<\/code> in the JTreg header comment block.<\/li>\n+     <li><p>If a class is used by the test class that does not specify any compile command annotations, you do not\n+            need to include it with this method. If no helper class specifies any compile commands, you do\n+            not need to call this method at all.<\/li>\n+ <\/ul>\n+\n+ <p>\n+ The testing can be started by invoking <a href=\"#start()\"><code>start()<\/code><\/a><\/div>\n+<dl class=\"notes\">\n+<dt>Parameters:<\/dt>\n+<dd><code>helperClasses<\/code> - helper classes containing compile command annotations (<a href=\"ForceCompile.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>ForceCompile<\/code><\/a>,\n+                      <a href=\"DontCompile.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>DontCompile<\/code><\/a>, <a href=\"ForceInline.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>ForceInline<\/code><\/a>, <a href=\"DontInline.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>DontInline<\/code><\/a>) to be applied\n+                      while testing <code>testClass<\/code> (also see description of <a href=\"TestFramework.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\"><code>TestFramework<\/code><\/a>).<\/dd>\n+<dt>Returns:<\/dt>\n+<dd>the same framework instance.<\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"addScenarios(jdk.test.lib.hotspot.ir_framework.Scenario...)\">\n+<h3>addScenarios<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public<\/span>&nbsp;<span class=\"return-type\"><a href=\"TestFramework.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestFramework<\/a><\/span>&nbsp;<span class=\"element-name\">addScenarios<\/span>&#8203;<span class=\"parameters\">(<a href=\"Scenario.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">Scenario<\/a>...&nbsp;scenarios)<\/span><\/div>\n+<div class=\"block\">Add scenarios to be used for the test VM. A test VM is called for each scenario in <code>scenarios<\/code> by using the\n+ specified VM flags in the scenario. The scenario flags override any flags set by <a href=\"#addFlags(java.lang.String...)\"><code>addFlags(String...)<\/code><\/a>\n+ and thus also override any VM or Javaoptions set by JTreg by default.<p>\n+ Use <code>-DPreferCommandLineFlags=true<\/code> if you want to prefer the VM and Javaoptions over the scenario flags.\n+\n+ <p>\n+ The testing can be started by invoking <a href=\"#start()\"><code>start()<\/code><\/a><\/div>\n+<dl class=\"notes\">\n+<dt>Parameters:<\/dt>\n+<dd><code>scenarios<\/code> - scenarios which specify specific flags for the test VM.<\/dd>\n+<dt>Returns:<\/dt>\n+<dd>the same framework instance.<\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"start()\">\n+<h3>start<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public<\/span>&nbsp;<span class=\"return-type\">void<\/span>&nbsp;<span class=\"element-name\">start<\/span>()<\/div>\n+<div class=\"block\">Start the testing of the implicitly (by <a href=\"#%3Cinit%3E()\"><code>TestFramework()<\/code><\/a>) or explicitly (by <a href=\"#%3Cinit%3E(java.lang.Class)\"><code>TestFramework(Class)<\/code><\/a>)\n+ set test class.<\/div>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"setDefaultWarmup(int)\">\n+<h3>setDefaultWarmup<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public<\/span>&nbsp;<span class=\"return-type\"><a href=\"TestFramework.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestFramework<\/a><\/span>&nbsp;<span class=\"element-name\">setDefaultWarmup<\/span>&#8203;<span class=\"parameters\">(int&nbsp;defaultWarmup)<\/span><\/div>\n+<div class=\"block\">Set a new default warm-up (overriding the framework default of 2000 at\n+ <a href=\"TestFrameworkExecution.html#WARMUP_ITERATIONS\"><code>TestFrameworkExecution.WARMUP_ITERATIONS<\/code><\/a>) to be applied for all tests that do not specify an explicit\n+ warm-up with <a href=\"Warmup.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@Warmup<\/code><\/a>.<\/div>\n+<dl class=\"notes\">\n+<dt>Parameters:<\/dt>\n+<dd><code>defaultWarmup<\/code> - a new non-negative default warm-up.<\/dd>\n+<dt>Returns:<\/dt>\n+<dd>the same framework instance.<\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"getLastTestVMOutput()\">\n+<h3>getLastTestVMOutput<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static<\/span>&nbsp;<span class=\"return-type\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/span>&nbsp;<span class=\"element-name\">getLastTestVMOutput<\/span>()<\/div>\n+<div class=\"block\">Get the VM output of the test VM. Use <code>-DVerbose=true<\/code> to enable more debug information. If scenarios\n+ were run, use <a href=\"Scenario.html#getTestVMOutput()\"><code>Scenario.getTestVMOutput()<\/code><\/a>.<\/div>\n+<dl class=\"notes\">\n+<dt>Returns:<\/dt>\n+<dd>the last test VM output.<\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"compile(java.lang.reflect.Method,jdk.test.lib.hotspot.ir_framework.CompLevel)\">\n+<h3>compile<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static<\/span>&nbsp;<span class=\"return-type\">void<\/span>&nbsp;<span class=\"element-name\">compile<\/span>&#8203;<span class=\"parameters\">(<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/reflect\/Method.html\" title=\"class or interface in java.lang.reflect\" class=\"external-link\">Method<\/a>&nbsp;m,\n+ <a href=\"CompLevel.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">CompLevel<\/a>&nbsp;compLevel)<\/span><\/div>\n+<div class=\"block\">Compile <code>m<\/code> at compilation level <code>compLevel<\/code>. <code>m<\/code> is first enqueued and might not be compiled,\n+ yet, upon returning from this method.<\/div>\n+<dl class=\"notes\">\n+<dt>Parameters:<\/dt>\n+<dd><code>m<\/code> - the method to be compiled.<\/dd>\n+<dd><code>compLevel<\/code> - the (valid) compilation level at which the method should be compiled.<\/dd>\n+<dt>Throws:<\/dt>\n+<dd><code><a href=\"TestRunException.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestRunException<\/a><\/code> - if compilation level is <a href=\"CompLevel.html#SKIP\"><code>CompLevel.SKIP<\/code><\/a> or <a href=\"CompLevel.html#WAIT_FOR_COMPILATION\"><code>CompLevel.WAIT_FOR_COMPILATION<\/code><\/a>.<\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"deoptimize(java.lang.reflect.Method)\">\n+<h3>deoptimize<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static<\/span>&nbsp;<span class=\"return-type\">void<\/span>&nbsp;<span class=\"element-name\">deoptimize<\/span>&#8203;<span class=\"parameters\">(<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/reflect\/Method.html\" title=\"class or interface in java.lang.reflect\" class=\"external-link\">Method<\/a>&nbsp;m)<\/span><\/div>\n+<div class=\"block\">Deoptimize <code>m<\/code>.<\/div>\n+<dl class=\"notes\">\n+<dt>Parameters:<\/dt>\n+<dd><code>m<\/code> - the method to be deoptimized.<\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"isCompiled(java.lang.reflect.Method)\">\n+<h3>isCompiled<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static<\/span>&nbsp;<span class=\"return-type\">boolean<\/span>&nbsp;<span class=\"element-name\">isCompiled<\/span>&#8203;<span class=\"parameters\">(<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/reflect\/Method.html\" title=\"class or interface in java.lang.reflect\" class=\"external-link\">Method<\/a>&nbsp;m)<\/span><\/div>\n+<div class=\"block\">Returns a boolean indicating if <code>m<\/code> is compiled at any level.<\/div>\n+<dl class=\"notes\">\n+<dt>Parameters:<\/dt>\n+<dd><code>m<\/code> - the method to be checked.<\/dd>\n+<dt>Returns:<\/dt>\n+<dd><code>true<\/code> if <code>m<\/code> is compiled at any level;\n+         <code>false<\/code> otherwise.<\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"isC1Compiled(java.lang.reflect.Method)\">\n+<h3>isC1Compiled<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static<\/span>&nbsp;<span class=\"return-type\">boolean<\/span>&nbsp;<span class=\"element-name\">isC1Compiled<\/span>&#8203;<span class=\"parameters\">(<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/reflect\/Method.html\" title=\"class or interface in java.lang.reflect\" class=\"external-link\">Method<\/a>&nbsp;m)<\/span><\/div>\n+<div class=\"block\">Returns a boolean indicating if <code>m<\/code> is compiled with C1.<\/div>\n+<dl class=\"notes\">\n+<dt>Parameters:<\/dt>\n+<dd><code>m<\/code> - the method to be checked.<\/dd>\n+<dt>Returns:<\/dt>\n+<dd><code>true<\/code> if <code>m<\/code> is compiled with C1;\n+         <code>false<\/code> otherwise.<\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"isC2Compiled(java.lang.reflect.Method)\">\n+<h3>isC2Compiled<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static<\/span>&nbsp;<span class=\"return-type\">boolean<\/span>&nbsp;<span class=\"element-name\">isC2Compiled<\/span>&#8203;<span class=\"parameters\">(<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/reflect\/Method.html\" title=\"class or interface in java.lang.reflect\" class=\"external-link\">Method<\/a>&nbsp;m)<\/span><\/div>\n+<div class=\"block\">Returns a boolean indicating if <code>m<\/code> is compiled with C2.<\/div>\n+<dl class=\"notes\">\n+<dt>Parameters:<\/dt>\n+<dd><code>m<\/code> - the method to be checked.<\/dd>\n+<dt>Returns:<\/dt>\n+<dd><code>true<\/code> if <code>m<\/code> is compiled with C2;\n+         <code>false<\/code> otherwise.<\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"isCompiledAtLevel(java.lang.reflect.Method,jdk.test.lib.hotspot.ir_framework.CompLevel)\">\n+<h3>isCompiledAtLevel<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static<\/span>&nbsp;<span class=\"return-type\">boolean<\/span>&nbsp;<span class=\"element-name\">isCompiledAtLevel<\/span>&#8203;<span class=\"parameters\">(<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/reflect\/Method.html\" title=\"class or interface in java.lang.reflect\" class=\"external-link\">Method<\/a>&nbsp;m,\n+ <a href=\"CompLevel.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">CompLevel<\/a>&nbsp;compLevel)<\/span><\/div>\n+<div class=\"block\">Returns a boolean indicating if <code>m<\/code> is compiled at the specified <code>compLevel<\/code>.<\/div>\n+<dl class=\"notes\">\n+<dt>Parameters:<\/dt>\n+<dd><code>m<\/code> - the method to be checked.<\/dd>\n+<dd><code>compLevel<\/code> - the compilation level.<\/dd>\n+<dt>Returns:<\/dt>\n+<dd><code>true<\/code> if <code>m<\/code> is compiled at <code>compLevel<\/code>;\n+         <code>false<\/code> otherwise.<\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"assertCompiled(java.lang.reflect.Method)\">\n+<h3>assertCompiled<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static<\/span>&nbsp;<span class=\"return-type\">void<\/span>&nbsp;<span class=\"element-name\">assertCompiled<\/span>&#8203;<span class=\"parameters\">(<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/reflect\/Method.html\" title=\"class or interface in java.lang.reflect\" class=\"external-link\">Method<\/a>&nbsp;m)<\/span><\/div>\n+<div class=\"block\">Checks if <code>m<\/code> is compiled at any level.<\/div>\n+<dl class=\"notes\">\n+<dt>Parameters:<\/dt>\n+<dd><code>m<\/code> - the method to be checked.<\/dd>\n+<dt>Throws:<\/dt>\n+<dd><code><a href=\"TestRunException.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestRunException<\/a><\/code> - if <code>m<\/code> is not compiled at any level.<\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"assertNotCompiled(java.lang.reflect.Method)\">\n+<h3>assertNotCompiled<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static<\/span>&nbsp;<span class=\"return-type\">void<\/span>&nbsp;<span class=\"element-name\">assertNotCompiled<\/span>&#8203;<span class=\"parameters\">(<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/reflect\/Method.html\" title=\"class or interface in java.lang.reflect\" class=\"external-link\">Method<\/a>&nbsp;m)<\/span><\/div>\n+<div class=\"block\">Checks if <code>m<\/code> is not compiled at any level.<\/div>\n+<dl class=\"notes\">\n+<dt>Parameters:<\/dt>\n+<dd><code>m<\/code> - the method to be checked.<\/dd>\n+<dt>Throws:<\/dt>\n+<dd><code><a href=\"TestRunException.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestRunException<\/a><\/code> - if <code>m<\/code> is compiled at any level.<\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"assertCompiledByC1(java.lang.reflect.Method)\">\n+<h3>assertCompiledByC1<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static<\/span>&nbsp;<span class=\"return-type\">void<\/span>&nbsp;<span class=\"element-name\">assertCompiledByC1<\/span>&#8203;<span class=\"parameters\">(<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/reflect\/Method.html\" title=\"class or interface in java.lang.reflect\" class=\"external-link\">Method<\/a>&nbsp;m)<\/span><\/div>\n+<div class=\"block\">Verifies that <code>m<\/code> is compiled with C1.<\/div>\n+<dl class=\"notes\">\n+<dt>Parameters:<\/dt>\n+<dd><code>m<\/code> - the method to be verified.<\/dd>\n+<dt>Throws:<\/dt>\n+<dd><code><a href=\"TestRunException.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestRunException<\/a><\/code> - if <code>m<\/code> is not compiled with C1.<\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"assertCompiledByC2(java.lang.reflect.Method)\">\n+<h3>assertCompiledByC2<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static<\/span>&nbsp;<span class=\"return-type\">void<\/span>&nbsp;<span class=\"element-name\">assertCompiledByC2<\/span>&#8203;<span class=\"parameters\">(<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/reflect\/Method.html\" title=\"class or interface in java.lang.reflect\" class=\"external-link\">Method<\/a>&nbsp;m)<\/span><\/div>\n+<div class=\"block\">Verifies that <code>m<\/code> is compiled with C2.<\/div>\n+<dl class=\"notes\">\n+<dt>Parameters:<\/dt>\n+<dd><code>m<\/code> - the method to be checked.<\/dd>\n+<dt>Throws:<\/dt>\n+<dd><code><a href=\"TestRunException.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestRunException<\/a><\/code> - if <code>m<\/code> is not compiled with C2.<\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"assertCompiledAtLevel(java.lang.reflect.Method,jdk.test.lib.hotspot.ir_framework.CompLevel)\">\n+<h3>assertCompiledAtLevel<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static<\/span>&nbsp;<span class=\"return-type\">void<\/span>&nbsp;<span class=\"element-name\">assertCompiledAtLevel<\/span>&#8203;<span class=\"parameters\">(<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/reflect\/Method.html\" title=\"class or interface in java.lang.reflect\" class=\"external-link\">Method<\/a>&nbsp;m,\n+ <a href=\"CompLevel.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">CompLevel<\/a>&nbsp;compLevel)<\/span><\/div>\n+<div class=\"block\">Verifies that <code>m<\/code> is compiled at the specified <code>compLevel<\/code>.<\/div>\n+<dl class=\"notes\">\n+<dt>Parameters:<\/dt>\n+<dd><code>m<\/code> - the method to be checked.<\/dd>\n+<dd><code>compLevel<\/code> - the compilation level.<\/dd>\n+<dt>Throws:<\/dt>\n+<dd><code><a href=\"TestRunException.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestRunException<\/a><\/code> - if <code>m<\/code> is not compiled at <code>compLevel<\/code>.<\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"assertDeoptimizedByC1(java.lang.reflect.Method)\">\n+<h3>assertDeoptimizedByC1<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static<\/span>&nbsp;<span class=\"return-type\">void<\/span>&nbsp;<span class=\"element-name\">assertDeoptimizedByC1<\/span>&#8203;<span class=\"parameters\">(<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/reflect\/Method.html\" title=\"class or interface in java.lang.reflect\" class=\"external-link\">Method<\/a>&nbsp;m)<\/span><\/div>\n+<div class=\"block\">Verifies that <code>m<\/code> was deoptimized after being C1 compiled.<\/div>\n+<dl class=\"notes\">\n+<dt>Parameters:<\/dt>\n+<dd><code>m<\/code> - the method to be checked.<\/dd>\n+<dt>Throws:<\/dt>\n+<dd><code><a href=\"TestRunException.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestRunException<\/a><\/code> - if <code>m<\/code> is was not deoptimized after being C1 compiled.<\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"assertDeoptimizedByC2(java.lang.reflect.Method)\">\n+<h3>assertDeoptimizedByC2<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static<\/span>&nbsp;<span class=\"return-type\">void<\/span>&nbsp;<span class=\"element-name\">assertDeoptimizedByC2<\/span>&#8203;<span class=\"parameters\">(<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/reflect\/Method.html\" title=\"class or interface in java.lang.reflect\" class=\"external-link\">Method<\/a>&nbsp;m)<\/span><\/div>\n+<div class=\"block\">Verifies that <code>m<\/code> was deoptimized after being C2 compiled.<\/div>\n+<dl class=\"notes\">\n+<dt>Parameters:<\/dt>\n+<dd><code>m<\/code> - the method to be checked.<\/dd>\n+<dt>Throws:<\/dt>\n+<dd><code><a href=\"TestRunException.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestRunException<\/a><\/code> - if <code>m<\/code> is was not deoptimized after being C2 compiled.<\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<\/ul>\n+<\/section>\n+<\/li>\n+<\/ul>\n+<\/section>\n+<!-- ========= END OF CLASS DATA ========= -->\n+<\/main>\n+<\/div>\n+<\/div>\n+<\/body>\n+<\/html>\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/doc\/jdk\/test\/lib\/hotspot\/ir_framework\/TestFramework.html","additions":813,"deletions":0,"binary":false,"changes":813,"status":"added"},{"patch":"@@ -0,0 +1,114 @@\n+<!DOCTYPE HTML>\n+<html lang=\"en\">\n+<head>\n+<!-- Generated by javadoc (17) on Wed Apr 14 13:12:12 CEST 2021 -->\n+<title>TestFrameworkException<\/title>\n+<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n+<meta http-equiv=\"Content-Type\" content=\"text\/html; charset=utf-8\">\n+<meta name=\"dc.created\" content=\"2021-04-14\">\n+<meta name=\"description\" content=\"declaration: package: jdk.test.lib.hotspot.ir_framework, class: TestFrameworkException\">\n+<meta name=\"generator\" content=\"javadoc\/ClassWriterImpl\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/..\/..\/..\/..\/stylesheet.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/..\/..\/..\/..\/script-dir\/jquery-ui.min.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/..\/..\/..\/..\/jquery-ui.overrides.css\" title=\"Style\">\n+<script type=\"text\/javascript\" src=\"..\/..\/..\/..\/..\/script.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/..\/..\/..\/..\/script-dir\/jquery-3.5.1.min.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/..\/..\/..\/..\/script-dir\/jquery-ui.min.js\"><\/script>\n+<\/head>\n+<body class=\"class-declaration-page\">\n+<script type=\"text\/javascript\">var pathtoroot = \"..\/..\/..\/..\/..\/\";\n+loadScripts(document, 'script');<\/script>\n+<noscript>\n+<div>JavaScript is disabled on your browser.<\/div>\n+<\/noscript>\n+<div class=\"flex-box\">\n+<header role=\"banner\" class=\"flex-header\">\n+<nav role=\"navigation\">\n+<!-- ========= START OF TOP NAVBAR ======= -->\n+<div class=\"top-nav\" id=\"navbar-top\">\n+<div class=\"skip-nav\"><a href=\"#skip-navbar-top\" title=\"Skip navigation links\">Skip navigation links<\/a><\/div>\n+<ul id=\"navbar-top-firstrow\" class=\"nav-list\" title=\"Navigation\">\n+<li><a href=\"package-summary.html\">Package<\/a><\/li>\n+<li class=\"nav-bar-cell1-rev\">Class<\/li>\n+<li><a href=\"package-tree.html\">Tree<\/a><\/li>\n+<li><a href=\"..\/..\/..\/..\/..\/index-files\/index-1.html\">Index<\/a><\/li>\n+<li><a href=\"..\/..\/..\/..\/..\/help-doc.html\">Help<\/a><\/li>\n+<\/ul>\n+<\/div>\n+<div class=\"sub-nav\">\n+<div>\n+<ul class=\"sub-nav-list\">\n+<li>Summary:&nbsp;<\/li>\n+<li>Nested&nbsp;|&nbsp;<\/li>\n+<li>Field&nbsp;|&nbsp;<\/li>\n+<li>Constr&nbsp;|&nbsp;<\/li>\n+<li><a href=\"#method-summary\">Method<\/a><\/li>\n+<\/ul>\n+<ul class=\"sub-nav-list\">\n+<li>Detail:&nbsp;<\/li>\n+<li>Field&nbsp;|&nbsp;<\/li>\n+<li>Constr&nbsp;|&nbsp;<\/li>\n+<li>Method<\/li>\n+<\/ul>\n+<\/div>\n+<div class=\"nav-list-search\"><label for=\"search\">SEARCH:<\/label>\n+<input type=\"text\" id=\"search\" value=\"search\" disabled=\"disabled\">\n+<input type=\"reset\" id=\"reset\" value=\"reset\" disabled=\"disabled\">\n+<\/div>\n+<\/div>\n+<!-- ========= END OF TOP NAVBAR ========= -->\n+<span class=\"skip-nav\" id=\"skip-navbar-top\"><\/span><\/nav>\n+<\/header>\n+<div class=\"flex-content\">\n+<main role=\"main\">\n+<!-- ======== START OF CLASS DATA ======== -->\n+<div class=\"header\">\n+<div class=\"sub-title\"><span class=\"package-label-in-type\">Package<\/span>&nbsp;<a href=\"package-summary.html\">jdk.test.lib.hotspot.ir_framework<\/a><\/div>\n+<h1 title=\"Class TestFrameworkException\" class=\"title\">Class TestFrameworkException<\/h1>\n+<\/div>\n+<div class=\"inheritance\" title=\"Inheritance Tree\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html\" title=\"class or interface in java.lang\" class=\"external-link\">java.lang.Object<\/a>\n+<div class=\"inheritance\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Throwable.html\" title=\"class or interface in java.lang\" class=\"external-link\">java.lang.Throwable<\/a>\n+<div class=\"inheritance\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Exception.html\" title=\"class or interface in java.lang\" class=\"external-link\">java.lang.Exception<\/a>\n+<div class=\"inheritance\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/RuntimeException.html\" title=\"class or interface in java.lang\" class=\"external-link\">java.lang.RuntimeException<\/a>\n+<div class=\"inheritance\">jdk.test.lib.hotspot.ir_framework.TestFrameworkException<\/div>\n+<\/div>\n+<\/div>\n+<\/div>\n+<\/div>\n+<section class=\"description\">\n+<dl class=\"notes\">\n+<dt>All Implemented Interfaces:<\/dt>\n+<dd><code><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/io\/Serializable.html\" title=\"class or interface in java.io\" class=\"external-link\">Serializable<\/a><\/code><\/dd>\n+<\/dl>\n+<hr>\n+<div class=\"type-signature\"><span class=\"modifiers\">public class <\/span><span class=\"element-name type-name-label\">TestFrameworkException<\/span>\n+<span class=\"extends-implements\">extends <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/RuntimeException.html\" title=\"class or interface in java.lang\" class=\"external-link\">RuntimeException<\/a><\/span><\/div>\n+<div class=\"block\">Exception that is thrown if there is an internal error in the framework. This is most likely an indicator of a bug\n+ in the framework.<\/div>\n+<dl class=\"notes\">\n+<dt>See Also:<\/dt>\n+<dd><a href=\"..\/..\/..\/..\/..\/serialized-form.html#jdk.test.lib.hotspot.ir_framework.TestFrameworkException\">Serialized Form<\/a><\/dd>\n+<\/dl>\n+<\/section>\n+<section class=\"summary\">\n+<ul class=\"summary-list\">\n+<!-- ========== METHOD SUMMARY =========== -->\n+<li>\n+<section class=\"method-summary\" id=\"method-summary\">\n+<h2>Method Summary<\/h2>\n+<div class=\"inherited-list\">\n+<h3 id=\"methods-inherited-from-class-java.lang.Throwable\">Methods inherited from class&nbsp;java.lang.<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Throwable.html\" title=\"class or interface in java.lang\" class=\"external-link\">Throwable<\/a><\/h3>\n+<code><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Throwable.html#addSuppressed(java.lang.Throwable)\" title=\"class or interface in java.lang\" class=\"external-link\">addSuppressed<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Throwable.html#fillInStackTrace()\" title=\"class or interface in java.lang\" class=\"external-link\">fillInStackTrace<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Throwable.html#getCause()\" title=\"class or interface in java.lang\" class=\"external-link\">getCause<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Throwable.html#getLocalizedMessage()\" title=\"class or interface in java.lang\" class=\"external-link\">getLocalizedMessage<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Throwable.html#getMessage()\" title=\"class or interface in java.lang\" class=\"external-link\">getMessage<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Throwable.html#getStackTrace()\" title=\"class or interface in java.lang\" class=\"external-link\">getStackTrace<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Throwable.html#getSuppressed()\" title=\"class or interface in java.lang\" class=\"external-link\">getSuppressed<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Throwable.html#initCause(java.lang.Throwable)\" title=\"class or interface in java.lang\" class=\"external-link\">initCause<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Throwable.html#printStackTrace()\" title=\"class or interface in java.lang\" class=\"external-link\">printStackTrace<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Throwable.html#printStackTrace(java.io.PrintStream)\" title=\"class or interface in java.lang\" class=\"external-link\">printStackTrace<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Throwable.html#printStackTrace(java.io.PrintWriter)\" title=\"class or interface in java.lang\" class=\"external-link\">printStackTrace<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Throwable.html#setStackTrace(java.lang.StackTraceElement%5B%5D)\" title=\"class or interface in java.lang\" class=\"external-link\">setStackTrace<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Throwable.html#toString()\" title=\"class or interface in java.lang\" class=\"external-link\">toString<\/a><\/code><\/div>\n+<div class=\"inherited-list\">\n+<h3 id=\"methods-inherited-from-class-java.lang.Object\">Methods inherited from class&nbsp;java.lang.<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html\" title=\"class or interface in java.lang\" class=\"external-link\">Object<\/a><\/h3>\n+<code><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#clone()\" title=\"class or interface in java.lang\" class=\"external-link\">clone<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#equals(java.lang.Object)\" title=\"class or interface in java.lang\" class=\"external-link\">equals<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#finalize()\" title=\"class or interface in java.lang\" class=\"external-link\">finalize<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#getClass()\" title=\"class or interface in java.lang\" class=\"external-link\">getClass<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#hashCode()\" title=\"class or interface in java.lang\" class=\"external-link\">hashCode<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#notify()\" title=\"class or interface in java.lang\" class=\"external-link\">notify<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#notifyAll()\" title=\"class or interface in java.lang\" class=\"external-link\">notifyAll<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#wait()\" title=\"class or interface in java.lang\" class=\"external-link\">wait<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#wait(long)\" title=\"class or interface in java.lang\" class=\"external-link\">wait<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#wait(long,int)\" title=\"class or interface in java.lang\" class=\"external-link\">wait<\/a><\/code><\/div>\n+<\/section>\n+<\/li>\n+<\/ul>\n+<\/section>\n+<!-- ========= END OF CLASS DATA ========= -->\n+<\/main>\n+<\/div>\n+<\/div>\n+<\/body>\n+<\/html>\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/doc\/jdk\/test\/lib\/hotspot\/ir_framework\/TestFrameworkException.html","additions":114,"deletions":0,"binary":false,"changes":114,"status":"added"},{"patch":"@@ -0,0 +1,199 @@\n+<!DOCTYPE HTML>\n+<html lang=\"en\">\n+<head>\n+<!-- Generated by javadoc (17) on Wed Apr 14 13:12:12 CEST 2021 -->\n+<title>TestFrameworkExecution<\/title>\n+<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n+<meta http-equiv=\"Content-Type\" content=\"text\/html; charset=utf-8\">\n+<meta name=\"dc.created\" content=\"2021-04-14\">\n+<meta name=\"description\" content=\"declaration: package: jdk.test.lib.hotspot.ir_framework, class: TestFrameworkExecution\">\n+<meta name=\"generator\" content=\"javadoc\/ClassWriterImpl\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/..\/..\/..\/..\/stylesheet.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/..\/..\/..\/..\/script-dir\/jquery-ui.min.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/..\/..\/..\/..\/jquery-ui.overrides.css\" title=\"Style\">\n+<script type=\"text\/javascript\" src=\"..\/..\/..\/..\/..\/script.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/..\/..\/..\/..\/script-dir\/jquery-3.5.1.min.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/..\/..\/..\/..\/script-dir\/jquery-ui.min.js\"><\/script>\n+<\/head>\n+<body class=\"class-declaration-page\">\n+<script type=\"text\/javascript\">var evenRowColor = \"even-row-color\";\n+var oddRowColor = \"odd-row-color\";\n+var tableTab = \"table-tab\";\n+var activeTableTab = \"active-table-tab\";\n+var pathtoroot = \"..\/..\/..\/..\/..\/\";\n+loadScripts(document, 'script');<\/script>\n+<noscript>\n+<div>JavaScript is disabled on your browser.<\/div>\n+<\/noscript>\n+<div class=\"flex-box\">\n+<header role=\"banner\" class=\"flex-header\">\n+<nav role=\"navigation\">\n+<!-- ========= START OF TOP NAVBAR ======= -->\n+<div class=\"top-nav\" id=\"navbar-top\">\n+<div class=\"skip-nav\"><a href=\"#skip-navbar-top\" title=\"Skip navigation links\">Skip navigation links<\/a><\/div>\n+<ul id=\"navbar-top-firstrow\" class=\"nav-list\" title=\"Navigation\">\n+<li><a href=\"package-summary.html\">Package<\/a><\/li>\n+<li class=\"nav-bar-cell1-rev\">Class<\/li>\n+<li><a href=\"package-tree.html\">Tree<\/a><\/li>\n+<li><a href=\"..\/..\/..\/..\/..\/index-files\/index-1.html\">Index<\/a><\/li>\n+<li><a href=\"..\/..\/..\/..\/..\/help-doc.html\">Help<\/a><\/li>\n+<\/ul>\n+<\/div>\n+<div class=\"sub-nav\">\n+<div>\n+<ul class=\"sub-nav-list\">\n+<li>Summary:&nbsp;<\/li>\n+<li>Nested&nbsp;|&nbsp;<\/li>\n+<li><a href=\"#field-summary\">Field<\/a>&nbsp;|&nbsp;<\/li>\n+<li>Constr&nbsp;|&nbsp;<\/li>\n+<li><a href=\"#method-summary\">Method<\/a><\/li>\n+<\/ul>\n+<ul class=\"sub-nav-list\">\n+<li>Detail:&nbsp;<\/li>\n+<li><a href=\"#field-detail\">Field<\/a>&nbsp;|&nbsp;<\/li>\n+<li>Constr&nbsp;|&nbsp;<\/li>\n+<li><a href=\"#method-detail\">Method<\/a><\/li>\n+<\/ul>\n+<\/div>\n+<div class=\"nav-list-search\"><label for=\"search\">SEARCH:<\/label>\n+<input type=\"text\" id=\"search\" value=\"search\" disabled=\"disabled\">\n+<input type=\"reset\" id=\"reset\" value=\"reset\" disabled=\"disabled\">\n+<\/div>\n+<\/div>\n+<!-- ========= END OF TOP NAVBAR ========= -->\n+<span class=\"skip-nav\" id=\"skip-navbar-top\"><\/span><\/nav>\n+<\/header>\n+<div class=\"flex-content\">\n+<main role=\"main\">\n+<!-- ======== START OF CLASS DATA ======== -->\n+<div class=\"header\">\n+<div class=\"sub-title\"><span class=\"package-label-in-type\">Package<\/span>&nbsp;<a href=\"package-summary.html\">jdk.test.lib.hotspot.ir_framework<\/a><\/div>\n+<h1 title=\"Class TestFrameworkExecution\" class=\"title\">Class TestFrameworkExecution<\/h1>\n+<\/div>\n+<div class=\"inheritance\" title=\"Inheritance Tree\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html\" title=\"class or interface in java.lang\" class=\"external-link\">java.lang.Object<\/a>\n+<div class=\"inheritance\">jdk.test.lib.hotspot.ir_framework.TestFrameworkExecution<\/div>\n+<\/div>\n+<section class=\"description\">\n+<hr>\n+<div class=\"type-signature\"><span class=\"modifiers\">public class <\/span><span class=\"element-name type-name-label\">TestFrameworkExecution<\/span>\n+<span class=\"extends-implements\">extends <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html\" title=\"class or interface in java.lang\" class=\"external-link\">Object<\/a><\/span><\/div>\n+<div class=\"block\">This class' main method is called from <a href=\"TestFramework.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\"><code>TestFramework<\/code><\/a> and represents the so-called \"test VM\". The class is\n+ the heart of the framework and is responsible for executing all the specified tests in the test class. It uses the\n+ Whitebox API and reflection to achieve this task.<\/div>\n+<\/section>\n+<section class=\"summary\">\n+<ul class=\"summary-list\">\n+<!-- =========== FIELD SUMMARY =========== -->\n+<li>\n+<section class=\"field-summary\" id=\"field-summary\">\n+<h2>Field Summary<\/h2>\n+<div class=\"caption\"><span>Fields<\/span><\/div>\n+<div class=\"summary-table three-column-summary\">\n+<div class=\"table-header col-first\">Modifier and Type<\/div>\n+<div class=\"table-header col-second\">Field<\/div>\n+<div class=\"table-header col-last\">Description<\/div>\n+<div class=\"col-first even-row-color\"><code>protected static long<\/code><\/div>\n+<div class=\"col-second even-row-color\"><code><a href=\"#PerMethodTrapLimit\" class=\"member-name-link\">PerMethodTrapLimit<\/a><\/code><\/div>\n+<div class=\"col-last even-row-color\">&nbsp;<\/div>\n+<div class=\"col-first odd-row-color\"><code>protected static boolean<\/code><\/div>\n+<div class=\"col-second odd-row-color\"><code><a href=\"#ProfileInterpreter\" class=\"member-name-link\">ProfileInterpreter<\/a><\/code><\/div>\n+<div class=\"col-last odd-row-color\">&nbsp;<\/div>\n+<div class=\"col-first even-row-color\"><code>static int<\/code><\/div>\n+<div class=\"col-second even-row-color\"><code><a href=\"#WARMUP_ITERATIONS\" class=\"member-name-link\">WARMUP_ITERATIONS<\/a><\/code><\/div>\n+<div class=\"col-last even-row-color\">\n+<div class=\"block\">The default number of warm-up iterations used to warm up a <a href=\"Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Test<\/code><\/a> annotated test method.<\/div>\n+<\/div>\n+<\/div>\n+<\/section>\n+<\/li>\n+<!-- ========== METHOD SUMMARY =========== -->\n+<li>\n+<section class=\"method-summary\" id=\"method-summary\">\n+<h2>Method Summary<\/h2>\n+<div id=\"method-summary-table\">\n+<div class=\"table-tabs\" role=\"tablist\" aria-orientation=\"horizontal\"><button id=\"method-summary-table-tab0\" role=\"tab\" aria-selected=\"true\" aria-controls=\"method-summary-table.tabpanel\" tabindex=\"0\" onkeydown=\"switchTab(event)\" onclick=\"show('method-summary-table', 'method-summary-table', 3)\" class=\"active-table-tab\">All Methods<\/button><button id=\"method-summary-table-tab1\" role=\"tab\" aria-selected=\"false\" aria-controls=\"method-summary-table.tabpanel\" tabindex=\"-1\" onkeydown=\"switchTab(event)\" onclick=\"show('method-summary-table', 'method-summary-table-tab1', 3)\" class=\"table-tab\">Static Methods<\/button><button id=\"method-summary-table-tab4\" role=\"tab\" aria-selected=\"false\" aria-controls=\"method-summary-table.tabpanel\" tabindex=\"-1\" onkeydown=\"switchTab(event)\" onclick=\"show('method-summary-table', 'method-summary-table-tab4', 3)\" class=\"table-tab\">Concrete Methods<\/button><\/div>\n+<div id=\"method-summary-table.tabpanel\" role=\"tabpanel\">\n+<div class=\"summary-table three-column-summary\" aria-labelledby=\"method-summary-table-tab0\">\n+<div class=\"table-header col-first\">Modifier and Type<\/div>\n+<div class=\"table-header col-second\">Method<\/div>\n+<div class=\"table-header col-last\">Description<\/div>\n+<div class=\"col-first even-row-color method-summary-table method-summary-table-tab1 method-summary-table-tab4\"><code>protected static <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Class.html\" title=\"class or interface in java.lang\" class=\"external-link\">Class<\/a>&lt;?&gt;<\/code><\/div>\n+<div class=\"col-second even-row-color method-summary-table method-summary-table-tab1 method-summary-table-tab4\"><code><a href=\"#getClassObject(java.lang.String,java.lang.String)\" class=\"member-name-link\">getClassObject<\/a>&#8203;(<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a>&nbsp;className,\n+ <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a>&nbsp;classType)<\/code><\/div>\n+<div class=\"col-last even-row-color method-summary-table method-summary-table-tab1 method-summary-table-tab4\">&nbsp;<\/div>\n+<div class=\"col-first odd-row-color method-summary-table method-summary-table-tab1 method-summary-table-tab4\"><code>static void<\/code><\/div>\n+<div class=\"col-second odd-row-color method-summary-table method-summary-table-tab1 method-summary-table-tab4\"><code><a href=\"#main(java.lang.String%5B%5D)\" class=\"member-name-link\">main<\/a>&#8203;(<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a>[]&nbsp;args)<\/code><\/div>\n+<div class=\"col-last odd-row-color method-summary-table method-summary-table-tab1 method-summary-table-tab4\">\n+<div class=\"block\">Main entry point of the test VM.<\/div>\n+<\/div>\n+<\/div>\n+<\/div>\n+<\/div>\n+<div class=\"inherited-list\">\n+<h3 id=\"methods-inherited-from-class-java.lang.Object\">Methods inherited from class&nbsp;java.lang.<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html\" title=\"class or interface in java.lang\" class=\"external-link\">Object<\/a><\/h3>\n+<code><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#clone()\" title=\"class or interface in java.lang\" class=\"external-link\">clone<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#equals(java.lang.Object)\" title=\"class or interface in java.lang\" class=\"external-link\">equals<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#finalize()\" title=\"class or interface in java.lang\" class=\"external-link\">finalize<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#getClass()\" title=\"class or interface in java.lang\" class=\"external-link\">getClass<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#hashCode()\" title=\"class or interface in java.lang\" class=\"external-link\">hashCode<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#notify()\" title=\"class or interface in java.lang\" class=\"external-link\">notify<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#notifyAll()\" title=\"class or interface in java.lang\" class=\"external-link\">notifyAll<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#toString()\" title=\"class or interface in java.lang\" class=\"external-link\">toString<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#wait()\" title=\"class or interface in java.lang\" class=\"external-link\">wait<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#wait(long)\" title=\"class or interface in java.lang\" class=\"external-link\">wait<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#wait(long,int)\" title=\"class or interface in java.lang\" class=\"external-link\">wait<\/a><\/code><\/div>\n+<\/section>\n+<\/li>\n+<\/ul>\n+<\/section>\n+<section class=\"details\">\n+<ul class=\"details-list\">\n+<!-- ============ FIELD DETAIL =========== -->\n+<li>\n+<section class=\"field-details\" id=\"field-detail\">\n+<h2>Field Details<\/h2>\n+<ul class=\"member-list\">\n+<li>\n+<section class=\"detail\" id=\"WARMUP_ITERATIONS\">\n+<h3>WARMUP_ITERATIONS<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static final<\/span>&nbsp;<span class=\"return-type\">int<\/span>&nbsp;<span class=\"element-name\">WARMUP_ITERATIONS<\/span><\/div>\n+<div class=\"block\">The default number of warm-up iterations used to warm up a <a href=\"Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Test<\/code><\/a> annotated test method.\n+ Use <code>-DWarmup=XY<\/code> to specify a different default value. An individual warm-up can also be\n+ set by specifying a <a href=\"Warmup.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Warmup<\/code><\/a> iteration for a test.<\/div>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"PerMethodTrapLimit\">\n+<h3>PerMethodTrapLimit<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">protected static final<\/span>&nbsp;<span class=\"return-type\">long<\/span>&nbsp;<span class=\"element-name\">PerMethodTrapLimit<\/span><\/div>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"ProfileInterpreter\">\n+<h3>ProfileInterpreter<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">protected static final<\/span>&nbsp;<span class=\"return-type\">boolean<\/span>&nbsp;<span class=\"element-name\">ProfileInterpreter<\/span><\/div>\n+<\/section>\n+<\/li>\n+<\/ul>\n+<\/section>\n+<\/li>\n+<!-- ============ METHOD DETAIL ========== -->\n+<li>\n+<section class=\"method-details\" id=\"method-detail\">\n+<h2>Method Details<\/h2>\n+<ul class=\"member-list\">\n+<li>\n+<section class=\"detail\" id=\"main(java.lang.String[])\">\n+<h3>main<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public static<\/span>&nbsp;<span class=\"return-type\">void<\/span>&nbsp;<span class=\"element-name\">main<\/span>&#8203;<span class=\"parameters\">(<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a>[]&nbsp;args)<\/span><\/div>\n+<div class=\"block\">Main entry point of the test VM.<\/div>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"getClassObject(java.lang.String,java.lang.String)\">\n+<h3>getClassObject<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">protected static<\/span>&nbsp;<span class=\"return-type\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Class.html\" title=\"class or interface in java.lang\" class=\"external-link\">Class<\/a>&lt;?&gt;<\/span>&nbsp;<span class=\"element-name\">getClassObject<\/span>&#8203;<span class=\"parameters\">(<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a>&nbsp;className,\n+ <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a>&nbsp;classType)<\/span><\/div>\n+<\/section>\n+<\/li>\n+<\/ul>\n+<\/section>\n+<\/li>\n+<\/ul>\n+<\/section>\n+<!-- ========= END OF CLASS DATA ========= -->\n+<\/main>\n+<\/div>\n+<\/div>\n+<\/body>\n+<\/html>\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/doc\/jdk\/test\/lib\/hotspot\/ir_framework\/TestFrameworkExecution.html","additions":199,"deletions":0,"binary":false,"changes":199,"status":"added"},{"patch":"@@ -0,0 +1,229 @@\n+<!DOCTYPE HTML>\n+<html lang=\"en\">\n+<head>\n+<!-- Generated by javadoc (17) on Wed Apr 14 13:12:12 CEST 2021 -->\n+<title>TestInfo<\/title>\n+<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n+<meta http-equiv=\"Content-Type\" content=\"text\/html; charset=utf-8\">\n+<meta name=\"dc.created\" content=\"2021-04-14\">\n+<meta name=\"description\" content=\"declaration: package: jdk.test.lib.hotspot.ir_framework, class: TestInfo\">\n+<meta name=\"generator\" content=\"javadoc\/ClassWriterImpl\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/..\/..\/..\/..\/stylesheet.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/..\/..\/..\/..\/script-dir\/jquery-ui.min.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/..\/..\/..\/..\/jquery-ui.overrides.css\" title=\"Style\">\n+<script type=\"text\/javascript\" src=\"..\/..\/..\/..\/..\/script.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/..\/..\/..\/..\/script-dir\/jquery-3.5.1.min.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/..\/..\/..\/..\/script-dir\/jquery-ui.min.js\"><\/script>\n+<\/head>\n+<body class=\"class-declaration-page\">\n+<script type=\"text\/javascript\">var evenRowColor = \"even-row-color\";\n+var oddRowColor = \"odd-row-color\";\n+var tableTab = \"table-tab\";\n+var activeTableTab = \"active-table-tab\";\n+var pathtoroot = \"..\/..\/..\/..\/..\/\";\n+loadScripts(document, 'script');<\/script>\n+<noscript>\n+<div>JavaScript is disabled on your browser.<\/div>\n+<\/noscript>\n+<div class=\"flex-box\">\n+<header role=\"banner\" class=\"flex-header\">\n+<nav role=\"navigation\">\n+<!-- ========= START OF TOP NAVBAR ======= -->\n+<div class=\"top-nav\" id=\"navbar-top\">\n+<div class=\"skip-nav\"><a href=\"#skip-navbar-top\" title=\"Skip navigation links\">Skip navigation links<\/a><\/div>\n+<ul id=\"navbar-top-firstrow\" class=\"nav-list\" title=\"Navigation\">\n+<li><a href=\"package-summary.html\">Package<\/a><\/li>\n+<li class=\"nav-bar-cell1-rev\">Class<\/li>\n+<li><a href=\"package-tree.html\">Tree<\/a><\/li>\n+<li><a href=\"..\/..\/..\/..\/..\/index-files\/index-1.html\">Index<\/a><\/li>\n+<li><a href=\"..\/..\/..\/..\/..\/help-doc.html\">Help<\/a><\/li>\n+<\/ul>\n+<\/div>\n+<div class=\"sub-nav\">\n+<div>\n+<ul class=\"sub-nav-list\">\n+<li>Summary:&nbsp;<\/li>\n+<li>Nested&nbsp;|&nbsp;<\/li>\n+<li><a href=\"#field-summary\">Field<\/a>&nbsp;|&nbsp;<\/li>\n+<li>Constr&nbsp;|&nbsp;<\/li>\n+<li><a href=\"#method-summary\">Method<\/a><\/li>\n+<\/ul>\n+<ul class=\"sub-nav-list\">\n+<li>Detail:&nbsp;<\/li>\n+<li>Field&nbsp;|&nbsp;<\/li>\n+<li>Constr&nbsp;|&nbsp;<\/li>\n+<li><a href=\"#method-detail\">Method<\/a><\/li>\n+<\/ul>\n+<\/div>\n+<div class=\"nav-list-search\"><label for=\"search\">SEARCH:<\/label>\n+<input type=\"text\" id=\"search\" value=\"search\" disabled=\"disabled\">\n+<input type=\"reset\" id=\"reset\" value=\"reset\" disabled=\"disabled\">\n+<\/div>\n+<\/div>\n+<!-- ========= END OF TOP NAVBAR ========= -->\n+<span class=\"skip-nav\" id=\"skip-navbar-top\"><\/span><\/nav>\n+<\/header>\n+<div class=\"flex-content\">\n+<main role=\"main\">\n+<!-- ======== START OF CLASS DATA ======== -->\n+<div class=\"header\">\n+<div class=\"sub-title\"><span class=\"package-label-in-type\">Package<\/span>&nbsp;<a href=\"package-summary.html\">jdk.test.lib.hotspot.ir_framework<\/a><\/div>\n+<h1 title=\"Class TestInfo\" class=\"title\">Class TestInfo<\/h1>\n+<\/div>\n+<div class=\"inheritance\" title=\"Inheritance Tree\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html\" title=\"class or interface in java.lang\" class=\"external-link\">java.lang.Object<\/a>\n+<div class=\"inheritance\"><a href=\"AbstractInfo.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">jdk.test.lib.hotspot.ir_framework.AbstractInfo<\/a>\n+<div class=\"inheritance\">jdk.test.lib.hotspot.ir_framework.TestInfo<\/div>\n+<\/div>\n+<\/div>\n+<section class=\"description\">\n+<hr>\n+<div class=\"type-signature\"><span class=\"modifiers\">public class <\/span><span class=\"element-name type-name-label\">TestInfo<\/span>\n+<span class=\"extends-implements\">extends <a href=\"AbstractInfo.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">AbstractInfo<\/a><\/span><\/div>\n+<div class=\"block\">Test info class which provides some useful utility methods and information about a <b>checked test<\/b>.<\/div>\n+<dl class=\"notes\">\n+<dt>See Also:<\/dt>\n+<dd><a href=\"Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Test<\/code><\/a>, \n+<a href=\"Check.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Check<\/code><\/a><\/dd>\n+<\/dl>\n+<\/section>\n+<section class=\"summary\">\n+<ul class=\"summary-list\">\n+<!-- =========== FIELD SUMMARY =========== -->\n+<li>\n+<section class=\"field-summary\" id=\"field-summary\">\n+<h2>Field Summary<\/h2>\n+<div class=\"inherited-list\">\n+<h3 id=\"fields-inherited-from-class-jdk.test.lib.hotspot.ir_framework.AbstractInfo\">Fields inherited from class&nbsp;jdk.test.lib.hotspot.ir_framework.<a href=\"AbstractInfo.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">AbstractInfo<\/a><\/h3>\n+<code><a href=\"AbstractInfo.html#testClass\">testClass<\/a><\/code><\/div>\n+<\/section>\n+<\/li>\n+<!-- ========== METHOD SUMMARY =========== -->\n+<li>\n+<section class=\"method-summary\" id=\"method-summary\">\n+<h2>Method Summary<\/h2>\n+<div id=\"method-summary-table\">\n+<div class=\"table-tabs\" role=\"tablist\" aria-orientation=\"horizontal\"><button id=\"method-summary-table-tab0\" role=\"tab\" aria-selected=\"true\" aria-controls=\"method-summary-table.tabpanel\" tabindex=\"0\" onkeydown=\"switchTab(event)\" onclick=\"show('method-summary-table', 'method-summary-table', 3)\" class=\"active-table-tab\">All Methods<\/button><button id=\"method-summary-table-tab2\" role=\"tab\" aria-selected=\"false\" aria-controls=\"method-summary-table.tabpanel\" tabindex=\"-1\" onkeydown=\"switchTab(event)\" onclick=\"show('method-summary-table', 'method-summary-table-tab2', 3)\" class=\"table-tab\">Instance Methods<\/button><button id=\"method-summary-table-tab4\" role=\"tab\" aria-selected=\"false\" aria-controls=\"method-summary-table.tabpanel\" tabindex=\"-1\" onkeydown=\"switchTab(event)\" onclick=\"show('method-summary-table', 'method-summary-table-tab4', 3)\" class=\"table-tab\">Concrete Methods<\/button><\/div>\n+<div id=\"method-summary-table.tabpanel\" role=\"tabpanel\">\n+<div class=\"summary-table three-column-summary\" aria-labelledby=\"method-summary-table-tab0\">\n+<div class=\"table-header col-first\">Modifier and Type<\/div>\n+<div class=\"table-header col-second\">Method<\/div>\n+<div class=\"table-header col-last\">Description<\/div>\n+<div class=\"col-first even-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\"><code><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/reflect\/Method.html\" title=\"class or interface in java.lang.reflect\" class=\"external-link\">Method<\/a><\/code><\/div>\n+<div class=\"col-second even-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\"><code><a href=\"#getTest()\" class=\"member-name-link\">getTest<\/a>()<\/code><\/div>\n+<div class=\"col-last even-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\">\n+<div class=\"block\">Get the associated test method object.<\/div>\n+<\/div>\n+<div class=\"col-first odd-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\"><code>boolean<\/code><\/div>\n+<div class=\"col-second odd-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\"><code><a href=\"#isC1Compiled()\" class=\"member-name-link\">isC1Compiled<\/a>()<\/code><\/div>\n+<div class=\"col-last odd-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\">\n+<div class=\"block\">Returns a boolean indicating if the associated test method is C1 compiled.<\/div>\n+<\/div>\n+<div class=\"col-first even-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\"><code>boolean<\/code><\/div>\n+<div class=\"col-second even-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\"><code><a href=\"#isC2Compiled()\" class=\"member-name-link\">isC2Compiled<\/a>()<\/code><\/div>\n+<div class=\"col-last even-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\">\n+<div class=\"block\">Returns a boolean indicating if the associated test method is C2 compiled.<\/div>\n+<\/div>\n+<div class=\"col-first odd-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\"><code>boolean<\/code><\/div>\n+<div class=\"col-second odd-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\"><code><a href=\"#isCompilationSkipped()\" class=\"member-name-link\">isCompilationSkipped<\/a>()<\/code><\/div>\n+<div class=\"col-last odd-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\">\n+<div class=\"block\">Return a boolean indicating if the framework skipped a compilation after the warm-up due to VM flags not\n+ allowing a compilation on the requested level in <a href=\"Test.html#compLevel()\"><code>Test.compLevel()<\/code><\/a>.<\/div>\n+<\/div>\n+<div class=\"col-first even-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\"><code>boolean<\/code><\/div>\n+<div class=\"col-second even-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\"><code><a href=\"#isCompiledAtLevel(jdk.test.lib.hotspot.ir_framework.CompLevel)\" class=\"member-name-link\">isCompiledAtLevel<\/a>&#8203;(<a href=\"CompLevel.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">CompLevel<\/a>&nbsp;compLevel)<\/code><\/div>\n+<div class=\"col-last even-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\">\n+<div class=\"block\">Returns a boolean indicating if the associated test method is compiled at <code>compLevel<\/code>.<\/div>\n+<\/div>\n+<\/div>\n+<\/div>\n+<\/div>\n+<div class=\"inherited-list\">\n+<h3 id=\"methods-inherited-from-class-jdk.test.lib.hotspot.ir_framework.AbstractInfo\">Methods inherited from class&nbsp;jdk.test.lib.hotspot.ir_framework.<a href=\"AbstractInfo.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">AbstractInfo<\/a><\/h3>\n+<code><a href=\"AbstractInfo.html#getMethod(java.lang.Class,java.lang.String,java.lang.Class...)\">getMethod<\/a>, <a href=\"AbstractInfo.html#getRandom()\">getRandom<\/a>, <a href=\"AbstractInfo.html#getTestClassMethod(java.lang.String,java.lang.Class...)\">getTestClassMethod<\/a>, <a href=\"AbstractInfo.html#isC2CompilationEnabled()\">isC2CompilationEnabled<\/a>, <a href=\"AbstractInfo.html#isWarmUp()\">isWarmUp<\/a>, <a href=\"AbstractInfo.html#toggleBoolean()\">toggleBoolean<\/a><\/code><\/div>\n+<div class=\"inherited-list\">\n+<h3 id=\"methods-inherited-from-class-java.lang.Object\">Methods inherited from class&nbsp;java.lang.<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html\" title=\"class or interface in java.lang\" class=\"external-link\">Object<\/a><\/h3>\n+<code><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#clone()\" title=\"class or interface in java.lang\" class=\"external-link\">clone<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#equals(java.lang.Object)\" title=\"class or interface in java.lang\" class=\"external-link\">equals<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#finalize()\" title=\"class or interface in java.lang\" class=\"external-link\">finalize<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#getClass()\" title=\"class or interface in java.lang\" class=\"external-link\">getClass<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#hashCode()\" title=\"class or interface in java.lang\" class=\"external-link\">hashCode<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#notify()\" title=\"class or interface in java.lang\" class=\"external-link\">notify<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#notifyAll()\" title=\"class or interface in java.lang\" class=\"external-link\">notifyAll<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#toString()\" title=\"class or interface in java.lang\" class=\"external-link\">toString<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#wait()\" title=\"class or interface in java.lang\" class=\"external-link\">wait<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#wait(long)\" title=\"class or interface in java.lang\" class=\"external-link\">wait<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#wait(long,int)\" title=\"class or interface in java.lang\" class=\"external-link\">wait<\/a><\/code><\/div>\n+<\/section>\n+<\/li>\n+<\/ul>\n+<\/section>\n+<section class=\"details\">\n+<ul class=\"details-list\">\n+<!-- ============ METHOD DETAIL ========== -->\n+<li>\n+<section class=\"method-details\" id=\"method-detail\">\n+<h2>Method Details<\/h2>\n+<ul class=\"member-list\">\n+<li>\n+<section class=\"detail\" id=\"getTest()\">\n+<h3>getTest<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public<\/span>&nbsp;<span class=\"return-type\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/reflect\/Method.html\" title=\"class or interface in java.lang.reflect\" class=\"external-link\">Method<\/a><\/span>&nbsp;<span class=\"element-name\">getTest<\/span>()<\/div>\n+<div class=\"block\">Get the associated test method object.<\/div>\n+<dl class=\"notes\">\n+<dt>Returns:<\/dt>\n+<dd>the associated test method object.<\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"isCompilationSkipped()\">\n+<h3>isCompilationSkipped<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public<\/span>&nbsp;<span class=\"return-type\">boolean<\/span>&nbsp;<span class=\"element-name\">isCompilationSkipped<\/span>()<\/div>\n+<div class=\"block\">Return a boolean indicating if the framework skipped a compilation after the warm-up due to VM flags not\n+ allowing a compilation on the requested level in <a href=\"Test.html#compLevel()\"><code>Test.compLevel()<\/code><\/a>.<\/div>\n+<dl class=\"notes\">\n+<dt>Returns:<\/dt>\n+<dd><code>true<\/code> if the framework compiled the test;\n+         <code>false<\/code> otherwise.<\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"isC1Compiled()\">\n+<h3>isC1Compiled<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public<\/span>&nbsp;<span class=\"return-type\">boolean<\/span>&nbsp;<span class=\"element-name\">isC1Compiled<\/span>()<\/div>\n+<div class=\"block\">Returns a boolean indicating if the associated test method is C1 compiled.<\/div>\n+<dl class=\"notes\">\n+<dt>Returns:<\/dt>\n+<dd><code>true<\/code> if the test method is C1 compiled;\n+         <code>false<\/code> otherwise.<\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"isC2Compiled()\">\n+<h3>isC2Compiled<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public<\/span>&nbsp;<span class=\"return-type\">boolean<\/span>&nbsp;<span class=\"element-name\">isC2Compiled<\/span>()<\/div>\n+<div class=\"block\">Returns a boolean indicating if the associated test method is C2 compiled.<\/div>\n+<dl class=\"notes\">\n+<dt>Returns:<\/dt>\n+<dd><code>true<\/code> if the test method is C2 compiled;\n+         <code>false<\/code> otherwise.<\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"detail\" id=\"isCompiledAtLevel(jdk.test.lib.hotspot.ir_framework.CompLevel)\">\n+<h3>isCompiledAtLevel<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public<\/span>&nbsp;<span class=\"return-type\">boolean<\/span>&nbsp;<span class=\"element-name\">isCompiledAtLevel<\/span>&#8203;<span class=\"parameters\">(<a href=\"CompLevel.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">CompLevel<\/a>&nbsp;compLevel)<\/span><\/div>\n+<div class=\"block\">Returns a boolean indicating if the associated test method is compiled at <code>compLevel<\/code>.<\/div>\n+<dl class=\"notes\">\n+<dt>Parameters:<\/dt>\n+<dd><code>compLevel<\/code> - the compilation level.<\/dd>\n+<dt>Returns:<\/dt>\n+<dd><code>true<\/code> if the test method is compiled at <code>compLevel<\/code>;\n+         <code>false<\/code> otherwise.<\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<\/ul>\n+<\/section>\n+<\/li>\n+<\/ul>\n+<\/section>\n+<!-- ========= END OF CLASS DATA ========= -->\n+<\/main>\n+<\/div>\n+<\/div>\n+<\/body>\n+<\/html>\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/doc\/jdk\/test\/lib\/hotspot\/ir_framework\/TestInfo.html","additions":229,"deletions":0,"binary":false,"changes":229,"status":"added"},{"patch":"@@ -0,0 +1,114 @@\n+<!DOCTYPE HTML>\n+<html lang=\"en\">\n+<head>\n+<!-- Generated by javadoc (17) on Wed Apr 14 13:12:12 CEST 2021 -->\n+<title>TestRunException<\/title>\n+<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n+<meta http-equiv=\"Content-Type\" content=\"text\/html; charset=utf-8\">\n+<meta name=\"dc.created\" content=\"2021-04-14\">\n+<meta name=\"description\" content=\"declaration: package: jdk.test.lib.hotspot.ir_framework, class: TestRunException\">\n+<meta name=\"generator\" content=\"javadoc\/ClassWriterImpl\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/..\/..\/..\/..\/stylesheet.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/..\/..\/..\/..\/script-dir\/jquery-ui.min.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/..\/..\/..\/..\/jquery-ui.overrides.css\" title=\"Style\">\n+<script type=\"text\/javascript\" src=\"..\/..\/..\/..\/..\/script.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/..\/..\/..\/..\/script-dir\/jquery-3.5.1.min.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/..\/..\/..\/..\/script-dir\/jquery-ui.min.js\"><\/script>\n+<\/head>\n+<body class=\"class-declaration-page\">\n+<script type=\"text\/javascript\">var pathtoroot = \"..\/..\/..\/..\/..\/\";\n+loadScripts(document, 'script');<\/script>\n+<noscript>\n+<div>JavaScript is disabled on your browser.<\/div>\n+<\/noscript>\n+<div class=\"flex-box\">\n+<header role=\"banner\" class=\"flex-header\">\n+<nav role=\"navigation\">\n+<!-- ========= START OF TOP NAVBAR ======= -->\n+<div class=\"top-nav\" id=\"navbar-top\">\n+<div class=\"skip-nav\"><a href=\"#skip-navbar-top\" title=\"Skip navigation links\">Skip navigation links<\/a><\/div>\n+<ul id=\"navbar-top-firstrow\" class=\"nav-list\" title=\"Navigation\">\n+<li><a href=\"package-summary.html\">Package<\/a><\/li>\n+<li class=\"nav-bar-cell1-rev\">Class<\/li>\n+<li><a href=\"package-tree.html\">Tree<\/a><\/li>\n+<li><a href=\"..\/..\/..\/..\/..\/index-files\/index-1.html\">Index<\/a><\/li>\n+<li><a href=\"..\/..\/..\/..\/..\/help-doc.html\">Help<\/a><\/li>\n+<\/ul>\n+<\/div>\n+<div class=\"sub-nav\">\n+<div>\n+<ul class=\"sub-nav-list\">\n+<li>Summary:&nbsp;<\/li>\n+<li>Nested&nbsp;|&nbsp;<\/li>\n+<li>Field&nbsp;|&nbsp;<\/li>\n+<li>Constr&nbsp;|&nbsp;<\/li>\n+<li><a href=\"#method-summary\">Method<\/a><\/li>\n+<\/ul>\n+<ul class=\"sub-nav-list\">\n+<li>Detail:&nbsp;<\/li>\n+<li>Field&nbsp;|&nbsp;<\/li>\n+<li>Constr&nbsp;|&nbsp;<\/li>\n+<li>Method<\/li>\n+<\/ul>\n+<\/div>\n+<div class=\"nav-list-search\"><label for=\"search\">SEARCH:<\/label>\n+<input type=\"text\" id=\"search\" value=\"search\" disabled=\"disabled\">\n+<input type=\"reset\" id=\"reset\" value=\"reset\" disabled=\"disabled\">\n+<\/div>\n+<\/div>\n+<!-- ========= END OF TOP NAVBAR ========= -->\n+<span class=\"skip-nav\" id=\"skip-navbar-top\"><\/span><\/nav>\n+<\/header>\n+<div class=\"flex-content\">\n+<main role=\"main\">\n+<!-- ======== START OF CLASS DATA ======== -->\n+<div class=\"header\">\n+<div class=\"sub-title\"><span class=\"package-label-in-type\">Package<\/span>&nbsp;<a href=\"package-summary.html\">jdk.test.lib.hotspot.ir_framework<\/a><\/div>\n+<h1 title=\"Class TestRunException\" class=\"title\">Class TestRunException<\/h1>\n+<\/div>\n+<div class=\"inheritance\" title=\"Inheritance Tree\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html\" title=\"class or interface in java.lang\" class=\"external-link\">java.lang.Object<\/a>\n+<div class=\"inheritance\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Throwable.html\" title=\"class or interface in java.lang\" class=\"external-link\">java.lang.Throwable<\/a>\n+<div class=\"inheritance\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Exception.html\" title=\"class or interface in java.lang\" class=\"external-link\">java.lang.Exception<\/a>\n+<div class=\"inheritance\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/RuntimeException.html\" title=\"class or interface in java.lang\" class=\"external-link\">java.lang.RuntimeException<\/a>\n+<div class=\"inheritance\">jdk.test.lib.hotspot.ir_framework.TestRunException<\/div>\n+<\/div>\n+<\/div>\n+<\/div>\n+<\/div>\n+<section class=\"description\">\n+<dl class=\"notes\">\n+<dt>All Implemented Interfaces:<\/dt>\n+<dd><code><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/io\/Serializable.html\" title=\"class or interface in java.io\" class=\"external-link\">Serializable<\/a><\/code><\/dd>\n+<\/dl>\n+<hr>\n+<div class=\"type-signature\"><span class=\"modifiers\">public class <\/span><span class=\"element-name type-name-label\">TestRunException<\/span>\n+<span class=\"extends-implements\">extends <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/RuntimeException.html\" title=\"class or interface in java.lang\" class=\"external-link\">RuntimeException<\/a><\/span><\/div>\n+<div class=\"block\">Exception that is thrown if the JTreg test throws an exception during the execution of individual tests of the\n+ test class.<\/div>\n+<dl class=\"notes\">\n+<dt>See Also:<\/dt>\n+<dd><a href=\"..\/..\/..\/..\/..\/serialized-form.html#jdk.test.lib.hotspot.ir_framework.TestRunException\">Serialized Form<\/a><\/dd>\n+<\/dl>\n+<\/section>\n+<section class=\"summary\">\n+<ul class=\"summary-list\">\n+<!-- ========== METHOD SUMMARY =========== -->\n+<li>\n+<section class=\"method-summary\" id=\"method-summary\">\n+<h2>Method Summary<\/h2>\n+<div class=\"inherited-list\">\n+<h3 id=\"methods-inherited-from-class-java.lang.Throwable\">Methods inherited from class&nbsp;java.lang.<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Throwable.html\" title=\"class or interface in java.lang\" class=\"external-link\">Throwable<\/a><\/h3>\n+<code><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Throwable.html#addSuppressed(java.lang.Throwable)\" title=\"class or interface in java.lang\" class=\"external-link\">addSuppressed<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Throwable.html#fillInStackTrace()\" title=\"class or interface in java.lang\" class=\"external-link\">fillInStackTrace<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Throwable.html#getCause()\" title=\"class or interface in java.lang\" class=\"external-link\">getCause<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Throwable.html#getLocalizedMessage()\" title=\"class or interface in java.lang\" class=\"external-link\">getLocalizedMessage<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Throwable.html#getMessage()\" title=\"class or interface in java.lang\" class=\"external-link\">getMessage<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Throwable.html#getStackTrace()\" title=\"class or interface in java.lang\" class=\"external-link\">getStackTrace<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Throwable.html#getSuppressed()\" title=\"class or interface in java.lang\" class=\"external-link\">getSuppressed<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Throwable.html#initCause(java.lang.Throwable)\" title=\"class or interface in java.lang\" class=\"external-link\">initCause<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Throwable.html#printStackTrace()\" title=\"class or interface in java.lang\" class=\"external-link\">printStackTrace<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Throwable.html#printStackTrace(java.io.PrintStream)\" title=\"class or interface in java.lang\" class=\"external-link\">printStackTrace<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Throwable.html#printStackTrace(java.io.PrintWriter)\" title=\"class or interface in java.lang\" class=\"external-link\">printStackTrace<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Throwable.html#setStackTrace(java.lang.StackTraceElement%5B%5D)\" title=\"class or interface in java.lang\" class=\"external-link\">setStackTrace<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Throwable.html#toString()\" title=\"class or interface in java.lang\" class=\"external-link\">toString<\/a><\/code><\/div>\n+<div class=\"inherited-list\">\n+<h3 id=\"methods-inherited-from-class-java.lang.Object\">Methods inherited from class&nbsp;java.lang.<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html\" title=\"class or interface in java.lang\" class=\"external-link\">Object<\/a><\/h3>\n+<code><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#clone()\" title=\"class or interface in java.lang\" class=\"external-link\">clone<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#equals(java.lang.Object)\" title=\"class or interface in java.lang\" class=\"external-link\">equals<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#finalize()\" title=\"class or interface in java.lang\" class=\"external-link\">finalize<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#getClass()\" title=\"class or interface in java.lang\" class=\"external-link\">getClass<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#hashCode()\" title=\"class or interface in java.lang\" class=\"external-link\">hashCode<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#notify()\" title=\"class or interface in java.lang\" class=\"external-link\">notify<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#notifyAll()\" title=\"class or interface in java.lang\" class=\"external-link\">notifyAll<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#wait()\" title=\"class or interface in java.lang\" class=\"external-link\">wait<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#wait(long)\" title=\"class or interface in java.lang\" class=\"external-link\">wait<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#wait(long,int)\" title=\"class or interface in java.lang\" class=\"external-link\">wait<\/a><\/code><\/div>\n+<\/section>\n+<\/li>\n+<\/ul>\n+<\/section>\n+<!-- ========= END OF CLASS DATA ========= -->\n+<\/main>\n+<\/div>\n+<\/div>\n+<\/body>\n+<\/html>\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/doc\/jdk\/test\/lib\/hotspot\/ir_framework\/TestRunException.html","additions":114,"deletions":0,"binary":false,"changes":114,"status":"added"},{"patch":"@@ -0,0 +1,155 @@\n+<!DOCTYPE HTML>\n+<html lang=\"en\">\n+<head>\n+<!-- Generated by javadoc (17) on Wed Apr 14 13:12:12 CEST 2021 -->\n+<title>TestVMException<\/title>\n+<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n+<meta http-equiv=\"Content-Type\" content=\"text\/html; charset=utf-8\">\n+<meta name=\"dc.created\" content=\"2021-04-14\">\n+<meta name=\"description\" content=\"declaration: package: jdk.test.lib.hotspot.ir_framework, class: TestVMException\">\n+<meta name=\"generator\" content=\"javadoc\/ClassWriterImpl\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/..\/..\/..\/..\/stylesheet.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/..\/..\/..\/..\/script-dir\/jquery-ui.min.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/..\/..\/..\/..\/jquery-ui.overrides.css\" title=\"Style\">\n+<script type=\"text\/javascript\" src=\"..\/..\/..\/..\/..\/script.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/..\/..\/..\/..\/script-dir\/jquery-3.5.1.min.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/..\/..\/..\/..\/script-dir\/jquery-ui.min.js\"><\/script>\n+<\/head>\n+<body class=\"class-declaration-page\">\n+<script type=\"text\/javascript\">var evenRowColor = \"even-row-color\";\n+var oddRowColor = \"odd-row-color\";\n+var tableTab = \"table-tab\";\n+var activeTableTab = \"active-table-tab\";\n+var pathtoroot = \"..\/..\/..\/..\/..\/\";\n+loadScripts(document, 'script');<\/script>\n+<noscript>\n+<div>JavaScript is disabled on your browser.<\/div>\n+<\/noscript>\n+<div class=\"flex-box\">\n+<header role=\"banner\" class=\"flex-header\">\n+<nav role=\"navigation\">\n+<!-- ========= START OF TOP NAVBAR ======= -->\n+<div class=\"top-nav\" id=\"navbar-top\">\n+<div class=\"skip-nav\"><a href=\"#skip-navbar-top\" title=\"Skip navigation links\">Skip navigation links<\/a><\/div>\n+<ul id=\"navbar-top-firstrow\" class=\"nav-list\" title=\"Navigation\">\n+<li><a href=\"package-summary.html\">Package<\/a><\/li>\n+<li class=\"nav-bar-cell1-rev\">Class<\/li>\n+<li><a href=\"package-tree.html\">Tree<\/a><\/li>\n+<li><a href=\"..\/..\/..\/..\/..\/index-files\/index-1.html\">Index<\/a><\/li>\n+<li><a href=\"..\/..\/..\/..\/..\/help-doc.html\">Help<\/a><\/li>\n+<\/ul>\n+<\/div>\n+<div class=\"sub-nav\">\n+<div>\n+<ul class=\"sub-nav-list\">\n+<li>Summary:&nbsp;<\/li>\n+<li>Nested&nbsp;|&nbsp;<\/li>\n+<li>Field&nbsp;|&nbsp;<\/li>\n+<li>Constr&nbsp;|&nbsp;<\/li>\n+<li><a href=\"#method-summary\">Method<\/a><\/li>\n+<\/ul>\n+<ul class=\"sub-nav-list\">\n+<li>Detail:&nbsp;<\/li>\n+<li>Field&nbsp;|&nbsp;<\/li>\n+<li>Constr&nbsp;|&nbsp;<\/li>\n+<li><a href=\"#method-detail\">Method<\/a><\/li>\n+<\/ul>\n+<\/div>\n+<div class=\"nav-list-search\"><label for=\"search\">SEARCH:<\/label>\n+<input type=\"text\" id=\"search\" value=\"search\" disabled=\"disabled\">\n+<input type=\"reset\" id=\"reset\" value=\"reset\" disabled=\"disabled\">\n+<\/div>\n+<\/div>\n+<!-- ========= END OF TOP NAVBAR ========= -->\n+<span class=\"skip-nav\" id=\"skip-navbar-top\"><\/span><\/nav>\n+<\/header>\n+<div class=\"flex-content\">\n+<main role=\"main\">\n+<!-- ======== START OF CLASS DATA ======== -->\n+<div class=\"header\">\n+<div class=\"sub-title\"><span class=\"package-label-in-type\">Package<\/span>&nbsp;<a href=\"package-summary.html\">jdk.test.lib.hotspot.ir_framework<\/a><\/div>\n+<h1 title=\"Class TestVMException\" class=\"title\">Class TestVMException<\/h1>\n+<\/div>\n+<div class=\"inheritance\" title=\"Inheritance Tree\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html\" title=\"class or interface in java.lang\" class=\"external-link\">java.lang.Object<\/a>\n+<div class=\"inheritance\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Throwable.html\" title=\"class or interface in java.lang\" class=\"external-link\">java.lang.Throwable<\/a>\n+<div class=\"inheritance\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Exception.html\" title=\"class or interface in java.lang\" class=\"external-link\">java.lang.Exception<\/a>\n+<div class=\"inheritance\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/RuntimeException.html\" title=\"class or interface in java.lang\" class=\"external-link\">java.lang.RuntimeException<\/a>\n+<div class=\"inheritance\">jdk.test.lib.hotspot.ir_framework.TestVMException<\/div>\n+<\/div>\n+<\/div>\n+<\/div>\n+<\/div>\n+<section class=\"description\">\n+<dl class=\"notes\">\n+<dt>All Implemented Interfaces:<\/dt>\n+<dd><code><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/io\/Serializable.html\" title=\"class or interface in java.io\" class=\"external-link\">Serializable<\/a><\/code><\/dd>\n+<\/dl>\n+<hr>\n+<div class=\"type-signature\"><span class=\"modifiers\">public class <\/span><span class=\"element-name type-name-label\">TestVMException<\/span>\n+<span class=\"extends-implements\">extends <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/RuntimeException.html\" title=\"class or interface in java.lang\" class=\"external-link\">RuntimeException<\/a><\/span><\/div>\n+<div class=\"block\">Exception that is thrown if the test VM has thrown any kind of exception (except for <a href=\"TestFormatException.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\"><code>TestFormatException<\/code><\/a>).<\/div>\n+<dl class=\"notes\">\n+<dt>See Also:<\/dt>\n+<dd><a href=\"..\/..\/..\/..\/..\/serialized-form.html#jdk.test.lib.hotspot.ir_framework.TestVMException\">Serialized Form<\/a><\/dd>\n+<\/dl>\n+<\/section>\n+<section class=\"summary\">\n+<ul class=\"summary-list\">\n+<!-- ========== METHOD SUMMARY =========== -->\n+<li>\n+<section class=\"method-summary\" id=\"method-summary\">\n+<h2>Method Summary<\/h2>\n+<div id=\"method-summary-table\">\n+<div class=\"table-tabs\" role=\"tablist\" aria-orientation=\"horizontal\"><button id=\"method-summary-table-tab0\" role=\"tab\" aria-selected=\"true\" aria-controls=\"method-summary-table.tabpanel\" tabindex=\"0\" onkeydown=\"switchTab(event)\" onclick=\"show('method-summary-table', 'method-summary-table', 3)\" class=\"active-table-tab\">All Methods<\/button><button id=\"method-summary-table-tab2\" role=\"tab\" aria-selected=\"false\" aria-controls=\"method-summary-table.tabpanel\" tabindex=\"-1\" onkeydown=\"switchTab(event)\" onclick=\"show('method-summary-table', 'method-summary-table-tab2', 3)\" class=\"table-tab\">Instance Methods<\/button><button id=\"method-summary-table-tab4\" role=\"tab\" aria-selected=\"false\" aria-controls=\"method-summary-table.tabpanel\" tabindex=\"-1\" onkeydown=\"switchTab(event)\" onclick=\"show('method-summary-table', 'method-summary-table-tab4', 3)\" class=\"table-tab\">Concrete Methods<\/button><\/div>\n+<div id=\"method-summary-table.tabpanel\" role=\"tabpanel\">\n+<div class=\"summary-table three-column-summary\" aria-labelledby=\"method-summary-table-tab0\">\n+<div class=\"table-header col-first\">Modifier and Type<\/div>\n+<div class=\"table-header col-second\">Method<\/div>\n+<div class=\"table-header col-last\">Description<\/div>\n+<div class=\"col-first even-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\"><code><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/code><\/div>\n+<div class=\"col-second even-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\"><code><a href=\"#getExceptionInfo()\" class=\"member-name-link\">getExceptionInfo<\/a>()<\/code><\/div>\n+<div class=\"col-last even-row-color method-summary-table method-summary-table-tab2 method-summary-table-tab4\">\n+<div class=\"block\">Get some more detailed information about the exception thrown in the test VM and how to reproduce it.<\/div>\n+<\/div>\n+<\/div>\n+<\/div>\n+<\/div>\n+<div class=\"inherited-list\">\n+<h3 id=\"methods-inherited-from-class-java.lang.Throwable\">Methods inherited from class&nbsp;java.lang.<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Throwable.html\" title=\"class or interface in java.lang\" class=\"external-link\">Throwable<\/a><\/h3>\n+<code><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Throwable.html#addSuppressed(java.lang.Throwable)\" title=\"class or interface in java.lang\" class=\"external-link\">addSuppressed<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Throwable.html#fillInStackTrace()\" title=\"class or interface in java.lang\" class=\"external-link\">fillInStackTrace<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Throwable.html#getCause()\" title=\"class or interface in java.lang\" class=\"external-link\">getCause<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Throwable.html#getLocalizedMessage()\" title=\"class or interface in java.lang\" class=\"external-link\">getLocalizedMessage<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Throwable.html#getMessage()\" title=\"class or interface in java.lang\" class=\"external-link\">getMessage<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Throwable.html#getStackTrace()\" title=\"class or interface in java.lang\" class=\"external-link\">getStackTrace<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Throwable.html#getSuppressed()\" title=\"class or interface in java.lang\" class=\"external-link\">getSuppressed<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Throwable.html#initCause(java.lang.Throwable)\" title=\"class or interface in java.lang\" class=\"external-link\">initCause<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Throwable.html#printStackTrace()\" title=\"class or interface in java.lang\" class=\"external-link\">printStackTrace<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Throwable.html#printStackTrace(java.io.PrintStream)\" title=\"class or interface in java.lang\" class=\"external-link\">printStackTrace<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Throwable.html#printStackTrace(java.io.PrintWriter)\" title=\"class or interface in java.lang\" class=\"external-link\">printStackTrace<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Throwable.html#setStackTrace(java.lang.StackTraceElement%5B%5D)\" title=\"class or interface in java.lang\" class=\"external-link\">setStackTrace<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Throwable.html#toString()\" title=\"class or interface in java.lang\" class=\"external-link\">toString<\/a><\/code><\/div>\n+<div class=\"inherited-list\">\n+<h3 id=\"methods-inherited-from-class-java.lang.Object\">Methods inherited from class&nbsp;java.lang.<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html\" title=\"class or interface in java.lang\" class=\"external-link\">Object<\/a><\/h3>\n+<code><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#clone()\" title=\"class or interface in java.lang\" class=\"external-link\">clone<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#equals(java.lang.Object)\" title=\"class or interface in java.lang\" class=\"external-link\">equals<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#finalize()\" title=\"class or interface in java.lang\" class=\"external-link\">finalize<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#getClass()\" title=\"class or interface in java.lang\" class=\"external-link\">getClass<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#hashCode()\" title=\"class or interface in java.lang\" class=\"external-link\">hashCode<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#notify()\" title=\"class or interface in java.lang\" class=\"external-link\">notify<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#notifyAll()\" title=\"class or interface in java.lang\" class=\"external-link\">notifyAll<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#wait()\" title=\"class or interface in java.lang\" class=\"external-link\">wait<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#wait(long)\" title=\"class or interface in java.lang\" class=\"external-link\">wait<\/a>, <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html#wait(long,int)\" title=\"class or interface in java.lang\" class=\"external-link\">wait<\/a><\/code><\/div>\n+<\/section>\n+<\/li>\n+<\/ul>\n+<\/section>\n+<section class=\"details\">\n+<ul class=\"details-list\">\n+<!-- ============ METHOD DETAIL ========== -->\n+<li>\n+<section class=\"method-details\" id=\"method-detail\">\n+<h2>Method Details<\/h2>\n+<ul class=\"member-list\">\n+<li>\n+<section class=\"detail\" id=\"getExceptionInfo()\">\n+<h3>getExceptionInfo<\/h3>\n+<div class=\"member-signature\"><span class=\"modifiers\">public<\/span>&nbsp;<span class=\"return-type\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a><\/span>&nbsp;<span class=\"element-name\">getExceptionInfo<\/span>()<\/div>\n+<div class=\"block\">Get some more detailed information about the exception thrown in the test VM and how to reproduce it.<\/div>\n+<dl class=\"notes\">\n+<dt>Returns:<\/dt>\n+<dd>a formatted string containing information about the exception of the test VM and how to reproduce it.<\/dd>\n+<\/dl>\n+<\/section>\n+<\/li>\n+<\/ul>\n+<\/section>\n+<\/li>\n+<\/ul>\n+<\/section>\n+<!-- ========= END OF CLASS DATA ========= -->\n+<\/main>\n+<\/div>\n+<\/div>\n+<\/body>\n+<\/html>\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/doc\/jdk\/test\/lib\/hotspot\/ir_framework\/TestVMException.html","additions":155,"deletions":0,"binary":false,"changes":155,"status":"added"},{"patch":"@@ -0,0 +1,130 @@\n+<!DOCTYPE HTML>\n+<html lang=\"en\">\n+<head>\n+<!-- Generated by javadoc (17) on Wed Apr 14 13:12:12 CEST 2021 -->\n+<title>Warmup<\/title>\n+<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n+<meta http-equiv=\"Content-Type\" content=\"text\/html; charset=utf-8\">\n+<meta name=\"dc.created\" content=\"2021-04-14\">\n+<meta name=\"description\" content=\"declaration: package: jdk.test.lib.hotspot.ir_framework, annotation type: Warmup\">\n+<meta name=\"generator\" content=\"javadoc\/ClassWriterImpl\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/..\/..\/..\/..\/stylesheet.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/..\/..\/..\/..\/script-dir\/jquery-ui.min.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/..\/..\/..\/..\/jquery-ui.overrides.css\" title=\"Style\">\n+<script type=\"text\/javascript\" src=\"..\/..\/..\/..\/..\/script.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/..\/..\/..\/..\/script-dir\/jquery-3.5.1.min.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/..\/..\/..\/..\/script-dir\/jquery-ui.min.js\"><\/script>\n+<\/head>\n+<body class=\"class-declaration-page\">\n+<script type=\"text\/javascript\">var pathtoroot = \"..\/..\/..\/..\/..\/\";\n+loadScripts(document, 'script');<\/script>\n+<noscript>\n+<div>JavaScript is disabled on your browser.<\/div>\n+<\/noscript>\n+<div class=\"flex-box\">\n+<header role=\"banner\" class=\"flex-header\">\n+<nav role=\"navigation\">\n+<!-- ========= START OF TOP NAVBAR ======= -->\n+<div class=\"top-nav\" id=\"navbar-top\">\n+<div class=\"skip-nav\"><a href=\"#skip-navbar-top\" title=\"Skip navigation links\">Skip navigation links<\/a><\/div>\n+<ul id=\"navbar-top-firstrow\" class=\"nav-list\" title=\"Navigation\">\n+<li><a href=\"package-summary.html\">Package<\/a><\/li>\n+<li class=\"nav-bar-cell1-rev\">Class<\/li>\n+<li><a href=\"package-tree.html\">Tree<\/a><\/li>\n+<li><a href=\"..\/..\/..\/..\/..\/index-files\/index-1.html\">Index<\/a><\/li>\n+<li><a href=\"..\/..\/..\/..\/..\/help-doc.html\">Help<\/a><\/li>\n+<\/ul>\n+<\/div>\n+<div class=\"sub-nav\">\n+<div>\n+<ul class=\"sub-nav-list\">\n+<li>Summary:&nbsp;<\/li>\n+<li>Field&nbsp;|&nbsp;<\/li>\n+<li><a href=\"#annotation-interface-required-element-summary\">Required<\/a>&nbsp;|&nbsp;<\/li>\n+<li>Optional<\/li>\n+<\/ul>\n+<ul class=\"sub-nav-list\">\n+<li>Detail:&nbsp;<\/li>\n+<li>Field&nbsp;|&nbsp;<\/li>\n+<li><a href=\"#annotation-interface-element-detail\">Element<\/a><\/li>\n+<\/ul>\n+<\/div>\n+<div class=\"nav-list-search\"><label for=\"search\">SEARCH:<\/label>\n+<input type=\"text\" id=\"search\" value=\"search\" disabled=\"disabled\">\n+<input type=\"reset\" id=\"reset\" value=\"reset\" disabled=\"disabled\">\n+<\/div>\n+<\/div>\n+<!-- ========= END OF TOP NAVBAR ========= -->\n+<span class=\"skip-nav\" id=\"skip-navbar-top\"><\/span><\/nav>\n+<\/header>\n+<div class=\"flex-content\">\n+<main role=\"main\">\n+<!-- ======== START OF CLASS DATA ======== -->\n+<div class=\"header\">\n+<div class=\"sub-title\"><span class=\"package-label-in-type\">Package<\/span>&nbsp;<a href=\"package-summary.html\">jdk.test.lib.hotspot.ir_framework<\/a><\/div>\n+<h1 title=\"Annotation Interface Warmup\" class=\"title\">Annotation Interface Warmup<\/h1>\n+<\/div>\n+<section class=\"description\">\n+<hr>\n+<div class=\"type-signature\"><span class=\"annotations\"><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/annotation\/Retention.html\" title=\"class or interface in java.lang.annotation\" class=\"external-link\">@Retention<\/a>(<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/annotation\/RetentionPolicy.html#RUNTIME\" title=\"class or interface in java.lang.annotation\" class=\"external-link\">RUNTIME<\/a>)\n+<\/span><span class=\"modifiers\">public @interface <\/span><span class=\"element-name type-name-label\">Warmup<\/span><\/div>\n+<div class=\"block\">This annotation overrides the default number (2000) of times the framework should warm up a test.\n+ <ul>\n+     <li><p>Any positive value or zero is permitted. A warm-up of zero allows a simulation of <code>-Xcomp<\/code>.<\/li>\n+     <li><p>Custom run tests (see <a href=\"Run.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Run<\/code><\/a>) must specify a <code>@Warmup<\/code> annotation at the run method.<\/li>\n+     <li><p>Base and checked tests (see <a href=\"Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Test<\/code><\/a>, <a href=\"Check.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Check<\/code><\/a>) must specify a <code>@Warmup<\/code> annotation at\n+            the test method.<\/li>\n+ <\/ul><\/div>\n+<dl class=\"notes\">\n+<dt>See Also:<\/dt>\n+<dd><a href=\"Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Test<\/code><\/a>, \n+<a href=\"Check.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Check<\/code><\/a>, \n+<a href=\"Run.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Run<\/code><\/a><\/dd>\n+<\/dl>\n+<\/section>\n+<section class=\"summary\">\n+<ul class=\"summary-list\">\n+<!-- =========== ANNOTATION INTERFACE REQUIRED MEMBER SUMMARY =========== -->\n+<li>\n+<section class=\"member-summary\" id=\"annotation-interface-required-element-summary\">\n+<h2>Required Element Summary<\/h2>\n+<div class=\"caption\"><span>Required Elements<\/span><\/div>\n+<div class=\"summary-table three-column-summary\">\n+<div class=\"table-header col-first\">Modifier and Type<\/div>\n+<div class=\"table-header col-second\">Required Element<\/div>\n+<div class=\"table-header col-last\">Description<\/div>\n+<div class=\"col-first even-row-color\"><code>int<\/code><\/div>\n+<div class=\"col-second even-row-color\"><code><a href=\"#value()\" class=\"member-name-link\">value<\/a><\/code><\/div>\n+<div class=\"col-last even-row-color\">\n+<div class=\"block\">The warm-up iterations for the test.<\/div>\n+<\/div>\n+<\/div>\n+<\/section>\n+<\/li>\n+<\/ul>\n+<\/section>\n+<section class=\"details\" id=\"annotation-interface-element-detail\">\n+<ul class=\"details-list\">\n+<!-- ============ ANNOTATION INTERFACE MEMBER DETAIL =========== -->\n+<li>\n+<section class=\"member-details\">\n+<h2>Element Details<\/h2>\n+<ul class=\"member-list\">\n+<li>\n+<section class=\"detail\" id=\"value()\">\n+<h3>value<\/h3>\n+<div class=\"member-signature\"><span class=\"return-type\">int<\/span>&nbsp;<span class=\"element-name\">value<\/span><\/div>\n+<div class=\"block\">The warm-up iterations for the test.<\/div>\n+<\/section>\n+<\/li>\n+<\/ul>\n+<\/section>\n+<\/li>\n+<\/ul>\n+<\/section>\n+<!-- ========= END OF CLASS DATA ========= -->\n+<\/main>\n+<\/div>\n+<\/div>\n+<\/body>\n+<\/html>\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/doc\/jdk\/test\/lib\/hotspot\/ir_framework\/Warmup.html","additions":130,"deletions":0,"binary":false,"changes":130,"status":"added"},{"patch":"@@ -0,0 +1,225 @@\n+<!DOCTYPE HTML>\n+<html lang=\"en\">\n+<head>\n+<!-- Generated by javadoc (17) on Wed Apr 14 13:12:12 CEST 2021 -->\n+<title>jdk.test.lib.hotspot.ir_framework<\/title>\n+<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n+<meta http-equiv=\"Content-Type\" content=\"text\/html; charset=utf-8\">\n+<meta name=\"dc.created\" content=\"2021-04-14\">\n+<meta name=\"description\" content=\"declaration: package: jdk.test.lib.hotspot.ir_framework\">\n+<meta name=\"generator\" content=\"javadoc\/PackageWriterImpl\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/..\/..\/..\/..\/stylesheet.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/..\/..\/..\/..\/script-dir\/jquery-ui.min.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/..\/..\/..\/..\/jquery-ui.overrides.css\" title=\"Style\">\n+<script type=\"text\/javascript\" src=\"..\/..\/..\/..\/..\/script.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/..\/..\/..\/..\/script-dir\/jquery-3.5.1.min.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/..\/..\/..\/..\/script-dir\/jquery-ui.min.js\"><\/script>\n+<\/head>\n+<body class=\"package-declaration-page\">\n+<script type=\"text\/javascript\">var pathtoroot = \"..\/..\/..\/..\/..\/\";\n+loadScripts(document, 'script');<\/script>\n+<noscript>\n+<div>JavaScript is disabled on your browser.<\/div>\n+<\/noscript>\n+<div class=\"flex-box\">\n+<header role=\"banner\" class=\"flex-header\">\n+<nav role=\"navigation\">\n+<!-- ========= START OF TOP NAVBAR ======= -->\n+<div class=\"top-nav\" id=\"navbar-top\">\n+<div class=\"skip-nav\"><a href=\"#skip-navbar-top\" title=\"Skip navigation links\">Skip navigation links<\/a><\/div>\n+<ul id=\"navbar-top-firstrow\" class=\"nav-list\" title=\"Navigation\">\n+<li class=\"nav-bar-cell1-rev\">Package<\/li>\n+<li>Class<\/li>\n+<li><a href=\"package-tree.html\">Tree<\/a><\/li>\n+<li><a href=\"..\/..\/..\/..\/..\/index-files\/index-1.html\">Index<\/a><\/li>\n+<li><a href=\"..\/..\/..\/..\/..\/help-doc.html\">Help<\/a><\/li>\n+<\/ul>\n+<\/div>\n+<div class=\"sub-nav\">\n+<div class=\"nav-list-search\"><label for=\"search\">SEARCH:<\/label>\n+<input type=\"text\" id=\"search\" value=\"search\" disabled=\"disabled\">\n+<input type=\"reset\" id=\"reset\" value=\"reset\" disabled=\"disabled\">\n+<\/div>\n+<\/div>\n+<!-- ========= END OF TOP NAVBAR ========= -->\n+<span class=\"skip-nav\" id=\"skip-navbar-top\"><\/span><\/nav>\n+<\/header>\n+<div class=\"flex-content\">\n+<main role=\"main\">\n+<div class=\"header\">\n+<h1 title=\"Package jdk.test.lib.hotspot.ir_framework\" class=\"title\">Package jdk.test.lib.hotspot.ir_framework<\/h1>\n+<\/div>\n+<hr>\n+<div class=\"package-signature\">package <span class=\"element-name\">jdk.test.lib.hotspot.ir_framework<\/span><\/div>\n+<section class=\"summary\">\n+<ul class=\"summary-list\">\n+<li>\n+<div class=\"caption\"><span>Class Summary<\/span><\/div>\n+<div class=\"summary-table two-column-summary\">\n+<div class=\"table-header col-first\">Class<\/div>\n+<div class=\"table-header col-last\">Description<\/div>\n+<div class=\"col-first even-row-color\"><a href=\"AbstractInfo.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">AbstractInfo<\/a><\/div>\n+<div class=\"col-last even-row-color\">\n+<div class=\"block\">Base info class which provides some useful utility methods and information about a test.<\/div>\n+<\/div>\n+<div class=\"col-first odd-row-color\"><a href=\"IRNode.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">IRNode<\/a><\/div>\n+<div class=\"col-last odd-row-color\">\n+<div class=\"block\">This class provides default regex strings that can be used in <a href=\"IR.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@IR<\/code><\/a> annotations to specify IR constraints.<\/div>\n+<\/div>\n+<div class=\"col-first even-row-color\"><a href=\"RunInfo.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">RunInfo<\/a><\/div>\n+<div class=\"col-last even-row-color\">\n+<div class=\"block\">Test info class which provides some useful utility methods and information about a <b>custom run test<\/b>.<\/div>\n+<\/div>\n+<div class=\"col-first odd-row-color\"><a href=\"Scenario.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">Scenario<\/a><\/div>\n+<div class=\"col-last odd-row-color\">\n+<div class=\"block\">This class represents a scenario that can be executed by the <a href=\"TestFramework.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\"><code>TestFramework<\/code><\/a>.<\/div>\n+<\/div>\n+<div class=\"col-first even-row-color\"><a href=\"TestFramework.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestFramework<\/a><\/div>\n+<div class=\"col-last even-row-color\">\n+<div class=\"block\">This class represents the main entry point to the test framework whose main purpose is to perform regex-based checks on\n+ the C2 IR shape emitted by the VM flags <code>-XX:+PrintIdeal<\/code> and <code>-XX:+PrintOptoAssembly<\/code>.<\/div>\n+<\/div>\n+<div class=\"col-first odd-row-color\"><a href=\"TestFrameworkExecution.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestFrameworkExecution<\/a><\/div>\n+<div class=\"col-last odd-row-color\">\n+<div class=\"block\">This class' main method is called from <a href=\"TestFramework.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\"><code>TestFramework<\/code><\/a> and represents the so-called \"test VM\".<\/div>\n+<\/div>\n+<div class=\"col-first even-row-color\"><a href=\"TestInfo.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestInfo<\/a><\/div>\n+<div class=\"col-last even-row-color\">\n+<div class=\"block\">Test info class which provides some useful utility methods and information about a <b>checked test<\/b>.<\/div>\n+<\/div>\n+<\/div>\n+<\/li>\n+<li>\n+<div class=\"caption\"><span>Enum Class Summary<\/span><\/div>\n+<div class=\"summary-table two-column-summary\">\n+<div class=\"table-header col-first\">Enum Class<\/div>\n+<div class=\"table-header col-last\">Description<\/div>\n+<div class=\"col-first even-row-color\"><a href=\"Argument.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">Argument<\/a><\/div>\n+<div class=\"col-last even-row-color\">\n+<div class=\"block\">Well-defined argument values that can be used in the <a href=\"Arguments.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Arguments<\/code><\/a> annotation at a <a href=\"Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Test<\/code><\/a> method for a\n+ <b>base test<\/b> or a <b>checked test<\/b>.<\/div>\n+<\/div>\n+<div class=\"col-first odd-row-color\"><a href=\"CheckAt.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">CheckAt<\/a><\/div>\n+<div class=\"col-last odd-row-color\">\n+<div class=\"block\">This enum is used in <a href=\"Check.html#when()\"><code>Check.when()<\/code><\/a> of a <b>checked test<\/b> to specify when the framework will invoke the\n+ check method after invoking the associated <a href=\"Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Test<\/code><\/a> method.<\/div>\n+<\/div>\n+<div class=\"col-first even-row-color\"><a href=\"CompLevel.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">CompLevel<\/a><\/div>\n+<div class=\"col-last even-row-color\">\n+<div class=\"block\">Compilation levels used by the framework.<\/div>\n+<\/div>\n+<div class=\"col-first odd-row-color\"><a href=\"RunMode.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">RunMode<\/a><\/div>\n+<div class=\"col-last odd-row-color\">\n+<div class=\"block\">The run mode for a <b>custom run test<\/b> specified in <a href=\"Run.html#mode()\"><code>Run.mode()<\/code><\/a>.<\/div>\n+<\/div>\n+<\/div>\n+<\/li>\n+<li>\n+<div class=\"caption\"><span>Exception Summary<\/span><\/div>\n+<div class=\"summary-table two-column-summary\">\n+<div class=\"table-header col-first\">Exception<\/div>\n+<div class=\"table-header col-last\">Description<\/div>\n+<div class=\"col-first even-row-color\"><a href=\"IRViolationException.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">IRViolationException<\/a><\/div>\n+<div class=\"col-last even-row-color\">\n+<div class=\"block\">Exception that is thrown if an <a href=\"IR.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>IR<\/code><\/a> rule\/constraint failed.<\/div>\n+<\/div>\n+<div class=\"col-first odd-row-color\"><a href=\"NoTestsRunException.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">NoTestsRunException<\/a><\/div>\n+<div class=\"col-last odd-row-color\">\n+<div class=\"block\">Exception that is thrown by the test VM if no tests are run as a result of specifying <code>-DTest<\/code> and\/or\n+ <code>-DExclude<\/code> defining an empty set with the used test VM flags.<\/div>\n+<\/div>\n+<div class=\"col-first even-row-color\"><a href=\"TestFormatException.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestFormatException<\/a><\/div>\n+<div class=\"col-last even-row-color\">\n+<div class=\"block\">Exception that is thrown if a JTreg test violates the supported format by the test framework.<\/div>\n+<\/div>\n+<div class=\"col-first odd-row-color\"><a href=\"TestFrameworkException.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestFrameworkException<\/a><\/div>\n+<div class=\"col-last odd-row-color\">\n+<div class=\"block\">Exception that is thrown if there is an internal error in the framework.<\/div>\n+<\/div>\n+<div class=\"col-first even-row-color\"><a href=\"TestRunException.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestRunException<\/a><\/div>\n+<div class=\"col-last even-row-color\">\n+<div class=\"block\">Exception that is thrown if the JTreg test throws an exception during the execution of individual tests of the\n+ test class.<\/div>\n+<\/div>\n+<div class=\"col-first odd-row-color\"><a href=\"TestVMException.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestVMException<\/a><\/div>\n+<div class=\"col-last odd-row-color\">\n+<div class=\"block\">Exception that is thrown if the test VM has thrown any kind of exception (except for <a href=\"TestFormatException.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\"><code>TestFormatException<\/code><\/a>).<\/div>\n+<\/div>\n+<\/div>\n+<\/li>\n+<li>\n+<div class=\"caption\"><span>Annotation Interfaces Summary<\/span><\/div>\n+<div class=\"summary-table two-column-summary\">\n+<div class=\"table-header col-first\">Annotation Interface<\/div>\n+<div class=\"table-header col-last\">Description<\/div>\n+<div class=\"col-first even-row-color\"><a href=\"Arguments.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\">Arguments<\/a><\/div>\n+<div class=\"col-last even-row-color\">\n+<div class=\"block\">This annotation is used to specify well-defined <a href=\"Argument.html\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\"><code>Argument<\/code><\/a> values for test methods (specifying <a href=\"Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>Test<\/code><\/a>) when\n+ used as part of a <b>base test<\/b> or <b>checked test<\/b>.<\/div>\n+<\/div>\n+<div class=\"col-first odd-row-color\"><a href=\"Check.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\">Check<\/a><\/div>\n+<div class=\"col-last odd-row-color\">\n+<div class=\"block\">Annotation for a check method of a <b>checked test<\/b>.<\/div>\n+<\/div>\n+<div class=\"col-first even-row-color\"><a href=\"DontCompile.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\">DontCompile<\/a><\/div>\n+<div class=\"col-last even-row-color\">\n+<div class=\"block\">Prevent a compilation of the annotated <b>helper method<\/b> (not specifying <a href=\"Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@Test<\/code><\/a>,\n+ <a href=\"Check.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@Check<\/code><\/a> or <a href=\"Run.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@Run<\/code><\/a>):\n+\n+ \n+     <\/div>\n+<\/div>\n+<div class=\"col-first odd-row-color\"><a href=\"DontInline.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\">DontInline<\/a><\/div>\n+<div class=\"col-last odd-row-color\">\n+<div class=\"block\">Prevent an inlining of the annotated <b>helper method<\/b> (not specifying <a href=\"Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@Test<\/code><\/a>, <a href=\"Check.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@Check<\/code><\/a>,\n+ or <a href=\"Run.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@Run<\/code><\/a>).<\/div>\n+<\/div>\n+<div class=\"col-first even-row-color\"><a href=\"ForceCompile.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\">ForceCompile<\/a><\/div>\n+<div class=\"col-last even-row-color\">\n+<div class=\"block\">Force a compilation of the annotated <b>helper method<\/b> (not specifying <a href=\"Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@Test<\/code><\/a>,\n+ <a href=\"Check.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@Check<\/code><\/a> or <a href=\"Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@Run<\/code><\/a>) immediately at the specified level:\n+ \n+     <\/div>\n+<\/div>\n+<div class=\"col-first odd-row-color\"><a href=\"ForceCompileClassInitializer.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\">ForceCompileClassInitializer<\/a><\/div>\n+<div class=\"col-last odd-row-color\">\n+<div class=\"block\">Force a compilation of the static class initializer method (<code>&lt;clinit&gt;<\/code>) of the annotated test or helper class\n+ immediately at the specified level:\n+ \n+     <\/div>\n+<\/div>\n+<div class=\"col-first even-row-color\"><a href=\"ForceInline.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\">ForceInline<\/a><\/div>\n+<div class=\"col-last even-row-color\">\n+<div class=\"block\">Force an inlining of the annotated <b>helper method<\/b> (not specifying <a href=\"Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@Test<\/code><\/a>, <a href=\"Check.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@Check<\/code><\/a>,\n+ or <a href=\"Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@Run<\/code><\/a>).<\/div>\n+<\/div>\n+<div class=\"col-first odd-row-color\"><a href=\"IR.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\">IR<\/a><\/div>\n+<div class=\"col-last odd-row-color\">\n+<div class=\"block\">This annotation is used to define a constraint\/rule\/check on the resulting IR of a test method (method with\n+ <a href=\"Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@Test<\/code><\/a> annotation).<\/div>\n+<\/div>\n+<div class=\"col-first even-row-color\"><a href=\"IRs.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\">IRs<\/a><\/div>\n+<div class=\"col-last even-row-color\">\n+<div class=\"block\">Annotation to allow to specify multiple <a href=\"IR.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@IR<\/code><\/a> annotations at a <a href=\"Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\"><code>@Test<\/code><\/a> method.<\/div>\n+<\/div>\n+<div class=\"col-first odd-row-color\"><a href=\"Run.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\">Run<\/a><\/div>\n+<div class=\"col-last odd-row-color\">\n+<div class=\"block\">Annotation for a run method of a <b>custom run test<\/b>.<\/div>\n+<\/div>\n+<div class=\"col-first even-row-color\"><a href=\"Test.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\">Test<\/a><\/div>\n+<div class=\"col-last even-row-color\">\n+<div class=\"block\">Annotate all methods in your test class which the framework should test with <code>@Test<\/code>.<\/div>\n+<\/div>\n+<div class=\"col-first odd-row-color\"><a href=\"Warmup.html\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\">Warmup<\/a><\/div>\n+<div class=\"col-last odd-row-color\">\n+<div class=\"block\">This annotation overrides the default number (2000) of times the framework should warm up a test.<\/div>\n+<\/div>\n+<\/div>\n+<\/li>\n+<\/ul>\n+<\/section>\n+<\/main>\n+<\/div>\n+<\/div>\n+<\/body>\n+<\/html>\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/doc\/jdk\/test\/lib\/hotspot\/ir_framework\/package-summary.html","additions":225,"deletions":0,"binary":false,"changes":225,"status":"added"},{"patch":"@@ -0,0 +1,127 @@\n+<!DOCTYPE HTML>\n+<html lang=\"en\">\n+<head>\n+<!-- Generated by javadoc (17) on Wed Apr 14 13:12:12 CEST 2021 -->\n+<title>jdk.test.lib.hotspot.ir_framework Class Hierarchy<\/title>\n+<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n+<meta http-equiv=\"Content-Type\" content=\"text\/html; charset=utf-8\">\n+<meta name=\"dc.created\" content=\"2021-04-14\">\n+<meta name=\"description\" content=\"tree: package: jdk.test.lib.hotspot.ir_framework\">\n+<meta name=\"generator\" content=\"javadoc\/PackageTreeWriter\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/..\/..\/..\/..\/stylesheet.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/..\/..\/..\/..\/script-dir\/jquery-ui.min.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/..\/..\/..\/..\/jquery-ui.overrides.css\" title=\"Style\">\n+<script type=\"text\/javascript\" src=\"..\/..\/..\/..\/..\/script.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/..\/..\/..\/..\/script-dir\/jquery-3.5.1.min.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"..\/..\/..\/..\/..\/script-dir\/jquery-ui.min.js\"><\/script>\n+<\/head>\n+<body class=\"package-tree-page\">\n+<script type=\"text\/javascript\">var pathtoroot = \"..\/..\/..\/..\/..\/\";\n+loadScripts(document, 'script');<\/script>\n+<noscript>\n+<div>JavaScript is disabled on your browser.<\/div>\n+<\/noscript>\n+<div class=\"flex-box\">\n+<header role=\"banner\" class=\"flex-header\">\n+<nav role=\"navigation\">\n+<!-- ========= START OF TOP NAVBAR ======= -->\n+<div class=\"top-nav\" id=\"navbar-top\">\n+<div class=\"skip-nav\"><a href=\"#skip-navbar-top\" title=\"Skip navigation links\">Skip navigation links<\/a><\/div>\n+<ul id=\"navbar-top-firstrow\" class=\"nav-list\" title=\"Navigation\">\n+<li><a href=\"package-summary.html\">Package<\/a><\/li>\n+<li>Class<\/li>\n+<li class=\"nav-bar-cell1-rev\">Tree<\/li>\n+<li><a href=\"..\/..\/..\/..\/..\/index-files\/index-1.html\">Index<\/a><\/li>\n+<li><a href=\"..\/..\/..\/..\/..\/help-doc.html\">Help<\/a><\/li>\n+<\/ul>\n+<\/div>\n+<div class=\"sub-nav\">\n+<div class=\"nav-list-search\"><label for=\"search\">SEARCH:<\/label>\n+<input type=\"text\" id=\"search\" value=\"search\" disabled=\"disabled\">\n+<input type=\"reset\" id=\"reset\" value=\"reset\" disabled=\"disabled\">\n+<\/div>\n+<\/div>\n+<!-- ========= END OF TOP NAVBAR ========= -->\n+<span class=\"skip-nav\" id=\"skip-navbar-top\"><\/span><\/nav>\n+<\/header>\n+<div class=\"flex-content\">\n+<main role=\"main\">\n+<div class=\"header\">\n+<h1 class=\"title\">Hierarchy For Package jdk.test.lib.hotspot.ir_framework<\/h1>\n+<\/div>\n+<section class=\"hierarchy\">\n+<h2 title=\"Class Hierarchy\">Class Hierarchy<\/h2>\n+<ul>\n+<li class=\"circle\">java.lang.<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html\" class=\"type-name-link external-link\" title=\"class or interface in java.lang\">Object<\/a>\n+<ul>\n+<li class=\"circle\">jdk.test.lib.hotspot.ir_framework.<a href=\"AbstractInfo.html\" class=\"type-name-link\" title=\"class in jdk.test.lib.hotspot.ir_framework\">AbstractInfo<\/a>\n+<ul>\n+<li class=\"circle\">jdk.test.lib.hotspot.ir_framework.<a href=\"RunInfo.html\" class=\"type-name-link\" title=\"class in jdk.test.lib.hotspot.ir_framework\">RunInfo<\/a><\/li>\n+<li class=\"circle\">jdk.test.lib.hotspot.ir_framework.<a href=\"TestInfo.html\" class=\"type-name-link\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestInfo<\/a><\/li>\n+<\/ul>\n+<\/li>\n+<li class=\"circle\">jdk.test.lib.hotspot.ir_framework.<a href=\"IRNode.html\" class=\"type-name-link\" title=\"class in jdk.test.lib.hotspot.ir_framework\">IRNode<\/a><\/li>\n+<li class=\"circle\">jdk.test.lib.hotspot.ir_framework.<a href=\"Scenario.html\" class=\"type-name-link\" title=\"class in jdk.test.lib.hotspot.ir_framework\">Scenario<\/a><\/li>\n+<li class=\"circle\">jdk.test.lib.hotspot.ir_framework.<a href=\"TestFramework.html\" class=\"type-name-link\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestFramework<\/a><\/li>\n+<li class=\"circle\">jdk.test.lib.hotspot.ir_framework.<a href=\"TestFrameworkExecution.html\" class=\"type-name-link\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestFrameworkExecution<\/a><\/li>\n+<li class=\"circle\">java.lang.<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Throwable.html\" class=\"type-name-link external-link\" title=\"class or interface in java.lang\">Throwable<\/a> (implements java.io.<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/io\/Serializable.html\" title=\"class or interface in java.io\" class=\"external-link\">Serializable<\/a>)\n+<ul>\n+<li class=\"circle\">java.lang.<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Exception.html\" class=\"type-name-link external-link\" title=\"class or interface in java.lang\">Exception<\/a>\n+<ul>\n+<li class=\"circle\">java.lang.<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/RuntimeException.html\" class=\"type-name-link external-link\" title=\"class or interface in java.lang\">RuntimeException<\/a>\n+<ul>\n+<li class=\"circle\">jdk.test.lib.hotspot.ir_framework.<a href=\"IRViolationException.html\" class=\"type-name-link\" title=\"class in jdk.test.lib.hotspot.ir_framework\">IRViolationException<\/a><\/li>\n+<li class=\"circle\">jdk.test.lib.hotspot.ir_framework.<a href=\"NoTestsRunException.html\" class=\"type-name-link\" title=\"class in jdk.test.lib.hotspot.ir_framework\">NoTestsRunException<\/a><\/li>\n+<li class=\"circle\">jdk.test.lib.hotspot.ir_framework.<a href=\"TestFormatException.html\" class=\"type-name-link\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestFormatException<\/a><\/li>\n+<li class=\"circle\">jdk.test.lib.hotspot.ir_framework.<a href=\"TestFrameworkException.html\" class=\"type-name-link\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestFrameworkException<\/a><\/li>\n+<li class=\"circle\">jdk.test.lib.hotspot.ir_framework.<a href=\"TestRunException.html\" class=\"type-name-link\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestRunException<\/a><\/li>\n+<li class=\"circle\">jdk.test.lib.hotspot.ir_framework.<a href=\"TestVMException.html\" class=\"type-name-link\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestVMException<\/a><\/li>\n+<\/ul>\n+<\/li>\n+<\/ul>\n+<\/li>\n+<\/ul>\n+<\/li>\n+<\/ul>\n+<\/li>\n+<\/ul>\n+<\/section>\n+<section class=\"hierarchy\">\n+<h2 title=\"Annotation Interface Hierarchy\">Annotation Interface Hierarchy<\/h2>\n+<ul>\n+<li class=\"circle\">jdk.test.lib.hotspot.ir_framework.<a href=\"Arguments.html\" class=\"type-name-link\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\">Arguments<\/a> (implements java.lang.annotation.<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/annotation\/Annotation.html\" title=\"class or interface in java.lang.annotation\" class=\"external-link\">Annotation<\/a>)<\/li>\n+<li class=\"circle\">jdk.test.lib.hotspot.ir_framework.<a href=\"Check.html\" class=\"type-name-link\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\">Check<\/a> (implements java.lang.annotation.<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/annotation\/Annotation.html\" title=\"class or interface in java.lang.annotation\" class=\"external-link\">Annotation<\/a>)<\/li>\n+<li class=\"circle\">jdk.test.lib.hotspot.ir_framework.<a href=\"DontCompile.html\" class=\"type-name-link\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\">DontCompile<\/a> (implements java.lang.annotation.<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/annotation\/Annotation.html\" title=\"class or interface in java.lang.annotation\" class=\"external-link\">Annotation<\/a>)<\/li>\n+<li class=\"circle\">jdk.test.lib.hotspot.ir_framework.<a href=\"DontInline.html\" class=\"type-name-link\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\">DontInline<\/a> (implements java.lang.annotation.<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/annotation\/Annotation.html\" title=\"class or interface in java.lang.annotation\" class=\"external-link\">Annotation<\/a>)<\/li>\n+<li class=\"circle\">jdk.test.lib.hotspot.ir_framework.<a href=\"ForceCompile.html\" class=\"type-name-link\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\">ForceCompile<\/a> (implements java.lang.annotation.<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/annotation\/Annotation.html\" title=\"class or interface in java.lang.annotation\" class=\"external-link\">Annotation<\/a>)<\/li>\n+<li class=\"circle\">jdk.test.lib.hotspot.ir_framework.<a href=\"ForceCompileClassInitializer.html\" class=\"type-name-link\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\">ForceCompileClassInitializer<\/a> (implements java.lang.annotation.<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/annotation\/Annotation.html\" title=\"class or interface in java.lang.annotation\" class=\"external-link\">Annotation<\/a>)<\/li>\n+<li class=\"circle\">jdk.test.lib.hotspot.ir_framework.<a href=\"ForceInline.html\" class=\"type-name-link\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\">ForceInline<\/a> (implements java.lang.annotation.<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/annotation\/Annotation.html\" title=\"class or interface in java.lang.annotation\" class=\"external-link\">Annotation<\/a>)<\/li>\n+<li class=\"circle\">jdk.test.lib.hotspot.ir_framework.<a href=\"IR.html\" class=\"type-name-link\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\">IR<\/a> (implements java.lang.annotation.<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/annotation\/Annotation.html\" title=\"class or interface in java.lang.annotation\" class=\"external-link\">Annotation<\/a>)<\/li>\n+<li class=\"circle\">jdk.test.lib.hotspot.ir_framework.<a href=\"IRs.html\" class=\"type-name-link\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\">IRs<\/a> (implements java.lang.annotation.<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/annotation\/Annotation.html\" title=\"class or interface in java.lang.annotation\" class=\"external-link\">Annotation<\/a>)<\/li>\n+<li class=\"circle\">jdk.test.lib.hotspot.ir_framework.<a href=\"Run.html\" class=\"type-name-link\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\">Run<\/a> (implements java.lang.annotation.<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/annotation\/Annotation.html\" title=\"class or interface in java.lang.annotation\" class=\"external-link\">Annotation<\/a>)<\/li>\n+<li class=\"circle\">jdk.test.lib.hotspot.ir_framework.<a href=\"Test.html\" class=\"type-name-link\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\">Test<\/a> (implements java.lang.annotation.<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/annotation\/Annotation.html\" title=\"class or interface in java.lang.annotation\" class=\"external-link\">Annotation<\/a>)<\/li>\n+<li class=\"circle\">jdk.test.lib.hotspot.ir_framework.<a href=\"Warmup.html\" class=\"type-name-link\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\">Warmup<\/a> (implements java.lang.annotation.<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/annotation\/Annotation.html\" title=\"class or interface in java.lang.annotation\" class=\"external-link\">Annotation<\/a>)<\/li>\n+<\/ul>\n+<\/section>\n+<section class=\"hierarchy\">\n+<h2 title=\"Enum Class Hierarchy\">Enum Class Hierarchy<\/h2>\n+<ul>\n+<li class=\"circle\">java.lang.<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html\" class=\"type-name-link external-link\" title=\"class or interface in java.lang\">Object<\/a>\n+<ul>\n+<li class=\"circle\">java.lang.<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Enum.html\" class=\"type-name-link external-link\" title=\"class or interface in java.lang\">Enum<\/a>&lt;E&gt; (implements java.lang.<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Comparable.html\" title=\"class or interface in java.lang\" class=\"external-link\">Comparable<\/a>&lt;T&gt;, java.lang.constant.<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/constant\/Constable.html\" title=\"class or interface in java.lang.constant\" class=\"external-link\">Constable<\/a>, java.io.<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/io\/Serializable.html\" title=\"class or interface in java.io\" class=\"external-link\">Serializable<\/a>)\n+<ul>\n+<li class=\"circle\">jdk.test.lib.hotspot.ir_framework.<a href=\"Argument.html\" class=\"type-name-link\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">Argument<\/a><\/li>\n+<li class=\"circle\">jdk.test.lib.hotspot.ir_framework.<a href=\"CheckAt.html\" class=\"type-name-link\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">CheckAt<\/a><\/li>\n+<li class=\"circle\">jdk.test.lib.hotspot.ir_framework.<a href=\"CompLevel.html\" class=\"type-name-link\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">CompLevel<\/a><\/li>\n+<li class=\"circle\">jdk.test.lib.hotspot.ir_framework.<a href=\"RunMode.html\" class=\"type-name-link\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">RunMode<\/a><\/li>\n+<\/ul>\n+<\/li>\n+<\/ul>\n+<\/li>\n+<\/ul>\n+<\/section>\n+<\/main>\n+<\/div>\n+<\/div>\n+<\/body>\n+<\/html>\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/doc\/jdk\/test\/lib\/hotspot\/ir_framework\/package-tree.html","additions":127,"deletions":0,"binary":false,"changes":127,"status":"added"},{"patch":"","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/doc\/jquery-ui.overrides.css","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/jquery-ui.overrides.css","status":"copied"},{"patch":"@@ -0,0 +1,1 @@\n+memberSearchIndex = [{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"Scenario\",\"l\":\"addFlags(String...)\",\"u\":\"addFlags(java.lang.String...)\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"TestFramework\",\"l\":\"addFlags(String...)\",\"u\":\"addFlags(java.lang.String...)\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"TestFramework\",\"l\":\"addHelperClasses(Class<?>...)\",\"u\":\"addHelperClasses(java.lang.Class...)\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"TestFramework\",\"l\":\"addScenarios(Scenario...)\",\"u\":\"addScenarios(jdk.test.lib.hotspot.ir_framework.Scenario...)\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"IRNode\",\"l\":\"ALLOC\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"IRNode\",\"l\":\"ALLOC_ARRAY\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"IRNode\",\"l\":\"ALLOC_ARRAY_OF\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"IRNode\",\"l\":\"ALLOC_OF\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"CompLevel\",\"l\":\"ANY\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"IR\",\"l\":\"applyIf()\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"IR\",\"l\":\"applyIfAnd()\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"IR\",\"l\":\"applyIfNot()\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"IR\",\"l\":\"applyIfOr()\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"TestFramework\",\"l\":\"assertCompiled(Method)\",\"u\":\"assertCompiled(java.lang.reflect.Method)\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"TestFramework\",\"l\":\"assertCompiledAtLevel(Method, CompLevel)\",\"u\":\"assertCompiledAtLevel(java.lang.reflect.Method,jdk.test.lib.hotspot.ir_framework.CompLevel)\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"TestFramework\",\"l\":\"assertCompiledByC1(Method)\",\"u\":\"assertCompiledByC1(java.lang.reflect.Method)\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"TestFramework\",\"l\":\"assertCompiledByC2(Method)\",\"u\":\"assertCompiledByC2(java.lang.reflect.Method)\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"TestFramework\",\"l\":\"assertDeoptimizedByC1(Method)\",\"u\":\"assertDeoptimizedByC1(java.lang.reflect.Method)\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"TestFramework\",\"l\":\"assertDeoptimizedByC2(Method)\",\"u\":\"assertDeoptimizedByC2(java.lang.reflect.Method)\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"TestFramework\",\"l\":\"assertNotCompiled(Method)\",\"u\":\"assertNotCompiled(java.lang.reflect.Method)\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"Argument\",\"l\":\"BOOLEAN_TOGGLE_FIRST_FALSE\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"Argument\",\"l\":\"BOOLEAN_TOGGLE_FIRST_TRUE\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"CompLevel\",\"l\":\"C1\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"CompLevel\",\"l\":\"C1_FULL_PROFILE\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"CompLevel\",\"l\":\"C1_LIMITED_PROFILE\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"CompLevel\",\"l\":\"C2\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"IRNode\",\"l\":\"CALL\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"IRNode\",\"l\":\"CHECKCAST_ARRAY\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"IRNode\",\"l\":\"CHECKCAST_ARRAY_OF\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"IRNode\",\"l\":\"CHECKCAST_ARRAYCOPY\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"IRNode\",\"l\":\"CLASS_CHECK_TRAP\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"TestFramework\",\"l\":\"compile(Method, CompLevel)\",\"u\":\"compile(java.lang.reflect.Method,jdk.test.lib.hotspot.ir_framework.CompLevel)\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"CheckAt\",\"l\":\"COMPILED\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"Test\",\"l\":\"compLevel()\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"IRNode\",\"l\":\"COUNTEDLOOP\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"IRNode\",\"l\":\"COUNTEDLOOP_MAIN\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"IR\",\"l\":\"counts()\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"Argument\",\"l\":\"DEFAULT\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"TestFramework\",\"l\":\"deoptimize(Method)\",\"u\":\"deoptimize(java.lang.reflect.Method)\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"CheckAt\",\"l\":\"EACH_INVOCATION\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"IR\",\"l\":\"failOn()\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"Argument\",\"l\":\"FALSE\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"IRNode\",\"l\":\"FIELD_ACCESS\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"CompLevel\",\"l\":\"forValue(int)\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"TestFrameworkExecution\",\"l\":\"getClassObject(String, String)\",\"u\":\"getClassObject(java.lang.String,java.lang.String)\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"IRViolationException\",\"l\":\"getExceptionInfo()\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"TestVMException\",\"l\":\"getExceptionInfo()\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"Scenario\",\"l\":\"getFlags()\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"Scenario\",\"l\":\"getIndex()\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"TestFramework\",\"l\":\"getLastTestVMOutput()\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"AbstractInfo\",\"l\":\"getMethod(Class<?>, String, Class<?>...)\",\"u\":\"getMethod(java.lang.Class,java.lang.String,java.lang.Class...)\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"AbstractInfo\",\"l\":\"getRandom()\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"RunInfo\",\"l\":\"getTest()\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"TestInfo\",\"l\":\"getTest()\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"RunInfo\",\"l\":\"getTest(String)\",\"u\":\"getTest(java.lang.String)\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"AbstractInfo\",\"l\":\"getTestClassMethod(String, Class<?>...)\",\"u\":\"getTestClassMethod(java.lang.String,java.lang.Class...)\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"Scenario\",\"l\":\"getTestVMOutput()\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"CompLevel\",\"l\":\"getValue()\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"IRNode\",\"l\":\"INTRINSIC_OR_TYPE_CHECKED_INLINING_TRAP\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"IRNode\",\"l\":\"IRNode()\",\"u\":\"%3Cinit%3E()\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"TestInfo\",\"l\":\"isC1Compiled()\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"TestFramework\",\"l\":\"isC1Compiled(Method)\",\"u\":\"isC1Compiled(java.lang.reflect.Method)\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"AbstractInfo\",\"l\":\"isC2CompilationEnabled()\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"TestInfo\",\"l\":\"isC2Compiled()\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"TestFramework\",\"l\":\"isC2Compiled(Method)\",\"u\":\"isC2Compiled(java.lang.reflect.Method)\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"RunInfo\",\"l\":\"isCompilationSkipped()\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"TestInfo\",\"l\":\"isCompilationSkipped()\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"RunInfo\",\"l\":\"isCompilationSkipped(String)\",\"u\":\"isCompilationSkipped(java.lang.String)\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"TestFramework\",\"l\":\"isCompiled(Method)\",\"u\":\"isCompiled(java.lang.reflect.Method)\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"TestInfo\",\"l\":\"isCompiledAtLevel(CompLevel)\",\"u\":\"isCompiledAtLevel(jdk.test.lib.hotspot.ir_framework.CompLevel)\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"TestFramework\",\"l\":\"isCompiledAtLevel(Method, CompLevel)\",\"u\":\"isCompiledAtLevel(java.lang.reflect.Method,jdk.test.lib.hotspot.ir_framework.CompLevel)\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"RunInfo\",\"l\":\"isTestC1Compiled()\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"RunInfo\",\"l\":\"isTestC1Compiled(String)\",\"u\":\"isTestC1Compiled(java.lang.String)\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"RunInfo\",\"l\":\"isTestC2Compiled()\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"RunInfo\",\"l\":\"isTestC2Compiled(String)\",\"u\":\"isTestC2Compiled(java.lang.String)\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"RunInfo\",\"l\":\"isTestCompiledAtLevel(CompLevel)\",\"u\":\"isTestCompiledAtLevel(jdk.test.lib.hotspot.ir_framework.CompLevel)\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"RunInfo\",\"l\":\"isTestCompiledAtLevel(String, CompLevel)\",\"u\":\"isTestCompiledAtLevel(java.lang.String,jdk.test.lib.hotspot.ir_framework.CompLevel)\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"AbstractInfo\",\"l\":\"isWarmUp()\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"TestFramework\",\"l\":\"JTREG_WHITELIST_FLAGS\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"IRNode\",\"l\":\"LOAD\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"IRNode\",\"l\":\"LOAD_B\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"IRNode\",\"l\":\"LOAD_B_OF_CLASS\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"IRNode\",\"l\":\"LOAD_D\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"IRNode\",\"l\":\"LOAD_D_OF_CLASS\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"IRNode\",\"l\":\"LOAD_F\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"IRNode\",\"l\":\"LOAD_F_OF_CLASS\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"IRNode\",\"l\":\"LOAD_I\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"IRNode\",\"l\":\"LOAD_I_OF_CLASS\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"IRNode\",\"l\":\"LOAD_KLASS\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"IRNode\",\"l\":\"LOAD_L\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"IRNode\",\"l\":\"LOAD_L_OF_CLASS\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"IRNode\",\"l\":\"LOAD_N\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"IRNode\",\"l\":\"LOAD_N_OF_CLASS\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"IRNode\",\"l\":\"LOAD_OF_CLASS\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"IRNode\",\"l\":\"LOAD_OF_FIELD\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"IRNode\",\"l\":\"LOAD_P\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"IRNode\",\"l\":\"LOAD_P_OF_CLASS\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"IRNode\",\"l\":\"LOAD_S\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"IRNode\",\"l\":\"LOAD_S_OF_CLASS\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"IRNode\",\"l\":\"LOAD_UB\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"IRNode\",\"l\":\"LOAD_UB_OF_CLASS\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"IRNode\",\"l\":\"LOAD_US\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"IRNode\",\"l\":\"LOAD_US_OF_CLASS\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"IRNode\",\"l\":\"LOOP\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"TestFrameworkExecution\",\"l\":\"main(String[])\",\"u\":\"main(java.lang.String[])\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"Argument\",\"l\":\"MAX\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"IRNode\",\"l\":\"MEMBAR\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"Argument\",\"l\":\"MIN\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"Run\",\"l\":\"mode()\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"RunMode\",\"l\":\"NORMAL\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"IRNode\",\"l\":\"NULL_ASSERT_TRAP\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"IRNode\",\"l\":\"NULL_CHECK_TRAP\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"Argument\",\"l\":\"NUMBER_42\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"Argument\",\"l\":\"NUMBER_MINUS_42\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"TestFrameworkExecution\",\"l\":\"PerMethodTrapLimit\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"IRNode\",\"l\":\"PREDICATE_TRAP\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"TestFrameworkExecution\",\"l\":\"ProfileInterpreter\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"Argument\",\"l\":\"RANDOM_EACH\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"Argument\",\"l\":\"RANDOM_ONCE\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"IRNode\",\"l\":\"RANGE_CHECK_TRAP\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"TestFramework\",\"l\":\"run()\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"TestFramework\",\"l\":\"run(Class<?>)\",\"u\":\"run(java.lang.Class)\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"TestFramework\",\"l\":\"runWithFlags(Class<?>, String...)\",\"u\":\"runWithFlags(java.lang.Class,java.lang.String...)\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"TestFramework\",\"l\":\"runWithFlags(String...)\",\"u\":\"runWithFlags(java.lang.String...)\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"TestFramework\",\"l\":\"runWithHelperClasses(Class<?>, Class<?>...)\",\"u\":\"runWithHelperClasses(java.lang.Class,java.lang.Class...)\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"TestFramework\",\"l\":\"runWithScenarios(Class<?>, Scenario...)\",\"u\":\"runWithScenarios(java.lang.Class,jdk.test.lib.hotspot.ir_framework.Scenario...)\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"TestFramework\",\"l\":\"runWithScenarios(Scenario...)\",\"u\":\"runWithScenarios(jdk.test.lib.hotspot.ir_framework.Scenario...)\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"Scenario\",\"l\":\"Scenario(int, String...)\",\"u\":\"%3Cinit%3E(int,java.lang.String...)\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"IRNode\",\"l\":\"SCOPE_OBJECT\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"TestFramework\",\"l\":\"setDefaultWarmup(int)\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"CompLevel\",\"l\":\"SKIP\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"RunMode\",\"l\":\"STANDALONE\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"TestFramework\",\"l\":\"start()\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"IRNode\",\"l\":\"STORE\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"IRNode\",\"l\":\"STORE_B\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"IRNode\",\"l\":\"STORE_B_OF_CLASS\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"IRNode\",\"l\":\"STORE_C\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"IRNode\",\"l\":\"STORE_C_OF_CLASS\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"IRNode\",\"l\":\"STORE_D\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"IRNode\",\"l\":\"STORE_D_OF_CLASS\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"IRNode\",\"l\":\"STORE_F\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"IRNode\",\"l\":\"STORE_F_OF_CLASS\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"IRNode\",\"l\":\"STORE_I\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"IRNode\",\"l\":\"STORE_I_OF_CLASS\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"IRNode\",\"l\":\"STORE_L\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"IRNode\",\"l\":\"STORE_L_OF_CLASS\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"IRNode\",\"l\":\"STORE_N\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"IRNode\",\"l\":\"STORE_N_OF_CLASS\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"IRNode\",\"l\":\"STORE_OF_CLASS\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"IRNode\",\"l\":\"STORE_OF_FIELD\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"IRNode\",\"l\":\"STORE_P\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"IRNode\",\"l\":\"STORE_P_OF_CLASS\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"Check\",\"l\":\"test()\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"Run\",\"l\":\"test()\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"AbstractInfo\",\"l\":\"testClass\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"TestFramework\",\"l\":\"TestFramework()\",\"u\":\"%3Cinit%3E()\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"TestFramework\",\"l\":\"TestFramework(Class<?>)\",\"u\":\"%3Cinit%3E(java.lang.Class)\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"AbstractInfo\",\"l\":\"toggleBoolean()\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"IRNode\",\"l\":\"TRAP\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"Argument\",\"l\":\"TRUE\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"IRNode\",\"l\":\"UNHANDLED_TRAP\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"IRNode\",\"l\":\"UNSTABLE_IF_TRAP\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"Arguments\",\"l\":\"value()\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"DontCompile\",\"l\":\"value()\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"ForceCompile\",\"l\":\"value()\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"ForceCompileClassInitializer\",\"l\":\"value()\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"IRs\",\"l\":\"value()\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"Warmup\",\"l\":\"value()\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"Argument\",\"l\":\"valueOf(String)\",\"u\":\"valueOf(java.lang.String)\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"CheckAt\",\"l\":\"valueOf(String)\",\"u\":\"valueOf(java.lang.String)\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"CompLevel\",\"l\":\"valueOf(String)\",\"u\":\"valueOf(java.lang.String)\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"RunMode\",\"l\":\"valueOf(String)\",\"u\":\"valueOf(java.lang.String)\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"Argument\",\"l\":\"values()\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"CheckAt\",\"l\":\"values()\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"CompLevel\",\"l\":\"values()\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"RunMode\",\"l\":\"values()\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"CompLevel\",\"l\":\"WAIT_FOR_COMPILATION\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"TestFrameworkExecution\",\"l\":\"WARMUP_ITERATIONS\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"c\":\"Check\",\"l\":\"when()\"}];updateSearchResults();\n\\ No newline at end of file\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/doc\/member-search-index.js","additions":1,"deletions":0,"binary":false,"changes":1,"status":"added"},{"patch":"@@ -0,0 +1,1 @@\n+moduleSearchIndex = [];updateSearchResults();\n\\ No newline at end of file\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/doc\/module-search-index.js","additions":1,"deletions":0,"binary":false,"changes":1,"status":"added"},{"patch":"@@ -0,0 +1,131 @@\n+<!DOCTYPE HTML>\n+<html lang=\"en\">\n+<head>\n+<!-- Generated by javadoc (17) on Wed Apr 14 13:12:12 CEST 2021 -->\n+<title>Class Hierarchy<\/title>\n+<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n+<meta http-equiv=\"Content-Type\" content=\"text\/html; charset=utf-8\">\n+<meta name=\"dc.created\" content=\"2021-04-14\">\n+<meta name=\"description\" content=\"class tree\">\n+<meta name=\"generator\" content=\"javadoc\/TreeWriter\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"stylesheet.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"script-dir\/jquery-ui.min.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"jquery-ui.overrides.css\" title=\"Style\">\n+<script type=\"text\/javascript\" src=\"script.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"script-dir\/jquery-3.5.1.min.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"script-dir\/jquery-ui.min.js\"><\/script>\n+<\/head>\n+<body class=\"tree-page\">\n+<script type=\"text\/javascript\">var pathtoroot = \".\/\";\n+loadScripts(document, 'script');<\/script>\n+<noscript>\n+<div>JavaScript is disabled on your browser.<\/div>\n+<\/noscript>\n+<div class=\"flex-box\">\n+<header role=\"banner\" class=\"flex-header\">\n+<nav role=\"navigation\">\n+<!-- ========= START OF TOP NAVBAR ======= -->\n+<div class=\"top-nav\" id=\"navbar-top\">\n+<div class=\"skip-nav\"><a href=\"#skip-navbar-top\" title=\"Skip navigation links\">Skip navigation links<\/a><\/div>\n+<ul id=\"navbar-top-firstrow\" class=\"nav-list\" title=\"Navigation\">\n+<li>Package<\/li>\n+<li>Class<\/li>\n+<li class=\"nav-bar-cell1-rev\">Tree<\/li>\n+<li><a href=\"index-files\/index-1.html\">Index<\/a><\/li>\n+<li><a href=\"help-doc.html\">Help<\/a><\/li>\n+<\/ul>\n+<\/div>\n+<div class=\"sub-nav\">\n+<div class=\"nav-list-search\"><label for=\"search\">SEARCH:<\/label>\n+<input type=\"text\" id=\"search\" value=\"search\" disabled=\"disabled\">\n+<input type=\"reset\" id=\"reset\" value=\"reset\" disabled=\"disabled\">\n+<\/div>\n+<\/div>\n+<!-- ========= END OF TOP NAVBAR ========= -->\n+<span class=\"skip-nav\" id=\"skip-navbar-top\"><\/span><\/nav>\n+<\/header>\n+<div class=\"flex-content\">\n+<main role=\"main\">\n+<div class=\"header\">\n+<h1 class=\"title\">Hierarchy For All Packages<\/h1>\n+<span class=\"package-hierarchy-label\">Package Hierarchies:<\/span>\n+<ul class=\"horizontal\">\n+<li><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/package-tree.html\">jdk.test.lib.hotspot.ir_framework<\/a><\/li>\n+<\/ul>\n+<\/div>\n+<section class=\"hierarchy\">\n+<h2 title=\"Class Hierarchy\">Class Hierarchy<\/h2>\n+<ul>\n+<li class=\"circle\">java.lang.<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html\" class=\"type-name-link external-link\" title=\"class or interface in java.lang\">Object<\/a>\n+<ul>\n+<li class=\"circle\">jdk.test.lib.hotspot.ir_framework.<a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/AbstractInfo.html\" class=\"type-name-link\" title=\"class in jdk.test.lib.hotspot.ir_framework\">AbstractInfo<\/a>\n+<ul>\n+<li class=\"circle\">jdk.test.lib.hotspot.ir_framework.<a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/RunInfo.html\" class=\"type-name-link\" title=\"class in jdk.test.lib.hotspot.ir_framework\">RunInfo<\/a><\/li>\n+<li class=\"circle\">jdk.test.lib.hotspot.ir_framework.<a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/TestInfo.html\" class=\"type-name-link\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestInfo<\/a><\/li>\n+<\/ul>\n+<\/li>\n+<li class=\"circle\">jdk.test.lib.hotspot.ir_framework.<a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/IRNode.html\" class=\"type-name-link\" title=\"class in jdk.test.lib.hotspot.ir_framework\">IRNode<\/a><\/li>\n+<li class=\"circle\">jdk.test.lib.hotspot.ir_framework.<a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/Scenario.html\" class=\"type-name-link\" title=\"class in jdk.test.lib.hotspot.ir_framework\">Scenario<\/a><\/li>\n+<li class=\"circle\">jdk.test.lib.hotspot.ir_framework.<a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/TestFramework.html\" class=\"type-name-link\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestFramework<\/a><\/li>\n+<li class=\"circle\">jdk.test.lib.hotspot.ir_framework.<a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/TestFrameworkExecution.html\" class=\"type-name-link\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestFrameworkExecution<\/a><\/li>\n+<li class=\"circle\">java.lang.<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Throwable.html\" class=\"type-name-link external-link\" title=\"class or interface in java.lang\">Throwable<\/a> (implements java.io.<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/io\/Serializable.html\" title=\"class or interface in java.io\" class=\"external-link\">Serializable<\/a>)\n+<ul>\n+<li class=\"circle\">java.lang.<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Exception.html\" class=\"type-name-link external-link\" title=\"class or interface in java.lang\">Exception<\/a>\n+<ul>\n+<li class=\"circle\">java.lang.<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/RuntimeException.html\" class=\"type-name-link external-link\" title=\"class or interface in java.lang\">RuntimeException<\/a>\n+<ul>\n+<li class=\"circle\">jdk.test.lib.hotspot.ir_framework.<a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/IRViolationException.html\" class=\"type-name-link\" title=\"class in jdk.test.lib.hotspot.ir_framework\">IRViolationException<\/a><\/li>\n+<li class=\"circle\">jdk.test.lib.hotspot.ir_framework.<a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/NoTestsRunException.html\" class=\"type-name-link\" title=\"class in jdk.test.lib.hotspot.ir_framework\">NoTestsRunException<\/a><\/li>\n+<li class=\"circle\">jdk.test.lib.hotspot.ir_framework.<a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/TestFormatException.html\" class=\"type-name-link\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestFormatException<\/a><\/li>\n+<li class=\"circle\">jdk.test.lib.hotspot.ir_framework.<a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/TestFrameworkException.html\" class=\"type-name-link\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestFrameworkException<\/a><\/li>\n+<li class=\"circle\">jdk.test.lib.hotspot.ir_framework.<a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/TestRunException.html\" class=\"type-name-link\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestRunException<\/a><\/li>\n+<li class=\"circle\">jdk.test.lib.hotspot.ir_framework.<a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/TestVMException.html\" class=\"type-name-link\" title=\"class in jdk.test.lib.hotspot.ir_framework\">TestVMException<\/a><\/li>\n+<\/ul>\n+<\/li>\n+<\/ul>\n+<\/li>\n+<\/ul>\n+<\/li>\n+<\/ul>\n+<\/li>\n+<\/ul>\n+<\/section>\n+<section class=\"hierarchy\">\n+<h2 title=\"Annotation Interface Hierarchy\">Annotation Interface Hierarchy<\/h2>\n+<ul>\n+<li class=\"circle\">jdk.test.lib.hotspot.ir_framework.<a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/Arguments.html\" class=\"type-name-link\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\">Arguments<\/a> (implements java.lang.annotation.<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/annotation\/Annotation.html\" title=\"class or interface in java.lang.annotation\" class=\"external-link\">Annotation<\/a>)<\/li>\n+<li class=\"circle\">jdk.test.lib.hotspot.ir_framework.<a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/Check.html\" class=\"type-name-link\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\">Check<\/a> (implements java.lang.annotation.<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/annotation\/Annotation.html\" title=\"class or interface in java.lang.annotation\" class=\"external-link\">Annotation<\/a>)<\/li>\n+<li class=\"circle\">jdk.test.lib.hotspot.ir_framework.<a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/DontCompile.html\" class=\"type-name-link\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\">DontCompile<\/a> (implements java.lang.annotation.<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/annotation\/Annotation.html\" title=\"class or interface in java.lang.annotation\" class=\"external-link\">Annotation<\/a>)<\/li>\n+<li class=\"circle\">jdk.test.lib.hotspot.ir_framework.<a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/DontInline.html\" class=\"type-name-link\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\">DontInline<\/a> (implements java.lang.annotation.<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/annotation\/Annotation.html\" title=\"class or interface in java.lang.annotation\" class=\"external-link\">Annotation<\/a>)<\/li>\n+<li class=\"circle\">jdk.test.lib.hotspot.ir_framework.<a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/ForceCompile.html\" class=\"type-name-link\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\">ForceCompile<\/a> (implements java.lang.annotation.<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/annotation\/Annotation.html\" title=\"class or interface in java.lang.annotation\" class=\"external-link\">Annotation<\/a>)<\/li>\n+<li class=\"circle\">jdk.test.lib.hotspot.ir_framework.<a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/ForceCompileClassInitializer.html\" class=\"type-name-link\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\">ForceCompileClassInitializer<\/a> (implements java.lang.annotation.<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/annotation\/Annotation.html\" title=\"class or interface in java.lang.annotation\" class=\"external-link\">Annotation<\/a>)<\/li>\n+<li class=\"circle\">jdk.test.lib.hotspot.ir_framework.<a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/ForceInline.html\" class=\"type-name-link\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\">ForceInline<\/a> (implements java.lang.annotation.<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/annotation\/Annotation.html\" title=\"class or interface in java.lang.annotation\" class=\"external-link\">Annotation<\/a>)<\/li>\n+<li class=\"circle\">jdk.test.lib.hotspot.ir_framework.<a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/IR.html\" class=\"type-name-link\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\">IR<\/a> (implements java.lang.annotation.<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/annotation\/Annotation.html\" title=\"class or interface in java.lang.annotation\" class=\"external-link\">Annotation<\/a>)<\/li>\n+<li class=\"circle\">jdk.test.lib.hotspot.ir_framework.<a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/IRs.html\" class=\"type-name-link\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\">IRs<\/a> (implements java.lang.annotation.<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/annotation\/Annotation.html\" title=\"class or interface in java.lang.annotation\" class=\"external-link\">Annotation<\/a>)<\/li>\n+<li class=\"circle\">jdk.test.lib.hotspot.ir_framework.<a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/Run.html\" class=\"type-name-link\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\">Run<\/a> (implements java.lang.annotation.<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/annotation\/Annotation.html\" title=\"class or interface in java.lang.annotation\" class=\"external-link\">Annotation<\/a>)<\/li>\n+<li class=\"circle\">jdk.test.lib.hotspot.ir_framework.<a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/Test.html\" class=\"type-name-link\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\">Test<\/a> (implements java.lang.annotation.<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/annotation\/Annotation.html\" title=\"class or interface in java.lang.annotation\" class=\"external-link\">Annotation<\/a>)<\/li>\n+<li class=\"circle\">jdk.test.lib.hotspot.ir_framework.<a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/Warmup.html\" class=\"type-name-link\" title=\"annotation in jdk.test.lib.hotspot.ir_framework\">Warmup<\/a> (implements java.lang.annotation.<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/annotation\/Annotation.html\" title=\"class or interface in java.lang.annotation\" class=\"external-link\">Annotation<\/a>)<\/li>\n+<\/ul>\n+<\/section>\n+<section class=\"hierarchy\">\n+<h2 title=\"Enum Class Hierarchy\">Enum Class Hierarchy<\/h2>\n+<ul>\n+<li class=\"circle\">java.lang.<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Object.html\" class=\"type-name-link external-link\" title=\"class or interface in java.lang\">Object<\/a>\n+<ul>\n+<li class=\"circle\">java.lang.<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Enum.html\" class=\"type-name-link external-link\" title=\"class or interface in java.lang\">Enum<\/a>&lt;E&gt; (implements java.lang.<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/Comparable.html\" title=\"class or interface in java.lang\" class=\"external-link\">Comparable<\/a>&lt;T&gt;, java.lang.constant.<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/constant\/Constable.html\" title=\"class or interface in java.lang.constant\" class=\"external-link\">Constable<\/a>, java.io.<a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/io\/Serializable.html\" title=\"class or interface in java.io\" class=\"external-link\">Serializable<\/a>)\n+<ul>\n+<li class=\"circle\">jdk.test.lib.hotspot.ir_framework.<a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/Argument.html\" class=\"type-name-link\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">Argument<\/a><\/li>\n+<li class=\"circle\">jdk.test.lib.hotspot.ir_framework.<a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/CheckAt.html\" class=\"type-name-link\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">CheckAt<\/a><\/li>\n+<li class=\"circle\">jdk.test.lib.hotspot.ir_framework.<a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/CompLevel.html\" class=\"type-name-link\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">CompLevel<\/a><\/li>\n+<li class=\"circle\">jdk.test.lib.hotspot.ir_framework.<a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/RunMode.html\" class=\"type-name-link\" title=\"enum class in jdk.test.lib.hotspot.ir_framework\">RunMode<\/a><\/li>\n+<\/ul>\n+<\/li>\n+<\/ul>\n+<\/li>\n+<\/ul>\n+<\/section>\n+<\/main>\n+<\/div>\n+<\/div>\n+<\/body>\n+<\/html>\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/doc\/overview-tree.html","additions":131,"deletions":0,"binary":false,"changes":131,"status":"added"},{"patch":"@@ -0,0 +1,1 @@\n+packageSearchIndex = [{\"l\":\"All Packages\",\"u\":\"allpackages-index.html\"},{\"l\":\"jdk.test.lib.hotspot.ir_framework\"}];updateSearchResults();\n\\ No newline at end of file\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/doc\/package-search-index.js","additions":1,"deletions":0,"binary":false,"changes":1,"status":"added"},{"patch":"","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/doc\/resources\/glass.png","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/glass.png","status":"copied"},{"patch":"","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/doc\/resources\/x.png","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/x.png","status":"copied"},{"patch":"","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/doc\/script-dir\/images\/ui-bg_glass_55_fbf9ee_1x400.png","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/script-dir\/images\/ui-bg_glass_55_fbf9ee_1x400.png","status":"copied"},{"patch":"","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/doc\/script-dir\/images\/ui-bg_glass_65_dadada_1x400.png","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/script-dir\/images\/ui-bg_glass_65_dadada_1x400.png","status":"copied"},{"patch":"","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/doc\/script-dir\/images\/ui-bg_glass_75_dadada_1x400.png","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/script-dir\/images\/ui-bg_glass_75_dadada_1x400.png","status":"copied"},{"patch":"","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/doc\/script-dir\/images\/ui-bg_glass_75_e6e6e6_1x400.png","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/script-dir\/images\/ui-bg_glass_75_e6e6e6_1x400.png","status":"copied"},{"patch":"","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/doc\/script-dir\/images\/ui-bg_glass_95_fef1ec_1x400.png","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/script-dir\/images\/ui-bg_glass_95_fef1ec_1x400.png","status":"copied"},{"patch":"","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/doc\/script-dir\/images\/ui-bg_highlight-soft_75_cccccc_1x100.png","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/script-dir\/images\/ui-bg_highlight-soft_75_cccccc_1x100.png","status":"copied"},{"patch":"","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/doc\/script-dir\/images\/ui-icons_222222_256x240.png","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/script-dir\/images\/ui-icons_222222_256x240.png","status":"copied"},{"patch":"","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/doc\/script-dir\/images\/ui-icons_2e83ff_256x240.png","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/script-dir\/images\/ui-icons_2e83ff_256x240.png","status":"copied"},{"patch":"","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/doc\/script-dir\/images\/ui-icons_454545_256x240.png","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/script-dir\/images\/ui-icons_454545_256x240.png","status":"copied"},{"patch":"","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/doc\/script-dir\/images\/ui-icons_888888_256x240.png","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/script-dir\/images\/ui-icons_888888_256x240.png","status":"copied"},{"patch":"","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/doc\/script-dir\/images\/ui-icons_cd0a0a_256x240.png","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/script-dir\/images\/ui-icons_cd0a0a_256x240.png","status":"copied"},{"patch":"","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/doc\/script-dir\/jquery-3.5.1.min.js","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/script-dir\/jquery-3.5.1.min.js","status":"copied"},{"patch":"","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/doc\/script-dir\/jquery-ui.min.css","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/script-dir\/jquery-ui.min.css","status":"copied"},{"patch":"","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/doc\/script-dir\/jquery-ui.min.js","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/script-dir\/jquery-ui.min.js","status":"copied"},{"patch":"","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/doc\/script-dir\/jquery-ui.structure.min.css","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/script-dir\/jquery-ui.structure.min.css","status":"copied"},{"patch":"","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/doc\/script.js","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/resources\/script.js","status":"copied"},{"patch":"@@ -0,0 +1,354 @@\n+\/*\n+ * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+var noResult = {l: \"No results found\"};\n+var loading = {l: \"Loading search index...\"};\n+var catModules = \"Modules\";\n+var catPackages = \"Packages\";\n+var catTypes = \"Classes and Interfaces\";\n+var catMembers = \"Members\";\n+var catSearchTags = \"Search Tags\";\n+var highlight = \"<span class=\\\"result-highlight\\\">$&<\/span>\";\n+var searchPattern = \"\";\n+var fallbackPattern = \"\";\n+var RANKING_THRESHOLD = 2;\n+var NO_MATCH = 0xffff;\n+var MIN_RESULTS = 3;\n+var MAX_RESULTS = 500;\n+var UNNAMED = \"<Unnamed>\";\n+function escapeHtml(str) {\n+    return str.replace(\/<\/g, \"&lt;\").replace(\/>\/g, \"&gt;\");\n+}\n+function getHighlightedText(item, matcher, fallbackMatcher) {\n+    var escapedItem = escapeHtml(item);\n+    var highlighted = escapedItem.replace(matcher, highlight);\n+    if (highlighted === escapedItem) {\n+        highlighted = escapedItem.replace(fallbackMatcher, highlight)\n+    }\n+    return highlighted;\n+}\n+function getURLPrefix(ui) {\n+    var urlPrefix=\"\";\n+    var slash = \"\/\";\n+    if (ui.item.category === catModules) {\n+        return ui.item.l + slash;\n+    } else if (ui.item.category === catPackages && ui.item.m) {\n+        return ui.item.m + slash;\n+    } else if (ui.item.category === catTypes || ui.item.category === catMembers) {\n+        if (ui.item.m) {\n+            urlPrefix = ui.item.m + slash;\n+        } else {\n+            $.each(packageSearchIndex, function(index, item) {\n+                if (item.m && ui.item.p === item.l) {\n+                    urlPrefix = item.m + slash;\n+                }\n+            });\n+        }\n+    }\n+    return urlPrefix;\n+}\n+function createSearchPattern(term) {\n+    var pattern = \"\";\n+    var isWordToken = false;\n+    term.replace(\/,\\s*\/g, \", \").trim().split(\/\\s+\/).forEach(function(w, index) {\n+        if (index > 0) {\n+            \/\/ whitespace between identifiers is significant\n+            pattern += (isWordToken && \/^\\w\/.test(w)) ? \"\\\\s+\" : \"\\\\s*\";\n+        }\n+        var tokens = w.split(\/(?=[A-Z,.()<>[\\\/])\/);\n+        for (var i = 0; i < tokens.length; i++) {\n+            var s = tokens[i];\n+            if (s === \"\") {\n+                continue;\n+            }\n+            pattern += $.ui.autocomplete.escapeRegex(s);\n+            isWordToken =  \/\\w$\/.test(s);\n+            if (isWordToken) {\n+                pattern += \"([a-z0-9_$<>\\\\[\\\\]]*?)\";\n+            }\n+        }\n+    });\n+    return pattern;\n+}\n+function createMatcher(pattern, flags) {\n+    var isCamelCase = \/[A-Z]\/.test(pattern);\n+    return new RegExp(pattern, flags + (isCamelCase ? \"\" : \"i\"));\n+}\n+var watermark = 'Search';\n+$(function() {\n+    var search = $(\"#search\");\n+    var reset = $(\"#reset\");\n+    search.val('');\n+    search.prop(\"disabled\", false);\n+    reset.prop(\"disabled\", false);\n+    search.val(watermark).addClass('watermark');\n+    search.blur(function() {\n+        if ($(this).val().length === 0) {\n+            $(this).val(watermark).addClass('watermark');\n+        }\n+    });\n+    search.on('click keydown paste', function() {\n+        if ($(this).val() === watermark) {\n+            $(this).val('').removeClass('watermark');\n+        }\n+    });\n+    reset.click(function() {\n+        search.val('').focus();\n+    });\n+    search.focus()[0].setSelectionRange(0, 0);\n+});\n+$.widget(\"custom.catcomplete\", $.ui.autocomplete, {\n+    _create: function() {\n+        this._super();\n+        this.widget().menu(\"option\", \"items\", \"> :not(.ui-autocomplete-category)\");\n+    },\n+    _renderMenu: function(ul, items) {\n+        var rMenu = this;\n+        var currentCategory = \"\";\n+        rMenu.menu.bindings = $();\n+        $.each(items, function(index, item) {\n+            var li;\n+            if (item.category && item.category !== currentCategory) {\n+                ul.append(\"<li class=\\\"ui-autocomplete-category\\\">\" + item.category + \"<\/li>\");\n+                currentCategory = item.category;\n+            }\n+            li = rMenu._renderItemData(ul, item);\n+            if (item.category) {\n+                li.attr(\"aria-label\", item.category + \" : \" + item.l);\n+                li.attr(\"class\", \"result-item\");\n+            } else {\n+                li.attr(\"aria-label\", item.l);\n+                li.attr(\"class\", \"result-item\");\n+            }\n+        });\n+    },\n+    _renderItem: function(ul, item) {\n+        var label = \"\";\n+        var matcher = createMatcher(escapeHtml(searchPattern), \"g\");\n+        var fallbackMatcher = new RegExp(fallbackPattern, \"gi\")\n+        if (item.category === catModules) {\n+            label = getHighlightedText(item.l, matcher, fallbackMatcher);\n+        } else if (item.category === catPackages) {\n+            label = getHighlightedText(item.l, matcher, fallbackMatcher);\n+        } else if (item.category === catTypes) {\n+            label = (item.p && item.p !== UNNAMED)\n+                    ? getHighlightedText(item.p + \".\" + item.l, matcher, fallbackMatcher)\n+                    : getHighlightedText(item.l, matcher, fallbackMatcher);\n+        } else if (item.category === catMembers) {\n+            label = (item.p && item.p !== UNNAMED)\n+                    ? getHighlightedText(item.p + \".\" + item.c + \".\" + item.l, matcher, fallbackMatcher)\n+                    : getHighlightedText(item.c + \".\" + item.l, matcher, fallbackMatcher);\n+        } else if (item.category === catSearchTags) {\n+            label = getHighlightedText(item.l, matcher, fallbackMatcher);\n+        } else {\n+            label = item.l;\n+        }\n+        var li = $(\"<li\/>\").appendTo(ul);\n+        var div = $(\"<div\/>\").appendTo(li);\n+        if (item.category === catSearchTags && item.h) {\n+            if (item.d) {\n+                div.html(label + \"<span class=\\\"search-tag-holder-result\\\"> (\" + item.h + \")<\/span><br><span class=\\\"search-tag-desc-result\\\">\"\n+                                + item.d + \"<\/span><br>\");\n+            } else {\n+                div.html(label + \"<span class=\\\"search-tag-holder-result\\\"> (\" + item.h + \")<\/span>\");\n+            }\n+        } else {\n+            if (item.m) {\n+                div.html(item.m + \"\/\" + label);\n+            } else {\n+                div.html(label);\n+            }\n+        }\n+        return li;\n+    }\n+});\n+function rankMatch(match, category) {\n+    if (!match) {\n+        return NO_MATCH;\n+    }\n+    var index = match.index;\n+    var input = match.input;\n+    var leftBoundaryMatch = 2;\n+    var periferalMatch = 0;\n+    \/\/ make sure match is anchored on a left word boundary\n+    if (index === 0 || \/\\W\/.test(input[index - 1]) || \"_\" === input[index]) {\n+        leftBoundaryMatch = 0;\n+    } else if (\"_\" === input[index - 1] || (input[index] === input[index].toUpperCase() && !\/^[A-Z0-9_$]+$\/.test(input))) {\n+        leftBoundaryMatch = 1;\n+    }\n+    var matchEnd = index + match[0].length;\n+    var leftParen = input.indexOf(\"(\");\n+    var endOfName = leftParen > -1 ? leftParen : input.length;\n+    \/\/ exclude peripheral matches\n+    if (category !== catModules && category !== catSearchTags) {\n+        var delim = category === catPackages ? \"\/\" : \".\";\n+        if (leftParen > -1 && leftParen < index) {\n+            periferalMatch += 2;\n+        } else if (input.lastIndexOf(delim, endOfName) >= matchEnd) {\n+            periferalMatch += 2;\n+        }\n+    }\n+    var delta = match[0].length === endOfName ? 0 : 1; \/\/ rank full match higher than partial match\n+    for (var i = 1; i < match.length; i++) {\n+        \/\/ lower ranking if parts of the name are missing\n+        if (match[i])\n+            delta += match[i].length;\n+    }\n+    if (category === catTypes) {\n+        \/\/ lower ranking if a type name contains unmatched camel-case parts\n+        if (\/[A-Z]\/.test(input.substring(matchEnd)))\n+            delta += 5;\n+        if (\/[A-Z]\/.test(input.substring(0, index)))\n+            delta += 5;\n+    }\n+    return leftBoundaryMatch + periferalMatch + (delta \/ 200);\n+\n+}\n+function doSearch(request, response) {\n+    var result = [];\n+    searchPattern = createSearchPattern(request.term);\n+    fallbackPattern = createSearchPattern(request.term.toLowerCase());\n+    if (searchPattern === \"\") {\n+        return this.close();\n+    }\n+    var camelCaseMatcher = createMatcher(searchPattern, \"\");\n+    var fallbackMatcher = new RegExp(fallbackPattern, \"i\");\n+\n+    function searchIndexWithMatcher(indexArray, matcher, category, nameFunc) {\n+        if (indexArray) {\n+            var newResults = [];\n+            $.each(indexArray, function (i, item) {\n+                item.category = category;\n+                var ranking = rankMatch(matcher.exec(nameFunc(item)), category);\n+                if (ranking < RANKING_THRESHOLD) {\n+                    newResults.push({ranking: ranking, item: item});\n+                }\n+                return newResults.length <= MAX_RESULTS;\n+            });\n+            return newResults.sort(function(e1, e2) {\n+                return e1.ranking - e2.ranking;\n+            }).map(function(e) {\n+                return e.item;\n+            });\n+        }\n+        return [];\n+    }\n+    function searchIndex(indexArray, category, nameFunc) {\n+        var primaryResults = searchIndexWithMatcher(indexArray, camelCaseMatcher, category, nameFunc);\n+        result = result.concat(primaryResults);\n+        if (primaryResults.length <= MIN_RESULTS && camelCaseMatcher.flags.indexOf(\"i\") === -1) {\n+            var secondaryResults = searchIndexWithMatcher(indexArray, fallbackMatcher, category, nameFunc);\n+            result = result.concat(secondaryResults.filter(function (item) {\n+                return primaryResults.indexOf(item) === -1;\n+            }));\n+        }\n+    }\n+\n+    searchIndex(moduleSearchIndex, catModules, function(item) { return item.l; });\n+    searchIndex(packageSearchIndex, catPackages, function(item) {\n+        return (item.m && request.term.indexOf(\"\/\") > -1)\n+            ? (item.m + \"\/\" + item.l) : item.l;\n+    });\n+    searchIndex(typeSearchIndex, catTypes, function(item) {\n+        return request.term.indexOf(\".\") > -1 ? item.p + \".\" + item.l : item.l;\n+    });\n+    searchIndex(memberSearchIndex, catMembers, function(item) {\n+        return request.term.indexOf(\".\") > -1\n+            ? item.p + \".\" + item.c + \".\" + item.l : item.l;\n+    });\n+    searchIndex(tagSearchIndex, catSearchTags, function(item) { return item.l; });\n+\n+    if (!indexFilesLoaded()) {\n+        updateSearchResults = function() {\n+            doSearch(request, response);\n+        }\n+        result.unshift(loading);\n+    } else {\n+        updateSearchResults = function() {};\n+    }\n+    response(result);\n+}\n+$(function() {\n+    $(\"#search\").catcomplete({\n+        minLength: 1,\n+        delay: 300,\n+        source: doSearch,\n+        response: function(event, ui) {\n+            if (!ui.content.length) {\n+                ui.content.push(noResult);\n+            } else {\n+                $(\"#search\").empty();\n+            }\n+        },\n+        autoFocus: true,\n+        focus: function(event, ui) {\n+            return false;\n+        },\n+        position: {\n+            collision: \"flip\"\n+        },\n+        select: function(event, ui) {\n+            if (ui.item.category) {\n+                var url = getURLPrefix(ui);\n+                if (ui.item.category === catModules) {\n+                    url += \"module-summary.html\";\n+                } else if (ui.item.category === catPackages) {\n+                    if (ui.item.u) {\n+                        url = ui.item.u;\n+                    } else {\n+                        url += ui.item.l.replace(\/\\.\/g, '\/') + \"\/package-summary.html\";\n+                    }\n+                } else if (ui.item.category === catTypes) {\n+                    if (ui.item.u) {\n+                        url = ui.item.u;\n+                    } else if (ui.item.p === UNNAMED) {\n+                        url += ui.item.l + \".html\";\n+                    } else {\n+                        url += ui.item.p.replace(\/\\.\/g, '\/') + \"\/\" + ui.item.l + \".html\";\n+                    }\n+                } else if (ui.item.category === catMembers) {\n+                    if (ui.item.p === UNNAMED) {\n+                        url += ui.item.c + \".html\" + \"#\";\n+                    } else {\n+                        url += ui.item.p.replace(\/\\.\/g, '\/') + \"\/\" + ui.item.c + \".html\" + \"#\";\n+                    }\n+                    if (ui.item.u) {\n+                        url += ui.item.u;\n+                    } else {\n+                        url += ui.item.l;\n+                    }\n+                } else if (ui.item.category === catSearchTags) {\n+                    url += ui.item.u;\n+                }\n+                if (top !== window) {\n+                    parent.classFrame.location = pathtoroot + url;\n+                } else {\n+                    window.location.href = pathtoroot + url;\n+                }\n+                $(\"#search\").focus();\n+            }\n+        }\n+    });\n+});\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/doc\/search.js","additions":354,"deletions":0,"binary":false,"changes":354,"status":"added"},{"patch":"@@ -0,0 +1,125 @@\n+<!DOCTYPE HTML>\n+<html lang=\"en\">\n+<head>\n+<!-- Generated by javadoc (17) on Wed Apr 14 13:12:12 CEST 2021 -->\n+<title>Serialized Form<\/title>\n+<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n+<meta http-equiv=\"Content-Type\" content=\"text\/html; charset=utf-8\">\n+<meta name=\"dc.created\" content=\"2021-04-14\">\n+<meta name=\"description\" content=\"serialized forms\">\n+<meta name=\"generator\" content=\"javadoc\/SerializedFormWriterImpl\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"stylesheet.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"script-dir\/jquery-ui.min.css\" title=\"Style\">\n+<link rel=\"stylesheet\" type=\"text\/css\" href=\"jquery-ui.overrides.css\" title=\"Style\">\n+<script type=\"text\/javascript\" src=\"script.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"script-dir\/jquery-3.5.1.min.js\"><\/script>\n+<script type=\"text\/javascript\" src=\"script-dir\/jquery-ui.min.js\"><\/script>\n+<\/head>\n+<body class=\"serialized-form-page\">\n+<script type=\"text\/javascript\">var pathtoroot = \".\/\";\n+loadScripts(document, 'script');<\/script>\n+<noscript>\n+<div>JavaScript is disabled on your browser.<\/div>\n+<\/noscript>\n+<div class=\"flex-box\">\n+<header role=\"banner\" class=\"flex-header\">\n+<nav role=\"navigation\">\n+<!-- ========= START OF TOP NAVBAR ======= -->\n+<div class=\"top-nav\" id=\"navbar-top\">\n+<div class=\"skip-nav\"><a href=\"#skip-navbar-top\" title=\"Skip navigation links\">Skip navigation links<\/a><\/div>\n+<ul id=\"navbar-top-firstrow\" class=\"nav-list\" title=\"Navigation\">\n+<li><a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/package-summary.html\">Package<\/a><\/li>\n+<li>Class<\/li>\n+<li><a href=\"overview-tree.html\">Tree<\/a><\/li>\n+<li><a href=\"index-files\/index-1.html\">Index<\/a><\/li>\n+<li><a href=\"help-doc.html\">Help<\/a><\/li>\n+<\/ul>\n+<\/div>\n+<div class=\"sub-nav\">\n+<div class=\"nav-list-search\"><label for=\"search\">SEARCH:<\/label>\n+<input type=\"text\" id=\"search\" value=\"search\" disabled=\"disabled\">\n+<input type=\"reset\" id=\"reset\" value=\"reset\" disabled=\"disabled\">\n+<\/div>\n+<\/div>\n+<!-- ========= END OF TOP NAVBAR ========= -->\n+<span class=\"skip-nav\" id=\"skip-navbar-top\"><\/span><\/nav>\n+<\/header>\n+<div class=\"flex-content\">\n+<main role=\"main\">\n+<div class=\"header\">\n+<h1 title=\"Serialized Form\" class=\"title\">Serialized Form<\/h1>\n+<\/div>\n+<ul class=\"block-list\">\n+<li>\n+<section class=\"serialized-package-container\">\n+<h2 title=\"Package\">Package&nbsp;jdk.test.lib.hotspot.ir_framework<\/h2>\n+<ul class=\"block-list\">\n+<li>\n+<section class=\"serialized-class-details\" id=\"jdk.test.lib.hotspot.ir_framework.IRViolationException\">\n+<h3>Class <a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/IRViolationException.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">jdk.test.lib.hotspot.ir_framework.IRViolationException<\/a> extends <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/RuntimeException.html\" title=\"class or interface in java.lang\" class=\"external-link\">RuntimeException<\/a> implements Serializable<\/h3>\n+<ul class=\"block-list\">\n+<li>\n+<section class=\"detail\">\n+<h4>Serialized Fields<\/h4>\n+<ul class=\"block-list\">\n+<li class=\"block-list\">\n+<h5>compilations<\/h5>\n+<pre><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a> compilations<\/pre>\n+<\/li>\n+<li class=\"block-list\">\n+<h5>exceptionInfo<\/h5>\n+<pre><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a> exceptionInfo<\/pre>\n+<\/li>\n+<\/ul>\n+<\/section>\n+<\/li>\n+<\/ul>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"serialized-class-details\" id=\"jdk.test.lib.hotspot.ir_framework.NoTestsRunException\">\n+<h3>Class <a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/NoTestsRunException.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">jdk.test.lib.hotspot.ir_framework.NoTestsRunException<\/a> extends <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/RuntimeException.html\" title=\"class or interface in java.lang\" class=\"external-link\">RuntimeException<\/a> implements Serializable<\/h3>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"serialized-class-details\" id=\"jdk.test.lib.hotspot.ir_framework.TestFormatException\">\n+<h3>Class <a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/TestFormatException.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">jdk.test.lib.hotspot.ir_framework.TestFormatException<\/a> extends <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/RuntimeException.html\" title=\"class or interface in java.lang\" class=\"external-link\">RuntimeException<\/a> implements Serializable<\/h3>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"serialized-class-details\" id=\"jdk.test.lib.hotspot.ir_framework.TestFrameworkException\">\n+<h3>Class <a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/TestFrameworkException.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">jdk.test.lib.hotspot.ir_framework.TestFrameworkException<\/a> extends <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/RuntimeException.html\" title=\"class or interface in java.lang\" class=\"external-link\">RuntimeException<\/a> implements Serializable<\/h3>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"serialized-class-details\" id=\"jdk.test.lib.hotspot.ir_framework.TestRunException\">\n+<h3>Class <a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/TestRunException.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">jdk.test.lib.hotspot.ir_framework.TestRunException<\/a> extends <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/RuntimeException.html\" title=\"class or interface in java.lang\" class=\"external-link\">RuntimeException<\/a> implements Serializable<\/h3>\n+<\/section>\n+<\/li>\n+<li>\n+<section class=\"serialized-class-details\" id=\"jdk.test.lib.hotspot.ir_framework.TestVMException\">\n+<h3>Class <a href=\"jdk\/test\/lib\/hotspot\/ir_framework\/TestVMException.html\" title=\"class in jdk.test.lib.hotspot.ir_framework\">jdk.test.lib.hotspot.ir_framework.TestVMException<\/a> extends <a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/RuntimeException.html\" title=\"class or interface in java.lang\" class=\"external-link\">RuntimeException<\/a> implements Serializable<\/h3>\n+<ul class=\"block-list\">\n+<li>\n+<section class=\"detail\">\n+<h4>Serialized Fields<\/h4>\n+<ul class=\"block-list\">\n+<li class=\"block-list\">\n+<h5>exceptionInfo<\/h5>\n+<pre><a href=\"https:\/\/download.java.net\/java\/early_access\/jdk17\/docs\/api\/java.base\/java\/lang\/String.html\" title=\"class or interface in java.lang\" class=\"external-link\">String<\/a> exceptionInfo<\/pre>\n+<\/li>\n+<\/ul>\n+<\/section>\n+<\/li>\n+<\/ul>\n+<\/section>\n+<\/li>\n+<\/ul>\n+<\/section>\n+<\/li>\n+<\/ul>\n+<\/main>\n+<\/div>\n+<\/div>\n+<\/body>\n+<\/html>\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/doc\/serialized-form.html","additions":125,"deletions":0,"binary":false,"changes":125,"status":"added"},{"patch":"@@ -0,0 +1,838 @@\n+\/*\n+ * Javadoc style sheet\n+ *\/\n+\n+@import url('resources\/fonts\/dejavu.css');\n+\n+\/*\n+ * Styles for individual HTML elements.\n+ *\n+ * These are styles that are specific to individual HTML elements. Changing them affects the style of a particular\n+ * HTML element throughout the page.\n+ *\/\n+\n+body {\n+    background-color:#ffffff;\n+    color:#353833;\n+    font-family:'DejaVu Sans', Arial, Helvetica, sans-serif;\n+    font-size:14px;\n+    margin:0;\n+    padding:0;\n+    height:100%;\n+    width:100%;\n+}\n+iframe {\n+    margin:0;\n+    padding:0;\n+    height:100%;\n+    width:100%;\n+    overflow-y:scroll;\n+    border:none;\n+}\n+a:link, a:visited {\n+    text-decoration:none;\n+    color:#4A6782;\n+}\n+a[href]:hover, a[href]:focus {\n+    text-decoration:none;\n+    color:#bb7a2a;\n+}\n+a[name] {\n+    color:#353833;\n+}\n+pre {\n+    font-family:'DejaVu Sans Mono', monospace;\n+    font-size:14px;\n+}\n+h1 {\n+    font-size:20px;\n+}\n+h2 {\n+    font-size:18px;\n+}\n+h3 {\n+    font-size:16px;\n+}\n+h4 {\n+    font-size:13px;\n+}\n+h5 {\n+    font-size:12px;\n+}\n+h6 {\n+    font-size:11px;\n+}\n+ul {\n+    list-style-type:disc;\n+}\n+code, tt {\n+    font-family:'DejaVu Sans Mono', monospace;\n+    font-size:14px;\n+    padding-top:4px;\n+    margin-top:8px;\n+    line-height:1.4em;\n+}\n+dt code {\n+    font-family:'DejaVu Sans Mono', monospace;\n+    font-size:14px;\n+    padding-top:4px;\n+}\n+.summary-table dt code {\n+    font-family:'DejaVu Sans Mono', monospace;\n+    font-size:14px;\n+    vertical-align:top;\n+    padding-top:4px;\n+}\n+sup {\n+    font-size:8px;\n+}\n+button {\n+    font-family: 'DejaVu Sans', Arial, Helvetica, sans-serif;\n+    font-size: 14px;\n+}\n+\/*\n+ * Styles for HTML generated by javadoc.\n+ *\n+ * These are style classes that are used by the standard doclet to generate HTML documentation.\n+ *\/\n+\n+\/*\n+ * Styles for document title and copyright.\n+ *\/\n+.clear {\n+    clear:both;\n+    height:0;\n+    overflow:hidden;\n+}\n+.about-language {\n+    float:right;\n+    padding:0 21px 8px 8px;\n+    font-size:11px;\n+    margin-top:-9px;\n+    height:2.9em;\n+}\n+.legal-copy {\n+    margin-left:.5em;\n+}\n+.tab {\n+    background-color:#0066FF;\n+    color:#ffffff;\n+    padding:8px;\n+    width:5em;\n+    font-weight:bold;\n+}\n+\/*\n+ * Styles for navigation bar.\n+ *\/\n+@media screen {\n+    .flex-box {\n+        position:fixed;\n+        display:flex;\n+        flex-direction:column;\n+        height: 100%;\n+        width: 100%;\n+    }\n+    .flex-header {\n+        flex: 0 0 auto;\n+    }\n+    .flex-content {\n+        flex: 1 1 auto;\n+        overflow-y: auto;\n+    }\n+}\n+.top-nav {\n+    background-color:#4D7A97;\n+    color:#FFFFFF;\n+    float:left;\n+    padding:0;\n+    width:100%;\n+    clear:right;\n+    min-height:2.8em;\n+    padding-top:10px;\n+    overflow:hidden;\n+    font-size:12px;\n+}\n+.sub-nav {\n+    background-color:#dee3e9;\n+    float:left;\n+    width:100%;\n+    overflow:hidden;\n+    font-size:12px;\n+}\n+.sub-nav div {\n+    clear:left;\n+    float:left;\n+    padding:0 0 5px 6px;\n+    text-transform:uppercase;\n+}\n+.sub-nav .nav-list {\n+    padding-top:5px;\n+}\n+ul.nav-list {\n+    display:block;\n+    margin:0 25px 0 0;\n+    padding:0;\n+}\n+ul.sub-nav-list {\n+    float:left;\n+    margin:0 25px 0 0;\n+    padding:0;\n+}\n+ul.nav-list li {\n+    list-style:none;\n+    float:left;\n+    padding: 5px 6px;\n+    text-transform:uppercase;\n+}\n+.sub-nav .nav-list-search {\n+    float:right;\n+    margin:0 0 0 0;\n+    padding:5px 6px;\n+    clear:none;\n+}\n+.nav-list-search label {\n+    position:relative;\n+    right:-16px;\n+}\n+ul.sub-nav-list li {\n+    list-style:none;\n+    float:left;\n+    padding-top:10px;\n+}\n+.top-nav a:link, .top-nav a:active, .top-nav a:visited {\n+    color:#FFFFFF;\n+    text-decoration:none;\n+    text-transform:uppercase;\n+}\n+.top-nav a:hover {\n+    text-decoration:none;\n+    color:#bb7a2a;\n+    text-transform:uppercase;\n+}\n+.nav-bar-cell1-rev {\n+    background-color:#F8981D;\n+    color:#253441;\n+    margin: auto 5px;\n+}\n+.skip-nav {\n+    position:absolute;\n+    top:auto;\n+    left:-9999px;\n+    overflow:hidden;\n+}\n+\/*\n+ * Hide navigation links and search box in print layout\n+ *\/\n+@media print {\n+    ul.nav-list, div.sub-nav  {\n+        display:none;\n+    }\n+}\n+\/*\n+ * Styles for page header and footer.\n+ *\/\n+.title {\n+    color:#2c4557;\n+    margin:10px 0;\n+}\n+.sub-title {\n+    margin:5px 0 0 0;\n+}\n+.header ul {\n+    margin:0 0 15px 0;\n+    padding:0;\n+}\n+.header ul li, .footer ul li {\n+    list-style:none;\n+    font-size:13px;\n+}\n+\/*\n+ * Styles for headings.\n+ *\/\n+body.class-declaration-page .summary h2,\n+body.class-declaration-page .details h2,\n+body.class-use-page  h2,\n+body.module-declaration-page  .block-list h2 {\n+    font-style: italic;\n+    padding:0;\n+    margin:15px 0;\n+}\n+body.class-declaration-page .summary h3,\n+body.class-declaration-page .details h3,\n+body.class-declaration-page .summary .inherited-list h2 {\n+    background-color:#dee3e9;\n+    border:1px solid #d0d9e0;\n+    margin:0 0 6px -8px;\n+    padding:7px 5px;\n+}\n+\/*\n+ * Styles for page layout containers.\n+ *\/\n+main {\n+    clear:both;\n+    padding:10px 20px;\n+    position:relative;\n+}\n+dl.notes > dt {\n+    font-family: 'DejaVu Sans', Arial, Helvetica, sans-serif;\n+    font-size:12px;\n+    font-weight:bold;\n+    margin:10px 0 0 0;\n+    color:#4E4E4E;\n+}\n+dl.notes > dd {\n+    margin:5px 0 10px 0;\n+    font-size:14px;\n+    font-family:'DejaVu Serif', Georgia, \"Times New Roman\", Times, serif;\n+}\n+dl.name-value > dt {\n+    margin-left:1px;\n+    font-size:1.1em;\n+    display:inline;\n+    font-weight:bold;\n+}\n+dl.name-value > dd {\n+    margin:0 0 0 1px;\n+    font-size:1.1em;\n+    display:inline;\n+}\n+\/*\n+ * Styles for lists.\n+ *\/\n+li.circle {\n+    list-style:circle;\n+}\n+ul.horizontal li {\n+    display:inline;\n+    font-size:0.9em;\n+}\n+div.inheritance {\n+    margin:0;\n+    padding:0;\n+}\n+div.inheritance div.inheritance {\n+    margin-left:2em;\n+}\n+ul.block-list,\n+ul.details-list,\n+ul.member-list,\n+ul.summary-list {\n+    margin:10px 0 10px 0;\n+    padding:0;\n+}\n+ul.block-list > li,\n+ul.details-list > li,\n+ul.member-list > li,\n+ul.summary-list > li {\n+    list-style:none;\n+    margin-bottom:15px;\n+    line-height:1.4;\n+}\n+.summary-table dl, .summary-table dl dt, .summary-table dl dd {\n+    margin-top:0;\n+    margin-bottom:1px;\n+}\n+\/*\n+ * Styles for tables.\n+ *\/\n+.summary-table {\n+    width:100%;\n+    border-spacing:0;\n+    border-left:1px solid #EEE;\n+    border-right:1px solid #EEE;\n+    border-bottom:1px solid #EEE;\n+}\n+.summary-table {\n+    padding:0;\n+}\n+.caption {\n+    position:relative;\n+    text-align:left;\n+    background-repeat:no-repeat;\n+    color:#253441;\n+    font-weight:bold;\n+    clear:none;\n+    overflow:hidden;\n+    padding:0px;\n+    padding-top:10px;\n+    padding-left:1px;\n+    margin:0px;\n+    white-space:pre;\n+}\n+.caption a:link, .caption a:visited {\n+    color:#1f389c;\n+}\n+.caption a:hover,\n+.caption a:active {\n+    color:#FFFFFF;\n+}\n+.caption span {\n+    white-space:nowrap;\n+    padding-top:5px;\n+    padding-left:12px;\n+    padding-right:12px;\n+    padding-bottom:7px;\n+    display:inline-block;\n+    float:left;\n+    background-color:#F8981D;\n+    border: none;\n+    height:16px;\n+}\n+\n+div.table-tabs > button {\n+   border: none;\n+   cursor: pointer;\n+   padding: 5px 12px 7px 12px;\n+   font-weight: bold;\n+   margin-right: 3px;\n+}\n+div.table-tabs > button.active-table-tab {\n+   background: #F8981D;\n+   color: #253441;\n+}\n+div.table-tabs > button.table-tab {\n+   background: #4D7A97;\n+   color: #FFFFFF;\n+}\n+.two-column-summary {\n+    display: grid;\n+    grid-template-columns: minmax(15%, max-content) minmax(15%, auto);\n+}\n+.three-column-summary {\n+    display: grid;\n+    grid-template-columns: minmax(10%, max-content) minmax(15%, max-content) minmax(15%, auto);\n+}\n+.four-column-summary {\n+    display: grid;\n+    grid-template-columns: minmax(10%, max-content) minmax(10%, max-content) minmax(10%, max-content) minmax(10%, auto);\n+}\n+@media screen and (max-width: 600px) {\n+    .two-column-summary {\n+        display: grid;\n+        grid-template-columns: 1fr;\n+    }\n+}\n+@media screen and (max-width: 800px) {\n+    .three-column-summary {\n+        display: grid;\n+        grid-template-columns: minmax(10%, max-content) minmax(25%, auto);\n+    }\n+    .three-column-summary .col-last {\n+        grid-column-end: span 2;\n+    }\n+}\n+@media screen and (max-width: 1000px) {\n+    .four-column-summary {\n+        display: grid;\n+        grid-template-columns: minmax(15%, max-content) minmax(15%, auto);\n+    }\n+}\n+.summary-table > div {\n+    text-align:left;\n+    padding: 8px 3px 3px 7px;\n+}\n+.col-first, .col-second, .col-last, .col-constructor-name, .col-summary-item-name {\n+    vertical-align:top;\n+    padding-right:0;\n+    padding-top:8px;\n+    padding-bottom:3px;\n+}\n+.table-header {\n+    background:#dee3e9;\n+    font-weight: bold;\n+}\n+.col-first, .col-first {\n+    font-size:13px;\n+}\n+.col-second, .col-second, .col-last, .col-constructor-name, .col-summary-item-name, .col-last {\n+    font-size:13px;\n+}\n+.col-first, .col-second, .col-constructor-name {\n+    vertical-align:top;\n+    overflow: auto;\n+}\n+.col-last {\n+    white-space:normal;\n+}\n+.col-first a:link, .col-first a:visited,\n+.col-second a:link, .col-second a:visited,\n+.col-first a:link, .col-first a:visited,\n+.col-second a:link, .col-second a:visited,\n+.col-constructor-name a:link, .col-constructor-name a:visited,\n+.col-summary-item-name a:link, .col-summary-item-name a:visited,\n+.constant-values-container a:link, .constant-values-container a:visited,\n+.all-classes-container a:link, .all-classes-container a:visited,\n+.all-packages-container a:link, .all-packages-container a:visited {\n+    font-weight:bold;\n+}\n+.table-sub-heading-color {\n+    background-color:#EEEEFF;\n+}\n+.even-row-color, .even-row-color .table-header {\n+    background-color:#FFFFFF;\n+}\n+.odd-row-color, .odd-row-color .table-header {\n+    background-color:#EEEEEF;\n+}\n+\/*\n+ * Styles for contents.\n+ *\/\n+.deprecated-content {\n+    margin:0;\n+    padding:10px 0;\n+}\n+div.block {\n+    font-size:14px;\n+    font-family:'DejaVu Serif', Georgia, \"Times New Roman\", Times, serif;\n+}\n+.col-last div {\n+    padding-top:0;\n+}\n+.col-last a {\n+    padding-bottom:3px;\n+}\n+.module-signature,\n+.package-signature,\n+.type-signature,\n+.member-signature {\n+    font-family:'DejaVu Sans Mono', monospace;\n+    font-size:14px;\n+    margin:14px 0;\n+    white-space: pre-wrap;\n+}\n+.module-signature,\n+.package-signature,\n+.type-signature {\n+    margin-top: 0;\n+}\n+.member-signature .type-parameters-long,\n+.member-signature .parameters,\n+.member-signature .exceptions {\n+    display: inline-block;\n+    vertical-align: top;\n+    white-space: pre;\n+}\n+.member-signature .type-parameters {\n+    white-space: normal;\n+}\n+\/*\n+ * Styles for formatting effect.\n+ *\/\n+.source-line-no {\n+    color:green;\n+    padding:0 30px 0 0;\n+}\n+h1.hidden {\n+    visibility:hidden;\n+    overflow:hidden;\n+    font-size:10px;\n+}\n+.block {\n+    display:block;\n+    margin:0 10px 5px 0;\n+    color:#474747;\n+}\n+.deprecated-label, .descfrm-type-label, .implementation-label, .member-name-label, .member-name-link,\n+.module-label-in-package, .module-label-in-type, .override-specify-label, .package-label-in-type,\n+.package-hierarchy-label, .type-name-label, .type-name-link, .search-tag-link, .preview-label {\n+    font-weight:bold;\n+}\n+.deprecation-comment, .help-footnote, .interface-name, .preview-comment {\n+    font-style:italic;\n+}\n+.deprecation-block {\n+    font-size:14px;\n+    font-family:'DejaVu Serif', Georgia, \"Times New Roman\", Times, serif;\n+    border-style:solid;\n+    border-width:thin;\n+    border-radius:10px;\n+    padding:10px;\n+    margin-bottom:10px;\n+    margin-right:10px;\n+    display:inline-block;\n+}\n+.preview-block {\n+    font-size:14px;\n+    font-family:'DejaVu Serif', Georgia, \"Times New Roman\", Times, serif;\n+    border-style:solid;\n+    border-width:thin;\n+    border-radius:10px;\n+    padding:10px;\n+    margin-bottom:10px;\n+    margin-right:10px;\n+    display:inline-block;\n+}\n+div.block div.deprecation-comment, div.block div.block span.emphasized-phrase,\n+div.block div.block span.interface-name {\n+    font-style:normal;\n+}\n+\/*\n+ * Styles specific to HTML5 elements.\n+ *\/\n+main, nav, header, footer, section {\n+    display:block;\n+}\n+\/*\n+ * Styles for javadoc search.\n+ *\/\n+.ui-autocomplete-category {\n+    font-weight:bold;\n+    font-size:15px;\n+    padding:7px 0 7px 3px;\n+    background-color:#4D7A97;\n+    color:#FFFFFF;\n+}\n+.result-item {\n+    font-size:13px;\n+}\n+.ui-autocomplete {\n+    max-height:85%;\n+    max-width:65%;\n+    overflow-y:scroll;\n+    overflow-x:scroll;\n+    white-space:nowrap;\n+    box-shadow: 0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23);\n+}\n+ul.ui-autocomplete {\n+    position:fixed;\n+    z-index:999999;\n+}\n+ul.ui-autocomplete  li {\n+    float:left;\n+    clear:both;\n+    width:100%;\n+}\n+.result-highlight {\n+    font-weight:bold;\n+}\n+#search {\n+    background-image:url('resources\/glass.png');\n+    background-size:13px;\n+    background-repeat:no-repeat;\n+    background-position:2px 3px;\n+    padding-left:20px;\n+    position:relative;\n+    right:-18px;\n+    width:400px;\n+}\n+#reset {\n+    background-color: rgb(255,255,255);\n+    background-image:url('resources\/x.png');\n+    background-position:center;\n+    background-repeat:no-repeat;\n+    background-size:12px;\n+    border:0 none;\n+    width:16px;\n+    height:16px;\n+    position:relative;\n+    left:-4px;\n+    top:-4px;\n+    font-size:0px;\n+}\n+.watermark {\n+    color:#545454;\n+}\n+.search-tag-desc-result {\n+    font-style:italic;\n+    font-size:11px;\n+}\n+.search-tag-holder-result {\n+    font-style:italic;\n+    font-size:12px;\n+}\n+.search-tag-result:target {\n+    background-color:yellow;\n+}\n+.module-graph span {\n+    display:none;\n+    position:absolute;\n+}\n+.module-graph:hover span {\n+    display:block;\n+    margin: -100px 0 0 100px;\n+    z-index: 1;\n+}\n+.inherited-list {\n+    margin: 10px 0 10px 0;\n+}\n+section.description {\n+    line-height: 1.4;\n+}\n+.summary section[class$=\"-summary\"], .details section[class$=\"-details\"],\n+.class-uses .detail, .serialized-class-details {\n+    padding: 0px 20px 5px 10px;\n+    border: 1px solid #ededed;\n+    background-color: #f8f8f8;\n+}\n+.inherited-list, section[class$=\"-details\"] .detail {\n+    padding:0 0 5px 8px;\n+    background-color:#ffffff;\n+    border:none;\n+}\n+.vertical-separator {\n+    padding: 0 5px;\n+}\n+ul.help-section-list {\n+    margin: 0;\n+}\n+\/*\n+ * Indicator icon for external links.\n+ *\/\n+main a[href*=\":\/\/\"]::after {\n+    content:\"\";\n+    display:inline-block;\n+    background-image:url('data:image\/svg+xml; utf8, \\\n+      <svg xmlns=\"http:\/\/www.w3.org\/2000\/svg\" width=\"768\" height=\"768\">\\\n+        <path d=\"M584 664H104V184h216V80H0v688h688V448H584zM384 0l132 \\\n+        132-240 240 120 120 240-240 132 132V0z\" fill=\"%234a6782\"\/>\\\n+      <\/svg>');\n+    background-size:100% 100%;\n+    width:7px;\n+    height:7px;\n+    margin-left:2px;\n+    margin-bottom:4px;\n+}\n+main a[href*=\":\/\/\"]:hover::after,\n+main a[href*=\":\/\/\"]:focus::after {\n+    background-image:url('data:image\/svg+xml; utf8, \\\n+      <svg xmlns=\"http:\/\/www.w3.org\/2000\/svg\" width=\"768\" height=\"768\">\\\n+        <path d=\"M584 664H104V184h216V80H0v688h688V448H584zM384 0l132 \\\n+        132-240 240 120 120 240-240 132 132V0z\" fill=\"%23bb7a2a\"\/>\\\n+      <\/svg>');\n+}\n+\n+\/*\n+ * Styles for user-provided tables.\n+ *\n+ * borderless:\n+ *      No borders, vertical margins, styled caption.\n+ *      This style is provided for use with existing doc comments.\n+ *      In general, borderless tables should not be used for layout purposes.\n+ *\n+ * plain:\n+ *      Plain borders around table and cells, vertical margins, styled caption.\n+ *      Best for small tables or for complex tables for tables with cells that span\n+ *      rows and columns, when the \"striped\" style does not work well.\n+ *\n+ * striped:\n+ *      Borders around the table and vertical borders between cells, striped rows,\n+ *      vertical margins, styled caption.\n+ *      Best for tables that have a header row, and a body containing a series of simple rows.\n+ *\/\n+\n+table.borderless,\n+table.plain,\n+table.striped {\n+    margin-top: 10px;\n+    margin-bottom: 10px;\n+}\n+table.borderless > caption,\n+table.plain > caption,\n+table.striped > caption {\n+    font-weight: bold;\n+    font-size: smaller;\n+}\n+table.borderless th, table.borderless td,\n+table.plain th, table.plain td,\n+table.striped th, table.striped td {\n+    padding: 2px 5px;\n+}\n+table.borderless,\n+table.borderless > thead > tr > th, table.borderless > tbody > tr > th, table.borderless > tr > th,\n+table.borderless > thead > tr > td, table.borderless > tbody > tr > td, table.borderless > tr > td {\n+    border: none;\n+}\n+table.borderless > thead > tr, table.borderless > tbody > tr, table.borderless > tr {\n+    background-color: transparent;\n+}\n+table.plain {\n+    border-collapse: collapse;\n+    border: 1px solid black;\n+}\n+table.plain > thead > tr, table.plain > tbody tr, table.plain > tr {\n+    background-color: transparent;\n+}\n+table.plain > thead > tr > th, table.plain > tbody > tr > th, table.plain > tr > th,\n+table.plain > thead > tr > td, table.plain > tbody > tr > td, table.plain > tr > td {\n+    border: 1px solid black;\n+}\n+table.striped {\n+    border-collapse: collapse;\n+    border: 1px solid black;\n+}\n+table.striped > thead {\n+    background-color: #E3E3E3;\n+}\n+table.striped > thead > tr > th, table.striped > thead > tr > td {\n+    border: 1px solid black;\n+}\n+table.striped > tbody > tr:nth-child(even) {\n+    background-color: #EEE\n+}\n+table.striped > tbody > tr:nth-child(odd) {\n+    background-color: #FFF\n+}\n+table.striped > tbody > tr > th, table.striped > tbody > tr > td {\n+    border-left: 1px solid black;\n+    border-right: 1px solid black;\n+}\n+table.striped > tbody > tr > th {\n+    font-weight: normal;\n+}\n+\/**\n+ * Tweak font sizes and paddings for small screens.\n+ *\/\n+@media screen and (max-width: 1050px) {\n+    #search {\n+        width: 300px;\n+    }\n+}\n+@media screen and (max-width: 800px) {\n+    #search {\n+        width: 200px;\n+    }\n+    .top-nav,\n+    .bottom-nav {\n+        font-size: 11px;\n+        padding-top: 6px;\n+    }\n+    .sub-nav {\n+        font-size: 11px;\n+    }\n+    .about-language {\n+        padding-right: 16px;\n+    }\n+    ul.nav-list li,\n+    .sub-nav .nav-list-search {\n+        padding: 6px;\n+    }\n+    ul.sub-nav-list li {\n+        padding-top: 5px;\n+    }\n+    main {\n+        padding: 10px;\n+    }\n+    .summary section[class$=\"-summary\"], .details section[class$=\"-details\"],\n+    .class-uses .detail, .serialized-class-details {\n+        padding: 0 8px 5px 8px;\n+    }\n+    body {\n+        -webkit-text-size-adjust: none;\n+    }\n+}\n+@media screen and (max-width: 500px) {\n+    #search {\n+        width: 150px;\n+    }\n+    .top-nav,\n+    .bottom-nav {\n+        font-size: 10px;\n+    }\n+    .sub-nav {\n+        font-size: 10px;\n+    }\n+    .about-language {\n+        font-size: 10px;\n+        padding-right: 12px;\n+    }\n+}\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/doc\/stylesheet.css","additions":838,"deletions":0,"binary":false,"changes":838,"status":"added"},{"patch":"@@ -0,0 +1,1 @@\n+tagSearchIndex = [{\"l\":\"Constant Field Values\",\"h\":\"\",\"u\":\"constant-values.html\"},{\"l\":\"Serialized Form\",\"h\":\"\",\"u\":\"serialized-form.html\"}];updateSearchResults();\n\\ No newline at end of file\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/doc\/tag-search-index.js","additions":1,"deletions":0,"binary":false,"changes":1,"status":"added"},{"patch":"@@ -0,0 +1,1 @@\n+typeSearchIndex = [{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"l\":\"AbstractInfo\"},{\"l\":\"All Classes\",\"u\":\"allclasses-index.html\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"l\":\"Argument\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"l\":\"Arguments\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"l\":\"Check\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"l\":\"CheckAt\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"l\":\"CompLevel\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"l\":\"DontCompile\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"l\":\"DontInline\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"l\":\"ForceCompile\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"l\":\"ForceCompileClassInitializer\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"l\":\"ForceInline\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"l\":\"IR\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"l\":\"IRNode\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"l\":\"IRs\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"l\":\"IRViolationException\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"l\":\"NoTestsRunException\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"l\":\"Run\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"l\":\"RunInfo\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"l\":\"RunMode\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"l\":\"Scenario\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"l\":\"Test\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"l\":\"TestFormatException\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"l\":\"TestFramework\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"l\":\"TestFrameworkException\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"l\":\"TestFrameworkExecution\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"l\":\"TestInfo\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"l\":\"TestRunException\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"l\":\"TestVMException\"},{\"p\":\"jdk.test.lib.hotspot.ir_framework\",\"l\":\"Warmup\"}];updateSearchResults();\n\\ No newline at end of file\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/doc\/type-search-index.js","additions":1,"deletions":0,"binary":false,"changes":1,"status":"added"},{"patch":"@@ -0,0 +1,89 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.test.lib.hotspot.ir_framework.examples;\n+\n+import jdk.test.lib.hotspot.ir_framework.*;\n+\n+\/*\n+ * @test\n+ * @summary Example test to use the new test framework.\n+ * @library \/test\/lib\n+ * @run driver jdk.test.lib.hotspot.ir_framework.examples.BaseTestExample\n+ *\/\n+\n+\/**\n+ * If there is no warm up specified the Test Framework will do the following:\n+ * <ol>\n+ *     <li><p>Invoke @Test method {@link TestFrameworkExecution#WARMUP_ITERATIONS} many times.<\/li>\n+ *     <li><p>Then do compilation of @Test method. <b>(**)<\/b><\/li>\n+ *     <li><p>Invoke @Test method once again<\/li>\n+ * <\/ol>\n+ * <p>\n+ *\n+ * Configurable things for simple tests (no @Run or @Check) at @Test method:\n+ * <ul>\n+ *     <li><p>compLevel: Specify at which compilation level the test should be compiled by the framework at step <b>(**)<\/b>.\n+ *                       If {@link CompLevel#WAIT_FOR_COMPILATION} is specified, the framework will continue invoke the\n+ *                       method until HotSpot compiles it. If it is not compiled after 10s, an exception is thrown.<\/li>\n+ *     <li><p>@Warmup: Change warm-up iterations of test (defined by default by TestFrameworkExecution.WARMUP_ITERATIONS)<\/li>\n+ *     <li><p>@Arguments: If a @Test method specifies arguments, you need to provide arguments by using @Arguments such\n+ *                        that the framework knows how to call the method. If you need more complex values, use @Run.<\/li>\n+ *     <li><p>@IR: Arbitrary number of @IR rules.<\/li>\n+ * <\/ul>\n+ *\n+ * @see Test\n+ * @see Arguments\n+ * @see Warmup\n+ * @see TestFramework\n+ *\/\n+public class BaseTestExample {\n+\n+    int iFld;\n+\n+    public static void main(String[] args) {\n+        TestFramework.run(); \/\/ equivalent to TestFramework.run(TestSimpleTest.class)\n+    }\n+\n+    \/\/ Test without arguments.\n+    @Test\n+    public void mostBasicTest() {\n+        iFld = 42;\n+    }\n+\n+    \/\/ Test with arguments. Use Argument class to choose a value.\n+    \/\/ Object arguments need to have an associated default constructor in its class.\n+    @Test\n+    @Arguments({Argument.DEFAULT, Argument.MAX})\n+    public void basicTestWithArguments(int x, long y) {\n+        iFld = x;\n+    }\n+\n+    \/\/ @Warmup needs to be positive or zero. In case of zero, the method is directly compiled (simulated -Xcomp).\n+    @Test\n+    @Arguments({Argument.DEFAULT, Argument.MAX})\n+    @Warmup(100)\n+    public void basicTestWithDifferentWarmup(int x, long y) {\n+        iFld = x;\n+    }\n+}\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/examples\/BaseTestExample.java","additions":89,"deletions":0,"binary":false,"changes":89,"status":"added"},{"patch":"@@ -0,0 +1,148 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.test.lib.hotspot.ir_framework.examples;\n+\n+import jdk.test.lib.hotspot.ir_framework.*;\n+\n+\/*\n+ * @test\n+ * @summary Example test to use the new test framework.\n+ * @library \/test\/lib\n+ * @run driver jdk.test.lib.hotspot.ir_framework.examples.CheckedTestExample\n+ *\/\n+\n+\/**\n+ * If there is no non-default warm-up specified, the Test Framework will do the following:\n+ * <ol>\n+ *     <li><p>Invoke @Test method {@link TestFrameworkExecution#WARMUP_ITERATIONS} many times.<\/li>\n+ *     <li><p>By default, after each invocation, the @Check method of the @Test method is invoked. This can be disabled\n+ *            by using {@link CheckAt#COMPILED}<\/li>\n+ *     <li><p>After the warm-up, the @Test method is compiled.<\/li>\n+ *     <li><p>Invoke @Test method once again and then always invoke the @Check method once again.<\/li>\n+ * <\/ol>\n+ * <p>\n+ *\n+ * Configurable things for checked tests:\n+ * <ul>\n+ *     <li><p>At @Test method:<\/li>\n+ *     <ul>\n+ *         <li><p>@Warmup: Change warm-up iterations of test (defined by default by TestFrameworkExecution.WARMUP_ITERATIONS)<\/li>\n+ *         <li><p>@Arguments: If a @Test method specifies arguments, you need to provide arguments by using @Arguments\n+ *                            such that the framework knows how to call the method. If you need more complex values, use a\n+ *                            custom run test with @Run.<\/li>\n+ *         <li><p>@IR: Arbitrary number of @IR rules.<\/li>\n+ *     <\/ul>\n+ *     <li><p>At @Check method:<\/li>\n+ *     <ul>\n+ *         <li><p>{@link Check#when}: When should the @Check method be invoked.<\/li>\n+ *         <li><p>No @IR annotations.<\/li>\n+ *     <\/ul>\n+ * <\/ul>\n+ *\n+ * @see Check\n+ * @see Test\n+ * @see Arguments\n+ * @see Warmup\n+ * @see TestFramework\n+ *\/\n+public class CheckedTestExample {\n+\n+    public static void main(String[] args) {\n+        TestFramework.run(); \/\/ equivalent to TestFramework.run(TestSimpleTest.class)\n+    }\n+\n+    @Test\n+    @Arguments(Argument.DEFAULT) \/\/ As with normal tests, you need to tell the framework what the argument is.\n+    @Warmup(100) \/\/ As with normal tests, you can specify the warmup iterations.\n+    public int test(int x) {\n+        return 42;\n+    }\n+\n+    \/\/ Check method for test(). Invoked directly after test() by the Test Framework.\n+    @Check(test = \"test\") \/\/ Specify the @Test method for which this method is a check.\n+    public void basicCheck() {\n+        \/\/ Do some checks after an invocation.\n+    }\n+\n+    @Test\n+    public int test2() {\n+        return 42;\n+    }\n+\n+    \/\/ This version of @Check passes the return value from test2() as an argument.\n+    \/\/ The return type and the parameter type must match.\n+    @Check(test = \"test2\")\n+    public void checkWithReturn(int returnValue) {\n+        \/\/ Do some checks after an invocation.\n+        if (returnValue != 42) {\n+            throw new RuntimeException(\"Must match\");\n+        }\n+    }\n+\n+    @Test\n+    public int test3() {\n+        return 42;\n+    }\n+\n+    \/\/ This version of @Check passes a TestInfo object to the check which contains some additional information about the test.\n+    @Check(test = \"test3\")\n+    public void checkWithTestInfo(TestInfo info) {\n+        \/\/ Do some checks after an invocation. Additional queries with TestInfo.\n+        if (!info.isWarmUp()) {\n+            \/\/ ...\n+        }\n+    }\n+\n+    @Test\n+    public int test4() {\n+        return 42;\n+    }\n+\n+    \/\/ This version of @Check passes the return value and a TestInfo object to the check which contains some additional\n+    \/\/ information about the test. The order of the arguments is important. The return value must come first and the\n+    \/\/ the TestInfo parameter second. Any other combination or use of different arguments are forbidden for @Check methods.\n+    @Check(test = \"test4\")\n+    public void checkWithReturnAndTestInfo(int returnValue, TestInfo info) {\n+        \/\/ Do some checks after an invocation. Additional queries with TestInfo.\n+        if (returnValue != 42) {\n+            throw new RuntimeException(\"Must match\");\n+        }\n+        if (!info.isWarmUp()) {\n+            \/\/ ...\n+        }\n+    }\n+\n+    @Test\n+    public int test5() {\n+        return 42;\n+    }\n+\n+    \/\/ Check method for test5() is only invoked once warmup is finished and test() has been compiled by the Test Framework.\n+    @Check(test = \"test5\", when = CheckAt.COMPILED) \/\/ Specify the @Test method for which this method is a check.\n+    public void checkAfterCompiled(TestInfo info) {\n+        \/\/ Do some checks after compilation.\n+        TestFramework.assertCompiled(info.getTest()); \/\/ Test is compiled by framework after warm-up.\n+    }\n+\n+}\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/examples\/CheckedTestExample.java","additions":148,"deletions":0,"binary":false,"changes":148,"status":"added"},{"patch":"@@ -0,0 +1,167 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.test.lib.hotspot.ir_framework.examples;\n+\n+import jdk.test.lib.hotspot.ir_framework.*;\n+\n+\/*\n+ * @test\n+ * @summary Example test to use the new test framework.\n+ * @library \/test\/lib\n+ * @run driver jdk.test.lib.hotspot.ir_framework.examples.CustomRunTestExample\n+ *\/\n+\n+\/**\n+ * If there is no warm-up specified, the Test Framework will do the following:\n+ * <ol>\n+ *     <li><p>Invoke @Run method {#link TestFrameworkExecution#WARMUP_ITERATIONS} many times. Note that the @Run method\n+ *            is responsible to invoke the @Test methods to warm it up properly. This is not done by the framework. Not\n+ *            invoking a @Test method will result in an -Xcomp like compilation of the method as there is no profile\n+ *            information for it. The @Run method can do any arbitrary argument setup and return value verification and\n+ *            can invoke the @Test methods multiple times in a single invocation of the @Run method or even skip some\n+ *            test invocations.<\/li>\n+ *     <li><p>After the warm-up, the @Test methods are compiled (there can be multiple @Test methods).<\/li>\n+ *     <li><p>Invoke the @Run method once again.<\/li>\n+ * <\/ol>\n+ * <p>\n+ *\n+ * Configurable things for custom run tests:\n+ * <ul>\n+ *     <li><p>At @Test methods:<\/li>\n+ *     <ul>\n+ *         <li><p>@IR: Arbitrary number of @IR rules.<\/li>\n+ *         <li><p>No @Warmup, this must be set at @Run method.<\/li>\n+ *         <li><p>No @Arguments, the arguments are set by @Run method.<\/li>\n+ *     <\/ul>\n+ *     <li><p>At @Run method:<\/li>\n+ *     <ul>\n+ *         <li><p>@Warmup: Change warm-up iterations of @Run method (defined by default by\n+ *                         TestFrameworkExecution.WARMUP_ITERATIONS)<\/li>\n+ *         <li><p>{@link Run#test}: Specify any number of @Test methods. They cannot be shared with other @Check or @Run\n+ *                                  methods.<\/li>\n+ *         <li><p>{@link Run#mode}: Choose between normal invocation as described above or {@link RunMode#STANDALONE}.\n+ *                                  STANDALONE only invokes the @Run method once without warm-up or a compilation by the\n+ *                                  Test Framework. The only thing done by the framework is the verification of any @IR\n+ *                                  rules afterwards. The STANDALONE @Run method needs to make sure that a C2 compilation\n+ *                                  is reliably triggered if there are any @IR rules.<\/li>\n+ *         <li><p>No @IR annotations<\/li>\n+ *     <\/ul>\n+ * <\/ul>\n+ *\n+ * @see Run\n+ * @see Test\n+ * @see RunMode\n+ * @see TestFramework\n+ *\/\n+public class CustomRunTestExample {\n+\n+    public static void main(String[] args) {\n+        TestFramework.run(); \/\/ equivalent to TestFramework.run(TestSimpleTest.class)\n+    }\n+\n+    @Test\n+    public int test(int x) {\n+        return x;\n+    }\n+\n+    \/\/ Run method for test(). Invoked directly by Test Framework instead of test().\n+    \/\/ Can do anything you like. It's also possible to skip or do multiple invocations of test()\n+    @Run(test = \"test\") \/\/ Specify the @Test method for which this method is a runner.\n+    public void basicRun() {\n+        int returnValue = test(34);\n+        if (returnValue != 34) {\n+            throw new RuntimeException(\"Must match\");\n+        }\n+    }\n+\n+    @Test\n+    public int test2(int x) {\n+        return x;\n+    }\n+\n+    \/\/ This version of @Run passes the RunInfo object as an argument. No other arguments and combiniations are allowed.\n+    @Run(test = \"test2\")\n+    public void runWithRunInfo(RunInfo info) {\n+        \/\/ We could also skip some invocations. This might have an influence on possible @IR rules, need to be careful.\n+        if (info.getRandom().nextBoolean()) {\n+            int returnValue = test(34);\n+            if (returnValue != 34) {\n+                throw new RuntimeException(\"Must match\");\n+            }\n+        }\n+    }\n+\n+    @Test\n+    public int test3(int x) {\n+        return x;\n+    }\n+\n+    \/\/ This version of @Run uses a user defined @Warmup.\n+    @Run(test = \"test3\")\n+    @Warmup(100)\n+    public void runWithWarmUp() {\n+        int returnValue = test3(34);\n+        if (returnValue != 34) {\n+            throw new RuntimeException(\"Must match\");\n+        }\n+    }\n+\n+    @Test\n+    public int test4(int x) {\n+        return x;\n+    }\n+\n+    \/\/ This version of @Run is only invoked once by the Test Framework. There is no warm-up and no compilation done\n+    \/\/ by the Test Framework. The only thing done by the framework is @IR rule verification.\n+    @Run(test = \"test4\", mode = RunMode.STANDALONE)\n+    public void runOnlyOnce() {\n+        int returnValue = test4(34);\n+        if (returnValue != 34) {\n+            throw new RuntimeException(\"Must match\");\n+        }\n+    }\n+\n+    @Test\n+    public int test5(int x) {\n+        return x;\n+    }\n+\n+    @Test\n+    public int test6(int x) {\n+        return x;\n+    }\n+\n+    \/\/ This version of @Run can run multiple test methods and get them IR checked as part of this custom run test.\n+    @Run(test = {\"test5\", \"test6\"})\n+    public void runMultipleTests() {\n+        int returnValue = test5(34);\n+        if (returnValue != 34) {\n+            throw new RuntimeException(\"Must match\");\n+        }\n+        returnValue = test6(42);\n+        if (returnValue != 42) {\n+            throw new RuntimeException(\"Must match\");\n+        }\n+    }\n+}\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/examples\/CustomRunTestExample.java","additions":167,"deletions":0,"binary":false,"changes":167,"status":"added"},{"patch":"@@ -0,0 +1,172 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.test.lib.hotspot.ir_framework.examples;\n+\n+import jdk.test.lib.hotspot.ir_framework.*;\n+\n+\/*\n+ * @test\n+ * @summary Example test to use the new test framework.\n+ * @library \/test\/lib\n+ * @run driver jdk.test.lib.hotspot.ir_framework.examples.IRExample\n+ *\/\n+\n+\n+\/**\n+ * Multiple @IR rules can be specified at @Test methods. The framework performs a regex based match on the PrintIdeal\n+ * and PrintOptoAssembly of the run test VM. Some default string regexes for IR nodes are defined in the framework\n+ * IRNode class. There are two kinds of checks:\n+ * <ul>\n+ *     <li><p>{@link IR#failOn}: One or more (IR node) regexes that are not allowed to occur in the IR (neither in\n+ *                               PrintIdeal nor in PrintOptoAssembly)<\/li>\n+ *     <li><p>{@link IR#counts}: One or more regexes-count pairs specifies how often an (IR node) regex must be found in\n+ *                               PrintIdeal and PrintOptoAssembly.<\/li>\n+ * <\/ul>\n+ * <p>\n+ *\n+ * One might also want to restrict the application of certain @IR rules depending on the used flags in the test VM.\n+ * These could be flags defined by the user or by JTreg. In the latter case, the flags must be whitelisted (see\n+ * {@link TestFramework}) most of them should not have an impact on the IR except for different GC flags which should\n+ * be considered) to enable a verification by the framework (see below). The @IR rules thus have an option to restrict\n+ * their application:\n+ * <ul>\n+ *     <li><p>{@link IR#applyIf}: Only apply a rule if a flag has a certain value<\/li>\n+ *     <li><p>{@link IR#applyIfNot}: Only apply a rule if a flag has NOT a certain value (inverse of applyIf)<\/li>\n+ *     <li><p>{@link IR#applyIfAnd}: Only apply a rule if all flags have the specified value<\/li>\n+ *     <li><p>{@link IR#applyIfOr}: Only apply a rule if at least one flag has the specified value<\/li>\n+ * <\/ul>\n+ * <p>\n+ *\n+ * The framework, however, does not perform the verification if:\n+ * <ul>\n+ *     <li><p>-DVerifyIR=false is used<\/li>\n+ *     <li><p>The test is run with a non-debug build<\/li>\n+ *     <li><p>-Xcomp, -Xint, -XX:-UseCompile, -XX:CompileThreshold, -DFlipC1C2=true, or -DExcludeRandom=true are used.<\/li>\n+ *     <li><p>JTreg specifies non-whitelisted flags as VM and\/or Javaoptions (could change the IR in an unexpected way)<\/li>\n+ * <\/ul>\n+ *\n+ * @see IR\n+ * @see Test\n+ * @see TestFramework\n+ *\/\n+\/\/ This test is expected to fail when run with JTreg.\n+public class IRExample {\n+\n+    int iFld, iFld2, iFld3;\n+\n+    public static void main(String[] args) {\n+        TestFramework.run(); \/\/ First run tests from IRExample\n+        try {\n+            TestFramework.run(FailingExamples.class); \/\/ Secondly, run tests from FailingExamples\n+        } catch (IRViolationException e) {\n+            \/\/ Expected. Check output to see how IR failures are reported.\n+            throw e;\n+        }\n+    }\n+\n+    \/\/ Rules with failOn constraint which all pass\n+    @Test\n+    @IR(failOn = IRNode.LOAD) \/\/ 1 default regex\n+    @IR(failOn = {IRNode.LOAD, IRNode.LOOP}) \/\/ 2 default regexes\n+    @IR(failOn = {IRNode.LOAD, \"some regex that does not occur\"}) \/\/ 1 default regex and a user-defined regex\n+    \/\/ Rule with special configurable default regexes. All regexes with a \"_OF\" postfix in IR node expect a\n+    \/\/ second string specifying an additional required information.\n+    @IR(failOn = {IRNode.STORE_OF_FIELD, \"iFld2\", IRNode.LOAD, IRNode.STORE_OF_CLASS, \"Foo\"})\n+    \/\/ Only apply this rule if the VM flag UseZGC is true\n+    @IR(applyIf = {\"UseZGC\", \"true\"}, failOn = IRNode.LOAD)\n+    \/\/ We can also use comparators (<, <=, >, >=, !=, =) to restrict the rules.\n+    \/\/ This rule is only applied if the loop unroll limit is 10 or greater.\n+    @IR(applyIf = {\"LoopUnrollLimit\", \">= 10\"}, failOn = IRNode.LOAD)\n+    public void goodFailOn() {\n+        iFld = 42; \/\/ No load, no loop, no store to iFld2, no store to class Foo\n+    }\n+\n+    \/\/ Rules with counts constraint which all pass\n+    @Test\n+    @IR(counts = {IRNode.STORE, \"2\"}) \/\/ 1 default regex\n+    @IR(counts = {IRNode.LOAD, \"0\"}) \/\/ equivalent to failOn = IRNode.LOAD\n+    @IR(counts = {IRNode.STORE, \"2\",\n+                  IRNode.LOAD, \"0\"}) \/\/ 2 default regexes\n+    @IR(counts = {IRNode.STORE, \"2\",\n+                  \"some regex that does not occur\", \"0\"}) \/\/ 1 default regex and a user-defined regex\n+    \/\/ Rule with special configurable default regexes. All regexes with a \"_OF\" postfix in IR node expect a\n+    \/\/ second string specifying an additional required information.\n+    @IR(counts = {IRNode.STORE_OF_FIELD, \"iFld\", \"1\",\n+                  IRNode.STORE, \"2\",\n+                  IRNode.STORE_OF_CLASS, \"IRExample\", \"2\"})\n+    public void goodCounts() {\n+        iFld = 42; \/\/ No load, store to iFld in class IRExample\n+        iFld2 = 42; \/\/ No load, store to iFld2 in class IRExample\n+    }\n+\n+    \/\/ @IR rules can also specify both type of checks in the same rule\n+    @Test\n+    @IR(failOn = {IRNode.ALLOC,\n+                  IRNode.LOOP},\n+        counts = {IRNode.LOAD, \"2\",\n+                  IRNode.LOAD_OF_FIELD, \"iFld2\", \"1\",\n+                  IRNode.LOAD_OF_CLASS, \"IRExample\", \"2\"})\n+    public void mixFailOnAndCounts() {\n+        iFld = iFld2;\n+        iFld2 = iFld3;\n+    }\n+}\n+\n+class FailingExamples {\n+    int iFld2, iFld3;\n+    IRExample irExample = new IRExample();\n+\n+    \/\/ Rules with failOn constraint which all fail.\n+    @Test\n+    @IR(failOn = IRNode.STORE)\n+    @IR(failOn = {IRNode.STORE, IRNode.LOOP}) \/\/ LOOP regex not found but STORE regex, letting the rule fail\n+    @IR(failOn = {IRNode.LOOP, IRNode.STORE}) \/\/ Order does not matter\n+    @IR(failOn = {IRNode.STORE, IRNode.LOAD}) \/\/ LOOP and STORE regex, letting the rule fail\n+    @IR(failOn = {\"LoadI\"}) \/\/ LoadI can be found in PrintIdeal letting the rule fail\n+    \/\/ Store to iFld, store, and store to class IRExample, all 3 regexes found letting the rule fail\n+    @IR(failOn = {IRNode.STORE_OF_FIELD, \"iFld\", IRNode.STORE, IRNode.STORE_OF_CLASS, \"IRExample\"})\n+    public void badFailOn() {\n+        irExample.iFld = iFld2; \/\/ Store to iFld in class IRExample, load from iFld2\n+    }\n+\n+\n+    \/\/ Rules with counts constraint which all fail\n+    @Test\n+    @IR(counts = {IRNode.STORE, \"1\"}) \/\/ There are 2 stores\n+    @IR(counts = {IRNode.LOAD, \"0\"}) \/\/ equivalent to failOn = IRNode.LOAD, there is 1 load\n+    @IR(counts = {IRNode.STORE, \"1\",\n+                  IRNode.LOAD, \"1\"}) \/\/ first constraint holds (there is 1 load) but 2 stores, letting this rule fail\n+    @IR(counts = {IRNode.LOAD, \"1\",\n+                  IRNode.STORE, \"1\"}) \/\/ order does not matter\n+    @IR(counts = {\"some regex that does not occur\", \"1\"}) \/\/ user-defined regex does not occur once\n+    \/\/ Rule with special configurable default regexes. All regexes with a \"_OF\" postfix in IR node expect a\n+    \/\/ second string specifying an additional required information.\n+    @IR(counts = {IRNode.STORE_OF_FIELD, \"iFld\", \"2\", \/\/ Only one store to iFld\n+                  IRNode.LOAD, \"2\", \/\/ Only 1 load\n+                  IRNode.STORE_OF_CLASS, \"Foo\", \"1\"}) \/\/ No store to class Foo\n+    public void badCounts() {\n+        irExample.iFld = iFld3; \/\/ No load, store to iFld in class IRExample\n+        iFld2 = 42; \/\/ No load, store to iFld2 in class IRExample\n+    }\n+}\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/examples\/IRExample.java","additions":172,"deletions":0,"binary":false,"changes":172,"status":"added"},{"patch":"@@ -0,0 +1,26 @@\n+#\n+# Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+\n+# Minimal TEST.ROOT file to run the examples tests as if the examples would have been placed inside\n+# \/test\/hotspot\/jtreg\n+external.lib.roots = ..\/..\/..\/..\/..\/..\/..\/..\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/examples\/TEST.ROOT","additions":26,"deletions":0,"binary":false,"changes":26,"status":"added"},{"patch":"@@ -0,0 +1,7 @@\n+# Framework internal tests\n+This folder contains tests which test the functionality of the framework. These should be run with JTreg and without additional VM and Javaopts flags whenever the framework is modified. \n+\n+These tests are not part of the normal tier testing as they only should be run when the framework is changed in any way.\n+\n+Additional testing should be performed with the converted Valhalla tests to make sure a changeset is correct (these are part of the Valhalla CI).\n+\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/tests\/README.md","additions":7,"deletions":0,"binary":false,"changes":7,"status":"added"},{"patch":"@@ -0,0 +1,35 @@\n+#\n+# Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+\n+# Minimal TEST.ROOT file to run the internal framework tests as if they would have been placed inside\n+# \/test\/hotspot\/jtreg\n+external.lib.roots = ..\/..\/..\/..\/..\/..\/..\/..\n+requires.extraPropDefns = ..\/..\/..\/..\/..\/..\/..\/jtreg-ext\/requires\/VMProps.java\n+requires.extraPropDefns.bootlibs = ..\/..\/..\/..\/..\/..\/..\/lib\/sun\n+requires.extraPropDefns.libs = \\\n+    ..\/..\/..\/..\/..\/..\/..\/lib\/jdk\/test\/lib\/Platform.java \\\n+    ..\/..\/..\/..\/..\/..\/..\/lib\/jdk\/test\/lib\/Container.java\n+requires.extraPropDefns.vmOpts = -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI\n+requires.properties= \\\n+    vm.debug \\\n+    vm.compiler2.enabled \\\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/tests\/TEST.ROOT","additions":35,"deletions":0,"binary":false,"changes":35,"status":"added"},{"patch":"@@ -0,0 +1,426 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.test.lib.hotspot.ir_framework.tests;\n+\n+import jdk.test.lib.hotspot.ir_framework.*;\n+\n+\/*\n+ * @test\n+ * @summary Test different access modifiers an make sure, the framework can access all methods.\n+ * @library \/test\/lib\n+ * @run driver jdk.test.lib.hotspot.ir_framework.tests.TestAccessModifiers\n+ *\/\n+\n+public class TestAccessModifiers {\n+    public static void main(String[] args) {\n+        TestFramework.run(PackagePrivate.class);\n+    }\n+}\n+\n+class PackagePrivate {\n+    @Test\n+    public void test() {\n+    }\n+\n+    @Test\n+    @Arguments(Argument.DEFAULT)\n+    public void test2(int x) {\n+    }\n+\n+    @Test\n+    public static int staticPublicPrivate() {\n+        return 42;\n+    }\n+\n+    @Check(test = \"staticPublicPrivate\")\n+    private void staticPublicPrivateCheck(int retValue) {\n+        if (retValue != 42) {\n+            throw new RuntimeException(\"Needs to be 42\");\n+        }\n+    }\n+\n+    @Test\n+    protected static int staticProtectedPrivate() {\n+        return 42;\n+    }\n+\n+    @Check(test = \"staticProtectedPrivate\")\n+    private void staticProtectedPrivateCheck(int retValue) {\n+        if (retValue != 42) {\n+            throw new RuntimeException(\"Needs to be 42\");\n+        }\n+    }\n+\n+    @Test\n+    static int staticDefaultPrivate() {\n+        return 42;\n+    }\n+\n+    @Check(test = \"staticDefaultPrivate\")\n+    private void staticDefaultPrivateCheck(int retValue) {\n+        if (retValue != 42) {\n+            throw new RuntimeException(\"Needs to be 42\");\n+        }\n+    }\n+\n+    @Test\n+    private static int staticPrivatePrivate() {\n+        return 42;\n+    }\n+\n+    @Check(test = \"staticPrivatePrivate\")\n+    private void staticPrivatePrivateCheck(int retValue) {\n+        if (retValue != 42) {\n+            throw new RuntimeException(\"Needs to be 42\");\n+        }\n+    }\n+\n+    @Test\n+    public static int staticPublicDefault() {\n+        return 42;\n+    }\n+\n+    @Check(test = \"staticPublicDefault\")\n+    void staticPublicDefaultCheck(int retValue) {\n+        if (retValue != 42) {\n+            throw new RuntimeException(\"Needs to be 42\");\n+        }\n+    }\n+\n+    @Test\n+    protected static int staticProtectedDefault() {\n+        return 42;\n+    }\n+\n+    @Check(test = \"staticProtectedDefault\")\n+    void staticProtectedDefaultCheck(int retValue) {\n+        if (retValue != 42) {\n+            throw new RuntimeException(\"Needs to be 42\");\n+        }\n+    }\n+\n+    @Test\n+    static int staticDefaultDefault() {\n+        return 42;\n+    }\n+\n+    @Check(test = \"staticDefaultDefault\")\n+    void staticDefaultDefaultCheck(int retValue) {\n+        if (retValue != 42) {\n+            throw new RuntimeException(\"Needs to be 42\");\n+        }\n+    }\n+\n+    @Test\n+    private static int staticPrivateDefault() {\n+        return 42;\n+    }\n+\n+    @Check(test = \"staticPrivateDefault\")\n+    void staticPrivateDefaultCheck(int retValue) {\n+        if (retValue != 42) {\n+            throw new RuntimeException(\"Needs to be 42\");\n+        }\n+    }\n+\n+    @Test\n+    public static int staticPublicProtected() {\n+        return 42;\n+    }\n+\n+    @Check(test = \"staticPublicProtected\")\n+    protected void staticPublicProtectedCheck(int retValue) {\n+        if (retValue != 42) {\n+            throw new RuntimeException(\"Needs to be 42\");\n+        }\n+    }\n+\n+    @Test\n+    protected static int staticProtectedProtected() {\n+        return 42;\n+    }\n+\n+    @Check(test = \"staticProtectedProtected\")\n+    protected void staticProtectedProtectedCheck(int retValue) {\n+        if (retValue != 42) {\n+            throw new RuntimeException(\"Needs to be 42\");\n+        }\n+    }\n+\n+    @Test\n+    static int staticDefaultProtected() {\n+        return 42;\n+    }\n+\n+    @Check(test = \"staticDefaultProtected\")\n+    protected void staticDefaultProtectedCheck(int retValue) {\n+        if (retValue != 42) {\n+            throw new RuntimeException(\"Needs to be 42\");\n+        }\n+    }\n+\n+    @Test\n+    private static int staticPrivateProtected() {\n+        return 42;\n+    }\n+\n+    @Check(test = \"staticPrivateProtected\")\n+    protected void staticPrivateProtectedCheck(int retValue) {\n+        if (retValue != 42) {\n+            throw new RuntimeException(\"Needs to be 42\");\n+        }\n+    }\n+\n+    @Test\n+    public static int staticPublicPublic() {\n+        return 42;\n+    }\n+\n+    @Check(test = \"staticPublicPublic\")\n+    public void staticPublicPublicCheck(int retValue) {\n+        if (retValue != 42) {\n+            throw new RuntimeException(\"Needs to be 42\");\n+        }\n+    }\n+\n+    @Test\n+    protected static int staticProtectedPublic() {\n+        return 42;\n+    }\n+\n+    @Check(test = \"staticProtectedPublic\")\n+    public void staticProtectedPublicCheck(int retValue) {\n+        if (retValue != 42) {\n+            throw new RuntimeException(\"Needs to be 42\");\n+        }\n+    }\n+\n+    @Test\n+    static int staticDefaultPublic() {\n+        return 42;\n+    }\n+\n+    @Check(test = \"staticDefaultPublic\")\n+    public void staticDefaultPublicCheck(int retValue) {\n+        if (retValue != 42) {\n+            throw new RuntimeException(\"Needs to be 42\");\n+        }\n+    }\n+\n+    @Test\n+    private static int staticPrivatePublic() {\n+        return 42;\n+    }\n+\n+    @Check(test = \"staticPrivatePublic\")\n+    public void staticPrivatePublicCheck(int retValue) {\n+        if (retValue != 42) {\n+            throw new RuntimeException(\"Needs to be 42\");\n+        }\n+    }\n+\n+    @Test\n+    static int staticDefaultPrivate2() {\n+        return 42;\n+    }\n+\n+    @Run(test = \"staticDefaultPrivate2\")\n+    private void staticDefaultPrivateRun() {\n+        int retValue = staticDefaultPrivate2();\n+        if (retValue != 42) {\n+            throw new RuntimeException(\"Needs to be 42\");\n+        }\n+    }\n+\n+    @Test\n+    private static int staticPrivatePrivate2() {\n+        return 42;\n+    }\n+\n+    @Run(test = \"staticPrivatePrivate2\")\n+    private void staticPrivatePrivateRun() {\n+        int retValue = staticPrivatePrivate2();\n+        if (retValue != 42) {\n+            throw new RuntimeException(\"Needs to be 42\");\n+        }\n+    }\n+\n+    @Test\n+    public static int staticPublicDefault2() {\n+        return 42;\n+    }\n+\n+    @Run(test = \"staticPublicDefault2\")\n+    void staticPublicDefaultRun() {\n+        int retValue = staticPublicDefault2();\n+        if (retValue != 42) {\n+            throw new RuntimeException(\"Needs to be 42\");\n+        }\n+    }\n+\n+    @Test\n+    protected static int staticProtectedDefault2() {\n+        return 42;\n+    }\n+\n+    @Run(test = \"staticProtectedDefault2\")\n+    void staticProtectedDefaultRun() {\n+        int retValue = staticProtectedDefault2();\n+        if (retValue != 42) {\n+            throw new RuntimeException(\"Needs to be 42\");\n+        }\n+    }\n+\n+    @Test\n+    static int staticDefaultDefault2() {\n+        return 42;\n+    }\n+\n+    @Run(test = \"staticDefaultDefault2\")\n+    void staticDefaultDefaultRun() {\n+        int retValue = staticDefaultDefault2();\n+        if (retValue != 42) {\n+            throw new RuntimeException(\"Needs to be 42\");\n+        }\n+    }\n+\n+    @Test\n+    private static int staticPrivateDefault2() {\n+        return 42;\n+    }\n+\n+    @Run(test = \"staticPrivateDefault2\")\n+    void staticPrivateDefaultRun() {\n+        int retValue = staticPrivateDefault2();\n+        if (retValue != 42) {\n+            throw new RuntimeException(\"Needs to be 42\");\n+        }\n+    }\n+\n+    @Test\n+    public static int staticPublicProtected2() {\n+        return 42;\n+    }\n+\n+    @Run(test = \"staticPublicProtected2\")\n+    protected void staticPublicProtectedRun() {\n+        int retValue = staticPublicProtected2();\n+        if (retValue != 42) {\n+            throw new RuntimeException(\"Needs to be 42\");\n+        }\n+    }\n+\n+    @Test\n+    protected static int staticProtectedProtected2() {\n+        return 42;\n+    }\n+\n+    @Run(test = \"staticProtectedProtected2\")\n+    protected void staticProtectedProtectedRun() {\n+        int retValue = staticProtectedProtected2();\n+        if (retValue != 42) {\n+            throw new RuntimeException(\"Needs to be 42\");\n+        }\n+    }\n+\n+    @Test\n+    static int staticDefaultProtected2() {\n+        return 42;\n+    }\n+\n+    @Run(test = \"staticDefaultProtected2\")\n+    protected void staticDefaultProtectedRun() {\n+        int retValue = staticDefaultProtected2();\n+        if (retValue != 42) {\n+            throw new RuntimeException(\"Needs to be 42\");\n+        }\n+    }\n+\n+    @Test\n+    private static int staticPrivateProtected2() {\n+        return 42;\n+    }\n+\n+    @Run(test = \"staticPrivateProtected2\")\n+    protected void staticPrivateProtectedRun() {\n+        int retValue = staticPrivateProtected2();\n+        if (retValue != 42) {\n+            throw new RuntimeException(\"Needs to be 42\");\n+        }\n+    }\n+\n+    @Test\n+    public static int staticPublicPublic2() {\n+        return 42;\n+    }\n+\n+    @Run(test = \"staticPublicPublic2\")\n+    public void staticPublicPublicRun() {\n+        int retValue = staticPublicPublic2();\n+        if (retValue != 42) {\n+            throw new RuntimeException(\"Needs to be 42\");\n+        }\n+    }\n+\n+    @Test\n+    protected static int staticProtectedPublic2() {\n+        return 42;\n+    }\n+\n+    @Run(test = \"staticProtectedPublic2\")\n+    public void staticProtectedPublicRun() {\n+        int retValue = staticProtectedPublic2();\n+        if (retValue != 42) {\n+            throw new RuntimeException(\"Needs to be 42\");\n+        }\n+    }\n+\n+    @Test\n+    static int staticDefaultPublic2() {\n+        return 42;\n+    }\n+\n+    @Run(test = \"staticDefaultPublic2\")\n+    public void staticDefaultPublicRun() {\n+        int retValue = staticDefaultPublic2();\n+        if (retValue != 42) {\n+            throw new RuntimeException(\"Needs to be 42\");\n+        }\n+    }\n+\n+    @Test\n+    private static int staticPrivatePublic2() {\n+        return 42;\n+    }\n+\n+    @Run(test = \"staticPrivatePublic2\")\n+    public void staticPrivatePublicRun() {\n+        int retValue = staticPrivatePublic2();\n+        if (retValue != 42) {\n+            throw new RuntimeException(\"Needs to be 42\");\n+        }\n+    }\n+\n+\n+}\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/tests\/TestAccessModifiers.java","additions":426,"deletions":0,"binary":false,"changes":426,"status":"added"},{"patch":"@@ -0,0 +1,1011 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.test.lib.hotspot.ir_framework.tests;\n+\n+import jdk.test.lib.hotspot.ir_framework.*;\n+import jdk.test.lib.Asserts;\n+\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+import java.lang.reflect.Method;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+\n+\/*\n+ * @test\n+ * @requires vm.compiler2.enabled\n+ * @summary Test test format violations.\n+ * @library \/test\/lib\n+ * @run driver jdk.test.lib.hotspot.ir_framework.tests.TestBadFormat\n+ *\/\n+\n+public class TestBadFormat {\n+\n+    public static void main(String[] args) {\n+        expectTestFormatException(BadNoTests.class);\n+        expectTestFormatException(BadArgumentsAnnotation.class);\n+        expectTestFormatException(BadOverloadedMethod.class);\n+        expectTestFormatException(BadCompilerControl.class);\n+        expectTestFormatException(BadWarmup.class);\n+        expectTestFormatException(BadBaseTests.class);\n+        expectTestFormatException(BadRunTests.class);\n+        expectTestFormatException(BadCheckTest.class);\n+        expectTestFormatException(BadIRAnnotations.class);\n+        expectTestFormatException(BadInnerClassTest.class);\n+        expectTestFormatException(BadCompileClassInitializer.class, BadCompileClassInitializerHelper1.class,\n+                                  BadCompileClassInitializerHelper2.class, BadCompileClassInitializerHelper3.class);\n+    }\n+\n+    private static void expectTestFormatException(Class<?> clazz, Class<?>... helpers) {\n+        try {\n+            if (helpers == null) {\n+                TestFramework.run(clazz);\n+            } else {\n+                TestFramework.runWithHelperClasses(clazz, helpers);\n+            }\n+        } catch (Exception e) {\n+            if (!(e instanceof TestFormatException)) {\n+                e.printStackTrace();\n+                Asserts.fail(\"Unexpected exception\", e);\n+            }\n+            String msg = e.getMessage();\n+            Violations violations = getViolations(clazz, helpers);\n+            violations.getFailedMethods().forEach(f -> Asserts.assertTrue(msg.contains(f), \"Could not find \" + f + \" in violations\\n\" + msg));\n+            Pattern pattern = Pattern.compile(\"Violations \\\\((\\\\d+)\\\\)\");\n+            Matcher matcher = pattern.matcher(msg);\n+            Asserts.assertTrue(matcher.find(), \"Could not find violations in\\n\" + msg);\n+            int violationCount = Integer.parseInt(matcher.group(1));\n+            Asserts.assertEQ(violationCount, violations.getViolationCount(), msg);\n+            return;\n+        }\n+        throw new RuntimeException(\"Should catch an exception\");\n+    }\n+\n+    private static Violations getViolations(Class<?> clazz, Class<?>... helpers) {\n+        Violations violations = new Violations();\n+        collectViolations(clazz, violations);\n+        if (helpers != null) {\n+            Arrays.stream(helpers).forEach(c -> collectViolations(c, violations));\n+        }\n+        return violations;\n+    }\n+\n+    private static void collectViolations(Class<?> clazz, Violations violations) {\n+        getViolationsOfClass(clazz, violations);\n+        for (Class<?> c : clazz.getDeclaredClasses()) {\n+            getViolationsOfClass(c, violations);\n+        }\n+    }\n+\n+    private static void getViolationsOfClass(Class<?> clazz, Violations violations) {\n+        ClassFail classFail = clazz.getDeclaredAnnotation(ClassFail.class);\n+        if (classFail != null) {\n+            violations.addFail(clazz);\n+        }\n+        for (Method m : clazz.getDeclaredMethods()) {\n+            NoFail noFail = m.getDeclaredAnnotation(NoFail.class);\n+            if (noFail == null) {\n+                FailCount failCount = m.getDeclaredAnnotation(FailCount.class);\n+                if (failCount != null) {\n+                    violations.addFail(m, failCount.value());\n+                } else {\n+                    violations.addFail(m, 1);\n+                }\n+            } else {\n+                \/\/ Cannot define both annotation at the same method.\n+                Asserts.assertEQ(m.getDeclaredAnnotation(FailCount.class), null);\n+            }\n+        }\n+    }\n+\n+}\n+\n+\/\/ Specify at least one @Test\n+@ClassFail\n+class BadNoTests {\n+\n+}\n+\n+class BadArgumentsAnnotation {\n+\n+    @Test\n+    public void noArgAnnotation(int a) {}\n+\n+    @Test\n+    @Arguments(Argument.DEFAULT)\n+    public void argNumberMismatch(int a, int b) {}\n+\n+    @Test\n+    @Arguments(Argument.DEFAULT)\n+    public void argNumberMismatch2() {}\n+\n+    @Test\n+    @Arguments(Argument.NUMBER_42)\n+    public void notBoolean(boolean a) {}\n+\n+    @Test\n+    @Arguments(Argument.NUMBER_MINUS_42)\n+    public void notBoolean2(boolean a) {}\n+\n+    @Test\n+    @Arguments(Argument.TRUE)\n+    public void notNumber(int a) {}\n+\n+    @Test\n+    @Arguments(Argument.FALSE)\n+    public void notNumber2(int a) {}\n+\n+    @Test\n+    @Arguments(Argument.BOOLEAN_TOGGLE_FIRST_TRUE)\n+    public void notNumber3(int a) {}\n+\n+    @Test\n+    @Arguments(Argument.BOOLEAN_TOGGLE_FIRST_FALSE)\n+    public void notNumber4(int a) {}\n+\n+    @Test\n+    @Arguments({Argument.BOOLEAN_TOGGLE_FIRST_FALSE, Argument.TRUE})\n+    public void notNumber5(boolean a, int b) {}\n+\n+    @FailCount(2)\n+    @Test\n+    @Arguments({Argument.BOOLEAN_TOGGLE_FIRST_FALSE, Argument.NUMBER_42})\n+    public void notNumber6(int a, boolean b) {}\n+\n+    @FailCount(2)\n+    @Test\n+    @Arguments({Argument.MIN, Argument.MAX})\n+    public void notNumber7(boolean a, boolean b) {}\n+\n+    @Test\n+    @Arguments(Argument.DEFAULT)\n+    public void missingDefaultConstructor(ClassNoDefaultConstructor a) {}\n+\n+    @Test\n+    @Arguments(Argument.TRUE)\n+    public void wrongArgumentNumberWithRun(Object o1, Object o2) {\n+    }\n+\n+    \/\/ Also fails: Cannot use @Arguments together with @Run\n+    @Run(test=\"wrongArgumentNumberWithRun\")\n+    public void forRun() {\n+    }\n+\n+    @Test\n+    @Arguments(Argument.TRUE)\n+    public void wrongArgumentNumberWithCheck(Object o1, Object o2) {\n+    }\n+\n+    @NoFail\n+    @Check(test=\"wrongArgumentNumberWithCheck\")\n+    public void forCheck() {\n+    }\n+}\n+\n+class BadOverloadedMethod {\n+\n+    @FailCount(0) \/\/ Combined with both sameName() below\n+    @Test\n+    public void sameName() {}\n+\n+    @Test\n+    @Arguments(Argument.DEFAULT)\n+    public void sameName(boolean a) {}\n+\n+    @Test\n+    @Arguments(Argument.DEFAULT)\n+    public void sameName(double a) {}\n+}\n+\n+class BadCompilerControl {\n+\n+    @Test\n+    @DontCompile\n+    public void test1() {}\n+\n+    @Test\n+    @ForceCompile\n+    public void test2() {}\n+\n+    @Test\n+    @DontInline\n+    public void test3() {}\n+\n+    @Test\n+    @ForceInline\n+    public void test4() {}\n+\n+    @Test\n+    @ForceInline\n+    @ForceCompile\n+    @DontInline\n+    @DontCompile\n+    public void test5() {}\n+\n+    @DontInline\n+    @ForceInline\n+    public void mix1() {}\n+\n+    @DontCompile\n+    @ForceCompile\n+    public void mix2() {}\n+\n+    @NoFail\n+    @Test\n+    public void test6() {}\n+\n+    @Run(test = \"test6\")\n+    @DontCompile\n+    public void notAtRun() {}\n+\n+    @NoFail\n+    @Test\n+    public void test7() {}\n+\n+    @Run(test = \"test7\")\n+    @ForceCompile\n+    public void notAtRun2() {}\n+\n+    @NoFail\n+    @Test\n+    public void test8() {}\n+\n+    @Run(test = \"test8\")\n+    @DontInline\n+    public void notAtRun3() {}\n+\n+    @NoFail\n+    @Test\n+    public void test9() {}\n+\n+    @Run(test = \"test9\")\n+    @ForceInline\n+    public void notAtRun4() {}\n+\n+    @NoFail\n+    @Test\n+    public void test10() {}\n+\n+    @Run(test = \"test10\")\n+    @ForceInline\n+    @ForceCompile\n+    @DontInline\n+    @DontCompile\n+    public void notAtRun5() {}\n+\n+    @NoFail\n+    @Test\n+    public void test11() {}\n+\n+    @Check(test = \"test11\")\n+    @DontCompile\n+    public void notAtCheck() {}\n+\n+    @NoFail\n+    @Test\n+    public void test12() {}\n+\n+    @Check(test = \"test12\")\n+    @ForceCompile\n+    public void notAtCheck2() {}\n+\n+    @NoFail\n+    @Test\n+    public void test13() {}\n+\n+    @Check(test = \"test13\")\n+    @DontInline\n+    public void notAtCheck3() {}\n+\n+    @NoFail\n+    @Test\n+    public void test14() {}\n+\n+    @Check(test = \"test14\")\n+    @ForceInline\n+    public void notAtCheck4() {}\n+\n+    @NoFail\n+    @Test\n+    public void test15() {}\n+\n+    @Check(test = \"test15\")\n+    @ForceInline\n+    @ForceCompile\n+    @DontInline\n+    @DontCompile\n+    public void notAtCheck5() {}\n+\n+    @ForceCompile(CompLevel.SKIP)\n+    public void invalidSkip1() {}\n+\n+    @DontCompile(CompLevel.SKIP)\n+    public void invalidSkip2() {}\n+\n+    @ForceCompile(CompLevel.WAIT_FOR_COMPILATION)\n+    public void invalidWaitForCompilation() {}\n+\n+    @DontCompile(CompLevel.WAIT_FOR_COMPILATION)\n+    public void invalidWaitForCompilation2() {}\n+\n+    @ForceCompile(CompLevel.C1)\n+    @DontCompile(CompLevel.C1)\n+    public void overlappingCompile1() {}\n+\n+    @ForceCompile(CompLevel.C2)\n+    @DontCompile(CompLevel.C2)\n+    public void overlappingCompile2() {}\n+\n+    @ForceCompile(CompLevel.ANY)\n+    @DontCompile(CompLevel.C1)\n+    public void invalidMix1() {}\n+\n+    @ForceCompile(CompLevel.ANY)\n+    @DontCompile(CompLevel.C2)\n+    public void invalidMix2() {}\n+\n+    @ForceCompile(CompLevel.ANY)\n+    @DontCompile\n+    public void invalidMix3() {}\n+\n+    @DontCompile(CompLevel.C1_LIMITED_PROFILE)\n+    public void invalidDontCompile1() {}\n+\n+    @DontCompile(CompLevel.C1_FULL_PROFILE)\n+    public void invalidDontCompile2() {}\n+}\n+\n+class BadWarmup {\n+\n+    @Warmup(10000)\n+    public void warmUpNonTest() {}\n+\n+    @Test\n+    @Warmup(1)\n+    public void someTest() {}\n+\n+    @FailCount(0) \/\/ Combined with someTest()\n+    @Run(test = \"someTest\")\n+    @Warmup(1)\n+    public void twoWarmups() {}\n+\n+    @Test\n+    @Warmup(-1)\n+    public void negativeWarmup() {}\n+\n+    @NoFail\n+    @Test\n+    public void someTest2() {}\n+\n+    @Run(test = \"someTest2\")\n+    @Warmup(-1)\n+    public void negativeWarmup2() {}\n+\n+    @NoFail\n+    @Test\n+    public void someTest3() {}\n+\n+    @FailCount(2) \/\/ Negative warmup and invoke once\n+    @Run(test = \"someTest3\", mode = RunMode.STANDALONE)\n+    @Warmup(-1)\n+    public void noWarmupAtStandalone() {}\n+\n+    @Test(compLevel = CompLevel.C1)\n+    public void testNoCompLevelStandalone() {}\n+\n+    @Test(compLevel = CompLevel.WAIT_FOR_COMPILATION)\n+    public void testNoCompLevelStandalone2() {}\n+\n+    @NoFail\n+    @Test\n+    public void someTest4() {}\n+\n+    @FailCount(0) \/\/ Negative warmup and invoke once\n+    @Run(test = {\"someTest4\", \"testNoCompLevelStandalone\", \"testNoCompLevelStandalone2\"}, mode = RunMode.STANDALONE)\n+    public void runNoCompLevelStandalone() {}\n+}\n+\n+class BadBaseTests {\n+    @Test\n+    @Arguments(Argument.DEFAULT)\n+    @FailCount(3) \/\/ No default constructor + parameter + return\n+    public TestInfo cannotUseTestInfoAsParameterOrReturn(TestInfo info) {\n+        return null;\n+    }\n+\n+    @Test\n+    @Arguments(Argument.DEFAULT)\n+    @FailCount(3) \/\/ No default constructor + parameter + return\n+    public RunInfo cannotUseRunInfoAsParameterOrReturn(RunInfo info) {\n+        return null;\n+    }\n+\n+    @Test\n+    @Arguments(Argument.DEFAULT)\n+    @FailCount(3) \/\/ No default constructor + parameter + return\n+    public AbstractInfo cannotUseAbstractInfoAsParameterOrReturn(AbstractInfo info) {\n+        return null;\n+    }\n+}\n+\n+class BadRunTests {\n+    @Run(test = \"runForRun2\")\n+    public void runForRun() {}\n+\n+    @Run(test = \"runForRun\")\n+    public void runForRun2() {}\n+\n+    @Test\n+    public void sharedByTwo() {}\n+\n+    @FailCount(0) \/\/ Combined with sharedByTwo()\n+    @Run(test = \"sharedByTwo\")\n+    public void share1() {}\n+\n+    @FailCount(0) \/\/ Combined with sharedByTwo()\n+    @Run(test = \"sharedByTwo\")\n+    public void share2() {}\n+\n+    @Run(test = \"doesNotExist\")\n+    public void noTestExists() {}\n+\n+    @Test\n+    @Arguments(Argument.DEFAULT)\n+    public void argTest(int x) {}\n+\n+    @FailCount(0) \/\/ Combined with argTest()\n+    @Run(test = \"argTest\")\n+    public void noArgumentAnnotationForRun() {}\n+\n+    @NoFail\n+    @Test\n+    public void test1() {}\n+\n+    @Run(test = \"test1\")\n+    public void wrongParameters1(int x) {}\n+\n+    @NoFail\n+    @Test\n+    public void test2() {}\n+\n+    @Run(test = \"test2\")\n+    public void wrongParameters(RunInfo info, int x) {}\n+\n+    @Test\n+    public void invalidShare() {}\n+\n+    @FailCount(0) \/\/ Combined with invalidShare()\n+    @Run(test = \"invalidShare\")\n+    public void shareSameTestTwice1() {}\n+\n+    @FailCount(0) \/\/ Combined with invalidShare()\n+    @Run(test = \"invalidShare\")\n+    public void shareSameTestTwice2() {}\n+\n+    @Test\n+    public void invalidShareCheckRun() {}\n+\n+    @FailCount(0) \/\/ Combined with invalidShare()\n+    @Run(test = \"invalidShareCheckRun\")\n+    public void invalidShareCheckRun1() {}\n+\n+    @FailCount(0) \/\/ Combined with invalidShare()\n+    @Check(test = \"invalidShareCheckRun\")\n+    public void invalidShareCheckRun2() {}\n+\n+    @NoFail\n+    @Test\n+    public void testInvalidRunWithArgAnnotation() {}\n+\n+    @Arguments(Argument.DEFAULT)\n+    @Run(test = \"testInvalidRunWithArgAnnotation\")\n+    public void invalidRunWithArgAnnotation(RunInfo info) {}\n+\n+    @NoFail\n+    @Test\n+    public void testRunWithTestInfo() {}\n+\n+    @Run(test = \"testRunWithTestInfo\")\n+    public void invalidRunWithTestInfo(TestInfo info) {}\n+\n+    @Run(test = {})\n+    public void invalidRunWithNoTest() {}\n+\n+    @Run(test = \"\")\n+    public void invalidRunWithEmptyTestName() {}\n+\n+    @NoFail\n+    @Test\n+    public void someExistingTest() {}\n+\n+    @FailCount(2)\n+    @Run(test = {\"unknown1\", \"someExistingTest\", \"unknown2\"})\n+    public void invalidRunWithInvalidTests() {}\n+\n+    @NoFail\n+    @Test\n+    public void testInvalidReuse() {}\n+\n+    @Test\n+    public void testInvalidReuse2() {}\n+\n+    @NoFail\n+    @Test\n+    public void testInvalidReuse3() {}\n+\n+    @FailCount(0)\n+    @Run(test = {\"testInvalidReuse\", \"testInvalidReuse2\"})\n+    public void runInvalidReuse1() {}\n+\n+    @FailCount(0)\n+    @Run(test = {\"testInvalidReuse2\", \"testInvalidReuse3\"})\n+    public void runInvalidReuse2() {}\n+}\n+\n+class BadCheckTest {\n+    @Check(test = \"checkForCheck2\")\n+    public void checkForCheck() {}\n+\n+    @Check(test = \"checkForCheck\")\n+    public void checkForCheck2() {}\n+\n+    @Test\n+    public void sharedByTwo() {}\n+\n+    @FailCount(0) \/\/ Combined with sharedByTwo()\n+    @Check(test = \"sharedByTwo\")\n+    public void share1() {}\n+\n+    @FailCount(0) \/\/ Combined with sharedByTwo()\n+    @Check(test = \"sharedByTwo\")\n+    public void share2() {}\n+\n+    @Check(test = \"doesNotExist\")\n+    public void noTestExists() {}\n+\n+    @NoFail\n+    @Test\n+    public void test1() {}\n+\n+    @Check(test = \"test1\")\n+    public void wrongReturnParameter1(int x) {}\n+\n+    @NoFail\n+    @Test\n+    public short test2() {\n+        return 3;\n+    }\n+\n+    @Check(test = \"test2\")\n+    public void wrongReturnParameter2(int x) {}\n+\n+    @NoFail\n+    @Test\n+    public short test3() {\n+        return 3;\n+    }\n+\n+    @Check(test = \"test3\")\n+    public void wrongReturnParameter3(String x) {}\n+\n+    @NoFail\n+    @Test\n+    public short test4() {\n+        return 3;\n+    }\n+\n+    @Check(test = \"test4\")\n+    public void wrongReturnParameter4(TestInfo info, int x) {} \/\/ Must flip parameters\n+\n+    @NoFail\n+    @Test\n+    public int test5() {\n+        return 3;\n+    }\n+\n+    @Check(test = \"test5\")\n+    public void wrongReturnParameter5(short x, TestInfo info) {}\n+\n+    @Test\n+    public void invalidShare() {}\n+\n+    @FailCount(0) \/\/ Combined with invalidShare()\n+    @Check(test = \"invalidShare\")\n+    public void shareSameTestTwice1() {}\n+\n+    @FailCount(0) \/\/ Combined with invalidShare()\n+    @Check(test = \"invalidShare\")\n+    public void shareSameTestTwice2() {}\n+\n+    @NoFail\n+    @Test\n+    public void testInvalidRunWithArgAnnotation() {}\n+\n+    @Arguments(Argument.DEFAULT)\n+    @Check(test = \"testInvalidRunWithArgAnnotation\")\n+    public void invalidRunWithArgAnnotation(TestInfo info) {}\n+}\n+\n+class BadIRAnnotations {\n+    @IR(failOn = IRNode.CALL)\n+    public void noIRAtNonTest() {}\n+\n+    @NoFail\n+    @Test\n+    public void test() {}\n+\n+    @Run(test = \"test\")\n+    @IR(failOn = IRNode.CALL)\n+    public void noIRAtRun() {}\n+\n+    @NoFail\n+    @Test\n+    public void test2() {}\n+\n+    @Check(test = \"test2\")\n+    @IR(failOn = IRNode.CALL)\n+    public void noIRAtCheck() {}\n+\n+    @Test\n+    @IR\n+    public void mustSpecifyAtLeastOneConstraint() {\n+    }\n+\n+    @FailCount(2)\n+    @Test\n+    @IR\n+    @IR\n+    public void mustSpecifyAtLeastOneConstraint2() {\n+    }\n+\n+    @Test\n+    @IR(applyIf = {\"SuspendRetryCount\", \"50\"})\n+    public void mustSpecifyAtLeastOneConstraint3() {\n+    }\n+\n+    @FailCount(3)\n+    @Test\n+    @IR(failOn = IRNode.CALL, applyIf = {\"SuspendRetryCount\", \"50\"}, applyIfNot = {\"UseTLAB\", \"true\"})\n+    @IR(failOn = IRNode.CALL, applyIfAnd = {\"SuspendRetryCount\", \"50\", \"UseTLAB\", \"true\"},\n+        applyIfOr = {\"SuspendRetryCount\", \"50\", \"UseTLAB\", \"true\"})\n+    @IR(failOn = IRNode.CALL, applyIf = {\"SuspendRetryCount\", \"50\"}, applyIfNot = {\"SuspendRetryCount\", \"50\"},\n+        applyIfAnd = {\"SuspendRetryCount\", \"50\", \"UseTLAB\", \"true\"},\n+        applyIfOr = {\"SuspendRetryCount\", \"50\", \"UseTLAB\", \"true\"})\n+    public void onlyOneApply() {}\n+\n+    @FailCount(3)\n+    @Test\n+    @IR(failOn = IRNode.CALL, applyIf = {\"SuspendRetryCount\", \"50\", \"UseTLAB\", \"true\"})\n+    @IR(failOn = IRNode.CALL, applyIf = {\"SuspendRetryCount\", \"51\", \"UseTLAB\"})\n+    public void applyIfTooManyFlags() {}\n+\n+    @FailCount(2)\n+    @Test\n+    @IR(failOn = IRNode.CALL, applyIf = {\"SuspendRetryCount\"})\n+    @IR(failOn = IRNode.CALL, applyIf = {\"Bla\"})\n+    public void applyIfMissingValue() {}\n+\n+    @FailCount(2)\n+    @Test\n+    @IR(failOn = IRNode.CALL, applyIf = {\"PrintIdealGraphFilee\", \"true\"})\n+    @IR(failOn = IRNode.CALL, applyIf = {\"Bla\", \"foo\"})\n+    public void applyIfUnknownFlag() {}\n+\n+    @FailCount(5)\n+    @Test\n+    @IR(failOn = IRNode.CALL, applyIf = {\"PrintIdealGraphFile\", \"\"})\n+    @IR(failOn = IRNode.CALL, applyIf = {\"UseTLAB\", \"\"})\n+    @IR(failOn = IRNode.CALL, applyIf = {\"\", \"true\"})\n+    @IR(failOn = IRNode.CALL, applyIf = {\"\", \"\"})\n+    @IR(failOn = IRNode.CALL, applyIf = {\" \", \" \"})\n+    public void applyIfEmptyValue() {}\n+\n+    @FailCount(5)\n+    @Test\n+    @IR(failOn = IRNode.CALL, applyIf = {\"SuspendRetryCount\", \"! 34\"})\n+    @IR(failOn = IRNode.CALL, applyIf = {\"SuspendRetryCount\", \"!== 34\"})\n+    @IR(failOn = IRNode.CALL, applyIf = {\"SuspendRetryCount\", \"<<= 34\"})\n+    @IR(failOn = IRNode.CALL, applyIf = {\"SuspendRetryCount\", \"=<34\"})\n+    @IR(failOn = IRNode.CALL, applyIf = {\"SuspendRetryCount\", \"<\"})\n+    public void applyIfFaultyComparator() {}\n+\n+    @FailCount(3)\n+    @Test\n+    @IR(failOn = IRNode.CALL, applyIfNot = {\"SuspendRetryCount\", \"50\", \"UseTLAB\", \"true\"})\n+    @IR(failOn = IRNode.CALL, applyIfNot = {\"SuspendRetryCount\", \"50\", \"UseTLAB\"})\n+    public void applyIfNotTooManyFlags() {}\n+\n+    @FailCount(2)\n+    @Test\n+    @IR(failOn = IRNode.CALL, applyIfNot = {\"SuspendRetryCount\"})\n+    @IR(failOn = IRNode.CALL, applyIfNot = {\"Bla\"})\n+    public void applyIfNotMissingValue() {}\n+\n+    @FailCount(2)\n+    @Test\n+    @IR(failOn = IRNode.CALL, applyIfNot = {\"PrintIdealGraphFilee\", \"true\"})\n+    @IR(failOn = IRNode.CALL, applyIfNot = {\"Bla\", \"foo\"})\n+    public void applyIfNotUnknownFlag() {}\n+\n+    @FailCount(5)\n+    @Test\n+    @IR(failOn = IRNode.CALL, applyIfNot = {\"PrintIdealGraphFile\", \"\"})\n+    @IR(failOn = IRNode.CALL, applyIfNot = {\"UseTLAB\", \"\"})\n+    @IR(failOn = IRNode.CALL, applyIfNot = {\"\", \"true\"})\n+    @IR(failOn = IRNode.CALL, applyIfNot = {\"\", \"\"})\n+    @IR(failOn = IRNode.CALL, applyIfNot = {\" \", \" \"})\n+    public void applyIfNotEmptyValue() {}\n+\n+    @FailCount(5)\n+    @Test\n+    @IR(failOn = IRNode.CALL, applyIfNot = {\"SuspendRetryCount\", \"! 34\"})\n+    @IR(failOn = IRNode.CALL, applyIfNot = {\"SuspendRetryCount\", \"!== 34\"})\n+    @IR(failOn = IRNode.CALL, applyIfNot = {\"SuspendRetryCount\", \"<<= 34\"})\n+    @IR(failOn = IRNode.CALL, applyIfNot = {\"SuspendRetryCount\", \"=<34\"})\n+    @IR(failOn = IRNode.CALL, applyIfNot = {\"SuspendRetryCount\", \"<\"})\n+    public void applyIfNotFaultyComparator() {}\n+\n+\n+    @FailCount(2)\n+    @Test\n+    @IR(failOn = IRNode.CALL, applyIfAnd = {\"SuspendRetryCount\", \"50\"})\n+    @IR(failOn = IRNode.CALL, applyIfAnd = {\"SuspendRetryCount\", \"51\", \"UseTLAB\"})\n+    public void applyIfAndNotEnoughFlags() {}\n+\n+    @FailCount(5)\n+    @Test\n+    @IR(failOn = IRNode.CALL, applyIfAnd = {\"SuspendRetryCount\"})\n+    @IR(failOn = IRNode.CALL, applyIfAnd = {\"SuspendRetryCount\", \"51\", \"UseTLAB\"})\n+    @IR(failOn = IRNode.CALL, applyIfAnd = {\"Bla\"})\n+    public void applyIfAndMissingValue() {}\n+\n+    @FailCount(3)\n+    @Test\n+    @IR(failOn = IRNode.CALL, applyIfAnd = {\"PrintIdealGraphFilee\", \"true\", \"SuspendRetryCount\", \"< 34\"})\n+    @IR(failOn = IRNode.CALL, applyIfAnd = {\"SuspendRetryCount\", \"!= 50\", \"Bla\", \"bla\", \"Bla2\", \"bla2\"})\n+    public void applyIfAndUnknownFlag() {}\n+\n+    @FailCount(18)\n+    @Test\n+    @IR(failOn = IRNode.CALL, applyIfAnd = {\"PrintIdealGraphFile\", \"\"})\n+    @IR(failOn = IRNode.CALL, applyIfAnd = {\"PrintIdealGraphFile\", \"\", \"PrintIdealGraphFile\", \"\"})\n+    @IR(failOn = IRNode.CALL, applyIfAnd = {\"UseTLAB\", \"\"})\n+    @IR(failOn = IRNode.CALL, applyIfAnd = {\"UseTLAB\", \"\", \"UseTLAB\", \"\"})\n+    @IR(failOn = IRNode.CALL, applyIfAnd = {\"\", \"true\"})\n+    @IR(failOn = IRNode.CALL, applyIfAnd = {\"\", \"true\", \"\", \"true\"})\n+    @IR(failOn = IRNode.CALL, applyIfAnd = {\"\", \"\"})\n+    @IR(failOn = IRNode.CALL, applyIfAnd = {\"\", \"\", \"\", \"\"})\n+    @IR(failOn = IRNode.CALL, applyIfAnd = {\" \", \" \", \" \", \" \"})\n+    public void applyIfAndEmptyValue() {}\n+\n+    @FailCount(20)\n+    @Test\n+    @IR(failOn = IRNode.CALL, applyIfAnd = {\"SuspendRetryCount\", \"! 34\"})\n+    @IR(failOn = IRNode.CALL, applyIfAnd = {\"SuspendRetryCount\", \"! 34\", \"SuspendRetryCount\", \"! 34\"})\n+    @IR(failOn = IRNode.CALL, applyIfAnd = {\"SuspendRetryCount\", \"!== 34\"})\n+    @IR(failOn = IRNode.CALL, applyIfAnd = {\"SuspendRetryCount\", \"!== 34\", \"SuspendRetryCount\", \"=== 34\"})\n+    @IR(failOn = IRNode.CALL, applyIfAnd = {\"SuspendRetryCount\", \"<<= 34\"})\n+    @IR(failOn = IRNode.CALL, applyIfAnd = {\"SuspendRetryCount\", \"<<= 34\", \"SuspendRetryCount\", \">>= 34\"})\n+    @IR(failOn = IRNode.CALL, applyIfAnd = {\"SuspendRetryCount\", \"=<34\"})\n+    @IR(failOn = IRNode.CALL, applyIfAnd = {\"SuspendRetryCount\", \"=<34\", \"SuspendRetryCount\", \"=<34\"})\n+    @IR(failOn = IRNode.CALL, applyIfAnd = {\"SuspendRetryCount\", \"<\"})\n+    @IR(failOn = IRNode.CALL, applyIfAnd = {\"SuspendRetryCount\", \"<\", \"SuspendRetryCount\", \"!=\"})\n+    public void applyIfAndFaultyComparator() {}\n+\n+    @FailCount(2)\n+    @Test\n+    @IR(failOn = IRNode.CALL, applyIfOr = {\"SuspendRetryCount\", \"50\"})\n+    @IR(failOn = IRNode.CALL, applyIfOr = {\"SuspendRetryCount\", \"51\", \"UseTLAB\"})\n+    public void applyIfOrNotEnoughFlags() {}\n+\n+    @FailCount(5)\n+    @Test\n+    @IR(failOn = IRNode.CALL, applyIfOr = {\"SuspendRetryCount\"})\n+    @IR(failOn = IRNode.CALL, applyIfOr = {\"SuspendRetryCount\", \"51\", \"UseTLAB\"})\n+    @IR(failOn = IRNode.CALL, applyIfOr = {\"Bla\"})\n+    public void applyIfOrMissingValue() {}\n+\n+    @FailCount(3)\n+    @Test\n+    @IR(failOn = IRNode.CALL, applyIfOr = {\"PrintIdealGraphFilee\", \"true\", \"SuspendRetryCount\", \"< 34\"})\n+    @IR(failOn = IRNode.CALL, applyIfOr = {\"SuspendRetryCount\", \"!= 50\", \"Bla\", \"bla\", \"Bla2\", \"bla2\"})\n+    public void applyIfOrUnknownFlag() {}\n+\n+    @FailCount(18)\n+    @Test\n+    @IR(failOn = IRNode.CALL, applyIfOr = {\"PrintIdealGraphFile\", \"\"})\n+    @IR(failOn = IRNode.CALL, applyIfOr = {\"PrintIdealGraphFile\", \"\", \"PrintIdealGraphFile\", \"\"})\n+    @IR(failOn = IRNode.CALL, applyIfOr = {\"UseTLAB\", \"\"})\n+    @IR(failOn = IRNode.CALL, applyIfOr = {\"UseTLAB\", \"\", \"UseTLAB\", \"\"})\n+    @IR(failOn = IRNode.CALL, applyIfOr = {\"\", \"true\"})\n+    @IR(failOn = IRNode.CALL, applyIfOr = {\"\", \"true\", \"\", \"true\"})\n+    @IR(failOn = IRNode.CALL, applyIfOr = {\"\", \"\"})\n+    @IR(failOn = IRNode.CALL, applyIfOr = {\"\", \"\", \"\", \"\"})\n+    @IR(failOn = IRNode.CALL, applyIfOr = {\" \", \" \", \" \", \" \"})\n+    public void applyIfOrEmptyValue() {}\n+\n+    @FailCount(20)\n+    @Test\n+    @IR(failOn = IRNode.CALL, applyIfOr = {\"SuspendRetryCount\", \"! 34\"})\n+    @IR(failOn = IRNode.CALL, applyIfOr = {\"SuspendRetryCount\", \"! 34\", \"SuspendRetryCount\", \"! 34\"})\n+    @IR(failOn = IRNode.CALL, applyIfOr = {\"SuspendRetryCount\", \"!== 34\"})\n+    @IR(failOn = IRNode.CALL, applyIfOr = {\"SuspendRetryCount\", \"!== 34\", \"SuspendRetryCount\", \"=== 34\"})\n+    @IR(failOn = IRNode.CALL, applyIfOr = {\"SuspendRetryCount\", \"<<= 34\"})\n+    @IR(failOn = IRNode.CALL, applyIfOr = {\"SuspendRetryCount\", \"<<= 34\", \"SuspendRetryCount\", \">>= 34\"})\n+    @IR(failOn = IRNode.CALL, applyIfOr = {\"SuspendRetryCount\", \"=<34\"})\n+    @IR(failOn = IRNode.CALL, applyIfOr = {\"SuspendRetryCount\", \"=<34\", \"SuspendRetryCount\", \"=<34\"})\n+    @IR(failOn = IRNode.CALL, applyIfOr = {\"SuspendRetryCount\", \"<\"})\n+    @IR(failOn = IRNode.CALL, applyIfOr = {\"SuspendRetryCount\", \"<\", \"SuspendRetryCount\", \"!=\"})\n+    public void applyIfOrFaultyComparator() {}\n+\n+\n+    @Test\n+    @FailCount(3)\n+    @IR(failOn = IRNode.CALL, applyIf = {\"SuspendRetryCount\", \"true\"})\n+    @IR(failOn = IRNode.CALL, applyIf = {\"SuspendRetryCount\", \"SomeString\"})\n+    @IR(failOn = IRNode.CALL, applyIf = {\"SuspendRetryCount\", \"48\"}) \/\/ valid\n+    @IR(failOn = IRNode.CALL, applyIf = {\"SuspendRetryCount\", \"48.5\"})\n+    public void wrongFlagValueLongFlag() {}\n+\n+    @Test\n+    @FailCount(3)\n+    @IR(failOn = IRNode.CALL, applyIf = {\"UseTLAB\", \"true\"}) \/\/ valid\n+    @IR(failOn = IRNode.CALL, applyIf = {\"UseTLAB\", \"SomeString\"})\n+    @IR(failOn = IRNode.CALL, applyIf = {\"UseTLAB\", \"48\"})\n+    @IR(failOn = IRNode.CALL, applyIf = {\"UseTLAB\", \"48.5\"})\n+    public void wrongFlagValueBooleanFlag() {}\n+\n+    @Test\n+    @FailCount(2)\n+    @IR(failOn = IRNode.CALL, applyIf = {\"CompileThresholdScaling\", \"true\"})\n+    @IR(failOn = IRNode.CALL, applyIf = {\"CompileThresholdScaling\", \"SomeString\"})\n+    @IR(failOn = IRNode.CALL, applyIf = {\"CompileThresholdScaling\", \"48\"}) \/\/ valid\n+    @IR(failOn = IRNode.CALL, applyIf = {\"CompileThresholdScaling\", \"48.5\"}) \/\/ valid\n+    public void wrongFlagValueDoubleFlag() {}\n+\n+    @Test\n+    @NoFail\n+    @IR(failOn = IRNode.CALL, applyIf = {\"ErrorFile\", \"true\"}) \/\/ valid\n+    @IR(failOn = IRNode.CALL, applyIf = {\"ErrorFile\", \"SomeString\"}) \/\/ valid\n+    @IR(failOn = IRNode.CALL, applyIf = {\"ErrorFile\", \"48\"}) \/\/ valid\n+    @IR(failOn = IRNode.CALL, applyIf = {\"ErrorFile\", \"48.5\"}) \/\/ valid\n+    public void anyValueForStringFlags() {}\n+}\n+\n+@ClassFail\n+class BadInnerClassTest {\n+\n+    class InnerClass {\n+        @Test\n+        public void noTestInInnerClass1() {}\n+\n+        @Test\n+        public void noTestInInnerClass2() {}\n+\n+        @Check(test = \"noTestInInnerClass2\")\n+        public void checkNoTestInInnerClass2() {}\n+\n+        @Test\n+        public void noTestInInnerClass3() {}\n+\n+        @Run(test = \"noTestInInnerClass3\")\n+        public void checkNoTestInInnerClass3() {}\n+    }\n+\n+\n+    static class StaticInnerClass {\n+        @Test\n+        public void noTestInInnerStaticClass1() {}\n+\n+        @Test\n+        public void noTestInStaticInnerClass2() {}\n+\n+        @Check(test = \"noTestInStaticInnerClass2\")\n+        public void checkNoTestInStaticInnerClass2() {}\n+\n+        @Test\n+        public void noTestInStaticInnerClass3() {}\n+\n+        @Run(test = \"noTestInStaticInnerClass3\")\n+        public void checkNoTestInStaticInnerClass3() {}\n+    }\n+}\n+\n+@ForceCompileClassInitializer\n+class BadCompileClassInitializer {\n+    static int iFld = 3;\n+\n+    @Test\n+    @ForceCompileClassInitializer\n+    public void test() {}\n+\n+    @ForceCompileClassInitializer\n+    public void helper() {}\n+}\n+\n+@ClassFail\n+@ForceCompileClassInitializer(CompLevel.SKIP)\n+class BadCompileClassInitializerHelper1 {\n+\n+}\n+\n+@ClassFail\n+@ForceCompileClassInitializer(CompLevel.WAIT_FOR_COMPILATION)\n+class BadCompileClassInitializerHelper2 {\n+\n+}\n+\n+@ClassFail\n+@ForceCompileClassInitializer\n+class BadCompileClassInitializerHelper3 {\n+    \/\/ no <clinit>\n+}\n+\n+class ClassNoDefaultConstructor {\n+    private ClassNoDefaultConstructor(int i) {\n+    }\n+}\n+\n+\/\/ Test specific annotation:\n+\/\/ All methods without such an annotation must occur in the violation messages.\n+@Retention(RetentionPolicy.RUNTIME)\n+@interface NoFail {}\n+\n+\/\/ Test specific annotation:\n+\/\/ Specify a fail count for a method without @NoFail. Use the value 0 if multiple methods are part of the same violation.\n+@Retention(RetentionPolicy.RUNTIME)\n+@interface FailCount {\n+    int value();\n+}\n+\n+\/\/ Class specific annotation:\n+\/\/ All classes with such an annotation have exactly one violation with the clas name in it.\n+@Retention(RetentionPolicy.RUNTIME)\n+@interface ClassFail {}\n+\n+class Violations {\n+    private final List<String> failedMethods = new ArrayList<>();\n+    private int violations;\n+\n+    public int getViolationCount() {\n+        return violations;\n+    }\n+\n+    public List<String> getFailedMethods() {\n+        return failedMethods;\n+    }\n+\n+    public void addFail(Method m, int count) {\n+        failedMethods.add(m.getName());\n+        violations += count;\n+    }\n+\n+    public void addFail(Class<?> c) {\n+        failedMethods.add(c.getName());\n+        violations += 1;\n+    }\n+}\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/tests\/TestBadFormat.java","additions":1011,"deletions":0,"binary":false,"changes":1011,"status":"added"},{"patch":"@@ -0,0 +1,1085 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.test.lib.hotspot.ir_framework.tests;\n+\n+import jdk.test.lib.hotspot.ir_framework.*;\n+\n+import java.lang.reflect.Method;\n+import java.util.Arrays;\n+import java.util.stream.Stream;\n+\n+\/*\n+ * @test\n+ * @requires vm.compiler2.enabled\n+ * @summary Test basics of the framework. This test runs directly the test VM which normally does not happen.\n+ * @library \/test\/lib\n+ * @build sun.hotspot.WhiteBox\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller sun.hotspot.WhiteBox\n+ * @run main\/othervm -Xbootclasspath\/a:. -XX:+IgnoreUnrecognizedVMOptions -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI\n+ *                   jdk.test.lib.hotspot.ir_framework.tests.TestBasics\n+ *\/\n+\n+public class TestBasics {\n+    private static boolean wasExecuted = false;\n+    private boolean lastToggleBoolean = true;\n+    private final static int[] executed = new int[100];\n+    private final static int[] executedOnce = new int[5];\n+    private long[] nonFloatingRandomNumbers = new long[10];\n+    private double[] floatingRandomNumbers = new double[10];\n+    private Boolean[] randomBooleans = new Boolean[64];\n+\n+    public static void main(String[] args) throws Exception {\n+        \/\/ Run on same VM to make this test easier as we are not interested in any output processing.\n+        Class<?> c = TestFramework.class; \/\/ Enable JTreg test to compile TestFramework\n+        Method runTestsOnSameVM = TestFrameworkExecution.class.getDeclaredMethod(\"runTestsOnSameVM\", Class.class);\n+        runTestsOnSameVM.setAccessible(true);\n+        runTestsOnSameVM.invoke(null, new Object[]{ null });\n+\n+        if (wasExecuted) {\n+            throw new RuntimeException(\"Executed non @Test method or a method that was not intended to be run\");\n+        }\n+        for (int i = 0; i < executed.length; i++) {\n+            int value = executed[i];\n+            if (value != TestFrameworkExecution.WARMUP_ITERATIONS + 1) {\n+                \/\/ Warmups + 1 C2 compiled invocation\n+                throw new RuntimeException(\"Test \" + i + \"  was executed \" + value + \" times instead stead of \"\n+                        + (TestFrameworkExecution.WARMUP_ITERATIONS + 1) + \" times.\" );\n+            }\n+        }\n+\n+        for (int value : executedOnce) {\n+            if (value != 1) {\n+                throw new RuntimeException(\"Check function should have been executed exactly once\");\n+            }\n+        }\n+    }\n+\n+    private void clearNonFloatingRandomNumbers() {\n+        nonFloatingRandomNumbers = new long[10];\n+    }\n+\n+    private void clearFloatingRandomNumbers() {\n+        floatingRandomNumbers = new double[10];\n+    }\n+\n+    private void clearRandomBooleans() {\n+        randomBooleans = new Boolean[64];\n+    }\n+\n+    \/\/ Base test, no arguments, directly invoked.\n+    @Test\n+    public void test() {\n+        executed[0]++;\n+    }\n+\n+    \/\/ Not a test\n+    public void noTest() {\n+        wasExecuted = true;\n+    }\n+\n+    \/\/ Not a test\n+    public void test2() {\n+        wasExecuted = true;\n+    }\n+\n+    \/\/ Can overload non- @Test\n+    public static void test2(int i) {\n+        wasExecuted = true;\n+    }\n+\n+    \/\/ Can overload a @Test if it is not a @Test itself.\n+    public static void test(double i) {\n+        wasExecuted = true;\n+    }\n+\n+    @Test\n+    public static void staticTest() {\n+        executed[1]++;\n+    }\n+\n+    @Test\n+    public final void finalTest() {\n+        executed[2]++;\n+    }\n+\n+    @Test\n+    public int returnValueTest() {\n+        executed[3]++;\n+        return 4;\n+    }\n+\n+    \/\/ Base test, with arguments, directly invoked.\n+    \/\/ Specify the argument values with @Arguments\n+    @Test\n+    @Arguments(Argument.DEFAULT)\n+    public void byteDefaultArgument(byte x) {\n+        executed[4]++;\n+        if (x != 0) {\n+            throw new RuntimeException(\"Must be 0\");\n+        }\n+    }\n+\n+    @Test\n+    @Arguments(Argument.DEFAULT)\n+    public void shortDefaultArgument(short x) {\n+        executed[5]++;\n+        if (x != 0) {\n+            throw new RuntimeException(\"Must be 0\");\n+        }\n+    }\n+\n+    @Test\n+    @Arguments(Argument.DEFAULT)\n+    public void intDefaultArgument(int x) {\n+        executed[6]++;\n+        if (x != 0) {\n+            throw new RuntimeException(\"Must be 0\");\n+        }\n+    }\n+\n+    @Test\n+    @Arguments(Argument.DEFAULT)\n+    public void longDefaultArgument(long x) {\n+        executed[7]++;\n+        if (x != 0L) {\n+            throw new RuntimeException(\"Must be 0\");\n+        }\n+    }\n+\n+    @Test\n+    @Arguments(Argument.DEFAULT)\n+    public void floatDefaultArgument(float x) {\n+        executed[8]++;\n+        if (x != 0.0f) {\n+            throw new RuntimeException(\"Must be 0.0\");\n+        }\n+    }\n+\n+    @Test\n+    @Arguments(Argument.DEFAULT)\n+    public void doubleDefaultArgument(double x) {\n+        executed[9]++;\n+        if (x != 0.0f) {\n+            throw new RuntimeException(\"Must be 0.0\");\n+        }\n+    }\n+\n+    @Test\n+    @Arguments(Argument.DEFAULT)\n+    public void charDefaultArgument(char x) {\n+        executed[10]++;\n+        if (x != '\\u0000') {\n+            throw new RuntimeException(\"Must be \\u0000\");\n+        }\n+    }\n+\n+    @Test\n+    @Arguments(Argument.DEFAULT)\n+    public void booleanDefaultArgument(boolean x) {\n+        executed[11]++;\n+        if (x) {\n+            throw new RuntimeException(\"Must be false\");\n+        }\n+    }\n+\n+    @Test\n+    @Arguments(Argument.DEFAULT)\n+    public void stringObjectDefaultArgument(String x) {\n+        executed[12]++;\n+        if (x == null || x.length() != 0) {\n+            throw new RuntimeException(\"Default string object must be non-null and having a length of zero\");\n+        }\n+    }\n+\n+    @Test\n+    @Arguments(Argument.DEFAULT)\n+    public void defaultObjectDefaultArgument(DefaultObject x) {\n+        executed[13]++;\n+        if (x == null || x.i != 4) {\n+            throw new RuntimeException(\"Default object must not be null and its i field must be 4\");\n+        }\n+    }\n+\n+    @Test\n+    @Arguments(Argument.NUMBER_42)\n+    public void byte42(byte x) {\n+        executed[14]++;\n+        if (x != 42) {\n+            throw new RuntimeException(\"Must be 42\");\n+        }\n+    }\n+\n+    @Test\n+    @Arguments(Argument.NUMBER_42)\n+    public void short42(short x) {\n+        executed[15]++;\n+        if (x != 42) {\n+            throw new RuntimeException(\"Must be 42\");\n+        }\n+    }\n+\n+    @Test\n+    @Arguments(Argument.NUMBER_42)\n+    public void int42(int x) {\n+        executed[16]++;\n+        if (x != 42) {\n+            throw new RuntimeException(\"Must be 42\");\n+        }\n+    }\n+\n+    @Test\n+    @Arguments(Argument.NUMBER_42)\n+    public void long42(long x) {\n+        executed[17]++;\n+        if (x != 42) {\n+            throw new RuntimeException(\"Must be 42\");\n+        }\n+    }\n+\n+    @Test\n+    @Arguments(Argument.NUMBER_42)\n+    public void float42(float x) {\n+        executed[18]++;\n+        if (x != 42.0) {\n+            throw new RuntimeException(\"Must be 42\");\n+        }\n+    }\n+\n+    @Test\n+    @Arguments(Argument.NUMBER_42)\n+    public void double42(double x) {\n+        executed[19]++;\n+        if (x != 42.0) {\n+            throw new RuntimeException(\"Must be 42\");\n+        }\n+    }\n+\n+    @Test\n+    @Arguments(Argument.FALSE)\n+    public void booleanFalse(boolean x) {\n+        executed[20]++;\n+        if (x) {\n+            throw new RuntimeException(\"Must be false\");\n+        }\n+    }\n+\n+    @Test\n+    @Arguments(Argument.TRUE)\n+    public void booleanTrue(boolean x) {\n+        executed[21]++;\n+        if (!x) {\n+            throw new RuntimeException(\"Must be true\");\n+        }\n+    }\n+\n+    @Test\n+    @Arguments(Argument.RANDOM_ONCE)\n+    public void randomByte(byte x) {\n+        executed[22]++;\n+    }\n+\n+    @Test\n+    @Arguments(Argument.RANDOM_ONCE)\n+    public void randomShort(short x) {\n+        executed[23]++;\n+    }\n+\n+    @Test\n+    @Arguments(Argument.RANDOM_ONCE)\n+    public void randomInt(int x) {\n+        executed[24]++;\n+    }\n+\n+    @Test\n+    @Arguments(Argument.RANDOM_ONCE)\n+    public void randomLong(long x) {\n+        executed[25]++;\n+    }\n+\n+    @Test\n+    @Arguments(Argument.RANDOM_ONCE)\n+    public void randomFloat(float x) {\n+        executed[26]++;\n+    }\n+\n+    @Test\n+    @Arguments(Argument.RANDOM_ONCE)\n+    public void randomDouble(double x) {\n+        executed[27]++;\n+    }\n+\n+    \/\/ Not executed\n+    public void randomNotExecutedTest(double x) {\n+        wasExecuted = true;\n+    }\n+\n+    @Test\n+    @Arguments(Argument.RANDOM_ONCE)\n+    public void randomBoolean(boolean x) {\n+        executed[28]++;\n+    }\n+\n+    @Test\n+    @Arguments(Argument.BOOLEAN_TOGGLE_FIRST_FALSE)\n+    public void booleanToggleFirstFalse(boolean x) {\n+        if (executed[29] == 0) {\n+            \/\/ First invocation\n+            if (x) {\n+                throw new RuntimeException(\"BOOLEAN_TOGGLE_FIRST_FALSE must be false on first invocation\");\n+            }\n+        } else if (x == lastToggleBoolean) {\n+            throw new RuntimeException(\"BOOLEAN_TOGGLE_FIRST_FALSE did not toggle\");\n+        }\n+        lastToggleBoolean = x;\n+        executed[29]++;\n+    }\n+\n+    @Test\n+    @Arguments(Argument.RANDOM_EACH)\n+    public void randomEachByte(byte x) {\n+        checkNonFloatingRandomNumber(x, executed[30]);\n+        executed[30]++;\n+    }\n+\n+    @Test\n+    @Arguments(Argument.RANDOM_EACH)\n+    public void randomEachShort(short x) {\n+        checkNonFloatingRandomNumber(x, executed[31]);\n+        executed[31]++;\n+    }\n+\n+    @Test\n+    @Arguments(Argument.RANDOM_EACH)\n+    public void randomEachInt(int x) {\n+        checkNonFloatingRandomNumber(x, executed[32]);\n+        executed[32]++;\n+    }\n+\n+    @Test\n+    @Arguments(Argument.RANDOM_EACH)\n+    public void randomEachLong(long x) {\n+        checkNonFloatingRandomNumber(x, executed[33]);\n+        executed[33]++;\n+    }\n+\n+    @Test\n+    @Arguments(Argument.RANDOM_EACH)\n+    public void randomEachChar(char x) {\n+        checkNonFloatingRandomNumber(x, executed[34]);\n+        executed[34]++;\n+    }\n+\n+    @Test\n+    @Arguments(Argument.RANDOM_EACH)\n+    public void randomEachFloat(float x) {\n+        checkFloatingRandomNumber(x, executed[35]);\n+        executed[35]++;\n+    }\n+\n+    @Test\n+    @Arguments(Argument.RANDOM_EACH)\n+    public void randomEachDouble(double x) {\n+        checkFloatingRandomNumber(x, executed[36]);\n+        executed[36]++;\n+    }\n+\n+    @Test\n+    @Arguments(Argument.RANDOM_EACH)\n+    public void randomEachBoolean(boolean x) {\n+        checkRandomBoolean(x, executed[37]);\n+        executed[37]++;\n+    }\n+\n+    private void checkNonFloatingRandomNumber(long x, int invocationCount) {\n+        int mod10 = invocationCount % 10;\n+        if (invocationCount > 0 && mod10 == 0) {\n+            \/\/ Not first invocation\n+            \/\/ Check the last 10 numbers and ensure that there are at least 2 different ones.\n+            \/\/ All numbers are equal? Very unlikely nd we should really consider to play the lottery...\n+            long first = nonFloatingRandomNumbers[0];\n+            if (Arrays.stream(nonFloatingRandomNumbers).allMatch(n -> n == first)) {\n+                throw new RuntimeException(\"RANDOM_EACH does not generate random integer numbers\");\n+            }\n+            clearNonFloatingRandomNumbers();\n+        }\n+        nonFloatingRandomNumbers[mod10] = x;\n+    }\n+\n+    private void checkFloatingRandomNumber(double x, int invocationCount) {\n+        int mod10 = invocationCount % 10;\n+        if (invocationCount > 0 && mod10 == 0) {\n+            \/\/ Not first invocation\n+            \/\/ Check the last 10 numbers and ensure that there are at least 2 different ones.\n+            \/\/ All numbers are equal? Very unlikely nd we should really consider to play the lottery...\n+            double first = floatingRandomNumbers[0];\n+            if (Arrays.stream(floatingRandomNumbers).allMatch(n -> n == first)) {\n+                throw new RuntimeException(\"RANDOM_EACH does not generate random floating point numbers\");\n+            }\n+            clearFloatingRandomNumbers();\n+        }\n+        floatingRandomNumbers[mod10] = x;\n+    }\n+\n+    private void checkRandomBoolean(boolean x, int invocationCount) {\n+        int mod64 = invocationCount % 64;\n+        if (invocationCount > 0 && mod64 == 0) {\n+            \/\/ Not first invocation\n+            \/\/ Check the last 64 booleans and ensure that there are at least one true and one false.\n+            \/\/ All booleans are equal? Very unlikely (chance of 2^64) and we should really consider\n+            \/\/ to play the lottery...\n+            if (Arrays.stream(randomBooleans).allMatch(b -> b == randomBooleans[0])) {\n+                throw new RuntimeException(\"RANDOM_EACH does not generate random booleans\");\n+            }\n+            clearRandomBooleans();\n+        }\n+        randomBooleans[mod64] = x;\n+    }\n+\n+\n+    @Test\n+    @Arguments(Argument.NUMBER_MINUS_42)\n+    public void byteMinus42(byte x) {\n+        executed[38]++;\n+        if (x != -42) {\n+            throw new RuntimeException(\"Must be -42\");\n+        }\n+    }\n+\n+    @Test\n+    @Arguments(Argument.NUMBER_MINUS_42)\n+    public void shortMinus42(short x) {\n+        executed[39]++;\n+        if (x != -42) {\n+            throw new RuntimeException(\"Must be -42\");\n+        }\n+    }\n+\n+    @Test\n+    @Arguments(Argument.NUMBER_MINUS_42)\n+    public void intMinus42(int x) {\n+        executed[40]++;\n+        if (x != -42) {\n+            throw new RuntimeException(\"Must be -42\");\n+        }\n+    }\n+\n+    @Test\n+    @Arguments(Argument.NUMBER_MINUS_42)\n+    public void longMinus42(long x) {\n+        executed[41]++;\n+        if (x != -42) {\n+            throw new RuntimeException(\"Must be -42\");\n+        }\n+    }\n+\n+    @Test\n+    @Arguments(Argument.NUMBER_MINUS_42)\n+    public void floatMinus42(float x) {\n+        executed[42]++;\n+        if (x != -42.0) {\n+            throw new RuntimeException(\"Must be -42\");\n+        }\n+    }\n+\n+    @Test\n+    @Arguments(Argument.NUMBER_MINUS_42)\n+    public void doubleMinus42(double x) {\n+        executed[43]++;\n+        if (x != -42.0) {\n+            throw new RuntimeException(\"Must be -42\");\n+        }\n+    }\n+\n+    @Test\n+    @Arguments(Argument.MIN)\n+    public void byteMin(byte x) {\n+        executed[79]++;\n+        if (x != Byte.MIN_VALUE) {\n+            throw new RuntimeException(\"Must be MIN_VALUE\");\n+        }\n+    }\n+\n+    @Test\n+    @Arguments(Argument.MIN)\n+    public void charMin(char x) {\n+        executed[80]++;\n+        if (x != Character.MIN_VALUE) {\n+            throw new RuntimeException(\"Must be MIN_VALUE\");\n+        }\n+    }\n+\n+    @Test\n+    @Arguments(Argument.MIN)\n+    public void shortMin(short x) {\n+        executed[81]++;\n+        if (x != Short.MIN_VALUE) {\n+            throw new RuntimeException(\"Must be MIN_VALUE\");\n+        }\n+    }\n+\n+    @Test\n+    @Arguments(Argument.MIN)\n+    public void intMin(int x) {\n+        executed[82]++;\n+        if (x != Integer.MIN_VALUE) {\n+            throw new RuntimeException(\"Must be MIN_VALUE\");\n+        }\n+    }\n+\n+    @Test\n+    @Arguments(Argument.MIN)\n+    public void longMin(long x) {\n+        executed[83]++;\n+        if (x != Long.MIN_VALUE) {\n+            throw new RuntimeException(\"Must be MIN_VALUE\");\n+        }\n+    }\n+\n+    @Test\n+    @Arguments(Argument.MIN)\n+    public void floatMin(float x) {\n+        executed[84]++;\n+        if (x != Float.MIN_VALUE) {\n+            throw new RuntimeException(\"Must be MIN_VALUE\");\n+        }\n+    }\n+\n+    @Test\n+    @Arguments(Argument.MIN)\n+    public void doubleMin(double x) {\n+        executed[85]++;\n+        if (x != Double.MIN_VALUE) {\n+            throw new RuntimeException(\"Must be MIN_VALUE\");\n+        }\n+    }\n+\n+    @Test\n+    @Arguments(Argument.MAX)\n+    public void byteMax(byte x) {\n+        executed[86]++;\n+        if (x != Byte.MAX_VALUE) {\n+            throw new RuntimeException(\"Must be MAX_VALUE\");\n+        }\n+    }\n+\n+    @Test\n+    @Arguments(Argument.MAX)\n+    public void charMax(char x) {\n+        executed[87]++;\n+        if (x != Character.MAX_VALUE) {\n+            throw new RuntimeException(\"Must be MAX_VALUE\");\n+        }\n+    }\n+\n+    @Test\n+    @Arguments(Argument.MAX)\n+    public void shortMax(short x) {\n+        executed[88]++;\n+        if (x != Short.MAX_VALUE) {\n+            throw new RuntimeException(\"Must be MAX_VALUE\");\n+        }\n+    }\n+\n+    @Test\n+    @Arguments(Argument.MAX)\n+    public void intMax(int x) {\n+        executed[89]++;\n+        if (x != Integer.MAX_VALUE) {\n+            throw new RuntimeException(\"Must be MAX_VALUE\");\n+        }\n+    }\n+\n+    @Test\n+    @Arguments(Argument.MAX)\n+    public void longMax(long x) {\n+        executed[90]++;\n+        if (x != Long.MAX_VALUE) {\n+            throw new RuntimeException(\"Must be MAX_VALUE\");\n+        }\n+    }\n+\n+    @Test\n+    @Arguments(Argument.MAX)\n+    public void floatMax(float x) {\n+        executed[91]++;\n+        if (x != Float.MAX_VALUE) {\n+            throw new RuntimeException(\"Must be MAX_VALUE\");\n+        }\n+    }\n+\n+    @Test\n+    @Arguments(Argument.MAX)\n+    public void doubleMax(double x) {\n+        executed[78]++;\n+        if (x != Double.MAX_VALUE) {\n+            throw new RuntimeException(\"Must be MAX_VALUE\");\n+        }\n+    }\n+\n+    @Test\n+    @Arguments({Argument.DEFAULT, Argument.DEFAULT})\n+    public void twoArgsDefault1(byte x, short y) {\n+        executed[44]++;\n+        if (x != 0 || y != 0) {\n+            throw new RuntimeException(\"Both must be 0\");\n+        }\n+    }\n+\n+    @Test\n+    @Arguments({Argument.DEFAULT, Argument.DEFAULT})\n+    public void twoArgsDefault2(int x, short y) {\n+        executed[45]++;\n+        if (x != 0 || y != 0) {\n+            throw new RuntimeException(\"Both must be 0\");\n+        }\n+    }\n+\n+    @Test\n+    @Arguments({Argument.DEFAULT, Argument.DEFAULT})\n+    public void twoArgsDefault3(short x, long y) {\n+        executed[46]++;\n+        if (x != 0 || y != 0) {\n+            throw new RuntimeException(\"Both must be 0\");\n+        }\n+    }\n+\n+    @Test\n+    @Arguments({Argument.DEFAULT, Argument.DEFAULT})\n+    public void twoArgsDefault4(float x, boolean y) {\n+        executed[47]++;\n+        if (x != 0.0 || y) {\n+            throw new RuntimeException(\"Must be 0 and false\");\n+        }\n+    }\n+\n+    @Test\n+    @Arguments({Argument.DEFAULT, Argument.DEFAULT})\n+    public void twoArgsDefault5(boolean x, char y) {\n+        executed[48]++;\n+        if (x || y != '\\u0000') {\n+            throw new RuntimeException(\"Must be false and \\u0000\");\n+        }\n+    }\n+\n+    @Test\n+    @Arguments({Argument.DEFAULT, Argument.DEFAULT})\n+    public void twoArgsDefault6(char x, byte y) {\n+        executed[49]++;\n+        if (x != '\\u0000' || y != 0) {\n+            throw new RuntimeException(\"Must be\\u0000 and 0\");\n+        }\n+    }\n+\n+    @Test\n+    @Arguments({Argument.RANDOM_ONCE, Argument.RANDOM_ONCE})\n+    public void twoArgsRandomOnce(char x, byte y) {\n+        executed[50]++;\n+    }\n+\n+    @Test\n+    @Arguments({Argument.RANDOM_ONCE, Argument.RANDOM_ONCE,\n+                Argument.RANDOM_ONCE, Argument.RANDOM_ONCE,\n+                Argument.RANDOM_ONCE, Argument.RANDOM_ONCE,\n+                Argument.RANDOM_ONCE, Argument.RANDOM_ONCE})\n+    public void checkRandomOnceDifferentArgs(int a, int b, int c, int d, int e, int f, int g, int h) {\n+        if (Stream.of(a, b, c, d, e, f, g, h).allMatch(i -> i == a)) {\n+            throw new RuntimeException(\"RANDOM_ONCE does not produce random values for different arguments\");\n+        }\n+        executed[51]++;\n+    }\n+\n+    @Test\n+    @Arguments({Argument.RANDOM_ONCE, Argument.RANDOM_ONCE,\n+                Argument.RANDOM_ONCE, Argument.RANDOM_ONCE,\n+                Argument.RANDOM_ONCE, Argument.RANDOM_ONCE,\n+                Argument.RANDOM_ONCE, Argument.RANDOM_ONCE})\n+    public void checkMixedRandoms1(byte a, short b, int c, long d, char e, boolean f, float g, double h) {\n+        executed[52]++;\n+    }\n+\n+    @Test\n+    @Arguments({Argument.RANDOM_EACH, Argument.RANDOM_EACH,\n+                Argument.RANDOM_EACH, Argument.RANDOM_EACH,\n+                Argument.RANDOM_EACH, Argument.RANDOM_EACH,\n+                Argument.RANDOM_EACH, Argument.RANDOM_EACH})\n+    public void checkMixedRandoms2(byte a, short b, int c, long d, char e, boolean f, float g, double h) {\n+        executed[53]++;\n+    }\n+\n+    @Test\n+    @Arguments({Argument.RANDOM_ONCE, Argument.RANDOM_ONCE,\n+                Argument.RANDOM_EACH, Argument.RANDOM_EACH,\n+                Argument.RANDOM_ONCE, Argument.RANDOM_EACH,\n+                Argument.RANDOM_EACH, Argument.RANDOM_ONCE})\n+    public void checkMixedRandoms3(byte a, short b, int c, long d, char e, boolean f, float g, double h) {\n+        executed[54]++;\n+    }\n+\n+    @Test\n+    @Arguments({Argument.NUMBER_42, Argument.NUMBER_42,\n+                Argument.NUMBER_42, Argument.NUMBER_42,\n+                Argument.NUMBER_42, Argument.NUMBER_42})\n+    public void check42Mix1(byte a, short b, int c, long d, float e, double f) {\n+        if (a != 42 || b != 42 || c != 42 || d != 42 || e != 42.0 || f != 42.0) {\n+            throw new RuntimeException(\"Must all be 42\");\n+        }\n+        executed[55]++;\n+    }\n+\n+    @Test\n+    @Arguments({Argument.NUMBER_MINUS_42, Argument.NUMBER_MINUS_42,\n+                Argument.NUMBER_MINUS_42, Argument.NUMBER_MINUS_42,\n+                Argument.NUMBER_MINUS_42, Argument.NUMBER_MINUS_42})\n+    public void check42Mix2(byte a, short b, int c, long d, float e, double f) {\n+        if (a != -42 || b != -42 || c != -42 || d != -42 || e != -42.0 || f != -42.0) {\n+            throw new RuntimeException(\"Must all be -42\");\n+        }\n+        executed[56]++;\n+    }\n+\n+    @Test\n+    @Arguments({Argument.NUMBER_MINUS_42, Argument.NUMBER_42,\n+                Argument.NUMBER_MINUS_42, Argument.NUMBER_MINUS_42,\n+                Argument.NUMBER_42, Argument.NUMBER_MINUS_42})\n+    public void check42Mix3(byte a, short b, int c, long d, float e, double f) {\n+        if (a != -42 || b != 42 || c != -42 || d != -42 || e != 42.0 || f != -42.0) {\n+            throw new RuntimeException(\"Do not match the right 42 version\");\n+        }\n+        executed[57]++;\n+    }\n+\n+\n+    @Test\n+    @Arguments(Argument.BOOLEAN_TOGGLE_FIRST_TRUE)\n+    public void booleanToggleFirstTrue(boolean x) {\n+        if (executed[58] == 0) {\n+            \/\/ First invocation\n+            if (!x) {\n+                throw new RuntimeException(\"BOOLEAN_TOGGLE_FIRST_FALSE must be false on first invocation\");\n+            }\n+        } else if (x == lastToggleBoolean) {\n+            throw new RuntimeException(\"BOOLEAN_TOGGLE_FIRST_FALSE did not toggle\");\n+        }\n+        lastToggleBoolean = x;\n+        executed[58]++;\n+    }\n+\n+    @Test\n+    @Arguments({Argument.BOOLEAN_TOGGLE_FIRST_FALSE, Argument.BOOLEAN_TOGGLE_FIRST_TRUE})\n+    public void checkTwoToggles(boolean b1, boolean b2) {\n+        if (executed[59] == 0) {\n+            \/\/ First invocation\n+            if (b1 || !b2) {\n+                throw new RuntimeException(\"BOOLEAN_TOGGLES have wrong initial value\");\n+            }\n+        } else if (b1 == b2) {\n+            throw new RuntimeException(\"Boolean values must be different\");\n+        } else if (b1 == lastToggleBoolean) {\n+            throw new RuntimeException(\"Booleans did not toggle\");\n+        }\n+        lastToggleBoolean = b1;\n+        executed[59]++;\n+    }\n+\n+    @Test\n+    @Arguments({Argument.BOOLEAN_TOGGLE_FIRST_FALSE, Argument.FALSE,\n+                Argument.TRUE, Argument.BOOLEAN_TOGGLE_FIRST_TRUE})\n+    public void booleanMix(boolean b1, boolean b2, boolean b3, boolean b4) {\n+        if (executed[60] == 0) {\n+            \/\/ First invocation\n+            if (b1 || b2 || !b3 || !b4) {\n+                throw new RuntimeException(\"BOOLEAN_TOGGLES have wrong initial value\");\n+            }\n+        } else if (b1 == b4) {\n+            throw new RuntimeException(\"Boolean values must be different\");\n+        } else if (b1 == lastToggleBoolean) {\n+            throw new RuntimeException(\"Booleans did not toggle\");\n+        }\n+        lastToggleBoolean = b1;\n+        executed[60]++;\n+    }\n+\n+    \/*\n+     * Checked tests.\n+     *\/\n+\n+    @Test\n+    public int testCheck() {\n+        executed[63]++;\n+        return 1;\n+    }\n+\n+    \/\/ Checked test. Check invoked after invoking \"testCheck\". Perform some more things after invocation.\n+    @Check(test = \"testCheck\")\n+    public void checkTestCheck() {\n+        executed[64]++; \/\/ Executed on each invocation\n+    }\n+\n+    @Test\n+    public int testCheckReturn() {\n+        executed[65]++;\n+        return 2;\n+    }\n+\n+    \/\/ Checked test with return value. Perform checks on it.\n+    @Check(test = \"testCheckReturn\")\n+    public void checkTestCheckReturn(int returnValue) {\n+        if (returnValue != 2) {\n+            throw new RuntimeException(\"Must be 2\");\n+        }\n+        executed[66]++; \/\/ Executed on each invocation\n+    }\n+\n+    @Test\n+    @Arguments(Argument.NUMBER_42)\n+    public short testCheckWithArgs(short x) {\n+        executed[94]++;\n+        return x;\n+    }\n+\n+    @Check(test = \"testCheckWithArgs\")\n+    public void checkTestCheckWithArgs(short returnValue) {\n+        if (returnValue != 42) {\n+            throw new RuntimeException(\"Must be 42\");\n+        }\n+        executed[95]++; \/\/ Executed on each invocation\n+    }\n+\n+    @Test\n+    public int testCheckTestInfo() {\n+        executed[67]++;\n+        return 3;\n+    }\n+\n+    \/\/ Checked test with info object about test.\n+    @Check(test = \"testCheckTestInfo\")\n+    public void checkTestCheckTestInfo(TestInfo testInfo) {\n+        executed[68]++; \/\/ Executed on each invocation\n+    }\n+\n+\n+    @Test\n+    public int testCheckBoth() {\n+        executed[69]++;\n+        return 4;\n+    }\n+\n+    \/\/ Checked test with return value and info object about test.\n+    @Check(test = \"testCheckBoth\")\n+    public void checkTestCheckTestInfo(int returnValue, TestInfo testInfo) {\n+        if (returnValue != 4) {\n+            throw new RuntimeException(\"Must be 4\");\n+        }\n+        executed[70]++; \/\/ Executed on each invocation\n+    }\n+\n+    @Test\n+    public int testCheckOnce() {\n+        executed[71]++;\n+        return 1;\n+    }\n+\n+    \/\/ Check method only invoked once after method is compiled after warm up.\n+    @Check(test = \"testCheckOnce\", when = CheckAt.COMPILED)\n+    public void checkTestCheckOnce() {\n+        executedOnce[0]++; \/\/ Executed once\n+    }\n+\n+    @Test\n+    public int testCheckReturnOnce() {\n+        executed[72]++;\n+        return 2;\n+    }\n+\n+    @Check(test = \"testCheckReturnOnce\", when = CheckAt.COMPILED)\n+    public void checkTestCheckReturnOnce(int returnValue) {\n+        if (returnValue != 2) {\n+            throw new RuntimeException(\"Must be 2\");\n+        }\n+        executedOnce[1]++; \/\/ Executed once\n+    }\n+\n+    @Test\n+    public int testCheckTestInfoOnce() {\n+        executed[73]++;\n+        return 3;\n+    }\n+\n+    @Check(test = \"testCheckTestInfoOnce\", when = CheckAt.COMPILED)\n+    public void checkTestCheckTestInfoOnce(TestInfo testInfo) {\n+        executedOnce[2]++; \/\/ Executed once\n+    }\n+\n+    @Test\n+    public int testCheckBothOnce() {\n+        executed[74]++;\n+        return 4;\n+    }\n+\n+    @Check(test = \"testCheckBothOnce\", when = CheckAt.COMPILED)\n+    public void checkTestCheckBothOnce(int returnValue, TestInfo testInfo) {\n+        if (returnValue != 4) {\n+            throw new RuntimeException(\"Must be 4\");\n+        }\n+        executedOnce[3]++; \/\/ Executed once\n+    }\n+\n+    @Test\n+    public void sameName() {\n+        executed[76]++;\n+    }\n+\n+    \/\/ Allowed to overload test method if not test method itself\n+    public void sameName(boolean a) {\n+        wasExecuted = true;\n+    }\n+\n+    \/\/ Allowed to overload test method if not test method itself\n+    @Check(test = \"sameName\")\n+    public void sameName(TestInfo info) {\n+        executed[77]++;\n+    }\n+\n+\n+    \/*\n+     * Custom run tests.\n+     *\/\n+\n+    @Test\n+    public void sameName2() {\n+        executed[92]++;\n+    }\n+\n+    \/\/ Allowed to overload test method if not test method itself\n+    @Run(test = \"sameName2\")\n+    public void sameName2(RunInfo info) {\n+        executed[93]++;\n+        sameName2();\n+    }\n+\n+    @Test\n+    public void testRun() {\n+        executed[61]++;\n+    }\n+\n+    \/\/ Custom run test. This method is invoked each time instead of @Test method. This method responsible for calling\n+    \/\/ the @Test method. @Test method is compiled after warm up. This is similar to the verifiers in the old Valhalla framework.\n+    @Run(test = \"testRun\")\n+    public void runTestRun(RunInfo info) {\n+        testRun();\n+    }\n+\n+    @Test\n+    public void testRunNoTestInfo(int i) { \/\/ Argument allowed when run by @Run\n+        executed[62]++;\n+    }\n+\n+    @Run(test = \"testRunNoTestInfo\")\n+    public void runTestRunNoTestInfo() {\n+        testRunNoTestInfo(3);\n+    }\n+\n+    @Test\n+    public void testNotRun() {\n+        wasExecuted = true;\n+    }\n+\n+    @Run(test = \"testNotRun\")\n+    public void runTestNotRun() {\n+        \/\/ Do not execute the test. Pointless but need to test that as well.\n+    }\n+\n+    @Test\n+    public void testRunOnce() {\n+        executedOnce[4]++;\n+    }\n+\n+    \/\/ Custom run test that is only invoked once. There is no warm up and no compilation. This method is responsible\n+    \/\/ for triggering compilation.\n+    @Run(test = \"testRunOnce\", mode = RunMode.STANDALONE)\n+    public void runTestRunOnce(RunInfo info) {\n+        testRunOnce();\n+    }\n+\n+    @Test\n+    public void testRunOnce2() {\n+        executed[75]++;\n+    }\n+\n+    @Run(test = \"testRunOnce2\", mode = RunMode.STANDALONE)\n+    public void runTestRunOnce2(RunInfo info) {\n+        for (int i = 0; i < TestFrameworkExecution.WARMUP_ITERATIONS + 1; i++) {\n+            testRunOnce2();\n+        }\n+    }\n+\n+    @Test\n+    public void testRunMultiple() {\n+        executed[96]++;\n+    }\n+\n+    @Test\n+    public void testRunMultiple2() {\n+        executed[97]++;\n+    }\n+\n+    @Test\n+    public void testRunMultipleNotExecuted() {\n+        wasExecuted = true;\n+    }\n+\n+    @Run(test = {\"testRunMultiple\", \"testRunMultiple2\", \"testRunMultipleNotExecuted\"})\n+    public void runTestRunMultiple() {\n+        testRunMultiple();\n+        testRunMultiple2();\n+    }\n+\n+\n+    @Test\n+    public void testRunMultiple3() {\n+        executed[98]++;\n+    }\n+\n+    @Test\n+    public void testRunMultiple4() {\n+        executed[99]++;\n+    }\n+\n+    @Test\n+    public void testRunMultipleNotExecuted2() {\n+        wasExecuted = true;\n+    }\n+\n+    @Run(test = {\"testRunMultiple3\", \"testRunMultiple4\", \"testRunMultipleNotExecuted2\"}, mode = RunMode.STANDALONE)\n+    public void runTestRunMultipl2(RunInfo info) {\n+        for (int i = 0; i < TestFrameworkExecution.WARMUP_ITERATIONS + 1; i++) {\n+            testRunMultiple3();\n+            testRunMultiple4();\n+        }\n+    }\n+}\n+\n+class DefaultObject {\n+    int i = 4;\n+}\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/tests\/TestBasics.java","additions":1085,"deletions":0,"binary":false,"changes":1085,"status":"added"},{"patch":"@@ -0,0 +1,221 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.test.lib.hotspot.ir_framework.tests;\n+\n+import jdk.test.lib.hotspot.ir_framework.*;\n+import jdk.test.lib.Asserts;\n+\n+import java.lang.reflect.Method;\n+\n+\/*\n+ * @test\n+ * @summary Test if compilation levels are used correctly in the framework.\n+ *          This test runs directly the test VM which normally does not happen.\n+ * @library \/test\/lib\n+ * @build sun.hotspot.WhiteBox\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller sun.hotspot.WhiteBox\n+ * @run main\/othervm -Xbootclasspath\/a:. -XX:+IgnoreUnrecognizedVMOptions -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI\n+ *                   jdk.test.lib.hotspot.ir_framework.tests.TestCompLevels\n+ *\/\n+\n+public class TestCompLevels {\n+    static int[] testExecuted = new int[5];\n+\n+    public static void main(String[] args) throws Exception {\n+        Method runTestsOnSameVM = TestFrameworkExecution.class.getDeclaredMethod(\"runTestsOnSameVM\", Class.class);\n+        runTestsOnSameVM.setAccessible(true);\n+        runTestsOnSameVM.invoke(null, new Object[]{null});\n+        for (int i = 0; i < testExecuted.length; i++) {\n+            int value = testExecuted[i];\n+            if (value != TestFrameworkExecution.WARMUP_ITERATIONS + 1) {\n+                \/\/ Warmups + 1 compiled invocation\n+                throw new RuntimeException(\"Test \" + i + \"  was executed \" + value + \" times stead of \"\n+                                                   + TestFrameworkExecution.WARMUP_ITERATIONS + 1 + \" times.\" );\n+            }\n+        }\n+        TestFramework framework = new TestFramework(TestNoTiered.class);\n+        framework.setDefaultWarmup(10).addFlags(\"-XX:-TieredCompilation\").start();\n+        framework = new TestFramework(TestNoTiered.class);\n+        framework.setDefaultWarmup(10).addScenarios(new Scenario(0, \"-XX:-TieredCompilation\")).start();\n+        framework = new TestFramework(TestStopAtLevel1.class);\n+        framework.setDefaultWarmup(10).addFlags(\"-XX:TieredStopAtLevel=1\").start();\n+        framework = new TestFramework(TestStopAtLevel1.class);\n+        framework.setDefaultWarmup(10).addScenarios(new Scenario(0, \"-XX:TieredStopAtLevel=1\")).start();\n+    }\n+\n+    @Test(compLevel = CompLevel.C1)\n+    public void testC1() {\n+        testExecuted[0]++;\n+    }\n+\n+    @Check(test = \"testC1\", when = CheckAt.COMPILED)\n+    public void checkTestC1(TestInfo info) {\n+        TestFramework.assertCompiledAtLevel(info.getTest(), CompLevel.C1);\n+    }\n+\n+    @Test(compLevel = CompLevel.C1_LIMITED_PROFILE)\n+    public void testC1Limited() {\n+        testExecuted[1]++;\n+    }\n+\n+    @Check(test = \"testC1Limited\", when = CheckAt.COMPILED)\n+    public void checkTestLimited(TestInfo info) {\n+        TestFramework.assertCompiledAtLevel(info.getTest(), CompLevel.C1_LIMITED_PROFILE);\n+    }\n+\n+    @Test(compLevel = CompLevel.C1_FULL_PROFILE)\n+    public void testC1Full() {\n+        testExecuted[2]++;\n+    }\n+\n+    @Check(test = \"testC1Full\", when = CheckAt.COMPILED)\n+    public void checkTestC1Full(TestInfo info) {\n+        TestFramework.assertCompiledAtLevel(info.getTest(), CompLevel.C1_FULL_PROFILE);\n+    }\n+\n+    @Test(compLevel = CompLevel.C2)\n+    public void testC2() {\n+        testExecuted[3]++;\n+    }\n+\n+    @Check(test = \"testC2\", when = CheckAt.COMPILED)\n+    public void checkTestC2(TestInfo info) {\n+        TestFramework.assertCompiledAtLevel(info.getTest(), CompLevel.C2);\n+    }\n+\n+    @Test(compLevel = CompLevel.SKIP)\n+    public void testSkip() {\n+        testExecuted[4]++; \/\/ Executed by eventually not compiled by framework\n+    }\n+}\n+\n+class TestNoTiered {\n+    @Test(compLevel = CompLevel.C1)\n+    public void level1() {\n+    }\n+\n+    @Check(test = \"level1\")\n+    public void check1(TestInfo info) {\n+        TestFramework.assertNotCompiled(info.getTest()); \/\/ Never compiled without C1\n+    }\n+\n+    @Test(compLevel = CompLevel.C1_LIMITED_PROFILE)\n+    public void level2() {\n+    }\n+\n+    @Check(test = \"level2\")\n+    public void check2(TestInfo info) {\n+        TestFramework.assertNotCompiled(info.getTest()); \/\/ Never compiled without C1\n+    }\n+\n+    @Test(compLevel = CompLevel.C1_FULL_PROFILE)\n+    public void level3() {\n+    }\n+\n+    @Check(test = \"level3\")\n+    public void check3(TestInfo info) {\n+        TestFramework.assertNotCompiled(info.getTest()); \/\/ Never compiled without C1\n+    }\n+\n+    @Test(compLevel = CompLevel.C2)\n+    public void level4() {\n+    }\n+\n+    @Check(test = \"level4\")\n+    public void check4(TestInfo info) {\n+        if (info.isWarmUp()) {\n+            TestFramework.assertNotCompiled(info.getTest()); \/\/ Never compiled without C1\n+        } else {\n+            if (TestFramework.isC1Compiled(info.getTest())) {\n+                throw new RuntimeException(\"Cannot be compiled with C1\"); \/\/ Never compiled without C1\n+            }\n+            TestFramework.assertCompiledByC2(info.getTest());\n+        }\n+    }\n+\n+    @Test(compLevel = CompLevel.SKIP)\n+    public void skip() {\n+    }\n+\n+    @Check(test = \"skip\")\n+    public void checkSkip(TestInfo info) {\n+        TestFramework.assertNotCompiled(info.getTest()); \/\/ Never compiled\n+    }\n+}\n+\n+class TestStopAtLevel1 {\n+    @Test(compLevel = CompLevel.C1)\n+    public int level1() {\n+        return 34;\n+    }\n+\n+    @Check(test = \"level1\")\n+    public void check1(int result, TestInfo info) {\n+        if (info.isWarmUp()) {\n+            TestFramework.assertNotCompiled(info.getTest()); \/\/ Not compiled yet\n+        } else {\n+            TestFramework.assertCompiledByC1(info.getTest());\n+            if (TestFramework.isC2Compiled(info.getTest())) {\n+                throw new RuntimeException(\"Cannot be compiled by C2\");\n+            }\n+            System.out.println(\"TestStopAtLevel1=\" + result);\n+        }\n+    }\n+\n+    @Test(compLevel = CompLevel.C1_LIMITED_PROFILE)\n+    public void level2() {\n+    }\n+\n+    @Check(test = \"level2\")\n+    public void check2(TestInfo info) {\n+        TestFramework.assertNotCompiled(info.getTest()); \/\/ Never with level 2\n+    }\n+\n+    @Test(compLevel = CompLevel.C1_FULL_PROFILE)\n+    public void level3() {\n+    }\n+\n+    @Check(test = \"level3\")\n+    public void check3(TestInfo info) {\n+        TestFramework.assertNotCompiled(info.getTest()); \/\/ Never with level 3\n+    }\n+\n+    @Test(compLevel = CompLevel.C2)\n+    public void level4() {\n+    }\n+\n+    @Check(test = \"level4\")\n+    public void check4(TestInfo info) {\n+        TestFramework.assertNotCompiled(info.getTest()); \/\/ Never with level 4\n+    }\n+\n+    @Test(compLevel = CompLevel.SKIP)\n+    public void skip() {\n+    }\n+\n+    @Check(test = \"skip\")\n+    public void checkSkip(TestInfo info) {\n+        TestFramework.assertNotCompiled(info.getTest()); \/\/ Never compiled\n+    }\n+}\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/tests\/TestCompLevels.java","additions":221,"deletions":0,"binary":false,"changes":221,"status":"added"},{"patch":"@@ -0,0 +1,387 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.test.lib.hotspot.ir_framework.tests;\n+\n+import jdk.test.lib.hotspot.ir_framework.*;\n+import jdk.test.lib.Asserts;\n+import sun.hotspot.WhiteBox;\n+\n+import java.lang.reflect.Method;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+\n+\/*\n+ * @test\n+ * @requires vm.debug == true & vm.compMode != \"Xint\" & vm.compiler2.enabled\n+ * @summary Test if compilation control annotaions are handled correctly in the framework.\n+ *          This test runs directly the test VM which normally does not happen.\n+ * @library \/test\/lib\n+ * @build sun.hotspot.WhiteBox\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller sun.hotspot.WhiteBox\n+ * @run main\/othervm -Xbootclasspath\/a:. -XX:+IgnoreUnrecognizedVMOptions -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI\n+ *                   jdk.test.lib.hotspot.ir_framework.tests.TestControls\n+ *\/\n+\n+public class TestControls {\n+    static int[] executed = new int[15];\n+    static boolean wasExecuted = false;\n+    static final WhiteBox WHITE_BOX = WhiteBox.getWhiteBox();\n+\n+    public int iFld;\n+\n+    public static void main(String[] args) throws Exception {\n+        Method runTestsOnSameVM = TestFrameworkExecution.class.getDeclaredMethod(\"runTestsOnSameVM\", Class.class);\n+        runTestsOnSameVM.setAccessible(true);\n+        runTestsOnSameVM.invoke(null, new Object[]{ null });\n+        final int defaultIterations = TestFrameworkExecution.WARMUP_ITERATIONS + 1;\n+        Asserts.assertEQ(executed[0], 1001);\n+        Asserts.assertEQ(executed[1], 101);\n+        Asserts.assertEQ(executed[2], 10000);\n+        Asserts.assertEQ(executed[3], 10000);\n+        Asserts.assertEQ(executed[4], defaultIterations);\n+        Asserts.assertEQ(executed[5], defaultIterations);\n+        Asserts.assertEQ(executed[6], 5001);\n+        Asserts.assertEQ(executed[7], 5001);\n+        Asserts.assertEQ(executed[8], 1);\n+        Asserts.assertEQ(executed[9], 5000);\n+        Asserts.assertEQ(executed[10], 1);\n+        Asserts.assertEQ(executed[11], 2);\n+        Asserts.assertEQ(executed[12], 1);\n+        Asserts.assertEQ(executed[13], 1);\n+        Asserts.assertFalse(wasExecuted);\n+        final long started = System.currentTimeMillis();\n+        long elapsed = 0;\n+        Method overloadDouble = TestControls.class.getDeclaredMethod(\"overload\", double.class);\n+        Method overloadInt = TestControls.class.getDeclaredMethod(\"overload\", int.class);\n+        while (!(TestFramework.isC2Compiled(overloadInt) && TestFramework.isCompiledAtLevel(overloadDouble, CompLevel.C1_LIMITED_PROFILE)) && elapsed < 5000) {\n+            elapsed = System.currentTimeMillis() - started;\n+        }\n+        TestFramework.assertCompiledAtLevel(TestControls.class.getDeclaredMethod(\"overload\", double.class), CompLevel.C1_LIMITED_PROFILE);\n+        TestFramework.assertCompiledByC2(TestControls.class.getDeclaredMethod(\"overload\", int.class));\n+\n+        TestFramework framework = new TestFramework(ClassInitializerTest.class);\n+        framework.addFlags(\"-XX:+PrintCompilation\").addHelperClasses(ClassInitializerHelper.class).start();\n+        String output = TestFramework.getLastTestVMOutput();\n+        Pattern p = Pattern.compile(\"4.*ClassInitializerTest::<clinit>\");\n+        Matcher m = p.matcher(output);\n+        Asserts.assertTrue(m.find());\n+        p = Pattern.compile(\"2.*ClassInitializerHelper::<clinit>\");\n+        m = p.matcher(output);\n+        Asserts.assertTrue(m.find());\n+\n+        new TestFramework(TestWarmup.class).setDefaultWarmup(500).start();\n+        TestFramework.run(ExplicitSkip.class);\n+    }\n+\n+    @Test\n+    @Warmup(1000)\n+    public void test1() {\n+        executed[0]++;\n+    }\n+\n+    @Check(test = \"test1\")\n+    public void check1(TestInfo info) {\n+        if (executed[0] <= 1000) {\n+            Asserts.assertTrue(info.isWarmUp());\n+        } else {\n+            Asserts.assertTrue(!info.isWarmUp() && executed[0] == 1001);\n+            TestFramework.assertCompiledByC2(info.getTest());\n+        }\n+    }\n+\n+    @Test\n+    @Warmup(100)\n+    public void test2() {\n+        executed[1]++;\n+    }\n+\n+    @Check(test = \"test2\", when = CheckAt.COMPILED)\n+    public void check2(TestInfo info) {\n+        Asserts.assertTrue(!info.isWarmUp() && executed[1] == 101);\n+        TestFramework.assertCompiledByC2(info.getTest());\n+    }\n+\n+    @Test\n+    public void overload() {\n+        executed[4]++;\n+    }\n+\n+    @ForceCompile\n+    @DontInline\n+    public static void overload(int i) {\n+        wasExecuted = true;\n+    }\n+\n+    @ForceCompile(CompLevel.C1_LIMITED_PROFILE)\n+    @ForceInline\n+    public static void overload(double i) {\n+        wasExecuted = true;\n+    }\n+\n+    @Check(test = \"overload\")\n+    public void checkOverload()  {\n+        executed[5]++;\n+    }\n+\n+    @Test\n+    public void testDontCompile() {\n+        executed[2]++;\n+    }\n+\n+    @DontCompile\n+    public static void dontCompile() {\n+        executed[3]++;\n+    }\n+\n+    @Run(test = \"testDontCompile\", mode = RunMode.STANDALONE)\n+    public void runTestDontCompile() throws NoSuchMethodException {\n+        for (int i = 0; i < 10000; i++) {\n+            dontCompile(); \/\/ Should not compile this method\n+            testDontCompile();\n+        }\n+        TestFramework.assertNotCompiled(TestControls.class.getDeclaredMethod(\"dontCompile\"));\n+    }\n+\n+    @Test\n+    public void testCompileAtLevel1() {\n+        executed[6]++;\n+    }\n+\n+    @DontCompile(CompLevel.ANY)\n+    public static void dontCompile2() {\n+        executed[7]++;\n+    }\n+\n+    @Run(test = \"testCompileAtLevel1\")\n+    @Warmup(5000)\n+    public void runTestDontCompile2(RunInfo info) throws NoSuchMethodException {\n+        dontCompile2();\n+        testCompileAtLevel1();\n+        if (!info.isWarmUp()) {\n+            executed[8]++;\n+            int compLevel = WHITE_BOX.getMethodCompilationLevel(TestControls.class.getDeclaredMethod(\"dontCompile2\"), false);\n+            Asserts.assertLessThan(compLevel, CompLevel.C1_LIMITED_PROFILE.getValue());\n+        } else {\n+            executed[9]++;\n+        }\n+    }\n+\n+    @Test\n+    @Warmup(0)\n+    public void noWarmup() {\n+        executed[10]++;\n+    }\n+\n+    @Test\n+    public void noWarmup2() {\n+        executed[11]++;\n+    }\n+\n+    @Run(test = \"noWarmup2\")\n+    @Warmup(0)\n+    public void runNoWarmup2(RunInfo info) {\n+        noWarmup2();\n+        noWarmup2();\n+        Asserts.assertTrue(!info.isWarmUp());\n+        executed[12]++;\n+    }\n+\n+    @Test\n+    public void testCompilation() {\n+        wasExecuted = true;\n+    }\n+\n+    @DontCompile(CompLevel.ANY)\n+    public void dontCompileAny() {\n+        for (int i = 0; i < 10; i++) {\n+            iFld = i;\n+        }\n+    }\n+\n+    @DontCompile(CompLevel.C1)\n+    public void dontCompileC1() {\n+        for (int i = 0; i < 10; i++) {\n+            iFld = 3;\n+        }\n+    }\n+\n+    @DontCompile(CompLevel.C2)\n+    public void dontCompileC2(int x, boolean b) {\n+        for (int i = 0; i < 10; i++) {\n+            iFld = x;\n+        }\n+    }\n+\n+    \/\/ Default is C2.\n+    @ForceCompile\n+    public void forceCompileDefault() {\n+        wasExecuted = true;\n+    }\n+\n+    \/\/ ANY maps to C2.\n+    @ForceCompile\n+    public void forceCompileAny() {\n+        wasExecuted = true;\n+    }\n+\n+    @ForceCompile(CompLevel.C1)\n+    public void forceCompileC1() {\n+        wasExecuted = true;\n+    }\n+\n+    @ForceCompile(CompLevel.C1_LIMITED_PROFILE)\n+    public void forceCompileC1Limited() {\n+        wasExecuted = true;\n+    }\n+\n+    @ForceCompile(CompLevel.C1_FULL_PROFILE)\n+    public void forceCompileC1Full() {\n+        wasExecuted = true;\n+    }\n+\n+    @ForceCompile(CompLevel.C2)\n+    public void forceCompileC2() {\n+        wasExecuted = true;\n+    }\n+\n+    @ForceCompile(CompLevel.C1)\n+    @DontCompile(CompLevel.C2)\n+    public void forceC1DontC2() {\n+        wasExecuted = true;\n+    }\n+\n+    @ForceCompile(CompLevel.C2)\n+    @DontCompile(CompLevel.C1)\n+    public void forceC2DontC1() {\n+        wasExecuted = true;\n+    }\n+\n+    @Run(test = \"testCompilation\")\n+    @Warmup(0)\n+    public void runTestCompilation(RunInfo info) {\n+        for (int i = 0; i < 100000; i++) {\n+            dontCompileAny();\n+            dontCompileC1();\n+            dontCompileC2(i, i % 2 == 0);\n+        }\n+        TestFramework.assertCompiledByC2(info.getTest());\n+        TestFramework.assertNotCompiled(info.getTestClassMethod(\"dontCompileAny\"));\n+        TestFramework.assertCompiledByC2(info.getTestClassMethod(\"dontCompileC1\"));\n+        TestFramework.assertCompiledByC1(info.getTestClassMethod(\"dontCompileC2\", int.class, boolean.class));\n+\n+        TestFramework.assertCompiledAtLevel(info.getTestClassMethod(\"forceCompileDefault\"), CompLevel.C2);\n+        TestFramework.assertCompiledAtLevel(info.getTestClassMethod(\"forceCompileAny\"), CompLevel.C2);\n+        TestFramework.assertCompiledAtLevel(info.getTestClassMethod(\"forceCompileC2\"), CompLevel.C2);\n+        TestFramework.assertCompiledAtLevel(info.getTestClassMethod(\"forceCompileC1\"), CompLevel.C1);\n+        TestFramework.assertCompiledAtLevel(info.getTestClassMethod(\"forceCompileC1Limited\"), CompLevel.C1_LIMITED_PROFILE);\n+        TestFramework.assertCompiledAtLevel(info.getTestClassMethod(\"forceCompileC1Full\"), CompLevel.C1_FULL_PROFILE);\n+\n+        TestFramework.assertCompiledAtLevel(info.getTestClassMethod(\"forceC1DontC2\"), CompLevel.C1);\n+        TestFramework.assertCompiledAtLevel(info.getTestClassMethod(\"forceC2DontC1\"), CompLevel.C2);\n+        executed[13]++;\n+    }\n+}\n+\n+@ForceCompileClassInitializer\n+class ClassInitializerTest {\n+\n+    static int i;\n+    static Object o;\n+    static {\n+        i = 3;\n+        o = new Object();\n+    }\n+    @Test\n+    public void test() {}\n+}\n+\n+@ForceCompileClassInitializer(CompLevel.C1_LIMITED_PROFILE)\n+class ClassInitializerHelper {\n+    static int i;\n+    static {\n+        i = 3;\n+    }\n+}\n+\n+class TestWarmup {\n+    int iFld;\n+    int iFld2;\n+    int iFldCheck;\n+    int iFldCheck2;\n+\n+    @Test\n+    @Warmup(200)\n+    public void test() {\n+        iFld++;\n+    }\n+\n+    @Test\n+    public void test2() {\n+        iFld2++;\n+    }\n+\n+    @Check(test = \"test\")\n+    public void checkTest(TestInfo info) {\n+        iFldCheck++;\n+        if (iFldCheck != iFld) {\n+            throw new RuntimeException(iFld + \" must be equal \" + iFldCheck);\n+        }\n+        if (!info.isWarmUp()) {\n+            if (iFld != 201) {\n+                throw new RuntimeException(\"Must be 201 but was \" + iFld);\n+            }\n+        }\n+    }\n+\n+    @Check(test = \"test2\")\n+    public void checkTest2(TestInfo info) {\n+        iFldCheck2++;\n+        if (iFldCheck2 != iFld2) {\n+            throw new RuntimeException(iFld2 + \" must be equal \" + iFldCheck2);\n+        }\n+        if (!info.isWarmUp()) {\n+            if (iFld2 != 501) {\n+                throw new RuntimeException(\"Must be 501 but was \" + iFld2);\n+            }\n+        }\n+    }\n+}\n+\n+\n+class ExplicitSkip {\n+    int iFld;\n+\n+    \/\/ Test skipped and thus also no IR verification should be done.\n+    @Test(compLevel = CompLevel.SKIP)\n+    @IR(counts = {IRNode.STORE_I, \"1\"})\n+    public int test(int x) {\n+        iFld = x;\n+        return x;\n+    }\n+\n+    @Run(test = \"test\")\n+    public void run(RunInfo info) {\n+        test(34);\n+    }\n+}\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/tests\/TestControls.java","additions":387,"deletions":0,"binary":false,"changes":387,"status":"added"},{"patch":"@@ -0,0 +1,76 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.test.lib.hotspot.ir_framework.tests;\n+\n+import jdk.test.lib.hotspot.ir_framework.Test;\n+import jdk.test.lib.hotspot.ir_framework.TestFramework;\n+\n+\/*\n+ * @test\n+ * @requires vm.debug == true & vm.compMode != \"Xint\" & vm.compiler2.enabled\n+ * @summary Sanity test remaining framework property flags.\n+ * @library \/test\/lib\n+ * @run main\/othervm -DFlipC1C2=true jdk.test.lib.hotspot.ir_framework.tests.TestDFlags\n+ * @run main\/othervm -DExcludeRandom=true jdk.test.lib.hotspot.ir_framework.tests.TestDFlags\n+ * @run main\/othervm -DVerifyVM=true jdk.test.lib.hotspot.ir_framework.tests.TestDFlags\n+ * @run main\/othervm -DDumpReplay=true jdk.test.lib.hotspot.ir_framework.tests.TestDFlags\n+ * @run main\/othervm -DVerbose=true jdk.test.lib.hotspot.ir_framework.tests.TestDFlags\n+ * @run main\/othervm -DShuffleTests=false jdk.test.lib.hotspot.ir_framework.tests.TestDFlags\n+ * @run main\/othervm -DReproduce=true jdk.test.lib.hotspot.ir_framework.tests.TestDFlags\n+ * @run main\/othervm -DReportStdout=true jdk.test.lib.hotspot.ir_framework.tests.TestDFlags\n+ * @run main\/othervm -DGCAfter=true jdk.test.lib.hotspot.ir_framework.tests.TestDFlags\n+ * @run main\/othervm -DPrintTimes=true jdk.test.lib.hotspot.ir_framework.tests.TestDFlags\n+ * @run main\/othervm -DVerifyIR=false jdk.test.lib.hotspot.ir_framework.tests.TestDFlags\n+ *\/\n+\n+public class TestDFlags {\n+    public static void main(String[] args) {\n+        TestFramework.run();\n+    }\n+\n+    @Test\n+    public int c1() {\n+        return 34;\n+    }\n+\n+\n+    @Test\n+    public void c2() {\n+        for (int i = 0; i < 100; i++) {\n+        }\n+    }\n+\n+    @Test\n+    public void c2_2() {\n+        for (int i = 0; i < 100; i++) {\n+        }\n+    }\n+\n+    @Test\n+    public void c2_3() {\n+        for (int i = 0; i < 100; i++) {\n+        }\n+    }\n+}\n+\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/tests\/TestDFlags.java","additions":76,"deletions":0,"binary":false,"changes":76,"status":"added"},{"patch":"@@ -0,0 +1,93 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.test.lib.hotspot.ir_framework.tests;\n+\n+import jdk.test.lib.Utils;\n+import jdk.test.lib.hotspot.ir_framework.*;\n+import jdk.test.lib.Asserts;\n+import jdk.test.lib.process.OutputAnalyzer;\n+import jdk.test.lib.process.ProcessTools;\n+\n+\/*\n+ * @test\n+ *  @requires vm.debug == true\n+ * @summary Test -DScenarios property flag. Run with othervm which should not be done when writing tests using the framework.\n+ * @library \/test\/lib\n+ * @run main\/othervm -DScenarios=1,5,10 jdk.test.lib.hotspot.ir_framework.tests.TestDScenarios test\n+ * @run main\/othervm -DScenarios=1,4 jdk.test.lib.hotspot.ir_framework.tests.TestDScenarios test\n+ * @run main\/othervm -DScenarios=3,4,9 jdk.test.lib.hotspot.ir_framework.tests.TestDScenarios test\n+ * @run driver jdk.test.lib.hotspot.ir_framework.tests.TestDScenarios test2\n+ * @run driver jdk.test.lib.hotspot.ir_framework.tests.TestDScenarios\n+ *\/\n+\n+public class TestDScenarios {\n+    public static void main(String[] args) throws Exception {\n+        if (args.length > 0) {\n+            switch (args[0]) {\n+                case \"test\" -> {\n+                    Scenario s1 = new Scenario(1);\n+                    Scenario s2 = new Scenario(5);\n+                    Scenario s3 = new Scenario(10);\n+                    Scenario bad = new Scenario(0, \"-Flagdoesnotexist\"); \/\/ not executed\n+                    TestFramework.runWithScenarios(bad, s1, s2, s3);\n+                }\n+                case \"test2\" -> {\n+                    try {\n+                        TestFramework.run(DScenariosBad.class);\n+                        throw new RuntimeException(\"should not reach\");\n+                    } catch (TestVMException e) {\n+                        System.out.println(e.getExceptionInfo());\n+                        Asserts.assertTrue(e.getExceptionInfo().contains(\"Expected DScenariosBad exception\"));\n+                    }\n+                }\n+                default -> {\n+                    \/\/ Invalid -DScenarios set and thus exception thrown when Scenario class is statically initialized.\n+                    Scenario s = new Scenario(3);\n+                    throw new RuntimeException(\"should not reach\");\n+                }\n+            }\n+        } else {\n+            \/\/ Test invalid -DScenario flag.\n+            OutputAnalyzer oa;\n+            ProcessBuilder process = ProcessTools.createJavaProcessBuilder(\n+                    \"-Dtest.jdk=\" + Utils.TEST_JDK, \"-DScenarios=a,1,b,10\",\n+                    \"jdk.test.lib.hotspot.ir_framework.tests.TestDScenarios\", \" test3\");\n+            oa = ProcessTools.executeProcess(process);\n+            oa.shouldNotHaveExitValue(0);\n+            System.out.println(oa.getOutput());\n+            Asserts.assertTrue(oa.getOutput().contains(\"TestRunException: Provided a scenario index\"));\n+        }\n+    }\n+\n+    @Test\n+    public void test() {\n+    }\n+}\n+\n+class DScenariosBad {\n+    @Test\n+    public void test() {\n+        throw new RuntimeException(\"Expected DScenariosBad exception\");\n+    }\n+}\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/tests\/TestDScenarios.java","additions":93,"deletions":0,"binary":false,"changes":93,"status":"added"},{"patch":"@@ -0,0 +1,158 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.test.lib.hotspot.ir_framework.tests;\n+\n+import jdk.test.lib.Utils;\n+import jdk.test.lib.hotspot.ir_framework.*;\n+import jdk.test.lib.Asserts;\n+import jdk.test.lib.process.OutputAnalyzer;\n+import jdk.test.lib.process.ProcessTools;\n+\n+\/*\n+ * @test\n+ * @summary Test -DTest and -DExclude property flag.\n+ * @library \/test\/lib\n+ * @run driver jdk.test.lib.hotspot.ir_framework.tests.TestDTestAndExclude\n+ *\/\n+\n+public class TestDTestAndExclude {\n+    public static void main(String[] args) throws Exception {\n+        if (args.length == 0) {\n+            run(\"good1,good2\", \"\", \"good\");\n+            run(\"good1,good2\", \"bad1\", \"good\");\n+            run(\"good1,bad1\", \"bad1\", \"good\");\n+            run(\"good1,bad1\", \"bad1,good\", \"good\");\n+            run(\"good3,bad2\", \"bad1,bad2\", \"good\");\n+            run(\"goodMulti1,goodMulti2\", \"\", \"good\");\n+            run(\"bad1,good1\", \"\", \"bad1\");\n+            run(\"bad1,good1\", \"good1\", \"bad1\");\n+            run(\"bad1,good1\", \"asdf\", \"bad1\");\n+            run(\"bad2,good1\", \"\", \"runBadSingle\");\n+            run(\"bad2\", \"runBadSingle\", \"runBadSingle\");\n+            run(\"badMulti1,badMulti2\", \"\", \"runBadMulti\");\n+            run(\"badMulti1\", \"\", \"runBadMulti\");\n+            run(\"badMulti1\", \"badMulti2\", \"runBadMulti\");\n+            run(\"badMulti2\", \"badMulti1\", \"runBadMulti\");\n+            run(\"runBadSingle\", \"\", \"empty\");\n+            run(\"runBadMulti\", \"\", \"empty\");\n+            run(\"asdf\", \"\", \"empty\");\n+            run(\"\", \"good1,good2,good3,bad1,bad2,goodMulti1,goodMulti2,badMulti1,badMulti2\", \"empty\");\n+            run(\"asdf\", \"good1,good2,good3,bad1,bad2,goodMulti1,goodMulti2,badMulti1,badMulti2\", \"empty\");\n+            run(\"bad1\", \"bad1\", \"empty\");\n+            run(\"good1\", \"asdf,good,good1\", \"empty\");\n+        } else {\n+            switch (args[0]) {\n+                case \"good\" -> TestFramework.run();\n+                case \"bad1\", \"runBadMulti\", \"runBadSingle\" -> {\n+                    try {\n+                        TestFramework.run();\n+                        throw new RuntimeException(\"should not reach\");\n+                    } catch (TestVMException e) {\n+                        Asserts.assertTrue(e.getExceptionInfo().contains(\"expected \" + args[0] + \" exception\"));\n+                    }\n+                }\n+                case \"empty\" -> {\n+                    try {\n+                        TestFramework.run();\n+                        throw new RuntimeException(\"should not reach\");\n+                    } catch (NoTestsRunException e) {\n+                        \/\/ Expected\n+                    }\n+                }\n+                default -> throw new RuntimeException(\"should not reach\");\n+            }\n+        }\n+    }\n+\n+    \/**\n+     * Create a VM and simulate as if it was a driver VM spawned by JTreg that has -DTest\/DExclude set as VM or Javaopts\n+     *\/\n+    protected static void run(String dTest, String dExclude, String arg) throws Exception {\n+        System.out.println(\"Run -DTest=\" + dTest + \" -DExclude=\" + dExclude + \" arg=\" + arg);\n+        OutputAnalyzer oa;\n+        ProcessBuilder process = ProcessTools.createJavaProcessBuilder(\n+                \"-Dtest.class.path=\" + Utils.TEST_CLASS_PATH, \"-Dtest.jdk=\" + Utils.TEST_JDK,\n+                \"-Dtest.vm.opts=-DTest=\" + dTest + \" -DExclude=\" + dExclude,\n+                \"jdk.test.lib.hotspot.ir_framework.tests.TestDTestAndExclude\", arg);\n+        oa = ProcessTools.executeProcess(process);\n+        oa.shouldHaveExitValue(0);\n+    }\n+\n+    @Test\n+    public void good1() { }\n+\n+    @Test\n+    public void good2() { }\n+\n+    @Check(test = \"good2\")\n+    public void check2() {}\n+\n+    @Test\n+    public void bad1() {\n+        throw new RuntimeException(\"expected bad1 exception\");\n+    }\n+\n+    @Test\n+    public void good3() {}\n+\n+    @Test\n+    public void goodMulti1() {}\n+\n+    @Test\n+    public void goodMulti2() {}\n+\n+    @Run(test = \"good3\")\n+    public void runGoodSingle() {\n+        good3();\n+    }\n+\n+    @Run(test = {\"goodMulti1\", \"goodMulti2\"})\n+    public void runGoodMulti() {\n+        goodMulti1();\n+        goodMulti2();\n+    }\n+\n+    @Test\n+    public void bad2() {\n+    }\n+\n+    @Test\n+    public void badMulti1() {\n+    }\n+\n+    @Test\n+    public void badMulti2() {\n+    }\n+\n+    @Run(test = \"bad2\")\n+    public void runBadSingle() {\n+        throw new RuntimeException(\"expected runBadSingle exception\");\n+    }\n+\n+    @Run(test = {\"badMulti1\", \"badMulti2\"})\n+    public void runBadMulti() {\n+        throw new RuntimeException(\"expected runBadMulti exception\");\n+    }\n+}\n+\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/tests\/TestDTestAndExclude.java","additions":158,"deletions":0,"binary":false,"changes":158,"status":"added"},{"patch":"@@ -0,0 +1,1625 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.test.lib.hotspot.ir_framework.tests;\n+\n+import jdk.test.lib.hotspot.ir_framework.*;\n+import jdk.test.lib.Asserts;\n+\n+import java.io.ByteArrayOutputStream;\n+import java.io.PrintStream;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+\n+\/*\n+ * @test\n+ * @requires vm.debug == true & vm.compMode != \"Xint\" & vm.compiler2.enabled\n+ * @summary Test IR matcher with different default IR node regexes. Use -DPrintIREncoding.\n+ *          Normally, the framework should be called with driver.\n+ * @library \/test\/lib\n+ * @run main\/othervm -DPrintIREncoding=true jdk.test.lib.hotspot.ir_framework.tests.TestIRMatching\n+ *\/\n+\n+public class TestIRMatching {\n+\n+    public static void main(String[] args) {\n+        runFailOnTestsArgs(BadFailOnConstraint.create(AndOr1.class, \"test1(int)\", 1, \"CallStaticJava\"), \"-XX:SuspendRetryCount=50\", \"-XX:+UsePerfData\", \"-XX:+UseTLAB\");\n+        runFailOnTestsArgs(BadFailOnConstraint.create(AndOr1.class, \"test2()\", 1, \"CallStaticJava\"), \"-XX:SuspendRetryCount=50\", \"-XX:-UsePerfData\", \"-XX:+UseTLAB\");\n+\n+        runWithArguments(AndOr1.class, \"-XX:SuspendRetryCount=52\", \"-XX:+UsePerfData\", \"-XX:+UseTLAB\");\n+        runWithArguments(CountComparisons.class, \"-XX:SuspendRetryCount=50\");\n+        runWithArguments(GoodCount.class, \"-XX:SuspendRetryCount=50\");\n+        runWithArguments(MultipleFailOnGood.class, \"-XX:SuspendRetryCount=50\");\n+\n+        String[] allocMatches = { \"MyClass\", \"call,static  wrapper for: _new_instance_Java\" };\n+        runCheck(BadFailOnConstraint.create(MultipleFailOnBad.class, \"fail1()\", 1, 1, \"Store\"),\n+                 BadFailOnConstraint.create(MultipleFailOnBad.class, \"fail1()\", 1,  3, \"Store\"),\n+                 GoodFailOnRegexConstraint.create(MultipleFailOnBad.class, \"fail1()\", 1,  2, 4),\n+                 GoodFailOnRegexConstraint.create(MultipleFailOnBad.class, \"fail2()\", 1,  1),\n+                 BadFailOnConstraint.create(MultipleFailOnBad.class, \"fail2()\", 1,  2, \"CallStaticJava\"),\n+                 BadFailOnConstraint.create(MultipleFailOnBad.class, \"fail3()\", 1,  2, \"Store\"),\n+                 GoodFailOnRegexConstraint.create(MultipleFailOnBad.class, \"fail3()\", 1,  1, 3),\n+                 BadFailOnConstraint.create(MultipleFailOnBad.class, \"fail4()\", 1,  1, \"Store\"),\n+                 GoodFailOnRegexConstraint.create(MultipleFailOnBad.class, \"fail4()\", 1,  2, 3),\n+                 BadFailOnConstraint.create(MultipleFailOnBad.class, \"fail5()\", 1,  1, \"Store\"),\n+                 GoodFailOnRegexConstraint.create(MultipleFailOnBad.class, \"fail5()\", 1,  2, 3),\n+                 GoodFailOnRegexConstraint.create(MultipleFailOnBad.class, \"fail6()\", 1,  1),\n+                 BadFailOnConstraint.create(MultipleFailOnBad.class, \"fail6()\", 1,  2, allocMatches),\n+                 BadFailOnConstraint.create(MultipleFailOnBad.class, \"fail6()\", 1,  3, \"CallStaticJava\"),\n+                 GoodFailOnRegexConstraint.create(MultipleFailOnBad.class, \"fail7()\", 1,  1),\n+                 BadFailOnConstraint.create(MultipleFailOnBad.class, \"fail7()\", 1,  2, allocMatches),\n+                 GoodFailOnRegexConstraint.create(MultipleFailOnBad.class, \"fail8()\", 1,  1),\n+                 BadFailOnConstraint.create(MultipleFailOnBad.class, \"fail8()\", 1,  2, allocMatches),\n+                 BadFailOnConstraint.create(MultipleFailOnBad.class, \"fail9()\", 1,  1, \"Store\"),\n+                 BadFailOnConstraint.create(MultipleFailOnBad.class, \"fail9()\", 1,  2, \"CallStaticJava\"),\n+                 BadFailOnConstraint.create(MultipleFailOnBad.class, \"fail10()\", 1,  1, \"Store\", \"iFld\"),\n+                 GoodFailOnRegexConstraint.create(MultipleFailOnBad.class, \"fail10()\", 1,  2, 3)\n+        );\n+\n+        runCheck(BadCountsConstraint.create(BadCount.class, \"bad1()\", 1, 1, \"Load\"),\n+                 GoodCountsConstraint.create(BadCount.class, \"bad1()\", 2),\n+                 GoodCountsConstraint.create(BadCount.class, \"bad2()\", 1),\n+                 BadCountsConstraint.create(BadCount.class, \"bad2()\", 2,  1, \"Store\"),\n+                 BadCountsConstraint.create(BadCount.class, \"bad3()\", 1,  1, \"Load\"),\n+                 BadCountsConstraint.create(BadCount.class, \"bad3()\", 2,  1, \"Store\")\n+        );\n+\n+        String[] allocArrayMatches = { \"MyClass\", \"call,static  wrapper for: _new_array_Java\"};\n+        runCheck(BadFailOnConstraint.create(AllocArray.class, \"allocArray()\", 1, allocArrayMatches),\n+                 BadFailOnConstraint.create(AllocArray.class, \"allocArray()\", 2,  allocArrayMatches),\n+                 GoodFailOnConstraint.create(AllocArray.class, \"allocArray()\", 3),\n+                 GoodFailOnConstraint.create(AllocArray.class, \"allocArray()\", 4),\n+                 BadFailOnConstraint.create(AllocArray.class, \"allocArray()\", 5,  allocArrayMatches)\n+        );\n+\n+        runCheck(GoodRuleConstraint.create(RunTests.class, \"good1()\", 1),\n+                 GoodRuleConstraint.create(RunTests.class, \"good1()\", 2),\n+                 GoodRuleConstraint.create(RunTests.class, \"good2()\", 1),\n+                 GoodRuleConstraint.create(RunTests.class, \"good2()\", 2),\n+                 GoodRuleConstraint.create(RunTests.class, \"good3(int)\", 1),\n+                 BadCountsConstraint.create(RunTests.class, \"bad1(int)\", 1, 0),\n+                 BadFailOnConstraint.create(RunTests.class, \"bad1(int)\", 2, \"Load\")\n+        );\n+\n+        runCheck(new String[] {\"-XX:-UseCompressedClassPointers\"},\n+                 BadFailOnConstraint.create(Loads.class, \"load()\", 1, 1, \"Load\"),\n+                 BadFailOnConstraint.create(Loads.class, \"load()\", 1, 3, \"LoadI\"),\n+                 BadCountsConstraint.create(Loads.class, \"load()\", 1, 1, 0),\n+                 BadCountsConstraint.create(Loads.class, \"load()\", 1, 2, 1,\"Load\"),\n+                 GoodRuleConstraint.create(Loads.class, \"load()\", 2),\n+                 GoodFailOnConstraint.create(Loads.class, \"load()\", 3),\n+                 BadCountsConstraint.create(Loads.class, \"load()\", 3, 2, 2,\"Store\"),\n+                 BadFailOnConstraint.create(Loads.class, \"load()\", 4, 2, \"Store\"),\n+                 BadFailOnConstraint.create(Loads.class, \"load()\", 5, \"Load\"),\n+                 BadFailOnConstraint.create(Loads.class, \"load()\", 6, \"Load\"),\n+                 BadFailOnConstraint.create(Loads.class, \"load()\", 7, \"Load\"),\n+                 GoodRuleConstraint.create(Loads.class, \"load()\", 8),\n+                 GoodRuleConstraint.create(Loads.class, \"load()\", 9),\n+                 GoodRuleConstraint.create(Loads.class, \"load()\", 10),\n+                 BadFailOnConstraint.create(Loads.class, \"loadKlass()\", 1),\n+                 BadCountsConstraint.create(Loads.class, \"loadKlass()\", 2, 2,\"Field\")\n+                 );\n+\n+        \/\/ Loops\n+        runCheck(BadFailOnConstraint.create(Loops.class, \"loop()\", 1, \"Loop\"),\n+                 GoodRuleConstraint.create(Loops.class, \"loop()\", 2),\n+                 GoodRuleConstraint.create(Loops.class, \"loop()\", 3),\n+                 GoodRuleConstraint.create(Loops.class, \"countedLoop()\", 1),\n+                 BadFailOnConstraint.create(Loops.class, \"countedLoop()\", 2, \"CountedLoop\"),\n+                 GoodRuleConstraint.create(Loops.class, \"countedLoop()\", 3),\n+                 BadFailOnConstraint.create(Loops.class, \"loopAndCountedLoop()\", 1, \"Loop\"),\n+                 BadFailOnConstraint.create(Loops.class, \"loopAndCountedLoop()\", 2, \"CountedLoop\"),\n+                 GoodRuleConstraint.create(Loops.class, \"loopAndCountedLoop()\", 3),\n+                 GoodRuleConstraint.create(Loops.class, \"countedLoopMain()\", 1),\n+                 BadFailOnConstraint.create(Loops.class, \"countedLoopMain()\", 2, \"CountedLoop\"),\n+                 BadFailOnConstraint.create(Loops.class, \"countedLoopMain()\", 3, \"CountedLoop\", \"main\"),\n+                 GoodRuleConstraint.create(Loops.class, \"countedLoopUnrolled()\", 1),\n+                 GoodRuleConstraint.create(Loops.class, \"countedLoopUnrolled()\", 2),\n+                 GoodRuleConstraint.create(Loops.class, \"countedLoopUnrolled()\", 3)\n+        );\n+\n+        \/\/ Traps\n+        runCheck(GoodRuleConstraint.create(Traps.class, \"noTraps()\", 1),\n+                 BadFailOnConstraint.create(Traps.class, \"noTraps()\", 2, \"Store\", \"iFld\"),\n+                 GoodRuleConstraint.create(Traps.class, \"noTraps()\", 3),\n+                 BadFailOnConstraint.create(Traps.class, \"predicateTrap()\", 1, \"CallStaticJava\", \"uncommon_trap\"),\n+                 BadFailOnConstraint.create(Traps.class, \"predicateTrap()\", 2, \"CallStaticJava\", \"uncommon_trap\", \"predicate\"),\n+                 GoodRuleConstraint.create(Traps.class, \"predicateTrap()\", 3),\n+                 GoodRuleConstraint.create(Traps.class, \"predicateTrap()\", 4),\n+                 BadFailOnConstraint.create(Traps.class, \"nullCheck()\", 1, \"CallStaticJava\", \"uncommon_trap\"),\n+                 BadFailOnConstraint.create(Traps.class, \"nullCheck()\", 2, \"CallStaticJava\", \"uncommon_trap\", \"null_check\"),\n+                 BadFailOnConstraint.create(Traps.class, \"nullCheck()\", 3, \"uncommon_trap\", \"unstable_if\"),\n+                 GoodRuleConstraint.create(Traps.class, \"nullCheck()\", 4),\n+                 BadFailOnConstraint.create(Traps.class, \"nullAssert()\", 1, \"CallStaticJava\", \"uncommon_trap\"),\n+                 BadFailOnConstraint.create(Traps.class, \"nullAssert()\", 2, \"CallStaticJava\", \"uncommon_trap\", \"null_assert\"),\n+                 BadFailOnConstraint.create(Traps.class, \"nullAssert()\", 3, \"CallStaticJava\", \"uncommon_trap\", \"null_check\"),\n+                 GoodRuleConstraint.create(Traps.class, \"nullAssert()\", 4),\n+                 BadFailOnConstraint.create(Traps.class, \"unstableIf(boolean)\", 1, \"CallStaticJava\", \"uncommon_trap\"),\n+                 BadFailOnConstraint.create(Traps.class, \"unstableIf(boolean)\",  2, \"CallStaticJava\", \"uncommon_trap\", \"unstable_if\"),\n+                 GoodRuleConstraint.create(Traps.class, \"unstableIf(boolean)\", 3),\n+                 BadFailOnConstraint.create(Traps.class, \"classCheck()\", 1, \"CallStaticJava\", \"uncommon_trap\"),\n+                 BadFailOnConstraint.create(Traps.class, \"classCheck()\", 2, \"CallStaticJava\", \"uncommon_trap\", \"class_check\"),\n+                 BadFailOnConstraint.create(Traps.class, \"classCheck()\", 3, \"CallStaticJava\", \"uncommon_trap\", \"null_check\"),\n+                 GoodRuleConstraint.create(Traps.class, \"classCheck()\", 4),\n+                 BadFailOnConstraint.create(Traps.class, \"rangeCheck()\", 1, \"CallStaticJava\", \"uncommon_trap\"),\n+                 BadFailOnConstraint.create(Traps.class, \"rangeCheck()\", 2, \"CallStaticJava\", \"uncommon_trap\", \"range_check\"),\n+                 BadFailOnConstraint.create(Traps.class, \"rangeCheck()\", 3, \"CallStaticJava\", \"uncommon_trap\", \"null_check\"),\n+                 GoodRuleConstraint.create(Traps.class, \"rangeCheck()\", 4),\n+                 BadFailOnConstraint.create(Traps.class, \"instrinsicOrTypeCheckedInlining()\", 1, \"CallStaticJava\", \"uncommon_trap\"),\n+                 BadFailOnConstraint.create(Traps.class, \"instrinsicOrTypeCheckedInlining()\", 2, \"CallStaticJava\", \"uncommon_trap\", \"intrinsic_or_type_checked_inlining\"),\n+                 BadFailOnConstraint.create(Traps.class, \"instrinsicOrTypeCheckedInlining()\", 3, \"CallStaticJava\", \"uncommon_trap\", \"null_check\"),\n+                 GoodRuleConstraint.create(Traps.class, \"instrinsicOrTypeCheckedInlining()\", 4)\n+        );\n+\n+\n+        runCheck(new String[] {\"-XX:+BailoutToInterpreterForThrows\"},\n+                 BadFailOnConstraint.create(UnhandledTrap.class, \"unhandled()\", 1, \"CallStaticJava\", \"uncommon_trap\"),\n+                 BadFailOnConstraint.create(UnhandledTrap.class, \"unhandled()\", 2, \"CallStaticJava\", \"uncommon_trap\", \"unhandled\"),\n+                 GoodRuleConstraint.create(UnhandledTrap.class, \"unhandled()\", 3)\n+        );\n+\n+        runCheck(BadFailOnConstraint.create(ScopeObj.class, \"scopeObject()\", 1, \"ScObj\"));\n+        runCheck(BadFailOnConstraint.create(Membar.class, \"membar()\", 1, \"MemBar\"));\n+        runCheck(BadFailOnConstraint.create(CheckCastArray.class, \"array()\", 1, \"cmp\", \"precise klass\"),\n+                 BadFailOnConstraint.create(CheckCastArray.class, \"array()\", 2, 1,\"cmp\", \"precise klass\", \"MyClass\"),\n+                 BadFailOnConstraint.create(CheckCastArray.class, \"array()\", 2, 2,\"cmp\", \"precise klass\", \"tests\/MyClass\"),\n+                 GoodFailOnConstraint.create(CheckCastArray.class, \"array()\", 3),\n+                 BadFailOnConstraint.create(CheckCastArray.class, \"arrayCopy(java.lang.Object[],java.lang.Class)\", 1, \"checkcast_arraycopy\")\n+        );\n+\n+        \/\/ Redirect stdout to stream and then check if we find required IR encoding read from socket.\n+        ByteArrayOutputStream baos = new ByteArrayOutputStream();\n+        PrintStream ps = new PrintStream(baos);\n+        PrintStream old = System.out;\n+        System.setOut(ps);\n+\n+        try {\n+            runWithArguments(CompilationOutputOfFails.class);\n+            shouldNotReach();\n+        } catch (IRViolationException e) {\n+            System.out.flush();\n+            String output = baos.toString();\n+            baos.reset();\n+            Pattern pattern = Pattern.compile(\">>> Compilation.*both\\\\d.*\\\\RPrintIdeal:(?:(?!PrintOpto|>>> Compilation)[\\\\S\\\\s])+PrintOptoAssembly\");\n+            Matcher matcher = pattern.matcher(output);\n+            Asserts.assertEQ(matcher.results().count(), (long)7, \"Could not find all both methods: \" + output);\n+            pattern = Pattern.compile(\">>> Compilation.*ideal\\\\d.*\\\\RPrintIdeal:(?:(?!>>> Compilation)[\\\\S\\\\s])+\");\n+            matcher = pattern.matcher(output);\n+            int count = 0;\n+            while (matcher.find()) {\n+                String match = matcher.group();\n+                Asserts.assertFalse(match.contains(\"PrintOptoAssembly\"), \"Cannot contain opto assembly: \" + output);\n+                count++;\n+            }\n+            Asserts.assertEQ(count, 7, \"Could not find all ideal methods: \" + output);\n+            pattern = Pattern.compile(\">>> Compilation.*opto\\\\d.*\\\\RPrintOptoAssembly:(?:(?!>>> Compilation)[\\\\S\\\\s])+\");\n+            matcher = pattern.matcher(output);\n+            count = 0;\n+            while (matcher.find()) {\n+                String match = matcher.group();\n+                Asserts.assertFalse(match.contains(\"PrintIdeal\"), \"Cannot contain opto assembly: \" + output);\n+                count++;\n+            }\n+            Asserts.assertEQ(count, 7, \"Could not find all opto methods\");\n+        }\n+\n+        runWithArguments(FlagComparisons.class, \"-XX:SuspendRetryCount=50\");\n+        System.out.flush();\n+        String output = baos.toString();\n+        baos.reset();\n+        findIrIds(output, \"testMatchAllIf50\", 0, 21);\n+        findIrIds(output, \"testMatchNoneIf50\", -1, -1);\n+\n+        runWithArguments(FlagComparisons.class, \"-XX:SuspendRetryCount=49\");\n+        System.out.flush();\n+        output = baos.toString();\n+        baos.reset();\n+        findIrIds(output, \"testMatchAllIf50\", 4, 6, 13, 18);\n+        findIrIds(output, \"testMatchNoneIf50\", 0, 3, 8, 10, 17, 22);\n+\n+        runWithArguments(FlagComparisons.class, \"-XX:SuspendRetryCount=51\");\n+        System.out.flush();\n+        output = baos.toString();\n+        baos.reset();\n+        findIrIds(output, \"testMatchAllIf50\", 7, 12, 19, 21);\n+        findIrIds(output, \"testMatchNoneIf50\", 4, 7, 11, 16, 20, 22);\n+        System.setOut(old);\n+    }\n+\n+    private static void runWithArguments(Class<?> clazz, String... args) {\n+        TestFramework.runWithFlags(clazz, args);\n+    }\n+\n+    private static void runCheck(String[] args , Constraint... constraints) {\n+        try {\n+            TestFramework.runWithFlags(constraints[0].getKlass(), args); \/\/ All constraints have the same class.\n+            shouldNotReach();\n+        } catch (IRViolationException e) {\n+            checkConstraints(e, constraints);\n+        }\n+    }\n+\n+    private static void runCheck(Constraint... constraints) {\n+        try {\n+            TestFramework.run(constraints[0].getKlass()); \/\/ All constraints have the same class.\n+            shouldNotReach();\n+        } catch (IRViolationException e) {\n+            checkConstraints(e, constraints);\n+        }\n+    }\n+\n+    private static void checkConstraints(RuntimeException e, Constraint[] constraints) {\n+        String message = e.getMessage();\n+        try {\n+            for (Constraint constraint : constraints) {\n+                constraint.checkConstraint(e);\n+            }\n+        } catch (Exception e1) {\n+            System.out.println(TestFramework.getLastTestVMOutput());\n+            System.out.println(message);\n+            throw e1;\n+        }\n+    }\n+\n+    \/\/ Single constraint\n+    private static void runFailOnTestsArgs(Constraint constraint, String... args) {\n+        try {\n+            TestFramework.runWithFlags(constraint.getKlass(), args); \/\/ All constraints have the same class.\n+            shouldNotReach();\n+        } catch (IRViolationException e) {\n+            constraint.checkConstraint(e);\n+        }\n+    }\n+\n+    public static void shouldNotReach() {\n+        throw new ShouldNotReachException(\"Framework did not fail but it should have!\");\n+    }\n+\n+    public static void findIrIds(String output, String method, int... numbers) {\n+        StringBuilder builder = new StringBuilder();\n+        builder.append(method);\n+        for (int i = 0; i < numbers.length; i+=2) {\n+            int start = numbers[i];\n+            int endIncluded = numbers[i + 1];\n+            for (int j = start; j <= endIncluded; j++) {\n+                builder.append(\",\");\n+                builder.append(j);\n+            }\n+        }\n+        Asserts.assertTrue(output.contains(builder.toString()), \"Could not find encoding: \\\"\" + builder.toString() + \"\\n\");\n+    }\n+}\n+\n+class AndOr1 {\n+    @Test\n+    @Arguments(Argument.DEFAULT)\n+    @IR(applyIfAnd = {\"UsePerfData\", \"true\", \"SuspendRetryCount\", \"50\", \"UseTLAB\", \"true\"}, failOn = {IRNode.CALL})\n+    public void test1(int i) {\n+        dontInline();\n+    }\n+\n+    @Test\n+    @IR(applyIfOr = {\"UsePerfData\", \"false\", \"SuspendRetryCount\", \"51\", \"UseTLAB\", \"false\"}, failOn = {IRNode.CALL})\n+    public void test2() {\n+        dontInline();\n+    }\n+\n+    @DontInline\n+    private void dontInline() {\n+    }\n+}\n+\n+class MultipleFailOnGood {\n+    private int iFld;\n+    private MyClassSub myClassSub = new MyClassSub();\n+\n+    @Test\n+    @IR(applyIf = {\"SuspendRetryCount\", \"50\"}, failOn = {IRNode.STORE, IRNode.CALL})\n+    @IR(failOn = {IRNode.STORE, IRNode.CALL})\n+    @IR(applyIfOr = {\"SuspendRetryCount\", \"99\", \"SuspendRetryCount\", \"100\"}, failOn = {IRNode.LOOP, IRNode.CALL}) \/\/ Not applied\n+    public void good1() {\n+        forceInline();\n+    }\n+\n+    @Test\n+    @IR(failOn = {IRNode.STORE, IRNode.CALL})\n+    @IR(applyIfNot = {\"SuspendRetryCount\", \"20\"}, failOn = {IRNode.ALLOC})\n+    @IR(applyIfNot = {\"SuspendRetryCount\", \"< 100\"}, failOn = {IRNode.ALLOC_OF, \"Test\"})\n+    public void good2() {\n+        forceInline();\n+    }\n+\n+    @Test\n+    @IR(failOn = {IRNode.STORE_OF_CLASS, \"Test\", IRNode.CALL})\n+    @IR(applyIfNot = {\"SuspendRetryCount\", \"20\"}, failOn = {IRNode.ALLOC})\n+    @IR(applyIfNot = {\"SuspendRetryCount\", \"< 100\"}, failOn = {IRNode.ALLOC_OF, \"Test\"})\n+    public void good3() {\n+        forceInline();\n+    }\n+\n+    @Test\n+    @IR(failOn = {IRNode.CALL, IRNode.STORE_OF_CLASS, \"UnknownClass\"})\n+    public void good4() {\n+        iFld = 42;\n+    }\n+\n+    @Test\n+    @IR(failOn = {IRNode.STORE_OF_FIELD, \"xFld\", IRNode.CALL})\n+    public void good5() {\n+        iFld = 42;\n+    }\n+\n+    @Test\n+    @IR(failOn = {IRNode.STORE_OF_CLASS, \"MyClass\"}) \/\/ Needs exact match to fail\n+    public void good6() {\n+        myClassSub.iFld = 42;\n+    }\n+\n+    @Test\n+    @IR(failOn = {IRNode.STORE_OF_CLASS, \"MyClassSub\"}) \/\/ Static write is with Class and not MySubClass\n+    public void good7() {\n+        MyClassSub.iFldStatic = 42;\n+    }\n+\n+    @ForceInline\n+    private void forceInline() {}\n+}\n+\n+class MultipleFailOnBad {\n+    private int iFld;\n+    private int myInt;\n+    private MyClass myClass;\n+\n+    @Test\n+    @IR(failOn = {IRNode.STORE, IRNode.CALL, IRNode.STORE_I, IRNode.LOOP})\n+    public void fail1() {\n+        iFld = 42;\n+    }\n+\n+    @Test\n+    @IR(failOn = {IRNode.STORE, IRNode.CALL})\n+    public void fail2() {\n+        dontInline();\n+    }\n+\n+    @Test\n+    @IR(failOn = {IRNode.CALL, IRNode.STORE_OF_CLASS, \"MultipleFailOnBad\", IRNode.ALLOC})\n+    public void fail3() {\n+        iFld = 42;\n+    }\n+\n+    @Test\n+    @IR(failOn = {IRNode.STORE_OF_CLASS, \"jdk\/test\/lib\/hotspot\/ir_framework\/tests\/MultipleFailOnBad\", IRNode.CALL, IRNode.ALLOC})\n+    public void fail4() {\n+        iFld = 42;\n+    }\n+\n+    @Test\n+    @IR(failOn = {IRNode.STORE_OF_FIELD, \"iFld\", IRNode.CALL, IRNode.ALLOC})\n+    public void fail5() {\n+        iFld = 42;\n+    }\n+\n+    @Test\n+    @IR(failOn = {IRNode.STORE_OF_CLASS, \"MyClass\", IRNode.ALLOC, IRNode.CALL})\n+    public void fail6() {\n+        myClass = new MyClass();\n+    }\n+\n+    @Test\n+    @IR(failOn = {IRNode.STORE_OF_CLASS, \"UnknownClass\", IRNode.ALLOC_OF, \"MyClass\"})\n+    public void fail7() {\n+        myClass = new MyClass();\n+    }\n+\n+    @Test\n+    @IR(failOn = {IRNode.STORE_OF_CLASS, \"UnknownClass\", IRNode.ALLOC_OF, \"jdk\/test\/lib\/hotspot\/ir_framework\/tests\/MyClassSub\"})\n+    public void fail8() {\n+        myClass = new MyClassSub();\n+    }\n+\n+    @Test\n+    @IR(failOn = {IRNode.STORE, IRNode.CALL})\n+    public void fail9() {\n+        iFld = 42;\n+        dontInline();\n+    }\n+\n+    @Test\n+    @IR(failOn = {IRNode.STORE_OF_FIELD, \"iFld\", IRNode.CALL, IRNode.ALLOC})\n+    public void fail10() {\n+        myInt = 34;\n+        iFld = 42;\n+    }\n+\n+    @DontInline\n+    private void dontInline() {}\n+}\n+\n+\/\/ Called with -XX:SuspendRetryCount=X.\n+class FlagComparisons {\n+    \/\/ Applies all IR rules if SuspendRetryCount=50\n+    @Test\n+    @IR(failOn = IRNode.CALL, applyIf = {\"SuspendRetryCount\", \"50\"}) \/\/ Index 0\n+    @IR(failOn = IRNode.CALL, applyIf = {\"SuspendRetryCount\", \"=50\"})\n+    @IR(failOn = IRNode.CALL, applyIf = {\"SuspendRetryCount\", \"= 50\"})\n+    @IR(failOn = IRNode.CALL, applyIf = {\"SuspendRetryCount\", \" =   50\"})\n+    @IR(failOn = IRNode.CALL, applyIf = {\"SuspendRetryCount\", \"<=50\"}) \/\/ Index 4\n+    @IR(failOn = IRNode.CALL, applyIf = {\"SuspendRetryCount\", \"<= 50\"})\n+    @IR(failOn = IRNode.CALL, applyIf = {\"SuspendRetryCount\", \" <=  50\"})\n+    @IR(failOn = IRNode.CALL, applyIf = {\"SuspendRetryCount\", \">=50\"}) \/\/ Index 7\n+    @IR(failOn = IRNode.CALL, applyIf = {\"SuspendRetryCount\", \">= 50\"})\n+    @IR(failOn = IRNode.CALL, applyIf = {\"SuspendRetryCount\", \" >=  50\"})\n+    @IR(failOn = IRNode.CALL, applyIf = {\"SuspendRetryCount\", \">49\"})\n+    @IR(failOn = IRNode.CALL, applyIf = {\"SuspendRetryCount\", \"> 49\"})\n+    @IR(failOn = IRNode.CALL, applyIf = {\"SuspendRetryCount\", \" >  49\"})\n+    @IR(failOn = IRNode.CALL, applyIf = {\"SuspendRetryCount\", \"<51\"}) \/\/ Index 13\n+    @IR(failOn = IRNode.CALL, applyIf = {\"SuspendRetryCount\", \"< 51\"})\n+    @IR(failOn = IRNode.CALL, applyIf = {\"SuspendRetryCount\", \" <  51\"})\n+    @IR(failOn = IRNode.CALL, applyIf = {\"SuspendRetryCount\", \"!=51\"})\n+    @IR(failOn = IRNode.CALL, applyIf = {\"SuspendRetryCount\", \"!= 51\"})\n+    @IR(failOn = IRNode.CALL, applyIf = {\"SuspendRetryCount\", \" !=  51\"})\n+    @IR(failOn = IRNode.CALL, applyIf = {\"SuspendRetryCount\", \"!=49\"})\n+    @IR(failOn = IRNode.CALL, applyIf = {\"SuspendRetryCount\", \"!= 49\"})\n+    @IR(failOn = IRNode.CALL, applyIf = {\"SuspendRetryCount\", \" !=  49\"}) \/\/ Index 21\n+    public void testMatchAllIf50() {}\n+\n+    \/\/ Applies no IR rules if SuspendRetryCount=50\n+    @Test\n+    @IR(failOn = IRNode.CALL, applyIf = {\"SuspendRetryCount\", \"49\"}) \/\/ Index 0\n+    @IR(failOn = IRNode.CALL, applyIf = {\"SuspendRetryCount\", \"=49\"})\n+    @IR(failOn = IRNode.CALL, applyIf = {\"SuspendRetryCount\", \"= 49\"})\n+    @IR(failOn = IRNode.CALL, applyIf = {\"SuspendRetryCount\", \" =  49\"})\n+    @IR(failOn = IRNode.CALL, applyIf = {\"SuspendRetryCount\", \"51\"}) \/\/ Index 4\n+    @IR(failOn = IRNode.CALL, applyIf = {\"SuspendRetryCount\", \"=51\"})\n+    @IR(failOn = IRNode.CALL, applyIf = {\"SuspendRetryCount\", \"= 51\"})\n+    @IR(failOn = IRNode.CALL, applyIf = {\"SuspendRetryCount\", \" =  51\"})\n+    @IR(failOn = IRNode.CALL, applyIf = {\"SuspendRetryCount\", \"<=49\"}) \/\/ Index 8\n+    @IR(failOn = IRNode.CALL, applyIf = {\"SuspendRetryCount\", \"<= 49\"})\n+    @IR(failOn = IRNode.CALL, applyIf = {\"SuspendRetryCount\", \" <=  49\"})\n+    @IR(failOn = IRNode.CALL, applyIf = {\"SuspendRetryCount\", \">=51\"}) \/\/ Index 11\n+    @IR(failOn = IRNode.CALL, applyIf = {\"SuspendRetryCount\", \">= 51\"})\n+    @IR(failOn = IRNode.CALL, applyIf = {\"SuspendRetryCount\", \" >=  51\"})\n+    @IR(failOn = IRNode.CALL, applyIf = {\"SuspendRetryCount\", \">50\"})\n+    @IR(failOn = IRNode.CALL, applyIf = {\"SuspendRetryCount\", \"> 50\"})\n+    @IR(failOn = IRNode.CALL, applyIf = {\"SuspendRetryCount\", \" >  50\"})\n+    @IR(failOn = IRNode.CALL, applyIf = {\"SuspendRetryCount\", \"<50\"}) \/\/ Index 17\n+    @IR(failOn = IRNode.CALL, applyIf = {\"SuspendRetryCount\", \"< 50\"})\n+    @IR(failOn = IRNode.CALL, applyIf = {\"SuspendRetryCount\", \" <  50\"})\n+    @IR(failOn = IRNode.CALL, applyIf = {\"SuspendRetryCount\", \"!=50\"})\n+    @IR(failOn = IRNode.CALL, applyIf = {\"SuspendRetryCount\", \"!= 50\"})\n+    @IR(failOn = IRNode.CALL, applyIf = {\"SuspendRetryCount\", \" !=  50\"}) \/\/ Index 22\n+    public void testMatchNoneIf50() {}\n+}\n+\n+class CountComparisons {\n+    int iFld;\n+\n+    @Test\n+    @IR(counts = {IRNode.STORE, \"= 1\",\n+                  IRNode.STORE, \"=1\",\n+                  IRNode.STORE, \" = 1\",\n+                  IRNode.STORE, \"  =  1\",\n+                  IRNode.STORE, \">= 1\",\n+                  IRNode.STORE, \">=1\",\n+                  IRNode.STORE, \" >= 1\",\n+                  IRNode.STORE, \"  >=  1\",\n+                  IRNode.STORE, \"<= 1\",\n+                  IRNode.STORE, \"<=1\",\n+                  IRNode.STORE, \" <= 1\",\n+                  IRNode.STORE, \"  <=  1\",\n+                  IRNode.STORE, \"!= 0\",\n+                  IRNode.STORE, \"!=0\",\n+                  IRNode.STORE, \" != 0\",\n+                  IRNode.STORE, \"  !=  0\",\n+                  IRNode.STORE, \"> 0\",\n+                  IRNode.STORE, \">0\",\n+                  IRNode.STORE, \" > 0\",\n+                  IRNode.STORE, \"  >  0\",\n+                  IRNode.STORE, \"< 2\",\n+                  IRNode.STORE, \"<2\",\n+                  IRNode.STORE, \" < 2\",\n+                  IRNode.STORE, \"  <  2\",\n+    })\n+    public void countComparison() {\n+        iFld = 3;\n+    }\n+}\n+\n+class GoodCount {\n+    boolean flag;\n+    char cFld;\n+    byte bFld;\n+    short sFld;\n+    int iFld;\n+    long lFld;\n+    float fFld;\n+    double dFld;\n+    long x;\n+\n+    long result;\n+    MyClass myClass = new MyClass();\n+    MyClass myClassSubPoly = new MyClassSub();\n+    MyClassSub myClassSub = new MyClassSub();\n+\n+    @Test\n+    @IR(counts = {IRNode.STORE, \"1\", IRNode.STORE_I, \"1\"},\n+        failOn = {IRNode.STORE_B, IRNode.STORE_C, IRNode.STORE_D,\n+                  IRNode.STORE_F, IRNode.STORE_L})\n+    public void good1() {\n+        iFld = 3;\n+    }\n+\n+    @Test\n+    @IR(counts = {IRNode.STORE, \"8\",\n+                  IRNode.STORE_B, \"2\", \/\/ bFld + flag\n+                  IRNode.STORE_C, \"2\", \/\/ cFld + sFld\n+                  IRNode.STORE_I, \"1\",\n+                  IRNode.STORE_L, \"1\",\n+                  IRNode.STORE_F, \"1\",\n+                  IRNode.STORE_D, \"1\"})\n+    public void good2() {\n+        flag = true;\n+        cFld = 'a';\n+        bFld = 1;\n+        sFld = 2;\n+        iFld = 3;\n+        lFld = 4L;\n+        fFld = 5.0f;\n+        dFld = 6.0;\n+    }\n+\n+    @Test\n+    @IR(counts = {IRNode.STORE, \"8\", IRNode.STORE_OF_CLASS, \"GoodCount\", \"8\",\n+                  IRNode.STORE_B, \"2\", IRNode.STORE_B_OF_CLASS, \"GoodCount\", \"2\",\n+                  IRNode.STORE_C, \"2\", IRNode.STORE_C_OF_CLASS, \"GoodCount\", \"2\",\n+                  IRNode.STORE_I, \"1\", IRNode.STORE_I_OF_CLASS, \"GoodCount\", \"1\",\n+                  IRNode.STORE_L, \"1\", IRNode.STORE_L_OF_CLASS, \"GoodCount\", \"1\",\n+                  IRNode.STORE_F, \"1\", IRNode.STORE_F_OF_CLASS, \"GoodCount\", \"1\",\n+                  IRNode.STORE_D, \"1\", IRNode.STORE_D_OF_CLASS, \"GoodCount\", \"1\"})\n+    public void good3() {\n+        flag = true;\n+        cFld = 'a';\n+        bFld = 1;\n+        sFld = 2;\n+        iFld = 3;\n+        lFld = 4L;\n+        fFld = 5.0f;\n+        dFld = 6.0;\n+    }\n+\n+    @Test\n+    @IR(counts = {IRNode.STORE, \"8\", IRNode.STORE_OF_CLASS, \"GoodCount\", \"8\",\n+                  IRNode.STORE_B, \"2\", IRNode.STORE_B_OF_CLASS, \"GoodCount\", \"2\",\n+                  IRNode.STORE_C, \"2\", IRNode.STORE_C_OF_CLASS, \"GoodCount\", \"2\",\n+                  IRNode.STORE_I, \"1\", IRNode.STORE_I_OF_CLASS, \"GoodCount\", \"1\",\n+                  IRNode.STORE_L, \"1\", IRNode.STORE_L_OF_CLASS, \"GoodCount\", \"1\",\n+                  IRNode.STORE_F, \"1\", IRNode.STORE_F_OF_CLASS, \"GoodCount\", \"1\",\n+                  IRNode.STORE_D, \"1\", IRNode.STORE_D_OF_CLASS, \"GoodCount\", \"1\",\n+                  IRNode.STORE_OF_FIELD, \"lFld\", \"1\"})\n+    public void good4() {\n+        flag = true;\n+        cFld = 'a';\n+        bFld = 1;\n+        sFld = 2;\n+        iFld = 3;\n+        lFld = 4L;\n+        fFld = 5.0f;\n+        dFld = 6.0;\n+    }\n+\n+    @Test\n+    @IR(counts = {IRNode.STORE, \"2\", IRNode.STORE_I, \"1\", IRNode.STORE_L, \"1\",\n+                  IRNode.STORE_OF_CLASS, \"GoodCount\", \"1\", IRNode.STORE_L_OF_CLASS, \"GoodCount\", \"1\",\n+                  IRNode.STORE_OF_CLASS, \"jdk\/test\/lib\/hotspot\/ir_framework\/tests\/MyClass\", \"1\",\n+                  IRNode.STORE_I_OF_CLASS, \"jdk\/test\/lib\/hotspot\/ir_framework\/tests\/MyClass\", \"1\",\n+                  IRNode.STORE_OF_CLASS, \"jdk\/test\/lib\/hotspot\/ir_framework\/tests\/GoodCount\", \"1\",\n+                  IRNode.STORE_L_OF_CLASS, \"jdk\/test\/lib\/hotspot\/ir_framework\/tests\/GoodCount\", \"1\",\n+                  IRNode.STORE_OF_FIELD, \"x\", \"2\"})\n+    public void good5() {\n+        x = 3; \/\/ long\n+        myClass.x = 4; \/\/ int\n+    }\n+\n+    @Test\n+    @IR(counts = {IRNode.STORE_OF_FIELD, \"myClass\", \"1\", IRNode.STORE_OF_CLASS, \"GoodCount\", \"1\",\n+                  IRNode.STORE_OF_CLASS, \"\/GoodCount\", \"1\", IRNode.STORE_OF_CLASS, \"MyClass\", \"0\"},\n+        failOn = {IRNode.STORE_OF_CLASS, \"MyClass\"})\n+    public void good6() {\n+        myClass = new MyClass();\n+    }\n+\n+    @Test\n+    @IR(counts = {IRNode.STORE_OF_FIELD, \"iFld\", \"3\", IRNode.STORE_OF_CLASS, \"GoodCount\", \"0\",\n+                  IRNode.STORE_OF_CLASS, \"MyClass\", \"2\", IRNode.STORE_OF_CLASS, \"MyClassSub\", \"1\",\n+                  IRNode.STORE, \"3\"},\n+        failOn = {IRNode.STORE_OF_CLASS, \"GoodCount\"})\n+    public void good7() {\n+        myClass.iFld = 1;\n+        myClassSubPoly.iFld = 2;\n+        myClassSub.iFld = 3;\n+    }\n+\n+    @Test\n+    @IR(counts = {IRNode.LOAD, \"1\", IRNode.STORE, \"1\"})\n+    public void good8() {\n+        result = iFld;\n+    }\n+\n+\n+    @Test\n+    @IR(counts = {IRNode.LOAD, \"4\", IRNode.STORE, \"1\", IRNode.LOAD_OF_FIELD, \"iFld\", \"2\", IRNode.LOAD_OF_FIELD, \"iFld2\", \"0\",\n+                  IRNode.LOAD_OF_FIELD, \"lFldStatic\", \"1\", IRNode.LOAD_OF_CLASS, \"GoodCount\", \"2\", IRNode.LOAD_OF_CLASS, \"MyClass\", \"1\",\n+                  IRNode.STORE_OF_CLASS, \"GoodCount\", \"1\", IRNode.STORE_OF_FIELD, \"result\", \"1\",\n+                  IRNode.LOAD_OF_FIELD, \"myClass\", \"1\"})\n+    public void good9() {\n+        result = iFld + MyClass.lFldStatic + myClass.iFld; \/\/ 1 + 1 + 2 loads (myClass is LoadN of GoodCount and myClass.iFld a LoadI of MyClass)\n+    }\n+\n+    @Test\n+    @IR(counts = {IRNode.LOAD, \"8\",\n+                  IRNode.LOAD_B, \"1\",\n+                  IRNode.LOAD_UB, \"1\",\n+                  IRNode.LOAD_S, \"1\",\n+                  IRNode.LOAD_US, \"1\",\n+                  IRNode.LOAD_I, \"1\",\n+                  IRNode.LOAD_L, \"1\",\n+                  IRNode.LOAD_F, \"1\",\n+                  IRNode.LOAD_D, \"1\"})\n+    public void good10() {\n+        bFld++;\n+        cFld++;\n+        sFld++;\n+        iFld++;\n+        lFld++;\n+        fFld++;\n+        dFld++;\n+        flag = !flag;\n+    }\n+\n+    @Test\n+    @IR(counts = {IRNode.LOAD, \"8\", IRNode.LOAD_OF_CLASS, \"GoodCount\", \"8\",\n+                  IRNode.LOAD_B, \"1\", IRNode.LOAD_B_OF_CLASS, \"GoodCount\", \"1\",\n+                  IRNode.LOAD_UB, \"1\", IRNode.LOAD_UB_OF_CLASS, \"GoodCount\", \"1\",\n+                  IRNode.LOAD_S, \"1\", IRNode.LOAD_S_OF_CLASS, \"GoodCount\", \"1\",\n+                  IRNode.LOAD_US, \"1\", IRNode.LOAD_US_OF_CLASS, \"GoodCount\", \"1\",\n+                  IRNode.LOAD_I, \"1\", IRNode.LOAD_I_OF_CLASS, \"GoodCount\", \"1\",\n+                  IRNode.LOAD_L, \"1\", IRNode.LOAD_L_OF_CLASS, \"GoodCount\", \"1\",\n+                  IRNode.LOAD_F, \"1\", IRNode.LOAD_F_OF_CLASS, \"GoodCount\", \"1\",\n+                  IRNode.LOAD_D, \"1\", IRNode.LOAD_D_OF_CLASS, \"GoodCount\", \"1\"})\n+    public void good11() {\n+        bFld++;\n+        cFld++;\n+        sFld++;\n+        iFld++;\n+        lFld++;\n+        fFld++;\n+        dFld++;\n+        flag = !flag;\n+    }\n+}\n+\n+class BadCount {\n+    int iFld;\n+    int result;\n+    @Test\n+    @IR(counts = {IRNode.LOAD, \"!= 1\"})\n+    @IR(counts = {IRNode.STORE, \"> 0\"})\n+    public void bad1() {\n+        result = iFld;\n+    }\n+\n+    @Test\n+    @IR(counts = {IRNode.LOAD, \"1\"})\n+    @IR(counts = {IRNode.STORE, \"< 1\"})\n+    public void bad2() {\n+        result = iFld;\n+    }\n+\n+\n+    @Test\n+    @IR(counts = {IRNode.LOAD, \"0\"})\n+    @IR(counts = {IRNode.STORE, \" <= 0\"})\n+    public void bad3() {\n+        result = iFld;\n+    }\n+}\n+\n+\n+class RunTests {\n+    public int iFld;\n+\n+    @Test\n+    @IR(counts = {IRNode.STORE, \"1\"})\n+    @IR(failOn = IRNode.LOAD)\n+    public void good1() {\n+        iFld = 42;\n+    }\n+\n+    @Test\n+    @IR(counts = {IRNode.LOAD, \"1\"})\n+    @IR(failOn = IRNode.STORE)\n+    public int good2() {\n+        return iFld;\n+    }\n+\n+    @Run(test = {\"good1\", \"good2\"})\n+    public void runGood1() {\n+        good1();\n+        good2();\n+    }\n+\n+\n+    @Test\n+    @IR(counts = {IRNode.STORE, \"1\"})\n+    @IR(failOn = IRNode.LOAD)\n+    public void good3(int x) {\n+        iFld = x;\n+    }\n+\n+    @Test\n+    @IR(counts = {IRNode.STORE, \"1\"})\n+    @IR(failOn = IRNode.LOAD)\n+    public int bad1(int x) {\n+        return iFld + x;\n+    }\n+\n+    @Run(test = {\"bad1\", \"good3\"})\n+    public void run() {\n+        bad1(2);\n+        good3(4);\n+    }\n+}\n+\n+\n+class AllocArray {\n+    MyClass[] myClassArray;\n+\n+    @Test\n+    @IR(failOn = {IRNode.ALLOC_ARRAY})\n+    @IR(failOn = {IRNode.ALLOC_ARRAY_OF, \"MyClass\"})\n+    @IR(failOn = {IRNode.ALLOC_ARRAY_OF, \"MyClasss\"}) \/\/ Does not fail\n+    @IR(failOn = {IRNode.ALLOC_ARRAY_OF, \"jdk\/test\/lib\/hotspot\/ir_framework\/tests\/MySubClass\"}) \/\/ Does not fail\n+    @IR(failOn = {IRNode.ALLOC_ARRAY_OF, \"jdk\/test\/lib\/hotspot\/ir_framework\/tests\/MyClass\"})\n+    public void allocArray() {\n+        myClassArray = new MyClass[2];\n+    }\n+}\n+\n+class Loads {\n+    int iFld = 34;\n+    int result = 0;\n+    Object myClass = new MyClass();\n+\n+    @Test\n+    @IR(failOn = {IRNode.LOAD, IRNode.LOOP, IRNode.LOAD_I}, counts = {IRNode.LOOP, \"2\", IRNode.LOAD, \"2\", IRNode.STORE, \"2\"})\n+    @IR(failOn = {IRNode.LOOP, IRNode.LOOP}, counts = {IRNode.LOOP, \"0\", IRNode.LOAD, \"1\"}) \/\/ Does not fail\n+    @IR(failOn = {IRNode.LOOP, IRNode.LOOP}, counts = {IRNode.LOOP, \"0\", IRNode.STORE, \"1\"})\n+    @IR(failOn = {IRNode.LOOP, IRNode.STORE}, counts = {IRNode.LOOP, \"0\", IRNode.LOAD, \"1\"})\n+    @IR(failOn = {IRNode.LOAD_OF_CLASS, \"jdk\/test\/lib\/hotspot\/ir_framework\/tests\/Loads\"})\n+    @IR(failOn = {IRNode.LOAD_OF_CLASS, \"Loads\"})\n+    @IR(failOn = {IRNode.LOAD_OF_FIELD, \"iFld\"})\n+    @IR(failOn = {IRNode.LOAD_OF_FIELD, \"iFld2\", IRNode.LOAD_OF_CLASS, \"Load\"}) \/\/ Does not fail\n+    @IR(failOn = {IRNode.LOAD_KLASS}) \/\/ Does not fail\n+    @IR(counts = {IRNode.FIELD_ACCESS, \"3\"}) \/\/ Does not fail\n+    public void load() {\n+        result = iFld;\n+        iFld = 3;\n+    }\n+\n+    @Test\n+    @IR(failOn = {IRNode.LOAD_KLASS})\n+    @IR(counts = {IRNode.FIELD_ACCESS, \"3\"})\n+    public void loadKlass() {\n+        if (myClass instanceof MyClass) {\n+            result = 3;\n+        }\n+    }\n+}\n+\n+class Loops {\n+    int limit = 1024;\n+    int[] iArr = new int[100];\n+\n+    @DontInline\n+    public void dontInline() {}\n+\n+    @Test\n+    @IR(failOn = IRNode.LOOP) \/\/ fails\n+    @IR(failOn = IRNode.COUNTEDLOOP)\n+    @IR(failOn = IRNode.COUNTEDLOOP_MAIN)\n+    public void loop() {\n+        for (int i = 0; i < limit; i++) {\n+            dontInline();\n+        }\n+    }\n+\n+    @Test\n+    @IR(failOn = IRNode.LOOP)\n+    @IR(failOn = IRNode.COUNTEDLOOP) \/\/ fails\n+    @IR(failOn = IRNode.COUNTEDLOOP_MAIN)\n+    public void countedLoop() {\n+        for (int i = 0; i < 2000; i++) {\n+            dontInline();\n+        }\n+    }\n+\n+    @Test\n+    @IR(failOn = IRNode.LOOP) \/\/ fails\n+    @IR(failOn = IRNode.COUNTEDLOOP) \/\/ fails\n+    @IR(failOn = IRNode.COUNTEDLOOP_MAIN)\n+    public void loopAndCountedLoop() {\n+        for (int i = 0; i < 2000; i++) {\n+            for (int j = 0; j < limit; j++) {\n+                dontInline();\n+            }\n+        }\n+    }\n+\n+    @Test\n+    @IR(failOn = IRNode.LOOP)\n+    @IR(failOn = IRNode.COUNTEDLOOP) \/\/ fails\n+    @IR(failOn = IRNode.COUNTEDLOOP_MAIN) \/\/ fails\n+    public void countedLoopMain() {\n+        \/\/ Cannot unroll completely -> create pre\/main\/post\n+        for (int i = 0; i < 100; i++) {\n+            iArr[i] = i;\n+        }\n+    }\n+\n+    @Test\n+    @IR(failOn = IRNode.LOOP)\n+    @IR(failOn = IRNode.COUNTEDLOOP)\n+    @IR(failOn = IRNode.COUNTEDLOOP_MAIN)\n+    public void countedLoopUnrolled() {\n+        \/\/ Completely unrolled -> no pre\/main\/post\n+        for (int i = 0; i < 8; i++) {\n+            iArr[i] = i;\n+        }\n+    }\n+}\n+\n+class Traps {\n+    int number42 = 42;\n+    int iFld = 10;\n+    int[] iArr = new int[2];\n+    MyClass myClass = new MyClass();\n+    MyClassSub myClassSub = new MyClassSub();\n+    NotLoaded notLoaded = new NotLoaded();\n+    Object[] oArr = new Object[10];\n+    MyClass[] mArr = new MyClass[10];\n+\n+    @Test\n+    @IR(failOn = IRNode.TRAP)\n+    @IR(failOn = {IRNode.STORE_OF_FIELD, \"iFld\"}) \/\/ fails\n+    @IR(failOn = {IRNode.PREDICATE_TRAP,\n+                  IRNode.UNSTABLE_IF_TRAP,\n+                  IRNode.NULL_CHECK_TRAP,\n+                  IRNode.NULL_ASSERT_TRAP,\n+                  IRNode.RANGE_CHECK_TRAP,\n+                  IRNode.CLASS_CHECK_TRAP,\n+                  IRNode.INTRINSIC_OR_TYPE_CHECKED_INLINING_TRAP,\n+                  IRNode.UNHANDLED_TRAP})\n+    public void noTraps() {\n+        for (int i = 0; i < 100; i++) {\n+            if (i < 42) {\n+                \/\/ Reached, no uncommon trap\n+                iFld = i;\n+            }\n+        }\n+    }\n+\n+    @Test\n+    @IR(failOn = IRNode.TRAP) \/\/ fails\n+    @IR(failOn = IRNode.PREDICATE_TRAP) \/\/ fails\n+    @IR(failOn = {IRNode.STORE_OF_FIELD, \"iFld\"})\n+    @IR(failOn = {IRNode.UNSTABLE_IF_TRAP,\n+                  IRNode.NULL_CHECK_TRAP,\n+                  IRNode.NULL_ASSERT_TRAP,\n+                  IRNode.RANGE_CHECK_TRAP,\n+                  IRNode.CLASS_CHECK_TRAP,\n+                  IRNode.INTRINSIC_OR_TYPE_CHECKED_INLINING_TRAP,\n+                  IRNode.UNHANDLED_TRAP})\n+    public void predicateTrap() {\n+        for (int i = 0; i < 100; i++) {\n+            if (number42 != 42) {\n+                \/\/ Never reached\n+                iFld = i;\n+            }\n+        }\n+    }\n+\n+    @Test\n+    @IR(failOn = IRNode.TRAP) \/\/ fails\n+    @IR(failOn = IRNode.NULL_CHECK_TRAP) \/\/ fails\n+    @IR(failOn = IRNode.UNSTABLE_IF_TRAP) \/\/ fails\n+    @IR(failOn = {IRNode.PREDICATE_TRAP,\n+                  IRNode.NULL_ASSERT_TRAP,\n+                  IRNode.RANGE_CHECK_TRAP,\n+                  IRNode.CLASS_CHECK_TRAP,\n+                  IRNode.INTRINSIC_OR_TYPE_CHECKED_INLINING_TRAP,\n+                  IRNode.UNHANDLED_TRAP})\n+    public void nullCheck() {\n+        if (myClass instanceof MyClassSub) {\n+            iFld = 4;\n+        }\n+    }\n+\n+    @Test\n+    @IR(failOn = IRNode.TRAP) \/\/ fails\n+    @IR(failOn = IRNode.NULL_ASSERT_TRAP) \/\/ fails\n+    @IR(failOn = IRNode.NULL_CHECK_TRAP) \/\/ fails\n+    @IR(failOn = {IRNode.PREDICATE_TRAP,\n+                  IRNode.UNSTABLE_IF_TRAP,\n+                  IRNode.RANGE_CHECK_TRAP,\n+                  IRNode.CLASS_CHECK_TRAP,\n+                  IRNode.INTRINSIC_OR_TYPE_CHECKED_INLINING_TRAP,\n+                  IRNode.UNHANDLED_TRAP})\n+    public Object nullAssert() {\n+        return notLoaded.notLoadedFld;\n+    }\n+\n+    @Test\n+    @Arguments(Argument.TRUE)\n+    @IR(failOn = IRNode.TRAP) \/\/ fails\n+    @IR(failOn = IRNode.UNSTABLE_IF_TRAP) \/\/ fails\n+    @IR(failOn = {IRNode.PREDICATE_TRAP,\n+                  IRNode.NULL_CHECK_TRAP,\n+                  IRNode.NULL_ASSERT_TRAP,\n+                  IRNode.RANGE_CHECK_TRAP,\n+                  IRNode.CLASS_CHECK_TRAP,\n+                  IRNode.INTRINSIC_OR_TYPE_CHECKED_INLINING_TRAP,\n+                  IRNode.UNHANDLED_TRAP})\n+    public void unstableIf(boolean flag) {\n+        if (flag) {\n+            iFld++;\n+        } else {\n+            iFld--;\n+        }\n+    }\n+\n+    @Test\n+    @IR(failOn = IRNode.TRAP) \/\/ fails\n+    @IR(failOn = IRNode.CLASS_CHECK_TRAP) \/\/ fails\n+    @IR(failOn = IRNode.NULL_CHECK_TRAP) \/\/ fails\n+    @IR(failOn = {IRNode.PREDICATE_TRAP,\n+                  IRNode.UNSTABLE_IF_TRAP,\n+                  IRNode.NULL_ASSERT_TRAP,\n+                  IRNode.RANGE_CHECK_TRAP,\n+                  IRNode.INTRINSIC_OR_TYPE_CHECKED_INLINING_TRAP,\n+                  IRNode.UNHANDLED_TRAP})\n+    public void classCheck() {\n+        try {\n+            myClassSub = (MyClassSub) myClass;\n+        } catch (ClassCastException e) {\n+            \/\/ Expected\n+        }\n+    }\n+\n+    @Test\n+    @IR(failOn = IRNode.TRAP) \/\/ fails\n+    @IR(failOn = IRNode.RANGE_CHECK_TRAP) \/\/ fails\n+    @IR(failOn = IRNode.NULL_CHECK_TRAP) \/\/ fails\n+    @IR(failOn = {IRNode.PREDICATE_TRAP,\n+                  IRNode.UNSTABLE_IF_TRAP,\n+                  IRNode.NULL_ASSERT_TRAP,\n+                  IRNode.CLASS_CHECK_TRAP,\n+                  IRNode.INTRINSIC_OR_TYPE_CHECKED_INLINING_TRAP,\n+                  IRNode.UNHANDLED_TRAP})\n+    public void rangeCheck() {\n+        iArr[1] = 3;\n+    }\n+\n+\n+    @Test\n+    @IR(failOn = IRNode.TRAP) \/\/ fails\n+    @IR(failOn = IRNode.INTRINSIC_OR_TYPE_CHECKED_INLINING_TRAP) \/\/ fails\n+    @IR(failOn = IRNode.NULL_CHECK_TRAP) \/\/ fails\n+    @IR(failOn = {IRNode.PREDICATE_TRAP,\n+                  IRNode.UNSTABLE_IF_TRAP,\n+                  IRNode.NULL_ASSERT_TRAP,\n+                  IRNode.CLASS_CHECK_TRAP,\n+                  IRNode.RANGE_CHECK_TRAP,\n+                  IRNode.UNHANDLED_TRAP})\n+    public void instrinsicOrTypeCheckedInlining() {\n+        System.arraycopy(oArr, 0, mArr, 0, 8);\n+    }\n+}\n+\n+class UnhandledTrap {\n+    int iFld = 34;\n+\n+    @Test\n+    @IR(failOn = IRNode.TRAP) \/\/ fails\n+    @IR(failOn = IRNode.UNHANDLED_TRAP) \/\/ fails\n+    @IR(failOn = {IRNode.PREDICATE_TRAP,\n+                  IRNode.UNSTABLE_IF_TRAP,\n+                  IRNode.NULL_CHECK_TRAP,\n+                  IRNode.NULL_ASSERT_TRAP,\n+                  IRNode.RANGE_CHECK_TRAP,\n+                  IRNode.CLASS_CHECK_TRAP})\n+    public void unhandled() {\n+        try {\n+            throw new RuntimeException();\n+        } catch (RuntimeException e) {\n+            \/\/ Expected\n+        }\n+    }\n+}\n+\n+class ScopeObj {\n+\n+    @DontInline\n+    public void dontInline(int i) {}\n+\n+    @Test\n+    @IR(failOn = IRNode.SCOPE_OBJECT) \/\/ fails\n+    public int scopeObject() {\n+        MyClass myClass = new MyClass();\n+        for (int i = 0; i < 100; i++) {\n+            dontInline(myClass.iFld);\n+        }\n+        return 3;\n+    }\n+}\n+\n+class Membar {\n+    volatile MyClass myClass;\n+\n+    @Test\n+    @IR(failOn = IRNode.MEMBAR) \/\/ fails\n+    public int membar() {\n+        myClass = new MyClass();\n+        return myClass.x;\n+    }\n+}\n+\n+class CheckCastArray {\n+    Object[] oArr = new Object[10];\n+    MyClass[] mArr = new MyClass[10];\n+\n+    @Test\n+    @IR(failOn = IRNode.CHECKCAST_ARRAY) \/\/ fails\n+    @IR(failOn = {IRNode.CHECKCAST_ARRAY_OF, \"MyClass\", \/\/ fails\n+                  IRNode.CHECKCAST_ARRAY_OF, \"tests\/MyClass\"}) \/\/ fails\n+    @IR(failOn = {IRNode.CHECKCAST_ARRAY_OF, \"MyClasss\", IRNode.CHECKCAST_ARRAY_OF, \"Object\"})\n+    public boolean array() {\n+        return oArr instanceof MyClass[];\n+    }\n+\n+    @Test\n+    @IR(failOn = IRNode.CHECKCAST_ARRAYCOPY) \/\/ fails\n+    public Object[] arrayCopy(Object[] src, Class klass) {\n+        return Arrays.copyOf(src, 8, klass);\n+    }\n+\n+    @Run(test = \"arrayCopy\")\n+    public void testArrayCopy() {\n+        arrayCopy(mArr, MyClass[].class);\n+        arrayCopy(mArr, Object[].class);\n+        arrayCopy(mArr, MyClass2[].class);\n+    }\n+}\n+\n+class CompilationOutputOfFails {\n+\n+    @Test\n+    @IR(failOn = IRNode.COUNTEDLOOP + \"[\\\\s\\\\S]*\" + \"call\")\n+    public void both1() {\n+        for (int i = 0; i < 100; i++) {\n+            dontInline();\n+        }\n+    }\n+\n+    @Test\n+    @IR(failOn = IRNode.COUNTEDLOOP + \"|\" + \"call\")\n+    public void both2() {\n+        for (int i = 0; i < 100; i++) {\n+            dontInline();\n+        }\n+    }\n+\n+    @Test\n+    @IR(failOn = IRNode.COUNTEDLOOP)\n+    @IR(failOn = \"call\")\n+    public void both3() {\n+        for (int i = 0; i < 100; i++) {\n+            dontInline();\n+        }\n+    }\n+\n+    @Test\n+    @IR(counts = {IRNode.COUNTEDLOOP + \"[\\\\s\\\\S]*\" + \"call\", \"0\"})\n+    public void both4() {\n+        for (int i = 0; i < 100; i++) {\n+            dontInline();\n+        }\n+    }\n+\n+    @Test\n+    @IR(counts = {IRNode.COUNTEDLOOP + \"|\" + \"call\", \"1\"})\n+    public void both5() {\n+        for (int i = 0; i < 100; i++) {\n+            dontInline();\n+        }\n+    }\n+\n+    @Test\n+    @IR(counts = {IRNode.COUNTEDLOOP, \"0\"})\n+    @IR(counts = {\"call\", \"1\"})\n+    public void both6() {\n+        for (int i = 0; i < 100; i++) {\n+            dontInline();\n+        }\n+    }\n+\n+    @Test\n+    @IR(failOn = IRNode.COUNTEDLOOP)\n+    @IR(counts = {\"call\", \"1\"})\n+    public void both7() {\n+        for (int i = 0; i < 100; i++) {\n+            dontInline();\n+        }\n+    }\n+\n+    @Test\n+    @IR(failOn = IRNode.COUNTEDLOOP)\n+    public void ideal1() {\n+        for (int i = 0; i < 100; i++) {\n+            dontInline();\n+        }\n+    }\n+\n+    @Test\n+    @IR(failOn = IRNode.COUNTEDLOOP)\n+    @IR(failOn = IRNode.ALLOC) \/\/ not fail\n+    public void ideal2() {\n+        for (int i = 0; i < 100; i++) {\n+            dontInline();\n+        }\n+    }\n+\n+    @Test\n+    @IR(failOn = IRNode.COUNTEDLOOP)\n+    @IR(counts = {IRNode.ALLOC, \"0\"}) \/\/ not fail\n+    public void ideal3() {\n+        for (int i = 0; i < 100; i++) {\n+            dontInline();\n+        }\n+    }\n+\n+    @Test\n+    @IR(counts = {IRNode.COUNTEDLOOP, \"2\"})\n+    public void ideal4() {\n+        for (int i = 0; i < 100; i++) {\n+            dontInline();\n+        }\n+    }\n+\n+    @Test\n+    @IR(failOn = IRNode.ALLOC) \/\/ not fail\n+    @IR(counts = {IRNode.COUNTEDLOOP, \"2\"})\n+    public void ideal5() {\n+        for (int i = 0; i < 100; i++) {\n+            dontInline();\n+        }\n+    }\n+\n+    @Test\n+    @IR(counts = {IRNode.ALLOC, \"0\"}) \/\/ not fail\n+    @IR(counts = {IRNode.COUNTEDLOOP, \"2\"})\n+    public void ideal6() {\n+        for (int i = 0; i < 100; i++) {\n+            dontInline();\n+        }\n+    }\n+\n+    @Test\n+    @IR(counts = {IRNode.COUNTEDLOOP, \"5\"})\n+    @IR(counts = {IRNode.COUNTEDLOOP, \"2\"})\n+    public void ideal7() {\n+        for (int i = 0; i < 100; i++) {\n+            dontInline();\n+        }\n+    }\n+\n+    @Test\n+    @IR(failOn = \"call\")\n+    public void opto1() {\n+        for (int i = 0; i < 100; i++) {\n+            dontInline();\n+        }\n+    }\n+\n+    @Test\n+    @IR(failOn = \"call\")\n+    @IR(failOn = IRNode.STORE) \/\/ not fail\n+    public void opto2() {\n+        for (int i = 0; i < 100; i++) {\n+            dontInline();\n+        }\n+    }\n+\n+    @Test\n+    @IR(failOn = \"call\")\n+    @IR(counts = {IRNode.COUNTEDLOOP, \"1\"}) \/\/ not fail\n+    public void opto3() {\n+        for (int i = 0; i < 100; i++) {\n+            dontInline();\n+        }\n+    }\n+\n+    @Test\n+    @IR(counts = {\"call\", \"1\"})\n+    public void opto4() {\n+        for (int i = 0; i < 100; i++) {\n+            dontInline();\n+        }\n+    }\n+\n+    @Test\n+    @IR(failOn = IRNode.STORE) \/\/ not fail\n+    @IR(counts = {\"call\", \"1\"})\n+    public void opto5() {\n+        for (int i = 0; i < 100; i++) {\n+            dontInline();\n+        }\n+    }\n+\n+    @Test\n+    @IR(counts = {IRNode.STORE, \"0\"}) \/\/ not fail\n+    @IR(counts = {\"call\", \"1\"})\n+    public void opto6() {\n+        for (int i = 0; i < 100; i++) {\n+            dontInline();\n+        }\n+    }\n+\n+    @Test\n+    @IR(counts = {\"call\", \"10\"})\n+    @IR(counts = {\"call\", \"1\"})\n+    public void opto7() {\n+        for (int i = 0; i < 100; i++) {\n+            dontInline();\n+        }\n+    }\n+\n+    @DontInline\n+    private void dontInline() {}\n+}\n+\n+\n+\/\/ Used only by class Traps\n+class NotLoaded {\n+    NotLoadedHelper notLoadedFld;\n+}\n+\n+\/\/ Used only by class Traps\n+class NotLoadedHelper {}\n+\n+class MyClass {\n+    int iFld = 3;\n+    int x = 5;\n+    static long lFldStatic;\n+}\n+\n+class MyClass2 {}\n+\n+class MyClassSub extends MyClass {\n+    int iFld;\n+    static int iFldStatic;\n+}\n+\n+class ShouldNotReachException extends RuntimeException {\n+    ShouldNotReachException(String s) {\n+        super(s);\n+    }\n+}\n+\n+\n+\/\/ Base class for any kind of constraint that is used to verify if the framework reports the correct IR failures.\n+abstract class Constraint {\n+    private final Class<?> klass;\n+    protected final int ruleIdx;\n+    private final Pattern methodPattern;\n+    private final String classAndMethod;\n+    protected final Pattern irPattern;\n+    private final String methodName;\n+    protected boolean matched;\n+\n+    Constraint(Class<?> klass, String methodName, int ruleIdx, Pattern irPattern) {\n+        this.klass = klass;\n+        classAndMethod = klass.getSimpleName() + \".\" + methodName;\n+        this.ruleIdx = ruleIdx;\n+        this.methodPattern = Pattern.compile(Pattern.quote(classAndMethod));\n+        this.irPattern = irPattern;\n+        this.methodName = methodName;\n+        this.matched = false;\n+    }\n+\n+    \/\/ For good constraints only\n+    Constraint(Class<?> klass, String methodName, int ruleIdx) {\n+        this.klass = klass;\n+        classAndMethod = klass.getSimpleName() + \".\" + methodName;\n+        this.ruleIdx = ruleIdx;\n+        this.methodPattern = Pattern.compile(Pattern.quote(classAndMethod));\n+        this.irPattern = null;\n+        this.methodName = methodName;\n+        this.matched = false;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"Constraint \" + getClass().getSimpleName() + \", method: \" + methodName + \", rule: \" + ruleIdx;\n+    }\n+\n+    public Class<?> getKlass() {\n+        return klass;\n+    }\n+\n+    protected String errorPrefix() {\n+        return \"Method \" + methodName + \", Rule \" + ruleIdx;\n+    }\n+\n+    public void checkConstraint(RuntimeException e) {\n+        String message = e.getMessage();\n+        String[] splitMethods = message.split(\"Method\");\n+        for (int i = 1; i < splitMethods.length; i++) {\n+            String method = splitMethods[i];\n+            if (methodPattern.matcher(method).find()) {\n+                String[] splitIrRules = method.split(\"@IR \");\n+                for (int j = 1; j < splitIrRules.length; j++) {\n+                    String irRule = splitIrRules[j];\n+                    if (irRule.startsWith(\"rule \" + ruleIdx)) {\n+                        checkIRRule(irRule);\n+                    }\n+                }\n+            }\n+        }\n+        Asserts.assertTrue(matched, toString() + \" should have been matched\");\n+    }\n+\n+    abstract protected void checkIRRule(String irRule);\n+\n+    protected void checkOnMethod(String method) {}\n+}\n+\n+\/\/ Constraint for rule that does not fail.\n+class GoodRuleConstraint extends Constraint {\n+\n+    GoodRuleConstraint(Class<?> klass, String methodName, int ruleIdx) {\n+        super(klass, methodName, ruleIdx);\n+        matched = true;\n+    }\n+\n+    public static GoodRuleConstraint create(Class<?> klass, String methodName, int ruleIdx) {\n+        return new GoodRuleConstraint(klass, methodName, ruleIdx);\n+    }\n+\n+    @Override\n+    protected void checkIRRule(String irRule) {\n+        Asserts.fail(errorPrefix() + \" should not fail:\\n\" + irRule);\n+    }\n+}\n+\n+\/\/ Constraint for rule that might fail but not with \"failOn\".\n+class GoodFailOnConstraint extends GoodRuleConstraint {\n+\n+    private GoodFailOnConstraint(Class<?> klass, String methodName, int ruleIdx) {\n+        super(klass, methodName, ruleIdx);\n+    }\n+\n+    public static GoodFailOnConstraint create(Class<?> klass, String methodName, int ruleIdx) {\n+        return new GoodFailOnConstraint(klass, methodName, ruleIdx);\n+    }\n+\n+    @Override\n+    protected void checkIRRule(String irRule) {\n+        Asserts.assertFalse(irRule.contains(\"- failOn\"), errorPrefix() + \" should not have failed:\\n\" + irRule);\n+    }\n+}\n+\n+\/\/ Constraint for rule that might fail but not with \"counts\".\n+class GoodCountsConstraint extends GoodRuleConstraint {\n+\n+    private GoodCountsConstraint(Class<?> klass, String methodName, int ruleIdx) {\n+        super(klass, methodName, ruleIdx);\n+    }\n+\n+    public static GoodCountsConstraint create(Class<?> klass, String methodName, int ruleIdx) {\n+        return new GoodCountsConstraint(klass, methodName, ruleIdx);\n+    }\n+\n+    @Override\n+    protected void checkIRRule(String irRule) {\n+        Asserts.assertFalse(irRule.contains(\"- counts\"), errorPrefix() + \" should not have failed with counts:\\n\" + irRule);\n+    }\n+}\n+\n+\/\/ Base class for all Regex based constraint.\n+abstract class RegexConstraint extends Constraint {\n+    final String category;\n+    final String otherCategory;\n+    final int[] regexIndexes;\n+    final boolean isGood;\n+    final List<String> matches;\n+\n+    RegexConstraint(Class<?> klass, String methodName, String category, boolean isGood, List<String> matches, int ruleIdx, int... regexIndexes) {\n+        super(klass, methodName, ruleIdx, initIRPattern(category, ruleIdx));\n+        this.category = category;\n+        this.regexIndexes = regexIndexes;\n+        if (category.equals(\"failOn\")) {\n+            this.otherCategory = \"counts\";\n+        } else {\n+            Asserts.assertTrue(category.equals(\"counts\"));\n+            this.otherCategory = \"failOn\";\n+        }\n+        this.isGood = isGood;\n+        this.matches = matches;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        String msg = super.toString() + \", \";\n+        if (regexIndexes.length > 1) {\n+            msg += \"regexes: [\" + String.join(\", \", Arrays.stream(regexIndexes).mapToObj(String::valueOf).toArray(String[]::new)) + \"]\";\n+        } else {\n+            msg += \"regex: \" + regexIndexes[0];\n+        }\n+        return msg;\n+    }\n+\n+    @Override\n+    protected String errorPrefix() {\n+        return super.errorPrefix() + \" with \\\"\" + category + \"\\\"\";\n+    }\n+\n+    private static Pattern initIRPattern(String category, int ruleIdx) {\n+        if (category.equals(\"failOn\")) {\n+            return Pattern.compile(\"rule \" + ruleIdx + \":.*\\\\R.*- failOn: Graph contains forbidden nodes.*\\\\R\" +\n+                                   \".*Regex \\\\d+\\\\).*\\\\R.*Matched forbidden node.*\");\n+        } else {\n+            return Pattern.compile(\"rule \" + ruleIdx + \":.*\\\\R.*- counts: Graph contains wrong number of nodes:\\\\R\" +\n+                                   \".*Regex \\\\d+\\\\).*\\\\R.*Expected.*\");\n+        }\n+    }\n+\n+    @Override\n+    protected void checkIRRule(String irRule) {\n+        int categoryIndex = irRule.indexOf(\"- \" + category);\n+        Asserts.assertTrue(categoryIndex != -1, errorPrefix() + \" should have failed\");\n+\n+        int endIndex;\n+        int otherCategoryIndex = irRule.indexOf(\"- \" + otherCategory);\n+        if (otherCategoryIndex == -1 || categoryIndex > otherCategoryIndex) {\n+            endIndex = irRule.length();\n+        } else {\n+            endIndex = otherCategoryIndex;\n+        }\n+        String categoryString = irRule.substring(irRule.indexOf(\"- \" + category), endIndex);\n+        Pattern pattern;\n+        Matcher matcher;\n+        for (int regexIndex : this.regexIndexes) {\n+            pattern = Pattern.compile(\"Regex \" + regexIndex + \"\\\\).*\");\n+            matcher = pattern.matcher(categoryString);\n+            if (isGood) {\n+                Asserts.assertFalse(matcher.find(), errorPrefix() + \" failed with Regex \" + regexIndex);\n+                matched = true;\n+            } else {\n+                Asserts.assertTrue(matcher.find(), errorPrefix() + \" should have failed at Regex \" + regexIndex);\n+                String[] splitRegex = categoryString.split(\"Regex \");\n+                if (matches != null) {\n+                    for (int i = 1; i < splitRegex.length; i++) {\n+                        String regexString = splitRegex[i];\n+                        if (regexString.startsWith(String.valueOf(regexIndex))) {\n+                            Asserts.assertTrue(matches.stream().allMatch(regexString::contains),\n+                                               errorPrefix() + \" could not find all matches at Regex \" + regexIndex);\n+                            matched = true;\n+                        }\n+                    }\n+                }\n+            }\n+        }\n+    }\n+}\n+\n+\/\/ Base class for all good regex based constraints.\n+abstract class GoodRegexConstraint extends RegexConstraint {\n+\n+    GoodRegexConstraint(Class<?> klass, String methodName, String category, int ruleIdx, int... regexIndexes) {\n+        super(klass, methodName, category, true, null, ruleIdx, regexIndexes);\n+    }\n+}\n+\n+\/\/ Constraint for rule that might fail with \"counts\" or \"failOn\", but the specified regex in \"failOn\" does not fail.\n+class GoodFailOnRegexConstraint extends GoodRegexConstraint {\n+\n+    private GoodFailOnRegexConstraint(Class<?> klass, String methodName, int ruleIdx, int... regexIndexes) {\n+        super(klass, methodName, \"failOn\", ruleIdx, regexIndexes);\n+    }\n+\n+\n+    public static GoodFailOnRegexConstraint create(Class<?> klass, String methodName, int ruleIdx, int... regexIndexes) {\n+        return new GoodFailOnRegexConstraint(klass, methodName, ruleIdx, regexIndexes);\n+    }\n+}\n+\n+\n+\/\/ Constraint for rule that might fail with \"counts\" or \"failOn\", but the specified regex in \"counts\" does not fail.\n+class GoodCountsRegexConstraint extends GoodRegexConstraint {\n+\n+    private GoodCountsRegexConstraint(Class<?> klass, String methodName, int ruleIdx, int... regexIndexes) {\n+        super(klass, methodName, \"counts\", ruleIdx, regexIndexes);\n+    }\n+\n+\n+    public static GoodCountsRegexConstraint create(Class<?> klass, String methodName, int ruleIdx, int... regexIndexes) {\n+        return new GoodCountsRegexConstraint(klass, methodName, ruleIdx, regexIndexes);\n+    }\n+}\n+\n+\/\/ Constraint for rule that fails with \"failOn\" and the specified regex must also fail.\n+class BadFailOnConstraint extends RegexConstraint {\n+\n+    BadFailOnConstraint(Class<?> klass, String methodName, int ruleIdx, List<String> matches, int... regexIndexes) {\n+        super(klass, methodName, \"failOn\", false, matches, ruleIdx, regexIndexes);\n+    }\n+\n+    public static BadFailOnConstraint create(Class<?> klass, String methodName, int ruleIdx, int regexId, String... matches) {\n+        return new BadFailOnConstraint(klass, methodName, ruleIdx, new ArrayList<>(Arrays.asList(matches)), regexId);\n+    }\n+\n+    public static BadFailOnConstraint create(Class<?> klass, String methodName, int ruleIdx, String... matches) {\n+        return new BadFailOnConstraint(klass, methodName, ruleIdx, new ArrayList<>(Arrays.asList(matches)), 1);\n+    }\n+}\n+\n+\/\/ Constraint for rule that fails with \"counts\" and the specified regex must also fail.\n+class BadCountsConstraint extends RegexConstraint {\n+\n+    BadCountsConstraint(Class<?> klass, String methodName, int ruleIdx, List<String> matches, int... regexIndexes) {\n+        super(klass, methodName, \"counts\", false, matches, ruleIdx, regexIndexes);\n+    }\n+\n+    public static BadCountsConstraint create(Class<?> klass, String methodName, int ruleIdx, int regexId, int foundCount, String... matches) {\n+        List<String> matchesList = getMatchesList(foundCount, matches, Arrays.asList(matches));\n+        return new BadCountsConstraint(klass, methodName, ruleIdx, matchesList, regexId);\n+    }\n+\n+    public static BadCountsConstraint create(Class<?> klass, String methodName, int ruleIdx, int foundCount, String... matches) {\n+        List<String> matchesList = getMatchesList(foundCount, matches, Arrays.asList(matches));\n+        return new BadCountsConstraint(klass, methodName, ruleIdx, matchesList, 1);\n+    }\n+\n+    private static List<String> getMatchesList(int foundCount, String[] matches, List<String> strings) {\n+        List<String> matchesList = new ArrayList<>();\n+        matchesList.add(\"but found \" + foundCount);\n+        if (matches != null) {\n+            matchesList.addAll(strings);\n+        }\n+        return matchesList;\n+    }\n+}\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/tests\/TestIRMatching.java","additions":1625,"deletions":0,"binary":false,"changes":1625,"status":"added"},{"patch":"@@ -0,0 +1,403 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.test.lib.hotspot.ir_framework.tests;\n+\n+import jdk.test.lib.Asserts;\n+import jdk.test.lib.hotspot.ir_framework.*;\n+\n+import java.util.Arrays;\n+\n+\/*\n+ * @test\n+ * @requires vm.compMode != \"Xint\" & vm.compiler2.enabled\n+ * @summary Test different custom run tests.\n+ * @library \/test\/lib\n+ * @run driver jdk.test.lib.hotspot.ir_framework.tests.TestRunTests\n+ *\/\n+\n+public class TestRunTests {\n+\n+    public static void main(String[] args) {\n+        TestFramework.run();\n+        try {\n+            TestFramework.run(BadStandalone.class);\n+            throw new RuntimeException(\"Should not reach\");\n+        } catch (IRViolationException e) {\n+            String[] matches = { \"test(int)\", \"test2(int)\", \"Failed IR Rules (2)\"};\n+            Arrays.stream(matches).forEach(m -> Asserts.assertTrue(e.getMessage().contains(m)));\n+            Asserts.assertEQ(e.getMessage().split(\"STANDALONE mode\", -1).length - 1, 2);\n+        }\n+        TestFramework.runWithFlags(SkipCompilation.class, \"-XX:-UseCompiler\");\n+        TestFramework.runWithFlags(SkipCompilation.class, \"-Xint\");\n+        TestFramework.runWithFlags(SkipC2Compilation.class, \"-XX:TieredStopAtLevel=1\");\n+        TestFramework.runWithFlags(SkipC2Compilation.class, \"-XX:TieredStopAtLevel=2\");\n+        TestFramework.runWithFlags(SkipC2Compilation.class, \"-XX:TieredStopAtLevel=3\");\n+    }\n+    public int iFld;\n+\n+    @Test\n+    @IR(counts = {IRNode.STORE_I, \"1\"})\n+    public int test1(int x) {\n+        iFld = x;\n+        return x;\n+    }\n+\n+    @Test\n+    @IR(counts = {IRNode.STORE_I, \"1\"})\n+    public int test2(int y) {\n+        iFld = y;\n+        return y;\n+    }\n+\n+    @Run(test = {\"test1\", \"test2\"})\n+    public void run(RunInfo info) {\n+        test1(23);\n+        test2(42);\n+        Asserts.assertTrue(info.isC2CompilationEnabled());\n+        if (!info.isWarmUp()) {\n+            TestFramework.assertCompiledByC2(info.getTest(\"test1\"));\n+            TestFramework.assertCompiledByC2(info.getTest(\"test2\"));\n+        }\n+    }\n+\n+    @Test\n+    @IR(counts = {IRNode.STORE_I, \"1\"})\n+    public int test3(int x) {\n+        iFld = x;\n+        return x;\n+    }\n+\n+    @Run(test = \"test3\")\n+    public void run2(RunInfo info) {\n+        Asserts.assertTrue(info.isC2CompilationEnabled());\n+        test3(42);\n+        if (!info.isWarmUp()) {\n+            TestFramework.assertCompiledByC2(info.getTest());\n+            try {\n+                info.getTest(\"test2\");\n+                throw new RuntimeException(\"should not reach\");\n+            } catch (TestRunException e) {\n+                \/\/ Excepted, do not call this method for single associated test.\n+            }\n+            try {\n+                info.isTestC1Compiled(\"test2\");\n+                throw new RuntimeException(\"should not reach\");\n+            } catch (TestRunException e) {\n+                \/\/ Excepted, do not call this method for single associated test.\n+            }\n+            try {\n+                info.isTestC2Compiled(\"test2\");\n+                throw new RuntimeException(\"should not reach\");\n+            } catch (TestRunException e) {\n+                \/\/ Excepted, do not call this method for single associated test.\n+            }\n+            try {\n+                info.isTestCompiledAtLevel(\"test2\", CompLevel.C2);\n+                throw new RuntimeException(\"should not reach\");\n+            } catch (TestRunException e) {\n+                \/\/ Excepted, do not call this method for single associated test.\n+            }\n+        }\n+    }\n+\n+\n+    @Test\n+    @IR(counts = {IRNode.STORE_I, \"1\"})\n+    public int test4(int x) {\n+        iFld = x;\n+        return x;\n+    }\n+\n+    @Run(test = \"test4\", mode = RunMode.STANDALONE)\n+    public void run3(RunInfo info) {\n+        for (int i = 0; i < 2000; i++) {\n+            test4(i);\n+        }\n+    }\n+\n+    @Test\n+    @IR(counts = {IRNode.STORE_I, \"1\"})\n+    public int test5(int x) {\n+        iFld = x;\n+        return x;\n+    }\n+\n+    @Test(compLevel = CompLevel.WAIT_FOR_COMPILATION)\n+    @IR(counts = {IRNode.STORE_I, \"1\"})\n+    public int test6(int y) {\n+        iFld = y;\n+        return y;\n+    }\n+\n+    @Run(test = {\"test5\", \"test6\"})\n+    public void run4(RunInfo info) {\n+        test5(23);\n+        test6(42);\n+        if (!info.isWarmUp()) {\n+            TestFramework.assertCompiledByC2(info.getTest(\"test5\"));\n+            TestFramework.assertCompiledByC2(info.getTest(\"test6\"));\n+            try {\n+                info.getTest();\n+                throw new RuntimeException(\"should not reach\");\n+            } catch (TestRunException e) {\n+                \/\/ Excepted, do not call this method for single associated test.\n+            }\n+            try {\n+                info.isTestC1Compiled();\n+                throw new RuntimeException(\"should not reach\");\n+            } catch (TestRunException e) {\n+                \/\/ Excepted, do not call this method for single associated test.\n+            }\n+            try {\n+                info.isTestC2Compiled();\n+                throw new RuntimeException(\"should not reach\");\n+            } catch (TestRunException e) {\n+                \/\/ Excepted, do not call this method for single associated test.\n+            }\n+            try {\n+                info.isTestCompiledAtLevel(CompLevel.C2);\n+                throw new RuntimeException(\"should not reach\");\n+            } catch (TestRunException e) {\n+                \/\/ Excepted, do not call this method for single associated test.\n+            }\n+        }\n+    }\n+\n+\n+    @Test\n+    @IR(counts = {IRNode.STORE_I, \"1\"})\n+    public int test7(int x) {\n+        for (int i = 0; i < 100; i++) {}\n+        iFld = x;\n+        return x;\n+    }\n+\n+\n+    @Test\n+    @IR(counts = {IRNode.STORE_I, \"1\"})\n+    public int test8(int x) {\n+        for (int i = 0; i < 100; i++) {}\n+        iFld = x;\n+        return x;\n+    }\n+\n+    @Run(test = {\"test7\", \"test8\"}, mode = RunMode.STANDALONE)\n+    public void run5() {\n+        for (int i = 0; i < 10000; i++) {\n+            test7(23);\n+            test8(42);\n+        }\n+    }\n+\n+    @Test(compLevel = CompLevel.WAIT_FOR_COMPILATION)\n+    @Warmup(0)\n+    public void test9() {\n+        TestClass tmp = new TestClass();\n+        for (int i = 0; i < 100; ++i) {\n+            tmp.test();\n+        }\n+    }\n+\n+    static class TestClass {\n+        public int test() {\n+            int res = 0;\n+            for (int i = 1; i < 20_000; ++i) {\n+                res -= i;\n+            }\n+            return res;\n+        }\n+    }\n+}\n+\n+class BadStandalone {\n+    int iFld;\n+\n+    @Test\n+    @IR(counts = {IRNode.STORE_I, \"1\"})\n+    public int test(int x) {\n+        iFld = x;\n+        return x;\n+    }\n+\n+    @Run(test = \"test\", mode = RunMode.STANDALONE)\n+    public void run(RunInfo info) {\n+        test(42);\n+    }\n+\n+    @Test\n+    @IR(counts = {IRNode.STORE_I, \"1\"})\n+    public int test2(int x) {\n+        iFld = x;\n+        return x;\n+    }\n+\n+    @Run(test = \"test2\", mode = RunMode.STANDALONE)\n+    public void run2(RunInfo info) {\n+    }\n+}\n+\n+\/\/ Run with TieredStopAt=[1,3]. IR verification is skipped.\n+class SkipC2Compilation {\n+\n+    int iFld;\n+    @Test(compLevel = CompLevel.C2)\n+    @IR(failOn = IRNode.STORE) \/\/ Would fail but not evaluated.\n+    public void testC2() {\n+        iFld = 34;\n+    }\n+\n+    @Check(test = \"testC2\")\n+    public void checkC2(TestInfo info) {\n+        Asserts.assertFalse(info.isC2CompilationEnabled());\n+        Asserts.assertTrue(info.isCompilationSkipped());\n+    }\n+\n+    @Test(compLevel = CompLevel.C2)\n+    @IR(failOn = IRNode.STORE) \/\/ Would fail but not evaluated.\n+    public void test2C2() {\n+        iFld = 34;\n+    }\n+\n+\n+    @Run(test = \"test2C2\")\n+    public void run2C2(RunInfo info) {\n+        Asserts.assertFalse(info.isC2CompilationEnabled());\n+        Asserts.assertTrue(info.isCompilationSkipped());\n+        test2C2();\n+        Asserts.assertTrue(info.isCompilationSkipped());\n+        try {\n+            info.isCompilationSkipped(\"test2C2\");\n+            throw new RuntimeException(\"should not reach\");\n+        } catch (TestRunException e) {\n+            \/\/ Excepted, do not call this method for single associated test.\n+        }\n+    }\n+\n+    @Test(compLevel = CompLevel.C2)\n+    @IR(failOn = IRNode.STORE) \/\/ Would fail but not evaluated.\n+    public void test3C2() {\n+        iFld = 34;\n+    }\n+\n+    @Test(compLevel = CompLevel.C2)\n+    @IR(failOn = IRNode.STORE) \/\/ Would fail but not evaluated.\n+    public void test4C2() {\n+        iFld = 34;\n+    }\n+\n+\n+    @Test \/\/ Level any\n+    @IR(failOn = IRNode.STORE) \/\/ Would fail but not evaluated.\n+    public void testAny() {\n+        iFld = 34;\n+    }\n+\n+    @Run(test = {\"test3C2\", \"test4C2\", \"testAny\"})\n+    public void runMulti(RunInfo info) {\n+        Asserts.assertFalse(info.isC2CompilationEnabled());\n+        if (!info.isWarmUp()) {\n+            TestFramework.assertCompiledByC1(info.getTest(\"testAny\"));\n+        }\n+        Asserts.assertTrue(info.isCompilationSkipped(\"test3C2\"));\n+        Asserts.assertTrue(info.isCompilationSkipped(\"test4C2\"));\n+        Asserts.assertFalse(info.isCompilationSkipped(\"testAny\"));\n+        test2C2();\n+        Asserts.assertTrue(info.isCompilationSkipped(\"test3C2\"));\n+        Asserts.assertTrue(info.isCompilationSkipped(\"test4C2\"));\n+        Asserts.assertFalse(info.isCompilationSkipped(\"testAny\"));\n+        try {\n+            info.isCompilationSkipped();\n+            throw new RuntimeException(\"should not reach\");\n+        } catch (TestRunException e) {\n+            \/\/ Excepted, do not call this method for multiple associated tests.\n+        }\n+    }\n+}\n+\n+\/\/ Run with -Xint and -XX:-Compiler. IR verification is skipped.\n+class SkipCompilation {\n+    int iFld;\n+    @Test(compLevel = CompLevel.C2)\n+    @IR(failOn = IRNode.STORE) \/\/ Would fail but not evaluated.\n+    public void testC2() {\n+        iFld = 34;\n+    }\n+\n+    @Check(test = \"testC2\")\n+    public void checkC2(TestInfo info) {\n+        Asserts.assertTrue(info.isCompilationSkipped());\n+        Asserts.assertFalse(info.isC2CompilationEnabled());\n+    }\n+\n+    @Test(compLevel = CompLevel.C2)\n+    @IR(failOn = IRNode.STORE) \/\/ Would fail but not evaluated.\n+    public void test2C2() {\n+        iFld = 34;\n+    }\n+\n+\n+    @Run(test = \"test2C2\")\n+    public void run2C2(RunInfo info) {\n+        Asserts.assertFalse(info.isC2CompilationEnabled());\n+        Asserts.assertTrue(info.isCompilationSkipped());\n+        test2C2();\n+        Asserts.assertTrue(info.isCompilationSkipped());\n+    }\n+\n+    @Test(compLevel = CompLevel.C2)\n+    @IR(failOn = IRNode.STORE) \/\/ Would fail but not evaluated.\n+    public void test3C2() {\n+        iFld = 34;\n+    }\n+\n+    @Test(compLevel = CompLevel.C2)\n+    @IR(failOn = IRNode.STORE) \/\/ Would fail but not evaluated.\n+    public void test4C2() {\n+        iFld = 34;\n+    }\n+\n+\n+    @Test \/\/ Level any\n+    @IR(failOn = IRNode.STORE) \/\/ Would fail but not evaluated.\n+    public void testAny() {\n+        iFld = 34;\n+    }\n+\n+    @Run(test = {\"test3C2\", \"test4C2\", \"testAny\"})\n+    public void runMulti(RunInfo info) {\n+        Asserts.assertFalse(info.isC2CompilationEnabled());\n+        if (!info.isWarmUp()) {\n+            TestFramework.assertNotCompiled(info.getTest(\"testAny\"));\n+            TestFramework.assertNotCompiled(info.getTest(\"test3C2\"));\n+            TestFramework.assertNotCompiled(info.getTest(\"test4C2\"));\n+        }\n+        Asserts.assertTrue(info.isCompilationSkipped(\"test3C2\"));\n+        Asserts.assertTrue(info.isCompilationSkipped(\"test4C2\"));\n+        Asserts.assertTrue(info.isCompilationSkipped(\"testAny\"));\n+        test2C2();\n+        Asserts.assertTrue(info.isCompilationSkipped(\"test3C2\"));\n+        Asserts.assertTrue(info.isCompilationSkipped(\"test4C2\"));\n+        Asserts.assertTrue(info.isCompilationSkipped(\"testAny\"));\n+    }\n+}\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/tests\/TestRunTests.java","additions":403,"deletions":0,"binary":false,"changes":403,"status":"added"},{"patch":"@@ -0,0 +1,84 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.test.lib.hotspot.ir_framework.tests;\n+\n+import jdk.test.lib.hotspot.ir_framework.Scenario;\n+import jdk.test.lib.hotspot.ir_framework.Test;\n+import jdk.test.lib.hotspot.ir_framework.TestFramework;\n+\n+\/*\n+ * @test\n+ * @summary Sanity test the different ways to start the test framework.\n+ * @library \/test\/lib\n+ * @run driver jdk.test.lib.hotspot.ir_framework.tests.TestSanity\n+ *\/\n+\n+public class TestSanity {\n+\n+    public static void main(String[] args) {\n+        TestFramework.run();\n+        TestFramework.run(TestSanity.class);\n+        TestFramework.runWithFlags(\"-XX:+TieredCompilation\");\n+        TestFramework.runWithFlags(TestSanity.class, \"-XX:SuspendRetryCount=51\", \"-XX:+UseTLAB\");\n+        TestFramework.runWithHelperClasses(TestSanity.class, HelperA.class);\n+        TestFramework.runWithHelperClasses(TestSanity.class, HelperA.class, HelperB.class);\n+        Scenario sDefault = new Scenario(0);\n+        Scenario s1 = new Scenario(1, \"-XX:SuspendRetryCount=52\", \"-XX:+UseTLAB\");\n+        Scenario s2 = new Scenario(2, \"-XX:SuspendRetryCount=53\", \"-XX:+UseTLAB\");\n+        TestFramework.runWithScenarios(s1);\n+        TestFramework.runWithScenarios(s1, s2);\n+        TestFramework.runWithScenarios(TestSanity.class, s1, s2);\n+        TestFramework.runWithScenarios(sDefault, s1);\n+        TestFramework.runWithScenarios(sDefault, s1, s2);\n+        TestFramework.runWithScenarios(TestSanity.class, sDefault, s1);\n+        TestFramework.runWithScenarios(TestSanity.class, sDefault, s1, s2);\n+        TestFramework testFramework = new TestFramework();\n+        testFramework.start();\n+        testFramework.addFlags(\"-XX:SuspendRetryCount=54\").start();\n+        testFramework = new TestFramework();\n+        testFramework.addFlags(\"-XX:SuspendRetryCount=55\").addFlags(\"-XX:+UseTLAB\").start();\n+        testFramework = new TestFramework();\n+        testFramework.addHelperClasses(HelperA.class, HelperB.class).start();\n+        testFramework = new TestFramework();\n+        testFramework.addHelperClasses(HelperA.class, HelperB.class).addHelperClasses(HelperC.class).start();\n+        testFramework = new TestFramework();\n+        testFramework.addScenarios(sDefault).addScenarios(s1, s2).start();\n+        testFramework = new TestFramework();\n+        testFramework.addHelperClasses(HelperA.class).addScenarios(sDefault).addFlags(\"-XX:+UseSuperWord\").start();\n+        testFramework = new TestFramework();\n+        testFramework.addHelperClasses(HelperA.class).addFlags(\"-XX:+UseSuperWord\", \"-XX:+UseCompiler\").addScenarios(sDefault)\n+                     .addHelperClasses(HelperB.class, HelperC.class).addScenarios(s1, s2).addFlags(\"-XX:+TieredCompilation\").start();\n+        testFramework = new TestFramework();\n+        testFramework.addHelperClasses(HelperA.class).addFlags(\"-XX:+UseSuperWord\", \"-XX:+UseCompiler\").addScenarios(sDefault)\n+                     .addHelperClasses(HelperB.class, HelperC.class).addScenarios(s1, s2).setDefaultWarmup(200)\n+                     .addFlags(\"-XX:+TieredCompilation\").start();\n+    }\n+\n+    @Test\n+    public void test() {}\n+}\n+\n+class HelperA { }\n+class HelperB { }\n+class HelperC { }\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/tests\/TestSanity.java","additions":84,"deletions":0,"binary":false,"changes":84,"status":"added"},{"patch":"@@ -0,0 +1,106 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.test.lib.hotspot.ir_framework.tests;\n+\n+import jdk.test.lib.hotspot.ir_framework.*;\n+import jdk.test.lib.Asserts;\n+\n+\/*\n+ * @test\n+ * @requires vm.compMode != \"Xint\" & vm.compiler2.enabled\n+ * @summary Test scenarios with the framework.\n+ * @library \/test\/lib\n+ * @run driver jdk.test.lib.hotspot.ir_framework.tests.TestScenarios\n+ *\/\n+\n+public class TestScenarios {\n+    public static void main(String[] args) {\n+        Scenario sDefault = new Scenario(0);\n+        Scenario s1 = new Scenario(1, \"-XX:SuspendRetryCount=51\");\n+        Scenario s2 = new Scenario(2, \"-XX:SuspendRetryCount=52\");\n+        Scenario s3 = new Scenario(3, \"-XX:SuspendRetryCount=53\");\n+        Scenario s3dup = new Scenario(3, \"-XX:SuspendRetryCount=53\");\n+        try {\n+            TestFramework.runWithScenarios(sDefault, s1, s2, s3);\n+            Asserts.fail(\"Should not reach\");\n+        } catch (TestRunException e) {\n+            Asserts.assertTrue(e.getMessage().contains(\"The following scenarios have failed: #0, #1, #3\"), e.getMessage());\n+        }\n+        try {\n+            TestFramework.runWithScenarios(s1, s2, s3);\n+            Asserts.fail(\"Should not reach\");\n+        } catch (TestRunException e) {\n+            Asserts.assertTrue(e.getMessage().contains(\"The following scenarios have failed: #1, #3\"), e.getMessage());\n+        }\n+\n+        TestFramework.runWithScenarios(ScenarioTest.class, s1, s2, s3);\n+        try {\n+            TestFramework.runWithScenarios(s1, s3dup, s2, s3);\n+            Asserts.fail(\"Should not reach\");\n+        } catch (RuntimeException e) {\n+            Asserts.assertTrue(e.getMessage().contains(\"Cannot define two scenarios with the same index 3\"), e.getMessage());\n+        }\n+        try {\n+            TestFramework.runWithScenarios(MyExceptionTest.class, s1, s2, s3);\n+            Asserts.fail(\"Should not reach\");\n+        } catch (TestRunException e) {\n+            Asserts.assertTrue(s1.getTestVMOutput().contains(\"Caused by: jdk.test.lib.hotspot.ir_framework.tests.MyScenarioException\"));\n+            Asserts.assertTrue(s2.getTestVMOutput().contains(\"Caused by: jdk.test.lib.hotspot.ir_framework.tests.MyScenarioException\"));\n+            Asserts.assertTrue(s3.getTestVMOutput().contains(\"Caused by: jdk.test.lib.hotspot.ir_framework.tests.MyScenarioException\"));\n+        } catch (Exception e) {\n+            Asserts.fail(\"Should not catch other exceptions\");\n+        }\n+\n+    }\n+\n+    @Test\n+    @IR(applyIf = {\"SuspendRetryCount\", \"50\"}, counts = {IRNode.CALL, \"1\"})\n+    public void failDefault() {\n+    }\n+\n+    @Test\n+    @IR(applyIf = {\"SuspendRetryCount\", \"51\"}, counts = {IRNode.CALL, \"1\"})\n+    @IR(applyIf = {\"SuspendRetryCount\", \"53\"}, counts = {IRNode.CALL, \"1\"})\n+    public void failS3() {\n+    }\n+}\n+\n+class ScenarioTest {\n+    @Test\n+    @IR(applyIf = {\"SuspendRetryCount\", \"54\"}, counts = {IRNode.CALL, \"1\"})\n+    public void doesNotFail() {\n+    }\n+}\n+\n+class MyExceptionTest {\n+    int iFld;\n+    @Test\n+    @IR(failOn = IRNode.STORE) \/\/ Not evaluated due to MyScenarioException\n+    public void test() {\n+        iFld = 42;\n+        throw new MyScenarioException();\n+    }\n+}\n+\n+class MyScenarioException extends RuntimeException {}\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/tests\/TestScenarios.java","additions":106,"deletions":0,"binary":false,"changes":106,"status":"added"},{"patch":"@@ -0,0 +1,154 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.test.lib.hotspot.ir_framework.tests;\n+\n+import jdk.test.lib.hotspot.ir_framework.*;\n+import jdk.test.lib.Asserts;\n+\n+\/*\n+ * @test\n+ * @summary Test the framework with helper classes.\n+ * @library \/test\/lib\n+ * @run driver jdk.test.lib.hotspot.ir_framework.tests.TestWithHelperClasses\n+ *\/\n+\n+public class TestWithHelperClasses {\n+\n+    public static void main(String[] args) {\n+        TestFramework.runWithHelperClasses(TestWithHelperClasses.class, Helper1.class, Helper2.class);\n+        try {\n+            TestFramework.runWithHelperClasses(TestWithHelperClasses.class, Helper1.class);\n+            shouldNotReach();\n+        } catch (TestVMException e) {\n+            Asserts.assertFalse(e.getExceptionInfo().contains(\"public static void jdk.test.lib.hotspot.ir_framework.tests.Helper1.foo() should have been C2 compiled\"));\n+            Asserts.assertFalse(TestFramework.getLastTestVMOutput().contains(\"public static void jdk.test.lib.hotspot.ir_framework.tests.Helper1.foo() should have been C2 compiled\"));\n+            Asserts.assertTrue(TestFramework.getLastTestVMOutput().contains(\"public static void jdk.test.lib.hotspot.ir_framework.tests.Helper2.foo() should have been C2 compiled\"));\n+            Asserts.assertTrue(e.getExceptionInfo().contains(\"public static void jdk.test.lib.hotspot.ir_framework.tests.Helper2.foo() should have been C2 compiled\"));\n+            Asserts.assertFalse(TestFramework.getLastTestVMOutput().contains(\"Should not be executed\"));\n+            Asserts.assertFalse(e.getExceptionInfo().contains(\"Should not be executed\"));\n+        }\n+\n+        try {\n+            TestFramework.runWithHelperClasses(BadHelperClass.class, BadHelper.class);\n+            shouldNotReach();\n+        } catch (TestFormatException e) {\n+            Asserts.assertTrue(e.getMessage().contains(\"Cannot use @Test annotation in helper class\"));\n+            Asserts.assertTrue(e.getMessage().contains(\"Cannot use @Check annotation in helper class\"));\n+            Asserts.assertTrue(e.getMessage().contains(\"Cannot use @Run annotation in helper class\"));\n+            Asserts.assertTrue(e.getMessage().contains(\"noTestInHelper\"));\n+            Asserts.assertTrue(e.getMessage().contains(\"test2\"));\n+            Asserts.assertTrue(e.getMessage().contains(\"check2\"));\n+            Asserts.assertTrue(e.getMessage().contains(\"test3\"));\n+            Asserts.assertTrue(e.getMessage().contains(\"run3\"));\n+        }\n+\n+        try {\n+            TestFramework.runWithHelperClasses(TestAsHelper.class, TestAsHelper.class);\n+            shouldNotReach();\n+        } catch (TestFormatException e) {\n+            Asserts.assertTrue(e.getMessage().contains(\"Cannot specify test class jdk.test.lib.hotspot.ir_framework.\" +\n+                                                       \"tests.TestAsHelper as helper class, too\"));\n+        }\n+\n+        try {\n+            TestFramework.runWithHelperClasses(TestWithHelperClasses.class, NestedHelper.class);\n+            shouldNotReach();\n+        } catch (TestFormatException e) {\n+            Asserts.assertTrue(e.getMessage().contains(\"Nested class\"));\n+            Asserts.assertTrue(e.getMessage().contains(\"TestWithHelperClasses$NestedHelper inside test class\"));\n+        }\n+    }\n+\n+    public static void shouldNotReach() {\n+        throw new RuntimeException(\"should not reach\");\n+    }\n+\n+    @Test\n+    public void test() throws NoSuchMethodException {\n+        TestFramework.assertCompiledByC2(Helper1.class.getMethod(\"foo\"));\n+        TestFramework.assertCompiledByC2(Helper2.class.getMethod(\"foo\"));\n+        TestFramework.assertCompiledByC2(NestedHelper.class.getMethod(\"foo\"));\n+        TestFramework.assertCompiledByC2(StaticNestedHelper.class.getMethod(\"foo\"));\n+    }\n+\n+    class NestedHelper {\n+        @ForceCompile(CompLevel.C2)\n+        public void foo() {\n+            throw new RuntimeException(\"Should not be executed\");\n+        }\n+    }\n+\n+\n+    static class StaticNestedHelper {\n+        @ForceCompile(CompLevel.C2)\n+        public void foo() {\n+            throw new RuntimeException(\"Should not be executed\");\n+        }\n+    }\n+}\n+\n+class TestAsHelper {\n+\n+    @Test\n+    public void foo() {}\n+}\n+\n+class Helper1 {\n+\n+    @ForceCompile(CompLevel.C2)\n+    public static void foo() {\n+        throw new RuntimeException(\"Should not be executed\");\n+    }\n+}\n+\n+class Helper2 {\n+\n+    @ForceCompile(CompLevel.C2)\n+    public static void foo() {\n+        throw new RuntimeException(\"Should not be executed\");\n+    }\n+}\n+\n+class BadHelperClass {\n+    @Test\n+    public void test1() {}\n+ }\n+\n+\n+class BadHelper {\n+    @Test\n+    public void noTestInHelper() {}\n+\n+    @Test\n+    public void test2() {}\n+\n+    @Check(test = \"test2\")\n+    public void check2() {}\n+\n+    @Test\n+    public void test3() {}\n+\n+    @Run(test = \"test3\")\n+    public void run3() {}\n+}\n","filename":"test\/lib\/jdk\/test\/lib\/hotspot\/ir_framework\/tests\/TestWithHelperClasses.java","additions":154,"deletions":0,"binary":false,"changes":154,"status":"added"}]}