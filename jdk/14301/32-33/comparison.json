{"files":[{"patch":"@@ -624,4 +624,1 @@\n-     * near-miss scenarios for inactivate\/activate races. Because idle\n-     * workers are often not yet blocked (parked), we use the\n-     * WorkQueue parker field to advertise that a waiter actually\n-     * needs unparking upon signal.\n+     * near-miss scenarios for inactivate\/activate races.\n@@ -1218,1 +1215,0 @@\n-        volatile Thread parker;    \/\/ set when parking in awaitWork\n@@ -1951,1 +1947,0 @@\n-                    Thread t;\n@@ -1953,2 +1948,1 @@\n-                    if ((t = v.parker) != null)\n-                        U.unpark(t);\n+                    U.unpark(v.owner);\n@@ -1967,1 +1961,1 @@\n-            WorkQueue[] qs; WorkQueue v; int sp, i; Thread t;\n+            WorkQueue[] qs; WorkQueue v; int sp, i;\n@@ -1976,2 +1970,1 @@\n-                if ((t = v.parker) != null)\n-                    U.unpark(t);\n+                U.unpark(v.owner);\n@@ -1996,1 +1989,2 @@\n-            for (int e, prevRunState = 0; ; prevRunState = e) {\n+            recheck: for (int e, prevRunState = 0; ; prevRunState = e) {\n+                U.fullFence();\n@@ -2000,1 +1994,1 @@\n-                else if ((c & RC_MASK) != 0L)\n+                else if ((c & RC_MASK) > 0L)\n@@ -2007,9 +2001,6 @@\n-                        WorkQueue q; int p;\n-                        if ((q = qs[i]) != null) {\n-                            if (((p = q.phase) & IDLE) == 0 ||\n-                                q.top - q.base > 0) {\n-                                if ((i & 1) == 0)\n-                                    signalWork();         \/\/ ensure live\n-                                return false;\n-                            }\n-                            sum += p & 0xffffffffL;\n+                        int p = e; WorkQueue q;\n+                        if ((q = qs[i]) != null &&\n+                            (((p = q.phase) & IDLE) == 0 ||\n+                             q.top - q.base > 0)) {\n+                            signalWork();                 \/\/ ensure live\n+                            break recheck;                \/\/ restart\n@@ -2017,0 +2008,1 @@\n+                        sum += p & 0xffffffffL;\n@@ -2134,1 +2126,1 @@\n-        boolean quiescent = (queuedCtl & RC_MASK) == 0L && isQuiescent(true);\n+        boolean quiescent = (queuedCtl & RC_MASK) <= 0L && isQuiescent(true);\n@@ -2145,1 +2137,0 @@\n-                w.parker = Thread.currentThread();\n@@ -2166,1 +2157,0 @@\n-                w.parker = null;\n@@ -2220,1 +2210,1 @@\n-            WorkQueue[] qs; WorkQueue v; int i; Thread t;\n+            WorkQueue[] qs; WorkQueue v; int i;\n@@ -2225,2 +2215,1 @@\n-                if ((t = v.parker) != null)\n-                    U.unpark(t);\n+                U.unpark(v.owner);\n@@ -2780,1 +2769,1 @@\n-                    if ((o = q.owner) != null && !o.isInterrupted()) {\n+                    if ((o = q.owner) != null) {\n","filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/ForkJoinPool.java","additions":18,"deletions":29,"binary":false,"changes":47,"status":"modified"},{"patch":"@@ -18,2 +18,1 @@\n- * Inc., 51 Franklin St, Fifth Floor\n-, Boston, MA 02110-1301 USA.\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n","filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/ForkJoinTask.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"}]}