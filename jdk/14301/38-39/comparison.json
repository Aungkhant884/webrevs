{"files":[{"patch":"@@ -1634,2 +1634,2 @@\n-         * Unless already closed, sets closed status, cancels tasks,\n-         * and interrupts if a worker\n+         * Sets closed status, interrupts if a worker, and unless\n+         * already closed, cancels tasks,\n@@ -1638,7 +1638,8 @@\n-            Thread o;\n-            if (closed == 0 && U.getAndSetInt(this, CLOSED, 1) == 0) {\n-                if ((o = owner) != null) {\n-                    try {\n-                        o.interrupt();\n-                    } catch (Throwable ignore) {\n-                    }\n+            Thread o = owner;\n+            int wasClosed = closed;\n+            if (wasClosed == 0)\n+                wasClosed = U.getAndSetInt(this, CLOSED, 1);\n+            if (o != null && (wasClosed == 0 || !o.isInterrupted())) {\n+                try {\n+                    o.interrupt();\n+                } catch (Throwable ignore) {\n@@ -1646,0 +1647,2 @@\n+            }\n+            if (wasClosed == 0) {\n@@ -1982,2 +1985,3 @@\n-     * Reactivates the given worker, and possibly others if not top of\n-     * ctl stack. Needed during shutdown to ensure release on termination.\n+     * Reactivates the given worker, and possibly interrupts others if\n+     * not top of ctl stack. Called only during shutdown to ensure release\n+     * on termination.\n@@ -1997,2 +2001,6 @@\n-                if ((t = v.parker) != null)\n-                    U.unpark(t);\n+                if ((t = v.parker) != null) {\n+                    try {\n+                        t.interrupt();\n+                    } catch (Throwable ignore) {\n+                    }\n+                }\n@@ -2061,2 +2069,1 @@\n-                if (window == (window = scan(w, window, r)) &&\n-                    window >= 0L) {                        \/\/ empty scan\n+                if ((window = scan(w, window, r)) >= 0L) { \/\/ empty scan\n@@ -2776,1 +2783,1 @@\n-                getAndBitwiseOrRunState(e = STOP | SHUTDOWN);\n+                runState = e = (lockRunState() + RS_LOCK) | STOP | SHUTDOWN;\n@@ -2785,0 +2792,1 @@\n+            int r = (int)Thread.currentThread().threadId(); \/\/ stagger traversals\n@@ -2787,2 +2795,2 @@\n-            for (int i = 0; i < n; ++i) {\n-                if ((q = qs[i]) != null)\n+            for (int l = n; l > 0; --l, ++r) {\n+                if ((q = qs[r & SMASK & (n - 1)]) != null)\n","filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/ForkJoinPool.java","additions":26,"deletions":18,"binary":false,"changes":44,"status":"modified"}]}