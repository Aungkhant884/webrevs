{"files":[{"patch":"@@ -1736,3 +1736,0 @@\n-    private int getAndBitwiseOrRunState(int v) { \/\/ for status bits\n-        return U.getAndBitwiseOrInt(this, RUNSTATE, v);\n-    }\n@@ -1826,0 +1823,1 @@\n+            int phaseSeq = seed & ~((IDLE << 1) - 1); \/\/ initial phase tag\n@@ -1839,1 +1837,1 @@\n-                    w.phase = id;               \/\/ now publishable\n+                    w.phase = id | phaseSeq;    \/\/ now publishable\n@@ -1985,0 +1983,1 @@\n+        U.fullFence();\n@@ -1987,2 +1986,1 @@\n-        outer: for (int e = 0;;) {\n-            int prevRunState = e;\n+        outer: for (int e, prevRunState = 0; ; prevRunState = e) {\n@@ -1996,5 +1994,7 @@\n-            else if (swept && e == prevRunState && (e & RS_LOCK) == 0 &&\n-                     casRunState(e, !transition ? e : \/\/ confirm\n-                                 (e & SHUTDOWN) == 0 ? e + RS_EPOCH : \/\/ advance\n-                                 e | STOP))           \/\/ terminate\n-                return true;\n+            else if (swept && e == prevRunState && (e & RS_LOCK) == 0) {\n+                if (casRunState(e, !transition ? e : \/\/ confirm\n+                                (e & SHUTDOWN) == 0 ? e + RS_EPOCH : \/\/ advance\n+                                e | STOP))           \/\/ terminate\n+                    return true;\n+                swept = false;\n+            }\n@@ -2029,2 +2029,1 @@\n-            int phase = w.phase, r = w.stackPred; \/\/ seed from registerWorker\n-            int e = runState;    \/\/ reset or exit when changed\n+            int r = w.stackPred; \/\/ seed from registerWorker\n@@ -2032,1 +2031,2 @@\n-            for (boolean stateChange = true;;) {\n+            for (int e = 0;;) {\n+                int phase;\n@@ -2034,2 +2034,2 @@\n-                if (stateChange) {\n-                    stateChange = false;\n+                r ^= r << 13; r ^= r >>> 17; r ^= r << 5; \/\/ xorshift\n+                if (e != (e = runState)) {\n@@ -2042,7 +2042,3 @@\n-                if ((next = scan(w, window, (r << 1) | 1)) < 0L)\n-                    ;                             \/\/ continue scanning\n-                else if (e != (e = runState))\n-                    stateChange = true;\n-                else {                            \/\/ try to inactivate & enqueue\n-                    boolean enqueued = true;\n-                    int idlePhase = phase + IDLE;\n+                if ((next = scan(w, window, (r << 1) | 1)) >= 0L &&\n+                    ((phase = w.phase) & IDLE) == 0) {\n+                    int idlePhase = phase + IDLE; \/\/ try to inactivate & enqueue\n@@ -2053,9 +2049,3 @@\n-                    if (pc != (pc = compareAndExchangeCtl(pc, qc))) {\n-                        qc = ((pc - RC_UNIT) & UMASK) | np;\n-                        w.stackPred = (int)pc;    \/\/ retry once\n-                        if (pc != compareAndExchangeCtl(pc, qc))\n-                            enqueued = false;\n-                    }\n-                    if (!enqueued)\n-                        w.phase = phase;          \/\/ back out on contention\n-                    else if ((phase = awaitWork(w, qc, idlePhase)) == idlePhase)\n+                    if (pc != (pc = compareAndExchangeCtl(pc, qc)))\n+                        w.phase = phase;          \/\/ back out contention\n+                    else if ((awaitWork(w, qc, idlePhase) & IDLE) != 0)\n@@ -2063,2 +2053,0 @@\n-                    else if (e != (e = runState)) \/\/ recheck after blocking\n-                        stateChange = true;\n@@ -2066,1 +2054,0 @@\n-                r ^= r << 13; r ^= r >>> 17; r ^= r << 5; \/\/ xorshift\n@@ -2763,1 +2750,1 @@\n-        int e, isShutdown;\n+        int e;\n@@ -2766,1 +2753,1 @@\n-                getAndBitwiseOrRunState(e = STOP | SHUTDOWN);\n+                runState = e = (lockRunState() + RS_LOCK) | STOP | SHUTDOWN;\n@@ -2768,3 +2755,3 @@\n-                if ((isShutdown = (e & SHUTDOWN)) == 0 && enable)\n-                    getAndBitwiseOrRunState(isShutdown = SHUTDOWN);\n-                if (isShutdown != 0 && isQuiescent(true))\n+                if ((e & SHUTDOWN) == 0 && enable)\n+                    runState = e = (lockRunState() + RS_LOCK) | SHUTDOWN;\n+                if ((e & SHUTDOWN) != 0 && isQuiescent(true))\n@@ -2776,0 +2763,1 @@\n+            U.fullFence();\n","filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/ForkJoinPool.java","additions":28,"deletions":40,"binary":false,"changes":68,"status":"modified"},{"patch":"@@ -902,2 +902,9 @@\n-        if (!isCompletedNormally())\n-            throw new IllegalStateException();\n+        int s = status;\n+        if ((s & DONE) == 0)\n+             throw new IllegalStateException(\"Task has not completed\");\n+        if ((s & ABNORMAL) != 0) {\n+            if ((s & THROWN) != 0)\n+                throw new IllegalStateException(\"Task completed with exception\");\n+            else\n+                throw new IllegalStateException(\"Task was cancelled\");\n+        }\n","filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/ForkJoinTask.java","additions":9,"deletions":2,"binary":false,"changes":11,"status":"modified"}]}