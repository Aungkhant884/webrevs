{"files":[{"patch":"@@ -376,1 +376,1 @@\n-     * registering new queues, or indirectly elsewhere (by revisiting\n+     * registering new queues, or indirectly elsewhere, by revisiting\n@@ -2397,1 +2397,1 @@\n-     * Runs tasks until all workerss are inactive and no tasks are\n+     * Runs tasks until all workers are inactive and no tasks are\n","filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/ForkJoinPool.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -191,8 +191,2 @@\n-        try {\n-            Object s = future.resultNow();\n-            assertEquals(\"foo\", s);\n-        } catch (Exception e) {\n-            System.err.println(\"future => \" + future.state());\n-            e.printStackTrace();\n-            fail();\n-        }\n+        Object s = future.resultNow();\n+        assertEquals(\"foo\", s);\n","filename":"test\/jdk\/java\/util\/concurrent\/ExecutorService\/CloseTest.java","additions":2,"deletions":8,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -0,0 +1,1 @@\n+maxOutputSize=2000000\n","filename":"test\/jdk\/java\/util\/concurrent\/TEST.properties","additions":1,"deletions":0,"binary":false,"changes":1,"status":"added"}]}