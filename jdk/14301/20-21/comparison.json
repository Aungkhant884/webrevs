{"files":[{"patch":"@@ -66,0 +66,1 @@\n+\n@@ -67,0 +68,14 @@\n+    static ThreadGroup topThreadGroup() {\n+        ThreadGroup g = Thread.currentThread().getThreadGroup();\n+        for (ThreadGroup p;;) {\n+            try {\n+                p = g.getParent();\n+            } catch (Exception ok) { \/\/ possible under SecurityManager\n+                break;\n+            }\n+            if (p == null)\n+                break;\n+            g = p;\n+        }\n+        return g;\n+    }\n@@ -68,1 +83,1 @@\n-        new ThreadGroup(\"closeTestThreadGroup\");\n+        new ThreadGroup(topThreadGroup(), \"closeTestThreadGroup\");\n","filename":"test\/jdk\/java\/util\/concurrent\/ExecutorService\/CloseTest.java","additions":16,"deletions":1,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -1651,0 +1651,14 @@\n+    static ThreadGroup topThreadGroup() {\n+        ThreadGroup g = Thread.currentThread().getThreadGroup();\n+        for (ThreadGroup p;;) {\n+            try {\n+                p = g.getParent();\n+            } catch (Exception ok) { \/\/ possible under SecurityManager\n+                break;\n+            }\n+            if (p == null)\n+                break;\n+            g = p;\n+        }\n+        return g;\n+    }\n@@ -1652,1 +1666,1 @@\n-        new ThreadGroup(\"jsr1666TestThreadGroup\");\n+        new ThreadGroup(topThreadGroup(), \"jsr1666TestThreadGroup\");\n","filename":"test\/jdk\/java\/util\/concurrent\/tck\/JSR166TestCase.java","additions":15,"deletions":1,"binary":false,"changes":16,"status":"modified"}]}