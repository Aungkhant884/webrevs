{"files":[{"patch":"@@ -1919,1 +1919,3 @@\n-            if (stop == 0 && replaceable)\n+        }\n+        if ((runState & STOP) == 0) {\n+            if (replaceable)\n@@ -1921,0 +1923,2 @@\n+            if (ex != null)\n+                ForkJoinTask.rethrow(ex);\n@@ -1922,2 +1926,0 @@\n-        if (ex != null)\n-            ForkJoinTask.rethrow(ex);\n@@ -2774,1 +2776,1 @@\n-     * @return runState (possibly only its status bits) on exit\n+     * @return runState on exit\n@@ -2785,1 +2787,1 @@\n-                    e = runState;\n+                    e = STOP | SHUTDOWN;\n@@ -2788,11 +2790,9 @@\n-        if ((e & (STOP | TERMINATED)) == STOP) {\n-            boolean alive = false;\n-            int r = ThreadLocalRandom.nextSecondarySeed(); \/\/ stagger traversals\n-            WorkQueue[] qs = queues;\n-            int n = (qs == null) ? 0 : qs.length;\n-            for (int l = n; l > 0; --l, ++r) {\n-                WorkQueue q; Thread o; \/\/ cancel tasks; interrupt workers\n-                if ((q = qs[r & SMASK & (n - 1)]) != null) {\n-                    if ((o = q.owner) != null) {\n-                        alive = true;\n-                        if (o != Thread.currentThread()) {\n+        if ((e & (STOP | TERMINATED)) == STOP) { \/\/ similar to isQuiescent\n+            for (int r = ThreadLocalRandom.nextSecondarySeed();;) { \/\/ stagger\n+                int prevRunState = e;\n+                WorkQueue[] qs = queues;\n+                int n = (qs == null) ? 0 : qs.length;\n+                for (int l = n; l > 0; --l, ++r) {\n+                    WorkQueue q; Thread o;  \/\/ interrupt workers, cancel tasks\n+                    if ((q = qs[r & SMASK & (n - 1)]) != null) {\n+                        if ((o = q.owner) != null && !o.isInterrupted()) {\n@@ -2804,5 +2804,5 @@\n-                    }\n-                    for (ForkJoinTask<?> t; (t = q.poll(null)) != null; ) {\n-                        try {\n-                            t.cancel(false);\n-                        } catch (Throwable ignore) {\n+                        for (ForkJoinTask<?> t; (t = q.poll(null)) != null; ) {\n+                            try {\n+                                t.cancel(false);\n+                            } catch (Throwable ignore) {\n+                            }\n@@ -2812,8 +2812,13 @@\n-            }\n-            if (((e = runState) & TERMINATED) == 0 && !alive && ctl == 0L) {\n-                if ((getAndBitwiseOrRunState(TERMINATED) & TERMINATED) == 0) {\n-                    CountDownLatch done; SharedThreadContainer ctr;\n-                    if ((done = termination) != null)\n-                        done.countDown();\n-                    if ((ctr = container) != null)\n-                        ctr.close();\n+                if (((e = runState) & TERMINATED) != 0)\n+                    break;\n+                if (e == prevRunState && (e & RS_LOCK) == 0) {\n+                    if (ctl != 0L)        \/\/ another thread will finish\n+                        break;\n+                    if (casRunState(e, e = (e | TERMINATED) + RS_EPOCH)) {\n+                        CountDownLatch done; SharedThreadContainer ctr;\n+                        if ((done = termination) != null)\n+                            done.countDown();\n+                        if ((ctr = container) != null)\n+                            ctr.close();\n+                        break;\n+                    }\n@@ -2821,1 +2826,0 @@\n-                e = runState;\n","filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/ForkJoinPool.java","additions":34,"deletions":30,"binary":false,"changes":64,"status":"modified"},{"patch":"@@ -518,0 +518,1 @@\n+                        assertFalse(Thread.interrupted());\n@@ -521,0 +522,1 @@\n+                    f.quietlyJoin();\n@@ -535,0 +537,1 @@\n+                    assertFalse(Thread.interrupted());\n@@ -538,0 +541,1 @@\n+                    f.quietlyJoin();\n@@ -553,0 +557,1 @@\n+                    assertFalse(Thread.interrupted());\n@@ -556,0 +561,1 @@\n+                    f.quietlyJoin();\n","filename":"test\/jdk\/java\/util\/concurrent\/tck\/ForkJoinPool19Test.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"}]}