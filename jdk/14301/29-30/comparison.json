{"files":[{"patch":"@@ -624,1 +624,4 @@\n-     * near-miss scenarios for inactivate\/activate races.\n+     * near-miss scenarios for inactivate\/activate races. Because idle\n+     * workers are often not yet blocked (parked), we use the\n+     * WorkQueue parker field to advertise that a waiter actually\n+     * needs unparking upon signal.\n@@ -1214,1 +1217,2 @@\n-        final ForkJoinWorkerThread owner; \/\/ null if shared or terminated\n+        final ForkJoinWorkerThread owner; \/\/ null if shared\n+        volatile Thread parker;    \/\/ set when parking in awaitWork\n@@ -1736,0 +1740,3 @@\n+    private int getAndBitwiseOrRunState(int v) { \/\/ for status bits\n+        return U.getAndBitwiseOrInt(this, RUNSTATE, v);\n+    }\n@@ -1944,0 +1951,1 @@\n+                    Thread t;\n@@ -1945,1 +1953,2 @@\n-                    U.unpark(v.owner);\n+                    if ((t = v.parker) != null)\n+                        U.unpark(t);\n@@ -1967,1 +1976,2 @@\n-                U.unpark(v.owner);\n+                if ((t = v.parker) != null)\n+                    U.unpark(t);\n@@ -1983,28 +1993,22 @@\n-        U.fullFence();\n-        long phaseSum = -1L;\n-        boolean swept = false;\n-        outer: for (int e, prevRunState = 0; ; prevRunState = e) {\n-            long c = ctl;\n-            if (((e = runState) & STOP) != 0)\n-                return true;                          \/\/ terminating\n-            else if ((c & RC_MASK) > 0L)\n-                break;                                \/\/ at least one active\n-            else if (ctl != c)                        \/\/ re-snapshot\n-                swept = false;\n-            else if (swept && e == prevRunState && (e & RS_LOCK) == 0) {\n-                if (casRunState(e, !transition ? e : \/\/ confirm\n-                                (e & SHUTDOWN) == 0 ? e + RS_EPOCH : \/\/ advance\n-                                e | STOP))           \/\/ terminate\n-                    return true;\n-                swept = false;\n-            }\n-            else {\n-                long sum = 0L;\n-                WorkQueue[] qs = queues;\n-                int n = (qs == null) ? 0 : qs.length;\n-                for (int i = 0; i < n; i += 2) {     \/\/ scan external queues\n-                    WorkQueue q; int p;\n-                    if ((q = qs[i]) != null) {\n-                        if (((p = q.phase) & IDLE) == 0 || q.top - q.base > 0) {\n-                            signalWork();            \/\/ ensure live\n-                            break outer;\n+        for (;;) {\n+            long phaseSum = -1L;\n+            boolean swept = false;\n+            for (int e, prevRunState = 0; ; prevRunState = e) {\n+                long c = ctl;\n+                if (((e = runState) & STOP) != 0)\n+                    return true;                          \/\/ terminating\n+                else if ((c & RC_MASK) > 0L)\n+                    return false;                         \/\/ at least one active\n+                else if (!swept || e != prevRunState || (e & RS_LOCK) != 0) {\n+                    long sum = c;\n+                    WorkQueue[] qs = queues;\n+                    int n = (qs == null) ? 0 : qs.length;\n+                    for (int i = 0; i < n; ++i) {         \/\/ scan queues\n+                        WorkQueue q; int p;\n+                        if ((q = qs[i]) == null)\n+                            sum += (long)(i + 1) << 48;\n+                        else if (((p = q.phase) & IDLE) == 0 ||\n+                                 q.top - q.base > 0) {\n+                            if ((i & 1) == 0)\n+                                signalWork();             \/\/ ensure live\n+                            return false;\n@@ -2012,1 +2016,2 @@\n-                        sum += p;\n+                        else\n+                            sum += p;\n@@ -2014,0 +2019,1 @@\n+                    swept = (phaseSum == (phaseSum = sum));\n@@ -2015,1 +2021,7 @@\n-                swept = (phaseSum == (phaseSum = sum));\n+                else if (compareAndSetCtl(c, c) &&        \/\/ confirm\n+                         casRunState(e, !transition ? e :\n+                                     (e & SHUTDOWN) != 0 ? e | STOP :\n+                                     e + RS_EPOCH))       \/\/ advance\n+                    return true;\n+                else\n+                    break;                                \/\/ restart\n@@ -2018,1 +2030,0 @@\n-        return false;\n@@ -2029,1 +2040,1 @@\n-            int r = w.stackPred; \/\/ seed from registerWorker\n+            int phase = w.phase, r = w.stackPred; \/\/ seed from registerWorker\n@@ -2032,1 +2043,0 @@\n-                int phase;\n@@ -2042,5 +2052,4 @@\n-                if ((next = scan(w, window, (r << 1) | 1)) >= 0L &&\n-                    ((phase = w.phase) & IDLE) == 0) {\n-                    int idlePhase = phase + IDLE; \/\/ try to inactivate & enqueue\n-                    long np = (phase + (IDLE << 1)) & LMASK, pc = ctl;\n-                    long qc = ((pc - RC_UNIT) & UMASK) | np;\n+                if ((next = scan(w, window, (r << 1) | 1)) >= 0L) {\n+                    int idlePhase = phase + IDLE; \/\/ try to inactivate\n+                    long np = (phase + (IDLE << 1)) & LMASK;\n+                    long pc = ctl, qc = ((pc - RC_UNIT) & UMASK) | np;\n@@ -2049,3 +2058,3 @@\n-                    if (pc != (pc = compareAndExchangeCtl(pc, qc)))\n-                        w.phase = phase;          \/\/ back out contention\n-                    else if ((awaitWork(w, qc, idlePhase) & IDLE) != 0)\n+                    if (pc != compareAndExchangeCtl(pc, qc))\n+                        w.phase = phase;          \/\/ back out on contention\n+                    else if ((phase = awaitWork(w, qc, idlePhase)) == idlePhase)\n@@ -2137,0 +2146,1 @@\n+                w.parker = Thread.currentThread();\n@@ -2157,0 +2167,1 @@\n+                w.parker = null;\n@@ -2215,1 +2226,2 @@\n-                U.unpark(v.owner);\n+                if ((t = v.parker) != null)\n+                    U.unpark(t);\n@@ -2750,1 +2762,1 @@\n-        int e;\n+        int e, isShutdown;\n@@ -2753,1 +2765,1 @@\n-                runState = e = (lockRunState() + RS_LOCK) | STOP | SHUTDOWN;\n+                getAndBitwiseOrRunState(e = STOP | SHUTDOWN);\n@@ -2755,3 +2767,3 @@\n-                if ((e & SHUTDOWN) == 0 && enable)\n-                    runState = e = (lockRunState() + RS_LOCK) | SHUTDOWN;\n-                if ((e & SHUTDOWN) != 0 && isQuiescent(true))\n+                if ((isShutdown = (e & SHUTDOWN)) == 0 && enable)\n+                    getAndBitwiseOrRunState(isShutdown = SHUTDOWN);\n+                if (isShutdown != 0 && isQuiescent(true))\n@@ -2761,1 +2773,1 @@\n-        if ((e & (STOP | TERMINATED)) == STOP) { \/\/ similar to isQuiescent\n+        if ((e & (STOP | TERMINATED)) == STOP) {\n@@ -2763,14 +2775,10 @@\n-            U.fullFence();\n-            long c = ctl;\n-            for (int prevRunState = 0; ; prevRunState = e) {\n-                WorkQueue[] qs = queues;\n-                int n = (qs == null) ? 0 : qs.length;\n-                for (int l = n; l > 0; --l, ++r) {\n-                    WorkQueue q; Thread o;  \/\/ interrupt workers, cancel tasks\n-                    if ((q = qs[r & SMASK & (n - 1)]) != null) {\n-                        if ((o = q.owner) != null && q.source != DEREGISTERED &&\n-                            !o.isInterrupted()) {\n-                            try {\n-                                o.interrupt();\n-                            } catch (Throwable ignore) {\n-                            }\n+            WorkQueue[] qs = queues;\n+            int n = (qs == null) ? 0 : qs.length;\n+            for (int l = n; l > 0; --l, ++r) {\n+                int j; WorkQueue q; Thread o; \/\/ cancel tasks; interrupt workers\n+                if ((q = qs[r & SMASK & (n - 1)]) != null &&\n+                    q.source != DEREGISTERED) {\n+                    if ((o = q.owner) != null && !o.isInterrupted()) {\n+                        try {\n+                            o.interrupt();\n+                        } catch (Throwable ignore) {\n@@ -2778,5 +2786,5 @@\n-                        for (ForkJoinTask<?> t; (t = q.poll(null)) != null; ) {\n-                            try {\n-                                t.cancel(false);\n-                            } catch (Throwable ignore) {\n-                            }\n+                    }\n+                    for (ForkJoinTask<?> t; (t = q.poll(null)) != null; ) {\n+                        try {\n+                            t.cancel(false);\n+                        } catch (Throwable ignore) {\n@@ -2786,14 +2794,8 @@\n-                if (c == (c = ctl) && (e = runState) == prevRunState &&\n-                     (e & RS_LOCK) == 0) {\n-                    if ((e & TERMINATED) != 0)\n-                        break;\n-                    if (c != 0L)        \/\/ another thread will finish\n-                        break;\n-                    if (casRunState(e, e = (e | TERMINATED) + RS_EPOCH)) {\n-                        CountDownLatch done; SharedThreadContainer ctr;\n-                        if ((done = termination) != null)\n-                            done.countDown();\n-                        if ((ctr = container) != null)\n-                            ctr.close();\n-                        break;\n-                    }\n+            }\n+            if (((e = runState) & TERMINATED) == 0 && ctl == 0L) {\n+                if ((getAndBitwiseOrRunState(TERMINATED) & TERMINATED) == 0) {\n+                    CountDownLatch done; SharedThreadContainer ctr;\n+                    if ((done = termination) != null)\n+                        done.countDown();\n+                    if ((ctr = container) != null)\n+                        ctr.close();\n@@ -2801,0 +2803,1 @@\n+                e = runState;\n","filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/ForkJoinPool.java","additions":88,"deletions":85,"binary":false,"changes":173,"status":"modified"},{"patch":"@@ -2449,1 +2449,1 @@\n-        } while (!weakCompareAndSetInt(o, offset, v, v + delta));\n+        } while (!compareAndSetInt(o, offset, v, v + delta));\n@@ -2487,1 +2487,1 @@\n-        } while (!weakCompareAndSetLong(o, offset, v, v + delta));\n+        } while (!compareAndSetLong(o, offset, v, v + delta));\n@@ -2514,1 +2514,1 @@\n-        } while (!weakCompareAndSetByte(o, offset, v, (byte) (v + delta)));\n+        } while (!compareAndSetByte(o, offset, v, (byte) (v + delta)));\n@@ -2541,1 +2541,1 @@\n-        } while (!weakCompareAndSetShort(o, offset, v, (short) (v + delta)));\n+        } while (!compareAndSetShort(o, offset, v, (short) (v + delta)));\n@@ -2588,1 +2588,1 @@\n-        } while (!weakCompareAndSetInt(o, offset,\n+        } while (!compareAndSetInt(o, offset,\n@@ -2633,1 +2633,1 @@\n-        } while (!weakCompareAndSetLong(o, offset,\n+        } while (!compareAndSetLong(o, offset,\n@@ -2684,1 +2684,1 @@\n-        } while (!weakCompareAndSetInt(o, offset, v, newValue));\n+        } while (!compareAndSetInt(o, offset, v, newValue));\n@@ -2722,1 +2722,1 @@\n-        } while (!weakCompareAndSetLong(o, offset, v, newValue));\n+        } while (!compareAndSetLong(o, offset, v, newValue));\n@@ -2760,1 +2760,1 @@\n-        } while (!weakCompareAndSetReference(o, offset, v, newValue));\n+        } while (!compareAndSetReference(o, offset, v, newValue));\n@@ -2787,1 +2787,1 @@\n-        } while (!weakCompareAndSetByte(o, offset, v, newValue));\n+        } while (!compareAndSetByte(o, offset, v, newValue));\n@@ -2829,1 +2829,1 @@\n-        } while (!weakCompareAndSetShort(o, offset, v, newValue));\n+        } while (!compareAndSetShort(o, offset, v, newValue));\n@@ -2957,1 +2957,1 @@\n-        } while (!weakCompareAndSetByte(o, offset,\n+        } while (!compareAndSetByte(o, offset,\n@@ -2988,1 +2988,1 @@\n-        } while (!weakCompareAndSetByte(o, offset,\n+        } while (!compareAndSetByte(o, offset,\n@@ -3019,1 +3019,1 @@\n-        } while (!weakCompareAndSetByte(o, offset,\n+        } while (!compareAndSetByte(o, offset,\n@@ -3097,1 +3097,1 @@\n-        } while (!weakCompareAndSetShort(o, offset,\n+        } while (!compareAndSetShort(o, offset,\n@@ -3128,1 +3128,1 @@\n-        } while (!weakCompareAndSetShort(o, offset,\n+        } while (!compareAndSetShort(o, offset,\n@@ -3159,1 +3159,1 @@\n-        } while (!weakCompareAndSetShort(o, offset,\n+        } while (!compareAndSetShort(o, offset,\n@@ -3191,1 +3191,1 @@\n-        } while (!weakCompareAndSetInt(o, offset,\n+        } while (!compareAndSetInt(o, offset,\n@@ -3233,1 +3233,1 @@\n-        } while (!weakCompareAndSetInt(o, offset,\n+        } while (!compareAndSetInt(o, offset,\n@@ -3264,1 +3264,1 @@\n-        } while (!weakCompareAndSetInt(o, offset,\n+        } while (!compareAndSetInt(o, offset,\n@@ -3296,1 +3296,1 @@\n-        } while (!weakCompareAndSetLong(o, offset,\n+        } while (!compareAndSetLong(o, offset,\n@@ -3327,1 +3327,1 @@\n-        } while (!weakCompareAndSetLong(o, offset,\n+        } while (!compareAndSetLong(o, offset,\n@@ -3358,1 +3358,1 @@\n-        } while (!weakCompareAndSetLong(o, offset,\n+        } while (!compareAndSetLong(o, offset,\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/misc\/Unsafe.java","additions":23,"deletions":23,"binary":false,"changes":46,"status":"modified"}]}