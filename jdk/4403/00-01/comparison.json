{"files":[{"patch":"@@ -157,8 +157,4 @@\n-                \/\/ Classes compiled prior to dynamic nestmate support invokes a private instance\n-                \/\/ method with REF_invokeSpecial.\n-                \/\/\n-                \/\/ invokespecial should only be used to invoke private nestmate constructors.\n-                \/\/ The lambda proxy class will be defined as a nestmate of targetClass.\n-                \/\/ If the method to be invoked is an instance method of targetClass, then\n-                \/\/ convert to use invokevirtual or invokeinterface.\n-                if (targetClass == implClass && !implInfo.getName().equals(\"<init>\")) {\n+                \/\/ Classes compiled prior to dynamic nestmate support invoke a private instance\n+                \/\/ method with REF_invokeSpecial. Newer classes use REF_invokeVirtual or\n+                \/\/ REF_invokeInterface, and we can use that instruction in the lambda class.\n+                if (targetClass == implClass) {\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/AbstractValidatingLambdaMetafactory.java","additions":4,"deletions":8,"binary":false,"changes":12,"status":"modified"}]}