{"files":[{"patch":"@@ -2044,34 +2044,0 @@\n-    static long reset_time_utc;\n-    static final long WRAP_TIME_MILLIS = 0x00000000FFFFFFFFL;\n-\n-    \/*\n-     * This function converts between the X server time (number of milliseconds\n-     * since the last server reset) and the UTC time for the 'when' field of an\n-     * InputEvent (or another event type with a timestamp).\n-     *\/\n-    static long nowMillisUTC_offset(long server_offset) {\n-        \/\/ ported from awt_util.c\n-        \/*\n-         * Because Time is of type 'unsigned long', it is possible that Time will\n-         * never wrap when using 64-bit Xlib. However, if a 64-bit client\n-         * connects to a 32-bit server, I suspect the values will still wrap. So\n-         * we should not attempt to remove the wrap checking even if _LP64 is\n-         * true.\n-         *\/\n-\n-        long current_time_utc = System.currentTimeMillis();\n-        if (log.isLoggable(PlatformLogger.Level.FINER)) {\n-            log.finer(\"reset_time=\" + reset_time_utc + \", current_time=\" + current_time_utc\n-                      + \", server_offset=\" + server_offset + \", wrap_time=\" + WRAP_TIME_MILLIS);\n-        }\n-\n-        if ((current_time_utc - reset_time_utc) > WRAP_TIME_MILLIS) {\n-            reset_time_utc = System.currentTimeMillis() - getCurrentServerTime();\n-        }\n-\n-        if (log.isLoggable(PlatformLogger.Level.FINER)) {\n-            log.finer(\"result = \" + (reset_time_utc + server_offset));\n-        }\n-        return reset_time_utc + server_offset;\n-    }\n-\n","filename":"src\/java.desktop\/unix\/classes\/sun\/awt\/X11\/XToolkit.java","additions":0,"deletions":34,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -685,1 +685,1 @@\n-        long jWhen = XToolkit.nowMillisUTC_offset(when);\n+        long jWhen = System.currentTimeMillis();\n@@ -833,1 +833,1 @@\n-        long jWhen = XToolkit.nowMillisUTC_offset(xme.get_time());\n+        long jWhen = System.currentTimeMillis();\n@@ -960,1 +960,1 @@\n-        long jWhen = XToolkit.nowMillisUTC_offset(xce.get_time());\n+        long jWhen = System.currentTimeMillis();\n@@ -1175,1 +1175,0 @@\n-                          ev.get_time(),\n@@ -1189,1 +1188,0 @@\n-                              ev.get_time(),\n@@ -1259,1 +1257,0 @@\n-                          ev.get_time(),\n@@ -1473,1 +1470,1 @@\n-    public void postKeyEvent(int id, long when, int keyCode, int keyChar,\n+    public void postKeyEvent(int id, int keyCode, int keyChar,\n@@ -1478,1 +1475,1 @@\n-        long jWhen = XToolkit.nowMillisUTC_offset(when);\n+        long jWhen = System.currentTimeMillis();\n","filename":"src\/java.desktop\/unix\/classes\/sun\/awt\/X11\/XWindow.java","additions":5,"deletions":8,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -889,1 +889,0 @@\n-java\/awt\/Component\/UpdatingBootTime\/UpdatingBootTime.html 7194219 linux-all\n","filename":"test\/jdk\/ProblemList.txt","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-  @bug 6461933\n+  @bug 6461933 7194219\n","filename":"test\/jdk\/java\/awt\/Component\/UpdatingBootTime\/UpdatingBootTime.html","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n-  @bug 6461933\n+  @bug 6461933 7194219\n","filename":"test\/jdk\/java\/awt\/Component\/UpdatingBootTime\/UpdatingBootTime.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}