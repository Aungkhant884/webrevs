{"files":[{"patch":"@@ -1720,2 +1720,0 @@\n-    int non_profiled_offset = in_bytes(CounterData::count_offset());\n-\n","filename":"src\/hotspot\/cpu\/x86\/interp_masm_x86.cpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -779,2 +779,2 @@\n-          \"Use profile data at type check if together profiled types\"       \\\n-          \"account for more than this threshold\")                           \\\n+          \"Use profile data at type check if profiled types account for\"    \\\n+          \"more than this threshold\")                                       \\\n","filename":"src\/hotspot\/share\/opto\/c2_globals.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1597,2 +1597,1 @@\n-  \/\/ If the comparison is a subtype check, then SubTypeCheck nodes may have profile data attached to them and may be\n-  \/\/ different nodes even-though they perform the same subtype check\n+\n@@ -1606,0 +1605,2 @@\n+  \/\/ If the comparison is a subtype check, then SubTypeCheck nodes may have profile data attached to them and may be\n+  \/\/ different nodes even-though they perform the same subtype check\n","filename":"src\/hotspot\/share\/opto\/ifnode.cpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -64,0 +64,1 @@\n+  \/\/ method\/bci that for this subtype check so profile data can be retrieved after parsing is over\n","filename":"src\/hotspot\/share\/opto\/subtypenode.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1475,5 +1475,0 @@\n-    static {\n-        beforeMatchingNameRegex(SUBTYPE_CHECK, \"SubTypeCheck\");\n-    }\n-\n-    public static final String SUBTYPE_CHECK = PREFIX + \"SUBTYPE_CHECK\" + POSTFIX;\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/IRNode.java","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"}]}