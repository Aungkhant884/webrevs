{"files":[{"patch":"@@ -1336,7 +1336,2 @@\n-    Address nonprofiled_receiver_count_addr\n-      = __ form_address(rscratch2, mdo,\n-                        md->byte_offset_of_slot(data, CounterData::count_offset()),\n-                        0);\n-    __ ldr(rscratch1, nonprofiled_receiver_count_addr);\n-    __ add(rscratch1, rscratch1, DataLayout::counter_increment);\n-    __ str(rscratch1, nonprofiled_receiver_count_addr);\n+    Address counter_addr(mdo, md->byte_offset_of_slot(data, CounterData::count_offset()));\n+    __ addptr(counter_addr, DataLayout::counter_increment);\n@@ -1457,3 +1452,1 @@\n-      __ ldr(rscratch1, counter_addr);\n-      __ add(rscratch1, rscratch1, DataLayout::counter_increment);\n-      __ str(rscratch1, counter_addr);\n+      __ addptr(counter_addr, DataLayout::counter_increment);\n","filename":"src\/hotspot\/cpu\/aarch64\/c1_LIRAssembler_aarch64.cpp","additions":3,"deletions":10,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -41,1 +41,0 @@\n-  static final int INCLUDE_JVMCI;\n@@ -47,6 +46,1 @@\n-    INCLUDE_JVMCI = VM.getVM().getTypeDataBase().lookupIntConstant(\"INCLUDE_JVMCI\");\n-    if (INCLUDE_JVMCI == 1) {\n-        receiver0Offset = nonProfiledCountOffset + 1;\n-    } else {\n-        receiver0Offset = counterCellCount;\n-    }\n+    receiver0Offset = counterCellCount;\n@@ -69,3 +63,0 @@\n-    if (INCLUDE_JVMCI == 1) {\n-      cellCount += 1;\n-    }\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/oops\/ReceiverTypeData.java","additions":1,"deletions":10,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -69,2 +69,2 @@\n-        final int typeCheckDataSize = cellIndexToOffset(2) + typeDataRowSize * config.typeProfileWidth;\n-        final int virtualCallDataSize = cellIndexToOffset(2) + typeDataRowSize * (config.typeProfileWidth + config.methodProfileWidth);\n+        final int typeCheckDataSize = cellIndexToOffset(1) + typeDataRowSize * config.typeProfileWidth;\n+        final int virtualCallDataSize = cellIndexToOffset(1) + typeDataRowSize * (config.typeProfileWidth + config.methodProfileWidth);\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk\/vm\/ci\/hotspot\/HotSpotMethodData.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -225,4 +225,4 @@\n-        runCheck(BadFailOnConstraint.create(CheckCastArray.class, \"array()\", 1, cmp, \"precise\"),\n-                 BadFailOnConstraint.create(CheckCastArray.class, \"array()\", 2, 1,cmp, \"precise\", \"MyClass\"),\n-                 BadFailOnConstraint.create(CheckCastArray.class, \"array()\", 2, 2,cmp, \"precise\", \"ir_framework\/tests\/MyClass\"),\n-                 GoodFailOnConstraint.create(CheckCastArray.class, \"array()\", 3),\n+        runCheck(BadFailOnConstraint.create(CheckCastArray.class, \"array(java.lang.Object[])\", 1, cmp, \"precise\"),\n+                 BadFailOnConstraint.create(CheckCastArray.class, \"array(java.lang.Object[])\", 2, 1,cmp, \"precise\", \"MyClass\"),\n+                 BadFailOnConstraint.create(CheckCastArray.class, \"array(java.lang.Object[])\", 2, 2,cmp, \"precise\", \"ir_framework\/tests\/MyClass\"),\n+                 GoodFailOnConstraint.create(CheckCastArray.class, \"array(java.lang.Object[])\", 3),\n@@ -1239,2 +1239,2 @@\n-    public boolean array() {\n-        return oArr instanceof MyClass[];\n+    public boolean array(Object[] arr) {\n+        return arr instanceof MyClass[];\n@@ -1243,0 +1243,6 @@\n+    @Run(test = \"array\")\n+    public void testArray() {\n+        array(oArr);\n+        array(mArr);\n+    }\n+    \n","filename":"test\/hotspot\/jtreg\/testlibrary_tests\/ir_framework\/tests\/TestIRMatching.java","additions":12,"deletions":6,"binary":false,"changes":18,"status":"modified"}]}