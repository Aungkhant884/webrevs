{"files":[{"patch":"@@ -503,13 +503,13 @@\n-     int installCode(HotSpotCompiledCode compiledCode, InstalledCode code, long failedSpeculationsAddress, byte[] speculations) {\n-         int codeInstallFlags = getInstallCodeFlags();\n-         boolean withComments = (codeInstallFlags & 0x0001) != 0;\n-         boolean withMethods = (codeInstallFlags & 0x0002) != 0;\n-         boolean withTypeInfo;\n-         if ((codeInstallFlags & 0x0004) != 0 && HotSpotJVMCIRuntime.Option.CodeSerializationTypeInfo.isDefault) {\n-             withTypeInfo = true;\n-         } else {\n-             withTypeInfo = HotSpotJVMCIRuntime.Option.CodeSerializationTypeInfo.getBoolean();\n-         }\n-         try (HotSpotCompiledCodeStream stream = new HotSpotCompiledCodeStream(compiledCode, withTypeInfo, withComments, withMethods)) {\n-             return installCode0(stream.headChunk, stream.timeNS, withTypeInfo, compiledCode, stream.objectPool, code, failedSpeculationsAddress, speculations);\n-         }\n+    int installCode(HotSpotCompiledCode compiledCode, InstalledCode code, long failedSpeculationsAddress, byte[] speculations) {\n+        int codeInstallFlags = getInstallCodeFlags();\n+        boolean withComments = (codeInstallFlags & 0x0001) != 0;\n+        boolean withMethods = (codeInstallFlags & 0x0002) != 0;\n+        boolean withTypeInfo;\n+        if ((codeInstallFlags & 0x0004) != 0 && HotSpotJVMCIRuntime.Option.CodeSerializationTypeInfo.isDefault) {\n+            withTypeInfo = true;\n+        } else {\n+            withTypeInfo = HotSpotJVMCIRuntime.Option.CodeSerializationTypeInfo.getBoolean();\n+        }\n+        try (HotSpotCompiledCodeStream stream = new HotSpotCompiledCodeStream(compiledCode, withTypeInfo, withComments, withMethods)) {\n+            return installCode0(stream.headChunk, stream.timeNS, withTypeInfo, compiledCode, stream.objectPool, code, failedSpeculationsAddress, speculations);\n+        }\n@@ -518,8 +518,8 @@\n-     native int installCode0(long compiledCodeBuffer,\n-                     long serializationNS,\n-                     boolean withTypeInfo,\n-                     HotSpotCompiledCode compiledCode,\n-                     Object[] objectPool,\n-                     InstalledCode code,\n-                     long failedSpeculationsAddress,\n-                     byte[] speculations);\n+    native int installCode0(long compiledCodeBuffer,\n+                    long serializationNS,\n+                    boolean withTypeInfo,\n+                    HotSpotCompiledCode compiledCode,\n+                    Object[] objectPool,\n+                    InstalledCode code,\n+                    long failedSpeculationsAddress,\n+                    byte[] speculations);\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk.vm.ci.hotspot\/src\/jdk\/vm\/ci\/hotspot\/CompilerToVM.java","additions":21,"deletions":21,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -169,1 +169,1 @@\n-            return getMethodPointer() == getMethodPointer();\n+            return that.getMethodPointer() == getMethodPointer();\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk.vm.ci.hotspot\/src\/jdk\/vm\/ci\/hotspot\/HotSpotResolvedJavaMethodImpl.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -70,0 +70,11 @@\n+    @Test\n+    public void equalsTest() {\n+        for (ResolvedJavaField f : fields.values()) {\n+            for (ResolvedJavaField that : fields.values()) {\n+                boolean expect = f == that;\n+                boolean actual = f.equals(that);\n+                assertEquals(expect, actual);\n+            }\n+        }\n+    }\n+\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/jdk.vm.ci.runtime.test\/src\/jdk\/vm\/ci\/runtime\/test\/TestResolvedJavaField.java","additions":11,"deletions":0,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n- * @ignore 8249621\n@@ -112,0 +111,11 @@\n+    @Test\n+    public void equalsTest() {\n+        for (ResolvedJavaMethod m : methods.values()) {\n+            for (ResolvedJavaMethod that : methods.values()) {\n+                boolean expect = m == that;\n+                boolean actual = m.equals(that);\n+                assertEquals(expect, actual);\n+            }\n+        }\n+    }\n+\n@@ -212,1 +222,3 @@\n-            assertEquals(m.canBeStaticallyBound(), canBeStaticallyBound(e.getKey()));\n+            boolean expect = m.canBeStaticallyBound();\n+            boolean actual = canBeStaticallyBound(e.getKey());\n+            assertEquals(m.toString(), expect, actual);\n@@ -218,2 +230,6 @@\n-        return (Modifier.isFinal(modifiers) || Modifier.isPrivate(modifiers) || Modifier.isStatic(modifiers) || Modifier.isFinal(method.getDeclaringClass().getModifiers())) &&\n-                        !Modifier.isAbstract(modifiers);\n+        return (Modifier.isFinal(modifiers) ||\n+                Modifier.isPrivate(modifiers) ||\n+                Modifier.isStatic(modifiers) ||\n+                method instanceof Constructor ||\n+                Modifier.isFinal(method.getDeclaringClass().getModifiers())) &&\n+                !Modifier.isAbstract(modifiers);\n@@ -259,1 +275,2 @@\n-            assertEquals(expected, actual);\n+            \/\/ JVMCI StackTraceElements omit the class loader and module info\n+            assertEquals(expected.toString(), actual.toString());\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/jdk.vm.ci.runtime.test\/src\/jdk\/vm\/ci\/runtime\/test\/TestResolvedJavaMethod.java","additions":22,"deletions":5,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -94,0 +94,11 @@\n+    @Test\n+    public void equalsTest() {\n+        for (ResolvedJavaType t : javaTypes) {\n+            for (ResolvedJavaType that : javaTypes) {\n+                boolean expect = t == that;\n+                boolean actual = t.equals(that);\n+                assertEquals(expect, actual);\n+            }\n+        }\n+    }\n+\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/jdk.vm.ci.runtime.test\/src\/jdk\/vm\/ci\/runtime\/test\/TestResolvedJavaType.java","additions":11,"deletions":0,"binary":false,"changes":11,"status":"modified"}]}