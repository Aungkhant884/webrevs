{"files":[{"patch":"@@ -105,2 +105,0 @@\n-\/\/      adr\/adrp Rx imm21; movk Rx #imm16<<32; add Ry, Rx, #offset_in_page\n-\/\/      adr\/adrp Rx imm21; movk Rx #imm16<<32\n@@ -108,0 +106,8 @@\n+\/\/      adr\/adrp Rx imm21; movk Rx #imm16<<32\n+\/\/      adr\/adrp Rx imm21; movk Rx #imm16<<32; add Ry, Rx, #offset_in_page\n+\/\/      The latter form can only happen when the target is an\n+\/\/      ExternalAddress, and (by definition) ExternalAddresses don't\n+\/\/      move. Because of that property, there is never any need to\n+\/\/      patch the last of the three instructions. However,\n+\/\/      MacroAssembler::target_addr_for_insn takes all three\n+\/\/      instructions into account and returns the correct address.\n","filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.cpp","additions":8,"deletions":2,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -6962,0 +6962,1 @@\n+#ifdef ASSERT\n@@ -6963,0 +6964,2 @@\n+      \/\/ Stress relocs for adrp() by trying to reach a page beyond\n+      \/\/ the range of a simple ADRP instruction.\n@@ -6968,0 +6971,1 @@\n+#endif \/\/ ASSERT\n","filename":"src\/hotspot\/cpu\/aarch64\/stubGenerator_aarch64.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"}]}