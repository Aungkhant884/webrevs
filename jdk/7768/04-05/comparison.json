{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2012, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,5 +28,15 @@\n-import java.awt.*;\n-import java.awt.event.*;\n-import java.beans.*;\n-\n-import javax.swing.*;\n+import java.awt.Color;\n+import java.awt.Window;\n+import java.awt.event.FocusEvent;\n+import java.awt.event.FocusListener;\n+import java.beans.PropertyChangeEvent;\n+import java.beans.PropertyChangeListener;\n+\n+import javax.swing.JComponent;\n+import javax.swing.JTree;\n+import javax.swing.JTable;\n+import javax.swing.JList;\n+import javax.swing.SwingUtilities;\n+import javax.swing.UIManager;\n+\n+import javax.swing.plaf.BorderUIResource;\n@@ -116,0 +126,1 @@\n+\n@@ -130,0 +141,1 @@\n+\n@@ -132,0 +144,9 @@\n+\n+        \/\/ focus ring changes for on-the-fly accent color changes\n+        Color lighterFocusRing = AquaLookAndFeel.deriveLighterFocusRing(\n+                UIManager.getColor(\"Focus.color\"));\n+        BorderUIResource.LineBorderUIResource focusCellHighlightBorder =\n+                new BorderUIResource.LineBorderUIResource(lighterFocusRing, 2);\n+        UIManager.getDefaults().put(\"Table.focusCellHighlightBorder\",\n+                focusCellHighlightBorder);\n+\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaFocusHandler.java","additions":27,"deletions":6,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -893,1 +893,1 @@\n-                    deriveContrastFocusRing(selectionBackground), 2),\n+                    deriveLighterFocusRing(focusRingColor), 2),\n@@ -1128,3 +1128,2 @@\n-     * Returns a lighter Cell Focus Ring color by changing saturation\n-     * and setting the brightness to 100% for a given selection\n-     * background color.\n+     * Returns a lighter Focus Ring color by changing saturation\n+     * and setting the brightness to 100% for incoming focusRingColor.\n@@ -1132,6 +1131,6 @@\n-     * If selectedBackgroundColor is equal to white\/black\/grey, the\n-     * returned focus ring color is Light Gray. For all other colors,\n-     * a lighter color of selectionBackgroundColor is returned. A new\n-     * Focus Ring color (in the latter case) is obtained by adjusting\n-     * the saturation levels and setting the brightness to 100% of the\n-     * corresponding selectedBackgroundColor.\n+     * If the incoming focusRingColor is equal to white\/black\/grey, the\n+     * returned focusRingColor is Light Gray. For all other colors,\n+     * a lighter color of focusRingColor is returned. A new focusRingColor\n+     * (in the latter case), is obtained by adjusting the saturation\n+     * levels and setting the brightness to 100% of the\n+     * incoming focusRingColor.\n@@ -1139,1 +1138,1 @@\n-     * @param selectedBackgroundColor - the {@code Color} object\n+     * @param focusRingColor - the {@code Color} object\n@@ -1142,1 +1141,1 @@\n-    private Color deriveContrastFocusRing(Color selectedBackgroundColor) {\n+    static Color deriveLighterFocusRing(Color focusRingColor) {\n@@ -1155,0 +1154,3 @@\n+        \/\/ focus ring color returned for Graphite accent color\n+        Color graphiteFocusRing = new Color(135,135,140);\n+\n@@ -1157,3 +1159,3 @@\n-        int redValue = selectedBackgroundColor.getRed();\n-        int greenValue = selectedBackgroundColor.getGreen();\n-        int blueValue = selectedBackgroundColor.getBlue();\n+        int redValue = focusRingColor.getRed();\n+        int greenValue = focusRingColor.getGreen();\n+        int blueValue = focusRingColor.getBlue();\n@@ -1161,2 +1163,3 @@\n-        \/\/ if selectionBackground color white\/black\/gray\n-        if ((redValue == greenValue && redValue == blueValue)) {\n+        \/\/ if focusRingColor is white\/black\/gray\n+        if ((redValue == greenValue && redValue == blueValue)\n+                || focusRingColor.equals(graphiteFocusRing)) {\n@@ -1166,1 +1169,1 @@\n-        \/\/ if selectionBackground color NOT white\/black\/gray\n+        \/\/ if focusRingColor color NOT white\/black\/gray\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaLookAndFeel.java","additions":21,"deletions":18,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -59,0 +59,3 @@\n+            \/\/ focus ring color returned for Graphite accent color\n+            Color graphiteFocusRing = new Color(135,135,140);\n+\n@@ -61,1 +64,2 @@\n-                selectionBackground = (Color) UIManager.getDefaults().get(\"Table.selectionBackground\");\n+                selectionBackground = (Color) UIManager.getDefaults()\n+                        .get(\"Table.selectionBackground\");\n@@ -85,3 +89,3 @@\n-            int redValue = selectionBackground.getRed();\n-            int greenValue = selectionBackground.getGreen();\n-            int blueValue = selectionBackground.getBlue();\n+            int redValue = originalFocusRingColor.getRed();\n+            int greenValue = originalFocusRingColor.getGreen();\n+            int blueValue = originalFocusRingColor.getBlue();\n@@ -89,2 +93,4 @@\n-            \/\/ Selected Background color: WHITE\/BLACK\/GRAY\n-            if (redValue == greenValue && redValue == blueValue && brighterFocusRingColor.equals(Color.LIGHT_GRAY)) {\n+            \/\/ Original Focus ring color: WHITE\/BLACK\/GRAY\n+            if ((redValue == greenValue && redValue == blueValue ||\n+                    originalFocusRingColor.equals(graphiteFocusRing)) &&\n+                    brighterFocusRingColor.equals(Color.LIGHT_GRAY)) {\n","filename":"test\/jdk\/javax\/swing\/JTable\/7124282\/JTableFocusRingTest.java","additions":12,"deletions":6,"binary":false,"changes":18,"status":"modified"}]}