{"files":[{"patch":"@@ -130,1 +130,2 @@\n-            setSelectionColors(c, \"Table.selectionInactiveForeground\", \"Table.selectionInactiveBackground\");\n+            setSelectionColors(c, \"Table.selectionInactiveForeground\",\n+                    \"Table.selectionInactiveBackground\");\n@@ -135,1 +136,2 @@\n-            setSelectionColors(c, \"Table.selectionForeground\", \"Table.selectionBackground\");\n+            setSelectionColors(c, \"Table.selectionForeground\",\n+                    \"Table.selectionBackground\");\n@@ -163,1 +165,2 @@\n-            setSelectionColors(c, \"List.selectionInactiveForeground\", \"List.selectionInactiveBackground\");\n+            setSelectionColors(c, \"List.selectionInactiveForeground\",\n+                    \"List.selectionInactiveBackground\");\n@@ -168,1 +171,2 @@\n-            setSelectionColors(c, \"List.selectionForeground\", \"List.selectionBackground\");\n+            setSelectionColors(c, \"List.selectionForeground\",\n+                    \"List.selectionBackground\");\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaFocusHandler.java","additions":8,"deletions":4,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -1128,1 +1128,1 @@\n-     * Returns a lighter Focus Ring color by changing saturation\n+     * Returns a new Focus Ring color by changing saturation\n@@ -1131,5 +1131,4 @@\n-     * If the incoming focusRingColor is equal to white\/black\/grey, the\n-     * returned focusRingColor is Light Gray. For all other colors,\n-     * a lighter color of focusRingColor is returned. A new focusRingColor\n-     * (in the latter case), is obtained by adjusting the saturation\n-     * levels and setting the brightness to 100% of the\n+     * If the incoming focusRingColor is equal to white\/black\/grayish,\n+     * the returned focusRingColor is Light Gray. For all other colors,\n+     * new focusRingColor (in the latter case), is obtained by adjusting\n+     * the saturation levels and setting the brightness to 100% of the\n@@ -1147,1 +1146,4 @@\n-        \/\/ used to compare with saturation value of selectedBackgroundColor and\n+        \/\/ saturation threshold for grayish colors\n+        float satGrayScale = 0.10f;\n+\n+        \/\/ used to compare with saturation value of original focus ring and\n@@ -1154,3 +1156,0 @@\n-        \/\/ focus ring color returned for Graphite accent color\n-        Color graphiteFocusRing = new Color(135,135,140);\n-\n@@ -1163,3 +1162,5 @@\n-        \/\/ if focusRingColor is white\/black\/gray\n-        if ((redValue == greenValue && redValue == blueValue)\n-                || focusRingColor.equals(graphiteFocusRing)) {\n+        Color.RGBtoHSB(redValue, greenValue, blueValue, hsbValues);\n+\n+        \/\/ if focusRingColor is White\/Black\/Grayish\n+        if ((hsbValues[0] == 0 && hsbValues[1] == 0)\n+                || hsbValues[1] <= satGrayScale) {\n@@ -1169,4 +1170,2 @@\n-        \/\/ if focusRingColor color NOT white\/black\/gray\n-        Color.RGBtoHSB(redValue, greenValue, blueValue, hsbValues);\n-\n-        \/\/saturation adjustment - saturation set to either lower or\n+        \/\/ if focusRingColor color NOT White\/Black\/Grayish\n+        \/\/ saturation adjustment - saturation set to either lower or\n@@ -1177,2 +1176,2 @@\n-        \/\/brightness adjustment - brightness set to 100%, always return the\n-        \/\/brightest color for the new color\n+        \/\/ brightness adjustment - brightness set to 100%, always return the\n+        \/\/ brightest color for the new color\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaLookAndFeel.java","additions":18,"deletions":19,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -29,1 +29,4 @@\n- * @summary Tests whether the JTable's cell focus ring is visible against the table's selection background color\n+ * @summary Checks whether the JTable's focus ring color's RGB color\n+ * diff with selectionBackground is greater in comparison to original\n+ * focus ring (represented by 'Focus.color' property in Aqua LAF\n+ * UIDefaults)\n@@ -34,0 +37,1 @@\n+import java.util.Arrays;\n@@ -52,2 +56,2 @@\n-            float[] originalFocusRingRGB = new float[3];\n-            float[] brighterFocusRingRGB = new float[3];\n+            float[] oldCellRingRGB = new float[3];\n+            float[] newCellRingRGB = new float[3];\n@@ -55,3 +59,3 @@\n-            Color selectionBackground = null;\n-            Color originalFocusRingColor = null;\n-            Color brighterFocusRingColor = null;\n+            Color selectionBck = null;\n+            Color oldRingColor = null;\n+            Color newRingColor = null;\n@@ -59,2 +63,2 @@\n-            \/\/ focus ring color returned for Graphite accent color\n-            Color graphiteFocusRing = new Color(135,135,140);\n+            \/\/ saturation threshold for grayish colors\n+            float satGrayScale = 0.10f;\n@@ -63,2 +67,3 @@\n-                    && UIManager.getDefaults().get(\"Table.selectionBackground\") instanceof Color) {\n-                selectionBackground = (Color) UIManager.getDefaults()\n+                    && UIManager.getDefaults().get(\"Table.selectionBackground\")\n+                    instanceof Color) {\n+                selectionBck = (Color) UIManager.getDefaults()\n@@ -68,2 +73,3 @@\n-                    && UIManager.getDefaults().get(\"Focus.color\") instanceof Color) {\n-               originalFocusRingColor = (Color) UIManager.getDefaults().get(\"Focus.color\");\n+                    && UIManager.getDefaults().get(\"Focus.color\")\n+                    instanceof Color) {\n+               oldRingColor = (Color) UIManager.getDefaults().get(\"Focus.color\");\n@@ -72,3 +78,4 @@\n-            if (UIManager.getDefaults().get(\"Table.focusCellHighlightBorder\") != null\n-                    && UIManager.getDefaults().get(\"Table.focusCellHighlightBorder\")\n-                    instanceof LineBorderUIResource) {\n+            if (UIManager.getDefaults()\n+                    .get(\"Table.focusCellHighlightBorder\") != null &&\n+                    UIManager.getDefaults().get(\"Table.focusCellHighlightBorder\")\n+                            instanceof LineBorderUIResource) {\n@@ -77,1 +84,1 @@\n-                brighterFocusRingColor = cellFocusBorderObj.getLineColor();\n+                newRingColor = cellFocusBorderObj.getLineColor();\n@@ -80,2 +87,2 @@\n-            if (selectionBackground == null || originalFocusRingColor == null ||\n-                    brighterFocusRingColor == null) {\n+            if (selectionBck == null || oldRingColor == null ||\n+                    newRingColor == null) {\n@@ -85,14 +92,25 @@\n-            System.out.println(\"Selection Background Color: \"+ selectionBackground.toString());\n-            System.out.println(\"Original FocusRing Color: \"+ originalFocusRingColor.toString());\n-            System.out.println(\"Brighter FocusRing Color: \"+ brighterFocusRingColor.toString());\n-\n-            int redValue = originalFocusRingColor.getRed();\n-            int greenValue = originalFocusRingColor.getGreen();\n-            int blueValue = originalFocusRingColor.getBlue();\n-\n-            \/\/ Original Focus ring color: WHITE\/BLACK\/GRAY\n-            if ((redValue == greenValue && redValue == blueValue ||\n-                    originalFocusRingColor.equals(graphiteFocusRing)) &&\n-                    brighterFocusRingColor.equals(Color.LIGHT_GRAY)) {\n-                System.out.println(\"Condition-Background Color: WHITE\/BLACK\/GRAY, \" +\n-                        \"Focus Ring Color: LIGHT GRAY\");\n+            System.out.println(\"Selection Background Color: \"\n+                    + selectionBck.toString());\n+\n+            System.out.println(\"Original FocusRing Color: \"\n+                    + oldRingColor.toString());\n+\n+            System.out.println(\"Brighter FocusRing Color: \"\n+                    + newRingColor.toString());\n+\n+            int redValue = oldRingColor.getRed();\n+            int greenValue = oldRingColor.getGreen();\n+            int blueValue = oldRingColor.getBlue();\n+\n+            float[] hsbValues = new float[3];\n+            Color.RGBtoHSB(redValue, greenValue, blueValue, hsbValues);\n+\n+            System.out.println(\"Original Focus Ring Hue, Saturation and\" +\n+                    \" Brightness: \"+ Arrays.toString(hsbValues));\n+\n+            \/\/ Edge case - Original Focus ring color: WHITE\/BLACK\/GRAY\n+            if (((hsbValues[0] == 0 && hsbValues[1] == 0)\n+                    || hsbValues[1] <= satGrayScale) &&\n+                    newRingColor.equals(Color.LIGHT_GRAY)) {\n+                System.out.println(\"Original Focus ring color:\" +\n+                        \"WHITE\/BLACK\/GRAYISH, Focus Ring Color: LIGHT GRAY\");\n@@ -102,3 +120,3 @@\n-            selectionBackground.getRGBColorComponents(bckRGB);\n-            originalFocusRingColor.getRGBColorComponents(originalFocusRingRGB);\n-            brighterFocusRingColor.getRGBColorComponents(brighterFocusRingRGB);\n+            selectionBck.getRGBColorComponents(bckRGB);\n+            oldRingColor.getRGBColorComponents(oldCellRingRGB);\n+            newRingColor.getRGBColorComponents(newCellRingRGB);\n@@ -106,2 +124,2 @@\n-            float originalRGBDiff = calculateRGBDiff(originalFocusRingRGB, bckRGB);\n-            float brighterRGBDiff = calculateRGBDiff(brighterFocusRingRGB, bckRGB);\n+            float originalRGBDiff = calculateRGBDiff(oldCellRingRGB, bckRGB);\n+            float brighterRGBDiff = calculateRGBDiff(newCellRingRGB, bckRGB);\n","filename":"test\/jdk\/javax\/swing\/JTable\/7124282\/JTableFocusRingTest.java","additions":55,"deletions":37,"binary":false,"changes":92,"status":"modified"}]}