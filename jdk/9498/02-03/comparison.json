{"files":[{"patch":"@@ -5121,0 +5121,12 @@\n+  emit_int16(0x00, (0xC0 | encode));\n+}\n+\n+void Assembler::evpshufb(XMMRegister dst, KRegister mask, XMMRegister nds, XMMRegister src, bool merge, int vector_len) {\n+  assert(VM_Version::supports_avx512bw() && (vector_len == AVX_512bit || VM_Version::supports_avx512vl()), \"\");\n+  InstructionAttr attributes(vector_len, \/* rex_w *\/ false, \/* legacy_mode *\/ false, \/* no_mask_reg *\/ false, \/* uses_vl *\/ true);\n+  attributes.set_is_evex_instruction();\n+  attributes.set_embedded_opmask_register_specifier(mask);\n+  if (merge) {\n+    attributes.reset_is_clear_context();\n+  }\n+  int encode = simd_prefix_and_encode(dst, nds, src, VEX_SIMD_66, VEX_OPCODE_0F_38, &attributes);\n","filename":"src\/hotspot\/cpu\/x86\/assembler_x86.cpp","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -1939,0 +1939,2 @@\n+  void evpshufb(XMMRegister dst, KRegister mask, XMMRegister nds, XMMRegister src, bool merge, int vector_len);\n+\n","filename":"src\/hotspot\/cpu\/x86\/assembler_x86.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -5685,2 +5685,2 @@\n-                                        XMMRegister xtmp2, XMMRegister xtmp3, XMMRegister xtmp4, XMMRegister xtmp5,\n-                                        Register rtmp, KRegister ktmp1, KRegister ktmp2, int vlen_enc) {\n+                                        XMMRegister xtmp2, XMMRegister xtmp3, Register rtmp, KRegister ktmp1,\n+                                        KRegister ktmp2, int vlen_enc) {\n@@ -5695,1 +5695,1 @@\n-  evpbroadcastb(xtmp2, rtmp, vlen_enc);\n+  evpbroadcastb(xtmp1, rtmp, vlen_enc);\n@@ -5701,5 +5701,3 @@\n-  evpcmpb(ktmp2, k0, shuffle, xtmp2, Assembler::lt, true, vlen_enc);\n-  vpermq(xtmp3, src, 0x44, vlen_enc);\n-  vinserti64x4(xtmp3, xtmp3, xtmp3, 0x1);\n-  vpshufb(xtmp3, xtmp3, shuffle, vlen_enc);\n-  evmovdqub(dst, ktmp2, xtmp3, false, vlen_enc);\n+  evpcmpb(ktmp2, k0, shuffle, xtmp1, Assembler::lt, true, vlen_enc);\n+  evshufi64x2(xtmp2, src, src, 0x0, vlen_enc);\n+  evpshufb(dst, ktmp2, xtmp2, shuffle, false, vlen_enc);\n@@ -5709,3 +5707,3 @@\n-  evpcmpb(ktmp1, k0, shuffle,  xtmp2, Assembler::nlt, true, vlen_enc);\n-  vpsllq(xtmp5, xtmp2, 0x1, vlen_enc);\n-  evpcmpb(ktmp2, k0, shuffle, xtmp5, Assembler::lt, true, vlen_enc);\n+  evpcmpb(ktmp1, k0, shuffle,  xtmp1, Assembler::nlt, true, vlen_enc);\n+  vpsllq(xtmp2, xtmp1, 0x1, vlen_enc);\n+  evpcmpb(ktmp2, k0, shuffle, xtmp2, Assembler::lt, true, vlen_enc);\n@@ -5713,5 +5711,2 @@\n-  vpermq(xtmp3, src,  0xEE, vlen_enc);\n-  vinserti64x4(xtmp3, xtmp3, xtmp3, 0x1);\n-  vpshufb(xtmp3, xtmp3, shuffle, vlen_enc);\n-  evmovdqub(xtmp4, ktmp2, xtmp3, false, vlen_enc);\n-  vporq(dst, dst, xtmp4, vlen_enc);\n+  evshufi64x2(xtmp3, src, src, 0x55, vlen_enc);\n+  evpshufb(dst, ktmp2, xtmp3, shuffle, true, vlen_enc);\n@@ -5721,3 +5716,3 @@\n-  evpcmpb(ktmp1, k0, shuffle,  xtmp5, Assembler::nlt, true, vlen_enc);\n-  vpaddb(xtmp5, xtmp2, xtmp5, vlen_enc);\n-  evpcmpb(ktmp2, k0, shuffle,  xtmp5, Assembler::lt, true, vlen_enc);\n+  evpcmpb(ktmp1, k0, shuffle,  xtmp2, Assembler::nlt, true, vlen_enc);\n+  vpaddb(xtmp1, xtmp1, xtmp2, vlen_enc);\n+  evpcmpb(ktmp2, k0, shuffle,  xtmp1, Assembler::lt, true, vlen_enc);\n@@ -5725,6 +5720,2 @@\n-  vpermq(xtmp3, src,  0x44, vlen_enc);\n-  vextracti64x4_high(xtmp3, xtmp3);\n-  vinserti64x4(xtmp3, xtmp3, xtmp3, 0x1);\n-  vpshufb(xtmp3, xtmp3, shuffle, vlen_enc);\n-  evmovdqub(xtmp4, ktmp2, xtmp3, false, vlen_enc);\n-  vporq(dst, dst, xtmp4, vlen_enc);\n+  evshufi64x2(xtmp3, src, src, 0xAA, vlen_enc);\n+  evpshufb(dst, ktmp2, xtmp3, shuffle, true, vlen_enc);\n@@ -5734,3 +5725,3 @@\n-  evpcmpb(ktmp1, k0, shuffle,  xtmp5, Assembler::nlt, true, vlen_enc);\n-  vpsllq(xtmp5, xtmp2, 0x2, vlen_enc);\n-  evpcmpb(ktmp2, k0, shuffle,  xtmp5, Assembler::lt, true, vlen_enc);\n+  evpcmpb(ktmp1, k0, shuffle,  xtmp1, Assembler::nlt, true, vlen_enc);\n+  vpsllq(xtmp2, xtmp2, 0x1, vlen_enc);\n+  evpcmpb(ktmp2, k0, shuffle,  xtmp2, Assembler::lt, true, vlen_enc);\n@@ -5738,6 +5729,2 @@\n-  vpermq(xtmp3, src,  0xEE, vlen_enc);\n-  vextracti64x4_high(xtmp3, xtmp3);\n-  vinserti64x4(xtmp3, xtmp3, xtmp3, 0x1);\n-  vpshufb(xtmp3, xtmp3, shuffle, vlen_enc);\n-  evmovdqub(xtmp4, ktmp2, xtmp3, false, vlen_enc);\n-  vporq(dst, dst, xtmp4, vlen_enc);\n+  evshufi64x2(xtmp3, src, src, 0xFF, vlen_enc);\n+  evpshufb(dst, ktmp2, xtmp3, shuffle, true, vlen_enc);\n","filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp","additions":21,"deletions":34,"binary":false,"changes":55,"status":"modified"},{"patch":"@@ -462,2 +462,2 @@\n-                       XMMRegister xtmp2, XMMRegister xtmp3, XMMRegister xtmp4, XMMRegister xtmp5,\n-                       Register rtmp, KRegister ktmp1, KRegister ktmp2, int vlen_enc);\n+                       XMMRegister xtmp2, XMMRegister xtmp3, Register rtmp, KRegister ktmp1,\n+                       KRegister ktmp2, int vlen_enc);\n","filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -8529,1 +8529,1 @@\n-instruct rearrangeB_evex(vec dst, vec src, vec shuffle, vec xtmp1, vec xtmp2, vec xtmp3, vec xtmp4, vec xtmp5, kReg ktmp1, kReg ktmp2, rRegI rtmp) %{\n+instruct rearrangeB_evex(vec dst, vec src, vec shuffle, vec xtmp1, vec xtmp2, vec xtmp3, kReg ktmp1, kReg ktmp2, rRegI rtmp) %{\n@@ -8533,2 +8533,2 @@\n-  effect(TEMP dst, TEMP xtmp1, TEMP xtmp2, TEMP xtmp3, TEMP xtmp4, TEMP xtmp5, TEMP ktmp1, TEMP ktmp2, TEMP rtmp);\n-  format %{ \"vector_rearrange $dst, $shuffle, $src!\\t using $xtmp1, $xtmp2, $xtmp3, $xtmp4, $xtmp5, $rtmp, $ktmp1, and $ktmp2 as TEMP\" %}\n+  effect(TEMP dst, TEMP xtmp1, TEMP xtmp2, TEMP xtmp3, TEMP ktmp1, TEMP ktmp2, TEMP rtmp);\n+  format %{ \"vector_rearrange $dst, $shuffle, $src!\\t using $xtmp1, $xtmp2, $xtmp3, $rtmp, $ktmp1, and $ktmp2 as TEMP\" %}\n@@ -8537,2 +8537,2 @@\n-    __ rearrange_bytes($dst$$XMMRegister, $shuffle$$XMMRegister, $src$$XMMRegister, $xtmp1$$XMMRegister,\n-                       $xtmp2$$XMMRegister, $xtmp3$$XMMRegister, $xtmp4$$XMMRegister, $xtmp5$$XMMRegister,\n+    __ rearrange_bytes($dst$$XMMRegister, $shuffle$$XMMRegister, $src$$XMMRegister,\n+                       $xtmp1$$XMMRegister, $xtmp2$$XMMRegister, $xtmp3$$XMMRegister,\n","filename":"src\/hotspot\/cpu\/x86\/x86.ad","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"}]}