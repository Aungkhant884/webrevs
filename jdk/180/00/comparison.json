{"files":[{"patch":"@@ -575,1 +575,2 @@\n-                                  bool setup_pages) {\n+                                  bool setup_pages,\n+                                  WorkGang* pretouch_gang) {\n","filename":"src\/hotspot\/share\/gc\/parallel\/mutableNUMASpace.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -198,1 +198,5 @@\n-  virtual void initialize(MemRegion mr, bool clear_space, bool mangle_space, bool setup_pages = SetupPages);\n+  virtual void initialize(MemRegion mr,\n+                          bool clear_space,\n+                          bool mangle_space,\n+                          bool setup_pages = SetupPages,\n+                          WorkGang* pretouch_gang = NULL);\n","filename":"src\/hotspot\/share\/gc\/parallel\/mutableNUMASpace.hpp","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -63,3 +63,47 @@\n-void MutableSpace::pretouch_pages(MemRegion mr) {\n-  os::pretouch_memory(mr.start(), mr.end());\n-}\n+class PGCPretouchTask: public AbstractGangTask {\n+  char* volatile _cur_addr;\n+  char* const _start_addr;\n+  char* const _end_addr;\n+  size_t _page_size;\n+  uint _total_workers;\n+\n+public:\n+  PGCPretouchTask(MemRegion mr, size_t page_size) :\n+    AbstractGangTask(\"ParallelGC PreTouch\"),\n+    _cur_addr((char*)mr.start()),\n+    _start_addr((char*)mr.start()),\n+    _end_addr((char*)mr.end()),\n+    _page_size(0) {\n+#ifdef LINUX\n+    _page_size = UseTransparentHugePages ? (size_t)os::vm_page_size() : page_size;\n+#else\n+    _page_size = page_size;\n+#endif\n+  }\n+\n+  virtual void work(uint worker_id) {\n+\n+    \/\/ Get chunk size\n+    size_t const actual_chunk_size = MAX2(chunk_size(), _page_size);\n+\n+    char* touch_addr = Atomic::fetch_and_add(&_cur_addr, actual_chunk_size);\n+\n+    if (touch_addr > _end_addr) {\n+      return ;\n+    }\n+\n+    char* end_addr   = touch_addr + actual_chunk_size;\n+    if (end_addr > _end_addr)\n+       end_addr = _end_addr;\n+\n+    os::pretouch_memory(touch_addr, end_addr, _page_size);\n+  }\n+\n+  void set_total_workers(uint total_workers) { _total_workers = total_workers; }\n+\n+  size_t chunk_size() { return align_down((_end_addr-_start_addr)\/_total_workers, _page_size); }\n+\n+  static void pretouch_pages(MemRegion mr) {\n+    os::pretouch_memory(mr.start(), mr.end());\n+  }\n+};\n@@ -70,1 +114,2 @@\n-                              bool setup_pages) {\n+                              bool setup_pages,\n+                              WorkGang* pretouch_gang) {\n@@ -117,2 +162,27 @@\n-      pretouch_pages(head);\n-      pretouch_pages(tail);\n+\n+      size_t page_size = UseLargePages ? os::large_page_size() : os::vm_page_size();\n+      PGCPretouchTask pretouch_task(head, page_size);\n+\n+      if (pretouch_gang) {\n+        uint num_workers = pretouch_gang->total_workers();\n+        pretouch_task.set_total_workers(num_workers);\n+\n+        log_debug(gc, heap)(\"Running %s with %u workers for pre-touching \" SIZE_FORMAT \"B.\",\n+                            pretouch_task.name(), num_workers, head.byte_size());\n+\n+        pretouch_gang->run_task(&pretouch_task, num_workers);\n+\n+      } else {\n+\n+        if (head.byte_size() != 0) {\n+          log_debug(gc, heap)(\"Running %s with 1 thread for pre-touching \" SIZE_FORMAT \"B.\",\n+                              pretouch_task.name(), head.byte_size());\n+          PGCPretouchTask::pretouch_pages(head);\n+        }\n+      }\n+\n+      if (tail.byte_size() != 0) {\n+        log_debug(gc, heap)(\"Running %s with 1 thread for pre-touching \" SIZE_FORMAT \"B.\",\n+                            pretouch_task.name(), tail.byte_size());\n+        PGCPretouchTask::pretouch_pages(tail);\n+      }\n","filename":"src\/hotspot\/share\/gc\/parallel\/mutableSpace.cpp","additions":76,"deletions":6,"binary":false,"changes":82,"status":"modified"},{"patch":"@@ -59,1 +59,0 @@\n-  void pretouch_pages(MemRegion mr);\n@@ -90,1 +89,2 @@\n-                          bool setup_pages = SetupPages);\n+                          bool setup_pages = SetupPages,\n+                          WorkGang* pretouch_gang = NULL);\n","filename":"src\/hotspot\/share\/gc\/parallel\/mutableSpace.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -91,0 +91,3 @@\n+  \/\/ Set up WorkGang\n+  _workers.initialize_workers();\n+\n@@ -135,3 +138,0 @@\n-  \/\/ Set up WorkGang\n-  _workers.initialize_workers();\n-\n","filename":"src\/hotspot\/share\/gc\/parallel\/parallelScavengeHeap.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -134,1 +134,3 @@\n-                             SpaceDecorator::Mangle);\n+                             SpaceDecorator::Mangle,\n+                             MutableSpace::SetupPages,\n+                             &ParallelScavengeHeap::heap()->workers());\n","filename":"src\/hotspot\/share\/gc\/parallel\/psOldGen.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -192,3 +192,4 @@\n-  eden_space()->initialize(eden_mr, true, ZapUnusedHeapArea);\n-    to_space()->initialize(to_mr  , true, ZapUnusedHeapArea);\n-  from_space()->initialize(from_mr, true, ZapUnusedHeapArea);\n+  WorkGang& pretouch_workers = ParallelScavengeHeap::heap()->workers();\n+  eden_space()->initialize(eden_mr, true, ZapUnusedHeapArea, MutableSpace::SetupPages, &pretouch_workers);\n+    to_space()->initialize(to_mr  , true, ZapUnusedHeapArea, MutableSpace::SetupPages, &pretouch_workers);\n+  from_space()->initialize(from_mr, true, ZapUnusedHeapArea, MutableSpace::SetupPages, &pretouch_workers);\n","filename":"src\/hotspot\/share\/gc\/parallel\/psYoungGen.cpp","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"}]}