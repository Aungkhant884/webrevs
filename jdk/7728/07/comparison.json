{"files":[{"patch":"@@ -192,3 +192,2 @@\n-  PhaseIterGVN* igvn = phase->is_IterGVN();\n-  if (igvn != NULL) {\n-    igvn->_worklist.push(mem);\n+  if (can_reshape) {\n+    phase->is_IterGVN()->_worklist.push(mem);\n@@ -297,0 +296,4 @@\n+    if (src_offset->is_top()) {\n+      \/\/ Offset is out of bounds (the ArrayCopyNode will be removed)\n+      return false;\n+    }\n@@ -298,1 +301,1 @@\n-    if (src_offset->is_top() || dest_offset->is_top()) {\n+    if (dest_offset->is_top()) {\n@@ -300,0 +303,4 @@\n+      if (can_reshape) {\n+        \/\/ record src_offset, so it can be deleted later (if it is dead)\n+        phase->is_IterGVN()->_worklist.push(src_offset);\n+      }\n@@ -319,3 +326,0 @@\n-    adr_src  = phase->transform(new AddPNode(base_src, base_src, src_offset));\n-    adr_dest = phase->transform(new AddPNode(base_dest, base_dest, dest_offset));\n-\n@@ -332,0 +336,3 @@\n+    adr_src  = phase->transform(new AddPNode(base_src, base_src, src_offset));\n+    adr_dest = phase->transform(new AddPNode(base_dest, base_dest, dest_offset));\n+\n@@ -569,0 +576,2 @@\n+    assert(adr_src == NULL, \"no node can be left behind\");\n+    assert(adr_dest == NULL, \"no node can be left behind\");\n@@ -632,0 +641,4 @@\n+    if (can_reshape) {\n+      \/\/ put in worklist, so that if it happens to be dead it is removed\n+      phase->is_IterGVN()->_worklist.push(mem);\n+    }\n","filename":"src\/hotspot\/share\/opto\/arraycopynode.cpp","additions":20,"deletions":7,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -138,1 +138,1 @@\n-      set_req(ObjOrSubKlass, obj);\n+      set_req_X(ObjOrSubKlass, obj, phase);\n@@ -147,1 +147,1 @@\n-    set_req(ObjOrSubKlass, allocated_klass);\n+    set_req_X(ObjOrSubKlass, allocated_klass, phase);\n","filename":"src\/hotspot\/share\/opto\/subtypenode.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -41,0 +41,13 @@\n+\/*\n+ * @test\n+ * @bug 8282590\n+ * @library \/\n+ *\n+ * @run main\/othervm -ea -XX:-BackgroundCompilation -XX:-UseOnStackReplacement\n+ *                   -XX:CompileCommand=dontinline,compiler.arraycopy.TestArrayCopyAsLoadsStores::m*\n+ *                   -XX:TypeProfileLevel=200\n+ *                   -XX:+IgnoreUnrecognizedVMOptions -XX:+StressArrayCopyMacroNode\n+ *                   -XX:-TieredCompilation -XX:+StressReflectiveCode -XX:-ReduceInitialCardMarks\n+ *                   compiler.arraycopy.TestArrayCopyAsLoadsStores\n+ *\/\n+\n","filename":"test\/hotspot\/jtreg\/compiler\/arraycopy\/TestArrayCopyAsLoadsStores.java","additions":13,"deletions":0,"binary":false,"changes":13,"status":"modified"}]}