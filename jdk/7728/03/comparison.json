{"files":[{"patch":"@@ -300,0 +300,10 @@\n+      \/\/ Below: make sure that we record the nodes, so that they can be deleted later (if they are dead)\n+      PhaseIterGVN* igvn = phase->is_IterGVN();\n+      if (igvn != NULL) {\n+        if (!src_offset->is_top()) {\n+          igvn->_worklist.push(src_offset);\n+        }\n+        if (!dest_offset->is_top()) {\n+          igvn->_worklist.push(dest_offset);\n+        }\n+      }\n@@ -319,3 +329,0 @@\n-    adr_src  = phase->transform(new AddPNode(base_src, base_src, src_offset));\n-    adr_dest = phase->transform(new AddPNode(base_dest, base_dest, dest_offset));\n-\n@@ -332,0 +339,3 @@\n+    adr_src  = phase->transform(new AddPNode(base_src, base_src, src_offset));\n+    adr_dest = phase->transform(new AddPNode(base_dest, base_dest, dest_offset));\n+\n@@ -569,0 +579,2 @@\n+    assert(adr_src == NULL, \"no node can be left behind\");\n+    assert(adr_dest == NULL, \"no node can be left behind\");\n@@ -632,0 +644,9 @@\n+    if (can_reshape) {\n+      \/\/ make sure the just created clones are taken care of if they now are dead\n+      if (!forward_mem->is_top() && forward_mem->outcnt() == 0) {\n+        phase->is_IterGVN()->_worklist.push(forward_mem);\n+      }\n+      if (!backward_mem->is_top() && backward_mem->outcnt() == 0) {\n+        phase->is_IterGVN()->_worklist.push(backward_mem);\n+      }\n+    }\n","filename":"src\/hotspot\/share\/opto\/arraycopynode.cpp","additions":24,"deletions":3,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -138,1 +138,1 @@\n-      set_req(ObjOrSubKlass, obj);\n+      set_req_X(ObjOrSubKlass, obj, phase);\n@@ -147,1 +147,1 @@\n-    set_req(ObjOrSubKlass, allocated_klass);\n+    set_req_X(ObjOrSubKlass, allocated_klass, phase);\n","filename":"src\/hotspot\/share\/opto\/subtypenode.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -41,0 +41,13 @@\n+\/*\n+ * @test\n+ * @bug 8282590\n+ * @library \/\n+ *\n+ * @run main\/othervm -ea -XX:-BackgroundCompilation -XX:-UseOnStackReplacement\n+ *                   -XX:CompileCommand=dontinline,compiler.arraycopy.TestArrayCopyAsLoadsStores::m*\n+ *                   -XX:TypeProfileLevel=200\n+ *                   -XX:+IgnoreUnrecognizedVMOptions -XX:+StressArrayCopyMacroNode\n+ *                   -XX:-TieredCompilation -XX:+StressReflectiveCode -XX:-ReduceInitialCardMarks\n+ *                   compiler.arraycopy.TestArrayCopyAsLoadsStores\n+ *\/\n+\n","filename":"test\/hotspot\/jtreg\/compiler\/arraycopy\/TestArrayCopyAsLoadsStores.java","additions":13,"deletions":0,"binary":false,"changes":13,"status":"modified"}]}