{"files":[{"patch":"@@ -4407,2 +4407,2 @@\n-void MacroAssembler::cmp_l2i(Register dst, Register src1, Register src2, Register tmp)\n-{\n+void MacroAssembler::cmp_x2i(Register dst, Register src1, Register src2,\n+                             Register tmp, bool is_signed) {\n@@ -4427,1 +4427,5 @@\n-  slt(dst, right, left);\n+  if (is_signed) {\n+    slt(dst, right, left);\n+  } else {\n+    sltu(dst, right, left);\n+  }\n@@ -4429,1 +4433,5 @@\n-  slt(dst, left, right);\n+  if (is_signed) {\n+    slt(dst, left, right);\n+  } else {\n+    sltu(dst, left, right);\n+  }\n@@ -4435,0 +4443,13 @@\n+void MacroAssembler::cmp_l2i(Register dst, Register src1, Register src2, Register tmp)\n+{\n+  cmp_x2i(dst, src1, src2, tmp);\n+}\n+\n+void MacroAssembler::cmp_ul2i(Register dst, Register src1, Register src2, Register tmp) {\n+  cmp_x2i(dst, src1, src2, tmp, false);\n+}\n+\n+void MacroAssembler::cmp_uw2i(Register dst, Register src1, Register src2, Register tmp) {\n+  cmp_x2i(dst, src1, src2, tmp, false);\n+}\n+\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp","additions":25,"deletions":4,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -1397,0 +1397,4 @@\n+private:\n+  void cmp_x2i(Register dst, Register src1, Register src2, Register tmp, bool is_signed = true);\n+\n+public:\n@@ -1402,0 +1406,2 @@\n+  void cmp_ul2i(Register dst, Register src1, Register src2, Register tmp = t0);\n+  void cmp_uw2i(Register dst, Register src1, Register src2, Register tmp = t0);\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.hpp","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -8639,0 +8639,36 @@\n+  %}\n+\n+  ins_pipe(pipe_class_default);\n+%}\n+\n+instruct cmpUL3_reg_reg(iRegINoSp dst, iRegL op1, iRegL op2)\n+%{\n+  match(Set dst (CmpUL3 op1 op2));\n+\n+  ins_cost(ALU_COST * 3 + BRANCH_COST);\n+  format %{ \"sltu  $dst, $op2, $op1\\t#@cmpUL3_reg_reg\\n\\t\"\n+            \"bnez  $dst, done\\n\\t\"\n+            \"sltu  $dst, $op1, $op2\\n\\t\"\n+            \"neg   $dst, $dst\\t#@cmpUL3_reg_reg\"\n+  %}\n+  ins_encode %{\n+    __ cmp_ul2i(t0, as_Register($op1$$reg), as_Register($op2$$reg));\n+    __ mv(as_Register($dst$$reg), t0);\n+  %}\n+\n+  ins_pipe(pipe_class_default);\n+%}\n+\n+instruct cmpU3_reg_reg(iRegINoSp dst, iRegI op1, iRegI op2)\n+%{\n+  match(Set dst (CmpU3 op1 op2));\n+\n+  ins_cost(ALU_COST * 3 + BRANCH_COST);\n+  format %{ \"sltu  $dst, $op2, $op1\\t#@cmpU3_reg_reg\\n\\t\"\n+            \"bnez  $dst, done\\n\\t\"\n+            \"sltu  $dst, $op1, $op2\\n\\t\"\n+            \"neg   $dst, $dst\\t#@cmpU3_reg_reg\"\n+  %}\n+  ins_encode %{\n+    __ cmp_uw2i(t0, as_Register($op1$$reg), as_Register($op2$$reg));\n+    __ mv(as_Register($dst$$reg), t0);\n","filename":"src\/hotspot\/cpu\/riscv\/riscv.ad","additions":36,"deletions":0,"binary":false,"changes":36,"status":"modified"}]}