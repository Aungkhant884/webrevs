{"files":[{"patch":"@@ -106,1 +106,0 @@\n-        long addr = UNSAFE.allocateMemory(capacity);\n@@ -108,6 +107,10 @@\n-            ByteBuffer buf = newDirectByteBuffer(addr, capacity);\n-            assertEquals(addr, getDirectBufferAddress(buf),\n-                \"GetDirectBufferAddress does not return supplied address\");\n-            checkBuffer(buf, capacity);\n-        } finally {\n-            UNSAFE.freeMemory(addr);\n+            long addr = UNSAFE.allocateMemory(capacity);\n+            try {\n+                ByteBuffer buf = newDirectByteBuffer(addr, capacity);\n+                assertEquals(addr, getDirectBufferAddress(buf),\n+                    \"GetDirectBufferAddress does not return supplied address\");\n+                checkBuffer(buf, capacity);\n+            } finally {\n+                UNSAFE.freeMemory(addr);\n+            }\n+        } catch (OutOfMemoryError ignore) {\n@@ -123,1 +126,0 @@\n-            long addr = UNSAFE.allocateMemory(capacity);\n@@ -125,3 +127,7 @@\n-                ByteBuffer buf = newDirectByteBuffer(addr, capacity);\n-            } finally {\n-                UNSAFE.freeMemory(addr);\n+                long addr = UNSAFE.allocateMemory(capacity);\n+                try {\n+                    ByteBuffer buf = newDirectByteBuffer(addr, capacity);\n+                } finally {\n+                    UNSAFE.freeMemory(addr);\n+                }\n+            } catch (OutOfMemoryError ignore) {\n","filename":"test\/jdk\/java\/nio\/jni\/NewDirectByteBuffer.java","additions":17,"deletions":11,"binary":false,"changes":28,"status":"modified"}]}