{"files":[{"patch":"@@ -69,0 +69,2 @@\n+volatile bool ZMark::_push_local_stripe = false;\n+\n@@ -120,0 +122,2 @@\n+  _push_local_stripe = false;\n+\n@@ -160,1 +164,3 @@\n-  ZMarkStripe* const stripe = _stripes.stripe_for_addr(addr);\n+  ZMarkStripe* const stripe = push_local_stripe() ?\n+      _stripes.stripe_for_worker(_nworkers, ZThread::worker_id()) :\n+      _stripes.stripe_for_addr(addr);\n","filename":"src\/hotspot\/share\/gc\/z\/zMark.cpp","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -56,0 +56,1 @@\n+  static volatile bool  _push_local_stripe;\n@@ -112,0 +113,7 @@\n+  static void set_push_local_stripe(bool mode) {\n+    Atomic::store(&_push_local_stripe, mode);\n+  }\n+  static bool push_local_stripe() {\n+    return Atomic::load(&_push_local_stripe);\n+  }\n+\n","filename":"src\/hotspot\/share\/gc\/z\/zMark.hpp","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+#include \"gc\/z\/zThread.inline.hpp\"\n@@ -38,1 +39,3 @@\n-  ZMarkStripe* const stripe = _stripes.stripe_for_addr(addr);\n+  ZMarkStripe* const stripe = push_local_stripe() && ZThread::is_worker() ?\n+      _stripes.stripe_for_worker(_nworkers, ZThread::worker_id()) :\n+      _stripes.stripe_for_addr(addr);\n","filename":"src\/hotspot\/share\/gc\/z\/zMark.inline.hpp","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+#include \"gc\/z\/zMark.hpp\"\n@@ -131,1 +132,2 @@\n-    _space() {\n+    _space(),\n+    _nmagazine(0) {\n@@ -162,0 +164,2 @@\n+  inc_nmagazine();\n+\n@@ -165,0 +169,29 @@\n+void ZMarkStackAllocator::inc_nmagazine() {\n+  int cur = Atomic::add(&_nmagazine, 1);\n+  if (!ZMark::push_local_stripe() &&\n+      cur * ZMarkStackMagazineSize >= ZMarkStackSpaceLimit * ZStackModeChangeRatio) {\n+    ZMark::set_push_local_stripe(true);\n+  }\n+}\n+\n+void ZMarkStackAllocator::dec_nmagazine() {\n+  int nmagazine = Atomic::load(&_nmagazine);\n+\n+  for (;;) {\n+    if (nmagazine == 0) {\n+      break;\n+    }\n+    const int new_nmagazine = nmagazine - 1;\n+    const int prev_nmagazine = Atomic::cmpxchg(&_nmagazine, nmagazine, new_nmagazine);\n+    if (prev_nmagazine == nmagazine) {\n+      break;\n+    }\n+    nmagazine = prev_nmagazine;\n+  }\n+\n+  if (ZMark::push_local_stripe() &&\n+      nmagazine * ZMarkStackMagazineSize * 2.0 < ZMarkStackSpaceLimit * ZStackModeChangeRatio) {\n+    ZMark::set_push_local_stripe(false);\n+  }\n+}\n+\n@@ -169,0 +202,1 @@\n+    inc_nmagazine();\n@@ -183,0 +217,1 @@\n+  dec_nmagazine();\n","filename":"src\/hotspot\/share\/gc\/z\/zMarkStackAllocator.cpp","additions":36,"deletions":1,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -55,0 +55,1 @@\n+  ZCACHE_ALIGNED volatile int           _nmagazine;\n@@ -57,0 +58,2 @@\n+  void inc_nmagazine();\n+  void dec_nmagazine();\n","filename":"src\/hotspot\/share\/gc\/z\/zMarkStackAllocator.hpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -45,0 +45,3 @@\n+  product(double, ZStackModeChangeRatio, 0.25,                              \\\n+          \"Mark push mode is changed when usage is above the ratio\")        \\\n+                                                                            \\\n","filename":"src\/hotspot\/share\/gc\/z\/z_globals.hpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"}]}