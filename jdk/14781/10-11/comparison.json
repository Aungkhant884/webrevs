{"files":[{"patch":"@@ -133,1 +133,1 @@\n-      log_trace(trimnative)(\"Times %u suspended, %u timed, %u safepoint\",\n+      log_trace(trimnative)(\"Times: %u suspended, %u timed, %u safepoint\",\n@@ -204,1 +204,5 @@\n-    log_debug(trimnative)(\"Trim resumed after %s (%u suspend requests)\", reason, n);\n+    if (n == 0) {\n+      log_debug(trimnative)(\"Trim resumed after %s\", reason);\n+    } else {\n+      log_debug(trimnative)(\"Trim still suspended after %s (%u suspend requests)\", reason, n);\n+    }\n@@ -238,1 +242,1 @@\n-      log_info(trimnative)(\"Native heap trim is not supported on this platform\");\n+      log_warning(trimnative)(\"Native heap trim is not supported on this platform\");\n","filename":"src\/hotspot\/share\/runtime\/trimNativeHeap.cpp","additions":7,"deletions":3,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -285,1 +285,2 @@\n-                output.shouldContain(\"Native heap trim is not supported on this platform\");\n+                \/\/ The following output is expected to be printed with warning level, so it should not need -Xlog\n+                output.shouldContain(\"[warning][trimnative] Native heap trim is not supported on this platform\");\n","filename":"test\/hotspot\/jtreg\/runtime\/os\/TestTrimNative.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"}]}