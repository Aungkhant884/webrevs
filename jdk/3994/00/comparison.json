{"files":[{"patch":"@@ -118,8 +118,8 @@\n-                .setDefaultTab(contents.allClassesAndInterfacesLabel.toString())\n-                .addTab(contents.interfaces.toString(), utils::isInterface)\n-                .addTab(contents.classes.toString(), e -> utils.isOrdinaryClass((TypeElement)e))\n-                .addTab(contents.enums.toString(), utils::isEnum)\n-                .addTab(contents.records.toString(), e -> utils.isRecord((TypeElement)e))\n-                .addTab(contents.exceptions.toString(), e -> utils.isException((TypeElement)e))\n-                .addTab(contents.errors.toString(), e -> utils.isError((TypeElement)e))\n-                .addTab(contents.annotationTypes.toString(), utils::isAnnotationType);\n+                .setDefaultTab(contents.allClassesAndInterfacesLabel)\n+                .addTab(contents.interfaces, utils::isInterface)\n+                .addTab(contents.classes, e -> utils.isOrdinaryClass((TypeElement)e))\n+                .addTab(contents.enums, utils::isEnum)\n+                .addTab(contents.records, e -> utils.isRecord((TypeElement)e))\n+                .addTab(contents.exceptions, e -> utils.isException((TypeElement)e))\n+                .addTab(contents.errors, e -> utils.isError((TypeElement)e))\n+                .addTab(contents.annotationTypes, utils::isAnnotationType);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/AllClassesIndexWriter.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -204,5 +204,5 @@\n-                .setDefaultTab(resources.getText(\"doclet.All_Methods\"))\n-                .addTab(resources.getText(\"doclet.Static_Methods\"), utils::isStatic)\n-                .addTab(resources.getText(\"doclet.Instance_Methods\"), e -> !utils.isStatic(e))\n-                .addTab(resources.getText(\"doclet.Abstract_Methods\"), utils::isAbstract)\n-                .addTab(resources.getText(\"doclet.Concrete_Methods\"),\n+                .setDefaultTab(contents.getContent(\"doclet.All_Methods\"))\n+                .addTab(contents.getContent(\"doclet.Static_Methods\"), utils::isStatic)\n+                .addTab(contents.getContent(\"doclet.Instance_Methods\"), e -> !utils.isStatic(e))\n+                .addTab(contents.getContent(\"doclet.Abstract_Methods\"), utils::isAbstract)\n+                .addTab(contents.getContent(\"doclet.Concrete_Methods\"),\n@@ -210,2 +210,2 @@\n-                .addTab(resources.getText(\"doclet.Default_Methods\"), utils::isDefault)\n-                .addTab(resources.getText(\"doclet.Deprecated_Methods\"),\n+                .addTab(contents.getContent(\"doclet.Default_Methods\"), utils::isDefault)\n+                .addTab(contents.getContent(\"doclet.Deprecated_Methods\"),\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/MethodWriterImpl.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -96,1 +96,1 @@\n-                    .setDefaultTab(resources.getText(\"doclet.All_Modules\"));\n+                    .setDefaultTab(contents.getContent(\"doclet.All_Modules\"));\n@@ -102,1 +102,1 @@\n-                    table.addTab(groupName, groupModules::contains);\n+                    table.addTab(Text.of(groupName), groupModules::contains);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/ModuleIndexWriter.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -554,4 +554,4 @@\n-                .setDefaultTab(resources.getText(\"doclet.All_Packages\"))\n-                .addTab(resources.getText(\"doclet.Exported_Packages_Summary\"), this::isExported)\n-                .addTab(resources.getText(\"doclet.Opened_Packages_Summary\"), this::isOpened)\n-                .addTab(resources.getText(\"doclet.Concealed_Packages_Summary\"), this::isConcealed);\n+                .setDefaultTab(contents.getContent(\"doclet.All_Packages\"))\n+                .addTab(contents.getContent(\"doclet.Exported_Packages_Summary\"), this::isExported)\n+                .addTab(contents.getContent(\"doclet.Opened_Packages_Summary\"), this::isOpened)\n+                .addTab(contents.getContent(\"doclet.Concealed_Packages_Summary\"), this::isConcealed);\n@@ -651,1 +651,1 @@\n-            return Text.of(resources.getText(\"doclet.None\"));\n+            return contents.getContent(\"doclet.None\");\n@@ -653,1 +653,1 @@\n-            return Text.of(resources.getText(\"doclet.All_Modules\"));\n+            return contents.getContent(\"doclet.All_Modules\");\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/ModuleWriterImpl.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n@@ -96,1 +97,1 @@\n-                    .setDefaultTab(resources.getText(\"doclet.All_Packages\"));\n+                    .setDefaultTab(contents.getContent(\"doclet.All_Packages\"));\n@@ -102,1 +103,1 @@\n-                    table.addTab(groupName, groupPackages::contains);\n+                    table.addTab(Text.of(groupName), groupPackages::contains);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/PackageIndexWriter.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -255,8 +255,8 @@\n-                .setDefaultTab(contents.allClassesAndInterfacesLabel.toString())\n-                .addTab(contents.interfaces.toString(), utils::isInterface)\n-                .addTab(contents.classes.toString(), e -> utils.isOrdinaryClass((TypeElement)e))\n-                .addTab(contents.enums.toString(), utils::isEnum)\n-                .addTab(contents.records.toString(), e -> utils.isRecord((TypeElement)e))\n-                .addTab(contents.exceptions.toString(), e -> utils.isException((TypeElement)e))\n-                .addTab(contents.errors.toString(), e -> utils.isError((TypeElement)e))\n-                .addTab(contents.annotationTypes.toString(), utils::isAnnotationType);\n+                .setDefaultTab(contents.allClassesAndInterfacesLabel)\n+                .addTab(contents.interfaces, utils::isInterface)\n+                .addTab(contents.classes, e -> utils.isOrdinaryClass((TypeElement)e))\n+                .addTab(contents.enums, utils::isEnum)\n+                .addTab(contents.records, e -> utils.isRecord((TypeElement)e))\n+                .addTab(contents.exceptions, e -> utils.isException((TypeElement)e))\n+                .addTab(contents.errors, e -> utils.isError((TypeElement)e))\n+                .addTab(contents.annotationTypes, utils::isAnnotationType);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/PackageWriterImpl.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -46,1 +46,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n@@ -80,3 +79,3 @@\n-    private Map<String, Predicate<Element>> tabMap;\n-    private String defaultTab;\n-    private Set<String> tabs;\n+    private Map<Content, Predicate<Element>> tabMap;\n+    private Content defaultTab;\n+    private Set<Content> tabs;\n@@ -121,1 +120,1 @@\n-     * @param name      the name of the tab\n+     * @param label     the tab label\n@@ -125,1 +124,1 @@\n-    public Table addTab(String name, Predicate<Element> predicate) {\n+    public Table addTab(Content label, Predicate<Element> predicate) {\n@@ -130,1 +129,1 @@\n-        tabMap.put(name, predicate);\n+        tabMap.put(label, predicate);\n@@ -135,1 +134,1 @@\n-     * Sets the name for the default tab, which displays all the rows in the table.\n+     * Sets the label for the default tab, which displays all the rows in the table.\n@@ -138,1 +137,1 @@\n-     * @param name the name\n+     * @param label the default tab label\n@@ -141,2 +140,2 @@\n-    public Table setDefaultTab(String name) {\n-        defaultTab = name;\n+    public Table setDefaultTab(Content label) {\n+        defaultTab = label;\n@@ -269,1 +268,1 @@\n-     * {@link #addTab(String,Predicate) added}.\n+     * {@link #addTab(Content, Predicate) added}.\n@@ -288,1 +287,1 @@\n-     * {@link #addTab(String,Predicate) added}.\n+     * {@link #addTab(Content, Predicate) added}.\n@@ -315,2 +314,2 @@\n-            for (Map.Entry<String, Predicate<Element>> e : tabMap.entrySet()) {\n-                String name = e.getKey();\n+            for (Map.Entry<Content, Predicate<Element>> e : tabMap.entrySet()) {\n+                Content label = e.getKey();\n@@ -319,1 +318,1 @@\n-                    tabs.add(name);\n+                    tabs.add(label);\n@@ -383,2 +382,1 @@\n-                String tabName = tabs.iterator().next();\n-                main.add(getCaption(Text.of(tabName)));\n+                main.add(getCaption(tabs.iterator().next()));\n@@ -396,1 +394,1 @@\n-            for (String tabName : tabMap.keySet()) {\n+            for (Content tabLabel : tabMap.keySet()) {\n@@ -398,2 +396,2 @@\n-                if (tabs.contains(tabName)) {\n-                    HtmlTree tab = createTab(HtmlIds.forTab(id, tabIndex), tabStyle, false, tabName);\n+                if (tabs.contains(tabLabel)) {\n+                    HtmlTree tab = createTab(HtmlIds.forTab(id, tabIndex), tabStyle, false, tabLabel);\n@@ -417,1 +415,1 @@\n-    private HtmlTree createTab(HtmlId tabId, HtmlStyle style, boolean defaultTab, String tabName) {\n+    private HtmlTree createTab(HtmlId tabId, HtmlStyle style, boolean defaultTab, Content tabLabel) {\n@@ -428,1 +426,1 @@\n-        tab.add(tabName);\n+        tab.add(tabLabel);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/Table.java","additions":21,"deletions":23,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -70,1 +70,0 @@\n-import jdk.javadoc.internal.doclets.toolkit.util.DocletConstants;\n@@ -332,1 +331,1 @@\n-                    Text.of(resources.getText(\"doclet.Constants_Summary\"))));\n+                    contents.getContent(\"doclet.Constants_Summary\")));\n@@ -341,1 +340,1 @@\n-                        Text.of(resources.getText(\"doclet.Serialized_Form\"))));\n+                        contents.getContent(\"doclet.Serialized_Form\")));\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/TagletWriterImpl.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"}]}