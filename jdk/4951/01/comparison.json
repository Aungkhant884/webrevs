{"files":[{"patch":"@@ -28,2 +28,6 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.File;\n+import java.io.IOException;\n+import java.nio.charset.StandardCharsets;\n+import java.util.LinkedHashMap;\n+import java.util.LinkedList;\n+import java.util.Map;\n@@ -114,5 +118,1 @@\n-            try {\n-                pathBytes = absolutePath.getBytes(\"UTF-8\");\n-            } catch (final UnsupportedEncodingException e) {\n-                pathBytes = new byte[0];\n-            }\n+            pathBytes = absolutePath.getBytes(StandardCharsets.UTF_8);\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaFileView.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -1,1 +0,0 @@\n-\n@@ -3,1 +2,1 @@\n- * Copyright (c) 2011, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,5 +28,6 @@\n-import java.awt.*;\n-\n-import java.io.*;\n-import java.net.URI;\n-import java.net.URISyntaxException;\n+import java.awt.Image;\n+import java.awt.datatransfer.DataFlavor;\n+import java.awt.datatransfer.Transferable;\n+import java.awt.datatransfer.UnsupportedFlavorException;\n+import java.io.ByteArrayOutputStream;\n+import java.io.IOException;\n@@ -36,0 +36,1 @@\n+import java.nio.charset.StandardCharsets;\n@@ -38,5 +39,9 @@\n-import java.util.*;\n-import java.util.regex.*;\n-import java.awt.datatransfer.*;\n-import java.nio.charset.StandardCharsets;\n-import sun.awt.datatransfer.*;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+\n+import sun.awt.datatransfer.DataTransferer;\n+import sun.awt.datatransfer.ToolkitThreadBlockedHandler;\n@@ -163,1 +168,3 @@\n-            bytes = Normalizer.normalize(new String(bytes, \"UTF8\"), Form.NFC).getBytes(\"UTF8\");\n+            String src = new String(bytes, StandardCharsets.UTF_8);\n+            String nfc = Normalizer.normalize(src, Form.NFC);\n+            bytes = nfc.getBytes(StandardCharsets.UTF_8);\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/lwawt\/macosx\/CDataTransferer.java","additions":20,"deletions":13,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,5 +28,2 @@\n-import java.io.UnsupportedEncodingException;\n-import java.util.ArrayList;\n-import java.util.Iterator;\n-import java.util.List;\n-import javax.imageio.ImageTypeSpecifier;\n+import java.nio.charset.StandardCharsets;\n+\n@@ -34,2 +31,0 @@\n-import javax.imageio.metadata.IIOMetadataNode;\n-import javax.imageio.metadata.IIOMetadataFormat;\n@@ -37,2 +32,1 @@\n-import org.w3c.dom.Node;\n-import com.sun.imageio.plugins.common.I18N;\n+import javax.imageio.metadata.IIOMetadataNode;\n@@ -40,0 +34,1 @@\n+import com.sun.imageio.plugins.common.I18N;\n@@ -41,0 +36,1 @@\n+import org.w3c.dom.Node;\n@@ -117,5 +113,1 @@\n-        try {\n-            return new String(data, \"ISO-8859-1\");\n-        } catch (UnsupportedEncodingException e) {\n-            return \"\";\n-        }\n+        return new String(data, StandardCharsets.ISO_8859_1);\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/imageio\/plugins\/bmp\/BMPMetadata.java","additions":7,"deletions":15,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,2 +28,1 @@\n-import java.io.UnsupportedEncodingException;\n-import java.util.ArrayList;\n+import java.nio.charset.StandardCharsets;\n@@ -32,1 +31,1 @@\n-import javax.imageio.ImageTypeSpecifier;\n+\n@@ -34,3 +33,0 @@\n-import javax.imageio.metadata.IIOMetadata;\n-import javax.imageio.metadata.IIOMetadataNode;\n-import javax.imageio.metadata.IIOMetadataFormat;\n@@ -38,0 +34,2 @@\n+import javax.imageio.metadata.IIOMetadataNode;\n+\n@@ -135,5 +133,1 @@\n-        try {\n-            return new String(data, \"ISO-8859-1\");\n-        } catch (UnsupportedEncodingException e) {\n-            return \"\";\n-        }\n+        return new String(data, StandardCharsets.ISO_8859_1);\n@@ -387,6 +381,1 @@\n-            String s = null;\n-            try {\n-                s = new String(comment, \"ISO-8859-1\");\n-            } catch (UnsupportedEncodingException e) {\n-                throw new RuntimeException(\"Encoding ISO-8859-1 unknown!\");\n-            }\n+            String s = new String(comment, StandardCharsets.ISO_8859_1);\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/imageio\/plugins\/gif\/GIFImageMetadata.java","additions":7,"deletions":18,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n-import java.io.UnsupportedEncodingException;\n@@ -30,0 +29,1 @@\n+import java.nio.charset.StandardCharsets;\n@@ -31,3 +31,1 @@\n-import java.util.Iterator;\n-import java.util.List;\n-import javax.imageio.ImageTypeSpecifier;\n+\n@@ -35,3 +33,0 @@\n-import javax.imageio.metadata.IIOMetadata;\n-import javax.imageio.metadata.IIOMetadataNode;\n-import javax.imageio.metadata.IIOMetadataFormat;\n@@ -39,0 +34,2 @@\n+import javax.imageio.metadata.IIOMetadataNode;\n+\n@@ -98,5 +95,1 @@\n-        try {\n-            return data.getBytes(\"ISO-8859-1\");\n-        } catch (UnsupportedEncodingException e) {\n-            return \"\".getBytes();\n-        }\n+        return data.getBytes(StandardCharsets.ISO_8859_1);\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/imageio\/plugins\/gif\/GIFWritableImageMetadata.java","additions":6,"deletions":13,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,4 @@\n+import java.io.IOException;\n+import java.nio.charset.StandardCharsets;\n+\n+import javax.imageio.metadata.IIOInvalidTreeException;\n@@ -30,4 +34,0 @@\n-import javax.imageio.metadata.IIOInvalidTreeException;\n-\n-import java.io.IOException;\n-import java.io.UnsupportedEncodingException;\n@@ -48,1 +48,0 @@\n-    private static final String ENCODING = \"ISO-8859-1\";\n@@ -99,4 +98,1 @@\n-        try {\n-            return new String (data, ENCODING);\n-        } catch (UnsupportedEncodingException e) {}  \/\/ Won't happen\n-        return null;\n+        return new String(data, StandardCharsets.ISO_8859_1);\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/imageio\/plugins\/jpeg\/COMMarkerSegment.java","additions":6,"deletions":10,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -28,12 +28,0 @@\n-import javax.imageio.IIOException;\n-import javax.imageio.IIOImage;\n-import javax.imageio.ImageTypeSpecifier;\n-import javax.imageio.ImageReader;\n-import javax.imageio.metadata.IIOInvalidTreeException;\n-import javax.imageio.metadata.IIOMetadataNode;\n-import javax.imageio.metadata.IIOMetadata;\n-import javax.imageio.stream.ImageInputStream;\n-import javax.imageio.stream.ImageOutputStream;\n-import javax.imageio.stream.MemoryCacheImageOutputStream;\n-import javax.imageio.event.IIOReadProgressListener;\n-\n@@ -41,2 +29,0 @@\n-import java.awt.color.ICC_Profile;\n-import java.awt.color.ICC_ColorSpace;\n@@ -44,0 +30,3 @@\n+import java.awt.color.ICC_ColorSpace;\n+import java.awt.color.ICC_Profile;\n+import java.awt.image.BufferedImage;\n@@ -45,2 +34,0 @@\n-import java.awt.image.SampleModel;\n-import java.awt.image.IndexColorModel;\n@@ -48,1 +35,0 @@\n-import java.awt.image.BufferedImage;\n@@ -51,0 +37,1 @@\n+import java.awt.image.IndexColorModel;\n@@ -52,0 +39,1 @@\n+import java.awt.image.SampleModel;\n@@ -53,1 +41,0 @@\n-import java.io.IOException;\n@@ -55,1 +42,2 @@\n-import java.util.List;\n+import java.io.IOException;\n+import java.nio.charset.StandardCharsets;\n@@ -58,0 +46,1 @@\n+import java.util.List;\n@@ -59,0 +48,12 @@\n+import javax.imageio.IIOException;\n+import javax.imageio.IIOImage;\n+import javax.imageio.ImageReader;\n+import javax.imageio.ImageTypeSpecifier;\n+import javax.imageio.event.IIOReadProgressListener;\n+import javax.imageio.metadata.IIOInvalidTreeException;\n+import javax.imageio.metadata.IIOMetadataNode;\n+import javax.imageio.stream.ImageInputStream;\n+import javax.imageio.stream.ImageOutputStream;\n+import javax.imageio.stream.MemoryCacheImageOutputStream;\n+\n+import org.w3c.dom.NamedNodeMap;\n@@ -61,1 +62,0 @@\n-import org.w3c.dom.NamedNodeMap;\n@@ -1356,1 +1356,1 @@\n-            byte [] id = ID.getBytes(\"US-ASCII\");\n+            byte[] id = ID.getBytes(StandardCharsets.US_ASCII);\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/imageio\/plugins\/jpeg\/JFIFMarkerSegment.java","additions":21,"deletions":21,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,0 +39,1 @@\n+import java.io.ByteArrayOutputStream;\n@@ -41,1 +42,0 @@\n-import java.io.InputStream;\n@@ -43,0 +43,1 @@\n+import java.io.InputStream;\n@@ -44,0 +45,1 @@\n+import java.nio.charset.StandardCharsets;\n@@ -50,0 +52,1 @@\n+\n@@ -51,1 +54,0 @@\n-import javax.imageio.ImageReader;\n@@ -53,0 +55,1 @@\n+import javax.imageio.ImageReader;\n@@ -57,0 +60,1 @@\n+\n@@ -60,1 +64,0 @@\n-import java.io.ByteArrayOutputStream;\n@@ -489,1 +492,1 @@\n-            text = new String(inflate(b), \"UTF8\");\n+            text = new String(inflate(b), StandardCharsets.UTF_8);\n@@ -491,1 +494,1 @@\n-            text = new String(b, \"UTF8\");\n+            text = new String(b, StandardCharsets.UTF_8);\n@@ -592,1 +595,1 @@\n-        metadata.tEXt_text.add(new String(b, \"ISO-8859-1\"));\n+        metadata.tEXt_text.add(new String(b, StandardCharsets.ISO_8859_1));\n@@ -693,1 +696,2 @@\n-        metadata.zTXt_text.add(new String(inflate(b), \"ISO-8859-1\"));\n+        metadata.zTXt_text.add(new String(inflate(b),\n+                                          StandardCharsets.ISO_8859_1));\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/imageio\/plugins\/png\/PNGImageReader.java","additions":12,"deletions":8,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,0 @@\n-import java.awt.image.WritableRaster;\n@@ -34,0 +33,1 @@\n+import java.awt.image.WritableRaster;\n@@ -36,0 +36,1 @@\n+import java.nio.charset.StandardCharsets;\n@@ -40,0 +41,1 @@\n+\n@@ -805,1 +807,2 @@\n-            cs.write(translatedKeywordIter.next().getBytes(\"UTF8\"));\n+            cs.write(translatedKeywordIter.next()\n+                             .getBytes(StandardCharsets.UTF_8));\n@@ -810,1 +813,1 @@\n-                cs.write(deflate(text.getBytes(\"UTF8\")));\n+                cs.write(deflate(text.getBytes(StandardCharsets.UTF_8)));\n@@ -812,1 +815,1 @@\n-                cs.write(text.getBytes(\"UTF8\"));\n+                cs.write(text.getBytes(StandardCharsets.UTF_8));\n@@ -836,1 +839,1 @@\n-            cs.write(deflate(text.getBytes(\"ISO-8859-1\")));\n+            cs.write(deflate(text.getBytes(StandardCharsets.ISO_8859_1)));\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/imageio\/plugins\/png\/PNGImageWriter.java","additions":9,"deletions":6,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -28,5 +28,0 @@\n-import java.io.UnsupportedEncodingException;\n-import java.util.ArrayList;\n-import java.util.Iterator;\n-import java.util.List;\n-import javax.imageio.ImageTypeSpecifier;\n@@ -34,2 +29,0 @@\n-import javax.imageio.metadata.IIOMetadataNode;\n-import javax.imageio.metadata.IIOMetadataFormat;\n@@ -37,2 +30,1 @@\n-import org.w3c.dom.Node;\n-import com.sun.imageio.plugins.common.I18N;\n+import javax.imageio.metadata.IIOMetadataNode;\n@@ -40,0 +32,1 @@\n+import com.sun.imageio.plugins.common.I18N;\n@@ -41,0 +34,1 @@\n+import org.w3c.dom.Node;\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/imageio\/plugins\/wbmp\/WBMPMetadata.java","additions":3,"deletions":9,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -25,1 +25,0 @@\n-package com.sun.java.swing.plaf.gtk;\n@@ -27,3 +26,1 @@\n-import sun.swing.SwingUtilities2;\n-import com.sun.java.swing.plaf.gtk.GTKConstants.ArrowType;\n-import com.sun.java.swing.plaf.gtk.GTKConstants.ShadowType;\n+package com.sun.java.swing.plaf.gtk;\n@@ -31,0 +28,49 @@\n+import java.awt.AlphaComposite;\n+import java.awt.BasicStroke;\n+import java.awt.Color;\n+import java.awt.Component;\n+import java.awt.Composite;\n+import java.awt.Container;\n+import java.awt.Dimension;\n+import java.awt.Font;\n+import java.awt.FontMetrics;\n+import java.awt.GradientPaint;\n+import java.awt.Graphics;\n+import java.awt.Graphics2D;\n+import java.awt.Image;\n+import java.awt.Insets;\n+import java.awt.LayoutManager;\n+import java.awt.Point;\n+import java.awt.Rectangle;\n+import java.awt.Shape;\n+import java.awt.Stroke;\n+import java.awt.geom.AffineTransform;\n+import java.awt.geom.PathIterator;\n+import java.awt.geom.Rectangle2D;\n+import java.awt.geom.RectangularShape;\n+import java.awt.image.FilteredImageSource;\n+import java.awt.image.ImageProducer;\n+import java.awt.image.RGBImageFilter;\n+import java.io.BufferedInputStream;\n+import java.io.File;\n+import java.io.FileNotFoundException;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.InputStreamReader;\n+import java.io.Reader;\n+import java.net.MalformedURLException;\n+import java.net.URL;\n+import java.nio.charset.StandardCharsets;\n+import java.security.AccessController;\n+import java.security.PrivilegedAction;\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.NoSuchElementException;\n+import java.util.StringTokenizer;\n+\n+import javax.swing.Icon;\n+import javax.swing.ImageIcon;\n+import javax.swing.JButton;\n+import javax.swing.JComponent;\n+import javax.swing.JInternalFrame;\n@@ -33,1 +79,6 @@\n-import javax.swing.plaf.synth.*;\n+import javax.swing.plaf.synth.ColorType;\n+import javax.swing.plaf.synth.SynthConstants;\n+import javax.swing.plaf.synth.SynthContext;\n+import javax.xml.parsers.DocumentBuilder;\n+import javax.xml.parsers.DocumentBuilderFactory;\n+import javax.xml.parsers.ParserConfigurationException;\n@@ -35,11 +86,6 @@\n-import java.awt.*;\n-import java.awt.geom.*;\n-import java.awt.image.*;\n-import java.io.*;\n-import java.net.*;\n-import java.security.*;\n-import java.util.*;\n-\n-import javax.swing.*;\n-\n-import javax.xml.parsers.*;\n+import com.sun.java.swing.plaf.gtk.GTKConstants.ArrowType;\n+import com.sun.java.swing.plaf.gtk.GTKConstants.ShadowType;\n+import org.w3c.dom.Document;\n+import org.w3c.dom.NamedNodeMap;\n+import org.w3c.dom.Node;\n+import org.w3c.dom.NodeList;\n@@ -47,1 +93,1 @@\n-import org.w3c.dom.*;\n+import sun.swing.SwingUtilities2;\n@@ -539,1 +585,2 @@\n-                    Reader reader = new InputStreamReader(url.openStream(), \"ISO-8859-1\");\n+                    Reader reader = new InputStreamReader(url.openStream(),\n+                                                  StandardCharsets.ISO_8859_1);\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/java\/swing\/plaf\/gtk\/Metacity.java","additions":65,"deletions":18,"binary":false,"changes":83,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+import java.nio.charset.StandardCharsets;\n@@ -1150,1 +1151,1 @@\n-        int len = value.getBytes(\"ascii\").length;\n+        int len = value.getBytes(StandardCharsets.US_ASCII).length;\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/media\/sound\/DLSSoundbank.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,0 +31,1 @@\n+import java.nio.charset.StandardCharsets;\n@@ -79,1 +80,1 @@\n-        this.fourcc = new String(fourcc, \"ascii\");\n+        this.fourcc = new String(fourcc, StandardCharsets.US_ASCII);\n@@ -86,1 +87,1 @@\n-            this.riff_type = new String(format, \"ascii\");\n+            this.riff_type = new String(format, StandardCharsets.US_ASCII);\n@@ -230,1 +231,1 @@\n-                return new String(buff, 0, i, \"ascii\");\n+                return new String(buff, 0, i, StandardCharsets.US_ASCII);\n@@ -233,1 +234,1 @@\n-        return new String(buff, \"ascii\");\n+        return new String(buff, StandardCharsets.US_ASCII);\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/media\/sound\/RIFFReader.java","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,0 +33,1 @@\n+import java.nio.charset.StandardCharsets;\n@@ -211,1 +212,1 @@\n-            raf.write(\"RIFF\".getBytes(\"ascii\"));\n+            raf.write(\"RIFF\".getBytes(StandardCharsets.US_ASCII));\n@@ -213,1 +214,1 @@\n-            raf.write(\"LIST\".getBytes(\"ascii\"));\n+            raf.write(\"LIST\".getBytes(StandardCharsets.US_ASCII));\n@@ -215,1 +216,2 @@\n-            raf.write((format + \"    \").substring(0, 4).getBytes(\"ascii\"));\n+            raf.write((format + \"    \").substring(0, 4)\n+                              .getBytes(StandardCharsets.US_ASCII));\n@@ -223,1 +225,2 @@\n-            raf.write((format + \"    \").substring(0, 4).getBytes(\"ascii\"));\n+            raf.write((format + \"    \").substring(0, 4)\n+                              .getBytes(StandardCharsets.US_ASCII));\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/media\/sound\/RIFFWriter.java","additions":8,"deletions":5,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,0 +34,1 @@\n+import java.nio.charset.StandardCharsets;\n@@ -542,1 +543,1 @@\n-        int len = value.getBytes(\"ascii\").length;\n+        int len = value.getBytes(StandardCharsets.US_ASCII).length;\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/media\/sound\/SF2Soundbank.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n-import java.io.UnsupportedEncodingException;\n+import java.nio.charset.StandardCharsets;\n@@ -102,5 +102,1 @@\n-                    try {\n-                        name = new String(data, 6, 16, \"ascii\");\n-                    } catch (UnsupportedEncodingException e) {\n-                        name = null;\n-                    }\n+                    name = new String(data, 6, 16, StandardCharsets.US_ASCII);\n@@ -138,5 +134,1 @@\n-                    try {\n-                        name = new String(data, 7, 16, \"ascii\");\n-                    } catch (UnsupportedEncodingException e) {\n-                        name = null;\n-                    }\n+                    name = new String(data, 7, 16, StandardCharsets.US_ASCII);\n@@ -159,5 +151,1 @@\n-                    try {\n-                        name = new String(data, 7, 16, \"ascii\");\n-                    } catch (UnsupportedEncodingException e) {\n-                        name = null;\n-                    }\n+                    name = new String(data, 7, 16, StandardCharsets.US_ASCII);\n@@ -177,5 +165,1 @@\n-                    try {\n-                        name = new String(data, 7, 16, \"ascii\");\n-                    } catch (UnsupportedEncodingException e) {\n-                        name = null;\n-                    }\n+                    name = new String(data, 7, 16, StandardCharsets.US_ASCII);\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/media\/sound\/SoftTuning.java","additions":6,"deletions":22,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -25,1 +25,0 @@\n-package javax.swing.text.html;\n@@ -27,1 +26,1 @@\n-import sun.awt.AppContext;\n+package javax.swing.text.html;\n@@ -29,3 +28,26 @@\n-import java.awt.*;\n-import java.awt.event.*;\n-import java.io.*;\n+import java.awt.Color;\n+import java.awt.Component;\n+import java.awt.Container;\n+import java.awt.Cursor;\n+import java.awt.Graphics;\n+import java.awt.Insets;\n+import java.awt.Point;\n+import java.awt.Rectangle;\n+import java.awt.Shape;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ComponentEvent;\n+import java.awt.event.ComponentListener;\n+import java.awt.event.MouseAdapter;\n+import java.awt.event.MouseEvent;\n+import java.awt.event.MouseListener;\n+import java.awt.event.MouseMotionListener;\n+import java.io.BufferedReader;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.InputStreamReader;\n+import java.io.Reader;\n+import java.io.Serializable;\n+import java.io.StringReader;\n+import java.io.Writer;\n+import java.lang.ref.Reference;\n+import java.lang.ref.WeakReference;\n@@ -34,7 +56,1 @@\n-import javax.swing.text.*;\n-import javax.swing.*;\n-import javax.swing.event.*;\n-import javax.swing.plaf.TextUI;\n-import java.util.*;\n-import javax.accessibility.*;\n-import java.lang.ref.*;\n+import java.nio.charset.StandardCharsets;\n@@ -43,0 +59,37 @@\n+import java.util.Enumeration;\n+\n+import javax.accessibility.Accessible;\n+import javax.accessibility.AccessibleAction;\n+import javax.accessibility.AccessibleContext;\n+import javax.swing.Action;\n+import javax.swing.JComponent;\n+import javax.swing.JEditorPane;\n+import javax.swing.JViewport;\n+import javax.swing.SizeRequirements;\n+import javax.swing.SwingUtilities;\n+import javax.swing.event.CaretEvent;\n+import javax.swing.event.CaretListener;\n+import javax.swing.event.HyperlinkEvent;\n+import javax.swing.plaf.TextUI;\n+import javax.swing.text.AbstractDocument;\n+import javax.swing.text.AttributeSet;\n+import javax.swing.text.BadLocationException;\n+import javax.swing.text.BoxView;\n+import javax.swing.text.ComponentView;\n+import javax.swing.text.DefaultHighlighter;\n+import javax.swing.text.Document;\n+import javax.swing.text.EditorKit;\n+import javax.swing.text.Element;\n+import javax.swing.text.ElementIterator;\n+import javax.swing.text.Highlighter;\n+import javax.swing.text.IconView;\n+import javax.swing.text.JTextComponent;\n+import javax.swing.text.LabelView;\n+import javax.swing.text.MutableAttributeSet;\n+import javax.swing.text.Position;\n+import javax.swing.text.StyleConstants;\n+import javax.swing.text.StyledDocument;\n+import javax.swing.text.StyledEditorKit;\n+import javax.swing.text.TextAction;\n+import javax.swing.text.View;\n+import javax.swing.text.ViewFactory;\n@@ -45,0 +98,2 @@\n+import sun.awt.AppContext;\n+\n@@ -406,1 +461,1 @@\n-                        new InputStreamReader(is, \"ISO-8859-1\"));\n+                        new InputStreamReader(is, StandardCharsets.ISO_8859_1));\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/html\/HTMLEditorKit.java","additions":68,"deletions":13,"binary":false,"changes":81,"status":"modified"},{"patch":"@@ -25,0 +25,1 @@\n+\n@@ -27,3 +28,0 @@\n-import java.lang.*;\n-import java.util.*;\n-import java.io.*;\n@@ -31,0 +29,7 @@\n+import java.io.BufferedReader;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.InputStreamReader;\n+import java.io.OutputStream;\n+import java.io.StreamTokenizer;\n+import java.nio.charset.StandardCharsets;\n@@ -33,1 +38,14 @@\n-import javax.swing.text.*;\n+import java.util.Dictionary;\n+import java.util.Enumeration;\n+import java.util.Hashtable;\n+import java.util.Vector;\n+\n+import javax.swing.text.AttributeSet;\n+import javax.swing.text.BadLocationException;\n+import javax.swing.text.MutableAttributeSet;\n+import javax.swing.text.SimpleAttributeSet;\n+import javax.swing.text.Style;\n+import javax.swing.text.StyleConstants;\n+import javax.swing.text.StyleContext;\n+import javax.swing.text.StyledDocument;\n+import javax.swing.text.TabStop;\n@@ -595,1 +613,1 @@\n-            new InputStreamReader(strm, \"ISO-8859-1\")));\n+            new InputStreamReader(strm, StandardCharsets.ISO_8859_1)));\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/rtf\/RTFReader.java","additions":23,"deletions":5,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-import java.lang.ref.WeakReference;\n@@ -33,1 +32,0 @@\n-import java.io.UnsupportedEncodingException;\n@@ -35,0 +33,1 @@\n+import java.nio.BufferUnderflowException;\n@@ -37,1 +36,0 @@\n-import java.nio.BufferUnderflowException;\n@@ -40,0 +38,4 @@\n+import java.nio.charset.StandardCharsets;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+\n@@ -42,3 +44,0 @@\n-import java.util.HashSet;\n-import java.util.HashMap;\n-import java.awt.Font;\n@@ -612,5 +611,1 @@\n-        try {\n-            return new String(nameBytes, \"US-ASCII\");\n-        } catch (UnsupportedEncodingException e) {\n-            return new String(nameBytes);\n-        }\n+        return new String(nameBytes, StandardCharsets.US_ASCII);\n@@ -626,5 +621,1 @@\n-        try {\n-            return new String(nameBytes, \"US-ASCII\");\n-        } catch (UnsupportedEncodingException e) {\n-            return new String(nameBytes);\n-        }\n+        return new String(nameBytes, StandardCharsets.US_ASCII);\n","filename":"src\/java.desktop\/share\/classes\/sun\/font\/Type1Font.java","additions":7,"deletions":16,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+import java.awt.print.Pageable;\n@@ -31,3 +32,0 @@\n-import java.io.UnsupportedEncodingException;\n-\n-import java.awt.print.Pageable;\n@@ -60,3 +58,1 @@\n-   public Reader getReaderForText()\n-      throws UnsupportedEncodingException, IOException {\n-\n+   public Reader getReaderForText() throws IOException {\n","filename":"src\/java.desktop\/share\/classes\/sun\/print\/PageableDoc.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -61,1 +61,1 @@\n-import jdk.internal.misc.Unsafe;\n+import java.nio.charset.StandardCharsets;\n@@ -64,0 +64,2 @@\n+import jdk.internal.misc.Unsafe;\n+\n@@ -311,6 +313,1 @@\n-        byte[] bdata = null;\n-        try {\n-            bdata = str.getBytes(\"UTF-8\");\n-        } catch (java.io.UnsupportedEncodingException uee) {\n-            uee.printStackTrace();\n-        }\n+        byte[] bdata = str.getBytes(StandardCharsets.UTF_8);\n@@ -330,6 +327,1 @@\n-        byte[] bdata = null;\n-        try {\n-            bdata = str.getBytes(\"ISO-8859-1\");\n-        } catch (java.io.UnsupportedEncodingException uee) {\n-            uee.printStackTrace();\n-        }\n+        byte[] bdata = str.getBytes(StandardCharsets.ISO_8859_1);\n","filename":"src\/java.desktop\/unix\/classes\/sun\/awt\/X11\/XAtom.java","additions":6,"deletions":14,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,0 @@\n-\n@@ -30,0 +29,2 @@\n+import java.nio.charset.Charset;\n+import java.nio.charset.StandardCharsets;\n@@ -385,1 +386,1 @@\n-        String charSet = \"UTF8\";\n+        Charset charSet = StandardCharsets.UTF_8;\n@@ -389,1 +390,1 @@\n-            charSet = \"ASCII\";\n+            charSet = StandardCharsets.US_ASCII;\n@@ -395,6 +396,2 @@\n-        try {\n-            net_wm_name_cache = new String(net_wm_name, charSet);\n-            return net_wm_name_cache;\n-        } catch (java.io.UnsupportedEncodingException uex) {\n-            return null;\n-        }\n+        net_wm_name_cache = new String(net_wm_name, charSet);\n+        return net_wm_name_cache;\n","filename":"src\/java.desktop\/unix\/classes\/sun\/awt\/X11\/XNETProtocol.java","additions":7,"deletions":10,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -50,1 +50,1 @@\n-import java.io.UnsupportedEncodingException;\n+import java.nio.charset.StandardCharsets;\n@@ -1361,6 +1361,2 @@\n-        final byte[] message;\n-        try {\n-            message = messageBuilder.toString().getBytes(\"UTF-8\");\n-        } catch (UnsupportedEncodingException cannotHappen) {\n-            return;\n-        }\n+        final byte[] message = messageBuilder.toString()\n+                .getBytes(StandardCharsets.UTF_8);\n","filename":"src\/java.desktop\/unix\/classes\/sun\/awt\/X11\/XWindowPeer.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2004, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,3 +29,1 @@\n-\n-import java.io.UnsupportedEncodingException;\n-\n+import java.nio.charset.StandardCharsets;\n@@ -35,1 +33,0 @@\n-\n@@ -201,6 +198,1 @@\n-            String str = null;\n-            try {\n-                str = new String(data, idx, len, \"UTF-8\");\n-            } catch (UnsupportedEncodingException e) {\n-                \/\/ XXX: cannot happen, \"UTF-8\" is always supported\n-            }\n+            String str = new String(data, idx, len, StandardCharsets.UTF_8);\n","filename":"src\/java.desktop\/unix\/classes\/sun\/awt\/XSettings.java","additions":3,"deletions":11,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,2 +35,1 @@\n-import java.io.UnsupportedEncodingException;\n-import java.lang.ref.WeakReference;\n+import java.nio.charset.StandardCharsets;\n@@ -216,7 +215,1 @@\n-        byte[] bytes = null;\n-        try {\n-            bytes = xlfd.getBytes(\"UTF-8\");\n-        } catch (UnsupportedEncodingException e) {\n-            bytes = xlfd.getBytes();\n-        }\n-        return haveBitmapFonts(bytes);\n+        return haveBitmapFonts(xlfd.getBytes(StandardCharsets.UTF_8));\n@@ -226,7 +219,1 @@\n-        byte[] bytes = null;\n-        try {\n-            bytes = xlfd.getBytes(\"UTF-8\");\n-        } catch (UnsupportedEncodingException e) {\n-            bytes = xlfd.getBytes();\n-        }\n-        return fontExists(bytes);\n+        return fontExists(xlfd.getBytes(StandardCharsets.UTF_8));\n@@ -383,7 +370,1 @@\n-        byte[] bytes = null;\n-        try {\n-            bytes = xlfd.getBytes(\"UTF-8\");\n-        } catch (UnsupportedEncodingException e) {\n-            bytes = xlfd.getBytes();\n-        }\n-        return bytes;\n+        return xlfd.getBytes(StandardCharsets.UTF_8);\n","filename":"src\/java.desktop\/unix\/classes\/sun\/font\/NativeFont.java","additions":5,"deletions":24,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,0 +25,1 @@\n+\n@@ -27,1 +28,0 @@\n-import java.util.Objects;\n@@ -29,0 +29,2 @@\n+import java.nio.charset.StandardCharsets;\n+import java.util.Objects;\n@@ -190,4 +192,1 @@\n-            try {\n-                strVal = new String(strBytes, \"UTF-8\");\n-            } catch (java.io.UnsupportedEncodingException uee) {\n-            }\n+            strVal = new String(strBytes, StandardCharsets.UTF_8);\n@@ -222,4 +221,1 @@\n-                try {\n-                    valueArray[i] = new String(bufBytes, \"UTF-8\");\n-                } catch (java.io.UnsupportedEncodingException uee) {\n-                }\n+                valueArray[i] = new String(bufBytes, StandardCharsets.UTF_8);\n","filename":"src\/java.desktop\/unix\/classes\/sun\/print\/AttributeClass.java","additions":6,"deletions":10,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -30,21 +30,3 @@\n-import javax.print.attribute.*;\n-import javax.print.attribute.standard.*;\n-import javax.print.DocFlavor;\n-import javax.print.DocPrintJob;\n-import javax.print.PrintService;\n-import javax.print.ServiceUIFactory;\n-import java.util.ArrayList;\n-import java.util.HashMap;\n-import java.util.Locale;\n-import java.util.Date;\n-import java.util.Arrays;\n-import java.security.AccessController;\n-import java.security.PrivilegedActionException;\n-import java.security.PrivilegedExceptionAction;\n-import javax.print.event.PrintServiceAttributeListener;\n-\n-import java.net.URI;\n-import java.net.URISyntaxException;\n-import java.net.URL;\n-import java.net.URLConnection;\n-import java.net.HttpURLConnection;\n+import java.io.BufferedReader;\n+import java.io.ByteArrayOutputStream;\n+import java.io.DataInputStream;\n@@ -53,0 +35,1 @@\n+import java.io.InputStreamReader;\n@@ -55,8 +38,9 @@\n-import java.io.DataInputStream;\n-import java.io.ByteArrayOutputStream;\n-import java.io.ByteArrayInputStream;\n-import java.io.BufferedReader;\n-import java.io.InputStreamReader;\n-import java.nio.charset.Charset;\n-\n-import java.util.Iterator;\n+import java.net.HttpURLConnection;\n+import java.net.URI;\n+import java.net.URISyntaxException;\n+import java.net.URL;\n+import java.net.URLConnection;\n+import java.nio.charset.StandardCharsets;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.HashMap;\n@@ -64,0 +48,1 @@\n+import java.util.Locale;\n@@ -66,0 +51,53 @@\n+import javax.print.DocFlavor;\n+import javax.print.DocPrintJob;\n+import javax.print.PrintService;\n+import javax.print.ServiceUIFactory;\n+import javax.print.attribute.Attribute;\n+import javax.print.attribute.AttributeSet;\n+import javax.print.attribute.AttributeSetUtilities;\n+import javax.print.attribute.EnumSyntax;\n+import javax.print.attribute.HashAttributeSet;\n+import javax.print.attribute.HashPrintServiceAttributeSet;\n+import javax.print.attribute.PrintRequestAttribute;\n+import javax.print.attribute.PrintServiceAttribute;\n+import javax.print.attribute.PrintServiceAttributeSet;\n+import javax.print.attribute.Size2DSyntax;\n+import javax.print.attribute.standard.Chromaticity;\n+import javax.print.attribute.standard.ColorSupported;\n+import javax.print.attribute.standard.Copies;\n+import javax.print.attribute.standard.CopiesSupported;\n+import javax.print.attribute.standard.Destination;\n+import javax.print.attribute.standard.DialogOwner;\n+import javax.print.attribute.standard.DialogTypeSelection;\n+import javax.print.attribute.standard.Fidelity;\n+import javax.print.attribute.standard.Finishings;\n+import javax.print.attribute.standard.JobName;\n+import javax.print.attribute.standard.JobSheets;\n+import javax.print.attribute.standard.Media;\n+import javax.print.attribute.standard.MediaPrintableArea;\n+import javax.print.attribute.standard.MediaSize;\n+import javax.print.attribute.standard.MediaSizeName;\n+import javax.print.attribute.standard.MediaTray;\n+import javax.print.attribute.standard.NumberUp;\n+import javax.print.attribute.standard.OrientationRequested;\n+import javax.print.attribute.standard.PDLOverrideSupported;\n+import javax.print.attribute.standard.PageRanges;\n+import javax.print.attribute.standard.PagesPerMinute;\n+import javax.print.attribute.standard.PagesPerMinuteColor;\n+import javax.print.attribute.standard.PrinterInfo;\n+import javax.print.attribute.standard.PrinterIsAcceptingJobs;\n+import javax.print.attribute.standard.PrinterLocation;\n+import javax.print.attribute.standard.PrinterMakeAndModel;\n+import javax.print.attribute.standard.PrinterMessageFromOperator;\n+import javax.print.attribute.standard.PrinterMoreInfo;\n+import javax.print.attribute.standard.PrinterMoreInfoManufacturer;\n+import javax.print.attribute.standard.PrinterName;\n+import javax.print.attribute.standard.PrinterResolution;\n+import javax.print.attribute.standard.PrinterState;\n+import javax.print.attribute.standard.PrinterStateReasons;\n+import javax.print.attribute.standard.PrinterURI;\n+import javax.print.attribute.standard.QueuedJobCount;\n+import javax.print.attribute.standard.RequestingUserName;\n+import javax.print.attribute.standard.SheetCollate;\n+import javax.print.attribute.standard.Sides;\n+import javax.print.event.PrintServiceAttributeListener;\n@@ -328,5 +366,1 @@\n-        try {\n-            printer = java.net.URLDecoder.decode(name, \"UTF-8\");\n-        } catch (java.io.UnsupportedEncodingException e) {\n-            printer = name;\n-        }\n+        printer = java.net.URLDecoder.decode(name, StandardCharsets.UTF_8);\n@@ -362,5 +396,1 @@\n-        try {\n-            printer = java.net.URLDecoder.decode(name, \"UTF-8\");\n-        } catch (java.io.UnsupportedEncodingException e) {\n-            printer = name;\n-        }\n+        printer = java.net.URLDecoder.decode(name, StandardCharsets.UTF_8);\n@@ -1740,1 +1770,1 @@\n-                                                          Charset.forName(\"ISO-8859-1\")));\n+                                                  StandardCharsets.ISO_8859_1));\n@@ -1832,7 +1862,2 @@\n-        OutputStreamWriter osw;\n-        try {\n-            osw = new OutputStreamWriter(os, \"UTF-8\");\n-        } catch (java.io.UnsupportedEncodingException exc) {\n-            debug_println(debugPrefix+\"writeIPPRequest, UTF-8 not supported? Exception: \"+exc);\n-            return false;\n-        }\n+        OutputStreamWriter osw = new OutputStreamWriter(os,\n+                                                        StandardCharsets.UTF_8);\n","filename":"src\/java.desktop\/unix\/classes\/sun\/print\/IPPPrintService.java","additions":72,"deletions":47,"binary":false,"changes":119,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-import java.awt.Image;\n@@ -30,0 +29,1 @@\n+import java.awt.Image;\n@@ -31,1 +31,0 @@\n-\n@@ -33,1 +32,0 @@\n-\n@@ -38,1 +36,0 @@\n-\n@@ -40,1 +37,0 @@\n-\n@@ -51,1 +47,0 @@\n-\n@@ -54,0 +49,3 @@\n+import java.io.ByteArrayOutputStream;\n+import java.io.File;\n+import java.io.IOException;\n@@ -56,4 +54,0 @@\n-import java.io.IOException;\n-import java.io.UnsupportedEncodingException;\n-import java.io.File;\n-\n@@ -61,1 +55,0 @@\n-\n@@ -63,0 +56,2 @@\n+import java.nio.charset.StandardCharsets;\n+import java.util.ArrayList;\n@@ -72,1 +67,0 @@\n-\n@@ -76,4 +70,0 @@\n-import java.util.ArrayList;\n-\n-import java.io.ByteArrayOutputStream;\n-\n@@ -252,1 +242,2 @@\n-            String st = new String(bytes, 0, bytes.length, \"UTF-16LE\");\n+            String st = new String(bytes, 0, bytes.length,\n+                                   StandardCharsets.UTF_16LE);\n@@ -278,1 +269,2 @@\n-                        getTransferData(javaTextEncodingFlavor), \"UTF-8\");\n+                        getTransferData(javaTextEncodingFlavor),\n+                                         StandardCharsets.UTF_8);\n@@ -551,2 +543,0 @@\n-    \/\/static section\n-    public static final String ENCODING = \"UTF-8\";\n@@ -674,7 +664,2 @@\n-        byte[] headerBytes = null, trailerBytes = null;\n-\n-        try {\n-            headerBytes = header.toString().getBytes(ENCODING);\n-            trailerBytes = htmlSuffix.getBytes(ENCODING);\n-        } catch (UnsupportedEncodingException cannotHappen) {\n-        }\n+        byte[] headerBytes = header.toString().getBytes(StandardCharsets.UTF_8);\n+        byte[] trailerBytes = htmlSuffix.getBytes(StandardCharsets.UTF_8);\n@@ -789,1 +774,1 @@\n-                        ENCODING\n+                        StandardCharsets.UTF_8\n","filename":"src\/java.desktop\/windows\/classes\/sun\/awt\/windows\/WDataTransferer.java","additions":13,"deletions":28,"binary":false,"changes":41,"status":"modified"}]}