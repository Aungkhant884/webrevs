{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2012, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -172,1 +172,7 @@\n-            altIcon.paintIcon(c, g, iconRect.x, iconRect.y);\n+            int offset = 0;\n+            if (b.isFocusOwner()) {\n+                offset = 2;\n+                altIcon = AquaFocus.createFocusedIcon(altIcon, c, 2);\n+            }\n+\n+            altIcon.paintIcon(c, g, iconRect.x - offset, iconRect.y - offset);\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaButtonLabeledUI.java","additions":8,"deletions":2,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -0,0 +1,109 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Color;\n+import java.awt.Component;\n+import java.awt.Dimension;\n+import java.awt.Graphics;\n+import java.awt.image.BufferedImage;\n+import java.io.File;\n+import javax.imageio.ImageIO;\n+import javax.swing.Icon;\n+import javax.swing.JCheckBox;\n+\n+\/*\n+ * @test\n+ * @key headful\n+ * @bug 8216358\n+ * @summary [macos] The focus is invisible when tab to \"Image Radio Buttons\" and \"Image CheckBoxes\"\n+ * @library ..\/..\/regtesthelpers\/\n+ * @build Util\n+ * @run main ImageCheckboxTest\n+ *\/\n+\n+public class ImageCheckboxTest {\n+    public static void main(String[] args) throws Exception {\n+        new ImageCheckboxTest().performTest();\n+    }\n+\n+    public void performTest() throws Exception {\n+        BufferedImage imageNoFocus = new BufferedImage(100, 50,\n+                BufferedImage.TYPE_INT_ARGB);\n+        BufferedImage imageFocus = new BufferedImage(100, 50,\n+                BufferedImage.TYPE_INT_ARGB);\n+\n+        CustomCheckBox checkbox = new CustomCheckBox(\"Test\", new MyIcon(Color.GREEN));\n+        checkbox.setSize(100, 50);\n+        checkbox.setFocused(false);\n+        checkbox.paint(imageNoFocus.createGraphics());\n+        checkbox.setFocused(true);\n+        checkbox.paint(imageFocus.createGraphics());\n+\n+        if (Util.compareBufferedImages(imageFocus, imageNoFocus)) {\n+            ImageIO.write(imageFocus, \"png\", new File(\"imageFocus.png\"));\n+            ImageIO.write(imageNoFocus, \"png\", new File(\"imageNoFocus.png\"));\n+            throw new Exception(\"Changing focus is not visualized\");\n+        }\n+    }\n+\n+    class MyIcon implements Icon {\n+        Color color;\n+        public MyIcon(Color color) {\n+            this.color = color;\n+        }\n+\n+        @Override\n+        public void paintIcon(Component c, Graphics g, int x, int y) {\n+            Color old = g.getColor();\n+            g.setColor(color);\n+            g.fillArc(x+2, y+2, 12, 12, 0, 360);\n+            g.setColor(old);\n+        }\n+\n+        @Override\n+        public int getIconWidth() {\n+            return 18;\n+        }\n+\n+        @Override\n+        public int getIconHeight() {\n+            return 18;\n+        }\n+    }\n+\n+    class CustomCheckBox extends JCheckBox {\n+        public CustomCheckBox(String label, Icon icon) {\n+            super(label, icon);\n+        }\n+\n+        private boolean focused = false;\n+        public void setFocused(boolean focused) {\n+            this.focused = focused;\n+        }\n+\n+        @Override\n+        public boolean hasFocus() {\n+            return focused;\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JCheckBox\/ImageCheckboxFocus\/ImageCheckboxTest.java","additions":109,"deletions":0,"binary":false,"changes":109,"status":"added"}]}