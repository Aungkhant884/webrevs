{"files":[{"patch":"@@ -283,0 +283,1 @@\n+            int prefPos = bp;\n@@ -285,1 +286,1 @@\n-            return erroneous(\"dc.no.tag.name\", p);\n+            return erroneous(\"dc.no.tag.name\", p, prefPos);\n@@ -318,1 +319,1 @@\n-                return erroneous(\"dc.no.tag.name\", p);\n+                return erroneous(\"dc.no.tag.name\", p, bp);\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/parser\/DocCommentParser.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -0,0 +1,133 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug      8301813\n+ * @summary  Bad caret position in error message\n+ * @library  \/tools\/lib ..\/..\/lib\n+ * @modules  jdk.javadoc\/jdk.javadoc.internal.tool\n+ * @build    toolbox.ToolBox javadoc.tester.*\n+ * @run main TestNoTagName\n+ *\/\n+\n+import java.nio.file.Path;\n+\n+import javadoc.tester.JavadocTester;\n+import toolbox.ToolBox;\n+\n+public class TestNoTagName extends JavadocTester {\n+\n+    public static void main(String... args) throws Exception {\n+        var test = new TestNoTagName();\n+        test.runTests();\n+    }\n+\n+    private ToolBox tb = new ToolBox();\n+\n+    @Test\n+    public void test_inline_missing(Path base) throws Exception {\n+        Path src = base.resolve(\"src\");\n+        tb.writeJavaFiles(src, \"\"\"\n+                    \/**\n+                     * abc {@ } def\n+                     *\/\n+                    public class C { private C() { } }\n+                    \"\"\"\n+                );\n+        javadoc(\"-d\", base.resolve(\"api\").toString(),\n+                src.resolve(\"C.java\").toString()\n+                );\n+        checkExit(Exit.ERROR);\n+        checkOutput(Output.OUT, true, \"\"\"\n+                C.java:2: error: no tag name after '@'\n+                 * abc {@ } def\n+                         ^\n+                \"\"\");\n+    }\n+\n+    @Test\n+    public void test_inline_bad(Path base) throws Exception {\n+        Path src = base.resolve(\"src\");\n+        tb.writeJavaFiles(src, \"\"\"\n+                    \/**\n+                     * abc {@\/ } def\n+                     *\/\n+                    public class C { private C() { } }\n+                    \"\"\"\n+        );\n+        javadoc(\"-d\", base.resolve(\"api\").toString(),\n+                src.resolve(\"C.java\").toString()\n+        );\n+        checkExit(Exit.ERROR);\n+        checkOutput(Output.OUT, true, \"\"\"\n+                C.java:2: error: no tag name after '@'\n+                 * abc {@\/ } def\n+                         ^\n+                \"\"\");\n+    }\n+\n+    @Test\n+    public void test_block_missing(Path base) throws Exception {\n+        Path src = base.resolve(\"src\");\n+        tb.writeJavaFiles(src, \"\"\"\n+                    \/**\n+                     * abc.\n+                     * @ def\n+                     *\/\n+                    public class C { private C() { } }\n+                    \"\"\"\n+        );\n+        javadoc(\"-d\", base.resolve(\"api\").toString(),\n+                src.resolve(\"C.java\").toString()\n+        );\n+        checkExit(Exit.ERROR);\n+        checkOutput(Output.OUT, true, \"\"\"\n+                C.java:3: error: no tag name after '@'\n+                 * @ def\n+                    ^\n+                \"\"\");\n+    }\n+\n+    @Test\n+    public void test_block_bad(Path base) throws Exception {\n+        Path src = base.resolve(\"src\");\n+        tb.writeJavaFiles(src, \"\"\"\n+                    \/**\n+                     * abc.\n+                     * @\/ def\n+                     *\/\n+                    public class C { private C() { } }\n+                    \"\"\"\n+        );\n+        javadoc(\"-d\", base.resolve(\"api\").toString(),\n+                src.resolve(\"C.java\").toString()\n+        );\n+        checkExit(Exit.ERROR);\n+        checkOutput(Output.OUT, true, \"\"\"\n+                C.java:3: error: no tag name after '@'\n+                 * @\/ def\n+                    ^\n+                \"\"\");\n+    }\n+}\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testNoTagName\/TestNoTagName.java","additions":133,"deletions":0,"binary":false,"changes":133,"status":"added"},{"patch":"@@ -12,1 +12,1 @@\n- * @@@\n+ * @!#\n","filename":"test\/langtools\/tools\/doclint\/BadPackageCommentTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -5,4 +5,1 @@\n- * @@@\n-   ^\n-BadPackageCommentTest.java:12: error: no tag name after '@'\n- * @@@\n+ * @!#\n@@ -10,4 +7,1 @@\n-BadPackageCommentTest.java:12: error: no tag name after '@'\n- * @@@\n-     ^\n-3 errors\n+1 error\n","filename":"test\/langtools\/tools\/doclint\/BadPackageCommentTest.out","additions":2,"deletions":8,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 7021614 8078320 8273244 8284908 8301201\n+ * @bug 7021614 8078320 8273244 8284908 8301201 8301813\n@@ -96,1 +96,1 @@\n-    Erroneous[ERRONEOUS, pos:1, prefPos:5\n+    Erroneous[ERRONEOUS, pos:1, prefPos:2\n@@ -144,1 +144,1 @@\n-    Erroneous[ERRONEOUS, pos:1, prefPos:2\n+    Erroneous[ERRONEOUS, pos:1, prefPos:3\n","filename":"test\/langtools\/tools\/javac\/doctree\/TagTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}