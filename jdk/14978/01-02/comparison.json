{"files":[{"patch":"@@ -1989,1 +1989,1 @@\n-  switch (state & ~(TIMED | SUSPENDED)) {\n+  switch (state & ~SUSPENDED) {\n@@ -1997,0 +1997,1 @@\n+    case TIMED_PARKING:\n@@ -2002,1 +2003,5 @@\n-      status = ((state & TIMED) != 0) ? JavaThreadStatus::PARKED_TIMED : JavaThreadStatus::PARKED;\n+      status = JavaThreadStatus::PARKED;\n+      break;\n+    case TIMED_PARKED:\n+    case TIMED_PINNED:\n+      status = JavaThreadStatus::PARKED_TIMED;\n","filename":"src\/hotspot\/share\/classfile\/javaClasses.cpp","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -524,9 +524,12 @@\n-    NEW          = 0,\n-    STARTED      = 1,\n-    RUNNABLE     = 2,\n-    RUNNING      = 3,\n-    PARKING      = 4,\n-    PARKED       = 5,\n-    PINNED       = 6,\n-    YIELDING     = 7,\n-    TERMINATED   = 99,\n+    NEW           = 0,\n+    STARTED       = 1,\n+    RUNNABLE      = 2,\n+    RUNNING       = 3,\n+    PARKING       = 4,\n+    PARKED        = 5,\n+    PINNED        = 6,\n+    TIMED_PARKING = 7,\n+    TIMED_PARKED  = 8,\n+    TIMED_PINNED  = 9,\n+    YIELDING      = 10,\n+    TERMINATED    = 99,\n@@ -535,2 +538,1 @@\n-    TIMED        = 1 << 8,   \/\/ timed parked\n-    SUSPENDED    = 1 << 9,   \/\/ suspended when unmounted\n+    SUSPENDED    = 1 << 8,   \/\/ suspended when unmounted\n","filename":"src\/hotspot\/share\/classfile\/javaClasses.hpp","additions":13,"deletions":11,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -89,1 +89,1 @@\n-     * Virtual thread state and transitions:\n+     * Virtual thread state transitions:\n@@ -91,1 +91,1 @@\n-     *      NEW -> STARTED         \/\/ Thread.start\n+     *      NEW -> STARTED         \/\/ Thread.start, schedule to run\n@@ -94,0 +94,1 @@\n+     *  RUNNING -> TERMINATED      \/\/ done\n@@ -95,3 +96,5 @@\n-     *  RUNNING -> PARKING         \/\/ Thread attempts to park\n-     *  PARKING -> PARKED          \/\/ cont.yield successful, thread is parked\n-     *  PARKING -> PINNED          \/\/ cont.yield failed, thread is pinned\n+     *  RUNNING -> PARKING         \/\/ Thread parking with LockSupport.park\n+     *  PARKING -> PARKED          \/\/ cont.yield successful, parked indefinitely\n+     *  PARKING -> PINNED          \/\/ cont.yield failed, parked indefinitely on carrier\n+     *   PARKED -> RUNNABLE        \/\/ unparked, schedule to continue\n+     *   PINNED -> RUNNING         \/\/ unparked, continue execution on same carrier\n@@ -99,2 +102,5 @@\n-     *   PARKED -> RUNNABLE        \/\/ unpark or interrupted\n-     *   PINNED -> RUNNABLE        \/\/ unpark or interrupted\n+     *       RUNNING -> TIMED_PARKING   \/\/ Thread parking with LockSupport.parkNanos\n+     * TIMED_PARKING -> TIMED_PARKED    \/\/ cont.yield successful, timed-parked\n+     * TIMED_PARKING -> TIMED_PINNED    \/\/ cont.yield failed, timed-parked on carrier\n+     *  TIMED_PARKED -> RUNNABLE        \/\/ unparked, schedule to continue\n+     *  TIMED_PINNED -> RUNNING         \/\/ unparked, continue execution on same carrier\n@@ -103,1 +109,1 @@\n-     *\n+\n@@ -107,2 +113,0 @@\n-     *\n-     *  RUNNING -> TERMINATED      \/\/ done\n@@ -114,0 +118,2 @@\n+\n+    \/\/ untimed parking\n@@ -117,1 +123,8 @@\n-    private static final int YIELDING = 7;     \/\/ Thread.yield\n+\n+    \/\/ timed parking\n+    private static final int TIMED_PARKING = 7;\n+    private static final int TIMED_PARKED  = 8;\n+    private static final int TIMED_PINNED  = 9;\n+\n+    private static final int YIELDING   = 10;  \/\/ Thread.yield\n+\n@@ -120,3 +133,2 @@\n-    \/\/ additional state bits\n-    private static final int TIMED     = 1 << 8;  \/\/ timed parked\n-    private static final int SUSPENDED = 1 << 9;  \/\/ suspended when unmounted\n+    \/\/ can be suspended from scheduling when unmounted\n+    private static final int SUSPENDED = 1 << 8;\n@@ -436,3 +448,1 @@\n-        int s = state();\n-        boolean parking = (s & ~TIMED) == PARKING;\n-        assert (parking || s == YIELDING) && (carrierThread == null);\n+        assert carrierThread == null;\n@@ -440,2 +450,3 @@\n-        if (parking) {\n-            int newState = PARKED | (s & TIMED);\n+        int s = state();\n+        if (s == PARKING || s == TIMED_PARKING) {\n+            int newState = (s == PARKING) ? PARKED : TIMED_PARKED;\n@@ -449,1 +460,1 @@\n-                \/\/ lazy submit to continue on the current carrier if possible\n+                \/\/ lazy submit to continue on the current thread as carrier if possible\n@@ -469,0 +480,2 @@\n+        } else {\n+            assert false;\n@@ -611,1 +624,1 @@\n-            setState(PARKING | TIMED);\n+            setState(TIMED_PARKING);\n@@ -617,1 +630,1 @@\n-                    assert state() == (PARKING | TIMED);\n+                    assert state() == TIMED_PARKING;\n@@ -649,1 +662,1 @@\n-        setState(PINNED | ((timed ? TIMED : 0)));\n+        setState(timed ? TIMED_PINNED : PINNED);\n@@ -717,2 +730,2 @@\n-\n-            if ((s & ~TIMED) == PARKED && compareAndSetState(s, RUNNABLE)) {\n+            boolean parked = (s == PARKED) || (s == TIMED_PARKED);\n+            if (parked && compareAndSetState(s, RUNNABLE)) {\n@@ -729,1 +742,1 @@\n-            } else if ((s & ~TIMED) == PINNED) {\n+            } else if ((s == PINNED) || (s == TIMED_PINNED)) {\n@@ -733,1 +746,1 @@\n-                    if (carrier != null && (state() & ~TIMED) == PINNED) {\n+                    if (carrier != null && ((s = state()) == PINNED || s == TIMED_PINNED)) {\n@@ -871,1 +884,1 @@\n-        switch (s & ~(TIMED | SUSPENDED)) {\n+        switch (s & ~SUSPENDED) {\n@@ -895,0 +908,1 @@\n+            case TIMED_PARKING:\n@@ -900,1 +914,4 @@\n-                return (s & TIMED) != 0 ? State.TIMED_WAITING : State.WAITING;\n+                return State.WAITING;\n+            case TIMED_PARKED:\n+            case TIMED_PINNED:\n+                return State.TIMED_WAITING;\n@@ -939,2 +956,2 @@\n-        return switch (initialState & ~TIMED) {\n-            case RUNNABLE, PARKED -> {\n+        return switch (initialState) {\n+            case RUNNABLE, PARKED, TIMED_PARKED -> {\n","filename":"src\/java.base\/share\/classes\/java\/lang\/VirtualThread.java","additions":48,"deletions":31,"binary":false,"changes":79,"status":"modified"},{"patch":"@@ -152,2 +152,2 @@\n-            await(ready1); \/\/ to guaranty state is not State.WAITING after await(mready) in test1()\n-            \/\/ wait for test1 threads to reach WAITING state in sleep()\n+            await(ready1); \/\/ to guarantee state is not State.TIMED_WAITING after await(mready) in test1()\n+            \/\/ wait for test1 threads to reach TIMED_WAITING state in sleep()\n@@ -157,1 +157,1 @@\n-                while (state != Thread.State.WAITING) {\n+                while (state != Thread.State.TIMED_WAITING) {\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/VThreadEventTest\/VThreadEventTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}