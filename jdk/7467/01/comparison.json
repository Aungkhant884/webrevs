{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -185,1 +185,4 @@\n-            close(fd);\n+            try {\n+                close(fd);\n+            } catch (UnixException ignore) {\n+            }\n@@ -280,1 +283,4 @@\n-            close(fd);\n+            try {\n+                close(fd);\n+            } catch (UnixException ignore) {\n+            }\n","filename":"src\/java.base\/linux\/classes\/sun\/nio\/fs\/LinuxDosFileAttributeView.java","additions":9,"deletions":3,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -73,2 +73,7 @@\n-            UnixNativeDispatcher.close(ifd);\n-            throw new IOException(x.errorString());\n+            IOException ioe = new IOException(x.errorString());\n+            try {\n+                UnixNativeDispatcher.close(ifd);\n+            } catch (UnixException e) {\n+                ioe.addSuppressed(e);\n+            }\n+            throw ioe;\n@@ -299,3 +304,6 @@\n-            UnixNativeDispatcher.close(socketpair[0]);\n-            UnixNativeDispatcher.close(socketpair[1]);\n-            UnixNativeDispatcher.close(ifd);\n+            try {\n+                UnixNativeDispatcher.close(socketpair[0]);\n+                UnixNativeDispatcher.close(socketpair[1]);\n+                UnixNativeDispatcher.close(ifd);\n+            } catch (UnixException ignore) {\n+            }\n","filename":"src\/java.base\/linux\/classes\/sun\/nio\/fs\/LinuxWatchService.java","additions":14,"deletions":6,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -189,1 +189,5 @@\n-                    close(sfd);\n+                    try {\n+                        close(sfd);\n+                    } catch (UnixException e) {\n+                        e.rethrowAsIOException(source);\n+                    }\n@@ -212,2 +216,8 @@\n-            if (dfd >= 0)\n-                close(dfd);\n+            if (dfd >= 0) {\n+                try {\n+                    close(dfd);\n+                } catch (UnixException e) {\n+                    if (done)\n+                        e.rethrowAsIOException(target);\n+                }\n+            }\n@@ -236,0 +246,2 @@\n+        \/\/ set to true when file and attributes copied\n+        boolean complete = false;\n@@ -249,2 +261,0 @@\n-            \/\/ set to true when file and attributes copied\n-            boolean complete = false;\n@@ -291,1 +301,6 @@\n-                close(fo);\n+                try {\n+                    close(fo);\n+                } catch (UnixException e) {\n+                    if (complete)\n+                        e.rethrowAsIOException(target);\n+                }\n@@ -301,1 +316,6 @@\n-            close(fi);\n+            try {\n+                close(fi);\n+            } catch (UnixException e) {\n+                if (complete)\n+                    e.rethrowAsIOException(source);\n+            }\n","filename":"src\/java.base\/unix\/classes\/sun\/nio\/fs\/UnixCopyFile.java","additions":28,"deletions":8,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -70,1 +70,1 @@\n-    protected final UnixPath directory() {\n+    final UnixPath directory() {\n","filename":"src\/java.base\/unix\/classes\/sun\/nio\/fs\/UnixDirectoryStream.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -163,1 +163,4 @@\n-                close(fd);\n+                try {\n+                    close(fd);\n+                } catch (UnixException ignore) {\n+                }\n","filename":"src\/java.base\/unix\/classes\/sun\/nio\/fs\/UnixFileAttributeViews.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -200,1 +200,4 @@\n-            UnixNativeDispatcher.close(fd);\n+            try {\n+                UnixNativeDispatcher.close(fd);\n+            } catch (UnixException ignore) {\n+            }\n","filename":"src\/java.base\/unix\/classes\/sun\/nio\/fs\/UnixFileStore.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -434,7 +434,18 @@\n-            if (dfd1 != -1)\n-                UnixNativeDispatcher.close(dfd1);\n-            if (dfd2 != -1)\n-                UnixNativeDispatcher.close(dfd2);\n-            if (x.errno() == UnixConstants.ENOTDIR)\n-                throw new NotDirectoryException(dir.getPathForExceptionMessage());\n-            x.rethrowAsIOException(dir);\n+            IOException ioe = x.errno() == UnixConstants.ENOTDIR ?\n+                new NotDirectoryException(dir.getPathForExceptionMessage()) :\n+                x.asIOException(dir);\n+            if (dfd1 != -1) {\n+                try {\n+                    UnixNativeDispatcher.close(dfd1);\n+                } catch (UnixException y) {\n+                    ioe.addSuppressed(y);\n+                }\n+            }\n+            if (dfd2 != -1) {\n+                try {\n+                    UnixNativeDispatcher.close(dfd2);\n+                } catch (UnixException z) {\n+                    ioe.addSuppressed(z);\n+                }\n+            }\n+            throw ioe;\n","filename":"src\/java.base\/unix\/classes\/sun\/nio\/fs\/UnixFileSystemProvider.java","additions":19,"deletions":8,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -93,1 +93,1 @@\n-    static void close(int fd) {\n+    static void close(int fd) throws UnixException {\n@@ -98,1 +98,1 @@\n-    private static native void close0(int fd);\n+    private static native void close0(int fd) throws UnixException;\n","filename":"src\/java.base\/unix\/classes\/sun\/nio\/fs\/UnixNativeDispatcher.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -64,1 +64,5 @@\n-                UnixNativeDispatcher.close(dfd);\n+                try {\n+                    UnixNativeDispatcher.close(dfd);\n+                } catch (UnixException e) {\n+                    e.rethrowAsIOException(ds.directory());\n+                }\n@@ -120,7 +124,18 @@\n-                if (newdfd1 != -1)\n-                    UnixNativeDispatcher.close(newdfd1);\n-                if (newdfd2 != -1)\n-                    UnixNativeDispatcher.close(newdfd2);\n-                if (x.errno() == UnixConstants.ENOTDIR)\n-                    throw new NotDirectoryException(file.toString());\n-                x.rethrowAsIOException(file);\n+                IOException ioe = x.errno() == UnixConstants.ENOTDIR ?\n+                    new NotDirectoryException(file.toString()) :\n+                    x.asIOException(file);\n+                if (newdfd1 != -1) {\n+                    try {\n+                        UnixNativeDispatcher.close(newdfd1);\n+                    } catch (UnixException e) {\n+                        ioe.addSuppressed(e);\n+                    }\n+                }\n+                if (newdfd2 != -1) {\n+                    try {\n+                        UnixNativeDispatcher.close(newdfd2);\n+                    } catch (UnixException e) {\n+                        ioe.addSuppressed(e);\n+                    }\n+                }\n+                throw ioe;\n@@ -424,2 +439,6 @@\n-                    if (file != null)\n-                        UnixNativeDispatcher.close(fd);\n+                    if (file != null) {\n+                        try {\n+                            UnixNativeDispatcher.close(fd);\n+                        } catch (UnixException ignore) {\n+                        }\n+                    }\n@@ -506,2 +525,6 @@\n-                    if (file != null && fd >= 0)\n-                        UnixNativeDispatcher.close(fd);\n+                    if (file != null && fd >= 0) {\n+                        try {\n+                            UnixNativeDispatcher.close(fd);\n+                        } catch (UnixException ignore) {\n+                        }\n+                    }\n@@ -529,2 +552,6 @@\n-                    if (file != null && fd >= 0)\n-                        UnixNativeDispatcher.close(fd);\n+                    if (file != null && fd >= 0) {\n+                        try {\n+                            UnixNativeDispatcher.close(fd);\n+                        } catch (UnixException ignore) {\n+                        }\n+                    }\n","filename":"src\/java.base\/unix\/classes\/sun\/nio\/fs\/UnixSecureDirectoryStream.java","additions":42,"deletions":15,"binary":false,"changes":57,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -136,1 +136,4 @@\n-            close(fd);\n+            try {\n+                close(fd);\n+            } catch (UnixException ignore) {\n+            }\n@@ -160,1 +163,4 @@\n-            close(fd);\n+            try {\n+                close(fd);\n+            } catch (UnixException ignore) {\n+            }\n@@ -224,1 +230,4 @@\n-            close(fd);\n+            try {\n+                close(fd);\n+            } catch (UnixException ignore) {\n+            }\n@@ -286,1 +295,4 @@\n-            close(fd);\n+            try {\n+                close(fd);\n+            } catch (UnixException ignore) {\n+            }\n@@ -308,1 +320,4 @@\n-            close(fd);\n+            try {\n+                close(fd);\n+            } catch (UnixException ignore) {\n+            }\n@@ -349,1 +364,1 @@\n-}\n\\ No newline at end of file\n+}\n","filename":"src\/java.base\/unix\/classes\/sun\/nio\/fs\/UnixUserDefinedFileAttributeView.java","additions":22,"deletions":7,"binary":false,"changes":29,"status":"modified"}]}