{"files":[{"patch":"@@ -185,4 +185,1 @@\n-            try {\n-                close(fd);\n-            } catch (UnixException ignore) {\n-            }\n+            close(fd, null);\n@@ -283,4 +280,1 @@\n-            try {\n-                close(fd);\n-            } catch (UnixException ignore) {\n-            }\n+            close(fd, null);\n","filename":"src\/java.base\/linux\/classes\/sun\/nio\/fs\/LinuxDosFileAttributeView.java","additions":2,"deletions":8,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -73,7 +73,2 @@\n-            IOException ioe = new IOException(x.errorString());\n-            try {\n-                UnixNativeDispatcher.close(ifd);\n-            } catch (UnixException e) {\n-                ioe.addSuppressed(e);\n-            }\n-            throw ioe;\n+            throw UnixNativeDispatcher.close(ifd,\n+                new IOException(x.errorString()), y -> y.asIOException(null));\n@@ -304,6 +299,3 @@\n-            try {\n-                UnixNativeDispatcher.close(socketpair[0]);\n-                UnixNativeDispatcher.close(socketpair[1]);\n-                UnixNativeDispatcher.close(ifd);\n-            } catch (UnixException ignore) {\n-            }\n+            UnixNativeDispatcher.close(socketpair[0], null);\n+            UnixNativeDispatcher.close(socketpair[1], null);\n+            UnixNativeDispatcher.close(ifd, null);\n","filename":"src\/java.base\/linux\/classes\/sun\/nio\/fs\/LinuxWatchService.java","additions":5,"deletions":13,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -189,5 +189,1 @@\n-                    try {\n-                        close(sfd);\n-                    } catch (UnixException e) {\n-                        e.rethrowAsIOException(source);\n-                    }\n+                    close(sfd, x -> x.asIOException(source));\n@@ -216,8 +212,2 @@\n-            if (dfd >= 0) {\n-                try {\n-                    close(dfd);\n-                } catch (UnixException e) {\n-                    if (done)\n-                        e.rethrowAsIOException(target);\n-                }\n-            }\n+            if (dfd >= 0)\n+                close(dfd, null);\n@@ -246,2 +236,0 @@\n-        \/\/ set to true when file and attributes copied\n-        boolean complete = false;\n@@ -261,0 +249,2 @@\n+            \/\/ set to true when file and attributes copied\n+            boolean complete = false;\n@@ -301,6 +291,1 @@\n-                try {\n-                    close(fo);\n-                } catch (UnixException e) {\n-                    if (complete)\n-                        e.rethrowAsIOException(target);\n-                }\n+                close(fo, null);\n@@ -316,6 +301,1 @@\n-            try {\n-                close(fi);\n-            } catch (UnixException e) {\n-                if (complete)\n-                    e.rethrowAsIOException(source);\n-            }\n+            close(fi, null);\n","filename":"src\/java.base\/unix\/classes\/sun\/nio\/fs\/UnixCopyFile.java","additions":7,"deletions":27,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -163,4 +163,1 @@\n-                try {\n-                    close(fd);\n-                } catch (UnixException ignore) {\n-                }\n+                close(fd, null);\n","filename":"src\/java.base\/unix\/classes\/sun\/nio\/fs\/UnixFileAttributeViews.java","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -200,4 +200,1 @@\n-            try {\n-                UnixNativeDispatcher.close(fd);\n-            } catch (UnixException ignore) {\n-            }\n+            UnixNativeDispatcher.close(fd, null);\n","filename":"src\/java.base\/unix\/classes\/sun\/nio\/fs\/UnixFileStore.java","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -438,5 +438,2 @@\n-                try {\n-                    UnixNativeDispatcher.close(dfd1);\n-                } catch (UnixException y) {\n-                    ioe.addSuppressed(y);\n-                }\n+                ioe = UnixNativeDispatcher.close(dfd1, ioe,\n+                    y -> y.asIOException(dir));\n@@ -445,5 +442,2 @@\n-                try {\n-                    UnixNativeDispatcher.close(dfd2);\n-                } catch (UnixException z) {\n-                    ioe.addSuppressed(z);\n-                }\n+                ioe = UnixNativeDispatcher.close(dfd2, ioe,\n+                    z -> z.asIOException(dir));\n","filename":"src\/java.base\/unix\/classes\/sun\/nio\/fs\/UnixFileSystemProvider.java","additions":4,"deletions":10,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -28,0 +28,2 @@\n+import java.util.function.Function;\n+\n@@ -100,0 +102,40 @@\n+    \/**\n+     * close(fd). If close fails then the given exception supplier function is\n+     * invoked to produce an exception to throw. If the function returns null\n+     * then no exception is thrown. If close fails and the exception supplier\n+     * function is null, then no exception is thrown.\n+     *\/\n+    static <X extends Throwable>\n+    void close(int fd, Function<UnixException, X> mapper) throws X {\n+        try {\n+            close(fd);\n+        } catch (UnixException e) {\n+            if (mapper != null) {\n+                X ex = mapper.apply(e);\n+                if (ex != null) throw ex;\n+            }\n+        }\n+    }\n+\n+    \/**\n+     * close(fd). If close is successful then {@code ex} is returned. If\n+     * close fails then the given exception supplier function is invoked\n+     * to produce an exception. If {@code ex} is null then the produced\n+     * exception is returned, otherwise it is added to {@code ex} as a\n+     * suppressed exception and {@code ex} is returned.\n+     *\/\n+    static <X extends Throwable>\n+    X close(int fd, X ex, Function<UnixException, X>  mapper) {\n+        try {\n+            close(fd);\n+        } catch (UnixException ue) {\n+            X closeEx = mapper.apply(ue);\n+            if (ex != null) {\n+                ex.addSuppressed(closeEx);\n+            } else {\n+                ex = closeEx;\n+            }\n+        }\n+        return ex;\n+    }\n+\n","filename":"src\/java.base\/unix\/classes\/sun\/nio\/fs\/UnixNativeDispatcher.java","additions":42,"deletions":0,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -64,5 +64,1 @@\n-                try {\n-                    UnixNativeDispatcher.close(dfd);\n-                } catch (UnixException e) {\n-                    e.rethrowAsIOException(ds.directory());\n-                }\n+                UnixNativeDispatcher.close(dfd, e -> e.asIOException(ds.directory()));\n@@ -128,5 +124,2 @@\n-                    try {\n-                        UnixNativeDispatcher.close(newdfd1);\n-                    } catch (UnixException e) {\n-                        ioe.addSuppressed(e);\n-                    }\n+                    ioe = UnixNativeDispatcher.close(newdfd1, ioe,\n+                        y -> y.asIOException(file));\n@@ -135,5 +128,2 @@\n-                    try {\n-                        UnixNativeDispatcher.close(newdfd2);\n-                    } catch (UnixException e) {\n-                        ioe.addSuppressed(e);\n-                    }\n+                    ioe = UnixNativeDispatcher.close(newdfd1, ioe,\n+                        z -> z.asIOException(file));\n@@ -439,6 +429,2 @@\n-                    if (file != null) {\n-                        try {\n-                            UnixNativeDispatcher.close(fd);\n-                        } catch (UnixException ignore) {\n-                        }\n-                    }\n+                    if (file != null)\n+                        UnixNativeDispatcher.close(fd, null);\n@@ -525,6 +511,2 @@\n-                    if (file != null && fd >= 0) {\n-                        try {\n-                            UnixNativeDispatcher.close(fd);\n-                        } catch (UnixException ignore) {\n-                        }\n-                    }\n+                    if (file != null && fd >= 0)\n+                        UnixNativeDispatcher.close(fd, null);\n@@ -552,6 +534,2 @@\n-                    if (file != null && fd >= 0) {\n-                        try {\n-                            UnixNativeDispatcher.close(fd);\n-                        } catch (UnixException ignore) {\n-                        }\n-                    }\n+                    if (file != null && fd >= 0)\n+                        UnixNativeDispatcher.close(fd, null);\n","filename":"src\/java.base\/unix\/classes\/sun\/nio\/fs\/UnixSecureDirectoryStream.java","additions":11,"deletions":33,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -136,4 +136,1 @@\n-            try {\n-                close(fd);\n-            } catch (UnixException ignore) {\n-            }\n+            close(fd, null);\n@@ -163,4 +160,1 @@\n-            try {\n-                close(fd);\n-            } catch (UnixException ignore) {\n-            }\n+            close(fd, null);\n@@ -230,4 +224,1 @@\n-            try {\n-                close(fd);\n-            } catch (UnixException ignore) {\n-            }\n+            close(fd, null);\n@@ -295,4 +286,1 @@\n-            try {\n-                close(fd);\n-            } catch (UnixException ignore) {\n-            }\n+            close(fd, null);\n@@ -320,4 +308,1 @@\n-            try {\n-                close(fd);\n-            } catch (UnixException ignore) {\n-            }\n+            close(fd, null);\n","filename":"src\/java.base\/unix\/classes\/sun\/nio\/fs\/UnixUserDefinedFileAttributeView.java","additions":5,"deletions":20,"binary":false,"changes":25,"status":"modified"}]}