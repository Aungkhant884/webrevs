{"files":[{"patch":"@@ -73,2 +73,2 @@\n-            throw UnixNativeDispatcher.close(ifd,\n-                new IOException(x.errorString()), e -> null);\n+            UnixNativeDispatcher.close(ifd, e -> null);\n+            throw new IOException(x.errorString());\n","filename":"src\/java.base\/linux\/classes\/sun\/nio\/fs\/LinuxWatchService.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -438,1 +438,1 @@\n-                ioe = UnixNativeDispatcher.close(dfd1, ioe, e -> null);\n+                UnixNativeDispatcher.close(dfd1, e -> null);\n@@ -440,1 +440,1 @@\n-                ioe = UnixNativeDispatcher.close(dfd2, ioe, e -> null);\n+                UnixNativeDispatcher.close(dfd2, e -> null);\n","filename":"src\/java.base\/unix\/classes\/sun\/nio\/fs\/UnixFileSystemProvider.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -120,22 +120,0 @@\n-    \/**\n-     * close(fd). If close is successful then {@code ex} is returned. If\n-     * close fails then the given exception supplier function is invoked\n-     * to produce an exception. If {@code ex} is null then the produced\n-     * exception is returned, otherwise it is added to {@code ex} as a\n-     * suppressed exception and {@code ex} is returned.\n-     *\/\n-    static <X extends Throwable>\n-    X close(int fd, X ex, Function<UnixException, X>  mapper) {\n-        try {\n-            close(fd);\n-        } catch (UnixException ue) {\n-            X closeEx = mapper.apply(ue);\n-            if (ex != null) {\n-                ex.addSuppressed(closeEx);\n-            } else {\n-                ex = closeEx;\n-            }\n-        }\n-        return ex;\n-    }\n-\n","filename":"src\/java.base\/unix\/classes\/sun\/nio\/fs\/UnixNativeDispatcher.java","additions":0,"deletions":22,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -124,1 +124,1 @@\n-                    ioe = UnixNativeDispatcher.close(newdfd1, ioe, e -> null);\n+                    UnixNativeDispatcher.close(newdfd1, e -> null);\n@@ -126,1 +126,1 @@\n-                    ioe = UnixNativeDispatcher.close(newdfd1, ioe, e -> null);\n+                    UnixNativeDispatcher.close(newdfd1, e -> null);\n","filename":"src\/java.base\/unix\/classes\/sun\/nio\/fs\/UnixSecureDirectoryStream.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}