{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,1 @@\n- * @requires vm.gc.Serial\n+ * @requires vm.gc.Serial & vm.opt.MaxNewSize == null & vm.opt.NewRatio == null & vm.opt.NewSize == null & vm.opt.OldSize == null & vm.opt.x.Xms == null & vm.opt.x.Xmx == null\n@@ -45,1 +45,1 @@\n- * @requires vm.gc.Parallel\n+ * @requires vm.gc.Parallel & vm.opt.MaxNewSize == null & vm.opt.NewRatio == null & vm.opt.NewSize == null & vm.opt.OldSize == null & vm.opt.x.Xms == null & vm.opt.x.Xmx == null\n@@ -59,1 +59,1 @@\n- * @requires vm.gc.G1\n+ * @requires vm.gc.G1 & vm.opt.MaxNewSize == null & vm.opt.NewRatio == null & vm.opt.NewSize == null & vm.opt.OldSize == null & vm.opt.x.Xms == null & vm.opt.x.Xmx == null\n@@ -82,2 +82,2 @@\n-    System.out.println(actual);\n-    if (actual.compareTo(new BigInteger((new Long(heapsize)).toString())) == 1) {\n+    System.out.println(\"asserting: \" + actual + \" <= \" + heapsize);\n+    if (actual.compareTo(new BigInteger(\"\" + heapsize)) > 0) {\n@@ -89,19 +89,0 @@\n-  private static void checkIncompatibleNewSize(String[] flags) throws Exception {\n-    ArrayList<String> finalargs = new ArrayList<String>();\n-    finalargs.addAll(Arrays.asList(flags));\n-    finalargs.add(\"-version\");\n-\n-    ProcessBuilder pb = GCArguments.createJavaProcessBuilder(finalargs);\n-    OutputAnalyzer output = new OutputAnalyzer(pb.start());\n-    output.shouldContain(\"Initial young gen size set larger than the maximum young gen size\");\n-  }\n-\n-  private static boolean isRunningG1(String[] args) {\n-    for (int i = 0; i < args.length; i++) {\n-      if (args[i].contains(\"+UseG1GC\")) {\n-        return true;\n-      }\n-    }\n-    return false;\n-  }\n-\n@@ -111,3 +92,0 @@\n-    if (isRunningG1(flags)) {\n-      finalargs.add(\"-XX:G1HeapRegionSize=1M\");\n-    }\n@@ -117,1 +95,1 @@\n-    ProcessBuilder pb = GCArguments.createJavaProcessBuilder(finalargs);\n+    ProcessBuilder pb = GCArguments.createTestJvm(finalargs);\n@@ -121,1 +99,0 @@\n-    \/\/System.out.println(stdout);\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestMaxNewSize.java","additions":7,"deletions":30,"binary":false,"changes":37,"status":"modified"}]}