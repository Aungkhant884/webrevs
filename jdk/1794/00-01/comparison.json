{"files":[{"patch":"@@ -109,3 +109,8 @@\n-  HeapWord* res = _space->par_allocate(size);\n-\n-  while (res == NULL) {\n+  HeapWord* res = NULL;\n+  while (true) {\n+    \/\/ Try to allocate, assume space is available\n+    res = _space->par_allocate(size);\n+    if (res != NULL) {\n+      break;\n+    }\n+    \n@@ -116,3 +121,1 @@\n-      \/\/ two reason:\n-      \/\/   1. reduce the chance of expand fail when another thread expand success and with enough space\n-      \/\/   2. prevent overallocation\n+      \/\/ Try to allocate under the lock, assume another thread was able to expand\n@@ -124,0 +127,1 @@\n+      \/\/ Expand and loop back if space is available\n@@ -143,1 +147,0 @@\n-    res = _space->par_allocate(size);\n","filename":"src\/hotspot\/share\/gc\/epsilon\/epsilonHeap.cpp","additions":10,"deletions":7,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -67,1 +67,1 @@\n-          \"Use timed decays to shrink TLAB sizes. This conserves memory \"   \\\n+          \"Use timed decays to shrik TLAB sizes. This conserves memory \"    \\\n","filename":"src\/hotspot\/share\/gc\/epsilon\/epsilon_globals.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}