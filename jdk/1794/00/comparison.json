{"files":[{"patch":"@@ -113,17 +113,29 @@\n-    MutexLocker ml(Heap_lock);\n-\n-    size_t space_left = max_capacity() - capacity();\n-    size_t want_space = MAX2(size, EpsilonMinHeapExpand);\n-\n-    if (want_space < space_left) {\n-      \/\/ Enough space to expand in bulk:\n-      bool expand = _virtual_space.expand_by(want_space);\n-      assert(expand, \"Should be able to expand\");\n-    } else if (size < space_left) {\n-      \/\/ No space to expand in bulk, and this allocation is still possible,\n-      \/\/ take all the remaining space:\n-      bool expand = _virtual_space.expand_by(space_left);\n-      assert(expand, \"Should be able to expand\");\n-    } else {\n-      \/\/ No space left:\n-      return NULL;\n+    {\n+      MutexLocker ml(Heap_lock);\n+\n+      \/\/ two reason:\n+      \/\/   1. reduce the chance of expand fail when another thread expand success and with enough space\n+      \/\/   2. prevent overallocation\n+      res = _space->par_allocate(size);\n+      if (res != NULL) {\n+        break;\n+      }\n+\n+      size_t space_left = max_capacity() - capacity();\n+      size_t want_space = MAX2(size, EpsilonMinHeapExpand);\n+\n+      if (want_space < space_left) {\n+        \/\/ Enough space to expand in bulk:\n+        bool expand = _virtual_space.expand_by(want_space);\n+        assert(expand, \"Should be able to expand\");\n+      } else if (size < space_left) {\n+        \/\/ No space to expand in bulk, and this allocation is still possible,\n+        \/\/ take all the remaining space:\n+        bool expand = _virtual_space.expand_by(space_left);\n+        assert(expand, \"Should be able to expand\");\n+      } else {\n+        \/\/ No space left:\n+        return NULL;\n+      }\n+\n+      _space->set_end((HeapWord *) _virtual_space.high());\n@@ -131,2 +143,0 @@\n-\n-    _space->set_end((HeapWord *) _virtual_space.high());\n","filename":"src\/hotspot\/share\/gc\/epsilon\/epsilonHeap.cpp","additions":29,"deletions":19,"binary":false,"changes":48,"status":"modified"},{"patch":"@@ -67,1 +67,1 @@\n-          \"Use timed decays to shrik TLAB sizes. This conserves memory \"    \\\n+          \"Use timed decays to shrink TLAB sizes. This conserves memory \"   \\\n","filename":"src\/hotspot\/share\/gc\/epsilon\/epsilon_globals.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}