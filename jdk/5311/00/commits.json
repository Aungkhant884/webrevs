[{"commit":{"message":"8272968: AArch64: Remove redundant matching rules for commutative ops\n\nMatch rules for commutative operations mnegI\/mnegL\/smnegL might\nbecome redundant after function matchrule_clone_and_swap(),\nand hence can be reduced.\n\nIn adlc part, while parsing the contents of an instruction\ndefinition, function instr_parse always do the check\nfor commutative operations with subtree operands, create\nclones and swap operands by function matchrule_clone_and_swap.\nIt means that another operand-swapped and partially\nsymmetrical match rule should be generated automatically for\nthese commutative operations.\n\nThe pattern to construct mnegI, mnegL or smnegL consists of\na subtraction with zero and then a multiplication. In function\ncount_commutative_op, both mulI and mulL are recognized as\ncommutative opcodes. Therefore, we need only one match rule\nto specify that a multipilication consists of a number and\na subtraction with zero for these three instructions and the\nextra one can be deleted.\n\nTake mnegL as an example.\n\nWithout my patch, four match rules will be created finally for\ninstruction selection.\n\nTwo of them are created by ad files:\n\nMatch Rule 1:\ndst = MulL (SubL zero src1) src2\n===>\ndst = mnegl src1 src2\n\nMatch Rule 2:\ndst = MulL src1 (SubL zero src2)\n===>\ndst = mnegl src1 src2\n\nThe other two are automatically generated by function\nmatchrule_clone_and_swap based on the two rules above:\n\nMatch Rule 3 (generated by match rule 1):\ndst = MulL src2 (SubL zero src1)\n===>\ndst = mnegl src1 src2\n\nMatch Rule 4 (generated by match rule 2):\ndst = MulL (SubL zero src2) src1\n===>\ndst = mnegl src1 src2\n\nAs mnegl is commutative, Rule 3 is equivalent to\nRule 2, and Rule 1 is equivalent to Rule 4. Also, if we only\nkeep the original Match Rule 1, as showed above, Rule 3 will\nbe generated automatically later. In this way, Rule 2 and Rule 4\nare redundant and hence Rule 2 can be eliminated.\n\nWith my patch, Rule 2 is removed and Rule 4 won't be generated as well.\nOnly Rule 1 and 3 are kept in the final rule chain. In my local release\nbuild, as redundant code got removed, the size of libjvm.so decreased\nfrom 23.30 MB to 23.27 MB, with a reduction of 33.11 KB(around 0.14%)."},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/aarch64.ad"}],"sha":"f87c7ddc651190c0cba4b29b186648b146f76001"}]