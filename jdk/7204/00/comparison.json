{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -2827,3 +2827,0 @@\n-  if (orig_mem == NULL) {\n-    return orig_mem;\n-  }\n@@ -2837,0 +2834,3 @@\n+  \/\/ Remember all mergemem nodes encountered and update them in the end\n+  Node_List mmem_nodes(Thread::current()->resource_area(), 4);\n+\n@@ -2899,0 +2899,7 @@\n+        \/\/\n+        \/\/result = find_inst_mem(mmem->memory_at(C->get_general_index(alias_idx)), alias_idx, orig_phis);\n+        \/\/mmem->set_memory_at(alias_idx, result);\n+        \/\/\n+        \/\/ We remove the self-recursion here by resetting the current frame.\n+        mmem_nodes.push(mmem);\n+        prev = NULL;\n@@ -2900,5 +2907,1 @@\n-        result = find_inst_mem(result, alias_idx, orig_phis);\n-        if (C->failing()) {\n-          return NULL;\n-        }\n-        mmem->set_memory_at(alias_idx, result);\n+        continue;\n@@ -2958,1 +2961,2 @@\n-  if (result->is_Phi()) {\n+\n+  if (result != NULL && result->is_Phi()) {\n@@ -2971,1 +2975,9 @@\n-  \/\/ the result is either MemNode, PhiNode, InitializeNode.\n+\n+  if (C->failing()) {\n+    return NULL;\n+  }\n+\n+  for (uint i = 0; i < mmem_nodes.size(); ++i) {\n+    mmem_nodes[i]->as_MergeMem()->set_memory_at(alias_idx, result);\n+  }\n+  \/\/ the result is either NULL, MemNode, PhiNode, InitializeNode.\n","filename":"src\/hotspot\/share\/opto\/escape.cpp","additions":23,"deletions":11,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -4978,1 +4978,0 @@\n-  Compile *C = Compile::current();\n@@ -4993,1 +4992,1 @@\n-    #ifdef ASSERT\n+#ifdef ASSERT\n@@ -5001,1 +5000,1 @@\n-    #endif\n+#endif\n","filename":"src\/hotspot\/share\/opto\/memnode.cpp","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"}]}