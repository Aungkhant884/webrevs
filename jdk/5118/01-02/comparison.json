{"files":[{"patch":"@@ -1690,8 +1690,15 @@\n-  \/\/ Re-dirty and re-enqueue the card for later processing.  We can't use\n-  \/\/ the thread-local queue, because that might be the queue that is being\n-  \/\/ processed by us; we could be a Java thread conscripted to perform\n-  \/\/ refinement on our queue's current buffer.  This situation only arises\n-  \/\/ from an extremely rare race condition in the memregion iteration, so\n-  \/\/ it's not worth any significant development effort or clever lock-free\n-  \/\/ queue implementation.  Instead we use brute force, allocating and\n-  \/\/ enqueuing an entire buffer for just this card.\n+  enqueue_for_reprocessing(card_ptr);\n+}\n+\n+\/\/ Re-dirty and re-enqueue the card to retry refinement later.\n+\/\/ This is used to deal with a rare race condition in concurrent refinement.\n+void G1RemSet::enqueue_for_reprocessing(CardValue* card_ptr) {\n+  \/\/ We can't use the thread-local queue, because that might be the queue\n+  \/\/ that is being processed by us; we could be a Java thread conscripted to\n+  \/\/ perform refinement on our queue's current buffer.  This situation only\n+  \/\/ arises from rare race condition, so it's not worth any significant\n+  \/\/ development effort or clever lock-free queue implementation.  Instead\n+  \/\/ we use brute force, allocating and enqueuing an entire buffer for just\n+  \/\/ this card.  Since buffers are processed in FIFO order and we try to\n+  \/\/ keep some in the queue, it is likely that the racing state will have\n+  \/\/ resolved by the time this card comes up for reprocessing.\n","filename":"src\/hotspot\/share\/gc\/g1\/g1RemSet.cpp","additions":15,"deletions":8,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -60,0 +60,3 @@\n+public:\n+  typedef CardTable::CardValue CardValue;\n+\n@@ -75,1 +78,0 @@\n-public:\n@@ -77,1 +79,1 @@\n-  typedef CardTable::CardValue CardValue;\n+  void enqueue_for_reprocessing(CardValue* card_ptr);\n@@ -79,0 +81,1 @@\n+public:\n","filename":"src\/hotspot\/share\/gc\/g1\/g1RemSet.hpp","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"}]}