{"files":[{"patch":"@@ -40,0 +40,1 @@\n+            System.out.println(\"Metrics.getPidsMax() == \" + metrics.getPidsMax());\n","filename":"test\/hotspot\/jtreg\/containers\/docker\/CheckOperatingSystemMXBean.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -108,1 +108,2 @@\n-            \"memory_max_usage_in_bytes\"\n+            \"memory_max_usage_in_bytes\",\n+            \"maximum number of tasks\"\n","filename":"test\/hotspot\/jtreg\/containers\/docker\/TestMisc.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -0,0 +1,114 @@\n+\/*\n+ * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\n+\/*\n+ * @test\n+ * @key cgroups\n+ * @summary Test JVM's awareness of pids controller\n+ * @requires docker.support\n+ * @library \/test\/lib\n+ * @modules java.base\/jdk.internal.misc\n+ *          java.management\n+ * @build sun.hotspot.WhiteBox PrintContainerInfo\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller -jar whitebox.jar sun.hotspot.WhiteBox\n+ * @run driver TestPids\n+ *\/\n+import java.util.List;\n+import jdk.test.lib.containers.docker.Common;\n+import jdk.test.lib.containers.docker.DockerRunOptions;\n+import jdk.test.lib.containers.docker.DockerTestUtils;\n+import jdk.test.lib.Asserts;\n+import jdk.test.lib.Platform;\n+import jdk.test.lib.Utils;\n+\n+public class TestPids {\n+    private static final String imageName = Common.imageName(\"pids\");\n+\n+    public static void main(String[] args) throws Exception {\n+        if (!DockerTestUtils.canTestDocker()) {\n+            return;\n+        }\n+\n+        Common.prepareWhiteBox();\n+        DockerTestUtils.buildJdkDockerImage(imageName, \"Dockerfile-BasicTest\", \"jdk-docker\");\n+\n+        try {\n+            testPids();\n+        } finally {\n+            if (!DockerTestUtils.RETAIN_IMAGE_AFTER_TEST) {\n+                DockerTestUtils.removeDockerImage(imageName);\n+            }\n+        }\n+    }\n+\n+    private static void testPids() throws Exception {\n+        System.out.println(\"Testing pids controller ...\");\n+        testPids(\"400\");\n+        testPids(\"800\");\n+        testPids(\"2000\");\n+    }\n+\n+    private static DockerRunOptions commonOpts() {\n+        DockerRunOptions opts = new DockerRunOptions(imageName, \"\/jdk\/bin\/java\", \"PrintContainerInfo\");\n+        opts.addDockerOpts(\"--volume\", Utils.TEST_CLASSES + \":\/test-classes\/\");\n+        opts.addJavaOpts(\"-Xlog:os+container=trace\", \"-cp\", \"\/test-classes\/\");\n+        Common.addWhiteBoxOpts(opts);\n+        return opts;\n+    }\n+\n+    private static void checkResult(List<String> lines, String lineMarker, String value) {\n+        boolean lineMarkerFound = false;\n+\n+        for (String line : lines) {\n+            if (line.contains(\"WARNING: Your kernel does not support pids limit capabilities\")) {\n+                System.out.println(\"Docker pids limitation seems not to work, avoiding check\");\n+                return;\n+            }\n+\n+            if (line.contains(lineMarker)) {\n+                lineMarkerFound = true;\n+                String[] parts = line.split(\":\");\n+                System.out.println(\"DEBUG: line = \" + line);\n+                System.out.println(\"DEBUG: parts.length = \" + parts.length);\n+\n+                Asserts.assertEquals(parts.length, 2);\n+                String actual = parts[1].replaceAll(\"\\\\s\",\"\");\n+                Asserts.assertEquals(actual, value);\n+                break;\n+            }\n+        }\n+        Asserts.assertTrue(lineMarkerFound);\n+    }\n+\n+    private static void testPids(String value) throws Exception {\n+        Common.logNewTestCase(\"pids controller test, limiting value = \" + value);\n+\n+        DockerRunOptions opts = commonOpts();\n+        opts.addDockerOpts(\"--pids-limit=\" + value);\n+\n+        List<String> lines = Common.run(opts).asLines();\n+        checkResult(lines, \"Maximum number of tasks is: \", value);\n+    }\n+\n+}\n","filename":"test\/hotspot\/jtreg\/containers\/docker\/TestPids.java","additions":114,"deletions":0,"binary":false,"changes":114,"status":"added"}]}