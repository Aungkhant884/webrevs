{"files":[{"patch":"@@ -2844,2 +2844,0 @@\n-  static bool operand_valid_for_add_sub_immediate(long imm);\n-\n","filename":"src\/hotspot\/cpu\/riscv\/assembler_riscv.hpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -49,2 +49,0 @@\n-inline bool Assembler::operand_valid_for_add_sub_immediate(int64_t imm) { return is_simm12(imm); }\n-\n","filename":"src\/hotspot\/cpu\/riscv\/assembler_riscv.inline.hpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1297,1 +1297,1 @@\n-      if (Assembler::operand_valid_for_add_sub_immediate(right_const)) {\n+      if (Assembler::is_simm12(right_const)) {\n@@ -1312,1 +1312,1 @@\n-      if (Assembler::operand_valid_for_add_sub_immediate(right_const)) {\n+      if (Assembler::is_simm12(right_const)) {\n","filename":"src\/hotspot\/cpu\/riscv\/c1_LIRAssembler_riscv.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -129,2 +129,1 @@\n-    return Assembler::operand_valid_for_add_sub_immediate(value) &&\n-           Assembler::operand_valid_for_add_sub_immediate(- value);\n+    return Assembler::is_simm12(value) && Assembler::is_simm12(- value);\n@@ -136,2 +135,1 @@\n-    return Assembler::operand_valid_for_add_sub_immediate(value) &&\n-           Assembler::operand_valid_for_add_sub_immediate(- value);\n+    return Assembler::is_simm12(value) && Assembler::is_simm12(- value);\n@@ -155,2 +153,1 @@\n-    return Assembler::operand_valid_for_add_sub_immediate(constant) &&\n-           Assembler::operand_valid_for_add_sub_immediate(- constant);\n+    return Assembler::is_simm12(constant) && Assembler::is_simm12(- constant);\n@@ -414,1 +411,1 @@\n-          !Assembler::operand_valid_for_add_sub_immediate(right.get_jlong_constant())) ||\n+          !Assembler::is_simm12(right.get_jlong_constant())) ||\n@@ -416,1 +413,1 @@\n-          !Assembler::operand_valid_for_add_sub_immediate(-right.get_jlong_constant()))) {\n+          !Assembler::is_simm12(-right.get_jlong_constant()))) {\n@@ -477,2 +474,2 @@\n-        ((x->op() == Bytecodes::_iadd && !Assembler::operand_valid_for_add_sub_immediate(right.get_jint_constant())) ||\n-         (x->op() == Bytecodes::_isub && !Assembler::operand_valid_for_add_sub_immediate(-right.get_jint_constant())))) {\n+        ((x->op() == Bytecodes::_iadd && !Assembler::is_simm12(right.get_jint_constant())) ||\n+         (x->op() == Bytecodes::_isub && !Assembler::is_simm12(-right.get_jint_constant())))) {\n@@ -549,2 +546,2 @@\n-     ((tag == longTag && Assembler::operand_valid_for_add_sub_immediate(right.get_jlong_constant())) ||\n-      (tag == intTag && Assembler::operand_valid_for_add_sub_immediate(right.get_jint_constant()))))  {\n+     ((tag == longTag && Assembler::is_simm12(right.get_jlong_constant())) ||\n+      (tag == intTag && Assembler::is_simm12(right.get_jint_constant()))))  {\n","filename":"src\/hotspot\/cpu\/riscv\/c1_LIRGenerator_riscv.cpp","additions":9,"deletions":12,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -2890,1 +2890,1 @@\n-  predicate(Assembler::operand_valid_for_add_sub_immediate((int64_t)n->get_int()));\n+  predicate(Assembler::is_simm12((int64_t)n->get_int()));\n@@ -2900,1 +2900,1 @@\n-  predicate(Assembler::operand_valid_for_add_sub_immediate(-(int64_t)n->get_int()));\n+  predicate(Assembler::is_simm12(-(int64_t)n->get_int()));\n@@ -3055,1 +3055,1 @@\n-  predicate(Assembler::operand_valid_for_add_sub_immediate(n->get_long()));\n+  predicate(Assembler::is_simm12(n->get_long()));\n@@ -3065,1 +3065,1 @@\n-  predicate(Assembler::operand_valid_for_add_sub_immediate(-(n->get_long())));\n+  predicate(Assembler::is_simm12(-(n->get_long())));\n","filename":"src\/hotspot\/cpu\/riscv\/riscv.ad","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}