[{"commit":{"message":"8282528: AArch64: Incorrect replicate2L_zero rule\n\nThis patch fixes the wrong matching rule of replicate2L_zero. It was\nmatched \"ReplicateI\" by mistake so that long immediates(not only zero)\nhad to be moved to register first and matched to replicate2L finally. To\nfix this trivial bug, this patch fixes the typo and extends the rule of\nreplicate2L_zero to replicate2L_imm, which now supports all possible\nlong immediate values.\n\nThe final code changes are shown as below:\n\nreplicate2L_imm:\n\n        mov   x13, #0xff\n        movk  x13, #0xff, lsl #16\n        movk  x13, #0xff, lsl #32\n        dup   v16.2d, x13\n\n        =>\n\n        movi  v16.2d, #0xff00ff00ff\n\n[Test]\ntest\/jdk\/jdk\/incubator\/vector, test\/hotspot\/jtreg\/compiler\/vectorapi\npassed without failure.\n\nChange-Id: Ieac92820dea560239a968de3d7430003f01726bd"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/aarch64_neon.ad"},{"filename":"src\/hotspot\/cpu\/aarch64\/aarch64_neon_ad.m4"},{"filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.hpp"},{"filename":"test\/hotspot\/jtreg\/compiler\/vectorapi\/VectorReplicateLongSpecialImmTest.java"}],"sha":"a52019907cf0ed3b6bc2ebff86a8b08cc8bb4a96"}]