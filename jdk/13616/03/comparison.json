{"files":[{"patch":"@@ -119,0 +119,2 @@\n+\n+static bool _rehashed = false;\n@@ -532,0 +534,28 @@\n+bool StringTable::should_grow() {\n+  return get_load_factor() > PREF_AVG_LIST_LEN && !_local_table->is_max_size_reached();\n+}\n+\n+bool StringTable::rehash_table_expects_safepoint_rehashing() {\n+  \/\/ No rehashing required\n+  if (!needs_rehashing()) {\n+    return false;\n+  }\n+\n+  \/\/ Grow instead of rehash\n+  if (should_grow()) {\n+    return false;\n+  }\n+\n+  \/\/ Already rehashed\n+  if (_rehashed) {\n+    return false;\n+  }\n+\n+  \/\/ Resizing in progress\n+  if (!_local_table->is_safepoint_safe()) {\n+    return false;\n+  }\n+\n+  return true;\n+}\n+\n@@ -533,1 +563,0 @@\n-  static bool rehashed = false;\n@@ -537,2 +566,1 @@\n-  if (get_load_factor() > PREF_AVG_LIST_LEN &&\n-      !_local_table->is_max_size_reached()) {\n+  if (should_grow()) {\n@@ -545,1 +573,1 @@\n-  if (rehashed) {\n+  if (_rehashed) {\n@@ -555,1 +583,1 @@\n-      rehashed = true;\n+      _rehashed = true;\n","filename":"src\/hotspot\/share\/classfile\/stringTable.cpp","additions":33,"deletions":5,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -99,0 +99,5 @@\n+private:\n+  static bool should_grow();\n+\n+public:\n+  static bool rehash_table_expects_safepoint_rehashing();\n","filename":"src\/hotspot\/share\/classfile\/stringTable.hpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -106,0 +106,1 @@\n+static bool _rehashed = false;\n@@ -808,0 +809,28 @@\n+bool SymbolTable::should_grow() {\n+  return get_load_factor() > PREF_AVG_LIST_LEN && !_local_table->is_max_size_reached();\n+}\n+\n+bool SymbolTable::rehash_table_expects_safepoint_rehashing() {\n+  \/\/ No rehashing required\n+  if (!needs_rehashing()) {\n+    return false;\n+  }\n+\n+  \/\/ Grow instead of rehash\n+  if (should_grow()) {\n+    return false;\n+  }\n+\n+  \/\/ Already rehashed\n+  if (_rehashed) {\n+    return false;\n+  }\n+\n+  \/\/ Resizing in progress\n+  if (!_local_table->is_safepoint_safe()) {\n+    return false;\n+  }\n+\n+  return true;\n+}\n+\n@@ -809,1 +838,0 @@\n-  static bool rehashed = false;\n@@ -813,2 +841,1 @@\n-  if (get_load_factor() > PREF_AVG_LIST_LEN &&\n-      !_local_table->is_max_size_reached()) {\n+  if (should_grow()) {\n@@ -822,1 +849,1 @@\n-  if (rehashed) {\n+  if (_rehashed) {\n@@ -832,1 +859,1 @@\n-    rehashed = true;\n+    _rehashed = true;\n","filename":"src\/hotspot\/share\/classfile\/symbolTable.cpp","additions":32,"deletions":5,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -147,0 +147,5 @@\n+private:\n+  static bool should_grow();\n+\n+public:\n+  static bool rehash_table_expects_safepoint_rehashing();\n","filename":"src\/hotspot\/share\/classfile\/symbolTable.hpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -164,0 +164,14 @@\n+bool InlineCacheBuffer::needs_update_inline_caches() {\n+  \/\/ Stub removal\n+  if (buffer()->number_of_stubs() > 0) {\n+    return true;\n+  }\n+\n+  \/\/ Release pending CompiledICHolder\n+  if (pending_icholder_count() > 0) {\n+    return true;\n+  }\n+\n+  return false;\n+}\n+\n","filename":"src\/hotspot\/share\/code\/icBuffer.cpp","additions":14,"deletions":0,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -170,0 +170,1 @@\n+  static bool needs_update_inline_caches();\n","filename":"src\/hotspot\/share\/code\/icBuffer.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -550,0 +550,22 @@\n+  uint expected_num_workers() const {\n+    uint workers = 0;\n+\n+    if (SymbolTable::rehash_table_expects_safepoint_rehashing()) {\n+      workers++;\n+    }\n+\n+    if (StringTable::rehash_table_expects_safepoint_rehashing()) {\n+      workers++;\n+    }\n+\n+    if (InlineCacheBuffer::needs_update_inline_caches()) {\n+      workers++;\n+    }\n+\n+    if (_do_lazy_roots) {\n+      workers++;\n+    }\n+\n+    return MAX2<uint>(1, workers);\n+  }\n+\n@@ -604,1 +626,2 @@\n-  if (cleanup_workers != nullptr) {\n+  const uint expected_num_workers = cleanup.expected_num_workers();\n+  if (cleanup_workers != nullptr && expected_num_workers > 1) {\n@@ -606,1 +629,2 @@\n-    cleanup_workers->run_task(&cleanup);\n+    const uint num_workers = MIN2(expected_num_workers, cleanup_workers->active_workers());\n+    cleanup_workers->run_task(&cleanup, num_workers);\n","filename":"src\/hotspot\/share\/runtime\/safepoint.cpp","additions":26,"deletions":2,"binary":false,"changes":28,"status":"modified"}]}