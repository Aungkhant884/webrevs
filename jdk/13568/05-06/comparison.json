{"files":[{"patch":"@@ -50,1 +50,1 @@\n- * @since 1.7 * 14 ^ 21\n+ * @since 1.7 * 14 ^ 22\n@@ -124,1 +124,1 @@\n-            (int) Math.min(Runtime.getRuntime().maxMemory() >>> 4L, Integer.MAX_VALUE);\n+            (int) Math.min(Runtime.getRuntime().maxMemory() >>> 4, Integer.MAX_VALUE);\n@@ -210,1 +210,1 @@\n-            final boolean isRadixRandom = (size > MIN_RADIX_SORT_SIZE)\n+            boolean isLargeRandom = size > MIN_RADIX_SORT_SIZE\n@@ -252,2 +252,2 @@\n-            if (isRadixRandom\n-                    && (a[e1] < a[e2] && a[e2] < a[e3] && a[e3] < a[e4] && a[e4] < a[e5])\n+            if (isLargeRandom\n+                    && a[e2] < a[e3] && a[e3] < a[e4]\n@@ -1068,1 +1068,1 @@\n-            final boolean isRadixRandom = (size > MIN_RADIX_SORT_SIZE)\n+            boolean isLargeRandom = size > MIN_RADIX_SORT_SIZE\n@@ -1110,2 +1110,2 @@\n-            if (isRadixRandom\n-                    && (a[e1] < a[e2] && a[e2] < a[e3] && a[e3] < a[e4] && a[e4] < a[e5])\n+            if (isLargeRandom\n+                    && a[e2] < a[e3] && a[e3] < a[e4]\n@@ -2726,1 +2726,1 @@\n-            final boolean isRadixRandom = (size > MIN_RADIX_SORT_SIZE)\n+            boolean isLargeRandom = size > MIN_RADIX_SORT_SIZE\n@@ -2768,2 +2768,2 @@\n-            if (isRadixRandom\n-                    && (a[e1] < a[e2] && a[e2] < a[e3] && a[e3] < a[e4] && a[e4] < a[e5])\n+            if (isLargeRandom\n+                    && a[e2] < a[e3] && a[e3] < a[e4]\n@@ -3614,1 +3614,1 @@\n-            final boolean isRadixRandom = (size > MIN_RADIX_SORT_SIZE)\n+            boolean isLargeRandom = size > MIN_RADIX_SORT_SIZE\n@@ -3656,2 +3656,2 @@\n-            if (isRadixRandom\n-                    && (a[e1] < a[e2] && a[e2] < a[e3] && a[e3] < a[e4] && a[e4] < a[e5])\n+            if (isLargeRandom\n+                    && a[e2] < a[e3] && a[e3] < a[e4]\n@@ -4565,1 +4565,1 @@\n-    private static <T> T tryAllocate(final Class<T> clazz, final int length) {\n+    private static <T> T tryAllocate(Class<T> clazz, int length) {\n@@ -4567,3 +4567,3 @@\n-            final int maxLength = MAX_BUFFER_SIZE >>\n-                ((clazz == int[].class || clazz == float[].class) ? 2 : 3);\n-            return (length > maxLength) ? null :\n+            int maxLength = MAX_BUFFER_SIZE >>\n+                (clazz == int[].class || clazz == float[].class ? 2 : 3);\n+            return length > maxLength ? null :\n","filename":"src\/java.base\/share\/classes\/java\/util\/DualPivotQuicksort.java","additions":18,"deletions":18,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -50,1 +50,1 @@\n- * @since 20\n+ * @since 22\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/util\/ArraysSort.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}