[{"commit":{"message":"Merge branch 'openjdk:master' into dpqs23"},"files":[],"sha":"391bb3bdff95253c40e38c221cad15b292cad29d"},{"commit":{"message":"fixed javadoc and size renamed to length for clarity"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/util\/DualPivotQuicksort.java"}],"sha":"30b023a14d0e9c71d89ce53e0356044f20940b4b"},{"commit":{"message":"improved and more obvious max length test to always respect max heap memory footprint"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/util\/DualPivotQuicksort.java"}],"sha":"077710005ed11bcadfe3f244d296cadf681c840f"},{"commit":{"message":"Merge branch 'openjdk:master' into dpqs23"},"files":[],"sha":"1d4af82748b1656c257b1c8a8b9f595415713cd6"},{"commit":{"message":"rewritten radix sort condition + fixed max buffer size"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/util\/DualPivotQuicksort.java"}],"sha":"ff6b7fcf7b0a5f6f8c1c9583aeaa1891bb4639fd"},{"commit":{"message":"optimized radix sort heuristic"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/util\/DualPivotQuicksort.java"}],"sha":"32551f604c348d337ed0437e0861fd7bd1a99f90"},{"commit":{"message":"JDK-8266431: Dual-Pivot Quicksort improvements (Radix sort)\n    * Optimized mixed insertion sort\n    * Optimized insertion sort\n    * Optimized Radix sort\n    * Updated microbenchmark"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/util\/DualPivotQuicksort.java"}],"sha":"246ea8759f788253a624536898c5c0a4739ae9a4"}]