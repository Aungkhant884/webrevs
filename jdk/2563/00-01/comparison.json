{"files":[{"patch":"@@ -191,1 +191,1 @@\n-     uintptr_t base, end;\n+     uintptr_t base, memsz;\n@@ -197,1 +197,1 @@\n-     get_lib_addr_range(ph, i, &base, &end);\n+     get_lib_addr_range(ph, i, &base, &memsz);\n@@ -202,1 +202,1 @@\n-     loadObject = env->CallObjectMethod(this_obj, createLoadObject_ID, str, (jlong)(end - base), (jlong)base);\n+     loadObject = env->CallObjectMethod(this_obj, createLoadObject_ID, str, (jlong)memsz, (jlong)base);\n","filename":"src\/jdk.hotspot.agent\/linux\/native\/libsaproc\/LinuxDebuggerLocal.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -101,1 +101,1 @@\n-void get_lib_addr_range(struct ps_prochandle* ph, int index, uintptr_t* base, uintptr_t* end);\n+void get_lib_addr_range(struct ps_prochandle* ph, int index, uintptr_t* base, uintptr_t* memsz);\n","filename":"src\/jdk.hotspot.agent\/linux\/native\/libsaproc\/libproc.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -442,1 +442,1 @@\n-void get_lib_addr_range(struct ps_prochandle* ph, int index, uintptr_t* base, uintptr_t* end) {\n+void get_lib_addr_range(struct ps_prochandle* ph, int index, uintptr_t* base, uintptr_t* memsz) {\n@@ -448,1 +448,1 @@\n-         *end = lib->end;\n+         *memsz = lib->end - lib->base;\n","filename":"src\/jdk.hotspot.agent\/linux\/native\/libsaproc\/libproc_impl.c","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -972,1 +972,1 @@\n-     uintptr_t base;\n+     uintptr_t base, memsz;\n@@ -979,0 +979,1 @@\n+     get_lib_addr_range(ph, i, &base, &memsz);\n@@ -983,1 +984,1 @@\n-                                            nameString, (jlong)0, (jlong)base);\n+                                            nameString, (jlong)memsz, (jlong)base);\n","filename":"src\/jdk.hotspot.agent\/macosx\/native\/libsaproc\/MacosxDebuggerLocal.m","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -135,0 +135,3 @@\n+\/\/ get address range of lib\n+void get_lib_addr_range(struct ps_prochandle* ph, int index, uintptr_t* base, uintptr_t* memsz);\n+\n","filename":"src\/jdk.hotspot.agent\/macosx\/native\/libsaproc\/libproc.h","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -489,0 +489,15 @@\n+\/\/ get address range of lib\n+void get_lib_addr_range(struct ps_prochandle* ph, int index, uintptr_t* base, uintptr_t* memsz) {\n+  int count = 0;\n+  lib_info* lib = ph->libs;\n+  while (lib) {\n+    if (count == index) {\n+      *base = lib->base;\n+      *memsz = lib->memsz;\n+      return;\n+    }\n+    count++;\n+    lib = lib->next;\n+  }\n+}\n+\n","filename":"src\/jdk.hotspot.agent\/macosx\/native\/libsaproc\/libproc_impl.c","additions":16,"deletions":1,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,0 @@\n-import java.io.File;\n@@ -88,1 +87,1 @@\n-    private LoadObject createLoadObject(String fileName, long textsize,\n+    private LoadObject createLoadObject(String fileName, long size,\n@@ -90,1 +89,0 @@\n-       File f = new File(fileName);\n@@ -92,1 +90,1 @@\n-       return new SharedObject(this, fileName, f.length(), baseAddr);\n+       return new SharedObject(this, fileName, size, baseAddr);\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/debugger\/bsd\/BsdDebuggerLocal.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"}]}