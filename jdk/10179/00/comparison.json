{"files":[{"patch":"@@ -691,1 +691,1 @@\n-  VMError::print_native_stack(tty, fr, t, buf, sizeof(buf));\n+  VMError::print_native_stack(tty, fr, t, false, buf, sizeof(buf));\n@@ -711,1 +711,1 @@\n-    VMError::print_native_stack(tty, fr, t, buf, sizeof(buf));\n+    VMError::print_native_stack(tty, fr, t, false, buf, sizeof(buf));\n","filename":"src\/hotspot\/share\/utilities\/debug.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -350,1 +350,1 @@\n-void VMError::print_native_stack(outputStream* st, frame fr, Thread* t, char* buf, int buf_size) {\n+void VMError::print_native_stack(outputStream* st, frame fr, Thread* t, bool print_source_info, char* buf, int buf_size) {\n@@ -365,1 +365,2 @@\n-        } else if (Decoder::get_source_info(fr.pc(), filename, sizeof(filename), &line_no, count != 1)) {\n+        } else if (print_source_info &&\n+                   Decoder::get_source_info(fr.pc(), filename, sizeof(filename), &line_no, count != 1)) {\n@@ -538,0 +539,2 @@\n+  static bool print_native_stack_succeeded = false;\n+\n@@ -835,1 +838,1 @@\n-  STEP(\"printing native stack\")\n+  STEP(\"printing native stack (with source info)\")\n@@ -845,1 +848,1 @@\n-       print_native_stack(st, fr, _thread, buf, sizeof(buf));\n+       print_native_stack(st, fr, _thread, true, buf, sizeof(buf));\n@@ -848,0 +851,11 @@\n+     print_native_stack_succeeded = true;\n+   }\n+\n+  STEP(\"retry printing native stack (no source info)\")\n+\n+   if (_verbose && !print_native_stack_succeeded) {\n+     st->cr();\n+     st->print_cr(\"Retrying call stack printing without source information...\");\n+     frame fr = _context ? os::fetch_frame_from_context(_context) : os::current_frame();\n+     print_native_stack(st, fr, _thread, false, buf, sizeof(buf));\n+     _print_native_stack_used = true;\n","filename":"src\/hotspot\/share\/utilities\/vmError.cpp","additions":18,"deletions":4,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -108,1 +108,1 @@\n-  static void print_native_stack(outputStream* st, frame fr, Thread* t,\n+  static void print_native_stack(outputStream* st, frame fr, Thread* t, bool print_source_info,\n","filename":"src\/hotspot\/share\/utilities\/vmError.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}