{"files":[{"patch":"@@ -942,8 +942,5 @@\n-        switch (category) {\n-        case DISPLAY:\n-            if (defaultDisplayLocale == null) {\n-                synchronized(Locale.class) {\n-                    if (defaultDisplayLocale == null) {\n-                        defaultDisplayLocale = initDefault(category);\n-                    }\n-                }\n+        Objects.requireNonNull(category);\n+        if (category == Category.DISPLAY) {\n+            Locale loc = defaultDisplayLocale; \/\/ volatile read\n+            if (loc == null) {\n+                loc = getDisplayLocale();\n@@ -951,8 +948,6 @@\n-            return defaultDisplayLocale;\n-        case FORMAT:\n-            if (defaultFormatLocale == null) {\n-                synchronized(Locale.class) {\n-                    if (defaultFormatLocale == null) {\n-                        defaultFormatLocale = initDefault(category);\n-                    }\n-                }\n+            return loc;\n+        } else {\n+            assert category == Category.FORMAT : \"Unknown category\";\n+            Locale loc = defaultFormatLocale; \/\/ volatile read\n+            if (loc == null) {\n+                loc = getFormatLocale();\n@@ -960,3 +955,17 @@\n-            return defaultFormatLocale;\n-        default:\n-            assert false: \"Unknown Category\";\n+            return loc;\n+        }\n+    }\n+\n+    private static Locale getDisplayLocale() {\n+        Locale loc = defaultDisplayLocale;\n+        if (loc == null) {\n+            loc = defaultDisplayLocale = initDefault(Category.DISPLAY);\n+        }\n+        return loc;\n+    }\n+\n+\n+    private static synchronized Locale getFormatLocale() {\n+        Locale loc = defaultFormatLocale;\n+        if (loc == null) {\n+            loc = defaultFormatLocale = initDefault(Category.FORMAT);\n@@ -964,1 +973,1 @@\n-        return getDefault();\n+        return loc;\n","filename":"src\/java.base\/share\/classes\/java\/util\/Locale.java","additions":29,"deletions":20,"binary":false,"changes":49,"status":"modified"},{"patch":"@@ -0,0 +1,58 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package org.openjdk.bench.java.util;\n+\n+import org.openjdk.jmh.annotations.Benchmark;\n+import org.openjdk.jmh.annotations.BenchmarkMode;\n+import org.openjdk.jmh.annotations.Mode;\n+import org.openjdk.jmh.annotations.OutputTimeUnit;\n+import org.openjdk.jmh.annotations.Scope;\n+import org.openjdk.jmh.annotations.State;\n+\n+import java.util.Locale;\n+import java.util.concurrent.TimeUnit;\n+\n+\/*\n+ * This benchmark tests Locale.getDefault variants\n+ *\/\n+@BenchmarkMode(Mode.AverageTime)\n+@OutputTimeUnit(TimeUnit.NANOSECONDS)\n+@State(Scope.Benchmark)\n+public class LocaleDefaults {\n+\n+    @Benchmark\n+    public Locale getDefault() {\n+        return Locale.getDefault();\n+    }\n+\n+    @Benchmark\n+    public Locale getDefaultDisplay() {\n+        return Locale.getDefault(Locale.Category.DISPLAY);\n+    }\n+\n+    @Benchmark\n+    public Locale getDefaultFormat() {\n+        return Locale.getDefault(Locale.Category.FORMAT);\n+    }\n+}\n+\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/util\/LocaleDefaults.java","additions":58,"deletions":0,"binary":false,"changes":58,"status":"added"}]}