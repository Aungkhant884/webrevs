{"files":[{"patch":"@@ -83,36 +83,0 @@\n-    protected short getConstantPoolIndex(int rawcode, int bci) {\n-       \/\/ get ConstantPool index from ConstantPoolCacheIndex at given bci\n-       String fmt = Bytecodes.format(rawcode);\n-       int cpCacheIndex;\n-       switch (fmt.length()) {\n-       case 2: cpCacheIndex = method.getBytecodeByteArg(bci); break;\n-       case 3: cpCacheIndex = method.getBytecodeShortArg(bci); break;\n-       case 5:\n-           if (fmt.contains(\"__\"))\n-               cpCacheIndex = method.getBytecodeShortArg(bci);\n-           else\n-               cpCacheIndex = method.getBytecodeIntArg(bci);\n-           break;\n-       default: throw new IllegalArgumentException();\n-       }\n-\n-       if (cpCache == null) {\n-          return (short) cpCacheIndex;\n-       } else if (fmt.contains(\"JJJJ\")) {\n-          \/\/ Invokedynamic require special handling\n-          cpCacheIndex = ~cpCacheIndex;\n-          cpCacheIndex = bytes.swapInt(cpCacheIndex);\n-          short cpIndex = (short) cpCache.getIndyEntryAt(cpCacheIndex).getConstantPoolIndex();\n-          Assert.that(cpool.getTagAt(cpIndex).isInvokeDynamic(), \"CP Entry should be InvokeDynamic\");\n-          return cpIndex;\n-       } else if (fmt.contains(\"JJ\")) {\n-          \/\/ change byte-ordering and go via cache\n-          return (short) cpCache.getEntryAt((int) (0xFFFF & bytes.swapShort((short)cpCacheIndex))).getConstantPoolIndex();\n-       } else if (fmt.contains(\"j\")) {\n-          \/\/ go via cache\n-          return (short) cpCache.getEntryAt((int) (0xFF & cpCacheIndex)).getConstantPoolIndex();\n-       } else {\n-          return (short) cpCacheIndex;\n-       }\n-    }\n-\n@@ -155,1 +119,6 @@\n-                case Bytecodes._putfield:\n+                case Bytecodes._putfield: {\n+                    int fieldIndex = method.getNativeShortArg(bci + 1);\n+                    cpoolIndex = (short) cpCache.getFieldEntryAt(fieldIndex).getConstantPoolIndex();\n+                    writeShort(code, bci + 1, cpoolIndex);\n+                    break;\n+                }\n@@ -160,1 +129,2 @@\n-                    cpoolIndex = getConstantPoolIndex(hotspotcode, bci + 1);\n+                    int cpci = method.getNativeShortArg(bci + 1);\n+                    cpoolIndex = (short) cpCache.getEntryAt(cpci).getConstantPoolIndex();\n@@ -165,2 +135,3 @@\n-                case Bytecodes._invokedynamic:\n-                    cpoolIndex = getConstantPoolIndex(hotspotcode, bci + 1);\n+                case Bytecodes._invokedynamic: {\n+                    int cpci = method.getNativeIntArg(bci + 1);\n+                    cpoolIndex = (short) cpCache.getIndyEntryAt(~cpci).getConstantPoolIndex();\n@@ -170,1 +141,1 @@\n-\n+                }\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/tools\/jcore\/ByteCodeRewriter.java","additions":12,"deletions":41,"binary":false,"changes":53,"status":"modified"},{"patch":"@@ -133,1 +133,0 @@\n-serviceability\/sa\/ClhsdbDumpclass.java 8316342 generic-all\n","filename":"test\/hotspot\/jtreg\/ProblemList.txt","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"}]}