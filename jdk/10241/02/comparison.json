{"files":[{"patch":"@@ -1130,1 +1130,0 @@\n-                                   int& exception_offset,\n@@ -1134,1 +1133,0 @@\n-                                   int& interpreted_entry_offset,\n@@ -1267,5 +1265,4 @@\n-    int vep_offset = 0;\n-    int exception_offset = 0;\n-    int frame_complete = 0;\n-    int stack_slots = 0;\n-    OopMapSet* oop_maps =  new OopMapSet();\n+    int exception_offset = -1;\n+    OopMapSet* oop_maps = new OopMapSet();\n+    int frame_complete = -1;\n+    int stack_slots = -1;\n@@ -1273,0 +1270,1 @@\n+    int vep_offset = -1;\n@@ -1289,1 +1287,0 @@\n-                             exception_offset,\n@@ -1293,1 +1290,0 @@\n-                             interpreted_entry_offset,\n@@ -1298,0 +1294,14 @@\n+\n+#ifdef ASSERT\n+    if (method->is_continuation_enter_intrinsic()) {\n+      assert(interpreted_entry_offset != -1, \"Must be set\");\n+      assert(exception_offset != -1,         \"Must be set\");\n+    } else {\n+      assert(interpreted_entry_offset == -1, \"Must be unset\");\n+      assert(exception_offset == -1,         \"Must be unset\");\n+    }\n+    assert(frame_complete != -1,    \"Must be set\");\n+    assert(stack_slots != -1,       \"Must be set\");\n+    assert(vep_offset != -1,        \"Must be set\");\n+#endif\n+\n","filename":"src\/hotspot\/cpu\/aarch64\/sharedRuntime_aarch64.cpp","additions":19,"deletions":9,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -1449,1 +1449,0 @@\n-                                   int& exception_offset,\n@@ -1453,1 +1452,0 @@\n-                                   int& interpreted_entry_offset,\n@@ -1587,4 +1585,1 @@\n-    int vep_offset = 0;\n-    int exception_offset = 0;\n-    int frame_complete = 0;\n-    int stack_slots = 0;\n+    int exception_offset = -1;\n@@ -1592,0 +1587,2 @@\n+    int frame_complete = -1;\n+    int stack_slots = -1;\n@@ -1593,0 +1590,1 @@\n+    int vep_offset = -1;\n@@ -1605,1 +1603,0 @@\n-                             exception_offset,\n@@ -1609,1 +1606,0 @@\n-                             interpreted_entry_offset,\n@@ -1614,0 +1610,14 @@\n+\n+#ifdef ASSERT\n+    if (method->is_continuation_enter_intrinsic()) {\n+      assert(interpreted_entry_offset != -1, \"Must be set\");\n+      assert(exception_offset != -1,         \"Must be set\");\n+    } else {\n+      assert(interpreted_entry_offset == -1, \"Must be unset\");\n+      assert(exception_offset == -1,         \"Must be unset\");\n+    }\n+    assert(frame_complete != -1,    \"Must be set\");\n+    assert(stack_slots != -1,       \"Must be set\");\n+    assert(vep_offset != -1,        \"Must be set\");\n+#endif\n+\n","filename":"src\/hotspot\/cpu\/x86\/sharedRuntime_x86_64.cpp","additions":18,"deletions":8,"binary":false,"changes":26,"status":"modified"}]}