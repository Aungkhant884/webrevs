{"files":[{"patch":"@@ -623,0 +623,3 @@\n+    \/\/\n+    \/\/ Example: for shift=3, the address space searched would be\n+    \/\/ [0x0080_0000_0000 - 0xFFF8_0000_0000].\n@@ -648,0 +651,1 @@\n+    assert(is_aligned(result, Metaspace::reserve_alignment()), \"Alignment too small for metaspace\");\n","filename":"src\/hotspot\/share\/memory\/metaspace.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -361,0 +361,3 @@\n+  assert(is_aligned(base, os::vm_allocation_granularity()), \"Unaligned base\");\n+  assert(is_aligned(size, os::vm_page_size()), \"Unaligned size\");\n+  assert(os::page_sizes().contains(page_size), \"Invalid pagesize\");\n","filename":"src\/hotspot\/share\/memory\/virtualspace.cpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1783,1 +1783,1 @@\n-    log_trace(os, map)(\"%s, %u Points: %s\", s, num, ss.base());\n+  log_trace(os, map)(\"%s, %u Points: %s\", s, num, ss.base());\n@@ -1928,1 +1928,8 @@\n-  DEBUG_ONLY(print_points(\"before reserve\", points, num_attempts);)\n+#ifdef ASSERT\n+  \/\/ Print + check all pre-calculated attach points\n+  print_points(\"before reserve\", points, num_attempts);\n+  for (unsigned i = 0; i < num_attempts; i++) {\n+    assert(points[i] < num_attach_points, \"Candidate attach point %d out of range (%u, num_attach_points: %zu) \" ARGSFMT,\n+           i, points[i], num_attach_points, ARGSFMTARGS);\n+  }\n+#endif\n","filename":"src\/hotspot\/share\/runtime\/os.cpp","additions":9,"deletions":2,"binary":false,"changes":11,"status":"modified"}]}