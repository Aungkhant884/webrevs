{"files":[{"patch":"@@ -710,1 +710,1 @@\n-        $1_SRCS += $(TOPDIR)\/make\/src\/native\/__ubsan_default_options.cpp\n+        $1_SRCS += $(TOPDIR)\/make\/data\/ubsan\/ubsan_default_options.cpp\n@@ -712,1 +712,1 @@\n-        $1_SRCS += $(TOPDIR)\/make\/src\/native\/__ubsan_default_options.c\n+        $1_SRCS += $(TOPDIR)\/make\/data\/ubsan\/ubsan_default_options.c\n","filename":"make\/common\/NativeCompilation.gmk","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -0,0 +1,54 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#ifndef UNDEFINED_BEHAVIOR_SANITIZER\n+#error \"Build misconfigured, preprocessor macro UNDEFINED_BEHAVIOR_SANITIZER should be defined\"\n+#endif\n+\n+#ifndef __has_attribute\n+#define __has_attribute(x) 0\n+#endif\n+\n+#if (defined(__GNUC__) && !defined(__clang__)) || __has_attribute(visibility)\n+#define ATTRIBUTE_DEFAULT_VISIBILITY __attribute__((visibility(\"default\")))\n+#else\n+#define ATTRIBUTE_DEFAULT_VISIBILITY\n+#endif\n+\n+#if (defined(__GNUC__) && !defined(__clang__)) || __has_attribute(used)\n+#define ATTRIBUTE_USED __attribute__((used))\n+#else\n+#define ATTRIBUTE_USED\n+#endif\n+\n+\/\/ Override weak symbol exposed by UBSan to override default options. This is called by UBSan\n+\/\/ extremely early during library loading, before main is called. We need to override the default\n+\/\/ options because by default UBSan only prints a warning for each occurrence. We want jtreg tests\n+\/\/ to fail when undefined behavior is encountered. We also want a full stack trace for the offending\n+\/\/ thread so it is easier to track down. You can override these options by setting the environment\n+\/\/ variable UBSAN_OPTIONS.\n+ATTRIBUTE_DEFAULT_VISIBILITY ATTRIBUTE_USED const char* __ubsan_default_options() {\n+  return \"halt_on_error=1,print_stacktrace=1\";\n+}\n","filename":"make\/data\/ubsan\/ubsan_default_options.c","additions":54,"deletions":0,"binary":false,"changes":54,"status":"added"},{"patch":"@@ -28,1 +28,1 @@\n-#include \".\/__ubsan_default_options.c\"\n+#include \".\/ubsan_default_options.c\"\n@@ -30,1 +30,1 @@\n-}\n+} \/\/ extern \"C\"\n","filename":"make\/data\/ubsan\/ubsan_default_options.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"make\/src\/native\/__ubsan_default_options.cpp","status":"copied"},{"patch":"@@ -0,0 +1,55 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#ifndef ADDRESS_SANITIZER\n+#error \"Build misconfigured, preprocessor macro ADDRESS_SANITIZER should be defined\"\n+#endif\n+\n+#ifndef __has_attribute\n+#define __has_attribute(x) 0\n+#endif\n+\n+#if (defined(__GNUC__) && !defined(__clang__)) || __has_attribute(visibility)\n+#define ATTRIBUTE_DEFAULT_VISIBILITY __attribute__((visibility(\"default\")))\n+#else\n+#define ATTRIBUTE_DEFAULT_VISIBILITY\n+#endif\n+\n+#if (defined(__GNUC__) && !defined(__clang__)) || __has_attribute(used)\n+#define ATTRIBUTE_USED __attribute__((used))\n+#else\n+#define ATTRIBUTE_USED\n+#endif\n+\n+\/\/ Override weak symbol exposed by ASan to override default options. This is\n+\/\/ called by ASan extremely early during library loading, before main is\n+\/\/ called. You can override these options by setting the environment variable ASAN_OPTIONS.\n+ATTRIBUTE_DEFAULT_VISIBILITY ATTRIBUTE_USED const char* __asan_default_options() {\n+  return\n+#ifndef LEAK_SANITIZER\n+    \"detect_leaks=0,\"\n+#endif\n+    \"handle_segv=0\";\n+}\n","filename":"make\/src\/native\/__asan_default_options.c","additions":55,"deletions":0,"binary":false,"changes":55,"status":"added"},{"patch":"@@ -28,1 +28,1 @@\n-#include \".\/__ubsan_default_options.c\"\n+#include \".\/__asan_default_options.c\"\n","filename":"make\/src\/native\/__asan_default_options.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"make\/src\/native\/__ubsan_default_options.cpp","status":"renamed"},{"patch":"@@ -1,34 +0,0 @@\n-\/*\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/\/ Override weak symbol exposed by UBSan to override default options. This is called by UBSan\n-\/\/ extremely early during library loading, before main is called. We need to override the default\n-\/\/ options because by default UBSan only prints a warning for each occurrence. We want jtreg tests\n-\/\/ to fail when undefined behavior is encountered. We also want a full stack trace for the offending\n-\/\/ thread so it is easier to track down. You can override these options by setting the environment\n-\/\/ variable UBSAN_OPTIONS.\n-__attribute__((visibility(\"default\"))) const char* __ubsan_default_options() {\n-  return \"halt_on_error=1,print_stacktrace=1\";\n-}\n","filename":"make\/src\/native\/__ubsan_default_options.c","additions":0,"deletions":34,"binary":false,"changes":34,"status":"deleted"}]}