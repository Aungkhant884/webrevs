{"files":[{"patch":"@@ -218,0 +218,3 @@\n+# UndefinedBehaviorSanitizer\n+JDKOPT_SETUP_UNDEFINED_BEHAVIOR_SANITIZER\n+\n","filename":"make\/autoconf\/configure.ac","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -448,0 +448,40 @@\n+###############################################################################\n+#\n+# UndefinedBehaviorSanitizer\n+#\n+AC_DEFUN_ONCE([JDKOPT_SETUP_UNDEFINED_BEHAVIOR_SANITIZER],\n+[\n+  UTIL_ARG_ENABLE(NAME: ubsan, DEFAULT: false,\n+      DESC: [enable UndefinedBehaviorSanitizer],\n+      CHECK_AVAILABLE: [\n+        AC_MSG_CHECKING([if UndefinedBehaviorSanitizer (ubsan) is available])\n+        if test \"x$TOOLCHAIN_TYPE\" = \"xgcc\" ||\n+            test \"x$TOOLCHAIN_TYPE\" = \"xclang\"; then\n+          AC_MSG_RESULT([yes])\n+        else\n+          AC_MSG_RESULT([no])\n+          AVAILABLE=false\n+        fi\n+      ],\n+      IF_ENABLED: [\n+        # GCC reports lots of likely false positives for stringop-truncation and format-overflow.\n+        # Silence them for now.\n+        UBSAN_CFLAGS=\"-fsanitize=undefined -fsanitize=float-divide-by-zero -Wno-stringop-truncation -Wno-format-overflow -fno-omit-frame-pointer -DUNDEFINED_BEHAVIOR_SANITIZER\"\n+        UBSAN_LDFLAGS=\"-fsanitize=undefined -fsanitize=float-divide-by-zero\"\n+        JVM_CFLAGS=\"$JVM_CFLAGS $UBSAN_CFLAGS\"\n+        JVM_LDFLAGS=\"$JVM_LDFLAGS $UBSAN_LDFLAGS\"\n+        CFLAGS_JDKLIB=\"$CFLAGS_JDKLIB $UBSAN_CFLAGS\"\n+        CFLAGS_JDKEXE=\"$CFLAGS_JDKEXE $UBSAN_CFLAGS\"\n+        CXXFLAGS_JDKLIB=\"$CXXFLAGS_JDKLIB $UBSAN_CFLAGS\"\n+        CXXFLAGS_JDKEXE=\"$CXXFLAGS_JDKEXE $UBSAN_CFLAGS\"\n+        LDFLAGS_JDKLIB=\"$LDFLAGS_JDKLIB $UBSAN_LDFLAGS\"\n+        LDFLAGS_JDKEXE=\"$LDFLAGS_JDKEXE $UBSAN_LDFLAGS\"\n+        UBSAN_ENABLED=\"yes\"\n+      ],\n+      IF_DISABLED: [\n+        UBSAN_ENABLED=\"no\"\n+      ])\n+\n+  AC_SUBST(UBSAN_ENABLED)\n+])\n+\n","filename":"make\/autoconf\/jdk-options.m4","additions":40,"deletions":0,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -458,0 +458,3 @@\n+# UndefinedBehaviorSanitizer\n+UBSAN_ENABLED:=@UBSAN_ENABLED@\n+\n","filename":"make\/autoconf\/spec.gmk.in","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -37,0 +37,8 @@\n+#ifdef UNDEFINED_BEHAVIOR_SANITIZER\n+\/\/ Override weak symbol exposed by UBSan to override default options. This is called by UBSan\n+\/\/ extremely early during library loading, before main is called.\n+JNIEXPORT const char* __ubsan_default_options() {\n+  return \"halt_on_error=1,print_stacktrace=1\";\n+}\n+#endif \/\/ UNDEFINED_BEHAVIOR_SANITIZER\n+\n","filename":"src\/java.base\/share\/native\/launcher\/main.c","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"}]}