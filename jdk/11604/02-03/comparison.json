{"files":[{"patch":"@@ -479,1 +479,1 @@\n-        UBSAN_ENABLED=\"yes\"\n+        UBSAN_ENABLED=\"true\"\n@@ -482,1 +482,1 @@\n-        UBSAN_ENABLED=\"no\"\n+        UBSAN_ENABLED=\"false\"\n","filename":"make\/autoconf\/jdk-options.m4","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -458,0 +458,3 @@\n+# UndefinedBehaviorSanitizer\n+UBSAN_ENABLED:=@UBSAN_ENABLED@\n+\n","filename":"make\/autoconf\/spec.gmk.in","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -704,0 +704,6 @@\n+  ifeq ($$($1_TYPE), EXECUTABLE)\n+    ifeq ($(UBSAN_ENABLED), true)\n+      $1_SRCS += $(TOPDIR)\/make\/src\/native\/__ubsan_default_options.c\n+    endif\n+  endif\n+\n","filename":"make\/common\/NativeCompilation.gmk","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -0,0 +1,42 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n+\/\/ Override weak symbol exposed by UBSan to override default options. This is called by UBSan\n+\/\/ extremely early during library loading, before main is called. We need to override the default\n+\/\/ options because by default UBSan only prints a warning for each occurrence. We want jtreg tests\n+\/\/ to fail when undefined behavior is encountered. We also want a full stack trace for the offending\n+\/\/ thread so it is easier to track down. You can override these options by setting the environment\n+\/\/ variable UBSAN_OPTIONS.\n+__attribute__((visibility(\"default\"))) const char* __ubsan_default_options() {\n+  return \"halt_on_error=1,print_stacktrace=1\";\n+}\n+\n+#ifdef __cplusplus\n+}  \/\/ extern \"C\"\n+#endif\n","filename":"make\/src\/native\/__ubsan_default_options.c","additions":42,"deletions":0,"binary":false,"changes":42,"status":"added"},{"patch":"@@ -37,12 +37,0 @@\n-#ifdef UNDEFINED_BEHAVIOR_SANITIZER\n-\/\/ Override weak symbol exposed by UBSan to override default options. This is called by UBSan\n-\/\/ extremely early during library loading, before main is called. We need to override the default\n-\/\/ options because by default UBSan only prints a warning for each occurrence. We want jtreg tests\n-\/\/ to fail when undefined behavior is encountered. We also want a full stack trace for the offending\n-\/\/ thread so it is easier to track down. You can override these options by setting the environment\n-\/\/ variable UBSAN_OPTIONS.\n-JNIEXPORT const char* __ubsan_default_options() {\n-  return \"halt_on_error=1,print_stacktrace=1\";\n-}\n-#endif \/\/ UNDEFINED_BEHAVIOR_SANITIZER\n-\n","filename":"src\/java.base\/share\/native\/launcher\/main.c","additions":0,"deletions":12,"binary":false,"changes":12,"status":"modified"}]}