{"files":[{"patch":"@@ -584,1 +584,1 @@\n-  inline void register_humongous_region_with_region_attr(uint index);\n+  inline void register_humongous_candidate_region_with_region_attr(uint index);\n@@ -1033,1 +1033,1 @@\n-  inline bool is_in_cset_or_humongous(const oop obj);\n+  inline bool is_in_cset_or_humongous_candidate(const oop obj);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -171,2 +171,2 @@\n-bool G1CollectedHeap::is_in_cset_or_humongous(const oop obj) {\n-  return _region_attr.is_in_cset_or_humongous(cast_from_oop<HeapWord*>(obj));\n+bool G1CollectedHeap::is_in_cset_or_humongous_candidate(const oop obj) {\n+  return _region_attr.is_in_cset_or_humongous_candidate(cast_from_oop<HeapWord*>(obj));\n@@ -183,2 +183,2 @@\n-void G1CollectedHeap::register_humongous_region_with_region_attr(uint index) {\n-  _region_attr.set_humongous(index, region_at(index)->rem_set()->is_tracked());\n+void G1CollectedHeap::register_humongous_candidate_region_with_region_attr(uint index) {\n+  _region_attr.set_humongous_candidate(index, region_at(index)->rem_set()->is_tracked());\n@@ -237,1 +237,1 @@\n-  return _region_attr.is_humongous(region);\n+  return _region_attr.is_humongous_candidate(region);\n@@ -248,2 +248,2 @@\n-  if (_region_attr.is_humongous(region)) {\n-    _region_attr.clear_humongous(region);\n+  if (_region_attr.is_humongous_candidate(region)) {\n+    _region_attr.clear_humongous_candidate(region);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.inline.hpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -55,1 +55,1 @@\n-  static const region_type_t Humongous    =  -3;    \/\/ The region is a humongous candidate not in the current collection set.\n+  static const region_type_t HumongousCandidate    =  -3;    \/\/ The region is a humongous candidate not in the current collection set.\n@@ -73,1 +73,1 @@\n-      case Humongous: return \"Humongous\";\n+      case HumongousCandidate: return \"HumongousCandidate\";\n@@ -86,2 +86,2 @@\n-  void clear_humongous()               {\n-    assert(is_humongous() || !is_in_cset(), \"must be\");\n+  void clear_humongous_candidate()               {\n+    assert(is_humongous_candidate() || !is_in_cset(), \"must be\");\n@@ -92,1 +92,1 @@\n-  bool is_in_cset_or_humongous() const { return is_in_cset() || is_humongous(); }\n+  bool is_in_cset_or_humongous_candidate() const { return is_in_cset() || is_humongous_candidate(); }\n@@ -95,1 +95,1 @@\n-  bool is_humongous() const            { return type() == Humongous; }\n+  bool is_humongous_candidate() const            { return type() == HumongousCandidate; }\n@@ -135,1 +135,1 @@\n-  void set_humongous(uintptr_t index, bool remset_is_tracked) {\n+  void set_humongous_candidate(uintptr_t index, bool remset_is_tracked) {\n@@ -138,1 +138,1 @@\n-    set_by_index(index, G1HeapRegionAttr(G1HeapRegionAttr::Humongous, remset_is_tracked));\n+    set_by_index(index, G1HeapRegionAttr(G1HeapRegionAttr::HumongousCandidate, remset_is_tracked));\n@@ -141,2 +141,2 @@\n-  void clear_humongous(uintptr_t index) {\n-    get_ref_by_index(index)->clear_humongous();\n+  void clear_humongous_candidate(uintptr_t index) {\n+    get_ref_by_index(index)->clear_humongous_candidate();\n@@ -145,2 +145,2 @@\n-  bool is_humongous(uintptr_t index) {\n-    return get_ref_by_index(index)->is_humongous();\n+  bool is_humongous_candidate(uintptr_t index) {\n+    return get_ref_by_index(index)->is_humongous_candidate();\n@@ -165,1 +165,1 @@\n-  bool is_in_cset_or_humongous(HeapWord* addr) const { return at(addr).is_in_cset_or_humongous(); }\n+  bool is_in_cset_or_humongous_candidate(HeapWord* addr) const { return at(addr).is_in_cset_or_humongous_candidate(); }\n","filename":"src\/hotspot\/share\/gc\/g1\/g1HeapRegionAttr.hpp","additions":13,"deletions":13,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -702,1 +702,1 @@\n-      if (hr->is_continues_humongous() && region_attr.is_humongous()) {\n+      if (hr->is_continues_humongous() && region_attr.is_humongous_candidate()) {\n@@ -708,1 +708,1 @@\n-      if (region_attr.is_humongous()) {\n+      if (region_attr.is_humongous_candidate()) {\n","filename":"src\/hotspot\/share\/gc\/g1\/g1HeapVerifier.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -67,1 +67,1 @@\n-  if (region_attr.is_humongous()) {\n+  if (region_attr.is_humongous_candidate()) {\n@@ -248,1 +248,1 @@\n-    if (state.is_humongous()) {\n+    if (state.is_humongous_candidate()) {\n","filename":"src\/hotspot\/share\/gc\/g1\/g1OopClosures.inline.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -198,1 +198,1 @@\n-  assert(!region_attr.is_humongous(),\n+  assert(!region_attr.is_humongous_candidate(),\n@@ -330,1 +330,1 @@\n-  assert(dest->is_in_cset_or_humongous(), \"Unexpected dest: %s region attr\", dest->get_type_str());\n+  assert(dest->is_in_cset_or_humongous_candidate(), \"Unexpected dest: %s region attr\", dest->get_type_str());\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ParScanThreadState.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1325,1 +1325,1 @@\n-      if (!g1h->region_attr(r->hrm_index()).is_humongous() ||\n+      if (!g1h->region_attr(r->hrm_index()).is_humongous_candidate() ||\n","filename":"src\/hotspot\/share\/gc\/g1\/g1RemSet.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -386,1 +386,1 @@\n-        _g1h->register_humongous_region_with_region_attr(index);\n+        _g1h->register_humongous_candidate_region_with_region_attr(index);\n@@ -811,1 +811,1 @@\n-    if (!region_attr.is_in_cset_or_humongous()) {\n+    if (!region_attr.is_in_cset_or_humongous_candidate()) {\n@@ -819,1 +819,1 @@\n-      assert(region_attr.is_humongous(),\n+      assert(region_attr.is_humongous_candidate(),\n@@ -847,1 +847,1 @@\n-    if (_g1h->is_in_cset_or_humongous(obj)) {\n+    if (_g1h->is_in_cset_or_humongous_candidate(obj)) {\n","filename":"src\/hotspot\/share\/gc\/g1\/g1YoungCollector.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}