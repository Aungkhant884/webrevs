{"files":[{"patch":"@@ -63,0 +63,1 @@\n+        \/\/ Builds the maps from the IANA data\n@@ -64,0 +65,1 @@\n+        \/\/ Writes the maps out to LocaleEquivalentMaps.java\n@@ -216,57 +218,0 @@\n-    private static String generateValuesString(String[] values) {\n-        String outputStr = \"\";\n-        for (int i = 0; i < values.length; i++) {\n-            if (i != values.length - 1) {\n-                outputStr = outputStr + \"\\\"\" + values[i] + \"\\\", \";\n-            } else {\n-                outputStr = outputStr + \"\\\"\" + values[i] + \"\\\"\";\n-            }\n-\n-        }\n-        return outputStr;\n-    }\n-\n-    private static final String COPYRIGHT = \"\/*\\n\"\n-        + \" * Copyright (c) 2012, %d, Oracle and\/or its affiliates. All rights reserved.\\n\"\n-        + \" * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\\n\"\n-        + \" *\\n\"\n-        + \" * This code is free software; you can redistribute it and\/or modify it\\n\"\n-        + \" * under the terms of the GNU General Public License version 2 only, as\\n\"\n-        + \" * published by the Free Software Foundation.  Oracle designates this\\n\"\n-        + \" * particular file as subject to the \\\"Classpath\\\" exception as provided\\n\"\n-        + \" * by Oracle in the LICENSE file that accompanied this code.\\n\"\n-        + \" *\\n\"\n-        + \" * This code is distributed in the hope that it will be useful, but WITHOUT\\n\"\n-        + \" * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\\n\"\n-        + \" * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\\n\"\n-        + \" * version 2 for more details (a copy is included in the LICENSE file that\\n\"\n-        + \" * accompanied this code).\\n\"\n-        + \" *\\n\"\n-        + \" * You should have received a copy of the GNU General Public License version\\n\"\n-        + \" * 2 along with this work; if not, write to the Free Software Foundation,\\n\"\n-        + \" * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\\n\"\n-        + \" *\\n\"\n-        + \" * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\\n\"\n-        + \" * or visit www.oracle.com if you need additional information or have any\\n\"\n-        + \" * questions.\\n\"\n-        + \"*\/\\n\\n\";\n-\n-    private static final String headerText =\n-        \"package sun.util.locale;\\n\\n\"\n-        + \"import java.util.HashMap;\\n\"\n-        + \"import java.util.Map;\\n\\n\"\n-        + \"final class LocaleEquivalentMaps {\\n\\n\"\n-        + \"    static final Map<String, String> singleEquivMap;\\n\"\n-        + \"    static final Map<String, String[]> multiEquivsMap;\\n\"\n-        + \"    static final Map<String, String> regionVariantEquivMap;\\n\\n\"\n-        + \"    static {\\n\"\n-        + \"        singleEquivMap = HashMap.newHashMap(\";\n-\n-    private static final String footerText =\n-        \"    }\\n\\n\"\n-        + \"}\";\n-\n-    private static String getOpenJDKCopyright() {\n-        return String.format(Locale.US, COPYRIGHT, copyrightYear);\n-    }\n-\n@@ -280,1 +225,0 @@\n-\n@@ -284,8 +228,6 @@\n-            writer.write(headerText\n-                + sortedLanguageMap1.size() + \");\\n\"\n-                + \"        multiEquivsMap = HashMap.newHashMap(\"\n-                + sortedLanguageMap2.size() + \");\\n\"\n-                + \"        regionVariantEquivMap = HashMap.newHashMap(\"\n-                + sortedRegionVariantMap.size() + \");\\n\\n\"\n-                + \"        \/\/ This is an auto-generated file and should not be manually edited.\\n\"\n-                + \"        \/\/   LSR Revision: \" + LSRrevisionDate);\n+            writer.write(HEADER_TEXT);\n+            writer.write(getMapsText());\n+            writer.write(getLSRText());\n+            writeEquiv(writer, \"singleEquivMap\", sortedLanguageMap1);\n+            writeMultiEquiv(writer);\n+            writeEquiv(writer, \"regionVariantEquivMap\", sortedRegionVariantMap);\n@@ -293,0 +235,6 @@\n+            writer.write(FOOTER_TEXT);\n+        } catch (IOException ex) {\n+            ex.printStackTrace(System.err);\n+            System.exit(1);\n+        }\n+    }\n@@ -294,6 +242,3 @@\n-            for (String key : sortedLanguageMap1.keySet()) {\n-                String value = sortedLanguageMap1.get(key);\n-                writer.write(\"        singleEquivMap.put(\\\"\"\n-                    + key + \"\\\", \\\"\" + value + \"\\\");\");\n-                writer.newLine();\n-            }\n+    private static String getOpenJDKCopyright() {\n+        return String.format(Locale.US, COPYRIGHT, copyrightYear);\n+    }\n@@ -301,9 +246,46 @@\n-            writer.newLine();\n-            for (String key : sortedLanguageMap2.keySet()) {\n-                String[] values = sortedLanguageMap2.get(key);\n-\n-                if (values.length >= 2) {\n-                    writer.write(\"        multiEquivsMap.put(\\\"\"\n-                        + key + \"\\\", new String[] {\"\n-                        + generateValuesString(values) + \"});\");\n-                    writer.newLine();\n+    private static final String COPYRIGHT =\n+            \"\"\"\n+            \/*\n+             * Copyright (c) 2012, %d, Oracle and\/or its affiliates. All rights reserved.\n+             * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+             *\n+             * This code is free software; you can redistribute it and\/or modify it\n+             * under the terms of the GNU General Public License version 2 only, as\n+             * published by the Free Software Foundation.  Oracle designates this\n+             * particular file as subject to the \\\"Classpath\\\" exception as provided\n+             * by Oracle in the LICENSE file that accompanied this code.\n+             *\n+             * This code is distributed in the hope that it will be useful, but WITHOUT\n+             * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+             * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+             * version 2 for more details (a copy is included in the LICENSE file that\n+             * accompanied this code).\n+             *\n+             * You should have received a copy of the GNU General Public License version\n+             * 2 along with this work; if not, write to the Free Software Foundation,\n+             * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+             *\n+             * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+             * or visit www.oracle.com if you need additional information or have any\n+             * questions.\n+            *\/\n+\n+            \"\"\";\n+\n+    private static final String HEADER_TEXT =\n+            \"\"\"\n+            package sun.util.locale;\n+\n+            import java.util.HashMap;\n+            import java.util.Map;\n+\n+            final class LocaleEquivalentMaps {\n+\n+                static final Map<String, String> singleEquivMap;\n+                static final Map<String, String[]> multiEquivsMap;\n+                static final Map<String, String> regionVariantEquivMap;\n+\n+            \"\"\";\n+\n+    private static final String FOOTER_TEXT =\n+            \"\"\"\n@@ -311,0 +293,2 @@\n+\n+\n@@ -312,0 +296,14 @@\n+            \"\"\";\n+\n+    private static String getMapsText() {\n+        return  \"\"\"\n+                    static {\n+                        singleEquivMap = HashMap.newHashMap(%s);\n+                        multiEquivsMap = HashMap.newHashMap(%s);\n+                        regionVariantEquivMap = HashMap.newHashMap(%s);\n+\n+                \"\"\".formatted(\n+                sortedLanguageMap1.size(),\n+                sortedLanguageMap2.size(),\n+                sortedRegionVariantMap.size());\n+    }\n@@ -313,5 +311,14 @@\n-            writer.newLine();\n-            for (String key : sortedRegionVariantMap.keySet()) {\n-                String value = sortedRegionVariantMap.get(key);\n-                writer.write(\"        regionVariantEquivMap.put(\\\"\"\n-                    + key + \"\\\", \\\"\" + value + \"\\\");\");\n+    private static final String getLSRText(){\n+        return  \"\"\"\n+                        \/\/ This is an auto-generated file and should not be manually edited.\n+                        \/\/   LSR Revision: %s\n+                \"\"\".formatted(LSRrevisionDate);\n+    }\n+\n+    private static void writeMultiEquiv(BufferedWriter writer) throws IOException {\n+        for (String key : sortedLanguageMap2.keySet()) {\n+            String[] values = sortedLanguageMap2.get(key);\n+            if (values.length >= 2) {\n+                writer.write(String.format(\n+                        \"        multiEquivsMap.put(\\\"%s\\\", new String[] {%s});\"\n+                        , key, generateValuesString(values)));\n@@ -320,5 +327,0 @@\n-\n-            writer.write(footerText);\n-        } catch (IOException ex) {\n-            ex.printStackTrace(System.err);\n-            System.exit(1);\n@@ -326,0 +328,1 @@\n+    }\n@@ -327,0 +330,9 @@\n+    \/\/ Use for writing an equivlancy map with one value\n+    private static void writeEquiv(BufferedWriter writer, String name, Map<String, String> map) throws IOException {\n+        for (String key : map.keySet()) {\n+            String value = map.get(key);\n+            writer.write(String.format(\n+                    \"        %s.put(\\\"%s\\\", \\\"%s\\\");\"\n+                    , name, key, value));\n+            writer.newLine();\n+        }\n@@ -329,0 +341,12 @@\n+    private static String generateValuesString(String[] values) {\n+        String outputStr = \"\";\n+        for (int i = 0; i < values.length; i++) {\n+            if (i != values.length - 1) {\n+                outputStr = String.format(\"%s\\\"%s\\\", \", outputStr, values[i]);\n+            } else {\n+                outputStr = String.format(\"%s\\\"%s\\\"\", outputStr, values[i]);\n+            }\n+\n+        }\n+        return outputStr;\n+    }\n","filename":"make\/jdk\/src\/classes\/build\/tools\/generatelsrequivmaps\/EquivMapsGenerator.java","additions":115,"deletions":91,"binary":false,"changes":206,"status":"modified"}]}