{"files":[{"patch":"@@ -32,3 +32,3 @@\n-\/\/ System includes\n-\n-#include <unistd.h>\n+inline bool os::uses_stack_guard_pages() {\n+  return true;\n+}\n@@ -44,2 +44,2 @@\n-inline int os::ftruncate(int fd, jlong length) {\n-  return ::ftruncate64(fd, length);\n+\/\/ Bang the shadow pages if they need to be touched to be mapped.\n+inline void os::map_stack_shadow_pages(address sp) {\n@@ -48,4 +48,0 @@\n-\/\/ We don't have NUMA support on Aix, but we need this for compilation.\n-inline bool os::numa_has_static_binding()   { ShouldNotReachHere(); return true; }\n-inline bool os::numa_has_group_homing()     { ShouldNotReachHere(); return false;  }\n-\n","filename":"src\/hotspot\/os\/aix\/os_aix.inline.hpp","additions":5,"deletions":9,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -31,3 +31,3 @@\n-\/\/ System includes\n-\n-#include <unistd.h>\n+inline bool os::uses_stack_guard_pages() {\n+  return true;\n+}\n@@ -48,2 +48,2 @@\n-inline int os::ftruncate(int fd, jlong length) {\n-  return ::ftruncate(fd, length);\n+\/\/ Bang the shadow pages if they need to be touched to be mapped.\n+inline void os::map_stack_shadow_pages(address sp) {\n@@ -52,3 +52,0 @@\n-inline bool os::numa_has_static_binding()   { return true; }\n-inline bool os::numa_has_group_homing()     { return false;  }\n-\n","filename":"src\/hotspot\/os\/bsd\/os_bsd.inline.hpp","additions":5,"deletions":8,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -31,3 +31,3 @@\n-\/\/ System includes\n-\n-#include <unistd.h>\n+inline bool os::uses_stack_guard_pages() {\n+  return true;\n+}\n@@ -40,2 +40,2 @@\n-inline int os::ftruncate(int fd, jlong length) {\n-  return ::ftruncate64(fd, length);\n+\/\/ Bang the shadow pages if they need to be touched to be mapped.\n+inline void os::map_stack_shadow_pages(address sp) {\n@@ -44,3 +44,0 @@\n-inline bool os::numa_has_static_binding()   { return true; }\n-inline bool os::numa_has_group_homing()     { return false;  }\n-\n","filename":"src\/hotspot\/os\/linux\/os_linux.inline.hpp","additions":5,"deletions":8,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -47,8 +47,0 @@\n-inline bool os::uses_stack_guard_pages() {\n-  return true;\n-}\n-\n-\/\/ Bang the shadow pages if they need to be touched to be mapped.\n-inline void os::map_stack_shadow_pages(address sp) {\n-}\n-\n@@ -67,0 +59,8 @@\n+inline int os::ftruncate(int fd, jlong length) {\n+   return BSD_ONLY(::ftruncate) NOT_BSD(::ftruncate64)(fd, length);\n+}\n+\n+\/\/ Aix does not have NUMA support but need these for compilation.\n+inline bool os::numa_has_static_binding()   { AIX_ONLY(ShouldNotReachHere();) return true; }\n+inline bool os::numa_has_group_homing()     { AIX_ONLY(ShouldNotReachHere();) return false;  }\n+\n","filename":"src\/hotspot\/os\/posix\/os_posix.inline.hpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"}]}