{"files":[{"patch":"@@ -1854,1 +1854,1 @@\n-    return false; \/\/ Not yet processed, so we do not yet know.\n+    return false; \/\/ Not yet processed, so we do not know, yet.\n","filename":"src\/hotspot\/share\/ci\/ciTypeFlow.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -538,1 +538,1 @@\n-    \/\/ This block is loop head of an irreducible loop.\n+    \/\/ This block is a loop head of an irreducible loop.\n@@ -541,1 +541,1 @@\n-    \/\/ This block is secondary entry to irreducible loop (entry but not head)\n+    \/\/ This block is a secondary entry to an irreducible loop (entry but not head).\n","filename":"src\/hotspot\/share\/ci\/ciTypeFlow.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -814,1 +814,1 @@\n-      assert(m != (Node*)igvn->C->root(), \"Should be unreachable from root\");\n+      assert(m != igvn->C->root(), \"Should be unreachable from root\");\n@@ -997,1 +997,1 @@\n-void RegionNode::dump_spec(outputStream *st) const {\n+void RegionNode::dump_spec(outputStream* st) const {\n@@ -999,1 +999,1 @@\n-  switch(loop_status()) {\n+  switch (loop_status()) {\n@@ -1771,1 +1771,1 @@\n-  if(phase->C->has_irreducible_loop()) {\n+  if (phase->C->has_irreducible_loop()) {\n@@ -1980,1 +1980,1 @@\n-    for( uint j = 1; j < req(); ++j ){\n+    for (uint j = 1; j < req(); j++) {\n@@ -1985,1 +1985,1 @@\n-        if (n != nullptr && n!= top) {\n+        if (n != nullptr && n != top) {\n@@ -2843,1 +2843,1 @@\n-  if( phase->type(in(0)->in(0)) == Type::TOP ) {\n+  if (phase->type(in(0)->in(0)) == Type::TOP) {\n","filename":"src\/hotspot\/share\/opto\/cfgnode.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -105,1 +105,1 @@\n-    \/\/ be carefull when removing entry control to it.\n+    \/\/ be careful when removing entry control to it.\n@@ -118,3 +118,1 @@\n-#ifdef ASSERT\n-  void verify_can_be_irreducible_entry() const;\n-#endif \/\/ASSERT\n+  DEBUG_ONLY(void verify_can_be_irreducible_entry() const;)\n@@ -137,1 +135,1 @@\n-  virtual void dump_spec(outputStream *st) const;\n+  virtual void dump_spec(outputStream* st) const;\n","filename":"src\/hotspot\/share\/opto\/cfgnode.hpp","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -3141,1 +3141,1 @@\n-  RegionNode *landing_pad = new RegionNode( fall_in_cnt+1 );\n+  RegionNode* landing_pad = new RegionNode(fall_in_cnt + 1);\n@@ -5263,1 +5263,1 @@\n-  RootNode* root = Compile::current()->root();\n+  RootNode* root = C->root();\n@@ -5294,1 +5294,1 @@\n-  IdealLoopTree *l = get_loop(region); \/\/ l: innermost loop that contains region\n+  IdealLoopTree* l = get_loop(region); \/\/ l: innermost loop that contains region\n","filename":"src\/hotspot\/share\/opto\/loopnode.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -234,1 +234,1 @@\n-        \/\/ The block in irreducible loop in this method, so it is possible that this\n+        \/\/ The block is in an irreducible loop of this method, so it is possible that this\n","filename":"src\/hotspot\/share\/opto\/parse.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}