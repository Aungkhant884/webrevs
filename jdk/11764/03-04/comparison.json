{"files":[{"patch":"@@ -814,1 +814,1 @@\n-      assert(m != igvn->C->root(), \"Should be unreachable from root\");\n+      assert(m == nullptr || !m->is_Root(), \"Should be unreachable from root\");\n","filename":"src\/hotspot\/share\/opto\/cfgnode.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -68,0 +68,12 @@\n+public:\n+  enum LoopStatus {\n+    \/\/ No guarantee: the region may be an irreducible loop entry, thus we have to\n+    \/\/ be careful when removing entry control to it.\n+    MaybeIrreducibleEntry,\n+    \/\/ Limited guarantee: this region may be (nested) inside an irreducible loop,\n+    \/\/ but it will never be an irreducible loop entry.\n+    NeverIrreducibleEntry,\n+    \/\/ Strong guarantee: this region is not (nested) inside an irreducible loop.\n+    Reducible,\n+  };\n+\n@@ -73,0 +85,3 @@\n+\n+  LoopStatus _loop_status;\n+\n@@ -102,14 +117,0 @@\n-\n-  enum LoopStatus {\n-    \/\/ No guarantee: the region may be an irreducible loop entry, thus we have to\n-    \/\/ be careful when removing entry control to it.\n-    MaybeIrreducibleEntry,\n-    \/\/ Limited guarantee: this region may be (nested) inside an irreducible loop,\n-    \/\/ but it will never be an irreducible loop entry.\n-    NeverIrreducibleEntry,\n-    \/\/ Strong guarantee: this region is not (nested) inside an irreducible loop.\n-    Reducible,\n-  };\n-private:\n-  LoopStatus _loop_status;\n-public:\n@@ -134,3 +135,1 @@\n-#ifndef PRODUCT\n-  virtual void dump_spec(outputStream* st) const;\n-#endif\n+  NOT_PRODUCT(virtual void dump_spec(outputStream* st) const;)\n","filename":"src\/hotspot\/share\/opto\/cfgnode.hpp","additions":16,"deletions":17,"binary":false,"changes":33,"status":"modified"}]}