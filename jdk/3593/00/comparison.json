{"files":[{"patch":"@@ -556,0 +556,1 @@\n+                  _igv_idx(0),\n@@ -862,0 +863,1 @@\n+    _igv_idx(0),\n","filename":"src\/hotspot\/share\/opto\/compile.cpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -296,0 +296,1 @@\n+  uint                  _igv_idx;               \/\/ Counter for IGV node identifiers\n@@ -604,0 +605,1 @@\n+  uint          next_igv_idx()                  { return _igv_idx++; }\n","filename":"src\/hotspot\/share\/opto\/compile.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -343,4 +343,2 @@\n-    \/\/ Output edge\n-    node_idx_t dest_id = n->_idx;\n-    for ( uint i = 0; i < n->len(); i++ ) {\n-      if ( n->in(i) ) {\n+    for (uint i = 0; i < n->len(); i++) {\n+      if (n->in(i)) {\n@@ -349,2 +347,2 @@\n-        print_attr(FROM_PROPERTY, source->_idx);\n-        print_attr(TO_PROPERTY, dest_id);\n+        print_attr(FROM_PROPERTY, source->_igv_idx);\n+        print_attr(TO_PROPERTY, n->_igv_idx);\n@@ -360,1 +358,1 @@\n-    print_attr(NODE_ID_PROPERTY, n->_idx);\n+    print_attr(NODE_ID_PROPERTY, n->_igv_idx);\n@@ -718,1 +716,1 @@\n-        print_attr(NODE_ID_PROPERTY, block->get_node(s)->_idx);\n+        print_attr(NODE_ID_PROPERTY, block->get_node(s)->_igv_idx);\n","filename":"src\/hotspot\/share\/opto\/idealGraphPrinter.cpp","additions":6,"deletions":8,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -306,0 +306,1 @@\n+  NOT_PRODUCT(_igv_idx = C->next_igv_idx());\n@@ -534,0 +535,1 @@\n+  NOT_PRODUCT(n->_igv_idx = C->next_igv_idx());\n","filename":"src\/hotspot\/share\/opto\/node.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -326,0 +326,4 @@\n+  \/\/ IGV node identifier. It is similar to Node::_debug_idx in that it is unique\n+  \/\/ across all compilation phases, but different in that it is initialized in\n+  \/\/ each compilation, for stability.\n+  NOT_PRODUCT(node_idx_t _igv_idx;)\n","filename":"src\/hotspot\/share\/opto\/node.hpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -80,1 +80,0 @@\n-        getProperties().setProperty(\"id\", \"\" + id);\n","filename":"src\/utils\/IdealGraphVisualizer\/Data\/src\/main\/java\/com\/sun\/hotspot\/igv\/data\/InputNode.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -454,0 +454,32 @@\n+\n+    public final String resolveString(String string) {\n+\n+        StringBuilder sb = new StringBuilder();\n+        boolean inBrackets = false;\n+        StringBuilder curIdent = new StringBuilder();\n+\n+        for (int i = 0; i < string.length(); i++) {\n+            char c = string.charAt(i);\n+            if (inBrackets) {\n+                if (c == ']') {\n+                    String value = get(curIdent.toString());\n+                    if (value == null) {\n+                        value = \"\";\n+                    }\n+                    sb.append(value);\n+                    inBrackets = false;\n+                } else {\n+                    curIdent.append(c);\n+                }\n+            } else {\n+                if (c == '[') {\n+                    inBrackets = true;\n+                    curIdent = new StringBuilder();\n+                } else {\n+                    sb.append(c);\n+                }\n+            }\n+        }\n+\n+        return sb.toString();\n+    }\n","filename":"src\/utils\/IdealGraphVisualizer\/Data\/src\/main\/java\/com\/sun\/hotspot\/igv\/data\/Properties.java","additions":33,"deletions":1,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -66,1 +66,1 @@\n-                    String s = Figure.resolveString(propertyName, f.getProperties());\n+                    String s = f.getProperties().resolveString(propertyName);\n@@ -82,1 +82,1 @@\n-                    String s = Figure.resolveString(propertyName, f.getProperties());\n+                    String s = f.getProperties().resolveString(propertyName);\n","filename":"src\/utils\/IdealGraphVisualizer\/Filter\/src\/main\/java\/com\/sun\/hotspot\/igv\/filter\/SplitFilter.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -131,4 +131,6 @@\n-        builder.append(\"from \");\n-        builder.append(getOutputSlot().getFigure().getSource().getSourceNodes().get(0).getId());\n-        builder.append(\" to \");\n-        builder.append(getInputSlot().getFigure().getSource().getSourceNodes().get(0).getId());\n+        \/\/ Resolve strings lazily every time the tooltip is shown, instead of\n+        \/\/ eagerly as for node labels, for efficiency.\n+        String shortNodeText = getInputSlot().getFigure().getDiagram().getShortNodeText();\n+        builder.append(getOutputSlot().getFigure().getProperties().resolveString(shortNodeText));\n+        builder.append(\" â†’ \");\n+        builder.append(getInputSlot().getFigure().getProperties().resolveString(shortNodeText));\n","filename":"src\/utils\/IdealGraphVisualizer\/Graph\/src\/main\/java\/com\/sun\/hotspot\/igv\/graph\/Connection.java","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,0 +46,1 @@\n+    private String shortNodeText;\n@@ -66,0 +67,1 @@\n+        this.shortNodeText = \"\";\n@@ -80,0 +82,4 @@\n+    public String getShortNodeText() {\n+        return shortNodeText;\n+    }\n+\n@@ -89,1 +95,1 @@\n-        return Diagram.createDiagram(graph.getNext(), nodeText);\n+        return Diagram.createDiagram(graph.getNext(), nodeText, shortNodeText);\n@@ -97,1 +103,1 @@\n-        return Diagram.createDiagram(graph.getPrev(), nodeText);\n+        return Diagram.createDiagram(graph.getPrev(), nodeText, shortNodeText);\n@@ -133,1 +139,2 @@\n-    public static Diagram createDiagram(InputGraph graph, String nodeText) {\n+    public static Diagram createDiagram(InputGraph graph, String nodeText,\n+                                        String shortNodeText) {\n@@ -141,0 +148,1 @@\n+        d.shortNodeText = shortNodeText;\n","filename":"src\/utils\/IdealGraphVisualizer\/Graph\/src\/main\/java\/com\/sun\/hotspot\/igv\/graph\/Diagram.java","additions":12,"deletions":4,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -281,1 +281,1 @@\n-                String label = resolveString(diagram.getNodeText(), n.getProperties());\n+                String label = n.getProperties().resolveString(diagram.getNodeText());\n@@ -293,1 +293,1 @@\n-            result[i] = resolveString(strings[i], getProperties());\n+            result[i] = getProperties().resolveString(strings[i]);\n@@ -299,32 +299,0 @@\n-    public static final String resolveString(String string, Properties properties) {\n-\n-        StringBuilder sb = new StringBuilder();\n-        boolean inBrackets = false;\n-        StringBuilder curIdent = new StringBuilder();\n-\n-        for (int i = 0; i < string.length(); i++) {\n-            char c = string.charAt(i);\n-            if (inBrackets) {\n-                if (c == ']') {\n-                    String value = properties.get(curIdent.toString());\n-                    if (value == null) {\n-                        value = \"\";\n-                    }\n-                    sb.append(value);\n-                    inBrackets = false;\n-                } else {\n-                    curIdent.append(c);\n-                }\n-            } else {\n-                if (c == '[') {\n-                    inBrackets = true;\n-                    curIdent = new StringBuilder();\n-                } else {\n-                    sb.append(c);\n-                }\n-            }\n-        }\n-\n-        return sb.toString();\n-    }\n-\n","filename":"src\/utils\/IdealGraphVisualizer\/Graph\/src\/main\/java\/com\/sun\/hotspot\/igv\/graph\/Figure.java","additions":2,"deletions":34,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -142,1 +142,7 @@\n-        sb.append(text);\n+        String shortNodeText = figure.getDiagram().getShortNodeText();\n+        if (!text.isEmpty()) {\n+            sb.append(text);\n+            if (!shortNodeText.isEmpty()) {\n+                sb.append(\": \");\n+            }\n+        }\n@@ -145,2 +151,1 @@\n-            sb.append(StringUtils.escapeHTML(\"Node (ID=\" + n.getId() + \"): \" + n.getProperties().get(\"name\")));\n-            sb.append(\"<br>\");\n+            sb.append(StringUtils.escapeHTML(n.getProperties().resolveString(shortNodeText)));\n","filename":"src\/utils\/IdealGraphVisualizer\/Graph\/src\/main\/java\/com\/sun\/hotspot\/igv\/graph\/Slot.java","additions":9,"deletions":4,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,0 +37,2 @@\n+    public final static String NODE_SHORT_TEXT = \"nodeShortText\";\n+    public final static String NODE_SHORT_TEXT_DEFAULT = \"[idx] [name]\";\n","filename":"src\/utils\/IdealGraphVisualizer\/Settings\/src\/main\/java\/com\/sun\/hotspot\/igv\/settings\/Settings.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -7,0 +7,1 @@\n+    <AuxValue name=\"FormSettings_generateFQN\" type=\"java.lang.Boolean\" value=\"true\"\/>\n@@ -30,1 +31,1 @@\n-              <EmptySpace pref=\"206\" max=\"32767\" attributes=\"0\"\/>\n+              <EmptySpace pref=\"153\" max=\"32767\" attributes=\"0\"\/>\n@@ -41,1 +42,1 @@\n-              <Group type=\"102\" alignment=\"1\" attributes=\"0\">\n+              <Group type=\"102\" attributes=\"0\">\n@@ -47,0 +48,1 @@\n+                      <Component id=\"jLabel4\" alignment=\"0\" min=\"-2\" max=\"-2\" attributes=\"0\"\/>\n@@ -50,3 +52,8 @@\n-                      <Component id=\"portSpinner\" alignment=\"0\" min=\"-2\" pref=\"63\" max=\"-2\" attributes=\"0\"\/>\n-                      <Component id=\"nodeWidthSpinner\" alignment=\"0\" min=\"-2\" pref=\"63\" max=\"-2\" attributes=\"0\"\/>\n-                      <Component id=\"jScrollPane1\" alignment=\"0\" min=\"-2\" pref=\"365\" max=\"-2\" attributes=\"0\"\/>\n+                      <Group type=\"103\" alignment=\"0\" groupAlignment=\"0\" max=\"-2\" attributes=\"0\">\n+                          <Component id=\"nodeShortTextField\" max=\"32767\" attributes=\"0\"\/>\n+                          <Component id=\"jScrollPane1\" pref=\"365\" max=\"32767\" attributes=\"0\"\/>\n+                      <\/Group>\n+                      <Group type=\"103\" alignment=\"0\" groupAlignment=\"1\" max=\"-2\" attributes=\"0\">\n+                          <Component id=\"nodeWidthSpinner\" alignment=\"0\" pref=\"100\" max=\"32767\" attributes=\"0\"\/>\n+                          <Component id=\"portSpinner\" alignment=\"0\" max=\"32767\" attributes=\"0\"\/>\n+                      <\/Group>\n@@ -54,1 +61,1 @@\n-                  <EmptySpace max=\"-2\" attributes=\"0\"\/>\n+                  <EmptySpace pref=\"439\" max=\"32767\" attributes=\"0\"\/>\n@@ -63,13 +70,1 @@\n-                      <Group type=\"102\" alignment=\"0\" attributes=\"0\">\n-                          <Component id=\"jScrollPane1\" min=\"-2\" max=\"-2\" attributes=\"0\"\/>\n-                          <EmptySpace type=\"separate\" max=\"-2\" attributes=\"0\"\/>\n-                          <Group type=\"103\" groupAlignment=\"3\" attributes=\"0\">\n-                              <Component id=\"nodeWidthSpinner\" alignment=\"3\" min=\"-2\" max=\"-2\" attributes=\"0\"\/>\n-                              <Component id=\"jLabel2\" alignment=\"3\" min=\"-2\" max=\"-2\" attributes=\"0\"\/>\n-                          <\/Group>\n-                          <EmptySpace type=\"separate\" max=\"-2\" attributes=\"0\"\/>\n-                          <Group type=\"103\" groupAlignment=\"3\" attributes=\"0\">\n-                              <Component id=\"portSpinner\" alignment=\"3\" min=\"-2\" max=\"-2\" attributes=\"0\"\/>\n-                              <Component id=\"jLabel3\" alignment=\"3\" min=\"-2\" max=\"-2\" attributes=\"0\"\/>\n-                          <\/Group>\n-                      <\/Group>\n+                      <Component id=\"jScrollPane1\" alignment=\"0\" min=\"-2\" max=\"-2\" attributes=\"0\"\/>\n@@ -78,1 +73,15 @@\n-                  <EmptySpace min=\"-2\" pref=\"73\" max=\"-2\" attributes=\"0\"\/>\n+                  <EmptySpace min=\"-2\" pref=\"27\" max=\"-2\" attributes=\"0\"\/>\n+                  <Group type=\"103\" groupAlignment=\"0\" attributes=\"0\">\n+                      <Component id=\"jLabel4\" min=\"-2\" max=\"-2\" attributes=\"0\"\/>\n+                      <Component id=\"nodeShortTextField\" min=\"-2\" max=\"-2\" attributes=\"0\"\/>\n+                  <\/Group>\n+                  <EmptySpace pref=\"27\" max=\"32767\" attributes=\"0\"\/>\n+                  <Group type=\"103\" groupAlignment=\"3\" attributes=\"0\">\n+                      <Component id=\"nodeWidthSpinner\" alignment=\"3\" min=\"-2\" max=\"-2\" attributes=\"0\"\/>\n+                      <Component id=\"jLabel2\" alignment=\"3\" min=\"-2\" max=\"-2\" attributes=\"0\"\/>\n+                  <\/Group>\n+                  <EmptySpace pref=\"27\" max=\"32767\" attributes=\"0\"\/>\n+                  <Group type=\"103\" groupAlignment=\"3\" attributes=\"0\">\n+                      <Component id=\"portSpinner\" alignment=\"3\" min=\"-2\" max=\"-2\" attributes=\"0\"\/>\n+                      <Component id=\"jLabel3\" alignment=\"3\" min=\"-2\" max=\"-2\" attributes=\"0\"\/>\n+                  <\/Group>\n@@ -107,0 +116,1 @@\n+                <Property name=\"toolTipText\" type=\"java.lang.String\" value=\"Multi-line format string for node labels. Properties are specified with brackets  (example: &quot;[idx] [name]&quot;).\"\/>\n@@ -118,0 +128,16 @@\n+        <Component class=\"javax.swing.JLabel\" name=\"jLabel4\">\n+          <Properties>\n+            <Property name=\"text\" type=\"java.lang.String\" value=\"Short Node Text\"\/>\n+          <\/Properties>\n+        <\/Component>\n+        <Component class=\"javax.swing.JTextField\" name=\"nodeShortTextField\">\n+          <Properties>\n+            <Property name=\"background\" type=\"java.awt.Color\" editor=\"org.netbeans.beaninfo.editors.ColorEditor\">\n+              <Color blue=\"ff\" green=\"ff\" red=\"ff\" type=\"rgb\"\/>\n+            <\/Property>\n+            <Property name=\"toolTipText\" type=\"java.lang.String\" value=\"Single-line format string for nodes in edge tooltips, slot tooltips, and node search bar. Properties are specified with brackets  (example: &quot;[idx]&quot;).\"\/>\n+          <\/Properties>\n+          <AuxValues>\n+            <AuxValue name=\"JavaCodeGenerator_SerializeTo\" type=\"java.lang.String\" value=\"ViewPanel_nodeShortTextField\"\/>\n+          <\/AuxValues>\n+        <\/Component>\n","filename":"src\/utils\/IdealGraphVisualizer\/Settings\/src\/main\/java\/com\/sun\/hotspot\/igv\/settings\/ViewPanel.form","additions":46,"deletions":20,"binary":false,"changes":66,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -55,0 +55,2 @@\n+        jLabel4 = new javax.swing.JLabel();\n+        nodeShortTextField = new javax.swing.JTextField();\n@@ -62,0 +64,1 @@\n+        nodeTextArea.setToolTipText(\"Multi-line format string for node labels. Properties are specified with brackets  (example: \\\"[idx] [name]\\\").\");\n@@ -66,0 +69,5 @@\n+        org.openide.awt.Mnemonics.setLocalizedText(jLabel4, \"Short Node Text\");\n+\n+        nodeShortTextField.setBackground(new java.awt.Color(255, 255, 255));\n+        nodeShortTextField.setToolTipText(\"Single-line format string for nodes in edge tooltips, slot tooltips, and node search bar. Properties are specified with brackets  (example: \\\"[idx]\\\").\");\n+\n@@ -70,1 +78,1 @@\n-            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()\n+            .add(jPanel1Layout.createSequentialGroup()\n@@ -75,1 +83,2 @@\n-                    .add(jLabel2))\n+                    .add(jLabel2)\n+                    .add(jLabel4))\n@@ -78,4 +87,7 @@\n-                    .add(portSpinner, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 63, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)\n-                    .add(nodeWidthSpinner, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 63, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)\n-                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 365, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))\n-                .addContainerGap())\n+                    .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)\n+                        .add(nodeShortTextField)\n+                        .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 365, Short.MAX_VALUE))\n+                    .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)\n+                        .add(org.jdesktop.layout.GroupLayout.LEADING, nodeWidthSpinner, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)\n+                        .add(org.jdesktop.layout.GroupLayout.LEADING, portSpinner)))\n+                .addContainerGap(439, Short.MAX_VALUE))\n@@ -88,10 +100,1 @@\n-                    .add(jPanel1Layout.createSequentialGroup()\n-                        .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)\n-                        .add(18, 18, 18)\n-                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)\n-                            .add(nodeWidthSpinner, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)\n-                            .add(jLabel2))\n-                        .add(18, 18, 18)\n-                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)\n-                            .add(portSpinner, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)\n-                            .add(jLabel3)))\n+                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)\n@@ -99,1 +102,12 @@\n-                .add(73, 73, 73))\n+                .add(27, 27, 27)\n+                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)\n+                    .add(jLabel4)\n+                    .add(nodeShortTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))\n+                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 27, Short.MAX_VALUE)\n+                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)\n+                    .add(nodeWidthSpinner, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)\n+                    .add(jLabel2))\n+                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 27, Short.MAX_VALUE)\n+                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)\n+                    .add(portSpinner, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)\n+                    .add(jLabel3)))\n@@ -115,2 +129,2 @@\n-                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 232, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)\n-                .addContainerGap(206, Short.MAX_VALUE))\n+                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)\n+                .addContainerGap(153, Short.MAX_VALUE))\n@@ -121,0 +135,1 @@\n+        nodeShortTextField.setText(Settings.get().get(Settings.NODE_SHORT_TEXT, Settings.NODE_SHORT_TEXT_DEFAULT));\n@@ -127,0 +142,1 @@\n+        Settings.get().put(Settings.NODE_SHORT_TEXT, nodeShortTextField.getText());\n@@ -138,0 +154,1 @@\n+    private javax.swing.JLabel jLabel4;\n@@ -140,0 +157,1 @@\n+    private javax.swing.JTextField nodeShortTextField;\n","filename":"src\/utils\/IdealGraphVisualizer\/Settings\/src\/main\/java\/com\/sun\/hotspot\/igv\/settings\/ViewPanel.java","additions":38,"deletions":20,"binary":false,"changes":58,"status":"modified"},{"patch":"@@ -409,1 +409,3 @@\n-            diagram = Diagram.createDiagram(getGraphToView(), Settings.get().get(Settings.NODE_TEXT, Settings.NODE_TEXT_DEFAULT));\n+            diagram = Diagram.createDiagram(getGraphToView(),\n+                                            Settings.get().get(Settings.NODE_TEXT, Settings.NODE_TEXT_DEFAULT),\n+                                            Settings.get().get(Settings.NODE_SHORT_TEXT, Settings.NODE_SHORT_TEXT_DEFAULT));\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/DiagramViewModel.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -61,1 +61,3 @@\n-        Diagram diagram = Diagram.createDiagram(graph, Settings.get().get(Settings.NODE_TEXT, Settings.NODE_TEXT_DEFAULT));\n+        Diagram diagram = Diagram.createDiagram(graph,\n+                                                Settings.get().get(Settings.NODE_TEXT, Settings.NODE_TEXT_DEFAULT),\n+                                                Settings.get().get(Settings.NODE_SHORT_TEXT, Settings.NODE_SHORT_TEXT_DEFAULT));\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/GraphViewerImplementation.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+import com.sun.hotspot.igv.settings.Settings;\n@@ -160,1 +161,1 @@\n-                            n.getProperties().get(name) + \" (\" + n.getId() + \" \" + n.getProperties().get(\"name\") + \")\" + (theGraph != null ? \" in \" + theGraph.getName() : \"\")\n+                            n.getProperties().get(name) + \" (\" + n.getProperties().resolveString(Settings.get().get(Settings.NODE_SHORT_TEXT, Settings.NODE_SHORT_TEXT_DEFAULT)) + \")\" + (theGraph != null ? \" in \" + theGraph.getName() : \"\")\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/NodeQuickSearch.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -59,1 +59,3 @@\n-        this.setToolTipText(\"<HTML>\" + slot.getToolTipText() + \"<\/HTML>\");\n+        if (!slot.getSource().getSourceNodes().isEmpty()) {\n+            this.setToolTipText(\"<HTML>\" + slot.getToolTipText() + \"<\/HTML>\");\n+        }\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/widgets\/SlotWidget.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"}]}