{"files":[{"patch":"@@ -2852,0 +2852,1 @@\n+  bool have_same_inputs = same_inputs(p, opd_idx);\n@@ -2855,0 +2856,1 @@\n+    assert(p->size() == 1, \"Packs in post loop should have only one node\");\n@@ -2858,2 +2860,7 @@\n-  \/\/ Insert index population operation\n-  if (opd == iv()) {\n+  \/\/ Insert index population operation to create a vector of increasing\n+  \/\/ indices starting from the iv value. In some special unrolled loops\n+  \/\/ (see JDK-8286125), we need scalar replications of the iv value if\n+  \/\/ all inputs are the same iv, so we do a same inputs check here. But\n+  \/\/ in post loops, \"have_same_inputs\" is always true because all packs\n+  \/\/ are singleton. That's why a pack size check is also required.\n+  if (opd == iv() && (!have_same_inputs || p->size() == 1)) {\n@@ -2862,0 +2869,1 @@\n+    assert(VectorNode::is_populate_index_supported(iv_bt), \"Should support\");\n@@ -2875,1 +2883,1 @@\n-  if (same_inputs(p, opd_idx)) {\n+  if (have_same_inputs) {\n","filename":"src\/hotspot\/share\/opto\/superword.cpp","additions":11,"deletions":3,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -0,0 +1,56 @@\n+\n+\/*\n+ * Copyright (c) 2022, Arm Limited. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test\n+ * @bug 8286125\n+ * @summary C2: \"bad AD file\" with PopulateIndex on x86_64\n+ *\n+ * @run main\/othervm -Xbatch -XX:MaxVectorSize=16 compiler.vectorization.TestReplicateLoopIV\n+ *\/\n+\n+package compiler.vectorization;\n+\n+public class TestReplicateLoopIV {\n+\n+    public static long[] arr = new long[400];\n+\n+    public static void bar() {\n+        for (int i = 304; i > 15; i -= 3) {\n+            int c = 16;\n+            do {\n+                for (int t = 1; t < 1; t++) {}\n+                arr[c + 1] >>= i;\n+            } while (--c > 0);\n+        }\n+    }\n+\n+    public static void main(String[] args) {\n+        int iter = 100000;\n+        while (iter-- > 0) {\n+            bar();\n+        }\n+    }\n+}\n+\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorization\/TestReplicateLoopIV.java","additions":56,"deletions":0,"binary":false,"changes":56,"status":"added"}]}