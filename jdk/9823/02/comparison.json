{"files":[{"patch":"@@ -463,2 +463,10 @@\n-      FileMapInfo::fail_continue(\"A jar file is not the one used while building\"\n-                                 \" the shared archive file: %s\", name);\n+      const char* bad_jar_msg = \"A jar file is not the one used while building the shared archive file:\";\n+      FileMapInfo::fail_continue(\"%s %s\", bad_jar_msg, name);\n+      if (!log_is_enabled(Info, cds)) {\n+        log_warning(cds)(\"%s %s\", bad_jar_msg, name);\n+      }\n+      if (_timestamp != st.st_mtime) {\n+        log_warning(cds)(\"%s timestamp has changed.\", name);\n+      } else {\n+        log_warning(cds)(\"%s size has changed.\", name);\n+      }\n@@ -1055,1 +1063,5 @@\n-      fail_continue(\"shared class paths mismatch (hint: enable -Xlog:class+path=info to diagnose the failure)\");\n+      const char* mismatch_msg = \"shared class paths mismatch (hint: enable -Xlog:class+path=info to diagnose the failure)\";\n+      fail_continue(\"%s\", mismatch_msg);\n+      if (!log_is_enabled(Info, cds) && !log_is_enabled(Info, class, path)) {\n+        log_warning(cds)(\"%s\", mismatch_msg);\n+      }\n","filename":"src\/hotspot\/share\/cds\/filemap.cpp","additions":15,"deletions":3,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,0 +43,2 @@\n+    String unableToUseMsg = \"Unable to use shared archive\";\n+    String mismatchMsg = \"shared class paths mismatch (hint: enable -Xlog:class+path=info to diagnose the failure)\";\n@@ -52,2 +54,6 @@\n-        .assertAbnormalExit(\"Unable to use shared archive\",\n-                            \"shared class paths mismatch\");\n+        .assertAbnormalExit(unableToUseMsg, mismatchMsg);\n+\n+    \/\/ Run with -Xshare:auto and without CDS logging enabled, the mismatch message\n+    \/\/ should stil be there.\n+    OutputAnalyzer output = TestCommon.execAuto(\"Hello\");\n+    output.shouldContain(mismatchMsg);\n@@ -63,2 +69,11 @@\n-        .assertAbnormalExit(\"Unable to use shared archive\",\n-                            \"shared class paths mismatch\");\n+        .assertAbnormalExit(unableToUseMsg, mismatchMsg);\n+\n+    \/\/ modify the timestamp of the jar2\n+    (new File(jar2.toString())).setLastModified(System.currentTimeMillis() + 2000);\n+\n+    \/\/ Run with -Xshare:auto and without CDS logging enabled, the \"timestamp has changed\"\n+    \/\/ message should be there.\n+    output = TestCommon.execAuto(\n+        \"-cp\", jars, \"Hello\");\n+    output.shouldMatch(\".warning..cds. A jar file is not the one used while building the shared archive file:.*jar2.jar\")\n+          .shouldMatch(\".warning..cds.*jar2.jar timestamp has changed.\");\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/WrongClasspath.java","additions":20,"deletions":5,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -63,0 +63,2 @@\n+        String topArchiveMsg = \"The top archive failed to load\";\n+\n@@ -74,1 +76,26 @@\n-          .assertNormalExit(\"The top archive failed to load\");\n+          .assertNormalExit(topArchiveMsg);\n+\n+        \/\/ Turn off all CDS logging, the \"shared class paths mismatch\" warning\n+        \/\/ message should still be there.\n+        run2_WB(baseArchiveName, topArchiveName,\n+                \"-Xshare:auto\",\n+                \"-cp\", wrongJar, mainClass,\n+                \"assertShared:java.lang.Object\",  \/\/ base archive still useable\n+                \"assertNotShared:GenericTestApp\") \/\/ but top archive is not useable\n+          .assertNormalExit(topArchiveMsg,\n+                            \"[warning][cds] shared class paths mismatch (hint: enable -Xlog:class+path=info to diagnose the failure)\");\n+\n+        \/\/ modify the timestamp of appJar\n+        (new File(appJar.toString())).setLastModified(System.currentTimeMillis() + 2000);\n+\n+        \/\/ Without CDS logging enabled, the \"timestamp has changed\" message should\n+        \/\/ be there.\n+        run2_WB(baseArchiveName, topArchiveName,\n+                \"-Xshare:auto\",\n+                \"-cp\", appJar, mainClass,\n+                \"assertShared:java.lang.Object\",  \/\/ base archive still useable\n+                \"assertNotShared:GenericTestApp\") \/\/ but top archive is not useable\n+          .assertNormalExit(output -> {\n+              output.shouldContain(topArchiveMsg);\n+              output.shouldMatch(\".warning..cds. A jar file is not the one used while building the shared archive file:.*GenericTestApp.jar\");\n+              output.shouldMatch(\".warning..cds.*GenericTestApp.jar timestamp has changed.\");});\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/WrongTopClasspath.java","additions":28,"deletions":1,"binary":false,"changes":29,"status":"modified"}]}