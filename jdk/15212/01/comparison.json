{"files":[{"patch":"@@ -1575,0 +1575,7 @@\n+            \/\/ Check that input data is long enough to fit the expected tag.\n+            if (len < 0) {\n+                throw new AEADBadTagException(\"Input data too short to \" +\n+                    \"contain an expected tag length of \" + tagLenBytes +\n+                    \"bytes\");\n+            }\n+\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/GaloisCounterMode.java","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -0,0 +1,58 @@\n+\/*\n+ * Copyright (c) 2023, Alphabet LLC. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8314045\n+ * @summary ArithmeticException in GaloisCounterMode\n+ *\/\n+\n+import java.nio.ByteBuffer;\n+\n+import javax.crypto.AEADBadTagException;\n+import javax.crypto.Cipher;\n+import javax.crypto.spec.GCMParameterSpec;\n+import javax.crypto.spec.SecretKeySpec;\n+\n+public class GCMShortInput {\n+\n+    public static void main(String args[]) throws Exception {\n+        SecretKeySpec keySpec =\n+                new SecretKeySpec(\n+                        new byte[] {\n+                            88, 26, 43, -100, -24, -29, -70, 10, 34, -85, 52, 101, 45, -68, -105,\n+                            -123\n+                        },\n+                        \"AES\");\n+        GCMParameterSpec params =\n+                new GCMParameterSpec(8 * 16, new byte[] {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0});\n+        Cipher cipher = Cipher.getInstance(\"AES\/GCM\/NoPadding\");\n+        cipher.init(Cipher.DECRYPT_MODE, keySpec, params);\n+        try {\n+            cipher.doFinal(ByteBuffer.allocate(0), ByteBuffer.allocate(0));\n+            throw new AssertionError(\"AEADBadTagException expected\");\n+        } catch (AEADBadTagException e) {\n+            \/\/ expected\n+        }\n+    }\n+}\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/Cipher\/AEAD\/GCMShortInput.java","additions":58,"deletions":0,"binary":false,"changes":58,"status":"added"}]}