{"files":[{"patch":"@@ -27,1 +27,1 @@\n- * @summary Confirm that BuddhistCalendar's add(), roll() and toString()\n+ * @summary Confirm that BuddhistCalendar's add(), roll(), set(), and toString()\n@@ -61,2 +61,4 @@\n-    \/\/ Test some add values for the BuddhistCalendar. Compare the same field\n-    \/\/ as the one added.\n+    \/*\n+     * Test some add values for the BuddhistCalendar. This test compares the same field\n+     * as the one added.\n+     *\/\n@@ -73,0 +75,4 @@\n+    \/*\n+     * Given in the format: Calendar, amount to add, and field to add.\n+     * Test adding of positive and negative year values.\n+     *\/\n@@ -80,2 +86,4 @@\n-    \/\/ Test some add values for the BuddhistCalendar. Compare a bigger field\n-    \/\/ (year) than the one added (month). Larger field should roll over.\n+    \/*\n+     * Test some add values for the BuddhistCalendar. Compare a bigger field\n+     * (year) than the one added (month). Larger field should roll over.\n+     *\/\n@@ -92,0 +100,4 @@\n+    \/*\n+     * Given in the format: Calendar, amount to add, and field to add.\n+     * Test adding of positive and negative month values.\n+     *\/\n@@ -99,2 +111,4 @@\n-    \/\/ Test some roll values for the BuddhistCalendar. Compare same field\n-    \/\/ that was rolled, value should change.\n+    \/*\n+     * Test some roll values for the BuddhistCalendar. Compare same field\n+     * that was rolled, value should change.\n+     *\/\n@@ -110,0 +124,4 @@\n+    \/*\n+     * Given in the format: Calendar, amount to roll, and field to roll.\n+     * Test rolling of positive and negative year values.\n+     *\/\n@@ -117,3 +135,5 @@\n-    \/\/ Set some calendar values and roll, however, measure a different\n-    \/\/ Field than the field that was rolled. Rolling should not change the\n-    \/\/ larger field.\n+    \/*\n+     * Set some calendar values and roll, however, measure a different\n+     * field than the field that was rolled. Rolling should not change the\n+     * larger field.\n+     *\/\n@@ -129,0 +149,4 @@\n+    \/*\n+     * Given in the format: Calendar, amount to roll, and field to roll.\n+     * Test rolling of positive and negative week_of_year values.\n+     *\/\n@@ -211,1 +235,1 @@\n-    \/\/ Utility methods to get Buddhist calendars ----\n+    \/\/ Utility to get a new Buddhist Calendar Builder (to allow setting of other values)\n@@ -216,0 +240,1 @@\n+    \/\/ Utility to get a new Buddhist calendar\n","filename":"test\/jdk\/java\/util\/Calendar\/BuddhistCalendarTest.java","additions":36,"deletions":11,"binary":false,"changes":47,"status":"modified"},{"patch":"@@ -39,0 +39,1 @@\n+    \/\/ Extend GregorianCalendar to check the protected value of isTimeSet\n@@ -50,0 +51,1 @@\n+    \/\/ Check the value of isTimeStillSet() after calling computeTime()\n@@ -51,1 +53,1 @@\n-    public void test() {\n+    public void validateIsTimeSetTest() {\n","filename":"test\/jdk\/java\/util\/Calendar\/Bug4766302.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -41,2 +41,4 @@\n-    \/\/ Ensure modifying the original GregorianCalendar does not\n-    \/\/ modify the cloned one as well\n+    \/*\n+     * Ensure modifying the original GregorianCalendar does not\n+     * modify the cloned one as well\n+     *\/\n","filename":"test\/jdk\/java\/util\/Calendar\/bug4028518.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-    \/\/ Should set to january 1st properly\n+    \/\/ GregorianCalendar should be able to date to january 1st properly\n@@ -44,1 +44,1 @@\n-    public void DayOfYearIsOneTest() {\n+    public void dayOfYearIsOneTest() {\n","filename":"test\/jdk\/java\/util\/Calendar\/bug4100311.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n- * @library \/java\/text\/testlib\n@@ -49,0 +48,1 @@\n+    \/\/ Save JVM default Locale and TimeZone\n@@ -55,0 +55,1 @@\n+    \/\/ Restore JVM default Locale and TimeZone\n@@ -61,1 +62,5 @@\n-    \/\/ Call getTimeInMillis() and setTimeInMillis()\n+    \/*\n+     * Test getTimeInMillis() and setTimeInMillis(). Compare a Calendar\n+     * set with a traditional date to one set using setTimeInMillis(),\n+     * where both Calendars should be of equal times.\n+     *\/\n@@ -71,0 +76,1 @@\n+        \/\/ Build the second calendar using the getTimeInMillis of the first\n@@ -94,0 +100,1 @@\n+    \/\/ Utility to convert value to format of expected milisecond value\n","filename":"test\/jdk\/java\/util\/Calendar\/bug4243802.java","additions":9,"deletions":2,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n- * @library \/java\/text\/testlib\n@@ -52,0 +51,1 @@\n+    \/\/ Save JVM default Locale and TimeZone\n@@ -57,0 +57,1 @@\n+    \/\/ Restore JVM default Locale and TimeZone\n@@ -62,0 +63,1 @@\n+    \/\/ Test that a serialized GregorianCalendar has the expected values\n","filename":"test\/jdk\/java\/util\/Calendar\/bug4316678.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n- * @library \/java\/text\/testlib\n@@ -67,0 +66,1 @@\n+    \/\/ Save JVM default Locale and TimeZone\n@@ -72,0 +72,1 @@\n+    \/\/ Restore JVM default Locale and TimeZone\n@@ -77,1 +78,4 @@\n-    \/\/ Set March 3, A.D. 2 and test add\n+    \/*\n+     * Set GregorianCalendar to (March 3, A.D. 2) and test adding\n+     * to the month field. Ensure that the added field is as expected.\n+     *\/\n@@ -87,0 +91,1 @@\n+    \/\/ Given in format: (A.D.) GregorianCalendar, amount to add\n@@ -93,2 +98,4 @@\n-\n-    \/\/ Set March 10, 2 B.C. and test add\n+    \/*\n+     * Set GregorianCalendar to (March 10, 2 B.C.) and test adding\n+     * to the month field. Ensure that the added field is as expected.\n+     *\/\n@@ -105,0 +112,1 @@\n+    \/\/ Given in format: (B.C.) GregorianCalendar, amount to add\n@@ -118,0 +126,1 @@\n+    \/\/ Expected ERA, YEAR, and MONTH combinations\n","filename":"test\/jdk\/java\/util\/Calendar\/bug4372743.java","additions":13,"deletions":4,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n- * @library \/java\/text\/testlib\n@@ -51,1 +50,1 @@\n-    \/\/ Ensure IAE not thrown\n+    \/\/ Ensure IAE not thrown for date: 12-29-00\n@@ -64,1 +63,1 @@\n-    \/\/ Ensure IAE not thrown\n+    \/\/ Ensure IAE not thrown for date: 12-31-00. Validate expected values.\n","filename":"test\/jdk\/java\/util\/Calendar\/bug4401223.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -50,3 +50,5 @@\n-    private static final String goldenData1 = \"27-28 28-29 29-30 30-31 31-1 1-2 2-3 \";\n-    private static final String goldenData2 = \"27-28 28-29 29-30 30-31 31-25 25-26 26-27 \";\n-    private static final String goldenData3 = \"1-8 8-15 15-22 22-29 29-1 1-8 8-15 \";\n+    \n+    \/\/ goldenData are used to generate the expected values\n+    private static final String expectedDayOfYearData = \"27-28 28-29 29-30 30-31 31-1 1-2 2-3 \";\n+    private static final String expectedDayOfWeekData = \"27-28 28-29 29-30 30-31 31-25 25-26 26-27 \";\n+    private static final String expectedDayOfWeekInMonthData = \"1-8 8-15 15-22 22-29 29-1 1-8 8-15 \";\n@@ -56,0 +58,1 @@\n+    \/\/ Save JVM default Locale and TimeZone\n@@ -62,0 +65,1 @@\n+    \/\/ Restore JVM default Locale and TimeZone\n@@ -68,0 +72,5 @@\n+    \/*\n+     * Test some roll values during transition (DAY_OF_YEAR field). Uses\n+     * the boolean roll method. Roll multiple times and attach the returned\n+     * values to a long string which is then compared to the expected data.\n+     *\/\n@@ -76,1 +85,1 @@\n-        assertEquals(goldenData1, actualRollData.toString(),\n+        assertEquals(expectedDayOfYearData, actualRollData.toString(),\n@@ -80,0 +89,5 @@\n+    \/*\n+     * Test some roll values during transition (DAY_OF_WEEK field). Uses\n+     * the boolean roll method. Roll multiple times and attach the returned\n+     * values to a long string which is then compared to the expected data.\n+     *\/\n@@ -89,1 +103,1 @@\n-        assertEquals(goldenData2, actualRollData.toString(),\n+        assertEquals(expectedDayOfWeekData, actualRollData.toString(),\n@@ -93,0 +107,5 @@\n+    \/*\n+     * Test some roll values during transition (DAY_OF_WEEK_IN_MONTH field). Uses\n+     * the boolean roll method. Roll multiple times and attach the returned\n+     * values to a long string which is then compared to the expected data.\n+     *\/\n@@ -101,1 +120,1 @@\n-        assertEquals(goldenData3, actualRollData.toString(),\n+        assertEquals(expectedDayOfWeekInMonthData, actualRollData.toString(),\n","filename":"test\/jdk\/java\/util\/Calendar\/bug4514831.java","additions":25,"deletions":6,"binary":false,"changes":31,"status":"modified"}]}