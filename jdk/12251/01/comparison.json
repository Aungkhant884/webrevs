{"files":[{"patch":"@@ -53,5 +53,5 @@\n-  _pre_barrier_c1_runtime_code_blob(NULL),\n-  _load_reference_barrier_strong_rt_code_blob(NULL),\n-  _load_reference_barrier_strong_native_rt_code_blob(NULL),\n-  _load_reference_barrier_weak_rt_code_blob(NULL),\n-  _load_reference_barrier_phantom_rt_code_blob(NULL) {}\n+  _pre_barrier_c1_runtime_code_blob(nullptr),\n+  _load_reference_barrier_strong_rt_code_blob(nullptr),\n+  _load_reference_barrier_strong_native_rt_code_blob(nullptr),\n+  _load_reference_barrier_weak_rt_code_blob(nullptr),\n+  _load_reference_barrier_phantom_rt_code_blob(nullptr) {}\n@@ -100,1 +100,1 @@\n-    slow = new ShenandoahPreBarrierStub(addr_opr, pre_val, pre_val_patch_code, info ? new CodeEmitInfo(info) : NULL);\n+    slow = new ShenandoahPreBarrierStub(addr_opr, pre_val, pre_val_patch_code, info ? new CodeEmitInfo(info) : nullptr);\n@@ -249,1 +249,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -263,1 +263,1 @@\n-    return NULL;\n+    return nullptr;\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/c1\/shenandoahBarrierSetC1.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -56,1 +56,1 @@\n-    _patch_code(lir_patch_none), _info(NULL)\n+    _patch_code(lir_patch_none), _info(nullptr)\n@@ -72,1 +72,1 @@\n-      if (_info != NULL)\n+      if (_info != nullptr)\n@@ -145,1 +145,1 @@\n-    : LIR_Op(lir_none, result, NULL)  \/\/ no info\n+    : LIR_Op(lir_none, result, nullptr)  \/\/ no info\n@@ -208,1 +208,1 @@\n-    assert(_pre_barrier_c1_runtime_code_blob != NULL, \"\");\n+    assert(_pre_barrier_c1_runtime_code_blob != nullptr, \"\");\n@@ -213,1 +213,1 @@\n-    assert(_load_reference_barrier_strong_rt_code_blob != NULL, \"\");\n+    assert(_load_reference_barrier_strong_rt_code_blob != nullptr, \"\");\n@@ -218,1 +218,1 @@\n-    assert(_load_reference_barrier_strong_native_rt_code_blob != NULL, \"\");\n+    assert(_load_reference_barrier_strong_native_rt_code_blob != nullptr, \"\");\n@@ -223,1 +223,1 @@\n-    assert(_load_reference_barrier_weak_rt_code_blob != NULL, \"\");\n+    assert(_load_reference_barrier_weak_rt_code_blob != nullptr, \"\");\n@@ -228,1 +228,1 @@\n-    assert(_load_reference_barrier_phantom_rt_code_blob != NULL, \"\");\n+    assert(_load_reference_barrier_phantom_rt_code_blob != nullptr, \"\");\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/c1\/shenandoahBarrierSetC1.hpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -51,2 +51,2 @@\n-  : _iu_barriers(new (comp_arena) GrowableArray<ShenandoahIUBarrierNode*>(comp_arena, 8,  0, NULL)),\n-    _load_reference_barriers(new (comp_arena) GrowableArray<ShenandoahLoadReferenceBarrierNode*>(comp_arena, 8,  0, NULL)) {\n+  : _iu_barriers(new (comp_arena) GrowableArray<ShenandoahIUBarrierNode*>(comp_arena, 8,  0, nullptr)),\n+    _load_reference_barriers(new (comp_arena) GrowableArray<ShenandoahLoadReferenceBarrierNode*>(comp_arena, 8,  0, nullptr)) {\n@@ -110,1 +110,1 @@\n-  if (alloc == NULL) {\n+  if (alloc == nullptr) {\n@@ -126,1 +126,1 @@\n-      if (st_base == NULL) {\n+      if (st_base == nullptr) {\n@@ -166,1 +166,1 @@\n-        \/\/ Check that the initialization is storing NULL so that no previous store\n+        \/\/ Check that the initialization is storing null so that no previous store\n@@ -171,1 +171,1 @@\n-        if (captured_store == NULL || captured_store == st_init->zero_memory()) {\n+        if (captured_store == nullptr || captured_store == st_init->zero_memory()) {\n@@ -202,3 +202,3 @@\n-    assert(adr != NULL, \"where are loading from?\");\n-    assert(pre_val == NULL, \"loaded already?\");\n-    assert(val_type != NULL, \"need a type\");\n+    assert(adr != nullptr, \"where are loading from?\");\n+    assert(pre_val == nullptr, \"loaded already?\");\n+    assert(val_type != nullptr, \"need a type\");\n@@ -213,1 +213,1 @@\n-    assert(pre_val != NULL, \"must be loaded already\");\n+    assert(pre_val != nullptr, \"must be loaded already\");\n@@ -258,1 +258,1 @@\n-    \/\/ if (pre_val != NULL)\n+    \/\/ if (pre_val != nullptr)\n@@ -280,1 +280,1 @@\n-    } __ end_if();  \/\/ (pre_val != NULL)\n+    } __ end_if();  \/\/ (pre_val != nullptr)\n@@ -286,1 +286,1 @@\n-  if (ShenandoahSATBBarrier && adr != NULL) {\n+  if (ShenandoahSATBBarrier && adr != nullptr) {\n@@ -373,1 +373,1 @@\n-  if (otype != NULL && otype->is_con() &&\n+  if (otype != nullptr && otype->is_con() &&\n@@ -381,1 +381,1 @@\n-  if (btype != NULL) {\n+  if (btype != nullptr) {\n@@ -388,1 +388,1 @@\n-    if (itype != NULL) {\n+    if (itype != nullptr) {\n@@ -427,1 +427,1 @@\n-      \/\/ is_instof == 0 if base_oop == NULL\n+      \/\/ is_instof == 0 if base_oop == nullptr\n@@ -435,1 +435,1 @@\n-                               NULL \/* obj *\/, NULL \/* adr *\/, max_juint \/* alias_idx *\/, NULL \/* val *\/, NULL \/* val_type *\/,\n+                               nullptr \/* obj *\/, nullptr \/* adr *\/, max_juint \/* alias_idx *\/, nullptr \/* val *\/, nullptr \/* val_type *\/,\n@@ -515,1 +515,1 @@\n-                                 static_cast<const TypeOopPtr*>(val.type()), NULL \/* pre_val *\/, access.type());\n+                                 static_cast<const TypeOopPtr*>(val.type()), nullptr \/* pre_val *\/, access.type());\n@@ -542,1 +542,1 @@\n-    load = new ShenandoahLoadReferenceBarrierNode(NULL, load, decorators);\n+    load = new ShenandoahLoadReferenceBarrierNode(nullptr, load, decorators);\n@@ -582,1 +582,1 @@\n-                             NULL \/* obj *\/, NULL \/* adr *\/, max_juint \/* alias_idx *\/, NULL \/* val *\/, NULL \/* val_type *\/,\n+                             nullptr \/* obj *\/, nullptr \/* adr *\/, max_juint \/* alias_idx *\/, nullptr \/* val *\/, nullptr \/* val_type *\/,\n@@ -603,1 +603,1 @@\n-                                 NULL, NULL, max_juint, NULL, NULL,\n+                                 nullptr, nullptr, max_juint, nullptr, nullptr,\n@@ -610,1 +610,1 @@\n-    Node* load_store = NULL;\n+    Node* load_store = nullptr;\n@@ -639,1 +639,1 @@\n-    load_store = kit->gvn().transform(new ShenandoahLoadReferenceBarrierNode(NULL, load_store, access.decorators()));\n+    load_store = kit->gvn().transform(new ShenandoahLoadReferenceBarrierNode(nullptr, load_store, access.decorators()));\n@@ -651,1 +651,1 @@\n-                                 NULL, NULL, max_juint, NULL, NULL,\n+                                 nullptr, nullptr, max_juint, nullptr, nullptr,\n@@ -657,1 +657,1 @@\n-    Node* load_store = NULL;\n+    Node* load_store = nullptr;\n@@ -707,1 +707,1 @@\n-    result = kit->gvn().transform(new ShenandoahLoadReferenceBarrierNode(NULL, result, access.decorators()));\n+    result = kit->gvn().transform(new ShenandoahLoadReferenceBarrierNode(nullptr, result, access.decorators()));\n@@ -709,1 +709,1 @@\n-                                 NULL, NULL, max_juint, NULL, NULL,\n+                                 nullptr, nullptr, max_juint, nullptr, nullptr,\n@@ -727,1 +727,1 @@\n-  if (call->_name == NULL) {\n+  if (call->_name == nullptr) {\n@@ -737,1 +737,1 @@\n-  if (c == NULL) {\n+  if (c == nullptr) {\n@@ -786,1 +786,1 @@\n-  if (src_type->isa_instptr() != NULL) {\n+  if (src_type->isa_instptr() != nullptr) {\n@@ -835,1 +835,1 @@\n-    const TypePtr* gc_state_adr_type = NULL; \/\/ debug-mode-only argument\n+    const TypePtr* gc_state_adr_type = nullptr; \/\/ debug-mode-only argument\n@@ -876,1 +876,1 @@\n-                                 phase->basictype2arraycopy(T_LONG, NULL, NULL, true, name, true),\n+                                 phase->basictype2arraycopy(T_LONG, nullptr, nullptr, true, name, true),\n@@ -991,1 +991,1 @@\n-      if (x == NULL || x == compile->top()) continue;\n+      if (x == nullptr || x == compile->top()) continue;\n@@ -1031,1 +1031,1 @@\n-                assert(load_ctrl != NULL && if_ctrl == load_ctrl, \"controls must match\");\n+                assert(load_ctrl != nullptr && if_ctrl == load_ctrl, \"controls must match\");\n@@ -1060,1 +1060,1 @@\n-    \/\/ If one input is NULL, then step over the strong LRB barriers on the other input\n+    \/\/ If one input is null, then step over the strong LRB barriers on the other input\n@@ -1084,1 +1084,1 @@\n-             n->in(0) != NULL &&\n+             n->in(0) != nullptr &&\n@@ -1094,1 +1094,1 @@\n-      if (dist < 0) return NULL;\n+      if (dist < 0) return nullptr;\n@@ -1099,1 +1099,1 @@\n-      if (!dom) return NULL;\n+      if (!dom) return nullptr;\n@@ -1104,1 +1104,1 @@\n-      return NULL;\n+      return nullptr;\n@@ -1110,1 +1110,1 @@\n-  return NULL;\n+  return nullptr;\n@@ -1208,1 +1208,1 @@\n-      conn_graph->add_local_var_and_edge(n, PointsToNode::NoEscape, adr, NULL);\n+      conn_graph->add_local_var_and_edge(n, PointsToNode::NoEscape, adr, nullptr);\n@@ -1217,1 +1217,1 @@\n-      conn_graph->add_local_var_and_edge(n, PointsToNode::NoEscape, n->in(1), NULL);\n+      conn_graph->add_local_var_and_edge(n, PointsToNode::NoEscape, n->in(1), nullptr);\n@@ -1220,1 +1220,1 @@\n-      conn_graph->add_local_var_and_edge(n, PointsToNode::NoEscape, n->in(ShenandoahLoadReferenceBarrierNode::ValueIn), NULL);\n+      conn_graph->add_local_var_and_edge(n, PointsToNode::NoEscape, n->in(ShenandoahLoadReferenceBarrierNode::ValueIn), nullptr);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/c2\/shenandoahBarrierSetC2.cpp","additions":44,"deletions":44,"binary":false,"changes":88,"status":"modified"},{"patch":"@@ -161,1 +161,1 @@\n-      if (trace) {tty->print_cr(\"NULL\");}\n+      if (trace) {tty->print_cr(\"null\");}\n@@ -268,1 +268,1 @@\n-  if (n1 != NULL) {\n+  if (n1 != nullptr) {\n@@ -271,1 +271,1 @@\n-  if (n2 != NULL) {\n+  if (n2 != nullptr) {\n@@ -465,1 +465,1 @@\n-        Node* dest = NULL;\n+        Node* dest = nullptr;\n@@ -600,1 +600,1 @@\n-          if (n->in(j) != NULL && n->in(j)->bottom_type()->make_ptr() &&\n+          if (n->in(j) != nullptr && n->in(j)->bottom_type()->make_ptr() &&\n@@ -611,1 +611,1 @@\n-          if (n->in(j) != NULL && n->in(j)->bottom_type()->make_ptr() &&\n+          if (n->in(j) != nullptr && n->in(j)->bottom_type()->make_ptr() &&\n@@ -621,1 +621,1 @@\n-      if (verify_no_useless_barrier && sfpt->jvms() != NULL) {\n+      if (verify_no_useless_barrier && sfpt->jvms() != nullptr) {\n@@ -670,1 +670,1 @@\n-        if (m->in(i) != NULL && phase->ctrl_or_self(m->in(i)) == c) {\n+        if (m->in(i) != nullptr && phase->ctrl_or_self(m->in(i)) == c) {\n@@ -687,1 +687,1 @@\n-  Node* res = NULL;\n+  Node* res = nullptr;\n@@ -709,1 +709,1 @@\n-  Node* iffproj = NULL;\n+  Node* iffproj = nullptr;\n@@ -746,1 +746,1 @@\n-        if (c->as_Proj()->is_uncommon_trap_if_pattern(Deoptimization::Reason_none) != NULL) {\n+        if (c->as_Proj()->is_uncommon_trap_if_pattern(Deoptimization::Reason_none) != nullptr) {\n@@ -752,1 +752,1 @@\n-          if (iffproj == NULL) {\n+          if (iffproj == nullptr) {\n@@ -781,1 +781,1 @@\n-      return NULL;\n+      return nullptr;\n@@ -793,1 +793,1 @@\n-  Node* mem = NULL;\n+  Node* mem = nullptr;\n@@ -797,1 +797,1 @@\n-      for (DUIterator_Fast imax, i = c->fast_outs(imax); i < imax && mem == NULL; i++) {\n+      for (DUIterator_Fast imax, i = c->fast_outs(imax); i < imax && mem == nullptr; i++) {\n@@ -806,1 +806,1 @@\n-      if (c->is_Call() && c->as_Call()->adr_type() != NULL) {\n+      if (c->is_Call() && c->as_Call()->adr_type() != nullptr) {\n@@ -809,1 +809,1 @@\n-        if (projs.fallthrough_memproj != NULL) {\n+        if (projs.fallthrough_memproj != nullptr) {\n@@ -811,1 +811,1 @@\n-            if (projs.catchall_memproj == NULL) {\n+            if (projs.catchall_memproj == nullptr) {\n@@ -824,1 +824,1 @@\n-          if (proj != NULL &&\n+          if (proj != nullptr &&\n@@ -836,1 +836,1 @@\n-              assert(mem == NULL, \"only one proj\");\n+              assert(mem == nullptr, \"only one proj\");\n@@ -840,1 +840,1 @@\n-        assert(!c->is_Call() || c->as_Call()->adr_type() != NULL || mem == NULL, \"no mem projection expected\");\n+        assert(!c->is_Call() || c->as_Call()->adr_type() != nullptr || mem == nullptr, \"no mem projection expected\");\n@@ -844,1 +844,1 @@\n-  } while (mem == NULL);\n+  } while (mem == nullptr);\n@@ -877,1 +877,1 @@\n-                                        DEBUG_ONLY(phase->C->get_adr_type(Compile::AliasIdxRaw)) NOT_DEBUG(NULL),\n+                                        DEBUG_ONLY(phase->C->get_adr_type(Compile::AliasIdxRaw)) NOT_DEBUG(nullptr),\n@@ -943,1 +943,1 @@\n-                                       DEBUG_ONLY(phase->C->get_adr_type(Compile::AliasIdxRaw)) NOT_DEBUG(NULL),\n+                                       DEBUG_ONLY(phase->C->get_adr_type(Compile::AliasIdxRaw)) NOT_DEBUG(nullptr),\n@@ -974,2 +974,2 @@\n-  address calladdr = NULL;\n-  const char* name = NULL;\n+  address calladdr = nullptr;\n+  const char* name = nullptr;\n@@ -1044,1 +1044,1 @@\n-      if (in != NULL && phase->has_ctrl(in) && phase->get_ctrl(in) == ctrl) {\n+      if (in != nullptr && phase->has_ctrl(in) && phase->get_ctrl(in) == ctrl) {\n@@ -1079,1 +1079,1 @@\n-  Node* region = NULL;\n+  Node* region = nullptr;\n@@ -1086,1 +1086,1 @@\n-  assert(region != NULL, \"\");\n+  assert(region != nullptr, \"\");\n@@ -1128,2 +1128,2 @@\n-    CallStaticJavaNode* unc = NULL;\n-    Node* unc_ctrl = NULL;\n+    CallStaticJavaNode* unc = nullptr;\n+    Node* unc_ctrl = nullptr;\n@@ -1135,1 +1135,1 @@\n-          u->in(0) != NULL &&\n+          u->in(0) != nullptr &&\n@@ -1156,1 +1156,1 @@\n-          assert(branch == NULL || branch == NodeSentinel, \"was not looking for a branch\");\n+          assert(branch == nullptr || branch == NodeSentinel, \"was not looking for a branch\");\n@@ -1187,1 +1187,1 @@\n-            if (in != NULL) {\n+            if (in != nullptr) {\n@@ -1340,1 +1340,1 @@\n-    Node* raw_mem_for_ctrl = fixer.find_mem(ctrl, NULL);\n+    Node* raw_mem_for_ctrl = fixer.find_mem(ctrl, nullptr);\n@@ -1344,2 +1344,2 @@\n-    Node* heap_stable_ctrl = NULL;\n-    Node* null_ctrl = NULL;\n+    Node* heap_stable_ctrl = nullptr;\n+    Node* null_ctrl = nullptr;\n@@ -1348,1 +1348,1 @@\n-    assert(val->bottom_type()->make_oopptr()->const_oop() == NULL, \"expect non-constant\");\n+    assert(val->bottom_type()->make_oopptr()->const_oop() == nullptr, \"expect non-constant\");\n@@ -1366,1 +1366,1 @@\n-    \/\/ Test for in-cset, unless it's a native-LRB. Native LRBs need to return NULL\n+    \/\/ Test for in-cset, unless it's a native-LRB. Native LRBs need to return null\n@@ -1369,1 +1369,1 @@\n-    Node* not_cset_ctrl = NULL;\n+    Node* not_cset_ctrl = nullptr;\n@@ -1373,1 +1373,1 @@\n-    if (not_cset_ctrl != NULL) {\n+    if (not_cset_ctrl != nullptr) {\n@@ -1385,1 +1385,1 @@\n-    Node* result_mem = NULL;\n+    Node* result_mem = nullptr;\n@@ -1472,3 +1472,3 @@\n-    Node* raw_mem_for_ctrl = fixer.find_mem(ctrl, NULL);\n-    Node* heap_stable_ctrl = NULL;\n-    Node* null_ctrl = NULL;\n+    Node* raw_mem_for_ctrl = fixer.find_mem(ctrl, nullptr);\n+    Node* heap_stable_ctrl = nullptr;\n+    Node* null_ctrl = nullptr;\n@@ -1491,1 +1491,1 @@\n-    Node* reg2_ctrl = NULL;\n+    Node* reg2_ctrl = nullptr;\n@@ -1493,1 +1493,1 @@\n-    if (null_ctrl != NULL) {\n+    if (null_ctrl != nullptr) {\n@@ -1521,1 +1521,1 @@\n-    if (reg2_ctrl == NULL) reg2_ctrl = queue_full_iff;\n+    if (reg2_ctrl == nullptr) reg2_ctrl = queue_full_iff;\n@@ -1601,1 +1601,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -1628,3 +1628,3 @@\n-      if (t != NULL && f == NULL) return t;\n-      if (t == NULL && f != NULL) return f;\n-      if (t != NULL && t == f)    return t;\n+      if (t != nullptr && f == nullptr) return t;\n+      if (t == nullptr && f != nullptr) return f;\n+      if (t != nullptr && t == f)    return t;\n@@ -1635,1 +1635,1 @@\n-      Node* addr = NULL;\n+      Node* addr = nullptr;\n@@ -1638,1 +1638,1 @@\n-        if (addr == NULL) {\n+        if (addr == nullptr) {\n@@ -1680,1 +1680,1 @@\n-    Node* mem_ctrl = NULL;\n+    Node* mem_ctrl = nullptr;\n@@ -1774,1 +1774,1 @@\n-  IfNode* unswitch_iff = NULL;\n+  IfNode* unswitch_iff = nullptr;\n@@ -1849,1 +1849,1 @@\n-          loop->_child == NULL &&\n+          loop->_child == nullptr &&\n@@ -1856,1 +1856,1 @@\n-          if (iff != NULL) {\n+          if (iff != nullptr) {\n@@ -1883,1 +1883,1 @@\n-ShenandoahIUBarrierNode::ShenandoahIUBarrierNode(Node* val) : Node(NULL, val) {\n+ShenandoahIUBarrierNode::ShenandoahIUBarrierNode(Node* val) : Node(nullptr, val) {\n@@ -1888,1 +1888,1 @@\n-  if (in(1) == NULL || in(1)->is_top()) {\n+  if (in(1) == nullptr || in(1)->is_top()) {\n@@ -1899,1 +1899,1 @@\n-  if (in(1) == NULL) {\n+  if (in(1) == nullptr) {\n@@ -1913,1 +1913,1 @@\n-  if (n == NULL ||\n+  if (n == nullptr ||\n@@ -1917,1 +1917,1 @@\n-      (n->bottom_type()->make_oopptr() != NULL && n->bottom_type()->make_oopptr()->const_oop() != NULL)) {\n+      (n->bottom_type()->make_oopptr() != nullptr && n->bottom_type()->make_oopptr()->const_oop() != nullptr)) {\n@@ -1929,1 +1929,1 @@\n-    if (n == NULL) {\n+    if (n == nullptr) {\n@@ -1933,1 +1933,1 @@\n-    } else if (n->bottom_type()->make_oopptr() != NULL && n->bottom_type()->make_oopptr()->const_oop() != NULL) {\n+    } else if (n->bottom_type()->make_oopptr() != nullptr && n->bottom_type()->make_oopptr()->const_oop() != nullptr) {\n@@ -1946,1 +1946,1 @@\n-  return NULL;\n+  return nullptr;\n@@ -1959,1 +1959,1 @@\n-    if (igvn == NULL) {\n+    if (igvn == nullptr) {\n@@ -1971,1 +1971,1 @@\n-            if (m != NULL) {\n+            if (m != nullptr) {\n@@ -1982,1 +1982,1 @@\n-        Node* orig_n = NULL;\n+        Node* orig_n = nullptr;\n@@ -2007,1 +2007,1 @@\n-    if (in != NULL && in->Opcode() == Op_Halt && in->in(0)->is_Proj() && in->in(0)->in(0)->is_NeverBranch()) {\n+    if (in != nullptr && in->Opcode() == Op_Halt && in->in(0)->is_Proj() && in->in(0)->in(0)->is_NeverBranch()) {\n@@ -2028,1 +2028,1 @@\n-      Node* mem = NULL;\n+      Node* mem = nullptr;\n@@ -2069,1 +2069,1 @@\n-      if (mem == NULL) {\n+      if (mem == nullptr) {\n@@ -2122,1 +2122,1 @@\n-      if (_memory_nodes[c->_idx] != NULL) {\n+      if (_memory_nodes[c->_idx] != nullptr) {\n@@ -2153,1 +2153,1 @@\n-        Node* unique = NULL;\n+        Node* unique = nullptr;\n@@ -2156,2 +2156,2 @@\n-          assert(m != NULL || (c->is_Loop() && j == LoopNode::LoopBackControl && iteration == 1) || _phase->C->has_irreducible_loop() || has_never_branch(_phase->C->root()), \"expect memory state\");\n-          if (m != NULL) {\n+          assert(m != nullptr || (c->is_Loop() && j == LoopNode::LoopBackControl && iteration == 1) || _phase->C->has_irreducible_loop() || has_never_branch(_phase->C->root()), \"expect memory state\");\n+          if (m != nullptr) {\n@@ -2161,1 +2161,1 @@\n-            } else if (unique == NULL) {\n+            } else if (unique == nullptr) {\n@@ -2170,1 +2170,1 @@\n-        assert(unique != NULL, \"empty phi???\");\n+        assert(unique != nullptr, \"empty phi???\");\n@@ -2172,1 +2172,1 @@\n-          if (prev_region != NULL && prev_region->is_Phi() && prev_region->in(0) == c) {\n+          if (prev_region != nullptr && prev_region->is_Phi() && prev_region->in(0) == c) {\n@@ -2177,2 +2177,2 @@\n-          Node* phi = NULL;\n-          if (prev_region != NULL && prev_region->is_Phi() && prev_region->in(0) == c && prev_region->_idx >= last) {\n+          Node* phi = nullptr;\n+          if (prev_region != nullptr && prev_region->is_Phi() && prev_region->in(0) == c && prev_region->_idx >= last) {\n@@ -2182,1 +2182,1 @@\n-              assert(m != NULL, \"expect memory state\");\n+              assert(m != nullptr, \"expect memory state\");\n@@ -2186,1 +2186,1 @@\n-            for (DUIterator_Fast jmax, j = c->fast_outs(jmax); j < jmax && phi == NULL; j++) {\n+            for (DUIterator_Fast jmax, j = c->fast_outs(jmax); j < jmax && phi == nullptr; j++) {\n@@ -2191,1 +2191,1 @@\n-                for (uint k = 1; k < c->req() && phi != NULL; k++) {\n+                for (uint k = 1; k < c->req() && phi != nullptr; k++) {\n@@ -2193,1 +2193,1 @@\n-                  assert(m != NULL, \"expect memory state\");\n+                  assert(m != nullptr, \"expect memory state\");\n@@ -2204,1 +2204,1 @@\n-                assert(m != NULL, \"expect memory state\");\n+                assert(m != nullptr, \"expect memory state\");\n@@ -2209,1 +2209,1 @@\n-          if (phi != NULL) {\n+          if (phi != nullptr) {\n@@ -2222,1 +2222,1 @@\n-      } else if (prev_mem == NULL || prev_mem->is_Phi() || ctrl_or_self(prev_mem) != c) {\n+      } else if (prev_mem == nullptr || prev_mem->is_Phi() || ctrl_or_self(prev_mem) != c) {\n@@ -2224,1 +2224,1 @@\n-        assert(m != NULL || c->Opcode() == Op_Halt, \"expect memory state\");\n+        assert(m != nullptr || c->Opcode() == Op_Halt, \"expect memory state\");\n@@ -2248,2 +2248,2 @@\n-      assert(n != NULL || c->unique_ctrl_out()->Opcode() == Op_Halt, \"expected memory state\");\n-      if (n != NULL && n->is_Phi() && n->_idx >= last && n->in(0) == c) {\n+      assert(n != nullptr || c->unique_ctrl_out()->Opcode() == Op_Halt, \"expected memory state\");\n+      if (n != nullptr && n->is_Phi() && n->_idx >= last && n->in(0) == c) {\n@@ -2258,1 +2258,1 @@\n-      assert(n != NULL || c->unique_ctrl_out()->Opcode() == Op_Halt, \"expected memory state\");\n+      assert(n != nullptr || c->unique_ctrl_out()->Opcode() == Op_Halt, \"expected memory state\");\n@@ -2277,1 +2277,1 @@\n-  Node* mem = NULL;\n+  Node* mem = nullptr;\n@@ -2281,1 +2281,1 @@\n-  Node* phi_mem = NULL;\n+  Node* phi_mem = nullptr;\n@@ -2286,1 +2286,1 @@\n-        assert(phi_mem == NULL || phi_mem->adr_type() == TypePtr::BOTTOM, \"\");\n+        assert(phi_mem == nullptr || phi_mem->adr_type() == TypePtr::BOTTOM, \"\");\n@@ -2289,2 +2289,2 @@\n-        assert(phi_mem == NULL || _phase->C->get_alias_index(phi_mem->adr_type()) == _alias, \"\");\n-        if (phi_mem == NULL) {\n+        assert(phi_mem == nullptr || _phase->C->get_alias_index(phi_mem->adr_type()) == _alias, \"\");\n+        if (phi_mem == nullptr) {\n@@ -2296,1 +2296,1 @@\n-  if (phi_mem == NULL) {\n+  if (phi_mem == nullptr) {\n@@ -2319,1 +2319,1 @@\n-              assert(mem == NULL || mem == m, \"several memory states\");\n+              assert(mem == nullptr || mem == m, \"several memory states\");\n@@ -2330,1 +2330,1 @@\n-    assert(mem != NULL, \"should have found safepoint\");\n+    assert(mem != nullptr, \"should have found safepoint\");\n@@ -2339,1 +2339,1 @@\n-  if (n->is_Proj() && n->in(0) != NULL && n->in(0)->is_Call()) {\n+  if (n->is_Proj() && n->in(0) != nullptr && n->in(0)->is_Call()) {\n@@ -2344,1 +2344,1 @@\n-    if (projs.catchall_memproj != NULL) {\n+    if (projs.catchall_memproj != nullptr) {\n@@ -2366,1 +2366,1 @@\n-  return m != NULL && get_ctrl(m) == c;\n+  return m != nullptr && get_ctrl(m) == c;\n@@ -2370,1 +2370,1 @@\n-  assert(n == NULL || _phase->ctrl_or_self(n) == ctrl, \"\");\n+  assert(n == nullptr || _phase->ctrl_or_self(n) == ctrl, \"\");\n@@ -2389,1 +2389,1 @@\n-         (!c->is_CatchProj() || mem == NULL || c->in(0)->in(0)->in(0) != get_ctrl(mem))) {\n+         (!c->is_CatchProj() || mem == nullptr || c->in(0)->in(0)->in(0) != get_ctrl(mem))) {\n@@ -2393,1 +2393,1 @@\n-  if (n != NULL && mem_is_valid(mem, c)) {\n+  if (n != nullptr && mem_is_valid(mem, c)) {\n@@ -2405,1 +2405,1 @@\n-               (!c->is_CatchProj() || mem == NULL || c->in(0)->in(0)->in(0) != get_ctrl(mem)));\n+               (!c->is_CatchProj() || mem == nullptr || c->in(0)->in(0)->in(0) != get_ctrl(mem)));\n@@ -2431,1 +2431,1 @@\n-    Node* prev = NULL;\n+    Node* prev = nullptr;\n@@ -2444,1 +2444,1 @@\n-    assert(prev != NULL, \"\");\n+    assert(prev != nullptr, \"\");\n@@ -2467,1 +2467,1 @@\n-            DEBUG_ONLY(if (trace && m != NULL) { tty->print(\"ZZZ mem\"); m->dump(); });\n+            DEBUG_ONLY(if (trace && m != nullptr) { tty->print(\"ZZZ mem\"); m->dump(); });\n@@ -2487,1 +2487,1 @@\n-                    Node* next = NULL;\n+                    Node* next = nullptr;\n@@ -2534,1 +2534,1 @@\n-        Node* m = find_mem(r->in(j), NULL);\n+        Node* m = find_mem(r->in(j), nullptr);\n@@ -2541,1 +2541,1 @@\n-  MergeMemNode* mm = NULL;\n+  MergeMemNode* mm = nullptr;\n@@ -2573,1 +2573,1 @@\n-          MergeMemNode* newmm = NULL;\n+          MergeMemNode* newmm = nullptr;\n@@ -2583,1 +2583,1 @@\n-                  Node* m = find_mem(region->in(k), NULL);\n+                  Node* m = find_mem(region->in(k), nullptr);\n@@ -2618,1 +2618,1 @@\n-              Node* m = find_mem(region->in(j), NULL);\n+              Node* m = find_mem(region->in(j), nullptr);\n@@ -2636,2 +2636,2 @@\n-                 u->adr_type() == NULL) {\n-        assert(u->adr_type() != NULL ||\n+                 u->adr_type() == nullptr) {\n+        assert(u->adr_type() != nullptr ||\n@@ -2693,1 +2693,1 @@\n-  MergeMemNode* newmm = NULL;\n+  MergeMemNode* newmm = nullptr;\n@@ -2753,1 +2753,1 @@\n-  MergeMemNode* mm = NULL;\n+  MergeMemNode* mm = nullptr;\n@@ -2761,1 +2761,1 @@\n-          MergeMemNode* newmm = NULL;\n+          MergeMemNode* newmm = nullptr;\n@@ -2771,1 +2771,1 @@\n-                    if (newmm == NULL) {\n+                    if (newmm == nullptr) {\n@@ -2787,1 +2787,1 @@\n-                if (newmm == NULL) {\n+                if (newmm == nullptr) {\n@@ -2807,1 +2807,1 @@\n-                if (mm == NULL) {\n+                if (mm == nullptr) {\n@@ -2822,2 +2822,2 @@\n-                 u->adr_type() == NULL) {\n-        assert(u->adr_type() != NULL ||\n+                 u->adr_type() == nullptr) {\n+        assert(u->adr_type() != nullptr ||\n@@ -2831,1 +2831,1 @@\n-          if (mm == NULL) {\n+          if (mm == nullptr) {\n@@ -2876,1 +2876,1 @@\n-  if (in(ValueIn) == NULL || in(ValueIn)->is_top()) {\n+  if (in(ValueIn) == nullptr || in(ValueIn)->is_top()) {\n@@ -2921,1 +2921,1 @@\n-  if (n == NULL) return false;\n+  if (n == nullptr) return false;\n@@ -2944,1 +2944,1 @@\n-  if (type->make_oopptr() && type->make_oopptr()->const_oop() != NULL) {\n+  if (type->make_oopptr() && type->make_oopptr()->const_oop() != nullptr) {\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/c2\/shenandoahSupport.cpp","additions":130,"deletions":130,"binary":false,"changes":260,"status":"modified"},{"patch":"@@ -52,1 +52,1 @@\n-  static void report_verify_failure(const char* msg, Node* n1 = NULL, Node* n2 = NULL);\n+  static void report_verify_failure(const char* msg, Node* n1 = nullptr, Node* n2 = nullptr);\n@@ -145,1 +145,1 @@\n-    if (in(ExpectedIn) != NULL && phase->type(in(ExpectedIn)) == TypePtr::NULL_PTR) {\n+    if (in(ExpectedIn) != nullptr && phase->type(in(ExpectedIn)) == TypePtr::NULL_PTR) {\n@@ -148,1 +148,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -160,1 +160,1 @@\n-    if (in(ExpectedIn) != NULL && phase->type(in(ExpectedIn)) == TypeNarrowOop::NULL_PTR) {\n+    if (in(ExpectedIn) != nullptr && phase->type(in(ExpectedIn)) == TypeNarrowOop::NULL_PTR) {\n@@ -163,1 +163,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -175,1 +175,1 @@\n-    if (in(ExpectedIn) != NULL && phase->type(in(ExpectedIn)) == TypePtr::NULL_PTR) {\n+    if (in(ExpectedIn) != nullptr && phase->type(in(ExpectedIn)) == TypePtr::NULL_PTR) {\n@@ -178,1 +178,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -190,1 +190,1 @@\n-    if (in(ExpectedIn) != NULL && phase->type(in(ExpectedIn)) == TypeNarrowOop::NULL_PTR) {\n+    if (in(ExpectedIn) != nullptr && phase->type(in(ExpectedIn)) == TypeNarrowOop::NULL_PTR) {\n@@ -193,1 +193,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -205,1 +205,1 @@\n-    if (in(ExpectedIn) != NULL && phase->type(in(ExpectedIn)) == TypePtr::NULL_PTR) {\n+    if (in(ExpectedIn) != nullptr && phase->type(in(ExpectedIn)) == TypePtr::NULL_PTR) {\n@@ -208,1 +208,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -220,1 +220,1 @@\n-    if (in(ExpectedIn) != NULL && phase->type(in(ExpectedIn)) == TypeNarrowOop::NULL_PTR) {\n+    if (in(ExpectedIn) != nullptr && phase->type(in(ExpectedIn)) == TypeNarrowOop::NULL_PTR) {\n@@ -223,1 +223,1 @@\n-    return NULL;\n+    return nullptr;\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/c2\/shenandoahSupport.hpp","additions":13,"deletions":13,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-  _region_data(NULL),\n+  _region_data(nullptr),\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahHeuristics.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -68,1 +68,1 @@\n-  if (ShenandoahGCHeuristics == NULL) {\n+  if (ShenandoahGCHeuristics == nullptr) {\n@@ -81,1 +81,1 @@\n-  return NULL;\n+  return nullptr;\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/mode\/shenandoahIUMode.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -59,1 +59,1 @@\n-  if (ShenandoahGCHeuristics == NULL) {\n+  if (ShenandoahGCHeuristics == nullptr) {\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/mode\/shenandoahPassiveMode.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -56,1 +56,1 @@\n-  if (ShenandoahGCHeuristics == NULL) {\n+  if (ShenandoahGCHeuristics == nullptr) {\n@@ -69,1 +69,1 @@\n-  return NULL;\n+  return nullptr;\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/mode\/shenandoahSATBMode.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-  if (r != NULL && r->is_committed()) {\n+  if (r != nullptr && r->is_committed()) {\n@@ -101,1 +101,1 @@\n-    if (r != NULL) {\n+    if (r != nullptr) {\n@@ -116,1 +116,1 @@\n-  bool loc_in_heap = (loc != NULL && heap->is_in(loc));\n+  bool loc_in_heap = (loc != nullptr && heap->is_in(loc));\n@@ -121,1 +121,1 @@\n-  if (interior_loc != NULL) {\n+  if (interior_loc != nullptr) {\n@@ -173,1 +173,1 @@\n-    print_failure(_safe_unknown, obj, interior_loc, NULL, \"Shenandoah assert_in_heap failed\",\n+    print_failure(_safe_unknown, obj, interior_loc, nullptr, \"Shenandoah assert_in_heap failed\",\n@@ -182,2 +182,2 @@\n-  if (obj != NULL && !heap->is_in(obj)) {\n-    print_failure(_safe_unknown, obj, interior_loc, NULL, \"Shenandoah assert_in_heap_or_null failed\",\n+  if (obj != nullptr && !heap->is_in(obj)) {\n+    print_failure(_safe_unknown, obj, interior_loc, nullptr, \"Shenandoah assert_in_heap_or_null failed\",\n@@ -195,1 +195,1 @@\n-    print_failure(_safe_unknown, obj, interior_loc, NULL, \"Shenandoah assert_correct failed\",\n+    print_failure(_safe_unknown, obj, interior_loc, nullptr, \"Shenandoah assert_correct failed\",\n@@ -201,3 +201,3 @@\n-  if (obj_klass == NULL) {\n-    print_failure(_safe_unknown, obj, interior_loc, NULL, \"Shenandoah assert_correct failed\",\n-                  \"Object klass pointer should not be NULL\",\n+  if (obj_klass == nullptr) {\n+    print_failure(_safe_unknown, obj, interior_loc, nullptr, \"Shenandoah assert_correct failed\",\n+                  \"Object klass pointer should not be null\",\n@@ -208,1 +208,1 @@\n-    print_failure(_safe_unknown, obj, interior_loc, NULL, \"Shenandoah assert_correct failed\",\n+    print_failure(_safe_unknown, obj, interior_loc, nullptr, \"Shenandoah assert_correct failed\",\n@@ -220,1 +220,1 @@\n-      print_failure(_safe_oop, obj, interior_loc, NULL, \"Shenandoah assert_correct failed\",\n+      print_failure(_safe_oop, obj, interior_loc, nullptr, \"Shenandoah assert_correct failed\",\n@@ -227,1 +227,1 @@\n-      print_failure(_safe_oop, obj, interior_loc, NULL, \"Shenandoah assert_correct failed\",\n+      print_failure(_safe_oop, obj, interior_loc, nullptr, \"Shenandoah assert_correct failed\",\n@@ -233,1 +233,1 @@\n-      print_failure(_safe_oop, obj, interior_loc, NULL, \"Shenandoah assert_correct failed\",\n+      print_failure(_safe_oop, obj, interior_loc, nullptr, \"Shenandoah assert_correct failed\",\n@@ -240,1 +240,1 @@\n-      print_failure(_safe_all, obj, interior_loc, NULL, \"Shenandoah assert_correct failed\",\n+      print_failure(_safe_all, obj, interior_loc, nullptr, \"Shenandoah assert_correct failed\",\n@@ -248,1 +248,1 @@\n-      print_failure(_safe_all, obj, interior_loc, NULL, \"Shenandoah assert_correct failed\",\n+      print_failure(_safe_all, obj, interior_loc, nullptr, \"Shenandoah assert_correct failed\",\n@@ -261,1 +261,1 @@\n-    print_failure(_safe_unknown, obj, interior_loc, NULL, \"Shenandoah assert_in_correct_region failed\",\n+    print_failure(_safe_unknown, obj, interior_loc, nullptr, \"Shenandoah assert_in_correct_region failed\",\n@@ -273,1 +273,1 @@\n-        print_failure(_safe_unknown, obj, interior_loc, NULL, \"Shenandoah assert_in_correct_region failed\",\n+        print_failure(_safe_unknown, obj, interior_loc, nullptr, \"Shenandoah assert_in_correct_region failed\",\n@@ -278,1 +278,1 @@\n-        print_failure(_safe_oop, obj, interior_loc, NULL, \"Shenandoah assert_in_correct_region failed\",\n+        print_failure(_safe_oop, obj, interior_loc, nullptr, \"Shenandoah assert_in_correct_region failed\",\n@@ -291,1 +291,1 @@\n-    print_failure(_safe_all, obj, interior_loc, NULL, \"Shenandoah assert_forwarded failed\",\n+    print_failure(_safe_all, obj, interior_loc, nullptr, \"Shenandoah assert_forwarded failed\",\n@@ -302,1 +302,1 @@\n-    print_failure(_safe_all, obj, interior_loc, NULL, \"Shenandoah assert_not_forwarded failed\",\n+    print_failure(_safe_all, obj, interior_loc, nullptr, \"Shenandoah assert_not_forwarded failed\",\n@@ -313,1 +313,1 @@\n-    print_failure(_safe_all, obj, interior_loc, NULL, \"Shenandoah assert_marked failed\",\n+    print_failure(_safe_all, obj, interior_loc, nullptr, \"Shenandoah assert_marked failed\",\n@@ -324,1 +324,1 @@\n-    print_failure(_safe_all, obj, interior_loc, NULL, \"Shenandoah assert_marked_weak failed\",\n+    print_failure(_safe_all, obj, interior_loc, nullptr, \"Shenandoah assert_marked_weak failed\",\n@@ -335,1 +335,1 @@\n-    print_failure(_safe_all, obj, interior_loc, NULL, \"Shenandoah assert_marked_strong failed\",\n+    print_failure(_safe_all, obj, interior_loc, nullptr, \"Shenandoah assert_marked_strong failed\",\n@@ -346,1 +346,1 @@\n-    print_failure(_safe_all, obj, interior_loc, NULL, \"Shenandoah assert_in_cset failed\",\n+    print_failure(_safe_all, obj, interior_loc, nullptr, \"Shenandoah assert_in_cset failed\",\n@@ -357,1 +357,1 @@\n-    print_failure(_safe_all, obj, interior_loc, NULL, \"Shenandoah assert_not_in_cset failed\",\n+    print_failure(_safe_all, obj, interior_loc, nullptr, \"Shenandoah assert_not_in_cset failed\",\n@@ -366,1 +366,1 @@\n-    print_failure(_safe_unknown, NULL, interior_loc, NULL, \"Shenandoah assert_not_in_cset_loc failed\",\n+    print_failure(_safe_unknown, nullptr, interior_loc, nullptr, \"Shenandoah assert_not_in_cset_loc failed\",\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahAsserts.cpp","additions":28,"deletions":28,"binary":false,"changes":56,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-             ShenandoahNMethodBarrier ? new ShenandoahBarrierSetNMethod(heap) : NULL,\n+             ShenandoahNMethodBarrier ? new ShenandoahBarrierSetNMethod(heap) : nullptr,\n@@ -106,1 +106,1 @@\n-    if (bs_nm != NULL) {\n+    if (bs_nm != nullptr) {\n@@ -123,1 +123,1 @@\n-    if (gclab != NULL) {\n+    if (gclab != nullptr) {\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahBarrierSet.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-  if (p != NULL) {\n+  if (p != nullptr) {\n@@ -71,1 +71,1 @@\n-  if (load_addr != NULL && fwd != obj) {\n+  if (load_addr != nullptr && fwd != obj) {\n@@ -84,2 +84,2 @@\n-      _heap->in_collection_set(obj)) { \/\/ Subsumes NULL-check\n-    assert(obj != NULL, \"cset check must have subsumed NULL-check\");\n+      _heap->in_collection_set(obj)) { \/\/ Subsumes null-check\n+    assert(obj != nullptr, \"cset check must have subsumed null-check\");\n@@ -99,2 +99,2 @@\n-  if (obj == NULL) {\n-    return NULL;\n+  if (obj == nullptr) {\n+    return nullptr;\n@@ -107,1 +107,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -114,1 +114,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -126,1 +126,1 @@\n-  if (ShenandoahSelfFixing && load_addr != NULL && fwd != obj) {\n+  if (ShenandoahSelfFixing && load_addr != nullptr && fwd != obj) {\n@@ -135,1 +135,1 @@\n-  assert(obj != NULL, \"checked by caller\");\n+  assert(obj != nullptr, \"checked by caller\");\n@@ -162,1 +162,1 @@\n-  if (value != NULL && ShenandoahSATBBarrier && _heap->is_concurrent_mark_in_progress()) {\n+  if (value != nullptr && ShenandoahSATBBarrier && _heap->is_concurrent_mark_in_progress()) {\n@@ -168,1 +168,1 @@\n-  if (ShenandoahIUBarrier && obj != NULL && _heap->is_concurrent_mark_in_progress()) {\n+  if (ShenandoahIUBarrier && obj != nullptr && _heap->is_concurrent_mark_in_progress()) {\n@@ -245,2 +245,2 @@\n-  shenandoah_assert_marked_if(NULL, value, !CompressedOops::is_null(value) && ShenandoahHeap::heap()->is_evacuation_in_progress());\n-  shenandoah_assert_not_in_cset_if(addr, value, value != NULL && !ShenandoahHeap::heap()->cancelled_gc());\n+  shenandoah_assert_marked_if(nullptr, value, !CompressedOops::is_null(value) && ShenandoahHeap::heap()->is_evacuation_in_progress());\n+  shenandoah_assert_not_in_cset_if(addr, value, value != nullptr && !ShenandoahHeap::heap()->cancelled_gc());\n@@ -263,1 +263,1 @@\n-  shenandoah_assert_not_forwarded_except  (addr, value, value == NULL || ShenandoahHeap::heap()->cancelled_gc() || !ShenandoahHeap::heap()->is_concurrent_mark_in_progress());\n+  shenandoah_assert_not_forwarded_except  (addr, value, value == nullptr || ShenandoahHeap::heap()->cancelled_gc() || !ShenandoahHeap::heap()->is_concurrent_mark_in_progress());\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahBarrierSet.inline.hpp","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -105,1 +105,1 @@\n-  shenandoah_assert_correct(NULL, obj);\n+  shenandoah_assert_correct(nullptr, obj);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahBarrierSetClone.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-  assert(lock != NULL, \"Must be\");\n+  assert(lock != nullptr, \"Must be\");\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahBarrierSetNMethod.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -50,1 +50,1 @@\n-  shenandoah_assert_not_forwarded_if(NULL, obj, ShenandoahHeap::heap()->is_concurrent_mark_in_progress());\n+  shenandoah_assert_not_forwarded_if(nullptr, obj, ShenandoahHeap::heap()->is_concurrent_mark_in_progress());\n@@ -62,1 +62,1 @@\n-  shenandoah_assert_not_forwarded(NULL, obj);\n+  shenandoah_assert_not_forwarded(nullptr, obj);\n@@ -114,1 +114,1 @@\n-  _heap(ShenandoahHeap::heap()), _thread(stable_thread ? Thread::current() : NULL) {\n+  _heap(ShenandoahHeap::heap()), _thread(stable_thread ? Thread::current() : nullptr) {\n@@ -202,1 +202,1 @@\n-  if (nm != NULL) {\n+  if (nm != nullptr) {\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahClosures.inline.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -86,1 +86,1 @@\n-  for (CodeBlob *cb = CodeCache::first_blob(_heap); cb != NULL; cb = CodeCache::next_blob(_heap, cb)) {\n+  for (CodeBlob *cb = CodeCache::first_blob(_heap); cb != nullptr; cb = CodeCache::next_blob(_heap, cb)) {\n@@ -122,1 +122,1 @@\n-  assert(BarrierSet::barrier_set()->barrier_set_nmethod() != NULL, \"Sanity\");\n+  assert(BarrierSet::barrier_set()->barrier_set_nmethod() != nullptr, \"Sanity\");\n@@ -288,1 +288,1 @@\n-        _table_snapshot(NULL) {\n+        _table_snapshot(nullptr) {\n@@ -297,1 +297,1 @@\n-  _table_snapshot = NULL;\n+  _table_snapshot = nullptr;\n@@ -303,1 +303,1 @@\n-  assert(_table_snapshot != NULL, \"Sanity\");\n+  assert(_table_snapshot != nullptr, \"Sanity\");\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahCodeRoots.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -49,2 +49,2 @@\n-  \/\/ This is needed to accept in-cset checks for both heap oops and NULLs, freeing\n-  \/\/ high-performance code from checking for NULL first.\n+  \/\/ This is needed to accept in-cset checks for both heap oops and nulls, freeing\n+  \/\/ high-performance code from checking for null first.\n@@ -134,1 +134,1 @@\n-  return NULL;\n+  return nullptr;\n@@ -149,1 +149,1 @@\n-  return NULL;\n+  return nullptr;\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahCollectionSet.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n-  shenandoah_assert_in_heap_or_null(NULL, p);\n+  shenandoah_assert_in_heap_or_null(nullptr, p);\n@@ -49,1 +49,1 @@\n-  assert(p == NULL || _heap->is_in(p), \"Must be in the heap\");\n+  assert(p == nullptr || _heap->is_in(p), \"Must be in the heap\");\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahCollectionSet.inline.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -737,1 +737,1 @@\n-\/\/ This task not only evacuates\/updates marked weak roots, but also \"NULL\"\n+\/\/ This task not only evacuates\/updates marked weak roots, but also \"null\"\n@@ -785,1 +785,1 @@\n-      \/\/ Applies ShenandoahIsCLDAlive closure to CLDs, native barrier will either NULL the\n+      \/\/ Applies ShenandoahIsCLDAlive closure to CLDs, native barrier will either null the\n@@ -956,1 +956,1 @@\n-    jt->oops_do(&_cl, NULL);\n+    jt->oops_do(&_cl, nullptr);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -63,1 +63,1 @@\n-    assert(rp != NULL, \"need reference processor\");\n+    assert(rp != nullptr, \"need reference processor\");\n@@ -87,1 +87,1 @@\n-      if (_cl != NULL) {\n+      if (_cl != nullptr) {\n@@ -89,1 +89,1 @@\n-        thread->oops_do(_cl, NULL);\n+        thread->oops_do(_cl, nullptr);\n@@ -124,1 +124,1 @@\n-                                               ShenandoahIUBarrier ? &mark_cl : NULL);\n+                                               ShenandoahIUBarrier ? &mark_cl : nullptr);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentMark.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -153,1 +153,1 @@\n-          while ((r = heap->collection_set()->next()) != NULL) {\n+          while ((r = heap->collection_set()->next()) != nullptr) {\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahDegeneratedGC.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-  shenandoah_assert_in_heap(NULL, obj);\n+  shenandoah_assert_in_heap(nullptr, obj);\n@@ -41,1 +41,1 @@\n-  \/\/ On this path, we can encounter the \"marked\" object, but with NULL\n+  \/\/ On this path, we can encounter the \"marked\" object, but with null\n@@ -47,1 +47,1 @@\n-    if (fwdptr != NULL) {\n+    if (fwdptr != nullptr) {\n@@ -55,2 +55,2 @@\n-  \/\/ Same as above, but mutator thread cannot ever see NULL forwardee.\n-  shenandoah_assert_correct(NULL, obj);\n+  \/\/ Same as above, but mutator thread cannot ever see null forwardee.\n+  shenandoah_assert_correct(nullptr, obj);\n@@ -62,1 +62,1 @@\n-    assert(fwdptr != NULL, \"Forwarding pointer is never null here\");\n+    assert(fwdptr != nullptr, \"Forwarding pointer is never null here\");\n@@ -70,1 +70,1 @@\n-  shenandoah_assert_correct(NULL, obj);\n+  shenandoah_assert_correct(nullptr, obj);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahForwarding.inline.hpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -85,1 +85,1 @@\n-          if (result != NULL) {\n+          if (result != nullptr) {\n@@ -103,1 +103,1 @@\n-          if (result != NULL) {\n+          if (result != nullptr) {\n@@ -111,1 +111,1 @@\n-        return NULL;\n+        return nullptr;\n@@ -122,1 +122,1 @@\n-            if (result != NULL) {\n+            if (result != nullptr) {\n@@ -139,1 +139,1 @@\n-  return NULL;\n+  return nullptr;\n@@ -147,1 +147,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -154,1 +154,1 @@\n-  HeapWord* result = NULL;\n+  HeapWord* result = nullptr;\n@@ -164,1 +164,1 @@\n-      assert (result != NULL, \"Allocation must succeed: free \" SIZE_FORMAT \", actual \" SIZE_FORMAT, free, size);\n+      assert (result != nullptr, \"Allocation must succeed: free \" SIZE_FORMAT \", actual \" SIZE_FORMAT, free, size);\n@@ -170,1 +170,1 @@\n-  if (result != NULL) {\n+  if (result != nullptr) {\n@@ -184,1 +184,1 @@\n-  if (result == NULL || has_no_alloc_capacity(r)) {\n+  if (result == nullptr || has_no_alloc_capacity(r)) {\n@@ -253,1 +253,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -265,1 +265,1 @@\n-      return NULL;\n+      return nullptr;\n@@ -552,1 +552,1 @@\n-        return NULL;\n+        return nullptr;\n@@ -555,1 +555,1 @@\n-        return NULL;\n+        return nullptr;\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -317,1 +317,1 @@\n-    _from_region(NULL),\n+    _from_region(nullptr),\n@@ -325,1 +325,1 @@\n-    assert(_to_region != NULL, \"should not happen\");\n+    assert(_to_region != nullptr, \"should not happen\");\n@@ -338,1 +338,1 @@\n-    assert(_from_region != NULL, \"must set before work\");\n+    assert(_from_region != nullptr, \"must set before work\");\n@@ -357,1 +357,1 @@\n-      assert(new_to_region != NULL, \"must not be NULL\");\n+      assert(new_to_region != nullptr, \"must not be null\");\n@@ -364,1 +364,1 @@\n-    shenandoah_assert_not_forwarded(NULL, p);\n+    shenandoah_assert_not_forwarded(nullptr, p);\n@@ -402,1 +402,1 @@\n-    if (from_region == NULL) {\n+    if (from_region == nullptr) {\n@@ -414,1 +414,1 @@\n-    while (from_region != NULL) {\n+    while (from_region != nullptr) {\n@@ -668,1 +668,1 @@\n-    while (r != NULL) {\n+    while (r != nullptr) {\n@@ -782,1 +782,1 @@\n-    while (r != NULL) {\n+    while (r != nullptr) {\n@@ -875,1 +875,1 @@\n-    while (r != NULL) {\n+    while (r != nullptr) {\n@@ -1020,1 +1020,1 @@\n-    while (region != NULL) {\n+    while (region != nullptr) {\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFullGC.cpp","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -105,1 +105,1 @@\n-    while (r != NULL) {\n+    while (r != nullptr) {\n@@ -129,1 +129,1 @@\n-    while (r != NULL) {\n+    while (r != nullptr) {\n@@ -314,1 +314,1 @@\n-    if (_collection_set == NULL) {\n+    if (_collection_set == nullptr) {\n@@ -400,1 +400,1 @@\n-    _pacer = NULL;\n+    _pacer = nullptr;\n@@ -411,1 +411,1 @@\n-  if (ShenandoahGCMode != NULL) {\n+  if (ShenandoahGCMode != nullptr) {\n@@ -438,1 +438,1 @@\n-  assert(_gc_mode != NULL, \"Must be initialized\");\n+  assert(_gc_mode != nullptr, \"Must be initialized\");\n@@ -465,2 +465,2 @@\n-  _workers(NULL),\n-  _safepoint_workers(NULL),\n+  _workers(nullptr),\n+  _safepoint_workers(nullptr),\n@@ -469,1 +469,1 @@\n-  _regions(NULL),\n+  _regions(nullptr),\n@@ -471,1 +471,1 @@\n-  _control_thread(NULL),\n+  _control_thread(nullptr),\n@@ -473,8 +473,8 @@\n-  _gc_mode(NULL),\n-  _heuristics(NULL),\n-  _free_set(NULL),\n-  _pacer(NULL),\n-  _verifier(NULL),\n-  _phase_timings(NULL),\n-  _monitoring_support(NULL),\n-  _memory_pool(NULL),\n+  _gc_mode(nullptr),\n+  _heuristics(nullptr),\n+  _free_set(nullptr),\n+  _pacer(nullptr),\n+  _verifier(nullptr),\n+  _phase_timings(nullptr),\n+  _monitoring_support(nullptr),\n+  _memory_pool(nullptr),\n@@ -487,1 +487,1 @@\n-  _marking_context(NULL),\n+  _marking_context(nullptr),\n@@ -493,2 +493,2 @@\n-  _liveness_cache(NULL),\n-  _collection_set(NULL)\n+  _liveness_cache(nullptr),\n+  _collection_set(nullptr)\n@@ -502,1 +502,1 @@\n-  if (_workers == NULL) {\n+  if (_workers == nullptr) {\n@@ -531,1 +531,1 @@\n-    while (region != NULL) {\n+    while (region != nullptr) {\n@@ -586,1 +586,1 @@\n-  if (cset != NULL) {\n+  if (cset != nullptr) {\n@@ -590,1 +590,1 @@\n-    st->print_cr(\" (NULL)\");\n+    st->print_cr(\" (null)\");\n@@ -604,1 +604,1 @@\n-    assert(thread != NULL, \"Sanity\");\n+    assert(thread != nullptr, \"Sanity\");\n@@ -620,1 +620,1 @@\n-  if (_safepoint_workers != NULL) {\n+  if (_safepoint_workers != nullptr) {\n@@ -763,1 +763,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -772,2 +772,2 @@\n-  if (gclab_buf == NULL) {\n-    return NULL;\n+  if (gclab_buf == nullptr) {\n+    return nullptr;\n@@ -800,1 +800,1 @@\n-  if (res != NULL) {\n+  if (res != nullptr) {\n@@ -813,1 +813,1 @@\n-  if (res != NULL) {\n+  if (res != nullptr) {\n@@ -824,1 +824,1 @@\n-  HeapWord* result = NULL;\n+  HeapWord* result = nullptr;\n@@ -848,1 +848,1 @@\n-    while (result == NULL && _progress_last_gc.is_set()) {\n+    while (result == nullptr && _progress_last_gc.is_set()) {\n@@ -854,1 +854,1 @@\n-    while (result == NULL && tries <= ShenandoahFullGCThreshold) {\n+    while (result == nullptr && tries <= ShenandoahFullGCThreshold) {\n@@ -871,1 +871,1 @@\n-  if (result != NULL) {\n+  if (result != nullptr) {\n@@ -920,1 +920,1 @@\n-  if (result != NULL) {\n+  if (result != nullptr) {\n@@ -929,1 +929,1 @@\n-  if (result != NULL) {\n+  if (result != nullptr) {\n@@ -935,1 +935,1 @@\n-  if (result != NULL) {\n+  if (result != nullptr) {\n@@ -940,1 +940,1 @@\n-  return NULL;\n+  return nullptr;\n@@ -952,1 +952,1 @@\n-    shenandoah_assert_marked(NULL, p);\n+    shenandoah_assert_marked(nullptr, p);\n@@ -991,1 +991,1 @@\n-    while ((r =_cs->claim_next()) != NULL) {\n+    while ((r =_cs->claim_next()) != nullptr) {\n@@ -1017,1 +1017,1 @@\n-  while ((r = set->next()) != NULL) {\n+  while ((r = set->next()) != nullptr) {\n@@ -1062,1 +1062,1 @@\n-    assert(gclab != NULL, \"GCLAB should be initialized for %s\", thread->name());\n+    assert(gclab != nullptr, \"GCLAB should be initialized for %s\", thread->name());\n@@ -1074,1 +1074,1 @@\n-    assert(gclab != NULL, \"GCLAB should be initialized for %s\", thread->name());\n+    assert(gclab != nullptr, \"GCLAB should be initialized for %s\", thread->name());\n@@ -1131,1 +1131,1 @@\n-  if (safepoint_workers() != NULL) {\n+  if (safepoint_workers() != nullptr) {\n@@ -1162,1 +1162,1 @@\n-  if (r != NULL) {\n+  if (r != nullptr) {\n@@ -1165,1 +1165,1 @@\n-  return NULL;\n+  return nullptr;\n@@ -1186,1 +1186,1 @@\n-  if (_safepoint_workers != NULL) {\n+  if (_safepoint_workers != nullptr) {\n@@ -1324,1 +1324,1 @@\n-  uint n_workers = safepoint_workers() != NULL ? safepoint_workers()->active_workers() : 1;\n+  uint n_workers = safepoint_workers() != nullptr ? safepoint_workers()->active_workers() : 1;\n@@ -1403,1 +1403,1 @@\n-    if (_task_queues!= NULL) {\n+    if (_task_queues!= nullptr) {\n@@ -1406,1 +1406,1 @@\n-        if (q != NULL) {\n+        if (q != nullptr) {\n@@ -1408,1 +1408,1 @@\n-          _task_queues->register_queue(i, NULL);\n+          _task_queues->register_queue(i, nullptr);\n@@ -1412,1 +1412,1 @@\n-      _task_queues = NULL;\n+      _task_queues = nullptr;\n@@ -1452,1 +1452,1 @@\n-    assert(queue_set != NULL, \"task queue must not be NULL\");\n+    assert(queue_set != nullptr, \"task queue must not be null\");\n@@ -1455,1 +1455,1 @@\n-    assert(q != NULL, \"object iterate queue must not be NULL\");\n+    assert(q != nullptr, \"object iterate queue must not be null\");\n@@ -1478,1 +1478,1 @@\n-  if (is_concurrent_mark_in_progress() && (obj != NULL)) {\n+  if (is_concurrent_mark_in_progress() && (obj != nullptr)) {\n@@ -1875,1 +1875,1 @@\n-  assert(heap->collection_set() != NULL, \"Sanity\");\n+  assert(heap->collection_set() != nullptr, \"Sanity\");\n@@ -1926,1 +1926,1 @@\n-  assert(r != NULL, \"Sanity\");\n+  assert(r != nullptr, \"Sanity\");\n@@ -2008,1 +2008,1 @@\n-  assert (_verifier != NULL, \"sanity\");\n+  assert (_verifier != nullptr, \"sanity\");\n@@ -2041,1 +2041,1 @@\n-    while (r != NULL) {\n+    while (r != nullptr) {\n@@ -2286,1 +2286,1 @@\n-  assert(_liveness_cache != NULL, \"sanity\");\n+  assert(_liveness_cache != nullptr, \"sanity\");\n@@ -2297,1 +2297,1 @@\n-  assert(_liveness_cache != NULL, \"sanity\");\n+  assert(_liveness_cache != nullptr, \"sanity\");\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp","additions":63,"deletions":63,"binary":false,"changes":126,"status":"modified"},{"patch":"@@ -96,1 +96,1 @@\n-  \/\/ Returns next region, or NULL if there are no more regions.\n+  \/\/ Returns next region, or null if there are no more regions.\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -60,1 +60,1 @@\n-  \/\/ get_region() provides the bounds-check and returns NULL on OOB.\n+  \/\/ get_region() provides the bounds-check and returns null on OOB.\n@@ -222,2 +222,2 @@\n-\/\/ The memory ordering discussion above does not apply for methods that store NULLs:\n-\/\/ then, there is no transitive reads in mutator (as we see NULLs), and we can do\n+\/\/ The memory ordering discussion above does not apply for methods that store nulls:\n+\/\/ then, there is no transitive reads in mutator (as we see nulls), and we can do\n@@ -277,1 +277,1 @@\n-  if (gclab == NULL) {\n+  if (gclab == nullptr) {\n@@ -281,1 +281,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -284,1 +284,1 @@\n-  if (obj != NULL) {\n+  if (obj != nullptr) {\n@@ -305,1 +305,1 @@\n-  HeapWord* copy = NULL;\n+  HeapWord* copy = nullptr;\n@@ -310,1 +310,1 @@\n-        copy = NULL;\n+        copy = nullptr;\n@@ -316,1 +316,1 @@\n-    if (copy == NULL) {\n+    if (copy == nullptr) {\n@@ -325,1 +325,1 @@\n-  if (copy == NULL) {\n+  if (copy == nullptr) {\n@@ -343,1 +343,1 @@\n-    shenandoah_assert_correct(NULL, copy_val);\n+    shenandoah_assert_correct(nullptr, copy_val);\n@@ -361,1 +361,1 @@\n-      shenandoah_assert_correct(NULL, copy_val);\n+      shenandoah_assert_correct(nullptr, copy_val);\n@@ -363,1 +363,1 @@\n-    shenandoah_assert_correct(NULL, result);\n+    shenandoah_assert_correct(nullptr, result);\n@@ -374,1 +374,1 @@\n-  assert(collection_set() != NULL, \"Sanity\");\n+  assert(collection_set() != nullptr, \"Sanity\");\n@@ -379,1 +379,1 @@\n-  assert(collection_set() != NULL, \"Sanity\");\n+  assert(collection_set() != nullptr, \"Sanity\");\n@@ -568,1 +568,1 @@\n-    return NULL;\n+    return nullptr;\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.inline.hpp","additions":16,"deletions":16,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -63,1 +63,1 @@\n-  _new_top(NULL),\n+  _new_top(nullptr),\n@@ -458,1 +458,1 @@\n-    shenandoah_assert_correct(NULL, cast_to_oop(last));\n+    shenandoah_assert_correct(nullptr, cast_to_oop(last));\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -337,1 +337,1 @@\n-  \/\/ Allocation (return NULL if full)\n+  \/\/ Allocation (return null if full)\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -51,1 +51,1 @@\n-    return NULL;\n+    return nullptr;\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -73,1 +73,1 @@\n-  if (_name_space != NULL) FREE_C_HEAP_ARRAY(char, _name_space);\n+  if (_name_space != nullptr) FREE_C_HEAP_ARRAY(char, _name_space);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegionCounters.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -80,1 +80,1 @@\n-  return NULL;\n+  return nullptr;\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegionSet.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -47,1 +47,1 @@\n-  ShenandoahSimpleLock(), _owner(NULL), _count(0) {\n+  ShenandoahSimpleLock(), _owner(nullptr), _count(0) {\n@@ -74,1 +74,1 @@\n-    Atomic::store(&_owner, (Thread*)NULL);\n+    Atomic::store(&_owner, (Thread*)nullptr);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahLock.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n-  ShenandoahLock() : _state(unlocked), _owner(NULL) {};\n+  ShenandoahLock() : _state(unlocked), _owner(nullptr) {};\n@@ -53,1 +53,1 @@\n-    assert(_owner == NULL, \"must not be owned\");\n+    assert(_owner == nullptr, \"must not be owned\");\n@@ -61,1 +61,1 @@\n-    _owner = NULL;\n+    _owner = nullptr;\n@@ -81,1 +81,1 @@\n-    if (_lock != NULL) {\n+    if (_lock != nullptr) {\n@@ -87,1 +87,1 @@\n-    if (_lock != NULL) {\n+    if (_lock != nullptr) {\n@@ -126,1 +126,1 @@\n-    if (_lock != NULL) {\n+    if (_lock != nullptr) {\n@@ -132,1 +132,1 @@\n-    if (_lock != NULL) {\n+    if (_lock != nullptr) {\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahLock.hpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -142,1 +142,1 @@\n-  while (q != NULL) {\n+  while (q != nullptr) {\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahMark.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -63,3 +63,3 @@\n-  shenandoah_assert_not_forwarded(NULL, obj);\n-  shenandoah_assert_marked(NULL, obj);\n-  shenandoah_assert_not_in_cset_except(NULL, obj, ShenandoahHeap::heap()->cancelled_gc());\n+  shenandoah_assert_not_forwarded(nullptr, obj);\n+  shenandoah_assert_marked(nullptr, obj);\n+  shenandoah_assert_not_in_cset_except(nullptr, obj, ShenandoahHeap::heap()->cancelled_gc());\n@@ -124,1 +124,1 @@\n-    shenandoah_assert_in_correct_region(NULL, obj);\n+    shenandoah_assert_in_correct_region(nullptr, obj);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahMark.inline.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,1 +48,1 @@\n-  assert(limit != NULL, \"limit must not be NULL\");\n+  assert(limit != nullptr, \"limit must not be null\");\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahMarkBitMap.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -163,2 +163,2 @@\n-  \/\/ \"addr\", and before \"limit\", if \"limit\" is non-NULL.  If there is no\n-  \/\/ such bit, returns \"limit\" if that is non-NULL, or else \"endWord()\".\n+  \/\/ \"addr\", and before \"limit\", if \"limit\" is non-null.  If there is no\n+  \/\/ such bit, returns \"limit\" if that is non-null, or else \"endWord()\".\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahMarkBitMap.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -60,2 +60,2 @@\n-        _partial_counters(NULL),\n-        _full_counters(NULL)\n+        _partial_counters(nullptr),\n+        _full_counters(nullptr)\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahMonitoringSupport.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-  _nm(nm), _oops(NULL), _oops_count(0), _unregistered(false) {\n+  _nm(nm), _oops(nullptr), _oops_count(0), _unregistered(false) {\n@@ -50,1 +50,1 @@\n-  if (_oops != NULL) {\n+  if (_oops != nullptr) {\n@@ -95,1 +95,1 @@\n-    if (_oops != NULL) {\n+    if (_oops != nullptr) {\n@@ -97,1 +97,1 @@\n-      _oops = NULL;\n+      _oops = nullptr;\n@@ -132,1 +132,1 @@\n-    if (value != NULL) {\n+    if (value != nullptr) {\n@@ -137,1 +137,1 @@\n-      \/\/ Non-NULL immediate oop found. NULL oops can safely be\n+      \/\/ Non-null immediate oop found. null oops can safely be\n@@ -139,1 +139,1 @@\n-      \/\/ are later patched to be non-NULL.\n+      \/\/ are later patched to be non-null.\n@@ -156,1 +156,1 @@\n-  assert(data != NULL, \"Sanity\");\n+  assert(data != nullptr, \"Sanity\");\n@@ -181,1 +181,1 @@\n-    shenandoah_assert_correct_except(loc, o, o == NULL || heap->is_full_gc_move_in_progress());\n+    shenandoah_assert_correct_except(loc, o, o == nullptr || heap->is_full_gc_move_in_progress());\n@@ -189,1 +189,1 @@\n-      shenandoah_assert_correct_except(p, o, o == NULL || heap->is_full_gc_move_in_progress());\n+      shenandoah_assert_correct_except(p, o, o == nullptr || heap->is_full_gc_move_in_progress());\n@@ -266,1 +266,1 @@\n-  assert(_list != NULL, \"Sanity\");\n+  assert(_list != nullptr, \"Sanity\");\n@@ -276,1 +276,1 @@\n-  if (data != NULL) {\n+  if (data != nullptr) {\n@@ -287,1 +287,1 @@\n-    assert(data != NULL, \"Sanity\");\n+    assert(data != nullptr, \"Sanity\");\n@@ -301,1 +301,1 @@\n-  assert(data != NULL, \"Sanity\");\n+  assert(data != nullptr, \"Sanity\");\n@@ -308,1 +308,1 @@\n-  ShenandoahNMethod::attach_gc_data(nm, NULL);\n+  ShenandoahNMethod::attach_gc_data(nm, nullptr);\n@@ -379,1 +379,1 @@\n-  assert(snapshot != NULL, \"No snapshot\");\n+  assert(snapshot != nullptr, \"No snapshot\");\n@@ -432,1 +432,1 @@\n-  assert(_list != NULL, \"Sanity\");\n+  assert(_list != nullptr, \"Sanity\");\n@@ -481,1 +481,1 @@\n-      assert(nmr != NULL, \"Sanity\");\n+      assert(nmr != nullptr, \"Sanity\");\n@@ -505,1 +505,1 @@\n-      assert(data != NULL, \"Should not be NULL\");\n+      assert(data != nullptr, \"Should not be null\");\n@@ -514,1 +514,1 @@\n-  _table(table), _table_snapshot(NULL) {\n+  _table(table), _table_snapshot(nullptr) {\n@@ -523,1 +523,1 @@\n-  assert(_table_snapshot != NULL, \"Must first call nmethod_do_begin()\");\n+  assert(_table_snapshot != nullptr, \"Must first call nmethod_do_begin()\");\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahNMethod.cpp","additions":21,"deletions":21,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -83,1 +83,1 @@\n-  assert(bs != NULL || !ShenandoahNMethodBarrier,\n+  assert(bs != nullptr || !ShenandoahNMethodBarrier,\n@@ -85,1 +85,1 @@\n-  if (bs != NULL && bs->is_armed(nm)) {\n+  if (bs != nullptr && bs->is_armed(nm)) {\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahNMethod.inline.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-    _hdr[c] = NULL;\n+    _hdr[c] = nullptr;\n@@ -40,1 +40,1 @@\n-    if (sub != NULL) {\n+    if (sub != nullptr) {\n@@ -96,1 +96,1 @@\n-  if (b == NULL) {\n+  if (b == nullptr) {\n@@ -111,1 +111,1 @@\n-    if (_hdr[mag] != NULL) {\n+    if (_hdr[mag] != nullptr) {\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahNumberSeq.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -59,1 +59,1 @@\n-    _worker_data[i] = NULL;\n+    _worker_data[i] = nullptr;\n@@ -72,1 +72,1 @@\n-      if (c++ != 0) _worker_data[i + c] = new ShenandoahWorkerData(NULL, title, _max_workers);\n+      if (c++ != 0) _worker_data[i + c] = new ShenandoahWorkerData(nullptr, title, _max_workers);\n@@ -79,1 +79,1 @@\n-  assert(_policy != NULL, \"Can not be NULL\");\n+  assert(_policy != nullptr, \"Can not be null\");\n@@ -92,1 +92,1 @@\n-  assert(wd != NULL, \"Counter initialized: %s\", phase_name(p));\n+  assert(wd != nullptr, \"Counter initialized: %s\", phase_name(p));\n@@ -222,1 +222,1 @@\n-    if (_worker_data[i] != NULL) {\n+    if (_worker_data[i] != nullptr) {\n@@ -246,1 +246,1 @@\n-      if (_worker_data[i] != NULL) {\n+      if (_worker_data[i] != nullptr) {\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahPhaseTimings.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -56,1 +56,1 @@\n-      return NULL;\n+      return nullptr;\n@@ -74,1 +74,1 @@\n-  if (obj != NULL && ShenandoahHeap::heap()->marking_context()->is_marked(obj)) {\n+  if (obj != nullptr && ShenandoahHeap::heap()->marking_context()->is_marked(obj)) {\n@@ -123,1 +123,1 @@\n-  return ShenandoahHeap::atomic_update_oop_check(discovered, addr, NULL);\n+  return ShenandoahHeap::atomic_update_oop_check(discovered, addr, nullptr);\n@@ -147,1 +147,1 @@\n-  _discovered_list(NULL),\n+  _discovered_list(nullptr),\n@@ -154,2 +154,2 @@\n-  _discovered_list = NULL;\n-  _mark_closure = NULL;\n+  _discovered_list = nullptr;\n+  _mark_closure = nullptr;\n@@ -189,1 +189,1 @@\n-  _soft_reference_policy(NULL),\n+  _soft_reference_policy(nullptr),\n@@ -191,1 +191,1 @@\n-  _pending_list(NULL),\n+  _pending_list(nullptr),\n@@ -230,1 +230,1 @@\n-    return reference_next<T>(reference) != NULL;\n+    return reference_next<T>(reference) != nullptr;\n@@ -234,1 +234,1 @@\n-    return referent == NULL;\n+    return referent == nullptr;\n@@ -251,1 +251,1 @@\n-  assert(_soft_reference_policy != NULL, \"Policy not initialized\");\n+  assert(_soft_reference_policy != nullptr, \"Policy not initialized\");\n@@ -282,1 +282,1 @@\n-  if (referent == NULL) {\n+  if (referent == nullptr) {\n@@ -305,1 +305,1 @@\n-    assert(reference_next<T>(reference) == NULL, \"Already inactive\");\n+    assert(reference_next<T>(reference) == nullptr, \"Already inactive\");\n@@ -321,1 +321,1 @@\n-  if (reference_discovered<T>(reference) != NULL) {\n+  if (reference_discovered<T>(reference) != nullptr) {\n@@ -343,1 +343,1 @@\n-  if (discovered_head == NULL) {\n+  if (discovered_head == nullptr) {\n@@ -345,1 +345,1 @@\n-    \/\/ discovered field: if it is NULL, then it is not-yet discovered, otherwise it is discovered\n+    \/\/ discovered field: if it is null, then it is not-yet discovered, otherwise it is discovered\n@@ -380,1 +380,1 @@\n-  assert(referent == NULL || ShenandoahHeap::heap()->marking_context()->is_marked(referent),\n+  assert(referent == nullptr || ShenandoahHeap::heap()->marking_context()->is_marked(referent),\n@@ -386,1 +386,1 @@\n-  reference_set_discovered<T>(reference, NULL);\n+  reference_set_discovered<T>(reference, nullptr);\n@@ -417,1 +417,1 @@\n-    if (reference == NULL) {\n+    if (reference == nullptr) {\n@@ -431,2 +431,2 @@\n-      \/\/ Reset terminating self-loop to NULL\n-      reference_set_discovered<T>(reference, oop(NULL));\n+      \/\/ Reset terminating self-loop to null\n+      reference_set_discovered<T>(reference, oop(nullptr));\n@@ -443,1 +443,1 @@\n-    if (prev == NULL) {\n+    if (prev == nullptr) {\n@@ -449,1 +449,1 @@\n-    set_oop_field(list, oop(NULL));\n+    set_oop_field(list, oop(nullptr));\n@@ -522,1 +522,1 @@\n-  if (_pending_list == NULL) {\n+  if (_pending_list == nullptr) {\n@@ -541,1 +541,1 @@\n-  _pending_list = NULL;\n+  _pending_list = nullptr;\n@@ -550,1 +550,1 @@\n-    set_oop_field<T>(list, oop(NULL));\n+    set_oop_field<T>(list, oop(nullptr));\n@@ -565,1 +565,1 @@\n-  if (_pending_list != NULL) {\n+  if (_pending_list != nullptr) {\n@@ -567,1 +567,1 @@\n-    _pending_list = NULL;\n+    _pending_list = nullptr;\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahReferenceProcessor.cpp","additions":29,"deletions":29,"binary":false,"changes":58,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -75,1 +75,1 @@\n- * referents, we employ a special barrier, the native LRB, which returns NULL when the referent is unreachable.\n+ * referents, we employ a special barrier, the native LRB, which returns nullptr when the referent is unreachable.\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahReferenceProcessor.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -131,1 +131,1 @@\n-  _codecache_snapshot(NULL),\n+  _codecache_snapshot(nullptr),\n@@ -221,1 +221,1 @@\n-  _thread_roots.oops_do(oops, NULL, worker_id);\n+  _thread_roots.oops_do(oops, nullptr, worker_id);\n@@ -261,1 +261,1 @@\n-  ShenandoahParallelOopsDoThreadClosure tc_cl(oops, &code, NULL);\n+  ShenandoahParallelOopsDoThreadClosure tc_cl(oops, &code, nullptr);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahRootProcessor.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -137,1 +137,1 @@\n-    if (_thread_cl != NULL) {\n+    if (_thread_cl != nullptr) {\n@@ -163,1 +163,1 @@\n-    _thread_roots.oops_do(oops, NULL, worker_id);\n+    _thread_roots.oops_do(oops, nullptr, worker_id);\n@@ -188,1 +188,1 @@\n-  _thread_roots.oops_do(keep_alive, NULL, worker_id);\n+  _thread_roots.oops_do(keep_alive, nullptr, worker_id);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahRootProcessor.inline.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -73,1 +73,1 @@\n-  Threads::possibly_parallel_oops_do(true, oops, NULL);\n+  Threads::possibly_parallel_oops_do(true, oops, nullptr);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahRootVerifier.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -47,2 +47,2 @@\n-  assert(orig != NULL, \"should be optimized out\");\n-  shenandoah_assert_correct(NULL, orig);\n+  assert(orig != nullptr, \"should be optimized out\");\n+  shenandoah_assert_correct(nullptr, orig);\n@@ -67,1 +67,1 @@\n-  shenandoah_assert_correct(NULL, s);\n+  shenandoah_assert_correct(nullptr, s);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahRuntime.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -98,1 +98,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -191,1 +191,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -236,1 +236,1 @@\n-    return NULL;\n+    return nullptr;\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahSharedVariables.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,1 @@\n-  if (nm != NULL) {\n+  if (nm != nullptr) {\n@@ -71,1 +71,1 @@\n-  if (context != NULL) {\n+  if (context != nullptr) {\n@@ -85,1 +85,1 @@\n-      return NULL;\n+      return nullptr;\n@@ -133,1 +133,1 @@\n-  assert(oops != NULL, \"Should not get to here\");\n+  assert(oops != nullptr, \"Should not get to here\");\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahStackWatermark.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n-    assert(q != NULL, \"Sanity\");\n+    assert(q != nullptr, \"Sanity\");\n@@ -46,1 +46,1 @@\n-    assert(q != NULL, \"Sanity\");\n+    assert(q != nullptr, \"Sanity\");\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahTaskqueue.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -207,1 +207,1 @@\n-  ShenandoahMarkTask(oop o = NULL, bool skip_live = false, bool weak = false) {\n+  ShenandoahMarkTask(oop o = nullptr, bool skip_live = false, bool weak = false) {\n@@ -268,1 +268,1 @@\n-  ShenandoahMarkTask(oop o = NULL, bool skip_live = false, bool weak = false, int chunk = 0, int pow = 0):\n+  ShenandoahMarkTask(oop o = nullptr, bool skip_live = false, bool weak = false, int chunk = 0, int pow = 0):\n@@ -337,1 +337,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -345,1 +345,1 @@\n-    return NULL;\n+    return nullptr;\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahTaskqueue.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -54,1 +54,1 @@\n-    _gclab(NULL),\n+    _gclab(nullptr),\n@@ -60,1 +60,1 @@\n-    if (_gclab != NULL) {\n+    if (_gclab != nullptr) {\n@@ -97,1 +97,1 @@\n-    assert(data(thread)->_gclab == NULL, \"Only initialize once\");\n+    assert(data(thread)->_gclab == nullptr, \"Only initialize once\");\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahThreadLocalData.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -95,1 +95,1 @@\n-    assert(lock != NULL, \"Not yet registered?\");\n+    assert(lock != nullptr, \"Not yet registered?\");\n@@ -103,1 +103,1 @@\n-    assert(lock != NULL, \"Not yet registered?\");\n+    assert(lock != nullptr, \"Not yet registered?\");\n@@ -114,1 +114,1 @@\n-    assert(lock != NULL, \"Not yet registered?\");\n+    assert(lock != nullptr, \"Not yet registered?\");\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahUnload.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -92,1 +92,1 @@\n-  _tracer(title, NULL, GCCause::_no_gc, log_heap_usage),\n+  _tracer(title, nullptr, GCCause::_no_gc, log_heap_usage),\n@@ -103,1 +103,1 @@\n-  _tracer(title, NULL, GCCause::_no_gc, log_heap_usage),\n+  _tracer(title, nullptr, GCCause::_no_gc, log_heap_usage),\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahUtils.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -162,1 +162,1 @@\n-    if (vm_op == NULL) return false;\n+    if (vm_op == nullptr) return false;\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahUtils.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -81,2 +81,2 @@\n-    _interior_loc(NULL),\n-    _loc(NULL) {\n+    _interior_loc(nullptr),\n+    _loc(nullptr) {\n@@ -133,2 +133,2 @@\n-      check(ShenandoahAsserts::_safe_unknown, obj, obj_klass != NULL,\n-             \"Object klass pointer should not be NULL\");\n+      check(ShenandoahAsserts::_safe_unknown, obj, obj_klass != nullptr,\n+             \"Object klass pointer should not be null\");\n@@ -177,1 +177,1 @@\n-    ShenandoahHeapRegion* fwd_reg = NULL;\n+    ShenandoahHeapRegion* fwd_reg = nullptr;\n@@ -189,2 +189,2 @@\n-      check(ShenandoahAsserts::_safe_oop, obj, fwd_klass != NULL,\n-             \"Forwardee klass pointer should not be NULL\");\n+      check(ShenandoahAsserts::_safe_oop, obj, fwd_klass != nullptr,\n+             \"Forwardee klass pointer should not be null\");\n@@ -287,1 +287,1 @@\n-    _interior_loc = NULL;\n+    _interior_loc = nullptr;\n@@ -297,1 +297,1 @@\n-    _interior_loc = NULL;\n+    _interior_loc = nullptr;\n@@ -299,1 +299,1 @@\n-    _interior_loc = NULL;\n+    _interior_loc = nullptr;\n@@ -309,1 +309,1 @@\n-    _loc = NULL;\n+    _loc = nullptr;\n@@ -923,1 +923,1 @@\n-        ShenandoahAsserts::print_failure(ShenandoahAsserts::_safe_all, obj, p, NULL,\n+        ShenandoahAsserts::print_failure(ShenandoahAsserts::_safe_all, obj, p, nullptr,\n@@ -944,1 +944,1 @@\n-        ShenandoahAsserts::print_failure(ShenandoahAsserts::_safe_all, obj, p, NULL,\n+        ShenandoahAsserts::print_failure(ShenandoahAsserts::_safe_all, obj, p, nullptr,\n@@ -949,1 +949,1 @@\n-        ShenandoahAsserts::print_failure(ShenandoahAsserts::_safe_all, obj, p, NULL,\n+        ShenandoahAsserts::print_failure(ShenandoahAsserts::_safe_all, obj, p, nullptr,\n@@ -955,1 +955,1 @@\n-        ShenandoahAsserts::print_failure(ShenandoahAsserts::_safe_all, obj, p, NULL,\n+        ShenandoahAsserts::print_failure(ShenandoahAsserts::_safe_all, obj, p, nullptr,\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahVerifier.cpp","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-  ShenandoahVerifierTask(oop o = NULL, int idx = 0): _obj(o) { }\n+  ShenandoahVerifierTask(oop o = nullptr, int idx = 0): _obj(o) { }\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahVerifier.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n-  assert(msg != NULL, \"Missing message\");\n+  assert(msg != nullptr, \"Missing message\");\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahWorkGroup.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}