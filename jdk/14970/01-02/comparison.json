{"files":[{"patch":"@@ -1815,0 +1815,13 @@\n+\\f[V]-XX:+UseHugeTLBFS\\f[R]\n+\\f[B]Linux only:\\f[R] This option is the equivalent of specifying\n+\\f[V]-XX:+UseLargePages\\f[R].\n+This option is disabled by default.\n+This option pre-allocates all large pages up-front, when memory is\n+reserved; consequently the JVM can\\[aq]t dynamically grow or shrink\n+large pages memory areas; see \\f[V]-XX:UseTransparentHugePages\\f[R] if\n+you want this behavior.\n+.RS\n+.PP\n+See \\f[B]Large Pages\\f[R].\n+.RE\n+.TP\n@@ -3645,0 +3658,8 @@\n+\\f[V]-XX:+UseSHM\\f[R]\n+\\f[B]Linux only:\\f[R] Enables the JVM to use shared memory to set up\n+large pages.\n+.RS\n+.PP\n+See \\f[B]Large Pages\\f[R] for setting up large pages.\n+.RE\n+.TP\n@@ -4897,0 +4918,14 @@\n+.PP\n+When using the option \\f[V]-XX:+UseSHM\\f[R] to enable large pages you\n+also need to make sure the \\f[V]SHMMAX\\f[R] parameter is configured to\n+allow large enough shared memory segments to be allocated.\n+To allow a maximum shared segment of 8 GB, login as \\f[V]root\\f[R] and\n+run:\n+.RS\n+.PP\n+\\f[V]# echo 8589934592 > \/proc\/sys\/kernel\/shmmax\\f[R]\n+.RE\n+.PP\n+In some environments this is not needed since the default value is large\n+enough, but it is important to make sure the value is large enough to\n+fit the amount of memory intended to be backed by large pages.\n","filename":"src\/java.base\/share\/man\/java.1","additions":35,"deletions":0,"binary":false,"changes":35,"status":"modified"}]}