{"files":[{"patch":"@@ -1137,2 +1137,9 @@\n-\/\/ Walk the given discovered ref list, and remove all reference objects\n-\/\/ whose referents are still alive or NULL.\n+\/\/ Walk the given discovered ref list, and remove all reference objects whose\n+\/\/ referents are still alive or NULL. NOTE: When we are precleaning the\n+\/\/ ref lists, we do not disable refs discovery to honor the correct semantics of\n+\/\/ java.lang.Reference. Therefore, as we iterate over the discovered list (DL)\n+\/\/ and drop elements from it, newly discovered refs can be discovered and added\n+\/\/ to the DL. Because precleaning is implemented single-threaded today, for\n+\/\/ each per-thread DL, the insertion of refs (calling `complete_gc`) happens\n+\/\/ after the iteration. The clear separation means no special synchronization\n+\/\/ is needed.\n","filename":"src\/hotspot\/share\/gc\/shared\/referenceProcessor.cpp","additions":9,"deletions":2,"binary":false,"changes":11,"status":"modified"}]}