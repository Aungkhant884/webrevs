{"files":[{"patch":"@@ -296,0 +296,1 @@\n+ *\n@@ -307,0 +308,4 @@\n+ * <p>Operations may also allocate and compute on intermediate\n+ * results, potentially those allocations may be large as in\n+ * proportion to the running time of the algorithm.\n+ *\n@@ -308,2 +313,2 @@\n- * time of operations can screen out {@code BigDecimal} values with\n- * unscaled values or scales above a chosen magnitude.\n+ * time or space of operations can screen out {@code BigDecimal}\n+ * values with unscaled values or scales above a chosen magnitude.\n","filename":"src\/java.base\/share\/classes\/java\/math\/BigDecimal.java","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -127,1 +127,1 @@\n- * the current internal presentation only a fixed-size component of\n+ * the current internal reprentation only a fixed-size component of\n@@ -149,0 +149,4 @@\n+ * <p>Operations may also allocate and compute on intermediate\n+ * results, potentially those allocations may be large as in\n+ * proportion to the running time of the algorithm.\n+ *\n@@ -150,2 +154,2 @@\n- * time of operations can screen out {@code BigInteger} values above a\n- * chosen magnitude.\n+ * time or space of operations can screen out {@code BigInteger}\n+ * values above a chosen magnitude.\n","filename":"src\/java.base\/share\/classes\/java\/math\/BigInteger.java","additions":7,"deletions":3,"binary":false,"changes":10,"status":"modified"}]}