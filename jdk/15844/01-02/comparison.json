{"files":[{"patch":"@@ -26,0 +26,1 @@\n+ * @library \/test\/lib\n@@ -34,0 +35,2 @@\n+import jdk.test.lib.Utils;\n+\n@@ -36,1 +39,1 @@\n-    private static final String INPUT = \"MAsGCSqGSMP7TQEHAjI1Bgn\/\/\/\/\/\/\/8wCwUyAQ==\";\n+    private static final String in = \"MAsGCSqGSMP7TQEHAjI1Bgn\/\/\/\/\/\/\/8wCwUyAQ==\";\n@@ -44,2 +47,1 @@\n-        byte[] decodedBytes = Base64.getDecoder().decode(INPUT);\n-        boolean generateCRL = true;\n+        byte[] decodedBytes = Base64.getDecoder().decode(in);\n@@ -49,15 +51,4 @@\n-        if (!unpe.run(encoded_1, generateCRL)) {\n-            throw new SecurityException(\"CRLException has not been thrown\");\n-        }\n-\n-        if (!unpe.run(encoded_2, generateCRL)) {\n-            throw new SecurityException(\"CRLException has not been thrown\");\n-        }\n-\n-        if (!unpe.run(encoded_3, generateCRL)) {\n-            throw new SecurityException(\"CRLException has not been thrown\");\n-        }\n-\n-        if (!unpe.run(decodedBytes, generateCRL = false)) {\n-            throw new SecurityException(\"CRLException has not been thrown\");\n-        }\n+        unpe.run(encoded_1);\n+        unpe.run(encoded_2);\n+        unpe.run(encoded_3);\n+        unpe.run(decodedBytes);\n@@ -66,1 +57,1 @@\n-    private boolean run(byte[] buf, boolean generateCRL) {\n+    private void run(byte[] buf) {\n@@ -76,10 +67,0 @@\n-        try {\n-            if (generateCRL) {\n-                cf.generateCRL(new ByteArrayInputStream(buf));\n-            } else {\n-                cf.generateCRLs(new ByteArrayInputStream(buf));\n-            }\n-        } catch (CRLException ce) {\n-            System.out.println(\"NPE checking passed\");\n-            return true;\n-        }\n@@ -87,2 +68,7 @@\n-        System.out.println(\"CRLException has not been thrown\");\n-        return false;\n+        Utils.runAndCheckException(\n+                () -> cf.generateCRL(new ByteArrayInputStream(buf)),\n+                CRLException.class);\n+        Utils.runAndCheckException(\n+                () -> cf.generateCRLs(new ByteArrayInputStream(buf)),\n+                CRLException.class);\n+        System.out.println(\"NPE checking passed\");\n","filename":"test\/jdk\/sun\/security\/x509\/X509CRLImpl\/UnexpectedNPE.java","additions":17,"deletions":31,"binary":false,"changes":48,"status":"modified"}]}