{"files":[{"patch":"@@ -448,1 +448,1 @@\n-  if (predicate_block->is_non_empty()) {\n+  if (predicate_block->has_parse_predicate()) {\n@@ -450,1 +450,0 @@\n-\n@@ -459,0 +458,1 @@\n+  assert(predicate_block->has_parse_predicate(), \"must have parse predicate\");\n","filename":"src\/hotspot\/share\/opto\/loopPredicate.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -0,0 +1,65 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8314106\n+ * @summary Test that we do not try to copy a Parse Predicate to an unswitched loop if they do not exist anymore.\n+ * @run main\/othervm -Xbatch -XX:-TieredCompilation\n+ *                   -XX:CompileCommand=compileonly,compiler.predicates.TestLoopUnswitchingWithoutParsePredicates::*\n+ *                   compiler.predicates.TestLoopUnswitchingWithoutParsePredicates\n+ *\/\n+\n+package compiler.predicates;\n+\n+public class TestLoopUnswitchingWithoutParsePredicates {\n+    static byte byFld;\n+    static byte byArrFld[] = new byte[400];\n+\n+    public static void main(String[] strArr) {\n+        for (int i = 0; i < 1000;i++) {\n+            test(i);\n+        }\n+    }\n+\n+    static void test(int i2) {\n+        int i10, i11 = 0, i12, i13, i14;\n+        double dArr[] = new double[400];\n+        for (i10 = 7; i10 < 307; i10++) {\n+            byArrFld[i10] = 58;\n+            for (i12 = 1; i12 < 3; i12++) {\n+                for (i14 = 1; i14 < 2; i14++) {\n+                    byFld &= i14;\n+                    switch (i2) {\n+                        case 4:\n+                            dArr[1] = i14;\n+                        case 2:\n+                            i13 = i11;\n+                    }\n+                }\n+            }\n+        }\n+    }\n+}\n+\n","filename":"test\/hotspot\/jtreg\/compiler\/predicates\/TestLoopUnswitchingWithoutParsePredicates.java","additions":65,"deletions":0,"binary":false,"changes":65,"status":"added"}]}