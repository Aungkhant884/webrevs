{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,1 +51,1 @@\n-        public boolean isDataVersionAcceptable(byte version[]) {\n+        public boolean isDataVersionAcceptable(byte[] version) {\n@@ -69,1 +69,1 @@\n-        public boolean isDataVersionAcceptable(byte version[]);\n+        public boolean isDataVersionAcceptable(byte[] version);\n@@ -146,1 +146,1 @@\n-                                        byte dataFormatIDExpected[],\n+                                        byte[] dataFormatIDExpected,\n@@ -175,1 +175,1 @@\n-        byte dataFormatID[] = new byte[4];\n+        byte[] dataFormatID = new byte[4];\n@@ -178,1 +178,1 @@\n-        byte dataVersion[] = new byte[4];\n+        byte[] dataVersion = new byte[4];\n@@ -181,1 +181,1 @@\n-        byte unicodeVersion[] = new byte[4];\n+        byte[] unicodeVersion = new byte[4];\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/icu\/impl\/ICUBinary.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2009, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2009, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -365,1 +365,1 @@\n-        public boolean isDataVersionAcceptable(byte version[]) {\n+        public boolean isDataVersionAcceptable(byte[] version) {\n@@ -1751,1 +1751,1 @@\n-    public static int getDecompose(int chars[], String decomps[]) {\n+    public static int getDecompose(int[] chars, String[] decomps) {\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/icu\/impl\/NormalizerImpl.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -92,1 +92,1 @@\n-    public boolean isDataVersionAcceptable(byte version[]){\n+    public boolean isDataVersionAcceptable(byte[] version){\n@@ -123,1 +123,1 @@\n-    private static final byte DATA_FORMAT_ID[] = {(byte)0x53, (byte)0x50,\n+    private static final byte[] DATA_FORMAT_ID = {(byte)0x53, (byte)0x50,\n@@ -125,1 +125,1 @@\n-    private static final byte DATA_FORMAT_VERSION[] = {(byte)0x3, (byte)0x2,\n+    private static final byte[] DATA_FORMAT_VERSION = {(byte)0x3, (byte)0x2,\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/icu\/impl\/StringPrepDataReader.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -177,1 +177,1 @@\n-    protected char m_index_[];\n+    protected char[] m_index_;\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/icu\/impl\/Trie.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -372,1 +372,1 @@\n-    char          index[];           \/\/ Index array.  Includes data for 16 bit Tries.\n+    char[]        index;             \/\/ Index array.  Includes data for 16 bit Tries.\n@@ -375,1 +375,1 @@\n-    int           data32[];          \/\/ NULL if 16b data is used via index\n+    int[]         data32;            \/\/ NULL if 16b data is used via index\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/icu\/impl\/Trie2.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -115,1 +115,1 @@\n-        public boolean isDataVersionAcceptable(byte version[]) {\n+        public boolean isDataVersionAcceptable(byte[] version) {\n@@ -194,4 +194,4 @@\n-    private int indexes[];\n-    private int mirrors[];\n-    private byte jgArray[];\n-    private byte jgArray2[];\n+    private int[] indexes;\n+    private int[] mirrors;\n+    private byte[] jgArray;\n+    private byte[] jgArray2;\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/icu\/impl\/UBiDiProps.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -155,1 +155,1 @@\n-    private static final int \/* UHangulSyllableType *\/ gcbToHst[]={\n+    private static final int[] \/* UHangulSyllableType *\/ gcbToHst ={\n@@ -298,1 +298,1 @@\n-    int m_additionalVectors_[];\n+    int[] m_additionalVectors_;\n@@ -588,1 +588,1 @@\n-        public boolean isDataVersionAcceptable(byte version[]) {\n+        public boolean isDataVersionAcceptable(byte[] version) {\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/icu\/impl\/UCharacterProperty.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -173,1 +173,1 @@\n-                    int o[] = new int[] { ahead };\n+                    int[] o = new int[] { ahead };\n@@ -229,1 +229,1 @@\n-    static final char DIGITS[] = {\n+    static final char[] DIGITS = {\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/icu\/impl\/Utility.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -120,1 +120,1 @@\n-    void getChars(int srcStart, int srcLimit, char dst[], int dstStart);\n+    void getChars(int srcStart, int srcLimit, char[] dst, int dstStart);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/icu\/text\/Replaceable.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -113,1 +113,1 @@\n-    public void getChars(int srcStart, int srcLimit, char dst[], int dstStart) {\n+    public void getChars(int srcStart, int srcLimit, char[] dst, int dstStart) {\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/icu\/text\/ReplaceableString.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,1 +25,1 @@\n-\/**\n+\/*\n@@ -331,1 +331,1 @@\n-    public static int charAt(char source[], int start, int limit, int offset16) {\n+    public static int charAt(char[] source, int start, int limit, int offset16) {\n@@ -524,1 +524,1 @@\n-    public static int moveCodePointOffset(char source[], int start, int limit,\n+    public static int moveCodePointOffset(char[] source, int start, int limit,\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/icu\/text\/UTF16.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -77,1 +77,1 @@\n-        int array[] = {0, 0, 0, 0};\n+        int[] array = {0, 0, 0, 0};\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/icu\/util\/VersionInfo.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}