{"files":[{"patch":"@@ -553,2 +553,1 @@\n-    while ((node_rgn != nullptr) && (remaining > 0))\n-    {\n+    while (remaining > 0) {\n@@ -557,1 +556,0 @@\n-      assert(remove_rgn->base()+remove_rgn->size()<=end, \"not contained\");\n@@ -559,1 +557,0 @@\n-      remaining -= remove_rgn->size();\n@@ -561,0 +558,1 @@\n+      assert(remove_rgn->base()<node_rgn->data()->base(), \"not ascending bases\");\n@@ -562,1 +560,5 @@\n-      assert(remove_released_region(remove_rgn), \"error in remove_released_region\");\n+      \/\/ Allow for the last segment to be partially released\n+      size_t remove_size = MIN(remove_rgn->size(), remaining);\n+      assert(remove_rgn->base()+remove_size<=end, \"not contained\");\n+      assert(remove_released_region(remove_rgn->base(), remove_size), \"error in remove_released_region\");\n+      remaining -= remove_size;\n@@ -564,1 +566,0 @@\n-\n","filename":"src\/hotspot\/share\/services\/virtualMemoryTracker.cpp","additions":7,"deletions":6,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -513,0 +513,41 @@\n+#ifndef _AIX \/\/ JDK-8257041\n+TEST_VM(os, partial_release_multi_mappings) {\n+\n+  \/\/  see \"release_multi_mappings\" test comment for general explanation\n+\n+  \/\/  thread grabbing that memory.\n+\n+  const size_t stripe_len = os::vm_allocation_granularity();\n+  const int num_stripes = 4;\n+  const size_t total_range_len = stripe_len * num_stripes;\n+  const size_t partial_release_len = total_range_len - (stripe_len\/2); \/\/ partially release the last stripe\n+\n+  \/\/ reserve address space...\n+  address p = reserve_multiple(num_stripes, stripe_len);\n+  ASSERT_NE(p, (address)NULL);\n+  PRINT_MAPPINGS(\"A\");\n+\n+  \/\/ .. release the middle stripe...\n+  address p_middle_stripes = p + stripe_len;\n+  const size_t middle_stripe_len = (num_stripes - 2) * stripe_len;\n+  {\n+    \/\/ On Windows, temporarily switch on UseNUMAInterleaving to allow release_memory to release\n+    \/\/  multiple mappings in one go (otherwise we assert, which we test too, see death test below).\n+    WINDOWS_ONLY(NUMASwitcher b(true);)\n+    ASSERT_TRUE(os::release_memory((char*)p_middle_stripes, middle_stripe_len));\n+  }\n+  PRINT_MAPPINGS(\"B\");\n+\n+  \/\/ ...re-reserve the middle stripes. This should work unless release silently failed.\n+  address p2 = (address)os::attempt_reserve_memory_at((char*)p_middle_stripes, middle_stripe_len);\n+  ASSERT_EQ(p2, p_middle_stripes);\n+  PRINT_MAPPINGS(\"C\");\n+\n+  \/\/ Clean up. Release all mappings except a 1\/2 stripe sized portion at the very end.\n+  {\n+    WINDOWS_ONLY(NUMASwitcher b(true);) \/\/ allow release_memory to release multiple regions\n+    ASSERT_TRUE(os::release_memory((char*)p, partial_release_len));\n+  }\n+}\n+#endif \/\/ !AIX\n+\n","filename":"test\/hotspot\/gtest\/runtime\/test_os.cpp","additions":41,"deletions":0,"binary":false,"changes":41,"status":"modified"}]}