{"files":[{"patch":"@@ -526,5 +526,5 @@\n-  VirtualMemorySummary::record_released_memory(size, reserved_rgn->flag());\n-\n-  assert(reserved_rgn->contain_region(addr, size), \"Not completely contained\");\n-  if (reserved_rgn->base() == addr ||\n-      reserved_rgn->end() == addr + size) {\n+  if (size <= reserved_rgn->size()) {\n+    VirtualMemorySummary::record_released_memory(size, reserved_rgn->flag());\n+    assert(reserved_rgn->contain_region(addr, size), \"Not completely contained\");\n+    if (reserved_rgn->base() == addr ||\n+        reserved_rgn->end() == addr + size) {\n@@ -532,14 +532,0 @@\n-    return true;\n-  } else {\n-    address top = reserved_rgn->end();\n-    address high_base = addr + size;\n-    ReservedMemoryRegion high_rgn(high_base, top - high_base,\n-      *reserved_rgn->call_stack(), reserved_rgn->flag());\n-\n-    \/\/ use original region for lower region\n-    reserved_rgn->exclude_region(addr, top - addr);\n-    LinkedListNode<ReservedMemoryRegion>* new_rgn = _reserved_regions->add(high_rgn);\n-    if (new_rgn == nullptr) {\n-      return false;\n-    } else {\n-      reserved_rgn->move_committed_regions(addr, *new_rgn->data());\n@@ -547,0 +533,15 @@\n+    } else {\n+      address top = reserved_rgn->end();\n+      address high_base = addr + size;\n+      ReservedMemoryRegion high_rgn(high_base, top - high_base,\n+                                    *reserved_rgn->call_stack(), reserved_rgn->flag());\n+\n+      \/\/ use original region for lower region\n+      reserved_rgn->exclude_region(addr, top - addr);\n+      LinkedListNode<ReservedMemoryRegion>* new_rgn = _reserved_regions->add(high_rgn);\n+      if (new_rgn == nullptr) {\n+        return false;\n+      } else {\n+        reserved_rgn->move_committed_regions(addr, *new_rgn->data());\n+        return true;\n+      }\n@@ -548,0 +549,17 @@\n+  } else {\n+    address end = addr+size;\n+    size_t remaining = size;\n+    LinkedListNode<ReservedMemoryRegion>* node_rgn = _reserved_regions->find_node(rgn);\n+    while ((node_rgn != nullptr) && (remaining > 0))\n+    {\n+      ReservedMemoryRegion* remove_rgn = node_rgn->data();\n+      assert(remove_rgn!=nullptr, \"NULL region\");\n+      assert(remove_rgn->base()+remove_rgn->size()<=end, \"not contained\");\n+\n+      remaining -= remove_rgn->size();\n+      node_rgn = node_rgn->next();\n+\n+      assert(remove_released_region(remove_rgn), \"error in remove_released_region\");\n+    }\n+\n+    return true;\n","filename":"src\/hotspot\/share\/services\/virtualMemoryTracker.cpp","additions":37,"deletions":19,"binary":false,"changes":56,"status":"modified"},{"patch":"@@ -461,5 +461,0 @@\n-  \/\/ With NMT enabled, this will trigger JDK-8263464. For now disable the test if NMT=on.\n-  if (MemTracker::tracking_level() > NMT_off) {\n-    return;\n-  }\n-\n","filename":"test\/hotspot\/gtest\/runtime\/test_os.cpp","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"}]}