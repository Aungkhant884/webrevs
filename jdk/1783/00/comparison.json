{"files":[{"patch":"@@ -879,5 +879,5 @@\n-  \/* This option can change an EMCP method into an obsolete method. *\/      \\\n-  \/* This can affect tests that except specific methods to be EMCP. *\/      \\\n-  \/* This option should be used with caution.                       *\/      \\\n-  product(bool, StressLdcRewrite, false,                                    \\\n-          \"Force ldc -> ldc_w rewrite during RedefineClasses\")              \\\n+  product(bool, StressLdcRewrite, false, DIAGNOSTIC,                        \\\n+          \"Force ldc -> ldc_w rewrite during RedefineClasses. \"             \\\n+          \"This option can change an EMCP method into an obsolete method \"  \\\n+          \"and can affect tests that expect specific methods to be EMCP. \"  \\\n+          \"This option should be used with caution.\")                       \\\n","filename":"src\/hotspot\/share\/runtime\/globals.hpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2013, 2015, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2013, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -71,1 +71,1 @@\n-    -XX:+StressLdcRewrite -XX:+IgnoreUnrecognizedVMOptions \\\n+    -XX:+UnlockDiagnosticVMOptions -XX:+StressLdcRewrite -XX:+IgnoreUnrecognizedVMOptions \\\n","filename":"test\/jdk\/java\/lang\/instrument\/RedefineMethodWithAnnotations.sh","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}