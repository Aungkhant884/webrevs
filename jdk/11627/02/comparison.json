{"files":[{"patch":"@@ -387,0 +387,1 @@\n+            directoryList.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);\n@@ -389,0 +390,1 @@\n+            directoryList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);\n@@ -390,0 +392,1 @@\n+            directoryList.clearSelection();\n@@ -567,0 +570,1 @@\n+        fc.setMultiSelectionEnabled(true);\n@@ -941,0 +945,5 @@\n+        if (getFileChooser().isMultiSelectionEnabled()) {\n+            directoryList.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);\n+        } else {\n+            directoryList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);\n+        }\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/java\/swing\/plaf\/gtk\/GTKFileChooserUI.java","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -0,0 +1,216 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4912623\n+ * @key headful\n+ * @requires (os.family == \"linux\")\n+ * @summary Verifies if all files or folders are selected on CTRL+A press for\n+ * JFileChooser.\n+ * @run main TestFileChooserCtrlASelection\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.event.InputEvent;\n+import java.awt.event.KeyEvent;\n+import java.awt.Point;\n+import java.awt.Robot;\n+import java.io.File;\n+import javax.swing.JFileChooser;\n+import javax.swing.JFrame;\n+import javax.swing.SwingUtilities;\n+import javax.swing.UIManager;\n+\n+public class TestFileChooserCtrlASelection {\n+    private static JFrame frame;\n+    private static JFileChooser fileChooser;\n+    private static Robot robot;\n+    private static File testDir;\n+    private static File testFile;\n+    private static File[] SubDirs;\n+    private static File[] subFiles;\n+    private static boolean passed_1 = false;\n+    private static boolean passed_2 = false;\n+\n+    public static void main(String[] args) throws Exception {\n+        UIManager.setLookAndFeel(\"com.sun.java.swing.plaf.gtk.GTKLookAndFeel\");\n+        robot = new Robot();\n+        robot.setAutoDelay(100);\n+        try {\n+            \/\/ create test directory\n+            String tmpDir = System.getProperty(\"user.home\");\n+\n+            \/\/ Create a test directory that contains only folders\n+            testDir = new File(tmpDir, \"testDir\");\n+            if (!testDir.exists()) {\n+                testDir.mkdir();\n+            }\n+            testDir.deleteOnExit();\n+\n+            \/\/ create sub directories inside test directory\n+            SubDirs = new File[5];\n+            for (int i = 0; i < 5; ++i) {\n+                SubDirs[i] = new File(testDir, \"subDir_\" + (i+1));\n+                SubDirs[i].mkdir();\n+                SubDirs[i].deleteOnExit();\n+            }\n+\n+            \/\/ Create a test directory that contains only files\n+            testFile = new File(tmpDir, \"testFile\");\n+            if (!testFile.exists()) {\n+                testFile.mkdir();\n+            }\n+            testFile.deleteOnExit();\n+\n+            \/\/ create temporary files inside testFile\n+            subFiles = new File[5];\n+            for (int i = 0; i < 5; ++i) {\n+                subFiles[i] = File.createTempFile(\"subFiles_\" + (i+1),\n+                        \".txt\", new File(testFile.getAbsolutePath()));\n+                subFiles[i].deleteOnExit();\n+            }\n+        } catch (Exception e) {\n+            e.printStackTrace();\n+        }\n+        doTesting();\n+    }\n+\n+    private static void doTesting() throws Exception {\n+        try {\n+            SwingUtilities.invokeAndWait(() -> {\n+                createAndShowUI();\n+            });\n+            robot.delay(1000);\n+            checkMultiSelectionDefault();\n+            checkMultiSelectionDisabled();\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n+        }\n+    }\n+\n+    private static void createAndShowUI() {\n+        frame = new JFrame(\"Test File Chooser Ctrl+A Action\");\n+        frame.getContentPane().setLayout(new BorderLayout());\n+        fileChooser = new JFileChooser(testDir);\n+        fileChooser.setControlButtonsAreShown(false);\n+        fileChooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);\n+        frame.getContentPane().add(fileChooser, BorderLayout.CENTER);\n+        frame.pack();\n+        frame.setLocationRelativeTo(null);\n+        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n+        frame.setVisible(true);\n+    }\n+\n+    \/*\n+     * JFileChooser MultiSelection property is set true by default.\n+     *\/\n+    private static void checkMultiSelectionDefault() {\n+        System.out.println(\"Testing MultiSelection enabled by default\");\n+        Point frameLocation = fileChooser.getLocationOnScreen();\n+        int frameHeight = frame.getHeight();\n+\n+        \/\/ check Ctrl+A on folders list\n+        doMouseClick(frameLocation, frameHeight, 50);\n+        doKeyPressAction();\n+        File files[] = fileChooser.getSelectedFiles();\n+        System.out.println(\"files length: \" + files.length);\n+        if (files.length > 1) {\n+            passed_1 = true;\n+        }\n+\n+        \/\/ check Ctrl+A on files list\n+        fileChooser.setCurrentDirectory(testFile);\n+        doMouseClick(frameLocation, frameHeight, 230);\n+        doKeyPressAction();\n+        files = fileChooser.getSelectedFiles();\n+        System.out.println(\"files length: \" + files.length);\n+        if (files.length > 1) {\n+            passed_2 = true;\n+        }\n+\n+        if (passed_1 && passed_2) {\n+            System.out.println(\"Passed\");\n+        } else {\n+            throw new RuntimeException(\"Unable to select all files \" +\n+                    \"or folder\");\n+        }\n+    }\n+\n+    private static void checkMultiSelectionDisabled() {\n+        System.out.println(\"Testing MultiSelection disabled\");\n+        passed_1 = false;\n+        passed_2 = false;\n+        fileChooser.setMultiSelectionEnabled(false);\n+        fileChooser.setCurrentDirectory(testDir);\n+        Point frameLocation = fileChooser.getLocationOnScreen();\n+        int frameHeight = frame.getHeight();\n+\n+        \/\/ check Ctrl+A on folders list\n+        doMouseClick(frameLocation, frameHeight, 50);\n+        doKeyPressAction();\n+        File files[] = fileChooser.getSelectedFiles();\n+        System.out.println(\"files length: \" + files.length);\n+        if (files.length == 0) {\n+            passed_1 = true;\n+        }\n+\n+        \/\/ check Ctrl+A on files list\n+        fileChooser.setCurrentDirectory(testFile);\n+        doMouseClick(frameLocation, frameHeight, 230);\n+        doKeyPressAction();\n+        files = fileChooser.getSelectedFiles();\n+        System.out.println(\"files length: \" + files.length);\n+        if (files.length == 0) {\n+            passed_2 = true;\n+        }\n+\n+        if (passed_1 && passed_2) {\n+            System.out.println(\"Passed\");\n+        } else {\n+            throw new RuntimeException(\"All files or folder selected for\" +\n+                    \"MultiSelection disabled\");\n+        }\n+    }\n+\n+    private static void doMouseClick(Point frameLocation, int frameHeight,\n+                                     int offset) {\n+        robot.mouseMove(frameLocation.x + offset, frameLocation.y +\n+                frameHeight \/ 3);\n+        robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+        robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+        robot.delay(100);\n+    }\n+\n+    private static void doKeyPressAction() {\n+        robot.keyPress(KeyEvent.VK_CONTROL);\n+        robot.keyPress(KeyEvent.VK_A);\n+        robot.keyRelease(KeyEvent.VK_A);\n+        robot.keyRelease(KeyEvent.VK_CONTROL);\n+        robot.delay(100);\n+    }\n+}\n","filename":"test\/jdk\/com\/sun\/java\/swing\/plaf\/gtk\/TestFileChooserCtrlASelection.java","additions":216,"deletions":0,"binary":false,"changes":216,"status":"added"}]}