{"files":[{"patch":"@@ -72,1 +72,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(getCmd(args))\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(getCmd(args))\n","filename":"test\/hotspot\/jtreg\/applications\/jcstress\/JcstressRunner.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -112,1 +112,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/applications\/jcstress\/TestGenerator.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -193,1 +193,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(arguments);\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(arguments);\n","filename":"test\/hotspot\/jtreg\/compiler\/arguments\/CheckCICompilerCount.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -341,1 +341,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(arguments);\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(arguments);\n","filename":"test\/hotspot\/jtreg\/compiler\/arguments\/CheckCompileThresholdScaling.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -64,1 +64,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(cmdline(args));\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(cmdline(args));\n","filename":"test\/hotspot\/jtreg\/compiler\/arguments\/TestCodeEntryAlignment.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -65,1 +65,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(cmdline(args));\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(cmdline(args));\n@@ -72,1 +72,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(cmdline(args));\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(cmdline(args));\n","filename":"test\/hotspot\/jtreg\/compiler\/arguments\/TestOptoLoopAlignment.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,1 +54,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(procArgs);\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(procArgs);\n","filename":"test\/hotspot\/jtreg\/compiler\/arguments\/TestPrintOptoAssemblyLineNumbers.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -68,1 +68,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(cmdline(args));\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(cmdline(args));\n@@ -75,1 +75,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(cmdline(args));\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(cmdline(args));\n","filename":"test\/hotspot\/jtreg\/compiler\/blackhole\/BlackholeExistingIntrinsicWarningTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -68,1 +68,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(cmdline(args));\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(cmdline(args));\n@@ -75,1 +75,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(cmdline(args));\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(cmdline(args));\n","filename":"test\/hotspot\/jtreg\/compiler\/blackhole\/BlackholeExperimentalUnlockTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -137,1 +137,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(cmdline);\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(cmdline);\n","filename":"test\/hotspot\/jtreg\/compiler\/blackhole\/BlackholeIntrinsicTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -67,1 +67,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(cmdline(args));\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(cmdline(args));\n@@ -74,1 +74,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(cmdline(args));\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(cmdline(args));\n","filename":"test\/hotspot\/jtreg\/compiler\/blackhole\/BlackholeNonEmptyWarningTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -67,1 +67,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(cmdline(args));\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(cmdline(args));\n@@ -74,1 +74,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(cmdline(args));\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(cmdline(args));\n","filename":"test\/hotspot\/jtreg\/compiler\/blackhole\/BlackholeNonStaticWarningTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -67,1 +67,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(cmdline(args));\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(cmdline(args));\n@@ -74,1 +74,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(cmdline(args));\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(cmdline(args));\n","filename":"test\/hotspot\/jtreg\/compiler\/blackhole\/BlackholeNonVoidWarningTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(procArgs);\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(procArgs);\n@@ -77,1 +77,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(procArgs);\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(procArgs);\n@@ -97,1 +97,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(procArgs);\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(procArgs);\n","filename":"test\/hotspot\/jtreg\/compiler\/c1\/TestRangeCheckEliminated.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -52,1 +52,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(procArgs);\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(procArgs);\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/TestBit.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -98,1 +98,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(procArgs);\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(procArgs);\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/aarch64\/TestFarJump.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -82,1 +82,1 @@\n-        return ProcessTools.createJavaProcessBuilder(vmopts.toArray(new String[vmopts.size()]));\n+        return ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(vmopts.toArray(new String[vmopts.size()]));\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/aarch64\/TestSVEWithJNI.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -60,1 +60,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(command);\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(command);\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/aarch64\/TestTrampoline.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -135,1 +135,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(procArgs);\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(procArgs);\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/aarch64\/TestVolatiles.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/compiler\/ciReplay\/TestInvalidReplayFile.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -71,1 +71,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-XX:+PrintCodeCache\",\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:+PrintCodeCache\",\n","filename":"test\/hotspot\/jtreg\/compiler\/codecache\/CheckCodeCacheInfo.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/compiler\/codecache\/CheckLargePages.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,2 +45,2 @@\n-        pb1 = ProcessTools.createJavaProcessBuilder(\"-XX:InitialCodeCacheSize=4m\", \"-XX:ReservedCodeCacheSize=8m\", \"-version\");\n-        pb2 = ProcessTools.createJavaProcessBuilder(\"-XX:ReservedCodeCacheSize=8m\", \"-XX:InitialCodeCacheSize=4m\", \"-version\");\n+        pb1 = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:InitialCodeCacheSize=4m\", \"-XX:ReservedCodeCacheSize=8m\", \"-version\");\n+        pb2 = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:ReservedCodeCacheSize=8m\", \"-XX:InitialCodeCacheSize=4m\", \"-version\");\n","filename":"test\/hotspot\/jtreg\/compiler\/codecache\/CheckReservedInitialCodeCacheSizeArgOrder.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -92,1 +92,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-XX:ReservedCodeCacheSize=239m\",\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:ReservedCodeCacheSize=239m\",\n@@ -98,1 +98,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-XX:-TieredCompilation\",\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:-TieredCompilation\",\n@@ -104,1 +104,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-XX:+TieredCompilation\",\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:+TieredCompilation\",\n@@ -109,1 +109,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-XX:+TieredCompilation\",\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:+TieredCompilation\",\n@@ -116,1 +116,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-XX:+SegmentedCodeCache\",\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:+SegmentedCodeCache\",\n@@ -125,1 +125,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-XX:+SegmentedCodeCache\",\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:+SegmentedCodeCache\",\n@@ -133,1 +133,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-XX:+SegmentedCodeCache\",\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:+SegmentedCodeCache\",\n@@ -138,1 +138,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-XX:+SegmentedCodeCache\",\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:+SegmentedCodeCache\",\n@@ -145,1 +145,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-XX:NonNMethodCodeHeapSize=100K\",\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:NonNMethodCodeHeapSize=100K\",\n@@ -150,1 +150,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-XX:+SegmentedCodeCache\",\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:+SegmentedCodeCache\",\n@@ -162,1 +162,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-XX:+SegmentedCodeCache\",\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:+SegmentedCodeCache\",\n","filename":"test\/hotspot\/jtreg\/compiler\/codecache\/CheckSegmentedCodeCache.java","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-XX:ReservedCodeCacheSize=2049m\", \"-version\");\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:ReservedCodeCacheSize=2049m\", \"-version\");\n","filename":"test\/hotspot\/jtreg\/compiler\/codecache\/CheckUpperLimit.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -57,1 +57,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/compiler\/codecache\/CodeCacheFullCountTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -54,1 +54,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/compiler\/compilercontrol\/TestConflictInlineCommands.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-XX:+RestoreMXCSROnJNICalls\", \"-version\");\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:+RestoreMXCSROnJNICalls\", \"-version\");\n","filename":"test\/hotspot\/jtreg\/compiler\/cpuflags\/RestoreMXCSR.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -61,1 +61,1 @@\n-            new OutputAnalyzer(ProcessTools.createJavaProcessBuilder(procArgs).start())\n+            new OutputAnalyzer(ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(procArgs).start())\n","filename":"test\/hotspot\/jtreg\/compiler\/debug\/TestGenerateStressSeed.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,1 +51,1 @@\n-        ProcessBuilder pb  = ProcessTools.createJavaProcessBuilder(procArgs);\n+        ProcessBuilder pb  = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(procArgs);\n","filename":"test\/hotspot\/jtreg\/compiler\/debug\/TestStressCM.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,1 +51,1 @@\n-        ProcessBuilder pb  = ProcessTools.createJavaProcessBuilder(procArgs);\n+        ProcessBuilder pb  = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(procArgs);\n","filename":"test\/hotspot\/jtreg\/compiler\/debug\/TestStressIGVNAndCCP.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,1 +45,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-Xcomp\", \"-XX:+IgnoreUnrecognizedVMOptions\",\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-Xcomp\", \"-XX:+IgnoreUnrecognizedVMOptions\",\n","filename":"test\/hotspot\/jtreg\/compiler\/debug\/VerifyAdapterSharing.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,1 +42,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+    ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/compiler\/escapeAnalysis\/TestIterativeEA.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/compiler\/inlining\/InlineAccessors.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/compiler\/inlining\/PrintInlining.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,1 +45,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -81,1 +81,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -118,1 +118,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/compiler\/inlining\/ResolvedClassTest.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -64,1 +64,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(argsList);\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(argsList);\n","filename":"test\/hotspot\/jtreg\/compiler\/jsr292\/ContinuousCallSiteTargetChange.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,1 +50,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/compiler\/jsr292\/MHInlineTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,1 +46,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/compiler\/jsr292\/PollutedTrapCounts.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -87,1 +87,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/TestEnableJVMCIProduct.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/TestInvalidJVMCIOption.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,1 +45,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/TestJVMCIPrintProperties.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/TestJVMCISavedProperties.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -86,1 +86,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/TestUncaughtErrorInCompileMethod.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -66,1 +66,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/compilerToVM\/GetFlagValueTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -170,1 +170,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/jdk.vm.ci.hotspot.test\/src\/jdk\/vm\/ci\/hotspot\/test\/TestHotSpotJVMCIRuntime.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -149,1 +149,1 @@\n-        ProcessBuilder process = ProcessTools.createJavaProcessBuilder(cmds);\n+        ProcessBuilder process = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(cmds);\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/driver\/TestVMProcess.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/compiler\/linkage\/TestLinkageErrorInGenerateOopMap.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:+UseG1GC\", \"-XX:+PrintFlagsFinal\", \"-version\");\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:+UseG1GC\", \"-XX:+PrintFlagsFinal\", \"-version\");\n","filename":"test\/hotspot\/jtreg\/compiler\/loopstripmining\/CheckLoopStripMiningIterShortLoop.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -97,1 +97,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(cmds);\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(cmds);\n","filename":"test\/hotspot\/jtreg\/compiler\/loopstripmining\/TestNoWarningLoopStripMiningIterSet.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,1 +46,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/compiler\/onSpinWait\/TestOnSpinWait.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -74,1 +74,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(command);\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(command);\n","filename":"test\/hotspot\/jtreg\/compiler\/onSpinWait\/TestOnSpinWaitAArch64.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -90,1 +90,1 @@\n-            checkFinalFlagsEqualTo(ProcessTools.createJavaProcessBuilder(\"-XX:+UnlockDiagnosticVMOptions\", \"-XX:+PrintFlagsFinal\", \"-version\"),\n+            checkFinalFlagsEqualTo(ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:+UnlockDiagnosticVMOptions\", \"-XX:+PrintFlagsFinal\", \"-version\"),\n@@ -92,1 +92,1 @@\n-            checkFinalFlagsEqualTo(ProcessTools.createJavaProcessBuilder(\"-XX:+UnlockDiagnosticVMOptions\", \"-XX:OnSpinWaitInstCount=2\", \"-XX:+PrintFlagsFinal\", \"-version\"),\n+            checkFinalFlagsEqualTo(ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:+UnlockDiagnosticVMOptions\", \"-XX:OnSpinWaitInstCount=2\", \"-XX:+PrintFlagsFinal\", \"-version\"),\n","filename":"test\/hotspot\/jtreg\/compiler\/onSpinWait\/TestOnSpinWaitAArch64DefaultFlags.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,1 +48,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/compiler\/onSpinWait\/TestOnSpinWaitC1.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -57,1 +57,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(command);\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(command);\n","filename":"test\/hotspot\/jtreg\/compiler\/onSpinWait\/TestOnSpinWaitNoneAArch64.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -67,1 +67,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(command);\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(command);\n","filename":"test\/hotspot\/jtreg\/compiler\/onSpinWait\/TestOnSpinWaitRISCV64.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -254,1 +254,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(arguments);\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(arguments);\n@@ -269,1 +269,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(arguments);\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(arguments);\n@@ -280,1 +280,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(arguments);\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(arguments);\n","filename":"test\/hotspot\/jtreg\/compiler\/oracle\/CheckCompileCommandOption.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -59,1 +59,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(arguments);\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(arguments);\n","filename":"test\/hotspot\/jtreg\/compiler\/oracle\/TestCompileCommand.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -86,1 +86,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(arguments);\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(arguments);\n","filename":"test\/hotspot\/jtreg\/compiler\/oracle\/TestInvalidCompileCommand.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -85,1 +85,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/compiler\/rangechecks\/TestRangeCheckHoistingScaledIV.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -64,1 +64,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(command);\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(command);\n","filename":"test\/hotspot\/jtreg\/compiler\/sharedstubs\/SharedStubToInterpTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -63,1 +63,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(command);\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(command);\n","filename":"test\/hotspot\/jtreg\/compiler\/sharedstubs\/SharedTrampolineTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,1 +45,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:CICompilerCount=-1\");\n+    ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:CICompilerCount=-1\");\n","filename":"test\/hotspot\/jtreg\/compiler\/startup\/NumCompilerThreadsCheck.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,1 +47,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:ReservedCodeCacheSize=3m\",\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:ReservedCodeCacheSize=3m\",\n","filename":"test\/hotspot\/jtreg\/compiler\/startup\/SmallCodeCacheStartup.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,1 +46,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-Xint\", \"-XX:+DisplayVMOutputToStdout\", \"-version\");\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-Xint\", \"-XX:+DisplayVMOutputToStdout\", \"-version\");\n@@ -51,1 +51,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-Xint\", \"-XX:ReservedCodeCacheSize=1770K\", \"-XX:InitialCodeCacheSize=4K\", \"-version\");\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-Xint\", \"-XX:ReservedCodeCacheSize=1770K\", \"-XX:InitialCodeCacheSize=4K\", \"-version\");\n","filename":"test\/hotspot\/jtreg\/compiler\/startup\/StartupOutput.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -66,1 +66,1 @@\n-                = ProcessTools.createJavaProcessBuilder(\n+                = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -86,1 +86,1 @@\n-                = ProcessTools.createJavaProcessBuilder(\n+                = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/compiler\/testlibrary\/rtm\/RTMTestBase.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -227,1 +227,1 @@\n-            pb = ProcessTools.createJavaProcessBuilder(\"-XX:-BackgroundCompilation\",\n+            pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:-BackgroundCompilation\",\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorization\/TestBufferVectorization.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -70,1 +70,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:os+container=trace\", \"-version\");\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-Xlog:os+container=trace\", \"-version\");\n","filename":"test\/hotspot\/jtreg\/containers\/cgroup\/PlainRead.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -69,1 +69,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/gc\/TestAgeOutput.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,1 +45,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/gc\/TestCardTablePageCommits.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -61,1 +61,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/gc\/TestNumWorkerOutput.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -99,1 +99,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/gc\/TestSmallHeap.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -60,1 +60,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(vmOpts);\n+    ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(vmOpts);\n","filename":"test\/hotspot\/jtreg\/gc\/TestVerifySilently.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -62,1 +62,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(vmOpts);\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(vmOpts);\n","filename":"test\/hotspot\/jtreg\/gc\/TestVerifySubSet.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -69,2 +69,2 @@\n-    static public ProcessBuilder createJavaProcessBuilder(List<String> arguments) {\n-        return createJavaProcessBuilder(arguments.toArray(String[]::new));\n+    static public ProcessBuilder createJavaProcessBuilderIgnoreTestJavaOpts(List<String> arguments) {\n+        return createJavaProcessBuilderIgnoreTestJavaOpts(arguments.toArray(String[]::new));\n@@ -73,2 +73,2 @@\n-    static public ProcessBuilder createJavaProcessBuilder(String... arguments) {\n-        return ProcessTools.createJavaProcessBuilder(withDefaults(arguments));\n+    static public ProcessBuilder createJavaProcessBuilderIgnoreTestJavaOpts(String... arguments) {\n+        return ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(withDefaults(arguments));\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/GCArguments.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -68,1 +68,1 @@\n-        ProcessBuilder pb = GCArguments.createJavaProcessBuilder(\n+        ProcessBuilder pb = GCArguments.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestAggressiveHeap.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,1 +54,1 @@\n-    ProcessBuilder pb = GCArguments.createJavaProcessBuilder(\n+    ProcessBuilder pb = GCArguments.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -80,1 +80,1 @@\n-    ProcessBuilder pb = GCArguments.createJavaProcessBuilder(\n+    ProcessBuilder pb = GCArguments.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestArrayAllocatorMallocLimit.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,1 +53,1 @@\n-        ProcessBuilder pb = GCArguments.createJavaProcessBuilder(args);\n+        ProcessBuilder pb = GCArguments.createJavaProcessBuilderIgnoreTestJavaOpts(args);\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestCompressedClassFlags.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,1 @@\n-        ProcessBuilder pb = GCArguments.createJavaProcessBuilder(\"-XX:-UseSerialGC\",\n+        ProcessBuilder pb = GCArguments.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:-UseSerialGC\",\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestDisableDefaultGC.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -81,1 +81,1 @@\n-    ProcessBuilder pb = GCArguments.createJavaProcessBuilder(vmOpts);\n+    ProcessBuilder pb = GCArguments.createJavaProcessBuilderIgnoreTestJavaOpts(vmOpts);\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestG1ConcMarkStepDurationMillis.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -72,1 +72,1 @@\n-    ProcessBuilder pb = GCArguments.createJavaProcessBuilder(vmOpts);\n+    ProcessBuilder pb = GCArguments.createJavaProcessBuilderIgnoreTestJavaOpts(vmOpts);\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestG1ConcRefinementThreads.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -56,1 +56,1 @@\n-    ProcessBuilder pb = GCArguments.createJavaProcessBuilder(flagList);\n+    ProcessBuilder pb = GCArguments.createJavaProcessBuilderIgnoreTestJavaOpts(flagList);\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestG1HeapRegionSize.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -66,1 +66,1 @@\n-        ProcessBuilder pb = GCArguments.createJavaProcessBuilder(\n+        ProcessBuilder pb = GCArguments.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestG1PercentageOptions.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,1 +51,1 @@\n-    ProcessBuilder pb = GCArguments.createJavaProcessBuilder(flagList);\n+    ProcessBuilder pb = GCArguments.createJavaProcessBuilderIgnoreTestJavaOpts(flagList);\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestG1RemSetFlags.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,1 +50,1 @@\n-    ProcessBuilder pb = GCArguments.createJavaProcessBuilder(\n+    ProcessBuilder pb = GCArguments.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestHeapFreeRatio.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,1 @@\n-    ProcessBuilder pb = GCArguments.createJavaProcessBuilder(\n+    ProcessBuilder pb = GCArguments.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -61,1 +61,1 @@\n-    ProcessBuilder pb = GCArguments.createJavaProcessBuilder(\n+    ProcessBuilder pb = GCArguments.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestInitialTenuringThreshold.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -118,1 +118,1 @@\n-    ProcessBuilder pb = GCArguments.createJavaProcessBuilder(gcflag,\n+    ProcessBuilder pb = GCArguments.createJavaProcessBuilderIgnoreTestJavaOpts(gcflag,\n@@ -211,1 +211,1 @@\n-    ProcessBuilder pb = GCArguments.createJavaProcessBuilder(finalargs.toArray(String[]::new));\n+    ProcessBuilder pb = GCArguments.createJavaProcessBuilderIgnoreTestJavaOpts(finalargs.toArray(String[]::new));\n@@ -311,1 +311,1 @@\n-    ProcessBuilder pb = GCArguments.createJavaProcessBuilder(flags);\n+    ProcessBuilder pb = GCArguments.createJavaProcessBuilderIgnoreTestJavaOpts(flags);\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestMaxHeapSizeTools.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -101,1 +101,1 @@\n-        ProcessBuilder procBuilder = GCArguments.createJavaProcessBuilder(vmOptions);\n+        ProcessBuilder procBuilder = GCArguments.createJavaProcessBuilderIgnoreTestJavaOpts(vmOptions);\n@@ -126,1 +126,1 @@\n-        ProcessBuilder procBuilder = GCArguments.createJavaProcessBuilder(vmOptions);\n+        ProcessBuilder procBuilder = GCArguments.createJavaProcessBuilderIgnoreTestJavaOpts(vmOptions);\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestMaxMinHeapFreeRatioFlags.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -94,1 +94,1 @@\n-    ProcessBuilder pb = GCArguments.createJavaProcessBuilder(finalargs);\n+    ProcessBuilder pb = GCArguments.createJavaProcessBuilderIgnoreTestJavaOpts(finalargs);\n@@ -117,1 +117,1 @@\n-    ProcessBuilder pb = GCArguments.createJavaProcessBuilder(finalargs);\n+    ProcessBuilder pb = GCArguments.createJavaProcessBuilderIgnoreTestJavaOpts(finalargs);\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestMaxNewSize.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -64,1 +64,1 @@\n-    ProcessBuilder pb = GCArguments.createJavaProcessBuilder(args);\n+    ProcessBuilder pb = GCArguments.createJavaProcessBuilderIgnoreTestJavaOpts(args);\n@@ -87,1 +87,1 @@\n-    ProcessBuilder pb = GCArguments.createJavaProcessBuilder(args);\n+    ProcessBuilder pb = GCArguments.createJavaProcessBuilderIgnoreTestJavaOpts(args);\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestMaxRAMFlags.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -105,1 +105,1 @@\n-        ProcessBuilder procBuilder = GCArguments.createJavaProcessBuilder(vmOptions);\n+        ProcessBuilder procBuilder = GCArguments.createJavaProcessBuilderIgnoreTestJavaOpts(vmOptions);\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestMinAndInitialSurvivorRatioFlags.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -85,1 +85,1 @@\n-        ProcessBuilder procBuilder = GCArguments.createJavaProcessBuilder(vmOptions);\n+        ProcessBuilder procBuilder = GCArguments.createJavaProcessBuilderIgnoreTestJavaOpts(vmOptions);\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestNewRatioFlag.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -169,1 +169,1 @@\n-        ProcessBuilder procBuilder = GCArguments.createJavaProcessBuilder(vmOptions);\n+        ProcessBuilder procBuilder = GCArguments.createJavaProcessBuilderIgnoreTestJavaOpts(vmOptions);\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestNewSizeFlags.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -68,1 +68,1 @@\n-    ProcessBuilder pb = GCArguments.createJavaProcessBuilder(\"-XX:+UseSerialGC\",\n+    ProcessBuilder pb = GCArguments.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:+UseSerialGC\",\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestNewSizeThreadIncrease.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -164,1 +164,1 @@\n-    ProcessBuilder pb = GCArguments.createJavaProcessBuilder(vmOpts);\n+    ProcessBuilder pb = GCArguments.createJavaProcessBuilderIgnoreTestJavaOpts(vmOpts);\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestObjectTenuringFlags.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -59,1 +59,1 @@\n-    ProcessBuilder pb = GCArguments.createJavaProcessBuilder(\n+    ProcessBuilder pb = GCArguments.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -97,1 +97,1 @@\n-      ProcessBuilder pb = GCArguments.createJavaProcessBuilder(\n+      ProcessBuilder pb = GCArguments.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -127,1 +127,1 @@\n-    ProcessBuilder pb = GCArguments.createJavaProcessBuilder(flags);\n+    ProcessBuilder pb = GCArguments.createJavaProcessBuilderIgnoreTestJavaOpts(flags);\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestParallelGCThreads.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -80,1 +80,1 @@\n-        ProcessBuilder pb = GCArguments.createJavaProcessBuilder(result);\n+        ProcessBuilder pb = GCArguments.createJavaProcessBuilderIgnoreTestJavaOpts(result);\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestParallelRefProc.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,1 +47,1 @@\n-        ProcessBuilder pb = GCArguments.createJavaProcessBuilder(\n+        ProcessBuilder pb = GCArguments.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestSelectDefaultGC.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -63,1 +63,1 @@\n-    ProcessBuilder pb_enabled = GCArguments.createJavaProcessBuilder(\n+    ProcessBuilder pb_enabled = GCArguments.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestSmallInitialHeapWithLargePageAndNUMA.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -90,1 +90,1 @@\n-        ProcessBuilder procBuilder = GCArguments.createJavaProcessBuilder(vmOptions);\n+        ProcessBuilder procBuilder = GCArguments.createJavaProcessBuilderIgnoreTestJavaOpts(vmOptions);\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestSurvivorRatioFlag.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -119,1 +119,1 @@\n-        ProcessBuilder procBuilder = GCArguments.createJavaProcessBuilder(vmOptions);\n+        ProcessBuilder procBuilder = GCArguments.createJavaProcessBuilderIgnoreTestJavaOpts(vmOptions);\n@@ -154,1 +154,1 @@\n-        ProcessBuilder procBuilder = GCArguments.createJavaProcessBuilder(vmOptions);\n+        ProcessBuilder procBuilder = GCArguments.createJavaProcessBuilderIgnoreTestJavaOpts(vmOptions);\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestTargetSurvivorRatioFlag.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,1 @@\n-    ProcessBuilder pb = GCArguments.createJavaProcessBuilder(\n+    ProcessBuilder pb = GCArguments.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -53,1 +53,1 @@\n-    pb = GCArguments.createJavaProcessBuilder(\n+    pb = GCArguments.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -64,1 +64,1 @@\n-    pb = GCArguments.createJavaProcessBuilder(\n+    pb = GCArguments.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestUnrecognizedVMOptionsHandling.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -96,1 +96,1 @@\n-    ProcessBuilder pb = GCArguments.createJavaProcessBuilder(finalargs);\n+    ProcessBuilder pb = GCArguments.createJavaProcessBuilderIgnoreTestJavaOpts(finalargs);\n@@ -160,1 +160,1 @@\n-    ProcessBuilder pb = GCArguments.createJavaProcessBuilder(flags);\n+    ProcessBuilder pb = GCArguments.createJavaProcessBuilderIgnoreTestJavaOpts(flags);\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestUseCompressedOopsErgoTools.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -102,1 +102,1 @@\n-        ProcessBuilder pb = GCArguments.createJavaProcessBuilder(vmOpts);\n+        ProcessBuilder pb = GCArguments.createJavaProcessBuilderIgnoreTestJavaOpts(vmOpts);\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestVerifyBeforeAndAfterGCFlags.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,1 +48,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+    ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/gc\/class_unloading\/TestG1ClassUnloadingHWM.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(args);\n+    ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(args);\n@@ -47,1 +47,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(args);\n+    ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(args);\n","filename":"test\/hotspot\/jtreg\/gc\/epsilon\/TestDieDefault.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(args);\n+    ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(args);\n@@ -48,1 +48,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(args);\n+    ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(args);\n","filename":"test\/hotspot\/jtreg\/gc\/epsilon\/TestDieWithHeapDump.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(args);\n+    ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(args);\n@@ -50,1 +50,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(args);\n+    ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(args);\n","filename":"test\/hotspot\/jtreg\/gc\/epsilon\/TestDieWithOnError.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -76,1 +76,1 @@\n-    ProcessBuilder pb_enabled = ProcessTools.createJavaProcessBuilder(baseArgs);\n+    ProcessBuilder pb_enabled = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(baseArgs);\n@@ -84,1 +84,1 @@\n-    pb_enabled = ProcessTools.createJavaProcessBuilder(parRefArgs);\n+    pb_enabled = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(parRefArgs);\n","filename":"test\/hotspot\/jtreg\/gc\/ergonomics\/TestDynamicNumberOfGCThreads.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -73,1 +73,1 @@\n-    ProcessBuilder pb_enabled = ProcessTools.createJavaProcessBuilder(\n+    ProcessBuilder pb_enabled = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/gc\/ergonomics\/TestInitialGCThreadLogging.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -52,1 +52,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(testArguments);\n+    ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(testArguments);\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/Test2GbHeap.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -83,1 +83,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestEagerReclaimHumongousRegions.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -122,1 +122,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestEagerReclaimHumongousRegionsClearMarkBits.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestEagerReclaimHumongousRegionsLog.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -95,1 +95,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestEagerReclaimHumongousRegionsWithRefs.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,1 +46,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:+UseG1GC\",\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:+UseG1GC\",\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestEvacuationFailure.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -57,1 +57,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(arguments);\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(arguments);\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestG1SkipCompaction.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:+UseG1GC\",\n+    ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:+UseG1GC\",\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestG1TraceEagerReclaimHumongousObjects.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -221,1 +221,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:+UseG1GC\",\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:+UseG1GC\",\n@@ -229,1 +229,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-XX:+UseG1GC\",\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:+UseG1GC\",\n@@ -237,1 +237,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-XX:+UseG1GC\",\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:+UseG1GC\",\n@@ -256,1 +256,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:+UseG1GC\",\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:+UseG1GC\",\n@@ -274,1 +274,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:+UseG1GC\",\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:+UseG1GC\",\n@@ -288,1 +288,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-XX:+UseG1GC\",\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:+UseG1GC\",\n@@ -307,1 +307,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:+UseG1GC\",\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:+UseG1GC\",\n@@ -321,1 +321,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:+UseG1GC\",\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:+UseG1GC\",\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestGCLogMessages.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,1 +48,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestHumongousAllocConcurrentStart.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,1 +50,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestHumongousAllocNearlyFullRegion.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -109,1 +109,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(finalargs);\n+    ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(finalargs);\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestHumongousCodeCacheRoots.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -59,1 +59,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestHumongousConcurrentStartUndo.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -126,1 +126,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(getOpts(heapsize, true));\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(getOpts(heapsize, true));\n@@ -141,1 +141,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(getOpts(heapsize, false));\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(getOpts(heapsize, false));\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestLargePageUseForAuxMemory.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -90,1 +90,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-XX:+UseG1GC\",\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:+UseG1GC\",\n@@ -103,1 +103,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-XX:+UseG1GC\",\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:+UseG1GC\",\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestLargePageUseForHeap.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,1 +53,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(testArguments);\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(testArguments);\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestMarkStackSizes.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -112,1 +112,1 @@\n-        ProcessBuilder procBuilder =  ProcessTools.createJavaProcessBuilder(basicOpts);\n+        ProcessBuilder procBuilder =  ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(basicOpts);\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestMixedGCLiveThreshold.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+    ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestOneEdenRegionAfterGC.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -62,1 +62,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(arguments);\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(arguments);\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestPLABOutput.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -65,1 +65,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(testArguments);\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(testArguments);\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestPLABSizeBounds.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:+UseG1GC\",\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:+UseG1GC\",\n@@ -54,1 +54,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-XX:+UseG1GC\",\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:+UseG1GC\",\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestPeriodicLogMessages.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -72,1 +72,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(finalargs);\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(finalargs);\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestPrintRegionRememberedSetInfo.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,1 +47,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:+UseG1GC\",\n+    ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:+UseG1GC\",\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestRemsetLoggingThreads.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -80,1 +80,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(finalargs);\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(finalargs);\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestRemsetLoggingTools.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -62,1 +62,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(dump_args);\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(dump_args);\n@@ -75,1 +75,1 @@\n-            pb = ProcessTools.createJavaProcessBuilder(load_args.toArray(new String[0]));\n+            pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(load_args.toArray(new String[0]));\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestSharedArchiveWithPreTouch.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -64,1 +64,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestShrinkDefragmentedHeap.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xbootclasspath\/a:.\",\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-Xbootclasspath\/a:.\",\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestSkipRebuildRemsetPhase.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -181,1 +181,1 @@\n-        ProcessBuilder procBuilder =  ProcessTools.createJavaProcessBuilder(basicOpts);\n+        ProcessBuilder procBuilder =  ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(basicOpts);\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestVerifyGCType.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -93,1 +93,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(testOpts);\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(testOpts);\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/mixedgc\/TestLogging.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -184,1 +184,1 @@\n-        ProcessBuilder pb_enabled = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb_enabled = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/numa\/TestG1NUMATouchRegions.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,1 +45,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:+PrintGC\", DoGC.class.getName());\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:+PrintGC\", DoGC.class.getName());\n@@ -55,1 +55,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:+PrintGCDetails\", DoGC.class.getName());\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:+PrintGCDetails\", DoGC.class.getName());\n@@ -66,1 +66,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xloggc:\" + fileName, DoGC.class.getName());\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-Xloggc:\" + fileName, DoGC.class.getName());\n@@ -83,1 +83,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:+PrintGCDetails\", \"-Xloggc:\" + fileName, DoGC.class.getName());\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:+PrintGCDetails\", \"-Xloggc:\" + fileName, DoGC.class.getName());\n","filename":"test\/hotspot\/jtreg\/gc\/logging\/TestDeprecatedPrintFlags.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -77,1 +77,1 @@\n-      ProcessTools.createJavaProcessBuilder(\"-XX:+UnlockExperimentalVMOptions\", \"-XX:+\" + gcFlag, \"-Xlog:gc\", \"-Xmx10M\", GCTest.class.getName());\n+      ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:+UnlockExperimentalVMOptions\", \"-XX:+\" + gcFlag, \"-Xlog:gc\", \"-Xmx10M\", GCTest.class.getName());\n","filename":"test\/hotspot\/jtreg\/gc\/logging\/TestGCId.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -70,1 +70,1 @@\n-        ProcessBuilder pb_enabled = ProcessTools.createJavaProcessBuilder(\"-Xlog:gc+ref+phases=debug\",\n+        ProcessBuilder pb_enabled = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-Xlog:gc+ref+phases=debug\",\n@@ -98,1 +98,1 @@\n-        ProcessBuilder pb_enabled = ProcessTools.createJavaProcessBuilder(\"-Xlog:gc+phases+ref=debug\",\n+        ProcessBuilder pb_enabled = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-Xlog:gc+phases+ref=debug\",\n","filename":"test\/hotspot\/jtreg\/gc\/logging\/TestPrintReferences.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -87,1 +87,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+    ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/gc\/metaspace\/TestMetaspaceSizeFlags.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -122,1 +122,1 @@\n-    final ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(jvmArgs);\n+    final ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(jvmArgs);\n","filename":"test\/hotspot\/jtreg\/gc\/metaspace\/TestSizeTransitions.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xmx128m\", \"-Xmn100m\", \"-XX:+UseSerialGC\", \"-Xlog:gc\", HeapFiller.class.getName());\n+    ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-Xmx128m\", \"-Xmn100m\", \"-XX:+UseSerialGC\", \"-Xlog:gc\", HeapFiller.class.getName());\n","filename":"test\/hotspot\/jtreg\/gc\/serial\/HeapChangeLogging.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -59,1 +59,1 @@\n-                    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xms128m\",\n+                    ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-Xms128m\",\n","filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/TestEvilSyncBug.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(cmds);\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(cmds);\n","filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/TestObjItrWithHeapDump.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -45,1 +45,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(cmds);\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(cmds);\n","filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/TestPeriodicGC.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -58,1 +58,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -71,1 +71,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/oom\/TestAllocLargeObj.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -66,1 +66,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/oom\/TestAllocLargerThanHeap.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -57,1 +57,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -70,1 +70,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/oom\/TestAllocSmallObj.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -102,1 +102,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(pbArgs.toArray(new String[0]));\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(pbArgs.toArray(new String[0]));\n","filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/oom\/TestClassLoaderLeak.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -65,1 +65,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/oom\/TestThreadFailure.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -49,1 +49,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -60,1 +60,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -71,1 +71,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -86,1 +86,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -97,1 +97,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -108,1 +108,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -119,1 +119,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/options\/TestArgumentRanges.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(cmds);\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(cmds);\n","filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/options\/TestClassUnloadingArguments.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -63,1 +63,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -80,1 +80,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -98,1 +98,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -116,1 +116,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -134,1 +134,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/options\/TestExplicitGC.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -63,1 +63,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/options\/TestExplicitGCNoConcurrent.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -55,1 +55,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -76,1 +76,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -97,1 +97,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/options\/TestHeuristicsUnlock.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -54,1 +54,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -65,1 +65,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/options\/TestHumongousThresholdArgs.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -47,1 +47,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(cmds);\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(cmds);\n","filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/options\/TestLoopMiningArguments.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -54,1 +54,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -75,1 +75,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -96,1 +96,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/options\/TestModeUnlock.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:+UnlockExperimentalVMOptions\",\n+            ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:+UnlockExperimentalVMOptions\",\n@@ -58,1 +58,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:+UnlockExperimentalVMOptions\",\n+            ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:+UnlockExperimentalVMOptions\",\n@@ -68,1 +68,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:+UnlockExperimentalVMOptions\",\n+            ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:+UnlockExperimentalVMOptions\",\n@@ -80,1 +80,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:+UnlockExperimentalVMOptions\",\n+            ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:+UnlockExperimentalVMOptions\",\n@@ -91,1 +91,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:+UnlockExperimentalVMOptions\",\n+            ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:+UnlockExperimentalVMOptions\",\n@@ -103,1 +103,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:+UnlockExperimentalVMOptions\",\n+            ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:+UnlockExperimentalVMOptions\",\n@@ -114,1 +114,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:+UnlockExperimentalVMOptions\",\n+            ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:+UnlockExperimentalVMOptions\",\n@@ -125,1 +125,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:+UnlockExperimentalVMOptions\",\n+            ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:+UnlockExperimentalVMOptions\",\n@@ -137,1 +137,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:+UnlockExperimentalVMOptions\",\n+            ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:+UnlockExperimentalVMOptions\",\n@@ -148,1 +148,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:+UnlockExperimentalVMOptions\",\n+            ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:+UnlockExperimentalVMOptions\",\n@@ -163,1 +163,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:+UnlockExperimentalVMOptions\",\n+            ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:+UnlockExperimentalVMOptions\",\n@@ -175,1 +175,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:+UnlockExperimentalVMOptions\",\n+            ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:+UnlockExperimentalVMOptions\",\n@@ -187,1 +187,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:+UnlockExperimentalVMOptions\",\n+            ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:+UnlockExperimentalVMOptions\",\n@@ -199,1 +199,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:+UnlockExperimentalVMOptions\",\n+            ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:+UnlockExperimentalVMOptions\",\n@@ -214,1 +214,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:+UnlockExperimentalVMOptions\",\n+            ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:+UnlockExperimentalVMOptions\",\n@@ -226,1 +226,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:+UnlockExperimentalVMOptions\",\n+            ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:+UnlockExperimentalVMOptions\",\n","filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/options\/TestRegionSizeArgs.java","additions":16,"deletions":16,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -94,1 +94,1 @@\n-                    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(conf.toArray(new String[0]));\n+                    ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(conf.toArray(new String[0]));\n","filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/options\/TestSelectiveBarrierFlags.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:+UnlockExperimentalVMOptions\",\n+            ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:+UnlockExperimentalVMOptions\",\n@@ -52,1 +52,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:+UnlockExperimentalVMOptions\",\n+            ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:+UnlockExperimentalVMOptions\",\n@@ -63,1 +63,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:+UnlockExperimentalVMOptions\",\n+            ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:+UnlockExperimentalVMOptions\",\n","filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/options\/TestSoftMaxHeapSize.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/options\/TestThreadCounts.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -56,1 +56,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/options\/TestThreadCountsOverride.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -68,1 +68,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -86,1 +86,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/options\/TestWrongBarrierDisable.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -58,1 +58,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -76,1 +76,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/options\/TestWrongBarrierEnable.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -64,1 +64,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(baseargs);\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(baseargs);\n","filename":"test\/hotspot\/jtreg\/gc\/stress\/TestReclaimStringsLeaksMemory.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -75,1 +75,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(options);\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(options);\n","filename":"test\/hotspot\/jtreg\/gc\/stress\/TestStressG1Humongous.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -62,1 +62,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(options);\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(options);\n","filename":"test\/hotspot\/jtreg\/gc\/stress\/TestStressG1Uncommit.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,1 @@\n-        ProcessTools.executeProcess(ProcessTools.createJavaProcessBuilder(\n+        ProcessTools.executeProcess(ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/gc\/x\/TestAllocateHeapAt.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -71,1 +71,1 @@\n-        ProcessTools.executeProcess(ProcessTools.createJavaProcessBuilder(\n+        ProcessTools.executeProcess(ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/gc\/x\/TestPageCacheFlush.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -56,1 +56,1 @@\n-            ProcessTools.executeProcess(ProcessTools.createJavaProcessBuilder(\n+            ProcessTools.executeProcess(ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/gc\/x\/TestSmallHeap.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n-        ProcessTools.executeProcess(ProcessTools.createJavaProcessBuilder(\n+        ProcessTools.executeProcess(ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/gc\/z\/TestAllocateHeapAt.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -71,1 +71,1 @@\n-        ProcessTools.executeProcess(ProcessTools.createJavaProcessBuilder(\n+        ProcessTools.executeProcess(ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/gc\/z\/TestPageCacheFlush.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -56,1 +56,1 @@\n-            ProcessTools.executeProcess(ProcessTools.createJavaProcessBuilder(\n+            ProcessTools.executeProcess(ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/gc\/z\/TestSmallHeap.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,1 +38,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/runtime\/7162488\/TestUnrecognizedVmOption.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -232,1 +232,1 @@\n-        ProcessBuilder pb = createJavaProcessBuilder(\n+        ProcessBuilder pb = createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -253,1 +253,1 @@\n-            ProcessBuilder pb = createJavaProcessBuilder(\n+            ProcessBuilder pb = createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/runtime\/8176717\/TestInheritFD.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,1 +54,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"--patch-module=java.base=mods\/java.base\", \"-version\");\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"--patch-module=java.base=mods\/java.base\", \"-version\");\n","filename":"test\/hotspot\/jtreg\/runtime\/BadObjectClass\/BootstrapRedefine.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+    ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/runtime\/BootClassAppendProp\/BootClassPathAppend.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"TestPkg.Lambda\");\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"TestPkg.Lambda\");\n","filename":"test\/hotspot\/jtreg\/runtime\/BootstrapMethod\/TestLambdaExceptionInInitializer.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,1 +45,1 @@\n-    pb = ProcessTools.createJavaProcessBuilder(\n+    pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -53,1 +53,1 @@\n-      pb = ProcessTools.createJavaProcessBuilder(\n+      pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/runtime\/CDSCompressedKPtrs\/CDSCompressedKPtrs.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,1 +42,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -58,1 +58,1 @@\n-            pb = ProcessTools.createJavaProcessBuilder(\n+            pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/runtime\/CDSCompressedKPtrs\/XShareAuto.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"BadHelloWorld\");\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"BadHelloWorld\");\n","filename":"test\/hotspot\/jtreg\/runtime\/ClassFile\/FormatCheckingTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -73,1 +73,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/runtime\/ClassFile\/JsrRewriting.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -67,1 +67,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/runtime\/ClassFile\/OomWhileParsingRepeatedJsr.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -64,1 +64,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"--enable-preview\",\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"--enable-preview\",\n@@ -71,1 +71,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"--enable-preview\", \"-Xlog:class+preview\",\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"--enable-preview\", \"-Xlog:class+preview\",\n","filename":"test\/hotspot\/jtreg\/runtime\/ClassFile\/PreviewVersion.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,1 +45,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/runtime\/ClassFile\/TestCheckedExceptions.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+    ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -47,1 +47,1 @@\n-    pb = ProcessTools.createJavaProcessBuilder(\n+    pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/runtime\/CommandLine\/BooleanFlagWithInvalidValue.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -50,1 +50,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-XX:CompileCommandFile=hs_comp.txt\", \"-version\");\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:CompileCommandFile=hs_comp.txt\", \"-version\");\n@@ -63,1 +63,1 @@\n-            pb = ProcessTools.createJavaProcessBuilder(\"-version\");\n+            pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-version\");\n","filename":"test\/hotspot\/jtreg\/runtime\/CommandLine\/CompilerConfigFileWarning.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -54,1 +54,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+    ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/runtime\/CommandLine\/ConfigFileParsing.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -50,1 +50,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-XX:Flags=hs_flags.txt\",\"-version\");\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:Flags=hs_flags.txt\",\"-version\");\n@@ -61,1 +61,1 @@\n-            pb = ProcessTools.createJavaProcessBuilder(\"-version\");\n+            pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-version\");\n","filename":"test\/hotspot\/jtreg\/runtime\/CommandLine\/ConfigFileWarning.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(flag + \"=\" + value, \"-version\");\n+    ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(flag + \"=\" + value, \"-version\");\n","filename":"test\/hotspot\/jtreg\/runtime\/CommandLine\/DoubleFlagWithIntegerValue.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+    ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/runtime\/CommandLine\/FlagWithInvalidValue.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(args);\n+    ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(args);\n","filename":"test\/hotspot\/jtreg\/runtime\/CommandLine\/IgnoreUnrecognizedVMOptions.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+    ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -47,1 +47,1 @@\n-    pb = ProcessTools.createJavaProcessBuilder(\n+    pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/runtime\/CommandLine\/NonBooleanFlagWithInvalidBooleanPrefix.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+    ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -52,1 +52,1 @@\n-    ProcessBuilder pb2 = ProcessTools.createJavaProcessBuilder(\n+    ProcessBuilder pb2 = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/runtime\/CommandLine\/ObsoleteFlagErrorMessage.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -54,1 +54,1 @@\n-        output = new OutputAnalyzer((ProcessTools.createJavaProcessBuilder(\n+        output = new OutputAnalyzer((ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/runtime\/CommandLine\/OptionsValidation\/TestJcmdOutput.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -420,1 +420,1 @@\n-        out = new OutputAnalyzer(ProcessTools.createJavaProcessBuilder(runJava).start());\n+        out = new OutputAnalyzer(ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(runJava).start());\n","filename":"test\/hotspot\/jtreg\/runtime\/CommandLine\/OptionsValidation\/common\/optionsvalidation\/JVMOption.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -472,1 +472,1 @@\n-        p = ProcessTools.createJavaProcessBuilder(runJava).start();\n+        p = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(runJava).start();\n","filename":"test\/hotspot\/jtreg\/runtime\/CommandLine\/OptionsValidation\/common\/optionsvalidation\/JVMOptionsUtils.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-      ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+      ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -48,1 +48,1 @@\n-      pb = ProcessTools.createJavaProcessBuilder(\n+      pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/runtime\/CommandLine\/TestHexArguments.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-        output = new OutputAnalyzer(ProcessTools.createJavaProcessBuilder(\"-XX:\" + VERY_LONG_OPTION, \"-version\").start());\n+        output = new OutputAnalyzer(ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:\" + VERY_LONG_OPTION, \"-version\").start());\n","filename":"test\/hotspot\/jtreg\/runtime\/CommandLine\/TestLongUnrecognizedVMOption.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -61,1 +61,1 @@\n-                ProcessTools.createJavaProcessBuilder(testOption, \"-version\");\n+                ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(testOption, \"-version\");\n","filename":"test\/hotspot\/jtreg\/runtime\/CommandLine\/TestNullTerminatedFlags.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+    ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -49,1 +49,1 @@\n-    pb = ProcessTools.createJavaProcessBuilder(\n+    pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -58,1 +58,1 @@\n-    pb = ProcessTools.createJavaProcessBuilder(\"-XX:Flags=\"+s);\n+    pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:Flags=\"+s);\n","filename":"test\/hotspot\/jtreg\/runtime\/CommandLine\/TestVMOptions.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/runtime\/CommandLine\/TraceExceptionsTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -47,1 +47,1 @@\n-      ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+      ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/runtime\/CommandLine\/UnrecognizedVMOption.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -104,1 +104,1 @@\n-        ProcessBuilder processBuilder = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder processBuilder = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -117,1 +117,1 @@\n-        ProcessBuilder processBuilder = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder processBuilder = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/runtime\/CommandLine\/VMDeprecatedOptions.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:+AlwaysSafeConstructors\", \"-version\");\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:+AlwaysSafeConstructors\", \"-version\");\n@@ -51,1 +51,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-XX:+PrintInlining\", \"-version\");\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:+PrintInlining\", \"-version\");\n@@ -56,1 +56,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-XX:+VerifyStack\", \"-version\");\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:+VerifyStack\", \"-version\");\n@@ -61,1 +61,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-XX:+CheckCompressedOops\", \"-version\");\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:+CheckCompressedOops\", \"-version\");\n","filename":"test\/hotspot\/jtreg\/runtime\/CommandLine\/VMOptionWarning.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -251,1 +251,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(runJava);\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(runJava);\n","filename":"test\/hotspot\/jtreg\/runtime\/CommandLine\/VMOptionsFile\/TestVMOptionsFile.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -62,1 +62,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -79,1 +79,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -97,1 +97,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -122,1 +122,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -143,1 +143,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -157,1 +157,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -168,1 +168,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -184,1 +184,1 @@\n-          pb = ProcessTools.createJavaProcessBuilder(\n+          pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -203,1 +203,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -219,1 +219,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -239,1 +239,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -259,1 +259,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -273,1 +273,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -286,1 +286,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -304,1 +304,1 @@\n-          pb = ProcessTools.createJavaProcessBuilder(\n+          pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/runtime\/CompressedOops\/CompressedClassPointers.java","additions":16,"deletions":16,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,1 +45,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-XX:CompressedClassSpaceSize=0\",\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:CompressedClassSpaceSize=0\",\n@@ -52,1 +52,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-XX:CompressedClassSpaceSize=-1\",\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:CompressedClassSpaceSize=-1\",\n@@ -60,1 +60,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-XX:CompressedClassSpaceSize=4g\",\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:CompressedClassSpaceSize=4g\",\n@@ -70,1 +70,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-XX:+UnlockDiagnosticVMOptions\",\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:+UnlockDiagnosticVMOptions\",\n@@ -80,1 +80,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-XX:+UnlockDiagnosticVMOptions\",\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:+UnlockDiagnosticVMOptions\",\n@@ -89,1 +89,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-XX:-UseCompressedClassPointers\",\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:-UseCompressedClassPointers\",\n","filename":"test\/hotspot\/jtreg\/runtime\/CompressedOops\/CompressedClassSpaceSize.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,1 +53,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/runtime\/CompressedOops\/CompressedKlassPointerAndOops.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -77,1 +77,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:ObjectAlignmentInBytes=\" + alignment,\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:ObjectAlignmentInBytes=\" + alignment,\n","filename":"test\/hotspot\/jtreg\/runtime\/CompressedOops\/ObjectAlignment.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -192,1 +192,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(args);\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(args);\n","filename":"test\/hotspot\/jtreg\/runtime\/CompressedOops\/UseCompressedOops.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,1 +46,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+    ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/runtime\/Dictionary\/CleanProtectionDomain.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -101,1 +101,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/runtime\/Dictionary\/ProtectionDomainCacheTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,1 +45,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"EnclMethTest\");\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"EnclMethTest\");\n","filename":"test\/hotspot\/jtreg\/runtime\/EnclosingMethodAttr\/EnclMethodAttr.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,1 +47,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+    ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/runtime\/ErrorHandling\/BadNativeStackInErrorHandlingTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,1 +53,1 @@\n-            ProcessTools.createJavaProcessBuilder(\"-XX:-CreateCoredumpOnCrash\",\n+            ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:-CreateCoredumpOnCrash\",\n","filename":"test\/hotspot\/jtreg\/runtime\/ErrorHandling\/ClassPathEnvVar.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -62,1 +62,1 @@\n-            ProcessTools.createJavaProcessBuilder(\n+            ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/runtime\/ErrorHandling\/CreateCoredumpOnCrash.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -99,1 +99,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+    ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -125,1 +125,1 @@\n-    pb = ProcessTools.createJavaProcessBuilder(\n+    pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/runtime\/ErrorHandling\/ErrorFileOverwriteTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,1 +50,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+    ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/runtime\/ErrorHandling\/ErrorFileRedirectTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -117,1 +117,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/runtime\/ErrorHandling\/MachCodeFramesInErrorFile.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -55,1 +55,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+    ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/runtime\/ErrorHandling\/NestedThreadsListHandleInErrorHandlingTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,1 +49,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/runtime\/ErrorHandling\/ProblematicFrameTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -59,1 +59,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/runtime\/ErrorHandling\/ReattemptErrorTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,1 +50,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+    ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/runtime\/ErrorHandling\/ResourceMarkTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,1 +49,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+    ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/runtime\/ErrorHandling\/SafeFetchInErrorHandlingTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -81,1 +81,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+    ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/runtime\/ErrorHandling\/SecondaryErrorTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -57,1 +57,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/runtime\/ErrorHandling\/ShowRegistersOnAssertTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -62,1 +62,1 @@\n-            return ProcessTools.createJavaProcessBuilder(\"-XX:+UnlockDiagnosticVMOptions\",\n+            return ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:+UnlockDiagnosticVMOptions\",\n@@ -67,1 +67,1 @@\n-            return ProcessTools.createJavaProcessBuilder(\"-XX:+UnlockDiagnosticVMOptions\",\n+            return ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:+UnlockDiagnosticVMOptions\",\n","filename":"test\/hotspot\/jtreg\/runtime\/ErrorHandling\/TestAbortVmOnException.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -56,1 +56,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:+CrashOnOutOfMemoryError\",\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:+CrashOnOutOfMemoryError\",\n","filename":"test\/hotspot\/jtreg\/runtime\/ErrorHandling\/TestCrashOnOutOfMemoryError.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,1 +51,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:+ExitOnOutOfMemoryError\",\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:+ExitOnOutOfMemoryError\",\n","filename":"test\/hotspot\/jtreg\/runtime\/ErrorHandling\/TestExitOnOutOfMemoryError.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -64,1 +64,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/runtime\/ErrorHandling\/TestGZippedHeapDumpOnOutOfMemoryError.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -76,1 +76,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:+HeapDumpOnOutOfMemoryError\",\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:+HeapDumpOnOutOfMemoryError\",\n","filename":"test\/hotspot\/jtreg\/runtime\/ErrorHandling\/TestHeapDumpOnOutOfMemoryError.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -56,1 +56,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:+HeapDumpOnOutOfMemoryError\",\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:+HeapDumpOnOutOfMemoryError\",\n","filename":"test\/hotspot\/jtreg\/runtime\/ErrorHandling\/TestHeapDumpPath.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/runtime\/ErrorHandling\/TestOnError.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,1 +49,1 @@\n-        ProcessBuilder pb_single = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb_single = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -54,1 +54,1 @@\n-        ProcessBuilder pb_multiple = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb_multiple = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/runtime\/ErrorHandling\/TestOnOutOfMemoryError.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,1 +48,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+    ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/runtime\/ErrorHandling\/TestSigInfoInHsErrFile.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -55,1 +55,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+    ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/runtime\/ErrorHandling\/ThreadsListHandleInErrorHandlingTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -4,1 +4,1 @@\n- * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -109,1 +109,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(arguments);\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(arguments);\n","filename":"test\/hotspot\/jtreg\/runtime\/ErrorHandling\/TimeoutInErrorHandlingTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -52,1 +52,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+    ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/runtime\/ErrorHandling\/VeryEarlyAssertTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/runtime\/GenerateOopMap\/TestGenerateOopMapCrash.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -73,1 +73,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xmx128M\",\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-Xmx128M\",\n","filename":"test\/hotspot\/jtreg\/runtime\/InvocationTests\/invocationC1Tests.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -70,1 +70,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xmx128M\",\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-Xmx128M\",\n","filename":"test\/hotspot\/jtreg\/runtime\/InvocationTests\/invocationOldCHATests.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -76,1 +76,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xmx128M\", option,\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-Xmx128M\", option,\n","filename":"test\/hotspot\/jtreg\/runtime\/InvocationTests\/invokeinterfaceTests.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -73,1 +73,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xmx128M\", option,\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-Xmx128M\", option,\n","filename":"test\/hotspot\/jtreg\/runtime\/InvocationTests\/invokespecialTests.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -73,1 +73,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xmx128M\", option,\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-Xmx128M\", option,\n","filename":"test\/hotspot\/jtreg\/runtime\/InvocationTests\/invokevirtualTests.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,1 +45,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+    ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/runtime\/LoadClass\/LoadClassNegative.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -73,1 +73,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -85,1 +85,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -100,1 +100,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -125,1 +125,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -142,1 +142,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(bootCP, \"Hello\");\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(bootCP, \"Hello\");\n@@ -154,1 +154,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/runtime\/LoadClass\/LongBCP.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -134,1 +134,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:+PrintClassLoaderDataGraphAtExit\",\n+    ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:+PrintClassLoaderDataGraphAtExit\",\n","filename":"test\/hotspot\/jtreg\/runtime\/LoadClass\/TestResize.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,1 +40,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xint\",\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-Xint\",\n","filename":"test\/hotspot\/jtreg\/runtime\/LocalLong\/LocalLongTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"DuplicateLVT\");\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"DuplicateLVT\");\n@@ -49,1 +49,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"DuplicateLVTT\");\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"DuplicateLVTT\");\n@@ -54,1 +54,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"NotFoundLVTT\");\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"NotFoundLVTT\");\n","filename":"test\/hotspot\/jtreg\/runtime\/LocalVariableTable\/TestLVT.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -129,1 +129,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/runtime\/MemberName\/MemberNameLeak.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -84,1 +84,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(flag, main, max);\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(flag, main, max);\n@@ -99,1 +99,1 @@\n-            pb = ProcessTools.createJavaProcessBuilder(main, max);\n+            pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(main, max);\n@@ -115,1 +115,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(rcFileFlag, main, max);\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(rcFileFlag, main, max);\n","filename":"test\/hotspot\/jtreg\/runtime\/Metaspace\/MaxMetaspaceSizeEnvVarTest.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,1 +38,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/runtime\/Metaspace\/MaxMetaspaceSizeTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-minimal\", \"-Xshare:dump\");\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-minimal\", \"-Xshare:dump\");\n@@ -46,1 +46,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-minimal\", \"-Xshare:on\");\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-minimal\", \"-Xshare:on\");\n@@ -51,1 +51,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-minimal\", \"-Xshare:auto\", \"-version\");\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-minimal\", \"-Xshare:auto\", \"-version\");\n","filename":"test\/hotspot\/jtreg\/runtime\/MinimalVM\/CDS.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,1 +39,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-minimal\", \"-Xcheck:jni\", \"-version\");\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-minimal\", \"-Xcheck:jni\", \"-version\");\n","filename":"test\/hotspot\/jtreg\/runtime\/MinimalVM\/CheckJNI.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,1 +40,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/runtime\/MinimalVM\/Instrumentation.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-minimal\", \"-XX:+ManagementServer\", \"-version\");\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-minimal\", \"-XX:+ManagementServer\", \"-version\");\n@@ -46,1 +46,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-minimal\", \"-Dcom.sun.management \", \"-version\");\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-minimal\", \"-Dcom.sun.management \", \"-version\");\n","filename":"test\/hotspot\/jtreg\/runtime\/MinimalVM\/JMX.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,1 +39,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/runtime\/MinimalVM\/JVMTI.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-minimal\", \"-XX:NativeMemoryTracking=detail\", \"-version\");\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-minimal\", \"-XX:NativeMemoryTracking=detail\", \"-version\");\n@@ -46,1 +46,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-minimal\", \"-XX:NativeMemoryTracking=summary\", \"-version\");\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-minimal\", \"-XX:NativeMemoryTracking=summary\", \"-version\");\n@@ -51,1 +51,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-minimal\", \"-XX:NativeMemoryTracking=off\", \"-version\");\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-minimal\", \"-XX:NativeMemoryTracking=off\", \"-version\");\n","filename":"test\/hotspot\/jtreg\/runtime\/MinimalVM\/NMT.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -275,1 +275,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(opts);\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(opts);\n","filename":"test\/hotspot\/jtreg\/runtime\/Monitor\/DeflationIntervalsTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -76,1 +76,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/runtime\/Monitor\/MonitorUsedDeflationThresholdTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -87,1 +87,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(fatalTests[i]);\n+            ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(fatalTests[i]);\n@@ -94,1 +94,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(logTests[i]);\n+            ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(logTests[i]);\n@@ -174,1 +174,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(vtTest);\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(vtTest);\n@@ -182,1 +182,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(vtTest);\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(vtTest);\n","filename":"test\/hotspot\/jtreg\/runtime\/Monitor\/SyncOnValueBasedClassTest.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -94,1 +94,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/runtime\/NMT\/CheckForProperDetailStackTrace.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,1 +40,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+    ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/runtime\/NMT\/CommandLineDetail.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,1 +39,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:NativeMemoryTracking=\");\n+    ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:NativeMemoryTracking=\");\n","filename":"test\/hotspot\/jtreg\/runtime\/NMT\/CommandLineEmptyArgument.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,1 +39,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:NativeMemoryTracking=apa\");\n+    ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:NativeMemoryTracking=apa\");\n","filename":"test\/hotspot\/jtreg\/runtime\/NMT\/CommandLineInvalidArgument.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,1 +40,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+    ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/runtime\/NMT\/CommandLineSummary.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,1 +39,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+    ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/runtime\/NMT\/CommandLineTurnOffNMT.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,1 +53,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-Dtest.jdk=\" + testjdkPath, \"JcmdWithNMTDisabled\");\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-Dtest.jdk=\" + testjdkPath, \"JcmdWithNMTDisabled\");\n@@ -59,1 +59,1 @@\n-      pb = ProcessTools.createJavaProcessBuilder(\"-Dtest.jdk=\" + testjdkPath, \"-XX:NativeMemoryTracking=off\", \"JcmdWithNMTDisabled\");\n+      pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-Dtest.jdk=\" + testjdkPath, \"-XX:NativeMemoryTracking=off\", \"JcmdWithNMTDisabled\");\n","filename":"test\/hotspot\/jtreg\/runtime\/NMT\/JcmdWithNMTDisabled.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -95,1 +95,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(args);\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(args);\n","filename":"test\/hotspot\/jtreg\/runtime\/NMT\/MallocLimitTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -159,1 +159,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(vmArgs);\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(vmArgs);\n","filename":"test\/hotspot\/jtreg\/runtime\/NMT\/NMTInitializationTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,1 @@\n-    pb = ProcessTools.createJavaProcessBuilder(\n+    pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -48,1 +48,1 @@\n-      pb = ProcessTools.createJavaProcessBuilder(\n+      pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/runtime\/NMT\/NMTWithCDS.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,1 +40,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+    ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -58,1 +58,1 @@\n-    ProcessBuilder pb1 = ProcessTools.createJavaProcessBuilder(\n+    ProcessBuilder pb1 = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/runtime\/NMT\/PrintNMTStatistics.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,1 +39,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+    ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/runtime\/NMT\/PrintNMTStatisticsWithNMTDisabled.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,1 +42,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:+PerfAllowAtExitRegistration\", \"-version\");\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:+PerfAllowAtExitRegistration\", \"-version\");\n","filename":"test\/hotspot\/jtreg\/runtime\/PerfMemDestroy\/PerfMemDestroy.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/runtime\/PrintStringTableStats\/PrintStringTableStatsTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -257,1 +257,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:StackReservedPages=1\", \"-version\");\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:StackReservedPages=1\", \"-version\");\n","filename":"test\/hotspot\/jtreg\/runtime\/ReservedStack\/ReservedStackTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -66,1 +66,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/runtime\/Safepoint\/TestAbortOnVMOperationTimeout.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/runtime\/Safepoint\/TestAbortVMOnSafepointTimeout.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -93,1 +93,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/runtime\/Thread\/TestAlwaysPreTouchStacks.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -97,1 +97,1 @@\n-            return ProcessTools.createJavaProcessBuilder(\n+            return ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -104,1 +104,1 @@\n-            return ProcessTools.createJavaProcessBuilder(\n+            return ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/runtime\/Thread\/TooSmallStackSize.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,1 +54,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:stacktrace=info\",\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-Xlog:stacktrace=info\",\n","filename":"test\/hotspot\/jtreg\/runtime\/Throwable\/StackTraceLogging.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,1 +46,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xmx64m\",\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-Xmx64m\",\n","filename":"test\/hotspot\/jtreg\/runtime\/Throwable\/TestCatchThrowableOOM.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -82,1 +82,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:stacktrace=info\",\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-Xlog:stacktrace=info\",\n","filename":"test\/hotspot\/jtreg\/runtime\/Throwable\/TestMaxJavaStackTraceDepth.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -64,1 +64,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xcheck:jni\", \"-version\");\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-Xcheck:jni\", \"-version\");\n@@ -71,1 +71,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-Xcheck:jni\", \"-verbose:jni\", \"-version\");\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-Xcheck:jni\", \"-verbose:jni\", \"-version\");\n","filename":"test\/hotspot\/jtreg\/runtime\/XCheckJniJsig\/XCheckJSig.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -55,1 +55,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(processArgs);\n+    ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(processArgs);\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/MaxMetaspaceSize.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,1 +47,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -59,1 +59,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/SharedStrings.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -52,1 +52,1 @@\n-         ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:+CrashOnOutOfMemoryError\",\n+         ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:+CrashOnOutOfMemoryError\",\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/TestCDSVMCrash.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -163,1 +163,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(args);\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(args);\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/CommandLineFlagCombo.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -45,1 +45,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/FillerObjectLoadTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -115,1 +115,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(launchArgs);\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(launchArgs);\n@@ -140,1 +140,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(launchArgs);\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(launchArgs);\n@@ -166,1 +166,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(launchArgs);\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(launchArgs);\n@@ -187,1 +187,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(launchArgs);\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(launchArgs);\n@@ -208,1 +208,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(launchArgs);\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(launchArgs);\n@@ -228,1 +228,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(launchArgs);\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(launchArgs);\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/TestDumpClassListSource.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:cds\", \"-XX:+VerifySharedSpaces\", \"-version\");\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-Xlog:cds\", \"-XX:+VerifySharedSpaces\", \"-version\");\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/VerifyWithDefaultArchive.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,1 +42,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/runtime\/classFileParserBug\/Bad_NCDFE_Msg.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"LambdaMath\");\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"LambdaMath\");\n","filename":"test\/hotspot\/jtreg\/runtime\/classFileParserBug\/ClassFileParserBug.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/runtime\/classFileParserBug\/TestBadPackageWithInterface.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,1 +53,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -68,1 +68,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/runtime\/classFileParserBug\/TestEmptyBootstrapMethodsAttr.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,1 +45,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"CondyUsesIndyBSM\");\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"CondyUsesIndyBSM\");\n@@ -53,1 +53,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"IndyUsesCondyBSM\");\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"IndyUsesCondyBSM\");\n","filename":"test\/hotspot\/jtreg\/runtime\/condy\/BadBSMUseTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,1 +45,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xverify:all\",\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-Xverify:all\",\n@@ -53,1 +53,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-Xverify:all\",\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-Xverify:all\",\n@@ -62,1 +62,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-Xverify:all\",\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-Xverify:all\",\n","filename":"test\/hotspot\/jtreg\/runtime\/condy\/CondyLDCTest.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xverify:all\",\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-Xverify:all\",\n","filename":"test\/hotspot\/jtreg\/runtime\/condy\/CondyNewInvokeSpecialTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,1 +46,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/runtime\/condy\/escapeAnalysis\/TestEscapeCondy.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"Example\");\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"Example\");\n","filename":"test\/hotspot\/jtreg\/runtime\/condy\/staticInit\/TestInitException.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-XX:ContendedPaddingWidth=-128\", \"-version\");\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:ContendedPaddingWidth=-128\", \"-version\");\n@@ -49,1 +49,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-XX:ContendedPaddingWidth=-8\", \"-version\");\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:ContendedPaddingWidth=-8\", \"-version\");\n@@ -55,1 +55,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-XX:ContendedPaddingWidth=-1\", \"-version\");\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:ContendedPaddingWidth=-1\", \"-version\");\n@@ -61,1 +61,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-XX:ContendedPaddingWidth=0\", \"-version\");\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:ContendedPaddingWidth=0\", \"-version\");\n@@ -65,1 +65,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-XX:ContendedPaddingWidth=1\", \"-version\");\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:ContendedPaddingWidth=1\", \"-version\");\n@@ -71,1 +71,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-XX:ContendedPaddingWidth=8\", \"-version\");\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:ContendedPaddingWidth=8\", \"-version\");\n@@ -75,1 +75,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-XX:ContendedPaddingWidth=8184\", \"-version\"); \/\/ 8192-8 = 8184\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:ContendedPaddingWidth=8184\", \"-version\"); \/\/ 8192-8 = 8184\n@@ -79,1 +79,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-XX:ContendedPaddingWidth=8191\", \"-version\");\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:ContendedPaddingWidth=8191\", \"-version\");\n@@ -85,1 +85,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-XX:ContendedPaddingWidth=8192\", \"-version\");\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:ContendedPaddingWidth=8192\", \"-version\");\n@@ -89,1 +89,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-XX:ContendedPaddingWidth=8193\", \"-version\");\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:ContendedPaddingWidth=8193\", \"-version\");\n@@ -95,1 +95,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-XX:ContendedPaddingWidth=8200\", \"-version\"); \/\/ 8192+8 = 8200\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:ContendedPaddingWidth=8200\", \"-version\"); \/\/ 8192+8 = 8200\n","filename":"test\/hotspot\/jtreg\/runtime\/contended\/Options.java","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(test);\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(test);\n","filename":"test\/hotspot\/jtreg\/runtime\/duplAttributes\/DuplAttributesTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,1 +50,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -59,1 +59,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -68,1 +68,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/runtime\/execstack\/Testexecstack.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n-        new OutputAnalyzer(ProcessTools.createJavaProcessBuilder(\n+        new OutputAnalyzer(ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/runtime\/getSysPackage\/GetPackageXbootclasspath.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -104,1 +104,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xbootclasspath\/a:bl_dir\",\n+            ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-Xbootclasspath\/a:bl_dir\",\n","filename":"test\/hotspot\/jtreg\/runtime\/getSysPackage\/GetSysPkgTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,1 +51,1 @@\n-                ProcessTools.createJavaProcessBuilder(\"-Xcheck:jni\",\n+                ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-Xcheck:jni\",\n","filename":"test\/hotspot\/jtreg\/runtime\/jni\/checked\/TestCheckedReleaseArrayElements.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -68,1 +68,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(pbArgs.toArray(new String[0]));\n+            ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(pbArgs.toArray(new String[0]));\n","filename":"test\/hotspot\/jtreg\/runtime\/jni\/checked\/TestPrimitiveArrayCriticalWithBadParam.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,1 +49,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/runtime\/jsig\/Testjsig.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:class+init=info\",\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-Xlog:class+init=info\",\n@@ -57,1 +57,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:class+init=off\",\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-Xlog:class+init=off\",\n","filename":"test\/hotspot\/jtreg\/runtime\/logging\/ClassInitializationTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -77,1 +77,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(argsList);\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(argsList);\n","filename":"test\/hotspot\/jtreg\/runtime\/logging\/ClassLoadUnloadTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -63,1 +63,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:class+resolve=debug\",\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-Xlog:class+resolve=debug\",\n@@ -71,1 +71,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:class+resolve=debug\",\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-Xlog:class+resolve=debug\",\n","filename":"test\/hotspot\/jtreg\/runtime\/logging\/ClassResolutionTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,1 +54,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:+UseCompressedOops\",\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:+UseCompressedOops\",\n@@ -59,1 +59,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-XX:+UseCompressedOops\",\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:+UseCompressedOops\",\n@@ -65,1 +65,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-XX:+UseCompressedOops\",\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:+UseCompressedOops\",\n","filename":"test\/hotspot\/jtreg\/runtime\/logging\/CompressedOopsTest.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:methodhandles\",\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-Xlog:methodhandles\",\n@@ -52,1 +52,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:methodhandles+condy=debug\",\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-Xlog:methodhandles+condy=debug\",\n@@ -61,1 +61,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:methodhandles+indy=debug\",\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-Xlog:methodhandles+indy=debug\",\n@@ -70,1 +70,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:methodhandles=info\",\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-Xlog:methodhandles=info\",\n","filename":"test\/hotspot\/jtreg\/runtime\/logging\/CondyIndyTest.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,1 +40,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:defaultmethods=debug\",\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-Xlog:defaultmethods=debug\",\n","filename":"test\/hotspot\/jtreg\/runtime\/logging\/DefaultMethodsTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -60,1 +60,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:exceptions=info\",\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-Xlog:exceptions=info\",\n@@ -64,1 +64,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:exceptions=off\",\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-Xlog:exceptions=off\",\n@@ -68,1 +68,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(InternalClass.class.getName());\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(InternalClass.class.getName());\n@@ -72,1 +72,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(InternalClass.class.getName());\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(InternalClass.class.getName());\n@@ -76,1 +76,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-XX:VMOptionsFile=\" + System.getProperty(\"test.src\", \".\")\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:VMOptionsFile=\" + System.getProperty(\"test.src\", \".\")\n","filename":"test\/hotspot\/jtreg\/runtime\/logging\/ExceptionsTest.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -82,1 +82,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(Xlog, InternalClass.class.getName());\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(Xlog, InternalClass.class.getName());\n@@ -86,1 +86,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(Xlog, InternalClass.class.getName());\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(Xlog, InternalClass.class.getName());\n@@ -90,1 +90,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(Xlog, InternalClass.class.getName());\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(Xlog, InternalClass.class.getName());\n","filename":"test\/hotspot\/jtreg\/runtime\/logging\/FoldMultilinesTest.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:itables=trace\", \"ClassB\");\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-Xlog:itables=trace\", \"ClassB\");\n@@ -56,1 +56,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:itables=trace\", \"ItablesVtableTest\");\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-Xlog:itables=trace\", \"ItablesVtableTest\");\n","filename":"test\/hotspot\/jtreg\/runtime\/logging\/ItablesTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -69,1 +69,1 @@\n-        return ProcessTools.createJavaProcessBuilder(argsList);\n+        return ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(argsList);\n","filename":"test\/hotspot\/jtreg\/runtime\/logging\/LoaderConstraintsTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -78,1 +78,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(args);\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(args);\n","filename":"test\/hotspot\/jtreg\/runtime\/logging\/ModulesTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,1 +54,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:monitorinflation=trace\",\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-Xlog:monitorinflation=trace\",\n@@ -58,1 +58,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:monitorinflation=off\",\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-Xlog:monitorinflation=off\",\n","filename":"test\/hotspot\/jtreg\/runtime\/logging\/MonitorInflationTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xcomp\",\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-Xcomp\",\n@@ -52,1 +52,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-Xcomp\",\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-Xcomp\",\n","filename":"test\/hotspot\/jtreg\/runtime\/logging\/MonitorMismatchTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:vmmutex\",\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-Xlog:vmmutex\",\n","filename":"test\/hotspot\/jtreg\/runtime\/logging\/MutexRankTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -55,1 +55,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:os+cpu\", \"-version\");\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-Xlog:os+cpu\", \"-version\");\n@@ -61,2 +61,2 @@\n-             ? ProcessTools.createJavaProcessBuilder(\"-Xlog:os\", \"-XX:-UseSIGTRAP\", \"-version\")\n-             : ProcessTools.createJavaProcessBuilder(\"-Xlog:os\", \"-version\");\n+             ? ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-Xlog:os\", \"-XX:-UseSIGTRAP\", \"-version\")\n+             : ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-Xlog:os\", \"-version\");\n","filename":"test\/hotspot\/jtreg\/runtime\/logging\/OsCpuLoggingTest.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,1 +42,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:protectiondomain=trace\",\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-Xlog:protectiondomain=trace\",\n@@ -52,1 +52,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:protectiondomain=debug\",\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-Xlog:protectiondomain=debug\",\n@@ -62,1 +62,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:protectiondomain=trace\",\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-Xlog:protectiondomain=trace\",\n","filename":"test\/hotspot\/jtreg\/runtime\/logging\/ProtectionDomainVerificationTest.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,1 +54,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:safepoint+cleanup=info\",\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-Xlog:safepoint+cleanup=info\",\n@@ -58,1 +58,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:safepoint+cleanup=off\",\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-Xlog:safepoint+cleanup=off\",\n","filename":"test\/hotspot\/jtreg\/runtime\/logging\/SafepointCleanupTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:safepoint=trace\",\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-Xlog:safepoint=trace\",\n","filename":"test\/hotspot\/jtreg\/runtime\/logging\/SafepointTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -52,1 +52,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:stackwalk=debug\",\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-Xlog:stackwalk=debug\",\n@@ -56,1 +56,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:stackwalk=off\",\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-Xlog:stackwalk=off\",\n","filename":"test\/hotspot\/jtreg\/runtime\/logging\/StackWalkTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -55,1 +55,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:startuptime\",\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-Xlog:startuptime\",\n@@ -59,1 +59,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:startuptime=off\",\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-Xlog:startuptime=off\",\n","filename":"test\/hotspot\/jtreg\/runtime\/logging\/StartupTimeTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -64,1 +64,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:os+thread\", \"-version\");\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-Xlog:os+thread\", \"-version\");\n@@ -68,1 +68,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:os+thread=debug\", \"-version\");\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-Xlog:os+thread=debug\", \"-version\");\n","filename":"test\/hotspot\/jtreg\/runtime\/logging\/ThreadLoggingTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:vmoperation=debug\",\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-Xlog:vmoperation=debug\",\n","filename":"test\/hotspot\/jtreg\/runtime\/logging\/VMOperationTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -66,1 +66,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:verification=info\",\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-Xlog:verification=info\",\n@@ -70,1 +70,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:verification=off\",\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-Xlog:verification=off\",\n@@ -75,1 +75,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:verification=debug\",\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-Xlog:verification=debug\",\n","filename":"test\/hotspot\/jtreg\/runtime\/logging\/VerificationTest.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,1 +47,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:vtables=trace\", \"ClassB\");\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-Xlog:vtables=trace\", \"ClassB\");\n@@ -58,1 +58,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:vtables=trace\", \"p1\/C\");\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-Xlog:vtables=trace\", \"p1\/C\");\n","filename":"test\/hotspot\/jtreg\/runtime\/logging\/VtablesTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -121,1 +121,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/runtime\/logging\/loadLibraryTest\/LoadLibraryTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -335,1 +335,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(args);\n+    ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(args);\n","filename":"test\/hotspot\/jtreg\/runtime\/memory\/LargePages\/TestLargePagesFlags.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,1 +47,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+    ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/runtime\/memory\/ReadFromNoaccessArea.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,1 +51,1 @@\n-      ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+      ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/runtime\/memory\/ReserveMemory.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,1 +40,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/runtime\/modules\/ClassLoaderNoUnnamedModuleTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,1 +46,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -65,1 +65,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/runtime\/modules\/IgnoreModulePropertiesTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,1 +45,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -54,1 +54,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/runtime\/modules\/ModuleOptionsTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -51,1 +51,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -58,1 +58,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -65,1 +65,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -72,1 +72,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -79,1 +79,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -86,1 +86,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -93,1 +93,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -100,1 +100,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -107,1 +107,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -114,1 +114,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-XX:+PrintWarnings\", \"-version\");\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:+PrintWarnings\", \"-version\");\n","filename":"test\/hotspot\/jtreg\/runtime\/modules\/ModuleOptionsWarn.java","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -74,1 +74,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/runtime\/modules\/ModuleStress\/ExportModuleStressTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,1 +53,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -88,1 +88,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -102,1 +102,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -119,1 +119,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/runtime\/modules\/ModuleStress\/ModuleStress.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -75,1 +75,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/runtime\/modules\/ModuleStress\/ModuleStressGC.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -63,1 +63,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/runtime\/modules\/PatchModule\/PatchModule2Dirs.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,1 +47,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -72,1 +72,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -87,1 +87,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -101,1 +101,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/runtime\/modules\/PatchModule\/PatchModuleCDS.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,1 +40,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+    ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/runtime\/modules\/PatchModule\/PatchModuleDupJavaBase.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,1 +42,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+    ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/runtime\/modules\/PatchModule\/PatchModuleDupModule.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,1 +54,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"--patch-module=java.base=mods\/java.base\",\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"--patch-module=java.base=mods\/java.base\",\n","filename":"test\/hotspot\/jtreg\/runtime\/modules\/PatchModule\/PatchModuleJavaBase.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,1 +54,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"--patch-module=java.naming=mods\/java.naming\",\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"--patch-module=java.naming=mods\/java.naming\",\n","filename":"test\/hotspot\/jtreg\/runtime\/modules\/PatchModule\/PatchModuleTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -79,1 +79,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"--patch-module=java.naming=\" + moduleJar,\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"--patch-module=java.naming=\" + moduleJar,\n","filename":"test\/hotspot\/jtreg\/runtime\/modules\/PatchModule\/PatchModuleTestJar.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -95,1 +95,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"--patch-module=java.naming=\" +\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"--patch-module=java.naming=\" +\n","filename":"test\/hotspot\/jtreg\/runtime\/modules\/PatchModule\/PatchModuleTestJarDir.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -56,1 +56,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"--patch-module=java.naming=mods\/java.naming\",\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"--patch-module=java.naming=mods\/java.naming\",\n@@ -80,1 +80,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-Xbootclasspath\/a:xbcp\",\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-Xbootclasspath\/a:xbcp\",\n","filename":"test\/hotspot\/jtreg\/runtime\/modules\/PatchModule\/PatchModuleTraceCL.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -89,1 +89,1 @@\n-      new OutputAnalyzer(ProcessTools.createJavaProcessBuilder(\n+      new OutputAnalyzer(ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/runtime\/modules\/Visibility\/PatchModuleVisibility.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -76,1 +76,1 @@\n-        new OutputAnalyzer(ProcessTools.createJavaProcessBuilder(\n+        new OutputAnalyzer(ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/runtime\/modules\/Visibility\/XbootcpNoVisibility.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -107,1 +107,1 @@\n-        new OutputAnalyzer(ProcessTools.createJavaProcessBuilder(\n+        new OutputAnalyzer(ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/runtime\/modules\/Visibility\/XbootcpVisibility.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -72,1 +72,1 @@\n-                    ProcessTools.createJavaProcessBuilder(\"-Xlog:os=trace\",\n+                    ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-Xlog:os=trace\",\n","filename":"test\/hotspot\/jtreg\/runtime\/os\/AvailableProcessors.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -180,1 +180,1 @@\n-                ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(finalargs);\n+                ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(finalargs);\n@@ -217,1 +217,1 @@\n-                ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(finalargs);\n+                ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(finalargs);\n","filename":"test\/hotspot\/jtreg\/runtime\/os\/THPsInThreadStackPreventionTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -50,1 +50,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/runtime\/os\/TestHugePageDetection.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -45,1 +45,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:os+thread\",\n+            ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-Xlog:os+thread\",\n@@ -55,1 +55,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:os+thread\",\n+            ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-Xlog:os+thread\",\n@@ -67,1 +67,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:os+thread\",\n+            ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-Xlog:os+thread\",\n@@ -85,1 +85,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:os+thread\",\n+            ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-Xlog:os+thread\",\n","filename":"test\/hotspot\/jtreg\/runtime\/os\/TestTimerSlack.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -162,1 +162,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(prepareOptions(extraOptions, programOptions));\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(prepareOptions(extraOptions, programOptions));\n","filename":"test\/hotspot\/jtreg\/runtime\/os\/TestTrimNative.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,1 +45,1 @@\n-            ProcessTools.createJavaProcessBuilder(\"-Xlog:os=trace\",\n+            ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-Xlog:os=trace\",\n","filename":"test\/hotspot\/jtreg\/runtime\/os\/TestUseCpuAllocPath.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,1 +47,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/runtime\/posixSig\/TestPosixSig.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -105,1 +105,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/runtime\/records\/RedefineRecord.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -129,1 +129,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(javaArgs1);\n+            ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(javaArgs1);\n","filename":"test\/hotspot\/jtreg\/runtime\/sealedClasses\/RedefinePermittedSubclass.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -111,1 +111,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(javaArgs1);\n+            ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(javaArgs1);\n","filename":"test\/hotspot\/jtreg\/runtime\/sealedClasses\/RedefineSealedClass.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,1 +39,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-XX:+UnlockDiagnosticVMOptions\", \"-XX:+VerifyStringTableAtExit\", \"-version\");\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:+UnlockDiagnosticVMOptions\", \"-XX:+VerifyStringTableAtExit\", \"-version\");\n","filename":"test\/hotspot\/jtreg\/runtime\/stringtable\/StringTableVerifyTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -92,1 +92,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:symboltable=trace\",\n+    ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-Xlog:symboltable=trace\",\n@@ -96,1 +96,1 @@\n-    pb = ProcessTools.createJavaProcessBuilder(\"-XX:+PrintSymbolTableSizeHistogram\",\n+    pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:+PrintSymbolTableSizeHistogram\",\n","filename":"test\/hotspot\/jtreg\/runtime\/symboltable\/ShortLivedSymbolCleanup.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+    ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/runtime\/verifier\/TraceClassRes.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -70,1 +70,1 @@\n-    return ProcessTools.createJavaProcessBuilder(\n+    return ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/serviceability\/attach\/AttachSetGetFlag.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -62,1 +62,1 @@\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+    ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/serviceability\/attach\/AttachWithStalePidFile.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -97,1 +97,1 @@\n-        return ProcessTools.createJavaProcessBuilder(\n+        return ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/serviceability\/attach\/ShMemLongName.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,1 +50,1 @@\n-        ProcessBuilder testAppPb = ProcessTools.createJavaProcessBuilder(javaArgs);\n+        ProcessBuilder testAppPb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(javaArgs);\n","filename":"test\/hotspot\/jtreg\/serviceability\/dcmd\/gc\/RunFinalizationTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -65,1 +65,1 @@\n-            var pb = ProcessTools.createJavaProcessBuilder(\"-XX:+\" + opt, \"-version\");\n+            var pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-XX:+\" + opt, \"-version\");\n","filename":"test\/hotspot\/jtreg\/serviceability\/dtrace\/DTraceOptionsTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -128,1 +128,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(args);\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(args);\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/CanGenerateAllClassHook\/CanGenerateAllClassHook.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -108,1 +108,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/RedefineClasses\/RedefineLeak.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -87,1 +87,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder( \"-javaagent:redefineagent.jar\",\n+            ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts( \"-javaagent:redefineagent.jar\",\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/RedefineClasses\/RedefinePreviousVersions.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -78,1 +78,1 @@\n-                ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(offCommand);\n+                ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(offCommand);\n@@ -92,1 +92,1 @@\n-                ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(onCommand);\n+                ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(onCommand);\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/RedefineClasses\/RedefineSharedClassJFR.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -59,1 +59,1 @@\n-                ProcessTools.createJavaProcessBuilder(\n+                ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/RedefineClasses\/RetransformClassesZeroLength.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -60,1 +60,1 @@\n-                ProcessTools.createJavaProcessBuilder(\n+                ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/RedefineClasses\/TransformerDeadlockTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,1 +39,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:all=trace\", \"-version\");\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-Xlog:all=trace\", \"-version\");\n","filename":"test\/hotspot\/jtreg\/serviceability\/logging\/TestBasicLogOutput.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,1 +39,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:badTag\");\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-Xlog:badTag\");\n","filename":"test\/hotspot\/jtreg\/serviceability\/logging\/TestDefaultLogOutput.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -66,1 +66,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:logging=trace\",\n+            ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-Xlog:logging=trace\",\n","filename":"test\/hotspot\/jtreg\/serviceability\/logging\/TestFullNames.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,1 +39,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:logging=debug\",\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-Xlog:logging=debug\",\n","filename":"test\/hotspot\/jtreg\/serviceability\/logging\/TestMultipleXlogArgs.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -76,1 +76,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:logging=trace\",\n+            ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-Xlog:logging=trace\",\n@@ -101,1 +101,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:logging=trace\",\n+            ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-Xlog:logging=trace\",\n","filename":"test\/hotspot\/jtreg\/serviceability\/logging\/TestQuotedLogOutputs.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -52,1 +52,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -71,1 +71,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/serviceability\/sa\/TestClassDump.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -94,1 +94,1 @@\n-        ProcessBuilder processBuilder = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder processBuilder = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/serviceability\/sa\/TestCpoolForInvokeDynamic.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -101,1 +101,1 @@\n-        ProcessBuilder processBuilder = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder processBuilder = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/serviceability\/sa\/TestDefaultMethods.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -75,1 +75,1 @@\n-        ProcessBuilder processBuilder = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder processBuilder = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/serviceability\/sa\/TestG1HeapRegion.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -85,1 +85,1 @@\n-            ProcessBuilder processBuilder = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder processBuilder = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/serviceability\/sa\/TestInstanceKlassSize.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -106,1 +106,1 @@\n-        ProcessBuilder processBuilder = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder processBuilder = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/serviceability\/sa\/TestInstanceKlassSizeForInterface.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -67,1 +67,1 @@\n-        ProcessBuilder processBuilder = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder processBuilder = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/serviceability\/sa\/TestObjectAlignment.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -76,1 +76,1 @@\n-        ProcessBuilder processBuilder = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder processBuilder = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/serviceability\/sa\/TestObjectMonitorIterate.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -69,1 +69,1 @@\n-        ProcessBuilder processBuilder = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder processBuilder = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/serviceability\/sa\/TestRevPtrsForInvokeDynamic.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -149,1 +149,1 @@\n-        ProcessBuilder processBuilder = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder processBuilder = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/serviceability\/sa\/UniqueVtableTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -80,1 +80,1 @@\n-        ProcessBuilder procBuilder = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder procBuilder = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/serviceability\/sa\/jmap-hprof\/JMapHProfLargeHeapTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -76,1 +76,1 @@\n-            ProcessBuilder process = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder process = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/testlibrary_tests\/ir_framework\/tests\/TestDScenarios.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -100,1 +100,1 @@\n-        ProcessBuilder process = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder process = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/hotspot\/jtreg\/testlibrary_tests\/ir_framework\/tests\/TestDTestAndExclude.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,1 +48,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(cmd);\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(cmd);\n","filename":"test\/jdk\/com\/sun\/jdi\/NoLaunchOptionTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -82,1 +82,1 @@\n-        ProcessBuilder launcher = ProcessTools.createJavaProcessBuilder(args);\n+        ProcessBuilder launcher = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(args);\n","filename":"test\/jdk\/com\/sun\/jdi\/RunToExit.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-        \/\/ These are the arguments passed to createJavaProcessBuilder() to launch\n+        \/\/ These are the arguments passed to createJavaProcessBuilderIgnoreTestJavaOpts() to launch\n@@ -70,1 +70,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/jdk\/com\/sun\/jdi\/cds\/CDSJDITest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -62,1 +62,1 @@\n-                createJavaProcessBuilder(\n+                createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/jdk\/com\/sun\/management\/HotSpotDiagnosticMXBean\/CheckOrigin.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -56,1 +56,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(args);\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(args);\n","filename":"test\/jdk\/com\/sun\/tools\/attach\/RunnerUtil.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -151,1 +151,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/jdk\/java\/awt\/MenuBar\/TestNoScreenMenuBar.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,1 +45,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/jdk\/java\/awt\/Robot\/NonEmptyErrorStream.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -105,1 +105,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/jdk\/java\/awt\/Toolkit\/ScreenInsetsDPIVariation\/ScreenInsetsDPIVariation.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -152,1 +152,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/jdk\/java\/awt\/Window\/MainKeyWindowTest\/TestMainKeyWindow.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -113,1 +113,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/jdk\/java\/awt\/Window\/MinimumSizeDPIVariation\/MinimumSizeDPIVariation.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -105,1 +105,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(params);\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(params);\n","filename":"test\/jdk\/java\/io\/Serializable\/class\/NonSerializableTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -121,1 +121,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(args);\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(args);\n","filename":"test\/jdk\/java\/lang\/ClassLoader\/GetSystemPackage.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,1 +46,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(data.arg);\n+            ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(data.arg);\n","filename":"test\/jdk\/java\/lang\/Object\/InvalidFinalizationOption.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n-        ProcessBuilder processBuilder = ProcessTools.createJavaProcessBuilder(arguments);\n+        ProcessBuilder processBuilder = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(arguments);\n","filename":"test\/jdk\/java\/lang\/ProcessBuilder\/InheritIOTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -81,1 +81,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-Djdk.lang.Process.launchMechanism=posix_spawn\",\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-Djdk.lang.Process.launchMechanism=posix_spawn\",\n@@ -96,1 +96,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-Djdk.lang.Process.launchMechanism=posix_spawn\",\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-Djdk.lang.Process.launchMechanism=posix_spawn\",\n@@ -129,1 +129,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-Djdk.lang.Process.launchMechanism=posix_spawn\",\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-Djdk.lang.Process.launchMechanism=posix_spawn\",\n@@ -175,1 +175,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\"-Djdk.lang.Process.launchMechanism=posix_spawn\",\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-Djdk.lang.Process.launchMechanism=posix_spawn\",\n","filename":"test\/jdk\/java\/lang\/ProcessBuilder\/JspawnhelperProtocol.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -85,1 +85,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"ReaderWriterTest$ChildWithCharset\");\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"ReaderWriterTest$ChildWithCharset\");\n@@ -124,1 +124,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"ReaderWriterTest$ChildWithCharset\");\n+            ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"ReaderWriterTest$ChildWithCharset\");\n@@ -194,1 +194,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -220,1 +220,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -266,1 +266,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/jdk\/java\/lang\/ProcessBuilder\/ReaderWriterTest.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -67,1 +67,1 @@\n-        ProcessBuilder processBuilder = ProcessTools.createJavaProcessBuilder(args);\n+        ProcessBuilder processBuilder = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(args);\n","filename":"test\/jdk\/java\/lang\/SecurityManager\/modules\/CustomSecurityManagerTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -88,1 +88,1 @@\n-        ProcessBuilder processBuilder = ProcessTools.createJavaProcessBuilder(cmd);\n+        ProcessBuilder processBuilder = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(cmd);\n","filename":"test\/jdk\/java\/lang\/Thread\/UncaughtExceptionsTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -58,1 +58,1 @@\n-        var processBuilder = ProcessTools.createJavaProcessBuilder(command)\n+        var processBuilder = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(command)\n","filename":"test\/jdk\/java\/lang\/annotation\/LoaderLeakTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,1 +38,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/jdk\/java\/lang\/instrument\/NegativeAgentRunner.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,1 +47,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/jdk\/java\/lang\/instrument\/PremainClass\/PremainClassTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,1 +47,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"CondyNestedResolution\");\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"CondyNestedResolution\");\n","filename":"test\/jdk\/java\/lang\/invoke\/condy\/CondyNestedResolutionTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,1 +49,1 @@\n-            ProcessTools.createJavaProcessBuilder(LotsOfUpdates.class.getName()));\n+            ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(LotsOfUpdates.class.getName()));\n","filename":"test\/jdk\/java\/nio\/channels\/Selector\/LotsOfUpdatesTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -75,1 +75,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -88,1 +88,1 @@\n-        pb = ProcessTools.createJavaProcessBuilder(\n+        pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/jdk\/java\/security\/SignedJar\/SignedJarWithCustomClassLoader.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -95,1 +95,1 @@\n-            final ProcessBuilder processBuilder = ProcessTools.createJavaProcessBuilder(\n+            final ProcessBuilder processBuilder = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -137,1 +137,1 @@\n-            final ProcessBuilder processBuilder = ProcessTools.createJavaProcessBuilder(\n+            final ProcessBuilder processBuilder = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -181,1 +181,1 @@\n-            final ProcessBuilder processBuilder = ProcessTools.createJavaProcessBuilder(\n+            final ProcessBuilder processBuilder = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -211,1 +211,1 @@\n-            final ProcessBuilder processBuilder = ProcessTools.createJavaProcessBuilder(\n+            final ProcessBuilder processBuilder = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -243,1 +243,1 @@\n-            final ProcessBuilder processBuilder = ProcessTools.createJavaProcessBuilder(\n+            final ProcessBuilder processBuilder = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -274,1 +274,1 @@\n-            final ProcessBuilder processBuilder = ProcessTools.createJavaProcessBuilder(\n+            final ProcessBuilder processBuilder = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -303,1 +303,1 @@\n-                final ProcessBuilder processBuilder = ProcessTools.createJavaProcessBuilder(\n+                final ProcessBuilder processBuilder = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -345,1 +345,1 @@\n-                final ProcessBuilder processBuilder = ProcessTools.createJavaProcessBuilder(\n+                final ProcessBuilder processBuilder = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/jdk\/java\/util\/Properties\/StoreReproducibilityTest.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,1 +49,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(List.of(\"CustomTzIDCheckDST\", \"runTZTest\"));\n+            ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(List.of(\"CustomTzIDCheckDST\", \"runTZTest\"));\n","filename":"test\/jdk\/java\/util\/TimeZone\/CustomTzIDCheckDST.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -283,1 +283,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/jdk\/javax\/management\/remote\/mandatory\/connection\/DefaultAgentFilterTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -442,1 +442,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -484,1 +484,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/jdk\/javax\/management\/security\/HashedPasswordFileTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,1 +45,1 @@\n-        ProcessBuilder pb = createJavaProcessBuilder(javaPath, clazz, props);\n+        ProcessBuilder pb = createJavaProcessBuilderIgnoreTestJavaOpts(javaPath, clazz, props);\n@@ -53,1 +53,1 @@\n-    private static ProcessBuilder createJavaProcessBuilder(Path javaPath,\n+    private static ProcessBuilder createJavaProcessBuilderIgnoreTestJavaOpts(Path javaPath,\n","filename":"test\/jdk\/javax\/net\/ssl\/TLSCommon\/interop\/ProcUtils.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -227,1 +227,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/jdk\/javax\/swing\/UI\/UnninstallUIMemoryLeaks\/UnninstallUIMemoryLeaks.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -55,1 +55,1 @@\n-        return ProcessTools.createJavaProcessBuilder(argsList.toArray(new String[argsList.size()]));\n+        return ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(argsList.toArray(new String[argsList.size()]));\n","filename":"test\/jdk\/javax\/swing\/text\/html\/CSS\/bug8234913.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -63,1 +63,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/jdk\/jdk\/incubator\/vector\/LoadJsvmlTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -120,1 +120,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/jdk\/jdk\/internal\/misc\/VM\/RuntimeArguments.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -130,1 +130,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(args);\n+            ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(args);\n","filename":"test\/jdk\/jdk\/jfr\/api\/consumer\/streaming\/TestCrossProcessStreaming.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -69,1 +69,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(args);\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(args);\n","filename":"test\/jdk\/jdk\/jfr\/api\/consumer\/streaming\/TestProcess.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,1 +49,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(jvm_args);\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(jvm_args);\n","filename":"test\/jdk\/jdk\/jfr\/event\/gc\/configuration\/TestGCYoungGenerationConfigurationEventWithMinAndMaxSize.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,1 +51,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(Test.class.getName());\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(Test.class.getName());\n","filename":"test\/jdk\/jdk\/jfr\/event\/os\/TestInitialEnvironmentVariable.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,1 +38,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:jfr+system+bytecode=trace\", \"-XX:StartFlightRecording\", \"-version\");\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\"-Xlog:jfr+system+bytecode=trace\", \"-XX:StartFlightRecording\", \"-version\");\n","filename":"test\/jdk\/jdk\/jfr\/jvm\/TestEventWriterLog.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n-            pb = ProcessTools.createJavaProcessBuilder(prepend + option, \"-version\");\n+            pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(prepend + option, \"-version\");\n","filename":"test\/jdk\/jdk\/jfr\/startupargs\/TestBadOptionValues.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -73,1 +73,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(commandLine, \"-version\");\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(commandLine, \"-version\");\n","filename":"test\/jdk\/jdk\/jfr\/startupargs\/TestJFCWarnings.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,1 +50,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/jdk\/jdk\/security\/JavaDotSecurity\/MakeJavaSecurityTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -312,1 +312,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/jdk\/sun\/jvmstat\/monitor\/MonitoredVm\/MonitorVmStartTerminate.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -70,1 +70,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(options);\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(options);\n","filename":"test\/jdk\/sun\/management\/jdp\/DynamicLauncher.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -176,1 +176,1 @@\n-            ProcessBuilder processBuilder = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder processBuilder = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/jdk\/sun\/management\/jmxremote\/bootstrap\/AbstractFilePermissionTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -98,1 +98,1 @@\n-            ProcessBuilder client = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder client = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/jdk\/sun\/management\/jmxremote\/bootstrap\/CustomLauncherTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -224,1 +224,1 @@\n-                ProcessBuilder builder = ProcessTools.createJavaProcessBuilder(args.toArray(new String[]{}));\n+                ProcessBuilder builder = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(args.toArray(new String[]{}));\n","filename":"test\/jdk\/sun\/management\/jmxremote\/bootstrap\/JMXInterfaceBindingTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -110,1 +110,1 @@\n-        ProcessBuilder server = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder server = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -136,1 +136,1 @@\n-            ProcessBuilder client = ProcessTools.createJavaProcessBuilder(\n+            ProcessBuilder client = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/jdk\/sun\/management\/jmxremote\/bootstrap\/LocalManagementTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -191,1 +191,1 @@\n-            ProcessBuilder processBuilder = ProcessTools.createJavaProcessBuilder(command.toArray(new String[command.size()]));\n+            ProcessBuilder processBuilder = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(command.toArray(new String[command.size()]));\n","filename":"test\/jdk\/sun\/management\/jmxremote\/bootstrap\/RmiRegistrySslTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -403,1 +403,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/jdk\/sun\/management\/jmxremote\/startstop\/JMXStartStopTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -62,1 +62,1 @@\n-        testAppPb = ProcessTools.createJavaProcessBuilder(\n+        testAppPb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/jdk\/sun\/management\/jmxremote\/startstop\/JMXStatusPerfCountersTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -92,1 +92,1 @@\n-        testAppPb = ProcessTools.createJavaProcessBuilder(args.toArray(new String[args.size()]));\n+        testAppPb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(args.toArray(new String[args.size()]));\n","filename":"test\/jdk\/sun\/management\/jmxremote\/startstop\/JMXStatusTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -56,1 +56,1 @@\n-            List<String> cmd = ProcessTools.createJavaProcessBuilder().command();\n+            List<String> cmd = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts().command();\n","filename":"test\/jdk\/sun\/security\/krb5\/auto\/ModuleName.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -83,1 +83,1 @@\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(List.of(\n+            ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(List.of(\n","filename":"test\/jdk\/sun\/security\/provider\/KeyStore\/DKSTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -63,1 +63,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/jdk\/sun\/tools\/jstat\/JStatInterval.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,1 +49,1 @@\n-        ProcessBuilder builder = ProcessTools.createJavaProcessBuilder(args.toArray(new String[args.size()]));\n+        ProcessBuilder builder = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(args.toArray(new String[args.size()]));\n","filename":"test\/jdk\/tools\/jimage\/JImageToolTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -273,1 +273,1 @@\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(Utils.addTestJavaOpts(cmds));\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(Utils.addTestJavaOpts(cmds));\n","filename":"test\/jdk\/tools\/launcher\/modules\/basic\/BasicTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-                ProcessTools.createJavaProcessBuilder(ProcessToolsLastLineTest.class.getName(), output),\n+                ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(ProcessToolsLastLineTest.class.getName(), output),\n","filename":"test\/lib-test\/jdk\/test\/lib\/process\/ProcessToolsLastLineTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -116,1 +116,1 @@\n-                = ProcessTools.createJavaProcessBuilder(finalOptions.toArray(\n+                = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(finalOptions.toArray(\n@@ -266,1 +266,1 @@\n-        ProcessBuilder processBuilder = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder processBuilder = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n@@ -336,1 +336,1 @@\n-        ProcessBuilder processBuilder = ProcessTools.createJavaProcessBuilder(\n+        ProcessBuilder processBuilder = ProcessTools.createJavaProcessBuilderIgnoreTestJavaOpts(\n","filename":"test\/lib\/jdk\/test\/lib\/cli\/CommandLineOptionTest.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -380,10 +380,0 @@\n-    \/**\n-     * Create ProcessBuilder using the java launcher from the jdk to be tested.\n-     *\n-     * @param command Arguments to pass to the java command.\n-     * @return The ProcessBuilder instance representing the java command.\n-     *\/\n-    public static ProcessBuilder createJavaProcessBuilder(List<String> command) {\n-        return createJavaProcessBuilder(command.toArray(String[]::new));\n-    }\n-\n@@ -456,1 +446,2 @@\n-     * Create ProcessBuilder using the java launcher from the jdk to be tested.\n+     * Create ProcessBuilder using the java launcher from the jdk to\n+     * be tested.\n@@ -458,0 +449,21 @@\n+     * <p><b> Please observe that you likely should use\n+     * createTestJvm() instead of this method because createTestJvm()\n+     * will add JVM options from \"test.vm.opts\" and \"test.java.opts\"\n+     * <\/b> and this method will not do that.\n+     *\n+     * @param command Arguments to pass to the java command.\n+     * @return The ProcessBuilder instance representing the java command.\n+     *\/\n+    public static ProcessBuilder createJavaProcessBuilderIgnoreTestJavaOpts(List<String> command) {\n+        return createJavaProcessBuilderIgnoreTestJavaOpts(command.toArray(String[]::new));\n+    }\n+\n+    \/**\n+     * Create ProcessBuilder using the java launcher from the jdk to\n+     * be tested.\n+     *\n+     * <p><b> Please observe that you likely should use\n+     * createTestJvm() instead of this method because createTestJvm()\n+     * will add JVM options from \"test.vm.opts\" and \"test.java.opts\"\n+     * <\/b> and this method will not do that.\n+\n@@ -461,1 +473,1 @@\n-    public static ProcessBuilder createJavaProcessBuilder(String... command) {\n+    public static ProcessBuilder createJavaProcessBuilderIgnoreTestJavaOpts(String... command) {\n@@ -532,1 +544,1 @@\n-        return createJavaProcessBuilder(Utils.prependTestJavaOpts(command));\n+        return createJavaProcessBuilderIgnoreTestJavaOpts(Utils.prependTestJavaOpts(command));\n","filename":"test\/lib\/jdk\/test\/lib\/process\/ProcessTools.java","additions":25,"deletions":13,"binary":false,"changes":38,"status":"modified"}]}