{"files":[{"patch":"@@ -693,1 +693,6 @@\n-    int PREVIEW_MINOR_VERSION = -1;\n+    \/**\n+     * A minor version number indicating a class uses preview features\n+     * of a Java SE version since 12, for major versions {@value\n+     * #JAVA_12_VERSION} and above.\n+     *\/\n+    int PREVIEW_MINOR_VERSION = 65535;\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/Classfile.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -0,0 +1,59 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+import jdk.internal.classfile.Classfile;\n+import org.junit.jupiter.api.Test;\n+\n+import java.lang.constant.ClassDesc;\n+\n+import static java.lang.constant.ConstantDescs.*;\n+import static jdk.internal.classfile.Classfile.*;\n+import static org.junit.jupiter.api.Assertions.*;\n+\n+\/*\n+ * @test\n+ * @bug 8311172\n+ * @run junit PreviewMinorVersionTest\n+ * @summary Ensures Classfile.PREVIEW_MINOR_VERSION equals that of classes with\n+ *          preview minor version from ClassModel::minorVersion\n+ *\/\n+public class PreviewMinorVersionTest {\n+\n+    @Test\n+    public void testMinorVersionMatches() {\n+        \/\/ compile a class with --enable-preview\n+        \/\/ uses Record feature to trigger forcePreview\n+        var cf = Classfile.of();\n+        var cd = ClassDesc.of(\"Test\");\n+        var bytes = cf.build(cd, cb -> cb\n+                .withSuperclass(CD_Object)\n+                \/\/ old preview minor version,\n+                \/\/ with all bits set to 1\n+                .withVersion(JAVA_17_VERSION, -1)\n+        );\n+\n+        var cm = Classfile.of().parse(bytes);\n+        assertEquals(Classfile.PREVIEW_MINOR_VERSION, cm.minorVersion());\n+    }\n+}\n","filename":"test\/jdk\/jdk\/classfile\/PreviewMinorVersionTest.java","additions":59,"deletions":0,"binary":false,"changes":59,"status":"added"}]}