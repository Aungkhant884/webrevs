{"files":[{"patch":"@@ -32,0 +32,1 @@\n+import static org.testng.Assert.assertNotNull;\n@@ -34,0 +35,2 @@\n+import org.testng.annotations.AfterMethod;\n+import org.testng.annotations.BeforeMethod;\n@@ -51,0 +54,7 @@\n+    private Path tempDir;\n+\n+    @BeforeMethod\n+    private void setUp() throws Exception {\n+        tempDir = Files.createTempDirectory(\"temp\");\n+    }\n+\n@@ -52,1 +62,6 @@\n-    private static void cleanup(Path dir) {\n+    @AfterMethod\n+    private void cleanup() {\n+        deleteRecursively(tempDir);\n+    }\n+\n+    private static void deleteRecursively(Path path) {\n@@ -54,3 +69,3 @@\n-            if (Files.isDirectory(dir)) {\n-                try (Stream<Path> s = Files.list(dir)) {\n-                    s.forEach(p -> cleanup(p));\n+            if (Files.isDirectory(path)) {\n+                try (Stream<Path> s = Files.list(path)) {\n+                    s.forEach(p -> deleteRecursively(p));\n@@ -59,1 +74,1 @@\n-            Files.delete(dir);\n+            Files.delete(path);\n@@ -66,12 +81,4 @@\n-    public void run() throws Throwable {\n-        Path topDir = Files.createTempDirectory(\"delete\");\n-        try {\n-            Path entry = Files.writeString(topDir.resolve(\"test.txt\"), \"Some text...\");\n-            doTest(topDir.resolve(\"test.jar\"), entry);\n-        } finally {\n-            cleanup(topDir);\n-        }\n-    }\n-\n-    private static void doTest(Path jar, Path entry) throws Throwable {\n-        String[] jarArgs = new String[] {\"cf\", jar.toString(), entry.toString()};\n+    public void run() throws Exception {\n+        Path entryPath = Files.writeString(tempDir.resolve(\"test.txt\"), \"Some text...\");\n+        Path jar = tempDir.resolve(\"test.jar\");\n+        String[] jarArgs = new String[] {\"cf\", jar.toString(), entryPath.toString()};\n@@ -83,0 +90,1 @@\n+            assertNotNull(zipEntry);\n","filename":"test\/jdk\/tools\/jar\/ManifestDirectoryCompression.java","additions":25,"deletions":17,"binary":false,"changes":42,"status":"modified"}]}