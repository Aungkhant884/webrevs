{"files":[{"patch":"@@ -675,1 +675,1 @@\n-                    case ANNOTATION_TYPE: case CLASS: case ENUM: case INTERFACE:\n+                    case ANNOTATION_TYPE: case CLASS: case ENUM: case INTERFACE: case RECORD:\n","filename":"src\/jdk.compiler\/share\/classes\/jdk\/internal\/shellsupport\/doc\/JavadocHelper.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -130,0 +130,1 @@\n+import javax.lang.model.element.RecordComponentElement;\n@@ -515,1 +516,1 @@\n-                            case TYPE_PARAMETER, CLASS, INTERFACE, ENUM -> FALSE;\n+                            case TYPE_PARAMETER, CLASS, INTERFACE, ENUM, RECORD -> FALSE;\n@@ -529,1 +530,1 @@\n-            Kind.ANNOTATION_TYPE, Kind.CLASS, Kind.ENUM, Kind.INTERFACE\n+            Kind.ANNOTATION_TYPE, Kind.CLASS, Kind.ENUM, Kind.INTERFACE, Kind.RECORD\n@@ -935,1 +936,1 @@\n-                case ANNOTATION_TYPE: case CLASS: case ENUM: case INTERFACE:\n+                case ANNOTATION_TYPE: case CLASS: case ENUM: case INTERFACE: case RECORD:\n@@ -1684,1 +1685,1 @@\n-            case ANNOTATION_TYPE: case CLASS: case ENUM: case INTERFACE: {\n+            case ANNOTATION_TYPE: case CLASS: case ENUM: case INTERFACE, RECORD: {\n@@ -1690,0 +1691,2 @@\n+                String typeParameters = typeParametersOpt(at, type.getTypeParameters(), includeParameterNames);\n+                String recordParameters;\n@@ -1691,1 +1694,22 @@\n-                return name + typeParametersOpt(at, type.getTypeParameters(), includeParameterNames);\n+                if (el.getKind() == ElementKind.RECORD) {\n+                    StringBuilder params = new StringBuilder();\n+                    String sep = \"\";\n+\n+                    params.append(\"(\");\n+\n+                    for (RecordComponentElement component : type.getRecordComponents()) {\n+                        params.append(sep);\n+                        params.append(component.asType());\n+                        params.append(\" \");\n+                        params.append(component.getSimpleName());\n+                        sep = \", \";\n+                    }\n+\n+                    params.append(\")\");\n+\n+                    recordParameters = params.toString();\n+                } else {\n+                    recordParameters = \"\";\n+                }\n+\n+                return name + typeParameters + recordParameters;\n@@ -1693,0 +1717,1 @@\n+\n@@ -1793,1 +1818,1 @@\n-            case IMPORT: case METHOD: case CLASS: case ENUM:\n+            case IMPORT: case METHOD: case CLASS: case ENUM: case RECORD:\n","filename":"src\/jdk.jshell\/share\/classes\/jdk\/jshell\/SourceCodeAnalysisImpl.java","additions":31,"deletions":6,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 8131025 8141092 8153761 8145263 8131019 8175886 8176184 8176241 8176110 8177466 8197439 8221759 8234896 8240658 8278039\n+ * @bug 8131025 8141092 8153761 8145263 8131019 8175886 8176184 8176241 8176110 8177466 8197439 8221759 8234896 8240658 8278039 8286206\n@@ -153,0 +153,1 @@\n+        assertCompletion(\"record R() implements doubl|\");\n@@ -333,1 +334,1 @@\n-        String input = \"package field; public class FieldTest { private static String field; private static String field2; }\";\n+        String input = \"package field; public class FieldTest { private static String field; private static String field2; public record R<E>(String s, E e) {} }\";\n@@ -338,0 +339,1 @@\n+        assertSignature(\"field.FieldTest.R|\", \"field.FieldTest.R<E>(java.lang.String s, E e)\");\n@@ -788,0 +790,4 @@\n+\n+    public void testRecord() {\n+        assertCompletion(\"record R() implements Ru|\", true, \"Runnable\");\n+    }\n","filename":"test\/langtools\/jdk\/jshell\/CompletionSuggestionTest.java","additions":8,"deletions":2,"binary":false,"changes":10,"status":"modified"}]}