{"files":[{"patch":"@@ -45,1 +45,1 @@\n-            Signature.getInstance(\"RSASSA-PSS\", p);\n+            Signature.getInstance(SIGALG, p);\n@@ -48,1 +48,1 @@\n-            System.out.println(\"Skip testing RSASSA-PSS\" +\n+            System.out.println(\"Skip testing \" + SIGALG +\n@@ -59,1 +59,1 @@\n-                    h : h.replace(\"-\",\"\")) + \"withRSASSA-PSS\";\n+                    h : h.replace(\"-\",\"\")) + \"with\" + SIGALG;\n","filename":"test\/jdk\/sun\/security\/pkcs11\/PSSUtil.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -38,4 +38,0 @@\n-    \/**\n-     * ALGORITHM name, fixed as RSA for PKCS11\n-     *\/\n-    private static final String KEYALG = \"RSA\";\n","filename":"test\/jdk\/sun\/security\/pkcs11\/Signature\/KeyAndParamCheckForPSS.java","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -38,2 +38,0 @@\n-    \/\/ PKCS11 does not support RSASSA-PSS keys yet\n-    private static final String KEYALG = \"RSA\";\n@@ -66,2 +64,1 @@\n-            System.out.println(\"Skip testing RSASSA-PSS\" +\n-                \" due to no support\");\n+            System.out.println(\"Skip testing \" + SIGALG + \" due to no support\");\n","filename":"test\/jdk\/sun\/security\/pkcs11\/Signature\/SignatureTestPSS.java","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"}]}