{"files":[{"patch":"@@ -179,1 +179,0 @@\n-    _roots(),\n@@ -344,1 +343,0 @@\n-  push_roots<false \/* Concurrent *\/, false \/* Weak *\/>(context, _roots);\n","filename":"src\/hotspot\/share\/gc\/z\/zHeapIterator.cpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -55,1 +55,0 @@\n-  ZRootsIterator                     _roots;\n","filename":"src\/hotspot\/share\/gc\/z\/zHeapIterator.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-class ZRelocateRootsIteratorClosure : public ZRootsIteratorClosure {\n+class ZRelocateRootsIteratorClosure : public OopClosure {\n@@ -57,17 +57,0 @@\n-class ZRelocateRootsTask : public ZTask {\n-private:\n-  ZRootsIterator                _roots;\n-  ZRelocateRootsIteratorClosure _cl;\n-\n-public:\n-  ZRelocateRootsTask() :\n-      ZTask(\"ZRelocateRootsTask\"),\n-      _roots(true \/* visit_jvmti_weak_export *\/) {}\n-\n-  virtual void work() {\n-    \/\/ During relocation we need to visit the JVMTI\n-    \/\/ export weak roots to rehash the JVMTI tag map\n-    _roots.oops_do(&_cl);\n-  }\n-};\n-\n@@ -75,2 +58,2 @@\n-  ZRelocateRootsTask task;\n-  _workers->run_parallel(&task);\n+  ZRelocateRootsIteratorClosure cl;\n+  ZRelocateRoots::oops_do(&cl);\n","filename":"src\/hotspot\/share\/gc\/z\/zRelocate.cpp","additions":3,"deletions":20,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -57,1 +57,0 @@\n-static const ZStatSubPhase ZSubPhasePauseRoots(\"Pause Roots\");\n@@ -144,7 +143,1 @@\n-ZRootsIterator::ZRootsIterator(bool visit_jvmti_weak_export) :\n-    _visit_jvmti_weak_export(visit_jvmti_weak_export),\n-    _jvmti_weak_export(this) {\n-  assert(SafepointSynchronize::is_at_safepoint(), \"Should be at safepoint\");\n-}\n-\n-void ZRootsIterator::do_jvmti_weak_export(ZRootsIteratorClosure* cl) {\n+void ZRelocateRoots::oops_do(OopClosure* cl) {\n@@ -156,7 +149,0 @@\n-void ZRootsIterator::oops_do(ZRootsIteratorClosure* cl) {\n-  ZStatTimer timer(ZSubPhasePauseRoots);\n-  if (_visit_jvmti_weak_export) {\n-    _jvmti_weak_export.oops_do(cl);\n-  }\n-}\n-\n","filename":"src\/hotspot\/share\/gc\/z\/zRootsIterator.cpp","additions":1,"deletions":15,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -108,8 +108,1 @@\n-class ZRootsIterator {\n-private:\n-  const bool _visit_jvmti_weak_export;\n-\n-  void do_jvmti_weak_export(ZRootsIteratorClosure* cl);\n-\n-  ZSerialOopsDo<ZRootsIterator, &ZRootsIterator::do_jvmti_weak_export>   _jvmti_weak_export;\n-\n+class ZRelocateRoots : public AllStatic {\n@@ -117,3 +110,1 @@\n-  ZRootsIterator(bool visit_jvmti_weak_export = false);\n-\n-  void oops_do(ZRootsIteratorClosure* cl);\n+  static void oops_do(OopClosure* cl);\n","filename":"src\/hotspot\/share\/gc\/z\/zRootsIterator.hpp","additions":2,"deletions":11,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -232,4 +232,0 @@\n-void ZVerify::roots_strong() {\n-  roots<ZRootsIterator>(true \/* verify_fixed *\/);\n-}\n-\n@@ -249,1 +245,0 @@\n-  roots_strong();\n","filename":"src\/hotspot\/share\/gc\/z\/zVerify.cpp","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n-  static void roots_strong();\n","filename":"src\/hotspot\/share\/gc\/z\/zVerify.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"}]}