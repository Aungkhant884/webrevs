{"files":[{"patch":"@@ -53,2 +53,3 @@\n-     * Returns a new InnocuousThread with an auto-generated thread name\n-     * and its context class loader is set to the system class loader.\n+     * Returns a new InnocuousThread with an auto-generated thread name,\n+     * inheriting the current thread priority, and its context class loader\n+     * is set to the system class loader.\n@@ -62,1 +63,1 @@\n-     * set to the system class loader.\n+     * set to the system class loader, inheriting the current thread priority\n@@ -65,0 +66,11 @@\n+        return newThread(name, target, currentThread().getPriority());\n+    }\n+    \/**\n+     * Returns a new InnocuousThread with its context class loader\n+     * set to the system class loader, with the thread priority set to\n+     * the given priority.\n+     *\/\n+    public static Thread newThread(String name, Runnable target, int priority) {\n+        if (System.getSecurityManager() == null) {\n+            return createThread(name, target, ClassLoader.getSystemClassLoader(), priority);\n+        }\n@@ -69,4 +81,1 @@\n-                        return new InnocuousThread(INNOCUOUSTHREADGROUP,\n-                                                   target,\n-                                                   name,\n-                                                   ClassLoader.getSystemClassLoader());\n+                        return createThread(name, target, ClassLoader.getSystemClassLoader(), priority);\n@@ -100,1 +109,1 @@\n-            return createSystemThread(name, target, priority);\n+            return createThread(name, target, null, priority);\n@@ -106,1 +115,1 @@\n-                        return createSystemThread(name, target, priority);\n+                        return createThread(name, target, null, priority);\n@@ -111,1 +120,1 @@\n-    private static Thread createSystemThread(String name, Runnable target, int priority) {\n+    private static Thread createThread(String name, Runnable target, ClassLoader loader, int priority) {\n@@ -113,1 +122,1 @@\n-                target, name, null);\n+                target, name, loader);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/misc\/InnocuousThread.java","additions":20,"deletions":11,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -216,9 +216,2 @@\n-            return AccessController.doPrivileged(new PrivilegedAction<>() {\n-                @Override\n-                public Thread run() {\n-                    Thread t = InnocuousThread.newThread(r);\n-                    t.setPriority(Thread.MAX_PRIORITY - 2);\n-                    t.setName(\"Cleaner-\" + cleanerThreadNumber.getAndIncrement());\n-                    return t;\n-                }\n-            });\n+            return InnocuousThread.newThread(\"Cleaner-\" + cleanerThreadNumber.getAndIncrement(),\n+                r, Thread.MIN_PRIORITY - 2);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/ref\/CleanerImpl.java","additions":2,"deletions":9,"binary":false,"changes":11,"status":"modified"}]}