{"files":[{"patch":"@@ -1067,5 +1067,3 @@\n-  \/\/ Bang each page in the shadow zone. We can't assume it's been done for\n-  \/\/ an interpreter frame with greater than a page of locals, so each page\n-  \/\/ needs to be checked.  Only true for non-native.\n-  const int n_shadow_pages = (int)(StackOverflow::stack_shadow_zone_size() \/ os::vm_page_size());\n-  const int start_page = native_call ? n_shadow_pages : 1;\n+  \/\/ See more discussion in stackOverflow.hpp.\n+\n+  const int shadow_zone_size = checked_cast<int>(StackOverflow::stack_shadow_zone_size());\n@@ -1073,2 +1071,24 @@\n-  for (int pages = start_page; pages <= n_shadow_pages ; pages++) {\n-    __ sub(rscratch2, sp, pages*page_size);\n+  const int n_shadow_pages = shadow_zone_size \/ page_size;\n+\n+#ifdef ASSERT\n+  Label L_good_limit;\n+  __ ldr(rscratch1, Address(rthread, JavaThread::shadow_zone_safe_limit()));\n+  __ cbnz(rscratch1, L_good_limit);\n+  __ stop(\"shadow zone safe limit is not initialized\");\n+  __ bind(L_good_limit);\n+\n+  Label L_good_watermark;\n+  __ ldr(rscratch1, Address(rthread, JavaThread::shadow_zone_growth_watermark()));\n+  __ cbnz(rscratch1, L_good_watermark);\n+  __ stop(\"shadow zone growth watermark is not initialized\");\n+  __ bind(L_good_watermark);\n+#endif\n+\n+  Label L_done;\n+\n+  __ ldr(rscratch1, Address(rthread, JavaThread::shadow_zone_growth_watermark()));\n+  __ cmp(sp, rscratch1);\n+  __ br(Assembler::HI, L_done);\n+\n+  for (int p = 1; p <= n_shadow_pages; p++) {\n+    __ sub(rscratch2, sp, p*page_size);\n@@ -1077,1 +1097,0 @@\n-}\n@@ -1079,0 +1098,10 @@\n+  \/\/ Record the new watermark, but only if the update is above the safe limit.\n+  \/\/ Otherwise, the next time around the check above would pass the safe limit.\n+  __ ldr(rscratch1, Address(rthread, JavaThread::shadow_zone_safe_limit()));\n+  __ cmp(sp, rscratch1);\n+  __ br(Assembler::LS, L_done);\n+  __ mov(rscratch1, sp);\n+  __ str(rscratch1, Address(rthread, JavaThread::shadow_zone_growth_watermark()));\n+\n+  __ bind(L_done);\n+}\n","filename":"src\/hotspot\/cpu\/aarch64\/templateInterpreterGenerator_aarch64.cpp","additions":37,"deletions":8,"binary":false,"changes":45,"status":"modified"}]}