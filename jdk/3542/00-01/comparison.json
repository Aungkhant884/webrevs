{"files":[{"patch":"@@ -46,3 +46,2 @@\n-  \/\/ maxIterationsArg - max iterations to do\n-  UnitTestThread(TestRunnable* const runnableArg, Semaphore* doneArg, const long testDurationArg, const int maxIterationsArgs) :\n-    JavaTestThread(doneArg), runnable(runnableArg), testDuration(testDurationArg), maxIterations(maxIterationsArgs) {}\n+  UnitTestThread(TestRunnable* const runnableArg, Semaphore* doneArg, const long testDurationArg) :\n+    JavaTestThread(doneArg), runnable(runnableArg), testDuration(testDurationArg) {}\n@@ -52,1 +51,0 @@\n-    int iters = 0;\n@@ -54,1 +52,1 @@\n-    while (os::javaTimeMillis() < stopTime && iters < maxIterations) {\n+    while (os::javaTimeMillis() < stopTime) {\n@@ -56,1 +54,0 @@\n-      iters++;\n@@ -62,1 +59,0 @@\n-  const int maxIterations;\n@@ -71,2 +67,1 @@\n-  \/\/ maxIterationsArg - max iterations to do in each thread\n-  ConcurrentTestRunner(TestRunnable* const runnableArg, int nrOfThreadsArg, long testDurationMillisArg, int maxIterationsArg) :\n+  ConcurrentTestRunner(TestRunnable* const runnableArg, int nrOfThreadsArg, long testDurationMillisArg) :\n@@ -75,2 +70,1 @@\n-    testDurationMillis(testDurationMillisArg),\n-    maxIterations(maxIterationsArg) {}\n+    testDurationMillis(testDurationMillisArg) {}\n@@ -84,1 +78,1 @@\n-      t[i] = new UnitTestThread(unitTestRunnable, &done, testDurationMillis, maxIterations);\n+      t[i] = new UnitTestThread(unitTestRunnable, &done, testDurationMillis);\n@@ -102,1 +96,0 @@\n-  const int maxIterations;\n","filename":"test\/hotspot\/gtest\/concurrentTestRunner.inline.hpp","additions":6,"deletions":13,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -665,1 +665,1 @@\n-  ConcurrentTestRunner testRunner(&runnable, 30, 15000, INT_MAX);\n+  ConcurrentTestRunner testRunner(&runnable, 30, 15000);\n@@ -678,1 +678,1 @@\n-  ConcurrentTestRunner testRunner(&runnable, 30, 15000, INT_MAX);\n+  ConcurrentTestRunner testRunner(&runnable, 30, 15000);\n","filename":"test\/hotspot\/gtest\/memory\/test_virtualspace.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -418,3 +418,0 @@\n-  \/\/ Enabled large pages can produce lots of warning messages, cap the iteration count.\n-  int maxIterations = UseLargePages ? 300 : INT_MAX;\n-\n@@ -422,1 +419,1 @@\n-  ConcurrentTestRunner testRunner(&runnable, 30, 15000, maxIterations);\n+  ConcurrentTestRunner testRunner(&runnable, 30, 15000);\n","filename":"test\/hotspot\/gtest\/runtime\/test_os_linux.cpp","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -704,3 +704,0 @@\n-  \/\/ Enabled large pages can produce lots of warning messages, cap the iteration count.\n-  int maxIterations = UseLargePages ? 300 : INT_MAX;\n-\n@@ -708,1 +705,1 @@\n-  ConcurrentTestRunner testRunner(&runnable, 30, 15000, maxIterations);\n+  ConcurrentTestRunner testRunner(&runnable, 30, 15000);\n","filename":"test\/hotspot\/gtest\/runtime\/test_os_windows.cpp","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -33,1 +33,3 @@\n- *   the gtests.\n+ *   the gtests. When tests complain, they would spew a lot of warning messages,\n+ *   which could blow out the test runner Java heaps. This is why we are running\n+ *   with -XX:-PrintWarnings.\n@@ -43,1 +45,1 @@\n- * @run main\/native GTestWrapper --gtest_filter=os* -XX:+UseLargePages\n+ * @run main\/native GTestWrapper --gtest_filter=os* -XX:-PrintWarnings -XX:+UseLargePages\n@@ -54,1 +56,1 @@\n- * @run main\/native GTestWrapper --gtest_filter=os* -XX:+UseLargePages -XX:LargePageSizeInBytes=1G\n+ * @run main\/native GTestWrapper --gtest_filter=os* -XX:-PrintWarnings -XX:+UseLargePages -XX:LargePageSizeInBytes=1G\n@@ -64,1 +66,1 @@\n- * @run main\/native GTestWrapper --gtest_filter=os* -XX:+UseLargePages -XX:+UseSHM\n+ * @run main\/native GTestWrapper --gtest_filter=os* -XX:-PrintWarnings -XX:+UseLargePages -XX:+UseSHM\n","filename":"test\/hotspot\/jtreg\/gtest\/LargePageGtests.java","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"}]}