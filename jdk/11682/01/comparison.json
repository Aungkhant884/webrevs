{"files":[{"patch":"@@ -737,1 +737,1 @@\n-    ::new (reg_map) RegisterMap((JavaThread*)thread,\n+    ::new (reg_map) RegisterMap(reinterpret_cast<JavaThread*>(thread),\n@@ -742,1 +742,1 @@\n-    *reg_map = RegisterMap((JavaThread*)thread,\n+    *reg_map = RegisterMap(reinterpret_cast<JavaThread*>(thread),\n","filename":"src\/hotspot\/cpu\/aarch64\/frame_aarch64.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -642,1 +642,1 @@\n-    JavaThread* const jt = (t != NULL && t->is_Java_thread()) ? (JavaThread*) t : NULL;\n+    JavaThread* const jt = (t != NULL && t->is_Java_thread()) ? JavaThread::cast(t) : NULL;\n","filename":"src\/hotspot\/os\/posix\/signals_posix.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -53,3 +53,0 @@\n-  assert(this->is_Java_thread(), \"must be JavaThread\");\n-  JavaThread* jt = (JavaThread *)this;\n-\n@@ -58,2 +55,2 @@\n-  if (jt->has_last_Java_frame() && jt->frame_anchor()->walkable()) {\n-    *fr_addr = jt->pd_last_frame();\n+  if (has_last_Java_frame() && frame_anchor()->walkable()) {\n+    *fr_addr = pd_last_frame();\n@@ -78,1 +75,1 @@\n-    if (!ret_frame.safe_for_sender(jt)) {\n+    if (!ret_frame.safe_for_sender(this)) {\n@@ -82,1 +79,1 @@\n-      if (!ret_frame2.safe_for_sender(jt)) {\n+      if (!ret_frame2.safe_for_sender(this)) {\n@@ -101,1 +98,0 @@\n-\n","filename":"src\/hotspot\/os_cpu\/bsd_aarch64\/javaThread_bsd_aarch64.cpp","additions":4,"deletions":8,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -52,5 +52,0 @@\n-\n-  assert(this->is_Java_thread(), \"must be JavaThread\");\n-\n-  JavaThread* jt = (JavaThread *)this;\n-\n@@ -59,2 +54,2 @@\n-  if (jt->has_last_Java_frame() && jt->frame_anchor()->walkable()) {\n-    *fr_addr = jt->pd_last_frame();\n+  if (has_last_Java_frame() && frame_anchor()->walkable()) {\n+    *fr_addr = pd_last_frame();\n@@ -74,1 +69,1 @@\n-    if (!ret_frame.safe_for_sender(jt)) {\n+    if (!ret_frame.safe_for_sender(this)) {\n@@ -78,1 +73,1 @@\n-      if (!ret_frame2.safe_for_sender(jt)) {\n+      if (!ret_frame2.safe_for_sender(this)) {\n@@ -91,1 +86,0 @@\n-\n","filename":"src\/hotspot\/os_cpu\/windows_aarch64\/javaThread_windows_aarch64.cpp","additions":4,"deletions":10,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -1717,1 +1717,1 @@\n-  return (JavaThread*)java_thread->address_field(_eetop_offset);\n+  return reinterpret_cast<JavaThread*>(java_thread->address_field(_eetop_offset));\n","filename":"src\/hotspot\/share\/classfile\/javaClasses.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -111,1 +111,1 @@\n-      runtime = JVMCI::compiler_runtime((JavaThread*) THREAD);\n+      runtime = JVMCI::compiler_runtime(THREAD);\n","filename":"src\/hotspot\/share\/jvmci\/jvmci.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -989,1 +989,1 @@\n-    JavaThread* jthread = (JavaThread*) thread;\n+    JavaThread* jthread = JavaThread::cast(thread);\n","filename":"src\/hotspot\/share\/jvmci\/jvmciRuntime.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -171,1 +171,1 @@\n-      _map((JavaThread*)nullptr,\n+      _map(nullptr,\n","filename":"src\/hotspot\/share\/oops\/instanceStackChunkKlass.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -195,1 +195,1 @@\n-    RegisterMap full_map((JavaThread*)nullptr,\n+    RegisterMap full_map(nullptr,\n","filename":"src\/hotspot\/share\/oops\/stackChunkOop.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -586,1 +586,1 @@\n-    JvmtiEventController::set_user_enabled(this, (JavaThread*) NULL, (oop) NULL, event_type, enabled);\n+    JvmtiEventController::set_user_enabled(this, NULL, (oop) NULL, event_type, enabled);\n","filename":"src\/hotspot\/share\/prims\/jvmtiEnv.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2336,1 +2336,1 @@\n-    _result = ((JvmtiEnvBase *)_env)->get_owned_monitors((JavaThread*)target,\n+    _result = ((JvmtiEnvBase *)_env)->get_owned_monitors(java_thread,\n","filename":"src\/hotspot\/share\/prims\/jvmtiEnvBase.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -748,1 +748,1 @@\n-  : VM_BaseGetOrSetLocal((JavaThread*)NULL, depth, index, type, _DEFAULT_VALUE, false, self),\n+  : VM_BaseGetOrSetLocal(NULL, depth, index, type, _DEFAULT_VALUE, false, self),\n@@ -756,1 +756,1 @@\n-  : VM_BaseGetOrSetLocal((JavaThread*)NULL, depth, index, type, value, true, self),\n+  : VM_BaseGetOrSetLocal(NULL, depth, index, type, value, true, self),\n@@ -819,1 +819,1 @@\n-  : VM_BaseGetOrSetLocal((JavaThread*)NULL, depth, index, type, _DEFAULT_VALUE, false, self)\n+  : VM_BaseGetOrSetLocal(NULL, depth, index, type, _DEFAULT_VALUE, false, self)\n@@ -828,1 +828,1 @@\n-  : VM_BaseGetOrSetLocal((JavaThread*)NULL, depth, index, type, value, true, self)\n+  : VM_BaseGetOrSetLocal(NULL, depth, index, type, value, true, self)\n","filename":"src\/hotspot\/share\/prims\/jvmtiImpl.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -83,1 +83,1 @@\n-    JavaThread* jt = (JavaThread*)thread;\n+    JavaThread* jt = JavaThread::cast(thread);\n","filename":"src\/hotspot\/share\/prims\/scopedMemoryAccess.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -429,3 +429,2 @@\n-    Thread* thread = Thread::current();\n-    assert(thread->is_Java_thread(), \"\");\n-    ThreadToNativeFromVM trans((JavaThread*)thread);\n+    JavaThread* thread = JavaThread::current();\n+    ThreadToNativeFromVM trans(thread);\n","filename":"src\/hotspot\/share\/runtime\/continuation.cpp","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2566,1 +2566,1 @@\n-                    (JavaThread*)nullptr :\n+                    nullptr :\n@@ -2577,1 +2577,1 @@\n-  values.print_on((JavaThread*)nullptr, st);\n+  values.print_on(static_cast<JavaThread*>(nullptr), st);\n","filename":"src\/hotspot\/share\/runtime\/continuationFreezeThaw.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1568,1 +1568,1 @@\n-  \/\/ if (error) { tty->cr(); print_on((JavaThread*)nullptr, tty); }\n+  \/\/ if (error) { tty->cr(); print_on(static_cast<JavaThread*>(nullptr), tty); }\n","filename":"src\/hotspot\/share\/runtime\/frame.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -825,1 +825,1 @@\n-    JavaThread* current = (JavaThread*)((intptr_t)env - in_bytes(jni_environment_offset()));\n+    JavaThread* current = reinterpret_cast<JavaThread*>(((intptr_t)env - in_bytes(jni_environment_offset())));\n","filename":"src\/hotspot\/share\/runtime\/javaThread.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1882,1 +1882,1 @@\n-  if (NotRunnable(current, (JavaThread*) owner_raw())) {\n+  if (NotRunnable(current, static_cast<JavaThread*>(owner_raw()))) {\n@@ -1931,1 +1931,1 @@\n-    JavaThread* ox = (JavaThread*) owner_raw();\n+    JavaThread* ox = static_cast<JavaThread*>(owner_raw());\n@@ -1933,1 +1933,1 @@\n-      ox = (JavaThread*)try_set_owner_from(NULL, current);\n+      ox = static_cast<JavaThread*>(try_set_owner_from(NULL, current));\n","filename":"src\/hotspot\/share\/runtime\/objectMonitor.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -375,1 +375,1 @@\n-    JavaThread* const owner = (JavaThread*) m->owner_raw();\n+    JavaThread* const owner = static_cast<JavaThread*>(m->owner_raw());\n","filename":"src\/hotspot\/share\/runtime\/synchronizer.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}