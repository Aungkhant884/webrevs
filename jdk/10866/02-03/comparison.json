{"files":[{"patch":"@@ -48,1 +48,1 @@\n-public class TestFileChooserSingleDirectorySelection  {\n+public class TestFileChooserSingleDirectorySelection {\n@@ -54,0 +54,2 @@\n+    private static File[] testDir;\n+    private static File[] tempFile;\n@@ -56,0 +58,1 @@\n+        System.setProperty(\"sun.java2d.uiScale\", \"1.0\");\n@@ -58,0 +61,20 @@\n+\n+        try {\n+            \/\/ create test directory\n+            String tmpDir = System.getProperty(\"user.home\");\n+            testDir = new File[1];\n+            testDir[0] = new File(tmpDir, \"testDir\");\n+            if (!testDir[0].exists())\n+                testDir[0].mkdir();\n+            testDir[0].deleteOnExit();\n+\n+            \/\/ create temporary files inside testDir\n+            tempFile = new File[5];\n+            for (int i = 0; i < 5; ++i) {\n+                tempFile[i] = File.createTempFile(\"temp\", \".txt\",\n+                        new File(testDir[0].getAbsolutePath()));\n+                tempFile[i].deleteOnExit();\n+            }\n+        } catch (Exception e) {\n+            e.printStackTrace();\n+        }\n@@ -59,1 +82,1 @@\n-                UIManager.getInstalledLookAndFeels()) {\n+                        UIManager.getInstalledLookAndFeels()) {\n@@ -62,0 +85,6 @@\n+            checkFileOnlyTest(laf);\n+            checkDirectoriesOnlyTest(laf);\n+            checkFilesAndDirectoriesTest(laf);\n+            System.out.println(\"Passed\");\n+        }\n+    }\n@@ -63,27 +92,86 @@\n-            try {\n-                SwingUtilities.invokeAndWait(() -> {\n-                    createAndShowUI();\n-                });\n-                robot.waitForIdle();\n-                robot.delay(1000);\n-\n-                Point pt = fileChooser.getLocationOnScreen();\n-                int frameHeight = frame.getHeight();\n-                ClickMouse(pt, 0, frameHeight, 50);\n-\n-                pt = getSelectedFilesButton.getLocationOnScreen();\n-                int btnWidth = getSelectedFilesButton.getWidth();\n-                int btnHeight = getSelectedFilesButton.getHeight();\n-                ClickMouse(pt, btnWidth, btnHeight, 0);\n-\n-                if (!passed)\n-                    throw new RuntimeException(\"getSelectedFiles returned empty array.\");\n-                else\n-                    System.out.println(\"passed\");\n-            } finally {\n-                SwingUtilities.invokeAndWait(() -> {\n-                    if (frame != null) {\n-                        frame.dispose();\n-                    }\n-                });\n-            }\n+    private static void checkFileOnlyTest(UIManager.LookAndFeelInfo laf)\n+            throws Exception {\n+        System.out.println(\"Testing File Only mode\");\n+        try {\n+            SwingUtilities.invokeAndWait(() -> {\n+                createAndShowUI();\n+                fileChooser.setCurrentDirectory(testDir[0]);\n+            });\n+\n+            robot.waitForIdle();\n+            robot.delay(1000);\n+            fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);\n+            Point frameLocation = fileChooser.getLocationOnScreen();\n+            int frameWidth = frame.getWidth();\n+            int frameHeight = frame.getHeight();\n+\n+            Point btnLocation = getSelectedFilesButton.getLocationOnScreen();\n+            int btnWidth = getSelectedFilesButton.getWidth();\n+            int btnHeight = getSelectedFilesButton.getHeight();\n+            clickMouse(frameLocation, 0, frameHeight, 230);\n+            clickMouse(btnLocation, btnWidth, btnHeight, 0);\n+            checkResult(laf);\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n+        }\n+    }\n+\n+    private static void checkDirectoriesOnlyTest(UIManager.LookAndFeelInfo laf)\n+            throws Exception  {\n+        System.out.println(\"Testing Directories Only mode\");\n+        try {\n+            SwingUtilities.invokeAndWait(() -> {\n+                createAndShowUI();\n+            });\n+            robot.waitForIdle();\n+            robot.delay(1000);\n+            fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);\n+            Point frameLocation = fileChooser.getLocationOnScreen();\n+            int frameWidth = frame.getWidth();\n+            int frameHeight = frame.getHeight();\n+\n+            Point btnLocation = getSelectedFilesButton.getLocationOnScreen();\n+            int btnWidth = getSelectedFilesButton.getWidth();\n+            int btnHeight = getSelectedFilesButton.getHeight();\n+            clickMouse(frameLocation, 0, frameHeight, 50);\n+            clickMouse(btnLocation, btnWidth, btnHeight, 0);\n+            checkResult(laf);\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n+        }\n+    }\n+\n+    private static void checkFilesAndDirectoriesTest(UIManager.LookAndFeelInfo laf)\n+            throws Exception  {\n+        System.out.println(\"Testing Files and Directories mode\");\n+        try {\n+            SwingUtilities.invokeAndWait(() -> {\n+                createAndShowUI();\n+            });\n+            robot.waitForIdle();\n+            robot.delay(1000);\n+            fileChooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);\n+            Point frameLocation = fileChooser.getLocationOnScreen();\n+            int frameWidth = frame.getWidth();\n+            int frameHeight = frame.getHeight();\n+\n+            Point btnLocation = getSelectedFilesButton.getLocationOnScreen();\n+            int btnWidth = getSelectedFilesButton.getWidth();\n+            int btnHeight = getSelectedFilesButton.getHeight();\n+            clickMouse(frameLocation, 0, frameHeight, 50);\n+            clickMouse(btnLocation, btnWidth, btnHeight, 0);\n+            checkResult(laf);\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n@@ -97,1 +185,0 @@\n-        fileChooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);\n@@ -105,1 +192,1 @@\n-            passed = false;\n+                passed = false;\n@@ -107,1 +194,1 @@\n-                if(files.length != 0) {\n+                if (files.length != 0) {\n@@ -132,2 +219,3 @@\n-    private static void ClickMouse(Point point, int width, int height, int xOffset) {\n-        robot.mouseMove(point.x + width\/2 + xOffset , point.y + height\/2);\n+    private static void clickMouse(Point point, int width, int height,\n+                                   int xOffset) {\n+        robot.mouseMove(point.x + width\/2 + xOffset , point.y + height\/3);\n@@ -138,0 +226,6 @@\n+\n+    private static void checkResult(UIManager.LookAndFeelInfo laf) {\n+        if (!passed)\n+            throw new RuntimeException(\"getSelectedFiles returned \" +\n+                    \"empty array for LAF: \"+laf.getClassName());\n+    }\n","filename":"test\/jdk\/com\/sun\/java\/swing\/plaf\/gtk\/TestFileChooserSingleDirectorySelection.java","additions":128,"deletions":34,"binary":false,"changes":162,"status":"modified"}]}