{"files":[{"patch":"@@ -491,1 +491,1 @@\n-                            && (chooser.getFileSelectionMode() != JFileChooser.DIRECTORIES_ONLY\n+                            && (chooser.getFileSelectionMode() == JFileChooser.FILES_ONLY\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/java\/swing\/plaf\/gtk\/GTKFileChooserUI.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,138 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 6972078\n+ * @key headful\n+ * @requires (os.family == \"linux\")\n+ * @summary Verifies if user is able to select single directory if multi selection\n+ * is enabled for JFileChooser.\n+ * @run main TestFileChooserSingleDirectorySelection\n+ *\/\n+\n+import java.io.File;\n+import java.awt.BorderLayout;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+import java.awt.event.InputEvent;\n+import java.awt.Point;\n+import java.awt.Robot;\n+import javax.swing.JButton;\n+import javax.swing.JFileChooser;\n+import javax.swing.JFrame;\n+import javax.swing.SwingUtilities;\n+import javax.swing.UIManager;\n+import javax.swing.UnsupportedLookAndFeelException;\n+\n+public class TestFileChooserSingleDirectorySelection  {\n+    private static JFrame frame;\n+    private static JFileChooser fileChooser;\n+    private static JButton getSelectedFilesButton;\n+    private static Robot robot;\n+    private static boolean passed;\n+\n+    public static void main(String[] args) throws Exception {\n+        robot = new Robot();\n+        robot.setAutoDelay(100);\n+        for (UIManager.LookAndFeelInfo laf :\n+                UIManager.getInstalledLookAndFeels()) {\n+            System.out.println(\"Testing LAF: \" + laf.getClassName());\n+            SwingUtilities.invokeAndWait(() -> setLookAndFeel(laf));\n+\n+            try {\n+                SwingUtilities.invokeAndWait(() -> {\n+                    createAndShowUI();\n+                });\n+                robot.waitForIdle();\n+                robot.delay(1000);\n+\n+                Point pt = fileChooser.getLocationOnScreen();\n+                int frameHeight = frame.getHeight();\n+                ClickMouse(pt, 0, frameHeight, 50);\n+\n+                pt = getSelectedFilesButton.getLocationOnScreen();\n+                int btnWidth = getSelectedFilesButton.getWidth();\n+                int btnHeight = getSelectedFilesButton.getHeight();\n+                ClickMouse(pt, btnWidth, btnHeight, 0);\n+\n+                if (!passed)\n+                    throw new RuntimeException(\"getSelectedFiles returned empty array.\");\n+                else\n+                    System.out.println(\"passed\");\n+            } finally {\n+                SwingUtilities.invokeAndWait(() -> {\n+                    if (frame != null) {\n+                        frame.dispose();\n+                    }\n+                });\n+            }\n+        }\n+    }\n+\n+    private static void createAndShowUI() {\n+        frame = new JFrame(\"Test File Chooser Single Directory Selection\");\n+        frame.getContentPane().setLayout(new BorderLayout());\n+        fileChooser = new JFileChooser(\"user.home\");\n+        fileChooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);\n+        fileChooser.setMultiSelectionEnabled(true);\n+        fileChooser.setControlButtonsAreShown(false);\n+\n+        getSelectedFilesButton = new JButton();\n+        getSelectedFilesButton.setText(\"Print selected Files\");\n+        getSelectedFilesButton.addActionListener(new ActionListener() {\n+            public void actionPerformed(ActionEvent evt) {\n+            passed = false;\n+                File files[] = fileChooser.getSelectedFiles();\n+                if(files.length != 0) {\n+                    passed = true;\n+                }\n+            }\n+        });\n+\n+        frame.getContentPane().add(fileChooser, BorderLayout.CENTER);\n+        frame.getContentPane().add(getSelectedFilesButton, BorderLayout.SOUTH);\n+        frame.pack();\n+        frame.setLocationRelativeTo(null);\n+        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n+        frame.setVisible(true);\n+    }\n+\n+    private static void setLookAndFeel(UIManager.LookAndFeelInfo laf) {\n+        try {\n+            UIManager.setLookAndFeel(laf.getClassName());\n+        } catch (UnsupportedLookAndFeelException ignored) {\n+            System.out.println(\"Unsupported LAF: \" + laf.getClassName());\n+        } catch (ClassNotFoundException | InstantiationException\n+                 | IllegalAccessException e) {\n+            throw new RuntimeException(e);\n+        }\n+    }\n+\n+    private static void ClickMouse(Point point, int width, int height, int xOffset) {\n+        robot.mouseMove(point.x + width\/2 + xOffset , point.y + height\/2);\n+        robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+        robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+        robot.delay(100);\n+    }\n+}\n","filename":"test\/jdk\/com\/sun\/java\/swing\/plaf\/gtk\/TestFileChooserSingleDirectorySelection.java","additions":138,"deletions":0,"binary":false,"changes":138,"status":"added"}]}