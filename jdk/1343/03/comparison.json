{"files":[{"patch":"@@ -1799,0 +1799,7 @@\n+\n+        \/\/ Attempt TLAB allocation first.\n+        \/\/\n+        \/\/ To do this, we need to make sure:\n+        \/\/   - klass is initialized\n+        \/\/   - klass can be fastpath allocated (e.g. does not have finalizer)\n+        \/\/   - TLAB accepts the allocation\n@@ -1800,2 +1807,1 @@\n-        if (!constants->tag_at(index).is_unresolved_klass()) {\n-          \/\/ Make sure klass is initialized and doesn't have a finalizer\n+        if (UseTLAB && !constants->tag_at(index).is_unresolved_klass()) {\n@@ -1804,1 +1810,1 @@\n-          if (ik->is_initialized() && ik->can_be_fastpath_allocated() ) {\n+          if (ik->is_initialized() && ik->can_be_fastpath_allocated()) {\n@@ -1806,4 +1812,1 @@\n-            oop result = NULL;\n-            if (UseTLAB) {\n-              result = (oop) THREAD->tlab().allocate(obj_size);\n-            }\n+            HeapWord* result = THREAD->tlab().allocate(obj_size);\n@@ -1811,8 +1814,7 @@\n-              \/\/ Initialize object (if nonzero size and need) and then the header.\n-              \/\/ If the TLAB isn't pre-zeroed then we'll have to do it.\n-              if (!ZeroTLAB) {\n-                HeapWord* to_zero = cast_from_oop<HeapWord*>(result) + sizeof(oopDesc) \/ oopSize;\n-                obj_size -= sizeof(oopDesc) \/ oopSize;\n-                if (obj_size > 0 ) {\n-                  memset(to_zero, 0, obj_size * HeapWordSize);\n-                }\n+              \/\/ Initialize object field block:\n+              \/\/   - if TLAB is pre-zeroed, we can skip this path\n+              \/\/   - in debug mode, ThreadLocalAllocBuffer::allocate mangles\n+              \/\/     this area, and we still need to initialize it\n+              if (DEBUG_ONLY(true ||) !ZeroTLAB) {\n+                size_t hdr_size = oopDesc::header_size();\n+                Copy::fill_to_words(result + hdr_size, obj_size - hdr_size, 0);\n@@ -1820,0 +1822,4 @@\n+\n+              oop obj = cast_to_oop(result);\n+\n+              \/\/ Initialize header\n@@ -1821,3 +1827,4 @@\n-              result->set_mark(markWord::prototype());\n-              result->set_klass_gap(0);\n-              result->set_klass(ik);\n+              obj->set_mark(markWord::prototype());\n+              obj->set_klass_gap(0);\n+              obj->set_klass(ik);\n+\n@@ -1827,1 +1834,1 @@\n-              SET_STACK_OBJECT(result, 0);\n+              SET_STACK_OBJECT(obj, 0);\n","filename":"src\/hotspot\/share\/interpreter\/zero\/bytecodeInterpreter.cpp","additions":26,"deletions":19,"binary":false,"changes":45,"status":"modified"}]}