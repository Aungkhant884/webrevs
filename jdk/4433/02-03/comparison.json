{"files":[{"patch":"@@ -724,3 +724,3 @@\n-                case NANOS   -> plusNanos(amountToAdd);\n-                case MICROS  -> plusSeconds((amountToAdd \/ (1000_000L * 1000)) * 1000).plusNanos((amountToAdd % (1000_000L * 1000)) * 1000);\n-                case MILLIS  -> plusMillis(amountToAdd);\n+                case NANOS -> plusNanos(amountToAdd);\n+                case MICROS -> plusSeconds((amountToAdd \/ (1000_000L * 1000)) * 1000).plusNanos((amountToAdd % (1000_000L * 1000)) * 1000);\n+                case MILLIS -> plusMillis(amountToAdd);\n","filename":"src\/java.base\/share\/classes\/java\/time\/Duration.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -607,6 +607,6 @@\n-                int n = switch (chronoField) {\n-                    case DAY_OF_MONTH -> lengthOfMonth();\n-                    case DAY_OF_YEAR -> lengthOfYear();\n-                    case ALIGNED_WEEK_OF_MONTH -> getMonth() == Month.FEBRUARY && !isLeapYear() ? 4 : 5;\n-                    case YEAR_OF_ERA -> Year.MAX_VALUE + (getYear() <= 0 ?  1 : 0);\n-                    default -> -1;\n+                return switch (chronoField) {\n+                    case DAY_OF_MONTH -> ValueRange.of(1, lengthOfMonth());\n+                    case DAY_OF_YEAR -> ValueRange.of(1, lengthOfYear());\n+                    case ALIGNED_WEEK_OF_MONTH -> ValueRange.of(1, getMonth() == Month.FEBRUARY && !isLeapYear() ? 4 : 5);\n+                    case YEAR_OF_ERA -> (getYear() <= 0 ? ValueRange.of(1, Year.MAX_VALUE + 1) : ValueRange.of(1, Year.MAX_VALUE));\n+                    default -> field.range();\n@@ -614,1 +614,0 @@\n-                return (n == -1) ? field.range() : ValueRange.of(1, n);\n","filename":"src\/java.base\/share\/classes\/java\/time\/LocalDate.java","additions":6,"deletions":7,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -603,1 +603,1 @@\n-                case OFFSET_SECONDS  -> getOffset().getTotalSeconds();\n+                case OFFSET_SECONDS -> getOffset().getTotalSeconds();\n@@ -638,1 +638,1 @@\n-                case OFFSET_SECONDS  -> getOffset().getTotalSeconds();\n+                case OFFSET_SECONDS -> getOffset().getTotalSeconds();\n","filename":"src\/java.base\/share\/classes\/java\/time\/OffsetDateTime.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -820,1 +820,1 @@\n-                case OFFSET_SECONDS  -> getOffset().getTotalSeconds();\n+                case OFFSET_SECONDS -> getOffset().getTotalSeconds();\n@@ -855,1 +855,1 @@\n-                case OFFSET_SECONDS  -> getOffset().getTotalSeconds();\n+                case OFFSET_SECONDS -> getOffset().getTotalSeconds();\n","filename":"src\/java.base\/share\/classes\/java\/time\/ZonedDateTime.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -215,1 +215,1 @@\n-                case OFFSET_SECONDS  -> getOffset().getTotalSeconds();\n+                case OFFSET_SECONDS -> getOffset().getTotalSeconds();\n","filename":"src\/java.base\/share\/classes\/java\/time\/chrono\/ChronoZonedDateTime.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -355,2 +355,2 @@\n-                    case DAY_OF_MONTH          -> ValueRange.of(1, lengthOfMonth());\n-                    case DAY_OF_YEAR           -> ValueRange.of(1, lengthOfYear());\n+                    case DAY_OF_MONTH -> ValueRange.of(1, lengthOfMonth());\n+                    case DAY_OF_YEAR -> ValueRange.of(1, lengthOfYear());\n","filename":"src\/java.base\/share\/classes\/java\/time\/chrono\/HijrahDate.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2791,3 +2791,3 @@\n-                    case NOT_NEGATIVE                -> throw new DateTimeException(\"Field \" + field +\n-                                                            \" cannot be printed as the value \" + value +\n-                                                            \" cannot be negative according to the SignStyle\");\n+                    case NOT_NEGATIVE -> throw new DateTimeException(\"Field \" + field +\n+                                             \" cannot be printed as the value \" + value +\n+                                             \" cannot be negative according to the SignStyle\");\n","filename":"src\/java.base\/share\/classes\/java\/time\/format\/DateTimeFormatterBuilder.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -127,1 +127,1 @@\n-            case 0    -> !positive || !strict; \/\/ NORMAL - valid if negative or (positive and lenient)\n+            case 0 -> !positive || !strict; \/\/ NORMAL - valid if negative or (positive and lenient)\n@@ -129,1 +129,1 @@\n-            default   -> !strict && !fixedWidth; \/\/ valid if lenient and not fixed width\n+            default -> !strict && !fixedWidth; \/\/ valid if lenient and not fixed width\n","filename":"src\/java.base\/share\/classes\/java\/time\/format\/SignStyle.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -709,2 +709,2 @@\n-                case QUARTER_YEARS    -> (R) temporal.plus(amount \/ 4, YEARS)\n-                                          .plus((amount % 4) * 3, MONTHS);\n+                case QUARTER_YEARS -> (R) temporal.plus(amount \/ 4, YEARS)\n+                                       .plus((amount % 4) * 3, MONTHS);\n@@ -723,1 +723,1 @@\n-                case QUARTER_YEARS    -> temporal1Inclusive.until(temporal2Exclusive, MONTHS) \/ 3;\n+                case QUARTER_YEARS -> temporal1Inclusive.until(temporal2Exclusive, MONTHS) \/ 3;\n","filename":"src\/java.base\/share\/classes\/java\/time\/temporal\/IsoFields.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -195,2 +195,2 @@\n-            case ZRULES  -> ZoneRules.readExternal(in);\n-            case ZOT     -> ZoneOffsetTransition.readExternal(in);\n+            case ZRULES -> ZoneRules.readExternal(in);\n+            case ZOT -> ZoneOffsetTransition.readExternal(in);\n","filename":"src\/java.base\/share\/classes\/java\/time\/zone\/Ser.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}