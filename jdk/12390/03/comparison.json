{"files":[{"patch":"@@ -28,5 +28,0 @@\n-import javax.swing.*;\n-import javax.swing.event.*;\n-import javax.swing.border.*;\n-\n-import java.awt.Component;\n@@ -34,0 +29,1 @@\n+import java.awt.Component;\n@@ -35,1 +31,0 @@\n-\n@@ -37,0 +32,4 @@\n+\n+import javax.swing.border.Border;\n+import javax.swing.border.EmptyBorder;\n+\n@@ -160,1 +159,4 @@\n-        setEnabled(list.isEnabled());\n+        if (list.getName() == null || !list.getName().equals(\"ComboBox.list\")) {\n+            setEnabled(list.isEnabled());\n+        }\n+\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/DefaultListCellRenderer.java","additions":9,"deletions":7,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -42,0 +42,1 @@\n+import javax.swing.DefaultListCellRenderer;\n@@ -111,0 +112,2 @@\n+    private DlcrEnabledHandler dlcrEnabledHandler;\n+\n@@ -190,0 +193,1 @@\n+        dlcrEnabledHandler = new DlcrEnabledHandler(comboBox);\n@@ -222,0 +226,1 @@\n+        dlcrEnabledHandler.unregister();\n@@ -825,0 +830,32 @@\n+\n+    \/**\n+     * Handler for updating combobox enabled status when renderer enabled\n+     * status changes\n+     *\/\n+    private static class DlcrEnabledHandler implements PropertyChangeListener {\n+        private JComboBox<?> comboBox;\n+\n+        private DlcrEnabledHandler(JComboBox<?> comboBox) {\n+            this.comboBox = comboBox;\n+            comboBox.addPropertyChangeListener(\"enabled\",this);\n+        }\n+\n+        public void unregister() {\n+            comboBox.removePropertyChangeListener(\"enabled\", this);\n+        }\n+\n+        \/**\n+         * Called when the combos enabled status changes\n+         *\n+         * @param evt A PropertyChangeEvent object describing the event source\n+         *            and the property that has changed.\n+         *\/\n+        public void propertyChange(PropertyChangeEvent evt) {\n+            if (evt.getPropertyName().equals(\"enabled\")) {\n+                if (comboBox.getRenderer() instanceof DefaultListCellRenderer) {\n+                    ((DefaultListCellRenderer) comboBox.getRenderer())\n+                            .setEnabled((boolean) evt.getNewValue());\n+                }\n+            }\n+        }\n+    }\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/synth\/SynthComboBoxUI.java","additions":37,"deletions":0,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -0,0 +1,128 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 7093691\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @summary Tests if Nimbus JComboBox has correct font\n+ * @run main\/manual DisabledComboBoxFontTest\n+ *\/\n+\n+import java.awt.FlowLayout;\n+import java.awt.event.ActionListener;\n+import java.lang.reflect.InvocationTargetException;\n+\n+import javax.swing.DefaultListCellRenderer;\n+import javax.swing.JButton;\n+import javax.swing.JComboBox;\n+import javax.swing.JFrame;\n+import javax.swing.JList;\n+import javax.swing.JPanel;\n+import javax.swing.SwingUtilities;\n+import javax.swing.UIManager;\n+\n+public class DisabledComboBoxFontTest {\n+    private static final String instructionsText = \"Pass if you can see two \" +\n+            \"editable JComboBoxes and two JLists displayed correctly when \" +\n+            \"enabled and disabled. Fail if they don't. Toggle UI enabled \" +\n+            \"status with the button on the right of the frame.\";\n+\n+    private static JFrame frame;\n+\n+    public static void createAndShowGUI() throws InterruptedException,\n+            InvocationTargetException {\n+        SwingUtilities.invokeAndWait(() -> {\n+\n+            JComboBox combo = new JComboBox();\n+            combo.addItem(\"Simple JComboBox\");\n+            combo.addItem(\"Simple JComboBox2\");\n+            combo.setEnabled(false);\n+\n+            JComboBox customCombo = new JComboBox();\n+            customCombo.setRenderer(new DefaultListCellRenderer());\n+            customCombo.addItem(\"JComboBox with DefaultListCellRenderer\");\n+            customCombo.addItem(\"JComboBox with DefaultListCellRenderer2\");\n+            customCombo.setEnabled(false);\n+\n+            String[] s = {\"one\", \"two\", \"three\"};\n+            JList list = new JList(s);\n+            list.setEnabled(false);\n+            JList list2 = new JList(s);\n+            list2.setCellRenderer(new DefaultListCellRenderer());\n+            list2.setEnabled(false);\n+\n+            JButton btn = new JButton(\"Enable\/Disable\");\n+            ActionListener actionListener = event -> {\n+                combo.setEnabled(!combo.isEnabled());\n+                customCombo.setEnabled(!customCombo.isEnabled());\n+                list.setEnabled(!list.isEnabled());\n+                list2.setEnabled(!list2.isEnabled());\n+                String str = event.getActionCommand();\n+                System.out.println(\"Clicked = \" + str + \" \" + customCombo.isEnabled());\n+            };\n+            btn.addActionListener(actionListener);\n+\n+            FlowLayout layout = new FlowLayout(FlowLayout.LEADING);\n+            JPanel panel = new JPanel(layout);\n+            panel.add(combo);\n+            panel.add(customCombo);\n+            panel.add(list);\n+            panel.add(list2);\n+            panel.add(btn);\n+            System.out.println(\"RENDERER1: \" + combo.getRenderer());\n+            System.out.println(\"RENDERER2: \" + customCombo.getRenderer());\n+            System.out.println(\"RENDERER3: \" + list.getCellRenderer());\n+            System.out.println(\"RENDERER4: \" + list2.getCellRenderer());\n+\n+            frame = new JFrame();\n+            frame.getContentPane().add(panel);\n+            frame.pack();\n+            frame.setLocationRelativeTo(null);\n+\n+            PassFailJFrame.addTestWindow(frame);\n+            PassFailJFrame.positionTestWindow(frame,\n+                    PassFailJFrame.Position.HORIZONTAL);\n+\n+            frame.setVisible(true);\n+        });\n+    }\n+\n+    public static void main(String[] args) throws Exception {\n+\n+        try {\n+            UIManager.setLookAndFeel(\"javax.swing.plaf.nimbus.NimbusLookAndFeel\");\n+        } catch (Exception e) {\n+            System.err.println(\"Nimbus L&F not found\");\n+            return;\n+        }\n+\n+        PassFailJFrame pfjFrame = new PassFailJFrame(\"Disabled Nimbus \"\n+                + \"CustomComboBox Test Instructions\", instructionsText, 5);\n+\n+        createAndShowGUI();\n+\n+        pfjFrame.awaitAndCheck();\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JComboBox\/DisabledComboBoxFontTest.java","additions":128,"deletions":0,"binary":false,"changes":128,"status":"added"}]}