{"files":[{"patch":"@@ -28,1 +28,0 @@\n-import sun.swing.SwingUtilities2;\n@@ -30,8 +29,13 @@\n-\n-import java.awt.*;\n-import java.awt.event.*;\n-import java.io.Serializable;\n-import javax.swing.*;\n-import javax.swing.border.*;\n-import java.awt.*;\n-import java.awt.event.*;\n+import sun.swing.SwingUtilities2;\n+import java.awt.AWTKeyStroke;\n+import java.awt.Component;\n+import java.awt.Dimension;\n+import java.awt.FontMetrics;\n+import java.awt.Graphics;\n+import java.awt.Insets;\n+import java.awt.KeyboardFocusManager;\n+import java.awt.Rectangle;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.KeyEvent;\n+import java.awt.event.KeyListener;\n+import java.awt.event.MouseMotionListener;\n@@ -41,0 +45,14 @@\n+\n+import javax.swing.AbstractAction;\n+import javax.swing.AbstractButton;\n+import javax.swing.ButtonGroup;\n+import javax.swing.ButtonModel;\n+import javax.swing.DefaultButtonModel;\n+import javax.swing.Icon;\n+import javax.swing.JComponent;\n+import javax.swing.JRadioButton;\n+import javax.swing.JToggleButton;\n+import javax.swing.KeyStroke;\n+import javax.swing.LookAndFeel;\n+import javax.swing.SwingUtilities;\n+import javax.swing.UIManager;\n@@ -42,1 +60,0 @@\n-import javax.swing.plaf.UIResource;\n@@ -44,0 +61,1 @@\n+import javax.swing.plaf.UIResource;\n@@ -583,1 +601,9 @@\n-        Insets i = b.getInsets();\n+        Insets i;\n+\n+        final View v = (View)b.getClientProperty(BasicHTML.propertyKey);\n+        if (v != null) {\n+            i = new Insets(0, 0, 0, 0);\n+        } else {\n+            i = b.getInsets();\n+        }\n+\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/basic\/BasicButtonUI.java","additions":37,"deletions":11,"binary":false,"changes":48,"status":"modified"},{"patch":"@@ -27,1 +27,0 @@\n-import sun.swing.SwingUtilities2;\n@@ -29,3 +28,16 @@\n-\n-import java.awt.*;\n-import javax.swing.*;\n+import sun.swing.SwingUtilities2;\n+import java.awt.Color;\n+import java.awt.Component;\n+import java.awt.Dimension;\n+import java.awt.Font;\n+import java.awt.FontMetrics;\n+import java.awt.Graphics;\n+import java.awt.Insets;\n+import java.awt.Rectangle;\n+\n+import javax.swing.ButtonModel;\n+import javax.swing.Icon;\n+import javax.swing.JButton;\n+import javax.swing.JComponent;\n+import javax.swing.JMenuItem;\n+import javax.swing.SwingUtilities;\n@@ -33,1 +45,1 @@\n-import javax.swing.text.*;\n+import javax.swing.text.View;\n@@ -383,4 +395,13 @@\n-        paintViewR.x = insets.left;\n-        paintViewR.y = insets.top;\n-        paintViewR.width = c.getWidth() - (insets.left + insets.right);\n-        paintViewR.height = c.getHeight() - (insets.top + insets.bottom);\n+        final View v = (View)c.getClientProperty(BasicHTML.propertyKey);\n+\n+        if (c instanceof JButton && v != null) {\n+            paintViewR.x = 0;\n+            paintViewR.y = 0;\n+            paintViewR.width = c.getWidth();\n+            paintViewR.height = c.getHeight();\n+        } else {\n+            paintViewR.x = insets.left;\n+            paintViewR.y = insets.top;\n+            paintViewR.width = c.getWidth() - (insets.left + insets.right);\n+            paintViewR.height = c.getHeight() - (insets.top + insets.bottom);\n+        }\n@@ -412,2 +433,0 @@\n-            View v = (View) c.getClientProperty(BasicHTML.propertyKey);\n-\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/synth\/SynthGraphicsUtils.java","additions":30,"deletions":11,"binary":false,"changes":41,"status":"modified"},{"patch":"@@ -27,2 +27,1 @@\n- * @requires (os.family == \"mac\")\n- * @summary Tests HTML image as JButton text for unwanted padding on macOS Aqua LAF\n+ * @summary Tests HTML image as JButton text for unwanted padding\n@@ -44,0 +43,1 @@\n+import javax.swing.UnsupportedLookAndFeelException;\n@@ -63,0 +63,2 @@\n+    private static boolean supportedLaf;\n+\n@@ -64,1 +66,0 @@\n-        UIManager.setLookAndFeel(\"com.apple.laf.AquaLookAndFeel\");\n@@ -68,2 +69,5 @@\n-        SwingUtilities.invokeAndWait(HtmlButtonImageTest::createButton);\n-        SwingUtilities.invokeAndWait(HtmlButtonImageTest::paintButton);\n+        for (UIManager.LookAndFeelInfo laf : UIManager.getInstalledLookAndFeels()) {\n+            SwingUtilities.invokeAndWait(() -> setLookAndFeel(laf));\n+            if(supportedLaf) {\n+                SwingUtilities.invokeAndWait(HtmlButtonImageTest::createButton);\n+                SwingUtilities.invokeAndWait(HtmlButtonImageTest::paintButton);\n@@ -71,5 +75,7 @@\n-        testImageCentering(image.getRGB(centerX, centerY),\n-                image.getRGB(minX, minY),\n-                image.getRGB(minX, maxY),\n-                image.getRGB(maxX, minY),\n-                image.getRGB(maxX, maxY));\n+                testImageCentering(image.getRGB(centerX, centerY),\n+                        image.getRGB(minX, minY),\n+                        image.getRGB(minX, maxY),\n+                        image.getRGB(maxX, minY),\n+                        image.getRGB(maxX, maxY));\n+            }\n+        }\n@@ -113,1 +119,10 @@\n-        System.out.println(\"Passed\");\n+    }\n+\n+    private static void setLookAndFeel(UIManager.LookAndFeelInfo laf) {\n+        try {\n+            UIManager.setLookAndFeel(laf.getClassName());\n+            supportedLaf = true;\n+        } catch (UnsupportedLookAndFeelException | ClassNotFoundException |\n+                InstantiationException | IllegalAccessException e) {\n+            supportedLaf = false;\n+        }\n","filename":"test\/jdk\/javax\/swing\/JButton\/HtmlButtonImageTest\/HtmlButtonImageTest.java","additions":26,"deletions":11,"binary":false,"changes":37,"status":"modified"}]}