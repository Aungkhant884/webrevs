{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2013, Oracle and\/or its affiliates. All rights reserved.\n@@ -78,1 +78,1 @@\n-            Locale.ROOT, };\n+            new Locale(\"\", \"\", \"\"), };\n","filename":"src\/demo\/share\/jfc\/CodePointIM\/com\/sun\/inputmethods\/internal\/codepointim\/CodePointInputMethodDescriptor.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -77,1 +77,1 @@\n- *                             Locale.forLanguageTag(\"hi-IN\"), NumberFormat.Style.SHORT);\n+ *                             new Locale(\"hi\", \"IN\"), NumberFormat.Style.SHORT);\n","filename":"src\/java.base\/share\/classes\/java\/text\/CompactNumberFormat.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -243,1 +243,1 @@\n- * <h4>Factory Method<\/h4>\n+ * <h4>Factory Methods<\/h4>\n@@ -246,1 +246,4 @@\n- * object for a well-formed BCP 47 language tag.\n+ * object for a well-formed BCP 47 language tag. The method\n+ * {@link #of(String...)} obtains a {@code Locale} object from\n+ * given fields ({@code language}, {@code country}, {@code variant},\n+ * and\/or {@code script} defined above.\n@@ -252,7 +255,2 @@\n- * locales. For example, the following obtains a {@code Locale} object\n- * for the United States:\n- * <blockquote>\n- * <pre>\n- *     Locale.US\n- * <\/pre>\n- * <\/blockquote>\n+ * locales. For example, {@code Locale.US} is the {@code Locale} object\n+ * for the United States.\n@@ -805,0 +803,26 @@\n+    \/**\n+     * Returns a {@code Locale} obtained from the given\n+     * fields. Fields can take up to 4 arguments in the following order;\n+     * {@code Locale.of(}<a href=\"#def_language\">language<\/a>,\n+     * <a href=\"#def_region\">country<\/a>,\n+     * <a href=\"#def_variant\">variant<\/a>,\n+     * <a href=\"#def_script\">script<\/a>{@code )}.\n+     * Each field can be an empty String, but cannot be {@code null}.\n+     * If {@code fields} holds more than 4 arguments, the rest are ignored. If\n+     * no arguments are given, {@link #ROOT} is returned.\n+     *\n+     * @param fields language, country, variant, and\/or script, cannot be {@code null}.\n+     * @return the {@code Locale} instance requested\n+     * @throws    NullPointerException if any field argument is {@code null}.\n+     * @since 19\n+     *\/\n+    public static Locale of(String... fields) {\n+        return switch (fields.length) {\n+            case 0 -> ROOT;\n+            case 1 -> getInstance(fields[0], \"\", \"\", \"\", null);\n+            case 2 -> getInstance(fields[0], \"\", fields[1], \"\", null);\n+            case 3 -> getInstance(fields[0], \"\", fields[1], fields[2], null);\n+            default -> getInstance(fields[0], fields[3], fields[1], fields[2], null);\n+        };\n+    }\n+\n@@ -2511,1 +2535,1 @@\n-     * class.  A {@code Locale} object obtained by a {@code Builder} is\n+     * class.  A {@code Locale} object obtained from a {@code Builder} is\n@@ -2526,1 +2550,1 @@\n-     * with the {@code Builder}.\n+     * using a {@code Builder}.\n@@ -2659,1 +2683,1 @@\n-         * <p>The country value in the {@code Locale} obtained by the\n+         * <p>The country value in the {@code Locale} obtained from a\n","filename":"src\/java.base\/share\/classes\/java\/util\/Locale.java","additions":36,"deletions":12,"binary":false,"changes":48,"status":"modified"},{"patch":"@@ -2441,1 +2441,1 @@\n-     *   ResourceBundle.getBundle(\"MyResources\", Locale.forLanguageTag(\"fr-CH\"),\n+     *   ResourceBundle.getBundle(\"MyResources\", new Locale(\"fr\", \"CH\"),\n","filename":"src\/java.base\/share\/classes\/java\/util\/ResourceBundle.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -372,4 +372,1 @@\n-                lookupLocale = Locale.forLanguageTag(\n-                        (locale.getLanguage().isEmpty() ? \"und\" : locale.getLanguage()) +\n-                        (locale.getCountry().isEmpty() ? \"\" : \"-\" + locale.getCountry()) +\n-                        (locale.getVariant().isEmpty() ? \"\" : \"-x-lvariant-\" + locale.getVariant()));\n+                lookupLocale = Locale.of(locale.getLanguage(), locale.getCountry(), locale.getVariant());\n","filename":"src\/java.base\/share\/classes\/sun\/util\/locale\/provider\/LocaleServiceProviderPool.java","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -1184,4 +1184,1 @@\n-            startupLocale = Locale.forLanguageTag(\n-                    (language.isEmpty() ? \"und\" : language) +\n-                    (country.isEmpty() ? \"\" : \"-\" + country) +\n-                    (variant.isEmpty() ? \"\" : \"-x-lvariant-\" + variant));\n+            startupLocale = Locale.of(language, country, variant);\n","filename":"src\/java.desktop\/share\/classes\/sun\/awt\/SunToolkit.java","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -378,4 +378,1 @@\n-            Locale locale = Locale.forLanguageTag(\n-                    (language.isEmpty() ? \"und\" : language) +\n-                    (country.isEmpty() ? \"\" : \"-\" + country) +\n-                    (variant.isEmpty() ? \"\" : \"-x-lvariant-\" + variant));\n+            Locale locale = Locale.of(language, country, variant);\n@@ -556,2 +553,2 @@\n-        if (preferredLocale.equals(Locale.forLanguageTag(\"th-TH\"))) {\n-            preferredLocale = Locale.forLanguageTag(\"th\");\n+        if (preferredLocale.equals(Locale.of(\"th\", \"TH\"))) {\n+            preferredLocale = Locale.of(\"th\");\n@@ -629,4 +626,4 @@\n-            if (locator.isLocaleAvailable(Locale.forLanguageTag(\"th-TH\"))) {\n-                advertised = Locale.forLanguageTag(\"th-TH\");\n-            } else if (locator.isLocaleAvailable(Locale.forLanguageTag(\"th\"))) {\n-                advertised = Locale.forLanguageTag(\"th\");\n+            if (locator.isLocaleAvailable(Locale.of(\"th\", \"TH\"))) {\n+                advertised = Locale.of(\"th\", \"TH\");\n+            } else if (locator.isLocaleAvailable(Locale.of(\"th\"))) {\n+                advertised = Locale.of(\"th\");\n","filename":"src\/java.desktop\/share\/classes\/sun\/awt\/im\/ExecutableInputMethodManager.java","additions":7,"deletions":10,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -3469,4 +3469,1 @@\n-                    return Locale.forLanguageTag(\n-                            (language.isEmpty() ? \"und\" : language) +\n-                            (country.isEmpty() ? \"\" : \"-\" + country) +\n-                            (variant.isEmpty() ? \"\" : \"-x-lvariant-\" + variant));\n+                    return Locale.of(language, country, variant);\n","filename":"src\/java.desktop\/share\/classes\/sun\/font\/SunFontManager.java","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -163,3 +163,1 @@\n-                Locale.forLanguageTag(\n-                        (languageCode.isEmpty() ? \"und\" : languageCode) +\n-                        (countryCode.isEmpty() ? \"\" : \"-\" + countryCode))\n+                Locale.of(languageCode, countryCode)\n","filename":"src\/java.xml.crypto\/share\/classes\/com\/sun\/org\/apache\/xml\/internal\/security\/utils\/I18n.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -41,3 +41,1 @@\n-        return Collator.getInstance(Locale.forLanguageTag(\n-                (lang.isEmpty() ? \"und\" : lang) +\n-                (country.isEmpty() ? \"\" : \"-\" + country)));\n+        return Collator.getInstance(Locale.of(lang, country));\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xalan\/internal\/xsltc\/dom\/CollatorFactoryBase.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2428,4 +2428,1 @@\n-                    locale = Locale.forLanguageTag(\n-                        (lang.isEmpty() ? \"und\" : lang) +\n-                        (country.isEmpty() ? \"\" : \"-\" + country) +\n-                        (variant.isEmpty() ? \"\" : \"-x-lvariant-\" + variant));\n+                    locale = Locale.of(lang, country, variant);\n@@ -2433,3 +2430,1 @@\n-                    locale = Locale.forLanguageTag(\n-                        (lang.isEmpty() ? \"und\" : lang) +\n-                        (country.isEmpty() ? \"\" : \"-\" + country));\n+                    locale = Locale.of(lang, country);\n@@ -2438,1 +2433,1 @@\n-                locale = Locale.forLanguageTag(lang.isEmpty() ? \"und\" : lang);\n+                locale = Locale.of(lang);\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xerces\/internal\/jaxp\/datatype\/XMLGregorianCalendarImpl.java","additions":3,"deletions":8,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -81,5 +81,2 @@\n-        return Locale.forLanguageTag(\n-             (language.isEmpty() ? \"und\" : language) +\n-             (country.isEmpty() ? \"\" : \"-\" + country) +\n-             (variant.isEmpty() ? \"\" : \"-x-lvariant-\" + variant));\n- }\n+        return Locale.of(language, country, variant);\n+    }\n@@ -89,1 +86,1 @@\n-}\n+ }\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xml\/internal\/utils\/LocaleUtility.java","additions":3,"deletions":6,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -144,3 +144,3 @@\n-    private static final Locale jaJPJP = Locale.forLanguageTag(\"ja-JP-x-lvariant-JP\");\n-    private static final Locale noNONY = Locale.forLanguageTag(\"no-NO-x-lvariant-NY\");\n-    private static final Locale thTHTH = Locale.forLanguageTag(\"th-TH-x-lvariant-TH\");\n+    private static final Locale jaJPJP = Locale.of(\"ja\", \"JP\", \"JP\");\n+    private static final Locale noNONY = Locale.of(\"no\", \"NO\", \"NY\");\n+    private static final Locale thTHTH = Locale.of(\"th\", \"TH\", \"TH\");\n","filename":"src\/jdk.jlink\/share\/classes\/jdk\/tools\/jlink\/internal\/plugins\/IncludeLocalesPlugin.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -97,1 +97,1 @@\n-        orient = ComponentOrientation.getOrientation(Locale.forLanguageTag(\"iw\"));\n+        orient = ComponentOrientation.getOrientation(new Locale(\"iw\", \"\"));\n@@ -100,1 +100,1 @@\n-        orient = ComponentOrientation.getOrientation(Locale.forLanguageTag(\"ar\"));\n+        orient = ComponentOrientation.getOrientation(new Locale(\"ar\", \"\"));\n@@ -103,1 +103,1 @@\n-        orient = ComponentOrientation.getOrientation(Locale.forLanguageTag(\"he\"));\n+        orient = ComponentOrientation.getOrientation(new Locale(\"he\", \"\"));\n@@ -106,1 +106,1 @@\n-        orient = ComponentOrientation.getOrientation(Locale.forLanguageTag(\"yi\"));\n+        orient = ComponentOrientation.getOrientation(new Locale(\"yi\", \"\"));\n@@ -122,2 +122,2 @@\n-                                                        Locale.forLanguageTag(\"et\"));\n-        if (rb.getLocale().getLanguage().equals(Locale.forLanguageTag(\"iw\").getLanguage())) {\n+                                                        new Locale(\"et\", \"\"));\n+        if (rb.getLocale().getLanguage().equals(new Locale(\"iw\").getLanguage())) {\n@@ -133,1 +133,1 @@\n-        rb = ResourceBundle.getBundle(\"TestBundle\",Locale.forLanguageTag(\"es\"));\n+        rb = ResourceBundle.getBundle(\"TestBundle\",new Locale(\"es\", \"\"));\n@@ -136,1 +136,1 @@\n-        rb = ResourceBundle.getBundle(\"TestBundle\", Locale.forLanguageTag(\"iw-IL\"));\n+        rb = ResourceBundle.getBundle(\"TestBundle\", new Locale(\"iw\", \"IL\"));\n@@ -140,1 +140,1 @@\n-        rb = ResourceBundle.getBundle(\"TestBundle\", Locale.forLanguageTag(\"he-IL\"));\n+        rb = ResourceBundle.getBundle(\"TestBundle\", new Locale(\"he\", \"IL\"));\n@@ -145,1 +145,1 @@\n-        rb = ResourceBundle.getBundle(\"TestBundle1\", Locale.forLanguageTag(\"ar\"));\n+        rb = ResourceBundle.getBundle(\"TestBundle1\", new Locale(\"ar\", \"\"));\n","filename":"test\/jdk\/java\/awt\/ComponentOrientation\/BasicTest.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2016, Oracle and\/or its affiliates. All rights reserved.\n@@ -101,1 +101,1 @@\n-        rb = ResourceBundle.getBundle(\"TestBundle\", Locale.forLanguageTag(\"iw\"));\n+        rb = ResourceBundle.getBundle(\"TestBundle\", new Locale(\"iw\", \"\"));\n@@ -106,1 +106,1 @@\n-        rb = ResourceBundle.getBundle(\"TestBundle\", Locale.forLanguageTag(\"es\"));\n+        rb = ResourceBundle.getBundle(\"TestBundle\", new Locale(\"es\", \"\"));\n","filename":"test\/jdk\/java\/awt\/ComponentOrientation\/WindowTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2015, Oracle and\/or its affiliates. All rights reserved.\n@@ -55,6 +55,6 @@\n-        test(Locale.forLanguageTag(\"de-AT\"), 0x0c07);\n-        test(Locale.forLanguageTag(\"ar\"), 0x0401);\n-        test(Locale.forLanguageTag(\"ar-SA\"), 0x0401);\n-        test(Locale.forLanguageTag(\"ar-EG\"), 0x0c01);\n-        test(Locale.forLanguageTag(\"??\"), 0x0409);\n-        test(Locale.forLanguageTag(\"??\" + \"-\" + \"??\"), 0x0409);\n+        test(new Locale(\"de\", \"AT\"), 0x0c07);\n+        test(new Locale(\"ar\"), 0x0401);\n+        test(new Locale(\"ar\", \"SA\"), 0x0401);\n+        test(new Locale(\"ar\", \"EG\"), 0x0c01);\n+        test(new Locale(\"??\"), 0x0409);\n+        test(new Locale(\"??\", \"??\"), 0x0409);\n","filename":"test\/jdk\/java\/awt\/font\/FontNames\/GetLCIDFromLocale.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -0,0 +1,1 @@\n+\n@@ -2,1 +3,1 @@\n- * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +45,1 @@\n-        Locale de_atLocale = Locale.forLanguageTag(\"de-AT\");\n+        Locale de_atLocale = new Locale(\"de\", \"AT\");\n@@ -55,1 +56,1 @@\n-        Locale deGELocale = Locale.forLanguageTag(\"de-GE\");\n+        Locale deGELocale = new Locale(\"de\", \"GE\");\n","filename":"test\/jdk\/java\/awt\/font\/FontNames\/TrueTypeFontLocaleNameTest.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2011, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,1 +38,1 @@\n-    private static final Locale TURKISH = Locale.forLanguageTag(\"tr\");\n+    private static final Locale TURKISH = new Locale(\"tr\");\n","filename":"test\/jdk\/java\/beans\/XMLDecoder\/Test6341798.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2012, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,1 +42,1 @@\n-            Locale.setDefault(Locale.forLanguageTag(\"lt\"));\n+            Locale.setDefault(new Locale(\"lt\"));\n","filename":"test\/jdk\/java\/io\/pathNames\/win32\/bug6344646.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,1 +35,1 @@\n-    final static Locale turkish = Locale.forLanguageTag(\"tr\");\n+    final static Locale turkish = new Locale(\"tr\");\n","filename":"test\/jdk\/java\/lang\/Character\/DumpCharProperties.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,1 +48,1 @@\n-        locales.add(Locale.forLanguageTag(\"az\"));\n+        locales.add(new Locale(\"az\", \"\"));\n","filename":"test\/jdk\/java\/lang\/Character\/UnicodeCasingTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,2 +34,2 @@\n-    private static final Locale ENGLISH = Locale.ENGLISH;\n-    private static final Locale TURKISH = Locale.forLanguageTag(\"tr\");\n+    private static final Locale ENGLISH = new Locale(\"en\");\n+    private static final Locale TURKISH = new Locale(\"tr\");\n","filename":"test\/jdk\/java\/lang\/String\/NonCharacterMapping.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,1 +50,1 @@\n-        locales.add(Locale.forLanguageTag(\"az\"));\n+        locales.add(new Locale(\"az\", \"\"));\n@@ -305,1 +305,1 @@\n-            orig.toLowerCase() : orig.toLowerCase(Locale.forLanguageTag(lang));\n+            orig.toLowerCase() : orig.toLowerCase(new Locale(lang, \"\"));\n@@ -321,1 +321,1 @@\n-            orig.toUpperCase() : orig.toUpperCase(Locale.forLanguageTag(lang));\n+            orig.toUpperCase() : orig.toUpperCase(new Locale(lang, \"\"));\n","filename":"test\/jdk\/java\/lang\/String\/SpecialCasingTest.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2014, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,3 +38,3 @@\n-        Locale turkish = Locale.forLanguageTag(\"tr-TR\");\n-        Locale lt = Locale.forLanguageTag(\"lt\"); \/\/ Lithanian\n-        Locale az = Locale.forLanguageTag(\"az\"); \/\/ Azeri\n+        Locale turkish = new Locale(\"tr\", \"TR\");\n+        Locale lt = new Locale(\"lt\"); \/\/ Lithanian\n+        Locale az = new Locale(\"az\"); \/\/ Azeri\n","filename":"test\/jdk\/java\/lang\/String\/ToLowerCase.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2003, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,3 +39,3 @@\n-        Locale turkish = Locale.forLanguageTag(\"tr-TR\");\n-        Locale lt = Locale.forLanguageTag(\"lt\"); \/\/ Lithanian\n-        Locale az = Locale.forLanguageTag(\"az\"); \/\/ Azeri\n+        Locale turkish = new Locale(\"tr\", \"TR\");\n+        Locale lt = new Locale(\"lt\"); \/\/ Lithanian\n+        Locale az = new Locale(\"az\"); \/\/ Azeri\n","filename":"test\/jdk\/java\/lang\/String\/ToUpperCase.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,1 +51,1 @@\n-        locales.add(Locale.forLanguageTag(\"az\"));\n+        locales.add(new Locale(\"az\", \"\"));\n","filename":"test\/jdk\/java\/lang\/String\/UnicodeCasingTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2016, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,1 +45,1 @@\n-            Locale.setDefault(Locale.forLanguageTag(\"tr-TR\"));\n+            Locale.setDefault(new Locale(\"tr\", \"TR\"));\n","filename":"test\/jdk\/java\/security\/Provider\/Turkish.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -1394,1 +1394,1 @@\n-        iter = BreakIterator.getLineInstance(Locale.forLanguageTag(\"th\"));\n+        iter = BreakIterator.getLineInstance(new Locale(\"th\", \"\"));\n","filename":"test\/jdk\/java\/text\/BreakIterator\/BreakIteratorTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2016, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,1 +42,1 @@\n-        final Locale THAI_LOCALE = Locale.forLanguageTag(\"th-TH\");\n+        final Locale THAI_LOCALE = new Locale(\"th\", \"TH\");\n","filename":"test\/jdk\/java\/text\/BreakIterator\/NewVSOld_th_TH.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2016, Oracle and\/or its affiliates. All rights reserved.\n@@ -118,1 +118,1 @@\n-        Locale abcd = Locale.forLanguageTag(\"ab-CD\");\n+        Locale abcd = new Locale(\"ab\", \"CD\", \"\");\n@@ -148,1 +148,1 @@\n-        Locale dk = Locale.forLanguageTag(\"da-DK\");\n+        Locale dk = new Locale(\"da\", \"DK\", \"\");\n","filename":"test\/jdk\/java\/text\/Collator\/APITest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2009, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2009, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,2 +35,2 @@\n-    private static Collator colLao = Collator.getInstance(Locale.forLanguageTag(\"lo\"));\n-    private static Collator colThai = Collator.getInstance(Locale.forLanguageTag(\"th\"));\n+    private static Collator colLao = Collator.getInstance(new Locale(\"lo\"));\n+    private static Collator colThai = Collator.getInstance(new Locale(\"th\"));\n","filename":"test\/jdk\/java\/text\/Collator\/Bug5047314.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2016, Oracle and\/or its affiliates. All rights reserved.\n@@ -215,1 +215,1 @@\n-    private final Collator myCollation = Collator.getInstance(Locale.forLanguageTag(\"da\"));\n+    private final Collator myCollation = Collator.getInstance(new Locale(\"da\", \"\", \"\"));\n","filename":"test\/jdk\/java\/text\/Collator\/DanishTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2016, Oracle and\/or its affiliates. All rights reserved.\n@@ -98,1 +98,1 @@\n-    private final Collator myCollation = Collator.getInstance(Locale.forLanguageTag(\"fi-FI\"));\n+    private final Collator myCollation = Collator.getInstance(new Locale(\"fi\", \"FI\", \"\"));\n","filename":"test\/jdk\/java\/text\/Collator\/FinnishTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2016, Oracle and\/or its affiliates. All rights reserved.\n@@ -349,1 +349,1 @@\n-                                                        Locale.forLanguageTag(\"da-DK\"));\n+                                                        new Locale(\"da\", \"DK\"));\n@@ -378,1 +378,1 @@\n-        Collator c = Collator.getInstance(Locale.forLanguageTag(\"el\"));\n+        Collator c = Collator.getInstance(new Locale(\"el\", \"\"));\n@@ -391,1 +391,1 @@\n-        Collator c = Collator.getInstance(Locale.forLanguageTag(\"el-GR\"));\n+        Collator c = Collator.getInstance(new Locale(\"el\", \"GR\"));\n@@ -547,1 +547,1 @@\n-        Locale l = Locale.forLanguageTag(\"es-es\");\n+        Locale l = new Locale(\"es\", \"es\");\n","filename":"test\/jdk\/java\/text\/Collator\/Regression.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2016, Oracle and\/or its affiliates. All rights reserved.\n@@ -105,1 +105,1 @@\n-    private final Collator myCollation = Collator.getInstance(Locale.forLanguageTag(\"es-ES\"));\n+    private final Collator myCollation = Collator.getInstance(new Locale(\"es\", \"ES\", \"\"));\n","filename":"test\/jdk\/java\/text\/Collator\/SpanishTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2016, Oracle and\/or its affiliates. All rights reserved.\n@@ -156,1 +156,1 @@\n-    private final Collator myCollation = Collator.getInstance(Locale.forLanguageTag(\"th\"));\n+    private final Collator myCollation = Collator.getInstance(new Locale(\"th\"));\n","filename":"test\/jdk\/java\/text\/Collator\/ThaiTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2016, Oracle and\/or its affiliates. All rights reserved.\n@@ -118,1 +118,1 @@\n-    private final Collator myCollation = Collator.getInstance(Locale.forLanguageTag(\"tr-TR\"));\n+    private final Collator myCollation = Collator.getInstance(new Locale(\"tr\", \"TR\", \"\"));\n","filename":"test\/jdk\/java\/text\/Collator\/TurkishTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2016, Oracle and\/or its affiliates. All rights reserved.\n@@ -364,1 +364,1 @@\n-    private final Collator myCollation = Collator.getInstance(Locale.forLanguageTag(\"vi-VN\"));\n+    private final Collator myCollation = Collator.getInstance(new Locale(\"vi\", \"VN\"));\n","filename":"test\/jdk\/java\/text\/Collator\/VietnameseTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,1 +46,1 @@\n-            .getCompactNumberInstance(Locale.forLanguageTag(\"dz\"), NumberFormat.Style.LONG);\n+            .getCompactNumberInstance(new Locale(\"dz\"), NumberFormat.Style.LONG);\n@@ -52,1 +52,1 @@\n-            .getCompactNumberInstance(Locale.ENGLISH, NumberFormat.Style.LONG);\n+            .getCompactNumberInstance(new Locale(\"en\"), NumberFormat.Style.LONG);\n@@ -55,1 +55,1 @@\n-            .getCompactNumberInstance(Locale.forLanguageTag(\"hi-IN\"), NumberFormat.Style.LONG);\n+            .getCompactNumberInstance(new Locale(\"hi\", \"IN\"), NumberFormat.Style.LONG);\n@@ -61,1 +61,1 @@\n-            .getCompactNumberInstance(Locale.ITALIAN, NumberFormat.Style.SHORT);\n+            .getCompactNumberInstance(new Locale(\"it\"), NumberFormat.Style.SHORT);\n@@ -64,1 +64,1 @@\n-            .getCompactNumberInstance(Locale.forLanguageTag(\"ca\"), NumberFormat.Style.LONG);\n+            .getCompactNumberInstance(new Locale(\"ca\"), NumberFormat.Style.LONG);\n@@ -67,1 +67,1 @@\n-            .getCompactNumberInstance(Locale.forLanguageTag(\"as\"), NumberFormat.Style.LONG);\n+            .getCompactNumberInstance(new Locale(\"as\"), NumberFormat.Style.LONG);\n@@ -70,1 +70,1 @@\n-            .getCompactNumberInstance(Locale.forLanguageTag(\"brx\"), NumberFormat.Style.SHORT);\n+            .getCompactNumberInstance(new Locale(\"brx\"), NumberFormat.Style.SHORT);\n@@ -73,1 +73,1 @@\n-            .getCompactNumberInstance(Locale.forLanguageTag(\"sw\"), NumberFormat.Style.LONG);\n+            .getCompactNumberInstance(new Locale(\"sw\"), NumberFormat.Style.LONG);\n@@ -76,1 +76,1 @@\n-            .getCompactNumberInstance(Locale.forLanguageTag(\"se\"), NumberFormat.Style.SHORT);\n+            .getCompactNumberInstance(new Locale(\"se\"), NumberFormat.Style.SHORT);\n@@ -82,1 +82,1 @@\n-            .getCompactNumberInstance(Locale.forLanguageTag(\"sl\"), NumberFormat.Style.LONG);\n+            .getCompactNumberInstance(new Locale(\"sl\"), NumberFormat.Style.LONG);\n","filename":"test\/jdk\/java\/text\/Format\/CompactNumberFormat\/TestCompactNumber.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -168,1 +168,1 @@\n-                .getCompactNumberInstance(Locale.forLanguageTag(\"hi-IN\"), NumberFormat.Style.SHORT);\n+                .getCompactNumberInstance(new Locale(\"hi\", \"IN\"), NumberFormat.Style.SHORT);\n@@ -171,1 +171,1 @@\n-                .getCompactNumberInstance(Locale.forLanguageTag(\"hi-IN\"), NumberFormat.Style.SHORT);\n+                .getCompactNumberInstance(new Locale(\"hi\", \"IN\"), NumberFormat.Style.SHORT);\n","filename":"test\/jdk\/java\/text\/Format\/CompactNumberFormat\/TestEquality.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,1 +46,1 @@\n-            .getCompactNumberInstance(Locale.forLanguageTag(\"dz\"),\n+            .getCompactNumberInstance(new Locale(\"dz\"),\n@@ -54,1 +54,1 @@\n-            .getCompactNumberInstance(Locale.ENGLISH,\n+            .getCompactNumberInstance(new Locale(\"en\"),\n","filename":"test\/jdk\/java\/text\/Format\/CompactNumberFormat\/TestFormatToCharacterIterator.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,1 +48,1 @@\n-            .getCompactNumberInstance(Locale.ENGLISH, NumberFormat.Style.LONG);\n+            .getCompactNumberInstance(new Locale(\"en\"), NumberFormat.Style.LONG);\n@@ -51,1 +51,1 @@\n-            .getCompactNumberInstance(Locale.ENGLISH, NumberFormat.Style.LONG);\n+            .getCompactNumberInstance(new Locale(\"en\"), NumberFormat.Style.LONG);\n@@ -54,1 +54,1 @@\n-            .getCompactNumberInstance(Locale.ENGLISH, NumberFormat.Style.LONG);\n+            .getCompactNumberInstance(new Locale(\"en\"), NumberFormat.Style.LONG);\n@@ -57,1 +57,1 @@\n-            .getCompactNumberInstance(Locale.ENGLISH, NumberFormat.Style.LONG);\n+            .getCompactNumberInstance(new Locale(\"en\"), NumberFormat.Style.LONG);\n","filename":"test\/jdk\/java\/text\/Format\/CompactNumberFormat\/TestMutatingInstance.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,1 @@\n-            .getCompactNumberInstance(Locale.forLanguageTag(\"dz\"), NumberFormat.Style.LONG);\n+            .getCompactNumberInstance(new Locale(\"dz\"), NumberFormat.Style.LONG);\n@@ -50,1 +50,1 @@\n-            .getCompactNumberInstance(Locale.ENGLISH, NumberFormat.Style.LONG);\n+            .getCompactNumberInstance(new Locale(\"en\"), NumberFormat.Style.LONG);\n@@ -53,1 +53,1 @@\n-            .getCompactNumberInstance(Locale.forLanguageTag(\"hi-IN\"), NumberFormat.Style.LONG);\n+            .getCompactNumberInstance(new Locale(\"hi\", \"IN\"), NumberFormat.Style.LONG);\n@@ -59,1 +59,1 @@\n-            .getCompactNumberInstance(Locale.ITALIAN, NumberFormat.Style.SHORT);\n+            .getCompactNumberInstance(new Locale(\"it\"), NumberFormat.Style.SHORT);\n@@ -62,1 +62,1 @@\n-            .getCompactNumberInstance(Locale.forLanguageTag(\"sw\"), NumberFormat.Style.LONG);\n+            .getCompactNumberInstance(new Locale(\"sw\"), NumberFormat.Style.LONG);\n@@ -65,1 +65,1 @@\n-            .getCompactNumberInstance(Locale.forLanguageTag(\"se\"), NumberFormat.Style.SHORT);\n+            .getCompactNumberInstance(new Locale(\"se\"), NumberFormat.Style.SHORT);\n","filename":"test\/jdk\/java\/text\/Format\/CompactNumberFormat\/TestParseBigDecimal.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,1 @@\n-            .getCompactNumberInstance(Locale.forLanguageTag(\"dz\"), NumberFormat.Style.SHORT);\n+            .getCompactNumberInstance(new Locale(\"dz\"), NumberFormat.Style.SHORT);\n","filename":"test\/jdk\/java\/text\/Format\/CompactNumberFormat\/TestWithCompatProvider.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,1 +48,1 @@\n-            Locale.forLanguageTag(\"hi\"), NumberFormat.Style.SHORT);\n+            new Locale(\"hi\"), NumberFormat.Style.SHORT);\n","filename":"test\/jdk\/java\/text\/Format\/CompactNumberFormat\/serialization\/TestSerialization.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2016, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,1 @@\n-        Locale[] locs = {Locale.US, Locale.JAPAN, Locale.UK, Locale.forLanguageTag(\"ar\")};\n+        Locale[] locs = {Locale.US, Locale.JAPAN, Locale.UK, new Locale(\"ar\")};\n","filename":"test\/jdk\/java\/text\/Format\/DateFormat\/Bug4322313.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2016, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n-    private static Locale localeEG = Locale.forLanguageTag(\"ar-EG\");\n+    private static Locale localeEG = new Locale(\"ar\", \"EG\");\n","filename":"test\/jdk\/java\/text\/Format\/DateFormat\/Bug4823811.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2016, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,2 +38,2 @@\n-    private static Locale th = Locale.forLanguageTag(\"th\");\n-    private static Locale th_TH = Locale.forLanguageTag(\"th-TH\");\n+    private static Locale th = new Locale(\"th\", \"\");\n+    private static Locale th_TH = new Locale(\"th\", \"TH\");\n","filename":"test\/jdk\/java\/text\/Format\/DateFormat\/Bug6683975.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2016, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,1 @@\n-    private static final Locale RUSSIAN = Locale.forLanguageTag(\"ru\");\n+    private static final Locale RUSSIAN = new Locale(\"ru\");\n","filename":"test\/jdk\/java\/text\/Format\/DateFormat\/Bug8139572.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2016, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-    static Locale CZECH = Locale.forLanguageTag(\"cs\");\n+    static Locale CZECH = new Locale(\"cs\");\n","filename":"test\/jdk\/java\/text\/Format\/DateFormat\/ContextMonthNamesTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -268,1 +268,1 @@\n-            Locale curLocale = Locale.forLanguageTag(\"de-DE\");\n+            Locale curLocale = new Locale(\"de\",\"DE\");\n","filename":"test\/jdk\/java\/text\/Format\/DateFormat\/DateFormatRegression.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2016, Oracle and\/or its affiliates. All rights reserved.\n@@ -81,1 +81,1 @@\n-     * Parse a name like \"fr_FR\" into Locale.forLanguageTag(\"fr-FR\");\n+     * Parse a name like \"fr_FR\" into new Locale(\"fr\", \"FR\", \"\");\n@@ -95,4 +95,1 @@\n-        return Locale.forLanguageTag(\n-                    (name.isEmpty() ? \"und\" : name) +\n-                    (country.isEmpty() ? \"\" : \"-\" + country) +\n-                    (variant.isEmpty() ? \"\" : \"-x-lvariant-\" + variant));\n+        return new Locale(name, country, variant);\n","filename":"test\/jdk\/java\/text\/Format\/DateFormat\/DateFormatRoundTripTest.java","additions":3,"deletions":6,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -416,1 +416,1 @@\n-        DateFormat fmt = DateFormat.getDateInstance(DateFormat.FULL, Locale.forLanguageTag(\"cs\"));\n+        DateFormat fmt = DateFormat.getDateInstance(DateFormat.FULL, new Locale(\"cs\", \"\", \"\"));\n@@ -991,1 +991,1 @@\n-        Locale loc = Locale.forLanguageTag(\"th-TH\");\n+        Locale loc = new Locale(\"th\", \"TH\");\n@@ -1211,1 +1211,1 @@\n-        Locale locale = Locale.forLanguageTag(\"ru\");\n+        Locale locale = new Locale(\"ru\");\n","filename":"test\/jdk\/java\/text\/Format\/DateFormat\/DateFormatTest.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2016, Oracle and\/or its affiliates. All rights reserved.\n@@ -63,1 +63,1 @@\n-    private static final Locale localeEnSG = Locale.forLanguageTag(\"en-SG\");\n+    private static final Locale localeEnSG = new Locale(\"en\", \"SG\");\n","filename":"test\/jdk\/java\/text\/Format\/DateFormat\/LocaleDateFormats.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -131,1 +131,1 @@\n-        Locale calendarLocale = Locale.forLanguageTag(\"ja-JP-x-lvariant-JP\");\n+        Locale calendarLocale = new Locale(\"ja\", \"JP\", \"JP\");\n@@ -139,1 +139,1 @@\n-        calendarLocale = Locale.forLanguageTag(\"th-TH\");\n+        calendarLocale = new Locale(\"th\", \"TH\");\n","filename":"test\/jdk\/java\/text\/Format\/DateFormat\/NonGregorianFormatTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-    private static final Locale BURMESE = Locale.forLanguageTag(\"my\");\n+    private static final Locale BURMESE = new Locale(\"my\");\n","filename":"test\/jdk\/java\/text\/Format\/DateFormat\/TestDayPeriodWithSDF.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -138,1 +138,1 @@\n-                                             Locale.forLanguageTag(\"ja-JP-x-lvariant-JP\"));\n+                                             new Locale(\"ja\", \"JP\", \"JP\"));\n","filename":"test\/jdk\/java\/text\/Format\/DateFormat\/WeekDateTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2016, Oracle and\/or its affiliates. All rights reserved.\n@@ -59,1 +59,1 @@\n-            Locale.setDefault(Locale.US);\n+            Locale.setDefault(new Locale(\"en\", \"US\"));\n","filename":"test\/jdk\/java\/text\/Format\/DateFormat\/bug4358730.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, Oracle and\/or its affiliates. All rights reserved.\n@@ -61,1 +61,1 @@\n-    static final Locale TestLocale = Locale.US;\n+    static final Locale TestLocale = new Locale(\"en\", \"US\");\n@@ -66,1 +66,1 @@\n-    static final Locale FullLocalizationTestLocale = Locale.forLanguageTag(\"hi-IN\");\n+    static final Locale FullLocalizationTestLocale = new Locale(\"hi\", \"IN\");\n","filename":"test\/jdk\/java\/text\/Format\/DecimalFormat\/GoldenDoubleValues.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, Oracle and\/or its affiliates. All rights reserved.\n@@ -707,1 +707,1 @@\n-        Locale bizarreLocale = Locale.FRANCE;\n+        Locale bizarreLocale = new Locale(\"fr\", \"FR\");\n","filename":"test\/jdk\/java\/text\/Format\/DecimalFormat\/RoundingAndPropertyTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-        Locale deCH = Locale.forLanguageTag(\"de-CH\");\n+        Locale deCH = new Locale(\"de\", \"CH\");\n","filename":"test\/jdk\/java\/text\/Format\/NumberFormat\/Bug8132125.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -61,1 +61,1 @@\n-            Locale.forLanguageTag(\"it-IT-x-lvariant-EURO\"),\n+            new Locale(\"it\", \"IT\", \"EURO\"),\n","filename":"test\/jdk\/java\/text\/Format\/NumberFormat\/CurrencyFormat.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,3 +37,3 @@\n-        Locale.forLanguageTag(\"ar\"),\n-        Locale.forLanguageTag(\"ar-EG\"),\n-        Locale.forLanguageTag(\"ar-DZ\"),\n+        new Locale(\"ar\"),\n+        new Locale(\"ar\", \"EG\"),\n+        new Locale(\"ar\", \"DZ\"),\n@@ -47,1 +47,1 @@\n-        Locale.forLanguageTag(\"th-TH-x-lvariant-TH\"),\n+        new Locale(\"th\", \"TH\", \"TH\"),\n","filename":"test\/jdk\/java\/text\/Format\/NumberFormat\/MultipleNumberScriptTest.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -490,1 +490,1 @@\n-        Locale de = Locale.forLanguageTag(\"pt-PT\");\n+        Locale de = new Locale(\"pt\", \"PT\");\n","filename":"test\/jdk\/java\/text\/Format\/NumberFormat\/NumberRegression.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,1 +40,1 @@\n-                NumberFormat.getCurrencyInstance(Locale.forLanguageTag(\"es-PE\"));\n+                NumberFormat.getCurrencyInstance(new Locale(\"es\", \"PE\"));\n","filename":"test\/jdk\/java\/text\/Format\/NumberFormat\/TestPeruCurrencyFormat.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2016, Oracle and\/or its affiliates. All rights reserved.\n@@ -58,1 +58,1 @@\n-        mf1 = new MessageFormat(\"{0}\", Locale.forLanguageTag(\"ja-JP\"));\n+        mf1 = new MessageFormat(\"{0}\", new Locale(\"ja\", \"JP\"));\n@@ -64,1 +64,1 @@\n-        mf1 = new MessageFormat(\"{0}\", Locale.forLanguageTag(\"ja-JP-x-lvariant-FOO\"));\n+        mf1 = new MessageFormat(\"{0}\", new Locale(\"ja\", \"JP\", \"FOO\"));\n@@ -67,1 +67,1 @@\n-        mf2 = new MessageFormat(\"{1}\", Locale.forLanguageTag(\"ja-JP-x-lvariant-FOO\"));\n+        mf2 = new MessageFormat(\"{1}\", new Locale(\"ja\", \"JP\", \"FOO\"));\n@@ -70,1 +70,1 @@\n-        mf1 = new MessageFormat(\"{1}\", Locale.forLanguageTag(\"ja-JP-x-lvariant-FOO\"));\n+        mf1 = new MessageFormat(\"{1}\", new Locale(\"ja\", \"JP\", \"FOO\"));\n@@ -73,1 +73,1 @@\n-        mf1 = new MessageFormat(\"{1, date}\", Locale.forLanguageTag(\"ja-JP-x-lvariant-FOO\"));\n+        mf1 = new MessageFormat(\"{1, date}\", new Locale(\"ja\", \"JP\", \"FOO\"));\n@@ -76,1 +76,1 @@\n-        mf2 = new MessageFormat(\"{1, date}\", Locale.forLanguageTag(\"ja-JP-x-lvariant-FOO\"));\n+        mf2 = new MessageFormat(\"{1, date}\", new Locale(\"ja\", \"JP\", \"FOO\"));\n","filename":"test\/jdk\/java\/text\/Format\/common\/Bug6215962.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- o Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ o Copyright (c) 2012, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -154,1 +154,1 @@\n-        Chronology test = Chronology.ofLocale(Locale.JAPAN);\n+        Chronology test = Chronology.ofLocale(new Locale(\"ja\", \"JP\"));\n@@ -161,1 +161,1 @@\n-        Chronology test = Chronology.ofLocale(Locale.forLanguageTag(\"ja-JP-x-lvariant-JP\"));\n+        Chronology test = Chronology.ofLocale(new Locale(\"ja\", \"JP\", \"JP\"));\n@@ -168,1 +168,2 @@\n-        Assert.assertEquals(Chronology.ofLocale(Locale.JAPAN).getId(), \"ISO\");\n+        Assert.assertEquals(Chronology.ofLocale(new Locale(\"ja\", \"JP\")).getId(), \"ISO\");\n+        Assert.assertEquals(Chronology.ofLocale(Locale.forLanguageTag(\"ja-JP\")).getId(), \"ISO\");\n","filename":"test\/jdk\/java\/time\/tck\/java\/time\/chrono\/TCKJapaneseChronology.java","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2013, Oracle and\/or its affiliates. All rights reserved.\n@@ -143,1 +143,1 @@\n-        Chronology test = Chronology.ofLocale(Locale.forLanguageTag(\"th-TH\"));\n+        Chronology test = Chronology.ofLocale(new Locale(\"th\", \"TH\"));\n@@ -150,1 +150,1 @@\n-        Chronology test = Chronology.ofLocale(Locale.forLanguageTag(\"th-TH-x-lvariant-TH\"));\n+        Chronology test = Chronology.ofLocale(new Locale(\"th\", \"TH\", \"TH\"));\n@@ -157,1 +157,1 @@\n-        Assert.assertEquals(Chronology.ofLocale(Locale.forLanguageTag(\"th-TH\")).getId(), \"ISO\");\n+        Assert.assertEquals(Chronology.ofLocale(new Locale(\"th\", \"TH\")).getId(), \"ISO\");\n","filename":"test\/jdk\/java\/time\/tck\/java\/time\/chrono\/TCKThaiBuddhistChronology.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2016, Oracle and\/or its affiliates. All rights reserved.\n@@ -82,0 +82,2 @@\n+    Locale enUS = new Locale(\"en\", \"US\");\n+\n@@ -86,7 +88,7 @@\n-            {DAY_OF_WEEK, 1, TextStyle.SHORT, Locale.US, \"Mon\"},\n-            {DAY_OF_WEEK, 2, TextStyle.SHORT, Locale.US, \"Tue\"},\n-            {DAY_OF_WEEK, 3, TextStyle.SHORT, Locale.US, \"Wed\"},\n-            {DAY_OF_WEEK, 4, TextStyle.SHORT, Locale.US, \"Thu\"},\n-            {DAY_OF_WEEK, 5, TextStyle.SHORT, Locale.US, \"Fri\"},\n-            {DAY_OF_WEEK, 6, TextStyle.SHORT, Locale.US, \"Sat\"},\n-            {DAY_OF_WEEK, 7, TextStyle.SHORT, Locale.US, \"Sun\"},\n+            {DAY_OF_WEEK, 1, TextStyle.SHORT, enUS, \"Mon\"},\n+            {DAY_OF_WEEK, 2, TextStyle.SHORT, enUS, \"Tue\"},\n+            {DAY_OF_WEEK, 3, TextStyle.SHORT, enUS, \"Wed\"},\n+            {DAY_OF_WEEK, 4, TextStyle.SHORT, enUS, \"Thu\"},\n+            {DAY_OF_WEEK, 5, TextStyle.SHORT, enUS, \"Fri\"},\n+            {DAY_OF_WEEK, 6, TextStyle.SHORT, enUS, \"Sat\"},\n+            {DAY_OF_WEEK, 7, TextStyle.SHORT, enUS, \"Sun\"},\n@@ -94,7 +96,7 @@\n-            {DAY_OF_WEEK, 1, TextStyle.FULL, Locale.US, \"Monday\"},\n-            {DAY_OF_WEEK, 2, TextStyle.FULL, Locale.US, \"Tuesday\"},\n-            {DAY_OF_WEEK, 3, TextStyle.FULL, Locale.US, \"Wednesday\"},\n-            {DAY_OF_WEEK, 4, TextStyle.FULL, Locale.US, \"Thursday\"},\n-            {DAY_OF_WEEK, 5, TextStyle.FULL, Locale.US, \"Friday\"},\n-            {DAY_OF_WEEK, 6, TextStyle.FULL, Locale.US, \"Saturday\"},\n-            {DAY_OF_WEEK, 7, TextStyle.FULL, Locale.US, \"Sunday\"},\n+            {DAY_OF_WEEK, 1, TextStyle.FULL, enUS, \"Monday\"},\n+            {DAY_OF_WEEK, 2, TextStyle.FULL, enUS, \"Tuesday\"},\n+            {DAY_OF_WEEK, 3, TextStyle.FULL, enUS, \"Wednesday\"},\n+            {DAY_OF_WEEK, 4, TextStyle.FULL, enUS, \"Thursday\"},\n+            {DAY_OF_WEEK, 5, TextStyle.FULL, enUS, \"Friday\"},\n+            {DAY_OF_WEEK, 6, TextStyle.FULL, enUS, \"Saturday\"},\n+            {DAY_OF_WEEK, 7, TextStyle.FULL, enUS, \"Sunday\"},\n@@ -102,12 +104,12 @@\n-            {MONTH_OF_YEAR, 1, TextStyle.SHORT, Locale.US, \"Jan\"},\n-            {MONTH_OF_YEAR, 2, TextStyle.SHORT, Locale.US, \"Feb\"},\n-            {MONTH_OF_YEAR, 3, TextStyle.SHORT, Locale.US, \"Mar\"},\n-            {MONTH_OF_YEAR, 4, TextStyle.SHORT, Locale.US, \"Apr\"},\n-            {MONTH_OF_YEAR, 5, TextStyle.SHORT, Locale.US, \"May\"},\n-            {MONTH_OF_YEAR, 6, TextStyle.SHORT, Locale.US, \"Jun\"},\n-            {MONTH_OF_YEAR, 7, TextStyle.SHORT, Locale.US, \"Jul\"},\n-            {MONTH_OF_YEAR, 8, TextStyle.SHORT, Locale.US, \"Aug\"},\n-            {MONTH_OF_YEAR, 9, TextStyle.SHORT, Locale.US, \"Sep\"},\n-            {MONTH_OF_YEAR, 10, TextStyle.SHORT, Locale.US, \"Oct\"},\n-            {MONTH_OF_YEAR, 11, TextStyle.SHORT, Locale.US, \"Nov\"},\n-            {MONTH_OF_YEAR, 12, TextStyle.SHORT, Locale.US, \"Dec\"},\n+            {MONTH_OF_YEAR, 1, TextStyle.SHORT, enUS, \"Jan\"},\n+            {MONTH_OF_YEAR, 2, TextStyle.SHORT, enUS, \"Feb\"},\n+            {MONTH_OF_YEAR, 3, TextStyle.SHORT, enUS, \"Mar\"},\n+            {MONTH_OF_YEAR, 4, TextStyle.SHORT, enUS, \"Apr\"},\n+            {MONTH_OF_YEAR, 5, TextStyle.SHORT, enUS, \"May\"},\n+            {MONTH_OF_YEAR, 6, TextStyle.SHORT, enUS, \"Jun\"},\n+            {MONTH_OF_YEAR, 7, TextStyle.SHORT, enUS, \"Jul\"},\n+            {MONTH_OF_YEAR, 8, TextStyle.SHORT, enUS, \"Aug\"},\n+            {MONTH_OF_YEAR, 9, TextStyle.SHORT, enUS, \"Sep\"},\n+            {MONTH_OF_YEAR, 10, TextStyle.SHORT, enUS, \"Oct\"},\n+            {MONTH_OF_YEAR, 11, TextStyle.SHORT, enUS, \"Nov\"},\n+            {MONTH_OF_YEAR, 12, TextStyle.SHORT, enUS, \"Dec\"},\n@@ -115,12 +117,12 @@\n-            {MONTH_OF_YEAR, 1, TextStyle.FULL, Locale.US, \"January\"},\n-            {MONTH_OF_YEAR, 2, TextStyle.FULL, Locale.US, \"February\"},\n-            {MONTH_OF_YEAR, 3, TextStyle.FULL, Locale.US, \"March\"},\n-            {MONTH_OF_YEAR, 4, TextStyle.FULL, Locale.US, \"April\"},\n-            {MONTH_OF_YEAR, 5, TextStyle.FULL, Locale.US, \"May\"},\n-            {MONTH_OF_YEAR, 6, TextStyle.FULL, Locale.US, \"June\"},\n-            {MONTH_OF_YEAR, 7, TextStyle.FULL, Locale.US, \"July\"},\n-            {MONTH_OF_YEAR, 8, TextStyle.FULL, Locale.US, \"August\"},\n-            {MONTH_OF_YEAR, 9, TextStyle.FULL, Locale.US, \"September\"},\n-            {MONTH_OF_YEAR, 10, TextStyle.FULL, Locale.US, \"October\"},\n-            {MONTH_OF_YEAR, 11, TextStyle.FULL, Locale.US, \"November\"},\n-            {MONTH_OF_YEAR, 12, TextStyle.FULL, Locale.US, \"December\"},\n+            {MONTH_OF_YEAR, 1, TextStyle.FULL, enUS, \"January\"},\n+            {MONTH_OF_YEAR, 2, TextStyle.FULL, enUS, \"February\"},\n+            {MONTH_OF_YEAR, 3, TextStyle.FULL, enUS, \"March\"},\n+            {MONTH_OF_YEAR, 4, TextStyle.FULL, enUS, \"April\"},\n+            {MONTH_OF_YEAR, 5, TextStyle.FULL, enUS, \"May\"},\n+            {MONTH_OF_YEAR, 6, TextStyle.FULL, enUS, \"June\"},\n+            {MONTH_OF_YEAR, 7, TextStyle.FULL, enUS, \"July\"},\n+            {MONTH_OF_YEAR, 8, TextStyle.FULL, enUS, \"August\"},\n+            {MONTH_OF_YEAR, 9, TextStyle.FULL, enUS, \"September\"},\n+            {MONTH_OF_YEAR, 10, TextStyle.FULL, enUS, \"October\"},\n+            {MONTH_OF_YEAR, 11, TextStyle.FULL, enUS, \"November\"},\n+            {MONTH_OF_YEAR, 12, TextStyle.FULL, enUS, \"December\"},\n@@ -128,2 +130,2 @@\n-            {AMPM_OF_DAY, 0, TextStyle.SHORT, Locale.US, \"AM\"},\n-            {AMPM_OF_DAY, 1, TextStyle.SHORT, Locale.US, \"PM\"},\n+            {AMPM_OF_DAY, 0, TextStyle.SHORT, enUS, \"AM\"},\n+            {AMPM_OF_DAY, 1, TextStyle.SHORT, enUS, \"PM\"},\n","filename":"test\/jdk\/java\/time\/test\/java\/time\/format\/TestDateTimeTextProvider.java","additions":43,"deletions":41,"binary":false,"changes":84,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -69,0 +69,1 @@\n+import static java.time.temporal.ChronoField.AMPM_OF_DAY;\n@@ -88,1 +89,2 @@\n-    Locale ptBR = Locale.forLanguageTag(\"pt-BR\");\n+    Locale enUS = new Locale(\"en\", \"US\");\n+    Locale ptBR = new Locale(\"pt\", \"BR\");\n","filename":"test\/jdk\/java\/time\/test\/java\/time\/format\/TestDateTimeTextProviderWithLocale.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,1 +48,1 @@\n-    private static final Locale BURMESE = Locale.forLanguageTag(\"my\");\n+    private static final Locale BURMESE = new Locale(\"my\");\n","filename":"test\/jdk\/java\/time\/test\/java\/time\/format\/TestDayPeriodWithDTF.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -61,1 +61,1 @@\n-    private static final Locale LOCALE_GA = Locale.forLanguageTag(\"ga\");\n+    private static final Locale LOCALE_GA = new Locale(\"ga\");\n","filename":"test\/jdk\/java\/time\/test\/java\/time\/format\/TestLocalizedOffsetPrinterParser.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, Oracle and\/or its affiliates. All rights reserved.\n@@ -56,1 +56,1 @@\n-            Locale.forLanguageTag(\"no-NO\"));\n+            new Locale(\"no\", \"NO\"));\n@@ -109,1 +109,1 @@\n-            {Locale.forLanguageTag(\"no-NO\"), new String[]{\"M\", \"T\", \"O\", \"T\", \"F\", \"L\", \"S\"}},};\n+            {new Locale(\"no\", \"NO\"), new String[]{\"M\", \"T\", \"O\", \"T\", \"F\", \"L\", \"S\"}},};\n","filename":"test\/jdk\/java\/time\/test\/java\/time\/format\/TestNarrowMonthNamesAndDayNames.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -74,2 +74,2 @@\n-    private static final Locale ARABIC = Locale.forLanguageTag(\"ar\");\n-    private static final Locale thTH = Locale.forLanguageTag(\"th-TH\");\n+    private static final Locale ARABIC = new Locale(\"ar\");\n+    private static final Locale thTH = new Locale(\"th\", \"TH\");\n","filename":"test\/jdk\/java\/time\/test\/java\/time\/format\/TestNonIsoFormatter.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2016, Oracle and\/or its affiliates. All rights reserved.\n@@ -98,2 +98,2 @@\n-    static final Locale RUSSIAN = Locale.forLanguageTag(\"ru\");\n-    static final Locale FINNISH = Locale.forLanguageTag(\"fi\");\n+    static final Locale RUSSIAN = new Locale(\"ru\");\n+    static final Locale FINNISH = new Locale(\"fi\");\n","filename":"test\/jdk\/java\/time\/test\/java\/time\/format\/TestTextParserWithLocale.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2016, Oracle and\/or its affiliates. All rights reserved.\n@@ -93,2 +93,2 @@\n-    static final Locale RUSSIAN = Locale.forLanguageTag(\"ru\");\n-    static final Locale FINNISH = Locale.forLanguageTag(\"fi\");\n+    static final Locale RUSSIAN = new Locale(\"ru\");\n+    static final Locale FINNISH = new Locale(\"fi\");\n","filename":"test\/jdk\/java\/time\/test\/java\/time\/format\/TestTextPrinterWithLocale.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2016, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n-    private static final Locale THAI_LOCALE = Locale.forLanguageTag(\"th-TH\");\n+    private static final Locale THAI_LOCALE = new Locale(\"th\", \"TH\");\n","filename":"test\/jdk\/java\/util\/Calendar\/BuddhistCalendarTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2017, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n-        Calendar czechCalendar = Calendar.getInstance(Locale.forLanguageTag(\"cs-CZ\"));\n+        Calendar czechCalendar = Calendar.getInstance(new Locale(\"cs\", \"CZ\"));\n","filename":"test\/jdk\/java\/util\/Calendar\/Bug4302966.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2006, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2006, 2016, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-        Calendar jcal = Calendar.getInstance(Locale.forLanguageTag(\"ja-JP-x-lvariant-JP\"));\n+        Calendar jcal = Calendar.getInstance(new Locale(\"ja\", \"JP\", \"JP\"));\n","filename":"test\/jdk\/java\/util\/Calendar\/Bug6448234.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -86,2 +86,2 @@\n-                Locale.forLanguageTag(\"th-TH\"), Locale.forLanguageTag(\"th-Thai-TH\"),\n-                Locale.forLanguageTag(\"ja-JP-x-lvariant-JP\"), Locale.forLanguageTag(\"th-TH-x-lvariant-TH\")\n+                new Locale(\"th\", \"TH\"), Locale.forLanguageTag(\"th-Thai-TH\"),\n+                new Locale(\"ja\", \"JP\", \"JP\"), new Locale(\"th\", \"TH\", \"TH\")\n","filename":"test\/jdk\/java\/util\/Calendar\/Bug8167273.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,2 +35,2 @@\n-    private static final Locale jaJPJP = Locale.forLanguageTag(\"ja-JP-x-lvariant-JP\");\n-    private static final Locale thTH = Locale.forLanguageTag(\"th-TH\");\n+    private static final Locale jaJPJP = new Locale(\"ja\", \"JP\", \"JP\");\n+    private static final Locale thTH = new Locale(\"th\", \"TH\");\n","filename":"test\/jdk\/java\/util\/Calendar\/Builder\/BuilderTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -63,1 +63,1 @@\n-        Calendar cal = Calendar.getInstance(Locale.forLanguageTag(\"und-001\"));\n+        Calendar cal = Calendar.getInstance(new Locale(\"\", \"001\"));\n@@ -74,1 +74,1 @@\n-                        Calendar c = Calendar.getInstance(Locale.forLanguageTag(\"und\" + \"-\" + region));\n+                        Calendar c = Calendar.getInstance(new Locale(\"\", region));\n","filename":"test\/jdk\/java\/util\/Calendar\/CalendarDataTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2016, Oracle and\/or its affiliates. All rights reserved.\n@@ -2258,1 +2258,1 @@\n-        cal1 = Calendar.getInstance(Locale.forLanguageTag(\"th-TH\"));\n+        cal1 = Calendar.getInstance(new Locale(\"th\", \"TH\"));\n","filename":"test\/jdk\/java\/util\/Calendar\/CalendarRegression.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -977,1 +977,1 @@\n-                Locale l = Locale.forLanguageTag(lt[j][0] + \"-\" + lt[j][1]);\n+                Locale l = new Locale(lt[j][0], lt[j][1]);\n","filename":"test\/jdk\/java\/util\/Calendar\/CalendarTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -114,4 +114,1 @@\n-                        locale = Locale.forLanguageTag(\n-                                (lang.isEmpty() ? \"und\" : lang) +\n-                                (country.isEmpty() ? \"\" : \"-\" + country) +\n-                                (var.isEmpty() ? \"\" : \"-x-lvariant-\" + var));\n+                        locale = new Locale(lang, country, var);\n","filename":"test\/jdk\/java\/util\/Calendar\/CalendarTestScripts\/CalendarTestEngine.java","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2016, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,1 @@\n-        Locale.forLanguageTag(\"th-TH\"),\n+        new Locale(\"th\", \"TH\"),\n@@ -43,1 +43,1 @@\n-        Locale.forLanguageTag(\"ja-JP-x-lvariant-JP\"),\n+        new Locale(\"ja\", \"JP\", \"JP\"),\n","filename":"test\/jdk\/java\/util\/Calendar\/CalendarTypeTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,1 +39,1 @@\n-    private static final Locale ARABIC = Locale.forLanguageTag(\"ar\");\n+    private static final Locale ARABIC = new Locale(\"ar\");\n","filename":"test\/jdk\/java\/util\/Calendar\/CldrFormatNamesTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -72,2 +72,2 @@\n-            { Locale.forLanguageTag(\"ar\"), ArabicName, ArabicName },\n-            { Locale.forLanguageTag(\"th\"), ThaiName, \"R\" },\n+            { new Locale(\"ar\"), ArabicName, ArabicName },\n+            { new Locale(\"th\"), ThaiName, \"R\" },\n@@ -75,1 +75,1 @@\n-            { Locale.forLanguageTag(\"hi-IN\"), EngName, \"R\" }\n+            { new Locale(\"hi\", \"IN\"), EngName, \"R\" }\n@@ -94,5 +94,5 @@\n-            { Locale.forLanguageTag(\"ar\"), ArabicName, ArabicName },\n-            { Locale.forLanguageTag(\"th\"), ThaiName, ThaiName },\n-            { Locale.forLanguageTag(\"hi-IN\"), HindiName, HindiName },\n-            { Locale.forLanguageTag(\"ru\"), RussianName, RussianName },\n-            { Locale.forLanguageTag(\"sr\"), SerbianName, SerbianName },\n+            { new Locale(\"ar\"), ArabicName, ArabicName },\n+            { new Locale(\"th\"), ThaiName, ThaiName },\n+            { new Locale(\"hi\", \"IN\"), HindiName, HindiName },\n+            { new Locale(\"ru\"), RussianName, RussianName },\n+            { new Locale(\"sr\"), SerbianName, SerbianName },\n@@ -100,6 +100,6 @@\n-            { Locale.forLanguageTag(\"hr\"), EngName, EngName },\n-            { Locale.forLanguageTag(\"in\"), EngName, EngName },\n-            { Locale.forLanguageTag(\"lt\"), EngName, EngName },\n-            { Locale.forLanguageTag(\"nl\"), EngName, EngName },\n-            { Locale.forLanguageTag(\"no\"), EngName, \"R\" },\n-            { Locale.forLanguageTag(\"sv\"), EngName, EngName },\n+            { new Locale(\"hr\"), EngName, EngName },\n+            { new Locale(\"in\"), EngName, EngName },\n+            { new Locale(\"lt\"), EngName, EngName },\n+            { new Locale(\"nl\"), EngName, EngName },\n+            { new Locale(\"no\"), EngName, \"R\" },\n+            { new Locale(\"sv\"), EngName, EngName },\n@@ -107,1 +107,1 @@\n-            { Locale.forLanguageTag(\"el\"), EngName, EngName }\n+            { new Locale(\"el\"), EngName, EngName }\n","filename":"test\/jdk\/java\/util\/Calendar\/JapanEraNameCompatTest.java","additions":16,"deletions":16,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,2 +47,2 @@\n-    private static final Locale JAJPJP = Locale.forLanguageTag(\"ja-JP-x-lvariant-JP\");\n-    private static final Locale THTH = Locale.forLanguageTag(\"th-TH\");\n+    private static final Locale JAJPJP = new Locale(\"ja\", \"JP\", \"JP\");\n+    private static final Locale THTH = new Locale(\"th\", \"TH\");\n","filename":"test\/jdk\/java\/util\/Calendar\/NarrowNamesTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -90,2 +90,2 @@\n-        Locale.forLanguageTag(\"th-TH\"),\n-        Locale.forLanguageTag(\"ja-JP-x-lvariant-JP\")};\n+        new Locale(\"th\", \"TH\"),\n+        new Locale(\"ja\", \"JP\", \"JP\")};\n","filename":"test\/jdk\/java\/util\/Calendar\/ZoneOffsets.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, Oracle and\/or its affiliates. All rights reserved.\n@@ -52,1 +52,1 @@\n-        Currency currency = Currency.getInstance(Locale.forLanguageTag(\"und\" + \"-\" + country));\n+        Currency currency = Currency.getInstance(new Locale(\"\", country));\n","filename":"test\/jdk\/java\/util\/Currency\/Bug4512215.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -169,1 +169,1 @@\n-            Currency.getInstance(Locale.forLanguageTag(\"und-EU\"));\n+            Currency.getInstance(new Locale(\"\", \"EU\"));\n@@ -179,1 +179,1 @@\n-        Locale locale = Locale.forLanguageTag(\"und\" + \"-\" + countryCode);\n+        Locale locale = new Locale(\"\", countryCode);\n@@ -260,2 +260,2 @@\n-        testDisplayName(\"ESP\", Locale.forLanguageTag(\"es\"), \"peseta espa\\u00f1ola\");\n-        testDisplayName(\"ITL\", Locale.ITALIAN, \"lira italiana\");\n+        testDisplayName(\"ESP\", new Locale(\"es\"), \"peseta espa\\u00f1ola\");\n+        testDisplayName(\"ITL\", new Locale(\"it\"), \"lira italiana\");\n@@ -264,1 +264,1 @@\n-        testDisplayName(\"SEK\", Locale.forLanguageTag(\"sv\"), \"svensk krona\");\n+        testDisplayName(\"SEK\", new Locale(\"sv\"), \"svensk krona\");\n","filename":"test\/jdk\/java\/util\/Currency\/CurrencyTest.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -63,1 +63,1 @@\n-                    Currency c = Currency.getInstance(Locale.forLanguageTag(\"und\" + \"-\" + ctry));\n+                    Currency c = Currency.getInstance(new Locale(\"\", ctry));\n@@ -198,1 +198,1 @@\n-        Currency cur = Currency.getInstance(Locale.forLanguageTag(\"und-JP\"));\n+        Currency cur = Currency.getInstance(new Locale(\"\", \"JP\"));\n","filename":"test\/jdk\/java\/util\/Currency\/PropertiesTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -202,1 +202,1 @@\n-        Locale loc = Locale.forLanguageTag(\"und\" + \"-\" + country);\n+        Locale loc = new Locale(\"\", country);\n@@ -260,1 +260,1 @@\n-                        Currency.getInstance(Locale.forLanguageTag(\"und\" + \"-\" + country));\n+                        Currency.getInstance(new Locale(\"\", country));\n@@ -273,1 +273,1 @@\n-                        cur = Currency.getInstance(Locale.forLanguageTag(\"und\" + \"-\" + country));\n+                        cur = Currency.getInstance(new Locale(\"\", country));\n","filename":"test\/jdk\/java\/util\/Currency\/ValidateISO4217.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,1 +49,1 @@\n-    static final Locale TURKISH = Locale.forLanguageTag(\"tr\");\n+    static final Locale TURKISH = new Locale(\"tr\");\n","filename":"test\/jdk\/java\/util\/Formatter\/FormatLocale.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,1 +49,1 @@\n-            testFormatter(Locale.forLanguageTag(\"hi-IN\"), formatString, number);\n+            testFormatter(new Locale(\"hi\", \"IN\"), formatString, number);\n","filename":"test\/jdk\/java\/util\/Formatter\/spi\/FormatterWithProvider.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,1 +40,1 @@\n-        Locale locale = Locale.forLanguageTag(\"xx-YY\");\n+        Locale locale = new Locale(\"xx\", \"YY\");\n","filename":"test\/jdk\/java\/util\/Formatter\/spi\/NoGroupingUsed.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,1 +34,1 @@\n-            Locale.forLanguageTag(\"hi-IN\"), Locale.forLanguageTag(\"xx-YY\")};\n+            new Locale(\"hi\", \"IN\"), new Locale(\"xx\", \"YY\")};\n","filename":"test\/jdk\/java\/util\/Formatter\/spi\/provider\/test\/NumberFormatProviderImpl.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2016, Oracle and\/or its affiliates. All rights reserved.\n@@ -63,1 +63,1 @@\n-            final Locale l = Locale.forLanguageTag(localeCodes[0]);\n+            final Locale l = new Locale(localeCodes[0], \"\");\n","filename":"test\/jdk\/java\/util\/Locale\/Bug4175998Test.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2016, Oracle and\/or its affiliates. All rights reserved.\n@@ -87,1 +87,1 @@\n-                final Locale expected = Locale.forLanguageTag(lang + \"-\" + \"XX\");\n+                final Locale expected = new Locale(lang, \"XX\");\n@@ -126,1 +126,1 @@\n-            out.writeObject(Locale.forLanguageTag(lang + \"-\" + \"XX\"));\n+            out.writeObject(new Locale(lang, \"XX\"));\n","filename":"test\/jdk\/java\/util\/Locale\/Bug4184873Test.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,1 +39,1 @@\n-        Locale aLocale = Locale.forLanguageTag(language + \"-\" + country + \"-x-lvariant-\" + variant);\n+        Locale aLocale = new Locale(language, country, variant);\n","filename":"test\/jdk\/java\/util\/Locale\/Bug4210525.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-        Locale aLocale = Locale.forLanguageTag(language);\n+        Locale aLocale = new Locale(language);\n","filename":"test\/jdk\/java\/util\/Locale\/Bug4316602.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2011, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,1 @@\n-        final Locale loc = Locale.forLanguageTag(\"ja-US\");\n+        final Locale loc = new Locale(\"ja\", \"US\");\n","filename":"test\/jdk\/java\/util\/Locale\/Bug4518797.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, Oracle and\/or its affiliates. All rights reserved.\n@@ -65,1 +65,1 @@\n-        locales = Collections.singleton(Locale.forLanguageTag(\"nv\"));\n+        locales = Collections.singleton(new Locale(\"nv\"));\n","filename":"test\/jdk\/java\/util\/Locale\/Bug8135061.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -90,1 +90,1 @@\n-        Locale[] locArr = {Locale.forLanguageTag(\"hi-IN\"), Locale.UK, Locale.forLanguageTag(\"fi-FI\"),\n+        Locale[] locArr = {new Locale(\"hi\", \"IN\"), Locale.UK, new Locale(\"fi\", \"FI\"),\n","filename":"test\/jdk\/java\/util\/Locale\/Bug8154797.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, Oracle and\/or its affiliates. All rights reserved.\n@@ -59,1 +59,1 @@\n-            Locale.setDefault(Locale.forLanguageTag(\"tr-TR\"));\n+            Locale.setDefault(new Locale(\"tr\", \"TR\"));\n","filename":"test\/jdk\/java\/util\/Locale\/Bug8159420.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,1 +33,0 @@\n-    @SuppressWarnings(\"deprecation\")\n","filename":"test\/jdk\/java\/util\/Locale\/ExtensionsTest.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,1 +49,1 @@\n-                        resourceBundleName, Locale.ROOT);\n+                        resourceBundleName, new Locale(\"\", \"\", \"\"));\n","filename":"test\/jdk\/java\/util\/Locale\/GenerateKeyList.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2016, Oracle and\/or its affiliates. All rights reserved.\n@@ -72,20 +72,20 @@\n-        Locale.forLanguageTag(\"ar-SA\"),\n-        Locale.forLanguageTag(\"zh-CN\"),\n-        Locale.forLanguageTag(\"zh-TW\"),\n-        Locale.forLanguageTag(\"nl-NL\"),\n-        Locale.forLanguageTag(\"en-AU\"),\n-        Locale.forLanguageTag(\"en-CA\"),\n-        Locale.forLanguageTag(\"en-GB\"),\n-        Locale.forLanguageTag(\"en-US\"),\n-        Locale.forLanguageTag(\"fr-CA\"),\n-        Locale.forLanguageTag(\"fr-FR\"),\n-        Locale.forLanguageTag(\"de-DE\"),\n-        Locale.forLanguageTag(\"iw-IL\"),\n-        Locale.forLanguageTag(\"hi-IN\"),\n-        Locale.forLanguageTag(\"it-IT\"),\n-        Locale.forLanguageTag(\"ja-JP\"),\n-        Locale.forLanguageTag(\"ko-KR\"),\n-        Locale.forLanguageTag(\"pt-BR\"),\n-        Locale.forLanguageTag(\"es-ES\"),\n-        Locale.forLanguageTag(\"sv-SE\"),\n-        Locale.forLanguageTag(\"th-TH\"),\n+        new Locale(\"ar\", \"SA\"),\n+        new Locale(\"zh\", \"CN\"),\n+        new Locale(\"zh\", \"TW\"),\n+        new Locale(\"nl\", \"NL\"),\n+        new Locale(\"en\", \"AU\"),\n+        new Locale(\"en\", \"CA\"),\n+        new Locale(\"en\", \"GB\"),\n+        new Locale(\"en\", \"US\"),\n+        new Locale(\"fr\", \"CA\"),\n+        new Locale(\"fr\", \"FR\"),\n+        new Locale(\"de\", \"DE\"),\n+        new Locale(\"iw\", \"IL\"),\n+        new Locale(\"hi\", \"IN\"),\n+        new Locale(\"it\", \"IT\"),\n+        new Locale(\"ja\", \"JP\"),\n+        new Locale(\"ko\", \"KR\"),\n+        new Locale(\"pt\", \"BR\"),\n+        new Locale(\"es\", \"ES\"),\n+        new Locale(\"sv\", \"SE\"),\n+        new Locale(\"th\", \"TH\"),\n@@ -184,20 +184,20 @@\n-        Locale.forLanguageTag(\"ar-SA\"),\n-        Locale.forLanguageTag(\"zh-CN\"),\n-        Locale.forLanguageTag(\"zh-TW\"),\n-        Locale.forLanguageTag(\"iw-IL\"),\n-        Locale.forLanguageTag(\"ja-JP\"),\n-        Locale.forLanguageTag(\"ko-KR\"),\n-        Locale.forLanguageTag(\"it-IT\"),\n-        Locale.forLanguageTag(\"th-TH\"),\n-        Locale.forLanguageTag(\"ar-SA\"),\n-        Locale.forLanguageTag(\"zh-CN\"),\n-        Locale.forLanguageTag(\"zh-CN\"),\n-        Locale.forLanguageTag(\"zh-CN\"),\n-        Locale.forLanguageTag(\"zh-TW\"),\n-        Locale.forLanguageTag(\"iw-IL\"),\n-        Locale.forLanguageTag(\"ja-JP\"),\n-        Locale.forLanguageTag(\"ja-JP\"),\n-        Locale.forLanguageTag(\"ko-KR\"),\n-        Locale.forLanguageTag(\"it-IT\"),\n-        Locale.forLanguageTag(\"it-IT\"),\n-        Locale.forLanguageTag(\"th-TH\"),\n+        new Locale(\"ar\", \"SA\"),\n+        new Locale(\"zh\", \"CN\"),\n+        new Locale(\"zh\", \"TW\"),\n+        new Locale(\"iw\", \"IL\"),\n+        new Locale(\"ja\", \"JP\"),\n+        new Locale(\"ko\", \"KR\"),\n+        new Locale(\"it\", \"IT\"),\n+        new Locale(\"th\", \"TH\"),\n+        new Locale(\"ar\", \"SA\"),\n+        new Locale(\"zh\", \"CN\"),\n+        new Locale(\"zh\", \"CN\"),\n+        new Locale(\"zh\", \"CN\"),\n+        new Locale(\"zh\", \"TW\"),\n+        new Locale(\"iw\", \"IL\"),\n+        new Locale(\"ja\", \"JP\"),\n+        new Locale(\"ja\", \"JP\"),\n+        new Locale(\"ko\", \"KR\"),\n+        new Locale(\"it\", \"IT\"),\n+        new Locale(\"it\", \"IT\"),\n+        new Locale(\"th\", \"TH\"),\n","filename":"test\/jdk\/java\/util\/Locale\/InternationalBAT.java","additions":41,"deletions":41,"binary":false,"changes":82,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,1 +54,0 @@\n-@SuppressWarnings(\"deprecation\") \/\/ intentional for testing compatibility between constructors and the factory method.\n","filename":"test\/jdk\/java\/util\/Locale\/LocaleEnhanceTest.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -130,3 +130,1 @@\n-        Locale testLocale = Locale.forLanguageTag(\n-                (lang.isEmpty() ? \"und\" : lang) +\n-                (ctry.isEmpty() ? \"\" : \"-\" + ctry));\n+        Locale testLocale = new Locale(lang, ctry);\n@@ -253,6 +251,1 @@\n-            System.out.println(\n-                new SimpleDateFormat(\"z\",\n-                    Locale.forLanguageTag(\n-                        (lang.isEmpty() ? \"und\" : lang) +\n-                        (ctry.isEmpty() ? \"\" : \"-\" + ctry)))\n-                .parse(\"UTC\"));\n+            System.out.println(new SimpleDateFormat(\"z\", new Locale(lang, ctry)).parse(\"UTC\"));\n@@ -268,1 +261,1 @@\n-            Locale l = Locale.forLanguageTag(\"ja-JP-x-lvariant-JP\");\n+            Locale l = new Locale(\"ja\", \"JP\", \"JP\");\n@@ -305,1 +298,1 @@\n-            Locale l = Locale.forLanguageTag(\"xx-XX\");\n+            Locale l = new Locale(\"xx\",\"XX\");\n","filename":"test\/jdk\/java\/util\/Locale\/LocaleProviders.java","additions":5,"deletions":12,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -197,4 +197,1 @@\n-            Locale testLocale = Locale.forLanguageTag(\n-                    (dataTable[LANG][i].isEmpty() ? \"und\" : dataTable[LANG][i]) +\n-                    (dataTable[CTRY][i].isEmpty() ? \"\" : \"-\" + dataTable[CTRY][i]) +\n-                    (dataTable[VAR][i].isEmpty() ? \"\" : \"-x-lvariant-\" + dataTable[VAR][i]));\n+            Locale testLocale = new Locale(dataTable[LANG][i], dataTable[CTRY][i], dataTable[VAR][i]);\n@@ -223,3 +220,1 @@\n-            Locale testLocale = Locale.forLanguageTag(\n-                    (dataTable[LANG][i].isEmpty() ? \"und\" : dataTable[LANG][i]) +\n-                    (dataTable[CTRY][i].isEmpty() ? \"\" : \"-\" + dataTable[CTRY][i]));\n+            Locale testLocale = new Locale(dataTable[LANG][i], dataTable[CTRY][i]);\n@@ -248,4 +243,1 @@\n-            Locale testLocale = Locale.forLanguageTag(\n-                    (dataTable[LANG][i].isEmpty() ? \"und\" : dataTable[LANG][i]) +\n-                    (dataTable[CTRY][i].isEmpty() ? \"\" : \"-\" + dataTable[CTRY][i]) +\n-                    (dataTable[VAR][i].isEmpty() ? \"\" : \"-x-lvariant-\" + dataTable[VAR][i]));\n+            Locale testLocale = new Locale(dataTable[LANG][i], dataTable[CTRY][i], dataTable[VAR][i]);\n@@ -279,4 +271,4 @@\n-        Locale english = Locale.US;\n-        Locale french = Locale.FRANCE;\n-        Locale croatian = Locale.forLanguageTag(\"hr-HR\");\n-        Locale greek = Locale.forLanguageTag(\"el-GR\");\n+        Locale english = new Locale(\"en\", \"US\");\n+        Locale french = new Locale(\"fr\", \"FR\");\n+        Locale croatian = new Locale(\"hr\", \"HR\");\n+        Locale greek = new Locale(\"el\", \"GR\");\n@@ -323,4 +315,1 @@\n-            Locale testLocale = Locale.forLanguageTag(\n-                    (dataTable[LANG][i].isEmpty() ? \"und\" : dataTable[LANG][i]) +\n-                    (dataTable[CTRY][i].isEmpty() ? \"\" : \"-\" + dataTable[CTRY][i]) +\n-                    (dataTable[VAR][i].isEmpty() ? \"\" : \"-x-lvariant-\" + dataTable[VAR][i]));\n+            Locale testLocale = new Locale(dataTable[LANG][i], dataTable[CTRY][i], dataTable[VAR][i]);\n@@ -399,2 +388,2 @@\n-        Locale test1 = Locale.forLanguageTag(\"aa-AA\");\n-        Locale test2 = Locale.forLanguageTag(\"aa-AA\");\n+        Locale test1 = new Locale(\"aa\", \"AA\");\n+        Locale test2 = new Locale(\"aa\", \"AA\");\n@@ -402,1 +391,1 @@\n-        Locale test4 = Locale.forLanguageTag(\"zz-ZZ\");\n+        Locale test4 = new Locale(\"zz\", \"ZZ\");\n@@ -404,1 +393,1 @@\n-        if (test1 != test2 || test1 == test3 || test1 == test4 || test2 == test3) {\n+        if (test1 == test2 || test1 == test3 || test1 == test4 || test2 == test3) {\n@@ -433,1 +422,1 @@\n-        Locale test = Locale.forLanguageTag(\"xx-YY\");\n+        Locale test = new Locale(\"xx\", \"YY\", \"\");\n@@ -626,1 +615,1 @@\n-        Locale test1 = Locale.forLanguageTag(\"zh-TW\");\n+        Locale test1 = new Locale(\"zh\", \"TW\", \"\");\n@@ -654,1 +643,1 @@\n-            String test = (Locale.forLanguageTag(languageCodes[i])).getDisplayLanguage(Locale.US);\n+            String test = (new Locale(languageCodes[i], \"\", \"\")).getDisplayLanguage(Locale.US);\n@@ -672,1 +661,1 @@\n-            String test = (Locale.forLanguageTag(iso2Languages[i])).getISO3Language();\n+            String test = (new Locale(iso2Languages[i], \"\", \"\")).getISO3Language();\n@@ -683,1 +672,1 @@\n-            String test = (Locale.forLanguageTag(\"und\" + \"-\" + iso2Countries[i])).getISO3Country();\n+            String test = (new Locale(\"\", iso2Countries[i], \"\")).getISO3Country();\n@@ -695,6 +684,6 @@\n-        Locale hebrewOld = Locale.forLanguageTag(\"iw-IL\");\n-        Locale hebrewNew = Locale.forLanguageTag(\"he-IL\");\n-        Locale yiddishOld = Locale.forLanguageTag(\"ji-IL\");\n-        Locale yiddishNew = Locale.forLanguageTag(\"yi-IL\");\n-        Locale indonesianOld = Locale.forLanguageTag(\"in\");\n-        Locale indonesianNew = Locale.forLanguageTag(\"id\");\n+        Locale hebrewOld = new Locale(\"iw\", \"IL\", \"\");\n+        Locale hebrewNew = new Locale(\"he\", \"IL\", \"\");\n+        Locale yiddishOld = new Locale(\"ji\", \"IL\", \"\");\n+        Locale yiddishNew = new Locale(\"yi\", \"IL\", \"\");\n+        Locale indonesianOld = new Locale(\"in\", \"\", \"\");\n+        Locale indonesianNew = new Locale(\"id\", \"\", \"\");\n@@ -750,9 +739,9 @@\n-        Locale[] localesToTest = { Locale.forLanguageTag(\"de-CA\"),\n-                                   Locale.forLanguageTag(\"ja-ZA\"),\n-                                   Locale.forLanguageTag(\"ru-MX\"),\n-                                   Locale.forLanguageTag(\"en-FR\"),\n-                                   Locale.forLanguageTag(\"es-DE\"),\n-                                   Locale.forLanguageTag(\"und\" + \"-\" + \"HR\"),\n-                                   Locale.forLanguageTag(\"und\" + \"-\" + \"SE\"),\n-                                   Locale.forLanguageTag(\"und\" + \"-\" + \"DO\"),\n-                                   Locale.forLanguageTag(\"und\" + \"-\" + \"BE\") };\n+        Locale[] localesToTest = { new Locale(\"de\", \"CA\"),\n+                                   new Locale(\"ja\", \"ZA\"),\n+                                   new Locale(\"ru\", \"MX\"),\n+                                   new Locale(\"en\", \"FR\"),\n+                                   new Locale(\"es\", \"DE\"),\n+                                   new Locale(\"\", \"HR\"),\n+                                   new Locale(\"\", \"SE\"),\n+                                   new Locale(\"\", \"DO\"),\n+                                   new Locale(\"\", \"BE\") };\n@@ -802,1 +791,1 @@\n-            String name = localesToTest[i].getDisplayName(Locale.forLanguageTag(\"es-ES\"));\n+            String name = localesToTest[i].getDisplayName(new Locale(\"es\", \"ES\"));\n@@ -851,1 +840,1 @@\n-                Locale.forLanguageTag(\"th-TH\"));\n+                new Locale(\"th\", \"TH\"));\n@@ -906,7 +895,7 @@\n-            Locale.forLanguageTag(\"xx\"), \"xx\",\n-            Locale.forLanguageTag(\"und-YY\"), \"_YY\",\n-            Locale.forLanguageTag(\"und-x-lvariant-ZZ\"), \"\",\n-            Locale.forLanguageTag(\"xx-YY\"), \"xx_YY\",\n-            Locale.forLanguageTag(\"xx-x-lvariant-ZZ\"), \"xx__ZZ\",\n-            Locale.forLanguageTag(\"und-YY-x-lvariant-ZZ\"), \"_YY_ZZ\",\n-            Locale.forLanguageTag(\"xx-YY-x-lvariant-ZZ\"), \"xx_YY_ZZ\",\n+            new Locale(\"xx\", \"\", \"\"), \"xx\",\n+            new Locale(\"\", \"YY\", \"\"), \"_YY\",\n+            new Locale(\"\", \"\", \"ZZ\"), \"\",\n+            new Locale(\"xx\", \"YY\", \"\"), \"xx_YY\",\n+            new Locale(\"xx\", \"\", \"ZZ\"), \"xx__ZZ\",\n+            new Locale(\"\", \"YY\", \"ZZ\"), \"_YY_ZZ\",\n+            new Locale(\"xx\", \"YY\", \"ZZ\"), \"xx_YY_ZZ\",\n@@ -929,2 +918,2 @@\n-        Locale[] LOC = {Locale.CHINESE, Locale.forLanguageTag(\"zh-CN\"),\n-            Locale.forLanguageTag(\"zh-TW\"), Locale.forLanguageTag(\"zh-HK\")};\n+        Locale[] LOC = {Locale.CHINESE, new Locale(\"zh\", \"CN\", \"\"),\n+            new Locale(\"zh\", \"TW\", \"\"), new Locale(\"zh\", \"HK\", \"\")};\n@@ -957,1 +946,1 @@\n-        Locale mylocale = Locale.forLanguageTag(\"hu\");\n+        Locale mylocale = new Locale(\"hu\", \"\", \"\");\n@@ -974,1 +963,1 @@\n-        Calendar cal = Calendar.getInstance(Locale.forLanguageTag(\"ru\"));\n+        Calendar cal = Calendar.getInstance(new Locale(\"ru\", \"\", \"\"));\n@@ -988,1 +977,1 @@\n-        Locale locale = Locale.forLanguageTag(\"aaa-XX\");\n+        Locale locale = new Locale(\"aaa\", \"CCC\");\n@@ -1008,1 +997,1 @@\n-        Locale locale = Locale.forLanguageTag(\"aaa-CC\");\n+        Locale locale = new Locale(\"aaa\", \"CCC\");\n@@ -1018,1 +1007,1 @@\n-        locale = Locale.forLanguageTag(\"zz-CC\");\n+        locale = new Locale(\"zz\", \"CCC\");\n@@ -1033,3 +1022,3 @@\n-        Locale[] locales = {Locale.forLanguageTag(\"no-NO\"), Locale.forLanguageTag(\"no-NO-x-lvariant-B\"),\n-            Locale.forLanguageTag(\"no-NO-x-lvariant-NY\"), Locale.forLanguageTag(\"nb-NO\"),\n-            Locale.forLanguageTag(\"nn-NO\")};\n+        Locale[] locales = {new Locale(\"no\", \"NO\"), new Locale(\"no\", \"NO\", \"B\"),\n+            new Locale(\"no\", \"NO\", \"NY\"), new Locale(\"nb\", \"NO\"),\n+            new Locale(\"nn\", \"NO\")};\n@@ -1064,2 +1053,2 @@\n-        if (!av.contains(Locale.forLanguageTag(\"nb-NO\"))\n-                || !av.contains(Locale.forLanguageTag(\"nn-NO\"))) {\n+        if (!av.contains(new Locale(\"nb\", \"NO\"))\n+                || !av.contains(new Locale(\"nn\", \"NO\"))) {\n","filename":"test\/jdk\/java\/util\/Locale\/LocaleTest.java","additions":54,"deletions":65,"binary":false,"changes":119,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,0 @@\n-    @SuppressWarnings(\"deprecation\")\n","filename":"test\/jdk\/java\/util\/Locale\/SoftKeys.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,1 +45,1 @@\n-        Locale locTH = Locale.forLanguageTag(\"th-TH-x-lvariant-TH\");\n+        Locale locTH = new Locale(\"th\", \"TH\", \"TH\");\n@@ -61,1 +61,1 @@\n-        Locale locTH = Locale.forLanguageTag(\"th-TH-x-lvariant-TH\");\n+        Locale locTH = new Locale(\"th\", \"TH\", \"TH\");\n@@ -74,1 +74,1 @@\n-        Locale locTH = Locale.forLanguageTag(\"th-TH-x-lvariant-TH\");\n+        Locale locTH = new Locale(\"th\", \"TH\", \"TH\");\n","filename":"test\/jdk\/java\/util\/Locale\/ThaiGov.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -63,1 +63,1 @@\n-    private static final Locale loc2 = Locale.forLanguageTag(\"ja-JP-x-lvariant-JP\");\n+    private static final Locale loc2 = new Locale(\"ja\", \"JP\", \"JP\");\n","filename":"test\/jdk\/java\/util\/Locale\/bcp47u\/DisplayNameTests.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,1 +46,1 @@\n-        String name = Locale.forLanguageTag(\"foo-u-ca-japanese\").getDisplayName(Locale.forLanguageTag(\"foo\"));\n+        String name = Locale.forLanguageTag(\"foo-u-ca-japanese\").getDisplayName(new Locale(\"foo\"));\n","filename":"test\/jdk\/java\/util\/Locale\/bcp47u\/spi\/LocaleNameProviderTests.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,1 +34,1 @@\n-    private static final Locale[] avail = {Locale.forLanguageTag(\"foo\")};\n+    private static final Locale[] avail = {new Locale(\"foo\")};\n","filename":"test\/jdk\/java\/util\/Locale\/bcp47u\/spi\/provider\/foo\/LocaleNameProviderImpl.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,1 +33,0 @@\n-    @SuppressWarnings(\"deprecation\")\n@@ -37,5 +36,1 @@\n-            throw new RuntimeException(\"Locale.ROOT is not equal to new Locale(\\\"\\\", \\\"\\\", \\\"\\\")\");\n-        }\n-        root = Locale.forLanguageTag(\"\");\n-        if (!Locale.ROOT.equals(root)) {\n-            throw new RuntimeException(\"Locale.ROOT is not equal to Locale.forLanguageTag(\\\"\\\")\");\n+            throw new RuntimeException(\"Locale.ROOT is not equal to Locale(\\\"\\\", \\\"\\\", \\\"\\\")\");\n","filename":"test\/jdk\/java\/util\/Locale\/bug6277243.java","additions":2,"deletions":7,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -58,1 +58,1 @@\n-        Locale kids = Locale.forLanguageTag(\"ja-JP-x-lvariant-kids\"); \/\/ test provider's supported locale\n+        Locale kids = new Locale(\"ja\", \"JP\", \"kids\"); \/\/ test provider's supported locale\n@@ -72,1 +72,1 @@\n-}\n+}\n\\ No newline at end of file\n","filename":"test\/jdk\/java\/util\/PluggableLocale\/CalendarDataProviderTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -74,1 +74,1 @@\n-        Locale kids = Locale.forLanguageTag(\"ja-JP-x-lvariant-kids\"); \/\/ test provider's supported locale\n+        Locale kids = new Locale(\"ja\", \"JP\", \"kids\"); \/\/ test provider's supported locale\n@@ -124,1 +124,1 @@\n-}\n+}\n\\ No newline at end of file\n","filename":"test\/jdk\/java\/util\/PluggableLocale\/CalendarNameProviderTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,1 +50,1 @@\n-        Locale OSAKA = Locale.forLanguageTag(\"ja-JP-x-lvariant-osaka\");\n+        Locale OSAKA = new Locale(\"ja\", \"JP\", \"osaka\");\n@@ -56,1 +56,1 @@\n-}\n+}\n\\ No newline at end of file\n","filename":"test\/jdk\/java\/util\/PluggableLocale\/ClasspathTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -83,1 +83,1 @@\n-        Collator def = Collator.getInstance(Locale.ROOT);\n+        Collator def = Collator.getInstance(new Locale(\"\"));\n@@ -119,1 +119,1 @@\n-}\n+}\n\\ No newline at end of file\n","filename":"test\/jdk\/java\/util\/PluggableLocale\/CollatorProviderTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -143,3 +143,3 @@\n-    final Locale OSAKA = Locale.forLanguageTag(\"ja-JP-x-lvariant-osaka\");\n-    final Locale KYOTO = Locale.forLanguageTag(\"ja-JP-x-lvariant-kyoto\");\n-    final Locale TOKYO = Locale.forLanguageTag(\"ja-JP-x-lvariant-tokyo\");\n+    final Locale OSAKA = new Locale(\"ja\", \"JP\", \"osaka\");\n+    final Locale KYOTO = new Locale(\"ja\", \"JP\", \"kyoto\");\n+    final Locale TOKYO = new Locale(\"ja\", \"JP\", \"tokyo\");\n@@ -188,1 +188,1 @@\n-}\n+}\n\\ No newline at end of file\n","filename":"test\/jdk\/java\/util\/PluggableLocale\/CurrencyNameProviderTest.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -152,3 +152,3 @@\n-        Locale[] testlocs = {Locale.forLanguageTag(\"ja-JP-x-lvariant-osaka-extended\"),\n-                             Locale.forLanguageTag(\"ja-JP-x-lvariant-osaka-extended-further\"),\n-                             Locale.forLanguageTag(\"ja-JP-x-lvariant-osaka-\")};\n+        Locale[] testlocs = {new Locale(\"ja\", \"JP\", \"osaka_extended\"),\n+                             new Locale(\"ja\", \"JP\", \"osaka_extended_further\"),\n+                             new Locale(\"ja\", \"JP\", \"osaka_\")};\n@@ -207,1 +207,1 @@\n-}\n+}\n\\ No newline at end of file\n","filename":"test\/jdk\/java\/util\/PluggableLocale\/DateFormatProviderTest.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -120,2 +120,2 @@\n-        Locale xx = Locale.forLanguageTag(\"xx\");\n-        Locale dispLocale = Locale.forLanguageTag(\"xx-YY-x-lvariant-ZZ\");\n+        Locale xx = new Locale(\"xx\");\n+        Locale dispLocale = new Locale (\"xx\", \"YY\", \"ZZ\");\n@@ -139,1 +139,1 @@\n-}\n+}\n\\ No newline at end of file\n","filename":"test\/jdk\/java\/util\/PluggableLocale\/GenericTest.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -126,2 +126,2 @@\n-        Locale YY = Locale.forLanguageTag(\"yy-YY-x-lvariant-YYYY\");\n-        Locale YY_suffix = Locale.forLanguageTag(\"yy-YY-x-lvariant-YYYY-suffix\");\n+        Locale YY = new Locale(\"yy\", \"YY\", \"YYYY\");\n+        Locale YY_suffix = new Locale(\"yy\", \"YY\", \"YYYY_suffix\");\n@@ -146,1 +146,1 @@\n-}\n+}\n\\ No newline at end of file\n","filename":"test\/jdk\/java\/util\/PluggableLocale\/LocaleNameProviderTest.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, Oracle and\/or its affiliates. All rights reserved.\n@@ -66,2 +66,2 @@\n-            Locale.forLanguageTag(\"ja-JP-x-lvariant-JP\"),\n-            Locale.forLanguageTag(\"th-TH-x-lvariant-TH\"),\n+            new Locale(\"ja\", \"JP\", \"JP\"),\n+            new Locale(\"th\", \"TH\", \"TH\"),\n","filename":"test\/jdk\/java\/util\/PluggableLocale\/SupportedLocalesTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -118,3 +118,3 @@\n-    final Locale OSAKA = Locale.forLanguageTag(\"ja-JP-x-lvariant-osaka\");\n-    final Locale KYOTO = Locale.forLanguageTag(\"ja-JP-x-lvariant-kyoto\");\n-    final Locale GENERIC = Locale.forLanguageTag(\"ja-JP-x-lvariant-generic\");\n+    final Locale OSAKA = new Locale(\"ja\", \"JP\", \"osaka\");\n+    final Locale KYOTO = new Locale(\"ja\", \"JP\", \"kyoto\");\n+    final Locale GENERIC = new Locale(\"ja\", \"JP\", \"generic\");\n@@ -273,1 +273,1 @@\n-}\n+}\n\\ No newline at end of file\n","filename":"test\/jdk\/java\/util\/PluggableLocale\/TimeZoneNameProviderTest.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n-        Locale.forLanguageTag(\"ja-JP-x-lvariant-kids\"),\n+        new Locale(\"ja\", \"JP\", \"kids\"),\n","filename":"test\/jdk\/java\/util\/PluggableLocale\/providersrc\/barprovider\/com\/bar\/CalendarDataProviderImpl.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n-        Locale.forLanguageTag(\"ja-JP-x-lvariant-kids\"),\n+        new Locale(\"ja\", \"JP\", \"kids\"),\n","filename":"test\/jdk\/java\/util\/PluggableLocale\/providersrc\/barprovider\/com\/bar\/CalendarNameProviderImpl.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,2 +35,2 @@\n-    static Locale[] avail = {Locale.forLanguageTag(\"ja-JP-x-lvariant-osaka\"),\n-        Locale.forLanguageTag(\"ja-JP-x-lvariant-kyoto\"),\n+    static Locale[] avail = {new Locale(\"ja\", \"JP\", \"osaka\"),\n+        new Locale(\"ja\", \"JP\", \"kyoto\"),\n@@ -38,1 +38,1 @@\n-        Locale.forLanguageTag(\"xx\")};\n+        new Locale(\"xx\")};\n","filename":"test\/jdk\/java\/util\/PluggableLocale\/providersrc\/barprovider\/com\/bar\/CurrencyNameProviderImpl.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,2 +35,2 @@\n-    static Locale[] avail = {Locale.forLanguageTag(\"ja-JP-x-lvariant-tokyo\"),\n-                             Locale.forLanguageTag(\"ja-JP-x-lvariant-osaka\"), };\n+    static Locale[] avail = {new Locale(\"ja\", \"JP\", \"tokyo\"),\n+                             new Locale(\"ja\", \"JP\", \"osaka\"), };\n","filename":"test\/jdk\/java\/util\/PluggableLocale\/providersrc\/barprovider\/com\/bar\/CurrencyNameProviderImpl2.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,2 +38,2 @@\n-    static final Locale jaJPGeneric = Locale.forLanguageTag(\"ja-JP-x-lvariant-generic\");\n-    static final Locale OSAKA = Locale.forLanguageTag(\"ja-JP-x-lvariant-osaka\");\n+    static final Locale jaJPGeneric = new Locale(\"ja\", \"JP\", \"generic\");\n+    static final Locale OSAKA = new Locale(\"ja\", \"JP\", \"osaka\");\n","filename":"test\/jdk\/java\/util\/PluggableLocale\/providersrc\/barprovider\/com\/bar\/GenericTimeZoneNameProviderImpl.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2012, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,4 +38,4 @@\n-                             Locale.forLanguageTag(\"ja-JP-x-lvariant-osaka\"),\n-                             Locale.forLanguageTag(\"ja-JP-x-lvariant-kyoto\"),\n-                             Locale.forLanguageTag(\"xx\"),\n-                             Locale.forLanguageTag(\"yy-YY-x-lvariant-YYYY\")};\n+                             new Locale(\"ja\", \"JP\", \"osaka\"),\n+                             new Locale(\"ja\", \"JP\", \"kyoto\"),\n+                             new Locale(\"xx\"),\n+                             new Locale(\"yy\", \"YY\", \"YYYY\")};\n","filename":"test\/jdk\/java\/util\/PluggableLocale\/providersrc\/barprovider\/com\/bar\/LocaleNameProviderImpl.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,3 +35,3 @@\n-    static Locale[] avail = {Locale.forLanguageTag(\"ja-JP-x-lvariant-osaka\"),\n-                        Locale.forLanguageTag(\"ja-JP-x-lvariant-kyoto\"),\n-                        Locale.forLanguageTag(\"xx\"),\n+    static Locale[] avail = {new Locale(\"ja\", \"JP\", \"osaka\"),\n+                        new Locale(\"ja\", \"JP\", \"kyoto\"),\n+                        new Locale(\"xx\"),\n","filename":"test\/jdk\/java\/util\/PluggableLocale\/providersrc\/barprovider\/com\/bar\/TimeZoneNameProviderImpl.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,3 +38,3 @@\n-        Locale.forLanguageTag(\"ja-JP-x-lvariant-osaka\"),\n-        Locale.forLanguageTag(\"ja-JP-x-lvariant-kyoto\"),\n-        Locale.forLanguageTag(\"xx-YY\")};\n+        new Locale(\"ja\", \"JP\", \"osaka\"),\n+        new Locale(\"ja\", \"JP\", \"kyoto\"),\n+        new Locale(\"xx\", \"YY\")};\n","filename":"test\/jdk\/java\/util\/PluggableLocale\/providersrc\/fooprovider\/com\/foo\/BreakIteratorProviderImpl.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,3 +39,3 @@\n-        Locale.forLanguageTag(\"ja-JP-x-lvariant-osaka\"),\n-        Locale.forLanguageTag(\"ja-JP-x-lvariant-kyoto\"),\n-        Locale.forLanguageTag(\"xx-YY-x-lvariant-ZZZZ\")};\n+        new Locale(\"ja\", \"JP\", \"osaka\"),\n+        new Locale(\"ja\", \"JP\", \"kyoto\"),\n+        new Locale(\"xx\", \"YY\", \"ZZZZ\")};\n","filename":"test\/jdk\/java\/util\/PluggableLocale\/providersrc\/fooprovider\/com\/foo\/CollatorProviderImpl.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2010, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,3 +39,3 @@\n-        Locale.forLanguageTag(\"ja-JP-x-lvariant-osaka\"),\n-        Locale.forLanguageTag(\"ja-JP-x-lvariant-kyoto\"),\n-        Locale.forLanguageTag(\"yy\")};\n+        new Locale(\"ja\", \"JP\", \"osaka\"),\n+        new Locale(\"ja\", \"JP\", \"kyoto\"),\n+        new Locale(\"yy\")};\n","filename":"test\/jdk\/java\/util\/PluggableLocale\/providersrc\/fooprovider\/com\/foo\/DateFormatProviderImpl.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2012, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,2 +38,2 @@\n-        Locale.forLanguageTag(\"ja-JP-x-lvariant-osaka\"),\n-        Locale.forLanguageTag(\"ja-JP-x-lvariant-kyoto\"),\n+        new Locale(\"ja\", \"JP\", \"osaka\"),\n+        new Locale(\"ja\", \"JP\", \"kyoto\"),\n@@ -41,1 +41,1 @@\n-        Locale.forLanguageTag(\"yy-ZZ\")\n+        new Locale(\"yy\", \"ZZ\")\n","filename":"test\/jdk\/java\/util\/PluggableLocale\/providersrc\/fooprovider\/com\/foo\/DateFormatSymbolsProviderImpl.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,2 +38,2 @@\n-        Locale.forLanguageTag(\"ja-JP-x-lvariant-osaka\"),\n-        Locale.forLanguageTag(\"ja-JP-x-lvariant-kyoto\"),\n+        new Locale(\"ja\", \"JP\", \"osaka\"),\n+        new Locale(\"ja\", \"JP\", \"kyoto\"),\n@@ -41,1 +41,1 @@\n-        Locale.forLanguageTag(\"yy-ZZ-x-lvariant-UUU\")\n+        new Locale(\"yy\", \"ZZ\", \"UUU\")\n","filename":"test\/jdk\/java\/util\/PluggableLocale\/providersrc\/fooprovider\/com\/foo\/DecimalFormatSymbolsProviderImpl.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2010, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,3 +39,3 @@\n-        Locale.forLanguageTag(\"ja-JP-x-lvariant-osaka\"),\n-        Locale.forLanguageTag(\"ja-JP-x-lvariant-kyoto\"),\n-        Locale.forLanguageTag(\"zz\")};\n+        new Locale(\"ja\", \"JP\", \"osaka\"),\n+        new Locale(\"ja\", \"JP\", \"kyoto\"),\n+        new Locale(\"zz\")};\n","filename":"test\/jdk\/java\/util\/PluggableLocale\/providersrc\/fooprovider\/com\/foo\/NumberFormatProviderImpl.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, Oracle and\/or its affiliates. All rights reserved.\n@@ -69,1 +69,1 @@\n-            ResourceBundle bundle = ResourceBundle.getBundle(bundleName, Locale.US));\n+            ResourceBundle bundle = ResourceBundle.getBundle(bundleName, new Locale(\"en\", \"US\"));\n","filename":"test\/jdk\/java\/util\/ResourceBundle\/Bug4165815Test.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2015, Oracle and\/or its affiliates. All rights reserved.\n@@ -64,1 +64,1 @@\n-        Locale.setDefault(Locale.US);\n+        Locale.setDefault(new Locale(\"en\", \"US\"));\n@@ -66,1 +66,1 @@\n-            final Locale loc = Locale.forLanguageTag(\"jf-jf\");\n+            final Locale loc = new Locale(\"jf\", \"jf\");\n@@ -90,1 +90,1 @@\n-     *  getBundle(\"Bug4168625Resource\", Locale.FRANCE);\n+     *  getBundle(\"Bug4168625Resource\", new Locale(\"fr\", \"FR\"));\n@@ -100,1 +100,1 @@\n-     *  getBundle(\"Bug4168625Resource\", Locale.FRANCE);\n+     *  getBundle(\"Bug4168625Resource\", new Locale(\"fr\", \"FR\"));\n@@ -115,1 +115,1 @@\n-     *  getBundle(\"Bug4168625Resource\", Locale.FRANCE);\n+     *  getBundle(\"Bug4168625Resource\", new Locale(\"fr\", \"FR\"));\n@@ -127,1 +127,1 @@\n-     *  getBundle(\"Bug4168625Resource\", Locale.FRANCE);\n+     *  getBundle(\"Bug4168625Resource\", new Locale(\"fr\", \"FR\"));\n@@ -135,1 +135,1 @@\n-        checkResourceLoading(\"Bug4168625Resource\", Locale.FRANCE);\n+        checkResourceLoading(\"Bug4168625Resource\", new Locale(\"fr\", \"FR\"));\n@@ -145,1 +145,1 @@\n-     *  getBundle(\"Bug4168625Resource\", Locale.US);\n+     *  getBundle(\"Bug4168625Resource\", new Locale(\"en\", \"US\"));\n@@ -161,1 +161,1 @@\n-     *  getBundle(\"Bug4168625Resource\", Locale.US);\n+     *  getBundle(\"Bug4168625Resource\", new Locale(\"en\", \"US\"));\n@@ -279,2 +279,2 @@\n-        ConcurrentLoadingThread thread1 = new ConcurrentLoadingThread(loader, test, Locale.CANADA);\n-        ConcurrentLoadingThread thread2 = new ConcurrentLoadingThread(loader, test, Locale.forLanguageTag(\"en-IE\"));\n+        ConcurrentLoadingThread thread1 = new ConcurrentLoadingThread(loader, test, new Locale(\"en\", \"CA\"));\n+        ConcurrentLoadingThread thread2 = new ConcurrentLoadingThread(loader, test, new Locale(\"en\", \"IE\"));\n@@ -309,1 +309,1 @@\n-        ConcurrentLoadingThread thread1 = new ConcurrentLoadingThread(loader, test, Locale.US);\n+        ConcurrentLoadingThread thread1 = new ConcurrentLoadingThread(loader, test, new Locale(\"en\", \"US\"));\n@@ -564,1 +564,1 @@\n-     *  ThreadA.getBundle(\"Bug4168625Resource\", Locale.forLanguageTag(\"sp\"));\n+     *  ThreadA.getBundle(\"Bug4168625Resource\", new Locale(\"sp\"));\n@@ -568,1 +568,1 @@\n-     *  ThreadB.getBundle(\"Bug4168625Resource\", Locale.forLanguageTag(\"sp\"));\n+     *  ThreadB.getBundle(\"Bug4168625Resource\", new Locale(\"sp\"));\n","filename":"test\/jdk\/java\/util\/ResourceBundle\/Bug4168625Test.java","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, Oracle and\/or its affiliates. All rights reserved.\n@@ -58,1 +58,1 @@\n-        Locale loc = Locale.forLanguageTag(\"jf\");\n+        Locale loc = new Locale(\"jf\", \"\");\n@@ -64,1 +64,1 @@\n-        loc = Locale.forLanguageTag(\"jf-JF\");\n+        loc = new Locale(\"jf\", \"JF\");\n","filename":"test\/jdk\/java\/util\/ResourceBundle\/Bug4177489Test.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,1 +46,1 @@\n-        ResourceBundle myResources = ResourceBundle.getBundle(\"RB4353454\", Locale.ROOT);\n+        ResourceBundle myResources = ResourceBundle.getBundle(\"RB4353454\", new Locale(\"\"));\n","filename":"test\/jdk\/java\/util\/ResourceBundle\/Bug4353454.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2011, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n-            Locale.setDefault(Locale.US);\n+            Locale.setDefault(new Locale(\"en\", \"US\"));\n@@ -43,1 +43,1 @@\n-            localeList.add(Locale.CANADA);\n+            localeList.add(new Locale(\"en\", \"CA\"));\n","filename":"test\/jdk\/java\/util\/ResourceBundle\/Bug6190861.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,1 +49,1 @@\n-    private static final Locale ru_RU = Locale.forLanguageTag(\"ru-RU\");\n+    private static final Locale ru_RU = new Locale(\"ru\", \"RU\");\n","filename":"test\/jdk\/java\/util\/ResourceBundle\/Bug6299235\/Bug6299235Test.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -144,4 +144,4 @@\n-        candidateData.put(Locale.forLanguageTag(\"ja-JP-x-lvariant-YOK\"), new Locale[] {\n-                              Locale.forLanguageTag(\"ja-JP-x-lvariant-YOK\"),\n-                              Locale.forLanguageTag(\"ja-JP\"),\n-                              Locale.forLanguageTag(\"ja\"),\n+        candidateData.put(new Locale(\"ja\", \"JP\", \"YOK\"), new Locale[] {\n+                              new Locale(\"ja\", \"JP\", \"YOK\"),\n+                              new Locale(\"ja\", \"JP\"),\n+                              new Locale(\"ja\"),\n@@ -149,3 +149,3 @@\n-        candidateData.put(Locale.forLanguageTag(\"ja-JP\"), new Locale[] {\n-                              Locale.forLanguageTag(\"ja-JP\"),\n-                              Locale.forLanguageTag(\"ja\"),\n+        candidateData.put(new Locale(\"ja\", \"JP\"), new Locale[] {\n+                              new Locale(\"ja\", \"JP\"),\n+                              new Locale(\"ja\"),\n@@ -153,2 +153,2 @@\n-        candidateData.put(Locale.forLanguageTag(\"ja\"), new Locale[] {\n-                              Locale.forLanguageTag(\"ja\"),\n+        candidateData.put(new Locale(\"ja\"), new Locale[] {\n+                              new Locale(\"ja\"),\n@@ -156,3 +156,4 @@\n-        candidateData.put(Locale.forLanguageTag(\"ja-x-lvariant-YOK\"), new Locale[] {\n-                              Locale.forLanguageTag(\"ja-x-lvariant-YOK\"),\n-                              Locale.forLanguageTag(\"ja\"),\n+\n+        candidateData.put(new Locale(\"ja\", \"\", \"YOK\"), new Locale[] {\n+                              new Locale(\"ja\", \"\", \"YOK\"),\n+                              new Locale(\"ja\"),\n@@ -160,3 +161,3 @@\n-        candidateData.put(Locale.forLanguageTag(\"und-JP-x-lvariant-YOK\"), new Locale[] {\n-                              Locale.forLanguageTag(\"und-JP-x-lvariant-YOK\"),\n-                              Locale.forLanguageTag(\"und-JP\"),\n+        candidateData.put(new Locale(\"\", \"JP\", \"YOK\"), new Locale[] {\n+                              new Locale(\"\", \"JP\", \"YOK\"),\n+                              new Locale(\"\", \"JP\"),\n@@ -164,2 +165,2 @@\n-        candidateData.put(Locale.forLanguageTag(\"und-x-lvariant-YOK\"), new Locale[] {\n-                              Locale.forLanguageTag(\"und-x-lvariant-YOK\"),\n+        candidateData.put(new Locale(\"\", \"\", \"YOK\"), new Locale[] {\n+                              new Locale(\"\", \"\", \"YOK\"),\n@@ -167,2 +168,2 @@\n-        candidateData.put(Locale.forLanguageTag(\"und-JP\"), new Locale[] {\n-                              Locale.forLanguageTag(\"und-JP\"),\n+        candidateData.put(new Locale(\"\", \"JP\"), new Locale[] {\n+                              new Locale(\"\", \"JP\"),\n@@ -356,14 +357,14 @@\n-        bundleNames.put(Locale.forLanguageTag(\"ja-JP-x-lvariant-YOK\"),\n-                        name + \"_ja_JP_YOK\");\n-        bundleNames.put(Locale.forLanguageTag(\"ja-JP\"),\n-                        name + \"_ja_JP\");\n-        bundleNames.put(Locale.forLanguageTag(\"ja\"),\n-                        name + \"_ja\");\n-        bundleNames.put(Locale.forLanguageTag(\"ja-x-lvariant-YOK\"),\n-                        name + \"_ja__YOK\");\n-        bundleNames.put(Locale.forLanguageTag(\"und-JP-x-lvariant-YOK\"),\n-                        name + \"__JP_YOK\");\n-        bundleNames.put(Locale.forLanguageTag(\"und-x-lvariant-YOK\"),\n-                        name + \"___YOK\");\n-        bundleNames.put(Locale.forLanguageTag(\"und-JP\"),\n-                        name + \"__JP\");\n+        bundleNames.put(new Locale(\"ja\", \"JP\", \"YOK\"),\n+                        name + \"_\" + \"ja\" + \"_\" + \"JP\" + \"_\" + \"YOK\");\n+        bundleNames.put(new Locale(\"ja\", \"JP\"),\n+                        name + \"_\" + \"ja\" + \"_\" + \"JP\");\n+        bundleNames.put(new Locale(\"ja\"),\n+                        name + \"_\" + \"ja\");\n+        bundleNames.put(new Locale(\"ja\", \"\", \"YOK\"),\n+                        name + \"_\" + \"ja\" + \"_\" + \"\" + \"_\" + \"YOK\");\n+        bundleNames.put(new Locale(\"\", \"JP\", \"YOK\"),\n+                        name + \"_\" + \"\" + \"_\" + \"JP\" + \"_\" + \"YOK\");\n+        bundleNames.put(new Locale(\"\", \"\", \"YOK\"),\n+                        name + \"_\" + \"\" + \"_\" + \"\" + \"_\" + \"YOK\");\n+        bundleNames.put(new Locale(\"\", \"JP\"),\n+                        name + \"_\" + \"\" + \"_\" + \"JP\");\n","filename":"test\/jdk\/java\/util\/ResourceBundle\/Control\/DefaultControlTest.java","additions":35,"deletions":34,"binary":false,"changes":69,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, Oracle and\/or its affiliates. All rights reserved.\n@@ -88,1 +88,1 @@\n-                                     Locale.ROOT);\n+                                     new Locale(\"\"));\n","filename":"test\/jdk\/java\/util\/ResourceBundle\/Control\/LoadingStrategiesTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2011, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-    static final Locale ROOT_LOCALE = Locale.ROOT;\n+    static final Locale ROOT_LOCALE = new Locale(\"\");\n","filename":"test\/jdk\/java\/util\/ResourceBundle\/Control\/StressTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, Oracle and\/or its affiliates. All rights reserved.\n@@ -79,1 +79,1 @@\n-        ResourceBundle rb = ResourceBundle.getBundle(\"XmlRB\", Locale.ROOT, xmlControl);\n+        ResourceBundle rb = ResourceBundle.getBundle(\"XmlRB\", new Locale(\"\"), xmlControl);\n","filename":"test\/jdk\/java\/util\/ResourceBundle\/Control\/XMLResourceBundleTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2017, Oracle and\/or its affiliates. All rights reserved.\n@@ -81,1 +81,1 @@\n-        Locale.setDefault(Locale.FRANCE);\n+        Locale.setDefault(new Locale(\"fr\", \"FR\"));\n@@ -139,1 +139,1 @@\n-                            Locale.forLanguageTag(\"be-BY\"),\n+                            new Locale(\"be\", \"BY\"),\n@@ -155,1 +155,1 @@\n-                            Locale.ITALY);\n+                            new Locale(\"it\", \"IT\"));\n@@ -213,1 +213,1 @@\n-                            Locale.forLanguageTag(\"es-ES\"));\n+                            new Locale(\"es\", \"ES\"));\n@@ -259,1 +259,1 @@\n-                        Locale.forLanguageTag(\"fr-CH\"));\n+                        new Locale(\"fr\", \"CH\", \"\"));\n@@ -266,1 +266,1 @@\n-                        Locale.forLanguageTag(\"fr-BE\"));\n+                        new Locale(\"fr\", \"BE\", \"\"));\n@@ -274,1 +274,1 @@\n-                        Locale.forLanguageTag(\"iw-IL\"),\n+                        new Locale(\"iw\", \"IL\", \"\"),\n@@ -318,1 +318,1 @@\n-                            Locale.ITALY);\n+                            new Locale(\"it\", \"IT\"));\n","filename":"test\/jdk\/java\/util\/ResourceBundle\/ResourceBundleTest.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2011, Oracle and\/or its affiliates. All rights reserved.\n@@ -60,4 +60,4 @@\n-        doTestCandidateOmission(\"und\", \"DE\", \"EURO\", new String[] {\"__DE\", \"\"});\n-        doTestCandidateOmission(\"und\", \"DE\", \"\", new String[] {\"__DE\", \"\"});\n-        doTestCandidateOmission(\"und\", \"\", \"EURO\", new String[] {\"___EURO\", \"\"});\n-        doTestCandidateOmission(\"und\", \"\", \"\", new String[] {\"\"});\n+        doTestCandidateOmission(\"\", \"DE\", \"EURO\", new String[] {\"__DE\", \"\"});\n+        doTestCandidateOmission(\"\", \"DE\", \"\", new String[] {\"__DE\", \"\"});\n+        doTestCandidateOmission(\"\", \"\", \"EURO\", new String[] {\"___EURO\", \"\"});\n+        doTestCandidateOmission(\"\", \"\", \"\", new String[] {\"\"});\n@@ -75,1 +75,1 @@\n-        Locale.setDefault(Locale.UK);\n+        Locale.setDefault(new Locale(\"en\", \"UK\"));\n@@ -90,4 +90,1 @@\n-        ResourceBundle bundle = ResourceBundle.getBundle(baseName, Locale.forLanguageTag(\n-                (language.isEmpty() ? \"und\" : language) +\n-                (country.isEmpty() ? \"\" : \"-\" + country) +\n-                (variant.isEmpty() ? \"\" : \"-x-lvariant-\" + variant)));\n+        ResourceBundle bundle = ResourceBundle.getBundle(baseName, new Locale(language, country, variant));\n","filename":"test\/jdk\/java\/util\/ResourceBundle\/Test4314141.java","additions":7,"deletions":10,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-              Locale.forLanguageTag(\"vi\"), Locale.forLanguageTag(\"in\"));\n+              new Locale(\"vi\"), new Locale(\"in\"));\n","filename":"test\/jdk\/java\/util\/ResourceBundle\/modules\/basic\/srcBasic\/asiabundles\/jdk\/test\/resources\/asia\/MyResourcesAsia.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,1 +35,1 @@\n-              Locale.GERMAN, Locale.FRENCH, Locale.forLanguageTag(\"es\"), Locale.forLanguageTag(\"yi\"));\n+              Locale.GERMAN, Locale.FRENCH, new Locale(\"es\"), new Locale(\"yi\"));\n","filename":"test\/jdk\/java\/util\/ResourceBundle\/modules\/basic\/srcBasic\/eubundles\/jdk\/test\/resources\/eu\/MyResourcesEU.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -1469,1 +1469,1 @@\n-            Locale locale = Locale.forLanguageTag(\"hi-IN\");\n+            Locale locale = new Locale(\"hi\",\"IN\");\n@@ -1488,1 +1488,1 @@\n-        Locale dummy = Locale.forLanguageTag(\"en-US-x-lvariant-dummy\");\n+        Locale dummy = new Locale(\"en\", \"US\", \"dummy\");\n","filename":"test\/jdk\/java\/util\/Scanner\/ScanTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,1 +47,1 @@\n-            testScannerUseLocale(\"-123,45\", Locale.forLanguageTag(\"fi-FI\"), -123.45);\n+            testScannerUseLocale(\"-123,45\", new Locale(\"fi\", \"FI\"), -123.45);\n","filename":"test\/jdk\/java\/util\/Scanner\/spi\/UseLocaleWithProvider.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,1 +32,1 @@\n-            Locale.GERMAN, Locale.forLanguageTag(\"fi-FI\")};\n+            Locale.GERMAN, new Locale(\"fi\", \"FI\")};\n","filename":"test\/jdk\/java\/util\/Scanner\/spi\/provider\/test\/NumberFormatProviderImpl.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, Oracle and\/or its affiliates. All rights reserved.\n@@ -118,1 +118,1 @@\n-        Set<Locale> locales = Set.of(Locale.forLanguageTag(\"zh-hant\"), Locale.forLanguageTag(\"no-NO-x-lvariant-NY\"));\n+        Set<Locale> locales = Set.of(Locale.forLanguageTag(\"zh-hant\"), new Locale(\"no\", \"NO\", \"NY\"));\n@@ -183,2 +183,2 @@\n-        Locale th_TH_TH = Locale.forLanguageTag(\"th-TH-x-lvariant-TH\");\n-        Locale th_TH = Locale.forLanguageTag(\"th-TH\");\n+        Locale th_TH_TH = new Locale(\"th\", \"TH\", \"TH\");\n+        Locale th_TH = new Locale(\"th\", \"TH\");\n","filename":"test\/jdk\/java\/util\/TimeZone\/Bug8167143.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2016, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,1 +39,1 @@\n-            Locale.setDefault(Locale.forLanguageTag(\"zh-HK\"));\n+            Locale.setDefault(new Locale(\"zh\", \"HK\"));\n","filename":"test\/jdk\/java\/util\/TimeZone\/HongKong.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2011, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,1 +40,1 @@\n-            Locale.setDefault(Locale.forLanguageTag(\"tr-TR\"));\n+            Locale.setDefault(new Locale(\"TR\", \"tr\"));\n","filename":"test\/jdk\/java\/util\/jar\/JarFile\/TurkCert.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2011, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,1 +40,1 @@\n-            Locale.setDefault(Locale.forLanguageTag(\"tr-TR\"));\n+            Locale.setDefault(new Locale(\"tr\", \"TR\"));\n","filename":"test\/jdk\/javax\/crypto\/Cipher\/Turkish.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -63,3 +63,3 @@\n-        Locale[] locales = {Locale.forLanguageTag(\"ru\"),\n-                            Locale.FRENCH,\n-                            Locale.forLanguageTag(\"uk\")};\n+        Locale[] locales = {new Locale(\"ru\"),\n+                            new Locale(\"fr\"),\n+                            new Locale(\"uk\")};\n@@ -69,1 +69,1 @@\n-        reader.setLocale(Locale.FRENCH);\n+        reader.setLocale(new Locale(\"fr\"));\n","filename":"test\/jdk\/javax\/imageio\/AppletResourceTest.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, Oracle and\/or its affiliates. All rights reserved.\n@@ -84,1 +84,1 @@\n-            Locale.setDefault(Locale.forLanguageTag(\"tr-TR\"));\n+            Locale.setDefault(new Locale(\"tr\", \"TR\"));\n","filename":"test\/jdk\/javax\/management\/loading\/MletParserLocaleTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,1 +47,1 @@\n-            Locale.setDefault(Locale.forLanguageTag(\"tr-TR\"));\n+            Locale.setDefault(new Locale(\"tr\", \"TR\"));\n","filename":"test\/jdk\/javax\/management\/modelmbean\/DescriptorSupportXMLLocaleTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,1 +47,1 @@\n-            Locale.setDefault(Locale.forLanguageTag(\"tr-TR\"));\n+            Locale.setDefault(new Locale(\"tr\", \"TR\"));\n","filename":"test\/jdk\/javax\/management\/remote\/mandatory\/connection\/JMXServiceURLLocaleTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,11 +49,11 @@\n-            Locale.ENGLISH,\n-            Locale.GERMAN,\n-            Locale.forLanguageTag(\"es\"),\n-            Locale.FRENCH,\n-            Locale.ITALIAN,\n-            Locale.JAPANESE,\n-            Locale.KOREAN,\n-            Locale.forLanguageTag(\"pt-BR\"),\n-            Locale.forLanguageTag(\"sv\"),\n-            Locale.SIMPLIFIED_CHINESE,\n-            Locale.TRADITIONAL_CHINESE\n+            new Locale(\"en\"),\n+            new Locale(\"de\"),\n+            new Locale(\"es\"),\n+            new Locale(\"fr\"),\n+            new Locale(\"it\"),\n+            new Locale(\"ja\"),\n+            new Locale(\"ko\"),\n+            new Locale(\"pt\", \"BR\"),\n+            new Locale(\"sv\"),\n+            new Locale(\"zh\", \"CN\"),\n+            new Locale(\"zh\", \"TW\")\n","filename":"test\/jdk\/javax\/swing\/JFileChooser\/8080628\/bug8080628.java","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -50,10 +50,10 @@\n-        Locale.GERMAN,\n-        Locale.forLanguageTag(\"es\"),\n-        Locale.FRENCH,\n-        Locale.ITALIAN,\n-        Locale.JAPANESE,\n-        Locale.KOREAN,\n-        Locale.forLanguageTag(\"pt-BR\"),\n-        Locale.forLanguageTag(\"sv\"),\n-        Locale.SIMPLIFIED_CHINESE,\n-        Locale.TRADITIONAL_CHINESE\n+        new Locale(\"de\"),\n+        new Locale(\"es\"),\n+        new Locale(\"fr\"),\n+        new Locale(\"it\"),\n+        new Locale(\"ja\"),\n+        new Locale(\"ko\"),\n+        new Locale(\"pt\", \"BR\"),\n+        new Locale(\"sv\"),\n+        new Locale(\"zh\", \"CN\"),\n+        new Locale(\"zh\", \"TW\")\n","filename":"test\/jdk\/javax\/swing\/JInternalFrame\/8020708\/bug8020708.java","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2010, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n-            Locale.setDefault(Locale.forLanguageTag(\"tr-TR\"));\n+            Locale.setDefault(new Locale(\"tr\", \"TR\"));\n","filename":"test\/jdk\/sun\/nio\/cs\/Test4206507.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -68,1 +68,1 @@\n-        Locale loc = Locale.US;\n+        Locale loc = new Locale(\"en\", \"US\");\n","filename":"test\/jdk\/sun\/security\/util\/Resources\/customSysClassLoader\/MessageFormatting.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2016, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,1 @@\n-                Locale loc = Locale.KOREA;\n+                Locale loc = new Locale(\"ko\",\"KR\");\n","filename":"test\/jdk\/sun\/text\/resources\/Format\/Bug4395196.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2016, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,1 +49,1 @@\n-        Locale zhTWloc = Locale.TAIWAN;\n+        Locale zhTWloc = new Locale(\"zh\", \"TW\");\n@@ -56,1 +56,1 @@\n-        Locale zhTWloc = Locale.TAIWAN;\n+        Locale zhTWloc = new Locale(\"zh\", \"TW\");\n","filename":"test\/jdk\/sun\/text\/resources\/Format\/Bug4442855.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2016, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n-        DateFormatSymbols dfs = new DateFormatSymbols(Locale.forLanguageTag(\"uk-UA\"));\n+        DateFormatSymbols dfs = new DateFormatSymbols(new Locale(\"uk\",\"UA\"));\n","filename":"test\/jdk\/sun\/text\/resources\/Format\/Bug4621320.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2016, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,1 +42,1 @@\n-                Locale loc = Locale.CHINA;\n+                Locale loc = new Locale(\"zh\",\"CN\");\n","filename":"test\/jdk\/sun\/text\/resources\/Format\/Bug4762201.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2016, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,1 +40,1 @@\n-        Locale si = Locale.forLanguageTag(\"sl-si\");\n+        Locale si = new Locale(\"sl\", \"si\");\n","filename":"test\/jdk\/sun\/text\/resources\/Format\/Bug4807540.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2016, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,1 +48,1 @@\n-      Locale dk = Locale.forLanguageTag(\"da-DK\");\n+      Locale dk = new Locale(\"da\", \"DK\");\n","filename":"test\/jdk\/sun\/text\/resources\/Format\/Bug5096553.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2016, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,1 @@\n-        final Locale esDO = Locale.forLanguageTag(\"es-DO\");\n+        final Locale esDO = new Locale(\"es\", \"DO\");\n","filename":"test\/jdk\/sun\/text\/resources\/Format\/Bug8037343.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2016, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,1 +40,1 @@\n-    private static Locale FINNISH = Locale.forLanguageTag(\"fi\");\n+    private static Locale FINNISH = new Locale(\"fi\");\n","filename":"test\/jdk\/sun\/text\/resources\/Format\/Bug8074791.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -344,4 +344,1 @@\n-                locale = Locale.forLanguageTag(\n-                    (language.isEmpty() ? \"und\" : language) +\n-                    (country.isEmpty() ? \"\" : \"-\" + country) +\n-                    (variant.isEmpty() ? \"\" : \"-x-lvariant-\" + variant));\n+                locale = new Locale(language, country, variant);\n","filename":"test\/jdk\/sun\/text\/resources\/LocaleDataTest.java","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n-        Calendar buddhist = Calendar.getInstance(Locale.forLanguageTag(\"th-TH\"));\n+        Calendar buddhist = Calendar.getInstance(new Locale(\"th\", \"TH\"));\n","filename":"test\/jdk\/sun\/util\/calendar\/Bug6653944.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2016, Oracle and\/or its affiliates. All rights reserved.\n@@ -67,1 +67,1 @@\n-        Locale newlocale = Locale.forLanguageTag(lang + \"-\" + loc);\n+        Locale newlocale = new Locale(lang, loc);\n","filename":"test\/jdk\/sun\/util\/resources\/Calendar\/Bug4518811.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2016, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n-        Calendar huCalendar = Calendar.getInstance(Locale.forLanguageTag(\"hu-HU\"));\n+        Calendar huCalendar = Calendar.getInstance(new Locale(\"hu\",\"HU\"));\n@@ -43,1 +43,1 @@\n-        Calendar ukCalendar = Calendar.getInstance(Locale.forLanguageTag(\"uk-UA\"));\n+        Calendar ukCalendar = Calendar.getInstance(new Locale(\"uk\",\"UA\"));\n","filename":"test\/jdk\/sun\/util\/resources\/Calendar\/Bug4527203.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2016, Oracle and\/or its affiliates. All rights reserved.\n@@ -113,1 +113,1 @@\n-            Locale fiLocale = Locale.forLanguageTag(\"fi-FI\");\n+            Locale fiLocale = new Locale(\"fi\", \"FI\");\n@@ -127,1 +127,1 @@\n-            Locale fiLocale = Locale.forLanguageTag(\"fi-FI\");\n+            Locale fiLocale = new Locale(\"fi\", \"FI\");\n","filename":"test\/jdk\/sun\/util\/resources\/Locale\/Bug4429024.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2016, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,5 +37,5 @@\n-        Locale.GERMAN,\n-        Locale.forLanguageTag(\"es\"),\n-        Locale.FRENCH,\n-        Locale.ITALIAN,\n-        Locale.forLanguageTag(\"sv\")\n+        new Locale(\"de\"),\n+        new Locale(\"es\"),\n+        new Locale(\"fr\"),\n+        new Locale(\"it\"),\n+        new Locale(\"sv\")\n@@ -61,1 +61,1 @@\n-            Locale dutch = Locale.forLanguageTag(\"nl-BE\");\n+            Locale dutch = new Locale(\"nl\", \"BE\");\n","filename":"test\/jdk\/sun\/util\/resources\/Locale\/Bug4965260.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2015, Oracle and\/or its affiliates. All rights reserved.\n@@ -66,9 +66,9 @@\n-        Locale.GERMAN,\n-        Locale.forLanguageTag(\"es\"),\n-        Locale.FRENCH,\n-        Locale.ITALIAN,\n-        Locale.JAPANESE,\n-        Locale.KOREAN,\n-        Locale.forLanguageTag(\"sv\"),\n-        Locale.SIMPLIFIED_CHINESE,\n-        Locale.TRADITIONAL_CHINESE\n+        new Locale(\"de\"),\n+        new Locale(\"es\"),\n+        new Locale(\"fr\"),\n+        new Locale(\"it\"),\n+        new Locale(\"ja\"),\n+        new Locale(\"ko\"),\n+        new Locale(\"sv\"),\n+        new Locale(\"zh\", \"CN\"),\n+        new Locale(\"zh\", \"TW\")\n","filename":"test\/jdk\/sun\/util\/resources\/TimeZone\/Bug4640234.java","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,0 +33,1 @@\n+import java.text.DateFormatSymbols;\n@@ -46,1 +47,1 @@\n-        Locale tzLocale = Locale.forLanguageTag(langName + \"-\" + locName);\n+        Locale tzLocale = new Locale(langName, locName);\n","filename":"test\/jdk\/sun\/util\/resources\/TimeZone\/Bug4848242.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,11 +37,11 @@\n-        Locale.ENGLISH,\n-        Locale.GERMAN,\n-        Locale.forLanguageTag(\"es\"),\n-        Locale.FRENCH,\n-        Locale.ITALIAN,\n-        Locale.JAPANESE,\n-        Locale.KOREAN,\n-        Locale.forLanguageTag(\"sv\"),\n-        Locale.SIMPLIFIED_CHINESE,\n-        Locale.TRADITIONAL_CHINESE\n-    };\n+        new Locale(\"en\"),\n+        new Locale(\"de\"),\n+        new Locale(\"es\"),\n+        new Locale(\"fr\"),\n+        new Locale(\"it\"),\n+        new Locale(\"ja\"),\n+        new Locale(\"ko\"),\n+        new Locale(\"sv\"),\n+        new Locale(\"zh\",\"CN\"),\n+        new Locale(\"zh\",\"TW\")\n+        };\n","filename":"test\/jdk\/sun\/util\/resources\/TimeZone\/Bug4858517.java","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2016, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,1 +39,1 @@\n-       Locale tzLocale = Locale.forLanguageTag(\"en-IE\");\n+       Locale tzLocale = new Locale(\"en\", \"IE\");\n","filename":"test\/jdk\/sun\/util\/resources\/TimeZone\/Bug4938846.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2016, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,1 +40,1 @@\n-        Locale tzLocale = Locale.FRENCH;\n+        Locale tzLocale = new Locale(\"fr\");\n@@ -55,1 +55,1 @@\n-        tzLocale = Locale.TRADITIONAL_CHINESE;\n+        tzLocale = new Locale(\"zh\", \"TW\");\n","filename":"test\/jdk\/sun\/util\/resources\/TimeZone\/Bug6271396.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2016, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,10 +37,10 @@\n-        Locale.ENGLISH,\n-        Locale.GERMAN,\n-        Locale.forLanguageTag(\"es\"),\n-        Locale.FRENCH,\n-        Locale.ITALIAN,\n-        Locale.JAPANESE,\n-        Locale.KOREAN,\n-        Locale.forLanguageTag(\"sv\"),\n-        Locale.SIMPLIFIED_CHINESE,\n-        Locale.TRADITIONAL_CHINESE\n+        new Locale(\"en\"),\n+        new Locale(\"de\"),\n+        new Locale(\"es\"),\n+        new Locale(\"fr\"),\n+        new Locale(\"it\"),\n+        new Locale(\"ja\"),\n+        new Locale(\"ko\"),\n+        new Locale(\"sv\"),\n+        new Locale(\"zh\",\"CN\"),\n+        new Locale(\"zh\",\"TW\")\n","filename":"test\/jdk\/sun\/util\/resources\/TimeZone\/Bug6317929.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2016, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,10 +37,10 @@\n-        Locale.ENGLISH,\n-        Locale.GERMAN,\n-        Locale.forLanguageTag(\"es\"),\n-        Locale.FRENCH,\n-        Locale.ITALIAN,\n-        Locale.JAPANESE,\n-        Locale.KOREAN,\n-        Locale.forLanguageTag(\"sv\"),\n-        Locale.SIMPLIFIED_CHINESE,\n-        Locale.TRADITIONAL_CHINESE\n+        new Locale(\"en\"),\n+        new Locale(\"de\"),\n+        new Locale(\"es\"),\n+        new Locale(\"fr\"),\n+        new Locale(\"it\"),\n+        new Locale(\"ja\"),\n+        new Locale(\"ko\"),\n+        new Locale(\"sv\"),\n+        new Locale(\"zh\",\"CN\"),\n+        new Locale(\"zh\",\"TW\")\n","filename":"test\/jdk\/sun\/util\/resources\/TimeZone\/Bug6377794.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2016, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,1 +40,1 @@\n-        Locale tzLocale = Locale.JAPANESE;\n+        Locale tzLocale = new Locale(\"ja\");\n","filename":"test\/jdk\/sun\/util\/resources\/TimeZone\/Bug6442006.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2015, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,1 +42,1 @@\n-        Locale.setDefault(Locale.forLanguageTag(\"tr-TR\"));\n+        Locale.setDefault(new Locale(\"tr\", \"TR\"));\n","filename":"test\/langtools\/tools\/javac\/util\/StringUtilsTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}