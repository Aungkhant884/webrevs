{"files":[{"patch":"@@ -78,1 +78,1 @@\n-            new Locale(\"\", \"\", \"\"), };\n+            Locale.ROOT, };\n","filename":"src\/demo\/share\/jfc\/CodePointIM\/com\/sun\/inputmethods\/internal\/codepointim\/CodePointInputMethodDescriptor.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -233,1 +233,1 @@\n- * <h3>Creating a Locale<\/h3>\n+ * <h3><a id=\"ObtainingLocale\">Obtaining a Locale<\/a><\/h3>\n@@ -235,1 +235,1 @@\n- * <p>There are several different ways to create a {@code Locale}\n+ * <p>There are several ways to obtain a {@code Locale}\n@@ -243,14 +243,0 @@\n- * <h4>Constructors<\/h4>\n- *\n- * <p>The {@code Locale} class provides three constructors:\n- * <blockquote>\n- * <pre>\n- *     {@link #Locale(String language)}\n- *     {@link #Locale(String language, String country)}\n- *     {@link #Locale(String language, String country, String variant)}\n- * <\/pre>\n- * <\/blockquote>\n- * These constructors allow you to create a {@code Locale} object\n- * with language, country and variant, but you cannot specify\n- * script or extensions.\n- *\n@@ -259,2 +245,5 @@\n- * <p>The method {@link #forLanguageTag} creates a {@code Locale}\n- * object for a well-formed BCP 47 language tag.\n+ * <p>The method {@link #forLanguageTag} obtains a {@code Locale}\n+ * object for a well-formed BCP 47 language tag. The method\n+ * {@link #of(String...)} obtains a {@code Locale} object from\n+ * given fields ({@code language}, {@code country}, {@code variant},\n+ * and\/or {@code script} defined above.\n@@ -265,8 +254,3 @@\n- * that you can use to create {@code Locale} objects for commonly used\n- * locales. For example, the following creates a {@code Locale} object\n- * for the United States:\n- * <blockquote>\n- * <pre>\n- *     Locale.US\n- * <\/pre>\n- * <\/blockquote>\n+ * that you can use to obtain {@code Locale} objects for commonly used\n+ * locales. For example, {@code Locale.US} is the {@code Locale} object\n+ * for the United States.\n@@ -347,1 +331,1 @@\n- * <p>Once you've created a {@code Locale} you can query it for information\n+ * <p>Once you've obtained a {@code Locale} you can query it for information\n@@ -390,1 +374,1 @@\n- * <p>In order to maintain compatibility with existing usage, Locale's\n+ * <p>In order to maintain compatibility, Locale's\n@@ -744,0 +728,3 @@\n+     * @deprecated Locale constructors have been deprecated. See <a href =\"#ObtainingLocale\">\n+     * Obtaining a Locale<\/a> for other options.\n+     *\n@@ -753,0 +740,1 @@\n+    @Deprecated(since=\"19\")\n@@ -774,0 +762,3 @@\n+     * @deprecated Locale constructors have been deprecated. See <a href=\"#ObtainingLocale\">\n+     * Obtaining a Locale<\/a> for other options.\n+     *\n@@ -781,0 +772,1 @@\n+    @Deprecated(since=\"19\")\n@@ -797,0 +789,3 @@\n+     * @deprecated Locale constructors have been deprecated. See <a href=\"#ObtainingLocale\">\n+     * Obtaining a Locale<\/a> for other options.\n+     *\n@@ -803,0 +798,1 @@\n+    @Deprecated(since=\"19\")\n@@ -807,0 +803,26 @@\n+    \/**\n+     * Returns a {@code Locale} obtained from the given\n+     * fields. Fields can take up to 4 arguments in the following order;\n+     * {@code Locale.of(}<a href=\"#def_language\">language<\/a>,\n+     * <a href=\"#def_region\">country<\/a>,\n+     * <a href=\"#def_variant\">variant<\/a>,\n+     * <a href=\"#def_script\">script<\/a>{@code )}.\n+     * Each field can be an empty String, but cannot be {@code null}.\n+     * If {@code fields} holds more than 4 arguments, the rest are ignored. If\n+     * no arguments are given, {@link #ROOT} is returned.\n+     *\n+     * @param fields language, country, variant, and\/or script, cannot be {@code null}.\n+     * @return the {@code Locale} instance requested\n+     * @throws    NullPointerException if any field argument is {@code null}.\n+     * @since 19\n+     *\/\n+    public static Locale of(String... fields) {\n+        return switch (fields.length) {\n+            case 0 -> ROOT;\n+            case 1 -> getInstance(fields[0], \"\", \"\", \"\", null);\n+            case 2 -> getInstance(fields[0], \"\", fields[1], \"\", null);\n+            case 3 -> getInstance(fields[0], \"\", fields[1], fields[2], null);\n+            default -> getInstance(fields[0], fields[3], fields[1], fields[2], null);\n+        };\n+    }\n+\n@@ -1141,1 +1163,1 @@\n-     * Can be used to create Locales.\n+     * Can be used to obtain Locales.\n@@ -1148,1 +1170,1 @@\n-     * codes that can be used to create Locales.\n+     * codes that can be used to obtain Locales.\n@@ -1181,1 +1203,1 @@\n-     * Can be used to create Locales.\n+     * Can be used to obtain Locales.\n@@ -1190,1 +1212,1 @@\n-     * not contain ALL valid codes that can be used to create Locales.\n+     * not contain ALL valid codes that can be used to obtain Locales.\n@@ -1523,1 +1545,1 @@\n-     * <p><b>Note:<\/b> Although the language tag created by this\n+     * <p><b>Note:<\/b> Although the language tag obtained by this\n@@ -1528,1 +1550,1 @@\n-     *   new Locale(\"xx\", \"YY\").toLanguageTag();<\/pre>\n+     *   Locale.forLanguageTag(\"xx-YY\").toLanguageTag();<\/pre>\n@@ -2513,1 +2535,1 @@\n-     * class.  A {@code Locale} object created by a {@code Builder} is\n+     * class.  A {@code Locale} object obtained from a {@code Builder} is\n@@ -2524,1 +2546,1 @@\n-     * object created this way might lose the variant information when\n+     * object obtained this way might lose the variant information when\n@@ -2527,2 +2549,2 @@\n-     * <p>The following example shows how to create a {@code Locale} object\n-     * with the {@code Builder}.\n+     * <p>The following example shows how to obtain a {@code Locale} object\n+     * using a {@code Builder}.\n@@ -2661,1 +2683,1 @@\n-         * <p>The country value in the {@code Locale} created by the\n+         * <p>The country value in the {@code Locale} obtained from a\n@@ -2834,1 +2856,1 @@\n-         * Returns an instance of {@code Locale} created from the fields set\n+         * Returns an instance of {@code Locale} obtained from the fields set\n","filename":"src\/java.base\/share\/classes\/java\/util\/Locale.java","additions":62,"deletions":40,"binary":false,"changes":102,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,4 +38,4 @@\n-    public static final Locale JA_JP_JP = new Locale(\"ja\", \"JP\", \"JP\");\n-    public static final Locale NO_NO_NY = new Locale(\"no\", \"NO\", \"NY\");\n-    public static final Locale TH_TH    = new Locale(\"th\", \"TH\");\n-    public static final Locale TH_TH_TH = new Locale(\"th\", \"TH\", \"TH\");\n+    public static final Locale JA_JP_JP = Locale.forLanguageTag(\"ja-JP-x-lvariant-JP\");\n+    public static final Locale NO_NO_NY = Locale.forLanguageTag(\"no-NO-x-lvariant-NY\");\n+    public static final Locale TH_TH    = Locale.forLanguageTag(\"th-TH\");\n+    public static final Locale TH_TH_TH = Locale.forLanguageTag(\"th-TH-x-lvariant-TH\");\n","filename":"src\/java.base\/share\/classes\/sun\/util\/locale\/provider\/JRELocaleConstants.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -372,1 +372,1 @@\n-                lookupLocale = new Locale(locale.getLanguage(), locale.getCountry(), locale.getVariant());\n+                lookupLocale = Locale.of(locale.getLanguage(), locale.getCountry(), locale.getVariant());\n","filename":"src\/java.base\/share\/classes\/sun\/util\/locale\/provider\/LocaleServiceProviderPool.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -249,1 +249,1 @@\n-            = Set.of(Locale.ROOT, Locale.ENGLISH, Locale.US, new Locale(\"en\", \"US\", \"POSIX\"));\n+            = Set.of(Locale.ROOT, Locale.ENGLISH, Locale.US, Locale.forLanguageTag(\"en-US-POSIX\"));\n","filename":"src\/java.base\/share\/classes\/sun\/util\/resources\/LocaleData.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1184,1 +1184,1 @@\n-            startupLocale = new Locale(language, country, variant);\n+            startupLocale = Locale.of(language, country, variant);\n","filename":"src\/java.desktop\/share\/classes\/sun\/awt\/SunToolkit.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -378,1 +378,1 @@\n-            Locale locale = new Locale(language, country, variant);\n+            Locale locale = Locale.of(language, country, variant);\n@@ -553,2 +553,2 @@\n-        if (preferredLocale.equals(new Locale(\"th\", \"TH\"))) {\n-            preferredLocale = new Locale(\"th\");\n+        if (preferredLocale.equals(Locale.of(\"th\", \"TH\"))) {\n+            preferredLocale = Locale.of(\"th\");\n@@ -626,4 +626,4 @@\n-            if (locator.isLocaleAvailable(new Locale(\"th\", \"TH\"))) {\n-                advertised = new Locale(\"th\", \"TH\");\n-            } else if (locator.isLocaleAvailable(new Locale(\"th\"))) {\n-                advertised = new Locale(\"th\");\n+            if (locator.isLocaleAvailable(Locale.of(\"th\", \"TH\"))) {\n+                advertised = Locale.of(\"th\", \"TH\");\n+            } else if (locator.isLocaleAvailable(Locale.of(\"th\"))) {\n+                advertised = Locale.of(\"th\");\n","filename":"src\/java.desktop\/share\/classes\/sun\/awt\/im\/ExecutableInputMethodManager.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -3469,1 +3469,1 @@\n-                    return new Locale(language, country, variant);\n+                    return Locale.of(language, country, variant);\n","filename":"src\/java.desktop\/share\/classes\/sun\/font\/SunFontManager.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -163,1 +163,1 @@\n-                new Locale(languageCode, countryCode)\n+                Locale.of(languageCode, countryCode)\n","filename":"src\/java.xml.crypto\/share\/classes\/com\/sun\/org\/apache\/xml\/internal\/security\/utils\/I18n.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-        return Collator.getInstance(new Locale(lang, country));\n+        return Collator.getInstance(Locale.of(lang, country));\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xalan\/internal\/xsltc\/dom\/CollatorFactoryBase.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -2428,1 +2428,1 @@\n-                    locale = new Locale(lang, country, variant);\n+                    locale = Locale.of(lang, country, variant);\n@@ -2430,1 +2430,1 @@\n-                    locale = new Locale(lang, country);\n+                    locale = Locale.of(lang, country);\n@@ -2433,1 +2433,1 @@\n-                locale = new Locale(lang);\n+                locale = Locale.of(lang);\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xerces\/internal\/jaxp\/datatype\/XMLGregorianCalendarImpl.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -81,1 +81,1 @@\n-        return new Locale(language, country, variant );\n+        return Locale.of(language, country, variant);\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xml\/internal\/utils\/LocaleUtility.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -278,1 +278,1 @@\n-                    return ResourceBundle.getBundle(bundle, new Locale(\"en\", \"US\"));\n+                    return ResourceBundle.getBundle(bundle, Locale.US);\n","filename":"src\/java.xml\/share\/classes\/jdk\/xml\/internal\/SecuritySupport.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -144,3 +144,3 @@\n-    private static final Locale jaJPJP = new Locale(\"ja\", \"JP\", \"JP\");\n-    private static final Locale noNONY = new Locale(\"no\", \"NO\", \"NY\");\n-    private static final Locale thTHTH = new Locale(\"th\", \"TH\", \"TH\");\n+    private static final Locale jaJPJP = Locale.of(\"ja\", \"JP\", \"JP\");\n+    private static final Locale noNONY = Locale.of(\"no\", \"NO\", \"NY\");\n+    private static final Locale thTHTH = Locale.of(\"th\", \"TH\", \"TH\");\n","filename":"src\/jdk.jlink\/share\/classes\/jdk\/tools\/jlink\/internal\/plugins\/IncludeLocalesPlugin.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}