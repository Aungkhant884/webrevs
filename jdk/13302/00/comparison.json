{"files":[{"patch":"@@ -123,2 +123,1 @@\n- * <p>\n- * Java Runtime Environment provides the following four locale providers:\n+ * @implNote Java Runtime Environment provides the following four locale providers:\n@@ -129,1 +128,2 @@\n- * with the prior JDK releases up to JDK8 (same as JDK8's \"JRE\").\n+ * with the prior JDK releases up to JDK 8 (same as JDK 8's \"JRE\"). This\n+ * provider is deprecated and will be removed in the future release of JDK.\n","filename":"src\/java.base\/share\/classes\/java\/util\/spi\/LocaleServiceProvider.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,0 @@\n-import java.util.Arrays;\n@@ -128,0 +127,1 @@\n+        String compatWarningMessage = null;\n@@ -134,1 +134,2 @@\n-                if (type.equals(\"COMPAT\")) {\n+                if (type.equals(\"COMPAT\") || type.equals(\"JRE\")) {\n+                    compatWarningMessage = \"COMPAT locale provider will be removed in a future release\";\n@@ -172,0 +173,4 @@\n+        if (compatWarningMessage != null) {\n+            getLogger(LocaleProviderAdapter.class.getCanonicalName())\n+                .log(Logger.Level.WARNING, compatWarningMessage);\n+        }\n","filename":"src\/java.base\/share\/classes\/sun\/util\/locale\/provider\/LocaleProviderAdapter.java","additions":8,"deletions":3,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -0,0 +1,76 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8304982\n+ * @summary Check if a warning is logged with COMPAT locale provider\n+ * @run main\/othervm -Djava.locale.providers=COMPAT CompatWarning\n+ * @run main\/othervm -Djava.locale.providers=JRE CompatWarning\n+ *\/\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.text.DateFormat;\n+import java.util.logging.Handler;\n+import java.util.logging.Level;\n+import java.util.logging.LogRecord;\n+\n+public class CompatWarning {\n+    private static final String WARNING =\n+            \"COMPAT locale provider will be removed in a future release\";\n+    private static boolean logged;\n+\n+    public static void main(String[] args) throws Throwable {\n+        File conf = new File(System.getProperty(\"test.src\", \".\/src\"), \"compatlog.properties\");\n+        if (!conf.canRead()) {\n+            throw new IOException(\"Can't read config file: \" + conf.getAbsolutePath());\n+        }\n+        System.setProperty(\"java.util.logging.config.file\", conf.getAbsolutePath());\n+        DateFormat.getInstance();\n+        if (!logged) {\n+            throw new RuntimeException(\"COMPAT warning message was not emitted\");\n+        }\n+    }\n+\n+    public static class CheckWarning extends Handler {\n+        @Override\n+        public void publish(LogRecord record) {\n+            var level = record.getLevel();\n+            var msg = record.getMessage();\n+            System.out.printf(\"\"\"\n+                LogRecord emitted:\n+                    Level: %s\n+                    Message: %s\n+                \"\"\", level, msg);\n+            if (level == Level.WARNING && WARNING.equals(msg)) {\n+                logged = true;\n+            }\n+        }\n+\n+        @Override\n+        public void flush() {}\n+        @Override\n+        public void close() throws SecurityException {}\n+    }\n+}\n","filename":"test\/jdk\/java\/util\/Locale\/CompatWarning.java","additions":76,"deletions":0,"binary":false,"changes":76,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2016, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,1 +24,1 @@\n-JVM_handle_bsd_signal\n+handlers=CompatWarning$CheckWarning\n","filename":"test\/jdk\/java\/util\/Locale\/compatlog.properties","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"make\/data\/hotspot-symbols\/symbols-macosx","status":"copied"}]}