{"files":[{"patch":"@@ -49,18 +49,0 @@\n-void Space::initialize(MemRegion mr,\n-                       bool clear_space,\n-                       bool mangle_space) {\n-  HeapWord* bottom = mr.start();\n-  HeapWord* end    = mr.end();\n-  assert(Universe::on_page_boundary(bottom) && Universe::on_page_boundary(end),\n-         \"invalid space boundaries\");\n-  set_bottom(bottom);\n-  set_end(end);\n-  if (clear_space) clear(mangle_space);\n-}\n-\n-void Space::clear(bool mangle_space) {\n-  if (ZapUnusedHeapArea && mangle_space) {\n-    mangle_unused_area();\n-  }\n-}\n-\n@@ -82,2 +64,10 @@\n-  Space::initialize(mr, clear_space, mangle_space);\n-  set_compaction_top(bottom());\n+  HeapWord* bottom = mr.start();\n+  HeapWord* end    = mr.end();\n+  assert(Universe::on_page_boundary(bottom) && Universe::on_page_boundary(end),\n+         \"invalid space boundaries\");\n+  set_bottom(bottom);\n+  set_end(end);\n+  if (clear_space) {\n+    clear(mangle_space);\n+  }\n+  set_compaction_top(bottom);\n@@ -90,1 +80,3 @@\n-  Space::clear(mangle_space);\n+  if (ZapUnusedHeapArea && mangle_space) {\n+    mangle_unused_area();\n+  }\n","filename":"src\/hotspot\/share\/gc\/shared\/space.cpp","additions":13,"deletions":21,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -115,11 +115,0 @@\n-  \/\/ Initialization.\n-  \/\/ \"initialize\" should be called once on a space, before it is used for\n-  \/\/ any purpose.  The \"mr\" arguments gives the bounds of the space, and\n-  \/\/ the \"clear_space\" argument should be true unless the memory in \"mr\" is\n-  \/\/ known to be zeroed.\n-  virtual void initialize(MemRegion mr, bool clear_space, bool mangle_space);\n-\n-  \/\/ The \"clear\" method must be called on a region that may have\n-  \/\/ had allocation performed in it, but is now to be considered empty.\n-  virtual void clear(bool mangle_space);\n-\n@@ -267,1 +256,6 @@\n-  void initialize(MemRegion mr, bool clear_space, bool mangle_space) override;\n+  \/\/ Initialization.\n+  \/\/ \"initialize\" should be called once on a space, before it is used for\n+  \/\/ any purpose.  The \"mr\" arguments gives the bounds of the space, and\n+  \/\/ the \"clear_space\" argument should be true unless the memory in \"mr\" is\n+  \/\/ known to be zeroed.\n+  void initialize(MemRegion mr, bool clear_space, bool mangle_space);\n@@ -269,1 +263,3 @@\n-  void clear(bool mangle_space) override;\n+  \/\/ The \"clear\" method must be called on a region that may have\n+  \/\/ had allocation performed in it, but is now to be considered empty.\n+  virtual void clear(bool mangle_space);\n","filename":"src\/hotspot\/share\/gc\/shared\/space.hpp","additions":9,"deletions":13,"binary":false,"changes":22,"status":"modified"}]}