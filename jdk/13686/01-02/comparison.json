{"files":[{"patch":"@@ -42,0 +42,2 @@\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n@@ -365,2 +367,1 @@\n-                    String fileName = entry.getFileName().toString();\n-                    if (fileName.startsWith(\"jquery\") && !includeJQuery) {\n+                    if (entry.getFileName().toString().startsWith(\"jquery\") && !includeJQuery) {\n@@ -369,1 +370,1 @@\n-                    DocPath filePath = DocPaths.LEGAL.resolve(fileName);\n+                    DocPath filePath = DocPaths.LEGAL.resolve(entry.getFileName().toString());\n@@ -371,4 +372,11 @@\n-                    if (isDefault && (\"LICENSE\".equals(fileName) || \"ASSEMBLY_EXCEPTION\".equals(fileName) || \"ADDITIONAL_LICENSE_INFO\".equals(fileName))) {\n-                        df.copyFile(DocFile.createFileForInput(configuration, entry.resolve(\"..\").resolve(\"..\").resolve(\"java.base\").resolve(fileName)));\n-                    } else {\n-                        df.copyFile(DocFile.createFileForInput(configuration, entry));\n+                    if (isDefault) {\n+                        Pattern pattern = Pattern.compile(\"Please see (.*)\\\\R\"); \/\/ follow jlink descriptive links\n+                        Matcher matcher = pattern.matcher(Files.readString(entry));\n+                        if (matcher.find()) {\n+                            try {\n+                                Path descriptive_link = entry.getParent().resolve(matcher.group(1));\n+                                if (Files.isRegularFile(descriptive_link)) {\n+                                    entry = descriptive_link;\n+                                }\n+                            } catch(InvalidPathException e) {}\n+                        }\n@@ -376,0 +384,1 @@\n+                    df.copyFile(DocFile.createFileForInput(configuration, entry));\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlDoclet.java","additions":16,"deletions":7,"binary":false,"changes":23,"status":"modified"}]}