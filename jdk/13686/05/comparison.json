{"files":[{"patch":"@@ -42,0 +42,2 @@\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n@@ -338,0 +340,1 @@\n+        boolean isDefault = false;\n@@ -342,0 +345,1 @@\n+                isDefault = true;\n@@ -370,0 +374,12 @@\n+                    if (isDefault) {\n+                        Pattern pattern = Pattern.compile(\"Please see (.*)\\\\R\"); \/\/ follow jlink descriptive links\n+                        Matcher matcher = pattern.matcher(Files.readString(entry));\n+                        if (matcher.find()) {\n+                            try {\n+                                Path descriptive_link = entry.getParent().resolve(matcher.group(1));\n+                                if (Files.isRegularFile(descriptive_link)) {\n+                                    entry = descriptive_link;\n+                                }\n+                            } catch (InvalidPathException e) {}\n+                        }\n+                    }\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlDoclet.java","additions":16,"deletions":0,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 8259530\n+ * @bug 8259530 8306980\n@@ -39,0 +39,1 @@\n+import java.util.Arrays;\n@@ -112,1 +113,16 @@\n-        if (foundFiles.equals(expectFiles)) {\n+        boolean passed = true;\n+        for (Path expectFile : expectFiles) {\n+            boolean matched = false;\n+            for (Path foundFile : foundFiles) {\n+                if (!expectFile.getFileName().equals(foundFile.getFileName())) {\n+                    continue;\n+                }\n+                matched = Arrays.equals(Files.readAllBytes(expectFile), Files.readAllBytes(foundFile));\n+                break;\n+            }\n+            if (!matched) {\n+                super.out.println(\"Not Matched: \" + expectFile);\n+                passed = false;\n+            }\n+        }\n+        if (passed) {\n@@ -120,0 +136,2 @@\n+                String reg = \"LICENSE|ASSEMBLY_EXCEPTION|ADDITIONAL_LICENSE_INFO\";\n+                Set<Path> files = new TreeSet<>();\n@@ -121,6 +139,9 @@\n-                Path legal_javadoc = javaHome.resolve(\"legal\").resolve(\"jdk.javadoc\");\n-                return listFiles(legal_javadoc, p ->\n-                        switch (indexKind) {\n-                            case INDEX -> true;\n-                            case NO_INDEX -> !p.getFileName().toString().contains(\"jquery\");\n-                        });\n+                Path legal_javadoc = javaHome.resolve(\"legal\").resolve(\"java.base\");\n+                files = listFiles(legal_javadoc, p -> p.getFileName().toString().matches(reg));\n+                legal_javadoc = javaHome.resolve(\"legal\").resolve(\"jdk.javadoc\");\n+                files.addAll(listFiles(legal_javadoc, p ->\n+                              switch (indexKind) {\n+                                  case INDEX -> !p.getFileName().toString().matches(reg);\n+                                  case NO_INDEX -> !p.getFileName().toString().matches(reg + \"|.*jquery.*\");\n+                              }));\n+                return files;\n@@ -153,1 +174,1 @@\n-                    files.add(p.getFileName());\n+                    files.add(p);\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testLegalNotices\/TestLegalNotices.java","additions":31,"deletions":10,"binary":false,"changes":41,"status":"modified"}]}