{"files":[{"patch":"@@ -336,0 +336,1 @@\n+        boolean isDefault = false;\n@@ -340,0 +341,1 @@\n+                isDefault = true;\n@@ -363,1 +365,2 @@\n-                    if (entry.getFileName().toString().startsWith(\"jquery\") && !includeJQuery) {\n+                    String fileName = entry.getFileName().toString();\n+                    if (fileName.startsWith(\"jquery\") && !includeJQuery) {\n@@ -366,1 +369,1 @@\n-                    DocPath filePath = DocPaths.LEGAL.resolve(entry.getFileName().toString());\n+                    DocPath filePath = DocPaths.LEGAL.resolve(fileName);\n@@ -368,1 +371,5 @@\n-                    df.copyFile(DocFile.createFileForInput(configuration, entry));\n+                    if (isDefault && (\"LICENSE\".equals(fileName) || \"ASSEMBLY_EXCEPTION\".equals(fileName) || \"ADDITIONAL_LICENSE_INFO\".equals(fileName))) {\n+                        df.copyFile(DocFile.createFileForInput(configuration, entry.resolve(\"..\").resolve(\"..\").resolve(\"java.base\").resolve(fileName)));\n+                    } else {\n+                        df.copyFile(DocFile.createFileForInput(configuration, entry));\n+                    }\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlDoclet.java","additions":10,"deletions":3,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 8259530\n+ * @bug 8259530 8306980\n@@ -35,0 +35,1 @@\n+import java.io.File;\n@@ -39,0 +40,1 @@\n+import java.util.Arrays;\n@@ -106,2 +108,2 @@\n-        Set<Path> expectFiles = getExpectFiles(optionKind, indexKind, legal);\n-        Set<Path> foundFiles = listFiles(out.resolve(\"legal\"));\n+        Set<File> expectFiles = getExpectFiles(optionKind, indexKind, legal);\n+        Set<File> foundFiles = listFiles(out.resolve(\"legal\"));\n@@ -112,1 +114,16 @@\n-        if (foundFiles.equals(expectFiles)) {\n+        boolean passed = true;\n+        for (File expectFile : expectFiles) {\n+            boolean matched = false;\n+            for (File foundFile : foundFiles) {\n+                if (!expectFile.getName().equals(foundFile.getName())) {\n+                    continue;\n+                }\n+                matched = Arrays.equals(Files.readAllBytes(expectFile.toPath()), Files.readAllBytes(foundFile.toPath()));\n+                break;\n+            }\n+            if (!matched) {\n+                super.out.println(\"Not Matched: \" + expectFile.getName());\n+                passed = false;\n+            }\n+        }\n+        if (passed) {\n@@ -117,1 +134,1 @@\n-    Set<Path> getExpectFiles(OptionKind optionKind, IndexKind indexKind, Path legal) throws IOException {\n+    Set<File> getExpectFiles(OptionKind optionKind, IndexKind indexKind, Path legal) throws IOException {\n@@ -120,0 +137,2 @@\n+                String reg = \"LICENSE|ASSEMBLY_EXCEPTION|ADDITIONAL_LICENSE_INFO\";\n+                Set<File> files = new TreeSet<>();\n@@ -121,6 +140,9 @@\n-                Path legal_javadoc = javaHome.resolve(\"legal\").resolve(\"jdk.javadoc\");\n-                return listFiles(legal_javadoc, p ->\n-                        switch (indexKind) {\n-                            case INDEX -> true;\n-                            case NO_INDEX -> !p.getFileName().toString().contains(\"jquery\");\n-                        });\n+                Path legal_javadoc = javaHome.resolve(\"legal\").resolve(\"java.base\");\n+                files = listFiles(legal_javadoc, p -> p.getFileName().toString().matches(reg));\n+                legal_javadoc = javaHome.resolve(\"legal\").resolve(\"jdk.javadoc\");\n+                files.addAll(listFiles(legal_javadoc, p ->\n+                              switch (indexKind) {\n+                                  case INDEX -> !p.getFileName().toString().matches(reg);\n+                                  case NO_INDEX -> !p.getFileName().toString().matches(reg + \"|.*jquery.*\");\n+                              }));\n+                return files;\n@@ -140,1 +162,1 @@\n-    Set<Path> listFiles(Path dir) throws IOException {\n+    Set<File> listFiles(Path dir) throws IOException {\n@@ -144,1 +166,1 @@\n-    Set<Path> listFiles(Path dir, Predicate<Path> filter) throws IOException {\n+    Set<File> listFiles(Path dir, Predicate<Path> filter) throws IOException {\n@@ -150,1 +172,1 @@\n-            Set<Path> files = new TreeSet<>();\n+            Set<File> files = new TreeSet<>();\n@@ -153,1 +175,1 @@\n-                    files.add(p.getFileName());\n+                    files.add(p.toFile());\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testLegalNotices\/TestLegalNotices.java","additions":38,"deletions":16,"binary":false,"changes":54,"status":"modified"}]}