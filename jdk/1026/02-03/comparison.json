{"files":[{"patch":"@@ -199,3 +199,4 @@\n-     * safely reused as the List's internal storage, avoiding a defensive copy. Declared\n-     * with Object... instead of E... as the parameter type so that varargs calls don't\n-     * accidentally create an array of type other than Object[].\n+     * safely reused as the List's internal storage, avoiding a defensive copy. The array's\n+     * class must be Object[].class. This method is declared with a parameter type of\n+     * Object... instead of E... so that a varargs call doesn't accidentally create an array\n+     * of some class other than Object[].class.\n@@ -209,0 +210,1 @@\n+        assert input.getClass() == Object[].class;\n@@ -213,10 +215,6 @@\n-        switch (input.length) {\n-            case 0:\n-                return (List<E>) ImmutableCollections.EMPTY_LIST;\n-            case 1:\n-                return (List<E>) new List12<>(input[0]);\n-            case 2:\n-                return (List<E>) new List12<>(input[0], input[1]);\n-            default:\n-                return (List<E>) new ListN<>(input, false);\n-        }\n+        return switch (input.length) {\n+            case 0  -> (List<E>) ImmutableCollections.EMPTY_LIST;\n+            case 1  -> (List<E>) new List12<>(input[0]);\n+            case 2  -> (List<E>) new List12<>(input[0], input[1]);\n+            default -> (List<E>) new ListN<>(input, false);\n+        };\n@@ -229,3 +227,4 @@\n-     * safely reused as the List's internal storage, avoiding a defensive copy. Declared\n-     * with Object... instead of E... as the parameter type so that varargs calls don't\n-     * accidentally create an array of type other than Object[].\n+     * safely reused as the List's internal storage, avoiding a defensive copy. The array's\n+     * class must be Object[].class. This method is declared with a parameter type of\n+     * Object... instead of E... so that a varargs call doesn't accidentally create an array\n+     * of some class other than Object[].class.\n@@ -241,0 +240,1 @@\n+        assert input.getClass() == Object[].class;\n","filename":"src\/java.base\/share\/classes\/java\/util\/ImmutableCollections.java","additions":16,"deletions":16,"binary":false,"changes":32,"status":"modified"}]}