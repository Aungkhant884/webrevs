{"files":[{"patch":"@@ -163,0 +163,5 @@\n+enum return_state_t {\n+  does_not_return, requires_return\n+};\n+\n+\n@@ -168,1 +173,1 @@\n-  bool _does_not_return;\n+  bool _return_state;\n@@ -171,1 +176,1 @@\n-  StubFrame(StubAssembler* sasm, const char* name, bool must_gc_arguments, bool does_not_return=false);\n+  StubFrame(StubAssembler* sasm, const char* name, bool must_gc_arguments, return_state_t return_state=requires_return);\n@@ -189,1 +194,1 @@\n-StubFrame::StubFrame(StubAssembler* sasm, const char* name, bool must_gc_arguments, bool does_not_return) {\n+StubFrame::StubFrame(StubAssembler* sasm, const char* name, bool must_gc_arguments, return_state_t return_state) {\n@@ -191,1 +196,1 @@\n-  _does_not_return = does_not_return;\n+  _return_state = return_state;\n@@ -202,3 +207,1 @@\n-  if (_does_not_return) {\n-    __ should_not_reach_here();\n-  } else {\n+  if (_return_state == requires_return) {\n@@ -206,0 +209,2 @@\n+  } else {\n+    __ should_not_reach_here();\n@@ -441,2 +446,0 @@\n-  \/\/      Move it out of the way to the return register.\n-  __ mov(lr, r0);\n@@ -444,2 +447,5 @@\n-  \/\/ All registers have been destroyed by the runtime call\n-  __ invalidate_registers(true, true, true, true, true, true);\n+  \/\/ only r0 is valid at this time, all other registers have been destroyed by the runtime call\n+  __ invalidate_registers(false, true, true, true, true, true);\n+\n+  \/\/ patch the return address, this stub will directly return to the exception handler\n+  __ str(r0, Address(rfp, 1*BytesPerWord));\n@@ -459,5 +465,0 @@\n-  \/\/ leave() the current frame, without changing the lr\n-  __ mov(sp, rfp);\n-  __ ldr(rfp, Address(__ post(sp, 2 * wordSize)));\n-\n-  __ ret(lr);\n@@ -607,1 +608,0 @@\n-  const bool does_not_return = true;\n@@ -618,0 +618,1 @@\n+      {\n@@ -619,0 +620,3 @@\n+        __ leave();\n+        __ ret(lr);\n+      }\n@@ -1042,1 +1046,1 @@\n-      { StubFrame f(sasm, \"handle_exception\", dont_gc_arguments, does_not_return);\n+      { StubFrame f(sasm, \"handle_exception\", dont_gc_arguments);\n@@ -1048,1 +1052,1 @@\n-      { StubFrame f(sasm, \"handle_exception_from_callee\", dont_gc_arguments, does_not_return);\n+      { StubFrame f(sasm, \"handle_exception_from_callee\", dont_gc_arguments);\n","filename":"src\/hotspot\/cpu\/aarch64\/c1_Runtime1_aarch64.cpp","additions":23,"deletions":19,"binary":false,"changes":42,"status":"modified"}]}