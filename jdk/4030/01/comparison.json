{"files":[{"patch":"@@ -163,0 +163,5 @@\n+enum return_state_t {\n+  does_not_return, requires_return\n+};\n+\n+\n@@ -168,0 +173,1 @@\n+  bool _return_state;\n@@ -170,1 +176,1 @@\n-  StubFrame(StubAssembler* sasm, const char* name, bool must_gc_arguments);\n+  StubFrame(StubAssembler* sasm, const char* name, bool must_gc_arguments, return_state_t return_state=requires_return);\n@@ -188,1 +194,1 @@\n-StubFrame::StubFrame(StubAssembler* sasm, const char* name, bool must_gc_arguments) {\n+StubFrame::StubFrame(StubAssembler* sasm, const char* name, bool must_gc_arguments, return_state_t return_state) {\n@@ -190,0 +196,1 @@\n+  _return_state = return_state;\n@@ -199,1 +206,0 @@\n-\n@@ -201,1 +207,5 @@\n-  __ epilogue();\n+  if (_return_state == requires_return) {\n+    __ epilogue();\n+  } else {\n+    __ should_not_reach_here();\n+  }\n@@ -348,2 +358,0 @@\n-\n-  __ should_not_reach_here();\n@@ -398,3 +406,1 @@\n-  default:\n-    __ should_not_reach_here();\n-    break;\n+  default: ShouldNotReachHere();\n@@ -455,3 +461,0 @@\n-    \/\/ Pop the return address.\n-    __ leave();\n-    __ ret(lr);  \/\/ jump to exception handler\n@@ -623,1 +626,1 @@\n-      { StubFrame f(sasm, \"throw_div0_exception\", dont_gc_arguments);\n+      { StubFrame f(sasm, \"throw_div0_exception\", dont_gc_arguments, does_not_return);\n@@ -629,1 +632,1 @@\n-      { StubFrame f(sasm, \"throw_null_pointer_exception\", dont_gc_arguments);\n+      { StubFrame f(sasm, \"throw_null_pointer_exception\", dont_gc_arguments, does_not_return);\n@@ -884,1 +887,1 @@\n-      { StubFrame f(sasm, \"throw_class_cast_exception\", dont_gc_arguments);\n+      { StubFrame f(sasm, \"throw_class_cast_exception\", dont_gc_arguments, does_not_return);\n@@ -890,1 +893,1 @@\n-      { StubFrame f(sasm, \"throw_incompatible_class_cast_exception\", dont_gc_arguments);\n+      { StubFrame f(sasm, \"throw_incompatible_class_cast_exception\", dont_gc_arguments, does_not_return);\n@@ -984,1 +987,1 @@\n-        StubFrame f(sasm, \"deoptimize\", dont_gc_arguments);\n+        StubFrame f(sasm, \"deoptimize\", dont_gc_arguments, does_not_return);\n@@ -1000,1 +1003,1 @@\n-      { StubFrame f(sasm, \"range_check_failed\", dont_gc_arguments);\n+      { StubFrame f(sasm, \"range_check_failed\", dont_gc_arguments, does_not_return);\n@@ -1014,1 +1017,1 @@\n-      { StubFrame f(sasm, \"access_field_patching\", dont_gc_arguments);\n+      { StubFrame f(sasm, \"access_field_patching\", dont_gc_arguments, does_not_return);\n@@ -1021,1 +1024,1 @@\n-      { StubFrame f(sasm, \"load_klass_patching\", dont_gc_arguments);\n+      { StubFrame f(sasm, \"load_klass_patching\", dont_gc_arguments, does_not_return);\n@@ -1028,1 +1031,1 @@\n-      { StubFrame f(sasm, \"load_mirror_patching\", dont_gc_arguments);\n+      { StubFrame f(sasm, \"load_mirror_patching\", dont_gc_arguments, does_not_return);\n@@ -1035,1 +1038,1 @@\n-      { StubFrame f(sasm, \"load_appendix_patching\", dont_gc_arguments);\n+      { StubFrame f(sasm, \"load_appendix_patching\", dont_gc_arguments, does_not_return);\n@@ -1055,1 +1058,1 @@\n-      { StubFrame f(sasm, \"index_range_check_failed\", dont_gc_arguments);\n+      { StubFrame f(sasm, \"index_range_check_failed\", dont_gc_arguments, does_not_return);\n@@ -1061,1 +1064,1 @@\n-      { StubFrame f(sasm, \"throw_array_store_exception\", dont_gc_arguments);\n+      { StubFrame f(sasm, \"throw_array_store_exception\", dont_gc_arguments, does_not_return);\n@@ -1070,1 +1073,1 @@\n-        StubFrame f(sasm, \"predicate_failed_trap\", dont_gc_arguments);\n+        StubFrame f(sasm, \"predicate_failed_trap\", dont_gc_arguments, does_not_return);\n@@ -1098,1 +1101,1 @@\n-      { StubFrame f(sasm, \"unimplemented entry\", dont_gc_arguments);\n+      { StubFrame f(sasm, \"unimplemented entry\", dont_gc_arguments, does_not_return);\n@@ -1101,1 +1104,0 @@\n-        __ should_not_reach_here();\n","filename":"src\/hotspot\/cpu\/aarch64\/c1_Runtime1_aarch64.cpp","additions":29,"deletions":27,"binary":false,"changes":56,"status":"modified"}]}