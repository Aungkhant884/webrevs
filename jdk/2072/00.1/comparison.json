{"files":[{"patch":"@@ -1775,2 +1775,7 @@\n-  ShouldNotReachHere();\n-  return -1;\n+  \/\/ This is implemented using aarch64_enc_java_to_runtime as above.\n+  CodeBlob *cb = CodeCache::find_blob(_entry_point);\n+  if (cb) {\n+    return 1 * NativeInstruction::instruction_size;\n+  } else {\n+    return 6 * NativeInstruction::instruction_size;\n+  }\n@@ -1919,1 +1924,1 @@\n-  if (C->output()->need_stack_bang(bangsize) && UseStackBanging)\n+  if (C->output()->need_stack_bang(bangsize))\n@@ -16045,0 +16050,15 @@\n+instruct CallNativeDirect(method meth)\n+%{\n+  match(CallNative);\n+\n+  effect(USE meth);\n+\n+  ins_cost(CALL_COST);\n+\n+  format %{ \"CALL, native $meth\" %}\n+\n+  ins_encode( aarch64_enc_java_to_runtime(meth) );\n+\n+  ins_pipe(pipe_class_call);\n+%}\n+\n@@ -17089,92 +17109,0 @@\n-%}\n-\n-instruct reduce_max2F(vRegF dst, vRegF fsrc, vecD vsrc, vecD tmp) %{\n-  predicate(n->in(2)->bottom_type()->is_vect()->element_basic_type() == T_FLOAT);\n-  match(Set dst (MaxReductionV fsrc vsrc));\n-  ins_cost(INSN_COST);\n-  effect(TEMP_DEF dst, TEMP tmp);\n-  format %{ \"fmaxs $dst, $fsrc, $vsrc\\n\\t\"\n-            \"ins   $tmp, S, $vsrc, 0, 1\\n\\t\"\n-            \"fmaxs $dst, $dst, $tmp\\t# max reduction2F\" %}\n-  ins_encode %{\n-    __ fmaxs(as_FloatRegister($dst$$reg), as_FloatRegister($fsrc$$reg), as_FloatRegister($vsrc$$reg));\n-    __ ins(as_FloatRegister($tmp$$reg), __ S, as_FloatRegister($vsrc$$reg), 0, 1);\n-    __ fmaxs(as_FloatRegister($dst$$reg), as_FloatRegister($dst$$reg), as_FloatRegister($tmp$$reg));\n-  %}\n-  ins_pipe(pipe_class_default);\n-%}\n-\n-instruct reduce_max4F(vRegF dst, vRegF fsrc, vecX vsrc) %{\n-  predicate(n->in(2)->bottom_type()->is_vect()->element_basic_type() == T_FLOAT);\n-  match(Set dst (MaxReductionV fsrc vsrc));\n-  ins_cost(INSN_COST);\n-  effect(TEMP_DEF dst);\n-  format %{ \"fmaxv $dst, T4S, $vsrc\\n\\t\"\n-            \"fmaxs $dst, $dst, $fsrc\\t# max reduction4F\" %}\n-  ins_encode %{\n-    __ fmaxv(as_FloatRegister($dst$$reg), __ T4S, as_FloatRegister($vsrc$$reg));\n-    __ fmaxs(as_FloatRegister($dst$$reg), as_FloatRegister($dst$$reg), as_FloatRegister($fsrc$$reg));\n-  %}\n-  ins_pipe(pipe_class_default);\n-%}\n-\n-instruct reduce_max2D(vRegD dst, vRegD dsrc, vecX vsrc, vecX tmp) %{\n-  predicate(n->in(2)->bottom_type()->is_vect()->element_basic_type() == T_DOUBLE);\n-  match(Set dst (MaxReductionV dsrc vsrc));\n-  ins_cost(INSN_COST);\n-  effect(TEMP_DEF dst, TEMP tmp);\n-  format %{ \"fmaxd $dst, $dsrc, $vsrc\\n\\t\"\n-            \"ins   $tmp, D, $vsrc, 0, 1\\n\\t\"\n-            \"fmaxd $dst, $dst, $tmp\\t# max reduction2D\" %}\n-  ins_encode %{\n-    __ fmaxd(as_FloatRegister($dst$$reg), as_FloatRegister($dsrc$$reg), as_FloatRegister($vsrc$$reg));\n-    __ ins(as_FloatRegister($tmp$$reg), __ D, as_FloatRegister($vsrc$$reg), 0, 1);\n-    __ fmaxd(as_FloatRegister($dst$$reg), as_FloatRegister($dst$$reg), as_FloatRegister($tmp$$reg));\n-  %}\n-  ins_pipe(pipe_class_default);\n-%}\n-\n-instruct reduce_min2F(vRegF dst, vRegF fsrc, vecD vsrc, vecD tmp) %{\n-  predicate(n->in(2)->bottom_type()->is_vect()->element_basic_type() == T_FLOAT);\n-  match(Set dst (MinReductionV fsrc vsrc));\n-  ins_cost(INSN_COST);\n-  effect(TEMP_DEF dst, TEMP tmp);\n-  format %{ \"fmins $dst, $fsrc, $vsrc\\n\\t\"\n-            \"ins   $tmp, S, $vsrc, 0, 1\\n\\t\"\n-            \"fmins $dst, $dst, $tmp\\t# min reduction2F\" %}\n-  ins_encode %{\n-    __ fmins(as_FloatRegister($dst$$reg), as_FloatRegister($fsrc$$reg), as_FloatRegister($vsrc$$reg));\n-    __ ins(as_FloatRegister($tmp$$reg), __ S, as_FloatRegister($vsrc$$reg), 0, 1);\n-    __ fmins(as_FloatRegister($dst$$reg), as_FloatRegister($dst$$reg), as_FloatRegister($tmp$$reg));\n-  %}\n-  ins_pipe(pipe_class_default);\n-%}\n-\n-instruct reduce_min4F(vRegF dst, vRegF fsrc, vecX vsrc) %{\n-  predicate(n->in(2)->bottom_type()->is_vect()->element_basic_type() == T_FLOAT);\n-  match(Set dst (MinReductionV fsrc vsrc));\n-  ins_cost(INSN_COST);\n-  effect(TEMP_DEF dst);\n-  format %{ \"fminv $dst, T4S, $vsrc\\n\\t\"\n-            \"fmins $dst, $dst, $fsrc\\t# min reduction4F\" %}\n-  ins_encode %{\n-    __ fminv(as_FloatRegister($dst$$reg), __ T4S, as_FloatRegister($vsrc$$reg));\n-    __ fmins(as_FloatRegister($dst$$reg), as_FloatRegister($dst$$reg), as_FloatRegister($fsrc$$reg));\n-  %}\n-  ins_pipe(pipe_class_default);\n-%}\n-\n-instruct reduce_min2D(vRegD dst, vRegD dsrc, vecX vsrc, vecX tmp) %{\n-  predicate(n->in(2)->bottom_type()->is_vect()->element_basic_type() == T_DOUBLE);\n-  match(Set dst (MinReductionV dsrc vsrc));\n-  ins_cost(INSN_COST);\n-  effect(TEMP_DEF dst, TEMP tmp);\n-  format %{ \"fmind $dst, $dsrc, $vsrc\\n\\t\"\n-            \"ins   $tmp, D, $vsrc, 0, 1\\n\\t\"\n-            \"fmind $dst, $dst, $tmp\\t# min reduction2D\" %}\n-  ins_encode %{\n-    __ fmind(as_FloatRegister($dst$$reg), as_FloatRegister($dsrc$$reg), as_FloatRegister($vsrc$$reg));\n-    __ ins(as_FloatRegister($tmp$$reg), __ D, as_FloatRegister($vsrc$$reg), 0, 1);\n-    __ fmind(as_FloatRegister($dst$$reg), as_FloatRegister($dst$$reg), as_FloatRegister($tmp$$reg));\n-  %}\n-  ins_pipe(pipe_class_default);\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64.ad","additions":23,"deletions":95,"binary":false,"changes":118,"status":"modified"},{"patch":"@@ -903,0 +903,84 @@\n+instruct reduce_max2F(vRegF dst, vRegF fsrc, vecD vsrc) %{\n+  predicate(n->in(2)->bottom_type()->is_vect()->element_basic_type() == T_FLOAT);\n+  match(Set dst (MaxReductionV fsrc vsrc));\n+  ins_cost(INSN_COST);\n+  effect(TEMP_DEF dst);\n+  format %{ \"fmaxp $dst, $vsrc, S\\n\\t\"\n+            \"fmaxs $dst, $dst, $fsrc\\t# max reduction2F\" %}\n+  ins_encode %{\n+    __ fmaxp(as_FloatRegister($dst$$reg), as_FloatRegister($vsrc$$reg), __ S);\n+    __ fmaxs(as_FloatRegister($dst$$reg), as_FloatRegister($dst$$reg), as_FloatRegister($fsrc$$reg));\n+  %}\n+  ins_pipe(pipe_class_default);\n+%}\n+\n+instruct reduce_max4F(vRegF dst, vRegF fsrc, vecX vsrc) %{\n+  predicate(n->in(2)->bottom_type()->is_vect()->element_basic_type() == T_FLOAT);\n+  match(Set dst (MaxReductionV fsrc vsrc));\n+  ins_cost(INSN_COST);\n+  effect(TEMP_DEF dst);\n+  format %{ \"fmaxv $dst,  T4S, $vsrc\\n\\t\"\n+            \"fmaxs $dst, $dst, $fsrc\\t# max reduction4F\" %}\n+  ins_encode %{\n+    __ fmaxv(as_FloatRegister($dst$$reg), __ T4S, as_FloatRegister($vsrc$$reg));\n+    __ fmaxs(as_FloatRegister($dst$$reg), as_FloatRegister($dst$$reg), as_FloatRegister($fsrc$$reg));\n+  %}\n+  ins_pipe(pipe_class_default);\n+%}\n+\n+instruct reduce_max2D(vRegD dst, vRegD dsrc, vecX vsrc) %{\n+  predicate(n->in(2)->bottom_type()->is_vect()->element_basic_type() == T_DOUBLE);\n+  match(Set dst (MaxReductionV dsrc vsrc));\n+  ins_cost(INSN_COST);\n+  effect(TEMP_DEF dst);\n+  format %{ \"fmaxp $dst, $vsrc, D\\n\\t\"\n+            \"fmaxd $dst, $dst, $dsrc\\t# max reduction2D\" %}\n+  ins_encode %{\n+    __ fmaxp(as_FloatRegister($dst$$reg), as_FloatRegister($vsrc$$reg), __ D);\n+    __ fmaxd(as_FloatRegister($dst$$reg), as_FloatRegister($dst$$reg), as_FloatRegister($dsrc$$reg));\n+  %}\n+  ins_pipe(pipe_class_default);\n+%}\n+\n+instruct reduce_min2F(vRegF dst, vRegF fsrc, vecD vsrc) %{\n+  predicate(n->in(2)->bottom_type()->is_vect()->element_basic_type() == T_FLOAT);\n+  match(Set dst (MinReductionV fsrc vsrc));\n+  ins_cost(INSN_COST);\n+  effect(TEMP_DEF dst);\n+  format %{ \"fminp $dst, $vsrc, S\\n\\t\"\n+            \"fmins $dst, $dst, $fsrc\\t# min reduction2F\" %}\n+  ins_encode %{\n+    __ fminp(as_FloatRegister($dst$$reg), as_FloatRegister($vsrc$$reg), __ S);\n+    __ fmins(as_FloatRegister($dst$$reg), as_FloatRegister($dst$$reg), as_FloatRegister($fsrc$$reg));\n+  %}\n+  ins_pipe(pipe_class_default);\n+%}\n+\n+instruct reduce_min4F(vRegF dst, vRegF fsrc, vecX vsrc) %{\n+  predicate(n->in(2)->bottom_type()->is_vect()->element_basic_type() == T_FLOAT);\n+  match(Set dst (MinReductionV fsrc vsrc));\n+  ins_cost(INSN_COST);\n+  effect(TEMP_DEF dst);\n+  format %{ \"fminv $dst,  T4S, $vsrc\\n\\t\"\n+            \"fmins $dst, $dst, $fsrc\\t# min reduction4F\" %}\n+  ins_encode %{\n+    __ fminv(as_FloatRegister($dst$$reg), __ T4S, as_FloatRegister($vsrc$$reg));\n+    __ fmins(as_FloatRegister($dst$$reg), as_FloatRegister($dst$$reg), as_FloatRegister($fsrc$$reg));\n+  %}\n+  ins_pipe(pipe_class_default);\n+%}\n+\n+instruct reduce_min2D(vRegD dst, vRegD dsrc, vecX vsrc) %{\n+  predicate(n->in(2)->bottom_type()->is_vect()->element_basic_type() == T_DOUBLE);\n+  match(Set dst (MinReductionV dsrc vsrc));\n+  ins_cost(INSN_COST);\n+  effect(TEMP_DEF dst);\n+  format %{ \"fminp $dst, $vsrc, D\\n\\t\"\n+            \"fmind $dst, $dst, $dsrc\\t# min reduction2D\" %}\n+  ins_encode %{\n+    __ fminp(as_FloatRegister($dst$$reg), as_FloatRegister($vsrc$$reg), __ D);\n+    __ fmind(as_FloatRegister($dst$$reg), as_FloatRegister($dst$$reg), as_FloatRegister($dsrc$$reg));\n+  %}\n+  ins_pipe(pipe_class_default);\n+%}\n+\n@@ -1706,1 +1790,1 @@\n-  format %{ \"cmeq  $dst, $src1, $src2\\t# vector cmp (8B)\" %}\n+  format %{ \"cmeq  $dst, T8B, $src1, $src2\\t# vector cmp (8B)\" %}\n@@ -1721,1 +1805,1 @@\n-  format %{ \"cmeq  $dst, $src1, $src2\\t# vector cmp (16B)\" %}\n+  format %{ \"cmeq  $dst, T16B, $src1, $src2\\t# vector cmp (16B)\" %}\n@@ -1736,1 +1820,1 @@\n-  format %{ \"cmeq  $dst, $src1, $src2\\t# vector cmp (4S)\" %}\n+  format %{ \"cmeq  $dst, T4H, $src1, $src2\\t# vector cmp (4S)\" %}\n@@ -1751,1 +1835,1 @@\n-  format %{ \"cmeq  $dst, $src1, $src2\\t# vector cmp (8S)\" %}\n+  format %{ \"cmeq  $dst, T8H, $src1, $src2\\t# vector cmp (8S)\" %}\n@@ -1766,1 +1850,1 @@\n-  format %{ \"cmeq  $dst, $src1, $src2\\t# vector cmp (2I)\" %}\n+  format %{ \"cmeq  $dst, T2S, $src1, $src2\\t# vector cmp (2I)\" %}\n@@ -1781,1 +1865,1 @@\n-  format %{ \"cmeq  $dst, $src1, $src2\\t# vector cmp (4I)\" %}\n+  format %{ \"cmeq  $dst, T4S, $src1, $src2\\t# vector cmp (4I)\" %}\n@@ -1796,1 +1880,1 @@\n-  format %{ \"cmeq  $dst, $src1, $src2\\t# vector cmp (2L)\" %}\n+  format %{ \"cmeq  $dst, T2D, $src1, $src2\\t# vector cmp (2L)\" %}\n@@ -1811,1 +1895,1 @@\n-  format %{ \"fcmeq  $dst, $src1, $src2\\t# vector cmp (2F)\" %}\n+  format %{ \"fcmeq  $dst, T2S, $src1, $src2\\t# vector cmp (2F)\" %}\n@@ -1826,1 +1910,1 @@\n-  format %{ \"fcmeq  $dst, $src1, $src2\\t# vector cmp (4F)\" %}\n+  format %{ \"fcmeq  $dst, T4S, $src1, $src2\\t# vector cmp (4F)\" %}\n@@ -1841,1 +1925,1 @@\n-  format %{ \"fcmeq  $dst, $src1, $src2\\t# vector cmp (2D)\" %}\n+  format %{ \"fcmeq  $dst, T2D, $src1, $src2\\t# vector cmp (2D)\" %}\n@@ -1856,1 +1940,1 @@\n-  format %{ \"cmgt  $dst, $src1, $src2\\t# vector cmp (8B)\" %}\n+  format %{ \"cmgt  $dst, T8B, $src1, $src2\\t# vector cmp (8B)\" %}\n@@ -1871,1 +1955,1 @@\n-  format %{ \"cmgt  $dst, $src1, $src2\\t# vector cmp (16B)\" %}\n+  format %{ \"cmgt  $dst, T16B, $src1, $src2\\t# vector cmp (16B)\" %}\n@@ -1886,1 +1970,1 @@\n-  format %{ \"cmgt  $dst, $src1, $src2\\t# vector cmp (4S)\" %}\n+  format %{ \"cmgt  $dst, T4H, $src1, $src2\\t# vector cmp (4S)\" %}\n@@ -1901,1 +1985,1 @@\n-  format %{ \"cmgt  $dst, $src1, $src2\\t# vector cmp (8S)\" %}\n+  format %{ \"cmgt  $dst, T8H, $src1, $src2\\t# vector cmp (8S)\" %}\n@@ -1916,1 +2000,1 @@\n-  format %{ \"cmgt  $dst, $src1, $src2\\t# vector cmp (2I)\" %}\n+  format %{ \"cmgt  $dst, T2S, $src1, $src2\\t# vector cmp (2I)\" %}\n@@ -1931,1 +2015,1 @@\n-  format %{ \"cmgt  $dst, $src1, $src2\\t# vector cmp (4I)\" %}\n+  format %{ \"cmgt  $dst, T4S, $src1, $src2\\t# vector cmp (4I)\" %}\n@@ -1946,1 +2030,1 @@\n-  format %{ \"cmgt  $dst, $src1, $src2\\t# vector cmp (2L)\" %}\n+  format %{ \"cmgt  $dst, T2D, $src1, $src2\\t# vector cmp (2L)\" %}\n@@ -1961,1 +2045,1 @@\n-  format %{ \"fcmgt  $dst, $src1, $src2\\t# vector cmp (2F)\" %}\n+  format %{ \"fcmgt  $dst, T2S, $src1, $src2\\t# vector cmp (2F)\" %}\n@@ -1976,1 +2060,1 @@\n-  format %{ \"fcmgt  $dst, $src1, $src2\\t# vector cmp (4F)\" %}\n+  format %{ \"fcmgt  $dst, T4S, $src1, $src2\\t# vector cmp (4F)\" %}\n@@ -1991,1 +2075,1 @@\n-  format %{ \"fcmgt  $dst, $src1, $src2\\t# vector cmp (2D)\" %}\n+  format %{ \"fcmgt  $dst, T2D, $src1, $src2\\t# vector cmp (2D)\" %}\n@@ -2006,1 +2090,1 @@\n-  format %{ \"cmge  $dst, $src1, $src2\\t# vector cmp (8B)\" %}\n+  format %{ \"cmge  $dst, T8B, $src1, $src2\\t# vector cmp (8B)\" %}\n@@ -2021,1 +2105,1 @@\n-  format %{ \"cmge  $dst, $src1, $src2\\t# vector cmp (16B)\" %}\n+  format %{ \"cmge  $dst, T16B, $src1, $src2\\t# vector cmp (16B)\" %}\n@@ -2036,1 +2120,1 @@\n-  format %{ \"cmge  $dst, $src1, $src2\\t# vector cmp (4S)\" %}\n+  format %{ \"cmge  $dst, T4H, $src1, $src2\\t# vector cmp (4S)\" %}\n@@ -2051,1 +2135,1 @@\n-  format %{ \"cmge  $dst, $src1, $src2\\t# vector cmp (8S)\" %}\n+  format %{ \"cmge  $dst, T8H, $src1, $src2\\t# vector cmp (8S)\" %}\n@@ -2066,1 +2150,1 @@\n-  format %{ \"cmge  $dst, $src1, $src2\\t# vector cmp (2I)\" %}\n+  format %{ \"cmge  $dst, T2S, $src1, $src2\\t# vector cmp (2I)\" %}\n@@ -2081,1 +2165,1 @@\n-  format %{ \"cmge  $dst, $src1, $src2\\t# vector cmp (4I)\" %}\n+  format %{ \"cmge  $dst, T4S, $src1, $src2\\t# vector cmp (4I)\" %}\n@@ -2096,1 +2180,1 @@\n-  format %{ \"cmge  $dst, $src1, $src2\\t# vector cmp (2L)\" %}\n+  format %{ \"cmge  $dst, T2D, $src1, $src2\\t# vector cmp (2L)\" %}\n@@ -2111,1 +2195,1 @@\n-  format %{ \"fcmge  $dst, $src1, $src2\\t# vector cmp (2F)\" %}\n+  format %{ \"fcmge  $dst, T2S, $src1, $src2\\t# vector cmp (2F)\" %}\n@@ -2126,1 +2210,1 @@\n-  format %{ \"fcmge  $dst, $src1, $src2\\t# vector cmp (4F)\" %}\n+  format %{ \"fcmge  $dst, T4S, $src1, $src2\\t# vector cmp (4F)\" %}\n@@ -2141,1 +2225,1 @@\n-  format %{ \"fcmge  $dst, $src1, $src2\\t# vector cmp (2D)\" %}\n+  format %{ \"fcmge  $dst, T2D, $src1, $src2\\t# vector cmp (2D)\" %}\n@@ -2156,2 +2240,2 @@\n-  format %{ \"cmeq  $dst, $src1, $src2\\n\\t# vector cmp (8B)\"\n-            \"not   $dst, $dst\\t\" %}\n+  format %{ \"cmeq  $dst, T8B, $src1, $src2\\n\\t# vector cmp (8B)\"\n+            \"not   $dst, T8B, $dst\\t\" %}\n@@ -2173,2 +2257,2 @@\n-  format %{ \"cmeq  $dst, $src1, $src2\\n\\t# vector cmp (16B)\"\n-            \"not   $dst, $dst\\t\" %}\n+  format %{ \"cmeq  $dst, T16B, $src1, $src2\\n\\t# vector cmp (16B)\"\n+            \"not   $dst, T16B, $dst\\t\" %}\n@@ -2190,2 +2274,2 @@\n-  format %{ \"cmeq  $dst, $src1, $src2\\n\\t# vector cmp (4S)\"\n-            \"not   $dst, $dst\\t\" %}\n+  format %{ \"cmeq  $dst, T4H, $src1, $src2\\n\\t# vector cmp (4S)\"\n+            \"not   $dst, T8B, $dst\\t\" %}\n@@ -2207,2 +2291,2 @@\n-  format %{ \"cmeq  $dst, $src1, $src2\\n\\t# vector cmp (8S)\"\n-            \"not   $dst, $dst\\t\" %}\n+  format %{ \"cmeq  $dst, T8H, $src1, $src2\\n\\t# vector cmp (8S)\"\n+            \"not   $dst, T16B, $dst\\t\" %}\n@@ -2224,2 +2308,2 @@\n-  format %{ \"cmeq  $dst, $src1, $src2\\n\\t# vector cmp (2I)\"\n-            \"not   $dst, $dst\\t\" %}\n+  format %{ \"cmeq  $dst, T2S, $src1, $src2\\n\\t# vector cmp (2I)\"\n+            \"not   $dst, T8B, $dst\\t\" %}\n@@ -2241,2 +2325,2 @@\n-  format %{ \"cmeq  $dst, $src1, $src2\\n\\t# vector cmp (4I)\"\n-            \"not   $dst, $dst\\t\" %}\n+  format %{ \"cmeq  $dst, T4S, $src1, $src2\\n\\t# vector cmp (4I)\"\n+            \"not   $dst, T16B, $dst\\t\" %}\n@@ -2258,2 +2342,2 @@\n-  format %{ \"cmeq  $dst, $src1, $src2\\n\\t# vector cmp (2L)\"\n-            \"not   $dst, $dst\\t\" %}\n+  format %{ \"cmeq  $dst, T2D, $src1, $src2\\n\\t# vector cmp (2L)\"\n+            \"not   $dst, T16B, $dst\\t\" %}\n@@ -2275,2 +2359,2 @@\n-  format %{ \"fcmeq  $dst, $src1, $src2\\n\\t# vector cmp (2F)\"\n-            \"not   $dst, $dst\\t\" %}\n+  format %{ \"fcmeq  $dst, T2S, $src1, $src2\\n\\t# vector cmp (2F)\"\n+            \"not   $dst, T8B, $dst\\t\" %}\n@@ -2292,2 +2376,2 @@\n-  format %{ \"fcmeq  $dst, $src1, $src2\\n\\t# vector cmp (4F)\"\n-            \"not   $dst, $dst\\t\" %}\n+  format %{ \"fcmeq  $dst, T4S, $src1, $src2\\n\\t# vector cmp (4F)\"\n+            \"not   $dst, T16B, $dst\\t\" %}\n@@ -2309,2 +2393,2 @@\n-  format %{ \"fcmeq  $dst, $src1, $src2\\n\\t# vector cmp (2D)\"\n-            \"not   $dst, $dst\\t\" %}\n+  format %{ \"fcmeq  $dst, T2D, $src1, $src2\\n\\t# vector cmp (2D)\"\n+            \"not   $dst, T16B, $dst\\t\" %}\n@@ -2326,1 +2410,1 @@\n-  format %{ \"cmgt  $dst, $src2, $src1\\t# vector cmp (8B)\" %}\n+  format %{ \"cmgt  $dst, T8B, $src2, $src1\\t# vector cmp (8B)\" %}\n@@ -2341,1 +2425,1 @@\n-  format %{ \"cmgt  $dst, $src2, $src1\\t# vector cmp (16B)\" %}\n+  format %{ \"cmgt  $dst, T16B, $src2, $src1\\t# vector cmp (16B)\" %}\n@@ -2356,1 +2440,1 @@\n-  format %{ \"cmgt  $dst, $src2, $src1\\t# vector cmp (4S)\" %}\n+  format %{ \"cmgt  $dst, T4H, $src2, $src1\\t# vector cmp (4S)\" %}\n@@ -2371,1 +2455,1 @@\n-  format %{ \"cmgt  $dst, $src2, $src1\\t# vector cmp (8S)\" %}\n+  format %{ \"cmgt  $dst, T8H, $src2, $src1\\t# vector cmp (8S)\" %}\n@@ -2386,1 +2470,1 @@\n-  format %{ \"cmgt  $dst, $src2, $src1\\t# vector cmp (2I)\" %}\n+  format %{ \"cmgt  $dst, T2S, $src2, $src1\\t# vector cmp (2I)\" %}\n@@ -2401,1 +2485,1 @@\n-  format %{ \"cmgt  $dst, $src2, $src1\\t# vector cmp (4I)\" %}\n+  format %{ \"cmgt  $dst, T4S, $src2, $src1\\t# vector cmp (4I)\" %}\n@@ -2416,1 +2500,1 @@\n-  format %{ \"cmgt  $dst, $src2, $src1\\t# vector cmp (2L)\" %}\n+  format %{ \"cmgt  $dst, T2D, $src2, $src1\\t# vector cmp (2L)\" %}\n@@ -2431,1 +2515,1 @@\n-  format %{ \"fcmgt  $dst, $src2, $src1\\t# vector cmp (2F)\" %}\n+  format %{ \"fcmgt  $dst, T2S, $src2, $src1\\t# vector cmp (2F)\" %}\n@@ -2446,1 +2530,1 @@\n-  format %{ \"fcmgt  $dst, $src2, $src1\\t# vector cmp (4F)\" %}\n+  format %{ \"fcmgt  $dst, T4S, $src2, $src1\\t# vector cmp (4F)\" %}\n@@ -2461,1 +2545,1 @@\n-  format %{ \"fcmgt  $dst, $src2, $src1\\t# vector cmp (2D)\" %}\n+  format %{ \"fcmgt  $dst, T2D, $src2, $src1\\t# vector cmp (2D)\" %}\n@@ -2476,1 +2560,1 @@\n-  format %{ \"cmge  $dst, $src2, $src1\\t# vector cmp (8B)\" %}\n+  format %{ \"cmge  $dst, T8B, $src2, $src1\\t# vector cmp (8B)\" %}\n@@ -2491,1 +2575,1 @@\n-  format %{ \"cmge  $dst, $src2, $src1\\t# vector cmp (16B)\" %}\n+  format %{ \"cmge  $dst, T16B, $src2, $src1\\t# vector cmp (16B)\" %}\n@@ -2506,1 +2590,1 @@\n-  format %{ \"cmge  $dst, $src2, $src1\\t# vector cmp (4S)\" %}\n+  format %{ \"cmge  $dst, T4H, $src2, $src1\\t# vector cmp (4S)\" %}\n@@ -2521,1 +2605,1 @@\n-  format %{ \"cmge  $dst, $src2, $src1\\t# vector cmp (8S)\" %}\n+  format %{ \"cmge  $dst, T8H, $src2, $src1\\t# vector cmp (8S)\" %}\n@@ -2536,1 +2620,1 @@\n-  format %{ \"cmge  $dst, $src2, $src1\\t# vector cmp (2I)\" %}\n+  format %{ \"cmge  $dst, T2S, $src2, $src1\\t# vector cmp (2I)\" %}\n@@ -2551,1 +2635,1 @@\n-  format %{ \"cmge  $dst, $src2, $src1\\t# vector cmp (4I)\" %}\n+  format %{ \"cmge  $dst, T4S, $src2, $src1\\t# vector cmp (4I)\" %}\n@@ -2566,1 +2650,1 @@\n-  format %{ \"cmge  $dst, $src2, $src1\\t# vector cmp (2L)\" %}\n+  format %{ \"cmge  $dst, T2D, $src2, $src1\\t# vector cmp (2L)\" %}\n@@ -2581,1 +2665,1 @@\n-  format %{ \"fcmge  $dst, $src2, $src1\\t# vector cmp (2F)\" %}\n+  format %{ \"fcmge  $dst, T2S, $src2, $src1\\t# vector cmp (2F)\" %}\n@@ -2596,1 +2680,1 @@\n-  format %{ \"fcmge  $dst, $src2, $src1\\t# vector cmp (4F)\" %}\n+  format %{ \"fcmge  $dst, T4S, $src2, $src1\\t# vector cmp (4F)\" %}\n@@ -2611,1 +2695,1 @@\n-  format %{ \"fcmge  $dst, $src2, $src1\\t# vector cmp (2D)\" %}\n+  format %{ \"fcmge  $dst, T2D, $src2, $src1\\t# vector cmp (2D)\" %}\n@@ -2659,1 +2743,1 @@\n-  format %{ \"not  $dst, $src\\t# vector (8B)\" %}\n+  format %{ \"not  $dst, T8B, $src\\t# vector (8B)\" %}\n@@ -2674,1 +2758,1 @@\n-  format %{ \"not  $dst, $src\\t# vector (16B)\" %}\n+  format %{ \"not  $dst, T16B, $src\\t# vector (16B)\" %}\n@@ -2687,1 +2771,1 @@\n-  format %{ \"not  $dst, $src\\t# vector (16B)\" %}\n+  format %{ \"not  $dst, T16B, $src\\t# vector (16B)\" %}\n@@ -2703,1 +2787,1 @@\n-  format %{ \"maxv  $dst, $src1, $src2\\t# vector (8B)\" %}\n+  format %{ \"maxv  $dst, T8B, $src1, $src2\\t# vector (8B)\" %}\n@@ -2717,1 +2801,1 @@\n-  format %{ \"maxv  $dst, $src1, $src2\\t# vector (16B)\" %}\n+  format %{ \"maxv  $dst, T16B, $src1, $src2\\t# vector (16B)\" %}\n@@ -2731,1 +2815,1 @@\n-  format %{ \"maxv  $dst, $src1, $src2\\t# vector (4S)\" %}\n+  format %{ \"maxv  $dst, T4H, $src1, $src2\\t# vector (4S)\" %}\n@@ -2745,1 +2829,1 @@\n-  format %{ \"maxv  $dst, $src1, $src2\\t# vector (8S)\" %}\n+  format %{ \"maxv  $dst, T8H, $src1, $src2\\t# vector (8S)\" %}\n@@ -2759,1 +2843,1 @@\n-  format %{ \"maxv  $dst, $src1, $src2\\t# vector (2I)\" %}\n+  format %{ \"maxv  $dst, T2S, $src1, $src2\\t# vector (2I)\" %}\n@@ -2773,1 +2857,1 @@\n-  format %{ \"maxv  $dst, $src1, $src2\\t# vector (4I)\" %}\n+  format %{ \"maxv  $dst, T4S, $src1, $src2\\t# vector (4I)\" %}\n@@ -2788,1 +2872,1 @@\n-  format %{ \"minv  $dst, $src1, $src2\\t# vector (8B)\" %}\n+  format %{ \"minv  $dst, T8B, $src1, $src2\\t# vector (8B)\" %}\n@@ -2802,1 +2886,1 @@\n-  format %{ \"minv  $dst, $src1, $src2\\t# vector (16B)\" %}\n+  format %{ \"minv  $dst, T16B, $src1, $src2\\t# vector (16B)\" %}\n@@ -2816,1 +2900,1 @@\n-  format %{ \"minv  $dst, $src1, $src2\\t# vector (4S)\" %}\n+  format %{ \"minv  $dst, T4H, $src1, $src2\\t# vector (4S)\" %}\n@@ -2830,1 +2914,1 @@\n-  format %{ \"minv  $dst, $src1, $src2\\t# vector (8S)\" %}\n+  format %{ \"minv  $dst, T8H, $src1, $src2\\t# vector (8S)\" %}\n@@ -2844,1 +2928,1 @@\n-  format %{ \"minv  $dst, $src1, $src2\\t# vector (2I)\" %}\n+  format %{ \"minv  $dst, T2S, $src1, $src2\\t# vector (2I)\" %}\n@@ -2858,1 +2942,1 @@\n-  format %{ \"minv  $dst, $src1, $src2\\t# vector (4I)\" %}\n+  format %{ \"minv  $dst, T4S, $src1, $src2\\t# vector (4I)\" %}\n@@ -2874,2 +2958,2 @@\n-  format %{ \"cmgt  $dst, $src1, $src2\\t# vector (2L)\\n\\t\"\n-            \"bsl   $dst, $src1, $src2\\t# vector (16B)\" %}\n+  format %{ \"cmgt  $dst, T2D, $src1, $src2\\t# vector (2L)\\n\\t\"\n+            \"bsl   $dst, T16B, $src1, $src2\\t# vector (16B)\" %}\n@@ -2891,2 +2975,2 @@\n-  format %{ \"cmgt  $dst, $src1, $src2\\t# vector (2L)\\n\\t\"\n-            \"bsl   $dst, $src2, $src1\\t# vector (16B)\" %}\n+  format %{ \"cmgt  $dst, T2D, $src1, $src2\\t# vector (2L)\\n\\t\"\n+            \"bsl   $dst, T16B, $src2, $src1\\t# vector (16B)\" %}\n@@ -2909,1 +2993,1 @@\n-  format %{ \"bsl  $dst, $src2, $src1\\t# vector (8B)\" %}\n+  format %{ \"bsl  $dst, T8B, $src2, $src1\\t# vector (8B)\" %}\n@@ -2922,1 +3006,1 @@\n-  format %{ \"bsl  $dst, $src2, $src1\\t# vector (16B)\" %}\n+  format %{ \"bsl  $dst, T16B, $src2, $src1\\t# vector (16B)\" %}\n@@ -2937,1 +3021,1 @@\n-  format %{ \"negr  $dst, $src\\t# load mask (8B to 8B)\" %}\n+  format %{ \"negr  $dst, T8B, $src\\t# load mask (8B to 8B)\" %}\n@@ -2949,1 +3033,1 @@\n-  format %{ \"negr  $dst, $src\\t# load mask (16B to 16B)\" %}\n+  format %{ \"negr  $dst, T16B, $src\\t# load mask (16B to 16B)\" %}\n@@ -2961,1 +3045,1 @@\n-  format %{ \"negr  $dst, $src\\t# store mask (8B to 8B)\" %}\n+  format %{ \"negr  $dst, T8B, $src\\t# store mask (8B to 8B)\" %}\n@@ -2973,1 +3057,1 @@\n-  format %{ \"negr  $dst, $src\\t# store mask (16B to 16B)\" %}\n+  format %{ \"negr  $dst, T16B, $src\\t# store mask (16B to 16B)\" %}\n@@ -2985,2 +3069,2 @@\n-  format %{ \"uxtl  $dst, $src\\n\\t\"\n-            \"negr  $dst, $dst\\t# load mask (4B to 4H)\" %}\n+  format %{ \"uxtl  $dst, T8H, $src, T8B\\n\\t\"\n+            \"negr  $dst, T8H, $dst\\t# load mask (4B to 4H)\" %}\n@@ -2999,2 +3083,2 @@\n-  format %{ \"uxtl  $dst, $src\\n\\t\"\n-            \"negr  $dst, $dst\\t# load mask (8B to 8H)\" %}\n+  format %{ \"uxtl  $dst, T8H, $src, T8B\\n\\t\"\n+            \"negr  $dst, T8H, $dst\\t# load mask (8B to 8H)\" %}\n@@ -3013,2 +3097,2 @@\n-  format %{ \"xtn  $dst, $src\\n\\t\"\n-            \"negr  $dst, $dst\\t# store mask (4H to 4B)\" %}\n+  format %{ \"xtn  $dst, T8B, $src, T8H\\n\\t\"\n+            \"negr  $dst, T8B, $dst\\t# store mask (4H to 4B)\" %}\n@@ -3027,2 +3111,2 @@\n-  format %{ \"xtn  $dst, $src\\n\\t\"\n-            \"negr  $dst, $dst\\t# store mask (8H to 8B)\" %}\n+  format %{ \"xtn  $dst, T8B, $src, T8H\\n\\t\"\n+            \"negr  $dst, T8B, $dst\\t# store mask (8H to 8B)\" %}\n@@ -3043,3 +3127,3 @@\n-  format %{ \"uxtl  $dst, $src\\t# 2B to 2H\\n\\t\"\n-            \"uxtl  $dst, $dst\\t# 2H to 2S\\n\\t\"\n-            \"negr   $dst, $dst\\t# load mask (2B to 2S)\" %}\n+  format %{ \"uxtl  $dst, T8H, $src, T8B\\t# 2B to 2H\\n\\t\"\n+            \"uxtl  $dst, T4S, $dst, T4H\\t# 2H to 2S\\n\\t\"\n+            \"negr   $dst, T4S, $dst\\t# load mask (2B to 2S)\" %}\n@@ -3061,3 +3145,3 @@\n-  format %{ \"uxtl  $dst, $src\\t# 4B to 4H\\n\\t\"\n-            \"uxtl  $dst, $dst\\t# 4H to 4S\\n\\t\"\n-            \"negr   $dst, $dst\\t# load mask (4B to 4S)\" %}\n+  format %{ \"uxtl  $dst, T8H, $src, T8B\\t# 4B to 4H\\n\\t\"\n+            \"uxtl  $dst, T4S, $dst, T4H\\t# 4H to 4S\\n\\t\"\n+            \"negr   $dst, T4S, $dst\\t# load mask (4B to 4S)\" %}\n@@ -3077,3 +3161,3 @@\n-  format %{ \"xtn  $dst, $src\\t# 2S to 2H\\n\\t\"\n-            \"xtn  $dst, $dst\\t# 2H to 2B\\n\\t\"\n-            \"negr   $dst, $dst\\t# store mask (2S to 2B)\" %}\n+  format %{ \"xtn  $dst, T4H, $src, T4S\\t# 2S to 2H\\n\\t\"\n+            \"xtn  $dst, T8B, $dst, T8H\\t# 2H to 2B\\n\\t\"\n+            \"negr   $dst, T8B, $dst\\t# store mask (2S to 2B)\" %}\n@@ -3093,3 +3177,3 @@\n-  format %{ \"xtn  $dst, $src\\t# 4S to 4H\\n\\t\"\n-            \"xtn  $dst, $dst\\t# 4H to 4B\\n\\t\"\n-            \"negr   $dst, $dst\\t# store mask (4S to 4B)\" %}\n+  format %{ \"xtn  $dst, T4H, $src, T4S\\t# 4S to 4H\\n\\t\"\n+            \"xtn  $dst, T8B, $dst, T8H\\t# 4H to 4B\\n\\t\"\n+            \"negr   $dst, T8B, $dst\\t# store mask (4S to 4B)\" %}\n@@ -3111,4 +3195,4 @@\n-  format %{ \"uxtl  $dst, $src\\t# 2B to 2S\\n\\t\"\n-            \"uxtl  $dst, $dst\\t# 2S to 2I\\n\\t\"\n-            \"uxtl  $dst, $dst\\t# 2I to 2L\\n\\t\"\n-            \"neg   $dst, $dst\\t# load mask (2B to 2L)\" %}\n+  format %{ \"uxtl  $dst, T8H, $src, T8B\\t# 2B to 2S\\n\\t\"\n+            \"uxtl  $dst, T4S, $dst, T4H\\t# 2S to 2I\\n\\t\"\n+            \"uxtl  $dst, T2D, $dst, T2S\\t# 2I to 2L\\n\\t\"\n+            \"neg   $dst, T2D, $dst\\t# load mask (2B to 2L)\" %}\n@@ -3129,4 +3213,4 @@\n-  format %{ \"xtn  $dst, $src\\t# 2L to 2I\\n\\t\"\n-            \"xtn  $dst, $dst\\t# 2I to 2S\\n\\t\"\n-            \"xtn  $dst, $dst\\t# 2S to 2B\\n\\t\"\n-            \"neg  $dst, $dst\\t# store mask (2L to 2B)\" %}\n+  format %{ \"xtn  $dst, T2S, $src, T2D\\t# 2L to 2I\\n\\t\"\n+            \"xtn  $dst, T4H, $dst, T4S\\t# 2I to 2S\\n\\t\"\n+            \"xtn  $dst, T8B, $dst, T8H\\t# 2S to 2B\\n\\t\"\n+            \"neg  $dst, T8B, $dst\\t# store mask (2L to 2B)\" %}\n@@ -3180,1 +3264,1 @@\n-  format %{ \"mov  $dst, $src\\t# get 8B shuffle\" %}\n+  format %{ \"mov  $dst, T8B, $src\\t# get 8B shuffle\" %}\n@@ -3194,1 +3278,1 @@\n-  format %{ \"mov  $dst, $src\\t# get 16B shuffle\" %}\n+  format %{ \"mov  $dst, T16B, $src\\t# get 16B shuffle\" %}\n@@ -3208,1 +3292,1 @@\n-  format %{ \"uxtl  $dst, $src\\t# 4B to 4H\" %}\n+  format %{ \"uxtl  $dst, T8H, $src, T8B\\t# 4B to 4H\" %}\n@@ -3221,1 +3305,1 @@\n-  format %{ \"uxtl  $dst, $src\\t# 8B to 8H\" %}\n+  format %{ \"uxtl  $dst, T8H, $src, T8B\\t# 8B to 8H\" %}\n@@ -3235,2 +3319,2 @@\n-  format %{ \"uxtl  $dst, $src\\t# 4B to 4H \\n\\t\"\n-            \"uxtl  $dst, $dst\\t# 4H to 4S\" %}\n+  format %{ \"uxtl  $dst, T8H, $src, T8B\\t# 4B to 4H \\n\\t\"\n+            \"uxtl  $dst, T4S, $dst, T4H\\t# 4H to 4S\" %}\n@@ -3272,1 +3356,1 @@\n-  format %{ \"tbl $dst, {$dst}, $shuffle\\t# rearrange 8B\" %}\n+  format %{ \"tbl $dst, T8B, {$dst}, $shuffle\\t# rearrange 8B\" %}\n@@ -3287,1 +3371,1 @@\n-  format %{ \"tbl $dst, {$dst}, $shuffle\\t# rearrange 16B\" %}\n+  format %{ \"tbl $dst, T16B, {$dst}, $shuffle\\t# rearrange 16B\" %}\n@@ -3302,5 +3386,5 @@\n-  format %{ \"mov   $tmp0, CONSTANT\\t# constant 0x0202020202020202\\n\\t\"\n-            \"mov   $tmp1, CONSTANT\\t# constant 0x0100010001000100\\n\\t\"\n-            \"mulv  $dst, T4H, $shuffle, $tmp0\\n\\t\"\n-            \"addv  $dst, T8B, $dst, $tmp1\\n\\t\"\n-            \"tbl   $dst, {$src}, $dst\\t# rearrange 4S\" %}\n+  format %{ \"mov   $tmp0, T8B, CONSTANT\\t# constant 0x0202020202020202\\n\\t\"\n+            \"mov   $tmp1, T4H, CONSTANT\\t# constant 0x0100010001000100\\n\\t\"\n+            \"mulv  $dst, T4H, T4H, $shuffle, $tmp0\\n\\t\"\n+            \"addv  $dst, T8B, T8B, $dst, $tmp1\\n\\t\"\n+            \"tbl   $dst, T8B, {$src}, 1, $dst\\t# rearrange 4S\" %}\n@@ -3327,5 +3411,5 @@\n-  format %{ \"mov   $tmp0, CONSTANT\\t# constant 0x0202020202020202\\n\\t\"\n-            \"mov   $tmp1, CONSTANT\\t# constant 0x0100010001000100\\n\\t\"\n-            \"mulv  $dst, T8H, $shuffle, $tmp0\\n\\t\"\n-            \"addv  $dst, T16B, $dst, $tmp1\\n\\t\"\n-            \"tbl   $dst, {$src}, $dst\\t# rearrange 8S\" %}\n+  format %{ \"mov   $tmp0, T16B, CONSTANT\\t# constant 0x0202020202020202\\n\\t\"\n+            \"mov   $tmp1, T8H, CONSTANT\\t# constant 0x0100010001000100\\n\\t\"\n+            \"mulv  $dst, T8H, T8H, $shuffle, $tmp0\\n\\t\"\n+            \"addv  $dst, T16B, T16B, $dst, $tmp1\\n\\t\"\n+            \"tbl   $dst, T16B, {$src}, 1, $dst\\t# rearrange 8S\" %}\n@@ -3353,3 +3437,3 @@\n-  format %{ \"mov   $tmp0, CONSTANT\\t# constant 0x0404040404040404\\n\\t\"\n-            \"mov   $tmp1, CONSTANT\\t# constant 0x0302010003020100\\n\\t\"\n-            \"mulv  $dst, T8H, $shuffle, $tmp0\\n\\t\"\n+  format %{ \"mov   $tmp0, T16B, CONSTANT\\t# constant 0x0404040404040404\\n\\t\"\n+            \"mov   $tmp1, T4S, CONSTANT\\t# constant 0x0302010003020100\\n\\t\"\n+            \"mulv  $dst, T4S, $shuffle, $tmp0\\n\\t\"\n@@ -3357,1 +3441,1 @@\n-            \"tbl   $dst, {$src}, $dst\\t# rearrange 4I\" %}\n+            \"tbl   $dst, T16B, {$src}, 1, $dst\\t# rearrange 4I\" %}\n@@ -3466,1 +3550,1 @@\n-  format %{ \"abs  $dst, $src\\t# vector (8B)\" %}\n+  format %{ \"abs  $dst, T8B, $src\\t# vector (8B)\" %}\n@@ -3478,1 +3562,1 @@\n-  format %{ \"abs  $dst, $src\\t# vector (16B)\" %}\n+  format %{ \"abs  $dst, T16B, $src\\t# vector (16B)\" %}\n@@ -3490,1 +3574,1 @@\n-  format %{ \"abs  $dst, $src\\t# vector (4H)\" %}\n+  format %{ \"abs  $dst, T4H, $src\\t# vector (4H)\" %}\n@@ -3502,1 +3586,1 @@\n-  format %{ \"abs  $dst, $src\\t# vector (8H)\" %}\n+  format %{ \"abs  $dst, T8H, $src\\t# vector (8H)\" %}\n@@ -3514,1 +3598,1 @@\n-  format %{ \"abs  $dst, $src\\t# vector (2S)\" %}\n+  format %{ \"abs  $dst, T2S, $src\\t# vector (2S)\" %}\n@@ -3526,1 +3610,1 @@\n-  format %{ \"abs  $dst, $src\\t# vector (4S)\" %}\n+  format %{ \"abs  $dst, T4S, $src\\t# vector (4S)\" %}\n@@ -3538,1 +3622,1 @@\n-  format %{ \"abs  $dst, $src\\t# vector (2D)\" %}\n+  format %{ \"abs  $dst, T2D, $src\\t# vector (2D)\" %}\n@@ -3550,1 +3634,1 @@\n-  format %{ \"fabs  $dst, $src\\t# vector (2S)\" %}\n+  format %{ \"fabs  $dst, T2S, $src\\t# vector (2S)\" %}\n@@ -3562,1 +3646,1 @@\n-  format %{ \"fabs  $dst, $src\\t# vector (4S)\" %}\n+  format %{ \"fabs  $dst, T4S, $src\\t# vector (4S)\" %}\n@@ -3574,1 +3658,1 @@\n-  format %{ \"fabs  $dst, $src\\t# vector (2D)\" %}\n+  format %{ \"fabs  $dst, T2D, $src\\t# vector (2D)\" %}\n@@ -3588,1 +3672,1 @@\n-  format %{ \"fabd  $dst, $src1, $src2\\t# vector (2S)\" %}\n+  format %{ \"fabd  $dst, T2S, $src1, $src2\\t# vector (2S)\" %}\n@@ -3601,1 +3685,1 @@\n-  format %{ \"fabd  $dst, $src1, $src2\\t# vector (4S)\" %}\n+  format %{ \"fabd  $dst, T4S, $src1, $src2\\t# vector (4S)\" %}\n@@ -3614,1 +3698,1 @@\n-  format %{ \"fabd  $dst, $src1, $src2\\t# vector (2D)\" %}\n+  format %{ \"fabd  $dst, T2D, $src1, $src2\\t# vector (2D)\" %}\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64_neon.ad","additions":242,"deletions":158,"binary":false,"changes":400,"status":"modified"},{"patch":"@@ -554,0 +554,24 @@\n+define(`REDUCE_MINMAX_FORD', `\n+instruct reduce_$1$4$5(vReg$5 dst, vReg$5 $6src, vec$7 vsrc) %{\n+  predicate(n->in(2)->bottom_type()->is_vect()->element_basic_type() == T_`'ifelse($5, F, FLOAT, DOUBLE));\n+  match(Set dst (ifelse($1, max, Max, Min)ReductionV $6src vsrc));\n+  ins_cost(INSN_COST);\n+  effect(TEMP_DEF dst);\n+  format %{ \"$2 $dst, ifelse($4, 2, $vsrc`, 'ifelse($5, F, S, D), ` T4S, $vsrc')\\n\\t\"\n+            \"$3 $dst, $dst, $$6src\\t# $1 reduction$4$5\" %}\n+  ins_encode %{\n+    __ $2(as_FloatRegister($dst$$reg), ifelse($4, 4, `__ T4S, as_FloatRegister($vsrc$$reg))',\n+                                              $4$5, 2F, `as_FloatRegister($vsrc$$reg), __ S)',\n+                                              $4$5, 2D, `as_FloatRegister($vsrc$$reg), __ D)');\n+    __ $3(as_FloatRegister($dst$$reg), as_FloatRegister($dst$$reg), as_FloatRegister($$6src$$reg));\n+  %}\n+  ins_pipe(pipe_class_default);\n+%}')dnl\n+dnl                $1   $2     $3     $4 $5 $6 $7\n+REDUCE_MINMAX_FORD(max, fmaxp, fmaxs, 2, F, f, D)\n+REDUCE_MINMAX_FORD(max, fmaxv, fmaxs, 4, F, f, X)\n+REDUCE_MINMAX_FORD(max, fmaxp, fmaxd, 2, D, d, X)\n+REDUCE_MINMAX_FORD(min, fminp, fmins, 2, F, f, D)\n+REDUCE_MINMAX_FORD(min, fminv, fmins, 4, F, f, X)\n+REDUCE_MINMAX_FORD(min, fminp, fmind, 2, D, d, X)\n+dnl\n@@ -854,1 +878,1 @@\n-  format %{ \"$6cm$1  $dst, $src1, $src2\\t# vector cmp ($2$3)\" %}\n+  format %{ \"$6cm$1  $dst, T$2$5, $src1, $src2\\t# vector cmp ($2$3)\" %}\n@@ -901,2 +925,2 @@\n-  format %{ \"$5cmeq  $dst, $src1, $src2\\n\\t# vector cmp ($1$2)\"\n-            \"not   $dst, $dst\\t\" %}\n+  format %{ \"$5cmeq  $dst, T$1$4, $src1, $src2\\n\\t# vector cmp ($1$2)\"\n+            \"not   $dst, T$6, $dst\\t\" %}\n@@ -930,1 +954,1 @@\n-  format %{ \"$6cm$7  $dst, $src2, $src1\\t# vector cmp ($2$3)\" %}\n+  format %{ \"$6cm$7  $dst, T$2$5, $src2, $src1\\t# vector cmp ($2$3)\" %}\n@@ -1005,1 +1029,1 @@\n-  format %{ \"not  $dst, $src\\t# vector ($5)\" %}\n+  format %{ \"not  $dst, T$5, $src\\t# vector ($5)\" %}\n@@ -1031,1 +1055,1 @@\n-  format %{ \"$1v  $dst, $src1, $src2\\t# vector ($2$3)\" %}\n+  format %{ \"$1v  $dst, T$2`'iTYPE2SIMD($3), $src1, $src2\\t# vector ($2$3)\" %}\n@@ -1061,2 +1085,2 @@\n-  format %{ \"cmgt  $dst, $src1, $src2\\t# vector (2L)\\n\\t\"\n-            \"bsl   $dst, $$3, $$4\\t# vector (16B)\" %}\n+  format %{ \"cmgt  $dst, T2D, $src1, $src2\\t# vector (2L)\\n\\t\"\n+            \"bsl   $dst, T16B, $$3, $$4\\t# vector (16B)\" %}\n@@ -1084,1 +1108,1 @@\n-  format %{ \"bsl  $dst, $src2, $src1\\t# vector ($1B)\" %}\n+  format %{ \"bsl  $dst, T$1B, $src2, $src1\\t# vector ($1B)\" %}\n@@ -1108,1 +1132,1 @@\n-  format %{ \"negr  $dst, $src\\t# $1 mask ($2B to $2B)\" %}\n+  format %{ \"negr  $dst, T$2B, $src\\t# $1 mask ($2B to $2B)\" %}\n@@ -1131,2 +1155,2 @@\n-  format %{ \"$6  $dst, $src\\n\\t\"\n-            \"negr  $dst, $dst\\t# $1 mask ($2$7 to $2$8)\" %}\n+  format %{ \"$6  $dst, T8$8, $src, T8$7\\n\\t\"\n+            \"negr  $dst, T8$8, $dst\\t# $1 mask ($2$7 to $2$8)\" %}\n@@ -1158,3 +1182,3 @@\n-  format %{ \"$6  $dst, $src\\t# $2$7 to $2$8\\n\\t\"\n-            \"$6  $dst, $dst\\t# $2$8 to $2$9\\n\\t\"\n-            \"negr   $dst, $dst\\t# $1 mask ($2$7 to $2$9)\" %}\n+  format %{ \"$6  $dst, T$10$8, $src, T$10$7\\t# $2$7 to $2$8\\n\\t\"\n+            \"$6  $dst, T$11$9, $dst, T$11$8\\t# $2$8 to $2$9\\n\\t\"\n+            \"negr   $dst, T$11$9, $dst\\t# $1 mask ($2$7 to $2$9)\" %}\n@@ -1182,4 +1206,4 @@\n-  format %{ \"uxtl  $dst, $src\\t# 2B to 2S\\n\\t\"\n-            \"uxtl  $dst, $dst\\t# 2S to 2I\\n\\t\"\n-            \"uxtl  $dst, $dst\\t# 2I to 2L\\n\\t\"\n-            \"neg   $dst, $dst\\t# load mask (2B to 2L)\" %}\n+  format %{ \"uxtl  $dst, T8H, $src, T8B\\t# 2B to 2S\\n\\t\"\n+            \"uxtl  $dst, T4S, $dst, T4H\\t# 2S to 2I\\n\\t\"\n+            \"uxtl  $dst, T2D, $dst, T2S\\t# 2I to 2L\\n\\t\"\n+            \"neg   $dst, T2D, $dst\\t# load mask (2B to 2L)\" %}\n@@ -1200,4 +1224,4 @@\n-  format %{ \"xtn  $dst, $src\\t# 2L to 2I\\n\\t\"\n-            \"xtn  $dst, $dst\\t# 2I to 2S\\n\\t\"\n-            \"xtn  $dst, $dst\\t# 2S to 2B\\n\\t\"\n-            \"neg  $dst, $dst\\t# store mask (2L to 2B)\" %}\n+  format %{ \"xtn  $dst, T2S, $src, T2D\\t# 2L to 2I\\n\\t\"\n+            \"xtn  $dst, T4H, $dst, T4S\\t# 2I to 2S\\n\\t\"\n+            \"xtn  $dst, T8B, $dst, T8H\\t# 2S to 2B\\n\\t\"\n+            \"neg  $dst, T8B, $dst\\t# store mask (2L to 2B)\" %}\n@@ -1248,1 +1272,1 @@\n-  format %{ \"mov  $dst, $src\\t# get $1B shuffle\" %}\n+  format %{ \"mov  $dst, T$1B, $src\\t# get $1B shuffle\" %}\n@@ -1266,1 +1290,1 @@\n-  format %{ \"uxtl  $dst, $src\\t# $1B to $1H\" %}\n+  format %{ \"uxtl  $dst, T8H, $src, T8B\\t# $1B to $1H\" %}\n@@ -1284,2 +1308,2 @@\n-  format %{ \"uxtl  $dst, $src\\t# 4B to 4H \\n\\t\"\n-            \"uxtl  $dst, $dst\\t# 4H to 4S\" %}\n+  format %{ \"uxtl  $dst, T8H, $src, T8B\\t# 4B to 4H \\n\\t\"\n+            \"uxtl  $dst, T4S, $dst, T4H\\t# 4H to 4S\" %}\n@@ -1321,1 +1345,1 @@\n-  format %{ \"tbl $dst, {$dst}, $shuffle\\t# rearrange $1B\" %}\n+  format %{ \"tbl $dst, T$1B, {$dst}, $shuffle\\t# rearrange $1B\" %}\n@@ -1340,5 +1364,5 @@\n-  format %{ \"mov   $tmp0, CONSTANT\\t# constant 0x0202020202020202\\n\\t\"\n-            \"mov   $tmp1, CONSTANT\\t# constant 0x0100010001000100\\n\\t\"\n-            \"mulv  $dst, T$1H, $shuffle, $tmp0\\n\\t\"\n-            \"addv  $dst, T$3B, $dst, $tmp1\\n\\t\"\n-            \"tbl   $dst, {$src}, $dst\\t# rearrange $1S\" %}\n+  format %{ \"mov   $tmp0, T$3B, CONSTANT\\t# constant 0x0202020202020202\\n\\t\"\n+            \"mov   $tmp1, T$1H, CONSTANT\\t# constant 0x0100010001000100\\n\\t\"\n+            \"mulv  $dst, T$1H, T$1H, $shuffle, $tmp0\\n\\t\"\n+            \"addv  $dst, T$3B, T$3B, $dst, $tmp1\\n\\t\"\n+            \"tbl   $dst, T$3B, {$src}, 1, $dst\\t# rearrange $1S\" %}\n@@ -1369,3 +1393,3 @@\n-  format %{ \"mov   $tmp0, CONSTANT\\t# constant 0x0404040404040404\\n\\t\"\n-            \"mov   $tmp1, CONSTANT\\t# constant 0x0302010003020100\\n\\t\"\n-            \"mulv  $dst, T8H, $shuffle, $tmp0\\n\\t\"\n+  format %{ \"mov   $tmp0, T16B, CONSTANT\\t# constant 0x0404040404040404\\n\\t\"\n+            \"mov   $tmp1, T4S, CONSTANT\\t# constant 0x0302010003020100\\n\\t\"\n+            \"mulv  $dst, T4S, $shuffle, $tmp0\\n\\t\"\n@@ -1373,1 +1397,1 @@\n-            \"tbl   $dst, {$src}, $dst\\t# rearrange 4I\" %}\n+            \"tbl   $dst, T16B, {$src}, 1, $dst\\t# rearrange 4I\" %}\n@@ -1448,1 +1472,1 @@\n-  format %{ \"$1  $dst, $src\\t# vector ($3$6)\" %}\n+  format %{ \"$1  $dst, T$3$6, $src\\t# vector ($3$6)\" %}\n@@ -1474,1 +1498,1 @@\n-  format %{ \"$1  $dst, $src1, $src2\\t# vector ($3$6)\" %}\n+  format %{ \"$1  $dst, T$3$6, $src1, $src2\\t# vector ($3$6)\" %}\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64_neon_ad.m4","additions":63,"deletions":39,"binary":false,"changes":102,"status":"modified"},{"patch":"@@ -317,1 +317,1 @@\n-  RegSet                _fp_regs;\n+  FloatRegSet           _fp_regs;\n@@ -330,1 +330,1 @@\n-          _fp_regs += RegSet::of((Register)vm_reg->as_FloatRegister());\n+          _fp_regs += FloatRegSet::of(vm_reg->as_FloatRegister());\n","filename":"src\/hotspot\/cpu\/aarch64\/gc\/z\/zBarrierSetAssembler_aarch64.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -36,0 +36,1 @@\n+#include \"gc\/shared\/tlab_globals.hpp\"\n@@ -49,0 +50,1 @@\n+#include \"runtime\/stubRoutines.hpp\"\n@@ -304,1 +306,1 @@\n-    tbnz(rscratch1, exact_log2(SafepointMechanism::poll_bit()), slow_path);\n+    tbnz(rscratch1, log2i_exact(SafepointMechanism::poll_bit()), slow_path);\n@@ -320,0 +322,2 @@\n+\n+  str(zr, Address(rthread, JavaThread::saved_fp_address_offset()));\n@@ -4003,1 +4007,1 @@\n-      (1ULL << log2_intptr(CompressedKlassPointers::range())) - 1;\n+      (1ULL << log2i(CompressedKlassPointers::range())) - 1;\n@@ -5302,0 +5306,2 @@\n+  \/\/ Make sure that native code does not change SVE vector length.\n+  if (!UseSVE) return;\n@@ -5303,1 +5309,0 @@\n-  assert(UseSVE > 0, \"should only be used for SVE\");\n","filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.cpp","additions":8,"deletions":3,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -477,2 +477,2 @@\n-  void push_fp(RegSet regs, Register stack) { if (regs.bits()) push_fp(regs.bits(), stack); }\n-  void pop_fp(RegSet regs, Register stack) { if (regs.bits()) pop_fp(regs.bits(), stack); }\n+  void push_fp(FloatRegSet regs, Register stack) { if (regs.bits()) push_fp(regs.bits(), stack); }\n+  void pop_fp(FloatRegSet regs, Register stack) { if (regs.bits()) pop_fp(regs.bits(), stack); }\n","filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -44,0 +44,1 @@\n+#include \"runtime\/stubRoutines.hpp\"\n@@ -1501,5 +1502,1 @@\n-  if (UseStackBanging) {\n-    __ bang_stack_with_offset(checked_cast<int>(StackOverflow::stack_shadow_zone_size()));\n-  } else {\n-    Unimplemented();\n-  }\n+  __ bang_stack_with_offset(checked_cast<int>(StackOverflow::stack_shadow_zone_size()));\n@@ -1857,4 +1854,1 @@\n-  if (UseSVE > 0) {\n-    \/\/ Make sure that jni code does not change SVE vector length.\n-    __ verify_sve_vector_length();\n-  }\n+  __ verify_sve_vector_length();\n@@ -2418,4 +2412,2 @@\n-  if (UseStackBanging) {\n-    __ ldrw(r19, Address(r5, Deoptimization::UnrollBlock::total_frame_sizes_offset_in_bytes()));\n-    __ bang_stack_size(r19, r2);\n-  }\n+  __ ldrw(r19, Address(r5, Deoptimization::UnrollBlock::total_frame_sizes_offset_in_bytes()));\n+  __ bang_stack_size(r19, r2);\n@@ -2635,6 +2627,4 @@\n-  if (UseStackBanging) {\n-    __ ldrw(r1, Address(r4,\n-                        Deoptimization::UnrollBlock::\n-                        total_frame_sizes_offset_in_bytes()));\n-    __ bang_stack_size(r1, r2);\n-  }\n+  __ ldrw(r1, Address(r4,\n+                      Deoptimization::UnrollBlock::\n+                      total_frame_sizes_offset_in_bytes()));\n+  __ bang_stack_size(r1, r2);\n@@ -3070,0 +3060,31 @@\n+\/\/ ---------------------------------------------------------------\n+\n+class NativeInvokerGenerator : public StubCodeGenerator {\n+  address _call_target;\n+  int _shadow_space_bytes;\n+\n+  const GrowableArray<VMReg>& _input_registers;\n+  const GrowableArray<VMReg>& _output_registers;\n+public:\n+  NativeInvokerGenerator(CodeBuffer* buffer,\n+                         address call_target,\n+                         int shadow_space_bytes,\n+                         const GrowableArray<VMReg>& input_registers,\n+                         const GrowableArray<VMReg>& output_registers)\n+   : StubCodeGenerator(buffer, PrintMethodHandleStubs),\n+     _call_target(call_target),\n+     _shadow_space_bytes(shadow_space_bytes),\n+     _input_registers(input_registers),\n+     _output_registers(output_registers) {}\n+  void generate();\n+\n+private:\n+#ifdef ASSERT\n+  bool target_uses_register(VMReg reg) {\n+    return _input_registers.contains(reg) || _output_registers.contains(reg);\n+  }\n+#endif\n+};\n+\n+static const int native_invoker_code_size = 1024;\n+\n@@ -3071,4 +3092,132 @@\n-                                           int shadow_space_bytes,\n-                                           const GrowableArray<VMReg>& input_registers,\n-                                           const GrowableArray<VMReg>& output_registers) {\n-  return NULL;\n+                                               int shadow_space_bytes,\n+                                               const GrowableArray<VMReg>& input_registers,\n+                                               const GrowableArray<VMReg>& output_registers) {\n+  BufferBlob* _invoke_native_blob =\n+    BufferBlob::create(\"nep_invoker_blob\", native_invoker_code_size);\n+  if (_invoke_native_blob == NULL)\n+    return NULL; \/\/ allocation failure\n+\n+  CodeBuffer code(_invoke_native_blob);\n+  NativeInvokerGenerator g(&code, call_target, shadow_space_bytes, input_registers, output_registers);\n+  g.generate();\n+  code.log_section_sizes(\"nep_invoker_blob\");\n+\n+  return _invoke_native_blob;\n+}\n+\n+void NativeInvokerGenerator::generate() {\n+  assert(!(target_uses_register(rscratch1->as_VMReg())\n+           || target_uses_register(rscratch2->as_VMReg())\n+           || target_uses_register(rthread->as_VMReg())),\n+         \"Register conflict\");\n+\n+  MacroAssembler* masm = _masm;\n+\n+  __ set_last_Java_frame(sp, noreg, lr, rscratch1);\n+\n+  __ enter();\n+\n+  \/\/ Store a pointer to the previous R29 (RFP) saved on the stack as it\n+  \/\/ may contain an oop if PreserveFramePointer is off. This value is\n+  \/\/ retrieved later by frame::sender_for_entry_frame() when the stack\n+  \/\/ is walked.\n+  __ mov(rscratch1, sp);\n+  __ str(rscratch1, Address(rthread, JavaThread::saved_fp_address_offset()));\n+\n+  \/\/ State transition\n+  __ mov(rscratch1, _thread_in_native);\n+  __ lea(rscratch2, Address(rthread, JavaThread::thread_state_offset()));\n+  __ stlrw(rscratch1, rscratch2);\n+\n+  assert(_shadow_space_bytes == 0, \"not expecting shadow space on AArch64\");\n+\n+  rt_call(masm, _call_target);\n+\n+  __ mov(rscratch1, _thread_in_native_trans);\n+  __ strw(rscratch1, Address(rthread, JavaThread::thread_state_offset()));\n+\n+  \/\/ Force this write out before the read below\n+  __ membar(Assembler::LoadLoad | Assembler::LoadStore |\n+            Assembler::StoreLoad | Assembler::StoreStore);\n+\n+  __ verify_sve_vector_length();\n+\n+  Label L_after_safepoint_poll;\n+  Label L_safepoint_poll_slow_path;\n+\n+  __ safepoint_poll(L_safepoint_poll_slow_path, true \/* at_return *\/, true \/* acquire *\/, false \/* in_nmethod *\/);\n+\n+  __ ldrw(rscratch1, Address(rthread, JavaThread::suspend_flags_offset()));\n+  __ cbnzw(rscratch1, L_safepoint_poll_slow_path);\n+\n+  __ bind(L_after_safepoint_poll);\n+\n+  \/\/ change thread state\n+  __ mov(rscratch1, _thread_in_Java);\n+  __ lea(rscratch2, Address(rthread, JavaThread::thread_state_offset()));\n+  __ stlrw(rscratch1, rscratch2);\n+\n+  __ block_comment(\"reguard stack check\");\n+  Label L_reguard;\n+  Label L_after_reguard;\n+  __ ldrb(rscratch1, Address(rthread, JavaThread::stack_guard_state_offset()));\n+  __ cmpw(rscratch1, StackOverflow::stack_guard_yellow_reserved_disabled);\n+  __ br(Assembler::EQ, L_reguard);\n+  __ bind(L_after_reguard);\n+\n+  __ reset_last_Java_frame(true);\n+\n+  __ leave(); \/\/ required for proper stackwalking of RuntimeStub frame\n+  __ ret(lr);\n+\n+  \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n+\n+  __ block_comment(\"{ L_safepoint_poll_slow_path\");\n+  __ bind(L_safepoint_poll_slow_path);\n+\n+  \/\/ Need to save the native result registers around any runtime calls.\n+  RegSet spills;\n+  FloatRegSet fp_spills;\n+  for (int i = 0; i < _output_registers.length(); i++) {\n+    VMReg output = _output_registers.at(i);\n+    if (output->is_Register()) {\n+      spills += RegSet::of(output->as_Register());\n+    } else if (output->is_FloatRegister()) {\n+      fp_spills += FloatRegSet::of(output->as_FloatRegister());\n+    }\n+  }\n+\n+  __ push(spills, sp);\n+  __ push_fp(fp_spills, sp);\n+\n+  __ mov(c_rarg0, rthread);\n+  assert(frame::arg_reg_save_area_bytes == 0, \"not expecting frame reg save area\");\n+  __ lea(rscratch1, RuntimeAddress(CAST_FROM_FN_PTR(address, JavaThread::check_special_condition_for_native_trans)));\n+  __ blr(rscratch1);\n+\n+  __ pop_fp(fp_spills, sp);\n+  __ pop(spills, sp);\n+\n+  __ b(L_after_safepoint_poll);\n+  __ block_comment(\"} L_safepoint_poll_slow_path\");\n+\n+  \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n+\n+  __ block_comment(\"{ L_reguard\");\n+  __ bind(L_reguard);\n+\n+  __ push(spills, sp);\n+  __ push_fp(fp_spills, sp);\n+\n+  rt_call(masm, CAST_FROM_FN_PTR(address, SharedRuntime::reguard_yellow_pages));\n+\n+  __ pop_fp(fp_spills, sp);\n+  __ pop(spills, sp);\n+\n+  __ b(L_after_reguard);\n+\n+  __ block_comment(\"} L_reguard\");\n+\n+  \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n+\n+  __ flush();\n","filename":"src\/hotspot\/cpu\/aarch64\/sharedRuntime_aarch64.cpp","additions":172,"deletions":23,"binary":false,"changes":195,"status":"modified"},{"patch":"@@ -31,0 +31,2 @@\n+#include \"gc\/shared\/gc_globals.hpp\"\n+#include \"gc\/shared\/tlab_globals.hpp\"\n@@ -1321,1 +1323,1 @@\n-    for (RegSetIterator it = clobbered.begin(); *it != noreg; ++it) {\n+    for (RegSetIterator<> it = clobbered.begin(); *it != noreg; ++it) {\n@@ -5696,1 +5698,1 @@\n-      RegSetIterator regs = (RegSet::range(r0, r26) - r18_tls).begin();\n+      RegSetIterator<> regs = (RegSet::range(r0, r26) - r18_tls).begin();\n","filename":"src\/hotspot\/cpu\/aarch64\/stubGenerator_aarch64.cpp","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,0 +30,1 @@\n+#include \"compiler\/compiler_globals.hpp\"\n","filename":"src\/hotspot\/share\/ci\/ciMethodData.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -46,0 +46,2 @@\n+#include \"runtime\/stubCodeGenerator.hpp\"\n+#include \"runtime\/stubRoutines.hpp\"\n","filename":"src\/hotspot\/share\/code\/codeBlob.cpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+#include \"gc\/shared\/gc_globals.hpp\"\n","filename":"src\/hotspot\/share\/gc\/shared\/pretouchTask.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n-#include \"gc\/shared\/weakProcessorPhases.hpp\"\n+#include \"gc\/shared\/weakProcessorPhase.hpp\"\n@@ -84,4 +84,2 @@\n-  typedef WeakProcessorPhases::Iterator Iterator;\n-\n-  for (Iterator it = WeakProcessorPhases::oopstorage_iterator(); !it.is_end(); ++it) {\n-    WeakProcessorPhase phase = *it;\n+  constexpr EnumRange<WeakProcessorPhase> phase_range{};\n+  for (WeakProcessorPhase phase : phase_range) {\n@@ -90,1 +88,2 @@\n-    StorageState* cur_state = _storage_states.par_state(phase);\n+    int state_index = checked_cast<int>(phase_range.index(phase));\n+    StorageState* cur_state = _storage_states.par_state(state_index);\n","filename":"src\/hotspot\/share\/gc\/shared\/weakProcessor.inline.hpp","additions":5,"deletions":6,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,0 +30,1 @@\n+#include \"gc\/shared\/tlab_globals.hpp\"\n@@ -3057,0 +3058,2 @@\n+  } else if (size > 2 && Matcher::match_rule_supported_vector(Op_ClearArray, 4, T_LONG)) {\n+    return NULL;\n","filename":"src\/hotspot\/share\/opto\/memnode.cpp","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -2901,1 +2901,1 @@\n-        chk.checkPreview(pos, sym);\n+        chk.checkPreview(pos, env.info.scope.owner, sym);\n@@ -2966,1 +2966,1 @@\n-        chk.checkPreview(pos, sym);\n+        chk.checkPreview(pos, env.info.scope.owner, sym);\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Resolve.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 1999, 2020, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 1999, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -1635,1 +1635,1 @@\n-# 0: file name\n+# 0: file name, 1: source\n@@ -1637,1 +1637,1 @@\n-    {0} uses preview language features.\n+    {0} uses preview features of Java SE {1}.\n@@ -1639,0 +1639,1 @@\n+# 0: source\n@@ -1640,1 +1641,1 @@\n-    Some input files use preview language features.\n+    Some input files use preview features of Java SE {0}.\n@@ -1647,1 +1648,1 @@\n-# 0: file name\n+# 0: file name, 1: source\n@@ -1649,1 +1650,1 @@\n-    {0} has additional uses of preview language features.\n+    {0} has additional uses of preview features of Java SE {1}.\n@@ -1651,0 +1652,1 @@\n+# 0: source\n@@ -1652,1 +1654,1 @@\n-    Some input files additionally use preview language features.\n+    Some input files additionally use preview features of Java SE {0}.\n@@ -1786,1 +1788,1 @@\n-    {0} is an API that is part of a preview feature\n+    {0} is a preview API and may be removed in a future release.\n@@ -1790,1 +1792,6 @@\n-    {0} is an API that is part of a preview feature\n+    {0} is a preview API and is disabled by default.\\n\\\n+    (use --enable-preview to enable preview APIs)\n+\n+# 0: symbol\n+compiler.warn.is.preview.reflective=\\\n+    {0} is a reflective preview API and may be removed in a future release.\n@@ -2869,2 +2876,2 @@\n-   classfile for {0} uses preview features of Java SE {1}.\\n\\\n-   (use --enable-preview to allow loading of classfiles which contain preview features)\n+   class file for {0} uses preview features of Java SE {1}.\\n\\\n+   (use --enable-preview to allow loading of class files which contain preview features)\n@@ -2882,1 +2889,1 @@\n-   classfile for {0} uses preview features of Java SE {1}.\n+   class file for {0} uses preview features of Java SE {1}.\n@@ -3778,0 +3785,4 @@\n+# 0: kind name, 1: symbol\n+compiler.warn.declared.using.preview=\\\n+    {0} {1} is declared using a preview feature, which may be removed in a future release.\n+\n@@ -3780,1 +3791,0 @@\n-\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/compiler.properties","additions":23,"deletions":13,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2010, 2020, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2010, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -75,1 +75,0 @@\n-doclet.New_Page=NewPage\n@@ -78,0 +77,1 @@\n+doclet.Window_Preview_List=Preview List\n@@ -99,0 +99,3 @@\n+doclet.Preview_API=Preview API\n+doclet.Preview_Label=Preview\n+doclet.Preview_Mark=PREVIEW\n@@ -104,1 +107,0 @@\n-doclet.for_removal=for removal\n@@ -109,1 +111,0 @@\n-doclet.record_classes=record classes\n@@ -203,0 +204,3 @@\n+doclet.help.preview.body=\\\n+    The {0} page lists all of the Preview APIs. \\\n+    Preview APIs may be removed in future implementations.\n@@ -289,0 +293,11 @@\n+doclet.PreviewLeadingNote={0} relies on preview features of the Java platform:\n+doclet.Declared_Using_Preview={0} is declared using {1}, a preview feature of the Java language ({2}).\n+doclet.PreviewAPI={0} refers to one or more preview APIs:  {1}.\n+doclet.ReflectivePreviewAPI={0} refers to one or more reflective preview APIs:  {1}.\n+doclet.UsesDeclaredUsingPreview={0} refers to one or more types which are declared using a preview feature of the Java language: {1}.\n+doclet.PreviewTrailingNote1=Programs can only use {0} when preview features are enabled.\n+doclet.PreviewTrailingNote2=Preview features may be removed in a future release, or upgraded to permanent features of the Java platform.\n+doclet.Declared_Using_Preview.SEALED=Sealed Classes\n+doclet.Declared_Using_Preview.SEALED_PERMITS=Sealed Classes\n+doclet.PreviewPlatformLeadingNote={0} is a preview API of the Java platform.\n+doclet.ReflectivePreviewPlatformLeadingNote={0} is a reflective preview API of the Java platform.\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/standard.properties","additions":19,"deletions":4,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -104,0 +104,2 @@\n+serviceability\/attach\/RemovingUnixDomainSocketTest.java 8248162 linux-x64\n+\n","filename":"test\/hotspot\/jtreg\/ProblemList.txt","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -278,1 +278,0 @@\n- -runtime\/ErrorHandling\/ErrorHandler.java \\\n@@ -342,0 +341,1 @@\n+ -runtime\/cds\/appcds\/MismatchedPathTriggerMemoryRelease.java \\\n","filename":"test\/hotspot\/jtreg\/TEST.groups","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -520,1 +520,0 @@\n-java\/awt\/Window\/MainKeyWindowTest\/TestMainKeyWindow.java 8213126 macosx-all\n@@ -673,2 +672,0 @@\n-javax\/net\/ssl\/DTLS\/PacketLossRetransmission.java                8169086 macosx-x64\n-javax\/net\/ssl\/DTLS\/RespondToRetransmit.java                     8169086 macosx-x64\n@@ -736,0 +733,1 @@\n+javax\/swing\/JComboBox\/6559152\/bug6559152.java 8164484 linux-x64\n@@ -739,2 +737,0 @@\n-javax\/swing\/JTable\/4235420\/bug4235420.java     8079127 generic-all\n-javax\/swing\/JSplitPane\/4201995\/bug4201995.java 8079127 generic-all\n@@ -744,3 +740,0 @@\n-javax\/swing\/JComboBox\/6559152\/bug6559152.java 8196090 windows-all,macosx-all\n-javax\/swing\/JComboBox\/8032878\/bug8032878.java 8196092,8196439 windows-all,macosx-all,linux-all\n-javax\/swing\/JComboBox\/8072767\/bug8072767.java 8196093 windows-all,macosx-all\n@@ -749,1 +742,0 @@\n-javax\/swing\/JFrame\/8175301\/ScaledFrameBackgroundTest.java 8193942 generic-all\n@@ -752,1 +744,0 @@\n-javax\/swing\/JPopupMenu\/6675802\/bug6675802.java 8196097 windows-all\n@@ -762,3 +753,0 @@\n-javax\/swing\/JFileChooser\/8062561\/bug8062561.java 8196466 linux-all,macosx-all\n-javax\/swing\/JInternalFrame\/8146321\/JInternalFrameIconTest.java 8225045 linux-all\n-javax\/swing\/JFileChooser\/6868611\/bug6868611.java 7059834 windows-all\n@@ -769,1 +757,0 @@\n-javax\/swing\/PopupFactory\/8048506\/bug8048506.java 8202660 windows-all\n@@ -776,3 +763,0 @@\n-javax\/swing\/JRadioButton\/ButtonGroupFocus\/ButtonGroupFocusTest.java 8233555 macosx-all\n-javax\/swing\/JRadioButton\/8075609\/bug8075609.java 8233555 macosx-all\n-javax\/swing\/JRadioButton\/8033699\/bug8033699.java 8233555 macosx-all\n@@ -873,1 +857,0 @@\n-java\/awt\/Component\/UpdatingBootTime\/UpdatingBootTime.html 7194219 linux-all\n","filename":"test\/jdk\/ProblemList.txt","additions":1,"deletions":18,"binary":false,"changes":19,"status":"modified"}]}