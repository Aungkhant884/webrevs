{"files":[{"patch":"@@ -4116,9 +4116,4 @@\n-     * Modification methods of the returned list (such as {@link List#set} and\n-     * {@link List#replaceAll}) will throw an {@link ArrayStoreException} when\n-     * trying to set a wrong type of element into the list (and the backing\n-     * array).  For example:\n-     * {@snippet :\n-     *   List<Object> list = Arrays.asList((Object[])new String[1]);\n-     *   list.set(0, Integer.valueOf(0));    \/\/ throws ArrayStoreException\n-     *   list.replaceAll(Objects::hashCode); \/\/ throws ArrayStoreException\n-     * }\n+     * The {@link List} implementation returned by this method does not conform to the\n+     * specification for {@link List#replaceAll} and {@link List#set}, in that in the\n+     * event of encountering an element of an unsuitable type, an {@link ArrayStoreException}\n+     * will be thrown instead of a {@link ClassCastException}.\n@@ -4180,5 +4175,0 @@\n-        \/**\n-         * {@inheritDoc}\n-         *\n-         * @throws ArrayStoreException if {@code element} cannot be stored into the array.\n-         *\/\n@@ -4225,6 +4215,0 @@\n-        \/**\n-         * {@inheritDoc}\n-         *\n-         * @throws ArrayStoreException if {@code operator.apply} returns an object which cannot be\n-         *         stored into the array.\n-         *\/\n","filename":"src\/java.base\/share\/classes\/java\/util\/Arrays.java","additions":4,"deletions":20,"binary":false,"changes":24,"status":"modified"}]}