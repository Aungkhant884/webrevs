{"files":[{"patch":"@@ -0,0 +1,84 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4926314\n+ * @summary Test for InputStreamReader#read(CharBuffer).\n+ * @run testng ReadCharBuffer\n+ *\/\n+\n+import org.testng.annotations.DataProvider;\n+import org.testng.annotations.Test;\n+\n+import java.io.*;\n+import java.nio.ByteBuffer;\n+import java.nio.CharBuffer;\n+import java.util.Arrays;\n+\n+import static java.nio.charset.StandardCharsets.US_ASCII;\n+import static org.testng.Assert.assertEquals;\n+\n+public class ReadCharBuffer {\n+\n+    private static final int BUFFER_SIZE = 24;\n+\n+    @DataProvider(name = \"buffers\")\n+    public Object[][] createBuffers() {\n+        \/\/ test both on-heap and off-heap buffers has they make use different code paths\n+        return new Object[][]{\n+                new Object[]{CharBuffer.allocate(BUFFER_SIZE)},\n+                new Object[]{ByteBuffer.allocateDirect(BUFFER_SIZE * 2).asCharBuffer()}\n+        };\n+    }\n+\n+    @Test(dataProvider = \"buffers\")\n+    public void read(CharBuffer buffer) throws IOException {\n+        fillBuffer(buffer);\n+\n+        try (Reader reader = new InputStreamReader(new ByteArrayInputStream(\"ABCDEFGHIJKLMNOPQRTUVWXYZ\".getBytes(US_ASCII)), US_ASCII)) {\n+            buffer.limit(7);\n+            buffer.position(1);\n+            assertEquals(reader.read(buffer), 6);\n+            assertEquals(buffer.position(), 7);\n+            assertEquals(buffer.limit(), 7);\n+\n+            buffer.limit(16);\n+            buffer.position(8);\n+            assertEquals(reader.read(buffer), 8);\n+            assertEquals(buffer.position(), 16);\n+            assertEquals(buffer.limit(), 16);\n+        }\n+\n+        buffer.clear();\n+        assertEquals(buffer.toString(), \"xABCDEFxGHIJKLMNxxxxxxxx\");\n+    }\n+\n+    private void fillBuffer(CharBuffer buffer) {\n+        char[] filler = new char[BUFFER_SIZE];\n+        Arrays.fill(filler, 'x');\n+        buffer.put(filler);\n+        buffer.clear();\n+    }\n+\n+}\n","filename":"test\/jdk\/java\/io\/InputStreamReader\/ReadCharBuffer.java","additions":84,"deletions":0,"binary":false,"changes":84,"status":"added"},{"patch":"@@ -0,0 +1,86 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4926314\n+ * @summary Test for Reader#read(CharBuffer).\n+ * @run testng ReadCharBuffer\n+ *\/\n+\n+import org.testng.annotations.DataProvider;\n+import org.testng.annotations.Test;\n+\n+import java.io.*;\n+import java.nio.ByteBuffer;\n+import java.nio.CharBuffer;\n+import java.util.Arrays;\n+\n+import static java.nio.charset.StandardCharsets.US_ASCII;\n+\n+import static org.testng.Assert.assertEquals;\n+\n+@Test(groups = \"unit\")\n+public class ReadCharBuffer {\n+\n+    private static final int BUFFER_SIZE = 24;\n+\n+    @DataProvider(name = \"buffers\")\n+    public Object[][] createBuffers() {\n+        \/\/ test both on-heap and off-heap buffers has they make use different code paths\n+        return new Object[][]{\n+                new Object[]{CharBuffer.allocate(BUFFER_SIZE)},\n+                new Object[]{ByteBuffer.allocateDirect(BUFFER_SIZE * 2).asCharBuffer()}\n+        };\n+    }\n+\n+    @Test(dataProvider = \"buffers\")\n+    public void read(CharBuffer buffer) throws IOException {\n+        fillBuffer(buffer);\n+\n+        try (Reader reader = new StringReader(\"ABCDEFGHIJKLMNOPQRTUVWXYZ\")) {\n+            buffer.limit(7);\n+            buffer.position(1);\n+            assertEquals(reader.read(buffer), 6);\n+            assertEquals(buffer.position(), 7);\n+            assertEquals(buffer.limit(), 7);\n+\n+            buffer.limit(16);\n+            buffer.position(8);\n+            assertEquals(reader.read(buffer), 8);\n+            assertEquals(buffer.position(), 16);\n+            assertEquals(buffer.limit(), 16);\n+        }\n+\n+        buffer.clear();\n+        assertEquals(buffer.toString(), \"xABCDEFxGHIJKLMNxxxxxxxx\");\n+    }\n+\n+    private void fillBuffer(CharBuffer buffer) {\n+        char[] filler = new char[BUFFER_SIZE];\n+        Arrays.fill(filler, 'x');\n+        buffer.put(filler);\n+        buffer.clear();\n+    }\n+\n+}\n","filename":"test\/jdk\/java\/io\/Reader\/ReadCharBuffer.java","additions":86,"deletions":0,"binary":false,"changes":86,"status":"added"}]}