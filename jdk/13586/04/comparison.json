{"files":[{"patch":"@@ -286,0 +286,1 @@\n+        jdk.jpackage,\n","filename":"src\/java.base\/share\/classes\/module-info.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,0 +49,1 @@\n+import jdk.internal.util.OperatingSystem;\n@@ -511,1 +512,1 @@\n-        return Platform.isLinux() && (new ToolValidator(TOOL_DPKG_DEB).validate() == null);\n+        return OperatingSystem.isLinux() && (new ToolValidator(TOOL_DPKG_DEB).validate() == null);\n","filename":"src\/jdk.jpackage\/linux\/classes\/jdk\/jpackage\/internal\/LinuxDebBundler.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,0 +40,1 @@\n+import jdk.internal.util.OperatingSystem;\n@@ -334,1 +335,1 @@\n-        return Platform.isLinux() && (createRpmbuildToolValidator().validate() == null);\n+        return OperatingSystem.isLinux() && (createRpmbuildToolValidator().validate() == null);\n","filename":"src\/jdk.jpackage\/linux\/classes\/jdk\/jpackage\/internal\/LinuxRpmBundler.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -52,0 +52,2 @@\n+import jdk.internal.util.OperatingSystem;\n+import jdk.internal.util.OSVersion;\n@@ -404,1 +406,1 @@\n-        } else if (Platform.isMac()) {\n+        } else if (OperatingSystem.isMacOS()) {\n@@ -611,3 +613,1 @@\n-        if (Platform.getMajorVersion() < 10 ||\n-                (Platform.getMajorVersion() == 10 &&\n-                Platform.getMinorVersion() < 12)) {\n+        if (OSVersion.current().compareTo(new OSVersion(10, 12)) < 0) {\n@@ -665,3 +665,1 @@\n-        if (Platform.getMajorVersion() < 10 ||\n-                (Platform.getMajorVersion() == 10 &&\n-                Platform.getMinorVersion() < 12)) {\n+        if (OSVersion.current().compareTo(new OSVersion(10, 12)) < 0) {\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/MacAppImageBuilder.java","additions":6,"deletions":8,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,3 @@\n+import jdk.internal.util.Architecture;\n+import jdk.internal.util.OSVersion;\n+\n@@ -321,1 +324,1 @@\n-                    Platform.isArmMac() ? \"arm64\" : \"x86_64\");\n+                    Architecture.isAARCH64() ? \"arm64\" : \"x86_64\");\n@@ -600,3 +603,1 @@\n-                if (Platform.getMajorVersion() > 10 ||\n-                    (Platform.getMajorVersion() == 10 &&\n-                    Platform.getMinorVersion() >= 12)) {\n+                if (OSVersion.current().compareTo(new OSVersion(10, 12)) >= 0) {\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/MacPkgBundler.java","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,0 +33,3 @@\n+\n+import jdk.internal.util.OperatingSystem;\n+\n@@ -131,1 +134,1 @@\n-        if (Platform.isWindows())  {\n+        if (OperatingSystem.isWindows()) {\n@@ -141,1 +144,1 @@\n-        if (Platform.isLinux())  {\n+        if (OperatingSystem.isLinux()) {\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/AddLauncherArguments.java","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,2 @@\n+import jdk.internal.util.OperatingSystem;\n+\n@@ -141,1 +143,1 @@\n-        if (Platform.isMac()) {\n+        if (OperatingSystem.isMacOS()) {\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/AppImageBundler.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,0 +45,2 @@\n+\n+import jdk.internal.util.OperatingSystem;\n@@ -75,3 +77,4 @@\n-    private static final Map<Platform, String> PLATFORM_LABELS = Map.of(\n-            Platform.LINUX, \"linux\", Platform.WINDOWS, \"windows\", Platform.MAC,\n-            \"macOS\");\n+    private static final Map<OperatingSystem, String> PLATFORM_LABELS = Map.of(\n+            OperatingSystem.LINUX, \"linux\",\n+            OperatingSystem.WINDOWS, \"windows\",\n+            OperatingSystem.MACOS, \"macOS\");\n@@ -437,1 +440,1 @@\n-        return PLATFORM_LABELS.get(Platform.getPlatform());\n+        return PLATFORM_LABELS.get(OperatingSystem.current());\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/AppImageFile.java","additions":8,"deletions":5,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,0 +27,2 @@\n+import jdk.internal.util.OperatingSystem;\n+\n@@ -182,1 +184,1 @@\n-        if (Platform.isWindows()) {\n+        if (OperatingSystem.isWindows()) {\n@@ -186,1 +188,1 @@\n-        if (Platform.isLinux()) {\n+        if (OperatingSystem.isLinux()) {\n@@ -190,1 +192,1 @@\n-        if (Platform.isMac()) {\n+        if (OperatingSystem.isMacOS()) {\n@@ -194,1 +196,1 @@\n-        throw Platform.throwUnknownPlatformError();\n+        throw new IllegalArgumentException(\"Unknown platform: \" + OperatingSystem.current());\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/ApplicationLayout.java","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -27,0 +27,2 @@\n+import jdk.internal.util.OperatingSystem;\n+\n@@ -581,1 +583,1 @@\n-        boolean isMac = Platform.isMac();\n+        boolean isMac = OperatingSystem.isMacOS();\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/Arguments.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,2 @@\n+import jdk.internal.util.OperatingSystem;\n+\n@@ -49,2 +51,1 @@\n-            Platform platform = (Log.isVerbose()) ?\n-                    Platform.UNKNOWN : Platform.getPlatform();\n+            OperatingSystem platform = OperatingSystem.current();\n@@ -58,1 +59,1 @@\n-                case MAC:\n+                case MACOS:\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/CLIHelp.java","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,0 +27,2 @@\n+import jdk.internal.util.OperatingSystem;\n+\n@@ -44,1 +46,1 @@\n-        if (Platform.isLinux()) {\n+        if (OperatingSystem.isLinux()) {\n@@ -47,1 +49,1 @@\n-        } else if (Platform.isWindows()) {\n+        } else if (OperatingSystem.isWindows()) {\n@@ -50,1 +52,1 @@\n-        } else if (Platform.isMac()) {\n+        } else if (OperatingSystem.isMacOS()) {\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/I18N.java","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,2 @@\n+import jdk.internal.util.OperatingSystem;\n+\n@@ -80,1 +82,1 @@\n-                if (Platform.getPlatform() == Platform.WINDOWS) {\n+                if (OperatingSystem.isWindows()) {\n@@ -94,1 +96,1 @@\n-                if (Platform.getPlatform() == Platform.WINDOWS) {\n+                if (OperatingSystem.isWindows()) {\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/IOUtils.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -27,0 +27,2 @@\n+import jdk.internal.util.OperatingSystem;\n+\n@@ -361,1 +363,1 @@\n-            if (!Platform.isMac()) {\n+            if (!OperatingSystem.isMacOS()) {\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/LauncherData.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1,125 +0,0 @@\n-\/*\n- * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package jdk.jpackage.internal;\n-\n-import java.util.regex.Pattern;\n-\n-\/**\n- * Platform\n- *\n- * Use <code>Platform<\/code> to detect the operating system\n- * that is currently running.\n- *\n- * Example:\n- *\n- *  Platform platform = Platform.getPlatform();\n- *\n- *  switch(platform) {\n- *    case Platform.MAC: {\n- *      \/\/ Do something\n- *      break;\n- *    }\n- *    case Platform.WINDOWS:\n- *    case Platform.LINUX: {\n- *      \/\/ Do something else\n- *    }\n- *  }\n- *\n- *\/\n-enum Platform {UNKNOWN, WINDOWS, LINUX, MAC;\n-    private static final Platform platform;\n-    private static final int majorVersion;\n-    private static final int minorVersion;\n-\n-    static {\n-        String os = System.getProperty(\"os.name\").toLowerCase();\n-\n-        if (os.indexOf(\"win\") >= 0) {\n-            platform = Platform.WINDOWS;\n-        }\n-        else if (os.indexOf(\"nix\") >= 0 || os.indexOf(\"nux\") >= 0) {\n-            platform = Platform.LINUX;\n-        }\n-        else if (os.indexOf(\"mac\") >= 0) {\n-            platform = Platform.MAC;\n-        }\n-        else {\n-            platform = Platform.UNKNOWN;\n-        }\n-\n-        String version = System.getProperty(\"os.version\");\n-        String[] parts = version.split(Pattern.quote(\".\"));\n-\n-        if (parts.length > 0) {\n-            majorVersion = Integer.parseInt(parts[0]);\n-\n-            if (parts.length > 1) {\n-                minorVersion = Integer.parseInt(parts[1]);\n-            }\n-            else {\n-                minorVersion = -1;\n-            }\n-        }\n-        else {\n-            majorVersion = -1;\n-            minorVersion = -1;\n-        }\n-    }\n-\n-    private Platform() {}\n-\n-    static Platform getPlatform() {\n-        return platform;\n-    }\n-\n-    static int getMajorVersion() {\n-        return majorVersion;\n-    }\n-\n-    static int getMinorVersion() {\n-        return minorVersion;\n-    }\n-\n-    static boolean isWindows() {\n-        return getPlatform() == WINDOWS;\n-    }\n-\n-    static boolean isMac() {\n-        return getPlatform() == MAC;\n-    }\n-\n-    static boolean isArmMac() {\n-        return (isMac() && \"aarch64\".equals(System.getProperty(\"os.arch\")));\n-    }\n-\n-    static boolean isLinux() {\n-        return getPlatform() == LINUX;\n-    }\n-\n-    static RuntimeException throwUnknownPlatformError() {\n-        throw new IllegalArgumentException(\"Unknown platform\");\n-    }\n-}\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/Platform.java","additions":0,"deletions":125,"binary":false,"changes":125,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,2 @@\n+import jdk.internal.util.OperatingSystem;\n+\n@@ -102,1 +104,1 @@\n-        if (Platform.isWindows()) {\n+        if (OperatingSystem.isWindows()) {\n@@ -109,1 +111,1 @@\n-        if (Platform.isWindows()) {\n+        if (OperatingSystem.isWindows()) {\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/ScriptRunner.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,2 @@\n+import jdk.internal.util.OperatingSystem;\n+\n@@ -585,1 +587,1 @@\n-        if (Platform.isMac()) {\n+        if (OperatingSystem.isMacOS()) {\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/StandardBundlerParam.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,0 +27,2 @@\n+import jdk.internal.util.OperatingSystem;\n+\n@@ -48,1 +50,1 @@\n-        if (Platform.getPlatform() == Platform.LINUX) {\n+        if (OperatingSystem.isLinux()) {\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/ToolValidator.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,0 +30,1 @@\n+import jdk.internal.util.OperatingSystem;\n@@ -97,1 +98,1 @@\n-                (Platform.getPlatform() == Platform.MAC) ?\n+                (OperatingSystem.isMacOS()) ?\n@@ -105,1 +106,1 @@\n-            (Platform.getPlatform() == Platform.MAC) ?  USE.ALL : USE.INSTALL);\n+            (OperatingSystem.isMacOS()) ? USE.ALL : USE.INSTALL);\n@@ -107,1 +108,1 @@\n-        if (Platform.getPlatform() == Platform.WINDOWS) {\n+        if (OperatingSystem.isWindows()) {\n@@ -123,1 +124,1 @@\n-        if (Platform.getPlatform() == Platform.MAC) {\n+        if (OperatingSystem.isMacOS()) {\n@@ -141,1 +142,1 @@\n-        if (Platform.getPlatform() == Platform.LINUX) {\n+        if (OperatingSystem.isLinux()) {\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/ValidOptions.java","additions":7,"deletions":6,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,1 @@\n+import jdk.internal.util.OperatingSystem;\n@@ -37,2 +38,2 @@\n-        if (Platform.getPlatform() == Platform.WINDOWS &&\n-            Platform.getMajorVersion() == 10) {\n+        if (OperatingSystem.isWindows() &&\n+                OSVersion.current().major() == 10) {\n","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/WindowsDefender.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,0 +45,1 @@\n+import jdk.internal.util.Architecture;\n@@ -105,1 +106,1 @@\n-        return !(\"x86\".equals(System.getProperty(\"os.arch\")));\n+        return Architecture.is64bit();\n","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/WixFragmentBuilder.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,0 +35,2 @@\n+\n+import jdk.internal.util.OperatingSystem;\n@@ -201,1 +203,1 @@\n-        if (Platform.isWindows()) {\n+        if (OperatingSystem.isWindows()) {\n@@ -204,1 +206,1 @@\n-        } else if (Platform.isLinux()) {\n+        } else if (OperatingSystem.isLinux()) {\n@@ -207,1 +209,1 @@\n-        } else if (Platform.isMac()) {\n+        } else if (OperatingSystem.isMacOS()) {\n@@ -211,1 +213,1 @@\n-            throw Platform.throwUnknownPlatformError();\n+            throw new IllegalArgumentException(\"Unknown platform: \" + OperatingSystem.current());\n","filename":"test\/jdk\/tools\/jpackage\/junit\/jdk\/jpackage\/internal\/OverridableResourceTest.java","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,0 +27,1 @@\n+import jdk.internal.util.OperatingSystem;\n@@ -96,1 +97,1 @@\n-        if (Platform.isWindows()) {\n+        if (OperatingSystem.isWindows()) {\n","filename":"test\/jdk\/tools\/jpackage\/junit\/jdk\/jpackage\/internal\/ToolValidatorTest.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"}]}