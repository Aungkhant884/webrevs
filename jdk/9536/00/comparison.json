{"files":[{"patch":"@@ -293,2 +293,4 @@\n-        mnemonic = key;\n-        fireStateChanged();\n+        if (this.mnemonic != key) {\n+            this.mnemonic = key;\n+            fireStateChanged();\n+        }\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/DefaultButtonModel.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -0,0 +1,60 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 6463708\n+ * @summary Verifies if DefaultButtonModel.setMnemonic\n+ *          generates ChangeEvent for no change\n+ * @run main TestMnemonicEvent\n+ *\/\n+\n+import javax.swing.DefaultButtonModel;\n+import javax.swing.event.ChangeEvent;\n+import javax.swing.event.ChangeListener;\n+\n+public class TestMnemonicEvent implements ChangeListener {\n+\n+    private static ChangeEvent lastEvent;\n+\n+    public void stateChanged(ChangeEvent e) {\n+        lastEvent = e;\n+    }\n+\n+    public static void main(String[] args) {\n+        TestMnemonicEvent test = new TestMnemonicEvent();\n+        DefaultButtonModel m = new DefaultButtonModel();\n+        m.addChangeListener(test);\n+        m.setMnemonic(70);\n+        System.out.println(\"Event triggered: \" + (lastEvent != null));\n+\n+        \/\/ clear the recorded event, set the same mnemonic then check if another\n+        \/\/ event is triggered...\n+        lastEvent = null;\n+        m.setMnemonic(70);\n+        System.out.println(\"Event triggered: \" + (lastEvent != null));\n+        if (lastEvent != null) {\n+            throw new RuntimeException(\"ChangeEvent triggered for same mnemonic\");\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/DefaultButtonModel\/TestMnemonicEvent.java","additions":60,"deletions":0,"binary":false,"changes":60,"status":"added"}]}