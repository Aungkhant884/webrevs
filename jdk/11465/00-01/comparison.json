{"files":[{"patch":"@@ -117,1 +117,3 @@\n- public:\n+  template<typename IN, typename OUT>\n+  inline static OUT assert_block_integrity_internal(IN memblock);\n+public:\n@@ -139,1 +141,2 @@\n-  inline static MallocHeader* assert_block_integrity(const void* memblock);\n+  inline static const MallocHeader* assert_block_integrity(const void* memblock);\n+  inline static MallocHeader* assert_block_integrity(void* memblock);\n","filename":"src\/hotspot\/share\/services\/mallocHeader.hpp","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -86,1 +86,2 @@\n-inline MallocHeader* MallocHeader::assert_block_integrity(const void* memblock) {\n+template<typename IN, typename OUT>\n+inline OUT MallocHeader::assert_block_integrity_internal(IN memblock){\n@@ -96,1 +97,1 @@\n-  MallocHeader* header_pointer = &(((MallocHeader*)memblock)[-1]);\n+  OUT header_pointer = &(((OUT)memblock)[-1]);\n@@ -106,0 +107,7 @@\n+inline MallocHeader* MallocHeader::assert_block_integrity(void* memblock) {\n+  return MallocHeader::assert_block_integrity_internal<void*, MallocHeader*>(memblock);\n+}\n+inline const MallocHeader* MallocHeader::assert_block_integrity(const void* memblock) {\n+  return MallocHeader::assert_block_integrity_internal<const void*, const MallocHeader*>(memblock);\n+}\n+\n","filename":"src\/hotspot\/share\/services\/mallocHeader.inline.hpp","additions":10,"deletions":2,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -36,1 +36,1 @@\n-  MallocHeader* hdr = MallocHeader::assert_block_integrity(payload);\n+  const MallocHeader* hdr = MallocHeader::assert_block_integrity(payload);\n","filename":"test\/hotspot\/gtest\/nmt\/test_nmt_cornercases.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}