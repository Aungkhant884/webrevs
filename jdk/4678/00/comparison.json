{"files":[{"patch":"@@ -819,1 +819,1 @@\n-                res = new VarSymbol(varSymbol.flags(), varSymbol.name, varSymbol.type, varSymbol.owner);\n+                res = new VarSymbol(varSymbol.flags(), varSymbol.name, varSymbol.type, currentMethodSym);\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/TransPatterns.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 8267610\n+ * @bug 8267610 8269738\n@@ -37,0 +37,7 @@\n+    static Number num1 = 1;\n+    static Number num2 = null;\n+    static Number staticNum1 = (num1 instanceof Integer i) ? ((Supplier<Integer>) () -> i).get() : null;\n+    static Number staticNum2 = (num2 instanceof Integer i) ? ((Supplier<Integer>) () -> i).get() : null;\n+    Number instanceNum1 = (num1 instanceof Integer i) ? ((Supplier<Integer>) () -> i).get() : null;\n+    Number instanceNum2 = (num2 instanceof Integer i) ? ((Supplier<Integer>) () -> i).get() : null;\n+\n@@ -42,0 +49,6 @@\n+        assertTrue(staticNum1 != null, \"staticNum1 is null unexpectedly\");\n+        assertTrue(staticNum2 == null, \"staticNum1 is not null unexpectedly\");\n+        assertTrue(testVar.instanceNum1 != null, \"instanceNum1 is null unexpectedly\");\n+        assertTrue(testVar.instanceNum2 == null, \"instanceNum2 is not null unexpectedly\");\n+        assertTrue(staticNum1.intValue() == 1, \"staticNum1.intValue() is not equal to 1\");\n+        assertTrue(testVar.instanceNum1.intValue() == 1, \"instanceNum1.intValue() is not equal to 1\");\n@@ -72,0 +85,5 @@\n+\n+    static void assertTrue(boolean cond, String info) {\n+        if (!cond)\n+            throw new AssertionError(info);\n+    }\n","filename":"test\/langtools\/tools\/javac\/patterns\/LambdaCannotCapturePatternVariables.java","additions":19,"deletions":1,"binary":false,"changes":20,"status":"modified"}]}