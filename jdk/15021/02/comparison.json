{"files":[{"patch":"@@ -219,10 +219,5 @@\n-  const Type *t1 = phase->type( in(1) );\n-  const Type *t2 = phase->type( in(2) );\n-  if( t1 == Type::TOP ) return Type::TOP;\n-  if( t2 == Type::TOP ) return Type::TOP;\n-\n-  \/\/ Either input is BOTTOM ==> the result is the local BOTTOM\n-  const Type *bot = bottom_type();\n-  if( (t1 == bot) || (t2 == bot) ||\n-      (t1 == Type::BOTTOM) || (t2 == Type::BOTTOM) )\n-    return bot;\n+  const Type* t1 = phase->type(in(1));\n+  const Type* t2 = phase->type(in(2));\n+  if (t1 == Type::TOP || t2 == Type::TOP) {\n+    return Type::TOP;\n+  }\n@@ -231,2 +226,4 @@\n-  const Type *tadd = add_of_identity( t1, t2 );\n-  if( tadd ) return tadd;\n+  const Type* tadd = add_of_identity(t1, t2);\n+  if (tadd != nullptr) {\n+    return tadd;\n+  }\n@@ -234,1 +231,1 @@\n-  return add_ring(t1,t2);               \/\/ Local flavor of type addition\n+  return add_ring(t1, t2);               \/\/ Local flavor of type addition\n@@ -516,1 +513,3 @@\n-  \/\/ We must be adding 2 float constants.\n+  if (!t0->isa_float_constant() || !t1->isa_float_constant()) {\n+    return bottom_type();\n+  }\n@@ -547,1 +546,3 @@\n-  \/\/ We must be adding 2 double constants.\n+  if (!t0->isa_double_constant() || !t1->isa_double_constant()) {\n+    return bottom_type();\n+  }\n@@ -1370,3 +1371,6 @@\n-const Type *MinFNode::add_ring( const Type *t0, const Type *t1 ) const {\n-  const TypeF *r0 = t0->is_float_constant();\n-  const TypeF *r1 = t1->is_float_constant();\n+const Type* MinFNode::add_ring(const Type* t0, const Type* t1 ) const {\n+  const TypeF* r0 = t0->isa_float_constant();\n+  const TypeF* r1 = t1->isa_float_constant();\n+  if (r0 == nullptr || r1 == nullptr) {\n+    return bottom_type();\n+  }\n@@ -1392,3 +1396,6 @@\n-const Type *MinDNode::add_ring( const Type *t0, const Type *t1 ) const {\n-  const TypeD *r0 = t0->is_double_constant();\n-  const TypeD *r1 = t1->is_double_constant();\n+const Type* MinDNode::add_ring(const Type* t0, const Type* t1) const {\n+  const TypeD* r0 = t0->isa_double_constant();\n+  const TypeD* r1 = t1->isa_double_constant();\n+  if (r0 == nullptr || r1 == nullptr) {\n+    return bottom_type();\n+  }\n@@ -1414,3 +1421,6 @@\n-const Type *MaxFNode::add_ring( const Type *t0, const Type *t1 ) const {\n-  const TypeF *r0 = t0->is_float_constant();\n-  const TypeF *r1 = t1->is_float_constant();\n+const Type* MaxFNode::add_ring(const Type* t0, const Type* t1) const {\n+  const TypeF* r0 = t0->isa_float_constant();\n+  const TypeF* r1 = t1->isa_float_constant();\n+  if (r0 == nullptr || r1 == nullptr) {\n+    return bottom_type();\n+  }\n@@ -1436,3 +1446,6 @@\n-const Type *MaxDNode::add_ring( const Type *t0, const Type *t1 ) const {\n-  const TypeD *r0 = t0->is_double_constant();\n-  const TypeD *r1 = t1->is_double_constant();\n+const Type* MaxDNode::add_ring(const Type* t0, const Type* t1) const {\n+  const TypeD* r0 = t0->isa_double_constant();\n+  const TypeD* r1 = t1->isa_double_constant();\n+  if (r0 == nullptr || r1 == nullptr) {\n+    return bottom_type();\n+  }\n","filename":"src\/hotspot\/share\/opto\/addnode.cpp","additions":40,"deletions":27,"binary":false,"changes":67,"status":"modified"},{"patch":"@@ -31,1 +31,1 @@\n- * @bug 8290248\n+ * @bug 8290248 8312547\n@@ -48,0 +48,1 @@\n+                 \"testMax4\",\n@@ -50,1 +51,2 @@\n-                 \"testMin3\"})\n+                 \"testMin3\",\n+                 \"testMin4\"})\n@@ -76,0 +78,1 @@\n+        Asserts.assertEQ(0                                                          , testMax4(a));\n@@ -80,0 +83,1 @@\n+        Asserts.assertEQ(0                                                          , testMin4(a));\n@@ -206,0 +210,12 @@\n+    @Test\n+    @IR(failOn = {IRNode.MAX_I})\n+    public int testMax4(int i) {\n+        return Math.max(i, 0) < 0 ? 1 : 0;\n+    }\n+\n+    @Test\n+    @IR(failOn = {IRNode.MIN_I})\n+    public int testMin4(int i) {\n+        return Math.min(i, 0) > 0 ? 1 : 0;\n+    }\n+\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/MaxMinINodeIdealizationTests.java","additions":18,"deletions":2,"binary":false,"changes":20,"status":"modified"}]}