{"files":[{"patch":"@@ -45,1 +45,1 @@\n-        List<String> output1 = tb.grepNotMatch(regex1, input);\n+        List<String> output1 = tb.grep(regex1, input, true);\n@@ -50,1 +50,1 @@\n-        List<String> output2 = tb.grepNotMatch(regex2, input);\n+        List<String> output2 = tb.grep(regex2, input, true);\n@@ -55,1 +55,1 @@\n-        List<String> output3 = tb.grepNotMatch(regex3, input);\n+        List<String> output3 = tb.grep(regex3, input, true);\n@@ -57,0 +57,15 @@\n+\n+        String regex4 = \".*ana.*\";\n+        List<String> expected4 = Arrays.asList(\"banana\");\n+        List<String> output4 = tb.grep(regex4, input, false);\n+        tb.checkEqual(expected4, output4);\n+\n+        String regex5 = \".*nd.*\";\n+        List<String> expected5 = Arrays.asList(\"end\", \"ending\");\n+        List<String> output5 = tb.grep(regex5, input, false);\n+        tb.checkEqual(expected5, output5);\n+\n+        String regex6 = \"apple\";\n+        List<String> expected6 = Arrays.asList(\"apple\");\n+        List<String> output6 = tb.grep(regex6, input, false);\n+        tb.checkEqual(expected6, output6);\n","filename":"test\/langtools\/tools\/javac\/T8241187\/T8241187.java","additions":18,"deletions":3,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -173,1 +173,1 @@\n-        return grep(Pattern.compile(regex), lines);\n+        return grep(Pattern.compile(regex), lines, false);\n@@ -183,3 +183,1 @@\n-        return lines.stream()\n-                .filter(s -> pattern.matcher(s).find())\n-                .collect(Collectors.toList());\n+        return grep(pattern, lines, false);\n@@ -189,1 +187,1 @@\n-     * Filters a list of strings which don't match the given regular expression.\n+     * Filters a list of strings according to the given regular expression.\n@@ -192,1 +190,4 @@\n-     * @return the strings not matching the regular expression\n+     * @param invert identify positive or negative filtering\n+     *               true: negative filtering, return the unmatched strings\n+     *               false: positive filtering, return the matched strings\n+     * @return the strings matching(or not matching) the regular expression\n@@ -194,2 +195,2 @@\n-    public List<String> grepNotMatch(String regex, List<String> lines) {\n-        return grepNotMatch(Pattern.compile(regex), lines);\n+    public List<String> grep(String regex, List<String> lines, boolean invert) {\n+        return grep(Pattern.compile(regex), lines, invert);\n@@ -199,1 +200,1 @@\n-     * Filters a list of strings which don't match the given regular expression.\n+     * Filters a list of strings according to the given regular expression.\n@@ -202,1 +203,4 @@\n-     * @return the strings not matching the regular expression\n+     * @param invert identify positive or negative filtering\n+     *               true: negative filtering, return the unmatched strings\n+     *               false: positive filtering, return the matched strings\n+     * @return the strings matching(or not matching) the regular expression\n@@ -204,4 +208,10 @@\n-    public List<String> grepNotMatch(Pattern pattern, List<String> lines) {\n-        return lines.stream()\n-                .filter(s -> !pattern.matcher(s).find())\n-                .collect(Collectors.toList());\n+    public List<String> grep(Pattern pattern, List<String> lines, boolean invert) {\n+        if (invert) {\n+            return lines.stream()\n+                    .filter(s -> !pattern.matcher(s).find())\n+                    .collect(Collectors.toList());\n+        } else {\n+            return lines.stream()\n+                    .filter(s -> pattern.matcher(s).find())\n+                    .collect(Collectors.toList());\n+        }\n","filename":"test\/langtools\/tools\/lib\/toolbox\/ToolBox.java","additions":25,"deletions":15,"binary":false,"changes":40,"status":"modified"}]}