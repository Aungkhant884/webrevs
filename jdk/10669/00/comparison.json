{"files":[{"patch":"@@ -3,1 +3,1 @@\n-# Copyright (c) 2015, 2016, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -138,0 +138,22 @@\n+# Returns a shell-escaped version of the argument given.\n+shell_quote() {\n+  if [[ -n \"$1\" ]]; then\n+    # Uses only shell-safe characters?  No quoting needed.\n+    # '=' is a zsh meta-character, but only in word-initial position.\n+    if echo \"$1\" | grep '^[ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\\.:,%\/+=_-]\\{1,\\}$' > \/dev\/null \\\n+        && ! echo \"$1\" | grep '^=' > \/dev\/null; then\n+      quoted=\"$1\"\n+    else\n+      if echo \"$1\" | grep \"[\\'!]\" > \/dev\/null; then\n+        # csh does history expansion within single quotes, but not\n+        # when backslash-escaped!\n+        local quoted_quote=\"'\\\\''\" quoted_exclam=\"'\\\\!'\"\n+        word=\"${1\/\/\\'\/${quoted_quote}}\"\n+        word=\"${1\/\/\\!\/${quoted_exclam}}\"\n+      fi\n+      quoted=\"'$1'\"\n+    fi\n+    echo \"$quoted\"\n+  fi\n+}\n+\n@@ -154,0 +176,12 @@\n+\n+# Save the original command line\n+conf_quoted_arguments=()\n+for conf_option; do\n+  conf_quoted_arguments=(\"${conf_quoted_arguments[@]}\" \"$(shell_quote \"$conf_option\")\")\n+done\n+export REAL_CONFIGURE_COMMAND_LINE=\"${conf_quoted_arguments[@]}\"\n+\n+myfulldir=\"$(cd \"${mydir}\" > \/dev\/null && pwd)\"\n+export REAL_CONFIGURE_COMMAND_EXEC_FULL=\"$BASH $myfulldir\/$myname\"\n+export REAL_CONFIGURE_COMMAND_EXEC_SHORT=\"$myname\"\n+\n","filename":"bin\/jib.sh","additions":35,"deletions":1,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -280,1 +280,4 @@\n-        ifneq ($(CONFIGURE_COMMAND_LINE), )\n+        ifneq ($(REAL_CONFIGURE_COMMAND_EXEC_FULL), )\n+\t  $(ECHO) \"Re-running configure using original command line '$(REAL_CONFIGURE_COMMAND_EXEC_SHORT) $(REAL_CONFIGURE_COMMAND_LINE)'\"\n+\t  $(eval RECONFIGURE_COMMAND := $(REAL_CONFIGURE_COMMAND_EXEC_FULL) $(REAL_CONFIGURE_COMMAND_LINE))\n+        else ifneq ($(CONFIGURE_COMMAND_LINE), )\n@@ -282,0 +285,1 @@\n+\t  $(eval RECONFIGURE_COMMAND := $(BASH) $(TOPDIR)\/configure $(CONFIGURE_COMMAND_LINE))\n@@ -284,0 +288,1 @@\n+\t  $(eval RECONFIGURE_COMMAND := $(BASH) $(TOPDIR)\/configure)\n@@ -288,1 +293,1 @@\n-\t    $(BASH) $(TOPDIR)\/configure $(CONFIGURE_COMMAND_LINE) )\n+\t    $(RECONFIGURE_COMMAND) )\n","filename":"make\/Init.gmk","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -34,0 +34,5 @@\n+  # We might have the original command line if the wrapper was called by some\n+  # other script.\n+  AC_SUBST(REAL_CONFIGURE_COMMAND_EXEC_SHORT)\n+  AC_SUBST(REAL_CONFIGURE_COMMAND_EXEC_FULL)\n+  AC_SUBST(REAL_CONFIGURE_COMMAND_LINE)\n","filename":"make\/autoconf\/basic.m4","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -281,0 +281,5 @@\n+  if test \"x$REAL_CONFIGURE_COMMAND_EXEC_FULL\" != x; then\n+    printf \"\\n\"\n+    printf \"The original configure invocation was '$REAL_CONFIGURE_COMMAND_EXEC_SHORT $REAL_CONFIGURE_COMMAND_LINE'.\\n\"\n+  fi\n+\n","filename":"make\/autoconf\/help.m4","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -38,0 +38,5 @@\n+# How configure was originally called, if not called directly\n+REAL_CONFIGURE_COMMAND_EXEC_SHORT := @REAL_CONFIGURE_COMMAND_EXEC_SHORT@\n+REAL_CONFIGURE_COMMAND_EXEC_FULL := @REAL_CONFIGURE_COMMAND_EXEC_FULL@\n+REAL_CONFIGURE_COMMAND_LINE := @REAL_CONFIGURE_COMMAND_LINE@\n+\n","filename":"make\/autoconf\/spec.gmk.in","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"}]}