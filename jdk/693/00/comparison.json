{"files":[{"patch":"@@ -35,4 +35,1 @@\n- *          same seed results in the same compilation. The output of\n- *          PrintOptoStatistics is used to compare among compilations, instead\n- *          of the more intuitive TraceOptoPipelining which prints\n- *          non-deterministic memory addresses.\n+ *          same seed yields the same code motion trace.\n@@ -46,1 +43,1 @@\n-    static String optoStats(String stressOpt, int stressSeed) throws Exception {\n+    static String cmTrace(String stressOpt, int stressSeed) throws Exception {\n@@ -49,1 +46,1 @@\n-            \"-Xcomp\", \"-XX:-TieredCompilation\",\n+            \"-Xcomp\", \"-XX:-TieredCompilation\", \"-XX:-Inline\",\n@@ -51,1 +48,1 @@\n-            \"-XX:+PrintOptoStatistics\", \"-XX:+\" + stressOpt,\n+            \"-XX:+TraceOptoPipelining\", \"-XX:+\" + stressOpt,\n@@ -55,1 +52,18 @@\n-        return out.getStdout();\n+        \/\/ Extract the trace of our method (the last one after those of all\n+        \/\/ mandatory stubs such as _new_instance_Java, etc.).\n+        String [] traces = out.getStdout().split(\"\\\\R\");\n+        int start = -1;\n+        for (int i = traces.length - 1; i >= 0; i--) {\n+            if (traces[i].contains(\"Start GlobalCodeMotion\")) {\n+                start = i;\n+                break;\n+            }\n+        }\n+        \/\/ We should have found the start of the trace.\n+        Asserts.assertTrue(start >= 0,\n+            \"could not find the code motion trace\");\n+        String trace = \"\";\n+        for (int i = start; i < traces.length; i++) {\n+            trace += traces[i] + \"\\n\";\n+        }\n+        return trace;\n@@ -67,2 +81,4 @@\n-            Asserts.assertEQ(optoStats(stressOpt, 10), optoStats(stressOpt, 10),\n-                \"got different optimization stats for the same seed\");\n+            for (int s = 0; s < 10; s++) {\n+                Asserts.assertEQ(cmTrace(stressOpt, s), cmTrace(stressOpt, s),\n+                    \"got different code motion traces for the same seed \" + s);\n+            }\n","filename":"test\/hotspot\/jtreg\/compiler\/debug\/TestStressCM.java","additions":26,"deletions":10,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -45,1 +45,1 @@\n-            \"-Xcomp\", \"-XX:-TieredCompilation\",\n+            \"-Xcomp\", \"-XX:-TieredCompilation\", \"-XX:-Inline\",\n@@ -62,2 +62,4 @@\n-            Asserts.assertEQ(igvnTrace(10), igvnTrace(10),\n-                \"got different IGVN traces for the same seed\");\n+            for (int s = 0; s < 10; s++) {\n+                Asserts.assertEQ(igvnTrace(s), igvnTrace(s),\n+                    \"got different IGVN traces for the same seed\");\n+            }\n","filename":"test\/hotspot\/jtreg\/compiler\/debug\/TestStressIGVN.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"}]}