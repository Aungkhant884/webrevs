{"files":[{"patch":"@@ -1778,3 +1778,6 @@\n-instruct string_indexof_char_sve(iRegP_R1 str1, iRegI_R2 cnt1, iRegI_R3 ch,\n-                                 iRegI_R0 result, vReg ztmp1, vReg ztmp2,\n-                                 pRegGov pgtmp, pReg ptmp, rFlagsReg cr)\n+\/\/ Intrisics for String.indexOf(char)\n+\n+\n+instruct stringL_indexof_char_sve(iRegP_R1 str1, iRegI_R2 cnt1, iRegI_R3 ch,\n+                                  iRegI_R0 result, vReg ztmp1, vReg ztmp2,\n+                                  pRegGov pgtmp, pReg ptmp, rFlagsReg cr)\n@@ -1783,1 +1786,1 @@\n-  predicate((UseSVE > 0) && (((StrIndexOfCharNode*)n)->encoding() == StrIntrinsicNode::U));\n+  predicate((UseSVE > 0) && (((StrIndexOfCharNode*)n)->encoding() == StrIntrinsicNode::L));\n@@ -1786,1 +1789,1 @@\n-  format %{ \"StringUTF16 IndexOf char[] $str1,$cnt1,$ch -> $result # use sve\" %}\n+  format %{ \"StringLatin1 IndexOf char[] $str1,$cnt1,$ch -> $result # use sve\" %}\n@@ -1791,1 +1794,1 @@\n-                               as_PRegister($pgtmp$$reg), as_PRegister($ptmp$$reg), false \/* isL *\/);\n+                               as_PRegister($pgtmp$$reg), as_PRegister($ptmp$$reg), true \/* isL *\/);\n@@ -1796,1 +1799,1 @@\n-instruct stringL_indexof_char_sve(iRegP_R1 str1, iRegI_R2 cnt1, iRegI_R3 ch,\n+instruct stringU_indexof_char_sve(iRegP_R1 str1, iRegI_R2 cnt1, iRegI_R3 ch,\n@@ -1801,1 +1804,1 @@\n-  predicate((UseSVE > 0) && (((StrIndexOfCharNode*)n)->encoding() == StrIntrinsicNode::L));\n+  predicate((UseSVE > 0) && (((StrIndexOfCharNode*)n)->encoding() == StrIntrinsicNode::U));\n@@ -1804,1 +1807,1 @@\n-  format %{ \"StringLatin1 IndexOf char[] $str1,$cnt1,$ch -> $result # use sve\" %}\n+  format %{ \"StringUTF16 IndexOf char[] $str1,$cnt1,$ch -> $result # use sve\" %}\n@@ -1809,1 +1812,1 @@\n-                               as_PRegister($pgtmp$$reg), as_PRegister($ptmp$$reg), true \/* isL *\/);\n+                               as_PRegister($pgtmp$$reg), as_PRegister($ptmp$$reg), false \/* isL *\/);\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64_sve.ad","additions":13,"deletions":10,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -922,9 +922,1 @@\n-instruct string_indexof_char_sve(iRegP_R1 str1, iRegI_R2 cnt1, iRegI_R3 ch,\n-                                 iRegI_R0 result, vReg ztmp1, vReg ztmp2,\n-                                 pRegGov pgtmp, pReg ptmp, rFlagsReg cr)\n-%{\n-  match(Set result (StrIndexOfChar (Binary str1 cnt1) ch));\n-  predicate((UseSVE > 0) && (((StrIndexOfCharNode*)n)->encoding() == StrIntrinsicNode::U));\n-  effect(TEMP ztmp1, TEMP ztmp2, TEMP pgtmp, TEMP ptmp, KILL cr);\n-\n-  format %{ \"StringUTF16 IndexOf char[] $str1,$cnt1,$ch -> $result # use sve\" %}\n+\/\/ Intrisics for String.indexOf(char)\n@@ -932,9 +924,3 @@\n-  ins_encode %{\n-    __ string_indexof_char_sve($str1$$Register, $cnt1$$Register, $ch$$Register, $result$$Register,\n-                               as_FloatRegister($ztmp1$$reg), as_FloatRegister($ztmp2$$reg),\n-                               as_PRegister($pgtmp$$reg), as_PRegister($ptmp$$reg), false \/* isL *\/);\n-  %}\n-  ins_pipe(pipe_class_memory);\n-%}\n-\n-instruct stringL_indexof_char_sve(iRegP_R1 str1, iRegI_R2 cnt1, iRegI_R3 ch,\n+dnl\n+define(`STRING_INDEXOF_CHAR', `\n+instruct string$1_indexof_char_sve(iRegP_R1 str1, iRegI_R2 cnt1, iRegI_R3 ch,\n@@ -945,1 +931,1 @@\n-  predicate((UseSVE > 0) && (((StrIndexOfCharNode*)n)->encoding() == StrIntrinsicNode::L));\n+  predicate((UseSVE > 0) && (((StrIndexOfCharNode*)n)->encoding() == StrIntrinsicNode::$1));\n@@ -948,1 +934,1 @@\n-  format %{ \"StringLatin1 IndexOf char[] $str1,$cnt1,$ch -> $result # use sve\" %}\n+  format %{ \"String$2 IndexOf char[] $str1,$cnt1,$ch -> $result # use sve\" %}\n@@ -953,1 +939,1 @@\n-                               as_PRegister($pgtmp$$reg), as_PRegister($ptmp$$reg), true \/* isL *\/);\n+                               as_PRegister($pgtmp$$reg), as_PRegister($ptmp$$reg), $3 \/* isL *\/);\n@@ -956,1 +942,5 @@\n-%}\n+%}')dnl\n+dnl                 $1 $2      $3\n+STRING_INDEXOF_CHAR(L, Latin1, true)\n+STRING_INDEXOF_CHAR(U, UTF16,  false)\n+dnl\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64_sve_ad.m4","additions":12,"deletions":22,"binary":false,"changes":34,"status":"modified"}]}