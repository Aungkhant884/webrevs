{"files":[{"patch":"@@ -49,1 +49,1 @@\n-    rolesMap = [[NSMutableDictionary alloc] initWithCapacity:4];\n+    rolesMap = [[NSMutableDictionary alloc] initWithCapacity:6];\n@@ -55,1 +55,2 @@\n-\n+    [rolesMap setObject:@\"StaticTextAccessibility\" forKey:@\"hyperlink\"];\n+    [rolesMap setObject:@\"StaticTextAccessibility\" forKey:@\"label\"];\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/CommonComponentAccessibility.m","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -0,0 +1,42 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#ifndef COMMON_TEXT_ACCESSIBILITY\n+#define COMMON_TEXT_ACCESSIBILITY\n+\n+#import \"CommonComponentAccessibility.h\"\n+#import \"JavaAccessibilityUtilities.h\"\n+\n+#import <AppKit\/NSAccessibility.h>\n+\n+@interface CommonTextAccessibility : CommonComponentAccessibility {\n+\n+}\n+- (nullable NSString *)accessibilityValueAttribute;\n+- (NSRange)accessibilityVisibleCharacterRangeAttribute;\n+- (nullable NSString *)accessibilityStringForRangeAttribute:(NSRange)parameter;\n+@end\n+\n+#endif\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/CommonTextAccessibility.h","additions":42,"deletions":0,"binary":false,"changes":42,"status":"added"},{"patch":"@@ -0,0 +1,141 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#import \"CommonTextAccessibility.h\"\n+#import \"ThreadUtilities.h\"\n+#import \"JNIUtilities.h\"\n+\n+#define DEFAULT_RANGE NSMakeRange(0, 0)\n+#define DEFAULT_RECT NSMakeRect(0, 0, 0, 0)\n+\n+static jclass sjc_CAccessibility = NULL;\n+static jmethodID sjm_getAccessibleText = NULL;\n+#define GET_ACCESSIBLETEXT_METHOD_RETURN(ret) \\\n+    GET_CACCESSIBILITY_CLASS_RETURN(ret); \\\n+    GET_STATIC_METHOD_RETURN(sjm_getAccessibleText, sjc_CAccessibility, \"getAccessibleText\", \\\n+              \"(Ljavax\/accessibility\/Accessible;Ljava\/awt\/Component;)Ljavax\/accessibility\/AccessibleText;\", ret);\n+\n+static jclass sjc_CAccessibleText = NULL;\n+#define GET_CACCESSIBLETEXT_CLASS() \\\n+    GET_CLASS(sjc_CAccessibleText, \"sun\/lwawt\/macosx\/CAccessibleText\");\n+#define GET_CACCESSIBLETEXT_CLASS_RETURN(ret) \\\n+    GET_CLASS_RETURN(sjc_CAccessibleText, \"sun\/lwawt\/macosx\/CAccessibleText\", ret);\n+\n+static jmethodID sjm_getAccessibleEditableText = NULL;\n+#define GET_ACCESSIBLEEDITABLETEXT_METHOD_RETURN(ret) \\\n+    GET_CACCESSIBLETEXT_CLASS_RETURN(ret); \\\n+    GET_STATIC_METHOD_RETURN(sjm_getAccessibleEditableText, sjc_CAccessibleText, \"getAccessibleEditableText\", \\\n+              \"(Ljavax\/accessibility\/Accessible;Ljava\/awt\/Component;)Ljavax\/accessibility\/AccessibleEditableText;\", ret);\n+\n+\/*\n+ * Converts an int array to an NSRange wrapped inside an NSValue\n+ * takes [start, end] values and returns [start, end - start]\n+ *\/\n+static NSRange javaIntArrayToNSRange(JNIEnv* env, jintArray array) {\n+    jint *values = (*env)->GetIntArrayElements(env, array, 0);\n+    if (values == NULL) {\n+        NSLog(@\"%s failed calling GetIntArrayElements\", __FUNCTION__);\n+        return DEFAULT_RANGE;\n+    };\n+    return NSMakeRange(values[0], values[1] - values[0]);\n+}\n+\n+@implementation CommonTextAccessibility\n+\n+- (nullable NSString *)accessibilityValueAttribute\n+{\n+    JNIEnv *env = [ThreadUtilities getJNIEnv];\n+    GET_CACCESSIBILITY_CLASS_RETURN(nil);\n+    DECLARE_STATIC_METHOD_RETURN(sjm_getAccessibleName, sjc_CAccessibility, \"getAccessibleName\",\n+                          \"(Ljavax\/accessibility\/Accessible;Ljava\/awt\/Component;)Ljava\/lang\/String;\", nil);\n+    if ([[self accessibilityRoleAttribute] isEqualToString:NSAccessibilityStaticTextRole]) {\n+        jobject axName = (*env)->CallStaticObjectMethod(env, sjc_CAccessibility,\n+                           sjm_getAccessibleName, fAccessible, fComponent);\n+        CHECK_EXCEPTION();\n+        if (axName != NULL) {\n+            NSString* str = JNFJavaToNSString(env, axName);\n+            (*env)->DeleteLocalRef(env, axName);\n+            return str;\n+        }\n+        \/\/ value is still nil if no accessibleName for static text. Below, try to get the accessibleText.\n+    }\n+\n+    GET_ACCESSIBLETEXT_METHOD_RETURN(@\"\");\n+    jobject axText = (*env)->CallStaticObjectMethod(env, sjc_CAccessibility,\n+                      sjm_getAccessibleText, fAccessible, fComponent);\n+    CHECK_EXCEPTION();\n+    if (axText == NULL) return nil;\n+    (*env)->DeleteLocalRef(env, axText);\n+\n+    GET_ACCESSIBLEEDITABLETEXT_METHOD_RETURN(nil);\n+    jobject axEditableText = (*env)->CallStaticObjectMethod(env, sjc_CAccessibleText,\n+                       sjm_getAccessibleEditableText, fAccessible, fComponent);\n+    CHECK_EXCEPTION();\n+    if (axEditableText == NULL) return nil;\n+\n+    DECLARE_STATIC_METHOD_RETURN(jm_getTextRange, sjc_CAccessibleText, \"getTextRange\",\n+                    \"(Ljavax\/accessibility\/AccessibleEditableText;IILjava\/awt\/Component;)Ljava\/lang\/String;\", nil);\n+    jobject jrange = (*env)->CallStaticObjectMethod(env, sjc_CAccessibleText, jm_getTextRange,\n+                       axEditableText, 0, getAxTextCharCount(env, axEditableText, fComponent), fComponent);\n+    CHECK_EXCEPTION();\n+    NSString *string = JNFJavaToNSString(env, jrange); \/\/ AWT_THREADING Safe (AWTRunLoop)\n+\n+    (*env)->DeleteLocalRef(env, jrange);\n+    (*env)->DeleteLocalRef(env, axEditableText);\n+\n+    if (string == nil) string = @\"\";\n+    return string;\n+}\n+\n+- (NSRange)accessibilityVisibleCharacterRangeAttribute\n+{\n+    JNIEnv *env = [ThreadUtilities getJNIEnv];\n+    GET_CACCESSIBLETEXT_CLASS_RETURN(DEFAULT_RANGE);\n+    DECLARE_STATIC_METHOD_RETURN(jm_getVisibleCharacterRange, sjc_CAccessibleText, \"getVisibleCharacterRange\",\n+                          \"(Ljavax\/accessibility\/Accessible;Ljava\/awt\/Component;)[I\", DEFAULT_RANGE);\n+    jintArray axTextRange = (*env)->CallStaticObjectMethod(env, sjc_CAccessibleText,\n+                 jm_getVisibleCharacterRange, fAccessible, fComponent); \/\/ AWT_THREADING Safe (AWTRunLoop)\n+    CHECK_EXCEPTION();\n+    if (axTextRange == NULL) return DEFAULT_RANGE;\n+\n+    return javaIntArrayToNSRange(env, axTextRange);\n+}\n+\n+- (nullable NSString *)accessibilityStringForRangeAttribute:(NSRange)range\n+{\n+    JNIEnv *env = [ThreadUtilities getJNIEnv];\n+    GET_CACCESSIBLETEXT_CLASS_RETURN(nil);\n+    DECLARE_STATIC_METHOD_RETURN(jm_getStringForRange, sjc_CAccessibleText, \"getStringForRange\",\n+                 \"(Ljavax\/accessibility\/Accessible;Ljava\/awt\/Component;II)Ljava\/lang\/String;\", nil);\n+    jstring jstringForRange = (jstring)(*env)->CallStaticObjectMethod(env, sjc_CAccessibleText, jm_getStringForRange,\n+                            fAccessible, fComponent, range.location, range.length); \/\/ AWT_THREADING Safe (AWTRunLoop)\n+    CHECK_EXCEPTION();\n+    if (jstringForRange == NULL) return @\"\";\n+    NSString* str = JNFJavaToNSString(env, jstringForRange);\n+    (*env)->DeleteLocalRef(env, jstringForRange);\n+    return str;\n+}\n+\n+@end\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/CommonTextAccessibility.m","additions":141,"deletions":0,"binary":false,"changes":141,"status":"added"},{"patch":"@@ -0,0 +1,41 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#ifndef STATIC_TEXT_ACCESSIBILITY\n+#define STATIC_TEXT_ACCESSIBILITY\n+\n+#import \"CommonTextAccessibility.h\"\n+\n+#import <AppKit\/NSAccessibility.h>\n+\n+\n+@interface StaticTextAccessibility : CommonTextAccessibility<NSAccessibilityStaticText> {\n+\n+};\n+- (nullable NSString *)accessibilityAttributedString:(NSRange)range;\n+- (nullable NSString *)accessibilityValue;\n+- (NSRange)accessibilityVisibleCharacterRange;\n+@end\n+#endif\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/StaticTextAccessibility.h","additions":41,"deletions":0,"binary":false,"changes":41,"status":"added"},{"patch":"@@ -0,0 +1,45 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#import \"StaticTextAccessibility.h\"\n+\n+@implementation StaticTextAccessibility\n+\n+- (nullable NSString *)accessibilityAttributedString:(NSRange)range\n+{\n+    return [self accessibilityStringForRangeAttribute:range];\n+}\n+\n+- (nullable NSString *)accessibilityValue\n+{\n+    return [self accessibilityValueAttribute];\n+}\n+\n+- (NSRange)accessibilityVisibleCharacterRange\n+{\n+    return [self accessibilityVisibleCharacterRangeAttribute];\n+}\n+\n+@end\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/StaticTextAccessibility.m","additions":45,"deletions":0,"binary":false,"changes":45,"status":"added"}]}