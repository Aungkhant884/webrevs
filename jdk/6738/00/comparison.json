{"files":[{"patch":"@@ -58,1 +58,1 @@\n-                                                Register tmp,    bool precise) {\n+                                                Register tmp,    bool precise, bool toASCII) {\n@@ -61,0 +61,3 @@\n+  unsigned short char_mask = 0xff00;  \/\/ all selected bits must be '0' for a char to be valid\n+  unsigned int   mask_ix_l = 0;       \/\/ leftmost one bit pos in mask\n+  unsigned int   mask_ix_r = 7;       \/\/ rightmost one bit pos in mask\n@@ -62,1 +65,7 @@\n-    BLOCK_COMMENT(\"encode_iso_array {\");\n+    if (toASCII) {\n+      BLOCK_COMMENT(\"encode_ascii_array {\");\n+      char_mask = 0xff80;\n+      int   mask_ix_r = 8;   \/\/ rightmost one bit pos in mask. ASCII only uses codes 0..127\n+    } else {\n+      BLOCK_COMMENT(\"encode_iso_array {\");\n+    }\n@@ -75,2 +84,2 @@\n-  z_iilf(Rmask, 0xFF00FF00);\n-  z_iihf(Rmask, 0xFF00FF00);\n+  z_iilf(Rmask, (unsigned int)char_mask<<16 | (unsigned int)char_mask);\n+  z_iihf(Rmask, (unsigned int)char_mask<<16 | (unsigned int)char_mask);\n@@ -81,1 +90,1 @@\n-    \/\/   Strings with 4 and 8 characters were fond to occur very frequently.\n+    \/\/   Strings with 4 and 8 characters were found to occur very frequently.\n@@ -153,1 +162,1 @@\n-    z_vgmh(Vmask, 0, 7);                   \/\/ generate 0xff00 mask for all 2-byte elements\n+    z_vgmh(Vmask, mask_ix_l, mask_ix_r);   \/\/ generate 0xff00\/0xff80 mask for all 2-byte elements\n@@ -165,1 +174,1 @@\n-      z_vceqhs(Vtmp1, Vtmp1, Vzero);       \/\/ high half of all chars must be zero for successful compress.\n+      z_vceqhs(Vtmp1, Vtmp1, Vzero);       \/\/ all bits selected by mask must be zero for successful compress.\n@@ -200,1 +209,1 @@\n-    z_sra(Rix, log_min_cnt);             \/\/ unrolled loop count\n+    z_sra(Rix, log_min_cnt);               \/\/ unrolled loop count\n@@ -277,1 +286,1 @@\n-      z_tmll(Z_R1, 0xff00);\n+      z_tmll(Z_R1, char_mask);\n@@ -286,1 +295,1 @@\n-      z_tmll(Z_R1, 0xff00);\n+      z_tmll(Z_R1, char_mask);\n@@ -290,1 +299,1 @@\n-      z_tmll(Z_R0, 0xff00);\n+      z_tmll(Z_R0, char_mask);\n@@ -312,1 +321,1 @@\n-      z_tmll(Z_R1, 0xff00);\n+      z_tmll(Z_R1, char_mask);\n@@ -332,1 +341,5 @@\n-    BLOCK_COMMENT(\"} encode_iso_array\");\n+    if (toASCII) {\n+      BLOCK_COMMENT(\"} encode_ascii_array\");\n+    } else {\n+      BLOCK_COMMENT(\"} encode_iso_array\");\n+    }\n","filename":"src\/hotspot\/cpu\/s390\/c2_MacroAssembler_s390.cpp","additions":26,"deletions":13,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-                               Register tmp,    bool precise);\n+                               Register tmp,    bool precise, bool toASCII);\n","filename":"src\/hotspot\/cpu\/s390\/c2_MacroAssembler_s390.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -156,1 +156,1 @@\n-  static const bool supports_encode_ascii_array = false;\n+  static const bool supports_encode_ascii_array = true;\n","filename":"src\/hotspot\/cpu\/s390\/matcher_s390.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -10233,1 +10233,1 @@\n-                       $tmp$$Register, false);\n+                       $tmp$$Register, false, false);\n@@ -10294,1 +10294,1 @@\n-  format %{ \"Encode array $src->$dst($len) -> $result\" %}\n+  format %{ \"Encode iso array $src->$dst($len) -> $result\" %}\n@@ -10297,1 +10297,15 @@\n-                       $tmp$$Register, true);\n+                       $tmp$$Register, true, false);\n+  %}\n+  ins_pipe(pipe_class_dummy);\n+%}\n+\n+\/\/ encode char[] to byte[] in ASCII\n+instruct encode_ascii_array(iRegP src, iRegP dst, iRegI result, iRegI len, iRegI tmp, flagsReg cr) %{\n+  predicate(((EncodeISOArrayNode*)n)->is_ascii());\n+  match(Set result (EncodeISOArray src (Binary dst len)));\n+  effect(TEMP_DEF result, TEMP tmp, KILL cr); \/\/ R0, R1 are killed, too.\n+  ins_cost(300);\n+  format %{ \"Encode ascii array $src->$dst($len) -> $result\" %}\n+  ins_encode %{\n+    __ string_compress($result$$Register, $src$$Register, $dst$$Register, $len$$Register,\n+                       $tmp$$Register, true, true);\n","filename":"src\/hotspot\/cpu\/s390\/s390.ad","additions":17,"deletions":3,"binary":false,"changes":20,"status":"modified"}]}