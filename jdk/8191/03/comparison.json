{"files":[{"patch":"@@ -115,6 +115,0 @@\n-    \/\/ disallowed\n-    private PSSParameterSpec() {\n-        throw new RuntimeException(\"default constructor not allowed\");\n-    }\n-\n-\n","filename":"src\/java.base\/share\/classes\/java\/security\/spec\/PSSParameterSpec.java","additions":0,"deletions":6,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -75,7 +75,0 @@\n- * <p>Note: the OAEPParameterSpec.DEFAULT uses the following:\n- * <pre>\n- *     message digest  -- \"SHA-1\"\n- *     mask generation function (mgf) -- \"MGF1\"\n- *     parameters for mgf -- MGF1ParameterSpec.SHA1\n- *     source of encoding input -- PSource.PSpecified.DEFAULT\n- * <\/pre>\n@@ -92,9 +85,4 @@\n-    private String mdName = \"SHA-1\";\n-    private String mgfName = \"MGF1\";\n-    private AlgorithmParameterSpec mgfSpec = MGF1ParameterSpec.SHA1;\n-    private PSource pSrc = PSource.PSpecified.DEFAULT;\n-\n-    \/**\n-     * The OAEP parameter set with all default values.\n-     *\/\n-    public static final OAEPParameterSpec DEFAULT = new OAEPParameterSpec();\n+    private final String mdName;\n+    private final String mgfName;\n+    private final AlgorithmParameterSpec mgfSpec;\n+    private final PSource pSrc;\n@@ -103,2 +91,15 @@\n-     * Constructs a parameter set for OAEP padding as defined in\n-     * the PKCS #1 standard using the default values.\n+     * The OAEP parameter set with all default values, i.e. \"SHA-1\" as message\n+     * digest algorithm, \"MGF1\" as mask generation function (mgf) algorithm,\n+     * {@code MGF1ParameterSpec.SHA1} as parameters for the mask generation\n+     * function, and {@code PSource.PSpecified.DEFAULT} as the source of the\n+     * encoding input.\n+     *\n+     * @deprecated This field uses the default values defined in the PKCS #1\n+     *         standard. Some of these defaults are no longer recommended due\n+     *         to advances in cryptanalysis -- see\n+     *         <a href=\"https:\/\/www.rfc-editor.org\/rfc\/rfc8017#appendix-B.1\">Appendix B.1 of PKCS #1<\/a>\n+     *         for more details. Thus, it is recommended to create\n+     *         a new {@code OAEPParameterSpec} with the desired parameter values\n+     *         using the\n+     *         {@link #OAEPParameterSpec(String, String, AlgorithmParameterSpec, PSource)} constructor.\n+     *\n@@ -106,2 +107,4 @@\n-    private OAEPParameterSpec() {\n-    }\n+    @Deprecated(since=\"19\")\n+    public static final OAEPParameterSpec DEFAULT = new OAEPParameterSpec(\n+            \"SHA-1\", \"MGF1\", MGF1ParameterSpec.SHA1,\n+            PSource.PSpecified.DEFAULT);\n@@ -112,4 +115,4 @@\n-     * algorithm <code>mdName<\/code>, mask generation function\n-     * algorithm <code>mgfName<\/code>, parameters for the mask\n-     * generation function <code>mgfSpec<\/code>, and source of\n-     * the encoding input P <code>pSrc<\/code>.\n+     * algorithm {@code mdName}, mask generation function\n+     * algorithm {@code mgfName}, parameters for the mask\n+     * generation function {@code mgfSpec}, and source of\n+     * the encoding input P {@code pSrc}.\n@@ -117,8 +120,8 @@\n-     * @param mdName the algorithm name for the message digest.\n-     * @param mgfName the algorithm name for the mask generation\n-     * function.\n-     * @param mgfSpec the parameters for the mask generation function.\n-     * If null is specified, null will be returned by getMGFParameters().\n-     * @param pSrc the source of the encoding input P.\n-     * @exception NullPointerException if <code>mdName<\/code>,\n-     * <code>mgfName<\/code>, or <code>pSrc<\/code> is null.\n+     * @param mdName the algorithm name for the message digest\n+     * @param mgfName the algorithm name for the mask generation function\n+     * @param mgfSpec the parameters for the mask generation function;\n+     * if {@code null} is specified, {@code null} will be returned by\n+     * {@link #getMGFParameters()}\n+     * @param pSrc the source of the encoding input P\n+     * @throws NullPointerException if {@code mdName},\n+     * {@code mgfName}, or {@code pSrc} is {@code null}\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/spec\/OAEPParameterSpec.java","additions":36,"deletions":33,"binary":false,"changes":69,"status":"modified"}]}