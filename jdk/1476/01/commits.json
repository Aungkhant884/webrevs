[{"commit":{"message":"Move the asmtest output into a separate file"},"files":[{"filename":"test\/hotspot\/gtest\/aarch64\/asmtest.out.h"},{"filename":"test\/hotspot\/gtest\/aarch64\/test_assembler_aarch64.cpp"}],"sha":"f0604b61cb28df63379867a7fa789d6978d89093"},{"commit":{"message":"8252684: Move the AArch64 assember test under test\/hotspot\/gtest\n\nThere was a question on the SVE review thread on build-dev [1] a few\nmonths ago about why there is a Python script and test code under\nsrc\/hotspot\/cpu\/aarch64. The script generates code to check the\nAssembler instruction encodings against those of the system assembler.\nThe test runs every time the debug VM is started.\n\nAFAIK there's no precedent in the rest of Hotspot for having functional\ntests that run on startup, and we have the existing gtest framework for\ntesting internal C++ modules. This patch (perhaps more of an RFC) moves\nthe assembler test under test\/hotspot\/gtest\/aarch64 out of the src\/\ndirectory.\n\nThe test will now run in tier1, including for release builds. The\ndownside is that debug builds won't catch assembler encoding errors\nimmediately on startup.\n\nTested by injecting an error in one of the instruction encodings and\nverifying `make test TEST=\"gtest\"` fails.\n\n[1] https:\/\/mail.openjdk.java.net\/pipermail\/build-dev\/2020-August\/028048.html"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/aarch64Test.cpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/assembler_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/icache_aarch64.cpp"},{"filename":"test\/hotspot\/gtest\/aarch64\/aarch64-asmtest.py"},{"filename":"test\/hotspot\/gtest\/aarch64\/asmtest.out.h"},{"filename":"test\/hotspot\/gtest\/aarch64\/test_assembler_aarch64.cpp"}],"sha":"d7330dcb2c51dd0fe38744099fe239c664c7357d"}]