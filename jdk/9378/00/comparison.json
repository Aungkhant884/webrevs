{"files":[{"patch":"@@ -166,3 +166,3 @@\n-    evac_failed.set_firstSize(ef_info.first_size());\n-    evac_failed.set_smallestSize(ef_info.smallest_size());\n-    evac_failed.set_totalSize(ef_info.total_size());\n+    evac_failed.set_firstSize(ef_info.first_size() * HeapWordSize);\n+    evac_failed.set_smallestSize(ef_info.smallest_size() * HeapWordSize);\n+    evac_failed.set_totalSize(ef_info.total_size() * HeapWordSize);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Trace.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -160,3 +160,3 @@\n-  failed_info.set_firstSize(cf_info.first_size());\n-  failed_info.set_smallestSize(cf_info.smallest_size());\n-  failed_info.set_totalSize(cf_info.total_size());\n+  failed_info.set_firstSize(cf_info.first_size() * HeapWordSize);\n+  failed_info.set_smallestSize(cf_info.smallest_size() * HeapWordSize);\n+  failed_info.set_totalSize(cf_info.total_size() * HeapWordSize);\n","filename":"src\/hotspot\/share\/gc\/shared\/gcTraceSend.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -52,0 +52,1 @@\n+        int minObjectAlignment = 8;\n@@ -55,0 +56,1 @@\n+            Asserts.assertTrue((smallestSize % minObjectAlignment) == 0, \"smallestSize \" + smallestSize + \" is not a valid size.\");\n@@ -56,0 +58,1 @@\n+            Asserts.assertTrue((firstSize % minObjectAlignment) == 0, \"firstSize \" + firstSize + \" is not a valid size.\");\n@@ -58,0 +61,1 @@\n+            Asserts.assertTrue((totalSize % minObjectAlignment) == 0, \"totalSize \" + totalSize + \" is not a valid size.\");\n","filename":"test\/jdk\/jdk\/jfr\/event\/gc\/detailed\/PromotionFailedEvent.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -79,0 +79,1 @@\n+        int minObjectAlignment = 8;\n@@ -84,0 +85,1 @@\n+            Asserts.assertTrue((smallestSize % minObjectAlignment) == 0, \"smallestSize \" + smallestSize + \" is not a valid size.\");\n@@ -85,0 +87,1 @@\n+            Asserts.assertTrue((firstSize % minObjectAlignment) == 0, \"firstSize \" + firstSize + \" is not a valid size.\");\n@@ -86,0 +89,1 @@\n+            Asserts.assertTrue((totalSize % minObjectAlignment) == 0, \"totalSize \" + totalSize + \" is not a valid size.\");\n","filename":"test\/jdk\/jdk\/jfr\/event\/gc\/detailed\/TestEvacuationFailedEvent.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"}]}