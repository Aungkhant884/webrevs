{"files":[{"patch":"@@ -3631,2 +3631,4 @@\n-      JavaThread* THREAD = JavaThread::current(); \/\/ For exception macros.\n-      if (HAS_PENDING_EXCEPTION) {\n+      Thread* current = Thread::current_or_null();\n+      if (current != nullptr) {\n+        JavaThread* THREAD = JavaThread::cast(current); \/\/ For exception macros.\n+        assert(HAS_PENDING_EXCEPTION, \"must be - else no current thread exists\");\n@@ -3636,3 +3638,0 @@\n-      \/\/ Unclear if we can actually reach here as all error returns should have\n-      \/\/ set an exception pending. But it is okay to fall-through to the general\n-      \/\/ termination code below.\n@@ -3640,3 +3639,0 @@\n-    \/\/ else - we can get here if init_globals encountered an error for which\n-    \/\/        an exception could not be generated. There is nothing special\n-    \/\/        we need to do here as can_try_again will be false.\n","filename":"src\/hotspot\/share\/prims\/jni.cpp","additions":4,"deletions":8,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -551,4 +551,1 @@\n-    if (!main_thread->has_pending_exception()) {\n-      main_thread->smr_delete();\n-    }\n-    \/\/ Else don't delete main_thread as we need to report exceptions in the caller.\n+    main_thread->smr_delete();\n@@ -570,0 +567,3 @@\n+    \/\/ It is possible that we managed to fully initialize Universe but have then\n+    \/\/ failed by throwing an exception. In that case our caller JNI_CreateJavaVM\n+    \/\/ we will want to report it, so we can't delete the main thread.\n@@ -573,1 +573,0 @@\n-    \/\/ Else don't delete main_thread as we need to report exceptions in the caller.\n","filename":"src\/hotspot\/share\/runtime\/threads.cpp","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"}]}