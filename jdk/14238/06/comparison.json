{"files":[{"patch":"@@ -3631,2 +3631,4 @@\n-      JavaThread* THREAD = JavaThread::current(); \/\/ For exception macros.\n-      if (HAS_PENDING_EXCEPTION) {\n+      Thread* current = Thread::current_or_null();\n+      if (current != nullptr) {\n+        JavaThread* THREAD = JavaThread::cast(current); \/\/ For exception macros.\n+        assert(HAS_PENDING_EXCEPTION, \"must be - else no current thread exists\");\n","filename":"src\/hotspot\/share\/prims\/jni.cpp","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -567,1 +567,6 @@\n-    main_thread->smr_delete();\n+    \/\/ It is possible that we managed to fully initialize Universe but have then\n+    \/\/ failed by throwing an exception. In that case our caller JNI_CreateJavaVM\n+    \/\/ will want to report it, so we can't delete the main thread.\n+    if (!main_thread->has_pending_exception()) {\n+      main_thread->smr_delete();\n+    }\n","filename":"src\/hotspot\/share\/runtime\/threads.cpp","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"}]}