{"files":[{"patch":"@@ -439,1 +439,0 @@\n-  assert(status != RegionNode::LoopStatus::NeverIrreducibleEntry, \"do not set this\");\n","filename":"src\/hotspot\/share\/opto\/cfgnode.cpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -0,0 +1,64 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+super public class TestInlinedSplitFallInIrreducibleLoopStatus\n+{\n+    public Method \"<init>\":\"()V\"\n+    stack 2 locals 1\n+    {\n+        aload_0;\n+        invokespecial  Method java\/lang\/Object.\"<init>\":\"()V\";\n+        return;\n+    }\n+\n+    static Method test_inner:\"(III)V\"\n+    stack 20 locals 10\n+    {\n+        iload_0;\n+        ifeq LEND; \/\/ skip everything at runtime\n+\n+        \/\/ Some knarly construct to have two fall-in edges for LOOP\n+        iconst_1;\n+        ifeq ENTRY1; \/\/ eventually collapses\n+        goto ENTRY2;\n+    ENTRY1:\n+        iconst_0;\n+        ifeq LOOP;\n+    ENTRY2:\n+        iload      1;\n+        ifge LOOP;\n+        goto ENTRY1;\n+\n+    LOOP:\n+        \/\/ split_fall_in happens at this Region\n+        iconst_0;\n+        iflt LOOP;\n+        iload      2;\n+        ifeq LEND;\n+        goto LOOP;\n+\n+    LEND:\n+        return;\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/TestInlinedSplitFallInIrreducibleLoopStatus.jasm","additions":64,"deletions":0,"binary":false,"changes":64,"status":"added"},{"patch":"@@ -0,0 +1,49 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8303045\n+ * @compile TestInlinedSplitFallInIrreducibleLoopStatus.jasm\n+ * @summary Regions that are inlined are by default tagged as NeverIrreducibleEntry.\n+ *          Test that if a split_fall_in happens to such a region, we do not throw\n+ *          a spurious assert.\n+ * @run main\/othervm\n+ *      -XX:CompileCommand=compileonly,TestInlinedSplitFallInIrreducibleLoopStatus::test*\n+ *      -XX:CompileCommand=compileonly,TestInlinedSplitFallInIrreducibleLoopStatusMain::test*\n+ *      -Xbatch -XX:PerMethodTrapLimit=0\n+ *      TestInlinedSplitFallInIrreducibleLoopStatusMain\n+ *\/\n+\n+public class TestInlinedSplitFallInIrreducibleLoopStatusMain {\n+    public static void main(String[] strArr) {\n+        for (int i = 0; i < 10_000; i++) {\n+            test_outer(0, 0, 0);\n+        }\n+    }\n+    static void test_outer(int v0, int v1, int v2) {\n+        \/\/ inline method test_inner\n+        TestInlinedSplitFallInIrreducibleLoopStatus.test_inner(v0, v1, v2);\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/TestInlinedSplitFallInIrreducibleLoopStatusMain.java","additions":49,"deletions":0,"binary":false,"changes":49,"status":"added"}]}