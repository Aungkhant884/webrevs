{"files":[{"patch":"@@ -62,6 +62,3 @@\n-                obj = AccessController.doPrivileged(new PrivilegedExceptionAction<Object>() {\n-                    @Override\n-                    public Object run() throws NamingException {\n-                        return Obj.decodeObject(attrs);\n-                    }\n-                }, acc);\n+                obj = AccessController.doPrivileged(\n+                        (PrivilegedExceptionAction<Object>) () -> Obj.decodeObject(attrs), acc\n+                );\n","filename":"src\/java.naming\/share\/classes\/com\/sun\/jndi\/ldap\/LdapBindingEnumeration.java","additions":3,"deletions":6,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -398,2 +398,1 @@\n-    private static final String getProperty(final String propName,\n-        final String defVal) {\n+    private static final String getProperty(final String propName, final String defVal) {\n@@ -401,9 +400,2 @@\n-            new PrivilegedAction<String>() {\n-            public String run() {\n-                try {\n-                    return System.getProperty(propName, defVal);\n-                } catch (SecurityException e) {\n-                    return defVal;\n-                }\n-            }\n-        });\n+                (PrivilegedAction<String>) () -> System.getProperty(propName, defVal)\n+        );\n@@ -412,13 +404,4 @@\n-    private static final int getInteger(final String propName,\n-        final int defVal) {\n-        Integer val = AccessController.doPrivileged(\n-            new PrivilegedAction<Integer>() {\n-            public Integer run() {\n-                try {\n-                    return Integer.getInteger(propName, defVal);\n-                } catch (SecurityException e) {\n-                    return defVal;\n-                }\n-            }\n-        });\n-        return val.intValue();\n+    private static final int getInteger(final String propName, final int defVal) {\n+        return AccessController.doPrivileged(\n+                (PrivilegedAction<Integer>) () -> Integer.getInteger(propName, defVal).intValue()\n+        );\n@@ -427,13 +410,4 @@\n-    private static final long getLong(final String propName,\n-        final long defVal) {\n-        Long val = AccessController.doPrivileged(\n-            new PrivilegedAction<Long>() {\n-            public Long run() {\n-                try {\n-                    return Long.getLong(propName, defVal);\n-                } catch (SecurityException e) {\n-                    return defVal;\n-                }\n-            }\n-        });\n-        return val.longValue();\n+    private static final long getLong(final String propName, final long defVal) {\n+        return AccessController.doPrivileged(\n+                (PrivilegedAction<Long>) () -> Long.getLong(propName, defVal).longValue()\n+        );\n","filename":"src\/java.naming\/share\/classes\/com\/sun\/jndi\/ldap\/LdapPoolManager.java","additions":11,"deletions":37,"binary":false,"changes":48,"status":"modified"},{"patch":"@@ -122,6 +122,3 @@\n-                    obj = AccessController.doPrivileged(new PrivilegedExceptionAction<Object>() {\n-                        @Override\n-                        public Object run() throws NamingException {\n-                            return Obj.decodeObject(attrs);\n-                        }\n-                    }, acc);\n+                    obj = AccessController.doPrivileged(\n+                            (PrivilegedExceptionAction<Object>) () -> Obj.decodeObject(attrs), acc\n+                    );\n","filename":"src\/java.naming\/share\/classes\/com\/sun\/jndi\/ldap\/LdapSearchEnumeration.java","additions":3,"deletions":6,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -224,5 +224,1 @@\n-            new PrivilegedAction<ClassLoader>() {\n-                public ClassLoader run() {\n-                    return Thread.currentThread().getContextClassLoader();\n-                }\n-            }\n+                (PrivilegedAction<ClassLoader>) () -> Thread.currentThread().getContextClassLoader()\n@@ -233,7 +229,3 @@\n-        Boolean answer = AccessController.doPrivileged(\n-            new PrivilegedAction<Boolean>() {\n-            public Boolean run() {\n-                return Boolean.valueOf(iter.hasNext());\n-            }\n-        });\n-        return answer.booleanValue();\n+        return AccessController.doPrivileged(\n+                (PrivilegedAction<Boolean>) iter::hasNext\n+        );\n","filename":"src\/java.naming\/share\/classes\/javax\/naming\/ldap\/StartTlsRequest.java","additions":4,"deletions":12,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -76,5 +76,4 @@\n-        AccessController.doPrivileged(new PrivilegedAction<Void>() {\n-            public Void run() {\n-                HashMap<String, String> attrs = new HashMap<>(2);\n-                attrs.put(\"LDAPSchema\", \"RFC2587\");\n-                attrs.put(\"ImplementedIn\", \"Software\");\n+        AccessController.doPrivileged((PrivilegedAction<Void>) () -> {\n+            HashMap<String, String> attrs = new HashMap<>(2);\n+            attrs.put(\"LDAPSchema\", \"RFC2587\");\n+            attrs.put(\"ImplementedIn\", \"Software\");\n@@ -82,9 +81,8 @@\n-                \/*\n-                 * CertStore\n-                 * attrs: LDAPSchema, ImplementedIn\n-                 *\/\n-                putService(new ProviderService(p, \"CertStore\",\n-                           \"LDAP\", \"sun.security.provider.certpath.ldap.LDAPCertStore\",\n-                           null, attrs));\n-                return null;\n-            }\n+            \/*\n+             * CertStore\n+             * attrs: LDAPSchema, ImplementedIn\n+             *\/\n+            putService(new ProviderService(p, \"CertStore\",\n+                       \"LDAP\", \"sun.security.provider.certpath.ldap.LDAPCertStore\",\n+                       null, attrs));\n+            return null;\n","filename":"src\/java.naming\/share\/classes\/sun\/security\/provider\/certpath\/ldap\/JdkLDAP.java","additions":12,"deletions":14,"binary":false,"changes":26,"status":"modified"}]}