{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,1 +24,1 @@\n-\/**\n+\/*\n@@ -28,1 +28,2 @@\n- * @run main\/manual=yesno TextAAHintsTest\n+ * @requires (os.family != \"mac\")\n+ * @run main\/manual TextAAHintsTest\n@@ -30,3 +31,21 @@\n-import java.awt.*;\n-import java.awt.geom.*;\n-import java.awt.image.*;\n+\n+import java.awt.AWTException;\n+import java.awt.BorderLayout;\n+import java.awt.Button;\n+import java.awt.Color;\n+import java.awt.Component;\n+import java.awt.Dialog;\n+import java.awt.Dimension;\n+import java.awt.EventQueue;\n+import java.awt.Frame;\n+import java.awt.Graphics;\n+import java.awt.Graphics2D;\n+import java.awt.ImageCapabilities;\n+import java.awt.Panel;\n+import java.awt.RenderingHints;\n+import java.awt.TextArea;\n+import java.awt.image.BufferedImage;\n+import java.awt.image.VolatileImage;\n+import java.lang.reflect.InvocationTargetException;\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.TimeUnit;\n@@ -36,3 +55,7 @@\n-    String black = \"This text should be solid black\";\n-    String gray  = \"This text should be gray scale anti-aliased\";\n-    String lcd   = \"This text should be LCD sub-pixel text (coloured).\";\n+    private static final String black = \"This text should be solid black\";\n+    private static final String gray  = \"This text should be gray scale anti-aliased\";\n+    private static final String lcd   = \"This text should be LCD sub-pixel text (coloured).\";\n+    private static final CountDownLatch countDownLatch = new CountDownLatch(1);\n+    private static volatile String failureReason;\n+    private static volatile boolean testPassed = false;\n+    private static Frame frame;\n@@ -66,4 +89,0 @@\n-        g2d.setRenderingHint(RenderingHints.KEY_TEXT_ANTIALIASING,\n-                             RenderingHints.VALUE_TEXT_ANTIALIAS_GASP);\n-        g2d.drawString(black, 10, 35);\n-\n@@ -72,1 +91,1 @@\n-        g2d.drawString(gray, 10, 50);\n+        g2d.drawString(gray, 10, 35);\n@@ -76,1 +95,1 @@\n-        g2d.drawString(gray, 10, 65);\n+        g2d.drawString(gray, 10, 50);\n@@ -81,1 +100,1 @@\n-        g2d.drawString(gray, 10, 80);\n+        g2d.drawString(gray, 10, 65);\n@@ -87,1 +106,1 @@\n-        g2d.drawString(lcd, 10, 95);\n+        g2d.drawString(lcd, 10, 80);\n@@ -142,1 +161,70 @@\n-    public static void main(String[] args) throws Exception {\n+    public static void createTestUI() {\n+        frame = new Frame(\"Composite and Text Test\");\n+        TextAAHintsTest textAAHintsTestObject = new TextAAHintsTest();\n+        frame.add(textAAHintsTestObject, BorderLayout.NORTH);\n+\n+        String instructions = \"\"\"\n+                Note: Texts are rendered with different TEXT_ANTIALIASING &\n+                   VALUE_TEXT_ANTIALIAS. Text should be B&W, grayscale, and LCD.\n+                   Note: The results may be visually the same.\n+                1. Verify that first set of text are rendered correctly.\n+                2. Second set of text are created using BufferedImage of the first text.\n+                3. Third set of text are created using VolatileImage of the first text.\n+                \"\"\";\n+        TextArea instructionTextArea = new TextArea(instructions, 8, 50);\n+        instructionTextArea.setEditable(false);\n+        frame.add(instructionTextArea, BorderLayout.CENTER);\n+\n+        Panel controlPanel = new Panel();\n+        Button passButton = new Button(\"Pass\");\n+        passButton.addActionListener(e -> {\n+            testPassed = true;\n+            countDownLatch.countDown();\n+            frame.dispose();\n+        });\n+        Button failButton = new Button(\"Fail\");\n+        failButton.addActionListener(e -> {\n+            getFailureReason();\n+            testPassed = false;\n+            countDownLatch.countDown();\n+            frame.dispose();\n+        });\n+        controlPanel.add(passButton);\n+        controlPanel.add(failButton);\n+        frame.add(controlPanel, BorderLayout.SOUTH);\n+        frame.pack();\n+        frame.setLocationRelativeTo(null);\n+        frame.setVisible(true);\n+    }\n+\n+    public static void getFailureReason() {\n+        \/\/ Show dialog to read why the testcase was failed and append the\n+        \/\/ testcase failure reason to the output\n+        final Dialog dialog = new Dialog(frame, \"TestCase\" +\n+                \" failure reason\", true);\n+        TextArea textArea = new TextArea(\"\", 5, 60, TextArea.SCROLLBARS_BOTH);\n+        dialog.add(textArea, BorderLayout.CENTER);\n+\n+        Button okButton = new Button(\"OK\");\n+        okButton.addActionListener(e1 -> {\n+            failureReason = textArea.getText();\n+            dialog.dispose();\n+        });\n+        Panel ctlPanel = new Panel();\n+        ctlPanel.add(okButton);\n+        dialog.add(ctlPanel, BorderLayout.SOUTH);\n+        dialog.setLocationRelativeTo(null);\n+        dialog.pack();\n+        dialog.setVisible(true);\n+    }\n+\n+    public static void main(String[] args) throws InterruptedException, InvocationTargetException {\n+        EventQueue.invokeAndWait(TextAAHintsTest::createTestUI);\n+        if (!countDownLatch.await(2, TimeUnit.MINUTES)) {\n+            EventQueue.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n+            throw new RuntimeException(\"Timeout : No action was taken on the test.\");\n+        }\n@@ -144,4 +232,3 @@\n-        Frame f = new Frame(\"Composite and Text Test\");\n-        f.add(new TextAAHintsTest(), BorderLayout.CENTER);\n-        f.pack();\n-        f.setVisible(true);\n+        if (!testPassed) {\n+            throw new RuntimeException(\"Test failed : Reason : \" + failureReason);\n+        }\n@@ -150,0 +237,1 @@\n+\n","filename":"test\/jdk\/java\/awt\/Graphics\/TextAAHintsTest.java","additions":110,"deletions":22,"binary":false,"changes":132,"status":"modified"}]}