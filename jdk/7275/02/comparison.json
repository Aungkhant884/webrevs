{"files":[{"patch":"@@ -0,0 +1,2 @@\n+package awt;\n+\n@@ -24,1 +26,1 @@\n-\/**\n+\/*\n@@ -28,1 +30,2 @@\n- * @run main\/manual=yesno TextAAHintsTest\n+ * @requires (os.family != \"mac\")\n+ * @run main\/manual TextAAHintsTest\n@@ -30,9 +33,30 @@\n-import java.awt.*;\n-import java.awt.geom.*;\n-import java.awt.image.*;\n-\n-public class TextAAHintsTest extends Component {\n-\n-    String black = \"This text should be solid black\";\n-    String gray  = \"This text should be gray scale anti-aliased\";\n-    String lcd   = \"This text should be LCD sub-pixel text (coloured).\";\n+import java.awt.AWTException;\n+import java.awt.BorderLayout;\n+import java.awt.Button;\n+import java.awt.Color;\n+import java.awt.Component;\n+import java.awt.Dialog;\n+import java.awt.Dimension;\n+import java.awt.Frame;\n+import java.awt.Graphics;\n+import java.awt.Graphics2D;\n+import java.awt.ImageCapabilities;\n+import java.awt.Panel;\n+import java.awt.RenderingHints;\n+import java.awt.TextArea;\n+import java.awt.image.BufferedImage;\n+import java.awt.image.VolatileImage;\n+import java.lang.reflect.InvocationTargetException;\n+import javax.swing.SwingUtilities;\n+\n+public class TextAAHintsTest  extends Component {\n+\n+    private static final String black = \"This text should be solid black\";\n+    private static final String gray  = \"This text should be gray scale anti-aliased\";\n+    private static final String lcd   = \"This text should be LCD sub-pixel text (coloured).\";\n+    private static Frame frame;\n+    private static Thread mainThread = null;\n+    private static boolean testPassed = false;\n+    private static boolean isInterrupted = false;\n+    private static final int testTimeOut = 300000;\n+    private static String failureReason;\n@@ -142,1 +166,74 @@\n-    public static void main(String[] args) throws Exception {\n+    public static void createTestUI() {\n+        frame = new Frame(\"Composite and Text Test\");\n+        TextAAHintsTest textAAHintsTestObject = new TextAAHintsTest();\n+        frame.add(textAAHintsTestObject, BorderLayout.NORTH);\n+\n+        String instructions = \"\"\"\n+                Note: Texts are rendered with different TEXT_ANTIALIASING &\n+                   VALUE_TEXT_ANTIALIAS. Text should be B&W, grayscale, and LCD.\n+                   Note: The results may be visually the same.\n+                1. Verify that first set of text are rendered correctly.\n+                2. Second set of text are created using BufferedImage of the first text.\n+                3. Third set of text are created using VolatileImage of the first text.\n+                \"\"\";\n+        TextArea instructionTextArea = new TextArea(instructions, 8, 50);\n+        instructionTextArea.setEnabled(false);\n+        frame.add(instructionTextArea, BorderLayout.CENTER);\n+\n+        Panel controlPanel = new Panel();\n+        Button passButton = new Button(\"Pass\");\n+        passButton.addActionListener(e->{\n+            testPassed = true;\n+            isInterrupted = true;\n+            mainThread.interrupt();\n+        });\n+        Button failButton = new Button(\"Fail\");\n+        failButton.addActionListener(e->{\n+\n+            \/\/ Show dialog to read why the testcase was failed and append the\n+            \/\/ testcase failure reason to the output\n+           final Dialog dialog = new Dialog(frame , \"TestCase\" +\n+                    \" failure reason\", true);\n+            TextArea textArea = new TextArea(\"\", 5,60, TextArea.SCROLLBARS_BOTH);\n+            dialog.add(textArea, BorderLayout.CENTER);\n+\n+            Button okButton = new Button(\"OK\");\n+            okButton.addActionListener(e1->{\n+                failureReason = textArea.getText();\n+                dialog.dispose();\n+            });\n+            Panel ctlPanel = new Panel();\n+            ctlPanel.add(okButton);\n+            dialog.add(ctlPanel, BorderLayout.SOUTH);\n+            dialog.setLocationRelativeTo(null);\n+            dialog.pack();\n+            dialog.setVisible(true);\n+\n+            testPassed = false;\n+            isInterrupted = true;\n+            mainThread.interrupt();\n+        });\n+        controlPanel.add(passButton);\n+        controlPanel.add(failButton);\n+        frame.add(controlPanel, BorderLayout.SOUTH);\n+        frame.pack();\n+        frame.setLocationRelativeTo(null);\n+        frame.setVisible(true);\n+    }\n+\n+    public static void main(String[] args) throws InterruptedException, InvocationTargetException {\n+        createTestUI();\n+        mainThread = Thread.currentThread();\n+        try {\n+            mainThread.sleep(testTimeOut);\n+        } catch (InterruptedException ex) {\n+            if (!testPassed) {\n+                throw new RuntimeException(\"Test failed : Reason : \" + failureReason);\n+            }\n+        } finally {\n+            SwingUtilities.invokeAndWait(()->{\n+                if ( frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n+        }\n@@ -144,4 +241,4 @@\n-        Frame f = new Frame(\"Composite and Text Test\");\n-        f.add(new TextAAHintsTest(), BorderLayout.CENTER);\n-        f.pack();\n-        f.setVisible(true);\n+        if (!isInterrupted) {\n+            throw new RuntimeException(\"Test Timed out after \"\n+                    + testTimeOut \/ 1000 + \" seconds\");\n+        }\n@@ -150,0 +247,1 @@\n+\n","filename":"test\/jdk\/java\/awt\/Graphics\/TextAAHintsTest.java","additions":114,"deletions":16,"binary":false,"changes":130,"status":"modified"}]}