{"files":[{"patch":"@@ -1,2 +0,0 @@\n-package awt;\n-\n@@ -4,1 +2,1 @@\n- * Copyright (c) 2007, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2022 Oracle and\/or its affiliates. All rights reserved.\n@@ -33,0 +31,1 @@\n+\n@@ -50,1 +49,2 @@\n-import javax.swing.SwingUtilities;\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.TimeUnit;\n@@ -52,1 +52,1 @@\n-public class TextAAHintsTest  extends Component {\n+public class TextAAHintsTest extends Component {\n@@ -57,0 +57,1 @@\n+    public static final CountDownLatch countDownLatch = new CountDownLatch(1);\n@@ -58,5 +59,2 @@\n-    private static Thread mainThread = null;\n-    private static boolean testPassed = false;\n-    private static boolean isInterrupted = false;\n-    private static final int testTimeOut = 300000;\n-    private static String failureReason;\n+    public static String failureReason;\n+    public static volatile boolean testPassed = false;\n@@ -90,4 +88,0 @@\n-        g2d.setRenderingHint(RenderingHints.KEY_TEXT_ANTIALIASING,\n-                             RenderingHints.VALUE_TEXT_ANTIALIAS_GASP);\n-        g2d.drawString(black, 10, 35);\n-\n@@ -96,1 +90,1 @@\n-        g2d.drawString(gray, 10, 50);\n+        g2d.drawString(gray, 10, 35);\n@@ -100,1 +94,1 @@\n-        g2d.drawString(gray, 10, 65);\n+        g2d.drawString(gray, 10, 50);\n@@ -105,1 +99,1 @@\n-        g2d.drawString(gray, 10, 80);\n+        g2d.drawString(gray, 10, 65);\n@@ -111,1 +105,1 @@\n-        g2d.drawString(lcd, 10, 95);\n+        g2d.drawString(lcd, 10, 80);\n@@ -180,1 +174,1 @@\n-        instructionTextArea.setEnabled(false);\n+        instructionTextArea.setEditable(false);\n@@ -185,1 +179,1 @@\n-        passButton.addActionListener(e->{\n+        passButton.addActionListener(e -> {\n@@ -187,2 +181,2 @@\n-            isInterrupted = true;\n-            mainThread.interrupt();\n+            countDownLatch.countDown();\n+            frame.dispose();\n@@ -191,21 +185,2 @@\n-        failButton.addActionListener(e->{\n-\n-            \/\/ Show dialog to read why the testcase was failed and append the\n-            \/\/ testcase failure reason to the output\n-           final Dialog dialog = new Dialog(frame , \"TestCase\" +\n-                    \" failure reason\", true);\n-            TextArea textArea = new TextArea(\"\", 5,60, TextArea.SCROLLBARS_BOTH);\n-            dialog.add(textArea, BorderLayout.CENTER);\n-\n-            Button okButton = new Button(\"OK\");\n-            okButton.addActionListener(e1->{\n-                failureReason = textArea.getText();\n-                dialog.dispose();\n-            });\n-            Panel ctlPanel = new Panel();\n-            ctlPanel.add(okButton);\n-            dialog.add(ctlPanel, BorderLayout.SOUTH);\n-            dialog.setLocationRelativeTo(null);\n-            dialog.pack();\n-            dialog.setVisible(true);\n-\n+        failButton.addActionListener(e -> {\n+            readFailedReason();\n@@ -213,2 +188,2 @@\n-            isInterrupted = true;\n-            mainThread.interrupt();\n+            countDownLatch.countDown();\n+            frame.dispose();\n@@ -224,0 +199,21 @@\n+    public static void readFailedReason() {\n+        \/\/ Show dialog to read why the testcase was failed and append the\n+        \/\/ testcase failure reason to the output\n+        final Dialog dialog = new Dialog(frame, \"TestCase\" +\n+                \" failure reason\", true);\n+        TextArea textArea = new TextArea(\"\", 5, 60, TextArea.SCROLLBARS_BOTH);\n+        dialog.add(textArea, BorderLayout.CENTER);\n+\n+        Button okButton = new Button(\"OK\");\n+        okButton.addActionListener(e1 -> {\n+            failureReason = textArea.getText();\n+            dialog.dispose();\n+        });\n+        Panel ctlPanel = new Panel();\n+        ctlPanel.add(okButton);\n+        dialog.add(ctlPanel, BorderLayout.SOUTH);\n+        dialog.setLocationRelativeTo(null);\n+        dialog.pack();\n+        dialog.setVisible(true);\n+    }\n+\n@@ -225,11 +221,4 @@\n-        createTestUI();\n-        mainThread = Thread.currentThread();\n-        try {\n-            mainThread.sleep(testTimeOut);\n-        } catch (InterruptedException ex) {\n-            if (!testPassed) {\n-                throw new RuntimeException(\"Test failed : Reason : \" + failureReason);\n-            }\n-        } finally {\n-            SwingUtilities.invokeAndWait(()->{\n-                if ( frame != null) {\n+        java.awt.EventQueue.invokeAndWait(TextAAHintsTest::createTestUI);\n+        if (!countDownLatch.await(2, TimeUnit.MINUTES)) {\n+            java.awt.EventQueue.invokeAndWait(() -> {\n+                if (frame != null) {\n@@ -239,0 +228,1 @@\n+            throw new RuntimeException(\"Timeout : No action was taken on the test.\");\n@@ -241,3 +231,2 @@\n-        if (!isInterrupted) {\n-            throw new RuntimeException(\"Test Timed out after \"\n-                    + testTimeOut \/ 1000 + \" seconds\");\n+        if (!testPassed) {\n+            throw new RuntimeException(\"Test failed : Reason : \" + failureReason);\n","filename":"test\/jdk\/java\/awt\/Graphics\/TextAAHintsTest.java","additions":48,"deletions":59,"binary":false,"changes":107,"status":"modified"}]}