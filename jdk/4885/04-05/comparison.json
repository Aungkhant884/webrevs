{"files":[{"patch":"@@ -199,6 +199,7 @@\n-      \/\/ We need to pass <key>=<value> style option to LogFileStreamOutput::initialize().\n-      \/\/ Thus we restore '=' temporally.\n-      *equals_pos = '=';\n-      success = LogFileStreamOutput::initialize(pos, errstream);\n-      *equals_pos = '\\0';\n-      if (!success) {\n+      if (strcmp(value_str, \"true\") == 0) {\n+        _fold_multilines = true;\n+      } else if (strcmp(value_str, \"false\") == 0) {\n+        _fold_multilines = false;\n+      } else {\n+        errstream->print_cr(\"Invalid option '%s' for %s.\", value_str, FoldMultilinesOptionKey);\n+        success = false;\n","filename":"src\/hotspot\/share\/logging\/logFileOutput.cpp","additions":7,"deletions":6,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -56,34 +56,0 @@\n-bool LogFileStreamOutput::initialize(const char* options, outputStream* errstream) {\n-  if (options == NULL || strlen(options) == 0) {\n-    return true;\n-  }\n-\n-  char* opts = os::strdup_check_oom(options, mtLogging);\n-  char* equals_pos = strchr(opts, '=');\n-  bool success = false;\n-  if (equals_pos == NULL) {\n-    errstream->print_cr(\"Invalid option '%s' for log file stream output.\", opts);\n-  } else {\n-    char* key = opts;\n-    char* value_str = equals_pos + 1;\n-    *equals_pos = '\\0';\n-\n-    if (strcmp(FoldMultilinesOptionKey, key) == 0) {\n-      if (strcmp(value_str, \"true\") == 0) {\n-        _fold_multilines = true;\n-        success = true;\n-      } else if (strcmp(value_str, \"false\") == 0) {\n-        _fold_multilines = false;\n-        success = true;\n-      } else {\n-        errstream->print_cr(\"Invalid option '%s' for %s.\", value_str, FoldMultilinesOptionKey);\n-      }\n-    } else {\n-      errstream->print_cr(\"Invalid option '%s' for log file stream output.\", options);\n-    }\n-  }\n-\n-  os::free(opts);\n-  return success;\n-}\n-\n","filename":"src\/hotspot\/share\/logging\/logFileStreamOutput.cpp","additions":0,"deletions":34,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -45,1 +45,0 @@\n-  bool                _fold_multilines;\n@@ -53,0 +52,1 @@\n+  bool                _fold_multilines;\n@@ -54,1 +54,1 @@\n-  LogFileStreamOutput(FILE *stream) : _fold_multilines(false), _write_error_is_shown(false), _stream(stream) {\n+  LogFileStreamOutput(FILE *stream) : _write_error_is_shown(false), _stream(stream), _fold_multilines(false) {\n@@ -64,1 +64,0 @@\n-  virtual bool initialize(const char* options, outputStream* errstream);\n","filename":"src\/hotspot\/share\/logging\/logFileStreamOutput.hpp","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"}]}