{"files":[{"patch":"@@ -29,1 +29,1 @@\n- * @library ..\/..\/..\/..\/java\/security\/testlibrary\/ \/test\/lib\n+ * @library \/test\/lib\n@@ -44,0 +44,1 @@\n+import jdk.test.lib.process.Proc;\n","filename":"test\/jdk\/sun\/security\/krb5\/auto\/BasicProc.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n- * @library ..\/..\/..\/..\/java\/security\/testlibrary\/ \/test\/lib\n+ * @library \/test\/lib\n@@ -35,0 +35,1 @@\n+import jdk.test.lib.process.Proc;\n@@ -41,1 +42,0 @@\n-import java.util.Random;\n","filename":"test\/jdk\/sun\/security\/krb5\/auto\/Renewal.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n- * @library ..\/..\/..\/..\/java\/security\/testlibrary\/ \/test\/lib\n+ * @library \/test\/lib\n@@ -52,0 +52,1 @@\n+import jdk.test.lib.process.Proc;\n","filename":"test\/jdk\/sun\/security\/krb5\/auto\/ReplayCacheTestProc.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n- * @library ..\/..\/..\/..\/java\/security\/testlibrary\/ \/test\/lib\n+ * @library \/test\/lib\n","filename":"test\/jdk\/sun\/security\/krb5\/auto\/ReplayCacheTestProcWithMD5.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n- * @library ..\/..\/..\/..\/java\/security\/testlibrary\/\n+ * @library \/test\/lib\n@@ -38,0 +38,2 @@\n+\n+import jdk.test.lib.process.Proc;\n","filename":"test\/jdk\/sun\/security\/krb5\/ccache\/EmptyCC.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n- * @library \/java\/security\/testlibrary\/\n+ * @library \/test\/lib\n@@ -37,0 +37,2 @@\n+import jdk.test.lib.process.Proc;\n+\n","filename":"test\/jdk\/sun\/security\/util\/FilePermCompat\/CompatImpact.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n- * @library \/test\/jdk\/java\/security\/testlibrary\n+ * @library \/test\/lib\n@@ -32,0 +32,1 @@\n+import jdk.test.lib.process.Proc;\n","filename":"test\/jdk\/sun\/security\/util\/FilePermCompat\/Flag.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -0,0 +1,82 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8265227\n+ * @summary Test Proc\n+ * @modules java.base\/jdk.internal.misc\n+ * @library \/test\/lib\n+ *\/\n+\n+import jdk.test.lib.process.Proc;\n+\n+import java.util.Random;\n+import java.util.List;\n+\n+public class ProcTest {\n+    public static void main(String[] args) throws Exception {\n+        if (args.length == 0) {\n+            Proc p1 = Proc.create(\"ProcTest\")\n+                    .args(\"p1\")\n+                    .debug(\"p1\")\n+                    .start();\n+            Proc p2 = Proc.create(\"ProcTest\")\n+                    .args(\"p2\")\n+                    .debug(\"p2\")\n+                    .start();\n+            while (true) {\n+                String s1 = p1.readData(); \/\/ p1 shows to p2\n+                if (s1 != null) p2.println(s1);\n+                String s2 = p2.readData(); \/\/ p2 shows to p1\n+                if (s2 != null) p1.println(s2);\n+                if (s1 == null && s2 == null) break;\n+            }\n+            p1.waitFor();\n+            p2.waitFor();\n+        } else {\n+            List<String> gestures = List.of(\"Rock\", \"Paper\", \"Scissors\");\n+            int wins = 0;\n+            Random r = new Random();\n+            while (true) {\n+                String my = gestures.get(r.nextInt(3));\n+                Proc.textOut(my); \/\/ show first, next line might block\n+                String peer = Proc.textIn();\n+                if (!my.equals(peer)) {\n+                    if (my.equals(\"Paper\") && peer.equals(\"Rock\")\n+                            || my.equals(\"Rock\") && peer.equals(\"Scissors\")\n+                            || my.equals(\"Scissors\") && peer.equals(\"Paper\")) {\n+                        wins++;\n+                    } else {\n+                        wins--;\n+                    }\n+                }\n+                \/\/ Message not from textOut() will be ignored by readData().\n+                System.out.println(my + \" vs \" + peer + \", I win \" + wins + \" times\");\n+                if (wins > 2 || wins < -2) {\n+                    break;\n+                }\n+            }\n+        }\n+    }\n+}\n","filename":"test\/lib-test\/jdk\/test\/lib\/process\/ProcTest.java","additions":82,"deletions":0,"binary":false,"changes":82,"status":"added"},{"patch":"@@ -24,0 +24,2 @@\n+package jdk.test.lib.process;\n+\n","filename":"test\/lib\/jdk\/test\/lib\/process\/Proc.java","additions":2,"deletions":0,"binary":false,"changes":2,"previous_filename":"test\/jdk\/java\/security\/testlibrary\/Proc.java","status":"renamed"}]}