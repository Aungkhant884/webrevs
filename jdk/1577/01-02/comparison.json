{"files":[{"patch":"@@ -43,2 +43,1 @@\n-import java.util.Hashtable;\n-import java.util.List;\n+import java.util.*;\n@@ -65,1 +64,1 @@\n-        runJavaProcessExpectSuccesExitCode(\"Main\");\n+        runJavaProcessExpectSuccessExitCode(\"Main\");\n@@ -70,1 +69,1 @@\n-        runJavaProcessExpectSuccesExitCode(\"Main\",  \"foo\");\n+        runJavaProcessExpectSuccessExitCode(\"Main\",  \"foo\");\n@@ -73,1 +72,1 @@\n-    private void runJavaProcessExpectSuccesExitCode(String ... command) throws Throwable {\n+    private void runJavaProcessExpectSuccessExitCode(String ... command) throws Throwable {\n@@ -96,1 +95,1 @@\n-        WeakReference<Class<?>> c = new WeakReference(loader.loadClass(\"C\"));\n+        WeakReference<Class<?>> c = new WeakReference<Class<?>>(loader.loadClass(\"C\"));\n@@ -133,1 +132,1 @@\n-    private Hashtable classes = new Hashtable();\n+    private Map<String, Class<?>> classes = new HashMap<>();\n@@ -155,1 +154,2 @@\n-    public Class loadClass(String className) throws ClassNotFoundException {\n+    @Override\n+    public Class<?> loadClass(String className) throws ClassNotFoundException {\n@@ -159,1 +159,2 @@\n-    public synchronized Class loadClass(String className, boolean resolveIt)\n+    @Override\n+    public synchronized Class<?> loadClass(String className, boolean resolveIt)\n@@ -161,1 +162,1 @@\n-        Class result;\n+        Class<?> result;\n@@ -165,1 +166,1 @@\n-        result = (Class)classes.get(className);\n+        result = classes.get(className);\n@@ -184,1 +185,1 @@\n-        result = defineClass(classData, 0, classData.length);\n+        result = defineClass(className, classData, 0, classData.length);\n","filename":"test\/jdk\/java\/lang\/annotation\/LoaderLeakTest.java","additions":13,"deletions":12,"binary":false,"changes":25,"status":"modified"}]}