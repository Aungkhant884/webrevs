{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -58,1 +58,1 @@\n-extern JavaVM *jvm;\n+extern JavaVM *jvm_xawt;\n@@ -133,1 +133,1 @@\n-    jvm = vm;\n+    jvm_xawt = vm;\n@@ -701,1 +701,1 @@\n-        JNIEnv *env = (JNIEnv *)JNU_GetEnv(jvm, JNI_VERSION_1_2);\n+        JNIEnv *env = (JNIEnv *)JNU_GetEnv(jvm_xawt, JNI_VERSION_1_2);\n","filename":"src\/java.desktop\/unix\/native\/libawt_xawt\/xawt\/XToolkit.c","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -1327,1 +1327,1 @@\n-JavaVM* jvm = NULL;\n+JavaVM* jvm_xawt = NULL;\n@@ -1334,2 +1334,2 @@\n-    if (jvm != NULL) {\n-        env = (JNIEnv *)JNU_GetEnv(jvm, JNI_VERSION_1_2);\n+    if (jvm_xawt != NULL) {\n+        env = (JNIEnv *)JNU_GetEnv(jvm_xawt, JNI_VERSION_1_2);\n@@ -1352,1 +1352,1 @@\n-    if ((*env)->GetJavaVM(env, &jvm) < 0) {\n+    if ((*env)->GetJavaVM(env, &jvm_xawt) < 0) {\n","filename":"src\/java.desktop\/unix\/native\/libawt_xawt\/xawt\/XlibWrapper.c","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,2 +38,1 @@\n-\n-extern JavaVM *jvm;\n+extern JavaVM *jvm_xawt;\n@@ -103,1 +102,1 @@\n-    JNIEnv* env = (JNIEnv*) JNU_GetEnv(jvm, JNI_VERSION_1_2);\n+    JNIEnv* env = (JNIEnv*) JNU_GetEnv(jvm_xawt, JNI_VERSION_1_2);\n@@ -199,1 +198,1 @@\n-    JNIEnv* env = (JNIEnv*) JNU_GetEnv(jvm, JNI_VERSION_1_2);\n+    JNIEnv* env = (JNIEnv*) JNU_GetEnv(jvm_xawt, JNI_VERSION_1_2);\n","filename":"src\/java.desktop\/unix\/native\/libawt_xawt\/xawt\/awt_Taskbar.c","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -78,1 +78,1 @@\n-void *findFunction(JNIEnv *env, void *hModule, char *functionName) {\n+static void *findFunction(JNIEnv *env, void *hModule, char *functionName) {\n","filename":"src\/java.smartcardio\/unix\/native\/libj2pcsc\/pcsc_md.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,1 @@\n-    versionCheck = (FPTR_VersionCheck)findFunction(env, jHandle,\n+    versionCheck = (FPTR_VersionCheck)p11FindFunction(env, jHandle,\n@@ -71,1 +71,1 @@\n-        (FPTR_Initialize)findFunction(env, jHandle, \"NSS_Initialize\");\n+        (FPTR_Initialize)p11FindFunction(env, jHandle, \"NSS_Initialize\");\n@@ -74,1 +74,1 @@\n-        (FPTR_GetError)findFunction(env, jHandle, \"PORT_GetError\");\n+        (FPTR_GetError)p11FindFunction(env, jHandle, \"PORT_GetError\");\n@@ -165,1 +165,1 @@\n-        (FPTR_GetDBModuleList)findFunction(env, jHandle, \"SECMOD_GetDefaultModuleList\");\n+        (FPTR_GetDBModuleList)p11FindFunction(env, jHandle, \"SECMOD_GetDefaultModuleList\");\n","filename":"src\/jdk.crypto.cryptoki\/share\/native\/libj2pkcs11\/j2secmod.c","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n-void *findFunction(JNIEnv *env, jlong jHandle, const char *functionName);\n+void *p11FindFunction(JNIEnv *env, jlong jHandle, const char *functionName);\n","filename":"src\/jdk.crypto.cryptoki\/share\/native\/libj2pkcs11\/j2secmod.h","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -78,1 +78,1 @@\n-jboolean debug = 0;\n+jboolean debug_j2pkcs11 = 0;\n@@ -125,1 +125,1 @@\n-    debug = enableDebug;\n+    debug_j2pkcs11 = enableDebug;\n","filename":"src\/jdk.crypto.cryptoki\/share\/native\/libj2pkcs11\/p11_general.c","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1337,1 +1337,1 @@\n-    if (debug == JNI_TRUE) {\n+    if (debug_j2pkcs11 == JNI_TRUE) {\n","filename":"src\/jdk.crypto.cryptoki\/share\/native\/libj2pkcs11\/p11_util.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -234,1 +234,1 @@\n-extern jboolean debug;\n+extern jboolean debug_j2pkcs11;\n","filename":"src\/jdk.crypto.cryptoki\/share\/native\/libj2pkcs11\/pkcs11wrapper.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n-void *findFunction(JNIEnv *env, jlong jHandle, const char *functionName) {\n+void *p11FindFunction(JNIEnv *env, jlong jHandle, const char *functionName) {\n","filename":"src\/jdk.crypto.cryptoki\/unix\/native\/libj2pkcs11\/j2secmod_md.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n-void *findFunction(JNIEnv *env, jlong jHandle, const char *functionName) {\n+void *p11FindFunction(JNIEnv *env, jlong jHandle, const char *functionName) {\n","filename":"src\/jdk.crypto.cryptoki\/windows\/native\/libj2pkcs11\/j2secmod_md.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}