{"files":[{"patch":"@@ -871,11 +871,0 @@\n-        int promisedStreamid = pp.getPromisedStream();\n-        if (promisedStreamid != nextPushStream) {\n-            resetStream(promisedStreamid, ResetFrame.PROTOCOL_ERROR);\n-            return;\n-        } else if (!reserveStream(false)) {\n-            resetStream(promisedStreamid, ResetFrame.REFUSED_STREAM);\n-            return;\n-        } else {\n-            nextPushStream += 2;\n-        }\n-\n@@ -884,0 +873,1 @@\n+        int promisedStreamid = pp.getPromisedStream();\n@@ -906,0 +896,10 @@\n+        if (promisedStreamid != nextPushStream) {\n+            resetStream(promisedStreamid, ResetFrame.PROTOCOL_ERROR);\n+            return;\n+        } else if (!reserveStream(false)) {\n+            resetStream(promisedStreamid, ResetFrame.REFUSED_STREAM);\n+            return;\n+        } else {\n+            nextPushStream += 2;\n+        }\n+\n@@ -949,1 +949,0 @@\n-            System.err.println(\"closeStream\");\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/Http2Connection.java","additions":11,"deletions":12,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -251,3 +251,1 @@\n-            OutgoingPushPromise pp = new OutgoingPushPromise(streamid, uri, pushPromiseHeaders, content);\n-            if (!cfs.isEmpty())\n-                cfs.forEach(pp::addContinuation);\n+            OutgoingPushPromise pp = new OutgoingPushPromise(streamid, uri, pushPromiseHeaders, content, cfs);\n","filename":"test\/jdk\/java\/net\/httpclient\/http2\/PushPromiseContinuation.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -949,5 +949,3 @@\n-        if (pp.getFlags() != HeadersFrame.END_HEADERS && op.hasContinuations()) {\n-            LinkedList<ContinuationFrame> continuations = new LinkedList<>(op.getContinuations());\n-            while (!continuations.isEmpty()) {\n-                writeFrame(continuations.pop());\n-            }\n+        if (pp.getFlags() != HeadersFrame.END_HEADERS) {\n+            for (ContinuationFrame cf : op.getContinuations())\n+                writeFrame(cf);\n","filename":"test\/jdk\/java\/net\/httpclient\/http2\/server\/Http2TestServerConnection.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+import java.util.List;\n@@ -30,0 +31,1 @@\n+import jdk.internal.net.http.frame.HeaderFrame;\n@@ -39,1 +41,1 @@\n-    private LinkedList<ContinuationFrame> continuations;\n+    private final List<ContinuationFrame> continuations;\n@@ -50,0 +52,1 @@\n+        this.continuations = null;\n@@ -52,8 +55,12 @@\n-    public void addContinuation(ContinuationFrame cf) {\n-        if (continuations == null)\n-            continuations = new LinkedList<>();\n-        continuations.add(cf);\n-    }\n-\n-    public boolean hasContinuations() {\n-        return !continuations.isEmpty();\n+    public OutgoingPushPromise(int parentStream,\n+                               URI uri,\n+                               HttpHeaders headers,\n+                               InputStream is,\n+                               List<ContinuationFrame> continuations) {\n+        super(0,0);\n+        assert flags != HeaderFrame.END_HEADERS;\n+        this.uri = uri;\n+        this.headers = headers;\n+        this.is = is;\n+        this.parentStream = parentStream;\n+        this.continuations = List.copyOf(continuations);\n@@ -62,1 +69,1 @@\n-    public LinkedList<ContinuationFrame> getContinuations() {\n+    public List<ContinuationFrame> getContinuations() {\n","filename":"test\/jdk\/java\/net\/httpclient\/http2\/server\/OutgoingPushPromise.java","additions":17,"deletions":10,"binary":false,"changes":27,"status":"modified"}]}