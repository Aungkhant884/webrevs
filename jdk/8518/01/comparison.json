{"files":[{"patch":"@@ -764,1 +764,1 @@\n-            if (stream == null) {\n+            if (stream == null && pushContinuationState == null) {\n@@ -804,1 +804,5 @@\n-                        handlePushContinuation(stream, cf);\n+                        if (streamid == pushContinuationState.pushContFrame.streamid())\n+                            handlePushContinuation(stream, cf);\n+                        else\n+                            protocolError(ErrorFrame.PROTOCOL_ERROR, \"Received a Continuation Frame with an \" +\n+                                    \"unexpected stream id\");\n@@ -891,2 +895,0 @@\n-        \/\/ Perhaps the following checks could be moved to handlePushPromise()\n-        \/\/ to reset the PushPromise stream earlier?\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/Http2Connection.java","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -251,1 +251,2 @@\n-            OutgoingPushPromise pp = new OutgoingPushPromise(streamid, uri, pushPromiseHeaders, content);\n+            OutgoingPushPromise pp = new OutgoingPushPromise(streamid, uri, pushPromiseHeaders, content, cfs);\n+\n@@ -259,4 +260,0 @@\n-                for (ContinuationFrame cf : cfs) {\n-                    conn.outputQ.put(cf);\n-                    System.err.println(\"Server: Scheduled a Continuation to Send\");\n-                }\n","filename":"test\/jdk\/java\/net\/httpclient\/http2\/PushPromiseContinuation.java","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -25,0 +25,1 @@\n+import jdk.internal.net.http.frame.ContinuationFrame;\n@@ -948,0 +949,4 @@\n+        if (pp.getFlags() != HeadersFrame.END_HEADERS) {\n+            for (ContinuationFrame cf : op.getContinuations())\n+                writeFrame(cf);\n+        }\n","filename":"test\/jdk\/java\/net\/httpclient\/http2\/server\/Http2TestServerConnection.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,0 +27,5 @@\n+import java.util.LinkedList;\n+import java.util.List;\n+\n+import jdk.internal.net.http.frame.ContinuationFrame;\n+import jdk.internal.net.http.frame.HeaderFrame;\n@@ -36,0 +41,1 @@\n+    private final List<ContinuationFrame> continuations;\n@@ -46,0 +52,15 @@\n+        this.continuations = null;\n+    }\n+\n+    public OutgoingPushPromise(int parentStream,\n+                               URI uri,\n+                               HttpHeaders headers,\n+                               InputStream is,\n+                               List<ContinuationFrame> continuations) {\n+        super(0,0);\n+        assert flags != HeaderFrame.END_HEADERS;\n+        this.uri = uri;\n+        this.headers = headers;\n+        this.is = is;\n+        this.parentStream = parentStream;\n+        this.continuations = List.copyOf(continuations);\n@@ -48,0 +69,3 @@\n+    public List<ContinuationFrame> getContinuations() {\n+        return continuations;\n+    }\n","filename":"test\/jdk\/java\/net\/httpclient\/http2\/server\/OutgoingPushPromise.java","additions":25,"deletions":1,"binary":false,"changes":26,"status":"modified"}]}