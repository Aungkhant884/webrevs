{"files":[{"patch":"@@ -67,1 +67,1 @@\n-    log_info(dwarf)(\"Did not find library for address \" INTPTR_FORMAT, p2i(pc));\n+    log_develop_info(dwarf)(\"Did not find library for address \" INTPTR_FORMAT, p2i(pc));\n@@ -72,1 +72,1 @@\n-  log_debug(dwarf)(\"##### Find filename and line number for offset \" PTR32_FORMAT \" in library %s #####\", unsigned_offset_in_library, filepath);\n+  log_develop_debug(dwarf)(\"##### Find filename and line number for offset \" PTR32_FORMAT \" in library %s #####\", unsigned_offset_in_library, filepath);\n@@ -83,2 +83,2 @@\n-  log_info(dwarf)(\"pc: \" INTPTR_FORMAT \", offset: \" PTR32_FORMAT \", filename: %s, line: %u\", p2i(pc), offset_in_library, filename, *line);\n-  log_debug(dwarf)(\"\"); \/\/ To structure the debug output better.\n+  log_develop_info(dwarf)(\"pc: \" INTPTR_FORMAT \", offset: \" PTR32_FORMAT \", filename: %s, line: %u\", p2i(pc), offset_in_library, filename, *line);\n+  log_develop_debug(dwarf)(\"\"); \/\/ To structure the debug output better.\n","filename":"src\/hotspot\/share\/utilities\/decoder_elf.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -61,1 +61,1 @@\n-    log_debug(decoder)(\"Elf section cache is disabled\");\n+    log_develop_debug(decoder)(\"Elf section cache is disabled\");\n@@ -315,1 +315,1 @@\n-      log_info(dwarf)(\"Failed to load DWARF file for library %s or find DWARF sections directly inside it.\", _filepath);\n+      log_develop_info(dwarf)(\"Failed to load DWARF file for library %s or find DWARF sections directly inside it.\", _filepath);\n@@ -318,1 +318,1 @@\n-    log_info(dwarf)(\"No separate .debuginfo file for library %s. It already contains the required DWARF sections.\", _filepath);\n+    log_develop_info(dwarf)(\"No separate .debuginfo file for library %s. It already contains the required DWARF sections.\", _filepath);\n@@ -324,1 +324,1 @@\n-    log_warning(dwarf)(\"Failed to retrieve file and line number information for %s at offset: \" PTR32_FORMAT, _filepath, offset_in_library);\n+    log_develop_info(dwarf)(\"Failed to retrieve file and line number information for %s at offset: \" PTR32_FORMAT, _filepath, offset_in_library);\n@@ -396,1 +396,1 @@\n-    log_debug(dwarf)(\"_JVM_DWARF_PATH: %s\", dwarf_path);\n+    log_develop_debug(dwarf)(\"_JVM_DWARF_PATH: %s\", dwarf_path);\n@@ -417,1 +417,1 @@\n-    log_debug(dwarf)(\"Failed to read the .gnu_debuglink header.\");\n+    log_develop_debug(dwarf)(\"Failed to read the .gnu_debuglink header.\");\n@@ -533,1 +533,1 @@\n-    log_debug(dwarf)(\"Could not open dwarf file %s (%s)\", filepath, os::strerror(errno));\n+    log_develop_debug(dwarf)(\"Could not open dwarf file %s (%s)\", filepath, os::strerror(errno));\n@@ -545,1 +545,1 @@\n-  log_info(dwarf)(\"CRC did not match. Expected: \" PTR32_FORMAT \", found: \" PTR32_FORMAT, crc, file_crc);\n+  log_develop_info(dwarf)(\"CRC did not match. Expected: \" PTR32_FORMAT \", found: \" PTR32_FORMAT, crc, file_crc);\n@@ -574,1 +574,1 @@\n-  log_info(dwarf)(\"Open DWARF file: %s\", filepath);\n+  log_develop_info(dwarf)(\"Open DWARF file: %s\", filepath);\n@@ -577,1 +577,1 @@\n-    log_info(dwarf)(\"Did not find required DWARF sections in %s\", filepath);\n+    log_develop_info(dwarf)(\"Did not find required DWARF sections in %s\", filepath);\n@@ -589,1 +589,1 @@\n-    log_info(dwarf)(\"Failed to find .debug_info offset for the compilation unit.\");\n+    log_develop_info(dwarf)(\"Failed to find .debug_info offset for the compilation unit.\");\n@@ -592,1 +592,1 @@\n-  log_debug(dwarf)(\".debug_info offset:    \" PTR32_FORMAT, compilation_unit_offset);\n+  log_develop_debug(dwarf)(\".debug_info offset:    \" PTR32_FORMAT, compilation_unit_offset);\n@@ -597,1 +597,1 @@\n-    log_info(dwarf)(\"Failed to find .debug_line offset for the line number program.\");\n+    log_develop_info(dwarf)(\"Failed to find .debug_line offset for the line number program.\");\n@@ -600,1 +600,1 @@\n-  log_debug(dwarf)(\".debug_line offset:    \" PTR32_FORMAT, debug_line_offset);\n+  log_develop_debug(dwarf)(\".debug_line offset:    \" PTR32_FORMAT, debug_line_offset);\n@@ -604,1 +604,1 @@\n-    log_info(dwarf)(\"Failed to process the line number program correctly.\");\n+    log_develop_info(dwarf)(\"Failed to process the line number program correctly.\");\n@@ -616,1 +616,1 @@\n-    log_info(dwarf)(\"Failed to read a .debug_aranges header.\");\n+    log_develop_info(dwarf)(\"Failed to read a .debug_aranges header.\");\n@@ -625,1 +625,1 @@\n-      log_info(dwarf)(\"Failed to read a .debug_aranges header.\");\n+      log_develop_info(dwarf)(\"Failed to read a .debug_aranges header.\");\n@@ -635,1 +635,1 @@\n-      log_debug(dwarf)(\".debug_aranges offset: \" PTR32_FORMAT, (uint32_t)_reader.get_position());\n+      log_develop_debug(dwarf)(\".debug_aranges offset: \" PTR32_FORMAT, (uint32_t)_reader.get_position());\n@@ -641,1 +641,1 @@\n-  log_info(dwarf)(\"No address descriptor found containing offset_in_library.\");\n+  log_develop_info(dwarf)(\"No address descriptor found containing offset_in_library.\");\n@@ -733,1 +733,1 @@\n-    log_info(dwarf)(\"Failed to read the compilation unit header.\");\n+    log_develop_info(dwarf)(\"Failed to read the compilation unit header.\");\n@@ -746,1 +746,1 @@\n-    log_info(dwarf)(\"Failed to read the .debug_abbrev header at \" PTR32_FORMAT, _header._debug_abbrev_offset);\n+    log_develop_info(dwarf)(\"Failed to read the .debug_abbrev header at \" PTR32_FORMAT, _header._debug_abbrev_offset);\n@@ -760,1 +760,1 @@\n-    log_info(dwarf)(\"Failed to read the .debug_info section header.\");\n+    log_develop_info(dwarf)(\"Failed to read the .debug_info section header.\");\n@@ -812,1 +812,1 @@\n-  log_trace(dwarf)(\"Series of declarations [code, tag]:\");\n+  log_develop_trace(dwarf)(\"Series of declarations [code, tag]:\");\n@@ -820,1 +820,1 @@\n-    log_trace(dwarf)(\"  Series of attributes [name, form]:\");\n+    log_develop_trace(dwarf)(\"  Series of attributes [name, form]:\");\n@@ -826,2 +826,2 @@\n-      log_debug(dwarf)(\".debug_abbrev offset:  \" PTR32_FORMAT, (uint32_t)_reader.get_position());\n-      log_trace(dwarf)(\"  Read the following attribute values from compilation unit:\");\n+      log_develop_debug(dwarf)(\".debug_abbrev offset:  \" PTR32_FORMAT, (uint32_t)_reader.get_position());\n+      log_develop_trace(dwarf)(\"  Read the following attribute values from compilation unit:\");\n@@ -837,1 +837,1 @@\n-  log_info(dwarf)(\".debug_line offset not found\");\n+  log_develop_info(dwarf)(\".debug_line offset not found\");\n@@ -848,1 +848,1 @@\n-    log_info(dwarf)(\"abbrev_code not found in any declaration\");\n+    log_develop_info(dwarf)(\"abbrev_code not found in any declaration\");\n@@ -856,1 +856,1 @@\n-  log_trace(dwarf)(\"Code: 0x\" UINT64_FORMAT_X \", Tag: 0x\" UINT64_FORMAT_X, declaration._abbrev_code, declaration._tag);\n+  log_develop_trace(dwarf)(\"Code: 0x\" UINT64_FORMAT_X \", Tag: 0x\" UINT64_FORMAT_X, declaration._abbrev_code, declaration._tag);\n@@ -865,1 +865,1 @@\n-      log_info(dwarf)(\"Found unsupported tag in compilation unit: \" UINT64_FORMAT_X, declaration._tag);\n+      log_develop_info(dwarf)(\"Found unsupported tag in compilation unit: \" UINT64_FORMAT_X, declaration._tag);\n@@ -885,1 +885,1 @@\n-        log_info(dwarf)(\"Did not find DW_AT_stmt_list in .debug_abbrev\");\n+        log_develop_info(dwarf)(\"Did not find DW_AT_stmt_list in .debug_abbrev\");\n@@ -907,1 +907,1 @@\n-  log_info(dwarf)(\".debug_abbrev section appears to be corrupted\");\n+  log_develop_info(dwarf)(\".debug_abbrev section appears to be corrupted\");\n@@ -913,1 +913,1 @@\n-  log_trace(dwarf)(\"  Name: 0x\" UINT64_FORMAT_X \", Form: 0x\" UINT64_FORMAT_X,\n+  log_develop_trace(dwarf)(\"  Name: 0x\" UINT64_FORMAT_X \", Form: 0x\" UINT64_FORMAT_X,\n@@ -1019,2 +1019,2 @@\n-        log_trace(dwarf)(\"    Name: DW_AT_stmt_list, Form: DW_FORM_sec_offset\");\n-        log_trace(dwarf)(\"    Reading .debug_line offset from compilation unit at \" PTR32_FORMAT, (uint32_t)_reader.get_position());\n+        log_develop_trace(dwarf)(\"    Name: DW_AT_stmt_list, Form: DW_FORM_sec_offset\");\n+        log_develop_trace(dwarf)(\"    Reading .debug_line offset from compilation unit at \" PTR32_FORMAT, (uint32_t)_reader.get_position());\n@@ -1032,1 +1032,1 @@\n-      log_warning(dwarf)(\"Unknown DW_FORM_* attribute encoding.\");\n+      log_develop_info(dwarf)(\"Unknown DW_FORM_* attribute encoding.\");\n@@ -1042,1 +1042,1 @@\n-    log_info(dwarf)(\"Failed to parse the line number program header correctly.\");\n+    log_develop_info(dwarf)(\"Failed to parse the line number program header correctly.\");\n@@ -1052,1 +1052,1 @@\n-    log_info(dwarf)(\"Failed to read the .debug_line section header.\");\n+    log_develop_info(dwarf)(\"Failed to read the .debug_line section header.\");\n@@ -1184,3 +1184,3 @@\n-  log_debug(dwarf)(\"\");\n-  log_debug(dwarf)(\"Line Number Information Matrix\");\n-  log_debug(dwarf)(\"------------------------------\");\n+  log_develop_debug(dwarf)(\"\");\n+  log_develop_debug(dwarf)(\"Line Number Information Matrix\");\n+  log_develop_debug(dwarf)(\"------------------------------\");\n@@ -1188,1 +1188,1 @@\n-  log_debug(dwarf)(\"Address:      Line:    Column:   File:\");\n+  log_develop_debug(dwarf)(\"Address:      Line:    Column:   File:\");\n@@ -1190,1 +1190,1 @@\n-  log_debug(dwarf)(\"Address:              Line:    Column:   File:\");\n+  log_develop_debug(dwarf)(\"Address:              Line:    Column:   File:\");\n@@ -1220,1 +1220,1 @@\n-      log_debug(dwarf)(INTPTR_FORMAT \"    %-5u    %-3u       %-4u\",\n+      log_develop_debug(dwarf)(INTPTR_FORMAT \"    %-5u    %-3u       %-4u\",\n@@ -1233,1 +1233,1 @@\n-  log_debug(dwarf)(\"Did not find an entry in the line number information matrix that matches \" PTR32_FORMAT, _offset_in_library);\n+  log_develop_debug(dwarf)(\"Did not find an entry in the line number information matrix that matches \" PTR32_FORMAT, _offset_in_library);\n@@ -1244,1 +1244,1 @@\n-  log_trace(dwarf)(\"  Opcode: 0x%02x \", opcode);\n+  log_develop_trace(dwarf)(\"  Opcode: 0x%02x \", opcode);\n@@ -1274,1 +1274,1 @@\n-      log_trace(dwarf)(\"    DW_LNE_end_sequence\");\n+      log_develop_trace(dwarf)(\"    DW_LNE_end_sequence\");\n@@ -1283,1 +1283,1 @@\n-      log_trace(dwarf)(\"    DW_LNE_set_address \" INTPTR_FORMAT, _state->_address);\n+      log_develop_trace(dwarf)(\"    DW_LNE_set_address \" INTPTR_FORMAT, _state->_address);\n@@ -1289,1 +1289,1 @@\n-    log_trace(dwarf)(\"    DW_LNE_define_file\");\n+    log_develop_trace(dwarf)(\"    DW_LNE_define_file\");\n@@ -1301,1 +1301,1 @@\n-      log_trace(dwarf)(\"    DW_LNE_set_discriminator\");\n+      log_develop_trace(dwarf)(\"    DW_LNE_set_discriminator\");\n@@ -1312,1 +1312,1 @@\n-      log_warning(dwarf)(\"Unknown extended opcode\");\n+      log_develop_info(dwarf)(\"Unknown extended opcode\");\n@@ -1322,1 +1322,1 @@\n-      log_trace(dwarf)(\"    DW_LNS_copy\");\n+      log_develop_trace(dwarf)(\"    DW_LNS_copy\");\n@@ -1341,1 +1341,1 @@\n-      log_trace(dwarf)(\"    DW_LNS_advance_pc (\" INTPTR_FORMAT \")\", _state->_address);\n+      log_develop_trace(dwarf)(\"    DW_LNS_advance_pc (\" INTPTR_FORMAT \")\", _state->_address);\n@@ -1351,1 +1351,1 @@\n-      log_trace(dwarf)(\"    DW_LNS_advance_line (%d)\", _state->_line);\n+      log_develop_trace(dwarf)(\"    DW_LNS_advance_line (%d)\", _state->_line);\n@@ -1360,1 +1360,1 @@\n-      log_trace(dwarf)(\"    DW_LNS_set_file (%u)\", _state->_file);\n+      log_develop_trace(dwarf)(\"    DW_LNS_set_file (%u)\", _state->_file);\n@@ -1369,1 +1369,1 @@\n-      log_trace(dwarf)(\"    DW_LNS_set_column (%u)\", _state->_column);\n+      log_develop_trace(dwarf)(\"    DW_LNS_set_column (%u)\", _state->_column);\n@@ -1372,1 +1372,1 @@\n-      log_trace(dwarf)(\"    DW_LNS_negate_stmt\");\n+      log_develop_trace(dwarf)(\"    DW_LNS_negate_stmt\");\n@@ -1376,1 +1376,1 @@\n-      log_trace(dwarf)(\"    DW_LNS_set_basic_block\");\n+      log_develop_trace(dwarf)(\"    DW_LNS_set_basic_block\");\n@@ -1388,1 +1388,1 @@\n-      log_trace(dwarf)(\"    DW_LNS_const_add_pc (\" INTPTR_FORMAT \")\", _state->_address - old_address);\n+      log_develop_trace(dwarf)(\"    DW_LNS_const_add_pc (\" INTPTR_FORMAT \")\", _state->_address - old_address);\n@@ -1398,1 +1398,1 @@\n-      log_trace(dwarf)(\"    DW_LNS_fixed_advance_pc (\" INTPTR_FORMAT \")\", _state->_address);\n+      log_develop_trace(dwarf)(\"    DW_LNS_fixed_advance_pc (\" INTPTR_FORMAT \")\", _state->_address);\n@@ -1401,1 +1401,1 @@\n-      log_trace(dwarf)(\"    DW_LNS_set_basic_block\");\n+      log_develop_trace(dwarf)(\"    DW_LNS_set_basic_block\");\n@@ -1405,1 +1405,1 @@\n-      log_trace(dwarf)(\"    DW_LNS_set_epilogue_begin\");\n+      log_develop_trace(dwarf)(\"    DW_LNS_set_epilogue_begin\");\n@@ -1415,1 +1415,1 @@\n-      log_trace(dwarf)(\"    DW_LNS_set_isa (%u)\", _state->_isa);\n+      log_develop_trace(dwarf)(\"    DW_LNS_set_isa (%u)\", _state->_isa);\n@@ -1418,1 +1418,1 @@\n-      log_warning(dwarf)(\"Unknown standard opcode\");\n+      log_develop_info(dwarf)(\"Unknown standard opcode\");\n@@ -1436,1 +1436,1 @@\n-  log_trace(dwarf)(\"    address += \" INTPTR_FORMAT \", line += %d\", _state->_address - old_address, _state->_line - old_line);\n+  log_develop_trace(dwarf)(\"    address += \" INTPTR_FORMAT \", line += %d\", _state->_address - old_address, _state->_line - old_line);\n@@ -1460,1 +1460,1 @@\n-        log_debug(dwarf)(\"^^^ Found line for requested offset \" PTR32_FORMAT \" ^^^\", _offset_in_library);\n+        log_develop_debug(dwarf)(\"^^^ Found line for requested offset \" PTR32_FORMAT \" ^^^\", _offset_in_library);\n@@ -1482,1 +1482,1 @@\n-  log_debug(dwarf)(\"^^^ Found line for requested offset \" PTR32_FORMAT \" ^^^\", _offset_in_library);\n+  log_develop_debug(dwarf)(\"^^^ Found line for requested offset \" PTR32_FORMAT \" ^^^\", _offset_in_library);\n@@ -1484,1 +1484,1 @@\n-  log_debug(dwarf)(INTPTR_FORMAT \"    %-5u    %-3u       %-4u\", _state->_address, _state->_line,\n+  log_develop_debug(dwarf)(INTPTR_FORMAT \"    %-5u    %-3u       %-4u\", _state->_address, _state->_line,\n@@ -1512,1 +1512,1 @@\n-  log_debug(dwarf)(\"Did not find filename entry at index \" UINT32_FORMAT \" in .debug_line header\", file_index);\n+  log_develop_debug(dwarf)(\"Did not find filename entry at index \" UINT32_FORMAT \" in .debug_line header\", file_index);\n@@ -1703,1 +1703,1 @@\n-        log_info(dwarf)(\"Tried to read \" SIZE_FORMAT \" bytes but exceeded buffer size of \" SIZE_FORMAT \". Truncating string.\",\n+        log_develop_info(dwarf)(\"Tried to read \" SIZE_FORMAT \" bytes but exceeded buffer size of \" SIZE_FORMAT \". Truncating string.\",\n","filename":"src\/hotspot\/share\/utilities\/elfFile.cpp","additions":70,"deletions":70,"binary":false,"changes":140,"status":"modified"}]}