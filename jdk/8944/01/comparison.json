{"files":[{"patch":"@@ -1053,1 +1053,1 @@\n-  ContinuationEntry::return_pc_offset = __ pc() - start;\n+  ContinuationEntry::_return_pc_offset = __ pc() - start;\n@@ -1198,1 +1198,1 @@\n-    ContinuationEntry::set_enter_nmethod(nm);\n+    ContinuationEntry::set_enter_code(nm);\n","filename":"src\/hotspot\/cpu\/aarch64\/sharedRuntime_aarch64.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1320,1 +1320,1 @@\n-  ContinuationEntry::return_pc_offset = __ pc() - start;\n+  ContinuationEntry::_return_pc_offset = __ pc() - start;\n@@ -1468,1 +1468,1 @@\n-    ContinuationEntry::set_enter_nmethod(nm);\n+    ContinuationEntry::set_enter_code(nm);\n","filename":"src\/hotspot\/cpu\/x86\/sharedRuntime_x86_64.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -35,3 +35,2 @@\n-int ContinuationEntry::return_pc_offset = 0;\n-nmethod* ContinuationEntry::continuation_enter = nullptr;\n-address ContinuationEntry::return_pc = nullptr;\n+int ContinuationEntry::_return_pc_offset = 0;\n+address ContinuationEntry::_return_pc = nullptr;\n@@ -39,4 +38,3 @@\n-void ContinuationEntry::set_enter_nmethod(nmethod* nm) {\n-  assert(return_pc_offset != 0, \"\");\n-  continuation_enter = nm;\n-  return_pc = nm->code_begin() + return_pc_offset;\n+void ContinuationEntry::set_enter_code(CompiledMethod* cm) {\n+  assert(_return_pc_offset != 0, \"\");\n+  _return_pc = cm->code_begin() + _return_pc_offset;\n","filename":"src\/hotspot\/share\/runtime\/continuationEntry.cpp","additions":5,"deletions":7,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -33,1 +33,0 @@\n-class nmethod;\n@@ -55,2 +54,2 @@\n-  static int return_pc_offset; \/\/ friend gen_continuation_enter\n-  static void set_enter_nmethod(nmethod* nm); \/\/ friend SharedRuntime::generate_native_wrapper\n+  static int _return_pc_offset; \/\/ friend gen_continuation_enter\n+  static void set_enter_code(CompiledMethod* nm); \/\/ friend SharedRuntime::generate_native_wrapper\n@@ -59,2 +58,1 @@\n-  static nmethod* continuation_enter;\n-  static address return_pc;\n+  static address _return_pc;\n@@ -90,1 +88,1 @@\n-  static address entry_pc() { return return_pc; }\n+  static address entry_pc() { return _return_pc; }\n@@ -126,2 +124,2 @@\n-\n-  oop scope()     const { return Continuation::continuation_scope(cont_oop()); }\n+  inline oop scope() const;\n+  inline static oop cont_oop_or_null(const ContinuationEntry* ce);\n@@ -131,4 +129,0 @@\n-  static oop cont_oop_or_null(const ContinuationEntry* ce) {\n-    return ce == nullptr ? nullptr : ce->cont_oop();\n-  }\n-\n","filename":"src\/hotspot\/share\/runtime\/continuationEntry.hpp","additions":6,"deletions":12,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -39,0 +39,7 @@\n+inline oop ContinuationEntry::cont_oop_or_null(const ContinuationEntry* ce) {\n+  return ce == nullptr ? nullptr : ce->cont_oop();\n+}\n+\n+inline oop ContinuationEntry::scope() const {\n+  return Continuation::continuation_scope(cont_oop());\n+}\n","filename":"src\/hotspot\/share\/runtime\/continuationEntry.inline.hpp","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"}]}