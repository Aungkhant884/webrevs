[{"commit":{"message":"8298482: Implement ParallelGC NUMAStats for Linux\n\nParallelGC has a seemingly useful option -XX:+NUMAStats that prints\ndetailed information in GC.heap_info about which NUMA node pages in the\neden space are bound to.  However as far as I can tell this only ever\nworked on Solaris and is not implemented on any of the systems we\ncurrently support.  This patch implements it on Linux using the\nmove_pages system call.\n\nThe function os::get_page_info() and accompanying struct page_info was\njust a thin wrapper around the Solaris meminfo(2) syscall and was never\nported to other systems so I've just removed it rather than try to\nemulate its interface.\n\nThere's also a method MutableNUMASpace::LGRPSpace::scan_pages() which\nattempts to find pages on the wrong NUMA node and frees them so that\nthey have another chance to be allocated on the correct node by the\nfirst-touching thread, but I think this has always been a no-op on\nnon-Solaris so perhaps should also be removed.  On Linux it shouldn't be\nnecessary as you can bind pages to the desired node directly.\n\nI don't know what the performance of this option was like on Solaris but\non Linux the move_pages call can be quite slow: I measured about 25ms\/GB\non my system.  At the moment we call LGRPSpace::accumulate_statistics()\ntwice per GC cycle: I removed the second call as it's likely to see a\nlot of uncommitted pages if the spaces were just resized.\nMutableNUMASpace::print_on() also calls accumulate_statistics() directly\nand since that's the only place this data is used, maybe we can drop the\ncall from MutableNUMASpace::accumulate_statistics() as well?\n\nExample output:\n\n PSYoungGen      total 4290560K, used 835628K [0x00000006aac00000, 0x0000000800000000, 0x0000000800000000)\n  eden space 3096576K, 1% used [0x00000006aac00000,0x00000007176a9f48,0x0000000767c00000)\n    lgrp 0 space 1761280K, 2% used [0x00000006aac00000,0x00000006acfc4980,0x0000000716400000)\n    local\/remote\/unbiased\/uncommitted: 1671168K\/0K\/0K\/90112K, large\/small pages: 0\/440320\n    lgrp 1 space 1335296K, 46% used [0x0000000716400000,0x000000073c2abb18,0x0000000767c00000)\n    local\/remote\/unbiased\/uncommitted: 1335296K\/0K\/0K\/0K, large\/small pages: 0\/333824\n  from space 1193984K, 65% used [0x00000007b7200000,0x00000007e6b9c778,0x0000000800000000)\n  to   space 1247232K, 0% used [0x0000000767c00000,0x0000000767c00000,0x00000007b3e00000)\n\nAfter testing this with SPECjbb for a while I noticed some pages always\nend up bound to the wrong node.  I think this is a regression caused by\nJDK-8283935 but I'll raise a separate ticket for that."},"files":[{"filename":"src\/hotspot\/os\/aix\/os_aix.cpp"},{"filename":"src\/hotspot\/os\/bsd\/os_bsd.cpp"},{"filename":"src\/hotspot\/os\/linux\/os_linux.cpp"},{"filename":"src\/hotspot\/os\/windows\/os_windows.cpp"},{"filename":"src\/hotspot\/share\/gc\/parallel\/mutableNUMASpace.cpp"},{"filename":"src\/hotspot\/share\/runtime\/os.hpp"}],"sha":"f9c78f6e61446bf43325c9275690b18870070cc1"}]