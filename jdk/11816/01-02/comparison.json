{"files":[{"patch":"@@ -1,42 +0,0 @@\n-\/*\n- * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-#ifndef SHARE_METAPROGRAMMING_DECAY_HPP\n-#define SHARE_METAPROGRAMMING_DECAY_HPP\n-\n-#include \"memory\/allStatic.hpp\"\n-#include \"metaprogramming\/removeReference.hpp\"\n-\n-#include <type_traits>\n-\n-\/\/ This trait trims the type from CV qualifiers and references.\n-\/\/ This trait provides a subset of the functionality of std::decay;\n-\/\/ array types and function types are not supported here.\n-\n-template <typename T>\n-struct Decay: AllStatic {\n-  using type = std::remove_cv_t<typename RemoveReference<T>::type>;\n-};\n-\n-#endif \/\/ SHARE_METAPROGRAMMING_DECAY_HPP\n","filename":"src\/hotspot\/share\/metaprogramming\/decay.hpp","additions":0,"deletions":42,"binary":false,"changes":42,"status":"deleted"}]}