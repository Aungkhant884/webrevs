{"files":[{"patch":"@@ -5063,1 +5063,1 @@\n-            int groupSize = k - j;\n+            int groupSizeChars = k - j; \/\/Group size in chars\n@@ -5070,1 +5070,1 @@\n-            if (i + groupSize > matcher.to) {\n+            if (i + groupSizeChars > matcher.to) {\n@@ -5078,0 +5078,6 @@\n+\n+            \/\/We set groupSize to the number of chars in the given subsequence\n+            \/\/but this is an upper bound we can reduce if we spot 2-char\n+            \/\/codepoints.\n+            int groupSize = groupSizeChars;\n+\n@@ -5094,1 +5100,2 @@\n-                x += Character.charCount(c1);\n+                int xIncr = Character.charCount(c1);\n+                x += xIncr;\n@@ -5096,0 +5103,6 @@\n+\n+                if(xIncr > 1) {\n+                    \/\/Group size is guessed in terms of chars, but we need to\n+                    \/\/adjust if we spot a 2-char codePoint.\n+                    groupSize--;\n+                }\n@@ -5098,1 +5111,1 @@\n-            return next.match(matcher, i+groupSize, seq);\n+            return next.match(matcher, i+groupSizeChars, seq);\n","filename":"src\/java.base\/share\/classes\/java\/util\/regex\/Pattern.java","additions":17,"deletions":4,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -4559,0 +4559,9 @@\n+\n+    \/\/This test is for 8281315\n+    @Test\n+    public static void iOOBForCIBackrefs(){\n+        String line = \"\\ud83d\\udc95\\ud83d\\udc95\\ud83d\\udc95\";\n+        var pattern2 = Pattern.compile(\"(?i)(.)\\\\1{2,}\");\n+        assertTrue(pattern2.matcher(line).find());\n+\n+    }\n","filename":"test\/jdk\/java\/util\/regex\/RegExTest.java","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"}]}