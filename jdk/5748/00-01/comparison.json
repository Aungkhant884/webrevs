{"files":[{"patch":"@@ -297,17 +297,0 @@\n-        synchronized(cacheServiceProviders){\n-            if (cacheServiceProviders.get(contextClassLoader) == null){\n-                if (debug != null)\n-                    debug.println(\"Build ServiceProviders cache for ClassLoader: \" + contextClassLoader.getName());\n-                @SuppressWarnings(\"removal\")\n-                ServiceLoader<LoginModule> sc = AccessController.doPrivileged(\n-                        (PrivilegedAction<ServiceLoader<LoginModule>>)\n-                                () -> java.util.ServiceLoader.load(\n-                                    LoginModule.class, contextClassLoader));\n-                Set<Provider<LoginModule>> lmProviders = sc.stream().collect(Collectors.toSet());\n-                    if (debug != null){\n-                        debug.println(\"Discovered ServiceProviders for ClassLoader: \" + contextClassLoader.getName());\n-                        lmProviders.forEach(System.err::println);\n-                    }\n-                cacheServiceProviders.put(contextClassLoader,lmProviders);\n-            }\n-        }\n@@ -717,0 +700,1 @@\n+                    Set<Provider<LoginModule>> lmProviders;\n@@ -718,2 +702,17 @@\n-                        Set<Provider<LoginModule>> lmp = cacheServiceProviders.get(contextClassLoader);\n-                        for ( Provider<LoginModule> lm: lmp){\n+                        lmProviders = cacheServiceProviders.get(contextClassLoader);\n+                        if (lmProviders == null){\n+                            if (debug != null)\n+                                debug.println(\"Build ServiceProviders cache for ClassLoader: \" + contextClassLoader.getName());\n+                            @SuppressWarnings(\"removal\")\n+                            ServiceLoader<LoginModule> sc = AccessController.doPrivileged(\n+                                    (PrivilegedAction<ServiceLoader<LoginModule>>)\n+                                            () -> java.util.ServiceLoader.load(\n+                                                LoginModule.class, contextClassLoader));\n+                            lmProviders = sc.stream().collect(Collectors.toSet());\n+                                if (debug != null){\n+                                    debug.println(\"Discovered ServiceProviders for ClassLoader: \" + contextClassLoader.getName());\n+                                    lmProviders.forEach(System.err::println);\n+                                }\n+                            cacheServiceProviders.put(contextClassLoader,lmProviders);\n+                        }\n+                        for ( Provider<LoginModule> lm: lmProviders){\n","filename":"src\/java.base\/share\/classes\/javax\/security\/auth\/login\/LoginContext.java","additions":18,"deletions":19,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -32,0 +32,5 @@\n+    public static boolean isLoaded;\n+\n+    public FirstLoginModule() {\n+        isLoaded = true;\n+    }\n","filename":"test\/jdk\/javax\/security\/auth\/spi\/FirstLoginModule.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n- * @bug 8047789\n+ * @bug 8047789 8273026\n@@ -42,1 +42,1 @@\n-        if (SecondLoginModule.isLoaded) {\n+        if (SecondLoginModule.isLoaded && FirstLoginModule.isLoaded) {\n@@ -48,5 +48,5 @@\n-        \/\/ Although only FirstLoginModule is specified in the JAAS login\n-        \/\/ config file, LoginContext will first create all LoginModule\n-        \/\/ implementations that are registered as services, which include\n-        \/\/ SecondLoginModule.\n-        if (!SecondLoginModule.isLoaded) {\n+        \/\/ LoginContext creates the only one instance of LoginModule,\n+        \/\/ which ClassName is specified in the JAAS login config file. \n+        \/\/ So SecondLoginModule, that is an implementation of LoginModule service,\n+        \/\/ wasn't instantiated. \n+        if (SecondLoginModule.isLoaded && !FirstLoginModule.isLoaded) {\n","filename":"test\/jdk\/javax\/security\/auth\/spi\/Loader.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"}]}