{"files":[{"patch":"@@ -47,1 +47,1 @@\n-    cds compiler1 compiler2 dtrace epsilongc g1gc hardlse jfr jni-check \\\n+    cds compiler1 compiler2 dtrace epsilongc g1gc jfr jni-check \\\n@@ -64,1 +64,0 @@\n-m4_define(jvm_feature_desc_hardlse, [use lse atomics instructions])\n@@ -442,2 +441,0 @@\n-  # Filter out hardlse feature by default\n-  JVM_FEATURES_PLATFORM_FILTER=\"$JVM_FEATURES_PLATFORM_FILTER hardlse\"\n","filename":"make\/autoconf\/jvm-features.m4","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -169,8 +169,0 @@\n-ifeq ($(call check-jvm-feature, hardlse), true)\n-  JVM_CFLAGS_FEATURES += -DHARD_LSE=1\n-  JVM_EXCLUDE_FILES += atomic_linux_aarch64.S\n-else\n-  JVM_EXCLUDE_FILES += atomic_linux_aarch64_lse.S\n-endif\n-\n-\n","filename":"make\/hotspot\/lib\/JvmFeatures.gmk","additions":0,"deletions":8,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -6417,5 +6417,1 @@\n-#ifdef LINUX\n-\n-\/\/ Compile time support for LSE is enabled,\n-\/\/ no needs to rewrite atomic stubs\n-#ifndef HARD_LSE\n+#if defined (LINUX) && !defined (__ARM_FEATURE_ATOMICS)\n@@ -6617,1 +6613,0 @@\n-#endif \/\/ HARD_LSE\n@@ -7997,2 +7992,1 @@\n-#ifdef LINUX\n-#ifndef HARD_LSE\n+#if defined (LINUX) && !defined (__ARM_FEATURE_ATOMICS)\n@@ -8002,1 +7996,0 @@\n-#endif \/\/ HARD_LSE\n@@ -8029,1 +8022,1 @@\n-#ifdef LINUX\n+#if defined (LINUX)\n","filename":"src\/hotspot\/cpu\/aarch64\/stubGenerator_aarch64.cpp","additions":3,"deletions":10,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -253,3 +253,3 @@\n-#ifdef HARD_LSE\n-  \/\/ Compile time LSE support is enabled\n-  \/\/ Forcibly enable runtime LSE support\n+#ifdef __ARM_FEATURE_ATOMICS\n+\/\/ Compile time LSE support is enabled\n+\/\/ Forcibly enable runtime LSE support\n","filename":"src\/hotspot\/cpu\/aarch64\/vm_version_aarch64.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -22,2 +22,0 @@\n-\n-\n@@ -25,1 +23,0 @@\n-\n@@ -29,0 +26,3 @@\n+#ifdef __ARM_FEATURE_ATOMICS\n+        ldaddal x1, x2, [x0]\n+#else\n@@ -34,0 +34,1 @@\n+#endif\n@@ -41,0 +42,3 @@\n+#ifdef __ARM_FEATURE_ATOMICS\n+        ldaddal w1, w2, [x0]\n+#else\n@@ -46,0 +50,1 @@\n+#endif\n@@ -53,0 +58,3 @@\n+#ifdef __ARM_FEATURE_ATOMICS\n+        ldadd x1, x2, [x0]\n+#else\n@@ -58,0 +66,1 @@\n+#endif\n@@ -64,0 +73,3 @@\n+#ifdef __ARM_FEATURE_ATOMICS\n+        ldadd w1, w2, [x0]\n+#else\n@@ -69,0 +81,1 @@\n+#endif\n@@ -75,0 +88,3 @@\n+#ifdef __ARM_FEATURE_ATOMICS\n+        swpal   w1, w2, [x0]\n+#else\n@@ -79,0 +95,1 @@\n+#endif\n@@ -86,0 +103,3 @@\n+#ifdef __ARM_FEATURE_ATOMICS\n+        swpal   x1, x2, [x0]\n+#else\n@@ -90,0 +110,1 @@\n+#endif\n@@ -97,0 +118,4 @@\n+#ifdef __ARM_FEATURE_ATOMICS\n+        mov     x3, x1\n+        casalb  w3, w2, [x0]\n+#else\n@@ -105,2 +130,3 @@\n-1:      mov     w0, w3\n-        dmb     ish\n+#endif\n+1:      dmb     ish\n+        mov     w0, w3\n@@ -112,0 +138,4 @@\n+#ifdef __ARM_FEATURE_ATOMICS\n+        mov     x3, x1\n+        casal   w3, w2, [x0]\n+#else\n@@ -119,2 +149,3 @@\n-1:      mov     w0, w3\n-        dmb     ish\n+#endif\n+1:      dmb     ish\n+        mov     w0, w3\n@@ -126,0 +157,4 @@\n+#ifdef __ARM_FEATURE_ATOMICS\n+        mov     x3, x1\n+        casal   x3, x2, [x0]\n+#else\n@@ -133,2 +168,3 @@\n-1:      mov     x0, x3\n-        dmb     ish\n+#endif\n+1:      dmb     ish\n+        mov     x0, x3\n@@ -140,0 +176,4 @@\n+#ifdef __ARM_FEATURE_ATOMICS\n+        mov     x3, x1\n+        casl    w3, w2, [x0]\n+#else\n@@ -146,0 +186,1 @@\n+#endif\n@@ -152,0 +193,4 @@\n+#ifdef __ARM_FEATURE_ATOMICS\n+        mov     x3, x1\n+        casl    x3, x2, [x0]\n+#else\n@@ -158,0 +203,1 @@\n+#endif\n@@ -164,0 +210,4 @@\n+#ifdef __ARM_FEATURE_ATOMICS\n+        mov     x3, x1\n+        casal   w3, w2, [x0]\n+#else\n@@ -170,0 +220,1 @@\n+#endif\n@@ -176,0 +227,4 @@\n+#ifdef __ARM_FEATURE_ATOMICS\n+        mov     x3, x1\n+        casal   x3, x2, [x0]\n+#else\n@@ -182,0 +237,1 @@\n+#endif\n@@ -188,0 +244,4 @@\n+#ifdef __ARM_FEATURE_ATOMICS\n+        mov     x3, x1\n+        casb    w3, w2, [x0]\n+#else\n@@ -195,0 +255,1 @@\n+#endif\n@@ -201,0 +262,1 @@\n+#ifdef __ARM_FEATURE_ATOMICS\n@@ -202,0 +264,3 @@\n+        mov     x3, x1\n+        cas     w3, w2, [x0]\n+#else\n@@ -207,0 +272,1 @@\n+#endif\n@@ -213,0 +279,1 @@\n+#ifdef __ARM_FEATURE_ATOMICS\n@@ -214,0 +281,3 @@\n+        mov     x3, x1\n+        cas     x3, x2, [x0]\n+#else\n@@ -219,0 +289,1 @@\n+#endif\n","filename":"src\/hotspot\/os_cpu\/linux_aarch64\/atomic_linux_aarch64.S","additions":80,"deletions":9,"binary":false,"changes":89,"status":"modified"},{"patch":"@@ -1,169 +0,0 @@\n-\/\/ Copyright (c) 2021, 2022, Red Hat Inc. All rights reserved.\n-\/\/ DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-\/\/\n-\/\/ This code is free software; you can redistribute it and\/or modify it\n-\/\/ under the terms of the GNU General Public License version 2 only, as\n-\/\/ published by the Free Software Foundation.\n-\/\/\n-\/\/ This code is distributed in the hope that it will be useful, but WITHOUT\n-\/\/ ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-\/\/ FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-\/\/ version 2 for more details (a copy is included in the LICENSE file that\n-\/\/ accompanied this code).\n-\/\/\n-\/\/ You should have received a copy of the GNU General Public License version\n-\/\/ 2 along with this work; if not, write to the Free Software Foundation,\n-\/\/ Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-\/\/\n-\/\/ Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-\/\/ or visit www.oracle.com if you need additional information or have any\n-\/\/ questions.\n-\n-\n-\n-        .text\n-\n-        .globl aarch64_atomic_fetch_add_8_default_impl\n-        .align 5\n-aarch64_atomic_fetch_add_8_default_impl:\n-        prfm    pstl1strm, [x0]\n-0:      ldaddal x1, x2, [x0]\n-        dmb     ish\n-        mov     x0, x2\n-        ret\n-\n-        .globl aarch64_atomic_fetch_add_4_default_impl\n-        .align 5\n-aarch64_atomic_fetch_add_4_default_impl:\n-        prfm    pstl1strm, [x0]\n-0:      ldaddal w1, w2, [x0]\n-        dmb     ish\n-        mov     w0, w2\n-        ret\n-\n-        .global aarch64_atomic_fetch_add_8_relaxed_default_impl\n-        .align 5\n-aarch64_atomic_fetch_add_8_relaxed_default_impl:\n-        prfm    pstl1strm, [x0]\n-0:      ldadd   x1, x2, [x0]\n-        mov     x0, x2\n-        ret\n-\n-        .global aarch64_atomic_fetch_add_4_relaxed_default_impl\n-        .align 5\n-aarch64_atomic_fetch_add_4_relaxed_default_impl:\n-        .globl aarch64_atomic_xchg_4_default_impl\n-        .align 5\n-        prfm    pstl1strm, [x0]\n-0:      ldadd   w1, w2, [x0]\n-        mov     w0, w2\n-        ret\n-\n-aarch64_atomic_xchg_4_default_impl:\n-        prfm    pstl1strm, [x0]\n-0:      swpal   w1, w2, [x0]\n-        dmb     ish\n-        mov     w0, w2\n-        ret\n-\n-        .globl aarch64_atomic_xchg_8_default_impl\n-        .align 5\n-aarch64_atomic_xchg_8_default_impl:\n-        prfm    pstl1strm, [x0]\n-0:      swpal   x1, x2, [x0]\n-        dmb     ish\n-        mov     x0, x2\n-        ret\n-\n-        .globl aarch64_atomic_cmpxchg_1_default_impl\n-        .align 5\n-aarch64_atomic_cmpxchg_1_default_impl:\n-        prfm    pstl1strm, [x0]\n-0:      mov     x3, x1\n-        casalb  w3, w2, [x0]\n-        dmb     ish\n-        mov     w0, w3\n-        ret\n-\n-        .globl aarch64_atomic_cmpxchg_4_default_impl\n-        .align 5\n-aarch64_atomic_cmpxchg_4_default_impl:\n-        prfm    pstl1strm, [x0]\n-0:      mov     x3, x1\n-        casal   w3, w2, [x0]\n-        dmb     ish\n-        mov     w0, w3\n-        ret\n-\n-        .globl aarch64_atomic_cmpxchg_8_default_impl\n-        .align 5\n-aarch64_atomic_cmpxchg_8_default_impl:\n-        prfm    pstl1strm, [x0]\n-0:      mov     x3, x1\n-        casal   x3, x2, [x0]\n-        dmb     ish\n-        mov     x0, x3\n-        ret\n-\n-        .globl aarch64_atomic_cmpxchg_4_release_default_impl\n-        .align 5\n-aarch64_atomic_cmpxchg_4_release_default_impl:\n-        prfm    pstl1strm, [x0]\n-0:      mov     x3, x1\n-        casl    w3, w2, [x0]\n-        mov     w0, w3\n-        ret\n-\n-        .globl aarch64_atomic_cmpxchg_8_release_default_impl\n-        .align 5\n-aarch64_atomic_cmpxchg_8_release_default_impl:\n-        prfm    pstl1strm, [x0]\n-0:      mov     x3, x1\n-        casl    x3, x2, [x0]\n-        mov     x0, x3\n-        ret\n-\n-        .globl aarch64_atomic_cmpxchg_4_seq_cst_default_impl\n-        .align 5\n-aarch64_atomic_cmpxchg_4_seq_cst_default_impl:\n-        prfm    pstl1strm, [x0]\n-0:      mov     x3, x1\n-        casal   w3, w2, [x0]\n-        mov     w0, w3\n-        ret\n-\n-        .globl aarch64_atomic_cmpxchg_8_seq_cst_default_impl\n-        .align 5\n-aarch64_atomic_cmpxchg_8_seq_cst_default_impl:\n-        prfm    pstl1strm, [x0]\n-0:      mov     x3, x1\n-        casal   x3, x2, [x0]\n-        mov     x0, x3\n-        ret\n-\n-.globl aarch64_atomic_cmpxchg_1_relaxed_default_impl\n-        .align 5\n-aarch64_atomic_cmpxchg_1_relaxed_default_impl:\n-        prfm    pstl1strm, [x0]\n-0:      mov     x3, x1\n-        casb    w3, w2, [x0]\n-        mov     w0, w3\n-        ret\n-\n-        .globl aarch64_atomic_cmpxchg_4_relaxed_default_impl\n-        .align 5\n-aarch64_atomic_cmpxchg_4_relaxed_default_impl:\n-        prfm    pstl1strm, [x0]\n-0:      mov     x3, x1\n-        cas     w3, w2, [x0]\n-        mov     w0, w3\n-        ret\n-\n-        .globl aarch64_atomic_cmpxchg_8_relaxed_default_impl\n-        .align 5\n-aarch64_atomic_cmpxchg_8_relaxed_default_impl:\n-        prfm    pstl1strm, [x0]\n-0:      mov     x3, x1\n-        cas     x3, x2, [x0]\n-        mov     x0, x3\n-        ret\n","filename":"src\/hotspot\/os_cpu\/linux_aarch64\/atomic_linux_aarch64_lse.S","additions":0,"deletions":169,"binary":false,"changes":169,"status":"deleted"}]}