{"files":[{"patch":"@@ -16423,1 +16423,1 @@\n-instruct cmpFastLock(rFlagsReg cr, iRegP object, iRegP box, iRegPNoSp tmp, iRegPNoSp tmp2)\n+instruct cmpFastLock(rFlagsReg cr, iRegP object, iRegP box, iRegPNoSp tmp, iRegPNoSp tmp2, iRegPNoSp tmp3)\n@@ -16426,1 +16426,1 @@\n-  effect(TEMP tmp, TEMP tmp2);\n+  effect(TEMP tmp, TEMP tmp2, TEMP tmp3);\n@@ -16434,1 +16434,1 @@\n-    __ fast_lock($object$$Register, $box$$Register, $tmp$$Register, $tmp2$$Register);\n+    __ fast_lock($object$$Register, $box$$Register, $tmp$$Register, $tmp2$$Register, $tmp3$$Register);\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64.ad","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -49,1 +49,1 @@\n-                                  Register tmp2Reg) {\n+                                  Register tmp2Reg, Register tmp3Reg) {\n@@ -107,1 +107,1 @@\n-    lightweight_lock(oop, disp_hdr, tmp, rscratch2, no_count);\n+    lightweight_lock(oop, disp_hdr, tmp, tmp3Reg, no_count);\n","filename":"src\/hotspot\/cpu\/aarch64\/c2_MacroAssembler_aarch64.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-  void fast_lock(Register object, Register box, Register tmp, Register tmp2);\n+  void fast_lock(Register object, Register box, Register tmp, Register tmp2, Register tmp3);\n","filename":"src\/hotspot\/cpu\/aarch64\/c2_MacroAssembler_aarch64.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -753,0 +753,1 @@\n+    const Register tmp3 = c_rarg5;\n@@ -773,1 +774,1 @@\n-      lightweight_lock(obj_reg, tmp, tmp2, rscratch2, slow_case);\n+      lightweight_lock(obj_reg, tmp, tmp2, tmp3, slow_case);\n@@ -871,0 +872,1 @@\n+    const Register tmp_reg    = c_rarg4;  \/\/ Temporary used by lightweight_unlock\n@@ -904,1 +906,1 @@\n-      lightweight_unlock(obj_reg, header_reg, swap_reg, rscratch2, slow_case);\n+      lightweight_unlock(obj_reg, header_reg, swap_reg, tmp_reg, slow_case);\n","filename":"src\/hotspot\/cpu\/aarch64\/interp_masm_aarch64.cpp","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2842,0 +2842,4 @@\n+#ifdef ASSERT\n+    \/\/ Poison rscratch1 which is written on !UseLSE branch\n+    mov(rscratch1, 0x1f1f1f1f1f1f1f1f);\n+#endif\n","filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1763,0 +1763,1 @@\n+  const Register lock_tmp = r14;  \/\/ Temporary used by lightweight_lock\/unlock\n@@ -1816,1 +1817,1 @@\n-      __ lightweight_lock(obj_reg, swap_reg, tmp, rscratch2, slow_path_lock);\n+      __ lightweight_lock(obj_reg, swap_reg, tmp, lock_tmp, slow_path_lock);\n@@ -1957,1 +1958,1 @@\n-      __ lightweight_unlock(obj_reg, old_hdr, swap_reg, rscratch2, slow_path_unlock);\n+      __ lightweight_unlock(obj_reg, old_hdr, swap_reg, lock_tmp, slow_path_unlock);\n","filename":"src\/hotspot\/cpu\/aarch64\/sharedRuntime_aarch64.cpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"}]}