{"files":[{"patch":"@@ -194,1 +194,2 @@\n-      if (add2->outcnt() == 0 && phase->is_IterGVN()) {\n+      PhaseIterGVN* igvn = phase->is_IterGVN();\n+      if (add2->outcnt() == 0 && igvn) {\n@@ -196,1 +197,1 @@\n-        phase->is_IterGVN()->_worklist.push(add2);\n+        igvn->_worklist.push(add2);\n@@ -629,1 +630,2 @@\n-      if (add->outcnt() == 0 && phase->is_IterGVN()) {\n+      PhaseIterGVN* igvn = phase->is_IterGVN();\n+      if (add->outcnt() == 0 && igvn) {\n@@ -631,1 +633,1 @@\n-        phase->is_IterGVN()->_worklist.push((Node*)add);\n+        igvn->_worklist.push((Node*)add);\n","filename":"src\/hotspot\/share\/opto\/addnode.cpp","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -374,1 +374,1 @@\n-  PhaseIterGVN *is_IterGVN() { return (_iterGVN) ? (PhaseIterGVN*)this : NULL; }\n+  PhaseIterGVN* is_IterGVN() { return (_iterGVN) ? (PhaseIterGVN*)this : NULL; }\n@@ -377,4 +377,4 @@\n-  bool   hash_delete(Node *n)     { return _table.hash_delete(n); }\n-  void   hash_insert(Node *n)     { _table.hash_insert(n); }\n-  Node  *hash_find_insert(Node *n){ return _table.hash_find_insert(n); }\n-  Node  *hash_find(const Node *n) { return _table.hash_find(n); }\n+  bool   hash_delete(Node* n)     { return _table.hash_delete(n); }\n+  void   hash_insert(Node* n)     { _table.hash_insert(n); }\n+  Node*  hash_find_insert(Node* n){ return _table.hash_find_insert(n); }\n+  Node*  hash_find(const Node* n) { return _table.hash_find(n); }\n@@ -392,1 +392,1 @@\n-                               const Type* limit_type) const\n+                       const Type* limit_type) const\n","filename":"src\/hotspot\/share\/opto\/phaseX.hpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"}]}