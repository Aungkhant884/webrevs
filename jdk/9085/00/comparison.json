{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -410,1 +410,1 @@\n-    char* pszNameString = NULL; \/\/ certificate's friendly name\n+    wchar_t* pszNameString = NULL; \/\/ certificate's friendly name\n@@ -587,1 +587,1 @@\n-                            if ((cchNameString = CertGetNameString(pc,\n+                            if ((cchNameString = CertGetNameStringW(pc,\n@@ -592,1 +592,1 @@\n-                                pszNameString = new (env) char[cchNameString];\n+                                pszNameString = new (env) wchar_t[cchNameString];\n@@ -597,1 +597,1 @@\n-                                CertGetNameString(pc,\n+                                CertGetNameStringW(pc,\n@@ -624,1 +624,2 @@\n-                        PP(\"%s: %s\", pszNameString, pCertContext->pCertInfo->SubjectPublicKeyInfo.Algorithm.pszObjId);\n+                        PP(\"%S: %s\", pszNameString, pCertContext->pCertInfo->SubjectPublicKeyInfo.Algorithm.pszObjId);\n+                        jsize nameLen = (jsize)wcslen(pszNameString);\n@@ -629,1 +630,1 @@\n-                            jstring name = env->NewStringUTF(pszNameString);\n+                            jstring name = env->NewString(pszNameString, nameLen);\n@@ -649,1 +650,1 @@\n-                                    jstring name = env->NewStringUTF(pszNameString);\n+                                    jstring name = env->NewString(pszNameString, nameLen);\n@@ -666,1 +667,1 @@\n-                                    jstring name = env->NewStringUTF(pszNameString);\n+                                    jstring name = env->NewString(pszNameString, nameLen);\n@@ -1710,1 +1711,1 @@\n-    const char* pszCertAliasName = NULL;\n+    const wchar_t* pszCertAliasName = NULL;\n@@ -1716,1 +1717,1 @@\n-    char* pszNameString = NULL; \/\/ certificate's friendly name\n+    wchar_t* pszNameString = NULL; \/\/ certificate's friendly name\n@@ -1755,1 +1756,1 @@\n-        if ((cchNameString = ::CertGetNameString(pTBDCertContext,\n+        if ((cchNameString = ::CertGetNameStringW(pTBDCertContext,\n@@ -1758,1 +1759,1 @@\n-            pszNameString = new (env) char[cchNameString];\n+            pszNameString = new (env) wchar_t[cchNameString];\n@@ -1763,1 +1764,1 @@\n-            ::CertGetNameString(pTBDCertContext,\n+            ::CertGetNameStringW(pTBDCertContext,\n@@ -1768,1 +1769,1 @@\n-            if ((pszCertAliasName = env->GetStringUTFChars(jCertAliasName, NULL))\n+            if ((pszCertAliasName = env->GetStringChars(jCertAliasName, NULL))\n@@ -1772,1 +1773,1 @@\n-            if (strcmp(pszCertAliasName, pszNameString) == 0) {\n+            if (wcscmp(pszCertAliasName, pszNameString) == 0) {\n@@ -1800,1 +1801,1 @@\n-            env->ReleaseStringUTFChars(jCertAliasName, pszCertAliasName);\n+            env->ReleaseStringChars(jCertAliasName, pszCertAliasName);\n","filename":"src\/jdk.crypto.mscapi\/windows\/native\/libsunmscapi\/security.cpp","additions":18,"deletions":17,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -0,0 +1,71 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import sun.security.tools.keytool.CertAndKeyGen;\n+import sun.security.x509.X500Name;\n+\n+import java.security.KeyStore;\n+import java.security.cert.Certificate;\n+import jdk.test.lib.Asserts;\n+\n+\/**\n+ * @test\n+ * @bug 6522064\n+ * @library \/test\/lib\n+ * @requires os.family == \"windows\"\n+ * @modules java.base\/sun.security.tools.keytool\n+ *          java.base\/sun.security.x509\n+ * @summary Aliases from Microsoft CryptoAPI has bad character encoding\n+ *\/\n+\n+public class NonAsciiAlias {\n+    public static void main(String[] args) throws Exception {\n+        KeyStore ks = KeyStore.getInstance(\"Windows-MY\");\n+        String alias = \"\\u58c6\\u94a56522064\";\n+        try {\n+            ks.load(null, null);\n+            CertAndKeyGen cag = new CertAndKeyGen(\"RSA\", \"SHA256withRSA\");\n+            cag.generate(2048);\n+            ks.setKeyEntry(alias, cag.getPrivateKey(), null, new Certificate[]{\n+                    cag.getSelfCertificate(new X500Name(\"CN=Me\"), 1000)\n+            });\n+            \/\/ Confirms the alias is there\n+            Asserts.assertTrue(ks.containsAlias(alias));\n+            ks.store(null, null);\n+            ks.load(null, null);\n+            \/\/ Confirms the alias is there after reload\n+            Asserts.assertTrue(ks.containsAlias(alias));\n+            ks.deleteEntry(alias);\n+            \/\/ Confirms the alias is removed\n+            Asserts.assertFalse(ks.containsAlias(alias));\n+            ks.store(null, null);\n+            ks.load(null, null);\n+            \/\/ Confirms the alias is removed after reload\n+            Asserts.assertFalse(ks.containsAlias(alias));\n+        } finally {\n+            ks.deleteEntry(alias);\n+            \/\/ in case the correct alias is not found, clean up a wrong one\n+            ks.deleteEntry(\"??6522064\");\n+        }\n+    }\n+}\n","filename":"test\/jdk\/sun\/security\/mscapi\/NonAsciiAlias.java","additions":71,"deletions":0,"binary":false,"changes":71,"status":"added"}]}