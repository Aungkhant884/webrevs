{"files":[{"patch":"@@ -166,1 +166,1 @@\n-    switch(n->Opcode()) {\n+    switch (n->Opcode()) {\n@@ -697,2 +697,1 @@\n-      assert(_igvn->type(n)->make_ptr() != NULL,\n-             \"constrain must match when firstly add to cg\");\n+      assert(_igvn->type(n)->make_ptr() != NULL, \"Unexpected node type\");\n@@ -705,2 +704,1 @@\n-      assert(n->as_Phi()->type()->make_ptr() != NULL,\n-             \"constrain must match when firstly add to cg\");\n+      assert(n->as_Phi()->type()->make_ptr() != NULL, \"Unexpected node type\");\n@@ -725,2 +723,1 @@\n-             n->in(0)->as_Call()->returns_pointer(),\n-             \"constrain must match when firstly add to cg\");\n+             n->in(0)->as_Call()->returns_pointer(), \"Unexpected node type\");\n@@ -733,1 +730,1 @@\n-             \"constrain must match when firstly add to cg\");\n+             \"Unexpected node type\");\n@@ -742,2 +739,1 @@\n-      assert(_igvn->type(n)->make_ptr() != NULL,\n-             \"constrain must match when firstly add to cg\");\n+      assert(_igvn->type(n)->make_ptr() != NULL, \"Unexpected node type\");\n@@ -876,2 +872,2 @@\n-    n->dump(1);\n-    assert(false, \"not unsafe\");\n+  n->dump(1);\n+  assert(false, \"not unsafe\");\n","filename":"src\/hotspot\/share\/opto\/escape.cpp","additions":8,"deletions":12,"binary":false,"changes":20,"status":"modified"}]}