{"files":[{"patch":"@@ -168,0 +168,1 @@\n+    private final boolean sourceLauncher;\n@@ -217,0 +218,1 @@\n+        sourceLauncher = options.isSet(\"sourceLauncher\");\n@@ -1344,1 +1346,1 @@\n-        String incubatingModules = result.stream()\n+        String incubatingModules = filterAlreadyWarnedIncubatorModules(result.stream()\n@@ -1346,1 +1348,1 @@\n-                .map(msym -> msym.name.toString())\n+                .map(msym -> msym.name.toString()))\n@@ -1362,0 +1364,9 @@\n+        private Stream<String> filterAlreadyWarnedIncubatorModules(Stream<String> incubatingModules) {\n+            if (!sourceLauncher) return incubatingModules;\n+            Set<String> bootModules = ModuleLayer.boot()\n+                                                 .modules()\n+                                                 .stream()\n+                                                 .map(Module::getName)\n+                                                 .collect(Collectors.toSet());\n+            return incubatingModules.filter(module -> !bootModules.contains(module));\n+        }\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Modules.java","additions":13,"deletions":2,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -371,0 +371,1 @@\n+        javacOpts.add(\"-XDsourceLauncher\");\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/launcher\/Main.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ *          jdk.jdeps\/com.sun.tools.classfile\n@@ -36,0 +37,7 @@\n+import com.sun.tools.classfile.Attribute;\n+import com.sun.tools.classfile.Attributes;\n+import com.sun.tools.classfile.ClassFile;\n+import com.sun.tools.classfile.ClassWriter;\n+import com.sun.tools.classfile.ConstantPool;\n+import com.sun.tools.classfile.ConstantPool.CPInfo;\n+import com.sun.tools.classfile.ModuleResolution_attribute;\n@@ -39,0 +47,1 @@\n+import java.io.OutputStream;\n@@ -48,0 +57,2 @@\n+import java.util.HashMap;\n+import java.util.Map;\n@@ -658,0 +669,77 @@\n+    @Test\n+    public void testNoDuplicateIncubatorWarning(Path base) throws Exception {\n+        Path module = base.resolve(\"lib\");\n+        Path moduleSrc = module.resolve(\"src\");\n+        Path moduleClasses = module.resolve(\"classes\");\n+        Files.createDirectories(moduleClasses);\n+        tb.cleanDirectory(moduleClasses);\n+        tb.writeJavaFiles(moduleSrc, \"module test {}\");\n+        new JavacTask(tb)\n+                .outdir(moduleClasses)\n+                .files(tb.findJavaFiles(moduleSrc))\n+                .run()\n+                .writeAll();\n+        markModuleAsIncubator(moduleClasses.resolve(\"module-info.class\"));\n+        tb.writeJavaFiles(base, \"public class Main { public static void main(String... args) {}}\");\n+        String log = new JavaTask(tb)\n+                .vmOptions(\"--module-path\", moduleClasses.toString(),\n+                           \"--add-modules\", \"test\")\n+                .className(base.resolve(\"Main.java\").toString())\n+                .run(Task.Expect.SUCCESS)\n+                .writeAll()\n+                .getOutput(Task.OutputKind.STDERR);\n+\n+        int numberOfWarnings = log.split(\"WARNING\").length - 1;\n+\n+        if (log.contains(\"warning:\") || numberOfWarnings != 1) {\n+            error(\"Unexpected warning in error output: \" + log);\n+        }\n+\n+        List<String> compileLog = new JavacTask(tb)\n+                .options(\"--module-path\", moduleClasses.toString(),\n+                         \"--add-modules\", \"test\",\n+                         \"-XDrawDiagnostics\",\n+                         \"-XDsourceLauncher\",\n+                         \"-XDshould-stop.at=FLOW\")\n+                .files(base.resolve(\"Main.java\").toString())\n+                .run(Task.Expect.SUCCESS)\n+                .writeAll()\n+                .getOutputLines(Task.OutputKind.DIRECT);\n+\n+        List<String> expectedOutput = List.of(\n+                \"- compiler.warn.incubating.modules: test\",\n+                \"1 warning\"\n+        );\n+\n+        if (!expectedOutput.equals(compileLog)) {\n+            error(\"Unexpected options : \" + compileLog);\n+        }\n+    }\n+        \/\/where:\n+        private static void markModuleAsIncubator(Path moduleInfoFile) throws Exception {\n+            ClassFile cf = ClassFile.read(moduleInfoFile);\n+            List<CPInfo> newPool = new ArrayList<>();\n+            newPool.add(null);\n+            cf.constant_pool.entries().forEach(newPool::add);\n+            int moduleResolutionIndex = newPool.size();\n+            newPool.add(new ConstantPool.CONSTANT_Utf8_info(Attribute.ModuleResolution));\n+            Map<String, Attribute> newAttributes = new HashMap<>(cf.attributes.map);\n+            newAttributes.put(Attribute.ModuleResolution,\n+                              new ModuleResolution_attribute(moduleResolutionIndex,\n+                                                             ModuleResolution_attribute.WARN_INCUBATING));\n+            ClassFile newClassFile = new ClassFile(cf.magic,\n+                                                   cf.minor_version,\n+                                                   cf.major_version,\n+                                                   new ConstantPool(newPool.toArray(new CPInfo[0])),\n+                                                   cf.access_flags,\n+                                                   cf.this_class,\n+                                                   cf.super_class,\n+                                                   cf.interfaces,\n+                                                   cf.fields,\n+                                                   cf.methods,\n+                                                   new Attributes(newAttributes));\n+            try (OutputStream out = Files.newOutputStream(moduleInfoFile)) {\n+                new ClassWriter().write(newClassFile, out);\n+            }\n+        }\n+\n","filename":"test\/langtools\/tools\/javac\/launcher\/SourceLauncherTest.java","additions":88,"deletions":0,"binary":false,"changes":88,"status":"modified"}]}