{"files":[{"patch":"@@ -313,1 +313,3 @@\n-    uintptr_t dest = (uintptr_t)target;\n+    \/\/ Give the inner reloc a chance to modify the target.\n+    address adjusted_target = target;\n+    instructions = (*inner)(insn_addr, adjusted_target);\n@@ -315,1 +317,1 @@\n-    uintptr_t adr_page = (uintptr_t)target >> 12;\n+    uintptr_t adr_page = (uintptr_t)adjusted_target >> 12;\n@@ -317,4 +319,0 @@\n-    instructions = (*inner)(insn_addr, target);\n-    \/\/ Now we extract the lower 21 bits of the signed offset field for\n-    \/\/ the ADRP.\n-    offset = offset << (64-21) >> (64-21);\n@@ -343,1 +341,1 @@\n-    uintptr_t dest = (uintptr_t)target;\n+    uintptr_t dest = uintptr_t(target);\n@@ -345,0 +343,2 @@\n+    dest = (dest & 0xffffffffULL) | (uintptr_t(insn_addr) & 0xffff00000000ULL);\n+    target = address(dest);\n@@ -460,1 +460,1 @@\n-    dest = (dest & 0xffffffff) |\n+    dest = (dest & 0xffff0000ffffffff) |\n","filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -6952,16 +6952,0 @@\n-#ifdef ASSERT\n-    {\n-      \/\/ Stress relocs for adrp() by trying to reach a page beyond\n-      \/\/ the range of a simple ADRP instruction.\n-      ExternalAddress longWayAway(__ pc() - (1ll << 34));\n-      if (! __ is_valid_AArch64_address(longWayAway.target())) {\n-        longWayAway = ExternalAddress(__ pc() + (1ll << 34));\n-      }\n-      if (__ is_valid_AArch64_address(longWayAway.target())) {\n-        uint64_t offset;\n-        __ adrp(rscratch1, longWayAway, offset);\n-        __ add(rscratch1, rscratch1, offset);\n-      }\n-    }\n-#endif \/\/ ASSERT\n-\n","filename":"src\/hotspot\/cpu\/aarch64\/stubGenerator_aarch64.cpp","additions":0,"deletions":16,"binary":false,"changes":16,"status":"modified"}]}