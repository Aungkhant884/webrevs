{"files":[{"patch":"@@ -510,1 +510,1 @@\n-  cpu_limit->set_value(result, OSCONTAINER_CACHE_TIMEOUT);\n+  cpu_limit->set_value(result, OSContainer::oscontainer_cache_timeout());\n@@ -555,1 +555,1 @@\n-  memory_limit->set_value(mem_limit, OSCONTAINER_CACHE_TIMEOUT);\n+  memory_limit->set_value(mem_limit, OSContainer::oscontainer_cache_timeout());\n","filename":"src\/hotspot\/os\/linux\/cgroupSubsystem_linux.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -80,1 +80,7 @@\n-          \"Write map file for Linux perf tool at exit\")\n+          \"Write map file for Linux perf tool at exit\")                 \\\n+                                                                        \\\n+  product(uint, OsCachedMetricsRefreshRate, 50, DIAGNOSTIC,             \\\n+          \"Specify the refresh rate of the OS cached metrics to avoid \" \\\n+          \"re-reading container settings too often. [times per second]\" \\\n+          \"The default equals to 20ms timeout between re-reads.\")       \\\n+          range(1, NANOSECS_PER_SEC)                                    \\\n","filename":"src\/hotspot\/os\/linux\/globals_linux.hpp","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -65,0 +65,4 @@\n+julong OSContainer::oscontainer_cache_timeout() {\n+  return NANOSECS_PER_SEC \/ OsCachedMetricsRefreshRate;\n+}\n+\n","filename":"src\/hotspot\/os\/linux\/osContainer_linux.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -35,3 +35,0 @@\n-\/\/ 20ms timeout between re-reads of memory limit and _active_processor_count.\n-#define OSCONTAINER_CACHE_TIMEOUT (NANOSECS_PER_SEC\/50)\n-\n@@ -53,0 +50,2 @@\n+  static julong oscontainer_cache_timeout();\n+\n","filename":"src\/hotspot\/os\/linux\/osContainer_linux.hpp","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"}]}