{"files":[{"patch":"@@ -50,0 +50,26 @@\n+ * <p>{@code SuppressWarnings} annotations are applicable in all\n+ * declaration contexts.\n+ *\n+ * Java compilers must recognize all the kinds of warnings defined in\n+ * the <cite>Java Language Specification<\/cite> (JLS section {@jls\n+ * 9.6.4.5}) which include:\n+ *\n+ * <ul>\n+ * <li> Unchecked warnings specified by the string {@code \"unchecked\"}.\n+ * <li> Deprecation warnings specified by the string {@code \"deprecation\"}.\n+ * <li> Removal warnings specified by the string {@code \"removal\"}.\n+ * <li> Preview warnings specified by the string {@code \"preview\"}.\n+ * <\/ul>\n+ *\n+ * Whether or not a Java compiler recognizes other suppression strings\n+ * is a quality of implementation concern.\n+ * Compiler vendors should document the\n+ * additional warning names they support.\n+ * Vendors are encouraged to cooperate to ensure\n+ * that the same names work across multiple compilers.\n+ *\n+ * @implNote\n+ * In addition to the mandated suppression strings, the {@code javac}\n+ * reference implementation recognizes compilation-related warning\n+ * names documented in its {@code --help-lint} output.\n+ *\n@@ -58,1 +84,1 @@\n-@Target({TYPE, FIELD, METHOD, PARAMETER, CONSTRUCTOR, LOCAL_VARIABLE, PACKAGE, MODULE})\n+\/\/ Implicitly target all declaration contexts by omitting a @Target annotation\n@@ -69,6 +95,0 @@\n-     *\n-     * <p> The string {@code \"unchecked\"} is used to suppress\n-     * unchecked warnings. Compiler vendors should document the\n-     * additional warning names they support in conjunction with this\n-     * annotation type. They are encouraged to cooperate to ensure\n-     * that the same names work across multiple compilers.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/SuppressWarnings.java","additions":27,"deletions":7,"binary":false,"changes":34,"status":"modified"}]}