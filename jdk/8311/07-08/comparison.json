{"files":[{"patch":"@@ -27,3 +27,2 @@\n- * @summary Verify the AbstractLdapNamingEnumeration Cleaner doesn't keep the\n- *          enumeration reachable\n- * @modules java.naming\/com.sun.jndi.ldap\n+ * @summary Verify the AbstractLdapNamingEnumeration Cleaner performs cleanup correctly\n+ * @modules java.naming\/com.sun.jndi.ldap:+open\n@@ -44,0 +43,1 @@\n+import java.lang.reflect.Field;\n@@ -52,0 +52,1 @@\n+import jdk.test.lib.util.ForceGC;\n@@ -135,0 +136,5 @@\n+            \/\/ fetch enumCount from homeCtx, from EnumCtx, from results\n+            Object enumCtx = getField(results.getClass().getSuperclass(), \"enumCtx\", results);\n+            Object homeCtx = getField(enumCtx.getClass(), \"homeCtx\", enumCtx);\n+            int enumCountBefore = (Integer) getField(homeCtx.getClass(), \"enumCount\", homeCtx);\n+\n@@ -137,5 +143,1 @@\n-            \/\/ Run GC to run the Cleaner and collect 'results'\n-            for (int i = 0; i < 100; i++) {\n-                System.gc();\n-                Thread.sleep(1);\n-            }\n+\n@@ -143,1 +145,2 @@\n-            if (whm.size() > 0) {\n+            ForceGC gc = new ForceGC();\n+            if (!gc.await(() -> whm.size() == 0)) {\n@@ -147,0 +150,7 @@\n+            \/\/ The enum count should have been decremented\n+            int enumCountAfter = (Integer) getField(homeCtx.getClass(), \"enumCount\", homeCtx);\n+            int expected = enumCountBefore - 1;\n+            if (enumCountAfter != expected) {\n+                throw new RuntimeException(\"enumCount was not decremented. Expected: \" +\n+                        expected + \", Got:\" + enumCountAfter);\n+            }\n@@ -152,0 +162,12 @@\n+    \/**\n+     * Get an object from a named field.\n+     *\/\n+    static Object getField(Class<?> clazz, String fieldName, Object instance) {\n+        try {\n+            Field field = clazz.getDeclaredField(fieldName);\n+            field.setAccessible(true);\n+            return field.get(instance);\n+        } catch (NoSuchFieldException | IllegalAccessException ex) {\n+            throw new RuntimeException(\"field unknown or not accessible\", ex);\n+        }\n+    }\n","filename":"test\/jdk\/com\/sun\/jndi\/ldap\/CleanerTests\/LdapEnumeration.java","additions":31,"deletions":9,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -1,35 +1,2 @@\n-#\n-# Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-################################################################################\n-# Capture file for AddNewEntry.java\n-#\n-# NOTE: This hexadecimal dump of LDAP protocol messages was generated by\n-#       running the AddNewEntry application program against a real LDAP\n-#       server and setting the JNDI\/LDAP environment property:\n-#       com.sun.jndi.ldap.trace.ber to activate LDAP message tracing.\n-#\n-################################################################################\n-\n-\n-# LDAP BindRequest\n+\n+-> sc11152338.us.oracle.com:389\n@@ -42,1 +9,1 @@\n-# LDAP BindResponse\n+<- sc11152338.us.oracle.com:389\n@@ -47,1 +14,1 @@\n-# LDAP AddRequest\n+-> sc11152338.us.oracle.com:389\n@@ -74,1 +41,1 @@\n-# LDAP AddResponse\n+<- sc11152338.us.oracle.com:389\n@@ -79,1 +46,1 @@\n-# LDAP SearchRequest\n+-> sc11152338.us.oracle.com:389\n@@ -91,1 +58,1 @@\n-# LDAP SearchResultEntry\n+<- sc11152338.us.oracle.com:389\n@@ -117,1 +84,1 @@\n-# LDAP SearchResultDone\n+<- sc11152338.us.oracle.com:389\n@@ -122,1 +89,1 @@\n-# LDAP DeleteRequest\n+-> sc11152338.us.oracle.com:389\n@@ -132,1 +99,1 @@\n-# LDAP DeleteResponse\n+<- sc11152338.us.oracle.com:389\n@@ -136,0 +103,7 @@\n+\n+-> sc11152338.us.oracle.com:389\n+\n+0000: 30 22 02 01 05 42 00 A0   1B 30 19 04 17 32 2E 31  0\"...B...0...2.1\n+0010: 36 2E 38 34 30 2E 31 2E   31 31 33 37 33 30 2E 33  6.840.1.113730.3\n+0020: 2E 34 2E 32                                        .4.2\n+\n","filename":"test\/jdk\/com\/sun\/jndi\/ldap\/CleanerTests\/LdapEnumeration.ldap","additions":17,"deletions":43,"binary":false,"changes":60,"status":"modified"}]}