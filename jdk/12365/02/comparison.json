{"files":[{"patch":"@@ -946,4 +946,10 @@\n-# XML Signatures that violate any of these constraints will fail. The\n-# mode is enforced by default. The mode can be disabled by setting the\n-# property \"org.jcp.xml.dsig.secureValidation\" to Boolean.FALSE with the\n-# javax.xml.crypto.XMLCryptoContext.setProperty() method.\n+# XML Signatures that violate any of these constraints will fail.\n+# The mode can be enabled or disabled by setting the property\n+# \"org.jcp.xml.dsig.secureValidation\" to Boolean.TRUE or Boolean.FALSE with\n+# the javax.xml.crypto.XMLCryptoContext.setProperty() method, or by setting\n+# the system property \"org.jcp.xml.dsig.secureValidation\" to \"true\" or\n+# \"false\". Any other value for the system property is also treated as \"false\".\n+# If the system property is set, it supersedes the XMLCryptoContext property\n+# value.\n+#\n+# The secure validation mode is enabled by default.\n","filename":"src\/java.base\/share\/conf\/security\/java.security","additions":10,"deletions":4,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -61,0 +61,6 @@\n+ * The mode can be disabled by setting the property to {@code Boolean.FALSE}.\n+ * The mode can also be enabled or disabled by setting the\n+ * {@systemProperty org.jcp.xml.dsig.secureValidation} system property to\n+ * \"true\" or \"false\". Any other value for the system property is also treated\n+ * as \"false\". If the system property is set, it supersedes the\n+ * {@code DOMValidateContext} property value.\n","filename":"src\/java.xml.crypto\/share\/classes\/javax\/xml\/crypto\/dsig\/dom\/DOMValidateContext.java","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -24,1 +24,1 @@\n- * Copyright (c) 2005, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,0 +31,2 @@\n+import java.security.AccessController;\n+import java.security.PrivilegedAction;\n@@ -42,0 +44,15 @@\n+    private static final com.sun.org.slf4j.internal.Logger LOG =\n+        com.sun.org.slf4j.internal.LoggerFactory.getLogger(Utils.class);\n+    private static final String SECVAL_PROP_NAME =\n+        \"org.jcp.xml.dsig.secureValidation\";\n+    private static final boolean SECVAL_SYSPROP_SET;\n+    private static final boolean SECVAL_SYSPROP;\n+    static {\n+        String sysProp = privilegedGetProperty(SECVAL_PROP_NAME);\n+        SECVAL_SYSPROP_SET = sysProp != null;\n+        SECVAL_SYSPROP = Boolean.parseBoolean(sysProp);\n+        if (SECVAL_SYSPROP_SET && !SECVAL_SYSPROP) {\n+            LOG.warn(\"Secure validation mode disabled\");\n+        }\n+    }\n+\n@@ -111,0 +128,10 @@\n+    @SuppressWarnings(\"removal\")\n+    private static String privilegedGetProperty(String theProp) {\n+        if (System.getSecurityManager() == null) {\n+            return System.getProperty(theProp);\n+        } else {\n+            return AccessController.doPrivileged(\n+                 (PrivilegedAction<String>) () -> System.getProperty(theProp));\n+        }\n+    }\n+\n@@ -112,0 +139,4 @@\n+        \/\/ If set, system property supersedes XMLCryptoContext property\n+        if (SECVAL_SYSPROP_SET) {\n+            return SECVAL_SYSPROP;\n+        }\n@@ -115,1 +146,1 @@\n-        return getBoolean(xc, \"org.jcp.xml.dsig.secureValidation\");\n+        return getBoolean(xc, SECVAL_PROP_NAME);\n","filename":"src\/java.xml.crypto\/share\/classes\/org\/jcp\/xml\/dsig\/internal\/dom\/Utils.java","additions":33,"deletions":2,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -0,0 +1,102 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test\n+ * @bug 8301260\n+ * @summary Check that secureValidation system property works correctly\n+ * @library \/test\/lib\n+ * @run main\/othervm -Dorg.jcp.xml.dsig.secureValidation=true SecureValidationSystemProperty\n+ *\/\n+\n+\/**\n+ * @test\n+ * @bug 8301260\n+ * @summary Check that secureValidation system property works correctly\n+ * @library \/test\/lib\n+ * @run main\/othervm -Dorg.jcp.xml.dsig.secureValidation=false SecureValidationSystemProperty\n+ *\/\n+\n+import java.io.File;\n+import javax.xml.crypto.dsig.XMLSignatureException;\n+import javax.xml.parsers.DocumentBuilderFactory;\n+import javax.xml.parsers.DocumentBuilder;\n+import org.w3c.dom.Document;\n+\n+import jdk.test.lib.security.SecurityUtils;\n+import jdk.test.lib.security.XMLUtils;\n+import static jdk.test.lib.security.XMLUtils.Validator;\n+\n+public class SecureValidationSystemProperty {\n+\n+    private final static String DIR = System.getProperty(\"test.src\", \".\");\n+    private final static String DATA_DIR =\n+        DIR + System.getProperty(\"file.separator\") + \"data\";\n+\n+    public static void main(String[] args) throws Exception{\n+        \/\/ Re-enable sha1 algs. We just want to make sure DSA keys less than\n+        \/\/ 1024 bits are rejected correctly.\n+        SecurityUtils.removeAlgsFromDSigPolicy(\"sha1\");\n+\n+        String prop = System.getProperty(\"org.jcp.xml.dsig.secureValidation\");\n+        if (prop == null) {\n+            throw new Exception(\"Secure validation system property not set\");\n+        }\n+        boolean isSet = Boolean.parseBoolean(prop);\n+\n+        DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\n+        dbf.setNamespaceAware(true);\n+        Document doc = dbf.newDocumentBuilder()\n+            .parse(new File(DATA_DIR, \"signature-enveloped-dsa-512.xml\"));\n+        Validator validator = XMLUtils.validator();\n+\n+        \/\/ try again and make sure system property supersedes\n+        \/\/ XMLContext property\n+        validator.secureValidation(!isSet);\n+        validate(validator, doc, isSet);\n+    }\n+\n+    private static void validate(Validator validator, Document doc,\n+            boolean isSet) throws Exception {\n+        try {\n+            validator.validate(doc);\n+            if (isSet) {\n+                throw new Exception(\"signature expected to be rejected \" +\n+                    \"because it was signed with a 512-bit DSA key which is \" +\n+                    \"restricted\");\n+            }\n+        } catch (XMLSignatureException e) {\n+            if (!isSet) {\n+                throw new Exception(\"signature not expected to be rejected \" +\n+                    \"because secure validation mode is not enabled\");\n+            } else {\n+                Throwable cause = e.getCause();\n+                if (cause == null || !cause.getMessage().equals(\n+                        \"DSA keys less than 1024 bits are forbidden when \" +\n+                        \"secure validation is enabled\")) {\n+                    throw new Exception(\"signature rejected for wrong reason\", e);\n+                }\n+            }\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/xml\/crypto\/dsig\/SecureValidationSystemProperty.java","additions":102,"deletions":0,"binary":false,"changes":102,"status":"added"},{"patch":"@@ -0,0 +1,4 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><Envelope xmlns=\"http:\/\/example.org\/envelope\"><Signature xmlns=\"http:\/\/www.w3.org\/2000\/09\/xmldsig#\"><SignedInfo><CanonicalizationMethod Algorithm=\"http:\/\/www.w3.org\/TR\/2001\/REC-xml-c14n-20010315\"\/><SignatureMethod Algorithm=\"http:\/\/www.w3.org\/2000\/09\/xmldsig#dsa-sha1\"\/><Reference URI=\"\"><Transforms><Transform Algorithm=\"http:\/\/www.w3.org\/2000\/09\/xmldsig#enveloped-signature\"\/><\/Transforms><DigestMethod Algorithm=\"http:\/\/www.w3.org\/2000\/09\/xmldsig#sha1\"\/><DigestValue>l73jZE8SFKG5at7i5Yj+q2aNIzU=<\/DigestValue><\/Reference><\/SignedInfo><SignatureValue>RJiGe6of7CxloaPR9yq6Hw5r+aElz72MAVAfKBgpqnQaNFnDp8dNiQ==<\/SignatureValue><KeyInfo><KeyValue><DSAKeyValue><P>\/KaCzo4Syrom78z3EQ5SbbB4sF7ey80etKII864WF64B81uRpH5t9jQTxeEu0ImbzRMqzVDZkVG9\n+xD7nN1kuFw==<\/P><Q>li7dzDacuo67Jg7mtqEm2TRuOMU=<\/Q><G>Z4Rxsnqc9E7pGknFFH2xqaryRPBaQ01khpMdLRQnG541Awtx\/XPaF5Bpsy4pNWMOHCBiNU0Nogps\n+QW5QvnlMpA==<\/G><Y>nBZMgkVdGHADOfd+XQ4x9cirI5pZg1Ly0cQDLgrXpKn4CP8MJwL9HUnVJ1k7OpXdzOyzJSY75T3u\n+vwu1XEEGHg==<\/Y><\/DSAKeyValue><\/KeyValue><\/KeyInfo><\/Signature><\/Envelope>\n","filename":"test\/jdk\/javax\/xml\/crypto\/dsig\/data\/signature-enveloped-dsa-512.xml","additions":4,"deletions":0,"binary":false,"changes":4,"status":"added"}]}