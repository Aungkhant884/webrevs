{"files":[{"patch":"@@ -3428,0 +3428,5 @@\n+  if (!_head->is_Loop()) {\n+    \/\/ Head could be a region with a NeverBranch that was added in beautify loops but the region was not\n+    \/\/ yet transformed into a LoopNode. Bail out and wait until beautify loops turns it into a Loop node.\n+    return false;\n+  }\n","filename":"src\/hotspot\/share\/opto\/loopTransform.cpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -0,0 +1,82 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @requires vm.compiler2.enabled\n+ * @bug 8279837\n+ * @summary Tests infinite loop with region head in iteration split.\n+ * @run main\/othervm -Xcomp -XX:-TieredCompilation\n+ *      -XX:CompileCommand=compileonly,compiler.loopopts.TestIterationSplitWithRegionHead::test\n+ *      -XX:CompileCommand=dontinline,compiler.loopopts.TestIterationSplitWithRegionHead::*\n+ *      compiler.loopopts.TestIterationSplitWithRegionHead\n+ *\/\n+\n+package compiler.loopopts;\n+\n+public class TestIterationSplitWithRegionHead {\n+\n+    static boolean flagFalse = false;\n+\n+    public static void main(String[] args) {\n+        test();\n+    }\n+\n+    public static void test() {\n+        \/\/ 1) The loop tree is built. We find that nested loop N2 is an infinite loop and add a NeverBranch\n+        \/\/ to the inner loop to make it reachable. But the current loop tree does not have N2, yet. The\n+        \/\/ resulting loop tree is:\n+        \/\/\n+        \/\/   Loop: N0\/N0  has_call has_sfpt\n+        \/\/     Loop: N77\/N121  has_call \/\/ N1 outer\n+        \/\/       Loop: N77\/N111  has_call sfpts={ 111 97 } \/\/ N1 inner\n+        \/\/\n+        \/\/ 2) beautify_loops() finds that the outer loop head of N1 is shared and thus adds a new region\n+        \/\/ in merge_many_backedges(). As a result, the loop tree is built again. This time, the NeverBranch\n+        \/\/ in the inner loop of N2 allows that a loop tree can be built for it:\n+        \/\/\n+        \/\/   Loop: N0\/N0  has_call has_sfpt\n+        \/\/     Loop: N216\/N213  limit_check profile_predicated predicated has_call sfpts={ 111 97 } \/\/ N1 shared loop head\n+        \/\/     Loop: N196\/N201  sfpts={ 201 } \/\/ N2 inner loop now discovered with the new NeverBranch\n+        \/\/\n+        \/\/ However, a LoopNode is only added by beautify_loops() which won't be called until the next iteration of loop opts.\n+        \/\/ This means that we have a Region node (N196) as head in the loop tree which cannot be handled by iteration_split_impl()\n+        \/\/ resulting in an assertion failure.\n+\n+        \/\/ Nested loop N1\n+        while (flagFalse) {\n+            while (dontInlineFalse()) {\n+            }\n+        }\n+        dontInlineFalse();\n+\n+        \/\/ Nested loop N2\n+        while (flagFalse) {\n+            while (true) ;  \/\/ Detected as infinite inner loop by C2 -> NeverBranch added\n+        }\n+    }\n+\n+    public static boolean dontInlineFalse() {\n+        return false;\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/TestIterationSplitWithRegionHead.java","additions":82,"deletions":0,"binary":false,"changes":82,"status":"added"}]}