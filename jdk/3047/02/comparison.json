{"files":[{"patch":"@@ -181,1 +181,1 @@\n-    uint32_t n = CompressedOops::narrow_oop_value((oop)o);\n+    uint32_t n = CompressedOops::narrow_oop_value(cast_to_oop(o));\n","filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -61,1 +61,1 @@\n-          CompressedOops::encode((oop)x) :\n+          CompressedOops::encode(cast_to_oop(x)) :\n","filename":"src\/hotspot\/cpu\/ppc\/relocInfo_ppc.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -300,1 +300,1 @@\n-        *oop_result = (oop) (void*) ijava_state()->oop_tmp;\n+        *oop_result = cast_to_oop((void*) ijava_state()->oop_tmp);\n","filename":"src\/hotspot\/cpu\/s390\/frame_s390.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -432,1 +432,1 @@\n-    MacroAssembler::patch_load_narrow_oop(loc, (oop) (void*) x);\n+    MacroAssembler::patch_load_narrow_oop(loc, cast_to_oop((void*) x));\n@@ -444,1 +444,1 @@\n-    MacroAssembler::patch_compare_immediate_narrow_oop(loc, (oop) (void*) x);\n+    MacroAssembler::patch_compare_immediate_narrow_oop(loc, cast_to_oop((void*) x));\n","filename":"src\/hotspot\/cpu\/s390\/nativeInst_s390.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -55,1 +55,1 @@\n-      uint32_t encoded = CompressedOops::narrow_oop_value((oop)x);\n+      uint32_t encoded = CompressedOops::narrow_oop_value(cast_to_oop(x));\n","filename":"src\/hotspot\/cpu\/x86\/relocInfo_x86.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -811,1 +811,1 @@\n-      object = (oop) (void*)locals[0];\n+      object = cast_to_oop((void*)locals[0]);\n","filename":"src\/hotspot\/cpu\/zero\/zeroInterpreter_zero.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1476,1 +1476,1 @@\n-  java_class->obj_field_put(_signers_offset, (oop)signers);\n+  java_class->obj_field_put(_signers_offset, signers);\n","filename":"src\/hotspot\/share\/classfile\/javaClasses.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-  string->obj_field_put(_value_offset, (oop)buffer);\n+  string->obj_field_put(_value_offset, buffer);\n","filename":"src\/hotspot\/share\/classfile\/javaClasses.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -489,1 +489,1 @@\n-    bool is_method() const              { return is_metadata() && metadata_value()->is_method(); }\n+    bool is_method() const             { return is_metadata() && metadata_value()->is_method(); }\n@@ -491,2 +491,2 @@\n-    oop oop_value() const              { assert(_is_oop && _valid, \"must be\"); return (oop) _value; }\n-    Metadata* metadata_value() const { assert(!_is_oop && _valid, \"must be\"); return (Metadata*) _value; }\n+    oop oop_value() const              { assert(_is_oop && _valid, \"must be\"); return cast_to_oop(_value); }\n+    Metadata* metadata_value() const   { assert(!_is_oop && _valid, \"must be\"); return (Metadata*) _value; }\n","filename":"src\/hotspot\/share\/code\/dependencies.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1029,1 +1029,1 @@\n-    (*dest) = (oop) handle;\n+    (*dest) = cast_to_oop(handle);\n@@ -2724,1 +2724,1 @@\n-      if (o == (oop)Universe::non_oop_word()) {\n+      if ((void*)o == Universe::non_oop_word()) {\n","filename":"src\/hotspot\/share\/code\/nmethod.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -281,1 +281,1 @@\n-    *(narrowOop*)addr() = CompressedOops::encode((oop) x);\n+    *(narrowOop*)addr() = CompressedOops::encode(cast_to_oop(x));\n@@ -293,1 +293,1 @@\n-    guarantee(*(narrowOop*)addr() == CompressedOops::encode((oop) x), \"must agree\");\n+    guarantee(*(narrowOop*)addr() == CompressedOops::encode(cast_to_oop(x)), \"must agree\");\n","filename":"src\/hotspot\/share\/code\/relocInfo.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -723,1 +723,1 @@\n-  *derived_loc = (oop)base_loc;\n+  *derived_loc = cast_to_oop(base_loc);\n@@ -740,1 +740,1 @@\n-    *derived_loc = (oop)(cast_from_oop<address>(base) + offset);\n+    *derived_loc = cast_to_oop(cast_from_oop<address>(base) + offset);\n","filename":"src\/hotspot\/share\/compiler\/oopMap.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -230,1 +230,1 @@\n-      oop obj = oop(q);\n+      oop obj = cast_to_oop(q);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1BlockOffsetTable.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -145,1 +145,1 @@\n-    oop obj = oop(q);\n+    oop obj = cast_to_oop(q);\n@@ -158,1 +158,1 @@\n-  if (oop(q)->klass_or_null_acquire() == NULL) {\n+  if (cast_to_oop(q)->klass_or_null_acquire() == NULL) {\n","filename":"src\/hotspot\/share\/gc\/g1\/g1BlockOffsetTable.inline.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -3517,1 +3517,1 @@\n-      oop obj = oop(region->bottom());\n+      oop obj = cast_to_oop(region->bottom());\n@@ -4360,1 +4360,1 @@\n-    oop obj = (oop)r->bottom();\n+    oop obj = cast_to_oop(r->bottom());\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -84,1 +84,1 @@\n-  _task->scan_task_entry(G1TaskQueueEntry::from_oop(oop(addr)));\n+  _task->scan_task_entry(G1TaskQueueEntry::from_oop(cast_to_oop(addr)));\n@@ -488,1 +488,1 @@\n-    uint const size_in_regions = (uint)_g1h->humongous_obj_size_in_regions(oop(r->humongous_start_region()->bottom())->size());\n+    uint const size_in_regions = (uint)_g1h->humongous_obj_size_in_regions(cast_to_oop(r->humongous_start_region()->bottom())->size());\n@@ -856,1 +856,1 @@\n-    oop obj = oop(curr);\n+    oop obj = cast_to_oop(curr);\n@@ -1007,1 +1007,1 @@\n-      size_t const obj_size_in_words = (size_t)oop(hr->bottom())->size();\n+      size_t const obj_size_in_words = (size_t)cast_to_oop(hr->bottom())->size();\n@@ -1722,1 +1722,1 @@\n-    oop const obj = static_cast<oop>(entry);\n+    oop const obj = cast_to_oop(entry);\n@@ -2641,1 +2641,1 @@\n-        HeapWord* const new_finger = _finger + ((oop)_finger)->size();\n+        HeapWord* const new_finger = _finger + cast_to_oop(_finger)->size();\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentMark.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -75,1 +75,1 @@\n-    return (oop)_holder;\n+    return cast_to_oop(_holder);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentMark.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-    size_t const obj_size = (size_t)((oop)addr)->size();\n+    size_t const obj_size = (size_t)cast_to_oop(addr)->size();\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentMarkBitMap.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -64,1 +64,1 @@\n-  assert(oop(start_address)->is_objArray(), \"Address \" PTR_FORMAT \" does not refer to an object array \", p2i(start_address));\n+  assert(cast_to_oop(start_address)->is_objArray(), \"Address \" PTR_FORMAT \" does not refer to an object array \", p2i(start_address));\n@@ -70,1 +70,1 @@\n-  objArrayOop objArray = objArrayOop(start_address);\n+  objArrayOop objArray = objArrayOop(cast_to_oop(start_address));\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentMarkObjArrayProcessor.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -175,1 +175,1 @@\n-      HeapWord* end_first_obj = start + ((oop)start)->size();\n+      HeapWord* end_first_obj = start + cast_to_oop(start)->size();\n@@ -184,1 +184,1 @@\n-        size_t size_second_obj = ((oop)end_first_obj)->size();\n+        size_t size_second_obj = cast_to_oop(end_first_obj)->size();\n","filename":"src\/hotspot\/share\/gc\/g1\/g1EvacFailure.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -68,1 +68,1 @@\n-      oop obj = oop(r->humongous_start_region()->bottom());\n+      oop obj = cast_to_oop(r->humongous_start_region()->bottom());\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCAdjustTask.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -47,1 +47,1 @@\n-    assert(!r->is_starts_humongous() || _bitmap->is_marked((oop)r->bottom()),\n+    assert(!r->is_starts_humongous() || _bitmap->is_marked(cast_to_oop(r->bottom())),\n@@ -66,2 +66,2 @@\n-  oop(destination)->init_mark();\n-  assert(oop(destination)->klass() != NULL, \"should have a class\");\n+  cast_to_oop(destination)->init_mark();\n+  assert(cast_to_oop(destination)->klass() != NULL, \"should have a class\");\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCCompactTask.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -106,1 +106,1 @@\n-    object->forward_to(oop(_compaction_top));\n+    object->forward_to(cast_to_oop(_compaction_top));\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCCompactionPoint.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-      oop obj = oop(hr->humongous_start_region()->bottom());\n+      oop obj = cast_to_oop(hr->humongous_start_region()->bottom());\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCPrepareTask.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -236,1 +236,1 @@\n-      forwardee = (oop) m.decode_pointer();\n+      forwardee = cast_to_oop(m.decode_pointer());\n","filename":"src\/hotspot\/share\/gc\/g1\/g1OopClosures.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -206,1 +206,1 @@\n-    obj = (oop) m.decode_pointer();\n+    obj = cast_to_oop(m.decode_pointer());\n@@ -476,1 +476,1 @@\n-  const oop obj = oop(obj_ptr);\n+  const oop obj = cast_to_oop(obj_ptr);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ParScanThreadState.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1696,2 +1696,2 @@\n-          if (_current < mr.start() && !oop(_current)->is_objArray()) {\n-            _current += oop(_current)->size();\n+          if (_current < mr.start() && !cast_to_oop(_current)->is_objArray()) {\n+            _current += cast_to_oop(_current)->size();\n@@ -1718,1 +1718,1 @@\n-        oop result = oop(_current);\n+        oop result = cast_to_oop(_current);\n@@ -1742,1 +1742,1 @@\n-        oop const humongous_obj = oop(hr->humongous_start_region()->bottom());\n+        oop const humongous_obj = cast_to_oop(hr->humongous_start_region()->bottom());\n","filename":"src\/hotspot\/share\/gc\/g1\/g1RemSet.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -96,1 +96,1 @@\n-  if (is_live && oop(r->humongous_start_region()->bottom())->is_typeArray() && !r->rem_set()->is_tracked()) {\n+  if (is_live && cast_to_oop(r->humongous_start_region()->bottom())->is_typeArray() && !r->rem_set()->is_tracked()) {\n@@ -155,1 +155,1 @@\n-      uint const size_in_regions = (uint)g1h->humongous_obj_size_in_regions(oop(r->bottom())->size());\n+      uint const size_in_regions = (uint)g1h->humongous_obj_size_in_regions(cast_to_oop(r->bottom())->size());\n","filename":"src\/hotspot\/share\/gc\/g1\/g1RemSetTrackingPolicy.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -94,1 +94,1 @@\n-  assert(oopDesc::is_oop(oop(entry), true \/* ignore mark word *\/),\n+  assert(oopDesc::is_oop(cast_to_oop(entry), true \/* ignore mark word *\/),\n@@ -101,1 +101,1 @@\n-  return !requires_marking(entry, g1h) || g1h->is_marked_next((oop)entry);\n+  return !requires_marking(entry, g1h) || g1h->is_marked_next(cast_to_oop(entry));\n","filename":"src\/hotspot\/share\/gc\/g1\/g1SATBMarkQueueSet.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -669,1 +669,1 @@\n-    oop obj = oop(p);\n+    oop obj = cast_to_oop(p);\n@@ -729,1 +729,1 @@\n-    oop obj = oop(this->humongous_start_region()->bottom());\n+    oop obj = cast_to_oop(this->humongous_start_region()->bottom());\n@@ -814,1 +814,1 @@\n-    oop obj = oop(p);\n+    oop obj = cast_to_oop(p);\n@@ -876,1 +876,1 @@\n-      blk->do_object(oop(p));\n+      blk->do_object(cast_to_oop(p));\n","filename":"src\/hotspot\/share\/gc\/g1\/heapRegion.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -145,1 +145,1 @@\n-    return !g1h->is_obj_dead(oop(p), this);\n+    return !g1h->is_obj_dead(cast_to_oop(p), this);\n@@ -178,1 +178,1 @@\n-    return oop(addr)->size();\n+    return cast_to_oop(addr)->size();\n@@ -239,1 +239,1 @@\n-      oop current = oop(next_addr);\n+      oop current = cast_to_oop(next_addr);\n@@ -291,1 +291,1 @@\n-  oop obj = oop(sr->bottom());\n+  oop obj = cast_to_oop(sr->bottom());\n@@ -371,1 +371,1 @@\n-    oop obj = oop(cur);\n+    oop obj = cast_to_oop(cur);\n","filename":"src\/hotspot\/share\/gc\/g1\/heapRegion.inline.hpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -232,1 +232,1 @@\n-    obj_addr += oop(obj_addr)->oop_iterate_size(cl);\n+    obj_addr += cast_to_oop(obj_addr)->oop_iterate_size(cl);\n@@ -239,2 +239,2 @@\n-    cl->do_object(oop(p));\n-    p += oop(p)->size();\n+    cl->do_object(cast_to_oop(p));\n+    p += cast_to_oop(p)->size();\n@@ -262,1 +262,1 @@\n-    oopDesc::verify(oop(p));\n+    oopDesc::verify(cast_to_oop(p));\n@@ -264,1 +264,1 @@\n-    p += oop(p)->size();\n+    p += cast_to_oop(p)->size();\n","filename":"src\/hotspot\/share\/gc\/parallel\/mutableSpace.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -45,1 +45,1 @@\n-    next += oop(next)->size();\n+    next += cast_to_oop(next)->size();\n","filename":"src\/hotspot\/share\/gc\/parallel\/objectStartArray.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -149,1 +149,1 @@\n-      last_ret = last_ret - live_words_in_range_helper(end_obj, (oop)last_obj);\n+      last_ret = last_ret - live_words_in_range_helper(end_obj, cast_to_oop(last_obj));\n@@ -156,1 +156,1 @@\n-  update_live_words_in_range_cache(cm, last_beg, (oop)last_obj, last_ret);\n+  update_live_words_in_range_cache(cm, last_beg, cast_to_oop(last_obj), last_ret);\n","filename":"src\/hotspot\/share\/gc\/parallel\/parMarkBitMap.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -216,1 +216,1 @@\n-      last_scanned = (oop*)(first_object + oop(first_object)->size());\n+      last_scanned = (oop*)(first_object + cast_to_oop(first_object)->size());\n@@ -225,1 +225,1 @@\n-      slice_end = last_object + oop(last_object)->size();\n+      slice_end = last_object + cast_to_oop(last_object)->size();\n@@ -263,1 +263,1 @@\n-          size_t size_of_last_object = oop(last_object_in_dirty_region)->size();\n+          size_t size_of_last_object = cast_to_oop(last_object_in_dirty_region)->size();\n@@ -319,1 +319,1 @@\n-            oop m = oop(p);\n+            oop m = cast_to_oop(p);\n@@ -327,1 +327,1 @@\n-            oop m = oop(p);\n+            oop m = cast_to_oop(p);\n","filename":"src\/hotspot\/share\/gc\/parallel\/psCardTable.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -170,1 +170,1 @@\n-    start += oop(start)->size();\n+    start += cast_to_oop(start)->size();\n@@ -176,2 +176,2 @@\n-  for (HeapWord* p = start; p < end; p += oop(p)->size()) {\n-    cl->do_object(oop(p));\n+  for (HeapWord* p = start; p < end; p += cast_to_oop(p)->size()) {\n+    cl->do_object(cast_to_oop(p));\n","filename":"src\/hotspot\/share\/gc\/parallel\/psOldGen.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -552,1 +552,1 @@\n-  Klass* klass = ((oop)addr)->klass();\n+  Klass* klass = cast_to_oop(addr)->klass();\n@@ -820,1 +820,1 @@\n-  const size_t live = bitmap->live_words_in_range(cm, search_start, oop(addr));\n+  const size_t live = bitmap->live_words_in_range(cm, search_start, cast_to_oop(addr));\n@@ -2677,1 +2677,1 @@\n-  compaction_manager()->update_contents(oop(addr));\n+  compaction_manager()->update_contents(cast_to_oop(addr));\n@@ -2780,2 +2780,2 @@\n-      cm->update_contents(oop(addr));\n-      assert(oopDesc::is_oop_or_null(oop(addr)), \"Expected an oop or NULL at \" PTR_FORMAT, p2i(oop(addr)));\n+      cm->update_contents(cast_to_oop(addr));\n+      assert(oopDesc::is_oop_or_null(cast_to_oop(addr)), \"Expected an oop or NULL at \" PTR_FORMAT, p2i(cast_to_oop(addr)));\n@@ -3301,1 +3301,1 @@\n-  oop moved_oop = (oop) copy_destination();\n+  oop moved_oop = cast_to_oop(copy_destination());\n@@ -3359,1 +3359,1 @@\n-    addr += oop(addr)->size();\n+    addr += cast_to_oop(addr)->size();\n","filename":"src\/hotspot\/share\/gc\/parallel\/psParallelCompact.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -115,1 +115,1 @@\n-    oop new_obj = (oop)summary_data().calc_new_pointer(obj, cm);\n+    oop new_obj = cast_to_oop(summary_data().calc_new_pointer(obj, cm));\n","filename":"src\/hotspot\/share\/gc\/parallel\/psParallelCompact.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -85,1 +85,1 @@\n-  typeArrayOop filler_oop = (typeArrayOop) top();\n+  typeArrayOop filler_oop = (typeArrayOop) cast_to_oop(top());\n","filename":"src\/hotspot\/share\/gc\/parallel\/psPromotionLAB.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -156,1 +156,1 @@\n-        new_obj = (oop) _young_lab.allocate(new_obj_size);\n+        new_obj = cast_to_oop(_young_lab.allocate(new_obj_size));\n@@ -161,1 +161,1 @@\n-            new_obj = (oop)young_space()->cas_allocate(new_obj_size);\n+            new_obj = cast_to_oop(young_space()->cas_allocate(new_obj_size));\n@@ -171,1 +171,1 @@\n-              new_obj = (oop) _young_lab.allocate(new_obj_size);\n+              new_obj = cast_to_oop(_young_lab.allocate(new_obj_size));\n@@ -189,1 +189,1 @@\n-      new_obj = (oop) _old_lab.allocate(new_obj_size);\n+      new_obj = cast_to_oop(_old_lab.allocate(new_obj_size));\n@@ -197,1 +197,1 @@\n-            new_obj = (oop)old_gen()->allocate(new_obj_size);\n+            new_obj = cast_to_oop(old_gen()->allocate(new_obj_size));\n@@ -214,1 +214,1 @@\n-              new_obj = (oop) _old_lab.allocate(new_obj_size);\n+              new_obj = cast_to_oop(_old_lab.allocate(new_obj_size));\n","filename":"src\/hotspot\/share\/gc\/parallel\/psPromotionManager.inline.hpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -794,1 +794,1 @@\n-    _young_generation_boundary_compressed = (uintptr_t)CompressedOops::encode((oop)v);\n+    _young_generation_boundary_compressed = (uintptr_t)CompressedOops::encode(cast_to_oop(v));\n","filename":"src\/hotspot\/share\/gc\/parallel\/psScavenge.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -708,1 +708,1 @@\n-    obj = (oop) to()->allocate(s);\n+    obj = cast_to_oop(to()->allocate(s));\n","filename":"src\/hotspot\/share\/gc\/serial\/defNewGeneration.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -82,1 +82,1 @@\n-    oop new_obj = oop(obj->mark().decode_pointer());\n+    oop new_obj = cast_to_oop(obj->mark().decode_pointer());\n","filename":"src\/hotspot\/share\/gc\/serial\/markSweep.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -45,1 +45,1 @@\n-    return oop(addr)->size();\n+    return cast_to_oop(addr)->size();\n","filename":"src\/hotspot\/share\/gc\/serial\/tenuredGeneration.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -343,1 +343,1 @@\n-    oop o = oop(start);\n+    oop o = cast_to_oop(start);\n","filename":"src\/hotspot\/share\/gc\/shared\/blockOffsetTable.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -167,1 +167,1 @@\n-      DEBUG_ONLY(oop old_obj = oop(deferred.start());)\n+      DEBUG_ONLY(oop old_obj = cast_to_oop(deferred.start());)\n","filename":"src\/hotspot\/share\/gc\/shared\/cardTableBarrierSet.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -248,1 +248,1 @@\n-          oop boundary_obj = oop(boundary_block);\n+          oop boundary_obj = cast_to_oop(boundary_block);\n@@ -266,1 +266,1 @@\n-            oop(cur)->oop_iterate(&verify_blk, mr);\n+            cast_to_oop(cur)->oop_iterate(&verify_blk, mr);\n","filename":"src\/hotspot\/share\/gc\/shared\/cardTableRS.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1301,1 +1301,1 @@\n-  return oop(result);\n+  return cast_to_oop(result);\n","filename":"src\/hotspot\/share\/gc\/shared\/genCollectedHeap.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -170,1 +170,1 @@\n-    return oop(result);\n+    return cast_to_oop(result);\n","filename":"src\/hotspot\/share\/gc\/shared\/generation.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -36,1 +36,1 @@\n-    return oop(addr);\n+    return cast_to_oop(addr);\n@@ -45,1 +45,1 @@\n-    return oop(p);\n+    return cast_to_oop(p);\n","filename":"src\/hotspot\/share\/gc\/shared\/locationPrinter.inline.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -396,1 +396,1 @@\n-  return oop(mem);\n+  return cast_to_oop(mem);\n","filename":"src\/hotspot\/share\/gc\/shared\/memAllocator.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -55,1 +55,1 @@\n-        if (oop(top_obj)->is_objArray() || oop(top_obj)->is_typeArray()) {\n+        if (cast_to_oop(top_obj)->is_objArray() || cast_to_oop(top_obj)->is_typeArray()) {\n@@ -66,1 +66,1 @@\n-          top = top_obj + oop(top_obj)->size();\n+          top = top_obj + cast_to_oop(top_obj)->size();\n@@ -97,2 +97,2 @@\n-        !_sp->obj_allocated_since_save_marks(oop(bottom))) {\n-      oop(bottom)->oop_iterate(_cl, mr);\n+        !_sp->obj_allocated_since_save_marks(cast_to_oop(bottom))) {\n+      cast_to_oop(bottom)->oop_iterate(_cl, mr);\n@@ -174,1 +174,1 @@\n-      if (oop(top_obj)->is_objArray() || oop(top_obj)->is_typeArray()) {\n+      if (cast_to_oop(top_obj)->is_objArray() || cast_to_oop(top_obj)->is_typeArray()) {\n@@ -181,1 +181,1 @@\n-        assert(_sp->block_size(top_obj) == (size_t) oop(top_obj)->size(),\n+        assert(_sp->block_size(top_obj) == (size_t) cast_to_oop(top_obj)->size(),\n@@ -183,1 +183,1 @@\n-        top = top_obj + oop(top_obj)->size();\n+        top = top_obj + cast_to_oop(top_obj)->size();\n@@ -221,1 +221,1 @@\n-  bottom += oop(bottom)->oop_iterate_size(cl, mr);                      \\\n+  bottom += cast_to_oop(bottom)->oop_iterate_size(cl, mr);              \\\n@@ -223,1 +223,1 @@\n-    HeapWord* next_obj = bottom + oop(bottom)->size();                  \\\n+    HeapWord* next_obj = bottom + cast_to_oop(bottom)->size();          \\\n@@ -227,1 +227,1 @@\n-      oop(bottom)->oop_iterate(cl);                                     \\\n+      cast_to_oop(bottom)->oop_iterate(cl);                             \\\n@@ -229,1 +229,1 @@\n-      next_obj = bottom + oop(bottom)->size();                          \\\n+      next_obj = bottom + cast_to_oop(bottom)->size();                  \\\n@@ -232,1 +232,1 @@\n-    oop(bottom)->oop_iterate(cl, mr);                                   \\\n+    cast_to_oop(bottom)->oop_iterate(cl, mr);                           \\\n@@ -375,1 +375,1 @@\n-    q->forward_to(oop(compact_top));\n+    q->forward_to(cast_to_oop(compact_top));\n@@ -449,1 +449,1 @@\n-    oopDesc::verify(oop(p));\n+    oopDesc::verify(cast_to_oop(p));\n@@ -451,1 +451,1 @@\n-    p += oop(p)->size();\n+    p += cast_to_oop(p)->size();\n@@ -477,1 +477,1 @@\n-    obj_addr += oop(obj_addr)->oop_iterate_size(blk);\n+    obj_addr += cast_to_oop(obj_addr)->oop_iterate_size(blk);\n@@ -488,2 +488,2 @@\n-    blk->do_object(oop(mark));\n-    mark += oop(mark)->size();\n+    blk->do_object(cast_to_oop(mark));\n+    mark += cast_to_oop(mark)->size();\n@@ -505,1 +505,1 @@\n-      cur += oop(cur)->size();\n+      cur += cast_to_oop(cur)->size();\n@@ -507,1 +507,1 @@\n-    assert(oopDesc::is_oop(oop(last)), PTR_FORMAT \" should be an object start\", p2i(last));\n+    assert(oopDesc::is_oop(cast_to_oop(last)), PTR_FORMAT \" should be an object start\", p2i(last));\n@@ -520,1 +520,1 @@\n-  assert(p == current_top || oopDesc::is_oop(oop(p)),\n+  assert(p == current_top || oopDesc::is_oop(cast_to_oop(p)),\n@@ -523,1 +523,1 @@\n-         p2i(p), p2i(current_top), BOOL_TO_STR(oopDesc::is_oop(oop(p))));\n+         p2i(p), p2i(current_top), BOOL_TO_STR(oopDesc::is_oop(cast_to_oop(p))));\n@@ -525,1 +525,1 @@\n-    return oop(p)->size();\n+    return cast_to_oop(p)->size();\n@@ -595,1 +595,1 @@\n-    typeArrayOop t = (typeArrayOop) allocate(size);\n+    typeArrayOop t = (typeArrayOop) cast_to_oop(allocate(size));\n@@ -603,1 +603,1 @@\n-    instanceOop obj = (instanceOop) allocate(size);\n+    instanceOop obj = (instanceOop) cast_to_oop(allocate(size));\n@@ -642,1 +642,1 @@\n-    size_t size = oop(p)->size();\n+    size_t size = cast_to_oop(p)->size();\n@@ -654,1 +654,1 @@\n-      oopDesc::verify(oop(p));\n+      oopDesc::verify(cast_to_oop(p));\n","filename":"src\/hotspot\/share\/gc\/shared\/space.cpp","additions":27,"deletions":27,"binary":false,"changes":54,"status":"modified"},{"patch":"@@ -79,1 +79,1 @@\n-  return oop(addr)->size();\n+  return cast_to_oop(addr)->size();\n@@ -119,1 +119,1 @@\n-      oop obj = oop(dead_start);\n+      oop obj = cast_to_oop(dead_start);\n@@ -166,1 +166,1 @@\n-    if (space->scanned_block_is_obj(cur_obj) && oop(cur_obj)->is_gc_marked()) {\n+    if (space->scanned_block_is_obj(cur_obj) && cast_to_oop(cur_obj)->is_gc_marked()) {\n@@ -170,1 +170,1 @@\n-      compact_top = cp->space->forward(oop(cur_obj), size, cp, compact_top);\n+      compact_top = cp->space->forward(cast_to_oop(cur_obj), size, cp, compact_top);\n@@ -180,1 +180,1 @@\n-      } while (end < scan_limit && (!space->scanned_block_is_obj(end) || !oop(end)->is_gc_marked()));\n+      } while (end < scan_limit && (!space->scanned_block_is_obj(end) || !cast_to_oop(end)->is_gc_marked()));\n@@ -185,1 +185,1 @@\n-        oop obj = oop(cur_obj);\n+        oop obj = cast_to_oop(cur_obj);\n@@ -233,1 +233,1 @@\n-    if (cur_obj < first_dead || oop(cur_obj)->is_gc_marked()) {\n+    if (cur_obj < first_dead || cast_to_oop(cur_obj)->is_gc_marked()) {\n@@ -236,1 +236,1 @@\n-      size_t size = MarkSweep::adjust_pointers(oop(cur_obj));\n+      size_t size = MarkSweep::adjust_pointers(cast_to_oop(cur_obj));\n@@ -256,1 +256,1 @@\n-  if (cur_obj < space->_end_of_live && space->_first_dead > cur_obj && !oop(cur_obj)->is_gc_marked()) {\n+  if (cur_obj < space->_end_of_live && space->_first_dead > cur_obj && !cast_to_oop(cur_obj)->is_gc_marked()) {\n@@ -264,1 +264,1 @@\n-       assert(!oop(cur_obj)->is_gc_marked(), \"should be unmarked (special dense prefix handling)\");\n+       assert(!cast_to_oop(cur_obj)->is_gc_marked(), \"should be unmarked (special dense prefix handling)\");\n@@ -301,1 +301,1 @@\n-  if (space->_first_dead == end_of_live && (bottom == end_of_live || !oop(bottom)->is_gc_marked())) {\n+  if (space->_first_dead == end_of_live && (bottom == end_of_live || !cast_to_oop(bottom)->is_gc_marked())) {\n@@ -312,1 +312,1 @@\n-  if (space->_first_dead > cur_obj && !oop(cur_obj)->is_gc_marked()) {\n+  if (space->_first_dead > cur_obj && !cast_to_oop(cur_obj)->is_gc_marked()) {\n@@ -320,1 +320,1 @@\n-    if (!oop(cur_obj)->is_gc_marked()) {\n+    if (!cast_to_oop(cur_obj)->is_gc_marked()) {\n@@ -331,1 +331,1 @@\n-      HeapWord* compaction_top = cast_from_oop<HeapWord*>(oop(cur_obj)->forwardee());\n+      HeapWord* compaction_top = cast_from_oop<HeapWord*>(cast_to_oop(cur_obj)->forwardee());\n@@ -339,2 +339,2 @@\n-      oop(compaction_top)->init_mark();\n-      assert(oop(compaction_top)->klass() != NULL, \"should have a class\");\n+      cast_to_oop(compaction_top)->init_mark();\n+      assert(cast_to_oop(compaction_top)->klass() != NULL, \"should have a class\");\n@@ -353,1 +353,1 @@\n-  return oop(addr)->size();\n+  return cast_to_oop(addr)->size();\n@@ -368,1 +368,1 @@\n-      oop m = oop(p);\n+      oop m = cast_to_oop(p);\n","filename":"src\/hotspot\/share\/gc\/shared\/space.inline.hpp","additions":18,"deletions":18,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -617,1 +617,1 @@\n-    return PartialArrayScanTask(oop(decode(PartialArrayTag)));\n+    return PartialArrayScanTask(cast_to_oop(decode(PartialArrayTag)));\n","filename":"src\/hotspot\/share\/gc\/shared\/taskqueue.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -122,1 +122,1 @@\n-      bool bm_live = ctx->is_marked(oop(region->bottom()));\n+      bool bm_live = ctx->is_marked(cast_to_oop(region->bottom()));\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahHeuristics.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -142,1 +142,1 @@\n-    oop fwd = (oop) ShenandoahForwarding::get_forwardee_raw_unchecked(obj);\n+    oop fwd = ShenandoahForwarding::get_forwardee_raw_unchecked(obj);\n@@ -157,2 +157,2 @@\n-    oop fwd = (oop) ShenandoahForwarding::get_forwardee_raw_unchecked(obj);\n-    oop fwd2 = (oop) ShenandoahForwarding::get_forwardee_raw_unchecked(fwd);\n+    oop fwd = ShenandoahForwarding::get_forwardee_raw_unchecked(obj);\n+    oop fwd2 = ShenandoahForwarding::get_forwardee_raw_unchecked(fwd);\n@@ -213,1 +213,1 @@\n-  oop fwd = oop(ShenandoahForwarding::get_forwardee_raw_unchecked(obj));\n+  oop fwd = ShenandoahForwarding::get_forwardee_raw_unchecked(obj);\n@@ -246,1 +246,1 @@\n-    oop fwd2 = oop(ShenandoahForwarding::get_forwardee_raw_unchecked(fwd));\n+    oop fwd2 = ShenandoahForwarding::get_forwardee_raw_unchecked(fwd);\n@@ -288,1 +288,1 @@\n-  oop fwd = oop(ShenandoahForwarding::get_forwardee_raw_unchecked(obj));\n+  oop fwd =   ShenandoahForwarding::get_forwardee_raw_unchecked(obj);\n@@ -299,1 +299,1 @@\n-  oop fwd = oop(ShenandoahForwarding::get_forwardee_raw_unchecked(obj));\n+  oop fwd = ShenandoahForwarding::get_forwardee_raw_unchecked(obj);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahAsserts.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-  static inline HeapWord* get_forwardee_raw(oop obj);\n+  static inline oop get_forwardee_raw(oop obj);\n@@ -48,1 +48,1 @@\n-  static inline HeapWord* get_forwardee_raw_unchecked(oop obj);\n+  static inline oop get_forwardee_raw_unchecked(oop obj);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahForwarding.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-inline HeapWord* ShenandoahForwarding::get_forwardee_raw(oop obj) {\n+inline oop ShenandoahForwarding::get_forwardee_raw(oop obj) {\n@@ -38,1 +38,1 @@\n-inline HeapWord* ShenandoahForwarding::get_forwardee_raw_unchecked(oop obj) {\n+inline oop ShenandoahForwarding::get_forwardee_raw_unchecked(oop obj) {\n@@ -47,1 +47,1 @@\n-      return fwdptr;\n+      return cast_to_oop(fwdptr);\n@@ -50,1 +50,1 @@\n-  return cast_from_oop<HeapWord*>(obj);\n+  return obj;\n@@ -70,1 +70,1 @@\n-  return oop(get_forwardee_raw_unchecked(obj));\n+  return get_forwardee_raw_unchecked(obj);\n@@ -80,1 +80,1 @@\n-    return oop(old_mark.clear_lock_bits().to_pointer());\n+    return cast_to_oop(old_mark.clear_lock_bits().to_pointer());\n@@ -88,1 +88,1 @@\n-    return oop(prev_mark.clear_lock_bits().to_pointer());\n+    return cast_to_oop(prev_mark.clear_lock_bits().to_pointer());\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahForwarding.inline.hpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -363,1 +363,1 @@\n-    p->forward_to(oop(_compact_point));\n+    p->forward_to(cast_to_oop(_compact_point));\n@@ -462,1 +462,1 @@\n-      oop old_obj = oop(r->bottom());\n+      oop old_obj = cast_to_oop(r->bottom());\n@@ -471,1 +471,1 @@\n-        old_obj->forward_to(oop(heap->get_region(start)->bottom()));\n+        old_obj->forward_to(cast_to_oop(heap->get_region(start)->bottom()));\n@@ -519,1 +519,1 @@\n-      oop humongous_obj = oop(r->bottom());\n+      oop humongous_obj = cast_to_oop(r->bottom());\n@@ -844,1 +844,1 @@\n-      oop new_obj = oop(compact_to);\n+      oop new_obj = cast_to_oop(compact_to);\n@@ -941,1 +941,1 @@\n-      oop old_obj = oop(r->bottom());\n+      oop old_obj = cast_to_oop(r->bottom());\n@@ -960,1 +960,1 @@\n-      oop new_obj = oop(heap->get_region(new_start)->bottom());\n+      oop new_obj = cast_to_oop(heap->get_region(new_start)->bottom());\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFullGC.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -1037,1 +1037,1 @@\n-  oop humongous_obj = oop(start->bottom());\n+  oop humongous_obj = cast_to_oop(start->bottom());\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -254,1 +254,1 @@\n-  oop copy_val = oop(copy);\n+  oop copy_val = cast_to_oop(copy);\n@@ -284,1 +284,1 @@\n-  oop obj = oop(entry);\n+  oop obj = cast_to_oop(entry);\n@@ -403,1 +403,1 @@\n-        oop obj = oop(slots[c]);\n+        oop obj = cast_to_oop(slots[c]);\n@@ -413,1 +413,1 @@\n-      oop obj = oop(cb);\n+      oop obj = cast_to_oop(cb);\n@@ -431,1 +431,1 @@\n-    oop obj = oop(cs);\n+    oop obj = cast_to_oop(cs);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.inline.hpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -395,1 +395,1 @@\n-    oop obj = oop(obj_addr);\n+    oop obj = cast_to_oop(obj_addr);\n@@ -405,1 +405,1 @@\n-  oop obj = oop(r->bottom());\n+  oop obj = cast_to_oop(r->bottom());\n@@ -451,1 +451,1 @@\n-      cur += oop(cur)->size();\n+      cur += cast_to_oop(cur)->size();\n@@ -453,1 +453,1 @@\n-    shenandoah_assert_correct(NULL, oop(last));\n+    shenandoah_assert_correct(NULL, cast_to_oop(last));\n@@ -463,1 +463,1 @@\n-    return oop(p)->size();\n+    return cast_to_oop(p)->size();\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -174,1 +174,1 @@\n-    oop fwd = (oop) ShenandoahForwarding::get_forwardee_raw_unchecked(obj);\n+    oop fwd = ShenandoahForwarding::get_forwardee_raw_unchecked(obj);\n@@ -207,1 +207,1 @@\n-      oop fwd2 = (oop) ShenandoahForwarding::get_forwardee_raw_unchecked(fwd);\n+      oop fwd2 = ShenandoahForwarding::get_forwardee_raw_unchecked(fwd);\n@@ -539,1 +539,1 @@\n-    if (_heap->complete_marking_context()->is_marked((oop)obj)) {\n+    if (_heap->complete_marking_context()->is_marked(cast_to_oop(obj))) {\n@@ -571,1 +571,1 @@\n-        addr += oop(addr)->size();\n+        addr += cast_to_oop(addr)->size();\n@@ -582,1 +582,1 @@\n-    oop obj = oop(addr);\n+    oop obj = cast_to_oop(addr);\n@@ -921,1 +921,1 @@\n-      oop fwd = (oop) ShenandoahForwarding::get_forwardee_raw_unchecked(obj);\n+      oop fwd = ShenandoahForwarding::get_forwardee_raw_unchecked(obj);\n@@ -953,1 +953,1 @@\n-      oop fwd = (oop) ShenandoahForwarding::get_forwardee_raw_unchecked(obj);\n+      oop fwd = ShenandoahForwarding::get_forwardee_raw_unchecked(obj);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahVerifier.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -64,1 +64,1 @@\n-  return oop(mem);\n+  return cast_to_oop(mem);\n","filename":"src\/hotspot\/share\/gc\/z\/zObjArrayAllocator.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1501,1 +1501,1 @@\n-    oop member_name_oop = (oop) member_name;\n+    oop member_name_oop = cast_to_oop(member_name);\n","filename":"src\/hotspot\/share\/interpreter\/interpreterRuntime.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1608,1 +1608,1 @@\n-                obj = (oop)NULL;\n+                obj = NULL;\n@@ -1610,1 +1610,1 @@\n-                obj = (oop) STACK_OBJECT(-1);\n+                obj = STACK_OBJECT(-1);\n@@ -1626,1 +1626,1 @@\n-            obj = (oop) STACK_OBJECT(-1);\n+            obj = STACK_OBJECT(-1);\n@@ -1732,1 +1732,1 @@\n-                obj = (oop)NULL;\n+                obj = NULL;\n@@ -1736,1 +1736,1 @@\n-                  obj = (oop) STACK_OBJECT(-3);\n+                  obj = STACK_OBJECT(-3);\n@@ -1738,1 +1738,1 @@\n-                  obj = (oop) STACK_OBJECT(-2);\n+                  obj = STACK_OBJECT(-2);\n@@ -1767,1 +1767,1 @@\n-            obj = (oop) STACK_OBJECT(count);\n+            obj = STACK_OBJECT(count);\n","filename":"src\/hotspot\/share\/interpreter\/zero\/bytecodeInterpreter.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -238,1 +238,1 @@\n-  sample->set_object((oop)obj);\n+  sample->set_object(cast_to_oop(obj));\n","filename":"src\/hotspot\/share\/jfr\/leakprofiler\/sampling\/objectSampler.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -490,1 +490,1 @@\n-    return Handle(Thread::current(), (oop) (address) _argument);\n+    return Handle(Thread::current(), cast_to_oop(_argument));\n@@ -539,1 +539,1 @@\n-    thread->set_vm_result((oop) result.get_jobject());\n+    thread->set_vm_result(result.get_oop());\n@@ -659,1 +659,1 @@\n-      oop obj = oop(p);\n+      oop obj = cast_to_oop(p);\n","filename":"src\/hotspot\/share\/jvmci\/jvmciRuntime.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1313,1 +1313,1 @@\n-    mapping_offset = (size_t)CompressedOops::encode_not_null((oop)base);\n+    mapping_offset = (size_t)CompressedOops::encode_not_null(cast_to_oop(base));\n","filename":"src\/hotspot\/share\/memory\/filemap.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -266,1 +266,1 @@\n-  oop archived_oop = (oop)G1CollectedHeap::heap()->archive_mem_allocate(len);\n+  oop archived_oop = cast_to_oop(G1CollectedHeap::heap()->archive_mem_allocate(len));\n@@ -427,1 +427,1 @@\n-  _roots = OopHandle(Universe::vm_global(), (oop)mem);\n+  _roots = OopHandle(Universe::vm_global(), cast_to_oop(mem));\n@@ -1398,1 +1398,1 @@\n-    oop o = (oop)p;\n+    oop o = cast_to_oop(p);\n","filename":"src\/hotspot\/share\/memory\/heapShared.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-  oop result = (oop)(void*)((uintptr_t)_narrow_oop_base + ((uintptr_t)v << _narrow_oop_shift));\n+  oop result = cast_to_oop((uintptr_t)_narrow_oop_base + ((uintptr_t)v << _narrow_oop_shift));\n","filename":"src\/hotspot\/share\/memory\/heapShared.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -50,1 +50,1 @@\n-  return (oop)(void*)((uintptr_t)base() + ((uintptr_t)v << shift()));\n+  return cast_to_oop((uintptr_t)base() + ((uintptr_t)v << shift()));\n","filename":"src\/hotspot\/share\/oops\/compressedOops.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -200,1 +200,1 @@\n-    Handle refs_handle (THREAD, (oop)stom);  \/\/ must handleize.\n+    Handle refs_handle (THREAD, stom);  \/\/ must handleize.\n@@ -385,1 +385,1 @@\n-        Handle refs_handle(THREAD, (oop)stom);  \/\/ must handleize.\n+        Handle refs_handle(THREAD, stom);  \/\/ must handleize.\n","filename":"src\/hotspot\/share\/oops\/constantPool.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -790,1 +790,1 @@\n-  assert((oop)lock != NULL || !is_not_initialized(), \/\/ initialized or in_error state\n+  assert(lock != NULL || !is_not_initialized(), \/\/ initialized or in_error state\n","filename":"src\/hotspot\/share\/oops\/instanceKlass.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-  klass()->oop_print_on(oop(this), st);\n+  klass()->oop_print_on(const_cast<oopDesc*>(this), st);\n@@ -71,1 +71,1 @@\n-  oop obj = oop(this);\n+  oop obj = const_cast<oopDesc*>(this);\n","filename":"src\/hotspot\/share\/oops\/oop.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -297,1 +297,1 @@\n-    return (oop)old_mark.decode_pointer();\n+    return cast_to_oop(old_mark.decode_pointer());\n@@ -305,1 +305,1 @@\n-  return (oop) mark().decode_pointer();\n+  return cast_to_oop(mark().decode_pointer());\n@@ -312,1 +312,1 @@\n-  return (oop) Atomic::load_acquire(&_mark).decode_pointer();\n+  return cast_to_oop(Atomic::load_acquire(&_mark).decode_pointer());\n","filename":"src\/hotspot\/share\/oops\/oop.inline.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -89,3 +89,3 @@\n-  oop()              : _o(NULL)        { register_if_checking(); }\n-  oop(const oop& o)  : _o(o._o)        { register_if_checking(); }\n-  oop(const void* p) : _o((oopDesc*)p) { register_if_checking(); }\n+  oop()             : _o(nullptr) { register_if_checking(); }\n+  oop(const oop& o) : _o(o._o)    { register_if_checking(); }\n+  oop(oopDesc* o)   : _o(o)       { register_if_checking(); }\n@@ -101,1 +101,0 @@\n-  bool operator==(void *p) const       { return _o == p; }\n@@ -103,1 +102,0 @@\n-  bool operator!=(void *p) const       { return _o != p; }\n@@ -105,1 +103,4 @@\n-  oop& operator=(const oop& o)        { _o = o._o; return *this; }\n+  bool operator==(nullptr_t) const     { return _o == nullptr; }\n+  bool operator!=(nullptr_t) const     { return _o != nullptr; }\n+\n+  oop& operator=(const oop& o)         { _o = o._o; return *this; }\n@@ -151,5 +152,3 @@\n-\/\/ For CHECK_UNHANDLED_OOPS, it is ambiguous C++ behavior to have the oop\n-\/\/ structure contain explicit user defined conversions of both numerical\n-\/\/ and pointer type. Define inline methods to provide the numerical conversions.\n-template <class T> inline oop cast_to_oop(T value) {\n-  return (oop)(CHECK_UNHANDLED_OOPS_ONLY((void *))(value));\n+\/\/ Cast functions to convert to and from oops.\n+template <typename T> inline oop cast_to_oop(T value) {\n+  return (oopDesc*)value;\n@@ -157,1 +156,1 @@\n-template <class T> inline T cast_from_oop(oop o) {\n+template <typename T> inline T cast_from_oop(oop o) {\n","filename":"src\/hotspot\/share\/oops\/oopsHierarchy.hpp","additions":11,"deletions":12,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -603,1 +603,1 @@\n-    JvmtiExport::post_monitor_wait(thread, (oop)obj(), ms);\n+    JvmtiExport::post_monitor_wait(thread, obj(), ms);\n","filename":"src\/hotspot\/share\/prims\/jvm.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1449,1 +1449,1 @@\n-  oop group_obj = (oop) JNIHandles::resolve_external_guard(group);\n+  oop group_obj = JNIHandles::resolve_external_guard(group);\n","filename":"src\/hotspot\/share\/prims\/jvmtiEnv.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2050,1 +2050,1 @@\n-    value->l = (jobject)JNIHandles::make_local(thread, (oop)value->l);\n+    value->l = (jobject)JNIHandles::make_local(thread, cast_to_oop(value->l));\n","filename":"src\/hotspot\/share\/prims\/jvmtiExport.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -176,1 +176,1 @@\n-  return Handle(THREAD, (oop)nullptr);\n+  return Handle(THREAD, nullptr);\n","filename":"src\/hotspot\/share\/prims\/vectorSupport.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -274,1 +274,1 @@\n-              if (monitor != NULL && (oop)monitor->object() == mi->owner()) {\n+              if (monitor != NULL && monitor->object() == mi->owner()) {\n@@ -1470,1 +1470,1 @@\n-            if (waiting_monitor != NULL && (oop)waiting_monitor->object() == obj()) {\n+            if (waiting_monitor != NULL && waiting_monitor->object() == obj()) {\n","filename":"src\/hotspot\/share\/runtime\/deoptimization.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -72,1 +72,1 @@\n-  Symbol* klassname = ((oop)obj)->klass()->name();                         \\\n+  Symbol* klassname = obj->klass()->name();                                \\\n","filename":"src\/hotspot\/share\/runtime\/objectMonitor.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -103,1 +103,1 @@\n-    return (oop) value->l;\n+    return cast_to_oop(value->l);\n@@ -277,1 +277,1 @@\n-      oop obj = (oop) value->l;\n+      oop obj = cast_to_oop(value->l);\n","filename":"src\/hotspot\/share\/runtime\/reflection.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -149,2 +149,2 @@\n-  oop pending_obj = (pending_monitor != NULL ? (oop) pending_monitor->object() : (oop) NULL);\n-  oop waiting_obj = (waiting_monitor != NULL ? (oop) waiting_monitor->object() : (oop) NULL);\n+  oop pending_obj = (pending_monitor != NULL ? pending_monitor->object() : (oop) NULL);\n+  oop waiting_obj = (waiting_monitor != NULL ? waiting_monitor->object() : (oop) NULL);\n","filename":"src\/hotspot\/share\/runtime\/vframe.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -354,1 +354,1 @@\n-          oop o = (oop)(address)(*addr);\n+          oop o = cast_to_oop((address)(*addr));\n@@ -392,1 +392,1 @@\n-          oop o = (oop)(address)(*addr);\n+          oop o = cast_to_oop((address)(*addr));\n","filename":"src\/hotspot\/share\/runtime\/vframeArray.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -462,1 +462,1 @@\n-        Handle obj(Thread::current(), (oop)value.l);\n+        Handle obj(Thread::current(), cast_to_oop(value.l));\n","filename":"src\/hotspot\/share\/runtime\/vframe_hp.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -873,1 +873,1 @@\n-  oop str = (oop) jv->l;\n+  oop str = cast_to_oop(jv->l);\n","filename":"src\/hotspot\/share\/services\/diagnosticCommand.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -485,1 +485,1 @@\n-    oop obj = oop(p);\n+    oop obj = cast_to_oop(p);\n","filename":"src\/hotspot\/share\/utilities\/debug.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n-  typeArrayOop o = (typeArrayOop) addr;\n+  typeArrayOop o = (typeArrayOop) cast_to_oop(addr);\n","filename":"test\/hotspot\/gtest\/oops\/test_typeArrayOop.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}