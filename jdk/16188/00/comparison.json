{"files":[{"patch":"@@ -540,0 +540,10 @@\n+    \/**\n+     * Add the restricted information for the given method.\n+     *\n+     * @param method the method being documented.\n+     * @param content the content to which the preview information will be added.\n+     *\/\n+    protected void addRestrictedInfo(ExecutableElement method, Content content) {\n+        writer.addRestrictedInfo(method, content);\n+    }\n+\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/AbstractMemberWriter.java","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -160,0 +160,3 @@\n+    public final Content restrictedMark;\n+    public final Content restrictedMethods;\n+    public final Content restrictedPhrase;\n@@ -306,0 +309,3 @@\n+        restrictedMark = getContent(\"doclet.Restricted_Mark\");\n+        restrictedMethods = getContent(\"doclet.Restricted_Methods\");\n+        restrictedPhrase = getContent(\"doclet.Restricted\");\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/Contents.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -345,0 +345,9 @@\n+        \/\/ Restricted\n+        if (configuration.conditionalPages.contains(HtmlConfiguration.ConditionalPage.RESTRICTED)) {\n+            section = newHelpSection(contents.restrictedMethods, PageMode.RESTRICTED, subTOC);\n+            Content restrictedBody = getContent(\"doclet.help.restricted.body\",\n+                    links.createLink(DocPaths.RESTRICTED_LIST, resources.getText(\"doclet.Restricted_Methods\")));\n+            section.add(HtmlTree.P(restrictedBody));\n+            pageKindsSection.add(section);\n+        }\n+\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HelpWriter.java","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -71,0 +71,1 @@\n+import jdk.javadoc.internal.doclets.toolkit.util.RestrictedAPIListBuilder;\n@@ -142,0 +143,8 @@\n+    \/**\n+     * The collection of restricted methods, if any, to be displayed on the\n+     * restricted-list page, or null if the page should not be generated.\n+     * The page will not be generated if there are no restricted methods to be\n+     * documented.\n+     *\/\n+    protected RestrictedAPIListBuilder restrictedAPIListBuilder;\n+\n@@ -165,1 +174,2 @@\n-        CONSTANT_VALUES, DEPRECATED, EXTERNAL_SPECS, PREVIEW, SERIALIZED_FORM, SYSTEM_PROPERTIES, NEW\n+        CONSTANT_VALUES, DEPRECATED, EXTERNAL_SPECS, PREVIEW, RESTRICTED,\n+        SERIALIZED_FORM, SYSTEM_PROPERTIES, NEW\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlConfiguration.java","additions":11,"deletions":1,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -65,0 +65,1 @@\n+import jdk.javadoc.internal.doclets.toolkit.util.RestrictedAPIListBuilder;\n@@ -198,0 +199,5 @@\n+        RestrictedAPIListBuilder restrictedBuilder = new RestrictedAPIListBuilder(configuration);\n+        if (!restrictedBuilder.isEmpty()) {\n+            configuration.restrictedAPIListBuilder = restrictedBuilder;\n+            configuration.conditionalPages.add(HtmlConfiguration.ConditionalPage.RESTRICTED);\n+        }\n@@ -250,0 +256,1 @@\n+                HtmlConfiguration.ConditionalPage.RESTRICTED,\n@@ -256,0 +263,1 @@\n+                    case RESTRICTED -> writerFactory.newRestrictedListWriter();\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlDoclet.java","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2056,0 +2056,8 @@\n+    public void addRestrictedSummary(Element forWhat, Content target) {\n+        if (utils.isRestrictedAPI(forWhat)) {\n+            var div = HtmlTree.DIV(HtmlStyle.block);\n+            div.add(HtmlTree.SPAN(HtmlStyle.restrictedLabel, contents.restrictedPhrase));\n+            target.add(div);\n+        }\n+    }\n+\n@@ -2206,0 +2214,20 @@\n+    public void addRestrictedInfo(ExecutableElement forWhat, Content target) {\n+        if (utils.isRestrictedAPI(forWhat)) {\n+            \/\/in Java platform:\n+            var previewDiv = HtmlTree.DIV(HtmlStyle.restrictedBlock);\n+            previewDiv.setId(htmlIds.forRestrictedSection(forWhat));\n+            String name = forWhat.getSimpleName().toString();\n+            var nameCode = HtmlTree.CODE(Text.of(name));\n+            String leadingNoteKey = \"doclet.RestrictedLeadingNote\";\n+            Content leadingNote =\n+                    contents.getContent(leadingNoteKey, nameCode);\n+            previewDiv.add(HtmlTree.SPAN(HtmlStyle.restrictedLabel,\n+                    leadingNote));\n+            Content note1 = contents.getContent(\"doclet.RestrictedTrailingNote1\", nameCode);\n+            previewDiv.add(HtmlTree.DIV(HtmlStyle.restrictedComment, note1));\n+            Content note2 = contents.getContent(\"doclet.RestrictedTrailingNote2\", nameCode);\n+            previewDiv.add(HtmlTree.DIV(HtmlStyle.restrictedComment, note2));\n+            target.add(previewDiv);\n+        }\n+    }\n+\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlDocletWriter.java","additions":28,"deletions":0,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -492,0 +492,11 @@\n+    \/**\n+     * Returns an id for the \"restricted\" section for an executable element.\n+     *\n+     * @param el the executable element\n+     *\n+     * @return the id\n+     *\/\n+    public HtmlId forRestrictedSection(ExecutableElement el) {\n+        return HtmlId.of(\"restricted-\" + forMember(el).name());\n+    }\n+\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlIds.java","additions":11,"deletions":0,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+import java.util.function.Consumer;\n@@ -35,0 +36,1 @@\n+import javax.lang.model.element.ExecutableElement;\n@@ -45,0 +47,1 @@\n+import jdk.javadoc.internal.doclets.formats.html.markup.Entity;\n@@ -238,0 +241,1 @@\n+        ExecutableElement restrictedTarget;\n@@ -242,0 +246,1 @@\n+            restrictedTarget = null;\n@@ -244,0 +249,3 @@\n+            \/\/ We piggy back on whether to show preview info, for both preview AND\n+            \/\/ restricted methods superscripts. That's because when e.g. we are generating a\n+            \/\/ method summary we do not want either superscript.\n@@ -257,0 +265,5 @@\n+            if (flags.contains(ElementFlag.RESTRICTED)) {\n+                restrictedTarget = (ExecutableElement) linkInfo.getTargetMember();\n+            } else {\n+                restrictedTarget = null;\n+            }\n@@ -259,0 +272,1 @@\n+            restrictedTarget = null;\n@@ -272,0 +286,1 @@\n+                        Content spacer = Text.EMPTY;\n@@ -276,0 +291,7 @@\n+                            spacer = Entity.NO_BREAK_SPACE;\n+                        }\n+                        if (flags.contains(ElementFlag.RESTRICTED)) {\n+                            link.add(spacer);\n+                            link.add(HtmlTree.SUP(m_writer.links.createLink(\n+                                    filename.fragment(m_writer.htmlIds.forRestrictedSection(restrictedTarget).name()),\n+                                    m_writer.contents.restrictedMark)));\n@@ -286,0 +308,1 @@\n+                Content spacer = Text.EMPTY;\n@@ -292,0 +315,9 @@\n+                    spacer = Entity.NO_BREAK_SPACE;\n+                }\n+                if (flags.contains(ElementFlag.RESTRICTED)) {\n+                    link.add(spacer);\n+                    link.add(HtmlTree.SUP(m_writer.getCrossClassLink(\n+                            typeElement,\n+                            m_writer.htmlIds.forRestrictedSection(restrictedTarget).name(),\n+                            m_writer.contents.restrictedMark,\n+                            null, false)));\n@@ -298,0 +330,1 @@\n+        Content spacer = Text.EMPTY;\n@@ -300,0 +333,5 @@\n+            spacer = Entity.NO_BREAK_SPACE;\n+        }\n+        if (flags.contains(ElementFlag.RESTRICTED)) {\n+            link.add(spacer);\n+            link.add(HtmlTree.SUP(m_writer.contents.restrictedMark));\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlLinkFactory.java","additions":38,"deletions":0,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -112,0 +112,1 @@\n+                buildRestrictedInfo(methodContent);\n@@ -137,0 +138,9 @@\n+    \/**\n+     * Builds the restricted method info.\n+     *\n+     * @param target the content to which the documentation will be added\n+     *\/\n+    protected void buildRestrictedInfo(Content target) {\n+        addRestricted(currentMethod, target);\n+    }\n+\n@@ -218,0 +228,4 @@\n+    protected void addRestricted(ExecutableElement method, Content content) {\n+        addRestrictedInfo(method, content);\n+    }\n+\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/MethodWriter.java","additions":14,"deletions":0,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -94,0 +94,1 @@\n+        RESTRICTED,\n@@ -319,0 +320,1 @@\n+            case RESTRICTED:\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/Navigation.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,84 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.javadoc.internal.doclets.formats.html;\n+\n+import javax.lang.model.element.Element;\n+\n+import jdk.javadoc.internal.doclets.formats.html.Navigation.PageMode;\n+import jdk.javadoc.internal.doclets.toolkit.util.DocPaths;\n+import jdk.javadoc.internal.doclets.toolkit.util.IndexItem;\n+import jdk.javadoc.internal.doclets.toolkit.util.RestrictedAPIListBuilder;\n+\n+\/**\n+ * Generate File to list all the restricted methods with the\n+ * appropriate links.\n+ *\/\n+public class RestrictedListWriter extends SummaryListWriter<RestrictedAPIListBuilder> {\n+\n+    \/**\n+     * Constructor.\n+     *\n+     * @param configuration the configuration for this doclet\n+     *\/\n+    public RestrictedListWriter(HtmlConfiguration configuration) {\n+        super(configuration, DocPaths.RESTRICTED_LIST, configuration.restrictedAPIListBuilder);\n+        if (configuration.restrictedAPIListBuilder != null) {\n+            configuration.indexBuilder.add(IndexItem.of(IndexItem.Category.TAGS,\n+                    resources.getText(\"doclet.Restricted_Methods\"), path));\n+        }\n+    }\n+\n+    @Override\n+    protected PageMode getPageMode() {\n+        return PageMode.RESTRICTED;\n+    }\n+\n+    @Override\n+    protected String getDescription() {\n+        return \"restricted methods\";\n+    }\n+\n+    @Override\n+    protected boolean showContentsList() {\n+        \/\/ This list contains only methods, no need to show list of element kinds.\n+        return false;\n+    }\n+\n+    @Override\n+    protected Content getHeadContent() {\n+        return configuration.contents.restrictedMethods;\n+    }\n+\n+    @Override\n+    protected String getTitleKey() {\n+        return \"doclet.Window_Restricted_List\";\n+    }\n+\n+    @Override\n+    protected void addComments(Element e, Content desc) {\n+        addSummaryComment(e, desc);\n+    }\n+}\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/RestrictedListWriter.java","additions":84,"deletions":0,"binary":false,"changes":84,"status":"added"},{"patch":"@@ -116,0 +116,1 @@\n+        addRestrictedSummary(member, tdSummaryContent);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/SubWriterHolderWriter.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+import java.util.Arrays;\n@@ -141,2 +142,4 @@\n-        content.add(HtmlTree.HEADING_TITLE(Headings.CONTENT_HEADING, contents.contentsHeading));\n-        content.add(getContentsList());\n+        if (showContentsList()) {\n+            content.add(HtmlTree.HEADING_TITLE(Headings.CONTENT_HEADING, contents.contentsHeading));\n+            content.add(getContentsList());\n+        }\n@@ -187,0 +190,7 @@\n+    \/**\n+     * {@return {@code true} if the contents list should be generated, {@code false} if not}\n+     *\/\n+    protected boolean showContentsList() {\n+        return true;\n+    }\n+\n@@ -307,2 +317,2 @@\n-     * Subclasses allow the user to show or hide parts of the content in the page.\n-     * This method should be used to add the UI to select the visible page content.\n+     * Allow Subclasses to add a content selector UI such as a row of radio buttons\n+     * near the top of the page. This method does not add anything.\n@@ -312,1 +322,1 @@\n-    protected abstract void addContentSelectors(Content target);\n+    protected void addContentSelectors(Content target) {}\n@@ -315,2 +325,2 @@\n-     * Some subclasses of this class display an extra column in their element tables.\n-     * This methods allows them to return the content to show for {@code element}.\n+     * Allow subclasses to add an extra table column for an element.\n+     * This methods does not add any content by returning {@code null}.\n@@ -321,1 +331,3 @@\n-    protected abstract Content getExtraContent(Element element);\n+    protected Content getExtraContent(Element element) {\n+        return null;\n+    }\n@@ -355,1 +367,2 @@\n-     * Allow subclasses to add extra tabs to the element tables.\n+     * Allow subclasses to add extra tabs to the element tables. This method does not\n+     * add any tabs.\n@@ -360,1 +373,1 @@\n-    protected abstract void addTableTabs(Table<Element> table, String headingKey);\n+    protected void addTableTabs(Table<Element> table, String headingKey) {}\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/SummaryListWriter.java","additions":23,"deletions":10,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -173,0 +173,7 @@\n+    \/**\n+     * {@return a new writer for the list of restricted methods in this release}\n+     *\/\n+    public HtmlDocletWriter newRestrictedListWriter() {\n+        return new RestrictedListWriter(configuration);\n+    }\n+\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/WriterFactory.java","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -385,0 +385,16 @@\n+    \/**\n+     * The class for a block describing the \"restricted\" status of a declaration.\n+     *\/\n+    restrictedBlock,\n+\n+    \/**\n+     * The class for the details in a block describing the \"restricted\" status of a declaration.\n+     *\/\n+    restrictedComment,\n+\n+    \/**\n+     * The class for the \"Restricted\" label in a block describing the \"restricted\" status\n+     * of a declaration.\n+     *\/\n+    restrictedLabel,\n+\n@@ -819,0 +835,5 @@\n+    \/**\n+     * The class of the {@code body} element for the page listing restricted methods.\n+     *\/\n+    restrictedListPage,\n+\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/markup\/HtmlStyle.java","additions":21,"deletions":0,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -88,0 +88,1 @@\n+doclet.Window_Restricted_List=Restricted Method List\n@@ -132,0 +133,2 @@\n+doclet.Restricted_Methods=Restricted Methods\n+doclet.Restricted_Mark=RESTRICTED\n@@ -306,0 +309,3 @@\n+doclet.help.restricted.body=\\\n+    The {0} page lists all restricted methods. Restricted methods are unsafe, and, if used \\\n+    incorrectly, they might crash the JVM or result in memory corruption.\n@@ -413,0 +419,4 @@\n+doclet.RestrictedLeadingNote={0} is a restricted API of the Java platform.\n+doclet.RestrictedTrailingNote1=Programs can only use {0} when access to restricted method is enabled.\n+doclet.RestrictedTrailingNote2=Restricted methods are unsafe, and, if used incorrectly, they might crash \\\n+    the JVM or result in memory corruption.\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/standard.properties","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -651,1 +651,1 @@\n-.package-hierarchy-label, .type-name-label, .type-name-link, .search-tag-link, .preview-label {\n+.package-hierarchy-label, .type-name-label, .type-name-link, .search-tag-link, .preview-label, .restricted-label {\n@@ -654,1 +654,1 @@\n-.deprecation-comment, .help-footnote, .preview-comment {\n+.deprecation-comment, .help-footnote, .preview-comment, .restricted-comment {\n@@ -657,12 +657,1 @@\n-.deprecation-block {\n-    font-size:1em;\n-    font-family:var(--block-font-family);\n-    border-style:solid;\n-    border-width:thin;\n-    border-radius:10px;\n-    padding:10px;\n-    margin-bottom:10px;\n-    margin-right:10px;\n-    display:inline-block;\n-}\n-.preview-block {\n+.deprecation-block, .preview-block, .restricted-block {\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/stylesheet.css","additions":3,"deletions":14,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -432,0 +432,5 @@\n+    public boolean isRestrictedAPI(Element el) {\n+        Symbol sym = (Symbol) el;\n+        return sym.kind == MTH && (sym.flags() & Flags.RESTRICTED) != 0;\n+    }\n+\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/WorkArounds.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -216,0 +216,1 @@\n+doclet.Restricted=Restricted.\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/resources\/doclets.properties","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -151,0 +151,3 @@\n+    \/** The name of the file for restricted methods. *\/\n+    public static final DocPath RESTRICTED_LIST = DocPath.create(\"restricted-list.html\");\n+\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/DocPaths.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -0,0 +1,47 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.javadoc.internal.doclets.toolkit.util;\n+\n+import jdk.javadoc.internal.doclets.toolkit.BaseConfiguration;\n+\n+import javax.lang.model.element.Element;\n+\n+\/**\n+ * Build list of all the restricted methods.\n+ *\/\n+public class RestrictedAPIListBuilder extends SummaryAPIListBuilder {\n+\n+\n+    \/**\n+     * Constructor.\n+     *\n+     * @param configuration the current configuration of the doclet\n+     *\/\n+    public RestrictedAPIListBuilder(BaseConfiguration configuration) {\n+        super(configuration, configuration.utils::isRestrictedAPI);\n+        buildSummaryAPIInfo();\n+    }\n+}\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/RestrictedAPIListBuilder.java","additions":47,"deletions":0,"binary":false,"changes":47,"status":"added"},{"patch":"@@ -2743,0 +2743,10 @@\n+    \/**\n+     * Checks whether the given ExecutableElement should be marked as a restricted API.\n+     *\n+     * @param el the element to check\n+     * @return true if and only if the given element should be marked as a restricted API\n+     *\/\n+    public boolean isRestrictedAPI(Element el) {\n+        return configuration.workArounds.isRestrictedAPI(el);\n+    }\n+\n@@ -2756,0 +2766,4 @@\n+        if (el.getKind() == ElementKind.METHOD && configuration.workArounds.isRestrictedAPI((ExecutableElement)el)) {\n+            flags.add(ElementFlag.RESTRICTED);\n+        }\n+\n@@ -2769,1 +2783,2 @@\n-        PREVIEW\n+        PREVIEW,\n+        RESTRICTED\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/Utils.java","additions":16,"deletions":1,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -0,0 +1,173 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8316972\n+ * @summary Add javadoc support for restricted methods\n+ * @library \/tools\/lib ..\/..\/lib\n+ * @modules jdk.javadoc\/jdk.javadoc.internal.tool\n+ * @build toolbox.ToolBox javadoc.tester.*\n+ * @run main TestRestricted\n+ *\/\n+\n+import java.io.IOException;\n+import java.nio.file.Path;\n+\n+import javadoc.tester.JavadocTester;\n+import toolbox.ToolBox;\n+\n+public class TestRestricted extends JavadocTester {\n+\n+    public final ToolBox tb;\n+    public static void main(String... args) throws Exception {\n+        var tester = new TestRestricted();\n+        tester.runTests();\n+    }\n+\n+    public TestRestricted() {\n+        tb = new ToolBox();\n+    }\n+\n+    @Test\n+    public void testRestricted(Path base) throws IOException {\n+        var src = base.resolve(\"src\");\n+        tb.writeJavaFiles(src, \"\"\"\n+                   package pkg;\n+\n+                   import jdk.internal.javac.PreviewFeature;\n+                   import jdk.internal.javac.PreviewFeature.Feature;\n+                   import jdk.internal.javac.Restricted;\n+\n+                   \/**\n+                    * Interface containing restricted methods.\n+                    * @see #restrictedMethod()\n+                    * @see #restrictedPreviewMethod()\n+                    *\/\n+                   public interface I {\n+\n+                       \/**\n+                        * Restricted method.\n+                        *\/\n+                       @Restricted\n+                       public void restrictedMethod();\n+\n+                       \/**\n+                        * Restricted preview method.\n+                        *\/\n+                       @PreviewFeature(feature=Feature.TEST)\n+                       @Restricted\n+                       public int restrictedPreviewMethod();\n+                   }\n+                   \"\"\");\n+\n+        javadoc(\"--enable-preview\", \"-source\", System.getProperty(\"java.specification.version\"),\n+                \"--add-exports\", \"java.base\/jdk.internal.javac=ALL-UNNAMED\",\n+                \"-d\", base.resolve(\"api\").toString(),\n+                \"-sourcepath\", src.toString(),\n+                \"pkg\");\n+        checkExit(Exit.OK);\n+\n+        \/\/ Test restricted method note in class documentation\n+        checkOutput(\"pkg\/I.html\", true,\n+                \"\"\"\n+                <ul class=\"tag-list-long\">\n+                <li><a href=\"#restrictedMethod()\"><code>restrictedMethod()<\/code><\/a><sup><a href=\"\\\n+                #restricted-restrictedMethod()\">RESTRICTED<\/a><\/sup><\/li>\n+                <li><a href=\"#restrictedPreviewMethod()\"><code>restrictedPreviewMethod()<\/code><\/a>\\\n+                <sup><a href=\"#preview-restrictedPreviewMethod()\">PREVIEW<\/a><\/sup>&nbsp;<sup><a hr\\\n+                ef=\"#restricted-restrictedPreviewMethod()\">RESTRICTED<\/a><\/sup><\/li>\"\"\",\n+                        \"\"\"\n+                <div class=\"block\"><span class=\"restricted-label\">Restricted.<\/span><\/div>\n+                <div class=\"block\">Restricted method.<\/div>\"\"\",\n+                        \"\"\"\n+                <div class=\"block\"><span class=\"preview-label\">Preview.<\/span><\/div>\n+                <div class=\"block\"><span class=\"restricted-label\">Restricted.<\/span><\/div>\n+                <div class=\"block\">Restricted preview method.<\/div>\"\"\",\n+                        \"\"\"\n+                <h3>restrictedMethod<\/h3>\n+                <div class=\"member-signature\"><span class=\"modifiers\">sealed<\/span>&nbsp;<span clas\\\n+                s=\"return-type\">void<\/span>&nbsp;<span class=\"element-name\">restrictedMethod<\/span>\\\n+                ()<\/div>\n+                <div class=\"restricted-block\" id=\"restricted-restrictedMethod()\"><span class=\"restr\\\n+                icted-label\"><code>restrictedMethod<\/code> is a restricted API of the Java platform\\\n+                .<\/span>\n+                <div class=\"restricted-comment\">Programs can only use <code>restrictedMethod<\/code>\\\n+                 when access to restricted method is enabled.<\/div>\n+                <div class=\"restricted-comment\">Restricted methods are unsafe, and, if used incorre\\\n+                ctly, they might crash the JVM or result in memory corruption.<\/div>\n+                <\/div>\"\"\",\n+                        \"\"\"\n+                <h3>restrictedPreviewMethod<\/h3>\n+                <div class=\"member-signature\"><span class=\"modifiers\">sealed<\/span>&nbsp;<span clas\\\n+                s=\"return-type\">int<\/span>&nbsp;<span class=\"element-name\">restrictedPreviewMethod<\\\n+                \/span>()<\/div>\n+                <div class=\"preview-block\" id=\"preview-restrictedPreviewMethod()\"><span class=\"prev\\\n+                iew-label\"><code>restrictedPreviewMethod<\/code> is a preview API of the Java platfo\\\n+                rm.<\/span>\n+                <div class=\"preview-comment\">Programs can only use <code>restrictedPreviewMethod<\/c\\\n+                ode> when preview features are enabled.<\/div>\n+                <div class=\"preview-comment\">Preview features may be removed in a future release, o\\\n+                r upgraded to permanent features of the Java platform.<\/div>\n+                <\/div>\n+                <div class=\"restricted-block\" id=\"restricted-restrictedPreviewMethod()\"><span class\\\n+                =\"restricted-label\"><code>restrictedPreviewMethod<\/code> is a restricted API of the\\\n+                 Java platform.<\/span>\n+                <div class=\"restricted-comment\">Programs can only use <code>restrictedPreviewMethod\\\n+                <\/code> when access to restricted method is enabled.<\/div>\n+                <div class=\"restricted-comment\">Restricted methods are unsafe, and, if used incorre\\\n+                ctly, they might crash the JVM or result in memory corruption.<\/div>\n+                <\/div>\"\"\");\n+\n+        \/\/ Test link on index page\n+        checkOutput(\"index-all.html\", true,\n+                        \"\"\"\n+                <a href=\"restricted-list.html\">Restricted&nbsp;Methods<\/a>\"\"\");\n+\n+        \/\/ Test restricted methods list\n+        checkOutput(\"restricted-list.html\", true,\n+                \"\"\"\n+                <h1 title=\"Restricted Methods\" class=\"title\">Restricted Methods<\/h1>\n+                <\/div>\n+                <ul class=\"block-list\">\n+                <li>\n+                <div id=\"method\">\n+                <div class=\"caption\"><span>Methods<\/span><\/div>\n+                <div class=\"summary-table two-column-summary\">\n+                <div class=\"table-header col-first\">Method<\/div>\n+                <div class=\"table-header col-last\">Description<\/div>\n+                <div class=\"col-summary-item-name even-row-color\"><a href=\"pkg\/I.html#restrictedMet\\\n+                hod()\">pkg.I.restrictedMethod()<\/a><sup><a href=\"pkg\/I.html#restricted-restrictedMe\\\n+                thod()\">RESTRICTED<\/a><\/sup><\/div>\n+                <div class=\"col-last even-row-color\">\n+                <div class=\"block\">Restricted method.<\/div>\n+                <\/div>\n+                <div class=\"col-summary-item-name odd-row-color\"><a href=\"pkg\/I.html#restrictedPrev\\\n+                iewMethod()\">pkg.I.restrictedPreviewMethod()<\/a><sup><a href=\"pkg\/I.html#preview-re\\\n+                strictedPreviewMethod()\">PREVIEW<\/a><\/sup>&nbsp;<sup><a href=\"pkg\/I.html#restricted\\\n+                -restrictedPreviewMethod()\">RESTRICTED<\/a><\/sup><\/div>\n+                <div class=\"col-last odd-row-color\">\n+                <div class=\"block\">Restricted preview method.<\/div>\n+                <\/div>\"\"\");\n+    }\n+}\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testRestricted\/TestRestricted.java","additions":173,"deletions":0,"binary":false,"changes":173,"status":"added"},{"patch":"@@ -164,1 +164,1 @@\n-                    .deprecation-block {\n+                    .deprecation-block, .preview-block, .restricted-block {\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testStylesheet\/TestStylesheet.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}