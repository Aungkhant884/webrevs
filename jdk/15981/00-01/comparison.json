{"files":[{"patch":"@@ -29,0 +29,1 @@\n+import java.lang.StackWalker.StackFrame;\n@@ -40,0 +41,1 @@\n+import java.util.concurrent.atomic.AtomicReference;\n@@ -41,0 +43,1 @@\n+import java.util.function.Predicate;\n@@ -82,0 +85,3 @@\n+    static final StackWalker WALKER =\n+            StackWalker.getInstance(StackWalker.Option.RETAIN_CLASS_REFERENCE);\n+\n@@ -480,0 +486,6 @@\n+            AtomicReference<AssertionError> failed = new AtomicReference<>();\n+            Function<? super Flow.Subscriber<List<ByteBuffer>>, String> finisher = (s) -> {\n+                failed.set(checkThreadAndStack());\n+                return new String(bytes.get(), UTF_8);\n+            };\n+\n@@ -482,1 +494,1 @@\n-                                ins -> new String(bytes.get(), UTF_8)))\n+                                finisher))\n@@ -487,0 +499,2 @@\n+                var error = failed.get();\n+                if (error != null) throw error;\n@@ -493,0 +507,23 @@\n+    static final Predicate<StackFrame> DAT = sfe ->\n+            sfe.getClassName().startsWith(\"FlowAdapterSubscriberTest\");\n+    static final Predicate<StackFrame> JUC = sfe ->\n+            sfe.getClassName().startsWith(\"java.util.concurrent\");\n+    static final Predicate<StackFrame> JLT = sfe ->\n+            sfe.getClassName().startsWith(\"java.lang.Thread\");\n+    static final Predicate<StackFrame> RSP = sfe ->\n+            sfe.getClassName().startsWith(\"jdk.internal.net.http.ResponseSubscribers\");\n+    static final Predicate<StackFrame> NotDATorJUCorJLT = Predicate.not(DAT.or(JUC).or(JLT).or(RSP));\n+\n+\n+    AssertionError checkThreadAndStack() {\n+        System.out.println(\"Check stack trace\");\n+        List<StackFrame> otherFrames = WALKER.walk(s -> s.filter(NotDATorJUCorJLT).toList());\n+        if (!otherFrames.isEmpty()) {\n+            System.out.println(\"Found unexpected trace: \");\n+            otherFrames.forEach(f -> System.out.printf(\"\\t%s%n\", f));\n+            return new AssertionError(\"Dependant action has unexpected frame in \" +\n+                    Thread.currentThread() + \": \" + otherFrames.get(0));\n+        }\n+        return null;\n+    }\n+\n","filename":"test\/jdk\/java\/net\/httpclient\/FlowAdapterSubscriberTest.java","additions":38,"deletions":1,"binary":false,"changes":39,"status":"modified"}]}