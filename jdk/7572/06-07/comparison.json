{"files":[{"patch":"@@ -83,1 +83,3 @@\n-        for (int i = 0; i < BUFFER_SIZE; i++)  divmod(dividends[i], divisors[i], i);\n+        for (int i = 0; i < BUFFER_SIZE; i++) {\n+            divmod(dividends[i], divisors[i], i);\n+        }\n@@ -107,1 +109,1 @@\n-                throw new RuntimeException(\"Test failed\");\n+                throw new RuntimeException(errorMessage(mode, i, quo, rem));\n@@ -111,0 +113,16 @@\n+\n+    private String errorMessage(String mode, int i, int quo, int rem) {\n+        StringBuilder sb = new StringBuilder(mode);\n+        sb = sb.append(\" test error at index=\").append(i);\n+        sb = sb.append(\": dividend=\").append(dividends[i]);\n+        sb = sb.append(\"; divisor= \").append(divisors[i]);\n+        if (!mode.equals(\"remainderUnsigned\")) {\n+            sb = sb.append(\"; quotient (expected)= \").append(quo);\n+            sb = sb.append(\"; quotient (actual)= \").append(quotients[i]);\n+        }\n+        if (!mode.equals(\"divideUnsigned\")) {\n+            sb = sb.append(\"; remainder (expected)= \").append(rem);\n+            sb = sb.append(\"; remainder (actual)= \").append(remainders[i]);\n+        }\n+        return sb.toString();\n+    }\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/TestIntegerDivMod.java","additions":20,"deletions":2,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -83,1 +83,3 @@\n-        for (int i = 0; i < BUFFER_SIZE; i++)  divmod(dividends[i], divisors[i], i);\n+        for (int i = 0; i < BUFFER_SIZE; i++) {\n+            divmod(dividends[i], divisors[i], i);\n+        }\n@@ -104,1 +106,1 @@\n-                throw new RuntimeException(\"Test failed\");\n+                throw new RuntimeException(errorMessage(mode, i, quo, rem));\n@@ -109,0 +111,17 @@\n+    private String errorMessage(String mode, int i, long quo, long rem) {\n+        StringBuilder sb = new StringBuilder(mode);\n+        sb = sb.append(\" test error at index=\").append(i);\n+        sb = sb.append(\": dividend=\").append(dividends[i]);\n+        sb = sb.append(\"; divisor= \").append(divisors[i]);\n+        if (!mode.equals(\"remainderUnsigned\")) {\n+            sb = sb.append(\"; quotient (expected)= \").append(quo);\n+            sb = sb.append(\"; quotient (actual)= \").append(quotients[i]);\n+        }\n+        if (!mode.equals(\"divideUnsigned\")) {\n+            sb = sb.append(\"; remainder (expected)= \").append(rem);\n+            sb = sb.append(\"; remainder (actual)= \").append(remainders[i]);\n+        }\n+        return sb.toString();\n+    }\n+\n+\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/TestLongDivMod.java","additions":21,"deletions":2,"binary":false,"changes":23,"status":"modified"}]}