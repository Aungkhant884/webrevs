{"files":[{"patch":"@@ -371,1 +371,1 @@\n-  } else if (Arguments::is_interpreter_only()) {\n+  } else if (CompilerConfig::is_interpreter_only()) {\n","filename":"src\/hotspot\/share\/code\/codeCache.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -511,0 +511,4 @@\n+    if (SegmentedCodeCache) {\n+      warning(\"SegmentedCodeCache has no meaningful effect with -Xint\");\n+      FLAG_SET_DEFAULT(SegmentedCodeCache, false);\n+    }\n@@ -526,7 +530,0 @@\n-  \/\/ TieredStopAtLevel==0 allocates nmethod space in the code heap with\n-  \/\/ SegmentedCodeCache so only disallow the option for -Xint.\n-  if (Arguments::is_interpreter_only() && FLAG_IS_CMDLINE(SegmentedCodeCache)) {\n-    warning(\"SegmentedCodeCache has no meaningful effect with -Xint\");\n-    FLAG_SET_DEFAULT(SegmentedCodeCache, false);\n-  }\n-\n","filename":"src\/hotspot\/share\/compiler\/compilerDefinitions.cpp","additions":4,"deletions":7,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -69,3 +69,0 @@\n-                new CodeCacheCLITestCase(CodeCacheCLITestCase\n-                        .CommonDescriptions.TIERED_LEVEL_0.description,\n-                        GENERIC_RUNNER),\n","filename":"test\/hotspot\/jtreg\/compiler\/codecache\/cli\/codeheapsize\/TestCodeHeapSizeOptions.java","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -90,1 +90,1 @@\n-         * contain information about non-nmethods and non-profiled nmethods\n+         * warn about SegmentedCodeCache and contain information about all\n@@ -94,1 +94,1 @@\n-                EnumSet.of(BlobType.NonNMethod, BlobType.MethodNonProfiled),\n+                EnumSet.of(BlobType.All),\n","filename":"test\/hotspot\/jtreg\/compiler\/codecache\/cli\/common\/CodeCacheCLITestCase.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}