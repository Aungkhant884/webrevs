{"files":[{"patch":"@@ -1012,1 +1012,1 @@\n-                    && (if_ctrl->in(0)->is_MultiBranch() && if_ctrl->in(0)->Opcode() == Op_NeverBranch)) {\n+                    && if_ctrl->in(0)->is_NeverBranch()) {\n","filename":"src\/hotspot\/share\/gc\/g1\/c2\/g1BarrierSetC2.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1031,1 +1031,1 @@\n-                      && (if_ctrl->in(0)->is_MultiBranch() && if_ctrl->in(0)->Opcode() == Op_NeverBranch)) {\n+                      && if_ctrl->in(0)->is_NeverBranch()) {\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/c2\/shenandoahBarrierSetC2.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -760,1 +760,1 @@\n-      } else if (c->Opcode() == Op_CProj && next->Opcode() == Op_NeverBranch) {\n+      } else if (c->Opcode() == Op_CProj && next->is_NeverBranch()) {\n@@ -2005,1 +2005,1 @@\n-    if (in != NULL && in->Opcode() == Op_Halt && in->in(0)->is_Proj() && in->in(0)->in(0)->Opcode() == Op_NeverBranch) {\n+    if (in != NULL && in->Opcode() == Op_Halt && in->in(0)->is_Proj() && in->in(0)->in(0)->isNeverBranch()) {\n@@ -2036,1 +2036,1 @@\n-              assert(r->in(j)->Opcode() != Op_NeverBranch, \"\");\n+              assert(!r->in(j)->is_NeverBranch(), \"\");\n@@ -2042,1 +2042,1 @@\n-            assert(in->is_CallStaticJava() || in->Opcode() == Op_NeverBranch || in->Opcode() == Op_Catch || proj->is_IfProj(), \"\");\n+            assert(in->is_CallStaticJava() || in->is_NeverBranch() || in->Opcode() == Op_Catch || proj->is_IfProj(), \"\");\n@@ -2049,1 +2049,1 @@\n-            } else if (in->Opcode() == Op_NeverBranch) {\n+            } else if (in->is_NeverBranch()) {\n@@ -2521,1 +2521,1 @@\n-                     !(u->Opcode() == Op_CProj && u->in(0)->Opcode() == Op_NeverBranch && u->as_Proj()->_con == 1)) {\n+                     !(u->Opcode() == Op_CProj && u->in(0)->is_NeverBranch() && u->as_Proj()->_con == 1)) {\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/c2\/shenandoahSupport.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -625,6 +625,5 @@\n-  int taken_idx = b->get_node(end_idx+1)->as_Proj()->_con;\n-  ProjNode* alwaysTaken = b->get_node(end_idx + 1 + taken_idx)->as_Proj();\n-  ProjNode* neverTaken  = b->get_node(end_idx + 2 - taken_idx)->as_Proj();\n-  assert(alwaysTaken->_con == 0 && neverTaken->_con == 1, \"correct projection constants\");\n-  \/\/ if alwaysTaken projects into _succs[0], dead_idx == 1\n-  int dead_idx = b->_succs[0]->get_node(0) == alwaysTaken->unique_ctrl_out_or_null();\n+  NeverBranchNode* never_branch = b->get_node(end_idx)->as_NeverBranch();\n+  ProjNode* proj_always = never_branch->proj_out(0);\n+  ProjNode* proj_never  = never_branch->proj_out(1);\n+  \/\/ if proj_always projects into _succs[0], dead_idx == 1\n+  int dead_idx = b->_succs[0]->get_node(0) == proj_always->unique_ctrl_out_or_null();\n@@ -633,2 +632,2 @@\n-  assert(alwaysTaken->unique_ctrl_out_or_null() == succ->get_node(0), \"alwaysTaken leads to succ block\");\n-  assert(neverTaken->unique_ctrl_out_or_null() == dead->get_node(0), \"neverTaken leads to dead block\");\n+  assert(proj_always->unique_ctrl_out_or_null() == succ->get_node(0), \"proj_always leads to succ block\");\n+  assert(proj_never->unique_ctrl_out_or_null() == dead->get_node(0), \"proj_never leads to dead block\");\n@@ -751,1 +750,1 @@\n-    if (block->get_node(block->end_idx())->Opcode() == Op_NeverBranch) {\n+    if (block->get_node(block->end_idx())->is_NeverBranch()) {\n","filename":"src\/hotspot\/share\/opto\/block.cpp","additions":8,"deletions":9,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -594,1 +594,4 @@\n-  NeverBranchNode( Node *ctrl ) : MultiBranchNode(1) { init_req(0,ctrl); }\n+  NeverBranchNode( Node *ctrl ) : MultiBranchNode(1) {\n+    init_req(0,ctrl);\n+    init_class_id(Class_NeverBranch);\n+  }\n","filename":"src\/hotspot\/share\/opto\/cfgnode.hpp","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -1445,1 +1445,1 @@\n-  if (head->unique_ctrl_out()->Opcode() == Op_NeverBranch) {\n+  if (head->unique_ctrl_out()->is_NeverBranch()) {\n","filename":"src\/hotspot\/share\/opto\/loopPredicate.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -4211,1 +4211,1 @@\n-    } else if (n->Opcode() == Op_NeverBranch) {\n+    } else if (n->is_NeverBranch()) {\n@@ -4213,1 +4213,1 @@\n-      ProjNode* proj = n->as_Multi()->proj_out_or_null(0);\n+      ProjNode* proj = n->as_NeverBranch()->proj_out_or_null(0);\n","filename":"src\/hotspot\/share\/opto\/loopnode.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -795,2 +795,2 @@\n-      if (u->Opcode() == Op_NeverBranch) {\n-        u = ((NeverBranchNode*)u)->proj_out(0);\n+      if (u->is_NeverBranch()) {\n+        u = u->as_NeverBranch()->proj_out(0);\n@@ -979,1 +979,1 @@\n-            assert(get_loop(lca)->_nest < n_loop->_nest || lca->in(0)->Opcode() == Op_NeverBranch, \"must not be moved into inner loop\");\n+            assert(get_loop(lca)->_nest < n_loop->_nest || lca->in(0)->is_NeverBranch(), \"must not be moved into inner loop\");\n@@ -1184,1 +1184,1 @@\n-        (dom->Opcode() == Op_NeverBranch && loop->is_member(get_loop(dom->in(0))))) {\n+        (dom->is_NeverBranch() && loop->is_member(get_loop(dom->in(0))))) {\n","filename":"src\/hotspot\/share\/opto\/loopopts.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -925,0 +925,1 @@\n+  DEFINE_CLASS_QUERY(NeverBranch)\n","filename":"src\/hotspot\/share\/opto\/node.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n- * @run main\/othervm -Xcomp -Xbatch -XX:-TieredCompilation -XX:PerMethodTrapLimit=0\n+ * @run main\/othervm -Xcomp -XX:-TieredCompilation -XX:PerMethodTrapLimit=0\n@@ -38,1 +38,1 @@\n- * @run main\/othervm -Xcomp -Xbatch -XX:-TieredCompilation -XX:PerMethodTrapLimit=0\n+ * @run main\/othervm -Xcomp -XX:-TieredCompilation -XX:PerMethodTrapLimit=0\n@@ -48,0 +48,1 @@\n+\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/TestPhaseCFGNeverBranchToGotoMain.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"}]}