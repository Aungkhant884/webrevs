{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -105,1 +105,9 @@\n-  \/\/ Check LogOption and warn\n+  const char* level;\n+  if (is_c1(this->directive())) {\n+    level = \"c1\";\n+  } else if (is_c2(this->directive())) {\n+    level = \"c2\";\n+  } else {\n+    ShouldNotReachHere();\n+  }\n+\n@@ -107,1 +115,1 @@\n-    st->print_cr(\"Warning:  +LogCompilation must be set to enable compilation logging from directives\");\n+    st->print_cr(\"Warning: %s: +LogCompilation must be set to enable compilation logging from directives\", level);\n@@ -110,1 +118,1 @@\n-    warning(\"printing of assembly code is enabled; turning on DebugNonSafepoints to gain additional output\");\n+    warning(\"%s: printing of assembly code is enabled; turning on DebugNonSafepoints to gain additional output\", level);\n@@ -188,0 +196,8 @@\n+bool DirectiveSet::is_c1(CompilerDirectives* directive) {\n+  return this == directive->_c1_store;\n+}\n+\n+bool DirectiveSet::is_c2(CompilerDirectives* directive) {\n+  return this == directive->_c2_store;\n+}\n+\n","filename":"src\/hotspot\/share\/compiler\/compilerDirectives.cpp","additions":20,"deletions":4,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -131,0 +131,2 @@\n+  bool is_c1(CompilerDirectives* directive);\n+  bool is_c2(CompilerDirectives* directive);\n","filename":"src\/hotspot\/share\/compiler\/compilerDirectives.hpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"}]}