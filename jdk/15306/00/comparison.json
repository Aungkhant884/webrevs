{"files":[{"patch":"@@ -194,4 +194,12 @@\n-    s->_all_mallocs = _all_mallocs;\n-    for (int index = 0; index < mt_number_of_types; index ++) {\n-      s->_malloc[index] = _malloc[index];\n-    }\n+    size_t total_size;\n+    size_t loop_counter = 0;\n+    const size_t loop_limit = 100;\n+    do {\n+      total_size = 0;\n+      s->_all_mallocs = _all_mallocs;\n+      for (int index = 0; index < mt_number_of_types; index ++) {\n+        s->_malloc[index] = _malloc[index];\n+        total_size += _malloc[index].malloc_size();\n+      }\n+    } while(s->_all_mallocs.size() != total_size && ++loop_counter < loop_limit);\n+    assert(s->_all_mallocs.size() == total_size, \"Total != sum of parts\");\n","filename":"src\/hotspot\/share\/services\/mallocTracker.hpp","additions":12,"deletions":4,"binary":false,"changes":16,"status":"modified"}]}