{"files":[{"patch":"@@ -2435,0 +2435,13 @@\n+const bool Matcher::match_rule_supported_superword(int opcode, int vlen, BasicType bt) {\n+  if (UseSVE == 0) {\n+    \/\/ ConvD2I and ConvL2F are not profitable to be vectorized on NEON, because no direct\n+    \/\/ NEON instructions support them. But the match rule support for them is profitable for\n+    \/\/ Vector API intrinsics.\n+    if ((opcode == Op_VectorCastD2X && bt == T_INT) ||\n+        (opcode == Op_VectorCastL2X && bt == T_FLOAT)) {\n+      return false;\n+    }\n+  }\n+  return match_rule_supported_vector(opcode, vlen, bt);\n+}\n+\n@@ -2474,0 +2487,1 @@\n+    case Op_VectorLongToMask:\n@@ -11369,1 +11383,1 @@\n-            \"msubw($dst, rscratch1, $src2, $src1\" %}\n+            \"msubw  $dst, rscratch1, $src2, $src1\" %}\n@@ -11382,1 +11396,1 @@\n-            \"msub($dst, rscratch1, $src2, $src1\" %}\n+            \"msub   $dst, rscratch1, $src2, $src1\" %}\n@@ -11388,0 +11402,64 @@\n+\/\/ Unsigned Integer Divide\n+\n+instruct UdivI_reg_reg(iRegINoSp dst, iRegIorL2I src1, iRegIorL2I src2) %{\n+  match(Set dst (UDivI src1 src2));\n+\n+  ins_cost(INSN_COST * 19);\n+  format %{ \"udivw  $dst, $src1, $src2\" %}\n+\n+  ins_encode %{\n+    __ udivw($dst$$Register, $src1$$Register, $src2$$Register);\n+  %}\n+\n+  ins_pipe(idiv_reg_reg);\n+%}\n+\n+\/\/  Unsigned Long Divide\n+\n+instruct UdivL_reg_reg(iRegLNoSp dst, iRegL src1, iRegL src2) %{\n+  match(Set dst (UDivL src1 src2));\n+\n+  ins_cost(INSN_COST * 35);\n+  format %{ \"udiv   $dst, $src1, $src2\" %}\n+\n+  ins_encode %{\n+    __ udiv($dst$$Register, $src1$$Register, $src2$$Register);\n+  %}\n+\n+  ins_pipe(ldiv_reg_reg);\n+%}\n+\n+\/\/ Unsigned Integer Remainder\n+\n+instruct UmodI_reg_reg(iRegINoSp dst, iRegIorL2I src1, iRegIorL2I src2) %{\n+  match(Set dst (UModI src1 src2));\n+\n+  ins_cost(INSN_COST * 22);\n+  format %{ \"udivw  rscratch1, $src1, $src2\\n\\t\"\n+            \"msubw  $dst, rscratch1, $src2, $src1\" %}\n+\n+  ins_encode %{\n+    __ udivw(rscratch1, $src1$$Register, $src2$$Register);\n+    __ msubw($dst$$Register, rscratch1, $src2$$Register, $src1$$Register);\n+  %}\n+\n+  ins_pipe(idiv_reg_reg);\n+%}\n+\n+\/\/ Unsigned Long Remainder\n+\n+instruct UModL_reg_reg(iRegLNoSp dst, iRegL src1, iRegL src2) %{\n+  match(Set dst (UModL src1 src2));\n+\n+  ins_cost(INSN_COST * 38);\n+  format %{ \"udiv   rscratch1, $src1, $src2\\n\"\n+            \"msub   $dst, rscratch1, $src2, $src1\" %}\n+\n+  ins_encode %{\n+    __ udiv(rscratch1, $src1$$Register, $src2$$Register);\n+    __ msub($dst$$Register, rscratch1, $src2$$Register, $src1$$Register);\n+  %}\n+\n+  ins_pipe(ldiv_reg_reg);\n+%}\n+\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64.ad","additions":80,"deletions":2,"binary":false,"changes":82,"status":"modified"},{"patch":"@@ -2812,1 +2812,3 @@\n-  _g1h->rem_set()->print_periodic_summary_info(\"Before GC RS summary\", _g1h->total_collections());\n+  _g1h->rem_set()->print_periodic_summary_info(\"Before GC RS summary\",\n+                                               _g1h->total_collections(),\n+                                               true \/* show_thread_times *\/);\n@@ -2821,1 +2823,3 @@\n-  _g1h->rem_set()->print_periodic_summary_info(\"After GC RS summary\", _g1h->total_collections() - 1);\n+  _g1h->rem_set()->print_periodic_summary_info(\"After GC RS summary\",\n+                                               _g1h->total_collections() - 1,\n+                                               false \/* show_thread_times *\/);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.cpp","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1147,0 +1147,10 @@\n+        TextTree format = tree.getFormat();\n+        if (format != null) {\n+            String f = format.getBody().toString();\n+            long count = format.getBody().toString().chars()\n+                    .filter(ch -> ch == '%')\n+                    .count();\n+            if (count != 1) {\n+                env.messages.error(REFERENCE, format, \"dc.value.bad.format\", f);\n+            }\n+        }\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclint\/Checker.java","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -605,2 +605,0 @@\n-security\/infra\/java\/security\/cert\/CertPathValidator\/certification\/ActalisCA.java  8224768 generic-all\n-\n@@ -685,1 +683,0 @@\n-javax\/swing\/JTable\/8236907\/LastVisibleRow.java 8284619 macosx-all\n","filename":"test\/jdk\/ProblemList.txt","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"}]}