{"files":[{"patch":"@@ -4457,0 +4457,10 @@\n+operand immI_positive()\n+%{\n+  predicate(n->get_int() > 0);\n+  match(ConI);\n+\n+  op_cost(0);\n+  format %{ %}\n+  interface(CONST_INTER);\n+%}\n+\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64.ad","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2351,0 +2351,6 @@\n+  \/\/ The CollectedHeap API requires us to not fail for any given address within\n+  \/\/ the heap. HeapRegion::block_start() has been optimized to not accept addresses\n+  \/\/ outside of the allocated area.\n+  if (addr >= hr->top()) {\n+    return nullptr;\n+  }\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.cpp","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -36,0 +36,1 @@\n+import java.util.Iterator;\n@@ -50,0 +51,1 @@\n+import javax.lang.model.element.RecordComponentElement;\n@@ -247,2 +249,4 @@\n-                checkParamsDocumented(ee.getTypeParameters());\n-                checkParamsDocumented(ee.getParameters());\n+                if (!isCanonicalRecordConstructor(ee)) {\n+                    checkParamsDocumented(ee.getTypeParameters());\n+                    checkParamsDocumented(ee.getParameters());\n+                }\n@@ -266,0 +270,25 @@\n+    private boolean isCanonicalRecordConstructor(ExecutableElement ee) {\n+        TypeElement te = (TypeElement) ee.getEnclosingElement();\n+        if (te.getKind() != ElementKind.RECORD) {\n+            return false;\n+        }\n+        List<? extends RecordComponentElement> stateComps = te.getRecordComponents();\n+        List<? extends VariableElement> params = ee.getParameters();\n+        if (stateComps.size() != params.size()) {\n+            return false;\n+        }\n+\n+        Iterator<? extends RecordComponentElement> stateIter = stateComps.iterator();\n+        Iterator<? extends VariableElement> paramIter = params.iterator();\n+        while (paramIter.hasNext() && stateIter.hasNext()) {\n+            VariableElement param = paramIter.next();\n+            RecordComponentElement comp = stateIter.next();\n+            if (!Objects.equals(param.getSimpleName(), comp.getSimpleName())\n+                    || !env.types.isSameType(param.asType(), comp.asType())) {\n+                return false;\n+            }\n+        }\n+\n+        return true;\n+    }\n+\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclint\/Checker.java","additions":31,"deletions":2,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -499,0 +499,1 @@\n+java\/lang\/ref\/OOMEInReferenceHandler.java                       8066859 generic-all\n@@ -755,0 +756,1 @@\n+jdk\/jfr\/api\/consumer\/recordingstream\/TestOnEvent.java           8255404 linux-x64\n","filename":"test\/jdk\/ProblemList.txt","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"}]}