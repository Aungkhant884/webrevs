{"files":[{"patch":"@@ -443,0 +443,1 @@\n+          \"-XDLOG_LEVEL=$(LOG_LEVEL)\" \\\n@@ -466,1 +467,1 @@\n-    $$($1_MODFILELIST):  $$($1_SRCS) $$($1_DEPENDS) \\\n+    $$($1_MODFILELIST): $$($1_SRCS) $$($1_DEPENDS) \\\n","filename":"make\/common\/JavaCompilation.gmk","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -124,0 +124,1 @@\n+import java.util.stream.StreamSupport;\n@@ -150,0 +151,2 @@\n+            String logLevel = options.get(\"LOG_LEVEL\");\n+            boolean debug = \"trace\".equals(logLevel) || \"debug\".equals(logLevel);\n@@ -168,1 +171,2 @@\n-                                                                         noApiChange));\n+                                                                         noApiChange,\n+                                                                         debug));\n@@ -255,1 +259,2 @@\n-            Path internalAPIDigestFile, AtomicBoolean noApiChange) {\n+            Path internalAPIDigestFile, AtomicBoolean noApiChange,\n+            boolean debug) {\n@@ -308,0 +313,19 @@\n+        if (debug) {\n+            long allJavaInputs = StreamSupport.stream(fileObjects.spliterator(), false).count();\n+            String module = StreamSupport.stream(fileObjects.spliterator(), false)\n+                         .map(fo -> fo.toUri().toString())\n+                         .filter(path -> path.contains(\"\/share\/classes\/\"))\n+                         .map(path -> path.substring(0, path.indexOf(\"\/share\/classes\/\")))\n+                         .map(path -> path.substring(path.lastIndexOf(\"\/\") + 1))\n+                         .findAny()\n+                         .orElseGet(() -> \"unknown\");\n+            String nonJavaModifiedFiles = modified.stream()\n+                                                  .filter(f -> !StringUtils.toLowerCase(f)\n+                                                                           .endsWith(\".java\"))\n+                                                  .collect(Collectors.joining(\", \"));\n+            System.err.println(\"compiling module: \" + module +\n+                               \", all Java inputs: \" + allJavaInputs +\n+                               \", modified files (Java or non-Java): \" + modified.size() +\n+                               \", full recompile: \" + fullRecompile +\n+                               \", non-Java modified files: \" + nonJavaModifiedFiles);\n+        }\n@@ -861,0 +885,1 @@\n+        private final boolean debug;\n@@ -865,1 +890,2 @@\n-                                         AtomicBoolean noApiChange) {\n+                                         AtomicBoolean noApiChange,\n+                                         boolean debug) {\n@@ -870,0 +896,1 @@\n+            this.debug = debug;\n@@ -880,1 +907,2 @@\n-                                                noApiChange);\n+                                                noApiChange,\n+                                                debug);\n","filename":"make\/jdk\/src\/classes\/build\/tools\/depend\/Depend.java","additions":32,"deletions":4,"binary":false,"changes":36,"status":"modified"}]}