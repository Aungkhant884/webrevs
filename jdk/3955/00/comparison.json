{"files":[{"patch":"@@ -433,1 +433,1 @@\n-    if( op2 == Op_SubL && in1->in(1) == in1->in(2) ) {\n+    if( op2 == Op_SubL && in1->in(1) == in2->in(2) ) {\n@@ -444,1 +444,1 @@\n-  if( op1 == Op_SubL && phase->type(in1->in(1)) == TypeInt::ZERO )\n+  if( op1 == Op_SubL && phase->type(in1->in(1)) == TypeLong::ZERO )\n@@ -447,10 +447,0 @@\n-  \/\/ Convert \"X+X+X+X+X...+X+Y\" into \"k*X+Y\" or really convert \"X+(X+Y)\"\n-  \/\/ into \"(X<<1)+Y\" and let shift-folding happen.\n-  if( op2 == Op_AddL &&\n-      in2->in(1) == in1 &&\n-      op1 != Op_ConL &&\n-      0 ) {\n-    Node *shift = phase->transform(new LShiftLNode(in1,phase->intcon(1)));\n-    return new AddLNode(shift,in2->in(2));\n-  }\n-\n","filename":"src\/hotspot\/share\/opto\/addnode.cpp","additions":2,"deletions":12,"binary":false,"changes":14,"status":"modified"}]}