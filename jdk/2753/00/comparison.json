{"files":[{"patch":"@@ -450,0 +450,3 @@\n+  if (buflen == 0) {\n+    return buf;\n+  }\n@@ -462,0 +465,3 @@\n+  if (buflen == 0) {\n+    return buf;\n+  }\n","filename":"src\/hotspot\/share\/utilities\/utf8.cpp","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -28,1 +28,16 @@\n-TEST(utf8, length) {\n+static void stamp(char* p, size_t len) {\n+  if (len > 0) {\n+    ::memset(p, 'A', len);\n+  }\n+}\n+\n+static bool test_stamp(const char* p, size_t len) {\n+  for (const char* q = p; q < p + len; q++) {\n+    if (*q != 'A') {\n+      return false;\n+    }\n+  }\n+  return true;\n+}\n+\n+TEST_VM(utf8, jchar_length) {\n@@ -38,0 +53,1 @@\n+  stamp(res, sizeof(res));\n@@ -40,0 +56,1 @@\n+  ASSERT_TRUE(test_stamp(res + 10, sizeof(res) - 10));\n@@ -41,0 +58,1 @@\n+  stamp(res, sizeof(res));\n@@ -43,0 +61,1 @@\n+  ASSERT_TRUE(test_stamp(res + 18, sizeof(res) - 18));\n@@ -44,0 +63,1 @@\n+  stamp(res, sizeof(res));\n@@ -46,0 +66,1 @@\n+  ASSERT_TRUE(test_stamp(res + 20, sizeof(res) - 20));\n@@ -50,0 +71,34 @@\n+\n+  \/\/ Test that we do not overflow the output buffer\n+  for (int i = 0; i < 10; i ++) {\n+    stamp(res, sizeof(res));\n+    UNICODE::as_utf8(str, 19, res, i);\n+    EXPECT_TRUE(test_stamp(res + i, sizeof(res) - i));\n+  }\n+\n+}\n+\n+TEST_VM(utf8, jbyte_length) {\n+  char res[60];\n+  jbyte str[20];\n+\n+  for (int i = 0; i < 19; i++) {\n+    str[i] = 0x42;\n+  }\n+  str[19] = '\\0';\n+\n+  stamp(res, sizeof(res));\n+  UNICODE::as_utf8(str, 19, res, 10);\n+  ASSERT_EQ(strlen(res), (size_t) 9) << \"string should be truncated here\";\n+  ASSERT_TRUE(test_stamp(res + 10, sizeof(res) - 10));\n+\n+  UNICODE::as_utf8(str, 19, res, INT_MAX);\n+  ASSERT_EQ(strlen(res), (size_t) 19) << \"string should end here\";\n+\n+  \/\/ Test that we do not overflow the output buffer\n+  for (int i = 0; i < 10; i ++) {\n+    stamp(res, sizeof(res));\n+    UNICODE::as_utf8(str, 19, res, i);\n+    EXPECT_TRUE(test_stamp(res + i, sizeof(res) - i));\n+  }\n+\n","filename":"test\/hotspot\/gtest\/utilities\/test_utf8.cpp","additions":56,"deletions":1,"binary":false,"changes":57,"status":"modified"}]}