{"files":[{"patch":"@@ -8905,0 +8905,33 @@\n+instruct castVVD(vecD dst)\n+%{\n+  match(Set dst (CastVV dst));\n+\n+  size(0);\n+  format %{ \"# castVV of $dst\" %}\n+  ins_encode(\/* empty encoding *\/);\n+  ins_cost(0);\n+  ins_pipe(pipe_class_empty);\n+%}\n+\n+instruct castVVX(vecX dst)\n+%{\n+  match(Set dst (CastVV dst));\n+\n+  size(0);\n+  format %{ \"# castVV of $dst\" %}\n+  ins_encode(\/* empty encoding *\/);\n+  ins_cost(0);\n+  ins_pipe(pipe_class_empty);\n+%}\n+\n+instruct castVV(vReg dst)\n+%{\n+  match(Set dst (CastVV dst));\n+\n+  size(0);\n+  format %{ \"# castVV of $dst\" %}\n+  ins_encode(\/* empty encoding *\/);\n+  ins_cost(0);\n+  ins_pipe(pipe_class_empty);\n+%}\n+\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64.ad","additions":33,"deletions":0,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -5310,0 +5310,16 @@\n+instruct castVVD( vecD dst ) %{\n+  match(Set dst (CastVV dst));\n+  format %{ \"! castVV of $dst\" %}\n+  ins_encode( \/*empty encoding*\/ );\n+  ins_cost(0);\n+  ins_pipe(empty);\n+%}\n+\n+instruct castVVX( vecX dst ) %{\n+  match(Set dst (CastVV dst));\n+  format %{ \"! castVV of $dst\" %}\n+  ins_encode( \/*empty encoding*\/ );\n+  ins_cost(0);\n+  ins_pipe(empty);\n+%}\n+\n","filename":"src\/hotspot\/cpu\/arm\/arm.ad","additions":16,"deletions":0,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -10471,0 +10471,16 @@\n+instruct castVV8(iRegLdst dst) %{\n+  match(Set dst (CastVV dst));\n+  format %{ \" -- \\t\/\/ castVV of $dst\" %}\n+  size(0);\n+  ins_encode( \/*empty*\/ );\n+  ins_pipe(pipe_class_default);\n+%}\n+\n+instruct castVV16(vecX dst) %{\n+  match(Set dst (CastVV dst));\n+  format %{ \" -- \\t\/\/ castVV of $dst\" %}\n+  size(0);\n+  ins_encode( \/*empty*\/ );\n+  ins_pipe(pipe_class_default);\n+%}\n+\n","filename":"src\/hotspot\/cpu\/ppc\/ppc.ad","additions":16,"deletions":0,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -5385,0 +5385,8 @@\n+instruct castVV(iRegL dst) %{\n+  match(Set dst (CastVV dst));\n+  size(0);\n+  format %{ \"# castVV of $dst\" %}\n+  ins_encode(\/*empty*\/);\n+  ins_pipe(pipe_class_dummy);\n+%}\n+\n","filename":"src\/hotspot\/cpu\/s390\/s390.ad","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -8058,0 +8058,22 @@\n+\n+instruct castVV(vec dst)\n+%{\n+  match(Set dst (CastVV dst));\n+\n+  size(0);\n+  format %{ \"# castVV of $dst\" %}\n+  ins_encode(\/* empty encoding *\/);\n+  ins_cost(0);\n+  ins_pipe(empty);\n+%}\n+\n+instruct castVVLeg(legVec dst)\n+%{\n+  match(Set dst (CastVV dst));\n+\n+  size(0);\n+  format %{ \"# castVV of $dst\" %}\n+  ins_encode(\/* empty encoding *\/);\n+  ins_cost(0);\n+  ins_pipe(empty);\n+%}\n","filename":"src\/hotspot\/cpu\/x86\/x86.ad","additions":22,"deletions":0,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -767,0 +767,5 @@\n+       !strcmp(_matrule->_rChild->_opType,\"CastDD\")       ||\n+       !strcmp(_matrule->_rChild->_opType,\"CastFF\")       ||\n+       !strcmp(_matrule->_rChild->_opType,\"CastII\")       ||\n+       !strcmp(_matrule->_rChild->_opType,\"CastLL\")       ||\n+       !strcmp(_matrule->_rChild->_opType,\"CastVV\")       ||\n","filename":"src\/hotspot\/share\/adlc\/formssel.cpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -138,0 +138,11 @@\n+class CastVVNode: public ConstraintCastNode {\n+public:\n+  CastVVNode(Node* n, const Type* t, bool carry_dependency = false)\n+          : ConstraintCastNode(n, t, carry_dependency){\n+    init_class_id(Class_CastVV);\n+  }\n+  virtual int Opcode() const;\n+  virtual uint ideal_reg() const { return in(1)->ideal_reg(); }\n+};\n+\n+\n","filename":"src\/hotspot\/share\/opto\/castnode.hpp","additions":11,"deletions":0,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -68,0 +68,1 @@\n+macro(CastVV)\n","filename":"src\/hotspot\/share\/opto\/classes.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1522,0 +1522,2 @@\n+                } else if (in_t->isa_vect()) {\n+                  cast = new CastVVNode(in, in_t, true);\n","filename":"src\/hotspot\/share\/opto\/loopopts.cpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -61,0 +61,1 @@\n+class CastVVNode;\n@@ -696,0 +697,1 @@\n+        DEFINE_CLASS_ID(CastVV, ConstraintCast, 5)\n","filename":"src\/hotspot\/share\/opto\/node.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"}]}