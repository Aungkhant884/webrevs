{"files":[{"patch":"@@ -33,0 +33,2 @@\n+import java.lang.StackWalker.*;\n+import java.util.stream.Collectors;\n@@ -48,1 +50,0 @@\n-\n@@ -50,1 +51,1 @@\n-final class JceSecurityManager extends SecurityManager {\n+final class JceSecurityManager {\n@@ -75,0 +76,1 @@\n+\n@@ -86,0 +88,1 @@\n+\n@@ -103,1 +106,6 @@\n-        Class<?>[] context = getClassContext();\n+        final List<StackFrame> stack = AccessController.doPrivileged(\n+                (PrivilegedAction<List<StackFrame>>)\n+                        () -> StackWalker.getInstance(\n+                                Option.RETAIN_CLASS_REFERENCE)\n+                                .walk((s) -> s.collect(Collectors.toList())));\n+\n@@ -105,3 +113,2 @@\n-        int i;\n-        for (i=0; i<context.length; i++) {\n-            Class<?> cls = context[i];\n+        for (StackFrame stackFrame : stack) {\n+            Class<?> cls = stackFrame.getDeclaringClass();\n@@ -121,1 +128,1 @@\n-        if (i == context.length) {\n+        if (callerCodeBase == null) {\n@@ -236,2 +243,7 @@\n-        Class<?>[] context = getClassContext();\n-        if (context.length >= 3) {\n+        final Optional<StackFrame> stackFrame = AccessController.doPrivileged(\n+                (PrivilegedAction<Optional<StackFrame>>)\n+                        () -> StackWalker.getInstance(\n+                                Option.RETAIN_CLASS_REFERENCE)\n+                                .walk((s) -> s.skip(2).findFirst()));\n+\n+        if (stackFrame.isPresent()) {\n@@ -241,1 +253,1 @@\n-            Class<?> caller = context[2];\n+            Class<?> caller = stackFrame.get().getDeclaringClass();\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/JceSecurityManager.java","additions":22,"deletions":10,"binary":false,"changes":32,"status":"modified"}]}