{"files":[{"patch":"@@ -4471,1 +4471,1 @@\n-            memset( worklist.adr(), 0, worklist.Size()*sizeof(Node*) );\n+            memset( worklist.adr(), 0, worklist.max()*sizeof(Node*) );\n@@ -4546,1 +4546,1 @@\n-    memset( worklist.adr(), 0, worklist.Size()*sizeof(Node*) );\n+    memset( worklist.adr(), 0, worklist.max()*sizeof(Node*) );\n@@ -6359,1 +6359,1 @@\n-    for (uint k = 0; k < _nodes.Size(); k++) {\n+    for (uint k = 0; k < _nodes.max(); k++) {\n","filename":"src\/hotspot\/share\/opto\/loopnode.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1738,1 +1738,1 @@\n-  if (_shared_nodes.Size() <= leaf->_idx) return nullptr;\n+  if (_shared_nodes.max() <= leaf->_idx) return nullptr;\n","filename":"src\/hotspot\/share\/opto\/matcher.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1551,1 +1551,1 @@\n-  uint Size() const { return _max; }\n+  uint max() const { return _max; }\n","filename":"src\/hotspot\/share\/opto\/node.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -3075,1 +3075,1 @@\n-  for (uint k = 0; k < _reg_node.Size(); k++) {\n+  for (uint k = 0; k < _reg_node.max(); k++) {\n","filename":"src\/hotspot\/share\/opto\/output.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -667,1 +667,1 @@\n-  for( uint i=0; i<_nodes.Size(); i++ )\n+  for( uint i=0; i<_nodes.max(); i++ )\n","filename":"src\/hotspot\/share\/opto\/phaseX.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}