{"files":[{"patch":"@@ -1706,15 +1706,14 @@\n-            for (uint i2 = 0; i2 < cmp->outcnt(); i2++) {\n-              Node* bol = cmp->raw_out(i2); \/\/ For each Bool\n-              if (bol != nullptr && bol->is_Bool()) {\n-                for (uint i3 = 0; i3 < bol->outcnt(); i3++) {\n-                  Node* iff = bol->raw_out(i3); \/\/ For each If\n-                  if (iff != nullptr && iff->is_If()) {\n-                    for (uint i4 = 0; i4 < iff->outcnt(); i4++) {\n-                      Node* if_proj = iff->raw_out(i4); \/\/ For each IfProj\n-                      if (if_proj != nullptr && (if_proj->is_IfFalse() || if_proj->is_IfTrue())) {\n-                        for (uint i5 = 0; i5 < if_proj->outcnt(); i5++) {\n-                          Node* castii = if_proj->raw_out(i5); \/\/ For each CastII\n-                          if (castii->is_CastII() &&\n-                              castii->as_CastII()->carry_dependency()) {\n-                            _worklist.push(castii);\n-                          }\n+            for (DUIterator_Fast i2max, i2 = cmp->fast_outs(i2max); i2 < i2max; i2++) {\n+              Node* bol = cmp->fast_out(i2); \/\/ For each Bool\n+              if (bol->is_Bool()) {\n+                for (DUIterator_Fast i3max, i3 = bol->fast_outs(i3max); i3 < i3max; i3++) {\n+                  Node* iff = bol->fast_out(i3); \/\/ For each If\n+                  if (iff->is_If()) {\n+                    for (DUIterator_Fast i4max, i4 = iff->fast_outs(i4max); i4 < i4max; i4++) {\n+                      Node* if_proj = iff->fast_out(i4); \/\/ For each IfProj\n+                      assert(if_proj->is_IfProj(), \"If only has IfTrue and IfFalse as outputs\");\n+                      for (DUIterator_Fast i5max, i5 = if_proj->fast_outs(i5max); i5 < i5max; i5++) {\n+                        Node* castii = if_proj->fast_out(i5); \/\/ For each CastII\n+                        if (castii->is_CastII() &&\n+                            castii->as_CastII()->carry_dependency()) {\n+                          _worklist.push(castii);\n@@ -1732,2 +1731,2 @@\n-            for (uint j = 0; j < in1->outcnt(); j++) {\n-              Node* castii = in1->raw_out(j);\n+            for (DUIterator_Fast jmax, j = in1->fast_outs(jmax); j < jmax; j++) {\n+              Node* castii = in1->fast_out(j);\n","filename":"src\/hotspot\/share\/opto\/phaseX.cpp","additions":16,"deletions":17,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -1194,1 +1194,1 @@\n-  this->set_req_X(1,ldk2, phase);\n+  this->set_req_X(1, ldk2, phase);\n","filename":"src\/hotspot\/share\/opto\/subnode.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n- * @summary Run with -Xcomp to test -XX:VerifyIterativeGVN=1 in debug builds.\n+ * @summary Run with -Xcomp to test -XX:VerifyIterativeGVN=11 in debug builds.\n@@ -30,1 +30,1 @@\n- * @run main\/othervm\/timeout=300 -Xbatch -Xcomp -XX:VerifyIterativeGVN=1 compiler.c2.TestVerifyIterativeGVN\n+ * @run main\/othervm\/timeout=300 -Xbatch -Xcomp -XX:VerifyIterativeGVN=11 compiler.c2.TestVerifyIterativeGVN\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/TestVerifyIterativeGVN.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}