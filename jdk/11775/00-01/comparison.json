{"files":[{"patch":"@@ -621,1 +621,1 @@\n-  develop(uintx, VerifyIterativeGVN, 0,                                     \\\n+  develop(uint, VerifyIterativeGVN, 0,                                      \\\n","filename":"src\/hotspot\/share\/opto\/c2_globals.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -57,3 +57,5 @@\n-  if (ft->speculative() == nullptr && \/\/ speculative was dropped\n-      _type->speculative() != nullptr &&   \/\/ but was present\n-      in_type->speculative() != nullptr) { \/\/ for cast and input\n+  \/\/ Check if both _type and in_type had a speculative type, but for the just\n+  \/\/ computed ft the speculative type was dropped.\n+  if (ft->speculative() == nullptr &&\n+      _type->speculative() != nullptr &&\n+      in_type->speculative() != nullptr) {\n","filename":"src\/hotspot\/share\/opto\/castnode.cpp","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1244,2 +1244,5 @@\n-\/\/ Check that if type(n) == n->Value(), return true if we have a failure\n-\/\/ We have a list of exceptions, see comments in code.\n+\/\/ Check that if type(n) == n->Value(), return true if we have a failure.\n+\/\/ We have a list of exceptions, see detailed comments in code.\n+\/\/ (1) Integer \"widen\" changes, but the range is the same.\n+\/\/ (2) LoadNode performs deep traversals. Load is not notified for changes far away.\n+\/\/ (3) CmpPNode performs deep traversals if it compares oopptr. CmpP is not notified for changes far away.\n@@ -1254,1 +1257,2 @@\n-  \/\/ Check special cases that are ok\n+  \/\/ Exception (1)\n+  \/\/ Integer \"widen\" changes, but range is the same.\n@@ -1263,0 +1267,2 @@\n+  \/\/ Exception (2)\n+  \/\/ LoadNode performs deep traversals. Load is not notified for changes far away.\n@@ -1269,0 +1275,2 @@\n+  \/\/ Exception (3)\n+  \/\/ CmpPNode performs deep traversals if it compares oopptr. CmpP is not notified for changes far away.\n","filename":"src\/hotspot\/share\/opto\/phaseX.cpp","additions":11,"deletions":3,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -294,1 +294,2 @@\n-JVMFlag::Error TypeProfileLevelConstraintFunc(uintx value, bool verbose) {\n+JVMFlag::Error TypeProfileLevelConstraintFunc(uint value, bool verbose) {\n+  uint original_value = value;\n@@ -298,1 +299,1 @@\n-                          \"Invalid value (\" UINTX_FORMAT \") \"\n+                          \"Invalid value (\" UINT32_FORMAT \") \"\n@@ -304,1 +305,6 @@\n-\n+  if (value != 0) {\n+    JVMFlag::printError(verbose,\n+                        \"Invalid value (\" UINT32_FORMAT \") \"\n+                        \"for TypeProfileLevel: maximal 3 digits\\n\", original_value);\n+    return JVMFlag::VIOLATES_CONSTRAINT;\n+  }\n@@ -308,1 +314,2 @@\n-JVMFlag::Error VerifyIterativeGVNConstraintFunc(uintx value, bool verbose) {\n+JVMFlag::Error VerifyIterativeGVNConstraintFunc(uint value, bool verbose) {\n+  uint original_value = value;\n@@ -312,1 +319,1 @@\n-                          \"Invalid value (\" UINTX_FORMAT \") \"\n+                          \"Invalid value (\" UINT32_FORMAT \") \"\n@@ -318,1 +325,6 @@\n-\n+  if (value != 0) {\n+    JVMFlag::printError(verbose,\n+                        \"Invalid value (\" UINT32_FORMAT \") \"\n+                        \"for VerifyIterativeGVN: maximal 2 digits\\n\", original_value);\n+    return JVMFlag::VIOLATES_CONSTRAINT;\n+  }\n","filename":"src\/hotspot\/share\/runtime\/flags\/jvmFlagConstraintsCompiler.cpp","additions":18,"deletions":6,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -50,2 +50,2 @@\n-  f(uintx, TypeProfileLevelConstraintFunc)              \\\n-  f(uintx, VerifyIterativeGVNConstraintFunc)            \\\n+  f(uint,  TypeProfileLevelConstraintFunc)              \\\n+  f(uint,  VerifyIterativeGVNConstraintFunc)            \\\n","filename":"src\/hotspot\/share\/runtime\/flags\/jvmFlagConstraintsCompiler.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1112,1 +1112,1 @@\n-  product_pd(uintx, TypeProfileLevel,                                       \\\n+  product_pd(uint, TypeProfileLevel,                                        \\\n","filename":"src\/hotspot\/share\/runtime\/globals.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}