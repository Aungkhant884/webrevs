{"files":[{"patch":"@@ -675,4 +675,4 @@\n-  frame* _fr;\n-  OopClosure* _f;\n-  int    _max_locals;\n-  int    _max_stack;\n+  const frame* _fr;\n+  OopClosure*  _f;\n+  int          _max_locals;\n+  int          _max_stack;\n@@ -681,1 +681,1 @@\n-  InterpreterFrameClosure(frame* fr, int max_locals, int max_stack,\n+  InterpreterFrameClosure(const frame* fr, int max_locals, int max_stack,\n@@ -712,1 +712,0 @@\n-  frame* fr()       { return _fr; }\n@@ -718,4 +717,4 @@\n-  OopClosure* _f;        \/\/ Closure to invoke\n-  int    _offset;        \/\/ TOS-relative offset, decremented with each argument\n-  bool   _has_receiver;  \/\/ true if the callee has a receiver\n-  frame* _fr;\n+  OopClosure*  _f;             \/\/ Closure to invoke\n+  int          _offset;        \/\/ TOS-relative offset, decremented with each argument\n+  bool         _has_receiver;  \/\/ true if the callee has a receiver\n+  const frame* _fr;\n@@ -736,1 +735,1 @@\n-  InterpretedArgumentOopFinder(Symbol* signature, bool has_receiver, frame* fr, OopClosure* f) : SignatureIterator(signature), _has_receiver(has_receiver) {\n+  InterpretedArgumentOopFinder(Symbol* signature, bool has_receiver, const frame* fr, OopClosure* f) : SignatureIterator(signature), _has_receiver(has_receiver) {\n@@ -772,4 +771,4 @@\n-  bool   _is_static;\n-  int    _offset;\n-  frame* _fr;\n-  OopClosure* _f;\n+  bool         _is_static;\n+  int          _offset;\n+  const frame* _fr;\n+  OopClosure*  _f;\n@@ -792,1 +791,1 @@\n-  EntryFrameOopFinder(frame* frame, Symbol* signature, bool is_static) : SignatureIterator(signature) {\n+  EntryFrameOopFinder(const frame* frame, Symbol* signature, bool is_static) : SignatureIterator(signature) {\n@@ -814,1 +813,1 @@\n-void frame::oops_interpreted_do(OopClosure* f, const RegisterMap* map, bool query_oop_map_cache) {\n+void frame::oops_interpreted_do(OopClosure* f, const RegisterMap* map, bool query_oop_map_cache) const {\n@@ -895,1 +894,1 @@\n-void frame::oops_interpreted_arguments_do(Symbol* signature, bool has_receiver, OopClosure* f) {\n+void frame::oops_interpreted_arguments_do(Symbol* signature, bool has_receiver, OopClosure* f) const {\n@@ -900,1 +899,1 @@\n-void frame::oops_code_blob_do(OopClosure* f, CodeBlobClosure* cf, const RegisterMap* reg_map) {\n+void frame::oops_code_blob_do(OopClosure* f, CodeBlobClosure* cf, const RegisterMap* reg_map) const {\n@@ -977,1 +976,1 @@\n-                                       const RegisterMap* reg_map, OopClosure* f) {\n+                                       const RegisterMap* reg_map, OopClosure* f) const {\n@@ -1026,1 +1025,1 @@\n-void frame::oops_entry_do(OopClosure* f, const RegisterMap* map) {\n+void frame::oops_entry_do(OopClosure* f, const RegisterMap* map) const {\n@@ -1040,1 +1039,1 @@\n-void frame::oops_do_internal(OopClosure* f, CodeBlobClosure* cf, RegisterMap* map, bool use_interpreter_oop_map_cache) {\n+void frame::oops_do_internal(OopClosure* f, CodeBlobClosure* cf, const RegisterMap* map, bool use_interpreter_oop_map_cache) const {\n@@ -1059,1 +1058,1 @@\n-void frame::nmethods_do(CodeBlobClosure* cf) {\n+void frame::nmethods_do(CodeBlobClosure* cf) const {\n@@ -1067,1 +1066,1 @@\n-void frame::metadata_do(MetadataClosure* f) {\n+void frame::metadata_do(MetadataClosure* f) const {\n@@ -1076,1 +1075,1 @@\n-void frame::verify(const RegisterMap* map) {\n+void frame::verify(const RegisterMap* map) const {\n@@ -1090,1 +1089,1 @@\n-  oops_do_internal(&VerifyOopClosure::verify_oop, NULL, (RegisterMap*)map, false);\n+  oops_do_internal(&VerifyOopClosure::verify_oop, NULL, map, false);\n","filename":"src\/hotspot\/share\/runtime\/frame.cpp","additions":25,"deletions":26,"binary":false,"changes":51,"status":"modified"},{"patch":"@@ -362,2 +362,2 @@\n-  void oops_compiled_arguments_do(Symbol* signature, bool has_receiver, bool has_appendix, const RegisterMap* reg_map, OopClosure* f);\n-  void oops_interpreted_do(OopClosure* f, const RegisterMap* map, bool query_oop_map_cache = true);\n+  void oops_compiled_arguments_do(Symbol* signature, bool has_receiver, bool has_appendix, const RegisterMap* reg_map, OopClosure* f) const;\n+  void oops_interpreted_do(OopClosure* f, const RegisterMap* map, bool query_oop_map_cache = true) const;\n@@ -366,1 +366,1 @@\n-  void oops_interpreted_arguments_do(Symbol* signature, bool has_receiver, OopClosure* f);\n+  void oops_interpreted_arguments_do(Symbol* signature, bool has_receiver, OopClosure* f) const;\n@@ -369,3 +369,3 @@\n-  void oops_do_internal(OopClosure* f, CodeBlobClosure* cf, RegisterMap* map, bool use_interpreter_oop_map_cache);\n-  void oops_entry_do(OopClosure* f, const RegisterMap* map);\n-  void oops_code_blob_do(OopClosure* f, CodeBlobClosure* cf, const RegisterMap* map);\n+  void oops_do_internal(OopClosure* f, CodeBlobClosure* cf, const RegisterMap* map, bool use_interpreter_oop_map_cache) const;\n+  void oops_entry_do(OopClosure* f, const RegisterMap* map) const;\n+  void oops_code_blob_do(OopClosure* f, CodeBlobClosure* cf, const RegisterMap* map) const;\n@@ -375,2 +375,2 @@\n-  void oops_do(OopClosure* f, CodeBlobClosure* cf, RegisterMap* map) { oops_do_internal(f, cf, map, true); }\n-  void nmethods_do(CodeBlobClosure* cf);\n+  void oops_do(OopClosure* f, CodeBlobClosure* cf, const RegisterMap* map) const { oops_do_internal(f, cf, map, true); }\n+  void nmethods_do(CodeBlobClosure* cf) const;\n@@ -379,1 +379,1 @@\n-  void metadata_do(MetadataClosure* f);\n+  void metadata_do(MetadataClosure* f) const;\n@@ -382,1 +382,1 @@\n-  void verify(const RegisterMap* map);\n+  void verify(const RegisterMap* map) const;\n","filename":"src\/hotspot\/share\/runtime\/frame.hpp","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"}]}