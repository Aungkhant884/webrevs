{"files":[{"patch":"@@ -2584,1 +2584,4 @@\n-                        types.hasSameArgs(m2.erasure(types), m1.erasure(types))) {\n+                        (types.hasSameArgs(m2.erasure(types), m1.erasure(types)) ||\n+                        types.hasSameArgs(\n+                            m2.asMemberOf(site, types).erasure(types),\n+                            m1.asMemberOf(site, types).erasure(types)))) {\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Check.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -0,0 +1,17 @@\n+\/*\n+ * @test \/nodynamiccopyright\/\n+ * @bug 5059679\n+ * @summary Verify proper detection of name class when parameter types narrow\n+ * @compile\/fail\/ref=NarrowingNameClash.out -XDrawDiagnostics NarrowingNameClash.java\n+ *\/\n+\n+public class NarrowingNameClash {\n+\n+    public interface Upper<T> {\n+        void method(T param);\n+    }\n+\n+    public interface Lower<R> extends Upper<Class<R>> {\n+        void method(Class<?> param);        \/\/ erasure name clash here\n+    }\n+}\n","filename":"test\/langtools\/tools\/javac\/NameClash\/NarrowingNameClash.java","additions":17,"deletions":0,"binary":false,"changes":17,"status":"added"},{"patch":"@@ -0,0 +1,2 @@\n+NarrowingNameClash.java:15:14: compiler.err.name.clash.same.erasure.no.override: method, java.lang.Class<?>, NarrowingNameClash.Lower, method, java.lang.Class<R>, NarrowingNameClash.Upper\n+1 error\n","filename":"test\/langtools\/tools\/javac\/NameClash\/NarrowingNameClash.out","additions":2,"deletions":0,"binary":false,"changes":2,"status":"added"}]}