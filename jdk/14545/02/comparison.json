{"files":[{"patch":"@@ -86,1 +86,1 @@\n-      || f.unextended_sp() == (intptr_t*)f.at(frame::interpreter_frame_last_sp_offset), \"\");\n+      || f.unextended_sp() == (intptr_t*)f.at_relative(frame::interpreter_frame_last_sp_offset), \"\");\n@@ -126,1 +126,1 @@\n-  intptr_t* real_unextended_sp = (intptr_t*)f.at(frame::interpreter_frame_last_sp_offset);\n+  intptr_t* real_unextended_sp = (intptr_t*)f.at_relative_or_null(frame::interpreter_frame_last_sp_offset);\n@@ -152,2 +152,2 @@\n-  \/\/ at(frame::interpreter_frame_last_sp_offset) can be null at safepoint preempts\n-  *hf.addr_at(frame::interpreter_frame_last_sp_offset) = hf.unextended_sp() - hf.fp();\n+  \/\/ Make sure that last_sp is already relativized.\n+  assert((intptr_t*)hf.at_relative(frame::interpreter_frame_last_sp_offset) == hf.unextended_sp(), \"\");\n@@ -293,1 +293,3 @@\n-  derelativize_one(vfp, frame::interpreter_frame_last_sp_offset);\n+  \/\/ Make sure that last_sp is kept relativized.\n+  assert((intptr_t*)f.at_relative(frame::interpreter_frame_last_sp_offset) == f.unextended_sp(), \"\");\n+\n","filename":"src\/hotspot\/cpu\/aarch64\/continuationFreezeThaw_aarch64.inline.hpp","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -128,1 +128,2 @@\n-    p2i(res), p2i(f.addr_at(frame::interpreter_frame_initial_sp_offset)), f.at(frame::interpreter_frame_last_sp_offset), p2i(f.unextended_sp()), expression_stack_sz);\n+    p2i(res), p2i(f.addr_at(frame::interpreter_frame_initial_sp_offset)), f.at_relative_or_null(frame::interpreter_frame_last_sp_offset),\n+    p2i(f.unextended_sp()), expression_stack_sz);\n","filename":"src\/hotspot\/cpu\/aarch64\/continuationHelper_aarch64.inline.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -358,1 +358,3 @@\n-    *((intptr_t**)addr_at(interpreter_frame_last_sp_offset)) = sp;\n+  assert(is_interpreted_frame(), \"interpreted frame expected\");\n+  \/\/ set relativized last_sp\n+  ptr_at_put(interpreter_frame_last_sp_offset, sp != nullptr ? (sp - fp()) : 0);\n","filename":"src\/hotspot\/cpu\/aarch64\/frame_aarch64.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -266,1 +266,3 @@\n-  return (intptr_t*)at(interpreter_frame_last_sp_offset);\n+  intptr_t n = *addr_at(interpreter_frame_last_sp_offset);\n+  assert(n <= 0, \"n: \" INTPTR_FORMAT, n);\n+  return n != 0 ? &fp()[n] : nullptr;\n","filename":"src\/hotspot\/cpu\/aarch64\/frame_aarch64.inline.hpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -432,1 +432,3 @@\n-  str(esp, Address(rfp, frame::interpreter_frame_last_sp_offset * wordSize));\n+  sub(rscratch1, esp, rfp);\n+  asr(rscratch1, rscratch1, Interpreter::logStackElementSize);\n+  str(rscratch1, Address(rfp, frame::interpreter_frame_last_sp_offset * wordSize));\n","filename":"src\/hotspot\/cpu\/aarch64\/interp_masm_aarch64.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -468,1 +468,2 @@\n-  __ ldr(esp, Address(rfp, frame::interpreter_frame_last_sp_offset * wordSize));\n+  __ ldr(rscratch1, Address(rfp, frame::interpreter_frame_last_sp_offset * wordSize));\n+  __ lea(esp, Address(rfp, rscratch1, Address::lsl(Interpreter::logStackElementSize)));\n@@ -524,1 +525,2 @@\n-  __ ldr(esp, Address(rfp, frame::interpreter_frame_last_sp_offset * wordSize));\n+  __ ldr(rscratch1, Address(rfp, frame::interpreter_frame_last_sp_offset * wordSize));\n+  __ lea(esp, Address(rfp, rscratch1, Address::lsl(Interpreter::logStackElementSize)));\n@@ -1870,1 +1872,2 @@\n-  __ ldr(esp, Address(rfp, frame::interpreter_frame_last_sp_offset * wordSize));\n+  __ ldr(rscratch1, Address(rfp, frame::interpreter_frame_last_sp_offset * wordSize));\n+  __ lea(esp, Address(rfp, rscratch1, Address::lsl(Interpreter::logStackElementSize)));\n","filename":"src\/hotspot\/cpu\/aarch64\/templateInterpreterGenerator_aarch64.cpp","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -92,1 +92,1 @@\n-  relativize_one(vfp, hfp, ijava_idx(top_frame_sp));\n+  \/\/ top_frame_sp is already relativized\n@@ -547,1 +547,1 @@\n-  derelativize_one(vfp, ijava_idx(top_frame_sp));\n+  \/\/ Keep top_frame_sp relativized.\n","filename":"src\/hotspot\/cpu\/ppc\/continuationFreezeThaw_ppc.inline.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -89,1 +89,1 @@\n-    sp = (intptr_t*)caller.at(ijava_idx(top_frame_sp));\n+    sp = (intptr_t*)caller.at_relative(ijava_idx(top_frame_sp));\n","filename":"src\/hotspot\/cpu\/ppc\/continuationHelper_ppc.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -234,1 +234,7 @@\n-inline void frame::interpreter_frame_set_top_frame_sp(intptr_t* top_frame_sp) { get_ijava_state()->top_frame_sp = (intptr_t) top_frame_sp; }\n+\n+inline void frame::interpreter_frame_set_top_frame_sp(intptr_t* top_frame_sp) {\n+  assert(is_interpreted_frame(), \"interpreted frame expected\");\n+  \/\/ set relativized top_frame_sp\n+  get_ijava_state()->top_frame_sp = (intptr_t) (top_frame_sp - fp());\n+}\n+\n","filename":"src\/hotspot\/cpu\/ppc\/frame_ppc.inline.hpp","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1220,0 +1220,3 @@\n+  sldi(Rscratch1, Rscratch1, Interpreter::logStackElementSize);\n+  add(Rscratch1, Rscratch1, Rscratch2); \/\/ Rscratch2 contains fp\n+  \/\/ Compare sender_sp with the derelativized top_frame_sp\n@@ -1994,1 +1997,4 @@\n-  std(R1_SP, _ijava_state_neg(top_frame_sp), esp); \/\/ esp contains fp\n+  subf(Rtemp2, esp, R1_SP); \/\/ esp contains fp\n+  sradi(Rtemp2, Rtemp2, Interpreter::logStackElementSize);\n+  \/\/ Store relativized top_frame_sp\n+  std(Rtemp2, _ijava_state_neg(top_frame_sp), esp); \/\/ esp contains fp\n@@ -2230,0 +2236,3 @@\n+    \/\/ Derelativize top_frame_sp\n+    sldi(tfsp, tfsp, Interpreter::logStackElementSize);\n+    add(tfsp, tfsp, scratch);\n","filename":"src\/hotspot\/cpu\/ppc\/interp_masm_ppc_64.cpp","additions":10,"deletions":1,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -1064,1 +1064,0 @@\n-  __ subf(R12_scratch2, Rtop_frame_size, R1_SP);\n@@ -1066,0 +1065,3 @@\n+  __ neg(R12_scratch2, Rtop_frame_size);\n+  __ sradi(R12_scratch2, R12_scratch2, Interpreter::logStackElementSize);\n+  \/\/ Store relativized top_frame_sp\n","filename":"src\/hotspot\/cpu\/ppc\/templateInterpreterGenerator_ppc.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -85,1 +85,1 @@\n-      || f.unextended_sp() == (intptr_t*)f.at(frame::interpreter_frame_last_sp_offset), \"\");\n+      || f.unextended_sp() == (intptr_t*)f.at_relative(frame::interpreter_frame_last_sp_offset), \"\");\n@@ -124,1 +124,1 @@\n-  intptr_t* real_unextended_sp = (intptr_t*)f.at(frame::interpreter_frame_last_sp_offset);\n+  intptr_t* real_unextended_sp = (intptr_t*)f.at_relative_or_null(frame::interpreter_frame_last_sp_offset);\n@@ -150,2 +150,2 @@\n-  \/\/ at(frame::interpreter_frame_last_sp_offset) can be null at safepoint preempts\n-  *hf.addr_at(frame::interpreter_frame_last_sp_offset) = hf.unextended_sp() - hf.fp();\n+  \/\/ Make sure that last_sp is already relativized.\n+  assert((intptr_t*)hf.at_relative(frame::interpreter_frame_last_sp_offset) == hf.unextended_sp(), \"\");\n@@ -295,1 +295,3 @@\n-  derelativize_one(vfp, frame::interpreter_frame_last_sp_offset);\n+  \/\/ Make sure that last_sp is kept relativized.\n+  assert((intptr_t*)f.at_relative(frame::interpreter_frame_last_sp_offset) == f.unextended_sp(), \"\");\n+\n","filename":"src\/hotspot\/cpu\/riscv\/continuationFreezeThaw_riscv.inline.hpp","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -128,1 +128,2 @@\n-    p2i(res), p2i(f.addr_at(frame::interpreter_frame_initial_sp_offset)), f.at(frame::interpreter_frame_last_sp_offset), p2i(f.unextended_sp()), expression_stack_sz);\n+    p2i(res), p2i(f.addr_at(frame::interpreter_frame_initial_sp_offset)), f.at_relative_or_null(frame::interpreter_frame_last_sp_offset),\n+    p2i(f.unextended_sp()), expression_stack_sz);\n","filename":"src\/hotspot\/cpu\/riscv\/continuationHelper_riscv.inline.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -334,1 +334,3 @@\n-  *((intptr_t**)addr_at(interpreter_frame_last_sp_offset)) = last_sp;\n+  assert(is_interpreted_frame(), \"interpreted frame expected\");\n+  \/\/ set relativized last_sp\n+  ptr_at_put(interpreter_frame_last_sp_offset, last_sp != nullptr ? (last_sp - fp()) : 0);\n","filename":"src\/hotspot\/cpu\/riscv\/frame_riscv.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -257,1 +257,3 @@\n-  return (intptr_t*)at(interpreter_frame_last_sp_offset);\n+  intptr_t n = *addr_at(interpreter_frame_last_sp_offset);\n+  assert(n <= 0, \"n: \" INTPTR_FORMAT, n);\n+  return n != 0 ? &fp()[n] : nullptr;\n","filename":"src\/hotspot\/cpu\/riscv\/frame_riscv.inline.hpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -493,1 +493,3 @@\n-  sd(esp, Address(fp, frame::interpreter_frame_last_sp_offset * wordSize));\n+  sub(t0, esp, fp);\n+  srai(t0, t0, Interpreter::logStackElementSize);\n+  sd(t0, Address(fp, frame::interpreter_frame_last_sp_offset * wordSize));\n","filename":"src\/hotspot\/cpu\/riscv\/interp_masm_riscv.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -429,1 +429,2 @@\n-  __ ld(esp, Address(fp, frame::interpreter_frame_last_sp_offset * wordSize));\n+  __ ld(t0, Address(fp, frame::interpreter_frame_last_sp_offset * wordSize));\n+  __ shadd(esp, t0, fp,  t0,  LogBytesPerWord);\n@@ -486,1 +487,2 @@\n-  __ ld(esp, Address(fp, frame::interpreter_frame_last_sp_offset * wordSize));\n+  __ ld(t0, Address(fp, frame::interpreter_frame_last_sp_offset * wordSize));\n+  __ shadd(esp, t0, fp,  t0,  LogBytesPerWord);\n@@ -1607,1 +1609,2 @@\n-  __ ld(esp, Address(fp, frame::interpreter_frame_last_sp_offset * wordSize));\n+  __ ld(t0, Address(fp, frame::interpreter_frame_last_sp_offset * wordSize));\n+  __ shadd(esp, t0, fp,  t0,  LogBytesPerWord);\n","filename":"src\/hotspot\/cpu\/riscv\/templateInterpreterGenerator_riscv.cpp","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -82,2 +82,2 @@\n-    assert((intptr_t*)f.at(frame::interpreter_frame_last_sp_offset) == nullptr\n-      || f.unextended_sp() == (intptr_t*)f.at(frame::interpreter_frame_last_sp_offset), \"\");\n+    assert((intptr_t*)f.at_relative_or_null(frame::interpreter_frame_last_sp_offset) == nullptr\n+      || f.unextended_sp() == (intptr_t*)f.at_relative(frame::interpreter_frame_last_sp_offset), \"\");\n@@ -123,1 +123,1 @@\n-  intptr_t* real_unextended_sp = (intptr_t*)f.at(frame::interpreter_frame_last_sp_offset);\n+  intptr_t* real_unextended_sp = (intptr_t*)f.at_relative_or_null(frame::interpreter_frame_last_sp_offset);\n@@ -144,2 +144,2 @@\n-  \/\/ at(frame::interpreter_frame_last_sp_offset) can be null at safepoint preempts\n-  *hf.addr_at(frame::interpreter_frame_last_sp_offset) = hf.unextended_sp() - hf.fp();\n+  \/\/ Make sure that last_sp is already relativized.\n+  assert((intptr_t*)hf.at_relative(frame::interpreter_frame_last_sp_offset) == hf.unextended_sp(), \"\");\n@@ -285,1 +285,3 @@\n-  derelativize_one(vfp, frame::interpreter_frame_last_sp_offset);\n+  \/\/ Make sure that last_sp is kept relativized.\n+  assert((intptr_t*)f.at_relative(frame::interpreter_frame_last_sp_offset) == f.unextended_sp(), \"\");\n+\n","filename":"src\/hotspot\/cpu\/x86\/continuationFreezeThaw_x86.inline.hpp","additions":8,"deletions":6,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -128,1 +128,2 @@\n-    p2i(res), p2i(f.addr_at(frame::interpreter_frame_initial_sp_offset)), f.at(frame::interpreter_frame_last_sp_offset), p2i(f.unextended_sp()), expression_stack_sz);\n+    p2i(res), p2i(f.addr_at(frame::interpreter_frame_initial_sp_offset)), f.at_relative_or_null(frame::interpreter_frame_last_sp_offset),\n+    p2i(f.unextended_sp()), expression_stack_sz);\n","filename":"src\/hotspot\/cpu\/x86\/continuationHelper_x86.inline.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -355,1 +355,3 @@\n-    *((intptr_t**)addr_at(interpreter_frame_last_sp_offset)) = sp;\n+  assert(is_interpreted_frame(), \"interpreted frame expected\");\n+  \/\/ set relativized last_sp\n+  ptr_at_put(interpreter_frame_last_sp_offset, sp != nullptr ? (sp - fp()) : 0);\n","filename":"src\/hotspot\/cpu\/x86\/frame_x86.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -254,1 +254,3 @@\n-  return (intptr_t*)at(interpreter_frame_last_sp_offset);\n+  intptr_t n = *addr_at(interpreter_frame_last_sp_offset);\n+  assert(n <= 0, \"n: \" INTPTR_FORMAT, n);\n+  return n != 0 ? &fp()[n] : nullptr;\n","filename":"src\/hotspot\/cpu\/x86\/frame_x86.inline.hpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -797,1 +797,4 @@\n-  movptr(Address(rbp, frame::interpreter_frame_last_sp_offset * wordSize), _bcp_register);\n+  mov(rcx, _bcp_register);\n+  subptr(rcx, rbp);\n+  sarptr(rcx, LogBytesPerWord);\n+  movptr(Address(rbp, frame::interpreter_frame_last_sp_offset * wordSize), rcx);\n","filename":"src\/hotspot\/cpu\/x86\/interp_masm_x86.cpp","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -209,1 +209,2 @@\n-  __ movptr(rsp, Address(rbp, frame::interpreter_frame_last_sp_offset * wordSize));\n+  __ movptr(rcx, Address(rbp, frame::interpreter_frame_last_sp_offset * wordSize));\n+  __ lea(rsp, Address(rbp, rcx, Address::times_ptr));\n@@ -1619,0 +1620,1 @@\n+  __ lea(rbx, Address(rbp, rbx, Address::times_ptr));\n@@ -1627,0 +1629,1 @@\n+  __ lea(c_rarg2, Address(rbp, c_rarg2, Address::times_ptr));\n@@ -1634,1 +1637,2 @@\n-  __ movptr(rsp, Address(rbp, frame::interpreter_frame_last_sp_offset * wordSize));\n+  __ movptr(rcx, Address(rbp, frame::interpreter_frame_last_sp_offset * wordSize));\n+  __ lea(rsp, Address(rbp, rcx, Address::times_ptr));\n","filename":"src\/hotspot\/cpu\/x86\/templateInterpreterGenerator_x86.cpp","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1606,1 +1606,1 @@\n-  print_on(st, min_index, max_index, v0, v1, true \/* on_heap *\/);\n+  print_on(st, min_index, max_index, v0, v1);\n@@ -1609,1 +1609,1 @@\n-void FrameValues::print_on(outputStream* st, int min_index, int max_index, intptr_t* v0, intptr_t* v1, bool on_heap) {\n+void FrameValues::print_on(outputStream* st, int min_index, int max_index, intptr_t* v0, intptr_t* v1) {\n@@ -1624,2 +1624,1 @@\n-      if (on_heap\n-          && *fv.location != 0 && *fv.location > -100 && *fv.location < 100\n+      if (*fv.location != 0 && *fv.location > -100 && *fv.location < 100\n","filename":"src\/hotspot\/share\/runtime\/frame.cpp","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -250,0 +250,6 @@\n+  intptr_t  at_relative_or_null(int index) const {\n+    return (fp()[index] != 0)\n+      ? (intptr_t)(fp() + fp()[index])\n+      : 0;\n+  }\n+\n@@ -520,2 +526,1 @@\n-  void print_on(outputStream* out, int min_index, int max_index, intptr_t* v0, intptr_t* v1,\n-                bool on_heap = false);\n+  void print_on(outputStream* out, int min_index, int max_index, intptr_t* v0, intptr_t* v1);\n","filename":"src\/hotspot\/share\/runtime\/frame.hpp","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"}]}