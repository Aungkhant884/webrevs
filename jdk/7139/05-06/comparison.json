{"files":[{"patch":"@@ -295,1 +295,1 @@\n-            case \"toString\" -> java.util.Objects.toDefaultString(self);\n+            case \"toString\" -> java.util.Objects.toIdentityString(self);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MethodHandleProxies.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -167,19 +167,0 @@\n-    \/**\n-     * {@return a string equivalent to the string returned by {@code\n-     * Object.toString} if that method is not overridden}\n-     *\n-     * @implSpec\n-     * The method returns a string equivalent to:<br>\n-     * {@code o.getClass().getName() + \"@\" + Integer.toHexString(o.hashCode())}\n-     *\n-     * @param o an object\n-     * @throws NullPointerException if the argument is null\n-     * @see Object#toString\n-     * @see #toIdentityString(Object)\n-     * @since 19\n-     *\/\n-    public static String toDefaultString(Object o) {\n-        requireNonNull(o);\n-        return o.getClass().getName() + \"@\" + Integer.toHexString(o.hashCode());\n-    }\n-\n@@ -203,1 +184,0 @@\n-     * @see #toDefaultString(Object)\n","filename":"src\/java.base\/share\/classes\/java\/util\/Objects.java","additions":0,"deletions":20,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2228,1 +2228,1 @@\n-        return Objects.toDefaultString(this);\n+        return getClass().getName() + \"@\" + Integer.toHexString(hashCode());\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/xml\/internal\/stream\/writers\/XMLStreamWriterImpl.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -43,1 +43,0 @@\n-        errors += testToDefaultString();\n@@ -139,29 +138,0 @@\n-    private static int testToDefaultString() {\n-        int errors = 0;\n-        \/\/ Test null behavior\n-        try {\n-            Objects.toDefaultString(null);\n-            errors++;\n-        } catch (NullPointerException npe) {\n-            ; \/\/ Expected\n-        }\n-        \/\/ Behavior on typical objects\n-        Object o = new Object(){};\n-        errors += (Objects.toDefaultString(o).equals(o.toString()))? 0 : 1;\n-        \/\/ Verify object's toString is *not* called\n-        Object badToString = new Object() {\n-                @Override\n-                public String toString() {\n-                    throw new RuntimeException();\n-                }\n-            };\n-        Objects.toDefaultString(badToString);\n-        \/\/ Verify object's hashCode is called\n-        errors +=\n-            (\"java.math.BigInteger@0\"\n-             .equals(Objects.toDefaultString(java.math.BigInteger.ZERO))) ?\n-            0 : 1;\n-\n-        return errors;\n-    }\n-\n","filename":"test\/jdk\/java\/util\/Objects\/BasicObjectsTest.java","additions":0,"deletions":30,"binary":false,"changes":30,"status":"modified"}]}