{"files":[{"patch":"@@ -48,0 +48,1 @@\n+    static final String CLASS_NAME_ALT_PREFIX = CLASS_NAME_PREFIX + \"Alt__\";\n@@ -49,0 +50,2 @@\n+    static final int NUM_ALT_CLASSES = NUM_CLASSES \/ 2;\n+    static final int MAX_RETRY = 5;\n@@ -54,1 +57,1 @@\n-            for (int index = 0; index < 5; index ++) {\n+            for (int index = 0; index < MAX_RETRY; index ++) {\n@@ -61,1 +64,1 @@\n-        System.out.println(\"No class unloading detected, result is inconclusive\");\n+        System.out.println(\"No class unloading detected after \" + MAX_RETRY + \" tries, result is inconclusive\");\n@@ -94,1 +97,5 @@\n-                Class.forName(CLASS_NAME_PREFIX + index, true, loader);\n+                if (index < NUM_ALT_CLASSES) {\n+                    Class.forName(CLASS_NAME_ALT_PREFIX + index, true, loader);\n+                } else {\n+                    Class.forName(CLASS_NAME_PREFIX + index, true, loader);\n+                }\n@@ -106,1 +113,1 @@\n-        final String infoClassUnloaded = \"unloading class SampleClass__\";\n+        final String infoClassUnloaded = \"unloading class \" + CLASS_NAME_PREFIX;\n@@ -120,0 +127,1 @@\n+        HashSet<String> unloadedSampleClasses_alt = new HashSet<>();\n@@ -127,0 +135,4 @@\n+            ClassUnloadRequest classUnloadRequest_alt = vm.eventRequestManager().createClassUnloadRequest();\n+            classUnloadRequest_alt.addClassFilter(CLASS_NAME_ALT_PREFIX + \"*\");\n+            classUnloadRequest_alt.enable();\n+\n@@ -130,0 +142,1 @@\n+                System.out.println(\"EventSet: \" + eventSet);\n@@ -133,1 +146,27 @@\n-                        unloadedSampleClasses.add(className);\n+\n+                        \/\/ The unloaded class should always match CLASS_NAME_PREFIX.\n+                        if (className.indexOf(CLASS_NAME_PREFIX) == -1) {\n+                            throw new RuntimeException(\"FAILED: Unexpected unloaded class: \" + className);\n+                        }\n+\n+                        \/\/ Unloaded classes with ALT names should only occur on the classUnloadRequest_alt.\n+                        if (event.request() == classUnloadRequest_alt) {\n+                            unloadedSampleClasses_alt.add(className);\n+                            if (className.indexOf(CLASS_NAME_ALT_PREFIX) == -1) {\n+                                throw new RuntimeException(\"FAILED: non-alt class unload event for classUnloadRequest_alt.\");\n+                            }\n+                        } else {\n+                            unloadedSampleClasses.add(className);\n+                        }\n+\n+                        \/\/ If the unloaded class matches the ALT prefix, then we should have\n+                        \/\/ unload events in this EventSet for each of the two ClassUnloadRequesta.\n+                        int expectedEventSetSize;\n+                        if (className.indexOf(CLASS_NAME_ALT_PREFIX) != -1) {\n+                            expectedEventSetSize = 2;\n+                        } else {\n+                            expectedEventSetSize = 1;\n+                        }\n+                        if (eventSet.size() != expectedEventSetSize) {\n+                            throw new RuntimeException(\"FAILED: Unexpected eventSet size: \" + eventSet.size());\n+                        }\n@@ -141,1 +180,1 @@\n-                vm.resume();\n+                eventSet.resume();\n@@ -143,1 +182,1 @@\n-        } catch (Exception e) {\n+        } catch (InterruptedException | VMCannotBeModifiedException | IOException | IllegalConnectorArgumentsException | VMStartException e) {\n@@ -159,0 +198,3 @@\n+        if (unloadedSampleClasses_alt.size() != NUM_ALT_CLASSES) {\n+            throw new RuntimeException(\"Wrong number of alt class unload events: expected \" + NUM_ALT_CLASSES + \" got \" + unloadedSampleClasses_alt.size());\n+        }\n@@ -162,1 +204,3 @@\n-    private static VirtualMachine connectAndLaunchVM() throws Exception {\n+    private static VirtualMachine connectAndLaunchVM() throws IOException,\n+                                                              IllegalConnectorArgumentsException,\n+                                                              VMStartException {\n","filename":"test\/jdk\/com\/sun\/jdi\/TestClassUnloadEvents.java","additions":52,"deletions":8,"binary":false,"changes":60,"status":"modified"}]}