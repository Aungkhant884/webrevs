{"files":[{"patch":"@@ -30,0 +30,2 @@\n+ * @build jdk.test.whitebox.WhiteBox\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller jdk.test.whitebox.WhiteBox\n@@ -37,0 +39,1 @@\n+import jdk.test.lib.classloader.ClassUnloadCommon;\n@@ -51,1 +54,0 @@\n-    static final int MAX_RETRY = 5;\n@@ -57,5 +59,1 @@\n-            for (int index = 0; index < MAX_RETRY; index ++) {\n-                if(runDebugger()) {\n-                    return;\n-                }\n-            }\n+            runDebugger();\n@@ -63,2 +61,0 @@\n-\n-        System.out.println(\"No class unloading detected after \" + MAX_RETRY + \" tries, result is inconclusive\");\n@@ -107,15 +103,2 @@\n-        System.gc();\n-    }\n-\n-    \/\/ Check debuggee's output, see if class unloading actually\n-    \/\/ happened\n-    private static boolean classUnloadingOccurred(Process p) throws IOException {\n-        final String infoClassUnloaded = \"unloading class \" + CLASS_NAME_PREFIX;\n-        InputStreamReader reader = new InputStreamReader(p.getInputStream());\n-        StringBuffer sb = new StringBuffer();\n-        char[] buf = new char[1024];\n-        int n;\n-        while ((n = reader.read(buf)) > 0) {\n-            sb.append(buf, 0, n);\n-        }\n-        return sb.toString().indexOf(infoClassUnloaded) != -1;\n+        \/\/ Trigger class unloading\n+        ClassUnloadCommon.triggerUnloading();\n@@ -124,1 +107,1 @@\n-    private static boolean runDebugger() {\n+    private static void runDebugger() {\n@@ -183,11 +166,1 @@\n-            e.printStackTrace();\n-        } finally {\n-            try {\n-                Process p = vm.process();\n-                \/\/ If debuggee did not unload the classes, we can not expect ClassUnloadEvent\n-                if (!classUnloadingOccurred(p)) {\n-                    return false;\n-                }\n-            } catch (Exception e) {\n-                throw new RuntimeException(\"Test failed: \" + e.getMessage());\n-            }\n+            throw new RuntimeException(\"Test failed due to \" + e.getMessage());\n@@ -201,1 +174,0 @@\n-        return true;\n@@ -210,1 +182,1 @@\n-        arguments.get(\"options\").setValue(\"--add-exports java.base\/jdk.internal.org.objectweb.asm=ALL-UNNAMED -Xlog:class+unload\");\n+        arguments.get(\"options\").setValue(\"--add-exports java.base\/jdk.internal.org.objectweb.asm=ALL-UNNAMED -Xbootclasspath\/a:. -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI\");\n","filename":"test\/jdk\/com\/sun\/jdi\/TestClassUnloadEvents.java","additions":9,"deletions":37,"binary":false,"changes":46,"status":"modified"}]}