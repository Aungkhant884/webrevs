{"files":[{"patch":"@@ -69,0 +69,1 @@\n+#include \"compiler\/disassembler.hpp\"\n@@ -1797,1 +1798,1 @@\n-void CodeCache::print_codelist(outputStream* st) {\n+void CodeCache::print_codelist(outputStream* st, char* decode_method_name) {\n@@ -1809,0 +1810,8 @@\n+    if (decode_method_name != NULL &&\n+        strlen(decode_method_name) > 0 &&\n+        strstr(method_name, decode_method_name) != NULL) {\n+      st->print_cr(\"[Disassembly]\");\n+      Disassembler::decode((nmethod*)cm, st);\n+      st->bol();\n+      st->print_cr(\"[\/Disassembly]\");\n+    }\n","filename":"src\/hotspot\/share\/code\/codeCache.cpp","additions":10,"deletions":1,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -231,1 +231,1 @@\n-  static void print_codelist(outputStream* st);\n+  static void print_codelist(outputStream* st, char* decode_method_name);\n","filename":"src\/hotspot\/share\/code\/codeCache.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -772,2 +772,3 @@\n-  \/\/ To force retry in debugger: assign _tried_to_load_library=0\n-  if (_tried_to_load_library) {\n+  \/\/ To force retry in debugger: assign _tried_to_load_library=0 or\n+  \/\/ turn on ForceLoadDisassembler in the fly\n+  if (!ForceLoadDisassembler && _tried_to_load_library) {\n","filename":"src\/hotspot\/share\/compiler\/disassembler.cpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -85,4 +85,1 @@\n-    if (!_tried_to_load_library) {\n-      load_library();\n-    }\n-    return ! _library_usable;\n+    return !load_library();\n","filename":"src\/hotspot\/share\/compiler\/disassembler.hpp","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -650,0 +650,3 @@\n+  product(bool, ForceLoadDisassembler, false, MANAGEABLE,                   \\\n+          \"Always loading hotspot disassembler\")                            \\\n+                                                                            \\\n","filename":"src\/hotspot\/share\/runtime\/globals.hpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -830,0 +830,6 @@\n+CodeListDCmd::CodeListDCmd(outputStream* output, bool heap) :\n+  DCmdWithParser(output, heap),\n+  _decode(\"decode\", \"Decode the instructions of specified compiled method\", \"STRING\", false, \"\") {\n+  _dcmdparser.add_dcmd_option(&_decode);\n+}\n+\n@@ -831,1 +837,1 @@\n-  CodeCache::print_codelist(output());\n+  CodeCache::print_codelist(output(), _decode.value());\n","filename":"src\/hotspot\/share\/services\/diagnosticCommand.cpp","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -589,1 +589,3 @@\n-class CodeListDCmd : public DCmd {\n+class CodeListDCmd : public DCmdWithParser {\n+private:\n+  DCmdArgument<char*> _decode;\n@@ -591,1 +593,1 @@\n-  CodeListDCmd(outputStream* output, bool heap) : DCmd(output, heap) {}\n+  CodeListDCmd(outputStream* output, bool heap);\n","filename":"src\/hotspot\/share\/services\/diagnosticCommand.hpp","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"}]}