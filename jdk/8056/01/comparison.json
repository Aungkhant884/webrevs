{"files":[{"patch":"@@ -249,3 +249,3 @@\n-        long secs = Math.addExact(seconds, Math.floorDiv(nanoAdjustment, NANOS_PER_SECOND));\n-        int nos = (int) Math.floorMod(nanoAdjustment, NANOS_PER_SECOND);\n-        return create(secs, nos);\n+        long secs = Math.floorDiv(nanoAdjustment, NANOS_PER_SECOND);\n+        int nos = (int) (nanoAdjustment - secs * NANOS_PER_SECOND);\n+        return create(Math.addExact(seconds, secs), nos);\n","filename":"src\/java.base\/share\/classes\/java\/time\/Duration.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -332,3 +332,3 @@\n-        long secs = Math.addExact(epochSecond, Math.floorDiv(nanoAdjustment, NANOS_PER_SECOND));\n-        int nos = (int)Math.floorMod(nanoAdjustment, NANOS_PER_SECOND);\n-        return create(secs, nos);\n+        long nanos = Math.floorDiv(nanoAdjustment, NANOS_PER_SECOND);\n+        int nos = (int) (nanoAdjustment - nanos * NANOS_PER_SECOND);\n+        return create(Math.addExact(epochSecond, nanos), nos);\n@@ -349,1 +349,1 @@\n-        int mos = Math.floorMod(epochMilli, 1000);\n+        int mos = (int) (epochMilli - secs * 1000);\n","filename":"src\/java.base\/share\/classes\/java\/time\/Instant.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1312,3 +1312,3 @@\n-        int newYear = YEAR.checkValidIntValue(Math.floorDiv(calcMonths, 12));\n-        int newMonth = Math.floorMod(calcMonths, 12) + 1;\n-        return resolvePreviousValid(newYear, newMonth, day);\n+        long newYear = Math.floorDiv(calcMonths, 12);\n+        int newMonth = (int) (calcMonths - newYear * 12 + 1); \/\/ safe cast\n+        return resolvePreviousValid(YEAR.checkValidIntValue(newYear), newMonth, day);\n","filename":"src\/java.base\/share\/classes\/java\/time\/LocalDate.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -423,1 +423,1 @@\n-        int secsOfDay = Math.floorMod(localSecond, SECONDS_PER_DAY);\n+        long nanoOfDay = (localSecond - localEpochDay * SECONDS_PER_DAY) * NANOS_PER_SECOND + nanoOfSecond;\n@@ -425,1 +425,1 @@\n-        LocalTime time = LocalTime.ofNanoOfDay(secsOfDay * NANOS_PER_SECOND + nanoOfSecond);\n+        LocalTime time = LocalTime.ofNanoOfDay(nanoOfDay);\n@@ -1562,2 +1562,3 @@\n-        totDays += Math.floorDiv(totNanos, NANOS_PER_DAY);\n-        long newNoD = Math.floorMod(totNanos, NANOS_PER_DAY);\n+        long daysToAdd = Math.floorDiv(totNanos, NANOS_PER_DAY);\n+        totDays += daysToAdd;\n+        long newNoD = totNanos - daysToAdd * NANOS_PER_DAY;\n","filename":"src\/java.base\/share\/classes\/java\/time\/LocalDateTime.java","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -853,3 +853,3 @@\n-        int newYear = YEAR.checkValidIntValue(Math.floorDiv(calcMonths, 12));\n-        int newMonth = Math.floorMod(calcMonths, 12) + 1;\n-        return with(newYear, newMonth);\n+        long newYear = Math.floorDiv(calcMonths, 12);\n+        int newMonth = (int) (calcMonths - newYear * 12 + 1);\n+        return with(YEAR.checkValidIntValue(newYear), newMonth);\n","filename":"src\/java.base\/share\/classes\/java\/time\/YearMonth.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -596,2 +596,4 @@\n-            addFieldValue(fieldValues, MONTH_OF_YEAR, Math.floorMod(pMonth, 12) + 1);\n-            addFieldValue(fieldValues, YEAR, Math.floorDiv(pMonth, 12));\n+            long month = pMonth.longValue();\n+            long year = Math.floorDiv(month, 12);\n+            addFieldValue(fieldValues, MONTH_OF_YEAR, month - year * 12 + 1);\n+            addFieldValue(fieldValues, YEAR, year);\n","filename":"src\/java.base\/share\/classes\/java\/time\/chrono\/IsoChronology.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -74,3 +74,3 @@\n-        \/\/ Various instants during the same day\n-        final Instant loInstant = Instant.EPOCH.plus(Duration.ofDays(365*50)); \/\/ 2020-01-01\n-        final Instant hiInstant = loInstant.plus(Duration.ofDays(1));\n+        \/\/ Various instants during a few years (2020-2024)\n+        final Instant loInstant = Instant.EPOCH.plus(Duration.ofDays(365 * 50)); \/\/ 2020-01-01\n+        final Instant hiInstant = loInstant.plus(Duration.ofDays(4 * 365));\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/time\/GetYearBench.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}