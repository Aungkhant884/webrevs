{"files":[{"patch":"@@ -136,1 +136,1 @@\n-  _metaspace_lock(new Mutex(Mutex::leaf+1, \"Metaspace allocation lock\",\n+  _metaspace_lock(new Mutex(Mutex::leaf-2, \"MetaspaceAllocation_lock\",\n","filename":"src\/hotspot\/share\/classfile\/classLoaderData.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -170,1 +170,1 @@\n-    _lock(Mutex::leaf, \"G1 mapper lock\", Mutex::_safepoint_check_never) {\n+    _lock(Mutex::service-3, \"G1Mapper_lock\", Mutex::_safepoint_check_never) {\n","filename":"src\/hotspot\/share\/gc\/g1\/g1RegionToSpaceMapper.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -236,1 +236,1 @@\n-  _par_alloc_lock(Mutex::leaf, \"HeapRegion par alloc lock\", Mutex::_safepoint_check_always, true),\n+  _par_alloc_lock(Mutex::service-2, \"HeapRegionParAlloc_lock\", Mutex::_safepoint_check_never),\n","filename":"src\/hotspot\/share\/gc\/g1\/heapRegion.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -107,1 +107,1 @@\n-  MutexLocker x(&_par_alloc_lock);\n+  MutexLocker x(&_par_alloc_lock, Mutex::_no_safepoint_check_flag);\n","filename":"src\/hotspot\/share\/gc\/g1\/heapRegion.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -50,1 +50,1 @@\n-  _m(Mutex::leaf + 1, FormatBuffer<128>(\"HeapRegionRemSet lock #%u\", hr->hrm_index()), Monitor::_safepoint_check_never),\n+  _m(Mutex::service - 1, FormatBuffer<128>(\"HeapRegionRemSet#%u_lock\", hr->hrm_index()), Monitor::_safepoint_check_never),\n","filename":"src\/hotspot\/share\/gc\/g1\/heapRegionRemSet.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -358,1 +358,0 @@\n-  CodeCache_lock->lock_without_safepoint_check();\n@@ -365,1 +364,0 @@\n-  CodeCache_lock->unlock();\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahCodeRoots.cpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -103,1 +103,0 @@\n-  shenandoah_assert_locked_or_safepoint(CodeCache_lock);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahNMethod.inline.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1109,1 +1109,0 @@\n-    MutexLocker mu(CodeCache_lock, Mutex::_no_safepoint_check_flag);\n","filename":"src\/hotspot\/share\/memory\/universe.cpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -292,1 +292,1 @@\n-         \"Special locks or below should never safepoint\");\n+         \"Special locks or below should never safepoint: %s\", name);\n@@ -297,1 +297,1 @@\n-         \"Safepoint check never locks should always allow the vm to block\");\n+         \"Safepoint check never locks should always allow the vm to block: %s\", name);\n@@ -299,1 +299,1 @@\n-  assert(_rank >= 0, \"Bad lock rank\");\n+  assert(_rank >= 0, \"Bad lock rank: %s\", name);\n@@ -386,1 +386,0 @@\n-  bool check_can_be_skipped = SafepointSynchronize::is_at_safepoint();\n@@ -392,2 +391,1 @@\n-    if (least != NULL && (least->rank() <= special ||\n-        (least->rank() <= this->rank() && !check_can_be_skipped))) {\n+    if (least != NULL && (least->rank() <= special || least->rank() <= this->rank())) {\n@@ -399,1 +397,1 @@\n-  } else if (!check_can_be_skipped) {\n+  } else {\n","filename":"src\/hotspot\/share\/runtime\/mutex.cpp","additions":5,"deletions":7,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -49,1 +49,1 @@\n-       service        = tty            +   3,\n+       service        = tty            +   6,\n@@ -53,1 +53,1 @@\n-       leaf           = oopstorage     +   2,\n+       leaf           = oopstorage     +  10,\n","filename":"src\/hotspot\/share\/runtime\/mutex.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -207,1 +207,0 @@\n-  def(CGC_lock                     , PaddedMonitor, special,     true,  _safepoint_check_never);      \/\/ coordinate between fore- and background GC\n@@ -211,0 +210,1 @@\n+    def(CGC_lock                   , PaddedMonitor, leaf,        true,  _safepoint_check_never);\n@@ -213,1 +213,1 @@\n-    def(G1DetachedRefinementStats_lock, PaddedMutex, leaf    ,   true, _safepoint_check_never);\n+    def(G1DetachedRefinementStats_lock, PaddedMutex, leaf-2,     true, _safepoint_check_never);\n@@ -215,4 +215,4 @@\n-    def(FreeList_lock              , PaddedMutex  , leaf     ,   true,  _safepoint_check_never);\n-    def(OldSets_lock               , PaddedMutex  , leaf     ,   true,  _safepoint_check_never);\n-    def(Uncommit_lock              , PaddedMutex  , leaf + 1 ,   true,  _safepoint_check_never);\n-    def(RootRegionScan_lock        , PaddedMonitor, leaf     ,   true,  _safepoint_check_never);\n+    def(FreeList_lock              , PaddedMutex  , service-1,   true,  _safepoint_check_never);\n+    def(OldSets_lock               , PaddedMutex  , leaf,        true,  _safepoint_check_never);\n+    def(Uncommit_lock              , PaddedMutex  , service-2,   true,  _safepoint_check_never);\n+    def(RootRegionScan_lock        , PaddedMonitor, leaf-1,      true,  _safepoint_check_never);\n@@ -233,1 +233,1 @@\n-  def(Metaspace_lock               , PaddedMutex  , leaf-1,      true,  _safepoint_check_never);\n+  def(Metaspace_lock               , PaddedMutex  , leaf-3,      true,  _safepoint_check_never);\n@@ -268,1 +268,1 @@\n-  def(NonJavaThreadsList_lock      , PaddedMutex,   barrier,     true,  _safepoint_check_never);\n+  def(NonJavaThreadsList_lock      , PaddedMutex,   leaf-1,      true,  _safepoint_check_never);\n@@ -275,1 +275,1 @@\n-  def(VtableStubs_lock             , PaddedMutex  , leaf,        true,  _safepoint_check_never);\n+  def(VtableStubs_lock             , PaddedMutex  , leaf-2,      true,  _safepoint_check_never);\n@@ -303,1 +303,1 @@\n-  def(Zip_lock                     , PaddedMonitor, leaf,        true,  _safepoint_check_never);\n+  def(Zip_lock                     , PaddedMonitor, leaf-2,      true,  _safepoint_check_never);\n@@ -333,1 +333,1 @@\n-  def(DumpTimeTable_lock           , PaddedMutex  , leaf - 1,    true,  _safepoint_check_never);\n+  def(DumpTimeTable_lock           , PaddedMutex  , leaf-1,      true,  _safepoint_check_never);\n","filename":"src\/hotspot\/share\/runtime\/mutexLocker.cpp","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -1017,1 +1017,1 @@\n-    new Mutex(Mutex::leaf, \"ConcurrentHashTable\",\n+    new Mutex(Mutex::leaf-2, \"ConcurrentHashTableResize_lock\",\n","filename":"src\/hotspot\/share\/utilities\/concurrentHashTable.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}