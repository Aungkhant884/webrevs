{"files":[{"patch":"@@ -88,1 +88,1 @@\n-    ms->calculate_jfr_stats(&used_words, &capacity_words);\n+    ms->usage_numbers(&used_words, nullptr, &capacity_words);\n@@ -103,1 +103,0 @@\n-\n","filename":"src\/hotspot\/share\/classfile\/classLoaderStats.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -163,12 +163,17 @@\n-\/\/ This only exists for JFR and jcmd VM.classloader_stats. We may want to\n-\/\/  change this. Capacity as a stat is of questionable use since it may\n-\/\/  contain committed and uncommitted areas. For now we do this to maintain\n-\/\/  backward compatibility with JFR.\n-void ClassLoaderMetaspace::calculate_jfr_stats(size_t* p_used_bytes, size_t* p_capacity_bytes) const {\n-  \/\/ Implement this using the standard statistics objects.\n-  size_t used_c = 0, cap_c = 0, used_nc = 0, cap_nc = 0;\n-  if (non_class_space_arena() != nullptr) {\n-    non_class_space_arena()->usage_numbers(&used_nc, nullptr, &cap_nc);\n-  }\n-  if (class_space_arena() != nullptr) {\n-    class_space_arena()->usage_numbers(&used_c, nullptr, &cap_c);\n+\/\/ Convenience method to get the most important usage statistics.\n+void ClassLoaderMetaspace::usage_numbers(Metaspace::MetadataType mdType, size_t* p_used_words,\n+                                         size_t* p_committed_words, size_t* p_capacity_words) const {\n+  const MetaspaceArena* arena = (mdType == Metaspace::MetadataType::ClassType) ?\n+      class_space_arena() : non_class_space_arena();\n+  arena->usage_numbers(p_used_words, p_committed_words, p_capacity_words);\n+}\n+\n+\/\/ Convenience method to get total usage numbers\n+void ClassLoaderMetaspace::usage_numbers(size_t* p_used_words, size_t* p_committed_words,\n+                                         size_t* p_capacity_words) const {\n+  size_t used_nc, comm_nc, cap_nc;\n+  usage_numbers(Metaspace::MetadataType::NonClassType, &used_nc, &comm_nc, &cap_nc);\n+  size_t used_c, comm_c, cap_c;\n+  usage_numbers(Metaspace::MetadataType::ClassType, &used_c, &comm_c, &cap_c);\n+  if (p_used_words != nullptr) {\n+    (*p_used_words) = used_nc + used_c;\n@@ -176,2 +181,2 @@\n-  if (p_used_bytes != nullptr) {\n-    *p_used_bytes = used_c + used_nc;\n+  if (p_committed_words != nullptr) {\n+    (*p_committed_words) = comm_nc + comm_c;\n@@ -179,2 +184,2 @@\n-  if (p_capacity_bytes != nullptr) {\n-    *p_capacity_bytes = cap_c + cap_nc;\n+  if (p_capacity_words != nullptr) {\n+    (*p_capacity_words) = cap_nc + cap_c;\n@@ -183,1 +188,0 @@\n-\n","filename":"src\/hotspot\/share\/memory\/classLoaderMetaspace.cpp","additions":21,"deletions":17,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -102,5 +102,9 @@\n-  \/\/ This only exists for JFR and jcmd VM.classloader_stats. We may want to\n-  \/\/  change this. Capacity as a stat is of questionable use since it may\n-  \/\/  contain committed and uncommitted areas. For now we do this to maintain\n-  \/\/  backward compatibility with JFR.\n-  void calculate_jfr_stats(size_t* p_used_bytes, size_t* p_capacity_bytes) const;\n+  \/\/ Convenience method to get the most important usage statistics for either class\n+  \/\/ or non-class space. For more detailed statistics, use add_to_statistics().\n+  void usage_numbers(Metaspace::MetadataType mdType, size_t* p_used_words,\n+                     size_t* p_committed_words, size_t* p_capacity_words) const;\n+\n+  \/\/ Convenience method to get the most important usage statistics (totals; both class- and non-class spaces)\n+  \/\/ For more detailed statistics, use add_to_statistics().\n+  void usage_numbers(size_t* p_used_words, size_t* p_committed_words,\n+                     size_t* p_capacity_words) const;\n","filename":"src\/hotspot\/share\/memory\/classLoaderMetaspace.hpp","additions":9,"deletions":5,"binary":false,"changes":14,"status":"modified"}]}