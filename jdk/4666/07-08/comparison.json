{"files":[{"patch":"@@ -495,1 +495,1 @@\n-                    bottomType instanceof TypeArrayKlass) {\n+                bottomType instanceof TypeArrayKlass) {\n@@ -498,1 +498,1 @@\n-                \/\/ internal object, nothing to write.\n+                \/\/ Internal object, nothing to write.\n@@ -502,1 +502,1 @@\n-            Instance instance = (Instance) oop;\n+            Instance instance = (Instance)oop;\n@@ -610,2 +610,2 @@\n-        \/\/ dump instance record only for primitive type Class objects.\n-        \/\/ all other Class objects are covered by writeClassDumpRecords.\n+        \/\/ Dump instance record only for primitive type Class objects.\n+        \/\/ All other Class objects are covered by writeClassDumpRecords.\n@@ -642,1 +642,1 @@\n-        if (size == 0 || (currentSegmentStart > 0)) {\n+        if (size == 0 || currentSegmentStart > 0) {\n@@ -651,1 +651,1 @@\n-            out.writeByte((byte) (HPROF_HEAP_DUMP));\n+            out.writeByte((byte)HPROF_HEAP_DUMP);\n@@ -653,1 +653,1 @@\n-            \/\/ record position of the length slot\n+            \/\/ record the current position in file, it will be use for calculating the size of written data\n@@ -721,1 +721,1 @@\n-    \/\/ The limitation is that the size of \"heap dump\" or \"heap dump segment\" must be <= MAX_U4_VALUE\n+    \/\/ The limitation is that the size of \"heap dump\" or \"heap dump segment\" must be <= MAX_U4_VALUE.\n@@ -732,1 +732,1 @@\n-        long maxBytes = (MAX_U4_VALUE - headerSize);\n+        long maxBytes = MAX_U4_VALUE - headerSize;\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/utilities\/HeapHprofBinWriter.java","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"}]}