[{"commit":{"message":"Merge scientificware-patch-003-CSS-add_4_8_digits_hex_coded_color\n\n# Conflicts:\n#\tsrc\/java.desktop\/share\/classes\/javax\/swing\/text\/html\/CSS.java"},"files":[{"filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/html\/CSS.java"}],"sha":"6a6af62297c02cdde64abe93dd3c70bc6810e610"},{"commit":{"message":"Merge master"},"files":[],"sha":"91f95795c70901181bda8bcd145b87fbc7931723"},{"commit":{"message":"Merge branch 'master'\n\nCSS.java :\nRemoves assigning values inside the if-condition\nExtracts the assignments into separate line.\n\nHex3468DigitsColor.java :\nAdds a message to result in case of failure only"},"files":[{"filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/html\/CSS.java"},{"filename":"test\/jdk\/javax\/swing\/text\/html\/CSS\/Hex3468DigitsColor.java"}],"sha":"d72cb9fc3a38e1b47c5b2ef26c7c2421389b4c33"},{"commit":{"message":"Updates copyright date.\n\nUpdates copyright date to 2023."},"files":[{"filename":"test\/jdk\/javax\/swing\/text\/html\/CSS\/Hex3468DigitsColor.java"}],"sha":"82946cce634d6f490eb44e5979f8221bbcb14985"},{"commit":{"message":"Updates copyright date.\n\nUpdates copyright date to 2023."},"files":[{"filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/html\/CSS.java"}],"sha":"b9304ef906e6ccf0330c239f7ef345b3e1f329d9"},{"commit":{"message":"Update imports\n\nRemove java.util.Pattern and add java.util.Map imports"},"files":[{"filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/html\/CSS.java"}],"sha":"433e76f7a46aeef27f85d3501b19d086488bce4f"},{"commit":{"message":"Performance improvement\n\nPerformance results came from my repository I mentioned in the header.\r\n\r\n    The code before this PR ran in 230ms.\r\n    Our previous codes ran in 1 200ms to 1800 ms with String + formatted + %n$s usage.\r\n    They ran in 350ms to 380ms with String + formatted + %s usage.\r\n    And in 100ms to 110ms if we replace String + format with a string concatenation.\r\n    Now the code below gives the same results in 36ms and with all our expected behaviors. Since we control notation length we\r\n        can bypass some controls,\r\n        directly generate the color value,\r\n        without generate a new string,\r\n        and reject a wrong number format without generate any exception."},"files":[{"filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/html\/CSS.java"}],"sha":"8f65b852b7d93084792ed8ce7a5cd03c23aac012"},{"commit":{"message":"Corrects a value in a message.\n\nA message is added to the result in case of failure only. The updated code does not output the actual value. The tested color is #f12a instead of #f00a."},"files":[{"filename":"test\/jdk\/javax\/swing\/text\/html\/CSS\/Hex3468DigitsColor.java"}],"sha":"b73bec53cae487d88d7072cb42b72046e54c03a2"},{"commit":{"message":"Simplifications of the test.\n\nRemoves individual color tests and only compares the RGB value."},"files":[{"filename":"test\/jdk\/javax\/swing\/text\/html\/CSS\/Hex3468DigitsColor.java"}],"sha":"a95d2824b8fa9b545c808740bc335c4c6bd46550"},{"commit":{"message":"Renames an identifier.\n\nSuggested change, not to use `l` as an identifier because it could be confused with `1`.\r\nThis part of code could change and be replaced by bits right rotation after  performance tests."},"files":[{"filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/html\/CSS.java"}],"sha":"767c87ce2449513cbe91992b3c3446a7aeaab950"},{"commit":{"message":"Corrects Licence Header.\n\nRemoves Classpath exception."},"files":[{"filename":"test\/jdk\/javax\/swing\/text\/html\/CSS\/Hex3468DigitsColor.java"}],"sha":"478f285e128036291db1678e4044f5732bd505e3"},{"commit":{"message":"Corrects typos and digit extraction.\n\nCorrects typos.\r\nAnd applies a better digit extraction as suggested in main-line review thread."},"files":[{"filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/html\/CSS.java"}],"sha":"e6454c11b53c5efb56a7ed8d60c3eefdfc8fcb70"},{"commit":{"message":"Update src\/java.desktop\/share\/classes\/javax\/swing\/text\/html\/CSS.java\r\n\r\nSorry. Thanks.\n\nCo-authored-by: ExE Boss <3889017+ExE-Boss@users.noreply.github.com>"},"files":[{"filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/html\/CSS.java"}],"sha":"59709803601bb73bf717caea515c83d67a5ad916"},{"commit":{"message":"Removes author name.\n\nRemoves author name for JDK main-line development repository."},"files":[{"filename":"test\/jdk\/javax\/swing\/text\/html\/CSS\/Hex3468DigitsColor.java"}],"sha":"24040cf664ecdeb2678796761331edfc60a6b897"},{"commit":{"message":"Adds regression test.\n\nAdds a regression for DK-8293776 : Adds CSS 4 and 8 digits hex coded Color #13"},"files":[{"filename":"test\/jdk\/javax\/swing\/text\/html\/CSS\/Hex3468DigitsColor.java"}],"sha":"93dc0bbdf6574823bf7e2542ce1b09c89de25daa"},{"commit":{"message":"Improper Name in comments\n\nModifies the improper name of the recommendation with CSS Color Level 4.\r\nCSS Level 4 doesn't exist. CSS is a set of Modules, one of them is Color."},"files":[{"filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/html\/CSS.java"}],"sha":"5b365172a82f20021fd9641763539aea4b0ff9d3"},{"commit":{"message":"Adds final modifier.\n\nAdds a final modifier to hex Pattern."},"files":[{"filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/html\/CSS.java"}],"sha":"7a99e7ca9af454ed6130da72ba3549f7f1be32a6"},{"commit":{"message":"Adds or removes spaces.\n\nSome spaces are missing or extra."},"files":[{"filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/html\/CSS.java"}],"sha":"0ebf1747649119c795590fb6abb47b820824c4fa"},{"commit":{"message":"Removes int cast.\n\nRemoves unnecessary integer casts."},"files":[{"filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/html\/CSS.java"}],"sha":"7d7f49fe8a3f88e7fba8dcb68bda30ef891c6598"},{"commit":{"message":"Update Copyrigth.\n\nUpdatre Copyrigth date."},"files":[{"filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/html\/CSS.java"}],"sha":"d1301f3f19f7fba7c83d6d26e7e460fe91861bd9"},{"commit":{"message":"Remove NumberFormatException\n\njava.lang.NumberFormatException is imported by default."},"files":[{"filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/html\/CSS.java"}],"sha":"146bba4e7f4deeef4ce9e84f158f4ce8b519d007"},{"commit":{"message":"Adds missing import and declaration.\n\nThis implementation uses a Pattern instance and parses the string argument as an unsigned integer with radix 16.\r\n- The pattern declaration and import are missing.\r\n- The parseUnsignedInt method can send a NumberFormatException, its import is missing."},"files":[{"filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/html\/CSS.java"}],"sha":"fe75e26ebc3b4d27a37cd1f6e25766157800dcc8"},{"commit":{"message":"Typo.\n\nTypo in comment."},"files":[{"filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/html\/CSS.java"}],"sha":"04f2d689e3bd1c4b2968e0a25e8105d56af3d8ff"},{"commit":{"message":"Adds new color hex formats.\n\n CSS level 4\r\n - defines color hex code as #[2 digits Red][2 digits Green][2 digits Blue][2 digits Alpha]. With digit 0 ... f.\r\n - allows, webpage passes 3, 4, 6 or 8 digit color code.\r\n   - 3 digits #[R][G][B] ........ represents #[RR][GG][BB]FF\r\n   - 4 digits #[R][G][B][A] ..... represents #[RR][GG][BB][AA]\r\n   - 6 digits #[RR][GG][BB] ..... represents #[RR][GG][BB]FF\r\n   - 8 digits #[RR][GG][BB][AA] . represents #[RR][GG][BB][AA]\r\n\r\n Becareful ! In java.awt.Color hex #[2 digits Alpha][2 digits Red][2 digits Green][2 digits Blue]\r\n Comme cette méthode est définie dans CSS, elle doit traiter uniquement le format CSS Level 4.\r\n\r\n According notes below the current OpenJDK implementation is\r\n - 3 digits #[R][G][B]    represents #[RR][GG][BB]FF\r\n - 6 digits #[R][G][B]    represents #[RR][GG][BB]FF"},"files":[{"filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/html\/CSS.java"}],"sha":"ec872fa592c4795140f3b7fc804af8e3bdae8bb3"},{"commit":{"message":"Merge master"},"files":[],"sha":"06409e61f24f934111f44a939e5008e2f9f3c93e"},{"commit":{"message":"Removes assigning values inside the if-condition and extracts the assignments into separate line.\n\nMerge master\n\n# Conflicts:\n#\tsrc\/java.desktop\/share\/classes\/javax\/swing\/text\/html\/CSS.java"},"files":[{"filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/html\/CSS.java"}],"sha":"ed69596672c11d4e8f47dea6f2cea3115a0952d2"},{"commit":{"message":"Suppression d'un import non utilisé.\nL'utilisation de la classe Patter n'est plus d'actualité."},"files":[{"filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/html\/CSS.java"}],"sha":"eba37e96d5cf69ff2eaa57100b8862f17862e967"},{"commit":{"message":"CSS.java :\n\n- Méthode hexToColor :\n  - Simplication des commentaires pour le dépôt principal.\n  - Modification de l'analyse des valeurs hexadécimales.\n    - La valeur de la couleur est formée directement lors de la lecture de chaque caractère.\n    - La position des valeurs à utiliser est désormais donnée par un objet Map. Ce qui accélère le traitement dans un facteur de 6 à 7."},"files":[{"filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/html\/CSS.java"}],"sha":"45c2c180928ddf82baaf74df56a2c47cdcbbcac6"},{"commit":{"message":"CSS.java :\n- Corrects typos.\n- Applies a better digit extraction as suggested in main-line review thread.\n  - Using charAt avoids creating temporary strings of length 1.\n  - Also, using the %[argument_index$]conversion format specifier form allows halving the lengths of the vararg arrays.\n- Corrects mistake about variable declaration for parseUnsignedInt(...) method returned value. Must be int and not Integer.\n\nHex3468DigitsColor.java :\n- Ajout d'un test de régression pour JDK-8293776."},"files":[{"filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/html\/CSS.java"},{"filename":"test\/jdk\/javax\/swing\/text\/html\/CSS\/Hex3468DigitsColor.java"}],"sha":"6ee25cd576b745d78a8d2ef08ea1f6c38b378b8e"},{"commit":{"message":"CSS.java\n- Adds final modifier to hex Pattern.\n- corrects recommandation names CSS Level 4.\n- Adds missing spaces."},"files":[{"filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/html\/CSS.java"}],"sha":"1724cdf8ef3cb45732a23bd98484c90800a9b4e8"},{"commit":{"message":"- This modifies the CSS.java Copyright date.\n- This modifies CSS.java hexToColor method,\n  - by adding two hex code formats,\n  - by treating only 2, 3, 4 and 8 digits well formated hex code, all other string returns null."},"files":[{"filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/html\/CSS.java"}],"sha":"dd0281323fba1670ec0d065ceb14e8f3256e9a3b"},{"commit":{"message":"Merge master"},"files":[],"sha":"ca6a1cfe4b82fad807ae6149c8d778ceb47743ad"},{"commit":{"message":"StyleSheet.java : Adds missing space in some if statements"},"files":[{"filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/html\/StyleSheet.java"}],"sha":"f493ef2cd9f1ef7a49f1475f517ef5dd4be8e8e1"},{"commit":{"message":"Merge branch 'openjdk:master' into scientificware-patch-002-CSS-add_missing_named_color"},"files":[],"sha":"a4341355e720bc27e6e5aec8f90735c415564921"},{"commit":{"message":"Update src\/java.desktop\/share\/classes\/javax\/swing\/text\/html\/CSS.java\n\nCo-authored-by: Andrey Turbanov <turbanoff@gmail.com>"},"files":[{"filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/html\/CSS.java"}],"sha":"9a6d7d6605010f2c89474cf2ab5d44353f7e76af"},{"commit":{"message":"Merge master"},"files":[],"sha":"be39a8415a759f0294ea1ec6af4df71bb87df516"},{"commit":{"message":"MissingColorNames.java test : Tests all named colors."},"files":[{"filename":"test\/jdk\/javax\/swing\/text\/html\/CSS\/MissingColorNames.java"}],"sha":"3fd41e0e8e68f8115ed063db993fc0e3de83745d"},{"commit":{"message":"CSS.java :\nMisalignment of comments.\nlazily initialization of colorNames.\n\nStyleSheet.java :\nUpdate the specification of stringToColor."},"files":[{"filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/html\/CSS.java"},{"filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/html\/StyleSheet.java"}],"sha":"033523179ec8fb8fc874bc2aef4b990be35ab873"},{"commit":{"message":"configure : linux file permission moves from 644=rw-r--r-- to 755=rwxr-xr-x."},"files":[],"sha":"63d69fca9b3f37b9157846e6f879ed1d14e24922"},{"commit":{"message":"Merge master"},"files":[],"sha":"3855ddbcf5b9ff7b51935b73b06bf88ab4c0d600"},{"commit":{"message":"Merge master"},"files":[],"sha":"bd2811ddd07e8667050dee478d7b1ac66af928e5"},{"commit":{"message":"Merge master\n\n# Conflicts:\n#\tsrc\/java.desktop\/share\/classes\/javax\/swing\/text\/html\/CSS.java\n#\tsrc\/java.desktop\/share\/classes\/javax\/swing\/text\/html\/StyleSheet.java"},"files":[{"filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/html\/CSS.java"},{"filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/html\/StyleSheet.java"}],"sha":"9098fc7dfbf89e85cccba64e4c8b43907ff451fa"},{"commit":{"message":"CSS.java\n- Updates copyright date to 2023.\n- Adds the missing color names defined by :\n  CSS Color Module Level 4\n  W3C Candidate Recommendation Snapshot, 5 July 2022\n  [7.1 Named Colors](https:\/\/www.w3.org\/TR\/css-color-4\/#named-color)\n  - Adds relative imports.\n  - Replaces, if ... then ... else statements with a Map called \"colorNamed\".\n\nStyleSheet.java ;\n- Updates copyright date to 2023.\n- Updates stringToColor specifications to integrate a reference to CSS Color Module 4 for color names and hexadecimal notation.\n\nMissingColorNames.java :\n- Création d'un test pour les nouveaux noms de couleurs ajoutés."},"files":[{"filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/html\/CSS.java"},{"filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/html\/StyleSheet.java"},{"filename":"test\/jdk\/javax\/swing\/text\/html\/CSS\/MissingColorNames.java"}],"sha":"d609c5f014f02f2fd5708a42a7ee93342953c411"},{"commit":{"message":"MissingColorNames.java :\nMoves jtreg tags to the class declaration. Comment with tags isn't collapsed when viewed in an IDE if it's placed before the class declaration."},"files":[{"filename":"test\/jdk\/javax\/swing\/text\/html\/CSS\/MissingColorNames.java"}],"sha":"5cc2575638e812c67984895b5ec71189e76c66e6"},{"commit":{"message":"JDK8292276MissingColorNamesInCSS.java -> MissingColorNames.java :\n- Changement de nom.\n- Déplacement vers un autre dossier.\n- Simplification d'une description.\n- Ajout d'espaces manquants.\n- Correction de l'alignement d'un délimiteur de commentaire.\n\nCSS.java :\n- Changement de nom pour la variable colorNamed.\n- Ajout du modificateur final à la variable ColorNames.\n- Uniformisation de l'utilisation de la variable strlc.\n- renvoi direct de la couleur trouvée si elle existe."},"files":[{"filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/html\/CSS.java"},{"filename":"test\/jdk\/javax\/swing\/text\/html\/CSS\/MissingColorNames.java"}],"sha":"40a7951a7a897bb7185bee405e32ee05c022d002"},{"commit":{"message":"Problème de configuration de KWrite.\nQui rajoutait un retour ligne à la fin de chaque fichier."},"files":[{"filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/html\/CSS.java"}],"sha":"752ec64239165f0f6b37c587b09faa56167f9628"},{"commit":{"message":"CSS.java\n- Corrige une grossière erreur de code :\nModifie l'emplacement de la mise en minuscules pour le placer juste après les cas pour lequel cela n'a pas d'importance et surtout après avoir envisager le cas null.\n  Sinon ce pouvait engendrer un NPE.\n- Modifie la déclaration des couleurs opaques. En choisissant la déclaration avec trois entiers.\n\nJDS8292276MissingColorNamesInCSS.java :\n- Ajout du cas null.\n- Ajout du test sur le"},"files":[{"filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/html\/CSS.java"}],"sha":"2ce2be4e69f5c6b0df3613d4cda3bf45b9d23753"},{"commit":{"message":"Erreur de nom.\nUn caractère de retour à la ligne s'est immiscer dans le nom du dossier."},"files":[],"sha":"23e88bb8558f466a3dbb8b8c5020e56dbbb769ee"},{"commit":{"message":"This commit modifies stringToColor method\n    - by correcting orange definition,\n    - by adding 132 missing color names,\n      - including transparent keyword\n      - but excluding currentcolor keyword.\n    - by treating RGB and Hex notations in insensitive case mode.\nThis commit modifies stringToColor method which has no modifier, so only usages are limited to :\n    - its Class.\n    - The inner Class ColorValue also without modifier uses it through the method to return the Color Object\n    - its Package.\n    - stringToColor is also used by javax.swing.text.html.StyleSheet stringToColor method to publicly return the Color Object.\n    - conclusion : since Color Object is publicly exposed, one can't change method behavior. This preventing to return a constant Color excepted for the existing String.isEmpty argument.\nRefactoring resolving color value and align it with 5.7. Resolving Values Values) will be treated in another PR. Extends JDK-8149631 rgb(...) CSS color values are not parsed properly."},"files":[{"filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/html\/CSS.java"}],"sha":"77482bbe6ac6e31ae4c1e2e6b463fbc3d448efd0"},{"commit":{"message":"Test case for JDK-8292276\n\nAdds a jtreg test case that fails before JDK-8292276 patch and passes after.\nTest the Cyan color name.\nCyan is the missing color name that originates the PR JDK8292276 : Missing Color NamesIn CSS.\nCyan name, as most color names Colors defined in CSS Color Module Level 4, is not referenced in CSS.java.\nThis test fails, if getAttribute doesn't return a cyan Color Object.\nWhen a color name is missing getAttribute returns a black Color Object."},"files":[],"sha":"61a3e7519db1f33c29ea33ac4328edcc54e56e37"},{"commit":{"message":"Adds to CSS.java, the missing color names defined by :\nCSS Color Module Level 4\nW3C Candidate Recommendation Snapshot, 5 July 2022\n[7.1 Named Colors](https:\/\/www.w3.org\/TR\/css-color-4\/#named-color)\n- Updates, Copyright year.\n- Adds relative imports.\n- Replaces, if ... then ... else statements with a Map called \"colorNamed\".\n  Code is more readable and easy to maintain.\n  After tests, TreeMap seems slower than Map. Results are available at scientificware#12 (comment).\n\nWarning : The Previous JDK CSS Orange Color is different from CSS Color Recommendation."},"files":[{"filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/html\/CSS.java"}],"sha":"edd0cacc564af5e58fa8b52f5852f0b7f822e6fd"}]