{"files":[{"patch":"@@ -41,0 +41,2 @@\n+import java.util.Locale;\n+import java.util.Map;\n@@ -1357,5 +1359,5 @@\n-     \/**\n-      * Convert a \"#FFFFFF\" hex string to a Color.\n-      * If the color specification is bad, an attempt\n-      * will be made to fix it up.\n-      *\/\n+    \/**\n+     * Convert a \"#FFFFFF\" hex string to a Color.\n+     * If the color specification is bad, an attempt\n+     * will be made to fix it up.\n+     *\/\n@@ -1393,0 +1395,2 @@\n+    private static Map<String, Color> colorNames;\n+\n@@ -1398,51 +1402,177 @@\n-      Color color;\n-\n-      if (str == null) {\n-          return null;\n-      }\n-      if (str.length() == 0)\n-        color = Color.black;\n-      else if (str.startsWith(\"rgb(\")) {\n-          color = parseRGB(str);\n-      } else if (str.startsWith(\"rgba(\")) {\n-          color = parseRGBA(str);\n-      }\n-      else if (str.charAt(0) == '#')\n-        color = hexToColor(str);\n-      else if (str.equalsIgnoreCase(\"Black\"))\n-        color = hexToColor(\"#000000\");\n-      else if(str.equalsIgnoreCase(\"Silver\"))\n-        color = hexToColor(\"#C0C0C0\");\n-      else if(str.equalsIgnoreCase(\"Gray\"))\n-        color = hexToColor(\"#808080\");\n-      else if(str.equalsIgnoreCase(\"White\"))\n-        color = hexToColor(\"#FFFFFF\");\n-      else if(str.equalsIgnoreCase(\"Maroon\"))\n-        color = hexToColor(\"#800000\");\n-      else if(str.equalsIgnoreCase(\"Red\"))\n-        color = hexToColor(\"#FF0000\");\n-      else if(str.equalsIgnoreCase(\"Purple\"))\n-        color = hexToColor(\"#800080\");\n-      else if(str.equalsIgnoreCase(\"Fuchsia\"))\n-        color = hexToColor(\"#FF00FF\");\n-      else if(str.equalsIgnoreCase(\"Green\"))\n-        color = hexToColor(\"#008000\");\n-      else if(str.equalsIgnoreCase(\"Lime\"))\n-        color = hexToColor(\"#00FF00\");\n-      else if(str.equalsIgnoreCase(\"Olive\"))\n-        color = hexToColor(\"#808000\");\n-      else if(str.equalsIgnoreCase(\"Yellow\"))\n-        color = hexToColor(\"#FFFF00\");\n-      else if(str.equalsIgnoreCase(\"Navy\"))\n-        color = hexToColor(\"#000080\");\n-      else if(str.equalsIgnoreCase(\"Blue\"))\n-        color = hexToColor(\"#0000FF\");\n-      else if(str.equalsIgnoreCase(\"Teal\"))\n-        color = hexToColor(\"#008080\");\n-      else if(str.equalsIgnoreCase(\"Aqua\"))\n-        color = hexToColor(\"#00FFFF\");\n-      else if(str.equalsIgnoreCase(\"Orange\"))\n-        color = hexToColor(\"#FF8000\");\n-      else\n-          color = hexToColor(str); \/\/ sometimes get specified without leading #\n-      return color;\n+        if (str == null) {\n+            return null;\n+        } else if (str.isEmpty()) {\n+            return Color.black;\n+        }\n+        String strlc = str.toLowerCase(Locale.ROOT);\n+        if (strlc.startsWith(\"rgb(\")) {\n+            return parseRGB(str);\n+        } else if (strlc.startsWith(\"rgba(\")) {\n+            return parseRGBA(str);\n+        } else if (strlc.charAt(0) == '#') {\n+            return hexToColor(str);\n+        } else {\n+            if (colorNames == null) {\n+                colorNames = initColorNames();\n+            }\n+            Color color = colorNames.get(strlc);\n+            if (color != null) {\n+                return color;\n+            }\n+            \/\/ sometimes get specified without leading #\n+            return hexToColor(str);\n+        }\n+    }\n+\n+    private static Map<String, Color> initColorNames() {\n+        return Map.ofEntries(\n+            Map.entry(\"aliceblue\", new Color(240, 248, 255)),\n+            Map.entry(\"antiquewhite\", new Color(250, 235, 215)),\n+            Map.entry(\"aqua\", new Color(0, 255, 255)),\n+            Map.entry(\"aquamarine\", new Color(127, 255, 212)),\n+            Map.entry(\"azure\", new Color(240, 255, 255)),\n+            Map.entry(\"beige\", new Color(245, 245, 220)),\n+            Map.entry(\"bisque\", new Color(255, 228, 196)),\n+            Map.entry(\"black\", new Color(0, 0, 0)),\n+            Map.entry(\"blanchedalmond\", new Color(255, 235, 205)),\n+            Map.entry(\"blue\", new Color(0, 0, 255)),\n+            Map.entry(\"blueviolet\", new Color(138, 43, 226)),\n+            Map.entry(\"brown\", new Color(165, 42, 42)),\n+            Map.entry(\"burlywood\", new Color(222, 184, 135)),\n+            Map.entry(\"cadetblue\", new Color(95, 158, 160)),\n+            Map.entry(\"chartreuse\", new Color(127, 255, 0)),\n+            Map.entry(\"chocolate\", new Color(210, 105, 30)),\n+            Map.entry(\"coral\", new Color(255, 127, 80)),\n+            Map.entry(\"cornflowerblue\", new Color(100, 149, 237)),\n+            Map.entry(\"cornsilk\", new Color(255, 248, 220)),\n+            Map.entry(\"crimson\", new Color(220, 20, 60)),\n+            Map.entry(\"cyan\", new Color(0, 255, 255)),\n+            Map.entry(\"darkblue\", new Color(0, 0, 139)),\n+            Map.entry(\"darkcyan\", new Color(0, 139, 139)),\n+            Map.entry(\"darkgoldenrod\", new Color(184, 134, 11)),\n+            Map.entry(\"darkgray\", new Color(169, 169, 169)),\n+            Map.entry(\"darkgreen\", new Color(0, 100, 0)),\n+            Map.entry(\"darkgrey\", new Color(169, 169, 169)),\n+            Map.entry(\"darkkhaki\", new Color(189, 183, 107)),\n+            Map.entry(\"darkmagenta\", new Color(139, 0, 139)),\n+            Map.entry(\"darkolivegreen\", new Color(85, 107, 47)),\n+            Map.entry(\"darkorange\", new Color(255, 140, 0)),\n+            Map.entry(\"darkorchid\", new Color(153, 50, 204)),\n+            Map.entry(\"darkred\", new Color(139, 0, 0)),\n+            Map.entry(\"darksalmon\", new Color(233, 150, 122)),\n+            Map.entry(\"darkseagreen\", new Color(143, 188, 143)),\n+            Map.entry(\"darkslateblue\", new Color(72, 61, 139)),\n+            Map.entry(\"darkslategray\", new Color(47, 79, 79)),\n+            Map.entry(\"darkslategrey\", new Color(47, 79, 79)),\n+            Map.entry(\"darkturquoise\", new Color(0, 206, 209)),\n+            Map.entry(\"darkviolet\", new Color(148, 0, 211)),\n+            Map.entry(\"deeppink\", new Color(255, 20, 147)),\n+            Map.entry(\"deepskyblue\", new Color(0, 191, 255)),\n+            Map.entry(\"dimgray\", new Color(105, 105, 105)),\n+            Map.entry(\"dimgrey\", new Color(105, 105, 105)),\n+            Map.entry(\"dodgerblue\", new Color(30, 144, 255)),\n+            Map.entry(\"firebrick\", new Color(178, 34, 34)),\n+            Map.entry(\"floralwhite\", new Color(255, 250, 240)),\n+            Map.entry(\"forestgreen\", new Color(34, 139, 34)),\n+            Map.entry(\"fuchsia\", new Color(255, 0, 255)),\n+            Map.entry(\"gainsboro\", new Color(220, 220, 220)),\n+            Map.entry(\"ghostwhite\", new Color(248, 248, 255)),\n+            Map.entry(\"gold\", new Color(255, 215, 0)),\n+            Map.entry(\"goldenrod\", new Color(218, 165, 32)),\n+            Map.entry(\"gray\", new Color(128, 128, 128)),\n+            Map.entry(\"green\", new Color(0, 128, 0)),\n+            Map.entry(\"greenyellow\", new Color(173, 255, 47)),\n+            Map.entry(\"grey\", new Color(128, 128, 128)),\n+            Map.entry(\"honeydew\", new Color(240, 255, 240)),\n+            Map.entry(\"hotpink\", new Color(255, 105, 180)),\n+            Map.entry(\"indianred\", new Color(205, 92, 92)),\n+            Map.entry(\"indigo\", new Color(75, 0, 130)),\n+            Map.entry(\"ivory\", new Color(255, 255, 240)),\n+            Map.entry(\"khaki\", new Color(240, 230, 140)),\n+            Map.entry(\"lavender\", new Color(230, 230, 250)),\n+            Map.entry(\"lavenderblush\", new Color(255, 240, 245)),\n+            Map.entry(\"lawngreen\", new Color(124, 252, 0)),\n+            Map.entry(\"lemonchiffon\", new Color(255, 250, 205)),\n+            Map.entry(\"lightblue\", new Color(173, 216, 230)),\n+            Map.entry(\"lightcoral\", new Color(240, 128, 128)),\n+            Map.entry(\"lightcyan\", new Color(224, 255, 255)),\n+            Map.entry(\"lightgoldenrodyellow\", new Color(250, 250, 210)),\n+            Map.entry(\"lightgray\", new Color(211, 211, 211)),\n+            Map.entry(\"lightgreen\", new Color(144, 238, 144)),\n+            Map.entry(\"lightgrey\", new Color(211, 211, 211)),\n+            Map.entry(\"lightpink\", new Color(255, 182, 193)),\n+            Map.entry(\"lightsalmon\", new Color(255, 160, 122)),\n+            Map.entry(\"lightseagreen\", new Color(32, 178, 170)),\n+            Map.entry(\"lightskyblue\", new Color(135, 206, 250)),\n+            Map.entry(\"lightslategray\", new Color(119, 136, 153)),\n+            Map.entry(\"lightslategrey\", new Color(119, 136, 153)),\n+            Map.entry(\"lightsteelblue\", new Color(176, 196, 222)),\n+            Map.entry(\"lightyellow\", new Color(255, 255, 224)),\n+            Map.entry(\"lime\", new Color(0, 255, 0)),\n+            Map.entry(\"limegreen\", new Color(50, 205, 50)),\n+            Map.entry(\"linen\", new Color(250, 240, 230)),\n+            Map.entry(\"magenta\", new Color(255, 0, 255)),\n+            Map.entry(\"maroon\", new Color(128, 0, 0)),\n+            Map.entry(\"mediumaquamarine\", new Color(102, 205, 170)),\n+            Map.entry(\"mediumblue\", new Color(0, 0, 205)),\n+            Map.entry(\"mediumorchid\", new Color(186, 85, 211)),\n+            Map.entry(\"mediumpurple\", new Color(147, 112, 219)),\n+            Map.entry(\"mediumseagreen\", new Color(60, 179, 113)),\n+            Map.entry(\"mediumslateblue\", new Color(123, 104, 238)),\n+            Map.entry(\"mediumspringgreen\", new Color(0, 250, 154)),\n+            Map.entry(\"mediumturquoise\", new Color(72, 209, 204)),\n+            Map.entry(\"mediumvioletred\", new Color(199, 21, 133)),\n+            Map.entry(\"midnightblue\", new Color(25, 25, 112)),\n+            Map.entry(\"mintcream\", new Color(245, 255, 250)),\n+            Map.entry(\"mistyrose\", new Color(255, 228, 225)),\n+            Map.entry(\"moccasin\", new Color(255, 228, 181)),\n+            Map.entry(\"navajowhite\", new Color(255, 222, 173)),\n+            Map.entry(\"navy\", new Color(0, 0, 128)),\n+            Map.entry(\"oldlace\", new Color(253, 245, 230)),\n+            Map.entry(\"olive\", new Color(128, 128, 0)),\n+            Map.entry(\"olivedrab\", new Color(107, 142, 35)),\n+            Map.entry(\"orange\", new Color(255, 165, 0)),\n+            Map.entry(\"orangered\", new Color(255, 69, 0)),\n+            Map.entry(\"orchid\", new Color(218, 112, 214)),\n+            Map.entry(\"palegoldenrod\", new Color(238, 232, 170)),\n+            Map.entry(\"palegreen\", new Color(152, 251, 152)),\n+            Map.entry(\"paleturquoise\", new Color(175, 238, 238)),\n+            Map.entry(\"palevioletred\", new Color(219, 112, 147)),\n+            Map.entry(\"papayawhip\", new Color(255, 239, 213)),\n+            Map.entry(\"peachpuff\", new Color(255, 218, 185)),\n+            Map.entry(\"peru\", new Color(205, 133, 63)),\n+            Map.entry(\"pink\", new Color(255, 192, 203)),\n+            Map.entry(\"plum\", new Color(221, 160, 221)),\n+            Map.entry(\"powderblue\", new Color(176, 224, 230)),\n+            Map.entry(\"purple\", new Color(128, 0, 128)),\n+            Map.entry(\"rebeccapurple\", new Color(102, 51, 153)),\n+            Map.entry(\"red\", new Color(255, 0, 0)),\n+            Map.entry(\"rosybrown\", new Color(188, 143, 143)),\n+            Map.entry(\"royalblue\", new Color(65, 105, 225)),\n+            Map.entry(\"saddlebrown\", new Color(139, 69, 19)),\n+            Map.entry(\"salmon\", new Color(250, 128, 114)),\n+            Map.entry(\"sandybrown\", new Color(244, 164, 96)),\n+            Map.entry(\"seagreen\", new Color(46, 139, 87)),\n+            Map.entry(\"seashell\", new Color(255, 245, 238)),\n+            Map.entry(\"sienna\", new Color(160, 82, 45)),\n+            Map.entry(\"silver\", new Color(192, 192, 192)),\n+            Map.entry(\"skyblue\", new Color(135, 206, 235)),\n+            Map.entry(\"slateblue\", new Color(106, 90, 205)),\n+            Map.entry(\"slategray\", new Color(112, 128, 144)),\n+            Map.entry(\"slategrey\", new Color(112, 128, 144)),\n+            Map.entry(\"snow\", new Color(255, 250, 250)),\n+            Map.entry(\"springgreen\", new Color(0, 255, 127)),\n+            Map.entry(\"steelblue\", new Color(70, 130, 180)),\n+            Map.entry(\"tan\", new Color(210, 180, 140)),\n+            Map.entry(\"teal\", new Color(0, 128, 128)),\n+            Map.entry(\"thistle\", new Color(216, 191, 216)),\n+            Map.entry(\"tomato\", new Color(255, 99, 71)),\n+            Map.entry(\"transparent\", new Color(0, 0, 0, 0)),\n+            Map.entry(\"turquoise\", new Color(64, 224, 208)),\n+            Map.entry(\"violet\", new Color(238, 130, 238)),\n+            Map.entry(\"wheat\", new Color(245, 222, 179)),\n+            Map.entry(\"white\", new Color(255, 255, 255)),\n+            Map.entry(\"whitesmoke\", new Color(245, 245, 245)),\n+            Map.entry(\"yellow\", new Color(255, 255, 0)),\n+            Map.entry(\"yellowgreen\", new Color(154, 205, 50))\n+            );\n@@ -3773,1 +3903,1 @@\n-}\n+}\n\\ No newline at end of file\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/html\/CSS.java","additions":187,"deletions":57,"binary":false,"changes":244,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -1017,4 +1017,26 @@\n-     * Converts a color string such as \"RED\" or \"#NNNNNN\" to a Color.\n-     * Note: This will only convert the HTML3.2 color strings\n-     *       or a string of length 7;\n-     *       otherwise, it will return null.\n+     * Converts a color string such as \"RED\",  \"rgb(r g b)\", \"rgb(r g b a)\",\n+     * \"rgba(r g b a)\" or \"#NNN\", \"#NNNN\", \"#NNNNNN\",\n+     * \"#NNNNNNNN\" to a Color.\n+     * <p>\n+     * Note: This will only convert strings which use any of the following:\n+     * <ul>\n+     *   <li><a href=\"https:\/\/www.w3.org\/TR\/css-color-4\/#named-colors\">named colors<\/a>,<\/li>\n+     *   <li><a href=\"https:\/\/www.w3.org\/TR\/css-color-4\/#hex-notation\">hex color notation<\/a>\n+     * starting with {@code #} followed by 3, 4, 6, or 8 hexadecimal digits,<\/li>\n+     *   <li><a href=\"https:\/\/www.w3.org\/TR\/css-color-4\/#rgb-functions\">`rgb()` and `rgba()`\n+     * functions<\/a><\/li>\n+     * <\/ul>\n+     * as specified by the <a href=\"https:\/\/www.w3.org\/TR\/css-color-4\/\">CSS Color Module Level 4<\/a>.\n+     * Otherwise, it will return null.\n+     * <p>\n+     * This method is case-insensitive.\n+     * <p>\n+     * The following code defines instances of the same color :\n+     * {@snippet lang=\"java\" :\n+     *   import java.awt.Color;\n+     *   import javax.swing.text.html.StyleSheet;\n+     *   StyleSheet styleSheet = new StyleSheet();\n+     *   \/\/ An opaque lightseagreen\n+     *   Color color0 = styleSheet.stringToColor(\"Lightseagreen\");\n+     *   Color color1 = styleSheet.stringToColor(\"#20b2aa\");\n+     * }\n@@ -1022,1 +1044,2 @@\n-     * @param string color string such as \"RED\" or \"#NNNNNN\"\n+     * @param string color, string such as \"RED\" or \"rgb(r g b)\",  \"rgba(r g b a)\"\n+     * or \"#NNN\", \"#NNNN\", \"#NNNNNN\", \"#NNNNNNNN\".\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/html\/StyleSheet.java","additions":29,"deletions":6,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -0,0 +1,222 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Color;\n+import java.util.HexFormat;\n+\n+import javax.swing.text.html.StyleSheet;\n+\n+\/*\n+ * @test\n+ * @bug 8292276\n+ * @summary Missing Color Names in CSS\n+ * @run main MissingColorNames\n+ *\/\n+public class MissingColorNames {\n+\n+    \/\/ The CSS 'color' property accepts <name-color> listed in the CSS Color Module Level 4.\n+    \/\/ - Many of they keywords are not supported.\n+    \/\/\n+    \/\/ Test fails if stringToColor doesn't return the expected value.\n+    public static void main(String[] args) {\n+        StringBuilder result = new StringBuilder(\"Failed.\");\n+        boolean passed = true;\n+        StyleSheet styleSheet = new StyleSheet();\n+\n+        for (String[] rgb : listNAMEetRGBA) {\n+            Object obj = styleSheet.stringToColor(rgb[0]);\n+            if (rgb[1] == null && obj != null) {\n+                passed = false;\n+                result.append(\"\\n          [\"+ rgb[0] + \" should return null] \");\n+            }\n+            if (rgb[1] != null && obj == null) {\n+                passed = false;\n+                result.append(\"\\n          [\"+ rgb[0] + \" is not supported] \");\n+            }\n+            if (rgb[1] != null && obj instanceof Color col && col.getRGB() != HexFormat.fromHexDigits(rgb[1])) {\n+                passed = false;\n+                result.append(\"\\n       -> [ \"+ rgb[0] + \" wrong RGB code ] \");\n+            }\n+        }\n+        if (!passed) {\n+            throw new RuntimeException(result.toString());\n+        }\n+    }\n+\n+    static String [][] listNAMEetRGBA = {\n+        \/\/ The null argument\n+        {null, null},\n+        \/\/ This color doesn't belong to the CSS-COLOR-4 specification\n+        {\"com.scientificware.color\", null},\n+        \/\/ The colors listed below belong to the CSS-COLOR-4 specification\n+        {\"aliceblue\", \"fff0f8ff\"},\n+        {\"antiquewhite\", \"fffaebd7\"},\n+        {\"aqua\", \"ff00ffff\"},\n+        {\"aquamarine\", \"ff7fffd4\"},\n+        {\"azure\", \"fff0ffff\"},\n+        {\"beige\", \"fff5f5dc\"},\n+        {\"bisque\", \"ffffe4c4\"},\n+        {\"black\", \"ff000000\"},\n+        {\"blanchedalmond\", \"ffffebcd\"},\n+        {\"blue\", \"ff0000ff\"},\n+        {\"blueviolet\", \"ff8a2be2\"},\n+        {\"brown\", \"ffa52a2a\"},\n+        {\"burlywood\", \"ffdeb887\"},\n+        {\"cadetblue\", \"ff5f9ea0\"},\n+        {\"chartreuse\", \"ff7fff00\"},\n+        {\"chocolate\", \"ffd2691e\"},\n+        {\"coral\", \"ffff7f50\"},\n+        {\"cornflowerblue\", \"ff6495ed\"},\n+        {\"cornsilk\", \"fffff8dc\"},\n+        {\"crimson\", \"ffdc143c\"},\n+        {\"cyan\", \"ff00ffff\"},\n+        {\"darkblue\", \"ff00008b\"},\n+        {\"darkcyan\", \"ff008b8b\"},\n+        {\"darkgoldenrod\", \"ffb8860b\"},\n+        {\"darkgray\", \"ffa9a9a9\"},\n+        {\"darkgreen\", \"ff006400\"},\n+        {\"darkgrey\", \"ffa9a9a9\"},\n+        {\"darkkhaki\", \"ffbdb76b\"},\n+        {\"darkmagenta\", \"ff8b008b\"},\n+        {\"darkolivegreen\", \"ff556b2f\"},\n+        {\"darkorange\", \"ffff8c00\"},\n+        {\"darkorchid\", \"ff9932cc\"},\n+        {\"darkred\", \"ff8b0000\"},\n+        {\"darksalmon\", \"ffe9967a\"},\n+        {\"darkseagreen\", \"ff8fbc8f\"},\n+        {\"darkslateblue\", \"ff483d8b\"},\n+        {\"darkslategray\", \"ff2f4f4f\"},\n+        {\"darkslategrey\", \"ff2f4f4f\"},\n+        {\"darkturquoise\", \"ff00ced1\"},\n+        {\"darkviolet\", \"ff9400d3\"},\n+        {\"deeppink\", \"ffff1493\"},\n+        {\"deepskyblue\", \"ff00bfff\"},\n+        {\"dimgray\", \"ff696969\"},\n+        {\"dimgrey\", \"ff696969\"},\n+        {\"dodgerblue\", \"ff1e90ff\"},\n+        {\"firebrick\", \"ffb22222\"},\n+        {\"floralwhite\", \"fffffaf0\"},\n+        {\"forestgreen\", \"ff228b22\"},\n+        {\"fuchsia\", \"ffff00ff\"},\n+        {\"gainsboro\", \"ffdcdcdc\"},\n+        {\"ghostwhite\", \"fff8f8ff\"},\n+        {\"gold\", \"ffffd700\"},\n+        {\"goldenrod\", \"ffdaa520\"},\n+        {\"gray\", \"ff808080\"},\n+        {\"green\", \"ff008000\"},\n+        {\"greenyellow\", \"ffadff2f\"},\n+        {\"grey\", \"ff808080\"},\n+        {\"honeydew\", \"fff0fff0\"},\n+        {\"hotpink\", \"ffff69b4\"},\n+        {\"indianred\", \"ffcd5c5c\"},\n+        {\"indigo\", \"ff4b0082\"},\n+        {\"ivory\", \"fffffff0\"},\n+        {\"khaki\", \"fff0e68c\"},\n+        {\"lavender\", \"ffe6e6fa\"},\n+        {\"lavenderblush\", \"fffff0f5\"},\n+        {\"lawngreen\", \"ff7cfc00\"},\n+        {\"lemonchiffon\", \"fffffacd\"},\n+        {\"lightblue\", \"ffadd8e6\"},\n+        {\"lightcoral\", \"fff08080\"},\n+        {\"lightcyan\", \"ffe0ffff\"},\n+        {\"lightgoldenrodyellow\", \"fffafad2\"},\n+        {\"lightgray\", \"ffd3d3d3\"},\n+        {\"lightgreen\", \"ff90ee90\"},\n+        {\"lightgrey\", \"ffd3d3d3\"},\n+        {\"lightpink\", \"ffffb6c1\"},\n+        {\"lightsalmon\", \"ffffa07a\"},\n+        {\"lightseagreen\", \"ff20b2aa\"},\n+        {\"lightskyblue\", \"ff87cefa\"},\n+        {\"lightslategray\", \"ff778899\"},\n+        {\"lightslategrey\", \"ff778899\"},\n+        {\"lightsteelblue\", \"ffb0c4de\"},\n+        {\"lightyellow\", \"ffffffe0\"},\n+        {\"lime\", \"ff00ff00\"},\n+        {\"limegreen\", \"ff32cd32\"},\n+        {\"linen\", \"fffaf0e6\"},\n+        {\"magenta\", \"ffff00ff\"},\n+        {\"maroon\", \"ff800000\"},\n+        {\"mediumaquamarine\", \"ff66cdaa\"},\n+        {\"mediumblue\", \"ff0000cd\"},\n+        {\"mediumorchid\", \"ffba55d3\"},\n+        {\"mediumpurple\", \"ff9370db\"},\n+        {\"mediumseagreen\", \"ff3cb371\"},\n+        {\"mediumslateblue\", \"ff7b68ee\"},\n+        {\"mediumspringgreen\", \"ff00fa9a\"},\n+        {\"mediumturquoise\", \"ff48d1cc\"},\n+        {\"mediumvioletred\", \"ffc71585\"},\n+        {\"midnightblue\", \"ff191970\"},\n+        {\"mintcream\", \"fff5fffa\"},\n+        {\"mistyrose\", \"ffffe4e1\"},\n+        {\"moccasin\", \"ffffe4b5\"},\n+        {\"navajowhite\", \"ffffdead\"},\n+        {\"navy\", \"ff000080\"},\n+        {\"oldlace\", \"fffdf5e6\"},\n+        {\"olive\", \"ff808000\"},\n+        {\"olivedrab\", \"ff6b8e23\"},\n+        {\"orange\", \"ffffa500\"},\n+        {\"orangered\", \"ffff4500\"},\n+        {\"orchid\", \"ffda70d6\"},\n+        {\"palegoldenrod\", \"ffeee8aa\"},\n+        {\"palegreen\", \"ff98fb98\"},\n+        {\"paleturquoise\", \"ffafeeee\"},\n+        {\"palevioletred\", \"ffdb7093\"},\n+        {\"papayawhip\", \"ffffefd5\"},\n+        {\"peachpuff\", \"ffffdab9\"},\n+        {\"peru\", \"ffcd853f\"},\n+        {\"pink\", \"ffffc0cb\"},\n+        {\"plum\", \"ffdda0dd\"},\n+        {\"powderblue\", \"ffb0e0e6\"},\n+        {\"purple\", \"ff800080\"},\n+        {\"rebeccapurple\", \"ff663399\"},\n+        {\"red\", \"ffff0000\"},\n+        {\"rosybrown\", \"ffbc8f8f\"},\n+        {\"royalblue\", \"ff4169e1\"},\n+        {\"saddlebrown\", \"ff8b4513\"},\n+        {\"salmon\", \"fffa8072\"},\n+        {\"sandybrown\", \"fff4a460\"},\n+        {\"seagreen\", \"ff2e8b57\"},\n+        {\"seashell\", \"fffff5ee\"},\n+        {\"sienna\", \"ffa0522d\"},\n+        {\"silver\", \"ffc0c0c0\"},\n+        {\"skyblue\", \"ff87ceeb\"},\n+        {\"slateblue\", \"ff6a5acd\"},\n+        {\"slategray\", \"ff708090\"},\n+        {\"slategrey\", \"ff708090\"},\n+        {\"snow\", \"fffffafa\"},\n+        {\"springgreen\", \"ff00ff7f\"},\n+        {\"steelblue\", \"ff4682b4\"},\n+        {\"tan\", \"ffd2b48c\"},\n+        {\"teal\", \"ff008080\"},\n+        {\"thistle\", \"ffd8bfd8\"},\n+        {\"tomato\", \"ffff6347\"},\n+        {\"transparent\", \"00000000\"},\n+        {\"turquoise\", \"ff40e0d0\"},\n+        {\"violet\", \"ffee82ee\"},\n+        {\"wheat\", \"fff5deb3\"},\n+        {\"white\", \"ffffffff\"},\n+        {\"whitesmoke\", \"fff5f5f5\"},\n+        {\"yellow\", \"ffffff00\"},\n+        {\"yellowgreen\", \"ff9acd32\"}\n+    };\n+}\n\\ No newline at end of file\n","filename":"test\/jdk\/javax\/swing\/text\/html\/CSS\/MissingColorNames.java","additions":222,"deletions":0,"binary":false,"changes":222,"status":"added"}]}