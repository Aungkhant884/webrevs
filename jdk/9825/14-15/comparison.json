{"files":[{"patch":"@@ -1,99 +0,0 @@\n-\/*\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/*\n- * @test\n- * @bug 8292276\n- * @summary Missing Color Names in CSS\n- * @run main JDK8292276MissingColorNamesInCSS\n- * @author Guy Abossolo Foh - ScientificWare\n- *\/\n-\n-import java.awt.Color;\n-\n-import javax.swing.text.AttributeSet;\n-import javax.swing.text.html.StyleSheet;\n-import java.util.Locale;\n-\n-import static javax.swing.text.html.CSS.Attribute.COLOR;\n-import static javax.swing.text.html.CSS.Attribute.BORDER_LEFT_COLOR;\n-import static javax.swing.text.html.CSS.Attribute.BORDER_RIGHT_COLOR;\n-\n-public class JDK8292276MissingColorNamesInCSS {\n-\n-    \/\/ The CSS 'color' property accepts <name-color>, 'transparent' keyword <rgb()>, <rgba> values.\n-    \/\/ - 'cyan' is the missing <name-color> keyword that originates the PR JDK8292276 :\n-    \/\/   Missing Color Names In CSS.\n-    \/\/   'cyan' keyword, as 131 <name-color> keywords also defined in CSS Color Module\n-    \/\/   Level 4, are not referenced in CSS.java.\n-    \/\/ - sRGB colors defined by rgb and rgba functions must be case insensitive.\n-    \/\/ - 'transparent' keyword is the missing.\n-    \/\/\n-    \/\/ This test fails,\n-    \/\/ - if stringToColor(null) doesn't return null\n-    \/\/ - if getAttribute :\n-    \/\/   - doesn't return cyan value.\n-    \/\/     - When a <color-name> keyword is missing, getAttribute returns a black Color Object.\n-    \/\/   - returns null when <rgb()> and <rgba()> values are not treated as being all lowercase.\n-    \/\/     - When <rgb()> and <rgba()> values contains at least an uppercase character, getAttribute returns null.\n-    \/\/   - returns null when using 'transparent' keyword.\n-    public static void main(String[] args) {\n-        StringBuilder result = new StringBuilder(\"Failed.\");\n-        boolean passed = true;\n-        StyleSheet styleSheet = new StyleSheet();\n-        AttributeSet attributeSet;\n-        Object color;\n-        Object bdleftcolor;\n-        Object bdrightcolor;\n-        attributeSet = styleSheet.getDeclaration(\"\"\"\n-            color: cyan;\n-            border-left-color : Rgb(250 210 120);\n-            border-right-color: transparent;\n-            \"\"\");\n-        color = attributeSet.getAttribute(COLOR);\n-        bdleftcolor = attributeSet.getAttribute(BORDER_LEFT_COLOR);\n-        bdrightcolor = attributeSet.getAttribute(BORDER_RIGHT_COLOR);\n-\n-        if (styleSheet.stringToColor(null) != null){\n-            passed = false;\n-            result.append(\" [stringToColor(null) must return null]\");\n-        }\n-        if (!color.toString().toLowerCase(Locale.ROOT).equals(\"cyan\")) {\n-            passed = false;\n-            result.append(\" [<name-color> keyword(s) missing]\");\n-        }\n-        if (bdrightcolor == null) {\n-            passed = false;\n-            result.append(\" ['transparent' keyword missing]\");\n-        }\n-        if (bdleftcolor == null) {\n-            passed = false;\n-            result.append(\" [<rgb> or <rgba> values not case insensitive]\");\n-        }\n-        if (!passed) {\n-            throw new RuntimeException(result.toString());\n-        }\n-    }\n-}\n","filename":"test\/jdk\/javax\/swing\/text\/html\/CSS\/JDK8292276MissingColorNamesInCSS\/JDK8292276MissingColorNamesInCSS.java","additions":0,"deletions":99,"binary":false,"changes":99,"status":"deleted"},{"patch":"@@ -0,0 +1,93 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+ \/*\n+ * @test\n+ * @bug 8292276\n+ * @summary Missing Color Names in CSS\n+ * @run main MissingColorNames\n+ *\/\n+import java.awt.Color;\n+\n+import javax.swing.text.AttributeSet;\n+import javax.swing.text.html.StyleSheet;\n+import java.util.Locale;\n+\n+import static javax.swing.text.html.CSS.Attribute.COLOR;\n+import static javax.swing.text.html.CSS.Attribute.BORDER_LEFT_COLOR;\n+import static javax.swing.text.html.CSS.Attribute.BORDER_RIGHT_COLOR;\n+\n+public class MissingColorNames {\n+\n+    \/\/ The CSS 'color' property accepts <name-color>, 'transparent' keyword <rgb()>, <rgba> values.\n+    \/\/ - 'cyan' is the missing <name-color> keyword that originates the PR JDK8292276 :\n+    \/\/   Missing Color Names In CSS.\n+    \/\/   'cyan' keyword, as 131 <name-color> keywords also defined in CSS Color Module\n+    \/\/   Level 4, are not referenced in CSS.java.\n+    \/\/ - sRGB colors defined by rgb and rgba functions must be case insensitive.\n+    \/\/ - 'transparent' keyword is missing.\n+    \/\/\n+    \/\/ This test fails,\n+    \/\/ - if stringToColor(null) doesn't return null\n+    \/\/ - if getAttribute :\n+    \/\/   - doesn't return cyan value.\n+    \/\/     - When a <color-name> keyword is missing, getAttribute returns a black Color Object.\n+    \/\/   - returns null when <rgb()> and <rgba()> values are not treated as being all lowercase.\n+    \/\/     - When <rgb()> and <rgba()> values contains at least an uppercase character, getAttribute returns null.\n+    \/\/   - returns null when using 'transparent' keyword.\n+    public static void main(String[] args) {\n+        StringBuilder result = new StringBuilder(\"Failed.\");\n+        boolean passed = true;\n+        StyleSheet styleSheet = new StyleSheet();\n+        AttributeSet attributeSet = styleSheet.getDeclaration(\"\"\"\n+            color: cyan;\n+            border-left-color : Rgb(250 210 120);\n+            border-right-color: transparent;\n+            \"\"\");\n+        Object color = attributeSet.getAttribute(COLOR);\n+        Object leftColor = attributeSet.getAttribute(BORDER_LEFT_COLOR);\n+        Object rightColor = attributeSet.getAttribute(BORDER_RIGHT_COLOR);\n+\n+        if (styleSheet.stringToColor(null) != null) {\n+            passed = false;\n+            result.append(\" [stringToColor(null) must return null]\");\n+        }\n+        if (!color.toString().toLowerCase(Locale.ROOT).equals(\"cyan\")) {\n+            passed = false;\n+            result.append(\" [<name-color> keyword(s) missing]\");\n+        }\n+        if (rightColor == null) {\n+            passed = false;\n+            result.append(\" ['transparent' keyword missing]\");\n+        }\n+        if (leftColor == null) {\n+            passed = false;\n+            result.append(\" [<rgb> or <rgba> values not case insensitive]\");\n+        }\n+        if (!passed) {\n+            throw new RuntimeException(result.toString());\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/text\/html\/CSS\/MissingColorNames.java","additions":93,"deletions":0,"binary":false,"changes":93,"status":"added"}]}