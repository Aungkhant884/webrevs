{"files":[{"patch":"@@ -34,0 +34,2 @@\n+import java.awt.Color;\n+\n@@ -36,0 +38,1 @@\n+import java.util.Locale;\n@@ -38,0 +41,2 @@\n+import static javax.swing.text.html.CSS.Attribute.BORDER_LEFT_COLOR;\n+import static javax.swing.text.html.CSS.Attribute.BORDER_RIGHT_COLOR;\n@@ -41,6 +46,14 @@\n-    \/\/ Cyan is the missing color name that originates the PR JDK8292276 :\n-    \/\/ Missing Color NamesIn CSS.\n-    \/\/ Cyan name, as most color names Colors defined in CSS Color Module\n-    \/\/ Level 4, is not referenced in CSS.java.\n-    \/\/ This test fails, if getAttribute doesn't return a cyan Color Object.\n-    \/\/ When a color name is missing getAttribute returns a black Color Object.\n+    \/\/ The CSS 'color' property accepts <name-color>, 'transparent' keyword <rgb()>, <rgba> values.\n+    \/\/ - 'cyan' is the missing <name-color> keyword that originates the PR JDK8292276 :\n+    \/\/   Missing Color Names In CSS.\n+    \/\/   'cyan' keyword, as 130 <name-color> keywords defined in CSS Color Module\n+    \/\/   Level 4, is not referenced in CSS.java.\n+    \/\/ - sRGB colors defined by rgb and rgba functions must be case insensitive.\n+    \/\/ - 'transparent' keyword is the missing.\n+    \/\/\n+    \/\/ This test fails, if getAttribute :\n+    \/\/ - doesn't return cyan value.\n+    \/\/   - When a <color-name> keyword is missing, getAttribute returns a black Color Object.\n+    \/\/ - returns null when <rgb()> and <rgba()> values are not treated as being all lowercase.\n+    \/\/   - When <rgb()> and <rgba()> values contains at least an uppercase character, getAttribute returns null.\n+    \/\/ - returns null when using 'transparent' keyword.\n@@ -48,0 +61,2 @@\n+        StringBuilder result = new StringBuilder(\"Failed.\");\n+        boolean passed = true;\n@@ -49,4 +64,27 @@\n-        AttributeSet attributeSet = styleSheet.getDeclaration(\"color: cyan;\");\n-        Object color = attributeSet.getAttribute(COLOR);\n-        if (!color.toString().equals(\"cyan\")) {\n-            throw new RuntimeException(\"Failed\");\n+        AttributeSet attributeSet;\n+        Object color;\n+        Object bdleftcolor;\n+        Object bdrightcolor;\n+        attributeSet = styleSheet.getDeclaration(\"\"\"\n+            color: cyan;\n+            border-left-color : Rgb(250 210 120);\n+            border-right-color: transparent;\n+            \"\"\");\n+        color = attributeSet.getAttribute(COLOR);\n+        bdleftcolor = attributeSet.getAttribute(BORDER_LEFT_COLOR);\n+        bdrightcolor = attributeSet.getAttribute(BORDER_RIGHT_COLOR);\n+\n+        if (!color.toString().toLowerCase(Locale.ROOT).equals(\"cyan\")) {\n+            passed = false;\n+            result.append(\" [<name-color> keyword(s) missing]\");\n+        }\n+        if (bdrightcolor == null) {\n+            passed = false;\n+            result.append(\" ['transparent' keyword missing]\");\n+        }\n+        if (bdleftcolor == null) {\n+            passed = false;\n+            result.append(\" [<rgb> or <rgba> values not case insensitive]\");\n+        }\n+        if (!passed) {\n+            throw new RuntimeException(result.toString());\n","filename":"test\/jdk\/javax\/swing\/text\/html\/CSS\/JDK8292276MissingColorNamesInCSS\/JDK8292276MissingColorNamesInCSS.java","additions":48,"deletions":10,"binary":false,"changes":58,"status":"modified"}]}