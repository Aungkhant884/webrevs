{"files":[{"patch":"@@ -217,0 +217,2 @@\n+            markCFGNodes();\n+            connectOrphansAndWidows();\n@@ -634,0 +636,1 @@\n+    }\n@@ -635,2 +638,3 @@\n-        \/\/ Mark nodes that form the CFG (same as shown by the 'Show control flow\n-        \/\/ only' filter, plus the Root node).\n+    \/\/ Mark nodes that form the CFG (same as shown by the 'Show control flow\n+    \/\/ only' filter, plus the Root node).\n+    public void markCFGNodes() {\n@@ -659,0 +663,1 @@\n+    }\n@@ -660,4 +665,5 @@\n-        \/\/ Fix ill-formed graphs with orphan\/widow control-flow nodes by adding\n-        \/\/ edges from\/to the Root node. Such edges are assumed by different\n-        \/\/ parts of the scheduling algorithm, but are not always present, e.g.\n-        \/\/ for certain 'Safepoint' nodes in the 'Before RemoveUseless' phase.\n+    \/\/ Fix ill-formed graphs with orphan\/widow control-flow nodes by adding\n+    \/\/ edges from\/to the Root node. Such edges are assumed by different parts of\n+    \/\/ the scheduling algorithm, but are not always present, e.g. for certain\n+    \/\/ 'Safepoint' nodes in the 'Before RemoveUseless' phase.\n+    public void connectOrphansAndWidows() {\n","filename":"src\/utils\/IdealGraphVisualizer\/ServerCompiler\/src\/com\/sun\/hotspot\/igv\/servercompiler\/ServerCompilerScheduler.java","additions":12,"deletions":6,"binary":false,"changes":18,"status":"modified"}]}