{"files":[{"patch":"@@ -76,1 +76,1 @@\n-      *(int32_t*) disp = x - next_ip;\n+      *(int32_t*) disp = checked_cast<int32_t>(x - next_ip);\n@@ -133,1 +133,1 @@\n-    *(jint*)disp += (x - old_dest);\n+    *(jint*)disp += checked_cast<jint>(x - old_dest);\n","filename":"src\/hotspot\/cpu\/x86\/relocInfo_x86.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -107,1 +107,1 @@\n-  char        _index;           \/\/ my section number (SECT_INST, etc.)\n+  int8_t      _index;           \/\/ my section number (SECT_INST, etc.)\n@@ -124,1 +124,1 @@\n-    debug_only(_index = (char)-1);\n+    debug_only(_index = -1);\n@@ -128,1 +128,1 @@\n-  void initialize_outer(CodeBuffer* outer, int index) {\n+  void initialize_outer(CodeBuffer* outer, int8_t index) {\n@@ -176,1 +176,1 @@\n-  int         index() const         { return _index; }\n+  int8_t      index() const         { return _index; }\n@@ -399,1 +399,1 @@\n-  enum {\n+  enum : int8_t {\n","filename":"src\/hotspot\/share\/asm\/codeBuffer.hpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -682,1 +682,1 @@\n-  int exception_offset = pc - code_begin();\n+  int exception_offset = int(pc - code_begin());\n","filename":"src\/hotspot\/share\/code\/compiledMethod.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -209,5 +209,5 @@\n-  enum { not_installed = -1, \/\/ in construction, only the owner doing the construction is\n-                             \/\/ allowed to advance state\n-         in_use        = 0,  \/\/ executable nmethod\n-         not_used      = 1,  \/\/ not entrant, but revivable\n-         not_entrant   = 2,  \/\/ marked for deoptimization but activations may still exist\n+  enum : signed char { not_installed = -1, \/\/ in construction, only the owner doing the construction is\n+                                           \/\/ allowed to advance state\n+                       in_use        = 0,  \/\/ executable nmethod\n+                       not_used      = 1,  \/\/ not entrant, but revivable\n+                       not_entrant   = 2,  \/\/ marked for deoptimization but activations may still exist\n@@ -269,1 +269,1 @@\n-  int scopes_data_size() const { return scopes_data_end() - scopes_data_begin(); }\n+  int scopes_data_size() const { return int(scopes_data_end() - scopes_data_begin()); }\n@@ -273,1 +273,1 @@\n-  int scopes_pcs_size() const { return (intptr_t) scopes_pcs_end() - (intptr_t) scopes_pcs_begin(); }\n+  int scopes_pcs_size() const { return int((intptr_t) scopes_pcs_end() - (intptr_t) scopes_pcs_begin()); }\n@@ -282,1 +282,1 @@\n-  int insts_size() const { return insts_end() - insts_begin(); }\n+  int insts_size() const { return int(insts_end() - insts_begin()); }\n@@ -287,1 +287,1 @@\n-  int consts_size() const { return consts_end() - consts_begin(); }\n+  int consts_size() const { return int(consts_end() - consts_begin()); }\n@@ -294,1 +294,1 @@\n-  int stub_size() const { return stub_end() - stub_begin(); }\n+  int stub_size() const { return int(stub_end() - stub_begin()); }\n@@ -299,1 +299,1 @@\n-  int handler_table_size() const { return handler_table_end() - handler_table_begin(); }\n+  int handler_table_size() const { return int(handler_table_end() - handler_table_begin()); }\n@@ -306,1 +306,1 @@\n-  int nul_chk_table_size() const { return nul_chk_table_end() - nul_chk_table_begin(); }\n+  int nul_chk_table_size() const { return int(nul_chk_table_end() - nul_chk_table_begin()); }\n","filename":"src\/hotspot\/share\/code\/compiledMethod.hpp","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -1135,1 +1135,1 @@\n-  int oopmap_slot = nm->oop_maps()->find_slot_for_offset((intptr_t) pc - (intptr_t) nm->code_begin());\n+  int oopmap_slot = nm->oop_maps()->find_slot_for_offset(int((intptr_t) pc - (intptr_t) nm->code_begin()));\n@@ -1277,1 +1277,1 @@\n-bool nmethod::try_transition(int new_state_int) {\n+bool nmethod::try_transition(signed char new_state_int) {\n@@ -1674,1 +1674,1 @@\n-    state &= ~_is_unloading_mask;\n+    state &= (uint8_t)~_is_unloading_mask;\n@@ -1683,2 +1683,2 @@\n-    state &= ~_unloading_cycle_mask;\n-    state |= value << _unloading_cycle_shift;\n+    state &= (uint8_t)~_unloading_cycle_mask;\n+    state |= (uint8_t)(value << _unloading_cycle_shift);\n@@ -2698,1 +2698,1 @@\n-      n = (uintptr_t)cp&(bytes_per_line-1);\n+      n = (int)((uintptr_t)cp & (bytes_per_line-1));\n@@ -2886,1 +2886,1 @@\n-      compressed_format_idx += p - p0;\n+      compressed_format_idx += (int)(p - p0);\n@@ -3140,1 +3140,1 @@\n-  int cont_offset = ImplicitExceptionTable(this).continuation_offset(begin - code_begin());\n+  int cont_offset = ImplicitExceptionTable(this).continuation_offset((uint)(begin - code_begin()));\n@@ -3148,1 +3148,1 @@\n-  int pc_offset = begin - code_begin();\n+  int pc_offset = (int)(begin - code_begin());\n","filename":"src\/hotspot\/share\/code\/nmethod.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -224,1 +224,1 @@\n-  int code_offset() const { return (address) code_begin() - header_begin(); }\n+  int code_offset() const { return int(code_begin() - header_begin()); }\n@@ -310,1 +310,1 @@\n-  bool try_transition(int new_state);\n+  bool try_transition(signed char new_state);\n@@ -324,1 +324,1 @@\n-  int content_offset() const                  { return content_begin() - header_begin(); }\n+  int content_offset() const                  { return int(content_begin() - header_begin()); }\n@@ -410,3 +410,3 @@\n-  int oops_size         () const                  { return (address)  oops_end         () - (address)  oops_begin         (); }\n-  int metadata_size     () const                  { return (address)  metadata_end     () - (address)  metadata_begin     (); }\n-  int dependencies_size () const                  { return            dependencies_end () -            dependencies_begin (); }\n+  int oops_size         () const                  { return int((address)  oops_end         () - (address)  oops_begin         ()); }\n+  int metadata_size     () const                  { return int((address)  metadata_end     () - (address)  metadata_begin     ()); }\n+  int dependencies_size () const                  { return int(           dependencies_end () -            dependencies_begin ()); }\n@@ -414,2 +414,2 @@\n-  int speculations_size () const                  { return            speculations_end () -            speculations_begin (); }\n-  int jvmci_data_size   () const                  { return            jvmci_data_end   () -            jvmci_data_begin   (); }\n+  int speculations_size () const                  { return int(           speculations_end () -            speculations_begin ()); }\n+  int jvmci_data_size   () const                  { return int(           jvmci_data_end   () -            jvmci_data_begin   ()); }\n","filename":"src\/hotspot\/share\/code\/nmethod.hpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -79,1 +79,1 @@\n-  int plen = prefix_limit - p;\n+  int plen = checked_cast<int>(prefix_limit - p);\n","filename":"src\/hotspot\/share\/code\/relocInfo.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -288,1 +288,1 @@\n-    : _value((type << nontype_width) + bits) { }\n+    : _value(checked_cast<unsigned short>((type << nontype_width) + bits)) { }\n@@ -324,1 +324,1 @@\n-  enum {\n+  enum : unsigned short{\n@@ -343,3 +343,3 @@\n-  const short* data()     const { assert(is_datalen(), \"must have data\");\n-                                  return (const short*)(this + 1); }\n-  int          datalen()  const { assert(is_datalen(), \"must have data\");\n+  const short* data()       const { assert(is_datalen(), \"must have data\");\n+                                    return (const short*)(this + 1); }\n+  unsigned short datalen()  const { assert(is_datalen(), \"must have data\");\n@@ -347,1 +347,1 @@\n-  int         immediate() const { assert(is_immediate(), \"must have immed\");\n+  unsigned short immediate() const { assert(is_immediate(), \"must have immed\");\n@@ -417,2 +417,2 @@\n-  static int data0_from_int(jint x)         { return x >> value_width; }\n-  static int data1_from_int(jint x)         { return (short)x; }\n+  static short data0_from_int(jint x)         { return (short)(x >> value_width); }\n+  static short data1_from_int(jint x)         { return (short)x; }\n@@ -738,1 +738,1 @@\n-  static short* add_short(short* p, int x)  { *p++ = x; return p; }\n+  static short* add_short(short* p, short x)  { *p++ = x; return p; }\n@@ -744,1 +744,1 @@\n-    if (is_short(x))  p = add_short(p, x);\n+    if (is_short(x))  p = add_short(p, (short)x);\n@@ -766,1 +766,1 @@\n-      p = add_short(p, x0); if (x1!=0) p = add_short(p, x1);\n+      p = add_short(p, (short)x0); if (x1!=0) p = add_short(p, (short)x1);\n@@ -804,1 +804,1 @@\n-    int byte_offset = x - base;\n+    int byte_offset = checked_cast<int>(x - base);\n","filename":"src\/hotspot\/share\/code\/relocInfo.hpp","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"}]}