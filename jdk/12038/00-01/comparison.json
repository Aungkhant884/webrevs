{"files":[{"patch":"@@ -353,0 +353,61 @@\n+class SystemRegOp(Instruction):\n+    def __init__(self, args):\n+        name, self.system_reg = args\n+        Instruction.__init__(self, name)\n+        if self.system_reg == 'fpsr':\n+            self.op1 = 0b011\n+            self.CRn = 0b0100\n+            self.CRm = 0b0100\n+            self.op2 = 0b001\n+        elif self.system_reg == 'dczid_el0':\n+            self.op1 = 0b011\n+            self.CRn = 0b0000\n+            self.CRm = 0b0000\n+            self.op2 = 0b111\n+        elif self.system_reg == 'ctr_el0':\n+            self.op1 = 0b011\n+            self.CRn = 0b0000\n+            self.CRm = 0b0000\n+            self.op2 = 0b001\n+        elif self.system_reg == 'nzcv':\n+            self.op1 = 0b011\n+            self.CRn = 0b0100\n+            self.CRm = 0b0010\n+            self.op2 = 0b000\n+\n+    def generate(self):\n+        self.reg = [GeneralRegister().generate()]\n+        return self\n+\n+class SystemOneRegOp(SystemRegOp):\n+\n+    def cstr(self):\n+        return (super(SystemOneRegOp, self).cstr()\n+                + '%s' % self.op1\n+                + ', %s' % self.CRn\n+                + ', %s' % self.CRm\n+                + ', %s' % self.op2\n+                + ', %s);' % self.reg[0])\n+\n+    def astr(self):\n+        prefix = self.asmRegPrefix\n+        return (super(SystemOneRegOp, self).astr()\n+                + '%s' % self.system_reg\n+                + ', %s' % self.reg[0].astr(prefix))\n+\n+class OneRegSystemOp(SystemRegOp):\n+\n+    def cstr(self):\n+        return (super(OneRegSystemOp, self).cstr()\n+                + '%s' % self.op1\n+                + ', %s' % self.CRn\n+                + ', %s' % self.CRm\n+                + ', %s' % self.op2\n+                + ', %s);' % self.reg[0])\n+\n+    def astr(self):\n+        prefix = self.asmRegPrefix\n+        return (super(OneRegSystemOp, self).astr()\n+                + '%s' % self.reg[0].astr(prefix)\n+                + ', %s' % self.system_reg)\n+\n@@ -1399,0 +1460,4 @@\n+for system_reg in [\"fpsr\", \"dczid_el0\", \"ctr_el0\", \"nzcv\"]:\n+    generate (SystemOneRegOp, [ [\"msr\", system_reg] ])\n+    generate (OneRegSystemOp, [ [\"mrs\", system_reg] ])\n+\n","filename":"test\/hotspot\/gtest\/aarch64\/aarch64-asmtest.py","additions":65,"deletions":0,"binary":false,"changes":65,"status":"modified"}]}