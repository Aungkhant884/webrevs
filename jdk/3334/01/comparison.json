{"files":[{"patch":"@@ -264,1 +264,3 @@\n-                           : 28;\n+                           : 10,\n+                 serialize : 1,\n+                           : 17;\n@@ -362,1 +364,2 @@\n-    decl(HV,                \"hv\",                46) \/* Hypervisor instructions *\/\n+    decl(HV,                \"hv\",                46) \/* Hypervisor instructions *\/ \\\n+    decl(SERIALIZE,         \"serialize\",         47) \/* CPU SERIALIZE *\/\n@@ -649,0 +652,2 @@\n+      if (_cpuid_info.sef_cpuid7_edx.bits.serialize != 0)\n+        result |= CPU_SERIALIZE;\n@@ -902,0 +907,1 @@\n+  static bool supports_serialize()    { return (_features & CPU_SERIALIZE) != 0; }\n","filename":"src\/hotspot\/cpu\/x86\/vm_version_x86.hpp","additions":8,"deletions":2,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+#include OS_HEADER_INLINE(os)\n@@ -59,1 +60,4 @@\n-  int idx = 0;\n+  if (os::supports_serialize()) {\n+    __asm__ volatile (\".byte 0x0f, 0x01, 0xe8\\n\\t\" : : :); \/\/serialize\n+  } else {\n+    int idx = 0;\n@@ -61,1 +65,1 @@\n-  __asm__ volatile (\"cpuid \" : \"+a\" (idx) : : \"ebx\", \"ecx\", \"edx\", \"memory\");\n+    __asm__ volatile (\"cpuid \" : \"+a\" (idx) : : \"ebx\", \"ecx\", \"edx\", \"memory\");\n@@ -63,3 +67,3 @@\n-  \/\/ On some x86 systems EBX is a reserved register that cannot be\n-  \/\/ clobbered, so we must protect it around the CPUID.\n-  __asm__ volatile (\"xchg %%esi, %%ebx; cpuid; xchg %%esi, %%ebx \" : \"+a\" (idx) : : \"esi\", \"ecx\", \"edx\", \"memory\");\n+    \/\/ On some x86 systems EBX is a reserved register that cannot be\n+    \/\/ clobbered, so we must protect it around the CPUID.\n+    __asm__ volatile (\"xchg %%esi, %%ebx; cpuid; xchg %%esi, %%ebx \" : \"+a\" (idx) : : \"esi\", \"ecx\", \"edx\", \"memory\");\n@@ -67,0 +71,1 @@\n+  }\n","filename":"src\/hotspot\/os_cpu\/linux_x86\/orderAccess_linux_x86.hpp","additions":10,"deletions":5,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -461,0 +461,4 @@\n+bool os::supports_serialize(){\n+  return VM_Version::supports_serialize();\n+}\n+\n","filename":"src\/hotspot\/os_cpu\/linux_x86\/os_linux_x86.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+  static bool supports_serialize();\n","filename":"src\/hotspot\/os_cpu\/linux_x86\/os_linux_x86.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}