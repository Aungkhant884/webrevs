{"files":[{"patch":"@@ -592,1 +592,0 @@\n-javax\/net\/ssl\/SSLEngine\/ConnectionTest.java                     8298869 generic-all\n","filename":"test\/jdk\/ProblemList.txt","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,2 @@\n- * @run main\/othervm ConnectionTest\n+ * @run main\/othervm ConnectionTest TLSv1.2 TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384\n+ * @run main\/othervm ConnectionTest TLSv1.3 TLS_AES_256_GCM_SHA384\n@@ -48,19 +49,17 @@\n-    private SSLContext sslc;\n-    private SSLEngine ssle1;\n-    private SSLEngine ssle2;\n-\n-    private static String pathToStores = \"..\/etc\";\n-    private static String keyStoreFile = \"keystore\";\n-    private static String trustStoreFile = \"truststore\";\n-    private static String passwd = \"passphrase\";\n-\n-    private static String keyFilename =\n-            System.getProperty(\"test.src\", \".\/\") + \"\/\" + pathToStores +\n-                \"\/\" + keyStoreFile;\n-    private static String trustFilename =\n-            System.getProperty(\"test.src\", \".\/\") + \"\/\" + pathToStores +\n-                \"\/\" + trustStoreFile;\n-\n-    private ByteBuffer appIn1, appOut1;\n-    private ByteBuffer appIn2, appOut2;\n-    private ByteBuffer oneToTwo, twoToOne;\n+    private final SSLEngine clientEngine;\n+    private final SSLEngine serverEngine;\n+\n+    private static final String PATH_TO_STORES = \"..\/etc\";\n+    private static final String KEYSTORE_FILE = \"keystore\";\n+    private static final String TRUSTSTORE_FILE = \"truststore\";\n+\n+    private static final String KEYSTORE_PATH =\n+            System.getProperty(\"test.src\", \".\/\") + \"\/\" + PATH_TO_STORES +\n+                \"\/\" + KEYSTORE_FILE;\n+    private static final String TRUSTSTORE_PATH =\n+            System.getProperty(\"test.src\", \".\/\") + \"\/\" + PATH_TO_STORES +\n+                \"\/\" + TRUSTSTORE_FILE;\n+\n+    private ByteBuffer clientIn, clientOut;\n+    private ByteBuffer serverIn, serverOut;\n+    private ByteBuffer clientToServer, serverToClient;\n@@ -69,1 +68,1 @@\n-    private ByteBuffer  oneToTwoShifter, twoToOneShifter;\n+    private ByteBuffer clientToServerShifter, serverToClientShifter;\n@@ -71,2 +70,1 @@\n-    private String hostname = \"hostname\";\n-    private int portNumber = 77;\n+    private final String HOSTNAME = \"hostname\";\n@@ -74,1 +72,3 @@\n-    public ConnectionTest()\n+    private final int PORT_NUMBER = 77;\n+\n+    public ConnectionTest(String enabledProtocol, String enabledCipherSuite)\n@@ -77,3 +77,7 @@\n-        sslc = getSSLContext();\n-        ssle1 = sslc.createSSLEngine(hostname, portNumber);\n-        ssle2 = sslc.createSSLEngine();\n+        SSLContext sslContext = getSSLContext();\n+        clientEngine = sslContext.createSSLEngine(HOSTNAME, PORT_NUMBER);\n+        serverEngine = sslContext.createSSLEngine();\n+\n+        clientEngine.setEnabledCipherSuites(new String [] {\n+            enabledCipherSuite});\n+        clientEngine.setEnabledProtocols(new String[]{enabledProtocol});\n@@ -81,2 +85,3 @@\n-        ssle1.setEnabledCipherSuites(new String [] {\n-            \"SSL_RSA_WITH_RC4_128_MD5\"});\n+        serverEngine.setEnabledCipherSuites(new String [] {\n+                enabledCipherSuite});\n+        serverEngine.setEnabledProtocols(new String[]{enabledProtocol});\n@@ -84,2 +89,0 @@\n-        ssle2.setEnabledCipherSuites(new String [] {\n-            \"SSL_RSA_WITH_RC4_128_MD5\"});\n@@ -95,2 +98,2 @@\n-        ks.load(new FileInputStream(keyFilename), passphrase);\n-        ts.load(new FileInputStream(trustFilename), passphrase);\n+        ks.load(new FileInputStream(KEYSTORE_PATH), passphrase);\n+        ts.load(new FileInputStream(TRUSTSTORE_PATH), passphrase);\n@@ -113,1 +116,1 @@\n-        SSLSession session = ssle1.getSession();\n+        SSLSession session = clientEngine.getSession();\n@@ -117,2 +120,2 @@\n-        appIn1 = ByteBuffer.allocateDirect(appBufferMax + 10);\n-        appIn2 = ByteBuffer.allocateDirect(appBufferMax + 10);\n+        clientIn = ByteBuffer.allocateDirect(appBufferMax + 10);\n+        serverIn = ByteBuffer.allocateDirect(appBufferMax + 10);\n@@ -120,2 +123,2 @@\n-        appIn1.position(10);\n-        appIn2.position(10);\n+        clientIn.position(10);\n+        serverIn.position(10);\n@@ -123,2 +126,2 @@\n-        oneToTwo = ByteBuffer.allocateDirect(netBufferMax + 10);\n-        twoToOne = ByteBuffer.allocateDirect(netBufferMax + 10);\n+        clientToServer = ByteBuffer.allocateDirect(netBufferMax + 10);\n+        serverToClient = ByteBuffer.allocateDirect(netBufferMax + 10);\n@@ -126,4 +129,4 @@\n-        oneToTwo.position(10);\n-        twoToOne.position(10);\n-        oneToTwoShifter = oneToTwo.slice();\n-        twoToOneShifter = twoToOne.slice();\n+        clientToServer.position(10);\n+        serverToClient.position(10);\n+        clientToServerShifter = clientToServer.slice();\n+        serverToClientShifter = serverToClient.slice();\n@@ -131,2 +134,2 @@\n-        appOut1 = ByteBuffer.wrap(\"Hi Engine2, I'm SSLEngine1\".getBytes());\n-        appOut2 = ByteBuffer.wrap(\"Hello Engine1, I'm SSLEngine2\".getBytes());\n+        clientOut = ByteBuffer.wrap(\"Hi Engine2, I'm SSLEngine1\".getBytes());\n+        serverOut = ByteBuffer.wrap(\"Hello Engine1, I'm SSLEngine2\".getBytes());\n@@ -138,3 +141,3 @@\n-        System.out.println(\"AppOut1 = \" + appOut1);\n-        System.out.println(\"AppOut2 = \" + appOut2);\n-        System.out.println();\n+        log(\"clientOut = \" + clientOut);\n+        log(\"serverOut = \" + serverOut);\n+        log(\"\");\n@@ -145,1 +148,1 @@\n-            boolean done) throws Exception {\n+            boolean done) {\n@@ -148,1 +151,1 @@\n-            throw new Exception(\"Unexpected Status: need = \" + status +\n+            throw new RuntimeException(\"Unexpected Status: need = \" + status +\n@@ -153,1 +156,1 @@\n-            throw new Exception(\"Unexpected hsStatus: need = \" + hsStatus +\n+            throw new RuntimeException(\"Unexpected hsStatus: need = \" + hsStatus +\n@@ -158,1 +161,1 @@\n-            throw new Exception(\"Unexpected consumed: need = \" + consumed +\n+            throw new RuntimeException(\"Unexpected consumed: need = \" + consumed +\n@@ -163,1 +166,1 @@\n-            throw new Exception(\"Unexpected produced: need = \" + produced +\n+            throw new RuntimeException(\"Unexpected produced: need = \" + produced +\n@@ -168,1 +171,1 @@\n-            throw new Exception(\n+            throw new RuntimeException(\n@@ -179,3 +182,3 @@\n-        ssle1.setUseClientMode(true);\n-        ssle2.setUseClientMode(false);\n-        ssle2.setNeedClientAuth(true);\n+        clientEngine.setUseClientMode(true);\n+        serverEngine.setUseClientMode(false);\n+        serverEngine.setNeedClientAuth(true);\n@@ -183,3 +186,3 @@\n-        System.out.println(\"Testing for early unwrap\/wrap\");\n-        SSLEngineResult result1 = ssle1.unwrap(twoToOne, appIn1);\n-        SSLEngineResult result2 = ssle2.wrap(appOut2, oneToTwo);\n+        log(\"Testing for early unwrap\/wrap\");\n+        SSLEngineResult result1 = clientEngine.unwrap(serverToClient, clientIn);\n+        SSLEngineResult result2 = serverEngine.wrap(serverOut, clientToServer);\n@@ -197,4 +200,1 @@\n-        System.out.println(\"Doing Initial Handshake\");\n-\n-        boolean done1 = false;\n-        boolean done2 = false;\n+        log(\"Doing Initial Handshake\");\n@@ -205,2 +205,1 @@\n-        while (isHandshaking(ssle1) ||\n-                isHandshaking(ssle2)) {\n+        handshake();\n@@ -208,1 +207,1 @@\n-            System.out.println(\"================\");\n+        checkEngineAndSession();\n@@ -210,4 +209,2 @@\n-            result1 = ssle1.wrap(emptyBuffer, oneToTwo);\n-            checkResult(result1, null, null, 0, -1, done1);\n-            result2 = ssle2.wrap(emptyBuffer, twoToOne);\n-            checkResult(result2, null, null, 0, -1, done2);\n+        SSLSession clientSession1 = clientEngine.getSession();\n+        SSLSession serverSession1 = serverEngine.getSession();\n@@ -215,3 +212,7 @@\n-            if (result1.getHandshakeStatus() == HandshakeStatus.FINISHED) {\n-                done1 = true;\n-            }\n+        \/*\n+         * Should be able to write\/read a small buffer like this.\n+         *\/\n+        int appOut1Len = clientOut.remaining();\n+        int appOut2Len = serverOut.remaining();\n+        int net1Len;\n+        int net2Len;\n@@ -219,3 +220,8 @@\n-            if (result2.getHandshakeStatus() == HandshakeStatus.FINISHED) {\n-                done2 = true;\n-            }\n+        result1 = clientEngine.wrap(clientOut, clientToServer);\n+        checkResult(result1, Status.OK, HandshakeStatus.NOT_HANDSHAKING,\n+            appOut1Len, -1, false);\n+        result2 = serverEngine.wrap(serverOut, serverToClient);\n+        checkResult(result2, Status.OK, HandshakeStatus.NOT_HANDSHAKING,\n+            appOut2Len, -1, false);\n+        net1Len = result1.bytesProduced();\n+        net2Len = result2.bytesProduced();\n@@ -223,2 +229,2 @@\n-            System.out.println(\"wrap1 = \" + result1);\n-            System.out.println(\"wrap2 = \" + result2);\n+        log(\"wrap1 = \" + result1);\n+        log(\"wrap2 = \" + result2);\n@@ -226,6 +232,2 @@\n-            if (result1.getHandshakeStatus() == HandshakeStatus.NEED_TASK) {\n-                Runnable runnable;\n-                while ((runnable = ssle1.getDelegatedTask()) != null) {\n-                    runnable.run();\n-                }\n-            }\n+        clientToServer.flip();\n+        serverToClient.flip();\n@@ -233,6 +235,2 @@\n-            if (result2.getHandshakeStatus() == HandshakeStatus.NEED_TASK) {\n-                Runnable runnable;\n-                while ((runnable = ssle2.getDelegatedTask()) != null) {\n-                    runnable.run();\n-                }\n-            }\n+        clientToServer.position(10);\n+        serverToClient.position(10);\n@@ -240,2 +238,1 @@\n-            oneToTwo.flip();\n-            twoToOne.flip();\n+        log(\"----\");\n@@ -243,2 +240,6 @@\n-            oneToTwo.position(10);\n-            twoToOne.position(10);\n+        result1 = clientEngine.unwrap(serverToClient, clientIn);\n+        checkResult(result1, Status.OK, HandshakeStatus.NOT_HANDSHAKING,\n+            net2Len, appOut2Len, false);\n+        result2 = serverEngine.unwrap(clientToServer, serverIn);\n+        checkResult(result2, Status.OK, HandshakeStatus.NOT_HANDSHAKING,\n+            net1Len, appOut1Len, false);\n@@ -246,1 +247,2 @@\n-            System.out.println(\"----\");\n+        log(\"unwrap1 = \" + result1);\n+        log(\"unwrap2 = \" + result2);\n@@ -248,4 +250,1 @@\n-            result1 = ssle1.unwrap(twoToOne, appIn1);\n-            checkResult(result1, null, null, -1, 0, done1);\n-            result2 = ssle2.unwrap(oneToTwo, appIn2);\n-            checkResult(result2, null, null, -1, 0, done2);\n+        updateByteBuffers();\n@@ -253,3 +252,2 @@\n-            if (result1.getHandshakeStatus() == HandshakeStatus.FINISHED) {\n-                done1 = true;\n-            }\n+        serverSession1.invalidate();\n+        serverEngine.beginHandshake();\n@@ -257,3 +255,2 @@\n-            if (result2.getHandshakeStatus() == HandshakeStatus.FINISHED) {\n-                done2 = true;\n-            }\n+        log(\"\\nRENEGOTIATING\");\n+        log(\"=============\");\n@@ -261,13 +258,2 @@\n-            if (result1.getHandshakeStatus() == HandshakeStatus.NEED_TASK) {\n-                Runnable runnable;\n-                while ((runnable = ssle1.getDelegatedTask()) != null) {\n-                    runnable.run();\n-                }\n-            }\n-\n-            if (result2.getHandshakeStatus() == HandshakeStatus.NEED_TASK) {\n-                Runnable runnable;\n-                while ((runnable = ssle2.getDelegatedTask()) != null) {\n-                    runnable.run();\n-                }\n-            }\n+        clientIn.clear();\n+        serverIn.clear();\n@@ -275,13 +261,11 @@\n-            System.out.println(\"unwrap1 = \" + result1);\n-            System.out.println(\"unwrap2 = \" + result2);\n-\n-            oneToTwoShifter.position(oneToTwo.position() - 10);\n-            oneToTwoShifter.limit(oneToTwo.limit() - 10);\n-            twoToOneShifter.position(twoToOne.position() - 10);\n-            twoToOneShifter.limit(twoToOne.limit() - 10);\n-            oneToTwoShifter.compact();\n-            twoToOneShifter.compact();\n-            oneToTwo.position(oneToTwoShifter.position() + 10);\n-            oneToTwo.limit(oneToTwoShifter.limit() + 10);\n-            twoToOne.position(twoToOneShifter.position() + 10);\n-            twoToOne.limit(twoToOneShifter.limit() + 10);\n+        \/*\n+         * Do a quick test to see if this can do a switch\n+         * into client mode, at this point, you shouldn't be able\n+         * to switch back.\n+         *\/\n+        try {\n+            log(\"Try to change client mode\");\n+            serverEngine.setUseClientMode(true);\n+            throw new RuntimeException(\"Should have thrown IllegalArgumentException\");\n+        } catch (IllegalArgumentException e) {\n+            log(\"Caught correct IllegalArgumentException\");\n@@ -290,2 +274,1 @@\n-        System.out.println(\"\\nDONE HANDSHAKING\");\n-        System.out.println(\"================\");\n+        handshake();\n@@ -293,4 +276,2 @@\n-        if (!done1 || !done2) {\n-            throw new Exception(\"Both should be true:\\n\" +\n-                \" done1 = \" + done1 + \" done2 = \" + done2);\n-        }\n+        SSLSession clientSession2 = clientEngine.getSession();\n+        SSLSession serverSession2 = serverEngine.getSession();\n@@ -298,5 +279,0 @@\n-        String host = ssle1.getPeerHost();\n-        int port = ssle1.getPeerPort();\n-        if (!host.equals(hostname) || (port != portNumber)) {\n-            throw new Exception(\"unexpected host\/port \" + host + \":\" + port);\n-        }\n@@ -304,5 +280,2 @@\n-        host = ssle2.getPeerHost();\n-        port = ssle2.getPeerPort();\n-        if ((host != null) || (port != -1)) {\n-            throw new Exception(\"unexpected host\/port \" + host + \":\" + port);\n-        }\n+        log(\"\\nDoing close\");\n+        log(\"===========\");\n@@ -310,1 +283,2 @@\n-        SSLSession ssls1 = ssle1.getSession();\n+        clientEngine.closeOutbound();\n+        serverEngine.closeOutbound();\n@@ -312,5 +286,4 @@\n-        host = ssls1.getPeerHost();\n-        port = ssls1.getPeerPort();\n-        if (!host.equals(hostname) || (port != portNumber)) {\n-            throw new Exception(\"unexpected host\/port \" + host + \":\" + port);\n-        }\n+        clientToServer.flip();\n+        serverToClient.flip();\n+        clientToServer.position(10);\n+        serverToClient.position(10);\n@@ -318,1 +291,2 @@\n-        SSLSession ssls2 = ssle2.getSession();\n+        clientIn.clear();\n+        serverIn.clear();\n@@ -320,5 +294,7 @@\n-        host = ssls2.getPeerHost();\n-        port = ssls2.getPeerPort();\n-        if ((host != null) || (port != -1)) {\n-            throw new Exception(\"unexpected host\/port \" + host + \":\" + port);\n-        }\n+        log(\"LAST UNWRAP\");\n+        result1 = clientEngine.unwrap(serverToClient, clientIn);\n+        checkResult(result1, Status.BUFFER_UNDERFLOW,\n+            HandshakeStatus.NEED_WRAP, 0, 0, false);\n+        result2 = serverEngine.unwrap(clientToServer, serverIn);\n+        checkResult(result2, Status.BUFFER_UNDERFLOW,\n+            HandshakeStatus.NEED_WRAP, 0, 0, false);\n@@ -326,7 +302,15 @@\n-        \/*\n-         * Should be able to write\/read a small buffer like this.\n-         *\/\n-        int appOut1Len = appOut1.remaining();\n-        int appOut2Len = appOut2.remaining();\n-        int net1Len;\n-        int net2Len;\n+        log(\"unwrap1 = \" + result1);\n+        log(\"unwrap2 = \" + result2);\n+\n+        updateByteBuffers();\n+\n+        log(\"LAST WRAP\");\n+        result1 = clientEngine.wrap(clientOut, clientToServer);\n+        checkResult(result1, Status.CLOSED, HandshakeStatus.NOT_HANDSHAKING,\n+            0, -1, false);\n+        result2 = serverEngine.wrap(serverOut, serverToClient);\n+        checkResult(result2, Status.CLOSED, HandshakeStatus.NOT_HANDSHAKING,\n+            0, -1, false);\n+\n+        log(\"wrap1 = \" + result1);\n+        log(\"wrap2 = \" + result2);\n@@ -334,6 +318,0 @@\n-        result1 = ssle1.wrap(appOut1, oneToTwo);\n-        checkResult(result1, Status.OK, HandshakeStatus.NOT_HANDSHAKING,\n-            appOut1Len, -1, false);\n-        result2 = ssle2.wrap(appOut2, twoToOne);\n-        checkResult(result2, Status.OK, HandshakeStatus.NOT_HANDSHAKING,\n-            appOut2Len, -1, false);\n@@ -343,2 +321,2 @@\n-        System.out.println(\"wrap1 = \" + result1);\n-        System.out.println(\"wrap2 = \" + result2);\n+        clientToServer.flip();\n+        serverToClient.flip();\n@@ -346,2 +324,2 @@\n-        oneToTwo.flip();\n-        twoToOne.flip();\n+        clientToServer.position(10);\n+        serverToClient.position(10);\n@@ -349,4 +327,6 @@\n-        oneToTwo.position(10);\n-        twoToOne.position(10);\n-\n-        System.out.println(\"----\");\n+        result1 = clientEngine.unwrap(serverToClient, clientIn);\n+        checkResult(result1, Status.CLOSED, HandshakeStatus.NOT_HANDSHAKING,\n+            net1Len, 0, false);\n+        result2 = serverEngine.unwrap(clientToServer, serverIn);\n+        checkResult(result2, Status.CLOSED, HandshakeStatus.NOT_HANDSHAKING,\n+            net2Len, 0, false);\n@@ -354,6 +334,2 @@\n-        result1 = ssle1.unwrap(twoToOne, appIn1);\n-        checkResult(result1, Status.OK, HandshakeStatus.NOT_HANDSHAKING,\n-            net2Len, appOut2Len, false);\n-        result2 = ssle2.unwrap(oneToTwo, appIn2);\n-        checkResult(result2, Status.OK, HandshakeStatus.NOT_HANDSHAKING,\n-            net1Len, appOut1Len, false);\n+        log(\"unwrap1 = \" + result1);\n+        log(\"unwrap2 = \" + result2);\n@@ -361,2 +337,1 @@\n-        System.out.println(\"unwrap1 = \" + result1);\n-        System.out.println(\"unwrap2 = \" + result2);\n+        updateByteBuffers();\n@@ -364,10 +339,7 @@\n-        oneToTwoShifter.position(oneToTwo.position() - 10);\n-        oneToTwoShifter.limit(oneToTwo.limit() - 10);\n-        twoToOneShifter.position(twoToOne.position() - 10);\n-        twoToOneShifter.limit(twoToOne.limit() - 10);\n-        oneToTwoShifter.compact();\n-        twoToOneShifter.compact();\n-        oneToTwo.position(oneToTwoShifter.position() + 10);\n-        oneToTwo.limit(oneToTwoShifter.limit() + 10);\n-        twoToOne.position(twoToOneShifter.position() + 10);\n-        twoToOne.limit(twoToOneShifter.limit() + 10);\n+        log(\"EXTRA WRAP\");\n+        result1 = clientEngine.wrap(clientOut, clientToServer);\n+        checkResult(result1, Status.CLOSED, HandshakeStatus.NOT_HANDSHAKING,\n+            0, 0, false);\n+        result2 = serverEngine.wrap(serverOut, serverToClient);\n+        checkResult(result2, Status.CLOSED, HandshakeStatus.NOT_HANDSHAKING,\n+            0, 0, false);\n@@ -375,2 +347,2 @@\n-        ssls2.invalidate();\n-        ssle2.beginHandshake();\n+        log(\"wrap1 = \" + result1);\n+        log(\"wrap2 = \" + result2);\n@@ -378,2 +350,4 @@\n-        System.out.println(\"\\nRENEGOTIATING\");\n-        System.out.println(\"=============\");\n+        clientToServer.flip();\n+        serverToClient.flip();\n+        clientToServer.position(10);\n+        serverToClient.position(10);\n@@ -381,2 +355,7 @@\n-        done1 = false;\n-        done2 = false;\n+        log(\"EXTRA UNWRAP\");\n+        result1 = clientEngine.unwrap(serverToClient, clientIn);\n+        checkResult(result1, Status.CLOSED, HandshakeStatus.NOT_HANDSHAKING,\n+            0, 0, false);\n+        result2 = serverEngine.unwrap(clientToServer, serverIn);\n+        checkResult(result2, Status.CLOSED, HandshakeStatus.NOT_HANDSHAKING,\n+            0, 0, false);\n@@ -384,2 +363,2 @@\n-        appIn1.clear();\n-        appIn2.clear();\n+        log(\"unwrap1 = \" + result1);\n+        log(\"unwrap2 = \" + result2);\n@@ -387,12 +366,4 @@\n-        \/*\n-         * Do a quick test to see if this can do a switch\n-         * into client mode, at this point, you shouldn't be able\n-         * to switch back.\n-         *\/\n-        try {\n-            System.out.println(\"Try to change client mode\");\n-            ssle2.setUseClientMode(true);\n-            throw new Exception(\"Should have thrown IllegalArgumentException\");\n-        } catch (IllegalArgumentException e) {\n-            System.out.println(\"Caught correct IllegalArgumentException\");\n-        }\n+        checkSession(clientSession1, serverSession1, clientSession2, serverSession2);\n+        log(clientEngine);\n+        log(serverEngine);\n+    }\n@@ -400,2 +371,7 @@\n-        while (isHandshaking(ssle1) ||\n-                isHandshaking(ssle2)) {\n+    private void handshake() throws Exception {\n+        boolean clientDone = false;\n+        boolean serverDone = false;\n+        SSLEngineResult result2;\n+        SSLEngineResult result1;\n+        while (isHandshaking(clientEngine) ||\n+                isHandshaking(serverEngine)) {\n@@ -403,1 +379,1 @@\n-            System.out.println(\"================\");\n+            log(\"================\");\n@@ -405,4 +381,4 @@\n-            result1 = ssle1.wrap(emptyBuffer, oneToTwo);\n-            checkResult(result1, null, null, 0, -1, done1);\n-            result2 = ssle2.wrap(emptyBuffer, twoToOne);\n-            checkResult(result2, null, null, 0, -1, done2);\n+            result1 = clientEngine.wrap(emptyBuffer, clientToServer);\n+            checkResult(result1, null, null, 0, -1, clientDone);\n+            result2 = serverEngine.wrap(emptyBuffer, serverToClient);\n+            checkResult(result2, null, null, 0, -1, serverDone);\n@@ -411,1 +387,1 @@\n-                done1 = true;\n+                clientDone = true;\n@@ -415,1 +391,1 @@\n-                done2 = true;\n+                serverDone = true;\n@@ -418,2 +394,2 @@\n-            System.out.println(\"wrap1 = \" + result1);\n-            System.out.println(\"wrap2 = \" + result2);\n+            log(\"wrap1 = \" + result1);\n+            log(\"wrap2 = \" + result2);\n@@ -423,1 +399,1 @@\n-                while ((runnable = ssle1.getDelegatedTask()) != null) {\n+                while ((runnable = clientEngine.getDelegatedTask()) != null) {\n@@ -430,1 +406,1 @@\n-                while ((runnable = ssle2.getDelegatedTask()) != null) {\n+                while ((runnable = serverEngine.getDelegatedTask()) != null) {\n@@ -435,2 +411,2 @@\n-            oneToTwo.flip();\n-            twoToOne.flip();\n+            clientToServer.flip();\n+            serverToClient.flip();\n@@ -438,2 +414,2 @@\n-            oneToTwo.position(10);\n-            twoToOne.position(10);\n+            clientToServer.position(10);\n+            serverToClient.position(10);\n@@ -441,1 +417,1 @@\n-            System.out.println(\"----\");\n+            log(\"----\");\n@@ -443,4 +419,4 @@\n-            result1 = ssle1.unwrap(twoToOne, appIn1);\n-            checkResult(result1, null, null, -1, 0, done1);\n-            result2 = ssle2.unwrap(oneToTwo, appIn2);\n-            checkResult(result2, null, null, -1, 0, done2);\n+            result1 = clientEngine.unwrap(serverToClient, clientIn);\n+            checkResult(result1, null, null, -1, 0, clientDone);\n+            result2 = serverEngine.unwrap(clientToServer, serverIn);\n+            checkResult(result2, null, null, -1, 0, serverDone);\n@@ -449,1 +425,1 @@\n-                done1 = true;\n+                clientDone = true;\n@@ -453,1 +429,1 @@\n-                done2 = true;\n+                serverDone = true;\n@@ -456,2 +432,2 @@\n-            System.out.println(\"unwrap1 = \" + result1);\n-            System.out.println(\"unwrap2 = \" + result2);\n+            log(\"unwrap1 = \" + result1);\n+            log(\"unwrap2 = \" + result2);\n@@ -461,1 +437,1 @@\n-                while ((runnable = ssle1.getDelegatedTask()) != null) {\n+                while ((runnable = clientEngine.getDelegatedTask()) != null) {\n@@ -468,1 +444,1 @@\n-                while ((runnable = ssle2.getDelegatedTask()) != null) {\n+                while ((runnable = serverEngine.getDelegatedTask()) != null) {\n@@ -473,16 +449,1 @@\n-            oneToTwoShifter.position(oneToTwo.position() - 10);\n-            oneToTwoShifter.limit(oneToTwo.limit() - 10);\n-            twoToOneShifter.position(twoToOne.position() - 10);\n-            twoToOneShifter.limit(twoToOne.limit() - 10);\n-            oneToTwoShifter.compact();\n-            twoToOneShifter.compact();\n-            oneToTwo.position(oneToTwoShifter.position() + 10);\n-            oneToTwo.limit(oneToTwoShifter.limit() + 10);\n-            twoToOne.position(twoToOneShifter.position() + 10);\n-            twoToOne.limit(twoToOneShifter.limit() + 10);\n-        }\n-\n-        host = ssle1.getPeerHost();\n-        port = ssle1.getPeerPort();\n-        if (!host.equals(hostname) || (port != portNumber)) {\n-            throw new Exception(\"unexpected host\/port \" + host + \":\" + port);\n+            updateByteBuffers();\n@@ -491,5 +452,0 @@\n-        host = ssle2.getPeerHost();\n-        port = ssle2.getPeerPort();\n-        if ((host != null) || (port != -1)) {\n-            throw new Exception(\"unexpected host\/port \" + host + \":\" + port);\n-        }\n@@ -497,1 +453,2 @@\n-        SSLSession ssls3 = ssle2.getSession();\n+        log(\"\\nDONE HANDSHAKING\");\n+        log(\"================\");\n@@ -499,4 +456,3 @@\n-        host = ssls1.getPeerHost();\n-        port = ssls1.getPeerPort();\n-        if (!host.equals(hostname) || (port != portNumber)) {\n-            throw new Exception(\"unexpected host\/port \" + host + \":\" + port);\n+        if (!clientDone || !serverDone) {\n+            throw new RuntimeException(\"Both should be true:\\n\" +\n+                    \" clientDone = \" + clientDone + \" serverDone = \" + serverDone);\n@@ -504,0 +460,1 @@\n+    }\n@@ -505,7 +462,12 @@\n-        SSLSession ssls4 = ssle2.getSession();\n-\n-        host = ssls2.getPeerHost();\n-        port = ssls2.getPeerPort();\n-        if ((host != null) || (port != -1)) {\n-            throw new Exception(\"unexpected host\/port \" + host + \":\" + port);\n-        }\n+    private void updateByteBuffers() {\n+        clientToServerShifter.position(clientToServer.position() - 10);\n+        clientToServerShifter.limit(clientToServer.limit() - 10);\n+        serverToClientShifter.position(serverToClient.position() - 10);\n+        serverToClientShifter.limit(serverToClient.limit() - 10);\n+        clientToServerShifter.compact();\n+        serverToClientShifter.compact();\n+        clientToServer.position(clientToServerShifter.position() + 10);\n+        clientToServer.limit(clientToServerShifter.limit() + 10);\n+        serverToClient.position(serverToClientShifter.position() + 10);\n+        serverToClient.limit(serverToClientShifter.limit() + 10);\n+    }\n@@ -513,2 +475,5 @@\n-        System.out.println(\"\\nDoing close\");\n-        System.out.println(\"===========\");\n+    private static void checkSession(SSLSession clientSession1, SSLSession serverSession1,\n+            SSLSession clientSession2, SSLSession serverSession2) {\n+        log(\"\\nSession Info for client SSLEngine 1\");\n+        log(clientSession1);\n+        log(clientSession1.getCreationTime());\n@@ -516,2 +481,2 @@\n-        ssle1.closeOutbound();\n-        ssle2.closeOutbound();\n+        String peer1 = clientSession1.getPeerHost();\n+        log(peer1);\n@@ -519,4 +484,2 @@\n-        oneToTwo.flip();\n-        twoToOne.flip();\n-        oneToTwo.position(10);\n-        twoToOne.position(10);\n+        String protocol1 = clientSession1.getProtocol();\n+        log(protocol1);\n@@ -524,2 +487,3 @@\n-        appIn1.clear();\n-        appIn2.clear();\n+        String ciphersuite1 = clientSession1.getCipherSuite();\n+        log(ciphersuite1);\n+        log(\"\");\n@@ -527,7 +491,3 @@\n-        System.out.println(\"LAST UNWRAP\");\n-        result1 = ssle1.unwrap(twoToOne, appIn1);\n-        checkResult(result1, Status.BUFFER_UNDERFLOW,\n-            HandshakeStatus.NEED_WRAP, 0, 0, false);\n-        result2 = ssle2.unwrap(oneToTwo, appIn2);\n-        checkResult(result2, Status.BUFFER_UNDERFLOW,\n-            HandshakeStatus.NEED_WRAP, 0, 0, false);\n+        log(\"\\nSession Info for server SSLEngine 1\");\n+        log(serverSession1);\n+        log(serverSession1.getCreationTime());\n@@ -535,21 +495,2 @@\n-        System.out.println(\"unwrap1 = \" + result1);\n-        System.out.println(\"unwrap2 = \" + result2);\n-\n-        oneToTwoShifter.position(oneToTwo.position() - 10);\n-        oneToTwoShifter.limit(oneToTwo.limit() - 10);\n-        twoToOneShifter.position(twoToOne.position() - 10);\n-        twoToOneShifter.limit(twoToOne.limit() - 10);\n-        oneToTwoShifter.compact();\n-        twoToOneShifter.compact();\n-        oneToTwo.position(oneToTwoShifter.position() + 10);\n-        oneToTwo.limit(oneToTwoShifter.limit() + 10);\n-        twoToOne.position(twoToOneShifter.position() + 10);\n-        twoToOne.limit(twoToOneShifter.limit() + 10);\n-\n-        System.out.println(\"LAST WRAP\");\n-        result1 = ssle1.wrap(appOut1, oneToTwo);\n-        checkResult(result1, Status.CLOSED, HandshakeStatus.NEED_UNWRAP,\n-            0, -1, false);\n-        result2 = ssle2.wrap(appOut2, twoToOne);\n-        checkResult(result2, Status.CLOSED, HandshakeStatus.NEED_UNWRAP,\n-            0, -1, false);\n+        String peer2 = serverSession1.getPeerHost();\n+        log(peer2);\n@@ -557,2 +498,2 @@\n-        System.out.println(\"wrap1 = \" + result1);\n-        System.out.println(\"wrap2 = \" + result2);\n+        String protocol2 = serverSession1.getProtocol();\n+        log(protocol2);\n@@ -560,2 +501,3 @@\n-        net1Len = result1.bytesProduced();\n-        net2Len = result2.bytesProduced();\n+        String ciphersuite2 = serverSession1.getCipherSuite();\n+        log(ciphersuite2);\n+        log(\"\");\n@@ -563,2 +505,3 @@\n-        oneToTwo.flip();\n-        twoToOne.flip();\n+        if (peer1.equals(peer2)) {\n+            throw new RuntimeException(\"peer hostnames not equal\");\n+        }\n@@ -566,2 +509,3 @@\n-        oneToTwo.position(10);\n-        twoToOne.position(10);\n+        if (!protocol1.equals(protocol2)) {\n+            throw new RuntimeException(\"protocols not equal\");\n+        }\n@@ -569,6 +513,2 @@\n-        result1 = ssle1.unwrap(twoToOne, appIn1);\n-        checkResult(result1, Status.CLOSED, HandshakeStatus.NOT_HANDSHAKING,\n-            net1Len, 0, false);\n-        result2 = ssle2.unwrap(oneToTwo, appIn2);\n-        checkResult(result2, Status.CLOSED, HandshakeStatus.NOT_HANDSHAKING,\n-            net2Len, 0, false);\n+        compareCertificates(clientSession1, serverSession1);\n+        compareCertificates(clientSession2, serverSession2);\n@@ -576,21 +516,3 @@\n-        System.out.println(\"unwrap1 = \" + result1);\n-        System.out.println(\"unwrap2 = \" + result2);\n-\n-        oneToTwoShifter.position(oneToTwo.position() - 10);\n-        oneToTwoShifter.limit(oneToTwo.limit() - 10);\n-        twoToOneShifter.position(twoToOne.position() - 10);\n-        twoToOneShifter.limit(twoToOne.limit() - 10);\n-        oneToTwoShifter.compact();\n-        twoToOneShifter.compact();\n-        oneToTwo.position(oneToTwoShifter.position() + 10);\n-        oneToTwo.limit(oneToTwoShifter.limit() + 10);\n-        twoToOne.position(twoToOneShifter.position() + 10);\n-        twoToOne.limit(twoToOneShifter.limit() + 10);\n-\n-        System.out.println(\"EXTRA WRAP\");\n-        result1 = ssle1.wrap(appOut1, oneToTwo);\n-        checkResult(result1, Status.CLOSED, HandshakeStatus.NOT_HANDSHAKING,\n-            0, 0, false);\n-        result2 = ssle2.wrap(appOut2, twoToOne);\n-        checkResult(result2, Status.CLOSED, HandshakeStatus.NOT_HANDSHAKING,\n-            0, 0, false);\n+        if (!ciphersuite1.equals(ciphersuite2)) {\n+            throw new RuntimeException(\"ciphersuites not equal\");\n+        }\n@@ -598,2 +520,5 @@\n-        System.out.println(\"wrap1 = \" + result1);\n-        System.out.println(\"wrap2 = \" + result2);\n+        log(\"\\nSession Info for client SSLEngine 2\");\n+        log(clientSession2);\n+        log(\"\\nSession Info for server SSLEngine 2\");\n+        log(serverSession2);\n+    }\n@@ -601,4 +526,0 @@\n-        oneToTwo.flip();\n-        twoToOne.flip();\n-        oneToTwo.position(10);\n-        twoToOne.position(10);\n@@ -606,7 +527,15 @@\n-        System.out.println(\"EXTRA UNWRAP\");\n-        result1 = ssle1.unwrap(twoToOne, appIn1);\n-        checkResult(result1, Status.CLOSED, HandshakeStatus.NOT_HANDSHAKING,\n-            0, 0, false);\n-        result2 = ssle2.unwrap(oneToTwo, appIn2);\n-        checkResult(result2, Status.CLOSED, HandshakeStatus.NOT_HANDSHAKING,\n-            0, 0, false);\n+    private static void compareCertificates(SSLSession client, SSLSession server) {\n+        try {\n+            java.security.cert.Certificate clientLocal = client.getLocalCertificates()[0];\n+            java.security.cert.Certificate clientPeer = client.getPeerCertificates()[0];\n+            java.security.cert.Certificate serverLocal = server.getLocalCertificates()[0];\n+            java.security.cert.Certificate serverPeer = server.getPeerCertificates()[0];\n+\n+            log(String.format(\"Client local cert: %s%nClient peer cert: %s%n\"\n+                    + \"Server local cert: %s%nServer peer cert: %s%n\",\n+                    clientLocal, clientPeer, serverLocal, serverPeer));\n+\n+            if (!clientLocal.equals(serverPeer)) {\n+                throw new RuntimeException(\"Client's local certificate does \"\n+                        + \"not match server's peer certificate\");\n+            }\n@@ -614,2 +543,4 @@\n-        System.out.println(\"unwrap1 = \" + result1);\n-        System.out.println(\"unwrap2 = \" + result2);\n+            if (!clientPeer.equals(serverLocal)) {\n+                throw new RuntimeException(\"Client's peer certificate does \"\n+                        + \"not match server's local certificate\");\n+            }\n@@ -617,3 +548,3 @@\n-        checkSession(ssls1, ssls2, ssls3, ssls4);\n-        System.out.println(ssle1);\n-        System.out.println(ssle2);\n+        } catch (SSLPeerUnverifiedException e) {\n+            throw new RuntimeException(\"Could not get peer certificate!\", e);\n+        }\n@@ -622,30 +553,8 @@\n-    private static void checkSession(SSLSession ssls1, SSLSession ssls2,\n-            SSLSession ssls3, SSLSession ssls4) throws Exception {\n-        System.out.println(\"\\nSession Info for SSLEngine1\");\n-        System.out.println(ssls1);\n-        System.out.println(ssls1.getCreationTime());\n-        String peer1 = ssls1.getPeerHost();\n-        System.out.println(peer1);\n-        String protocol1 = ssls1.getProtocol();\n-        System.out.println(protocol1);\n-        java.security.cert.Certificate cert1 = ssls1.getPeerCertificates()[0];\n-        System.out.println(cert1);\n-        String ciphersuite1 = ssls1.getCipherSuite();\n-        System.out.println(ciphersuite1);\n-        System.out.println();\n-\n-        System.out.println(\"\\nSession Info for SSLEngine2\");\n-        System.out.println(ssls2);\n-        System.out.println(ssls2.getCreationTime());\n-        String peer2 = ssls2.getPeerHost();\n-        System.out.println(peer2);\n-        String protocol2 = ssls2.getProtocol();\n-        System.out.println(protocol2);\n-        java.security.cert.Certificate cert2 = ssls2.getPeerCertificates()[0];\n-        System.out.println(cert2);\n-        String ciphersuite2 = ssls2.getCipherSuite();\n-        System.out.println(ciphersuite2);\n-        System.out.println();\n-\n-        if (peer1.equals(peer2)) {\n-            throw new Exception(\"peer hostnames not equal\");\n+    private void checkEngineAndSession()\n+            throws Exception {\n+        String host = clientEngine.getPeerHost();\n+        int port = clientEngine.getPeerPort();\n+        if (!host.equals(HOSTNAME) || (port != PORT_NUMBER)) {\n+            throw new Exception(\"Unexpected host\/port from client engine.\"\n+                    + \" Expected \" + HOSTNAME + \":\" + PORT_NUMBER\n+                    + \" Received \" +host + \":\" + port);\n@@ -654,2 +563,6 @@\n-        if (!protocol1.equals(protocol2)) {\n-            throw new Exception(\"protocols not equal\");\n+        host = serverEngine.getPeerHost();\n+        port = serverEngine.getPeerPort();\n+        if ((host != null) || (port != -1)) {\n+            throw new Exception(\"Unexpected host\/port from server engine.\"\n+                    + \" Expected null:-1\"\n+                    + \" Received \" + host + \":\" + port);\n@@ -658,3 +571,1 @@\n-        if (!cert1.equals(cert2)) {\n-            throw new Exception(\"certs not equal\");\n-        }\n+        SSLSession clientSession = clientEngine.getSession();\n@@ -662,2 +573,6 @@\n-        if (!ciphersuite1.equals(ciphersuite2)) {\n-            throw new Exception(\"ciphersuites not equal\");\n+        host = clientSession.getPeerHost();\n+        port = clientSession.getPeerPort();\n+        if (!host.equals(HOSTNAME) || (port != PORT_NUMBER)) {\n+            throw new Exception(\"Unexpected host\/port from client session.\"\n+                    + \" Expected \" + HOSTNAME + \":\" + PORT_NUMBER\n+                    + \" Received \" + host + \":\" + port);\n@@ -666,4 +581,1 @@\n-        System.out.println(\"\\nSession Info for SSLEngine3\");\n-        System.out.println(ssls3);\n-        System.out.println(\"\\nSession Info for SSLEngine4\");\n-        System.out.println(ssls4);\n+        SSLSession serverSession = serverEngine.getSession();\n@@ -671,2 +583,6 @@\n-        if (ssls3.equals(ssls1) || ssls4.equals(ssls2)) {\n-            throw new Exception(\"sessions should not be equals\");\n+        host = serverSession.getPeerHost();\n+        port = serverSession.getPeerPort();\n+        if ((host != null) || (port != -1)) {\n+            throw new Exception(\"Unexpected host\/port from server session.\"\n+                    + \" Expected null:-1\"\n+                    + \" Received \" + host + \":\" + port);\n@@ -674,0 +590,5 @@\n+\n+    }\n+\n+    private static void log(Object msg) {\n+        System.out.println(msg);\n@@ -681,1 +602,2 @@\n-        ConnectionTest ct = new ConnectionTest();\n+        log(String.format(\"Running with %s and %s%n\", args[0], args[1]));\n+        ConnectionTest ct = new ConnectionTest(args[0], args[1]);\n@@ -684,1 +606,1 @@\n-}\n+}\n\\ No newline at end of file\n","filename":"test\/jdk\/javax\/net\/ssl\/SSLEngine\/ConnectionTest.java","additions":340,"deletions":418,"binary":false,"changes":758,"status":"modified"}]}