{"files":[{"patch":"@@ -46,1 +46,1 @@\n-   Thread *_thread;\n+   JavaThread* _thread;\n@@ -50,1 +50,1 @@\n-   SeenThread(Thread *thread) {\n+   SeenThread(JavaThread* thread) {\n@@ -55,2 +55,2 @@\n-   Thread* thread()                const { return _thread;}\n-   void set_thread(Thread *thread) { _thread = thread; }\n+   JavaThread* thread()                const { return _thread;}\n+   void set_thread(JavaThread* thread) { _thread = thread; }\n@@ -59,2 +59,2 @@\n-   void set_next(SeenThread *seen) { _stnext = seen; }\n-   void set_prev(SeenThread *seen) { _stprev = seen; }\n+   void set_next(SeenThread* seen) { _stnext = seen; }\n+   void set_prev(SeenThread* seen) { _stprev = seen; }\n@@ -110,1 +110,1 @@\n-void PlaceholderEntry::add_seen_thread(Thread* thread, PlaceholderTable::classloadAction action) {\n+void PlaceholderEntry::add_seen_thread(JavaThread* thread, PlaceholderTable::classloadAction action) {\n@@ -131,1 +131,1 @@\n-bool PlaceholderEntry::check_seen_thread(Thread* thread, PlaceholderTable::classloadAction action) {\n+bool PlaceholderEntry::check_seen_thread(JavaThread* thread, PlaceholderTable::classloadAction action) {\n@@ -149,1 +149,1 @@\n-bool PlaceholderEntry::remove_seen_thread(Thread* thread, PlaceholderTable::classloadAction action) {\n+bool PlaceholderEntry::remove_seen_thread(JavaThread* thread, PlaceholderTable::classloadAction action) {\n@@ -291,1 +291,1 @@\n-                                                 Thread* thread) {\n+                                                 JavaThread* thread) {\n@@ -324,1 +324,1 @@\n-                                       Thread* thread) {\n+                                       JavaThread* thread) {\n","filename":"src\/hotspot\/share\/classfile\/placeholders.cpp","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -88,1 +88,1 @@\n-                                 Thread* thread);\n+                                 JavaThread* thread);\n@@ -97,1 +97,1 @@\n-                       classloadAction action, Thread* thread);\n+                       classloadAction action, JavaThread* thread);\n@@ -119,1 +119,1 @@\n-  Thread*           _definer;       \/\/ owner of define token\n+  JavaThread*       _definer;       \/\/ owner of define token\n@@ -133,2 +133,2 @@\n-  void add_seen_thread(Thread* thread, PlaceholderTable::classloadAction action);\n-  bool remove_seen_thread(Thread* thread, PlaceholderTable::classloadAction action);\n+  void add_seen_thread(JavaThread* thread, PlaceholderTable::classloadAction action);\n+  bool remove_seen_thread(JavaThread* thread, PlaceholderTable::classloadAction action);\n@@ -149,2 +149,2 @@\n-  Thread*            definer()             const {return _definer; }\n-  void               set_definer(Thread* definer) { _definer = definer; }\n+  JavaThread*        definer()             const {return _definer; }\n+  void               set_definer(JavaThread* definer) { _definer = definer; }\n@@ -161,1 +161,1 @@\n-  SeenThread*        defineThreadQ()        const { return _defineThreadQ; }\n+  SeenThread*        defineThreadQ()       const { return _defineThreadQ; }\n@@ -191,1 +191,1 @@\n-  bool check_seen_thread(Thread* thread, PlaceholderTable::classloadAction action);\n+  bool check_seen_thread(JavaThread* thread, PlaceholderTable::classloadAction action);\n","filename":"src\/hotspot\/share\/classfile\/placeholders.hpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"}]}