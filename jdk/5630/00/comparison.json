{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -58,4 +58,2 @@\n-        Iterator i = threadTable.entrySet().iterator();\n-        while (i.hasNext()) {\n-            Entry e = (Entry)i.next();\n-            if (dfn(e) >= 0) {\n+        for (Entry<JavaThread, Integer> e : threadTable.entrySet()) {\n+            if (e.getValue() >= 0) {\n@@ -67,1 +65,1 @@\n-            JavaThread thread = (JavaThread)e.getKey();\n+            JavaThread thread = e.getKey();\n@@ -121,1 +119,1 @@\n-                waitingToLockMonitor = (ObjectMonitor)currentThread.getCurrentPendingMonitor();\n+                waitingToLockMonitor = currentThread.getCurrentPendingMonitor();\n@@ -165,4 +163,0 @@\n-    private static int dfn(Entry e) {\n-        return ((Integer)e.getValue()).intValue();\n-    }\n-\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/runtime\/DeadlockDetector.java","additions":5,"deletions":11,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n-import java.io.*;\n@@ -196,3 +195,2 @@\n-      Iterator i = updates.iterator();\n-      while (i.hasNext()) {\n-        textArea.append((String)i.next());\n+      for (String update : updates) {\n+        textArea.append(update);\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/ui\/FindInHeapPanel.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"}]}