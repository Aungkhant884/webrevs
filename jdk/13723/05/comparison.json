{"files":[{"patch":"@@ -1573,0 +1573,4 @@\n+JavaThread* java_lang_Thread::thread_acquire(oop java_thread) {\n+  return reinterpret_cast<JavaThread*>(java_thread->address_field_acquire(_eetop_offset));\n+}\n+\n@@ -1577,0 +1581,4 @@\n+void java_lang_Thread::release_set_thread(oop java_thread, JavaThread* thread) {\n+  java_thread->release_address_field_put(_eetop_offset, (address)thread);\n+}\n+\n","filename":"src\/hotspot\/share\/classfile\/javaClasses.cpp","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -369,0 +369,1 @@\n+  static JavaThread* thread_acquire(oop java_thread);\n@@ -371,0 +372,1 @@\n+  static void release_set_thread(oop java_thread, JavaThread* thread);\n","filename":"src\/hotspot\/share\/classfile\/javaClasses.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -746,2 +746,1 @@\n-  OrderAccess::release();\n-  java_lang_Thread::set_thread(threadObj(), nullptr);\n+  java_lang_Thread::release_set_thread(threadObj(), nullptr);\n@@ -1671,1 +1670,0 @@\n-  java_lang_Thread::set_thread(thread_oop(), this);\n@@ -1687,0 +1685,5 @@\n+  \/\/ Publish the JavaThread* in java.lang.Thread after the JavaThread* is\n+  \/\/ on a ThreadsList. We don't want to wait for the release when the\n+  \/\/ Theads_lock is dropped somewhere in the caller since the JavaThread*\n+  \/\/ is already visible to JVM\/TI via the ThreadsList.\n+  java_lang_Thread::release_set_thread(thread_oop(), this);\n@@ -2124,3 +2127,0 @@\n-\n-  java_lang_Thread::set_thread(thread_oop(), target); \/\/ isAlive == true now\n-\n@@ -2139,0 +2139,5 @@\n+  \/\/ Publish the JavaThread* in java.lang.Thread after the JavaThread* is\n+  \/\/ on a ThreadsList. We don't want to wait for the release when the\n+  \/\/ Theads_lock is dropped when the 'mu' destructor is run since the\n+  \/\/ JavaThread* is already visible to JVM\/TI via the ThreadsList.\n+  java_lang_Thread::release_set_thread(thread_oop(), target); \/\/ isAlive == true now\n","filename":"src\/hotspot\/share\/runtime\/javaThread.cpp","additions":11,"deletions":6,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -818,1 +818,1 @@\n-  JavaThread *java_thread = java_lang_Thread::thread(thread_oop);\n+  JavaThread *java_thread = java_lang_Thread::thread_acquire(thread_oop);\n@@ -820,2 +820,3 @@\n-    \/\/ The java.lang.Thread does not contain a JavaThread * so it has\n-    \/\/ not yet run or it has died.\n+    \/\/ The java.lang.Thread does not contain a JavaThread* so it has not\n+    \/\/ run enough to be put on a ThreadsList or it has exited enough to\n+    \/\/ make it past ensure_join() where the JavaThread* is cleared.\n","filename":"src\/hotspot\/share\/runtime\/threadSMR.cpp","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"}]}