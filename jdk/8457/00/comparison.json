{"files":[{"patch":"@@ -11675,1 +11675,3 @@\n-               ((UseAVX > 2) && VM_Version::supports_avx512vlbw()));\n+               ((UseAVX > 2) && VM_Version::supports_avx512vlbw()) &&\n+               n->in(2)->get_int() < 256 \/* rough limit to prevent overflowing scratch buffer *\/);\n+\n","filename":"src\/hotspot\/cpu\/x86\/x86_32.ad","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -11379,1 +11379,2 @@\n-              ((UseAVX > 2) && VM_Version::supports_avx512vlbw()));\n+              ((UseAVX > 2) && VM_Version::supports_avx512vlbw()) &&\n+              n->in(2)->get_long() < 256 \/* rough limit to prevent overflowing scratch buffer *\/);\n","filename":"src\/hotspot\/cpu\/x86\/x86_64.ad","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -3115,1 +3115,1 @@\n-  if (!IdealizeClearArrayNode || _is_large) return NULL;\n+  if (_is_large) return NULL;\n@@ -3136,0 +3136,1 @@\n+  if (!IdealizeClearArrayNode) return NULL;\n","filename":"src\/hotspot\/share\/opto\/memnode.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -0,0 +1,51 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+\/*\n+ * @test ClearArray.java\n+ * @bug 8284883\n+ * @compile ClearArray.java\n+ * @summary ClearArray instruction overflows scratch buffer\n+ * @run main\/othervm -XX:+UnlockDiagnosticVMOptions -XX:-TieredCompilation -Xbatch\n+ *   -XX:InitArrayShortSize=32768 -XX:-IdealizeClearArrayNode compiler.c2.ClearArray\n+ * @run main\/othervm -XX:+UnlockDiagnosticVMOptions -XX:+IgnoreUnrecognizedVMOptions -XX:-TieredCompilation -Xbatch\n+ *   -XX:InitArrayShortSize=32768 -XX:-IdealizeClearArrayNode -XX:UseAVX=3 compiler.c2.ClearArray\n+ *\/\n+\n+package compiler.c2;\n+\n+public class ClearArray {\n+\n+    static int[] STATIC;\n+\n+    static void foo() {\n+        STATIC = new int[4096];\n+    }\n+\n+    public static void main(String[] args) {\n+        for (int i = 0; i < 20_000; ++i) {\n+            foo();\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/ClearArray.java","additions":51,"deletions":0,"binary":false,"changes":51,"status":"added"}]}