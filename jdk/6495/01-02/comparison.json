{"files":[{"patch":"@@ -1,44 +0,0 @@\n-\/*\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/*\n- * @test\n- * @bug 8277531\n- * @requires os.family == \"windows\"\n- * @summary os+thread output should contain actual thread size for thread start\n- * @library \/test\/lib\n- *\/\n-import jdk.test.lib.process.OutputAnalyzer;\n-import jdk.test.lib.process.ProcessTools;\n-\n-public class TestLogThreadStackSize {\n-\n-    public static void main(String[] args) throws Exception {\n-\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:os+thread\", \"-version\");\n-        OutputAnalyzer output = ProcessTools.executeProcess(pb);\n-        output.shouldMatch(\"Thread \\\".*\\\" started .*stacksize: [0-9]*K\")\n-              .shouldNotMatch(\"Thread \\\".*\\\" started .*stacksize: default\");\n-    }\n-\n-}\n","filename":"test\/hotspot\/jtreg\/runtime\/logging\/TestLogThreadStackSize.java","additions":0,"deletions":44,"binary":false,"changes":44,"status":"deleted"},{"patch":"@@ -27,1 +27,1 @@\n- * @bug 8149036 8150619\n+ * @bug 8149036 8150619 8277531\n@@ -39,0 +39,1 @@\n+import jdk.test.lib.Platform;\n@@ -46,1 +47,5 @@\n-        output.shouldContain(\"Thread is alive\");\n+        if (Platform.isWindows()) {\n+            output.shouldMatch(\"Thread is alive \\\\(tid: [0-9]+, stacksize: [0-9]+k\\\\)\");\n+        } else {\n+            output.shouldContain(\"Thread is alive\");\n+        }\n","filename":"test\/hotspot\/jtreg\/runtime\/logging\/ThreadLoggingTest.java","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"}]}