{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -532,1 +532,1 @@\n-  log_info(os, thread)(\"Thread is alive (tid: \" UINTX_FORMAT \").\", os::current_thread_id());\n+  log_info(os, thread)(\"Thread is alive (tid: \" UINTX_FORMAT \", stacksize: \" SIZE_FORMAT \"k).\", os::current_thread_id(), thread->stack_size() \/ 1024);\n","filename":"src\/hotspot\/os\/windows\/os_windows.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,1 @@\n- * @bug 8149036 8150619\n+ * @bug 8149036 8150619 8277531\n@@ -39,0 +39,1 @@\n+import jdk.test.lib.Platform;\n@@ -46,1 +47,5 @@\n-        output.shouldContain(\"Thread is alive\");\n+        if (Platform.isWindows()) {\n+            output.shouldMatch(\"Thread is alive \\\\(tid: [0-9]+, stacksize: [0-9]+k\\\\)\");\n+        } else {\n+            output.shouldContain(\"Thread is alive\");\n+        }\n","filename":"test\/hotspot\/jtreg\/runtime\/logging\/ThreadLoggingTest.java","additions":8,"deletions":3,"binary":false,"changes":11,"status":"modified"}]}