{"files":[{"patch":"@@ -417,2 +417,1 @@\n-            String word = st.sval;\n-            switch (word) {\n+            switch (st.sval) {\n@@ -420,1 +419,1 @@\n-                name = parseStringEntry(word);\n+                name = parseStringEntry(st.sval);\n@@ -422,1 +421,1 @@\n-                library = parseLibrary(word);\n+                library = parseLibrary(st.sval);\n@@ -424,1 +423,1 @@\n-                parseDescription(word);\n+                parseDescription(st.sval);\n@@ -426,1 +425,1 @@\n-                parseSlotID(word);\n+                parseSlotID(st.sval);\n@@ -428,1 +427,1 @@\n-                parseSlotListIndex(word);\n+                parseSlotListIndex(st.sval);\n@@ -430,1 +429,1 @@\n-                parseEnabledMechanisms(word);\n+                parseEnabledMechanisms(st.sval);\n@@ -432,1 +431,1 @@\n-                parseDisabledMechanisms(word);\n+                parseDisabledMechanisms(st.sval);\n@@ -434,1 +433,1 @@\n-                parseAttributes(word);\n+                parseAttributes(st.sval);\n@@ -436,1 +435,1 @@\n-                parseHandleStartupErrors(word);\n+                parseHandleStartupErrors(st.sval);\n@@ -438,1 +437,1 @@\n-                insertionCheckInterval = parseIntegerEntry(word);\n+                insertionCheckInterval = parseIntegerEntry(st.sval);\n@@ -440,1 +439,1 @@\n-                    throw excLine(word + \" must be at least 100 ms\");\n+                    throw excLine(st.sval + \" must be at least 100 ms\");\n@@ -444,1 +443,1 @@\n-                resourceCleanerShortInterval = parseIntegerEntry(word);\n+                resourceCleanerShortInterval = parseIntegerEntry(st.sval);\n@@ -446,1 +445,1 @@\n-                    throw excLine(word + \" must be at least 1000 ms\");\n+                    throw excLine(st.sval + \" must be at least 1000 ms\");\n@@ -450,1 +449,1 @@\n-                resourceCleanerLongInterval = parseIntegerEntry(word);\n+                resourceCleanerLongInterval = parseIntegerEntry(st.sval);\n@@ -452,1 +451,1 @@\n-                    throw excLine(word + \" must be at least 1000 ms\");\n+                    throw excLine(st.sval + \" must be at least 1000 ms\");\n@@ -456,1 +455,1 @@\n-                destroyTokenAfterLogout = parseBooleanEntry(word);\n+                destroyTokenAfterLogout = parseBooleanEntry(st.sval);\n@@ -458,1 +457,1 @@\n-                showInfo = parseBooleanEntry(word);\n+                showInfo = parseBooleanEntry(st.sval);\n@@ -460,1 +459,1 @@\n-                keyStoreCompatibilityMode = parseBooleanEntry(word);\n+                keyStoreCompatibilityMode = parseBooleanEntry(st.sval);\n@@ -462,1 +461,1 @@\n-                explicitCancel = parseBooleanEntry(word);\n+                explicitCancel = parseBooleanEntry(st.sval);\n@@ -464,1 +463,1 @@\n-                omitInitialize = parseBooleanEntry(word);\n+                omitInitialize = parseBooleanEntry(st.sval);\n@@ -466,1 +465,1 @@\n-                allowSingleThreadedModules = parseBooleanEntry(word);\n+                allowSingleThreadedModules = parseBooleanEntry(st.sval);\n@@ -468,1 +467,1 @@\n-                functionList = parseStringEntry(word);\n+                functionList = parseStringEntry(st.sval);\n@@ -470,1 +469,1 @@\n-                nssUseSecmod = parseBooleanEntry(word);\n+                nssUseSecmod = parseBooleanEntry(st.sval);\n@@ -472,1 +471,1 @@\n-                nssLibraryDirectory = parseLibrary(word);\n+                nssLibraryDirectory = parseLibrary(st.sval);\n@@ -476,1 +475,1 @@\n-                nssSecmodDirectory = expand(parseStringEntry(word));\n+                nssSecmodDirectory = expand(parseStringEntry(st.sval));\n@@ -480,1 +479,1 @@\n-                nssModule = parseStringEntry(word);\n+                nssModule = parseStringEntry(st.sval);\n@@ -484,1 +483,1 @@\n-                String mode = parseStringEntry(word);\n+                String mode = parseStringEntry(st.sval);\n@@ -497,1 +496,1 @@\n-                nssNetscapeDbWorkaround = parseBooleanEntry(word);\n+                nssNetscapeDbWorkaround = parseBooleanEntry(st.sval);\n@@ -501,1 +500,1 @@\n-                parseNSSArgs(word);\n+                parseNSSArgs(st.sval);\n@@ -503,1 +502,1 @@\n-                nssUseSecmodTrust = parseBooleanEntry(word);\n+                nssUseSecmodTrust = parseBooleanEntry(st.sval);\n@@ -505,1 +504,1 @@\n-                useEcX963Encoding = parseBooleanEntry(word);\n+                useEcX963Encoding = parseBooleanEntry(st.sval);\n@@ -507,1 +506,1 @@\n-                nssOptimizeSpace = parseBooleanEntry(word);\n+                nssOptimizeSpace = parseBooleanEntry(st.sval);\n@@ -510,1 +509,2 @@\n-                        (\"Unknown keyword '\" + word + \"', line \" + st.lineno());\n+                        (\"Unknown keyword '\" + st.sval + \"', line \" +\n+                        st.lineno());\n@@ -512,1 +512,1 @@\n-            parsedKeywords.add(word);\n+            parsedKeywords.add(st.sval);\n","filename":"src\/jdk.crypto.cryptoki\/share\/classes\/sun\/security\/pkcs11\/Config.java","additions":36,"deletions":36,"binary":false,"changes":72,"status":"modified"},{"patch":"@@ -196,1 +196,0 @@\n-        boolean status = false;\n@@ -200,1 +199,1 @@\n-                status = true;\n+                return true;\n@@ -210,1 +209,1 @@\n-        return status;\n+        return false;\n","filename":"src\/jdk.crypto.cryptoki\/share\/classes\/sun\/security\/pkcs11\/P11Util.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"}]}