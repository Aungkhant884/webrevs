{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -261,2 +261,2 @@\n-    synchronized Module implAddEnableNativeAccess() {\n-        enableNativeAccess = true;\n+    Module implAddEnableNativeAccess() {\n+        casEnableNativeAccess(this);\n@@ -277,0 +277,6 @@\n+        return isNativeAccessEnabled(target);\n+    }\n+\n+    private static boolean isNativeAccessEnabled(Module target) {\n+        if (target.enableNativeAccess)\n+            return true;\n@@ -292,14 +298,5 @@\n-        \/\/ racy read of the enable native access flag\n-        boolean isNativeAccessEnabled = target.enableNativeAccess;\n-        if (!isNativeAccessEnabled) {\n-            synchronized (target) {\n-                \/\/ safe read of the enableNativeAccess of the target module\n-                isNativeAccessEnabled = target.enableNativeAccess;\n-\n-                \/\/ check again with the safely read flag\n-                if (isNativeAccessEnabled) {\n-                    \/\/ another thread beat us to it - nothing to do\n-                    return;\n-                } else if (ModuleBootstrap.hasEnableNativeAccessFlag()) {\n-                    throw new IllegalCallerException(\"Illegal native access from: \" + this);\n-                } else {\n+        if (!isNativeAccessEnabled(target)) {\n+            if (ModuleBootstrap.hasEnableNativeAccessFlag()) {\n+                throw new IllegalCallerException(\"Illegal native access from: \" + this);\n+            } else {\n+                if (casEnableNativeAccess(target)) {\n@@ -312,7 +309,4 @@\n-                        WARNING: A restricted method in %s has been called\n-                        WARNING: %s has been called by %s\n-                        WARNING: Use --enable-native-access=%s to avoid a warning for this module\n-                        %n\"\"\", cls, mtd, mod, modflag);\n-\n-                    \/\/ set the flag\n-                    target.enableNativeAccess = true;\n+                            WARNING: A restricted method in %s has been called\n+                            WARNING: %s has been called by %s\n+                            WARNING: Use --enable-native-access=%s to avoid a warning for this module\n+                            %n\"\"\", cls, mtd, mod, modflag);\n@@ -324,0 +318,9 @@\n+    private static boolean casEnableNativeAccess(Module target) {\n+        synchronized (target) {\n+            if (!target.enableNativeAccess) {\n+                target.enableNativeAccess = true;\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n@@ -329,3 +332,1 @@\n-        synchronized (ALL_UNNAMED_MODULE) {\n-            ALL_UNNAMED_MODULE.enableNativeAccess = true;\n-        }\n+        casEnableNativeAccess(ALL_UNNAMED_MODULE);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Module.java","additions":28,"deletions":27,"binary":false,"changes":55,"status":"modified"}]}