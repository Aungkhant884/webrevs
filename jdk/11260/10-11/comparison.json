{"files":[{"patch":"@@ -952,1 +952,1 @@\n-                        ((DirectBuffer) dst).address() - dstaddr + dst.position()) {\n+                    ((DirectBuffer) dst).address() - dstaddr + dst.position()) {\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/GaloisCounterMode.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -828,1 +828,1 @@\n-                public Runnable acquireScopeOrNull(Buffer buffer, boolean async) {\n+                public Runnable acquireSession(Buffer buffer, boolean async) {\n","filename":"src\/java.base\/share\/classes\/java\/nio\/Buffer.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+import sun.nio.ch.DirectBuffer;\n@@ -33,1 +34,0 @@\n-import sun.nio.ch.DirectBuffer;\n","filename":"src\/java.base\/share\/classes\/java\/util\/zip\/CRC32.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -343,1 +343,1 @@\n-                    setDictionaryBuffer(zsRef.address(), ((DirectBuffer)dictionary).address() + position, remaining);\n+                    setDictionaryBuffer(zsRef.address(), ((DirectBuffer) dictionary).address() + position, remaining);\n@@ -594,1 +594,1 @@\n-                                ((DirectBuffer)input).address() + inputPos, inputRem,\n+                                ((DirectBuffer) input).address() + inputPos, inputRem,\n@@ -717,1 +717,1 @@\n-                                ((DirectBuffer)output).address() + outputPos, outputRem,\n+                                ((DirectBuffer) output).address() + outputPos, outputRem,\n@@ -740,2 +740,2 @@\n-                                    ((DirectBuffer)input).address() + inputPos, inputRem,\n-                                    ((DirectBuffer)output).address(), outputRem,\n+                                    ((DirectBuffer) input).address() + inputPos, inputRem,\n+                                    ((DirectBuffer) output).address(), outputRem,\n@@ -750,1 +750,1 @@\n-                                    ((DirectBuffer)input).address() + inputPos, inputRem,\n+                                    ((DirectBuffer) input).address() + inputPos, inputRem,\n@@ -765,1 +765,1 @@\n-                                ((DirectBuffer)output).address()+ outputPos, outputRem,\n+                                ((DirectBuffer) output).address()+ outputPos, outputRem,\n","filename":"src\/java.base\/share\/classes\/java\/util\/zip\/Deflater.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -265,1 +265,1 @@\n-                    setDictionaryBuffer(zsRef.address(), ((DirectBuffer)dictionary).address() + position, remaining);\n+                    setDictionaryBuffer(zsRef.address(), ((DirectBuffer) dictionary).address() + position, remaining);\n@@ -390,1 +390,1 @@\n-                                    ((DirectBuffer)input).address() + inputPos, inputRem,\n+                                    ((DirectBuffer) input).address() + inputPos, inputRem,\n@@ -551,2 +551,2 @@\n-                                            ((DirectBuffer)input).address() + inputPos, inputRem,\n-                                            ((DirectBuffer)output).address() + outputPos, outputRem);\n+                                            ((DirectBuffer) input).address() + inputPos, inputRem,\n+                                            ((DirectBuffer) output).address() + outputPos, outputRem);\n@@ -574,1 +574,1 @@\n-                                        ((DirectBuffer)output).address() + outputPos, outputRem);\n+                                        ((DirectBuffer) output).address() + outputPos, outputRem);\n","filename":"src\/java.base\/share\/classes\/java\/util\/zip\/Inflater.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -98,1 +98,1 @@\n-     * var handler = acquireScopeOrNull(buffer, async);\n+     * var handler = acquireSession(buffer, async);\n@@ -108,1 +108,1 @@\n-    Runnable acquireScopeOrNull(Buffer buffer, boolean async);\n+    Runnable acquireSession(Buffer buffer, boolean async);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/access\/JavaNioAccess.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -478,1 +478,1 @@\n-        return NIO_ACCESS.acquireScopeOrNull(bb, async);\n+        return NIO_ACCESS.acquireSession(bb, async);\n","filename":"src\/java.base\/share\/classes\/sun\/nio\/ch\/IOUtil.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -244,1 +244,1 @@\n-        if (src instanceof sun.nio.ch.DirectBuffer dsrc) {\n+        if (src instanceof sun.nio.ch.DirectBuffer buf) {\n@@ -247,1 +247,1 @@\n-                long address = dsrc.address() + pos;\n+                long address = buf.address() + pos;\n","filename":"src\/java.base\/unix\/classes\/sun\/nio\/fs\/UnixUserDefinedFileAttributeView.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -295,1 +295,1 @@\n-        if (byteBuffer instanceof DirectBuffer == false) {\n+        if (!(byteBuffer instanceof DirectBuffer dByteBuffer)) {\n@@ -313,1 +313,1 @@\n-                token.p11.C_DigestUpdate(session.id(), ((DirectBuffer)byteBuffer).address() + ofs, null, 0, len);\n+                token.p11.C_DigestUpdate(session.id(), dByteBuffer.address() + ofs, null, 0, len);\n","filename":"src\/jdk.crypto.cryptoki\/share\/classes\/sun\/security\/pkcs11\/P11Digest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}