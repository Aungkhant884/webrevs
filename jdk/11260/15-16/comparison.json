{"files":[{"patch":"@@ -1593,1 +1593,1 @@\n-                    var scope = NIO_ACCESS.acquireSession(dst);\n+                    NIO_ACCESS.acquireSession(dst);\n@@ -1598,1 +1598,1 @@\n-                        NIO_ACCESS.releaseSession(dst, scope);\n+                        NIO_ACCESS.releaseSession(dst);\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/GaloisCounterMode.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -828,1 +828,1 @@\n-                public MemorySessionImpl acquireSession(Buffer buffer) {\n+                public void acquireSession(Buffer buffer) {\n@@ -830,2 +830,2 @@\n-                    if (scope == null) {\n-                        return null;\n+                    if (scope != null) {\n+                        scope.acquire0();\n@@ -833,2 +833,0 @@\n-                    scope.acquire0();\n-                    return scope;\n@@ -838,2 +836,1 @@\n-                public void releaseSession(Buffer buffer, MemorySessionImpl scope) {\n-                    assert buffer.session() == scope;\n+                public void releaseSession(Buffer buffer) {\n@@ -841,0 +838,1 @@\n+                        var scope = buffer.session();\n@@ -855,0 +853,5 @@\n+                @Override\n+                public boolean hasSession(Buffer buffer) {\n+                    return buffer.session() != null;\n+                }\n+\n","filename":"src\/java.base\/share\/classes\/java\/nio\/Buffer.java","additions":10,"deletions":7,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -101,1 +101,1 @@\n-            var scope = NIO_ACCESS.acquireSession(buffer);\n+            NIO_ACCESS.acquireSession(buffer);\n@@ -105,1 +105,1 @@\n-                NIO_ACCESS.releaseSession(buffer, scope);\n+                NIO_ACCESS.releaseSession(buffer);\n","filename":"src\/java.base\/share\/classes\/java\/util\/zip\/Adler32.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -100,1 +100,1 @@\n-            var scope = NIO_ACCESS.acquireSession(buffer);\n+            NIO_ACCESS.acquireSession(buffer);\n@@ -104,1 +104,1 @@\n-                NIO_ACCESS.releaseSession(buffer, scope);\n+                NIO_ACCESS.releaseSession(buffer);\n","filename":"src\/java.base\/share\/classes\/java\/util\/zip\/CRC32.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -175,1 +175,1 @@\n-            var scope = NIO_ACCESS.acquireSession(buffer);\n+            NIO_ACCESS.acquireSession(buffer);\n@@ -180,1 +180,1 @@\n-                NIO_ACCESS.releaseSession(buffer, scope);\n+                NIO_ACCESS.releaseSession(buffer);\n","filename":"src\/java.base\/share\/classes\/java\/util\/zip\/CRC32C.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -341,1 +341,1 @@\n-                var scope = NIO_ACCESS.acquireSession(dictionary);\n+                NIO_ACCESS.acquireSession(dictionary);\n@@ -346,1 +346,1 @@\n-                    NIO_ACCESS.releaseSession(dictionary, scope);\n+                    NIO_ACCESS.releaseSession(dictionary);\n@@ -592,1 +592,1 @@\n-                    var scope = NIO_ACCESS.acquireSession(input);\n+                    NIO_ACCESS.acquireSession(input);\n@@ -600,1 +600,1 @@\n-                        NIO_ACCESS.releaseSession(input, scope);\n+                        NIO_ACCESS.releaseSession(input);\n@@ -715,1 +715,1 @@\n-                    var outScope = NIO_ACCESS.acquireSession(output);\n+                    NIO_ACCESS.acquireSession(output);\n@@ -723,1 +723,1 @@\n-                        NIO_ACCESS.releaseSession(output, outScope);\n+                        NIO_ACCESS.releaseSession(output);\n@@ -737,1 +737,1 @@\n-                    var inScope = NIO_ACCESS.acquireSession(input);\n+                    NIO_ACCESS.acquireSession(input);\n@@ -741,1 +741,1 @@\n-                            var outScope = NIO_ACCESS.acquireSession(output);\n+                            NIO_ACCESS.acquireSession(output);\n@@ -749,1 +749,1 @@\n-                                NIO_ACCESS.releaseSession(output, outScope);\n+                                NIO_ACCESS.releaseSession(output);\n@@ -760,1 +760,1 @@\n-                        NIO_ACCESS.releaseSession(input, inScope);\n+                        NIO_ACCESS.releaseSession(input);\n@@ -766,1 +766,1 @@\n-                        var outScope = NIO_ACCESS.acquireSession(output);\n+                        NIO_ACCESS.acquireSession(output);\n@@ -774,1 +774,1 @@\n-                            NIO_ACCESS.releaseSession(output, outScope);\n+                            NIO_ACCESS.releaseSession(output);\n","filename":"src\/java.base\/share\/classes\/java\/util\/zip\/Deflater.java","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -263,1 +263,1 @@\n-                var scope = NIO_ACCESS.acquireSession(dictionary);\n+                NIO_ACCESS.acquireSession(dictionary);\n@@ -268,1 +268,1 @@\n-                    NIO_ACCESS.releaseSession(dictionary, scope);\n+                    NIO_ACCESS.releaseSession(dictionary);\n@@ -388,1 +388,1 @@\n-                            var inScope = NIO_ACCESS.acquireSession(input);\n+                            NIO_ACCESS.acquireSession(input);\n@@ -395,1 +395,1 @@\n-                                NIO_ACCESS.releaseSession(input, inScope);\n+                                NIO_ACCESS.releaseSession(input);\n@@ -523,1 +523,1 @@\n-                            var outScope = NIO_ACCESS.acquireSession(output);\n+                            NIO_ACCESS.acquireSession(output);\n@@ -530,1 +530,1 @@\n-                                NIO_ACCESS.releaseSession(output, outScope);\n+                                NIO_ACCESS.releaseSession(output);\n@@ -548,1 +548,1 @@\n-                            var inScope = NIO_ACCESS.acquireSession(input);\n+                            NIO_ACCESS.acquireSession(input);\n@@ -552,1 +552,1 @@\n-                                    var outScope = NIO_ACCESS.acquireSession(output);\n+                                    NIO_ACCESS.acquireSession(output);\n@@ -559,1 +559,1 @@\n-                                        NIO_ACCESS.releaseSession(output, outScope);\n+                                        NIO_ACCESS.releaseSession(output);\n@@ -569,1 +569,1 @@\n-                                NIO_ACCESS.releaseSession(input, inScope);\n+                                NIO_ACCESS.releaseSession(input);\n@@ -575,1 +575,1 @@\n-                                var outScope = NIO_ACCESS.acquireSession(output);\n+                                NIO_ACCESS.acquireSession(output);\n@@ -582,1 +582,1 @@\n-                                    NIO_ACCESS.releaseSession(output, outScope);\n+                                    NIO_ACCESS.releaseSession(output);\n","filename":"src\/java.base\/share\/classes\/java\/util\/zip\/Inflater.java","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-import jdk.internal.foreign.MemorySessionImpl;\n@@ -92,1 +91,0 @@\n-     * The buffers scope is returned if it has one, otherwise {@code null} is returned.\n@@ -94,1 +92,1 @@\n-     * var guard = acquireSession(buffer);\n+     * acquireSession(buffer);\n@@ -98,1 +96,1 @@\n-     *     releaseSession(buffer, guard);\n+     *     releaseSession(buffer);\n@@ -102,1 +100,1 @@\n-     * @see #releaseSession(Buffer, MemorySessionImpl)\n+     * @see #releaseSession(Buffer)\n@@ -104,1 +102,1 @@\n-    MemorySessionImpl acquireSession(Buffer buffer);\n+    void acquireSession(Buffer buffer);\n@@ -106,1 +104,1 @@\n-    void releaseSession(Buffer buffer, MemorySessionImpl scope);\n+    void releaseSession(Buffer buffer);\n@@ -110,0 +108,2 @@\n+    boolean hasSession(Buffer buffer);\n+\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/access\/JavaNioAccess.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -787,1 +787,1 @@\n-        var scope = NIO_ACCESS.acquireSession(bb);\n+        NIO_ACCESS.acquireSession(bb);\n@@ -797,1 +797,1 @@\n-            NIO_ACCESS.releaseSession(bb, scope);\n+            NIO_ACCESS.releaseSession(bb);\n@@ -942,1 +942,1 @@\n-        var scope = NIO_ACCESS.acquireSession(bb);\n+        NIO_ACCESS.acquireSession(bb);\n@@ -952,1 +952,1 @@\n-            NIO_ACCESS.releaseSession(bb, scope);\n+            NIO_ACCESS.releaseSession(bb);\n","filename":"src\/java.base\/share\/classes\/sun\/nio\/ch\/DatagramChannelImpl.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-public class IOUtil {\n+public final class IOUtil {\n@@ -132,1 +132,1 @@\n-        var handle = acquireScope(bb, async);\n+        acquireScope(bb, async);\n@@ -140,1 +140,1 @@\n-            releaseScope(bb, handle);\n+            releaseScope(bb);\n@@ -185,3 +185,3 @@\n-                var h = acquireScope(buf, async);\n-                if (h != null) {\n-                    handleReleasers = LinkedRunnable.of(Releaser.of(buf, h), handleReleasers);\n+                acquireScope(buf, async);\n+                if (NIO_ACCESS.hasSession(buf)) {\n+                    handleReleasers = LinkedRunnable.of(Releaser.of(buf), handleReleasers);\n@@ -335,1 +335,1 @@\n-        var scope = acquireScope(bb, async);\n+        acquireScope(bb, async);\n@@ -343,1 +343,1 @@\n-            releaseScope(bb, scope);\n+            releaseScope(bb);\n@@ -397,3 +397,3 @@\n-                var h = acquireScope(buf, async);\n-                if (h != null) {\n-                    handleReleasers = LinkedRunnable.of(Releaser.of(buf, h), handleReleasers);\n+                acquireScope(buf, async);\n+                if (NIO_ACCESS.hasSession(buf)) {\n+                    handleReleasers = LinkedRunnable.of(Releaser.of(buf), handleReleasers);\n@@ -478,1 +478,1 @@\n-    static MemorySessionImpl acquireScope(ByteBuffer bb, boolean async) {\n+    static void acquireScope(ByteBuffer bb, boolean async) {\n@@ -482,1 +482,1 @@\n-        return NIO_ACCESS.acquireSession(bb);\n+        NIO_ACCESS.acquireSession(bb);\n@@ -485,1 +485,1 @@\n-    private static void releaseScope(ByteBuffer bb, MemorySessionImpl session) {\n+    private static void releaseScope(ByteBuffer bb) {\n@@ -487,1 +487,1 @@\n-            NIO_ACCESS.releaseSession(bb, session);\n+            NIO_ACCESS.releaseSession(bb);\n@@ -500,1 +500,2 @@\n-            return IOUtil.Releaser.ofNullable(buf, IOUtil.acquireScope(buf, true));\n+            IOUtil.acquireScope(buf, true);\n+            return IOUtil.Releaser.of(buf);\n@@ -505,4 +506,2 @@\n-                var h = IOUtil.acquireScope(b, true);\n-                if (h != null) {\n-                    handleReleasers = IOUtil.LinkedRunnable.of(IOUtil.Releaser.of(b, h), handleReleasers);\n-                }\n+                IOUtil.acquireScope(b, true);\n+                handleReleasers = IOUtil.LinkedRunnable.of(IOUtil.Releaser.of(b), handleReleasers);\n@@ -539,1 +538,1 @@\n-    record Releaser(ByteBuffer bb, MemorySessionImpl session) implements Runnable {\n+    record Releaser(ByteBuffer bb) implements Runnable {\n@@ -542,1 +541,0 @@\n-            Objects.requireNonNull(session);\n@@ -547,1 +545,1 @@\n-            releaseScope(bb, session);\n+            releaseScope(bb);\n@@ -550,2 +548,4 @@\n-        static Runnable of(ByteBuffer bb, MemorySessionImpl session) {\n-            return new Releaser(bb, session);\n+        static Runnable of(ByteBuffer bb) {\n+            return NIO_ACCESS.hasSession(bb)\n+                    ? new Releaser(bb)\n+                    : () -> {};\n@@ -554,5 +554,0 @@\n-        static Runnable ofNullable(ByteBuffer bb, MemorySessionImpl session) {\n-            return session == null\n-                    ? () -> {}\n-                    : new Releaser(bb, session);\n-        }\n","filename":"src\/java.base\/share\/classes\/sun\/nio\/ch\/IOUtil.java","additions":25,"deletions":30,"binary":false,"changes":55,"status":"modified"},{"patch":"@@ -182,1 +182,1 @@\n-            var scope = NIO_ACCESS.acquireSession(dst);\n+            NIO_ACCESS.acquireSession(dst);\n@@ -189,1 +189,1 @@\n-                NIO_ACCESS.releaseSession(dst, scope);\n+                NIO_ACCESS.releaseSession(dst);\n@@ -245,1 +245,1 @@\n-            var scope = NIO_ACCESS.acquireSession(src);\n+            NIO_ACCESS.acquireSession(src);\n@@ -252,1 +252,1 @@\n-                NIO_ACCESS.releaseSession(src, scope);\n+                NIO_ACCESS.releaseSession(src);\n","filename":"src\/java.base\/unix\/classes\/sun\/nio\/fs\/UnixUserDefinedFileAttributeView.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -741,1 +741,1 @@\n-        var inScope = NIO_ACCESS.acquireSession(inBuffer);\n+        NIO_ACCESS.acquireSession(inBuffer);\n@@ -743,1 +743,1 @@\n-            var outScope = NIO_ACCESS.acquireSession(outBuffer);\n+            NIO_ACCESS.acquireSession(outBuffer);\n@@ -825,1 +825,1 @@\n-                NIO_ACCESS.releaseSession(outBuffer, outScope);\n+                NIO_ACCESS.releaseSession(outBuffer);\n@@ -828,1 +828,1 @@\n-            NIO_ACCESS.releaseSession(inBuffer, inScope);\n+            NIO_ACCESS.releaseSession(inBuffer);\n","filename":"src\/jdk.crypto.cryptoki\/share\/classes\/sun\/security\/pkcs11\/P11AEADCipher.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -694,1 +694,1 @@\n-        var inScope = NIO_ACCESS.acquireSession(inBuffer);\n+        NIO_ACCESS.acquireSession(inBuffer);\n@@ -696,1 +696,1 @@\n-            var outScope = NIO_ACCESS.acquireSession(outBuffer);\n+            NIO_ACCESS.acquireSession(outBuffer);\n@@ -807,1 +807,1 @@\n-                NIO_ACCESS.releaseSession(outBuffer, outScope);\n+                NIO_ACCESS.releaseSession(outBuffer);\n@@ -810,1 +810,1 @@\n-            NIO_ACCESS.releaseSession(inBuffer, inScope);\n+            NIO_ACCESS.releaseSession(inBuffer);\n@@ -901,1 +901,1 @@\n-        var scope = NIO_ACCESS.acquireSession(outBuffer);\n+        NIO_ACCESS.acquireSession(outBuffer);\n@@ -998,1 +998,1 @@\n-            NIO_ACCESS.releaseSession(outBuffer, scope);\n+            NIO_ACCESS.releaseSession(outBuffer);\n","filename":"src\/jdk.crypto.cryptoki\/share\/classes\/sun\/security\/pkcs11\/P11Cipher.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -311,1 +311,1 @@\n-            var scope = NIO_ACCESS.acquireSession(byteBuffer);\n+            NIO_ACCESS.acquireSession(byteBuffer);\n@@ -315,1 +315,1 @@\n-                NIO_ACCESS.releaseSession(byteBuffer, scope);\n+                NIO_ACCESS.releaseSession(byteBuffer);\n","filename":"src\/jdk.crypto.cryptoki\/share\/classes\/sun\/security\/pkcs11\/P11Digest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -562,1 +562,1 @@\n-        var inScope = NIO_ACCESS.acquireSession(inBuffer);\n+        NIO_ACCESS.acquireSession(inBuffer);\n@@ -564,1 +564,1 @@\n-            var outScope = NIO_ACCESS.acquireSession(outBuffer);\n+            NIO_ACCESS.acquireSession(outBuffer);\n@@ -640,1 +640,1 @@\n-                NIO_ACCESS.releaseSession(outBuffer, outScope);\n+                NIO_ACCESS.releaseSession(outBuffer);\n@@ -643,1 +643,1 @@\n-            NIO_ACCESS.releaseSession(inBuffer, inScope);\n+            NIO_ACCESS.releaseSession(inBuffer);\n","filename":"src\/jdk.crypto.cryptoki\/share\/classes\/sun\/security\/pkcs11\/P11KeyWrapCipher.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -277,1 +277,1 @@\n-            var scope = NIO_ACCESS.acquireSession(byteBuffer);\n+            NIO_ACCESS.acquireSession(byteBuffer);\n@@ -281,1 +281,1 @@\n-                NIO_ACCESS.releaseSession(byteBuffer, scope);\n+                NIO_ACCESS.releaseSession(byteBuffer);\n","filename":"src\/jdk.crypto.cryptoki\/share\/classes\/sun\/security\/pkcs11\/P11Mac.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -627,1 +627,1 @@\n-            var scope = NIO_ACCESS.acquireSession(byteBuffer);\n+            NIO_ACCESS.acquireSession(byteBuffer);\n@@ -644,1 +644,1 @@\n-                NIO_ACCESS.releaseSession(byteBuffer, scope);\n+                NIO_ACCESS.releaseSession(byteBuffer);\n","filename":"src\/jdk.crypto.cryptoki\/share\/classes\/sun\/security\/pkcs11\/P11PSSSignature.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -594,1 +594,1 @@\n-            var scope = NIO_ACCESS.acquireSession(byteBuffer);\n+            NIO_ACCESS.acquireSession(byteBuffer);\n@@ -609,1 +609,1 @@\n-                NIO_ACCESS.releaseSession(byteBuffer, scope);\n+                NIO_ACCESS.releaseSession(byteBuffer);\n","filename":"src\/jdk.crypto.cryptoki\/share\/classes\/sun\/security\/pkcs11\/P11Signature.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -847,1 +847,1 @@\n-        var scope = NIO_ACCESS.acquireSession(bb);\n+        NIO_ACCESS.acquireSession(bb);\n@@ -855,1 +855,1 @@\n-            NIO_ACCESS.releaseSession(bb, scope);\n+            NIO_ACCESS.releaseSession(bb);\n@@ -1041,1 +1041,1 @@\n-        var scope = NIO_ACCESS.acquireSession(bb);\n+        NIO_ACCESS.acquireSession(bb);\n@@ -1049,1 +1049,1 @@\n-            NIO_ACCESS.releaseSession(bb, scope);\n+            NIO_ACCESS.releaseSession(bb);\n","filename":"src\/jdk.sctp\/unix\/classes\/sun\/nio\/ch\/sctp\/SctpChannelImpl.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -590,1 +590,1 @@\n-        var scope = NIO_ACCESS.acquireSession(bb);\n+        NIO_ACCESS.acquireSession(bb);\n@@ -597,1 +597,1 @@\n-            NIO_ACCESS.releaseSession(bb, scope);\n+            NIO_ACCESS.releaseSession(bb);\n@@ -920,1 +920,1 @@\n-        var scope = NIO_ACCESS.acquireSession(bb);\n+        NIO_ACCESS.acquireSession(bb);\n@@ -928,1 +928,1 @@\n-            NIO_ACCESS.releaseSession(bb, scope);\n+            NIO_ACCESS.releaseSession(bb);\n","filename":"src\/jdk.sctp\/unix\/classes\/sun\/nio\/ch\/sctp\/SctpMultiChannelImpl.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}