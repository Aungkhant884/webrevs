{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,1 +33,1 @@\n- * @summary Test handshake timeout for single target.\n+ * @summary Test handshake timeout.\n@@ -54,1 +54,3 @@\n-                    \"-Djava.library.path=\" + Utils.TEST_NATIVE_PATH,\n+                    \"-Xbootclasspath\/a:.\",\n+                    \"-XX:+UnlockDiagnosticVMOptions\",\n+                    \"-XX:+WhiteBoxAPI\",\n@@ -61,2 +63,1 @@\n-                    \"-XX:+UnlockDiagnosticVMOptions\",\n-                    \"-XX:HandshakeTimeout=1\",\n+                    \"-XX:HandshakeTimeout=50\",\n@@ -68,0 +69,2 @@\n+        \/\/ In rare cases the target wakes up and performs the handshake at the same time as we timeout.\n+        \/\/ Therefore it's not certain the timeout will find any thread.\n@@ -81,1 +84,0 @@\n-            int i = 0;\n@@ -83,1 +85,3 @@\n-                i++;\n+                \/\/ If there is a safepoint this thread might still beable to perform\n+                \/\/ it's handshake in time. Therefore we loop util failure.\n+                WhiteBox.getWhiteBox().waitUnsafe(100);\n","filename":"test\/hotspot\/jtreg\/runtime\/handshake\/HandshakeTimeoutTest.java","additions":11,"deletions":7,"binary":false,"changes":18,"status":"modified"}]}