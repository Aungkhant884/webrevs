{"files":[{"patch":"@@ -459,1 +459,0 @@\n-\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/DirectMethodHandleAccessor.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -428,1 +428,1 @@\n-        var builder = new InvokerBuilder(cn, VarHandle.class);\n+        var builder = new ReflectionInvokerBuilder(cn, VarHandle.class);\n@@ -434,1 +434,1 @@\n-        var builder = new InvokerBuilder(cn, MethodHandle.class);\n+        var builder = new ReflectionInvokerBuilder(cn, MethodHandle.class);\n@@ -440,1 +440,1 @@\n-        var builder = new InvokerBuilder(cn, MethodHandle.class);\n+        var builder = new ReflectionInvokerBuilder(cn, MethodHandle.class);\n@@ -516,1 +516,0 @@\n-\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/MethodHandleAccessorFactory.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -44,4 +44,5 @@\n- * InvokerBuilder generates the bytecode for a hidden class that implements\n- * MHInvoker or VHInvoker and it uses condy to load a MethodHandle\n- * or VarHandle from the class data.\n- * \n+ * ReflectionInvokerBuilder generates the bytecode for a hidden class that\n+ * implements MHInvoker or VHInvoker for fast invocation. It loads\n+ * a MethodHandle or VarHandle from the class data as a constant for\n+ * better JIT optimization.\n+ *\n@@ -50,1 +51,1 @@\n-class InvokerBuilder extends ClassWriter {\n+class ReflectionInvokerBuilder extends ClassWriter {\n@@ -68,1 +69,1 @@\n-    InvokerBuilder(String classname, Class<?> classDataType) {\n+    ReflectionInvokerBuilder(String classname, Class<?> classDataType) {\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/ReflectionInvokerBuilder.java","additions":7,"deletions":6,"binary":false,"changes":13,"previous_filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/InvokerBuilder.java","status":"renamed"}]}