{"files":[{"patch":"@@ -31,1 +31,1 @@\n- * Utility methods used by DirectMethodHandleAccessorImpl and DirectConstructorImpl\n+ * Utility methods used by DirectMethodHandleAccessor and DirectConstructorImpl\n@@ -65,4 +65,4 @@\n-            if ((accessorType == DirectMethodHandleAccessorImpl.class\n-                    && cname.startsWith(DirectConstructorHandleAccessorImpl.class.getName()))\n-                || (accessorType == DirectConstructorHandleAccessorImpl.class &&\n-                        cname.startsWith(DirectMethodHandleAccessorImpl.class.getName()))) {\n+            if ((accessorType == DirectMethodHandleAccessor.class\n+                    && cname.startsWith(DirectConstructorHandleAccessor.class.getName()))\n+                || (accessorType == DirectConstructorHandleAccessor.class &&\n+                        cname.startsWith(DirectMethodHandleAccessor.class.getName()))) {\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/AccessorUtils.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-class DirectConstructorHandleAccessorImpl extends ConstructorAccessorImpl {\n+class DirectConstructorHandleAccessor extends ConstructorAccessorImpl {\n@@ -46,1 +46,1 @@\n-            return new DirectConstructorHandleAccessorImpl(ctor, target, mhInvoker);\n+            return new DirectConstructorHandleAccessor(ctor, target, mhInvoker);\n@@ -62,1 +62,1 @@\n-    DirectConstructorHandleAccessorImpl(Constructor<?> ctor, MethodHandle target, MHInvoker invoker) {\n+    DirectConstructorHandleAccessor(Constructor<?> ctor, MethodHandle target, MHInvoker invoker) {\n@@ -99,1 +99,1 @@\n-        return AccessorUtils.isIllegalArgument(DirectConstructorHandleAccessorImpl.class, ex);\n+        return AccessorUtils.isIllegalArgument(DirectConstructorHandleAccessor.class, ex);\n@@ -115,1 +115,1 @@\n-    static class AdaptiveConstructorHandleAccessor extends DirectConstructorHandleAccessorImpl {\n+    static class AdaptiveConstructorHandleAccessor extends DirectConstructorHandleAccessor {\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/DirectConstructorHandleAccessor.java","additions":5,"deletions":5,"binary":false,"changes":10,"previous_filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/DirectConstructorHandleAccessorImpl.java","status":"renamed"},{"patch":"@@ -47,1 +47,1 @@\n-class DirectMethodHandleAccessorImpl extends MethodAccessorImpl {\n+class DirectMethodHandleAccessor extends MethodAccessorImpl {\n@@ -57,1 +57,1 @@\n-            return new DirectMethodHandleAccessorImpl(method, target, mhInvoker, false);\n+            return new DirectMethodHandleAccessor(method, target, mhInvoker, false);\n@@ -102,1 +102,1 @@\n-    DirectMethodHandleAccessorImpl(Method method, MethodHandle target, MHInvoker invoker, boolean hasCallerParameter) {\n+    DirectMethodHandleAccessor(Method method, MethodHandle target, MHInvoker invoker, boolean hasCallerParameter) {\n@@ -111,1 +111,1 @@\n-    DirectMethodHandleAccessorImpl(Method method, MethodHandle target, boolean hasCallerParameter) {\n+    DirectMethodHandleAccessor(Method method, MethodHandle target, boolean hasCallerParameter) {\n@@ -201,1 +201,1 @@\n-        return AccessorUtils.isIllegalArgument(DirectMethodHandleAccessorImpl.class, ex);\n+        return AccessorUtils.isIllegalArgument(DirectMethodHandleAccessor.class, ex);\n@@ -211,1 +211,1 @@\n-    static class AdaptiveMethodHandleAccessor extends DirectMethodHandleAccessorImpl {\n+    static class AdaptiveMethodHandleAccessor extends DirectMethodHandleAccessor {\n@@ -278,1 +278,1 @@\n-    static class CallerSensitiveWithInvoker extends DirectMethodHandleAccessorImpl {\n+    static class CallerSensitiveWithInvoker extends DirectMethodHandleAccessor {\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/DirectMethodHandleAccessor.java","additions":7,"deletions":7,"binary":false,"changes":14,"previous_filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/DirectMethodHandleAccessorImpl.java","status":"renamed"},{"patch":"@@ -74,1 +74,1 @@\n-            return DirectMethodHandleAccessorImpl.nativeAccessor(method, callerSensitive);\n+            return DirectMethodHandleAccessor.nativeAccessor(method, callerSensitive);\n@@ -86,1 +86,1 @@\n-                    return DirectMethodHandleAccessorImpl.callerSensitiveAdapter(method, dmh);\n+                    return DirectMethodHandleAccessor.callerSensitiveAdapter(method, dmh);\n@@ -91,1 +91,1 @@\n-                return DirectMethodHandleAccessorImpl.callerSensitiveMethodAccessor(method, dmh);\n+                return DirectMethodHandleAccessor.callerSensitiveMethodAccessor(method, dmh);\n@@ -93,1 +93,1 @@\n-                return DirectMethodHandleAccessorImpl.methodAccessor(method, dmh);\n+                return DirectMethodHandleAccessor.methodAccessor(method, dmh);\n@@ -110,1 +110,1 @@\n-            return DirectConstructorHandleAccessorImpl.nativeAccessor(ctor);\n+            return DirectConstructorHandleAccessor.nativeAccessor(ctor);\n@@ -128,1 +128,1 @@\n-            return DirectConstructorHandleAccessorImpl.constructorAccessor(ctor, target);\n+            return DirectConstructorHandleAccessor.constructorAccessor(ctor, target);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/MethodHandleAccessorFactory.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"}]}