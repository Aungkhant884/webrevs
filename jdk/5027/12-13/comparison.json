{"files":[{"patch":"@@ -47,1 +47,1 @@\n-     * Creates a MethodAccessorImpl for a non-native and non-caller-sensitive method.\n+     * Creates a MethodAccessorImpl for a non-native method.\n@@ -50,1 +50,1 @@\n-        assert !Modifier.isNative(method.getModifiers()) && !Reflection.isCallerSensitive(method);\n+        assert !Modifier.isNative(method.getModifiers());\n@@ -55,8 +55,0 @@\n-    \/**\n-     * Creates a MethodAccessorImpl for a caller-sensitive method.\n-     *\/\n-    static MethodAccessorImpl callerSensitiveMethodAccessor(Method method, MethodHandle dmh) {\n-        assert Reflection.isCallerSensitive(method);\n-        return new DirectMethodHandleAccessor(method, dmh, false);\n-    }\n-\n@@ -92,1 +84,2 @@\n-    private final int paramFlags;\n+    private final int paramCount;\n+    private final int flags;\n@@ -97,4 +90,3 @@\n-        this.paramFlags = (method.getParameterCount() & PARAM_COUNT_MASK) |\n-                          (hasCallerParameter ? HAS_CALLER_PARAM_BIT : 0) |\n-                          (Modifier.isStatic(method.getModifiers()) ? IS_STATIC_BIT : 0) |\n-                          NONZERO_BIT;\n+        this.paramCount = method.getParameterCount();\n+        this.flags = (hasCallerParameter ? HAS_CALLER_PARAM_BIT : 0) |\n+                     (Modifier.isStatic(method.getModifiers()) ? IS_STATIC_BIT : 0);\n@@ -107,1 +99,1 @@\n-        if ((paramFlags & IS_STATIC_BIT) == 0) {\n+        if (!isStatic()) {\n@@ -110,1 +102,1 @@\n-        checkArgumentCount(paramFlags & PARAM_COUNT_MASK, args);\n+        checkArgumentCount(paramCount, args);\n@@ -134,1 +126,1 @@\n-        if ((paramFlags & IS_STATIC_BIT) == 0) {\n+        if (!isStatic()) {\n@@ -137,1 +129,1 @@\n-        checkArgumentCount(paramFlags & PARAM_COUNT_MASK, args);\n+        checkArgumentCount(paramCount, args);\n@@ -161,1 +153,1 @@\n-        return switch (paramFlags & PARAM_COUNT_MASK) {\n+        return switch (paramCount) {\n@@ -173,1 +165,1 @@\n-        if ((paramFlags & HAS_CALLER_PARAM_BIT) > 0) {\n+        if (hasCallerParameter()) {\n@@ -175,1 +167,1 @@\n-            return switch (paramFlags & PARAM_COUNT_MASK) {\n+            return switch (paramCount) {\n@@ -195,0 +187,8 @@\n+    private boolean isStatic() {\n+        return (flags & IS_STATIC_BIT) == IS_STATIC_BIT;\n+    }\n+\n+    private boolean hasCallerParameter() {\n+        return (flags & HAS_CALLER_PARAM_BIT) == HAS_CALLER_PARAM_BIT;\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/DirectMethodHandleAccessor.java","additions":22,"deletions":22,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -81,5 +81,1 @@\n-            if (callerSensitive) {\n-                return DirectMethodHandleAccessor.callerSensitiveMethodAccessor(method, dmh);\n-            } else {\n-                return DirectMethodHandleAccessor.methodAccessor(method, dmh);\n-            }\n+            return DirectMethodHandleAccessor.methodAccessor(method, dmh);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/MethodHandleAccessorFactory.java","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"}]}