[{"commit":{"message":"Separate paramFlgas into paramCount and flags fields"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/DirectMethodHandleAccessor.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/MethodHandleAccessorFactory.java"}],"sha":"c1bb48febb4f9f05ec8f67edd01193eb59dfa62c"},{"commit":{"message":"Minor cleanup.  Improve javadoc in CallerSensitiveAdapter"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/CallerSensitiveAdapter.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/ReflectionFactory.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/reflect\/ReflectionSpeedBenchmark.java"}],"sha":"c25d651a3f251a78e3c77f3e0b3c027dee3a6224"},{"commit":{"message":"Fix left-over assignment"},"files":[{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/reflect\/ReflectionSpeedBenchmark.java"}],"sha":"86d34f482c257053d6315e2fa87c1634a2c65def"},{"commit":{"message":"Remove duplicated microbenchmarks"},"files":[],"sha":"49029aa9ce6d8a91f325e02e638b7accd16695be"},{"commit":{"message":"Avoid pitfall with unwanted inlining in some cases.  Also remove boxing\/unboxing to focus on the invocation cost"},"files":[{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/reflect\/ReflectionSpeedBenchmark.java"}],"sha":"8cb8071d9a085349139215c8472730193650b247"},{"commit":{"message":"Add java.lang.reflect and jdk.internal.reflect to trusted non-static final fields packages"},"files":[{"filename":"src\/hotspot\/share\/ci\/ciField.cpp"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/Constructor.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/Field.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/Method.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/DelegatingConstructorAccessorImpl.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/DelegatingMethodAccessorImpl.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/DirectConstructorHandleAccessor.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/DirectMethodHandleAccessor.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/FieldAccessorImpl.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/MethodHandleFieldAccessorImpl.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/UnsafeFieldAccessorImpl.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/UnsafeStaticFieldAccessorImpl.java"}],"sha":"9c28df4cd7de48830749613227fc30e8c71c91d3"},{"commit":{"message":"Merge"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MethodHandles.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/Constructor.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/FieldAccessorImpl.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/ReflectionFactory.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/UnsafeFieldAccessorImpl.java"},{"filename":"test\/hotspot\/jtreg\/ProblemList.txt"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/reflect\/ReflectionColdstartBenchmark.java"}],"sha":"841f3b173e230310baf357826fd3ed632b4d19f5"},{"commit":{"message":"ensure class initialized before field acces"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/MethodHandleAccessorFactory.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/Field\/TestFieldReflectValueOf.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/classInitialization\/ExceptionInClassInitialization.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/classInitialization\/Initializer.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/classInitialization\/Test.java"}],"sha":"868a1c53329d717aba31aff4b923a512d21cd879"},{"commit":{"message":"Make MethodAccessor non-volatile.  Remove MHInvoker\/VHInvoker."},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MethodHandleImpl.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/Constructor.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/Method.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/access\/JavaLangInvokeAccess.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/AccessorUtils.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/DelegatingConstructorAccessorImpl.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/DelegatingMethodAccessorImpl.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/DirectConstructorHandleAccessor.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/DirectMethodHandleAccessor.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/MethodHandleAccessorFactory.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/MethodHandleBooleanFieldAccessorImpl.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/MethodHandleByteFieldAccessorImpl.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/MethodHandleCharacterFieldAccessorImpl.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/MethodHandleDoubleFieldAccessorImpl.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/MethodHandleFieldAccessorImpl.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/MethodHandleFloatFieldAccessorImpl.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/MethodHandleIntegerFieldAccessorImpl.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/MethodHandleLongFieldAccessorImpl.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/MethodHandleObjectFieldAccessorImpl.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/MethodHandleShortFieldAccessorImpl.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/NativeConstructorAccessorImpl.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/NativeMethodAccessorImpl.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/ReflectionFactory.java"},{"filename":"test\/jdk\/java\/lang\/StackWalker\/VerifyStackTrace.java"}],"sha":"1e68d0041d9491f156454c52dd28794803862598"},{"commit":{"message":"Merge"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/ClassLoader.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MethodHandleImpl.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MethodHandles.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/misc\/VM.java"},{"filename":"test\/hotspot\/jtreg\/ProblemList.txt"}],"sha":"b76aea153df7625ec91afc0ba7c7a176ab7ff539"},{"commit":{"message":"minor cleanup and more test case."},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MethodHandles.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/MethodHandleAccessorFactory.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/ReflectionFactory.java"},{"filename":"test\/jdk\/java\/lang\/StackWalker\/DumpStackTest.java"},{"filename":"test\/jdk\/java\/lang\/StackWalker\/VerifyStackTrace.java"},{"filename":"test\/jdk\/java\/lang\/invoke\/callerSensitive\/csm\/jdk\/test\/MethodInvokeTest.java"},{"filename":"test\/jdk\/java\/lang\/invoke\/callerSensitive\/src\/java.base\/java\/util\/CSM.java"},{"filename":"test\/jdk\/java\/lang\/invoke\/lookup\/java.base\/java\/lang\/LookupTest.java"}],"sha":"32e7f3404814c20be23994fc963b3b18d8febad1"},{"commit":{"message":"Rename InvokerBuilder to ReflectionInvokerBuilder"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/DirectMethodHandleAccessor.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/MethodHandleAccessorFactory.java"}],"sha":"68bb9efe446585db93d0cbfba49f95863481d98d"},{"commit":{"message":"Fix NativeAccessor.c build issue for the renamed classes"},"files":[{"filename":"src\/java.base\/share\/native\/libjava\/NativeAccessors.c"}],"sha":"df6fb0a2f33edf529eef85e0d82fe095acd3b1cc"},{"commit":{"message":"Shorten the class name"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/AccessorUtils.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/DirectConstructorHandleAccessor.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/DirectMethodHandleAccessor.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/MethodHandleAccessorFactory.java"}],"sha":"475a1be6bb43d30f8df0cb85ab46ae2494cfccf5"},{"commit":{"message":"Rename the accessor classes to make it explicit for method handles"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/AccessorUtils.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/MethodHandleAccessorFactory.java"},{"filename":"src\/java.base\/share\/native\/libjava\/NativeAccessors.c"},{"filename":"test\/jdk\/java\/lang\/StackWalker\/DumpStackTest.java"},{"filename":"test\/jdk\/java\/lang\/StackWalker\/VerifyStackTrace.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/callerCache\/CustomLoaderTest.java"}],"sha":"ba099fb4c9a40bf321569222e4230d89a9fe046d"},{"commit":{"message":"Add a new test for testing methods whose parameter types and return type not visible to the caller"},"files":[{"filename":"test\/jdk\/java\/lang\/reflect\/callerCache\/CustomLoaderTest.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/callerCache\/ReflectTest.java"}],"sha":"dccfdb48c24bd4af370fe62218d138506f85057d"},{"commit":{"message":"Move the handling of native accessor to the factory method for method\/constructor accessor"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/MethodHandleAccessorFactory.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/ReflectionFactory.java"}],"sha":"7c722b1fd6ecf9a7419fe2302bcfeebc9b4cf767"},{"commit":{"message":"DirectConstructorAccessorImpl should take the MHInvoker parameter"},"files":[],"sha":"59a8ba458023e37c29c9e9b41f759e62cd40db7d"},{"commit":{"message":"Remove separate accessor for static vs instance method\n\nThere is no effective difference when using MethodHandle::dropArgument for static method.   Removing Static*Accessor and Instance*Accessor simplifies the implementation."},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/AccessorUtils.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/MethodHandleAccessorFactory.java"},{"filename":"test\/jdk\/java\/lang\/StackWalker\/DumpStackTest.java"},{"filename":"test\/jdk\/java\/lang\/StackWalker\/VerifyStackTrace.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/reflect\/ReflectionColdstartBenchmark.java"}],"sha":"cff856f9df89293cbc8f2f1e977148cd6ece4f85"},{"commit":{"message":"minor test cleanup"},"files":[{"filename":"test\/hotspot\/jtreg\/ProblemList.txt"},{"filename":"test\/jdk\/jdk\/jfr\/api\/consumer\/TestHiddenMethod.java"}],"sha":"b73a6faf1085a12979855fc79f8d6a2aeed9012d"},{"commit":{"message":"fix whitespace"},"files":[],"sha":"c575c3dbe036a5bd80225ba6a607ac3f8d4f548b"},{"commit":{"message":"Merge branch 'master' of https:\/\/github.com\/openjdk\/jdk into reimplement-method-invoke"},"files":[],"sha":"7a89ac0bcd6aeb8ee14b638519416c343e6cd8e6"},{"commit":{"message":"Merge branch 'master' of https:\/\/github.com\/openjdk\/jdk into reimplement-method-invoke"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/Class.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MethodHandles.java"},{"filename":"test\/hotspot\/jtreg\/ProblemList.txt"}],"sha":"f0b626203e8da735fc39efdd2d913f73caf793e9"},{"commit":{"message":"Merge"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/InnerClassLambdaMetafactory.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/misc\/VM.java"},{"filename":"test\/hotspot\/jtreg\/ProblemList.txt"}],"sha":"37c6de54b9d464aba93c5eddd2c1fe183c3af10c"},{"commit":{"message":"clean up test"},"files":[{"filename":"test\/jdk\/java\/lang\/reflect\/MethodHandleAccessorsTest.java"},{"filename":"test\/jdk\/jdk\/internal\/reflect\/Reflection\/GetCallerClassTest.java"}],"sha":"8202742bf280058d5bb6b6d972af97874875c723"},{"commit":{"message":"Merge branch 'master' of https:\/\/github.com\/openjdk\/jdk into reimplement-method-invoke"},"files":[{"filename":"test\/hotspot\/jtreg\/ProblemList.txt"}],"sha":"1800e69e062a77944d51a9676f2ba7d086ce5a37"},{"commit":{"message":"cleanup"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/CsMethodAccessorAdapter.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/ReflectionFactory.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/UnsafeFieldAccessorImpl.java"},{"filename":"test\/jdk\/java\/lang\/invoke\/callerSensitive\/CallerSensitiveAccess.java"},{"filename":"test\/jdk\/java\/lang\/invoke\/lookup\/ChainedLookupTest.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/ChainedReflection.java"},{"filename":"test\/jdk\/jdk\/internal\/reflect\/Reflection\/GetCallerClassTest.java"}],"sha":"0ff5082e72ea382dc635b73be51f76f15752fd8f"},{"commit":{"message":"Merge branch 'master' of https:\/\/github.com\/openjdk\/jdk into reimplement-method-invoke"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MethodHandles.java"},{"filename":"test\/hotspot\/jtreg\/ProblemList.txt"},{"filename":"test\/jdk\/com\/sun\/jdi\/EATests.java"}],"sha":"0d7686e1b8f1e9352c38444c11fdb40f9aa813fe"},{"commit":{"message":"fix ClassByteBuilder to handle short field type properly. Support volatile fields"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/MethodHandleAccessorFactory.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/NativeConstructorAccessorImpl.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/NativeMethodAccessorImpl.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/ReflectionFactory.java"},{"filename":"test\/hotspot\/jtreg\/ProblemList.txt"},{"filename":"test\/jdk\/java\/lang\/reflect\/Field\/TestFieldReflectValueOf.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/MethodHandleAccessorsTest.java"}],"sha":"ab9e08e5119e81e9e5295fe82590a421d530ed2b"},{"commit":{"message":"minor cleanup"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MethodHandleNatives.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/ReflectionFactory.java"}],"sha":"0cafa9e71c809e7cf2c62b9fbb215b1b0e69011b"},{"commit":{"message":"Merge"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/Class.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/InnerClassLambdaMetafactory.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/InvokerBytecodeGenerator.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MethodHandleImpl.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/misc\/VM.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/ReflectionFactory.java"}],"sha":"000dd96174093e1960ab6e038ec8dca49c80ed20"},{"commit":{"message":"Merge branch 'master' of https:\/\/github.com\/openjdk\/jdk into reimplement-method-invoke"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/Class.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/ClassLoader.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/InnerClassLambdaMetafactory.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/InvokerBytecodeGenerator.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MethodHandleImpl.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MethodHandleNatives.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MethodHandles.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/access\/JavaLangInvokeAccess.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/MethodAccessorGenerator.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/NativeConstructorAccessorImpl.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/ReflectionFactory.java"},{"filename":"src\/java.logging\/share\/classes\/java\/util\/logging\/Logger.java"},{"filename":"src\/java.sql\/share\/classes\/java\/sql\/DriverManager.java"},{"filename":"test\/hotspot\/jtreg\/ProblemList.txt"}],"sha":"d5ed9c2696d701d0573dfbfb4d44747f683e9148"},{"commit":{"message":"Add @CallerSensitiveAdapter annotation.   Also minor cleanup."},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/Class.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/ClassLoader.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/InnerClassLambdaMetafactory.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/InvokerBytecodeGenerator.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MethodHandleImpl.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MethodHandles.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/Method.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/access\/JavaLangInvokeAccess.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/CallerSensitiveAdapter.java"},{"filename":"src\/java.logging\/share\/classes\/java\/util\/logging\/Logger.java"},{"filename":"src\/java.sql\/share\/classes\/java\/sql\/DriverManager.java"},{"filename":"test\/jdk\/jdk\/internal\/reflect\/CallerSensitive\/CheckCSMs.java"}],"sha":"f9ee39882e5908dbd119dcddb8ec4542e8b100f5"},{"commit":{"message":"check Enum class only once in Constructor::newInstance"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/Constructor.java"}],"sha":"2924cb3e9bd81d660f87626d6089b74f0b9bf1f0"},{"commit":{"message":"Reimplement Core Reflection on Method Handles"},"files":[{"filename":"make\/jdk\/src\/classes\/build\/tools\/classlist\/HelloClasslist.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/Class.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/ClassLoader.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/InnerClassLambdaMetafactory.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/InvokerBytecodeGenerator.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MethodHandleImpl.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MethodHandleNatives.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MethodHandles.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/Constructor.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/Method.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/access\/JavaLangInvokeAccess.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/access\/SharedSecrets.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/misc\/VM.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/AccessorUtils.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/CsMethodAccessorAdapter.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/DelegatingMethodAccessorImpl.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/FieldAccessorImpl.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/MethodAccessor.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/MethodAccessorGenerator.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/MethodAccessorImpl.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/MethodHandleAccessorFactory.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/NativeConstructorAccessorImpl.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/ReflectionFactory.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/UnsafeFieldAccessorImpl.java"},{"filename":"src\/java.base\/share\/native\/libjava\/NativeAccessors.c"},{"filename":"test\/hotspot\/jtreg\/ProblemList.txt"},{"filename":"test\/hotspot\/jtreg\/serviceability\/dcmd\/vm\/ShowReflectionTargetTest.java"},{"filename":"test\/jdk\/com\/sun\/jdi\/EATests.java"},{"filename":"test\/jdk\/java\/lang\/StackWalker\/DumpStackTest.java"},{"filename":"test\/jdk\/java\/lang\/StackWalker\/NativeMethod.java"},{"filename":"test\/jdk\/java\/lang\/StackWalker\/VerifyStackTrace.java"},{"filename":"test\/jdk\/java\/lang\/StackWalker\/libnativeMethod.c"},{"filename":"test\/jdk\/java\/lang\/invoke\/CallerSensitiveMethodHandle.java"},{"filename":"test\/jdk\/java\/lang\/invoke\/MethodHandleInvokeUOE.java"},{"filename":"test\/jdk\/java\/lang\/invoke\/callerSensitive\/CallerSensitiveAccess.java"},{"filename":"test\/jdk\/java\/lang\/invoke\/callerSensitive\/Main.java"},{"filename":"test\/jdk\/java\/lang\/invoke\/callerSensitive\/csm\/jdk\/test\/MethodInvokeTest.java"},{"filename":"test\/jdk\/java\/lang\/invoke\/callerSensitive\/csm\/module-info.java"},{"filename":"test\/jdk\/java\/lang\/invoke\/callerSensitive\/src\/java.base\/java\/util\/CSM.java"},{"filename":"test\/jdk\/java\/lang\/invoke\/lookup\/ChainedLookupTest.java"},{"filename":"test\/jdk\/java\/lang\/invoke\/lookup\/ReflectiveLookupTest.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/ChainedReflection.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/MethodHandleAccessorsTest.java"},{"filename":"test\/jdk\/jdk\/internal\/reflect\/CallerSensitive\/CheckCSMs.java"},{"filename":"test\/jdk\/jdk\/internal\/reflect\/Reflection\/GetCallerClass.java"},{"filename":"test\/jdk\/jdk\/internal\/reflect\/Reflection\/GetCallerClassTest.java"},{"filename":"test\/jdk\/jdk\/jfr\/api\/consumer\/TestHiddenMethod.java"},{"filename":"test\/langtools\/jdk\/jshell\/ExceptionsTest.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/reflect\/ReflectionColdstartBenchmark.java"}],"sha":"320efd2e5697627243f6fe058485fb8708a0cd41"}]