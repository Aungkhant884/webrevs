{"files":[{"patch":"@@ -27,1 +27,0 @@\n-#include \"gc\/shared\/collectedHeap.hpp\"\n@@ -35,1 +34,0 @@\n-#include \"oops\/method.hpp\"\n@@ -46,0 +44,1 @@\n+#include \"runtime\/timerTrace.hpp\"\n@@ -48,1 +47,0 @@\n-#include \"services\/runtimeService.hpp\"\n@@ -52,1 +50,0 @@\n-#include \"utilities\/xmlstream.hpp\"\n@@ -348,4 +345,10 @@\n-  while (true) {\n-    if (VMThread::vm_thread()->set_next_operation(op)) {\n-      ml.notify_all();\n-      break;\n+  {\n+    TraceTime timer(\"Installing VM operation\", TRACETIME_LOG(Trace, vmthread));\n+    while (true) {\n+      if (VMThread::vm_thread()->set_next_operation(op)) {\n+        ml.notify_all();\n+        break;\n+      }\n+      \/\/ Wait to install this operation as the next operation in the VM Thread\n+      log_trace(vmthread)(\"A VM operation already set, waiting\");\n+      ml.wait();\n@@ -353,1 +356,0 @@\n-    ml.wait();\n@@ -355,4 +357,9 @@\n-  \/\/ _next_vm_operation is cleared holding VMOperation_lock\n-  \/\/ after it have been executed.\n-  while (_next_vm_operation == op) {\n-    ml.wait();\n+  {\n+    \/\/ Wait until the operation has been processed\n+    TraceTime timer(\"Waiting for VM operation to be completed\", TRACETIME_LOG(Trace, vmthread));\n+    \/\/ _next_vm_operation is cleared holding VMOperation_lock after it have been\n+    \/\/ executed. We wait until _next_vm_operation not our op.\n+    while (_next_vm_operation == op) {\n+      \/\/ VM Thread can process it once we unlocks the mutex on wait.\n+      ml.wait();\n+    }\n@@ -392,2 +399,0 @@\n-  \/\/ If we are at a safepoint we will evaluate all the operations that\n-  \/\/ follow that also require a safepoint\n","filename":"src\/hotspot\/share\/runtime\/vmThread.cpp","additions":20,"deletions":15,"binary":false,"changes":35,"status":"modified"}]}