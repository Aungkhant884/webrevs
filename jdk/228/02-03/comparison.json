{"files":[{"patch":"@@ -379,2 +379,1 @@\n-  Thread* current = Thread::current();\n-  assert(current->is_VM_thread(), \"must be a VM thread\");\n+  assert(Thread::current()->is_VM_thread(), \"Must be the VM thread\");\n@@ -382,2 +381,2 @@\n-  VM_Operation* prev_vm_operation = vm_operation();\n-  if (prev_vm_operation != NULL) {\n+  VM_Operation* prev_vm_operation = NULL;\n+  if (_cur_vm_operation!= NULL) {\n@@ -387,1 +386,1 @@\n-    if (!prev_vm_operation->allow_nested_vm_operations()) {\n+    if (!_cur_vm_operation->allow_nested_vm_operations()) {\n@@ -389,1 +388,1 @@\n-            op->name(), vm_operation()->name());\n+            op->name(), _cur_vm_operation->name());\n@@ -391,1 +390,2 @@\n-    op->set_calling_thread(prev_vm_operation->calling_thread());\n+    op->set_calling_thread(_cur_vm_operation->calling_thread());\n+    prev_vm_operation = _cur_vm_operation;\n@@ -427,0 +427,1 @@\n+  assert(Thread::current()->is_VM_thread(), \"Must be the VM thread\");\n@@ -459,1 +460,1 @@\n-    \/\/ We did find anything to execute, notify any waiter so they can install a new one.\n+    \/\/ We didn't find anything to execute, notify any waiter so they can install an op.\n@@ -470,0 +471,2 @@\n+  assert(Thread::current()->is_VM_thread(), \"Must be the VM thread\");\n+\n@@ -475,1 +478,2 @@\n-  do {\n+  while (true) {\n+    if (should_terminate()) break;\n@@ -477,7 +481,4 @@\n-    if (!should_terminate()) {\n-      assert(_next_vm_operation != NULL, \"Must have one\");\n-      inner_execute(_next_vm_operation);\n-    } else {\n-      break;\n-    }\n-  } while(!should_terminate());\n+    if (should_terminate()) break;\n+    assert(_next_vm_operation != NULL, \"Must have one\");\n+    inner_execute(_next_vm_operation);\n+  }\n","filename":"src\/hotspot\/share\/runtime\/vmThread.cpp","additions":17,"deletions":16,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -106,0 +106,1 @@\n+\n@@ -107,2 +108,3 @@\n-    assert(Thread::current()->is_VM_thread(), \"Must be\");\n-    return _cur_vm_operation->type();\n+    VM_Operation* op = vm_operation();\n+    assert (op != NULL, \"sanity\");\n+    return op->type();\n","filename":"src\/hotspot\/share\/runtime\/vmThread.hpp","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"}]}