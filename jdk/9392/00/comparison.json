{"files":[{"patch":"@@ -2688,3 +2688,1 @@\n-  return G1EagerReclaimHumongousObjectsWithStaleRefs ?\n-         rem_set->occupancy_less_or_equal_than(G1EagerReclaimRemSetThreshold) :\n-         G1EagerReclaimHumongousObjects && rem_set->is_empty();\n+  return rem_set->occupancy_less_or_equal_than(G1EagerReclaimRemSetThreshold);\n@@ -2926,12 +2924,0 @@\n-static bool do_humongous_object_logging() {\n-  return log_is_enabled(Debug, gc, humongous);\n-}\n-\n-bool G1CollectedHeap::should_do_eager_reclaim() const {\n-  \/\/ As eager reclaim logging also gives information about humongous objects in\n-  \/\/ the heap in general, always do the eager reclaim pass even without known\n-  \/\/ candidates.\n-  return (G1EagerReclaimHumongousObjects &&\n-          (has_humongous_reclaim_candidates() || do_humongous_object_logging()));\n-}\n-\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.cpp","additions":1,"deletions":15,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -239,2 +239,0 @@\n-  bool should_do_eager_reclaim() const;\n-\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.hpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -499,3 +499,2 @@\n-  if (G1CollectedHeap::heap()->should_do_eager_reclaim()) {\n-    debug_phase(_gc_par_phases[EagerlyReclaimHumongousObjects], 1);\n-  }\n+  debug_phase(_gc_par_phases[EagerlyReclaimHumongousObjects], 1);\n+\n","filename":"src\/hotspot\/share\/gc\/g1\/g1GCPhaseTimes.cpp","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -283,2 +283,0 @@\n-  static bool should_execute() {   return G1CollectedHeap::heap()->should_do_eager_reclaim(); }\n-\n@@ -676,3 +674,1 @@\n-  if (EagerlyReclaimHumongousObjectsTask::should_execute()) {\n-    add_serial_task(new EagerlyReclaimHumongousObjectsTask());\n-  }\n+  add_serial_task(new EagerlyReclaimHumongousObjectsTask());\n","filename":"src\/hotspot\/share\/gc\/g1\/g1YoungGCPostEvacuateTasks.cpp","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -313,7 +313,0 @@\n-  product(bool, G1EagerReclaimHumongousObjects, true, EXPERIMENTAL,         \\\n-          \"Try to reclaim dead large objects at every young GC.\")           \\\n-                                                                            \\\n-  product(bool, G1EagerReclaimHumongousObjectsWithStaleRefs, true, EXPERIMENTAL, \\\n-          \"Try to reclaim dead large objects that have a few stale \"        \\\n-          \"references at every young GC.\")                                  \\\n-                                                                            \\\n","filename":"src\/hotspot\/share\/gc\/g1\/g1_globals.hpp","additions":0,"deletions":7,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -33,3 +33,0 @@\n- *      -XX:+UnlockExperimentalVMOptions\n- *          -XX:+G1EagerReclaimHumongousObjects\n- *          -XX:+G1EagerReclaimHumongousObjectsWithStaleRefs\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestGreyReclaimedHumongousObjects.java","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"}]}