{"files":[{"patch":"@@ -28,0 +28,1 @@\n+import jdk.vm.ci.services.Services;\n@@ -35,0 +36,3 @@\n+    public final boolean linuxOs = Services.getSavedProperty(\"os.name\", \"\").startsWith(\"Linux\");\n+    public final boolean macOs = Services.getSavedProperty(\"os.name\", \"\").startsWith(\"Mac\");\n+\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk.vm.ci.code\/src\/jdk\/vm\/ci\/code\/TargetDescription.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -96,2 +96,2 @@\n-        boolean canUsePlatformRegister = config.linuxOs;\n-        return new AArch64HotSpotRegisterConfig(target, config.useCompressedOops, canUsePlatformRegister, config.macOs);\n+        boolean canUsePlatformRegister = target.linuxOs;\n+        return new AArch64HotSpotRegisterConfig(target, config.useCompressedOops, canUsePlatformRegister);\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk.vm.ci.hotspot.aarch64\/src\/jdk\/vm\/ci\/hotspot\/aarch64\/AArch64HotSpotJVMCIBackendFactory.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -119,2 +119,0 @@\n-    private final boolean macOS;\n-\n@@ -167,2 +165,2 @@\n-    public AArch64HotSpotRegisterConfig(TargetDescription target, boolean useCompressedOops, boolean canUsePlatformRegister, boolean macOs) {\n-        this(target, initAllocatable(target.arch, useCompressedOops, canUsePlatformRegister), macOs);\n+    public AArch64HotSpotRegisterConfig(TargetDescription target, boolean useCompressedOops, boolean canUsePlatformRegister) {\n+        this(target, initAllocatable(target.arch, useCompressedOops, canUsePlatformRegister));\n@@ -172,1 +170,1 @@\n-    public AArch64HotSpotRegisterConfig(TargetDescription target, RegisterArray allocatable, boolean macOs) {\n+    public AArch64HotSpotRegisterConfig(TargetDescription target, RegisterArray allocatable) {\n@@ -174,1 +172,0 @@\n-        this.macOS = macOs;\n@@ -291,1 +288,1 @@\n-                if (macOS && type == HotSpotCallingConventionType.NativeCall) {\n+                if (target.macOs && type == HotSpotCallingConventionType.NativeCall) {\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk.vm.ci.hotspot.aarch64\/src\/jdk\/vm\/ci\/hotspot\/aarch64\/AArch64HotSpotRegisterConfig.java","additions":4,"deletions":7,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -27,1 +27,0 @@\n-import jdk.vm.ci.services.Services;\n@@ -40,3 +39,0 @@\n-    final boolean linuxOs = Services.getSavedProperty(\"os.name\", \"\").startsWith(\"Linux\");\n-    final boolean macOs = Services.getSavedProperty(\"os.name\", \"\").startsWith(\"Mac\");\n-\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk.vm.ci.hotspot.aarch64\/src\/jdk\/vm\/ci\/hotspot\/aarch64\/AArch64HotSpotVMConfig.java","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"}]}