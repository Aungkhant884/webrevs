{"files":[{"patch":"@@ -227,1 +227,0 @@\n-sun\/java2d\/DirectX\/OnScreenRenderingResizeTest\/OnScreenRenderingResizeTest.java 8022403 generic-all\n","filename":"test\/jdk\/ProblemList.txt","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,2 +28,1 @@\n- * doesn't produce artifacts or crashes\n- * @author Dmitri.Trembovetski@sun.com: area=Graphics\n+ *          doesn't produce artifacts or crashes\n@@ -31,1 +30,0 @@\n- * @run main\/othervm -Dsun.java2d.d3d=false OnScreenRenderingResizeTest\n@@ -36,1 +34,0 @@\n-import java.awt.EventQueue;\n@@ -41,1 +38,0 @@\n-import java.awt.Insets;\n@@ -45,2 +41,1 @@\n-import java.awt.event.WindowAdapter;\n-import java.awt.event.WindowEvent;\n+import java.awt.EventQueue;\n@@ -55,1 +50,0 @@\n-    private static volatile boolean done = false;\n@@ -58,4 +52,5 @@\n-    private static final int FRAME_W = 256;\n-    private static final int FRAME_H = 256;\n-    private static final int IMAGE_W = 128;\n-    private static final int IMAGE_H = 128;\n+    private static int FRAME_W;\n+    private static int FRAME_H;\n+    private static int IMAGE_W;\n+    private static int IMAGE_H;\n+    private static final int tolerance = 12;\n@@ -67,0 +62,2 @@\n+    private static Frame frame;\n+\n@@ -77,1 +74,2 @@\n-                System.err.println(\"Usage: OnScreenRenderingResizeTest [-inf][-nocheck]\");\n+                System.err.println(\"Usage: OnScreenRenderingResizeTest\" +\n+                                   \" [-inf][-nocheck]\");\n@@ -80,12 +78,1 @@\n-\n-        BufferedImage output =\n-            new BufferedImage(IMAGE_W, IMAGE_H, BufferedImage.TYPE_INT_RGB);\n-        output.setAccelerationPriority(0.0f);\n-        Graphics g = output.getGraphics();\n-        g.setColor(renderColor);\n-        g.fillRect(0, 0, output.getWidth(), output.getHeight());\n-\n-        final Frame frame = new Frame(\"OnScreenRenderingResizeTest\") {\n-            public void paint(Graphics g) {}\n-            public void update(Graphics g) {}\n-        };\n+        frame = new Frame();\n@@ -94,0 +81,1 @@\n+        frame.setAlwaysOnTop(true);\n@@ -98,1 +86,14 @@\n-        frame.setBounds(gcBounds.width \/ 4, gcBounds.height \/ 4, FRAME_W, FRAME_H);\n+        FRAME_W = (gcBounds.width \/ 4);\n+        FRAME_H = (gcBounds.height \/ 4);\n+        IMAGE_W = (gcBounds.width \/ 8);\n+        IMAGE_H = (gcBounds.height \/ 8);\n+        frame.setBounds(gcBounds.width \/ 4, gcBounds.height \/ 4,\n+                        FRAME_W, FRAME_H);\n+\n+        BufferedImage output =\n+            new BufferedImage(IMAGE_W, IMAGE_H,\n+                              BufferedImage.TYPE_INT_RGB);\n+        output.setAccelerationPriority(0.0f);\n+        Graphics g = output.getGraphics();\n+        g.setColor(renderColor);\n+        g.fillRect(0, 0, IMAGE_W, IMAGE_H);\n@@ -100,5 +101,0 @@\n-        frame.addWindowListener(new WindowAdapter() {\n-            public void windowClosing(WindowEvent e) {\n-                done = true;\n-            }\n-        });\n@@ -117,4 +113,4 @@\n-        int maxW = gcBounds.width \/2;\n-        int maxH = gcBounds.height\/2;\n-        int minW = frame.getWidth();\n-        int minH = frame.getHeight();\n+        int maxW = gcBounds.width \/ 2;\n+        int maxH = gcBounds.height \/ 2;\n+        int minW = FRAME_W;\n+        int minH = FRAME_H;\n@@ -126,0 +122,2 @@\n+                robot.setAutoDelay(100);\n+                robot.mouseMove(0,0);\n@@ -133,1 +131,1 @@\n-        VolatileImage vi = gc.createCompatibleVolatileImage(512, 512);\n+        VolatileImage vi = gc.createCompatibleVolatileImage(IMAGE_W, IMAGE_H);\n@@ -137,1 +135,1 @@\n-        while (!done && (System.currentTimeMillis() - timeStarted) < RUN_TIME) {\n+        while ((System.currentTimeMillis() - timeStarted) < RUN_TIME) {\n@@ -156,1 +154,1 @@\n-            vig.rotate(30.0f, vi.getWidth()\/2, vi.getHeight()\/2);\n+            vig.rotate(30.0f, IMAGE_W\/2, IMAGE_H\/2);\n@@ -158,1 +156,1 @@\n-                          vi.getWidth(), vi.getHeight(), null);\n+                          IMAGE_W, IMAGE_H, null);\n@@ -160,2 +158,1 @@\n-            Insets in = frame.getInsets();\n-            frame.getGraphics().drawImage(output, in.left, in.top, null);\n+            frame.getGraphics().drawImage(output, 0, 0, null);\n@@ -164,1 +161,1 @@\n-                \/\/ area where we blitted to should be either white or green\n+                \/\/ area where we blit and should be either white or green\n@@ -166,1 +163,1 @@\n-                p.translate(in.left+10, in.top+10);\n+                p.translate(10, 10);\n@@ -169,2 +166,2 @@\n-                        new Rectangle(p.x, p.y, IMAGE_W\/2, IMAGE_H\/2));\n-                int accepted1[] = { Color.white.getRGB(), Color.green.getRGB()};\n+                        new Rectangle(p.x, p.y, (IMAGE_W \/ 2), (IMAGE_H \/ 2)));\n+                int accepted1[] = {Color.white.getRGB(), Color.green.getRGB()};\n@@ -173,1 +170,2 @@\n-                \/\/ the are where we didn't render should stay white\n+                \/\/ the area where we didn't render should stay white\n+                robot.waitForIdle();\n@@ -175,1 +173,1 @@\n-                p.translate(in.left, in.top+IMAGE_H+5);\n+                p.translate(10, IMAGE_H + 10);\n@@ -178,2 +176,2 @@\n-                                  frame.getWidth()-in.left-in.right,\n-                                  frame.getHeight()-in.top-in.bottom-5-IMAGE_H));\n+                                  frame.getWidth() - 20,\n+                                  frame.getHeight() - 20 - (IMAGE_H)));\n@@ -193,1 +191,5 @@\n-                int pix = bi.getRGB(x, y);\n+                int actual = bi.getRGB(x, y);\n+                int alpha = (actual >> 24) & 0xFF;\n+                int red = (actual >> 16) & 0xFF;\n+                int green = (actual >> 8) & 0xFF;\n+                int blue = (actual) & 0xFF;\n@@ -196,1 +198,8 @@\n-                    if (pix == acc) {\n+                    int accAlpha = (acc >> 24) & 0xFF;\n+                    int accRed = (acc >> 16) & 0xFF;\n+                    int accGreen = (acc >> 8) & 0xFF;\n+                    int accBlue = (acc) & 0xFF;\n+                    if (!(Math.abs(alpha - accAlpha) > tolerance ||\n+                          Math.abs(red - accRed) > tolerance ||\n+                          Math.abs(green - accGreen) > tolerance ||\n+                          Math.abs(blue - accBlue) > tolerance)) {\n@@ -207,1 +216,1 @@\n-\n+                    frame.dispose();\n@@ -210,1 +219,2 @@\n-                                         \" rgb=0x\" + Integer.toHexString(pix));\n+                                         \" rgb=0x\" + Integer.\n+                                         toHexString(actual));\n","filename":"test\/jdk\/sun\/java2d\/DirectX\/OnScreenRenderingResizeTest\/OnScreenRenderingResizeTest.java","additions":64,"deletions":54,"binary":false,"changes":118,"status":"modified"}]}