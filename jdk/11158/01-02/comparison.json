{"files":[{"patch":"@@ -65,1 +65,10 @@\n-    public static void main(String[] args) {\n+    private static void createAndShowGUI() {\n+        frame = new Frame();\n+        frame.setBackground(bgColor);\n+        frame.setUndecorated(true);\n+        frame.setAlwaysOnTop(true);\n+        frame.pack();\n+        frame.setVisible(true);\n+    }\n+\n+    public static void main(String[] args) throws Exception {\n@@ -79,22 +88,0 @@\n-        frame = new Frame();\n-        frame.setBackground(bgColor);\n-        frame.setUndecorated(true);\n-        frame.setAlwaysOnTop(true);\n-        frame.pack();\n-\n-        GraphicsConfiguration gc = frame.getGraphicsConfiguration();\n-        Rectangle gcBounds = gc.getBounds();\n-        FRAME_W = (gcBounds.width \/ 4);\n-        FRAME_H = (gcBounds.height \/ 4);\n-        IMAGE_W = (gcBounds.width \/ 8);\n-        IMAGE_H = (gcBounds.height \/ 8);\n-        frame.setBounds(gcBounds.width \/ 4, gcBounds.height \/ 4,\n-                        FRAME_W, FRAME_H);\n-\n-        BufferedImage output =\n-            new BufferedImage(IMAGE_W, IMAGE_H,\n-                              BufferedImage.TYPE_INT_RGB);\n-        output.setAccelerationPriority(0.0f);\n-        Graphics g = output.getGraphics();\n-        g.setColor(renderColor);\n-        g.fillRect(0, 0, IMAGE_W, IMAGE_H);\n@@ -105,1 +92,1 @@\n-                    frame.setVisible(true);\n+                    createAndShowGUI();\n@@ -114,32 +101,31 @@\n-        int maxW = gcBounds.width \/ 2;\n-        int maxH = gcBounds.height \/ 2;\n-        int minW = FRAME_W;\n-        int minH = FRAME_H;\n-        int incW = 10, incH = 10, cnt = 0;\n-        Robot robot = null;\n-        if (!nocheck && gc.getColorModel().getPixelSize() > 8) {\n-            try {\n-                robot = new Robot();\n-                robot.setAutoDelay(100);\n-                robot.mouseMove(0,0);\n-            } catch (AWTException ex) {\n-                System.err.println(\"Robot creation failed, continuing.\");\n-            }\n-        } else {\n-            System.err.println(\"No screen rendering checks.\");\n-        }\n-\n-        VolatileImage vi = gc.createCompatibleVolatileImage(IMAGE_W, IMAGE_H);\n-        vi.validate(gc);\n-\n-        long timeStarted = System.currentTimeMillis();\n-        while ((System.currentTimeMillis() - timeStarted) < RUN_TIME) {\n-\n-            if (++cnt > 100) {\n-                int w = frame.getWidth() + incW;\n-                int h = frame.getHeight() + incH;\n-                if (w < minW || w > maxW ) {\n-                    incW = -incW;\n-                }\n-                if (h < minH || h > maxH ) {\n-                    incH = -incH;\n+        try {\n+            GraphicsConfiguration gc = frame.getGraphicsConfiguration();\n+            Rectangle gcBounds = gc.getBounds();\n+            FRAME_W = (gcBounds.width \/ 4);\n+            FRAME_H = (gcBounds.height \/ 4);\n+            IMAGE_W = (gcBounds.width \/ 8);\n+            IMAGE_H = (gcBounds.height \/ 8);\n+            frame.setBounds(gcBounds.width \/ 4, gcBounds.height \/ 4,\n+                            FRAME_W, FRAME_H);\n+\n+            BufferedImage output =\n+                new BufferedImage(IMAGE_W, IMAGE_H,\n+                                  BufferedImage.TYPE_INT_RGB);\n+            output.setAccelerationPriority(0.0f);\n+            Graphics g = output.getGraphics();\n+            g.setColor(renderColor);\n+            g.fillRect(0, 0, IMAGE_W, IMAGE_H);\n+\n+            int maxW = gcBounds.width \/ 2;\n+            int maxH = gcBounds.height \/ 2;\n+            int minW = FRAME_W;\n+            int minH = FRAME_H;\n+            int incW = 10, incH = 10, cnt = 0;\n+            Robot robot = null;\n+            if (!nocheck && gc.getColorModel().getPixelSize() > 8) {\n+                try {\n+                    robot = new Robot();\n+                    robot.setAutoDelay(100);\n+                    robot.mouseMove(0,0);\n+                } catch (AWTException ex) {\n+                    System.err.println(\"Robot creation failed, continuing.\");\n@@ -147,2 +133,2 @@\n-                frame.setSize(w, h);\n-                cnt = 0;\n+            } else {\n+                System.err.println(\"No screen rendering checks.\");\n@@ -150,3 +136,2 @@\n-\n-            \/\/ try to put the device into non-default state, for example,\n-            \/\/ this operation below will set the transform\n+            VolatileImage vi = gc.\n+                createCompatibleVolatileImage(IMAGE_W, IMAGE_H);\n@@ -154,27 +139,50 @@\n-            Graphics2D vig = (Graphics2D)vi.getGraphics();\n-            vig.rotate(30.0f, IMAGE_W\/2, IMAGE_H\/2);\n-            vig.drawImage(output, 0, 0,\n-                          IMAGE_W, IMAGE_H, null);\n-\n-            frame.getGraphics().drawImage(output, 0, 0, null);\n-            if (cnt == 90 && robot != null) {\n-                robot.waitForIdle();\n-                \/\/ area where we blit and should be either white or green\n-                Point p = frame.getLocationOnScreen();\n-                p.translate(10, 10);\n-                BufferedImage bi =\n-                    robot.createScreenCapture(\n-                        new Rectangle(p.x, p.y, (IMAGE_W \/ 2), (IMAGE_H \/ 2)));\n-                int accepted1[] = {Color.white.getRGB(), Color.green.getRGB()};\n-                checkBI(bi, accepted1);\n-\n-                \/\/ the area where we didn't render should stay white\n-                robot.waitForIdle();\n-                p = frame.getLocationOnScreen();\n-                p.translate(10, IMAGE_H + 10);\n-                bi = robot.createScreenCapture(\n-                    new Rectangle(p.x, p.y,\n-                                  frame.getWidth() - 20,\n-                                  frame.getHeight() - 20 - (IMAGE_H)));\n-                int accepted2[] = { Color.white.getRGB() };\n-                checkBI(bi, accepted2);\n+            long timeStarted = System.currentTimeMillis();\n+            while ((System.currentTimeMillis() - timeStarted) < RUN_TIME) {\n+\n+                if (++cnt > 100) {\n+                    int w = frame.getWidth() + incW;\n+                    int h = frame.getHeight() + incH;\n+                    if (w < minW || w > maxW ) {\n+                        incW = -incW;\n+                    }\n+                    if (h < minH || h > maxH ) {\n+                        incH = -incH;\n+                    }\n+                    frame.setSize(w, h);\n+                    cnt = 0;\n+                }\n+                \/\/ try to put the device into non-default state, for example,\n+                \/\/ this operation below will set the transform\n+                vi.validate(gc);\n+                Graphics2D vig = (Graphics2D)vi.getGraphics();\n+                vig.rotate(30.0f, IMAGE_W\/2, IMAGE_H\/2);\n+                vig.drawImage(output, 0, 0,\n+                              IMAGE_W, IMAGE_H, null);\n+\n+                frame.getGraphics().\n+                    drawImage(output, 0, 0, null);\n+                if (cnt == 90 && robot != null) {\n+                    robot.waitForIdle();\n+                    \/\/ area where we blit and should be either white or green\n+                    Point p = frame.getLocationOnScreen();\n+                    p.translate(10, 10);\n+                    BufferedImage bi =\n+                        robot.createScreenCapture(\n+                            new Rectangle(p.x, p.y,\n+                                          (IMAGE_W \/ 2), (IMAGE_H \/ 2)));\n+                    int accepted1[] = {Color.white.getRGB(),\n+                                       Color.green.getRGB()};\n+                    checkBI(bi, accepted1);\n+\n+                    \/\/ the area where we didn't render should stay white\n+                    robot.waitForIdle();\n+                    p = frame.getLocationOnScreen();\n+                    p.translate(10, IMAGE_H + 10);\n+                    bi = robot.createScreenCapture(\n+                        new Rectangle(p.x, p.y,\n+                                      frame.getWidth() - 20,\n+                                      frame.getHeight() - 20 - (IMAGE_H)));\n+                    int accepted2[] = { Color.white.getRGB() };\n+                    checkBI(bi, accepted2);\n+                }\n+                Thread.yield();\n@@ -182,2 +190,2 @@\n-\n-            Thread.yield();\n+        } finally {\n+            frame.dispose();\n@@ -185,1 +193,0 @@\n-        frame.dispose();\n@@ -217,1 +224,0 @@\n-                    frame.dispose();\n","filename":"test\/jdk\/sun\/java2d\/DirectX\/OnScreenRenderingResizeTest\/OnScreenRenderingResizeTest.java","additions":98,"deletions":92,"binary":false,"changes":190,"status":"modified"}]}