{"files":[{"patch":"@@ -370,1 +370,1 @@\n- void DynamicArchive::dump(const char* archive_name, TRAPS) {\n+void DynamicArchive::dump(const char* archive_name, TRAPS) {\n","filename":"src\/hotspot\/share\/cds\/dynamicArchive.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1110,1 +1110,1 @@\n-  bool read_base_archive_name(char** target) {\n+  char* read_base_archive_name() {\n@@ -1114,1 +1114,1 @@\n-    *target = NEW_C_HEAP_ARRAY(char, name_size, mtInternal);\n+    char* base_name = NEW_C_HEAP_ARRAY(char, name_size, mtInternal);\n@@ -1116,1 +1116,1 @@\n-    size_t n = os::read(_fd, *target, (unsigned int)name_size);\n+    size_t n = os::read(_fd, base_name, (unsigned int)name_size);\n@@ -1119,2 +1119,2 @@\n-      FREE_C_HEAP_ARRAY(char, *target);\n-      return false;\n+      FREE_C_HEAP_ARRAY(char, base_name);\n+      return nullptr;\n@@ -1122,1 +1122,1 @@\n-    if (*(*target + name_size - 1) != '\\0' || strlen(*target) != name_size - 1) {\n+    if (*(base_name + name_size - 1) != '\\0' || strlen(base_name) != name_size - 1) {\n@@ -1124,1 +1124,2 @@\n-      return false;\n+      FREE_C_HEAP_ARRAY(char, base_name);\n+      return nullptr;\n@@ -1126,4 +1127,4 @@\n-    if (!os::file_exists(*target)) {\n-      log_info(cds)(\"Base archive %s does not exist\", *target);\n-      FREE_C_HEAP_ARRAY(char, *target);\n-      return false;\n+    if (!os::file_exists(base_name)) {\n+      log_info(cds)(\"Base archive %s does not exist\", base_name);\n+      FREE_C_HEAP_ARRAY(char, base_name);\n+      return nullptr;\n@@ -1131,1 +1132,1 @@\n-    return true;\n+    return base_name;\n@@ -1165,10 +1166,18 @@\n-    if (path_offset + name_size != header_size) {\n-      log_info(cds)(\"_header_size should be equal to _base_archive_path_offset plus _base_archive_name_size\");\n-      log_info(cds)(\"  _base_archive_name_size   = \" UINT32_FORMAT, name_size);\n-      log_info(cds)(\"  _base_archive_path_offset = \" UINT32_FORMAT, path_offset);\n-      log_info(cds)(\"  _header_size              = \" UINT32_FORMAT, header_size);\n-      return false;\n-    }\n-    char* base_name = NULL;\n-    if (!file_helper.read_base_archive_name(&base_name)) {\n-      return false;\n+    if (name_size != 0 && path_offset != 0) {\n+      if (path_offset + name_size != header_size) {\n+        log_info(cds)(\"_header_size should be equal to _base_archive_path_offset plus _base_archive_name_size\");\n+        log_info(cds)(\"  _base_archive_name_size   = \" UINT32_FORMAT, name_size);\n+        log_info(cds)(\"  _base_archive_path_offset = \" UINT32_FORMAT, path_offset);\n+        log_info(cds)(\"  _header_size              = \" UINT32_FORMAT, header_size);\n+        return false;\n+      }\n+      char* base_name = file_helper.read_base_archive_name();\n+      if (base_name == nullptr) {\n+        return false;\n+      }\n+      FREE_C_HEAP_ARRAY(char, base_name);\n+    } else {\n+      if (name_size != 0 || path_offset != 0) {\n+        log_info(cds)(\"_base_archive_name_size and _base_archive_path_offset must be 0 at same time\");\n+        return false;\n+      }\n@@ -1176,1 +1185,0 @@\n-    FREE_C_HEAP_ARRAY(char, base_name);\n@@ -1203,2 +1211,2 @@\n-    if (!file_helper.read_base_archive_name(base_archive_name)) {\n-      *base_archive_name = NULL;\n+    *base_archive_name = file_helper.read_base_archive_name();\n+    if (*base_archive_name == nullptr) {\n","filename":"src\/hotspot\/share\/cds\/filemap.cpp","additions":33,"deletions":25,"binary":false,"changes":58,"status":"modified"},{"patch":"@@ -3271,1 +3271,1 @@\n-  if (DynamicDumpSharedSpaces && Arguments::GetSharedDynamicArchivePath() != nullptr) {\n+  if (DynamicDumpSharedSpaces) {\n","filename":"src\/hotspot\/share\/runtime\/thread.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}