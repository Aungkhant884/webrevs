{"files":[{"patch":"@@ -1116,0 +1116,2 @@\n+  \/\/ This function is call from FileMapInfo::get_base_archive_name, and could happen in very early\n+  \/\/ vm stage and the log is not available yet. Do not use log in his function.\n@@ -1124,1 +1126,1 @@\n-      log_info(cds)(\"Unable to read base archive name from archive\");\n+      warning(\"Unable to read base archive name from archive\");\n@@ -1129,1 +1131,1 @@\n-      log_info(cds)(\"Base archive name is damaged\");\n+      warning(\"Base archive name is damaged\");\n@@ -1134,1 +1136,1 @@\n-      log_info(cds)(\"Base archive %s does not exist\", base_name);\n+      warning(\"Base archive %s does not exist\", base_name);\n@@ -1142,0 +1144,1 @@\n+\/\/ See comment for get_base_archive_name.\n@@ -1158,2 +1161,2 @@\n-      log_info(cds)(\"_base_archive_path_offset should be 0\");\n-      log_info(cds)(\"_base_archive_path_offset = \" UINT32_FORMAT, header->_base_archive_path_offset);\n+      warning(\"_base_archive_path_offset should be 0\");\n+      warning(\"_base_archive_path_offset = \" UINT32_FORMAT, header->_base_archive_path_offset);\n@@ -1174,4 +1177,4 @@\n-        log_info(cds)(\"_header_size should be equal to _base_archive_path_offset plus _base_archive_name_size\");\n-        log_info(cds)(\"  _base_archive_name_size   = \" UINT32_FORMAT, name_size);\n-        log_info(cds)(\"  _base_archive_path_offset = \" UINT32_FORMAT, path_offset);\n-        log_info(cds)(\"  _header_size              = \" UINT32_FORMAT, header_size);\n+        warning(\"_header_size should be equal to _base_archive_path_offset plus _base_archive_name_size\");\n+        warning(\"  _base_archive_name_size   = \" UINT32_FORMAT, name_size);\n+        warning(\"  _base_archive_path_offset = \" UINT32_FORMAT, path_offset);\n+        warning(\"  _header_size              = \" UINT32_FORMAT, header_size);\n@@ -1187,1 +1190,1 @@\n-        log_info(cds)(\"_base_archive_name_size and _base_archive_path_offset must be 0 at same time\");\n+        warning(\"_base_archive_name_size and _base_archive_path_offset must be 0 at same time\");\n@@ -1195,0 +1198,2 @@\n+\/\/ Since fail_continue calls log function and this function can be called in very early vm stage\n+\/\/ when log is not available yet so do not call fail_continue or do logging in this function.\n@@ -1204,0 +1209,1 @@\n+    warning(\"Not a dynmaic archive\");\n@@ -1209,1 +1215,1 @@\n-    fail_continue(\"Default base archive not set correct\");\n+    warning(\"Default base archive not set correct\");\n","filename":"src\/hotspot\/share\/cds\/filemap.cpp","additions":17,"deletions":11,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -80,0 +80,2 @@\n+ * 24 Run -Xshare:auto -XX:SharedArchiveFile=base (created in 20.1) -XX:+AutoCreateSharedArchive\n+ *    Warning for not a dynamic archive, run with static archive. Not dynamic archive is created at exit.\n@@ -422,0 +424,21 @@\n+\n+        \/\/ 24 Run -Xshare:auto -XX:SharedArchiveFile=base (created in 20.1) -XX:+AutoCreateSharedArchive\n+        \/\/    Warning for not a dynamic archive, run with static archive. No dynamic archive is created at exit.\n+        print(\"24 Run -Xshare:auto -XX:SharedArchiveFile=base (created in 20.1) -XX:+AutoCreateSharedArchive\");\n+        ft1 = Files.getLastModifiedTime(Paths.get(BASE_NAME));\n+        run(BASE_NAME,\n+            \"-Xshare:auto\",\n+            \"-XX:+AutoCreateSharedArchive\",\n+            \"-Xlog:cds\",\n+            \"-Xlog:cds+dynamic=info\",\n+            \"-cp\", appJar,\n+            mainAppClass)\n+            .assertNormalExit(output -> {\n+                output.shouldHaveExitValue(0);\n+                output.shouldContain(\"VM warning: Not a dynmaic archive\");\n+                output.shouldNotContain(\"Dumping shared data to file\");\n+                });\n+        ft2 = Files.getLastModifiedTime(Paths.get(BASE_NAME));\n+        if (!ft1.equals(ft2)) {\n+            throw new RuntimeException(\"Shared archive \" + BASE_NAME + \" should not be created at exit\");\n+        }\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/TestAutoCreateSharedArchive.java","additions":23,"deletions":0,"binary":false,"changes":23,"status":"modified"}]}