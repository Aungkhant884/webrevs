{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,1 @@\n-  vmassert(_anchor.last_Java_pc() != NULL, \"not walkable\");\n+  vmassert(_anchor.last_Java_pc() != nullptr, \"not walkable\");\n@@ -64,1 +64,1 @@\n-    if (addr == NULL || ret_sp == NULL ) {\n+    if (addr == nullptr || ret_sp == nullptr ) {\n@@ -72,2 +72,2 @@\n-      \/\/ C2 and JVMCI use ebp as a general register see if NULL fp helps\n-      frame ret_frame2(ret_sp, NULL, addr);\n+      \/\/ C2 and JVMCI use ebp as a general register see if null fp helps\n+      frame ret_frame2(ret_sp, nullptr, addr);\n","filename":"src\/hotspot\/os_cpu\/bsd_x86\/javaThread_bsd_x86.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -320,1 +320,1 @@\n-  if (uc != NULL) {\n+  if (uc != nullptr) {\n@@ -325,3 +325,3 @@\n-    epc = NULL;\n-    if (ret_sp) *ret_sp = (intptr_t *)NULL;\n-    if (ret_fp) *ret_fp = (intptr_t *)NULL;\n+    epc = nullptr;\n+    if (ret_sp) *ret_sp = (intptr_t *)nullptr;\n+    if (ret_fp) *ret_fp = (intptr_t *)nullptr;\n@@ -394,1 +394,1 @@\n-  address stub = NULL;\n+  address stub = nullptr;\n@@ -396,1 +396,1 @@\n-  address pc          = NULL;\n+  address pc          = nullptr;\n@@ -399,1 +399,1 @@\n-  if (info != NULL && uc != NULL && thread != NULL) {\n+  if (info != nullptr && uc != nullptr && thread != nullptr) {\n@@ -425,1 +425,1 @@\n-    if (thread->thread_state() == _thread_in_Java && stub == NULL) {\n+    if (thread->thread_state() == _thread_in_Java && stub == nullptr) {\n@@ -434,2 +434,2 @@\n-      \/\/ Catching SIGBUS here prevents the implicit SIGBUS NULL check below from\n-      \/\/ being called, so only do so if the implicit NULL check is not necessary.\n+      \/\/ Catching SIGBUS here prevents the implicit SIGBUS null check below from\n+      \/\/ being called, so only do so if the implicit null check is not necessary.\n@@ -444,1 +444,1 @@\n-        CompiledMethod* nm = (cb != NULL) ? cb->as_compiled_method_or_null() : NULL;\n+        CompiledMethod* nm = (cb != nullptr) ? cb->as_compiled_method_or_null() : nullptr;\n@@ -446,1 +446,1 @@\n-        if ((nm != NULL && nm->has_unsafe_access()) || is_unsafe_arraycopy) {\n+        if ((nm != nullptr && nm->has_unsafe_access()) || is_unsafe_arraycopy) {\n@@ -555,1 +555,1 @@\n-      stub == NULL &&\n+      stub == nullptr &&\n@@ -618,1 +618,1 @@\n-  if (stub != NULL) {\n+  if (stub != nullptr) {\n@@ -620,1 +620,1 @@\n-    if (thread != NULL) thread->set_saved_exception_pc(pc);\n+    if (thread != nullptr) thread->set_saved_exception_pc(pc);\n@@ -643,1 +643,1 @@\n-  int ret = sysctlbyname(\"machdep.cpu.microcode_version\", data, &sz, NULL, 0);\n+  int ret = sysctlbyname(\"machdep.cpu.microcode_version\", data, &sz, nullptr, 0);\n@@ -732,1 +732,1 @@\n-      int ret = sysctlbyname(\"kern.osrelease\", kern_osrelease, &kern_osrelease_size, NULL, 0);\n+      int ret = sysctlbyname(\"kern.osrelease\", kern_osrelease, &kern_osrelease_size, nullptr, 0);\n@@ -795,1 +795,1 @@\n-  if (context == NULL) return;\n+  if (context == nullptr) return;\n@@ -845,1 +845,1 @@\n-  if (context == NULL) return;\n+  if (context == nullptr) return;\n@@ -862,1 +862,1 @@\n-  if (context == NULL) return;\n+  if (context == nullptr) return;\n","filename":"src\/hotspot\/os_cpu\/bsd_x86\/os_bsd_x86.cpp","additions":21,"deletions":21,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2006, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2006, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,1 +38,1 @@\n-  if (sysctlbyname(\"sysctl.proc_translated\", &ret, &size, NULL, 0) == -1) {\n+  if (sysctlbyname(\"sysctl.proc_translated\", &ret, &size, nullptr, 0) == -1) {\n","filename":"src\/hotspot\/os_cpu\/bsd_x86\/vm_version_bsd_x86.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}