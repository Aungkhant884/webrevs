{"files":[{"patch":"@@ -387,3 +387,2 @@\n-    \/\/ We enforce not holding locks of rank nosafepoint or lower while waiting.\n-    \/\/ Also \"this\" should be the monitor with lowest rank owned by this thread.\n-    if (least != NULL && (least->rank() <= nosafepoint || least->rank() <= this->rank())) {\n+    \/\/ \"this\" should be the monitor with lowest rank owned by this thread.\n+    if (least != NULL && least->rank() <= this->rank()) {\n@@ -392,3 +391,1 @@\n-             least->rank() <= this->rank() ?\n-              \"Should wait on the least ranked monitor from all owned locks.\" :\n-              \"Should not block(wait) while holding a lock of rank nosafepoint or below.\");\n+              \"Should wait on the least ranked monitor from all owned locks.\");\n","filename":"src\/hotspot\/share\/runtime\/mutex.cpp","additions":3,"deletions":6,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -751,1 +751,1 @@\n-    _lock = new (std::nothrow) PaddedMonitor(Mutex::leaf, \"Parallel HProf writer lock\", Mutex::_safepoint_check_never);\n+    _lock = new (std::nothrow) PaddedMonitor(Mutex::nosafepoint, \"ParallelHProfWriter_lock\", Mutex::_safepoint_check_never);\n@@ -1817,1 +1817,1 @@\n-     _lock(new (std::nothrow) PaddedMonitor(Mutex::leaf, \"Dumper Controller lock\",\n+     _lock(new (std::nothrow) PaddedMonitor(Mutex::nosafepoint, \"DumperController_lock\",\n","filename":"src\/hotspot\/share\/services\/heapDumper.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -203,1 +203,1 @@\n-  _lock(new (std::nothrow) PaddedMonitor(Mutex::nosafepoint, \"HProfCompressionBackend_lock\",\n+  _lock(new (std::nothrow) PaddedMonitor(Mutex::nosafepoint-1, \"HProfCompressionBackend_lock\",\n","filename":"src\/hotspot\/share\/services\/heapDumperCompression.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}