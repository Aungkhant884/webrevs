{"files":[{"patch":"@@ -34,1 +34,1 @@\n-  if (barrier_data == 0) {\n+  if (barrier_data == ZLoadBarrierElided) {\n@@ -94,1 +94,1 @@\n-  predicate(UseZGC && !needs_acquiring_load_exclusive(n) && n->as_LoadStore()->barrier_data() != 0);\n+  predicate(UseZGC && !needs_acquiring_load_exclusive(n) && n->as_LoadStore()->barrier_data() == ZLoadBarrierStrong);\n@@ -107,1 +107,1 @@\n-    if (barrier_data() != 0) {\n+    if (barrier_data() != ZLoadBarrierElided) {\n@@ -126,1 +126,1 @@\n-  predicate(UseZGC && needs_acquiring_load_exclusive(n) && (n->as_LoadStore()->barrier_data() != 0));\n+  predicate(UseZGC && needs_acquiring_load_exclusive(n) && (n->as_LoadStore()->barrier_data() == ZLoadBarrierStrong));\n@@ -139,1 +139,1 @@\n-    if (barrier_data() != 0) {\n+    if (barrier_data() != ZLoadBarrierElided) {\n@@ -157,1 +157,1 @@\n-  predicate(UseZGC && !needs_acquiring_load_exclusive(n) && n->as_LoadStore()->barrier_data() != 0);\n+  predicate(UseZGC && !needs_acquiring_load_exclusive(n) && n->as_LoadStore()->barrier_data() == ZLoadBarrierStrong);\n@@ -168,1 +168,1 @@\n-    if (barrier_data() != 0) {\n+    if (barrier_data() != ZLoadBarrierElided) {\n@@ -185,1 +185,1 @@\n-  predicate(UseZGC && needs_acquiring_load_exclusive(n) && n->as_LoadStore()->barrier_data() != 0);\n+  predicate(UseZGC && needs_acquiring_load_exclusive(n) && n->as_LoadStore()->barrier_data() == ZLoadBarrierStrong);\n@@ -196,1 +196,1 @@\n-    if (barrier_data() != 0) {\n+    if (barrier_data() != ZLoadBarrierElided) {\n","filename":"src\/hotspot\/cpu\/aarch64\/gc\/z\/z_aarch64.ad","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -36,1 +36,1 @@\n-  if (barrier_data == 0) {\n+  if (barrier_data == ZLoadBarrierElided) {\n@@ -92,1 +92,1 @@\n-    if (barrier_data() != 0) { \/\/ barrier could be elided by ZBarrierSetC2::analyze_dominating_barriers()\n+    if (barrier_data() != ZLoadBarrierElided) { \/\/ barrier could be elided by ZBarrierSetC2::analyze_dominating_barriers()\n@@ -98,1 +98,1 @@\n-    if (barrier_data() != 0) {\n+    if (barrier_data() != ZLoadBarrierElided) {\n@@ -123,1 +123,1 @@\n-    if (barrier_data() != 0) { \/\/ barrier could be elided by ZBarrierSetC2::analyze_dominating_barriers()\n+    if (barrier_data() != ZLoadBarrierElided) { \/\/ barrier could be elided by ZBarrierSetC2::analyze_dominating_barriers()\n@@ -129,1 +129,1 @@\n-    if (barrier_data() != 0) {\n+    if (barrier_data() != ZLoadBarrierElided) {\n@@ -147,1 +147,1 @@\n-  predicate(UseZGC && n->as_LoadStore()->barrier_data() == ZLoadBarrierStrong);\n+  predicate(UseZGC && n->as_LoadStore()->barrier_data() != 0);\n","filename":"src\/hotspot\/cpu\/x86\/gc\/z\/z_x86_64.ad","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -999,3 +999,7 @@\n-    assert(!is_narrow, \"phantom access cannot be narrow\");\n-    calladdr = CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier_phantom);\n-    name = \"load_reference_barrier_phantom\";\n+    if (is_narrow) {\n+      calladdr = CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier_phantom_narrow);\n+      name = \"load_reference_barrier_phantom_narrow\";\n+    } else {\n+      calladdr = CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier_phantom);\n+      name = \"load_reference_barrier_phantom\";\n+    }\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/c2\/shenandoahSupport.cpp","additions":7,"deletions":3,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -80,0 +80,4 @@\n+\n+JRT_LEAF(oopDesc*, ShenandoahRuntime::load_reference_barrier_phantom_narrow(oopDesc * src, narrowOop* load_addr))\n+  return (oopDesc*) ShenandoahBarrierSet::barrier_set()->load_reference_barrier<ON_PHANTOM_OOP_REF, narrowOop>(oop(src), load_addr);\n+JRT_END\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahRuntime.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -48,0 +48,1 @@\n+  static oopDesc* load_reference_barrier_phantom_narrow(oopDesc* src, narrowOop* load_addr);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahRuntime.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -67,1 +67,1 @@\n-    if (mach->barrier_data() == 0) {\n+    if (mach->barrier_data() == ZLoadBarrierElided) {\n@@ -387,1 +387,1 @@\n-          load->set_barrier_data(0);\n+          load->set_barrier_data(ZLoadBarrierElided);\n@@ -417,1 +417,1 @@\n-          load->set_barrier_data(0);\n+          load->set_barrier_data(ZLoadBarrierElided);\n","filename":"src\/hotspot\/share\/gc\/z\/c2\/zBarrierSetC2.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+const uint8_t ZLoadBarrierElided      = 0;\n","filename":"src\/hotspot\/share\/gc\/z\/c2\/zBarrierSetC2.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -472,5 +472,0 @@\n-#ifdef _LP64\n-  case vmIntrinsics::_PhantomReference_refersTo0:\n-    if (UseCompressedOops && UseShenandoahGC) return false;\n-#endif\n-    break;\n@@ -623,0 +618,1 @@\n+  case vmIntrinsics::_PhantomReference_refersTo0:\n","filename":"src\/hotspot\/share\/opto\/c2compiler.cpp","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -5278,1 +5278,1 @@\n-  Node* table = load_field_from_object(NULL, \"byteTable\", \"[I\", \/*decorators*\/ IN_HEAP, \/*is_exact*\/ false, \/*is_static*\/ true, crc32c_class);\n+  Node* table = load_field_from_object(NULL, \"byteTable\", \"[I\", \/*decorators*\/ IN_HEAP, \/*is_static*\/ true, crc32c_class);\n@@ -5471,1 +5471,1 @@\n-                                          decorators, \/*is_exact*\/ false, \/*is_static*\/ false, NULL);\n+                                        decorators, \/*is_static*\/ false, NULL);\n@@ -5494,1 +5494,1 @@\n-                                          decorators, \/*is_exact*\/ false, \/*is_static*\/ false, NULL);\n+                                          decorators, \/*is_static*\/ false, NULL);\n@@ -5524,1 +5524,1 @@\n-                                             DecoratorSet decorators = IN_HEAP, bool is_exact = false, bool is_static = false,\n+                                             DecoratorSet decorators = IN_HEAP, bool is_static = false,\n@@ -5530,1 +5530,0 @@\n-    assert(!is_exact || tinst->klass_is_exact(), \"klass not exact\");\n","filename":"src\/hotspot\/share\/opto\/library_call.cpp","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -184,1 +184,1 @@\n-  Node* load_field_from_object(Node* fromObj, const char* fieldName, const char* fieldTypeString, DecoratorSet decorators, bool is_exact, bool is_static, ciInstanceKlass* fromKls);\n+  Node* load_field_from_object(Node* fromObj, const char* fieldName, const char* fieldTypeString, DecoratorSet decorators, bool is_static, ciInstanceKlass* fromKls);\n","filename":"src\/hotspot\/share\/opto\/library_call.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -218,1 +218,1 @@\n-  void set_barrier_data(uint data) { _barrier = data; }\n+  void set_barrier_data(uint8_t data) { _barrier = data; }\n","filename":"src\/hotspot\/share\/opto\/machnode.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}