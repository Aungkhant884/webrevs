{"files":[{"patch":"@@ -1520,31 +1520,0 @@\n-    \/**\n-     * UTF16 version of {@link Integer#PACKED_DIGITS}, but the endianness\n-     * of each integer is already adapted to platform.\n-     * As a result, the packed values should <strong>NOT<\/strong> be recombined\n-     * with bitwise operations, like {@code p[a] << 32 | p[b]}, and can only be\n-     * passed to {@link Unsafe#putIntUnaligned(Object, long, int)} without a\n-     * boolean parameter.\n-     *\/\n-    @Stable\n-    private static final int[] PACKED_DIGITS_UTF16;\n-    static {\n-        int[] digits = new int[] {\n-                0x300030, 0x310030, 0x320030, 0x330030, 0x340030, 0x350030, 0x360030, 0x370030, 0x380030, 0x390030,\n-                0x300031, 0x310031, 0x320031, 0x330031, 0x340031, 0x350031, 0x360031, 0x370031, 0x380031, 0x390031,\n-                0x300032, 0x310032, 0x320032, 0x330032, 0x340032, 0x350032, 0x360032, 0x370032, 0x380032, 0x390032,\n-                0x300033, 0x310033, 0x320033, 0x330033, 0x340033, 0x350033, 0x360033, 0x370033, 0x380033, 0x390033,\n-                0x300034, 0x310034, 0x320034, 0x330034, 0x340034, 0x350034, 0x360034, 0x370034, 0x380034, 0x390034,\n-                0x300035, 0x310035, 0x320035, 0x330035, 0x340035, 0x350035, 0x360035, 0x370035, 0x380035, 0x390035,\n-                0x300036, 0x310036, 0x320036, 0x330036, 0x340036, 0x350036, 0x360036, 0x370036, 0x380036, 0x390036,\n-                0x300037, 0x310037, 0x320037, 0x330037, 0x340037, 0x350037, 0x360037, 0x370037, 0x380037, 0x390037,\n-                0x300038, 0x310038, 0x320038, 0x330038, 0x340038, 0x350038, 0x360038, 0x370038, 0x380038, 0x390038,\n-                0x300039, 0x310039, 0x320039, 0x330039, 0x340039, 0x350039, 0x360039, 0x370039, 0x380039, 0x390039\n-        };\n-        if (isBigEndian()) {\n-            for (int i = 0; i < digits.length; i++) {\n-                digits[i] = Integer.reverseBytes(digits[i] << 8);\n-            }\n-        }\n-        PACKED_DIGITS_UTF16 = digits;\n-    }\n-\n@@ -1580,0 +1549,3 @@\n+            int packed = (int) Integer.PACKED_DIGITS[r];\n+            int inflated = ((packed & 0xFF00) << 8) | (packed & 0xFF);\n+\n@@ -1585,1 +1557,2 @@\n-                    PACKED_DIGITS_UTF16[r]);\n+                    inflated,\n+                    false);\n@@ -1590,0 +1563,3 @@\n+            int packed = (int) Integer.PACKED_DIGITS[-i];\n+            int inflated = ((packed & 0xFF00) << 8) | (packed & 0xFF);\n+\n@@ -1595,1 +1571,2 @@\n-                    PACKED_DIGITS_UTF16[-i]);\n+                    inflated,\n+                    false);\n@@ -1627,0 +1604,4 @@\n+\n+            int packed = (int) Integer.PACKED_DIGITS[(int)((q * 100) - i)];\n+            int inflated = ((packed & 0xFF00) << 8) | (packed & 0xFF);\n+\n@@ -1632,1 +1613,2 @@\n-                    PACKED_DIGITS_UTF16[(int)((q * 100) - i)]);\n+                    inflated,\n+                    false);\n@@ -1641,0 +1623,4 @@\n+\n+            int packed = (int) Integer.PACKED_DIGITS[(q2 * 100) - i2];\n+            int inflated = ((packed & 0xFF00) << 8) | (packed & 0xFF);\n+\n@@ -1646,1 +1632,2 @@\n-                    PACKED_DIGITS_UTF16[(q2 * 100) - i2]);\n+                    inflated,\n+                    false);\n@@ -1653,0 +1640,4 @@\n+\n+            int packed = (int) Integer.PACKED_DIGITS[-i2];\n+            int inflated = ((packed & 0xFF00) << 8) | (packed & 0xFF);\n+\n@@ -1657,1 +1648,2 @@\n-                    PACKED_DIGITS_UTF16[-i2]);\n+                    inflated,\n+                    false);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/StringUTF16.java","additions":28,"deletions":36,"binary":false,"changes":64,"status":"modified"}]}