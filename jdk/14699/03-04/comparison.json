{"files":[{"patch":"@@ -418,26 +418,0 @@\n-    static final byte[] DigitTens = {\n-        '0', '0', '0', '0', '0', '0', '0', '0', '0', '0',\n-        '1', '1', '1', '1', '1', '1', '1', '1', '1', '1',\n-        '2', '2', '2', '2', '2', '2', '2', '2', '2', '2',\n-        '3', '3', '3', '3', '3', '3', '3', '3', '3', '3',\n-        '4', '4', '4', '4', '4', '4', '4', '4', '4', '4',\n-        '5', '5', '5', '5', '5', '5', '5', '5', '5', '5',\n-        '6', '6', '6', '6', '6', '6', '6', '6', '6', '6',\n-        '7', '7', '7', '7', '7', '7', '7', '7', '7', '7',\n-        '8', '8', '8', '8', '8', '8', '8', '8', '8', '8',\n-        '9', '9', '9', '9', '9', '9', '9', '9', '9', '9',\n-        } ;\n-\n-    static final byte[] DigitOnes = {\n-        '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',\n-        '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',\n-        '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',\n-        '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',\n-        '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',\n-        '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',\n-        '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',\n-        '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',\n-        '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',\n-        '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',\n-        } ;\n-\n@@ -447,3 +421,3 @@\n-     *       0 -> '0' | ('0' << 8) -> 0x3030\n-     *       1 -> '1' | ('0' << 8) -> 0x3130\n-     *       2 -> '2' | ('0' << 8) -> 0x3230\n+     *      00 -> '0' | ('0' << 8) -> 0x3030\n+     *      01 -> '1' | ('0' << 8) -> 0x3130\n+     *      02 -> '2' | ('0' << 8) -> 0x3230\n@@ -546,2 +520,0 @@\n-        Unsafe unsafe = Unsafe.getUnsafe();\n-\n@@ -554,1 +526,1 @@\n-            unsafe.putShortUnaligned(buf, Unsafe.ARRAY_BYTE_BASE_OFFSET + charPos, DigitPacks[r], false);\n+            Unsafe.getUnsafe().putShortUnaligned(buf, Unsafe.ARRAY_BYTE_BASE_OFFSET + charPos, DigitPacks[r], false);\n@@ -560,1 +532,1 @@\n-            unsafe.putShortUnaligned(buf, Unsafe.ARRAY_BYTE_BASE_OFFSET + charPos, DigitPacks[-i], false);\n+            Unsafe.getUnsafe().putShortUnaligned(buf, Unsafe.ARRAY_BYTE_BASE_OFFSET + charPos, DigitPacks[-i], false);\n@@ -562,1 +534,1 @@\n-            buf[--charPos] = DigitOnes[-i];\n+            buf[--charPos] = (byte) ('0' - i);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Integer.java","additions":6,"deletions":34,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -37,0 +37,1 @@\n+import jdk.internal.misc.Unsafe;\n@@ -549,0 +550,2 @@\n+        Unsafe unsafe = Unsafe.getUnsafe();\n+\n@@ -554,2 +557,2 @@\n-            buf[--charPos] = Integer.DigitOnes[r];\n-            buf[--charPos] = Integer.DigitTens[r];\n+            charPos -= 2;\n+            unsafe.putShortUnaligned(buf, Unsafe.ARRAY_BYTE_BASE_OFFSET + charPos, Integer.DigitPacks[r], false);\n@@ -565,2 +568,2 @@\n-            buf[--charPos] = Integer.DigitOnes[r];\n-            buf[--charPos] = Integer.DigitTens[r];\n+            charPos -= 2;\n+            unsafe.putShortUnaligned(buf, Unsafe.ARRAY_BYTE_BASE_OFFSET + charPos, Integer.DigitPacks[r], false);\n@@ -570,1 +573,0 @@\n-        buf[--charPos] = Integer.DigitOnes[-i2];\n@@ -572,1 +574,4 @@\n-            buf[--charPos] = Integer.DigitTens[-i2];\n+            charPos -= 2;\n+            unsafe.putShortUnaligned(buf, Unsafe.ARRAY_BYTE_BASE_OFFSET + charPos, Integer.DigitPacks[-i2], false);\n+        } else {\n+            buf[--charPos] = (byte) ('0' - i2);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Long.java","additions":11,"deletions":6,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+import jdk.internal.misc.Unsafe;\n@@ -39,0 +40,1 @@\n+import jdk.internal.vm.annotation.Stable;\n@@ -1516,0 +1518,26 @@\n+    \/**\n+     * Integer.DigitPacks UTF16 version\n+     *\/\n+    @Stable\n+    private static final int[] DigitPacksUTF16;\n+    static {\n+        int[] digits = new int[]{\n+                0x300030, 0x310030, 0x320030, 0x330030, 0x340030, 0x350030, 0x360030, 0x370030, 0x380030, 0x390030,\n+                0x300031, 0x310031, 0x320031, 0x330031, 0x340031, 0x350031, 0x360031, 0x370031, 0x380031, 0x390031,\n+                0x300032, 0x310032, 0x320032, 0x330032, 0x340032, 0x350032, 0x360032, 0x370032, 0x380032, 0x390032,\n+                0x300033, 0x310033, 0x320033, 0x330033, 0x340033, 0x350033, 0x360033, 0x370033, 0x380033, 0x390033,\n+                0x300034, 0x310034, 0x320034, 0x330034, 0x340034, 0x350034, 0x360034, 0x370034, 0x380034, 0x390034,\n+                0x300035, 0x310035, 0x320035, 0x330035, 0x340035, 0x350035, 0x360035, 0x370035, 0x380035, 0x390035,\n+                0x300036, 0x310036, 0x320036, 0x330036, 0x340036, 0x350036, 0x360036, 0x370036, 0x380036, 0x390036,\n+                0x300037, 0x310037, 0x320037, 0x330037, 0x340037, 0x350037, 0x360037, 0x370037, 0x380037, 0x390037,\n+                0x300038, 0x310038, 0x320038, 0x330038, 0x340038, 0x350038, 0x360038, 0x370038, 0x380038, 0x390038,\n+                0x300039, 0x310039, 0x320039, 0x330039, 0x340039, 0x350039, 0x360039, 0x370039, 0x380039, 0x390039\n+        };\n+        if (isBigEndian()) {\n+            for (int i = 0; i < digits.length; i++) {\n+                digits[i] = digits[i] << 8;\n+            }\n+        }\n+        DigitPacksUTF16 = digits;\n+    }\n+\n@@ -1544,2 +1572,7 @@\n-            putChar(buf, --charPos, Integer.DigitOnes[r]);\n-            putChar(buf, --charPos, Integer.DigitTens[r]);\n+\n+            charPos -= 2;\n+            Unsafe.getUnsafe().putIntUnaligned(\n+                    buf,\n+                    Unsafe.ARRAY_BYTE_BASE_OFFSET + (charPos << 1),\n+                    DigitPacksUTF16[r],\n+                    false);\n@@ -1549,1 +1582,1 @@\n-        putChar(buf, --charPos, Integer.DigitOnes[-i]);\n+\n@@ -1551,1 +1584,8 @@\n-            putChar(buf, --charPos, Integer.DigitTens[-i]);\n+            charPos -= 2;\n+            Unsafe.getUnsafe().putIntUnaligned(\n+                    buf,\n+                    Unsafe.ARRAY_BYTE_BASE_OFFSET + (charPos << 1),\n+                    DigitPacksUTF16[-i],\n+                    false);\n+        } else {\n+            putChar(buf, --charPos, '0' - i);\n@@ -1584,2 +1624,6 @@\n-            putChar(buf, --charPos, Integer.DigitOnes[r]);\n-            putChar(buf, --charPos, Integer.DigitTens[r]);\n+            charPos -= 2;\n+            Unsafe.getUnsafe().putIntUnaligned(\n+                    buf,\n+                    Unsafe.ARRAY_BYTE_BASE_OFFSET + (charPos << 1),\n+                    DigitPacksUTF16[r],\n+                    false);\n@@ -1595,2 +1639,6 @@\n-            putChar(buf, --charPos, Integer.DigitOnes[r]);\n-            putChar(buf, --charPos, Integer.DigitTens[r]);\n+            charPos -= 2;\n+            Unsafe.getUnsafe().putIntUnaligned(\n+                    buf,\n+                    Unsafe.ARRAY_BYTE_BASE_OFFSET + (charPos << 1),\n+                    DigitPacksUTF16[r],\n+                    false);\n@@ -1600,1 +1648,1 @@\n-        putChar(buf, --charPos, Integer.DigitOnes[-i2]);\n+\n@@ -1602,1 +1650,8 @@\n-            putChar(buf, --charPos, Integer.DigitTens[-i2]);\n+            charPos -= 2;\n+            Unsafe.getUnsafe().putIntUnaligned(\n+                    buf,\n+                    Unsafe.ARRAY_BYTE_BASE_OFFSET + (charPos << 1),\n+                    DigitPacksUTF16[-i2],\n+                    false);\n+        } else {\n+            putChar(buf, --charPos, '0' - i2);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/StringUTF16.java","additions":65,"deletions":10,"binary":false,"changes":75,"status":"modified"}]}