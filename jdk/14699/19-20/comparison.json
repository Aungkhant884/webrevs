{"files":[{"patch":"@@ -35,1 +35,0 @@\n-import jdk.internal.misc.Unsafe;\n@@ -37,0 +36,1 @@\n+import jdk.internal.util.ByteArrayLittleEndian;\n@@ -81,2 +81,0 @@\n-    private static final Unsafe UNSAFE = Unsafe.getUnsafe();\n-\n@@ -153,2 +151,1 @@\n-            assert charPos >= 0 && charPos < buf.length : \"Trusted caller missed bounds check\";\n-            UNSAFE.putShortUnaligned(buf, Unsafe.ARRAY_BYTE_BASE_OFFSET + charPos, PACKED_DIGITS[r], false);\n+            ByteArrayLittleEndian.setShort(buf, charPos, PACKED_DIGITS[r]);\n@@ -160,2 +157,1 @@\n-            assert charPos >= 0 && charPos < buf.length : \"Trusted caller missed bounds check\";\n-            UNSAFE.putShortUnaligned(buf, Unsafe.ARRAY_BYTE_BASE_OFFSET + charPos, PACKED_DIGITS[-i], false);\n+            ByteArrayLittleEndian.setShort(buf, charPos, PACKED_DIGITS[-i]);\n@@ -203,6 +199,1 @@\n-            assert charPos >= 0 && charPos < buf.length : \"Trusted caller missed bounds check\";\n-            UNSAFE.putShortUnaligned(\n-                    buf,\n-                    Unsafe.ARRAY_BYTE_BASE_OFFSET + charPos,\n-                    PACKED_DIGITS[(int)((q * 100) - i)],\n-                    false);\n+            ByteArrayLittleEndian.setShort(buf, charPos, PACKED_DIGITS[(int)((q * 100) - i)]);\n@@ -218,6 +209,1 @@\n-            assert charPos >= 0 && charPos < buf.length : \"Trusted caller missed bounds check\";\n-            UNSAFE.putShortUnaligned(\n-                    buf,\n-                    Unsafe.ARRAY_BYTE_BASE_OFFSET + charPos,\n-                    PACKED_DIGITS[(q2 * 100) - i2],\n-                    false);\n+            ByteArrayLittleEndian.setShort(buf, charPos, PACKED_DIGITS[(q2 * 100) - i2]);\n@@ -230,6 +216,1 @@\n-            assert charPos >= 0 && charPos < buf.length : \"Trusted caller missed bounds check\";\n-            UNSAFE.putShortUnaligned(\n-                    buf,\n-                    Unsafe.ARRAY_BYTE_BASE_OFFSET + charPos,\n-                    PACKED_DIGITS[-i2],\n-                    false);\n+            ByteArrayLittleEndian.setShort(buf, charPos, PACKED_DIGITS[-i2]);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/StringLatin1.java","additions":6,"deletions":25,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -35,1 +35,0 @@\n-import jdk.internal.misc.Unsafe;\n@@ -37,0 +36,1 @@\n+import jdk.internal.util.ByteArrayLittleEndian;\n@@ -1517,2 +1517,0 @@\n-    private static final Unsafe UNSAFE = Unsafe.getUnsafe();\n-\n@@ -1553,6 +1551,1 @@\n-            assert charPos >= 0 && charPos < buf.length : \"Trusted caller missed bounds check\";\n-            UNSAFE.putIntUnaligned(\n-                    buf,\n-                    Unsafe.ARRAY_BYTE_BASE_OFFSET + (charPos << 1),\n-                    inflated,\n-                    false);\n+            ByteArrayLittleEndian.setInt(buf, charPos << 1, inflated);\n@@ -1567,6 +1560,1 @@\n-            assert charPos >= 0 && charPos < buf.length : \"Trusted caller missed bounds check\";\n-            UNSAFE.putIntUnaligned(\n-                    buf,\n-                    Unsafe.ARRAY_BYTE_BASE_OFFSET + (charPos << 1),\n-                    inflated,\n-                    false);\n+            ByteArrayLittleEndian.setInt(buf, charPos << 1, inflated);\n@@ -1610,6 +1598,1 @@\n-            assert charPos >= 0 && charPos < buf.length : \"Trusted caller missed bounds check\";\n-            UNSAFE.putIntUnaligned(\n-                    buf,\n-                    Unsafe.ARRAY_BYTE_BASE_OFFSET + (charPos << 1),\n-                    inflated,\n-                    false);\n+            ByteArrayLittleEndian.setInt(buf, charPos << 1, inflated);\n@@ -1629,6 +1612,1 @@\n-            assert charPos >= 0 && charPos < buf.length : \"Trusted caller missed bounds check\";\n-            UNSAFE.putIntUnaligned(\n-                    buf,\n-                    Unsafe.ARRAY_BYTE_BASE_OFFSET + (charPos << 1),\n-                    inflated,\n-                    false);\n+            ByteArrayLittleEndian.setInt(buf, charPos << 1, inflated);\n@@ -1645,6 +1623,1 @@\n-            assert charPos >= 0 && charPos < buf.length : \"Trusted caller missed bounds check\";\n-            UNSAFE.putIntUnaligned(\n-                    buf,\n-                    Unsafe.ARRAY_BYTE_BASE_OFFSET + (charPos << 1),\n-                    inflated,\n-                    false);\n+            ByteArrayLittleEndian.setInt(buf, charPos << 1, inflated);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/StringUTF16.java","additions":6,"deletions":33,"binary":false,"changes":39,"status":"modified"}]}