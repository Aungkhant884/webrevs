{"files":[{"patch":"@@ -2045,8 +2045,0 @@\n-      \/\/ We should not inline java.nio.Buffer.checkIndex if InlineNioCheckIndex is disabled\n-      if (!InlineNIOCheckIndex &&\n-          holder->is_instance_klass() &&\n-          holder->as_instance_klass() == Compilation::current()->env()->nio_Buffer_klass() &&\n-          inline_target->name() == ciSymbols::checkIndex_name()) {\n-        return;\n-      }\n-\n","filename":"src\/hotspot\/share\/c1\/c1_GraphBuilder.cpp","additions":0,"deletions":8,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -156,3 +156,0 @@\n-  product(bool, InlineNIOCheckIndex, true, DIAGNOSTIC,                      \\\n-          \"Intrinsify java.nio.Buffer.checkIndex\")                          \\\n-                                                                            \\\n","filename":"src\/hotspot\/share\/c1\/c1_globals.hpp","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -135,0 +135,8 @@\n+    static void check9(int i) {\n+        Preconditions.checkIndex(i, i + 1, null);\n+    }\n+\n+    static void check10(long i) {\n+        Preconditions.checkIndex(i, i + 1L, null);\n+    }\n+\n@@ -136,1 +144,1 @@\n-        for (int i = 0; i < 1_0000; i++) {\n+        for (int i = 0; i < 10_000; i++) {\n@@ -148,0 +156,3 @@\n+\n+            check9(i);\n+            check10((long)i);\n","filename":"test\/hotspot\/jtreg\/compiler\/c1\/TestCheckIndexC1Intrinsic.java","additions":12,"deletions":1,"binary":false,"changes":13,"status":"modified"}]}