{"files":[{"patch":"@@ -30,0 +30,1 @@\n+#include \"jfr\/leakprofiler\/chains\/jfrbitset.hpp\"\n@@ -38,1 +39,0 @@\n-#include \"utilities\/objectBitSet.inline.hpp\"\n","filename":"src\/hotspot\/share\/jfr\/leakprofiler\/chains\/bfsClosure.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+#include \"jfr\/leakprofiler\/chains\/jfrbitset.hpp\"\n@@ -34,4 +35,0 @@\n-template<MEMFLAGS F>\n-class ObjectBitSet;\n-\n-typedef ObjectBitSet<mtTracing> JFRBitSet;\n","filename":"src\/hotspot\/share\/jfr\/leakprofiler\/chains\/bfsClosure.hpp","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+#include \"jfr\/leakprofiler\/chains\/jfrbitset.hpp\"\n@@ -38,1 +39,0 @@\n-#include \"utilities\/objectBitSet.inline.hpp\"\n","filename":"src\/hotspot\/share\/jfr\/leakprofiler\/chains\/dfsClosure.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+#include \"jfr\/leakprofiler\/chains\/jfrbitset.hpp\"\n@@ -34,4 +35,0 @@\n-template<MEMFLAGS F>\n-class ObjectBitSet;\n-\n-typedef ObjectBitSet<mtTracing> JFRBitSet;\n","filename":"src\/hotspot\/share\/jfr\/leakprofiler\/chains\/dfsClosure.hpp","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -0,0 +1,33 @@\n+\/*\n+ * Copyright (c) 2022 Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+#ifndef SHARE_JFR_LEAKPROFILER_JFRBITMAP_HPP\n+#define SHARE_JFR_LEAKPROFILER_JFRBITMAP_HPP\n+\n+#include \"memory\/allocation.hpp\"\n+#include \"utilities\/objectBitSet.inline.hpp\"\n+\n+typedef ObjectBitSet<mtTracing> JFRBitSet;\n+\n+#endif \/\/ SHARE_JFR_LEAKPROFILER_JFRBITMAP_HPP\n","filename":"src\/hotspot\/share\/jfr\/leakprofiler\/chains\/jfrbitset.hpp","additions":33,"deletions":0,"binary":false,"changes":33,"status":"added"},{"patch":"@@ -34,0 +34,1 @@\n+#include \"jfr\/leakprofiler\/chains\/jfrbitset.hpp\"\n@@ -48,1 +49,0 @@\n-#include \"utilities\/objectBitSet.inline.hpp\"\n","filename":"src\/hotspot\/share\/jfr\/leakprofiler\/chains\/pathToGcRootsOperation.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2252,1 +2252,1 @@\n-  JVMTIBitSet* _bitset;\n+  JVMTIBitSet _bitset;\n@@ -2321,1 +2321,0 @@\n-  _bitset = new ObjectBitSet<mtServiceability>();\n@@ -2323,1 +2322,1 @@\n-  CallbackInvoker::initialize_for_basic_heap_walk(tag_map, _visit_stack, user_data, callbacks, _bitset);\n+  CallbackInvoker::initialize_for_basic_heap_walk(tag_map, _visit_stack, user_data, callbacks, &_bitset);\n@@ -2338,2 +2337,1 @@\n-  _bitset = new ObjectBitSet<mtServiceability>();\n-  CallbackInvoker::initialize_for_advanced_heap_walk(tag_map, _visit_stack, user_data, callbacks, _bitset);\n+  CallbackInvoker::initialize_for_advanced_heap_walk(tag_map, _visit_stack, user_data, callbacks, &_bitset);\n@@ -2348,1 +2346,0 @@\n-  delete _bitset;\n@@ -2776,2 +2773,2 @@\n-  assert(!_bitset->is_marked(o), \"can't visit same object more than once\");\n-  _bitset->mark_obj(o);\n+  assert(!_bitset.is_marked(o), \"can't visit same object more than once\");\n+  _bitset.mark_obj(o);\n@@ -2830,1 +2827,1 @@\n-      if (!_bitset->is_marked(o)) {\n+      if (!_bitset.is_marked(o)) {\n","filename":"src\/hotspot\/share\/prims\/jvmtiTagMap.cpp","additions":6,"deletions":9,"binary":false,"changes":15,"status":"modified"}]}