{"files":[{"patch":"@@ -1737,0 +1737,2 @@\n+                                    } else if (!constants.add(enumSym)) {\n+                                        log.error(label.pos(), Errors.DuplicateCaseLabel);\n@@ -1768,0 +1770,2 @@\n+                                    } else if (!constants.add(s)) {\n+                                        log.error(label.pos(), Errors.DuplicateCaseLabel);\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 8300543 8309336\n+ * @bug 8300543 8309336 8311825\n@@ -72,0 +72,24 @@\n+    int testQualifiedDuplicate1(Object o) {\n+        return switch(o) {\n+            case E1.A -> 1;\n+            case E1.A -> 2;\n+            default -> -1;\n+        };\n+    }\n+\n+    int testQualifiedDuplicate2(E1 e) {\n+        return switch(e) {\n+            case A -> 1;\n+            case E1.A -> 2;\n+            default -> -1;\n+        };\n+    }\n+\n+    int testQualifiedDuplicate3(E1 e) {\n+        return switch(e) {\n+            case E1.A -> 1;\n+            case A -> 2;\n+            default -> -1;\n+        };\n+    }\n+\n","filename":"test\/langtools\/tools\/javac\/switchextra\/EnumSwitchQualifiedErrors.java","additions":25,"deletions":1,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -11,1 +11,4 @@\n-10 errors\n+EnumSwitchQualifiedErrors.java:75:18: compiler.err.duplicate.case.label\n+EnumSwitchQualifiedErrors.java:83:18: compiler.err.duplicate.case.label\n+EnumSwitchQualifiedErrors.java:91:18: compiler.err.duplicate.case.label\n+13 errors\n","filename":"test\/langtools\/tools\/javac\/switchextra\/EnumSwitchQualifiedErrors.out","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"}]}