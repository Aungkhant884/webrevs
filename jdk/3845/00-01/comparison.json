{"files":[{"patch":"@@ -278,5 +278,13 @@\n-        long size = length() - position();\n-        if (size > (long) Integer.MAX_VALUE)\n-            throw new OutOfMemoryError(\"Required array size too large\");\n-        if (size <= 0L)\n-            return new byte[0];\n+        long length = length();\n+        int capacity;\n+        if (length != 0L) {\n+            long position = position();\n+            long size = length - position;\n+            if (size > (long)Integer.MAX_VALUE)\n+                throw new OutOfMemoryError(\"Required array size too large\");\n+            if (size <= 0L)\n+                return new byte[0];\n+            capacity = (int)(length - position);\n+        } else {\n+            capacity = DEFAULT_BUFFER_SIZE;\n+        }\n@@ -284,1 +292,0 @@\n-        int capacity = (int)size;\n@@ -314,2 +321,1 @@\n-        long size = length() - position();\n-        if (size <= 0L)\n+        if (len == 0L)\n@@ -318,1 +324,9 @@\n-        int capacity = (int)Math.min(len, size);\n+        long length = length();\n+        int capacity;\n+        if (length == 0L) {\n+            capacity = Math.min(len, DEFAULT_BUFFER_SIZE);\n+        } else {\n+            capacity = (int)Math.min(len, length - position());\n+            if (capacity <= 0L)\n+                return new byte[0];\n+        }\n","filename":"src\/java.base\/share\/classes\/java\/io\/FileInputStream.java","additions":23,"deletions":9,"binary":false,"changes":32,"status":"modified"}]}