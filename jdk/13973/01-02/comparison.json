{"files":[{"patch":"@@ -59,14 +59,1 @@\n-    public static char[][] getb2c() {\n-        char[][] b2c = new char[DecodeHolder.b2c.length][];\n-        for (int i = 0; i < b2c.length; i++) {\n-            b2c[i] = DecodeHolder.b2c[i] == null\n-                ? null : DecodeHolder.b2c[i].clone();\n-        }\n-        return b2c;\n-    }\n-\n-    public static char[] getb2cSB() {\n-        return DecodeHolder.b2cSB.clone();\n-    }\n-\n-    static class DecodeHolder {\n+    public static class DecodeHolder {\n@@ -74,2 +61,2 @@\n-        static final char[][] b2c = new char[b2cStr.length][];\n-        static final char[] b2cSB;\n+        public static final char[][] b2c = new char[b2cStr.length][];\n+        public static final char[] b2cSB;\n@@ -88,11 +75,3 @@\n-    public static char[] getc2b() {\n-        return EncodeHolder.c2b.clone();\n-    }\n-\n-    public static char[] getc2bIndex() {\n-        return EncodeHolder.c2bIndex.clone();\n-    }\n-\n-    static class EncodeHolder {\n-        static final char[] c2b = new char[$C2BLENGTH$];\n-        static final char[] c2bIndex = new char[0x100];\n+    public static class EncodeHolder {\n+        public static final char[] c2b = new char[$C2BLENGTH$];\n+        public static final char[] c2bIndex = new char[0x100];\n","filename":"make\/data\/charsetmapping\/DoubleByte-X.java.template","additions":6,"deletions":27,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -31,2 +31,0 @@\n-import sun.nio.cs.DoubleByte;\n-import sun.nio.cs.HistoricallyNamedCharset;\n@@ -68,1 +66,1 @@\n-            b2c = Big5.getb2c();\n+            b2c = Big5.DecodeHolder.b2c.clone();\n@@ -86,1 +84,1 @@\n-            b2cSB = Big5.getb2cSB();\n+            b2cSB = Big5.DecodeHolder.b2cSB;\n@@ -88,2 +86,2 @@\n-            c2b = Big5.getc2b();\n-            c2bIndex = Big5.getc2bIndex();\n+            c2b = Big5.EncodeHolder.c2b.clone();\n+            c2bIndex = Big5.EncodeHolder.c2bIndex.clone();\n","filename":"src\/jdk.charsets\/share\/classes\/sun\/nio\/cs\/ext\/Big5_Solaris.java.template","additions":4,"deletions":6,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -78,1 +78,1 @@\n-        static final SingleByte.Decoder DEC0201 =\n+        public static final SingleByte.Decoder DEC0201 =\n@@ -81,1 +81,1 @@\n-        static final DoubleByte.Decoder DEC0208 =\n+        public static final DoubleByte.Decoder DEC0208 =\n@@ -84,1 +84,1 @@\n-        static final DoubleByte.Decoder DEC0212 =\n+        public static final DoubleByte.Decoder DEC0212 =\n","filename":"src\/jdk.charsets\/share\/classes\/sun\/nio\/cs\/ext\/EUC_JP.java.template","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2015, Oracle and\/or its affiliates. All rights reserved.\n@@ -66,6 +66,0 @@\n-        private static final SingleByte.Decoder DEC0201 =\n-            (SingleByte.Decoder)new JIS_X_0201().newDecoder();\n-\n-        private static final DoubleByte.Decoder DEC0208 =\n-            (DoubleByte.Decoder)new JIS_X_0208().newDecoder();\n-\n","filename":"src\/jdk.charsets\/share\/classes\/sun\/nio\/cs\/ext\/EUC_JP_Open.java.template","additions":1,"deletions":7,"binary":false,"changes":8,"status":"modified"}]}