{"files":[{"patch":"@@ -938,1 +938,2 @@\n-      \/\/ 2) the class is loaded by built-in class loader but failed to add archived loader constraints\n+      \/\/ 2) the class is loaded by built-in class loader but failed to add archived loader constraints or\n+      \/\/ 3) the class was not verified during dump time\n","filename":"src\/hotspot\/share\/oops\/instanceKlass.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -0,0 +1,93 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8265604\n+ * @summary Test unlinked classes during dynamic CDS dump.\n+ * @requires vm.cds\n+ * @library \/test\/lib \/test\/hotspot\/jtreg\/runtime\/cds\/appcds\n+ *          \/test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/test-classes\n+ * @build UnlinkedApp sun.hotspot.WhiteBox\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller -jar unlinked_app.jar UnlinkedApp UnlinkedApp$Super UnlinkedApp$Sub\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller sun.hotspot.WhiteBox\n+ * @run main\/othervm -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI -Xbootclasspath\/a:. UnlinkedTest\n+ *\/\n+\n+import jdk.test.lib.helpers.ClassFileInstaller;\n+\n+public class UnlinkedTest extends DynamicArchiveTestBase {\n+    public static void main(String[] args) throws Exception {\n+        runTest(UnlinkedTest::test);\n+    }\n+\n+    static void test() throws Exception {\n+        String topArchiveName = getNewArchiveName();\n+        String appJar = ClassFileInstaller.getJarPath(\"unlinked_app.jar\");\n+        String mainClass = \"UnlinkedApp\";\n+        String[] appClasses = { mainClass, mainClass + \"$Super\", mainClass + \"$Sub\" };\n+\n+        \/\/ 1. Inner classes of UnlinkedApp are not being linked during dump time.\n+        dump(topArchiveName,\n+            \"-Xlog:class+load,cds=debug,verification\",\n+            \"-cp\", appJar, mainClass)\n+            .assertNormalExit(output -> {\n+                output.shouldHaveExitValue(0);\n+                for (String appClass : appClasses) {\n+                    output.shouldContain(\"Verifying class \" +  appClass + \" with new format\");\n+                }\n+            });\n+\n+        run(topArchiveName,\n+            \"-Xlog:class+load\",\n+            \"-cp\", appJar, mainClass)\n+            .assertNormalExit(output -> {\n+                output.shouldHaveExitValue(0);\n+                for (String appClass : appClasses) {\n+                    output.shouldContain(\"[class,load] \" + appClass + \" source: shared objects file (top)\");\n+                }\n+            });\n+\n+        \/\/ 2. Inner classes of UnlinkedApp are being linked during dump time.\n+        dump(topArchiveName,\n+            \"-Xlog:class+load,cds=debug,verification\",\n+            \"-cp\", appJar, mainClass, \"link\")\n+            .assertNormalExit(output -> {\n+                output.shouldHaveExitValue(0);\n+                for (String appClass : appClasses) {\n+                    output.shouldContain(\"Verifying class \" + appClass + \" with new format\");\n+                }\n+            });\n+\n+        run(topArchiveName,\n+            \"-Xlog:class+load\",\n+            \"-cp\", appJar, mainClass)\n+            .assertNormalExit(output -> {\n+                output.shouldHaveExitValue(0);\n+                for (String appClass : appClasses) {\n+                    output.shouldContain(\"[class,load] \" + appClass + \" source: shared objects file (top)\");\n+                }\n+            });\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/UnlinkedTest.java","additions":93,"deletions":0,"binary":false,"changes":93,"status":"added"},{"patch":"@@ -56,2 +56,0 @@\n-\n-\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/test-classes\/CustomLoaderApp.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,41 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+public class UnlinkedApp {\n+    public static void main(String args[]) {\n+        if (args.length == 1 && args[0].equals(\"link\")) {\n+            doit();\n+        }\n+    }\n+\n+    static class Super {\n+        void func() {}\n+    }\n+\n+    static class Sub extends Super {}\n+\n+    static void doit() {\n+        Super o = new Sub();\n+        o.func();\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/test-classes\/UnlinkedApp.java","additions":41,"deletions":0,"binary":false,"changes":41,"status":"added"}]}