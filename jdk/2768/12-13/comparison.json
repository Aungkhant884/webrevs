{"files":[{"patch":"@@ -2443,1 +2443,1 @@\n-  if (!is_vector_bitwise_op(n)) {\n+  if (n->bottom_type()->isa_vectmask() || !is_vector_bitwise_op(n)) {\n","filename":"src\/hotspot\/share\/opto\/compile.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -805,2 +805,0 @@\n-  static const TypeVect *makemask(const Type* elem, uint length);\n-\n@@ -810,0 +808,7 @@\n+  static const TypeVect *makemask(const BasicType elem_bt, uint length) {\n+    \/\/ Use bottom primitive type.\n+    return makemask(get_const_basic_type(elem_bt), length);\n+  }\n+  static const TypeVect *makemask(const Type* elem, uint length);\n+\n+\n@@ -1711,1 +1716,1 @@\n-  assert( _base >= VectorA && _base <= VectorZ, \"Not a Vector\" );\n+  assert( _base >= VectorM && _base <= VectorZ, \"Not a Vector\" );\n@@ -1716,1 +1721,1 @@\n-  return (_base >= VectorA && _base <= VectorZ) ? (TypeVect*)this : NULL;\n+  return (_base >= VectorM && _base <= VectorZ) ? (TypeVect*)this : NULL;\n","filename":"src\/hotspot\/share\/opto\/type.hpp","additions":9,"deletions":4,"binary":false,"changes":13,"status":"modified"}]}