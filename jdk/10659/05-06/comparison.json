{"files":[{"patch":"@@ -384,1 +384,1 @@\n-                    \"subscribers for testInputStream(%s)\\n\\t step [%s]\".formatted(req.uri(), i),\n+                    \"subscribers for testGetSendAsync(%s)\\n\\t step [%s]\".formatted(req.uri(), i),\n@@ -495,1 +495,1 @@\n-                    \"subscribers for testInputStream(%s)\\n\\t step [%s]\".formatted(req.uri(), i),\n+                    \"subscribers for testPostSendAsync(%s)\\n\\t step [%s]\".formatted(req.uri(), i),\n@@ -557,1 +557,1 @@\n-                    \"subscribers for testInputStream(%s)\\n\\t step [%s]\".formatted(req.uri(), i),\n+                    \"subscribers for testPostInterrupt(%s)\\n\\t step [%s]\".formatted(req.uri(), i),\n","filename":"test\/jdk\/java\/net\/httpclient\/CancelRequestTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -183,4 +183,2 @@\n-            executor.shutdownNow();\n-            if (!executor.awaitTermination(500, TimeUnit.MILLISECONDS)) {\n-                throw new AssertionError(\"executor not terminated within bounds\");\n-            }\n+            \/\/ shuts down the executor and awaits its termination\n+            executor.close();\n","filename":"test\/jdk\/java\/net\/httpclient\/SmallTimeout.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"}]}