{"files":[{"patch":"@@ -26,2 +26,3 @@\n- * @bug 8245462 8229822 8254786\n- * @summary Tests cancelling the request.\n+ * @bug 8294916\n+ * @summary Tests that closing a streaming handler (ofInputStream()\/ofLines())\n+ *      without reading all the bytes unregisters the underlying subscriber.\n@@ -29,1 +30,0 @@\n- * @key randomness\n@@ -95,2 +95,0 @@\n-    private static final Random random = RandomFactory.getRandom();\n-\n@@ -221,1 +219,0 @@\n-                path = path + \"\/interruptThread\";\n@@ -261,0 +258,1 @@\n+        uri = uri + \"\/testAsLines\";\n@@ -279,1 +277,1 @@\n-                        \"subscribers for testInputStream(%s)\\n\\t step [%s,%s]\".formatted(req.uri(), i,j),\n+                        \"subscribers for testAsLines(%s)\\n\\t step [%s,%s]\".formatted(req.uri(), i,j),\n@@ -297,1 +295,2 @@\n-        out.printf(\"%n%s testInpuStream(%s, %b)%n\", now(), uri, sameClient);\n+        uri = uri + \"\/testInputStream\";\n+        out.printf(\"%n%s testInputStream(%s, %b)%n\", now(), uri, sameClient);\n@@ -313,1 +312,1 @@\n-                var error = TRACKER.check(500,\n+                var error = TRACKER.check(1,\n@@ -323,1 +322,1 @@\n-            var error = TRACKER.check(500);\n+            var error = TRACKER.check(1);\n@@ -390,4 +389,0 @@\n-    private static boolean isThreadInterrupt(HttpTestExchange t) {\n-        return t.getRequestURI().getPath().contains(\"\/interruptThread\");\n-    }\n-\n@@ -405,1 +400,0 @@\n-                boolean isThreadInterrupt = isThreadInterrupt(t);\n","filename":"test\/jdk\/java\/net\/httpclient\/CancelStreamedBodyTest.java","additions":9,"deletions":15,"binary":false,"changes":24,"status":"modified"}]}