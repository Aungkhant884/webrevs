{"files":[{"patch":"@@ -127,3 +127,4 @@\n-                    ADDRESS_TO_LONG,\n-                    MethodHandles.insertArguments(LONG_TO_ADDRESS, 1,\n-                            pointeeByteSize(addressLayout), pointeeByteAlign(addressLayout)));\n+                    MethodHandles.explicitCastArguments(ADDRESS_TO_LONG, MethodType.methodType(baseCarrier, MemorySegment.class)),\n+                    MethodHandles.explicitCastArguments(MethodHandles.insertArguments(LONG_TO_ADDRESS, 1,\n+                            pointeeByteSize(addressLayout), pointeeByteAlign(addressLayout)),\n+                            MethodType.methodType(MemorySegment.class, baseCarrier)));\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/Utils.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+ * @requires sun.arch.data.model == \"64\"\n","filename":"test\/jdk\/java\/foreign\/callarranger\/TestWindowsCallArranger.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,0 +32,2 @@\n+#include <stddef.h>\n+\n@@ -37,1 +39,1 @@\n-  return (long long)ptr;\n+  return (long long)(size_t)ptr;\n@@ -41,1 +43,1 @@\n-  return (void*)value;\n+  return (void*)(size_t)value;\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/libPtr.c","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"}]}