{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,2 +40,0 @@\n-import com.sun.tools.jdi.JDWP.Method.VariableTable;\n-import com.sun.tools.jdi.JDWP.Method.VariableTableWithGeneric;\n@@ -223,3 +221,1 @@\n-        Iterator<LocalVariable> iter = variables.iterator();\n-        while(iter.hasNext()) {\n-            LocalVariable variable = iter.next();\n+        for (LocalVariable variable : variables) {\n@@ -237,3 +233,1 @@\n-        Iterator<LocalVariable> iter = variables.iterator();\n-        while(iter.hasNext()) {\n-            LocalVariable variable = iter.next();\n+        for (LocalVariable variable : variables) {\n@@ -292,3 +286,2 @@\n-        Iterator<Location> it = getBaseLocations().lineLocations.iterator();\n-        while(it.hasNext()) {\n-            LocationImpl loc = (LocationImpl)it.next();\n+        for (Location lineLocation : getBaseLocations().lineLocations) {\n+            LocationImpl loc = (LocationImpl)lineLocation;\n","filename":"src\/jdk.jdi\/share\/classes\/com\/sun\/tools\/jdi\/ConcreteMethodImpl.java","additions":5,"deletions":12,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,3 +54,2 @@\n-        Iterator<Argument> iter = values.iterator();\n-        while (iter.hasNext()) {\n-            ArgumentImpl argument = (ArgumentImpl)iter.next();\n+        for (Argument a : values) {\n+            ArgumentImpl argument = (ArgumentImpl)a;\n","filename":"src\/jdk.jdi\/share\/classes\/com\/sun\/tools\/jdi\/ConnectorImpl.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,0 @@\n-import java.util.Iterator;\n@@ -614,3 +613,1 @@\n-            Iterator<StepRequest> iter = requests.iterator();\n-            while (iter.hasNext()) {\n-                StepRequest request = iter.next();\n+            for (StepRequest request : requests) {\n@@ -883,3 +880,2 @@\n-        Iterator<? extends EventRequest> iter = (new ArrayList<>(eventRequests)).iterator();\n-        while (iter.hasNext()) {\n-            ((EventRequestImpl)iter.next()).delete();\n+        for (EventRequest eventRequest : new ArrayList<>(eventRequests)) {\n+            ((EventRequestImpl)eventRequest).delete();\n@@ -972,3 +968,2 @@\n-            Iterator<? extends EventRequest> itr = rl.iterator();\n-            while (itr.hasNext()){\n-                EventRequestImpl er = (EventRequestImpl)itr.next();\n+            for (EventRequest eventRequest : rl) {\n+                EventRequestImpl er = (EventRequestImpl)eventRequest;\n","filename":"src\/jdk.jdi\/share\/classes\/com\/sun\/tools\/jdi\/EventRequestManagerImpl.java","additions":6,"deletions":11,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,0 @@\n-import java.util.Iterator;\n@@ -144,3 +143,2 @@\n-            Iterator<InterfaceType> iter = interfaces.iterator();\n-            while (iter.hasNext()) {\n-                InterfaceTypeImpl interfaze = (InterfaceTypeImpl) iter.next();\n+            for (InterfaceType interfaceType : interfaces) {\n+                InterfaceTypeImpl interfaze = (InterfaceTypeImpl)interfaceType;\n@@ -162,3 +160,2 @@\n-        Iterator<InterfaceType> iter = interfaces().iterator();\n-        while (iter.hasNext()) {\n-            InterfaceTypeImpl interfaze = (InterfaceTypeImpl) iter.next();\n+        for (InterfaceType interfaceType : interfaces()) {\n+            InterfaceTypeImpl interfaze = (InterfaceTypeImpl)interfaceType;\n@@ -180,3 +177,2 @@\n-        Iterator<InterfaceType> iter = immediate.iterator();\n-        while (iter.hasNext()) {\n-            InterfaceTypeImpl interfaze = (InterfaceTypeImpl) iter.next();\n+        for (InterfaceType interfaceType : immediate) {\n+            InterfaceTypeImpl interfaze = (InterfaceTypeImpl)interfaceType;\n","filename":"src\/jdk.jdi\/share\/classes\/com\/sun\/tools\/jdi\/InvokableTypeImpl.java","additions":7,"deletions":11,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -121,3 +121,2 @@\n-        Iterator<Method> it = methods().iterator();\n-        while (it.hasNext()) {\n-            MethodImpl method = (MethodImpl)it.next();\n+        for (Method m : methods()) {\n+            MethodImpl method = (MethodImpl)m;\n@@ -135,3 +134,2 @@\n-        Iterator<Field>it = fields().iterator();\n-        while (it.hasNext()) {\n-            FieldImpl field = (FieldImpl)it.next();\n+        for (Field f : fields()) {\n+            FieldImpl field = (FieldImpl)f;\n@@ -423,2 +421,1 @@\n-        Iterator<? extends ReferenceType> iter = types.iterator();\n-        while (iter.hasNext()) {\n+        for (ReferenceType referenceType : types) {\n@@ -428,1 +425,1 @@\n-            ReferenceTypeImpl type = (ReferenceTypeImpl)iter.next();\n+            ReferenceTypeImpl type = (ReferenceTypeImpl)referenceType;\n@@ -457,3 +454,2 @@\n-            Iterator<? extends ReferenceType> iter = types.iterator();\n-            while (iter.hasNext()) {\n-                ReferenceTypeImpl type = (ReferenceTypeImpl)iter.next();\n+            for (ReferenceType referenceType : types) {\n+                ReferenceTypeImpl type = (ReferenceTypeImpl)referenceType;\n@@ -919,3 +915,2 @@\n-        Iterator<Method> iter = methods.iterator();\n-        while(iter.hasNext()) {\n-            MethodImpl method = (MethodImpl)iter.next();\n+        for (Method m : methods) {\n+            MethodImpl method = (MethodImpl)m;\n","filename":"src\/jdk.jdi\/share\/classes\/com\/sun\/tools\/jdi\/ReferenceTypeImpl.java","additions":11,"deletions":16,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,1 +32,0 @@\n-import java.util.Iterator;\n@@ -190,3 +189,2 @@\n-            Iterator<EventQueue> iter = eventQueues.iterator();\n-            while (iter.hasNext()) {\n-                ((EventQueueImpl)iter.next()).close();\n+            for (EventQueue eventQueue : eventQueues) {\n+                ((EventQueueImpl)eventQueue).close();\n@@ -199,4 +197,2 @@\n-            Iterator<Packet> iter = waitingQueue.values().iterator();\n-            while (iter.hasNext()) {\n-                Packet packet = iter.next();\n-                synchronized(packet) {\n+            for (Packet packet : waitingQueue.values()) {\n+                synchronized (packet) {\n@@ -261,3 +257,2 @@\n-            Iterator<EventQueue> iter = eventQueues.iterator();\n-            while (iter.hasNext()) {\n-                EventQueueImpl queue = (EventQueueImpl)iter.next();\n+            for (EventQueue eventQueue : eventQueues) {\n+                EventQueueImpl queue = (EventQueueImpl)eventQueue;\n@@ -274,3 +269,2 @@\n-            Iterator<EventQueue> iter = eventQueues.iterator();\n-            while (iter.hasNext()) {\n-                EventQueueImpl queue = (EventQueueImpl)iter.next();\n+            for (EventQueue eventQueue : eventQueues) {\n+                EventQueueImpl queue = (EventQueueImpl)eventQueue;\n","filename":"src\/jdk.jdi\/share\/classes\/com\/sun\/tools\/jdi\/TargetVM.java","additions":9,"deletions":15,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -317,3 +317,1 @@\n-            Iterator<BreakpointRequest> iter = requests.iterator();\n-            while (iter.hasNext()) {\n-                BreakpointRequest request = iter.next();\n+            for (BreakpointRequest request : requests) {\n","filename":"src\/jdk.jdi\/share\/classes\/com\/sun\/tools\/jdi\/ThreadReferenceImpl.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -177,3 +177,1 @@\n-        Iterator<WeakReference<VMListener>> iter = listeners.iterator();\n-        while (iter.hasNext()) {\n-            WeakReference<VMListener> ref = iter.next();\n+        for (WeakReference<VMListener> ref : listeners) {\n","filename":"src\/jdk.jdi\/share\/classes\/com\/sun\/tools\/jdi\/VMState.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,1 +49,0 @@\n-import com.sun.jdi.ClassLoaderReference;\n@@ -1182,3 +1181,1 @@\n-        Iterator<ReferenceType> iter = types.iterator();\n-        while (iter.hasNext()) {\n-            ReferenceType type = iter.next();\n+        for (ReferenceType type : types) {\n","filename":"src\/jdk.jdi\/share\/classes\/com\/sun\/tools\/jdi\/VirtualMachineImpl.java","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"}]}