{"files":[{"patch":"@@ -34,0 +34,1 @@\n+const int LogDecorations::_pid = os::current_process_id(); \/\/ This is safe to call during dynamic initialization.\n@@ -66,2 +67,0 @@\n-  \/\/ pid\n-  _pid(decorators.is_decorator(LogDecorators::pid_decorator) ? os::current_process_id() : 0),\n@@ -92,1 +91,2 @@\n-  st->print_raw(os::iso8601_time(_millis, buf, sizeof(buf), false));\n+  char* result = os::iso8601_time(_millis, buf, sizeof(buf), false);\n+  st->print_raw(result ? result : \"\");\n@@ -97,1 +97,2 @@\n-  st->print_raw(os::iso8601_time(_millis, buf, sizeof(buf), true));\n+  char* result = os::iso8601_time(_millis, buf, sizeof(buf), true);\n+  st->print_raw(result ? result : \"\");\n@@ -133,3 +134,1 @@\n-  char tmp[255];\n-  _tagset.label(tmp, sizeof(tmp)); \/\/ Todo: add a LogTagSet::label(outputStream*) to avoid this copy step\n-  st->print_raw(tmp);\n+  _tagset.label(st);\n","filename":"src\/hotspot\/share\/logging\/logDecorations.cpp","additions":6,"deletions":7,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -42,1 +42,0 @@\n-  const int _pid;                 \/\/ for \"pid\"\n@@ -48,0 +47,1 @@\n+  static const int _pid;          \/\/ for \"pid\"\n@@ -54,0 +54,4 @@\n+\n+  \/\/ max size of a single decoration.\n+  static const size_t max_decoration_size = 255;\n+\n","filename":"src\/hotspot\/share\/logging\/logDecorations.hpp","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -56,1 +56,1 @@\n-  char buf[255];\n+  char buf[LogDecorations::max_decoration_size + 1];\n","filename":"src\/hotspot\/share\/logging\/logFileStreamOutput.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -89,2 +89,1 @@\n-int LogTagSet::label(char* buf, size_t len, const char* separator) const {\n-  int tot_written = 0;\n+void LogTagSet::label(outputStream* st, const char* separator) const {\n@@ -92,7 +91,10 @@\n-    int written = jio_snprintf(buf + tot_written, len - tot_written, \"%s%s\",\n-                               (i == 0 ? \"\" : separator),\n-                               LogTag::name(_tag[i]));\n-    if (written < 0) {\n-      return -1;\n-    }\n-    tot_written += written;\n+    st->print(\"%s%s\", (i == 0 ? \"\" : separator), LogTag::name(_tag[i]));\n+  }\n+}\n+\n+int LogTagSet::label(char* buf, size_t len, const char* separator) const {\n+  stringStream ss(buf, len);\n+  label(&ss, separator);\n+  size_t written = ss.size();\n+  if (written >= len - 1) {\n+    return -1; \/\/ truncation\n@@ -100,1 +102,1 @@\n-  return tot_written;\n+  return (int)written;\n","filename":"src\/hotspot\/share\/logging\/logTagSet.cpp","additions":12,"deletions":10,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -36,0 +36,2 @@\n+class outputStream;\n+\n@@ -113,0 +115,1 @@\n+  void label(outputStream* st, const char* separator = \",\") const;\n","filename":"src\/hotspot\/share\/logging\/logTagSet.hpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -378,1 +378,1 @@\n-        machine_index_t (const machine_index_t& o) : hb_iter_with_fallback_t<machine_index_t<Iter>, typename Iter::item_t>(o), it (o.it) {}\n+        machine_index_t (const machine_index_t& o) : it (o.it) {}\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-ot-shape-complex-use-machine.hh","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-  char buf[1024];\n+  char buf[LogDecorations::max_decoration_size + 1];\n@@ -57,1 +57,1 @@\n-  char buf[1024];\n+  char buf[LogDecorations::max_decoration_size + 1];\n@@ -79,1 +79,1 @@\n-  char buf[1024];\n+  char buf[LogDecorations::max_decoration_size + 1];\n@@ -89,1 +89,1 @@\n-  char buf[1024];\n+  char buf[LogDecorations::max_decoration_size + 1];\n@@ -136,1 +136,1 @@\n-  char buf[1024];\n+  char buf[LogDecorations::max_decoration_size + 1];\n@@ -171,1 +171,1 @@\n-  char buf[1024];\n+  char buf[LogDecorations::max_decoration_size + 1];\n@@ -213,1 +213,1 @@\n-  char buf[1024];\n+  char buf[LogDecorations::max_decoration_size + 1];\n","filename":"test\/hotspot\/gtest\/logging\/test_logDecorations.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+#include \"utilities\/ostream.hpp\"\n@@ -122,0 +123,5 @@\n+  \/\/ Test with a stream too\n+  stringStream ss(buf, sizeof(buf));\n+  ts.label(&ss, \"*-*\");\n+  EXPECT_STREQ(\"logging*-*safepoint\", buf);\n+\n@@ -131,0 +137,1 @@\n+\n","filename":"test\/hotspot\/gtest\/logging\/test_logTagSet.cpp","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"}]}