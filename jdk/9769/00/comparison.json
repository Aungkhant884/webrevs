{"files":[{"patch":"@@ -497,2 +497,0 @@\n-            arrowIconR.x = (viewR.width - arrowIconR.width) + 1;\n-            arrowIconR.y = viewR.y + (labelR.height \/ 2) - (arrowIconR.height \/ 2) + 1;\n@@ -500,1 +498,4 @@\n-            checkIconR.y = viewR.y + (labelR.height \/ 2) - (checkIconR.height \/ 2);\n+            arrowIconR.x = Math.abs((viewR.width - arrowIconR.width) + 1);\n+            arrowIconR.y = Math.abs(viewR.y + (labelR.height \/ 2) - (arrowIconR.height \/ 2) + 1);\n+\n+            checkIconR.y = Math.abs(viewR.y + (labelR.height \/ 2) - (checkIconR.height \/ 2));\n@@ -504,0 +505,1 @@\n+\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaMenuPainter.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -0,0 +1,115 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 7189422\n+ * @key headful\n+ * @requires (os.family == \"mac\")\n+ * @summary Verifies arrow position in submenu with empty title\n+ * @run main TestSubMenuArrowPosition\n+ *\/\n+\n+import java.io.File;\n+import java.awt.event.InputEvent;\n+import java.awt.image.BufferedImage;\n+import java.awt.Color;\n+import java.awt.Point;\n+import java.awt.Rectangle;\n+import java.awt.Robot;\n+import javax.swing.JFrame;\n+import javax.swing.JMenu;\n+import javax.swing.JMenuBar;\n+import javax.swing.SwingUtilities;\n+import javax.imageio.ImageIO;\n+\n+public class TestSubMenuArrowPosition {\n+\n+    private static JFrame frame;\n+    private static JMenu menu;\n+    private static JMenu subMenu;\n+\n+    public static void main(String[] args) throws Exception {\n+        Robot robot = new Robot();\n+        robot.setAutoDelay(100);\n+        try {\n+            SwingUtilities.invokeAndWait(() -> {\n+                frame = new JFrame();\n+                JMenuBar menuBar = new JMenuBar();\n+                menu = new JMenu(\"Test menu\");\n+                subMenu = new JMenu(\"\");\n+\n+                menu.add(subMenu);\n+                menuBar.add(menu);\n+\n+                frame.setJMenuBar(menuBar);\n+                frame.setSize(300, 300);\n+                frame.setLocationRelativeTo(null);\n+                frame.setVisible(true);\n+            });\n+\n+            robot.waitForIdle();\n+            robot.delay(1000);\n+\n+            Point p = menu.getLocationOnScreen();\n+            robot.mouseMove(p.x+5, p.y+5);\n+            robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+            robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+            robot.waitForIdle();\n+            robot.delay(1000);\n+\n+            p = subMenu.getLocationOnScreen();\n+            BufferedImage img =\n+                    robot.createScreenCapture(new Rectangle(p.x, p.y,\n+                                              subMenu.getWidth(),\n+                                              subMenu.getHeight()));\n+\n+            System.out.println(\"width \" + img.getWidth() +\n+                               \" height \" + img.getHeight());\n+            Color prevColor = new Color(img.getRGB(img.getWidth() \/ 2,\n+                                                   img.getHeight() \/ 2));\n+            boolean passed = false;\n+            for (int x = img.getWidth() \/ 2; x < img.getWidth() - 1; ++x) {\n+                System.out.println(\"x \" + x + \" rgb = \" +\n+                                     Integer.toHexString(\n+                                      img.getRGB(x, img.getHeight() \/ 2)));\n+                Color c = new Color(img.getRGB(x, img.getHeight() \/ 2));\n+                if (!c.equals(prevColor)) {\n+                    passed = true;\n+                }\n+                prevColor = c;\n+            }\n+            if (!passed) {\n+                ImageIO.write(img, \"png\", new File(\"SimpleTest.png\"));\n+                throw new RuntimeException(\"Submenu's arrow have wrong position\");\n+            }\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n+        }\n+\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JMenu\/TestSubMenuArrowPosition.java","additions":115,"deletions":0,"binary":false,"changes":115,"status":"added"}]}