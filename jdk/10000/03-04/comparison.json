{"files":[{"patch":"@@ -31,0 +31,1 @@\n+import java.util.regex.MatchResult;\n@@ -36,0 +37,40 @@\n+    \/* An implementation purposely not overriding any default method *\/\n+    private static class TestMatcherNoNamedGroups implements MatchResult {\n+\n+        @Override\n+        public int start() {\n+            return 0;\n+        }\n+\n+        @Override\n+        public int start(int group) {\n+            return 0;\n+        }\n+\n+        @Override\n+        public int end() {\n+            return 0;\n+        }\n+\n+        @Override\n+        public int end(int group) {\n+            return 0;\n+        }\n+\n+        @Override\n+        public String group() {\n+            return null;\n+        }\n+\n+        @Override\n+        public String group(int group) {\n+            return null;\n+        }\n+\n+        @Override\n+        public int groupCount() {\n+            return 0;\n+        }\n+\n+    }\n+\n@@ -37,0 +78,2 @@\n+        testMatchResultNoDefault();\n+\n@@ -44,1 +87,2 @@\n-        testMatchResultStartEndGroup();\n+        testMatchResultStartEndGroupBeforeMatchOp();\n+        testMatchResultStartEndGroupAfterMatchOp();\n@@ -47,4 +91,22 @@\n-    private static void testMatchResultStartEndGroup() {\n-        testMatchResultStartEndGroup1();\n-        testMatchResultStartEndGroup2();\n-        testMatchResultStartEndGroup3();\n+    private static void testMatchResultNoDefault() {\n+        TestMatcherNoNamedGroups m = new TestMatcherNoNamedGroups();\n+        try {\n+            m.hasMatch();\n+        } catch (UnsupportedOperationException e) {  \/\/ swallowing intended\n+        }\n+        try {\n+            m.namedGroups();\n+        } catch (UnsupportedOperationException e) {  \/\/ swallowing intended\n+        }\n+        try {\n+            m.start(\"anyName\");\n+        } catch (UnsupportedOperationException e) {  \/\/ swallowing intended\n+        }\n+        try {\n+            m.end(\"anyName\");\n+        } catch (UnsupportedOperationException e) {  \/\/ swallowing intended\n+        }\n+        try {\n+            m.group(\"anyName\");\n+        } catch (UnsupportedOperationException e) {  \/\/ swallowing intended\n+        }\n@@ -53,1 +115,24 @@\n-    private static void testMatchResultStartEndGroup1() {\n+    private static void testMatchResultStartEndGroupBeforeMatchOp() {\n+        Matcher m = Pattern.compile(\"(?<some>.+?)(?<rest>.*)\").matcher(\"abc\");\n+        try {\n+            m.start(\"anyName\");\n+        } catch (IllegalStateException e) {  \/\/ swallowing intended\n+        }\n+        try {\n+            m.end(\"anyName\");\n+        } catch (IllegalStateException e) {  \/\/ swallowing intended\n+        }\n+        try {\n+            m.group(\"anyName\");\n+        } catch (IllegalStateException e) {  \/\/ swallowing intended\n+        }\n+    }\n+\n+    private static void testMatchResultStartEndGroupAfterMatchOp() {\n+        testMatchResultStartEndGroupNoMatch();\n+        testMatchResultStartEndGroupWithMatch();\n+        testMatchResultStartEndGroupNoMatchNoSuchGroup();\n+        testMatchResultStartEndGroupWithMatchNoSuchGroup();\n+    }\n+\n+    private static void testMatchResultStartEndGroupNoMatch() {\n@@ -78,1 +163,1 @@\n-    private static void testMatchResultStartEndGroup2() {\n+    private static void testMatchResultStartEndGroupWithMatch() {\n@@ -103,1 +188,20 @@\n-    private static void testMatchResultStartEndGroup3() {\n+    private static void testMatchResultStartEndGroupNoMatchNoSuchGroup() {\n+        Pattern.compile(\"(?<some>.+?)(?<rest>.*)\").matcher(\"\")\n+                .results()\n+                .forEach(r -> {\n+                    try {\n+                        r.start(\"noSuchGroup\");\n+                    } catch (IllegalArgumentException e) {  \/\/ swallowing intended\n+                    }\n+                    try {\n+                        r.end(\"noSuchGroup\");\n+                    } catch (IllegalArgumentException e) {  \/\/ swallowing intended\n+                    }\n+                    try {\n+                        r.group(\"noSuchGroup\");\n+                    } catch (IllegalArgumentException e) {  \/\/ swallowing intended\n+                    }\n+                });\n+    }\n+\n+    private static void testMatchResultStartEndGroupWithMatchNoSuchGroup() {\n@@ -123,2 +227,2 @@\n-        testMatchResultHasMatch1();\n-        testMatchResultHasMatch2();\n+        testMatchResultHasMatchNoMatch();\n+        testMatchResultHasMatchWithMatch();\n@@ -127,1 +231,1 @@\n-    private static void testMatchResultHasMatch1() {\n+    private static void testMatchResultHasMatchNoMatch() {\n@@ -135,1 +239,1 @@\n-    private static void testMatchResultHasMatch2() {\n+    private static void testMatchResultHasMatchWithMatch() {\n@@ -144,2 +248,2 @@\n-        testMatcherHasMatch1();\n-        testMatcherHasMatch2();\n+        testMatcherHasMatchNoMatch();\n+        testMatcherHasMatchWithMatch();\n@@ -148,1 +252,1 @@\n-    private static void testMatcherHasMatch1() {\n+    private static void testMatcherHasMatchNoMatch() {\n@@ -156,1 +260,1 @@\n-    private static void testMatcherHasMatch2() {\n+    private static void testMatcherHasMatchWithMatch() {\n@@ -165,4 +269,3 @@\n-        testMatchResultNamedGroups1();\n-        testMatchResultNamedGroups2();\n-        testMatchResultNamedGroups3();\n-        testMatchResultNamedGroups4();\n+        testMatchResultNamedGroupsNoNamedGroups();\n+        testMatchResultNamedGroupsOneNamedGroup();\n+        testMatchResultNamedGroupsTwoNamedGroups();\n@@ -171,1 +274,1 @@\n-    private static void testMatchResultNamedGroups1() {\n+    private static void testMatchResultNamedGroupsNoNamedGroups() {\n@@ -178,8 +281,1 @@\n-    private static void testMatchResultNamedGroups2() {\n-        if (!Pattern.compile(\"(.*)\").matcher(\"\")\n-                .toMatchResult().namedGroups().isEmpty()) {\n-            throw new RuntimeException();\n-        }\n-    }\n-\n-    private static void testMatchResultNamedGroups3() {\n+    private static void testMatchResultNamedGroupsOneNamedGroup() {\n@@ -193,1 +289,1 @@\n-    private static void testMatchResultNamedGroups4() {\n+    private static void testMatchResultNamedGroupsTwoNamedGroups() {\n@@ -202,4 +298,3 @@\n-        testMatcherNamedGroups1();\n-        testMatcherNamedGroups2();\n-        testMatcherNamedGroups3();\n-        testMatcherNamedGroups4();\n+        testMatcherNamedGroupsNoNamedGroups();\n+        testMatcherNamedGroupsOneNamedGroup();\n+        testMatcherNamedGroupsTwoNamedGroups();\n@@ -208,1 +303,1 @@\n-    private static void testMatcherNamedGroups1() {\n+    private static void testMatcherNamedGroupsNoNamedGroups() {\n@@ -214,7 +309,1 @@\n-    private static void testMatcherNamedGroups2() {\n-        if (!Pattern.compile(\"(.*)\").matcher(\"\").namedGroups().isEmpty()) {\n-            throw new RuntimeException();\n-        }\n-    }\n-\n-    private static void testMatcherNamedGroups3() {\n+    private static void testMatcherNamedGroupsOneNamedGroup() {\n@@ -227,1 +316,1 @@\n-    private static void testMatcherNamedGroups4() {\n+    private static void testMatcherNamedGroupsTwoNamedGroups() {\n@@ -235,4 +324,3 @@\n-        testPatternNamedGroups1();\n-        testPatternNamedGroups2();\n-        testPatternNamedGroups3();\n-        testPatternNamedGroups4();\n+        testPatternNamedGroupsNoNamedGroups();\n+        testPatternNamedGroupsOneNamedGroup();\n+        testPatternNamedGroupsTwoNamedGroups();\n@@ -241,1 +329,1 @@\n-    private static void testPatternNamedGroups1() {\n+    private static void testPatternNamedGroupsNoNamedGroups() {\n@@ -247,7 +335,1 @@\n-    private static void testPatternNamedGroups2() {\n-        if (!Pattern.compile(\"(.*)\").namedGroups().isEmpty()) {\n-            throw new RuntimeException();\n-        }\n-    }\n-\n-    private static void testPatternNamedGroups3() {\n+    private static void testPatternNamedGroupsOneNamedGroup() {\n@@ -260,1 +342,1 @@\n-    private static void testPatternNamedGroups4() {\n+    private static void testPatternNamedGroupsTwoNamedGroups() {\n","filename":"test\/jdk\/java\/util\/regex\/NamedGroupsTests.java","additions":138,"deletions":56,"binary":false,"changes":194,"status":"modified"}]}