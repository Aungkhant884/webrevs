{"files":[{"patch":"@@ -38,0 +38,1 @@\n+import java.util.Optional;\n@@ -638,4 +639,3 @@\n-                 if (bundler.isDefault()\n-                         && bundler.supported(runtimeInstaller)) {\n-                     return bundler;\n-                 }\n+                if (bundler.isDefault()) {\n+                    return bundler;\n+                }\n@@ -643,4 +643,3 @@\n-                 if ((appImage || type.equalsIgnoreCase(bundler.getID()))\n-                         && bundler.supported(runtimeInstaller)) {\n-                     return bundler;\n-                 }\n+                if (appImage || type.equalsIgnoreCase(bundler.getID())) {\n+                    return bundler;\n+                }\n@@ -655,2 +654,0 @@\n-        boolean bundleCreated = false;\n-\n@@ -668,3 +665,4 @@\n-        if (bundler == null) {\n-            throw new PackagerException(\"ERR_InvalidInstallerType\",\n-                      deployParams.getTargetFormat());\n+        if (bundler == null || !bundler.supported(runtimeInstaller)) {\n+            String type = Optional.ofNullable(bundler).map(Bundler::getID).orElseGet(\n+                    () -> deployParams.getTargetFormat());\n+            throw new PackagerException(\"ERR_InvalidInstallerType\", type);\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/Arguments.java","additions":11,"deletions":13,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n- * @summary jpackage application version testing\n+ * @summary Test jpackage output for erroneous input\n@@ -47,1 +47,1 @@\n- * @summary jpackage application version testing\n+ * @summary Test jpackage output for erroneous input\n@@ -99,1 +99,1 @@\n-                    \"Invalid or unsupported type:\"},\n+                    \"Invalid or unsupported type: [invalid-type]\"},\n","filename":"test\/jdk\/tools\/jpackage\/share\/jdk\/jpackage\/tests\/ErrorTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}