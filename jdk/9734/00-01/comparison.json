{"files":[{"patch":"@@ -47,0 +47,1 @@\n+#include \"runtime\/arguments.hpp\"\n@@ -507,0 +508,5 @@\n+  \/\/ system_loader_data here is always an instance of jdk.internal.loader.ClassLoader$AppClassLoader.\n+  \/\/ However, if -Djava.system.class.loader=xxx is specified, java_platform_loader() would\n+  \/\/ be an instance of a user-defined class, so make sure this never happens.\n+  assert(Arguments::get_property(\"java.system.class.loader\") == NULL,\n+           \"archived full module should have been disabled\");\n","filename":"src\/hotspot\/share\/classfile\/modules.cpp","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -123,3 +123,0 @@\n-  JavaValue result(T_OBJECT);\n-  InstanceKlass* class_loader_klass = vmClasses::ClassLoader_klass();\n-\n@@ -127,8 +124,11 @@\n-    JavaCalls::call_static(&result,\n-                           class_loader_klass,\n-                           vmSymbols::getSystemClassLoader_name(),\n-                           vmSymbols::void_classloader_signature(),\n-                           CHECK);\n-\n-    _java_system_loader = OopHandle(Universe::vm_global(), result.get_oop());\n-  }\n+    oop system_loader = get_system_class_loader_impl(CHECK);\n+    _java_system_loader = OopHandle(Universe::vm_global(), system_loader);\n+  } else {\n+    \/\/ It must have been restored from the archived module graph\n+    assert(UseSharedSpaces, \"must be\");\n+    assert(MetaspaceShared::use_full_module_graph(), \"must be\");\n+    DEBUG_ONLY(\n+      oop system_loader = get_system_class_loader_impl(CHECK);\n+      assert(_java_system_loader.resolve() == system_loader, \"must be\");\n+    )\n+ }\n@@ -137,0 +137,2 @@\n+    JavaValue result(T_OBJECT);\n+    InstanceKlass* class_loader_klass = vmClasses::ClassLoader_klass();\n@@ -147,0 +149,11 @@\n+oop SystemDictionary::get_system_class_loader_impl(TRAPS) {\n+  JavaValue result(T_OBJECT);\n+  InstanceKlass* class_loader_klass = vmClasses::ClassLoader_klass();\n+  JavaCalls::call_static(&result,\n+                         class_loader_klass,\n+                         vmSymbols::getSystemClassLoader_name(),\n+                         vmSymbols::void_classloader_signature(),\n+                         CHECK_NULL);\n+  return result.get_oop();\n+}\n+\n","filename":"src\/hotspot\/share\/classfile\/systemDictionary.cpp","additions":24,"deletions":11,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -136,0 +136,2 @@\n+  static oop get_system_class_loader_impl(TRAPS);\n+\n","filename":"src\/hotspot\/share\/classfile\/systemDictionary.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"}]}