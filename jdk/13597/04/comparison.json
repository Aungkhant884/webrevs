{"files":[{"patch":"@@ -119,1 +119,0 @@\n-  out->print_cr(\"MetaspaceReclaimPolicy: %s\", MetaspaceReclaimPolicy);\n","filename":"src\/hotspot\/share\/memory\/metaspace\/metaspaceReporter.cpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -39,3 +39,0 @@\n-size_t Settings::_commit_granule_bytes = 0;\n-size_t Settings::_commit_granule_words = 0;\n-\n@@ -45,13 +42,0 @@\n-  if (strcmp(MetaspaceReclaimPolicy, \"aggressive\") == 0) {\n-    log_info(metaspace)(\"Initialized with strategy: aggressive reclaim.\");\n-    \/\/ Set the granule size rather small; may increase\n-    \/\/ mapping fragmentation but also increase chance to uncommit.\n-    _commit_granule_bytes = MAX2(os::vm_page_size(), 16 * K);\n-    _commit_granule_words = _commit_granule_bytes \/ BytesPerWord;\n-  } else if (strcmp(MetaspaceReclaimPolicy, \"balanced\") == 0) {\n-    log_info(metaspace)(\"Initialized with strategy: balanced reclaim.\");\n-    _commit_granule_bytes = MAX2(os::vm_page_size(), 64 * K);\n-    _commit_granule_words = _commit_granule_bytes \/ BytesPerWord;\n-  } else {\n-    vm_exit_during_initialization(\"Invalid value for MetaspaceReclaimPolicy: \\\"%s\\\".\", MetaspaceReclaimPolicy);\n-  }\n@@ -59,1 +43,4 @@\n-  \/\/ Sanity checks.\n+  \/\/ Granules must be a multiple of page size, and a power-2-value.\n+  assert(_commit_granule_bytes >= os::vm_page_size() &&\n+         is_aligned(_commit_granule_bytes, os::vm_page_size()),\n+         \"Granule size must be a page-size-aligned power-of-2 value\");\n@@ -61,1 +48,0 @@\n-  assert(is_power_of_2(commit_granule_words()), \"granule size must be a power of 2\");\n","filename":"src\/hotspot\/share\/memory\/metaspace\/metaspaceSettings.cpp","additions":4,"deletions":18,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n-  static size_t _commit_granule_bytes;\n+  static constexpr size_t _commit_granule_bytes = 64 * K;\n@@ -41,1 +41,1 @@\n-  static size_t _commit_granule_words;\n+  static constexpr size_t _commit_granule_words = _commit_granule_bytes \/ BytesPerWord;\n","filename":"src\/hotspot\/share\/memory\/metaspace\/metaspaceSettings.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -526,0 +526,1 @@\n+  { \"MetaspaceReclaimPolicy\",       JDK_Version::undefined(), JDK_Version::jdk(21), JDK_Version::undefined() },\n","filename":"src\/hotspot\/share\/runtime\/arguments.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1425,3 +1425,0 @@\n-  product(ccstr, MetaspaceReclaimPolicy, \"balanced\", DIAGNOSTIC,            \\\n-          \"options: balanced, aggressive\")                                  \\\n-                                                                            \\\n","filename":"src\/hotspot\/share\/runtime\/globals.hpp","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -43,28 +43,0 @@\n-\n-\n-\n-\/* @test id=reclaim-aggressive-debug\n- * @bug 8251158\n- * @summary Run metaspace-related gtests for reclaim policy aggressive (with verifications)\n- * @library \/test\/lib\n- * @modules java.base\/jdk.internal.misc\n- *          java.xml\n- * @requires vm.debug\n- * @requires vm.flagless\n- * @run main\/native GTestWrapper --gtest_filter=metaspace* -XX:+UnlockDiagnosticVMOptions -XX:MetaspaceReclaimPolicy=aggressive -XX:VerifyMetaspaceInterval=3\n- *\/\n-\n-\/* @test id=reclaim-aggressive-ndebug\n- * @bug 8251158\n- * @summary Run metaspace-related gtests for reclaim policy aggressive\n- * @library \/test\/lib\n- * @modules java.base\/jdk.internal.misc\n- *          java.xml\n- * @requires vm.debug == false\n- * @requires vm.flagless\n- * @run main\/native GTestWrapper --gtest_filter=metaspace* -XX:+UnlockDiagnosticVMOptions -XX:MetaspaceReclaimPolicy=aggressive\n- *\/\n-\n-\n-\n-\n@@ -81,3 +53,0 @@\n-\n-\n-\n@@ -91,1 +60,1 @@\n- * @run main\/native GTestWrapper --gtest_filter=metaspace* -XX:+UnlockDiagnosticVMOptions -XX:MetaspaceReclaimPolicy=balanced -XX:-UseCompressedClassPointers\n+ * @run main\/native GTestWrapper --gtest_filter=metaspace* -XX:+UnlockDiagnosticVMOptions -XX:-UseCompressedClassPointers\n","filename":"test\/hotspot\/jtreg\/gtest\/MetaspaceGtests.java","additions":1,"deletions":32,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -39,10 +39,0 @@\n-\/*\n- * @test id=test-64bit-ccs-aggressivereclaim\n- * @summary Test the VM.metaspace command\n- * @requires vm.bits == \"64\"\n- * @library \/test\/lib\n- * @modules java.base\/jdk.internal.misc\n- *          java.management\n- * @run main\/othervm -Dwith-compressed-class-space -XX:MaxMetaspaceSize=201M -Xmx100M -XX:+UseCompressedOops -XX:+UseCompressedClassPointers -XX:+UnlockDiagnosticVMOptions -XX:MetaspaceReclaimPolicy=aggressive PrintMetaspaceDcmd\n- *\/\n-\n","filename":"test\/hotspot\/jtreg\/runtime\/Metaspace\/PrintMetaspaceDcmd.java","additions":0,"deletions":10,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -96,1 +96,1 @@\n-        \/\/ Purging uncommits all free chunks >= 64K\/16K (MetaspaceReclaimPolicy=standard\/aggressive).\n+        \/\/ Purging uncommits all free chunks >= 64K\n","filename":"test\/hotspot\/jtreg\/runtime\/Metaspace\/elastic\/MetaspaceTestManyArenasManyThreads.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -80,4 +80,2 @@\n-        if (Settings.settings().doesReclaim()) {\n-            if (context.committedWords() > 0) {\n-                throw new RuntimeException(\"Expected no committed words after purging empty metaspace context (was: \" + context.committedWords() + \")\");\n-            }\n+        if (context.committedWords() > 0) {\n+            throw new RuntimeException(\"Expected no committed words after purging empty metaspace context (was: \" + context.committedWords() + \")\");\n","filename":"test\/hotspot\/jtreg\/runtime\/Metaspace\/elastic\/MetaspaceTestWithThreads.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-    public String reclaimPolicy = WhiteBox.getWhiteBox().getStringVMFlag(\"MetaspaceReclaimPolicy\");\n@@ -33,4 +32,0 @@\n-    final public boolean doesReclaim() {\n-        return reclaimPolicy.equals(\"balanced\") || reclaimPolicy.equals(\"aggessive\");\n-    }\n-\n","filename":"test\/hotspot\/jtreg\/runtime\/Metaspace\/elastic\/Settings.java","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -38,1 +38,0 @@\n- * @run main\/othervm -Xbootclasspath\/a:. -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI  -XX:VerifyMetaspaceInterval=10  -XX:MetaspaceReclaimPolicy=aggressive TestMetaspaceAllocation\n@@ -55,1 +54,0 @@\n- * @run main\/othervm -Xbootclasspath\/a:. -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI  -XX:MetaspaceReclaimPolicy=aggressive TestMetaspaceAllocation\n","filename":"test\/hotspot\/jtreg\/runtime\/Metaspace\/elastic\/TestMetaspaceAllocation.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -60,18 +60,0 @@\n-\/*\n- * @test id=debug-aggressive\n- * @library \/test\/lib\n- * @modules java.base\/jdk.internal.misc\n- *          java.management\n- * @build jdk.test.whitebox.WhiteBox\n- * @key randomness\n- * @requires (vm.debug == true)\n- *\n- * @run driver jdk.test.lib.helpers.ClassFileInstaller jdk.test.whitebox.WhiteBox\n- *\n- * @run main\/othervm\/timeout=400\n- *      -Xbootclasspath\/a:. -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI\n- *      -XX:VerifyMetaspaceInterval=10\n- *      -XX:MetaspaceReclaimPolicy=aggressive\n- *      TestMetaspaceAllocationMT1\n- *\/\n-\n@@ -112,17 +94,0 @@\n-\/*\n- * @test id=ndebug-aggressive\n- * @library \/test\/lib\n- * @modules java.base\/jdk.internal.misc\n- *          java.management\n- * @build jdk.test.whitebox.WhiteBox\n- * @key randomness\n- * @requires (vm.debug == false)\n- *\n- * @run driver jdk.test.lib.helpers.ClassFileInstaller jdk.test.whitebox.WhiteBox\n- *\n- * @run main\/othervm\/timeout=400\n- *      -Xbootclasspath\/a:. -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI\n- *      -XX:MetaspaceReclaimPolicy=aggressive\n- *      TestMetaspaceAllocationMT1\n- *\/\n-\n","filename":"test\/hotspot\/jtreg\/runtime\/Metaspace\/elastic\/TestMetaspaceAllocationMT1.java","additions":0,"deletions":35,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -60,18 +60,0 @@\n-\/*\n- * @test id=debug-aggressive\n- * @library \/test\/lib\n- * @modules java.base\/jdk.internal.misc\n- *          java.management\n- * @build jdk.test.whitebox.WhiteBox\n- * @key randomness\n- * @requires (vm.debug == true)\n- *\n- * @run driver jdk.test.lib.helpers.ClassFileInstaller jdk.test.whitebox.WhiteBox\n- *\n- * @run main\/othervm\/timeout=400\n- *      -Xbootclasspath\/a:. -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI\n- *      -XX:VerifyMetaspaceInterval=10\n- *      -XX:MetaspaceReclaimPolicy=aggressive\n- *      TestMetaspaceAllocationMT2\n- *\/\n-\n@@ -112,17 +94,0 @@\n-\/*\n- * @test id=ndebug-aggressive\n- * @library \/test\/lib\n- * @modules java.base\/jdk.internal.misc\n- *          java.management\n- * @build jdk.test.whitebox.WhiteBox\n- * @key randomness\n- * @requires (vm.debug == false)\n- *\n- * @run driver jdk.test.lib.helpers.ClassFileInstaller jdk.test.whitebox.WhiteBox\n- *\n- * @run main\/othervm\/timeout=400\n- *      -Xbootclasspath\/a:. -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI\n- *      -XX:MetaspaceReclaimPolicy=aggressive\n- *      TestMetaspaceAllocationMT2\n- *\/\n-\n","filename":"test\/hotspot\/jtreg\/runtime\/Metaspace\/elastic\/TestMetaspaceAllocationMT2.java","additions":0,"deletions":35,"binary":false,"changes":35,"status":"modified"}]}