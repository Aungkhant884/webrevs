{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -139,1 +139,1 @@\n-     * Create a UnixDomainSocketAddress from the given path string.\n+     * Creates a UnixDomainSocketAddress from the given path string.\n@@ -156,1 +156,1 @@\n-     * Create a UnixDomainSocketAddress for the given path.\n+     * Creates a UnixDomainSocketAddress for the given path.\n@@ -173,1 +173,1 @@\n-     * Return this address's path.\n+     * Returns this address's path.\n","filename":"src\/java.base\/share\/classes\/java\/net\/UnixDomainSocketAddress.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n- * @run main\/othervm AddressTest\n+ * @run testng\/othervm AddressTest\n@@ -32,2 +32,4 @@\n-import java.nio.channels.*;\n-import java.nio.file.InvalidPathException;\n+\n+import org.testng.annotations.Test;\n+\n+import static org.testng.Assert.assertThrows;\n@@ -39,3 +41,3 @@\n-    public static void main(String args[]) throws Exception {\n-        runTest();\n-    }\n+    \/\/ Expected exception\n+    private static final Class<IllegalArgumentException> IAE =\n+        IllegalArgumentException.class;\n@@ -43,0 +45,1 @@\n+    @Test\n@@ -45,4 +48,1 @@\n-        try {\n-            addr = UnixDomainSocketAddress.of(path);\n-            throw new RuntimeException(\"Expected illegal path exception\");\n-        } catch (IllegalArgumentException e) {}\n+        assertThrows(IAE, () -> UnixDomainSocketAddress.of(path));\n","filename":"test\/jdk\/java\/nio\/channels\/unixdomain\/AddressTest.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"}]}