{"files":[{"patch":"@@ -276,0 +276,1 @@\n+        requireNonNull(remote);\n","filename":"src\/java.base\/share\/classes\/java\/nio\/channels\/SocketChannel.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 8231358\n+ * @bug 8245194\n","filename":"test\/jdk\/java\/nio\/channels\/unixdomain\/Bind.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 8231358\n+ * @bug 8245194\n","filename":"test\/jdk\/java\/nio\/channels\/unixdomain\/IOExchanges.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 8231358\n+ * @bug 8245194\n","filename":"test\/jdk\/java\/nio\/channels\/unixdomain\/NonBlockingAccept.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,56 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test\n+ * @bug 8245194\n+ * @run testng NullTest\n+ *\/\n+\n+import java.net.ProtocolFamily;\n+import java.net.SocketAddress;\n+import java.net.UnixDomainSocketAddress;\n+import java.nio.channels.*;\n+import java.nio.file.Path;\n+import org.testng.annotations.Test;\n+import static org.testng.Assert.assertThrows;\n+\n+\/**\n+ * Check for NPE\n+ *\/\n+public class NullTest {\n+\n+    \/\/ Expected exception\n+    private static final Class<NullPointerException> NPE =\n+        NullPointerException.class;\n+\n+    @Test\n+    public static void runTest() throws Exception {\n+        assertThrows(NPE, () -> SocketChannel.open((ProtocolFamily)null));\n+        assertThrows(NPE, () -> SocketChannel.open((SocketAddress)null));\n+        assertThrows(NPE, () -> ServerSocketChannel.open((ProtocolFamily)null));\n+        assertThrows(NPE, () -> UnixDomainSocketAddress.of((Path)null));\n+        assertThrows(NPE, () -> UnixDomainSocketAddress.of((String)null));\n+    }\n+\n+}\n","filename":"test\/jdk\/java\/nio\/channels\/unixdomain\/NullTest.java","additions":56,"deletions":0,"binary":false,"changes":56,"status":"added"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 8231358\n+ * @bug 8245194\n","filename":"test\/jdk\/java\/nio\/channels\/unixdomain\/Security.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 8231358\n+ * @bug 8245194\n","filename":"test\/jdk\/java\/nio\/channels\/unixdomain\/Shutdown.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 8231358\n+ * @bug 8245194\n","filename":"test\/jdk\/java\/nio\/channels\/unixdomain\/SocketOptions.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}