{"files":[{"patch":"@@ -142,1 +142,1 @@\n-        return provider.getUnixDomainPathInBytes(path);\n+        return provider.getByteArrayForSocket(path);\n","filename":"src\/java.base\/share\/classes\/sun\/nio\/ch\/UnixDomainNet.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -162,1 +162,1 @@\n-    public abstract byte[] getUnixDomainPathInBytes(Path file) throws IOException;\n+    public abstract byte[] getByteArrayForSocket(Path file) throws IOException;\n","filename":"src\/java.base\/share\/classes\/sun\/nio\/fs\/AbstractFileSystemProvider.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -562,1 +562,1 @@\n-    public byte[] getUnixDomainPathInBytes(Path file) {\n+    public byte[] getByteArrayForSocket(Path file) {\n","filename":"src\/java.base\/unix\/classes\/sun\/nio\/fs\/UnixFileSystemProvider.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -65,0 +65,2 @@\n+    \/\/ Allowed to buffer data if set\n+    private final boolean buffering;\n@@ -123,1 +125,1 @@\n-                            ssc = getServer();\n+                            ssc = createListener();\n@@ -152,1 +154,1 @@\n-                    sink = new SinkChannelImpl(sp, sc2);\n+                    sink = new SinkChannelImpl(sp, sc2, buffering);\n@@ -174,0 +176,5 @@\n+        this(sp, true);\n+    }\n+\n+    PipeImpl(final SelectorProvider sp, boolean buffering) throws IOException {\n+        this.buffering = buffering;\n@@ -189,2 +196,4 @@\n-    private static ServerSocketChannel getServer() throws IOException {\n-        ServerSocketChannel server;\n+    private static volatile boolean tryUnixDomain = true;\n+\n+    private static ServerSocketChannel createListener() throws IOException {\n+        ServerSocketChannel listener = null;\n@@ -192,2 +201,4 @@\n-            server = ServerSocketChannel.open(StandardProtocolFamily.UNIX);\n-            server.bind(null);\n+            if (tryUnixDomain) {\n+                listener = ServerSocketChannel.open(StandardProtocolFamily.UNIX);\n+                return listener.bind(null);\n+            }\n@@ -197,3 +208,3 @@\n-            server = ServerSocketChannel.open();\n-            InetAddress lb = InetAddress.getLoopbackAddress();\n-            server.bind(new InetSocketAddress(lb, 0));\n+            tryUnixDomain = false;\n+            if (listener != null)\n+                listener.close();\n@@ -201,1 +212,4 @@\n-        return server;\n+        listener = ServerSocketChannel.open();\n+        InetAddress lb = InetAddress.getLoopbackAddress();\n+        listener.bind(new InetSocketAddress(lb, 0));\n+        return listener;\n@@ -203,1 +217,0 @@\n-\n","filename":"src\/java.base\/windows\/classes\/sun\/nio\/ch\/PipeImpl.java","additions":24,"deletions":11,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -58,2 +58,4 @@\n-    void setNoDelay() throws IOException {\n-        if (sc instanceof InetSocketChannelImpl) {\n+    SinkChannelImpl(SelectorProvider sp, SocketChannel sc, boolean buffering) throws IOException {\n+        super(sp);\n+        this.sc = sc;\n+        if (!buffering && sc instanceof InetSocketChannelImpl) {\n@@ -65,5 +67,0 @@\n-    SinkChannelImpl(SelectorProvider sp, SocketChannel sc) {\n-        super(sp);\n-        this.sc = sc;\n-    }\n-\n","filename":"src\/java.base\/windows\/classes\/sun\/nio\/ch\/SinkChannelImpl.java","additions":4,"deletions":7,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -142,1 +142,1 @@\n-        wakeupPipe = Pipe.open();\n+        wakeupPipe = new PipeImpl(sp, false);\n@@ -147,1 +147,0 @@\n-        sink.setNoDelay();\n","filename":"src\/java.base\/windows\/classes\/sun\/nio\/ch\/WindowsSelectorImpl.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -628,1 +628,1 @@\n-    public byte[] getUnixDomainPathInBytes(Path file) throws IOException {\n+    public byte[] getByteArrayForSocket(Path file) throws IOException {\n","filename":"src\/java.base\/windows\/classes\/sun\/nio\/fs\/WindowsFileSystemProvider.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}