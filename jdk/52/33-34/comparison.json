{"files":[{"patch":"@@ -134,1 +134,1 @@\n-    return (((long)cred.uid) << 32) | (cred.gid & 0xffffffffL);\n+    return (((jlong)cred.uid) << 32) | (cred.gid & 0xffffffffL);\n","filename":"src\/jdk.net\/linux\/native\/libextnet\/LinuxSocketOptions.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-import org.testng.annotations.BeforeTest;\n@@ -45,1 +44,0 @@\n-    static boolean supported = true;\n@@ -48,11 +46,0 @@\n-    @BeforeTest\n-    public void setup() {\n-        try {\n-            SocketChannel.open(UNIX);\n-        }\n-        catch (IOException | UnsupportedOperationException e) {\n-            supported = false;\n-            out.println(\"Unix domain channels not supported. Test not run.\");\n-        }\n-    }\n-\n@@ -74,7 +61,5 @@\n-        if (supported) {\n-            var addr = UnixDomainSocketAddress.of(s);\n-            assertTrue(addr.getPath().toString().equals(s), \"getPathName.equals(s)\");\n-            var p = Path.of(s);\n-            addr = UnixDomainSocketAddress.of(p);\n-            assertTrue(addr.getPath().equals(p), \"getPath.equals(p)\");\n-        }\n+        var addr = UnixDomainSocketAddress.of(s);\n+        assertTrue(addr.getPath().toString().equals(s), \"getPathName.equals(s)\");\n+        var p = Path.of(s);\n+        addr = UnixDomainSocketAddress.of(p);\n+        assertTrue(addr.getPath().equals(p), \"getPath.equals(p)\");\n@@ -85,15 +70,13 @@\n-        if (supported) {\n-            try {\n-                String s = null;\n-                UnixDomainSocketAddress.of(s);\n-                throw new RuntimeException(\"Expected NPE\");\n-            } catch (NullPointerException npe) {\n-                out.println(\"\\tCaught expected exception: \" + npe);\n-            }\n-            try {\n-                Path p = null;\n-                UnixDomainSocketAddress.of(p);\n-                throw new RuntimeException(\"Expected NPE\");\n-            } catch (NullPointerException npe) {\n-                out.println(\"\\tCaught expected exception: \" + npe);\n-            }\n+        try {\n+            String s = null;\n+            UnixDomainSocketAddress.of(s);\n+            throw new RuntimeException(\"Expected NPE\");\n+        } catch (NullPointerException npe) {\n+            out.println(\"\\tCaught expected exception: \" + npe);\n+        }\n+        try {\n+            Path p = null;\n+            UnixDomainSocketAddress.of(p);\n+            throw new RuntimeException(\"Expected NPE\");\n+        } catch (NullPointerException npe) {\n+            out.println(\"\\tCaught expected exception: \" + npe);\n","filename":"test\/jdk\/java\/net\/UnixDomainSocketAddress\/LengthTest.java","additions":18,"deletions":35,"binary":false,"changes":53,"status":"modified"},{"patch":"@@ -27,0 +27,1 @@\n+ * @library \/test\/lib\n@@ -36,0 +37,1 @@\n+import jtreg.SkippedException;\n@@ -49,4 +51,1 @@\n-        if (!supported()) {\n-            System.out.println(\"Unix domain channels not supported\");\n-            return;\n-        }\n+        checkSupported();\n@@ -62,1 +61,1 @@\n-    static boolean supported() {\n+    static void checkSupported() {\n@@ -66,1 +65,1 @@\n-            return false;\n+            throw new SkippedException(\"Unix domain channels not supported\");\n@@ -68,1 +67,1 @@\n-            return true; \/\/ continue test to see what problem is\n+            \/\/ continue test to see what problem is\n@@ -70,1 +69,0 @@\n-        return true;\n","filename":"test\/jdk\/java\/nio\/channels\/unixdomain\/Bind.java","additions":6,"deletions":8,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,1 +49,1 @@\n-    static boolean supported = true;\n+    static boolean unixDomainSupported = true;\n@@ -57,1 +57,1 @@\n-            supported = false;\n+            unixDomainSupported = false;\n@@ -123,1 +123,1 @@\n-        return supported ?\n+        return unixDomainSupported ?\n","filename":"test\/jdk\/java\/nio\/channels\/unixdomain\/IOExchanges.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -27,0 +27,1 @@\n+ * @library \/test\/lib\n@@ -33,0 +34,1 @@\n+import jtreg.SkippedException;\n@@ -36,1 +38,1 @@\n-    static boolean supported() {\n+    static void checkSupported() {\n@@ -40,1 +42,1 @@\n-            return false;\n+            throw new SkippedException(\"Unix domain sockets not supported\");\n@@ -42,1 +44,1 @@\n-            return true;\n+            \/\/ continue\n@@ -44,1 +46,0 @@\n-        return true;\n@@ -49,3 +50,1 @@\n-        if (!supported()) {\n-            return;\n-        }\n+        checkSupported();\n@@ -60,1 +59,3 @@\n-            \/\/ exception could be thrown otherwise\n+            if (socketChannel != null)\n+                throw new RuntimeException(\"expected null\");\n+            \/\/ or exception could be thrown otherwise\n","filename":"test\/jdk\/java\/nio\/channels\/unixdomain\/NonBlockingAccept.java","additions":9,"deletions":8,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -0,0 +1,22 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n","filename":"test\/jdk\/java\/nio\/channels\/unixdomain\/policy1","additions":22,"deletions":0,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -0,0 +1,22 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n","filename":"test\/jdk\/java\/nio\/channels\/unixdomain\/policy2","additions":22,"deletions":0,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -0,0 +1,22 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n","filename":"test\/jdk\/java\/nio\/channels\/unixdomain\/policy3","additions":22,"deletions":0,"binary":false,"changes":22,"status":"modified"}]}