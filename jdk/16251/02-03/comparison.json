{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022,2023 Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/java.base\/share\/classes\/sun\/nio\/ch\/SocketInputStream.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022,2023 Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/java.base\/share\/classes\/sun\/nio\/ch\/SocketOutputStream.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -49,0 +49,2 @@\n+ * @bug 8310978\n+ * @summary test socket read\/write events on socket adaptors\n@@ -75,1 +77,0 @@\n-                ssc.socket().setReuseAddress(true);\n","filename":"test\/jdk\/jdk\/jfr\/event\/io\/TestSocketAdapterEvents.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,2 @@\n+import java.net.InetAddress;\n+import java.net.InetSocketAddress;\n@@ -44,0 +46,1 @@\n+ * @summary test socket read\/write events on SocketChannel\n@@ -65,1 +68,1 @@\n-            try (ServerSocketChannel ss = ServerSocketChannel.open()) {\n+            try (ServerSocketChannel ssc = ServerSocketChannel.open()) {\n@@ -70,2 +73,2 @@\n-                ss.socket().setReuseAddress(true);\n-                ss.socket().bind(null);\n+                InetAddress lb = InetAddress.getLoopbackAddress();\n+                ssc.bind(new InetSocketAddress(lb, 0));\n@@ -78,1 +81,1 @@\n-                        try (SocketChannel sc = ss.accept()) {\n+                        try (SocketChannel sc = ssc.accept()) {\n@@ -101,1 +104,1 @@\n-                try (SocketChannel sc = SocketChannel.open(ss.socket().getLocalSocketAddress())) {\n+                try (SocketChannel sc = SocketChannel.open(ssc.getLocalAddress())) {\n","filename":"test\/jdk\/jdk\/jfr\/event\/io\/TestSocketChannelEvents.java","additions":9,"deletions":6,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,0 +31,2 @@\n+import java.net.InetAddress;\n+import java.net.InetSocketAddress;\n@@ -45,0 +47,1 @@\n+ * @summary test socket read\/write events on Socket\n@@ -72,2 +75,2 @@\n-                ss.setReuseAddress(true);\n-                ss.bind(null);\n+                InetAddress lb = InetAddress.getLoopbackAddress();\n+                ss.bind(new InetSocketAddress(lb, 0));\n","filename":"test\/jdk\/jdk\/jfr\/event\/io\/TestSocketEvents.java","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"}]}