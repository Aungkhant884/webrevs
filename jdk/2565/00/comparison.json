{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -1905,1 +1905,1 @@\n-    static Pattern historyPattern = Pattern.compile(\"((!\\\\*)|(!\\\\$)|(!!-?)|(!-?[0-9][0-9]*)|(![a-zA-Z][^ ]*))\");\n+    static Pattern historyPattern = Pattern.compile(\"([\\\\\\\\]?)((!\\\\*)|(!\\\\$)|(!!-?)|(!-?[0-9][0-9]*)|(![a-zA-Z][^ ]*))\");\n@@ -1918,0 +1918,1 @@\n+                    \/\/ Capture the text preceding the matched text.\n@@ -1919,1 +1920,1 @@\n-                        result.append(ln.substring(start, m.start() - start));\n+                        result.append(ln.substring(start, m.start()));\n@@ -1923,1 +1924,8 @@\n-                    String cmd = m.group();\n+                    if (m.group(1).length() != 0) {\n+                        \/\/ This means we matched a `\\` before the '!'. Don't do any history\n+                        \/\/ expansion in this case. Just capture what matched after the `\\`.\n+                        result.append(m.group(2));\n+                        continue;\n+                    }\n+\n+                    String cmd = m.group(2);\n@@ -1967,0 +1975,1 @@\n+                                    break; \/\/ only capture the most recent match in the history\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/CommandProcessor.java","additions":13,"deletions":4,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -0,0 +1,105 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+import jdk.test.lib.apps.LingeredApp;\n+import jdk.test.lib.Utils;\n+import jtreg.SkippedException;\n+\n+\/**\n+ * @test\n+ * @bug 8190198\n+ * @bug 8217612\n+ * @bug 8217845\n+ * @summary Test clhsdb command line history support\n+ * @requires vm.hasSA\n+ * @library \/test\/lib\n+ * @run main\/othervm ClhsdbHistory\n+ *\/\n+\n+public class ClhsdbHistory {\n+\n+    public static void testHistory() throws Exception {\n+        System.out.println(\"Starting ClhsdbHistory basic test\");\n+\n+        LingeredApp theApp = null;\n+        try {\n+            ClhsdbLauncher test = new ClhsdbLauncher();\n+            theApp = LingeredApp.startApp();\n+            System.out.println(\"Started LingeredApp with pid \" + theApp.getPid());\n+\n+            List<String> cmds = List.of(\n+                    \"echo true\",\n+                    \"assert false\",\n+                    \"!!\",                 \/\/ !! repeats previous command\n+                    \"versioncheck !$\",    \/\/ !$ is last argument from previous command\n+                    \"assert foo bar baz\",\n+                    \"versioncheck !*\",    \/\/ !* is all arguments from previous command\n+                    \"versioncheck !$ !$\", \/\/ !$ !$ should result in \"baz baz\"\n+                    \"assert maybe never\",\n+                    \"!!- !*\",             \/\/ !!- is the previous command, minus the last arg\n+                    \"!echo\",              \/\/ match previous echo command, with args\n+                    \"assert \\\\!foo\",      \/\/ quote the ! so it is not used for command history expansion\n+                    \"!10\",                \/\/ match the 10th command in the history, with args\n+                    \"history\");\n+\n+            \/\/ Unfortunately we can't create a map table that maps the clhsdb commands above\n+            \/\/ to the expected output because the commands as you see them above won't be in\n+            \/\/ the output. Instead their expanded forms will. So instead we just rely on\n+            \/\/ the history output looking as expected.\n+            Map<String, List<String>> expStrMap = new HashMap<>();\n+            expStrMap.put(\"history\", List.of(\n+                \"0 echo true\",    \/\/ issued by ClhsdbLauncher\n+                \"1 verbose true\", \/\/ issued by ClhsdbLauncher\n+                \"2 echo true\",\n+                \"3 assert false\",\n+                \"4 assert false\",\n+                \"5 versioncheck false\",\n+                \"6 assert foo bar baz\",\n+                \"7 versioncheck foo bar baz\",\n+                \"8 versioncheck baz baz\",\n+                \"9 assert maybe never\",\n+                \"10 assert maybe maybe never\",\n+                \"11 echo true\",\n+                \"12 assert !foo\",\n+                \"13 assert maybe maybe never\",\n+                \"14 history\"));\n+\n+            test.run(theApp.getPid(), cmds, expStrMap, null);\n+        } catch (SkippedException se) {\n+            throw se;\n+        } catch (Exception ex) {\n+            throw new RuntimeException(\"Test ERROR \" + ex, ex);\n+        } finally {\n+            LingeredApp.stopApp(theApp);\n+        }\n+        System.out.println(\"Test PASSED\");\n+    }\n+\n+    public static void main(String[] args) throws Exception {\n+        testHistory();\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/serviceability\/sa\/ClhsdbHistory.java","additions":105,"deletions":0,"binary":false,"changes":105,"status":"added"}]}