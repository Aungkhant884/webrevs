{"files":[{"patch":"@@ -355,1 +355,8 @@\n-        return (name.asByteArray()[0] == '.');\n+\n+        byte[] path;\n+        if (name.isEmpty()) { \/\/ corner case for empty paths\n+            path = name.getFileSystem().defaultDirectory();\n+        } else {\n+            path = name.asByteArray();\n+        }\n+        return path[0] == '.';\n","filename":"src\/java.base\/unix\/classes\/sun\/nio\/fs\/UnixFileSystemProvider.java","additions":8,"deletions":1,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -246,1 +246,1 @@\n-    private boolean isEmpty() {\n+    boolean isEmpty() {\n","filename":"src\/java.base\/unix\/classes\/sun\/nio\/fs\/UnixPath.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -25,1 +25,1 @@\n- * @bug 4313887 6838333 8005566 8032220 8215467\n+ * @bug 4313887 6838333 8005566 8032220 8215467 8255576\n@@ -90,0 +90,3 @@\n+        \/\/ passing an empty path must not throw any runtime exception\n+        assertTrue(!isHidden(Path.of(\"\")));\n+\n","filename":"test\/jdk\/java\/nio\/file\/Files\/Misc.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"}]}