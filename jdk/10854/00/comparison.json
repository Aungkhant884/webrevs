{"files":[{"patch":"@@ -44,1 +44,2 @@\n-            p.setSelectedNodes(c.getNodes());\n+            p.clearSelectedNodes();\n+            p.addSelectedNodes(c.getNodes());\n","filename":"src\/utils\/IdealGraphVisualizer\/Bytecodes\/src\/main\/java\/com\/sun\/hotspot\/igv\/bytecodes\/SelectBytecodesAction.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -136,1 +136,2 @@\n-            p.setSelectedNodes(inputNodes);\n+            p.clearSelectedNodes();\n+            p.addSelectedNodes(inputNodes);\n","filename":"src\/utils\/IdealGraphVisualizer\/ControlFlow\/src\/main\/java\/com\/sun\/hotspot\/igv\/controlflow\/ControlFlowScene.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n-import java.util.Set;\n+import java.util.Collection;\n@@ -39,1 +39,4 @@\n-    void setSelectedNodes(Set<InputNode> nodes);\n+    void addSelectedNodes(Collection<InputNode> nodes);\n+\n+    void clearSelectedNodes();\n+\n","filename":"src\/utils\/IdealGraphVisualizer\/Data\/src\/main\/java\/com\/sun\/hotspot\/igv\/data\/services\/InputGraphProvider.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -61,1 +61,0 @@\n-                        os.setAssociatedNode(f.getInputNode());\n@@ -78,1 +77,0 @@\n-                        is.setAssociatedNode(f.getInputNode());\n","filename":"src\/utils\/IdealGraphVisualizer\/Filter\/src\/main\/java\/com\/sun\/hotspot\/igv\/filter\/SplitFilter.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -90,2 +90,2 @@\n-                            final EditorTopComponent comp = EditorTopComponent.getActive();\n-                            assert(comp != null);\n+                            final EditorTopComponent editor = EditorTopComponent.getActive();\n+                            assert(editor != null);\n@@ -93,1 +93,1 @@\n-                                comp.getModel().selectGraph(theGraph);\n+                                editor.getModel().selectGraph(theGraph);\n@@ -95,2 +95,3 @@\n-                            comp.setSelectedNodes(b);\n-                            comp.requestActive();\n+                            editor.clearSelectedNodes();\n+                            editor.addSelectedNodes(b.getNodes(), true);\n+                            editor.requestActive();\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/BlockQuickSearch.java","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -35,3 +35,1 @@\n-import com.sun.hotspot.igv.util.ColorIcon;\n-import com.sun.hotspot.igv.util.DoubleClickAction;\n-import com.sun.hotspot.igv.util.PropertiesSheet;\n+import com.sun.hotspot.igv.util.*;\n@@ -73,1 +71,1 @@\n-public class DiagramScene extends ObjectScene implements DiagramViewer {\n+public class DiagramScene extends ObjectScene implements DiagramViewer, DoubleClickHandler {\n@@ -189,2 +187,1 @@\n-    public void centerFigures(List<Figure> figures) {\n-        Rectangle overall = null;\n+    public void centerFigures(Collection<Figure> figures) {\n@@ -192,12 +189,13 @@\n-        for (Figure f : figures) {\n-            FigureWidget fw = getWidget(f);\n-            if (fw != null) {\n-                Rectangle r = fw.getBounds();\n-                Point p = fw.getLocation();\n-                assert r != null;\n-                Rectangle r2 = new Rectangle(p.x, p.y, r.width, r.height);\n-\n-                if (overall == null) {\n-                    overall = r2;\n-                } else {\n-                    overall = overall.union(r2);\n+        Rectangle overallRect = null;\n+        for (Figure figure : figures) {\n+            FigureWidget figureWidget = getWidget(figure);\n+            if (figureWidget != null) {\n+                Rectangle bounds = figureWidget.getBounds();\n+                if (bounds != null) {\n+                    Point location = figureWidget.getLocation();\n+                    Rectangle figureRect = new Rectangle(location.x, location.y, bounds.width, bounds.height);\n+                    if (overallRect == null) {\n+                        overallRect = figureRect;\n+                    } else {\n+                        overallRect = overallRect.union(figureRect);\n+                    }\n@@ -207,2 +205,2 @@\n-        if (overall != null) {\n-            centerRectangle(overall);\n+        if (overallRect != null) {\n+            centerRectangle(overallRect);\n@@ -224,1 +222,9 @@\n-            gotoSelection(source.getSelectedObjects());\n+            Set<Integer> ids = source.getSelectedObjects();\n+            Set<Figure> figures = new HashSet<>();\n+            for (Figure f : getModel().getDiagram().getFigures()) {\n+                if (ids.contains(f.getInputNode().getId())) {\n+                    figures.add(f);\n+                }\n+            }\n+            centerFigures(figures);\n+            setSelectedObjects(idSetToObjectSet(ids));\n@@ -289,0 +295,3 @@\n+        \/\/ handle default double-click, when not handled by other DoubleClickHandler\n+        getActions().addAction(new DoubleClickAction(this));\n+\n@@ -378,1 +387,6 @@\n-            setSelectedObjects(selectedObjects);\n+            Set<Object> symmetricDiff = new HashSet<>(getSelectedObjects());\n+            symmetricDiff.addAll(selectedObjects);\n+            Set<Object> tmp = new HashSet<>(getSelectedObjects());\n+            tmp.retainAll(selectedObjects);\n+            symmetricDiff.removeAll(tmp);\n+            setSelectedObjects(symmetricDiff);\n@@ -490,4 +504,2 @@\n-    public Action createGotoAction(final Figure f) {\n-        final DiagramScene diagramScene = this;\n-        String name = f.getLines()[0];\n-\n+    public Action createGotoAction(final Figure figure) {\n+        String name = figure.getLines()[0];\n@@ -495,3 +507,2 @@\n-\n-        if (f.getCluster() != null) {\n-            name += \"B\" + f.getCluster().toString();\n+        if (figure.getCluster() != null) {\n+            name += \"B\" + figure.getCluster().toString();\n@@ -499,3 +510,3 @@\n-        final boolean hidden = !getWidget(f, FigureWidget.class).isVisible();\n-        if (hidden) {\n-            if (f.getCluster() != null) {\n+        boolean isHidden = !getWidget(figure, FigureWidget.class).isVisible();\n+        if (isHidden) {\n+            if (figure.getCluster() != null) {\n@@ -507,2 +518,1 @@\n-        Action a = new AbstractAction(name, new ColorIcon(f.getColor())) {\n-\n+        Action action = new AbstractAction(name, new ColorIcon(figure.getColor())) {\n@@ -511,1 +521,2 @@\n-                diagramScene.gotoFigure(f);\n+                setFigureSelection(Collections.singleton(figure));\n+                centerFigures(Collections.singleton(figure));\n@@ -515,2 +526,2 @@\n-        a.setEnabled(true);\n-        return a;\n+        action.setEnabled(true);\n+        return action;\n@@ -519,4 +530,3 @@\n-    public Action createGotoAction(final Block b) {\n-        final DiagramScene diagramScene = this;\n-        String name = \"B\" + b.getInputBlock().getName();\n-        Action a = new AbstractAction(name) {\n+    public Action createGotoAction(final Block block) {\n+        String name = \"B\" + block.getInputBlock().getName();\n+        Action action = new AbstractAction(name) {\n@@ -525,1 +535,1 @@\n-                diagramScene.gotoBlock(b);\n+                gotoBlock(block);\n@@ -528,2 +538,2 @@\n-        a.setEnabled(true);\n-        return a;\n+        action.setEnabled(true);\n+        return action;\n@@ -564,1 +574,1 @@\n-            FigureWidget w = new FigureWidget(f, hoverAction, selectAction, this, mainLayer);\n+            FigureWidget w = new FigureWidget(f, this, mainLayer);\n@@ -591,1 +601,2 @@\n-                BlockWidget w = new BlockWidget(this, d, bn);\n+                BlockWidget w = new BlockWidget(this, bn);\n+                w.getActions().addAction(new DoubleClickAction(w));\n@@ -894,0 +905,5 @@\n+    @Override\n+    public void handleDoubleClick(Widget w, WidgetAction.WidgetMouseEvent e) {\n+        setSelectedObjects(Collections.emptySet());\n+    }\n+\n@@ -935,32 +951,0 @@\n-    private void gotoSelection(Set<Integer> ids) {\n-\n-        Rectangle overall = null;\n-        Set<Integer> hiddenNodes = new HashSet<>(getModel().getHiddenNodes());\n-        hiddenNodes.removeAll(ids);\n-        getModel().setHiddenNodes(hiddenNodes);\n-\n-        Set<Object> objects = idSetToObjectSet(ids);\n-        for (Object o : objects) {\n-\n-            Widget w = getWidget(o);\n-            if (w != null) {\n-                Rectangle r = w.getBounds();\n-                Point p = w.convertLocalToScene(new Point(0, 0));\n-\n-                assert r != null;\n-                Rectangle r2 = new Rectangle(p.x, p.y, r.width, r.height);\n-\n-                if (overall == null) {\n-                    overall = r2;\n-                } else {\n-                    overall = overall.union(r2);\n-                }\n-            }\n-        }\n-        if (overall != null) {\n-            centerRectangle(overall);\n-        }\n-\n-        setSelectedObjects(objects);\n-    }\n-\n@@ -989,1 +973,1 @@\n-    public void setSelection(Collection<Figure> list) {\n+    public void setFigureSelection(Set<Figure> list) {\n@@ -1007,4 +991,0 @@\n-    private boolean isVisible(Figure f) {\n-        return !getModel().getHiddenNodes().contains(f.getInputNode().getId());\n-    }\n-\n@@ -1125,25 +1105,0 @@\n-    private void showFigure(Figure f) {\n-        HashSet<Integer> newHiddenNodes = new HashSet<>(getModel().getHiddenNodes());\n-        newHiddenNodes.remove(f.getInputNode().getId());\n-        getModel().setHiddenNodes(newHiddenNodes);\n-    }\n-\n-    private void centerWidget(Widget w) {\n-        Rectangle r = w.getBounds();\n-        Point p = w.getLocation();\n-        assert r != null;\n-        centerRectangle(new Rectangle(p.x, p.y, r.width, r.height));\n-    }\n-\n-    public void gotoFigure(final Figure f) {\n-        if (!isVisible(f)) {\n-            showFigure(f);\n-        }\n-\n-        FigureWidget fw = getWidget(f);\n-        if (fw != null) {\n-            centerWidget(fw);\n-            setSelection(Collections.singletonList(f));\n-        }\n-    }\n-\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/DiagramScene.java","additions":63,"deletions":108,"binary":false,"changes":171,"status":"modified"},{"patch":"@@ -245,1 +245,1 @@\n-        HashSet<Integer> newHiddenNodes = new HashSet<>(getHiddenNodes());\n+        HashSet<Integer> newHiddenNodes = new HashSet<>(hiddenNodes);\n@@ -252,1 +252,0 @@\n-\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/DiagramViewModel.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n-import java.util.List;\n+import java.util.Set;\n@@ -80,1 +80,1 @@\n-    void setSelection(Collection<Figure> list);\n+    void setFigureSelection(Set<Figure> list);\n@@ -82,1 +82,1 @@\n-    void centerFigures(List<Figure> list);\n+    void centerFigures(Collection<Figure> list);\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/DiagramViewer.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n-import java.util.Set;\n+import java.util.Collection;\n@@ -60,1 +60,1 @@\n-    public void setSelectedNodes(Set<InputNode> nodes) {\n+    public void addSelectedNodes(Collection<InputNode> nodes) {\n@@ -62,1 +62,8 @@\n-            editor.setSelectedNodes(nodes);\n+            editor.addSelectedNodes(nodes, false);\n+        }\n+    }\n+\n+    @Override\n+    public void clearSelectedNodes() {\n+        if (editor != null && EditorTopComponent.isOpen(editor)) {\n+            editor.clearSelectedNodes();\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/EditorInputGraphProvider.java","additions":10,"deletions":3,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -324,8 +324,2 @@\n-    public void setSelectedFigures(List<Figure> list) {\n-        scene.setSelection(list);\n-        scene.centerFigures(list);\n-    }\n-\n-    public void setSelectedNodes(Set<InputNode> nodes) {\n-        List<Figure> list = new ArrayList<>();\n-        Set<Integer> ids = new HashSet<>();\n+    public void addSelectedNodes(Collection<InputNode> nodes, boolean centerSelection) {\n+        Set<Integer> ids = new HashSet<>(getModel().getSelectedNodes());\n@@ -335,0 +329,1 @@\n+        Set<Figure> selectedFigures = new HashSet<>();\n@@ -337,1 +332,1 @@\n-                list.add(f);\n+                selectedFigures.add(f);\n@@ -340,1 +335,4 @@\n-        setSelectedFigures(list);\n+        scene.setFigureSelection(selectedFigures);\n+        if (centerSelection) {\n+            scene.centerFigures(selectedFigures);\n+        }\n@@ -343,8 +341,2 @@\n-    public void setSelectedNodes(InputBlock b) {\n-        List<Figure> list = new ArrayList<>();\n-        for (Figure f : getDiagram().getFigures()) {\n-            if (f.getBlock().getInputBlock() == b) {\n-                list.add(f);\n-            }\n-        }\n-        setSelectedFigures(list);\n+    public void clearSelectedNodes() {\n+        scene.setFigureSelection(Collections.emptySet());\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/EditorTopComponent.java","additions":10,"deletions":18,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -111,1 +111,1 @@\n-                final Set<InputNode> set = new HashSet<>(matches);\n+                final Set<InputNode> nodeSet = new HashSet<>(matches);\n@@ -118,10 +118,5 @@\n-                    if (!response.addResult(new Runnable() {\n-                        @Override\n-                        public void run() {\n-                            final EditorTopComponent comp = EditorTopComponent.getActive();\n-                            if (comp != null) {\n-                                if (theGraph != null) {\n-                                    comp.getModel().selectGraph(theGraph);\n-                                }\n-                                comp.setSelectedNodes(set);\n-                                comp.requestActive();\n+                    if (!response.addResult(() -> {\n+                        final EditorTopComponent editor = EditorTopComponent.getActive();\n+                        if (editor != null) {\n+                            if (theGraph != null) {\n+                                editor.getModel().selectGraph(theGraph);\n@@ -129,0 +124,3 @@\n+                            editor.clearSelectedNodes();\n+                            editor.addSelectedNodes(nodeSet, true);\n+                            editor.requestActive();\n@@ -148,2 +146,2 @@\n-                            final EditorTopComponent comp = EditorTopComponent.getActive();\n-                            if (comp != null) {\n+                            final EditorTopComponent editor = EditorTopComponent.getActive();\n+                            if (editor != null) {\n@@ -153,1 +151,1 @@\n-                                    comp.getModel().selectGraph(theGraph);\n+                                    editor.getModel().selectGraph(theGraph);\n@@ -155,2 +153,3 @@\n-                                comp.setSelectedNodes(tmpSet);\n-                                comp.requestActive();\n+                                editor.clearSelectedNodes();\n+                                editor.addSelectedNodes(tmpSet, true);\n+                                editor.requestActive();\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/NodeQuickSearch.java","additions":15,"deletions":16,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -41,18 +41,4 @@\n-            Set<Figure> oldSelection = editor.getModel().getSelectedFigures();\n-            Set<Figure> figures = new HashSet<>(oldSelection);\n-            for (Figure f : editor.getModel().getDiagram().getFigures()) {\n-                if (oldSelection.contains(f)) {\n-                    continue;\n-                }\n-\n-                boolean ok = false;\n-                for (Figure adjFig : getAdjacentFigures.apply(f)) {\n-                    if (oldSelection.contains(adjFig)) {\n-                        ok = true;\n-                        break;\n-                    }\n-                }\n-\n-                if (ok) {\n-                    figures.add(f);\n-                }\n+            Set<Figure> selectedFigured = editor.getModel().getSelectedFigures();\n+            Set<Figure> expandedFigures = new HashSet<>(selectedFigured);\n+            for (Figure selectedFigure : selectedFigured) {\n+                expandedFigures.addAll(getAdjacentFigures.apply(selectedFigure));\n@@ -60,2 +46,1 @@\n-\n-            editor.getModel().showFigures(figures);\n+            editor.getModel().showFigures(expandedFigures);\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/actions\/ExpandAdjacentAction.java","additions":5,"deletions":20,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -36,1 +36,1 @@\n-        expandFigures(Figure::getSuccessors);\n+        expandFigures(Figure::getPredecessors);\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/actions\/ExpandPredecessorsAction.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -36,1 +36,1 @@\n-        expandFigures(Figure::getPredecessors);\n+        expandFigures(Figure::getSuccessors);\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/actions\/ExpandSuccessorsAction.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,1 +27,3 @@\n-import com.sun.hotspot.igv.graph.Diagram;\n+import com.sun.hotspot.igv.data.services.InputGraphProvider;\n+import com.sun.hotspot.igv.util.DoubleClickHandler;\n+import com.sun.hotspot.igv.util.LookupHistory;\n@@ -29,0 +31,1 @@\n+import java.awt.event.MouseEvent;\n@@ -30,0 +33,1 @@\n+import org.netbeans.api.visual.action.WidgetAction;\n@@ -32,0 +36,1 @@\n+import org.openide.util.Utilities;\n@@ -37,1 +42,1 @@\n-public class BlockWidget extends Widget {\n+public class BlockWidget extends Widget implements DoubleClickHandler {\n@@ -42,1 +47,1 @@\n-    private InputBlock blockNode;\n+    private final InputBlock blockNode;\n@@ -44,1 +49,1 @@\n-    public BlockWidget(Scene scene, Diagram d, InputBlock blockNode) {\n+    public BlockWidget(Scene scene, InputBlock blockNode) {\n@@ -74,0 +79,22 @@\n+\n+    private void addToSelection(BlockWidget blockWidget, boolean additiveSelection) {\n+        InputGraphProvider graphProvider = LookupHistory.getLast(InputGraphProvider.class);\n+        if (graphProvider != null) {\n+            if (!additiveSelection) {\n+                graphProvider.clearSelectedNodes();\n+            }\n+            graphProvider.addSelectedNodes(blockWidget.blockNode.getNodes());\n+        }\n+    }\n+\n+    private int getModifierMask () {\n+        return Utilities.isMac() ? MouseEvent.META_DOWN_MASK : MouseEvent.CTRL_DOWN_MASK;\n+    }\n+\n+    @Override\n+    public void handleDoubleClick(Widget widget, WidgetAction.WidgetMouseEvent event) {\n+        assert widget instanceof BlockWidget;\n+        BlockWidget blockWidget = (BlockWidget) widget;\n+        boolean additiveSelection = (event.getModifiersEx() & getModifierMask()) != 0;\n+        addToSelection(blockWidget, additiveSelection);\n+    }\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/widgets\/BlockWidget.java","additions":31,"deletions":4,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -87,1 +87,1 @@\n-    public FigureWidget(final Figure f, WidgetAction hoverAction, WidgetAction selectAction, DiagramScene scene, Widget parent) {\n+    public FigureWidget(final Figure f, DiagramScene scene, Widget parent) {\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/widgets\/FigureWidget.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}