{"files":[{"patch":"@@ -1635,1 +1635,1 @@\n-  jcc(Assembler::below, L_2TAG_PACKET_3_0_2);\n+  jcc(Assembler::less, L_2TAG_PACKET_3_0_2);\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86_pow.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,65 @@\n+\/*\n+ * Copyright (c) 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8255368\n+ * @summary Tests corner cases of Math.exp\n+ * @author Xubo Zhang\n+ *\/\n+\n+public class ExpCornerCaseTests {\n+    private ExpCornerCaseTests(){}\n+\n+    public static void main(String... args) {\n+        int failures = 0;\n+\n+        failures += testExpCornerCases();\n+\n+        if (failures > 0) {\n+            System.err.printf(\"Testing exp corner cases incurred %d failures.%n\", failures);\n+            throw new RuntimeException();\n+        }\n+    }\n+\n+    private static int testExpCornerCases() {\n+        int failures = 0;\n+        double [][] testCases = {\n+           {+0x4.0p8,                  Double.POSITIVE_INFINITY}, \n+           {+0x2.71p12,                Double.POSITIVE_INFINITY}, \n+         };\n+\n+        for (double[] testCase : testCases) {\n+            failures += testExp(testCase[0], testCase[1]);\n+        }\n+\n+        return failures;\n+    }\n+\n+    private static int testExp(double input, double expected) {\n+        int failures = 0;\n+        failures += Tests.test(\"StrictMath.exp\", input, StrictMath.exp(input), expected);\n+        failures += Tests.test(\"Math.exp\", input, Math.exp(input), expected);\n+        return failures;\n+    }\n+}\n","filename":"test\/jdk\/java\/lang\/Math\/ExpCornerCaseTests.java","additions":65,"deletions":0,"binary":false,"changes":65,"status":"added"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 4900206 8255368\n+ * @bug 4900206\n@@ -117,2 +117,0 @@\n-            {+0x4.0p8,                  Double.POSITIVE_INFINITY}, \/\/bug 8255368 gave 0\n-            {+0x2.71p12,                Double.POSITIVE_INFINITY}, \/\/bug 8255368 gave 0\n","filename":"test\/jdk\/java\/lang\/Math\/WorstCaseTests.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"}]}