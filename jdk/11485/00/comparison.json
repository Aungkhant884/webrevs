{"files":[{"patch":"@@ -1469,0 +1469,1 @@\n+  _card_set_freelist_pool(G1CardSetConfiguration::num_mem_object_types()),\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -44,0 +44,1 @@\n+#include \"gc\/g1\/g1MonotonicArenaFreePool.hpp\"\n@@ -790,0 +791,2 @@\n+  G1MonotonicArenaFreePool _card_set_freelist_pool;\n+\n@@ -916,0 +919,3 @@\n+  const G1MonotonicArenaFreePool* card_set_freelist_pool() const { return &_card_set_freelist_pool; }\n+  G1MonotonicArenaFreePool* card_set_freelist_pool() { return &_card_set_freelist_pool; }\n+\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.hpp","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -3055,0 +3055,2 @@\n+  G1CollectedHeap* g1h = G1CollectedHeap::heap();\n+  _total_remset_bytes += g1h->card_set_freelist_pool()->mem_size();\n@@ -3056,1 +3058,1 @@\n-  _total_remset_bytes += G1CardSetFreePool::free_list_pool()->mem_size() + HeapRegionRemSet::static_mem_size();\n+  _total_remset_bytes += HeapRegionRemSet::static_mem_size();\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentMark.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+#include \"gc\/g1\/g1MonotonicArenaFreePool.hpp\"\n@@ -56,1 +57,3 @@\n-  G1MonotonicArenaMemoryStats free = G1MonotonicArenaFreePool::free_list_sizes();\n+  G1CollectedHeap* g1h = G1CollectedHeap::heap();\n+  G1MonotonicArenaFreePool* freelist_pool = g1h->card_set_freelist_pool();\n+  G1MonotonicArenaMemoryStats free = freelist_pool->memory_sizes();\n@@ -72,1 +75,1 @@\n-  G1MonotonicArenaFreePool::update_unlink_processors(_return_info);\n+  freelist_pool->update_unlink_processors(_return_info);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1MonotonicArenaFreeMemoryTask.cpp","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -47,1 +47,0 @@\n-  uint num_free_lists = _freelist_pool.num_free_lists();\n@@ -49,2 +48,2 @@\n-  for (uint i = 0; i < num_free_lists; i++) {\n-    unlink_processor->at(i)->visit_free_list(_freelist_pool.free_list(i));\n+  for (uint i = 0; i < num_free_lists(); i++) {\n+    unlink_processor->at(i)->visit_free_list(free_list(i));\n@@ -151,2 +150,0 @@\n-G1MonotonicArenaFreePool G1MonotonicArenaFreePool::_freelist_pool(G1CardSetConfiguration::num_mem_object_types());\n-\n@@ -187,2 +184,2 @@\n-void G1MonotonicArenaFreePool::print_on(outputStream* out) {\n-  out->print_cr(\"  Free Pool: size %zu\", free_list_pool()->mem_size());\n+void G1MonotonicArenaFreePool::print_on(outputStream* out) const {\n+  out->print_cr(\"  Free Pool: size %zu\", mem_size());\n","filename":"src\/hotspot\/share\/gc\/g1\/g1MonotonicArenaFreePool.cpp","additions":4,"deletions":7,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -61,2 +61,0 @@\n-  \/\/ The global free pool.\n-  static G1MonotonicArenaFreePool _freelist_pool;\n@@ -68,3 +66,0 @@\n-  static G1MonotonicArenaFreePool* free_list_pool() { return &_freelist_pool; }\n-  static G1MonotonicArenaMemoryStats free_list_sizes() { return _freelist_pool.memory_sizes(); }\n-\n@@ -74,1 +69,1 @@\n-  static void update_unlink_processors(G1ReturnMemoryProcessorSet* unlink_processors);\n+  void update_unlink_processors(G1ReturnMemoryProcessorSet* unlink_processors);\n@@ -89,1 +84,1 @@\n-  void print_on(outputStream* out);\n+  void print_on(outputStream* out) const;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1MonotonicArenaFreePool.hpp","additions":2,"deletions":7,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -288,1 +288,2 @@\n-    G1CardSetFreePool::free_list_pool()->print_on(out);\n+    G1CollectedHeap* g1h = G1CollectedHeap::heap();\n+    g1h->card_set_freelist_pool()->print_on(out);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1RemSetSummary.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -62,1 +62,1 @@\n-  _card_set_mm(config, G1MonotonicArenaFreePool::free_list_pool()),\n+  _card_set_mm(config, G1CollectedHeap::heap()->card_set_freelist_pool()),\n","filename":"src\/hotspot\/share\/gc\/g1\/heapRegionRemSet.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -144,1 +144,1 @@\n-    return G1CardSet::static_mem_size() + G1CodeRootSet::static_mem_size() + sizeof(G1CardSetFreePool);\n+    return G1CardSet::static_mem_size() + G1CodeRootSet::static_mem_size();\n","filename":"src\/hotspot\/share\/gc\/g1\/heapRegionRemSet.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}