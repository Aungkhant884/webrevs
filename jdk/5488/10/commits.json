[{"commit":{"message":"Fix jit\/t\/t105\/t105.java to also use -XX:-OptimizeImplicitExceptions in addition to -XX:-OmitStacktracesInFastThrow"},"files":[{"filename":"test\/hotspot\/jtreg\/vmTestbase\/jit\/t\/t105\/t105.java"}],"sha":"9c858f393978f558c37f75f6e213ea0dac605ccd"},{"commit":{"message":"Fix IR Framework test Traps::classCheck() which now behaves differently with -XX:+OptimizeImplicitExceptions"},"files":[{"filename":"test\/hotspot\/jtreg\/testlibrary_tests\/ir_framework\/tests\/TestIRMatching.java"}],"sha":"3747cb463e1a09ee9c98fed03cb9b576349090b7"},{"commit":{"message":"Added jtreg test and extended the Whitebox API to export decompile, deopt and trap counters\nRebased on top of '8275908: Record null_check traps for calls and array_check traps in the interpreter'"},"files":[{"filename":"src\/hotspot\/share\/ci\/ciEnv.cpp"},{"filename":"src\/hotspot\/share\/ci\/ciEnv.hpp"},{"filename":"src\/hotspot\/share\/opto\/graphKit.cpp"},{"filename":"src\/hotspot\/share\/runtime\/sharedRuntime.cpp"},{"filename":"test\/hotspot\/jtreg\/compiler\/exceptions\/OptimizeImplicitExceptions.java"}],"sha":"7cc98078fd47e0cfbc0e3fa74ccf748c65fd2e1c"},{"commit":{"message":"Fix special case where we're creating an implicit exception for a regular invoke* bytecode"},"files":[{"filename":"src\/hotspot\/share\/runtime\/sharedRuntime.cpp"}],"sha":"0feafbac064d1a12b51068b784df20d3b710f789"},{"commit":{"message":"Minor updates as requested by @TheRealMDoerr"},"files":[{"filename":"src\/hotspot\/share\/ci\/ciEnv.cpp"},{"filename":"src\/hotspot\/share\/ci\/ciEnv.hpp"},{"filename":"src\/hotspot\/share\/opto\/graphKit.cpp"},{"filename":"src\/hotspot\/share\/runtime\/globals.hpp"},{"filename":"src\/hotspot\/share\/runtime\/sharedRuntime.cpp"}],"sha":"97e32c49ddeae236e90652bbf4ab72acac921dc6"},{"commit":{"message":"8273563: Improve performance of implicit exceptions with -XX:-OmitStackTraceInFastThrow"},"files":[{"filename":"src\/hotspot\/share\/ci\/ciEnv.cpp"},{"filename":"src\/hotspot\/share\/ci\/ciEnv.hpp"},{"filename":"src\/hotspot\/share\/opto\/callnode.cpp"},{"filename":"src\/hotspot\/share\/opto\/callnode.hpp"},{"filename":"src\/hotspot\/share\/opto\/graphKit.cpp"},{"filename":"src\/hotspot\/share\/opto\/machnode.hpp"},{"filename":"src\/hotspot\/share\/opto\/matcher.cpp"},{"filename":"src\/hotspot\/share\/runtime\/globals.hpp"},{"filename":"src\/hotspot\/share\/runtime\/sharedRuntime.cpp"},{"filename":"test\/micro\/org\/openjdk\/bench\/vm\/lang\/ImplicitExceptions.java"}],"sha":"4e8e00305e8994793e52081d77f57107daf7b9dc"}]