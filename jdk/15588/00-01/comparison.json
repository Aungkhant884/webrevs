{"files":[{"patch":"@@ -843,1 +843,1 @@\n-C2V_VMENTRY_0(jint, bootstrapArgumentIndexAt, (JNIEnv* env, jobject, ARGUMENT_PAIR(cp), jint index))\n+C2V_VMENTRY_0(jint, bootstrapArgumentIndexAt, (JNIEnv* env, jobject, ARGUMENT_PAIR(cp), jint cpi, jint index))\n@@ -845,1 +845,1 @@\n-  return cp->bootstrap_argument_index_at(index, 0);\n+  return cp->bootstrap_argument_index_at(cpi, index);\n@@ -3144,1 +3144,1 @@\n-  {CC \"bootstrapArgumentIndexAt\",                     CC \"(\" HS_CONSTANT_POOL2 \"I)I\",                                                       FN_PTR(bootstrapArgumentIndexAt)},\n+  {CC \"bootstrapArgumentIndexAt\",                     CC \"(\" HS_CONSTANT_POOL2 \"II)I\",                                                      FN_PTR(bootstrapArgumentIndexAt)},\n","filename":"src\/hotspot\/share\/jvmci\/jvmciCompilerToVM.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -479,2 +479,11 @@\n-    int bootstrapArgumentIndexAt(HotSpotConstantPool constantPool, int cpi) {\n-        return bootstrapArgumentIndexAt(constantPool, constantPool.getConstantPoolPointer(), cpi);\n+    \/**\n+     * Gets the constant pool index of a static argument of a bootstrap specifier. Used when the list\n+     * of static arguments in the {@link BootstrapMethodInvocation} is an {@code int[]}. The list has\n+     * two elements. The first one is the number of arguments and the second one is the {@code cpi}.\n+     *\n+     * @param cpi the index of a bootstrap specifier in the constant pool\n+     * @param index the index of the static argument in the list of static arguments\n+     * @return the constant pool index associated with the static argument\n+     *\/\n+    int bootstrapArgumentIndexAt(HotSpotConstantPool constantPool, int cpi, int index) {\n+        return bootstrapArgumentIndexAt(constantPool, constantPool.getConstantPoolPointer(), cpi, index);\n@@ -483,1 +492,1 @@\n-    private native int bootstrapArgumentIndexAt(HotSpotConstantPool constantPool, long constantPoolPointer, int cpi);\n+    private native int bootstrapArgumentIndexAt(HotSpotConstantPool constantPool, long constantPoolPointer, int cpi, int index);\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk\/vm\/ci\/hotspot\/CompilerToVM.java","additions":12,"deletions":3,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -587,2 +587,2 @@\n-    public int bootstrapArgumentIndexAt(int index) {\n-        return compilerToVM().bootstrapArgumentIndexAt(this, index);\n+    public int bootstrapArgumentIndexAt(int cpi, int index) {\n+        return compilerToVM().bootstrapArgumentIndexAt(this, cpi, index);\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk\/vm\/ci\/hotspot\/HotSpotConstantPool.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -174,2 +174,3 @@\n-     * Gets the constant pool index of the pool entry associated with the\n-     * index in the static arguments list of a bootstrap method.\n+     * Gets the constant pool index of a static argument of a bootstrap specifier. Used when the list\n+     * of static arguments in the {@link BootstrapMethodInvocation} is an {@code int[]}. The list has\n+     * two elements. The first one is the number of arguments and the second one is the {@code cpi}.\n@@ -177,1 +178,2 @@\n-     * @param index a constant pool index\n+     * @param cpi the index of a bootstrap specifier in the constant pool\n+     * @param index the index of the static argument in the list of static arguments\n@@ -180,1 +182,1 @@\n-    default int bootstrapArgumentIndexAt(int index) {\n+    default int bootstrapArgumentIndexAt(int cpi, int index) {\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk\/vm\/ci\/meta\/ConstantPool.java","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"}]}