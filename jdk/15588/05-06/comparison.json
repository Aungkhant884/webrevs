{"files":[{"patch":"@@ -552,2 +552,2 @@\n-         * index of the entry and the method {@link CompilerToVM#lookupConstantInPool} is used\n-         * to resolve it. If the resolution failed, the index is returned as a\n+         * index of the entry and the method {@link ConstantPool#lookupConstant} is used to\n+         * resolve it. If the resolution failed, the index is returned as a\n@@ -557,2 +557,2 @@\n-         * @return A {@link PrimitiveConstant} representing a {@code CONSTANT_Dynamic_info}\n-         *         entry or a {@link JavaConstant} representing the static argument requested\n+         * @return A {@link PrimitiveConstant} representing an unresolved constant pool entry\n+         * or a {@link JavaConstant} representing the static argument requested\n@@ -565,2 +565,8 @@\n-                res = compilerToVM().lookupConstantInPool(cp, argCpi, false);\n-                if (res == null) {\n+                Object object = cp.lookupConstant(argCpi, false);\n+                if (object instanceof PrimitiveConstant primitiveConstant) {\n+                    res = runtime().getReflection().boxPrimitive(primitiveConstant);\n+                } else if (object instanceof JavaConstant javaConstant) {\n+                    res = javaConstant;\n+                } else if (object instanceof JavaType type) {\n+                    res = runtime().getReflection().forObject(type);\n+                } else {\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk\/vm\/ci\/hotspot\/HotSpotConstantPool.java","additions":12,"deletions":6,"binary":false,"changes":18,"status":"modified"}]}