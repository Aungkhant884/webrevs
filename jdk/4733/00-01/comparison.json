{"files":[{"patch":"@@ -290,2 +290,1 @@\n-     * or the {@code toString()} method, which uses the default\n-     * charset.\n+     * or the {@code toString()} method, which uses the default charset.\n","filename":"src\/java.base\/share\/classes\/java\/io\/ByteArrayOutputStream.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -574,1 +574,1 @@\n-    static final Charset CHARSET; \/\/ shared with PrintStream\n+    private static final Charset CHARSET;\n","filename":"src\/java.base\/share\/classes\/java\/io\/Console.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n- * {@link Charset#defaultCharset() default charset} may be accepted.\n+ * {@link Charset#defaultCharset() default charset} may be used.\n","filename":"src\/java.base\/share\/classes\/java\/io\/InputStreamReader.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -111,1 +111,1 @@\n-        this.charOut = new OutputStreamWriter(this, Console.CHARSET);\n+        this.charOut = new OutputStreamWriter(this);\n","filename":"src\/java.base\/share\/classes\/java\/io\/PrintStream.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2124,3 +2124,3 @@\n-        \/\/ defaults to Charset.defaultCharset()\n-        setOut0(newPrintStream(fdOut, props.getProperty(\"sun.stdout.encoding\")));\n-        setErr0(newPrintStream(fdErr, props.getProperty(\"sun.stderr.encoding\")));\n+        \/\/ defaults to native.encoding\n+        setOut0(newPrintStream(fdOut, props.getProperty(\"sun.stdout.encoding\", StaticProperty.nativeEncoding())));\n+        setErr0(newPrintStream(fdErr, props.getProperty(\"sun.stderr.encoding\", StaticProperty.nativeEncoding())));\n","filename":"src\/java.base\/share\/classes\/java\/lang\/System.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -35,0 +35,2 @@\n+\n+import jdk.internal.util.StaticProperty;\n@@ -139,1 +141,1 @@\n-        dfltEncName = GetPropertyAction.privilegedGetProperty(\"file.encoding\");\n+        dfltEncName = StaticProperty.fileEncoding();\n","filename":"src\/java.base\/share\/classes\/java\/net\/URLEncoder.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -53,0 +53,1 @@\n+    private static final String FILE_ENCODING;\n@@ -68,0 +69,1 @@\n+        FILE_ENCODING = getProperty(props, \"file.encoding\");\n@@ -215,0 +217,13 @@\n+\n+    \/**\n+     * Return the {@code file.encoding} system property.\n+     *\n+     * <strong>{@link SecurityManager#checkPropertyAccess} is NOT checked\n+     * in this method. The caller of this method should take care to ensure\n+     * that the returned property is not made accessible to untrusted code.<\/strong>\n+     *\n+     * @return the {@code file.encoding} system property\n+     *\/\n+    public static String fileEncoding() {\n+        return FILE_ENCODING;\n+    }\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/util\/StaticProperty.java","additions":15,"deletions":0,"binary":false,"changes":15,"status":"modified"}]}