{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1994, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1994, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -201,2 +201,2 @@\n-     * platform's default character set. The length of the new {@code String}\n-     * is a function of the character set, and hence may not be equal to the\n+     * default charset. The length of the new {@code String}\n+     * is a function of the charset, and hence may not be equal to the\n@@ -206,2 +206,2 @@\n-     * sequences with the default replacement string for the platform's\n-     * default character set. The {@linkplain java.nio.charset.CharsetDecoder}\n+     * sequences with the default replacement string for the\n+     * default charset. The {@linkplain java.nio.charset.CharsetDecoder}\n@@ -211,0 +211,1 @@\n+     * @see java.nio.charset.Charset#defaultCharset()\n@@ -289,2 +290,1 @@\n-     * or the {@code toString()} method, which uses the platform's default\n-     * character encoding.\n+     * or the {@code toString()} method, which uses the default charset.\n@@ -297,0 +297,1 @@\n+     * @see        java.nio.charset.Charset#defaultCharset()\n","filename":"src\/java.base\/share\/classes\/java\/io\/ByteArrayOutputStream.java","additions":8,"deletions":7,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+import jdk.internal.util.StaticProperty;\n@@ -575,1 +576,0 @@\n-        String csname = encoding();\n@@ -577,2 +577,12 @@\n-        if (csname == null) {\n-            csname = GetPropertyAction.privilegedGetProperty(\"sun.stdout.encoding\");\n+        boolean istty = istty();\n+\n+        if (istty) {\n+            String csname = encoding();\n+            if (csname == null) {\n+                csname = GetPropertyAction.privilegedGetProperty(\"sun.stdout.encoding\");\n+            }\n+            if (csname != null) {\n+                try {\n+                    cs = Charset.forName(csname);\n+                } catch (Exception ignored) { }\n+            }\n@@ -580,1 +590,1 @@\n-        if (csname != null) {\n+        if (cs == null) {\n@@ -582,2 +592,4 @@\n-                cs = Charset.forName(csname);\n-            } catch (Exception ignored) { }\n+                cs = Charset.forName(StaticProperty.nativeEncoding());\n+            } catch (Exception ignored) {\n+                cs = Charset.defaultCharset();\n+            }\n@@ -585,1 +597,2 @@\n-        CHARSET = cs == null ? Charset.defaultCharset() : cs;\n+\n+        CHARSET = cs;\n@@ -590,1 +603,1 @@\n-                if (istty()) {\n+                if (istty) {\n","filename":"src\/java.base\/share\/classes\/java\/io\/Console.java","additions":21,"deletions":8,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,2 +33,1 @@\n- * or the platform's\n- * {@linkplain java.nio.charset.Charset#defaultCharset() default charset}.\n+ * or the {@linkplain java.nio.charset.Charset#defaultCharset() default charset}.\n@@ -42,0 +41,1 @@\n+ * @see java.nio.charset.Charset#defaultCharset()\n@@ -50,2 +50,1 @@\n-    * using the platform's\n-    * {@linkplain java.nio.charset.Charset#defaultCharset() default charset}.\n+    * using the {@linkplain java.nio.charset.Charset#defaultCharset() default charset}.\n@@ -58,0 +57,1 @@\n+    * @see        java.nio.charset.Charset#defaultCharset()\n@@ -65,2 +65,1 @@\n-    * using the platform's\n-    * {@linkplain java.nio.charset.Charset#defaultCharset() default charset}.\n+    * using the {@linkplain java.nio.charset.Charset#defaultCharset() default charset}.\n@@ -73,0 +72,1 @@\n+    * @see        java.nio.charset.Charset#defaultCharset()\n@@ -80,2 +80,1 @@\n-    * using the platform's\n-    * {@linkplain java.nio.charset.Charset#defaultCharset() default charset}.\n+    * using the {@linkplain java.nio.charset.Charset#defaultCharset() default charset}.\n@@ -84,0 +83,1 @@\n+    * @see java.nio.charset.Charset#defaultCharset()\n","filename":"src\/java.base\/share\/classes\/java\/io\/FileReader.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,2 +33,1 @@\n- * or the platform's\n- * {@linkplain java.nio.charset.Charset#defaultCharset() default charset}.\n+ * or the {@linkplain java.nio.charset.Charset#defaultCharset() default charset}.\n@@ -49,0 +48,1 @@\n+ * @see java.nio.charset.Charset#defaultCharset()\n@@ -57,1 +57,1 @@\n-     * Constructs a {@code FileWriter} given a file name, using the platform's\n+     * Constructs a {@code FileWriter} given a file name, using the\n@@ -64,0 +64,1 @@\n+     * @see java.nio.charset.Charset#defaultCharset()\n@@ -71,1 +72,1 @@\n-     * whether to append the data written, using the platform's\n+     * whether to append the data written, using the\n@@ -80,0 +81,1 @@\n+     * @see java.nio.charset.Charset#defaultCharset()\n@@ -87,2 +89,1 @@\n-     * using the platform's\n-     * {@linkplain java.nio.charset.Charset#defaultCharset() default charset}\n+     * using the {@linkplain java.nio.charset.Charset#defaultCharset() default charset}\n@@ -94,0 +95,1 @@\n+     * @see java.nio.charset.Charset#defaultCharset()\n@@ -101,1 +103,1 @@\n-     * a boolean indicating whether to append the data written, using the platform's\n+     * a boolean indicating whether to append the data written, using the\n@@ -110,0 +112,1 @@\n+     * @see java.nio.charset.Charset#defaultCharset()\n@@ -118,2 +121,1 @@\n-     * using the platform's\n-     * {@linkplain java.nio.charset.Charset#defaultCharset() default charset}.\n+     * using the {@linkplain java.nio.charset.Charset#defaultCharset() default charset}.\n@@ -122,0 +124,1 @@\n+     * @see java.nio.charset.Charset#defaultCharset()\n","filename":"src\/java.base\/share\/classes\/java\/io\/FileWriter.java","additions":13,"deletions":10,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -38,2 +38,2 @@\n- * may be specified by name or may be given explicitly, or the platform's\n- * {@link Charset#defaultCharset() default charset} may be accepted.\n+ * may be specified by name or may be given explicitly, or the\n+ * {@link Charset#defaultCharset() default charset} may be used.\n","filename":"src\/java.base\/share\/classes\/java\/io\/InputStreamReader.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,1 +38,1 @@\n- * may be specified by name or may be given explicitly, or the platform's\n+ * may be specified by name or may be given explicitly, or the\n@@ -106,0 +106,1 @@\n+     * @see java.nio.charset.Charset#defaultCharset()\n","filename":"src\/java.base\/share\/classes\/java\/io\/OutputStreamWriter.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -48,2 +48,2 @@\n- * bytes using the given encoding or charset, or the platform's default\n- * character encoding if not specified.\n+ * bytes using the given encoding or charset, or the default charset if not\n+ * specified.\n@@ -61,0 +61,1 @@\n+ * @see Charset#defaultCharset()\n@@ -126,1 +127,1 @@\n-     * to bytes using the platform's default character encoding.\n+     * to bytes using the default charset.\n@@ -132,0 +133,1 @@\n+     * @see Charset#defaultCharset()\n@@ -140,1 +142,1 @@\n-     * the platform's default character encoding.\n+     * the default charset.\n@@ -150,0 +152,1 @@\n+     * @see Charset#defaultCharset()\n@@ -208,1 +211,1 @@\n-     * {@linkplain java.nio.charset.Charset#defaultCharset() default charset}\n+     * {@linkplain Charset#defaultCharset() default charset}\n@@ -227,0 +230,1 @@\n+     * @see Charset#defaultCharset()\n@@ -309,1 +313,1 @@\n-     * java.nio.charset.Charset#defaultCharset() default charset} for this\n+     * Charset#defaultCharset() default charset} for this\n@@ -328,0 +332,1 @@\n+     * @see Charset#defaultCharset()\n@@ -522,3 +527,2 @@\n-     * will be translated according to the platform's default character\n-     * encoding, use the {@code print(char)} or {@code println(char)}\n-     * methods.\n+     * will be translated according to the default charset, use the\n+     * {@code print(char)} or {@code println(char)} methods.\n@@ -555,3 +559,2 @@\n-     * that will be translated according to the platform's default character\n-     * encoding, use the {@code print(char)} or {@code println(char)}\n-     * methods.\n+     * that will be translated according to the default charset, use the\n+     * {@code print(char)} or {@code println(char)} methods.\n@@ -587,3 +590,2 @@\n-     * that will be translated according to the platform's default character\n-     * encoding, use the {@code print(char[])} or {@code println(char[])}\n-     * methods.\n+     * that will be translated according to the default charset, use the\n+     * {@code print(char[])} or {@code println(char[])} methods.\n@@ -625,3 +627,2 @@\n-     * that will be translated according to the platform's default character\n-     * encoding, use the {@code print(char[])} or {@code println(char[])}\n-     * methods.\n+     * that will be translated according to the default charset, use the\n+     * {@code print(char[])} or {@code println(char[])} methods.\n@@ -760,1 +761,1 @@\n-     * according to the platform's default character encoding, and these bytes\n+     * according to the default charset, and these bytes\n@@ -765,0 +766,1 @@\n+     * @see Charset#defaultCharset()\n@@ -773,1 +775,1 @@\n-     * platform's default character encoding if none specified. These bytes\n+     * default charset if none specified. These bytes\n@@ -777,0 +779,1 @@\n+     * @see Charset#defaultCharset()\n@@ -785,1 +788,1 @@\n-     * according to the platform's default character encoding, and these bytes\n+     * according to the default charset, and these bytes\n@@ -791,0 +794,1 @@\n+     * @see Charset#defaultCharset()\n@@ -799,1 +803,1 @@\n-     * according to the platform's default character encoding, and these bytes\n+     * according to the default charset, and these bytes\n@@ -805,0 +809,1 @@\n+     * @see Charset#defaultCharset()\n@@ -813,1 +818,1 @@\n-     * according to the platform's default character encoding, and these bytes\n+     * according to the default charset, and these bytes\n@@ -819,0 +824,1 @@\n+     * @see Charset#defaultCharset()\n@@ -827,1 +833,1 @@\n-     * bytes according to the platform's default character encoding, and these\n+     * bytes according to the default charset, and these\n@@ -833,0 +839,1 @@\n+     * @see Charset#defaultCharset()\n@@ -841,1 +848,1 @@\n-     * platform's default character encoding if none specified. These bytes\n+     * default charset if none specified. These bytes\n@@ -845,0 +852,1 @@\n+     * @see Charset#defaultCharset()\n@@ -856,1 +864,1 @@\n-     * constructor, or the platform's default character encoding if none\n+     * constructor, or the default charset if none\n@@ -861,0 +869,1 @@\n+     * @see Charset#defaultCharset()\n@@ -869,1 +878,1 @@\n-     * according to the platform's default character encoding, and these bytes\n+     * according to the default charset, and these bytes\n@@ -875,0 +884,1 @@\n+     * @see Charset#defaultCharset()\n","filename":"src\/java.base\/share\/classes\/java\/io\/PrintStream.java","additions":37,"deletions":27,"binary":false,"changes":64,"status":"modified"},{"patch":"@@ -121,1 +121,1 @@\n-     * into bytes using the default character encoding.\n+     * into bytes using the default charset.\n@@ -126,0 +126,1 @@\n+     * @see java.nio.charset.Charset#defaultCharset()\n@@ -135,1 +136,1 @@\n-     * default character encoding.\n+     * default charset.\n@@ -143,0 +144,1 @@\n+     * @see java.nio.charset.Charset#defaultCharset()\n@@ -196,0 +198,1 @@\n+     * @see java.nio.charset.Charset#defaultCharset()\n@@ -305,0 +308,1 @@\n+     * @see java.nio.charset.Charset#defaultCharset()\n@@ -583,1 +587,1 @@\n-     * according to the platform's default character encoding, and these bytes\n+     * according to the default charset, and these bytes\n@@ -588,0 +592,1 @@\n+     * @see java.nio.charset.Charset#defaultCharset()\n@@ -595,1 +600,1 @@\n-     * according to the platform's default character encoding, and these bytes\n+     * according to the default charset, and these bytes\n@@ -600,0 +605,1 @@\n+     * @see java.nio.charset.Charset#defaultCharset()\n@@ -608,1 +614,1 @@\n-     * to the platform's default character encoding, and these bytes are\n+     * to the default charset, and these bytes are\n@@ -614,0 +620,1 @@\n+     * @see java.nio.charset.Charset#defaultCharset()\n@@ -622,1 +629,1 @@\n-     * according to the platform's default character encoding, and these bytes\n+     * according to the default charset, and these bytes\n@@ -628,0 +635,1 @@\n+     * @see java.nio.charset.Charset#defaultCharset()\n@@ -636,1 +644,1 @@\n-     * according to the platform's default character encoding, and these bytes\n+     * according to the default charset, and these bytes\n@@ -642,0 +650,1 @@\n+     * @see java.nio.charset.Charset#defaultCharset()\n@@ -650,1 +659,1 @@\n-     * bytes according to the platform's default character encoding, and these\n+     * bytes according to the default charset, and these\n@@ -656,0 +665,1 @@\n+     * @see java.nio.charset.Charset#defaultCharset()\n@@ -663,1 +673,1 @@\n-     * according to the platform's default character encoding, and these bytes\n+     * according to the default charset, and these bytes\n@@ -668,0 +678,1 @@\n+     * @see java.nio.charset.Charset#defaultCharset()\n@@ -678,2 +689,2 @@\n-     * converted into bytes according to the platform's default character\n-     * encoding, and these bytes are written in exactly the manner of the\n+     * converted into bytes according to the default charset,\n+     * and these bytes are written in exactly the manner of the\n@@ -683,0 +694,1 @@\n+     * @see java.nio.charset.Charset#defaultCharset()\n@@ -691,1 +703,1 @@\n-     * according to the platform's default character encoding, and these bytes\n+     * according to the default charset, and these bytes\n@@ -697,0 +709,1 @@\n+     * @see java.nio.charset.Charset#defaultCharset()\n","filename":"src\/java.base\/share\/classes\/java\/io\/PrintWriter.java","additions":25,"deletions":12,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -800,0 +800,9 @@\n+     * <tr><th scope=\"row\">{@systemProperty file.encoding}<\/th>\n+     *     <td>The name of the default charset. Users may specify\n+     *     {@code UTF-8} or {@code COMPAT} on the command line to the value.\n+     *     Specifying {@code COMPAT} provides the compatible behavior with\n+     *     JDKs prior to 18. In that case, the value will be replaced with the\n+     *     one from {@code native.encoding} system property during runtime startup.\n+     *     Specifying it to {@code UTF-8}, or no value is set, defaults to use\n+     *     {@code UTF-8}. Other values have unspecified behavior.\n+     *     <\/td><\/tr>\n@@ -2115,3 +2124,3 @@\n-        \/\/ defaults to Charset.defaultCharset()\n-        setOut0(newPrintStream(fdOut, props.getProperty(\"sun.stdout.encoding\")));\n-        setErr0(newPrintStream(fdErr, props.getProperty(\"sun.stderr.encoding\")));\n+        \/\/ defaults to native.encoding\n+        setOut0(newPrintStream(fdOut, props.getProperty(\"sun.stdout.encoding\", StaticProperty.nativeEncoding())));\n+        setErr0(newPrintStream(fdErr, props.getProperty(\"sun.stderr.encoding\", StaticProperty.nativeEncoding())));\n","filename":"src\/java.base\/share\/classes\/java\/lang\/System.java","additions":12,"deletions":3,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -68,1 +68,1 @@\n- *     or if unspecified, the default encoding of the platform will be used.\n+ *     or if unspecified, the default charset will be used.\n@@ -77,0 +77,2 @@\n+ * @see java.nio.charset.Charset#defaultCharset()\n+ *\n@@ -89,1 +91,1 @@\n-    \/\/ The platform default encoding\n+    \/\/ The default charset\n@@ -94,1 +96,1 @@\n-     * The platform's default encoding is used to determine what characters\n+     * The default charset is used to determine what characters\n@@ -98,2 +100,2 @@\n-     * @deprecated The resulting string may vary depending on the platform's\n-     *          default encoding. Instead, use the decode(String,String) method\n+     * @deprecated The resulting string may vary depending on the\n+     *          default charset. Instead, use the decode(String,String) method\n@@ -111,1 +113,1 @@\n-            \/\/ The system should always have the platform default\n+            \/\/ The system should always have the default charset\n","filename":"src\/java.base\/share\/classes\/java\/net\/URLDecoder.java","additions":9,"deletions":7,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1995, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1995, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,0 +35,2 @@\n+\n+import jdk.internal.util.StaticProperty;\n@@ -63,1 +65,1 @@\n- *     then the default encoding of the platform is used.\n+ *     then the default charset is used.\n@@ -73,0 +75,2 @@\n+ * @see java.nio.charset.Charset#defaultCharset()\n+ *\n@@ -137,1 +141,1 @@\n-        dfltEncName = GetPropertyAction.privilegedGetProperty(\"file.encoding\");\n+        dfltEncName = StaticProperty.fileEncoding();\n@@ -147,1 +151,1 @@\n-     * format. This method uses the platform's default encoding\n+     * format. This method uses the default charset\n@@ -151,2 +155,2 @@\n-     * @deprecated The resulting string may vary depending on the platform's\n-     *             default encoding. Instead, use the encode(String,String)\n+     * @deprecated The resulting string may vary depending on the\n+     *             default charset. Instead, use the encode(String,String)\n@@ -164,1 +168,1 @@\n-            \/\/ The system should always have the platform default\n+            \/\/ The system should always have the default charset\n","filename":"src\/java.base\/share\/classes\/java\/net\/URLEncoder.java","additions":11,"deletions":7,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -213,3 +213,2 @@\n- * may or may not be one of the standard charsets.  The default charset is\n- * determined during virtual-machine startup and typically depends upon the\n- * locale and charset being used by the underlying operating system. <\/p>\n+ * is {@code UTF-8} unless changed in an implementation specific manner. Refer to\n+ * {@link #defaultCharset()} for more detail.\n@@ -595,3 +594,8 @@\n-     * <p> The default charset is determined during virtual-machine startup and\n-     * typically depends upon the locale and charset of the underlying\n-     * operating system.\n+     * <p> The default charset is {@code UTF-8}, unless changed in an\n+     * implementation specific manner.\n+     *\n+     * @implNote An implementation may override the default charset with\n+     * the system property {@code file.encoding} on the command line. If the\n+     * value designates {@code COMPAT}, the default charset is derived from\n+     * the {@code native.encoding} system property, which typically depends\n+     * upon the locale and charset of the underlying operating system.\n@@ -600,0 +604,2 @@\n+     * @see <a href=\"..\/..\/lang\/System.html#file.encoding\">file.encoding<\/a>\n+     * @see <a href=\"..\/..\/lang\/System.html#native.encoding\">native.encoding<\/a>\n","filename":"src\/java.base\/share\/classes\/java\/nio\/charset\/Charset.java","additions":12,"deletions":6,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -560,1 +560,1 @@\n-     * into characters using the underlying platform's\n+     * into characters using the\n@@ -564,0 +564,1 @@\n+     * @see java.nio.charset.Charset#defaultCharset()\n@@ -632,1 +633,1 @@\n-     * characters using the underlying platform's\n+     * characters using the\n@@ -637,0 +638,1 @@\n+     * @see java.nio.charset.Charset#defaultCharset()\n@@ -705,1 +707,1 @@\n-     * characters using the underlying platform's\n+     * characters using the\n@@ -712,0 +714,1 @@\n+     * @see java.nio.charset.Charset#defaultCharset()\n@@ -772,1 +775,1 @@\n-     * characters using the underlying platform's\n+     * characters using the\n@@ -776,0 +779,1 @@\n+     * @see java.nio.charset.Charset#defaultCharset()\n","filename":"src\/java.base\/share\/classes\/java\/util\/Scanner.java","additions":9,"deletions":5,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -53,0 +53,1 @@\n+    private static final String FILE_ENCODING;\n@@ -68,0 +69,1 @@\n+        FILE_ENCODING = getProperty(props, \"file.encoding\");\n@@ -215,0 +217,13 @@\n+\n+    \/**\n+     * Return the {@code file.encoding} system property.\n+     *\n+     * <strong>{@link SecurityManager#checkPropertyAccess} is NOT checked\n+     * in this method. The caller of this method should take care to ensure\n+     * that the returned property is not made accessible to untrusted code.<\/strong>\n+     *\n+     * @return the {@code file.encoding} system property\n+     *\/\n+    public static String fileEncoding() {\n+        return FILE_ENCODING;\n+    }\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/util\/StaticProperty.java","additions":15,"deletions":0,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -71,2 +71,8 @@\n-        \/\/ Add properties that have not been overridden on the cmdline\n-        putIfAbsent(props, \"file.encoding\", nativeEncoding);\n+        \/\/ \"file.encoding\" defaults to \"UTF-8\", unless specified in the command line\n+        \/\/ where \"COMPAT\" designates the native encoding.\n+        var fileEncoding = props.getOrDefault(\"file.encoding\", \"UTF-8\");\n+        if (\"COMPAT\".equals(fileEncoding)) {\n+            put(props, \"file.encoding\", nativeEncoding);\n+        } else {\n+            putIfAbsent(props, \"file.encoding\", fileEncoding);\n+        }\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/util\/SystemProps.java","additions":8,"deletions":2,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -0,0 +1,92 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8260265\n+ * @summary Test file.encoding system property\n+ * @library \/test\/lib\n+ * @build jdk.test.lib.process.*\n+ * @run testng FileEncodingTest\n+ *\/\n+\n+import java.nio.charset.Charset;\n+import java.util.List;\n+import java.util.Locale;\n+\n+import jdk.test.lib.process.ProcessTools;\n+\n+import org.testng.annotations.DataProvider;\n+import org.testng.annotations.Test;\n+\n+public class FileEncodingTest {\n+    private static final boolean IS_WINDOWS = System.getProperty(\"os.name\").startsWith(\"Windows\");\n+\n+    @DataProvider\n+    public Object[][] fileEncodingToDefault() {\n+        return new Object[][] {\n+            {\"UTF-8\", \"UTF-8\"},\n+            {\"ISO-8859-1\", \"ISO-8859-1\"},\n+            {\"\", \"UTF-8\"},\n+            {\"dummy\", \"UTF-8\"},\n+            {\"COMPAT\", \"<should_be_replaced>\"}\n+        };\n+    };\n+\n+    @Test(dataProvider = \"fileEncodingToDefault\")\n+    public void testFileEncodingToDefault(String fileEncoding, String expected) throws Exception {\n+        if (fileEncoding.equals(\"COMPAT\")) {\n+            if (IS_WINDOWS) {\n+                \/\/ Only tests on English locales\n+                if (Locale.getDefault().getLanguage().equals(\"en\")) {\n+                    expected = \"windows-1252\";\n+                } else {\n+                    System.out.println(\"Tests only run on Windows with English locales\");\n+                    return;\n+                }\n+            } else {\n+                expected = \"US-ASCII\";\n+            }\n+        }\n+        var cmds = fileEncoding.isEmpty()\n+                ? List.of(FileEncodingTest.class.getName(), expected)\n+                : List.of(\"-Dfile.encoding=\" + fileEncoding, FileEncodingTest.class.getName(), expected);\n+        var pb = ProcessTools.createTestJvm(cmds);\n+        var env = pb.environment();\n+        env.put(\"LANG\", \"C\");\n+        env.put(\"LC_ALL\", \"C\");\n+        ProcessTools.executeProcess(pb)\n+                .outputTo(System.out)\n+                .errorTo(System.err)\n+                .shouldHaveExitValue(0);\n+    }\n+\n+    public static void main(String... args) {\n+        var def = Charset.defaultCharset().name();\n+        var expected = args[0];\n+        System.out.println(\"Default Charset: \" + def + \", expected: \" + expected);\n+        if (!def.equals(expected)) {\n+            throw new RuntimeException(\"default charset is not the one expected.\");\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/lang\/System\/FileEncodingTest.java","additions":92,"deletions":0,"binary":false,"changes":92,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 8003228\n+ * @bug 8003228 8260265\n@@ -32,1 +32,2 @@\n- * @run main MacJNUEncoding US-ASCII UTF-8 C\n+ * @run main MacJNUEncoding UTF-8 UTF-8 C\n+ * @run main MacJNUEncoding US-ASCII UTF-8 C COMPAT\n@@ -34,0 +35,1 @@\n+ * @run main MacJNUEncoding UTF-8    UTF-8 en_US.UTF-8 COMPAT\n@@ -36,0 +38,1 @@\n+import java.util.List;\n@@ -43,1 +46,1 @@\n-        if (args.length != 3) {\n+        if (args.length != 3 && args.length != 4) {\n@@ -46,1 +49,1 @@\n-                    + \" <expected file.encoding> <expected sun.jnu.encoding> <locale>\");\n+                    + \" <expected file.encoding> <expected sun.jnu.encoding> <locale> [<user's file.encoding>]\");\n@@ -52,2 +55,4 @@\n-        ProcessBuilder pb = ProcessTools.createTestJvm(\n-                ExpectedEncoding.class.getName(), args[0], args[1]);\n+        var cmds = (args.length == 4)\n+                ? List.of(\"-Dfile.encoding=\" + args[3], ExpectedEncoding.class.getName(), args[0], args[1])\n+                : List.of(ExpectedEncoding.class.getName(), args[0], args[1]);\n+        ProcessBuilder pb = ProcessTools.createTestJvm(cmds);\n","filename":"test\/jdk\/java\/lang\/System\/MacEncoding\/MacJNUEncoding.java","additions":12,"deletions":7,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n- * @bug 8011194\n+ * @bug 8011194 8260265\n@@ -35,0 +35,1 @@\n+ * @run main\/othervm -DuserEncoding=COMPAT TestFileEncoding UTF-8\n@@ -37,1 +38,2 @@\n- * @run main TestFileEncoding US-ASCII C\n+ * @run main\/othervm -DuserEncoding=COMPAT TestFileEncoding UTF-8 en_US.UTF-8\n+ * @run main TestFileEncoding UTF-8 C\n@@ -39,0 +41,1 @@\n+ * @run main\/othervm -DuserEncoding=COMPAT TestFileEncoding US-ASCII C\n","filename":"test\/jdk\/java\/lang\/System\/MacEncoding\/TestFileEncoding.java","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2012, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 5030265\n+ * @bug 5030265 8260265\n@@ -166,1 +166,1 @@\n-    private static final String defaultEncoding = Charset.defaultCharset().name();\n+    private static final String defaultEncoding = System.getProperty(\"sun.jnu.encoding\");\n","filename":"test\/jdk\/tools\/launcher\/UnicodeTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}