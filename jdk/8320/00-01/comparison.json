{"files":[{"patch":"@@ -0,0 +1,100 @@\n+\/*\n+ * Copyright (c) 2004, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+  @test\n+  @bug 5013984\n+  @summary Tests KEY_PRESSED has the same KeyChar as KEY_RELEASED\n+  @key headful\n+  @run main KeyCharTest\n+*\/\n+\n+import java.awt.Frame;\n+import java.awt.Robot;\n+import java.awt.event.KeyEvent;\n+import java.awt.event.KeyListener;\n+import java.awt.event.MouseEvent;\n+import java.util.HashMap;\n+\n+public class KeyCharTest extends Frame implements KeyListener {\n+    HashMap<Integer, Character> transMap = new HashMap();\n+\n+    public void keyTyped(KeyEvent e){\n+    }\n+\n+    public void keyPressed(KeyEvent e){\n+        transMap.put(e.getKeyCode(), e.getKeyChar());\n+    }\n+\n+    public void keyReleased(KeyEvent e){\n+        Object value = transMap.get(e.getKeyCode());\n+        if (value != null && e.getKeyChar() != ((Character)value).charValue()) {\n+            throw new RuntimeException(\"Wrong KeyChar on KEY_RELEASED \"+\n+                KeyEvent.getKeyText(e.getKeyCode()));\n+        }\n+    }\n+\n+    public void start () {\n+        addKeyListener(this);\n+        setLocationRelativeTo(null);\n+        setSize(200, 200);\n+        setVisible(true);\n+        requestFocus();\n+\n+        try {\n+            Robot robot = new Robot();\n+            robot.setAutoDelay(10);\n+            robot.setAutoWaitForIdle(true);\n+            robot.delay(100);\n+            robot.mouseMove(getLocationOnScreen().x + getWidth()\/2,\n+                            getLocationOnScreen().y + getHeight()\/2);\n+\n+            robot.mousePress(MouseEvent.BUTTON1_DOWN_MASK);\n+            robot.mouseRelease(MouseEvent.BUTTON1_DOWN_MASK);\n+\n+            for(int vkey = 0x20; vkey < 0x7F; vkey++) {\n+                try {\n+                    robot.keyPress(vkey);\n+                    robot.keyRelease(vkey);\n+                    System.out.println(KeyEvent.getKeyText(vkey) + \" \" + vkey);\n+                } catch (RuntimeException e) {\n+                }\n+            }\n+            robot.delay(100);\n+        } catch(Exception e){\n+            e.printStackTrace();\n+            throw new RuntimeException(\"Exception while performing Robot actions.\");\n+        }\n+   }\n+\n+    public static void main(String[] args) {\n+        KeyCharTest test = new KeyCharTest();\n+        try {\n+            test.start();\n+        } finally {\n+            test.setVisible(false);\n+            test.dispose();\n+        }\n+    }\n+}\n+\n","filename":"test\/jdk\/java\/awt\/event\/KeyEvent\/KeyCharTest\/KeyCharTest.java","additions":100,"deletions":0,"binary":false,"changes":100,"status":"added"}]}