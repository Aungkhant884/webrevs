{"files":[{"patch":"@@ -70,4 +70,13 @@\n-    long amount = (long)(s1 - s2);\n-    long scale = (long)_scale;\n-    amount = (amount > 0) ? (amount + scale \/ 2) : (amount - scale \/ 2);\n-    return amount \/ scale;\n+    \/\/ Since size_t is unsigned, the amount >= 0 is always true.\n+    \/\/ Therefore, shifting the amount half the scale down\/up is\n+    \/\/ decided based on the s1 and s2. Thus, s1 >= s2 means amount >= 0,\n+    \/\/ and amount >= _scale\/2 is equivalent to (amount - _scale \/ 2) >= 0.\n+    size_t amount = s1 - s2;\n+    if (s1 >= s2) {\n+      assert((amount + _scale \/ 2) <= SIZE_MAX, \"difference is gretaer than the upper limit.\");\n+      amount += _scale \/ 2;\n+    } else {\n+      assert(amount >= _scale \/ 2, \"difference is less than the lower limit.\");\n+      amount -= _scale \/ 2;\n+    }\n+    return amount \/ _scale;\n","filename":"src\/hotspot\/share\/services\/memReporter.hpp","additions":13,"deletions":4,"binary":false,"changes":17,"status":"modified"}]}