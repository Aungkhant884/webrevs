{"files":[{"patch":"@@ -433,1 +433,1 @@\n-  long amount_diff = diff_in_current_scale(current_amount, early_amount);\n+  int64_t amount_diff = diff_in_current_scale(current_amount, early_amount);\n@@ -435,1 +435,1 @@\n-    out->print(\" %+ld%s\", amount_diff, scale);\n+    out->print(\" \" INT64_PLUS_FORMAT \"%s\", amount_diff, scale);\n@@ -451,1 +451,1 @@\n-    out->print(\" %+ld\", diff_in_current_scale(current_amount, early_amount));\n+    out->print(\" \" INT64_PLUS_FORMAT \"d\", diff_in_current_scale(current_amount, early_amount));\n@@ -465,1 +465,1 @@\n-  long reserved_diff = diff_in_current_scale(current_reserved, early_reserved);\n+  int64_t reserved_diff = diff_in_current_scale(current_reserved, early_reserved);\n@@ -467,1 +467,1 @@\n-    out->print(\" %+ld%s\", reserved_diff, scale);\n+    out->print(\" \" INT64_PLUS_FORMAT \"%s\", reserved_diff, scale);\n@@ -471,1 +471,1 @@\n-  long committed_diff = diff_in_current_scale(current_committed, early_committed);\n+  int64_t committed_diff = diff_in_current_scale(current_committed, early_committed);\n@@ -473,1 +473,1 @@\n-    out->print(\" %+ld%s\", committed_diff, scale);\n+    out->print(\" \" INT64_PLUS_FORMAT \"%s\", committed_diff, scale);\n@@ -614,2 +614,2 @@\n-      long overhead_diff = diff_in_current_scale(_current_baseline.malloc_tracking_overhead(),\n-           _early_baseline.malloc_tracking_overhead());\n+      int64_t overhead_diff = diff_in_current_scale(_current_baseline.malloc_tracking_overhead(),\n+                                                    _early_baseline.malloc_tracking_overhead());\n@@ -617,1 +617,1 @@\n-        out->print(\" %+ld%s\", overhead_diff, scale);\n+        out->print(\" \" INT64_PLUS_FORMAT \"%s\", overhead_diff, scale);\n@@ -649,2 +649,2 @@\n-  long diff_used = diff_in_current_scale(current_stats.used(),\n-                                         early_stats.used());\n+  int64_t diff_used = diff_in_current_scale(current_stats.used(),\n+                                            early_stats.used());\n@@ -654,1 +654,1 @@\n-  long diff_waste = diff_in_current_scale(current_waste, early_waste);\n+  int64_t diff_waste = diff_in_current_scale(current_waste, early_waste);\n@@ -660,1 +660,1 @@\n-    out->print(\" %+ld%s\", diff_used, scale);\n+    out->print(\" \" INT64_PLUS_FORMAT \"%s\", diff_used, scale);\n@@ -670,1 +670,1 @@\n-    out->print(\" %+ld%s\", diff_waste, scale);\n+    out->print(\" \" INT64_PLUS_FORMAT \"%s\", diff_waste, scale);\n","filename":"src\/hotspot\/share\/services\/memReporter.cpp","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -69,5 +69,16 @@\n-  inline long diff_in_current_scale(size_t s1, size_t s2) const {\n-    long amount = (long)(s1 - s2);\n-    long scale = (long)_scale;\n-    amount = (amount > 0) ? (amount + scale \/ 2) : (amount - scale \/ 2);\n-    return amount \/ scale;\n+  inline int64_t diff_in_current_scale(size_t s1, size_t s2) const {\n+    \/\/ _scale should not be 0, otherwise division by zero at return.\n+    assert(_scale != 0, \"wrong scale\");\n+\n+    bool is_negative = false;\n+    if (s1 < s2) {\n+      is_negative = true;\n+      swap(s1, s2);\n+    }\n+\n+    size_t amount = s1 - s2;\n+    assert(amount <= SIZE_MAX - _scale \/ 2, \"size_t overflow\");\n+    amount = (amount + _scale \/ 2) \/ _scale;\n+    \/\/ We assume the valid range for deltas [INT64_MIN, INT64_MAX] to simplify the code.\n+    assert((sizeof(size_t) < sizeof(int64_t)) || (sizeof(size_t) == sizeof(int64_t) && amount <= INT64_MAX), \"cannot fit scaled diff into size_t\");\n+    return (is_negative) ? -(int64_t)amount : (int64_t)amount;\n","filename":"src\/hotspot\/share\/services\/memReporter.hpp","additions":16,"deletions":5,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -123,0 +123,1 @@\n+#define INT64_PLUS_FORMAT        \"%+\"         PRId64\n","filename":"src\/hotspot\/share\/utilities\/globalDefinitions.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}