{"files":[{"patch":"@@ -433,1 +433,1 @@\n-  long amount_diff = diff_in_current_scale(current_amount, early_amount);\n+  int64_t amount_diff = diff_in_current_scale(current_amount, early_amount);\n@@ -435,1 +435,1 @@\n-    out->print(\" %+ld%s\", amount_diff, scale);\n+    out->print(\" \" INT64_PLUS_FORMAT \"%s\", amount_diff, scale);\n@@ -451,1 +451,1 @@\n-    out->print(\" %+ld\", diff_in_current_scale(current_amount, early_amount));\n+    out->print(\" \" INT64_PLUS_FORMAT \"d\", diff_in_current_scale(current_amount, early_amount));\n@@ -465,1 +465,1 @@\n-  long reserved_diff = diff_in_current_scale(current_reserved, early_reserved);\n+  int64_t reserved_diff = diff_in_current_scale(current_reserved, early_reserved);\n@@ -467,1 +467,1 @@\n-    out->print(\" %+ld%s\", reserved_diff, scale);\n+    out->print(\" \" INT64_PLUS_FORMAT \"%s\", reserved_diff, scale);\n@@ -471,1 +471,1 @@\n-  long committed_diff = diff_in_current_scale(current_committed, early_committed);\n+  int64_t committed_diff = diff_in_current_scale(current_committed, early_committed);\n@@ -473,1 +473,1 @@\n-    out->print(\" %+ld%s\", committed_diff, scale);\n+    out->print(\" \" INT64_PLUS_FORMAT \"%s\", committed_diff, scale);\n@@ -614,2 +614,2 @@\n-      long overhead_diff = diff_in_current_scale(_current_baseline.malloc_tracking_overhead(),\n-           _early_baseline.malloc_tracking_overhead());\n+      int64_t overhead_diff = diff_in_current_scale(_current_baseline.malloc_tracking_overhead(),\n+                                                    _early_baseline.malloc_tracking_overhead());\n@@ -617,1 +617,1 @@\n-        out->print(\" %+ld%s\", overhead_diff, scale);\n+        out->print(\" \" INT64_PLUS_FORMAT \"%s\", overhead_diff, scale);\n@@ -649,2 +649,2 @@\n-  long diff_used = diff_in_current_scale(current_stats.used(),\n-                                         early_stats.used());\n+  int64_t diff_used = diff_in_current_scale(current_stats.used(),\n+                                            early_stats.used());\n@@ -654,1 +654,1 @@\n-  long diff_waste = diff_in_current_scale(current_waste, early_waste);\n+  int64_t diff_waste = diff_in_current_scale(current_waste, early_waste);\n@@ -660,1 +660,1 @@\n-    out->print(\" %+ld%s\", diff_used, scale);\n+    out->print(\" \" INT64_PLUS_FORMAT \"%s\", diff_used, scale);\n@@ -670,1 +670,1 @@\n-    out->print(\" %+ld%s\", diff_waste, scale);\n+    out->print(\" \" INT64_PLUS_FORMAT \"%s\", diff_waste, scale);\n","filename":"src\/hotspot\/share\/services\/memReporter.cpp","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -69,1 +69,4 @@\n-  inline long diff_in_current_scale(size_t s1, size_t s2) const {\n+  inline int64_t diff_in_current_scale(size_t s1, size_t s2) const {\n+    \/\/ _scale should not be 0, otherwise division by zero at return.\n+    assert(_scale != 0, \"wrong scale\");\n+\n@@ -72,3 +75,9 @@\n-    \/\/ decided based on the s1 and s2. Thus, s1 >= s2 means amount >= 0,\n-    \/\/ and amount >= _scale\/2 is equivalent to (amount - _scale \/ 2) >= 0.\n-    size_t amount = s1 - s2;\n+    \/\/ decided based on the s1 and s2. Thus, s1 >= s2 means amount >= 0.\n+    \/\/ ((a + b) > a) where b != 0, is used to check wrap-around of adding two size_t variables.\n+    \/\/ ((a - b) < a) where b != 0, is used to check wrap-around of subtracting two size_t variables.\n+    int64_t amount = s1 - s2;\n+    int64_t scale = (int64_t)_scale;\n+    if (amount == 0){\n+      return 0L;\n+    }\n+\n@@ -76,5 +85,10 @@\n-      assert((amount + _scale \/ 2) <= SIZE_MAX, \"difference is gretaer than the upper limit.\");\n-      amount += _scale \/ 2;\n-    } else {\n-      assert(amount >= _scale \/ 2, \"difference is less than the lower limit.\");\n-      amount -= _scale \/ 2;\n+      if ((scale \/ 2) != 0) {\n+        assert((amount + scale \/ 2) > amount, \"difference is greater than the upper limit.\");\n+        amount += scale \/ 2;\n+      }\n+      return (amount \/ scale);\n+    }\n+\n+    if ((scale \/ 2) != 0){\n+      assert((amount - scale \/ 2) < amount, \"difference is less than the lower limit.\");\n+      amount -= scale \/ 2;\n@@ -82,1 +96,1 @@\n-    return amount \/ _scale;\n+    return amount \/ scale;\n","filename":"src\/hotspot\/share\/services\/memReporter.hpp","additions":24,"deletions":10,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -123,0 +123,1 @@\n+#define INT64_PLUS_FORMAT        \"%+\"         PRId64\n","filename":"src\/hotspot\/share\/utilities\/globalDefinitions.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}