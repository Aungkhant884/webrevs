{"files":[{"patch":"@@ -617,2 +617,2 @@\n-\/\/ 2) reg_class compiler_method_oop_reg    ( \/* as def'd in frame section *\/ )\n-\/\/ 2) reg_class interpreter_method_oop_reg ( \/* as def'd in frame section *\/ )\n+\/\/ 2) reg_class compiler_method_reg        ( \/* as def'd in frame section *\/ )\n+\/\/ 2) reg_class interpreter_method_reg     ( \/* as def'd in frame section *\/ )\n@@ -4052,2 +4052,2 @@\n-  \/\/ Method Oop Register when calling interpreter.\n-  interpreter_method_oop_reg(R12);\n+  \/\/ Method Register when calling interpreter.\n+  interpreter_method_reg(R12);\n@@ -5622,1 +5622,1 @@\n-operand interpreter_method_oop_RegP(iRegP reg)\n+operand interpreter_method_RegP(iRegP reg)\n@@ -5624,1 +5624,1 @@\n-  constraint(ALLOC_IN_RC(method_reg)); \/\/ interpreter_method_oop_reg\n+  constraint(ALLOC_IN_RC(method_reg)); \/\/ interpreter_method_reg\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64.ad","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -1670,1 +1670,1 @@\n-  interpreter_method_oop_reg(R_Rmethod); \/\/ Method Oop Register when calling interpreter\n+  interpreter_method_reg(R_Rmethod);     \/\/ Method Register when calling interpreter\n@@ -2530,1 +2530,1 @@\n-operand interpreter_method_oop_regP(iRegP reg) %{\n+operand interpreter_method_regP(iRegP reg) %{\n","filename":"src\/hotspot\/cpu\/arm\/arm.ad","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -199,1 +199,1 @@\n-\/\/ 2) reg_class interpreter_method_oop_reg ( as defined in frame section )\n+\/\/ 2) reg_class interpreter_method_reg     ( as defined in frame section )\n","filename":"src\/hotspot\/cpu\/arm\/arm_32.ad","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -538,2 +538,2 @@\n-\/\/ 2) reg_class compiler_method_oop_reg    ( as defined in frame section )\n-\/\/ 2) reg_class interpreter_method_oop_reg ( as defined in frame section )\n+\/\/ 2) reg_class compiler_method_reg        ( as defined in frame section )\n+\/\/ 2) reg_class interpreter_method_reg     ( as defined in frame section )\n@@ -3866,2 +3866,2 @@\n-  \/\/ Method Oop Register when calling interpreter.\n-  interpreter_method_oop_reg(R19); \/\/ R19_method\n+  \/\/ Method Register when calling interpreter.\n+  interpreter_method_reg(R19); \/\/ R19_method\n@@ -4776,2 +4776,2 @@\n-operand compiler_method_oop_regP(iRegPdst reg) %{\n-  constraint(ALLOC_IN_RC(rscratch1_bits64_reg)); \/\/ compiler_method_oop_reg\n+operand compiler_method_regP(iRegPdst reg) %{\n+  constraint(ALLOC_IN_RC(rscratch1_bits64_reg)); \/\/ compiler_method_reg\n@@ -4783,2 +4783,2 @@\n-operand interpreter_method_oop_regP(iRegPdst reg) %{\n-  constraint(ALLOC_IN_RC(r19_bits64_reg)); \/\/ interpreter_method_oop_reg\n+operand interpreter_method_regP(iRegPdst reg) %{\n+  constraint(ALLOC_IN_RC(r19_bits64_reg)); \/\/ interpreter_method_reg\n","filename":"src\/hotspot\/cpu\/ppc\/ppc.ad","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -1261,1 +1261,1 @@\n-  \/\/ See also Matcher::interpreter_method_oop_reg().\n+  \/\/ See also Matcher::interpreter_method_reg().\n","filename":"src\/hotspot\/cpu\/s390\/c1_LIRAssembler_s390.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -281,2 +281,2 @@\n-\/\/ 2) reg_class compiler_method_oop_reg    (as defined in frame section)\n-\/\/ 2) reg_class interpreter_method_oop_reg (as defined in frame section)\n+\/\/ 2) reg_class compiler_method_reg        (as defined in frame section)\n+\/\/ 2) reg_class interpreter_method_reg     (as defined in frame section)\n@@ -2471,1 +2471,1 @@\n-  \/\/ compiler_method_oop_reg(Z_R1);\/\/Z_R1_scratch\n+  \/\/ compiler_method_reg(Z_R1);\/\/Z_R1_scratch\n@@ -2473,2 +2473,2 @@\n-  \/\/ Method Oop Register when calling interpreter\n-  interpreter_method_oop_reg(Z_R9);\/\/Z_method\n+  \/\/ Method Register when calling interpreter\n+  interpreter_method_reg(Z_R9);\/\/Z_method\n@@ -3539,2 +3539,2 @@\n-operand compiler_method_oop_regP(iRegP reg) %{\n-  constraint(ALLOC_IN_RC(z_r1_RegP)); \/\/ compiler_method_oop_reg\n+operand compiler_method_regP(iRegP reg) %{\n+  constraint(ALLOC_IN_RC(z_r1_RegP)); \/\/ compiler_method_reg\n@@ -3546,2 +3546,2 @@\n-operand interpreter_method_oop_regP(iRegP reg) %{\n-  constraint(ALLOC_IN_RC(z_r9_regP)); \/\/ interpreter_method_oop_reg\n+operand interpreter_method_regP(iRegP reg) %{\n+  constraint(ALLOC_IN_RC(z_r9_regP)); \/\/ interpreter_method_reg\n","filename":"src\/hotspot\/cpu\/s390\/s390.ad","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -134,2 +134,2 @@\n-\/\/ 2) reg_class compiler_method_oop_reg    ( \/* as def'd in frame section *\/ )\n-\/\/ 2) reg_class interpreter_method_oop_reg ( \/* as def'd in frame section *\/ )\n+\/\/ 2) reg_class compiler_method_reg        ( \/* as def'd in frame section *\/ )\n+\/\/ 2) reg_class interpreter_method_reg     ( \/* as def'd in frame section *\/ )\n@@ -1934,1 +1934,1 @@\n-\/\/     \/\/ int imo_reg    = Matcher::interpreter_method_oop_reg();\n+\/\/     \/\/ int imo_reg    = Matcher::interpreter_method_reg();\n@@ -3197,1 +3197,1 @@\n-  interpreter_method_oop_reg(EBX);      \/\/ Method Oop Register when calling interpreter\n+  interpreter_method_reg(EBX);          \/\/ Method Register when calling interpreter\n","filename":"src\/hotspot\/cpu\/x86\/x86_32.ad","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -164,2 +164,2 @@\n-\/\/ 2) reg_class compiler_method_oop_reg    ( \/* as def'd in frame section *\/ )\n-\/\/ 2) reg_class interpreter_method_oop_reg ( \/* as def'd in frame section *\/ )\n+\/\/ 2) reg_class compiler_method_reg        ( \/* as def'd in frame section *\/ )\n+\/\/ 2) reg_class interpreter_method_reg     ( \/* as def'd in frame section *\/ )\n@@ -2746,1 +2746,1 @@\n-  interpreter_method_oop_reg(RBX);      \/\/ Method Oop Register when\n+  interpreter_method_reg(RBX);          \/\/ Method Register when\n","filename":"src\/hotspot\/cpu\/x86\/x86_64.ad","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1005,1 +1005,5 @@\n-        interpreter_method_oop_parse(frame, false);\n+        parse_err(WARN, \"Using obsolete Token, interpreter_method_oop_reg\");\n+        skipws();\n+      }\n+      if (strcmp(token,\"interpreter_method_reg\")==0) {\n+        interpreter_method_parse(frame, false);\n@@ -1133,3 +1137,3 @@\n-\/\/------------------------------interpreter_method_oop_parse------------------\n-void ADLParser::interpreter_method_oop_parse(FrameForm *frame, bool native) {\n-  frame->_interpreter_method_oop_reg = parse_one_arg(\"method reg entry\");\n+\/\/------------------------------interpreter_method_parse------------------\n+void ADLParser::interpreter_method_parse(FrameForm *frame, bool native) {\n+  frame->_interpreter_method_reg = parse_one_arg(\"method reg entry\");\n","filename":"src\/hotspot\/share\/adlc\/adlparse.cpp","additions":8,"deletions":4,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -118,1 +118,1 @@\n-  void interpreter_method_oop_parse(FrameForm *frame, bool native);\n+  void interpreter_method_parse(FrameForm *frame, bool native);\n","filename":"src\/hotspot\/share\/adlc\/adlparse.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -339,1 +339,1 @@\n-  char *_interpreter_method_oop_reg;\n+  char *_interpreter_method_reg;\n","filename":"src\/hotspot\/share\/adlc\/formsopt.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -4195,2 +4195,2 @@\n-  \/\/ Interpreter's Method Oop Register, mask definition, and encoding\n-  fprintf(fp_cpp,\"OptoReg::Name Matcher::interpreter_method_oop_reg() {\");\n+  \/\/ Interpreter's Method Register, mask definition, and encoding\n+  fprintf(fp_cpp,\"OptoReg::Name Matcher::interpreter_method_reg() {\");\n@@ -4198,3 +4198,3 @@\n-          _frame->_interpreter_method_oop_reg);\n-  fprintf(fp_cpp,\"int Matcher::interpreter_method_oop_reg_encode() {\");\n-  fprintf(fp_cpp,\" return _regEncode[interpreter_method_oop_reg()]; }\\n\\n\");\n+          _frame->_interpreter_method_reg);\n+  fprintf(fp_cpp,\"int Matcher::interpreter_method_reg_encode() {\");\n+  fprintf(fp_cpp,\" return _regEncode[interpreter_method_reg()]; }\\n\\n\");\n","filename":"src\/hotspot\/share\/adlc\/output_c.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -498,1 +498,1 @@\n-  \/\/ Method oops internally created for method handles may also\n+  \/\/ Methods internally created for method handles may also\n","filename":"src\/hotspot\/share\/oops\/constantPool.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -418,2 +418,2 @@\n-  static OptoReg::Name  interpreter_method_oop_reg();\n-  static int            interpreter_method_oop_reg_encode();\n+  static OptoReg::Name  interpreter_method_reg();\n+  static int            interpreter_method_reg_encode();\n@@ -421,3 +421,3 @@\n-  static OptoReg::Name  compiler_method_oop_reg();\n-  static const RegMask &compiler_method_oop_reg_mask();\n-  static int            compiler_method_oop_reg_encode();\n+  static OptoReg::Name  compiler_method_reg();\n+  static const RegMask &compiler_method_reg_mask();\n+  static int            compiler_method_reg_encode();\n","filename":"src\/hotspot\/share\/opto\/matcher.hpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -341,3 +341,3 @@\n-  \/********************************\/                                                                                                 \\\n-  \/* MethodOop-related structures *\/                                                                                                 \\\n-  \/********************************\/                                                                                                 \\\n+  \/*****************************\/                                                                                                    \\\n+  \/* Method related structures *\/                                                                                                    \\\n+  \/*****************************\/                                                                                                    \\\n@@ -1287,3 +1287,3 @@\n-  \/*************************************\/                                 \\\n-  \/* MethodOop-related data structures *\/                                 \\\n-  \/*************************************\/                                 \\\n+  \/**********************************\/                                    \\\n+  \/* Method related data structures *\/                                    \\\n+  \/**********************************\/                                    \\\n","filename":"src\/hotspot\/share\/runtime\/vmStructs.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"}]}