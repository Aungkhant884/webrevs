{"files":[{"patch":"@@ -78,0 +78,1 @@\n+FileChooser.customApproveButton.textAndMnemonic=Open\n@@ -98,0 +99,1 @@\n+FileChooser.customApproveButtonToolTip.textAndMnemonic=Open selected file\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/swing\/internal\/plaf\/basic\/resources\/basic.properties","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -124,0 +124,2 @@\n+    \/** Custom button Fallback mnemonic *\/\n+    protected int customApproveButtonMnemonic = 0;\n@@ -143,0 +145,2 @@\n+    \/** Custom button Fallback text *\/\n+    protected String customApproveButtonText = null;\n@@ -167,0 +171,2 @@\n+    \/** Custom button tool tip text *\/\n+    protected String customApproveButtonToolTipText = null;\n@@ -407,0 +413,1 @@\n+        customApproveButtonText = UIManager.getString(\"FileChooser.customApproveButtonText\",l);\n@@ -414,0 +421,1 @@\n+        customApproveButtonMnemonic = getMnemonic(\"FileChooser.customApproveButtonMnemonic\", l);\n@@ -421,0 +429,1 @@\n+        customApproveButtonToolTipText = UIManager.getString(\"FileChooser.customApproveButtonToolTipText\",l);\n@@ -465,0 +474,1 @@\n+        customApproveButtonText = null;\n@@ -472,0 +482,1 @@\n+        customApproveButtonToolTipText = null;\n@@ -590,0 +601,2 @@\n+        } else if(fc.getDialogType() == JFileChooser.CUSTOM_DIALOG) {\n+            return customApproveButtonToolTipText;\n@@ -915,0 +928,2 @@\n+        } else if (fc.getDialogType() == JFileChooser.CUSTOM_DIALOG) {\n+            return customApproveButtonMnemonic;\n@@ -929,0 +944,2 @@\n+        } else if (fc.getDialogType() == JFileChooser.CUSTOM_DIALOG) {\n+            return customApproveButtonText;\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/basic\/BasicFileChooserUI.java","additions":17,"deletions":0,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -0,0 +1,131 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+import java.awt.Component;\n+import java.awt.Container;\n+\n+import javax.swing.JButton;\n+import javax.swing.JFileChooser;\n+import javax.swing.JFrame;\n+import javax.swing.SwingUtilities;\n+import javax.swing.UIManager;\n+\n+\/*\n+ * @test\n+ * @bug 8299522\n+ * @key headful\n+ * @summary JFileChooser Test to check for FileChooser's Approve Button Text\n+ *          when CUSTOM_DIALOG type is set.\n+ * @run main CustomApproveButtonTest\n+ *\/\n+\n+public class CustomApproveButtonTest {\n+    private final String customApproveText;\n+    private final String lookAndFeel;\n+    private JFrame frame;\n+\n+    public static void main(String[] args) throws Exception {\n+        SwingUtilities.invokeAndWait(new Runnable() {\n+            public void run() {\n+                UIManager.LookAndFeelInfo[] lookAndFeel = UIManager.getInstalledLookAndFeels();\n+                for (UIManager.LookAndFeelInfo look : lookAndFeel) {\n+                    if (look.getName().equals(\"Aqua\")) {\n+                        continue;\n+                    }\n+                    new CustomApproveButtonTest(look.getClassName());\n+                }\n+            }\n+        });\n+        System.out.println(\"Test Pass!\");\n+    }\n+\n+    private CustomApproveButtonTest(String lookAndFeel) {\n+        System.out.println(\"Testing Look & Feel : \" + lookAndFeel);\n+        frame = new JFrame(\"CustomApproveButtonTest\");\n+        this.lookAndFeel = lookAndFeel;\n+\n+        try {\n+            UIManager.setLookAndFeel(lookAndFeel);\n+        } catch (Exception e) {\n+            fail(\"Failed to set \", e);\n+        }\n+\n+        JFileChooser fileChooser = new JFileChooser();\n+        fileChooser.setDialogType(JFileChooser.CUSTOM_DIALOG);\n+        frame.add(fileChooser);\n+        frame.setVisible(true);\n+        frame.pack();\n+\n+        customApproveText = UIManager.getString(\"FileChooser.customApproveButtonText\", fileChooser.getLocale());\n+\n+        if (customApproveText == null || customApproveText.length() == 0) {\n+            fail(\"Cannot find Custom Approve Button text From UIManager Property!\");\n+            return;\n+        }\n+\n+        JButton customApproveButton = findCustomApproveButton(fileChooser);\n+\n+        if (customApproveButton == null) {\n+            fail(\"Cannot find Custom Approve Button in FileChooser!\");\n+            return;\n+        }\n+\n+        if (frame != null) {\n+            frame.dispose();\n+        }\n+\n+    }\n+\n+    private JButton findCustomApproveButton(Container container) {\n+        JButton result = null;\n+\n+        for (int i = 0; i < container.getComponentCount(); i++) {\n+            Component c = container.getComponent(i);\n+\n+            if (c instanceof JButton && customApproveText.equals(((JButton) c).getText())) {\n+                result = (JButton) c;\n+                break;\n+            }\n+\n+            if (c instanceof Container) {\n+                JButton button = findCustomApproveButton((Container) c);\n+\n+                if (button != null && result == null) {\n+                    result = button;\n+                    break;\n+                }\n+            }\n+        }\n+        return result;\n+    }\n+\n+    private void fail(String s) {\n+        if (frame != null) {\n+            frame.dispose();\n+        }\n+        throw new RuntimeException(\"Test failed: \" + s);\n+    }\n+\n+    private void fail(String s, Throwable e) {\n+        throw new RuntimeException(s + lookAndFeel + \" LookAndFeel. Error : \" + s, e);\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JFileChooser\/CustomApproveButtonTest.java","additions":131,"deletions":0,"binary":false,"changes":131,"status":"added"}]}