{"files":[{"patch":"@@ -38,0 +38,1 @@\n+import javax.swing.SwingUtilities;\n@@ -132,0 +133,13 @@\n+    \/\/ Fetch and select the latest active graph.\n+    private void updateGraphSelection() {\n+        final InputGraphProvider p = LookupHistory.getLast(InputGraphProvider.class);\n+        if (p == null) {\n+            return;\n+        }\n+        try {\n+            manager.setSelectedNodes(new GraphNode[]{FolderNode.getGraphNode(p.getGraph())});\n+        } catch (Exception e) {\n+            Exceptions.printStackTrace(e);\n+        }\n+    }\n+\n@@ -186,0 +200,1 @@\n+        updateGraphSelection();\n@@ -192,1 +207,0 @@\n-        result = null;\n@@ -224,9 +238,3 @@\n-        final InputGraphProvider p = LookupHistory.getLast(InputGraphProvider.class);\n-        if (p == null) {\n-            return;\n-        }\n-        try {\n-            manager.setSelectedNodes(new GraphNode[]{FolderNode.getGraphNode(p.getGraph())});\n-        } catch (Exception e) {\n-            Exceptions.printStackTrace(e);\n-        }\n+        \/\/ Wait for LookupHistory to be updated with the last active graph\n+        \/\/ before selecting it.\n+        SwingUtilities.invokeLater(() -> updateGraphSelection());\n","filename":"src\/utils\/IdealGraphVisualizer\/Coordinator\/src\/main\/java\/com\/sun\/hotspot\/igv\/coordinator\/OutlineTopComponent.java","additions":18,"deletions":10,"binary":false,"changes":28,"status":"modified"}]}