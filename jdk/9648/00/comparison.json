{"files":[{"patch":"@@ -187,7 +187,0 @@\n-oop Generation::par_promote(int thread_num,\n-                            oop obj, markWord m, size_t word_sz) {\n-  \/\/ Could do a bad general impl here that gets a lock.  But no.\n-  ShouldNotCallThis();\n-  return NULL;\n-}\n-\n","filename":"src\/hotspot\/share\/gc\/shared\/generation.cpp","additions":0,"deletions":7,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -270,14 +270,0 @@\n-  \/\/ Thread \"thread_num\" (0 <= i < ParalleGCThreads) wants to promote\n-  \/\/ object \"obj\", whose original mark word was \"m\", and whose size is\n-  \/\/ \"word_sz\".  If possible, allocate space for \"obj\", copy obj into it\n-  \/\/ (taking care to copy \"m\" into the mark word when done, since the mark\n-  \/\/ word of \"obj\" may have been overwritten with a forwarding pointer, and\n-  \/\/ also taking care to copy the klass pointer *last*.  Returns the new\n-  \/\/ object if successful, or else NULL.\n-  virtual oop par_promote(int thread_num, oop obj, markWord m, size_t word_sz);\n-\n-  \/\/ Informs the current generation that all par_promote_alloc's in the\n-  \/\/ collection have been completed; any supporting data structures can be\n-  \/\/ reset.  Default is to do nothing.\n-  virtual void par_promote_alloc_done(int thread_num) {}\n-\n","filename":"src\/hotspot\/share\/gc\/shared\/generation.hpp","additions":0,"deletions":14,"binary":false,"changes":14,"status":"modified"}]}