{"files":[{"patch":"@@ -1803,2 +1803,2 @@\n-                      usage();\n-                      return;\n+                        usage();\n+                        return;\n@@ -1808,1 +1808,1 @@\n-                       filename = t.nextToken();\n+                        filename = t.nextToken();\n@@ -1810,1 +1810,1 @@\n-                       filename = option;\n+                        filename = option;\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/CommandProcessor.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -163,1 +163,1 @@\n-                                System.err.println(\"The \\\"gz\\\" option is not compatible with heap dump in GXL format.\");\n+                                System.err.println(\"\\\"gz\\\" option is not compatible with heap dump in GXL format\");\n@@ -169,1 +169,1 @@\n-                                System.err.println(\"gz option value not an integer (\"+level+\")\");\n+                                System.err.println(\"\\\"gz\\\" option value not an integer (\"+level+\")\");\n@@ -173,1 +173,1 @@\n-                                System.err.println(\"Compression level out of range (1-9): \" + level);\n+                                System.err.println(\"compression level out of range (1-9): \" + level);\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/tools\/JMap.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -517,2 +517,1 @@\n-        \/\/ For compression, the length is written by SegmentedOutputStream\n-        if (useSegmentedHeapDump) return;\n+        assert !useSegmentedHeapDump : \"fillInHeapRecordLength is not supported for segment heap dump\";\n@@ -1253,1 +1252,1 @@\n-      return (gzLevel >= 1 && gzLevel <= 9);\n+        return (gzLevel >= 1 && gzLevel <= 9);\n@@ -1308,1 +1307,1 @@\n-     * The class implements a buffered output stream for segment data.\n+     * The class implements a buffered output stream for segment data dump.\n@@ -1315,1 +1314,1 @@\n-     * When the data to written is larger than internal buffer, or the internal buffer\n+     * If the data to be written are larger than internal buffer, or the internal buffer\n@@ -1338,1 +1337,1 @@\n-         * @param   out                 the underlying output stream.\n+         * @param   out      the underlying output stream.\n@@ -1357,0 +1356,1 @@\n+                   \/\/ Internal buffer is full, extend a larger one.\n@@ -1429,2 +1429,1 @@\n-            if (!allowSegmental) return;\n-            if (!segmentMode) {\n+            if (allowSegmental && !segmentMode) {\n@@ -1441,2 +1440,1 @@\n-            if (!allowSegmental) return;\n-            if (segmentMode) {\n+            if (allowSegmental && segmentMode) {\n@@ -1484,1 +1482,1 @@\n-        \/\/ size before the segment data are written to GZIPOutputStream.\n+        \/\/ size before the segment data are written to underlying GZIPOutputStream.\n@@ -1486,1 +1484,1 @@\n-        \/\/ Buffer size used for resize the segment buffer.\n+        \/\/ Buffer size used to extend the segment buffer.\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/utilities\/HeapHprofBinWriter.java","additions":10,"deletions":12,"binary":false,"changes":22,"status":"modified"}]}