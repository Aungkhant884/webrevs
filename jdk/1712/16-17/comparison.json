{"files":[{"patch":"@@ -1779,0 +1779,1 @@\n+                    err.println(\"More than 2 options specified: \" + cntTokens);\n@@ -1780,34 +1781,20 @@\n-                } else {\n-                    JMap jmap = new JMap();\n-                    String filename = \"heap.bin\";\n-                    int gzlevel = 0;\n-                    \/*\n-                     * Possible command:\n-                     *     dumpheap gz=1 file;\n-                     *     dumpheap gz=1;\n-                     *     dumpheap file;\n-                     *     dumpheap\n-                     *\n-                     * Use default filename if cntTokens == 0.\n-                     * Handle cases with cntTokens == 1 or 2.\n-                     *\/\n-                    if (cntTokens > 2) {\n-                        err.println(\"More than 2 options specified: \" + cntTokens);\n-                        usage();\n-                        return;\n-                    }\n-                    if (cntTokens == 1) { \/\/ first argument could be filename or \"gz=\"\n-                        String option = t.nextToken();\n-                        if (!option.startsWith(\"gz=\")) {\n-                            filename = option;\n-                        } else {\n-                            gzlevel = parseHeapDumpCompressionLevel(option);\n-                            if (gzlevel == 0) {\n-                                usage();\n-                                return;\n-                            }\n-                            filename = \"heap.bin.gz\";\n-                        }\n-                    }\n-                    if (cntTokens == 2) { \/\/ first argument is \"gz=\" followed by filename\n-                        String option = t.nextToken();\n+                    return;\n+                }\n+                JMap jmap = new JMap();\n+                String filename = \"heap.bin\";\n+                int gzlevel = 0;\n+                \/*\n+                 * Possible command:\n+                 *     dumpheap gz=1 file;\n+                 *     dumpheap gz=1;\n+                 *     dumpheap file;\n+                 *     dumpheap\n+                 *\n+                 * Use default filename if cntTokens == 0.\n+                 * Handle cases with cntTokens == 1 or 2.\n+                 *\/\n+                if (cntTokens == 1) { \/\/ first argument could be filename or \"gz=\"\n+                    String option = t.nextToken();\n+                    if (!option.startsWith(\"gz=\")) {\n+                        filename = option;\n+                    } else {\n@@ -1819,6 +1806,1 @@\n-                        filename = t.nextToken();\n-                        if (filename.startsWith(\"gz=\")) {\n-                            err.println(\"Filename should not start with \\\"gz=\\\": \" + filename);\n-                            usage();\n-                            return;\n-                        }\n+                        filename = \"heap.bin.gz\";\n@@ -1826,7 +1808,21 @@\n-                    try {\n-                        jmap.writeHeapHprofBin(filename, gzlevel);\n-                    } catch (Exception e) {\n-                        err.println(\"Error: \" + e);\n-                        if (verboseExceptions) {\n-                            e.printStackTrace(err);\n-                        }\n+                }\n+                if (cntTokens == 2) { \/\/ first argument is \"gz=\" followed by filename\n+                    String option = t.nextToken();\n+                    gzlevel = parseHeapDumpCompressionLevel(option);\n+                    if (gzlevel == 0) {\n+                        usage();\n+                        return;\n+                    }\n+                    filename = t.nextToken();\n+                    if (filename.startsWith(\"gz=\")) {\n+                        err.println(\"Filename should not start with \\\"gz=\\\": \" + filename);\n+                        usage();\n+                        return;\n+                    }\n+                }\n+                try {\n+                    jmap.writeHeapHprofBin(filename, gzlevel);\n+                } catch (Exception e) {\n+                    err.println(\"Error: \" + e);\n+                    if (verboseExceptions) {\n+                        e.printStackTrace(err);\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/CommandProcessor.java","additions":43,"deletions":47,"binary":false,"changes":90,"status":"modified"}]}