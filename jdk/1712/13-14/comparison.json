{"files":[{"patch":"@@ -1784,3 +1784,0 @@\n-                    \/\/ When cntTokens is zero, use default filename.\n-                    \/\/ Handle with cntTokens = 1 or 2.\n-                    String option = cntTokens > 0 ? t.nextToken() : null;\n@@ -1793,0 +1790,3 @@\n+                     *\n+                     * Use default filename if cntTokens == 0.\n+                     * Handle cases with cntTokens == 1 or 2.\n@@ -1794,3 +1794,7 @@\n-                    if (cntTokens == 2) {\n-                        \/* First argument is compression level, second is filename *\/\n-                        \/* Parse \"gz=\" option. *\/\n+                    if (cntTokens > 2) {\n+                        err.println(\"Too big number of options: \" + cntTokens);\n+                        usage();\n+                        return;\n+                    }\n+                    if (cntTokens >= 1) { \/\/ parse first argument which is \"gz=\" option\n+                        String option  = t.nextToken();\n@@ -1798,1 +1802,1 @@\n-                        if (gzlevel == 0) {\n+                        if (gzlevel <= 0 || gzlevel > 9) {\n@@ -1802,1 +1806,3 @@\n-                        \/* Parse filename. *\/\n+                        filename = \"heap.bin.gz\";\n+                    }\n+                    if (cntTokens == 2) { \/\/ parse second argument which is filename\n@@ -1804,2 +1810,0 @@\n-                        \/\/ Don't accept filename that start with \"gz=\" to avoid case like\n-                        \/\/ \"dumpheap gz=1 gz=2\"\n@@ -1807,1 +1811,1 @@\n-                            err.println(\"Illegal filename \\\" + filename + \\\" should not start with \\\"gz=\\\".\");\n+                            err.println(\"Filename should not start with \\\"gz=\\\": \" + filename);\n@@ -1811,11 +1815,0 @@\n-                    } else if (cntTokens == 1) {\n-                        filename = option;\n-                        \/\/ Try to parse \"gz=\" option.\n-                        if (option.startsWith(\"gz=\")) {\n-                            gzlevel = parseHeapDumpCompressionLevel(option);\n-                            if (gzlevel == 0) {\n-                                usage();\n-                                return;\n-                            }\n-                            filename = \"heap.bin.gz\";\n-                        }\n@@ -2101,1 +2094,1 @@\n-        int gzl = 0;\n+\n@@ -2103,18 +2096,18 @@\n-        if (keyValue[0].equals(\"gz\")) {\n-            if (keyValue.length == 1) {\n-                err.println(\"Argument is expected for \\\"gz\\\"\");\n-                return 0;\n-            }\n-            String level = keyValue[1];\n-            try {\n-                gzl = Integer.parseInt(level);\n-            } catch (NumberFormatException e) {\n-                err.println(\"gz option value not an integer (\"+level+\")\");\n-                return 0;\n-            }\n-            if (gzl < 1 || gzl > 9) {\n-                err.println(\"Compression level out of range (1-9): \" + level);\n-                return 0;\n-            }\n-        } else {\n-            err.println(\"Unknown option \\\"\" + option + \"\\\"\");\n+        if (!keyValue[0].equals(\"gz\")) {\n+            err.println(\"Expected option is \\\"gz=\\\"\");\n+            return 0;\n+        }\n+        if (keyValue.length != 2) {\n+            err.println(\"Exactly one argument is expected for option \\\"gz\\\"\");\n+            return 0;\n+        }\n+        int gzl = 0;\n+        String level = keyValue[1];\n+        try {\n+            gzl = Integer.parseInt(level);\n+        } catch (NumberFormatException e) {\n+            err.println(\"gz option value not an integer (\"+level+\")\");\n+            return 0;\n+        }\n+        if (gzl < 1 || gzl > 9) {\n+            err.println(\"Compression level out of range (1-9): \" + level);\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/CommandProcessor.java","additions":34,"deletions":41,"binary":false,"changes":75,"status":"modified"},{"patch":"@@ -129,2 +129,3 @@\n-        System.out.println(\"    --dumpfile <name>       The name of the dump file.\");\n-        System.out.println(\"    --gz <1-9>              The compression level for gzipped dump file.\");\n+        System.out.println(\"        dump options:\");\n+        System.out.println(\"          --dumpfile <name> The name of the dump file.\");\n+        System.out.println(\"          --gz <1-9>        The compression level for gzipped dump file.\");\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/SALauncher.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -60,2 +60,2 @@\n-        System.out.println(\"                                                 \\tIf gz specified, the heap dump is written\");\n-        System.out.println(\"                                                 \\tin gzipped format using the given compression level.\");\n+        System.out.println(\"                                                 \\tIf gz specified, the heap dump is written in gzipped format\");\n+        System.out.println(\"                                                 \\tusing the given compression level.\");\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/tools\/JMap.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}