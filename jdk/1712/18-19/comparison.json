{"files":[{"patch":"@@ -128,1 +128,1 @@\n-        System.out.println(\"    --binaryheap            To dump java heap in hprof binary format. Only valid with --binaryheap.\");\n+        System.out.println(\"    --binaryheap            To dump java heap in hprof binary format.\");\n@@ -130,1 +130,1 @@\n-        System.out.println(\"    --gz <1-9>              The compression level for gzipped dump file.\");\n+        System.out.println(\"    --gz <1-9>              The compression level for gzipped dump file. Only valid with --binaryheap.\");\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/SALauncher.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,0 +28,2 @@\n+import java.nio.ByteBuffer;\n+import java.nio.ByteOrder;\n@@ -535,0 +537,1 @@\n+        \/\/ write length\n@@ -536,6 +539,2 @@\n-\n-        \/\/ write length as integer\n-        fos.write((dumpLen >>> 24) & 0xFF);\n-        fos.write((dumpLen >>> 16) & 0xFF);\n-        fos.write((dumpLen >>> 8) & 0xFF);\n-        fos.write((dumpLen >>> 0) & 0xFF);\n+        byte[] lenBytes = genByteArrayFromInt(dumpLen);\n+        fos.write(lenBytes);\n@@ -1254,0 +1253,8 @@\n+    \/\/ Convert integer to byte array with BIG_ENDIAN byte order.\n+    private static byte[] genByteArrayFromInt(int integer) {\n+        ByteBuffer intBuffer = ByteBuffer.allocate(4);\n+        intBuffer.order(ByteOrder.BIG_ENDIAN);\n+        intBuffer.putInt(integer);\n+        return intBuffer.array();\n+    }\n+\n@@ -1489,4 +1496,2 @@\n-            segmentBuffer[5] = (byte)(size >>> 24);\n-            segmentBuffer[6] = (byte)(size >>> 16);\n-            segmentBuffer[7] = (byte)(size >>>  8);\n-            segmentBuffer[8] = (byte)(size >>>  0);\n+            byte[] lenBytes = genByteArrayFromInt(size);\n+            System.arraycopy(lenBytes, 0, segmentBuffer, 5, 4);\n@@ -1500,4 +1505,3 @@\n-            segmentBuffer[segmentWritten++] = (byte)(v >>> 24);\n-            segmentBuffer[segmentWritten++] = (byte)(v >>> 16);\n-            segmentBuffer[segmentWritten++] = (byte)(v >>>  8);\n-            segmentBuffer[segmentWritten++] = (byte)(v >>>  0);\n+            byte[] intBytes = genByteArrayFromInt(v);\n+            System.arraycopy(intBytes, 0, segmentBuffer, segmentWritten, 4);\n+            segmentWritten += 4;\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/utilities\/HeapHprofBinWriter.java","additions":18,"deletions":14,"binary":false,"changes":32,"status":"modified"}]}