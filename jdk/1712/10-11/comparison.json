{"files":[{"patch":"@@ -1786,11 +1786,21 @@\n-                    if (cntTokens > 0) {\n-                        String option = t.nextToken();\n-                        \/*\n-                         * Possible command:\n-                         *     dumpheap gz=1 file;\n-                         *     dumpheap gz=1;\n-                         *     dumpheap file;\n-                         *\/\n-                        if (cntTokens == 2) {\n-                            \/* First argument is compression level, second is filename *\/\n-                            \/* Parse \"gz=\" option. *\/\n+                    String option = cntTokens > 0 ? t.nextToken() : null;\n+                    \/*\n+                     * Possible command:\n+                     *     dumpheap gz=1 file;\n+                     *     dumpheap gz=1;\n+                     *     dumpheap file;\n+                     *\/\n+                    if (cntTokens == 2) {\n+                        \/* First argument is compression level, second is filename *\/\n+                        \/* Parse \"gz=\" option. *\/\n+                        gzlevel = parseHeapDumpCompressionLevel(option);\n+                        if (gzlevel < 1) {\n+                            usage();\n+                            return;\n+                        }\n+                        \/* Parse filename. *\/\n+                        filename = t.nextToken();\n+                    } else if (cntTokens == 1) {\n+                        filename = option;\n+                        \/\/ Try to parse \"gz=\" option. If failed, treat it as filename\n+                        if (option.startsWith(\"gz=\")) {\n@@ -1799,22 +1809,11 @@\n-                                usage();\n-                                return;\n-                            }\n-                            \/* Parse filename. *\/\n-                            filename = t.nextToken();\n-                        } else if (cntTokens == 1) {\n-                            filename = option;\n-                            \/\/ Try to parse \"gz=\" option. If failed, treat it as filename\n-                            if (option.startsWith(\"gz=\")) {\n-                              gzlevel = parseHeapDumpCompressionLevel(option);\n-                              if (gzlevel < 1) {\n-                                  err.println(\"Can not parse compression level from option \\\"\" + option + \"\\\".\");\n-                                  if (gzlevel == 0) {\n-                                      \/\/ Compression level not in range.\n-                                      usage();\n-                                      return;\n-                                  } else {\n-                                      out.println(\"Use \\\"\" + option +\"\\\" as dumped file name.\");\n-                                  }\n-                              } else {\n-                                  filename = \"heap.bin.gz\";\n-                              }\n+                                err.println(\"Can not parse compression level from option \\\"\" + option + \"\\\".\");\n+                                if (gzlevel == 0) {\n+                                    \/\/ Compression level not in range.\n+                                    usage();\n+                                    return;\n+                                } else {\n+                                    \/\/ Use the whole \"gz=xxx\" as dumped file name.\n+                                    out.println(\"Use \\\"\" + option +\"\\\" as dumped file name.\");\n+                                }\n+                            } else {\n+                                filename = \"heap.bin.gz\";\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/CommandProcessor.java","additions":32,"deletions":33,"binary":false,"changes":65,"status":"modified"}]}