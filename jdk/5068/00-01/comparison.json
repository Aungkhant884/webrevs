{"files":[{"patch":"@@ -1446,1 +1446,1 @@\n-            result = parseInt(nm.substring(index), radix);\n+            result = parseInt(nm, index, nm.length(), radix);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Integer.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1287,1 +1287,1 @@\n-            result = parseLong(nm.substring(index), radix);\n+            result = parseLong(nm, index, nm.length(), radix);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Long.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -79,0 +79,7 @@\n+    @Benchmark\n+    public void decode(Blackhole bh) {\n+        for (String s : strings) {\n+            bh.consume(Integer.decode(s));\n+        }\n+    }\n+\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/Integers.java","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -38,0 +38,1 @@\n+import java.util.concurrent.ThreadLocalRandom;\n@@ -51,0 +52,1 @@\n+    private String[] strings;\n@@ -56,0 +58,2 @@\n+        var random = ThreadLocalRandom.current();\n+        strings = new String[size];\n@@ -59,0 +63,1 @@\n+            strings[i] = \"\" + (random.nextLong(10000) - 5000);\n@@ -60,1 +65,1 @@\n-            longArrayBig[i] = ((100L * i + i) << 32) + 4543 + i * 4;\n+            longArrayBig[i] = ((100L * i + i) << 32) + 4543 + i * 4L;\n@@ -72,0 +77,7 @@\n+    @Benchmark\n+    public void decode(Blackhole bh) {\n+        for (String s : strings) {\n+            bh.consume(Long.decode(s));\n+        }\n+    }\n+\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/Longs.java","additions":13,"deletions":1,"binary":false,"changes":14,"status":"modified"}]}