{"files":[{"patch":"@@ -430,1 +430,11 @@\n-                flavor.equals(DocFlavor.SERVICE_FORMATTED.PRINTABLE))) {\n+                  flavor.equals(DocFlavor.SERVICE_FORMATTED.PRINTABLE) ||\n+                  flavor.equals(DocFlavor.INPUT_STREAM.GIF) ||\n+                  flavor.equals(DocFlavor.INPUT_STREAM.JPEG) ||\n+                  flavor.equals(DocFlavor.INPUT_STREAM.PNG) ||\n+                  flavor.equals(DocFlavor.BYTE_ARRAY.GIF) ||\n+                  flavor.equals(DocFlavor.BYTE_ARRAY.JPEG) ||\n+                  flavor.equals(DocFlavor.BYTE_ARRAY.PNG) ||\n+                  flavor.equals(DocFlavor.URL.GIF) ||\n+                  flavor.equals(DocFlavor.URL.JPEG) ||\n+                  flavor.equals(DocFlavor.URL.PNG)))\n+            {\n@@ -443,1 +453,1 @@\n-                return false;\n+                return attr == SheetCollate.UNCOLLATED;\n","filename":"src\/java.desktop\/share\/classes\/sun\/print\/PSStreamPrintService.java","additions":12,"deletions":2,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -0,0 +1,94 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4884570\n+ * @summary Attribute support reporting should be consistent\n+*\/\n+\n+import java.io.ByteArrayOutputStream;\n+import java.io.OutputStream;\n+\n+import javax.print.DocFlavor;\n+import javax.print.StreamPrintService;\n+import javax.print.StreamPrintServiceFactory;\n+import javax.print.attribute.Attribute;\n+import javax.print.attribute.standard.Chromaticity;\n+import javax.print.attribute.standard.Media;\n+import javax.print.attribute.standard.OrientationRequested;\n+import javax.print.attribute.standard.SheetCollate;\n+import javax.print.attribute.standard.Sides;\n+\n+public class StreamServiceAttributeTest {\n+\n+    private static boolean allSupported = true;\n+    private static Class[] attrClasses = {\n+         Chromaticity.class,\n+         Media.class,\n+         OrientationRequested.class,\n+         SheetCollate.class,\n+         Sides.class,\n+    };\n+\n+    public static void main(String args[]) {\n+\n+        StreamPrintServiceFactory[] fact =\n+          StreamPrintServiceFactory.lookupStreamPrintServiceFactories(\n+                null, null);\n+\n+        if (fact.length == 0) {\n+            return;\n+        }\n+        OutputStream out = new ByteArrayOutputStream();\n+        StreamPrintService sps = fact[0].getPrintService(out);\n+        for (Class<? extends Attribute> ac : attrClasses) {\n+            test(sps, ac);\n+        }\n+\n+        if (!allSupported) {\n+            throw new RuntimeException(\"Inconsistent support reported\");\n+        }\n+    }\n+ \n+    private static void test(StreamPrintService sps,\n+                             Class<? extends Attribute> ac) {\n+        if (!sps.isAttributeCategorySupported(ac)) {\n+            return;\n+        }\n+        DocFlavor[] dfs = sps.getSupportedDocFlavors();\n+        for (DocFlavor f : dfs) {\n+            Attribute[] attrs = (Attribute[])\n+               sps.getSupportedAttributeValues(ac, f, null);\n+            if (attrs == null) {\n+               continue;\n+            }\n+            for (Attribute a : attrs) {\n+                if (!sps.isAttributeValueSupported(a, f, null)) {\n+                    allSupported = false;\n+                    System.out.println(\"Unsupported : \" + f + \" \" + a);\n+                }\n+            }\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/print\/attribute\/StreamServiceAttributeTest.java","additions":94,"deletions":0,"binary":false,"changes":94,"status":"added"}]}