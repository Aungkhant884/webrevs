{"files":[{"patch":"@@ -409,0 +409,12 @@\n+\/\/---------------------print_method_with_lineno--------------------------------\n+void JVMState::print_method_with_lineno(outputStream* st, bool show_name) const {\n+  if (show_name) _method->print_short_name(st);\n+\n+  int lineno = _method->line_number_from_bci(_bci);\n+  if (lineno != -1) {\n+    st->print(\" @ bci:%d (line %d)\", _bci, lineno);\n+  } else {\n+    st->print(\" @ bci:%d\", _bci);\n+  }\n+}\n+\n@@ -413,7 +425,1 @@\n-    _method->print_short_name(st);\n-    int lineno = _method->line_number_from_bci(_bci);\n-    if (lineno != -1) {\n-      st->print(\" @ bci:%d (line %d) \", _bci, lineno);\n-    } else {\n-      st->print(\" @ bci:%d \", _bci);\n-    }\n+    print_method_with_lineno(st, true);\n@@ -545,8 +551,1 @@\n-    if (!printed)\n-      _method->print_short_name(st);\n-    int lineno = _method->line_number_from_bci(_bci);\n-    if (lineno != -1) {\n-      st->print(\" @ bci:%d (line %d)\", _bci, lineno);\n-    } else {\n-      st->print(\" @ bci:%d\", _bci);\n-    }\n+    print_method_with_lineno(st, !printed);\n","filename":"src\/hotspot\/share\/opto\/callnode.cpp","additions":14,"deletions":15,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -309,0 +309,1 @@\n+  void      print_method_with_lineno(outputStream* st, bool show_name) const;\n","filename":"src\/hotspot\/share\/opto\/callnode.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n- * @requires vm.debug == true\n+ * @requires vm.compiler2.enabled & vm.debug == true\n","filename":"test\/hotspot\/jtreg\/compiler\/arguments\/TestPrintOptoAssemblyLineNumbers.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}