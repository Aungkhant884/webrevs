{"files":[{"patch":"@@ -1874,1 +1874,0 @@\n-        }\n@@ -1876,4 +1875,5 @@\n-        SecretKeyConstraintsParameters skcp =\n-                new SecretKeyConstraintsParameters(secKey);\n-        checkWeakConstraint(rb.getString(\"the.generated.secretkey\"),\n-                secKey, skcp);\n+            SecretKeyConstraintsParameters skcp =\n+                    new SecretKeyConstraintsParameters(secKey);\n+            checkWeakConstraint(rb.getString(\"the.generated.secretkey\"),\n+                    secKey, skcp);\n+        }\n@@ -2513,0 +2513,1 @@\n+            keyStore.setEntry(newAlias, entry, pp);\n@@ -2518,1 +2519,0 @@\n-                keyStore.setEntry(newAlias, entry, pp);\n@@ -2520,1 +2520,0 @@\n-                keyStore.setEntry(newAlias, entry, pp);\n@@ -5048,0 +5047,11 @@\n+        \/*\n+         * Skipping a secret key entry if its algorithm starts with \"PBE\".\n+         * This is because keytool can only see it as a PBE key and \"PBE\" is\n+         * an alias of \"PBEwithMD5andDES\" inside the SunJCE security provider,\n+         * and its getAlgorithm() always returns \"PBEwithMD5andDES\". Thus, keytool\n+         * won't be able to determine whether this secret key entry is protected\n+         * by a weak algorithm or not.\n+         *\/\n+        if (secKeyAlg.startsWith(\"PBE\"))\n+            return;\n+\n","filename":"src\/java.base\/share\/classes\/sun\/security\/tools\/keytool\/Main.java","additions":17,"deletions":7,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -60,7 +60,0 @@\n-        SecurityTools.setResponse(\"changeit\", \"changeit\");\n-        SecurityTools.keytool(\"-keystore ks.p12 -storepass changeit \" +\n-                \"-importpass -keyalg PBEWithMD5AndDES -alias newentry\")\n-                .shouldContain(\"Warning\")\n-                .shouldMatch(\"The generated secret key uses the PBEWithMD5AndDES algorithm.*considered a security risk\")\n-                .shouldHaveExitValue(0);\n-\n@@ -72,1 +65,0 @@\n-                .shouldMatch(\"<newentry> uses the PBEWithMD5AndDES algorithm.*considered a security risk\")\n@@ -82,1 +74,0 @@\n-                .shouldMatch(\"<newentry> uses the PBEWithMD5AndDES algorithm.*considered a security risk\")\n@@ -90,1 +81,0 @@\n-                .shouldMatch(\"<newentry> uses the PBEWithMD5AndDES algorithm.*considered a security risk\")\n","filename":"test\/jdk\/sun\/security\/tools\/keytool\/WeakSecretKeyTest.java","additions":0,"deletions":10,"binary":false,"changes":10,"status":"modified"}]}