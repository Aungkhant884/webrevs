{"files":[{"patch":"@@ -66,0 +66,1 @@\n+import sun.security.util.ConstraintsParameters;\n@@ -1860,0 +1861,2 @@\n+                } else if (\"RC2\".equalsIgnoreCase(keyAlgName)) {\n+                    keysize = 128;\n@@ -1875,2 +1878,2 @@\n-        CertPathConstraintsParameters cpcp =\n-                new CertPathConstraintsParameters(secKey, null, null, null);\n+        SecretKeyConstraintsParameters skcp =\n+                new SecretKeyConstraintsParameters(secKey);\n@@ -1878,1 +1881,1 @@\n-                keyAlgName, cpcp);\n+                keyAlgName, skcp);\n@@ -2197,2 +2200,3 @@\n-                cpcp = new CertPathConstraintsParameters(secKey, null, null, null);\n-                checkWeakConstraint(label, secKeyAlg, cpcp);\n+                SecretKeyConstraintsParameters skcp =\n+                        new SecretKeyConstraintsParameters(secKey);\n+                checkWeakConstraint(label, secKeyAlg, skcp);\n@@ -2514,3 +2518,3 @@\n-                    CertPathConstraintsParameters cpcp =\n-                            new CertPathConstraintsParameters(key, null, null, null);\n-                    checkWeakConstraint(\"<\" + newAlias + \">\", key.getAlgorithm(), cpcp);\n+                    SecretKeyConstraintsParameters skcp =\n+                            new SecretKeyConstraintsParameters(key);\n+                    checkWeakConstraint(\"<\" + newAlias + \">\", key.getAlgorithm(), skcp);\n@@ -5036,1 +5040,1 @@\n-            CertPathConstraintsParameters cpcp) {\n+            ConstraintsParameters cp) {\n@@ -5039,1 +5043,1 @@\n-            LEGACY_CHECK.permits(algName, cpcp, false);\n+            LEGACY_CHECK.permits(algName, cp, false);\n@@ -5243,0 +5247,32 @@\n+\n+    private static class SecretKeyConstraintsParameters implements ConstraintsParameters {\n+        private final Key key;\n+        public SecretKeyConstraintsParameters(Key key) {\n+            this.key = key;\n+        }\n+\n+        @Override\n+        public boolean anchorIsJdkCA() {\n+            return false;\n+        }\n+\n+        @Override\n+        public Set<Key> getKeys() {\n+            return null;\n+        }\n+\n+        @Override\n+        public Date getDate() {\n+            return null;\n+        }\n+\n+        @Override\n+        public String getVariant() {\n+            return null;\n+        }\n+\n+        @Override\n+        public String extendedExceptionMsg() {\n+            return null;\n+        }\n+    }\n","filename":"src\/java.base\/share\/classes\/sun\/security\/tools\/keytool\/Main.java","additions":46,"deletions":10,"binary":false,"changes":56,"status":"modified"},{"patch":"@@ -641,2 +641,1 @@\n-# Legacy algorithms for certification path (CertPath) processing and\n-# signed JAR files.\n+# Legacy cryptographic algorithms and key lengths\n","filename":"src\/java.base\/share\/conf\/security\/java.security","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -162,1 +162,0 @@\n-                .shouldNotMatch(\"The certificate #.* of signer #.*\" + \"uses the SHA1withRSA.*will be disabled\")\n","filename":"test\/jdk\/sun\/security\/tools\/keytool\/ReadJar.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -163,1 +163,0 @@\n-                .shouldNotMatch(\"<x>.*SHA1withRSA.*will be disabled\")\n@@ -168,1 +167,0 @@\n-                .shouldNotMatch(\"<x>.*SHA1withRSA.*will be disabled\")\n@@ -183,1 +181,0 @@\n-                .shouldNotMatch(\"The generated certificate.*SHA1withRSA.*will be disabled\")\n@@ -189,1 +186,0 @@\n-                .shouldNotMatch(\"The certificate request.*SHA1withRSA.*will be disabled\")\n@@ -193,1 +189,0 @@\n-                .shouldNotMatch(\"The certificate request.*SHA1withRSA.*will be disabled\")\n@@ -195,1 +190,0 @@\n-                .shouldNotMatch(\"The generated certificate.*SHA1withRSA.*will be disabled\")\n@@ -207,1 +201,0 @@\n-                .shouldNotMatch(\"The issuer.*SHA1withRSA.*will be disabled\")\n@@ -746,1 +739,0 @@\n-                        .shouldNotMatch(\"The generated certificate.*\" + bad + \".*will be disabled\")\n@@ -762,1 +754,0 @@\n-                        .shouldNotMatch(\"The certificate.*\" + bad + \".*will be disabled\")\n@@ -778,1 +769,0 @@\n-                        .shouldNotMatch(\"The certificate.*\" + bad + \".*will be disabled\")\n@@ -794,1 +784,0 @@\n-                        .shouldNotMatch(\"The certificate.*\" + bad + \".*will be disabled\")\n@@ -810,1 +799,0 @@\n-                        .shouldNotMatch(\"The certificate.*\" + bad + \".*will be disabled\")\n@@ -829,1 +817,0 @@\n-                        .shouldNotMatch(\"The certificate.*\" + bad + \".*will be disabled\")\n@@ -847,1 +834,0 @@\n-                        .shouldNotMatch(\"The certificate.*\" + bad + \".*will be disabled\")\n@@ -869,1 +855,0 @@\n-                        .shouldNotMatch(\"The generated CRL.*\" + bad + \".*will be disabled\")\n@@ -887,1 +872,0 @@\n-                        .shouldNotMatch(\"The CRL.*\" + bad + \".*will be disabled\")\n@@ -911,1 +895,0 @@\n-                        .shouldNotMatch(\"The generated certificate request.*\" + bad + \".*will be disabled\")\n@@ -928,1 +911,0 @@\n-                        .shouldNotMatch(\"The certificate request.*\" + bad + \".*will be disabled\")\n","filename":"test\/jdk\/sun\/security\/tools\/keytool\/WeakAlg.java","additions":0,"deletions":18,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -87,0 +87,5 @@\n+\n+        SecurityTools.keytool(\"-keystore ks.p12 -storepass changeit \" +\n+                \"-genseckey -keyalg RC2 -alias rc2key\")\n+                .shouldMatch(\"NoSuchAlgorithmException: unrecognized algorithm name: RC2\")\n+                .shouldHaveExitValue(1);\n","filename":"test\/jdk\/sun\/security\/tools\/keytool\/WeakSecretKeyTest.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"}]}