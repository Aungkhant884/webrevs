{"files":[{"patch":"@@ -529,1 +529,2 @@\n-<p>If no macosx codesign option is specified, the default is to try for <code>hardened<\/code> signing if the debug level is <code>release<\/code> and either the default identity or the specified identity is valid. If hardened isn't possible, then <code>debug<\/code> signing is chosen if it works. If nothing works, the codesign step is skipped. Note that on <code>aarch64<\/code>, the Xcode linker will always perform a default <code>adhoc<\/code> signing without any entitlements, causing attaching and core dumps not to work.<\/p>\n+<p>It's also possible to completely disable any explicit codesign operations done by the JDK build using the configure parameter <code>--without-macosx-codesign<\/code>. The exact behavior then depends on the architecture. For macOS on x64, it (at least at the time of this writing) results in completely unsigned binaries that should still work fine for development and debugging purposes. On aarch64, the Xcode linker will apply a default &quot;adhoc&quot; signing, without any entitlements. Such a build will not allow being attached to or dumping core.<\/p>\n+<p>The default mode &quot;auto&quot; will try for <code>hardened<\/code> signing if the debug level is <code>release<\/code> and either the default identity or the specified identity is valid. If hardened isn't possible, then <code>debug<\/code> signing is chosen if it works. If nothing works, the codesign build step is disabled.<\/p>\n","filename":"doc\/building.html","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -903,6 +903,12 @@\n-If no macosx codesign option is specified, the default is to try for `hardened`\n-signing if the debug level is `release` and either the default identity or the\n-specified identity is valid. If hardened isn't possible, then `debug` signing is\n-chosen if it works. If nothing works, the codesign step is skipped. Note that on\n-`aarch64`, the Xcode linker will always perform a default `adhoc` signing\n-without any entitlements, causing attaching and core dumps not to work.\n+It's also possible to completely disable any explicit codesign operations done\n+by the JDK build using the configure parameter `--without-macosx-codesign`.\n+The exact behavior then depends on the architecture. For macOS on x64, it (at\n+least at the time of this writing) results in completely unsigned binaries that\n+should still work fine for development and debugging purposes. On aarch64, the\n+Xcode linker will apply a default \"adhoc\" signing, without any entitlements.\n+Such a build will not allow being attached to or dumping core.\n+\n+The default mode \"auto\" will try for `hardened` signing if the debug level is\n+`release` and either the default identity or the specified identity is valid.\n+If hardened isn't possible, then `debug` signing is chosen if it works. If\n+nothing works, the codesign build step is disabled.\n","filename":"doc\/building.md","additions":12,"deletions":6,"binary":false,"changes":18,"status":"modified"}]}