{"files":[{"patch":"@@ -94,0 +94,2 @@\n+\n+    \/** AnnotationDefault *\/\n@@ -95,0 +97,2 @@\n+\n+    \/** BootstrapMethods *\/\n@@ -96,0 +100,2 @@\n+\n+    \/** CharacterRangeTable *\/\n@@ -97,0 +103,2 @@\n+\n+    \/** Code *\/\n@@ -98,0 +106,2 @@\n+\n+    \/** CompilationID *\/\n@@ -99,0 +109,2 @@\n+\n+    \/** ConstantValue *\/\n@@ -100,0 +112,2 @@\n+\n+    \/** Deprecated *\/\n@@ -101,0 +115,2 @@\n+\n+    \/** EnclosingMethod *\/\n@@ -102,0 +118,2 @@\n+\n+    \/** Exceptions *\/\n@@ -103,0 +121,2 @@\n+\n+    \/** InnerClasses *\/\n@@ -104,0 +124,2 @@\n+\n+    \/** LineNumberTable *\/\n@@ -105,0 +127,2 @@\n+\n+    \/** LocalVariableTable *\/\n@@ -106,0 +130,2 @@\n+\n+    \/** LocalVariableTypeTable *\/\n@@ -107,0 +133,2 @@\n+\n+    \/** MethodParameters *\/\n@@ -108,0 +136,2 @@\n+\n+    \/** Module *\/\n@@ -109,0 +139,2 @@\n+\n+    \/** ModuleHashes *\/\n@@ -110,0 +142,2 @@\n+\n+    \/** ModuleMainClass *\/\n@@ -111,0 +145,2 @@\n+\n+    \/** ModulePackages *\/\n@@ -112,0 +148,2 @@\n+\n+    \/** ModuleResolution *\/\n@@ -113,0 +151,2 @@\n+\n+    \/** ModuleTarget *\/\n@@ -114,0 +154,2 @@\n+\n+    \/** NestHost *\/\n@@ -115,0 +157,2 @@\n+\n+    \/** NestMembers *\/\n@@ -116,0 +160,2 @@\n+\n+    \/** PermittedSubclasses *\/\n@@ -117,0 +163,2 @@\n+\n+    \/** Record *\/\n@@ -118,0 +166,2 @@\n+\n+    \/** RuntimeInvisibleAnnotations *\/\n@@ -119,0 +169,2 @@\n+\n+    \/** RuntimeInvisibleTypeAnnotations *\/\n@@ -120,0 +172,2 @@\n+\n+    \/**  *\/\n@@ -121,0 +175,2 @@\n+\n+    \/** RuntimeVisibleAnnotations *\/\n@@ -122,0 +178,2 @@\n+\n+    \/** RuntimeVisibleParameterAnnotations *\/\n@@ -123,0 +181,2 @@\n+\n+    \/** RuntimeVisibleTypeAnnotations *\/\n@@ -124,0 +184,2 @@\n+\n+    \/** Signature *\/\n@@ -125,0 +187,2 @@\n+\n+    \/** SourceDebugExtension *\/\n@@ -126,0 +190,2 @@\n+\n+    \/** SourceFile *\/\n@@ -127,0 +193,2 @@\n+\n+    \/** SourceID *\/\n@@ -128,0 +196,2 @@\n+\n+    \/** StackMapTable *\/\n@@ -129,0 +199,2 @@\n+\n+    \/** Synthetic *\/\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/Attributes.java","additions":72,"deletions":0,"binary":false,"changes":72,"status":"modified"},{"patch":"@@ -99,0 +99,3 @@\n+        \/**\n+         * {@return function mapping attribute names to attribute mappers}\n+         *\/\n@@ -119,0 +122,3 @@\n+        \/**\n+         * {@return the class hierarchy resolver}\n+         *\/\n@@ -132,0 +138,2 @@\n+\n+        \/** Preserves the original constant pool when transforming classfile *\/\n@@ -133,0 +141,2 @@\n+\n+        \/** Creates a new constant pool when transforming classfile *\/\n@@ -142,0 +152,2 @@\n+\n+        \/** Patch unreachable code *\/\n@@ -143,0 +155,2 @@\n+\n+        \/** Keep the unreachable code *\/\n@@ -156,0 +170,2 @@\n+\n+        \/** Fail on unresolved labels *\/\n@@ -157,0 +173,2 @@\n+\n+        \/** Filter unresolved labels *\/\n@@ -168,0 +186,2 @@\n+\n+        \/** Process debug elements *\/\n@@ -169,0 +189,2 @@\n+\n+        \/** Drop debug elements *\/\n@@ -179,0 +201,2 @@\n+\n+        \/** Process line numbers *\/\n@@ -180,0 +204,2 @@\n+\n+        \/** Drop line numbers *\/\n@@ -190,0 +216,2 @@\n+\n+        \/** Automatically convert short jumps to long when necessary *\/\n@@ -191,0 +219,2 @@\n+\n+        \/** Fail if short jump overflows *\/\n@@ -202,0 +232,2 @@\n+\n+        \/** Generate stack maps when required *\/\n@@ -203,0 +235,2 @@\n+\n+        \/** Always generate stack maps *\/\n@@ -204,0 +238,2 @@\n+\n+        \/** Drop stack maps from code *\/\n@@ -213,0 +249,2 @@\n+\n+        \/** Process unknown attributes *\/\n@@ -214,0 +252,2 @@\n+\n+        \/** Drop unknown attributes *\/\n@@ -228,0 +268,1 @@\n+     * @throws java.io.IOException\n@@ -263,0 +304,1 @@\n+     * @throws java.io.IOException\n@@ -278,0 +320,1 @@\n+     * @throws java.io.IOException\n@@ -314,0 +357,1 @@\n+     * @throws java.io.IOException\n@@ -325,0 +369,1 @@\n+     * @throws java.io.IOException\n@@ -354,0 +399,12 @@\n+    \/**\n+     * Transform one classfile into a new classfile with the aid of a\n+     * {@link ClassTransform}.  The transform will receive each element of\n+     * this class, as well as a {@link ClassBuilder} for building the new class.\n+     * The transform is free to preserve, remove, or replace elements as it\n+     * sees fit.\n+     *\n+     * @param model class model to transform\n+     * @param newClassName new class name\n+     * @param transform the transform\n+     * @return the bytes of the new class\n+     *\/\n@@ -358,0 +415,19 @@\n+    \/**\n+     * Transform one classfile into a new classfile with the aid of a\n+     * {@link ClassTransform}.  The transform will receive each element of\n+     * this class, as well as a {@link ClassBuilder} for building the new class.\n+     * The transform is free to preserve, remove, or replace elements as it\n+     * sees fit.\n+     *\n+     * @implNote\n+     * This method behaves as if:\n+     * {@snippet lang=java :\n+     *     this.build(newClassName, ConstantPoolBuilder.of(model),\n+     *                     b -> b.transform(model, transform));\n+     * }\n+     *\n+     * @param model class model to transform\n+     * @param newClassName new class name\n+     * @param transform the transform\n+     * @return the bytes of the new class\n+     *\/\n@@ -360,0 +436,1 @@\n+    \/** 0xCAFEBABE *\/\n@@ -362,0 +439,1 @@\n+    \/** 0 *\/\n@@ -363,0 +441,2 @@\n+\n+    \/** 1 *\/\n@@ -364,0 +444,2 @@\n+\n+    \/** 2 *\/\n@@ -365,0 +447,2 @@\n+\n+    \/** 3 *\/\n@@ -366,0 +450,2 @@\n+\n+    \/** 4 *\/\n@@ -367,0 +453,2 @@\n+\n+    \/** 5 *\/\n@@ -368,0 +456,2 @@\n+\n+    \/** 6 *\/\n@@ -369,0 +459,2 @@\n+\n+    \/** 7 *\/\n@@ -370,0 +462,2 @@\n+\n+    \/** 8 *\/\n@@ -371,0 +465,2 @@\n+\n+    \/** 9 *\/\n@@ -372,0 +468,2 @@\n+\n+    \/** 10 *\/\n@@ -373,0 +471,2 @@\n+\n+    \/** 11 *\/\n@@ -374,0 +474,2 @@\n+\n+    \/** 12 *\/\n@@ -375,0 +477,2 @@\n+\n+    \/** 13 *\/\n@@ -376,0 +480,2 @@\n+\n+    \/** 14 *\/\n@@ -377,0 +483,2 @@\n+\n+    \/** 15 *\/\n@@ -378,0 +486,2 @@\n+\n+    \/** 16 *\/\n@@ -379,0 +489,2 @@\n+\n+    \/** 17 *\/\n@@ -380,0 +492,2 @@\n+\n+    \/** 18 *\/\n@@ -381,0 +495,2 @@\n+\n+    \/** 19 *\/\n@@ -382,0 +498,2 @@\n+\n+    \/** 20 *\/\n@@ -383,0 +501,2 @@\n+\n+    \/** 21 *\/\n@@ -384,0 +504,2 @@\n+\n+    \/** 22 *\/\n@@ -385,0 +507,2 @@\n+\n+    \/** 23 *\/\n@@ -386,0 +510,2 @@\n+\n+    \/** 24 *\/\n@@ -387,0 +513,2 @@\n+\n+    \/** 25 *\/\n@@ -388,0 +516,2 @@\n+\n+    \/** 26 *\/\n@@ -389,0 +519,2 @@\n+\n+    \/** 27 *\/\n@@ -390,0 +522,2 @@\n+\n+    \/** 28 *\/\n@@ -391,0 +525,2 @@\n+\n+    \/** 29 *\/\n@@ -392,0 +528,2 @@\n+\n+    \/** 30 *\/\n@@ -393,0 +531,2 @@\n+\n+    \/** 31 *\/\n@@ -394,0 +534,2 @@\n+\n+    \/** 32 *\/\n@@ -395,0 +537,2 @@\n+\n+    \/** 33 *\/\n@@ -396,0 +540,2 @@\n+\n+    \/** 34 *\/\n@@ -397,0 +543,2 @@\n+\n+    \/** 35 *\/\n@@ -398,0 +546,2 @@\n+\n+    \/** 36 *\/\n@@ -399,0 +549,2 @@\n+\n+    \/** 37 *\/\n@@ -400,0 +552,2 @@\n+\n+    \/** 38 *\/\n@@ -401,0 +555,2 @@\n+\n+    \/** 39 *\/\n@@ -402,0 +558,2 @@\n+\n+    \/** 40 *\/\n@@ -403,0 +561,2 @@\n+\n+    \/** 41 *\/\n@@ -404,0 +564,2 @@\n+\n+    \/** 42 *\/\n@@ -405,0 +567,2 @@\n+\n+    \/** 43 *\/\n@@ -406,0 +570,2 @@\n+\n+    \/** 44 *\/\n@@ -407,0 +573,2 @@\n+\n+    \/** 45 *\/\n@@ -408,0 +576,2 @@\n+\n+    \/** 46 *\/\n@@ -409,0 +579,2 @@\n+\n+    \/** 47 *\/\n@@ -410,0 +582,2 @@\n+\n+    \/** 48 *\/\n@@ -411,0 +585,2 @@\n+\n+    \/** 49 *\/\n@@ -412,0 +588,2 @@\n+\n+    \/** 50 *\/\n@@ -413,0 +591,2 @@\n+\n+    \/** 51 *\/\n@@ -414,0 +594,2 @@\n+\n+    \/** 52 *\/\n@@ -415,0 +597,2 @@\n+\n+    \/** 53 *\/\n@@ -416,0 +600,2 @@\n+\n+    \/** 54 *\/\n@@ -417,0 +603,2 @@\n+\n+    \/** 55 *\/\n@@ -418,0 +606,2 @@\n+\n+    \/** 56 *\/\n@@ -419,0 +609,2 @@\n+\n+    \/** 57 *\/\n@@ -420,0 +612,2 @@\n+\n+    \/** 58 *\/\n@@ -421,0 +615,2 @@\n+\n+    \/** 59 *\/\n@@ -422,0 +618,2 @@\n+\n+    \/** 60 *\/\n@@ -423,0 +621,2 @@\n+\n+    \/** 61 *\/\n@@ -424,0 +624,2 @@\n+\n+    \/** 62 *\/\n@@ -425,0 +627,2 @@\n+\n+    \/** 63 *\/\n@@ -426,0 +630,2 @@\n+\n+    \/** 64 *\/\n@@ -427,0 +633,2 @@\n+\n+    \/** 65 *\/\n@@ -428,0 +636,2 @@\n+\n+    \/** 66 *\/\n@@ -429,0 +639,2 @@\n+\n+    \/** 67 *\/\n@@ -430,0 +642,2 @@\n+\n+    \/** 68 *\/\n@@ -431,0 +645,2 @@\n+\n+    \/** 69 *\/\n@@ -432,0 +648,2 @@\n+\n+    \/** 70 *\/\n@@ -433,0 +651,2 @@\n+\n+    \/** 71 *\/\n@@ -434,0 +654,2 @@\n+\n+    \/** 72 *\/\n@@ -435,0 +657,2 @@\n+\n+    \/** 73 *\/\n@@ -436,0 +660,2 @@\n+\n+    \/** 74 *\/\n@@ -437,0 +663,2 @@\n+\n+    \/** 75 *\/\n@@ -438,0 +666,2 @@\n+\n+    \/** 76 *\/\n@@ -439,0 +669,2 @@\n+\n+    \/** 77 *\/\n@@ -440,0 +672,2 @@\n+\n+    \/** 78 *\/\n@@ -441,0 +675,2 @@\n+\n+    \/** 79 *\/\n@@ -442,0 +678,2 @@\n+\n+    \/** 80 *\/\n@@ -443,0 +681,2 @@\n+\n+    \/** 81 *\/\n@@ -444,0 +684,2 @@\n+\n+    \/** 82 *\/\n@@ -445,0 +687,2 @@\n+\n+    \/** 83 *\/\n@@ -446,0 +690,2 @@\n+\n+    \/** 84 *\/\n@@ -447,0 +693,2 @@\n+\n+    \/** 85 *\/\n@@ -448,0 +696,2 @@\n+\n+    \/** 86 *\/\n@@ -449,0 +699,2 @@\n+\n+    \/** 87 *\/\n@@ -450,0 +702,2 @@\n+\n+    \/** 88 *\/\n@@ -451,0 +705,2 @@\n+\n+    \/** 89 *\/\n@@ -452,0 +708,2 @@\n+\n+    \/** 90 *\/\n@@ -453,0 +711,2 @@\n+\n+    \/** 91 *\/\n@@ -454,0 +714,2 @@\n+\n+    \/** 92 *\/\n@@ -455,0 +717,2 @@\n+\n+    \/** 93 *\/\n@@ -456,0 +720,2 @@\n+\n+    \/** 94 *\/\n@@ -457,0 +723,2 @@\n+\n+    \/** 95 *\/\n@@ -458,0 +726,2 @@\n+\n+    \/** 96 *\/\n@@ -459,0 +729,2 @@\n+\n+    \/** 97 *\/\n@@ -460,0 +732,2 @@\n+\n+    \/** 98 *\/\n@@ -461,0 +735,2 @@\n+\n+    \/** 99 *\/\n@@ -462,0 +738,2 @@\n+\n+    \/** 100 *\/\n@@ -463,0 +741,2 @@\n+\n+    \/** 101 *\/\n@@ -464,0 +744,2 @@\n+\n+    \/** 102 *\/\n@@ -465,0 +747,2 @@\n+\n+    \/** 103 *\/\n@@ -466,0 +750,2 @@\n+\n+    \/** 104 *\/\n@@ -467,0 +753,2 @@\n+\n+    \/** 105 *\/\n@@ -468,0 +756,2 @@\n+\n+    \/** 106 *\/\n@@ -469,0 +759,2 @@\n+\n+    \/** 107 *\/\n@@ -470,0 +762,2 @@\n+\n+    \/** 108 *\/\n@@ -471,0 +765,2 @@\n+\n+    \/** 109 *\/\n@@ -472,0 +768,2 @@\n+\n+    \/** 110 *\/\n@@ -473,0 +771,2 @@\n+\n+    \/** 111 *\/\n@@ -474,0 +774,2 @@\n+\n+    \/** 112 *\/\n@@ -475,0 +777,2 @@\n+\n+    \/** 113 *\/\n@@ -476,0 +780,2 @@\n+\n+    \/** 114 *\/\n@@ -477,0 +783,2 @@\n+\n+    \/** 115 *\/\n@@ -478,0 +786,2 @@\n+\n+    \/** 116 *\/\n@@ -479,0 +789,2 @@\n+\n+    \/** 117 *\/\n@@ -480,0 +792,2 @@\n+\n+    \/** 118 *\/\n@@ -481,0 +795,2 @@\n+\n+    \/** 119 *\/\n@@ -482,0 +798,2 @@\n+\n+    \/** 120 *\/\n@@ -483,0 +801,2 @@\n+\n+    \/** 121 *\/\n@@ -484,0 +804,2 @@\n+\n+    \/** 122 *\/\n@@ -485,0 +807,2 @@\n+\n+    \/** 123 *\/\n@@ -486,0 +810,2 @@\n+\n+    \/** 124 *\/\n@@ -487,0 +813,2 @@\n+\n+    \/** 125 *\/\n@@ -488,0 +816,2 @@\n+\n+    \/** 126 *\/\n@@ -489,0 +819,2 @@\n+\n+    \/** 127 *\/\n@@ -490,0 +822,2 @@\n+\n+    \/** 128 *\/\n@@ -491,0 +825,2 @@\n+\n+    \/** 129 *\/\n@@ -492,0 +828,2 @@\n+\n+    \/** 130 *\/\n@@ -493,0 +831,2 @@\n+\n+    \/** 131 *\/\n@@ -494,0 +834,2 @@\n+\n+    \/** 132 *\/\n@@ -495,0 +837,2 @@\n+\n+    \/** 133 *\/\n@@ -496,0 +840,2 @@\n+\n+    \/** 134 *\/\n@@ -497,0 +843,2 @@\n+\n+    \/** 135 *\/\n@@ -498,0 +846,2 @@\n+\n+    \/** 136 *\/\n@@ -499,0 +849,2 @@\n+\n+    \/** 137 *\/\n@@ -500,0 +852,2 @@\n+\n+    \/** 138 *\/\n@@ -501,0 +855,2 @@\n+\n+    \/** 139 *\/\n@@ -502,0 +858,2 @@\n+\n+    \/** 140 *\/\n@@ -503,0 +861,2 @@\n+\n+    \/** 141 *\/\n@@ -504,0 +864,2 @@\n+\n+    \/** 142 *\/\n@@ -505,0 +867,2 @@\n+\n+    \/** 143 *\/\n@@ -506,0 +870,2 @@\n+\n+    \/** 144 *\/\n@@ -507,0 +873,2 @@\n+\n+    \/** 145 *\/\n@@ -508,0 +876,2 @@\n+\n+    \/** 146 *\/\n@@ -509,0 +879,2 @@\n+\n+    \/** 147 *\/\n@@ -510,0 +882,2 @@\n+\n+    \/** 148 *\/\n@@ -511,0 +885,2 @@\n+\n+    \/** 149 *\/\n@@ -512,0 +888,2 @@\n+\n+    \/** 150 *\/\n@@ -513,0 +891,2 @@\n+\n+    \/** 151 *\/\n@@ -514,0 +894,2 @@\n+\n+    \/** 152 *\/\n@@ -515,0 +897,2 @@\n+\n+    \/** 153 *\/\n@@ -516,0 +900,2 @@\n+\n+    \/** 154 *\/\n@@ -517,0 +903,2 @@\n+\n+    \/** 155 *\/\n@@ -518,0 +906,2 @@\n+\n+    \/** 156 *\/\n@@ -519,0 +909,2 @@\n+\n+    \/** 157 *\/\n@@ -520,0 +912,2 @@\n+\n+    \/** 158 *\/\n@@ -521,0 +915,2 @@\n+\n+    \/** 159 *\/\n@@ -522,0 +918,2 @@\n+\n+    \/** 160 *\/\n@@ -523,0 +921,2 @@\n+\n+    \/** 161 *\/\n@@ -524,0 +924,2 @@\n+\n+    \/** 162 *\/\n@@ -525,0 +927,2 @@\n+\n+    \/** 163 *\/\n@@ -526,0 +930,2 @@\n+\n+    \/** 164 *\/\n@@ -527,0 +933,2 @@\n+\n+    \/** 165 *\/\n@@ -528,0 +936,2 @@\n+\n+    \/** 166 *\/\n@@ -529,0 +939,2 @@\n+\n+    \/** 167 *\/\n@@ -530,0 +942,2 @@\n+\n+    \/** 168 *\/\n@@ -531,0 +945,2 @@\n+\n+    \/** 169 *\/\n@@ -532,0 +948,2 @@\n+\n+    \/** 170 *\/\n@@ -533,0 +951,2 @@\n+\n+    \/** 171 *\/\n@@ -534,0 +954,2 @@\n+\n+    \/** 172 *\/\n@@ -535,0 +957,2 @@\n+\n+    \/** 173 *\/\n@@ -536,0 +960,2 @@\n+\n+    \/** 174 *\/\n@@ -537,0 +963,2 @@\n+\n+    \/** 175 *\/\n@@ -538,0 +966,2 @@\n+\n+    \/** 176 *\/\n@@ -539,0 +969,2 @@\n+\n+    \/** 177 *\/\n@@ -540,0 +972,2 @@\n+\n+    \/** 178 *\/\n@@ -541,0 +975,2 @@\n+\n+    \/** 179 *\/\n@@ -542,0 +978,2 @@\n+\n+    \/** 180 *\/\n@@ -543,0 +981,2 @@\n+\n+    \/** 181 *\/\n@@ -544,0 +984,2 @@\n+\n+    \/** 182 *\/\n@@ -545,0 +987,2 @@\n+\n+    \/** 183 *\/\n@@ -546,0 +990,2 @@\n+\n+    \/** 184 *\/\n@@ -547,0 +993,2 @@\n+\n+    \/** 185 *\/\n@@ -548,0 +996,2 @@\n+\n+    \/** 186 *\/\n@@ -549,0 +999,2 @@\n+\n+    \/** 187 *\/\n@@ -550,0 +1002,2 @@\n+\n+    \/** 188 *\/\n@@ -551,0 +1005,2 @@\n+\n+    \/** 189 *\/\n@@ -552,0 +1008,2 @@\n+\n+    \/** 190 *\/\n@@ -553,0 +1011,2 @@\n+\n+    \/** 191 *\/\n@@ -554,0 +1014,2 @@\n+\n+    \/** 192 *\/\n@@ -555,0 +1017,2 @@\n+\n+    \/** 193 *\/\n@@ -556,0 +1020,2 @@\n+\n+    \/** 194 *\/\n@@ -557,0 +1023,2 @@\n+\n+    \/** 195 *\/\n@@ -558,0 +1026,2 @@\n+\n+    \/** 196 *\/\n@@ -559,0 +1029,2 @@\n+\n+    \/** 197 *\/\n@@ -560,0 +1032,2 @@\n+\n+    \/** 198 *\/\n@@ -561,0 +1035,2 @@\n+\n+    \/** 199 *\/\n@@ -562,0 +1038,2 @@\n+\n+    \/** 200 *\/\n@@ -563,0 +1041,2 @@\n+\n+    \/** 201 *\/\n@@ -565,0 +1045,1 @@\n+    \/** 0x0001 *\/\n@@ -566,0 +1047,2 @@\n+\n+    \/** 0x0004 *\/\n@@ -567,0 +1050,2 @@\n+\n+    \/** 0x0002 *\/\n@@ -568,0 +1053,2 @@\n+\n+    \/** 0x0200 *\/\n@@ -569,0 +1056,2 @@\n+\n+    \/** 0x4000 *\/\n@@ -570,0 +1059,2 @@\n+\n+    \/** 0x2000 *\/\n@@ -571,0 +1062,2 @@\n+\n+    \/** 0x0020 *\/\n@@ -572,0 +1065,2 @@\n+\n+    \/** 0x0400 *\/\n@@ -573,0 +1068,2 @@\n+\n+    \/** 0x0040 *\/\n@@ -574,0 +1071,2 @@\n+\n+    \/** 0x0080 *\/\n@@ -575,0 +1074,2 @@\n+\n+    \/** 0x1000 *\/\n@@ -576,0 +1077,2 @@\n+\n+    \/** 0x0008 *\/\n@@ -577,0 +1080,2 @@\n+\n+    \/** 0x0010 *\/\n@@ -578,0 +1083,2 @@\n+\n+    \/** 0x0020 *\/\n@@ -579,0 +1086,2 @@\n+\n+    \/** 0x0040 *\/\n@@ -580,0 +1089,2 @@\n+\n+    \/** 0x0080 *\/\n@@ -581,0 +1092,2 @@\n+\n+    \/** 0x0100 *\/\n@@ -582,0 +1095,2 @@\n+\n+    \/** 0x0800 *\/\n@@ -583,0 +1098,2 @@\n+\n+    \/** 0x8000 *\/\n@@ -584,0 +1101,2 @@\n+\n+    \/** 0x20 *\/\n@@ -585,0 +1104,2 @@\n+\n+    \/** 0x8000 *\/\n@@ -586,0 +1107,2 @@\n+\n+    \/** 0x20 *\/\n@@ -587,0 +1110,2 @@\n+\n+    \/** 0x40 *\/\n@@ -589,0 +1114,1 @@\n+    \/** 0x0001 *\/\n@@ -590,0 +1116,2 @@\n+\n+    \/** 0x0002 *\/\n@@ -591,0 +1119,2 @@\n+\n+    \/** 0x0004 *\/\n@@ -592,0 +1122,2 @@\n+\n+    \/** 0x0008 *\/\n@@ -593,0 +1125,2 @@\n+\n+    \/** 0x0010 *\/\n@@ -594,0 +1128,2 @@\n+\n+    \/** 0x0020 *\/\n@@ -595,0 +1131,2 @@\n+\n+    \/** 0x0040 *\/\n@@ -596,0 +1134,2 @@\n+\n+    \/** 0x0080 *\/\n@@ -597,0 +1137,2 @@\n+\n+    \/** 0x0100 *\/\n@@ -599,0 +1141,1 @@\n+    \/** 7 *\/\n@@ -600,0 +1143,2 @@\n+\n+    \/** 17 *\/\n@@ -601,0 +1146,2 @@\n+\n+    \/** 6 *\/\n@@ -602,0 +1149,2 @@\n+\n+    \/** 9 *\/\n@@ -603,0 +1152,2 @@\n+\n+    \/** 4 *\/\n@@ -604,0 +1155,2 @@\n+\n+    \/** 3 *\/\n@@ -605,0 +1158,2 @@\n+\n+    \/** 11 *\/\n@@ -606,0 +1161,2 @@\n+\n+    \/** 18 *\/\n@@ -607,0 +1164,2 @@\n+\n+    \/** 5 *\/\n@@ -608,0 +1167,2 @@\n+\n+    \/** 15 *\/\n@@ -609,0 +1170,2 @@\n+\n+    \/** 10 *\/\n@@ -610,0 +1173,2 @@\n+\n+    \/** 16 *\/\n@@ -611,0 +1176,2 @@\n+\n+    \/** 19 *\/\n@@ -612,0 +1179,2 @@\n+\n+    \/** 12 *\/\n@@ -613,0 +1182,2 @@\n+\n+    \/** 20 *\/\n@@ -614,0 +1185,2 @@\n+\n+    \/** 8 *\/\n@@ -615,0 +1188,2 @@\n+\n+    \/** 2 *\/\n@@ -616,0 +1191,2 @@\n+\n+    \/** 1 *\/\n@@ -619,0 +1196,2 @@\n+\n+    \/** 'B' *\/\n@@ -620,0 +1199,2 @@\n+\n+    \/** 'C' *\/\n@@ -621,0 +1202,2 @@\n+\n+    \/** 'D' *\/\n@@ -622,0 +1205,2 @@\n+\n+    \/** 'F' *\/\n@@ -623,0 +1208,2 @@\n+\n+    \/** 'I' *\/\n@@ -624,0 +1211,2 @@\n+\n+    \/** 'J' *\/\n@@ -625,0 +1214,2 @@\n+\n+    \/** 'S' *\/\n@@ -626,0 +1217,2 @@\n+\n+    \/** 'Z' *\/\n@@ -627,0 +1220,2 @@\n+\n+    \/** 's' *\/\n@@ -628,0 +1223,2 @@\n+\n+    \/** 'e' *\/\n@@ -629,0 +1226,2 @@\n+\n+    \/** 'c' *\/\n@@ -630,0 +1229,2 @@\n+\n+    \/** '@' *\/\n@@ -631,0 +1232,2 @@\n+\n+    \/** '[' *\/\n@@ -634,0 +1237,2 @@\n+\n+    \/** 0x00 *\/\n@@ -635,0 +1240,2 @@\n+\n+    \/** 0x01 *\/\n@@ -636,0 +1243,2 @@\n+\n+    \/** 0x10 *\/\n@@ -637,0 +1246,2 @@\n+\n+    \/** 0x11 *\/\n@@ -638,0 +1249,2 @@\n+\n+    \/** 0x12 *\/\n@@ -639,0 +1252,2 @@\n+\n+    \/** 0x13 *\/\n@@ -640,0 +1255,2 @@\n+\n+    \/** 0x14 *\/\n@@ -641,0 +1258,2 @@\n+\n+    \/** 0x15 *\/\n@@ -642,0 +1261,2 @@\n+\n+    \/** 0x16 *\/\n@@ -643,0 +1264,2 @@\n+\n+    \/** 0x17 *\/\n@@ -644,0 +1267,2 @@\n+\n+    \/** 0x40 *\/\n@@ -645,0 +1270,2 @@\n+\n+    \/** 0x41 *\/\n@@ -646,0 +1273,2 @@\n+\n+    \/** 0x42 *\/\n@@ -647,0 +1276,2 @@\n+\n+    \/** 0x43 *\/\n@@ -648,0 +1279,2 @@\n+\n+    \/** 0x44 *\/\n@@ -649,0 +1282,2 @@\n+\n+    \/** 0x45 *\/\n@@ -650,0 +1285,2 @@\n+\n+    \/** 0x46 *\/\n@@ -651,0 +1288,2 @@\n+\n+    \/** 0x47 *\/\n@@ -652,0 +1291,2 @@\n+\n+    \/** 0x48 *\/\n@@ -653,0 +1294,2 @@\n+\n+    \/** 0x49 *\/\n@@ -654,0 +1297,2 @@\n+\n+    \/** 0x4A *\/\n@@ -655,0 +1300,2 @@\n+\n+    \/** 0x4B *\/\n@@ -658,0 +1305,2 @@\n+\n+    \/** 0 *\/\n@@ -659,0 +1308,2 @@\n+\n+    \/** 1 *\/\n@@ -660,0 +1311,2 @@\n+\n+    \/** 2 *\/\n@@ -661,0 +1314,2 @@\n+\n+    \/** 3 *\/\n@@ -662,0 +1317,2 @@\n+\n+    \/** 4 *\/\n@@ -663,0 +1320,2 @@\n+\n+    \/** 5 *\/\n@@ -664,0 +1323,2 @@\n+\n+    \/** 6 *\/\n@@ -665,0 +1326,2 @@\n+\n+    \/** 7 *\/\n@@ -666,0 +1329,2 @@\n+\n+    \/** 8 *\/\n@@ -668,0 +1333,1 @@\n+    \/** ACC_PUBLIC *\/\n@@ -670,0 +1336,1 @@\n+    \/** 45 *\/\n@@ -671,0 +1338,2 @@\n+\n+    \/** 46 *\/\n@@ -672,0 +1341,2 @@\n+\n+    \/** 47 *\/\n@@ -673,0 +1344,2 @@\n+\n+    \/** 48 *\/\n@@ -674,0 +1347,2 @@\n+\n+    \/** 49 *\/\n@@ -675,0 +1350,2 @@\n+\n+    \/** 50 *\/\n@@ -676,0 +1353,2 @@\n+\n+    \/** 51 *\/\n@@ -677,0 +1356,2 @@\n+\n+    \/** 52 *\/\n@@ -678,0 +1359,2 @@\n+\n+    \/** 53 *\/\n@@ -679,0 +1362,2 @@\n+\n+    \/** 54 *\/\n@@ -680,0 +1365,2 @@\n+\n+    \/** 55 *\/\n@@ -681,0 +1368,2 @@\n+\n+    \/** 56 *\/\n@@ -682,0 +1371,2 @@\n+\n+    \/** 57 *\/\n@@ -683,0 +1374,2 @@\n+\n+    \/** 58 *\/\n@@ -684,0 +1377,2 @@\n+\n+    \/** 59 *\/\n@@ -685,0 +1380,2 @@\n+\n+    \/** 60 *\/\n@@ -686,0 +1383,2 @@\n+\n+    \/** 61 *\/\n@@ -687,0 +1386,2 @@\n+\n+    \/** 62 *\/\n@@ -688,0 +1389,2 @@\n+\n+    \/** 63 *\/\n@@ -689,0 +1392,2 @@\n+\n+    \/** 64 *\/\n@@ -690,0 +1395,2 @@\n+\n+    \/** 65 *\/\n@@ -691,0 +1398,2 @@\n+\n+    \/** 66 *\/\n@@ -700,0 +1409,3 @@\n+    \/**\n+     * {@return the latest major Java version}\n+     *\/\n@@ -704,0 +1416,3 @@\n+    \/**\n+     * {@return the latest minor Java version}\n+     *\/\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/Classfile.java","additions":715,"deletions":0,"binary":false,"changes":715,"status":"modified"},{"patch":"@@ -31,3 +31,3 @@\n- * Describes the opcodes of the JVM instruction set, as well as a number of\n- * pseudo-instructions that may be encountered when traversing the instructions\n- * of a method.\n+ * Describes the opcodes of the JVM instruction set, as described in {@jvms 6.5}.\n+ * As well as a number of pseudo-instructions that may be encountered when\n+ * traversing the instructions of a method.\n@@ -39,0 +39,2 @@\n+\n+    \/** Do nothing *\/\n@@ -40,0 +42,2 @@\n+\n+    \/** Push null *\/\n@@ -41,0 +45,2 @@\n+\n+    \/** Push int constant -1 *\/\n@@ -42,0 +48,2 @@\n+\n+    \/** Push int constant 0 *\/\n@@ -43,0 +51,2 @@\n+\n+    \/** Push int constant 1 *\/\n@@ -44,0 +54,2 @@\n+\n+    \/** Push int constant 2 *\/\n@@ -45,0 +57,2 @@\n+\n+    \/** Push int constant 3 *\/\n@@ -46,0 +60,2 @@\n+\n+    \/** Push int constant 4 *\/\n@@ -47,0 +63,2 @@\n+\n+    \/** Push int constant 5 *\/\n@@ -48,0 +66,2 @@\n+\n+    \/** Push long constant 0 *\/\n@@ -49,0 +69,2 @@\n+\n+    \/** Push long constant  1 *\/\n@@ -50,0 +72,2 @@\n+\n+    \/** Push float constant 0 *\/\n@@ -51,0 +75,2 @@\n+\n+    \/** Push float constant 1 *\/\n@@ -52,0 +78,2 @@\n+\n+    \/** Push float constant 2 *\/\n@@ -53,0 +81,2 @@\n+\n+    \/** Push double constant 0 *\/\n@@ -54,0 +84,2 @@\n+\n+    \/** Push double constant 1 *\/\n@@ -55,0 +87,2 @@\n+\n+    \/** Push byte *\/\n@@ -56,0 +90,2 @@\n+\n+    \/** Push short *\/\n@@ -57,0 +93,2 @@\n+\n+    \/** Push item from run-time constant pool *\/\n@@ -58,0 +96,2 @@\n+\n+    \/** Push item from run-time constant pool (wide index) *\/\n@@ -59,0 +99,2 @@\n+\n+    \/** Push long or double from run-time constant pool (wide index) *\/\n@@ -60,0 +102,2 @@\n+\n+    \/** Load int from local variable *\/\n@@ -61,0 +105,2 @@\n+\n+    \/** Load long from local variable *\/\n@@ -62,0 +108,2 @@\n+\n+    \/** Load float from local variable *\/\n@@ -63,0 +111,2 @@\n+\n+    \/** Load double from local variable *\/\n@@ -64,0 +114,2 @@\n+\n+    \/** Load reference from local variable *\/\n@@ -65,0 +117,2 @@\n+\n+    \/** Load int from local variable *\/\n@@ -66,0 +120,2 @@\n+\n+    \/** Load int from local variable *\/\n@@ -67,0 +123,2 @@\n+\n+    \/** Load int from local variable *\/\n@@ -68,0 +126,2 @@\n+\n+    \/** Load int from local variable *\/\n@@ -69,0 +129,2 @@\n+\n+    \/** Load long from local variable *\/\n@@ -70,0 +132,2 @@\n+\n+    \/** Load long from local variable *\/\n@@ -71,0 +135,2 @@\n+\n+    \/** Load long from local variable *\/\n@@ -72,0 +138,2 @@\n+\n+    \/** Load long from local variable *\/\n@@ -73,0 +141,2 @@\n+\n+    \/** Load float from local variable *\/\n@@ -74,0 +144,2 @@\n+\n+    \/** Load float from local variable *\/\n@@ -75,0 +147,2 @@\n+\n+    \/** Load float from local variable *\/\n@@ -76,0 +150,2 @@\n+\n+    \/** Load float from local variable *\/\n@@ -77,0 +153,2 @@\n+\n+    \/** Load double from local variable *\/\n@@ -78,0 +156,2 @@\n+\n+    \/** Load double from local variable *\/\n@@ -79,0 +159,2 @@\n+\n+    \/** Load double from local variable *\/\n@@ -80,0 +162,2 @@\n+\n+    \/** Load double from local variable *\/\n@@ -81,0 +165,2 @@\n+\n+    \/**  *\/\n@@ -82,0 +168,2 @@\n+\n+    \/** Load reference from local variable *\/\n@@ -83,0 +171,2 @@\n+\n+    \/** Load reference from local variable *\/\n@@ -84,0 +174,2 @@\n+\n+    \/** Load reference from local variable *\/\n@@ -85,0 +177,2 @@\n+\n+    \/** Load int from array *\/\n@@ -86,0 +180,2 @@\n+\n+    \/** Load long from array *\/\n@@ -87,0 +183,2 @@\n+\n+    \/** Load float from array *\/\n@@ -88,0 +186,2 @@\n+\n+    \/** Load double from array *\/\n@@ -89,0 +189,2 @@\n+\n+    \/** Load reference from array *\/\n@@ -90,0 +192,2 @@\n+\n+    \/** Load byte from array *\/\n@@ -91,0 +195,2 @@\n+\n+    \/** Load char from array *\/\n@@ -92,0 +198,2 @@\n+\n+    \/** Load short from array *\/\n@@ -93,0 +201,2 @@\n+\n+    \/** Store int into local variable *\/\n@@ -94,0 +204,2 @@\n+\n+    \/** Store long into local variable *\/\n@@ -95,0 +207,2 @@\n+\n+    \/** Store float into local variable *\/\n@@ -96,0 +210,2 @@\n+\n+    \/** Store double into local variable *\/\n@@ -97,0 +213,2 @@\n+\n+    \/** Store reference into local variable *\/\n@@ -98,0 +216,2 @@\n+\n+    \/** Store int into local variable *\/\n@@ -99,0 +219,2 @@\n+\n+    \/** Store int into local variable *\/\n@@ -100,0 +222,2 @@\n+\n+    \/** Store int into local variable *\/\n@@ -101,0 +225,2 @@\n+\n+    \/** Store int into local variable *\/\n@@ -102,0 +228,2 @@\n+\n+    \/** Store long into local variable *\/\n@@ -103,0 +231,2 @@\n+\n+    \/** Store long into local variable *\/\n@@ -104,0 +234,2 @@\n+\n+    \/** Store long into local variable *\/\n@@ -105,0 +237,2 @@\n+\n+    \/** Store long into local variable *\/\n@@ -106,0 +240,2 @@\n+\n+    \/** Store float into local variable *\/\n@@ -107,0 +243,2 @@\n+\n+    \/** Store float into local variable *\/\n@@ -108,0 +246,2 @@\n+\n+    \/** Store float into local variable *\/\n@@ -109,0 +249,2 @@\n+\n+    \/** Store float into local variable *\/\n@@ -110,0 +252,2 @@\n+\n+    \/** Store double into local variable *\/\n@@ -111,0 +255,2 @@\n+\n+    \/** Store double into local variable *\/\n@@ -112,0 +258,2 @@\n+\n+    \/** Store double into local variable *\/\n@@ -113,0 +261,2 @@\n+\n+    \/** Store double into local variable *\/\n@@ -114,0 +264,2 @@\n+\n+    \/** Store reference into local variable *\/\n@@ -115,0 +267,2 @@\n+\n+    \/** Store reference into local variable *\/\n@@ -116,0 +270,2 @@\n+\n+    \/** Store reference into local variable *\/\n@@ -117,0 +273,2 @@\n+\n+    \/** Store reference into local variable *\/\n@@ -118,0 +276,2 @@\n+\n+    \/** Store into int array *\/\n@@ -119,0 +279,2 @@\n+\n+    \/** Store into long array *\/\n@@ -120,0 +282,2 @@\n+\n+    \/** Store into float array *\/\n@@ -121,0 +285,2 @@\n+\n+    \/** Store into double array *\/\n@@ -122,0 +288,2 @@\n+\n+    \/** Store into reference array *\/\n@@ -123,0 +291,2 @@\n+\n+    \/** Store into byte array *\/\n@@ -124,0 +294,2 @@\n+\n+    \/** Store into char array *\/\n@@ -125,0 +297,2 @@\n+\n+    \/** Store into short array *\/\n@@ -126,0 +300,2 @@\n+\n+    \/** Pop the top operand stack value *\/\n@@ -127,0 +303,2 @@\n+\n+    \/** Pop the top one or two operand stack values *\/\n@@ -128,0 +306,2 @@\n+\n+    \/** Duplicate the top operand stack value *\/\n@@ -129,0 +309,2 @@\n+\n+    \/** Duplicate the top operand stack value and insert two values down *\/\n@@ -130,0 +312,2 @@\n+\n+    \/** Duplicate the top operand stack value and insert two or three values down *\/\n@@ -131,0 +315,2 @@\n+\n+    \/** Duplicate the top one or two operand stack values *\/\n@@ -132,0 +318,2 @@\n+\n+    \/** Duplicate the top one or two operand stack values and insert two or three values down *\/\n@@ -133,0 +321,2 @@\n+\n+    \/** Duplicate the top one or two operand stack values and insert two, three, or four values down *\/\n@@ -134,0 +324,2 @@\n+\n+    \/** Swap the top two operand stack values *\/\n@@ -135,0 +327,2 @@\n+\n+    \/** Add int *\/\n@@ -136,0 +330,2 @@\n+\n+    \/** Add long *\/\n@@ -137,0 +333,2 @@\n+\n+    \/** Add float *\/\n@@ -138,0 +336,2 @@\n+\n+    \/** Add double *\/\n@@ -139,0 +339,2 @@\n+\n+    \/** Subtract int *\/\n@@ -140,0 +342,2 @@\n+\n+    \/** Subtract long *\/\n@@ -141,0 +345,2 @@\n+\n+    \/** Subtract float *\/\n@@ -142,0 +348,2 @@\n+\n+    \/** Subtract double *\/\n@@ -143,0 +351,2 @@\n+\n+    \/** Multiply int *\/\n@@ -144,0 +354,2 @@\n+\n+    \/** Multiply long *\/\n@@ -145,0 +357,2 @@\n+\n+    \/** Multiply float *\/\n@@ -146,0 +360,2 @@\n+\n+    \/** Multiply double *\/\n@@ -147,0 +363,2 @@\n+\n+    \/** Divide int *\/\n@@ -148,0 +366,2 @@\n+\n+    \/** Divide long *\/\n@@ -149,0 +369,2 @@\n+\n+    \/** Divide float *\/\n@@ -150,0 +372,2 @@\n+\n+    \/** Divide double *\/\n@@ -151,0 +375,2 @@\n+\n+    \/** Remainder int *\/\n@@ -152,0 +378,2 @@\n+\n+    \/** Remainder long *\/\n@@ -153,0 +381,2 @@\n+\n+    \/** Remainder float *\/\n@@ -154,0 +384,2 @@\n+\n+    \/** Remainder double *\/\n@@ -155,0 +387,2 @@\n+\n+    \/** Negate int *\/\n@@ -156,0 +390,2 @@\n+\n+    \/** Negate long *\/\n@@ -157,0 +393,2 @@\n+\n+    \/** Negate float *\/\n@@ -158,0 +396,2 @@\n+\n+    \/** Negate double *\/\n@@ -159,0 +399,2 @@\n+\n+    \/** Shift left int *\/\n@@ -160,0 +402,2 @@\n+\n+    \/** Shift left long *\/\n@@ -161,0 +405,2 @@\n+\n+    \/** Shift right int *\/\n@@ -162,0 +408,2 @@\n+\n+    \/** Shift right long *\/\n@@ -163,0 +411,2 @@\n+\n+    \/** Logical shift right int *\/\n@@ -164,0 +414,2 @@\n+\n+    \/** Logical shift right long *\/\n@@ -165,0 +417,2 @@\n+\n+    \/** Boolean AND int *\/\n@@ -166,0 +420,2 @@\n+\n+    \/** Boolean AND long *\/\n@@ -167,0 +423,2 @@\n+\n+    \/** Boolean OR int *\/\n@@ -168,0 +426,2 @@\n+\n+    \/** Boolean OR long *\/\n@@ -169,0 +429,2 @@\n+\n+    \/** Boolean XOR int *\/\n@@ -170,0 +432,2 @@\n+\n+    \/** Boolean XOR long *\/\n@@ -171,0 +435,2 @@\n+\n+    \/** Increment local variable by constant *\/\n@@ -172,0 +438,2 @@\n+\n+    \/** Convert int to long *\/\n@@ -173,0 +441,2 @@\n+\n+    \/** Convert int to float *\/\n@@ -174,0 +444,2 @@\n+\n+    \/** Convert int to double *\/\n@@ -175,0 +447,2 @@\n+\n+    \/** Convert long to int *\/\n@@ -176,0 +450,2 @@\n+\n+    \/** Convert long to float *\/\n@@ -177,0 +453,2 @@\n+\n+    \/** Convert long to double *\/\n@@ -178,0 +456,2 @@\n+\n+    \/** Convert float to int *\/\n@@ -179,0 +459,2 @@\n+\n+    \/** Convert float to long *\/\n@@ -180,0 +462,2 @@\n+\n+    \/** Convert float to double *\/\n@@ -181,0 +465,2 @@\n+\n+    \/** Convert double to int *\/\n@@ -182,0 +468,2 @@\n+\n+    \/** Convert double to long *\/\n@@ -183,0 +471,2 @@\n+\n+    \/** Convert double to float *\/\n@@ -184,0 +474,2 @@\n+\n+    \/** Convert int to byte *\/\n@@ -185,0 +477,2 @@\n+\n+    \/** Convert int to char *\/\n@@ -186,0 +480,2 @@\n+\n+    \/** Convert int to short *\/\n@@ -187,0 +483,2 @@\n+\n+    \/** Compare long *\/\n@@ -188,0 +486,2 @@\n+\n+    \/** Compare float *\/\n@@ -189,0 +489,2 @@\n+\n+    \/** Compare float *\/\n@@ -190,0 +492,2 @@\n+\n+    \/** Compare double *\/\n@@ -191,0 +495,2 @@\n+\n+    \/** Compare double *\/\n@@ -192,0 +498,2 @@\n+\n+    \/** Branch if int comparison with zero succeeds *\/\n@@ -193,0 +501,2 @@\n+\n+    \/** Branch if int comparison with zero succeeds *\/\n@@ -194,0 +504,2 @@\n+\n+    \/** Branch if int comparison with zero succeeds *\/\n@@ -195,0 +507,2 @@\n+\n+    \/** Branch if int comparison with zero succeeds *\/\n@@ -196,0 +510,2 @@\n+\n+    \/** Branch if int comparison with zero succeeds *\/\n@@ -197,0 +513,2 @@\n+\n+    \/** Branch if int comparison with zero succeeds *\/\n@@ -198,0 +516,2 @@\n+\n+    \/** Branch if int comparison succeeds *\/\n@@ -199,0 +519,2 @@\n+\n+    \/** Branch if int comparison succeeds *\/\n@@ -200,0 +522,2 @@\n+\n+    \/** Branch if int comparison succeeds *\/\n@@ -201,0 +525,2 @@\n+\n+    \/** Branch if int comparison succeeds *\/\n@@ -202,0 +528,2 @@\n+\n+    \/** Branch if int comparison succeeds *\/\n@@ -203,0 +531,2 @@\n+\n+    \/** Branch if int comparison succeeds *\/\n@@ -204,0 +534,2 @@\n+\n+    \/** Branch if reference comparison succeeds *\/\n@@ -205,0 +537,2 @@\n+\n+    \/** Branch if reference comparison succeeds *\/\n@@ -206,0 +540,2 @@\n+\n+    \/** Branch always *\/\n@@ -207,0 +543,2 @@\n+\n+    \/** Jump subroutine *\/\n@@ -208,0 +546,2 @@\n+\n+    \/** Return from subroutine *\/\n@@ -209,0 +549,2 @@\n+\n+    \/** Access jump table by index and jump *\/\n@@ -210,0 +552,2 @@\n+\n+    \/** Access jump table by key match and jump *\/\n@@ -211,0 +555,2 @@\n+\n+    \/** Return int from method *\/\n@@ -212,0 +558,2 @@\n+\n+    \/** Return long from method *\/\n@@ -213,0 +561,2 @@\n+\n+    \/** Return float from method *\/\n@@ -214,0 +564,2 @@\n+\n+    \/** Return double from method *\/\n@@ -215,0 +567,2 @@\n+\n+    \/** Return reference from method *\/\n@@ -216,0 +570,2 @@\n+\n+    \/** Return void from method *\/\n@@ -217,0 +573,2 @@\n+\n+    \/** Get static field from class *\/\n@@ -218,0 +576,2 @@\n+\n+    \/** Set static field in class *\/\n@@ -219,0 +579,2 @@\n+\n+    \/** Fetch field from object *\/\n@@ -220,0 +582,2 @@\n+\n+    \/** Set field in object *\/\n@@ -221,0 +585,2 @@\n+\n+    \/** Invoke instance method; dispatch based on class *\/\n@@ -222,0 +588,5 @@\n+\n+    \/**\n+     * Invoke instance method; direct invocation of instance initialization\n+     * methods and methods of the current class and its supertypes\n+     *\/\n@@ -223,0 +594,2 @@\n+\n+    \/** Invoke a class (static) method *\/\n@@ -224,0 +597,2 @@\n+\n+    \/** Invoke interface method *\/\n@@ -225,0 +600,2 @@\n+\n+    \/** Invoke a dynamically-computed call site *\/\n@@ -226,0 +603,2 @@\n+\n+    \/** Create new object *\/\n@@ -227,0 +606,2 @@\n+\n+    \/** Create new array *\/\n@@ -228,0 +609,2 @@\n+\n+    \/** Create new array of reference *\/\n@@ -229,0 +612,2 @@\n+\n+    \/** Get length of array *\/\n@@ -230,0 +615,2 @@\n+\n+    \/** Throw exception or error *\/\n@@ -231,0 +618,2 @@\n+\n+    \/** Check whether object is of given type *\/\n@@ -232,0 +621,2 @@\n+\n+    \/** Determine if object is of given type *\/\n@@ -233,0 +624,2 @@\n+\n+    \/** Enter monitor for object *\/\n@@ -234,0 +627,2 @@\n+\n+    \/** Exit monitor for object *\/\n@@ -235,0 +630,2 @@\n+\n+    \/** Create new multidimensional array *\/\n@@ -236,0 +633,2 @@\n+\n+    \/** Branch if reference is null *\/\n@@ -237,0 +636,2 @@\n+\n+    \/** Branch if reference not null *\/\n@@ -238,0 +639,2 @@\n+\n+    \/** Branch always (wide index) *\/\n@@ -239,0 +642,2 @@\n+\n+    \/** Jump subroutine (wide index) *\/\n@@ -240,0 +645,2 @@\n+\n+    \/** Load int from local variable (wide index) *\/\n@@ -241,0 +648,2 @@\n+\n+    \/** Load long from local variable (wide index) *\/\n@@ -242,0 +651,2 @@\n+\n+    \/** Load float from local variable (wide index) *\/\n@@ -243,0 +654,2 @@\n+\n+    \/** Load double from local variable (wide index) *\/\n@@ -244,0 +657,2 @@\n+\n+    \/** Load reference from local variable (wide index) *\/\n@@ -245,0 +660,2 @@\n+\n+    \/** Store int into local variable (wide index) *\/\n@@ -246,0 +663,2 @@\n+\n+    \/** Store long into local variable (wide index) *\/\n@@ -247,0 +666,2 @@\n+\n+    \/** Store float into local variable (wide index) *\/\n@@ -248,0 +669,2 @@\n+\n+    \/** Store double into local variable (wide index) *\/\n@@ -249,0 +672,2 @@\n+\n+    \/** Store reference into local variable (wide index) *\/\n@@ -250,0 +675,2 @@\n+\n+    \/** Return from subroutine (wide index) *\/\n@@ -251,0 +678,2 @@\n+\n+    \/** Increment local variable by constant (wide index) *\/\n@@ -257,5 +686,78 @@\n-        LOAD, STORE, INCREMENT, BRANCH, LOOKUP_SWITCH, TABLE_SWITCH, RETURN, THROW_EXCEPTION,\n-        FIELD_ACCESS, INVOKE, INVOKE_DYNAMIC,\n-        NEW_OBJECT, NEW_PRIMITIVE_ARRAY, NEW_REF_ARRAY, NEW_MULTI_ARRAY,\n-        TYPE_CHECK, ARRAY_LOAD, ARRAY_STORE, STACK, CONVERT, OPERATOR, CONSTANT,\n-        MONITOR, NOP, DISCONTINUED_JSR, DISCONTINUED_RET;\n+\n+        \/** Load from local variable *\/\n+        LOAD,\n+\n+        \/** Store into local variable *\/\n+        STORE,\n+\n+        \/** Increment local variable *\/\n+        INCREMENT,\n+\n+        \/** Branch *\/\n+        BRANCH,\n+\n+        \/** Access jump table by key match and jump *\/\n+        LOOKUP_SWITCH,\n+\n+        \/** Access jump table by index and jump *\/\n+        TABLE_SWITCH,\n+\n+        \/** Return from method *\/\n+        RETURN,\n+\n+        \/** Throw exception or error *\/\n+        THROW_EXCEPTION,\n+\n+        \/** Access field *\/\n+        FIELD_ACCESS,\n+\n+        \/** Invoke method or constructor *\/\n+        INVOKE,\n+\n+        \/** Invoke a dynamically-computed call site *\/\n+        INVOKE_DYNAMIC,\n+\n+        \/** Create new object *\/\n+        NEW_OBJECT,\n+\n+        \/** Create new array *\/\n+        NEW_PRIMITIVE_ARRAY,\n+\n+        \/** Create new reference array *\/\n+        NEW_REF_ARRAY,\n+\n+        \/** Create new multidimensional array *\/\n+        NEW_MULTI_ARRAY,\n+\n+        \/** Check whether object is of given type *\/\n+        TYPE_CHECK,\n+\n+        \/** Load from array *\/\n+        ARRAY_LOAD,\n+\n+        \/** Store into array *\/\n+        ARRAY_STORE,\n+\n+        \/** Stack operations *\/\n+        STACK,\n+\n+        \/** Type conversions *\/\n+        CONVERT,\n+\n+        \/** Operators *\/\n+        OPERATOR,\n+\n+        \/** Constants *\/\n+        CONSTANT,\n+\n+        \/** Monitor *\/\n+        MONITOR,\n+\n+        \/** Do nothing *\/\n+        NOP,\n+\n+        \/** Discontinued jump subroutine *\/\n+        DISCONTINUED_JSR,\n+\n+        \/** Discontinued return from subroutine *\/\n+        DISCONTINUED_RET;\n@@ -273,1 +775,1 @@\n-        this(bytecode, sizeIfFixed, kind, null, null, 0, null);\n+        this(bytecode, sizeIfFixed, kind, null, null, -1, null);\n@@ -277,1 +779,1 @@\n-        this(bytecode, sizeIfFixed, kind, typeKind, null, 0, null);\n+        this(bytecode, sizeIfFixed, kind, typeKind, null, -1, null);\n@@ -308,0 +810,3 @@\n+    \/**\n+     * {@return bytecode}\n+     *\/\n@@ -310,0 +815,3 @@\n+    \/**\n+     * {@return true if the instruction has extended local variable index by additional bytes}\n+     *\/\n@@ -312,0 +820,3 @@\n+    \/**\n+     * {@return size of the instruction if fixed, or -1 otherwise}\n+     *\/\n@@ -314,0 +825,3 @@\n+    \/**\n+     * {@return instruction kind}\n+     *\/\n@@ -316,0 +830,3 @@\n+    \/**\n+     * {@return primary type kind for instructions operating with at least one type, or null otherwise}\n+     *\/\n@@ -320,0 +837,3 @@\n+    \/**\n+     * {@return secondary type kind for instructions operating with two types, or null otherwise}\n+     *\/\n@@ -324,0 +844,3 @@\n+    \/**\n+     * {@return local variable slot for instructions operating with local variable, or -1 otherwise}\n+     *\/\n@@ -328,0 +851,3 @@\n+    \/**\n+     * {@return constant value for constant instructions, or null otherwise}\n+     *\/\n@@ -332,0 +858,3 @@\n+    \/**\n+     * {@return true if the instruction represents an unconditional branch}\n+     *\/\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/Opcode.java","additions":539,"deletions":10,"binary":false,"changes":549,"status":"modified"}]}