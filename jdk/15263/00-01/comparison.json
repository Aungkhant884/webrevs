{"files":[{"patch":"@@ -2409,2 +2409,3 @@\n-        } else if (widget_type == PASSWORD_FIELD && state_type == GTK_STATE_INSENSITIVE\n-            && color_type == TEXT_FOREGROUND) {\n+        } else if ((widget_type == TEXT_FIELD || widget_type == PASSWORD_FIELD\n+            || widget_type == SPINNER_TEXT_FIELD || widget_type == FORMATTED_TEXT_FIELD)\n+            && state_type == GTK_STATE_INSENSITIVE && color_type == TEXT_FOREGROUND) {\n","filename":"src\/java.desktop\/unix\/native\/libawt_xawt\/awt\/gtk3_interface.c","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+import java.awt.FlowLayout;\n@@ -40,0 +41,1 @@\n+import javax.swing.JComponent;\n@@ -41,0 +43,1 @@\n+import javax.swing.JFormattedTextField;\n@@ -42,0 +45,3 @@\n+import javax.swing.JSpinner;\n+import javax.swing.SpinnerNumberModel;\n+import javax.swing.JTextField;\n@@ -50,0 +56,6 @@\n+    private static JTextField textField;\n+    private static JFormattedTextField formattedTextField;\n+    private static JSpinner spinner;\n+    private static Robot robot;\n+    private static BufferedImage enabledImg;\n+    private static BufferedImage disabledImg;\n@@ -53,1 +65,2 @@\n-        Robot robot = new Robot();\n+        boolean testFail = false;\n+        robot = new Robot();\n@@ -56,3 +69,2 @@\n-            SwingUtilities.invokeAndWait(() -> {\n-                createAndShowUI();\n-            });\n+            SwingUtilities.invokeAndWait(\n+                    TestDisabledPasswordFieldForegroundColor::createAndShowUI);\n@@ -61,12 +73,1 @@\n-            robot.delay(500);\n-            Point pt = passwordField.getLocationOnScreen();\n-            BufferedImage enabledImg =\n-                    robot.createScreenCapture(new Rectangle(pt.x, pt.y,\n-                            passwordField.getWidth(), passwordField.getHeight()));\n-            passwordField.setEnabled(false);\n-            robot.waitForIdle();\n-            robot.delay(500);\n-            BufferedImage disabledImg =\n-                    robot.createScreenCapture(new Rectangle(pt.x, pt.y,\n-                            passwordField.getWidth(), passwordField.getHeight()));\n-            boolean passed = compareImage(enabledImg,disabledImg);\n+            robot.delay(1000);\n@@ -74,1 +75,2 @@\n-            if (!passed) {\n+            if (!testComponent(passwordField, 20, 10)) {\n+                System.out.println(\"Disabled JPasswordField foreground color not grayed out\");\n@@ -77,1 +79,26 @@\n-                throw new RuntimeException(\"Disabled JPasswordField foreground color not grayed out\");\n+                testFail = true;\n+            }\n+\n+            if (!testComponent(textField, 20, 10)) {\n+                System.out.println(\"Disabled JTextField foreground color not grayed out\");\n+                ImageIO.write(enabledImg, \"png\", new File(\"JTextFieldEnabledImg.png\"));\n+                ImageIO.write(disabledImg, \"png\", new File(\"JTextFieldDisabledImg.png\"));\n+                testFail = true;\n+            }\n+\n+            if (!testComponent(formattedTextField, 20, 10)) {\n+                System.out.println(\"Disabled JFormattedTextField foreground color not grayed out\");\n+                ImageIO.write(enabledImg, \"png\", new File(\"JFormattedTextFieldEnabledImg.png\"));\n+                ImageIO.write(disabledImg, \"png\", new File(\"JFormattedTextFieldDisabledImg.png\"));\n+                testFail = true;\n+            }\n+\n+            if (!testComponent(spinner, 10, 5)) {\n+                System.out.println(\"Disabled JSpinner foreground color not grayed out\");\n+                ImageIO.write(enabledImg, \"png\", new File(\"JSpinnerTextFieldEnabledImg.png\"));\n+                ImageIO.write(disabledImg, \"png\", new File(\"JSpinnerTextFieldDisabledImg.png\"));\n+                testFail = true;\n+            }\n+\n+            if (testFail) {\n+                throw new RuntimeException(\"Disabled Component foreground color not grayed out\");\n@@ -89,1 +116,2 @@\n-        frame = new JFrame(\"Test Disabled Password Field Foreground Color\");\n+        frame = new JFrame(\"Test Disabled Component Foreground Color\");\n+        frame.getContentPane().setLayout(new FlowLayout(FlowLayout.CENTER,5,5));\n@@ -92,1 +120,12 @@\n-        frame.add(passwordField);\n+        textField = new JTextField(\"TextField\");\n+        textField.setEnabled(true);\n+        formattedTextField = new JFormattedTextField(\"FormattedTextField\");\n+        formattedTextField.setEnabled(true);\n+        SpinnerNumberModel model = new SpinnerNumberModel(5, 0, 10, 1);\n+        spinner = new JSpinner(model);\n+        spinner.setEnabled(true);\n+\n+        frame.getContentPane().add(passwordField);\n+        frame.getContentPane().add(textField);\n+        frame.getContentPane().add(formattedTextField);\n+        frame.getContentPane().add(spinner);\n@@ -94,1 +133,1 @@\n-        frame.setSize(150, 100);\n+        frame.setSize(500, 150);\n@@ -100,0 +139,13 @@\n+    private static boolean testComponent(JComponent c, int xOffset, int yOffset)\n+            throws Exception {\n+        Point pt = c.getLocationOnScreen();\n+        enabledImg = robot.createScreenCapture(new Rectangle(pt.x, pt.y,\n+                        c.getWidth(), c.getHeight()));\n+        c.setEnabled(false);\n+        robot.waitForIdle();\n+        robot.delay(500);\n+        disabledImg = robot.createScreenCapture(new Rectangle(pt.x, pt.y,\n+                        c.getWidth(), c.getHeight()));\n+        return compareImage(enabledImg, disabledImg, xOffset, yOffset);\n+    }\n+\n@@ -101,1 +153,1 @@\n-    * Compare JPasswordField enabled and disabled state image and if both images\n+    * Compare enabled and disabled state image and if both images\n@@ -106,1 +158,2 @@\n-    private static boolean compareImage(BufferedImage img1, BufferedImage img2) {\n+    private static boolean compareImage(BufferedImage img1, BufferedImage img2,\n+                                        int xOffset, int yOffset) {\n@@ -110,2 +163,2 @@\n-            for (int x = 10; x < img1.getWidth()\/2; ++x) {\n-                for (int y = 10; y < img1.getHeight()-10; ++y) {\n+            for (int x = xOffset; x < img1.getWidth() \/ 2; ++x) {\n+                for (int y = yOffset; y < img1.getHeight() - 5; ++y) {\n@@ -116,2 +169,2 @@\n-                            Math.abs(c1.getRed() - c2.getRed()) > tolerance ||\n-                            Math.abs(c1.getRed() - c2.getRed()) > tolerance) {\n+                            Math.abs(c1.getGreen() - c2.getGreen()) > tolerance ||\n+                            Math.abs(c1.getBlue() - c2.getBlue()) > tolerance) {\n","filename":"test\/jdk\/javax\/swing\/JPasswordField\/TestDisabledPasswordFieldForegroundColor.java","additions":80,"deletions":27,"binary":false,"changes":107,"status":"modified"}]}