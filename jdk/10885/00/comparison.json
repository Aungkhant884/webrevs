{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,0 +38,6 @@\n+    private static final String PROPERTY_ENABLE_FILE_NAME_ENCODING =\n+        \"java.nio.file.Path.ENABLE_FILE_NAME_ENCODING\";\n+\n+    private static final boolean ENCODE_FILE_NAMES =\n+        Boolean.getBoolean(PROPERTY_ENABLE_FILE_NAME_ENCODING);\n+\n@@ -49,4 +55,5 @@\n-        for (int i = 0; i < path.length(); i++) {\n-            char c = path.charAt(i);\n-            if (c > 0x80)\n-                return new String(normalizepath(path.toCharArray(),\n+        if (ENCODE_FILE_NAMES) {\n+            for (int i = 0; i < path.length(); i++) {\n+                char c = path.charAt(i);\n+                if (c > 0x80)\n+                    return new String(normalizepath(path.toCharArray(),\n@@ -54,0 +61,1 @@\n+            }\n@@ -60,4 +68,6 @@\n-        for (int i = 0; i < path.length(); i++) {\n-            if (path.charAt(i) > 0x80)\n-                return new String(normalizepath(path.toCharArray(),\n-                                  kCFStringNormalizationFormC));\n+        if (ENCODE_FILE_NAMES) {\n+            for (int i = 0; i < path.length(); i++) {\n+                if (path.charAt(i) > 0x80)\n+                    return new String(normalizepath(path.toCharArray(),\n+                                      kCFStringNormalizationFormC));\n+            }\n","filename":"src\/java.base\/macosx\/classes\/sun\/nio\/fs\/MacOSXFileSystem.java","additions":19,"deletions":9,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,0 +30,1 @@\n+import java.text.Normalizer.Form;\n@@ -84,2 +85,5 @@\n-        String dname_nfd = Normalizer.normalize(dname, Normalizer.Form.NFD);\n-        String fname_nfd = Normalizer.normalize(fname_nfc, Normalizer.Form.NFD);\n+        Normalizer.Form form =\n+            Boolean.getBoolean(\"java.nio.file.Path.ENABLE_FILE_NAME_ENCODING\") ?\n+            Normalizer.Form.NFD : Normalizer.Form.NFC;\n+        String dname_nfd = Normalizer.normalize(dname, form);\n+        String fname_nfd = Normalizer.normalize(fname_nfc, form);\n","filename":"test\/jdk\/java\/nio\/file\/Path\/MacPath.java","additions":7,"deletions":3,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,1 +25,1 @@\n- * @bug 7130915\n+ * @bug 7130915 8289689\n@@ -37,0 +37,1 @@\n+ * @run main\/othervm -Djava.nio.file.Path.ENABLE_FILE_NAME_ENCODING=true MacPathTest\n@@ -42,0 +43,4 @@\n+    private static final String FILE_NAME_ENCODING_PROPERTY =\n+        \"java.nio.file.Path.ENABLE_FILE_NAME_ENCODING\";\n+    private static final boolean ENABLE_FILE_NAME_ENCODING =\n+        Boolean.getBoolean(FILE_NAME_ENCODING_PROPERTY);\n@@ -44,1 +49,8 @@\n-        ProcessBuilder pb = ProcessTools.createTestJvm(MacPath.class.getName());\n+        ProcessBuilder pb;\n+        if (ENABLE_FILE_NAME_ENCODING) {\n+            String option = ENABLE_FILE_NAME_ENCODING ?\n+                \"-D\" + FILE_NAME_ENCODING_PROPERTY + \"=true\" : \"\";\n+            pb = ProcessTools.createTestJvm(option, MacPath.class.getName());\n+        } else {\n+            pb = ProcessTools.createTestJvm(MacPath.class.getName());\n+        }\n","filename":"test\/jdk\/java\/nio\/file\/Path\/MacPathTest.java","additions":15,"deletions":3,"binary":false,"changes":18,"status":"modified"}]}