{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,1 @@\n+import sun.security.action.GetPropertyAction;\n@@ -38,0 +39,12 @@\n+    private static final String PROPERTY_NORMALIZE_FILE_PATHS =\n+        \"jdk.nio.path.useNormalizationFormD\";\n+\n+    private static final boolean NORMALIZE_FILE_PATHS;\n+\n+    static {\n+        final String name = PROPERTY_NORMALIZE_FILE_PATHS;\n+        String value = GetPropertyAction.privilegedGetProperty(name);\n+        NORMALIZE_FILE_PATHS = (value != null)\n+            && (\"\".equals(value) || Boolean.parseBoolean(value));\n+    }\n+\n@@ -49,4 +62,5 @@\n-        for (int i = 0; i < path.length(); i++) {\n-            char c = path.charAt(i);\n-            if (c > 0x80)\n-                return new String(normalizepath(path.toCharArray(),\n+        if (NORMALIZE_FILE_PATHS) {\n+            for (int i = 0; i < path.length(); i++) {\n+                char c = path.charAt(i);\n+                if (c > 0x80)\n+                    return new String(normalizepath(path.toCharArray(),\n@@ -54,0 +68,1 @@\n+            }\n@@ -60,4 +75,6 @@\n-        for (int i = 0; i < path.length(); i++) {\n-            if (path.charAt(i) > 0x80)\n-                return new String(normalizepath(path.toCharArray(),\n-                                  kCFStringNormalizationFormC));\n+        if (NORMALIZE_FILE_PATHS) {\n+            for (int i = 0; i < path.length(); i++) {\n+                if (path.charAt(i) > 0x80)\n+                    return new String(normalizepath(path.toCharArray(),\n+                                      kCFStringNormalizationFormC));\n+            }\n","filename":"src\/java.base\/macosx\/classes\/sun\/nio\/fs\/MacOSXFileSystem.java","additions":26,"deletions":9,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,0 +30,1 @@\n+import java.text.Normalizer.Form;\n@@ -34,0 +35,2 @@\n+    private static final String PROPERTY_NORMALIZE_FILE_PATHS =\n+        \"jdk.nio.path.useNormalizationFormD\";\n@@ -84,2 +87,4 @@\n-        String dname_nfd = Normalizer.normalize(dname, Normalizer.Form.NFD);\n-        String fname_nfd = Normalizer.normalize(fname_nfc, Normalizer.Form.NFD);\n+        Normalizer.Form form = Boolean.getBoolean(PROPERTY_NORMALIZE_FILE_PATHS)\n+            ? Normalizer.Form.NFD : Normalizer.Form.NFC;\n+        String dname_nfd = Normalizer.normalize(dname, form);\n+        String fname_nfd = Normalizer.normalize(fname_nfc, form);\n","filename":"test\/jdk\/java\/nio\/file\/Path\/MacPath.java","additions":8,"deletions":3,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,1 +25,1 @@\n- * @bug 7130915\n+ * @bug 7130915 8289689\n@@ -37,0 +37,1 @@\n+ * @run main\/othervm -Djdk.nio.path.useNormalizationFormD=true MacPathTest\n@@ -42,0 +43,4 @@\n+    private static final String PROPERTY_NORMALIZE_FILE_PATHS =\n+        \"jdk.nio.path.useNormalizationFormD\";\n+    private static final boolean NORMALIZE_FILE_PATHS =\n+        Boolean.getBoolean(PROPERTY_NORMALIZE_FILE_PATHS);\n@@ -44,1 +49,7 @@\n-        ProcessBuilder pb = ProcessTools.createTestJvm(MacPath.class.getName());\n+        ProcessBuilder pb;\n+        if (NORMALIZE_FILE_PATHS) {\n+            String option = \"-D\" + PROPERTY_NORMALIZE_FILE_PATHS + \"=true\";\n+            pb = ProcessTools.createTestJvm(option, MacPath.class.getName());\n+        } else {\n+            pb = ProcessTools.createTestJvm(MacPath.class.getName());\n+        }\n","filename":"test\/jdk\/java\/nio\/file\/Path\/MacPathTest.java","additions":14,"deletions":3,"binary":false,"changes":17,"status":"modified"}]}