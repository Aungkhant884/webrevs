{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -66,0 +66,24 @@\n+    \/**\n+     * {@return a short description of the tool, or an empty\n+     * {@code Optional} if no description is available}\n+     *\n+     * @apiNote It is recommended that the description fits into a single\n+     * line in order to allow creating concise overviews like the following:\n+     * <pre>{@code\n+     * jar\n+     *   Create, manipulate, and extract an archive of classes and resources.\n+     * javac\n+     *   Read Java declarations and compile them into class files.\n+     * jlink\n+     *   Assemble a set of modules (...) into a custom runtime image.\n+     * }\n+     * <\/pre>\n+     *\n+     * @implSpec This implementation returns an empty {@code Optional}.\n+     *\n+     * @since 19\n+     *\/\n+    default Optional<String> description() {\n+        return Optional.empty();\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/java\/util\/spi\/ToolProvider.java","additions":25,"deletions":1,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,1 @@\n+import java.util.Optional;\n@@ -31,0 +32,2 @@\n+import com.sun.tools.javac.util.JavacMessages;\n+\n@@ -44,0 +47,5 @@\n+    public Optional<String> description() {\n+        JavacMessages messages = new JavacMessages(Main.javacBundleName);\n+        return Optional.of(messages.getLocalizedString(\"javac.description\"));\n+    }\n+\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/main\/JavacToolProvider.java","additions":9,"deletions":1,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 1999, 2021, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 1999, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,4 @@\n+## tool\n+\n+javac.description=read Java class and interface definitions and compile them into bytecode and class files\n+\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/javac.properties","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,1 @@\n+import java.util.Optional;\n@@ -36,0 +37,4 @@\n+    public Optional<String> description() {\n+        return Optional.of(Main.getMsg(\"jar.description\"));\n+    }\n+\n","filename":"src\/jdk.jartool\/share\/classes\/sun\/tools\/jar\/JarToolProvider.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 1999, 2021, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 1999, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,4 @@\n+## tool\n+\n+jar.description=create an archive for classes and resources, and manipulate or restore individual classes or resources from an archive\n+\n","filename":"src\/jdk.jartool\/share\/classes\/sun\/tools\/jar\/resources\/jar.properties","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,2 @@\n+import com.sun.tools.javac.util.Context;\n+import com.sun.tools.javac.util.JavacMessages;\n@@ -29,0 +31,2 @@\n+import java.util.Optional;\n+import java.util.ResourceBundle;\n@@ -46,0 +50,7 @@\n+    \/\/ @Override - commented out due to interim builds of javadoc with JDKs < 19.\n+    public Optional<String> description() {\n+        JavacMessages messages = JavacMessages.instance(new Context());\n+        messages.add(locale -> ResourceBundle.getBundle(\"jdk.javadoc.internal.tool.resources.javadoc\", locale));\n+        return Optional.of(messages.getLocalizedString(\"javadoc.description\"));\n+    }\n+\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/tool\/JavadocToolProvider.java","additions":12,"deletions":1,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,2 @@\n+javadoc.description=generate HTML pages of API documentation from Java source files\n+\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/tool\/resources\/javadoc.properties","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,1 @@\n+import java.util.Optional;\n@@ -68,0 +69,5 @@\n+        public Optional<String> description() {\n+            JavapTask t = new JavapTask();\n+            return Optional.of(t.getMessage(\"javap.description\"));\n+        }\n+\n","filename":"src\/jdk.jdeps\/share\/classes\/com\/sun\/tools\/javap\/Main.java","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -26,0 +26,2 @@\n+javap.description=disassemble one or more class files\n+\n","filename":"src\/jdk.jdeps\/share\/classes\/com\/sun\/tools\/javap\/resources\/javap.properties","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,1 @@\n+import java.util.Optional;\n@@ -72,0 +73,4 @@\n+        public Optional<String> description() {\n+            return Optional.of(JdepsTask.getMessage(\"jdeps.description\"));\n+        }\n+\n","filename":"src\/jdk.jdeps\/share\/classes\/com\/sun\/tools\/jdeps\/Main.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -26,0 +26,2 @@\n+jdeps.description=launch the Java class dependency analyzer\n+\n","filename":"src\/jdk.jdeps\/share\/classes\/com\/sun\/tools\/jdeps\/resources\/jdeps.properties","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,1 @@\n+import java.util.Optional;\n@@ -64,0 +65,6 @@\n+        @Override\n+        public Optional<String> description() {\n+            TaskHelper taskHelper = new TaskHelper(TaskHelper.JLINK_BUNDLE);\n+            return Optional.of(taskHelper.getMessage(\"jlink.desciption\"));\n+        }\n+\n","filename":"src\/jdk.jlink\/share\/classes\/jdk\/tools\/jlink\/internal\/Main.java","additions":8,"deletions":1,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2015, 2018, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,2 @@\n+jlink.description=assemble and optimize a set of modules and their dependencies into a custom runtime image\n+\n","filename":"src\/jdk.jlink\/share\/classes\/jdk\/tools\/jlink\/resources\/jlink.properties","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1604,1 +1604,1 @@\n-    private static String getMessage(String key, Object... args) {\n+    static String getMessage(String key, Object... args) {\n","filename":"src\/jdk.jlink\/share\/classes\/jdk\/tools\/jmod\/JmodTask.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,1 @@\n+import java.util.Optional;\n@@ -58,0 +59,5 @@\n+        @Override\n+        public Optional<String> description() {\n+            return Optional.of(JmodTask.getMessage(\"jmod.description\"));\n+        }\n+\n","filename":"src\/jdk.jlink\/share\/classes\/jdk\/tools\/jmod\/Main.java","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,2 @@\n+jmod.description=create JMOD files and list the content of existing JMOD files\n+\n@@ -118,2 +120,0 @@\n-\n-\n","filename":"src\/jdk.jlink\/share\/classes\/jdk\/tools\/jmod\/resources\/jmod.properties","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,1 @@\n+import java.util.Optional;\n@@ -43,0 +44,4 @@\n+    public Optional<String> description() {\n+        return Optional.of(jdk.jpackage.main.Main.I18N.getString(\"jpackage.description\"));\n+    }\n+\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/JPackageToolProvider.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -27,0 +27,2 @@\n+jpackage.description=package a self-contained Java application\n+\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/resources\/MainResources.properties","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-    private static final ResourceBundle I18N = ResourceBundle.getBundle(\n+    public static final ResourceBundle I18N = ResourceBundle.getBundle(\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/main\/Main.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}