{"files":[{"patch":"@@ -1972,1 +1972,1 @@\n-void MacroAssembler::rol32_imm(Register dst, Register src, uint32_t shift, Register tmp) {\n+void MacroAssembler::rolw_imm(Register dst, Register src, uint32_t shift, Register tmp) {\n@@ -1975,1 +1975,1 @@\n-  assert(shift < 64, \"shift amount must be < 64\");\n+  assert(shift < 32, \"shift amount must be < 32\");\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -599,1 +599,1 @@\n-    guarantee(is_simm13(offset) && ((offset % 2) == 0),                                                  \\\n+    guarantee(is_simm13(offset) && is_even(offset),                                                      \\\n@@ -777,1 +777,1 @@\n-  void rol32_imm(Register dst, Register src, uint32_t, Register tmp = t0);\n+  void rolw_imm(Register dst, Register src, uint32_t, Register tmp = t0);\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -3970,1 +3970,1 @@\n-    __ rol32_imm(a, a, s, rtmp1);\n+    __ rolw_imm(a, a, s, rtmp1);\n","filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}