{"files":[{"patch":"@@ -1971,0 +1971,11 @@\n+\/\/ rotate left with shift bits, 32-bit version\n+void MacroAssembler::rol32_imm(Register dst, Register src, uint32_t shift, Register tmp) {\n+  assert_different_registers(dst, tmp);\n+  assert_different_registers(src, tmp);\n+  assert(shift < 64, \"shift amount must be < 64\");\n+\n+  srliw(tmp, src, 32 - shift);\n+  slliw(dst, src, shift);\n+  orr(dst, dst, tmp);\n+}\n+\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp","additions":11,"deletions":0,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -777,0 +777,1 @@\n+  void rol32_imm(Register dst, Register src, uint32_t, Register tmp = t0);\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -3917,1 +3917,1 @@\n-  \/\/ Each 64-byte register typically corresponds to 2 32-byte integers.\n+  \/\/ Each 64-bit register typically corresponds to 2 32-bit integers.\n@@ -3940,1 +3940,1 @@\n-    \/\/ Generate code extracting i-th unsigned word (4 bytes) from cached 64 bytes.\n+    \/\/ Generate code extracting i-th unsigned word (4 bytes).\n@@ -3954,6 +3954,0 @@\n-  void rotate_left_32(Register rd, Register rs, uint bits, Register rtmp1, Register rtmp2) {\n-    __ srliw(rtmp1, rs, 32 - bits);\n-    __ slliw(rtmp2, rs, bits);\n-    __ orr(rd, rtmp1, rtmp2);\n-  }\n-\n@@ -3976,1 +3970,1 @@\n-    rotate_left_32(a, a, s, rtmp1, rtmp2);\n+    __ rol32_imm(a, a, s, rtmp1);\n","filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp","additions":3,"deletions":9,"binary":false,"changes":12,"status":"modified"}]}