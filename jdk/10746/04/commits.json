[{"commit":{"message":"Merge branch 'master' into 8285488"},"files":[],"sha":"385366d1fb865fd306ef184242896de82a01399a"},{"commit":{"message":"refactor: typos"},"files":[{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/ThrowsTaglet.java"},{"filename":"test\/langtools\/jdk\/javadoc\/doclet\/testThrowsInheritanceMatching\/TestExceptionTypeMatching.java"}],"sha":"c12b5a7cc92f48fab10e858b6a68925087711575"},{"commit":{"message":"refactor: re-arrange imports conventionally"},"files":[{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/InheritableTaglet.java"}],"sha":"c485c435306e110e86f7bedab3e6a92bcdf65e8d"},{"commit":{"message":"refactor: clean up DocFinder"},"files":[{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/DocFinder.java"}],"sha":"9d6358a7397f80c51d345b9cab62f84e08fe5e8f"},{"commit":{"message":"refactor: improve comment and a catch block"},"files":[{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/ThrowsTaglet.java"}],"sha":"68223f1d6ddd21c021b4d2d0e0926e60eb42ff97"},{"commit":{"message":"refactor: SuppressWarning(\"serial\")"},"files":[{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/ThrowsTaglet.java"},{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/DocFinder.java"}],"sha":"667c22ce735e458dc5a5478ca85cb7373afc7949"},{"commit":{"message":"refactor: improve error handling"},"files":[{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/resources\/doclets.properties"},{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/ThrowsTaglet.java"},{"filename":"test\/langtools\/jdk\/javadoc\/doclet\/testThrowsInheritanceMatching\/TestExceptionTypeMatching.java"},{"filename":"test\/langtools\/jdk\/javadoc\/doclet\/testThrowsInheritanceMultiple\/TestOneToMany.java"}],"sha":"c2db1ae66f4ec96dd4f97c795cd29e33f1b7115e"},{"commit":{"message":"refactor: clarify, reuse, simplify, clean up"},"files":[{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/ThrowsTaglet.java"},{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/DocFinder.java"}],"sha":"be383c9bae98ca735be2e046c266ce6b5830c42a"},{"commit":{"message":"refactor: pass Utils & BaseConfiguration to taglet\n\nThis simplifies lots of methods. Later this could be done for other\ntaglets too."},"files":[{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/TagletManager.java"},{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/ThrowsTaglet.java"}],"sha":"1f24f1854d3aa93a77f002a2f2cf561959a98e2f"},{"commit":{"message":"refactor: better code comments"},"files":[{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/ThrowsTaglet.java"}],"sha":"03df720c3d3cf9a41d0400727c51dd9faa086ede"},{"commit":{"message":"refactor: add more relevant excerpts from JLS"},"files":[{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/ThrowsTaglet.java"}],"sha":"a3eaae1f6f1a24df2d3d95c440a08d712c8748a9"},{"commit":{"message":"fix: introduce more control to search\n\nThis is done for the sake of `@throws`. Two convenience methods are\nadded to assist migration from Optional with minimal change to\nDocFinder call sites.\n\nThis solves 8295800: When searching documentation for an exception,\ndon't jump over methods that don't mention that exception."},"files":[{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/builders\/MemberSummaryBuilder.java"},{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/builders\/MethodBuilder.java"},{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/InheritDocTaglet.java"},{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/ParamTaglet.java"},{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/ReturnTaglet.java"},{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/SeeTaglet.java"},{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/SimpleTaglet.java"},{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/SpecTaglet.java"},{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/ThrowsTaglet.java"},{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/CommentHelper.java"},{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/DocFinder.java"},{"filename":"test\/langtools\/jdk\/javadoc\/doclet\/testTagInheritance\/TestTagInheritance.java"},{"filename":"test\/langtools\/jdk\/javadoc\/doclet\/testTagInheritance\/pkg\/TestSuperSuperClass.java"}],"sha":"bf9cfc059a559b21536623a2f7fda067f99e199c"},{"commit":{"message":"refactor: clean up ThrowsTaglet"},"files":[{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/ThrowsTaglet.java"}],"sha":"659c63430c4726a8bb9a6ae1dfb306bba6021b39"},{"commit":{"message":"Merge branch 'master' into HEAD"},"files":[{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/standard.properties"}],"sha":"2a49bccf5e64c94e2e8065b38b98d7c22ae4c824"},{"commit":{"message":"fix: test failed due to filesystem handling issues\n\nFiled 8295543 to track that filesystem issue and fixed the test to make\nsure the package cannot be confused with the type parameter, whose\nname is not pertinent to the test anyway."},"files":[{"filename":"test\/langtools\/jdk\/javadoc\/doclet\/testThrowsInheritanceMatching\/TestExceptionTypeMatching.java"}],"sha":"001c4cbc43b58373ebc0ce31bcb10e7543ea2b54"},{"commit":{"message":"Merge branch 'master' into 8285488"},"files":[],"sha":"b0e21743486a2de2b6dbfadb5ad7b7d83eb362ab"},{"commit":{"message":"fix: process @throws {@inheritDoc} in ThrowsTaglet"},"files":[{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/TagletWriterImpl.java"},{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/standard.properties"},{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/resources\/doclets.properties"},{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/TagletWriter.java"},{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/ThrowsTaglet.java"},{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/CommentHelper.java"},{"filename":"test\/langtools\/jdk\/javadoc\/doclet\/testThrowsInheritanceMatching\/TestExceptionTypeMatching.java"},{"filename":"test\/langtools\/jdk\/javadoc\/doclet\/testThrowsInheritanceMultiple\/TestOneToMany.java"}],"sha":"10cfc7f9feacb55279796894b1e46dac2e647179"},{"commit":{"message":"Merge branch 'master' into 8285488"},"files":[],"sha":"88ff688f35193ce521d536c500c18544be7eae40"},{"commit":{"message":"unrelated: use Text, not RawHtml for exceptions\n\nWe are not expecting HTML in an exception name."},"files":[{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/TagletWriterImpl.java"}],"sha":"cc95dc61e1cf81fca980f9e9b53098038aa3c820"},{"commit":{"message":"fix: remove auto-inheriting of subexceptions\n\nThis effectively implements 8287796: Stop auto-inheriting documentation\nfor subclasses of exceptions whose documentation is inherited.\n\nAll tests pass. The only difference in the JDK API Documentation is\nthe order of exceptions in some methods of RMIConnectionImpl_Stub:\nMBeanException and MBeanRegistrationException are ordered\nreversely. That difference is insignificant."},"files":[{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/ThrowsTaglet.java"},{"filename":"test\/langtools\/jdk\/javadoc\/doclet\/testTagInheritance\/TestTagInheritance.java"},{"filename":"test\/langtools\/jdk\/javadoc\/doclet\/testTagInheritance\/pkg\/TestAbstractClass.java"}],"sha":"2475c1f2834dd5ad671c0f05a3e9c906a9a3d29b"},{"commit":{"message":"Merge branch 'master' into 8285488"},"files":[{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/standard.properties"},{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/SpecTaglet.java"},{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/Utils.java"}],"sha":"32788bb880b350639698f1f8b221273320a75112"},{"commit":{"message":"Merge branch 'master' into 8285488"},"files":[{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/standard.properties"},{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/SpecTaglet.java"},{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/CommentHelper.java"},{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/Utils.java"}],"sha":"fe34a4fc24155d826652d26e76607a8cfec82eb3"},{"commit":{"message":"refactor: simplify compound ops on set"},"files":[{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/ThrowsTaglet.java"}],"sha":"6485a60d5319f23906a1e1ded55a43d21dee3edf"},{"commit":{"message":"refactor: abstract out \"Throws:\" section building\n\nWhy should ThrowsTaglet be constantly bothered with minor details such\nas if and when to add header?"},"files":[{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/ThrowsTaglet.java"}],"sha":"c6db042fd1d9370345f0c9723d9ac05f18fa057b"},{"commit":{"message":"refactor: support exceptions in DocFinder.search\n\nProvides a specialized version of Function, which can optionally throw\na checked exception."},"files":[{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/DocFinder.java"}],"sha":"4ba658f098fadf649a99f23ecaff065caed98464"},{"commit":{"message":"refactor: unused declaration"},"files":[{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/ThrowsTaglet.java"}],"sha":"9c8fe3c3737731009d3bc906d6283ec803072d2e"},{"commit":{"message":"fix: report error when cannot find exception name\n\nDoclint does this already:\n\n  error: reference not found\n       * @throws X {@inheritDoc}\n         ^\n\nNot sure how to coordinate doclint with the other diagnostic system\nso that they work in a mutually exclusive fashion and not double\nreport."},"files":[{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/standard.properties"},{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/ThrowsTaglet.java"}],"sha":"2aaa5866899d67c738ec21e2e769fed072e7721d"},{"commit":{"message":"unrelated: clarify Utils.getSimpleName0"},"files":[{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/Utils.java"}],"sha":"ec3d8139de90c55aaf66bd1b21e018584130701d"},{"commit":{"message":"unrelated: add a note to a test case"},"files":[{"filename":"test\/langtools\/jdk\/javadoc\/doclet\/testThrowsInheritance\/pkg\/Abstract.java"}],"sha":"98ad61423aeef43374ddbe38f5fc4340b9e6647f"},{"commit":{"message":"refactor: do not use \"stringly typed\" exceptions\n\nComparing exceptions by their string names is incorrect.\nThis commit makes ThrowsTaglet \"javax.lang.model typed\"\nrather than \"stringly typed\".\n\nChanging the comparison mechanism broke 2 tests, which were\nsubsequently fixed by removing problematic @throws\/@exception tag.\nIn neither test exceptions were pertinent:\n\n* testHtmlDefinitionListTag used `@exception HeadlessException` to test\n  HTML structure of `<dl>` tags generated by javadoc (see 6786690).\n  For whatever reason, the exception was unknown. It's possible that\n  it was supposed to be java.awt.HeadlessException, but it was neither\n  imported nor FQNed in the tag. Since a particular type of exception\n  does not matter in that test, this PR FQNed that exception.\n\n* TestStdDoclet used `@throws DoesNotExist` as one of the warnings to\n  contribute to the total warning count. Interestingly enough, the\n  unknown exception in `@throws` was never warned about, unlike\n  unknown references in 2 `@see` tags. This PR substitutes that\n  exception with a separate test. Note that if \"-Xdoclint:none\"\n  is removed, then that @throws tag triggers a doclint error:\n\n      error: reference not found\n\nTo test and support the comparison mechanism change, many new tests\nwere introduced. They clearly show why being \"stringly typed\" is wrong\nfor ThrowsTaglet."},"files":[{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/ThrowsTaglet.java"},{"filename":"test\/langtools\/jdk\/javadoc\/doclet\/testHtmlDefinitionListTag\/TestHtmlDefinitionListTag.java"},{"filename":"test\/langtools\/jdk\/javadoc\/doclet\/testHtmlDefinitionListTag\/pkg1\/C1.java"},{"filename":"test\/langtools\/jdk\/javadoc\/tool\/6964914\/TestStdDoclet.java"}],"sha":"00d25068a2d8224c0c50a2c01766ec4dc38db318"},{"commit":{"message":"refactor: simplify DocFinder\n\nThere's no reason to have a stream-based implementation when a simpler\niterator-based implementation will do. Also, this commit fixes a bug\nwhere if called with\n\n    includeMethod && throwExceptionIfNoOverriddenMethods\n\non a method that didn't override anything, the search would not throw\nan exception."},"files":[{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/DocFinder.java"}],"sha":"fef820b48992fe8493ac0d0b3bae3acababe4512"},{"commit":{"message":"refactor: clean up DocFinder"},"files":[{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/DocFinder.java"}],"sha":"c9e45b0a1c3f655137b9d9ce1edee12f2e8fd0a3"},{"commit":{"message":"refactor: don't rely on peek in DocFinder.search\n\nStream.peek is designed for debugging and can be optimized away.\nFlipping the flag in flatMap seems wrong too; so use iterator."},"files":[{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/DocFinder.java"}],"sha":"252d502dabdacbb339d0f47b33971edd3cffac37"},{"commit":{"message":"refactor: improve DocFinder\n\n- Method signatures no longer require BaseConfiguration\n- DocFinder no longer depends on Utils or BaseConfiguration\n- Methods are still grouped under a separate type, DocFinder, rather\n  than flattened into Utils"},"files":[{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/builders\/MemberSummaryBuilder.java"},{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/builders\/MethodBuilder.java"},{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/InheritDocTaglet.java"},{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/ParamTaglet.java"},{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/ReturnTaglet.java"},{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/SeeTaglet.java"},{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/SimpleTaglet.java"},{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/ThrowsTaglet.java"},{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/CommentHelper.java"},{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/DocFinder.java"},{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/Utils.java"}],"sha":"9f407d07de51679b491eff36f6a9a45d901574c1"},{"commit":{"message":"refactor: improve trySearch signature"},"files":[{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/InheritDocTaglet.java"},{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/ParamTaglet.java"},{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/ReturnTaglet.java"},{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/SimpleTaglet.java"},{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/ThrowsTaglet.java"},{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/DocFinder.java"}],"sha":"c684b5996c14809a9ee6c18c5ea811d1d3b254c4"},{"commit":{"message":"refactor: delete old DocFinder.search"},"files":[{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/InheritableTaglet.java"},{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/ParamTaglet.java"},{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/ReturnTaglet.java"},{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/SeeTaglet.java"},{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/SimpleTaglet.java"},{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/ThrowsTaglet.java"},{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/DocFinder.java"}],"sha":"2609cf2dd55eea403696c238fc2bd928b77cb58b"},{"commit":{"message":"fix: retrofit inheritable taglet\n\n**CAVEATS**: This is an intermediate commit, whose primary purpose is\nto finally stop using old DocFinder.search and friends so that they\ncould be deleted. As such, the commit cuts a few corners.\n\nIn particular, SeeTaglet throws an exception on an attempt to use:\n\n    @see {@inheritDoc}\n\nThat and other issue will be cleaned up and refactored in subsequent\ncommits.\n\n**NOTES:**\n\n* It would be nice to have this method instead of a newly introduced\n  `inherit` so that all the specifics of inheritance processing would\n  be hidden in individual taglets:\n\n      void inherit(ExecutableElement owner,\n                   DocTree tag,\n                   TagletWriter writer)\n\n  But I don't see how we could do this, because the `inherit` is called\n  while parsing an individual tag, rather than a group of similar tags.\n  So we cannot use such a method to implement, say, a one-to-many type\n  of inheritance. (See the existing ThrowsTaglet.flatten workaround).\n\n* SimpleTaglet first sentence handling seems misguided. It needs to be\n  sorted out."},"files":[{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/InheritDocTaglet.java"},{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/InheritableTaglet.java"},{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/ParamTaglet.java"},{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/ReturnTaglet.java"},{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/SeeTaglet.java"},{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/SimpleTaglet.java"},{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/ThrowsTaglet.java"}],"sha":"7e3adf1716254916c041dec2c76d5908dbb2637e"},{"commit":{"message":"fix: retrofit main description"},"files":[{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/InheritDocTaglet.java"},{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/DocFinder.java"}],"sha":"3c30d0d5207e7edc905c83aabd9f6260867f97cd"},{"commit":{"message":"unrelated: clean up retrieveInheritedDocumentation"},"files":[{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/InheritDocTaglet.java"}],"sha":"4179fedd26a4185103081ea02e781e8fc258aff7"},{"commit":{"message":"fix: continue retrofitting @throws\/@exception\n\n**WARNING**: This commit changes the JDK API Documentation.\n\nAll changes are of the same kind: some methods document more exceptions\nwithout any of the related doc comments having been changed.\n\nFor example, along with DateTimeException, ChronoLocalDate.plus(long,\nTemporalUnit) now documents UnsupportedTemporalTypeException.\n\nThe reason why UnsupportedTemporalTypeException was not documented\npreviously (although it should've been because of JDK-4947455) is that\nThrowsTaglet.inherit was incorrectly obtaining\njavax.lang.model.element.Element corresponding to the exception in\nthe `@throws` tag. ThrowsTaglet.inherit was looking for a ThrowsTree\nnode in a wrong DocCommentTree node; what was done like this:\n\n    var ch = utils.getCommentHelper(input.element);\n    target = ch.getException(tag);\n\nshould've been done like this:\n\n    target = utils.getCommentHelper(input.docTreeInfo.element()).getException(tag);\n\nThe new code obtains the target correctly.\n\nThe new behavior sometimes results in doubling of exception\ndocumentation. This happens when a subexception is inherited both\nexplicitly and implicitly when a superexception is inherited.\nFor example, java.nio.channels.SocketChannel#bind now documents\nClosedChannelException twice.\n\nThe first time because:\n\n    @throws  ClosedChannelException              {@inheritDoc}\n\nAnd the second time because:\n\n    @throws  IOException                         {@inheritDoc}\n\nSuch doubling is an intermediate artifact of this commit and will\ndisappear in subsequent commits."},"files":[{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/ThrowsTaglet.java"}],"sha":"80aab7eba8fc2ede0867b5d3b49ff67311c9420b"},{"commit":{"message":"fix: retrofit @throws\/@exception partially\n\n**WARNING**: This commit changes the JDK API Documentation.\nAll changes are of the same kind. One such change can be seen in\njava.io.ObjectInputStream.readUTF. That method now documents\npreviously undocumented EOFException.\n\nThe reason why EOFException was not documented previously is\nthat the old code incorrectly started documentation search\nfor IOException and its subclasses (for subclasses see 4947455)\nfrom ObjectInputStream.readUTF itself, rather than from the\nmethods it overrides. Because ObjectInputStream.readUTF documents\nIOException, the search succeeded immediately, never finding\nEOFException which is documented in java.io.DataInput.readUTF.\n\nThis commit changes the code so that the search skips\nObjectInputStream.readUTF when looking for exception\ndocumentation for exceptions listed in the `throws`\nclause and their subexceptions."},"files":[{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/ThrowsTaglet.java"},{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/DocFinder.java"}],"sha":"9ab9e822716c3feb92e596eef6c02221fee32fc2"},{"commit":{"message":"refactor: ParamTaglet.extract"},"files":[{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/ParamTaglet.java"}],"sha":"94f57bb9c7d019fa1ed645d9a18784e8136d2e80"},{"commit":{"message":"fix: retrofit @param partially"},"files":[{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/ParamTaglet.java"}],"sha":"10d1fb226625f253f4254ae5502d0001c60abd83"},{"commit":{"message":"fix: retrofit @return partially"},"files":[{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/ReturnTaglet.java"}],"sha":"304809634ff378ae199829cf52803935ba6a20f8"},{"commit":{"message":"refactor: SeeTaglet.extract"},"files":[{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/SeeTaglet.java"}],"sha":"3bf0517869bebe6201689651ec2f59861d6acd8c"},{"commit":{"message":"refactor: stream-ify DocFinder.search"},"files":[{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/DocFinder.java"}],"sha":"eebe614b8acac09cc932eb38a112d13e73163bcb"},{"commit":{"message":"refactor: rename inheritDocumentation"},"files":[{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/builders\/MemberSummaryBuilder.java"},{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/builders\/MethodBuilder.java"},{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/SeeTaglet.java"},{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/CommentHelper.java"},{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/DocFinder.java"}],"sha":"3dbfac1d754e8483ff12b587b5d8fb94a5d77368"},{"commit":{"message":"refactor: make inheritDocumentation more flexible"},"files":[{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/builders\/MemberSummaryBuilder.java"},{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/builders\/MethodBuilder.java"},{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/SeeTaglet.java"},{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/CommentHelper.java"},{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/DocFinder.java"}],"sha":"131d7d3d5a59ebcbbc5dd0e162420215de7aa52a"},{"commit":{"message":"fix: retrofit @see partially"},"files":[{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/SeeTaglet.java"}],"sha":"78caa6554586733a9174fc0c1bfd5bdb1fc675f2"},{"commit":{"message":"fix: retrofit getInheritedDocTreePath"},"files":[{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/CommentHelper.java"}],"sha":"376ff18717528136588c79992b0087e033f9f8f9"},{"commit":{"message":"unrelated: use equals rather than == for elements\n\njavax.lang.model.element.Element.provides rationale for that:\n\n  Elements should be compared using the equals(Object) method. There is\n  no guarantee that any particular element will always be represented\n  by the same object."},"files":[{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/CommentHelper.java"}],"sha":"f3de5cc674ab8f70bef31730a5589e018dafdef1"},{"commit":{"message":"fix: retrofit method comments"},"files":[{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/builders\/MemberSummaryBuilder.java"},{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/builders\/MethodBuilder.java"},{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/DocFinder.java"}],"sha":"146be6fe57fb32422e31ef9fff22b150fcdb2edb"},{"commit":{"message":"fix: retrofit member summary"},"files":[{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/builders\/MemberSummaryBuilder.java"}],"sha":"a77ad8447b7efb64edd206ec1620a90e298d3bcb"},{"commit":{"message":"fix: add new search mechanism"},"files":[{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/DocFinder.java"}],"sha":"c05b8f7fc5ce8da989e6cbe2ea77421834fcb791"},{"commit":{"message":"refactor: improve inline comments for DocFinder"},"files":[{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/DocFinder.java"}],"sha":"963cb1ab369333c23d9ea5be1fd3bf79fdce0f81"}]