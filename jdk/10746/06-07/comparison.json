{"files":[{"patch":"@@ -111,1 +111,1 @@\n-doclet.throws.reference_bad_type=type found is not of exception type: {0}\n+doclet.throws.reference_bad_type=not an exception type: {0}\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/standard.properties","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -122,2 +122,2 @@\n-doclet.throwsInheritDocUnsupported=@inheritDoc for exception-type type parameters not declared by a method is unsupported; \\\n-  document such exception types directly\n+doclet.throwsInheritDocUnsupported=@inheritDoc is not supported for exception-type type parameters \\\n+  that are not declared by a method; document such exception types directly\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/resources\/doclets.properties","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -42,0 +42,4 @@\n+    \/*\n+     * Called by InheritDocTaglet on an inheritable taglet to expand {@inheritDoc}\n+     * found inside a tag corresponding to that taglet.\n+     *\/\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/InheritableTaglet.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -88,1 +88,2 @@\n-            var r = docFinder.trySearch(method, m -> Result.fromOptional(extract(configuration.utils, m, position, param.isTypeParameter())))\n+            var r = docFinder.trySearch(method,\n+                            m -> Result.fromOptional(extract(configuration.utils, m, position, param.isTypeParameter())))\n@@ -229,1 +230,2 @@\n-        var r = utils.docFinder().search((ExecutableElement) holder, m -> Result.fromOptional(extract(utils, m, position, kind == ParamKind.TYPE_PARAMETER)))\n+        var r = utils.docFinder().search((ExecutableElement) holder,\n+                        m -> Result.fromOptional(extract(utils, m, position, kind == ParamKind.TYPE_PARAMETER)))\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/ParamTaglet.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -260,1 +260,1 @@\n-                MyClass.java:5: warning: type found is not of exception type: \\\n+                MyClass.java:5: warning: not an exception type: \\\n@@ -471,2 +471,2 @@\n-                Child1.java:5: warning: @inheritDoc for exception-type type parameters not declared by a method is unsupported; \\\n-                document such exception types directly\n+                Child1.java:5: warning: @inheritDoc is not supported for exception-type type parameters \\\n+                that are not declared by a method; document such exception types directly\n@@ -477,2 +477,2 @@\n-                Child2.java:5: warning: @inheritDoc for exception-type type parameters not declared by a method is unsupported; \\\n-                document such exception types directly\n+                Child2.java:5: warning: @inheritDoc is not supported for exception-type type parameters \\\n+                that are not declared by a method; document such exception types directly\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testThrowsInheritanceMatching\/TestExceptionTypeMatching.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"}]}