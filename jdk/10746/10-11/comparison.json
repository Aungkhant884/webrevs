{"files":[{"patch":"@@ -35,0 +35,1 @@\n+import java.util.Locale;\n@@ -743,4 +744,2 @@\n-        \/\/ TODO: is it feasible to use javax.lang.model.util.Elements.getBinaryName(TypeElement)\n-        \/\/  to augment\/replace detailed information for _type elements_?\n-        \/\/  (binary names don't work for _type variables_)\n-        var thisElementDescription = e.getKind() + \" \" + switch (e.getKind()) {\n+        var lowerCasedKind = e.getKind().toString().toLowerCase(Locale.ROOT);\n+        var thisElementDescription = lowerCasedKind + \" \" + switch (e.getKind()) {\n@@ -754,1 +753,1 @@\n-                \/\/ TODO: i18n\n+                \/\/ might use i18n in the future\n@@ -759,1 +758,1 @@\n-                \/\/ TODO: i18n + is there any value is displaying unnamed module?\n+                \/\/ might use i18n in the future, if there's value in displaying an unnamed module\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/ThrowsTaglet.java","additions":5,"deletions":6,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -99,1 +99,1 @@\n-                (MODULE <unnamed module> PACKAGE c CLASS MyException)\n+                (module <unnamed module> package c class MyException)\n@@ -225,1 +225,1 @@\n-        javadoc(\"-d\", base.resolve(\"out\").toString(), \"-sourcepath\", src.toString(), \"x\", \"-Xdoclint:none\");\n+        javadoc(\"-Xdoclint:none\", \"-d\", base.resolve(\"out\").toString(), \"-sourcepath\", src.toString(), \"x\");\n@@ -257,1 +257,1 @@\n-        javadoc(\"-d\", base.resolve(\"out\").toString(), \"-sourcepath\", src.toString(), \"x\", \"-Xdoclint:none\");\n+        javadoc(\"-Xdoclint:none\", \"-d\", base.resolve(\"out\").toString(), \"-sourcepath\", src.toString(), \"x\");\n@@ -261,1 +261,1 @@\n-                x.OtherClass (MODULE <unnamed module> PACKAGE x CLASS OtherClass)\n+                x.OtherClass (module <unnamed module> package x class OtherClass)\n@@ -292,1 +292,1 @@\n-        javadoc(\"-d\", base.resolve(\"out\").toString(), \"-sourcepath\", src.toString(), \"x\", \"-Xdoclint:none\");\n+        javadoc(\"-Xdoclint:none\", \"-d\", base.resolve(\"out\").toString(), \"-sourcepath\", src.toString(), \"x\");\n@@ -328,1 +328,1 @@\n-                (MODULE <unnamed module> PACKAGE <unnamed package> CLASS R)\n+                (module <unnamed module> package <unnamed package> class R)\n@@ -398,0 +398,1 @@\n+                                       \/\/ (tracked by 8297085)\n@@ -407,1 +408,1 @@\n-                (MODULE <unnamed module> PACKAGE <unnamed package> CLASS P CLASS MyException)\n+                (module <unnamed module> package <unnamed package> class P class MyException)\n@@ -484,1 +485,1 @@\n-                (MODULE java.base PACKAGE java.lang CLASS NullPointerException)\n+                (module java.base package java.lang class NullPointerException)\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testThrowsInheritanceMatching\/TestExceptionTypeMatching.java","additions":9,"deletions":8,"binary":false,"changes":17,"status":"modified"}]}