{"files":[{"patch":"@@ -41,1 +41,1 @@\n-     * for {@code outOfBoundsExceptionFormatter}\n+     * for {@code outOfBoundsExceptionFormatter}.\n@@ -43,6 +43,7 @@\n-     * @implNote They can be syntactically replaced by lambda expression or\n-     * method reference, but it's not feasible in practices, because\n-     * {@code Preconditions} is used in many fundamental classes such as\n-     * java.lang.String, lambda expressions or method references exercise\n-     * many other code at VM startup, this could lead an {@code StackOverflowError}.\n-     * That's the reason why these utility classes are created.\n+     * @implNote These inner classes can be syntactically replaced by lambda\n+     * expression or method reference, but it's not feasible in practices,\n+     * because {@code Preconditions} is used in many fundamental classes such\n+     * as {@code java.lang.String}, lambda expressions or method references\n+     * exercise many other code at VM startup, this could lead a recursive\n+     * calls when fundamental classes is used in lambda expressions or method\n+     * references.\n@@ -50,1 +51,2 @@\n-    static class StringIndexOutOfBoundsExceptionProducer implements Function<String, StringIndexOutOfBoundsException> {\n+    private static class StringIndexOutOfBoundsExceptionProducer implements\n+                    Function<String, StringIndexOutOfBoundsException> {\n@@ -57,1 +59,2 @@\n-    static class ArrayIndexOutOfBoundsExceptionProducer implements Function<String, ArrayIndexOutOfBoundsException> {\n+    private static class ArrayIndexOutOfBoundsExceptionProducer implements\n+                    Function<String, ArrayIndexOutOfBoundsException> {\n@@ -64,1 +67,2 @@\n-    static class IndexOutOfBoundsExceptionProducer implements Function<String, IndexOutOfBoundsException> {\n+    private static class IndexOutOfBoundsExceptionProducer implements\n+                    Function<String, IndexOutOfBoundsException> {\n@@ -80,1 +84,0 @@\n-\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/util\/Preconditions.java","additions":14,"deletions":11,"binary":false,"changes":25,"status":"modified"}]}