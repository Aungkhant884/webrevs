{"files":[{"patch":"@@ -1384,2 +1384,1 @@\n-                URI uri = URI.create(\"jar:\" + srcZip.toUri());\n-                zipFO = FileSystems.newFileSystem(uri, Collections.emptyMap());\n+                zipFO = FileSystems.newFileSystem(srcZip, Collections.emptyMap());\n","filename":"src\/jdk.jshell\/share\/classes\/jdk\/jshell\/SourceCodeAnalysisImpl.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -0,0 +1,76 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.io.ByteArrayOutputStream;\n+import java.io.PrintStream;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+import jdk.jshell.JShell;\n+import org.testng.annotations.Test;\n+import static org.testng.Assert.assertEquals;\n+\n+\/*\n+ * @test\n+ * @bug 8274734\n+ * @summary Verify multiple SourceCodeAnalysis instances can concurrently provide documentation.\n+ * @library \/tools\/lib\n+ * @modules jdk.compiler\/com.sun.tools.javac.api\n+ *          jdk.compiler\/com.sun.tools.javac.main\n+ *          jdk.jdeps\/com.sun.tools.javap\n+ *          jdk.jshell\/jdk.internal.jshell.tool\n+ * @build Compiler toolbox.ToolBox\n+ * @run testng MultipleDocumentationTest\n+ *\/\n+@Test\n+public class MultipleDocumentationTest {\n+\n+    public void testMultipleDocumentation() {\n+        String input = \"java.lang.String\";\n+\n+        try (var state1 = JShell.builder()\n+                                .out(new PrintStream(new ByteArrayOutputStream()))\n+                                .err(new PrintStream(new ByteArrayOutputStream()))\n+                                .build()) {\n+            var sca1 = state1.sourceCodeAnalysis();\n+            List<String> javadocs1 =\n+                    sca1.documentation(input, input.length(), true)\n+                        .stream()\n+                        .map(d -> d.javadoc())\n+                        .collect(Collectors.toList());\n+\n+            try (var state2 = JShell.builder()\n+                                    .out(new PrintStream(new ByteArrayOutputStream()))\n+                                    .err(new PrintStream(new ByteArrayOutputStream()))\n+                                    .build()) {\n+                var sca2 = state2.sourceCodeAnalysis();\n+                List<String> javadocs2 = sca2.documentation(input, input.length(), true)\n+                                             .stream()\n+                                             .map(d -> d.javadoc())\n+                                             .collect(Collectors.toList());\n+\n+                assertEquals(javadocs2, javadocs1);\n+            }\n+        }\n+    }\n+\n+}\n","filename":"test\/langtools\/jdk\/jshell\/MultipleDocumentationTest.java","additions":76,"deletions":0,"binary":false,"changes":76,"status":"added"}]}