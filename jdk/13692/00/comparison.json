{"files":[{"patch":"@@ -1080,1 +1080,10 @@\n-  return AixSymbols::get_module_name(addr, buf, buflen);\n+  address  base = nullptr;\n+  if ( false == AixSymbols::get_module_name_and_base(addr, buf, buflen, &base)\n+       || base == nullptr ) {\n+    return false;\n+  }\n+  if (offset != nullptr) {\n+    *offset = addr - base;\n+  }\n+\n+  return true;\n","filename":"src\/hotspot\/os\/aix\/os_aix.cpp","additions":10,"deletions":1,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -281,0 +281,18 @@\n+bool AixSymbols::get_module_name_and_base(address pc,\n+                         char* p_name, size_t namelen,\n+                         address* p_base) {\n+\n+  if (p_base && p_name && namelen > 0) {\n+    p_name[0] = '\\0';\n+    loaded_module_t lm;\n+    if (LoadedLibraries::find_for_text_address(pc, &lm)) {\n+      strncpy(p_name, lm.shortname, namelen);\n+      p_name[namelen - 1] = '\\0';\n+      *p_base = (address) lm.text;\n+      return true;\n+    }\n+  }\n+\n+  return false;\n+}\n+\n","filename":"src\/hotspot\/os\/aix\/porting_aix.cpp","additions":18,"deletions":0,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -86,0 +86,8 @@\n+  \/\/ Given a program counter, returns the name of the module (library and module) the pc points to\n+  \/\/ and the base address of the module the pc points to\n+  static bool get_module_name_and_base (\n+    address pc,                      \/\/ [in] program counter\n+    char* p_name, size_t namelen,    \/\/ [out] module name\n+    address* p_base                  \/\/ [out] module name\n+  );\n+\n","filename":"src\/hotspot\/os\/aix\/porting_aix.hpp","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"}]}