{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -317,2 +317,3 @@\n-            int w = (int) Math.ceil(destWidth);\n-            int h = (int) Math.ceil(destHeight);\n+            int w = (int) Math.floor(destWidth + 0.5);\n+            int h = (int) Math.floor(destHeight + 0.5);\n+\n","filename":"src\/java.desktop\/share\/classes\/sun\/swing\/CachedPainter.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,4 +43,7 @@\n-import java.awt.*;\n-import java.util.*;\n-\n-import javax.swing.*;\n+import java.awt.Color;\n+import java.awt.Component;\n+import java.awt.Dimension;\n+import java.awt.Insets;\n+import java.awt.Point;\n+import java.util.EnumMap;\n+import javax.swing.JComponent;\n@@ -58,1 +61,1 @@\n-class TMSchema {\n+public final class TMSchema {\n","filename":"src\/java.desktop\/windows\/classes\/com\/sun\/java\/swing\/plaf\/windows\/TMSchema.java","additions":9,"deletions":6,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,2 +43,15 @@\n-import java.awt.*;\n-import java.awt.image.*;\n+import java.awt.Color;\n+import java.awt.Component;\n+import java.awt.Dimension;\n+import java.awt.Graphics;\n+import java.awt.Graphics2D;\n+import java.awt.GraphicsConfiguration;\n+import java.awt.Image;\n+import java.awt.Insets;\n+import java.awt.Point;\n+import java.awt.Rectangle;\n+import java.awt.Toolkit;\n+import java.awt.geom.AffineTransform;\n+import java.awt.image.BufferedImage;\n+import java.awt.image.DataBufferInt;\n+import java.awt.image.WritableRaster;\n@@ -46,5 +59,19 @@\n-import java.util.*;\n-\n-import javax.swing.*;\n-import javax.swing.border.*;\n-import javax.swing.plaf.*;\n+import java.util.HashMap;\n+\n+import javax.swing.AbstractButton;\n+import javax.swing.CellRendererPane;\n+import javax.swing.JButton;\n+import javax.swing.JCheckBox;\n+import javax.swing.JComboBox;\n+import javax.swing.JComponent;\n+import javax.swing.JRadioButton;\n+import javax.swing.JToolBar;\n+import javax.swing.SwingUtilities;\n+import javax.swing.UIManager;\n+import javax.swing.border.AbstractBorder;\n+import javax.swing.border.Border;\n+import javax.swing.border.EmptyBorder;\n+import javax.swing.border.LineBorder;\n+import javax.swing.plaf.ColorUIResource;\n+import javax.swing.plaf.InsetsUIResource;\n+import javax.swing.plaf.UIResource;\n@@ -58,2 +85,4 @@\n-import static com.sun.java.swing.plaf.windows.TMSchema.*;\n-\n+import static com.sun.java.swing.plaf.windows.TMSchema.Part;\n+import static com.sun.java.swing.plaf.windows.TMSchema.Prop;\n+import static com.sun.java.swing.plaf.windows.TMSchema.State;\n+import static com.sun.java.swing.plaf.windows.TMSchema.TypeEnum;\n@@ -678,0 +707,5 @@\n+            \/\/ Get DPI to pass further to ThemeReader.paintBackground()\n+            Graphics2D g2d = (Graphics2D) g;\n+            AffineTransform at = g2d.getTransform();\n+            int dpi = (int)(at.getScaleX() * 96);\n+\n@@ -685,1 +719,2 @@\n-                                        0, 0, w, h, w);\n+                                        0, 0, w, h, w, dpi);\n+\n","filename":"src\/java.desktop\/windows\/classes\/com\/sun\/java\/swing\/plaf\/windows\/XPStyle.java","additions":46,"deletions":11,"binary":false,"changes":57,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,0 +33,1 @@\n+import java.util.List;\n@@ -38,0 +39,2 @@\n+import static com.sun.java.swing.plaf.windows.TMSchema.Part;\n+\n@@ -47,1 +50,18 @@\n-    private static final Map<String, Long> widgetToTheme = new HashMap<>();\n+    private static final int defaultDPI = 96;\n+\n+    \/**\n+     * List of widgets for which we need to get the part size for the current DPI.\n+     *\/\n+    private static final  List<String> partSizeWidgets =\n+            List.of(\"MENU\", \"BUTTON\");\n+\n+    \/**\n+     * List of widget parts for which we need to get the part size for the current DPI.\n+     *\/\n+    private static final List<Integer> partSizeParts =\n+            List.of(Part.BP_RADIOBUTTON.getValue(),\n+                    Part.BP_CHECKBOX.getValue(),\n+                    Part.MP_POPUPCHECK.getValue());\n+\n+    private static final Map<Integer, Map<String, Long>> dpiAwareWidgetToTheme\n+            = new HashMap<>();\n@@ -83,0 +103,15 @@\n+    private static Long openThemeImpl(String widget, int dpi) {\n+       Long theme;\n+       int i = widget.indexOf(\"::\");\n+       if (i > 0) {\n+           \/\/ We're using the syntax \"subAppName::controlName\" here, as used by msstyles.\n+           \/\/ See documentation for SetWindowTheme on MSDN.\n+           setWindowTheme(widget.substring(0, i));\n+           theme = openTheme(widget.substring(i + 2), dpi);\n+           setWindowTheme(null);\n+       } else {\n+           theme = openTheme(widget, dpi);\n+       }\n+       return theme;\n+    }\n+\n@@ -84,16 +119,3 @@\n-    private static Long getThemeImpl(String widget) {\n-        Long theme = widgetToTheme.get(widget);\n-        if (theme == null) {\n-            int i = widget.indexOf(\"::\");\n-            if (i > 0) {\n-                \/\/ We're using the syntax \"subAppName::controlName\" here, as used by msstyles.\n-                \/\/ See documentation for SetWindowTheme on MSDN.\n-                setWindowTheme(widget.substring(0, i));\n-                theme = openTheme(widget.substring(i+2));\n-                setWindowTheme(null);\n-            } else {\n-                theme = openTheme(widget);\n-            }\n-            widgetToTheme.put(widget, theme);\n-        }\n-        return theme;\n+    private static Long getThemeImpl(String widget, int dpi) {\n+       return dpiAwareWidgetToTheme.computeIfAbsent(dpi, key -> new HashMap<>())\n+                .computeIfAbsent(widget, w -> openThemeImpl(widget, dpi));\n@@ -104,1 +126,1 @@\n-    private static Long getTheme(String widget) {\n+    private static Long getTheme(String widget, int dpi) {\n@@ -114,2 +136,4 @@\n-                    for (Long value : widgetToTheme.values()) {\n-                        closeTheme(value);\n+                    for (Map<String, Long> dpiVal : dpiAwareWidgetToTheme.values()) {\n+                        for (Long value : dpiVal.values()) {\n+                            closeTheme(value);\n+                        }\n@@ -117,1 +141,1 @@\n-                    widgetToTheme.clear();\n+                    dpiAwareWidgetToTheme.clear();\n@@ -126,0 +150,8 @@\n+        Long theme = null;\n+\n+        Map<String, Long> widgetToTheme = dpiAwareWidgetToTheme.get(dpi);\n+\n+        if (widgetToTheme != null) {\n+            theme = widgetToTheme.get(widget);\n+        }\n+\n@@ -127,1 +159,0 @@\n-        Long theme = widgetToTheme.get(widget);\n@@ -132,1 +163,1 @@\n-                theme = getThemeImpl(widget);\n+                theme = getThemeImpl(widget, dpi);\n@@ -142,2 +173,3 @@\n-                                               int part, int state, int x,\n-                                               int y, int w, int h, int stride);\n+                                               int part, int state,\n+                                               int rectRight, int rectBottom,\n+                                               int w, int h, int stride);\n@@ -146,1 +178,1 @@\n-           int part, int state, int x, int y, int w, int h, int stride) {\n+           int part, int state, int x, int y, int w, int h, int stride, int dpi) {\n@@ -149,1 +181,9 @@\n-            paintBackground(buffer, getTheme(widget), part, state, x, y, w, h, stride);\n+            \/* For widgets and parts in the lists, we get the part size\n+            for the current screen DPI to scale them better. *\/\n+            Dimension d = (partSizeWidgets.contains(widget)\n+                          && partSizeParts.contains(Integer.valueOf(part)))\n+                          ? getPartSize(getTheme(widget, dpi), part, state)\n+                          : new Dimension(w, h);\n+\n+            paintBackground(buffer, getTheme(widget, dpi), part, state,\n+                            d.width, d.height, w, h, stride);\n@@ -161,1 +201,1 @@\n-            return getThemeMargins(getTheme(widget), part, state, marginType);\n+            return getThemeMargins(getTheme(widget, defaultDPI), part, state, marginType);\n@@ -172,1 +212,1 @@\n-            return isThemePartDefined(getTheme(widget), part, state);\n+            return isThemePartDefined(getTheme(widget, defaultDPI), part, state);\n@@ -184,1 +224,1 @@\n-            return getColor(getTheme(widget), part, state, property);\n+            return getColor(getTheme(widget, defaultDPI), part, state, property);\n@@ -196,1 +236,1 @@\n-            return getInt(getTheme(widget), part, state, property);\n+            return getInt(getTheme(widget, defaultDPI), part, state, property);\n@@ -208,1 +248,1 @@\n-            return getEnum(getTheme(widget), part, state, property);\n+            return getEnum(getTheme(widget, defaultDPI), part, state, property);\n@@ -221,1 +261,1 @@\n-            return getBoolean(getTheme(widget), part, state, property);\n+            return getBoolean(getTheme(widget, defaultDPI), part, state, property);\n@@ -232,1 +272,1 @@\n-            return getSysBoolean(getTheme(widget), property);\n+            return getSysBoolean(getTheme(widget, defaultDPI), property);\n@@ -244,1 +284,1 @@\n-            return getPoint(getTheme(widget), part, state, property);\n+            return getPoint(getTheme(widget, defaultDPI), part, state, property);\n@@ -257,1 +297,1 @@\n-            return getPosition(getTheme(widget), part,state,property);\n+            return getPosition(getTheme(widget, defaultDPI), part,state,property);\n@@ -269,1 +309,1 @@\n-            return getPartSize(getTheme(widget), part, state);\n+            return getPartSize(getTheme(widget, defaultDPI), part, state);\n@@ -275,1 +315,1 @@\n-    private static native long openTheme(String widget);\n+    private static native long openTheme(String widget, int dpi);\n@@ -288,2 +328,3 @@\n-            return getThemeTransitionDuration(getTheme(widget),\n-                                              part, stateFrom, stateTo, propId);\n+            return getThemeTransitionDuration(getTheme(widget, defaultDPI),\n+                                              part, stateFrom, stateTo,\n+                                              propId);\n@@ -302,2 +343,3 @@\n-            return getThemeBackgroundContentMargins(getTheme(widget),\n-                                    part, state, boundingWidth, boundingHeight);\n+            return getThemeBackgroundContentMargins(getTheme(widget, defaultDPI),\n+                                                    part, state,\n+                                                    boundingWidth, boundingHeight);\n","filename":"src\/java.desktop\/windows\/classes\/sun\/awt\/windows\/ThemeReader.java","additions":85,"deletions":43,"binary":false,"changes":128,"status":"modified"},{"patch":"@@ -49,1 +49,1 @@\n-typedef HTHEME(__stdcall *PFNOPENTHEMEDATA)(HWND hwnd, LPCWSTR pszClassList);\n+typedef HTHEME(__stdcall *PFNOPENTHEMEDATAFORDPI)(HWND hwnd, LPCWSTR pszClassList, UINT dpi);\n@@ -93,1 +93,1 @@\n-static PFNOPENTHEMEDATA OpenThemeDataFunc = NULL;\n+static PFNOPENTHEMEDATAFORDPI OpenThemeDataFuncForDpi = NULL;\n@@ -119,2 +119,2 @@\n-        OpenThemeDataFunc = (PFNOPENTHEMEDATA)GetProcAddress(hModThemes,\n-                                                        \"OpenThemeData\");\n+        OpenThemeDataFuncForDpi = (PFNOPENTHEMEDATAFORDPI)GetProcAddress(\n+                                   hModThemes, \"OpenThemeDataForDpi\");\n@@ -155,1 +155,1 @@\n-        if(OpenThemeDataFunc\n+        if(OpenThemeDataFuncForDpi\n@@ -174,3 +174,6 @@\n-              \/\/ We need to make sure we can load the Theme. This may not be\n-              \/\/ the case on a WinXP machine with classic mode enabled.\n-              HTHEME hTheme = OpenThemeDataFunc(AwtToolkit::GetInstance().GetHWnd(), L\"Button\");\n+              \/\/ We need to make sure we can load the Theme.\n+              \/\/ Use the default DPI value of 96 on windows.\n+              constexpr unsigned int defaultDPI = 96;\n+              HTHEME hTheme = OpenThemeDataFuncForDpi (\n+                              AwtToolkit::GetInstance().GetHWnd(),\n+                              L\"Button\", defaultDPI);\n@@ -239,1 +242,1 @@\n-(JNIEnv *env, jclass klass, jstring widget) {\n+(JNIEnv *env, jclass klass, jstring widget, jint dpi) {\n@@ -248,1 +251,3 @@\n-    HTHEME htheme = OpenThemeDataFunc(AwtToolkit::GetInstance().GetHWnd(), str);\n+    HTHEME htheme = OpenThemeDataFuncForDpi(\n+                    AwtToolkit::GetInstance().GetHWnd(),\n+                    str, dpi);\n@@ -381,1 +386,1 @@\n-    jint x, jint y, jint w, jint h, jint stride) {\n+    jint rectRight, jint rectBottom, jint w, jint h, jint stride) {\n@@ -427,2 +432,2 @@\n-    rect.bottom = h;\n-    rect.right = w;\n+    rect.bottom = rectBottom;\n+    rect.right = rectRight;\n@@ -717,21 +722,0 @@\n-void rescale(SIZE *size) {\n-    static int dpiX = -1;\n-    static int dpiY = -1;\n-    if (dpiX == -1 || dpiY == -1) {\n-        HWND hWnd = ::GetDesktopWindow();\n-        HDC hDC = ::GetDC(hWnd);\n-        dpiX = ::GetDeviceCaps(hDC, LOGPIXELSX);\n-        dpiY = ::GetDeviceCaps(hDC, LOGPIXELSY);\n-        ::ReleaseDC(hWnd, hDC);\n-    }\n-\n-    if (dpiX !=0 && dpiX != 96) {\n-        float invScaleX = 96.0f \/ dpiX;\n-        size->cx = (int) round(size->cx * invScaleX);\n-    }\n-    if (dpiY != 0 && dpiY != 96) {\n-        float invScaleY = 96.0f \/ dpiY;\n-        size->cy = (int) round(size->cy * invScaleY);\n-    }\n-}\n-\n@@ -764,1 +748,0 @@\n-            rescale(&size);\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/ThemeReader.cpp","additions":18,"deletions":35,"binary":false,"changes":53,"status":"modified"}]}