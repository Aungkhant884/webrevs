{"files":[{"patch":"@@ -50,4 +50,12 @@\n-    private static final int defaultDPI =  96;\n-    private static final  List<String> dpiSupportedWidgets =\n-            List.of(\"MENU\",\"BUTTON\");\n-    private static final  List<Integer> dpiSupportedParts =\n+    private static final int defaultDPI = 96;\n+\n+    \/**\n+     * List of widgets for which we need to get the part size for the current DPI.\n+     *\/\n+    private static final  List<String> partSizeWidgets =\n+            List.of(\"MENU\", \"BUTTON\");\n+\n+    \/**\n+     * List of widget parts for which we need to get the part size for the current DPI.\n+     *\/\n+    private static final List<Integer> partSizeParts =\n@@ -57,0 +65,1 @@\n+\n@@ -172,13 +181,6 @@\n-\n-            int width = w;\n-            int height = h;\n-\n-            \/* We get the part size based on the theme for current screen DPI\n-            and pass it to paintBackground for dpi supported parts. *\/\n-            if (dpiSupportedWidgets.contains(widget) &&\n-                dpiSupportedParts.contains(Integer.valueOf(part)))\n-            {\n-                Dimension d = getPartSize(getTheme(widget, dpi), part, state);\n-                width =  d.width;\n-                height = d.height;\n-            }\n+            \/* For widgets and parts in the lists, we get the part size\n+            for the current screen DPI to scale them better. *\/\n+            Dimension d = (partSizeWidgets.contains(widget)\n+                          && partSizeParts.contains(Integer.valueOf(part)))\n+                          ? getPartSize(getTheme(widget, dpi), part, state)\n+                          : new Dimension(w, h);\n@@ -187,1 +189,1 @@\n-                            width, height, w, h, stride);\n+                            d.width, d.height, w, h, stride);\n","filename":"src\/java.desktop\/windows\/classes\/sun\/awt\/windows\/ThemeReader.java","additions":20,"deletions":18,"binary":false,"changes":38,"status":"modified"}]}