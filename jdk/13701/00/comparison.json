{"files":[{"patch":"@@ -317,2 +317,3 @@\n-            int w = (int) Math.ceil(destWidth);\n-            int h = (int) Math.ceil(destHeight);\n+            int w = (int) Math.floor(destWidth + 0.5);\n+            int h = (int) Math.floor(destHeight + 0.5);\n+\n","filename":"src\/java.desktop\/share\/classes\/sun\/swing\/CachedPainter.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -58,0 +58,2 @@\n+import java.awt.geom.AffineTransform;\n+\n@@ -60,0 +62,2 @@\n+import java.lang.Math;\n+\n@@ -678,0 +682,5 @@\n+            \/\/ Get DPI to pass further to ThemeReader.paintBackground()\n+            Graphics2D g2d = (Graphics2D) g;\n+            AffineTransform  at = g2d.getTransform();\n+            int dpi = (int)(at.getScaleX() * 96);\n+\n@@ -685,1 +694,2 @@\n-                                        0, 0, w, h, w);\n+                                        0, 0, w, h, w, dpi);\n+\n","filename":"src\/java.desktop\/windows\/classes\/com\/sun\/java\/swing\/plaf\/windows\/XPStyle.java","additions":11,"deletions":1,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -46,0 +46,1 @@\n+    private static final int defaultDPI = 96;\n@@ -47,1 +48,2 @@\n-    private static final Map<String, Long> widgetToTheme = new HashMap<>();\n+    private static final Map<Integer, Map<String, Long>> dpiAwareWidgetToTheme\n+                         = new HashMap<Integer, Map<String, Long>>();\n@@ -84,2 +86,8 @@\n-    private static Long getThemeImpl(String widget) {\n-        Long theme = widgetToTheme.get(widget);\n+    private static Long getThemeImpl(String widget, int dpi) {\n+        Long theme = null;\n+\n+        if(dpiAwareWidgetToTheme.containsKey(dpi))\n+        {\n+            theme = dpiAwareWidgetToTheme.get(dpi).get(widget);\n+        }\n+\n@@ -92,1 +100,1 @@\n-                theme = openTheme(widget.substring(i+2));\n+                theme = openTheme(widget.substring(i + 2), dpi);\n@@ -95,1 +103,14 @@\n-                theme = openTheme(widget);\n+                theme = openTheme(widget, dpi);\n+            }\n+\n+            if(dpiAwareWidgetToTheme.containsKey(dpi))\n+            {\n+                if (!dpiAwareWidgetToTheme.get(dpi).isEmpty())\n+                {\n+                    dpiAwareWidgetToTheme.get(dpi).put(widget, theme);\n+                }\n+            }\n+            else\n+            {\n+                dpiAwareWidgetToTheme.put(dpi, new HashMap<>());\n+                dpiAwareWidgetToTheme.get(dpi).put(widget, theme);\n@@ -97,1 +118,0 @@\n-            widgetToTheme.put(widget, theme);\n@@ -104,1 +124,1 @@\n-    private static Long getTheme(String widget) {\n+    private static Long getTheme(String widget, int dpi) {\n@@ -114,2 +134,8 @@\n-                    for (Long value : widgetToTheme.values()) {\n-                        closeTheme(value);\n+                    if (!dpiAwareWidgetToTheme.isEmpty()) {\n+                        for (Long value :\n+                             dpiAwareWidgetToTheme.get(dpi).values()) {\n+                            closeTheme(value);\n+                        }\n+                        dpiAwareWidgetToTheme.get(dpi).clear();\n+                        dpiAwareWidgetToTheme.clear();\n+                        valid = true;\n@@ -117,2 +143,0 @@\n-                    widgetToTheme.clear();\n-                    valid = true;\n@@ -127,1 +151,6 @@\n-        Long theme = widgetToTheme.get(widget);\n+        Long theme = null;\n+\n+        if(dpiAwareWidgetToTheme.containsKey(dpi))\n+        {\n+            theme = dpiAwareWidgetToTheme.get(dpi).get(widget);\n+        }\n@@ -132,1 +161,1 @@\n-                theme = getThemeImpl(widget);\n+                theme = getThemeImpl(widget, dpi);\n@@ -142,2 +171,2 @@\n-                                               int part, int state, int x,\n-                                               int y, int w, int h, int stride);\n+                                               int part, int state, int rectRight,\n+                                               int rectBottom, int w, int h, int stride);\n@@ -146,1 +175,1 @@\n-           int part, int state, int x, int y, int w, int h, int stride) {\n+           int part, int state, int x, int y, int w, int h, int stride, int dpi) {\n@@ -149,1 +178,8 @@\n-            paintBackground(buffer, getTheme(widget), part, state, x, y, w, h, stride);\n+\n+            \/* We get the part size vased on the theme for current screen DPI and pass it to paintBackground *\/\n+            Dimension d = getPartSize(getTheme(widget, dpi), part, state);\n+            paintBackground(buffer,\n+                            getTheme(widget, dpi),\n+                            part, state,\n+                            (int)d.getWidth(),\n+                            (int)d.getHeight() , w, h, stride);\n@@ -161,1 +197,1 @@\n-            return getThemeMargins(getTheme(widget), part, state, marginType);\n+            return getThemeMargins(getTheme(widget, defaultDPI), part, state, marginType);\n@@ -172,1 +208,1 @@\n-            return isThemePartDefined(getTheme(widget), part, state);\n+            return isThemePartDefined(getTheme(widget, defaultDPI), part, state);\n@@ -184,1 +220,1 @@\n-            return getColor(getTheme(widget), part, state, property);\n+            return getColor(getTheme(widget, defaultDPI), part, state, property);\n@@ -196,1 +232,1 @@\n-            return getInt(getTheme(widget), part, state, property);\n+            return getInt(getTheme(widget, defaultDPI), part, state, property);\n@@ -208,1 +244,1 @@\n-            return getEnum(getTheme(widget), part, state, property);\n+            return getEnum(getTheme(widget, defaultDPI), part, state, property);\n@@ -221,1 +257,1 @@\n-            return getBoolean(getTheme(widget), part, state, property);\n+            return getBoolean(getTheme(widget, defaultDPI), part, state, property);\n@@ -232,1 +268,1 @@\n-            return getSysBoolean(getTheme(widget), property);\n+            return getSysBoolean(getTheme(widget, defaultDPI), property);\n@@ -244,1 +280,1 @@\n-            return getPoint(getTheme(widget), part, state, property);\n+            return getPoint(getTheme(widget, defaultDPI), part, state, property);\n@@ -257,1 +293,1 @@\n-            return getPosition(getTheme(widget), part,state,property);\n+            return getPosition(getTheme(widget, defaultDPI), part,state,property);\n@@ -269,1 +305,1 @@\n-            return getPartSize(getTheme(widget), part, state);\n+            return getPartSize(getTheme(widget, defaultDPI), part, state);\n@@ -275,1 +311,1 @@\n-    private static native long openTheme(String widget);\n+    private static native long openTheme(String widget, int dpi);\n@@ -288,2 +324,3 @@\n-            return getThemeTransitionDuration(getTheme(widget),\n-                                              part, stateFrom, stateTo, propId);\n+            return getThemeTransitionDuration(getTheme(widget, defaultDPI),\n+                                              part, stateFrom, stateTo,\n+                                              propId);\n@@ -302,2 +339,4 @@\n-            return getThemeBackgroundContentMargins(getTheme(widget),\n-                                    part, state, boundingWidth, boundingHeight);\n+            return getThemeBackgroundContentMargins(getTheme(widget,\n+                                                             defaultDPI),\n+                                                    part, state, boundingWidth,\n+                                                    boundingHeight);\n","filename":"src\/java.desktop\/windows\/classes\/sun\/awt\/windows\/ThemeReader.java","additions":71,"deletions":32,"binary":false,"changes":103,"status":"modified"},{"patch":"@@ -43,1 +43,0 @@\n-\n@@ -49,1 +48,1 @@\n-typedef HTHEME(__stdcall *PFNOPENTHEMEDATA)(HWND hwnd, LPCWSTR pszClassList);\n+typedef HTHEME(__stdcall *PFNOPENTHEMEDATAFORDPI)(HWND hwnd, LPCWSTR pszClassList, UINT dpi);\n@@ -93,1 +92,1 @@\n-static PFNOPENTHEMEDATA OpenThemeDataFunc = NULL;\n+static PFNOPENTHEMEDATAFORDPI OpenThemeDataFuncForDpi = NULL;\n@@ -119,2 +118,2 @@\n-        OpenThemeDataFunc = (PFNOPENTHEMEDATA)GetProcAddress(hModThemes,\n-                                                        \"OpenThemeData\");\n+        OpenThemeDataFuncForDpi = (PFNOPENTHEMEDATAFORDPI)GetProcAddress(\n+                                   hModThemes, \"OpenThemeDataForDpi\");\n@@ -155,1 +154,1 @@\n-        if(OpenThemeDataFunc\n+        if(OpenThemeDataFuncForDpi\n@@ -174,3 +173,6 @@\n-              \/\/ We need to make sure we can load the Theme. This may not be\n-              \/\/ the case on a WinXP machine with classic mode enabled.\n-              HTHEME hTheme = OpenThemeDataFunc(AwtToolkit::GetInstance().GetHWnd(), L\"Button\");\n+              \/\/ We need to make sure we can load the Theme.\n+              \/\/ Use the default DPI value of 96 on windows.\n+              unsigned int dpi =96;\n+              HTHEME hTheme = OpenThemeDataFuncForDpi (\n+                              AwtToolkit::GetInstance().GetHWnd(),\n+                              L\"Button\", dpi);\n@@ -239,1 +241,1 @@\n-(JNIEnv *env, jclass klass, jstring widget) {\n+(JNIEnv* env, jclass klass, jstring widget, jint dpi) {\n@@ -241,1 +243,1 @@\n-    LPCTSTR str = (LPCTSTR) JNU_GetStringPlatformChars(env, widget, NULL);\n+    LPCTSTR str = (LPCTSTR)JNU_GetStringPlatformChars(env, widget, NULL);\n@@ -248,1 +250,3 @@\n-    HTHEME htheme = OpenThemeDataFunc(AwtToolkit::GetInstance().GetHWnd(), str);\n+    HTHEME htheme = OpenThemeDataFuncForDpi(\n+                    AwtToolkit::GetInstance().GetHWnd(),\n+                    str, dpi);\n@@ -250,1 +254,1 @@\n-    return (jlong) htheme;\n+    return (jlong)htheme;\n@@ -381,1 +385,1 @@\n-    jint x, jint y, jint w, jint h, jint stride) {\n+    jint rectRight, jint rectBottom, jint w, jint h, jint stride) {\n@@ -427,2 +431,3 @@\n-    rect.bottom = h;\n-    rect.right = w;\n+    rect.bottom = rectBottom ;\n+    rect.right  = rectRight;\n+\n@@ -717,21 +722,0 @@\n-void rescale(SIZE *size) {\n-    static int dpiX = -1;\n-    static int dpiY = -1;\n-    if (dpiX == -1 || dpiY == -1) {\n-        HWND hWnd = ::GetDesktopWindow();\n-        HDC hDC = ::GetDC(hWnd);\n-        dpiX = ::GetDeviceCaps(hDC, LOGPIXELSX);\n-        dpiY = ::GetDeviceCaps(hDC, LOGPIXELSY);\n-        ::ReleaseDC(hWnd, hDC);\n-    }\n-\n-    if (dpiX !=0 && dpiX != 96) {\n-        float invScaleX = 96.0f \/ dpiX;\n-        size->cx = (int) round(size->cx * invScaleX);\n-    }\n-    if (dpiY != 0 && dpiY != 96) {\n-        float invScaleY = 96.0f \/ dpiY;\n-        size->cy = (int) round(size->cy * invScaleY);\n-    }\n-}\n-\n@@ -764,1 +748,0 @@\n-            rescale(&size);\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/ThemeReader.cpp","additions":21,"deletions":38,"binary":false,"changes":59,"status":"modified"}]}