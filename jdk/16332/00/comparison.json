{"files":[{"patch":"@@ -822,2 +822,2 @@\n-<code>C:\\freetype-i586<\/code>:\n-<code>bash configure --with-freetype=\/cygdrive\/c\/freetype-i586 --with-target-bits=32<\/code><\/p><\/li>\n+<code>C:\\freetype-i586<\/code>:<\/p>\n+<pre><code>bash configure --with-freetype=\/cygdrive\/c\/freetype-i586 --with-target-bits=32<\/code><\/pre><\/li>\n@@ -825,2 +825,2 @@\n-enabled:\n-<code>bash configure --enable-debug --with-jvm-variants=server --enable-dtrace<\/code><\/p><\/li>\n+enabled:<\/p>\n+<pre><code>bash configure --enable-debug --with-jvm-variants=server --enable-dtrace<\/code><\/pre><\/li>\n@@ -1334,2 +1334,1 @@\n-instance:<\/p><\/li>\n-<\/ul>\n+instance:<\/p>\n@@ -1338,4 +1337,3 @@\n-dpkg-deb -x \/tmp\/libasound2-dev_1.0.25-4_armhf.deb .<\/code><\/pre>\n-<ul>\n-<li>If alsa is not properly detected by <code>configure<\/code>, you can\n-point it out by <code>--with-alsa<\/code>.<\/li>\n+dpkg-deb -x \/tmp\/libasound2-dev_1.0.25-4_armhf.deb .<\/code><\/pre><\/li>\n+<li><p>If alsa is not properly detected by <code>configure<\/code>, you\n+can point it out by <code>--with-alsa<\/code>.<\/p><\/li>\n@@ -1375,15 +1373,12 @@\n-<pre><code>    cd \/tools\/gcc-linaro-arm-linux-gnueabihf-raspbian-2012.09-20120921_linux\/arm-linux-gnueabihf\/libc\/usr\n-    mkdir X11R6\n-    cd X11R6\n-    for deb in \/tmp\/target-x11\/*.deb ; do dpkg-deb -x $deb . ; done\n-    mv usr\/* .\n-    cd lib\n-    cp arm-linux-gnueabihf\/* .\n-    ```\n-\n-You can ignore the following messages. These libraries are not needed to\n-successfully complete a full JDK build.<\/code><\/pre>\n-<p>cp: cannot stat\n-<code>arm-linux-gnueabihf\/libICE.so': No such file or directory cp: cannot stat<\/code>arm-linux-gnueabihf\/libSM.so':\n-No such file or directory cp: cannot stat\n-`arm-linux-gnueabihf\/libXt.so': No such file or directory ```<\/p><\/li>\n+<pre><code>cd \/tools\/gcc-linaro-arm-linux-gnueabihf-raspbian-2012.09-20120921_linux\/arm-linux-gnueabihf\/libc\/usr\n+mkdir X11R6\n+cd X11R6\n+for deb in \/tmp\/target-x11\/*.deb ; do dpkg-deb -x $deb . ; done\n+mv usr\/* .\n+cd lib\n+cp arm-linux-gnueabihf\/* .<\/code><\/pre>\n+<p>You can ignore the following messages. These libraries are not needed\n+to successfully complete a full JDK build.<\/p>\n+<pre><code>cp: cannot stat `arm-linux-gnueabihf\/libICE.so&#39;: No such file or directory\n+cp: cannot stat `arm-linux-gnueabihf\/libSM.so&#39;: No such file or directory\n+cp: cannot stat `arm-linux-gnueabihf\/libXt.so&#39;: No such file or directory<\/code><\/pre><\/li>\n@@ -1407,2 +1402,2 @@\n-<li><p>Install cross-compiler on the <em>build<\/em> system:\n-<code>apt install g++-aarch64-linux-gnu gcc-aarch64-linux-gnu<\/code><\/p><\/li>\n+<li><p>Install cross-compiler on the <em>build<\/em> system:<\/p>\n+<pre><code>apt install g++-aarch64-linux-gnu gcc-aarch64-linux-gnu<\/code><\/pre><\/li>\n@@ -1410,2 +1405,11 @@\n-<em>target<\/em> system:\n-<code>sudo debootstrap \\       --arch=arm64 \\       --verbose \\       --include=fakeroot,symlinks,build-essential,libx11-dev,libxext-dev,libxrender-dev,libxrandr-dev,libxtst-dev,libxt-dev,libcups2-dev,libfontconfig1-dev,libasound2-dev,libfreetype6-dev,libpng-dev,libffi-dev \\       --resolve-deps \\       buster \\       ~\/sysroot-arm64 \\       http:\/\/httpredir.debian.org\/debian\/     # If the target architecture is `riscv64`,     # the path should be `debian-ports` instead of `debian`.<\/code><\/p><\/li>\n+<em>target<\/em> system:<\/p>\n+<pre><code>sudo debootstrap \\\n+  --arch=arm64 \\\n+  --verbose \\\n+  --include=fakeroot,symlinks,build-essential,libx11-dev,libxext-dev,libxrender-dev,libxrandr-dev,libxtst-dev,libxt-dev,libcups2-dev,libfontconfig1-dev,libasound2-dev,libfreetype6-dev,libpng-dev,libffi-dev \\\n+  --resolve-deps \\\n+  buster \\\n+  ~\/sysroot-arm64 \\\n+  http:\/\/httpredir.debian.org\/debian\/\n+# If the target architecture is `riscv64`,\n+# the path should be `debian-ports` instead of `debian`.<\/code><\/pre><\/li>\n@@ -1413,2 +1417,2 @@\n-proper locations:\n-<code>sudo chroot ~\/sysroot-arm64 symlinks -cr .<\/code><\/p><\/li>\n+proper locations:<\/p>\n+<pre><code>sudo chroot ~\/sysroot-arm64 symlinks -cr .<\/code><\/pre><\/li>\n@@ -1416,2 +1420,6 @@\n-sysroot\/toolchain-path:\n-<code>sh .\/configure \\       --openjdk-target=aarch64-linux-gnu \\       --with-sysroot=~\/sysroot-arm64     make images     ls build\/linux-aarch64-server-release\/<\/code><\/p><\/li>\n+sysroot\/toolchain-path:<\/p>\n+<pre><code>sh .\/configure \\\n+  --openjdk-target=aarch64-linux-gnu \\\n+  --with-sysroot=~\/sysroot-arm64\n+make images\n+ls build\/linux-aarch64-server-release\/<\/code><\/pre><\/li>\n@@ -1569,6 +1577,21 @@\n-<li><p>Install the RISC-V GNU compiler toolchain:\n-<code>git clone --recursive https:\/\/github.com\/riscv-collab\/riscv-gnu-toolchain     cd riscv-gnu-toolchain     .\/configure --prefix=&lt;toolchain-installed-path&gt;     make linux     export PATH=&lt;toolchain-installed-path&gt;\/bin:$PATH<\/code><\/p><\/li>\n-<li><p>Cross-compile all the required libraries:\n-<code># An example for libffi     git clone https:\/\/github.com\/libffi\/libffi     cd libffi     .\/configure --host=riscv64-unknown-linux-gnu --prefix=&lt;toolchain-installed-path&gt;\/sysroot\/usr     make     make install<\/code><\/p><\/li>\n-<li><p>Configure and build OpenJDK:\n-<code>bash configure \\       --with-boot-jdk=$BOOT_JDK \\       --openjdk-target=riscv64-linux-gnu \\       --with-sysroot=&lt;toolchain-installed-path&gt;\/sysroot \\       --with-toolchain-path=&lt;toolchain-installed-path&gt;\/bin \\       --with-extra-path=&lt;toolchain-installed-path&gt;\/bin     make images<\/code><\/p><\/li>\n+<li><p>Install the RISC-V GNU compiler toolchain:<\/p>\n+<pre><code>git clone --recursive https:\/\/github.com\/riscv-collab\/riscv-gnu-toolchain\n+cd riscv-gnu-toolchain\n+.\/configure --prefix=&lt;toolchain-installed-path&gt;\n+make linux\n+export PATH=&lt;toolchain-installed-path&gt;\/bin:$PATH<\/code><\/pre><\/li>\n+<li><p>Cross-compile all the required libraries:<\/p>\n+<pre><code># An example for libffi\n+git clone https:\/\/github.com\/libffi\/libffi\n+cd libffi\n+.\/configure --host=riscv64-unknown-linux-gnu --prefix=&lt;toolchain-installed-path&gt;\/sysroot\/usr\n+make\n+make install<\/code><\/pre><\/li>\n+<li><p>Configure and build OpenJDK:<\/p>\n+<pre><code>bash configure \\\n+  --with-boot-jdk=$BOOT_JDK \\\n+  --openjdk-target=riscv64-linux-gnu \\\n+  --with-sysroot=&lt;toolchain-installed-path&gt;\/sysroot \\\n+  --with-toolchain-path=&lt;toolchain-installed-path&gt;\/bin \\\n+  --with-extra-path=&lt;toolchain-installed-path&gt;\/bin\n+make images<\/code><\/pre><\/li>\n","filename":"doc\/building.html","additions":62,"deletions":39,"binary":false,"changes":101,"status":"modified"},{"patch":"@@ -629,0 +629,1 @@\n+\n@@ -634,0 +635,1 @@\n+\n@@ -1103,5 +1105,6 @@\n-```\n-cd \/tools\/gcc-linaro-arm-linux-gnueabihf-raspbian-2012.09-20120921_linux\/arm-linux-gnueabihf\/libc\n-dpkg-deb -x \/tmp\/libasound2_1.0.25-4_armhf.deb .\n-dpkg-deb -x \/tmp\/libasound2-dev_1.0.25-4_armhf.deb .\n-```\n+\n+    ```\n+    cd \/tools\/gcc-linaro-arm-linux-gnueabihf-raspbian-2012.09-20120921_linux\/arm-linux-gnueabihf\/libc\n+    dpkg-deb -x \/tmp\/libasound2_1.0.25-4_armhf.deb .\n+    dpkg-deb -x \/tmp\/libasound2-dev_1.0.25-4_armhf.deb .\n+    ```\n@@ -1143,0 +1146,1 @@\n+\n@@ -1176,0 +1180,1 @@\n+\n@@ -1181,0 +1186,1 @@\n+\n@@ -1195,0 +1201,1 @@\n+\n@@ -1200,0 +1207,1 @@\n+\n@@ -1258,0 +1266,1 @@\n+\n@@ -1267,0 +1276,1 @@\n+\n@@ -1277,0 +1287,1 @@\n+\n","filename":"doc\/building.md","additions":16,"deletions":5,"binary":false,"changes":21,"status":"modified"}]}