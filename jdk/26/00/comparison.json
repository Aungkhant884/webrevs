{"files":[{"patch":"@@ -74,1 +74,1 @@\n-            throw new IllegalAccessError(\"Already connected\");\n+            throw new IllegalStateException(\"Already connected\");\n","filename":"src\/java.base\/share\/classes\/sun\/net\/www\/URLConnection.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,63 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import org.testng.Assert;\n+import org.testng.annotations.Test;\n+\n+import java.net.URL;\n+\n+\/*\n+ * @test\n+ * @bug 8252767\n+ * @summary Tests sun.net.www.URLConnection\n+ * when already connected\n+ * @run testng URLConnectionTest\n+ *\/\n+public class URLConnectionTest {\n+\n+    \/**\n+     * Test that {@link sun.net.www.URLConnection#setRequestProperty(String, String)} throws\n+     * an {@link IllegalStateException} when already connected\n+     *\n+     * @throws Exception\n+     *\/\n+    @Test\n+    public void testSetRequestProperty() throws Exception {\n+        final URL url = new URL(\"file:\/\/\" + System.getProperty(\"java.io.tmpdir\"));\n+        final java.net.URLConnection conn = url.openConnection();\n+        conn.connect();\n+        try {\n+            conn.setRequestProperty(\"foo\", \"bar\");\n+            Assert.fail(\"setRequestProperty on \" + conn.getClass().getName() +\n+                    \" for \" + url + \" was expected to throw IllegalStateException, but didn't\");\n+        } catch (IllegalStateException ise) {\n+            \/\/ expected\n+        } finally {\n+            try {\n+                conn.getInputStream().close();\n+            } catch (Exception e) {\n+                \/\/ ignore\n+            }\n+        }\n+    }\n+}\n","filename":"test\/jdk\/sun\/net\/www\/URLConnectionTest.java","additions":63,"deletions":0,"binary":false,"changes":63,"status":"added"}]}