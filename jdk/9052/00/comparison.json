{"files":[{"patch":"@@ -118,1 +118,1 @@\n-                                  \"annotation type\", \"@SupportedAnnotationTypes\");\n+                                  \"annotation interface\", \"@SupportedAnnotationTypes\");\n","filename":"src\/java.compiler\/share\/classes\/javax\/annotation\/processing\/AbstractProcessor.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -73,1 +73,1 @@\n-     * Returns the elements annotated with the given annotation type.\n+     * Returns the elements annotated with the given annotation interface.\n@@ -87,2 +87,2 @@\n-     * @param a  annotation type being requested\n-     * @return the elements annotated with the given annotation type,\n+     * @param a  annotation interface being requested\n+     * @return the elements annotated with the given annotation interface,\n@@ -91,1 +91,1 @@\n-     * represent an annotation type\n+     * represent an annotation interface\n@@ -97,1 +97,1 @@\n-     * annotation types.\n+     * annotation interfaces.\n@@ -100,2 +100,2 @@\n-     * annotations by looking for an annotation type and its\n-     * containing annotation type at the same time.\n+     * annotations by looking for an annotation interface and its\n+     * containing annotation interface at the same time.\n@@ -110,1 +110,1 @@\n-     * @param annotations  annotation types being requested\n+     * @param annotations  annotation interfaces being requested\n@@ -112,1 +112,1 @@\n-     * annotation types, or an empty set if there are none\n+     * annotation interfaces, or an empty set if there are none\n@@ -114,1 +114,1 @@\n-     * argument set do not represent an annotation type\n+     * argument set do not represent an annotation interface\n@@ -128,1 +128,1 @@\n-     * Returns the elements annotated with the given annotation type.\n+     * Returns the elements annotated with the given annotation interface.\n@@ -144,1 +144,1 @@\n-     * representation of an annotation type as a {@code Class} object\n+     * representation of an annotation interface as a {@code Class} object\n@@ -146,2 +146,2 @@\n-     * processing. The set of annotation types present in the runtime\n-     * context may differ from the set of annotation types present in\n+     * processing. The set of annotation interfaces present in the runtime\n+     * context may differ from the set of annotation interfaces present in\n@@ -149,1 +149,1 @@\n-     * environmental configuration. If an runtime annotation type is\n+     * environmental configuration. If an runtime annotation interface is\n@@ -152,1 +152,1 @@\n-     * annotation type.\n+     * annotation interface.\n@@ -154,2 +154,2 @@\n-     * @param a  annotation type being requested\n-     * @return the elements annotated with the given annotation type,\n+     * @param a  annotation interface being requested\n+     * @return the elements annotated with the given annotation interface,\n@@ -158,1 +158,1 @@\n-     * represent an annotation type\n+     * represent an annotation interface\n@@ -167,1 +167,1 @@\n-     * annotation types.\n+     * annotation interfaces.\n@@ -171,1 +171,1 @@\n-     * representation of an annotation type as a {@code Class} object\n+     * representation of an annotation interface as a {@code Class} object\n@@ -173,2 +173,2 @@\n-     * processing. The set of annotation types present in the runtime\n-     * context may differ from the set of annotation types present in\n+     * processing. The set of annotation interfaces present in the runtime\n+     * context may differ from the set of annotation interfaces present in\n@@ -176,1 +176,1 @@\n-     * environmental configuration. If an runtime annotation type is\n+     * environmental configuration. If an runtime annotation interface is\n@@ -179,1 +179,1 @@\n-     * annotation type.\n+     * annotation interface.\n@@ -182,2 +182,2 @@\n-     * annotations by looking for an annotation type and its\n-     * containing annotation type at the same time.\n+     * annotations by looking for an annotation interface and its\n+     * containing annotation interface at the same time.\n@@ -192,1 +192,1 @@\n-     * @param annotations  annotation types being requested\n+     * @param annotations  annotation interfaces being requested\n@@ -194,1 +194,1 @@\n-     * annotation types, or an empty set if there are none\n+     * annotation interfaces, or an empty set if there are none\n@@ -196,1 +196,1 @@\n-     * argument set do not represent an annotation type\n+     * argument set do not represent an annotation interface\n","filename":"src\/java.compiler\/share\/classes\/javax\/annotation\/processing\/RoundEnvironment.java","additions":30,"deletions":30,"binary":false,"changes":60,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,2 +54,2 @@\n- * annotation type <i>AT<\/i>. If <i>AT<\/i> is a repeatable annotation\n- * type, the type of the containing annotation is <i>ATC<\/i>.\n+ * annotation interface <i>AI<\/i>. If <i>AI<\/i> is a repeatable annotation\n+ * interface, the type of the containing annotation is <i>AIC<\/i>.\n@@ -68,1 +68,1 @@\n- * <p>Typically, if exactly one annotation of type <i>AT<\/i> appears in\n+ * <p>Typically, if exactly one annotation of type <i>AI<\/i> appears in\n@@ -72,1 +72,1 @@\n- * An annotation of type <i>AT<\/i> on a {@linkplain\n+ * An annotation of type <i>AI<\/i> on a {@linkplain\n@@ -80,3 +80,3 @@\n- * If there are multiple annotations of type <i>AT<\/i> present on\n- * <i>C<\/i>, then if <i>AT<\/i> is repeatable annotation type, an\n- * annotation of type <i>ATC<\/i> is {@linkplain javax.lang.model.util.Elements#getOrigin(AnnotatedConstruct, AnnotationMirror) implicitly declared} on <i>C<\/i>.\n+ * If there are multiple annotations of type <i>AI<\/i> present on\n+ * <i>C<\/i>, then if <i>AI<\/i> is repeatable annotation interface, an\n+ * annotation of type <i>AIC<\/i> is {@linkplain javax.lang.model.util.Elements#getOrigin(AnnotatedConstruct, AnnotationMirror) implicitly declared} on <i>C<\/i>.\n@@ -96,2 +96,2 @@\n- * <li>No annotation of type <i>AT<\/i> is directly present on\n- * <i>C<\/i>, and <i>C<\/i> is a class and <i>AT<\/i> is inheritable\n+ * <li>No annotation of type <i>AI<\/i> is directly present on\n+ * <i>C<\/i>, and <i>C<\/i> is a class and <i>AI<\/i> is inheritable\n@@ -107,2 +107,2 @@\n- * <li><i>AT<\/i> is a repeatable annotation type with a containing\n- * annotation type <i>ATC<\/i>.\n+ * <li><i>AI<\/i> is a repeatable annotation interface with a containing\n+ * annotation interface <i>AIC<\/i>.\n@@ -110,1 +110,1 @@\n- * <li>An annotation of type <i>ATC<\/i> is directly present on\n+ * <li>An annotation of type <i>AIC<\/i> is directly present on\n@@ -113,1 +113,1 @@\n- * of type <i>ATC<\/i>.\n+ * of type <i>AIC<\/i>.\n@@ -124,2 +124,2 @@\n- * <li> No annotation of type <i>AT<\/i> is directly or indirectly\n- * present on <i>C<\/i>, and <i>C<\/i> is a class, and <i>AT<\/i> is\n+ * <li> No annotation of type <i>AI<\/i> is directly or indirectly\n+ * present on <i>C<\/i>, and <i>C<\/i> is a class, and <i>AI<\/i> is\n@@ -166,1 +166,1 @@\n-     * representations of annotation types currently loaded into the\n+     * representations of annotation interfaces currently loaded into the\n@@ -173,1 +173,1 @@\n-     * annotation types.\n+     * annotation interfaces.\n@@ -176,1 +176,1 @@\n-     * @param <A>  the annotation type\n+     * @param <A>  the annotation interface\n@@ -178,1 +178,1 @@\n-     *          the annotation type\n+     *          the annotation interface\n@@ -205,1 +205,1 @@\n-     * annotation type<\/em>, and if so, attempts to find one or more\n+     * annotation interface<\/em>, and if so, attempts to find one or more\n@@ -223,1 +223,1 @@\n-     * representations of annotation types currently loaded into the\n+     * representations of annotation interfaces currently loaded into the\n@@ -230,1 +230,1 @@\n-     * annotation types.\n+     * annotation interfaces.\n@@ -233,1 +233,1 @@\n-     * @param <A>  the annotation type\n+     * @param <A>  the annotation interface\n@@ -235,1 +235,1 @@\n-     *          the annotation type\n+     *          the annotation interface\n","filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/AnnotatedConstruct.java","additions":25,"deletions":25,"binary":false,"changes":50,"status":"modified"},{"patch":"@@ -59,1 +59,1 @@\n-     * An annotation mirror of a marker annotation type\n+     * An annotation mirror of a marker annotation interface\n","filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/element\/AnnotationMirror.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n- * instance) of a class or interface, including annotation type\n+ * instance) of a class or interface, including annotation interface\n@@ -35,0 +35,3 @@\n+ * Annotation interface elements are methods restricted to have none\n+ * of formal parameters, type parameters, or a {@code throws} clause,\n+ * among other restrictions; see JLS {@jls 9.6.1} for details\n","filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/element\/ExecutableElement.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -353,1 +353,1 @@\n-     * @jls 9.6.3 Repeatable Annotation Types\n+     * @jls 9.6.3 Repeatable Annotation Interfaces\n@@ -428,1 +428,1 @@\n-         * @jls 9.6.3 Repeatable Annotation Types\n+         * @jls 9.6.3 Repeatable Annotation Interfaces\n","filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/util\/Elements.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}