{"files":[{"patch":"@@ -2,1 +2,1 @@\n-\/\/ Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+\/\/ Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -2735,4 +2735,1 @@\n-  \/\/ StoreVector (VectorStoreMask src)\n-  if (is_vshift_con_pattern(n, m) ||\n-      (UseSVE > 0 && m->Opcode() == Op_VectorStoreMask && n->Opcode() == Op_StoreVector) ||\n-      is_vector_arith_imm_pattern(n, m)) {\n+  if (is_vshift_con_pattern(n, m) || is_vector_arith_imm_pattern(n, m)) {\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64.ad","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,0 +32,1 @@\n+#include \"ci\/ciEnv.hpp\"\n@@ -162,2 +163,1 @@\n-  } else if (Instruction_aarch64::extract(insn, 31, 22) == 0b1011100101 &&\n-             Instruction_aarch64::extract(insn, 4, 0) == 0b11111) {\n+  } else if (NativeInstruction::is_ldrw_to_zr(address(&insn))) {\n@@ -286,3 +286,0 @@\n-  } else if (Instruction_aarch64::extract(insn, 31, 22) == 0b1011100101 &&\n-             Instruction_aarch64::extract(insn, 4, 0) == 0b11111) {\n-    return 0;\n@@ -295,0 +292,7 @@\n+address MacroAssembler::target_addr_for_insn_or_null(address insn_addr, unsigned insn) {\n+  if (NativeInstruction::is_ldrw_to_zr(address(&insn))) {\n+    return 0;\n+  }\n+  return MacroAssembler::target_addr_for_insn(insn_addr, insn);\n+}\n+\n","filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.cpp","additions":10,"deletions":6,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -603,0 +603,1 @@\n+  static address target_addr_for_insn_or_null(address insn_addr, unsigned insn);\n@@ -607,0 +608,4 @@\n+  static address target_addr_for_insn_or_null(address insn_addr) {\n+    unsigned insn = *(unsigned*)insn_addr;\n+    return target_addr_for_insn_or_null(insn_addr, insn);\n+  }\n","filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.hpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2039,4 +2039,2 @@\n-            \/\/ If CHA is able to bind this invoke then update the class\n-            \/\/ to match that class, otherwise klass will refer to the\n-            \/\/ interface.\n-            klass = cha_monomorphic_target->holder();\n+            ciInstanceKlass* holder = cha_monomorphic_target->holder();\n+            ciInstanceKlass* constraint = (holder->is_subtype_of(singleton) ? holder : singleton); \/\/ avoid upcasts\n@@ -2046,1 +2044,1 @@\n-            CheckCast* c = new CheckCast(klass, receiver, copy_state_for_exception());\n+            CheckCast* c = new CheckCast(constraint, receiver, copy_state_for_exception());\n@@ -2048,1 +2046,1 @@\n-            c->set_direct_compare(klass->is_final());\n+            c->set_direct_compare(constraint->is_final());\n@@ -2052,0 +2050,2 @@\n+\n+            dependency_recorder()->assert_unique_implementor(declared_interface, singleton);\n","filename":"src\/hotspot\/share\/c1\/c1_GraphBuilder.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -3056,0 +3056,1 @@\n+\n@@ -3085,8 +3086,9 @@\n-      \/\/ To maintain compatibility, throw an exception if duplicate inner classes\n-      \/\/ entries are found.\n-      guarantee_property((_inner_classes->at(idx) != _inner_classes->at(y) ||\n-                          _inner_classes->at(idx+1) != _inner_classes->at(y+1) ||\n-                          _inner_classes->at(idx+2) != _inner_classes->at(y+2) ||\n-                          _inner_classes->at(idx+3) != _inner_classes->at(y+3)),\n-                         \"Duplicate entry in InnerClasses attribute in class file %s\",\n-                         CHECK_(true));\n+      \/\/ 4347400: make sure there's no duplicate entry in the classes array\n+      if (_major_version >= JAVA_1_5_VERSION) {\n+        guarantee_property((_inner_classes->at(idx) != _inner_classes->at(y) ||\n+                            _inner_classes->at(idx+1) != _inner_classes->at(y+1) ||\n+                            _inner_classes->at(idx+2) != _inner_classes->at(y+2) ||\n+                            _inner_classes->at(idx+3) != _inner_classes->at(y+3)),\n+                           \"Duplicate entry in InnerClasses attribute in class file %s\",\n+                           CHECK_(true));\n+      }\n@@ -3185,2 +3187,1 @@\n-  \/\/ 4347400: make sure there's no duplicate entry in the classes array\n-  \/\/ Also, check for circular entries.\n+  \/\/ Check for circular and duplicate entries.\n@@ -3188,1 +3189,1 @@\n-  if (_need_verify && _major_version >= JAVA_1_5_VERSION) {\n+  if (_need_verify) {\n","filename":"src\/hotspot\/share\/classfile\/classFileParser.cpp","additions":12,"deletions":11,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -110,0 +110,4 @@\n+            byte[] encodedParams = val.getEncodedParams();\n+            if (encodedParams == null) {\n+                throw new IOException(\"Missing MGF1 parameters\");\n+            }\n@@ -111,1 +115,1 @@\n-                    new DerValue(val.getEncodedParams()));\n+                    new DerValue(encodedParams));\n@@ -132,1 +136,6 @@\n-            p = DerValue.wrap(val.getEncodedParams()).getOctetString();\n+            byte[] encodedParams = val.getEncodedParams();\n+            if (encodedParams == null) {\n+                throw new IOException(\"Missing pSpecified label\");\n+            }\n+\n+            p = DerValue.wrap(encodedParams).getOctetString();\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/OAEPParameters.java","additions":11,"deletions":2,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -1318,0 +1318,2 @@\n+     *     <li>each interface class explicitly referenced in the stream\n+     *         (it is not called for interfaces implemented by classes in the stream),\n@@ -2074,0 +2076,24 @@\n+\n+            if (cl != null) {\n+                \/\/ Check that serial filtering has been done on the local class descriptor's superclass,\n+                \/\/ in case it does not appear in the stream.\n+\n+                \/\/ Find the next super descriptor that has a local class descriptor.\n+                \/\/ Descriptors for which there is no local class are ignored.\n+                ObjectStreamClass superLocal = null;\n+                for (ObjectStreamClass sDesc = desc.getSuperDesc(); sDesc != null; sDesc = sDesc.getSuperDesc()) {\n+                    if ((superLocal = sDesc.getLocalDesc()) != null) {\n+                        break;\n+                    }\n+                }\n+\n+                \/\/ Scan local descriptor superclasses for a match with the local descriptor of the super found above.\n+                \/\/ For each super descriptor before the match, invoke the serial filter on the class.\n+                \/\/ The filter is invoked for each class that has not already been filtered\n+                \/\/ but would be filtered if the instance had been serialized by this Java runtime.\n+                for (ObjectStreamClass lDesc = desc.getLocalDesc().getSuperDesc();\n+                     lDesc != null && lDesc != superLocal;\n+                     lDesc = lDesc.getSuperDesc()) {\n+                    filterCheck(lDesc.forClass(), -1);\n+                }\n+            }\n@@ -2532,0 +2558,7 @@\n+        \/\/ Check that an object follows the TC_EXCEPTION typecode\n+        byte tc = bin.peekByte();\n+        if (tc != TC_OBJECT &&\n+            tc != TC_REFERENCE) {\n+            throw new StreamCorruptedException(\n+                    String.format(\"invalid type code: %02X\", tc));\n+        }\n","filename":"src\/java.base\/share\/classes\/java\/io\/ObjectInputStream.java","additions":33,"deletions":0,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -3443,2 +3443,2 @@\n-        if (lengthInCodePoints == 1 && !Character.isHighSurrogate(seq.charAt(index))) {\n-            assert (index >= 0 && index < seq.length());\n+        if (lengthInCodePoints == 1 && index >= 0 && index < seq.length() &&\n+            !Character.isHighSurrogate(seq.charAt(index))) {\n","filename":"src\/java.base\/share\/classes\/java\/util\/regex\/Pattern.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -105,0 +105,5 @@\n+\n+                byte[] encodedParams = val.getEncodedParams();\n+                if (encodedParams == null) {\n+                    throw new IOException(\"Missing MGF1 parameters\");\n+                }\n@@ -106,1 +111,1 @@\n-                        new DerValue(val.getEncodedParams()));\n+                        new DerValue(encodedParams));\n","filename":"src\/java.base\/share\/classes\/sun\/security\/rsa\/PSSParameters.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -1418,0 +1418,7 @@\n+        if ((long)width * height > Integer.MAX_VALUE - 2) {\n+            \/\/ We are not able to properly decode image that has number\n+            \/\/ of pixels greater than Integer.MAX_VALUE - 2\n+            throw new IIOException(\"Can not read image of the size \"\n+                    + width + \" by \" + height);\n+        }\n+\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/imageio\/plugins\/png\/PNGImageReader.java","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -382,0 +382,4 @@\n+                        if (metaLength < 0) {\n+                            throw new InvalidMidiDataException(\"length out of bounds: \"\n+                                    + metaLength);\n+                        }\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/media\/sound\/StandardMidiFileReader.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -633,0 +633,5 @@\n+                        if (clen < 0) {\n+                            reject(Code.HTTP_BAD_REQUEST, requestLine,\n+                                    \"Illegal Content-Length value\");\n+                            return;\n+                        }\n","filename":"src\/jdk.httpserver\/share\/classes\/sun\/net\/httpserver\/ServerImpl.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"}]}