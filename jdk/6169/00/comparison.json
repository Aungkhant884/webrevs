{"files":[{"patch":"@@ -27,1 +27,0 @@\n-import java.net.URL;\n@@ -65,28 +64,0 @@\n-\n-    \/\/\n-    \/\/ The next two constructors are used only by the deprecated\n-    \/\/ PlatformMimeTable classes or, in last case, is called by the public\n-    \/\/ constructor.  They are kept here anticipating putting support for\n-    \/\/ mailcap formatted config files back in (so BOTH the properties format\n-    \/\/ and the mailcap formats are supported).\n-    \/\/\n-    MimeEntry(String type, String imageFileName, String extensionString) {\n-        typeName = type.toLowerCase();\n-        action = UNKNOWN;\n-        command = null;\n-        this.imageFileName = imageFileName;\n-        setExtensions(extensionString);\n-        starred = isStarred(typeName);\n-    }\n-\n-    \/\/ For use with MimeTable::parseMailCap\n-    MimeEntry(String typeName, int action, String command,\n-              String tempFileNameTemplate) {\n-        this.typeName = typeName.toLowerCase();\n-        this.action = action;\n-        this.command = command;\n-        this.imageFileName = null;\n-        this.fileExtensions = null;\n-\n-        this.tempFileNameTemplate = tempFileNameTemplate;\n-    }\n","filename":"src\/java.base\/share\/classes\/sun\/net\/www\/MimeEntry.java","additions":0,"deletions":29,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-        = new Hashtable<String, MimeEntry>();\n+        = new Hashtable<>();\n@@ -43,1 +43,1 @@\n-        = new Hashtable<String, MimeEntry>();\n+        = new Hashtable<>();\n@@ -57,1 +57,0 @@\n-    private static final String fileMagic = \"#\" + filePreamble;\n@@ -69,1 +68,1 @@\n-                new java.security.PrivilegedAction<MimeTable>() {\n+                new java.security.PrivilegedAction<>() {\n@@ -92,1 +91,1 @@\n-        return (FileNameMap)mt;\n+        return mt;\n@@ -351,11 +350,0 @@\n-    String[] getExtensions(String list) {\n-        StringTokenizer tokenizer = new StringTokenizer(list, \",\");\n-        int n = tokenizer.countTokens();\n-        String[] extensions = new String[n];\n-        for (int i = 0; i < n; i++) {\n-            extensions[i] = tokenizer.nextToken();\n-        }\n-\n-        return extensions;\n-    }\n-\n","filename":"src\/java.base\/share\/classes\/sun\/net\/www\/MimeTable.java","additions":4,"deletions":16,"binary":false,"changes":20,"status":"modified"}]}