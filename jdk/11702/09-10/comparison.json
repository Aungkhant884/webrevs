{"files":[{"patch":"@@ -50,1 +50,4 @@\n-\/\/ in a fatal error.\n+\/\/ in a fatal error. When ASan is available this is the macro of the same name from\n+\/\/ <sanitizer\/asan_interface.h>. When ASan is not available this macro is a NOOP which preserves the\n+\/\/ arguments, ensuring they still compile, but ensures they are stripped due to being unreachable.\n+\/\/ This helps ensure developers do not accidently break ASan builds.\n@@ -52,2 +55,1 @@\n-#undef ASAN_POISON_MEMORY_REGION\n-#define ASAN_POISON_MEMORY_REGION(addr, size) __asan_poison_memory_region((addr), (size))\n+\/\/ ASAN_POISON_MEMORY_REGION is defined in <sanitizer\/asan_interface.h>\n@@ -55,2 +57,0 @@\n-\/\/ NOOP implementation which preserves the arguments, ensuring they still compile, but ensures they\n-\/\/ are stripped due to being unreachable.\n@@ -69,1 +69,4 @@\n-\/\/ valid.\n+\/\/ valid. When ASan is available this is the macro of the same name from\n+\/\/ <sanitizer\/asan_interface.h>. When ASan is not available this macro is a NOOP which preserves the\n+\/\/ arguments, ensuring they still compile, but ensures they are stripped due to being unreachable.\n+\/\/ This helps ensure developers do not accidently break ASan builds.\n@@ -71,2 +74,1 @@\n-#undef ASAN_UNPOISON_MEMORY_REGION\n-#define ASAN_UNPOISON_MEMORY_REGION(addr, size) __asan_unpoison_memory_region((addr), (size))\n+\/\/ ASAN_UNPOISON_MEMORY_REGION is defined in <sanitizer\/asan_interface.h>\n@@ -74,2 +76,0 @@\n-\/\/ NOOP implementation which preserves the arguments, ensuring they still compile, but ensures they\n-\/\/ are stripped due to being unreachable.\n","filename":"src\/hotspot\/share\/sanitizers\/address.h","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"}]}