{"files":[{"patch":"@@ -32,1 +32,1 @@\n-\/\/ NO_SANITIZE_ADDRESS\n+\/\/ ASAN_POISON_MEMORY_REGION()\/ASAN_UNPOISON_MEMORY_REGION()\n@@ -34,20 +34,4 @@\n-\/\/ Function attribute that can be applied to disable ASan instrumentation for the function.\n-#ifdef ADDRESS_SANITIZER\n-\/\/ We currently only support ASan with GCC and Clang, but technically MSVC also has ASan so we could\n-\/\/ support it in the future. Thus we pre-emptively support the MSVC-specific attribute.\n-#ifdef _MSC_VER\n-#define NO_SANITIZE_ADDRESS __declspec(no_sanitize_address)\n-#else\n-#define NO_SANITIZE_ADDRESS __attribute__((no_sanitize_address))\n-#endif\n-#else\n-#define NO_SANITIZE_ADDRESS\n-#endif\n-\n-\/\/ ASAN_POISON_MEMORY_REGION()\n-\/\/\n-\/\/ Poisons the specified memory region. Subsequent reads and writes to the memory region will result\n-\/\/ in a fatal error. When ASan is available this is the macro of the same name from\n-\/\/ <sanitizer\/asan_interface.h>. When ASan is not available this macro is a NOOP which preserves the\n-\/\/ arguments, ensuring they still compile, but ensures they are stripped due to being unreachable.\n-\/\/ This helps ensure developers do not accidently break ASan builds.\n+\/\/ Poisons\/unpoisons the specified memory region. When ASan is available this is the macro of the\n+\/\/ same name from <sanitizer\/asan_interface.h>. When ASan is not available this macro is a NOOP\n+\/\/ which preserves the arguments, ensuring they still compile, but ensures they are stripped due to\n+\/\/ being unreachable. This helps ensure developers do not accidently break ASan builds.\n@@ -56,0 +40,1 @@\n+\/\/ ASAN_UNPOISON_MEMORY_REGION is defined in <sanitizer\/asan_interface.h>\n@@ -64,12 +49,0 @@\n-#endif\n-\n-\/\/ ASAN_UNPOISON_MEMORY_REGION()\n-\/\/\n-\/\/ Unpoisons the specified memory region. Subsequent reads and writes to the memory region are\n-\/\/ valid. When ASan is available this is the macro of the same name from\n-\/\/ <sanitizer\/asan_interface.h>. When ASan is not available this macro is a NOOP which preserves the\n-\/\/ arguments, ensuring they still compile, but ensures they are stripped due to being unreachable.\n-\/\/ This helps ensure developers do not accidently break ASan builds.\n-#ifdef ADDRESS_SANITIZER\n-\/\/ ASAN_UNPOISON_MEMORY_REGION is defined in <sanitizer\/asan_interface.h>\n-#else\n","filename":"src\/hotspot\/share\/sanitizers\/address.h","additions":6,"deletions":33,"binary":false,"changes":39,"status":"modified"}]}