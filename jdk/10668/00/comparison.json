{"files":[{"patch":"@@ -2096,5 +2096,0 @@\n-  if (PrintCompilation) {\n-    ResourceMark rm;\n-    task->print_tty();\n-  }\n-  elapsedTimer time;\n@@ -2139,0 +2134,6 @@\n+  if (task->directive()->PrintCompilationOption) {\n+    ResourceMark rm;\n+    task->print_tty();\n+  }\n+  elapsedTimer time;\n+\n","filename":"src\/hotspot\/share\/compiler\/compileBroker.cpp","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -45,0 +45,1 @@\n+    cflags(PrintCompilation,        bool, PrintCompilation, PrintCompilation) \\\n","filename":"src\/hotspot\/share\/compiler\/compilerDirectives.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -61,0 +61,1 @@\n+  option(PrintCompilation, \"PrintCompilation\", Bool) \\\n","filename":"src\/hotspot\/share\/compiler\/compilerOracle.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -46,1 +46,0 @@\n-    private static final WhiteBox WHITE_BOX = WhiteBox.getWhiteBox();\n@@ -51,3 +50,0 @@\n-    private static final String METHOD = TEST_NAME + \"::method\";\n-    private static final String METHOD1 = METHOD + \"1\";\n-    private static final String METHOD2 = METHOD + \"2\";\n@@ -56,13 +52,4 @@\n-        if (args.length == 0) {\n-            VmFlagTest.runTest(FLAG_NAME, TESTS,\n-                VmFlagTest.WHITE_BOX::setBooleanVMFlag,\n-                VmFlagTest.WHITE_BOX::getBooleanVMFlag);\n-            testFunctional(false);\n-            testFunctional(true);\n-            VmFlagTest.runTest(FLAG_DEBUG_NAME, VmFlagTest.WHITE_BOX::getBooleanVMFlag);\n-        } else {\n-            boolean value = Boolean.valueOf(args[0]);\n-            method1();\n-            VmFlagTest.WHITE_BOX.setBooleanVMFlag(FLAG_NAME, value);\n-            method2();\n-        }\n+        VmFlagTest.runTest(FLAG_NAME, TESTS,\n+            VmFlagTest.WHITE_BOX::setBooleanVMFlag,\n+            VmFlagTest.WHITE_BOX::getBooleanVMFlag);\n+        VmFlagTest.runTest(FLAG_DEBUG_NAME, VmFlagTest.WHITE_BOX::getBooleanVMFlag);\n@@ -70,23 +57,0 @@\n-\n-    private static void testFunctional(boolean value) throws Exception {\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n-            \"-Xbootclasspath\/a:.\",\n-            \"-XX:+UnlockDiagnosticVMOptions\",\n-            \"-XX:+WhiteBoxAPI\",\n-            \"-Xcomp\",\n-            \"-XX:CompileCommand=compileonly,\" + METHOD + \"*\",\n-            \"-XX:\" + (value ? \"-\" : \"+\") + FLAG_NAME,\n-            TEST_NAME,\n-            \"\" + value);\n-        OutputAnalyzer out = new OutputAnalyzer(pb.start());\n-        if (value) {\n-            out.shouldNotContain(METHOD1);\n-            out.shouldContain(METHOD2);\n-        } else {\n-            out.shouldContain(METHOD1);\n-            out.shouldNotContain(METHOD2);\n-        }\n-    }\n-\n-    private static void method1() { }\n-    private static void method2() { }\n","filename":"test\/lib-test\/jdk\/test\/whitebox\/vm_flags\/BooleanTest.java","additions":4,"deletions":40,"binary":false,"changes":44,"status":"modified"}]}