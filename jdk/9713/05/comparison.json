{"files":[{"patch":"@@ -757,1 +757,1 @@\n-void CodeCache::do_unloading(BoolObjectClosure* is_alive, bool unloading_occurred) {\n+void CodeCache::do_unloading(bool unloading_occurred) {\n@@ -759,1 +759,0 @@\n-  UnloadingScope scope(is_alive);\n","filename":"src\/hotspot\/share\/code\/codeCache.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -200,1 +200,1 @@\n-  static void do_unloading(BoolObjectClosure* is_alive, bool unloading_occurred);\n+  static void do_unloading(bool unloading_occurred);\n","filename":"src\/hotspot\/share\/code\/codeCache.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -208,0 +208,6 @@\n+nmethodBucket* DependencyContext::release_and_get_next_not_unloading(nmethodBucket* b) {\n+  nmethodBucket* next = b->next_not_unloading();\n+  release(b);\n+  return next;\n+ }\n+\n@@ -210,1 +216,7 @@\n-int DependencyContext::remove_all_dependents() {\n+void DependencyContext::remove_all_dependents() {\n+  nmethodBucket* b = dependencies_not_unloading();\n+  set_dependencies(NULL);\n+  assert(b == nullptr, \"All dependents should be unloading\");\n+}\n+\n+int DependencyContext::remove_and_mark_for_deoptimization_all_dependents() {\n@@ -214,1 +226,0 @@\n-  int removed = 0;\n@@ -221,7 +232,1 @@\n-    nmethodBucket* next = b->next_not_unloading();\n-    removed++;\n-    release(b);\n-    b = next;\n-  }\n-  if (UsePerfData && removed > 0) {\n-    _perf_total_buckets_deallocated_count->inc(removed);\n+    b = release_and_get_next_not_unloading(b);\n@@ -230,1 +235,1 @@\n-}\n+ }\n","filename":"src\/hotspot\/share\/code\/dependencyContext.cpp","additions":15,"deletions":10,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -123,1 +123,2 @@\n-  int  remove_all_dependents();\n+  void remove_all_dependents();\n+  int  remove_and_mark_for_deoptimization_all_dependents();\n@@ -125,0 +126,1 @@\n+  static nmethodBucket* release_and_get_next_not_unloading(nmethodBucket* b);\n","filename":"src\/hotspot\/share\/code\/dependencyContext.hpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2893,2 +2893,1 @@\n-void G1CollectedHeap::complete_cleaning(BoolObjectClosure* is_alive,\n-                                        bool class_unloading_occurred) {\n+void G1CollectedHeap::complete_cleaning(bool class_unloading_occurred) {\n@@ -2896,1 +2895,1 @@\n-  G1ParallelCleaningTask unlink_task(is_alive, num_workers, class_unloading_occurred);\n+  G1ParallelCleaningTask unlink_task(num_workers, class_unloading_occurred);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.cpp","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -1264,1 +1264,1 @@\n-  void complete_cleaning(BoolObjectClosure* is_alive, bool class_unloading_occurred);\n+  void complete_cleaning(bool class_unloading_occurred);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1684,0 +1684,1 @@\n+    CodeCache::UnloadingScope scope(&g1_is_alive);\n@@ -1685,1 +1686,1 @@\n-    _g1h->complete_cleaning(&g1_is_alive, purged_classes);\n+    _g1h->complete_cleaning(purged_classes);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentMark.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -304,0 +304,1 @@\n+    CodeCache::UnloadingScope unloading_scope(&_is_alive);\n@@ -306,1 +307,1 @@\n-    _heap->complete_cleaning(&_is_alive, purged_class);\n+    _heap->complete_cleaning(purged_class);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullCollector.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -54,2 +54,1 @@\n-G1ParallelCleaningTask::G1ParallelCleaningTask(BoolObjectClosure* is_alive,\n-                                               uint num_workers,\n+G1ParallelCleaningTask::G1ParallelCleaningTask(uint num_workers,\n@@ -59,1 +58,1 @@\n-  _code_cache_task(num_workers, is_alive, unloading_occurred),\n+  _code_cache_task(num_workers, unloading_occurred),\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ParallelCleaning.cpp","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -57,2 +57,1 @@\n-  G1ParallelCleaningTask(BoolObjectClosure* is_alive,\n-                         uint num_workers,\n+  G1ParallelCleaningTask(uint num_workers,\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ParallelCleaning.hpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2059,0 +2059,1 @@\n+    CodeCache::UnloadingScope scope(is_alive_closure());\n@@ -2064,1 +2065,1 @@\n-    CodeCache::do_unloading(is_alive_closure(), purged_class);\n+    CodeCache::do_unloading(purged_class);\n","filename":"src\/hotspot\/share\/gc\/parallel\/psParallelCompact.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -218,0 +218,1 @@\n+    CodeCache::UnloadingScope scope(&is_alive);\n@@ -223,1 +224,1 @@\n-    CodeCache::do_unloading(&is_alive, purged_class);\n+    CodeCache::do_unloading(purged_class);\n","filename":"src\/hotspot\/share\/gc\/serial\/genMarkSweep.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -35,2 +35,1 @@\n-CodeCacheUnloadingTask::CodeCacheUnloadingTask(uint num_workers, BoolObjectClosure* is_alive, bool unloading_occurred) :\n-  _unloading_scope(is_alive),\n+CodeCacheUnloadingTask::CodeCacheUnloadingTask(uint num_workers, bool unloading_occurred) :\n","filename":"src\/hotspot\/share\/gc\/shared\/parallelCleaning.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -35,1 +35,0 @@\n-  CodeCache::UnloadingScope _unloading_scope;\n@@ -44,1 +43,1 @@\n-  CodeCacheUnloadingTask(uint num_workers, BoolObjectClosure* is_alive, bool unloading_occurred);\n+  CodeCacheUnloadingTask(uint num_workers, bool unloading_occurred);\n","filename":"src\/hotspot\/share\/gc\/shared\/parallelCleaning.hpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1793,0 +1793,1 @@\n+    CodeCache::UnloadingScope scope(is_alive.is_alive_closure());\n@@ -1799,1 +1800,1 @@\n-    ShenandoahClassUnloadingTask unlink_task(phase, is_alive.is_alive_closure(), num_workers, purged_class);\n+    ShenandoahClassUnloadingTask unlink_task(phase, num_workers, purged_class);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -35,1 +35,0 @@\n-                                                           BoolObjectClosure* is_alive,\n@@ -41,1 +40,1 @@\n-  _code_cache_task(num_workers, is_alive, unloading_occurred),\n+  _code_cache_task(num_workers, unloading_occurred),\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahParallelCleaning.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -62,1 +62,0 @@\n-                               BoolObjectClosure* is_alive,\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahParallelCleaning.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1498,1 +1498,1 @@\n-      marked = deps.remove_all_dependents();\n+      marked = deps.remove_and_mark_for_deoptimization_all_dependents();\n","filename":"src\/hotspot\/share\/prims\/methodHandles.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}