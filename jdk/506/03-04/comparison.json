{"files":[{"patch":"@@ -46,1 +46,1 @@\n- *     <li>{@link #getRequestBody()} returns an {@link java.io.InputStream} for\n+ *     <li>{@link #getRequestBody()} returns an {@link InputStream} for\n@@ -53,1 +53,1 @@\n- *     <li>{@link #getResponseBody()} to get a {@link java.io.OutputStream} to\n+ *     <li>{@link #getResponseBody()} to get a {@link OutputStream} to\n@@ -134,2 +134,2 @@\n-     *      <li> close the request {@link java.io.InputStream}, if not already closed.\n-     *      <li> close the response {@link java.io.OutputStream}, if not already closed.\n+     *      <li> close the request {@link InputStream}, if not already closed.\n+     *      <li> close the response {@link OutputStream}, if not already closed.\n@@ -145,1 +145,1 @@\n-     * has been read, then the {@link java.io.InputStream#close()} call will read\n+     * has been read, then the {@link InputStream#close()} call will read\n@@ -160,1 +160,1 @@\n-     * <p> Closing this stream implicitly closes the {@link java.io.InputStream}\n+     * <p> Closing this stream implicitly closes the {@link InputStream}\n@@ -166,1 +166,1 @@\n-     * then {@link java.io.OutputStream#write()} will throw an {@code IOException}.\n+     * then {@link OutputStream#write()} will throw an {@code IOException}.\n@@ -168,1 +168,1 @@\n-     * {@link java.io.OutputStream#close()} will throw an {@code IOException}.\n+     * {@link OutputStream#close()} will throw an {@code IOException}.\n@@ -186,1 +186,1 @@\n-     * {@link java.io.OutputStream}.\n+     * {@link OutputStream}.\n@@ -276,2 +276,2 @@\n-     * (or both) of this exchange's {@link java.io.InputStream} and\n-     * {@link java.io.OutputStream}, with the given filtered streams so that\n+     * (or both) of this exchange's {@link InputStream} and\n+     * {@link OutputStream}, with the given filtered streams so that\n","filename":"src\/jdk.httpserver\/share\/classes\/com\/sun\/net\/httpserver\/HttpExchange.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"}]}