{"files":[{"patch":"@@ -46,1 +46,1 @@\n- *     <li>{@link #getRequestBody()} returns a {@link java.io.InputStream} for\n+ *     <li>{@link #getRequestBody()} returns an {@link java.io.InputStream} for\n@@ -275,8 +275,8 @@\n-     * Used by {@linkplain #Filter Filters} to wrap either (or both) of this exchange's InputStream\n-     * and OutputStream, with the given filtered streams so that subsequent\n-     * calls to {@link #getRequestBody()} will return the given\n-     * {@link java.io.InputStream}, and calls to {@link #getResponseBody()} will\n-     * return the given {@link java.io.OutputStream}. The streams provided to\n-     * this call must wrap the original streams, and may be (but are not required\n-     * to be) sub-classes of {@link java.io.FilterInputStream} and\n-     * {@link java.io.FilterOutputStream}.\n+     * Used by {@linkplain com.sun.net.httpserver.Filter Filters} to wrap either\n+     * (or both) of this exchange's {@link java.io.InputStream} and\n+     * {@link java.io.OutputStream}, with the given filtered streams so that\n+     * subsequent calls to {@link #getRequestBody()} will return the given\n+     * {@code InputStream}, and calls to {@link #getResponseBody()} will return\n+     * the given {@code OutputStream}. The streams provided to this call must wrap\n+     * the original streams, and may be (but are not required to be) sub-classes\n+     * of {@link java.io.FilterInputStream} and {@link java.io.FilterOutputStream}.\n","filename":"src\/jdk.httpserver\/share\/classes\/com\/sun\/net\/httpserver\/HttpExchange.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"}]}