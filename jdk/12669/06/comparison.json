{"files":[{"patch":"@@ -242,0 +242,30 @@\n+        \/\/ Please verify new CPU features before adding them. If we allow non-existent features\n+        \/\/ on this list, we will ignore tests and never execute them. Consult CPU_FEATURE_FLAGS\n+        \/\/ in corresponding vm_version_.hpp file to find correct cpu feature's name.\n+        List<String> verifiedCPUFeatures = new ArrayList<String>( Arrays.asList(\n+            \/\/ x86\n+            \"fma\",\n+            \/\/ Intel SSE\n+            \"sse\",\n+            \"sse2\",\n+            \"sse3\",\n+            \"ssse3\",\n+            \"sse4.1\",\n+            \/\/ Intel AVX\n+            \"avx\",\n+            \"avx2\",\n+            \"avx512\",\n+            \"avx512dq\",\n+            \"avx512vl\",\n+            \"avx512f\",\n+            \/\/ AArch64\n+            \"sha3\",\n+            \"asimd\",\n+            \"sve\"\n+        ));\n+\n+        if (!verifiedCPUFeatures.contains(feature)) {\n+            TestFormat.failNoThrow(\"Provided CPU feature is not in verified list: \" + feature + failAt());\n+            return false;\n+        }\n+\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/test\/IREncodingPrinter.java","additions":30,"deletions":0,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -305,1 +305,1 @@\n-    @IR(counts = {IRNode.AND_V, \"1\"}, applyIfCPUFeatureOr = {\"sve1\", \"true\", \"avx512\", \"true\"})\n+    @IR(counts = {IRNode.AND_V, \"1\"}, applyIfCPUFeatureOr = {\"sve\", \"true\", \"avx512\", \"true\"})\n@@ -326,1 +326,1 @@\n-    @IR(counts = {IRNode.AND_V, \"1\"}, applyIfCPUFeatureOr = {\"sve1\", \"true\", \"avx512\", \"true\"})\n+    @IR(counts = {IRNode.AND_V, \"1\"}, applyIfCPUFeatureOr = {\"sve\", \"true\", \"avx512\", \"true\"})\n@@ -347,1 +347,1 @@\n-    @IR(counts = {IRNode.AND_V, \"1\"}, applyIfCPUFeatureOr = {\"sve1\", \"true\", \"avx512\", \"true\"})\n+    @IR(counts = {IRNode.AND_V, \"1\"}, applyIfCPUFeatureOr = {\"sve\", \"true\", \"avx512\", \"true\"})\n@@ -569,1 +569,1 @@\n-    @IR(counts = {IRNode.OR_V, \"1\"}, applyIfCPUFeatureOr = {\"sve1\", \"true\", \"avx512\", \"true\"})\n+    @IR(counts = {IRNode.OR_V, \"1\"}, applyIfCPUFeatureOr = {\"sve\", \"true\", \"avx512\", \"true\"})\n@@ -590,1 +590,1 @@\n-    @IR(counts = {IRNode.OR_V, \"1\"}, applyIfCPUFeatureOr = {\"sve1\", \"true\", \"avx512\", \"true\"})\n+    @IR(counts = {IRNode.OR_V, \"1\"}, applyIfCPUFeatureOr = {\"sve\", \"true\", \"avx512\", \"true\"})\n@@ -611,1 +611,1 @@\n-    @IR(counts = {IRNode.OR_V, \"1\"}, applyIfCPUFeatureOr = {\"sve1\", \"true\", \"avx512\", \"true\"})\n+    @IR(counts = {IRNode.OR_V, \"1\"}, applyIfCPUFeatureOr = {\"sve\", \"true\", \"avx512\", \"true\"})\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorapi\/VectorLogicalOpIdentityTest.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,1 +48,1 @@\n-    \/\/ The IR check should not be applied, since the CPU feature does not exist.\n+    \/\/ The IR check should not be applied, since asimd is aarch64 and sse intel.\n@@ -50,1 +50,1 @@\n-    @IR(applyIfCPUFeature = {\"this-feature-does-not-exist-at-all\", \"true\"},\n+    @IR(applyIfCPUFeatureAnd = {\"asimd\", \"true\", \"sse\", \"true\"},\n@@ -54,1 +54,1 @@\n-    \/\/ The IR check should not be applied, since the CPU feature does not exist.\n+    \/\/ The IR check should not be applied, since asimd is aarch64 and sse intel.\n@@ -56,1 +56,1 @@\n-    @IR(applyIfCPUFeature = {\"this-feature-does-not-exist-at-all\", \"true\"},\n+    @IR(applyIfCPUFeatureAnd = {\"asimd\", \"true\", \"sse\", \"true\"},\n","filename":"test\/hotspot\/jtreg\/testlibrary_tests\/ir_framework\/tests\/TestPreconditions.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"}]}