{"files":[{"patch":"@@ -5425,1 +5425,1 @@\n-    ik->set_nest_host(cl_inst_info.dynamic_nest_host(), THREAD);\n+    ik->set_nest_host(cl_inst_info.dynamic_nest_host());\n","filename":"src\/hotspot\/share\/classfile\/classFileParser.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1030,1 +1030,1 @@\n-  int computed_modifiers = k->compute_modifier_flags(CHECK);\n+  int computed_modifiers = k->compute_modifier_flags();\n","filename":"src\/hotspot\/share\/classfile\/javaClasses.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1212,1 +1212,1 @@\n-  ik->set_nest_host(shared_nest_host, THREAD);\n+  ik->set_nest_host(shared_nest_host);\n","filename":"src\/hotspot\/share\/classfile\/systemDictionary.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -386,1 +386,1 @@\n-                                                        Klass::PrivateLookupMode private_mode, TRAPS) {\n+                                                        Klass::PrivateLookupMode private_mode) {\n@@ -547,1 +547,1 @@\n-static void print_nest_host_error_on(stringStream* ss, Klass* ref_klass, Klass* sel_klass, TRAPS) {\n+static void print_nest_host_error_on(stringStream* ss, Klass* ref_klass, Klass* sel_klass) {\n@@ -552,2 +552,2 @@\n-  const char* nest_host_error_1 = ref_ik->nest_host_error(THREAD);\n-  const char* nest_host_error_2 = sel_ik->nest_host_error(THREAD);\n+  const char* nest_host_error_1 = ref_ik->nest_host_error();\n+  const char* nest_host_error_2 = sel_ik->nest_host_error();\n@@ -614,1 +614,1 @@\n-      print_nest_host_error_on(&ss, ref_klass, sel_klass, THREAD);\n+      print_nest_host_error_on(&ss, ref_klass, sel_klass);\n@@ -959,1 +959,1 @@\n-      print_nest_host_error_on(&ss, ref_klass, sel_klass, THREAD);\n+      print_nest_host_error_on(&ss, ref_klass, sel_klass);\n@@ -1251,1 +1251,1 @@\n-                                                     Klass::PrivateLookupMode::find, CHECK);\n+                                                     Klass::PrivateLookupMode::find);\n@@ -1493,1 +1493,1 @@\n-                                                       Klass::PrivateLookupMode::skip, CHECK);\n+                                                       Klass::PrivateLookupMode::skip);\n","filename":"src\/hotspot\/share\/interpreter\/linkResolver.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -214,1 +214,1 @@\n-                                                    Klass::PrivateLookupMode private_mode, TRAPS);\n+                                                    Klass::PrivateLookupMode private_mode);\n","filename":"src\/hotspot\/share\/interpreter\/linkResolver.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -156,3 +156,1 @@\n-\/\/ JVM support\n-\n-jint ArrayKlass::compute_modifier_flags(TRAPS) const {\n+jint ArrayKlass::compute_modifier_flags() const {\n","filename":"src\/hotspot\/share\/oops\/arrayKlass.cpp","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -116,1 +116,1 @@\n-  jint compute_modifier_flags(TRAPS) const;\n+  jint compute_modifier_flags() const;\n","filename":"src\/hotspot\/share\/oops\/arrayKlass.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -392,1 +392,1 @@\n-void InstanceKlass::set_nest_host(InstanceKlass* host, TRAPS) {\n+void InstanceKlass::set_nest_host(InstanceKlass* host) {\n@@ -396,2 +396,2 @@\n-  assert(nest_host_error(THREAD) == NULL, \"unexpected nest host resolution error exists: %s\",\n-         nest_host_error(THREAD));\n+  assert(nest_host_error() == NULL, \"unexpected nest host resolution error exists: %s\",\n+         nest_host_error());\n@@ -404,1 +404,1 @@\n-    ResourceMark rm(THREAD);\n+    ResourceMark rm;\n@@ -455,1 +455,1 @@\n-const char* InstanceKlass::nest_host_error(TRAPS) {\n+const char* InstanceKlass::nest_host_error() {\n@@ -459,1 +459,1 @@\n-    constantPoolHandle cph(THREAD, constants());\n+    constantPoolHandle cph(Thread::current(), constants());\n@@ -3112,1 +3112,1 @@\n-jint InstanceKlass::compute_modifier_flags(TRAPS) const {\n+jint InstanceKlass::compute_modifier_flags() const {\n","filename":"src\/hotspot\/share\/oops\/instanceKlass.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -468,1 +468,1 @@\n-  void set_nest_host(InstanceKlass* host, TRAPS);\n+  void set_nest_host(InstanceKlass* host);\n@@ -489,1 +489,1 @@\n-  const char* nest_host_error(TRAPS);\n+  const char* nest_host_error();\n@@ -1270,2 +1270,1 @@\n-  \/\/ jvm support\n-  jint compute_modifier_flags(TRAPS) const;\n+  jint compute_modifier_flags() const;\n","filename":"src\/hotspot\/share\/oops\/instanceKlass.hpp","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -754,5 +754,0 @@\n-\/\/ Unless overridden, modifier_flags is 0.\n-jint Klass::compute_modifier_flags(TRAPS) const {\n-  return 0;\n-}\n-\n","filename":"src\/hotspot\/share\/oops\/klass.cpp","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -693,2 +693,1 @@\n-  \/\/ jvm support\n-  virtual jint compute_modifier_flags(TRAPS) const;\n+  virtual jint compute_modifier_flags() const = 0;\n","filename":"src\/hotspot\/share\/oops\/klass.hpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -1248,1 +1248,1 @@\n-                                                               Klass::PrivateLookupMode::skip, CHECK);\n+                                                               Klass::PrivateLookupMode::skip);\n","filename":"src\/hotspot\/share\/oops\/klassVtable.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -399,3 +399,1 @@\n-\/\/ JVM support\n-\n-jint ObjArrayKlass::compute_modifier_flags(TRAPS) const {\n+jint ObjArrayKlass::compute_modifier_flags() const {\n@@ -408,1 +406,1 @@\n-  jint element_flags = bottom_klass()->compute_modifier_flags(CHECK_0);\n+  jint element_flags = bottom_klass()->compute_modifier_flags();\n","filename":"src\/hotspot\/share\/oops\/objArrayKlass.cpp","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -157,2 +157,1 @@\n-  \/\/ JVM support\n-  jint compute_modifier_flags(TRAPS) const;\n+  jint compute_modifier_flags() const;\n","filename":"src\/hotspot\/share\/oops\/objArrayKlass.hpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1354,1 +1354,1 @@\n-  debug_only(int computed_modifiers = k->compute_modifier_flags(CHECK_0));\n+  debug_only(int computed_modifiers = k->compute_modifier_flags());\n","filename":"src\/hotspot\/share\/prims\/jvm.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2369,6 +2369,1 @@\n-    result = k->compute_modifier_flags(current_thread);\n-    JavaThread* THREAD = current_thread; \/\/ pass to macros\n-    if (HAS_PENDING_EXCEPTION) {\n-      CLEAR_PENDING_EXCEPTION;\n-      return JVMTI_ERROR_INTERNAL;\n-    };\n+    result = k->compute_modifier_flags();\n@@ -2376,2 +2371,2 @@\n-    \/\/ Reset the deleted  ACC_SUPER bit ( deleted in compute_modifier_flags()).\n-    if(k->is_super()) {\n+    \/\/ Reset the deleted  ACC_SUPER bit (deleted in compute_modifier_flags()).\n+    if (k->is_super()) {\n","filename":"src\/hotspot\/share\/prims\/jvmtiEnv.cpp","additions":3,"deletions":8,"binary":false,"changes":11,"status":"modified"}]}