{"files":[{"patch":"@@ -98,32 +98,0 @@\n-template<>\n-template<typename T>\n-inline T Atomic::PlatformCmpxchg<4>::operator()(T volatile* dest __attribute__((unused)),\n-                                                T compare_value,\n-                                                T exchange_value,\n-                                                atomic_memory_order order) const {\n-  STATIC_ASSERT(4 == sizeof(T));\n-\n-  T old_value;\n-  long rc;\n-\n-  if (order != memory_order_relaxed) {\n-    FULL_MEM_BARRIER;\n-  }\n-\n-  __asm__ __volatile__ (\n-    \"1:  sext.w    %1, %3      \\n\\t\" \/\/ sign-extend compare_value\n-    \"    lr.w      %0, %2      \\n\\t\"\n-    \"    bne       %0, %1, 2f  \\n\\t\"\n-    \"    sc.w      %1, %4, %2  \\n\\t\"\n-    \"    bnez      %1, 1b      \\n\\t\"\n-    \"2:                        \\n\\t\"\n-    : \/*%0*\/\"=&r\" (old_value), \/*%1*\/\"=&r\" (rc), \/*%2*\/\"+A\" (*dest)\n-    : \/*%3*\/\"r\" (compare_value), \/*%4*\/\"r\" (exchange_value)\n-    : \"memory\" );\n-\n-  if (order != memory_order_relaxed) {\n-    FULL_MEM_BARRIER;\n-  }\n-  return old_value;\n-}\n-\n","filename":"src\/hotspot\/os_cpu\/linux_riscv\/atomic_linux_riscv.hpp","additions":0,"deletions":32,"binary":false,"changes":32,"status":"modified"}]}