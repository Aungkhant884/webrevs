{"files":[{"patch":"@@ -590,11 +590,9 @@\n-     * RFC 2253<\/a> string format. otherNames are returned as a byte array\n-     * containing the ASN.1 DER encoded form of the name, and may also return\n-     * a third entry in the list containing its {@code type-id} in string\n-     * format, and a fourth entry as either a string (if {@code value} inside\n-     * is a valid UTF8String, PrintableString, T61String, IA5String,\n-     * UniversalString, BMPString, or GeneralString) or a byte array containing\n-     * the ASN.1 DER encoding of {@code value} without the context-specific\n-     * constructed tag with number 0 (otherwise). No standard string format is\n-     * defined for otherNames, X.400 names, EDI party names, or any\n-     * other type of names. They are returned as byte arrays\n-     * containing the ASN.1 DER encoded form of the name.\n+     * RFC 2253<\/a> string format. No standard string format is defined for\n+     * X.400 names or EDI party names. They are returned as byte arrays\n+     * containing the ASN.1 DER encoded form of the name. otherNames are also\n+     * returned as byte arrays containing the ASN.1 DER encoded form of the\n+     * name. There may be a third entry in the list for their {@code type-id}\n+     * in string form, and a fourth entry for their {@code value} as either\n+     * a string (if the value is a valid supported character string)\n+     * or (otherwise) a byte array containing the ASN.1 DER encoded from of\n+     * the value without the context-specific constructed tag with number 0.\n","filename":"src\/java.base\/share\/classes\/java\/security\/cert\/X509Certificate.java","additions":9,"deletions":11,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -93,1 +93,3 @@\n-        if (!derValue1.isContextSpecific((byte)0) || !derValue1.isConstructed()) {\n+        if (derValue1.isContextSpecific((byte) 0) && derValue1.isConstructed()) {\n+            nameValue = derValue1.data.toByteArray();\n+        } else {\n@@ -96,1 +98,0 @@\n-        nameValue = derValue1.data.toByteArray();\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/OtherName.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -89,3 +89,3 @@\n-            if (san.size() == 4) {\n-                if (san.get(2).equals(\"1.2.3.5\")\n-                        && Arrays.equals((byte[]) san.get(3), d1)) {\n+            if (san.size() >= 4 && san.get(0).equals(0)) {\n+                if (san.get(2).equals(\"1.2.3.5\")) {\n+                    Asserts.assertTrue(Arrays.equals((byte[]) san.get(3), d1));\n@@ -93,3 +93,2 @@\n-                }\n-                if (san.get(2).equals(\"1.2.3.6\")\n-                        && san.get(3).equals(\"a.com\")) {\n+                } else if (san.get(2).equals(\"1.2.3.6\")) {\n+                    Asserts.assertEQ(san.get(3), \"a.com\");\n@@ -100,1 +99,0 @@\n-\n","filename":"test\/jdk\/sun\/security\/x509\/OtherName\/Parse.java","additions":5,"deletions":7,"binary":false,"changes":12,"status":"modified"}]}