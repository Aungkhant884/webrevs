{"files":[{"patch":"@@ -1046,0 +1046,8 @@\n+                    ListBuffer<Name> names = new ListBuffer<>();\n+                    for (Symbol sym = tsym.owner; sym != null && sym.kind == TYP; sym = sym.owner) {\n+                        names.prepend(sym.name);\n+                    }\n+                    for (Name name : names) {\n+                        buf.append(name);\n+                        buf.append(\".\");\n+                    }\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Type.java","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -0,0 +1,67 @@\n+\/*\n+ * Copyright (c) 2022, Google LLC. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8284220\n+ * @summary Tests DeclaredType.toString with type annotations present, for example that '@A\n+ * Map.Entry' is printed as 'java.util.@A Map.Entry' (and not '@A java.util.Map.Entry' or\n+ * 'java.util.@A Entry').\n+ * @library \/tools\/javac\/lib\n+ * @build AnnotatedTypeToString JavacTestingAbstractProcessor ExpectedToString\n+ * @compile -processor AnnotatedTypeToString -proc:only Test.java\n+ *\/\n+\n+import p.ExpectedToString;\n+\n+import java.util.Set;\n+\n+import javax.annotation.processing.RoundEnvironment;\n+import javax.annotation.processing.SupportedAnnotationTypes;\n+import javax.lang.model.element.Element;\n+import javax.lang.model.element.TypeElement;\n+\n+\/**\n+ * Verify that the toString representation of the types of elements annotated with {@code\n+ * ExpectedToString} matches the expected string representation in the annotation.\n+ *\/\n+@SupportedAnnotationTypes(\"p.ExpectedToString\")\n+public class AnnotatedTypeToString extends JavacTestingAbstractProcessor {\n+\n+    @Override\n+    public boolean process(Set<? extends TypeElement> annotations, RoundEnvironment roundEnv) {\n+        if (roundEnv.processingOver()) {\n+            return false;\n+        }\n+        for (Element e : roundEnv.getElementsAnnotatedWith(ExpectedToString.class)) {\n+            String expected = e.getAnnotation(ExpectedToString.class).value();\n+            String actual = e.asType().toString();\n+            if (!expected.equals(actual)) {\n+                processingEnv\n+                        .getMessager()\n+                        .printError(String.format(\"expected: %s, was: %s\", expected, actual), e);\n+            }\n+        }\n+        return false;\n+    }\n+}\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/type\/AnnotatedTypeToString\/AnnotatedTypeToString.java","additions":67,"deletions":0,"binary":false,"changes":67,"status":"added"},{"patch":"@@ -0,0 +1,32 @@\n+\/*\n+ * Copyright (c) 2022, Google LLC. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package p;\n+\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+\n+@Retention(RetentionPolicy.RUNTIME)\n+public @interface ExpectedToString {\n+    String value();\n+}\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/type\/AnnotatedTypeToString\/ExpectedToString.java","additions":32,"deletions":0,"binary":false,"changes":32,"status":"added"},{"patch":"@@ -0,0 +1,58 @@\n+\/*\n+ * Copyright (c) 2022, Google LLC. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package p;\n+\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+import java.lang.annotation.Target;\n+\n+@Retention(RetentionPolicy.RUNTIME)\n+@Target(ElementType.TYPE_USE)\n+@interface A {}\n+\n+public class Test {\n+    static class StaticNested {\n+        static class InnerMostStaticNested {}\n+    }\n+\n+    class Inner {\n+        class InnerMost {}\n+    }\n+\n+    @ExpectedToString(\"p.Test.@p.A StaticNested\")\n+    @A StaticNested i;\n+\n+    @ExpectedToString(\"p.Test.StaticNested.@p.A InnerMostStaticNested\")\n+    StaticNested.@A InnerMostStaticNested j;\n+\n+    @ExpectedToString(\"p.Test.@p.A Inner\")\n+    @A Inner k;\n+\n+    @ExpectedToString(\"p.Test.Inner.@p.A InnerMost\")\n+    Inner.@A InnerMost l;\n+\n+    @ExpectedToString(\"p.Test.@p.A Inner.InnerMost\")\n+    @A Inner.InnerMost m;\n+}\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/type\/AnnotatedTypeToString\/Test.java","additions":58,"deletions":0,"binary":false,"changes":58,"status":"added"}]}