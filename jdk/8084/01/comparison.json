{"files":[{"patch":"@@ -1046,0 +1046,8 @@\n+                    ListBuffer<Name> names = new ListBuffer<>();\n+                    for (Symbol sym = tsym.owner; sym != null && sym.kind == TYP; sym = sym.owner) {\n+                        names.prepend(sym.name);\n+                    }\n+                    for (Name name : names) {\n+                        buf.append(name);\n+                        buf.append(\".\");\n+                    }\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Type.java","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -0,0 +1,86 @@\n+\/*\n+ * Copyright (c) 2022, Google LLC. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8284220\n+ * @summary Tests DeclaredType.toString with type annotations present\n+ * @build NestedTypeToString\n+ * @compile\/ref=NestedTypeToString.out -XDrawDiagnostics -processor p.NestedTypeToString -proc:only NestedTypeToString.java\n+ *\/\n+\n+package p;\n+\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+import java.lang.annotation.Target;\n+import java.util.Set;\n+\n+import javax.annotation.processing.AbstractProcessor;\n+import javax.annotation.processing.RoundEnvironment;\n+import javax.annotation.processing.SupportedAnnotationTypes;\n+import javax.lang.model.SourceVersion;\n+import javax.lang.model.element.Element;\n+import javax.lang.model.element.ElementKind;\n+import javax.lang.model.element.TypeElement;\n+import javax.tools.Diagnostic;\n+\n+@Retention(RetentionPolicy.RUNTIME)\n+@Target(ElementType.TYPE_USE)\n+@interface A {}\n+\n+@SupportedAnnotationTypes(\"*\")\n+public class NestedTypeToString extends AbstractProcessor {\n+\n+    static class Inner {\n+        static class InnerMost {}\n+    }\n+\n+    @A Inner i;\n+    Inner.@A InnerMost j;\n+\n+    @Override\n+    public SourceVersion getSupportedSourceVersion() {\n+        return SourceVersion.latestSupported();\n+    }\n+\n+    @Override\n+    public boolean process(Set<? extends TypeElement> annotations, RoundEnvironment roundEnv) {\n+        if (roundEnv.processingOver()) {\n+            return false;\n+        }\n+        for (Element e :\n+                processingEnv\n+                        .getElementUtils()\n+                        .getTypeElement(\"p.NestedTypeToString\")\n+                        .getEnclosedElements()) {\n+            if (e.getKind().equals(ElementKind.FIELD)) {\n+                processingEnv\n+                        .getMessager()\n+                        .printMessage(Diagnostic.Kind.NOTE, e.asType().toString());\n+            }\n+        }\n+        return false;\n+    }\n+}\n","filename":"test\/langtools\/tools\/javac\/tree\/NestedTypeToString.java","additions":86,"deletions":0,"binary":false,"changes":86,"status":"added"},{"patch":"@@ -0,0 +1,2 @@\n+- compiler.note.proc.messager: p.NestedTypeToString.@p.A Inner\n+- compiler.note.proc.messager: p.NestedTypeToString.Inner.@p.A InnerMost\n","filename":"test\/langtools\/tools\/javac\/tree\/NestedTypeToString.out","additions":2,"deletions":0,"binary":false,"changes":2,"status":"added"}]}