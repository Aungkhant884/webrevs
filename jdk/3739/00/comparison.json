{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+ * @requires vm.flagless\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/TestEnableJVMCIProduct.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,2 @@\n- * @requires vm.jvmci & vm.compMode == \"Xmixed\"\n+ * @requires vm.flagless\n+ * @requires vm.jvmci\n@@ -33,0 +34,1 @@\n+import jdk.test.lib.Asserts;\n@@ -48,7 +50,4 @@\n-        String actualStdout = output.getStdout();\n-        if (!actualStdout.equals(expectStdout)) {\n-            throw new RuntimeException(String.format(\"Invalid STDOUT:%nExpect:%n%s%nActual:%n%s\", expectStdout, actualStdout));\n-        }\n-        if (!output.getStderr().isEmpty()) {\n-            throw new RuntimeException(\"STDERR was not empty: \" + output.getStderr());\n-        }\n+\n+        Asserts.assertEQ(expectStdout, output.getStdout());\n+        output.stderrShouldBeEmpty();\n+\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/TestInvalidJVMCIOption.java","additions":8,"deletions":9,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,2 @@\n- * @requires vm.jvmci & !vm.graal.enabled & vm.compMode == \"Xmixed\"\n+ * @requires vm.flagless\n+ * @requires vm.jvmci\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/TestJVMCIPrintProperties.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -27,0 +27,1 @@\n+ * @requires vm.flagless\n@@ -29,2 +30,1 @@\n- * @build TestInvalidTieredStopAtLevel jdk.test.lib.process.*\n- * @run main TestInvalidTieredStopAtLevel\n+ * @run driver TestInvalidTieredStopAtLevel\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/errors\/TestInvalidTieredStopAtLevel.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}