{"files":[{"patch":"@@ -434,0 +434,1 @@\n+\n@@ -435,1 +436,2 @@\n-  LIBHARFBUZZ_LIBS := $(HARFBUZZ_LIBS)\n+   LIBFONTMANAGER_EXTRA_SRC =\n+   BUILD_LIBFONTMANAGER_FONTLIB += $(LIBHARFBUZZ_LIBS)\n@@ -437,61 +439,30 @@\n-\n-  # This is better than adding EXPORT_ALL_SYMBOLS\n-  ifneq ($(filter $(TOOLCHAIN_TYPE), gcc clang), )\n-    HARFBUZZ_CFLAGS += -DHB_EXTERN=__attribute__\\(\\(visibility\\(\\\"default\\\"\\)\\)\\)\n-  else ifeq ($(TOOLCHAIN_TYPE), microsoft)\n-    HARFBUZZ_CFLAGS += -DHB_EXTERN=__declspec\\(dllexport\\)\n-  endif\n-\n-  ifeq ($(call isTargetOs, windows), false)\n-    HARFBUZZ_CFLAGS += -DGETPAGESIZE -DHAVE_MPROTECT -DHAVE_PTHREAD \\\n-                      -DHAVE_SYSCONF -DHAVE_SYS_MMAN_H -DHAVE_UNISTD_H \\\n-                      -DHB_NO_PRAGMA_GCC_DIAGNOSTIC\n-  endif\n-  ifeq ($(call isTargetOs, linux macosx), true)\n-    HARFBUZZ_CFLAGS += -DHAVE_INTEL_ATOMIC_PRIMITIVES\n-  endif\n-  ifeq ($(call isTargetOs, macosx), true)\n-    HARFBUZZ_CFLAGS += -DHAVE_CORETEXT\n-  endif\n-  ifeq ($(call isTargetOs, macosx), false)\n-    LIBHARFBUZZ_EXCLUDE_FILES += libharfbuzz\/hb-coretext.cc\n-  endif\n-  # hb-ft.cc is not presently needed, and requires freetype 2.4.2 or later.\n-  LIBHARFBUZZ_EXCLUDE_FILES += libharfbuzz\/hb-ft.cc\n-\n-  LIBHARFBUZZ_CFLAGS += $(HARFBUZZ_CFLAGS)\n-\n-  # For use by libfontmanager:\n-  ifeq ($(call isTargetOs, windows), true)\n-    LIBHARFBUZZ_LIBS := $(SUPPORT_OUTPUTDIR)\/native\/$(MODULE)\/libharfbuzz\/harfbuzz.lib\n-  else\n-    LIBHARFBUZZ_LIBS := -lharfbuzz\n-  endif\n-\n-  LIBHARFBUZZ_EXTRA_HEADER_DIRS := \\\n-    libharfbuzz\/hb-ucdn \\\n-    #\n-\n-  LIBHARFBUZZ_OPTIMIZATION := HIGH\n-  # Early re-canonizing has to be disabled to workaround an internal XlC compiler error\n-  # when building libharfbuzz\n-  ifeq ($(call isTargetOs, aix), true)\n-    LIBHARFBUZZ_CFLAGS += -qdebug=necan\n-  endif\n-\n-  LIBHARFBUZZ_CFLAGS += $(X_CFLAGS) -DLE_STANDALONE -DHEADLESS\n-\n-  $(eval $(call SetupJdkLibrary, BUILD_LIBHARFBUZZ, \\\n-      NAME := harfbuzz, \\\n-      EXCLUDE_FILES := $(LIBHARFBUZZ_EXCLUDE_FILES), \\\n-      TOOLCHAIN := TOOLCHAIN_LINK_CXX, \\\n-      CFLAGS := $(CFLAGS_JDKLIB) $(LIBHARFBUZZ_CFLAGS), \\\n-      CXXFLAGS := $(CXXFLAGS_JDKLIB) $(LIBHARFBUZZ_CFLAGS), \\\n-      OPTIMIZATION := $(LIBHARFBUZZ_OPTIMIZATION), \\\n-      CFLAGS_windows = -DCC_NOEX, \\\n-      EXTRA_HEADER_DIRS := $(LIBHARFBUZZ_EXTRA_HEADER_DIRS), \\\n-      WARNINGS_AS_ERRORS_xlc := false, \\\n-      DISABLED_WARNINGS_gcc := type-limits missing-field-initializers strict-aliasing, \\\n-      DISABLED_WARNINGS_CXX_gcc := reorder delete-non-virtual-dtor strict-overflow \\\n-        maybe-uninitialized class-memaccess, \\\n-      DISABLED_WARNINGS_clang := unused-value incompatible-pointer-types \\\n+   LIBFONTMANAGER_EXTRA_SRC = libharfbuzz\n+\n+   ifeq ($(call isTargetOs, windows), false)\n+     HARFBUZZ_CFLAGS += -DGETPAGESIZE -DHAVE_MPROTECT -DHAVE_PTHREAD \\\n+                        -DHAVE_SYSCONF -DHAVE_SYS_MMAN_H -DHAVE_UNISTD_H \\\n+                        -DHB_NO_PRAGMA_GCC_DIAGNOSTIC\n+   endif\n+   ifeq ($(call isTargetOs, linux macosx), true)\n+     HARFBUZZ_CFLAGS += -DHAVE_INTEL_ATOMIC_PRIMITIVES\n+   endif\n+   ifeq ($(call isTargetOs, macosx), true)\n+     HARFBUZZ_CFLAGS += -DHAVE_CORETEXT\n+   endif\n+\n+   # Early re-canonizing has to be disabled to workaround an internal XlC compiler error\n+   # when building libharfbuzz\n+   ifeq ($(call isTargetOs, aix), true)\n+     LIBHARFBUZZ_CFLAGS += -qdebug=necan\n+   endif\n+\n+   ifeq ($(call isTargetOs, macosx), false)\n+     LIBFONTMANAGER_EXCLUDE_FILES += libharfbuzz\/hb-coretext.cc\n+   endif\n+   # hb-ft.cc is not presently needed, and requires freetype 2.4.2 or later.\n+   LIBFONTMANAGER_EXCLUDE_FILES += libharfbuzz\/hb-ft.cc\n+\n+   HARFBUZZ_DISABLED_WARNINGS_gcc := type-limits missing-field-initializers strict-aliasing\n+   HARFBUZZ_DISABLED_WARNINGS_CXX_gcc := reorder delete-non-virtual-dtor strict-overflow \\\n+        maybe-uninitialized class-memaccess\n+   HARFBUZZ_DISABLED_WARNINGS_clang := unused-value incompatible-pointer-types \\\n@@ -499,15 +470,2 @@\n-        undef missing-field-initializers range-loop-analysis, \\\n-      DISABLED_WARNINGS_microsoft := 4267 4244 4090 4146 4334 4819 4101 4068 4805 4138, \\\n-      LDFLAGS := $(LDFLAGS_JDKLIB) \\\n-        $(call SET_SHARED_LIBRARY_ORIGIN), \\\n-      LDFLAGS_unix := -L$(INSTALL_LIBRARIES_HERE), \\\n-      LDFLAGS_aix := -Wl$(COMMA)-berok, \\\n-      LIBS := $(BUILD_LIBHARFBUZZ), \\\n-      LIBS_unix := $(LIBM) $(LIBCXX), \\\n-      LIBS_macosx := -framework CoreText -framework CoreFoundation -framework CoreGraphics, \\\n-      LIBS_windows := user32.lib, \\\n-  ))\n-\n-  ifeq ($(FREETYPE_TO_USE), bundled)\n-    $(BUILD_LIBHARFBUZZ): $(BUILD_LIBFREETYPE)\n-  endif\n+        undef missing-field-initializers range-loop-analysis\n+   HARFBUZZ_DISABLED_WARNINGS_microsoft := 4267 4244 4090 4146 4334 4819 4101 4068 4805 4138\n@@ -515,1 +473,1 @@\n-  TARGETS += $(BUILD_LIBHARFBUZZ)\n+   LIBFONTMANAGER_CFLAGS += $(HARFBUZZ_CFLAGS)\n@@ -519,1 +477,0 @@\n-###########################################################################\n@@ -530,2 +487,2 @@\n-LIBFONTMANAGER_CFLAGS += $(LIBFREETYPE_CFLAGS) $(HARFBUZZ_FLAGS)\n-BUILD_LIBFONTMANAGER_FONTLIB += $(LIBHARFBUZZ_LIBS) $(LIBFREETYPE_LIBS)\n+LIBFONTMANAGER_CFLAGS += $(LIBFREETYPE_CFLAGS)\n+BUILD_LIBFONTMANAGER_FONTLIB +=  $(LIBFREETYPE_LIBS)\n@@ -533,1 +490,1 @@\n-LIBFONTMANAGER_OPTIMIZATION := HIGH\n+LIBFONTMANAGER_OPTIMIZATION := HIGHEST\n@@ -571,0 +528,1 @@\n+    EXTRA_SRC := $(LIBFONTMANAGER_EXTRA_SRC), \\\n@@ -572,0 +530,4 @@\n+    DISABLED_WARNINGS_gcc := $(HARFBUZZ_DISABLED_WARNINGS_gcc), \\\n+    DISABLED_WARNINGS_CXX_gcc := $(HARFBUZZ_DISABLED_WARNINGS_CXX_gcc), \\\n+    DISABLED_WARNINGS_clang := $(HARFBUZZ_DISABLED_WARNINGS_clang), \\\n+    DISABLED_WARNINGS_microsoft := $(HARFBUZZ_DISABLED_WARNINGS_microsoft), \\\n@@ -579,1 +541,1 @@\n-    LIBS_macosx := -lawt_lwawt, \\\n+    LIBS_macosx := -lawt_lwawt -framework CoreText -framework CoreFoundation -framework CoreGraphics, \\\n@@ -586,4 +548,0 @@\n-ifeq ($(USE_EXTERNAL_HARFBUZZ), false)\n-  $(BUILD_LIBFONTMANAGER): $(BUILD_LIBHARFBUZZ)\n-endif\n-\n","filename":"make\/modules\/java.desktop\/lib\/Awt2dLibraries.gmk","additions":45,"deletions":87,"binary":false,"changes":132,"status":"modified"},{"patch":"@@ -56,2 +56,0 @@\n-                   \/* Same for harfbuzz *\/\n-                   System.loadLibrary(\"harfbuzz\");\n","filename":"src\/java.desktop\/share\/classes\/sun\/font\/FontManagerNativeLibrary.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"}]}