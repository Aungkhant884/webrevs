{"files":[{"patch":"@@ -469,1 +469,0 @@\n-            argInfo.targetVMArgs += \"--enable-preview \";\n","filename":"test\/jdk\/com\/sun\/jdi\/TestScaffold.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n- * @run testng\/othervm -XX:+UnlockDiagnosticVMOptions -XX:+ShowHiddenFrames GetStackTrace\n+ * @run main GetStackTrace\n@@ -59,1 +59,1 @@\n-                \/\/ bottom-most frame of virtual thread should be Continuation.enter\n+                \/\/ bottom-most frame of virtual thread should be VirtualThread.run\n@@ -63,1 +63,1 @@\n-                assertEquals(\"enter\", vthreadStack[vthreadStack.length - 1].getMethodName());\n+                assertEquals(\"run\", vthreadStack[vthreadStack.length - 1].getMethodName());\n","filename":"test\/jdk\/java\/lang\/Thread\/virtual\/GetStackTrace.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1,63 +0,0 @@\n-\/*\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package jdk.internal.event;\n-\n-\/**\n- * VirtualThreadPinnedEvent to optionally throw OOME at create, begin or commit time.\n- *\/\n-public class VirtualThreadPinnedEvent {\n-    private static boolean throwOnCreate;\n-    private static boolean throwOnBegin;\n-    private static boolean throwOnCommit;\n-\n-    public static void setCreateThrows(boolean value) {\n-        throwOnCreate = value;\n-    }\n-\n-    public static void setBeginThrows(boolean value) {\n-        throwOnBegin = value;\n-    }\n-\n-    public static void setCommitThrows(boolean value) {\n-        throwOnCommit = value;\n-    }\n-\n-    public VirtualThreadPinnedEvent() {\n-        if (throwOnCreate) {\n-            throw new OutOfMemoryError();\n-        }\n-    }\n-\n-    public void begin() {\n-        if (throwOnBegin) {\n-            throw new OutOfMemoryError();\n-        }\n-    }\n-\n-    public void commit() {\n-        if (throwOnCommit) {\n-            throw new OutOfMemoryError();\n-        }\n-    }\n-}\n","filename":"test\/jdk\/jdk\/incubator\/concurrent\/StructuredTaskScope\/PreviewFeaturesNotEnabled.java","additions":0,"deletions":63,"binary":false,"changes":63,"status":"deleted"}]}