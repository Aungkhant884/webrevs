{"files":[{"patch":"@@ -805,1 +805,1 @@\n-     * a stack trace should be printed when a virtual threads sets a thread local.\n+     * a stack trace should be printed when a virtual thread sets a thread local.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/ThreadLocal.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/GetSetLocalTest\/GetSetLocalTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n","filename":"test\/jdk\/com\/sun\/jdi\/SuspendAfterDeath.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n-public class ThreadSleepEvent {\n+public class ThreadSleepEvent extends Event {\n@@ -58,0 +58,1 @@\n+    @Override\n@@ -64,0 +65,1 @@\n+    @Override\n","filename":"test\/jdk\/java\/lang\/Thread\/java.base\/jdk\/internal\/event\/ThreadSleepEvent.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -52,1 +52,1 @@\n-        assertContains(output, \"java.lang.ThreadLocal.get\");\n+        assertContains(output, \"java.lang.ThreadLocal.setInitialValue\");\n","filename":"test\/jdk\/java\/lang\/Thread\/virtual\/TraceVirtualThreadLocals.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n","filename":"test\/jdk\/java\/lang\/Thread\/virtual\/YieldQueuing.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n-public class VirtualThreadPinnedEvent {\n+public class VirtualThreadPinnedEvent extends Event {\n@@ -52,0 +52,1 @@\n+    @Override\n@@ -58,0 +59,1 @@\n+    @Override\n","filename":"test\/jdk\/java\/lang\/Thread\/virtual\/java.base\/jdk\/internal\/event\/VirtualThreadPinnedEvent.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n","filename":"test\/jdk\/java\/lang\/management\/ThreadMXBean\/VirtualThreadDeadlocks.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n","filename":"test\/jdk\/jdk\/jfr\/jvm\/TestVirtualThreadExclusion.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}