{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,0 @@\n-import java.util.stream.Collectors;\n@@ -149,0 +148,1 @@\n+    @SuppressWarnings(\"unchecked\")\n@@ -164,0 +164,2 @@\n+        boolean hasMacAppStore = (bundlerArguments.get(\n+                Arguments.CLIOptions.MAC_APP_STORE.getId()) != null);\n@@ -276,0 +278,39 @@\n+\n+\n+        if (hasMacAppStore) {\n+            \/\/ Validate jlink-options if mac-app-store is set\n+            Object jlinkOptions = bundlerArguments.get(\n+                    Arguments.CLIOptions.JLINK_OPTIONS.getId());\n+            if (jlinkOptions instanceof List) {\n+                List<String> options = (List<String>) jlinkOptions;\n+                if (!options.contains(\"--strip-native-commands\")) {\n+                    throw new PackagerException(\n+                            \"ERR_MissingJLinkOptMacAppStore\",\n+                            \"--strip-native-commands\");\n+                }\n+            }\n+\n+            \/\/ Validate runtime if mac-app-store is set. Predefined runtime\n+            \/\/ should not contain \"bin\" folder.\n+            runtime = (String)bundlerArguments.get(\n+                    Arguments.CLIOptions.PREDEFINED_RUNTIME_IMAGE.getId());\n+            if (runtime != null) {\n+                \/\/ Should exist from check above if not null\n+                Path topImage = Path.of(runtime);\n+\n+                \/\/ On Mac topImage can be runtime root or runtime home.\n+                Path runtimeHome = topImage.resolve(\"Contents\/Home\");\n+                if (Files.isDirectory(runtimeHome)) {\n+                    \/\/ topImage references runtime root, adjust it to pick data\n+                    \/\/ from runtime home\n+                    topImage = runtimeHome;\n+                }\n+\n+                Path runtimeBin = topImage.resolve(\"bin\");\n+                if (Files.isDirectory(runtimeBin)) {\n+                    throw new PackagerException(\n+                            \"ERR_MacAppStoreRuntimeBinExists\",\n+                            topImage.toAbsolutePath().toString());\n+                }\n+            }\n+        }\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/DeployParams.java","additions":43,"deletions":2,"binary":false,"changes":45,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -112,0 +112,2 @@\n+ERR_MissingJLinkOptMacAppStore=Error: --mac-app-store argument requires a {0} option for --jlink-options argument\n+ERR_MacAppStoreRuntimeBinExists=Error: Runtime image \"{0}\" should not contain \"bin\" folder. Use --strip-native-commands jlink option when generating runtime image used with --mac-app-store argument.\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/resources\/MainResources.properties","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -111,0 +111,2 @@\n+ERR_MissingJLinkOptMacAppStore=Error: --mac-app-store argument requires a {0} option for --jlink-options argument\n+ERR_MacAppStoreRuntimeBinExists=Error: Runtime image \"{0}\" should not contain \"bin\" folder. Use --strip-native-commands jlink option when generating runtime image used with --mac-app-store argument.\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/resources\/MainResources_de.properties","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -111,0 +111,2 @@\n+ERR_MissingJLinkOptMacAppStore=Error: --mac-app-store argument requires a {0} option for --jlink-options argument\n+ERR_MacAppStoreRuntimeBinExists=Error: Runtime image \"{0}\" should not contain \"bin\" folder. Use --strip-native-commands jlink option when generating runtime image used with --mac-app-store argument.\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/resources\/MainResources_ja.properties","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -111,0 +111,2 @@\n+ERR_MissingJLinkOptMacAppStore=Error: --mac-app-store argument requires a {0} option for --jlink-options argument\n+ERR_MacAppStoreRuntimeBinExists=Error: Runtime image \"{0}\" should not contain \"bin\" folder. Use --strip-native-commands jlink option when generating runtime image used with --mac-app-store argument.\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/resources\/MainResources_zh_CN.properties","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -0,0 +1,64 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import jdk.jpackage.test.JPackageCommand;\n+import jdk.jpackage.test.Annotations.Test;\n+\n+\/**\n+ * Tests generation of app image with --mac-app-store and --jlink-options. jpackage should able\n+ * to generate app image if \"--strip-native-commands\" is specified for --jlink-options and should\n+ * fail if it is not specified.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @summary jpackage with --mac-app-store and --jlink-options\n+ * @library ..\/helpers\n+ * @library \/test\/lib\n+ * @build jdk.jpackage.test.*\n+ * @build MacAppStoreJLinkOptionsTest\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n+ * @requires (os.family == \"mac\")\n+ * @run main\/othervm -Xmx512m jdk.jpackage.test.Main\n+ *  --jpt-run=MacAppStoreJLinkOptionsTest\n+ *\/\n+public class MacAppStoreJLinkOptionsTest {\n+\n+    @Test\n+    public static void test() throws Exception {\n+        JPackageCommand cmd = JPackageCommand.helloAppImage();\n+        cmd.addArguments(\"--mac-app-store\", \"--jlink-options\",\n+                \"--strip-debug --no-man-pages --no-header-files --strip-native-commands\");\n+\n+        cmd.executeAndAssertHelloAppImageCreated();\n+    }\n+\n+    @Test\n+    public static void test2() throws Exception {\n+        JPackageCommand cmd = JPackageCommand.helloAppImage();\n+        cmd.addArguments(\"--mac-app-store\", \"--jlink-options\",\n+                \"--strip-debug --no-man-pages --no-header-files\");\n+\n+        cmd.execute(1);\n+    }\n+}\n","filename":"test\/jdk\/tools\/jpackage\/macosx\/MacAppStoreJlinkOptionsTest.java","additions":64,"deletions":0,"binary":false,"changes":64,"status":"added"},{"patch":"@@ -0,0 +1,103 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import jdk.jpackage.test.JPackageCommand;\n+import jdk.jpackage.test.Executor;\n+import jdk.jpackage.test.TKit;\n+import jdk.jpackage.test.JavaTool;\n+import jdk.jpackage.test.Annotations.Test;\n+\n+\n+\/**\n+ * Tests generation of app image with --mac-app-store and --runtime-image. jpackage should able\n+ * to generate app image if runtime image does not have \"bin\" folder and fail otherwise.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @summary jpackage with --mac-app-store and --runtime-image\n+ * @library ..\/helpers\n+ * @library \/test\/lib\n+ * @build jdk.jpackage.test.*\n+ * @build MacAppStoreRuntimeTest\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n+ * @requires (os.family == \"mac\")\n+ * @run main\/othervm -Xmx512m jdk.jpackage.test.Main\n+ *  --jpt-run=MacAppStoreRuntimeTest\n+ *\/\n+public class MacAppStoreRuntimeTest {\n+\n+    private static String getRuntimeImage(boolean stripNativeCommands) throws IOException {\n+        final Path workDir = TKit.createTempDirectory(\"runtime\").resolve(\"data\");\n+        final Path jlinkOutputDir = workDir.resolve(\"temp.runtime\");\n+        Files.createDirectories(jlinkOutputDir.getParent());\n+\n+        \/\/ List of modules required for test app.\n+        final var modules = new String[] {\n+            \"java.base\",\n+            \"java.desktop\"\n+        };\n+\n+        List<String> jlinkArgs = new ArrayList<>();\n+        jlinkArgs.add(\"--output\");\n+        jlinkArgs.add(jlinkOutputDir.toString());\n+        jlinkArgs.add(\"--add-modules\");\n+        jlinkArgs.add(String.join(\",\", modules));\n+        jlinkArgs.add(\"--strip-debug\");\n+        jlinkArgs.add(\"--no-header-files\");\n+        jlinkArgs.add(\"--no-man-pages\");\n+        if (stripNativeCommands) {\n+            jlinkArgs.add(\"--strip-native-commands\");\n+        }\n+\n+        new Executor()\n+                .setToolProvider(JavaTool.JLINK)\n+                .dumpOutput()\n+                .addArguments(jlinkArgs)\n+                .execute();\n+\n+        return jlinkOutputDir.toString();\n+    }\n+\n+    @Test\n+    public static void test() throws Exception {\n+        JPackageCommand cmd = JPackageCommand.helloAppImage();\n+        cmd.addArguments(\"--mac-app-store\", \"--runtime-image\", getRuntimeImage(true));\n+\n+        cmd.executeAndAssertHelloAppImageCreated();\n+    }\n+\n+    @Test\n+    public static void test2() throws Exception {\n+        JPackageCommand cmd = JPackageCommand.helloAppImage();\n+        cmd.addArguments(\"--mac-app-store\", \"--runtime-image\", getRuntimeImage(false));\n+\n+        cmd.execute(1);\n+    }\n+}\n","filename":"test\/jdk\/tools\/jpackage\/macosx\/MacAppStoreRuntimeTest.java","additions":103,"deletions":0,"binary":false,"changes":103,"status":"added"}]}