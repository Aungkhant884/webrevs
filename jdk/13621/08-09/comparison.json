{"files":[{"patch":"@@ -47,1 +47,0 @@\n-import java.util.Properties;\n@@ -54,1 +53,1 @@\n-    static CountDownLatch go = new CountDownLatch(1);\n+    static final CountDownLatch go = new CountDownLatch(1);\n@@ -56,1 +55,0 @@\n-    Robot robot;\n@@ -90,1 +88,0 @@\n-        robot = new Robot();\n@@ -95,1 +92,1 @@\n-            robot.delay(1000);\n+            Robot robot = new Robot();\n@@ -97,0 +94,1 @@\n+            robot.delay(1000);\n@@ -125,1 +123,1 @@\n-                point = pane.getLocationOnScreen();\n+                p = pane.getLocationOnScreen();\n@@ -127,2 +125,1 @@\n-                point.x += d.width \/ 2;\n-                point.y += d.height \/ 2;\n+                point = new Point(p.x += d.width \/ 2, p.y += d.height \/ 2);\n@@ -133,1 +130,0 @@\n-            robot.waitForIdle();\n","filename":"test\/jdk\/java\/awt\/ScrollPane\/ScrollPaneLimitation.java","additions":5,"deletions":9,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -49,1 +49,0 @@\n-    Robot robot;\n@@ -77,0 +76,1 @@\n+            frame.setAlwaysOnTop(true);\n@@ -79,1 +79,0 @@\n-        robot = new Robot();\n@@ -84,0 +83,1 @@\n+            Robot robot = new Robot();\n@@ -91,1 +91,0 @@\n-            robot.delay(1000);\n@@ -93,0 +92,2 @@\n+            robot.delay(1000);\n+\n@@ -100,1 +101,0 @@\n-            robot.delay(50);\n@@ -113,37 +113,0 @@\n-\n-    private static class Semaphore {\n-        volatile boolean state = false;\n-        final Object lock = new Object();\n-        volatile int waiting = 0;\n-\n-        public Semaphore() {\n-        }\n-\n-        public void doWait(int timeout) throws InterruptedException {\n-            synchronized (lock) {\n-                if (state) {\n-                    return;\n-                }\n-                waiting++;\n-                synchronized (this) {\n-                    wait(timeout);\n-                }\n-                waiting--;\n-            }\n-        }\n-\n-        public void raise() {\n-            synchronized (lock) {\n-                state = true;\n-                if (waiting > 0) {\n-                    synchronized (this) {\n-                        notifyAll();\n-                    }\n-                }\n-            }\n-        }\n-\n-        public synchronized boolean getState() {\n-            return state;\n-        }\n-    }\n","filename":"test\/jdk\/java\/awt\/ScrollPane\/ScrollPaneRemoveAdd.java","additions":4,"deletions":41,"binary":false,"changes":45,"status":"modified"},{"patch":"@@ -47,1 +47,1 @@\n-public class ScrollPaneWindowsTest implements AdjustmentListener {\n+public class ScrollPaneWindowsTest {\n@@ -76,0 +76,20 @@\n+            vScroll.addAdjustmentListener(new AdjustmentListener() {\n+                @Override\n+                public void adjustmentValueChanged(AdjustmentEvent adjustmentEvent) {\n+                    synchronized (ScrollPaneWindowsTest.LOCK) {\n+                        notifyReceived = true;\n+                        ScrollPaneWindowsTest.LOCK.notify();\n+                    }\n+                    System.out.println(\"Adjustment Vertical Scroll Event called \");\n+                }\n+            });\n+            hScroll.addAdjustmentListener(new AdjustmentListener() {\n+                @Override\n+                public void adjustmentValueChanged(AdjustmentEvent adjustmentEvent) {\n+                    synchronized (ScrollPaneWindowsTest.LOCK) {\n+                        notifyReceived = true;\n+                        ScrollPaneWindowsTest.LOCK.notify();\n+                    }\n+                    System.out.println(\"Adjustment Horizontal Scroll Event called \");\n+                }\n+            });\n@@ -85,3 +105,0 @@\n-\n-        vScroll.addAdjustmentListener(this);\n-        hScroll.addAdjustmentListener(this);\n@@ -134,1 +151,0 @@\n-        notifyReceived = false;\n@@ -136,0 +152,1 @@\n+            notifyReceived = false;\n@@ -154,0 +171,1 @@\n+            notifyReceived = false;\n@@ -157,1 +175,0 @@\n-        notifyReceived = false;\n@@ -182,8 +199,0 @@\n-\n-    public void adjustmentValueChanged(AdjustmentEvent e) {\n-        synchronized (ScrollPaneWindowsTest.LOCK) {\n-            notifyReceived = true;\n-            ScrollPaneWindowsTest.LOCK.notify();\n-        }\n-        System.out.println(\"Adjustment Event called \");\n-    }\n","filename":"test\/jdk\/java\/awt\/ScrollPane\/ScrollPaneWindowsTest.java","additions":23,"deletions":14,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -52,0 +52,1 @@\n+\n@@ -53,19 +54,17 @@\n-        try {\n-            EventQueue.invokeAndWait(() -> {\n-                pa = new Panel();\n-                pa.setSize(600, 50);\n-                pa.setPreferredSize(new Dimension(600, 50));\n-                pa.setBackground(Color.red);\n-                sp = new ScrollPane(ScrollPane.SCROLLBARS_NEVER);\n-                sp.setSize(200, 50);\n-                pa.setLayout(new GridLayout(1, 3));\n-                pa.add(\"West\", new Label(\"west\", Label.LEFT));\n-                pa.add(\"West\", new Label());\n-                pa.add(\"East\", new Label(\"East\", Label.RIGHT));\n-                sp.add(pa);\n-                frame = new Frame(\"ScrollPositionIntact\");\n-                frame.setSize(200, 100);\n-                frame.add(sp);\n-                frame.setVisible(true);\n-            });\n-        }\n+        EventQueue.invokeAndWait(() -> {\n+            pa = new Panel();\n+            pa.setSize(600, 50);\n+            pa.setPreferredSize(new Dimension(600, 50));\n+            pa.setBackground(Color.red);\n+            sp = new ScrollPane(ScrollPane.SCROLLBARS_NEVER);\n+            sp.setSize(200, 50);\n+            pa.setLayout(new GridLayout(1, 3));\n+            pa.add(\"West\", new Label(\"west\", Label.LEFT));\n+            pa.add(\"West\", new Label());\n+            pa.add(\"East\", new Label(\"East\", Label.RIGHT));\n+            sp.add(pa);\n+            frame = new Frame(\"ScrollPositionIntact\");\n+            frame.setSize(200, 100);\n+            frame.add(sp);\n+            frame.setVisible(true);\n+        });\n","filename":"test\/jdk\/java\/awt\/ScrollPane\/ScrollPositionIntact.java","additions":18,"deletions":19,"binary":false,"changes":37,"status":"modified"}]}