{"files":[{"patch":"@@ -70,1 +70,0 @@\n-            robot.delay(100);\n@@ -72,0 +71,1 @@\n+            robot.delay(100);\n@@ -80,1 +80,0 @@\n-            robot.delay(1000);\n@@ -82,0 +81,1 @@\n+            robot.delay(1000);\n","filename":"test\/jdk\/java\/awt\/ScrollPane\/ScrollPaneExtraScrollBar.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -125,1 +125,1 @@\n-                point = new Point(p.x += d.width \/ 2, p.y += d.height \/ 2);\n+                point = new Point(p.x + d.width \/ 2, p.y + d.height \/ 2);\n","filename":"test\/jdk\/java\/awt\/ScrollPane\/ScrollPaneLimitation.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -83,1 +83,0 @@\n-            Robot robot = new Robot();\n@@ -91,0 +90,1 @@\n+            Robot robot = new Robot();\n","filename":"test\/jdk\/java\/awt\/ScrollPane\/ScrollPaneRemoveAdd.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -47,1 +47,1 @@\n-public class ScrollPaneWindowsTest {\n+public class ScrollPaneWindowsTest implements AdjustmentListener {\n@@ -76,20 +76,2 @@\n-            vScroll.addAdjustmentListener(new AdjustmentListener() {\n-                @Override\n-                public void adjustmentValueChanged(AdjustmentEvent adjustmentEvent) {\n-                    synchronized (ScrollPaneWindowsTest.LOCK) {\n-                        notifyReceived = true;\n-                        ScrollPaneWindowsTest.LOCK.notify();\n-                    }\n-                    System.out.println(\"Adjustment Vertical Scroll Event called \");\n-                }\n-            });\n-            hScroll.addAdjustmentListener(new AdjustmentListener() {\n-                @Override\n-                public void adjustmentValueChanged(AdjustmentEvent adjustmentEvent) {\n-                    synchronized (ScrollPaneWindowsTest.LOCK) {\n-                        notifyReceived = true;\n-                        ScrollPaneWindowsTest.LOCK.notify();\n-                    }\n-                    System.out.println(\"Adjustment Horizontal Scroll Event called \");\n-                }\n-            });\n+            vScroll.addAdjustmentListener(ScrollPaneWindowsTest.this);\n+            hScroll.addAdjustmentListener(ScrollPaneWindowsTest.this);\n@@ -114,1 +96,0 @@\n-            robot.delay(100);\n@@ -116,0 +97,2 @@\n+            robot.delay(100);\n+\n@@ -124,1 +107,0 @@\n-            robot.delay(100);\n@@ -126,0 +108,1 @@\n+            robot.delay(100);\n@@ -148,1 +131,0 @@\n-        robot.delay(2000);\n@@ -150,0 +132,1 @@\n+        robot.delay(2000);\n@@ -177,1 +160,0 @@\n-        robot.delay(2000);\n@@ -179,0 +161,1 @@\n+        robot.delay(2000);\n@@ -199,0 +182,9 @@\n+\n+    @Override\n+    public void adjustmentValueChanged(AdjustmentEvent adjustmentEvent) {\n+        synchronized (ScrollPaneWindowsTest.LOCK) {\n+            notifyReceived = true;\n+            ScrollPaneWindowsTest.LOCK.notify();\n+        }\n+        System.out.println(\"Adjustment Event called \");\n+    }\n","filename":"test\/jdk\/java\/awt\/ScrollPane\/ScrollPaneWindowsTest.java","additions":17,"deletions":25,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -76,1 +76,0 @@\n-            robot.delay(1000);\n@@ -78,0 +77,1 @@\n+            robot.delay(1000);\n","filename":"test\/jdk\/java\/awt\/ScrollPane\/ScrollPositionIntact.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}