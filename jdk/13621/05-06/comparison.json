{"files":[{"patch":"@@ -42,2 +42,0 @@\n-import java.lang.reflect.InvocationTargetException;\n-\n@@ -87,1 +85,1 @@\n-            Thread.sleep(5000);\n+            Thread.sleep(1000);\n","filename":"test\/jdk\/java\/awt\/ScrollPane\/ComponentScrollTest.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -52,2 +52,1 @@\n-    final static int SCROLL_POS = 50000;\n-    public static boolean mouseWasPressed = false;\n+    static final int SCROLL_POS = 50000;\n@@ -55,1 +54,0 @@\n-    private final Object lock = new Object();\n@@ -59,1 +57,1 @@\n-    Point p;\n+    volatile Point point;\n@@ -84,8 +82,5 @@\n-                        if (e.getID() == MouseEvent.MOUSE_PRESSED &&\n-                                e.getSource() == ScrollPaneLimitation.child\n-                                && e.getY() > SCROLL_POS) {\n-                            mouseWasPressed = true;\n-                            synchronized (lock) {\n-                                lock.notify();\n-                            }\n-                        }\n+                    if (e.getID() == MouseEvent.MOUSE_PRESSED\n+                            && e.getSource() == ScrollPaneLimitation.child\n+                            && e.getY() > SCROLL_POS) {\n+                        go.countDown();\n+                    }\n@@ -106,1 +101,1 @@\n-                p = child.getLocation();\n+                Point p = child.getLocation();\n@@ -132,1 +127,1 @@\n-                p = pane.getLocationOnScreen();\n+                point = pane.getLocationOnScreen();\n@@ -134,2 +129,2 @@\n-                p.x += d.width \/ 2;\n-                p.y += d.height \/ 2;\n+                point.x += d.width \/ 2;\n+                point.y += d.height \/ 2;\n@@ -137,1 +132,1 @@\n-            robot.mouseMove(p.x, p.y);\n+            robot.mouseMove(point.x, point.y);\n@@ -141,2 +136,2 @@\n-            go.await(3, TimeUnit.SECONDS);\n-            if (!mouseWasPressed) {\n+\n+            if (!go.await(3, TimeUnit.SECONDS)) {\n","filename":"test\/jdk\/java\/awt\/ScrollPane\/ScrollPaneLimitation.java","additions":14,"deletions":19,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-import java.awt.BorderLayout;\n@@ -39,1 +38,0 @@\n-import java.awt.Toolkit;\n@@ -44,0 +42,2 @@\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.TimeUnit;\n@@ -48,1 +48,0 @@\n-    Semaphore actionSema;\n@@ -53,0 +52,1 @@\n+    volatile CountDownLatch latch;\n@@ -63,1 +63,0 @@\n-\n@@ -66,0 +65,2 @@\n+            latch = new CountDownLatch(1);\n+\n@@ -68,1 +69,1 @@\n-            actionSema = new Semaphore();\n+\n@@ -71,1 +72,1 @@\n-                    actionSema.raise();\n+                    latch.countDown();\n@@ -100,9 +101,1 @@\n-            robot.waitForIdle();\n-            try {\n-                actionSema.doWait(1000);\n-            } catch (Exception ie) {\n-                throw new RuntimeException(\"My sleep was interrupted\");\n-            }\n-            robot.delay(50);\n-            robot.waitForIdle();\n-            if (!actionSema.getState()) {\n+            if (!latch.await(1, TimeUnit.SECONDS)) {\n","filename":"test\/jdk\/java\/awt\/ScrollPane\/ScrollPaneRemoveAdd.java","additions":8,"deletions":15,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -57,0 +57,2 @@\n+    volatile int xPos = 0;\n+    volatile int yPos = 0;\n@@ -96,0 +98,4 @@\n+            EventQueue.invokeAndWait(() -> {\n+                xPos = sp.getLocationOnScreen().x + sp.getWidth() - paneInsets.right \/ 2;\n+                yPos = sp.getLocationOnScreen().y + sp.getHeight() \/ 2;\n+            });\n@@ -97,2 +103,1 @@\n-            robot.mouseMove(sp.getLocationOnScreen().x + sp.getWidth() - paneInsets.right \/ 2,\n-                    sp.getLocationOnScreen().y + sp.getHeight() \/ 2);\n+            robot.mouseMove(xPos, yPos);\n@@ -104,2 +109,6 @@\n-            robot.mouseMove(sp.getLocationOnScreen().x + sp.getWidth() \/ 2,\n-                    sp.getLocationOnScreen().y + sp.getHeight() - paneInsets.bottom \/ 2);\n+            EventQueue.invokeAndWait(() -> {\n+                xPos = sp.getLocationOnScreen().x + sp.getWidth() \/ 2;\n+                yPos = sp.getLocationOnScreen().y + sp.getHeight() - paneInsets.bottom \/ 2;\n+            });\n+\n+            robot.mouseMove(xPos, yPos);\n@@ -118,27 +127,11 @@\n-        try {\n-            \/\/to Bottom  - right\n-            robot.mousePress(InputEvent.BUTTON3_DOWN_MASK);\n-            robot.mouseRelease(InputEvent.BUTTON3_DOWN_MASK);\n-            robot.delay(2000);\n-            robot.waitForIdle();\n-\n-            notifyReceived = false;\n-            synchronized (LOCK) {\n-                for (int i = 0; i < 3; i++) {\n-                    robot.keyPress(KeyEvent.VK_DOWN);\n-                    robot.keyRelease(KeyEvent.VK_DOWN);\n-                }\n-                robot.keyPress(KeyEvent.VK_ENTER);\n-                robot.keyRelease(KeyEvent.VK_ENTER);\n-                if (!notifyReceived) {\n-                    System.out.println(\"we are waiting 1\");\n-                    LOCK.wait(2000);\n-                }\n-                if (scroll.getValue() + scroll.getVisibleAmount() != scroll.getMaximum()) {\n-                    System.out.println(\"scroll.getValue() = \" + scroll.getValue());\n-                    System.out.println(\"scroll.getVisibleAmount() = \" + scroll.getVisibleAmount());\n-                    System.out.println(\"scroll.getMaximum() = \" + scroll.getMaximum());\n-                    throw new RuntimeException(\"Test Failed. Position of scrollbar is incorrect.\");\n-                } else {\n-                    System.out.println(\"Test stage 1 passed.\");\n-                }\n+        \/\/to Bottom  - right\n+        robot.mousePress(InputEvent.BUTTON3_DOWN_MASK);\n+        robot.mouseRelease(InputEvent.BUTTON3_DOWN_MASK);\n+        robot.delay(2000);\n+        robot.waitForIdle();\n+\n+        notifyReceived = false;\n+        synchronized (LOCK) {\n+            for (int i = 0; i < 3; i++) {\n+                robot.keyPress(KeyEvent.VK_DOWN);\n+                robot.keyRelease(KeyEvent.VK_DOWN);\n@@ -146,0 +139,15 @@\n+            robot.keyPress(KeyEvent.VK_ENTER);\n+            robot.keyRelease(KeyEvent.VK_ENTER);\n+            if (!notifyReceived) {\n+                System.out.println(\"we are waiting 1\");\n+                LOCK.wait(2000);\n+            }\n+            if (scroll.getValue() + scroll.getVisibleAmount() != scroll.getMaximum()) {\n+                System.out.println(\"scroll.getValue() = \" + scroll.getValue());\n+                System.out.println(\"scroll.getVisibleAmount() = \" + scroll.getVisibleAmount());\n+                System.out.println(\"scroll.getMaximum() = \" + scroll.getMaximum());\n+                throw new RuntimeException(\"Test Failed. Position of scrollbar is incorrect.\");\n+            } else {\n+                System.out.println(\"Test stage 1 passed.\");\n+            }\n+        }\n@@ -147,24 +155,23 @@\n-            \/\/to top-left\n-            notifyReceived = false;\n-            robot.mousePress(InputEvent.BUTTON3_DOWN_MASK);\n-            robot.mouseRelease(InputEvent.BUTTON3_DOWN_MASK);\n-            robot.delay(2000);\n-            robot.waitForIdle();\n-\n-            synchronized (LOCK) {\n-                for (int i = 0; i < 2; i++) {\n-                    robot.keyPress(KeyEvent.VK_DOWN);\n-                    robot.keyRelease(KeyEvent.VK_DOWN);\n-                }\n-                robot.keyPress(KeyEvent.VK_ENTER);\n-                robot.keyRelease(KeyEvent.VK_ENTER);\n-                if (!notifyReceived) {\n-                    System.out.println(\"we are waiting 2\");\n-                    LOCK.wait(2000);\n-                }\n-                if (scroll.getValue() != 0) {\n-                    System.out.println(\"scroll.getValue() = \" + scroll.getValue());\n-                    throw new RuntimeException(\"Test Failed. Position of scrollbar is incorrect.\");\n-                } else {\n-                    System.out.println(\"Test stage 2 passed.\");\n-                }\n+        \/\/to top-left\n+        notifyReceived = false;\n+        robot.mousePress(InputEvent.BUTTON3_DOWN_MASK);\n+        robot.mouseRelease(InputEvent.BUTTON3_DOWN_MASK);\n+        robot.delay(2000);\n+        robot.waitForIdle();\n+\n+        synchronized (LOCK) {\n+            for (int i = 0; i < 2; i++) {\n+                robot.keyPress(KeyEvent.VK_DOWN);\n+                robot.keyRelease(KeyEvent.VK_DOWN);\n+            }\n+            robot.keyPress(KeyEvent.VK_ENTER);\n+            robot.keyRelease(KeyEvent.VK_ENTER);\n+            if (!notifyReceived) {\n+                System.out.println(\"we are waiting 2\");\n+                LOCK.wait(2000);\n+            }\n+            if (scroll.getValue() != 0) {\n+                System.out.println(\"scroll.getValue() = \" + scroll.getValue());\n+                throw new RuntimeException(\"Test Failed. Position of scrollbar is incorrect.\");\n+            } else {\n+                System.out.println(\"Test stage 2 passed.\");\n@@ -172,2 +179,0 @@\n-        } catch (InterruptedException e) {\n-            throw new RuntimeException(\"Test interrupted while keys being pressed.\", e);\n@@ -178,1 +183,0 @@\n-        notifyReceived = true;\n@@ -180,0 +184,1 @@\n+            notifyReceived = true;\n","filename":"test\/jdk\/java\/awt\/ScrollPane\/ScrollPaneWindowsTest.java","additions":63,"deletions":58,"binary":false,"changes":121,"status":"modified"},{"patch":"@@ -71,0 +71,1 @@\n+\n@@ -74,0 +75,1 @@\n+\n","filename":"test\/jdk\/java\/awt\/ScrollPane\/ScrollPositionIntact.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"}]}