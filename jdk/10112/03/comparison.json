{"files":[{"patch":"@@ -1278,2 +1278,4 @@\n-                ENGINE.paintFlatBox(g, context, id, gtkState, ShadowType.NONE,\n-                        \"cell_odd\", x, y, w, h, ColorType.TEXT_BACKGROUND);\n+                if (context.getComponent().isOpaque()) {\n+                    ENGINE.paintFlatBox(g, context, id, gtkState, ShadowType.NONE,\n+                            \"cell_odd\", x, y, w, h, ColorType.TEXT_BACKGROUND);\n+                }\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/java\/swing\/plaf\/gtk\/GTKPainter.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -0,0 +1,111 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8287912\n+ * @key headful\n+ * @requires (os.family == \"linux\")\n+ * @summary Verifies if tree background color is red when\n+ * setOpaque(false) method is called for tree component\n+ * @run main TestTreeBackgroundColor\n+ *\/\n+\n+import java.awt.Color;\n+import java.awt.GridLayout;\n+import java.awt.Point;\n+import java.awt.Rectangle;\n+import java.awt.Robot;\n+import java.awt.image.BufferedImage;\n+import java.io.File;\n+import javax.imageio.ImageIO;\n+import javax.swing.JFrame;\n+import javax.swing.JPanel;\n+import javax.swing.JTree;\n+import javax.swing.SwingUtilities;\n+import javax.swing.UIManager;\n+\n+public class TestTreeBackgroundColor {\n+\n+    private static JFrame frame;\n+    private static JPanel panel;\n+    private static JTree tree;\n+\n+    public static void main(String[] args) throws Exception {\n+        UIManager.setLookAndFeel(\"com.sun.java.swing.plaf.gtk.GTKLookAndFeel\");\n+        Robot robot = new Robot();\n+        robot.setAutoDelay(100);\n+        try {\n+            SwingUtilities.invokeAndWait(new Runnable() {\n+                public void run() {\n+                    createAndShowUI();\n+                }\n+            });\n+\n+            robot.waitForIdle();\n+            robot.delay(1000);\n+            Point pt = tree.getLocationOnScreen();\n+            BufferedImage img =\n+                    robot.createScreenCapture(new Rectangle(pt.x, pt.y,\n+                            tree.getWidth(),\n+                            tree.getHeight()));\n+\n+            boolean passed = false;\n+            for (int x = img.getWidth()\/2; x < img.getWidth() - 1; ++x) {\n+                Color c = new Color(img.getRGB(x, img.getHeight()\/4));\n+                if (!c.equals(Color.RED)) {\n+                    passed = false;\n+                    break;\n+                } else {\n+                    passed = true;\n+                }\n+            }\n+            if (!passed) {\n+                ImageIO.write(img, \"png\", new File(\"TreeBackgroundColorFail.png\"));\n+                throw new RuntimeException(\"Test Case Failed : Tree Background Color is Not Red\");\n+            }\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n+        }\n+    }\n+\n+    private static void createAndShowUI() {\n+        frame = new JFrame(\"Test Tree Background Color\");\n+        panel = new JPanel();\n+        tree = new JTree();\n+        panel.setBackground(Color.red);\n+        panel.setLayout(new GridLayout(1, 1));\n+        tree.setOpaque(false);\n+        panel.add(tree);\n+        frame.getContentPane().add(panel);\n+        frame.pack();\n+        frame.setSize(250, 200);\n+        frame.setLocationRelativeTo(null);\n+        frame.setVisible(true);\n+    }\n+}\n+\n","filename":"test\/jdk\/javax\/swing\/JTree\/TestTreeBackgroundColor.java","additions":111,"deletions":0,"binary":false,"changes":111,"status":"added"}]}