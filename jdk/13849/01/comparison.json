{"files":[{"patch":"@@ -79,1 +79,1 @@\n-<p>\n+<code>\n@@ -81,1 +81,1 @@\n-<\/p>\n+<\/code>\n@@ -89,0 +89,19 @@\n+<p>\n+By default symbols are also located using <b>PATH<\/b>. However, there are also Java properties that can be used to specify both the location of the binaries, and also separately the location of symbols. Use <b>sun.jvm.hotspot.debugger.windbg.imagePath<\/b> for the location of binaries, and use <b>sun.jvm.hotspot.debugger.windbg.symbolPath<\/b> for the location of symbols. <b>imagePath<\/b> defaults to <b>PATH<\/b> if not set, and <b>symbolPath<\/b> defaults to <b>imagePath<\/b>. The advantage of using these propeties is that you don't need to change your <b>PATH<\/b> setting, and they allow for binaries to be located separately from symbols.\n+<\/p>\n+\n+<p>\n+How you set these properties will depend on the SA tool being used. The following example demonstrates how to set one of the properties when launching the clhsdb tool:\n+<\/p>\n+\n+<code>\n+jhsdb -J-Dsun.jvm.hotspot.debugger.windbg.imagePath=\"%PATH%;D:\/SomePath\" clhsdb\n+<\/code>\n+\n+<p>If you are not seeing symbols for Windows libraries, try adding \"<b>srv*https:\/\/msdl.microsoft.com\/download\/symbols<\/b>\" to <b>sun.jvm.hotspot.debugger.windbg.symbolPath<\/b>. Note doing this means that SA will no longer look in <b>PATH<\/b> for your JVM and JNI symbols, so make sure those paths also get added. The following is one possible approach:\n+<\/p>\n+\n+<code>\n+jhsdb -J-Dsun.jvm.hotspot.debugger.windbg.symbolPath=\"%PATH%;srv*https:\/\/msdl.microsoft.com\/download\/symbol\" clhsdb\n+<\/code>\n+\n","filename":"src\/jdk.hotspot.agent\/doc\/transported_core.html","additions":21,"deletions":2,"binary":false,"changes":23,"status":"modified"}]}