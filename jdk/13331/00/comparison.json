{"files":[{"patch":"@@ -4197,7 +4197,15 @@\n-        Type type = attribType(tree.deconstructor, env);\n-        if (type.isRaw() && type.tsym.getTypeParameters().nonEmpty()) {\n-            Type inferred = infer.instantiatePatternType(resultInfo.pt, type.tsym);\n-            if (inferred == null) {\n-                log.error(tree.pos(), Errors.PatternTypeCannotInfer);\n-            } else {\n-                type = inferred;\n+        Type site;\n+\n+        if (tree.deconstructor == null) {\n+            log.error(tree.pos(), Errors.DeconstructionPatternVarNotAllowed);\n+            tree.record = syms.errSymbol;\n+            site = tree.type = types.createErrorType(tree.record.type);\n+        } else {\n+            Type type = attribType(tree.deconstructor, env);\n+            if (type.isRaw() && type.tsym.getTypeParameters().nonEmpty()) {\n+                Type inferred = infer.instantiatePatternType(resultInfo.pt, type.tsym);\n+                if (inferred == null) {\n+                    log.error(tree.pos(), Errors.PatternTypeCannotInfer);\n+                } else {\n+                    type = inferred;\n+                }\n@@ -4205,0 +4213,2 @@\n+            tree.type = tree.deconstructor.type = type;\n+            site = types.capture(tree.type);\n@@ -4206,2 +4216,1 @@\n-        tree.type = tree.deconstructor.type = type;\n-        Type site = types.capture(tree.type);\n+\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java","additions":18,"deletions":9,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -3967,0 +3967,3 @@\n+compiler.err.deconstruction.pattern.var.not.allowed=\\\n+    deconstruction patterns can only be applied to records, var is not allowed\n+\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/compiler.properties","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -0,0 +1,46 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8305582\n+ * @summary Compiler crash when compiling record patterns with var\n+ * @enablePreview\n+ * @compile\/fail\/ref=T8305582.out -XDrawDiagnostics --enable-preview -source ${jdk.version} T8305582.java\n+ *\/\n+\n+public class T8305582 {\n+    record Point(int x, int y) {}\n+    enum Color {RED, GREEN, BLUE}\n+    record ColoredPoint (Point p, Color c) {}\n+\n+    public static void foo(Object o) {\n+        if (o instanceof ColoredPoint(var(var x, var y), var c)) { }\n+\n+        switch(o) {\n+            case ColoredPoint(var (var x, var y), var c):\n+                break;\n+            default:\n+        }\n+    }\n+}\n","filename":"test\/langtools\/tools\/javac\/T8305582.java","additions":46,"deletions":0,"binary":false,"changes":46,"status":"added"},{"patch":"@@ -0,0 +1,5 @@\n+T8305582.java:38:39: compiler.err.deconstruction.pattern.var.not.allowed\n+T8305582.java:41:31: compiler.err.deconstruction.pattern.var.not.allowed\n+- compiler.note.preview.filename: T8305582.java, DEFAULT\n+- compiler.note.preview.recompile\n+2 errors\n\\ No newline at end of file\n","filename":"test\/langtools\/tools\/javac\/T8305582.out","additions":5,"deletions":0,"binary":false,"changes":5,"status":"added"},{"patch":"@@ -0,0 +1,38 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/\/ key: compiler.err.deconstruction.pattern.var.not.allowed\n+\/\/ key: compiler.warn.preview.feature.use.plural\n+\/\/ key: compiler.misc.feature.deconstruction.patterns\n+\/\/ options: --enable-preview -source ${jdk.version} -Xlint:preview\n+\n+class DeconstructionpatternsNonVar {\n+    record Point(int x, int y) {}\n+    enum Color {RED, GREEN, BLUE}\n+    record ColoredPoint (Point p, Color c) {}\n+\n+    public static void foo(Object o) {\n+        if (o instanceof ColoredPoint(var(var x, var y), var c)) {\n+        }\n+    }\n+}\n","filename":"test\/langtools\/tools\/javac\/diags\/examples\/DeconstructionpatternsNonVar.java","additions":38,"deletions":0,"binary":false,"changes":38,"status":"added"}]}