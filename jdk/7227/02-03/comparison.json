{"files":[{"patch":"@@ -555,1 +555,1 @@\n-void JfrJavaSupport::abort(jstring errorMsg, JavaThread* t, bool dump_core) {\n+void JfrJavaSupport::abort(jstring errorMsg, JavaThread* t) {\n@@ -557,1 +557,0 @@\n-\n@@ -559,3 +558,6 @@\n-  const char* const error_msg = c_str(errorMsg, t);\n-  if (error_msg != NULL) {\n-    log_error(jfr, system)(\"%s\",error_msg);\n+  abort(c_str(errorMsg, t));\n+}\n+\n+void JfrJavaSupport::abort(const char* error_msg, bool dump_core \/* true *\/) {\n+  if (error_msg != nullptr) {\n+    log_error(jfr, system)(\"%s\", error_msg);\n","filename":"src\/hotspot\/share\/jfr\/jni\/jfrJavaSupport.cpp","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -103,1 +103,2 @@\n-  static void abort(jstring errorMsg, TRAPS, bool dump_core=true);\n+  static void abort(jstring errorMsg, TRAPS);\n+  static void abort(const char* error_msg, bool dump_core = true);\n","filename":"src\/hotspot\/share\/jfr\/jni\/jfrJavaSupport.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -30,2 +30,0 @@\n-#include \"runtime\/interfaceSupport.inline.hpp\"\n-\n@@ -82,7 +80,2 @@\n-\n-    if (errno==ENOSPC) {\n-        char msg[] = \"Failed to write to jfr stream because no space left on device\";\n-        log_error(jfr, system)(\"%s\", msg);\n-        JavaThread* jt = JavaThread::current();\n-        ThreadInVMfromNative transition(jt);\n-        JfrJavaSupport::abort(JfrJavaSupport::new_string(msg, jt), jt, false);\n+    if (errno == ENOSPC) {\n+      JfrJavaSupport::abort(\"Failed to write to jfr stream because no space left on device\", false);\n@@ -91,1 +84,0 @@\n-\n","filename":"src\/hotspot\/share\/jfr\/writers\/jfrStreamWriterHost.inline.hpp","additions":2,"deletions":10,"binary":false,"changes":12,"status":"modified"}]}