{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -555,1 +555,1 @@\n-void JfrJavaSupport::abort(jstring errorMsg, JavaThread* t) {\n+void JfrJavaSupport::abort(jstring errorMsg, JavaThread* t, bool dump_core) {\n@@ -564,1 +564,1 @@\n-  vm_abort();\n+  vm_abort(dump_core);\n","filename":"src\/hotspot\/share\/jfr\/jni\/jfrJavaSupport.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -103,1 +103,1 @@\n-  static void abort(jstring errorMsg, TRAPS);\n+  static void abort(jstring errorMsg, TRAPS, bool dump_core=true);\n","filename":"src\/hotspot\/share\/jfr\/jni\/jfrJavaSupport.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+#include \"jfr\/jni\/jfrJavaSupport.hpp\"\n@@ -29,0 +30,1 @@\n+#include \"runtime\/interfaceSupport.inline.hpp\"\n@@ -80,0 +82,8 @@\n+\n+    if (errno==ENOSPC) {\n+        char msg[] = \"Failed to write to jfr stream because no space left on device\";\n+        log_error(jfr, system)(\"%s\", msg);\n+        JavaThread* jt = JavaThread::current();\n+        ThreadInVMfromNative transition(jt);\n+        JfrJavaSupport::abort(JfrJavaSupport::new_string(msg, jt), jt, false);\n+    }\n@@ -81,0 +91,1 @@\n+\n","filename":"src\/hotspot\/share\/jfr\/writers\/jfrStreamWriterHost.inline.hpp","additions":11,"deletions":0,"binary":false,"changes":11,"status":"modified"}]}