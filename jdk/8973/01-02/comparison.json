{"files":[{"patch":"@@ -87,12 +87,1 @@\n-                String release = releases.get(i);\n-                String releaseIndex = release.isEmpty() ? \"\" : Integer.toString(i + 1);\n-                Content releaseLabel = release.isEmpty()\n-                        ? contents.getContent(\"doclet.Deprecated_API_Checkbox_Other_Releases\")\n-                        : Text.of(release);\n-                HtmlId htmlId = HtmlId.of(\"release-\" + releaseIndex);\n-                tabs.add(HtmlTree.LABEL(htmlId.name(),\n-                                HtmlTree.INPUT(\"checkbox\", htmlId)\n-                                        .put(HtmlAttr.CHECKED, \"\")\n-                                        .put(HtmlAttr.ONCLICK,\n-                                                \"toggleGlobal(this, '\" + releaseIndex + \"', 3)\"))\n-                        .add(HtmlTree.SPAN(releaseLabel)));\n+                tabs.add(getReleaseCheckbox(releases.get(i), i));\n@@ -106,0 +95,18 @@\n+    private Content getReleaseCheckbox(String name, int index) {\n+        \/\/ Empty string represents other\/uncategorized releases. Since we can't make any assumptions\n+        \/\/ about release names this is arguably the safest way to avoid naming collisions.\n+        boolean isOtherReleases = name.isEmpty();\n+        Content releaseLabel = isOtherReleases\n+                ? contents.getContent(\"doclet.Deprecated_API_Checkbox_Other_Releases\")\n+                : Text.of(name);\n+        HtmlId htmlId = HtmlId.of(\"release-\" + index);\n+        \/\/ Table column ids are 1-based\n+        String releaseId = isOtherReleases ? \"\" : Integer.toString(index + 1);\n+        return HtmlTree.LABEL(htmlId.name(),\n+                        HtmlTree.INPUT(\"checkbox\", htmlId)\n+                                .put(HtmlAttr.CHECKED, \"\")\n+                                .put(HtmlAttr.ONCLICK,\n+                                        \"toggleGlobal(this, '\" + releaseId + \"', 3)\"))\n+                .add(HtmlTree.SPAN(releaseLabel));\n+    }\n+\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/DeprecatedListWriter.java","additions":19,"deletions":12,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -136,1 +136,1 @@\n-        \/\/ to restore any previous state, which unfortunately doesn't work on all browsers.\n+        \/\/ to restore any previous state when the page is loaded via back\/forward button.\n@@ -140,1 +140,1 @@\n-                        function(c, i) {\n+                        function(c) {\n@@ -143,0 +143,6 @@\n+                        });\n+                    });\n+                window.addEventListener(\"load\", function(e) {\n+                    document.querySelectorAll('input[type=\"checkbox\"]').forEach(\n+                        function(c) {\n+                            c.onclick();\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/SummaryListWriter.java","additions":8,"deletions":2,"binary":false,"changes":10,"status":"modified"}]}