{"files":[{"patch":"@@ -441,1 +441,1 @@\n-bool Thread::is_JavaThread_protected(const JavaThread* p) {\n+bool Thread::is_JavaThread_protected(const JavaThread* target) {\n@@ -454,1 +454,1 @@\n-  if (p->osthread() == NULL || p->osthread()->get_state() <= INITIALIZED) {\n+  if (target->osthread() == NULL || target->osthread()->get_state() <= INITIALIZED) {\n@@ -459,1 +459,1 @@\n-  if (current_thread == p || Threads_lock->owner() == current_thread) {\n+  if (current_thread == target || Threads_lock->owner() == current_thread) {\n@@ -468,1 +468,1 @@\n-  if (is_JavaThread_protected_by_TLH(p)) {\n+  if (is_JavaThread_protected_by_TLH(target)) {\n@@ -474,2 +474,2 @@\n-  \/\/ guarantee(!UseNewCode, \"current_thread=\" INTPTR_FORMAT \" is not protecting p=\"\n-  \/\/           INTPTR_FORMAT, p2i(current_thread), p2i(p));\n+  \/\/ guarantee(!UseNewCode, \"current_thread=\" INTPTR_FORMAT \" is not protecting target=\"\n+  \/\/           INTPTR_FORMAT, p2i(current_thread), p2i(target));\n@@ -477,2 +477,2 @@\n-  \/\/ Note: Since 'p' isn't protected by a TLH, the call to\n-  \/\/ p->is_handshake_safe_for() may crash, but we have debug bits so\n+  \/\/ Note: Since 'target' isn't protected by a TLH, the call to\n+  \/\/ target->is_handshake_safe_for() may crash, but we have debug bits so\n@@ -480,2 +480,2 @@\n-  assert(p->is_handshake_safe_for(current_thread), \"JavaThread=\" INTPTR_FORMAT\n-         \" is not protected and not handshake safe.\", p2i(p));\n+  assert(target->is_handshake_safe_for(current_thread), \"JavaThread=\" INTPTR_FORMAT\n+         \" is not protected and not handshake safe.\", p2i(target));\n@@ -490,1 +490,1 @@\n-bool Thread::is_JavaThread_protected_by_TLH(const JavaThread* p) {\n+bool Thread::is_JavaThread_protected_by_TLH(const JavaThread* target) {\n@@ -497,1 +497,1 @@\n-    if (stlp->list()->includes(p)) {\n+    if (stlp->list()->includes(target)) {\n@@ -1764,1 +1764,1 @@\n-  guarantee(Thread::is_JavaThread_protected_by_TLH(this),\n+  guarantee(Thread::is_JavaThread_protected_by_TLH(\/* target *\/ this),\n@@ -1770,1 +1770,1 @@\n-  guarantee(Thread::is_JavaThread_protected_by_TLH(this),\n+  guarantee(Thread::is_JavaThread_protected_by_TLH(\/* target *\/ this),\n@@ -2151,1 +2151,1 @@\n-  if (Thread::is_JavaThread_protected(this)) {\n+  if (Thread::is_JavaThread_protected(\/* target *\/ this)) {\n","filename":"src\/hotspot\/share\/runtime\/thread.cpp","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -204,1 +204,1 @@\n-  static bool is_JavaThread_protected(const JavaThread* p);\n+  static bool is_JavaThread_protected(const JavaThread* target);\n@@ -207,1 +207,1 @@\n-  static bool is_JavaThread_protected_by_TLH(const JavaThread* p);\n+  static bool is_JavaThread_protected_by_TLH(const JavaThread* target);\n","filename":"src\/hotspot\/share\/runtime\/thread.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}