{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -163,1 +163,1 @@\n-  nonstatic_field(InstanceKlass,               _misc_status._flags,                           u2)                                    \\\n+  nonstatic_field(InstanceKlass,               _misc_flags._flags,                            u2)                                    \\\n@@ -656,2 +656,2 @@\n-  declare_constant(InstanceKlassMiscStatus::_misc_has_nonstatic_concrete_methods)   \\\n-  declare_constant(InstanceKlassMiscStatus::_misc_declares_nonstatic_concrete_methods) \\\n+  declare_constant(InstanceKlassFlags::_misc_has_nonstatic_concrete_methods)   \\\n+  declare_constant(InstanceKlassFlags::_misc_declares_nonstatic_concrete_methods) \\\n","filename":"src\/hotspot\/share\/jvmci\/vmStructs_jvmci.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,1 +32,1 @@\n-#include \"oops\/instanceKlassMiscStatus.hpp\"\n+#include \"oops\/instanceKlassFlags.hpp\"\n@@ -226,1 +226,1 @@\n-  \/\/ _misc_status right now.\n+  \/\/ _misc_flags right now.\n@@ -234,1 +234,1 @@\n-  InstanceKlassMiscStatus _misc_status;\n+  InstanceKlassFlags _misc_flags;\n@@ -318,3 +318,3 @@\n-  bool is_shared_boot_class() const { return _misc_status.is_shared_boot_class(); }\n-  bool is_shared_platform_class() const { return _misc_status.is_shared_platform_class(); }\n-  bool is_shared_app_class() const {  return _misc_status.is_shared_app_class(); }\n+  bool is_shared_boot_class() const { return _misc_flags.is_shared_boot_class(); }\n+  bool is_shared_platform_class() const { return _misc_flags.is_shared_platform_class(); }\n+  bool is_shared_app_class() const {  return _misc_flags.is_shared_app_class(); }\n@@ -322,1 +322,1 @@\n-  bool is_shared_unregistered_class() const { return _misc_status.is_shared_unregistered_class(); }\n+  bool is_shared_unregistered_class() const { return _misc_flags.is_shared_unregistered_class(); }\n@@ -327,1 +327,1 @@\n-  bool shared_loading_failed() const { return _misc_status.shared_loading_failed(); }\n+  bool shared_loading_failed() const { return _misc_flags.shared_loading_failed(); }\n@@ -329,1 +329,1 @@\n-  void set_shared_loading_failed() { _misc_status.set_shared_loading_failed(true); }\n+  void set_shared_loading_failed() { _misc_flags.set_shared_loading_failed(true); }\n@@ -332,2 +332,2 @@\n-  void set_shared_class_loader_type(s2 loader_type) { _misc_status.set_shared_class_loader_type(loader_type); }\n-  void assign_class_loader_type() { _misc_status.assign_class_loader_type(_class_loader_data); }\n+  void set_shared_class_loader_type(s2 loader_type) { _misc_flags.set_shared_class_loader_type(loader_type); }\n+  void assign_class_loader_type() { _misc_flags.assign_class_loader_type(_class_loader_data); }\n@@ -336,2 +336,2 @@\n-  bool has_nonstatic_fields() const        { return _misc_status.has_nonstatic_fields(); }\n-  void set_has_nonstatic_fields(bool b)    { _misc_status.set_has_nonstatic_fields(b); }\n+  bool has_nonstatic_fields() const        { return _misc_flags.has_nonstatic_fields(); }\n+  void set_has_nonstatic_fields(bool b)    { _misc_flags.set_has_nonstatic_fields(b); }\n@@ -339,2 +339,2 @@\n-  bool has_localvariable_table() const     { return _misc_status.has_localvariable_table(); }\n-  void set_has_localvariable_table(bool b) { _misc_status.set_has_localvariable_table(b); }\n+  bool has_localvariable_table() const     { return _misc_flags.has_localvariable_table(); }\n+  void set_has_localvariable_table(bool b) { _misc_flags.set_has_localvariable_table(b); }\n@@ -517,1 +517,1 @@\n-  bool is_rewritten() const                { return _misc_status.rewritten(); }\n+  bool is_rewritten() const                { return _misc_flags.rewritten(); }\n@@ -538,2 +538,2 @@\n-  bool should_verify_class() const         { return _misc_status.should_verify_class(); }\n-  void set_should_verify_class(bool value) { _misc_status.set_should_verify_class(value); }\n+  bool should_verify_class() const         { return _misc_flags.should_verify_class(); }\n+  void set_should_verify_class(bool value) { _misc_flags.set_should_verify_class(value); }\n@@ -655,2 +655,2 @@\n-  bool is_contended() const                { return _misc_status.is_contended(); }\n-  void set_is_contended(bool value)        { _misc_status.set_is_contended(value); }\n+  bool is_contended() const                { return _misc_flags.is_contended(); }\n+  void set_is_contended(bool value)        { _misc_flags.set_is_contended(value); }\n@@ -685,2 +685,2 @@\n-  bool has_contended_annotations() const { return _misc_status.has_contended_annotations(); }\n-  void set_has_contended_annotations(bool value)  { _misc_status.set_has_contended_annotations(value); }\n+  bool has_contended_annotations() const { return _misc_flags.has_contended_annotations(); }\n+  void set_has_contended_annotations(bool value)  { _misc_flags.set_has_contended_annotations(value); }\n@@ -721,2 +721,2 @@\n-  bool has_been_redefined() const { return _misc_status.has_been_redefined(); }\n-  void set_has_been_redefined() { _misc_status.set_has_been_redefined(true); }\n+  bool has_been_redefined() const { return _misc_flags.has_been_redefined(); }\n+  void set_has_been_redefined() { _misc_flags.set_has_been_redefined(true); }\n@@ -724,2 +724,2 @@\n-  bool is_scratch_class() const { return _misc_status.is_scratch_class(); }\n-  void set_is_scratch_class() { _misc_status.set_is_scratch_class(true); }\n+  bool is_scratch_class() const { return _misc_flags.is_scratch_class(); }\n+  void set_is_scratch_class() { _misc_flags.set_is_scratch_class(true); }\n@@ -781,2 +781,2 @@\n-  bool has_nonstatic_concrete_methods() const { return _misc_status.has_nonstatic_concrete_methods(); }\n-  void set_has_nonstatic_concrete_methods(bool b) { _misc_status.set_has_nonstatic_concrete_methods(b); }\n+  bool has_nonstatic_concrete_methods() const { return _misc_flags.has_nonstatic_concrete_methods(); }\n+  void set_has_nonstatic_concrete_methods(bool b) { _misc_flags.set_has_nonstatic_concrete_methods(b); }\n@@ -784,2 +784,2 @@\n-  bool declares_nonstatic_concrete_methods() const { return _misc_status.declares_nonstatic_concrete_methods(); }\n-  void set_declares_nonstatic_concrete_methods(bool b) { _misc_status.set_declares_nonstatic_concrete_methods(b); }\n+  bool declares_nonstatic_concrete_methods() const { return _misc_flags.declares_nonstatic_concrete_methods(); }\n+  void set_declares_nonstatic_concrete_methods(bool b) { _misc_flags.set_declares_nonstatic_concrete_methods(b); }\n@@ -1079,1 +1079,1 @@\n-  void set_rewritten()                  { _misc_status.set_rewritten(true); }\n+  void set_rewritten()                  { _misc_flags.set_rewritten(true); }\n","filename":"src\/hotspot\/share\/oops\/instanceKlass.hpp","additions":32,"deletions":32,"binary":false,"changes":64,"status":"modified"},{"patch":"@@ -0,0 +1,69 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+#include \"precompiled.hpp\"\n+#include \"classfile\/classLoader.hpp\"\n+#include \"classfile\/classLoaderData.inline.hpp\"\n+#include \"oops\/instanceKlassFlags.hpp\"\n+#include \"runtime\/safepoint.hpp\"\n+#include \"utilities\/macros.hpp\"\n+\n+#if INCLUDE_CDS\n+void InstanceKlassFlags::set_shared_class_loader_type(s2 loader_type) {\n+  switch (loader_type) {\n+  case ClassLoader::BOOT_LOADER:\n+    _flags |= _misc_is_shared_boot_class;\n+    break;\n+  case ClassLoader::PLATFORM_LOADER:\n+    _flags |= _misc_is_shared_platform_class;\n+    break;\n+  case ClassLoader::APP_LOADER:\n+    _flags |= _misc_is_shared_app_class;\n+    break;\n+  default:\n+    ShouldNotReachHere();\n+    break;\n+  }\n+}\n+\n+void InstanceKlassFlags::assign_class_loader_type(const ClassLoaderData* cld) {\n+  if (cld->is_boot_class_loader_data()) {\n+    set_shared_class_loader_type(ClassLoader::BOOT_LOADER);\n+  }\n+  else if (cld->is_platform_class_loader_data()) {\n+    set_shared_class_loader_type(ClassLoader::PLATFORM_LOADER);\n+  }\n+  else if (cld->is_system_class_loader_data()) {\n+    set_shared_class_loader_type(ClassLoader::APP_LOADER);\n+  }\n+}\n+#endif \/\/ INCLUDE_CDS\n+\n+#ifdef ASSERT\n+void InstanceKlassFlags::assert_is_safe(bool set) {\n+  \/\/ Setting a flag is safe if it's set once or at a safepoint. RedefineClasses can set or\n+  \/\/ reset flags at a safepoint.\n+  assert(!set || SafepointSynchronize::is_at_safepoint(), \"set once or at safepoint\");\n+}\n+#endif \/\/ ASSERT\n","filename":"src\/hotspot\/share\/oops\/instanceKlassFlags.cpp","additions":69,"deletions":0,"binary":false,"changes":69,"status":"added"},{"patch":"@@ -30,1 +30,1 @@\n-class InstanceKlassMiscStatus {\n+class InstanceKlassFlags {\n@@ -66,1 +66,1 @@\n-  InstanceKlassMiscStatus() : _flags(0) {}\n+  InstanceKlassFlags() : _flags(0) {}\n","filename":"src\/hotspot\/share\/oops\/instanceKlassFlags.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"src\/hotspot\/share\/oops\/instanceKlassMiscStatus.hpp","status":"renamed"},{"patch":"@@ -1,69 +0,0 @@\n-\/*\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-#include \"precompiled.hpp\"\n-#include \"classfile\/classLoader.hpp\"\n-#include \"classfile\/classLoaderData.inline.hpp\"\n-#include \"oops\/instanceKlassMiscStatus.hpp\"\n-#include \"runtime\/safepoint.hpp\"\n-#include \"utilities\/macros.hpp\"\n-\n-#if INCLUDE_CDS\n-void InstanceKlassMiscStatus::set_shared_class_loader_type(s2 loader_type) {\n-  switch (loader_type) {\n-  case ClassLoader::BOOT_LOADER:\n-    _flags |= _misc_is_shared_boot_class;\n-    break;\n-  case ClassLoader::PLATFORM_LOADER:\n-    _flags |= _misc_is_shared_platform_class;\n-    break;\n-  case ClassLoader::APP_LOADER:\n-    _flags |= _misc_is_shared_app_class;\n-    break;\n-  default:\n-    ShouldNotReachHere();\n-    break;\n-  }\n-}\n-\n-void InstanceKlassMiscStatus::assign_class_loader_type(const ClassLoaderData* cld) {\n-  if (cld->is_boot_class_loader_data()) {\n-    set_shared_class_loader_type(ClassLoader::BOOT_LOADER);\n-  }\n-  else if (cld->is_platform_class_loader_data()) {\n-    set_shared_class_loader_type(ClassLoader::PLATFORM_LOADER);\n-  }\n-  else if (cld->is_system_class_loader_data()) {\n-    set_shared_class_loader_type(ClassLoader::APP_LOADER);\n-  }\n-}\n-#endif \/\/ INCLUDE_CDS\n-\n-#ifdef ASSERT\n-void InstanceKlassMiscStatus::assert_is_safe(bool set) {\n-  \/\/ Setting a flag is safe if it's set once or at a safepoint. RedefineClasses can set or\n-  \/\/ reset flags at a safepoint.\n-  assert(!set || SafepointSynchronize::is_at_safepoint(), \"set once or at safepoint\");\n-}\n-#endif \/\/ ASSERT\n","filename":"src\/hotspot\/share\/oops\/instanceKlassMiscStatus.cpp","additions":0,"deletions":69,"binary":false,"changes":69,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -104,1 +104,1 @@\n-    final int instanceKlassMiscFlagsOffset = getFieldOffset(\"InstanceKlass::_misc_status._flags\", Integer.class, \"u2\");\n+    final int instanceKlassMiscFlagsOffset = getFieldOffset(\"InstanceKlass::_misc_flags._flags\", Integer.class, \"u2\");\n@@ -143,2 +143,2 @@\n-    final int jvmMiscFlagsHasDefaultMethods = getConstant(\"InstanceKlassMiscStatus::_misc_has_nonstatic_concrete_methods\", Integer.class);\n-    final int jvmMiscFlagsDeclaresDefaultMethods = getConstant(\"InstanceKlassMiscStatus::_misc_declares_nonstatic_concrete_methods\", Integer.class);\n+    final int jvmMiscFlagsHasDefaultMethods = getConstant(\"InstanceKlassFlags::_misc_has_nonstatic_concrete_methods\", Integer.class);\n+    final int jvmMiscFlagsDeclaresDefaultMethods = getConstant(\"InstanceKlassFlags::_misc_declares_nonstatic_concrete_methods\", Integer.class);\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk.vm.ci.hotspot\/src\/jdk\/vm\/ci\/hotspot\/HotSpotVMConfig.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}