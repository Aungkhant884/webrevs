{"files":[{"filename":"src\/java.base\/share\/classes\/java\/util\/.Random.java.swp","binary":true,"status":"added"},{"patch":"@@ -32,0 +32,3 @@\n+import java.nio.ByteBuffer;\n+import java.nio.CharBuffer;\n+import java.nio.charset.CharacterCodingException;\n@@ -33,0 +36,1 @@\n+import java.nio.charset.CharsetEncoder;\n@@ -43,0 +47,1 @@\n+import java.util.Locale;\n@@ -46,0 +51,1 @@\n+import java.util.function.BiConsumer;\n@@ -49,0 +55,1 @@\n+import sun.security.util.KnownOIDs;\n@@ -67,2 +74,1 @@\n-    private static final String secPropName =\n-        \"jdk.httpdigest.defaultDisabledAlgorithms\";\n+    private static final String propPrefix = \"http.auth.digest.\";\n@@ -70,1 +76,1 @@\n-    private static final String compatPropName = \"http.auth.digest.\" +\n+    private static final String compatPropName = propPrefix +\n@@ -73,20 +79,13 @@\n-    \/\/ default set of disabled message digest algorithms that may not be\n-    \/\/ used for proxy connections, or plain text http server connections\n-\n-    private static final Set<String> defDisabledAlgs = getDefaultAlgs();\n-\n-    private static Set<String> getDefaultAlgs() {\n-        Set<String> disabledAlgs = new HashSet<>();\n-        @SuppressWarnings(\"removal\")\n-        String secprops = AccessController.doPrivileged(\n-            new PrivilegedAction<>() {\n-                public String run() {\n-                    return Security.getProperty(secPropName)\n-                                   .replaceAll(\"\\\\s\", \"\")\n-                                   .toUpperCase();\n-                }\n-            }\n-        );\n-        String[] algorithms = secprops.split(\",\");\n-        for (String algorithm : algorithms) {\n-            disabledAlgs.add(algorithm);\n+    \/\/ Takes a set and input string containing comma separated values. converts to upper\n+    \/\/ case, and trims each value, then applies given function to set and value\n+    \/\/ (either add or delete element from set)\n+    private static void processPropValue(String input,\n+        Set<String> theSet,\n+        BiConsumer<Set<String>,String> consumer)\n+    {\n+        if (input == null) {\n+            return;\n+        }\n+        String[] values = input.toUpperCase(Locale.ROOT).split(\",\");\n+        for (String v : values) {\n+            consumer.accept(theSet, v.trim());\n@@ -94,1 +93,0 @@\n-        return Collections.unmodifiableSet(disabledAlgs);\n@@ -97,0 +95,3 @@\n+    private static final String secPropName =\n+        propPrefix + \"disabledAlgorithms\";\n+\n@@ -99,1 +100,1 @@\n-        \"http.auth.digest.enabledAlgorithms\";\n+        propPrefix + \"reEnabledAlgorithms\";\n@@ -101,1 +102,1 @@\n-    private static final Set<String> disabledAlgs = new HashSet<>();\n+    private static final Set<String> disabledAlgorithms = new HashSet<>();\n@@ -112,5 +113,1 @@\n-            new PrivilegedAction<>() {\n-                public Boolean run() {\n-                    return NetProperties.getBoolean(compatPropName);\n-                }\n-            }\n+            (PrivilegedAction<Boolean>) () -> NetProperties.getBoolean(compatPropName)\n@@ -120,1 +117,0 @@\n-        disabledAlgs.addAll(defDisabledAlgs);\n@@ -122,8 +118,2 @@\n-        String algs = AccessController.doPrivileged(\n-            new PrivilegedAction<>() {\n-                public String run() {\n-                    String s = NetProperties.get(enabledAlgPropName);\n-                    return s == null\n-                        ? \"\" : s.replaceAll(\"\\\\s\", \"\").toUpperCase();\n-                }\n-            }\n+        String secprops = AccessController.doPrivileged(\n+            (PrivilegedAction<String>) () -> Security.getProperty(secPropName)\n@@ -131,3 +121,9 @@\n-        for (String alg : algs.split(\",\")) {\n-            disabledAlgs.remove(alg.toUpperCase());\n-        }\n+        \/\/ add the default insecure algorithms to set\n+        processPropValue(secprops, disabledAlgorithms, (set, elem) -> set.add(elem));\n+\n+        @SuppressWarnings(\"removal\")\n+        String netprops = AccessController.doPrivileged(\n+            (PrivilegedAction<String>) () -> NetProperties.get(enabledAlgPropName)\n+        );\n+        \/\/ remove any algorithms from disabled set that were opted-in by user\n+        processPropValue(netprops, disabledAlgorithms, (set, elem) -> set.remove(elem));\n@@ -397,1 +393,9 @@\n-        params.setCharset(p.findValue(\"charset\", \"ISO_8859_1\").toUpperCase());\n+        String charset = p.findValue(\"charset\");\n+        if (charset == null) {\n+            charset = \"ISO_8859_1\";\n+        } else if (!charset.equalsIgnoreCase(\"UTF-8\")) {\n+            \/\/ UTF-8 is only valid value. ISO_8859_1 represents default behavior\n+            \/\/ when the parameter is not set.\n+            return false;\n+        }\n+        params.setCharset(charset.toUpperCase(Locale.ROOT));\n@@ -426,1 +430,6 @@\n-        algorithm = algorithm.toUpperCase();\n+        var oid = KnownOIDs.findMatch(algorithm.toUpperCase(Locale.ROOT));\n+        if (oid == null) {\n+            log(\"unknown algorithm: \" + algorithm);\n+            return false;\n+        }\n+        algorithm = oid.stdName();\n@@ -484,1 +493,2 @@\n-        } catch (NoSuchAlgorithmException ex) {\n+        } catch (CharacterCodingException | NoSuchAlgorithmException ex) {\n+            log(ex.getMessage());\n@@ -512,3 +522,2 @@\n-        } catch (NoSuchAlgorithmException ex) {\n-            \/\/ can't happen as the algorithm was found already\n-            assert false;\n+        } catch (CharacterCodingException | NoSuchAlgorithmException ex) {\n+            log(ex.getMessage());\n@@ -544,0 +553,6 @@\n+    private static void log(String msg) {\n+        if (logger.isLoggable(PlatformLogger.Level.INFO)) {\n+            logger.info(msg);\n+        }\n+    }\n+\n@@ -550,2 +565,1 @@\n-        algorithm = algorithm.toUpperCase();\n-        if (disabledAlgs.contains(algorithm)) {\n+        if (disabledAlgorithms.contains(algorithm)) {\n@@ -554,4 +568,2 @@\n-            if (logger.isLoggable(PlatformLogger.Level.INFO)) {\n-                logger.info(msg + \" This constraint may be relaxed by setting \" +\n-                     \"the \\\"http.auth.digest.enabledAlgorithms\\\" system property.\");\n-            }\n+            log(msg + \" This constraint may be relaxed by setting \" +\n+                     \"the \\\"http.auth.digest.reEnabledAlgorithms\\\" system property.\");\n@@ -586,1 +598,1 @@\n-            ncstring = Integer.toHexString (nccount).toUpperCase();\n+            ncstring = Integer.toHexString (nccount).toUpperCase(Locale.ROOT);\n@@ -611,0 +623,2 @@\n+        } catch (CharacterCodingException ex) {\n+            throw new ProtocolException (\"Invalid characters in username or password\");\n@@ -616,1 +630,1 @@\n-        throws NoSuchAlgorithmException\n+        throws NoSuchAlgorithmException, CharacterCodingException\n@@ -633,1 +647,1 @@\n-                    ) throws NoSuchAlgorithmException\n+                    ) throws NoSuchAlgorithmException, CharacterCodingException\n@@ -688,2 +702,6 @@\n-    private String encode(String src, char[] passwd, MessageDigest md, Charset charset) {\n-        if (charset.equals(StandardCharsets.UTF_8)) {\n+    private String encode(String src, char[] passwd, MessageDigest md, Charset charset)\n+        throws CharacterCodingException\n+    {\n+        boolean isUtf8 = charset.equals(StandardCharsets.UTF_8);\n+\n+        if (isUtf8) {\n@@ -694,3 +712,8 @@\n-            byte[] passwdBytes = new byte[passwd.length];\n-            for (int i=0; i<passwd.length; i++)\n-                passwdBytes[i] = (byte)passwd[i];\n+            byte[] passwdBytes;\n+            if (isUtf8) {\n+                passwdBytes = getUtf8Bytes(passwd);\n+            } else {\n+                passwdBytes = new byte[passwd.length];\n+                for (int i=0; i<passwd.length; i++)\n+                    passwdBytes[i] = (byte)passwd[i];\n+            }\n@@ -710,0 +733,11 @@\n+\n+    private static byte[] getUtf8Bytes(char[] passwd) throws CharacterCodingException {\n+        CharBuffer cb = CharBuffer.wrap(passwd);\n+        CharsetEncoder encoder = StandardCharsets.UTF_8.newEncoder();\n+        ByteBuffer bb = encoder.encode(cb);\n+        byte[] buf = new byte[bb.remaining()];\n+        bb.get(buf);\n+        if (bb.hasArray())\n+            Arrays.fill(bb.array(), bb.arrayOffset(), bb.capacity(), (byte)0);\n+        return buf;\n+    }\n","filename":"src\/java.base\/share\/classes\/sun\/net\/www\/protocol\/http\/DigestAuthentication.java","additions":97,"deletions":63,"binary":false,"changes":160,"status":"modified"},{"patch":"@@ -705,2 +705,3 @@\n-# Disabled (by default) message digest algorithms for use with\n-# HTTP Digest authentication (java.net.HttpURLConnection)\n+# Disabled message digest algorithms for use with plaintext\n+# HTTP Digest authentication (java.net.HttpURLConnection).\n+# This includes HTTPS Digest authentication to proxies.\n@@ -708,1 +709,1 @@\n-# property \"http.auth.digest.enabledAlgorithms\" to a comma\n+# property \"http.auth.digest.reEnabledAlgorithms\" to a comma\n@@ -711,2 +712,1 @@\n-jdk.httpdigest.defaultDisabledAlgorithms = MD5, MD-5, SHA1, SHA-1\n-\n+http.auth.digest.disabledAlgorithms = MD5, SHA-1\n","filename":"src\/java.base\/share\/conf\/security\/java.security","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n- * @run main\/othervm -Dhttp.auth.digest.enabledAlgorithms=MD5 B4722333\n+ * @run main\/othervm -Dhttp.auth.digest.reEnabledAlgorithms=MD5 B4722333\n","filename":"test\/jdk\/java\/net\/Authenticator\/B4722333.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,2 +28,2 @@\n- * @run main\/othervm -Dhttp.auth.digest.enabledAlgorithms=MD5 B4759514\n- * @run main\/othervm -Dhttp.auth.digest.enabledAlgorithms=MD5 -Djava.net.preferIPv6Addresses=true B4759514\n+ * @run main\/othervm -Dhttp.auth.digest.reEnabledAlgorithms=MD5 B4759514\n+ * @run main\/othervm -Dhttp.auth.digest.reEnabledAlgorithms=MD5 -Djava.net.preferIPv6Addresses=true B4759514\n","filename":"test\/jdk\/java\/net\/Authenticator\/B4759514.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n- * @run main\/othervm -Dhttp.auth.digest.enabledAlgorithms=MD5\n+ * @run main\/othervm -Dhttp.auth.digest.reEnabledAlgorithms=MD5\n@@ -30,1 +30,1 @@\n- * @run main\/othervm -Dhttp.auth.digest.enabledAlgorithms=MD5\n+ * @run main\/othervm -Dhttp.auth.digest.reEnabledAlgorithms=MD5\n","filename":"test\/jdk\/java\/net\/Authenticator\/B6870935.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -34,2 +34,2 @@\n- * @run main\/othervm -Dhttp.auth.digest.enabledAlgorithms=MD5 B8034170 unquoted\n- * @run main\/othervm -Dhttp.auth.digest.enabledAlgorithms=MD5\n+ * @run main\/othervm -Dhttp.auth.digest.reEnabledAlgorithms=MD5 B8034170 unquoted\n+ * @run main\/othervm -Dhttp.auth.digest.reEnabledAlgorithms=MD5\n@@ -37,1 +37,1 @@\n- * @run main\/othervm -Dhttp.auth.digest.enabledAlgorithms=MD5\n+ * @run main\/othervm -Dhttp.auth.digest.reEnabledAlgorithms=MD5\n","filename":"test\/jdk\/java\/net\/Authenticator\/B8034170.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -66,4 +66,4 @@\n- * @run main\/othervm -Dhttp.auth.digest.enabledAlgorithms=MD5 HTTPSetAuthenticatorTest DIGEST SERVER\n- * @run main\/othervm -Dhttp.auth.digest.enabledAlgorithms=MD5 HTTPSetAuthenticatorTest DIGEST PROXY\n- * @run main\/othervm -Dhttp.auth.digest.enabledAlgorithms=MD5 HTTPSetAuthenticatorTest DIGEST PROXY305\n- * @run main\/othervm -Dhttp.auth.digest.enabledAlgorithms=MD5 HTTPSetAuthenticatorTest DIGEST SERVER307\n+ * @run main\/othervm -Dhttp.auth.digest.reEnabledAlgorithms=MD5 HTTPSetAuthenticatorTest DIGEST SERVER\n+ * @run main\/othervm -Dhttp.auth.digest.reEnabledAlgorithms=MD5 HTTPSetAuthenticatorTest DIGEST PROXY\n+ * @run main\/othervm -Dhttp.auth.digest.reEnabledAlgorithms=MD5 HTTPSetAuthenticatorTest DIGEST PROXY305\n+ * @run main\/othervm -Dhttp.auth.digest.reEnabledAlgorithms=MD5 HTTPSetAuthenticatorTest DIGEST SERVER307\n","filename":"test\/jdk\/java\/net\/HttpURLConnection\/SetAuthenticator\/HTTPSetAuthenticatorTest.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -66,4 +66,4 @@\n- * @run main\/othervm -Dhttp.auth.digest.enabledAlgorithms=MD5 HTTPTest SERVER\n- * @run main\/othervm -Dhttp.auth.digest.enabledAlgorithms=MD5 HTTPTest PROXY\n- * @run main\/othervm -Dhttp.auth.digest.enabledAlgorithms=MD5 HTTPTest SERVER307\n- * @run main\/othervm -Dhttp.auth.digest.enabledAlgorithms=MD5 HTTPTest PROXY305\n+ * @run main\/othervm -Dhttp.auth.digest.reEnabledAlgorithms=MD5 HTTPTest SERVER\n+ * @run main\/othervm -Dhttp.auth.digest.reEnabledAlgorithms=MD5 HTTPTest PROXY\n+ * @run main\/othervm -Dhttp.auth.digest.reEnabledAlgorithms=MD5 HTTPTest SERVER307\n+ * @run main\/othervm -Dhttp.auth.digest.reEnabledAlgorithms=MD5 HTTPTest PROXY305\n","filename":"test\/jdk\/java\/net\/HttpURLConnection\/SetAuthenticator\/HTTPTest.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -50,4 +50,4 @@\n- * @run main\/othervm -Dhttp.auth.digest.enabledAlgorithms=MD5 DigestAuth good\n- * @run main\/othervm -Dhttp.auth.digest.enabledAlgorithms=MD5 DigestAuth only_nonce\n- * @run main\/othervm -Dhttp.auth.digest.enabledAlgorithms=SHA1 DigestAuth sha1-good\n- * @run main\/othervm -Dhttp.auth.digest.enabledAlgorithms=MD5 DigestAuth sha1-bad\n+ * @run main\/othervm -Dhttp.auth.digest.reEnabledAlgorithms=MD5 DigestAuth good\n+ * @run main\/othervm -Dhttp.auth.digest.reEnabledAlgorithms=MD5 DigestAuth only_nonce\n+ * @run main\/othervm -Dhttp.auth.digest.reEnabledAlgorithms=SHA-1 DigestAuth sha1-good\n+ * @run main\/othervm -Dhttp.auth.digest.reEnabledAlgorithms=MD5 DigestAuth sha1-bad\n@@ -57,7 +57,7 @@\n- * @run main\/othervm -Dhttp.auth.digest.enabledAlgorithms=MD5 DigestAuth sha256\n- * @run main\/othervm -Dhttp.auth.digest.enabledAlgorithms=MD5 DigestAuth no_header\n- * @run main\/othervm -Dhttp.auth.digest.enabledAlgorithms=MD5 DigestAuth no_nonce\n- * @run main\/othervm -Dhttp.auth.digest.enabledAlgorithms=MD5 DigestAuth no_qop\n- * @run main\/othervm -Dhttp.auth.digest.enabledAlgorithms=MD5 DigestAuth invalid_alg\n- * @run main\/othervm -Dhttp.auth.digest.enabledAlgorithms=MD5 DigestAuth validate_server\n- * @run main\/othervm -Dhttp.auth.digest.enabledAlgorithms=MD5 DigestAuth validate_server_no_qop\n+ * @run main\/othervm -Dhttp.auth.digest.reEnabledAlgorithms=MD5 DigestAuth sha256\n+ * @run main\/othervm -Dhttp.auth.digest.reEnabledAlgorithms=MD5 DigestAuth no_header\n+ * @run main\/othervm -Dhttp.auth.digest.reEnabledAlgorithms=MD5 DigestAuth no_nonce\n+ * @run main\/othervm -Dhttp.auth.digest.reEnabledAlgorithms=MD5 DigestAuth no_qop\n+ * @run main\/othervm -Dhttp.auth.digest.reEnabledAlgorithms=MD5 DigestAuth invalid_alg\n+ * @run main\/othervm -Dhttp.auth.digest.reEnabledAlgorithms=MD5 DigestAuth validate_server\n+ * @run main\/othervm -Dhttp.auth.digest.reEnabledAlgorithms=MD5 DigestAuth validate_server_no_qop\n","filename":"test\/jdk\/sun\/net\/www\/http\/HttpURLConnection\/DigestAuth.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n- * @run main\/othervm -Dhttp.auth.digest.enabledAlgorithms=MD5\n+ * @run main\/othervm -Dhttp.auth.digest.reEnabledAlgorithms=MD5\n@@ -30,1 +30,1 @@\n- * @run main\/othervm -Dhttp.auth.digest.enabledAlgorithms=MD5\n+ * @run main\/othervm -Dhttp.auth.digest.reEnabledAlgorithms=MD5\n@@ -33,1 +33,1 @@\n- * @run main\/othervm -Dhttp.auth.digest.enabledAlgorithms=MD5\n+ * @run main\/othervm -Dhttp.auth.digest.reEnabledAlgorithms=MD5\n@@ -36,1 +36,1 @@\n- * @run main\/othervm -Dhttp.auth.digest.enabledAlgorithms=MD5\n+ * @run main\/othervm -Dhttp.auth.digest.reEnabledAlgorithms=MD5\n","filename":"test\/jdk\/sun\/net\/www\/protocol\/http\/DigestTest.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -30,2 +30,2 @@\n- * @run main\/othervm -Dhttp.auth.digest.enabledAlgorithms=MD5 NoNTLM\n- * @run main\/othervm -Dhttp.auth.digest.enabledAlgorithms=MD5\n+ * @run main\/othervm -Dhttp.auth.digest.reEnabledAlgorithms=MD5 NoNTLM\n+ * @run main\/othervm -Dhttp.auth.digest.reEnabledAlgorithms=MD5\n","filename":"test\/jdk\/sun\/net\/www\/protocol\/http\/NoNTLM.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}