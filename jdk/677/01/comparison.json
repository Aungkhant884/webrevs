{"files":[{"patch":"@@ -180,2 +180,0 @@\n-  SignalHandlerMark shm(t);\n-\n","filename":"src\/hotspot\/os_cpu\/aix_ppc\/os_aix_ppc.cpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -404,2 +404,3 @@\n-  \/\/ Must do this before SignalHandlerMark, if crash protection installed we will longjmp away\n-  \/\/ (no destructors can be run)\n+  \/\/ If crash protection is installed we may longjmp away and no destructors\n+  \/\/ for objects in this scope will be run.\n+  \/\/ So don't use any RAII utilities before crash protection is checked.\n@@ -408,2 +409,0 @@\n-  SignalHandlerMark shm(t);\n-\n","filename":"src\/hotspot\/os_cpu\/bsd_x86\/os_bsd_x86.cpp","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -127,2 +127,0 @@\n-  SignalHandlerMark shm(t);\n-\n","filename":"src\/hotspot\/os_cpu\/bsd_zero\/os_bsd_zero.cpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -176,2 +176,3 @@\n-  \/\/ Must do this before SignalHandlerMark, if crash protection installed we will longjmp away\n-  \/\/ (no destructors can be run)\n+  \/\/ If crash protection is installed we may longjmp away and no destructors\n+  \/\/ for objects in this scope will be run.\n+  \/\/ So don't use any RAII utilities before crash protection is checked.\n@@ -180,2 +181,0 @@\n-  SignalHandlerMark shm(t);\n-\n","filename":"src\/hotspot\/os_cpu\/linux_aarch64\/os_linux_aarch64.cpp","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -252,2 +252,3 @@\n-  \/\/ Must do this before SignalHandlerMark, if crash protection installed we will longjmp away\n-  \/\/ (no destructors can be run)\n+  \/\/ If crash protection is installed we may longjmp away and no destructors\n+  \/\/ for objects in this scope will be run.\n+  \/\/ So don't use any RAII utilities before crash protection is checked.\n@@ -256,2 +257,0 @@\n-  SignalHandlerMark shm(t);\n-\n","filename":"src\/hotspot\/os_cpu\/linux_arm\/os_linux_arm.cpp","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -202,2 +202,0 @@\n-  SignalHandlerMark shm(t);\n-\n","filename":"src\/hotspot\/os_cpu\/linux_ppc\/os_linux_ppc.cpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -218,2 +218,3 @@\n-  \/\/ Must do this before SignalHandlerMark, if crash protection installed we will longjmp away\n-  \/\/ (no destructors can be run).\n+  \/\/ If crash protection is installed we may longjmp away and no destructors\n+  \/\/ for objects in this scope will be run.\n+  \/\/ So don't use any RAII utilities before crash protection is checked.\n@@ -222,2 +223,0 @@\n-  SignalHandlerMark shm(t);\n-\n","filename":"src\/hotspot\/os_cpu\/linux_s390\/os_linux_s390.cpp","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -212,2 +212,3 @@\n-  \/\/ Must do this before SignalHandlerMark, if crash protection installed we will longjmp away\n-  \/\/ (no destructors can be run)\n+  \/\/ If crash protection is installed we may longjmp away and no destructors\n+  \/\/ for objects in this scope will be run.\n+  \/\/ So don't use any RAII utilities before crash protection is checked.\n@@ -216,2 +217,0 @@\n-  SignalHandlerMark shm(t);\n-\n","filename":"src\/hotspot\/os_cpu\/linux_x86\/os_linux_x86.cpp","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -123,2 +123,0 @@\n-  SignalHandlerMark shm(t);\n-\n","filename":"src\/hotspot\/os_cpu\/linux_zero\/os_linux_zero.cpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -263,1 +263,0 @@\n-  _num_nested_signal = 0;\n","filename":"src\/hotspot\/share\/runtime\/thread.cpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -314,2 +314,0 @@\n-  int _num_nested_signal;\n-\n@@ -319,4 +317,0 @@\n-  void enter_signal_handler() { _num_nested_signal++; }\n-  void leave_signal_handler() { _num_nested_signal--; }\n-  bool is_inside_signal_handler() const { return _num_nested_signal > 0; }\n-\n@@ -2149,14 +2143,0 @@\n-class SignalHandlerMark: public StackObj {\n- private:\n-  Thread* _thread;\n- public:\n-  SignalHandlerMark(Thread* t) {\n-    _thread = t;\n-    if (_thread) _thread->enter_signal_handler();\n-  }\n-  ~SignalHandlerMark() {\n-    if (_thread) _thread->leave_signal_handler();\n-    _thread = NULL;\n-  }\n-};\n-\n","filename":"src\/hotspot\/share\/runtime\/thread.hpp","additions":0,"deletions":20,"binary":false,"changes":20,"status":"modified"}]}