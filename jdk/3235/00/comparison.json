{"files":[{"patch":"@@ -363,1 +363,1 @@\n-            final static Factory<JavaCompiler> factory = ReusableJavaCompiler::new;\n+            static final Factory<JavaCompiler> factory = ReusableJavaCompiler::new;\n@@ -390,1 +390,1 @@\n-            final static Factory<Log> factory = ReusableLog::new;\n+            static final Factory<Log> factory = ReusableLog::new;\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/api\/JavacTaskPool.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -802,1 +802,1 @@\n-        static public Name formFullName(Name name, Symbol owner) {\n+        public static Name formFullName(Name name, Symbol owner) {\n@@ -817,1 +817,1 @@\n-        static public Name formFlatName(Name name, Symbol owner) {\n+        public static Name formFlatName(Name name, Symbol owner) {\n@@ -2473,1 +2473,1 @@\n-            static public AccessCode getFromCode(int code) {\n+            public static AccessCode getFromCode(int code) {\n@@ -2515,1 +2515,1 @@\n-        public final static Completer NULL_COMPLETER = new Completer() {\n+        public static final Completer NULL_COMPLETER = new Completer() {\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Symbol.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -378,1 +378,1 @@\n-        private final static TypeMapping<Void> stripMetadata = new StructuralTypeMapping<Void>() {\n+        private static final TypeMapping<Void> stripMetadata = new StructuralTypeMapping<Void>() {\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Type.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1066,1 +1066,1 @@\n-    final public boolean isSubtype(Type t, Type s) {\n+    public final boolean isSubtype(Type t, Type s) {\n@@ -1069,1 +1069,1 @@\n-    final public boolean isSubtypeNoCapture(Type t, Type s) {\n+    public final boolean isSubtypeNoCapture(Type t, Type s) {\n@@ -4898,1 +4898,1 @@\n-        final public R visit(Type t, S s)               { return t.accept(this, s); }\n+        public final R visit(Type t, S s)               { return t.accept(this, s); }\n@@ -4925,1 +4925,1 @@\n-        final public R visit(Symbol s, S arg)                   { return s.accept(this, arg); }\n+        public final R visit(Symbol s, S arg)                   { return s.accept(this, arg); }\n@@ -4978,1 +4978,1 @@\n-        final public R visit(Type t) { return t.accept(this, null); }\n+        public final R visit(Type t) { return t.accept(this, null); }\n@@ -4992,1 +4992,1 @@\n-        final public Type visit(Type t) { return t.accept(this, null); }\n+        public final Type visit(Type t) { return t.accept(this, null); }\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Types.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -359,1 +359,1 @@\n-        final public Type complete(DeferredType dt, ResultInfo resultInfo, DeferredAttrContext deferredAttrContext) {\n+        public final Type complete(DeferredType dt, ResultInfo resultInfo, DeferredAttrContext deferredAttrContext) {\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/ArgumentAttr.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2065,1 +2065,1 @@\n-    final static TypeTag[] primitiveTags = new TypeTag[]{\n+    static final TypeTag[] primitiveTags = new TypeTag[]{\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -98,1 +98,1 @@\n-    final static boolean checkClash = true;\n+    static final boolean checkClash = true;\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/TypeEnter.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -67,1 +67,1 @@\n-    public final static int JAVA_MAGIC = 0xCAFEBABE;\n+    public static final int JAVA_MAGIC = 0xCAFEBABE;\n@@ -70,18 +70,18 @@\n-    public final static int CONSTANT_Utf8 = 1;\n-    public final static int CONSTANT_Unicode = 2;\n-    public final static int CONSTANT_Integer = 3;\n-    public final static int CONSTANT_Float = 4;\n-    public final static int CONSTANT_Long = 5;\n-    public final static int CONSTANT_Double = 6;\n-    public final static int CONSTANT_Class = 7;\n-    public final static int CONSTANT_String = 8;\n-    public final static int CONSTANT_Fieldref = 9;\n-    public final static int CONSTANT_Methodref = 10;\n-    public final static int CONSTANT_InterfaceMethodref = 11;\n-    public final static int CONSTANT_NameandType = 12;\n-    public final static int CONSTANT_MethodHandle = 15;\n-    public final static int CONSTANT_MethodType = 16;\n-    public final static int CONSTANT_Dynamic = 17;\n-    public final static int CONSTANT_InvokeDynamic = 18;\n-    public final static int CONSTANT_Module = 19;\n-    public final static int CONSTANT_Package = 20;\n+    public static final int CONSTANT_Utf8 = 1;\n+    public static final int CONSTANT_Unicode = 2;\n+    public static final int CONSTANT_Integer = 3;\n+    public static final int CONSTANT_Float = 4;\n+    public static final int CONSTANT_Long = 5;\n+    public static final int CONSTANT_Double = 6;\n+    public static final int CONSTANT_Class = 7;\n+    public static final int CONSTANT_String = 8;\n+    public static final int CONSTANT_Fieldref = 9;\n+    public static final int CONSTANT_Methodref = 10;\n+    public static final int CONSTANT_InterfaceMethodref = 11;\n+    public static final int CONSTANT_NameandType = 12;\n+    public static final int CONSTANT_MethodHandle = 15;\n+    public static final int CONSTANT_MethodType = 16;\n+    public static final int CONSTANT_Dynamic = 17;\n+    public static final int CONSTANT_InvokeDynamic = 18;\n+    public static final int CONSTANT_Module = 19;\n+    public static final int CONSTANT_Package = 20;\n@@ -89,9 +89,9 @@\n-    public final static int REF_getField = 1;\n-    public final static int REF_getStatic = 2;\n-    public final static int REF_putField = 3;\n-    public final static int REF_putStatic = 4;\n-    public final static int REF_invokeVirtual = 5;\n-    public final static int REF_invokeStatic = 6;\n-    public final static int REF_invokeSpecial = 7;\n-    public final static int REF_newInvokeSpecial = 8;\n-    public final static int REF_invokeInterface = 9;\n+    public static final int REF_getField = 1;\n+    public static final int REF_getStatic = 2;\n+    public static final int REF_putField = 3;\n+    public static final int REF_putStatic = 4;\n+    public static final int REF_invokeVirtual = 5;\n+    public static final int REF_invokeStatic = 6;\n+    public static final int REF_invokeSpecial = 7;\n+    public static final int REF_newInvokeSpecial = 8;\n+    public static final int REF_invokeInterface = 9;\n@@ -99,5 +99,5 @@\n-    public final static int MAX_PARAMETERS = 0xff;\n-    public final static int MAX_DIMENSIONS = 0xff;\n-    public final static int MAX_CODE = 0xffff;\n-    public final static int MAX_LOCALS = 0xffff;\n-    public final static int MAX_STACK = 0xffff;\n+    public static final int MAX_PARAMETERS = 0xff;\n+    public static final int MAX_DIMENSIONS = 0xff;\n+    public static final int MAX_CODE = 0xffff;\n+    public static final int MAX_LOCALS = 0xffff;\n+    public static final int MAX_STACK = 0xffff;\n@@ -105,1 +105,1 @@\n-    public final static int PREVIEW_MINOR_VERSION = 0xffff;\n+    public static final int PREVIEW_MINOR_VERSION = 0xffff;\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/jvm\/ClassFile.java","additions":34,"deletions":34,"binary":false,"changes":68,"status":"modified"},{"patch":"@@ -234,1 +234,1 @@\n-        private final static String[] flagName = {\n+        private static final String[] flagName = {\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/jvm\/ClassWriter.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2246,1 +2246,1 @@\n-        private final static String[] mnem = new String[ByteCodeCount];\n+        private static final String[] mnem = new String[ByteCodeCount];\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/jvm\/Code.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -140,1 +140,1 @@\n-    static private boolean hasFlag(Symbol m, int flag) {\n+    private static boolean hasFlag(Symbol m, int flag) {\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/jvm\/JNIWriter.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1884,1 +1884,1 @@\n-    private final static Fragment[][] decisionTable = new Fragment[][] {\n+    private static final Fragment[][] decisionTable = new Fragment[][] {\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/parser\/JavacParser.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -49,1 +49,1 @@\n-    static public class Reference {\n+    public static class Reference {\n@@ -69,1 +69,1 @@\n-    static public class ParseException extends Exception {\n+    public static class ParseException extends Exception {\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/parser\/ReferenceParser.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -393,1 +393,1 @@\n-    final static class NamedToken extends Token {\n+    static final class NamedToken extends Token {\n@@ -435,1 +435,1 @@\n-    final static class NumericToken extends StringToken {\n+    static final class NumericToken extends StringToken {\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/parser\/Tokens.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -86,1 +86,1 @@\n-    private final static String trimSequence = \"[...]\";\n+    private static final String trimSequence = \"[...]\";\n@@ -91,1 +91,1 @@\n-    private final static int PREFERRED_LENGTH = 20;\n+    private static final int PREFERRED_LENGTH = 20;\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/tree\/Pretty.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -404,1 +404,1 @@\n-    static public class SimpleConfiguration implements Configuration {\n+    public static class SimpleConfiguration implements Configuration {\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/util\/AbstractDiagnosticFormatter.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -218,1 +218,1 @@\n-    static public class BasicConfiguration extends SimpleConfiguration {\n+    public static class BasicConfiguration extends SimpleConfiguration {\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/util\/BasicDiagnosticFormatter.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -87,3 +87,3 @@\n-    private final static int wordlen = 32;\n-    private final static int wordshift = 5;\n-    private final static int wordmask = wordlen - 1;\n+    private static final int wordlen = 32;\n+    private static final int wordshift = 5;\n+    private static final int wordmask = wordlen - 1;\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/util\/Bits.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -81,1 +81,1 @@\n-    abstract public void push(ClassSymbol s, CompletionCause phase);\n+    public abstract void push(ClassSymbol s, CompletionCause phase);\n@@ -86,1 +86,1 @@\n-    abstract public void pop();\n+    public abstract void pop();\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/util\/Dependencies.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-    private final static Object DELETED = new Object();\n+    private static final Object DELETED = new Object();\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/util\/IntHashTable.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -86,1 +86,1 @@\n-    private final static Iterator EMPTY = new Iterator() {\n+    private static final Iterator EMPTY = new Iterator() {\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/util\/Iterators.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -213,1 +213,1 @@\n-    static private String getLocalizedString(List<ResourceBundle> bundles,\n+    private static String getLocalizedString(List<ResourceBundle> bundles,\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/util\/JavacMessages.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-    final static int TabInc = 8;\n+    static final int TabInc = 8;\n@@ -44,1 +44,1 @@\n-    final static int DiagInc = 4;\n+    static final int DiagInc = 4;\n@@ -48,1 +48,1 @@\n-    final static int DetailsInc = 2;\n+    static final int DetailsInc = 2;\n@@ -52,1 +52,1 @@\n-    final static byte TAB   = 0x9;\n+    static final byte TAB   = 0x9;\n@@ -56,1 +56,1 @@\n-    final static byte LF    = 0xA;\n+    static final byte LF    = 0xA;\n@@ -60,1 +60,1 @@\n-    final static byte FF    = 0xC;\n+    static final byte FF    = 0xC;\n@@ -64,1 +64,1 @@\n-    final static byte CR    = 0xD;\n+    static final byte CR    = 0xD;\n@@ -70,1 +70,1 @@\n-    final static byte EOI   = 0x1A;\n+    static final byte EOI   = 0x1A;\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/util\/LayoutCharacters.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-    static public synchronized SharedNameTable create(Names names) {\n+    public static synchronized SharedNameTable create(Names names) {\n@@ -57,1 +57,1 @@\n-    static private synchronized void dispose(SharedNameTable t) {\n+    private static synchronized void dispose(SharedNameTable t) {\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/util\/SharedNameTable.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-    static public Name.Table create(Names names) {\n+    public static Name.Table create(Names names) {\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/util\/UnsharedNameTable.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -68,1 +68,1 @@\n-    final static int limitOnConcurrency = 3;\n+    static final int limitOnConcurrency = 3;\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/sjavac\/CompileJavaPackages.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -87,1 +87,1 @@\n-    static public void trace(String msg) {\n+    public static void trace(String msg) {\n@@ -91,1 +91,1 @@\n-    static public void debug(String msg) {\n+    public static void debug(String msg) {\n@@ -95,1 +95,1 @@\n-    static public void info(String msg) {\n+    public static void info(String msg) {\n@@ -99,1 +99,1 @@\n-    static public void warn(String msg) {\n+    public static void warn(String msg) {\n@@ -103,1 +103,1 @@\n-    static public void error(String msg) {\n+    public static void error(String msg) {\n@@ -107,1 +107,1 @@\n-    static public void error(Throwable t) {\n+    public static void error(Throwable t) {\n@@ -111,1 +111,1 @@\n-    static public void log(Level l, String msg) {\n+    public static void log(Level l, String msg) {\n@@ -125,1 +125,1 @@\n-    static public boolean isDebugging() {\n+    public static boolean isDebugging() {\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/sjavac\/Log.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -189,1 +189,1 @@\n-    static public Package load(Module module, String l) {\n+    public static Package load(Module module, String l) {\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/sjavac\/Package.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -151,1 +151,1 @@\n-    static public Source load(Package lastPackage, String l, boolean isGenerated) {\n+    public static Source load(Package lastPackage, String l, boolean isGenerated) {\n@@ -188,1 +188,1 @@\n-    static public void scanRoot(File root,\n+    public static void scanRoot(File root,\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/sjavac\/Source.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -97,1 +97,1 @@\n-            \/\/ from, say, 0 to 0L? (And the field is public final static so that\n+            \/\/ from, say, 0 to 0L? (And the field is public static final so that\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/sjavac\/comp\/PubapiVisitor.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -186,1 +186,1 @@\n-    private final static String MODIFIERS = Stream.of(Modifier.values())\n+    private static final String MODIFIERS = Stream.of(Modifier.values())\n@@ -191,4 +191,4 @@\n-    private final static Pattern MOD_PATTERN = Pattern.compile(\"(\" + MODIFIERS + \" )*\");\n-    private final static Pattern METHOD_PATTERN = Pattern.compile(\"(?<ret>.+?) (?<name>\\\\S+)\\\\((?<params>.*)\\\\)( throws (?<throws>.*))?\");\n-    private final static Pattern VAR_PATTERN = Pattern.compile(\"VAR (?<modifiers>(\"+MODIFIERS+\" )*)(?<type>.+?) (?<id>\\\\S+)( = (?<val>.*))?\");\n-    private final static Pattern TYPE_PATTERN = Pattern.compile(\"TYPE (?<modifiers>(\"+MODIFIERS+\" )*)(?<fullyQualified>\\\\S+)\");\n+    private static final Pattern MOD_PATTERN = Pattern.compile(\"(\" + MODIFIERS + \" )*\");\n+    private static final Pattern METHOD_PATTERN = Pattern.compile(\"(?<ret>.+?) (?<name>\\\\S+)\\\\((?<params>.*)\\\\)( throws (?<throws>.*))?\");\n+    private static final Pattern VAR_PATTERN = Pattern.compile(\"VAR (?<modifiers>(\"+MODIFIERS+\" )*)(?<type>.+?) (?<id>\\\\S+)( = (?<val>.*))?\");\n+    private static final Pattern TYPE_PATTERN = Pattern.compile(\"TYPE (?<modifiers>(\"+MODIFIERS+\" )*)(?<fullyQualified>\\\\S+)\");\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/sjavac\/pubapi\/PubApi.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -58,1 +58,1 @@\n-    private final static int magicNr = 0x1174;\n+    private static final int magicNr = 0x1174;\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/sjavac\/server\/PortFile.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-    private final static int CHECK_PORTFILE_INTERVAL = 5000;\n+    private static final int CHECK_PORTFILE_INTERVAL = 5000;\n@@ -50,3 +50,3 @@\n-    final private Timer timer = new Timer();\n-    final private PortFile portFile;\n-    final private SjavacServer server;\n+    private final Timer timer = new Timer();\n+    private final PortFile portFile;\n+    private final SjavacServer server;\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/sjavac\/server\/PortFileMonitor.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -62,1 +62,1 @@\n-    public final static String LINE_TYPE_RC = \"RC\";\n+    public static final String LINE_TYPE_RC = \"RC\";\n@@ -64,3 +64,3 @@\n-    final private String portfilename;\n-    final private int poolsize;\n-    final private int keepalive;\n+    private final String portfilename;\n+    private final int poolsize;\n+    private final int keepalive;\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/sjavac\/server\/SjavacServer.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}