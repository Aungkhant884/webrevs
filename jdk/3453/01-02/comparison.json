{"files":[{"patch":"@@ -403,3 +403,0 @@\n-    if (should_terminate()) {         \\\n-      return;                         \\\n-    }                                 \\\n","filename":"src\/hotspot\/share\/gc\/z\/zDriver.cpp","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -61,1 +61,2 @@\n-      wait_page_released();\n+      const bool success = wait_page_released();\n+      assert(success, \"Should always succeed\");\n@@ -132,1 +133,1 @@\n-void ZForwarding::wait_page_released() const {\n+bool ZForwarding::wait_page_released() const {\n@@ -134,1 +135,0 @@\n-    ZStatTimer timer(ZCriticalPhaseRelocationStall);\n@@ -136,0 +136,5 @@\n+    if (_ref_abort) {\n+      return false;\n+    }\n+\n+    ZStatTimer timer(ZCriticalPhaseRelocationStall);\n@@ -137,0 +142,4 @@\n+      if (_ref_abort) {\n+        return false;\n+      }\n+\n@@ -140,0 +149,2 @@\n+\n+  return true;\n@@ -157,0 +168,8 @@\n+void ZForwarding::abort_page() {\n+  ZLocker<ZConditionLock> locker(&_ref_lock);\n+  assert(Atomic::load(&_ref_count) > 0, \"Invalid state\");\n+  assert(!_ref_abort, \"Invalid state\");\n+  _ref_abort = true;\n+  _ref_lock.notify_all();\n+}\n+\n","filename":"src\/hotspot\/share\/gc\/z\/zForwarding.cpp","additions":22,"deletions":3,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -51,0 +51,1 @@\n+  bool                   _ref_abort;\n@@ -73,1 +74,1 @@\n-  void wait_page_released() const;\n+  bool wait_page_released() const;\n@@ -75,0 +76,1 @@\n+  void abort_page();\n","filename":"src\/hotspot\/share\/gc\/z\/zForwarding.hpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -62,0 +62,1 @@\n+    _ref_abort(false),\n","filename":"src\/hotspot\/share\/gc\/z\/zForwarding.inline.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -107,3 +107,8 @@\n-    \/\/ Failed to relocate object. Wait for a worker thread to\n-    \/\/ complete relocation of this page, and then forward object.\n-    forwarding->wait_page_released();\n+    \/\/ Failed to relocate object. Wait for a worker thread to complete\n+    \/\/ relocation of this page, and then forward the object. If the GC\n+    \/\/ aborts the relocation phase before the page has been relocated,\n+    \/\/ then wait return false and we just forward the object in-place.\n+    if (!forwarding->wait_page_released()) {\n+      \/\/ Forward object in-place\n+      return forwarding_insert(forwarding, from_addr, from_addr, &cursor);\n+    }\n@@ -343,1 +348,0 @@\n-    \/\/ Relocate objects\n@@ -345,0 +349,8 @@\n+\n+    \/\/ Check if we should abort\n+    if (ZAbort::should_abort()) {\n+      _forwarding->abort_page();\n+      return;\n+    }\n+\n+    \/\/ Relocate objects\n@@ -400,4 +412,0 @@\n-\n-      if (ZAbort::should_abort()) {\n-        break;\n-      }\n","filename":"src\/hotspot\/share\/gc\/z\/zRelocate.cpp","additions":16,"deletions":8,"binary":false,"changes":24,"status":"modified"}]}