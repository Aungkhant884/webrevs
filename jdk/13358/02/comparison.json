{"files":[{"patch":"@@ -441,1 +441,1 @@\n-  MutexLocker ml(current, UnregisteredClassesTable_lock);\n+  MutexLocker ml(current, UnregisteredClassesTable_lock, Mutex::_no_safepoint_check_flag);\n@@ -525,8 +525,10 @@\n-  if (_unregistered_classes_table != nullptr) {\n-    \/\/ Remove the class from _unregistered_classes_table: keep the entry but\n-    \/\/ set it to null. This ensure no classes with the same name can be\n-    \/\/ added again.\n-    MutexLocker ml(Thread::current(), UnregisteredClassesTable_lock);\n-    InstanceKlass** v = _unregistered_classes_table->get(klass->name());\n-    if (v != nullptr) {\n-      *v = nullptr;\n+  if (Arguments::is_dumping_archive() || ClassListWriter::is_enabled()) {\n+    MutexLocker ml(Thread::current(), UnregisteredClassesTable_lock, Mutex::_no_safepoint_check_flag);\n+    if (_unregistered_classes_table != nullptr) {\n+      \/\/ Remove the class from _unregistered_classes_table: keep the entry but\n+      \/\/ set it to null. This ensure no classes with the same name can be\n+      \/\/ added again.\n+      InstanceKlass** v = _unregistered_classes_table->get(klass->name());\n+      if (v != nullptr) {\n+        *v = nullptr;\n+      }\n@@ -534,0 +536,2 @@\n+  } else {\n+    assert(_unregistered_classes_table == nullptr, \"must not be used\");\n","filename":"src\/hotspot\/share\/classfile\/systemDictionaryShared.cpp","additions":13,"deletions":9,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -327,0 +327,1 @@\n+  MUTEX_DEFN(UnregisteredClassesTable_lock   , PaddedMutex  , nosafepoint-1);\n","filename":"src\/hotspot\/share\/runtime\/mutexLocker.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}