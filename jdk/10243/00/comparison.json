{"files":[{"patch":"@@ -29,0 +29,1 @@\n+import java.util.Objects;\n@@ -327,1 +328,1 @@\n-    STRICT(Modifier.STRICT, true, Location.SET_METHOD,\n+    STRICT(Modifier.STRICT, true, Location.EMPTY_SET,\n@@ -473,0 +474,1 @@\n+        Objects.requireNonNull(cffv);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/AccessFlag.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 8266670\n+ * @bug 8266670 8293626\n@@ -45,0 +45,1 @@\n+        testLocationsNullHandling();\n@@ -150,0 +151,11 @@\n+\n+    private static void testLocationsNullHandling() {\n+        for (var flag : AccessFlag.values() ) {\n+            try {\n+                flag.locations(null);\n+                throw new RuntimeException(\"Did not get NPE on \" + flag + \".location(null)\");\n+            } catch (NullPointerException npe ) {\n+                ; \/\/ Expected\n+            }\n+        }\n+    }\n","filename":"test\/jdk\/java\/lang\/reflect\/AccessFlag\/BasicAccessFlagTest.java","additions":13,"deletions":1,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 8289106\n+ * @bug 8289106 8293627\n@@ -81,0 +81,1 @@\n+        testLatestMatch();\n@@ -272,0 +273,15 @@\n+\n+    private static void testLatestMatch() {\n+        \/\/ Verify accessFlag.locations() and\n+        \/\/ accessFlag.locations(ClassFileFormatVersion.latest()) are\n+        \/\/ consistent\n+        var LATEST = ClassFileFormatVersion.latest();\n+        for (var accessFlag : AccessFlag.values()) {\n+            var locationSet = accessFlag.locations();\n+            var locationLatestSet = accessFlag.locations(LATEST);\n+            if (!locationSet.equals(locationLatestSet)) {\n+                throw new RuntimeException(\"Unequal location sets for \" + accessFlag);\n+            }\n+        }\n+    }\n+\n","filename":"test\/jdk\/java\/lang\/reflect\/AccessFlag\/VersionedLocationsTest.java","additions":17,"deletions":1,"binary":false,"changes":18,"status":"modified"}]}