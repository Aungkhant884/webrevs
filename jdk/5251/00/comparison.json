{"files":[{"patch":"@@ -3428,0 +3428,5 @@\n+      if (_g1h->collector_state()->in_concurrent_start_gc()) {\n+        \/\/ Prepare region for marking.\n+        hr->note_start_of_marking();\n+      }\n+\n@@ -3444,1 +3449,1 @@\n-      log_debug(gc, humongous)(\"Humongous region %u (object size \" SIZE_FORMAT \" @ \" PTR_FORMAT \") remset \" SIZE_FORMAT \" code roots \" SIZE_FORMAT \" marked %d reclaim candidate %d type array %d\",\n+      log_debug(gc, humongous)(\"Humongous region %u (object size \" SIZE_FORMAT \" @ \" PTR_FORMAT \") remset \" SIZE_FORMAT \" code roots \" SIZE_FORMAT \" marked (prev\/next) %d\/%d reclaim candidate %d type array %d\",\n@@ -3450,0 +3455,1 @@\n+                               _g1h->concurrent_mark()->prev_mark_bitmap()->is_marked(hr->bottom()),\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.cpp","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -691,8 +691,0 @@\n-class NoteStartOfMarkHRClosure : public HeapRegionClosure {\n-public:\n-  bool do_heap_region(HeapRegion* r) {\n-    r->note_start_of_marking();\n-    return false;\n-  }\n-};\n-\n@@ -705,4 +697,0 @@\n-  \/\/ For each region note start of marking.\n-  NoteStartOfMarkHRClosure startcl;\n-  _g1h->heap_region_iterate(&startcl);\n-\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentMark.cpp","additions":0,"deletions":12,"binary":false,"changes":12,"status":"modified"}]}