{"files":[{"patch":"@@ -50,1 +50,1 @@\n-    private final Cleaner.Cleanable cleanable;\n+    private Cleaner.Cleanable cleanable;\n@@ -217,2 +217,0 @@\n-\n-        this.cleanable = null;\n@@ -239,2 +237,0 @@\n-\n-        this.cleanable = null;\n@@ -247,1 +243,0 @@\n-        pContext = pCtxt;\n@@ -249,0 +244,1 @@\n+        setContext(pCtxt);\n@@ -268,2 +264,0 @@\n-\n-        cleanable = Krb5Util.cleaner.register(this, disposerFor(stub, pCtxt));\n@@ -388,0 +382,17 @@\n+    \/\/ Note: this method is also used in native code.\n+    private void setContext(long pContext) {\n+        \/\/ Dispose the existing context.\n+        if (this.pContext != 0L && cleanable != null) {\n+            cleanable.clean();\n+        }\n+\n+        \/\/ Reset the context\n+        this.pContext = pContext;\n+\n+        \/\/ Register the cleaner.\n+        if (pContext != 0L) {\n+            cleanable = Krb5Util.cleaner.register(this,\n+                    disposerFor(cStub, pContext));\n+        }\n+    }\n+\n@@ -390,3 +401,1 @@\n-            if (stub != null && pContext != 0) {\n-                stub.deleteContext(pContext);\n-            }\n+            stub.deleteContext(pContext);\n","filename":"src\/java.security.jgss\/share\/classes\/sun\/security\/jgss\/wrapper\/NativeGSSContext.java","additions":20,"deletions":11,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -940,1 +940,1 @@\n-    (*env)->SetLongField(env, jcontextSpi, FID_NativeGSSContext_pContext,\n+    (*env)->CallVoidMethod(env, jcontextSpi, MID_NativeGSSContext_setContext,\n@@ -1060,1 +1060,1 @@\n-    (*env)->SetLongField(env, jcontextSpi, FID_NativeGSSContext_pContext,\n+    (*env)->CallVoidMethod(env, jcontextSpi, MID_NativeGSSContext_setContext,\n","filename":"src\/java.security.jgss\/share\/native\/libj2gss\/GSSLibStub.c","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -84,0 +84,1 @@\n+jmethodID MID_NativeGSSContext_setContext;\n@@ -293,0 +294,9 @@\n+\n+  MID_NativeGSSContext_setContext =\n+    (*env)->GetMethodID(env, CLS_NativeGSSContext, \"setContext\",\n+                        \"(J)V\");\n+  if (MID_NativeGSSContext_setContext == NULL) {\n+    printf(\"Couldn't find NativeGSSContext.setContext(long) method\\n\");\n+    return JNI_ERR;\n+  }\n+\n","filename":"src\/java.security.jgss\/share\/native\/libj2gss\/NativeUtil.c","additions":11,"deletions":1,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -76,0 +76,1 @@\n+  extern jmethodID MID_NativeGSSContext_setContext;\n","filename":"src\/java.security.jgss\/share\/native\/libj2gss\/NativeUtil.h","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-        for (int i = 0; i < 10; i++) {\n+        for (int i = 0; i < 10 && whm.size() > 0; i++) {\n","filename":"test\/jdk\/sun\/security\/jgss\/GssContextCleanup.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -51,1 +51,1 @@\n-        for (int i = 0; i < 10; i++) {\n+        for (int i = 0; i < 10 && whm.size() > 0; i++) {\n","filename":"test\/jdk\/sun\/security\/jgss\/GssNameCleanup.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}