{"files":[{"patch":"@@ -721,1 +721,1 @@\n-  if (node->Opcode() == Op_ShenandoahLoadReferenceBarrier) return true;\n+  if (node->Opcode() == Op_ShenandoahLoadReferenceBarrier || node->Opcode() == Op_ShenandoahIUBarrier) return true;\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/c2\/shenandoahBarrierSetC2.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,74 @@\n+\/*\n+ * Copyright (c) 2022, Red Hat, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * bug 8280885\n+ * @summary Shenandoah: Some tests failed with \"EA: missing allocation reference path\"\n+ * @requires vm.gc.Shenandoah\n+ *\n+ * @run main\/othervm -XX:-BackgroundCompilation -XX:+UseShenandoahGC -XX:+UnlockExperimentalVMOptions -XX:ShenandoahGCMode=iu\n+ *                   -XX:CompileCommand=dontinline,TestUnexpectedIUBarrierEA::notInlined TestUnexpectedIUBarrierEA\n+ *\/\n+\n+public class TestUnexpectedIUBarrierEA {\n+\n+    private static Object field;\n+\n+    public static void main(String[] args) {\n+        for (int i = 0; i < 20_000; i++) {\n+            test(false);\n+        }\n+    }\n+\n+    private static void test(boolean flag) {\n+        A a = new A();\n+        B b = new B();\n+        b.field = a;\n+        notInlined();\n+        Object o = b.field;\n+        if (!(o instanceof A)) {\n+\n+        }\n+        C c = new C();\n+        c.field = o;\n+        if (flag) {\n+            field = c.field;\n+        }\n+    }\n+\n+    private static void notInlined() {\n+\n+    }\n+\n+    private static class A {\n+    }\n+\n+    private static class B {\n+        public Object field;\n+    }\n+\n+    private static class C {\n+        public Object field;\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/compiler\/TestUnexpectedIUBarrierEA.java","additions":74,"deletions":0,"binary":false,"changes":74,"status":"added"}]}