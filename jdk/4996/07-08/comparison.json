{"files":[{"patch":"@@ -2665,1 +2665,1 @@\n-  \/\/ Now create the same exception with this stacktrace and thread name.\n+  \/\/ Now create the message with the original exception and thread name.\n","filename":"src\/hotspot\/share\/classfile\/javaClasses.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,1 +27,2 @@\n- * @summary Test that the NCDFE saves original exception during class initialization,\n+ * @summary Test that the NCDFE saves the stack trace for the original exception\n+ *          during class initialization with ExceptionInInitializationError,\n@@ -53,3 +54,0 @@\n-            if (true) foo();\n-        }\n-        static private void foo() throws SpecialException {\n@@ -60,1 +58,1 @@\n-    static public class InitOOM {\n+    static public class ThrowsOOM {\n@@ -62,5 +60,4 @@\n-            if (true) foo();\n-        }\n-        static private void foo() {\n-            \/\/ Actually getting an OOM might be fragile but it was tested.\n-            throw new OutOfMemoryError(\"Java heap space\");\n+            if (true) {\n+                \/\/ Actually getting an OOM might be fragile but it was tested.\n+                throw new OutOfMemoryError(\"Java heap space\");\n+            }\n@@ -96,1 +93,1 @@\n-        \"java.lang.NoClassDefFoundError: Cound not initialize class InitExceptionUnloadTest$InitOOM\",\n+        \"java.lang.NoClassDefFoundError: Cound not initialize class InitExceptionUnloadTest$ThrowsOOM\",\n@@ -104,1 +101,1 @@\n-        \"InitExceptionUnloadTest$InitOOM\" };\n+        \"InitExceptionUnloadTest$ThrowsOOM\" };\n@@ -112,1 +109,1 @@\n-            for (int tries = 2; tries--> 0; ) {\n+            for (int tries = 2; tries-- > 0; ) {\n","filename":"test\/hotspot\/jtreg\/runtime\/ClassInitErrors\/InitExceptionUnloadTest.java","additions":10,"deletions":13,"binary":false,"changes":23,"status":"modified"}]}