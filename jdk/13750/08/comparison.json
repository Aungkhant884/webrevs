{"files":[{"patch":"@@ -774,1 +774,1 @@\n-ssize_t os::write(int fd, const void *buf, unsigned int nBytes) {\n+ssize_t os::pd_write(int fd, const void *buf, size_t nBytes) {\n@@ -776,1 +776,1 @@\n-  RESTARTABLE(::write(fd, buf, (size_t) nBytes), res);\n+  RESTARTABLE(::write(fd, buf, nBytes), res);\n","filename":"src\/hotspot\/os\/posix\/os_posix.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -100,4 +100,2 @@\n-    if (PrintMiscellaneous && Verbose) {\n-      warning(\"Could not create Perfdata save file: %s: %s\\n\",\n-              destfile, os::strerror(errno));\n-    }\n+    warning(\"Could not create Perfdata save file: %s: %s\\n\",\n+            destfile, os::strerror(errno));\n@@ -107,13 +105,4 @@\n-    for (size_t remaining = size; remaining > 0;) {\n-\n-      result = os::write(fd, addr, remaining);\n-      if (result == OS_ERR) {\n-        if (PrintMiscellaneous && Verbose) {\n-          warning(\"Could not write Perfdata save file: %s: %s\\n\",\n-                  destfile, os::strerror(errno));\n-        }\n-        break;\n-      }\n-\n-      remaining -= (size_t)result;\n-      addr += result;\n+    bool successful_write = os::write(fd, addr, size);\n+    if (!successful_write) {\n+      warning(\"Could not write Perfdata save file: %s: %s\\n\",\n+              destfile, os::strerror(errno));\n@@ -122,0 +111,1 @@\n+\n@@ -123,4 +113,2 @@\n-    if (PrintMiscellaneous && Verbose) {\n-      if (result == OS_ERR) {\n-        warning(\"Could not close %s: %s\\n\", destfile, os::strerror(errno));\n-      }\n+    if (result == OS_ERR) {\n+      warning(\"Could not close %s: %s\\n\", destfile, os::strerror(errno));\n@@ -964,2 +952,1 @@\n-    result = os::write(fd, &zero_int, 1);\n-    if (result != 1) {\n+    if (!os::write(fd, &zero_int, 1)) {\n@@ -969,0 +956,1 @@\n+      result = OS_ERR;\n","filename":"src\/hotspot\/os\/posix\/perfMemory_posix.cpp","additions":11,"deletions":23,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -4774,2 +4774,10 @@\n-ssize_t os::write(int fd, const void *buf, unsigned int nBytes) {\n-  return ::write(fd, buf, nBytes);\n+ssize_t os::pd_write(int fd, const void *buf, size_t nBytes) {\n+  while(nBytes > 0) {\n+    unsigned int len = nBytes > INT_MAX ? INT_MAX : (unsigned int)nBytes;\n+    ssize_t written_bytes = ::write(fd, buf, len);\n+    if (written_bytes < 0) {\n+      return written_bytes;\n+    }\n+    nBytes -= written_bytes;\n+    buf = (char *)buf + written_bytes;\n+  }\n","filename":"src\/hotspot\/os\/windows\/os_windows.cpp","additions":10,"deletions":2,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -1688,2 +1688,1 @@\n-  ssize_t n = os::write(_fd, buffer, (unsigned int)nbytes);\n-  if (n < 0 || (size_t)n != nbytes) {\n+  if (!os::write(_fd, buffer, nbytes)) {\n","filename":"src\/hotspot\/share\/cds\/filemap.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -383,1 +383,1 @@\n-              \"Unable to recover JFR data\");\n+              \"Unable to recover JFR data, read failed.\");\n@@ -388,2 +388,6 @@\n-        bytes_written += (int64_t)os::write(emergency_fd, copy_block, bytes_read - bytes_written);\n-        assert(bytes_read == bytes_written, \"invariant\");\n+        if (!os::write(emergency_fd, copy_block, bytes_read - bytes_written)) {\n+          log_info(jfr)( \/\/ For user, should not be \"jfr, system\"\n+              \"Unable to recover JFR data, write failed.\");\n+          break;\n+        }\n+        bytes_written = bytes_read;\n","filename":"src\/hotspot\/share\/jfr\/recorder\/repository\/jfrEmergencyDump.cpp","additions":8,"deletions":4,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -79,2 +79,2 @@\n-    const ssize_t num_written = os::write(_fd, buf, nBytes);\n-    if (errno == ENOSPC) {\n+    const bool successful_write = os::write(_fd, buf, nBytes);\n+    if (!successful_write && errno == ENOSPC) {\n@@ -83,4 +83,4 @@\n-    guarantee(num_written > 0, \"Nothing got written, or os::write() failed\");\n-    _stream_pos += num_written;\n-    len -= num_written;\n-    buf += num_written;\n+    guarantee(successful_write, \"Not all the bytes got written, or os::write() failed\");\n+    _stream_pos += nBytes;\n+    len -= nBytes;\n+    buf += nBytes;\n","filename":"src\/hotspot\/share\/jfr\/writers\/jfrStreamWriterHost.inline.hpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2900,1 +2900,1 @@\n-    ssize_t count = os::write(defaultStream::output_fd(), s, (int)len);\n+    bool dummy = os::write(defaultStream::output_fd(), s, len);\n","filename":"src\/hotspot\/share\/prims\/jvm.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1381,0 +1381,16 @@\n+bool os::write(int fd, const void *buf, size_t nBytes) {\n+  ssize_t res;\n+\n+  while (nBytes > 0) {\n+    res = pd_write(fd, buf, nBytes);\n+    if (res == OS_ERR) {\n+      return false;\n+    }\n+    buf = (void *)((char *)buf + nBytes);\n+    nBytes -= res;\n+  }\n+\n+  return true;\n+}\n+\n+\n","filename":"src\/hotspot\/share\/runtime\/os.cpp","additions":16,"deletions":0,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -232,0 +232,2 @@\n+  \/\/ Returns number of bytes written on success, OS_ERR on failure.\n+  static ssize_t pd_write(int fd, const void *buf, size_t nBytes);\n@@ -647,1 +649,2 @@\n-  static ssize_t write(int fd, const void *buf, unsigned int nBytes);\n+  \/\/ Writes the bytes completely. Returns true on success, false otherwise.\n+  static bool write(int fd, const void *buf, size_t nBytes);\n","filename":"src\/hotspot\/share\/runtime\/os.hpp","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -58,8 +58,2 @@\n-  while (size > 0) {\n-    ssize_t n = os::write(_fd, buf, (uint) size);\n-    if (n <= 0) {\n-      return os::strerror(errno);\n-    }\n-\n-    buf += n;\n-    size -= n;\n+  if (!os::write(_fd, buf, (size_t)size)) {\n+    return os::strerror(errno);\n","filename":"src\/hotspot\/share\/services\/heapDumperCompression.cpp","additions":2,"deletions":8,"binary":false,"changes":10,"status":"modified"}]}