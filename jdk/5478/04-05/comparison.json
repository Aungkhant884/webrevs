{"files":[{"patch":"@@ -116,2 +116,1 @@\n-  \/\/ Returns the memory allocation options for the memory objects on the card set heap. The returned\n-  \/\/ array must be freed by the caller.\n+  \/\/ Returns the memory allocation options for the memory objects on the card set heap.\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CardSet.hpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -123,1 +123,3 @@\n-  const G1SegmentedArrayBuffer<mtGCCardSet>* first_array_buffer = _segmented_array.first_array_buffer();\n+  uint highest = _segmented_array.first_array_buffer() != nullptr\n+               ? _segmented_array.first_array_buffer()->num_elems()\n+               : 0;\n@@ -131,1 +133,1 @@\n-            first_array_buffer != nullptr ? first_array_buffer->num_elems() : 0,\n+            highest,\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CardSetMemory.cpp","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -43,2 +43,1 @@\n-  uint elem_size = _segmented_array.elem_size();\n-  assert(elem_size > 0, \"instance size not set.\");\n+  assert(_segmented_array.elem_size() > 0, \"instance size not set.\");\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CardSetMemory.inline.hpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -124,1 +124,0 @@\n-public:\n@@ -129,2 +128,2 @@\n-  G1SegmentedArrayAllocOptions(uint elem_size, uint initial_num_elems = MinimumBufferSize,\n-                               uint max_num_elems = MaximumBufferSize, uint alignment = BufferAlignment) :\n+public:\n+  G1SegmentedArrayAllocOptions(uint elem_size, uint initial_num_elems, uint max_num_elems, uint alignment) :\n","filename":"src\/hotspot\/share\/gc\/g1\/g1SegmentedArray.hpp","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -210,2 +210,1 @@\n-  uint es = elem_size();\n-  assert(es > 0, \"instance size not set.\");\n+  assert(elem_size() > 0, \"instance size not set.\");\n","filename":"src\/hotspot\/share\/gc\/g1\/g1SegmentedArray.inline.hpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"}]}