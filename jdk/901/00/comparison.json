{"files":[{"patch":"@@ -786,1 +786,0 @@\n-javax\/swing\/ToolTipManager\/Test6256140.java 8233560 macosx-all\n","filename":"test\/jdk\/ProblemList.txt","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -43,0 +43,1 @@\n+    private static JFrame frame;\n@@ -45,7 +46,24 @@\n-\n-        Robot robot = new Robot();\n-        robot.setAutoDelay(10);\n-\n-        SwingUtilities.invokeAndWait(new Runnable() {\n-            public void run() {\n-                createAndShowGUI();\n+        try {\n+            Robot robot = new Robot();\n+            robot.setAutoDelay(100);\n+\n+            SwingUtilities.invokeAndWait(new Runnable() {\n+                public void run() {\n+                    createAndShowGUI();\n+                }\n+            });\n+            robot.waitForIdle();\n+            robot.delay(1000);\n+\n+            Point point = ft.getLocationOnScreen();\n+            robot.mouseMove(point.x, point.y);\n+            robot.waitForIdle();\n+            robot.mouseMove(point.x + 3, point.y + 3);\n+            robot.waitForIdle();\n+\n+            robot.keyPress(KeyEvent.VK_A);\n+            robot.keyRelease(KeyEvent.VK_A);\n+            robot.waitForIdle();\n+\n+            if (!isTooltipShowning()) {\n+                throw new RuntimeException(\"Tooltip is not shown\");\n@@ -53,6 +71,0 @@\n-        });\n-        robot.waitForIdle();\n-\n-        Point point = ft.getLocationOnScreen();\n-        robot.mouseMove(point.x, point.y);\n-        robot.mouseMove(point.x + 3, point.y + 3);\n@@ -60,7 +72,3 @@\n-        robot.keyPress(KeyEvent.VK_A);\n-        robot.keyRelease(KeyEvent.VK_A);\n-        robot.waitForIdle();\n-\n-        if (!isTooltipShowning()) {\n-            throw new RuntimeException(\"Tooltip is not shown\");\n-        }\n+            robot.keyPress(KeyEvent.VK_ESCAPE);\n+            robot.keyRelease(KeyEvent.VK_ESCAPE);\n+            robot.waitForIdle();\n@@ -68,7 +76,3 @@\n-        robot.keyPress(KeyEvent.VK_ESCAPE);\n-        robot.keyRelease(KeyEvent.VK_ESCAPE);\n-        robot.waitForIdle();\n-\n-        if (isTooltipShowning()) {\n-            throw new RuntimeException(\"Tooltip must be hidden now\");\n-        }\n+            if (isTooltipShowning()) {\n+                throw new RuntimeException(\"Tooltip must be hidden now\");\n+            }\n@@ -76,3 +80,3 @@\n-        if (isTextEqual()) {\n-            throw new RuntimeException(\"FormattedTextField must *not* cancel the updated value this time\");\n-        }\n+            if (isTextEqual()) {\n+                throw new RuntimeException(\"FormattedTextField must *not* cancel the updated value this time\");\n+            }\n@@ -80,3 +84,3 @@\n-        robot.keyPress(KeyEvent.VK_ESCAPE);\n-        robot.keyRelease(KeyEvent.VK_ESCAPE);\n-        robot.waitForIdle();\n+            robot.keyPress(KeyEvent.VK_ESCAPE);\n+            robot.keyRelease(KeyEvent.VK_ESCAPE);\n+            robot.waitForIdle();\n@@ -84,2 +88,7 @@\n-        if (!isTextEqual()) {\n-            throw new RuntimeException(\"FormattedTextField must cancel the updated value\");\n+            if (!isTextEqual()) {\n+                throw new RuntimeException(\"FormattedTextField must cancel the updated value\");\n+            }\n+        } finally {\n+            if (frame != null) {\n+                SwingUtilities.invokeAndWait(frame::dispose);\n+            }\n@@ -119,1 +128,1 @@\n-        final JFrame frame = new JFrame();\n+        frame = new JFrame();\n","filename":"test\/jdk\/javax\/swing\/ToolTipManager\/Test6256140.java","additions":45,"deletions":36,"binary":false,"changes":81,"status":"modified"}]}