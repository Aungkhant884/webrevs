{"files":[{"patch":"@@ -36,1 +36,5 @@\n-import java.util.*;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Objects;\n","filename":"src\/java.base\/share\/classes\/java\/lang\/runtime\/TemplateRuntime.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -50,2 +50,5 @@\n-     * Construct a {@link MethodHandle} that constructs a result based on the\n-     * bootstrap method information.\n+     * This method creates a {@link MethodHandle} that when invoked with arguments of\n+     * those specified in {@code type} returns a result that equals that returned by\n+     * the template processor's process method. The difference being that this method\n+     * can preview the template's fragments and value types in advance of usage and\n+     * thereby has the opportunity to produce a specialized implementation.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/template\/ProcessorLinkage.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -50,1 +50,3 @@\n-public interface TemplateProcessor<R> extends ValidatingProcessor<R, RuntimeException> {}\n+public interface TemplateProcessor<R> extends ValidatingProcessor<R, RuntimeException> {\n+\n+}\n","filename":"src\/java.base\/share\/classes\/java\/lang\/template\/TemplateProcessor.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"}]}