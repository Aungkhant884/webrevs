{"files":[{"patch":"@@ -30,0 +30,1 @@\n+import jdk.internal.util.FormatConcatItem;\n@@ -35,1 +36,0 @@\n-import java.util.FormatConcatItem;\n","filename":"src\/java.base\/share\/classes\/java\/lang\/StringConcatHelper.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+import jdk.internal.util.FormatConcatItem;\n@@ -37,1 +38,0 @@\n-import java.util.FormatConcatItem;\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/StringConcatFactory.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -225,1 +225,1 @@\n-     * Tests for equality of two {@link StringTemplate}.\n+     * Tests equality of two {@link StringTemplate}.\n@@ -344,1 +344,1 @@\n-     * System.out.println(RAW.\"\\{x} = \\{y} = \\{x + y}\");\n+     * System.out.println(RAW.\"\\{x} = \\{y} = \\{x + y}\"); \/\/ @highlight substring=\"RAW\"\n@@ -346,1 +346,1 @@\n-     * System.out.println(STR.\"\\{x} = \\{y} = \\{x + y}\");\n+     * System.out.println(STR.\"\\{x} = \\{y} = \\{x + y}\"); \/\/ @highlight substring=\"STR\"\n","filename":"src\/java.base\/share\/classes\/java\/lang\/template\/StringTemplate.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1,84 +0,0 @@\n-\/*\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package java.util;\n-\n-import java.util.FormatItem.FormatItemDecimal;\n-import java.util.FormatItem.FormatItemHexadecimal;\n-import java.util.FormatItem.FormatItemOctal;\n-import java.util.FormatItem.FormatItemBoolean;\n-import java.util.FormatItem.FormatItemCharacter;\n-import java.util.FormatItem.FormatItemString;\n-import java.util.FormatItem.FormatItemFormatSpecifier;\n-import java.util.FormatItem.FormatItemModifier;\n-import java.util.FormatItem.FormatItemFillLeft;\n-import java.util.FormatItem.FormatItemFillRight;\n-import java.util.FormatItem.FormatItemUpper;\n-import java.util.FormatItem.FormatItemNull;\n-\n-import jdk.internal.javac.PreviewFeature;\n-\n-\/**\n- * Implementations of this class provide information necessary to\n- * assist {@link java.lang.invoke.StringConcatFactory} perform optimal\n- * insertion.\n- *\n- * @since 20\n- *\/\n-@PreviewFeature(feature=PreviewFeature.Feature.STRING_TEMPLATES)\n-public sealed interface FormatConcatItem\n-    permits FormatItemDecimal,\n-            FormatItemHexadecimal,\n-            FormatItemOctal,\n-            FormatItemBoolean,\n-            FormatItemCharacter,\n-            FormatItemString,\n-            FormatItemFormatSpecifier,\n-            FormatItemModifier,\n-            FormatItemFillLeft,\n-            FormatItemFillRight,\n-            FormatItemUpper,\n-            FormatItemNull\n-{\n-    \/**\n-     * Calculate the length of the insertion.\n-     *\n-     * @param lengthCoder current value of the length + coder\n-     * @return adjusted value of the length + coder\n-     *\/\n-    long mix(long lengthCoder);\n-\n-    \/**\n-     * Insert content into buffer prior to the current length.\n-     *\n-     * @param lengthCoder current value of the length + coder\n-     * @param buffer      buffer to right into\n-     *\n-     * @return adjusted value of the length + coder\n-     *\n-     * @throws Throwable if fails to prepend value (unusual).\n-     *\/\n-    long prepend(long lengthCoder, byte[] buffer) throws Throwable;\n-}\n","filename":"src\/java.base\/share\/classes\/java\/util\/FormatConcatItem.java","additions":0,"deletions":84,"binary":false,"changes":84,"status":"deleted"},{"patch":"@@ -41,0 +41,1 @@\n+import jdk.internal.util.FormatConcatItem;\n","filename":"src\/java.base\/share\/classes\/java\/util\/FormatItem.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -39,0 +39,1 @@\n+import jdk.internal.util.FormatConcatItem;\n","filename":"src\/java.base\/share\/classes\/java\/util\/FormatterBuilder.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -0,0 +1,58 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.internal.util;\n+\n+import jdk.internal.javac.PreviewFeature;\n+\n+\/**\n+ * Implementations of this class provide information necessary to\n+ * assist {@link java.lang.invoke.StringConcatFactory} perform optimal\n+ * insertion.\n+ *\n+ * @since 20\n+ *\/\n+@PreviewFeature(feature=PreviewFeature.Feature.STRING_TEMPLATES)\n+public interface FormatConcatItem {\n+    \/**\n+     * Calculate the length of the insertion.\n+     *\n+     * @param lengthCoder current value of the length + coder\n+     * @return adjusted value of the length + coder\n+     *\/\n+    long mix(long lengthCoder);\n+\n+    \/**\n+     * Insert content into buffer prior to the current length.\n+     *\n+     * @param lengthCoder current value of the length + coder\n+     * @param buffer      buffer to right into\n+     *\n+     * @return adjusted value of the length + coder\n+     *\n+     * @throws Throwable if fails to prepend value (unusual).\n+     *\/\n+    long prepend(long lengthCoder, byte[] buffer) throws Throwable;\n+}\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/util\/FormatConcatItem.java","additions":58,"deletions":0,"binary":false,"changes":58,"status":"added"}]}