{"files":[{"patch":"@@ -259,0 +259,1 @@\n+        String cwd = new File(\"\").getAbsolutePath(); \/\/ current dir used for printing message.\n@@ -302,2 +303,2 @@\n-            String stdOutFile = drainOutput(proc.getInputStream(), proc.pid(), \"stdout\", cmds);\n-            String stdErrFile = drainOutput(proc.getErrorStream(), proc.pid(), \"stderr\", cmds);\n+            String stdOutFileName = drainOutput(proc.getInputStream(), proc.pid(), \"stdout\", cmds);\n+            String stdErrFileName = drainOutput(proc.getErrorStream(), proc.pid(), \"stderr\", cmds);\n@@ -314,2 +315,2 @@\n-                                            stdOutFile + \" or stderr file \" +\n-                                            stdErrFile + \" for more detail\");\n+                                            cwd + File.separator + stdOutFileName + \" or stderr file \" +\n+                                            cwd + File.separator + stdErrFileName + \" for more detail\");\n@@ -321,1 +322,2 @@\n-                                           \" is not created, please check process \" +\n+                                           \" is not created, please check current working directory \" +\n+                                           cwd  + \" for process \" +\n@@ -334,1 +336,1 @@\n-        System.out.println((isStatic ? \"Static\" : \" Dynamic\") + \" dump to file \" + archiveFileName);\n+        System.out.println((isStatic ? \"Static\" : \" Dynamic\") + \" dump to file \" + cwd + File.separator + archiveFileName);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/misc\/CDS.java","additions":8,"deletions":6,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -175,1 +175,1 @@\n-    protected static void test(String fileName, long pid,\n+    protected static OutputAnalyzer test(String fileName, long pid,\n@@ -203,0 +203,1 @@\n+        return output;\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/jcmd\/JCmdTestDumpBase.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n- * @bug 8265465\n+ * @bug 8265465 8267075\n@@ -44,0 +44,1 @@\n+import jdk.test.lib.process.OutputAnalyzer;\n@@ -46,0 +47,16 @@\n+    static final String promptStdout = \"please check stdout file\";\n+    static final String promptStderr = \"or stderr file\";\n+\n+    static void checkContainAbsoluteLogPath(OutputAnalyzer output) throws Exception {\n+       String stdText = output.getOutput();\n+       if (stdText.contains(promptStdout) &&\n+           stdText.contains(promptStderr)) {\n+           int a = stdText.indexOf(promptStdout);\n+           int b = stdText.indexOf(promptStderr);\n+           String stdOutFileName = stdText.substring(a + promptStdout.length() + 1, b - 1).trim();\n+           File   stdOutFile = new File(stdOutFileName);\n+           if (!stdOutFile.isAbsolute()) {\n+               throw new RuntimeException(\"Failed to set file name in absolute for prompting message\");\n+           }\n+        }\n+    }\n@@ -70,1 +87,0 @@\n-        app.stopApp();\n@@ -74,0 +90,7 @@\n+        \/\/ Illegal character in file name\n+        localFileName = \"mystatic:.jsa\";\n+        OutputAnalyzer output = test(localFileName, pid, noBoot,  EXPECT_FAIL);\n+        checkFileExistence(localFileName, false\/*exist*\/);\n+        checkContainAbsoluteLogPath(output);\n+        app.stopApp();\n+\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/jcmd\/JCmdTestFileSafety.java","additions":25,"deletions":2,"binary":false,"changes":27,"status":"modified"}]}