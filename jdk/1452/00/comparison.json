{"files":[{"patch":"@@ -311,1 +311,1 @@\n-  return sizeof_FFree_Float_Stack_All + 5 + pre_call_resets_size();\n+  return 5 + pre_call_resets_size() + (_leaf_no_fp ? 0 : sizeof_FFree_Float_Stack_All);\n","filename":"src\/hotspot\/cpu\/x86\/x86_32.ad","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -857,0 +857,1 @@\n+    init_class_id(Class_CallLeafNoFP);\n","filename":"src\/hotspot\/share\/opto\/callnode.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -997,0 +997,1 @@\n+  bool _leaf_no_fp;             \/\/ Is this CallLeafNoFP?\n","filename":"src\/hotspot\/share\/opto\/machnode.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1267,1 +1267,3 @@\n-      mcall->as_MachCallRuntime()->_name = call->as_CallRuntime()->_name;\n+      MachCallRuntimeNode* mach_call_rt = mcall->as_MachCallRuntime();\n+      mach_call_rt->_name = call->as_CallRuntime()->_name;\n+      mach_call_rt->_leaf_no_fp = call->is_CallLeafNoFP();\n","filename":"src\/hotspot\/share\/opto\/matcher.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -52,0 +52,1 @@\n+class CallLeafNoFPNode;\n@@ -630,0 +631,1 @@\n+              DEFINE_CLASS_ID(CallLeafNoFP,     CallLeaf, 0)\n@@ -824,0 +826,1 @@\n+  DEFINE_CLASS_QUERY(CallLeafNoFP)\n","filename":"src\/hotspot\/share\/opto\/node.hpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"}]}