{"files":[{"patch":"@@ -143,1 +143,1 @@\n-  assert(_default_oop_recorder.allocated_on_stack(), \"should be embedded object\");\n+  assert(_default_oop_recorder.allocated_on_stack_or_embedded(), \"should be embedded object\");\n","filename":"src\/hotspot\/share\/asm\/codeBuffer.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -164,1 +164,1 @@\n-  assert(cfs->allocated_on_stack(), \"should be local\");\n+  assert(cfs->allocated_on_stack_or_embedded(), \"should be local\");\n","filename":"src\/hotspot\/share\/classfile\/classFileParser.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -194,1 +194,1 @@\n-  } else if (allocated_on_stack()) { \/\/ STACK_OR_EMBEDDED\n+  } else if (allocated_on_stack_or_embedded()) { \/\/ STACK_OR_EMBEDDED\n@@ -202,1 +202,1 @@\n-    assert(!allocated_on_stack(),\n+    assert(!allocated_on_stack_or_embedded(),\n@@ -223,1 +223,1 @@\n-  assert(allocated_on_stack(),\n+  assert(allocated_on_stack_or_embedded(),\n","filename":"src\/hotspot\/share\/memory\/allocation.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -411,1 +411,1 @@\n-  bool allocated_on_stack()    const { return get_allocation_type() == STACK_OR_EMBEDDED; }\n+  bool allocated_on_stack_or_embedded() const { return get_allocation_type() == STACK_OR_EMBEDDED; }\n","filename":"src\/hotspot\/share\/memory\/allocation.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -75,1 +75,1 @@\n-  if (array->allocated_on_stack()) {\n+  if (array->allocated_on_stack_or_embedded()) {\n","filename":"src\/hotspot\/share\/utilities\/growableArray.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -455,1 +455,1 @@\n-    ASSERT_TRUE(a.allocated_on_stack());\n+    ASSERT_TRUE(a.allocated_on_stack_or_embedded());\n@@ -462,1 +462,1 @@\n-    ASSERT_TRUE(a.allocated_on_stack());\n+    ASSERT_TRUE(a.allocated_on_stack_or_embedded());\n@@ -470,1 +470,1 @@\n-    ASSERT_TRUE(a.allocated_on_stack());\n+    ASSERT_TRUE(a.allocated_on_stack_or_embedded());\n@@ -478,1 +478,1 @@\n-    ASSERT_TRUE(w._a.allocated_on_stack());\n+    ASSERT_TRUE(w._a.allocated_on_stack_or_embedded());\n@@ -485,1 +485,1 @@\n-    ASSERT_TRUE(w._a.allocated_on_stack());\n+    ASSERT_TRUE(w._a.allocated_on_stack_or_embedded());\n@@ -493,1 +493,1 @@\n-    ASSERT_TRUE(w._a.allocated_on_stack());\n+    ASSERT_TRUE(w._a.allocated_on_stack_or_embedded());\n@@ -521,1 +521,1 @@\n-    ASSERT_TRUE(a.allocated_on_stack());\n+    ASSERT_TRUE(a.allocated_on_stack_or_embedded());\n","filename":"test\/hotspot\/gtest\/utilities\/test_growableArray.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"}]}