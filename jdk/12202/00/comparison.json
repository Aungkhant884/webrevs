{"files":[{"patch":"@@ -1187,1 +1187,1 @@\n-    log_info(jvmti)(\"%d free object posted\", objects->length());\n+    log_info(jvmti, table)(\"%d free object posted\", objects->length());\n","filename":"src\/hotspot\/share\/prims\/jvmtiTagMap.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -26,4 +26,0 @@\n-#include \"gc\/shared\/collectedHeap.hpp\"\n-#include \"gc\/shared\/oopStorage.hpp\"\n-#include \"jvmtifiles\/jvmtiEnv.hpp\"\n-#include \"logging\/log.hpp\"\n@@ -31,1 +27,0 @@\n-#include \"memory\/resourceArea.hpp\"\n@@ -35,1 +30,0 @@\n-#include \"prims\/jvmtiEventController.inline.hpp\"\n@@ -38,2 +32,0 @@\n-#include \"utilities\/hashtable.inline.hpp\"\n-#include \"utilities\/macros.hpp\"\n@@ -47,0 +39,5 @@\n+\n+  \/\/ obj was read with AS_NO_KEEPALIVE, or equivalent, like during\n+  \/\/ a heap walk.  The object needs to be kept alive when it is published.\n+  Universe::heap()->keep_alive(src._obj);\n+\n","filename":"src\/hotspot\/share\/prims\/jvmtiTagMapTable.cpp","additions":5,"deletions":8,"binary":false,"changes":13,"status":"modified"}]}