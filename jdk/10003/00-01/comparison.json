{"files":[{"patch":"@@ -2456,1 +2456,1 @@\n-    cmpptr(rheapbase, ExternalAddress((address)CompressedOops::ptrs_base_addr()));\n+    cmpptr(rheapbase, ExternalAddress(CompressedOops::ptrs_base_addr()));\n@@ -2590,1 +2590,1 @@\n-      lea(rheapbase, ExternalAddress((address)CompressedOops::ptrs_base_addr()));\n+      lea(rheapbase, ExternalAddress(CompressedOops::ptrs_base_addr()));\n","filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1356,1 +1356,1 @@\n-      la_patchable(xheapbase, ExternalAddress((address)CompressedOops::ptrs_base_addr()), offset);\n+      la_patchable(xheapbase, ExternalAddress(CompressedOops::ptrs_base_addr()), offset);\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -12249,0 +12249,3 @@\n+  if (adr.is_lval()) {\n+    return false;\n+  }\n@@ -12254,0 +12257,3 @@\n+  if (adr.is_lval()) {\n+    return false;\n+  }\n","filename":"src\/hotspot\/cpu\/x86\/assembler_x86.cpp","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -5118,2 +5118,1 @@\n-    const auto src2 = ExternalAddress((address)CompressedOops::ptrs_base_addr());\n-    assert(!src2.is_lval(), \"should not be lval\");\n+    ExternalAddress src2(CompressedOops::ptrs_base_addr());\n@@ -5413,1 +5412,1 @@\n-      movptr(r12_heapbase, ExternalAddress((address)CompressedOops::ptrs_base_addr()));\n+      movptr(r12_heapbase, ExternalAddress(CompressedOops::ptrs_base_addr()));\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86.cpp","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -755,1 +755,1 @@\n-  void cmpptr(Address src1, AddressLiteral src2, Register rscratch = noreg);\n+  void cmpptr(Address src1, AddressLiteral src2, Register rscratch);\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1002,1 +1002,2 @@\n-    __ cmpptr(rax, ExternalAddress(SharedRuntime::native_method_throw_unsatisfied_link_error_entry()), rscratch1);\n+    ExternalAddress unsatisfied(SharedRuntime::native_method_throw_unsatisfied_link_error_entry());\n+    __ cmpptr(rax, unsatisfied.addr(), rscratch1);\n@@ -1074,0 +1075,2 @@\n+    ExternalAddress float_handler(AbstractInterpreter::result_handler(T_FLOAT));\n+    ExternalAddress double_handler(AbstractInterpreter::result_handler(T_DOUBLE));\n@@ -1075,1 +1078,1 @@\n-              ExternalAddress(AbstractInterpreter::result_handler(T_FLOAT)));\n+              float_handler.addr(), noreg);\n@@ -1078,1 +1081,1 @@\n-              ExternalAddress(AbstractInterpreter::result_handler(T_DOUBLE)));\n+              double_handler.addr(), noreg);\n","filename":"src\/hotspot\/cpu\/x86\/templateInterpreterGenerator_x86.cpp","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -97,1 +97,1 @@\n-  static address* ptrs_base_addr()           { return &_narrow_oop._base; }\n+  static address  ptrs_base_addr()           { return &_narrow_oop._base; }\n","filename":"src\/hotspot\/share\/oops\/compressedOops.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}