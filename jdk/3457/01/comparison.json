{"files":[{"patch":"@@ -230,1 +230,2 @@\n-  if (!_segmap.initialize(reserved_segments_size, committed_segments_size)) {\n+  ReservedSpace seg_rs(reserved_segments_size);\n+  if (!_segmap.initialize(seg_rs, committed_segments_size)) {\n","filename":"src\/hotspot\/share\/memory\/heap.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -47,4 +47,6 @@\n-ReservedSpace::ReservedSpace(size_t size, size_t preferred_page_size) : _fd_for_heap(-1) {\n-  bool has_preferred_page_size = preferred_page_size != 0;\n-  \/\/ Want to use large pages where possible and pad with small pages.\n-  size_t page_size = has_preferred_page_size ? preferred_page_size : os::page_size_for_region_unaligned(size, 1);\n+ReservedSpace::ReservedSpace(size_t size) : _fd_for_heap(-1) {\n+  \/\/ Want to use large pages where possible. If the size is\n+  \/\/ not large page aligned the mapping will be a mix of\n+  \/\/ large and normal pages.\n+  size_t page_size = os::page_size_for_region_unaligned(size, 1);\n+  size_t alignment = os::vm_allocation_granularity();\n@@ -52,5 +54,11 @@\n-  size_t alignment;\n-  if (large_pages && has_preferred_page_size) {\n-    alignment = MAX2(page_size, (size_t)os::vm_allocation_granularity());\n-    \/\/ ReservedSpace initialization requires size to be aligned to the given\n-    \/\/ alignment. Align the size up.\n+  initialize(size, alignment, large_pages, NULL, false);\n+}\n+\n+ReservedSpace::ReservedSpace(size_t size, size_t preferred_page_size) : _fd_for_heap(-1) {\n+  \/\/ When a page size is given we don't want to mix large\n+  \/\/ and normal pages. If the size is not a multiple of the\n+  \/\/ page size it will be aligned up to achieve this.\n+  size_t alignment = os::vm_allocation_granularity();;\n+  bool large_pages = preferred_page_size != (size_t)os::vm_page_size();\n+  if (large_pages) {\n+    alignment = MAX2(preferred_page_size, alignment);\n@@ -58,4 +66,0 @@\n-  } else {\n-    \/\/ Don't force the alignment to be large page aligned,\n-    \/\/ since that will waste memory.\n-    alignment = os::vm_allocation_granularity();\n","filename":"src\/hotspot\/share\/memory\/virtualspace.cpp","additions":17,"deletions":13,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -58,3 +58,6 @@\n-  \/\/ Initialize the reserved space with the given size. If preferred_page_size\n-  \/\/ is set, use this as minimum page size\/alignment. This may waste some space\n-  \/\/ if the given size is not aligned to that value, as the reservation will be\n+  \/\/ Initialize the reserved space with the given size. Depending on the size\n+  \/\/ a suitable page size and alignment will be used.\n+  explicit ReservedSpace(size_t size);\n+  \/\/ Initialize the reserved space with the given size. The preferred_page_size\n+  \/\/ is used as the minimum page size\/alignment. This may waste some space if\n+  \/\/ the given size is not aligned to that value, as the reservation will be\n@@ -62,1 +65,1 @@\n-  ReservedSpace(size_t size, size_t preferred_page_size = 0);\n+  ReservedSpace(size_t size, size_t preferred_page_size);\n","filename":"src\/hotspot\/share\/memory\/virtualspace.hpp","additions":7,"deletions":4,"binary":false,"changes":11,"status":"modified"}]}