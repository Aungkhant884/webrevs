{"files":[{"patch":"@@ -1,2 +0,0 @@\n-org.eclipse.jdt.core.compiler.problem.invalidJavadocTagsNotVisibleRef=disabled\n-org.eclipse.jdt.core.compiler.problem.missingOverrideAnnotationForInterfaceMethodImplementation=enabled\n","filename":"src\/hotspot\/.mx.jvmci\/eclipse-settings\/org.eclipse.jdt.core.prefs","additions":0,"deletions":2,"binary":false,"changes":2,"status":"deleted"},{"patch":"@@ -1,145 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<?fileVersion 4.0.0?><cproject storage_type_id=\"org.eclipse.cdt.core.XmlProjectDescriptionStorage\">\n-\t<storageModule moduleId=\"org.eclipse.cdt.core.settings\">\n-\t\t<cconfiguration id=\"cdt.managedbuild.toolchain.gnu.solaris.base.945602881\">\n-\t\t\t<storageModule buildSystemId=\"org.eclipse.cdt.managedbuilder.core.configurationDataProvider\" id=\"cdt.managedbuild.toolchain.gnu.solaris.base.945602881\" moduleId=\"org.eclipse.cdt.core.settings\" name=\"Default\">\n-\t\t\t\t<externalSettings\/>\n-\t\t\t\t<extensions>\n-\t\t\t\t\t<extension id=\"org.eclipse.cdt.core.ELF\" point=\"org.eclipse.cdt.core.BinaryParser\"\/>\n-\t\t\t\t\t<extension id=\"org.eclipse.cdt.core.CWDLocator\" point=\"org.eclipse.cdt.core.ErrorParser\"\/>\n-\t\t\t\t\t<extension id=\"org.eclipse.cdt.core.GASErrorParser\" point=\"org.eclipse.cdt.core.ErrorParser\"\/>\n-\t\t\t\t\t<extension id=\"org.eclipse.cdt.core.GCCErrorParser\" point=\"org.eclipse.cdt.core.ErrorParser\"\/>\n-\t\t\t\t\t<extension id=\"org.eclipse.cdt.core.GLDErrorParser\" point=\"org.eclipse.cdt.core.ErrorParser\"\/>\n-\t\t\t\t\t<extension id=\"org.eclipse.cdt.core.GmakeErrorParser\" point=\"org.eclipse.cdt.core.ErrorParser\"\/>\n-\t\t\t\t<\/extensions>\n-\t\t\t<\/storageModule>\n-\t\t\t<storageModule moduleId=\"cdtBuildSystem\" version=\"4.0.0\">\n-\t\t\t\t<configuration artifactName=\"hotspot\" buildProperties=\"\" description=\"\" id=\"cdt.managedbuild.toolchain.gnu.solaris.base.945602881\" name=\"Default\" parent=\"org.eclipse.cdt.build.core.emptycfg\">\n-\t\t\t\t\t<folderInfo id=\"cdt.managedbuild.toolchain.gnu.solaris.base.945602881.305678577\" name=\"\/\" resourcePath=\"\">\n-\t\t\t\t\t\t<toolChain id=\"cdt.managedbuild.toolchain.gnu.base.1866612258\" name=\"Linux GCC\" superClass=\"cdt.managedbuild.toolchain.gnu.base\">\n-\t\t\t\t\t\t\t<targetPlatform archList=\"all\" binaryParser=\"org.eclipse.cdt.core.ELF\" id=\"cdt.managedbuild.target.gnu.platform.base.2075405295\" name=\"Debug Platform\" osList=\"linux,hpux,aix,qnx\" superClass=\"cdt.managedbuild.target.gnu.platform.base\"\/>\n-\t\t\t\t\t\t\t<builder autoBuildTarget=\"\" buildPath=\"${workspace_loc:\/hotspot}\/..\" cleanBuildTarget=\"clean\" enableAutoBuild=\"true\" enableCleanBuild=\"false\" enabledIncrementalBuild=\"false\" id=\"cdt.managedbuild.target.gnu.builder.base.81453037\" incrementalBuildTarget=\"jvmg1\" keepEnvironmentInBuildfile=\"false\" managedBuildOn=\"false\" name=\"Gnu Make Builder\" superClass=\"cdt.managedbuild.target.gnu.builder.base\">\n-\t\t\t\t\t\t\t\t<outputEntries>\n-\t\t\t\t\t\t\t\t\t<entry flags=\"VALUE_WORKSPACE_PATH|RESOLVED\" kind=\"outputPath\" name=\"\"\/>\n-\t\t\t\t\t\t\t\t<\/outputEntries>\n-\t\t\t\t\t\t\t<\/builder>\n-\t\t\t\t\t\t\t<tool id=\"cdt.managedbuild.tool.gnu.archiver.base.1094883386\" name=\"GCC Archiver\" superClass=\"cdt.managedbuild.tool.gnu.archiver.base\"\/>\n-\t\t\t\t\t\t\t<tool id=\"cdt.managedbuild.tool.gnu.cpp.compiler.base.1342888057\" name=\"GCC C++ Compiler\" superClass=\"cdt.managedbuild.tool.gnu.cpp.compiler.base\">\n-\t\t\t\t\t\t\t\t<option id=\"gnu.cpp.compiler.option.preprocessor.def.634868600\" name=\"Defined symbols (-D)\" superClass=\"gnu.cpp.compiler.option.preprocessor.def\" valueType=\"definedSymbols\">\n-\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"_LP64=1\"\/>\n-\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"COMPILER1=1\"\/>\n-\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"VM_LITTLE_ENDIAN=1\"\/>\n-\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"ASSERT=1\"\/>\n-\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"_REENTRANT=1\"\/>\n-\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"DEBUG=1\"\/>\n-\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"AMD64=1\"\/>\n-\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"LINUX=1\"\/>\n-\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"TARGET_ARCH_x86=1\"\/>\n-\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"TARGET_COMPILER_gcc=1\"\/>\n-\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"TARGET_OS_FAMILY_linux=1\"\/>\n-\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"TARGET_OS_ARCH_linux_x86=1\"\/>\n-\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"TARGET_ARCH_MODEL_x86_64=1\"\/>\n-\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"INCLUDE_JVMCI=1\"\/>\n-\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"COMPILER2=1\"\/>\n-\t\t\t\t\t\t\t\t<\/option>\n-\t\t\t\t\t\t\t\t<option id=\"gnu.cpp.compiler.option.preprocessor.undef.2137486146\" name=\"Undefined symbols (-U)\" superClass=\"gnu.cpp.compiler.option.preprocessor.undef\"\/>\n-\t\t\t\t\t\t\t\t<inputType id=\"cdt.managedbuild.tool.gnu.cpp.compiler.input.866181452\" superClass=\"cdt.managedbuild.tool.gnu.cpp.compiler.input\"\/>\n-\t\t\t\t\t\t\t<\/tool>\n-\t\t\t\t\t\t\t<tool id=\"cdt.managedbuild.tool.gnu.c.compiler.base.1535888880\" name=\"GCC C Compiler\" superClass=\"cdt.managedbuild.tool.gnu.c.compiler.base\">\n-\t\t\t\t\t\t\t\t<option id=\"gnu.c.compiler.option.preprocessor.def.symbols.825962493\" name=\"Defined symbols (-D)\" superClass=\"gnu.c.compiler.option.preprocessor.def.symbols\" valueType=\"definedSymbols\">\n-\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"_LP64=1\"\/>\n-\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"COMPILER1=1\"\/>\n-\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"VM_LITTLE_ENDIAN=1\"\/>\n-\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"ASSERT=1\"\/>\n-\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"_REENTRANT=1\"\/>\n-\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"DEBUG=1\"\/>\n-\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"AMD64=1\"\/>\n-\t\t\t\t\t\t\t\t<\/option>\n-\t\t\t\t\t\t\t\t<inputType id=\"cdt.managedbuild.tool.gnu.c.compiler.input.906671119\" superClass=\"cdt.managedbuild.tool.gnu.c.compiler.input\"\/>\n-\t\t\t\t\t\t\t<\/tool>\n-\t\t\t\t\t\t\t<tool id=\"cdt.managedbuild.tool.gnu.c.linker.base.1271041307\" name=\"GCC C Linker\" superClass=\"cdt.managedbuild.tool.gnu.c.linker.base\"\/>\n-\t\t\t\t\t\t\t<tool id=\"cdt.managedbuild.tool.gnu.cpp.linker.base.550499946\" name=\"GCC C++ Linker\" superClass=\"cdt.managedbuild.tool.gnu.cpp.linker.base\">\n-\t\t\t\t\t\t\t\t<inputType id=\"cdt.managedbuild.tool.gnu.cpp.linker.input.274517766\" superClass=\"cdt.managedbuild.tool.gnu.cpp.linker.input\">\n-\t\t\t\t\t\t\t\t\t<additionalInput kind=\"additionalinputdependency\" paths=\"$(USER_OBJS)\"\/>\n-\t\t\t\t\t\t\t\t\t<additionalInput kind=\"additionalinput\" paths=\"$(LIBS)\"\/>\n-\t\t\t\t\t\t\t\t<\/inputType>\n-\t\t\t\t\t\t\t<\/tool>\n-\t\t\t\t\t\t\t<tool id=\"cdt.managedbuild.tool.gnu.assembler.base.554053529\" name=\"GCC Assembler\" superClass=\"cdt.managedbuild.tool.gnu.assembler.base\">\n-\t\t\t\t\t\t\t\t<inputType id=\"cdt.managedbuild.tool.gnu.assembler.input.1055083385\" superClass=\"cdt.managedbuild.tool.gnu.assembler.input\"\/>\n-\t\t\t\t\t\t\t<\/tool>\n-\t\t\t\t\t\t<\/toolChain>\n-\t\t\t\t\t<\/folderInfo>\n-\t\t\t\t\t<sourceEntries>\n-            <entry excluding=\"cpu\/x86\/templateTable_x86_32.cpp|cpu\/x86\/templateInterpreter_x86_32.cpp|cpu\/x86\/stubRoutines_x86_32.cpp|cpu\/x86\/stubGenerator_x86_32.cpp|cpu\/x86\/sharedRuntime_x86_32.cpp|cpu\/x86\/jniFastGetField_x86_32.cpp|cpu\/x86\/interpreterRT_x86_32.cpp|cpu\/x86\/interpreter_x86_32.cpp|cpu\/x86\/interp_masm_x86_32.cpp|cpu\/x86\/vtableStubs_x86_32.cpp\" flags=\"VALUE_WORKSPACE_PATH\" kind=\"sourcePath\" name=\"\"\/>\n-\t\t\t\t\t<\/sourceEntries>\n-\t\t\t\t<\/configuration>\n-\t\t\t<\/storageModule>\n-\t\t\t<storageModule moduleId=\"org.eclipse.cdt.core.externalSettings\"\/>\n-\t\t\t<storageModule moduleId=\"org.eclipse.cdt.internal.ui.text.commentOwnerProjectMappings\"\/>\n-\t\t\t<storageModule moduleId=\"org.eclipse.cdt.core.language.mapping\"\/>\n-\t\t\t<storageModule moduleId=\"org.eclipse.cdt.make.core.buildtargets\"\/>\n-\t\t<\/cconfiguration>\n-\t<\/storageModule>\n-\t<storageModule moduleId=\"cdtBuildSystem\" version=\"4.0.0\">\n-\t\t<project id=\"hotspot.null.1712822257\" name=\"hotspot\"\/>\n-\t<\/storageModule>\n-\t<storageModule moduleId=\"refreshScope\" versionNumber=\"2\">\n-\t\t<configuration configurationName=\"Default\">\n-\t\t\t<resource resourceType=\"PROJECT\" workspacePath=\"\/hotspot\"\/>\n-\t\t<\/configuration>\n-\t<\/storageModule>\n-\t<storageModule moduleId=\"org.eclipse.cdt.internal.ui.text.commentOwnerProjectMappings\"\/>\n-\t<storageModule moduleId=\"org.eclipse.cdt.core.LanguageSettingsProviders\"\/>\n-\t<storageModule moduleId=\"scannerConfiguration\">\n-\t\t<autodiscovery enabled=\"true\" problemReportingEnabled=\"true\" selectedProfileId=\"\"\/>\n-\t\t<scannerConfigBuildInfo instanceId=\"cdt.managedbuild.toolchain.gnu.solaris.base.945602881.982312162;cdt.managedbuild.toolchain.gnu.solaris.base.945602881.982312162.;cdt.managedbuild.tool.gnu.c.compiler.base.1862778408;cdt.managedbuild.tool.gnu.c.compiler.input.29080811\">\n-\t\t\t<autodiscovery enabled=\"true\" problemReportingEnabled=\"true\" selectedProfileId=\"\"\/>\n-\t\t<\/scannerConfigBuildInfo>\n-\t\t<scannerConfigBuildInfo instanceId=\"cdt.managedbuild.toolchain.gnu.solaris.base.945602881.2116626004;cdt.managedbuild.toolchain.gnu.solaris.base.945602881.2116626004.;cdt.managedbuild.tool.gnu.cpp.compiler.base.501581878;cdt.managedbuild.tool.gnu.cpp.compiler.input.1552002453\">\n-\t\t\t<autodiscovery enabled=\"true\" problemReportingEnabled=\"true\" selectedProfileId=\"\"\/>\n-\t\t<\/scannerConfigBuildInfo>\n-\t\t<scannerConfigBuildInfo instanceId=\"cdt.managedbuild.toolchain.gnu.solaris.base.945602881;cdt.managedbuild.toolchain.gnu.solaris.base.945602881.388217325;cdt.managedbuild.tool.gnu.solaris.cpp.compiler.base.377383651;cdt.managedbuild.tool.gnu.cpp.compiler.input.103897085\">\n-\t\t\t<autodiscovery enabled=\"true\" problemReportingEnabled=\"true\" selectedProfileId=\"org.eclipse.cdt.managedbuilder.core.GCCManagedMakePerProjectProfileCPP\"\/>\n-\t\t<\/scannerConfigBuildInfo>\n-\t\t<scannerConfigBuildInfo instanceId=\"cdt.managedbuild.toolchain.gnu.solaris.base.945602881;cdt.managedbuild.toolchain.gnu.solaris.base.945602881.305678577;cdt.managedbuild.tool.gnu.solaris.c.compiler.base.351149667;cdt.managedbuild.tool.gnu.c.compiler.input.820447325\">\n-\t\t\t<autodiscovery enabled=\"true\" problemReportingEnabled=\"true\" selectedProfileId=\"org.eclipse.cdt.managedbuilder.core.GCCManagedMakePerProjectProfileC\"\/>\n-\t\t<\/scannerConfigBuildInfo>\n-\t\t<scannerConfigBuildInfo instanceId=\"cdt.managedbuild.toolchain.gnu.solaris.base.945602881;cdt.managedbuild.toolchain.gnu.solaris.base.945602881.388217325;cdt.managedbuild.tool.gnu.solaris.c.compiler.base.212558466;cdt.managedbuild.tool.gnu.c.compiler.input.1115218695\">\n-\t\t\t<autodiscovery enabled=\"true\" problemReportingEnabled=\"true\" selectedProfileId=\"org.eclipse.cdt.managedbuilder.core.GCCManagedMakePerProjectProfileC\"\/>\n-\t\t<\/scannerConfigBuildInfo>\n-\t\t<scannerConfigBuildInfo instanceId=\"cdt.managedbuild.toolchain.gnu.solaris.base.945602881;cdt.managedbuild.toolchain.gnu.solaris.base.945602881.305678577;cdt.managedbuild.tool.gnu.c.compiler.base.1535888880;cdt.managedbuild.tool.gnu.c.compiler.input.906671119\">\n-\t\t\t<autodiscovery enabled=\"true\" problemReportingEnabled=\"true\" selectedProfileId=\"org.eclipse.cdt.managedbuilder.core.GCCManagedMakePerProjectProfileC\"\/>\n-\t\t<\/scannerConfigBuildInfo>\n-\t\t<scannerConfigBuildInfo instanceId=\"cdt.managedbuild.toolchain.gnu.solaris.base.945602881.500153051;cdt.managedbuild.toolchain.gnu.solaris.base.945602881.500153051.;cdt.managedbuild.tool.gnu.c.compiler.base.592469102;cdt.managedbuild.tool.gnu.c.compiler.input.1891927256\">\n-\t\t\t<autodiscovery enabled=\"true\" problemReportingEnabled=\"true\" selectedProfileId=\"\"\/>\n-\t\t<\/scannerConfigBuildInfo>\n-\t\t<scannerConfigBuildInfo instanceId=\"cdt.managedbuild.toolchain.gnu.solaris.base.945602881;cdt.managedbuild.toolchain.gnu.solaris.base.945602881.305678577;cdt.managedbuild.tool.gnu.solaris.cpp.compiler.base.429326045;cdt.managedbuild.tool.gnu.cpp.compiler.input.1860785837\">\n-\t\t\t<autodiscovery enabled=\"true\" problemReportingEnabled=\"true\" selectedProfileId=\"org.eclipse.cdt.managedbuilder.core.GCCManagedMakePerProjectProfileCPP\"\/>\n-\t\t<\/scannerConfigBuildInfo>\n-\t\t<scannerConfigBuildInfo instanceId=\"cdt.managedbuild.toolchain.gnu.solaris.base.945602881.2116626004;cdt.managedbuild.toolchain.gnu.solaris.base.945602881.2116626004.;cdt.managedbuild.tool.gnu.c.compiler.base.647707969;cdt.managedbuild.tool.gnu.c.compiler.input.1613323394\">\n-\t\t\t<autodiscovery enabled=\"true\" problemReportingEnabled=\"true\" selectedProfileId=\"\"\/>\n-\t\t<\/scannerConfigBuildInfo>\n-\t\t<scannerConfigBuildInfo instanceId=\"cdt.managedbuild.toolchain.gnu.solaris.base.945602881.1958236162;cdt.managedbuild.toolchain.gnu.solaris.base.945602881.1958236162.;cdt.managedbuild.tool.gnu.c.compiler.base.1536145259;cdt.managedbuild.tool.gnu.c.compiler.input.1935913022\">\n-\t\t\t<autodiscovery enabled=\"true\" problemReportingEnabled=\"true\" selectedProfileId=\"\"\/>\n-\t\t<\/scannerConfigBuildInfo>\n-\t\t<scannerConfigBuildInfo instanceId=\"cdt.managedbuild.toolchain.gnu.solaris.base.945602881;cdt.managedbuild.toolchain.gnu.solaris.base.945602881.305678577;cdt.managedbuild.tool.gnu.cpp.compiler.base.1342888057;cdt.managedbuild.tool.gnu.cpp.compiler.input.866181452\">\n-\t\t\t<autodiscovery enabled=\"true\" problemReportingEnabled=\"true\" selectedProfileId=\"org.eclipse.cdt.managedbuilder.core.GCCManagedMakePerProjectProfileCPP\"\/>\n-\t\t<\/scannerConfigBuildInfo>\n-\t\t<scannerConfigBuildInfo instanceId=\"cdt.managedbuild.toolchain.gnu.solaris.base.945602881.915924225;cdt.managedbuild.toolchain.gnu.solaris.base.945602881.915924225.;cdt.managedbuild.tool.gnu.cpp.compiler.base.1404788740;cdt.managedbuild.tool.gnu.cpp.compiler.input.1175382997\">\n-\t\t\t<autodiscovery enabled=\"true\" problemReportingEnabled=\"true\" selectedProfileId=\"\"\/>\n-\t\t<\/scannerConfigBuildInfo>\n-\t\t<scannerConfigBuildInfo instanceId=\"cdt.managedbuild.toolchain.gnu.solaris.base.945602881.1958236162;cdt.managedbuild.toolchain.gnu.solaris.base.945602881.1958236162.;cdt.managedbuild.tool.gnu.cpp.compiler.base.677873708;cdt.managedbuild.tool.gnu.cpp.compiler.input.429177901\">\n-\t\t\t<autodiscovery enabled=\"true\" problemReportingEnabled=\"true\" selectedProfileId=\"\"\/>\n-\t\t<\/scannerConfigBuildInfo>\n-\t\t<scannerConfigBuildInfo instanceId=\"cdt.managedbuild.toolchain.gnu.solaris.base.945602881.500153051;cdt.managedbuild.toolchain.gnu.solaris.base.945602881.500153051.;cdt.managedbuild.tool.gnu.cpp.compiler.base.1920567990;cdt.managedbuild.tool.gnu.cpp.compiler.input.1463421641\">\n-\t\t\t<autodiscovery enabled=\"true\" problemReportingEnabled=\"true\" selectedProfileId=\"\"\/>\n-\t\t<\/scannerConfigBuildInfo>\n-\t\t<scannerConfigBuildInfo instanceId=\"cdt.managedbuild.toolchain.gnu.solaris.base.945602881.915924225;cdt.managedbuild.toolchain.gnu.solaris.base.945602881.915924225.;cdt.managedbuild.tool.gnu.c.compiler.base.961579870;cdt.managedbuild.tool.gnu.c.compiler.input.1710196852\">\n-\t\t\t<autodiscovery enabled=\"true\" problemReportingEnabled=\"true\" selectedProfileId=\"\"\/>\n-\t\t<\/scannerConfigBuildInfo>\n-\t\t<scannerConfigBuildInfo instanceId=\"cdt.managedbuild.toolchain.gnu.solaris.base.945602881.982312162;cdt.managedbuild.toolchain.gnu.solaris.base.945602881.982312162.;cdt.managedbuild.tool.gnu.cpp.compiler.base.1673917487;cdt.managedbuild.tool.gnu.cpp.compiler.input.931461388\">\n-\t\t\t<autodiscovery enabled=\"true\" problemReportingEnabled=\"true\" selectedProfileId=\"\"\/>\n-\t\t<\/scannerConfigBuildInfo>\n-\t<\/storageModule>\n-\t<storageModule moduleId=\"org.eclipse.cdt.core.pathentry\"\/>\n-<\/cproject>\n","filename":"src\/hotspot\/.mx.jvmci\/hotspot\/templates\/eclipse\/cproject","additions":0,"deletions":145,"binary":false,"changes":145,"status":"deleted"},{"patch":"@@ -1,198 +0,0 @@\n-eclipse.preferences.version=1\n-environment\/project\/cdt.managedbuild.toolchain.gnu.solaris.base.945602881.1958236162\/BUILDING_FROM_IDE\/delimiter=\\:\n-environment\/project\/cdt.managedbuild.toolchain.gnu.solaris.base.945602881.1958236162\/BUILDING_FROM_IDE\/operation=append\n-environment\/project\/cdt.managedbuild.toolchain.gnu.solaris.base.945602881.1958236162\/BUILDING_FROM_IDE\/value=true\n-environment\/project\/cdt.managedbuild.toolchain.gnu.solaris.base.945602881.1958236162\/append=true\n-environment\/project\/cdt.managedbuild.toolchain.gnu.solaris.base.945602881.1958236162\/appendContributed=true\n-environment\/project\/cdt.managedbuild.toolchain.gnu.solaris.base.945602881.2116626004.562670952\/BUILDING_FROM_IDE\/delimiter=\\:\n-environment\/project\/cdt.managedbuild.toolchain.gnu.solaris.base.945602881.2116626004.562670952\/BUILDING_FROM_IDE\/operation=append\n-environment\/project\/cdt.managedbuild.toolchain.gnu.solaris.base.945602881.2116626004.562670952\/BUILDING_FROM_IDE\/value=true\n-environment\/project\/cdt.managedbuild.toolchain.gnu.solaris.base.945602881.2116626004.562670952\/append=true\n-environment\/project\/cdt.managedbuild.toolchain.gnu.solaris.base.945602881.2116626004.562670952\/appendContributed=true\n-environment\/project\/cdt.managedbuild.toolchain.gnu.solaris.base.945602881.2116626004\/BUILDING_FROM_IDE\/delimiter=\\:\n-environment\/project\/cdt.managedbuild.toolchain.gnu.solaris.base.945602881.2116626004\/BUILDING_FROM_IDE\/operation=append\n-environment\/project\/cdt.managedbuild.toolchain.gnu.solaris.base.945602881.2116626004\/BUILDING_FROM_IDE\/value=true\n-environment\/project\/cdt.managedbuild.toolchain.gnu.solaris.base.945602881.2116626004\/append=true\n-environment\/project\/cdt.managedbuild.toolchain.gnu.solaris.base.945602881.2116626004\/appendContributed=true\n-environment\/project\/cdt.managedbuild.toolchain.gnu.solaris.base.945602881.500153051\/BUILDING_FROM_IDE\/delimiter=\\:\n-environment\/project\/cdt.managedbuild.toolchain.gnu.solaris.base.945602881.500153051\/BUILDING_FROM_IDE\/operation=append\n-environment\/project\/cdt.managedbuild.toolchain.gnu.solaris.base.945602881.500153051\/BUILDING_FROM_IDE\/value=true\n-environment\/project\/cdt.managedbuild.toolchain.gnu.solaris.base.945602881.500153051\/append=true\n-environment\/project\/cdt.managedbuild.toolchain.gnu.solaris.base.945602881.500153051\/appendContributed=true\n-environment\/project\/cdt.managedbuild.toolchain.gnu.solaris.base.945602881.915924225\/BUILDING_FROM_IDE\/delimiter=\\:\n-environment\/project\/cdt.managedbuild.toolchain.gnu.solaris.base.945602881.915924225\/BUILDING_FROM_IDE\/operation=append\n-environment\/project\/cdt.managedbuild.toolchain.gnu.solaris.base.945602881.915924225\/BUILDING_FROM_IDE\/value=true\n-environment\/project\/cdt.managedbuild.toolchain.gnu.solaris.base.945602881.915924225\/append=true\n-environment\/project\/cdt.managedbuild.toolchain.gnu.solaris.base.945602881.915924225\/appendContributed=true\n-environment\/project\/cdt.managedbuild.toolchain.gnu.solaris.base.945602881.982312162\/BUILDING_FROM_IDE\/delimiter=\\:\n-environment\/project\/cdt.managedbuild.toolchain.gnu.solaris.base.945602881.982312162\/BUILDING_FROM_IDE\/operation=append\n-environment\/project\/cdt.managedbuild.toolchain.gnu.solaris.base.945602881.982312162\/BUILDING_FROM_IDE\/value=true\n-environment\/project\/cdt.managedbuild.toolchain.gnu.solaris.base.945602881.982312162\/append=true\n-environment\/project\/cdt.managedbuild.toolchain.gnu.solaris.base.945602881.982312162\/appendContributed=true\n-environment\/project\/cdt.managedbuild.toolchain.gnu.solaris.base.945602881\/BUILDING_FROM_IDE\/delimiter=\\:\n-environment\/project\/cdt.managedbuild.toolchain.gnu.solaris.base.945602881\/BUILDING_FROM_IDE\/operation=append\n-environment\/project\/cdt.managedbuild.toolchain.gnu.solaris.base.945602881\/BUILDING_FROM_IDE\/value=true\n-environment\/project\/cdt.managedbuild.toolchain.gnu.solaris.base.945602881\/append=true\n-environment\/project\/cdt.managedbuild.toolchain.gnu.solaris.base.945602881\/appendContributed=true\n-org.eclipse.cdt.core.formatter.alignment_for_arguments_in_method_invocation=16\n-org.eclipse.cdt.core.formatter.alignment_for_assignment=16\n-org.eclipse.cdt.core.formatter.alignment_for_base_clause_in_type_declaration=80\n-org.eclipse.cdt.core.formatter.alignment_for_binary_expression=16\n-org.eclipse.cdt.core.formatter.alignment_for_compact_if=0\n-org.eclipse.cdt.core.formatter.alignment_for_conditional_expression=80\n-org.eclipse.cdt.core.formatter.alignment_for_conditional_expression_chain=18\n-org.eclipse.cdt.core.formatter.alignment_for_constructor_initializer_list=0\n-org.eclipse.cdt.core.formatter.alignment_for_declarator_list=16\n-org.eclipse.cdt.core.formatter.alignment_for_enumerator_list=48\n-org.eclipse.cdt.core.formatter.alignment_for_expression_list=0\n-org.eclipse.cdt.core.formatter.alignment_for_expressions_in_array_initializer=16\n-org.eclipse.cdt.core.formatter.alignment_for_member_access=0\n-org.eclipse.cdt.core.formatter.alignment_for_overloaded_left_shift_chain=16\n-org.eclipse.cdt.core.formatter.alignment_for_parameters_in_method_declaration=16\n-org.eclipse.cdt.core.formatter.alignment_for_throws_clause_in_method_declaration=16\n-org.eclipse.cdt.core.formatter.brace_position_for_array_initializer=end_of_line\n-org.eclipse.cdt.core.formatter.brace_position_for_block=end_of_line\n-org.eclipse.cdt.core.formatter.brace_position_for_block_in_case=end_of_line\n-org.eclipse.cdt.core.formatter.brace_position_for_method_declaration=end_of_line\n-org.eclipse.cdt.core.formatter.brace_position_for_namespace_declaration=end_of_line\n-org.eclipse.cdt.core.formatter.brace_position_for_switch=end_of_line\n-org.eclipse.cdt.core.formatter.brace_position_for_type_declaration=end_of_line\n-org.eclipse.cdt.core.formatter.comment.min_distance_between_code_and_line_comment=1\n-org.eclipse.cdt.core.formatter.comment.never_indent_line_comments_on_first_column=true\n-org.eclipse.cdt.core.formatter.comment.preserve_white_space_between_code_and_line_comments=false\n-org.eclipse.cdt.core.formatter.compact_else_if=true\n-org.eclipse.cdt.core.formatter.continuation_indentation=2\n-org.eclipse.cdt.core.formatter.continuation_indentation_for_array_initializer=2\n-org.eclipse.cdt.core.formatter.format_guardian_clause_on_one_line=false\n-org.eclipse.cdt.core.formatter.indent_access_specifier_compare_to_type_header=false\n-org.eclipse.cdt.core.formatter.indent_access_specifier_extra_spaces=0\n-org.eclipse.cdt.core.formatter.indent_body_declarations_compare_to_access_specifier=true\n-org.eclipse.cdt.core.formatter.indent_body_declarations_compare_to_namespace_header=false\n-org.eclipse.cdt.core.formatter.indent_breaks_compare_to_cases=true\n-org.eclipse.cdt.core.formatter.indent_declaration_compare_to_template_header=false\n-org.eclipse.cdt.core.formatter.indent_empty_lines=false\n-org.eclipse.cdt.core.formatter.indent_statements_compare_to_block=true\n-org.eclipse.cdt.core.formatter.indent_statements_compare_to_body=true\n-org.eclipse.cdt.core.formatter.indent_switchstatements_compare_to_cases=true\n-org.eclipse.cdt.core.formatter.indent_switchstatements_compare_to_switch=true\n-org.eclipse.cdt.core.formatter.indentation.size=2\n-org.eclipse.cdt.core.formatter.insert_new_line_after_opening_brace_in_array_initializer=do not insert\n-org.eclipse.cdt.core.formatter.insert_new_line_after_template_declaration=do not insert\n-org.eclipse.cdt.core.formatter.insert_new_line_at_end_of_file_if_missing=do not insert\n-org.eclipse.cdt.core.formatter.insert_new_line_before_catch_in_try_statement=do not insert\n-org.eclipse.cdt.core.formatter.insert_new_line_before_closing_brace_in_array_initializer=do not insert\n-org.eclipse.cdt.core.formatter.insert_new_line_before_colon_in_constructor_initializer_list=do not insert\n-org.eclipse.cdt.core.formatter.insert_new_line_before_else_in_if_statement=do not insert\n-org.eclipse.cdt.core.formatter.insert_new_line_before_identifier_in_function_declaration=do not insert\n-org.eclipse.cdt.core.formatter.insert_new_line_before_while_in_do_statement=do not insert\n-org.eclipse.cdt.core.formatter.insert_new_line_in_empty_block=insert\n-org.eclipse.cdt.core.formatter.insert_space_after_assignment_operator=insert\n-org.eclipse.cdt.core.formatter.insert_space_after_binary_operator=insert\n-org.eclipse.cdt.core.formatter.insert_space_after_closing_angle_bracket_in_template_arguments=insert\n-org.eclipse.cdt.core.formatter.insert_space_after_closing_angle_bracket_in_template_parameters=insert\n-org.eclipse.cdt.core.formatter.insert_space_after_closing_brace_in_block=insert\n-org.eclipse.cdt.core.formatter.insert_space_after_closing_paren_in_cast=insert\n-org.eclipse.cdt.core.formatter.insert_space_after_colon_in_base_clause=insert\n-org.eclipse.cdt.core.formatter.insert_space_after_colon_in_case=insert\n-org.eclipse.cdt.core.formatter.insert_space_after_colon_in_conditional=insert\n-org.eclipse.cdt.core.formatter.insert_space_after_colon_in_labeled_statement=insert\n-org.eclipse.cdt.core.formatter.insert_space_after_comma_in_array_initializer=insert\n-org.eclipse.cdt.core.formatter.insert_space_after_comma_in_base_types=insert\n-org.eclipse.cdt.core.formatter.insert_space_after_comma_in_declarator_list=insert\n-org.eclipse.cdt.core.formatter.insert_space_after_comma_in_enum_declarations=insert\n-org.eclipse.cdt.core.formatter.insert_space_after_comma_in_expression_list=insert\n-org.eclipse.cdt.core.formatter.insert_space_after_comma_in_method_declaration_parameters=insert\n-org.eclipse.cdt.core.formatter.insert_space_after_comma_in_method_declaration_throws=insert\n-org.eclipse.cdt.core.formatter.insert_space_after_comma_in_method_invocation_arguments=insert\n-org.eclipse.cdt.core.formatter.insert_space_after_comma_in_template_arguments=insert\n-org.eclipse.cdt.core.formatter.insert_space_after_comma_in_template_parameters=insert\n-org.eclipse.cdt.core.formatter.insert_space_after_opening_angle_bracket_in_template_arguments=do not insert\n-org.eclipse.cdt.core.formatter.insert_space_after_opening_angle_bracket_in_template_parameters=do not insert\n-org.eclipse.cdt.core.formatter.insert_space_after_opening_brace_in_array_initializer=insert\n-org.eclipse.cdt.core.formatter.insert_space_after_opening_bracket=do not insert\n-org.eclipse.cdt.core.formatter.insert_space_after_opening_paren_in_cast=do not insert\n-org.eclipse.cdt.core.formatter.insert_space_after_opening_paren_in_catch=do not insert\n-org.eclipse.cdt.core.formatter.insert_space_after_opening_paren_in_exception_specification=do not insert\n-org.eclipse.cdt.core.formatter.insert_space_after_opening_paren_in_for=do not insert\n-org.eclipse.cdt.core.formatter.insert_space_after_opening_paren_in_if=do not insert\n-org.eclipse.cdt.core.formatter.insert_space_after_opening_paren_in_method_declaration=do not insert\n-org.eclipse.cdt.core.formatter.insert_space_after_opening_paren_in_method_invocation=do not insert\n-org.eclipse.cdt.core.formatter.insert_space_after_opening_paren_in_parenthesized_expression=do not insert\n-org.eclipse.cdt.core.formatter.insert_space_after_opening_paren_in_switch=do not insert\n-org.eclipse.cdt.core.formatter.insert_space_after_opening_paren_in_while=do not insert\n-org.eclipse.cdt.core.formatter.insert_space_after_postfix_operator=do not insert\n-org.eclipse.cdt.core.formatter.insert_space_after_prefix_operator=do not insert\n-org.eclipse.cdt.core.formatter.insert_space_after_question_in_conditional=insert\n-org.eclipse.cdt.core.formatter.insert_space_after_semicolon_in_for=insert\n-org.eclipse.cdt.core.formatter.insert_space_after_unary_operator=do not insert\n-org.eclipse.cdt.core.formatter.insert_space_before_assignment_operator=insert\n-org.eclipse.cdt.core.formatter.insert_space_before_binary_operator=insert\n-org.eclipse.cdt.core.formatter.insert_space_before_closing_angle_bracket_in_template_arguments=do not insert\n-org.eclipse.cdt.core.formatter.insert_space_before_closing_angle_bracket_in_template_parameters=do not insert\n-org.eclipse.cdt.core.formatter.insert_space_before_closing_brace_in_array_initializer=insert\n-org.eclipse.cdt.core.formatter.insert_space_before_closing_bracket=do not insert\n-org.eclipse.cdt.core.formatter.insert_space_before_closing_paren_in_cast=do not insert\n-org.eclipse.cdt.core.formatter.insert_space_before_closing_paren_in_catch=do not insert\n-org.eclipse.cdt.core.formatter.insert_space_before_closing_paren_in_exception_specification=do not insert\n-org.eclipse.cdt.core.formatter.insert_space_before_closing_paren_in_for=do not insert\n-org.eclipse.cdt.core.formatter.insert_space_before_closing_paren_in_if=do not insert\n-org.eclipse.cdt.core.formatter.insert_space_before_closing_paren_in_method_declaration=do not insert\n-org.eclipse.cdt.core.formatter.insert_space_before_closing_paren_in_method_invocation=do not insert\n-org.eclipse.cdt.core.formatter.insert_space_before_closing_paren_in_parenthesized_expression=do not insert\n-org.eclipse.cdt.core.formatter.insert_space_before_closing_paren_in_switch=do not insert\n-org.eclipse.cdt.core.formatter.insert_space_before_closing_paren_in_while=do not insert\n-org.eclipse.cdt.core.formatter.insert_space_before_colon_in_base_clause=do not insert\n-org.eclipse.cdt.core.formatter.insert_space_before_colon_in_case=do not insert\n-org.eclipse.cdt.core.formatter.insert_space_before_colon_in_conditional=insert\n-org.eclipse.cdt.core.formatter.insert_space_before_colon_in_default=do not insert\n-org.eclipse.cdt.core.formatter.insert_space_before_colon_in_labeled_statement=do not insert\n-org.eclipse.cdt.core.formatter.insert_space_before_comma_in_array_initializer=do not insert\n-org.eclipse.cdt.core.formatter.insert_space_before_comma_in_base_types=do not insert\n-org.eclipse.cdt.core.formatter.insert_space_before_comma_in_declarator_list=do not insert\n-org.eclipse.cdt.core.formatter.insert_space_before_comma_in_enum_declarations=do not insert\n-org.eclipse.cdt.core.formatter.insert_space_before_comma_in_expression_list=do not insert\n-org.eclipse.cdt.core.formatter.insert_space_before_comma_in_method_declaration_parameters=do not insert\n-org.eclipse.cdt.core.formatter.insert_space_before_comma_in_method_declaration_throws=do not insert\n-org.eclipse.cdt.core.formatter.insert_space_before_comma_in_method_invocation_arguments=do not insert\n-org.eclipse.cdt.core.formatter.insert_space_before_comma_in_template_arguments=do not insert\n-org.eclipse.cdt.core.formatter.insert_space_before_comma_in_template_parameters=do not insert\n-org.eclipse.cdt.core.formatter.insert_space_before_opening_angle_bracket_in_template_arguments=do not insert\n-org.eclipse.cdt.core.formatter.insert_space_before_opening_angle_bracket_in_template_parameters=do not insert\n-org.eclipse.cdt.core.formatter.insert_space_before_opening_brace_in_array_initializer=insert\n-org.eclipse.cdt.core.formatter.insert_space_before_opening_brace_in_block=insert\n-org.eclipse.cdt.core.formatter.insert_space_before_opening_brace_in_method_declaration=insert\n-org.eclipse.cdt.core.formatter.insert_space_before_opening_brace_in_namespace_declaration=insert\n-org.eclipse.cdt.core.formatter.insert_space_before_opening_brace_in_switch=insert\n-org.eclipse.cdt.core.formatter.insert_space_before_opening_brace_in_type_declaration=insert\n-org.eclipse.cdt.core.formatter.insert_space_before_opening_bracket=do not insert\n-org.eclipse.cdt.core.formatter.insert_space_before_opening_paren_in_catch=insert\n-org.eclipse.cdt.core.formatter.insert_space_before_opening_paren_in_exception_specification=insert\n-org.eclipse.cdt.core.formatter.insert_space_before_opening_paren_in_for=insert\n-org.eclipse.cdt.core.formatter.insert_space_before_opening_paren_in_if=insert\n-org.eclipse.cdt.core.formatter.insert_space_before_opening_paren_in_method_declaration=do not insert\n-org.eclipse.cdt.core.formatter.insert_space_before_opening_paren_in_method_invocation=do not insert\n-org.eclipse.cdt.core.formatter.insert_space_before_opening_paren_in_parenthesized_expression=do not insert\n-org.eclipse.cdt.core.formatter.insert_space_before_opening_paren_in_switch=insert\n-org.eclipse.cdt.core.formatter.insert_space_before_opening_paren_in_while=insert\n-org.eclipse.cdt.core.formatter.insert_space_before_postfix_operator=do not insert\n-org.eclipse.cdt.core.formatter.insert_space_before_prefix_operator=do not insert\n-org.eclipse.cdt.core.formatter.insert_space_before_question_in_conditional=insert\n-org.eclipse.cdt.core.formatter.insert_space_before_semicolon=do not insert\n-org.eclipse.cdt.core.formatter.insert_space_before_semicolon_in_for=do not insert\n-org.eclipse.cdt.core.formatter.insert_space_before_unary_operator=do not insert\n-org.eclipse.cdt.core.formatter.insert_space_between_empty_braces_in_array_initializer=do not insert\n-org.eclipse.cdt.core.formatter.insert_space_between_empty_brackets=do not insert\n-org.eclipse.cdt.core.formatter.insert_space_between_empty_parens_in_exception_specification=do not insert\n-org.eclipse.cdt.core.formatter.insert_space_between_empty_parens_in_method_declaration=do not insert\n-org.eclipse.cdt.core.formatter.insert_space_between_empty_parens_in_method_invocation=do not insert\n-org.eclipse.cdt.core.formatter.join_wrapped_lines=true\n-org.eclipse.cdt.core.formatter.keep_else_statement_on_same_line=false\n-org.eclipse.cdt.core.formatter.keep_empty_array_initializer_on_one_line=false\n-org.eclipse.cdt.core.formatter.keep_imple_if_on_one_line=true\n-org.eclipse.cdt.core.formatter.keep_then_statement_on_same_line=false\n-org.eclipse.cdt.core.formatter.lineSplit=160\n-org.eclipse.cdt.core.formatter.number_of_empty_lines_to_preserve=1\n-org.eclipse.cdt.core.formatter.put_empty_statement_on_new_line=true\n-org.eclipse.cdt.core.formatter.tabulation.char=space\n-org.eclipse.cdt.core.formatter.tabulation.size=2\n-org.eclipse.cdt.core.formatter.use_tabs_only_for_leading_indentations=false\n","filename":"src\/hotspot\/.mx.jvmci\/hotspot\/templates\/eclipse\/settings\/org.eclipse.cdt.core.prefs","additions":0,"deletions":198,"binary":false,"changes":198,"status":"deleted"},{"patch":"@@ -1,5 +0,0 @@\n-#Wed Sep 01 16:21:02 PDT 2010\n-eclipse.preferences.version=1\n-formatter_profile=_hotspotStyle\n-formatter_settings_version=1\n-\n","filename":"src\/hotspot\/.mx.jvmci\/hotspot\/templates\/eclipse\/settings\/org.eclipse.cdt.ui.prefs","additions":0,"deletions":5,"binary":false,"changes":5,"status":"deleted"},{"patch":"@@ -1,6 +0,0 @@\n-#Wed Sep 01 16:13:40 PDT 2010\n-content-types\/enabled=true\n-content-types\/org.eclipse.cdt.core.cxxHeader\/file-extensions=hpp,incl\n-content-types\/org.eclipse.cdt.core.cxxSource\/file-extensions=cpp\n-eclipse.preferences.version=1\n-\n","filename":"src\/hotspot\/.mx.jvmci\/hotspot\/templates\/eclipse\/settings\/org.eclipse.core.runtime.prefs","additions":0,"deletions":6,"binary":false,"changes":6,"status":"deleted"},{"patch":"@@ -1,739 +0,0 @@\n-#\n-# ----------------------------------------------------------------------------------------------------\n-#\n-# Copyright (c) 2007, 2020, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-# ----------------------------------------------------------------------------------------------------\n-\n-import os, shutil, zipfile, re, time, sys, datetime, platform\n-from os.path import join, exists, dirname, isdir\n-from argparse import ArgumentParser, REMAINDER\n-import StringIO\n-import xml.dom.minidom\n-import subprocess\n-\n-import mx\n-import mx_gate\n-import mx_unittest\n-\n-from mx_gate import Task\n-from mx_unittest import unittest\n-\n-_suite = mx.suite('jvmci')\n-\n-JVMCI_VERSION = 9\n-\n-_JVMCI_JDK_TAG = 'jvmci'\n-\n-_minVersion = mx.VersionSpec('1.9')\n-\n-# max version (first _unsupported_ version)\n-_untilVersion = None\n-\n-_jvmciModes = {\n-    'hosted' : ['-XX:+UnlockExperimentalVMOptions', '-XX:+EnableJVMCI'],\n-    'jit' : ['-XX:+UnlockExperimentalVMOptions', '-XX:+EnableJVMCI', '-XX:+UseJVMCICompiler'],\n-    'disabled' : []\n-}\n-\n-# TODO: can optimized be built without overriding release build?\n-_jdkDebugLevels = ['release', 'fastdebug', 'slowdebug']\n-\n-# TODO: add client once\/if it can be built on 64-bit platforms\n-_jdkJvmVariants = ['server', 'client']\n-\n-\"\"\"\n-Translation table from mx_jvmci:8 --vmbuild values to mx_jvmci:9 --jdk-debug-level values.\n-\"\"\"\n-_legacyVmbuilds = {\n-    'product' : 'release',\n-    'debug' : 'slowdebug'\n-}\n-\n-\"\"\"\n-Translates a mx_jvmci:8 --vmbuild value to a mx_jvmci:9 --jdk-debug-level value.\n-\"\"\"\n-def _translateLegacyDebugLevel(debugLevel):\n-    return _legacyVmbuilds.get(debugLevel, debugLevel)\n-\n-\"\"\"\n-Translation table from mx_jvmci:8 --vm values to mx_jvmci:9 (--jdk-jvm-variant, --jvmci-mode) tuples.\n-\"\"\"\n-_legacyVms = {\n-    'jvmci' : ('server', 'jit')\n-}\n-\n-\"\"\"\n-A VM configuration composed of a JDK debug level, JVM variant and a JVMCI mode.\n-This is also a context manager that can be used with the 'with' statement to set\/change\n-a VM configuration within a dynamic scope. For example:\n-\n-    with ConfiguredJDK(debugLevel='fastdebug'):\n-        dacapo(['pmd'])\n-\"\"\"\n-class VM:\n-    def __init__(self, jvmVariant=None, debugLevel=None, jvmciMode=None):\n-        self.update(jvmVariant, debugLevel, jvmciMode)\n-\n-    def update(self, jvmVariant=None, debugLevel=None, jvmciMode=None):\n-        if jvmVariant in _legacyVms:\n-            # Backwards compatibility for mx_jvmci:8 API\n-            jvmVariant, newJvmciMode = _legacyVms[jvmVariant]\n-            if jvmciMode is not None and jvmciMode != newJvmciMode:\n-                mx.abort('JVM variant \"' + jvmVariant + '\" implies JVMCI mode \"' + newJvmciMode +\n-                         '\" which conflicts with explicitly specified JVMCI mode of \"' + jvmciMode + '\"')\n-            jvmciMode = newJvmciMode\n-        debugLevel = _translateLegacyDebugLevel(debugLevel)\n-        assert jvmVariant is None or jvmVariant in _jdkJvmVariants, jvmVariant\n-        assert debugLevel is None or debugLevel in _jdkDebugLevels, debugLevel\n-        assert jvmciMode is None or jvmciMode in _jvmciModes, jvmciMode\n-        self.jvmVariant = jvmVariant or _vm.jvmVariant\n-        self.debugLevel = debugLevel or _vm.debugLevel\n-        self.jvmciMode = jvmciMode or _vm.jvmciMode\n-\n-    def __enter__(self):\n-        global _vm\n-        self.previousVm = _vm\n-        _vm = self\n-\n-    def __exit__(self, exc_type, exc_value, traceback):\n-        global _vm\n-        _vm = self.previousVm\n-\n-_vm = VM(jvmVariant=_jdkJvmVariants[0], debugLevel=_jdkDebugLevels[0], jvmciMode='hosted')\n-\n-def get_vm():\n-    \"\"\"\n-    Gets the configured VM.\n-    \"\"\"\n-    return _vm\n-\n-def relativeVmLibDirInJdk():\n-    mxos = mx.get_os()\n-    if mxos == 'darwin':\n-        return join('lib')\n-    if mxos == 'windows' or mxos == 'cygwin':\n-        return join('bin')\n-    return join('lib', mx.get_arch())\n-\n-def isJVMCIEnabled(vm):\n-    assert vm in _jdkJvmVariants\n-    return True\n-\n-def _makehelp():\n-    return subprocess.check_output([mx.gmake_cmd(), 'help'], cwd=_get_jdk_dir())\n-\n-def _runmake(args):\n-    \"\"\"run the JDK make process\n-\n-To build hotspot and import it into the JDK: \"mx make hotspot import-hotspot\"\n-{0}\"\"\"\n-\n-    jdkBuildDir = _get_jdk_build_dir()\n-    if not exists(jdkBuildDir):\n-        # JDK10 must be bootstrapped with a JDK9\n-        compliance = mx.JavaCompliance('9')\n-        jdk9 = mx.get_jdk(compliance.exactMatch, versionDescription=compliance.value)\n-        cmd = ['sh', 'configure', '--with-debug-level=' + _vm.debugLevel, '--with-native-debug-symbols=external', '--disable-precompiled-headers', '--enable-jvm-feature-graal',\n-               '--with-jvm-variants=' + _vm.jvmVariant, '--disable-warnings-as-errors', '--with-boot-jdk=' + jdk9.home]\n-        mx.run(cmd, cwd=_get_jdk_dir())\n-    cmd = [mx.gmake_cmd(), 'CONF=' + _vm.debugLevel]\n-    if mx.get_opts().verbose:\n-        cmd.append('LOG=debug')\n-    cmd.extend(args)\n-    if mx.get_opts().use_jdk_image and 'images' not in args:\n-        cmd.append('images')\n-\n-    if not mx.get_opts().verbose:\n-        mx.log('--------------- make execution ----------------------')\n-        mx.log('Working directory: ' + _get_jdk_dir())\n-        mx.log('Command line: ' + ' '.join(cmd))\n-        mx.log('-----------------------------------------------------')\n-\n-    mx.run(cmd, cwd=_get_jdk_dir())\n-\n-def _runmultimake(args):\n-    \"\"\"run the JDK make process for one or more configurations\"\"\"\n-\n-    jvmVariantsDefault = ','.join(_jdkJvmVariants)\n-    debugLevelsDefault = ','.join(_jdkDebugLevels)\n-\n-    parser = ArgumentParser(prog='mx multimake')\n-    parser.add_argument('--jdk-jvm-variants', '--vms', help='a comma separated list of VMs to build (default: ' + jvmVariantsDefault + ')', metavar='<args>', default=jvmVariantsDefault)\n-    parser.add_argument('--jdk-debug-levels', '--builds', help='a comma separated list of JDK debug levels (default: ' + debugLevelsDefault + ')', metavar='<args>', default=debugLevelsDefault)\n-    parser.add_argument('-n', '--no-check', action='store_true', help='omit running \"java -version\" after each build')\n-    select = parser.add_mutually_exclusive_group()\n-    select.add_argument('-c', '--console', action='store_true', help='send build output to console instead of log files')\n-    select.add_argument('-d', '--output-dir', help='directory for log files instead of current working directory', default=os.getcwd(), metavar='<dir>')\n-\n-    args = parser.parse_args(args)\n-    jvmVariants = args.jdk_jvm_variants.split(',')\n-    debugLevels = [_translateLegacyDebugLevel(dl) for dl in args.jdk_debug_levels.split(',')]\n-\n-    allStart = time.time()\n-    for jvmVariant in jvmVariants:\n-        for debugLevel in debugLevels:\n-            if not args.console:\n-                logFile = join(mx.ensure_dir_exists(args.output_dir), jvmVariant + '-' + debugLevel + '.log')\n-                log = open(logFile, 'wb')\n-                start = time.time()\n-                mx.log('BEGIN: ' + jvmVariant + '-' + debugLevel + '\\t(see: ' + logFile + ')')\n-                verbose = ['-v'] if mx.get_opts().verbose else []\n-                # Run as subprocess so that output can be directed to a file\n-                cmd = [sys.executable, '-u', mx.__file__] + verbose + ['--jdk-jvm-variant=' + jvmVariant, '--jdk-debug-level=' + debugLevel, 'make']\n-                mx.logv(\"executing command: \" + str(cmd))\n-                subprocess.check_call(cmd, cwd=_suite.dir, stdout=log, stderr=subprocess.STDOUT)\n-                duration = datetime.timedelta(seconds=time.time() - start)\n-                mx.log('END:   ' + jvmVariant + '-' + debugLevel + '\\t[' + str(duration) + ']')\n-            else:\n-                with VM(jvmVariant=jvmVariant, debugLevel=debugLevel):\n-                    _runmake([])\n-            if not args.no_check:\n-                with VM(jvmciMode='jit'):\n-                    run_vm(['-XX:-BootstrapJVMCI', '-version'])\n-    allDuration = datetime.timedelta(seconds=time.time() - allStart)\n-    mx.log('TOTAL TIME:   ' + '[' + str(allDuration) + ']')\n-\n-class HotSpotProject(mx.NativeProject):\n-    \"\"\"\n-    Defines a NativeProject representing the HotSpot binaries built via make.\n-    \"\"\"\n-    def __init__(self, suite, name, deps, workingSets, **args):\n-        assert name == 'hotspot'\n-        mx.NativeProject.__init__(self, suite, name, \"\", [], deps, workingSets, None, None, join(suite.mxDir, name))\n-\n-    def eclipse_config_up_to_date(self, configZip):\n-        # Assume that any change to this module might imply changes to the generated IDE files\n-        if configZip.isOlderThan(__file__):\n-            return False\n-        for _, source in self._get_eclipse_settings_sources().iteritems():\n-            if configZip.isOlderThan(source):\n-                return False\n-        return True\n-\n-    def _get_eclipse_settings_sources(self):\n-        \"\"\"\n-        Gets a dictionary from the name of an Eclipse settings file to\n-        the file providing its generated content.\n-        \"\"\"\n-        if not hasattr(self, '_eclipse_settings'):\n-            esdict = {}\n-            templateSettingsDir = join(self.dir, 'templates', 'eclipse', 'settings')\n-            if exists(templateSettingsDir):\n-                for name in os.listdir(templateSettingsDir):\n-                    source = join(templateSettingsDir, name)\n-                    esdict[name] = source\n-            self._eclipse_settings = esdict\n-        return self._eclipse_settings\n-\n-    def _eclipseinit(self, files=None, libFiles=None):\n-        \"\"\"\n-        Generates an Eclipse project for each HotSpot build configuration.\n-        \"\"\"\n-\n-        roots = [\n-            'cpu',\n-            'os',\n-            'os_cpu',\n-            'share'\n-        ]\n-\n-        for jvmVariant in _jdkJvmVariants:\n-            for debugLevel in _jdkDebugLevels:\n-                name = jvmVariant + '-' + debugLevel\n-                eclProjectDir = join(self.dir, 'eclipse', name)\n-                mx.ensure_dir_exists(eclProjectDir)\n-\n-                out = mx.XMLDoc()\n-                out.open('projectDescription')\n-                out.element('name', data='hotspot:' + name)\n-                out.element('comment', data='')\n-                out.element('projects', data='')\n-                out.open('buildSpec')\n-                out.open('buildCommand')\n-                out.element('name', data='org.eclipse.cdt.managedbuilder.core.ScannerConfigBuilder')\n-                out.element('triggers', data='full,incremental')\n-                out.element('arguments', data='')\n-                out.close('buildCommand')\n-\n-                out.close('buildSpec')\n-                out.open('natures')\n-                out.element('nature', data='org.eclipse.cdt.core.cnature')\n-                out.element('nature', data='org.eclipse.cdt.core.ccnature')\n-                out.element('nature', data='org.eclipse.cdt.managedbuilder.core.managedBuildNature')\n-                out.element('nature', data='org.eclipse.cdt.managedbuilder.core.ScannerConfigNature')\n-                out.close('natures')\n-\n-                if roots:\n-                    out.open('linkedResources')\n-                    for r in roots:\n-                        f = join(_suite.dir, r)\n-                        out.open('link')\n-                        out.element('name', data=r)\n-                        out.element('type', data='2' if isdir(f) else '1')\n-                        out.element('locationURI', data=mx.get_eclipse_project_rel_locationURI(f, eclProjectDir))\n-                        out.close('link')\n-\n-                    out.open('link')\n-                    out.element('name', data='gensrc')\n-                    out.element('type', data='2')\n-                    generated = join(_get_hotspot_build_dir(jvmVariant, debugLevel), 'gensrc')\n-                    out.element('locationURI', data=mx.get_eclipse_project_rel_locationURI(generated, eclProjectDir))\n-                    out.close('link')\n-\n-                    out.close('linkedResources')\n-                out.close('projectDescription')\n-                projectFile = join(eclProjectDir, '.project')\n-                mx.update_file(projectFile, out.xml(indent='\\t', newl='\\n'))\n-                if files:\n-                    files.append(projectFile)\n-\n-                cprojectTemplate = join(self.dir, 'templates', 'eclipse', 'cproject')\n-                cprojectFile = join(eclProjectDir, '.cproject')\n-                with open(cprojectTemplate) as f:\n-                    content = f.read()\n-                mx.update_file(cprojectFile, content)\n-                if files:\n-                    files.append(cprojectFile)\n-\n-                settingsDir = join(eclProjectDir, \".settings\")\n-                mx.ensure_dir_exists(settingsDir)\n-                for name, source in self._get_eclipse_settings_sources().iteritems():\n-                    out = StringIO.StringIO()\n-                    print >> out, '# GENERATED -- DO NOT EDIT'\n-                    print >> out, '# Source:', source\n-                    with open(source) as f:\n-                        print >> out, f.read()\n-                    content = out.getvalue()\n-                    mx.update_file(join(settingsDir, name), content)\n-                    if files:\n-                        files.append(join(settingsDir, name))\n-\n-    def getBuildTask(self, args):\n-        return JDKBuildTask(self, args, _vm.debugLevel, _vm.jvmVariant)\n-\n-\n-class JDKBuildTask(mx.NativeBuildTask):\n-    def __init__(self, project, args, debugLevel, jvmVariant):\n-        mx.NativeBuildTask.__init__(self, args, project)\n-        self.jvmVariant = jvmVariant\n-        self.debugLevel = debugLevel\n-\n-    def __str__(self):\n-        return 'Building JDK[{}, {}]'.format(self.debugLevel, self.jvmVariant)\n-\n-    def build(self):\n-        if mx.get_opts().use_jdk_image:\n-            _runmake(['images'])\n-        else:\n-            _runmake([])\n-        self._newestOutput = None\n-\n-    def clean(self, forBuild=False):\n-        if forBuild:  # Let make handle incremental builds\n-            return\n-        if exists(_get_jdk_build_dir(self.debugLevel)):\n-            _runmake(['clean'])\n-        self._newestOutput = None\n-\n-# Backwards compatibility for mx_jvmci:8 API\n-def buildvms(args):\n-    _runmultimake(args)\n-\n-def run_vm(args, vm=None, nonZeroIsFatal=True, out=None, err=None, cwd=None, timeout=None, debugLevel=None, vmbuild=None):\n-    \"\"\"run a Java program by executing the java executable in a JVMCI JDK\"\"\"\n-    jdkTag = mx.get_jdk_option().tag\n-    if jdkTag and jdkTag != _JVMCI_JDK_TAG:\n-        mx.abort('The \"--jdk\" option must have the tag \"' + _JVMCI_JDK_TAG + '\" when running a command requiring a JVMCI VM')\n-    jdk = get_jvmci_jdk(debugLevel=debugLevel or _translateLegacyDebugLevel(vmbuild))\n-    return jdk.run_java(args, nonZeroIsFatal=nonZeroIsFatal, out=out, err=err, cwd=cwd, timeout=timeout)\n-\n-def _unittest_vm_launcher(vmArgs, mainClass, mainClassArgs):\n-    run_vm(vmArgs + [mainClass] + mainClassArgs)\n-\n-mx_unittest.set_vm_launcher('JVMCI VM launcher', _unittest_vm_launcher)\n-\n-def _jvmci_gate_runner(args, tasks):\n-    # Build release server VM now so we can run the unit tests\n-    with Task('BuildHotSpotJVMCIHosted: release', tasks) as t:\n-        if t: _runmultimake(['--jdk-jvm-variants', 'server', '--jdk-debug-levels', 'release'])\n-\n-    # Run unit tests in hosted mode\n-    with VM(jvmVariant='server', debugLevel='release', jvmciMode='hosted'):\n-        with Task('JVMCI UnitTests: hosted-release', tasks) as t:\n-            if t: unittest(['--suite', 'jvmci', '--enable-timing', '--verbose', '--fail-fast'])\n-\n-    # Build the other VM flavors\n-    with Task('BuildHotSpotJVMCIOthers: fastdebug', tasks) as t:\n-        if t: _runmultimake(['--jdk-jvm-variants', 'server', '--jdk-debug-levels', 'fastdebug'])\n-\n-    with Task('CleanAndBuildIdealGraphVisualizer', tasks, disableJacoco=True) as t:\n-        if t:\n-            buildxml = mx._cygpathU2W(join(_suite.dir, 'src', 'share', 'tools', 'IdealGraphVisualizer', 'build.xml'))\n-            mx.run(['ant', '-f', buildxml, '-q', 'clean', 'build'], env=_igvBuildEnv())\n-\n-mx_gate.add_gate_runner(_suite, _jvmci_gate_runner)\n-mx_gate.add_gate_argument('-g', '--only-build-jvmci', action='store_false', dest='buildNonJVMCI', help='only build the JVMCI VM')\n-\n-def _igvJdk():\n-    v8u20 = mx.VersionSpec(\"1.8.0_20\")\n-    v8u40 = mx.VersionSpec(\"1.8.0_40\")\n-    v8 = mx.VersionSpec(\"1.8\")\n-    def _igvJdkVersionCheck(version):\n-        return version >= v8 and (version < v8u20 or version >= v8u40)\n-    return mx.get_jdk(_igvJdkVersionCheck, versionDescription='>= 1.8 and < 1.8.0u20 or >= 1.8.0u40', purpose=\"building & running IGV\").home\n-\n-def _igvBuildEnv():\n-        # When the http_proxy environment variable is set, convert it to the proxy settings that ant needs\n-    env = dict(os.environ)\n-    proxy = os.environ.get('http_proxy')\n-    if not (proxy is None) and len(proxy) > 0:\n-        if ':\/\/' in proxy:\n-            # Remove the http:\/\/ prefix (or any other protocol prefix)\n-            proxy = proxy.split(':\/\/', 1)[1]\n-        # Separate proxy server name and port number\n-        proxyName, proxyPort = proxy.split(':', 1)\n-        proxyEnv = '-DproxyHost=\"' + proxyName + '\" -DproxyPort=' + proxyPort\n-        env['ANT_OPTS'] = proxyEnv\n-\n-    env['JAVA_HOME'] = _igvJdk()\n-    return env\n-\n-def igv(args):\n-    \"\"\"run the Ideal Graph Visualizer\"\"\"\n-    logFile = '.ideal_graph_visualizer.log'\n-    with open(join(_suite.dir, logFile), 'w') as fp:\n-        mx.logv('[Ideal Graph Visualizer log is in ' + fp.name + ']')\n-        nbplatform = join(_suite.dir, 'src', 'share', 'tools', 'IdealGraphVisualizer', 'nbplatform')\n-\n-        # Remove NetBeans platform if it is earlier than the current supported version\n-        if exists(nbplatform):\n-            updateTrackingFile = join(nbplatform, 'platform', 'update_tracking', 'org-netbeans-core.xml')\n-            if not exists(updateTrackingFile):\n-                mx.log('Could not find \\'' + updateTrackingFile + '\\', removing NetBeans platform')\n-                shutil.rmtree(nbplatform)\n-            else:\n-                dom = xml.dom.minidom.parse(updateTrackingFile)\n-                currentVersion = mx.VersionSpec(dom.getElementsByTagName('module_version')[0].getAttribute('specification_version'))\n-                supportedVersion = mx.VersionSpec('3.43.1')\n-                if currentVersion < supportedVersion:\n-                    mx.log('Replacing NetBeans platform version ' + str(currentVersion) + ' with version ' + str(supportedVersion))\n-                    shutil.rmtree(nbplatform)\n-                elif supportedVersion < currentVersion:\n-                    mx.log('Supported NetBeans version in igv command should be updated to ' + str(currentVersion))\n-\n-        if not exists(nbplatform):\n-            mx.logv('[This execution may take a while as the NetBeans platform needs to be downloaded]')\n-\n-        env = _igvBuildEnv()\n-        # make the jar for Batik 1.7 available.\n-        env['IGV_BATIK_JAR'] = mx.library('BATIK').get_path(True)\n-        if mx.run(['ant', '-f', mx._cygpathU2W(join(_suite.dir, 'src', 'share', 'tools', 'IdealGraphVisualizer', 'build.xml')), '-l', mx._cygpathU2W(fp.name), 'run'], env=env, nonZeroIsFatal=False):\n-            mx.abort(\"IGV ant build & launch failed. Check '\" + logFile + \"'. You can also try to delete 'src\/share\/tools\/IdealGraphVisualizer\/nbplatform'.\")\n-\n-def c1visualizer(args):\n-    \"\"\"run the Cl Compiler Visualizer\"\"\"\n-    libpath = join(_suite.dir, 'lib')\n-    if mx.get_os() == 'windows':\n-        executable = join(libpath, 'c1visualizer', 'bin', 'c1visualizer.exe')\n-    else:\n-        executable = join(libpath, 'c1visualizer', 'bin', 'c1visualizer')\n-\n-    # Check whether the current C1Visualizer installation is the up-to-date\n-    if exists(executable) and not exists(mx.library('C1VISUALIZER_DIST').get_path(resolve=False)):\n-        mx.log('Updating C1Visualizer')\n-        shutil.rmtree(join(libpath, 'c1visualizer'))\n-\n-    archive = mx.library('C1VISUALIZER_DIST').get_path(resolve=True)\n-\n-    if not exists(executable):\n-        zf = zipfile.ZipFile(archive, 'r')\n-        zf.extractall(libpath)\n-\n-    if not exists(executable):\n-        mx.abort('C1Visualizer binary does not exist: ' + executable)\n-\n-    if mx.get_os() != 'windows':\n-        # Make sure that execution is allowed. The zip file does not always specfiy that correctly\n-        os.chmod(executable, 0777)\n-\n-    mx.run([executable])\n-\n-def hsdis(args, copyToDir=None):\n-    \"\"\"download the hsdis library\n-\n-    This is needed to support HotSpot's assembly dumping features.\n-    By default it downloads the Intel syntax version, use the 'att' argument to install AT&T syntax.\"\"\"\n-    flavor = 'intel'\n-    if 'att' in args:\n-        flavor = 'att'\n-    lib = mx.add_lib_suffix('hsdis-' + mx.get_arch())\n-    path = join(_suite.dir, 'lib', lib)\n-\n-    sha1s = {\n-        'att\/hsdis-amd64.dll' : 'bcbd535a9568b5075ab41e96205e26a2bac64f72',\n-        'att\/hsdis-amd64.so' : '58919ba085d4ef7a513f25bae75e7e54ee73c049',\n-        'intel\/hsdis-amd64.dll' : '6a388372cdd5fe905c1a26ced614334e405d1f30',\n-        'intel\/hsdis-amd64.so' : '844ed9ffed64fe9599638f29a8450c50140e3192',\n-        'intel\/hsdis-amd64.dylib' : 'fdb13ef0d7d23d93dacaae9c98837bea0d4fc5a2',\n-    }\n-\n-    flavoredLib = flavor + \"\/\" + lib\n-    if flavoredLib not in sha1s:\n-        mx.logv(\"hsdis not supported on this plattform or architecture\")\n-        return\n-\n-    if not exists(path):\n-        sha1 = sha1s[flavoredLib]\n-        sha1path = path + '.sha1'\n-        mx.download_file_with_sha1('hsdis', path, ['https:\/\/lafo.ssw.uni-linz.ac.at\/pub\/hsdis\/' + flavoredLib], sha1, sha1path, True, True, sources=False)\n-    if copyToDir is not None and exists(copyToDir):\n-        shutil.copy(path, copyToDir)\n-\n-def hcfdis(args):\n-    \"\"\"disassemble HexCodeFiles embedded in text files\n-\n-    Run a tool over the input files to convert all embedded HexCodeFiles\n-    to a disassembled format.\"\"\"\n-\n-    parser = ArgumentParser(prog='mx hcfdis')\n-    parser.add_argument('-m', '--map', help='address to symbol map applied to disassembler output')\n-    parser.add_argument('files', nargs=REMAINDER, metavar='files...')\n-\n-    args = parser.parse_args(args)\n-\n-    path = mx.library('HCFDIS').get_path(resolve=True)\n-    mx.run_java(['-cp', path, 'com.oracle.max.hcfdis.HexCodeFileDis'] + args.files)\n-\n-    if args.map is not None:\n-        addressRE = re.compile(r'0[xX]([A-Fa-f0-9]+)')\n-        with open(args.map) as fp:\n-            lines = fp.read().splitlines()\n-        symbols = dict()\n-        for l in lines:\n-            addressAndSymbol = l.split(' ', 1)\n-            if len(addressAndSymbol) == 2:\n-                address, symbol = addressAndSymbol\n-                if address.startswith('0x'):\n-                    address = long(address, 16)\n-                    symbols[address] = symbol\n-        for f in args.files:\n-            with open(f) as fp:\n-                lines = fp.read().splitlines()\n-            updated = False\n-            for i in range(0, len(lines)):\n-                l = lines[i]\n-                for m in addressRE.finditer(l):\n-                    sval = m.group(0)\n-                    val = long(sval, 16)\n-                    sym = symbols.get(val)\n-                    if sym:\n-                        l = l.replace(sval, sym)\n-                        updated = True\n-                        lines[i] = l\n-            if updated:\n-                mx.log('updating ' + f)\n-                with open('new_' + f, \"w\") as fp:\n-                    for l in lines:\n-                        print >> fp, l\n-\n-def jol(args):\n-    \"\"\"Java Object Layout\"\"\"\n-    joljar = mx.library('JOL_INTERNALS').get_path(resolve=True)\n-    candidates = mx.findclass(args, logToConsole=False, matcher=lambda s, classname: s == classname or classname.endswith('.' + s) or classname.endswith('$' + s))\n-\n-    if len(candidates) > 0:\n-        candidates = mx.select_items(sorted(candidates))\n-    else:\n-        # mx.findclass can be mistaken, don't give up yet\n-        candidates = args\n-\n-    run_vm(['-javaagent:' + joljar, '-cp', os.pathsep.join([mx.classpath(), joljar]), \"org.openjdk.jol.MainObjectInternals\"] + candidates)\n-\n-def _get_openjdk_os():\n-    # See: common\/autoconf\/platform.m4\n-    os = mx.get_os()\n-    if 'darwin' in os:\n-        os = 'macosx'\n-    elif 'linux' in os:\n-        os = 'linux'\n-    elif 'cygwin' in os or 'mingw' in os:\n-        os = 'windows'\n-    return os\n-\n-def _get_openjdk_cpu():\n-    cpu = mx.get_arch()\n-    if cpu == 'amd64':\n-        cpu = 'x86_64'\n-    return cpu\n-\n-def _get_openjdk_os_cpu():\n-    return _get_openjdk_os() + '-' + _get_openjdk_cpu()\n-\n-def _get_jdk_dir():\n-    suiteParentDir = dirname(_suite.dir)\n-    # suitParentDir is now something like: \/some_prefix\/jdk10-hs\/open\/src\n-    pathComponents = suiteParentDir.split(os.sep)\n-    for i in range(0, len(pathComponents)):\n-        if pathComponents[i] in [\"open\", \"src\"]:\n-            del pathComponents[i:]\n-            break\n-    return os.path.join(os.sep, *pathComponents)\n-\n-def _get_jdk_build_dir(debugLevel=None):\n-    \"\"\"\n-    Gets the directory into which the JDK is built. This directory contains\n-    the exploded JDK under jdk\/ and the JDK image under images\/jdk\/.\n-    \"\"\"\n-    if debugLevel is None:\n-        debugLevel = _vm.debugLevel\n-    name = '{}-{}-{}-{}'.format(_get_openjdk_os_cpu(), 'normal', _vm.jvmVariant, debugLevel)\n-    return join(_get_jdk_dir(), 'build', name)\n-\n-_jvmci_bootclasspath_prepends = []\n-\n-def _get_hotspot_build_dir(jvmVariant=None, debugLevel=None):\n-    \"\"\"\n-    Gets the directory in which a particular HotSpot configuration is built\n-    (e.g., <JDK_REPO_ROOT>\/build\/macosx-x86_64-normal-server-release\/hotspot\/variant-<variant>)\n-    \"\"\"\n-    if jvmVariant is None:\n-        jvmVariant = _vm.jvmVariant\n-\n-    name = 'variant-{}'.format(jvmVariant)\n-    return join(_get_jdk_build_dir(debugLevel=debugLevel), 'hotspot', name)\n-\n-class JVMCI9JDKConfig(mx.JDKConfig):\n-    def __init__(self, debugLevel):\n-        self.debugLevel = debugLevel\n-        jdkBuildDir = _get_jdk_build_dir(debugLevel)\n-        jdkDir = join(jdkBuildDir, 'images', 'jdk') if mx.get_opts().use_jdk_image else join(jdkBuildDir, 'jdk')\n-        mx.JDKConfig.__init__(self, jdkDir, tag=_JVMCI_JDK_TAG)\n-\n-    def parseVmArgs(self, args, addDefaultArgs=True):\n-        args = mx.expand_project_in_args(args, insitu=False)\n-        jacocoArgs = mx_gate.get_jacoco_agent_args()\n-        if jacocoArgs:\n-            args = jacocoArgs + args\n-\n-        args = ['-Xbootclasspath\/p:' + dep.classpath_repr() for dep in _jvmci_bootclasspath_prepends] + args\n-\n-        # Remove JVMCI jars from class path. They are only necessary when\n-        # compiling with a javac from JDK8 or earlier.\n-        cpIndex, cp = mx.find_classpath_arg(args)\n-        if cp:\n-            excluded = frozenset([dist.path for dist in _suite.dists])\n-            cp = os.pathsep.join([e for e in cp.split(os.pathsep) if e not in excluded])\n-            args[cpIndex] = cp\n-\n-        if '-version' in args:\n-            ignoredArgs = args[args.index('-version') + 1:]\n-            if  len(ignoredArgs) > 0:\n-                mx.log(\"Warning: The following options will be ignored by the vm because they come after the '-version' argument: \" + ' '.join(ignoredArgs))\n-        return self.processArgs(args, addDefaultArgs=addDefaultArgs)\n-\n-    # Overrides JDKConfig\n-    def run_java(self, args, vm=None, nonZeroIsFatal=True, out=None, err=None, cwd=None, timeout=None, env=None, addDefaultArgs=True):\n-        if vm is None:\n-            vm = 'server'\n-\n-        args = self.parseVmArgs(args, addDefaultArgs=addDefaultArgs)\n-\n-        jvmciModeArgs = _jvmciModes[_vm.jvmciMode]\n-        cmd = [self.java] + ['-' + vm] + jvmciModeArgs + args\n-        return mx.run(cmd, nonZeroIsFatal=nonZeroIsFatal, out=out, err=err, cwd=cwd)\n-\n-\"\"\"\n-The dict of JVMCI JDKs indexed by debug-level names.\n-\"\"\"\n-_jvmci_jdks = {}\n-\n-def get_jvmci_jdk(debugLevel=None):\n-    \"\"\"\n-    Gets the JVMCI JDK corresponding to 'debugLevel'.\n-    \"\"\"\n-    if not debugLevel:\n-        debugLevel = _vm.debugLevel\n-    jdk = _jvmci_jdks.get(debugLevel)\n-    if jdk is None:\n-        try:\n-            jdk = JVMCI9JDKConfig(debugLevel)\n-        except mx.JDKConfigException as e:\n-            jdkBuildDir = _get_jdk_build_dir(debugLevel)\n-            msg = 'Error with the JDK built into {}:\\n{}\\nTry (re)building it with: mx --jdk-debug-level={} make'\n-            if mx.get_opts().use_jdk_image:\n-                msg += ' images'\n-            mx.abort(msg.format(jdkBuildDir, e.message, debugLevel))\n-        _jvmci_jdks[debugLevel] = jdk\n-    return jdk\n-\n-class JVMCI9JDKFactory(mx.JDKFactory):\n-    def getJDKConfig(self):\n-        jdk = get_jvmci_jdk(_vm.debugLevel)\n-        return jdk\n-\n-    def description(self):\n-        return \"JVMCI JDK\"\n-\n-mx.update_commands(_suite, {\n-    'make': [_runmake, '[args...]', _makehelp],\n-    'multimake': [_runmultimake, '[options]'],\n-    'c1visualizer' : [c1visualizer, ''],\n-    'hsdis': [hsdis, '[att]'],\n-    'hcfdis': [hcfdis, ''],\n-    'igv' : [igv, ''],\n-    'jol' : [jol, ''],\n-    'vm': [run_vm, '[-options] class [args...]'],\n-})\n-\n-mx.add_argument('-M', '--jvmci-mode', action='store', choices=sorted(_jvmciModes.viewkeys()), help='the JVM variant type to build\/run (default: ' + _vm.jvmciMode + ')')\n-mx.add_argument('--jdk-jvm-variant', '--vm', action='store', choices=_jdkJvmVariants + sorted(_legacyVms.viewkeys()), help='the JVM variant type to build\/run (default: ' + _vm.jvmVariant + ')')\n-mx.add_argument('--jdk-debug-level', '--vmbuild', action='store', choices=_jdkDebugLevels + sorted(_legacyVmbuilds.viewkeys()), help='the JDK debug level to build\/run (default: ' + _vm.debugLevel + ')')\n-mx.add_argument('-I', '--use-jdk-image', action='store_true', help='build\/run JDK image instead of exploded JDK')\n-\n-mx.addJDKFactory(_JVMCI_JDK_TAG, mx.JavaCompliance('9'), JVMCI9JDKFactory())\n-\n-def mx_post_parse_cmd_line(opts):\n-    mx.set_java_command_default_jdk_tag(_JVMCI_JDK_TAG)\n-\n-    jdkTag = mx.get_jdk_option().tag\n-\n-    jvmVariant = None\n-    debugLevel = None\n-    jvmciMode = None\n-\n-    if opts.jdk_jvm_variant is not None:\n-        jvmVariant = opts.jdk_jvm_variant\n-        if jdkTag and jdkTag != _JVMCI_JDK_TAG:\n-            mx.warn('Ignoring \"--jdk-jvm-variant\" option as \"--jdk\" tag is not \"' + _JVMCI_JDK_TAG + '\"')\n-\n-    if opts.jdk_debug_level is not None:\n-        debugLevel = _translateLegacyDebugLevel(opts.jdk_debug_level)\n-        if jdkTag and jdkTag != _JVMCI_JDK_TAG:\n-            mx.warn('Ignoring \"--jdk-debug-level\" option as \"--jdk\" tag is not \"' + _JVMCI_JDK_TAG + '\"')\n-\n-    if opts.jvmci_mode is not None:\n-        jvmciMode = opts.jvmci_mode\n-        if jdkTag and jdkTag != _JVMCI_JDK_TAG:\n-            mx.warn('Ignoring \"--jvmci-mode\" option as \"--jdk\" tag is not \"' + _JVMCI_JDK_TAG + '\"')\n-\n-    _vm.update(jvmVariant, debugLevel, jvmciMode)\n","filename":"src\/hotspot\/.mx.jvmci\/mx_jvmci.py","additions":0,"deletions":739,"binary":false,"changes":739,"status":"deleted"},{"patch":"@@ -1,251 +0,0 @@\n-suite = {\n-  \"mxversion\" : \"5.23.1\",\n-  \"name\" : \"jvmci\",\n-  \"url\" : \"http:\/\/openjdk.java.net\/projects\/graal\",\n-  \"developer\" : {\n-    \"name\" : \"Truffle and Graal developers\",\n-    \"email\" : \"graal-dev@openjdk.java.net\",\n-    \"organization\" : \"Graal\",\n-    \"organizationUrl\" : \"http:\/\/openjdk.java.net\/projects\/graal\",\n-  },\n-  \"repositories\" : {\n-    \"lafo-snapshots\" : {\n-      \"url\" : \"https:\/\/curio.ssw.jku.at\/nexus\/content\/repositories\/snapshots\",\n-      \"licenses\" : [\"GPLv2-CPE\", \"UPL\"]\n-    },\n-  },\n-\n-  \"licenses\" : {\n-    \"UPL\" : {\n-      \"name\" : \"Universal Permissive License, Version 1.0\",\n-      \"url\" : \"http:\/\/opensource.org\/licenses\/UPL\",\n-    }\n-  },\n-\n-  \"defaultLicense\" : \"GPLv2-CPE\",\n-\n-  \"outputRoot\" : \"..\/..\/build\/mx\/hotspot\",\n-\n-    # ------------- Libraries -------------\n-\n-  \"libraries\" : {\n-\n-    \"TESTNG\" : {\n-      \"urls\" : [\"http:\/\/central.maven.org\/maven2\/org\/testng\/testng\/6.9.10\/testng-6.9.10.jar\"],\n-      \"sha1\" : \"6feb3e964aeb7097aff30c372aac3ec0f8d87ede\",\n-    },\n-  },\n-\n-  \"projects\" : {\n-\n-    # ------------- JVMCI:Service -------------\n-\n-    \"jdk.vm.ci.services\" : {\n-      \"subDir\" : \"..\/jdk.internal.vm.ci\/share\/classes\",\n-      \"sourceDirs\" : [\"src\"],\n-      \"imports\" : [\n-        \"jdk.internal.misc\"\n-      ],\n-      \"javaCompliance\" : \"9+\",\n-      \"checkstyleVersion\" : \"8.8\",\n-      \"workingSets\" : \"API,JVMCI\",\n-    },\n-\n-    # ------------- JVMCI:API -------------\n-\n-    \"jdk.vm.ci.common\" : {\n-      \"subDir\" : \"..\/jdk.internal.vm.ci\/share\/classes\",\n-      \"sourceDirs\" : [\"src\"],\n-      \"dependencies\" : [\n-        \"jdk.vm.ci.services\",\n-      ],\n-      \"checkstyle\" : \"jdk.vm.ci.services\",\n-      \"javaCompliance\" : \"9+\",\n-      \"workingSets\" : \"API,JVMCI\",\n-    },\n-\n-    \"jdk.vm.ci.meta\" : {\n-      \"subDir\" : \"..\/jdk.internal.vm.ci\/share\/classes\",\n-      \"sourceDirs\" : [\"src\"],\n-      \"checkstyle\" : \"jdk.vm.ci.services\",\n-      \"javaCompliance\" : \"9+\",\n-      \"workingSets\" : \"API,JVMCI\",\n-    },\n-\n-    \"jdk.vm.ci.code\" : {\n-      \"subDir\" : \"..\/jdk.internal.vm.ci\/share\/classes\",\n-      \"sourceDirs\" : [\"src\"],\n-      \"dependencies\" : [\"jdk.vm.ci.meta\"],\n-      \"checkstyle\" : \"jdk.vm.ci.services\",\n-      \"javaCompliance\" : \"9+\",\n-      \"workingSets\" : \"API,JVMCI\",\n-    },\n-\n-    \"jdk.vm.ci.code.test\" : {\n-      \"subDir\" : \"..\/..\/test\/hotspot\/jtreg\/compiler\/jvmci\",\n-      \"sourceDirs\" : [\"src\"],\n-      \"dependencies\" : [\n-        \"mx:JUNIT\",\n-        \"jdk.vm.ci.amd64\",\n-        \"jdk.vm.ci.code\",\n-        \"jdk.vm.ci.hotspot\",\n-      ],\n-      \"checkstyle\" : \"jdk.vm.ci.services\",\n-      \"javaCompliance\" : \"9+\",\n-      \"workingSets\" : \"API,JVMCI\",\n-    },\n-\n-    \"jdk.vm.ci.runtime\" : {\n-      \"subDir\" : \"..\/jdk.internal.vm.ci\/share\/classes\",\n-      \"sourceDirs\" : [\"src\"],\n-      \"dependencies\" : [\n-        \"jdk.vm.ci.code\",\n-        \"jdk.vm.ci.services\",\n-      ],\n-      \"checkstyle\" : \"jdk.vm.ci.services\",\n-      \"javaCompliance\" : \"9+\",\n-      \"workingSets\" : \"API,JVMCI\",\n-    },\n-\n-    \"jdk.vm.ci.runtime.test\" : {\n-      \"subDir\" : \"..\/..\/test\/hotspot\/jtreg\/compiler\/jvmci\",\n-      \"sourceDirs\" : [\"src\"],\n-      \"dependencies\" : [\n-        \"mx:JUNIT\",\n-        \"jdk.vm.ci.common\",\n-        \"jdk.vm.ci.runtime\",\n-      ],\n-      \"checkstyle\" : \"jdk.vm.ci.services\",\n-      \"javaCompliance\" : \"9+\",\n-      \"workingSets\" : \"API,JVMCI\",\n-    },\n-\n-    # ------------- JVMCI:HotSpot -------------\n-\n-    \"jdk.vm.ci.aarch64\" : {\n-      \"subDir\" : \"..\/jdk.internal.vm.ci\/share\/classes\",\n-      \"sourceDirs\" : [\"src\"],\n-      \"dependencies\" : [\"jdk.vm.ci.code\"],\n-      \"checkstyle\" : \"jdk.vm.ci.services\",\n-      \"javaCompliance\" : \"9+\",\n-      \"workingSets\" : \"JVMCI,AArch64\",\n-    },\n-\n-    \"jdk.vm.ci.amd64\" : {\n-      \"subDir\" : \"..\/jdk.internal.vm.ci\/share\/classes\",\n-      \"sourceDirs\" : [\"src\"],\n-      \"dependencies\" : [\"jdk.vm.ci.code\"],\n-      \"checkstyle\" : \"jdk.vm.ci.services\",\n-      \"javaCompliance\" : \"9+\",\n-      \"workingSets\" : \"JVMCI,AMD64\",\n-    },\n-\n-    \"jdk.vm.ci.hotspot\" : {\n-      \"subDir\" : \"..\/jdk.internal.vm.ci\/share\/classes\",\n-      \"sourceDirs\" : [\"src\"],\n-      \"dependencies\" : [\n-        \"jdk.vm.ci.common\",\n-        \"jdk.vm.ci.runtime\",\n-        \"jdk.vm.ci.services\",\n-      ],\n-      \"imports\" : [\n-        \"jdk.internal.misc\",\n-        \"jdk.internal.org.objectweb.asm\",\n-      ],\n-      \"checkstyle\" : \"jdk.vm.ci.services\",\n-      \"javaCompliance\" : \"9+\",\n-      \"workingSets\" : \"JVMCI\",\n-    },\n-\n-    \"jdk.vm.ci.hotspot.test\" : {\n-      \"subDir\" : \"..\/..\/test\/hotspot\/jtreg\/compiler\/jvmci\",\n-      \"sourceDirs\" : [\"src\"],\n-      \"dependencies\" : [\n-        \"mx:JUNIT\",\n-        \"TESTNG\",\n-        \"jdk.vm.ci.code.test\",\n-        \"jdk.vm.ci.hotspot\",\n-      ],\n-      \"checkstyle\" : \"jdk.vm.ci.services\",\n-      \"javaCompliance\" : \"9+\",\n-      \"workingSets\" : \"API,JVMCI\",\n-    },\n-\n-    \"jdk.vm.ci.hotspot.aarch64\" : {\n-      \"subDir\" : \"..\/jdk.internal.vm.ci\/share\/classes\",\n-      \"sourceDirs\" : [\"src\"],\n-      \"dependencies\" : [\n-        \"jdk.vm.ci.aarch64\",\n-        \"jdk.vm.ci.hotspot\",\n-      ],\n-      \"checkstyle\" : \"jdk.vm.ci.services\",\n-      \"javaCompliance\" : \"9+\",\n-      \"workingSets\" : \"JVMCI,HotSpot,AArch64\",\n-    },\n-\n-    \"jdk.vm.ci.hotspot.amd64\" : {\n-      \"subDir\" : \"..\/jdk.internal.vm.ci\/share\/classes\",\n-      \"sourceDirs\" : [\"src\"],\n-      \"dependencies\" : [\n-        \"jdk.vm.ci.amd64\",\n-        \"jdk.vm.ci.hotspot\",\n-      ],\n-      \"checkstyle\" : \"jdk.vm.ci.services\",\n-      \"javaCompliance\" : \"9+\",\n-      \"workingSets\" : \"JVMCI,HotSpot,AMD64\",\n-    },\n-\n-    \"hotspot\" : {\n-      \"native\" : True,\n-      \"class\" : \"HotSpotProject\",\n-    }\n-  },\n-\n-  \"distributions\" : {\n-\n-    # ------------- Distributions -------------\n-\n-    \"JVMCI_SERVICES\" : {\n-      \"subDir\" : \"..\/jdk.internal.vm.ci\/share\/classes\",\n-      \"dependencies\" : [\"jdk.vm.ci.services\"],\n-    },\n-\n-    \"JVMCI_API\" : {\n-      \"subDir\" : \"..\/jdk.internal.vm.ci\/share\/classes\",\n-      \"dependencies\" : [\n-        \"jdk.vm.ci.runtime\",\n-        \"jdk.vm.ci.common\",\n-        \"jdk.vm.ci.aarch64\",\n-        \"jdk.vm.ci.amd64\",\n-      ],\n-      \"distDependencies\" : [\n-        \"JVMCI_SERVICES\",\n-      ],\n-    },\n-\n-    \"JVMCI_HOTSPOT\" : {\n-      \"subDir\" : \"..\/jdk.internal.vm.ci\/share\/classes\",\n-      \"dependencies\" : [\n-        \"jdk.vm.ci.hotspot.aarch64\",\n-        \"jdk.vm.ci.hotspot.amd64\",\n-      ],\n-      \"distDependencies\" : [\n-        \"JVMCI_SERVICES\",\n-        \"JVMCI_API\",\n-      ],\n-    },\n-\n-    \"JVMCI_TEST\" : {\n-      \"subDir\" : \"..\/..\/test\/hotspot\/jtreg\/compiler\/jvmci\",\n-      \"dependencies\" : [\n-        \"jdk.vm.ci.runtime.test\",\n-        \"jdk.vm.ci.hotspot.test\",\n-      ],\n-      \"distDependencies\" : [\n-        \"JVMCI_API\",\n-        \"JVMCI_HOTSPOT\",\n-      ],\n-      \"exclude\" : [\"mx:JUNIT\"],\n-    },\n-  },\n-}\n","filename":"src\/hotspot\/.mx.jvmci\/suite.py","additions":0,"deletions":251,"binary":false,"changes":251,"status":"deleted"}]}