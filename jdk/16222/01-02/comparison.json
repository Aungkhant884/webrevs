{"files":[{"patch":"@@ -0,0 +1,53 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package java.security;\n+\n+import java.security.spec.AlgorithmParameterSpec;\n+\n+\/**\n+ * An asymmetric key, which can be either a public key or a private key.\n+ * This interface contains methods that are common to either a public key or\n+ * a private key.\n+ *\n+ * @since 22\n+ *\/\n+\n+public sealed interface AsymmetricKey extends Key permits PrivateKey, PublicKey {\n+    \/**\n+     * Returns the parameters associated with this key.\n+     * The parameters are optional and may be either\n+     * explicitly specified or implicitly created during\n+     * key pair generation.\n+     *\n+     * @implSpec\n+     * The default implementation returns {@code null}.\n+     *\n+     * @return the associated parameters, may be {@code null}\n+     *\/\n+    default AlgorithmParameterSpec getParams() {\n+        return null;\n+    }\n+}\n","filename":"src\/java.base\/share\/classes\/java\/security\/AsymmetricKey.java","additions":53,"deletions":0,"binary":false,"changes":53,"status":"added"},{"patch":"@@ -28,2 +28,0 @@\n-import java.security.spec.AlgorithmParameterSpec;\n-\n@@ -62,1 +60,1 @@\n-public interface PrivateKey extends Key, javax.security.auth.Destroyable {\n+public non-sealed interface PrivateKey extends AsymmetricKey, javax.security.auth.Destroyable {\n@@ -76,16 +74,0 @@\n-\n-    \/**\n-     * Returns the parameters associated with this key.\n-     * The parameters are optional and may be either\n-     * explicitly specified or implicitly created during\n-     * key pair generation.\n-     *\n-     * @implSpec\n-     * The default implementation returns {@code null}.\n-     *\n-     * @return the associated parameters, may be {@code null}\n-     * @since 22\n-     *\/\n-    default AlgorithmParameterSpec getParams() {\n-        return null;\n-    }\n","filename":"src\/java.base\/share\/classes\/java\/security\/PrivateKey.java","additions":1,"deletions":19,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -28,2 +28,0 @@\n-import java.security.spec.AlgorithmParameterSpec;\n-\n@@ -49,1 +47,1 @@\n-public interface PublicKey extends Key {\n+public non-sealed interface PublicKey extends AsymmetricKey {\n@@ -62,16 +60,0 @@\n-\n-    \/**\n-     * Returns the parameters associated with this key.\n-     * The parameters are optional and may be either\n-     * explicitly specified or implicitly created during\n-     * key pair generation.\n-     *\n-     * @implSpec\n-     * The default implementation returns {@code null}.\n-     *\n-     * @return the associated parameters, may be {@code null}\n-     * @since 22\n-     *\/\n-    default AlgorithmParameterSpec getParams() {\n-        return null;\n-    }\n","filename":"src\/java.base\/share\/classes\/java\/security\/PublicKey.java","additions":1,"deletions":19,"binary":false,"changes":20,"status":"modified"}]}