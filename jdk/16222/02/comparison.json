{"files":[{"patch":"@@ -0,0 +1,53 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package java.security;\n+\n+import java.security.spec.AlgorithmParameterSpec;\n+\n+\/**\n+ * An asymmetric key, which can be either a public key or a private key.\n+ * This interface contains methods that are common to either a public key or\n+ * a private key.\n+ *\n+ * @since 22\n+ *\/\n+\n+public sealed interface AsymmetricKey extends Key permits PrivateKey, PublicKey {\n+    \/**\n+     * Returns the parameters associated with this key.\n+     * The parameters are optional and may be either\n+     * explicitly specified or implicitly created during\n+     * key pair generation.\n+     *\n+     * @implSpec\n+     * The default implementation returns {@code null}.\n+     *\n+     * @return the associated parameters, may be {@code null}\n+     *\/\n+    default AlgorithmParameterSpec getParams() {\n+        return null;\n+    }\n+}\n","filename":"src\/java.base\/share\/classes\/java\/security\/AsymmetricKey.java","additions":53,"deletions":0,"binary":false,"changes":53,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -60,1 +60,1 @@\n-public interface PrivateKey extends Key, javax.security.auth.Destroyable {\n+public non-sealed interface PrivateKey extends AsymmetricKey, javax.security.auth.Destroyable {\n","filename":"src\/java.base\/share\/classes\/java\/security\/PrivateKey.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,1 +47,1 @@\n-public interface PublicKey extends Key {\n+public non-sealed interface PublicKey extends AsymmetricKey {\n","filename":"src\/java.base\/share\/classes\/java\/security\/PublicKey.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,1 @@\n+import java.security.spec.AlgorithmParameterSpec;\n@@ -43,1 +44,1 @@\n-public interface DSAParams {\n+public interface DSAParams extends AlgorithmParameterSpec {\n","filename":"src\/java.base\/share\/classes\/java\/security\/interfaces\/DSAParams.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -65,0 +65,16 @@\n+\n+    \/**\n+     * Returns the parameters associated with this key.\n+     * The parameters are optional and may be either\n+     * explicitly specified or implicitly created during\n+     * key pair generation.\n+     *\n+     * @implSpec\n+     * The default implementation returns {@code null}.\n+     *\n+     * @return the associated parameters, may be {@code null}\n+     * @since 22\n+     *\/\n+    default DSAParams getParams() {\n+        return null;\n+    }\n","filename":"src\/java.base\/share\/classes\/java\/security\/interfaces\/DSAPrivateKey.java","additions":17,"deletions":1,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -65,0 +65,16 @@\n+\n+    \/**\n+     * Returns the parameters associated with this key.\n+     * The parameters are optional and may be either\n+     * explicitly specified or implicitly created during\n+     * key pair generation.\n+     *\n+     * @implSpec\n+     * The default implementation returns {@code null}.\n+     *\n+     * @return the associated parameters, may be {@code null}\n+     * @since 22\n+     *\/\n+    default DSAParams getParams() {\n+        return null;\n+    }\n","filename":"src\/java.base\/share\/classes\/java\/security\/interfaces\/DSAPublicKey.java","additions":17,"deletions":1,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,1 @@\n+import java.security.spec.ECParameterSpec;\n@@ -59,0 +60,16 @@\n+\n+    \/**\n+     * Returns the parameters associated with this key.\n+     * The parameters are optional and may be either\n+     * explicitly specified or implicitly created during\n+     * key pair generation.\n+     *\n+     * @implSpec\n+     * The default implementation returns {@code null}.\n+     *\n+     * @return the associated parameters, may be {@code null}\n+     * @since 22\n+     *\/\n+    default ECParameterSpec getParams() {\n+        return null;\n+    }\n","filename":"src\/java.base\/share\/classes\/java\/security\/interfaces\/ECPrivateKey.java","additions":18,"deletions":1,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+import java.security.spec.ECParameterSpec;\n@@ -61,0 +62,16 @@\n+\n+    \/**\n+     * Returns the parameters associated with this key.\n+     * The parameters are optional and may be either\n+     * explicitly specified or implicitly created during\n+     * key pair generation.\n+     *\n+     * @implSpec\n+     * The default implementation returns {@code null}.\n+     *\n+     * @return the associated parameters, may be {@code null}\n+     * @since 22\n+     *\/\n+    default ECParameterSpec getParams() {\n+        return null;\n+    }\n","filename":"src\/java.base\/share\/classes\/java\/security\/interfaces\/ECPublicKey.java","additions":18,"deletions":1,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+import java.security.spec.NamedParameterSpec;\n@@ -55,0 +56,16 @@\n+\n+    \/**\n+     * Returns the parameters associated with this key.\n+     * The parameters are optional and may be either\n+     * explicitly specified or implicitly created during\n+     * key pair generation.\n+     *\n+     * @implSpec\n+     * The default implementation returns {@code null}.\n+     *\n+     * @return the associated parameters, may be {@code null}\n+     * @since 22\n+     *\/\n+    default NamedParameterSpec getParams() {\n+        return null;\n+    }\n","filename":"src\/java.base\/share\/classes\/java\/security\/interfaces\/EdECPrivateKey.java","additions":18,"deletions":1,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,1 @@\n+import java.security.spec.NamedParameterSpec;\n@@ -50,0 +51,16 @@\n+\n+    \/**\n+     * Returns the parameters associated with this key.\n+     * The parameters are optional and may be either\n+     * explicitly specified or implicitly created during\n+     * key pair generation.\n+     *\n+     * @implSpec\n+     * The default implementation returns {@code null}.\n+     *\n+     * @return the associated parameters, may be {@code null}\n+     * @since 22\n+     *\/\n+    default NamedParameterSpec getParams() {\n+        return null;\n+    }\n","filename":"src\/java.base\/share\/classes\/java\/security\/interfaces\/EdECPublicKey.java","additions":18,"deletions":1,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,1 @@\n+import java.security.spec.AlgorithmParameterSpec;\n@@ -62,0 +63,16 @@\n+\n+    \/**\n+     * Returns the parameters associated with this key.\n+     * The parameters are optional and may be either\n+     * explicitly specified or implicitly created during\n+     * key pair generation.\n+     *\n+     * @implSpec\n+     * The default implementation returns {@code null}.\n+     *\n+     * @return the associated parameters, may be {@code null}\n+     * @since 22\n+     *\/\n+    default AlgorithmParameterSpec getParams() {\n+        return null;\n+    }\n","filename":"src\/java.base\/share\/classes\/java\/security\/interfaces\/RSAPrivateKey.java","additions":18,"deletions":1,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,1 @@\n+import java.security.spec.AlgorithmParameterSpec;\n@@ -59,0 +60,16 @@\n+\n+    \/**\n+     * Returns the parameters associated with this key.\n+     * The parameters are optional and may be either\n+     * explicitly specified or implicitly created during\n+     * key pair generation.\n+     *\n+     * @implSpec\n+     * The default implementation returns {@code null}.\n+     *\n+     * @return the associated parameters, may be {@code null}\n+     * @since 22\n+     *\/\n+    default AlgorithmParameterSpec getParams() {\n+        return null;\n+    }\n","filename":"src\/java.base\/share\/classes\/java\/security\/interfaces\/RSAPublicKey.java","additions":18,"deletions":1,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+import java.security.spec.AlgorithmParameterSpec;\n@@ -56,0 +57,16 @@\n+\n+    \/**\n+     * Returns the parameters associated with this key.\n+     * The parameters are optional and may be either\n+     * explicitly specified or implicitly created during\n+     * key pair generation.\n+     *\n+     * @implSpec\n+     * The default implementation returns {@code null}.\n+     *\n+     * @return the associated parameters, may be {@code null}\n+     * @since 22\n+     *\/\n+    default AlgorithmParameterSpec getParams() {\n+        return null;\n+    }\n","filename":"src\/java.base\/share\/classes\/java\/security\/interfaces\/XECPrivateKey.java","additions":18,"deletions":1,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,1 @@\n+import java.security.spec.AlgorithmParameterSpec;\n@@ -55,0 +56,15 @@\n+    \/**\n+     * Returns the parameters associated with this key.\n+     * The parameters are optional and may be either\n+     * explicitly specified or implicitly created during\n+     * key pair generation.\n+     *\n+     * @implSpec\n+     * The default implementation returns {@code null}.\n+     *\n+     * @return the associated parameters, may be {@code null}\n+     * @since 22\n+     *\/\n+    default AlgorithmParameterSpec getParams() {\n+        return null;\n+    }\n","filename":"src\/java.base\/share\/classes\/java\/security\/interfaces\/XECPublicKey.java","additions":17,"deletions":1,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+import javax.crypto.spec.DHParameterSpec;\n@@ -59,0 +60,16 @@\n+\n+    \/**\n+     * Returns the parameters associated with this key.\n+     * The parameters are optional and may be either\n+     * explicitly specified or implicitly created during\n+     * key pair generation.\n+     *\n+     * @implSpec\n+     * The default implementation returns {@code null}.\n+     *\n+     * @return the associated parameters, may be {@code null}\n+     * @since 22\n+     *\/\n+    default DHParameterSpec getParams() {\n+        return null;\n+    }\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/interfaces\/DHPrivateKey.java","additions":18,"deletions":1,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+import javax.crypto.spec.DHParameterSpec;\n@@ -59,0 +60,16 @@\n+\n+    \/**\n+     * Returns the parameters associated with this key.\n+     * The parameters are optional and may be either\n+     * explicitly specified or implicitly created during\n+     * key pair generation.\n+     *\n+     * @implSpec\n+     * The default implementation returns {@code null}.\n+     *\n+     * @return the associated parameters, may be {@code null}\n+     * @since 22\n+     *\/\n+    default DHParameterSpec getParams() {\n+        return null;\n+    }\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/interfaces\/DHPublicKey.java","additions":18,"deletions":1,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -902,1 +902,1 @@\n-        protected DSAParams getParams() {\n+        public DSAParams getParams() {\n@@ -1205,1 +1205,1 @@\n-        protected ECParameterSpec getParams() {\n+        public ECParameterSpec getParams() {\n","filename":"src\/jdk.crypto.cryptoki\/share\/classes\/sun\/security\/pkcs11\/P11Key.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -0,0 +1,62 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import jdk.test.lib.Asserts;\n+\n+import javax.crypto.spec.DHParameterSpec;\n+import java.security.KeyPair;\n+import java.security.KeyPairGenerator;\n+import java.security.interfaces.DSAParams;\n+import java.security.spec.AlgorithmParameterSpec;\n+import java.security.spec.ECParameterSpec;\n+import java.security.spec.EdDSAParameterSpec;\n+import java.security.spec.NamedParameterSpec;\n+\n+\/**\n+ * @test\n+ * @bug 8318096\n+ * @summary Add getParams method in PublicKey and PrivateKey\n+ * @library \/test\/lib\n+ *\/\n+\n+public class GetParams {\n+    public static void main(String[] args) throws Exception {\n+        test(\"DSA\", DSAParams.class);\n+        test(\"RSA\", AlgorithmParameterSpec.class);\n+        test(\"RSASSA-PSS\", AlgorithmParameterSpec.class);\n+        test(\"EC\", ECParameterSpec.class);\n+        test(\"DH\", DHParameterSpec.class);\n+        test(\"EdDSA\", NamedParameterSpec.class);\n+        test(\"XDH\", NamedParameterSpec.class);\n+    }\n+\n+    static void test(String alg, Class<? extends AlgorithmParameterSpec> clazz)\n+            throws Exception {\n+        KeyPairGenerator g = KeyPairGenerator.getInstance(alg);\n+        KeyPair kp = g.generateKeyPair();\n+        AlgorithmParameterSpec spec1 = kp.getPrivate().getParams();\n+        Asserts.assertTrue(spec1 == null || clazz.isAssignableFrom(spec1.getClass()));\n+        AlgorithmParameterSpec spec2 = kp.getPublic().getParams();\n+        Asserts.assertTrue(spec2 == null || clazz.isAssignableFrom(spec2.getClass()));\n+    }\n+}\n","filename":"test\/jdk\/java\/security\/Signature\/GetParams.java","additions":62,"deletions":0,"binary":false,"changes":62,"status":"added"}]}