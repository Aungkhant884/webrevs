{"files":[{"patch":"@@ -414,4 +414,12 @@\n-     * Tells whether or not this reference object has been enqueued, either by\n-     * the program or by the garbage collector.  If this reference object was\n-     * not registered with a queue when it was created, then this method will\n-     * always return {@code false}.\n+     * Tests if this reference object is in its associated queue, if any.\n+     * This method returns {@code true} only if all of the following conditions\n+     * are met:\n+     * <ul>\n+     * <li>this reference object was registered with a queue when it was created; and\n+     * <li>the garbage collector has added this reference object to the queue\n+     *     or {@link #enqueue()} is called; and\n+     * <li>this reference object is not yet removed from the queue.\n+     * <\/ul>\n+     * Otherwise, this method returns {@code false}.\n+     * This method may return {@code false} if this reference object has been cleared\n+     * but not enqueued due to the race condition.\n@@ -419,2 +427,14 @@\n-     * @return   {@code true} if and only if this reference object has\n-     *           been enqueued\n+     * @deprecated\n+     * This method was never implemented to test if a reference object has\n+     * been cleared and enqueued as it was previously specified since 1.2.\n+     * This method could be misused due to the inherent race condition\n+     * or without an associated {@code ReferenceQueue}.\n+     * An application relying on this method to release critical resources\n+     * could cause serious performance issue.\n+     * An application should use {@link ReferenceQueue} to reliably determine\n+     * what reference objects that have been enqueued or\n+     * {@link #refersTo(Object) refersTo(null)} to determine if this reference\n+     * object has been cleared.\n+     *\n+     * @return   {@code true} if and only if this reference object is\n+     *           in its associated queue (if any).\n@@ -422,0 +442,1 @@\n+    @Deprecated(since=\"16\")\n","filename":"src\/java.base\/share\/classes\/java\/lang\/ref\/Reference.java","additions":27,"deletions":6,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -163,0 +163,1 @@\n+    @SuppressWarnings(\"deprecation\")\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/ref\/PhantomCleanable.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}