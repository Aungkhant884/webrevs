{"files":[{"patch":"@@ -57,1 +57,1 @@\n- * @since   18\n+ * @since 18\n@@ -125,0 +125,1 @@\n+        \/\/ javax.crypto.Cipher ensures algoParts.length == 3\n@@ -126,1 +127,0 @@\n-\n@@ -128,5 +128,0 @@\n-            \/\/ need 3 parts\n-            if (algoParts.length != 3) {\n-                throw new AssertionError(\"Invalid Transformation format: \" +\n-                        algorithm);\n-            }\n@@ -437,1 +432,1 @@\n-        int minOutLen = doFinalLength(inLen);\n+        int maxOutLen = doFinalLength(inLen);\n@@ -439,1 +434,1 @@\n-            byte[] out = new byte[minOutLen];\n+            byte[] out = new byte[maxOutLen];\n","filename":"src\/jdk.crypto.cryptoki\/share\/classes\/sun\/security\/pkcs11\/P11KeyWrapCipher.java","additions":4,"deletions":9,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -74,1 +74,0 @@\n-                \/\/System.out.println(\"enc out.length=\" + out.length);\n","filename":"test\/jdk\/sun\/security\/pkcs11\/Cipher\/KeyWrap\/TestGeneral.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"}]}