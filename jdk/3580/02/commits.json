[{"commit":{"message":"Replace assert(false) with fatal()\n\nAfter a number of people examined this code it was decided that the best approach was to re-instate\nthe call to fatal() in product builds, that would have been present in the CATCH macro, until recent\nchanges converted that to an assert(). The code here is not prepared to continue if compute_map fails\nso we have to abort. Such failures are extremely unlikely (metaspace or resource-area OOM, or malformed\nbytecode where verification has been disabled)."},"files":[{"filename":"src\/hotspot\/share\/ci\/ciMethod.cpp"},{"filename":"src\/hotspot\/share\/interpreter\/oopMapCache.cpp"}],"sha":"926e951ce883f2e56f00bcf36d1210ed6b5c8a36"},{"commit":{"message":"Additional comments on failure modes"},"files":[{"filename":"src\/hotspot\/share\/ci\/ciMethod.cpp"},{"filename":"src\/hotspot\/share\/interpreter\/oopMapCache.cpp"}],"sha":"264fbea57d847ebcd8d1beb39e1007defab66f84"},{"commit":{"message":"8265484: Fix up TRAPS usage in GenerateOopMap::compute_map and callers"},"files":[{"filename":"src\/hotspot\/share\/ci\/ciMethod.cpp"},{"filename":"src\/hotspot\/share\/interpreter\/oopMapCache.cpp"},{"filename":"src\/hotspot\/share\/oops\/generateOopMap.cpp"},{"filename":"src\/hotspot\/share\/oops\/generateOopMap.hpp"}],"sha":"5681dfe477883e7172fbfd42dfbeb0d9a9371a90"}]