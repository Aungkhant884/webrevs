{"files":[{"patch":"@@ -304,1 +304,5 @@\n-    gpi.compute_map(CATCH);\n+    if (!gpi.compute_map(THREAD)) {\n+      \/\/ Failure is only possible for a resource-area OOM, or malformed bytecode\n+      \/\/ with verification disabled.\n+      assert(false, \"Unexpected exception from compute_map\");\n+    }\n","filename":"src\/hotspot\/share\/ci\/ciMethod.cpp","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -93,1 +93,1 @@\n-  void compute_map(TRAPS);\n+  bool compute_map(Thread* current);\n@@ -105,1 +105,1 @@\n-void OopMapForCacheEntry::compute_map(TRAPS) {\n+bool OopMapForCacheEntry::compute_map(Thread* current) {\n@@ -112,1 +112,6 @@\n-    GenerateOopMap::compute_map(CATCH);\n+    if (!GenerateOopMap::compute_map(current)) {\n+      \/\/ Failure is only possible for a resource-area OOM, or malformed bytecode\n+      \/\/ with verification disabled.\n+      assert(false, \"Unexpected exception from compute_map\");\n+      return false;\n+    }\n@@ -115,0 +120,1 @@\n+  return true;\n@@ -336,1 +342,0 @@\n-    EXCEPTION_MARK;\n@@ -338,1 +343,5 @@\n-    gen.compute_map(CATCH);\n+    if (!gen.compute_map(Thread::current())) {\n+      \/\/ Failure is only possible for a resource-area OOM, or malformed bytecode\n+      \/\/ with verification disabled.\n+      assert(false, \"Unexpected exception from compute_map\");\n+    }\n","filename":"src\/hotspot\/share\/interpreter\/oopMapCache.cpp","additions":14,"deletions":5,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -2081,1 +2081,1 @@\n-void GenerateOopMap::compute_map(TRAPS) {\n+bool GenerateOopMap::compute_map(Thread* current) {\n@@ -2127,1 +2127,1 @@\n-    return;\n+    return true;\n@@ -2139,1 +2139,1 @@\n-    do_interpretation(THREAD);\n+    do_interpretation(current);\n@@ -2145,3 +2145,1 @@\n-  if (_got_error) {\n-    THROW_HANDLE(_exception);\n-  }\n+  return !_got_error;\n@@ -2151,6 +2149,0 @@\n-\/\/ These methods create an exception for the current thread which is thrown\n-\/\/ at the bottom of the call stack, when it returns to compute_map().  The\n-\/\/ _got_error flag controls execution.  NOT TODO: The VM exception propagation\n-\/\/ mechanism using TRAPS\/CHECKs could be used here instead but it would need\n-\/\/ to be added as a parameter to every function and checked for every call.\n-\/\/ The tons of extra code it would generate didn't seem worth the change.\n@@ -2158,0 +2150,3 @@\n+\/\/ If we compute from a suitable JavaThread then we create an exception for the GenerateOopMap\n+\/\/ calling code to retrieve (via exception()) and throw if desired (in most cases errors are ignored).\n+\/\/ Otherwise it is considered a fatal error to hit malformed bytecode.\n@@ -2165,3 +2160,3 @@\n-  if (Thread::current()->can_call_java()) {\n-    _exception = Exceptions::new_exception(Thread::current(),\n-                  vmSymbols::java_lang_LinkageError(), msg_buffer2);\n+  Thread* current = Thread::current();\n+  if (current->can_call_java()) {\n+    _exception = Exceptions::new_exception(current, vmSymbols::java_lang_LinkageError(), msg_buffer2);\n@@ -2169,2 +2164,0 @@\n-    \/\/ We cannot instantiate an exception object from a compiler thread.\n-    \/\/ Exit the VM with a useful error message.\n@@ -2556,1 +2549,3 @@\n-  compute_map(CHECK_(methodHandle()));\n+  if (!compute_map(THREAD)) {\n+    THROW_HANDLE_(exception(), methodHandle());\n+  }\n","filename":"src\/hotspot\/share\/oops\/generateOopMap.cpp","additions":13,"deletions":18,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -462,2 +462,5 @@\n-  \/\/ Compute the map.\n-  void compute_map(TRAPS);\n+  \/\/ Compute the map - returns true on success and false on error.\n+  bool compute_map(Thread* current);\n+  \/\/ Returns the exception related to any error, if the map was computed by a suitable JavaThread.\n+  Handle exception() { return _exception; }\n+\n@@ -562,1 +565,1 @@\n-  \/\/ Call compute_map(CHECK) to generate info.\n+  \/\/ Call compute_map() to generate info.\n","filename":"src\/hotspot\/share\/oops\/generateOopMap.hpp","additions":7,"deletions":4,"binary":false,"changes":11,"status":"modified"}]}