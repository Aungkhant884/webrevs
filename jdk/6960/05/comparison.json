{"files":[{"patch":"@@ -354,0 +354,17 @@\n+#ifdef __APPLE__\n+\/\/ Not all macOS versions can use os::reserve_memory (i.e. anon_mmap) API\n+\/\/ to reserve executable memory, so before attempting to use it,\n+\/\/ we need to verify that we can do so by asking for a tiny exectuable\n+\/\/ memory chunk\n+static inline bool can_reserve_executable_memory(void) {\n+  bool executable = true;\n+  size_t len = 128;\n+  char* p = os::reserve_memory(len, executable);\n+  bool exec_supported = (p != NULL);\n+  if (exec_supported) {\n+    os::release_memory(p, len);\n+  }\n+  return exec_supported;\n+}\n+#endif\n+\n@@ -363,0 +380,7 @@\n+\n+#ifdef __APPLE__\n+  \/\/ Workaround: try reserving executable memory to figure out\n+  \/\/ if such operation is supported on this macOS version\n+  const bool exec_supported = can_reserve_executable_memory();\n+#endif\n+\n@@ -374,0 +398,3 @@\n+#ifdef __APPLE__\n+    const bool executable = exec_supported ? (stripe % 2 == 0) : false;\n+#else\n@@ -375,0 +402,1 @@\n+#endif\n@@ -416,3 +444,0 @@\n-#if defined(__APPLE__) && !defined(AARCH64)  \/\/ See JDK-8267341.\n-  TEST_VM(os, DISABLED_release_multi_mappings) {\n-#else\n@@ -420,1 +445,0 @@\n-#endif\n","filename":"test\/hotspot\/gtest\/runtime\/test_os.cpp","additions":28,"deletions":4,"binary":false,"changes":32,"status":"modified"}]}