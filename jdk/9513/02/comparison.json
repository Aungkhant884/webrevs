{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -1117,4 +1117,0 @@\n-                StringJoiner command = new StringJoiner(\" \");\n-                for (String s: cmdarray) {\n-                    command.add(s);\n-                }\n@@ -1122,1 +1118,1 @@\n-                event.command = command.toString();\n+                event.command = String.join(\" \", cmdarray);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/ProcessBuilder.java","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -51,1 +51,0 @@\n-import java.util.stream.Collectors;\n@@ -2335,6 +2334,0 @@\n-        \/\/ If we have no list patterns, compose the list in a simple,\n-        \/\/ non-localized way.\n-        if (pattern == null) {\n-            return Arrays.stream(stringList).collect(Collectors.joining(\",\"));\n-        }\n-\n","filename":"src\/java.base\/share\/classes\/java\/util\/Locale.java","additions":0,"deletions":7,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -1539,5 +1539,1 @@\n-                            StringJoiner cookieValue = new StringJoiner(\"; \");\n-                            for (String value : l) {\n-                                cookieValue.add(value);\n-                            }\n-                            requests.add(key, cookieValue.toString());\n+                            requests.add(key, String.join(\"; \", l));\n","filename":"src\/java.base\/share\/classes\/sun\/net\/www\/protocol\/http\/HttpURLConnection.java","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -707,1 +707,1 @@\n-        StringBuilder sb = new StringBuilder();\n+        StringJoiner sb = new StringJoiner(\"\\\\\");\n@@ -709,3 +709,1 @@\n-            sb.append(elementAsString(i));\n-            if (i != (endIndex-1))\n-                sb.append(\"\\\\\");\n+            sb.add(elementAsString(i));\n","filename":"src\/java.base\/windows\/classes\/sun\/nio\/fs\/WindowsPath.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"}]}