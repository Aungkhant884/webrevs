[{"commit":{"message":"Remove extra new line"},"files":[{"filename":"test\/jdk\/java\/util\/concurrent\/tck\/JSR166TestCase.java"}],"sha":"1482259c7e5f068590357aca5caaeb6aefe4f9f9"},{"commit":{"message":"8315683: Parallelize java\/util\/concurrent\/tck\/JSR166TestCase.java\n\nThis test is running in tier1, and takes about 400 seconds to complete. Thus, it drags the execution time of tier1 on large machines. The commit includes changing the sequential run of test cases in java\/util\/concurrent\/tck\/JSR166TestCase.java to the best possible combination of parallelization to reduce the total runtime of the overall test and causing least possible change to user and system times. The below comparison shows existing and newer combinations of parallelizations:\nbefore                 : make test CONF=macosx-aarch64-server-fastdebug   200.64s user 20.94s system 204% cpu 1:48.47 total\nfully parallel         : make test CONF=macosx-aarch64-server-fastdebug   308.84s user 23.75s system 479% cpu 1:09.42 total\ndefault-details-tck    : make test CONF=macosx-aarch64-server-fastdebug   244.69s user 22.03s system 314% cpu 1:24.94 total\ndefault-fjp_details-tck: make test CONF=macosx-aarch64-server-fastdebug   260.12s user 24.47s system 404% cpu 1:10.31 total\n\nBased on the comparison above, the fourth combination has a result very close to full parallelization and at the same time having the least deviation of system and user times among the newer combinations. Henc ethe commit includes the changes corresponding to the fourth combination."},"files":[{"filename":"test\/jdk\/java\/util\/concurrent\/tck\/JSR166TestCase.java"}],"sha":"591b1134073058caf133c3ca3bd2c99e7d56fe9a"}]