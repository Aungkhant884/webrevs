{"files":[{"patch":"@@ -48,4 +48,3 @@\n- * Note that the ArrayCache[BYTE\/INT\/FLOAT\/DOUBLE] files are nearly identical except\n- * for a few type and name differences. Typically, the [BYTE]ArrayCache.java file\n- * is edited manually and then [INT\/FLOAT\/DOUBLE]ArrayCache.java\n- * files are generated with the following command lines:\n+ * Note that the ArrayCache[Byte\/Double\/Int] files are nearly identical except\n+ * for their array type [byte\/double\/int] and class name differences.\n+ * ArrayCache[Byte\/Double\/Int] class deals with dirty arrays.\n","filename":"src\/java.desktop\/share\/classes\/sun\/java2d\/marlin\/ArrayCacheByte.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -48,4 +48,3 @@\n- * Note that the ArrayCache[BYTE\/INT\/FLOAT\/DOUBLE] files are nearly identical except\n- * for a few type and name differences. Typically, the [BYTE]ArrayCache.java file\n- * is edited manually and then [INT\/FLOAT\/DOUBLE]ArrayCache.java\n- * files are generated with the following command lines:\n+ * Note that the ArrayCache[Byte\/Double\/Int] files are nearly identical except\n+ * for their array type [byte\/double\/int] and class name differences.\n+ * ArrayCache[Byte\/Double\/Int] class deals with dirty arrays.\n@@ -169,1 +168,1 @@\n-                    fill(array, fromIndex, toIndex, 0.0d);\n+                    fill(array, fromIndex, toIndex, \/*(double)*\/ 0.0);\n","filename":"src\/java.desktop\/share\/classes\/sun\/java2d\/marlin\/ArrayCacheDouble.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -48,4 +48,3 @@\n- * Note that the ArrayCache[BYTE\/INT\/FLOAT\/DOUBLE] files are nearly identical except\n- * for a few type and name differences. Typically, the [BYTE]ArrayCache.java file\n- * is edited manually and then [INT\/FLOAT\/DOUBLE]ArrayCache.java\n- * files are generated with the following command lines:\n+ * Note that the ArrayCache[Byte\/Double\/Int] files are nearly identical except\n+ * for their array type [byte\/double\/int] and class name differences.\n+ * ArrayCache[Byte\/Double\/Int] class deals with dirty arrays.\n@@ -169,1 +168,1 @@\n-                    fill(array, fromIndex, toIndex, 0);\n+                    fill(array, fromIndex, toIndex, \/*(int)*\/ 0);\n","filename":"src\/java.desktop\/share\/classes\/sun\/java2d\/marlin\/ArrayCacheInt.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -47,4 +47,3 @@\n- * Note that the ArrayCache[BYTE\/INT\/FLOAT\/DOUBLE] files are nearly identical except\n- * for a few type and name differences. Typically, the [BYTE]ArrayCache.java file\n- * is edited manually and then [INT\/FLOAT\/DOUBLE]ArrayCache.java\n- * files are generated with the following command lines:\n+ * Note that the ArrayCache[Int\/IntClean] files are nearly identical except\n+ * for their array type [byte\/double\/int] and class name differences.\n+ * ArrayCache[Int]Clean class deals with zero-filled arrays.\n@@ -172,1 +171,1 @@\n-                    fill(array, fromIndex, toIndex, 0);\n+                    fill(array, fromIndex, toIndex, \/*(int)*\/ 0);\n","filename":"src\/java.desktop\/share\/classes\/sun\/java2d\/marlin\/ArrayCacheIntClean.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"}]}