{"files":[{"patch":"@@ -1,39 +0,0 @@\n-\/*\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package jtreg;\n-\n-\/**\n- * {@code SkippedException} is an exception treated by jtreg as an indication\n- * of skipped status.\n- *\/\n-public final class SkippedException extends RuntimeException {\n-\n-    public SkippedException(String s, Throwable t) {\n-        super(s, t);\n-    }\n-\n-    public SkippedException(String s) {\n-        super(s);\n-    }\n-}\n","filename":"test\/jdk\/java\/awt\/jtreg\/SkippedException.java","additions":0,"deletions":39,"binary":false,"changes":39,"status":"deleted"},{"patch":"@@ -40,1 +40,1 @@\n- * @library \/java\/awt\/jtreg\n+ * @library \/test\/lib\n@@ -42,1 +42,1 @@\n- * @build SkippedException\n+ * @build jtreg.SkippedException\n@@ -61,1 +61,1 @@\n-        if (job.printDialog()) {\n+        if (job.printDialog(aset)) {\n@@ -67,18 +67,1 @@\n-        if (PrinterJob.lookupPrintServices().length > 0) {\n-\n-            String instruction = \"\"\"\n-                    Note: You must have a printer installed for this test.\n-                    If printer is not installed then the test passes automatically.\n-\n-                    This test is to check that the print dialog displays the specified,\n-                    page ranges. It is valid only on dialogs which support page ranges,\n-                    In each dialog, check that a page range of 2 to 3 is requested,\n-                    Optionally press Print instead of Cancel, and verify that the,\n-                    correct number\/set of pages is printed.\n-                    \"\"\";\n-\n-            PassFailJFrame passFailJFrame = new PassFailJFrame(instruction, 10);\n-            showPrintDialogs();\n-            passFailJFrame.awaitAndCheck();\n-\n-        } else {\n+        if (PrinterJob.lookupPrintServices().length == 0) {\n@@ -88,0 +71,15 @@\n+\n+        String instruction = \"\"\"\n+                Note: You must have a printer installed for this test.\n+                If printer is not installed then the test passes automatically.\n+\n+                This test is to check that the print dialog displays the specified,\n+                page ranges. It is valid only on dialogs which support page ranges,\n+                In each dialog, check that a page range of 2 to 3 is requested,\n+                Optionally press Print instead of Cancel, and verify that the,\n+                correct number\/set of pages is printed.\n+                \"\"\";\n+\n+        PassFailJFrame passFailJFrame = new PassFailJFrame(instruction, 10);\n+        showPrintDialogs();\n+        passFailJFrame.awaitAndCheck();\n","filename":"test\/jdk\/java\/awt\/print\/PrinterJob\/PageRangesDlgTest.java","additions":19,"deletions":21,"binary":false,"changes":40,"status":"modified"}]}