{"files":[{"patch":"@@ -878,1 +878,1 @@\n-  static inline void set_referent_raw(oop ref, oop value);\n+  static inline void clear_referent(oop ref);\n","filename":"src\/hotspot\/share\/classfile\/javaClasses.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -116,2 +116,2 @@\n-void java_lang_ref_Reference::set_referent_raw(oop ref, oop value) {\n-  ref->obj_field_put_raw(_referent_offset, value);\n+void java_lang_ref_Reference::clear_referent(oop ref) {\n+  ref->obj_field_put_raw(_referent_offset, nullptr);\n","filename":"src\/hotspot\/share\/classfile\/javaClasses.inline.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -263,2 +263,0 @@\n-\n-  _referent_addr = java_lang_ref_Reference::referent_addr_raw(_current_discovered);\n@@ -298,0 +296,9 @@\n+void DiscoveredListIterator::make_referent_alive() {\n+  HeapWord* addr = java_lang_ref_Reference::referent_addr_raw(_current_discovered);\n+  if (UseCompressedOops) {\n+    _keep_alive->do_oop((narrowOop*)addr);\n+  } else {\n+    _keep_alive->do_oop((oop*)addr);\n+  }\n+}\n+\n@@ -299,1 +306,1 @@\n-  RawAccess<>::oop_store(_referent_addr, oop(NULL));\n+  java_lang_ref_Reference::clear_referent(_current_discovered);\n","filename":"src\/hotspot\/share\/gc\/shared\/referenceProcessor.cpp","additions":10,"deletions":3,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -74,1 +74,0 @@\n-  HeapWord*          _referent_addr;\n@@ -123,8 +122,2 @@\n-  \/\/ Make the referent alive.\n-  inline void make_referent_alive() {\n-    if (UseCompressedOops) {\n-      _keep_alive->do_oop((narrowOop*)_referent_addr);\n-    } else {\n-      _keep_alive->do_oop((oop*)_referent_addr);\n-    }\n-  }\n+  \/\/ Apply the keep_alive function to the referent address.\n+  void make_referent_alive();\n","filename":"src\/hotspot\/share\/gc\/shared\/referenceProcessor.hpp","additions":2,"deletions":9,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -64,1 +64,0 @@\n-  _referent_addr(NULL),\n","filename":"src\/hotspot\/share\/gc\/shared\/referenceProcessor.inline.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -91,2 +91,2 @@\n-static void reference_set_referent(oop reference, oop referent) {\n-  java_lang_ref_Reference::set_referent_raw(reference, referent);\n+static void reference_clear_referent(oop reference) {\n+  java_lang_ref_Reference::clear_referent(reference);\n@@ -319,1 +319,1 @@\n-    reference_set_referent(reference, NULL);\n+    reference_clear_referent(reference);\n@@ -593,1 +593,1 @@\n-}\n\\ No newline at end of file\n+}\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahReferenceProcessor.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -75,2 +75,2 @@\n-static void reference_set_referent(oop reference, oop referent) {\n-  java_lang_ref_Reference::set_referent_raw(reference, referent);\n+static void reference_clear_referent(oop reference) {\n+  java_lang_ref_Reference::clear_referent(reference);\n@@ -229,1 +229,1 @@\n-    reference_set_referent(reference, NULL);\n+    reference_clear_referent(reference);\n","filename":"src\/hotspot\/share\/gc\/z\/zReferenceProcessor.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}