{"files":[{"patch":"@@ -837,7 +837,5 @@\n-            if (!followLinks || e.lastError() != ERROR_CANT_ACCESS_FILE)\n-                throw e;\n-            \/\/ Object could be a Unix domain socket\n-            try {\n-                return openSocketForReadAttributeAccess();\n-            } catch (WindowsException ignore) {\n-                throw e;\n+            if (followLinks && e.lastError() == ERROR_CANT_ACCESS_FILE) {\n+                \/\/ Object could be a Unix domain socket\n+                try {\n+                    return openSocketForReadAttributeAccess();\n+                } catch (WindowsException ignore) {}\n@@ -845,0 +843,1 @@\n+            throw e;\n","filename":"src\/java.base\/windows\/classes\/sun\/nio\/fs\/WindowsPath.java","additions":6,"deletions":7,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -165,0 +165,1 @@\n+        Path sock2 = null;\n@@ -172,2 +173,1 @@\n-                saddr.getPath().toFile().deleteOnExit();\n-                add2.getPath().toFile().deleteOnExit();\n+                sock2 = add2.getPath();\n@@ -197,0 +197,4 @@\n+        } finally {\n+            System.setSecurityManager(null);\n+            Files.deleteIfExists(sock1);\n+            Files.deleteIfExists(sock2);\n","filename":"test\/jdk\/java\/nio\/channels\/unixdomain\/Security.java","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -26,0 +26,2 @@\n+\n+    permission java.lang.RuntimePermission \"setSecurityManager\";\n","filename":"test\/jdk\/java\/nio\/channels\/unixdomain\/policy3","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"}]}