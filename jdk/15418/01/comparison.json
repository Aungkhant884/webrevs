{"files":[{"patch":"@@ -99,2 +99,2 @@\n-    static bool equals(void* lgrp_id_value, LGRPSpace* p) {\n-      return *(int*)lgrp_id_value == p->lgrp_id();\n+    static bool equals(int* lgrp_id_value, LGRPSpace* p) {\n+      return *lgrp_id_value == p->lgrp_id();\n","filename":"src\/hotspot\/share\/gc\/parallel\/mutableNUMASpace.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -122,2 +122,1 @@\n-bool GrowableCache::equals(void* v, GrowableElement *e2) {\n-  GrowableElement *e1 = (GrowableElement *) v;\n+bool GrowableCache::equals(GrowableElement* e1, GrowableElement* e2) {\n","filename":"src\/hotspot\/share\/prims\/jvmtiImpl.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -91,1 +91,1 @@\n-  static bool equals(void *, GrowableElement *);\n+  static bool equals(GrowableElement*, GrowableElement*);\n","filename":"src\/hotspot\/share\/prims\/jvmtiImpl.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -212,1 +212,2 @@\n-  int  find(void* token, bool f(void*, E)) const {\n+  template<typename T>\n+  int  find(T* token, bool f(T*, E)) const {\n@@ -218,1 +219,0 @@\n-\n","filename":"src\/hotspot\/share\/utilities\/growableArray.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}