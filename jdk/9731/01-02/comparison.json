{"files":[{"patch":"@@ -48,0 +48,1 @@\n+import sun.security.util.DisabledAlgorithmConstraints;\n@@ -416,1 +417,1 @@\n-            boolean CSFound = false;\n+\n@@ -423,3 +424,0 @@\n-                \/\/ only reason for failure now would be key exchange issue\n-                CSFound = true;\n-\n@@ -475,1 +473,1 @@\n-            \/\/negotiation failed between client and server, print server enabled cipher suites\n+            \/\/ negotiation failed between client and server, print server enabled cipher suites\n@@ -479,2 +477,3 @@\n-            String finalErrorMessage = CSFound ? \"key exchange failed\" : \"no cipher suites in common\";\n-            throw shc.conContext.fatal(Alert.HANDSHAKE_FAILURE, finalErrorMessage);\n+\n+            throw shc.conContext.fatal(Alert.HANDSHAKE_FAILURE,\n+                    \"no cipher suites in common \/ key exchange failed\");\n@@ -757,1 +756,1 @@\n-                printServerSocketConfig(shc, null);\n+                printServerSocketConfig(shc, legacySuite != null ? List.of(legacySuite) : null);\n@@ -770,2 +769,1 @@\n-                .append(\"  \\\"enabled server ciphersuites\\\": \\\"{3}\\\",\\n\")\n-                .append(\"  \\\"legacy algorithms\\\"          : \\\"{4}\\\"\");\n+                .append(\"  \\\"enabled server ciphersuites\\\": \\\"{3}\\\"\");\n@@ -775,2 +773,2 @@\n-        fieldsList.add(\"SSLSeverSocket info\");\n-        fieldsList.add(shc.sslConfig.preferLocalCipherSuites ? \"Server preference\" : \"Client preference\");\n+        fieldsList.add(\"SSLServerSocket info\");\n+        fieldsList.add(shc.sslConfig.preferLocalCipherSuites ? \"server preference\" : \"client preference\");\n@@ -778,2 +776,1 @@\n-        fieldsList.add(shc.activeCipherSuites != null ? shc.activeCipherSuites.toString() : \"Not Set\");\n-        fieldsList.add(Security.getProperty(LegacyAlgorithmConstraints.PROPERTY_TLS_LEGACY_ALGS));\n+        fieldsList.add(shc.activeCipherSuites != null ? shc.activeCipherSuites.toString() : \"not set\");\n@@ -781,3 +778,3 @@\n-        if (!shc.negotiatedProtocol.name.equalsIgnoreCase(ProtocolVersion.TLS13.name)) {\n-            sb.append(\",\\n\");\n-            sb.append(\"  \\\"legacy ciphersuites\\\"        : \\\"{5}\\\",\\n\");\n+        if (legacySuites != null && legacySuites.size() > 0) {\n+            sb.append(\",\\n\")\n+                    .append(\"  \\\"legacy ciphersuites\\\"        : \\\"{4}\\\",\\n\");\n@@ -785,1 +782,1 @@\n-            fieldsList.add(legacySuites != null ? legacySuites.stream()\n+            fieldsList.add(legacySuites.stream()\n@@ -787,3 +784,1 @@\n-                    .collect(Collectors.joining(\",\", \"[\", \"]\")) : \"Not Set\");\n-        } else {\n-            sb.append(\"\\n\");\n+                    .collect(Collectors.joining(\",\", \"[\", \"]\")));\n@@ -791,1 +786,1 @@\n-        sb.append(\"'}'\");\n+        sb.append(\"'\\n}'\");\n@@ -794,1 +789,0 @@\n-\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/ServerHello.java","additions":17,"deletions":23,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -63,1 +63,1 @@\n-    private final static String DEBUG_MESSAGE = \"\\\"SSLSeverSocket info\\\":\";\n+    private final static String DEBUG_MESSAGE = \"\\\"SSLServerSocket info\\\":\";\n@@ -168,2 +168,1 @@\n-}\n-\n+}\n\\ No newline at end of file\n","filename":"test\/jdk\/sun\/security\/ssl\/SSLSocketImpl\/ServerSocketConfigTest.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"}]}