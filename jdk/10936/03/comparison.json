{"files":[{"patch":"@@ -707,5 +707,0 @@\n-  \/\/ DONE_LABEL is a hot target - we'd really like to place it at the\n-  \/\/ start of cache line by padding with NOPs.\n-  \/\/ See the AMD and Intel software optimization manuals for the\n-  \/\/ most efficient \"long\" NOP encodings.\n-  \/\/ Unfortunately none of our alignment mechanisms suffice.\n@@ -773,1 +768,1 @@\n-  Label DONE_LABEL, Stacked, CheckSucc, COUNT, NO_COUNT;\n+  Label DONE_LABEL, Stacked, COUNT, NO_COUNT;\n@@ -832,2 +827,0 @@\n-  get_thread (boxReg);\n-\n@@ -843,1 +836,1 @@\n-  jccb  (Assembler::notZero, CheckSucc);\n+  jccb  (Assembler::notZero, DONE_LABEL);\n@@ -846,18 +839,0 @@\n-\n-  bind (Stacked);\n-  \/\/ It's not inflated and it's not recursively stack-locked.\n-  \/\/ It must be stack-locked.\n-  \/\/ Try to reset the header to displaced header.\n-  \/\/ The \"box\" value on the stack is stable, so we can reload\n-  \/\/ and be assured we observe the same value as above.\n-  movptr(tmpReg, Address(boxReg, 0));\n-  lock();\n-  cmpxchgptr(tmpReg, Address(objReg, oopDesc::mark_offset_in_bytes())); \/\/ Uses RAX which is box\n-  \/\/ Intention fall-thru into DONE_LABEL\n-\n-  \/\/ DONE_LABEL is a hot target - we'd really like to place it at the\n-  \/\/ start of cache line by padding with NOPs.\n-  \/\/ See the AMD and Intel software optimization manuals for the\n-  \/\/ most efficient \"long\" NOP encodings.\n-  \/\/ Unfortunately none of our alignment mechanisms suffice.\n-  bind (CheckSucc);\n@@ -866,1 +841,1 @@\n-  Label LNotRecursive, LSuccess, LGoSlowPath;\n+  Label CheckSucc, LNotRecursive, LSuccess, LGoSlowPath;\n@@ -939,0 +914,1 @@\n+#endif\n@@ -944,0 +920,1 @@\n+    \/\/ Intentional fall-thru into DONE_LABEL\n@@ -945,1 +922,0 @@\n-#endif\n","filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp","additions":5,"deletions":29,"binary":false,"changes":34,"status":"modified"}]}