{"files":[{"patch":"@@ -2305,1 +2305,1 @@\n-      if (!(UseSVE > 1 && VM_Version::supports_svebitperm())) {\n+      if (!VM_Version::supports_svebitperm()) {\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64.ad","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -219,1 +219,1 @@\n-        if (UseSVE < 2 || vlen > 64 || !VM_Version::supports_svebitperm()) {\n+        if (vlen > 64 || !VM_Version::supports_svebitperm()) {\n@@ -225,1 +225,1 @@\n-        if (UseSVE < 2 || !VM_Version::supports_svebitperm()) {\n+        if (!VM_Version::supports_svebitperm()) {\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64_vector.ad","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -209,1 +209,1 @@\n-        if (UseSVE < 2 || vlen > 64 || !VM_Version::supports_svebitperm()) {\n+        if (vlen > 64 || !VM_Version::supports_svebitperm()) {\n@@ -215,1 +215,1 @@\n-        if (UseSVE < 2 || !VM_Version::supports_svebitperm()) {\n+        if (!VM_Version::supports_svebitperm()) {\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64_vector_ad.m4","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -190,1 +190,1 @@\n-  if (_cpu == CPU_ARM && (_model == 0xd03 || _model2 == 0xd03)) {\n+  if (_cpu == CPU_ARM && model_is(0xd03)) {\n@@ -198,1 +198,1 @@\n-  if (_cpu == CPU_ARM && (_model == 0xd09 || _model2 == 0xd09)) {\n+  if (_cpu == CPU_ARM && model_is(0xd09)) {\n@@ -209,3 +209,1 @@\n-  if (_cpu == CPU_ARM && ((_model == 0xd0c || _model2 == 0xd0c) ||\n-                          (_model == 0xd49 || _model2 == 0xd49) ||\n-                          (_model == 0xd40 || _model2 == 0xd40))) {\n+  if (_cpu == CPU_ARM && (model_is(0xd0c) || model_is(0xd49) || model_is(0xd40))) {\n@@ -241,1 +239,1 @@\n-  if (_cpu == CPU_ARM && (_model == 0xd40 || _model2 == 0xd40)) {\n+  if (_cpu == CPU_ARM && model_is(0xd40)) {\n","filename":"src\/hotspot\/cpu\/aarch64\/vm_version_aarch64.cpp","additions":4,"deletions":6,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -154,0 +154,4 @@\n+  static bool model_is(int cpu_model) {\n+    return _model == cpu_model || _model2 == cpu_model;\n+  }\n+\n","filename":"src\/hotspot\/cpu\/aarch64\/vm_version_aarch64.hpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -33,2 +33,1 @@\n- *            ((vm.opt.UseSVE == \"null\" | vm.opt.UseSVE > 1) &\n- *             os.arch==\"aarch64\" & vm.cpu.features ~= \".*svebitperm.*\"))\n+ *            (os.arch==\"aarch64\" & vm.cpu.features ~= \".*svebitperm.*\"))\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/TestBitShuffleOpers.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Arm Limited. All rights reserved.\n+ * Copyright (c) 2022, 2023, Arm Limited. All rights reserved.\n@@ -30,1 +30,1 @@\n-*           (os.simpleArch == \"aarch64\" & vm.cpu.features ~= \".*sve.*\" & (vm.opt.UseSVE == \"null\" | vm.opt.UseSVE > 0))\n+*           (os.simpleArch == \"aarch64\" & vm.cpu.features ~= \".*sve.*\")\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorization\/TestNumberOfContinuousZeros.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,1 @@\n-*           (os.simpleArch == \"aarch64\" & vm.cpu.features ~= \".*sve.*\" & (vm.opt.UseSVE == \"null\" | vm.opt.UseSVE > 0))\n+*           (os.simpleArch == \"aarch64\" & vm.cpu.features ~= \".*sve.*\")\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorization\/TestPopulateIndex.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}