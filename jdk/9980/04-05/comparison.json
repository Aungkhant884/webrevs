{"files":[{"patch":"@@ -2947,2 +2947,2 @@\n-void G1CollectedHeap::clear_mark_data_for_region(HeapRegion* hr) {\n-  concurrent_mark()->clear_mark_data_for_region(hr);\n+void G1CollectedHeap::clear_bitmap_for_region(HeapRegion* hr) {\n+  concurrent_mark()->clear_bitmap_for_region(hr);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -616,1 +616,1 @@\n-  void clear_mark_data_for_region(HeapRegion* hr);\n+  void clear_bitmap_for_region(HeapRegion* hr);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1888,1 +1888,1 @@\n-void G1ConcurrentMark::clear_mark_data_for_region(HeapRegion* hr) {\n+void G1ConcurrentMark::clear_bitmap_for_region(HeapRegion* hr) {\n@@ -1891,1 +1891,0 @@\n-  hr->reset_top_at_mark_start();\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentMark.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -584,3 +584,4 @@\n-  \/\/ Clears marking data including marks for all objects in the given region.\n-  \/\/ This should only be used during a safepoint.\n-  void clear_mark_data_for_region(HeapRegion* hr);\n+  \/\/ Clears marks for all objects in the given region in the marking\n+  \/\/ bitmap. This should only be used to clean the bitmap during a\n+  \/\/ safepoint.\n+  void clear_bitmap_for_region(HeapRegion* hr);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentMark.hpp","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -1284,1 +1284,2 @@\n-        _g1h->clear_mark_data_for_region(hr);\n+        _g1h->clear_bitmap_for_region(hr);\n+        hr->reset_top_at_mark_start();\n","filename":"src\/hotspot\/share\/gc\/g1\/g1RemSet.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -371,1 +371,1 @@\n-      G1CollectedHeap::heap()->clear_mark_data_for_region(r);\n+      G1CollectedHeap::heap()->clear_bitmap_for_region(r);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1YoungGCPostEvacuateTasks.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -276,3 +276,3 @@\n-  \/\/ We always scrub the region to make sure the entire region is\n-  \/\/ parsable after the self-forwarding pointer removal.\n-  reset_parsable_bottom();\n+  \/\/ PB must be bottom - we only evacuate old gen regions after scrubbing, and\n+  \/\/ young gen regions never have their PB set to anything other than bottom.\n+  assert(parsable_bottom_acquire() == bottom(), \"must be\");\n","filename":"src\/hotspot\/share\/gc\/g1\/heapRegion.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}