{"files":[{"patch":"@@ -681,2 +681,7 @@\n-            if (commonSuperWithDiffParameterization(patternType, exprType)) {\n-                return null;\n+            if (exprType.isParameterized()) {\n+                Type patternAsExpression =\n+                        types.asSuper(patternType, exprType.tsym);\n+                if (patternAsExpression == null ||\n+                    !types.isSameType(patternAsExpression, exprType)) {\n+                    return null;\n+                }\n@@ -685,2 +690,0 @@\n-            List<Type> varsToSolve = params.map(s -> c.asUndetVar(s));\n-\n@@ -689,4 +692,0 @@\n-            while (c.solveBasic(varsToSolve, EnumSet.of(InferenceStep.EQ)).nonEmpty()) {\n-                doIncorporation(c, types.noWarnings);\n-            }\n-\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Infer.java","additions":7,"deletions":8,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -166,1 +166,1 @@\n-        checkInferedType(\"B<String>\", \"C\", \"C<java.lang.String,?>\"); \/\/ no sideways casts\n+        checkInferedType(\"B<String>\", \"C\", null); \/\/ no sideways casts\n","filename":"test\/langtools\/tools\/javac\/patterns\/InferenceUnitTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}