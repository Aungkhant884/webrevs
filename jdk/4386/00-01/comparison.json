{"files":[{"patch":"@@ -161,2 +161,4 @@\n-        ResourcePool result = generateJImage(allContent,\n-             writer, plugins, plugins.getJImageFileOutputStream());\n+        ResourcePool result;\n+        try (DataOutputStream out = plugins.getJImageFileOutputStream()) {\n+            result = generateJImage(allContent, writer, plugins, out);\n+        }\n","filename":"src\/jdk.jlink\/share\/classes\/jdk\/tools\/jlink\/internal\/ImageFileCreator.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -287,2 +287,1 @@\n-        } catch (PluginException | IllegalArgumentException |\n-                 UncheckedIOException |IOException | ResolutionException e) {\n+        } catch (PluginException | UncheckedIOException | IOException e) {\n@@ -295,0 +294,6 @@\n+        } catch (IllegalArgumentException | ResolutionException e) {\n+            log.println(taskHelper.getMessage(\"error.prefix\") + \" \" + e.getMessage());\n+            if (DEBUG) {\n+                e.printStackTrace(log);\n+            }\n+            return EXIT_ERROR;\n@@ -316,1 +321,3 @@\n-            deleteDirectory(dir);\n+            if (dir != null && Files.isDirectory(dir)) {\n+                deleteDirectory(dir);\n+            }\n@@ -490,6 +497,12 @@\n-        if (dir != null && Files.isDirectory(dir)) {\n-            Files.walkFileTree(dir, new SimpleFileVisitor<Path>() {\n-                @Override\n-                public FileVisitResult visitFile(Path file, BasicFileAttributes attrs)\n-                        throws IOException {\n-                    Files.delete(file);\n+        Files.walkFileTree(dir, new SimpleFileVisitor<Path>() {\n+            @Override\n+            public FileVisitResult visitFile(Path file, BasicFileAttributes attrs)\n+                    throws IOException {\n+                Files.delete(file);\n+                return FileVisitResult.CONTINUE;\n+            }\n+            @Override\n+            public FileVisitResult postVisitDirectory(Path dir, IOException e)\n+                    throws IOException {\n+                if (e == null) {\n+                    Files.delete(dir);\n@@ -497,0 +510,3 @@\n+                } else {\n+                    \/\/ directory iteration failed.\n+                    throw e;\n@@ -498,13 +514,2 @@\n-                @Override\n-                public FileVisitResult postVisitDirectory(Path dir, IOException e)\n-                        throws IOException {\n-                    if (e == null) {\n-                        Files.delete(dir);\n-                        return FileVisitResult.CONTINUE;\n-                    } else {\n-                        \/\/ directory iteration failed.\n-                        throw e;\n-                    }\n-                }\n-            });\n-        }\n+            }\n+        });\n","filename":"src\/jdk.jlink\/share\/classes\/jdk\/tools\/jlink\/internal\/JlinkTask.java","additions":27,"deletions":22,"binary":false,"changes":49,"status":"modified"},{"patch":"@@ -423,1 +423,1 @@\n-                    throw new PluginException(PluginsResourceBundle.\n+                    throw new IllegalArgumentException(PluginsResourceBundle.\n","filename":"src\/jdk.jlink\/share\/classes\/jdk\/tools\/jlink\/internal\/TaskHelper.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -133,0 +133,3 @@\n+        if (Files.notExists(image)) {\n+            throw new RuntimeException(\"output directory should not have been deleted\");\n+        }\n","filename":"test\/jdk\/tools\/jlink\/JLinkNegativeTest.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -379,1 +379,1 @@\n-            if (Files.isDirectory(imagePath)) {\n+            if (!Files.notExists(imagePath)) {\n","filename":"test\/jdk\/tools\/jlink\/JLinkTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}