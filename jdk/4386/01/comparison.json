{"files":[{"patch":"@@ -161,2 +161,4 @@\n-        ResourcePool result = generateJImage(allContent,\n-             writer, plugins, plugins.getJImageFileOutputStream());\n+        ResourcePool result;\n+        try (DataOutputStream out = plugins.getJImageFileOutputStream()) {\n+            result = generateJImage(allContent, writer, plugins, out);\n+        }\n","filename":"src\/jdk.jlink\/share\/classes\/jdk\/tools\/jlink\/internal\/ImageFileCreator.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -42,0 +42,1 @@\n+import java.nio.file.FileVisitResult;\n@@ -44,0 +45,2 @@\n+import java.nio.file.SimpleFileVisitor;\n+import java.nio.file.attribute.BasicFileAttributes;\n@@ -228,0 +231,1 @@\n+        Path outputPath = null;\n@@ -268,0 +272,1 @@\n+            outputPath = config.getOutput();\n@@ -282,2 +287,8 @@\n-        } catch (PluginException | IllegalArgumentException |\n-                 UncheckedIOException |IOException | ResolutionException e) {\n+        } catch (PluginException | UncheckedIOException | IOException e) {\n+            log.println(taskHelper.getMessage(\"error.prefix\") + \" \" + e.getMessage());\n+            if (DEBUG) {\n+                e.printStackTrace(log);\n+            }\n+            cleanupOutput(outputPath);\n+            return EXIT_ERROR;\n+        } catch (IllegalArgumentException | ResolutionException e) {\n@@ -301,0 +312,1 @@\n+            cleanupOutput(outputPath);\n@@ -307,0 +319,13 @@\n+    private void cleanupOutput(Path dir) {\n+        try {\n+            if (dir != null && Files.isDirectory(dir)) {\n+                deleteDirectory(dir);\n+            }\n+        } catch (IOException io) {\n+            log.println(taskHelper.getMessage(\"error.prefix\") + \" \" + io.getMessage());\n+            if (DEBUG) {\n+                io.printStackTrace(log);\n+            }\n+        }\n+    }\n+\n@@ -471,0 +496,22 @@\n+    private static void deleteDirectory(Path dir) throws IOException {\n+        Files.walkFileTree(dir, new SimpleFileVisitor<Path>() {\n+            @Override\n+            public FileVisitResult visitFile(Path file, BasicFileAttributes attrs)\n+                    throws IOException {\n+                Files.delete(file);\n+                return FileVisitResult.CONTINUE;\n+            }\n+            @Override\n+            public FileVisitResult postVisitDirectory(Path dir, IOException e)\n+                    throws IOException {\n+                if (e == null) {\n+                    Files.delete(dir);\n+                    return FileVisitResult.CONTINUE;\n+                } else {\n+                    \/\/ directory iteration failed.\n+                    throw e;\n+                }\n+            }\n+        });\n+    }\n+\n","filename":"src\/jdk.jlink\/share\/classes\/jdk\/tools\/jlink\/internal\/JlinkTask.java","additions":49,"deletions":2,"binary":false,"changes":51,"status":"modified"},{"patch":"@@ -423,1 +423,1 @@\n-                    throw new PluginException(PluginsResourceBundle.\n+                    throw new IllegalArgumentException(PluginsResourceBundle.\n","filename":"src\/jdk.jlink\/share\/classes\/jdk\/tools\/jlink\/internal\/TaskHelper.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -133,0 +133,3 @@\n+        if (Files.notExists(image)) {\n+            throw new RuntimeException(\"output directory should not have been deleted\");\n+        }\n","filename":"test\/jdk\/tools\/jlink\/JLinkNegativeTest.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -50,0 +50,1 @@\n+ * @bug 8240349\n@@ -369,0 +370,13 @@\n+        {\n+            String imageDir = \"bug8240349\";\n+            Path imagePath = helper.createNewImageDir(imageDir);\n+            JImageGenerator.getJLinkTask()\n+                    .modulePath(helper.defaultModulePath())\n+                    .output(imagePath)\n+                    .addMods(\"java.base\")\n+                    .option(\"--vm=client\")\n+                    .call().assertFailure(\"Error: Selected VM client doesn't exist\");\n+            if (!Files.notExists(imagePath)) {\n+                throw new RuntimeException(\"bug8240349 directory not deleted\");\n+            }\n+        }\n","filename":"test\/jdk\/tools\/jlink\/JLinkTest.java","additions":14,"deletions":0,"binary":false,"changes":14,"status":"modified"}]}