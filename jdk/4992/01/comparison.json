{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -304,1 +304,1 @@\n-            throw new Error(\"CAS should always succeed on thread local objects, check you barrier implementation\");\n+            throw new Error(\"CAS should always succeed on thread local objects, check your barrier implementation\");\n@@ -312,1 +312,1 @@\n-            throw new Error(\"This CAS should always fail, check you barrier implementation\");\n+            throw new Error(\"This CAS should always fail, check your barrier implementation\");\n@@ -321,3 +321,9 @@\n-        \/\/ Weak CAS - should always be true within a single thread - no other thread can have overwritten\n-        if (!UNSAFE.weakCompareAndSetReference(startNode, offset, expectedNext, head)) {\n-            throw new Error(\"Weak CAS should always succeed on thread local objects, check you barrier implementation\");\n+        \/\/ Weak CAS - should almost always be true within a single thread - no other thread can have overwritten\n+        \/\/ Spurious failures are allowed. So, we retry a couple of times on failure.\n+        boolean ok = false;\n+        for (int i = 0; i < 3; ++i) {\n+            ok = UNSAFE.weakCompareAndSetReference(startNode, offset, expectedNext, head);\n+            if (ok) break;\n+        }\n+        if (!ok) {\n+            throw new Error(\"Weak CAS should almost always succeed on thread local objects, check your barrier implementation\");\n@@ -331,1 +337,1 @@\n-            throw new Error(\"This weak CAS should always fail, check you barrier implementation\");\n+            throw new Error(\"This weak CAS should always fail, check your barrier implementation\");\n@@ -343,1 +349,1 @@\n-            throw new Error(\"Fail CmpX should always succeed on thread local objects, check you barrier implementation\");\n+            throw new Error(\"Fail CmpX should always succeed on thread local objects, check your barrier implementation\");\n","filename":"test\/hotspot\/jtreg\/compiler\/gcbarriers\/UnsafeIntrinsicsTest.java","additions":14,"deletions":8,"binary":false,"changes":22,"status":"modified"}]}