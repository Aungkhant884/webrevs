{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,2 +34,0 @@\n-static HANDLE hStdOut = INVALID_HANDLE_VALUE;\n-static HANDLE hStdIn = INVALID_HANDLE_VALUE;\n@@ -39,6 +37,5 @@\n-    if (hStdIn == INVALID_HANDLE_VALUE &&\n-        (hStdIn = GetStdHandle(STD_INPUT_HANDLE)) == INVALID_HANDLE_VALUE) {\n-        return JNI_FALSE;\n-    }\n-    if (hStdOut == INVALID_HANDLE_VALUE &&\n-        (hStdOut = GetStdHandle(STD_OUTPUT_HANDLE)) == INVALID_HANDLE_VALUE) {\n+    HANDLE hStdOut = GetStdHandle(STD_OUTPUT_HANDLE);\n+    HANDLE hStdIn = GetStdHandle(STD_INPUT_HANDLE);\n+\n+    if (hStdIn == INVALID_HANDLE_VALUE ||\n+        hStdOut == INVALID_HANDLE_VALUE) {\n@@ -47,0 +44,1 @@\n+\n@@ -48,1 +46,1 @@\n-        GetFileType(hStdOut) != FILE_TYPE_CHAR)\n+        GetFileType(hStdOut) != FILE_TYPE_CHAR) {\n@@ -50,0 +48,2 @@\n+    }\n+\n@@ -66,21 +66,0 @@\n-\n-JNIEXPORT jboolean JNICALL\n-Java_java_io_Console_echo(JNIEnv *env, jclass cls, jboolean on)\n-{\n-    DWORD fdwMode;\n-    jboolean old;\n-    if (! GetConsoleMode(hStdIn, &fdwMode)) {\n-        JNU_ThrowIOExceptionWithLastError(env, \"GetConsoleMode failed\");\n-        return !on;\n-    }\n-    old = (fdwMode & ENABLE_ECHO_INPUT) != 0;\n-    if (on) {\n-        fdwMode |= ENABLE_ECHO_INPUT;\n-    } else {\n-        fdwMode &= ~ENABLE_ECHO_INPUT;\n-    }\n-    if (! SetConsoleMode(hStdIn, fdwMode)) {\n-        JNU_ThrowIOExceptionWithLastError(env, \"SetConsoleMode failed\");\n-    }\n-    return old;\n-}\n","filename":"src\/java.base\/windows\/native\/libjava\/Console_md.c","additions":10,"deletions":31,"binary":false,"changes":41,"status":"modified"},{"patch":"@@ -0,0 +1,55 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#include \"jni.h\"\n+#include \"jni_util.h\"\n+#include \"jvm.h\"\n+#include \"jdk_internal_io_JdkConsoleImpl.h\"\n+\n+#include <stdlib.h>\n+#include <Wincon.h>\n+\n+JNIEXPORT jboolean JNICALL\n+Java_jdk_internal_io_JdkConsoleImpl_echo(JNIEnv *env, jclass cls, jboolean on)\n+{\n+    DWORD fdwMode;\n+    jboolean old;\n+    HANDLE hStdIn = GetStdHandle(STD_INPUT_HANDLE);\n+\n+    if (! GetConsoleMode(hStdIn, &fdwMode)) {\n+        JNU_ThrowIOExceptionWithLastError(env, \"GetConsoleMode failed\");\n+        return !on;\n+    }\n+    old = (fdwMode & ENABLE_ECHO_INPUT) != 0;\n+    if (on) {\n+        fdwMode |= ENABLE_ECHO_INPUT;\n+    } else {\n+        fdwMode &= ~ENABLE_ECHO_INPUT;\n+    }\n+    if (! SetConsoleMode(hStdIn, fdwMode)) {\n+        JNU_ThrowIOExceptionWithLastError(env, \"SetConsoleMode failed\");\n+    }\n+    return old;\n+}\n","filename":"src\/java.base\/windows\/native\/libjava\/JdkConsoleImpl_md.c","additions":55,"deletions":0,"binary":false,"changes":55,"status":"added"}]}