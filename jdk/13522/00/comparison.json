{"files":[{"patch":"@@ -449,0 +449,61 @@\n+    private static final int APPEND_BUF_SIZE = 1024;\n+\n+    private $Type$Buffer appendChars(CharSequence csq, int start, int end) {\n+        checkSession();\n+\n+        int length = end - start;\n+        int pos = position();\n+        int lim = limit();\n+        int rem = (pos <= lim) ? lim - pos : 0;\n+        if (length > rem)\n+            throw new BufferOverflowException();\n+\n+        char[] buf = new char[APPEND_BUF_SIZE];\n+        int index = pos;\n+        do {\n+            int count = end - start;\n+            if (count > buf.length)\n+                count = buf.length;\n+\n+            if (csq instanceof String str) {\n+                str.getChars(start, start + count, buf, 0);\n+            } else if (csq instanceof StringBuilder sb) {\n+                sb.getChars(start, start + count, buf, 0);\n+            } else if (csq instanceof StringBuffer sb) {\n+                sb.getChars(start, start + count, buf, 0);\n+            }\n+\n+            putArray(index, buf, 0, count);\n+\n+            start += count;\n+            index += count;\n+        } while (start < end);\n+\n+        position(pos + length);\n+\n+        return this;\n+    }\n+\n+    public $Type$Buffer append(CharSequence csq) {\n+#if[rw] \n+        if (csq instanceof StringBuilder) \n+            return appendChars(csq, 0, csq.length());\n+ \n+        return super.append(csq);\n+#else[rw]\n+        throw new ReadOnlyBufferException();\n+#end[rw]\n+    }\n+ \n+    public $Type$Buffer append(CharSequence csq, int start, int end) { \n+#if[rw]\n+        if (csq instanceof String || csq instanceof StringBuffer ||\n+            csq instanceof StringBuilder)\n+            return appendChars(csq, start, end);\n+\n+        return super.append(csq, start, end);\n+#else[rw]\n+        throw new ReadOnlyBufferException();\n+#end[rw]\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/java\/nio\/Direct-X-Buffer.java.template","additions":61,"deletions":0,"binary":false,"changes":61,"status":"modified"},{"patch":"@@ -1322,1 +1322,1 @@\n-    private $Type$Buffer putArray(int index, $type$[] src, int offset, int length) {\n+    $Type$Buffer putArray(int index, $type$[] src, int offset, int length) {\n","filename":"src\/java.base\/share\/classes\/java\/nio\/X-Buffer.java.template","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -47,1 +47,1 @@\n-    static final int SIZE = 8192;\n+    static final int SIZE = 32768;\n@@ -141,0 +141,36 @@\n+\n+    @Benchmark\n+    public CharBuffer appendStringToDirect() {\n+        dbDst.clear();\n+        return dbDst.append(str);\n+    }\n+\n+    @Benchmark\n+    public CharBuffer appendStringBufferToDirect() {\n+        dbDst.clear();\n+        return dbDst.append(strbuf);\n+    }\n+\n+    @Benchmark\n+    public CharBuffer appendStringBuilderToDirect() {\n+        dbDst.clear();\n+        return dbDst.append(strbld);\n+    }\n+\n+    @Benchmark\n+    public CharBuffer appendSubStringToDirect() {\n+        dbDst.clear();\n+        return dbDst.append(str, SIZE\/4, 3*SIZE\/4);\n+    }\n+\n+    @Benchmark\n+    public CharBuffer appendSubStringBufferToDirect() {\n+        dbDst.clear();\n+        return dbDst.append(strbuf, SIZE\/4, 3*SIZE\/4);\n+    }\n+\n+    @Benchmark\n+    public CharBuffer appendSubStringBuilderToDirect() {\n+        dbDst.clear();\n+        return dbDst.append(strbld, SIZE\/4, 3*SIZE\/4);\n+    }\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/nio\/CharBufferAppend.java","additions":37,"deletions":1,"binary":false,"changes":38,"status":"modified"}]}