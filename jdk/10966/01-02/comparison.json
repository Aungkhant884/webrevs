{"files":[{"patch":"@@ -63,3 +63,3 @@\n-     * Constructs an {@code InvalidParameterException} with the\n-     * specified detail message and cause. A detail message is a {@code String} that describes\n-     * this particular exception.\n+     * Constructs an {@code InvalidParameterException} with the specified\n+     * detail message and cause. A detail message is a {@code String}\n+     * that describes this particular exception.\n@@ -74,1 +74,1 @@\n-     *         {@link Throwable#getCause()} method).  (A {@code null} value\n+     *         {@link Throwable#getCause()} method). (A {@code null} value\n@@ -78,1 +78,1 @@\n-     * @since 20\n+     * @since  20\n@@ -85,3 +85,3 @@\n-     * Constructs an {@code InvalidParameterException} with the specified cause and a detail\n-     * message of {@code (cause==null ? null : cause.toString())} (which\n-     * typically contains the class and detail message of {@code cause}).\n+     * Constructs an {@code InvalidParameterException} with the specified cause\n+     * and a detail message of {@code (cause==null ? null : cause.toString())}\n+     * (which typically contains the class and detail message of {@code cause}).\n@@ -92,1 +92,1 @@\n-     *         {@link Throwable#getCause()} method).  (A {@code null} value is\n+     *         {@link Throwable#getCause()} method). (A {@code null} value is\n","filename":"src\/java.base\/share\/classes\/java\/security\/InvalidParameterException.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -338,1 +338,1 @@\n-            throw new InvalidParameterException(\"Invalid algorithm parameter\", iape);\n+            throw new InvalidParameterException(iape);\n","filename":"src\/jdk.crypto.cryptoki\/share\/classes\/sun\/security\/pkcs11\/P11KeyGenerator.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -154,1 +154,1 @@\n-            throw new InvalidParameterException(e.getMessage(), e);\n+            throw new InvalidParameterException(e);\n","filename":"src\/jdk.crypto.cryptoki\/share\/classes\/sun\/security\/pkcs11\/P11KeyPairGenerator.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -188,0 +188,10 @@\n+        InvalidParameterException ipe =\n+                new InvalidParameterException(cause);\n+        if (!ipe.getCause().equals(cause)) {\n+            throw new SecurityException(\"Test 17 failed\");\n+        }\n+        ipe = new InvalidParameterException(MSG, cause);\n+        if (!ipe.getMessage().equals(MSG) || !ipe.getCause().equals(cause)) {\n+            throw new SecurityException(\"Test 17 failed\");\n+        }\n+\n","filename":"test\/jdk\/java\/security\/Exceptions\/ChainingConstructors.java","additions":11,"deletions":1,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -60,1 +60,1 @@\n-            throw new InvalidParameterException(iape.getMessage(), iape);\n+            throw new InvalidParameterException(iape);\n","filename":"test\/jdk\/sun\/security\/tools\/keytool\/fakegen\/java.base\/sun\/security\/rsa\/RSAKeyPairGenerator.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}