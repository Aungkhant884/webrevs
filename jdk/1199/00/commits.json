[{"commit":{"message":"8254872: Optimize Rotate on AArch64\n\nThis patch is a supplement for\nhttps:\/\/bugs.openjdk.java.net\/browse\/JDK-8248830.\n\nWith the implementation of rotate node in IR, this patch:\n\n1. canonicalizes RotateLeft into RotateRight when shift is a constant,\n   so that GVN could identify the pre-existing node better.\n2. implements scalar rotate match rules and removes the original\n   combinations of Or and Shifts on AArch64.\n\nThis patch doesn't implement vector rotate due to the lack of\ncorresponding vector instructions on AArch64.\n\nTest case below is an explanation for this patch.\n\n        public static int test(int i) {\n            int a =  (i >>> 29) | (i << -29);\n            int b = i << 3;\n            int c = i >>> -3;\n            int d = b | c;\n            return a ^ d;\n        }\n\nBefore:\n\n        lsl     w12, w1, #3\n        lsr     w10, w1, #29\n        add     w11, w10, w12\n        orr     w12, w12, w10\n        eor     w0, w11, w12\n\nAfter:\n\n        ror     w10, w1, #29\n        eor     w0, w10, w10\n\nTested jtreg TestRotate.java, hotspot::hotspot_all_no_apps,\njdk::jdk_core, langtools::tier1.\n\nChange-Id: Id7d00935945f1697247fff7041b0707107862786"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/aarch64.ad"},{"filename":"src\/hotspot\/cpu\/aarch64\/aarch64_ad.m4"},{"filename":"src\/hotspot\/share\/opto\/mulnode.cpp"},{"filename":"src\/hotspot\/share\/opto\/mulnode.hpp"}],"sha":"be71bf6b2a1f08059e0a0757d443ef37d8d2c30e"}]