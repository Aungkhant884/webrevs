{"files":[{"patch":"@@ -250,2 +250,2 @@\n-         * Round the double to nearest integer, make sure we round\n-         * to lower integer value for 0.5\n+         * Rounds a double to the nearest integer. It rounds 0.5 down,\n+         * for example 1.5 is rounded to 1.0.\n@@ -254,1 +254,1 @@\n-         * @return a {@code int} which is the rounded value of provided number\n+         * @return the rounded value\n@@ -256,2 +256,1 @@\n-        private static int roundHalfDown(double d)\n-        {\n+        private static int roundHalfDown(double d) {\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/metal\/MetalBorders.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -37,0 +37,1 @@\n+import javax.imageio.ImageIO;\n@@ -42,1 +43,0 @@\n-import javax.imageio.ImageIO;\n@@ -81,2 +81,1 @@\n-    private static StringBuffer errorLog = new StringBuffer();\n-    private static Rectangle jFrameBounds;\n+    private static final StringBuffer errorLog = new StringBuffer();\n@@ -85,0 +84,1 @@\n+    private static Rectangle jFrameBounds;\n@@ -86,2 +86,0 @@\n-    private static Robot robot;\n-\n@@ -91,0 +89,2 @@\n+\n+    private static Robot robot;\n@@ -105,1 +105,1 @@\n-            uiScale =System.getProperty(\"sun.java2d.uiScale\");\n+            uiScale = System.getProperty(\"sun.java2d.uiScale\");\n@@ -124,1 +124,1 @@\n-            \/\/ Check Corners\n+            \/\/ Check Corner Diagonals\n@@ -131,0 +131,1 @@\n+                saveScreenCapture(\"JIF_uiScale_\" + uiScale + \".png\");\n@@ -162,2 +163,2 @@\n-                start = iFrameMaxY;\n-                stop = iFrameMaxY - BORDER_THICKNESS;\n+                start = iFrameMaxY - BORDER_THICKNESS;\n+                stop = iFrameMaxY;\n@@ -175,1 +176,1 @@\n-        boolean isVertical =  borderDirection.equals(\"RIGHT\")\n+        boolean isVertical = borderDirection.equals(\"RIGHT\")\n@@ -177,1 +178,1 @@\n-        boolean isHorizontal =  borderDirection.equals(\"TOP\")\n+        boolean isHorizontal = borderDirection.equals(\"TOP\")\n@@ -182,5 +183,3 @@\n-            if (Color.RED.equals(robot.getPixelColor(\n-                    isVertical ? i : (iFrameLoc.x + MIDPOINT),\n-                    isHorizontal ? i : (iFrameLoc.y + MIDPOINT)))) {\n-                createMRIScreenCapture(borderDirection + \"_uiScale\"\n-                        + uiScale + \".png\");\n+            int locX = isVertical ? i : (iFrameLoc.x + MIDPOINT);\n+            int locY = isHorizontal ? i : (iFrameLoc.y + MIDPOINT);\n+            if (Color.RED.equals(robot.getPixelColor(locX, locY))) {\n@@ -189,1 +188,2 @@\n-                        + borderDirection + \" border\\n\");\n+                        + borderDirection + \" border.\\n\");\n+                break;\n@@ -218,0 +218,6 @@\n+\n+        boolean isTop = cornerLocation.equals(\"TOP_LEFT\")\n+                || cornerLocation.equals(\"TOP_RIGHT\");\n+        boolean isLeft = cornerLocation.equals(\"TOP_LEFT\")\n+                || cornerLocation.equals(\"BOTTOM_LEFT\");\n+\n@@ -219,5 +225,9 @@\n-        if (Color.RED.equals(robot.getPixelColor(x, y))) {\n-            createMRIScreenCapture(cornerLocation + \"_uiScale\"\n-                    + uiScale + \".png\");\n-            errorLog.append(\"At uiScale: \"+ uiScale + \", Red background color\"\n-                    + \" detected at \" + cornerLocation +  \" corner\\n\");\n+\n+        for (int i = 0; i < 5; i++) {\n+            int locX = isLeft ? (x + i) : (x - i);\n+            int locY = isTop ? (y + i) : (y - i);\n+            if (Color.RED.equals(robot.getPixelColor(locX, locY))) {\n+                errorLog.append(\"At uiScale: \" + uiScale + \", Red background color\"\n+                        + \" detected at \" + cornerLocation + \" corner.\\n\");\n+                break;\n+            }\n@@ -248,1 +258,1 @@\n-    private static void createMRIScreenCapture(String filename) {\n+    private static void saveScreenCapture(String filename) {\n@@ -250,3 +260,2 @@\n-        List<Image> resolutionVariants = mrImage.getResolutionVariants();\n-        RenderedImage image = (RenderedImage) resolutionVariants.get(\n-                resolutionVariants.size() > 1 ? 1 : 0);\n+        List<Image> variants = mrImage.getResolutionVariants();\n+        RenderedImage image = (RenderedImage) variants.get(variants.size() - 1);\n@@ -254,2 +263,1 @@\n-            ImageIO.write(image,\n-                    \"png\", new File(filename));\n+            ImageIO.write(image, \"png\", new File(filename));\n","filename":"test\/jdk\/javax\/swing\/JInternalFrame\/InternalFrameBorderTest.java","additions":36,"deletions":28,"binary":false,"changes":64,"status":"modified"}]}