{"files":[{"patch":"@@ -65,0 +65,1 @@\n+import sun.java2d.pipe.Region;\n@@ -249,12 +250,0 @@\n-        \/**\n-         * Rounds a double to the nearest integer. It rounds 0.5 down,\n-         * for example 1.5 is rounded to 1.0.\n-         *\n-         * @param d number to be rounded\n-         * @return the rounded value\n-         *\/\n-        private static int roundHalfDown(double d) {\n-            double decP = (Math.ceil(d) - d);\n-            return (int)((decP == 0.5) ?  Math.floor(d) :  Math.round(d));\n-        }\n-\n@@ -290,1 +279,1 @@\n-                stkWidth = roundHalfDown(Math.min(at.getScaleX(), at.getScaleY()));\n+                stkWidth = Region.clipRound(Math.min(at.getScaleX(), at.getScaleY()));\n@@ -300,4 +289,4 @@\n-                width = roundHalfDown(at.getScaleX() * w);\n-                height = roundHalfDown(at.getScaleY() * h);\n-                xtranslation = roundHalfDown(at.getScaleX() * x + at.getTranslateX());\n-                ytranslation = roundHalfDown(at.getScaleY() * y + at.getTranslateY());\n+                width = Region.clipRound(at.getScaleX() * w);\n+                height = Region.clipRound(at.getScaleY() * h);\n+                xtranslation = Region.clipRound(at.getScaleX() * x + at.getTranslateX());\n+                ytranslation = Region.clipRound(at.getScaleY() * y + at.getTranslateY());\n@@ -313,6 +302,0 @@\n-            \/\/ Draw outermost lines\n-            g.drawLine(0, 0, width - 1, 0);\n-            g.drawLine(0, 1, 0, height - 1);\n-            g.drawLine(width - 1, 1, width - 1, height - 1);\n-            g.drawLine(1, height - 1, width - 1, height - 1);\n-\n@@ -320,1 +303,1 @@\n-            int loopCount = (int) Math.round(5 * at.getScaleX());\n+            int loopCount = (int) Math.ceil(5 * at.getScaleX());\n@@ -322,3 +305,2 @@\n-            for (int i = 1; i <= loopCount; i++) {\n-                g.drawRect(x + i,y + i,width - (i * 2) - 1,\n-                        height - (i * 2) - 1);\n+            for (int i = 0; i <= loopCount; i++) {\n+                g.drawRect(x + i,y + i,width - (i * 2), height - (i * 2));\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/metal\/MetalBorders.java","additions":9,"deletions":27,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -77,1 +77,1 @@\n-    private static final int INTFRAME_SIZE = 200;\n+    private static final int INTFRAME_SIZE = 150;\n@@ -152,1 +152,1 @@\n-                stop = iFrameLoc.y + BORDER_THICKNESS;\n+                stop = iFrameLoc.y + BORDER_THICKNESS - 1;\n@@ -157,1 +157,1 @@\n-                start = iFrameMaxX - BORDER_THICKNESS;\n+                start = iFrameMaxX - BORDER_THICKNESS + 1;\n@@ -163,1 +163,1 @@\n-                start = iFrameMaxY - BORDER_THICKNESS;\n+                start = iFrameMaxY - BORDER_THICKNESS + 1;\n@@ -170,1 +170,1 @@\n-                stop = iFrameLoc.x + BORDER_THICKNESS;\n+                stop = iFrameLoc.x + BORDER_THICKNESS - 1;\n@@ -225,2 +225,1 @@\n-\n-        for (int i = 0; i < 5; i++) {\n+        for (int i = 0; i < BORDER_THICKNESS - 1; i++) {\n@@ -244,1 +243,1 @@\n-        JLabel scale = new JLabel(\"UI Scale: \"+ uiScale);\n+        JLabel scale = new JLabel(\"UI Scale: \" + uiScale);\n","filename":"test\/jdk\/javax\/swing\/JInternalFrame\/InternalFrameBorderTest.java","additions":7,"deletions":8,"binary":false,"changes":15,"status":"modified"}]}