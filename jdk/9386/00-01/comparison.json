{"files":[{"patch":"@@ -40,0 +40,1 @@\n+#include \"prims\/forte.hpp\"\n@@ -197,1 +198,3 @@\n-  if (stub != NULL && (PrintStubCode || JvmtiExport::should_post_dynamic_code_generated())) {\n+  if (stub != NULL && (PrintStubCode ||\n+                       Forte::is_enabled() ||\n+                       JvmtiExport::should_post_dynamic_code_generated())) {\n@@ -214,0 +217,3 @@\n+    if (Forte::is_enabled()) {\n+      Forte::register_stub(stub_id, stub->code_begin(), stub->code_end());\n+    }\n","filename":"src\/hotspot\/share\/code\/codeBlob.cpp","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,0 +36,1 @@\n+#include \"prims\/forte.hpp\"\n@@ -72,0 +73,1 @@\n+    Forte::register_stub(\"vtable stub\", _chunk, _chunk_end);\n","filename":"src\/hotspot\/share\/code\/vtableStubs.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,0 +39,1 @@\n+#include \"prims\/forte.hpp\"\n@@ -142,0 +143,5 @@\n+  Forte::register_stub(\n+    \"Interpreter\",\n+    AbstractInterpreter::code()->code_start(),\n+    AbstractInterpreter::code()->code_end()\n+  );\n","filename":"src\/hotspot\/share\/interpreter\/interpreter.cpp","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+#include \"prims\/forte.hpp\"\n@@ -72,0 +73,1 @@\n+\n@@ -658,0 +660,30 @@\n+\n+#ifndef _WINDOWS\n+\/\/ Support for the Forte(TM) Performance Tools collector.\n+\/\/\n+\/\/ The method prototype is derived from libcollector.h. For more\n+\/\/ information, please see the libcollect man page.\n+\n+\/\/ Method to let libcollector know about a dynamically loaded function.\n+\/\/ Because it is weakly bound, the calls become NOP's when the library\n+\/\/ isn't present.\n+#ifdef __APPLE__\n+\/\/ XXXDARWIN: Link errors occur even when __attribute__((weak_import))\n+\/\/ is added\n+#define collector_func_load(x0,x1,x2,x3,x4,x5,x6) ((void) 0)\n+#define collector_func_load_enabled() false\n+#else\n+void    collector_func_load(char* name,\n+                            void* null_argument_1,\n+                            void* null_argument_2,\n+                            void *vaddr,\n+                            int size,\n+                            int zero_argument,\n+                            void* null_argument_3);\n+#pragma weak collector_func_load\n+#define collector_func_load(x0,x1,x2,x3,x4,x5,x6) \\\n+        ( collector_func_load ? collector_func_load(x0,x1,x2,x3,x4,x5,x6),(void)0 : (void)0 )\n+#define collector_func_load_enabled() (collector_func_load ? true : false)\n+#endif \/\/ __APPLE__\n+#endif \/\/ !_WINDOWS\n+\n@@ -660,0 +692,18 @@\n+bool Forte::is_enabled() {\n+#if !defined(_WINDOWS)\n+  return collector_func_load_enabled();\n+#else\n+  return false;\n+#endif\n+}\n+\n+void Forte::register_stub(const char* name, address start, address end) {\n+#if !defined(_WINDOWS)\n+  assert(pointer_delta(end, start, sizeof(jbyte)) < INT_MAX,\n+         \"Code size exceeds maximum range\");\n+\n+  collector_func_load((char*)name, NULL, NULL, start,\n+    pointer_delta(end, start, sizeof(jbyte)), 0, NULL);\n+#endif \/\/ !_WINDOWS\n+}\n+\n","filename":"src\/hotspot\/share\/prims\/forte.cpp","additions":50,"deletions":0,"binary":false,"changes":50,"status":"modified"},{"patch":"@@ -0,0 +1,38 @@\n+\/*\n+ * Copyright (c) 2004, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+#ifndef SHARE_PRIMS_FORTE_HPP\n+#define SHARE_PRIMS_FORTE_HPP\n+\n+\/\/ Interface to Forte support.\n+\n+class Forte : AllStatic {\n+ public:\n+   static bool is_enabled() NOT_JVMTI_RETURN_(false);\n+   static void register_stub(const char* name, address start, address end)\n+                                                 NOT_JVMTI_RETURN;\n+                                                 \/\/ register internal VM stub\n+};\n+\n+#endif \/\/ SHARE_PRIMS_FORTE_HPP\n","filename":"src\/hotspot\/share\/prims\/forte.hpp","additions":38,"deletions":0,"binary":false,"changes":38,"status":"added"},{"patch":"@@ -54,0 +54,1 @@\n+#include \"prims\/forte.hpp\"\n@@ -2686,1 +2687,1 @@\n-  if (JvmtiExport::should_post_dynamic_code_generated()) {\n+  if (Forte::is_enabled() || JvmtiExport::should_post_dynamic_code_generated()) {\n@@ -2693,1 +2694,7 @@\n-    JvmtiExport::post_dynamic_code_generated(blob_id, new_adapter->content_begin(), new_adapter->content_end());\n+    if (Forte::is_enabled()) {\n+      Forte::register_stub(blob_id, new_adapter->content_begin(), new_adapter->content_end());\n+    }\n+\n+    if (JvmtiExport::should_post_dynamic_code_generated()) {\n+      JvmtiExport::post_dynamic_code_generated(blob_id, new_adapter->content_begin(), new_adapter->content_end());\n+    }\n","filename":"src\/hotspot\/share\/runtime\/sharedRuntime.cpp","additions":9,"deletions":2,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,0 +31,1 @@\n+#include \"prims\/forte.hpp\"\n@@ -128,0 +129,1 @@\n+  Forte::register_stub(_cdesc->name(), _cdesc->begin(), _cdesc->end());\n","filename":"src\/hotspot\/share\/runtime\/stubCodeGenerator.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"}]}