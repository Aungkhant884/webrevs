{"files":[{"patch":"@@ -46,2 +46,2 @@\n-  ZHeap*       _old_heap;\n-  ZGenerationOld* _old_old;\n+  ZHeap*            _old_heap;\n+  ZGenerationOld*   _old_old;\n@@ -49,0 +49,20 @@\n+  char*             _reserved;\n+  static size_t     _page_offset;\n+\n+  char* reserve_page_memory() {\n+    \/\/ Probe for a free 2MB region inside the usable address range.\n+    \/\/ Inspired by ZVirtualMemoryManager::reserve_contiguous.\n+    const size_t unused = ZAddressOffsetMax - ZGranuleSize;\n+    const size_t increment = MAX2(align_up(unused \/ 100, ZGranuleSize), ZGranuleSize);\n+\n+    for (uintptr_t start = 0; start + ZGranuleSize <= ZAddressOffsetMax; start += increment) {\n+      char* const reserved = os::attempt_reserve_memory_at((char*)ZAddressHeapBase + start, ZGranuleSize, false \/* executable *\/);\n+      if (reserved != nullptr) {\n+        \/\/ Success\n+        return reserved;\n+      }\n+    }\n+\n+    \/\/ Failed\n+    return nullptr;\n+  }\n@@ -67,3 +87,19 @@\n-    bool reserved = os::attempt_reserve_memory_at((char*)ZAddressHeapBase, ZGranuleSize, false \/* executable *\/);\n-    ASSERT_TRUE(reserved);\n-    os::commit_memory((char*)ZAddressHeapBase, ZGranuleSize, false \/* executable *\/);\n+    \/\/ Preconditions for reserve_free_granule()\n+    ASSERT_NE(ZAddressHeapBase, 0u);\n+    ASSERT_NE(ZAddressOffsetMax, 0u);\n+    ASSERT_NE(ZGranuleSize, 0u);\n+\n+    _reserved = nullptr;\n+\n+    \/\/ Find a suitable address for the testing page\n+    char* reserved = reserve_page_memory();\n+\n+    ASSERT_NE(reserved, nullptr) << \"Failed to reserve the page granule. Test needs tweaking\";\n+    ASSERT_GE(reserved, (char*)ZAddressHeapBase);\n+    ASSERT_LT(reserved, (char*)ZAddressHeapBase + ZAddressOffsetMax);\n+\n+    _reserved = reserved;\n+\n+    os::commit_memory((char*)_reserved, ZGranuleSize, false \/* executable *\/);\n+\n+    _page_offset = uintptr_t(_reserved) - ZAddressHeapBase;\n@@ -77,2 +113,4 @@\n-    os::uncommit_memory((char*)ZAddressHeapBase, ZGranuleSize, false \/* executable *\/);\n-    os::release_memory((char*)ZAddressHeapBase, ZGranuleSize);\n+    if (_reserved != nullptr) {\n+      os::uncommit_memory((char*)_reserved, ZGranuleSize, false \/* executable *\/);\n+      os::release_memory((char*)_reserved, ZGranuleSize);\n+    }\n@@ -186,1 +224,1 @@\n-    const ZVirtualMemory vmem(zoffset(0), ZPageSizeSmall);\n+    const ZVirtualMemory vmem(zoffset(_page_offset), ZPageSizeSmall);\n@@ -253,0 +291,2 @@\n+\n+size_t ZForwardingTest::_page_offset;\n","filename":"test\/hotspot\/gtest\/gc\/z\/test_zForwarding.cpp","additions":48,"deletions":8,"binary":false,"changes":56,"status":"modified"}]}