{"files":[{"patch":"@@ -402,0 +402,13 @@\n+# No need to run ever test with EpsilonGC. A small subset will provide enough\n+# coverage. Also avoid some tests that may OOM.\n+hotspot_cds_epsilongc = \\\n+  runtime\/cds\/appcds\/HelloTest.java \\\n+  runtime\/cds\/appcds\/MultiProcessSharing.java \\\n+  runtime\/cds\/appcds\/StaticArchiveWithLambda.java \\\n+  runtime\/cds\/appcds\/cacheObject \\\n+  runtime\/cds\/appcds\/customLoader\/ParallelTestSingleFP.java \\\n+  runtime\/cds\/appcds\/dynamicArchive\/HelloDynamic.java \\\n+  runtime\/cds\/appcds\/javaldr \\\n+  runtime\/cds\/appcds\/jigsaw \\\n+  runtime\/cds\/appcds\/loaderConstraints\n+\n","filename":"test\/hotspot\/jtreg\/TEST.groups","additions":13,"deletions":0,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -593,0 +593,5 @@\n+    public static String[] concat(ArrayList<String> prefix, String... extra) {\n+        String[] array = new String[prefix.size()];\n+        return concat(prefix.toArray(array), extra);\n+    }\n+\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/TestCommon.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -185,0 +185,1 @@\n+        CDSOptions opts = new CDSOptions();\n@@ -186,0 +187,1 @@\n+            opts.getRuntimePrefix(),\n@@ -204,0 +206,1 @@\n+        CDSOptions opts = new CDSOptions();\n@@ -205,0 +208,1 @@\n+            opts.getRuntimePrefix(),\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/DynamicArchiveTestBase.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"}]}