{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -144,2 +144,3 @@\n-ClassPathEntry* ClassLoader::_first_append_entry = NULL;\n-ClassPathEntry* ClassLoader::_last_append_entry  = NULL;\n+\n+ClassPathEntry* volatile ClassLoader::_first_append_entry_list = NULL;\n+ClassPathEntry* volatile ClassLoader::_last_append_entry  = NULL;\n@@ -818,1 +819,1 @@\n-  ClassPathEntry* e = _first_append_entry;\n+  ClassPathEntry* e = first_append_entry();\n@@ -829,0 +830,5 @@\n+bool ClassPathEntry::cas_set_next(ClassPathEntry* next) {\n+  return Atomic::replace_if_null(&_next, next);\n+}\n+\n+\/\/ The boot append entries are added and read lock free.\n@@ -831,6 +837,14 @@\n-    if (_last_append_entry == NULL) {\n-      assert(_first_append_entry == NULL, \"boot loader's append class path entry list not empty\");\n-      _first_append_entry = _last_append_entry = new_entry;\n-    } else {\n-      _last_append_entry->set_next(new_entry);\n-      _last_append_entry = new_entry;\n+    for (;;) {\n+      ClassPathEntry* last_entry = Atomic::load(&_last_append_entry);\n+      if (last_entry == NULL) {\n+        if (Atomic::replace_if_null(&_last_append_entry, new_entry)) {\n+          assert(first_append_entry() == NULL, \"boot loader's append class path entry list not empty\");\n+          Atomic::store(&_first_append_entry_list, new_entry);\n+          return;\n+        }\n+      } else {\n+        if (last_entry->cas_set_next(new_entry)) {\n+          Atomic::store(&_last_append_entry, new_entry);\n+          return;\n+        }\n+      }\n@@ -947,1 +961,1 @@\n-  e = _first_append_entry;\n+  e = first_append_entry();\n@@ -1255,1 +1269,1 @@\n-    e = _first_append_entry;\n+    e = first_append_entry();\n","filename":"src\/hotspot\/share\/classfile\/classLoader.cpp","additions":26,"deletions":12,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -56,0 +56,2 @@\n+  bool cas_set_next(ClassPathEntry* next);\n+\n@@ -217,1 +219,5 @@\n-  static ClassPathEntry* _first_append_entry;\n+  static ClassPathEntry* volatile _first_append_entry_list;\n+  static ClassPathEntry* first_append_entry() {\n+    return Atomic::load(&_first_append_entry_list);\n+  }\n+\n@@ -219,1 +225,1 @@\n-  static ClassPathEntry* _last_append_entry;\n+  static ClassPathEntry* volatile _last_append_entry;\n@@ -237,1 +243,1 @@\n-  static bool has_bootclasspath_append() { return _first_append_entry != NULL; }\n+  static bool has_bootclasspath_append() { return first_append_entry() != NULL; }\n","filename":"src\/hotspot\/share\/classfile\/classLoader.hpp","additions":10,"deletions":4,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,1 +51,1 @@\n-    ClassPathEntry* e = ClassLoader::_first_append_entry;\n+    ClassPathEntry* e = first_append_entry();\n@@ -75,1 +75,1 @@\n-  ClassPathEntry* e = ClassLoader::_first_append_entry;\n+  ClassPathEntry* e = first_append_entry();\n@@ -85,1 +85,1 @@\n-    return ClassLoader::_first_append_entry;\n+    return first_append_entry();\n","filename":"src\/hotspot\/share\/classfile\/classLoader.inline.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -662,7 +662,0 @@\n-    \/\/ lock the loader\n-    Thread* thread = Thread::current();\n-    HandleMark hm(thread);\n-    Handle loader_lock = Handle(thread, SystemDictionary::system_loader_lock());\n-\n-    ObjectLocker ol(loader_lock, thread);\n-\n","filename":"src\/hotspot\/share\/prims\/jvmtiEnv.cpp","additions":1,"deletions":8,"binary":false,"changes":9,"status":"modified"}]}