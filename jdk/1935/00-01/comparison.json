{"files":[{"patch":"@@ -830,5 +830,1 @@\n-bool ClassPathEntry::cas_set_next(ClassPathEntry* next) {\n-  return Atomic::replace_if_null(&_next, next);\n-}\n-\n-\/\/ The boot append entries are added and read lock free.\n+\/\/ The boot append entries are added with a lock, and read lock free.\n@@ -837,14 +833,7 @@\n-    for (;;) {\n-      ClassPathEntry* last_entry = Atomic::load(&_last_append_entry);\n-      if (last_entry == NULL) {\n-        if (Atomic::replace_if_null(&_last_append_entry, new_entry)) {\n-          assert(first_append_entry() == NULL, \"boot loader's append class path entry list not empty\");\n-          Atomic::store(&_first_append_entry_list, new_entry);\n-          return;\n-        }\n-      } else {\n-        if (last_entry->cas_set_next(new_entry)) {\n-          Atomic::store(&_last_append_entry, new_entry);\n-          return;\n-        }\n-      }\n+    if (_last_append_entry == NULL) {\n+      _last_append_entry = new_entry;\n+      assert(first_append_entry() == NULL, \"boot loader's append class path entry list not empty\");\n+      Atomic::store(&_first_append_entry_list, new_entry);\n+    } else {\n+      _last_append_entry->set_next(new_entry);\n+      _last_append_entry = new_entry;\n@@ -1444,1 +1433,1 @@\n-\/\/ it can be appended to and is by jvmti and the kernel vm.\n+\/\/ it can be appended to and is by jvmti.\n","filename":"src\/hotspot\/share\/classfile\/classLoader.cpp","additions":9,"deletions":20,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -56,1 +56,0 @@\n-  bool cas_set_next(ClassPathEntry* next);\n","filename":"src\/hotspot\/share\/classfile\/classLoader.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -662,0 +662,2 @@\n+    MutexLocker ml(Bootclasspath_lock, Mutex::_no_safepoint_check_flag);\n+\n","filename":"src\/hotspot\/share\/prims\/jvmtiEnv.cpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -159,0 +159,1 @@\n+Mutex*   Bootclasspath_lock           = NULL;\n@@ -355,0 +356,1 @@\n+  def(Bootclasspath_lock           , PaddedMutex  , leaf,        false, _safepoint_check_never);\n","filename":"src\/hotspot\/share\/runtime\/mutexLocker.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -161,0 +161,2 @@\n+extern Mutex*   Bootclasspath_lock;\n+\n","filename":"src\/hotspot\/share\/runtime\/mutexLocker.hpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"}]}