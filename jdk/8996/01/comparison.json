{"files":[{"patch":"@@ -29,0 +29,1 @@\n+#include \"opto\/castnode.hpp\"\n@@ -1404,0 +1405,4 @@\n+  \/\/ init + (current stride - initial stride) is within the loop so narrow its type by leveraging the type of the iv Phi\n+  max_value = new CastIINode(max_value, loop->_head->as_CountedLoop()->phi()->bottom_type());\n+  register_new_node(max_value, predicate_proj);\n+\n@@ -1411,0 +1416,1 @@\n+  assert(skeleton_predicate_has_opaque(new_proj->in(0)->as_If()), \"unexpected\");\n","filename":"src\/hotspot\/share\/opto\/loopPredicate.cpp","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1399,1 +1399,2 @@\n-          op == Op_ConvI2L);\n+          op == Op_ConvI2L ||\n+          op == Op_CastII);\n@@ -3099,0 +3100,3 @@\n+          \/\/ init + (current stride - initial stride) is within the loop so narrow its type by leveraging the type of the iv Phi\n+          max_value = new CastIINode(max_value, loop->_head->as_CountedLoop()->phi()->bottom_type());\n+          register_new_node(max_value, predicate_proj);\n","filename":"src\/hotspot\/share\/opto\/loopTransform.cpp","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -0,0 +1,53 @@\n+\/*\n+ * Copyright (c) 2022, Red Hat, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8286625\n+ * @key stress\n+ * @summary C2 fails with assert(!n->is_Store() && !n->is_LoadStore()) failed: no node with a side effect\n+ * @run main\/othervm -XX:-BackgroundCompilation -XX:+StressIGVN -XX:StressSeed=4232417824 TestOverUnrolling2\n+ * @run main\/othervm -XX:-BackgroundCompilation -XX:+StressIGVN TestOverUnrolling2\n+ *\/\n+\n+public class TestOverUnrolling2 {\n+   public static void main(String[] args) {\n+        final byte[] large = new byte[1000];\n+        final byte[] src = new byte[16];\n+        for (int i = 0; i < 20_000; i++) {\n+            test_helper(large, large);\n+            test(src);\n+        }\n+   }\n+\n+    private static void test(byte[] src) {\n+        byte[] array = new byte[16];\n+        test_helper(src, array);\n+    }\n+\n+    private static void test_helper(byte[] src, byte[] array) {\n+        for (int i = 0; i < src.length; i++) {\n+            array[array.length - 1 - i] = src[i];\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/TestOverUnrolling2.java","additions":53,"deletions":0,"binary":false,"changes":53,"status":"added"}]}