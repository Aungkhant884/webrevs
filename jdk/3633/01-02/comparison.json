{"files":[{"patch":"@@ -1,50 +0,0 @@\n-\/*\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n- * Copyright (c) 2021, BELLSOFT. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/*\n- * @test\n- * @bug 8265756\n- * @library \/test\/lib \/\n- * @compile TestLongLVTHelper.jasm\n- * @run main runtime.LocalVariableTable.TestLongLVT\n- *\/\n-\n-package runtime.LocalVariableTable;\n-\n-import jdk.test.lib.Asserts;\n-\n-public class TestLongLVT {\n-\n-    \/\/ Some platforms (such as windows-aarch64) may have\n-    \/\/ stack page touch order restrictions.\n-    \/\/ Test calls method with large local variables table\n-    \/\/ to trigger usage of several stack memory pages and\n-    \/\/ check the validity of the touch order.\n-    \/\/\n-    \/\/ Helper method is written in jasm as this allows to\n-    \/\/ specify local variables table size directly.\n-    public static void main(String args[]) {\n-        Asserts.assertEQ(TestLongLVTHelper.tst(), 0);\n-    }\n-}\n","filename":"test\/hotspot\/jtreg\/runtime\/LocalVariableTable\/TestLongLVT.java","additions":0,"deletions":50,"binary":false,"changes":50,"status":"deleted"},{"patch":"@@ -1,58 +0,0 @@\n-\/*\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n- * Copyright (c) 2021, BELLSOFT. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package runtime\/LocalVariableTable;\n-\n-public class  TestLongLVTHelper\n-{\n-\n-\/\/ Method with large locals variable table.\n-\/\/ Purpose: verify stack pages touch order (see TestLongLVT.java)\n-public static Method tst:\"()I\"\n-    stack 3 locals 65535\n-{\n-                iconst_1;\n-                newarray int;\n-                dup;\n-                astore_w   65500;\n-                aload_w  65500;\n-                if_acmpne       FAILED;\n-\n-                iconst_0;\n-                ireturn; \/\/ passed\n-\n-        FAILED:\n-                iconst_1; \/\/ failed\n-                ireturn;\n-}\n-\n-public Method <init>:\"()V\"\n-        stack 1 locals 1\n-{\n-    aload_0;\n-    invokespecial   Method java\/lang\/Object.<init>:\"()V\";\n-    return;\n-}\n-\n-}\n","filename":"test\/hotspot\/jtreg\/runtime\/LocalVariableTable\/TestLongLVTHelper.jasm","additions":0,"deletions":58,"binary":false,"changes":58,"status":"deleted"},{"patch":"@@ -0,0 +1,50 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, BELLSOFT. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8265756\n+ * @library \/test\/lib \/\n+ * @compile TestLargeLocalVarsStackRegionHelper.jasm\n+ * @run main runtime.Locals.TestLargeLocalVarsStackRegion\n+ *\/\n+\n+package runtime.Locals;\n+\n+import jdk.test.lib.Asserts;\n+\n+public class TestLargeLocalVarsStackRegion {\n+\n+    \/\/ Some platforms (such as windows-aarch64) may have\n+    \/\/ stack page touch order restrictions.\n+    \/\/ Test calls method with large local vars stack region\n+    \/\/ to trigger usage of several stack memory pages and\n+    \/\/ check the validity of the touch order.\n+    \/\/\n+    \/\/ Helper method is written in jasm as this allows to\n+    \/\/ specify local vars stack region size directly.\n+    public static void main(String args[]) {\n+        Asserts.assertEQ(TestLargeLocalVarsStackRegionHelper.tst(), 0);\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/runtime\/Locals\/TestLargeLocalVarsStackRegion.java","additions":50,"deletions":0,"binary":false,"changes":50,"status":"added"},{"patch":"@@ -0,0 +1,58 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, BELLSOFT. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package runtime\/Locals;\n+\n+public class TestLargeLocalVarsStackRegionHelper\n+{\n+\n+\/\/ Method with large locals vars region.\n+\/\/ Purpose: verify stack pages touch order (see TestLargeLocalVarsStackRegion.java)\n+public static Method tst:\"()I\"\n+    stack 3 locals 65535\n+{\n+                iconst_1;\n+                newarray int;\n+                dup;\n+                astore_w   65500;\n+                aload_w  65500;\n+                if_acmpne       FAILED;\n+\n+                iconst_0;\n+                ireturn; \/\/ passed\n+\n+        FAILED:\n+                iconst_1; \/\/ failed\n+                ireturn;\n+}\n+\n+public Method <init>:\"()V\"\n+        stack 1 locals 1\n+{\n+    aload_0;\n+    invokespecial   Method java\/lang\/Object.<init>:\"()V\";\n+    return;\n+}\n+\n+}\n","filename":"test\/hotspot\/jtreg\/runtime\/Locals\/TestLargeLocalVarsStackRegionHelper.jasm","additions":58,"deletions":0,"binary":false,"changes":58,"status":"added"}]}