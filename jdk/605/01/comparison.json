{"files":[{"patch":"@@ -58,4 +58,0 @@\n-\n-static const ZStatSubPhase ZSubPhaseConcurrentRootsSetup(\"Concurrent Roots Setup\");\n-static const ZStatSubPhase ZSubPhaseConcurrentRoots(\"Concurrent Roots\");\n-static const ZStatSubPhase ZSubPhaseConcurrentRootsTeardown(\"Concurrent Roots Teardown\");\n@@ -64,1 +60,1 @@\n-static const ZStatSubPhase ZSubPhaseConcurrentRootsJavaThreads(\"Concurrent Roots Java Threads\");\n+static const ZStatSubPhase ZSubPhaseConcurrentRootsJavaThreads(\"Concurrent Roots JavaThreads\");\n@@ -66,4 +62,0 @@\n-\n-static const ZStatSubPhase ZSubPhasePauseWeakRootsSetup(\"Pause Weak Roots Setup\");\n-static const ZStatSubPhase ZSubPhasePauseWeakRoots(\"Pause Weak Roots\");\n-static const ZStatSubPhase ZSubPhasePauseWeakRootsTeardown(\"Pause Weak Roots Teardown\");\n@@ -71,2 +63,0 @@\n-\n-static const ZStatSubPhase ZSubPhaseConcurrentWeakRoots(\"Concurrent Weak Roots\");\n@@ -157,1 +147,0 @@\n-  ZStatTimer timer(ZSubPhaseConcurrentRootsSetup);\n@@ -165,1 +154,0 @@\n-  ZStatTimer timer(ZSubPhaseConcurrentRootsTeardown);\n@@ -182,0 +170,5 @@\n+void ZConcurrentRootsIterator::do_code_cache(ZRootsIteratorClosure* cl) {\n+  ZStatTimer timer(ZSubPhaseConcurrentRootsCodeCache);\n+  ZNMethod::oops_do(cl, cl->should_disarm_nmethods());\n+}\n+\n@@ -184,3 +177,3 @@\n-  ZRootsIteratorClosure* const _cl;\n-  \/\/ The resource mark is needed because interpreter oop maps are not reused in concurrent mode.\n-  \/\/ Instead, they are temporary and resource allocated.\n+  \/\/ The resource mark is needed because interpreter oop maps are\n+  \/\/ not reused in concurrent mode. Instead, they are temporary and\n+  \/\/ resource allocated.\n@@ -188,0 +181,1 @@\n+  ZRootsIteratorClosure* const _cl;\n@@ -198,5 +192,0 @@\n-void ZConcurrentRootsIterator::do_code_cache(ZRootsIteratorClosure* cl) {\n-  ZStatTimer timer(ZSubPhaseConcurrentRootsCodeCache);\n-  ZNMethod::oops_do(cl, cl->should_disarm_nmethods());\n-}\n-\n@@ -210,1 +199,0 @@\n-  ZStatTimer timer(ZSubPhaseConcurrentRoots);\n@@ -222,5 +210,0 @@\n-  ZStatTimer timer(ZSubPhasePauseWeakRootsSetup);\n-}\n-\n-ZWeakRootsIterator::~ZWeakRootsIterator() {\n-  ZStatTimer timer(ZSubPhasePauseWeakRootsTeardown);\n@@ -235,1 +218,0 @@\n-  ZStatTimer timer(ZSubPhasePauseWeakRoots);\n@@ -259,1 +241,0 @@\n-  ZStatTimer timer(ZSubPhaseConcurrentWeakRoots);\n","filename":"src\/hotspot\/share\/gc\/z\/zRootsIterator.cpp","additions":10,"deletions":29,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -162,1 +162,0 @@\n-  ~ZWeakRootsIterator();\n","filename":"src\/hotspot\/share\/gc\/z\/zRootsIterator.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"}]}