{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -3213,2 +3213,3 @@\n-                    result.append(localized ? symbols.getGroupingSeparator() :\n-                                  PATTERN_GROUPING_SEPARATOR);\n+                    result.append(localized ?\n+                        (isCurrencyFormat ? symbols.getMonetaryGroupingSeparator() : symbols.getGroupingSeparator()) :\n+                        PATTERN_GROUPING_SEPARATOR);\n@@ -3221,2 +3222,3 @@\n-                result.append(localized ? symbols.getDecimalSeparator() :\n-                              PATTERN_DECIMAL_SEPARATOR);\n+                result.append(localized ?\n+                    (isCurrencyFormat ? symbols.getMonetaryDecimalSeparator() : symbols.getDecimalSeparator()) :\n+                    PATTERN_DECIMAL_SEPARATOR);\n","filename":"src\/java.base\/share\/classes\/java\/text\/DecimalFormat.java","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -0,0 +1,61 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8282929\n+ * @summary Verifies that toLocalizedPattern() method correctly returns\n+ *          monetary symbols in a currency formatter\n+ * @run testng ToLocalizedPatternTest\n+ *\/\n+\n+import static org.testng.Assert.assertEquals;\n+import org.testng.annotations.Test;\n+\n+import java.text.DecimalFormat;\n+import java.text.DecimalFormatSymbols;\n+import java.util.Locale;\n+\n+@Test\n+public class ToLocalizedPatternTest {\n+    private static final char MONETARY_GROUPING = 'g';\n+    private static final char MONETARY_DECIMAL = 'd';\n+\n+    public void testToLocalizedPattern() {\n+        var dfs = new DecimalFormatSymbols(Locale.US);\n+\n+        \/\/ Customize the decimal format symbols\n+        dfs.setMonetaryGroupingSeparator(MONETARY_GROUPING);\n+        dfs.setMonetaryDecimalSeparator(MONETARY_DECIMAL);\n+\n+        \/\/ create a currency formatter\n+        var cf = (DecimalFormat)DecimalFormat.getCurrencyInstance(Locale.US);\n+        cf.setDecimalFormatSymbols(dfs);\n+\n+        \/\/ check\n+        assertEquals(cf.toLocalizedPattern(),\n+            cf.toPattern()\n+               .replace(',', MONETARY_GROUPING)\n+               .replace('.', MONETARY_DECIMAL));\n+    }\n+}\n","filename":"test\/jdk\/java\/text\/Format\/DecimalFormat\/ToLocalizedPatternTest.java","additions":61,"deletions":0,"binary":false,"changes":61,"status":"added"}]}