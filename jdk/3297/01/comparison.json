{"files":[{"patch":"@@ -1121,1 +1121,5 @@\n-      return Dependencies::is_concrete_klass(k);\n+      if (Dependencies::is_concrete_klass(k)) {\n+        return record_witness(k); \/\/ concrete subtype\n+      } else {\n+        return false; \/\/ not a concrete class\n+      }\n@@ -1129,1 +1133,3 @@\n-      if (!Dependencies::is_concrete_method(m, ik)) {\n+      if (Dependencies::is_concrete_method(m, ik)) {\n+        return record_witness(k, m); \/\/ concrete method found\n+      } else {\n@@ -1143,2 +1149,1 @@\n-              _found_methods[_num_participants] = m;\n-              return true;\n+              return record_witness(k, m);\n@@ -1150,5 +1155,7 @@\n-        if (default_methods == NULL)\n-            return false;\n-        m = ik->find_method(default_methods, _name, _signature);\n-        if (!Dependencies::is_concrete_method(m, NULL))\n-            return false;\n+        if (default_methods != NULL) {\n+          Method* dm = ik->find_method(default_methods, _name, _signature);\n+          if (Dependencies::is_concrete_method(dm, NULL)) {\n+            return record_witness(k, dm); \/\/ default method found\n+          }\n+        }\n+        return false; \/\/ no concrete method found\n@@ -1156,4 +1163,0 @@\n-      _found_methods[_num_participants] = m;\n-      \/\/ Note:  If add_participant(k) is called,\n-      \/\/ the method m will already be memoized for it.\n-      return true;\n@@ -1173,1 +1176,9 @@\n-  bool ignore_witness(Klass* witness) {\n+  bool record_witness(Klass* witness, Method* m) {\n+    _found_methods[_num_participants] = m;\n+    return record_witness(witness);\n+  }\n+\n+  \/\/ It is used by is_witness() to fill up participant list (of predefined size)\n+  \/\/ and to report the first witness candidate which doesn't fit into the list.\n+  \/\/ Returns true when no more witnesses can be recorded.\n+  bool record_witness(Klass* witness) {\n@@ -1175,1 +1186,1 @@\n-      return false;\n+      return true; \/\/ report the witness\n@@ -1179,1 +1190,1 @@\n-      return true;\n+      return false; \/\/ record the witness\n@@ -1311,2 +1322,1 @@\n-  if (is_witness(new_type) &&\n-      !ignore_witness(new_type)) {\n+  if (is_witness(new_type)) {\n@@ -1367,1 +1377,1 @@\n-    } else if (is_witness(sub) && !ignore_witness(sub)) {\n+    } else if (is_witness(sub)) {\n","filename":"src\/hotspot\/share\/code\/dependencies.cpp","additions":29,"deletions":19,"binary":false,"changes":48,"status":"modified"}]}