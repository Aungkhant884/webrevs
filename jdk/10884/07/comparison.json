{"files":[{"patch":"@@ -1920,0 +1920,4 @@\n+  } else if (is_power_of_2(~(imm - 1))) {\n+    int shamt = exact_log2(~(imm - 1));\n+    srli(Rd, Rn, shamt);\n+    slli(Rd, Rd, shamt);\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -4274,0 +4274,10 @@\n+\/\/ Load - prefetch\n+\/\/ Eg.  PREFETCH_W  mem\n+pipe_class iload_prefetch(memory mem)\n+%{\n+  single_instruction;\n+  mem    : ID(read);\n+  DECODE : ID;\n+  LDST   : MEM;\n+%}\n+\n@@ -5175,0 +5185,29 @@\n+\/\/ ============================================================================\n+\/\/ Prefetch instructions\n+\/\/ Must be safe to execute with invalid address (cannot fault).\n+\n+instruct prefetchalloc( memory mem ) %{\n+  predicate(UseZicbop);\n+  match(PrefetchAllocation mem);\n+\n+  ins_cost(ALU_COST * 1);\n+  format %{ \"prefetch_w $mem\\t# Prefetch for write\" %}\n+\n+  ins_encode %{\n+    if (is_imm_in_range($mem$$disp, 12, 0)) {\n+      if (($mem$$disp & 0x1f) == 0) {\n+        __ prefetch_w(as_Register($mem$$base), $mem$$disp);\n+      } else {\n+        __ addi(t0, as_Register($mem$$base), $mem$$disp);\n+        __ prefetch_w(t0, 0);\n+      }\n+    } else {\n+      __ mv(t0, $mem$$disp);\n+      __ add(t0, as_Register($mem$$base), t0);\n+      __ prefetch_w(t0, 0);\n+    }\n+  %}\n+\n+  ins_pipe(iload_prefetch);\n+%}\n+\n","filename":"src\/hotspot\/cpu\/riscv\/riscv.ad","additions":39,"deletions":0,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -240,2 +240,4 @@\n-  \/\/ disable prefetch\n-  if (FLAG_IS_DEFAULT(AllocatePrefetchStyle)) {\n+  if (!UseZicbop) {\n+    if (!FLAG_IS_DEFAULT(AllocatePrefetchStyle)) {\n+      warning(\"Zicbop is not available on this CPU\");\n+    }\n@@ -243,0 +245,32 @@\n+  } else {\n+    \/\/ Limit AllocatePrefetchDistance so that it does not exceed the\n+    \/\/ constraint in AllocatePrefetchDistanceConstraintFunc.\n+    if (FLAG_IS_DEFAULT(AllocatePrefetchDistance)) {\n+      FLAG_SET_DEFAULT(AllocatePrefetchDistance, MIN2(512, 3 * (int)CacheLineSize));\n+    }\n+    if (FLAG_IS_DEFAULT(AllocatePrefetchStepSize)) {\n+      FLAG_SET_DEFAULT(AllocatePrefetchStepSize, (int)CacheLineSize);\n+    }\n+    if (FLAG_IS_DEFAULT(PrefetchScanIntervalInBytes)) {\n+      FLAG_SET_DEFAULT(PrefetchScanIntervalInBytes, 3 * (int)CacheLineSize);\n+    }\n+    if (FLAG_IS_DEFAULT(PrefetchCopyIntervalInBytes)) {\n+      FLAG_SET_DEFAULT(PrefetchCopyIntervalInBytes, 3 * (int)CacheLineSize);\n+    }\n+\n+    if (PrefetchCopyIntervalInBytes != -1 &&\n+        ((PrefetchCopyIntervalInBytes & 7) || (PrefetchCopyIntervalInBytes >= 32768))) {\n+      warning(\"PrefetchCopyIntervalInBytes must be -1, or a multiple of 8 and < 32768\");\n+      PrefetchCopyIntervalInBytes &= ~7;\n+      if (PrefetchCopyIntervalInBytes >= 32768) {\n+        PrefetchCopyIntervalInBytes = 32760;\n+      }\n+    }\n+    if (AllocatePrefetchDistance !=-1 && (AllocatePrefetchDistance & 7)) {\n+      warning(\"AllocatePrefetchDistance must be multiple of 8\");\n+      AllocatePrefetchDistance &= ~7;\n+    }\n+    if (AllocatePrefetchStepSize & 7) {\n+      warning(\"AllocatePrefetchStepSize must be multiple of 8\");\n+      AllocatePrefetchStepSize &= ~7;\n+    }\n","filename":"src\/hotspot\/cpu\/riscv\/vm_version_riscv.cpp","additions":36,"deletions":2,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-\n@@ -33,0 +32,4 @@\n+  if (interval >= 0 && UseZicbop) {\n+    \/\/ encoding for prefetch.r\n+    asm(\"ori zero, %0, 1\" : : \"r\"(intptr_t(loc)+interval));\n+  }\n@@ -36,0 +39,4 @@\n+  if (interval >= 0 && UseZicbop) {\n+    \/\/ encoding for prefetch.w\n+    asm(\"ori zero, %0, 3\" : : \"r\"(intptr_t(loc)+interval));\n+  }\n","filename":"src\/hotspot\/os_cpu\/linux_riscv\/prefetch_linux_riscv.inline.hpp","additions":8,"deletions":1,"binary":false,"changes":9,"status":"modified"}]}