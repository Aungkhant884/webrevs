{"files":[{"patch":"@@ -1920,0 +1920,4 @@\n+  } else if (is_power_of_2(~(imm - 1))) {\n+    int shamt = exact_log2(~(imm - 1));\n+    srli(Rd, Rn, shamt);\n+    slli(Rd, Rd, shamt);\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -4274,0 +4274,10 @@\n+\/\/ Load - prefetch\n+\/\/ Eg.  PREFETCH_W  mem\n+pipe_class iload_prefetch(memory mem)\n+%{\n+  single_instruction;\n+  mem    : ID(read);\n+  DECODE : ID;\n+  LDST   : MEM;\n+%}\n+\n@@ -5175,0 +5185,18 @@\n+\/\/ ============================================================================\n+\/\/ Prefetch instructions\n+\/\/ Must be safe to execute with invalid address (cannot fault).\n+\n+instruct prefetchalloc( memory mem ) %{\n+  match(PrefetchAllocation mem);\n+\n+  ins_cost(ALU_COST * 3);\n+  format %{ \"prefetch_w $mem\\t# Prefetch for write\" %}\n+\n+  ins_encode %{\n+    __ addi(t0, as_Register($mem$$base), $mem$$disp);\n+    __ prefetch_w(t0, 0);\n+  %}\n+\n+  ins_pipe(iload_prefetch);\n+%}\n+\n","filename":"src\/hotspot\/cpu\/riscv\/riscv.ad","additions":28,"deletions":0,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -2463,0 +2463,31 @@\n+  address generate_prefetch(bool i, bool r, bool w) {\n+    assert(i ^ r ^ w, \"exactly one of i, r, or w must be set\");\n+\n+    __ align(CodeEntryAlignment);\n+    StubCodeMark mark(this, \"StubRoutines\",\n+                      i ? \"prefetch_i\" :\n+                      r ? \"prefetch_r\" :\n+                          \"prefetch_w\");\n+\n+    address start = __ pc();\n+    Label LOOP;\n+\n+    const Register base = c_rarg0, interval = c_rarg1, first = t0, last = t1;\n+\n+    \/\/ It needs to align on `CacheLineSize`. That's in case interval < CacheLineSize\n+    \/\/ but first + interval spans more than a cache line. In that case we want\n+    \/\/ to make sure we prefetch the two cache lines.\n+    __ andi(first, base, ~(CacheLineSize - 1));\n+    __ addi(interval, interval, -1);\n+    __ add(last, base, interval);\n+    __ andi(last, last, ~(CacheLineSize - 1));\n+    __ bind(LOOP);\n+    if (i) __ prefetch_i(first, 0);\n+    if (r) __ prefetch_r(first, 0);\n+    if (w) __ prefetch_w(first, 0);\n+    __ addi(first, first, CacheLineSize);\n+    __ ble(first, last, LOOP);\n+    __ ret();\n+    return start;\n+  }\n+\n@@ -3971,0 +4002,6 @@\n+    if (UseZicbop) {\n+      StubRoutines::riscv::_prefetch_i = generate_prefetch(\/*i*\/true, \/*r*\/false, \/*w*\/false);\n+      StubRoutines::riscv::_prefetch_r = generate_prefetch(\/*i*\/false, \/*r*\/true, \/*w*\/false);\n+      StubRoutines::riscv::_prefetch_w = generate_prefetch(\/*i*\/false, \/*r*\/false, \/*w*\/true);\n+    }\n+\n","filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp","additions":37,"deletions":0,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -57,0 +57,3 @@\n+address StubRoutines::riscv::_prefetch_i = NULL;\n+address StubRoutines::riscv::_prefetch_r = NULL;\n+address StubRoutines::riscv::_prefetch_w = NULL;\n","filename":"src\/hotspot\/cpu\/riscv\/stubRoutines_riscv.cpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -72,0 +72,4 @@\n+  static address _prefetch_i;\n+  static address _prefetch_r;\n+  static address _prefetch_w;\n+\n@@ -152,0 +156,12 @@\n+  static address prefetch_i() {\n+    return _prefetch_i;\n+  }\n+\n+  static address prefetch_r() {\n+    return _prefetch_r;\n+  }\n+\n+  static address prefetch_w() {\n+    return _prefetch_w;\n+  }\n+\n","filename":"src\/hotspot\/cpu\/riscv\/stubRoutines_riscv.hpp","additions":16,"deletions":0,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -240,2 +240,4 @@\n-  \/\/ disable prefetch\n-  if (FLAG_IS_DEFAULT(AllocatePrefetchStyle)) {\n+  if (!UseZicbop) {\n+    if (!FLAG_IS_DEFAULT(AllocatePrefetchStyle)) {\n+      warning(\"Zicbop is not available on this CPU\");\n+    }\n@@ -243,0 +245,32 @@\n+  } else {\n+    \/\/ Limit AllocatePrefetchDistance so that it does not exceed the\n+    \/\/ constraint in AllocatePrefetchDistanceConstraintFunc.\n+    if (FLAG_IS_DEFAULT(AllocatePrefetchDistance)) {\n+      FLAG_SET_DEFAULT(AllocatePrefetchDistance, MIN2(512, 3 * (int)CacheLineSize));\n+    }\n+    if (FLAG_IS_DEFAULT(AllocatePrefetchStepSize)) {\n+      FLAG_SET_DEFAULT(AllocatePrefetchStepSize, (int)CacheLineSize);\n+    }\n+    if (FLAG_IS_DEFAULT(PrefetchScanIntervalInBytes)) {\n+      FLAG_SET_DEFAULT(PrefetchScanIntervalInBytes, 3 * (int)CacheLineSize);\n+    }\n+    if (FLAG_IS_DEFAULT(PrefetchCopyIntervalInBytes)) {\n+      FLAG_SET_DEFAULT(PrefetchCopyIntervalInBytes, 3 * (int)CacheLineSize);\n+    }\n+\n+    if (PrefetchCopyIntervalInBytes != -1 &&\n+        ((PrefetchCopyIntervalInBytes & 7) || (PrefetchCopyIntervalInBytes >= 32768))) {\n+      warning(\"PrefetchCopyIntervalInBytes must be -1, or a multiple of 8 and < 32768\");\n+      PrefetchCopyIntervalInBytes &= ~7;\n+      if (PrefetchCopyIntervalInBytes >= 32768) {\n+        PrefetchCopyIntervalInBytes = 32760;\n+      }\n+    }\n+    if (AllocatePrefetchDistance !=-1 && (AllocatePrefetchDistance & 7)) {\n+      warning(\"AllocatePrefetchDistance must be multiple of 8\");\n+      AllocatePrefetchDistance &= ~7;\n+    }\n+    if (AllocatePrefetchStepSize & 7) {\n+      warning(\"AllocatePrefetchStepSize must be multiple of 8\");\n+      AllocatePrefetchStepSize &= ~7;\n+    }\n","filename":"src\/hotspot\/cpu\/riscv\/vm_version_riscv.cpp","additions":36,"deletions":2,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+#include \"runtime\/stubRoutines.hpp\"\n@@ -31,2 +32,6 @@\n-\n-inline void Prefetch::read (const void *loc, intx interval) {\n+inline void Prefetch::read(const void *loc, intx interval) {\n+    void (*stub)(const void*, intptr_t) =\n+        (void (*)(const void*, intptr_t))StubRoutines::riscv::prefetch_r();\n+    if (interval >= 0 && stub != NULL) {\n+        stub(loc, interval);\n+    }\n@@ -36,0 +41,5 @@\n+    void (*stub)(const void*, intptr_t) =\n+        (void (*)(const void*, intptr_t))StubRoutines::riscv::prefetch_w();\n+    if (interval >= 0 && stub != NULL) {\n+        stub(loc, interval);\n+    }\n","filename":"src\/hotspot\/os_cpu\/linux_riscv\/prefetch_linux_riscv.inline.hpp","additions":12,"deletions":2,"binary":false,"changes":14,"status":"modified"}]}