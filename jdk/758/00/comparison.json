{"files":[{"patch":"@@ -156,18 +156,0 @@\n-\/\/ VMSlots implementation\n-\n-#define VMSLOTS_SLOT(offset)    ((intptr_t*)&vmslots[(offset)])\n-#define VMSLOTS_ADDR(offset)    ((address)vmslots[(offset)])\n-#define VMSLOTS_INT(offset)     (*((jint*)&vmslots[(offset)]))\n-#define VMSLOTS_FLOAT(offset)   (*((jfloat*)&vmslots[(offset)]))\n-#define VMSLOTS_OBJECT(offset)  ((oop)vmslots[(offset)])\n-#define VMSLOTS_DOUBLE(offset)  (((VMJavaVal64*)&vmslots[(offset) - 1])->d)\n-#define VMSLOTS_LONG(offset)    (((VMJavaVal64*)&vmslots[(offset) - 1])->l)\n-\n-#define SET_VMSLOTS_SLOT(value, offset)   (*(intptr_t*)&vmslots[(offset)] = *(intptr_t *)(value))\n-#define SET_VMSLOTS_ADDR(value, offset)   (*((address *)&vmslots[(offset)]) = (value))\n-#define SET_VMSLOTS_INT(value, offset)    (*((jint *)&vmslots[(offset)]) = (value))\n-#define SET_VMSLOTS_FLOAT(value, offset)  (*((jfloat *)&vmslots[(offset)]) = (value))\n-#define SET_VMSLOTS_OBJECT(value, offset) (*((oop *)&vmslots[(offset)]) = (value))\n-#define SET_VMSLOTS_DOUBLE(value, offset) (((VMJavaVal64*)&vmslots[(offset) - 1])->d = (value))\n-#define SET_VMSLOTS_LONG(value, offset)   (((VMJavaVal64*)&vmslots[(offset) - 1])->l = (value))\n-\n","filename":"src\/hotspot\/cpu\/zero\/bytecodeInterpreter_zero.hpp","additions":0,"deletions":18,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -697,50 +697,0 @@\n-\/\/ The new slots will be inserted before slot insert_before.\n-\/\/ Slots < insert_before will have the same slot number after the insert.\n-\/\/ Slots >= insert_before will become old_slot + num_slots.\n-void ZeroInterpreter::insert_vmslots(int insert_before, int num_slots, TRAPS) {\n-  JavaThread *thread = THREAD->as_Java_thread();\n-  ZeroStack *stack = thread->zero_stack();\n-\n-  \/\/ Allocate the space\n-  stack->overflow_check(num_slots, CHECK);\n-  stack->alloc(num_slots * wordSize);\n-  intptr_t *vmslots = stack->sp();\n-\n-  \/\/ Shuffle everything up\n-  for (int i = 0; i < insert_before; i++)\n-    SET_VMSLOTS_SLOT(VMSLOTS_SLOT(i + num_slots), i);\n-}\n-\n-void ZeroInterpreter::remove_vmslots(int first_slot, int num_slots, TRAPS) {\n-  JavaThread *thread = THREAD->as_Java_thread();\n-  ZeroStack *stack = thread->zero_stack();\n-  intptr_t *vmslots = stack->sp();\n-\n-  \/\/ Move everything down\n-  for (int i = first_slot - 1; i >= 0; i--)\n-    SET_VMSLOTS_SLOT(VMSLOTS_SLOT(i), i + num_slots);\n-\n-  \/\/ Deallocate the space\n-  stack->set_sp(stack->sp() + num_slots);\n-}\n-\n-BasicType ZeroInterpreter::result_type_of_handle(oop method_handle) {\n-  oop method_type = java_lang_invoke_MethodHandle::type(method_handle);\n-  oop return_type = java_lang_invoke_MethodType::rtype(method_type);\n-  return java_lang_Class::as_BasicType(return_type, (Klass* *) NULL);\n-}\n-\n-intptr_t* ZeroInterpreter::calculate_unwind_sp(ZeroStack* stack,\n-                                              oop method_handle) {\n-  oop method_type = java_lang_invoke_MethodHandle::type(method_handle);\n-  int argument_slots = java_lang_invoke_MethodType::ptype_slot_count(method_type);\n-\n-  return stack->sp() + argument_slots;\n-}\n-\n-JRT_ENTRY(void, ZeroInterpreter::throw_exception(JavaThread* thread,\n-                                                Symbol*     name,\n-                                                char*       message))\n-  THROW_MSG(name, message);\n-JRT_END\n-\n","filename":"src\/hotspot\/cpu\/zero\/zeroInterpreter_zero.cpp","additions":0,"deletions":50,"binary":false,"changes":50,"status":"modified"},{"patch":"@@ -44,8 +44,0 @@\n- private:\n-  \/\/ Helpers for method_handle_entry\n-  static void insert_vmslots(int insert_before, int num_slots, TRAPS);\n-  static void remove_vmslots(int first_slot, int num_slots, TRAPS);\n-  static BasicType result_type_of_handle(oop method_handle);\n-  static intptr_t* calculate_unwind_sp(ZeroStack* stack, oop method_handle);\n-  static void throw_exception(JavaThread* thread, Symbol* name,char *msg=NULL);\n-\n","filename":"src\/hotspot\/cpu\/zero\/zeroInterpreter_zero.hpp","additions":0,"deletions":8,"binary":false,"changes":8,"status":"modified"}]}