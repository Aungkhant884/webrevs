{"files":[{"patch":"@@ -976,1 +976,1 @@\n-            } else if (token.equals(\"-trackvthreads\")) {\n+            } else if (token.equals(\"-trackallthreads\")) {\n@@ -1172,1 +1172,1 @@\n-            connectSpec += \"enumeratevthreads=y,\";\n+            connectSpec += \"includevirtualthreads=y,\";\n","filename":"src\/jdk.jdi\/share\/classes\/com\/sun\/tools\/example\/debug\/tty\/TTY.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -479,1 +479,2 @@\n-             \"    -trackvthreads    track virtual threads as they are created\\n\" +\n+             \"    -trackallthreads  Track all threads, including virtual threads.\\n\" +\n+             \"                      Virtual threads are a preview feature of the Java platform.\\n\" +\n","filename":"src\/jdk.jdi\/share\/classes\/com\/sun\/tools\/example\/debug\/tty\/TTYResources.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -50,1 +50,1 @@\n-    static private final String ARG_VM_ENUMERATE_VTHREADS = \"enumeratevthreads\";\n+    static private final String ARG_VM_INCLUDE_VTHREADS = \"includevirtualthreads\";\n@@ -136,3 +136,3 @@\n-                ARG_VM_ENUMERATE_VTHREADS,\n-                getString(\"sun.vm_enumerate_vthreads.label\"),\n-                getString(\"sun.vm_enumerate_vthreads\"),\n+                ARG_VM_INCLUDE_VTHREADS,\n+                getString(\"sun.include_virtualthreads.label\"),\n+                getString(\"sun.include_virtualthreads\"),\n@@ -167,1 +167,1 @@\n-        String enumerateVThreads = argument(ARG_VM_ENUMERATE_VTHREADS, arguments).value();\n+        String includeVThreads = argument(ARG_VM_INCLUDE_VTHREADS, arguments).value();\n@@ -226,1 +226,1 @@\n-                          \",enumeratevthreads=\" + enumerateVThreads;\n+                          \",includevirtualthreads=\" + includeVThreads;\n","filename":"src\/jdk.jdi\/share\/classes\/com\/sun\/tools\/jdi\/SunCommandLineLauncher.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -48,2 +48,2 @@\n-sun.vm_enumerate_vthreads = Enumerate all virtual threads\n-sun.vm_enumerate_vthreads.label = Enumerate VThreads\n+sun.include_virtualthreads = List of all threads includes virtual threads as well as platform threads. Virtual threads are a preview feature of the Java platform.\n+sun.include_virtualthreads.label = Include Virtual Threads\n","filename":"src\/jdk.jdi\/share\/classes\/com\/sun\/tools\/jdi\/resources\/jdi.properties","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -227,3 +227,4 @@\n-.B \\f[CB]\\-trackvthreads\\f[R]\n-Track virtual threads as they are created.\n-See \\f[B]Working with virtual threads\\f[R] below.\n+.B \\f[CB]\\-trackallthreads\\f[R]\n+Track all threads as they are created, including Virtual Threads.\n+See \\f[B]Working With Virtual Threads\\f[R] below.\n+Virtual threads are a preview feature of the Java platform.\n@@ -282,0 +283,4 @@\n+Virtual threads are a preview feature of the Java platform.\n+Preview features may be removed in a future release, or upgraded to\n+permanent features of the Java platform.\n+.PP\n@@ -288,1 +293,1 @@\n-The \\f[CB]\\-trackvthreads\\f[R] option can be used to make JDB track all\n+The \\f[CB]\\-trackallthreads\\f[R] option can be used to make JDB track all\n@@ -296,1 +301,1 @@\n-The Debug Agent has an \\f[CB]enumeratevthreads\\f[R] option that can be\n+The Debug Agent has an \\f[CB]includevirtualthreads\\f[R] option that can be\n@@ -299,3 +304,4 @@\n-The JDB \\f[CB]\\-trackvthreads\\f[R] option will cause JDB to automatically\n-enable the Debug Agent\\[aq]s \\f[CB]enumeratevthreads\\f[R] option when JDB\n-launches an application to debug.\n+The JDB \\f[CB]\\-trackallthreads\\f[R] option will cause JDB to\n+automatically enable the Debug Agent\\[aq]s\n+\\f[CB]includevirtualthreads\\f[R] option when JDB launches an application\n+to debug.\n","filename":"src\/jdk.jdi\/share\/man\/jdb.1","additions":14,"deletions":8,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -545,1 +545,1 @@\n-        if (gdata->enumerateVThreads) {\n+        if (gdata->includeVThreads) {\n","filename":"src\/jdk.jdwp.agent\/share\/native\/libjdwp\/VirtualMachineImpl.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -880,1 +880,3 @@\n- \"enumeratevthreads=y|n            thread lists include all vthreads n\\n\"\n+ \"includevirtualthreads=y|n        List of all threads includes virtual threads as well as platform threads.\\n\"\n+ \"                                 Virtual threads are a preview feature of the Java platform.\\n\"\n+ \"                                                                   n\\n\"\n@@ -1029,1 +1031,1 @@\n-    gdata->enumerateVThreads = JNI_FALSE;\n+    gdata->includeVThreads = JNI_FALSE;\n@@ -1133,1 +1135,1 @@\n-        } else if (strcmp(buf, \"enumeratevthreads\") == 0) {\n+        } else if (strcmp(buf, \"includevirtualthreads\") == 0) {\n@@ -1138,1 +1140,1 @@\n-                gdata->enumerateVThreads = JNI_TRUE;\n+                gdata->includeVThreads = JNI_TRUE;\n@@ -1140,1 +1142,1 @@\n-                gdata->enumerateVThreads = JNI_FALSE;\n+                gdata->includeVThreads = JNI_FALSE;\n","filename":"src\/jdk.jdwp.agent\/share\/native\/libjdwp\/debugInit.c","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -88,1 +88,1 @@\n-    jboolean enumerateVThreads; \/* If true, JDWP APIs return vthreads in thread lists. *\/\n+    jboolean includeVThreads;   \/* If true, VM.AllThreads includes vthreads. *\/\n","filename":"src\/jdk.jdwp.agent\/share\/native\/libjdwp\/util.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -60,1 +60,1 @@\n- *      -jdb.option=\"-trackvthreads\"\n+ *      -jdb.option=\"-trackallthreads\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/kill\/kill001\/kill001.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n- *      -jdb.option=\"-trackvthreads\"\n+ *      -jdb.option=\"-trackallthreads\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/threads\/threads002\/threads002.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -59,1 +59,1 @@\n- *      -jdb.option=\"-trackvthreads\"\n+ *      -jdb.option=\"-trackallthreads\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/trace\/trace001\/trace001.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -742,2 +742,2 @@\n-        \/\/ This flag is needed so VirtualThread.allThreads() includes known vthreads.\n-        arg = (Connector.StringArgument) arguments.get(\"enumeratevthreads\");\n+        \/\/ This flag is needed so VirtualMachine.allThreads() includes known vthreads.\n+        arg = (Connector.StringArgument) arguments.get(\"includevirtualthreads\");\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jdi\/Binder.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -350,1 +350,1 @@\n-                        + \",enumeratevthreads=y\";\n+                        + \",includevirtualthreads=y\";\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jpda\/DebugeeBinder.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}