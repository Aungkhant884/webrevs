{"files":[{"patch":"@@ -44,0 +44,1 @@\n+    private static final AtomicBoolean doneFinished = new AtomicBoolean(false);\n@@ -79,0 +80,1 @@\n+                doneFinished.set(true);\n@@ -86,0 +88,6 @@\n+                    System.out.println(\"doInBackground started: \" +\n+                                        doInBackgroundStarted.get() +\n+                                        \" doInBackgroundFinished: \" +\n+                                        doInBackgroundFinished.get() +\n+                                        \" done: \" + doneFinished.get() +\n+                                        \" state: \" + worker.getState());\n@@ -89,1 +97,1 @@\n-                    if (doInBackgroundFinished.get()\n+                    if (doInBackgroundStarted.get()\n@@ -96,4 +104,4 @@\n-                    \/\/ Ensure the STARTED state is notified\n-                    \/\/ before doInBackground started running\n-                    if (doInBackgroundStarted.get()\n-                        && worker.getState() == SwingWorker.StateValue.STARTED) {\n+                    \/\/ Ensure DONE state is notified AFTER\n+                    \/\/ doInBackground is finished AND done is invoked\n+                    if (doInBackgroundFinished.get() && !doneFinished.get()\n+                        && worker.getState() == SwingWorker.StateValue.DONE) {\n@@ -101,2 +109,1 @@\n-                              \"PropertyChangeListeners called with \" +\n-                               \"state STARTED before doInBackground is finished\");\n+                              \"done method is NOT executed but state is DONE\");\n@@ -112,1 +119,1 @@\n-                            \" doInBackground is finished but before State changed to DONE\");\n+                            \"doInBackground is finished but before State changed to DONE\");\n@@ -140,0 +147,1 @@\n+\n","filename":"test\/jdk\/javax\/swing\/SwingWorker\/TestDoneBeforeDoInBackground.java","additions":16,"deletions":8,"binary":false,"changes":24,"status":"modified"}]}