{"files":[{"patch":"@@ -304,3 +304,6 @@\n-                        T ret = doInBackground();\n-                        setState(StateValue.DONE);\n-                        return ret;\n+                        try {\n+                            return doInBackground();\n+                        } finally {\n+                            setState(StateValue.DONE);\n+                            doneEDT();\n+                        }\n@@ -309,7 +312,1 @@\n-\n-        future = new FutureTask<T>(callable) {\n-                       @Override\n-                       protected void done() {\n-                           doneEDT();\n-                       }\n-                   };\n+       future = new FutureTask<T>(callable);\n@@ -756,7 +753,0 @@\n-            if (state != StateValue.DONE) {\n-                do {\n-                    try {\n-                        Thread.sleep(100);\n-                    } catch (InterruptedException e) {}\n-                } while (state != StateValue.DONE);\n-            }\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/SwingWorker.java","additions":7,"deletions":17,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n- * @run main TestSwingWorker\n+ * @run main TestDoneBeforeDoInBackground\n@@ -32,1 +32,1 @@\n-public class TestSwingWorker {\n+public class TestDoneBeforeDoInBackground {\n@@ -46,2 +46,1 @@\n-                }\n-                catch (InterruptedException ex) {\n+                } catch (InterruptedException ex) {\n@@ -55,2 +54,1 @@\n-                }\n-                catch (InterruptedException ex) {\n+                } catch (InterruptedException ex) {\n","filename":"test\/jdk\/javax\/swing\/SwingWorker\/TestDoneBeforeDoInBackground.java","additions":4,"deletions":6,"binary":false,"changes":10,"previous_filename":"test\/jdk\/javax\/swing\/SwingWorker\/TestSwingWorker.java","status":"renamed"}]}