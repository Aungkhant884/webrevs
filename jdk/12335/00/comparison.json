{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -63,1 +63,1 @@\n-    if (pc == NULL) {\n+    if (pc == nullptr) {\n@@ -70,1 +70,1 @@\n-    if (ret_frame.fp() == NULL) {\n+    if (ret_frame.fp() == nullptr) {\n@@ -73,1 +73,1 @@\n-      \/\/  - when using istate, calculated as (NULL - ijava_state_size) or\n+      \/\/  - when using istate, calculated as (nullptr - ijava_state_size) or\n","filename":"src\/hotspot\/os_cpu\/linux_ppc\/javaThread_linux_ppc.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -108,1 +108,1 @@\n-  guarantee(uc->uc_mcontext.regs != NULL, \"only use ucontext_get_pc in sigaction context\");\n+  guarantee(uc->uc_mcontext.regs != nullptr, \"only use ucontext_get_pc in sigaction context\");\n@@ -116,1 +116,1 @@\n-  guarantee(uc->uc_mcontext.regs != NULL, \"only use ucontext_set_pc in sigaction context\");\n+  guarantee(uc->uc_mcontext.regs != nullptr, \"only use ucontext_set_pc in sigaction context\");\n@@ -129,1 +129,1 @@\n-  return NULL;\n+  return nullptr;\n@@ -142,1 +142,1 @@\n-  if (uc != NULL) {\n+  if (uc != nullptr) {\n@@ -147,3 +147,3 @@\n-    epc = NULL;\n-    if (ret_sp) *ret_sp = (intptr_t *)NULL;\n-    if (ret_fp) *ret_fp = (intptr_t *)NULL;\n+    epc = nullptr;\n+    if (ret_sp) *ret_sp = (intptr_t *)nullptr;\n+    if (ret_fp) *ret_fp = (intptr_t *)nullptr;\n@@ -172,1 +172,1 @@\n-    return frame(NULL, NULL);\n+    return frame(nullptr, nullptr);\n@@ -210,2 +210,2 @@\n-  address stub = NULL;\n-  address pc   = NULL;\n+  address stub = nullptr;\n+  address pc   = nullptr;\n@@ -213,1 +213,1 @@\n-  if (info != NULL && uc != NULL && thread != NULL) {\n+  if (info != nullptr && uc != nullptr && thread != nullptr) {\n@@ -248,1 +248,1 @@\n-      CodeBlob *cb = NULL;\n+      CodeBlob *cb = nullptr;\n@@ -266,1 +266,1 @@\n-               ((cb = CodeCache::find_blob(pc)) != NULL) &&\n+               ((cb = CodeCache::find_blob(pc)) != nullptr) &&\n@@ -278,1 +278,1 @@\n-               ((cb = CodeCache::find_blob(pc)) != NULL) &&\n+               ((cb = CodeCache::find_blob(pc)) != nullptr) &&\n@@ -330,1 +330,1 @@\n-        const char *msg = NULL;\n+        const char *msg = nullptr;\n@@ -349,1 +349,1 @@\n-        VMError::report_and_die(thread, uc, NULL, 0, msg, detail_msg, va_dummy);\n+        VMError::report_and_die(thread, uc, nullptr, 0, msg, detail_msg, va_dummy);\n@@ -360,1 +360,1 @@\n-        CompiledMethod* nm = (cb != NULL) ? cb->as_compiled_method_or_null() : NULL;\n+        CompiledMethod* nm = (cb != nullptr) ? cb->as_compiled_method_or_null() : nullptr;\n@@ -362,1 +362,1 @@\n-        if ((nm != NULL && nm->has_unsafe_access()) || is_unsafe_arraycopy) {\n+        if ((nm != nullptr && nm->has_unsafe_access()) || is_unsafe_arraycopy) {\n@@ -404,1 +404,1 @@\n-  if (stub != NULL) {\n+  if (stub != nullptr) {\n@@ -406,1 +406,1 @@\n-    if (thread != NULL) thread->set_saved_exception_pc(pc);\n+    if (thread != nullptr) thread->set_saved_exception_pc(pc);\n@@ -450,1 +450,1 @@\n-  if (context == NULL) return;\n+  if (context == nullptr) return;\n@@ -468,1 +468,1 @@\n-  if (context == NULL) return;\n+  if (context == nullptr) return;\n@@ -485,1 +485,1 @@\n-  if (context == NULL) return;\n+  if (context == nullptr) return;\n","filename":"src\/hotspot\/os_cpu\/linux_ppc\/os_linux_ppc.cpp","additions":24,"deletions":24,"binary":false,"changes":48,"status":"modified"}]}