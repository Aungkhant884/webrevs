{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -192,1 +192,14 @@\n-                            map.put(name, base + i);\n+                            if (field == AM_PM) {\n+                                \/\/ Convert the dayPeriod \"type\" to either AM or PM field value.\n+                                \/\/ Following is a mapping of dayPeriod \"type\" to their array index\n+                                \/\/ in Calendar resource bundle\n+                                \/\/ am = 0, pm = 1, midnight = 2, noon = 3, morning1 = 4,\n+                                \/\/ morning2 = 5, afternoon1 = 6, afternoon2 = 7, evening1 = 8,\n+                                \/\/ evening2 = 9, night1 = 10, night2 = 11\n+                                switch (i) {\n+                                    case 0, 2, 3, 4, 5 -> map.put(name, AM);\n+                                    case 1, 6, 7, 8, 9, 10, 11 -> map.put(name, PM);\n+                                }\n+                            } else {\n+                                map.put(name, base + i);\n+                            }\n","filename":"src\/java.base\/share\/classes\/sun\/util\/locale\/provider\/CalendarNameProviderImpl.java","additions":15,"deletions":2,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -0,0 +1,66 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import org.testng.Assert;\n+import org.testng.annotations.Test;\n+\n+import java.util.Calendar;\n+import java.util.Locale;\n+import java.util.Map;\n+\n+\/**\n+ * @test\n+ * @bug 8262108\n+ * @summary Verify the results returned by Calendar.getDisplayNames() API\n+ * @comment Locale providers: COMPAT,SPI\n+ * @run testng\/othervm -Djava.locale.providers=COMPAT,SPI CalendarDisplayNamesTest\n+ * @comment Locale providers: CLDR\n+ * @run testng\/othervm -Djava.locale.providers=CLDR CalendarDisplayNamesTest\n+ *\/\n+public class CalendarDisplayNamesTest {\n+\n+    \/**\n+     * Test that the {@link Calendar#getDisplayNames(int, int, Locale)} returns valid field values\n+     * for the {@link Calendar#AM_PM} field in various locales and styles\n+     *\/\n+    @Test\n+    public void testAM_PMDisplayNameValues() {\n+        final int[] styles = new int[]{Calendar.ALL_STYLES, Calendar.SHORT_FORMAT, Calendar.LONG_FORMAT,\n+                Calendar.SHORT_STANDALONE, Calendar.LONG_STANDALONE, Calendar.SHORT, Calendar.LONG};\n+        for (final Locale locale : Locale.getAvailableLocales()) {\n+            for (final int style : styles) {\n+                final Calendar cal = Calendar.getInstance();\n+                cal.setLenient(false);\n+                final Map<String, Integer> names = cal.getDisplayNames(Calendar.AM_PM, style, locale);\n+                if (names == null) {\n+                    continue;\n+                }\n+                for (final Integer fieldValue : names.values()) {\n+                    Assert.assertTrue(fieldValue == Calendar.AM || fieldValue == Calendar.PM,\n+                            \"Invalid field value \" + fieldValue + \" for calendar field AM_PM, in locale \"\n+                                    + locale + \" with style \" + style);\n+                }\n+            }\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/util\/Calendar\/CalendarDisplayNamesTest.java","additions":66,"deletions":0,"binary":false,"changes":66,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 8000983 8008577 8247781\n+ * @bug 8000983 8008577 8247781 8262108\n@@ -40,0 +40,1 @@\n+import java.util.HashMap;\n@@ -98,15 +99,14 @@\n-            testMap(US, AM_PM, ALL_STYLES,\n-                    \"AM\",\n-                    \"PM\",\n-                    \"midnight\",\n-                    \"noon\",\n-                    \"in the morning\",\n-                    \"\",\n-                    \"in the afternoon\",\n-                    \"\",\n-                    \"in the evening\",\n-                    \"\",\n-                    \"at night\",\n-                    \"\",\n-                    RESET_INDEX,\n-                    \"a\", \"p\", \"mi\", \"n\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\");\n+            Map<String, Integer> expectedFieldValues = new HashMap<>();\n+            expectedFieldValues.put(\"AM\", Calendar.AM);\n+            expectedFieldValues.put(\"PM\", Calendar.PM);\n+            expectedFieldValues.put(\"midnight\", Calendar.AM);\n+            expectedFieldValues.put(\"noon\", Calendar.AM);\n+            expectedFieldValues.put(\"in the morning\", Calendar.AM);\n+            expectedFieldValues.put(\"in the afternoon\", Calendar.PM);\n+            expectedFieldValues.put(\"in the evening\", Calendar.PM);\n+            expectedFieldValues.put(\"at night\", Calendar.PM);\n+            expectedFieldValues.put(\"a\", Calendar.AM);\n+            expectedFieldValues.put(\"p\", Calendar.PM);\n+            expectedFieldValues.put(\"mi\", Calendar.AM);\n+            expectedFieldValues.put(\"n\", Calendar.AM);\n+            testAM_PM(US, ALL_STYLES, expectedFieldValues);\n@@ -114,4 +114,6 @@\n-            testMap(US, AM_PM, ALL_STYLES,\n-                    \"AM\", \"PM\",\n-                    RESET_INDEX,\n-                    \"a\", \"p\");\n+            Map<String, Integer> expectedFieldValues = new HashMap<>();\n+            expectedFieldValues.put(\"AM\", Calendar.AM);\n+            expectedFieldValues.put(\"PM\", Calendar.PM);\n+            expectedFieldValues.put(\"a\", Calendar.AM);\n+            expectedFieldValues.put(\"p\", Calendar.PM);\n+            testAM_PM(US, ALL_STYLES, expectedFieldValues);\n@@ -218,0 +220,15 @@\n+    \/**\n+     * Verify that the values returned by Calendar.getDisplayNames() for the passed\n+     * locale and style matches the expected field values\n+     *\/\n+    private static void testAM_PM(Locale locale, int style, Map<String, Integer> expectedNameValuePair) {\n+        Calendar cal = Calendar.getInstance(locale);\n+        Map<String, Integer> got = cal.getDisplayNames(Calendar.AM_PM, style, locale);\n+        if (!(expectedNameValuePair == null && got == null)\n+                && !(expectedNameValuePair != null && expectedNameValuePair.equals(got))) {\n+            System.err.printf(\"testAM_PM: locale=%s, field=%d, style=%d, expected=%s, got=%s%n\",\n+                    locale, Calendar.AM_PM, style, expectedNameValuePair, got);\n+            errors++;\n+        }\n+    }\n+\n","filename":"test\/jdk\/java\/util\/Calendar\/NarrowNamesTest.java","additions":38,"deletions":21,"binary":false,"changes":59,"status":"modified"}]}