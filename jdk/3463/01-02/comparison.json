{"files":[{"patch":"@@ -192,11 +192,5 @@\n-                            if (field == AM_PM) {\n-                                \/\/ Convert the dayPeriod \"type\" to either AM or PM field value.\n-                                \/\/ Following is a mapping of dayPeriod \"type\" to their array index\n-                                \/\/ in Calendar resource bundle\n-                                \/\/ am = 0, pm = 1, midnight = 2, noon = 3, morning1 = 4,\n-                                \/\/ morning2 = 5, afternoon1 = 6, afternoon2 = 7, evening1 = 8,\n-                                \/\/ evening2 = 9, night1 = 10, night2 = 11\n-                                switch (i) {\n-                                    case 0, 2, 3, 4, 5 -> map.put(name, AM);\n-                                    case 1, 6, 7, 8, 9, 10, 11 -> map.put(name, PM);\n-                                }\n+                            if (field == AM_PM && !javatime && i > PM) {\n+                                \/\/ when dealing with calendar fields, don't set AM_PM field value\n+                                \/\/ to anything that isn't either AM or PM (this can happen when\n+                                \/\/ day periods are involved)\n+                                continue;\n","filename":"src\/java.base\/share\/classes\/sun\/util\/locale\/provider\/CalendarNameProviderImpl.java","additions":5,"deletions":11,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -102,6 +102,6 @@\n-            expectedFieldValues.put(\"midnight\", Calendar.AM);\n-            expectedFieldValues.put(\"noon\", Calendar.AM);\n-            expectedFieldValues.put(\"in the morning\", Calendar.AM);\n-            expectedFieldValues.put(\"in the afternoon\", Calendar.PM);\n-            expectedFieldValues.put(\"in the evening\", Calendar.PM);\n-            expectedFieldValues.put(\"at night\", Calendar.PM);\n+            expectedFieldValues.put(\"midnight\", null);\n+            expectedFieldValues.put(\"noon\", null);\n+            expectedFieldValues.put(\"in the morning\", null);\n+            expectedFieldValues.put(\"in the afternoon\", null);\n+            expectedFieldValues.put(\"in the evening\", null);\n+            expectedFieldValues.put(\"at night\", null);\n@@ -110,2 +110,2 @@\n-            expectedFieldValues.put(\"mi\", Calendar.AM);\n-            expectedFieldValues.put(\"n\", Calendar.AM);\n+            expectedFieldValues.put(\"mi\", null);\n+            expectedFieldValues.put(\"n\", null);\n@@ -227,2 +227,14 @@\n-        if (!(expectedNameValuePair == null && got == null)\n-                && !(expectedNameValuePair != null && expectedNameValuePair.equals(got))) {\n+        boolean unexpectedValues = false;\n+        for (Map.Entry<String, Integer> expected : expectedNameValuePair.entrySet()) {\n+            final Integer expectedFieldValue = expected.getValue();\n+            final Integer gotFieldValue = got.remove(expected.getKey());\n+            if ((expectedFieldValue == null && gotFieldValue != null) ||\n+                    (expectedFieldValue != null && !expectedFieldValue.equals(gotFieldValue))) {\n+                unexpectedValues = true;\n+                break;\n+            }\n+        }\n+        if (!got.isEmpty()) {\n+            unexpectedValues = true;\n+        }\n+        if (unexpectedValues) {\n","filename":"test\/jdk\/java\/util\/Calendar\/NarrowNamesTest.java","additions":22,"deletions":10,"binary":false,"changes":32,"status":"modified"}]}