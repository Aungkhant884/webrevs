{"files":[{"patch":"@@ -392,0 +392,7 @@\n+                \/\/ Wait for the client to be garbage collected.\n+                \/\/ we use the ReferenceTracker API rather than HttpClient::close here,\n+                \/\/ because these tests inject faults by throwing inside callbacks, which\n+                \/\/ is more likely to get HttpClient::close wedged until jtreg times out.\n+                \/\/ By using the ReferenceTracker, we will get some diagnosis about what\n+                \/\/ is keeping the client alive if it doesn't get GC'ed within the\n+                \/\/ expected time frame.\n@@ -485,0 +492,7 @@\n+                \/\/ Wait for the client to be garbage collected.\n+                \/\/ we use the ReferenceTracker API rather than HttpClient::close here,\n+                \/\/ because these tests inject faults by throwing inside callbacks, which\n+                \/\/ is more likely to get HttpClient::close wedged until jtreg times out.\n+                \/\/ By using the ReferenceTracker, we will get some diagnosis about what\n+                \/\/ is keeping the client alive if it doesn't get GC'ed within the\n+                \/\/ expected time frame.\n","filename":"test\/jdk\/java\/net\/httpclient\/AbstractThrowingPublishers.java","additions":14,"deletions":0,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -344,0 +344,7 @@\n+                \/\/ Wait for the client to be garbage collected.\n+                \/\/ we use the ReferenceTracker API rather than HttpClient::close here,\n+                \/\/ because these tests inject faults by throwing inside callbacks, which\n+                \/\/ is more likely to get HttpClient::close wedged until jtreg times out.\n+                \/\/ By using the ReferenceTracker, we will get some diagnosis about what\n+                \/\/ is keeping the client alive if it doesn't get GC'ed within the\n+                \/\/ expected time frame.\n@@ -440,0 +447,7 @@\n+                \/\/ Wait for the client to be garbage collected.\n+                \/\/ we use the ReferenceTracker API rather than HttpClient::close here,\n+                \/\/ because these tests inject faults by throwing inside callbacks, which\n+                \/\/ is more likely to get HttpClient::close wedged until jtreg times out.\n+                \/\/ By using the ReferenceTracker, we will get some diagnosis about what\n+                \/\/ is keeping the client alive if it doesn't get GC'ed within the\n+                \/\/ expected time frame.\n","filename":"test\/jdk\/java\/net\/httpclient\/AbstractThrowingPushPromises.java","additions":14,"deletions":0,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -318,0 +318,7 @@\n+                \/\/ Wait for the client to be garbage collected.\n+                \/\/ we use the ReferenceTracker API rather than HttpClient::close here,\n+                \/\/ because these tests inject faults by throwing inside callbacks, which\n+                \/\/ is more likely to get HttpClient::close wedged until jtreg times out.\n+                \/\/ By using the ReferenceTracker, we will get some diagnosis about what\n+                \/\/ is keeping the client alive if it doesn't get GC'ed within the\n+                \/\/ expected time frame.\n@@ -476,0 +483,7 @@\n+                \/\/ Wait for the client to be garbage collected.\n+                \/\/ we use the ReferenceTracker API rather than HttpClient::close here,\n+                \/\/ because these tests inject faults by throwing inside callbacks, which\n+                \/\/ is more likely to get HttpClient::close wedged until jtreg times out.\n+                \/\/ By using the ReferenceTracker, we will get some diagnosis about what\n+                \/\/ is keeping the client alive if it doesn't get GC'ed within the\n+                \/\/ expected time frame.\n","filename":"test\/jdk\/java\/net\/httpclient\/AbstractThrowingSubscribers.java","additions":14,"deletions":0,"binary":false,"changes":14,"status":"modified"}]}