{"files":[{"patch":"@@ -4036,2 +4036,6 @@\n-        if(typeParametersOpt().size() > 0) {\n-            log.error(DiagnosticFlag.SYNTAX, S.prevToken().endPos, Errors.EnumCantBeGeneric);\n+        List<JCTypeParameter> typarams = typeParametersOpt(true);\n+        if (typarams == null || !typarams.isEmpty()) {\n+            int errorPosition = typarams == null\n+                    ? token.pos\n+                    : typarams.head.pos;\n+            log.error(DiagnosticFlag.SYNTAX, errorPosition, Errors.EnumCantBeGeneric);\n@@ -4542,0 +4546,6 @@\n+        return typeParametersOpt(false);\n+    }\n+    \/** Parses a potentially empty type parameter list if needed with `allowEmpty`.\n+     *  The caller is free to choose the desirable error message in this (erroneous) case.\n+     *\/\n+    protected List<JCTypeParameter> typeParametersOpt(boolean parseEmpty) {\n@@ -4545,0 +4555,6 @@\n+\n+            if (parseEmpty && token.kind == GT) {\n+                accept(GT);\n+                return null;\n+            }\n+\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/parser\/JavacParser.java","additions":18,"deletions":2,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -0,0 +1,13 @@\n+\/*\n+ * @test \/nodynamiccopyright\/\n+ * @bug 8286057\n+ * @summary Make javac error on a generic enum friendlier\n+ *\n+ * @compile\/fail\/ref=T8286057.out -XDrawDiagnostics T8286057.java\n+ *\/\n+\n+class EnumsCantBeGeneric {\n+  public enum E1<> {}\n+  public enum E2<T> {}\n+  public enum E3<T, T> {}\n+}\n","filename":"test\/langtools\/tools\/javac\/T8286057.java","additions":13,"deletions":0,"binary":false,"changes":13,"status":"added"},{"patch":"@@ -0,0 +1,4 @@\n+T8286057.java:10:20: compiler.err.enum.cant.be.generic\n+T8286057.java:11:18: compiler.err.enum.cant.be.generic\n+T8286057.java:12:18: compiler.err.enum.cant.be.generic\n+3 errors\n\\ No newline at end of file\n","filename":"test\/langtools\/tools\/javac\/T8286057.out","additions":4,"deletions":0,"binary":false,"changes":4,"status":"added"}]}