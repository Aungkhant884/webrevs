{"files":[{"patch":"@@ -4036,0 +4036,4 @@\n+        if(typeParametersOpt().size() > 0) {\n+            log.error(DiagnosticFlag.SYNTAX, S.prevToken().endPos, Errors.EnumCantBeGeneric);\n+        }\n+\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/parser\/JavacParser.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -553,0 +553,3 @@\n+compiler.err.enum.cant.be.generic=\\\n+    enums cannot be generic\n+\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/compiler.properties","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -23,1 +23,0 @@\n-package p2;\n@@ -25,2 +24,4 @@\n-public interface TestIntf {\n-    String test();\n+\/\/ key: compiler.err.enum.cant.be.generic\n+\n+class EnumsCantBeGeneric {\n+    public enum E<T> {}\n","filename":"test\/langtools\/tools\/javac\/diags\/examples\/EnumsCantBeGeneric.java","additions":4,"deletions":3,"binary":false,"changes":7,"previous_filename":"test\/jdk\/java\/lang\/invoke\/MethodHandleProxies\/m2\/p2\/TestIntf.java","status":"copied"}]}