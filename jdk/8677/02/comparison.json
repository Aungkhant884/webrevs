{"files":[{"patch":"@@ -4036,0 +4036,8 @@\n+        List<JCTypeParameter> typarams = typeParametersOpt(true);\n+        if (typarams == null || !typarams.isEmpty()) {\n+            int errorPosition = typarams == null\n+                    ? token.pos\n+                    : typarams.head.pos;\n+            log.error(DiagnosticFlag.SYNTAX, errorPosition, Errors.EnumCantBeGeneric);\n+        }\n+\n@@ -4538,0 +4546,6 @@\n+        return typeParametersOpt(false);\n+    }\n+    \/** Parses a potentially empty type parameter list if needed with `allowEmpty`.\n+     *  The caller is free to choose the desirable error message in this (erroneous) case.\n+     *\/\n+    protected List<JCTypeParameter> typeParametersOpt(boolean parseEmpty) {\n@@ -4541,0 +4555,6 @@\n+\n+            if (parseEmpty && token.kind == GT) {\n+                accept(GT);\n+                return null;\n+            }\n+\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/parser\/JavacParser.java","additions":20,"deletions":0,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -553,0 +553,3 @@\n+compiler.err.enum.cant.be.generic=\\\n+    enums cannot be generic\n+\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/compiler.properties","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -0,0 +1,13 @@\n+\/*\n+ * @test \/nodynamiccopyright\/\n+ * @bug 8286057\n+ * @summary Make javac error on a generic enum friendlier\n+ *\n+ * @compile\/fail\/ref=T8286057.out -XDrawDiagnostics T8286057.java\n+ *\/\n+\n+class EnumsCantBeGeneric {\n+  public enum E1<> {}\n+  public enum E2<T> {}\n+  public enum E3<T, T> {}\n+}\n","filename":"test\/langtools\/tools\/javac\/T8286057.java","additions":13,"deletions":0,"binary":false,"changes":13,"status":"added"},{"patch":"@@ -0,0 +1,4 @@\n+T8286057.java:10:20: compiler.err.enum.cant.be.generic\n+T8286057.java:11:18: compiler.err.enum.cant.be.generic\n+T8286057.java:12:18: compiler.err.enum.cant.be.generic\n+3 errors\n\\ No newline at end of file\n","filename":"test\/langtools\/tools\/javac\/T8286057.out","additions":4,"deletions":0,"binary":false,"changes":4,"status":"added"},{"patch":"@@ -0,0 +1,28 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/\/ key: compiler.err.enum.cant.be.generic\n+\n+class EnumsCantBeGeneric {\n+    public enum E<T> {}\n+}\n","filename":"test\/langtools\/tools\/javac\/diags\/examples\/EnumsCantBeGeneric.java","additions":28,"deletions":0,"binary":false,"changes":28,"status":"added"}]}