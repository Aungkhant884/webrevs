{"files":[{"patch":"@@ -121,1 +121,0 @@\n-        UnixPath dst = UnixPath.toUnixPath(target);\n@@ -123,1 +122,0 @@\n-        int dstFD = 0;\n@@ -126,0 +124,8 @@\n+        } catch (UnixException x) {\n+            x.rethrowAsIOException(src);\n+            return IOStatus.THROWN;\n+        }\n+\n+        UnixPath dst = UnixPath.toUnixPath(target);\n+        int dstFD = 0;\n+        try {\n@@ -128,1 +134,8 @@\n-            x.rethrowAsIOException(src, dst);\n+            try {\n+                close(srcFD);\n+            } catch (UnixException y) {\n+                x.addSuppressed(y);\n+                x.rethrowAsIOException(src, dst);\n+                return IOStatus.THROWN;\n+            }\n+            x.rethrowAsIOException(dst);\n@@ -135,0 +148,7 @@\n+            try {\n+                close(dstFD);\n+                dstFD = 0;\n+            } catch (UnixException y) {\n+                x.rethrowAsIOException(dst);\n+                return IOStatus.THROWN;\n+            }\n@@ -136,12 +156,5 @@\n-            if (exists(dst)) {\n-                try {\n-                    close(dstFD);\n-                    dstFD = 0;\n-                } catch (UnixException ignore) {\n-                }\n-                try {\n-                    unlink(dst);\n-                } catch (UnixException y) {\n-                    y.rethrowAsIOException(dst);\n-                    return IOStatus.THROWN;\n-                }\n+            try {\n+                unlink(dst);\n+            } catch (UnixException y) {\n+                x.rethrowAsIOException(dst);\n+                return IOStatus.THROWN;\n@@ -159,0 +172,3 @@\n+            UnixException ue = null;\n+            UnixPath s = null;\n+            UnixPath d = null;\n@@ -163,2 +179,2 @@\n-                    x.rethrowAsIOException(dst);\n-                    return IOStatus.THROWN;\n+                    ue = x;\n+                    d = dst;\n@@ -170,2 +186,11 @@\n-                x.rethrowAsIOException(src);\n-                return IOStatus.THROWN;\n+                if (ue != null)\n+                    ue.addSuppressed(x);\n+                else\n+                    ue = x;\n+                s = src;\n+            }\n+            if (ue != null) {\n+                if (s != null && d != null)\n+                    ue.rethrowAsIOException(s, d);\n+                else\n+                    ue.rethrowAsIOException(s != null ? s : d);\n","filename":"src\/java.base\/linux\/classes\/sun\/nio\/fs\/LinuxFileSystemProvider.java","additions":44,"deletions":19,"binary":false,"changes":63,"status":"modified"},{"patch":"@@ -79,1 +79,1 @@\n-    public int clone(Path source, Path target, boolean noFollowLinks)\n+    public int clone(Path source, Path target, boolean followLinks)\n@@ -83,0 +83,1 @@\n+        int flags = followLinks ? 0 : CLONE_NOFOLLOW;\n@@ -84,1 +85,1 @@\n-            return BsdNativeDispatcher.clonefile(src, dst, noFollowLinks);\n+            return BsdNativeDispatcher.clonefile(src, dst, flags);\n","filename":"src\/java.base\/macosx\/classes\/sun\/nio\/fs\/BsdFileSystemProvider.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -69,2 +69,0 @@\n-     *\n-     * int flags = noFollowLinks ? CLONE_NOFOLLOW : 0;\n@@ -72,1 +70,1 @@\n-    static int clonefile(UnixPath src, UnixPath dst, boolean noFollowLinks)\n+    static int clonefile(UnixPath src, UnixPath dst, int flags)\n@@ -79,3 +77,2 @@\n-                    return clonefile0(srcBuffer.address(),\n-                                      dstBuffer.address(),\n-                                      noFollowLinks);\n+                    return clonefile0(srcBuffer.address(), dstBuffer.address(),\n+                                      flags);\n@@ -90,2 +87,2 @@\n-    private static native int clonefile0(long srcAddress, long dstAddres,\n-                                         boolean noFollowLinks)\n+    private static native int clonefile0(long srcAddress, long dstAddress,\n+                                         int flags)\n","filename":"src\/java.base\/macosx\/classes\/sun\/nio\/fs\/BsdNativeDispatcher.java","additions":5,"deletions":8,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -231,1 +231,1 @@\n-    jlong srcAddress, jlong dstAddress, jboolean noFollowLinks)\n+    jlong srcAddress, jlong dstAddress, int flags)\n@@ -236,2 +236,0 @@\n-    int flags = noFollowLinks == JNI_TRUE ? CLONE_NOFOLLOW : 0;\n-\n","filename":"src\/java.base\/macosx\/native\/libnio\/fs\/BsdNativeDispatcher.c","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -33,0 +33,3 @@\n+#ifdef _ALLBSD_SOURCE\n+#include <sys\/clonefile.h>\n+#endif\n@@ -151,0 +154,5 @@\n+#ifdef _ALLBSD_SOURCE\n+    \/\/ flags used with clonefile(2)\n+    static final int PREFIX_CLONE_NOFOLLOW = CLONE_NOFOLLOW;\n+    static final int PREFIX_CLONE_NOOWNERCOPY = CLONE_NOOWNERCOPY;\n+#endif\n","filename":"src\/java.base\/unix\/classes\/sun\/nio\/fs\/UnixConstants.java.template","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -283,1 +283,1 @@\n-            int res = provider.clone(source, target, !flags.followLinks);\n+            int res = provider.clone(source, target, flags.followLinks);\n","filename":"src\/java.base\/unix\/classes\/sun\/nio\/fs\/UnixCopyFile.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -39,0 +39,1 @@\n+import sun.nio.ch.IOStatus;\n@@ -293,1 +294,2 @@\n-     * name is {@code dst} using a platform-specific system call.\n+     * name is {@code dst} using a platform-specific system call. The\n+     * implementation in this class always returns IOStatus.UNSUPPORTED.\n@@ -297,1 +299,1 @@\n-     * @param noFollowLinks whether to follow links\n+     * @param followLinks whether to follow links\n@@ -299,3 +301,3 @@\n-     * @return 0 on success, UNSUPPORTED_CASE if the call does not work with\n-     *         the given parameters, or UNSUPPORTED if cloning is not supported\n-     *         on this platform\n+     * @return 0 on success, IOStatus.UNSUPPORTED if the call does not work with\n+     *         the given parameters, or IOStatus.UNSUPPORTED if cloning is not\n+     *         supported on this platform\n@@ -303,2 +305,4 @@\n-    public abstract int clone(Path source, Path target, boolean noFollowLinks)\n-        throws IOException;\n+    public int clone(Path source, Path target, boolean followLinks)\n+        throws IOException {\n+        return IOStatus.UNSUPPORTED;\n+    }\n","filename":"src\/java.base\/unix\/classes\/sun\/nio\/fs\/UnixFileSystemProvider.java","additions":11,"deletions":7,"binary":false,"changes":18,"status":"modified"}]}