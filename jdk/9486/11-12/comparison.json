{"files":[{"patch":"@@ -43,2 +43,0 @@\n-import java.util.stream.Stream;\n-import java.util.stream.StreamSupport;\n@@ -49,5 +47,0 @@\n-    \/\/ File system types that support copy-on-write (CoW)\n-    \/\/ for testing cloning \/ reflink on Linux\n-    private static final Set<String> COW_TYPES =\n-        Set.of(\"bcachefs\", \"btrfs\", \"ocfs2\", \"xfs\");\n-\n@@ -55,2 +48,0 @@\n-    private static boolean testPosixAttributes = false;\n-\n@@ -58,42 +49,1 @@\n-\n-    \/**\n-     * Returns the secondary test directory as a path name string.\n-     * If the system property \"test.dir\" is definied it is returned.\n-     * Otherwise, if the platform is not Linux, the current directory\n-     * \".\" is returned. If the platform is Linux, then the first\n-     * located top level directory which supports CoW is returned. If\n-     * there is no such directory then \".\" is returned.\n-     *\n-     * @return the path string of the secondary test directory\n-     *\/\n-    private static final String getTestDir() {\n-        final String dot = \".\";\n-        if (!Platform.isLinux()) {\n-            return System.getProperty(\"test.dir\", dot);\n-        }\n-\n-        String testDir = System.getProperty(\"test.dir\");\n-        if (testDir != null) {\n-            return testDir;\n-        }\n-\n-        final Path dotPath = Path.of(dot);\n-        try {\n-            if (COW_TYPES.contains(getFileStore(dotPath).type().toLowerCase())) {\n-                return dot;\n-            }\n-        } catch (IOException ignored) {\n-        }\n-\n-        Spliterator<FileStore> spfs =\n-            FileSystems.getDefault().getFileStores().spliterator();\n-        Stream<FileStore> sfs = StreamSupport.stream(spfs, false);\n-        return sfs.filter(fs -> !fs.isReadOnly() &&\n-                                COW_TYPES.contains(fs.type().toLowerCase()))\n-                  .map(fs -> fs.toString().split(\" \")[0])\n-                  .map(s -> Path.of(s))\n-                  .filter(d -> Files.exists(d) && Files.isDirectory(d))\n-                  .findFirst()\n-                  .orElse(dotPath)\n-                  .toString();\n-    }\n+    private static boolean testPosixAttributes = false;\n@@ -114,1 +64,1 @@\n-            String testDir = getTestDir();\n+            String testDir = System.getProperty(\"test.dir\", \".\");\n@@ -117,0 +67,1 @@\n+            printDirInfo(\"dir2\", dir2, fileStore2);\n@@ -121,1 +72,0 @@\n-                    printDirInfo(\"dir2\", dir2, fileStore2);\n@@ -139,1 +89,0 @@\n-                printDirInfo(\"dir2\", dir2, fileStore2);\n","filename":"test\/jdk\/java\/nio\/file\/Files\/CopyAndMove.java","additions":3,"deletions":54,"binary":false,"changes":57,"status":"modified"}]}