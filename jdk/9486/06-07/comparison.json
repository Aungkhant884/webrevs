{"files":[{"patch":"@@ -74,12 +74,0 @@\n-    private static UnixException catEx(UnixException x, UnixException y) {\n-        assert x != null || y != null;\n-        UnixException ue = y;\n-        if (x != null) {\n-            ue = x;\n-            if (y != null) {\n-                ue.addSuppressed(y);\n-            }\n-        }\n-        return ue;\n-    }\n-\n@@ -94,0 +82,1 @@\n+     * @param mode the permissions to assign to the destination\n@@ -99,2 +88,4 @@\n-    protected int clone(UnixPath src, UnixPath dst, boolean followLinks)\n-        throws IOException {\n+    protected int clone(UnixPath src, UnixPath dst, boolean followLinks,\n+                        int mode)\n+        throws IOException\n+    {\n@@ -103,1 +94,2 @@\n-            srcFD = open(src, O_RDONLY, 0);\n+            int flags = O_RDONLY | (followLinks ? 0 : O_NOFOLLOW);\n+            srcFD = open(src, flags, 0);\n@@ -111,1 +103,2 @@\n-            dstFD = open(dst, O_CREAT | O_WRONLY, 0666);\n+            int flags = (O_CREAT | O_WRONLY) | (followLinks ? 0 : O_NOFOLLOW);\n+            dstFD = open(dst, flags, mode);\n@@ -115,3 +108,1 @@\n-            } catch (UnixException y) {\n-                catEx(x, y).rethrowAsIOException(src, dst);\n-                return IOStatus.THROWN;\n+            } catch (UnixException ignored) {\n@@ -123,1 +114,1 @@\n-        UnixException ioctlEx = null;\n+        UnixException resultEx = null;\n@@ -127,0 +118,1 @@\n+            fchmod(dstFD, mode);\n@@ -133,1 +125,1 @@\n-                    ioctlEx = x;\n+                    resultEx = x;\n@@ -142,4 +134,0 @@\n-        UnixException ue = ioctlEx;\n-        UnixPath s = null;\n-        UnixPath d = null;\n-\n@@ -149,2 +137,8 @@\n-            ue = catEx(ue, x);\n-            d = dst;\n+            if (resultEx == null)\n+                resultEx = x;\n+        }\n+        try {\n+            UnixNativeDispatcher.close(srcFD);\n+        } catch (UnixException y) {\n+            if (resultEx == null)\n+                resultEx = y;\n@@ -152,2 +146,0 @@\n-\n-        \/\/ delete dst to avoid later exception in Java layer\n@@ -157,3 +149,3 @@\n-            } catch (UnixException x) {\n-                ue = catEx(ue, x);\n-                d = dst;\n+            } catch (UnixException z) {\n+                if (resultEx == null)\n+                    resultEx = z;\n@@ -162,15 +154,2 @@\n-\n-        try {\n-            UnixNativeDispatcher.close(srcFD);\n-        } catch (UnixException x) {\n-            ue = catEx(ue, x);\n-            s = src;\n-        }\n-\n-        if (ue != null) {\n-            if (ioctlEx != null)\n-                throw new IOException(ioctlEx.errorString(), ioctlEx);\n-            else if (s != null && d != null)\n-                ue.rethrowAsIOException(s, d);\n-            else\n-                ue.rethrowAsIOException(s != null ? s : d);\n+        if (resultEx != null) {\n+            resultEx.rethrowAsIOException(src, dst);\n","filename":"src\/java.base\/linux\/classes\/sun\/nio\/fs\/LinuxFileSystem.java","additions":26,"deletions":47,"binary":false,"changes":73,"status":"modified"},{"patch":"@@ -80,0 +80,1 @@\n+     * @param mode the permissions to assign to the destination\n@@ -86,2 +87,4 @@\n-    protected int clone(UnixPath src, UnixPath dst, boolean followLinks)\n-        throws IOException {\n+    protected int clone(UnixPath src, UnixPath dst, boolean followLinks,\n+                        int mode)\n+        throws IOException\n+    {\n@@ -89,0 +92,1 @@\n+        int result = 0;\n@@ -90,1 +94,1 @@\n-            return BsdNativeDispatcher.clonefile(src, dst, flags);\n+            result = BsdNativeDispatcher.clonefile(src, dst, flags);\n@@ -103,0 +107,6 @@\n+        try {\n+            UnixNativeDispatcher.chmod(dst, mode);\n+        } catch (UnixException x) {\n+            x.rethrowAsIOException(src, dst);\n+        }\n+        return result;\n","filename":"src\/java.base\/macosx\/classes\/sun\/nio\/fs\/BsdFileSystem.java","additions":13,"deletions":3,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -71,11 +71,10 @@\n-        throws UnixException {\n-        if (src.getFileSystem() == dst.getFileSystem()) {\n-            try (NativeBuffer srcBuffer = copyToNativeBuffer(src);\n-                NativeBuffer dstBuffer = copyToNativeBuffer(dst)) {\n-                long comp = Blocker.begin();\n-                try {\n-                    return clonefile0(srcBuffer.address(), dstBuffer.address(),\n-                                      flags);\n-                } finally {\n-                    Blocker.end(comp);\n-                }\n+        throws UnixException\n+    {\n+        try (NativeBuffer srcBuffer = copyToNativeBuffer(src);\n+            NativeBuffer dstBuffer = copyToNativeBuffer(dst)) {\n+            long comp = Blocker.begin();\n+            try {\n+                return clonefile0(srcBuffer.address(), dstBuffer.address(),\n+                                  flags);\n+            } finally {\n+                Blocker.end(comp);\n@@ -84,2 +83,0 @@\n-\n-        return -1;\n","filename":"src\/java.base\/macosx\/classes\/sun\/nio\/fs\/BsdNativeDispatcher.java","additions":10,"deletions":13,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -232,1 +232,1 @@\n-    jlong srcAddress, jlong dstAddress, int flags)\n+    jlong srcAddress, jlong dstAddress, jint flags)\n@@ -282,2 +282,1 @@\n-    if (setattrlist(path, &attrList, (void*)buf,\n-        count*attrsize, options) != 0) {\n+    if (setattrlist(path, &attrList, (void*)buf, count*attrsize, options) != 0) {\n","filename":"src\/java.base\/macosx\/native\/libnio\/fs\/BsdNativeDispatcher.c","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -279,1 +279,0 @@\n-        boolean copied = false;\n@@ -282,1 +281,2 @@\n-                                                   flags.followLinks);\n+                                                   flags.followLinks,\n+                                                   attrs.mode());\n@@ -284,1 +284,10 @@\n-                copied = true;\n+                \/\/ copy owner\n+                if (flags.copyPosixAttributes) {\n+                    try {\n+                        chown(target, attrs.uid(), attrs.gid());\n+                    } catch (UnixException x) {\n+                        if (flags.failIfUnableToCopyPosix)\n+                            x.rethrowAsIOException(target);\n+                    }\n+                }\n+                return;\n@@ -303,2 +312,0 @@\n-                           copied ? \/\/ copied == true => target already exists\n-                           O_WRONLY :\n@@ -316,1 +323,2 @@\n-                if (!copied && !directCopyNotSupported) {\n+                boolean copied = false;\n+                if (!directCopyNotSupported) {\n","filename":"src\/java.base\/unix\/classes\/sun\/nio\/fs\/UnixCopyFile.java","additions":14,"deletions":6,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -137,0 +137,1 @@\n+     * @param mode the permissions to assign to the destination\n@@ -142,1 +143,2 @@\n-    protected int clone(UnixPath src, UnixPath dst, boolean followLinks)\n+    protected int clone(UnixPath src, UnixPath dst, boolean followLinks,\n+                        int mode)\n","filename":"src\/java.base\/unix\/classes\/sun\/nio\/fs\/UnixFileSystem.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"}]}