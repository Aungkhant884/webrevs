{"files":[{"patch":"@@ -0,0 +1,118 @@\n+\/*\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4702690\n+ * @key headful\n+ * @summary Make an automatic AccessibleRelation between\n+ * JScrollBars and what they scroll (TP)\n+ * @run main JScrollPaneAccessibleRelationsTest\n+ *\/\n+import java.beans.PropertyChangeEvent;\n+import java.beans.PropertyChangeListener;\n+\n+import javax.accessibility.AccessibleRelation;\n+import javax.swing.JFrame;\n+import javax.swing.JScrollBar;\n+import javax.swing.JScrollPane;\n+import javax.swing.SwingUtilities;\n+\n+public class JScrollPaneAccessibleRelationsTest\n+implements PropertyChangeListener {\n+\n+    private static JFrame jFrame;\n+    private static JScrollPane jScrollPane;\n+    private static JScrollBar horizontalScrollBar;\n+    private static JScrollBar verticalScrollBar;\n+\n+    private static Object[] jScrollPaneTarget;\n+    private static Object[] horizontalScrollBarTarget;\n+    private static Object[] verticalScrollBarTarget;\n+\n+    public static void createGUI() {\n+        jFrame = new JFrame();\n+\n+        jScrollPane = new JScrollPane();\n+        horizontalScrollBar = jScrollPane.createHorizontalScrollBar();\n+        verticalScrollBar = jScrollPane.createVerticalScrollBar();\n+        jScrollPane.setHorizontalScrollBar(horizontalScrollBar);\n+        jScrollPane.setVerticalScrollBar(verticalScrollBar);\n+\n+        jFrame.getContentPane().add(jScrollPane);\n+    }\n+\n+    public static void doTest() throws Exception {\n+        try {\n+            SwingUtilities.invokeAndWait(() -> createGUI());\n+\n+            SwingUtilities.invokeAndWait(() -> jScrollPaneTarget =\n+                jScrollPane.getAccessibleContext().getAccessibleRelationSet()\n+                .get(AccessibleRelation.CONTROLLED_BY).getTarget());\n+            SwingUtilities.invokeAndWait(\n+                () -> horizontalScrollBarTarget = horizontalScrollBar\n+                .getAccessibleContext().getAccessibleRelationSet()\n+                .get(AccessibleRelation.CONTROLLER_FOR).getTarget());\n+            SwingUtilities\n+            .invokeAndWait(() -> verticalScrollBarTarget = verticalScrollBar\n+            .getAccessibleContext().getAccessibleRelationSet()\n+            .get(AccessibleRelation.CONTROLLER_FOR).getTarget());\n+\n+            if (!(jScrollPaneTarget[0] instanceof javax.swing.JScrollBar)) {\n+                throw new RuntimeException(\"JScrollPane doesn't have \"\n+                    + \"JScrollBar as target for CONTROLLED_BY\");\n+            }\n+            if (!(jScrollPaneTarget[1] instanceof javax.swing.JScrollBar)) {\n+                throw new RuntimeException(\"JScrollPane doesn't have \"\n+                    + \"JScrollBar as target for CONTROLLED_BY\");\n+            }\n+            if (!(horizontalScrollBarTarget[0] instanceof JScrollPane)) {\n+                throw new RuntimeException(\"HorizontalScrollBar doesn't have \"\n+                    + \"JScrollPane as target for CONTROLLER_FOR\");\n+            }\n+            if (!(verticalScrollBarTarget[0] instanceof JScrollPane)) {\n+                throw new RuntimeException(\"VerticalScrollBar doesn't have \"\n+                    + \"JScrollPane as target for CONTROLLER_FOR\");\n+            }\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> jFrame.dispose());\n+        }\n+    }\n+\n+    public void propertyChange(PropertyChangeEvent e) {\n+        if (!(\"AccessibleActiveDescendant\".equals(e.getPropertyName()))) {\n+            throw new RuntimeException(\n+                \"Active Descendant of JScrollBar has not changed\");\n+        }\n+        if (!(\"AccessibleSelection\".equals(e.getPropertyName()))) {\n+            throw new RuntimeException(\n+                \"Accessible Selection of JScrollBar has not changed\");\n+        }\n+    }\n+\n+    public static void main(String[] args) throws Exception {\n+        doTest();\n+        System.out.println(\"Test Passed.\");\n+    }\n+}\n+\n","filename":"test\/jdk\/javax\/accessibility\/JScrollPaneAccessibleRelationsTest.java","additions":118,"deletions":0,"binary":false,"changes":118,"status":"added"}]}