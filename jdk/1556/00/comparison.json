{"files":[{"patch":"@@ -3666,16 +3666,10 @@\n-  for (LoopTreeIterator iter(_ltree_root); !iter.done(); iter.next()) {\n-    IdealLoopTree* lpt = iter.current();\n-    if (lpt->is_innermost()) {\n-      uint i = 1;\n-      for (; i < C->root()->req(); i++) {\n-        Node* in = C->root()->in(i);\n-        if (in != NULL &&\n-            in->Opcode() == Op_Halt &&\n-            in->in(0)->is_Proj() &&\n-            in->in(0)->in(0)->Opcode() == Op_NeverBranch &&\n-            in->in(0)->in(0)->in(0) == lpt->_head) {\n-          break;\n-        }\n-      }\n-      if (i == C->root()->req()) {\n-        return false;\n+  for (IdealLoopTree* l = _ltree_root->_child; l != NULL; l = l->_next) {\n+    uint i = 1;\n+    for (; i < C->root()->req(); i++) {\n+      Node* in = C->root()->in(i);\n+      if (in != NULL &&\n+          in->Opcode() == Op_Halt &&\n+          in->in(0)->is_Proj() &&\n+          in->in(0)->in(0)->Opcode() == Op_NeverBranch &&\n+          in->in(0)->in(0)->in(0) == l->_head) {\n+        break;\n@@ -3684,0 +3678,3 @@\n+    if (i == C->root()->req()) {\n+      return false;\n+    }\n@@ -3685,0 +3682,1 @@\n+\n","filename":"src\/hotspot\/share\/opto\/loopnode.cpp","additions":14,"deletions":16,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -0,0 +1,46 @@\n+\/*\n+ * Copyright (c) 2020, Red Hat, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test\n+ * @bug 8257574\n+ * @summary C2: \"failed: parsing found no loops but there are some\" assert failure\n+ *\n+ * @run main\/othervm -Xcomp -XX:CompileOnly=TestInfiniteLoopNotInnerMost::test TestInfiniteLoopNotInnerMost\n+ *\n+ *\/\n+public class TestInfiniteLoopNotInnerMost {\n+    public static void main(String[] args) {\n+        test(false);\n+    }\n+\n+    private static void test(boolean flag) {\n+        if (flag) {\n+            while (true) {\n+                for (int i = 1; i < 100; i *= 2) {\n+\n+                }\n+            }\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/TestInfiniteLoopNotInnerMost.java","additions":46,"deletions":0,"binary":false,"changes":46,"status":"added"}]}