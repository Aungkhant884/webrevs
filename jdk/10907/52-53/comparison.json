{"files":[{"patch":"@@ -3843,1 +3843,1 @@\n-      if (LockingMode == 2) {\n+      if (LockingMode == LIGHTWEIGHT) {\n@@ -3846,1 +3846,1 @@\n-      } else if (LockingMode == 1) {\n+      } else if (LockingMode == LEGACY) {\n@@ -3892,1 +3892,1 @@\n-    if (LockingMode != 2) {\n+    if (LockingMode != LIGHTWEIGHT) {\n@@ -3932,1 +3932,1 @@\n-    if (LockingMode == 1) {\n+    if (LockingMode == LEGACY) {\n@@ -3946,1 +3946,1 @@\n-      if (LockingMode == 2) {\n+      if (LockingMode == LIGHTWEIGHT) {\n@@ -3949,1 +3949,1 @@\n-      } else if (LockingMode == 1) {\n+      } else if (LockingMode == LEGACY) {\n@@ -3970,1 +3970,1 @@\n-    if (LockingMode == 2) {\n+    if (LockingMode == LIGHTWEIGHT) {\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64.ad","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -85,1 +85,1 @@\n-  if (LockingMode == 2) {\n+  if (LockingMode == LIGHTWEIGHT) {\n@@ -87,1 +87,1 @@\n-  } else if (LockingMode == 1) {\n+  } else if (LockingMode == LEGACY) {\n@@ -134,1 +134,1 @@\n-  if (LockingMode != 2) {\n+  if (LockingMode != LIGHTWEIGHT) {\n@@ -146,1 +146,1 @@\n-  if (LockingMode == 2) {\n+  if (LockingMode == LIGHTWEIGHT) {\n@@ -153,1 +153,1 @@\n-  } else if (LockingMode == 1) {\n+  } else if (LockingMode == LEGACY) {\n","filename":"src\/hotspot\/cpu\/aarch64\/c1_MacroAssembler_aarch64.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -761,1 +761,1 @@\n-    if (LockingMode == 2) {\n+    if (LockingMode == LIGHTWEIGHT) {\n@@ -765,1 +765,1 @@\n-    } else if (LockingMode == 1) {\n+    } else if (LockingMode == LEGACY) {\n@@ -819,1 +819,1 @@\n-    if (LockingMode == 2) {\n+    if (LockingMode == LIGHTWEIGHT) {\n@@ -864,1 +864,1 @@\n-    if (LockingMode != 2) {\n+    if (LockingMode != LIGHTWEIGHT) {\n@@ -876,1 +876,1 @@\n-    if (LockingMode == 2) {\n+    if (LockingMode == LIGHTWEIGHT) {\n@@ -897,1 +897,1 @@\n-    } else if (LockingMode == 1) {\n+    } else if (LockingMode == LEGACY) {\n","filename":"src\/hotspot\/cpu\/aarch64\/interp_masm_aarch64.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -6223,1 +6223,1 @@\n-  assert(LockingMode == 2, \"only used with new lightweight locking\");\n+  assert(LockingMode == LIGHTWEIGHT, \"only used with new lightweight locking\");\n@@ -6255,1 +6255,1 @@\n-  assert(LockingMode == 2, \"only used with new lightweight locking\");\n+  assert(LockingMode == LIGHTWEIGHT, \"only used with new lightweight locking\");\n","filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1782,1 +1782,1 @@\n-      if (LockingMode == 2) {\n+      if (LockingMode == LIGHTWEIGHT) {\n@@ -1785,1 +1785,1 @@\n-      } else if (LockingMode == 1) {\n+      } else if (LockingMode == LEGACY) {\n@@ -1925,1 +1925,1 @@\n-    if (LockingMode == 1) {\n+    if (LockingMode == LEGACY) {\n@@ -1941,1 +1941,1 @@\n-      if (LockingMode == 2) {\n+      if (LockingMode == LIGHTWEIGHT) {\n@@ -1945,1 +1945,1 @@\n-      } else if (LockingMode == 1) {\n+      } else if (LockingMode == LEGACY) {\n","filename":"src\/hotspot\/cpu\/aarch64\/sharedRuntime_aarch64.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -217,1 +217,1 @@\n-  if (LockingMode == 2) {\n+  if (LockingMode == LIGHTWEIGHT) {\n@@ -227,1 +227,1 @@\n-  } else if (LockingMode == 1) {\n+  } else if (LockingMode == LEGACY) {\n@@ -279,1 +279,1 @@\n-  if (LockingMode == 2) {\n+  if (LockingMode == LIGHTWEIGHT) {\n@@ -292,1 +292,1 @@\n-  } else if (LockingMode == 1) {\n+  } else if (LockingMode == LEGACY) {\n","filename":"src\/hotspot\/cpu\/arm\/c1_MacroAssembler_arm.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -95,1 +95,1 @@\n-  if (LockingMode == 2) {\n+  if (LockingMode == LIGHTWEIGHT) {\n@@ -105,1 +105,1 @@\n-  } else if (LockingMode == 1) {\n+  } else if (LockingMode == LEGACY) {\n@@ -147,1 +147,1 @@\n-  if (LockingMode == 2) {\n+  if (LockingMode == LIGHTWEIGHT) {\n@@ -158,1 +158,1 @@\n-  } else if (LockingMode == 1) {\n+  } else if (LockingMode == LEGACY) {\n","filename":"src\/hotspot\/cpu\/arm\/c2_MacroAssembler_arm.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -892,1 +892,1 @@\n-    if (LockingMode == 2) {\n+    if (LockingMode == LIGHTWEIGHT) {\n@@ -900,1 +900,1 @@\n-    } else if (LockingMode == 1) {\n+    } else if (LockingMode == LEGACY) {\n@@ -969,1 +969,1 @@\n-    if (LockingMode == 2) {\n+    if (LockingMode == LIGHTWEIGHT) {\n@@ -1011,1 +1011,1 @@\n-    if (LockingMode == 2) {\n+    if (LockingMode == LIGHTWEIGHT) {\n@@ -1029,1 +1029,1 @@\n-    } else if (LockingMode == 1) {\n+    } else if (LockingMode == LEGACY) {\n","filename":"src\/hotspot\/cpu\/arm\/interp_masm_arm.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -1767,1 +1767,1 @@\n-  assert(LockingMode == 2, \"only used with new lightweight locking\");\n+  assert(LockingMode == LIGHTWEIGHT, \"only used with new lightweight locking\");\n@@ -1825,1 +1825,1 @@\n-  assert(LockingMode == 2, \"only used with new lightweight locking\");\n+  assert(LockingMode == LIGHTWEIGHT, \"only used with new lightweight locking\");\n","filename":"src\/hotspot\/cpu\/arm\/macroAssembler_arm.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1157,1 +1157,1 @@\n-    if (LockingMode == 2) {\n+    if (LockingMode == LIGHTWEIGHT) {\n@@ -1162,1 +1162,1 @@\n-    } else if (LockingMode == 1) {\n+    } else if (LockingMode == LEGACY) {\n@@ -1242,1 +1242,1 @@\n-    if (LockingMode == 2) {\n+    if (LockingMode == LIGHTWEIGHT) {\n@@ -1246,1 +1246,1 @@\n-    } else if (LockingMode == 1) {\n+    } else if (LockingMode == LEGACY) {\n","filename":"src\/hotspot\/cpu\/arm\/sharedRuntime_arm.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -75,1 +75,1 @@\n-  if (LockingMode == 2) {\n+  if (LockingMode == LIGHTWEIGHT) {\n@@ -77,1 +77,1 @@\n-  } else if (LockingMode == 1) {\n+  } else if (LockingMode == LEGACY) {\n@@ -123,1 +123,1 @@\n-  if (LockingMode != 2) {\n+  if (LockingMode != LIGHTWEIGHT) {\n@@ -135,1 +135,1 @@\n-  if (LockingMode == 2) {\n+  if (LockingMode == LIGHTWEIGHT) {\n@@ -138,1 +138,1 @@\n-  } else if (LockingMode == 1) {\n+  } else if (LockingMode == LEGACY) {\n","filename":"src\/hotspot\/cpu\/riscv\/c1_MacroAssembler_riscv.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -812,1 +812,1 @@\n-    if (LockingMode == 2) {\n+    if (LockingMode == LIGHTWEIGHT) {\n@@ -816,1 +816,1 @@\n-    } else if (LockingMode == 1) {\n+    } else if (LockingMode == LEGACY) {\n@@ -850,1 +850,1 @@\n-    if (LockingMode == 2) {\n+    if (LockingMode == LIGHTWEIGHT) {\n@@ -895,1 +895,1 @@\n-    if (LockingMode != 2) {\n+    if (LockingMode != LIGHTWEIGHT) {\n@@ -907,1 +907,1 @@\n-    if (LockingMode == 2) {\n+    if (LockingMode == LIGHTWEIGHT) {\n@@ -924,1 +924,1 @@\n-    } else if (LockingMode == 1) {\n+    } else if (LockingMode == LEGACY) {\n","filename":"src\/hotspot\/cpu\/riscv\/interp_masm_riscv.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -4493,1 +4493,1 @@\n-  assert(LockingMode == 2, \"only used with new lightweight locking\");\n+  assert(LockingMode == LIGHTWEIGHT, \"only used with new lightweight locking\");\n@@ -4520,1 +4520,1 @@\n-  assert(LockingMode == 2, \"only used with new lightweight locking\");\n+  assert(LockingMode == LIGHTWEIGHT, \"only used with new lightweight locking\");\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2420,1 +2420,1 @@\n-      if (LockingMode == 2) {\n+      if (LockingMode == LIGHTWEIGHT) {\n@@ -2430,1 +2430,1 @@\n-      } else if (LockingMode == 1) {\n+      } else if (LockingMode == LEGACY) {\n@@ -2478,1 +2478,1 @@\n-    if (LockingMode != 2) {\n+    if (LockingMode != LIGHTWEIGHT) {\n@@ -2520,1 +2520,1 @@\n-    if (LockingMode == 1) {\n+    if (LockingMode == LEGACY) {\n@@ -2535,1 +2535,1 @@\n-      if (LockingMode == 2) {\n+      if (LockingMode == LIGHTWEIGHT) {\n@@ -2545,1 +2545,1 @@\n-      } else if (LockingMode == 1) {\n+      } else if (LockingMode == LEGACY) {\n@@ -2567,1 +2567,1 @@\n-    if (LockingMode == 2) {\n+    if (LockingMode == LIGHTWEIGHT) {\n","filename":"src\/hotspot\/cpu\/riscv\/riscv.ad","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -1674,1 +1674,1 @@\n-      if (LockingMode == 2) {\n+      if (LockingMode == LIGHTWEIGHT) {\n@@ -1677,1 +1677,1 @@\n-      } else if (LockingMode == 1) {\n+      } else if (LockingMode == LEGACY) {\n@@ -1798,1 +1798,1 @@\n-    if (LockingMode == 1) {\n+    if (LockingMode == LEGACY) {\n@@ -1814,1 +1814,1 @@\n-      if (LockingMode == 2) {\n+      if (LockingMode == LIGHTWEIGHT) {\n@@ -1817,1 +1817,1 @@\n-      } else if (LockingMode == 1) {\n+      } else if (LockingMode == LEGACY) {\n","filename":"src\/hotspot\/cpu\/riscv\/sharedRuntime_riscv.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -3511,1 +3511,1 @@\n-    Register tmp = LockingMode == 2 ? op->scratch_opr()->as_register() : noreg;\n+    Register tmp = LockingMode == LIGHTWEIGHT ? op->scratch_opr()->as_register() : noreg;\n","filename":"src\/hotspot\/cpu\/x86\/c1_LIRAssembler_x86.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -322,1 +322,1 @@\n-  LIR_Opr tmp = LockingMode == 2 ? new_register(T_ADDRESS) : LIR_OprFact::illegalOpr;\n+  LIR_Opr tmp = LockingMode == LIGHTWEIGHT ? new_register(T_ADDRESS) : LIR_OprFact::illegalOpr;\n","filename":"src\/hotspot\/cpu\/x86\/c1_LIRGenerator_x86.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -65,1 +65,1 @@\n-  if (LockingMode == 2) {\n+  if (LockingMode == LIGHTWEIGHT) {\n@@ -73,1 +73,1 @@\n-  } else  if (LockingMode == 1) {\n+  } else  if (LockingMode == LEGACY) {\n@@ -122,1 +122,1 @@\n-  if (LockingMode != 2) {\n+  if (LockingMode != LIGHTWEIGHT) {\n@@ -135,1 +135,1 @@\n-  if (LockingMode == 2) {\n+  if (LockingMode == LIGHTWEIGHT) {\n@@ -139,1 +139,1 @@\n-  } else if (LockingMode == 1) {\n+  } else if (LockingMode == LEGACY) {\n","filename":"src\/hotspot\/cpu\/x86\/c1_MacroAssembler_x86.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -605,1 +605,1 @@\n-    if (LockingMode == 2) {\n+    if (LockingMode == LIGHTWEIGHT) {\n@@ -608,1 +608,1 @@\n-    } else if (LockingMode == 1) {\n+    } else if (LockingMode == LEGACY) {\n@@ -769,1 +769,1 @@\n-  if (LockingMode == 1) {\n+  if (LockingMode == LEGACY) {\n@@ -777,1 +777,1 @@\n-    if (LockingMode == 2) {\n+    if (LockingMode == LIGHTWEIGHT) {\n@@ -916,1 +916,1 @@\n-    if (LockingMode == 2) {\n+    if (LockingMode == LIGHTWEIGHT) {\n@@ -920,1 +920,1 @@\n-    } else if (LockingMode == 1) {\n+    } else if (LockingMode == LEGACY) {\n","filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -1226,1 +1226,1 @@\n-    if (LockingMode == 2) {\n+    if (LockingMode == LIGHTWEIGHT) {\n@@ -1236,1 +1236,1 @@\n-    } else if (LockingMode == 1) {\n+    } else if (LockingMode == LEGACY) {\n@@ -1297,1 +1297,1 @@\n-    if (LockingMode == 2) {\n+    if (LockingMode == LIGHTWEIGHT) {\n@@ -1338,1 +1338,1 @@\n-    if (LockingMode != 2) {\n+    if (LockingMode != LIGHTWEIGHT) {\n@@ -1350,1 +1350,1 @@\n-    if (LockingMode == 2) {\n+    if (LockingMode == LIGHTWEIGHT) {\n@@ -1366,1 +1366,1 @@\n-    } else if (LockingMode == 1) {\n+    } else if (LockingMode == LEGACY) {\n","filename":"src\/hotspot\/cpu\/x86\/interp_masm_x86.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -1684,1 +1684,1 @@\n-      if (LockingMode == 2) {\n+      if (LockingMode == LIGHTWEIGHT) {\n@@ -1688,1 +1688,1 @@\n-      } else if (LockingMode == 1) {\n+      } else if (LockingMode == LEGACY) {\n@@ -1843,1 +1843,1 @@\n-    if (LockingMode == 1) {\n+    if (LockingMode == LEGACY) {\n@@ -1859,1 +1859,1 @@\n-      if (LockingMode == 2) {\n+      if (LockingMode == LIGHTWEIGHT) {\n@@ -1863,1 +1863,1 @@\n-      } else if (LockingMode == 1) {\n+      } else if (LockingMode == LEGACY) {\n","filename":"src\/hotspot\/cpu\/x86\/sharedRuntime_x86_32.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2153,1 +2153,1 @@\n-      if (LockingMode == 2) {\n+      if (LockingMode == LIGHTWEIGHT) {\n@@ -2157,1 +2157,1 @@\n-      } else if (LockingMode == 1) {\n+      } else if (LockingMode == LEGACY) {\n@@ -2303,1 +2303,1 @@\n-    if (LockingMode == 1) {\n+    if (LockingMode == LEGACY) {\n@@ -2319,1 +2319,1 @@\n-      if (LockingMode == 2) {\n+      if (LockingMode == LIGHTWEIGHT) {\n@@ -2323,1 +2323,1 @@\n-      } else if (LockingMode == 1) {\n+      } else if (LockingMode == LEGACY) {\n","filename":"src\/hotspot\/cpu\/x86\/sharedRuntime_x86_64.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -760,2 +760,2 @@\n-  assert(LockingMode == 2 || obj == lock->obj(), \"must match\");\n-  SharedRuntime::monitor_enter_helper(obj, LockingMode == 2 ? nullptr : lock->lock(), current);\n+  assert(LockingMode == LIGHTWEIGHT || obj == lock->obj(), \"must match\");\n+  SharedRuntime::monitor_enter_helper(obj, LockingMode == LIGHTWEIGHT ? nullptr : lock->lock(), current);\n","filename":"src\/hotspot\/share\/c1\/c1_Runtime1.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -738,1 +738,1 @@\n-  assert(LockingMode != 2, \"Should call monitorenter_obj() when using the new lightweight locking\");\n+  assert(LockingMode != LIGHTWEIGHT, \"Should call monitorenter_obj() when using the new lightweight locking\");\n@@ -762,1 +762,1 @@\n-  assert(LockingMode == 2, \"Should call monitorenter() when not using the new lightweight locking\");\n+  assert(LockingMode == LIGHTWEIGHT, \"Should call monitorenter() when not using the new lightweight locking\");\n","filename":"src\/hotspot\/share\/interpreter\/interpreterRuntime.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -175,1 +175,1 @@\n-    assert(LockingMode == 1, \"should only be called with traditional stack locking\");\n+    assert(LockingMode == LEGACY, \"should only be called with traditional stack locking\");\n@@ -184,1 +184,1 @@\n-    assert(LockingMode == 2, \"should only be called with new lightweight locking\");\n+    assert(LockingMode == LIGHTWEIGHT, \"should only be called with new lightweight locking\");\n@@ -202,2 +202,2 @@\n-    return LockingMode == 2 ? lockbits == monitor_value   \/\/ monitor?\n-                            : (lockbits & unlocked_value) == 0; \/\/ monitor | stack-locked?\n+    return LockingMode == LIGHTWEIGHT  ? lockbits == monitor_value   \/\/ monitor?\n+                                       : (lockbits & unlocked_value) == 0; \/\/ monitor | stack-locked?\n","filename":"src\/hotspot\/share\/oops\/markWord.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -131,1 +131,1 @@\n-  return LockingMode == 2 || !SafepointSynchronize::is_at_safepoint();\n+  return LockingMode == LIGHTWEIGHT || !SafepointSynchronize::is_at_safepoint();\n","filename":"src\/hotspot\/share\/oops\/oop.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2005,2 +2005,2 @@\n-  if (LockingMode == 2) {\n-    FLAG_SET_CMDLINE(LockingMode, 1);\n+  if (LockingMode == LIGHTWEIGHT) {\n+    FLAG_SET_CMDLINE(LockingMode, LEGACY);\n","filename":"src\/hotspot\/share\/runtime\/arguments.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1607,1 +1607,1 @@\n-          if (LockingMode == 1 && mark.has_locker() && fr.sp() > (intptr_t*)mark.locker()) {\n+          if (LockingMode == LEGACY && mark.has_locker() && fr.sp() > (intptr_t*)mark.locker()) {\n","filename":"src\/hotspot\/share\/runtime\/deoptimization.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1978,1 +1978,1 @@\n-  product(int, LockingMode, 1, EXPERIMENTAL,                                \\\n+  product(int, LockingMode, LEGACY, EXPERIMENTAL,                           \\\n","filename":"src\/hotspot\/share\/runtime\/globals.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -993,1 +993,1 @@\n-  assert(LockingMode != 2, \"should not be called with new lightweight locking\");\n+  assert(LockingMode != LIGHTWEIGHT, \"should not be called with new lightweight locking\");\n@@ -1388,1 +1388,1 @@\n-  if (LockingMode == 2) {\n+  if (LockingMode == LIGHTWEIGHT) {\n","filename":"src\/hotspot\/share\/runtime\/javaThread.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -63,1 +63,1 @@\n-  assert(LockingMode == 2 && !UseHeavyMonitors, \"never use lock-stack when fast-locking is disabled\");\n+  assert(LockingMode == LIGHTWEIGHT, \"never use lock-stack when fast-locking is disabled\");\n","filename":"src\/hotspot\/share\/runtime\/lockStack.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -337,1 +337,1 @@\n-  if (LockingMode != 2 && current->is_lock_owned((address)cur)) {\n+  if (LockingMode != LIGHTWEIGHT && current->is_lock_owned((address)cur)) {\n@@ -1138,1 +1138,1 @@\n-    if (LockingMode != 2 && current->is_lock_owned((address)cur)) {\n+    if (LockingMode != LIGHTWEIGHT && current->is_lock_owned((address)cur)) {\n@@ -1353,1 +1353,1 @@\n-    if (LockingMode != 2 && current->is_lock_owned((address)cur)) {\n+    if (LockingMode != LIGHTWEIGHT && current->is_lock_owned((address)cur)) {\n@@ -1392,1 +1392,1 @@\n-  if (LockingMode != 2 && current->is_lock_owned((address)cur)) {\n+  if (LockingMode != LIGHTWEIGHT && current->is_lock_owned((address)cur)) {\n","filename":"src\/hotspot\/share\/runtime\/objectMonitor.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n-  if (LockingMode == 2) {\n+  if (LockingMode == LIGHTWEIGHT) {\n","filename":"src\/hotspot\/share\/runtime\/objectMonitor.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -315,1 +315,1 @@\n-  if (LockingMode == 2) {\n+  if (LockingMode == LIGHTWEIGHT) {\n@@ -321,1 +321,1 @@\n-  } else if (LockingMode == 1) {\n+  } else if (LockingMode == LEGACY) {\n@@ -397,1 +397,1 @@\n-    if (LockingMode != 2) {\n+    if (LockingMode != LIGHTWEIGHT) {\n@@ -497,1 +497,1 @@\n-    if (LockingMode == 2) {\n+    if (LockingMode == LIGHTWEIGHT) {\n@@ -515,1 +515,1 @@\n-    } else if (LockingMode == 1) {\n+    } else if (LockingMode == LEGACY) {\n@@ -559,1 +559,1 @@\n-    if (LockingMode == 2) {\n+    if (LockingMode == LIGHTWEIGHT) {\n@@ -579,1 +579,1 @@\n-    } else if (LockingMode == 1) {\n+    } else if (LockingMode == LEGACY) {\n@@ -627,1 +627,1 @@\n-  if (LockingMode == 2 && monitor->is_owner_anonymous()) {\n+  if (LockingMode == LIGHTWEIGHT && monitor->is_owner_anonymous()) {\n@@ -724,1 +724,1 @@\n-  if (LockingMode == 2) {\n+  if (LockingMode == LIGHTWEIGHT) {\n@@ -729,1 +729,1 @@\n-  } else if (LockingMode == 1) {\n+  } else if (LockingMode == LEGACY) {\n@@ -746,1 +746,1 @@\n-  if (LockingMode == 2) {\n+  if (LockingMode == LIGHTWEIGHT) {\n@@ -751,1 +751,1 @@\n-  } else if (LockingMode == 1) {\n+  } else if (LockingMode == LEGACY) {\n@@ -781,1 +781,1 @@\n-  if (!mark.is_being_inflated() || LockingMode == 2) {\n+  if (!mark.is_being_inflated() || LockingMode == LIGHTWEIGHT) {\n@@ -898,1 +898,1 @@\n-  assert(LockingMode == 2, \"only call this with new lightweight locking enabled\");\n+  assert(LockingMode == LIGHTWEIGHT, \"only call this with new lightweight locking enabled\");\n@@ -956,1 +956,1 @@\n-    } else if (LockingMode == 2 && mark.is_fast_locked() && is_lock_owned(current, obj)) {\n+    } else if (LockingMode == LIGHTWEIGHT && mark.is_fast_locked() && is_lock_owned(current, obj)) {\n@@ -963,1 +963,1 @@\n-    } else if (LockingMode == 1 && mark.has_locker() && current->is_lock_owned((address)mark.locker())) {\n+    } else if (LockingMode == LEGACY && mark.has_locker() && current->is_lock_owned((address)mark.locker())) {\n@@ -1028,1 +1028,1 @@\n-  if (LockingMode == 1 && mark.has_locker()) {\n+  if (LockingMode == LEGACY && mark.has_locker()) {\n@@ -1033,1 +1033,1 @@\n-  if (LockingMode == 2 && mark.is_fast_locked()) {\n+  if (LockingMode == LIGHTWEIGHT && mark.is_fast_locked()) {\n@@ -1054,1 +1054,1 @@\n-  if (LockingMode == 1 && mark.has_locker()) {\n+  if (LockingMode == LEGACY && mark.has_locker()) {\n@@ -1060,1 +1060,1 @@\n-  if (LockingMode == 2 && mark.is_fast_locked()) {\n+  if (LockingMode == LIGHTWEIGHT && mark.is_fast_locked()) {\n@@ -1280,1 +1280,1 @@\n-      if (LockingMode == 2 && inf->is_owner_anonymous() && is_lock_owned(current, object)) {\n+      if (LockingMode == LIGHTWEIGHT && inf->is_owner_anonymous() && is_lock_owned(current, object)) {\n@@ -1287,1 +1287,1 @@\n-    if (LockingMode != 2) {\n+    if (LockingMode != LIGHTWEIGHT) {\n@@ -1312,1 +1312,1 @@\n-    if (LockingMode == 2 && mark.is_fast_locked()) {\n+    if (LockingMode == LIGHTWEIGHT && mark.is_fast_locked()) {\n@@ -1364,2 +1364,2 @@\n-    if (LockingMode == 1 && mark.has_locker()) {\n-      assert(LockingMode != 2, \"cannot happen with new lightweight locking\");\n+    if (LockingMode == LEGACY && mark.has_locker()) {\n+      assert(LockingMode != LIGHTWEIGHT, \"cannot happen with new lightweight locking\");\n","filename":"src\/hotspot\/share\/runtime\/synchronizer.cpp","additions":25,"deletions":25,"binary":false,"changes":50,"status":"modified"},{"patch":"@@ -536,1 +536,1 @@\n-  assert(LockingMode != 2, \"should not be called with new lightweight locking\");\n+  assert(LockingMode != LIGHTWEIGHT, \"should not be called with new lightweight locking\");\n","filename":"src\/hotspot\/share\/runtime\/thread.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1394,1 +1394,1 @@\n-  assert(LockingMode != 2, \"Not with new lightweight locking\");\n+  assert(LockingMode != LIGHTWEIGHT, \"Not with new lightweight locking\");\n@@ -1425,1 +1425,1 @@\n-  assert(LockingMode == 2, \"Only with new lightweight locking\");\n+  assert(LockingMode == LIGHTWEIGHT, \"Only with new lightweight locking\");\n@@ -1435,1 +1435,1 @@\n-  if (LockingMode == 2) {\n+  if (LockingMode == LIGHTWEIGHT) {\n","filename":"src\/hotspot\/share\/runtime\/threads.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1045,0 +1045,9 @@\n+enum LockingMode {\n+  \/\/ Use only heavy monitors for locking\n+  MONITOR     = 0,\n+  \/\/ Legacy stack-locking, with monitors as 2nd tier\n+  LEGACY      = 1,\n+  \/\/ New lightweight locing, with monitors as 2nd tier\n+  LIGHTWEIGHT = 2\n+};\n+\n","filename":"src\/hotspot\/share\/utilities\/globalDefinitions.hpp","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"}]}