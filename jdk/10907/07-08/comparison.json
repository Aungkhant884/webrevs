{"files":[{"patch":"@@ -3937,1 +3937,4 @@\n-      __ br(Assembler::NE, no_count);\n+      C2FixAnonOMOwnerStub* stub = new (Compile::current()->comp_arena()) C2FixAnonOMOwnerStub(tmp, disp_hdr);\n+      Compile::current()->output()->add_stub(stub);\n+      __ br(Assembler::NE, stub->entry());\n+      __ bind(stub->continuation());\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64.ad","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+#include \"runtime\/objectMonitor.hpp\"\n@@ -77,0 +78,20 @@\n+int C2FixAnonOMOwnerStub::max_size() const {\n+  return 0;\n+}\n+\n+void C2FixAnonOMOwnerStub::emit(C2_MacroAssembler& masm) {\n+  __ bind(entry());\n+  Register mon = monitor();\n+  Register t = tmp();\n+\n+  \/\/ Fix owner to be the current thread.\n+  __ str(rthread, Address(mon, OM_OFFSET_NO_MONITOR_VALUE_TAG(owner)));\n+\n+  \/\/ Pop owner object from lock-stack.\n+  __ ldr(t, Address(rthread, JavaThread::lock_stack_current_offset()));\n+  __ sub(t, t, oopSize);\n+  __ str(t, Address(rthread, JavaThread::lock_stack_current_offset()));\n+\n+  __ b(continuation());\n+}\n+\n","filename":"src\/hotspot\/cpu\/aarch64\/c2_CodeStubs_aarch64.cpp","additions":21,"deletions":0,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -101,0 +101,1 @@\n+  Register _tmp;\n@@ -102,1 +103,2 @@\n-  C2FixAnonOMOwnerStub(Register monitor) : C2CodeStub(), _monitor(monitor) {}\n+  C2FixAnonOMOwnerStub(Register monitor, Register tmp = noreg) : C2CodeStub(),\n+    _monitor(monitor), _tmp(tmp) {}\n@@ -104,0 +106,1 @@\n+  Register tmp() { return _tmp; }\n","filename":"src\/hotspot\/share\/opto\/c2_CodeStubs.hpp","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"}]}