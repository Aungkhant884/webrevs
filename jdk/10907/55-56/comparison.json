{"files":[{"patch":"@@ -6261,1 +6261,1 @@\n-    \/\/ its owning stack, even if the lock got inflated concurrently; removal of LockStack\n+    \/\/ its owning thread, even if the lock got inflated concurrently; removal of LockStack\n","filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-#include \"oops\/access.hpp\"\n@@ -111,1 +110,1 @@\n-    if (NativeAccess<>::oop_load(&_base[i]) == o) {\n+    if (_base[i] == o) {\n","filename":"src\/hotspot\/share\/runtime\/lockStack.inline.hpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -897,0 +897,2 @@\n+\/\/ Can be called from non JavaThreads (e.g., VMThread) for FastHashCode\n+\/\/ calculations as part of JVM\/TI tagging.\n","filename":"src\/hotspot\/share\/runtime\/synchronizer.cpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1132,0 +1132,2 @@\n+    \/\/ Since we are not stopping the world, the data we gather here\n+    \/\/ may change the moment after we return it.\n","filename":"src\/hotspot\/share\/services\/management.cpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1050,1 +1050,1 @@\n-  \/\/ New lightweight locing, with monitors as 2nd tier\n+  \/\/ New lightweight locking, with monitors as 2nd tier\n","filename":"src\/hotspot\/share\/utilities\/globalDefinitions.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}