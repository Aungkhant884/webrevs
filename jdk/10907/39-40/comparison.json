{"files":[{"patch":"@@ -3974,1 +3974,1 @@\n-      __ tst(tmp2, (uint64_t)(intptr_t) ANONYMOUS_OWNER);\n+      __ tst(tmp2, (uint64_t)ObjectMonitor::ANONYMOUS_OWNER);\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64.ad","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2567,1 +2567,1 @@\n-      __ andi(t0, tmp2, (int64_t)(intptr_t)ANONYMOUS_OWNER);\n+      __ andi(t0, tmp2, (int64_t)ObjectMonitor::ANONYMOUS_OWNER);\n","filename":"src\/hotspot\/cpu\/riscv\/riscv.ad","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -772,1 +772,1 @@\n-      testb(Address(tmpReg, OM_OFFSET_NO_MONITOR_VALUE_TAG(owner)), (int32_t) (intptr_t) ANONYMOUS_OWNER);\n+      testb(Address(tmpReg, OM_OFFSET_NO_MONITOR_VALUE_TAG(owner)), (int32_t) ObjectMonitor::ANONYMOUS_OWNER);\n","filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1407,1 +1407,1 @@\n-  assert(cur != ANONYMOUS_OWNER, \"no anon owner here\");\n+  assert(cur != anon_owner_ptr(), \"no anon owner here\");\n","filename":"src\/hotspot\/share\/runtime\/objectMonitor.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -156,1 +156,7 @@\n-  #define ANONYMOUS_OWNER reinterpret_cast<void*>(1)\n+public:\n+  \/\/ NOTE: Typed as uintptr_t so that we can pick it up in SA, via vmStructs.\n+  static const uintptr_t ANONYMOUS_OWNER = 1;\n+\n+private:\n+  static constexpr void* anon_owner_ptr() { return reinterpret_cast<void*>(ANONYMOUS_OWNER); }\n+\n@@ -189,0 +195,1 @@\n+\n@@ -275,1 +282,1 @@\n-    set_owner_from(nullptr, ANONYMOUS_OWNER);\n+    set_owner_from(nullptr, anon_owner_ptr());\n@@ -279,1 +286,1 @@\n-    return owner_raw() == ANONYMOUS_OWNER;\n+    return owner_raw() == anon_owner_ptr();\n@@ -283,1 +290,1 @@\n-    set_owner_from(ANONYMOUS_OWNER, owner);\n+    set_owner_from(anon_owner_ptr(), owner);\n","filename":"src\/hotspot\/share\/runtime\/objectMonitor.hpp","additions":11,"deletions":4,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2632,1 +2632,1 @@\n-  declare_constant(reinterpret_cast<uintptr_t>(ANONYMOUS_OWNER))        \\\n+  declare_constant(ObjectMonitor::ANONYMOUS_OWNER)                        \\\n","filename":"src\/hotspot\/share\/runtime\/vmStructs.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -60,1 +60,1 @@\n-    ANONYMOUS_OWNER = db.lookupLongConstant(\"ANONYMOUS_OWNER\").longValue();\n+    ANONYMOUS_OWNER = db.lookupLongConstant(\"ObjectMonitor::ANONYMOUS_OWNER\").longValue();\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/runtime\/ObjectMonitor.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}