{"files":[{"patch":"@@ -103,0 +103,4 @@\n+    \/\/ When a foreign thread inspects this thread's lock-stack, it may see\n+    \/\/ bad references here when a concurrent collector has not gotten\n+    \/\/ to processing the lock-stack, yet. Call StackWaterMark::start_processing()\n+    \/\/ to ensure that all references are valid.\n","filename":"src\/hotspot\/share\/runtime\/lockStack.inline.hpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2438,0 +2438,8 @@\n+  \/**********************************************\/                        \\\n+  \/* LockingMode enum (globalDefinitions.hpp) *\/                          \\\n+  \/**********************************************\/                        \\\n+                                                                          \\\n+  declare_constant(LM_MONITOR)                                            \\\n+  declare_constant(LM_LEGACY)                                             \\\n+  declare_constant(LM_LIGHTWEIGHT)                                        \\\n+                                                                          \\\n","filename":"src\/hotspot\/share\/runtime\/vmStructs.cpp","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -214,1 +214,1 @@\n-        assert(VM.getVM().getCommandLineFlag(\"LockingMode\").getInt() != 2 \/* LM_LIGHTWEIGHT *\/);\n+        assert(VM.getVM().getCommandLineFlag(\"LockingMode\").getInt() != LockingMode.getLightweight());\n@@ -232,1 +232,1 @@\n-        if (VM.getVM().getCommandLineFlag(\"LockingMode\").getInt() == 2 \/* LM_LIGHTWEIGHT *\/) {\n+        if (VM.getVM().getCommandLineFlag(\"LockingMode\").getInt() == LockingMode.getLightweight()) {\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/runtime\/Threads.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}