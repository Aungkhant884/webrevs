{"files":[{"patch":"@@ -103,1 +103,1 @@\n-    private static boolean runtimeInstaller = false;\n+    private boolean runtimeInstaller = false;\n@@ -107,2 +107,2 @@\n-    private static Map<String, CLIOptions> argIds = new HashMap<>();\n-    private static Map<String, CLIOptions> argShortIds = new HashMap<>();\n+    private static final Map<String, CLIOptions> argIds = new HashMap<>();\n+    private static final Map<String, CLIOptions> argShortIds = new HashMap<>();\n@@ -120,0 +120,3 @@\n+    private static final InheritableThreadLocal<Arguments> instance =\n+            new InheritableThreadLocal<Arguments>();\n+\n@@ -121,0 +124,2 @@\n+        instance.set(this);\n+\n@@ -395,4 +400,0 @@\n-        static void setContext(Arguments context) {\n-            argContext = context;\n-        }\n-\n@@ -400,5 +401,1 @@\n-            if (argContext != null) {\n-                return argContext;\n-            } else {\n-                throw new RuntimeException(\"Argument context is not set.\");\n-            }\n+            return instance.get();\n@@ -465,4 +462,0 @@\n-\n-            \/\/ init context of arguments\n-            CLIOptions.setContext(this);\n-\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/Arguments.java","additions":9,"deletions":16,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -78,2 +78,0 @@\n-            } else {\n-                System.out.println(msg);\n@@ -86,2 +84,0 @@\n-            } else {\n-                System.err.println(msg);\n@@ -95,2 +91,0 @@\n-            } else {\n-                System.err.println(msg);\n@@ -104,3 +98,0 @@\n-            } else if (verbose) {\n-                System.out.print(addTimestamp(\"\"));\n-                t.printStackTrace(System.out);\n@@ -114,2 +105,0 @@\n-            } else if (verbose) {\n-                System.out.println(msg);\n@@ -145,1 +134,6 @@\n-    private static Logger delegate = null;\n+    private static final InheritableThreadLocal<Logger> instance =\n+            new InheritableThreadLocal<Logger>() {\n+                @Override protected Logger initialValue() {\n+                    return new Logger();\n+                }\n+            };\n@@ -147,2 +141,2 @@\n-    public static void setLogger(Logger logger) {\n-        delegate = (logger != null) ? logger : new Logger();\n+    public static void setPrintWriter (PrintWriter out, PrintWriter err) {\n+        instance.get().setPrintWriter(out, err);\n@@ -152,3 +146,1 @@\n-        if (delegate != null) {\n-            delegate.flush();\n-        }\n+        instance.get().flush();\n@@ -158,3 +150,1 @@\n-        if (delegate != null) {\n-           delegate.info(msg);\n-        }\n+        instance.get().info(msg);\n@@ -164,3 +154,1 @@\n-        if (delegate != null) {\n-            delegate.fatalError(msg);\n-        }\n+        instance.get().fatalError(msg);\n@@ -170,3 +158,1 @@\n-        if (delegate != null) {\n-            delegate.error(msg);\n-        }\n+        instance.get().error(msg);\n@@ -176,3 +162,1 @@\n-        if (delegate != null) {\n-            delegate.setVerbose();\n-        }\n+        instance.get().setVerbose();\n@@ -182,1 +166,1 @@\n-        return (delegate != null) ? delegate.isVerbose() : false;\n+        return instance.get().isVerbose();\n@@ -186,3 +170,1 @@\n-        if (delegate != null) {\n-           delegate.verbose(msg);\n-        }\n+       instance.get().verbose(msg);\n@@ -192,3 +174,1 @@\n-        if (delegate != null) {\n-           delegate.verbose(t);\n-        }\n+       instance.get().verbose(t);\n@@ -198,3 +178,1 @@\n-        if (delegate != null) {\n-           delegate.verbose(strings, out, ret);\n-        }\n+       instance.get().verbose(strings, out, ret);\n@@ -202,1 +180,0 @@\n-\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/Log.java","additions":17,"deletions":40,"binary":false,"changes":57,"status":"modified"},{"patch":"@@ -49,2 +49,0 @@\n-        \/\/ Create logger with default system.out and system.err\n-        Log.setLogger(null);\n@@ -52,1 +50,3 @@\n-        int status = new jdk.jpackage.main.Main().execute(args);\n+        PrintWriter out = new PrintWriter(System.out);\n+        PrintWriter err = new PrintWriter(System.err);\n+        int status = new jdk.jpackage.main.Main().execute(out, err, args);\n@@ -65,4 +65,1 @@\n-        \/\/ Create logger with provided streams\n-        Log.Logger logger = new Log.Logger();\n-        logger.setPrintWriter(out, err);\n-        Log.setLogger(logger);\n+        Log.setPrintWriter(out, err);\n@@ -70,4 +67,0 @@\n-        return execute(args);\n-    }\n-\n-    private int execute(String... args) {\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/main\/Main.java","additions":4,"deletions":11,"binary":false,"changes":15,"status":"modified"}]}