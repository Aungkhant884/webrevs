{"files":[{"patch":"@@ -51,0 +51,20 @@\n+    static void suspendThread(Thread t) {\n+        try {\n+            JVMTIUtils.suspendThread(t);\n+        } catch (JVMTIUtils.JvmtiException e) {\n+            if (e.getCode() != JVMTIUtils.JVMTI_ERROR_THREAD_NOT_ALIVE) {\n+                throw e;\n+            }\n+        }\n+    }\n+\n+    static void resumeThread(Thread t) {\n+        try {\n+            JVMTIUtils.resumeThread(t);\n+        } catch (JVMTIUtils.JvmtiException e) {\n+            if (e.getCode() != JVMTIUtils.JVMTI_ERROR_THREAD_NOT_ALIVE) {\n+                throw e;\n+            }\n+        }\n+    }\n+\n@@ -96,1 +116,1 @@\n-                    JVMTIUtils.suspendThread(workingThreads[i]);\n+                    suspendThread(workingThreads[i]);\n@@ -101,1 +121,1 @@\n-                    JVMTIUtils.resumeThread(workingThreads[i]);\n+                    resumeThread(workingThreads[i]);\n","filename":"test\/hotspot\/jtreg\/runtime\/handshake\/HandshakeDirectTest.java","additions":22,"deletions":2,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -41,0 +41,22 @@\n+    static void suspendThread(Thread t) {\n+        try {\n+            JVMTIUtils.suspendThread(t);\n+        } catch (JVMTIUtils.JvmtiException e) {\n+            if (e.getCode() != JVMTIUtils.JVMTI_ERROR_THREAD_SUSPENDED\n+                && e.getCode() != JVMTIUtils.JVMTI_ERROR_THREAD_NOT_ALIVE) {\n+                throw e;\n+            }\n+        }\n+    }\n+\n+    static void resumeThread(Thread t) {\n+        try {\n+            JVMTIUtils.resumeThread(t);\n+        } catch (JVMTIUtils.JvmtiException e) {\n+            if (e.getCode() != JVMTIUtils.JVMTI_ERROR_THREAD_NOT_SUSPENDED\n+                && e.getCode() != JVMTIUtils.JVMTI_ERROR_THREAD_NOT_ALIVE) {\n+                throw e;\n+            }\n+        }\n+    }\n+\n@@ -48,2 +70,2 @@\n-                    JVMTIUtils.suspendThread(_suspend_threads[i]);\n-                    JVMTIUtils.resumeThread(_suspend_threads[i]);\n+                    suspendThread(_suspend_threads[i]);\n+                    resumeThread(_suspend_threads[i]);\n@@ -56,0 +78,1 @@\n+\n@@ -79,1 +102,1 @@\n-            JVMTIUtils.suspendThread(thr);\n+            suspendThread(thr);\n@@ -82,1 +105,1 @@\n-            JVMTIUtils.resumeThread(thr);\n+            resumeThread(thr);\n@@ -93,1 +116,1 @@\n-                JVMTIUtils.resumeThread(thr);\n+                resumeThread(thr);\n","filename":"test\/hotspot\/jtreg\/runtime\/handshake\/HandshakeSuspendExitTest.java","additions":28,"deletions":5,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -28,0 +28,25 @@\n+    public static int JVMTI_ERROR_NONE = 0;\n+\n+    public static int JVMTI_ERROR_THREAD_NOT_SUSPENDED = 13;\n+    public static int JVMTI_ERROR_THREAD_SUSPENDED = 14;\n+    public static int JVMTI_ERROR_THREAD_NOT_ALIVE = 15;\n+\n+\n+    public static class JvmtiException extends RuntimeException {\n+\n+        private int code;\n+\n+        public JvmtiException(int code) {\n+            this.code = code;\n+        }\n+\n+        public int getCode() {\n+            return code;\n+        }\n+\n+        @Override\n+        public String getMessage(){\n+            return \"JVMTI ERROR: \" + code;\n+        }\n+    }\n+\n@@ -43,2 +68,15 @@\n-    public static native void suspendThread(Thread t);\n-    public static native void resumeThread(Thread t);\n+    private static native int suspendThread0(Thread t);\n+    private static native int resumeThread0(Thread t);\n+\n+    public static void suspendThread(Thread t) {\n+        int err = suspendThread0(t);\n+        if (err != JVMTI_ERROR_NONE) {\n+            throw new JvmtiException(err);\n+        }\n+    }\n+    public static void resumeThread(Thread t) {\n+        int err = resumeThread0(t);\n+        if (err != JVMTI_ERROR_NONE) {\n+            throw new JvmtiException(err);\n+        }\n+    }\n","filename":"test\/hotspot\/jtreg\/testlibrary\/jvmti\/JVMTIUtils.java","additions":40,"deletions":2,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -62,10 +62,3 @@\n-JNIEXPORT void JNICALL\n-Java_jvmti_JVMTIUtils_suspendThread(JNIEnv *jni, jclass cls, jthread thread) {\n-  jvmtiError err =  jvmti->SuspendThread(thread);\n-  if (err == JVMTI_ERROR_THREAD_NOT_ALIVE) {\n-    return;\n-  }\n-  if (err == JVMTI_ERROR_THREAD_SUSPENDED) {\n-    return;\n-  }\n-  check_jvmti_status(jni, err, \"Error during SuspendThread\");\n+JNIEXPORT jint JNICALL\n+Java_jvmti_JVMTIUtils_suspendThread0(JNIEnv *jni, jclass cls, jthread thread) {\n+  return jvmti->SuspendThread(thread);\n@@ -74,10 +67,3 @@\n-JNIEXPORT void JNICALL\n-Java_jvmti_JVMTIUtils_resumeThread(JNIEnv *jni, jclass cls, jthread thread) {\n-  jvmtiError err =  jvmti->ResumeThread(thread);\n-  if (err == JVMTI_ERROR_THREAD_NOT_ALIVE) {\n-    return;\n-  }\n-  if (err == JVMTI_ERROR_THREAD_NOT_SUSPENDED) {\n-    return;\n-  }\n-  check_jvmti_status(jni, err, \"Error during ResumeThread\");\n+JNIEXPORT jint JNICALL\n+Java_jvmti_JVMTIUtils_resumeThread0(JNIEnv *jni, jclass cls, jthread thread) {\n+  return jvmti->ResumeThread(thread);\n","filename":"test\/hotspot\/jtreg\/testlibrary\/jvmti\/libJvmtiUtils.cpp","additions":6,"deletions":20,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -136,2 +136,0 @@\n-    static final int MAX_CASE = 1;\n-\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ThreadReference\/interrupt\/interrupt001.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"}]}