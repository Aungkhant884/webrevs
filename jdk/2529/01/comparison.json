{"files":[{"patch":"@@ -127,1 +127,4 @@\n-    if (trip_count > 0 && (julong)trip_count < (julong)max_juint) {\n+    \/\/ The loop body is always executed at least once even if init >= limit (for stride_con > 0) or\n+    \/\/ init <= limit (for stride_con < 0).\n+    trip_count = MAX2(trip_count, (jlong)1);\n+    if (trip_count < (jlong)max_juint) {\n","filename":"src\/hotspot\/share\/opto\/loopTransform.cpp","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -0,0 +1,64 @@\n+\/*\n+ * Copyright (c) 2021, Red Hat, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test\n+ * @bug 8261308\n+ * @summary C2: assert(inner->is_valid_counted_loop(T_INT) && inner->is_strip_mined()) failed: OuterStripMinedLoop should have been removed\n+ *\n+ * @run main\/othervm -Xcomp -XX:CompileOnly=TestCountedLoopZeroIter TestCountedLoopZeroIter\n+ *\n+ *\/\n+\n+\n+public class TestCountedLoopZeroIter {\n+  static int N = 400;\n+  static boolean b;\n+  static long lArrFld[] = new long[N];\n+  static int iArrFld[] = new int[N];\n+\n+  static void test() {\n+    int i19 = 9, i21 = 8;\n+    long l1;\n+    do\n+      if (!b) {\n+        iArrFld[1] \/= l1 = 1;\n+        do {\n+          int i22 = 1;\n+          do {\n+            iArrFld[0] = (int)l1;\n+            iArrFld[i22 - 1] = i21;\n+          } while (++i22 < 1);\n+          lArrFld[1] = i21;\n+        } while (++l1 < 145);\n+      }\n+    while (++i19 < 173);\n+    System.out.println();\n+  }\n+\n+  public static void main(String[] strArr) {\n+      for (int i = 0; i < 10; i++) {\n+        test();\n+     }\n+  }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/TestCountedLoopZeroIter.java","additions":64,"deletions":0,"binary":false,"changes":64,"status":"added"}]}