{"files":[{"patch":"@@ -902,1 +902,1 @@\n-   *   goto copy8;\n+   *   goto copy_big;\n@@ -905,0 +905,3 @@\n+   * copy_big:\n+   * if the amount to copy is more than (or equal to) 32 bytes goto copy32\n+   *  else goto copy8\n@@ -965,1 +968,1 @@\n-    const Register src = x30, dst = x31, cnt = x15, tmp3 = x16, tmp4 = x17;\n+    const Register src = x30, dst = x31, cnt = x15, tmp3 = x16, tmp4 = x17, tmp5 = x14, tmp6 = x13;\n@@ -968,1 +971,1 @@\n-    Label copy8, copy_small, done;\n+    Label copy_big, copy32, copy8, copy_small, done;\n@@ -1003,0 +1006,2 @@\n+      __ addi(tmp, cnt, -32);\n+      __ bgez(tmp, copy32);\n@@ -1006,8 +1011,24 @@\n-    }\n-\n-    __ mv(tmp, 16);\n-    __ blt(cnt, tmp, copy_small);\n-\n-    __ xorr(tmp, src, dst);\n-    __ andi(tmp, tmp, 0b111);\n-    __ bnez(tmp, copy_small);\n+    } else {\n+      __ mv(tmp, 16);\n+      __ blt(cnt, tmp, copy_small);\n+\n+      __ xorr(tmp, src, dst);\n+      __ andi(tmp, tmp, 0b111);\n+      __ bnez(tmp, copy_small);\n+\n+      __ bind(same_aligned);\n+      __ andi(tmp, src, 0b111);\n+      __ beqz(tmp, copy_big);\n+      if (is_backwards) {\n+        __ addi(src, src, step);\n+        __ addi(dst, dst, step);\n+      }\n+      (_masm->*ld_arr)(tmp3, Address(src), t0);\n+      (_masm->*st_arr)(tmp3, Address(dst), t0);\n+      if (!is_backwards) {\n+        __ addi(src, src, step);\n+        __ addi(dst, dst, step);\n+      }\n+      __ addi(cnt, cnt, -granularity);\n+      __ beqz(cnt, done);\n+      __ j(same_aligned);\n@@ -1015,3 +1036,5 @@\n-    __ bind(same_aligned);\n-    __ andi(tmp, src, 0b111);\n-    __ beqz(tmp, copy8);\n+      __ bind(copy_big);\n+      __ mv(tmp, 32);\n+      __ blt(cnt, tmp, copy8);\n+    }\n+    __ bind(copy32);\n@@ -1019,2 +1042,2 @@\n-      __ addi(src, src, step);\n-      __ addi(dst, dst, step);\n+      __ addi(src, src, -wordSize*4);\n+      __ addi(dst, dst, -wordSize*4);\n@@ -1022,2 +1045,10 @@\n-    (_masm->*ld_arr)(tmp3, Address(src), t0);\n-    (_masm->*st_arr)(tmp3, Address(dst), t0);\n+    \/\/ we first load 32 bytes, then write it, so the direction here doesn't matter\n+    __ ld(tmp3, Address(src));\n+    __ ld(tmp4, Address(src, 8));\n+    __ ld(tmp5, Address(src, 16));\n+    __ ld(tmp6, Address(src, 24));\n+    __ sd(tmp3, Address(dst));\n+    __ sd(tmp4, Address(dst, 8));\n+    __ sd(tmp5, Address(dst, 16));\n+    __ sd(tmp6, Address(dst, 24));\n+\n@@ -1025,2 +1056,2 @@\n-      __ addi(src, src, step);\n-      __ addi(dst, dst, step);\n+      __ addi(src, src, wordSize*4);\n+      __ addi(dst, dst, wordSize*4);\n@@ -1028,3 +1059,8 @@\n-    __ addi(cnt, cnt, -granularity);\n-    __ beqz(cnt, done);\n-    __ j(same_aligned);\n+    __ addi(tmp4, cnt, -(32+wordSize*4));\n+    __ addi(cnt, cnt, -wordSize*4);\n+    __ bgez(tmp4, copy32); \/\/ cnt >= 32, do next loop\n+\n+    __ beqz(cnt, done); \/\/ if that's all - done\n+\n+    __ addi(tmp4, cnt, -8); \/\/ if not - copy the reminder\n+    __ bltz(tmp4, copy_small); \/\/ cnt < 8, go to copy_small, else fall throught to copy8\n@@ -1043,0 +1079,1 @@\n+    __ addi(tmp4, cnt, -(8+wordSize));\n@@ -1044,1 +1081,0 @@\n-    __ addi(tmp4, cnt, -8);\n@@ -1047,1 +1083,1 @@\n-    __ beqz(cnt, done);\n+    __ beqz(cnt, done); \/\/ if that's all - done\n","filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp","additions":61,"deletions":25,"binary":false,"changes":86,"status":"modified"}]}