{"files":[{"patch":"@@ -146,2 +146,2 @@\n-  \/\/ os::attempt_reserve_memory_at() to avoid over mapping something\n-  \/\/ important.  If available space is not detected, return NULL.\n+  \/\/ os::attempt_reserve_memory_at() to avoid mapping over something\n+  \/\/ important.  If the reservation fails, return NULL.\n@@ -150,1 +150,1 @@\n-           \"Requested address \" PTR_FORMAT \"must be aligned to \" SIZE_FORMAT,\n+           \"Requested address \" PTR_FORMAT \" must be aligned to \" SIZE_FORMAT,\n@@ -159,2 +159,1 @@\n-    \/\/ no requested address. If a requested address is used it must be\n-    \/\/ aligned.\n+    \/\/ no requested address.\n@@ -183,2 +182,2 @@\n-    assert((uintptr_t)base % alignment == 0,\n-           \"Large pages returned a non-aligned address, base: \" PTR_FORMAT\n+    assert(is_aligned(base, alignment),\n+           \"reserve_memory_special() returned an unaligned address, base: \" PTR_FORMAT\n@@ -188,2 +187,1 @@\n-    \/\/ failed; fall back to reserve regular memory.\n-    if (large_pages_requested()) {\n+   if (large_pages_requested()) {\n@@ -244,0 +242,1 @@\n+    \/\/ Failed to reserve explicit large pages, fall back to normal reservation.\n","filename":"src\/hotspot\/share\/memory\/virtualspace.cpp","additions":8,"deletions":9,"binary":false,"changes":17,"status":"modified"}]}