{"files":[{"patch":"@@ -2317,1 +2317,3 @@\n-void G1CollectedHeap::collection_set_par_iterate_all(HeapRegionClosure* cl, HeapRegionClaimer* hr_claimer, uint worker_id) {\n+void G1CollectedHeap::collection_set_par_iterate_all(HeapRegionClosure* cl,\n+                                                     HeapRegionClaimer* hr_claimer,\n+                                                     uint worker_id) {\n@@ -2321,1 +2323,3 @@\n-void G1CollectedHeap::collection_set_iterate_increment_from(HeapRegionClosure *cl, HeapRegionClaimer* hr_claimer, uint worker_id) {\n+void G1CollectedHeap::collection_set_iterate_increment_from(HeapRegionClosure *cl,\n+                                                            HeapRegionClaimer* hr_claimer,\n+                                                            uint worker_id) {\n@@ -2886,1 +2890,1 @@\n-  G1YoungCollector collector(gc_cause(), target_pause_time_ms);\n+  G1YoungCollector collector(gc_cause(), target_pause_time_ms, &_evac_failure_regions);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.cpp","additions":7,"deletions":3,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -1053,1 +1053,0 @@\n-  inline void reset_evacuation_failed_data();\n@@ -1056,9 +1055,0 @@\n-  \/\/ True iff the given region encountered an evacuation failure in the most-recent\n-  \/\/ collection.\n-  inline bool evacuation_failed(uint region_idx) const;\n-\n-  inline uint num_regions_failed_evacuation() const;\n-  \/\/ Notify that the garbage collection encountered an evacuation failure in the\n-  \/\/ given region. Returns whether this has been the first occurrence of an evacuation\n-  \/\/ failure in that region.\n-  inline bool notify_region_failed_evacuation(uint const region_idx);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.hpp","additions":0,"deletions":10,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n-#include \"gc\/g1\/g1EvacFailureRegions.inline.hpp\"\n+#include \"gc\/g1\/g1EvacFailureRegions.hpp\"\n@@ -199,5 +199,0 @@\n-void G1CollectedHeap::reset_evacuation_failed_data() {\n-  Atomic::store(&_num_regions_failed_evacuation, 0u);\n-  _regions_failed_evacuation.clear();\n-}\n-\n@@ -205,13 +200,1 @@\n-  return num_regions_failed_evacuation() > 0;\n-}\n-\n-bool G1CollectedHeap::evacuation_failed(uint region_idx) const {\n-  return _evac_failure_regions.contains(region_idx);\n-}\n-\n-uint G1CollectedHeap::num_regions_failed_evacuation() const {\n-  return _evac_failure_regions.num_regions_failed_evacuation();\n-}\n-\n-bool G1CollectedHeap::notify_region_failed_evacuation(uint const region_idx) {\n-  return _evac_failure_regions.record(region_idx);\n+  return _evac_failure_regions.num_regions_failed_evacuation() > 0;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.inline.hpp","additions":2,"deletions":19,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -207,0 +207,1 @@\n+  G1EvacFailureRegions* _evac_failure_regions;\n@@ -209,1 +210,4 @@\n-  RemoveSelfForwardPtrHRClosure(G1RedirtyCardsQueueSet* rdcqs, uint worker_id, uint volatile* num_failed_regions) :\n+  RemoveSelfForwardPtrHRClosure(G1RedirtyCardsQueueSet* rdcqs,\n+                                uint worker_id,\n+                                uint volatile* num_failed_regions,\n+                                G1EvacFailureRegions* evac_failure_regions) :\n@@ -214,1 +218,2 @@\n-    _num_failed_regions(num_failed_regions) {\n+    _num_failed_regions(num_failed_regions),\n+    _evac_failure_regions(evac_failure_regions) {\n@@ -238,1 +243,1 @@\n-    if (_g1h->evacuation_failed(hr->hrm_index())) {\n+    if (_evac_failure_regions->contains(hr->hrm_index())) {\n@@ -273,1 +278,1 @@\n-  RemoveSelfForwardPtrHRClosure rsfp_cl(_rdcqs, worker_id, &_num_failed_regions);\n+  RemoveSelfForwardPtrHRClosure rsfp_cl(_rdcqs, worker_id, &_num_failed_regions, _evac_failure_regions);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1EvacFailure.cpp","additions":9,"deletions":4,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -63,0 +63,3 @@\n+  \/\/ Record that the garbage collection encountered an evacuation failure in the\n+  \/\/ given region. Returns whether this has been the first occurrence of an evacuation\n+  \/\/ failure in that region.\n","filename":"src\/hotspot\/share\/gc\/g1\/g1EvacFailureRegions.hpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+#include \"gc\/g1\/g1EvacFailureRegions.inline.hpp\"\n@@ -61,1 +62,2 @@\n-                                           size_t optional_cset_length)\n+                                           size_t optional_cset_length,\n+                                           G1EvacFailureRegions* evac_failure_regions)\n@@ -87,1 +89,2 @@\n-    _evacuation_failed_info()\n+    _evacuation_failed_info(),\n+    _evac_failure_regions(evac_failure_regions)\n@@ -544,1 +547,2 @@\n-                               _young_cset_length, _optional_cset_length);\n+                               _young_cset_length, _optional_cset_length,\n+                               _evac_failure_regions);\n@@ -598,1 +602,1 @@\n-    if (_g1h->notify_region_failed_evacuation(r->hrm_index())) {\n+    if (_evac_failure_regions->record(r->hrm_index())) {\n@@ -652,1 +656,2 @@\n-                                                 size_t optional_cset_length) :\n+                                                 size_t optional_cset_length,\n+                                                 G1EvacFailureRegions* evac_failure_regions) :\n@@ -661,1 +666,2 @@\n-    _flushed(false) {\n+    _flushed(false),\n+    _evac_failure_regions(evac_failure_regions) {\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ParScanThreadState.cpp","additions":12,"deletions":6,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -105,0 +105,1 @@\n+  G1EvacFailureRegions* _evac_failure_regions;\n@@ -115,1 +116,2 @@\n-                       size_t optional_cset_length);\n+                       size_t optional_cset_length,\n+                       G1EvacFailureRegions* evac_failure_regions);\n@@ -245,0 +247,1 @@\n+  G1EvacFailureRegions* _evac_failure_regions;\n@@ -252,1 +255,2 @@\n-                          size_t optional_cset_length);\n+                          size_t optional_cset_length,\n+                          G1EvacFailureRegions* evac_failure_regions);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ParScanThreadState.hpp","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -501,1 +501,1 @@\n-  _g1h->reset_evacuation_failed_data();\n+  _evac_failure_regions->reset();\n@@ -958,1 +958,1 @@\n-    G1PostEvacuateCollectionSetCleanupTask1 cl(per_thread_states);\n+    G1PostEvacuateCollectionSetCleanupTask1 cl(per_thread_states, _evac_failure_regions);\n@@ -968,1 +968,1 @@\n-    G1PostEvacuateCollectionSetCleanupTask2 cl(per_thread_states, evacuation_info);\n+    G1PostEvacuateCollectionSetCleanupTask2 cl(per_thread_states, evacuation_info, _evac_failure_regions);\n@@ -1027,1 +1027,3 @@\n-G1YoungCollector::G1YoungCollector(GCCause::Cause gc_cause, double target_pause_time_ms) :\n+G1YoungCollector::G1YoungCollector(GCCause::Cause gc_cause,\n+                                   double target_pause_time_ms,\n+                                   G1EvacFailureRegions* evac_failure_regions) :\n@@ -1031,1 +1033,2 @@\n-  _concurrent_operation_is_full_mark(false)\n+  _concurrent_operation_is_full_mark(false),\n+  _evac_failure_regions(evac_failure_regions)\n@@ -1083,1 +1086,2 @@\n-                                              collection_set()->optional_region_length());\n+                                              collection_set()->optional_region_length(),\n+                                              _evac_failure_regions);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1YoungCollector.cpp","additions":10,"deletions":6,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -40,0 +40,1 @@\n+class G1EvacFailureRegions;\n@@ -126,0 +127,1 @@\n+  G1EvacFailureRegions* _evac_failure_regions;\n@@ -136,1 +138,3 @@\n-  G1YoungCollector(GCCause::Cause gc_cause, double target_pause_time_ms);\n+  G1YoungCollector(GCCause::Cause gc_cause,\n+                   double target_pause_time_ms,\n+                   G1EvacFailureRegions* evac_failure_regions);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1YoungCollector.hpp","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -108,1 +108,2 @@\n-  _task(rdcqs, evac_failure_regions) { }\n+  _task(rdcqs, evac_failure_regions),\n+  _evac_failure_regions(evac_failure_regions) { }\n@@ -112,1 +113,1 @@\n-  assert(_task.num_failed_regions() == g1h->num_regions_failed_evacuation(),\n+  assert(_task.num_failed_regions() == _evac_failure_regions->num_regions_failed_evacuation(),\n@@ -114,1 +115,1 @@\n-         _task.num_failed_regions(), g1h->num_regions_failed_evacuation());\n+         _task.num_failed_regions(), _evac_failure_regions->num_regions_failed_evacuation());\n@@ -119,1 +120,1 @@\n-  return G1CollectedHeap::heap()->num_regions_failed_evacuation();\n+  return _evac_failure_regions->num_regions_failed_evacuation();\n@@ -298,0 +299,1 @@\n+  G1EvacFailureRegions* _evac_failure_regions;\n@@ -306,1 +308,1 @@\n-    return _g1h->is_in_cset(hr) && !_g1h->evacuation_failed(hr->hrm_index());\n+    return _g1h->is_in_cset(hr) && !_evac_failure_regions->contains(hr->hrm_index());\n@@ -310,2 +312,6 @@\n-  RedirtyLoggedCardTableEntryClosure(G1CollectedHeap* g1h) : G1CardTableEntryClosure(),\n-    _num_dirtied(0), _g1h(g1h), _g1_ct(g1h->card_table()) { }\n+  RedirtyLoggedCardTableEntryClosure(G1CollectedHeap* g1h, G1EvacFailureRegions* evac_failure_regions) :\n+    G1CardTableEntryClosure(),\n+    _num_dirtied(0),\n+    _g1h(g1h),\n+    _g1_ct(g1h->card_table()),\n+    _evac_failure_regions(evac_failure_regions) { }\n@@ -326,1 +332,3 @@\n-G1PostEvacuateCollectionSetCleanupTask2::RedirtyLoggedCardsTask::RedirtyLoggedCardsTask(G1RedirtyCardsQueueSet* rdcqs) :\n+G1PostEvacuateCollectionSetCleanupTask2::\n+      RedirtyLoggedCardsTask::RedirtyLoggedCardsTask(G1RedirtyCardsQueueSet* rdcqs,\n+                                                     G1EvacFailureRegions* evac_failure_regions) :\n@@ -329,1 +337,2 @@\n-  _nodes(rdcqs->all_completed_buffers()) { }\n+  _nodes(rdcqs->all_completed_buffers()),\n+  _evac_failure_regions(evac_failure_regions) { }\n@@ -343,1 +352,1 @@\n-  RedirtyLoggedCardTableEntryClosure cl(G1CollectedHeap::heap());\n+  RedirtyLoggedCardTableEntryClosure cl(G1CollectedHeap::heap(), _evac_failure_regions);\n@@ -469,0 +478,1 @@\n+  G1EvacFailureRegions* _evac_failure_regions;\n@@ -511,1 +521,2 @@\n-                  FreeCSetStats* stats) :\n+                  FreeCSetStats* stats,\n+                  G1EvacFailureRegions* evac_failure_regions) :\n@@ -518,1 +529,2 @@\n-      _stats(stats) { }\n+      _stats(stats),\n+      _evac_failure_regions(evac_failure_regions) { }\n@@ -532,1 +544,1 @@\n-    if (_g1h->evacuation_failed(r->hrm_index())) {\n+    if (_evac_failure_regions->contains(r->hrm_index())) {\n@@ -566,2 +578,4 @@\n-G1PostEvacuateCollectionSetCleanupTask2::FreeCollectionSetTask::FreeCollectionSetTask(G1EvacuationInfo* evacuation_info,\n-                                                                                      const size_t* surviving_young_words) :\n+G1PostEvacuateCollectionSetCleanupTask2::\n+      FreeCollectionSetTask::FreeCollectionSetTask(G1EvacuationInfo* evacuation_info,\n+                                                   const size_t* surviving_young_words,\n+                                                   G1EvacFailureRegions* evac_failure_regions) :\n@@ -574,1 +588,2 @@\n-    _active_workers(0) {\n+    _active_workers(0),\n+    _evac_failure_regions(evac_failure_regions) {\n@@ -603,1 +618,1 @@\n-  FreeCSetClosure cl(_surviving_young_words, worker_id, worker_stats(worker_id));\n+  FreeCSetClosure cl(_surviving_young_words, worker_id, worker_stats(worker_id), _evac_failure_regions);\n@@ -610,1 +625,2 @@\n-                                                                                 G1EvacuationInfo* evacuation_info) :\n+                                                                                 G1EvacuationInfo* evacuation_info,\n+                                                                                 G1EvacFailureRegions* evac_failure_regions) :\n@@ -625,2 +641,4 @@\n-  add_parallel_task(new RedirtyLoggedCardsTask(per_thread_states->rdcqs()));\n-  add_parallel_task(new FreeCollectionSetTask(evacuation_info, per_thread_states->surviving_young_words()));\n+  add_parallel_task(new RedirtyLoggedCardsTask(per_thread_states->rdcqs(), evac_failure_regions));\n+  add_parallel_task(new FreeCollectionSetTask(evacuation_info,\n+                                                   per_thread_states->surviving_young_words(),\n+                                                   evac_failure_regions));\n","filename":"src\/hotspot\/share\/gc\/g1\/g1YoungGCPostEvacuateTasks.cpp","additions":38,"deletions":20,"binary":false,"changes":58,"status":"modified"},{"patch":"@@ -86,0 +86,1 @@\n+  G1EvacFailureRegions* _evac_failure_regions;\n@@ -119,1 +120,2 @@\n-                                          G1EvacuationInfo* evacuation_info);\n+                                          G1EvacuationInfo* evacuation_info,\n+                                          G1EvacFailureRegions* evac_failure_regions);\n@@ -179,0 +181,1 @@\n+  G1EvacFailureRegions* _evac_failure_regions;\n@@ -181,1 +184,1 @@\n-  RedirtyLoggedCardsTask(G1RedirtyCardsQueueSet* rdcqs);\n+  RedirtyLoggedCardsTask(G1RedirtyCardsQueueSet* rdcqs, G1EvacFailureRegions* evac_failure_regions);\n@@ -195,0 +198,1 @@\n+  G1EvacFailureRegions* _evac_failure_regions;\n@@ -200,1 +204,3 @@\n-  FreeCollectionSetTask(G1EvacuationInfo* evacuation_info, const size_t* surviving_young_words);\n+  FreeCollectionSetTask(G1EvacuationInfo* evacuation_info,\n+                        const size_t* surviving_young_words,\n+                        G1EvacFailureRegions* evac_failure_regions);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1YoungGCPostEvacuateTasks.hpp","additions":9,"deletions":3,"binary":false,"changes":12,"status":"modified"}]}