{"files":[{"patch":"@@ -534,1 +534,1 @@\n-    <name>:...\n+    <name>,<name>,...\n@@ -536,1 +536,2 @@\n-    Exclude any doc-files subdirectories with given name\n+    Exclude any doc-files subdirectories with given name.\\n\\\n+    ':' can also be used anywhere in the argument as a separator.\n@@ -539,1 +540,1 @@\n-    <name> <g1>:<g2>...\n+    <name> <g1>,<g2>...\n@@ -541,1 +542,2 @@\n-    Group specified elements together in overview page\n+    Group specified elements together in overview page.\\n\\\n+    ':' can also be used anywhere in the argument as a separator.\n@@ -555,1 +557,1 @@\n-    <name1>:<name2>:...\n+    <name1>,<name2>,...\n@@ -557,1 +559,2 @@\n-    Exclude the list of qualifiers from the output\n+    Exclude the list of qualifiers from the output.\\n\\\n+    ':' can also be used anywhere in the argument as a separator.\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/standard.properties","additions":9,"deletions":6,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -474,1 +474,5 @@\n-                List<String> tokens = tokenize(args.get(1), TagletManager.SIMPLE_TAGLET_OPT_SEPARATOR, 3);\n+                \/* Since there are few constraints on the characters in a tag name,\n+                 * and real world examples with ':' in the tag name, we cannot simply use\n+                 * String.split(regex);  instead, we tokenize the string, allowing\n+                 * special characters to be escaped with '\\'. *\/\n+                List<String> tokens = tokenize(args.get(1), 3);\n@@ -476,1 +480,1 @@\n-                    case 1:\n+                    case 1 -> {\n@@ -487,1 +491,1 @@\n-                        break;\n+                    }\n@@ -489,1 +493,1 @@\n-                    case 2:\n+                    case 2 ->\n@@ -492,1 +496,0 @@\n-                        break;\n@@ -494,1 +497,1 @@\n-                    case 3:\n+                    case 3 ->\n@@ -496,1 +499,0 @@\n-                        break;\n@@ -498,1 +500,1 @@\n-                    default:\n+                    default ->\n@@ -508,3 +510,3 @@\n-     * Given a string, return an array of tokens.  The separator can be escaped\n-     * with the '\\' character.  The '\\' character may also be escaped by the\n-     * '\\' character.\n+     * Given a string, return an array of tokens, separated by ':'.\n+     * The separator character can be escaped with the '\\' character.\n+     * The '\\' character may also be escaped with the '\\' character.\n@@ -512,2 +514,1 @@\n-     * @param s         the string to tokenize.\n-     * @param separator the separator char.\n+     * @param s         the string to tokenize\n@@ -517,1 +518,1 @@\n-     * @return an array of tokens.\n+     * @return an array of tokens\n@@ -519,1 +520,1 @@\n-    private List<String> tokenize(String s, char separator, int maxTokens) {\n+    private List<String> tokenize(String s, int maxTokens) {\n@@ -529,1 +530,1 @@\n-            } else if (currentChar == separator && tokens.size() < maxTokens - 1) {\n+            } else if (currentChar == ':' && tokens.size() < maxTokens - 1) {\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/BaseConfiguration.java","additions":17,"deletions":16,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -422,1 +422,1 @@\n-                        addToSet(excludedDocFileDirs, args.get(0));\n+                        excludedDocFileDirs.addAll(List.of(args.get(0).split(\"[,:]\")));\n@@ -539,1 +539,1 @@\n-                        addToSet(excludedQualifiers, args.get(0));\n+                        excludedQualifiers.addAll(List.of(args.get(0).split(\"[,:]\")));\n@@ -767,9 +767,0 @@\n-    private void addToSet(Set<String> s, String str) {\n-        StringTokenizer st = new StringTokenizer(str, \":\");\n-        String current;\n-        while (st.hasMoreTokens()) {\n-            current = st.nextToken();\n-            s.add(current);\n-        }\n-    }\n-\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/BaseOptions.java","additions":2,"deletions":11,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -88,5 +88,0 @@\n-    \/**\n-     * The default separator for the simple tag option.\n-     *\/\n-    public static final char SIMPLE_TAGLET_OPT_SEPARATOR = ':';\n-\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/TagletManager.java","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -118,1 +118,1 @@\n-        String[] mdlPatterns = moduleNameFormList.split(\":\");\n+        String[] mdlPatterns = moduleNameFormList.split(\"[,:]\");\n@@ -164,1 +164,1 @@\n-        String[] pkgPatterns = pkgNameFormList.split(\":\");\n+        String[] pkgPatterns = pkgNameFormList.split(\"[,:]\");\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/Group.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-.\\\" Copyright (c) 1994, 2021, Oracle and\/or its affiliates. All rights reserved.\n+.\\\" Copyright (c) 1994, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,1 +24,1 @@\n-.TH \"JAVADOC\" \"1\" \"2023\" \"JDK 20\\-ea\" \"JDK Commands\"\n+.TH \"JAVADOC\" \"1\" \"2022\" \"JDK 20\\-internal\" \"JDK Commands\"\n@@ -612,0 +612,7 @@\n+Enables deep copying of doc\\-files directories.\n+Subdirectories and all contents are recursively copied to the\n+destination.\n+For example, the directory \\f[CB]doc\\-files\/example\/images\\f[R] and all of\n+its contents are copied.\n+The \\f[B]\\f[BC]\\-excludedocfilessubdir\\f[B]\\f[R] option can be used to\n+exclude specific subdirectories.\n@@ -628,8 +635,6 @@\n-.B \\f[CB]\\-excludedocfilessubdir\\f[R] \\f[I]name\\f[R]\n-Excludes any doc files subdirectories with the given name.\n-Enables deep copying of doc\\-files directories.\n-Subdirectories and all contents are recursively copied to the\n-destination.\n-For example, the directory \\f[CB]doc\\-files\/example\/images\\f[R] and all of\n-its contents are copied.\n-There is also an option to exclude subdirectories.\n+.B \\f[CB]\\-excludedocfilessubdir\\f[R] \\f[I]name1\\f[R]\\f[CB],\\f[R]\\f[I]name2...\\f[R]\n+Excludes any subdirectories with the given names when recursively\n+copying doc\\-file subdirectories.\n+See \\f[B]\\f[BC]\\-docfilessubdirs\\f[B]\\f[R].\n+For historical reasons, \\f[CB]:\\f[R] can be used anywhere in the argument\n+as a separator instead of \\f[CB],\\f[R].\n@@ -651,1 +656,1 @@\n-.B \\f[CB]\\-group\\f[R] \\f[I]namep1\\f[R]\\f[CB]:\\f[R]\\f[I]p2\\f[R]\n+.B \\f[CB]\\-group\\f[R] \\f[I]name\\f[R] \\f[I]p1\\f[R]\\f[CB],\\f[R]\\f[I]p2...\\f[R]\n@@ -653,0 +658,2 @@\n+For historical reasons, \\f[CB]:\\f[R] can be used as a separator anywhere\n+in the argument instead of \\f[CB],\\f[R].\n@@ -1007,1 +1014,1 @@\n-.B \\f[CB]\\-noqualifier\\f[R] \\f[I]name1\\f[R]\\f[CB]:\\f[R]\\f[I]name2\\f[R]...\n+.B \\f[CB]\\-noqualifier\\f[R] \\f[I]name1\\f[R]\\f[CB],\\f[R]\\f[I]name2...\\f[R]\n@@ -1011,0 +1018,2 @@\n+For historical reasons, \\f[CB]:\\f[R] can be used anywhere in the argument\n+as a separator instead of \\f[CB],\\f[R].\n@@ -1137,1 +1146,1 @@\n-.B \\f[CB]\\-sourcetab\\f[R] \\f[I]tablength\\f[R]\n+.B \\f[CB]\\-sourcetab\\f[R] \\f[I]tab\\-length\\f[R]\n@@ -1165,0 +1174,2 @@\n+To include a colon in the tag name, escape it with a backward slash\n+(\\f[CB]\\\\\\f[R]).\n@@ -1173,0 +1184,3 @@\n+\\f[I]locations\\f[R] is a list of characters specifying the kinds of\n+declarations in which the tag may be used.\n+The following characters may be used, in either uppercase or lowercase:\n@@ -1174,0 +1188,25 @@\n+.IP \\[bu] 2\n+\\f[CB]A\\f[R]: all declarations\n+.IP \\[bu] 2\n+\\f[CB]C\\f[R]: constructors\n+.IP \\[bu] 2\n+\\f[CB]F\\f[R]: fields\n+.IP \\[bu] 2\n+\\f[CB]M\\f[R]: methods\n+.IP \\[bu] 2\n+\\f[CB]O\\f[R]: the overview page and other documentation files in\n+\\f[CB]doc\\-files\\f[R] subdirectories\n+.IP \\[bu] 2\n+\\f[CB]P\\f[R]: packages\n+.IP \\[bu] 2\n+\\f[CB]S\\f[R]: modules\n+.IP \\[bu] 2\n+\\f[CB]T\\f[R]: types (classes and interfaces)\n+.IP \\[bu] 2\n+\\f[CB]X\\f[R]: nowhere: the tag is disabled, and will be ignored\n+.PP\n+The order in which tags are given on the command line will be used as\n+the order in which the tags appear in the generated output.\n+You can include standard tags in the order given on the command line by\n+using the \\f[CB]\\-tag\\f[R] option with no \\f[I]locations\\f[R] or\n+\\f[I]header\\f[R].\n","filename":"src\/jdk.javadoc\/share\/man\/javadoc.1","additions":52,"deletions":13,"binary":false,"changes":65,"status":"modified"}]}