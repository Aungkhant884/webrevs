{"files":[{"patch":"@@ -53,3 +53,3 @@\n-            {\"j.l.obj\", \"\\\"java.lang.Object\\\"\"},\n-            {\"InpStr\", \"\\\"java.io.InputStream\\\"\"},\n-            {\"HM.cK\", \"\\\"java.util.HashMap.containsKey(Object)\\\"\"}\n+            {\"\\\"j.l.obj\\\"\", \"\\\"java.lang.Object\\\"\"},\n+            {\"\\\"InpStr\\\"\", \"\\\"java.io.InputStream\\\"\"},\n+            {\"\\\"math exact long\\\"\", \"\\\"java.lang.Math.absExact(long)\\\"\"}\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HelpWriter.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,16 +25,18 @@\n-\n-var noResult = {l: \"##REPLACE:doclet.search.no_results##\"};\n-var loading = {l: \"##REPLACE:doclet.search.loading##\"};\n-var catModules = \"##REPLACE:doclet.search.modules##\";\n-var catPackages = \"##REPLACE:doclet.search.packages##\";\n-var catTypes = \"##REPLACE:doclet.search.types##\";\n-var catMembers = \"##REPLACE:doclet.search.members##\";\n-var catSearchTags = \"##REPLACE:doclet.search.search_tags##\";\n-var highlight = \"<span class=\\\"result-highlight\\\">$&<\/span>\";\n-var searchPattern = \"\";\n-var fallbackPattern = \"\";\n-var RANKING_THRESHOLD = 2;\n-var NO_MATCH = 0xffff;\n-var MIN_RESULTS = 3;\n-var MAX_RESULTS = 500;\n-var UNNAMED = \"<Unnamed>\";\n+\"use strict\";\n+const messages = {\n+    noResult: \"##REPLACE:doclet.search.no_results##\",\n+    loading: \"##REPLACE:doclet.search.loading##\"\n+}\n+const categories = {\n+    modules: \"##REPLACE:doclet.search.modules##\",\n+    packages: \"##REPLACE:doclet.search.packages##\",\n+    types: \"##REPLACE:doclet.search.types##\",\n+    members: \"##REPLACE:doclet.search.members##\",\n+    searchTags: \"##REPLACE:doclet.search.search_tags##\"\n+};\n+const highlight = \"<span class='result-highlight'>$&<\/span>\";\n+const NO_MATCH = {};\n+const MAX_RESULTS = 1200;\n+function checkUnnamed(name, separator) {\n+    return name === \"<Unnamed>\" || !name ? \"\" : name + separator;\n+}\n@@ -44,5 +46,14 @@\n-function getHighlightedText(item, matcher, fallbackMatcher) {\n-    var escapedItem = escapeHtml(item);\n-    var highlighted = escapedItem.replace(matcher, highlight);\n-    if (highlighted === escapedItem) {\n-        highlighted = escapedItem.replace(fallbackMatcher, highlight)\n+function getHighlightedText(str, boundaries, from, to) {\n+    var start = from;\n+    var text = \"\";\n+    for (var i = 0; i < boundaries.length; i += 2) {\n+        var b0 = boundaries[i];\n+        var b1 = boundaries[i + 1];\n+        if (b0 >= to || b1 <= from) {\n+            continue;\n+        }\n+        text += escapeHtml(str.slice(start, Math.max(start, b0)));\n+        text += \"<span class='result-highlight'>\";\n+        text += escapeHtml(str.slice(Math.max(start, b0), Math.min(to, b1)));\n+        text += \"<\/span>\";\n+        start = Math.min(to, b1);\n@@ -50,1 +61,2 @@\n-    return highlighted;\n+    text += escapeHtml(str.slice(start, to));\n+    return text;\n@@ -52,2 +64,2 @@\n-function getURLPrefix(ui) {\n-    var urlPrefix=\"\";\n+function getURLPrefix(item, category) {\n+    var urlPrefix = \"\";\n@@ -55,7 +67,7 @@\n-    if (ui.item.category === catModules) {\n-        return ui.item.l + slash;\n-    } else if (ui.item.category === catPackages && ui.item.m) {\n-        return ui.item.m + slash;\n-    } else if (ui.item.category === catTypes || ui.item.category === catMembers) {\n-        if (ui.item.m) {\n-            urlPrefix = ui.item.m + slash;\n+    if (category === \"modules\") {\n+        return item.l + slash;\n+    } else if (category === \"packages\" && item.m) {\n+        return item.m + slash;\n+    } else if (category === \"types\" || category === \"members\") {\n+        if (item.m) {\n+            urlPrefix = item.m + slash;\n@@ -63,3 +75,3 @@\n-            $.each(packageSearchIndex, function(index, item) {\n-                if (item.m && ui.item.p === item.l) {\n-                    urlPrefix = item.m + slash;\n+            $.each(packageSearchIndex, function(index, it) {\n+                if (it.m && item.p === it.l) {\n+                    urlPrefix = it.m + slash;\n@@ -72,7 +84,18 @@\n-function createSearchPattern(term) {\n-    var pattern = \"\";\n-    var isWordToken = false;\n-    term.replace(\/,\\s*\/g, \", \").trim().split(\/\\s+\/).forEach(function(w, index) {\n-        if (index > 0) {\n-            \/\/ whitespace between identifiers is significant\n-            pattern += (isWordToken && \/^\\w\/.test(w)) ? \"\\\\s+\" : \"\\\\s*\";\n+function getURL(item, category) {\n+    if (item.url) {\n+        return item.url;\n+    }\n+    var url = getURLPrefix(item, category);\n+    if (category === \"modules\") {\n+        url += \"module-summary.html\";\n+    } else if (category === \"packages\") {\n+        if (item.u) {\n+            url = item.u;\n+        } else {\n+            url += item.l.replace(\/\\.\/g, '\/') + \"\/package-summary.html\";\n+        }\n+    } else if (category === \"types\") {\n+        if (item.u) {\n+            url = item.u;\n+        } else {\n+            url += checkUnnamed(item.p, \"\/\").replace(\/\\.\/g, '\/') + item.l + \".html\";\n@@ -80,1 +103,21 @@\n-        var tokens = w.split(\/(?=[A-Z,.()<>[\\\/])\/);\n+    } else if (category === \"members\") {\n+        url += checkUnnamed(item.p, \"\/\").replace(\/\\.\/g, '\/') + item.c + \".html\" + \"#\";\n+        if (item.u) {\n+            url += item.u;\n+        } else {\n+            url += item.l;\n+        }\n+    } else if (category === \"searchTags\") {\n+        url += item.u;\n+    }\n+    item.url = url;\n+    return url;\n+}\n+function createMatcher(term, camelCase) {\n+    if (camelCase && !isUpperCase(term)) {\n+        return null;  \/\/ no need for camel-case matcher for lower case query\n+    }\n+    var pattern = \"\";\n+    var upperCase = [];\n+    term.trim().split(\/\\s+\/).forEach(function(w, index, array) {\n+        var tokens = w.split(\/(?=[A-Z,.()<>?[\\\/])\/);\n@@ -83,5 +126,4 @@\n-            if (s === \"\") {\n-                continue;\n-            }\n-            pattern += $.ui.autocomplete.escapeRegex(s);\n-            isWordToken =  \/\\w$\/.test(s);\n+            \/\/ ',' and '?' are the only delimiters commonly followed by space in java signatures\n+            pattern += \"(\" + $.ui.autocomplete.escapeRegex(s).replace(\/[,?]\/g, \"$&\\\\s*?\") + \")\";\n+            upperCase.push(false);\n+            var isWordToken =  \/\\w$\/.test(s);\n@@ -89,1 +131,15 @@\n-                pattern += \"([a-z0-9_$<>\\\\[\\\\]]*?)\";\n+                if (i === tokens.length - 1 && index < array.length - 1) {\n+                    \/\/ space in query string matches all delimiters\n+                    pattern += \"(.*?)\";\n+                    upperCase.push(isUpperCase(s[0]));\n+                } else {\n+                    if (!camelCase && isUpperCase(s) && s.length === 1) {\n+                        pattern += \"()\";\n+                    } else {\n+                        pattern += \"([a-z0-9$<>?[\\\\]]*?)\";\n+                    }\n+                    upperCase.push(isUpperCase(s[0]));\n+                }\n+            } else {\n+                pattern += \"()\";\n+                upperCase.push(false);\n@@ -93,1 +149,3 @@\n-    return pattern;\n+    var re = new RegExp(pattern, \"gi\");\n+    re.upperCase = upperCase;\n+    return re;\n@@ -95,78 +153,8 @@\n-function createMatcher(pattern, flags) {\n-    var isCamelCase = \/[A-Z]\/.test(pattern);\n-    return new RegExp(pattern, flags + (isCamelCase ? \"\" : \"i\"));\n-}\n-$(function() {\n-    var search = $(\"#search-input\");\n-    var reset = $(\"#reset-button\");\n-    search.val('');\n-    search.prop(\"disabled\", false);\n-    reset.prop(\"disabled\", false);\n-    reset.click(function() {\n-        search.val('').focus();\n-    });\n-    search.focus();\n-});\n-$.widget(\"custom.catcomplete\", $.ui.autocomplete, {\n-    _create: function() {\n-        this._super();\n-        this.widget().menu(\"option\", \"items\", \"> :not(.ui-autocomplete-category)\");\n-    },\n-    _renderMenu: function(ul, items) {\n-        var rMenu = this;\n-        var currentCategory = \"\";\n-        rMenu.menu.bindings = $();\n-        $.each(items, function(index, item) {\n-            var li;\n-            if (item.category && item.category !== currentCategory) {\n-                ul.append(\"<li class=\\\"ui-autocomplete-category\\\">\" + item.category + \"<\/li>\");\n-                currentCategory = item.category;\n-            }\n-            li = rMenu._renderItemData(ul, item);\n-            if (item.category) {\n-                li.attr(\"aria-label\", item.category + \" : \" + item.l);\n-                li.attr(\"class\", \"result-item\");\n-            } else {\n-                li.attr(\"aria-label\", item.l);\n-                li.attr(\"class\", \"result-item\");\n-            }\n-        });\n-    },\n-    _renderItem: function(ul, item) {\n-        var label = \"\";\n-        var matcher = createMatcher(escapeHtml(searchPattern), \"g\");\n-        var fallbackMatcher = new RegExp(fallbackPattern, \"gi\")\n-        if (item.category === catModules) {\n-            label = getHighlightedText(item.l, matcher, fallbackMatcher);\n-        } else if (item.category === catPackages) {\n-            label = getHighlightedText(item.l, matcher, fallbackMatcher);\n-        } else if (item.category === catTypes) {\n-            label = (item.p && item.p !== UNNAMED)\n-                    ? getHighlightedText(item.p + \".\" + item.l, matcher, fallbackMatcher)\n-                    : getHighlightedText(item.l, matcher, fallbackMatcher);\n-        } else if (item.category === catMembers) {\n-            label = (item.p && item.p !== UNNAMED)\n-                    ? getHighlightedText(item.p + \".\" + item.c + \".\" + item.l, matcher, fallbackMatcher)\n-                    : getHighlightedText(item.c + \".\" + item.l, matcher, fallbackMatcher);\n-        } else if (item.category === catSearchTags) {\n-            label = getHighlightedText(item.l, matcher, fallbackMatcher);\n-        } else {\n-            label = item.l;\n-        }\n-        var li = $(\"<li\/>\").appendTo(ul);\n-        var div = $(\"<div\/>\").appendTo(li);\n-        if (item.category === catSearchTags && item.h) {\n-            if (item.d) {\n-                div.html(label + \"<span class=\\\"search-tag-holder-result\\\"> (\" + item.h + \")<\/span><br><span class=\\\"search-tag-desc-result\\\">\"\n-                                + item.d + \"<\/span><br>\");\n-            } else {\n-                div.html(label + \"<span class=\\\"search-tag-holder-result\\\"> (\" + item.h + \")<\/span>\");\n-            }\n-        } else {\n-            if (item.m) {\n-                div.html(item.m + \"\/\" + label);\n-            } else {\n-                div.html(label);\n-            }\n-        }\n-        return li;\n+function analyzeMatch(matcher, input, startOfName, category) {\n+    var from = startOfName;\n+    matcher.lastIndex = from;\n+    var match = matcher.exec(input);\n+    while (!match && from > 1) {\n+        from = input.lastIndexOf(\".\", from - 2) + 1;\n+        matcher.lastIndex = from;\n+        match = matcher.exec(input);\n@@ -174,2 +162,0 @@\n-});\n-function rankMatch(match, category) {\n@@ -179,11 +165,2 @@\n-    var index = match.index;\n-    var input = match.input;\n-    var leftBoundaryMatch = 2;\n-    var periferalMatch = 0;\n-    \/\/ make sure match is anchored on a left word boundary\n-    if (index === 0 || \/\\W\/.test(input[index - 1]) || \"_\" === input[index]) {\n-        leftBoundaryMatch = 0;\n-    } else if (\"_\" === input[index - 1] || (input[index] === input[index].toUpperCase() && !\/^[A-Z0-9_$]+$\/.test(input))) {\n-        leftBoundaryMatch = 1;\n-    }\n-    var matchEnd = index + match[0].length;\n+    var boundaries = [];\n+    var matchEnd = match.index + match[0].length;\n@@ -191,1 +168,0 @@\n-    var endOfName = leftParen > -1 ? leftParen : input.length;\n@@ -193,6 +169,5 @@\n-    if (category !== catModules && category !== catSearchTags) {\n-        var delim = category === catPackages ? \"\/\" : \".\";\n-        if (leftParen > -1 && leftParen < index) {\n-            periferalMatch += 2;\n-        } else if (input.lastIndexOf(delim, endOfName) >= matchEnd) {\n-            periferalMatch += 2;\n+    if (category !== \"modules\" && category !== \"searchTags\") {\n+        if (leftParen > -1 && leftParen < match.index) {\n+            return NO_MATCH;\n+        } else if (startOfName - 1 >= matchEnd) {\n+            return NO_MATCH;\n@@ -201,12 +176,28 @@\n-    var delta = match[0].length === endOfName ? 0 : 1; \/\/ rank full match higher than partial match\n-    for (var i = 1; i < match.length; i++) {\n-        \/\/ lower ranking if parts of the name are missing\n-        if (match[i])\n-            delta += match[i].length;\n-    }\n-    if (category === catTypes) {\n-        \/\/ lower ranking if a type name contains unmatched camel-case parts\n-        if (\/[A-Z]\/.test(input.substring(matchEnd)))\n-            delta += 5;\n-        if (\/[A-Z]\/.test(input.substring(0, index)))\n-            delta += 5;\n+    var endOfName = leftParen > -1 ? leftParen : input.length;\n+    var score = 5;\n+    var start = match.index;\n+    var prevEnd = -1;\n+    for (var i = 1; i < match.length; i += 2) {\n+        var isUpper = isUpperCase(input[start]);\n+        var isMatcherUpper = matcher.upperCase[i];\n+        \/\/ capturing groups come in pairs, match and non-match\n+        boundaries.push(start, start + match[i].length);\n+        \/\/ make sure groups are anchored on a left word boundary\n+        var prevChar = input[start - 1] || \"\";\n+        var nextChar = input[start + 1] || \"\";\n+        if (start !== 0 && !\/[\\W_]\/.test(prevChar) && !\/[\\W_]\/.test(input[start])) {\n+            if (isUpper && (isLowerCase(prevChar) || isLowerCase(nextChar))) {\n+                score -= 0.1;\n+            } else if (isMatcherUpper && start === prevEnd) {\n+                score -= isUpper ? 0.1 : 1.0;\n+            } else {\n+                return NO_MATCH;\n+            }\n+        }\n+        prevEnd = start + match[i].length;\n+        start += match[i].length + match[i + 1].length;\n+\n+        \/\/ lower score for parts of the name that are missing\n+        if (match[i + 1] && prevEnd < endOfName) {\n+            score -= rateNoise(match[i + 1]);\n+        }\n@@ -214,1 +205,4 @@\n-    return leftBoundaryMatch + periferalMatch + (delta \/ 200);\n+    \/\/ lower score if a type name contains unmatched camel-case parts\n+    if (input[matchEnd - 1] !== \".\" && endOfName > matchEnd)\n+        score -= rateNoise(input.slice(matchEnd, endOfName));\n+    score -= rateNoise(input.slice(0, Math.max(startOfName, match.index)));\n@@ -216,0 +210,20 @@\n+    if (score <= 0) {\n+        return NO_MATCH;\n+    }\n+    return {\n+        input: input,\n+        score: score,\n+        category: category,\n+        boundaries: boundaries\n+    };\n+}\n+function isUpperCase(s) {\n+    return s !== s.toLowerCase();\n+}\n+function isLowerCase(s) {\n+    return s !== s.toUpperCase();\n+}\n+function rateNoise(str) {\n+    return (str.match(\/([.(])\/g) || []).length \/ 5\n+         + (str.match(\/([A-Z]+)\/g) || []).length \/ 10\n+         +  str.length \/ 20;\n@@ -218,4 +232,2 @@\n-    var result = [];\n-    searchPattern = createSearchPattern(request.term);\n-    fallbackPattern = createSearchPattern(request.term.toLowerCase());\n-    if (searchPattern === \"\") {\n+    var term = request.term.trim();\n+    if (term.length === 0) {\n@@ -224,2 +236,5 @@\n-    var camelCaseMatcher = createMatcher(searchPattern, \"\");\n-    var fallbackMatcher = new RegExp(fallbackPattern, \"i\");\n+    var matcher = {\n+        plainMatcher: createMatcher(term, false),\n+        camelCaseMatcher: createMatcher(term, true)\n+    }\n+    var indexLoaded = indexFilesLoaded();\n@@ -227,16 +242,21 @@\n-    function searchIndexWithMatcher(indexArray, matcher, category, nameFunc) {\n-        if (indexArray) {\n-            var newResults = [];\n-            $.each(indexArray, function (i, item) {\n-                item.category = category;\n-                var ranking = rankMatch(matcher.exec(nameFunc(item)), category);\n-                if (ranking < RANKING_THRESHOLD) {\n-                    newResults.push({ranking: ranking, item: item});\n-                }\n-                return newResults.length <= MAX_RESULTS;\n-            });\n-            return newResults.sort(function(e1, e2) {\n-                return e1.ranking - e2.ranking;\n-            }).map(function(e) {\n-                return e.item;\n-            });\n+    function getPrefix(item, category) {\n+        switch (category) {\n+            case \"packages\":\n+                return checkUnnamed(item.m, \"\/\");\n+            case \"types\":\n+                return checkUnnamed(item.p, \".\");\n+            case \"members\":\n+                return checkUnnamed(item.p, \".\") + item.c + \".\";\n+            default:\n+                return \"\";\n+        }\n+    }\n+    function useQualifiedName(category) {\n+        switch (category) {\n+            case \"packages\":\n+                return \/[\\s\/]\/.test(term);\n+            case \"types\":\n+            case \"members\":\n+                return \/[\\s.]\/.test(term);\n+            default:\n+                return false;\n@@ -244,1 +264,0 @@\n-        return [];\n@@ -246,8 +265,7 @@\n-    function searchIndex(indexArray, category, nameFunc) {\n-        var primaryResults = searchIndexWithMatcher(indexArray, camelCaseMatcher, category, nameFunc);\n-        result = result.concat(primaryResults);\n-        if (primaryResults.length <= MIN_RESULTS && !camelCaseMatcher.ignoreCase) {\n-            var secondaryResults = searchIndexWithMatcher(indexArray, fallbackMatcher, category, nameFunc);\n-            result = result.concat(secondaryResults.filter(function (item) {\n-                return primaryResults.indexOf(item) === -1;\n-            }));\n+    function searchIndex(indexArray, category) {\n+        var matches = [];\n+        if (!indexArray) {\n+            if (!indexLoaded) {\n+                matches.push({ l: messages.loading, category: category });\n+            }\n+            return matches;\n@@ -255,0 +273,27 @@\n+        $.each(indexArray, function (i, item) {\n+            var prefix = getPrefix(item, category);\n+            var simpleName = item.l;\n+            var qualifiedName = prefix + simpleName;\n+            var useQualified = useQualifiedName(category);\n+            var input = useQualified ? qualifiedName : simpleName;\n+            var startOfName = useQualified ? prefix.length : 0;\n+            var m = analyzeMatch(matcher.plainMatcher, input, startOfName, category);\n+            if (m === NO_MATCH && matcher.camelCaseMatcher) {\n+                m = analyzeMatch(matcher.camelCaseMatcher, input, startOfName, category);\n+            }\n+            if (m !== NO_MATCH) {\n+                m.indexItem = item;\n+                m.prefix = prefix;\n+                if (!useQualified) {\n+                    m.input = qualifiedName;\n+                    m.boundaries = m.boundaries.map(function(b) {\n+                        return b + prefix.length;\n+                    });\n+                }\n+                matches.push(m);\n+            }\n+            return matches.length < MAX_RESULTS;\n+        });\n+        return matches.sort(function(e1, e2) {\n+            return e2.score - e1.score;\n+        });\n@@ -257,13 +302,5 @@\n-    searchIndex(moduleSearchIndex, catModules, function(item) { return item.l; });\n-    searchIndex(packageSearchIndex, catPackages, function(item) {\n-        return (item.m && request.term.indexOf(\"\/\") > -1)\n-            ? (item.m + \"\/\" + item.l) : item.l;\n-    });\n-    searchIndex(typeSearchIndex, catTypes, function(item) {\n-        return request.term.indexOf(\".\") > -1 ? item.p + \".\" + item.l : item.l;\n-    });\n-    searchIndex(memberSearchIndex, catMembers, function(item) {\n-        return request.term.indexOf(\".\") > -1\n-            ? item.p + \".\" + item.c + \".\" + item.l : item.l;\n-    });\n-    searchIndex(tagSearchIndex, catSearchTags, function(item) { return item.l; });\n+    var result = searchIndex(moduleSearchIndex, \"modules\")\n+         .concat(searchIndex(packageSearchIndex, \"packages\"))\n+         .concat(searchIndex(typeSearchIndex, \"types\"))\n+         .concat(searchIndex(memberSearchIndex, \"members\"))\n+         .concat(searchIndex(tagSearchIndex, \"searchTags\"));\n@@ -271,1 +308,1 @@\n-    if (!indexFilesLoaded()) {\n+    if (!indexLoaded) {\n@@ -275,1 +312,0 @@\n-        result.unshift(loading);\n@@ -281,0 +317,44 @@\n+\/\/ JQuery search menu implementation\n+$.widget(\"custom.catcomplete\", $.ui.autocomplete, {\n+    _create: function() {\n+        this._super();\n+        this.widget().menu(\"option\", \"items\", \"> .result-item\");\n+    },\n+    _renderMenu: function(ul, items) {\n+        var currentCategory = \"\";\n+        var widget = this;\n+        widget.menu.bindings = $();\n+        $.each(items, function(index, item) {\n+            if (item.category && item.category !== currentCategory) {\n+                ul.append(\"<li class='ui-autocomplete-category'>\" + categories[item.category] + \"<\/li>\");\n+                currentCategory = item.category;\n+            }\n+            var li = widget._renderItemData(ul, item);\n+            if (item.category) {\n+                li.attr(\"aria-label\", categories[item.category] + \" : \" + item.l);\n+            } else {\n+                li.attr(\"aria-label\", item.l);\n+            }\n+            li.attr(\"class\", \"result-item\");\n+        });\n+    },\n+    _renderItem: function(ul, item) {\n+        var li = $(\"<li\/>\").appendTo(ul);\n+        var div = $(\"<div\/>\").appendTo(li);\n+        var label = item.l\n+            ? item.l\n+            : getHighlightedText(item.input, item.boundaries, 0, item.input.length);\n+        var idx = item.indexItem;\n+        if (item.category === \"searchTags\" && idx.h) {\n+            if (idx.d) {\n+                div.html(label + \"<span class='search-tag-holder-result'> (\" + idx.h + \")<\/span><br><span class='search-tag-desc-result'>\"\n+                    + idx.d + \"<\/span><br>\");\n+            } else {\n+                div.html(label + \"<span class='search-tag-holder-result'> (\" + idx.h + \")<\/span>\");\n+            }\n+        } else {\n+            div.html(label);\n+        }\n+        return li;\n+    }\n+});\n@@ -311,1 +391,3 @@\n-    $(\"#search-input\").catcomplete({\n+    var search = $(\"#search-input\");\n+    var reset = $(\"#reset-button\");\n+    search.catcomplete({\n@@ -313,1 +395,1 @@\n-        delay: 300,\n+        delay: 200,\n@@ -317,1 +399,1 @@\n-                ui.content.push(noResult);\n+                ui.content.push({ l: messages.noResult });\n@@ -330,32 +412,2 @@\n-            if (ui.item.category) {\n-                var url = getURLPrefix(ui);\n-                if (ui.item.category === catModules) {\n-                    url += \"module-summary.html\";\n-                } else if (ui.item.category === catPackages) {\n-                    if (ui.item.u) {\n-                        url = ui.item.u;\n-                    } else {\n-                        url += ui.item.l.replace(\/\\.\/g, '\/') + \"\/package-summary.html\";\n-                    }\n-                } else if (ui.item.category === catTypes) {\n-                    if (ui.item.u) {\n-                        url = ui.item.u;\n-                    } else if (ui.item.p === UNNAMED) {\n-                        url += ui.item.l + \".html\";\n-                    } else {\n-                        url += ui.item.p.replace(\/\\.\/g, '\/') + \"\/\" + ui.item.l + \".html\";\n-                    }\n-                } else if (ui.item.category === catMembers) {\n-                    if (ui.item.p === UNNAMED) {\n-                        url += ui.item.c + \".html\" + \"#\";\n-                    } else {\n-                        url += ui.item.p.replace(\/\\.\/g, '\/') + \"\/\" + ui.item.c + \".html\" + \"#\";\n-                    }\n-                    if (ui.item.u) {\n-                        url += ui.item.u;\n-                    } else {\n-                        url += ui.item.l;\n-                    }\n-                } else if (ui.item.category === catSearchTags) {\n-                    url += ui.item.u;\n-                }\n+            if (ui.item.indexItem) {\n+                var url = getURL(ui.item.indexItem, ui.item.category);\n@@ -367,0 +419,7 @@\n+    search.val('');\n+    search.prop(\"disabled\", false);\n+    reset.prop(\"disabled\", false);\n+    reset.click(function() {\n+        search.val('').focus();\n+    });\n+    search.focus();\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/search.js.template","additions":301,"deletions":242,"binary":false,"changes":543,"status":"modified"},{"patch":"@@ -327,2 +327,3 @@\n-    system properties and other terms defined in the API, using some or all of the name, optionally \\\n-    using \"camelCase\" abbreviations. For example:\n+    system properties and other terms defined in the API. These items can be searched using part or all \\\n+    of the name, optionally using \"camelCase\" abbreviations or multiple search terms separated by whitespace. \\\n+    Some examples:\n@@ -330,1 +331,1 @@\n-doclet.help.search.example={0} will match {1}\n+doclet.help.search.example={0} matches {1}\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/standard.properties","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -712,23 +712,3 @@\n-                \"function searchIndexWithMatcher(indexArray, matcher, category, nameFunc) {\",\n-                \"\"\"\n-                    function getURLPrefix(ui) {\n-                        var urlPrefix=\"\";\n-                        var slash = \"\/\";\n-                        if (ui.item.category === catModules) {\n-                            return ui.item.l + slash;\n-                        } else if (ui.item.category === catPackages && ui.item.m) {\n-                            return ui.item.m + slash;\n-                        } else if (ui.item.category === catTypes || ui.item.category === catMembers) {\n-                            if (ui.item.m) {\n-                                urlPrefix = ui.item.m + slash;\n-                            } else {\n-                                $.each(packageSearchIndex, function(index, item) {\n-                                    if (item.m && ui.item.p === item.l) {\n-                                        urlPrefix = item.m + slash;\n-                                    }\n-                                });\n-                            }\n-                        }\n-                        return urlPrefix;\n-                    }\"\"\",\n-                \"url += ui.item.l;\");\n+                \"function searchIndex(indexArray, category) {\",\n+                \"function getURLPrefix(item, category) {\",\n+                \"url += item.l;\");\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testSearch\/TestSearch.java","additions":4,"deletions":24,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -112,1 +112,1 @@\n-        checkSearch(inv, \"value\", List.of(\"mappkg.impl.MyMap.OTHER_VALUE\", \"mappkg.impl.MyMap.some_value\"));\n+        checkSearch(inv, \"value\", List.of(\"mappkg.impl.MyMap.some_value\", \"mappkg.impl.MyMap.OTHER_VALUE\"));\n@@ -170,3 +170,3 @@\n-        checkSearch(inv, \"search \", List.of(\"multiline search tag\", \"search tag\"));\n-        checkSearch(inv, \"tag\", List.of(\"multiline search tag\", \"search tag\"));\n-        checkSearch(inv, \"sea\", List.of(\"multiline search tag\", \"search tag\"));\n+        checkSearch(inv, \"search \", List.of(\"search tag\", \"multiline search tag\"));\n+        checkSearch(inv, \"tag\", List.of(\"search tag\", \"multiline search tag\"));\n+        checkSearch(inv, \"sea\", List.of(\"search tag\", \"multiline search tag\"));\n@@ -175,1 +175,0 @@\n-    }\n@@ -177,0 +176,8 @@\n+        \/\/ multiple space separated tokens\n+        checkSearch(inv, \"my map map\", List.of(\"mappkg.impl.MyMap.MyMap(Map)\", \"mappkg.impl.MyMap.MyMap()\"));\n+        checkSearch(inv, \"map get\", List.of(\"mappkg.Map.get(Object)\", \"mappkg.impl.MyMap.get(Object)\"));\n+        checkSearch(inv, \"get\", List.of(\"mappkg.impl.MyMap.get(Object)\", \"mappkg.Map.get(Object)\"));\n+        checkSearch(inv, \"get o\", List.of(\"mappkg.Map.get(Object)\", \"mappkg.impl.MyMap.get(Object)\"));\n+        checkSearch(inv, \"put o o\", List.of(\"mappkg.Map.put(Object, Object)\", \"mappkg.impl.MyMap.put(Object, Object)\"));\n+        checkSearch(inv, \"put(o o)\", List.of(\"mappkg.Map.put(Object, Object)\", \"mappkg.impl.MyMap.put(Object, Object)\"));\n+    }\n@@ -190,2 +197,2 @@\n-        checkSearch(inv, \"list\", List.of(\"listpkg\", \"listpkg.List\", \"listpkg.ListProvider\", \"listpkg.MyList\",\n-                                         \"listpkg.MyListFactory\", \"listpkg.ListProvider.ListProvider()\",\n+        checkSearch(inv, \"list\", List.of(\"listpkg\", \"listpkg.List\", \"listpkg.MyList\", \"listpkg.ListProvider\",\n+                                         \"listpkg.MyListFactory\", \"listpkg.MyList.MyList()\",\n@@ -193,4 +200,4 @@\n-                                         \"listpkg.ListProvider.makeNewList()\",\n-                                         \"listpkg.MyList.MyList()\", \"listpkg.MyListFactory.MyListFactory()\"));\n-        checkSearch(inv, \"List\", List.of(\"listpkg\", \"listpkg.List\", \"listpkg.ListProvider\", \"listpkg.MyList\",\n-                                         \"listpkg.MyListFactory\", \"listpkg.ListProvider.ListProvider()\",\n+                                         \"listpkg.ListProvider.ListProvider()\", \"listpkg.ListProvider.makeNewList()\",\n+                                         \"listpkg.MyListFactory.MyListFactory()\"));\n+        checkSearch(inv, \"List\", List.of(\"listpkg\", \"listpkg.List\", \"listpkg.MyList\", \"listpkg.ListProvider\",\n+                                         \"listpkg.MyListFactory\", \"listpkg.MyList.MyList()\",\n@@ -198,2 +205,2 @@\n-                                         \"listpkg.ListProvider.makeNewList()\",\n-                                         \"listpkg.MyList.MyList()\", \"listpkg.MyListFactory.MyListFactory()\"));\n+                                         \"listpkg.ListProvider.ListProvider()\", \"listpkg.ListProvider.makeNewList()\",\n+                                         \"listpkg.MyListFactory.MyListFactory()\"));\n@@ -281,3 +288,3 @@\n-        checkSearch(inv, \"int\", List.of(\"listpkg.Nolist.SOME_INT_CONSTANT\"));\n-        checkSearch(inv, \"INT\", List.of(\"listpkg.Nolist.SOME_INT_CONSTANT\"));\n-        checkSearch(inv, \"Int\", List.of(\"listpkg.Nolist.SOME_INT_CONSTANT\"));\n+        checkSearch(inv, \"int\", List.of(\"All Classes and Interfaces\", \"listpkg.Nolist.SOME_INT_CONSTANT\"));\n+        checkSearch(inv, \"INT\", List.of(\"All Classes and Interfaces\", \"listpkg.Nolist.SOME_INT_CONSTANT\"));\n+        checkSearch(inv, \"Int\", List.of(\"All Classes and Interfaces\", \"listpkg.Nolist.SOME_INT_CONSTANT\"));\n@@ -292,3 +299,3 @@\n-        checkSearch(inv, \"all\", List.of(\"All Packages\", \"All Classes\"));\n-        checkSearch(inv, \"All\", List.of(\"All Packages\", \"All Classes\"));\n-        checkSearch(inv, \"ALL\", List.of(\"All Packages\", \"All Classes\"));\n+        checkSearch(inv, \"all\", List.of(\"All Packages\", \"All Classes and Interfaces\"));\n+        checkSearch(inv, \"All\", List.of(\"All Packages\", \"All Classes and Interfaces\"));\n+        checkSearch(inv, \"ALL\", List.of(\"All Packages\", \"All Classes and Interfaces\"));\n@@ -306,0 +313,22 @@\n+\n+        \/\/ multiple space separated tokens\n+        checkSearch(inv, \"list of\", List.of(\"listpkg.List.of()\", \"listpkg.List.of(E)\",\n+                \"listpkg.List.of(E, E)\", \"listpkg.List.of(E, E, E)\", \"listpkg.List.of(E, E, E, E)\",\n+                \"listpkg.List.of(E, E, E, E, E)\", \"listpkg.List.of(E...)\"));\n+        checkSearch(inv, \"list of e\", List.of(\"listpkg.List.of(E)\", \"listpkg.List.of(E, E)\",\n+                \"listpkg.List.of(E, E, E)\", \"listpkg.List.of(E, E, E, E)\",\n+                \"listpkg.List.of(E, E, E, E, E)\", \"listpkg.List.of(E...)\"));\n+        checkSearch(inv, \"list of e e e\", List.of(\"listpkg.List.of(E, E, E)\",\n+                \"listpkg.List.of(E, E, E, E)\", \"listpkg.List.of(E, E, E, E, E)\"));\n+        checkSearch(inv, \"list of e..\", List.of(\"listpkg.List.of(E...)\"));\n+\n+        checkSearch(inv, \"list with\", List.of());\n+        checkSearch(inv, \"nolist with\", List.of(\"listpkg.Nolist.withVarArgs(Object...)\",\n+                \"listpkg.Nolist.withArrayArg(int[])\",\n+                \"listpkg.Nolist.withTypeParams(Map<String, ? extends Collection>)\"));\n+        checkSearch(inv, \"with arg\", List.of(\"listpkg.Nolist.withVarArgs(Object...)\",\n+                \"listpkg.Nolist.withArrayArg(int[])\"));\n+        checkSearch(inv, \"with int\", List.of(\"listpkg.Nolist.withArrayArg(int[])\"));\n+        checkSearch(inv, \"with map\", List.of(\n+                \"listpkg.Nolist.withTypeParams(Map<String, ? extends Collection>)\"));\n+\n@@ -309,1 +338,1 @@\n-        checkList((List) inv.invokeFunction(\"search\", query), results);\n+        checkList(query, (List<?>) inv.invokeFunction(\"search\", query), results);\n@@ -312,2 +341,2 @@\n-    void checkList(List<?> result, List<?> expected) {\n-        checking(\"Checking list: \" + result);\n+    void checkList(String query, List<?> result, List<?> expected) {\n+        checking(\"Checking resut for query \\\"\" + query + \"\\\"\");\n@@ -323,1 +352,1 @@\n-        checking(\"Checking null result\");\n+        checking(\"Checking result for query \\\"\" + query + \"\\\"\");\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testSearchScript\/TestSearchScript.java","additions":53,"deletions":24,"binary":false,"changes":77,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -138,0 +138,4 @@\n+var window = {\n+    innerWidth: 800\n+}\n+\n@@ -143,2 +147,1 @@\n-        if (item.l !== noResult.l && item.category !== currentCategory) {\n-            \/\/ print(item.category);\n+        if (item.l !== messages.noResult && item.category !== currentCategory) {\n@@ -153,19 +156,1 @@\n-    var label;\n-    if (item.category === catModules) {\n-        label = item.l;\n-    } else if (item.category === catPackages) {\n-        label = (item.m)\n-                ? item.m + \"\/\" + item.l\n-                : item.l;\n-    } else if (item.category === catTypes) {\n-        label = (item.p)\n-                ? item.p + \".\" + item.l\n-                : item.l;\n-    } else if (item.category === catMembers) {\n-        label = item.p + \".\" + item.c + \".\" + item.l;\n-    } else if (item.category === catSearchTags) {\n-        label = item.l;\n-    } else {\n-        label = item.l;\n-    }\n-    return label;\n+    return item.l || item.input;\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testSearchScript\/javadoc-search.js","additions":7,"deletions":22,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -146,1 +146,1 @@\n-                        var catTypes = \"Types\";\"\"\" \/\/\n+                        types: \"Types\",\"\"\"\n@@ -150,1 +150,1 @@\n-                        var catTypes = \"Classes and Interfaces\";\"\"\"\n+                        types: \"Classes and Interfaces\",\"\"\"\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testTerminology\/TestTerminology.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}