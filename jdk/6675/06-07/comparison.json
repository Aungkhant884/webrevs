{"files":[{"patch":"@@ -52,1 +52,1 @@\n-    private final int size = 100_000;\n+    private int iFld = 4711;\n@@ -54,1 +54,1 @@\n-    private int[] ints_a;\n+    private long lFld = 4711 * 4711 * 4711;\n@@ -56,18 +56,3 @@\n-    private long[] longs_a;\n-\n-    @Setup\n-    public void init() {\n-        ints_a = new int[size];\n-        longs_a = new long[size];\n-        for (int i = 0; i < size; i++) {\n-            ints_a[i] = i;\n-            longs_a[i] = i * i * i;\n-        }\n-    }\n-\n-    \/* @Benchmark\n-    public void baseline() {\n-        for (int i = 0; i < size; i++) {\n-            sink(ints_a[i]);\n-            sink(longs_a[i]);\n-        }\n+    @Benchmark\n+    public int baselineInt() {\n+        return iFld;\n@@ -77,6 +62,3 @@\n-    public void test() {\n-        for (int i = 0; i < size; i++) {\n-            sink(helper(ints_a[i]));\n-            sink(helper(longs_a[i]));\n-        }\n-    } *\/\n+    public long baselineLong() {\n+        return lFld;\n+    }\n@@ -86,1 +68,1 @@\n-        return helper(ints_a[4711]);\n+        return helper(iFld);\n@@ -91,1 +73,1 @@\n-        return helper(longs_a[4711]);\n+        return helper(lFld);\n@@ -107,6 +89,0 @@\n-\n-    \/* @CompilerControl(CompilerControl.Mode.DONT_INLINE)\n-    private static void sink(int v) {}\n-\n-    @CompilerControl(CompilerControl.Mode.DONT_INLINE)\n-    private static void sink(long v) {} *\/\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/AddIdeal_XPlusX_LShiftC.java","additions":10,"deletions":34,"binary":false,"changes":44,"status":"modified"}]}