{"files":[{"patch":"@@ -68,1 +68,1 @@\n-            return Optional.of(taskHelper.getMessage(\"jlink.desciption\"));\n+            return Optional.of(taskHelper.getMessage(\"jlink.description\"));\n","filename":"src\/jdk.jlink\/share\/classes\/jdk\/tools\/jlink\/internal\/Main.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,57 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8287121\n+ * @summary test ToolProvider's description API\n+ * @run main\/othervm ToolProviderDescriptionTest\n+ *\/\n+\n+import java.util.Comparator;\n+import java.util.List;\n+import java.util.ServiceLoader;\n+import java.util.spi.ToolProvider;\n+import java.util.stream.StreamSupport;\n+\n+public class ToolProviderDescriptionTest {\n+    public static void main(String... args) throws Exception {\n+        List<String> descriptions = listToolDescriptions();\n+        if (descriptions.isEmpty()) {\n+            throw new AssertionError(\"No tool observable?\");\n+        }\n+    }\n+\n+    static List<String> listToolDescriptions() {\n+        return StreamSupport.stream(ServiceLoader.load(ToolProvider.class).spliterator(), false)\n+            .sorted(Comparator.comparing(ToolProvider::name))\n+            .map(ToolProviderDescriptionTest::describeTool)\n+            .toList();\n+    }\n+\n+    static String describeTool(ToolProvider tool) {\n+        String name = tool.name();\n+        String description = tool.description().orElse(\"<tool description not available>\");\n+        return \"%20s - %s\".formatted(name, description);\n+    }\n+}\n","filename":"test\/jdk\/java\/util\/spi\/ToolProviderDescriptionTest.java","additions":57,"deletions":0,"binary":false,"changes":57,"status":"added"}]}