{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -118,2 +118,2 @@\n-    public int testHeapLoopGetByteSwapRO() {\n-        int r = 0;\n+    public byte testHeapLoopGetByteSwapRO() {\n+        byte r = 0;\n@@ -136,2 +136,2 @@\n-    public int testHeapLoopGetByteSwap() {\n-        int r = 0;\n+    public byte testHeapLoopGetByteSwap() {\n+        byte r = 0;\n@@ -147,2 +147,2 @@\n-    public int testHeapLoopGetByteRO() {\n-        int r = 0;\n+    public byte testHeapLoopGetByteRO() {\n+        byte r = 0;\n@@ -165,2 +165,2 @@\n-    public int testHeapLoopGetByte() {\n-        int r = 0;\n+    public byte testHeapLoopGetByte() {\n+        byte r = 0;\n@@ -176,2 +176,2 @@\n-    public int testDirectLoopGetByteSwapRO() {\n-        int r = 0;\n+    public byte testDirectLoopGetByteSwapRO() {\n+        byte r = 0;\n@@ -194,2 +194,2 @@\n-    public int testDirectLoopGetByteSwap() {\n-        int r = 0;\n+    public byte testDirectLoopGetByteSwap() {\n+        byte r = 0;\n@@ -205,2 +205,2 @@\n-    public int testDirectLoopGetByteRO() {\n-        int r = 0;\n+    public byte testDirectLoopGetByteRO() {\n+        byte r = 0;\n@@ -223,2 +223,2 @@\n-    public int testDirectLoopGetByte() {\n-        int r = 0;\n+    public byte testDirectLoopGetByte() {\n+        byte r = 0;\n@@ -234,2 +234,2 @@\n-    public int testHeapLoopGetCharSwapRO() {\n-        int r = 0;\n+    public char testHeapLoopGetCharSwapRO() {\n+        char r = 0;\n@@ -252,2 +252,2 @@\n-    public int testHeapLoopGetCharSwap() {\n-        int r = 0;\n+    public char testHeapLoopGetCharSwap() {\n+        char r = 0;\n@@ -263,2 +263,2 @@\n-    public int testHeapLoopGetCharRO() {\n-        int r = 0;\n+    public char testHeapLoopGetCharRO() {\n+        char r = 0;\n@@ -281,2 +281,2 @@\n-    public int testHeapLoopGetChar() {\n-        int r = 0;\n+    public char testHeapLoopGetChar() {\n+        char r = 0;\n@@ -292,2 +292,2 @@\n-    public int testDirectLoopGetCharSwapRO() {\n-        int r = 0;\n+    public char testDirectLoopGetCharSwapRO() {\n+        char r = 0;\n@@ -310,2 +310,2 @@\n-    public int testDirectLoopGetCharSwap() {\n-        int r = 0;\n+    public char testDirectLoopGetCharSwap() {\n+        char r = 0;\n@@ -321,2 +321,2 @@\n-    public int testDirectLoopGetCharRO() {\n-        int r = 0;\n+    public char testDirectLoopGetCharRO() {\n+        char r = 0;\n@@ -339,2 +339,2 @@\n-    public int testDirectLoopGetChar() {\n-        int r = 0;\n+    public char testDirectLoopGetChar() {\n+        char r = 0;\n@@ -350,2 +350,2 @@\n-    public int testHeapLoopGetShortSwapRO() {\n-        int r = 0;\n+    public short testHeapLoopGetShortSwapRO() {\n+        short r = 0;\n@@ -368,2 +368,2 @@\n-    public int testHeapLoopGetShortSwap() {\n-        int r = 0;\n+    public short testHeapLoopGetShortSwap() {\n+        short r = 0;\n@@ -379,2 +379,2 @@\n-    public int testHeapLoopGetShortRO() {\n-        int r = 0;\n+    public short testHeapLoopGetShortRO() {\n+        short r = 0;\n@@ -397,2 +397,2 @@\n-    public int testHeapLoopGetShort() {\n-        int r = 0;\n+    public short testHeapLoopGetShort() {\n+        short r = 0;\n@@ -408,2 +408,2 @@\n-    public int testDirectLoopGetShortSwapRO() {\n-        int r = 0;\n+    public short testDirectLoopGetShortSwapRO() {\n+        short r = 0;\n@@ -426,2 +426,2 @@\n-    public int testDirectLoopGetShortSwap() {\n-        int r = 0;\n+    public short testDirectLoopGetShortSwap() {\n+        short r = 0;\n@@ -437,2 +437,2 @@\n-    public int testDirectLoopGetShortRO() {\n-        int r = 0;\n+    public short testDirectLoopGetShortRO() {\n+        short r = 0;\n@@ -455,2 +455,2 @@\n-    public int testDirectLoopGetShort() {\n-        int r = 0;\n+    public short testDirectLoopGetShort() {\n+        short r = 0;\n@@ -582,2 +582,2 @@\n-    public int testHeapLoopGetLongSwapRO() {\n-        int r = 0;\n+    public long testHeapLoopGetLongSwapRO() {\n+        long r = 0;\n@@ -600,2 +600,2 @@\n-    public int testHeapLoopGetLongSwap() {\n-        int r = 0;\n+    public long testHeapLoopGetLongSwap() {\n+        long r = 0;\n@@ -611,2 +611,2 @@\n-    public int testHeapLoopGetLongRO() {\n-        int r = 0;\n+    public long testHeapLoopGetLongRO() {\n+        long r = 0;\n@@ -629,2 +629,2 @@\n-    public int testHeapLoopGetLong() {\n-        int r = 0;\n+    public long testHeapLoopGetLong() {\n+        long r = 0;\n@@ -640,2 +640,2 @@\n-    public int testDirectLoopGetLongSwapRO() {\n-        int r = 0;\n+    public long testDirectLoopGetLongSwapRO() {\n+        long r = 0;\n@@ -658,2 +658,2 @@\n-    public int testDirectLoopGetLongSwap() {\n-        int r = 0;\n+    public long testDirectLoopGetLongSwap() {\n+        long r = 0;\n@@ -669,2 +669,2 @@\n-    public int testDirectLoopGetLongRO() {\n-        int r = 0;\n+    public long testDirectLoopGetLongRO() {\n+        long r = 0;\n@@ -687,2 +687,2 @@\n-    public int testDirectLoopGetLong() {\n-        int r = 0;\n+    public long testDirectLoopGetLong() {\n+        long r = 0;\n@@ -698,2 +698,2 @@\n-    public int testHeapLoopGetFloatSwapRO() {\n-        int r = 0;\n+    public float testHeapLoopGetFloatSwapRO() {\n+        float r = 0;\n@@ -716,2 +716,2 @@\n-    public int testHeapLoopGetFloatSwap() {\n-        int r = 0;\n+    public float testHeapLoopGetFloatSwap() {\n+        float r = 0;\n@@ -727,2 +727,2 @@\n-    public int testHeapLoopGetFloatRO() {\n-        int r = 0;\n+    public float testHeapLoopGetFloatRO() {\n+        float r = 0;\n@@ -745,2 +745,2 @@\n-    public int testHeapLoopGetFloat() {\n-        int r = 0;\n+    public float testHeapLoopGetFloat() {\n+        float r = 0;\n@@ -756,2 +756,2 @@\n-    public int testDirectLoopGetFloatSwapRO() {\n-        int r = 0;\n+    public float testDirectLoopGetFloatSwapRO() {\n+        float r = 0;\n@@ -774,2 +774,2 @@\n-    public int testDirectLoopGetFloatSwap() {\n-        int r = 0;\n+    public float testDirectLoopGetFloatSwap() {\n+        float r = 0;\n@@ -785,2 +785,2 @@\n-    public int testDirectLoopGetFloatRO() {\n-        int r = 0;\n+    public float testDirectLoopGetFloatRO() {\n+        float r = 0;\n@@ -803,2 +803,2 @@\n-    public int testDirectLoopGetFloat() {\n-        int r = 0;\n+    public float testDirectLoopGetFloat() {\n+        float r = 0;\n@@ -814,2 +814,2 @@\n-    public int testHeapLoopGetDoubleSwapRO() {\n-        int r = 0;\n+    public double testHeapLoopGetDoubleSwapRO() {\n+        double r = 0;\n@@ -832,2 +832,2 @@\n-    public int testHeapLoopGetDoubleSwap() {\n-        int r = 0;\n+    public double testHeapLoopGetDoubleSwap() {\n+        double r = 0;\n@@ -843,2 +843,2 @@\n-    public int testHeapLoopGetDoubleRO() {\n-        int r = 0;\n+    public double testHeapLoopGetDoubleRO() {\n+        double r = 0;\n@@ -861,2 +861,2 @@\n-    public int testHeapLoopGetDouble() {\n-        int r = 0;\n+    public double testHeapLoopGetDouble() {\n+        double r = 0;\n@@ -872,2 +872,2 @@\n-    public int testDirectLoopGetDoubleSwapRO() {\n-        int r = 0;\n+    public double testDirectLoopGetDoubleSwapRO() {\n+        double r = 0;\n@@ -890,2 +890,2 @@\n-    public int testDirectLoopGetDoubleSwap() {\n-        int r = 0;\n+    public double testDirectLoopGetDoubleSwap() {\n+        double r = 0;\n@@ -901,2 +901,2 @@\n-    public int testDirectLoopGetDoubleRO() {\n-        int r = 0;\n+    public double testDirectLoopGetDoubleRO() {\n+        double r = 0;\n@@ -919,2 +919,2 @@\n-    public int testDirectLoopGetDouble() {\n-        int r = 0;\n+    public double testDirectLoopGetDouble() {\n+        double r = 0;\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/nio\/ByteBuffers.java","additions":97,"deletions":97,"binary":false,"changes":194,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -104,2 +104,2 @@\n-    private int innerLoopGetChar(CharBuffer buf) {\n-        int r = 0;\n+    private char innerLoopGetChar(CharBuffer buf) {\n+        char r = 0;\n@@ -138,1 +138,1 @@\n-    public int testHeapLoopGetChar() {\n+    public char testHeapLoopGetChar() {\n@@ -151,1 +151,1 @@\n-    public int testHeapLoopGetCharViewSwapRO() {\n+    public char testHeapLoopGetCharViewSwapRO() {\n@@ -175,1 +175,1 @@\n-    public int testHeapLoopGetCharViewSwap() {\n+    public char testHeapLoopGetCharViewSwap() {\n@@ -188,1 +188,1 @@\n-    public int testHeapLoopGetCharViewRO() {\n+    public char testHeapLoopGetCharViewRO() {\n@@ -212,1 +212,1 @@\n-    public int testHeapLoopGetCharView() {\n+    public char testHeapLoopGetCharView() {\n@@ -225,1 +225,1 @@\n-    public int testDirectLoopGetCharViewSwapRO() {\n+    public char testDirectLoopGetCharViewSwapRO() {\n@@ -249,1 +249,1 @@\n-    public int testDirectLoopGetCharViewSwap() {\n+    public char testDirectLoopGetCharViewSwap() {\n@@ -262,1 +262,1 @@\n-    public int testDirectLoopGetCharViewRO() {\n+    public char testDirectLoopGetCharViewRO() {\n@@ -286,1 +286,1 @@\n-    public int testDirectLoopGetCharView() {\n+    public char testDirectLoopGetCharView() {\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/nio\/CharBuffers.java","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -104,2 +104,2 @@\n-    private int innerLoopGetDouble(DoubleBuffer buf) {\n-        int r = 0;\n+    private double innerLoopGetDouble(DoubleBuffer buf) {\n+        double r = 0;\n@@ -138,1 +138,1 @@\n-    public int testHeapLoopGetDouble() {\n+    public double testHeapLoopGetDouble() {\n@@ -151,1 +151,1 @@\n-    public int testHeapLoopGetDoubleViewSwapRO() {\n+    public double testHeapLoopGetDoubleViewSwapRO() {\n@@ -175,1 +175,1 @@\n-    public int testHeapLoopGetDoubleViewSwap() {\n+    public double testHeapLoopGetDoubleViewSwap() {\n@@ -188,1 +188,1 @@\n-    public int testHeapLoopGetDoubleViewRO() {\n+    public double testHeapLoopGetDoubleViewRO() {\n@@ -212,1 +212,1 @@\n-    public int testHeapLoopGetDoubleView() {\n+    public double testHeapLoopGetDoubleView() {\n@@ -225,1 +225,1 @@\n-    public int testDirectLoopGetDoubleViewSwapRO() {\n+    public double testDirectLoopGetDoubleViewSwapRO() {\n@@ -249,1 +249,1 @@\n-    public int testDirectLoopGetDoubleViewSwap() {\n+    public double testDirectLoopGetDoubleViewSwap() {\n@@ -262,1 +262,1 @@\n-    public int testDirectLoopGetDoubleViewRO() {\n+    public double testDirectLoopGetDoubleViewRO() {\n@@ -286,1 +286,1 @@\n-    public int testDirectLoopGetDoubleView() {\n+    public double testDirectLoopGetDoubleView() {\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/nio\/DoubleBuffers.java","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -104,2 +104,2 @@\n-    private int innerLoopGetFloat(FloatBuffer buf) {\n-        int r = 0;\n+    private float innerLoopGetFloat(FloatBuffer buf) {\n+        float r = 0;\n@@ -138,1 +138,1 @@\n-    public int testHeapLoopGetFloat() {\n+    public float testHeapLoopGetFloat() {\n@@ -151,1 +151,1 @@\n-    public int testHeapLoopGetFloatViewSwapRO() {\n+    public float testHeapLoopGetFloatViewSwapRO() {\n@@ -175,1 +175,1 @@\n-    public int testHeapLoopGetFloatViewSwap() {\n+    public float testHeapLoopGetFloatViewSwap() {\n@@ -188,1 +188,1 @@\n-    public int testHeapLoopGetFloatViewRO() {\n+    public float testHeapLoopGetFloatViewRO() {\n@@ -212,1 +212,1 @@\n-    public int testHeapLoopGetFloatView() {\n+    public float testHeapLoopGetFloatView() {\n@@ -225,1 +225,1 @@\n-    public int testDirectLoopGetFloatViewSwapRO() {\n+    public float testDirectLoopGetFloatViewSwapRO() {\n@@ -249,1 +249,1 @@\n-    public int testDirectLoopGetFloatViewSwap() {\n+    public float testDirectLoopGetFloatViewSwap() {\n@@ -262,1 +262,1 @@\n-    public int testDirectLoopGetFloatViewRO() {\n+    public float testDirectLoopGetFloatViewRO() {\n@@ -286,1 +286,1 @@\n-    public int testDirectLoopGetFloatView() {\n+    public float testDirectLoopGetFloatView() {\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/nio\/FloatBuffers.java","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/nio\/IntBuffers.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -104,2 +104,2 @@\n-    private int innerLoopGetLong(LongBuffer buf) {\n-        int r = 0;\n+    private long innerLoopGetLong(LongBuffer buf) {\n+        long r = 0;\n@@ -138,1 +138,1 @@\n-    public int testHeapLoopGetLong() {\n+    public long testHeapLoopGetLong() {\n@@ -151,1 +151,1 @@\n-    public int testHeapLoopGetLongViewSwapRO() {\n+    public long testHeapLoopGetLongViewSwapRO() {\n@@ -175,1 +175,1 @@\n-    public int testHeapLoopGetLongViewSwap() {\n+    public long testHeapLoopGetLongViewSwap() {\n@@ -188,1 +188,1 @@\n-    public int testHeapLoopGetLongViewRO() {\n+    public long testHeapLoopGetLongViewRO() {\n@@ -212,1 +212,1 @@\n-    public int testHeapLoopGetLongView() {\n+    public long testHeapLoopGetLongView() {\n@@ -225,1 +225,1 @@\n-    public int testDirectLoopGetLongViewSwapRO() {\n+    public long testDirectLoopGetLongViewSwapRO() {\n@@ -249,1 +249,1 @@\n-    public int testDirectLoopGetLongViewSwap() {\n+    public long testDirectLoopGetLongViewSwap() {\n@@ -262,1 +262,1 @@\n-    public int testDirectLoopGetLongViewRO() {\n+    public long testDirectLoopGetLongViewRO() {\n@@ -286,1 +286,1 @@\n-    public int testDirectLoopGetLongView() {\n+    public long testDirectLoopGetLongView() {\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/nio\/LongBuffers.java","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -104,2 +104,2 @@\n-    private int innerLoopGetShort(ShortBuffer buf) {\n-        int r = 0;\n+    private short innerLoopGetShort(ShortBuffer buf) {\n+        short r = 0;\n@@ -138,1 +138,1 @@\n-    public int testHeapLoopGetShort() {\n+    public short testHeapLoopGetShort() {\n@@ -151,1 +151,1 @@\n-    public int testHeapLoopGetShortViewSwapRO() {\n+    public short testHeapLoopGetShortViewSwapRO() {\n@@ -175,1 +175,1 @@\n-    public int testHeapLoopGetShortViewSwap() {\n+    public short testHeapLoopGetShortViewSwap() {\n@@ -188,1 +188,1 @@\n-    public int testHeapLoopGetShortViewRO() {\n+    public short testHeapLoopGetShortViewRO() {\n@@ -212,1 +212,1 @@\n-    public int testHeapLoopGetShortView() {\n+    public short testHeapLoopGetShortView() {\n@@ -225,1 +225,1 @@\n-    public int testDirectLoopGetShortViewSwapRO() {\n+    public short testDirectLoopGetShortViewSwapRO() {\n@@ -249,1 +249,1 @@\n-    public int testDirectLoopGetShortViewSwap() {\n+    public short testDirectLoopGetShortViewSwap() {\n@@ -262,1 +262,1 @@\n-    public int testDirectLoopGetShortViewRO() {\n+    public short testDirectLoopGetShortViewRO() {\n@@ -286,1 +286,1 @@\n-    public int testDirectLoopGetShortView() {\n+    public short testDirectLoopGetShortView() {\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/nio\/ShortBuffers.java","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -56,1 +56,1 @@\n-    public int test$Ms$LoopGet$Type${#if[view]?View}$SWAP$$RO$() {\n+    public $type$ test$Ms$LoopGet$Type${#if[view]?View}$SWAP$$RO$() {\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/nio\/X-Buffers-bin.java.template","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -136,2 +136,2 @@\n-    private int innerLoopGet$Type$($Type$Buffer buf) {\n-        int r = 0;\n+    private $type$ innerLoopGet$Type$($Type$Buffer buf) {\n+        $type$ r = 0;\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/nio\/X-Buffers.java.template","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,2 +43,2 @@\n-    public int test$Ms$LoopGet$Type$$SWAP$$RO$() {\n-        int r = 0;\n+    public $type$ test$Ms$LoopGet$Type$$SWAP$$RO$() {\n+        $type$ r = 0;\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/nio\/X-ByteBuffers-bin.java.template","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -72,1 +72,1 @@\n-        iv[0] ^= 0xFF;\n+        iv[0] ^= (byte)0xFF;\n","filename":"test\/micro\/org\/openjdk\/bench\/javax\/crypto\/full\/CipherBench.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-  * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+  * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -148,2 +148,2 @@\n-    public int test() {\n-        int sum = 0;\n+    public long test() {\n+        long sum = 0;\n@@ -157,2 +157,2 @@\n-    public int testFlat() {\n-        int sum = 0;\n+    public long testFlat() {\n+        long sum = 0;\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/PointerBenchmarkFlat.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -123,2 +123,2 @@\n-    public int testStraighten1long() throws Exception {\n-        int dummy = 0;\n+    public long testStraighten1long() throws Exception {\n+        long dummy = 0;\n@@ -185,2 +185,2 @@\n-    public int testStraighten2long() throws Exception {\n-        int dummy = 0;\n+    public long testStraighten2long() throws Exception {\n+        long dummy = 0;\n@@ -239,2 +239,2 @@\n-    public int testStraighten3long() throws Exception {\n-        int dummy = 0;\n+    public long testStraighten3long() throws Exception {\n+        long dummy = 0;\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/Straighten.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"}]}