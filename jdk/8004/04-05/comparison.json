{"files":[{"patch":"@@ -132,1 +132,3 @@\n-            printButton.setEnabled(false);\n+            System.out.println(\"Printer not configured or available.\"\n+                    + \" Test cannot continue.\");\n+            PassFailJFrame.forcePass();\n@@ -161,2 +163,1 @@\n-        PassFailJFrame passFailJFrame = new PassFailJFrame(\"Test Instruction\" +\n-                \"Frame\", INSTRUCTIONS, 10, 40, 5);\n+        PassFailJFrame passFailJFrame = new PassFailJFrame(INSTRUCTIONS);\n","filename":"test\/jdk\/java\/awt\/print\/PrinterJob\/PrintGlyphVectorTest.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -51,0 +51,4 @@\n+    private static final int ROWS = 10;\n+    private static final int COLUMNS = 40;\n+    private static final long TEST_TIMEOUT = 5;\n+    private static final String TITLE = \"Test Instruction Frame\";\n@@ -60,0 +64,16 @@\n+    public PassFailJFrame(String instructions) throws InterruptedException,\n+            InvocationTargetException {\n+        this(instructions, TEST_TIMEOUT);\n+    }\n+\n+    public PassFailJFrame(String instructions, long testTimeOut) throws\n+            InterruptedException, InvocationTargetException {\n+        this(TITLE, instructions, testTimeOut);\n+    }\n+\n+    public PassFailJFrame(String title, String instructions,\n+                          long testTimeOut) throws InterruptedException,\n+            InvocationTargetException {\n+        this(title, instructions, testTimeOut, ROWS, COLUMNS);\n+    }\n+\n@@ -69,1 +89,3 @@\n-     * @param instructions         specified instruction that user should follow.\n+     * @param instructions         instruction for the tester on how to test and what\n+     *                             is expected (pass) and what is not expected (fail).\n+     * @param testTimeOutInMinutes test timeout where time is specified in minutes.\n@@ -74,5 +96,3 @@\n-     * @param testTimeOutInMinutes timeout of the test where time is specified in\n-     *                             minutes.\n-     * @throws HeadlessException         HeadlessException\n-     * @throws InterruptedException      exception thrown for invokeAndWait\n-     * @throws InvocationTargetException exception thrown for invokeAndWait\n+     * @throws InterruptedException      exception thrown when thread is\n+     *                                   interrupted\n+     * @throws InvocationTargetException exception thrown while creating UI\n@@ -80,5 +100,3 @@\n-    public PassFailJFrame(String title, String instructions,\n-                          int rows, int columns,\n-                          int testTimeOutInMinutes) throws HeadlessException,\n-            InterruptedException, InvocationTargetException {\n-\n+    public PassFailJFrame(String title, String instructions, long testTimeOutInMinutes,\n+                          int rows, int columns) throws InterruptedException,\n+            InvocationTargetException {\n@@ -86,1 +104,1 @@\n-            createUI(title, instructions, rows, columns, testTimeOutInMinutes);\n+            createUI(title, instructions, testTimeOutInMinutes, rows, columns);\n@@ -88,2 +106,2 @@\n-            invokeAndWait(() -> createUI(title, instructions, rows, columns,\n-                    testTimeOutInMinutes));\n+            invokeAndWait(() -> createUI(title, instructions, testTimeOutInMinutes,\n+                    rows, columns));\n@@ -94,2 +112,1 @@\n-                                 int rows, int columns,\n-                                 int timeoutInMinutes) {\n+                                 long testTimeOutInMinutes, int rows, int columns) {\n@@ -102,1 +119,1 @@\n-        long testTimeout = TimeUnit.MINUTES.toMillis(timeoutInMinutes);\n+        long testTimeout = TimeUnit.MINUTES.toMillis(testTimeOutInMinutes);\n@@ -174,2 +191,3 @@\n-     * @throws InterruptedException      if the thread is interrupted\n-     * @throws InvocationTargetException exception thrown for invokeAndWait\n+     * @throws InterruptedException      exception thrown when thread is\n+     *                                   interrupted\n+     * @throws InvocationTargetException exception thrown while creating UI\n@@ -275,0 +293,22 @@\n+\n+    \/**\n+     * Forcibly pass the test.\n+     * <p>The sample usage:\n+     * <pre><code>\n+     *      PrinterJob pj = PrinterJob.getPrinterJob();\n+     *      if (pj == null || pj.getPrintService() == null) {\n+     *          System.out.println(\"\"Printer not configured or available.\");\n+     *          PassFailJFrame.forcePass();\n+     *      }\n+     * <\/code><\/pre>\n+     *\/\n+    public static void forcePass() {\n+        latch.countDown();\n+    }\n+\n+    \/**\n+     *  Forcibly pass the test.\n+     *\/\n+    public static void forceFail() {\n+        latch.countDown();\n+    }\n","filename":"test\/jdk\/java\/awt\/regtesthelpers\/PassFailJFrame.java","additions":59,"deletions":19,"binary":false,"changes":78,"status":"modified"}]}