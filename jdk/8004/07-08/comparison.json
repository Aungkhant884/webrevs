{"files":[{"patch":"@@ -124,5 +124,0 @@\n-        Frame f = new Frame(\"Test PrintGlyphVector\");\n-        PrintGlyphVectorTest pvt = new PrintGlyphVectorTest();\n-        f.add(pvt, BorderLayout.CENTER);\n-\n-        Button printButton = new Button(\"PRINT\");\n@@ -130,1 +125,1 @@\n-        if (pj == null || pj.getPrintService() == null) {\n+        if (pj.getPrintService() == null) {\n@@ -136,0 +131,5 @@\n+        Frame f = new Frame(\"Test PrintGlyphVector\");\n+        PrintGlyphVectorTest pvt = new PrintGlyphVectorTest();\n+        f.add(pvt, BorderLayout.CENTER);\n+\n+        Button printButton = new Button(\"PRINT\");\n","filename":"test\/jdk\/java\/awt\/print\/PrinterJob\/PrintGlyphVectorTest.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -27,1 +27,0 @@\n-import java.awt.HeadlessException;\n@@ -50,1 +49,2 @@\n-    private final static CountDownLatch latch = new CountDownLatch(1);\n+    private static final String TITLE = \"Test Instruction Frame\";\n+    private static final long TEST_TIMEOUT = 5;\n@@ -53,2 +53,5 @@\n-    private static final long TEST_TIMEOUT = 5;\n-    private static final String TITLE = \"Test Instruction Frame\";\n+\n+    private static final List<Frame> frameList = new ArrayList<>();\n+    private static final Timer timer = new Timer(0, null);\n+    private static final CountDownLatch latch = new CountDownLatch(1);\n+\n@@ -59,2 +62,0 @@\n-    private static final List<Frame> frameList = new ArrayList<>();\n-    private static final Timer timer = new Timer(0, null);\n@@ -88,8 +89,9 @@\n-     * @param title                title of the Frame.\n-     * @param instructions         instruction for the tester on how to test and what\n-     *                             is expected (pass) and what is not expected (fail).\n-     * @param testTimeOutInMinutes test timeout where time is specified in minutes.\n-     * @param rows                 number of visible rows of the JTextArea where the\n-     *                             instruction is show.\n-     * @param columns              Number of columns of the instructional\n-     *                             JTextArea\n+     * @param title        title of the Frame.\n+     * @param instructions the instruction for the tester on how to test\n+     *                     and what is expected (pass) and what is not\n+     *                     expected (fail).\n+     * @param testTimeOut  test timeout where time is specified in minutes.\n+     * @param rows         number of visible rows of the JTextArea where the\n+     *                     instruction is show.\n+     * @param columns      Number of columns of the instructional\n+     *                     JTextArea\n@@ -98,1 +100,3 @@\n-     * @throws InvocationTargetException exception thrown while creating UI\n+     * @throws InvocationTargetException if an exception is thrown while\n+     *                                   creating the test instruction frame on\n+     *                                   EDT\n@@ -100,1 +104,1 @@\n-    public PassFailJFrame(String title, String instructions, long testTimeOutInMinutes,\n+    public PassFailJFrame(String title, String instructions, long testTimeOut,\n@@ -104,1 +108,1 @@\n-            createUI(title, instructions, testTimeOutInMinutes, rows, columns);\n+            createUI(title, instructions, testTimeOut, rows, columns);\n@@ -106,1 +110,1 @@\n-            invokeAndWait(() -> createUI(title, instructions, testTimeOutInMinutes,\n+            invokeAndWait(() -> createUI(title, instructions, testTimeOut,\n@@ -112,1 +116,1 @@\n-                                 long testTimeOutInMinutes, int rows, int columns) {\n+                                 long testTimeOut, int rows, int columns) {\n@@ -119,1 +123,1 @@\n-        long testTimeout = TimeUnit.MINUTES.toMillis(testTimeOutInMinutes);\n+        long tTimeout = TimeUnit.MINUTES.toMillis(testTimeOut);\n@@ -122,1 +126,1 @@\n-                \"timeout: %s\", convertMillisToTimeStr(testTimeout)), JLabel.CENTER);\n+                \"timeout: %s\", convertMillisToTimeStr(tTimeout)), JLabel.CENTER);\n@@ -126,1 +130,1 @@\n-            long leftTime = testTimeout - (System.currentTimeMillis() - startTime);\n+            long leftTime = tTimeout - (System.currentTimeMillis() - startTime);\n@@ -171,1 +175,0 @@\n-\n@@ -193,1 +196,2 @@\n-     * @throws InvocationTargetException exception thrown while creating UI\n+     * @throws InvocationTargetException if an exception is thrown while\n+     *                                   disposing frames on EDT\n@@ -313,0 +317,1 @@\n+        failed = true;\n","filename":"test\/jdk\/java\/awt\/regtesthelpers\/PassFailJFrame.java","additions":29,"deletions":24,"binary":false,"changes":53,"status":"modified"}]}