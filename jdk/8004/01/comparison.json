{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n- * @run main\/manual=yesno PrintGlyphVectorTest\n+ * @run main\/manual PrintGlyphVectorTest\n@@ -31,6 +31,22 @@\n-import java.io.*;\n-import java.awt.*;\n-import java.awt.event.*;\n-import java.awt.font.*;\n-import java.awt.geom.*;\n-import java.awt.print.*;\n+import java.awt.BorderLayout;\n+import java.awt.Button;\n+import java.awt.Color;\n+import java.awt.Component;\n+import java.awt.Dialog;\n+import java.awt.Dimension;\n+import java.awt.Font;\n+import java.awt.Frame;\n+import java.awt.Graphics;\n+import java.awt.Graphics2D;\n+import java.awt.Panel;\n+import java.awt.TextArea;\n+import java.awt.font.FontRenderContext;\n+import java.awt.font.GlyphVector;\n+import java.awt.geom.Point2D;\n+import java.awt.geom.Rectangle2D;\n+import java.awt.print.PageFormat;\n+import java.awt.print.Printable;\n+import java.awt.print.PrinterException;\n+import java.awt.print.PrinterJob;\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.TimeUnit;\n@@ -49,3 +65,1 @@\n-\n-        float x = 50f,\n-              y = 50f;\n+        float x = 50f, y = 50f;\n@@ -72,3 +86,0 @@\n-\n-\n-\n@@ -77,5 +88,5 @@\n-     public void paint(Graphics g) {\n-       g.setColor(Color.white);\n-       g.fillRect(0,0,getSize().width, getSize().height);\n-       drawGVs(g);\n-     }\n+    public void paint(Graphics g) {\n+        g.setColor(Color.white);\n+        g.fillRect(0,0,getSize().width, getSize().height);\n+        drawGVs(g);\n+    }\n@@ -103,7 +114,8 @@\n-       Frame f = new Frame();\n-       PrintGlyphVectorTest pvt = new PrintGlyphVectorTest();\n-       f.add(\"Center\", pvt);\n-       f.add(\"South\", new PrintInstructions());\n-       f.pack();\n-       f.show();\n-\n+        Frame f = new Frame();\n+        PrintInstructions printInstructions = new PrintInstructions(f);\n+        PrintGlyphVectorTest pvt = new PrintGlyphVectorTest();\n+        f.add(\"Center\", pvt);\n+        f.add(\"South\", printInstructions);\n+        f.setLocationRelativeTo(null);\n+        f.pack();\n+        f.setVisible(true);\n@@ -111,0 +123,1 @@\n+        printInstructions.awaitAndCheck();\n@@ -114,35 +127,50 @@\n-class PrintInstructions extends Panel implements ActionListener {\n-\n-   static final String INSTRUCTIONS =\n-       \"You must have a printer installed for this test.\\n\" +\n-       \"Press the PRINT button below and OK the print dialog\\n\" +\n-       \"Retrieve the output and compare the printed and on-screen text\\n\" +\n-       \" to confirm that in both cases the text is aligned and the boxes\\n\" +\n-       \"are around the text, not offset from the text.\";\n-\n-  PrintInstructions() {\n-\n-     setLayout(new GridLayout(2,1));\n-     TextArea t = new TextArea(INSTRUCTIONS, 8, 80);\n-     add(t);\n-     Button b = new Button(\"PRINT\");\n-     b.setFont(new Font(\"Dialog\", Font.BOLD, 30));\n-     b.addActionListener(this);\n-     add(b);\n-  }\n-\n-  public void actionPerformed(ActionEvent e) {\n-       PrinterJob pj = PrinterJob.getPrinterJob();\n-       if (pj == null ||\n-           pj.getPrintService() == null ||\n-           !pj.printDialog()) {\n-           return;\n-       }\n-\n-       pj.setPrintable(new PrintGlyphVectorTest());\n-       try {\n-           pj.print();\n-       } catch (PrinterException ex) {\n-           System.err.println(ex);\n-       }\n-  }\n+class PrintInstructions extends Panel {\n+\n+    private final static CountDownLatch countDownLatch = new CountDownLatch(1);\n+    private Frame frame;\n+    private volatile boolean failed = false;\n+    private volatile String testFailedReason;\n+    static final String INSTRUCTIONS =\n+            \"You must have a printer installed for this test.\\n\" +\n+                    \"Press the PRINT button below and OK the print dialog\\n\" +\n+                    \"Retrieve the output and compare the printed and on-screen text\\n\" +\n+                    \" to confirm that in both cases the text is aligned and the boxes\\n\" +\n+                    \"are around the text, not offset from the text.\";\n+\n+    PrintInstructions(Frame frame) {\n+        this.frame = frame;\n+        setLayout(new BorderLayout());\n+        TextArea t = new TextArea(INSTRUCTIONS, 8, 80);\n+        add(t, BorderLayout.CENTER);\n+\n+        Panel buttonPanel = new Panel();\n+        Button printButton = new Button(\"PRINT\");\n+        printButton.addActionListener((ae) -> showPrintDialog());\n+\n+        Button passButton = new Button(\"Pass\");\n+        passButton.addActionListener((ae) -> countDownLatch.countDown());\n+\n+        Button failButton = new Button(\"Fail\");\n+        failButton.addActionListener((ae) -> getFailureReason());\n+\n+        buttonPanel.add(printButton);\n+        buttonPanel.add(passButton);\n+        buttonPanel.add(failButton);\n+        add(buttonPanel, BorderLayout.SOUTH);\n+    }\n+\n+    private void showPrintDialog() {\n+        PrinterJob pj = PrinterJob.getPrinterJob();\n+        if (pj == null ||\n+                pj.getPrintService() == null ||\n+                !pj.printDialog()) {\n+            return;\n+        }\n+\n+        pj.setPrintable(new PrintGlyphVectorTest());\n+        try {\n+            pj.print();\n+        } catch (PrinterException ex) {\n+            System.err.println(ex);\n+        }\n+    }\n@@ -150,0 +178,34 @@\n+    public void awaitAndCheck() throws InterruptedException {\n+        boolean timeoutHappened = !countDownLatch.await(5,\n+                TimeUnit.MINUTES);\n+\n+        if (timeoutHappened) {\n+            throw new RuntimeException(\"Test timed out!\");\n+        }\n+        if (failed) {\n+            throw new RuntimeException(\"Test failed! : \" + testFailedReason);\n+        }\n+    }\n+\n+    private void getFailureReason() {\n+        final Dialog dialog = new Dialog(this.frame);\n+        dialog.setTitle(\"Failure reason\");\n+\n+        Panel panel = new Panel(new BorderLayout());\n+        TextArea textArea = new TextArea(5, 40);\n+\n+        Button okButton = new Button(\"Ok\");\n+        okButton.addActionListener((ae) -> {\n+            testFailedReason = textArea.getText();\n+            dialog.dispose();\n+            failed = true;\n+            countDownLatch.countDown();\n+        });\n+\n+        panel.add(textArea, BorderLayout.CENTER);\n+        panel.add(okButton, BorderLayout.SOUTH);\n+        dialog.add(panel);\n+        dialog.setLocationRelativeTo(null);\n+        dialog.pack();\n+        dialog.setVisible(true);\n+    }\n","filename":"test\/jdk\/java\/awt\/print\/PrinterJob\/PrintGlyphVectorTest.java","additions":123,"deletions":61,"binary":false,"changes":184,"status":"modified"}]}