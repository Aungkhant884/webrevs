{"files":[{"patch":"@@ -40,1 +40,1 @@\n-import java.io.IOException;\n+import java.io.*;\n@@ -55,0 +55,1 @@\n+        println(\"check\");\n@@ -60,0 +61,18 @@\n+    static PrintStream p;\n+    static boolean inited = false;\n+\n+    static void init() {\n+        if (inited)\n+            return;\n+        try {\n+            FileOutputStream f = new FileOutputStream(\"statetest.txt\", true);\n+            p = new PrintStream(f);\n+        } catch (Exception e) {}\n+        inited = true;\n+    }\n+\n+    static void println(String msg) {\n+        init();\n+        p.println(msg);\n+    }\n+\n@@ -61,0 +80,1 @@\n+        println(\"REPLYING: \"  + msg);\n@@ -70,7 +90,0 @@\n-        if (args.length == 0) {\n-            System.err.println(\"Usage: StateTestService [reply-port]\");\n-            return;\n-        }\n-        reply_port = Integer.parseInt(args[0]);\n-\n-        Channel c = null;\n@@ -78,8 +91,5 @@\n-            c = System.inheritedChannel();\n-        } catch (SecurityException se) {\n-            \/\/ ignore\n-        }\n-        if (c == null) {\n-            reply(\"FAILED\");\n-            return;\n-        }\n+            if (args.length == 0) {\n+                System.err.println(\"Usage: StateTestService [reply-port]\");\n+                return;\n+            }\n+            reply_port = Integer.parseInt(args[0]);\n@@ -87,6 +97,11 @@\n-        if (c instanceof SocketChannel) {\n-            SocketChannel sc = (SocketChannel)c;\n-            check( sc.isBlocking() );\n-            check( sc.socket().isBound() );\n-            check( sc.socket().isConnected() );\n-        }\n+            Channel c = null;\n+            try {\n+                c = System.inheritedChannel();\n+            } catch (SecurityException se) {\n+                \/\/ ignore\n+            }\n+            if (c == null) {\n+                println(\"c == null\");\n+                reply(\"FAILED\");\n+                return;\n+            }\n@@ -94,5 +109,6 @@\n-        if (c instanceof ServerSocketChannel) {\n-            ServerSocketChannel ssc = (ServerSocketChannel)c;\n-            check( ssc.isBlocking() );\n-            check( ssc.socket().isBound() );\n-        }\n+            if (c instanceof SocketChannel) {\n+                SocketChannel sc = (SocketChannel)c;\n+                check( sc.isBlocking() );\n+                check( sc.socket().isBound() );\n+                check( sc.socket().isConnected() );\n+            }\n@@ -100,5 +116,5 @@\n-        if (c instanceof DatagramChannel) {\n-            DatagramChannel dc = (DatagramChannel)c;\n-            check( dc.isBlocking() );\n-            check( dc.socket().isBound() );\n-        }\n+            if (c instanceof ServerSocketChannel) {\n+                ServerSocketChannel ssc = (ServerSocketChannel)c;\n+                check( ssc.isBlocking() );\n+                check( ssc.socket().isBound() );\n+            }\n@@ -106,5 +122,5 @@\n-        if (failed) {\n-            reply(\"FAILED\");\n-        } else {\n-            reply(\"PASSED\");\n-        }\n+            if (c instanceof DatagramChannel) {\n+                DatagramChannel dc = (DatagramChannel)c;\n+                check( dc.isBlocking() );\n+                check( dc.socket().isBound() );\n+            }\n@@ -112,0 +128,9 @@\n+            if (failed) {\n+                reply(\"FAILED\");\n+            } else {\n+                reply(\"PASSED\");\n+            }\n+        } catch (Throwable t) {\n+            t.printStackTrace(p);\n+            throw t;\n+        }\n@@ -113,1 +138,0 @@\n-\n","filename":"test\/jdk\/java\/nio\/channels\/spi\/SelectorProvider\/inheritedChannel\/StateTestService.java","additions":62,"deletions":38,"binary":false,"changes":100,"status":"modified"},{"patch":"@@ -11,0 +11,1 @@\n+    permission java.io.FilePermission \"statetest.txt\", \"read,write\";\n","filename":"test\/jdk\/java\/nio\/channels\/spi\/SelectorProvider\/inheritedChannel\/java.policy.fail","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -11,0 +11,1 @@\n+    permission java.io.FilePermission \"statetest.txt\", \"read,write\";\n","filename":"test\/jdk\/java\/nio\/channels\/spi\/SelectorProvider\/inheritedChannel\/java.policy.pass","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}