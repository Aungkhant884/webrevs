{"files":[{"patch":"@@ -62,1 +62,2 @@\n-    private static final String TEST_CLASSES = System.getProperty(\"test.class.path\");\n+    private static final String TEST_CLASSPATH = System.getProperty(\"test.class.path\");\n+    private static final String TEST_CLASSES = System.getProperty(\"test.classes\");\n@@ -79,1 +80,1 @@\n-            { \"StateTest\", List.of(StateTest.class.getName()) },\n+            { \"StateTest\", List.of(StateTest.class.getName(), \"-Dtest.classes=\"+TEST_CLASSES)},\n@@ -88,1 +89,0 @@\n-\n@@ -91,0 +91,1 @@\n+                                                           \"-Dtest.classes=\" + TEST_CLASSES,\n@@ -97,0 +98,1 @@\n+                                                           \"-Dtest.classes=\" + TEST_CLASSES,\n@@ -118,1 +120,1 @@\n-        env.put(\"CLASSPATH\", TEST_CLASSES);\n+        env.put(\"CLASSPATH\", TEST_CLASSPATH);\n","filename":"test\/jdk\/java\/nio\/channels\/spi\/SelectorProvider\/inheritedChannel\/InheritedChannelTest.java","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -41,0 +41,2 @@\n+import java.io.OutputStream;\n+import java.io.PrintStream;\n@@ -48,0 +50,6 @@\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+\n+import static java.nio.file.StandardOpenOption.APPEND;\n+import static java.nio.file.StandardOpenOption.WRITE;\n+import static java.nio.file.StandardOpenOption.CREATE;\n@@ -55,0 +63,1 @@\n+        println(\"check \" + okay);\n@@ -60,0 +69,21 @@\n+    static String logDir;\n+    static PrintStream out;\n+    static boolean initialized = false;\n+\n+    \/\/ Opens named log file in ${test.classes}\n+    static void initLogFile() {\n+        if (initialized)\n+            return;\n+\n+        try {\n+            OutputStream f = Files.newOutputStream(Path.of(logDir, \"statetest.txt\"), APPEND, CREATE);\n+            out = new PrintStream(f);\n+        } catch (Exception e) {}\n+        initialized = true;\n+    }\n+\n+    static void println(String msg) {\n+        initLogFile();\n+        out.println(msg);\n+    }\n+\n@@ -61,0 +91,1 @@\n+        println(\"REPLYING: \"  + msg);\n@@ -70,7 +101,0 @@\n-        if (args.length == 0) {\n-            System.err.println(\"Usage: StateTestService [reply-port]\");\n-            return;\n-        }\n-        reply_port = Integer.parseInt(args[0]);\n-\n-        Channel c = null;\n@@ -78,8 +102,6 @@\n-            c = System.inheritedChannel();\n-        } catch (SecurityException se) {\n-            \/\/ ignore\n-        }\n-        if (c == null) {\n-            reply(\"FAILED\");\n-            return;\n-        }\n+            if (args.length == 0) {\n+                System.err.println(\"Usage: StateTestService [reply-port]\");\n+                return;\n+            }\n+            reply_port = Integer.parseInt(args[0]);\n+            logDir = System.getProperty(\"test.classes\");\n@@ -87,6 +109,11 @@\n-        if (c instanceof SocketChannel) {\n-            SocketChannel sc = (SocketChannel)c;\n-            check( sc.isBlocking() );\n-            check( sc.socket().isBound() );\n-            check( sc.socket().isConnected() );\n-        }\n+            Channel c = null;\n+            try {\n+                c = System.inheritedChannel();\n+            } catch (SecurityException se) {\n+                \/\/ ignore\n+            }\n+            if (c == null) {\n+                println(\"c == null\");\n+                reply(\"FAILED\");\n+                return;\n+            }\n@@ -94,5 +121,6 @@\n-        if (c instanceof ServerSocketChannel) {\n-            ServerSocketChannel ssc = (ServerSocketChannel)c;\n-            check( ssc.isBlocking() );\n-            check( ssc.socket().isBound() );\n-        }\n+            if (c instanceof SocketChannel) {\n+                SocketChannel sc = (SocketChannel)c;\n+                check( sc.isBlocking() );\n+                check( sc.socket().isBound() );\n+                check( sc.socket().isConnected() );\n+            }\n@@ -100,5 +128,5 @@\n-        if (c instanceof DatagramChannel) {\n-            DatagramChannel dc = (DatagramChannel)c;\n-            check( dc.isBlocking() );\n-            check( dc.socket().isBound() );\n-        }\n+            if (c instanceof ServerSocketChannel) {\n+                ServerSocketChannel ssc = (ServerSocketChannel)c;\n+                check( ssc.isBlocking() );\n+                check( ssc.socket().isBound() );\n+            }\n@@ -106,5 +134,5 @@\n-        if (failed) {\n-            reply(\"FAILED\");\n-        } else {\n-            reply(\"PASSED\");\n-        }\n+            if (c instanceof DatagramChannel) {\n+                DatagramChannel dc = (DatagramChannel)c;\n+                check( dc.isBlocking() );\n+                check( dc.socket().isBound() );\n+            }\n@@ -112,0 +140,9 @@\n+            if (failed) {\n+                reply(\"FAILED\");\n+            } else {\n+                reply(\"PASSED\");\n+            }\n+        } catch (Throwable t) {\n+            t.printStackTrace(out);\n+            throw t;\n+        }\n@@ -113,1 +150,0 @@\n-\n","filename":"test\/jdk\/java\/nio\/channels\/spi\/SelectorProvider\/inheritedChannel\/StateTestService.java","additions":73,"deletions":37,"binary":false,"changes":110,"status":"modified"},{"patch":"@@ -2,2 +2,0 @@\n-\/\/\n-\/\/ \n@@ -11,0 +9,2 @@\n+    permission java.io.FilePermission \"${test.classes}${\/}statetest.txt\", \"read,write\";\n+    permission java.util.PropertyPermission \"test.classes\", \"read\";\n","filename":"test\/jdk\/java\/nio\/channels\/spi\/SelectorProvider\/inheritedChannel\/java.policy.fail","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,2 +2,0 @@\n-\/\/\n-\/\/ \n@@ -11,0 +9,2 @@\n+    permission java.io.FilePermission \"${test.classes}${\/}statetest.txt\", \"read,write\";\n+    permission java.util.PropertyPermission \"test.classes\", \"read\";\n","filename":"test\/jdk\/java\/nio\/channels\/spi\/SelectorProvider\/inheritedChannel\/java.policy.pass","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}