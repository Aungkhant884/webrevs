{"files":[{"patch":"@@ -36,1 +36,1 @@\n-@State(Scope.Benchmark)\n+@State(Scope.Thread)\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/io\/DataOutputStreamTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -64,1 +64,1 @@\n-@State(Scope.Benchmark)\n+@State(Scope.Thread)\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/ArrayCopyObject.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -63,1 +63,1 @@\n-@State(Scope.Benchmark)\n+@State(Scope.Thread)\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/ArrayFiddle.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -56,1 +56,1 @@\n-@State(Scope.Benchmark)\n+@State(Scope.Thread)\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/time\/format\/DateTimeFormatterBench.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n-@State(Scope.Benchmark)\n+@State(Scope.Thread)\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/IndexInRangeBenchmark.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n-@State(Scope.Benchmark)\n+@State(Scope.Thread)\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/IndexVectorBenchmark.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -49,1 +49,1 @@\n-@State(org.openjdk.jmh.annotations.Scope.Benchmark)\n+@State(org.openjdk.jmh.annotations.Scope.Thread)\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/MemorySegmentVectorAccess.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n-@State(Scope.Benchmark)\n+@State(Scope.Thread)\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/StoreMaskedBenchmark.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,1 +31,1 @@\n-@State(Scope.Benchmark)\n+@State(Scope.Thread)\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/StoreMaskedIOOBEBenchmark.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -55,1 +55,1 @@\n-    static float [] float_arr;\n+    private float [] float_arr;\n@@ -57,1 +57,1 @@\n-    static double [] double_arr;\n+    private double [] double_arr;\n@@ -59,1 +59,1 @@\n-    static long [] long_res;\n+    private long [] long_res;\n@@ -61,1 +61,1 @@\n-    static int [] int_res;\n+    private int [] int_res;\n@@ -63,1 +63,1 @@\n-    static short [] short_res;\n+    private short [] short_res;\n@@ -65,1 +65,1 @@\n-    static byte [] byte_res;\n+    private byte [] byte_res;\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/VectorFPtoIntCastOperations.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-@State(Scope.Benchmark)\n+@State(Scope.Thread)\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/ArrayFill.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,1 +31,1 @@\n-@State(Scope.Benchmark)\n+@State(Scope.Thread)\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/IndexVector.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}