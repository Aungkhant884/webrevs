{"files":[{"patch":"@@ -40,104 +40,4 @@\n-    public static void main(String[] args) throws Exception {\n-        SecurityException se = new SecurityException(cause);\n-        if (!se.getCause().equals(cause)) {\n-            throw new SecurityException(\"Test 1 failed\");\n-        }\n-        se = new SecurityException(MSG, cause);\n-        if (!se.getMessage().equals(MSG) || !se.getCause().equals(cause)) {\n-            throw new SecurityException(\"Test 1 failed\");\n-        }\n-\n-        DigestException de = new DigestException(cause);\n-        if (!de.getCause().equals(cause)) {\n-            throw new SecurityException(\"Test 2 failed\");\n-        }\n-        de = new DigestException(MSG, cause);\n-        if (!de.getMessage().equals(MSG) || !de.getCause().equals(cause)) {\n-            throw new SecurityException(\"Test 2 failed\");\n-        }\n-\n-        GeneralSecurityException gse = new GeneralSecurityException(cause);\n-        if (!gse.getCause().equals(cause)) {\n-            throw new SecurityException(\"Test 3 failed\");\n-        }\n-        gse = new GeneralSecurityException(MSG, cause);\n-        if (!gse.getMessage().equals(MSG) || !gse.getCause().equals(cause)) {\n-            throw new SecurityException(\"Test 3 failed\");\n-        }\n-\n-        InvalidAlgorithmParameterException iape =\n-                new InvalidAlgorithmParameterException(cause);\n-        if (!iape.getCause().equals(cause)) {\n-            throw new SecurityException(\"Test 4 failed\");\n-        }\n-        iape = new InvalidAlgorithmParameterException(MSG, cause);\n-        if (!iape.getMessage().equals(MSG) || !iape.getCause().equals(cause)) {\n-            throw new SecurityException(\"Test 4 failed\");\n-        }\n-\n-        InvalidKeyException ike = new InvalidKeyException(cause);\n-        if (!ike.getCause().equals(cause)) {\n-            throw new SecurityException(\"Test 5 failed\");\n-        }\n-        ike = new InvalidKeyException(MSG, cause);\n-        if (!ike.getMessage().equals(MSG) || !ike.getCause().equals(cause)) {\n-            throw new SecurityException(\"Test 5 failed\");\n-        }\n-\n-        InvalidKeySpecException ikse = new InvalidKeySpecException(cause);\n-        if (!ikse.getCause().equals(cause)) {\n-            throw new SecurityException(\"Test 6 failed\");\n-        }\n-        ikse = new InvalidKeySpecException(MSG, cause);\n-        if (!ikse.getMessage().equals(MSG) || !ikse.getCause().equals(cause)) {\n-            throw new SecurityException(\"Test 6 failed\");\n-        }\n-\n-        KeyException ke = new KeyException(cause);\n-        if (!ke.getCause().equals(cause)) {\n-            throw new SecurityException(\"Test 7 failed\");\n-        }\n-        ke = new KeyException(MSG, cause);\n-        if (!ke.getMessage().equals(MSG) || !ke.getCause().equals(cause)) {\n-            throw new SecurityException(\"Test 7 failed\");\n-        }\n-\n-        KeyManagementException kme = new KeyManagementException(cause);\n-        if (!kme.getCause().equals(cause)) {\n-            throw new SecurityException(\"Test 8 failed\");\n-        }\n-        kme = new KeyManagementException(MSG, cause);\n-        if (!kme.getMessage().equals(MSG) || !kme.getCause().equals(cause)) {\n-            throw new SecurityException(\"Test 8 failed\");\n-        }\n-\n-        KeyStoreException kse = new KeyStoreException(cause);\n-        if (!kse.getCause().equals(cause)) {\n-            throw new SecurityException(\"Test 9 failed\");\n-        }\n-        kse = new KeyStoreException(MSG, cause);\n-        if (!kse.getMessage().equals(MSG) || !kse.getCause().equals(cause)) {\n-            throw new SecurityException(\"Test 9 failed\");\n-        }\n-\n-        NoSuchAlgorithmException nsae = new NoSuchAlgorithmException(cause);\n-        if (!nsae.getCause().equals(cause)) {\n-            throw new SecurityException(\"Test 10 failed\");\n-        }\n-        nsae = new NoSuchAlgorithmException(MSG, cause);\n-        if (!nsae.getMessage().equals(MSG) || !nsae.getCause().equals(cause)) {\n-            throw new SecurityException(\"Test 10 failed\");\n-        }\n-\n-        ProviderException pe = new ProviderException(cause);\n-        if (!pe.getCause().equals(cause)) {\n-            throw new SecurityException(\"Test 11 failed\");\n-        }\n-        pe = new ProviderException(MSG, cause);\n-        if (!pe.getMessage().equals(MSG) || !pe.getCause().equals(cause)) {\n-            throw new SecurityException(\"Test 11 failed\");\n-        }\n-\n-        SignatureException sige = new SignatureException(cause);\n-        if (!sige.getCause().equals(cause)) {\n-            throw new SecurityException(\"Test 12 failed\");\n+    public static <E extends Exception> void test(E ex1, E ex2) throws Exception {\n+        String cln = ex1.getClass().getSimpleName();\n+        if (!ex1.getCause().equals(cause)) {\n+            throw new SecurityException(\"Cause test failed for \" + cln);\n@@ -145,51 +45,2 @@\n-        sige = new SignatureException(MSG, cause);\n-        if (!sige.getMessage().equals(MSG) || !sige.getCause().equals(cause)) {\n-            throw new SecurityException(\"Test 12 failed\");\n-        }\n-\n-        CRLException crle = new CRLException(cause);\n-        if (!crle.getCause().equals(cause)) {\n-            throw new SecurityException(\"Test 13 failed\");\n-        }\n-        crle = new CRLException(MSG, cause);\n-        if (!crle.getMessage().equals(MSG) || !crle.getCause().equals(cause)) {\n-            throw new SecurityException(\"Test 13 failed\");\n-        }\n-\n-        CertificateException ce = new CertificateException(cause);\n-        if (!ce.getCause().equals(cause)) {\n-            throw new SecurityException(\"Test 14 failed\");\n-        }\n-        ce = new CertificateException(MSG, cause);\n-        if (!ce.getMessage().equals(MSG) || !ce.getCause().equals(cause)) {\n-            throw new SecurityException(\"Test 14 failed\");\n-        }\n-\n-        CertificateParsingException cpe =\n-                new CertificateParsingException(cause);\n-        if (!cpe.getCause().equals(cause)) {\n-            throw new SecurityException(\"Test 15 failed\");\n-        }\n-        cpe = new CertificateParsingException(MSG, cause);\n-        if (!cpe.getMessage().equals(MSG) || !cpe.getCause().equals(cause)) {\n-            throw new SecurityException(\"Test 15 failed\");\n-        }\n-\n-        CertificateEncodingException cee =\n-                new CertificateEncodingException(cause);\n-        if (!cee.getCause().equals(cause)) {\n-            throw new SecurityException(\"Test 16 failed\");\n-        }\n-        cee = new CertificateEncodingException(MSG, cause);\n-        if (!cee.getMessage().equals(MSG) || !cee.getCause().equals(cause)) {\n-            throw new SecurityException(\"Test 16 failed\");\n-        }\n-\n-        InvalidParameterException ipe =\n-                new InvalidParameterException(cause);\n-        if (!ipe.getCause().equals(cause)) {\n-            throw new SecurityException(\"Test 17 failed\");\n-        }\n-        ipe = new InvalidParameterException(MSG, cause);\n-        if (!ipe.getMessage().equals(MSG) || !ipe.getCause().equals(cause)) {\n-            throw new SecurityException(\"Test 17 failed\");\n+        if (!ex2.getMessage().equals(MSG) || !ex2.getCause().equals(cause)) {\n+            throw new SecurityException(\"Cause and message test failed for \" + cln);\n@@ -197,0 +48,1 @@\n+    }\n@@ -198,11 +50,20 @@\n-\/*\n-        SSLException ssle =\n-                new SSLException(cause);\n-        if (!ssle.getCause().equals(cause)) {\n-            throw new SecurityException(\"Test 17 failed\");\n-        }\n-        ssle =new SSLException(MSG, cause);\n-        if (!ssle.getMessage().equals(MSG) || !ssle.getCause().equals(cause)) {\n-            throw new SecurityException(\"Test 17 failed\");\n-        }\n-*\/\n+    public static void main(String[] args) throws Exception {\n+        test(new SecurityException(cause), new SecurityException(MSG, cause));\n+        test(new DigestException(cause), new DigestException(MSG, cause));\n+        test(new GeneralSecurityException(cause), new GeneralSecurityException(MSG, cause));\n+        test(new InvalidAlgorithmParameterException(cause),\n+             new InvalidAlgorithmParameterException(MSG, cause));\n+        test(new InvalidKeyException(cause), new InvalidKeyException(MSG, cause));\n+        test(new InvalidKeySpecException(cause), new InvalidKeySpecException(MSG, cause));\n+        test(new InvalidParameterException(cause), new InvalidParameterException(MSG, cause));\n+        test(new KeyException(cause), new KeyException(MSG, cause));\n+        test(new KeyManagementException(cause), new KeyManagementException(MSG, cause));\n+        test(new KeyStoreException(cause), new KeyStoreException(MSG, cause));\n+        test(new NoSuchAlgorithmException(cause), new NoSuchAlgorithmException(MSG, cause));\n+        test(new ProviderException(cause), new ProviderException(MSG, cause));\n+        test(new SignatureException(cause), new SignatureException(MSG, cause));\n+        test(new CRLException(cause), new CRLException(MSG, cause));\n+        test(new CertificateException(cause), new CertificateException(MSG, cause));\n+        test(new CertificateParsingException(cause), new CertificateParsingException(MSG, cause));\n+        test(new CertificateEncodingException(cause), new CertificateEncodingException(MSG, cause));\n+        test(new CertPathBuilderException(cause), new CertPathBuilderException(MSG, cause));\n","filename":"test\/jdk\/java\/security\/Exceptions\/ChainingConstructors.java","additions":27,"deletions":166,"binary":false,"changes":193,"status":"modified"}]}