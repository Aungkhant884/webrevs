{"files":[{"patch":"@@ -404,1 +404,2 @@\n-            if (otherAddress.length == 4 && address.length == 4)\n+            if ((otherAddress.length == 4 && address.length == 4) ||\n+                    (otherAddress.length == 16 && address.length == 16)) {\n@@ -407,2 +408,2 @@\n-            else if ((otherAddress.length == 8 && address.length == 8) ||\n-                     (otherAddress.length == 32 && address.length == 32)) {\n+            } else if ((otherAddress.length == 8 && address.length == 8) ||\n+                       (otherAddress.length == 32 && address.length == 32)) {\n@@ -443,1 +444,2 @@\n-            } else if (otherAddress.length == 8 || otherAddress.length == 32) {\n+            } else if ((otherAddress.length == 8 && address.length == 4) ||\n+                       (otherAddress.length == 32 && address.length == 16)) {\n@@ -457,1 +459,2 @@\n-            } else if (address.length == 8 || address.length == 32) {\n+            } else if ((otherAddress.length == 4 && address.length == 8) ||\n+                       (otherAddress.length == 16 && address.length == 32)) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/IPAddressName.java","additions":8,"deletions":5,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -0,0 +1,78 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import org.testng.annotations.DataProvider;\n+import org.testng.annotations.Test;\n+import sun.security.x509.GeneralNameInterface;\n+import sun.security.x509.IPAddressName;\n+\n+import java.io.IOException;\n+\n+import static org.testng.Assert.assertEquals;\n+\n+\/*\n+ * @test\n+ * @summary Verify IPAddressName.constrains\n+ * @bug 8267617\n+ * @modules java.base\/sun.security.x509\n+ * @run testng ConstrainsTest\n+ *\/\n+public class ConstrainsTest {\n+\n+    IPAddressName ipv4Addr = new IPAddressName(\"127.0.0.1\");\n+    IPAddressName ipv4Mask = new IPAddressName(\"127.0.0.0\/255.0.0.0\");\n+    IPAddressName ipv6Addr = new IPAddressName(\"::1\");\n+    IPAddressName ipv6Mask = new IPAddressName(\"::\/0\");\n+\n+    public ConstrainsTest() throws IOException {\n+    }\n+\n+    @DataProvider(name = \"names\")\n+    public Object[][] names() {\n+        Object[][] data = {\n+                {ipv4Addr, ipv4Addr, GeneralNameInterface.NAME_MATCH},\n+                {ipv4Addr, ipv4Mask, GeneralNameInterface.NAME_WIDENS},\n+                {ipv4Addr, ipv6Addr, GeneralNameInterface.NAME_SAME_TYPE},\n+                {ipv4Addr, ipv6Mask, GeneralNameInterface.NAME_SAME_TYPE},\n+                {ipv4Mask, ipv4Addr, GeneralNameInterface.NAME_NARROWS},\n+                {ipv4Mask, ipv4Mask, GeneralNameInterface.NAME_MATCH},\n+                {ipv4Mask, ipv6Addr, GeneralNameInterface.NAME_SAME_TYPE},\n+                {ipv4Mask, ipv6Mask, GeneralNameInterface.NAME_SAME_TYPE},\n+                {ipv6Addr, ipv4Addr, GeneralNameInterface.NAME_SAME_TYPE},\n+                {ipv6Addr, ipv4Mask, GeneralNameInterface.NAME_SAME_TYPE},\n+                {ipv6Addr, ipv6Addr, GeneralNameInterface.NAME_MATCH},\n+                {ipv6Addr, ipv6Mask, GeneralNameInterface.NAME_WIDENS},\n+                {ipv6Mask, ipv4Addr, GeneralNameInterface.NAME_SAME_TYPE},\n+                {ipv6Mask, ipv4Mask, GeneralNameInterface.NAME_SAME_TYPE},\n+                {ipv6Mask, ipv6Addr, GeneralNameInterface.NAME_NARROWS},\n+                {ipv6Mask, ipv6Mask, GeneralNameInterface.NAME_MATCH},\n+        };\n+        return data;\n+    }\n+\n+    @Test(dataProvider = \"names\")\n+    public void testNameContains(IPAddressName addr1, IPAddressName addr2, int result) throws IOException {\n+        assertEquals(addr1.constrains(addr2), result);\n+    }\n+\n+}\n","filename":"test\/jdk\/sun\/security\/x509\/IPAddressName\/ConstrainsTest.java","additions":78,"deletions":0,"binary":false,"changes":78,"status":"added"}]}