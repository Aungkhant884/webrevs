{"files":[{"patch":"@@ -38,1 +38,5 @@\n-    OTHER(0, null),          \/\/ An unknown architecture not specifically named\n+    \/*\n+     * An unknown architecture not specifically named.\n+     * The addrSize and ByteOrder values are those of the current architecture.\n+     *\/\n+    OTHER(is64bit() ? 64 : 32, ByteOrder.nativeOrder()),\n@@ -83,1 +87,1 @@\n-        archName = OperatingSystem.toUpperCase(archName); \/\/ normalize to uppercase\n+        archName = archName.toUpperCase(Locale.ROOT); \/\/ normalize to uppercase\n@@ -194,1 +198,1 @@\n-            return Architecture.valueOf(OperatingSystem.toUpperCase(archName));\n+            return Architecture.valueOf(archName.toUpperCase(Locale.ROOT));\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/util\/Architecture.java","additions":7,"deletions":3,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -28,0 +28,2 @@\n+import java.util.Locale;\n+\n@@ -130,19 +132,1 @@\n-        return OperatingSystem.valueOf(toUpperCase(osName));\n-    }\n-\n-    \/**\n-     * {@return Simple conversion of ASCII to upper case; used when too early to use Locale conversions}\n-     *\n-     * @param str a string\n-     * @return the string with lower case ascii converted to upper case\n-     *\/\n-    \/* package-private *\/\n-    static String toUpperCase(String str) {\n-        StringBuilder sb = new StringBuilder(str);\n-        for (int i = 0; i < str.length(); i++) {\n-            char ch = str.charAt(i);\n-            if (ch >= 'a' && ch <= 'z') {\n-                sb.setCharAt(i, (char)(ch - ('a' - 'A')));  \/\/ Map lower case down to uppercase\n-            }\n-        }\n-        return sb.toString();\n+        return OperatingSystem.valueOf(osName.toUpperCase(Locale.ROOT));\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/util\/OperatingSystem.java","additions":3,"deletions":19,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -55,1 +55,0 @@\n-        archName = archName.replace(\"ppc64le\", \"PPC64\");\n","filename":"src\/jdk.jlink\/share\/classes\/jdk\/tools\/jlink\/internal\/Platform.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"}]}