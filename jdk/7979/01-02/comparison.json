{"files":[{"patch":"@@ -45,1 +45,1 @@\n-    final private static int NUM = 2345;\n+    final private static int NUM = 3000;\n@@ -58,0 +58,8 @@\n+    public byte urshift(byte input, int amount) {\n+        return (byte) (input >>> amount);\n+    }\n+\n+    public short urshift(short input, int amount) {\n+        return (short) (input >>> amount);\n+    }\n+\n@@ -59,1 +67,1 @@\n-        TestFramework.run();\n+        TestFramework.runWithFlags(\"-XX:CompileCommand=exclude,*.urshift\");\n@@ -114,1 +122,1 @@\n-            Asserts.assertEquals(byteb[i], (byte) (bytea[i] >>> 3));\n+            Asserts.assertEquals(byteb[i], urshift(bytea[i], 3));\n@@ -118,1 +126,1 @@\n-            Asserts.assertEquals(byteb[i], (byte) (bytea[i] >>> 24));\n+            Asserts.assertEquals(byteb[i], urshift(bytea[i], 24));\n@@ -122,1 +130,1 @@\n-            Asserts.assertEquals(byteb[i], (byte) (bytea[i] >>> 25));\n+            Asserts.assertEquals(byteb[i], urshift(bytea[i], 25));\n@@ -126,1 +134,1 @@\n-            Asserts.assertEquals(shortb[i], (short) (shorta[i] >>> 10));\n+            Asserts.assertEquals(shortb[i], urshift(shorta[i], 10));\n@@ -130,1 +138,1 @@\n-            Asserts.assertEquals(shortb[i], (short) (shorta[i] >>> 16));\n+            Asserts.assertEquals(shortb[i], urshift(shorta[i], 16));\n@@ -134,1 +142,1 @@\n-            Asserts.assertEquals(shortb[i], (short) (shorta[i] >>> 17));\n+            Asserts.assertEquals(shortb[i], urshift(shorta[i], 17));\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/TestVectorizeURShiftSubword.java","additions":16,"deletions":8,"binary":false,"changes":24,"status":"modified"}]}