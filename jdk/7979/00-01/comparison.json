{"files":[{"patch":"@@ -36,1 +36,1 @@\n- * @requires vm.cpu.features ~= \".*simd.*\"\n+ * @requires os.arch==\"amd64\" | os.arch==\"x86_64\" | os.arch==\"aarch64\"\n@@ -45,1 +45,1 @@\n-    final private static int NUM = 300;\n+    final private static int NUM = 2345;\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/TestVectorizeURShiftSubword.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -136,2 +136,0 @@\n-    \/\/ Note that unsigned shift right on subword signed integer types can't\n-    \/\/ be vectorized since the sign extension bits would be lost.\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorization\/runner\/ArrayShiftOpTest.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -183,2 +183,0 @@\n-    \/\/ Note that unsigned shift right on subword signed integer types can\n-    \/\/ not be vectorized since the sign extension bit would be lost.\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorization\/runner\/BasicByteOpTest.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -183,2 +183,0 @@\n-    \/\/ Note that unsigned shift right on subword signed integer types can\n-    \/\/ not be vectorized since the sign extension bits would be lost.\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorization\/runner\/BasicShortOpTest.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"}]}