{"files":[{"patch":"@@ -32,0 +32,2 @@\n+ * @library \/test\/lib\/\n+ * @build jdk.test.lib.util.ForceGC\n@@ -37,2 +39,0 @@\n-import java.lang.ref.ReferenceQueue;\n-import java.lang.ref.WeakReference;\n@@ -45,3 +45,2 @@\n-import java.util.concurrent.CountDownLatch;\n-import static java.util.concurrent.TimeUnit.MILLISECONDS;\n-import java.util.function.BooleanSupplier;\n+\n+import jdk.test.lib.util.ForceGC;\n@@ -69,0 +68,1 @@\n+            ForceGC gc = new ForceGC();\n@@ -70,1 +70,4 @@\n-            gcAwait(() -> finalCount == unloadedCount);\n+            if (!gc.await(() -> finalCount == unloadedCount)) {\n+                throw new RuntimeException(\"Expected unloaded=\" + count +\n+                        \" but got=\" + unloadedCount);\n+            }\n@@ -133,36 +136,0 @@\n-\n-    \/\/ --------------- GC finalization infrastructure ---------------\n-\n-    \/** No guarantees, but effective in practice. *\/\n-    static void forceFullGc() {\n-        long timeoutMillis = 1000L;\n-        CountDownLatch finalized = new CountDownLatch(1);\n-        ReferenceQueue<Object> queue = new ReferenceQueue<>();\n-        WeakReference<Object> ref = new WeakReference<>(\n-            new Object() { protected void finalize() { finalized.countDown(); }},\n-            queue);\n-        try {\n-            for (int tries = 3; tries--> 0; ) {\n-                System.gc();\n-                if (finalized.await(timeoutMillis, MILLISECONDS)\n-                    && queue.remove(timeoutMillis) != null\n-                    && ref.get() == null) {\n-                    System.runFinalization(); \/\/ try to pick up stragglers\n-                    return;\n-                }\n-                timeoutMillis *= 4;\n-            }\n-        } catch (InterruptedException unexpected) {\n-            throw new AssertionError(\"unexpected InterruptedException\");\n-        }\n-        throw new AssertionError(\"failed to do a \\\"full\\\" gc\");\n-    }\n-\n-    static void gcAwait(BooleanSupplier s) {\n-        for (int i = 0; i < 10; i++) {\n-            if (s.getAsBoolean())\n-                return;\n-            forceFullGc();\n-        }\n-        throw new AssertionError(\"failed to satisfy condition\");\n-    }\n","filename":"test\/jdk\/java\/lang\/ClassLoader\/nativeLibrary\/NativeLibraryTest.java","additions":9,"deletions":42,"binary":false,"changes":51,"status":"modified"}]}