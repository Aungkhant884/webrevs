{"files":[{"patch":"@@ -32,1 +32,0 @@\n-import java.io.IOException;\n@@ -39,2 +38,1 @@\n-    public static void main(String[] args) throws IOException,\n-            ClassNotFoundException {\n+    public static void main(String[] args) throws Exception {\n@@ -43,10 +41,9 @@\n-        ByteArrayOutputStream baos = new ByteArrayOutputStream();\n-        ObjectOutputStream oos = new ObjectOutputStream(baos);\n-        oos.writeObject(toolBar);\n-        byte[] buf = baos.toByteArray();\n-        baos.close();\n-\n-        ByteArrayInputStream bais = new ByteArrayInputStream(buf);\n-        ObjectInputStream ois = new ObjectInputStream(bais);\n-        ois.readObject();\n-        bais.close();\n+        try (ByteArrayOutputStream baos = new ByteArrayOutputStream();\n+             ObjectOutputStream oos = new ObjectOutputStream(baos)) {\n+            oos.writeObject(toolBar);\n+            byte[] buf = baos.toByteArray();\n+            try (ByteArrayInputStream bais = new ByteArrayInputStream(buf);\n+                 ObjectInputStream ois = new ObjectInputStream(bais)) {\n+                ois.readObject();\n+            }\n+        }\n","filename":"test\/jdk\/javax\/swing\/JToolBar\/bug4368050.java","additions":10,"deletions":13,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -30,2 +30,0 @@\n-import java.lang.reflect.InvocationTargetException;\n-\n@@ -37,2 +35,1 @@\n-    public static void main(String[] args) throws InterruptedException,\n-            InvocationTargetException {\n+    public static void main(String[] args) throws Exception {\n","filename":"test\/jdk\/javax\/swing\/JToolBar\/bug4465534.java","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -31,2 +31,0 @@\n-import java.lang.reflect.InvocationTargetException;\n-\n@@ -40,2 +38,0 @@\n-    static JToolBar tb;\n-    static BasicToolBarUI ui;\n@@ -43,17 +39,24 @@\n-    public static void main(String[] args) throws InterruptedException,\n-            InvocationTargetException {\n-        SwingUtilities.invokeAndWait(() -> {\n-            fr = new JFrame(\"bug4700351\");\n-            tb = new JToolBar();\n-            tb.setOrientation(JToolBar.VERTICAL);\n-            fr.add(tb);\n-            ui = (javax.swing.plaf.basic.BasicToolBarUI) tb.getUI();\n-            if (!ui.isFloating()) {\n-                ui.setFloatingLocation(100, 100);\n-                ui.setFloating(true, tb.getLocation());\n-            }\n-            if (tb.getOrientation() != JToolBar.VERTICAL) {\n-                throw new RuntimeException(\"Error: toolbar's orientation \" +\n-                        \"has changed\");\n-            }\n-        });\n+    public static void main(String[] args) throws Exception {\n+        try {\n+            SwingUtilities.invokeAndWait(() -> {\n+                fr = new JFrame(\"bug4700351\");\n+                JToolBar tb = new JToolBar();\n+                tb.setOrientation(JToolBar.VERTICAL);\n+                fr.add(tb);\n+                BasicToolBarUI ui = (javax.swing.plaf.basic.BasicToolBarUI) tb.getUI();\n+                if (!ui.isFloating()) {\n+                    ui.setFloatingLocation(100, 100);\n+                    ui.setFloating(true, tb.getLocation());\n+                }\n+                if (tb.getOrientation() != JToolBar.VERTICAL) {\n+                    throw new RuntimeException(\"Error: toolbar's orientation \" +\n+                            \"has changed\");\n+                }\n+            });\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (fr != null) {\n+                    fr.dispose();\n+                }\n+            });\n+        }\n","filename":"test\/jdk\/javax\/swing\/JToolBar\/bug4700351.java","additions":24,"deletions":21,"binary":false,"changes":45,"status":"modified"},{"patch":"@@ -30,2 +30,0 @@\n-import java.lang.reflect.InvocationTargetException;\n-\n@@ -37,2 +35,1 @@\n-    public static void main(String[] args) throws InterruptedException,\n-            InvocationTargetException {\n+    public static void main(String[] args) throws Exception {\n@@ -45,1 +42,1 @@\n-                throw new RuntimeException(\"ToolTipText doesn't set \" +\n+                throw new RuntimeException(\"ToolTipText isn't set \" +\n@@ -50,1 +47,1 @@\n-                throw new RuntimeException(\"ToolTipText doesn't set \" +\n+                throw new RuntimeException(\"ToolTipText isn't set \" +\n","filename":"test\/jdk\/javax\/swing\/JToolTip\/bug4107843.java","additions":3,"deletions":6,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -31,2 +31,0 @@\n-import java.lang.reflect.InvocationTargetException;\n-\n@@ -38,2 +36,1 @@\n-    public static void main(String[] args) throws InterruptedException,\n-            InvocationTargetException {\n+    public static void main(String[] args) throws Exception {\n@@ -45,1 +42,1 @@\n-                throw new RuntimeException(\"AnchorSelectionPath doesn't \" +\n+                throw new RuntimeException(\"AnchorSelectionPath isn't \" +\n@@ -50,1 +47,1 @@\n-                throw new RuntimeException(\"LeadSelectionPath doesn't \" +\n+                throw new RuntimeException(\"LeadSelectionPath isn't \" +\n","filename":"test\/jdk\/javax\/swing\/JTree\/bug4161685.java","additions":3,"deletions":6,"binary":false,"changes":9,"status":"modified"}]}