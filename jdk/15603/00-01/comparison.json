{"files":[{"patch":"@@ -449,0 +449,4 @@\n+                \/\/ if only \"UNC\" remains, a trailing \"\\\\\" was likely removed\n+                if (path.equals(\"UNC\")) {\n+                    path = \"\\\\\\\\\";\n+                }\n","filename":"src\/java.base\/windows\/classes\/java\/io\/WinNTFileSystem.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -41,0 +41,1 @@\n+import org.junit.jupiter.params.provider.ValueSource;\n@@ -74,4 +75,4 @@\n-    @Test\n-    void testDriveLetter() throws IOException {\n-        String path = new File(\"c:\/\").getCanonicalPath();\n-        assertFalse(path.length() > 3, \"Drive letter incorrectly represented\");\n+    @ParameterizedTest\n+    @ValueSource(strings = {\"\\\\\\\\?\", \"\\\\\\\\?\\\\\", \"\\\\\\\\?\\\\UNC\", \"\\\\\\\\?\\\\UNC\\\\\"})\n+    void badPaths(String pathname) {\n+        assertThrows(IOException.class, () -> new File(pathname).getCanonicalPath());\n@@ -82,1 +83,1 @@\n-    void testCanonicalPath(String pathname, String expected) throws IOException {\n+    void goodPaths(String pathname, String expected) throws IOException {\n@@ -87,0 +88,6 @@\n+\n+    @Test\n+    void driveLetter() throws IOException {\n+        String path = new File(\"c:\/\").getCanonicalPath();\n+        assertFalse(path.length() > 3, \"Drive letter incorrectly represented\");\n+    }\n","filename":"test\/jdk\/java\/io\/File\/GetCanonicalPath.java","additions":12,"deletions":5,"binary":false,"changes":17,"status":"modified"}]}