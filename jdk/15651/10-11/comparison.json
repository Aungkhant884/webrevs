{"files":[{"patch":"@@ -29,0 +29,1 @@\n+\n@@ -31,1 +32,6 @@\n-public final class DecimalDigits implements Digits {\n+\/**\n+ * Digits class for decimal digits.\n+ *\n+ * @since 21\n+ *\/\n+final class DecimalDigits implements Digits {\n@@ -54,1 +60,1 @@\n-    private static final short[] PACKED_DIGITS = new short[] {\n+    private static final short[] DIGITS = new short[] {\n@@ -70,1 +76,1 @@\n-    public static final Digits INSTANCE = new DecimalDigits();\n+    static final Digits INSTANCE = new DecimalDigits();\n@@ -92,1 +98,1 @@\n-            int digits = digitPair(r);\n+            int digits = DIGITS[r];\n@@ -94,1 +100,0 @@\n-            putCharMH.invokeExact(buffer, --index, digits >> 8);\n@@ -96,0 +101,1 @@\n+            putCharMH.invokeExact(buffer, --index, digits >> 8);\n@@ -103,2 +109,1 @@\n-            int digits = digitPair(r);\n-            putCharMH.invokeExact(buffer, --index, digits >> 8);\n+            int digits = DIGITS[r];\n@@ -106,0 +111,1 @@\n+            putCharMH.invokeExact(buffer, --index, digits >> 8);\n@@ -112,2 +118,2 @@\n-        int digits = digitPair(ivalue);\n-        putCharMH.invokeExact(buffer, --index, digits >> 8);\n+        int digits = DIGITS[ivalue];\n+        putCharMH.invokeExact(buffer, --index, digits & 0xFF);\n@@ -116,1 +122,1 @@\n-            putCharMH.invokeExact(buffer, --index, digits & 0xFF);\n+            putCharMH.invokeExact(buffer, --index, digits >> 8);\n@@ -146,0 +152,1 @@\n+\n@@ -147,1 +154,1 @@\n-        return PACKED_DIGITS[i];\n+        return DIGITS[i];\n@@ -183,1 +190,1 @@\n-            ByteArrayLittleEndian.setShort(buf, charPos, PACKED_DIGITS[r]);\n+            ByteArrayLittleEndian.setShort(buf, charPos, DIGITS[r]);\n@@ -189,1 +196,1 @@\n-            ByteArrayLittleEndian.setShort(buf, charPos, PACKED_DIGITS[-i]);\n+            ByteArrayLittleEndian.setShort(buf, charPos, DIGITS[-i]);\n@@ -231,1 +238,1 @@\n-            ByteArrayLittleEndian.setShort(buf, charPos, PACKED_DIGITS[(int)((q * 100) - i)]);\n+            ByteArrayLittleEndian.setShort(buf, charPos, DIGITS[(int)((q * 100) - i)]);\n@@ -241,1 +248,1 @@\n-            ByteArrayLittleEndian.setShort(buf, charPos, PACKED_DIGITS[(q2 * 100) - i2]);\n+            ByteArrayLittleEndian.setShort(buf, charPos, DIGITS[(q2 * 100) - i2]);\n@@ -248,1 +255,1 @@\n-            ByteArrayLittleEndian.setShort(buf, charPos, PACKED_DIGITS[-i2]);\n+            ByteArrayLittleEndian.setShort(buf, charPos, DIGITS[-i2]);\n@@ -258,1 +265,1 @@\n-}\n+}\n\\ No newline at end of file\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/util\/DecimalDigits.java","additions":24,"deletions":17,"binary":false,"changes":41,"status":"modified"}]}