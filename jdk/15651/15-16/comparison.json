{"files":[{"patch":"@@ -36,0 +36,1 @@\n+import jdk.internal.util.DecimalDigits;\n@@ -46,35 +47,0 @@\n-\n-    \/**\n-     * Each element of the array represents the packaging of two ascii characters based on little endian:<p>\n-     * <pre>\n-     *      00 -> '0' | ('0' << 8) -> 0x3030\n-     *      01 -> '1' | ('0' << 8) -> 0x3130\n-     *      02 -> '2' | ('0' << 8) -> 0x3230\n-     *\n-     *     ...\n-     *\n-     *      10 -> '0' | ('1' << 8) -> 0x3031\n-     *      11 -> '1' | ('1' << 8) -> 0x3131\n-     *      12 -> '2' | ('1' << 8) -> 0x3231\n-     *\n-     *     ...\n-     *\n-     *      97 -> '7' | ('9' << 8) -> 0x3739\n-     *      98 -> '8' | ('9' << 8) -> 0x3839\n-     *      99 -> '9' | ('9' << 8) -> 0x3939\n-     * <\/pre>\n-     *\/\n-    @Stable\n-    static final short[] PACKED_DIGITS = new short[] {\n-            0x3030, 0x3130, 0x3230, 0x3330, 0x3430, 0x3530, 0x3630, 0x3730, 0x3830, 0x3930,\n-            0x3031, 0x3131, 0x3231, 0x3331, 0x3431, 0x3531, 0x3631, 0x3731, 0x3831, 0x3931,\n-            0x3032, 0x3132, 0x3232, 0x3332, 0x3432, 0x3532, 0x3632, 0x3732, 0x3832, 0x3932,\n-            0x3033, 0x3133, 0x3233, 0x3333, 0x3433, 0x3533, 0x3633, 0x3733, 0x3833, 0x3933,\n-            0x3034, 0x3134, 0x3234, 0x3334, 0x3434, 0x3534, 0x3634, 0x3734, 0x3834, 0x3934,\n-            0x3035, 0x3135, 0x3235, 0x3335, 0x3435, 0x3535, 0x3635, 0x3735, 0x3835, 0x3935,\n-            0x3036, 0x3136, 0x3236, 0x3336, 0x3436, 0x3536, 0x3636, 0x3736, 0x3836, 0x3936,\n-            0x3037, 0x3137, 0x3237, 0x3337, 0x3437, 0x3537, 0x3637, 0x3737, 0x3837, 0x3937,\n-            0x3038, 0x3138, 0x3238, 0x3338, 0x3438, 0x3538, 0x3638, 0x3738, 0x3838, 0x3938,\n-            0x3039, 0x3139, 0x3239, 0x3339, 0x3439, 0x3539, 0x3639, 0x3739, 0x3839, 0x3939\n-    };\n-\n@@ -151,1 +117,1 @@\n-            ByteArrayLittleEndian.setShort(buf, charPos, PACKED_DIGITS[r]);\n+            ByteArrayLittleEndian.setShort(buf, charPos, DecimalDigits.digitPair(r));\n@@ -157,1 +123,1 @@\n-            ByteArrayLittleEndian.setShort(buf, charPos, PACKED_DIGITS[-i]);\n+            ByteArrayLittleEndian.setShort(buf, charPos, DecimalDigits.digitPair(-i));\n@@ -199,1 +165,1 @@\n-            ByteArrayLittleEndian.setShort(buf, charPos, PACKED_DIGITS[(int)((q * 100) - i)]);\n+            ByteArrayLittleEndian.setShort(buf, charPos, DecimalDigits.digitPair((int)((q * 100) - i)));\n@@ -209,1 +175,1 @@\n-            ByteArrayLittleEndian.setShort(buf, charPos, PACKED_DIGITS[(q2 * 100) - i2]);\n+            ByteArrayLittleEndian.setShort(buf, charPos, DecimalDigits.digitPair((q2 * 100) - i2));\n@@ -216,1 +182,1 @@\n-            ByteArrayLittleEndian.setShort(buf, charPos, PACKED_DIGITS[-i2]);\n+            ByteArrayLittleEndian.setShort(buf, charPos, DecimalDigits.digitPair(-i2));\n","filename":"src\/java.base\/share\/classes\/java\/lang\/StringLatin1.java","additions":6,"deletions":40,"binary":false,"changes":46,"status":"modified"},{"patch":"@@ -36,0 +36,1 @@\n+import jdk.internal.util.DecimalDigits;\n@@ -1615,1 +1616,1 @@\n-        int packed = (int) StringLatin1.PACKED_DIGITS[v];\n+        int packed = (int) DecimalDigits.digitPair(v);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/StringUTF16.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -151,0 +151,9 @@\n+\n+    \/**\n+     * For values from 0 to 99 return a short encoding a pair of ASCII-encoded digit characters in little-endian\n+     * @param i value to convert\n+     * @return a short encoding a pair of ASCII-encoded digit characters\n+     *\/\n+    public static short digitPair(int i) {\n+        return DIGITS[i];\n+    }\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/util\/DecimalDigits.java","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"}]}