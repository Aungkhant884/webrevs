{"files":[{"patch":"@@ -2361,1 +2361,1 @@\n-    n->destruct();\n+    n->destruct(&_phase->igvn());\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/c2\/shenandoahSupport.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2305,4 +2305,1 @@\n-        if (igvn) { \/\/ Unhook.\n-          igvn->_worklist.remove(hook);\n-        }\n-        hook->destruct();\n+        hook->destruct(igvn);\n","filename":"src\/hotspot\/share\/opto\/cfgnode.cpp","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -406,1 +406,1 @@\n-    hook->destruct();\n+    hook->destruct(phase);\n","filename":"src\/hotspot\/share\/opto\/convertnode.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -329,5 +329,1 @@\n-  PhaseIterGVN* igvn = phase->is_IterGVN();\n-  if (igvn != NULL) {\n-    igvn->_worklist.remove(hook);\n-  }\n-  hook->destruct();\n+  hook->destruct(phase);\n@@ -912,4 +908,1 @@\n-      if (can_reshape) {\n-        phase->is_IterGVN()->_worklist.remove(hook);\n-      }\n-      hook->destruct();\n+      hook->destruct(phase);\n@@ -967,4 +960,1 @@\n-  if (can_reshape) {\n-    phase->is_IterGVN()->_worklist.remove(hook);\n-  }\n-  hook->destruct();\n+  hook->destruct(phase);\n@@ -1083,4 +1073,1 @@\n-      if (can_reshape) {\n-        phase->is_IterGVN()->_worklist.remove(hook);\n-      }\n-      hook->destruct();\n+      hook->destruct(phase);\n@@ -1138,4 +1125,1 @@\n-  if (can_reshape) {\n-    phase->is_IterGVN()->_worklist.remove(hook);\n-  }\n-  hook->destruct();\n+  hook->destruct(phase);\n","filename":"src\/hotspot\/share\/opto\/divnode.cpp","additions":5,"deletions":21,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -1002,1 +1002,1 @@\n-    hook->destruct();\n+    hook->destruct(igvn);\n","filename":"src\/hotspot\/share\/opto\/ifnode.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -433,1 +433,1 @@\n-    tmp->destruct();\n+    tmp->destruct(NULL);\n","filename":"src\/hotspot\/share\/opto\/lcm.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -730,1 +730,1 @@\n-      mul->destruct();\n+      mul->destruct(&_igvn);\n","filename":"src\/hotspot\/share\/opto\/loopPredicate.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2654,1 +2654,1 @@\n-        p->destruct();          \/\/ Recover useless new node\n+        p->destruct(&igvn);     \/\/ Recover useless new node\n","filename":"src\/hotspot\/share\/opto\/loopnode.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -584,2 +584,5 @@\n-void Node::destruct() {\n-  Compile* compile = Compile::current();\n+void Node::destruct(PhaseValues* phase) {\n+  Compile* compile = (phase != NULL) ? phase->C : Compile::current();\n+  if (phase != NULL && phase->is_IterGVN()) {\n+    phase->is_IterGVN()->_worklist.remove(this);\n+  }\n","filename":"src\/hotspot\/share\/opto\/node.cpp","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -239,1 +239,1 @@\n-  void destruct();\n+  void destruct(PhaseValues* phase);\n","filename":"src\/hotspot\/share\/opto\/node.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -752,1 +752,1 @@\n-    x->destruct();              \/\/ Hit, destroy duplicate constant\n+    x->destruct(this);          \/\/ Hit, destroy duplicate constant\n@@ -1475,2 +1475,1 @@\n-  _worklist.remove(temp);   \/\/ this can be necessary\n-  temp->destruct();         \/\/ reuse the _idx of this little guy\n+  temp->destruct(this);     \/\/ reuse the _idx of this little guy\n","filename":"src\/hotspot\/share\/opto\/phaseX.cpp","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -340,1 +340,1 @@\n-        phi_post->destruct();\n+        phi_post->destruct(&_igvn);\n","filename":"src\/hotspot\/share\/opto\/split_if.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}