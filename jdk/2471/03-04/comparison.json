{"files":[{"patch":"@@ -69,1 +69,4 @@\n- * (such as 4.0 and 4.00).<p>\n+ * (such as 4.0 and 4.00). For {@link java.math.BigDecimal#equals\n+ * BigDecimal#equals()} to return true, the representation and\n+ * numerical value of the two {@code BigDecimal} objects must be the\n+ * same.<p>\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Comparable.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -134,1 +134,1 @@\n-     * equivalence class are equal to each other. The equal objects\n+     * equivalence class are equal to each other. Members of an equivalence class\n@@ -237,0 +237,1 @@\n+     * The string output is not necessary stable over time or across JVM invocations.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Object.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -90,3 +90,3 @@\n-\n- * The different representations of the same numerical value are called\n- * members of the same <i>cohort<\/i>. The {@linkplain\n+ *\n+ * The different representations of the same numerical value are\n+ * called members of the same <i>cohort<\/i>. The {@linkplain\n@@ -97,1 +97,3 @@\n- * hold.\n+ * hold. The results of methods like {@link scale} and {@link\n+ * unscaledValue} will differ for numerically equal values with\n+ * different representations.\n","filename":"src\/java.base\/share\/classes\/java\/math\/BigDecimal.java","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"}]}