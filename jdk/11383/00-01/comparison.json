{"files":[{"patch":"@@ -9677,1 +9677,1 @@\n-      \"cmpw $src1, $src2\\n\\t\"\n+      \"subsw zr, $src1, $src2\\n\\t\"\n@@ -9682,6 +9682,1 @@\n-    int32_t con = (int32_t)$src2$$constant;\n-    if (con < 0) {\n-      __ addsw(zr, $src1$$Register, -con);\n-    } else {\n-      __ subsw(zr, $src1$$Register, con);\n-    }\n+    __ subsw(zr, $src1$$Register, (int32_t)$src2$$constant);\n@@ -9724,1 +9719,1 @@\n-      \"cmp $src1, $src2\\n\\t\"\n+      \"subs zr, $src1, $src2\\n\\t\"\n@@ -9729,6 +9724,1 @@\n-    int32_t con = (int32_t)$src2$$constant;\n-    if (con < 0) {\n-      __ adds(zr, $src1$$Register, -con);\n-    } else {\n-      __ subs(zr, $src1$$Register, con);\n-    }\n+    __ subs(zr, $src1$$Register, (int32_t)$src2$$constant);\n@@ -9771,1 +9761,1 @@\n-      \"cmp $src1, $src2\\n\\t\"\n+      \"subs zr, $src1, $src2\\n\\t\"\n@@ -9776,6 +9766,1 @@\n-    int32_t con = (int32_t)$src2$$constant;\n-    if (con < 0) {\n-      __ adds(zr, $src1$$Register, -con);\n-    } else {\n-      __ subs(zr, $src1$$Register, con);\n-    }\n+    __ subs(zr, $src1$$Register, (int32_t)$src2$$constant);\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64.ad","additions":6,"deletions":21,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -78,1 +78,1 @@\n-    public int compareIntWith42(int x) {\n+    public int compareIntWithImm1(int x) {\n@@ -82,0 +82,18 @@\n+    @Test\n+    @IR(counts = {IRNode.CMP_U3, \"1\"})\n+    public int compareIntWithImm2(int x) {\n+        return Integer.compareUnsigned(x, 42 << 12);\n+    }\n+\n+    @Test\n+    @IR(counts = {IRNode.CMP_U3, \"1\"})\n+    public int compareIntWithImm3(int x) {\n+        return Integer.compareUnsigned(x, 42 << 24);\n+    }\n+\n+    @Test\n+    @IR(counts = {IRNode.CMP_U3, \"1\"})\n+    public int compareIntWithImm4(int x) {\n+        return Integer.compareUnsigned(x, Integer.MIN_VALUE);\n+    }\n+\n@@ -90,1 +108,1 @@\n-    public int compareLongWith42(long x) {\n+    public int compareLongWithImm1(long x) {\n@@ -94,0 +112,24 @@\n+    @Test\n+    @IR(counts = {IRNode.CMP_UL3, \"1\"})\n+    public int compareLongWithImm2(long x) {\n+        return Long.compareUnsigned(x, 42 << 12);\n+    }\n+\n+    @Test\n+    @IR(counts = {IRNode.CMP_UL3, \"1\"})\n+    public int compareLongWithImm3(long x) {\n+        return Long.compareUnsigned(x, 42 << 24);\n+    }\n+\n+    @Test\n+    @IR(counts = {IRNode.CMP_UL3, \"1\"})\n+    public int compareLongWithImm4(long x) {\n+        return Long.compareUnsigned(x, Integer.MIN_VALUE);\n+    }\n+\n+    @Test\n+    @IR(counts = {IRNode.CMP_UL3, \"1\"})\n+    public int compareLongWithImm5(long x) {\n+        return Long.compareUnsigned(x, Long.MIN_VALUE);\n+    }\n+\n@@ -95,2 +137,7 @@\n-                 \"compareInt\", \"compareIntWith42\",\n-                 \"compareLong\", \"compareLongWith42\"})\n+                 \"compareInt\",\n+                 \"compareIntWithImm1\", \"compareIntWithImm2\",\n+                 \"compareIntWithImm3\", \"compareIntWithImm4\",\n+                 \"compareLong\",\n+                 \"compareLongWithImm1\", \"compareLongWithImm2\",\n+                 \"compareLongWithImm3\", \"compareLongWithImm4\",\n+                 \"compareLongWithImm5\"})\n@@ -106,1 +153,4 @@\n-            Asserts.assertEquals(compareIntWith42(x), expectedResult(x, 42));\n+            Asserts.assertEquals(compareIntWithImm1(x), expectedResult(x, 42));\n+            Asserts.assertEquals(compareIntWithImm2(x), expectedResult(x, 42 << 12));\n+            Asserts.assertEquals(compareIntWithImm3(x), expectedResult(x, 42 << 24));\n+            Asserts.assertEquals(compareIntWithImm4(x), expectedResult(x, Integer.MIN_VALUE));\n@@ -115,1 +165,5 @@\n-            Asserts.assertEquals(compareLongWith42(x), expectedResult(x, 42));\n+            Asserts.assertEquals(compareLongWithImm1(x), expectedResult(x, 42));\n+            Asserts.assertEquals(compareLongWithImm2(x), expectedResult(x, 42 << 12));\n+            Asserts.assertEquals(compareLongWithImm3(x), expectedResult(x, 42 << 24));\n+            Asserts.assertEquals(compareLongWithImm4(x), expectedResult(x, Integer.MIN_VALUE));\n+            Asserts.assertEquals(compareLongWithImm5(x), expectedResult(x, Long.MIN_VALUE));\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/TestCompareUnsigned.java","additions":60,"deletions":6,"binary":false,"changes":66,"status":"modified"}]}