{"files":[{"patch":"@@ -292,2 +292,4 @@\n-     * <li>The leading \"{@code \/**}\"\n-     * and trailing \"<code>*&#47;<\/code>\" are removed.\n+     * <li>The leading \"{@code \/**}\" is removed, as are any\n+     * immediately following space characters on that line. If all the\n+     * characters of the line are removed, it makes no contribution to\n+     * the returned comment.\n@@ -295,1 +297,1 @@\n-     * of the comment starting after the initial \"{@code \/**}\",\n+     * of the doc comment starting after the initial \"{@code \/**}\",\n@@ -303,0 +305,5 @@\n+     * <li> The trailing \"<code>*&#47;<\/code>\" is removed. The line\n+     * with the trailing\" <code>*&#47;<\/code>\" also undergoes leading\n+     * space and \"{@code *}\" character removal as described above. If all the characters\n+     * of the line are removed, it makes no contribution to the\n+     * returned comment.\n","filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/util\/Elements.java","additions":10,"deletions":3,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -107,0 +107,2 @@\n+    \/\/ End-of-line-style comment\n+    @SuppressWarnings(\"\") \/\/ A second preceding annotation\n@@ -145,0 +147,38 @@\n+\n+    \/\/ Space after ** is removed, but not space before \"*\/\"\n+    \/**   Totality *\/\n+    @ExpectedComment(\"Totality \") \/\/ No newline\n+    private void quux() {return ;}\n+\n+    \/\/ Space after \"**\" is removed, but not trailing space later on the line\n+    \/** Totality \n+     *\/\n+    @ExpectedComment(\"Totality \\n\")\n+    private void corge() {return ;}\n+\n+    \/**\n+     * Totality *\/\n+    @ExpectedComment(\" Totality \") \/\/ No newline\n+    private void grault() {return ;}\n+\n+    \/\/ Trailing space characters on first line\n+    \/** \\u0009 \n+     * Totality\n+     *\/\n+    @ExpectedComment(\" Totality\\n\") \/\/ No newline\n+    private void wombat() {return ;}\n+\n+    \/**\n+     *\/\n+    @ExpectedComment(\"\") \/\/ No newline\n+    private void empty() {return ;}\n+\n+    \/**\n+     * tail *\/\n+    @ExpectedComment(\" tail \") \/\/ No newline\n+    private void tail() {return ;}\n+\n+    \/**\n+   ****\/\n+    @ExpectedComment(\"\") \/\/ No newline\n+    private void tail2() {return ;}\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/util\/elements\/TestGetDocComments.java","additions":40,"deletions":0,"binary":false,"changes":40,"status":"modified"}]}