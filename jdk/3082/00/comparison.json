{"files":[{"patch":"@@ -610,1 +610,5 @@\n-        if (declaringClass.isEnum() ||\n+        if (\n+            declaringClass.isEnum()\n+        ) {\n+            return resultLength + 2 == numParameters;\n+        } else if (\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/Constructor.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -570,4 +570,6 @@\n-            Annotation[][] tmp = new Annotation[result.length+1][];\n-            \/\/ Shift annotations down one to account for an implicit leading parameter\n-            System.arraycopy(result, 0, tmp, 1, result.length);\n-            tmp[0] = new Annotation[0];\n+            Annotation[][] tmp = new Annotation[numParameters][];\n+            \/\/ Shift annotations down to account for any implicit leading parameters\n+            System.arraycopy(result, 0, tmp, numParameters - result.length, result.length);\n+            for (int i = 0; i < numParameters - result.length; i++) {\n+                tmp[i] = new Annotation[0];\n+            }\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/Executable.java","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -0,0 +1,54 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8263763\n+ * @summary Check that annotations on an enum constructor are indexed correctly.\n+ *\/\n+\n+import java.lang.annotation.Annotation;\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+import java.lang.reflect.Constructor;\n+\n+public class EnumConstructorAnnotation {\n+\n+    public static void main(String[] args) {\n+        Constructor<?> c = SampleEnum.class.getDeclaredConstructors()[0];\n+        Annotation[] a = c.getParameters()[2].getAnnotations();\n+        if (a.length != 1) {\n+            throw new RuntimeException(\"Unexpected length \" + a.length);\n+        } else if (a[0].annotationType() != SampleAnnotation.class) {\n+            throw new RuntimeException(\"Unexpected type \" + a[0]);\n+        }\n+    }\n+\n+    enum SampleEnum {\n+        INSTANCE(\"foo\");\n+        SampleEnum(@SampleAnnotation String value) { }\n+    }\n+\n+    @Retention(RetentionPolicy.RUNTIME)\n+    @interface SampleAnnotation { }\n+}\n","filename":"test\/jdk\/java\/lang\/annotation\/EnumConstructorAnnotation.java","additions":54,"deletions":0,"binary":false,"changes":54,"status":"added"}]}