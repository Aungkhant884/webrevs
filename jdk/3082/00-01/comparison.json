{"files":[{"patch":"@@ -608,1 +608,2 @@\n-    boolean handleParameterNumberMismatch(int resultLength, int numParameters) {\n+    boolean handleParameterNumberMismatch(int resultLength, Class<?>[] parameterTypes) {\n+        int numParameters = parameterTypes.length;\n@@ -613,1 +614,3 @@\n-            return resultLength + 2 == numParameters;\n+            return resultLength + 2 == numParameters &&\n+                    parameterTypes[0] == String.class &&\n+                    parameterTypes[1] == int.class;\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/Constructor.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -569,1 +569,1 @@\n-            handleParameterNumberMismatch(result.length, numParameters)) {\n+            handleParameterNumberMismatch(result.length, parameterTypes)) {\n@@ -581,1 +581,1 @@\n-    abstract boolean handleParameterNumberMismatch(int resultLength, int numParameters);\n+    abstract boolean handleParameterNumberMismatch(int resultLength, Class<?>[] parameterTypes);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/Executable.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -764,1 +764,1 @@\n-    boolean handleParameterNumberMismatch(int resultLength, int numParameters) {\n+    boolean handleParameterNumberMismatch(int resultLength, Class<?>[] parameterTypes) {\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/Method.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}