{"files":[{"patch":"@@ -63,3 +63,3 @@\n-  STATIC_ASSERT(FieldBits < ContainerBits);\n-  STATIC_ASSERT(FieldShift + FieldBits <= ContainerBits);\n-  STATIC_ASSERT(ValueShift + FieldBits <= ContainerBits);\n+  static_assert(FieldBits < ContainerBits, \"Field too large\");\n+  static_assert(FieldShift + FieldBits <= ContainerBits, \"Field too large\");\n+  static_assert(ValueShift + FieldBits <= ContainerBits, \"Field too large\");\n","filename":"src\/hotspot\/share\/gc\/z\/zBitField.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -69,4 +69,7 @@\n-typedef ZStack<ZMarkStackEntry, ZMarkStackSlots>     ZMarkStack;\n-typedef ZStackList<ZMarkStack>                       ZMarkStackList;\n-typedef ZStack<ZMarkStack*, ZMarkStackMagazineSlots> ZMarkStackMagazine;\n-typedef ZStackList<ZMarkStackMagazine>               ZMarkStackMagazineList;\n+using ZMarkStack = ZStack<ZMarkStackEntry, ZMarkStackSlots>;\n+using ZMarkStackList = ZStackList<ZMarkStack>;\n+using ZMarkStackMagazine = ZStack<ZMarkStack*, ZMarkStackMagazineSlots>;\n+using ZMarkStackMagazineList = ZStackList<ZMarkStackMagazine>;\n+\n+static_assert(sizeof(ZMarkStack) == ZMarkStackSize, \"ZMarkStack size mismatch\");\n+static_assert(sizeof(ZMarkStackMagazine) <= ZMarkStackSize, \"ZMarkStackMagazine size too large\");\n","filename":"src\/hotspot\/share\/gc\/z\/zMarkStack.hpp","additions":7,"deletions":4,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -131,3 +131,0 @@\n-  guarantee(sizeof(ZMarkStack) == ZMarkStackSize, \"Size mismatch\");\n-  guarantee(sizeof(ZMarkStackMagazine) <= ZMarkStackSize, \"Size mismatch\");\n-\n","filename":"src\/hotspot\/share\/gc\/z\/zMarkStackAllocator.cpp","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"}]}