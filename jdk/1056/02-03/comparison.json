{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -105,3 +105,3 @@\n-    public void setStandalone(boolean flag) {\n-        fStandaloneSet = true;\n-        fStandalone = flag;\n+    public void setStandalone(boolean isStandalone, boolean standaloneSet) {\n+        fStandaloneSet = standaloneSet;\n+        fStandalone = isStandalone;\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/xml\/internal\/stream\/events\/StartDocumentEvent.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -134,3 +134,1 @@\n-                if (streamReader.standaloneSet()) {\n-                    sdEvent.setStandalone(streamReader.isStandalone());\n-                }\n+                sdEvent.setStandalone(streamReader.isStandalone(), streamReader.standaloneSet());\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/xml\/internal\/stream\/events\/XMLEventAllocatorImpl.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,0 +31,4 @@\n+import javax.xml.stream.XMLStreamException;\n+import javax.xml.stream.events.StartDocument;\n+\n+import org.testng.annotations.DataProvider;\n@@ -34,0 +38,2 @@\n+import static org.testng.Assert.assertEquals;\n+\n@@ -36,1 +42,1 @@\n- * @bug 8204329\n+ * @bug 8204329 8256515\n@@ -54,0 +60,19 @@\n+\n+    @DataProvider\n+    Object[][] standaloneSetTestData() {\n+        return new Object[][]{\n+                {\"<?xml version=\\\"1.0\\\"?>\", false, false},\n+                {\"<?xml version=\\\"1.0\\\" standalone=\\\"no\\\"?>\", false, true},\n+                {\"<?xml version=\\\"1.0\\\" standalone=\\\"yes\\\"?>\", true, true}\n+        };\n+    }\n+\n+    @Test(dataProvider = \"standaloneSetTestData\")\n+    void testStandaloneSet(String xml, boolean standalone, boolean standaloneSet) throws XMLStreamException {\n+        XMLInputFactory factory = XMLInputFactory.newInstance();\n+        XMLEventReader reader = factory.createXMLEventReader(new StringReader(xml));\n+        StartDocument startDocumentEvent = (StartDocument) reader.nextEvent();\n+\n+        assertEquals(startDocumentEvent.isStandalone(), standalone);\n+        assertEquals(startDocumentEvent.standaloneSet(), standaloneSet);\n+    }\n","filename":"test\/jaxp\/javax\/xml\/jaxp\/unittest\/stream\/XMLEventReaderTest\/EventReaderTest.java","additions":27,"deletions":2,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -1,44 +0,0 @@\n-import org.testng.annotations.Test;\n-\n-import javax.xml.stream.XMLStreamException;\n-import javax.xml.stream.XMLInputFactory;\n-import javax.xml.stream.events.StartDocument;\n-\n-import java.io.StringReader;\n-\n-import static org.testng.Assert.assertFalse;\n-import static org.testng.Assert.assertTrue;\n-\n-\/*\n- * @test\n- * @modules java.xml\n- * @run testng\/othervm XmlInputFactoryTest\n- *\n- *\/\n-@Test\n-public class XmlInputFactoryTest {\n-\n-    @Test\n-    void startDocumentEvent_standaloneSet() throws XMLStreamException {\n-        var factory = XMLInputFactory.newInstance();\n-        var xml = \"\"\"\n-                <?xml version=\"1.0\"?>\"\"\";\n-        var reader = factory.createXMLEventReader(new StringReader(xml));\n-        var startDocumentEvent = (StartDocument) reader.nextEvent();\n-        assertFalse(startDocumentEvent.standaloneSet());\n-\n-        xml = \"\"\"\n-                <?xml version=\"1.0\" standalone=\"yes\"?>\"\"\";\n-        reader = factory.createXMLEventReader(new StringReader(xml));\n-        startDocumentEvent = (StartDocument) reader.nextEvent();\n-        assertTrue(startDocumentEvent.standaloneSet());\n-        assertTrue(startDocumentEvent.isStandalone());\n-\n-        xml = \"\"\"\n-                <?xml version=\"1.0\" standalone=\"no\"?>\"\"\";\n-        reader = factory.createXMLEventReader(new StringReader(xml));\n-        startDocumentEvent = (StartDocument) reader.nextEvent();\n-        assertTrue(startDocumentEvent.standaloneSet());\n-        assertFalse(startDocumentEvent.isStandalone());\n-    }\n-}\n","filename":"test\/jdk\/javax\/xml\/jaxp\/8256515\/XmlInputFactoryTest.java","additions":0,"deletions":44,"binary":false,"changes":44,"status":"deleted"}]}