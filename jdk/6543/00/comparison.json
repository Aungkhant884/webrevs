{"files":[{"patch":"@@ -84,0 +84,5 @@\n+                \/\/ MonitorUsedDeflationThreshold == 10 means we'll request\n+                \/\/ deflations when 10% of monitors are used rather than the\n+                \/\/ default 90%. This should allow the test to tolerate a burst\n+                \/\/ of used monitors by threads not under this test's control.\n+                \"-XX:MonitorUsedDeflationThreshold=10\",\n@@ -92,2 +97,3 @@\n-                \/\/ reproduced the bug with JDK13. Anything above the\n-                \/\/ in_use_list_ceiling will do the trick.\n+                \/\/ reproduced the bug with JDK13. With inflate_count == 33, an\n+                \/\/ initial ceiling == 12 and MonitorUsedDeflationThreshold == 10,\n+                \/\/ we should hit NoAsyncDeflationProgressMax at least 3 times.\n@@ -114,0 +120,2 @@\n+            \/\/ Uncomment the following line for dumping test output in passing runs:\n+            \/\/ output_detail.reportDiagnosticSummary();\n","filename":"test\/hotspot\/jtreg\/runtime\/Monitor\/MonitorUsedDeflationThresholdTest.java","additions":10,"deletions":2,"binary":false,"changes":12,"status":"modified"}]}