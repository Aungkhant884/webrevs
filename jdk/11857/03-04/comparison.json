{"files":[{"patch":"@@ -27,1 +27,1 @@\n- * @summary SSLEngineResult needs updating [none yet]\n+ * @summary Verify return values from SSLEngine wrap\/unwrap (TLSv1.2) operations\n@@ -29,1 +29,1 @@\n- * @run main\/othervm -Djsse.enableCBCProtection=false CheckStatus\n+ * @run main CheckStatus\n@@ -135,1 +135,0 @@\n-        clientEngine.setEnabledProtocols(new String[]{\"TLSv1.2\"});\n@@ -137,1 +136,0 @@\n-        serverEngine.setEnabledProtocols(new String[]{\"TLSv1.2\"});\n@@ -636,7 +634,1 @@\n-        \/\/ reset the security property to make sure that the algorithms\n-        \/\/ and keys used in this test are not disabled.\n-        Security.setProperty(\"jdk.tls.disabledAlgorithms\", \"\");\n-\n-        CheckStatus cs;\n-\n-        cs = new CheckStatus();\n+        CheckStatus cs = new CheckStatus();\n@@ -644,1 +636,0 @@\n-\n@@ -678,1 +669,1 @@\n-        SSLContext sslCtx = SSLContext.getInstance(\"TLS\");\n+        SSLContext sslCtx = SSLContext.getInstance(\"TLSv1.2\");\n@@ -698,2 +689,2 @@\n-        clientOut = ByteBuffer.wrap(\"Hi Engine2, I'm SSLEngine1\".getBytes());\n-        serverOut = ByteBuffer.wrap(\"Hello Engine1, I'm SSLEngine2\".getBytes());\n+        clientOut = ByteBuffer.wrap(\"Hi Server, I'm Client\".getBytes());\n+        serverOut = ByteBuffer.wrap(\"Hello Client, I'm Server\".getBytes());\n@@ -701,2 +692,2 @@\n-        log(\"AppOut1 = \" + clientOut);\n-        log(\"AppOut2 = \" + serverOut);\n+        log(\"Client out = \" + clientOut);\n+        log(\"Server out = \" + serverOut);\n@@ -706,1 +697,1 @@\n-    private static void runDelegatedTasks(SSLEngine engine) throws Exception {\n+    private static void runDelegatedTasks(SSLEngine engine) {\n@@ -710,1 +701,1 @@\n-            log(\"running delegated task...\");\n+            log(\"Running delegated task...\");\n@@ -715,17 +706,0 @@\n-    private static void checkTransfer(ByteBuffer a, ByteBuffer b)\n-            throws Exception {\n-        a.flip();\n-        b.flip();\n-\n-        if (!a.equals(b)) {\n-            throw new Exception(\"Data didn't transfer cleanly\");\n-        } else {\n-            log(\"Data transferred cleanly\");\n-        }\n-\n-        a.position(a.limit());\n-        b.position(b.limit());\n-        a.limit(a.capacity());\n-        b.limit(b.capacity());\n-    }\n-\n","filename":"test\/jdk\/javax\/net\/ssl\/SSLEngine\/CheckStatus.java","additions":10,"deletions":36,"binary":false,"changes":46,"status":"modified"}]}