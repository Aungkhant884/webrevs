{"files":[{"patch":"@@ -291,3 +291,0 @@\n-    \/\/ We will reverse the bytecode rewriting _after_ adjusting them.\n-    \/\/ Adjust the cache index by offset to the invokedynamic entries in the\n-    \/\/ cpCache plus the delta if the invokedynamic bytecodes were adjusted.\n","filename":"src\/hotspot\/share\/interpreter\/rewriter.cpp","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -105,1 +105,3 @@\n-          return (short) cpCache.getEntryAt(cpCacheIndex).getConstantPoolIndex();\n+          short cpIndex = (short) cpCache.getIndyEntryAt(cpCacheIndex).getConstantPoolIndex();\n+          Assert.that(cpool.getTagAt(cpIndex).isInvokeDynamic(), \"CP Entry should be InvokeDynamic\");\n+          return cpIndex;\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/tools\/jcore\/ByteCodeRewriter.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"}]}