{"files":[{"patch":"@@ -4818,1 +4818,1 @@\n-  print_method_impl(cpt, NOT_PRODUCT(CompilerPhaseTypeHelper::to_string(cpt) COMMA) level);\n+  print_method(cpt, NULL, level);\n@@ -4822,0 +4822,4 @@\n+  EventCompilerPhase event;\n+  if (event.should_commit()) {\n+    CompilerEvent::PhaseEvent::post(event, C->_latest_stage_start_counter, cpt, C->_compile_id, level);\n+  }\n@@ -4828,2 +4832,0 @@\n-  } else {\n-    ss.print_raw(\": NULL\");\n@@ -4831,3 +4833,0 @@\n-#endif\n-  C->print_method_impl(cpt, NOT_PRODUCT(ss.as_string() COMMA) level);\n-}\n@@ -4835,6 +4834,1 @@\n-void Compile::print_method_impl(CompilerPhaseType cpt, NOT_PRODUCT(const char* name COMMA) int level) {\n-  EventCompilerPhase event;\n-  if (event.should_commit()) {\n-    CompilerEvent::PhaseEvent::post(event, C->_latest_stage_start_counter, cpt, C->_compile_id, level);\n-  }\n-#ifndef PRODUCT\n+  const char *name = ss.as_string();\n","filename":"src\/hotspot\/share\/opto\/compile.cpp","additions":6,"deletions":12,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -660,1 +660,0 @@\n-  void print_method_impl(CompilerPhaseType cpt, NOT_PRODUCT(const char* name COMMA) int level);\n","filename":"src\/hotspot\/share\/opto\/compile.hpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"}]}