{"files":[{"patch":"@@ -218,1 +218,1 @@\n-      entry = (JvmtiTagMapEntry*)HashtableEntry<WeakHandle, mtServiceability>::make_ptr(*p);\n+      entry = *p;\n@@ -255,1 +255,1 @@\n-      entry = (JvmtiTagMapEntry*)HashtableEntry<WeakHandle, mtServiceability>::make_ptr(*p);\n+      entry = *p;\n","filename":"src\/hotspot\/share\/prims\/jvmtiTagMapTable.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -182,1 +182,0 @@\n-      bool keep_shared = p->is_shared();\n@@ -187,4 +186,0 @@\n-\n-      if (keep_shared) {\n-        p->set_shared();\n-      }\n","filename":"src\/hotspot\/share\/utilities\/hashtable.cpp","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,7 +50,1 @@\n-  \/\/ Link to next element in the linked list for this bucket.  EXCEPT\n-  \/\/ bit 0 set indicates that this entry is shared and must not be\n-  \/\/ unlinked from the table. Bit 0 is set during the dumping of the\n-  \/\/ archive. Since shared entries are immutable, _next fields in the\n-  \/\/ shared entries will not change.  New entries will always be\n-  \/\/ unshared and since pointers are align, bit 0 will always remain 0\n-  \/\/ with no extra effort.\n+  \/\/ Link to next element in the linked list for this bucket.\n@@ -74,4 +68,0 @@\n-  static BasicHashtableEntry<F>* make_ptr(BasicHashtableEntry<F>* p) {\n-    return (BasicHashtableEntry*)((intptr_t)p & -2);\n-  }\n-\n@@ -79,1 +69,1 @@\n-    return make_ptr(_next);\n+    return _next;\n@@ -89,8 +79,0 @@\n-\n-  bool is_shared() const {\n-    return ((intptr_t)_next & 1) != 0;\n-  }\n-\n-  void set_shared() {\n-    _next = (BasicHashtableEntry<F>*)((intptr_t)_next | 1);\n-  }\n","filename":"src\/hotspot\/share\/utilities\/hashtable.hpp","additions":3,"deletions":21,"binary":false,"changes":24,"status":"modified"}]}