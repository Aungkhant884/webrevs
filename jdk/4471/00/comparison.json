{"files":[{"patch":"@@ -1480,1 +1480,1 @@\n-  _regions_failed_evacuation(NULL),\n+  _regions_failed_evacuation(mtGC),\n@@ -1773,1 +1773,1 @@\n-  _regions_failed_evacuation = NEW_C_HEAP_ARRAY(volatile bool, max_regions(), mtGC);\n+  _regions_failed_evacuation.resize(max_regions());\n@@ -3473,1 +3473,1 @@\n-  memset((void*)_regions_failed_evacuation, false, sizeof(bool) * max_regions());\n+  _regions_failed_evacuation.clear();\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -58,0 +58,1 @@\n+#include \"utilities\/bitMap.hpp\"\n@@ -871,1 +872,1 @@\n-  volatile bool* _regions_failed_evacuation;\n+  CHeapBitMap _regions_failed_evacuation;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -40,0 +40,1 @@\n+#include \"utilities\/bitMap.inline.hpp\"\n@@ -198,3 +199,1 @@\n-  assert(region_idx < max_regions(), \"Invalid region index %u\", region_idx);\n-\n-  return Atomic::load(&_regions_failed_evacuation[region_idx]);\n+  return _regions_failed_evacuation.par_at(region_idx, memory_order_relaxed);\n@@ -208,4 +207,1 @@\n-  assert(region_idx < max_regions(), \"Invalid region index %u\", region_idx);\n-\n-  volatile bool* region_failed_addr = &_regions_failed_evacuation[region_idx];\n-  bool result = !Atomic::load(region_failed_addr) && !Atomic::cmpxchg(region_failed_addr, false, true, memory_order_relaxed);\n+  bool result = _regions_failed_evacuation.par_set_bit(region_idx, memory_order_relaxed);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.inline.hpp","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"}]}