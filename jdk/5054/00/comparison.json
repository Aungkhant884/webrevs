{"files":[{"patch":"@@ -834,1 +834,3 @@\n-  _igvn.replace_node(_callprojs.fallthrough_ioproj, *io);\n+  if (_callprojs.fallthrough_ioproj != NULL) {\n+    _igvn.replace_node(_callprojs.fallthrough_ioproj, *io);\n+  }\n@@ -1098,2 +1100,8 @@\n-  *io = _callprojs.fallthrough_ioproj->clone();\n-  transform_later(*io);\n+  \/\/ When src is negative and arraycopy is before an infinite loop,_callprojs.fallthrough_ioproj\n+  \/\/ could be NULL. Not clone and update NULL fallthrough_ioproj.\n+  if (_callprojs.fallthrough_ioproj != NULL) {\n+    *io = _callprojs.fallthrough_ioproj->clone();\n+    transform_later(*io);\n+  } else {\n+    *io = NULL;\n+  }\n@@ -1336,1 +1344,3 @@\n-    _igvn.replace_node(_callprojs.fallthrough_ioproj, io);\n+    if (_callprojs.fallthrough_ioproj != NULL) {\n+      _igvn.replace_node(_callprojs.fallthrough_ioproj, io);\n+    }\n","filename":"src\/hotspot\/share\/opto\/macroArrayCopy.cpp","additions":14,"deletions":4,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -0,0 +1,61 @@\n+\/*\n+ * Copyright (C) 2021 THL A29 Limited, a Tencent company. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test\n+ * @bug 8272131\n+ * @requires vm.compiler2.enabled\n+ * @summary ArrayCopy with negative index before infinit loop\n+ * @run main\/othervm -Xbatch -XX:-TieredCompilation\n+ *                   -XX:CompileCommand=compileonly,\"*TestIllegalArrayCopyBeforeInfiniteLoop::foo\"\n+ *                   compiler.arraycopy.TestIllegalArrayCopyBeforeInfiniteLoop\n+ *\/\n+\n+package compiler.arraycopy;\n+\n+import java.util.Arrays;\n+\n+public class TestIllegalArrayCopyBeforeInfiniteLoop {\n+    private static char src[] = new char[10];\n+    private static int count = 0;\n+    private static final int iter = 10_000;\n+\n+    public static void main(String[] args) throws Exception {\n+        for (int i = 0; i < iter; ++i) {\n+            foo();\n+        }\n+        if (count != iter) {\n+            throw new RuntimeException(\"test failed\");\n+        }\n+    }\n+\n+    static void foo() {\n+        try {\n+            Arrays.copyOfRange(src, -1, 128);\n+            do {\n+            } while (true);\n+        } catch (ArrayIndexOutOfBoundsException ex) {\n+            count++;\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/arraycopy\/TestIllegalArrayCopyBeforeInfiniteLoop.java","additions":61,"deletions":0,"binary":false,"changes":61,"status":"added"}]}