{"files":[{"patch":"@@ -670,0 +670,4 @@\n+     * @apiNote\n+     * This method corresponds to the isNaN operation defined in IEEE\n+     * 754.\n+     *\n@@ -682,0 +686,4 @@\n+     * @apiNote\n+     * This method corresponds to the isInfinite operation defined in\n+     * IEEE 754.\n+     *\n@@ -695,0 +703,4 @@\n+     * @apiNote\n+     * This method corresponds to the isFinite operation defined in\n+     * IEEE 754.\n+     *\n@@ -1169,0 +1181,4 @@\n+     * @apiNote\n+     * This method corresponds to the maximum operation defined in\n+     * IEEE 754.\n+     *\n@@ -1183,0 +1199,4 @@\n+     * @apiNote\n+     * This method corresponds to the minimum operation defined in\n+     * IEEE 754.\n+     *\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Double.java","additions":20,"deletions":0,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -495,0 +495,4 @@\n+     * @apiNote\n+     * This method corresponds to the isNaN operation defined in IEEE\n+     * 754.\n+     *\n@@ -507,0 +511,4 @@\n+     * @apiNote\n+     * This method corresponds to the isInfinite operation defined in\n+     * IEEE 754.\n+     *\n@@ -521,0 +529,4 @@\n+     * @apiNote\n+     * This method corresponds to the isFinite operation defined in\n+     * IEEE 754.\n+     *\n@@ -996,0 +1008,4 @@\n+     * @apiNote\n+     * This method corresponds to the maximum operation defined in\n+     * IEEE 754.\n+     *\n@@ -1010,0 +1026,4 @@\n+     * @apiNote\n+     * This method corresponds to the minimum operation defined in\n+     * IEEE 754.\n+     *\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Float.java","additions":20,"deletions":0,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -769,2 +769,2 @@\n-     * This method corresponds to the convertToIntegerTiesToEven\n-     * operation defined in IEEE 754.\n+     * This method corresponds to the convertTowardPositive operation\n+     * defined in IEEE 754.\n@@ -822,2 +822,2 @@\n-     * This method corresponds to the convertToIntegerTiesToEven\n-     * operation defined in IEEE 754.\n+     * This method corresponds to the convertTowardPositive operation\n+     * defined in IEEE 754.\n@@ -2789,1 +2789,1 @@\n-     * {@link Float#MIN_EXPONENT} -1.\n+     * {@link Float#MIN_EXPONENT} - 1.\n@@ -2791,0 +2791,4 @@\n+     * @apiNote\n+     * This method is analogous to the logB operation defined in IEEE\n+     * 754, but returns a different value on subnormal arguments.\n+     *\n@@ -2813,1 +2817,1 @@\n-     * {@link Double#MIN_EXPONENT} -1.\n+     * {@link Double#MIN_EXPONENT} - 1.\n@@ -2815,0 +2819,4 @@\n+     * @apiNote\n+     * This method is analogous to the logB operation defined in IEEE\n+     * 754, but returns a different value on subnormal arguments.\n+     *\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Math.java","additions":14,"deletions":6,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -48,2 +48,2 @@\n- * be exactly representable in the result precision or fall between\n- * two representable values. In the case of falling between two\n+ * be exactly representable in the result precision or will fall between\n+ * two adjacent representable values. In the case of falling between two\n@@ -53,1 +53,1 @@\n- * continuous segment of real number line to a singe representable\n+ * continuous segment of real number line to a single representable\n@@ -108,1 +108,1 @@\n- * for Floating-Point Arithmetic<\/cite>, IEEE 754-2019. Where present,\n+ * for Floating-Point Arithmetic<\/cite>. Where present,\n@@ -163,1 +163,1 @@\n-         * conversion to an integer value and remainder (JLS {@jls\n+         * remainder and conversion to an integer value (JLS {@jls\n@@ -165,1 +165,1 @@\n-         * This mode corresponds to the IEEE 754-2019 rounding-direction\n+         * This mode corresponds to the IEEE 754 rounding-direction\n@@ -196,1 +196,1 @@\n-         * This mode corresponds to the IEEE 754-2019 rounding-direction\n+         * This mode corresponds to the IEEE 754 rounding-direction\n@@ -227,1 +227,1 @@\n-         * This mode corresponds to the IEEE 754-2019 rounding-direction\n+         * This mode corresponds to the IEEE 754 rounding-direction\n@@ -260,1 +260,1 @@\n-         * This mode corresponds to the IEEE 754-2019 rounding-direction\n+         * This mode corresponds to the IEEE 754 rounding-direction\n@@ -324,1 +324,1 @@\n-         * Note that this\n+         * This\n@@ -331,1 +331,1 @@\n-         * This mode corresponds to the IEEE 754-2019 rounding-direction\n+         * This mode corresponds to the IEEE 754 rounding-direction\n","filename":"src\/java.base\/share\/classes\/java\/math\/RoundingMode.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"}]}