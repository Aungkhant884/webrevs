{"files":[{"patch":"@@ -462,1 +462,3 @@\n-    _unique_id(0), _inline_cg(NULL), _callee(NULL), _is_pure_call(false), _prof_factor(prof_factor) {}\n+    _unique_id(0), _inline_cg(NULL), _callee(NULL), _is_pure_call(false), _prof_factor(prof_factor) {\n+    assert(IncrementalInlineVirtual, \"required\");\n+  }\n","filename":"src\/hotspot\/share\/opto\/callGenerator.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -139,1 +139,1 @@\n-      } else if (should_delay_vector_inlining(callee, jvms)) {\n+      } else if (IncrementalInline && should_delay_vector_inlining(callee, jvms)) {\n","filename":"src\/hotspot\/share\/opto\/doCall.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,49 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package compiler.vectorapi;\n+\n+import jdk.incubator.vector.IntVector;\n+import jdk.incubator.vector.VectorSpecies;\n+\n+\/*\n+ * @test\n+ * @bug 8244675\n+ * @modules jdk.incubator.vector\n+ *\n+ * @run main\/othervm -Xbatch -XX:-Inline            compiler.vectorapi.TestNoInline\n+ * @run main\/othervm -Xbatch -XX:-IncrementalInline compiler.vectorapi.TestNoInline\n+ *\/\n+public class TestNoInline {\n+    static final VectorSpecies<Integer> I_SPECIES = IntVector.SPECIES_PREFERRED;\n+\n+    static IntVector test(int[] arr) {\n+        return IntVector.fromArray(I_SPECIES, arr, 0);\n+    }\n+    public static void main(String[] args) {\n+        int[] arr = new int[64];\n+        for (int i = 0; i < 20_000; i++) {\n+            test(arr);\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorapi\/TestNoInline.java","additions":49,"deletions":0,"binary":false,"changes":49,"status":"added"}]}