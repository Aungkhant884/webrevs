{"files":[{"patch":"@@ -277,18 +277,10 @@\n-    return resolve_instance_class_or_null_helper(class_name, class_loader, protection_domain, THREAD);\n-  }\n-}\n-\n-\/\/ name may be in the form of \"java\/lang\/Object\" or \"Ljava\/lang\/Object;\"\n-InstanceKlass* SystemDictionary::resolve_instance_class_or_null_helper(Symbol* class_name,\n-                                                                       Handle class_loader,\n-                                                                       Handle protection_domain,\n-                                                                       TRAPS) {\n-  assert(class_name != NULL && !Signature::is_array(class_name), \"must be\");\n-  if (Signature::has_envelope(class_name)) {\n-    ResourceMark rm(THREAD);\n-    \/\/ Ignore wrapping L and ;.\n-    TempNewSymbol name = SymbolTable::new_symbol(class_name->as_C_string() + 1,\n-                                                 class_name->utf8_length() - 2);\n-    return resolve_instance_class_or_null(name, class_loader, protection_domain, THREAD);\n-  } else {\n-    return resolve_instance_class_or_null(class_name, class_loader, protection_domain, THREAD);\n+    assert(class_name != NULL && !Signature::is_array(class_name), \"must be\");\n+    if (Signature::has_envelope(class_name)) {\n+      ResourceMark rm(THREAD);\n+      \/\/ Ignore wrapping L and ;.\n+      TempNewSymbol name = SymbolTable::new_symbol(class_name->as_C_string() + 1,\n+                                                   class_name->utf8_length() - 2);\n+      return resolve_instance_class_or_null(name, class_loader, protection_domain, THREAD);\n+    } else {\n+      return resolve_instance_class_or_null(class_name, class_loader, protection_domain, THREAD);\n+    }\n@@ -427,4 +419,4 @@\n-    SystemDictionary::resolve_instance_class_or_null_helper(super_name,\n-                                                            class_loader,\n-                                                            protection_domain,\n-                                                            THREAD);\n+    SystemDictionary::resolve_instance_class_or_null(super_name,\n+                                                     class_loader,\n+                                                     protection_domain,\n+                                                     THREAD);\n","filename":"src\/hotspot\/share\/classfile\/systemDictionary.cpp","additions":14,"deletions":22,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -320,4 +320,0 @@\n-  static InstanceKlass* resolve_instance_class_or_null_helper(Symbol* name,\n-                                                              Handle class_loader,\n-                                                              Handle protection_domain,\n-                                                              TRAPS);\n","filename":"src\/hotspot\/share\/classfile\/systemDictionary.hpp","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"}]}