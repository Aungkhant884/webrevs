{"files":[{"patch":"@@ -139,2 +139,7 @@\n-    if (FLAG_IS_DEFAULT(UseVectorByteReverseInstructionsPPC64)) {\n-      FLAG_SET_ERGO(UseVectorByteReverseInstructionsPPC64, true);\n+    if (SuperwordUseVSX) {\n+      if (FLAG_IS_DEFAULT(UseVectorByteReverseInstructionsPPC64)) {\n+        FLAG_SET_ERGO(UseVectorByteReverseInstructionsPPC64, true);\n+      }\n+    } else if (UseVectorByteReverseInstructionsPPC64) {\n+      warning(\"UseVectorByteReverseInstructionsPPC64 specified, but needs SuperwordUseVSX.\");\n+      FLAG_SET_DEFAULT(UseVectorByteReverseInstructionsPPC64, false);\n","filename":"src\/hotspot\/cpu\/ppc\/vm_version_ppc.cpp","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -42,0 +42,11 @@\n+\/*\n+ * @test VectorConversionPPC64\n+ * @bug 8256479\n+ * @requires os.arch ==\"ppc64\" | os.arch == \"ppc64le\"\n+ * @summary VectorConversion on PPC64 without Vector Register usage\n+ * @modules jdk.incubator.vector\n+ * @modules java.base\/jdk.internal.vm.annotation\n+ * @run testng\/othervm  -XX:-SuperwordUseVSX -XX:-TieredCompilation --add-opens jdk.incubator.vector\/jdk.incubator.vector=ALL-UNNAMED\n+ * Vector64ConversionTests\n+ *\/\n+\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Vector64ConversionTests.java","additions":11,"deletions":0,"binary":false,"changes":11,"status":"modified"}]}