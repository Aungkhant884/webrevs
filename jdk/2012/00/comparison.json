{"files":[{"patch":"@@ -0,0 +1,59 @@\n+\/*\n+ * Copyright (c) 1999, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.color.ICC_Profile;\n+import java.awt.color.ICC_ProfileGray;\n+import java.awt.color.ICC_ProfileRGB;\n+\n+\/**\n+ * @test\n+ * @bug 4176618 7042594\n+ * @summary This interactive test verifies that passing null to\n+ *          ICC_ProfileRGB.getInstance() does not crash the VM.\n+ *          An IllegalArgumentException: Invalid ICC Profile Data should be\n+ *          generated.\n+ *\/\n+public final class GetInstanceNullData {\n+\n+    public static void main(String[] argv) {\n+        byte b[] = null;\n+        try {\n+            ICC_ProfileRGB p = (ICC_ProfileRGB) ICC_ProfileRGB.getInstance(b);\n+            throw new RuntimeException(\"IllegalArgumentException is expected\");\n+        } catch (IllegalArgumentException ignored) {\n+            \/\/ expected\n+        }\n+        try {\n+            ICC_ProfileGray p = (ICC_ProfileGray) ICC_ProfileGray.getInstance(b);\n+            throw new RuntimeException(\"IllegalArgumentException is expected\");\n+        } catch (IllegalArgumentException ignored) {\n+            \/\/ expected\n+        }\n+        try {\n+            ICC_Profile p = ICC_Profile.getInstance(b);\n+            throw new RuntimeException(\"IllegalArgumentException is expected\");\n+        } catch (IllegalArgumentException ignored) {\n+            \/\/ expected\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/color\/GetInstanceNullData.java","additions":59,"deletions":0,"binary":false,"changes":59,"status":"added"},{"patch":"@@ -0,0 +1,50 @@\n+\/*\n+ * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.color.ColorSpace;\n+\n+\/**\n+ * @test\n+ * @bug 4752851\n+ * @summary spec for ColorSpace.getName() does not describe case of wrong param\n+ *\/\n+public final class GetNameExceptionTest {\n+\n+    public static void main(String[] args) {\n+        test(ColorSpace.getInstance(ColorSpace.CS_sRGB));\n+        test(ColorSpace.getInstance(ColorSpace.CS_LINEAR_RGB));\n+        test(ColorSpace.getInstance(ColorSpace.CS_CIEXYZ));\n+        test(ColorSpace.getInstance(ColorSpace.CS_PYCC));\n+        test(ColorSpace.getInstance(ColorSpace.CS_GRAY));\n+    }\n+\n+    private static void test(ColorSpace cs) {\n+        try {\n+            cs.getName(cs.getNumComponents());\n+            throw new RuntimeException(\"Method ColorSpace.getName(int) should\" +\n+                                       \" throw exception for incorrect input\");\n+        } catch (IllegalArgumentException ignored) {\n+            \/\/ expected\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/color\/GetNameExceptionTest.java","additions":50,"deletions":0,"binary":false,"changes":50,"status":"added"},{"patch":"@@ -0,0 +1,65 @@\n+\/*\n+ * Copyright (c) 2005, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.color.ColorSpace;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+\/**\n+ * @test\n+ * @bug 4967082\n+ * @summary ColorSpace.getName(int) should return significant values for some CS\n+ *\/\n+public final class GetNameTest {\n+\n+    private static final Map<Integer, String[]> colorSpaces = new HashMap<>(5);\n+\n+    static {\n+        colorSpaces.put(ColorSpace.CS_CIEXYZ, new String[] {\"X\", \"Y\", \"Z\"});\n+        colorSpaces.put(ColorSpace.CS_sRGB,\n+                        new String[] {\"Red\", \"Green\", \"Blue\"});\n+        colorSpaces.put(ColorSpace.CS_LINEAR_RGB,\n+                        new String[] {\"Red\", \"Green\", \"Blue\"});\n+        colorSpaces.put(ColorSpace.CS_GRAY, new String[] {\"Gray\"});\n+        colorSpaces.put(ColorSpace.CS_PYCC,\n+                        new String[] {\"Unnamed color component(0)\",\n+                                      \"Unnamed color component(1)\",\n+                                      \"Unnamed color component(2)\"});\n+    };\n+\n+    public static void main(String[] args) {\n+        for (int csType : colorSpaces.keySet()) {\n+            ColorSpace cs = ColorSpace.getInstance(csType);\n+            String[] names = colorSpaces.get(csType);\n+            for (int i = 0; i < cs.getNumComponents(); i++) {\n+                String name = cs.getName(i);\n+                if (!name.equals(names[i])) {\n+                    System.err.println(\"ColorSpace with type=\" + cs.getType() +\n+                                       \" has wrong name of \" + i +\n+                                       \" component\");\n+                    throw new RuntimeException(\"Wrong name of the component\");\n+                }\n+            }\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/color\/GetNameTest.java","additions":65,"deletions":0,"binary":false,"changes":65,"status":"added"},{"patch":"@@ -0,0 +1,51 @@\n+\/*\n+ * Copyright (c) 2004, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.color.ColorSpace;\n+import java.awt.color.ICC_Profile;\n+\n+\/**\n+ * @test\n+ * @bug 4823896 7042594\n+ * @summary Test checks behavior of the ICC_Profile.setData(int, byte[])\n+ *\/\n+public final class ICC_ProfileSetNullDataTest {\n+\n+    public static void main(String[] args) {\n+        test(ICC_Profile.getInstance(ColorSpace.CS_sRGB));\n+        test(ICC_Profile.getInstance(ColorSpace.CS_LINEAR_RGB));\n+        test(ICC_Profile.getInstance(ColorSpace.CS_CIEXYZ));\n+        test(ICC_Profile.getInstance(ColorSpace.CS_PYCC));\n+        test(ICC_Profile.getInstance(ColorSpace.CS_GRAY));\n+    }\n+\n+    private static void test(ICC_Profile profile) {\n+        byte[] tagData = null;\n+        try {\n+            profile.setData(ICC_Profile.icSigCmykData, tagData);\n+        } catch (IllegalArgumentException e) {\n+            return;\n+        }\n+        throw new RuntimeException(\"IllegalArgumentException expected\");\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/color\/ICC_ProfileSetNullDataTest.java","additions":51,"deletions":0,"binary":false,"changes":51,"status":"added"},{"patch":"@@ -0,0 +1,87 @@\n+\/*\n+ * Copyright (c) 2005, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.image.DirectColorModel;\n+\n+\/**\n+ * @test\n+ * @bug 6245283\n+ * @summary Checks the behavior of the DirectColorModel.getRed(int)\n+ *          with multiple threads.\n+ *\/\n+public final class MultiThreadCMMTest extends Thread {\n+    \/* Number of concurent threads creating and accessing\n+     * DirectColorModel object\n+     *\/\n+    private static final int THREAD_COUNT = 100;\n+    private static final int ITERATION_COUNT = 20;\n+\n+    private static volatile boolean failed = false;\n+    private static volatile Exception failureException = null;\n+\n+    private static synchronized void setStatusFailed(Exception e) {\n+        \/* Store first occurred exception *\/\n+        if (!failed) {\n+            failureException = e;\n+            failed = true;\n+        }\n+    }\n+\n+    public static void main(String [] args) throws Exception {\n+\n+        Thread [] threadArray = new Thread [THREAD_COUNT];\n+        for (int i = 0; i < ITERATION_COUNT; i++) {\n+            for (int j = 0; j < threadArray.length; j++) {\n+                threadArray[j] = new MultiThreadCMMTest();\n+            };\n+\n+            for (int j = 0; j < threadArray.length; j++) {\n+                threadArray[j].start();\n+            }\n+\n+            \/* Ensure that all threads are finished *\/\n+            for (int j = 0; j < threadArray.length; j++) {\n+                threadArray[j].join();\n+                if (failed) {\n+                    throw new RuntimeException(failureException);\n+                }\n+            }\n+        }\n+    }\n+\n+    public void run() {\n+       int rMask16 = 0xF800;\n+       int gMask16 = 0x07C0;\n+       int bMask16 = 0x003E;\n+       int r;\n+       try {\n+           for(int i=0; i < 1000; i++) {\n+               DirectColorModel dcm =\n+                   new DirectColorModel(16, rMask16, gMask16, bMask16);\n+                r = dcm.getRed(10);\n+           }\n+       } catch(Exception e) {\n+            setStatusFailed(e);\n+       }\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/color\/MultiThreadCMMTest.java","additions":87,"deletions":0,"binary":false,"changes":87,"status":"added"},{"patch":"@@ -0,0 +1,55 @@\n+\/*\n+ * Copyright (c) 2004, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.color.ColorSpace;\n+import java.awt.color.ICC_Profile;\n+\n+\/**\n+ * @test\n+ * @bug 5042429\n+ * @summary This test verifies if ICC_profile instances for standard ColorSpace\n+ *          types are created without security exceptions if access to file\n+ *          system is prohibited.\n+ * @run main\/othervm\/policy=StandardProfileTest.policy StandardProfileTest\n+ *\/\n+public final class StandardProfileTest {\n+\n+    public static void main(String[] args) {\n+        if (System.getSecurityManager() == null) {\n+            throw new RuntimeException(\"SecurityManager is null\");\n+        }\n+\n+        int[] types = {\n+            ColorSpace.CS_CIEXYZ,\n+            ColorSpace.CS_GRAY,\n+            ColorSpace.CS_LINEAR_RGB,\n+            ColorSpace.CS_PYCC,\n+            ColorSpace.CS_sRGB } ;\n+\n+        for (int t = 0; t<types.length; t++) {\n+            System.out.println(\"type \" + t);\n+            ICC_Profile p = ICC_Profile.getInstance(types[t]);\n+            p.getPCSType();\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/color\/StandardProfileTest.java","additions":55,"deletions":0,"binary":false,"changes":55,"status":"added"},{"patch":"@@ -0,0 +1,30 @@\n+\/*\n+ * Copyright (c) 2004, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @bug     5042429\n+ * @summary This policy file prohibits access to the file system.\n+ *\/\n+\n+grant {\n+};\n","filename":"test\/jdk\/java\/awt\/color\/StandardProfileTest.policy","additions":30,"deletions":0,"binary":false,"changes":30,"status":"added"},{"patch":"@@ -0,0 +1,60 @@\n+\/*\n+ * Copyright (c) 1999, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.color.ColorSpace;\n+import java.awt.color.ICC_ColorSpace;\n+import java.awt.color.ICC_Profile;\n+import java.awt.color.ICC_ProfileRGB;\n+\n+\/**\n+ * @test\n+ * @bug 4267139\n+ * @summary This test verifies that an sRGB color can be accurately converted to\n+ *          an CIE colorimetric XYZ value.\n+ *\/\n+public final class XYZTest {\n+\n+    public static void main(String[] args) {\n+        float[] rgb = new float[3];\n+        rgb[0] = 1.0F;\n+        rgb[1] = 1.0F;\n+        rgb[2] = 1.0F;\n+        ICC_ProfileRGB pf =\n+            (ICC_ProfileRGB) ICC_Profile.getInstance(ColorSpace.CS_sRGB);\n+        ICC_ColorSpace srgb = new ICC_ColorSpace(pf);\n+        float[] xyz = srgb.toCIEXYZ(rgb);\n+        float mxyz[] = new float[3];\n+        \/\/ adjust D50 relative values by a factor which is the ratio\n+        \/\/ of the device white point (in this case sRGB) divided by\n+        \/\/ the D50 (PCS) white point\n+        mxyz[0] = xyz[0] * (0.9505f \/ 0.9642f);\n+        mxyz[1] = xyz[1] * (1.0000f \/ 1.0000f);\n+        mxyz[2] = xyz[2] * (1.0891f \/ 0.8249f);\n+        if ((Math.abs(mxyz[0] - 0.9505f) > 0.01f) ||\n+            (Math.abs(mxyz[1] - 1.0000f) > 0.01f) ||\n+            (Math.abs(mxyz[2] - 1.0891f) > 0.01f)) {\n+            throw new Error(\"sRGB (1.0, 1.0, 1.0) doesn't convert \" +\n+                            \"correctly to CIEXYZ\");\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/color\/XYZTest.java","additions":60,"deletions":0,"binary":false,"changes":60,"status":"added"}]}