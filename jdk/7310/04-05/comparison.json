{"files":[{"patch":"@@ -312,2 +312,2 @@\n-            text = layoutAndGetText(g, b, aquaBorder, new\n-                    Insets(0,0,0,0), viewRect, iconRect, textRect);\n+            text = layoutAndGetText(g, b, aquaBorder, new Insets(0,0,0,0),\n+                    viewRect, iconRect, textRect);\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaButtonUI.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -33,4 +33,2 @@\n-import java.awt.Dimension;\n-import java.awt.FlowLayout;\n-import java.awt.Point;\n-import java.awt.Robot;\n+import java.awt.*;\n+import java.lang.reflect.InvocationTargetException;\n@@ -42,1 +40,0 @@\n-import java.awt.Color;\n@@ -46,1 +43,0 @@\n-import java.awt.Graphics2D;\n@@ -62,6 +58,3 @@\n-        try {\n-            try {\n-                UIManager.setLookAndFeel(\"com.apple.laf.AquaLookAndFeel\");\n-            } catch (ClassNotFoundException | InstantiationException | IllegalAccessException e) {\n-                throw new RuntimeException(\"Unsupported LookAndFeel: \" + e);\n-            }\n+        Robot robot = new Robot();\n+        robot.setAutoDelay(100);\n+        robot.setAutoWaitForIdle(true);\n@@ -69,3 +62,2 @@\n-            Robot robot = new Robot();\n-            robot.setAutoDelay(100);\n-            robot.setAutoWaitForIdle(true);\n+        try {\n+            UIManager.setLookAndFeel(\"com.apple.laf.AquaLookAndFeel\");\n@@ -94,0 +86,7 @@\n+        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException e) {\n+            throw new RuntimeException(\"Unsupported LookAndFeel: \" + e);\n+        } catch (IOException e) {\n+            \/\/save image for troubleshooting\n+            BufferedImage failImg = robot.createScreenCapture(new Rectangle(point.x - BUTTON_WIDTH \/ 2, point.y - BUTTON_HEIGHT \/ 2, BUTTON_WIDTH, BUTTON_HEIGHT));\n+            ImageIO.write(failImg, \"png\", new File(testDir + \"\/fail_square.png\"));\n+            throw new RuntimeException(\"Failed image generation: \" + e);\n@@ -100,2 +99,1 @@\n-    private static void createAndShowGUI()\n-    {\n+    private static void createAndShowGUI() {\n@@ -118,1 +116,1 @@\n-    private static void setupCenterCoord() {\n+    private static void setupCenterCoord() throws InterruptedException, InvocationTargetException {\n@@ -120,1 +118,3 @@\n-        point = button.getLocationOnScreen();\n+        SwingUtilities.invokeAndWait(() -> {\n+            point = button.getLocationOnScreen();\n+        });\n@@ -127,1 +127,1 @@\n-        if(c.getRed() > 250 && c.getBlue() < 10 && c.getGreen() < 10) {\n+        if (c.getRed() > 250 && c.getBlue() < 10 && c.getGreen() < 10) {\n@@ -133,1 +133,1 @@\n-    private static void testImageCentering(Color left, Color right, Color top, Color bottom) {\n+    private static void testImageCentering(Color... colors) {\n@@ -135,5 +135,7 @@\n-        if(!checkRedness(left) || !checkRedness(right) || !checkRedness(top) || !checkRedness(bottom)) {\n-            throw new RuntimeException(\"HTML image not centered in button\");\n-        }\n-        else {\n-            System.out.println(\"-- Passed\");\n+        for (Color c : colors) {\n+            if (!checkRedness(c)) {\n+                throw new RuntimeException(\"HTML image not centered in button\");\n+            }\n+            else {\n+                System.out.println(\"-- Passed\");\n+            }\n@@ -143,1 +145,1 @@\n-    private static void generateImage() {\n+    private static void generateImage() throws IOException {\n@@ -149,5 +151,1 @@\n-        try {\n-            ImageIO.write(bImg, \"png\", new File(testDir + \"\/red_square.png\"));\n-        } catch (IOException e) {\n-            throw new RuntimeException(\"Failed image generation: \" + e);\n-        }\n+        ImageIO.write(bImg, \"png\", new File(testDir + \"\/red_square.png\"));\n","filename":"test\/jdk\/javax\/swing\/JButton\/HtmlButtonImageTest\/HtmlButtonImageTest.java","additions":30,"deletions":32,"binary":false,"changes":62,"status":"modified"}]}