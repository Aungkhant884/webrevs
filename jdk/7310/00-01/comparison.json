{"files":[{"patch":"@@ -35,0 +35,1 @@\n+import java.awt.Insets;\n@@ -36,0 +37,3 @@\n+import java.awt.Graphics;\n+import java.awt.Graphics2D;\n+import java.awt.image.BufferedImage;\n@@ -45,0 +49,4 @@\n+import javax.imageio.ImageIO;\n+import java.io.IOException;\n+import java.io.File;\n+\n@@ -52,0 +60,2 @@\n+    private static Path srcDir;\n+\n@@ -59,6 +69,0 @@\n-        try {\n-            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());\n-        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException e) {\n-            throw new RuntimeException(\"Unsupported LookAndFeel: \" + e);\n-        }\n-\n@@ -69,0 +73,4 @@\n+        \/\/ store path to source directory to locate image\n+        srcDir = Path.of(System.getProperty(\"test.src\", \".\"));\n+\n+        \/\/ generate red_square.png image to use as JButton text\n@@ -70,1 +78,1 @@\n-            createAndShowGUI();\n+            generateImage();\n@@ -73,22 +81,6 @@\n-        \/\/ retrieve color of pixels at each edge of square image by starting at the center of the button\n-        robot.mouseMove(frame.getLocationOnScreen().x, frame.getLocationOnScreen().y);\n-        robot.mouseMove(button.getLocationOnScreen().x, button.getLocationOnScreen().y);\n-\n-        setupCenterCoord();\n-        robot.mouseMove(point.x, point.y);\n-\n-        \/\/ store each pixel color on the edge of each side of the red square\n-        robot.mouseMove(point.x - (SQUARE_WIDTH\/2) + PIXEL_BUFFER, point.y);\n-        Color leftClr = robot.getPixelColor(point.x - (SQUARE_WIDTH\/2) + PIXEL_BUFFER, point.y);\n-        robot.mouseMove(point.x + (SQUARE_WIDTH\/2) - PIXEL_BUFFER, point.y);\n-        Color rightClr = robot.getPixelColor(point.x + (SQUARE_WIDTH\/2) - PIXEL_BUFFER, point.y);\n-        robot.mouseMove(point.x, point.y - (SQUARE_HEIGHT\/2) + PIXEL_BUFFER);\n-        Color topClr = robot.getPixelColor(point.x, point.y - (SQUARE_HEIGHT\/2) + PIXEL_BUFFER);\n-        robot.mouseMove(point.x, point.y + (SQUARE_HEIGHT\/2) - PIXEL_BUFFER);\n-        Color botClr = robot.getPixelColor(point.x, point.y + (SQUARE_HEIGHT\/2) - PIXEL_BUFFER);\n-\n-        \/\/ check if all colors at points are red\n-        if(!checkRedness(leftClr) || !checkRedness(rightClr)\n-                || !checkRedness(topClr) || !checkRedness(botClr)) {\n-            throw new RuntimeException(\"HTML image not centered in button\" + leftClr + rightClr + topClr + botClr);\n-        }\n+        \/\/ cycle test through all available LAFs\n+        for (UIManager.LookAndFeelInfo laf : UIManager.getInstalledLookAndFeels()) {\n+            SwingUtilities.invokeAndWait(() -> {\n+                setLookAndFeel(laf);\n+                createAndShowGUI();\n+            });\n@@ -96,4 +88,20 @@\n-        \/\/ close frame when complete\n-        SwingUtilities.invokeAndWait(() -> {\n-            frame.dispose();\n-        });\n+            \/\/ retrieve color of pixels at each edge of square image by starting at the center of the button\n+            robot.mouseMove(frame.getLocationOnScreen().x, frame.getLocationOnScreen().y);\n+            robot.mouseMove(button.getLocationOnScreen().x, button.getLocationOnScreen().y);\n+\n+            setupCenterCoord();\n+            robot.mouseMove(point.x, point.y);\n+\n+            \/\/ store each pixel color on the edge of each side of the red square\n+            Color leftClr = robot.getPixelColor(point.x - (SQUARE_WIDTH\/2) + PIXEL_BUFFER, point.y);\n+            Color rightClr = robot.getPixelColor(point.x + (SQUARE_WIDTH\/2) - PIXEL_BUFFER, point.y);\n+            Color topClr = robot.getPixelColor(point.x, point.y - (SQUARE_HEIGHT\/2) + PIXEL_BUFFER);\n+            Color botClr = robot.getPixelColor(point.x, point.y + (SQUARE_HEIGHT\/2) - PIXEL_BUFFER);\n+\n+            \/\/ close frame when complete\n+            SwingUtilities.invokeAndWait(() -> {\n+                frame.dispose();\n+            });\n+\n+            testImageCentering(leftClr, rightClr, topClr, botClr);\n+        }\n@@ -113,3 +121,0 @@\n-\n-        \/\/ create path to button text's image to find valid path when using jtreg as well\n-        Path srcDir = Path.of(System.getProperty(\"test.src\", \".\"));\n@@ -138,0 +143,39 @@\n+\n+    private static void testImageCentering(Color left, Color right, Color top, Color bottom) {\n+        \/\/ check if all colors at each edge of square are red\n+        if(!checkRedness(left) || !checkRedness(right) || !checkRedness(top) || !checkRedness(bottom)) {\n+            System.out.println(\"-- Failed\");\n+\/\/            throw new RuntimeException(\"HTML image not centered in button\" + left + right + top + bottom);\n+        }\n+        else {\n+            System.out.println(\"-- Passed\");\n+        }\n+    }\n+\n+    private static void setLookAndFeel(UIManager.LookAndFeelInfo laf) {\n+        try {\n+            UIManager.setLookAndFeel(laf.getClassName());\n+            System.out.println(\"-- \" + laf.getName());\n+        } catch (UnsupportedLookAndFeelException ignored){\n+            System.out.println(\"Unsupported LookAndFeel: \" + laf.getClassName());\n+        } catch (ClassNotFoundException | InstantiationException |\n+                IllegalAccessException e) {\n+            throw new RuntimeException(e);\n+        }\n+    }\n+\n+    private static void generateImage() {\n+        BufferedImage bImg = new BufferedImage(SQUARE_WIDTH, SQUARE_HEIGHT, BufferedImage.TYPE_INT_RGB);\n+        Graphics2D cg = bImg.createGraphics();\n+        \/\/ paint a red square onto cg\n+        cg.setColor(Color.RED);\n+        cg.fillRect(0, 0, SQUARE_WIDTH, SQUARE_HEIGHT);\n+        try {\n+            if (ImageIO.write(bImg, \"png\", new File(srcDir + \"\/red_square.png\")))\n+            {\n+                System.out.println(\"-- Saved Image\");\n+            }\n+        } catch (IOException e) {\n+            e.printStackTrace();\n+        }\n+    }\n","filename":"test\/jdk\/javax\/swing\/JButton\/HtmlButtonImageTest\/HtmlButtonImageTest.java","additions":80,"deletions":36,"binary":false,"changes":116,"status":"modified"},{"filename":"test\/jdk\/javax\/swing\/JButton\/HtmlButtonImageTest\/red_square.png","binary":true,"status":"deleted"}]}