{"files":[{"patch":"@@ -63,8 +63,5 @@\n-            UIManager.setLookAndFeel(\"com.apple.laf.AquaLookAndFeel\");\n-        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException e) {\n-            throw new RuntimeException(\"Unsupported LookAndFeel: \" + e);\n-        }\n-\n-        Robot robot = new Robot();\n-        robot.setAutoDelay(2000);\n-        robot.setAutoWaitForIdle(true);\n+            try {\n+                UIManager.setLookAndFeel(\"com.apple.laf.AquaLookAndFeel\");\n+            } catch (ClassNotFoundException | InstantiationException | IllegalAccessException e) {\n+                throw new RuntimeException(\"Unsupported LookAndFeel: \" + e);\n+            }\n@@ -72,2 +69,3 @@\n-        \/\/ store path to source directory to locate image\n-        testDir = Path.of(System.getProperty(\"test.classes\", \".\"));\n+            Robot robot = new Robot();\n+            robot.setAutoDelay(100);\n+            robot.setAutoWaitForIdle(true);\n@@ -75,2 +73,2 @@\n-        \/\/ generate red_square.png image to use as JButton text\n-        generateImage();\n+            \/\/ store path to source directory to locate image\n+            testDir = Path.of(System.getProperty(\"test.classes\", \".\"));\n@@ -78,3 +76,2 @@\n-        SwingUtilities.invokeAndWait(() -> {\n-            createAndShowGUI();\n-        });\n+            \/\/ generate red_square.png image to use as JButton text\n+            generateImage();\n@@ -82,3 +79,1 @@\n-        \/\/ retrieve color of pixels at each edge of square image by starting at the center of the button\n-        robot.mouseMove(frame.getLocationOnScreen().x, frame.getLocationOnScreen().y);\n-        robot.mouseMove(button.getLocationOnScreen().x, button.getLocationOnScreen().y);\n+            SwingUtilities.invokeAndWait(() -> createAndShowGUI());\n@@ -86,2 +81,1 @@\n-        setupCenterCoord();\n-        robot.mouseMove(point.x, point.y);\n+            robot.waitForIdle();\n@@ -89,5 +83,3 @@\n-        \/\/ store each pixel color on the edge of each side of the red square\n-        Color leftClr = robot.getPixelColor(point.x - (SQUARE_WIDTH\/2) + PIXEL_BUFFER, point.y);\n-        Color rightClr = robot.getPixelColor(point.x + (SQUARE_WIDTH\/2) - PIXEL_BUFFER, point.y);\n-        Color topClr = robot.getPixelColor(point.x, point.y - (SQUARE_HEIGHT\/2) + PIXEL_BUFFER);\n-        Color botClr = robot.getPixelColor(point.x, point.y + (SQUARE_HEIGHT\/2) - PIXEL_BUFFER);\n+            \/\/ retrieve color of pixels at each edge of square image by starting at the center of the button\n+            setupCenterCoord();\n+            robot.mouseMove(point.x, point.y);\n@@ -95,4 +87,5 @@\n-        \/\/ dispose frame when done testing for a LAF before continuing\n-        SwingUtilities.invokeAndWait(() -> {\n-            frame.dispose();\n-        });\n+            \/\/ store each pixel color on the edge of each side of the red square\n+            Color leftClr = robot.getPixelColor(point.x - (SQUARE_WIDTH\/2) + PIXEL_BUFFER, point.y);\n+            Color rightClr = robot.getPixelColor(point.x + (SQUARE_WIDTH\/2) - PIXEL_BUFFER, point.y);\n+            Color topClr = robot.getPixelColor(point.x, point.y - (SQUARE_HEIGHT\/2) + PIXEL_BUFFER);\n+            Color botClr = robot.getPixelColor(point.x, point.y + (SQUARE_HEIGHT\/2) - PIXEL_BUFFER);\n@@ -100,1 +93,5 @@\n-        testImageCentering(leftClr, rightClr, topClr, botClr);\n+            testImageCentering(leftClr, rightClr, topClr, botClr);\n+        } finally {\n+            \/\/ dispose frame when done testing for a LAF before continuing\n+            SwingUtilities.invokeAndWait(() -> frame.dispose());\n+        }\n","filename":"test\/jdk\/javax\/swing\/JButton\/HtmlButtonImageTest\/HtmlButtonImageTest.java","additions":27,"deletions":30,"binary":false,"changes":57,"status":"modified"}]}