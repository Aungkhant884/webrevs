{"files":[{"patch":"@@ -27,1 +27,0 @@\n- * @key headful\n@@ -33,2 +32,0 @@\n-import javax.swing.JFrame;\n-import javax.swing.JScrollPane;\n@@ -36,1 +33,0 @@\n-import javax.swing.SwingUtilities;\n@@ -44,2 +40,0 @@\n-    static JFrame fr;\n-\n@@ -47,9 +41,3 @@\n-        try {\n-            SwingUtilities.invokeAndWait(() -> {\n-                fr = new JFrame(\"bug4696499\");\n-\n-                JTree tree = new JTree();\n-                JScrollPane scrollPane = new JScrollPane(tree);\n-                fr.getContentPane().add(scrollPane);\n-                TreeModel model = new MyModel();\n-                tree.setModel(model);\n+        JTree tree = new JTree();\n+        TreeModel model = new MyModel();\n+        tree.setModel(model);\n@@ -57,11 +45,3 @@\n-                tree.setSelectionRow(1);\n-                model = new MyModel();\n-                tree.setModel(model);\n-            });\n-        } finally {\n-            SwingUtilities.invokeAndWait(() -> {\n-                if (fr != null) {\n-                    fr.dispose();\n-                }\n-            });\n-        }\n+        tree.setSelectionRow(1);\n+        model = new MyModel();\n+        tree.setModel(model);\n","filename":"test\/jdk\/javax\/swing\/JTree\/bug4696499.java","additions":6,"deletions":26,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-import javax.swing.SwingUtilities;\n@@ -37,8 +36,6 @@\n-        SwingUtilities.invokeAndWait(() -> {\n-            JTree tree = new JTree();\n-            tree.setToolTipText(exampleStr);\n-            if (tree.getToolTipText(null) != exampleStr) {\n-                throw new RuntimeException(\"The default JTree tooltip text \" +\n-                        \"have to be used if renderer doesn't provide it.\");\n-            }\n-        });\n+        JTree tree = new JTree();\n+        tree.setToolTipText(exampleStr);\n+        if (tree.getToolTipText(null) != exampleStr) {\n+            throw new RuntimeException(\"The default JTree tooltip text \" +\n+                    \"have to be used if renderer doesn't provide it.\");\n+        }\n","filename":"test\/jdk\/javax\/swing\/JTree\/bug5039542.java","additions":6,"deletions":9,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n- * @key headful\n@@ -35,1 +34,0 @@\n-import javax.swing.JFrame;\n@@ -42,1 +40,0 @@\n-    static JFrame fr;\n@@ -48,3 +45,8 @@\n-        try {\n-            SwingUtilities.invokeAndWait(() -> {\n-                fr = new JFrame(\"bug4546474\");\n+        SwingUtilities.invokeAndWait(() -> {\n+            JPanel panel = new JPanel();\n+            panel.setPreferredSize(new Dimension(500, 500));\n+            scrollpane = new JScrollPane(panel,\n+                    JScrollPane.VERTICAL_SCROLLBAR_ALWAYS,\n+                    JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);\n+            sbar = scrollpane.getVerticalScrollBar();\n+        });\n@@ -52,8 +54,11 @@\n-                JPanel panel = new JPanel();\n-                panel.setPreferredSize(new Dimension(500, 500));\n-                scrollpane = new JScrollPane(panel,\n-                        JScrollPane.VERTICAL_SCROLLBAR_ALWAYS,\n-                        JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);\n-                sbar = scrollpane.getVerticalScrollBar();\n-                fr.getContentPane().add(scrollpane);\n-            });\n+        Robot robot = new Robot();\n+        robot.delay(500);\n+        SwingUtilities.invokeAndWait(() -> {\n+            sbar.addAdjustmentListener(e -> viewChanged = true);\n+            scrollpane.setViewportView(null);\n+        });\n+        robot.delay(500);\n+        if (!viewChanged) {\n+            viewChanged = true;\n+        }\n+        robot.delay(500);\n@@ -61,9 +66,4 @@\n-            Robot robot = new Robot();\n-            robot.delay(500);\n-            SwingUtilities.invokeAndWait(() -> {\n-                sbar.addAdjustmentListener(e -> viewChanged = true);\n-                scrollpane.setViewportView(null);\n-            });\n-            robot.delay(500);\n-            if (!viewChanged) {\n-                viewChanged = true;\n+        SwingUtilities.invokeAndWait(() -> {\n+            if (sbar.getVisibleAmount() > 0) {\n+                throw new RuntimeException(\"Vertical scrollbar is not \" +\n+                        \"updated when viewport is replaced\");\n@@ -71,15 +71,1 @@\n-            robot.delay(500);\n-\n-            SwingUtilities.invokeAndWait(() -> {\n-                if (sbar.getVisibleAmount() > 0) {\n-                    throw new RuntimeException(\"Vertical scrollbar is not \" +\n-                            \"updated when viewport is replaced\");\n-                }\n-            });\n-        } finally {\n-            SwingUtilities.invokeAndWait(() -> {\n-                if (fr != null) {\n-                    fr.dispose();\n-                }\n-            });\n-        }\n+        });\n","filename":"test\/jdk\/javax\/swing\/JViewport\/bug4546474.java","additions":24,"deletions":38,"binary":false,"changes":62,"status":"modified"},{"patch":"@@ -35,1 +35,0 @@\n-import javax.swing.SwingUtilities;\n@@ -39,5 +38,4 @@\n-        SwingUtilities.invokeAndWait(() -> {\n-            JScrollPane sp = new JScrollPane();\n-            JViewport vp = new MyViewport();\n-            vp.setBackground(Color.blue);\n-            sp.setViewport(vp);\n+        JScrollPane sp = new JScrollPane();\n+        JViewport vp = new MyViewport();\n+        vp.setBackground(Color.blue);\n+        sp.setViewport(vp);\n@@ -45,5 +43,4 @@\n-            if (vp.isOpaque()) {\n-                throw new RuntimeException(\"JViewport shouldn't set Opaque \" +\n-                        \"after update the UI\");\n-            }\n-        });\n+        if (vp.isOpaque()) {\n+            throw new RuntimeException(\"JViewport shouldn't set Opaque \" +\n+                    \"after update the UI\");\n+        }\n","filename":"test\/jdk\/javax\/swing\/JViewport\/bug4677611.java","additions":8,"deletions":11,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -81,1 +81,0 @@\n-            robot.delay(1000);\n@@ -83,0 +82,1 @@\n+            robot.delay(1000);\n","filename":"test\/jdk\/javax\/swing\/KeyboardManager\/bug4345798.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}