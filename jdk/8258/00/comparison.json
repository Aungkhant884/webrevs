{"files":[{"patch":"@@ -5218,1 +5218,1 @@\n-  if (VM_Version::features() & VM_Version::CPU_DCPOP) {\n+  if (VM_Version::supports_dcpop()) {\n","filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -127,1 +127,1 @@\n-    if (_features & CPU_DCPOP) {\n+    if (VM_Version::supports_dcpop()) {\n@@ -229,1 +229,1 @@\n-#define ADD_FEATURE_IF_SUPPORTED(id, name, bit) if (_features & CPU_##id) strcat(buf, \", \" name);\n+#define ADD_FEATURE_IF_SUPPORTED(id, name, bit) if (VM_Version::supports_##name()) strcat(buf, \", \" #name);\n@@ -236,1 +236,1 @@\n-    UseCRC32 = (_features & CPU_CRC32) != 0;\n+    UseCRC32 = VM_Version::supports_crc32();\n@@ -239,1 +239,1 @@\n-  if (UseCRC32 && (_features & CPU_CRC32) == 0) {\n+  if (UseCRC32 && !VM_Version::supports_crc32()) {\n@@ -253,1 +253,1 @@\n-  if (_features & CPU_LSE) {\n+  if (VM_Version::supports_lse()) {\n@@ -263,1 +263,1 @@\n-  if (_features & CPU_AES) {\n+  if (VM_Version::supports_aes()) {\n@@ -294,1 +294,1 @@\n-  if (_features & CPU_CRC32) {\n+  if (VM_Version::supports_crc32()) {\n@@ -311,1 +311,2 @@\n-  if (_features & (CPU_SHA1 | CPU_SHA2 | CPU_SHA3 | CPU_SHA512)) {\n+  if (VM_Version::supports_sha1() || VM_Version::supports_sha2() ||\n+      VM_Version::supports_sha3() || VM_Version::supports_sha512()) {\n@@ -320,1 +321,1 @@\n-  if (UseSHA && (_features & CPU_SHA1)) {\n+  if (UseSHA && VM_Version::supports_sha1()) {\n@@ -329,1 +330,1 @@\n-  if (UseSHA && (_features & CPU_SHA2)) {\n+  if (UseSHA && VM_Version::supports_sha2()) {\n@@ -338,1 +339,1 @@\n-  if (UseSHA && (_features & CPU_SHA3)) {\n+  if (UseSHA && VM_Version::supports_sha3()) {\n@@ -348,1 +349,1 @@\n-  if (UseSHA && (_features & CPU_SHA512)) {\n+  if (UseSHA && VM_Version::supports_sha512()) {\n@@ -362,1 +363,1 @@\n-  if (_features & CPU_PMULL) {\n+  if (VM_Version::supports_pmull()) {\n@@ -387,1 +388,1 @@\n-  if (_features & CPU_SVE) {\n+  if (VM_Version::supports_sve2()) {\n@@ -389,1 +390,1 @@\n-      FLAG_SET_DEFAULT(UseSVE, (_features & CPU_SVE2) ? 2 : 1);\n+      FLAG_SET_DEFAULT(UseSVE, 2);\n@@ -391,2 +392,6 @@\n-    if (UseSVE > 0) {\n-      _initial_sve_vector_length = get_current_sve_vector_length();\n+  } else if (VM_Version::supports_sve()) {\n+    if (FLAG_IS_DEFAULT(UseSVE)) {\n+      FLAG_SET_DEFAULT(UseSVE, 1);\n+    } else if (UseSVE > 1) {\n+      warning(\"SVE2 specified, but not supported on current CPU. Using SVE.\");\n+      FLAG_SET_DEFAULT(UseSVE, 1);\n@@ -399,0 +404,4 @@\n+  if (UseSVE > 0) {\n+    _initial_sve_vector_length = get_current_sve_vector_length();\n+  }\n+\n@@ -419,1 +428,1 @@\n-    if ((_features & CPU_PACA) != 0) {\n+    if (VM_Version::supports_paca()) {\n@@ -426,1 +435,1 @@\n-    if ((_features & CPU_PACA) == 0) {\n+    if (!VM_Version::supports_paca()) {\n","filename":"src\/hotspot\/cpu\/aarch64\/vm_version_aarch64.cpp","additions":28,"deletions":19,"binary":false,"changes":47,"status":"modified"},{"patch":"@@ -103,1 +103,0 @@\n-  enum Feature_Flag {\n@@ -105,14 +104,14 @@\n-    decl(FP,            \"fp\",            0)   \\\n-    decl(ASIMD,         \"simd\",          1)   \\\n-    decl(EVTSTRM,       \"evtstrm\",       2)   \\\n-    decl(AES,           \"aes\",           3)   \\\n-    decl(PMULL,         \"pmull\",         4)   \\\n-    decl(SHA1,          \"sha1\",          5)   \\\n-    decl(SHA2,          \"sha256\",        6)   \\\n-    decl(CRC32,         \"crc\",           7)   \\\n-    decl(LSE,           \"lse\",           8)   \\\n-    decl(DCPOP,         \"dcpop\",         16)  \\\n-    decl(SHA3,          \"sha3\",          17)  \\\n-    decl(SHA512,        \"sha512\",        21)  \\\n-    decl(SVE,           \"sve\",           22)  \\\n-    decl(PACA,          \"paca\",          30)  \\\n+    decl(FP,            fp,            0)     \\\n+    decl(ASIMD,         simd,          1)     \\\n+    decl(EVTSTRM,       evtstrm,       2)     \\\n+    decl(AES,           aes,           3)     \\\n+    decl(PMULL,         pmull,         4)     \\\n+    decl(SHA1,          sha1,          5)     \\\n+    decl(SHA2,          sha2,          6)     \\\n+    decl(CRC32,         crc32,         7)     \\\n+    decl(LSE,           lse,           8)     \\\n+    decl(DCPOP,         dcpop,         16)    \\\n+    decl(SHA3,          sha3,          17)    \\\n+    decl(SHA512,        sha512,        21)    \\\n+    decl(SVE,           sve,           22)    \\\n+    decl(PACA,          paca,          30)    \\\n@@ -120,3 +119,4 @@\n-    decl(SVE2,          \"sve2\",          28)  \\\n-    decl(STXR_PREFETCH, \"stxr_prefetch\", 29)  \\\n-    decl(A53MAC,        \"a53mac\",        31)\n+    decl(SVEBITPERM,    svebitperm,    27)    \\\n+    decl(SVE2,          sve2,          28)    \\\n+    decl(STXR_PREFETCH, stxr_prefect,  29)    \\\n+    decl(A53MAC,        a53mac,        31)\n@@ -124,0 +124,1 @@\n+  enum Feature_Flag {\n@@ -129,0 +130,6 @@\n+  \/\/ Feature identification\n+#define CPU_FEATURE_DETECTION(id, name, bit) \\\n+  static bool supports_##name() { return (_features & CPU_##id) != 0; };\n+  CPU_FEATURE_FLAGS(CPU_FEATURE_DETECTION)\n+#undef CPU_FEATURE_DETECTION\n+\n","filename":"src\/hotspot\/cpu\/aarch64\/vm_version_aarch64.hpp","additions":25,"deletions":18,"binary":false,"changes":43,"status":"modified"},{"patch":"@@ -83,0 +83,4 @@\n+#ifndef HWCAP2_SVEBITPERM\n+#define HWCAP2_SVEBITPERM (1 << 4)\n+#endif\n+\n@@ -90,1 +94,1 @@\n-  assert(_features & CPU_SVE, \"should not call this\");\n+  assert(VM_Version::supports_sve(), \"should not call this\");\n@@ -95,1 +99,1 @@\n-  assert(_features & CPU_SVE, \"should not call this\");\n+  assert(VM_Version::supports_sve(), \"should not call this\");\n@@ -136,0 +140,1 @@\n+  if (auxv2 & HWCAP2_SVEBITPERM) _features |= CPU_SVEBITPERM;\n","filename":"src\/hotspot\/os_cpu\/linux_aarch64\/vm_version_linux_aarch64.cpp","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -181,0 +181,1 @@\n+        SVEBITPERM,\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk.vm.ci.aarch64\/src\/jdk\/vm\/ci\/aarch64\/AArch64.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}