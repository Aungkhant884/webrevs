{"files":[{"patch":"@@ -2504,2 +2504,1 @@\n-    call = new CallStaticJavaNode(call_type, call_addr, call_name,\n-                                           bci(), adr_type);\n+    call = new CallStaticJavaNode(call_type, call_addr, call_name, adr_type);\n","filename":"src\/hotspot\/share\/opto\/graphKit.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -541,1 +541,1 @@\n-  if (prev-1 != max_jint) {\n+  if (prev != min_jint) {\n@@ -982,1 +982,1 @@\n-    _est_switch_depth = log2_intptr((hi-lo+1)-1)+1;\n+    _est_switch_depth = log2i_graceful((hi - lo + 1) - 1) + 1;\n","filename":"src\/hotspot\/share\/opto\/parse2.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -1744,1 +1744,6 @@\n-    Node *n = worklist.pop();\n+    Node* n; \/\/ Node to be examined in this iteration\n+    if (StressCCP) {\n+      n = worklist.remove(C->random() % worklist.size());\n+    } else {\n+      n = worklist.pop();\n+    }\n","filename":"src\/hotspot\/share\/opto\/phaseX.cpp","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"}]}