{"files":[{"patch":"@@ -487,0 +487,5 @@\n+  if (!EnableDynamicAgentLoading) {\n+    st->print_cr(\"Dynamic agent loading is not enabled. \"\n+                 \"Use -XX:+EnableDynamicAgentLoading to launch target VM.\");\n+    return false;\n+  }\n","filename":"src\/hotspot\/share\/prims\/jvmtiAgent.cpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -405,4 +405,0 @@\n-    } else if (!EnableDynamicAgentLoading && strcmp(op->name(), \"load\") == 0) {\n-      st.print(\"Dynamic agent loading is not enabled. \"\n-               \"Use -XX:+EnableDynamicAgentLoading to launch target VM.\");\n-      res = JNI_ERR;\n","filename":"src\/hotspot\/share\/services\/attachListener.cpp","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -24,3 +24,5 @@\n-public class TestUnnamedVariableElementData {\n-    private void test() {\n-        int _ = 0;\n+ \/**\n+  * A no-op Java agent.\n+  *\/\n+public class JavaAgent {\n+    public static void agentmain(String args) {\n","filename":"test\/jdk\/sun\/tools\/jcmd\/JavaAgent.java","additions":5,"deletions":3,"binary":false,"changes":8,"previous_filename":"test\/langtools\/tools\/javac\/processing\/model\/element\/TestUnnamedVariableElementData.java","status":"copied"},{"patch":"@@ -0,0 +1,115 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import static jdk.test.lib.Asserts.*;\n+\n+import java.io.IOException;\n+import java.lang.management.ManagementFactory;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.jar.Attributes;\n+import java.util.jar.Manifest;\n+import java.util.List;\n+\n+import com.sun.management.HotSpotDiagnosticMXBean;\n+import com.sun.management.VMOption;\n+import jdk.test.lib.process.OutputAnalyzer;\n+import jdk.test.lib.Utils;\n+import jdk.test.lib.util.JarUtils;\n+\n+\/*\n+ * @test id=default\n+ * @bug 8304438\n+ * @summary JVMTI.agent_load should obey EnableDynamicAgentLoading (by default)\n+ * @modules jdk.attach jdk.jcmd\n+ * @library \/test\/lib\n+ * @build JavaAgent\n+ * @run main\/othervm TestJcmdNoAgentLoad\n+ *\/\n+\n+\/*\n+ * @test id=disabled\n+ * @bug 8304438\n+ * @summary JVMTI.agent_load should obey EnableDynamicAgentLoading (disabled)\n+ * @modules jdk.attach jdk.jcmd\n+ * @library \/test\/lib\n+ * @build JavaAgent\n+ * @run main\/othervm -XX:-EnableDynamicAgentLoading TestJcmdNoAgentLoad\n+ *\/\n+\n+\/*\n+ * @test id=enabled\n+ * @bug 8304438\n+ * @summary JVMTI.agent_load should obey EnableDynamicAgentLoading (enabled)\n+ * @modules jdk.attach jdk.jcmd\n+ * @library \/test\/lib\n+ * @build JavaAgent\n+ * @run main\/othervm -XX:+EnableDynamicAgentLoading TestJcmdNoAgentLoad\n+ *\/\n+\n+\n+public class TestJcmdNoAgentLoad {\n+    \/\/ The Agent.jar does not exist. Error with the PTRN message\n+    \/\/ is expected before an attempt to load the Agent.jar.\n+    private static final String[] CMD = new String[] { \"JVMTI.agent_load\", \"Agent.jar\" };\n+    private static final String PTRN = \"Dynamic agent loading is not enabled\";\n+    private static boolean dynamicLoadongEnabled = true;\n+    private static final String TEST_CLASSES = System.getProperty(\"test.classes\");\n+    private static String javaAgent;\n+\n+    static {\n+        \/\/ get VM option EnableDynamicAgentLoading value\n+        HotSpotDiagnosticMXBean bean = ManagementFactory.getPlatformMXBean(HotSpotDiagnosticMXBean.class);\n+        VMOption dynamicLoadongEnabledOpt = bean.getVMOption(\"EnableDynamicAgentLoading\");\n+        dynamicLoadongEnabled = dynamicLoadongEnabledOpt.getValue().equals(\"true\");\n+    }\n+\n+    public static void main(String[] args) throws Exception {\n+        setup();\n+        testNoAgentLoad(new String[] { \"JVMTI.agent_load\", javaAgent });\n+    }\n+\n+    private static void setup() throws Exception {\n+        \/\/ create JAR file with Java agent\n+        Manifest man = new Manifest();\n+        Attributes attrs = man.getMainAttributes();\n+        attrs.put(Attributes.Name.MANIFEST_VERSION, \"1.0\");\n+        attrs.put(new Attributes.Name(\"Agent-Class\"), \"JavaAgent\");\n+        Path jarfile = Path.of(\"javaagent.jar\");\n+        Path classes = Path.of(TEST_CLASSES);\n+        JarUtils.createJarFile(jarfile, man, classes, Path.of(\"JavaAgent.class\"));\n+        javaAgent = jarfile.toString();\n+    }\n+\n+    private static void testNoAgentLoad(String... jcmdArgs) throws Exception {\n+        OutputAnalyzer output = JcmdBase.jcmd(jcmdArgs);\n+\n+        output.shouldHaveExitValue(0);\n+        if (dynamicLoadongEnabled) {\n+            output.shouldNotContain(PTRN);\n+        } else {\n+            output.shouldContain(PTRN);\n+        }\n+    }\n+}\n","filename":"test\/jdk\/sun\/tools\/jcmd\/TestJcmdNoAgentLoad.java","additions":115,"deletions":0,"binary":false,"changes":115,"status":"added"}]}