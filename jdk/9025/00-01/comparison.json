{"files":[{"patch":"@@ -25,0 +25,1 @@\n+import java.io.Closeable;\n@@ -49,0 +50,1 @@\n+import java.util.Objects;\n@@ -772,0 +774,28 @@\n+    \/**\n+     * Creates a directory by creating all nonexistent parent directories first\n+     * just like java.nio.file.Files#createDirectories() and returns\n+     * java.io.Closeable that will delete all created nonexistent parent\n+     * directories.\n+     *\/\n+    public static Closeable createDirectories(Path dir) throws IOException {\n+        Objects.requireNonNull(dir);\n+\n+        Collection<Path> dirsToDelete = new ArrayList<>();\n+\n+        Path curDir = dir;\n+        while (!Files.exists(curDir)) {\n+            dirsToDelete.add(curDir);\n+            curDir = curDir.getParent();\n+        }\n+        Files.createDirectories(dir);\n+\n+        return new Closeable() {\n+            @Override\n+            public void close() throws IOException {\n+                for (var dirToDelete : dirsToDelete) {\n+                    Files.deleteIfExists(dirToDelete);\n+                }\n+            }\n+        };\n+    }\n+\n","filename":"test\/jdk\/tools\/jpackage\/helpers\/jdk\/jpackage\/test\/TKit.java","additions":30,"deletions":0,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -168,2 +168,1 @@\n-        try {\n-            Files.createDirectories(targetCfgFile.getParent());\n+        try (var dirCleaner = TKit.createDirectories(targetCfgFile.getParent())) {\n@@ -171,4 +170,6 @@\n-            TKit.traceFileContents(targetCfgFile, \"cfg file\");\n-            action.accept(cmd);\n-        } finally {\n-            Files.deleteIfExists(targetCfgFile);\n+            try {\n+                TKit.traceFileContents(targetCfgFile, \"cfg file\");\n+                action.accept(cmd);\n+            } finally {\n+                Files.deleteIfExists(targetCfgFile);\n+            }\n","filename":"test\/jdk\/tools\/jpackage\/share\/PerUserCfgTest.java","additions":7,"deletions":6,"binary":false,"changes":13,"status":"modified"}]}