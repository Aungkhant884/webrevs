{"files":[{"patch":"@@ -93,1 +93,1 @@\n-        checkContainerInfo(Common.run(opts), null);\n+        checkContainerInfo(Common.run(opts));\n@@ -99,1 +99,1 @@\n-        DockerRunOptions opts = Common.newOpts(imageName, \"PrintContainerInfo\", \"-XX:ActiveProcessorCount=2\");\n+        DockerRunOptions opts = Common.newOpts(imageName, \"PrintContainerInfo\").addJavaOpts(\"-XX:ActiveProcessorCount=2\");\n@@ -102,1 +102,2 @@\n-        checkContainerInfo(Common.run(opts), \"but overridden by -XX:ActiveProcessorCount 2\");\n+        OutputAnalyzer out = Common.run(opts);\n+        out.shouldContain(\"but overridden by -XX:ActiveProcessorCount 2\");\n@@ -105,2 +106,1 @@\n-\n-    private static void checkContainerInfo(OutputAnalyzer out, String additionallyExpected) throws Exception {\n+    private static void checkContainerInfo(OutputAnalyzer out) throws Exception {\n@@ -126,1 +126,0 @@\n-        if (additionallyExpected != null) out.shouldContain(additionallyExpected);\n","filename":"test\/hotspot\/jtreg\/containers\/docker\/TestMisc.java","additions":5,"deletions":6,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -67,4 +67,0 @@\n-        return newOpts(imageNameAndTag, testClass, null);\n-    }\n-\n-    public static DockerRunOptions newOpts(String imageNameAndTag, String testClass, String addJavaOpts) {\n@@ -75,1 +71,0 @@\n-        if (addJavaOpts != null) opts.addJavaOpts(addJavaOpts);\n@@ -79,0 +74,1 @@\n+\n","filename":"test\/lib\/jdk\/test\/lib\/containers\/docker\/Common.java","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"}]}