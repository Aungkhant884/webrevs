{"files":[{"patch":"@@ -35,1 +35,1 @@\n-import java.util.Hashtable;\n+import java.util.*;\n@@ -40,4 +40,0 @@\n-import java.util.Iterator;\n-import java.util.NoSuchElementException;\n-import java.util.ServiceConfigurationError;\n-import java.util.ServiceLoader;\n@@ -50,1 +46,0 @@\n-import sun.net.util.URLUtil;\n@@ -443,1 +438,1 @@\n-        protocol = URLUtil.lowerCaseProtocol(protocol);\n+        protocol = lowerCaseProtocol(protocol);\n@@ -636,1 +631,1 @@\n-                    String s = URLUtil.lowerCaseProtocol(spec.substring(start, i));\n+                    String s = lowerCaseProtocol(spec.substring(start, i));\n@@ -1383,0 +1378,16 @@\n+    \/**\n+     * Returns the protocol in lower case. Special cases known protocols\n+     * to avoid loading locale classes during startup.\n+     *\/\n+    static String lowerCaseProtocol(String protocol) {\n+        if (protocol.equals(\"jrt\")) {\n+            return \"jrt\";\n+        } else if (protocol.equals(\"file\")) {\n+            return \"file\";\n+        } else if (protocol.equals(\"jar\")) {\n+            return \"jar\";\n+        } else {\n+            return protocol.toLowerCase(Locale.ROOT);\n+        }\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/java\/net\/URL.java","additions":19,"deletions":8,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -47,1 +47,0 @@\n-import sun.net.util.URLUtil;\n@@ -1097,1 +1096,1 @@\n-        protocol = URLUtil.lowerCaseProtocol(protocol);\n+        protocol = URL.lowerCaseProtocol(protocol);\n@@ -1113,1 +1112,1 @@\n-        Boolean protoDefault = defaultCaching.get(URLUtil.lowerCaseProtocol(protocol));\n+        Boolean protoDefault = defaultCaching.get(URL.lowerCaseProtocol(protocol));\n","filename":"src\/java.base\/share\/classes\/java\/net\/URLConnection.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -53,2 +53,9 @@\n-            \/* protocol is compared case-insensitive, so convert to lowercase *\/\n-            strForm.append(lowerCaseProtocol(protocol));\n+            \/* protocol is compared case-insensitive, so convert to lowercase\n+             * if needed. URL will store from lower-cased String literals for\n+             * built-in protocols, so avoid calling toLowerCase for these and\n+             * use identity tests for speed\n+             *\/\n+            if (protocol != \"file\" && protocol != \"jrt\" && protocol != \"jar\") {\n+                protocol = protocol.toLowerCase();\n+            }\n+            strForm.append(protocol);\n@@ -84,16 +91,0 @@\n-    \/**\n-     * Returns the protocol in lower case. Special cases known protocols\n-     * to avoid loading locale classes during startup.\n-     *\/\n-    public static String lowerCaseProtocol(String protocol) {\n-        if (protocol.equals(\"jrt\")) {\n-            return \"jrt\";\n-        } else if (protocol.equals(\"file\")) {\n-            return \"file\";\n-        } else if (protocol.equals(\"jar\")) {\n-            return \"jar\";\n-        } else {\n-            return protocol.toLowerCase(Locale.ROOT);\n-        }\n-    }\n-\n","filename":"src\/java.base\/share\/classes\/sun\/net\/util\/URLUtil.java","additions":9,"deletions":18,"binary":false,"changes":27,"status":"modified"}]}