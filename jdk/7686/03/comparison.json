{"files":[{"patch":"@@ -0,0 +1,131 @@\n+\/*\n+ * Copyright (c) 2002, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4740761\n+ * @key headful\n+ * @summary Focus stays with the ScrollPane despite\n+ * it being removed from the Parent\n+ * @run main ScrollPaneFocusBugTest\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.Container;\n+import java.awt.KeyboardFocusManager;\n+import java.awt.Robot;\n+import java.awt.event.InputEvent;\n+import java.awt.event.KeyAdapter;\n+import java.awt.event.KeyEvent;\n+\n+import javax.swing.JComponent;\n+import javax.swing.JFrame;\n+import javax.swing.JScrollPane;\n+import javax.swing.JTextArea;\n+import javax.swing.JTextField;\n+import javax.swing.SwingUtilities;\n+\n+public class ScrollPaneFocusBugTest {\n+\n+    private static volatile String focussedComponentName;\n+    private static JScrollPane scrollPane;\n+    private static JFrame frame;\n+    private static Robot robot;\n+\n+    private static volatile int xLocn;\n+    private static volatile int yLocn;\n+    private static volatile int width;\n+    private static volatile int height;\n+\n+    public static JScrollPane\n+    createScrollPaneComponent(JComponent componentToMoveFocusTo) {\n+        JTextArea textArea = new JTextArea(\"1111\\n2222\\n3333\\n4444\\n5555\\n\");\n+        JScrollPane scrollPaneComponent = new JScrollPane(textArea);\n+        textArea.addKeyListener(new KeyAdapter() {\n+            public void keyTyped(KeyEvent e) {\n+                Container parent = scrollPaneComponent.getParent();\n+                parent.remove(scrollPaneComponent);\n+                parent.validate();\n+                parent.repaint();\n+                componentToMoveFocusTo.requestFocus();\n+            }\n+        });\n+        return scrollPaneComponent;\n+    }\n+\n+    public static void main(String[] args) throws Exception {\n+        SwingUtilities.invokeAndWait(() -> createGUI());\n+\n+        robot = new Robot();\n+        robot.setAutoDelay(200);\n+        robot.setAutoWaitForIdle(true);\n+\n+        pressKey();\n+\n+        SwingUtilities.invokeAndWait(() -> focussedComponentName =\n+            KeyboardFocusManager.getCurrentKeyboardFocusManager()\n+            .getFocusOwner().getClass().getName());\n+\n+        if (focussedComponentName.equals(\"javax.swing.JTextField\")) {\n+            System.out.println(\n+                \"Test Passed: Focus shifted to JTextField\"\n+                + \"after removing ScrollPane\");\n+        } else {\n+            throw new RuntimeException(\n+                \"Test Failed: Focus did not shift to JTextField after\"\n+                + \"removing ScrollPane, current\"\n+                + \" Focus with \" + focussedComponentName);\n+        }\n+        SwingUtilities.invokeAndWait(() -> frame.dispose());\n+    }\n+\n+    protected static void pressKey() throws Exception {\n+        SwingUtilities.invokeAndWait(() -> {\n+            xLocn = scrollPane.getLocationOnScreen().x;\n+            yLocn = scrollPane.getLocationOnScreen().y;\n+            width = scrollPane.getSize().width;\n+            height = scrollPane.getSize().height;\n+        });\n+\n+        robot.mouseMove(xLocn + width \/ 2, yLocn + height \/ 2);\n+\n+        robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+        robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+\n+        robot.keyPress(KeyEvent.VK_1);\n+        robot.keyRelease(KeyEvent.VK_1);\n+    }\n+\n+    public static void createGUI() {\n+        frame = new JFrame();\n+        frame.setLayout(new BorderLayout());\n+        JTextField textField = new JTextField(\"Second Component\");\n+        frame.add(textField, BorderLayout.SOUTH);\n+        scrollPane = createScrollPaneComponent(textField);\n+        frame.add(scrollPane, BorderLayout.CENTER);\n+        frame.pack();\n+        frame.setLocationRelativeTo(null);\n+        frame.setVisible(true);\n+    }\n+}\n+\n","filename":"test\/jdk\/java\/awt\/Focus\/8282640\/ScrollPaneFocusBugTest.java","additions":131,"deletions":0,"binary":false,"changes":131,"status":"added"}]}