{"files":[{"patch":"@@ -4209,1 +4209,1 @@\n-  Node* res_mem = _gvn.transform(new SCMemProjNode(str));\n+  Node* res_mem = _gvn.transform(new SCMemProjNode(_gvn.transform(str)));\n","filename":"src\/hotspot\/share\/opto\/graphKit.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -254,0 +254,3 @@\n+#ifdef ASSERT\n+        in->dump();\n+        mem->dump();\n@@ -255,0 +258,1 @@\n+#endif\n@@ -265,1 +269,1 @@\n-        if (adr_offset == offset && adr_iid == alloc->_idx)\n+        if (adr_offset == offset && adr_iid == alloc->_idx) {\n@@ -267,0 +271,1 @@\n+        }\n@@ -280,1 +285,1 @@\n-        if (init != NULL)\n+        if (init != NULL) {\n@@ -282,1 +287,1 @@\n-        else\n+        } else {\n@@ -284,0 +289,1 @@\n+        }\n@@ -478,2 +484,1 @@\n-#ifdef ASSERT\n-        val->dump();\n+        DEBUG_ONLY( val->dump(); )\n@@ -481,1 +486,0 @@\n-#endif\n@@ -558,0 +562,1 @@\n+      DEBUG_ONLY( mem->dump(); )\n","filename":"src\/hotspot\/share\/opto\/macro.cpp","additions":11,"deletions":6,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2972,7 +2972,1 @@\n-  \/\/ Either input is TOP ==> the result is TOP\n-  const Type *t = phase->type( in(MemNode::Memory) );\n-  if( t == Type::TOP ) return Type::TOP;\n-  t = phase->type( in(MemNode::Address) );\n-  if( t == Type::TOP ) return Type::TOP;\n-  t = phase->type( in(MemNode::ValueIn) );\n-  if( t == Type::TOP ) return Type::TOP;\n+  \/\/ Either input is TOP ==> the result is TOP (checked in StoreNode::Value).\n@@ -2980,3 +2974,4 @@\n-  t = phase->type( in(MemNode::OopStore) );\n-  if( t == Type::TOP ) return Type::TOP;\n-\n+  const Type* t = phase->type( in(MemNode::OopStore) );\n+  if (t == Type::TOP) {\n+    return Type::TOP;\n+  }\n@@ -2991,0 +2986,3 @@\n+  if (in(0) == NULL || phase->type(in(0)) == Type::TOP) {\n+    return Type::TOP;\n+  }\n@@ -3009,0 +3007,21 @@\n+\/\/------------------------------Value-----------------------------------------\n+const Type* LoadStoreNode::Value(PhaseGVN* phase) const {\n+  \/\/ Either input is TOP ==> the result is TOP\n+  if (!in(MemNode::Control) || phase->type(in(MemNode::Control)) == Type::TOP) {\n+    return Type::TOP;\n+  }\n+  const Type *t = phase->type( in(MemNode::Memory) );\n+  if (t == Type::TOP) {\n+    return Type::TOP;\n+  }\n+  t = phase->type( in(MemNode::Address) );\n+  if (t == Type::TOP) {\n+    return Type::TOP;\n+  }\n+  t = phase->type( in(MemNode::ValueIn) );\n+  if (t == Type::TOP) {\n+    return Type::TOP;\n+  }\n+  return bottom_type();\n+}\n+\n@@ -3054,0 +3073,9 @@\n+const Type* LoadStoreConditionalNode::Value(PhaseGVN* phase) const {\n+  \/\/ Either input is TOP ==> the result is TOP\n+  const Type* t = phase->type( in(ExpectedIn) );\n+  if (t == Type::TOP) {\n+    return Type::TOP;\n+  }\n+  return LoadStoreNode::Value(phase);\n+}\n+\n","filename":"src\/hotspot\/share\/opto\/memnode.cpp","additions":38,"deletions":10,"binary":false,"changes":48,"status":"modified"},{"patch":"@@ -852,0 +852,1 @@\n+  virtual const Type* Value(PhaseGVN* phase) const;\n@@ -866,0 +867,1 @@\n+  virtual const Type* Value(PhaseGVN* phase) const;\n","filename":"src\/hotspot\/share\/opto\/memnode.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"}]}