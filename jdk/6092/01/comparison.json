{"files":[{"patch":"@@ -948,1 +948,0 @@\n-            byte[] eAlgId = null;\n@@ -987,1 +986,0 @@\n-            Object bagItem = null;\n","filename":"src\/java.base\/macosx\/classes\/apple\/security\/KeychainStore.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -67,1 +67,1 @@\n-        int i, j, count;\n+        int i, j;\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/BlowfishCrypt.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -919,1 +919,0 @@\n-        Permission thisPerm;\n","filename":"src\/java.base\/share\/classes\/java\/security\/AccessControlContext.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -144,1 +144,0 @@\n-        DerValue        val;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/pkcs10\/PKCS10.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -209,1 +209,0 @@\n-        AlgorithmParameterSpec keyParams = rsaKey.getParams();\n","filename":"src\/java.base\/share\/classes\/sun\/security\/rsa\/RSAPSSSignature.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -137,1 +137,1 @@\n-        RSAPrivateKey key;\n+\n","filename":"src\/java.base\/share\/classes\/sun\/security\/rsa\/RSAPrivateCrtKeyImpl.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -447,1 +447,0 @@\n-            int tmp;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/DHServerKeyExchange.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -361,1 +361,0 @@\n-        int srcLim = packet.limit();\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SSLEngineInputRecord.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -202,1 +202,0 @@\n-        DerOutputStream tmp = new DerOutputStream();\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/CRLNumberExtension.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,3 +31,0 @@\n-import java.util.Enumeration;\n-\n-import sun.security.util.*;\n@@ -83,1 +80,1 @@\n-     * Creates a delta CRL indictor extension with the BigInteger value .\n+     * Creates a delta CRL indicator extension with the BigInteger value .\n@@ -113,1 +110,0 @@\n-       DerOutputStream  tmp = new DerOutputStream();\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/DeltaCRLIndicatorExtension.java","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -133,1 +133,1 @@\n-     * @param out the DerOutputStrean to encode this object to.\n+     * @param out the DerOutputStream to encode this object to.\n@@ -349,1 +349,0 @@\n-            boolean removeThisEntry = false;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/GeneralSubtrees.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -732,1 +732,0 @@\n-            SubjectAlternativeNameExtension extValue = null;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/X509CertInfo.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,0 @@\n-import java.util.Properties;\n@@ -153,1 +152,1 @@\n-     * <P>This mechanism gurantees that keys (and algorithms) may be\n+     * <P>This mechanism guarantees that keys (and algorithms) may be\n@@ -156,1 +155,1 @@\n-     * handling, that specific need can be accomodated.\n+     * handling, that specific need can be accommodated.\n@@ -236,2 +235,0 @@\n-            Properties props;\n-            String keytype;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/X509Key.java","additions":3,"deletions":6,"binary":false,"changes":9,"status":"modified"}]}