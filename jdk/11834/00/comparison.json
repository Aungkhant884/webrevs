{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -695,1 +695,1 @@\n-  oop obj = cpool->resolved_references()->obj_at(obj_index);\n+  oop obj = cpool->resolved_references_at(obj_index);\n","filename":"src\/hotspot\/share\/ci\/ciEnv.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -197,1 +197,1 @@\n-      oop coop = m->constants()->resolved_references()->obj_at(rindex);\n+      oop coop = m->constants()->resolved_references_at(rindex);\n","filename":"src\/hotspot\/share\/interpreter\/interpreterRuntime.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -2130,1 +2130,1 @@\n-              oop result = constants->resolved_references()->obj_at(index);\n+              oop result = constants->resolved_references_at(index);\n@@ -2235,1 +2235,1 @@\n-        oop result = constants->resolved_references()->obj_at(index);\n+        oop result = constants->resolved_references_at(index);\n","filename":"src\/hotspot\/share\/interpreter\/zero\/bytecodeInterpreter.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -161,1 +161,1 @@\n-  return (objArrayOop)_cache->resolved_references();\n+  return _cache->resolved_references();\n@@ -170,1 +170,1 @@\n-    return (objArrayOop)_cache->resolved_references();\n+    return _cache->resolved_references();\n@@ -174,0 +174,12 @@\n+oop ConstantPool::resolved_references_at(int index) const {\n+  oop result = resolved_references()->obj_at(index);\n+  assert(oopDesc::is_oop_or_null(result), \"Must be oop\");\n+  return result;\n+}\n+\n+\/\/ Use a CAS for multithreaded access\n+oop ConstantPool::set_resolved_references_at(int index, oop new_result, oop old_result) {\n+  assert(oopDesc::is_oop_or_null(new_result), \"Must be oop\");\n+  return resolved_references()->atomic_compare_exchange_oop(index, new_result, old_result);\n+}\n+\n@@ -449,1 +461,2 @@\n-  resolved_references()->obj_at_put(obj_index, str);\n+  oop result = set_resolved_references_at(obj_index, str, nullptr);\n+  assert(result == nullptr || result == str, \"Only set once or to the same string.\");\n@@ -939,1 +952,1 @@\n-    result_oop = this_cp->resolved_references()->obj_at(cache_index);\n+    result_oop = this_cp->resolved_references_at(cache_index);\n@@ -1162,3 +1175,2 @@\n-    oop old_result = this_cp->resolved_references()\n-      ->atomic_compare_exchange_oop(cache_index, new_result, NULL);\n-    if (old_result == NULL) {\n+    oop old_result = this_cp->set_resolved_references_at(cache_index, new_result, nullptr);\n+    if (old_result == nullptr) {\n@@ -1225,1 +1237,1 @@\n-  oop str = this_cp->resolved_references()->obj_at(obj_index);\n+  oop str = this_cp->resolved_references_at(obj_index);\n","filename":"src\/hotspot\/share\/oops\/constantPool.cpp","additions":21,"deletions":9,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -239,0 +239,3 @@\n+  oop resolved_references_at(int obj_index) const;\n+  oop set_resolved_references_at(int index, oop new_value, oop old_value);\n+\n@@ -477,1 +480,1 @@\n-    return resolved_references()->obj_at(obj_index);\n+    return resolved_references_at(obj_index);\n","filename":"src\/hotspot\/share\/oops\/constantPool.hpp","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -435,4 +435,2 @@\n-    objArrayOop resolved_references = cpool->resolved_references();\n-    assert(appendix_index >= 0 && appendix_index < resolved_references->length(), \"oob\");\n-    assert(resolved_references->obj_at(appendix_index) == NULL, \"init just once\");\n-    resolved_references->obj_at_put(appendix_index, appendix());\n+    oop old_oop = cpool->set_resolved_references_at(appendix_index, appendix(), nullptr);\n+    assert(old_oop == nullptr, \"init just once\");\n@@ -534,2 +532,1 @@\n-  objArrayOop resolved_references = cpool->resolved_references();\n-  return resolved_references->obj_at(ref_index);\n+  return cpool->resolved_references_at(ref_index);\n","filename":"src\/hotspot\/share\/oops\/cpCache.cpp","additions":4,"deletions":7,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -450,1 +450,1 @@\n-  inline oop resolved_references();\n+  inline objArrayOop resolved_references();\n","filename":"src\/hotspot\/share\/oops\/cpCache.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -102,1 +102,5 @@\n-inline oop ConstantPoolCache::resolved_references() { return _resolved_references.resolve(); }\n+inline objArrayOop ConstantPoolCache::resolved_references() {\n+  oop obj = _resolved_references.resolve();\n+  assert(obj == nullptr || obj->is_objArray(), \"should be objArray\");\n+  return (objArrayOop)obj;\n+}\n","filename":"src\/hotspot\/share\/oops\/cpCache.inline.hpp","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"}]}