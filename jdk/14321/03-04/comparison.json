{"files":[{"patch":"@@ -26,1 +26,1 @@\n- * @bug 8306112\n+ * @bug 8306112 8309568\n@@ -33,0 +33,1 @@\n+ * @clean Nameless.java\n@@ -39,3 +40,3 @@\n-\/\/ @compile line, as directed by -Xprefer:newer builds and checks the\n-\/\/ language model objects constructed off of those class file,\n-\/\/ bypassing the source files.\n+\/\/ @compile line, as directed by -Xprefer:newer, builds and checks the\n+\/\/ language model objects constructed from those class files, ignoring\n+\/\/ any source files for those types.\n@@ -63,0 +64,1 @@\n+    private static boolean classOnly = false;\n@@ -67,0 +69,2 @@\n+            classOnly = options.containsKey(\"classOnly\");\n+\n@@ -69,2 +73,2 @@\n-            \/\/ Don't generate a file if testing already generated class\n-            if (!options.containsKey(\"classOnly\")) {\n+            \/\/ Don't generate any files if testing pre-existing class files\n+            if (!classOnly) {\n@@ -155,1 +159,1 @@\n-            messager.printError(\"Unnamed class does have an empty simple name.\", unnamedClass);\n+            messager.printError(\"Unnamed class has an empty simple name.\", unnamedClass);\n@@ -199,3 +203,6 @@\n-        ExecutableElement ctor = ctors.getFirst();\n-        if (elements.getOrigin(ctor) != Elements.Origin.MANDATED) {\n-            messager.printError(\"Constructor was not marked as mandated\", ctor);\n+        if (!classOnly) {\n+            \/\/ Mandated-ness of default constructors not preserved in class files\n+            ExecutableElement ctor = ctors.getFirst();\n+            if (elements.getOrigin(ctor) != Elements.Origin.MANDATED) {\n+                messager.printError(\"Constructor was not marked as mandated\", ctor);\n+            }\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/element\/TestUnnamedClass.java","additions":17,"deletions":10,"binary":false,"changes":27,"status":"modified"}]}