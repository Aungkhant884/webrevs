{"files":[{"patch":"@@ -381,7 +381,0 @@\n-  \/\/ if the last instruction is a call (typically to do a throw which\n-  \/\/ is coming at the end after block reordering) the return address\n-  \/\/ must still point into the code area in order to avoid assertion\n-  \/\/ failures when searching for the corresponding bci => add a nop\n-  \/\/ (was bug 5\/14\/1999 - gri)\n-  __ nop();\n-\n@@ -406,1 +399,2 @@\n-  __ far_call(RuntimeAddress(Runtime1::entry_for(Runtime1::handle_exception_from_callee_id)));  __ should_not_reach_here();\n+  __ far_call(RuntimeAddress(Runtime1::entry_for(Runtime1::handle_exception_from_callee_id)));\n+  __ should_not_reach_here();\n@@ -474,7 +468,0 @@\n-  \/\/ if the last instruction is a call (typically to do a throw which\n-  \/\/ is coming at the end after block reordering) the return address\n-  \/\/ must still point into the code area in order to avoid assertion\n-  \/\/ failures when searching for the corresponding bci => add a nop\n-  \/\/ (was bug 5\/14\/1999 - gri)\n-  __ nop();\n-\n","filename":"src\/hotspot\/cpu\/aarch64\/c1_LIRAssembler_aarch64.cpp","additions":2,"deletions":15,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -202,3 +202,0 @@\n-  \/\/ TODO: ARM\n-  __ nop(); \/\/ See comments in other ports\n-\n","filename":"src\/hotspot\/cpu\/arm\/c1_LIRAssembler_arm.cpp","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -170,7 +170,0 @@\n-  \/\/ If the last instruction is a call (typically to do a throw which\n-  \/\/ is coming at the end after block reordering) the return address\n-  \/\/ must still point into the code area in order to avoid assertion\n-  \/\/ failures when searching for the corresponding bci => add a nop\n-  \/\/ (was bug 5\/14\/1999 - gri).\n-  __ nop();\n-\n@@ -250,7 +243,0 @@\n-  \/\/ If the last instruction is a call (typically to do a throw which\n-  \/\/ is coming at the end after block reordering) the return address\n-  \/\/ must still point into the code area in order to avoid assertion\n-  \/\/ failures when searching for the corresponding bci => add a nop\n-  \/\/ (was bug 5\/14\/1999 - gri).\n-  __ nop();\n-\n","filename":"src\/hotspot\/cpu\/ppc\/c1_LIRAssembler_ppc.cpp","additions":0,"deletions":14,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -310,7 +310,0 @@\n-  \/\/ if the last instruction is a call (typically to do a throw which\n-  \/\/ is coming at the end after block reordering) the return address\n-  \/\/ must still point into the code area in order to avoid assertion\n-  \/\/ failures when searching for the corresponding bci ==> add a nop\n-  \/\/ (was bug 5\/14\/1999 -gri)\n-  __ nop();\n-\n@@ -402,7 +395,0 @@\n-  \/\/ if the last instruction is a call (typically to do a throw which\n-  \/\/ is coming at the end after block reordering) the return address\n-  \/\/ must still point into the code area in order to avoid assertion\n-  \/\/ failures when searching for the corresponding bck => add a nop\n-  \/\/ (was bug 5\/14\/1999 - gri)\n-  __ nop();\n-\n","filename":"src\/hotspot\/cpu\/riscv\/c1_LIRAssembler_riscv.cpp","additions":0,"deletions":14,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -168,7 +168,0 @@\n-  \/\/ If the last instruction is a call (typically to do a throw which\n-  \/\/ is coming at the end after block reordering) the return address\n-  \/\/ must still point into the code area in order to avoid assertion\n-  \/\/ failures when searching for the corresponding bci. => Add a nop.\n-  \/\/ (was bug 5\/14\/1999 - gri)\n-  __ nop();\n-\n@@ -266,7 +259,0 @@\n-  \/\/ If the last instruction is a call (typically to do a throw which\n-  \/\/ is coming at the end after block reordering) the return address\n-  \/\/ must still point into the code area in order to avoid assertion\n-  \/\/ failures when searching for the corresponding bci. => Add a nop.\n-  \/\/ (was bug 5\/14\/1999 - gri)\n-  __ nop();\n-\n","filename":"src\/hotspot\/cpu\/s390\/c1_LIRAssembler_s390.cpp","additions":0,"deletions":14,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -401,7 +401,0 @@\n-  \/\/ if the last instruction is a call (typically to do a throw which\n-  \/\/ is coming at the end after block reordering) the return address\n-  \/\/ must still point into the code area in order to avoid assertion\n-  \/\/ failures when searching for the corresponding bci => add a nop\n-  \/\/ (was bug 5\/14\/1999 - gri)\n-  __ nop();\n-\n@@ -502,7 +495,0 @@\n-  \/\/ if the last instruction is a call (typically to do a throw which\n-  \/\/ is coming at the end after block reordering) the return address\n-  \/\/ must still point into the code area in order to avoid assertion\n-  \/\/ failures when searching for the corresponding bci => add a nop\n-  \/\/ (was bug 5\/14\/1999 - gri)\n-  __ nop();\n-\n","filename":"src\/hotspot\/cpu\/x86\/c1_LIRAssembler_x86.cpp","additions":0,"deletions":14,"binary":false,"changes":14,"status":"modified"}]}