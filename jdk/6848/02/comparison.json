{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -92,1 +92,1 @@\n-        Element target;\n+        Element previewTarget;\n@@ -96,1 +96,1 @@\n-            target = typeElement;\n+            previewTarget = typeElement;\n@@ -100,1 +100,12 @@\n-            target = classLinkInfo.targetMember;\n+            TypeElement enclosing = utils.getEnclosingTypeElement(classLinkInfo.targetMember);\n+            Set<ElementFlag> enclosingFlags = utils.elementFlags(enclosing);\n+            if (flags.contains(ElementFlag.PREVIEW) && enclosingFlags.contains(ElementFlag.PREVIEW)) {\n+                if (enclosing.equals(m_writer.getCurrentPageElement())) {\n+                    \/\/skip the PREVIEW tag:\n+                    flags = EnumSet.copyOf(flags);\n+                    flags.remove(ElementFlag.PREVIEW);\n+                }\n+                previewTarget = enclosing;\n+            } else {\n+                previewTarget = classLinkInfo.targetMember;\n+            }\n@@ -103,1 +114,1 @@\n-            target = null;\n+            previewTarget = null;\n@@ -118,1 +129,1 @@\n-                                    filename.fragment(m_writer.htmlIds.forPreviewSection(target).name()),\n+                                    filename.fragment(m_writer.htmlIds.forPreviewSection(previewTarget).name()),\n@@ -133,1 +144,1 @@\n-                        m_writer.htmlIds.forPreviewSection(target).name(),\n+                        m_writer.htmlIds.forPreviewSection(previewTarget).name(),\n@@ -195,1 +206,1 @@\n-                ((HtmlLinkInfo) linkInfo).getContext(), typeParam).skipPreview(true);\n+                ((HtmlLinkInfo) linkInfo).getContext(), typeParam);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlLinkFactory.java","additions":19,"deletions":8,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -79,0 +79,1 @@\n+import jdk.javadoc.internal.doclets.toolkit.util.Utils.PreviewFlagProvider;\n@@ -438,6 +439,12 @@\n-                    \/\/ If the leading whitespace is not excluded from the link,\n-                    \/\/ browsers might exhibit unwanted behavior. For example, a\n-                    \/\/ browser might display hand-click cursor while user hovers\n-                    \/\/ over that whitespace portion of the line; or use\n-                    \/\/ underline decoration.\n-                    c = new ContentBuilder(whitespace, htmlWriter.linkToContent(element, e, t, strippedLine));\n+                    \/\/disable preview tagging inside the snippets:\n+                    PreviewFlagProvider prevPreviewProvider = utils.setPreviewFlagProvider(el -> false);\n+                    try {\n+                        \/\/ If the leading whitespace is not excluded from the link,\n+                        \/\/ browsers might exhibit unwanted behavior. For example, a\n+                        \/\/ browser might display hand-click cursor while user hovers\n+                        \/\/ over that whitespace portion of the line; or use\n+                        \/\/ underline decoration.\n+                        c = new ContentBuilder(whitespace, htmlWriter.linkToContent(element, e, t, strippedLine));\n+                    } finally {\n+                        utils.setPreviewFlagProvider(prevPreviewProvider);\n+                    }\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/TagletWriterImpl.java","additions":13,"deletions":6,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -3056,3 +3056,5 @@\n-        Element enclosing = el.getEnclosingElement();\n-        if (enclosing != null && (enclosing.getKind().isClass() || enclosing.getKind().isInterface())) {\n-            parentPreviewAPI = configuration.workArounds.isPreviewAPI(enclosing);\n+        if (!isClassOrInterface(el)) {\n+            Element enclosing = el.getEnclosingElement();\n+            if (isClassOrInterface(enclosing)) {\n+                parentPreviewAPI = configuration.workArounds.isPreviewAPI(enclosing);\n+            }\n@@ -3085,1 +3087,0 @@\n-        PreviewSummary previewAPIs = declaredUsingPreviewAPIs(el);\n@@ -3091,6 +3092,1 @@\n-        if ((!previewLanguageFeaturesUsed(el).isEmpty() ||\n-             configuration.workArounds.isPreviewAPI(el) ||\n-             !previewAPIs.previewAPI.isEmpty() ||\n-             !previewAPIs.reflectivePreviewAPI.isEmpty() ||\n-             !previewAPIs.declaredUsingPreviewFeature.isEmpty()) &&\n-            !hasNoProviewAnnotation(el)) {\n+        if (previewFlagProvider.isPreview(el)) {\n@@ -3112,1 +3108,5 @@\n-    private boolean hasNoProviewAnnotation(Element el) {\n+    private boolean isClassOrInterface(Element el) {\n+        return el != null && (el.getKind().isClass() || el.getKind().isInterface());\n+    }\n+\n+    private boolean hasNoPreviewAnnotation(Element el) {\n@@ -3117,0 +3117,29 @@\n+\n+    private PreviewFlagProvider previewFlagProvider = new PreviewFlagProvider() {\n+        @Override\n+        public boolean isPreview(Element el) {\n+            PreviewSummary previewAPIs = declaredUsingPreviewAPIs(el);\n+            Element enclosing = el.getEnclosingElement();\n+\n+            return    (   !previewLanguageFeaturesUsed(el).isEmpty()\n+                       || configuration.workArounds.isPreviewAPI(el)\n+                       || (   !isClassOrInterface(el) && isClassOrInterface(enclosing)\n+                           && configuration.workArounds.isPreviewAPI(enclosing))\n+                       || !previewAPIs.previewAPI.isEmpty()\n+                       || !previewAPIs.reflectivePreviewAPI.isEmpty()\n+                       || !previewAPIs.declaredUsingPreviewFeature.isEmpty())\n+                   && !hasNoPreviewAnnotation(el);\n+        }\n+    };\n+\n+    public PreviewFlagProvider setPreviewFlagProvider(PreviewFlagProvider provider) {\n+        Objects.requireNonNull(provider);\n+        PreviewFlagProvider old = previewFlagProvider;\n+        previewFlagProvider = provider;\n+        return old;\n+    }\n+\n+    public interface PreviewFlagProvider {\n+        public boolean isPreview(Element el);\n+    }\n+\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/Utils.java","additions":41,"deletions":12,"binary":false,"changes":53,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug      8250768 8261976\n+ * @bug      8250768 8261976 8277300\n@@ -36,2 +36,0 @@\n-import java.text.MessageFormat;\n-import java.util.ResourceBundle;\n@@ -104,0 +102,21 @@\n+\n+    @Test\n+    public void test8277300() {\n+        javadoc(\"-d\", \"out-8277300\",\n+                \"--add-exports\", \"java.base\/jdk.internal.javac=api2\",\n+                \"--source-path\", Paths.get(testSrc, \"api2\").toAbsolutePath().toString(),\n+                \"--show-packages=all\",\n+                \"api2\/api\");\n+        checkExit(Exit.OK);\n+\n+        checkOutput(\"api2\/api\/API.html\", true,\n+                    \"<p><a href=\\\"#test()\\\"><code>test()<\/code><\/a><\/p>\",\n+                    \"<p><a href=\\\"#testNoPreviewInSig()\\\"><code>testNoPreviewInSig()<\/code><\/a><\/p>\",\n+                    \"title=\\\"class or interface in java.util\\\" class=\\\"external-link\\\">List<\/a>&lt;<a href=\\\"API.html\\\" title=\\\"class in api\\\">API<\/a><sup><a href=\\\"#preview-api.API\\\">PREVIEW<\/a><\/sup>&gt;\");\n+        checkOutput(\"api2\/api\/API2.html\", true,\n+                    \"<a href=\\\"API.html#test()\\\"><code>API.test()<\/code><\/a><sup><a href=\\\"API.html#preview-api.API\\\">PREVIEW<\/a><\/sup>\",\n+                    \"<a href=\\\"API.html#testNoPreviewInSig()\\\"><code>API.testNoPreviewInSig()<\/code><\/a><sup><a href=\\\"API.html#preview-api.API\\\">PREVIEW<\/a><\/sup>\",\n+                    \"<a href=\\\"API3.html#test()\\\"><code>API3.test()<\/code><\/a><sup><a href=\\\"API3.html#preview-test()\\\">PREVIEW<\/a><\/sup>\");\n+        checkOutput(\"api2\/api\/API3.html\", true,\n+                    \"<div class=\\\"block\\\"><a href=\\\"#test()\\\"><code>test()<\/code><\/a><sup><a href=\\\"#preview-test()\\\">PREVIEW<\/a><\/sup><\/div>\");\n+    }\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testPreview\/TestPreview.java","additions":23,"deletions":4,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -0,0 +1,46 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package api;\n+\n+import java.util.List;\n+import jdk.internal.javac.PreviewFeature;\n+import jdk.internal.javac.PreviewFeature.Feature;\n+\n+\/**\n+ * <p>{@link API#test()}<\/p>\n+ * <p>{@link API#testNoPreviewInSig()}<\/p>\n+ *\/\n+@PreviewFeature(feature=Feature.TEST, reflective=false)\n+public class API {\n+\n+    public API test() {\n+        return null;\n+    }\n+\n+    public void testNoPreviewInSig() {\n+    }\n+\n+    public void typeArgs(List<API> api) {\n+    }\n+}\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testPreview\/api2\/api\/API.java","additions":46,"deletions":0,"binary":false,"changes":46,"status":"added"},{"patch":"@@ -0,0 +1,33 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package api;\n+\n+\/**\n+ * <p>{@link API#test()}\n+ * <p>{@link API#testNoPreviewInSig()}\n+ * <p>{@link API3#test()}\n+ *\/\n+public class API2 {\n+\n+}\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testPreview\/api2\/api\/API2.java","additions":33,"deletions":0,"binary":false,"changes":33,"status":"added"},{"patch":"@@ -0,0 +1,39 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package api;\n+\n+import jdk.internal.javac.PreviewFeature;\n+import jdk.internal.javac.PreviewFeature.Feature;\n+\n+\/**\n+ * {@link API3#test()}\n+ *\/\n+public class API3 {\n+\n+    @PreviewFeature(feature=Feature.TEST, reflective=false)\n+    public void test() {\n+        return null;\n+    }\n+\n+}\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testPreview\/api2\/api\/API3.java","additions":39,"deletions":0,"binary":false,"changes":39,"status":"added"},{"patch":"@@ -0,0 +1,25 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+module api2 {\n+    exports api;\n+}\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testPreview\/api2\/module-info.java","additions":25,"deletions":0,"binary":false,"changes":25,"status":"added"}]}