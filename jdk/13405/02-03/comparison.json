{"files":[{"patch":"@@ -2026,0 +2026,11 @@\n+\n+        @Override\n+        public int hashCode() {\n+            return this.svalue.hashCode();\n+        }\n+\n+        @Override\n+        public boolean equals(Object val) {\n+            return val instanceof CSS.StringValue strVal && this.svalue == strVal.svalue;\n+        }\n+\n@@ -2390,0 +2401,1 @@\n+\n@@ -2455,0 +2467,9 @@\n+        @Override\n+        public int hashCode() {\n+            return (c != null) ? c.hashCode() : 0;\n+        }\n+\n+        @Override\n+        public boolean equals(Object val) {\n+            return val instanceof CSS.ColorValue color && c.equals(color.c);\n+        }\n@@ -2509,0 +2530,9 @@\n+        @Override\n+        public int hashCode() {\n+            return style.hashCode();\n+        }\n+\n+        @Override\n+        public boolean equals(Object val) {\n+            return val instanceof CSS.BorderStyle border && style.equals(border.style);\n+        }\n@@ -2636,0 +2666,9 @@\n+        @Override\n+        public int hashCode() {\n+            return Float.hashCode(span);\n+        }\n+\n+        @Override\n+        public boolean equals(Object val) {\n+            return val instanceof CSS.LengthValue lu && span == lu.span;\n+        }\n@@ -2855,0 +2894,12 @@\n+\n+        @Override\n+        public int hashCode() {\n+            return Float.hashCode(horizontalPosition);\n+        }\n+\n+        @Override\n+        public boolean equals(Object val) {\n+            return val instanceof CSS.BackgroundPosition bp\n+                    && horizontalPosition == bp.horizontalPosition\n+                    && verticalPosition == bp.verticalPosition;\n+        }\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/html\/CSS.java","additions":51,"deletions":0,"binary":false,"changes":51,"status":"modified"},{"patch":"@@ -23,1 +23,0 @@\n-\n@@ -27,1 +26,1 @@\n- * @summary  Verifies if CSS.FontSize,CSS.FontFamily,CSS.FontWeight attribute is same\n+ * @summary  Verifies if CSS.CSSValue attribute is same\n@@ -30,1 +29,0 @@\n-\n@@ -41,0 +39,5 @@\n+        testColor();\n+        testBorderStyle();\n+        testCSSLengthValue();\n+        testBackgroundPosition();\n+        testCSSStringValue();\n@@ -67,1 +70,1 @@\n-        ss.addCSSAttribute(a, CSS.Attribute.FONT_FAMILY, fontFamily);\n+        ss.addCSSAttribute(a, CSS.Attribute.FONT_FAMILY, \"Sans-Serif\");\n@@ -70,1 +73,1 @@\n-        ss.addCSSAttribute(b, CSS.Attribute.FONT_FAMILY, fontFamily);\n+        ss.addCSSAttribute(b, CSS.Attribute.FONT_FAMILY, \"Sans-Serif\");\n@@ -99,0 +102,95 @@\n+\n+    private static void testColor() {\n+        StyleSheet ss = new StyleSheet();\n+        String fontColor = \"red\";\n+\n+        SimpleAttributeSet a = new SimpleAttributeSet();\n+        ss.addCSSAttribute(a, CSS.Attribute.COLOR, fontColor);\n+\n+        SimpleAttributeSet b = new SimpleAttributeSet();\n+        ss.addCSSAttribute(b, CSS.Attribute.COLOR, fontColor);\n+\n+        if (a.isEqual(b)) {\n+            System.out.println( \"a equals b\");\n+        } else {\n+            System.out.println(\"a = \" + a);\n+            System.out.println(\"b = \" + b);\n+            throw new RuntimeException(\"CSS.Attribute.Color a is not equal to b\");\n+        }\n+    }\n+\n+    private static void testBorderStyle() {\n+        StyleSheet ss = new StyleSheet();\n+        String borderStyle = \"DASHED\";\n+\n+        SimpleAttributeSet a = new SimpleAttributeSet();\n+        ss.addCSSAttribute(a, CSS.Attribute.BORDER_STYLE, borderStyle);\n+\n+        SimpleAttributeSet b = new SimpleAttributeSet();\n+        ss.addCSSAttribute(b, CSS.Attribute.BORDER_STYLE, borderStyle);\n+\n+        if (a.isEqual(b)) {\n+            System.out.println( \"a equals b\");\n+        } else {\n+            System.out.println(\"a = \" + a);\n+            System.out.println(\"b = \" + b);\n+            throw new RuntimeException(\"CSS.Attribute.BorderStyle a is not equal to b\");\n+        }\n+    }\n+\n+    private static void testCSSLengthValue() {\n+        StyleSheet ss = new StyleSheet();\n+        String lengthUnit = \"42\";\n+\n+        SimpleAttributeSet a = new SimpleAttributeSet();\n+        ss.addCSSAttribute(a, CSS.Attribute.MARGIN_TOP, lengthUnit);\n+\n+        SimpleAttributeSet b = new SimpleAttributeSet();\n+        ss.addCSSAttribute(b, CSS.Attribute.MARGIN_TOP, lengthUnit);\n+\n+        if (a.isEqual(b)) {\n+            System.out.println(\"a equals b\");\n+        } else {\n+            System.out.println(\"a = \" + a);\n+            System.out.println(\"b = \" + b);\n+            throw new RuntimeException(\"CSS LengthValue a is not equal to b\");\n+        }\n+    }\n+\n+    private static void testBackgroundPosition() {\n+        StyleSheet ss = new StyleSheet();\n+        String bgPosition = \"top\";\n+\n+        SimpleAttributeSet a = new SimpleAttributeSet();\n+        ss.addCSSAttribute(a, CSS.Attribute.BACKGROUND_POSITION, bgPosition);\n+\n+        SimpleAttributeSet b = new SimpleAttributeSet();\n+        ss.addCSSAttribute(b, CSS.Attribute.BACKGROUND_POSITION, bgPosition);\n+\n+        if (a.isEqual(b)) {\n+            System.out.println(\"a equals b\");\n+        } else {\n+            System.out.println(\"a = \" + a);\n+            System.out.println(\"b = \" + b);\n+            throw new RuntimeException(\"CSS.Attribute.BACKGROUND_POSITION a is not equal to b\");\n+        }\n+    }\n+\n+    private static void testCSSStringValue() {\n+        StyleSheet ss = new StyleSheet();\n+        String strVal = \"underline\";\n+\n+        SimpleAttributeSet a = new SimpleAttributeSet();\n+        ss.addCSSAttribute(a, CSS.Attribute.TEXT_DECORATION, strVal);\n+\n+        SimpleAttributeSet b = new SimpleAttributeSet();\n+        ss.addCSSAttribute(b, CSS.Attribute.TEXT_DECORATION, strVal);\n+\n+        if (a.isEqual(b)) {\n+            System.out.println(\"a equals b\");\n+        } else {\n+            System.out.println(\"a = \" + a);\n+            System.out.println(\"b = \" + b);\n+            throw new RuntimeException(\"CSS.Attribute.TEXT_DECORATION a is not equal to b\");\n+        }\n+    }\n","filename":"test\/jdk\/javax\/swing\/text\/html\/CSS\/CSSAttributeEqualityBug.java","additions":103,"deletions":5,"binary":false,"changes":108,"status":"modified"}]}