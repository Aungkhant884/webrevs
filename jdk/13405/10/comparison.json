{"files":[{"patch":"@@ -41,0 +41,1 @@\n+import java.util.Objects;\n@@ -2026,0 +2027,12 @@\n+\n+        @Override\n+        public int hashCode() {\n+            return (this.svalue != null) ? this.svalue.hashCode() : 0;\n+        }\n+\n+        @Override\n+        public boolean equals(Object val) {\n+            return val instanceof CSS.StringValue strVal\n+                   && Objects.equals(this.svalue, strVal.svalue);\n+        }\n+\n@@ -2203,0 +2216,11 @@\n+        @Override\n+        public int hashCode() {\n+            return Float.hashCode(value);\n+        }\n+\n+        @Override\n+        public boolean equals(Object val) {\n+            return val instanceof CSS.FontSize size\n+                   && Objects.equals(size.svalue, svalue);\n+        }\n+\n@@ -2303,0 +2327,11 @@\n+        @Override\n+        public int hashCode() {\n+            return (family != null) ? family.hashCode() : 0;\n+        }\n+\n+        @Override\n+        public boolean equals(Object val) {\n+            return val instanceof CSS.FontFamily font\n+                   && Objects.equals(family, font.family);\n+        }\n+\n@@ -2366,0 +2401,10 @@\n+        @Override\n+        public int hashCode() {\n+            return Integer.hashCode(weight);\n+        }\n+\n+        @Override\n+        public boolean equals(Object val) {\n+            return val instanceof CSS.FontWeight fontWeight && weight == fontWeight.weight;\n+        }\n+\n@@ -2426,0 +2471,10 @@\n+        @Override\n+        public int hashCode() {\n+            return (c != null) ? c.hashCode() : 0;\n+        }\n+\n+        @Override\n+        public boolean equals(Object val) {\n+            return val instanceof CSS.ColorValue color && c.equals(color.c);\n+        }\n+\n@@ -2480,0 +2535,10 @@\n+        @Override\n+        public int hashCode() {\n+            return (style != null) ? style.hashCode() : 0;\n+        }\n+\n+        @Override\n+        public boolean equals(Object val) {\n+            return val instanceof CSS.BorderStyle border && style.equals(border.style);\n+        }\n+\n@@ -2607,0 +2672,11 @@\n+        @Override\n+        public int hashCode() {\n+            return Float.hashCode(span);\n+        }\n+\n+        @Override\n+        public boolean equals(Object val) {\n+            return val instanceof CSS.LengthValue lu\n+                   && Objects.equals(svalue, lu.svalue);\n+        }\n+\n@@ -2610,0 +2686,1 @@\n+\n@@ -2826,0 +2903,14 @@\n+\n+        @Override\n+        public int hashCode() {\n+            int hashCode = Float.hashCode(horizontalPosition);\n+            hashCode |= Float.hashCode(verticalPosition);\n+            return hashCode;\n+        }\n+\n+        @Override\n+        public boolean equals(Object val) {\n+            return val instanceof CSS.BackgroundPosition bp\n+                    && horizontalPosition == bp.horizontalPosition\n+                    && verticalPosition == bp.verticalPosition;\n+        }\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/html\/CSS.java","additions":91,"deletions":0,"binary":false,"changes":91,"status":"modified"},{"patch":"@@ -0,0 +1,148 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.Objects;\n+\n+import javax.swing.text.AttributeSet;\n+import javax.swing.text.html.StyleSheet;\n+\n+\/*\n+ * @test\n+ * @bug 7083187\n+ * @summary  Verifies if CSS.CSSValue attribute is same\n+ * @run main CSSAttributeEqualityBug\n+ *\/\n+public class CSSAttributeEqualityBug {\n+\n+    \/**\n+     * CSS declarations which should produce equal attribute sets.\n+     *\/\n+    private static final String[] EQUALS = {\n+            \"font-size: 42\",\n+            \"font-size: 42px\",\n+            \"font-size: 42em\",\n+            \"font-size: medium\",\n+            \"font-size: smaller\",\n+            \"font-size: 200%\",\n+\n+            \"font-family: sans-serif\",\n+            \"font-family: 'DejaVu Serif', serif\",\n+\n+            \"font-weight: bold\",\n+\n+            \"color: red\",\n+            \"color: rgb(255, 0, 0)\",\n+\n+            \"border-style: dashed\",\n+\n+            \"margin-top: 42\",\n+            \"margin-top: 42px\",\n+            \"margin-top: 100%\",\n+\n+            \"text-decoration: underline\",\n+\n+            \"background-position: top\",\n+            \"background-position: top right\",\n+            \"background-position: 25% 75%\",\n+            \"background-position: 0 0\",\n+            \"background-position: 1cm 2cm\",\n+            \"background-position: 1em 2em\",\n+    };\n+\n+    \/**\n+     * CSS declarations which should produce different attribute sets.\n+     *\/\n+    private static final String[][] NOT_EQUALS = {\n+            {\"font-size: 42px\", \"font-size: 22px\"},\n+            {\"font-size: 42px\", \"font-size: 42pt\"},\n+            {\"font-size: 42em\", \"font-size: 42ex\"},\n+            {\"font-size: 100%\", \"font-size: 200%\"},\n+\n+            {\"margin-top: 42px\", \"margin-top: 22px\"},\n+            {\"margin-top: 42px\", \"margin-top: 42pt\"},\n+            {\"margin-top: 100%\", \"margin-top: 200%\"},\n+    };\n+\n+    public static void main(String[] args) {\n+        final List<String> failures = new ArrayList<>();\n+\n+        Arrays.stream(EQUALS)\n+              .map(CSSAttributeEqualityBug::positiveTest)\n+              .filter(Objects::nonNull)\n+              .forEach(failures::add);\n+        Arrays.stream(NOT_EQUALS)\n+              .map(CSSAttributeEqualityBug::negativeTest)\n+              .filter(Objects::nonNull)\n+              .forEach(failures::add);\n+\n+        if (!failures.isEmpty()) {\n+            failures.forEach(System.err::println);\n+            throw new RuntimeException(failures.size()\n+                                       + \" failure(s) detected: \"\n+                                       + failures.get(0));\n+        }\n+    }\n+\n+    private static String positiveTest(String cssDeclaration) {\n+        StyleSheet ss = new StyleSheet();\n+\n+        AttributeSet a = ss.getDeclaration(cssDeclaration);\n+        AttributeSet b = ss.getDeclaration(cssDeclaration);\n+\n+        return assertEquals(a, b);\n+    }\n+\n+    private static String negativeTest(String[] cssDeclaration) {\n+        StyleSheet ss = new StyleSheet();\n+\n+        AttributeSet a = ss.getDeclaration(cssDeclaration[0]);\n+        AttributeSet b = ss.getDeclaration(cssDeclaration[1]);\n+\n+        return assertNotEquals(a, b);\n+    }\n+\n+    private static String assertEquals(AttributeSet a,\n+                                       AttributeSet b) {\n+        return !a.isEqual(b)\n+               ? getErrorMessage(a, b, \"is not equal to\")\n+               : null;\n+    }\n+\n+    private static String assertNotEquals(AttributeSet a,\n+                                          AttributeSet b) {\n+        return a.isEqual(b)\n+               ? getErrorMessage(a, b, \"is equal to\")\n+               : null;\n+    }\n+\n+    private static String getErrorMessage(AttributeSet a,\n+                                          AttributeSet b,\n+                                          String message) {\n+        return a + \" \" + message + \" \" + b;\n+    }\n+\n+}\n+\n","filename":"test\/jdk\/javax\/swing\/text\/html\/CSS\/CSSAttributeEqualityBug.java","additions":148,"deletions":0,"binary":false,"changes":148,"status":"added"}]}