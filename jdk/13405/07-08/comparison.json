{"files":[{"patch":"@@ -2225,2 +2225,0 @@\n-                \/\/ If fontsize contains numeric along with units\n-                \/\/ and does not contain only alphabets like \"smaller\", \"medium\" etc\n@@ -2230,2 +2228,1 @@\n-                    return sz == oldsz\n-                           && Objects.equals(size.lu.units, lu.units);\n+                    return sz == oldsz && Objects.equals(size.lu.units, lu.units);\n@@ -2690,6 +2687,10 @@\n-            if (percentage) {\n-                return false;\n-            } else {\n-                return val instanceof CSS.LengthValue lu\n-                        && span == lu.span\n-                        && Objects.equals(lu.units, units);\n+            if (val instanceof CSS.LengthValue lu) {\n+                if (percentage) {\n+                    \/\/ Parse the int value from xxx%,yyy% and compare\n+                    int sz = new Scanner(lu.svalue).useDelimiter(\"\\\\D\").nextInt();\n+                    int oldsz = new Scanner(svalue).useDelimiter(\"\\\\D\").nextInt();\n+\n+                    return sz == oldsz;\n+                } else {\n+                    return span == lu.span && Objects.equals(lu.units, units);\n+                }\n@@ -2697,0 +2698,1 @@\n+            return false;\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/html\/CSS.java","additions":12,"deletions":10,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -63,1 +63,1 @@\n-\/\/            \"margin-top: 100%\",\n+            \"margin-top: 100%\",\n@@ -86,1 +86,1 @@\n-\/\/            {\"margin-top: 100%\", \"margin-top: 200%\"},\n+            {\"margin-top: 100%\", \"margin-top: 200%\"},\n","filename":"test\/jdk\/javax\/swing\/text\/html\/CSS\/CSSAttributeEqualityBug.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}