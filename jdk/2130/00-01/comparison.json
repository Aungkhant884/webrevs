{"files":[{"patch":"@@ -109,0 +109,1 @@\n+      (*env)->PopLocalFrame(env, NULL);\n@@ -161,0 +162,1 @@\n+    (*env)->PopLocalFrame(env, NULL);\n@@ -166,0 +168,1 @@\n+      (*env)->PopLocalFrame(env, NULL);\n@@ -169,0 +172,1 @@\n+      (*env)->PopLocalFrame(env, result);\n@@ -190,0 +194,1 @@\n+          (*env)->PopLocalFrame(env, NULL);\n@@ -213,0 +218,1 @@\n+          (*env)->PopLocalFrame(env, NULL);\n","filename":"src\/jdk.management\/share\/native\/libmanagement_ext\/DiagnosticCommandImpl.c","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1,60 +0,0 @@\n-\/*\n- * Copyright (c) 2021, Red Hat, Inc.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-import java.lang.management.ManagementFactory;\n-import javax.management.MBeanServer;\n-import javax.management.ObjectName;\n-import javax.management.MBeanServerConnection;\n-import javax.management.remote.JMXConnectorFactory;\n-import javax.management.remote.JMXConnector;\n-import javax.management.remote.JMXConnectorServerFactory;\n-import javax.management.remote.JMXServiceURL;\n-import javax.management.remote.JMXConnectorServer;\n-\n-public class DcmdMBeanRunner {\n-\n-    private static String HOTSPOT_DIAGNOSTIC_MXBEAN_NAME =\n-        \"com.sun.management:type=DiagnosticCommand\";\n-\n-    public static void main(String[] args) throws Exception {\n-        MBeanServer mbs = ManagementFactory.getPlatformMBeanServer();\n-        JMXServiceURL url = new JMXServiceURL(\"rmi\", null, 0);\n-        JMXConnectorServer cs = null;\n-        JMXConnector cc = null;\n-        try {\n-            cs = JMXConnectorServerFactory.newJMXConnectorServer(url, null, mbs);\n-            cs.start();\n-            JMXServiceURL addr = cs.getAddress();\n-            cc = JMXConnectorFactory.connect(addr);\n-            MBeanServerConnection mbsc = cc.getMBeanServerConnection();\n-            ObjectName name = new ObjectName(HOTSPOT_DIAGNOSTIC_MXBEAN_NAME);\n-            System.out.println(\"DiagnosticCommand MBean: \" + name);\n-            System.out.println(\"DcmdMBeanRunner COMPLETE\");\n-        } finally {\n-            try {\n-                cc.close();\n-                cs.stop();\n-            } catch (Exception e) { \/* ignored *\/ }\n-        }\n-    }\n-}\n","filename":"test\/jdk\/com\/sun\/management\/DiagnosticCommandMBean\/DcmdMBeanRunner.java","additions":0,"deletions":60,"binary":false,"changes":60,"status":"deleted"},{"patch":"@@ -29,1 +29,0 @@\n- * @build DcmdMBeanRunner\n@@ -33,0 +32,10 @@\n+import java.lang.management.ManagementFactory;\n+import javax.management.MBeanServer;\n+import javax.management.ObjectName;\n+import javax.management.MBeanServerConnection;\n+import javax.management.remote.JMXConnectorFactory;\n+import javax.management.remote.JMXConnector;\n+import javax.management.remote.JMXConnectorServerFactory;\n+import javax.management.remote.JMXServiceURL;\n+import javax.management.remote.JMXConnectorServer;\n+\n@@ -39,1 +48,3 @@\n-        OutputAnalyzer out = ProcessTools.executeTestJvm(\"-Xcheck:jni\", \"DcmdMBeanRunner\");\n+        OutputAnalyzer out = ProcessTools.executeTestJvm(\n+            \"-Xcheck:jni\",\n+            DcmdMBeanRunner.class.getName());\n@@ -46,0 +57,28 @@\n+\n+class DcmdMBeanRunner {\n+\n+    private static String HOTSPOT_DIAGNOSTIC_MXBEAN_NAME =\n+        \"com.sun.management:type=DiagnosticCommand\";\n+\n+    public static void main(String[] args) throws Exception {\n+        MBeanServer mbs = ManagementFactory.getPlatformMBeanServer();\n+        JMXServiceURL url = new JMXServiceURL(\"rmi\", null, 0);\n+        JMXConnectorServer cs = null;\n+        JMXConnector cc = null;\n+        try {\n+            cs = JMXConnectorServerFactory.newJMXConnectorServer(url, null, mbs);\n+            cs.start();\n+            JMXServiceURL addr = cs.getAddress();\n+            cc = JMXConnectorFactory.connect(addr);\n+            MBeanServerConnection mbsc = cc.getMBeanServerConnection();\n+            ObjectName name = new ObjectName(HOTSPOT_DIAGNOSTIC_MXBEAN_NAME);\n+            System.out.println(\"DiagnosticCommand MBean: \" + name);\n+            System.out.println(\"DcmdMBeanRunner COMPLETE\");\n+        } finally {\n+            try {\n+                cc.close();\n+                cs.stop();\n+            } catch (Exception e) { \/* ignored *\/ }\n+        }\n+    }\n+}\n","filename":"test\/jdk\/com\/sun\/management\/DiagnosticCommandMBean\/DcmdMBeanTestCheckJni.java","additions":41,"deletions":2,"binary":false,"changes":43,"status":"modified"}]}