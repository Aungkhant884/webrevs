{"files":[{"patch":"@@ -76,4 +76,1 @@\n-  if ((*env)->ExceptionCheck(env)) {\n-    free(dcmd_arg_info_array);\n-    return NULL;\n-  }\n+  EXCEPTION_CHECK_AND_FREE(dcmd_arg_info_array);\n@@ -87,1 +84,3 @@\n-    jstring jname, jdesc,jtype,jdefStr;\n+    \/\/ Capacity for 5 local refs: jname, jdesc, jtype, jdefStr and obj\n+    (*env)->PushLocalFrame(env, 5);\n+    jstring jname, jdesc, jtype, jdefStr;\n@@ -113,0 +112,1 @@\n+    (*env)->PopLocalFrame(env, obj);\n@@ -147,1 +147,1 @@\n-  jstring jname, jdesc, jimpact;\n+  jstring jname, jdesc, jimpact, cmd;\n@@ -154,0 +154,4 @@\n+  \/\/ Ensure capacity for 2 + num_commands local refs:\n+  \/\/  2 => dcmdInfoCls, result\n+  \/\/  num_commmands => one obj per command\n+  (*env)->PushLocalFrame(env, 2 + num_commands);\n@@ -176,0 +180,6 @@\n+      \/\/ Ensure capacity for 6 + 3 local refs:\n+      \/\/  6 => jname, jdesc, jimpact, cmd, args, obj\n+      \/\/  3 => permission class, name, action\n+      (*env)->PushLocalFrame(env, 6 + 3);\n+\n+      cmd = (*env)->GetObjectArrayElement(env, commands, i);\n@@ -177,1 +187,1 @@\n-                                                   (*env)->GetObjectArrayElement(env,commands,i),\n+                                                   cmd,\n@@ -206,0 +216,1 @@\n+      (*env)->PopLocalFrame(env, obj);\n@@ -210,0 +221,1 @@\n+  (*env)->PopLocalFrame(env, result);\n","filename":"src\/jdk.management\/share\/native\/libmanagement_ext\/DiagnosticCommandImpl.c","additions":19,"deletions":7,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -0,0 +1,60 @@\n+\/*\n+ * Copyright (c) 2021, Red Hat, Inc.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.lang.management.ManagementFactory;\n+import javax.management.MBeanServer;\n+import javax.management.ObjectName;\n+import javax.management.MBeanServerConnection;\n+import javax.management.remote.JMXConnectorFactory;\n+import javax.management.remote.JMXConnector;\n+import javax.management.remote.JMXConnectorServerFactory;\n+import javax.management.remote.JMXServiceURL;\n+import javax.management.remote.JMXConnectorServer;\n+\n+public class DcmdMBeanRunner {\n+\n+    private static String HOTSPOT_DIAGNOSTIC_MXBEAN_NAME =\n+        \"com.sun.management:type=DiagnosticCommand\";\n+\n+    public static void main(String[] args) throws Exception {\n+        MBeanServer mbs = ManagementFactory.getPlatformMBeanServer();\n+        JMXServiceURL url = new JMXServiceURL(\"rmi\", null, 0);\n+        JMXConnectorServer cs = null;\n+        JMXConnector cc = null;\n+        try {\n+            cs = JMXConnectorServerFactory.newJMXConnectorServer(url, null, mbs);\n+            cs.start();\n+            JMXServiceURL addr = cs.getAddress();\n+            cc = JMXConnectorFactory.connect(addr);\n+            MBeanServerConnection mbsc = cc.getMBeanServerConnection();\n+            ObjectName name = new ObjectName(HOTSPOT_DIAGNOSTIC_MXBEAN_NAME);\n+            System.out.println(\"DiagnosticCommand MBean: \" + name);\n+            System.out.println(\"DcmdMBeanRunner COMPLETE\");\n+        } finally {\n+            try {\n+                cc.close();\n+                cs.stop();\n+            } catch (Exception e) { \/* ignored *\/ }\n+        }\n+    }\n+}\n","filename":"test\/jdk\/com\/sun\/management\/DiagnosticCommandMBean\/DcmdMBeanRunner.java","additions":60,"deletions":0,"binary":false,"changes":60,"status":"added"},{"patch":"@@ -0,0 +1,45 @@\n+\/*\n+ * Copyright (c) 2021, Red Hat, Inc.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug     8258836\n+ * @summary JNI local refs exceed capacity getDiagnosticCommandInfo\n+ * @library \/test\/lib\n+ * @build DcmdMBeanRunner\n+ * @run main\/othervm DcmdMBeanTestCheckJni\n+ *\/\n+\n+import jdk.test.lib.process.OutputAnalyzer;\n+import jdk.test.lib.process.ProcessTools;\n+\n+public class DcmdMBeanTestCheckJni {\n+\n+    public static void main(String[] args) throws Exception {\n+        OutputAnalyzer out = ProcessTools.executeTestJvm(\"-Xcheck:jni\", \"DcmdMBeanRunner\");\n+        out.shouldNotMatch(\"WARNING: JNI local refs: \\\\d+, exceeds capacity: \\\\d+\")\n+           .shouldContain(\"DcmdMBeanRunner COMPLETE\")\n+           .shouldHaveExitValue(0);\n+    }\n+\n+}\n","filename":"test\/jdk\/com\/sun\/management\/DiagnosticCommandMBean\/DcmdMBeanTestCheckJni.java","additions":45,"deletions":0,"binary":false,"changes":45,"status":"added"}]}