{"files":[{"patch":"@@ -315,9 +315,7 @@\n-  if (UseLargePages && ps < LargePageSizeInBytes) {\n-      char msg[256];\n-      jio_snprintf(msg, sizeof(msg),\n-                   \"Failed to reserve large page memory for code cache (\" SIZE_FORMAT \"%s). \"\n-                   \"Reverting to smaller page size (\" SIZE_FORMAT \"%s).\",\n-                   byte_size_in_exact_unit(LargePageSizeInBytes), exact_unit_for_byte_size(LargePageSizeInBytes),\n-                   byte_size_in_exact_unit(ps), exact_unit_for_byte_size(ps));\n-      log_warning(codecache)(\"%s\", msg);\n-      warning(\"%s\", msg);\n+  if (UseLargePages) {\n+    const size_t lg_ps = page_size(false, 1);\n+    if (ps < lg_ps) {\n+      log_warning(codecache)(\"Failed to use large page memory for code cache (\" PROPERFMT \"). \"\n+                             \"Reverting to smaller page size (\" PROPERFMT \").\",\n+                             PROPERFMTARGS(lg_ps), PROPERFMTARGS(ps));\n+    }\n","filename":"src\/hotspot\/share\/code\/codeCache.cpp","additions":7,"deletions":9,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -27,1 +27,2 @@\n- * @summary Test checks that if using large pages and code cache gets above the limit it tries to revert to smaller pages instead of failing\n+ * @summary Code cache reservation should gracefully downgrade to using smaller pages if the code cache size is too small to host the requested page size.\n+ * @requires os.family == \"linux\"\n@@ -54,1 +55,0 @@\n-                    \"-Xlog:pagesize*=debug\",\n@@ -57,1 +57,1 @@\n-            out.shouldContain(\"Failed to reserve large page memory for code cache\");\n+            out.shouldContain(\"Failed to use large page memory for code cache\");\n","filename":"test\/hotspot\/jtreg\/compiler\/codecache\/CheckLargePages.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}