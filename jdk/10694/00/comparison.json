{"files":[{"patch":"@@ -103,3 +103,1 @@\n-  \/\/ Returns the number of dirtied cards that were not yet dirty. This result may\n-  \/\/ be inaccurate as it does not perform the dirtying atomically.\n-  inline size_t mark_range_dirty(size_t start_card_index, size_t num_cards);\n+  inline void mark_range_dirty(size_t start_card_index, size_t num_cards);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CardTable.hpp","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-inline size_t G1CardTable::mark_range_dirty(size_t start_card_index, size_t num_cards) {\n+inline void G1CardTable::mark_range_dirty(size_t start_card_index, size_t num_cards) {\n@@ -50,2 +50,0 @@\n-  size_t result = 0;\n-\n@@ -60,1 +58,0 @@\n-      result += sizeof(value);\n@@ -70,1 +67,0 @@\n-          result++;\n@@ -77,2 +73,0 @@\n-\n-  return result;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CardTable.inline.hpp","additions":1,"deletions":7,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -115,1 +115,1 @@\n-    MergeRSDirtyCards,\n+    MergeRSCards,\n@@ -122,1 +122,1 @@\n-      \"Dirty Cards\" };\n+      \"Merged Cards\" };\n","filename":"src\/hotspot\/share\/gc\/g1\/g1GCPhaseTimes.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -807,6 +807,8 @@\n-    size_t const total_log_buffer_cards = p->sum_thread_work_items(G1GCPhaseTimes::MergeHCC, G1GCPhaseTimes::MergeHCCDirtyCards) +\n-                                          p->sum_thread_work_items(G1GCPhaseTimes::MergeLB, G1GCPhaseTimes::MergeLBDirtyCards);\n-    \/\/ Update prediction for card merge; MergeRSDirtyCards includes the cards from the Eager Reclaim phase.\n-    size_t const total_cards_merged = p->sum_thread_work_items(G1GCPhaseTimes::MergeRS, G1GCPhaseTimes::MergeRSDirtyCards) +\n-                                      p->sum_thread_work_items(G1GCPhaseTimes::OptMergeRS, G1GCPhaseTimes::MergeRSDirtyCards) +\n-                                      total_log_buffer_cards;\n+    \/\/ Update prediction for card merge.\n+    size_t const merged_cards_from_log_buffers = p->sum_thread_work_items(G1GCPhaseTimes::MergeHCC, G1GCPhaseTimes::MergeHCCDirtyCards) +\n+                                                 p->sum_thread_work_items(G1GCPhaseTimes::MergeLB, G1GCPhaseTimes::MergeLBDirtyCards);\n+    \/\/ MergeRSCards includes the cards from the Eager Reclaim phase.\n+    size_t const merged_cards_from_rs = p->sum_thread_work_items(G1GCPhaseTimes::MergeRS, G1GCPhaseTimes::MergeRSCards) +\n+                                        p->sum_thread_work_items(G1GCPhaseTimes::OptMergeRS, G1GCPhaseTimes::MergeRSCards);\n+    size_t const total_cards_merged = merged_cards_from_rs +\n+                                      merged_cards_from_log_buffers;\n@@ -836,3 +838,1 @@\n-    \/\/ Cards from the remembered sets are all cards not duplicated by cards from\n-    \/\/ the logs.\n-    \/\/ Due to duplicates in the log buffers, the number of actually scanned cards\n+    \/\/ Due to duplicates in the log buffers, the number of scanned cards\n@@ -840,1 +840,1 @@\n-    const size_t from_rs_length_cards = (total_cards_scanned > total_log_buffer_cards) ? total_cards_scanned - total_log_buffer_cards : 0;\n+    const size_t scanned_cards_from_rs = (total_cards_scanned > merged_cards_from_log_buffers) ? total_cards_scanned - merged_cards_from_log_buffers : 0;\n@@ -842,2 +842,2 @@\n-    if (total_cards_scanned > 0) {\n-      merge_to_scan_ratio = (double) from_rs_length_cards \/ total_cards_scanned;\n+    if (merged_cards_from_rs > 0) {\n+      merge_to_scan_ratio = (double)scanned_cards_from_rs \/ merged_cards_from_rs;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Policy.cpp","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -1119,2 +1119,2 @@\n-    void inc_cards_dirty(size_t increment = 1) {\n-      _merged[G1GCPhaseTimes::MergeRSDirtyCards] += increment;\n+    void inc_remset_cards(size_t increment = 1) {\n+      _merged[G1GCPhaseTimes::MergeRSCards] += increment;\n@@ -1175,1 +1175,0 @@\n-        _stats.inc_cards_dirty();\n@@ -1178,0 +1177,1 @@\n+      _stats.inc_remset_cards();\n@@ -1198,1 +1198,1 @@\n-      assert(tag < G1GCPhaseTimes::MergeRSDirtyCards, \"invalid tag %u\", tag);\n+      assert(tag < G1GCPhaseTimes::MergeRSCards, \"invalid tag %u\", tag);\n@@ -1208,2 +1208,2 @@\n-      size_t num_dirtied = _ct->mark_range_dirty(_region_base_idx + start_card_idx, length);\n-      _stats.inc_cards_dirty(num_dirtied);\n+      _ct->mark_range_dirty(_region_base_idx + start_card_idx, length);\n+      _stats.inc_remset_cards(length);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1RemSet.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -132,0 +132,1 @@\n+        new LogMessageWithLevel(\"Merged Cards\", Level.DEBUG),\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestGCLogMessages.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}