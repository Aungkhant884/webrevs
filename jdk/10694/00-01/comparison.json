{"files":[{"patch":"@@ -85,2 +85,2 @@\n-    _young_card_merge_to_scan_ratio_seq(new TruncatedSeq(TruncatedSeqLength)),\n-    _mixed_card_merge_to_scan_ratio_seq(new TruncatedSeq(TruncatedSeqLength)),\n+    _young_card_scan_to_merge_ratio_seq(new TruncatedSeq(TruncatedSeqLength)),\n+    _mixed_card_scan_to_merge_ratio_seq(new TruncatedSeq(TruncatedSeqLength)),\n@@ -115,1 +115,1 @@\n-  _young_card_merge_to_scan_ratio_seq->add(young_card_merge_to_scan_ratio_defaults[index]);\n+  _young_card_scan_to_merge_ratio_seq->add(young_card_merge_to_scan_ratio_defaults[index]);\n@@ -191,1 +191,1 @@\n-void G1Analytics::report_card_merge_to_scan_ratio(double merge_to_scan_ratio, bool for_young_only_phase) {\n+void G1Analytics::report_card_scan_to_merge_ratio(double merge_to_scan_ratio, bool for_young_only_phase) {\n@@ -193,1 +193,1 @@\n-    _young_card_merge_to_scan_ratio_seq->add(merge_to_scan_ratio);\n+    _young_card_scan_to_merge_ratio_seq->add(merge_to_scan_ratio);\n@@ -195,1 +195,1 @@\n-    _mixed_card_merge_to_scan_ratio_seq->add(merge_to_scan_ratio);\n+    _mixed_card_scan_to_merge_ratio_seq->add(merge_to_scan_ratio);\n@@ -260,2 +260,2 @@\n-  if  (for_young_only_phase || !enough_samples_available(_mixed_card_merge_to_scan_ratio_seq)) {\n-    return (size_t)(rs_length * predict_in_unit_interval(_young_card_merge_to_scan_ratio_seq));\n+  if  (for_young_only_phase || !enough_samples_available(_mixed_card_scan_to_merge_ratio_seq)) {\n+    return (size_t)(rs_length * predict_in_unit_interval(_young_card_scan_to_merge_ratio_seq));\n@@ -263,1 +263,1 @@\n-    return (size_t)(rs_length * predict_in_unit_interval(_mixed_card_merge_to_scan_ratio_seq));\n+    return (size_t)(rs_length * predict_in_unit_interval(_mixed_card_scan_to_merge_ratio_seq));\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Analytics.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -52,1 +52,1 @@\n-  \/\/ The ratio between the number of merged cards and actually scanned cards, for\n+  \/\/ The ratio between the number of scanned cards and actually merged cards, for\n@@ -54,2 +54,2 @@\n-  TruncatedSeq* _young_card_merge_to_scan_ratio_seq;\n-  TruncatedSeq* _mixed_card_merge_to_scan_ratio_seq;\n+  TruncatedSeq* _young_card_scan_to_merge_ratio_seq;\n+  TruncatedSeq* _mixed_card_scan_to_merge_ratio_seq;\n@@ -131,1 +131,1 @@\n-  void report_card_merge_to_scan_ratio(double cards_per_entry_ratio, bool for_young_only_phase);\n+  void report_card_scan_to_merge_ratio(double cards_per_entry_ratio, bool for_young_only_phase);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Analytics.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -841,1 +841,1 @@\n-    double merge_to_scan_ratio = 0.0;\n+    double scan_to_merge_ratio = 0.0;\n@@ -843,1 +843,1 @@\n-      merge_to_scan_ratio = (double)scanned_cards_from_rs \/ merged_cards_from_rs;\n+      scan_to_merge_ratio = (double)scanned_cards_from_rs \/ merged_cards_from_rs;\n@@ -845,1 +845,1 @@\n-    _analytics->report_card_merge_to_scan_ratio(merge_to_scan_ratio, is_young_only_pause);\n+    _analytics->report_card_scan_to_merge_ratio(scan_to_merge_ratio, is_young_only_pause);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Policy.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}