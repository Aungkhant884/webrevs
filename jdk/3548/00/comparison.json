{"files":[{"patch":"@@ -114,0 +114,2 @@\n+    assert(!thread->has_last_Java_frame() || thread->frame_anchor()->walkable(), \"Unwalkable stack in native->vm transition\");\n+\n@@ -120,4 +122,1 @@\n-    if (SafepointMechanism::should_process(thread) || thread->is_suspend_after_native()) {\n-      JavaThread::check_safepoint_and_suspend_for_native_trans(thread);\n-    }\n-\n+    SafepointMechanism::process_if_requested_with_exit_check(thread, false \/* check asyncs *\/);\n@@ -126,0 +125,1 @@\n+\n","filename":"src\/hotspot\/share\/runtime\/interfaceSupport.inline.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2147,20 +2147,4 @@\n-\/\/ Slow path when the native==>VM\/Java barriers detect a safepoint is in\n-\/\/ progress or when _suspend_flags is non-zero.\n-\/\/ Current thread needs to self-suspend if there is a suspend request and\/or\n-\/\/ block if a safepoint is in progress.\n-\/\/ Async exception ISN'T checked.\n-\/\/ Note only the ThreadInVMfromNative transition can call this function\n-\/\/ directly and when thread state is _thread_in_native_trans\n-void JavaThread::check_safepoint_and_suspend_for_native_trans(JavaThread *thread) {\n-  assert(thread->thread_state() == _thread_in_native_trans, \"wrong state\");\n-  assert(!thread->has_last_Java_frame() || thread->frame_anchor()->walkable(), \"Unwalkable stack in native->vm transition\");\n-\n-  SafepointMechanism::process_if_requested_with_exit_check(thread, false \/* check asyncs *\/);\n-}\n-\n-\/\/ Slow path when the native==>VM\/Java barriers detect a safepoint is in\n-\/\/ progress or when _suspend_flags is non-zero.\n-\/\/ Current thread needs to self-suspend if there is a suspend request and\/or\n-\/\/ block if a safepoint is in progress.\n-\/\/ Also check for pending async exception (not including unsafe access error).\n-\/\/ Note only the native==>VM\/Java barriers can call this function and when\n+\/\/ Slow path when the native==>Java barriers detect a safepoint\/handshake is\n+\/\/ pending, when _suspend_flags is non-zero or when we need to process a stack\n+\/\/ watermark. Also check for pending async exceptions (except unsafe access error).\n+\/\/ Note only the native==>Java barriers can call this function and when\n@@ -2169,0 +2153,3 @@\n+  assert(thread->thread_state() == _thread_in_native_trans, \"wrong state\");\n+  assert(!thread->has_last_Java_frame() || thread->frame_anchor()->walkable(), \"Unwalkable stack in native->Java transition\");\n+\n@@ -2172,1 +2159,1 @@\n-  check_safepoint_and_suspend_for_native_trans(thread);\n+  SafepointMechanism::process_if_requested_with_exit_check(thread, false \/* check asyncs *\/);\n","filename":"src\/hotspot\/share\/runtime\/thread.cpp","additions":8,"deletions":21,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -1243,1 +1243,0 @@\n-  static void check_safepoint_and_suspend_for_native_trans(JavaThread *thread);\n@@ -1255,5 +1254,0 @@\n-  \/\/ Whenever a thread transitions from native to vm\/java it must suspend\n-  \/\/ if external|deopt suspend is present.\n-  bool is_suspend_after_native() const {\n-    return (_suspend_flags & (_external_suspend | _obj_deopt JFR_ONLY(| _trace_flag))) != 0;\n-  }\n@@ -1331,1 +1325,1 @@\n-            is_external_suspend() || is_trace_suspend() || is_obj_deopt_suspend();\n+           (_suspend_flags & (_external_suspend | _obj_deopt JFR_ONLY(| _trace_flag))) != 0;\n","filename":"src\/hotspot\/share\/runtime\/thread.hpp","additions":1,"deletions":7,"binary":false,"changes":8,"status":"modified"}]}