{"files":[{"patch":"@@ -114,0 +114,2 @@\n+    assert(!thread->has_last_Java_frame() || thread->frame_anchor()->walkable(), \"Unwalkable stack in native->vm transition\");\n+\n@@ -120,4 +122,1 @@\n-    if (SafepointMechanism::should_process(thread) || thread->is_suspend_after_native()) {\n-      JavaThread::check_safepoint_and_suspend_for_native_trans(thread);\n-    }\n-\n+    SafepointMechanism::process_if_requested_with_exit_check(thread, false \/* check asyncs *\/);\n@@ -126,0 +125,1 @@\n+\n","filename":"src\/hotspot\/share\/runtime\/interfaceSupport.inline.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1872,8 +1872,6 @@\n-\/\/ Slow path when the native==>VM\/Java barriers detect a safepoint is in\n-\/\/ progress or when _suspend_flags is non-zero.\n-\/\/ Current thread needs to self-suspend if there is a suspend request and\/or\n-\/\/ block if a safepoint is in progress.\n-\/\/ Async exception ISN'T checked.\n-\/\/ Note only the ThreadInVMfromNative transition can call this function\n-\/\/ directly and when thread state is _thread_in_native_trans\n-void JavaThread::check_safepoint_and_suspend_for_native_trans(JavaThread *thread) {\n+\/\/ Slow path when the native==>Java barriers detect a safepoint\/handshake is\n+\/\/ pending, when _suspend_flags is non-zero or when we need to process a stack\n+\/\/ watermark. Also check for pending async exceptions (except unsafe access error).\n+\/\/ Note only the native==>Java barriers can call this function when thread state\n+\/\/ is _thread_in_native_trans.\n+void JavaThread::check_special_condition_for_native_trans(JavaThread *thread) {\n@@ -1881,4 +1879,1 @@\n-  assert(!thread->has_last_Java_frame() || thread->frame_anchor()->walkable(), \"Unwalkable stack in native->vm transition\");\n-\n-  SafepointMechanism::process_if_requested_with_exit_check(thread, false \/* check asyncs *\/);\n-}\n+  assert(!thread->has_last_Java_frame() || thread->frame_anchor()->walkable(), \"Unwalkable stack in native->Java transition\");\n@@ -1886,8 +1881,0 @@\n-\/\/ Slow path when the native==>VM\/Java barriers detect a safepoint is in\n-\/\/ progress or when _suspend_flags is non-zero.\n-\/\/ Current thread needs to self-suspend if there is a suspend request and\/or\n-\/\/ block if a safepoint is in progress.\n-\/\/ Also check for pending async exception (not including unsafe access error).\n-\/\/ Note only the native==>VM\/Java barriers can call this function and when\n-\/\/ thread state is _thread_in_native_trans.\n-void JavaThread::check_special_condition_for_native_trans(JavaThread *thread) {\n@@ -1897,1 +1884,1 @@\n-  check_safepoint_and_suspend_for_native_trans(thread);\n+  SafepointMechanism::process_if_requested_with_exit_check(thread, false \/* check asyncs *\/);\n","filename":"src\/hotspot\/share\/runtime\/thread.cpp","additions":8,"deletions":21,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -1148,1 +1148,0 @@\n-  static void check_safepoint_and_suspend_for_native_trans(JavaThread *thread);\n@@ -1152,6 +1151,0 @@\n-  \/\/ Whenever a thread transitions from native to vm\/java it must suspend\n-  \/\/ if deopt suspend is present.\n-  bool is_suspend_after_native() const {\n-    return (_suspend_flags & (_obj_deopt JFR_ONLY(| _trace_flag))) != 0;\n-  }\n-\n@@ -1181,1 +1174,2 @@\n-    return (_special_runtime_exit_condition != _no_async_condition) || is_trace_suspend() || is_obj_deopt_suspend();\n+    return (_special_runtime_exit_condition != _no_async_condition) ||\n+           (_suspend_flags & (_obj_deopt JFR_ONLY(| _trace_flag))) != 0;\n","filename":"src\/hotspot\/share\/runtime\/thread.hpp","additions":2,"deletions":8,"binary":false,"changes":10,"status":"modified"}]}