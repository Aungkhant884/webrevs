{"files":[{"patch":"@@ -817,1 +817,1 @@\n-      __ abs  (calc_input, calc_result, tmp);\n+      __ abs(calc_input, calc_result, tmp);\n@@ -821,1 +821,1 @@\n-      __ sqrt (calc_input, calc_result, LIR_OprFact::illegalOpr);\n+      __ sqrt(calc_input, calc_result, LIR_OprFact::illegalOpr);\n","filename":"src\/hotspot\/cpu\/x86\/c1_LIRGenerator_x86.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -162,1 +162,0 @@\n-  do_intrinsic(_dsqrt_strict,             java_lang_StrictMath,   sqrt_name,  double_double_signature,           F_SN)  \\\n@@ -194,0 +193,3 @@\n+  \/* Special flavor of dsqrt intrinsic to handle the \"native\" method in StrictMath. Otherwise the same as in Math. *\/   \\\n+  do_intrinsic(_dsqrt_strict,             java_lang_StrictMath,   sqrt_name,          double_double_signature,   F_SN)  \\\n+                                                                                                                        \\\n","filename":"src\/hotspot\/share\/classfile\/vmIntrinsics.hpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -148,1 +148,0 @@\n-      case vmIntrinsics::_Reference_get:     return java_lang_ref_reference_get;\n@@ -151,0 +150,1 @@\n+      case vmIntrinsics::_Reference_get:     return java_lang_ref_reference_get;\n","filename":"src\/hotspot\/share\/interpreter\/abstractInterpreter.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}