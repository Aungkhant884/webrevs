{"files":[{"patch":"@@ -279,2 +279,0 @@\n-  case vmIntrinsics::_min:\n-  case vmIntrinsics::_max:\n@@ -283,0 +281,2 @@\n+  case vmIntrinsics::_min:\n+  case vmIntrinsics::_max:\n@@ -287,0 +287,6 @@\n+  case vmIntrinsics::_min_strict:\n+  case vmIntrinsics::_max_strict:\n+  case vmIntrinsics::_maxF_strict:\n+  case vmIntrinsics::_minF_strict:\n+  case vmIntrinsics::_maxD_strict:\n+  case vmIntrinsics::_minD_strict:\n","filename":"src\/hotspot\/share\/classfile\/vmIntrinsics.cpp","additions":8,"deletions":2,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -193,0 +193,7 @@\n+  \/* StrictMath intrinsics, similar to what we have in Math. *\/                                                         \\\n+  do_intrinsic(_min_strict,               java_lang_StrictMath,   min_name,           int2_int_signature,        F_S)   \\\n+  do_intrinsic(_max_strict,               java_lang_StrictMath,   max_name,           int2_int_signature,        F_S)   \\\n+  do_intrinsic(_minF_strict,              java_lang_StrictMath,   min_name,           float2_float_signature,    F_S)   \\\n+  do_intrinsic(_maxF_strict,              java_lang_StrictMath,   max_name,           float2_float_signature,    F_S)   \\\n+  do_intrinsic(_minD_strict,              java_lang_StrictMath,   min_name,           double2_double_signature,  F_S)   \\\n+  do_intrinsic(_maxD_strict,              java_lang_StrictMath,   max_name,           double2_double_signature,  F_S)   \\\n","filename":"src\/hotspot\/share\/classfile\/vmIntrinsics.hpp","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -457,0 +457,1 @@\n+  case vmIntrinsics::_maxF_strict:\n@@ -460,0 +461,1 @@\n+  case vmIntrinsics::_minF_strict:\n@@ -463,0 +465,1 @@\n+  case vmIntrinsics::_maxD_strict:\n@@ -466,0 +469,1 @@\n+  case vmIntrinsics::_minD_strict:\n@@ -513,0 +517,2 @@\n+  case vmIntrinsics::_min_strict:\n+  case vmIntrinsics::_max_strict:\n","filename":"src\/hotspot\/share\/opto\/c2compiler.cpp","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -274,3 +274,0 @@\n-  case vmIntrinsics::_min:\n-  case vmIntrinsics::_max:                      return inline_min_max(intrinsic_id());\n-\n@@ -635,0 +632,6 @@\n+  case vmIntrinsics::_min:\n+  case vmIntrinsics::_max:\n+  case vmIntrinsics::_min_strict:\n+  case vmIntrinsics::_max_strict:\n+    return inline_min_max(intrinsic_id());\n+\n@@ -639,1 +642,5 @@\n-    return inline_fp_min_max(intrinsic_id());\n+  case vmIntrinsics::_maxF_strict:\n+  case vmIntrinsics::_minF_strict:\n+  case vmIntrinsics::_maxD_strict:\n+  case vmIntrinsics::_minD_strict:\n+      return inline_fp_min_max(intrinsic_id());\n@@ -1891,1 +1898,1 @@\n-  bool want_max = (id == vmIntrinsics::_max);\n+  bool want_max = (id == vmIntrinsics::_max || id == vmIntrinsics::_max_strict);\n@@ -7065,0 +7072,2 @@\n+  case vmIntrinsics::_maxF_strict:\n+  case vmIntrinsics::_minF_strict:\n@@ -7071,0 +7080,2 @@\n+  case vmIntrinsics::_maxD_strict:\n+  case vmIntrinsics::_minD_strict:\n@@ -7080,5 +7091,19 @@\n-  case vmIntrinsics::_maxF:  n = new MaxFNode(a, b);  break;\n-  case vmIntrinsics::_minF:  n = new MinFNode(a, b);  break;\n-  case vmIntrinsics::_maxD:  n = new MaxDNode(a, b);  break;\n-  case vmIntrinsics::_minD:  n = new MinDNode(a, b);  break;\n-  default:  fatal_unexpected_iid(id);  break;\n+  case vmIntrinsics::_maxF:\n+  case vmIntrinsics::_maxF_strict:\n+    n = new MaxFNode(a, b);\n+    break;\n+  case vmIntrinsics::_minF:\n+  case vmIntrinsics::_minF_strict:\n+    n = new MinFNode(a, b);\n+    break;\n+  case vmIntrinsics::_maxD:\n+  case vmIntrinsics::_maxD_strict:\n+    n = new MaxDNode(a, b);\n+    break;\n+  case vmIntrinsics::_minD:\n+  case vmIntrinsics::_minD_strict:\n+    n = new MinDNode(a, b);\n+    break;\n+  default:\n+    fatal_unexpected_iid(id);\n+    break;\n","filename":"src\/hotspot\/share\/opto\/library_call.cpp","additions":35,"deletions":10,"binary":false,"changes":45,"status":"modified"},{"patch":"@@ -1631,0 +1631,1 @@\n+    @IntrinsicCandidate\n@@ -1663,0 +1664,1 @@\n+    @IntrinsicCandidate\n@@ -1681,0 +1683,1 @@\n+    @IntrinsicCandidate\n@@ -1695,0 +1698,1 @@\n+    @IntrinsicCandidate\n@@ -1727,0 +1731,1 @@\n+    @IntrinsicCandidate\n@@ -1745,0 +1750,1 @@\n+    @IntrinsicCandidate\n","filename":"src\/java.base\/share\/classes\/java\/lang\/StrictMath.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"}]}