{"files":[{"patch":"@@ -80,1 +80,0 @@\n-                Thread.sleep(1000);\n@@ -93,0 +92,5 @@\n+                output.asLines()\n+                        .stream()\n+                        .filter(line -> line.startsWith(\"Connecting to\"))\n+                        .forEach(System.out::println); \/\/ prints connection info from test jvm output\n+\n@@ -94,4 +98,1 @@\n-                    System.out.println(\"Process output = \");\n-                    for (String line : output.asLines()) {\n-                        System.out.println(line);\n-                    }\n+                    output.asLines().forEach(System.out::println);\n@@ -125,1 +126,3 @@\n-        } catch (IOException e) {\n+        } catch (Exception e) {\n+            System.err.println(\"Server-Side Exception: \" + e);\n+            e.printStackTrace(System.err);\n@@ -129,0 +132,2 @@\n+        } finally {\n+            socket.getInputStream().readAllBytes();\n@@ -141,4 +146,7 @@\n-\n-        try (var in = new BufferedReader(new InputStreamReader(url.openStream()))) {\n-            \/\/ Opening the connection and getting the input stream is sufficient\n-            \/\/ to generate debug logs\n+        System.out.println(\"Reading data on client side: \");\n+        HttpsURLConnection conn = (HttpsURLConnection) url.openConnection();\n+        try (var in = new BufferedReader(new InputStreamReader(conn.getInputStream()))) {\n+            String line;\n+            while ((line = in.readLine()) != null) {\n+                System.out.println(line);\n+            }\n","filename":"test\/jdk\/sun\/security\/ssl\/SSLLogger\/LoggingFormatConsistency.java","additions":18,"deletions":10,"binary":false,"changes":28,"status":"modified"}]}