{"files":[{"patch":"@@ -240,0 +240,1 @@\n+  static int min_invocations() { return Tier4MinInvocationThreshold; }\n","filename":"src\/hotspot\/share\/compiler\/compilationPolicy.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+#include \"compiler\/compilationPolicy.hpp\"\n@@ -155,2 +156,2 @@\n-  int call_site_count  = method()->scale_count(profile.count());\n-  int invoke_count     = method()->interpreter_invocation_count();\n+  int call_site_count  = caller_method->scale_count(profile.count());\n+  int invoke_count     = caller_method->interpreter_invocation_count();\n@@ -195,4 +196,2 @@\n-bool InlineTree::should_not_inline(ciMethod *callee_method,\n-                                   ciMethod* caller_method,\n-                                   JVMState* jvms) {\n-\n+bool InlineTree::should_not_inline(ciMethod* callee_method, ciMethod* caller_method,\n+                                   int caller_bci, ciCallProfile& profile) {\n@@ -236,1 +235,0 @@\n-  int caller_bci = jvms->bci();\n@@ -292,1 +290,0 @@\n-\n@@ -302,8 +299,12 @@\n-    } else {\n-      intx counter_high_value;\n-      \/\/ Tiered compilation uses a different \"high value\" than non-tiered compilation.\n-      \/\/ Determine the right value to use.\n-      if (TieredCompilation) {\n-        counter_high_value = InvocationCounter::count_limit \/ 2;\n-      } else {\n-        counter_high_value = CompileThreshold \/ 2;\n+    }\n+\n+    if (MinInlineFrequencyRatio > 0) {\n+      int call_site_count  = caller_method->scale_count(profile.count());\n+      int invoke_count     = caller_method->interpreter_invocation_count();\n+      assert(invoke_count != 0, \"require invocation count greater than zero\");\n+      double freq = (double)call_site_count \/ (double)invoke_count;\n+      double min_freq = MAX2(MinInlineFrequencyRatio, 1.0 \/ CompilationPolicy::min_invocations());\n+\n+      if (freq < min_freq) {\n+        set_msg(\"low call site frequency\");\n+        return true;\n@@ -311,0 +312,4 @@\n+    }\n+\n+    if (MinInliningThreshold > 0) { \/\/ Deprecated heuristic\n+      intx counter_high_value = TieredCompilation ? InvocationCounter::count_limit \/ 2 : CompileThreshold \/ 2;\n@@ -370,1 +375,1 @@\n-  if (should_not_inline(callee_method, caller_method, jvms)) {\n+  if (should_not_inline(callee_method, caller_method, caller_bci, profile)) {\n","filename":"src\/hotspot\/share\/opto\/bytecodeInfo.cpp","additions":22,"deletions":17,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -81,1 +81,2 @@\n-                                JVMState* jvms);\n+                                int caller_bci,\n+                                ciCallProfile& profile);\n","filename":"src\/hotspot\/share\/opto\/parse.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -530,0 +530,1 @@\n+  { \"MinInliningThreshold\",         JDK_Version::jdk(18), JDK_Version::jdk(19), JDK_Version::jdk(20) },\n","filename":"src\/hotspot\/share\/runtime\/arguments.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1354,3 +1354,3 @@\n-  product(intx, MinInliningThreshold, 250,                                  \\\n-          \"The minimum invocation count a method needs to have to be \"      \\\n-          \"inlined\")                                                        \\\n+  product(intx, MinInliningThreshold, 0,                                    \\\n+          \"(Deprecated) The minimum invocation count a method needs to\"     \\\n+          \"have to be inlined\")                                             \\\n@@ -1410,0 +1410,4 @@\n+  product(double, MinInlineFrequencyRatio, 0.0085, DIAGNOSTIC,               \\\n+          \"Minimum ratio of call site execution to caller method\"           \\\n+          \"invocation to be considered for inlining\")                       \\\n+                                                                            \\\n","filename":"src\/hotspot\/share\/runtime\/globals.hpp","additions":7,"deletions":3,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n- *        -XX:MinInliningThreshold=0\n+ *        -XX:MinInlineFrequencyRatio=0\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/string\/TestStringIntrinsics2.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}