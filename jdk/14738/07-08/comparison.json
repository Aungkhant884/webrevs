{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,0 +32,1 @@\n+import java.util.Arrays;\n@@ -111,0 +112,1 @@\n+    @Override\n@@ -112,5 +114,1 @@\n-        int retval = 0;\n-        for (int i = 1; i < this.key.length; i++) {\n-            retval += this.key[i] * i;\n-        }\n-        return(retval ^= \"des\".hashCode());\n+        return Arrays.hashCode(this.key) ^ \"des\".hashCode();\n@@ -119,0 +117,1 @@\n+    @Override\n@@ -123,1 +122,1 @@\n-        if (!(obj instanceof SecretKey))\n+        if (!(obj instanceof SecretKey that))\n@@ -126,1 +125,1 @@\n-        String thatAlg = ((SecretKey)obj).getAlgorithm();\n+        String thatAlg = that.getAlgorithm();\n@@ -130,1 +129,1 @@\n-        byte[] thatKey = ((SecretKey)obj).getEncoded();\n+        byte[] thatKey = that.getEncoded();\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/DESKey.java","additions":8,"deletions":9,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,0 +32,1 @@\n+import java.util.Arrays;\n@@ -110,0 +111,1 @@\n+    @Override\n@@ -111,5 +113,1 @@\n-        int retval = 0;\n-        for (int i = 1; i < this.key.length; i++) {\n-            retval += this.key[i] * i;\n-        }\n-        return(retval ^= \"desede\".hashCode());\n+        return Arrays.hashCode(this.key) ^ \"desede\".hashCode();\n@@ -118,0 +116,1 @@\n+    @Override\n@@ -122,1 +121,1 @@\n-        if (!(obj instanceof SecretKey))\n+        if (!(obj instanceof SecretKey that))\n@@ -125,1 +124,1 @@\n-        String thatAlg = ((SecretKey)obj).getAlgorithm();\n+        String thatAlg = that.getAlgorithm();\n@@ -130,1 +129,1 @@\n-        byte[] thatKey = ((SecretKey)obj).getEncoded();\n+        byte[] thatKey = that.getEncoded();\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/DESedeKey.java","additions":8,"deletions":9,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -290,0 +290,1 @@\n+    @Override\n@@ -294,0 +295,1 @@\n+    @Override\n@@ -297,1 +299,1 @@\n-        if (!(obj instanceof javax.crypto.interfaces.DHPrivateKey)) {\n+        if (!(obj instanceof javax.crypto.interfaces.DHPrivateKey other)) {\n@@ -300,2 +302,0 @@\n-        javax.crypto.interfaces.DHPrivateKey other =\n-                (javax.crypto.interfaces.DHPrivateKey) obj;\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/DHPrivateKey.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -282,0 +282,1 @@\n+    @Override\n@@ -286,0 +287,1 @@\n+    @Override\n@@ -289,1 +291,1 @@\n-        if (!(obj instanceof javax.crypto.interfaces.DHPublicKey)) {\n+        if (!(obj instanceof javax.crypto.interfaces.DHPublicKey other)) {\n@@ -293,2 +295,0 @@\n-        javax.crypto.interfaces.DHPublicKey other =\n-            (javax.crypto.interfaces.DHPublicKey) obj;\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/DHPublicKey.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -108,0 +108,1 @@\n+    @Override\n@@ -109,5 +110,2 @@\n-        int retval = 0;\n-        for (int i = 1; i < this.key.length; i++) {\n-            retval += this.key[i] * i;\n-        }\n-        return(retval ^= getAlgorithm().toLowerCase(Locale.ENGLISH).hashCode());\n+        return Arrays.hashCode(this.key)\n+                ^ getAlgorithm().toLowerCase(Locale.ENGLISH).hashCode();\n@@ -116,0 +114,1 @@\n+    @Override\n@@ -120,1 +119,1 @@\n-        if (!(obj instanceof SecretKey))\n+        if (!(obj instanceof SecretKey that))\n@@ -123,2 +122,0 @@\n-        SecretKey that = (SecretKey)obj;\n-\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/PBEKey.java","additions":6,"deletions":9,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -167,1 +167,1 @@\n-                    if (this.getClass() != obj.getClass()) return false;\n+                    if (obj == null || this.getClass() != obj.getClass()) return false;\n@@ -239,0 +239,1 @@\n+    @Override\n@@ -240,5 +241,2 @@\n-        int retval = 0;\n-        for (int i = 1; i < this.key.length; i++) {\n-            retval += this.key[i] * i;\n-        }\n-        return(retval ^= getAlgorithm().toLowerCase(Locale.ENGLISH).hashCode());\n+        return Arrays.hashCode(this.key)\n+                ^ getAlgorithm().toLowerCase(Locale.ENGLISH).hashCode();\n@@ -247,0 +245,1 @@\n+    @Override\n@@ -251,1 +250,1 @@\n-        if (!(obj instanceof SecretKey))\n+        if (!(obj instanceof SecretKey that))\n@@ -254,2 +253,0 @@\n-        SecretKey that = (SecretKey) obj;\n-\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/PBKDF2KeyImpl.java","additions":6,"deletions":9,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -280,6 +280,5 @@\n-        int retval = alg.hashCode();\n-        retval ^= maxKeySize;\n-        retval ^= Objects.hashCode(exemptionMechanism);\n-        retval ^= (checkParam ? 100 : 0);\n-        retval ^= Objects.hashCode(algParamSpec);\n-        return retval;\n+        return alg.hashCode()\n+                ^ maxKeySize\n+                ^ Objects.hashCode(exemptionMechanism)\n+                ^ (checkParam ? 100 : 0)\n+                ^ Objects.hashCode(algParamSpec);\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/CryptoPermission.java","additions":5,"deletions":6,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -622,7 +622,6 @@\n-            int retval = cryptoPermission.hashCode();\n-            retval ^= Objects.hashCode(alg);\n-            retval ^= Objects.hashCode(exemptionMechanism);\n-            retval ^= maxKeySize;\n-            retval ^= (checkParam ? 100 : 0);\n-            retval ^= Objects.hashCode(algParamSpec);\n-            return retval;\n+            return cryptoPermission.hashCode()\n+                    ^ Objects.hashCode(alg)\n+                    ^ Objects.hashCode(exemptionMechanism)\n+                    ^ maxKeySize\n+                    ^ (checkParam ? 100 : 0)\n+                    ^ Objects.hashCode(algParamSpec);\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/CryptoPolicyParser.java","additions":6,"deletions":7,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -347,5 +347,4 @@\n-            hash = 1;\n-            hash += Objects.hashCode(fullName);\n-            hash += Objects.hashCode(relativeName);\n-            hash += Objects.hash(crlIssuer);\n-            hash += Arrays.hashCode(reasonFlags);\n+            hash = 1 + Objects.hashCode(fullName)\n+                    + Objects.hashCode(relativeName)\n+                    + Objects.hash(crlIssuer)\n+                    + Arrays.hashCode(reasonFlags);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/DistributionPoint.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -287,2 +287,10 @@\n-        return Arrays.deepHashCode(new Object[]{isDestroyed(), getEncoded(),\n-                getKeyType(), principal, versionNum});\n+        int result = 17;\n+        if (isDestroyed()) {\n+            return result;\n+        }\n+        result = 37 * result + Arrays.hashCode(getEncoded());\n+        result = 37 * result + getKeyType();\n+        if (principal != null) {\n+            result = 37 * result + principal.hashCode();\n+        }\n+        return result * 37 + versionNum;\n","filename":"src\/java.security.jgss\/share\/classes\/javax\/security\/auth\/kerberos\/KerberosKey.java","additions":10,"deletions":2,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,0 +47,1 @@\n+        int hashCode = TestCertificate.ROOT_CA.certificate().getPublicKey().hashCode();\n@@ -48,2 +49,2 @@\n-                TestCertificate.ROOT_CA.certificate().getPublicKey().hashCode() +\n-                \", \" + TestCertificate.ROOT_CA.certId);\n+                Integer.toUnsignedLong(hashCode) + \", \" +\n+                TestCertificate.ROOT_CA.certId);\n","filename":"test\/jdk\/jdk\/security\/logging\/TestX509ValidationLog.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"}]}