{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,0 +32,1 @@\n+import java.util.Arrays;\n@@ -111,0 +112,1 @@\n+    @Override\n@@ -112,5 +114,1 @@\n-        int retval = 0;\n-        for (int i = 1; i < this.key.length; i++) {\n-            retval += this.key[i] * i;\n-        }\n-        return(retval ^= \"des\".hashCode());\n+        return Arrays.hashCode(this.key) ^ \"des\".hashCode();\n@@ -119,0 +117,1 @@\n+    @Override\n@@ -123,1 +122,1 @@\n-        if (!(obj instanceof SecretKey))\n+        if (!(obj instanceof SecretKey that))\n@@ -126,1 +125,1 @@\n-        String thatAlg = ((SecretKey)obj).getAlgorithm();\n+        String thatAlg = that.getAlgorithm();\n@@ -130,1 +129,1 @@\n-        byte[] thatKey = ((SecretKey)obj).getEncoded();\n+        byte[] thatKey = that.getEncoded();\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/DESKey.java","additions":8,"deletions":9,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,0 +32,1 @@\n+import java.util.Arrays;\n@@ -110,0 +111,1 @@\n+    @Override\n@@ -111,5 +113,1 @@\n-        int retval = 0;\n-        for (int i = 1; i < this.key.length; i++) {\n-            retval += this.key[i] * i;\n-        }\n-        return(retval ^= \"desede\".hashCode());\n+        return Arrays.hashCode(this.key) ^ \"desede\".hashCode();\n@@ -118,0 +116,1 @@\n+    @Override\n@@ -122,1 +121,1 @@\n-        if (!(obj instanceof SecretKey))\n+        if (!(obj instanceof SecretKey that))\n@@ -125,1 +124,1 @@\n-        String thatAlg = ((SecretKey)obj).getAlgorithm();\n+        String thatAlg = that.getAlgorithm();\n@@ -130,1 +129,1 @@\n-        byte[] thatKey = ((SecretKey)obj).getEncoded();\n+        byte[] thatKey = that.getEncoded();\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/DESedeKey.java","additions":8,"deletions":9,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -290,0 +290,1 @@\n+    @Override\n@@ -294,0 +295,1 @@\n+    @Override\n@@ -297,1 +299,1 @@\n-        if (!(obj instanceof javax.crypto.interfaces.DHPrivateKey)) {\n+        if (!(obj instanceof javax.crypto.interfaces.DHPrivateKey other)) {\n@@ -300,2 +302,0 @@\n-        javax.crypto.interfaces.DHPrivateKey other =\n-                (javax.crypto.interfaces.DHPrivateKey) obj;\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/DHPrivateKey.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -282,0 +282,1 @@\n+    @Override\n@@ -286,0 +287,1 @@\n+    @Override\n@@ -289,1 +291,1 @@\n-        if (!(obj instanceof javax.crypto.interfaces.DHPublicKey)) {\n+        if (!(obj instanceof javax.crypto.interfaces.DHPublicKey other)) {\n@@ -293,2 +295,0 @@\n-        javax.crypto.interfaces.DHPublicKey other =\n-            (javax.crypto.interfaces.DHPublicKey) obj;\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/DHPublicKey.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -108,0 +108,1 @@\n+    @Override\n@@ -109,5 +110,2 @@\n-        int retval = 0;\n-        for (int i = 1; i < this.key.length; i++) {\n-            retval += this.key[i] * i;\n-        }\n-        return(retval ^= getAlgorithm().toLowerCase(Locale.ENGLISH).hashCode());\n+        return Arrays.hashCode(this.key)\n+                ^ getAlgorithm().toLowerCase(Locale.ENGLISH).hashCode();\n@@ -116,0 +114,1 @@\n+    @Override\n@@ -120,1 +119,1 @@\n-        if (!(obj instanceof SecretKey))\n+        if (!(obj instanceof SecretKey that))\n@@ -123,2 +122,0 @@\n-        SecretKey that = (SecretKey)obj;\n-\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/PBEKey.java","additions":6,"deletions":9,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -168,1 +168,1 @@\n-                    if (this.getClass() != obj.getClass()) return false;\n+                    if (obj == null || this.getClass() != obj.getClass()) return false;\n@@ -250,0 +250,1 @@\n+    @Override\n@@ -252,6 +253,2 @@\n-            int retval = 0;\n-            for (int i = 1; i < this.key.length; i++) {\n-                retval += this.key[i] * i;\n-            }\n-            return (retval ^= getAlgorithm().toLowerCase\n-                    (Locale.ENGLISH).hashCode());\n+            return Arrays.hashCode(this.key)\n+                    ^ getAlgorithm().toLowerCase(Locale.ENGLISH).hashCode();\n@@ -264,0 +261,1 @@\n+    @Override\n@@ -270,1 +268,1 @@\n-            if (!(obj instanceof SecretKey)) {\n+            if (!(obj instanceof SecretKey that)) {\n@@ -274,2 +272,0 @@\n-            SecretKey that = (SecretKey) obj;\n-\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/PBKDF2KeyImpl.java","additions":6,"deletions":10,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -767,0 +767,1 @@\n+    @Override\n@@ -943,5 +944,3 @@\n-     * Returns the hash code value for this context. The hash code\n-     * is computed by exclusive or-ing the hash code of all the protection\n-     * domains in the context together.\n-     *\n-     * @return a hash code value for this context.\n+     * {@return the hash code value for this context}\n+     * The hash code is computed by exclusive or-ing the hash code of all the\n+     * protection domains in the context together.\n@@ -949,1 +948,1 @@\n-\n+    @Override\n@@ -956,3 +955,3 @@\n-        for (int i =0; i < context.length; i++) {\n-            if (context[i] != null)\n-                hashCode ^= context[i].hashCode();\n+        for (ProtectionDomain protectionDomain : context) {\n+            if (protectionDomain != null)\n+                hashCode ^= protectionDomain.hashCode();\n","filename":"src\/java.base\/share\/classes\/java\/security\/AccessControlContext.java","additions":9,"deletions":10,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -101,0 +101,1 @@\n+    @Override\n@@ -106,3 +107,1 @@\n-     * Returns the hash code value for this object.\n-     *\n-     * @return a hash code value for this object.\n+     * {@return the hash code value for this object}\n@@ -110,1 +109,1 @@\n-\n+    @Override\n","filename":"src\/java.base\/share\/classes\/java\/security\/AllPermission.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -220,1 +220,1 @@\n-     * Returns the hash code value for this object.\n+     * {@return the hash code value for this object}\n@@ -224,2 +224,0 @@\n-     *\n-     * @return a hash code value for this object.\n","filename":"src\/java.base\/share\/classes\/java\/security\/BasicPermission.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,0 +30,1 @@\n+import java.util.Objects;\n@@ -101,1 +102,1 @@\n-     * Returns the hash code value for this code signer.\n+     * {@return the hash code value for this code signer}\n@@ -104,2 +105,0 @@\n-     *\n-     * @return a hash code value for this code signer.\n@@ -107,0 +106,1 @@\n+    @Override\n@@ -109,5 +109,1 @@\n-            if (timestamp == null) {\n-                myhash = signerCertPath.hashCode();\n-            } else {\n-                myhash = signerCertPath.hashCode() + timestamp.hashCode();\n-            }\n+            myhash = signerCertPath.hashCode() + Objects.hashCode(timestamp);\n@@ -129,0 +125,1 @@\n+    @Override\n@@ -130,5 +127,1 @@\n-        if ((!(obj instanceof CodeSigner that))) {\n-            return false;\n-        }\n-\n-        if (this == that) {\n+        if (this == obj) {\n@@ -137,11 +130,4 @@\n-        Timestamp thatTimestamp = that.getTimestamp();\n-        if (timestamp == null) {\n-            if (thatTimestamp != null) {\n-                return false;\n-            }\n-        } else {\n-            if ((!timestamp.equals(thatTimestamp))) {\n-                return false;\n-            }\n-        }\n-        return signerCertPath.equals(that.getSignerCertPath());\n+\n+        return obj instanceof CodeSigner other\n+                && Objects.equals(timestamp, other.getTimestamp())\n+                && signerCertPath.equals(other.getSignerCertPath());\n","filename":"src\/java.base\/share\/classes\/java\/security\/CodeSigner.java","additions":11,"deletions":25,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -133,3 +133,1 @@\n-     * Returns the hash code value for this object.\n-     *\n-     * @return a hash code value for this object.\n+     * {@return the hash code value for this object}\n@@ -139,4 +137,1 @@\n-        if (location != null)\n-            return location.hashCode();\n-        else\n-            return 0;\n+        return Objects.hashCode(location);\n","filename":"src\/java.base\/share\/classes\/java\/security\/CodeSource.java","additions":3,"deletions":8,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -339,0 +339,1 @@\n+    @Override\n@@ -481,3 +482,1 @@\n-     * Returns a hashcode for this {@code Identity}.\n-     *\n-     * @return a hashcode for this {@code Identity}.\n+     * {@return the hashcode for this {@code Identity}}\n@@ -485,0 +484,1 @@\n+    @Override\n","filename":"src\/java.base\/share\/classes\/java\/security\/Identity.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -199,4 +199,2 @@\n-        if (!(obj instanceof PKCS12Attribute)) {\n-            return false;\n-        }\n-        return Arrays.equals(encoded, ((PKCS12Attribute) obj).encoded);\n+        return obj instanceof PKCS12Attribute other\n+                && Arrays.equals(encoded, other.encoded);\n@@ -206,1 +204,1 @@\n-     * Returns the hashcode for this {@code PKCS12Attribute}.\n+     * {@return the hashcode for this {@code PKCS12Attribute}}\n@@ -208,2 +206,0 @@\n-     *\n-     * @return the hash code\n","filename":"src\/java.base\/share\/classes\/java\/security\/PKCS12Attribute.java","additions":4,"deletions":8,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -141,1 +141,1 @@\n-\n+    @Override\n@@ -164,1 +164,1 @@\n-\n+    @Override\n","filename":"src\/java.base\/share\/classes\/java\/security\/Permission.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,0 +53,1 @@\n+    @Override\n@@ -63,3 +64,1 @@\n-     * Returns a hashcode for this {@code Principal}.\n-     *\n-     * @return a hashcode for this {@code Principal}.\n+     * {@return a hashcode for this {@code Principal}}\n@@ -67,0 +66,1 @@\n+    @Override\n","filename":"src\/java.base\/share\/classes\/java\/security\/Principal.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -243,2 +243,1 @@\n-            String locationNoFrag = cs.getLocationNoFragString();\n-            return locationNoFrag != null ? locationNoFrag.hashCode() : 0;\n+            return Objects.hashCode(cs.getLocationNoFragString());\n","filename":"src\/java.base\/share\/classes\/java\/security\/SecureClassLoader.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,0 +38,1 @@\n+import java.util.Objects;\n@@ -352,5 +353,1 @@\n-        if (this.name == null) {\n-            if (that.name != null) {\n-                return false;\n-            }\n-        } else if (!this.name.equals(that.name)) {\n+        if (!Objects.equals(this.name, that.name)) {\n@@ -361,8 +358,2 @@\n-        if (this.actions == null) {\n-            if (that.actions != null) {\n-                return false;\n-            }\n-        } else {\n-            if (!this.actions.equals(that.actions)) {\n-                return false;\n-            }\n+        if (!Objects.equals(this.actions, that.actions)) {\n+            return false;\n@@ -407,3 +398,1 @@\n-     * Returns the hash code value for this object.\n-     *\n-     * @return a hash code value for this object.\n+     * {@return the hash code value for this object}\n@@ -413,6 +402,1 @@\n-        int hash = type.hashCode();\n-        if (name != null)\n-            hash ^= name.hashCode();\n-        if (actions != null)\n-            hash ^= actions.hashCode();\n-        return hash;\n+        return Objects.hash(type, name, actions);\n","filename":"src\/java.base\/share\/classes\/java\/security\/UnresolvedPermission.java","additions":7,"deletions":23,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -180,0 +180,1 @@\n+    @Override\n@@ -185,1 +186,1 @@\n-                && that.getType().equals(this.type)\n+                && this.type.equals(that.getType())\n@@ -190,3 +191,3 @@\n-     * Returns the hashcode for this certification path. The hash code of\n-     * a certification path is defined to be the result of the following\n-     * calculation:\n+     * {@return the hashcode value for this certification path}\n+     * The hash code of a certification path is defined to be the result of\n+     * the following calculation:\n@@ -201,2 +202,0 @@\n-     *\n-     * @return the hashcode value for this certification path\n@@ -204,0 +203,1 @@\n+    @Override\n","filename":"src\/java.base\/share\/classes\/java\/security\/cert\/CertPath.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -107,0 +107,1 @@\n+    @Override\n@@ -125,4 +126,2 @@\n-     * Returns a hashcode value for this certificate from its\n-     * encoded form.\n-     *\n-     * @return the hashcode value.\n+     * {@return the hashcode value for this certificate from its\n+     * encoded form}\n@@ -130,0 +129,1 @@\n+    @Override\n","filename":"src\/java.base\/share\/classes\/java\/security\/cert\/Certificate.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -103,1 +103,1 @@\n-     * Returns a hash code value for this parameters object.\n+     * {@return a hash code value for this parameters object}\n@@ -105,2 +105,0 @@\n-     *\n-     * @return a hash code value for this parameters object.\n","filename":"src\/java.base\/share\/classes\/java\/security\/cert\/URICertStoreParameters.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -130,0 +130,1 @@\n+    @Override\n@@ -148,4 +149,2 @@\n-     * Returns a hashcode value for this CRL from its\n-     * encoded form.\n-     *\n-     * @return the hashcode value.\n+     * {@return a hashcode value for this CRL from its\n+     * encoded form}\n@@ -153,0 +152,1 @@\n+    @Override\n@@ -157,4 +157,1 @@\n-            for (int i = 1; i < crlData.length; i++) {\n-                 retval += crlData[i] * i;\n-            }\n-            return retval;\n+            return Arrays.hashCode(crlData);\n","filename":"src\/java.base\/share\/classes\/java\/security\/cert\/X509CRL.java","additions":6,"deletions":9,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,1 @@\n+import java.util.Arrays;\n@@ -86,0 +87,1 @@\n+    @Override\n@@ -95,5 +97,1 @@\n-            if (thisCRLEntry.length != otherCRLEntry.length)\n-                return false;\n-            for (int i = 0; i < thisCRLEntry.length; i++)\n-                 if (thisCRLEntry[i] != otherCRLEntry[i])\n-                     return false;\n+            return Arrays.equals(thisCRLEntry, otherCRLEntry);\n@@ -103,1 +101,0 @@\n-        return true;\n@@ -107,4 +104,2 @@\n-     * Returns a hashcode value for this CRL entry from its\n-     * encoded form.\n-     *\n-     * @return the hashcode value.\n+     * {@return the hashcode value for this CRL entry from its\n+     * encoded form}\n@@ -112,0 +107,1 @@\n+    @Override\n@@ -113,1 +109,0 @@\n-        int     retval = 0;\n@@ -115,4 +110,1 @@\n-            byte[] entryData = this.getEncoded();\n-            for (int i = 1; i < entryData.length; i++)\n-                 retval += entryData[i] * i;\n-\n+            return Arrays.hashCode(this.getEncoded());\n@@ -120,1 +112,1 @@\n-            return(retval);\n+            return 0;\n@@ -122,1 +114,0 @@\n-        return(retval);\n","filename":"src\/java.base\/share\/classes\/java\/security\/cert\/X509CRLEntry.java","additions":9,"deletions":18,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,1 @@\n+import java.util.Objects;\n@@ -218,0 +219,1 @@\n+    @Override\n@@ -229,3 +231,1 @@\n-     * Returns a hash code value for this characteristic 2\n-     * finite field.\n-     * @return a hash code value.\n+     * {@return the hash code value for this characteristic 2 finite field}\n@@ -233,0 +233,1 @@\n+    @Override\n@@ -234,2 +235,0 @@\n-        int value = m << 5;\n-        value += (rp==null? 0:rp.hashCode());\n@@ -238,1 +237,1 @@\n-        return value;\n+        return m << 5 + Objects.hashCode(rp);\n","filename":"src\/java.base\/share\/classes\/java\/security\/spec\/ECFieldF2m.java","additions":6,"deletions":7,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -82,0 +82,1 @@\n+    @Override\n@@ -90,2 +91,1 @@\n-     * Returns a hash code value for this prime finite field.\n-     * @return a hash code value.\n+     * {@return a hash code value for this prime finite field}\n@@ -93,0 +93,1 @@\n+    @Override\n","filename":"src\/java.base\/share\/classes\/java\/security\/spec\/ECFieldFp.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -96,0 +96,1 @@\n+    @Override\n@@ -106,2 +107,1 @@\n-     * Returns a hash code value for this elliptic curve point.\n-     * @return a hash code value.\n+     * {@return the hash code value for this elliptic curve point}\n@@ -109,0 +109,1 @@\n+    @Override\n","filename":"src\/java.base\/share\/classes\/java\/security\/spec\/ECPoint.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -79,0 +79,1 @@\n+    @Override\n@@ -84,4 +85,1 @@\n-     *\n-     * Returns the hash code value for this object.\n-     *\n-     * @return a hash code value for this object.\n+     * {@return the hash code value for this object}\n@@ -89,0 +87,1 @@\n+    @Override\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/CryptoAllPermission.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,0 +33,1 @@\n+import java.util.Objects;\n@@ -255,0 +256,1 @@\n+    @Override\n@@ -269,4 +271,2 @@\n-        return (equalObjects(this.exemptionMechanism,\n-                             that.exemptionMechanism) &&\n-                equalObjects(this.algParamSpec,\n-                             that.algParamSpec));\n+        return Objects.equals(this.exemptionMechanism, that.exemptionMechanism)\n+                && Objects.equals(this.algParamSpec, that.algParamSpec);\n@@ -276,3 +276,1 @@\n-     * Returns the hash code value for this object.\n-     *\n-     * @return a hash code value for this object.\n+     * {@return the hash code value for this object}\n@@ -280,1 +278,1 @@\n-\n+    @Override\n@@ -282,10 +280,5 @@\n-        int retval = alg.hashCode();\n-        retval ^= maxKeySize;\n-        if (exemptionMechanism != null) {\n-            retval ^= exemptionMechanism.hashCode();\n-        }\n-        if (checkParam) retval ^= 100;\n-        if (algParamSpec != null) {\n-            retval ^= algParamSpec.hashCode();\n-        }\n-        return retval;\n+        return alg.hashCode()\n+                ^ maxKeySize\n+                ^ Objects.hashCode(exemptionMechanism)\n+                ^ (checkParam ? 100 : 0)\n+                ^ Objects.hashCode(algParamSpec);\n@@ -440,8 +433,0 @@\n-\n-    private boolean equalObjects(Object obj1, Object obj2) {\n-        if (obj1 == null) {\n-            return (obj2 == null);\n-        }\n-\n-        return obj1.equals(obj2);\n-    }\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/CryptoPermission.java","additions":12,"deletions":27,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,0 +32,1 @@\n+import java.util.Objects;\n@@ -619,0 +620,1 @@\n+        @Override\n@@ -620,11 +622,6 @@\n-            int retval = cryptoPermission.hashCode();\n-            if (alg != null) retval ^= alg.hashCode();\n-            if (exemptionMechanism != null) {\n-                retval ^= exemptionMechanism.hashCode();\n-            }\n-            retval ^= maxKeySize;\n-            if (checkParam) retval ^= 100;\n-            if (algParamSpec != null) {\n-                retval ^= algParamSpec.hashCode();\n-            }\n-            return retval;\n+            return cryptoPermission.hashCode()\n+                    ^ Objects.hashCode(alg)\n+                    ^ Objects.hashCode(exemptionMechanism)\n+                    ^ maxKeySize\n+                    ^ (checkParam ? 100 : 0)\n+                    ^ Objects.hashCode(algParamSpec);\n@@ -633,0 +630,1 @@\n+        @Override\n@@ -640,6 +638,2 @@\n-            if (this.cryptoPermission == null) {\n-                if (that.cryptoPermission != null) return false;\n-            } else {\n-                if (!this.cryptoPermission.equals(\n-                                                 that.cryptoPermission))\n-                    return false;\n+            if (!Objects.equals(this.cryptoPermission, that.cryptoPermission)) {\n+                return false;\n@@ -655,1 +649,1 @@\n-            if (!(this.maxKeySize == that.maxKeySize)) return false;\n+            if (this.maxKeySize != that.maxKeySize) return false;\n@@ -659,5 +653,1 @@\n-            if (this.algParamSpec == null) {\n-                return that.algParamSpec == null;\n-            } else {\n-                return this.algParamSpec.equals(that.algParamSpec);\n-            }\n+            return Objects.equals(this.algParamSpec, that.algParamSpec);\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/CryptoPolicyParser.java","additions":14,"deletions":24,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,1 @@\n+import java.util.Arrays;\n@@ -134,0 +135,1 @@\n+    @Override\n@@ -143,1 +145,1 @@\n-                java.util.Arrays.equals(iv, other.iv));\n+                Arrays.equals(iv, other.iv));\n@@ -150,0 +152,1 @@\n+    @Override\n@@ -151,7 +154,1 @@\n-        int retval = 0;\n-        if (iv != null) {\n-            for (int i = 1; i < iv.length; i++) {\n-                retval += iv[i] * i;\n-            }\n-        }\n-        return retval + effectiveKeyBits;\n+        return Arrays.hashCode(iv) + effectiveKeyBits;\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/spec\/RC2ParameterSpec.java","additions":6,"deletions":9,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,1 @@\n+import java.util.Arrays;\n@@ -179,0 +180,1 @@\n+    @Override\n@@ -190,1 +192,1 @@\n-                java.util.Arrays.equals(iv, other.iv));\n+                Arrays.equals(iv, other.iv));\n@@ -197,0 +199,1 @@\n+    @Override\n@@ -198,8 +201,1 @@\n-        int retval = 0;\n-        if (iv != null) {\n-            for (int i = 1; i < iv.length; i++) {\n-                retval += iv[i] * i;\n-            }\n-        }\n-        retval += (version + rounds + wordSize);\n-        return retval;\n+        return Arrays.hashCode(iv) + version + rounds + wordSize;\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/spec\/RC5ParameterSpec.java","additions":6,"deletions":10,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -201,0 +201,1 @@\n+    @Override\n@@ -202,4 +203,1 @@\n-        int retval = 0;\n-        for (int i = 1; i < this.key.length; i++) {\n-            retval += this.key[i] * i;\n-        }\n+        int retval = Arrays.hashCode(key);\n@@ -223,0 +221,1 @@\n+    @Override\n@@ -227,1 +226,1 @@\n-        if (!(obj instanceof SecretKey))\n+        if (!(obj instanceof SecretKey that))\n@@ -230,1 +229,1 @@\n-        String thatAlg = ((SecretKey)obj).getAlgorithm();\n+        String thatAlg = that.getAlgorithm();\n@@ -239,1 +238,1 @@\n-        byte[] thatKey = ((SecretKey)obj).getEncoded();\n+        byte[] thatKey = that.getEncoded();\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/spec\/SecretKeySpec.java","additions":7,"deletions":8,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -263,0 +263,1 @@\n+    @Override\n@@ -274,3 +275,1 @@\n-     * Returns the hash code value for this object.\n-     *\n-     * @return a hash code value for this object.\n+     * {@return the hash code value for this object}\n@@ -278,0 +277,1 @@\n+    @Override\n","filename":"src\/java.base\/share\/classes\/javax\/security\/auth\/PrivateCredentialPermission.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -910,4 +910,0 @@\n-        if (o == null) {\n-            return false;\n-        }\n-\n@@ -1006,3 +1002,1 @@\n-     * Returns a hashcode for this {@code Subject}.\n-     *\n-     * @return a hashcode for this {@code Subject}.\n+     * {@return a hashcode for this {@code Subject}}\n@@ -1489,0 +1483,1 @@\n+        @Override\n@@ -1510,0 +1505,1 @@\n+        @Override\n@@ -1512,6 +1508,2 @@\n-            Iterator<E> i = iterator();\n-            while (i.hasNext()) {\n-                E obj = i.next();\n-                if (obj != null) {\n-                    h += obj.hashCode();\n-                }\n+            for (E obj : this) {\n+                h += Objects.hashCode(obj);\n","filename":"src\/java.base\/share\/classes\/javax\/security\/auth\/Subject.java","additions":6,"deletions":14,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -460,0 +460,1 @@\n+    @Override\n@@ -471,1 +472,1 @@\n-     * Return a hash code for this {@code X500Principal}.\n+     * {@return a hash code for this {@code X500Principal}}\n@@ -475,2 +476,0 @@\n-     *\n-     * @return a hash code for this {@code X500Principal}\n@@ -478,0 +477,1 @@\n+    @Override\n","filename":"src\/java.base\/share\/classes\/javax\/security\/auth\/x500\/X500Principal.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,0 +34,1 @@\n+import java.util.Arrays;\n@@ -75,1 +76,1 @@\n-     * object. If the {@code other} object is an\n+     * object. If the {@code obj} object is an\n@@ -80,1 +81,1 @@\n-     * @param other the object to test for equality with this certificate.\n+     * @param obj the object to test for equality with this certificate.\n@@ -84,2 +85,3 @@\n-    public boolean equals(Object other) {\n-        if (this == other)\n+    @Override\n+    public boolean equals(Object obj) {\n+        if (this == obj)\n@@ -87,1 +89,1 @@\n-        if (!(other instanceof Certificate))\n+        if (!(obj instanceof Certificate other))\n@@ -90,9 +92,1 @@\n-            byte[] thisCert = this.getEncoded();\n-            byte[] otherCert = ((Certificate)other).getEncoded();\n-\n-            if (thisCert.length != otherCert.length)\n-                return false;\n-            for (int i = 0; i < thisCert.length; i++)\n-                 if (thisCert[i] != otherCert[i])\n-                     return false;\n-            return true;\n+            return Arrays.equals(this.getEncoded(), other.getEncoded());\n@@ -105,4 +99,2 @@\n-     * Returns a hashcode value for this certificate from its\n-     * encoded form.\n-     *\n-     * @return the hashcode value.\n+     * {@return a hashcode value for this certificate from\n+     * its encoded form}\n@@ -110,0 +102,1 @@\n+    @Override\n@@ -111,1 +104,0 @@\n-        int     retval = 0;\n@@ -113,5 +105,1 @@\n-            byte[] certData = this.getEncoded();\n-            for (int i = 1; i < certData.length; i++) {\n-                 retval += certData[i] * i;\n-            }\n-            return (retval);\n+            return Arrays.hashCode(this.getEncoded());\n@@ -119,1 +107,1 @@\n-            return (retval);\n+            return 0;\n","filename":"src\/java.base\/share\/classes\/javax\/security\/cert\/Certificate.java","additions":14,"deletions":26,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -135,0 +135,1 @@\n+    @Override\n@@ -147,0 +148,1 @@\n+    @Override\n@@ -148,1 +150,1 @@\n-        return provName.hashCode() + argument.hashCode();\n+        return Objects.hash(provName, argument);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/jca\/ProviderConfig.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,2 @@\n+import java.util.Arrays;\n+\n@@ -137,2 +139,3 @@\n-    public boolean equals(Object other) {\n-        if (this == other)\n+    @Override\n+    public boolean equals(Object obj) {\n+        if (this == obj) {\n@@ -140,12 +143,3 @@\n-        if (!(other instanceof EncryptedPrivateKeyInfo))\n-            return false;\n-        byte[] thisEncrInfo = this.getEncoded();\n-        byte[] otherEncrInfo\n-                = ((EncryptedPrivateKeyInfo) other).getEncoded();\n-\n-        if (thisEncrInfo.length != otherEncrInfo.length)\n-            return false;\n-        for (int i = 0; i < thisEncrInfo.length; i++)\n-            if (thisEncrInfo[i] != otherEncrInfo[i])\n-                return false;\n-        return true;\n+        }\n+        return obj instanceof EncryptedPrivateKeyInfo other\n+                && Arrays.equals(this.getEncoded(), other.getEncoded());\n@@ -155,3 +149,1 @@\n-     * Returns a hashcode for this EncryptedPrivateKeyInfo.\n-     *\n-     * @return a hashcode for this EncryptedPrivateKeyInfo.\n+     * {@return a hashcode for this EncryptedPrivateKeyInfo}\n@@ -159,0 +151,1 @@\n+    @Override\n@@ -160,5 +153,1 @@\n-        int retval = 0;\n-\n-        for (int i = 0; i < this.encryptedData.length; i++)\n-            retval += this.encryptedData[i] * i;\n-        return retval;\n+        return Arrays.hashCode(encryptedData);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/pkcs\/EncryptedPrivateKeyInfo.java","additions":12,"deletions":23,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -262,0 +262,1 @@\n+    @Override\n@@ -291,0 +292,1 @@\n+    @Override\n","filename":"src\/java.base\/share\/classes\/sun\/security\/pkcs\/PKCS8Key.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,0 +35,1 @@\n+import java.util.Arrays;\n@@ -327,1 +328,1 @@\n-     * object. If the <code>other<\/code> object is an\n+     * object. If the <code>obj<\/code> object is an\n@@ -332,1 +333,1 @@\n-     * @param other the object to test for equality with this object.\n+     * @param obj the object to test for equality with this object.\n@@ -336,2 +337,3 @@\n-    public boolean equals(Object other) {\n-        if (this == other)\n+    @Override\n+    public boolean equals(Object obj) {\n+        if (this == obj)\n@@ -339,1 +341,1 @@\n-        if (!(other instanceof PKCS10))\n+        if (!(obj instanceof PKCS10 other))\n@@ -343,1 +345,1 @@\n-        byte[] otherEncoded = ((PKCS10)other).getEncoded();\n+        byte[] otherEncoded = other.getEncoded();\n@@ -347,1 +349,1 @@\n-        return java.util.Arrays.equals(encoded, otherEncoded);\n+        return Arrays.equals(encoded, otherEncoded);\n@@ -351,4 +353,2 @@\n-     * Returns a hashcode value for this certificate request from its\n-     * encoded form.\n-     *\n-     * @return the hashcode value.\n+     * {@return the hashcode value for this certificate request from its\n+     * encoded form}\n@@ -356,0 +356,1 @@\n+    @Override\n@@ -357,5 +358,1 @@\n-        int     retval = 0;\n-        if (encoded != null)\n-            for (int i = 1; i < encoded.length; i++)\n-             retval += encoded[i] * i;\n-        return(retval);\n+        return Arrays.hashCode(encoded);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/pkcs10\/PKCS10.java","additions":14,"deletions":17,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -156,0 +156,1 @@\n+    @Override\n@@ -169,1 +170,1 @@\n-        PKCS10Attribute thisAttr, otherAttr;\n+        PKCS10Attribute thisAttr;\n@@ -171,2 +172,1 @@\n-        for (int i=0; i < len; i++) {\n-            otherAttr = attrs[i];\n+        for (PKCS10Attribute otherAttr : attrs) {\n@@ -178,1 +178,1 @@\n-            if (! thisAttr.equals(otherAttr))\n+            if (!thisAttr.equals(otherAttr))\n@@ -185,3 +185,1 @@\n-     * Returns a hashcode value for this PKCS10Attributes.\n-     *\n-     * @return the hashcode value.\n+     * {@return the hashcode value for this PKCS10Attributes}\n@@ -189,0 +187,1 @@\n+    @Override\n","filename":"src\/java.base\/share\/classes\/sun\/security\/pkcs10\/PKCS10Attributes.java","additions":7,"deletions":8,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -2132,3 +2132,1 @@\n-         * Returns the hash code value for this object.\n-         *\n-         * @return a hash code value for this object.\n+         * {@return the hash code value for this object}\n@@ -2137,6 +2135,2 @@\n-            int hash = type.hashCode();\n-            if (name != null)\n-                hash ^= name.hashCode();\n-            if (actions != null)\n-                hash ^= actions.hashCode();\n-            return hash;\n+            return type.hashCode() ^ Objects.hashCode(name)\n+                    ^ Objects.hashCode(actions);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/PolicyFile.java","additions":4,"deletions":10,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -1061,3 +1061,1 @@\n-         * Return a hashcode for this PrincipalEntry.\n-         *\n-         * @return a hashcode for this PrincipalEntry\n+         * {@return a hashcode for this PrincipalEntry}\n@@ -1122,4 +1120,1 @@\n-            int retval = permission.hashCode();\n-            if (name != null) retval ^= name.hashCode();\n-            if (action != null) retval ^= action.hashCode();\n-            return retval;\n+            return Objects.hash(permission, name, action);\n@@ -1133,26 +1128,5 @@\n-            if (! (obj instanceof PermissionEntry that))\n-                return false;\n-\n-            if (this.permission == null) {\n-                if (that.permission != null) return false;\n-            } else {\n-                if (!this.permission.equals(that.permission)) return false;\n-            }\n-\n-            if (this.name == null) {\n-                if (that.name != null) return false;\n-            } else {\n-                if (!this.name.equals(that.name)) return false;\n-            }\n-\n-            if (this.action == null) {\n-                if (that.action != null) return false;\n-            } else {\n-                if (!this.action.equals(that.action)) return false;\n-            }\n-\n-            if (this.signedBy == null) {\n-                return that.signedBy == null;\n-            } else {\n-                return this.signedBy.equals(that.signedBy);\n-            }\n+            return obj instanceof PermissionEntry that\n+                    && Objects.equals(this.permission, that.permission)\n+                    && Objects.equals(this.name, that.name)\n+                    && Objects.equals(this.action, that.action)\n+                    && Objects.equals(this.signedBy, that.signedBy);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/PolicyParser.java","additions":8,"deletions":34,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -175,3 +175,1 @@\n-     * Returns a hashcode value for this CertId.\n-     *\n-     * @return the hashcode value.\n+     * {@return a hashcode value for this CertId}\n@@ -182,6 +180,2 @@\n-            for (int i = 0; i < issuerNameHash.length; i++) {\n-                myhash += issuerNameHash[i] * i;\n-            }\n-            for (int i = 0; i < issuerKeyHash.length; i++) {\n-                myhash += issuerKeyHash[i] * i;\n-            }\n+            myhash += Arrays.hashCode(issuerNameHash);\n+            myhash += Arrays.hashCode(issuerKeyHash);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/certpath\/CertId.java","additions":4,"deletions":10,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -229,4 +229,0 @@\n-        if (obj == null) {\n-            return false;\n-        }\n-\n@@ -237,5 +233,2 @@\n-        if (obj instanceof ResponderId respObj) {\n-            return Arrays.equals(encodedRid, respObj.getEncoded());\n-        }\n-\n-        return false;\n+        return obj instanceof ResponderId respObj\n+                && Arrays.equals(encodedRid, respObj.getEncoded());\n@@ -245,3 +238,1 @@\n-     * Returns the hash code value for this {@code ResponderId}\n-     *\n-     * @return the hash code value for this {@code ResponderId}\n+     * {@return the hash code value for this {@code ResponderId}}\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/certpath\/ResponderId.java","additions":3,"deletions":12,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -988,1 +988,1 @@\n-     * Returns the hashcode for this session\n+     * {@return the hashcode for this session}\n@@ -1005,6 +1005,3 @@\n-        if (obj instanceof SSLSessionImpl sess) {\n-            return (sessionId != null) && (sessionId.equals(\n-                        sess.getSessionId()));\n-        }\n-\n-        return false;\n+        return obj instanceof SSLSessionImpl other\n+                && sessionId != null\n+                && sessionId.equals(other.getSessionId());\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SSLSessionImpl.java","additions":4,"deletions":7,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -5318,1 +5318,2 @@\n-    public boolean equals(Object other) {\n+    @Override\n+    public boolean equals(Object obj) {\n@@ -5320,3 +5321,3 @@\n-            other instanceof Pair &&\n-            Objects.equals(fst, ((Pair)other).fst) &&\n-            Objects.equals(snd, ((Pair)other).snd);\n+            obj instanceof Pair<?, ?> other &&\n+            Objects.equals(fst, other.fst) &&\n+            Objects.equals(snd, other.snd);\n@@ -5325,0 +5326,1 @@\n+    @Override\n","filename":"src\/java.base\/share\/classes\/sun\/security\/tools\/keytool\/Main.java","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,1 @@\n+import java.util.Arrays;\n@@ -71,1 +72,1 @@\n-     * a value for every bit of the BitArray. i.e. {@code 8*a.length <= length}.\n+     * a value for every bit of the BitArray, i.e. {@code 8*a.length >= length}.\n@@ -82,1 +83,1 @@\n-     * the BitArray, i.e. {@code 8*(a.length - ofs) <= length}.\n+     * the BitArray, i.e. {@code 8*(a.length - ofs) >= length}.\n@@ -180,0 +181,1 @@\n+    @Override\n@@ -182,1 +184,0 @@\n-        if (!(obj instanceof BitArray ba)) return false;\n@@ -184,6 +185,3 @@\n-        if (ba.length != length) return false;\n-\n-        for (int i = 0; i < repn.length; i += 1) {\n-            if (repn[i] != ba.repn[i]) return false;\n-        }\n-        return true;\n+        return obj instanceof BitArray other\n+                && length == other.length\n+                && Arrays.equals(repn, other.repn);\n@@ -205,3 +203,1 @@\n-     * Returns a hash code value for this bit array.\n-     *\n-     * @return  a hash code value for this bit array.\n+     * {@return a hash code value for this bit array}\n@@ -209,0 +205,1 @@\n+    @Override\n@@ -210,6 +207,1 @@\n-        int hashCode = 0;\n-\n-        for (int i = 0; i < repn.length; i++)\n-            hashCode = 31*hashCode + repn[i];\n-\n-        return hashCode ^ length;\n+        return Arrays.hashCode(repn) ^ length;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/BitArray.java","additions":11,"deletions":19,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -1264,3 +1264,1 @@\n-     * Returns a hashcode for this DerValue.\n-     *\n-     * @return a hashcode for this DerValue.\n+     * {@return a hashcode for this DerValue}\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/DerValue.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -599,0 +599,1 @@\n+    @Override\n@@ -611,3 +612,1 @@\n-     * Returns a hashcode for this AVA.\n-     *\n-     * @return a hashcode for this AVA.\n+     * {@return a hashcode for this AVA}\n@@ -615,0 +614,1 @@\n+    @Override\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/AVA.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -342,3 +342,1 @@\n-     * Returns a hashcode for this AlgorithmId.\n-     *\n-     * @return a hashcode for this AlgorithmId.\n+     * {@return a hashcode for this AlgorithmId}\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/AlgorithmId.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -221,0 +221,1 @@\n+    @Override\n@@ -245,3 +246,1 @@\n-     * Returns a hashcode value for this CRLExtensions.\n-     *\n-     * @return the hashcode value.\n+     * {@return a hashcode value for this CRLExtensions}\n@@ -249,0 +248,1 @@\n+    @Override\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/CRLExtensions.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -250,0 +250,1 @@\n+    @Override\n@@ -275,3 +276,1 @@\n-     * Returns a hashcode value for this CertificateExtensions.\n-     *\n-     * @return the hashcode value.\n+     * {@return a hashcode value for this CertificateExtensions}\n@@ -279,0 +278,1 @@\n+    @Override\n@@ -280,1 +280,1 @@\n-        return map.hashCode() + getUnparseableExtensions().hashCode();\n+        return Objects.hash(map, getUnparseableExtensions());\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/CertificateExtensions.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -95,5 +95,4 @@\n-    public boolean equals(Object other) {\n-        if (other instanceof CertificatePolicyId)\n-            return id.equals(((CertificatePolicyId) other).getIdentifier());\n-        else\n-            return false;\n+    @Override\n+    public boolean equals(Object obj) {\n+        return obj instanceof CertificatePolicyId other\n+                && id.equals(other.getIdentifier());\n@@ -103,3 +102,1 @@\n-     * Returns a hash code value for this object.\n-     *\n-     * @return a hash code value\n+     * {@return a hash code value for this object}\n@@ -107,0 +104,1 @@\n+    @Override\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/CertificatePolicyId.java","additions":7,"deletions":9,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -172,0 +172,1 @@\n+    @Override\n@@ -185,3 +186,1 @@\n-     * Returns the hash code value for this object.\n-     *\n-     * @return a hash code value for this object.\n+     * {@return the hash code value for this object}\n@@ -189,0 +188,1 @@\n+    @Override\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/DNSName.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -328,0 +328,1 @@\n+    @Override\n@@ -342,0 +343,1 @@\n+    @Override\n@@ -345,17 +347,4 @@\n-            hash = 1;\n-            if (fullName != null) {\n-                hash += fullName.hashCode();\n-            }\n-            if (relativeName != null) {\n-                hash += relativeName.hashCode();\n-            }\n-            if (crlIssuer != null) {\n-                hash += crlIssuer.hashCode();\n-            }\n-            if (reasonFlags != null) {\n-                for (int i = 0; i < reasonFlags.length; i++) {\n-                    if (reasonFlags[i]) {\n-                        hash += i;\n-                    }\n-                }\n-            }\n+            hash = 1 + Objects.hashCode(fullName)\n+                    + Objects.hashCode(relativeName)\n+                    + Objects.hash(crlIssuer)\n+                    + Arrays.hashCode(reasonFlags);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/DistributionPoint.java","additions":7,"deletions":18,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -195,0 +195,1 @@\n+    @Override\n@@ -208,3 +209,1 @@\n-     * Returns the hash code for this distribution point name.\n-     *\n-     * @return the hash code.\n+     * {@return the hash code for this distribution point name}\n@@ -212,0 +211,1 @@\n+    @Override\n@@ -218,1 +218,0 @@\n-\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/DistributionPointName.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -173,17 +173,8 @@\n-    public boolean equals(Object other) {\n-        if (!(other instanceof EDIPartyName))\n-            return false;\n-        String otherAssigner = ((EDIPartyName)other).assigner;\n-        if (this.assigner == null) {\n-            if (otherAssigner != null)\n-                return false;\n-        } else {\n-            if (!(this.assigner.equals(otherAssigner)))\n-                return false;\n-        }\n-        String otherParty = ((EDIPartyName)other).party;\n-        if (this.party == null) {\n-            return otherParty == null;\n-        } else {\n-            return this.party.equals(otherParty);\n-        }\n+    @Override\n+    public boolean equals(Object obj) {\n+        if (this == obj)\n+            return true;\n+\n+        return obj instanceof EDIPartyName other\n+                && Objects.equals(this.assigner, other.assigner)\n+                && Objects.equals(this.party, other.party);\n@@ -193,3 +184,1 @@\n-     * Returns the hash code value for this EDIPartyName.\n-     *\n-     * @return a hash code value.\n+     * {@return the hash code value for this EDIPartyName}\n@@ -197,0 +186,1 @@\n+    @Override\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/EDIPartyName.java","additions":11,"deletions":21,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -245,3 +245,1 @@\n-     * Returns a hashcode value for this Extension.\n-     *\n-     * @return the hashcode value.\n+     * {@return a hashcode value for this Extension}\n@@ -249,0 +247,1 @@\n+    @Override\n@@ -250,7 +249,1 @@\n-        int h = 0;\n-        if (extensionValue != null) {\n-            byte[] val = extensionValue;\n-            int len = val.length;\n-            while (len > 0)\n-                h += len * val[--len];\n-        }\n+        int h = Arrays.hashCode(extensionValue);\n@@ -258,1 +251,1 @@\n-        h = h * hashMagic + (critical?1231:1237);\n+        h = h * hashMagic + Boolean.hashCode(critical);\n@@ -274,0 +267,1 @@\n+    @Override\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/Extension.java","additions":6,"deletions":12,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -204,1 +204,1 @@\n-     * @param other GeneralName to compare to this\n+     * @param obj GeneralName to compare to this\n@@ -207,2 +207,3 @@\n-    public boolean equals(Object other) {\n-        if (this == other) {\n+    @Override\n+    public boolean equals(Object obj) {\n+        if (this == obj) {\n@@ -211,1 +212,1 @@\n-        if (!(other instanceof GeneralName))\n+        if (!(obj instanceof GeneralName other))\n@@ -213,1 +214,0 @@\n-        GeneralNameInterface otherGNI = ((GeneralName)other).name;\n@@ -215,1 +215,2 @@\n-            return name.constrains(otherGNI) == GeneralNameInterface.NAME_MATCH;\n+            return name.constrains(other.name)\n+                    == GeneralNameInterface.NAME_MATCH;\n@@ -222,3 +223,1 @@\n-     * Returns the hash code for this GeneralName.\n-     *\n-     * @return a hash code value.\n+     * {@return the hash code for this GeneralName}\n@@ -226,0 +225,1 @@\n+    @Override\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/GeneralName.java","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -152,1 +152,1 @@\n-     * @param other GeneralSubtree to compare to this\n+     * @param obj GeneralSubtree to compare to this\n@@ -155,14 +155,9 @@\n-    public boolean equals(Object other) {\n-        if (!(other instanceof GeneralSubtree otherGS))\n-            return false;\n-        if (this.name == null) {\n-            if (otherGS.name != null) {\n-                return false;\n-            }\n-        } else {\n-            if (!((this.name).equals(otherGS.name)))\n-                return false;\n-        }\n-        if (this.minimum != otherGS.minimum)\n-            return false;\n-        return this.maximum == otherGS.maximum;\n+    @Override\n+    public boolean equals(Object obj) {\n+        if (this == obj)\n+            return true;\n+\n+        return obj instanceof GeneralSubtree other\n+                && Objects.equals(this.name, other.name)\n+                && this.minimum == other.minimum\n+                && this.maximum == other.maximum;\n@@ -172,3 +167,1 @@\n-     * Returns the hash code for this GeneralSubtree.\n-     *\n-     * @return a hash code value.\n+     * {@return the hash code for this GeneralSubtree}\n@@ -176,0 +169,1 @@\n+    @Override\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/GeneralSubtree.java","additions":13,"deletions":19,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -313,0 +313,1 @@\n+    @Override\n@@ -337,4 +338,2 @@\n-            for (int i=maskLen; i < address.length; i++)\n-                if (address[i] != other[i])\n-                    return false;\n-            return true;\n+            return Arrays.equals(address, maskLen, address.length, other,\n+                    maskLen, address.length);\n@@ -349,3 +348,1 @@\n-     * Returns the hash code value for this object.\n-     *\n-     * @return a hash code value for this object.\n+     * {@return the hash code value for this object}\n@@ -353,0 +350,1 @@\n+    @Override\n@@ -354,6 +352,1 @@\n-        int retval = 0;\n-\n-        for (int i=0; i<address.length; i++)\n-            retval += address[i] * i;\n-\n-        return retval;\n+        return Arrays.hashCode(address);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/IPAddressName.java","additions":7,"deletions":14,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,0 +32,1 @@\n+import java.util.Arrays;\n@@ -136,0 +137,1 @@\n+    @Override\n@@ -137,4 +139,1 @@\n-        int retval = 0;\n-        for (int i = 0; i < octetString.length; i++)\n-            retval += octetString[i] * i;\n-        return retval;\n+        return Arrays.hashCode(octetString);\n@@ -146,2 +145,3 @@\n-    public boolean equals(Object other) {\n-        if (this == other)\n+    @Override\n+    public boolean equals(Object obj) {\n+        if (this == obj)\n@@ -149,4 +149,2 @@\n-        if (!(other instanceof KeyIdentifier))\n-            return false;\n-        byte[] otherString = ((KeyIdentifier)other).octetString;\n-        return java.util.Arrays.equals(octetString, otherString);\n+        return obj instanceof KeyIdentifier other\n+                && Arrays.equals(octetString, other.octetString);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/KeyIdentifier.java","additions":9,"deletions":11,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -114,0 +114,1 @@\n+    @Override\n@@ -118,4 +119,2 @@\n-        if (!(obj instanceof OIDName other))\n-            return false;\n-\n-        return oid.equals(other.oid);\n+        return obj instanceof OIDName other\n+                && oid.equals(other.oid);\n@@ -125,3 +124,1 @@\n-     * Returns the hash code value for this object.\n-     *\n-     * @return a hash code value for this object.\n+     * {@return the hash code value for this object}\n@@ -129,0 +126,1 @@\n+    @Override\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/OIDName.java","additions":6,"deletions":8,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -174,0 +174,1 @@\n+    @Override\n@@ -206,3 +207,1 @@\n-     * Returns the hash code for this OtherName.\n-     *\n-     * @return a hash code value.\n+     * {@return the hash code for this OtherName}\n@@ -210,0 +209,1 @@\n+    @Override\n@@ -212,4 +212,1 @@\n-            myhash = 37 + oid.hashCode();\n-            for (int i = 0; i < nameValue.length; i++) {\n-                myhash = 37 * myhash + nameValue[i];\n-            }\n+            myhash = oid.hashCode() + Arrays.hashCode(nameValue);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/OtherName.java","additions":5,"deletions":8,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -125,1 +125,1 @@\n-     * @param other object to be compared with this\n+     * @param obj object to be compared with this\n@@ -128,8 +128,5 @@\n-    public boolean equals(Object other) {\n-        if (!(other instanceof PolicyInformation piOther))\n-            return false;\n-\n-        if (!policyIdentifier.equals(piOther.getPolicyIdentifier()))\n-            return false;\n-\n-        return policyQualifiers.equals(piOther.getPolicyQualifiers());\n+    @Override\n+    public boolean equals(Object obj) {\n+        return obj instanceof PolicyInformation other\n+                && policyIdentifier.equals(other.getPolicyIdentifier())\n+                && policyQualifiers.equals(other.getPolicyQualifiers());\n@@ -139,3 +136,1 @@\n-     * Returns the hash code for this PolicyInformation.\n-     *\n-     * @return a hash code value.\n+     * {@return the hash code for this PolicyInformation}\n@@ -143,0 +138,1 @@\n+    @Override\n@@ -144,3 +140,1 @@\n-        int myhash = 37 + policyIdentifier.hashCode();\n-        myhash = 37 * myhash + policyQualifiers.hashCode();\n-        return myhash;\n+        return Objects.hash(policyIdentifier, policyQualifiers);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/PolicyInformation.java","additions":10,"deletions":16,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -136,0 +136,1 @@\n+    @Override\n@@ -149,3 +150,1 @@\n-     * Returns the hash code value for this object.\n-     *\n-     * @return a hash code value for this object.\n+     * {@return the hash code value for this object}\n@@ -153,0 +152,1 @@\n+    @Override\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/RFC822Name.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -218,0 +218,1 @@\n+    @Override\n@@ -278,3 +279,1 @@\n-     * Returns the hash code value for this object.\n-     *\n-     * @return a hash code value for this object.\n+     * {@return the hash code value for this object}\n@@ -282,0 +281,1 @@\n+    @Override\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/URIName.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -398,0 +398,1 @@\n+    @Override\n@@ -407,0 +408,1 @@\n+    @Override\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/X500Name.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1299,0 +1299,1 @@\n+        @Override\n@@ -1313,3 +1314,1 @@\n-         * Returns a hash code value for this X509IssuerSerial.\n-         *\n-         * @return the hash code value\n+         * {@return a hash code value for this X509IssuerSerial}\n@@ -1317,0 +1316,1 @@\n+        @Override\n@@ -1320,3 +1320,1 @@\n-                h = 17;\n-                h = 37*h + issuer.hashCode();\n-                h = 37*h + serial.hashCode();\n+                h = Objects.hash(issuer, serial);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/X509CRLImpl.java","additions":4,"deletions":6,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -182,1 +182,1 @@\n-     * @param other the object being compared with this one\n+     * @param obj the object being compared with this one\n@@ -185,17 +185,3 @@\n-    public boolean equals(Object other) {\n-        if (other instanceof X509CertInfo) {\n-            return equals((X509CertInfo) other);\n-        } else {\n-            return false;\n-        }\n-    }\n-\n-    \/**\n-     * Compares two certificates, returning false if any data\n-     * differs between the two.\n-     *\n-     * @param other the object being compared with this one\n-     * @return true iff the certificates are equivalent\n-     *\/\n-    public boolean equals(X509CertInfo other) {\n-        if (this == other) {\n+    @Override\n+    public boolean equals(Object obj) {\n+        if (this == obj) {\n@@ -203,9 +189,0 @@\n-        } else if (rawCertInfo == null || other.rawCertInfo == null) {\n-            return false;\n-        } else if (rawCertInfo.length != other.rawCertInfo.length) {\n-            return false;\n-        }\n-        for (int i = 0; i < rawCertInfo.length; i++) {\n-            if (rawCertInfo[i] != other.rawCertInfo[i]) {\n-                return false;\n-            }\n@@ -213,1 +190,4 @@\n-        return true;\n+        return obj instanceof X509CertInfo other\n+                && rawCertInfo != null\n+                && other.rawCertInfo != null\n+                && Arrays.equals(rawCertInfo, other.rawCertInfo);\n@@ -220,0 +200,1 @@\n+    @Override\n@@ -221,6 +202,1 @@\n-        int     retval = 0;\n-\n-        for (int i = 1; i < rawCertInfo.length; i++) {\n-            retval += rawCertInfo[i] * i;\n-        }\n-        return retval;\n+        return Arrays.hashCode(rawCertInfo);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/X509CertInfo.java","additions":11,"deletions":35,"binary":false,"changes":46,"status":"modified"},{"patch":"@@ -39,0 +39,1 @@\n+import java.util.Objects;\n@@ -401,0 +402,1 @@\n+    @Override\n@@ -422,0 +424,1 @@\n+    @Override\n@@ -423,6 +426,1 @@\n-        byte[] b1 = getEncodedInternal();\n-        int r = b1.length;\n-        for (int i = 0; i < b1.length; i++) {\n-            r += (b1[i] & 0xff) * 37;\n-        }\n-        return r;\n+        return Arrays.hashCode(getEncodedInternal());\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/X509Key.java","additions":4,"deletions":6,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -178,6 +178,3 @@\n-        if (!(obj instanceof DelegationPermission that)) {\n-            return false;\n-        }\n-\n-        return this.subordinate.equals(that.subordinate) &&\n-                this.service.equals(that.service);\n+        return obj instanceof DelegationPermission that\n+                && this.subordinate.equals(that.subordinate)\n+                && this.service.equals(that.service);\n@@ -187,3 +184,1 @@\n-     * Returns the hash code value for this object.\n-     *\n-     * @return a hash code value for this object.\n+     * {@return the hash code value for this object}\n@@ -193,1 +188,1 @@\n-        return 17 * subordinate.hashCode() + 31 * service.hashCode();\n+        return Objects.hash(subordinate, service);\n","filename":"src\/java.security.jgss\/share\/classes\/javax\/security\/auth\/kerberos\/DelegationPermission.java","additions":5,"deletions":10,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -177,3 +177,1 @@\n-     * Returns a hash code for this {@code EncryptionKey}.\n-     *\n-     * @return a hash code for this {@code EncryptionKey}.\n+     * {@return a hash code for this {@code EncryptionKey}}\n","filename":"src\/java.security.jgss\/share\/classes\/javax\/security\/auth\/kerberos\/EncryptionKey.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -149,3 +149,1 @@\n-     * Returns a hash code for this {@code KerberosCredMessage}.\n-     *\n-     * @return a hash code for this {@code KerberosCredMessage}.\n+     * {@return a hash code for this {@code KerberosCredMessage}}\n@@ -158,1 +156,1 @@\n-            return Objects.hash(sender, recipient, Arrays.hashCode(message));\n+            return Arrays.deepHashCode(new Object[]{sender, recipient, message});\n","filename":"src\/java.security.jgss\/share\/classes\/javax\/security\/auth\/kerberos\/KerberosCredMessage.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,0 +30,1 @@\n+import java.util.Objects;\n@@ -281,3 +282,1 @@\n-     * Returns a hash code for this {@code KerberosKey}.\n-     *\n-     * @return a hash code for this {@code KerberosKey}.\n+     * {@return a hash code for this {@code KerberosKey}}\n@@ -286,0 +285,1 @@\n+    @Override\n@@ -311,0 +311,1 @@\n+    @Override\n@@ -331,5 +332,1 @@\n-        if (principal == null) {\n-            return otherKey.getPrincipal() == null;\n-        } else {\n-            return principal.equals(otherKey.getPrincipal());\n-        }\n+        return Objects.equals(principal, otherKey.getPrincipal());\n","filename":"src\/java.security.jgss\/share\/classes\/javax\/security\/auth\/kerberos\/KerberosKey.java","additions":6,"deletions":9,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -230,2 +230,2 @@\n-     * Returns a hash code for this {@code KerberosPrincipal}. The hash code\n-     * is defined to be the result of the following calculation:\n+     * {@return a hash code for this {@code KerberosPrincipal}}\n+     * The hash code is defined to be the result of the following calculation:\n@@ -235,2 +235,0 @@\n-     *\n-     * @return a hash code for this {@code KerberosPrincipal}.\n@@ -238,0 +236,1 @@\n+    @Override\n@@ -250,1 +249,1 @@\n-     * @param other the object to compare to\n+     * @param obj the object to compare to\n@@ -254,1 +253,2 @@\n-    public boolean equals(Object other) {\n+    @Override\n+    public boolean equals(Object obj) {\n@@ -256,1 +256,1 @@\n-        if (other == this)\n+        if (obj == this)\n@@ -259,6 +259,2 @@\n-        if (! (other instanceof KerberosPrincipal)) {\n-            return false;\n-        }\n-        String myFullName = getName();\n-        String otherFullName = ((KerberosPrincipal) other).getName();\n-        return myFullName.equals(otherFullName);\n+        return obj instanceof KerberosPrincipal other\n+                && getName().equals(other.getName());\n","filename":"src\/java.security.jgss\/share\/classes\/javax\/security\/auth\/kerberos\/KerberosPrincipal.java","additions":10,"deletions":14,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -719,3 +719,1 @@\n-     * Returns a hash code for this {@code KerberosTicket}.\n-     *\n-     * @return a hash code for this {@code KerberosTicket}.\n+     * {@return a hash code for this {@code KerberosTicket}}\n@@ -724,0 +722,1 @@\n+    @Override\n@@ -771,0 +770,1 @@\n+    @Override\n@@ -795,33 +795,4 @@\n-        \/\/ authTime may be null\n-        if (authTime == null) {\n-            if (otherTicket.getAuthTime() != null) {\n-                return false;\n-            }\n-        } else {\n-            if (!authTime.equals(otherTicket.getAuthTime())) {\n-                return false;\n-            }\n-        }\n-\n-        \/\/ startTime may be null\n-        if (startTime == null) {\n-            if (otherTicket.getStartTime() != null) {\n-                return false;\n-            }\n-        } else {\n-            if (!startTime.equals(otherTicket.getStartTime())) {\n-                return false;\n-            }\n-        }\n-\n-        if (renewTill == null) {\n-            if (otherTicket.getRenewTill() != null) {\n-                return false;\n-            }\n-        } else {\n-            if (!renewTill.equals(otherTicket.getRenewTill())) {\n-                return false;\n-            }\n-        }\n-\n-        return Objects.equals(proxy, otherTicket.proxy);\n+        return Objects.equals(authTime, otherTicket.getAuthTime())\n+                && Objects.equals(startTime, otherTicket.getStartTime())\n+                && Objects.equals(renewTill, otherTicket.getRenewTill())\n+                && Objects.equals(proxy, otherTicket.proxy);\n","filename":"src\/java.security.jgss\/share\/classes\/javax\/security\/auth\/kerberos\/KerberosTicket.java","additions":8,"deletions":37,"binary":false,"changes":45,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -331,3 +331,1 @@\n-     * Returns a hash code for this {@code KeyTab}.\n-     *\n-     * @return a hash code for this {@code KeyTab}.\n+     * {@return a hash code for this {@code KeyTab}}\n@@ -335,0 +333,1 @@\n+    @Override\n@@ -348,0 +347,1 @@\n+    @Override\n","filename":"src\/java.security.jgss\/share\/classes\/javax\/security\/auth\/kerberos\/KeyTab.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -243,3 +243,1 @@\n-     * Returns the hash code value for this object.\n-     *\n-     * @return a hash code value for this object.\n+     * {@return the hash code value for this object}\n","filename":"src\/java.security.jgss\/share\/classes\/javax\/security\/auth\/kerberos\/ServicePermission.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -170,0 +170,1 @@\n+    @Override\n@@ -196,3 +197,1 @@\n-     * Returns a hashcode value for this ChannelBinding object.\n-     *\n-     * @return a hashCode value\n+     * {@return a hashcode value for this ChannelBinding object}\n@@ -200,0 +199,1 @@\n+    @Override\n@@ -206,1 +206,1 @@\n-            return new String(appData).hashCode();\n+            return Arrays.hashCode(appData);\n","filename":"src\/java.security.jgss\/share\/classes\/org\/ietf\/jgss\/ChannelBinding.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -361,0 +361,1 @@\n+    @Override\n@@ -364,3 +365,1 @@\n-     * Returns a hashcode value for this GSSCredential.\n-     *\n-     * @return a hashCode value\n+     * {@return a hashcode value for this GSSCredential}\n@@ -368,0 +367,1 @@\n+    @Override\n","filename":"src\/java.security.jgss\/share\/classes\/org\/ietf\/jgss\/GSSCredential.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -201,0 +201,1 @@\n+    @Override\n@@ -204,3 +205,1 @@\n-     * Returns a hashcode value for this GSSName.\n-     *\n-     * @return a hashCode value\n+     * {@return a hashcode value for this GSSName}\n@@ -208,0 +207,1 @@\n+    @Override\n","filename":"src\/java.security.jgss\/share\/classes\/org\/ietf\/jgss\/GSSName.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -153,0 +153,1 @@\n+    @Override\n@@ -157,1 +158,1 @@\n-            return (true);\n+            return true;\n@@ -208,3 +209,1 @@\n-     * Returns a hashcode value for this Oid.\n-     *\n-     * @return a hashCode value\n+     * {@return a hashcode value for this Oid}\n@@ -212,0 +211,1 @@\n+    @Override\n","filename":"src\/java.security.jgss\/share\/classes\/org\/ietf\/jgss\/Oid.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -479,0 +479,1 @@\n+    @Override\n@@ -515,3 +516,1 @@\n-     * Returns a hashcode value for this GSSCredential.\n-     *\n-     * @return a hashCode value\n+     * {@return a hashcode value for this GSSCredential}\n@@ -519,0 +518,1 @@\n+    @Override\n","filename":"src\/java.security.jgss\/share\/classes\/sun\/security\/jgss\/GSSCredentialImpl.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -335,3 +335,1 @@\n-     * Returns a hashcode value for this GSSName.\n-     *\n-     * @return a hashCode value\n+     * {@return a hashcode value for this GSSName}\n@@ -339,0 +337,1 @@\n+    @Override\n@@ -353,0 +352,1 @@\n+    @Override\n","filename":"src\/java.security.jgss\/share\/classes\/sun\/security\/jgss\/GSSNameImpl.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -36,0 +36,2 @@\n+import java.util.Objects;\n+\n@@ -451,0 +453,1 @@\n+        @Override\n@@ -460,9 +463,2 @@\n-            if (this.p.getName().equals(that.p.getName())) {\n-                if (this.oid != null && that.oid != null) {\n-                    return this.oid.equals(that.oid);\n-                } else {\n-                    return (this.oid == null && that.oid == null);\n-                }\n-            }\n-\n-            return false;\n+            return this.p.getName().equals(that.p.getName())\n+                    && Objects.equals(this.oid, that.oid);\n@@ -471,0 +467,1 @@\n+        @Override\n@@ -472,8 +469,1 @@\n-            int result = 17;\n-\n-            result = 37 * result + p.getName().hashCode();\n-            if (oid != null) {\n-                result = 37 * result + oid.hashCode();\n-            }\n-\n-            return result;\n+            return Objects.hash(p.getName(), oid);\n","filename":"src\/java.security.jgss\/share\/classes\/sun\/security\/jgss\/ProviderList.java","additions":7,"deletions":17,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -243,0 +243,1 @@\n+    @Override\n@@ -258,3 +259,1 @@\n-     * Returns a hashcode value for this GSSNameSpi.\n-     *\n-     * @return a hashCode value\n+     * {@return a hashcode value for this GSSNameSpi}\n@@ -262,0 +261,1 @@\n+    @Override\n@@ -263,1 +263,1 @@\n-        return 37 * 17 + krb5PrincipalName.getName().hashCode();\n+        return krb5PrincipalName.getName().hashCode();\n","filename":"src\/java.security.jgss\/share\/classes\/sun\/security\/jgss\/krb5\/Krb5NameElement.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -66,0 +66,1 @@\n+    @Override\n@@ -69,3 +70,1 @@\n-     * Returns a hashcode value for this GSSNameSpi.\n-     *\n-     * @return a hashCode value\n+     * {@return a hashcode value for this GSSNameSpi}\n@@ -73,0 +72,1 @@\n+    @Override\n","filename":"src\/java.security.jgss\/share\/classes\/sun\/security\/jgss\/spi\/GSSNameSpi.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2012, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,0 +34,2 @@\n+import java.util.Objects;\n+\n@@ -136,6 +138,1 @@\n-        int result = 17;\n-        result = 37 * result + returnCode;\n-        if (error != null) {\n-            result = 37 * result + error.hashCode();\n-        }\n-        return result;\n+        return Objects.hash(returnCode, error);\n@@ -149,10 +146,3 @@\n-        if (!(obj instanceof KrbException)) {\n-            return false;\n-        }\n-\n-        KrbException other = (KrbException)obj;\n-        if (returnCode != other.returnCode) {\n-            return false;\n-        }\n-        return (error == null)?(other.error == null):\n-            (error.equals(other.error));\n+        return obj instanceof KrbException other\n+                && returnCode == other.returnCode\n+                && Objects.equals(error, other.error);\n","filename":"src\/java.security.jgss\/share\/classes\/sun\/security\/krb5\/KrbException.java","additions":7,"deletions":17,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -212,6 +212,3 @@\n-        if (o instanceof PrincipalName) {\n-            PrincipalName other = (PrincipalName)o;\n-            return nameRealm.equals(other.nameRealm) &&\n-                    Arrays.equals(nameStrings, other.nameStrings);\n-        }\n-        return false;\n+        return o instanceof PrincipalName other\n+                && nameRealm.equals(other.nameRealm)\n+                && Arrays.equals(nameStrings, other.nameStrings);\n@@ -516,0 +513,1 @@\n+    @Override\n","filename":"src\/java.security.jgss\/share\/classes\/sun\/security\/krb5\/PrincipalName.java","additions":5,"deletions":7,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -75,0 +75,1 @@\n+    @Override\n@@ -80,6 +81,2 @@\n-        if (!(obj instanceof Realm)) {\n-            return false;\n-        }\n-\n-        Realm that = (Realm)obj;\n-        return this.realm.equals(that.realm);\n+        return obj instanceof Realm that\n+                && this.realm.equals(that.realm);\n@@ -88,0 +85,1 @@\n+    @Override\n","filename":"src\/java.security.jgss\/share\/classes\/sun\/security\/krb5\/Realm.java","additions":5,"deletions":7,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -81,0 +81,1 @@\n+    @Override\n@@ -82,9 +83,3 @@\n-        if (hashCode == 0) {\n-            int result = 17;\n-            result = 37*result + addrType;\n-            if (address != null) {\n-                for (int i=0; i < address.length; i++)  {\n-                    result = 37*result + address[i];\n-                }\n-            }\n-            hashCode = result;\n+        int h = hashCode;\n+        if (h == 0) {\n+            hashCode = h = (37 * addrType + Arrays.hashCode(address));\n@@ -92,2 +87,1 @@\n-        return hashCode;\n-\n+        return h;\n@@ -96,0 +90,1 @@\n+    @Override\n@@ -101,1 +96,1 @@\n-        if (!(obj instanceof HostAddress)) {\n+        if (!(obj instanceof HostAddress h)) {\n@@ -105,13 +100,2 @@\n-        HostAddress h = (HostAddress)obj;\n-        if (addrType != h.addrType ||\n-            (address != null && h.address == null) ||\n-            (address == null && h.address != null))\n-            return false;\n-        if (address != null && h.address != null) {\n-            if (address.length != h.address.length)\n-                return false;\n-            for (int i = 0; i < address.length; i++)\n-                if (address[i] != h.address[i])\n-                    return false;\n-        }\n-        return true;\n+        return addrType == h.addrType\n+                && Arrays.equals(address, h.address);\n","filename":"src\/java.security.jgss\/share\/classes\/sun\/security\/krb5\/internal\/HostAddress.java","additions":10,"deletions":26,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -133,0 +133,1 @@\n+    @Override\n@@ -134,8 +135,3 @@\n-        if (hashCode == 0) {\n-            int result = 17;\n-            if (addresses != null) {\n-                for (int i=0; i < addresses.length; i++)  {\n-                    result = 37*result + addresses[i].hashCode();\n-                }\n-            }\n-            hashCode = result;\n+        int h = hashCode;\n+        if (h == 0) {\n+            hashCode = h = Arrays.hashCode(addresses);\n@@ -143,2 +139,1 @@\n-        return hashCode;\n-\n+        return h;\n@@ -147,1 +142,1 @@\n-\n+    @Override\n@@ -153,1 +148,1 @@\n-        if (!(obj instanceof HostAddresses)) {\n+        if (!(obj instanceof HostAddresses addrs)) {\n@@ -157,12 +152,1 @@\n-        HostAddresses addrs = (HostAddresses)obj;\n-        if ((addresses == null && addrs.addresses != null) ||\n-            (addresses != null && addrs.addresses == null))\n-            return false;\n-        if (addresses != null && addrs.addresses != null) {\n-            if (addresses.length != addrs.addresses.length)\n-                return false;\n-            for (int i = 0; i < addresses.length; i++)\n-                if (!addresses[i].equals(addrs.addresses[i]))\n-                    return false;\n-        }\n-        return true;\n+        return Arrays.equals(addresses, addrs.addresses);\n","filename":"src\/java.security.jgss\/share\/classes\/sun\/security\/krb5\/internal\/HostAddresses.java","additions":9,"deletions":25,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,0 +47,2 @@\n+import java.util.Objects;\n+\n@@ -491,1 +493,1 @@\n-        if (!(obj instanceof KRBError)) {\n+        if (!(obj instanceof KRBError other)) {\n@@ -495,1 +497,0 @@\n-        KRBError other = (KRBError)obj;\n@@ -498,4 +499,0 @@\n-                isEqual(cTime, other.cTime) &&\n-                isEqual(cuSec, other.cuSec) &&\n-                isEqual(sTime, other.sTime) &&\n-                isEqual(suSec, other.suSec) &&\n@@ -503,10 +500,10 @@\n-                isEqual(crealm, other.crealm) &&\n-                isEqual(cname, other.cname) &&\n-                isEqual(sname, other.sname) &&\n-                isEqual(eText, other.eText) &&\n-                java.util.Arrays.equals(eData, other.eData) &&\n-                isEqual(eCksum, other.eCksum);\n-    }\n-\n-    private static boolean isEqual(Object a, Object b) {\n-        return (a == null)?(b == null):(a.equals(b));\n+                Objects.equals(cTime, other.cTime) &&\n+                Objects.equals(cuSec, other.cuSec) &&\n+                Objects.equals(sTime, other.sTime) &&\n+                Objects.equals(suSec, other.suSec) &&\n+                Objects.equals(crealm, other.crealm) &&\n+                Objects.equals(cname, other.cname) &&\n+                Objects.equals(sname, other.sname) &&\n+                Objects.equals(eText, other.eText) &&\n+                Arrays.equals(eData, other.eData) &&\n+                Objects.equals(eCksum, other.eCksum);\n@@ -519,0 +516,1 @@\n+        result = 37 * result + errorCode;\n@@ -523,1 +521,0 @@\n-        result = 37 * result + errorCode;\n","filename":"src\/java.security.jgss\/share\/classes\/sun\/security\/krb5\/internal\/KRBError.java","additions":15,"deletions":18,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -185,0 +185,1 @@\n+    @Override\n@@ -215,0 +216,1 @@\n+    @Override\n@@ -220,9 +222,1 @@\n-        byte[] b1 = getEncodedInternal();\n-        if (b1 == null) {\n-            return 0;\n-        }\n-        int r = b1.length;\n-        for (int i = 0; i < b1.length; i++) {\n-            r += (b1[i] & 0xff) * 37;\n-        }\n-        return r;\n+        return Arrays.hashCode(getEncodedInternal());\n","filename":"src\/jdk.crypto.cryptoki\/share\/classes\/sun\/security\/pkcs11\/P11Key.java","additions":3,"deletions":9,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,0 +47,1 @@\n+        int hashCode = TestCertificate.ROOT_CA.certificate().getPublicKey().hashCode();\n@@ -48,2 +49,2 @@\n-                TestCertificate.ROOT_CA.certificate().getPublicKey().hashCode() +\n-                \", \" + TestCertificate.ROOT_CA.certId);\n+                Integer.toUnsignedLong(hashCode) + \", \" +\n+                TestCertificate.ROOT_CA.certId);\n","filename":"test\/jdk\/jdk\/security\/logging\/TestX509ValidationLog.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"}]}