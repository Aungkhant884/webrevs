{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -347,0 +347,2 @@\n+                Arrays.fill(sharedSecret, offset,\n+                        offset + (expectedLen - secret.length), (byte)0);\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/DHKeyAgreement.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -0,0 +1,74 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8281628\n+ * @library \/test\/lib\n+ * @summary ensure padding bytes are always added when generated secret\n+ *      is smaller than buffer size.\n+ *\/\n+\n+import javax.crypto.KeyAgreement;\n+import java.security.KeyPair;\n+import java.security.KeyPairGenerator;\n+import java.util.Arrays;\n+import java.util.HexFormat;\n+\n+public class DHKeyAgreementPadding {\n+\n+    public static void main(String[] args) throws Exception {\n+\n+        byte[] aliceSecret = new byte[64];\n+        byte[] bobSecret = new byte[64];\n+\n+        KeyAgreement alice = KeyAgreement.getInstance(\"DiffieHellman\");\n+        KeyAgreement bob = KeyAgreement.getInstance(\"DiffieHellman\");\n+\n+        \/\/ The probability of an error is 0.2% or 1\/500. Try more times.\n+        for (int i = 0; i < 5000; i++) {\n+            KeyPairGenerator keyPairGen = KeyPairGenerator.getInstance(\"DiffieHellman\");\n+            keyPairGen.initialize(512);\n+            KeyPair aliceKeyPair = keyPairGen.generateKeyPair();\n+            KeyPair bobKeyPair = keyPairGen.generateKeyPair();\n+\n+            \/\/ Different stale data\n+            aliceSecret[0] = 0;\n+            bobSecret[0] = 1;\n+\n+            alice.init(aliceKeyPair.getPrivate());\n+            alice.doPhase(bobKeyPair.getPublic(), true);\n+            alice.generateSecret(aliceSecret, 0);\n+\n+            bob.init(bobKeyPair.getPrivate());\n+            bob.doPhase(aliceKeyPair.getPublic(), true);\n+            bob.generateSecret(bobSecret, 0);\n+\n+            if (!Arrays.equals(aliceSecret, bobSecret)) {\n+                System.out.println(HexFormat.ofDelimiter(\":\").formatHex(aliceSecret));\n+                System.out.println(HexFormat.ofDelimiter(\":\").formatHex(bobSecret));\n+                throw new RuntimeException();\n+            }\n+        }\n+    }\n+}\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/KeyAgreement\/DHKeyAgreementPadding.java","additions":74,"deletions":0,"binary":false,"changes":74,"status":"added"}]}