{"files":[{"patch":"@@ -5227,3 +5227,2 @@\n-    BasicType vec_basictype = prim_types[scale_val];\n-    const Type* vec_type = Type::get_const_basic_type(vec_basictype);\n-    int vec_len = ArrayOperationPartailInlineSize \/ type2aelembytes(vec_basictype);\n+    BasicType elem_bt = prim_types[scale_val];\n+    int vec_len = ArrayOperationPartailInlineSize \/ type2aelembytes(elem_bt);\n@@ -5237,1 +5236,1 @@\n-      enable_pi = NULL != vec_type->isa_int();\n+      enable_pi = is_subword_type(elem_bt) || elem_bt == T_INT;\n@@ -5239,1 +5238,1 @@\n-      enable_pi = is_subword_type(vec_basictype);\n+      enable_pi = is_subword_type(elem_bt);\n@@ -5243,3 +5242,3 @@\n-        Matcher::match_rule_supported_vector(Op_VectorMaskGen , vec_len, vec_basictype) &&\n-        Matcher::match_rule_supported_vector(Op_LoadVectorMasked , vec_len, vec_basictype) &&\n-        Matcher::match_rule_supported_vector(Op_VectorCmpMasked, vec_len, vec_basictype)) {\n+        Matcher::match_rule_supported_vector(Op_VectorMaskGen , vec_len, elem_bt) &&\n+        Matcher::match_rule_supported_vector(Op_LoadVectorMasked , vec_len, elem_bt) &&\n+        Matcher::match_rule_supported_vector(Op_VectorCmpMasked, vec_len, elem_bt)) {\n@@ -5254,2 +5253,2 @@\n-      const TypeVect* vt = TypeVect::make(vec_basictype, vec_len);\n-      Node* mask_gen = _gvn.transform(new VectorMaskGenNode(ConvI2L(length), TypeVect::VECTMASK, vec_type));\n+      const TypeVect* vt = TypeVect::make(elem_bt, vec_len);\n+      Node* mask_gen = _gvn.transform(new VectorMaskGenNode(ConvI2L(length), TypeVect::VECTMASK, elem_bt));\n","filename":"src\/hotspot\/share\/opto\/library_call.cpp","additions":9,"deletions":10,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -236,1 +236,1 @@\n-  Node* mask_gen =  new VectorMaskGenNode(length, TypeVect::VECTMASK, Type::get_const_basic_type(type));\n+  Node* mask_gen =  new VectorMaskGenNode(length, TypeVect::VECTMASK, type);\n","filename":"src\/hotspot\/share\/opto\/macroArrayCopy.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -727,1 +727,1 @@\n-    BasicType mask_bt = ((VectorMaskGenNode*)in(3))->get_elem_type()->array_element_basic_type();\n+    BasicType mask_bt = ((VectorMaskGenNode*)in(3))->get_elem_type();\n@@ -744,1 +744,1 @@\n-    BasicType mask_bt = ((VectorMaskGenNode*)in(4))->get_elem_type()->array_element_basic_type();\n+    BasicType mask_bt = ((VectorMaskGenNode*)in(4))->get_elem_type();\n","filename":"src\/hotspot\/share\/opto\/vectornode.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -853,1 +853,1 @@\n-  VectorMaskGenNode(Node* length, const Type* ty, const Type* ety): TypeNode(ty, 2), _elemType(ety) {\n+  VectorMaskGenNode(Node* length, const Type* ty, BasicType ety): TypeNode(ty, 2), _elemType(ety) {\n@@ -858,1 +858,1 @@\n-  const Type* get_elem_type()  { return _elemType;}\n+  BasicType get_elem_type()  { return _elemType;}\n@@ -865,1 +865,1 @@\n-   const Type* _elemType;\n+   BasicType _elemType;\n","filename":"src\/hotspot\/share\/opto\/vectornode.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}