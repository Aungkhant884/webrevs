{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -99,1 +99,1 @@\n-     * and {@link configure} has not been called\n+     * and {@link #configure} has not been called\n@@ -114,1 +114,1 @@\n-     * and {@link configure} has not been called\n+     * and {@link #configure} has not been called\n@@ -142,1 +142,1 @@\n-     * and {@link configure} has not been called\n+     * and {@link #configure} has not been called\n","filename":"src\/java.base\/share\/classes\/java\/security\/AuthProvider.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -37,0 +37,1 @@\n+import java.util.regex.PatternSyntaxException;\n","filename":"src\/java.base\/share\/classes\/javax\/net\/ssl\/SNIHostName.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,2 @@\n+import java.util.Collection;\n+\n","filename":"src\/java.base\/share\/classes\/javax\/net\/ssl\/SNIMatcher.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,0 +30,1 @@\n+import java.util.List;\n","filename":"src\/java.base\/share\/classes\/javax\/net\/ssl\/SNIServerName.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -54,1 +54,1 @@\n-     * @see SSLContext#init(KeyManager [], TrustManager [], SecureRandom)\n+     * @see SSLContext#init(KeyManager[], TrustManager[], SecureRandom)\n","filename":"src\/java.base\/share\/classes\/javax\/net\/ssl\/SSLContextSpi.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -315,1 +315,1 @@\n- *      {@link #setEnabledCipherSuites(String [])} method, and\n+ *      {@link #setEnabledCipherSuites(String[])} method, and\n@@ -498,2 +498,2 @@\n-     * {@link #wrap(ByteBuffer [], int, int, ByteBuffer)\n-     *     engine.wrap(new ByteBuffer [] { src }, 0, 1, dst);}\n+     * {@link #wrap(ByteBuffer[], int, int, ByteBuffer)\n+     *     engine.wrap(new ByteBuffer[] { src }, 0, 1, dst);}\n@@ -520,1 +520,1 @@\n-     * @see     #wrap(ByteBuffer [], int, int, ByteBuffer)\n+     * @see     #wrap(ByteBuffer[], int, int, ByteBuffer)\n@@ -534,1 +534,1 @@\n-     * {@link #wrap(ByteBuffer [], int, int, ByteBuffer)\n+     * {@link #wrap(ByteBuffer[], int, int, ByteBuffer)\n@@ -557,1 +557,1 @@\n-     * @see     #wrap(ByteBuffer [], int, int, ByteBuffer)\n+     * @see     #wrap(ByteBuffer[], int, int, ByteBuffer)\n@@ -653,2 +653,2 @@\n-     * {@link #unwrap(ByteBuffer, ByteBuffer [], int, int)\n-     *     engine.unwrap(src, new ByteBuffer [] { dst }, 0, 1);}\n+     * {@link #unwrap(ByteBuffer, ByteBuffer[], int, int)\n+     *     engine.unwrap(src, new ByteBuffer[] { dst }, 0, 1);}\n@@ -675,1 +675,1 @@\n-     * @see     #unwrap(ByteBuffer, ByteBuffer [], int, int)\n+     * @see     #unwrap(ByteBuffer, ByteBuffer[], int, int)\n@@ -689,1 +689,1 @@\n-     * {@link #unwrap(ByteBuffer, ByteBuffer [], int, int)\n+     * {@link #unwrap(ByteBuffer, ByteBuffer[], int, int)\n@@ -712,1 +712,1 @@\n-     * @see     #unwrap(ByteBuffer, ByteBuffer [], int, int)\n+     * @see     #unwrap(ByteBuffer, ByteBuffer[], int, int)\n@@ -929,1 +929,1 @@\n-     * @see     #setEnabledCipherSuites(String [])\n+     * @see     #setEnabledCipherSuites(String[])\n@@ -955,1 +955,1 @@\n-     * @see     #setEnabledCipherSuites(String [])\n+     * @see     #setEnabledCipherSuites(String[])\n@@ -986,1 +986,1 @@\n-    public abstract void setEnabledCipherSuites(String suites []);\n+    public abstract void setEnabledCipherSuites(String[] suites);\n@@ -1008,1 +1008,1 @@\n-     * @see     #setEnabledProtocols(String [])\n+     * @see     #setEnabledProtocols(String[])\n@@ -1027,1 +1027,1 @@\n-    public abstract void setEnabledProtocols(String protocols[]);\n+    public abstract void setEnabledProtocols(String[] protocols);\n@@ -1164,1 +1164,1 @@\n-     * {@link setUseClientMode(boolean)} is used to change the mode to true.\n+     * {@link #setUseClientMode(boolean)} is used to change the mode to true.\n","filename":"src\/java.base\/share\/classes\/javax\/net\/ssl\/SSLEngine.java","additions":17,"deletions":17,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,2 @@\n+import java.nio.ByteBuffer;\n+\n","filename":"src\/java.base\/share\/classes\/javax\/net\/ssl\/SSLEngineResult.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,0 @@\n-\n@@ -32,1 +31,0 @@\n-\n@@ -208,1 +206,1 @@\n-     * @see #setEnabledCipherSuites(String [])\n+     * @see #setEnabledCipherSuites(String[])\n@@ -264,1 +262,1 @@\n-     * @see #setEnabledCipherSuites(String [])\n+     * @see #setEnabledCipherSuites(String[])\n@@ -274,1 +272,1 @@\n-     * @see #setEnabledProtocols(String [])\n+     * @see #setEnabledProtocols(String[])\n@@ -290,1 +288,1 @@\n-     * @see #setEnabledProtocols(String [])\n+     * @see #setEnabledProtocols(String[])\n","filename":"src\/java.base\/share\/classes\/javax\/net\/ssl\/SSLServerSocket.java","additions":5,"deletions":7,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+import java.nio.ByteBuffer;\n","filename":"src\/java.base\/share\/classes\/javax\/net\/ssl\/SSLSession.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,0 @@\n-import javax.net.ssl.X509TrustManager;\n@@ -31,0 +30,1 @@\n+import java.security.AlgorithmConstraints;\n","filename":"src\/java.base\/share\/classes\/javax\/net\/ssl\/X509ExtendedTrustManager.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}