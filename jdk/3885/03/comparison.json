{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -177,1 +177,1 @@\n-     * boolean parameter is called <code>permanent<\/code> and means\n+     * boolean parameter is called {@code permanent} and means\n@@ -278,3 +278,3 @@\n-    \/\/ The variable below is here to support stop functionality\n-    \/\/ It would be overriten if you call startRemoteCommectionServer second\n-    \/\/ time. It's OK for now as logic in Agent.java forbids mutiple agents\n+    \/\/ The variable below is here to support stop functionality.\n+    \/\/ It would be overwritten if you call startRemoteConnectorServer second\n+    \/\/ time. It's OK for now as logic in Agent.java forbids multiple agents.\n@@ -291,1 +291,1 @@\n-            \/\/ This exception can appears only if we attempt\n+            \/\/ This exception can appear only if we attempt\n@@ -300,3 +300,3 @@\n-      * simply return. Otherwise, attempts to load the config file, and\n-      * then calls {@link #startRemoteConnectorServer\n-      *                            (java.lang.String, java.util.Properties)}.\n+      * simply returns. Otherwise, attempts to load the config file, and\n+      * then calls {@link #startRemoteConnectorServer(java.lang.String,\n+      * java.util.Properties)}.\n@@ -321,2 +321,1 @@\n-     * @see #startRemoteConnectorServer\n-     *             (String portStr, Properties props)\n+     * @see #startRemoteConnectorServer(String portStr, Properties props)\n@@ -519,1 +518,1 @@\n-        \/\/ Ensure cryptographically strong random number generater used\n+        \/\/ Ensure cryptographically strong random number generator used\n","filename":"src\/jdk.management.agent\/share\/classes\/sun\/management\/jmxremote\/ConnectorBootstrap.java","additions":11,"deletions":12,"binary":false,"changes":23,"status":"modified"}]}