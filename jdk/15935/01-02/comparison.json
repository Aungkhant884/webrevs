{"files":[{"patch":"@@ -516,1 +516,1 @@\n-            ListFormat [locale: \"%s\", start: \"%s\", middle: \"%s\",  end: \"%s\", two: \"%s\", three: \"%s\"]\n+            ListFormat [locale: \"%s\", start: \"%s\", middle: \"%s\", end: \"%s\", two: \"%s\", three: \"%s\"]\n","filename":"src\/java.base\/share\/classes\/java\/text\/ListFormat.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -862,1 +862,1 @@\n-                        for (int i = 0; i < lpArray.length; i++) {\n+                        for (int i = 0; i < 3; i++) { \/\/ exclude optional ones, ie, \"two\"\/\"three\"\n","filename":"src\/java.base\/share\/classes\/sun\/util\/locale\/provider\/LocaleResources.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -312,0 +312,12 @@\n+    @Test\n+    void getInstance_3Arg_InheritanceValidation() {\n+        \/\/ Tests if inheritance works as expected.\n+        \/\/ World English (\"en-001\") has non-Oxford-comma pattern for \"end\", while\n+        \/\/ English (\"en\") has Oxford-comma \"end\" pattern. Thus missing \"standard\"\/\"middle\"\n+        \/\/ should be inherited from \"en\", but \"end\" should stay non-Oxford for \"en-001\"\n+        \/\/ Note that this test depends on a particular version of CLDR data.\n+        assertEquals(\"\"\"\n+            ListFormat [locale: \"English (world)\", start: \"{0}, {1}\", middle: \"{0}, {1}\", end: \"{0} and {1}\", two: \"{0} and {1}\", three: \"{0}, {1} and {2}\"]\n+            \"\"\",\n+            ListFormat.getInstance(Locale.forLanguageTag(\"en-001\"), ListFormat.Type.STANDARD, ListFormat.Style.FULL).toString());\n+    }\n","filename":"test\/jdk\/java\/text\/Format\/ListFormat\/TestListFormat.java","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"}]}