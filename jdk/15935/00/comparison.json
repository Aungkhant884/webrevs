{"files":[{"patch":"@@ -854,2 +854,15 @@\n-            if (lpArray == null) {\n-                cache.put(cacheKey, new ResourceReference(cacheKey, new String[5], referenceQueue));\n+\n+            if (lpArray[0].isEmpty() || lpArray[1].isEmpty() || lpArray[2].isEmpty()) {\n+                var adapter = LocaleProviderAdapter.forType(LocaleProviderAdapter.Type.CLDR);\n+                if (adapter instanceof ResourceBundleBasedAdapter rbba) {\n+                    var candList = rbba.getCandidateLocales(\"\", locale);\n+                    \/\/ make sure there is at least one parent locale\n+                    if (candList.size() >= 2) {\n+                        var parentPatterns = adapter.getLocaleResources(candList.get(1)).getListPatterns(type, style);\n+                        for (int i = 0; i < lpArray.length; i++) {\n+                            if (lpArray[i].isEmpty()) {\n+                                lpArray[i] = parentPatterns[i];\n+                            }\n+                        }\n+                    }\n+                }\n","filename":"src\/java.base\/share\/classes\/sun\/util\/locale\/provider\/LocaleResources.java","additions":15,"deletions":2,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 8041488\n+ * @bug 8041488 8316974\n@@ -36,0 +36,1 @@\n+import java.util.Arrays;\n@@ -203,1 +204,13 @@\n-\n+    static Arguments[] getInstance_3Arg_InheritPatterns() {\n+        return new Arguments[] {\n+                arguments(ListFormat.Type.STANDARD, ListFormat.Style.FULL),\n+                arguments(ListFormat.Type.STANDARD, ListFormat.Style.SHORT),\n+                arguments(ListFormat.Type.STANDARD, ListFormat.Style.NARROW),\n+                arguments(ListFormat.Type.OR, ListFormat.Style.FULL),\n+                arguments(ListFormat.Type.OR, ListFormat.Style.SHORT),\n+                arguments(ListFormat.Type.OR, ListFormat.Style.NARROW),\n+                arguments(ListFormat.Type.UNIT, ListFormat.Style.FULL),\n+                arguments(ListFormat.Type.UNIT, ListFormat.Style.SHORT),\n+                arguments(ListFormat.Type.UNIT, ListFormat.Style.NARROW),\n+        };\n+    }\n@@ -292,0 +305,9 @@\n+    @ParameterizedTest\n+    @MethodSource\n+    void getInstance_3Arg_InheritPatterns(ListFormat.Type type, ListFormat.Style style) {\n+        \/\/ No IAE should be thrown for all locales. Some locales in CLDR\n+        \/\/ have partial patterns (start, middle, end) in it. Lacking ones\n+        \/\/ should be inherited from parent locales.\n+        Locale.availableLocales().forEach(l -> ListFormat.getInstance(l, type, style));\n+    }\n+\n","filename":"test\/jdk\/java\/text\/Format\/ListFormat\/TestListFormat.java","additions":24,"deletions":2,"binary":false,"changes":26,"status":"modified"}]}