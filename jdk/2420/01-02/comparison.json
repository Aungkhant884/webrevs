{"files":[{"patch":"@@ -1652,0 +1652,1 @@\n+  InstructionMark im(this);\n","filename":"src\/hotspot\/cpu\/x86\/assembler_x86.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -5389,11 +5389,0 @@\n-\/\/ instruct leaPIdx(rRegP dst, indIndex mem)\n-\/\/ %{\n-\/\/   match(Set dst mem);\n-\n-\/\/   ins_cost(110);\n-\/\/   format %{ \"leaq    $dst, $mem\\t# ptr idx\" %}\n-\/\/   opcode(0x8D);\n-\/\/   ins_encode(REX_reg_mem_wide(dst, mem), OpcP, reg_mem(dst, mem));\n-\/\/   ins_pipe(ialu_reg_reg_fat);\n-\/\/ %}\n-\n@@ -5594,2 +5583,3 @@\n-  opcode(0x33); \/* + rd *\/\n-  ins_encode(REX_reg_reg(dst, dst), OpcP, reg_reg(dst, dst));\n+  ins_encode %{\n+    __ xorl($dst$$Register, $dst$$Register);\n+  %}\n@@ -5616,2 +5606,3 @@\n-  opcode(0x33); \/* + rd *\/\n-  ins_encode(REX_reg_reg(dst, dst), OpcP, reg_reg(dst, dst));\n+  ins_encode %{\n+    __ xorl($dst$$Register, $dst$$Register);\n+  %}\n@@ -5656,2 +5647,3 @@\n-  opcode(0x33); \/* + rd *\/\n-  ins_encode(REX_reg_reg(dst, dst), OpcP, reg_reg(dst, dst));\n+  ins_encode %{\n+    __ xorl($dst$$Register, $dst$$Register);\n+  %}\n@@ -5754,1 +5746,1 @@\n-    __ xorpd ($dst$$XMMRegister, $dst$$XMMRegister);\n+    __ xorpd($dst$$XMMRegister, $dst$$XMMRegister);\n@@ -6050,2 +6042,3 @@\n-  opcode(0xC7); \/* C7 \/0 *\/\n-  ins_encode(REX_mem(mem), OpcP, RM_opc_mem(0x00, mem), Con32(src));\n+  ins_encode %{\n+    __ movl($mem$$Address, $src$$constant);\n+  %}\n@@ -6126,2 +6119,3 @@\n-  opcode(0xC6); \/* C6 \/0 *\/\n-  ins_encode(REX_mem(mem), OpcP, RM_opc_mem(0x00, mem), Con8or32(src));\n+  ins_encode %{\n+    __ movb($mem$$Address, $src$$constant);\n+  %}\n@@ -6151,2 +6145,3 @@\n-  opcode(0xC6); \/* C6 \/0 *\/\n-  ins_encode(REX_mem(mem), OpcP, RM_opc_mem(0x00, mem), Con8or32(src));\n+  ins_encode %{\n+    __ movb($mem$$Address, $src$$constant);\n+  %}\n@@ -6339,2 +6334,3 @@\n-  opcode(0x0F, 0xC8);  \/*Opcode 0F \/C8 *\/\n-  ins_encode( REX_reg(dst), OpcP, opc2_reg(dst) );\n+  ins_encode %{\n+    __ bswapl($dst$$Register);\n+  %}\n@@ -6348,2 +6344,3 @@\n-  opcode(0x0F, 0xC8); \/* Opcode 0F \/C8 *\/\n-  ins_encode( REX_reg_wide(dst), OpcP, opc2_reg(dst) );\n+  ins_encode %{\n+    __ bswapq($dst$$Register);\n+  %}\n@@ -6867,2 +6864,3 @@\n-  opcode(0x0F, 0x40);\n-  ins_encode(REX_reg_reg(dst, src), enc_cmov(cop), reg_reg(dst, src));\n+  ins_encode %{\n+    __ cmovl((Assembler::Condition)($cop$$cmpcode), $dst$$Register, $src$$Register);\n+  %}\n@@ -6877,2 +6875,3 @@\n-  opcode(0x0F, 0x40);\n-  ins_encode(REX_reg_reg(dst, src), enc_cmov(cop), reg_reg(dst, src));\n+  ins_encode %{\n+    __ cmovl((Assembler::Condition)($cop$$cmpcode), $dst$$Register, $src$$Register);\n+  %}\n@@ -6896,2 +6895,3 @@\n-  opcode(0x0F, 0x40);\n-  ins_encode(REX_reg_mem(dst, src), enc_cmov(cop), reg_mem(dst, src));\n+  ins_encode %{\n+    __ cmovl((Assembler::Condition)($cop$$cmpcode), $dst$$Register, $src$$Address);\n+  %}\n@@ -6908,2 +6908,3 @@\n-  opcode(0x0F, 0x40);\n-  ins_encode(REX_reg_mem(dst, src), enc_cmov(cop), reg_mem(dst, src));\n+  ins_encode %{\n+    __ cmovl((Assembler::Condition)($cop$$cmpcode), $dst$$Register, $src$$Address);\n+  %}\n@@ -6928,2 +6929,3 @@\n-  opcode(0x0F, 0x40);\n-  ins_encode(REX_reg_reg(dst, src), enc_cmov(cop), reg_reg(dst, src));\n+  ins_encode %{\n+    __ cmovl((Assembler::Condition)($cop$$cmpcode), $dst$$Register, $src$$Register);\n+  %}\n@@ -6940,2 +6942,3 @@\n-  opcode(0x0F, 0x40);\n-  ins_encode(REX_reg_reg(dst, src), enc_cmov(cop), reg_reg(dst, src));\n+  ins_encode %{\n+    __ cmovl((Assembler::Condition)($cop$$cmpcode), $dst$$Register, $src$$Register);\n+  %}\n@@ -6960,2 +6963,3 @@\n-  opcode(0x0F, 0x40);\n-  ins_encode(REX_reg_reg_wide(dst, src), enc_cmov(cop), reg_reg(dst, src));\n+  ins_encode %{\n+    __ cmovq((Assembler::Condition)($cop$$cmpcode), $dst$$Register, $src$$Register);\n+  %}\n@@ -6972,2 +6976,3 @@\n-  opcode(0x0F, 0x40);\n-  ins_encode(REX_reg_reg_wide(dst, src), enc_cmov(cop), reg_reg(dst, src));\n+  ins_encode %{\n+    __ cmovq((Assembler::Condition)($cop$$cmpcode), $dst$$Register, $src$$Register);\n+  %}\n@@ -7018,2 +7023,3 @@\n-  opcode(0x0F, 0x40);\n-  ins_encode(REX_reg_reg_wide(dst, src), enc_cmov(cop), reg_reg(dst, src));\n+  ins_encode %{\n+    __ cmovq((Assembler::Condition)($cop$$cmpcode), $dst$$Register, $src$$Register);\n+  %}\n@@ -7029,2 +7035,3 @@\n-  opcode(0x0F, 0x40);\n-  ins_encode(REX_reg_mem_wide(dst, src), enc_cmov(cop), reg_mem(dst, src));\n+  ins_encode %{\n+    __ cmovq((Assembler::Condition)($cop$$cmpcode), $dst$$Register, $src$$Address);\n+  %}\n@@ -7040,2 +7047,3 @@\n-  opcode(0x0F, 0x40);\n-  ins_encode(REX_reg_reg_wide(dst, src), enc_cmov(cop), reg_reg(dst, src));\n+  ins_encode %{\n+    __ cmovq((Assembler::Condition)($cop$$cmpcode), $dst$$Register, $src$$Register);\n+  %}\n@@ -7059,2 +7067,3 @@\n-  opcode(0x0F, 0x40);\n-  ins_encode(REX_reg_mem_wide(dst, src), enc_cmov(cop), reg_mem(dst, src));\n+  ins_encode %{\n+    __ cmovq((Assembler::Condition)($cop$$cmpcode), $dst$$Register, $src$$Address);\n+  %}\n@@ -7193,2 +7202,3 @@\n-  opcode(0x81, 0x00); \/* \/0 id *\/\n-  ins_encode(OpcSErm(dst, src), Con8or32(src));\n+  ins_encode %{\n+    __ addl($dst$$Register, $src$$constant);\n+  %}\n@@ -7231,2 +7241,3 @@\n-  opcode(0x81); \/* Opcode 81 \/0 id *\/\n-  ins_encode(REX_mem(dst), OpcSE(src), RM_opc_mem(0x00, dst), Con8or32(src));\n+  ins_encode %{\n+    __ addl($dst$$Address, $src$$constant);\n+  %}\n@@ -7243,2 +7254,3 @@\n-  opcode(0xFF, 0x00); \/\/ FF \/0\n-  ins_encode(REX_reg(dst), OpcP, reg_opc(dst));\n+  ins_encode %{\n+    __ incrementl($dst$$Register);\n+  %}\n@@ -7270,2 +7282,3 @@\n-  opcode(0xFF, 0x01); \/\/ FF \/1\n-  ins_encode(REX_reg(dst), OpcP, reg_opc(dst));\n+  ins_encode %{\n+    __ decrementl($dst$$Register);\n+  %}\n@@ -7320,2 +7333,3 @@\n-  opcode(0x81, 0x00); \/* \/0 id *\/\n-  ins_encode(OpcSErm_wide(dst, src), Con8or32(src));\n+  ins_encode %{\n+    __ addq($dst$$Register, $src$$constant);\n+  %}\n@@ -7358,3 +7372,3 @@\n-  opcode(0x81); \/* Opcode 81 \/0 id *\/\n-  ins_encode(REX_mem_wide(dst),\n-             OpcSE(src), RM_opc_mem(0x00, dst), Con8or32(src));\n+  ins_encode %{\n+    __ addq($dst$$Address, $src$$constant);\n+  %}\n@@ -7371,2 +7385,3 @@\n-  opcode(0xFF, 0x00); \/\/ FF \/0\n-  ins_encode(REX_reg_wide(dst), OpcP, reg_opc(dst));\n+  ins_encode %{\n+    __ incrementq($dst$$Register);\n+  %}\n@@ -7449,2 +7464,3 @@\n-  opcode(0x81, 0x00); \/* \/0 id *\/\n-  ins_encode(OpcSErm_wide(dst, src), Con8or32(src));\n+  ins_encode %{\n+    __ addq($dst$$Register, $src$$constant);\n+  %}\n@@ -8298,2 +8314,3 @@\n-  opcode(0x0F, 0xAF);\n-  ins_encode(REX_reg_reg_wide(dst, src), OpcP, OpcS, reg_reg(dst, src));\n+  ins_encode %{\n+    __ imulq($dst$$Register, $src$$Register);\n+  %}\n@@ -8310,3 +8327,3 @@\n-  opcode(0x69); \/* 69 \/r id *\/\n-  ins_encode(REX_reg_reg_wide(dst, src),\n-             OpcSE(imm), reg_reg(dst, src), Con8or32(imm));\n+  ins_encode %{\n+    __ imulq($dst$$Register, $src$$Register, $imm$$constant);\n+  %}\n@@ -8323,2 +8340,3 @@\n-  opcode(0x0F, 0xAF);\n-  ins_encode(REX_reg_mem_wide(dst, src), OpcP, OpcS, reg_mem(dst, src));\n+  ins_encode %{\n+    __ imulq($dst$$Register, $src$$Address);\n+  %}\n@@ -8619,2 +8637,3 @@\n-  opcode(0xD1, 0x7); \/* D1 \/7 *\/\n-  ins_encode(REX_reg(dst), OpcP, reg_opc(dst));\n+  ins_encode %{\n+    __ sarl($dst$$Register, $shift$$constant);\n+  %}\n@@ -8643,2 +8662,3 @@\n-  opcode(0xC1, 0x7); \/* C1 \/7 ib *\/\n-  ins_encode(reg_opc_imm(dst, shift));\n+  ins_encode %{\n+    __ sarl($dst$$Register, $shift$$constant);\n+  %}\n@@ -8691,2 +8711,3 @@\n-  opcode(0xD1, 0x5); \/* D1 \/5 *\/\n-  ins_encode(REX_reg(dst), OpcP, reg_opc(dst));\n+  ins_encode %{\n+    __ shrl($dst$$Register, $shift$$constant);\n+  %}\n@@ -8715,2 +8736,3 @@\n-  opcode(0xC1, 0x5); \/* C1 \/5 ib *\/\n-  ins_encode(reg_opc_imm(dst, shift));\n+  ins_encode %{\n+    __ shrl($dst$$Register, $shift$$constant);\n+  %}\n@@ -8837,2 +8859,3 @@\n-  opcode(0xD1, 0x7); \/* D1 \/7 *\/\n-  ins_encode(REX_reg_wide(dst), OpcP, reg_opc(dst));\n+  ins_encode %{\n+    __ sarq($dst$$Register, $shift$$constant);\n+  }\n@@ -8861,2 +8884,3 @@\n-  opcode(0xC1, 0x7); \/* C1 \/7 ib *\/\n-  ins_encode(reg_opc_imm_wide(dst, shift));\n+  ins_encode %{\n+    __ sarq($dst$$Register, $shift$$constant);\n+  %}\n@@ -8910,2 +8934,3 @@\n-  opcode(0xD1, 0x5); \/* D1 \/5 *\/\n-  ins_encode(REX_reg_wide(dst), OpcP, reg_opc(dst ));\n+  ins_encode %{\n+    __ shrq($dst$$Register, $shift$$constant);\n+  }\n@@ -8934,2 +8959,3 @@\n-  opcode(0xC1, 0x5); \/* C1 \/5 ib *\/\n-  ins_encode(reg_opc_imm_wide(dst, shift));\n+  ins_encode %{\n+    __ shrq($dst$$Register, $shift$$constant);\n+  }\n@@ -8939,1 +8965,0 @@\n-\n@@ -9467,2 +9492,3 @@\n-  opcode(0x33);\n-  ins_encode(REX_reg_reg(dst, src), OpcP, reg_reg(dst, src));\n+  ins_encode %{\n+    __ xorl($dst$$Register, $src$$Register);\n+  %}\n@@ -9503,2 +9529,3 @@\n-  opcode(0x33);\n-  ins_encode(REX_reg_mem(dst, src), OpcP, reg_mem(dst, src));\n+  ins_encode %{\n+    __ xorl($dst$$Register, $src$$Address);\n+  %}\n@@ -9877,2 +9904,3 @@\n-  opcode(0x33);\n-  ins_encode(REX_reg_reg_wide(dst, src), OpcP, reg_reg(dst, src));\n+  ins_encode %{\n+    __ xorq($dst$$Register, $src$$Register);\n+  %}\n@@ -9913,2 +9941,3 @@\n-  opcode(0x33);\n-  ins_encode(REX_reg_mem_wide(dst, src), OpcP, reg_mem(dst, src));\n+  ins_encode %{\n+    __ xorq($dst$$Register, $src$$Address);\n+  %}\n@@ -11613,1 +11642,0 @@\n-  opcode(0x85);\n@@ -11805,2 +11833,3 @@\n-  opcode(0x85);\n-  ins_encode(REX_reg_mem_wide(src, mem), OpcP, reg_mem(src, mem));\n+  ins_encode %{\n+    __ testq($src$$Register, $mem$$Address);\n+  %}\n@@ -11815,2 +11844,3 @@\n-  opcode(0x85);\n-  ins_encode(REX_reg_mem_wide(src, mem), OpcP, reg_mem(src, mem));\n+  ins_encode %{\n+    __ testq($src$$Register, $mem$$Address);\n+  %}\n@@ -11877,2 +11907,3 @@\n-  opcode(0x85);\n-  ins_encode(REX_reg_reg_wide(src, src), OpcP, reg_reg(src, src));\n+  ins_encode %{\n+    __ testq($src$$Register, $src$$Register);\n+  %}\n@@ -12521,2 +12552,3 @@\n-  opcode(0xC3);\n-  ins_encode(OpcP);\n+  ins_encode %{\n+    __ ret(0);\n+  %}\n","filename":"src\/hotspot\/cpu\/x86\/x86_64.ad","additions":142,"deletions":110,"binary":false,"changes":252,"status":"modified"}]}