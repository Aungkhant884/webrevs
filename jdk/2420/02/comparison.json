{"files":[{"patch":"@@ -1652,0 +1652,1 @@\n+  InstructionMark im(this);\n","filename":"src\/hotspot\/cpu\/x86\/assembler_x86.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -5033,2 +5033,3 @@\n-  opcode(0x8B);\n-  ins_encode(REX_reg_mem(dst, mem), OpcP, reg_mem(dst, mem));\n+  ins_encode %{\n+    __ movl($dst$$Register, $mem$$Address);\n+  %}\n@@ -5046,2 +5047,3 @@\n-  opcode(0x8B);\n-  ins_encode(REX_reg_mem_wide(dst, mem), OpcP, reg_mem(dst, mem));\n+  ins_encode %{\n+    __ movq($dst$$Register, $mem$$Address);\n+  %}\n@@ -5072,2 +5074,3 @@\n-  opcode(0x8B);\n-  ins_encode(REX_reg_mem_wide(dst, mem), OpcP, reg_mem(dst, mem));\n+  ins_encode %{\n+    __ movq($dst$$Register, $mem$$Address);\n+  %}\n@@ -5368,2 +5371,3 @@\n-  opcode(0x8D);\n-  ins_encode(REX_reg_mem_wide(dst, mem), OpcP, reg_mem(dst, mem));\n+  ins_encode %{\n+    __ leaq($dst$$Register, $mem$$Address);\n+  %}\n@@ -5379,2 +5383,3 @@\n-  opcode(0x8D);\n-  ins_encode(REX_reg_mem_wide(dst, mem), OpcP, reg_mem(dst, mem));\n+  ins_encode %{\n+    __ leaq($dst$$Register, $mem$$Address);\n+  %}\n@@ -5384,11 +5389,0 @@\n-\/\/ instruct leaPIdx(rRegP dst, indIndex mem)\n-\/\/ %{\n-\/\/   match(Set dst mem);\n-\n-\/\/   ins_cost(110);\n-\/\/   format %{ \"leaq    $dst, $mem\\t# ptr idx\" %}\n-\/\/   opcode(0x8D);\n-\/\/   ins_encode(REX_reg_mem_wide(dst, mem), OpcP, reg_mem(dst, mem));\n-\/\/   ins_pipe(ialu_reg_reg_fat);\n-\/\/ %}\n-\n@@ -5401,2 +5395,3 @@\n-  opcode(0x8D);\n-  ins_encode(REX_reg_mem_wide(dst, mem), OpcP, reg_mem(dst, mem));\n+  ins_encode %{\n+    __ leaq($dst$$Register, $mem$$Address);\n+  %}\n@@ -5412,2 +5407,3 @@\n-  opcode(0x8D);\n-  ins_encode(REX_reg_mem_wide(dst, mem), OpcP, reg_mem(dst, mem));\n+  ins_encode %{\n+    __ leaq($dst$$Register, $mem$$Address);\n+  %}\n@@ -5423,2 +5419,3 @@\n-  opcode(0x8D);\n-  ins_encode(REX_reg_mem_wide(dst, mem), OpcP, reg_mem(dst, mem));\n+  ins_encode %{\n+    __ leaq($dst$$Register, $mem$$Address);\n+  %}\n@@ -5434,2 +5431,3 @@\n-  opcode(0x8D);\n-  ins_encode(REX_reg_mem_wide(dst, mem), OpcP, reg_mem(dst, mem));\n+  ins_encode %{\n+    __ leaq($dst$$Register, $mem$$Address);\n+  %}\n@@ -5445,2 +5443,3 @@\n-  opcode(0x8D);\n-  ins_encode(REX_reg_mem_wide(dst, mem), OpcP, reg_mem(dst, mem));\n+  ins_encode %{\n+    __ leaq($dst$$Register, $mem$$Address);\n+  %}\n@@ -5456,2 +5455,3 @@\n-  opcode(0x8D);\n-  ins_encode(REX_reg_mem_wide(dst, mem), OpcP, reg_mem(dst, mem));\n+  ins_encode %{\n+    __ leaq($dst$$Register, $mem$$Address);\n+  %}\n@@ -5481,2 +5481,3 @@\n-  opcode(0x8D);\n-  ins_encode(REX_reg_mem_wide(dst, mem), OpcP, reg_mem(dst, mem));\n+  ins_encode %{\n+    __ leaq($dst$$Register, $mem$$Address);\n+  %}\n@@ -5493,2 +5494,3 @@\n-  opcode(0x8D);\n-  ins_encode(REX_reg_mem_wide(dst, mem), OpcP, reg_mem(dst, mem));\n+  ins_encode %{\n+    __ leaq($dst$$Register, $mem$$Address);\n+  %}\n@@ -5505,2 +5507,3 @@\n-  opcode(0x8D);\n-  ins_encode(REX_reg_mem_wide(dst, mem), OpcP, reg_mem(dst, mem));\n+  ins_encode %{\n+    __ leaq($dst$$Register, $mem$$Address);\n+  %}\n@@ -5517,2 +5520,3 @@\n-  opcode(0x8D);\n-  ins_encode(REX_reg_mem_wide(dst, mem), OpcP, reg_mem(dst, mem));\n+  ins_encode %{\n+    __ leaq($dst$$Register, $mem$$Address);\n+  %}\n@@ -5529,2 +5533,3 @@\n-  opcode(0x8D);\n-  ins_encode(REX_reg_mem_wide(dst, mem), OpcP, reg_mem(dst, mem));\n+  ins_encode %{\n+    __ leaq($dst$$Register, $mem$$Address);\n+  %}\n@@ -5541,2 +5546,3 @@\n-  opcode(0x8D);\n-  ins_encode(REX_reg_mem_wide(dst, mem), OpcP, reg_mem(dst, mem));\n+  ins_encode %{\n+    __ leaq($dst$$Register, $mem$$Address);\n+  %}\n@@ -5553,2 +5559,3 @@\n-  opcode(0x8D);\n-  ins_encode(REX_reg_mem_wide(dst, mem), OpcP, reg_mem(dst, mem));\n+  ins_encode %{\n+    __ leaq($dst$$Register, $mem$$Address);\n+  %}\n@@ -5563,1 +5570,3 @@\n-  ins_encode(load_immI(dst, src));\n+  ins_encode %{\n+    __ movl($dst$$Register, $src$$constant);\n+  %}\n@@ -5574,2 +5583,3 @@\n-  opcode(0x33); \/* + rd *\/\n-  ins_encode(REX_reg_reg(dst, dst), OpcP, reg_reg(dst, dst));\n+  ins_encode %{\n+    __ xorl($dst$$Register, $dst$$Register);\n+  %}\n@@ -5596,2 +5606,3 @@\n-  opcode(0x33); \/* + rd *\/\n-  ins_encode(REX_reg_reg(dst, dst), OpcP, reg_reg(dst, dst));\n+  ins_encode %{\n+    __ xorl($dst$$Register, $dst$$Register);\n+  %}\n@@ -5636,2 +5647,3 @@\n-  opcode(0x33); \/* + rd *\/\n-  ins_encode(REX_reg_reg(dst, dst), OpcP, reg_reg(dst, dst));\n+  ins_encode %{\n+    __ xorl($dst$$Register, $dst$$Register);\n+  %}\n@@ -5734,1 +5746,1 @@\n-    __ xorpd ($dst$$XMMRegister, $dst$$XMMRegister);\n+    __ xorpd($dst$$XMMRegister, $dst$$XMMRegister);\n@@ -5745,2 +5757,3 @@\n-  opcode(0x8B);\n-  ins_encode(REX_reg_mem(dst, src), OpcP, reg_mem(dst, src));\n+  ins_encode %{\n+    __ movl($dst$$Register, Address(rsp, $src$$disp));\n+  %}\n@@ -5756,2 +5769,3 @@\n-  opcode(0x8B);\n-  ins_encode(REX_reg_mem_wide(dst, src), OpcP, reg_mem(dst, src));\n+  ins_encode %{\n+    __ movq($dst$$Register, Address(rsp, $src$$disp));\n+  %}\n@@ -5767,2 +5781,3 @@\n-  opcode(0x8B);\n-  ins_encode(REX_reg_mem_wide(dst, src), OpcP, reg_mem(dst, src));\n+  ins_encode %{\n+    __ movq($dst$$Register, Address(rsp, $src$$disp));\n+  %}\n@@ -5857,2 +5872,3 @@\n-  opcode(0x88);\n-  ins_encode(REX_breg_mem(src, mem), OpcP, reg_mem(src, mem));\n+  ins_encode %{\n+    __ movb($mem$$Address, $src$$Register);\n+  %}\n@@ -5869,2 +5885,3 @@\n-  opcode(0x89);\n-  ins_encode(SizePrefix, REX_reg_mem(src, mem), OpcP, reg_mem(src, mem));\n+  ins_encode %{\n+    __ movw($mem$$Address, $src$$Register);\n+  %}\n@@ -5881,2 +5898,3 @@\n-  opcode(0x89);\n-  ins_encode(REX_reg_mem(src, mem), OpcP, reg_mem(src, mem));\n+  ins_encode %{\n+    __ movl($mem$$Address, $src$$Register);\n+  %}\n@@ -5893,2 +5911,3 @@\n-  opcode(0x89);\n-  ins_encode(REX_reg_mem_wide(src, mem), OpcP, reg_mem(src, mem));\n+  ins_encode %{\n+    __ movq($mem$$Address, $src$$Register);\n+  %}\n@@ -5905,2 +5924,3 @@\n-  opcode(0x89);\n-  ins_encode(REX_reg_mem_wide(src, mem), OpcP, reg_mem(src, mem));\n+  ins_encode %{\n+    __ movq($mem$$Address, $src$$Register);\n+  %}\n@@ -6022,2 +6042,3 @@\n-  opcode(0xC7); \/* C7 \/0 *\/\n-  ins_encode(REX_mem(mem), OpcP, RM_opc_mem(0x00, mem), Con32(src));\n+  ins_encode %{\n+    __ movl($mem$$Address, $src$$constant);\n+  %}\n@@ -6098,2 +6119,3 @@\n-  opcode(0xC6); \/* C6 \/0 *\/\n-  ins_encode(REX_mem(mem), OpcP, RM_opc_mem(0x00, mem), Con8or32(src));\n+  ins_encode %{\n+    __ movb($mem$$Address, $src$$constant);\n+  %}\n@@ -6123,2 +6145,3 @@\n-  opcode(0xC6); \/* C6 \/0 *\/\n-  ins_encode(REX_mem(mem), OpcP, RM_opc_mem(0x00, mem), Con8or32(src));\n+  ins_encode %{\n+    __ movb($mem$$Address, $src$$constant);\n+  %}\n@@ -6211,2 +6234,3 @@\n-  opcode(0x89);\n-  ins_encode(REX_reg_mem(src, dst), OpcP, reg_mem(src, dst));\n+  ins_encode %{\n+    __ movl(Address(rsp, $dst$$disp), $src$$Register);\n+  %}\n@@ -6222,2 +6246,3 @@\n-  opcode(0x89);\n-  ins_encode(REX_reg_mem_wide(src, dst), OpcP, reg_mem(src, dst));\n+  ins_encode %{\n+    __ movq(Address(rsp, $dst$$disp), $src$$Register);\n+  %}\n@@ -6233,2 +6258,3 @@\n-  opcode(0x89);\n-  ins_encode(REX_reg_mem_wide(src, dst), OpcP, reg_mem(src, dst));\n+  ins_encode %{\n+    __ movq(Address(rsp, $dst$$disp), $src$$Register);\n+  %}\n@@ -6308,2 +6334,3 @@\n-  opcode(0x0F, 0xC8);  \/*Opcode 0F \/C8 *\/\n-  ins_encode( REX_reg(dst), OpcP, opc2_reg(dst) );\n+  ins_encode %{\n+    __ bswapl($dst$$Register);\n+  %}\n@@ -6317,2 +6344,3 @@\n-  opcode(0x0F, 0xC8); \/* Opcode 0F \/C8 *\/\n-  ins_encode( REX_reg_wide(dst), OpcP, opc2_reg(dst) );\n+  ins_encode %{\n+    __ bswapq($dst$$Register);\n+  %}\n@@ -6836,2 +6864,3 @@\n-  opcode(0x0F, 0x40);\n-  ins_encode(REX_reg_reg(dst, src), enc_cmov(cop), reg_reg(dst, src));\n+  ins_encode %{\n+    __ cmovl((Assembler::Condition)($cop$$cmpcode), $dst$$Register, $src$$Register);\n+  %}\n@@ -6846,2 +6875,3 @@\n-  opcode(0x0F, 0x40);\n-  ins_encode(REX_reg_reg(dst, src), enc_cmov(cop), reg_reg(dst, src));\n+  ins_encode %{\n+    __ cmovl((Assembler::Condition)($cop$$cmpcode), $dst$$Register, $src$$Register);\n+  %}\n@@ -6865,2 +6895,3 @@\n-  opcode(0x0F, 0x40);\n-  ins_encode(REX_reg_mem(dst, src), enc_cmov(cop), reg_mem(dst, src));\n+  ins_encode %{\n+    __ cmovl((Assembler::Condition)($cop$$cmpcode), $dst$$Register, $src$$Address);\n+  %}\n@@ -6877,2 +6908,3 @@\n-  opcode(0x0F, 0x40);\n-  ins_encode(REX_reg_mem(dst, src), enc_cmov(cop), reg_mem(dst, src));\n+  ins_encode %{\n+    __ cmovl((Assembler::Condition)($cop$$cmpcode), $dst$$Register, $src$$Address);\n+  %}\n@@ -6897,2 +6929,3 @@\n-  opcode(0x0F, 0x40);\n-  ins_encode(REX_reg_reg(dst, src), enc_cmov(cop), reg_reg(dst, src));\n+  ins_encode %{\n+    __ cmovl((Assembler::Condition)($cop$$cmpcode), $dst$$Register, $src$$Register);\n+  %}\n@@ -6909,2 +6942,3 @@\n-  opcode(0x0F, 0x40);\n-  ins_encode(REX_reg_reg(dst, src), enc_cmov(cop), reg_reg(dst, src));\n+  ins_encode %{\n+    __ cmovl((Assembler::Condition)($cop$$cmpcode), $dst$$Register, $src$$Register);\n+  %}\n@@ -6929,2 +6963,3 @@\n-  opcode(0x0F, 0x40);\n-  ins_encode(REX_reg_reg_wide(dst, src), enc_cmov(cop), reg_reg(dst, src));\n+  ins_encode %{\n+    __ cmovq((Assembler::Condition)($cop$$cmpcode), $dst$$Register, $src$$Register);\n+  %}\n@@ -6941,2 +6976,3 @@\n-  opcode(0x0F, 0x40);\n-  ins_encode(REX_reg_reg_wide(dst, src), enc_cmov(cop), reg_reg(dst, src));\n+  ins_encode %{\n+    __ cmovq((Assembler::Condition)($cop$$cmpcode), $dst$$Register, $src$$Register);\n+  %}\n@@ -6987,2 +7023,3 @@\n-  opcode(0x0F, 0x40);\n-  ins_encode(REX_reg_reg_wide(dst, src), enc_cmov(cop), reg_reg(dst, src));\n+  ins_encode %{\n+    __ cmovq((Assembler::Condition)($cop$$cmpcode), $dst$$Register, $src$$Register);\n+  %}\n@@ -6998,2 +7035,3 @@\n-  opcode(0x0F, 0x40);\n-  ins_encode(REX_reg_mem_wide(dst, src), enc_cmov(cop), reg_mem(dst, src));\n+  ins_encode %{\n+    __ cmovq((Assembler::Condition)($cop$$cmpcode), $dst$$Register, $src$$Address);\n+  %}\n@@ -7009,2 +7047,3 @@\n-  opcode(0x0F, 0x40);\n-  ins_encode(REX_reg_reg_wide(dst, src), enc_cmov(cop), reg_reg(dst, src));\n+  ins_encode %{\n+    __ cmovq((Assembler::Condition)($cop$$cmpcode), $dst$$Register, $src$$Register);\n+  %}\n@@ -7028,2 +7067,3 @@\n-  opcode(0x0F, 0x40);\n-  ins_encode(REX_reg_mem_wide(dst, src), enc_cmov(cop), reg_mem(dst, src));\n+  ins_encode %{\n+    __ cmovq((Assembler::Condition)($cop$$cmpcode), $dst$$Register, $src$$Address);\n+  %}\n@@ -7150,2 +7190,3 @@\n-  opcode(0x03);\n-  ins_encode(REX_reg_reg(dst, src), OpcP, reg_reg(dst, src));\n+  ins_encode %{\n+    __ addl($dst$$Register, $src$$Register);\n+  %}\n@@ -7161,2 +7202,3 @@\n-  opcode(0x81, 0x00); \/* \/0 id *\/\n-  ins_encode(OpcSErm(dst, src), Con8or32(src));\n+  ins_encode %{\n+    __ addl($dst$$Register, $src$$constant);\n+  %}\n@@ -7173,2 +7215,3 @@\n-  opcode(0x03);\n-  ins_encode(REX_reg_mem(dst, src), OpcP, reg_mem(dst, src));\n+  ins_encode %{\n+    __ addl($dst$$Register, $src$$Address);\n+  %}\n@@ -7185,2 +7228,3 @@\n-  opcode(0x01); \/* Opcode 01 \/r *\/\n-  ins_encode(REX_reg_mem(src, dst), OpcP, reg_mem(src, dst));\n+  ins_encode %{\n+    __ addl($dst$$Address, $src$$Register);\n+  %}\n@@ -7197,2 +7241,3 @@\n-  opcode(0x81); \/* Opcode 81 \/0 id *\/\n-  ins_encode(REX_mem(dst), OpcSE(src), RM_opc_mem(0x00, dst), Con8or32(src));\n+  ins_encode %{\n+    __ addl($dst$$Address, $src$$constant);\n+  %}\n@@ -7209,2 +7254,3 @@\n-  opcode(0xFF, 0x00); \/\/ FF \/0\n-  ins_encode(REX_reg(dst), OpcP, reg_opc(dst));\n+  ins_encode %{\n+    __ incrementl($dst$$Register);\n+  %}\n@@ -7222,2 +7268,3 @@\n-  opcode(0xFF); \/* Opcode FF \/0 *\/\n-  ins_encode(REX_mem(dst), OpcP, RM_opc_mem(0x00, dst));\n+  ins_encode %{\n+    __ incrementl($dst$$Address);\n+  %}\n@@ -7235,2 +7282,3 @@\n-  opcode(0xFF, 0x01); \/\/ FF \/1\n-  ins_encode(REX_reg(dst), OpcP, reg_opc(dst));\n+  ins_encode %{\n+    __ decrementl($dst$$Register);\n+  %}\n@@ -7249,2 +7297,3 @@\n-  opcode(0xFF); \/* Opcode FF \/1 *\/\n-  ins_encode(REX_mem(dst), OpcP, RM_opc_mem(0x01, dst));\n+  ins_encode %{\n+    __ decrementl($dst$$Address);\n+  %}\n@@ -7260,2 +7309,3 @@\n-  opcode(0x8D); \/* 0x8D \/r *\/\n-  ins_encode(Opcode(0x67), REX_reg_reg(dst, src0), OpcP, reg_lea(dst, src0, src1)); \/\/ XXX\n+  ins_encode %{\n+    __ leal($dst$$Register, Address($src0$$Register, $src1$$constant));\n+  %}\n@@ -7271,2 +7321,3 @@\n-  opcode(0x03);\n-  ins_encode(REX_reg_reg_wide(dst, src), OpcP, reg_reg(dst, src));\n+  ins_encode %{\n+    __ addq($dst$$Register, $src$$Register);\n+  %}\n@@ -7282,2 +7333,3 @@\n-  opcode(0x81, 0x00); \/* \/0 id *\/\n-  ins_encode(OpcSErm_wide(dst, src), Con8or32(src));\n+  ins_encode %{\n+    __ addq($dst$$Register, $src$$constant);\n+  %}\n@@ -7294,2 +7346,3 @@\n-  opcode(0x03);\n-  ins_encode(REX_reg_mem_wide(dst, src), OpcP, reg_mem(dst, src));\n+  ins_encode %{\n+    __ addq($dst$$Register, $src$$Address);\n+  %}\n@@ -7306,2 +7359,3 @@\n-  opcode(0x01); \/* Opcode 01 \/r *\/\n-  ins_encode(REX_reg_mem_wide(src, dst), OpcP, reg_mem(src, dst));\n+  ins_encode %{\n+    __ addq($dst$$Address, $src$$Register);\n+  %}\n@@ -7318,3 +7372,3 @@\n-  opcode(0x81); \/* Opcode 81 \/0 id *\/\n-  ins_encode(REX_mem_wide(dst),\n-             OpcSE(src), RM_opc_mem(0x00, dst), Con8or32(src));\n+  ins_encode %{\n+    __ addq($dst$$Address, $src$$constant);\n+  %}\n@@ -7331,2 +7385,3 @@\n-  opcode(0xFF, 0x00); \/\/ FF \/0\n-  ins_encode(REX_reg_wide(dst), OpcP, reg_opc(dst));\n+  ins_encode %{\n+    __ incrementq($dst$$Register);\n+  %}\n@@ -7344,2 +7399,3 @@\n-  opcode(0xFF); \/* Opcode FF \/0 *\/\n-  ins_encode(REX_mem_wide(dst), OpcP, RM_opc_mem(0x00, dst));\n+  ins_encode %{\n+    __ incrementq($dst$$Address);\n+  %}\n@@ -7357,2 +7413,3 @@\n-  opcode(0xFF, 0x01); \/\/ FF \/1\n-  ins_encode(REX_reg_wide(dst), OpcP, reg_opc(dst));\n+  ins_encode %{\n+    __ decrementq($dst$$Register);\n+  %}\n@@ -7371,2 +7428,3 @@\n-  opcode(0xFF); \/* Opcode FF \/1 *\/\n-  ins_encode(REX_mem_wide(dst), OpcP, RM_opc_mem(0x01, dst));\n+  ins_encode %{\n+    __ decrementq($dst$$Address);\n+  %}\n@@ -7382,2 +7440,3 @@\n-  opcode(0x8D); \/* 0x8D \/r *\/\n-  ins_encode(REX_reg_reg_wide(dst, src0), OpcP, reg_lea(dst, src0, src1)); \/\/ XXX\n+  ins_encode %{\n+    __ leaq($dst$$Register, Address($src0$$Register, $src1$$constant));\n+  %}\n@@ -7393,2 +7452,3 @@\n-  opcode(0x03);\n-  ins_encode(REX_reg_reg_wide(dst, src), OpcP, reg_reg(dst, src));\n+  ins_encode %{\n+    __ addq($dst$$Register, $src$$Register);\n+  %}\n@@ -7404,2 +7464,3 @@\n-  opcode(0x81, 0x00); \/* \/0 id *\/\n-  ins_encode(OpcSErm_wide(dst, src), Con8or32(src));\n+  ins_encode %{\n+    __ addq($dst$$Register, $src$$constant);\n+  %}\n@@ -7417,2 +7478,3 @@\n-  opcode(0x8D); \/* 0x8D \/r *\/\n-  ins_encode(REX_reg_reg_wide(dst, src0), OpcP, reg_lea(dst, src0, src1));\/\/ XXX\n+  ins_encode %{\n+    __ leaq($dst$$Register, Address($src0$$Register, $src1$$constant));\n+  %}\n@@ -7471,2 +7533,3 @@\n-  opcode(0x8B);\n-  ins_encode(REX_reg_mem_wide(dst, mem), OpcP, reg_mem(dst, mem));\n+  ins_encode %{\n+    __ movq($dst$$Register, $mem$$Address);\n+  %}\n@@ -7489,5 +7552,3 @@\n-  opcode(0x0F, 0xB1);\n-  ins_encode(lock_prefix,\n-             REX_reg_mem_wide(newval, heap_top_ptr),\n-             OpcP, OpcS,\n-             reg_mem(newval, heap_top_ptr));\n+  ins_encode %{\n+    __ cmpxchgq($newval$$Register, $heap_top_ptr$$Address);\n+  %}\n@@ -7505,5 +7566,3 @@\n-  opcode(0x0F, 0xB1);\n-  ins_encode(lock_prefix,\n-             REX_reg_mem(newval, mem),\n-             OpcP, OpcS,\n-             reg_mem(newval, mem));\n+  ins_encode %{\n+    __ cmpxchgl($newval$$Register, $mem$$Address);\n+  %}\n@@ -7521,5 +7580,3 @@\n-  opcode(0x0F, 0xB1);\n-  ins_encode(lock_prefix,\n-             REX_reg_mem_wide(newval, mem),\n-             OpcP, OpcS,\n-             reg_mem(newval, mem));\n+  ins_encode %{\n+    __ cmpxchgq($newval$$Register, $mem$$Address);\n+  %}\n@@ -7687,6 +7744,3 @@\n-  opcode(0x0F, 0xB0);\n-  ins_encode(lock_prefix,\n-             REX_breg_mem(newval, mem_ptr),\n-             OpcP, OpcS,\n-             reg_mem(newval, mem_ptr) \/\/ lock cmpxchg\n-             );\n+  ins_encode %{\n+    __ cmpxchgb($newval$$Register, $mem_ptr$$Address);\n+  %}\n@@ -7726,6 +7780,3 @@\n-  opcode(0x0F, 0xB1);\n-  ins_encode(lock_prefix,\n-             REX_reg_mem(newval, mem_ptr),\n-             OpcP, OpcS,\n-             reg_mem(newval, mem_ptr) \/\/ lock cmpxchg\n-             );\n+  ins_encode %{\n+    __ cmpxchgl($newval$$Register, $mem_ptr$$Address);\n+  %}\n@@ -7746,6 +7797,3 @@\n-  opcode(0x0F, 0xB1);\n-  ins_encode(lock_prefix,\n-             REX_reg_mem_wide(newval, mem_ptr),\n-             OpcP, OpcS,\n-             reg_mem(newval, mem_ptr)  \/\/ lock cmpxchg\n-            );\n+  ins_encode %{\n+    __ cmpxchgq($newval$$Register, $mem_ptr$$Address);\n+  %}\n@@ -7764,6 +7812,3 @@\n-  opcode(0x0F, 0xB1);\n-  ins_encode(lock_prefix,\n-             REX_reg_mem(newval, mem_ptr),\n-             OpcP, OpcS,\n-             reg_mem(newval, mem_ptr)  \/\/ lock cmpxchg\n-          );\n+  ins_encode %{\n+    __ cmpxchgl($newval$$Register, $mem_ptr$$Address);\n+  %}\n@@ -7784,6 +7829,3 @@\n-  opcode(0x0F, 0xB1);\n-  ins_encode(lock_prefix,\n-             REX_reg_mem_wide(newval, mem_ptr),\n-             OpcP, OpcS,\n-             reg_mem(newval, mem_ptr)  \/\/ lock cmpxchg\n-          );\n+  ins_encode %{\n+    __ cmpxchgq($newval$$Register, $mem_ptr$$Address);\n+  %}\n@@ -7995,2 +8037,3 @@\n-  opcode(0x2B);\n-  ins_encode(REX_reg_reg(dst, src), OpcP, reg_reg(dst, src));\n+  ins_encode %{\n+    __ subl($dst$$Register, $src$$Register);\n+  %}\n@@ -8006,2 +8049,3 @@\n-  opcode(0x81, 0x05);  \/* Opcode 81 \/5 *\/\n-  ins_encode(OpcSErm(dst, src), Con8or32(src));\n+  ins_encode %{\n+    __ subl($dst$$Register, $src$$constant);\n+  %}\n@@ -8018,2 +8062,3 @@\n-  opcode(0x2B);\n-  ins_encode(REX_reg_mem(dst, src), OpcP, reg_mem(dst, src));\n+  ins_encode %{\n+    __ subl($dst$$Register, $src$$Address);\n+  %}\n@@ -8030,2 +8075,3 @@\n-  opcode(0x29); \/* Opcode 29 \/r *\/\n-  ins_encode(REX_reg_mem(src, dst), OpcP, reg_mem(src, dst));\n+  ins_encode %{\n+    __ subl($dst$$Address, $src$$Register);\n+  %}\n@@ -8042,2 +8088,3 @@\n-  opcode(0x81); \/* Opcode 81 \/5 id *\/\n-  ins_encode(REX_mem(dst), OpcSE(src), RM_opc_mem(0x05, dst), Con8or32(src));\n+  ins_encode %{\n+    __ subl($dst$$Address, $src$$constant);\n+  %}\n@@ -8053,2 +8100,3 @@\n-  opcode(0x2B);\n-  ins_encode(REX_reg_reg_wide(dst, src), OpcP, reg_reg(dst, src));\n+  ins_encode %{\n+    __ subq($dst$$Register, $src$$Register);\n+  %}\n@@ -8064,2 +8112,3 @@\n-  opcode(0x81, 0x05);  \/* Opcode 81 \/5 *\/\n-  ins_encode(OpcSErm_wide(dst, src), Con8or32(src));\n+  ins_encode %{\n+    __ subq($dst$$Register, $src$$constant);\n+  %}\n@@ -8076,2 +8125,3 @@\n-  opcode(0x2B);\n-  ins_encode(REX_reg_mem_wide(dst, src), OpcP, reg_mem(dst, src));\n+  ins_encode %{\n+    __ subq($dst$$Register, $src$$Address);\n+  %}\n@@ -8088,2 +8138,3 @@\n-  opcode(0x29); \/* Opcode 29 \/r *\/\n-  ins_encode(REX_reg_mem_wide(src, dst), OpcP, reg_mem(src, dst));\n+  ins_encode %{\n+    __ subq($dst$$Address, $src$$Register);\n+  %}\n@@ -8100,3 +8151,3 @@\n-  opcode(0x81); \/* Opcode 81 \/5 id *\/\n-  ins_encode(REX_mem_wide(dst),\n-             OpcSE(src), RM_opc_mem(0x05, dst), Con8or32(src));\n+  ins_encode %{\n+    __ subq($dst$$Address, $src$$constant);\n+  %}\n@@ -8114,2 +8165,3 @@\n-  opcode(0x2B);\n-  ins_encode(REX_reg_reg_wide(dst, src), OpcP, reg_reg(dst, src));\n+  ins_encode %{\n+    __ subq($dst$$Register, $src$$Register);\n+  %}\n@@ -8125,2 +8177,3 @@\n-  opcode(0xF7, 0x03);  \/\/ Opcode F7 \/3\n-  ins_encode(REX_reg(dst), OpcP, reg_opc(dst));\n+  ins_encode %{\n+    __ negl($dst$$Register);\n+  %}\n@@ -8159,2 +8212,3 @@\n-  opcode(0xF7, 0x03);  \/\/ Opcode F7 \/3\n-  ins_encode(REX_reg_wide(dst), OpcP, reg_opc(dst));\n+  ins_encode %{\n+    __ negq($dst$$Register);\n+  %}\n@@ -8198,2 +8252,3 @@\n-  opcode(0x0F, 0xAF);\n-  ins_encode(REX_reg_reg(dst, src), OpcP, OpcS, reg_reg(dst, src));\n+  ins_encode %{\n+    __ imull($dst$$Register, $src$$Register);\n+  %}\n@@ -8210,3 +8265,3 @@\n-  opcode(0x69); \/* 69 \/r id *\/\n-  ins_encode(REX_reg_reg(dst, src),\n-             OpcSE(imm), reg_reg(dst, src), Con8or32(imm));\n+  ins_encode %{\n+    __ imull($dst$$Register, $src$$Register, $imm$$constant);\n+  %}\n@@ -8223,2 +8278,3 @@\n-  opcode(0x0F, 0xAF);\n-  ins_encode(REX_reg_mem(dst, src), OpcP, OpcS, reg_mem(dst, src));\n+  ins_encode %{\n+    __ imull($dst$$Register, $src$$Address);\n+  %}\n@@ -8258,2 +8314,3 @@\n-  opcode(0x0F, 0xAF);\n-  ins_encode(REX_reg_reg_wide(dst, src), OpcP, OpcS, reg_reg(dst, src));\n+  ins_encode %{\n+    __ imulq($dst$$Register, $src$$Register);\n+  %}\n@@ -8270,3 +8327,3 @@\n-  opcode(0x69); \/* 69 \/r id *\/\n-  ins_encode(REX_reg_reg_wide(dst, src),\n-             OpcSE(imm), reg_reg(dst, src), Con8or32(imm));\n+  ins_encode %{\n+    __ imulq($dst$$Register, $src$$Register, $imm$$constant);\n+  %}\n@@ -8283,2 +8340,3 @@\n-  opcode(0x0F, 0xAF);\n-  ins_encode(REX_reg_mem_wide(dst, src), OpcP, OpcS, reg_mem(dst, src));\n+  ins_encode %{\n+    __ imulq($dst$$Register, $src$$Address);\n+  %}\n@@ -8579,2 +8637,3 @@\n-  opcode(0xD1, 0x7); \/* D1 \/7 *\/\n-  ins_encode(REX_reg(dst), OpcP, reg_opc(dst));\n+  ins_encode %{\n+    __ sarl($dst$$Register, $shift$$constant);\n+  %}\n@@ -8603,2 +8662,3 @@\n-  opcode(0xC1, 0x7); \/* C1 \/7 ib *\/\n-  ins_encode(reg_opc_imm(dst, shift));\n+  ins_encode %{\n+    __ sarl($dst$$Register, $shift$$constant);\n+  %}\n@@ -8651,2 +8711,3 @@\n-  opcode(0xD1, 0x5); \/* D1 \/5 *\/\n-  ins_encode(REX_reg(dst), OpcP, reg_opc(dst));\n+  ins_encode %{\n+    __ shrl($dst$$Register, $shift$$constant);\n+  %}\n@@ -8675,2 +8736,3 @@\n-  opcode(0xC1, 0x5); \/* C1 \/5 ib *\/\n-  ins_encode(reg_opc_imm(dst, shift));\n+  ins_encode %{\n+    __ shrl($dst$$Register, $shift$$constant);\n+  %}\n@@ -8797,2 +8859,3 @@\n-  opcode(0xD1, 0x7); \/* D1 \/7 *\/\n-  ins_encode(REX_reg_wide(dst), OpcP, reg_opc(dst));\n+  ins_encode %{\n+    __ sarq($dst$$Register, $shift$$constant);\n+  }\n@@ -8821,2 +8884,3 @@\n-  opcode(0xC1, 0x7); \/* C1 \/7 ib *\/\n-  ins_encode(reg_opc_imm_wide(dst, shift));\n+  ins_encode %{\n+    __ sarq($dst$$Register, $shift$$constant);\n+  %}\n@@ -8870,2 +8934,3 @@\n-  opcode(0xD1, 0x5); \/* D1 \/5 *\/\n-  ins_encode(REX_reg_wide(dst), OpcP, reg_opc(dst ));\n+  ins_encode %{\n+    __ shrq($dst$$Register, $shift$$constant);\n+  }\n@@ -8894,2 +8959,3 @@\n-  opcode(0xC1, 0x5); \/* C1 \/5 ib *\/\n-  ins_encode(reg_opc_imm_wide(dst, shift));\n+  ins_encode %{\n+    __ shrq($dst$$Register, $shift$$constant);\n+  }\n@@ -8899,1 +8965,0 @@\n-\n@@ -9107,2 +9172,3 @@\n-  opcode(0x23);\n-  ins_encode(REX_reg_reg(dst, src), OpcP, reg_reg(dst, src));\n+  ins_encode %{\n+    __ andl($dst$$Register, $src$$Register);\n+  %}\n@@ -9176,2 +9242,3 @@\n-  opcode(0x23);\n-  ins_encode(REX_reg_mem(dst, src), OpcP, reg_mem(dst, src));\n+  ins_encode %{\n+    __ andl($dst$$Register, $src$$Address);\n+  %}\n@@ -9344,2 +9411,3 @@\n-  opcode(0x0B);\n-  ins_encode(REX_reg_reg(dst, src), OpcP, reg_reg(dst, src));\n+  ins_encode %{\n+    __ orl($dst$$Register, $src$$Register);\n+  %}\n@@ -9356,2 +9424,3 @@\n-  opcode(0x81, 0x01); \/* Opcode 81 \/1 id *\/\n-  ins_encode(OpcSErm(dst, src), Con8or32(src));\n+  ins_encode %{\n+    __ orl($dst$$Register, $src$$constant);\n+  %}\n@@ -9369,2 +9438,3 @@\n-  opcode(0x0B);\n-  ins_encode(REX_reg_mem(dst, src), OpcP, reg_mem(dst, src));\n+  ins_encode %{\n+    __ orl($dst$$Register, $src$$Address);\n+  %}\n@@ -9394,2 +9464,3 @@\n-  opcode(0x09); \/* Opcode 09 \/r *\/\n-  ins_encode(REX_reg_mem(src, dst), OpcP, reg_mem(src, dst));\n+  ins_encode %{\n+    __ orl($dst$$Address, $src$$Register);\n+  %}\n@@ -9407,3 +9478,3 @@\n-  opcode(0x81, 0x1); \/* Opcode 81 \/1 id *\/\n-  ins_encode(REX_mem(dst), OpcSE(src),\n-             RM_opc_mem(secondary, dst), Con8or32(src));\n+  ins_encode %{\n+    __ orl($dst$$Address, $src$$constant);\n+  %}\n@@ -9421,2 +9492,3 @@\n-  opcode(0x33);\n-  ins_encode(REX_reg_reg(dst, src), OpcP, reg_reg(dst, src));\n+  ins_encode %{\n+    __ xorl($dst$$Register, $src$$Register);\n+  %}\n@@ -9457,2 +9529,3 @@\n-  opcode(0x33);\n-  ins_encode(REX_reg_mem(dst, src), OpcP, reg_mem(dst, src));\n+  ins_encode %{\n+    __ xorl($dst$$Register, $src$$Address);\n+  %}\n@@ -9512,2 +9585,3 @@\n-  opcode(0x23);\n-  ins_encode(REX_reg_reg_wide(dst, src), OpcP, reg_reg(dst, src));\n+  ins_encode %{\n+    __ andq($dst$$Register, $src$$Register);\n+  %}\n@@ -9559,2 +9633,3 @@\n-  opcode(0x23);\n-  ins_encode(REX_reg_mem_wide(dst, src), OpcP, reg_mem(dst, src));\n+  ins_encode %{\n+    __ andq($dst$$Register, $src$$Address);\n+  %}\n@@ -9732,2 +9807,3 @@\n-  opcode(0x0B);\n-  ins_encode(REX_reg_reg_wide(dst, src), OpcP, reg_reg(dst, src));\n+  ins_encode %{\n+    __ orq($dst$$Register, $src$$Register);\n+  %}\n@@ -9743,2 +9819,3 @@\n-  opcode(0x0B);\n-  ins_encode(REX_reg_reg_wide(dst, src), OpcP, reg_reg(dst, src));\n+  ins_encode %{\n+    __ orq($dst$$Register, $src$$Register);\n+  %}\n@@ -9769,2 +9846,3 @@\n-  opcode(0x0B);\n-  ins_encode(REX_reg_mem_wide(dst, src), OpcP, reg_mem(dst, src));\n+  ins_encode %{\n+    __ orq($dst$$Register, $src$$Address);\n+  %}\n@@ -9826,2 +9904,3 @@\n-  opcode(0x33);\n-  ins_encode(REX_reg_reg_wide(dst, src), OpcP, reg_reg(dst, src));\n+  ins_encode %{\n+    __ xorq($dst$$Register, $src$$Register);\n+  %}\n@@ -9862,2 +9941,3 @@\n-  opcode(0x33);\n-  ins_encode(REX_reg_mem_wide(dst, src), OpcP, reg_mem(dst, src));\n+  ins_encode %{\n+    __ xorq($dst$$Register, $src$$Address);\n+  %}\n@@ -11386,2 +11466,3 @@\n-  opcode(0x3B);  \/* Opcode 3B \/r *\/\n-  ins_encode(REX_reg_reg(op1, op2), OpcP, reg_reg(op1, op2));\n+  ins_encode %{\n+    __ cmpl($op1$$Register, $op2$$Register);\n+  %}\n@@ -11407,2 +11488,3 @@\n-  opcode(0x3B); \/* Opcode 3B \/r *\/\n-  ins_encode(REX_reg_mem(op1, op2), OpcP, reg_mem(op1, op2));\n+  ins_encode %{\n+    __ cmpl($op1$$Register, $op2$$Address);\n+  %}\n@@ -11417,2 +11499,3 @@\n-  opcode(0x85);\n-  ins_encode(REX_reg_reg(src, src), OpcP, reg_reg(src, src));\n+  ins_encode %{\n+    __ testl($src$$Register, $src$$Register);\n+  %}\n@@ -11437,2 +11520,3 @@\n-  opcode(0x85);\n-  ins_encode(REX_reg_mem(src, mem), OpcP, reg_mem(src, mem));\n+  ins_encode %{\n+    __ testl($src$$Register, $mem$$Address);\n+  %}\n@@ -11449,2 +11533,3 @@\n-  opcode(0x3B); \/* Opcode 3B \/r *\/\n-  ins_encode(REX_reg_reg(op1, op2), OpcP, reg_reg(op1, op2));\n+  ins_encode %{\n+    __ cmpl($op1$$Register, $op2$$Register);\n+  %}\n@@ -11470,2 +11555,3 @@\n-  opcode(0x3B); \/* Opcode 3B \/r *\/\n-  ins_encode(REX_reg_mem(op1, op2), OpcP, reg_mem(op1, op2));\n+  ins_encode %{\n+    __ cmpl($op1$$Register, $op2$$Address);\n+  %}\n@@ -11491,2 +11577,3 @@\n-  opcode(0x85);\n-  ins_encode(REX_reg_reg(src, src), OpcP, reg_reg(src, src));\n+  ins_encode %{\n+    __ testl($src$$Register, $src$$Register);\n+  %}\n@@ -11501,2 +11588,3 @@\n-  opcode(0x3B); \/* Opcode 3B \/r *\/\n-  ins_encode(REX_reg_reg_wide(op1, op2), OpcP, reg_reg(op1, op2));\n+  ins_encode %{\n+    __ cmpq($op1$$Register, $op2$$Register);\n+  %}\n@@ -11513,2 +11601,3 @@\n-  opcode(0x3B); \/* Opcode 3B \/r *\/\n-  ins_encode(REX_reg_mem_wide(op1, op2), OpcP, reg_mem(op1, op2));\n+  ins_encode %{\n+    __ cmpq($op1$$Register, $op2$$Address);\n+  %}\n@@ -11540,2 +11629,3 @@\n-  opcode(0x3B); \/* Opcode 3B \/r *\/\n-  ins_encode(REX_reg_mem_wide(op1, op2), OpcP, reg_mem(op1, op2));\n+  ins_encode %{\n+    __ cmpq($op1$$Register, $op2$$Address);\n+  %}\n@@ -11552,2 +11642,3 @@\n-  opcode(0x85);\n-  ins_encode(REX_reg_reg_wide(src, src), OpcP, reg_reg(src, src));\n+  ins_encode %{\n+    __ testq($src$$Register, $src$$Register);\n+  %}\n@@ -11689,2 +11780,3 @@\n-  opcode(0x3B);  \/* Opcode 3B \/r *\/\n-  ins_encode(REX_reg_reg_wide(op1, op2), OpcP, reg_reg(op1, op2));\n+  ins_encode %{\n+    __ cmpq($op1$$Register, $op2$$Register);\n+  %}\n@@ -11709,2 +11801,3 @@\n-  opcode(0x3B); \/* Opcode 3B \/r *\/\n-  ins_encode(REX_reg_mem_wide(op1, op2), OpcP, reg_mem(op1, op2));\n+  ins_encode %{\n+    __ cmpq($op1$$Register, $op2$$Address);\n+  %}\n@@ -11719,2 +11812,3 @@\n-  opcode(0x85);\n-  ins_encode(REX_reg_reg_wide(src, src), OpcP, reg_reg(src, src));\n+  ins_encode %{\n+    __ testq($src$$Register, $src$$Register);\n+  %}\n@@ -11739,2 +11833,3 @@\n-  opcode(0x85);\n-  ins_encode(REX_reg_mem_wide(src, mem), OpcP, reg_mem(src, mem));\n+  ins_encode %{\n+    __ testq($src$$Register, $mem$$Address);\n+  %}\n@@ -11749,2 +11844,3 @@\n-  opcode(0x85);\n-  ins_encode(REX_reg_mem_wide(src, mem), OpcP, reg_mem(src, mem));\n+  ins_encode %{\n+    __ testq($src$$Register, $mem$$Address);\n+  %}\n@@ -11779,2 +11875,3 @@\n-  opcode(0x3B);  \/* Opcode 3B \/r *\/\n-  ins_encode(REX_reg_reg_wide(op1, op2), OpcP, reg_reg(op1, op2));\n+  ins_encode %{\n+    __ cmpq($op1$$Register, $op2$$Register);\n+  %}\n@@ -11799,2 +11896,3 @@\n-  opcode(0x3B); \/* Opcode 3B \/r *\/\n-  ins_encode(REX_reg_mem_wide(op1, op2), OpcP, reg_mem(op1, op2));\n+  ins_encode %{\n+    __ cmpq($op1$$Register, $op2$$Address);\n+  %}\n@@ -11809,2 +11907,3 @@\n-  opcode(0x85);\n-  ins_encode(REX_reg_reg_wide(src, src), OpcP, reg_reg(src, src));\n+  ins_encode %{\n+    __ testq($src$$Register, $src$$Register);\n+  %}\n@@ -12453,2 +12552,3 @@\n-  opcode(0xC3);\n-  ins_encode(OpcP);\n+  ins_encode %{\n+    __ ret(0);\n+  %}\n","filename":"src\/hotspot\/cpu\/x86\/x86_64.ad","additions":436,"deletions":336,"binary":false,"changes":772,"status":"modified"}]}