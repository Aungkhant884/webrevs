{"files":[{"patch":"@@ -1850,0 +1850,3 @@\n+    MacroAssembler _masm(&cbuf);\n+    Label normal;\n+    Label done;\n@@ -1852,5 +1855,1 @@\n-    emit_opcode(cbuf, 0x3d);\n-    emit_d8(cbuf, 0x00);\n-    emit_d8(cbuf, 0x00);\n-    emit_d8(cbuf, 0x00);\n-    emit_d8(cbuf, 0x80);\n+    __ cmp(as_Register(RAX_enc), 0x80000000);\n@@ -1859,2 +1858,1 @@\n-    emit_opcode(cbuf, 0x75);\n-    emit_d8(cbuf, $div$$reg < 8 ? 0x07 : 0x08);\n+    __ jccb(Assembler::notEqual, normal);\n@@ -1863,2 +1861,1 @@\n-    emit_opcode(cbuf, 0x33);\n-    emit_d8(cbuf, 0xD2);\n+    __ xorl(as_Register(RDX_enc), as_Register(RDX_enc));\n@@ -1867,6 +1864,1 @@\n-    if ($div$$reg >= 8) {\n-      emit_opcode(cbuf, Assembler::REX_B);\n-    }\n-    emit_opcode(cbuf, 0x83);\n-    emit_rm(cbuf, 0x3, 0x7, $div$$reg & 7);\n-    emit_d8(cbuf, 0xFF);\n+    __ cmpl($div$$Register, -1);\n@@ -1875,2 +1867,1 @@\n-    emit_opcode(cbuf, 0x74);\n-    emit_d8(cbuf, $div$$reg < 8 ? 0x03 : 0x04);\n+    __ jccb(Assembler::equal, done);\n@@ -1880,1 +1871,2 @@\n-    emit_opcode(cbuf, 0x99);\n+    __ bind(normal);\n+    __ cdql();\n@@ -1882,1 +1874,1 @@\n-    \/\/ idivl (note: must be emitted by the user of this rule)\n+    \/\/ idivl\n@@ -1884,0 +1876,2 @@\n+    __ idivl($div$$Register);\n+    __ bind(done);\n@@ -1912,0 +1906,3 @@\n+    MacroAssembler _masm(&cbuf);\n+    Label normal;\n+    Label done;\n@@ -1914,10 +1911,1 @@\n-    emit_opcode(cbuf, Assembler::REX_W);\n-    emit_opcode(cbuf, 0xBA);\n-    emit_d8(cbuf, 0x00);\n-    emit_d8(cbuf, 0x00);\n-    emit_d8(cbuf, 0x00);\n-    emit_d8(cbuf, 0x00);\n-    emit_d8(cbuf, 0x00);\n-    emit_d8(cbuf, 0x00);\n-    emit_d8(cbuf, 0x00);\n-    emit_d8(cbuf, 0x80);\n+    __ mov64(as_Register(RDX_enc), 0x8000000000000000);\n@@ -1926,3 +1914,1 @@\n-    emit_opcode(cbuf, Assembler::REX_W);\n-    emit_opcode(cbuf, 0x39);\n-    emit_d8(cbuf, 0xD0);\n+    __ cmpq(as_Register(RAX_enc), as_Register(RDX_enc));\n@@ -1931,2 +1917,1 @@\n-    emit_opcode(cbuf, 0x75);\n-    emit_d8(cbuf, 0x08);\n+    __ jccb(Assembler::notEqual, normal);\n@@ -1935,2 +1920,1 @@\n-    emit_opcode(cbuf, 0x33);\n-    emit_d8(cbuf, 0xD2);\n+    __ xorl(as_Register(RDX_enc), as_Register(RDX_enc));\n@@ -1939,4 +1923,1 @@\n-    emit_opcode(cbuf, $div$$reg < 8 ? Assembler::REX_W : Assembler::REX_WB);\n-    emit_opcode(cbuf, 0x83);\n-    emit_rm(cbuf, 0x3, 0x7, $div$$reg & 7);\n-    emit_d8(cbuf, 0xFF);\n+    __ cmpq($div$$Register, -1);\n@@ -1945,2 +1926,1 @@\n-    emit_opcode(cbuf, 0x74);\n-    emit_d8(cbuf, 0x05);\n+    __ jccb(Assembler::equal, done);\n@@ -1950,2 +1930,2 @@\n-    emit_opcode(cbuf, Assembler::REX_W);\n-    emit_opcode(cbuf, 0x99);\n+    __ bind(normal);\n+    __ cdqq();\n@@ -1955,0 +1935,2 @@\n+    __ idivq($div$$Register);\n+    __ bind(done);\n@@ -8391,3 +8373,1 @@\n-  ins_encode %{\n-    __ corrected_idivl($div$$Register);\n-  %}\n+  ins_encode(cdql_enc(div));\n@@ -8413,3 +8393,1 @@\n-  ins_encode %{\n-    __ corrected_idivq($div$$Register);\n-  %}\n+  ins_encode(cdqq_enc(div));\n@@ -8435,3 +8413,1 @@\n-  ins_encode %{\n-    __ corrected_idivl($div$$Register);\n-  %}\n+  ins_encode(cdql_enc(div));\n@@ -8458,3 +8434,1 @@\n-  ins_encode %{\n-    __ corrected_idivq($div$$Register);\n-  %}\n+  ins_encode(cdqq_enc(div));\n@@ -8543,3 +8517,1 @@\n-  ins_encode %{\n-    __ corrected_idivl($div$$Register);\n-  %}\n+  ins_encode(cdql_enc(div));\n@@ -8565,3 +8537,1 @@\n-  ins_encode %{\n-    __ corrected_idivq($div$$Register);\n-  %}\n+  ins_encode(cdqq_enc(div));\n","filename":"src\/hotspot\/cpu\/x86\/x86_64.ad","additions":32,"deletions":62,"binary":false,"changes":94,"status":"modified"}]}