{"files":[{"patch":"@@ -5214,0 +5214,23 @@\n+void Assembler::shrl(Address dst) {\n+  InstructionMark im(this);\n+  prefix(dst);\n+  emit_int8((unsigned char)0xD3);\n+  emit_operand(as_Register(5), dst);\n+}\n+\n+void Assembler::shrl(Address dst, int imm8) {\n+  InstructionMark im(this);\n+  assert(isShiftCount(imm8), \"illegal shift count\");\n+  prefix(dst);\n+  if (imm8 == 1) {\n+    emit_int8((unsigned char)0xD1);\n+    emit_operand(as_Register(5), dst);\n+  }\n+  else {\n+    emit_int8((unsigned char)0xC1);\n+    emit_operand(as_Register(5), dst);\n+    emit_int8(imm8);\n+  }\n+}\n+\n+\n@@ -10498,0 +10521,1 @@\n+#ifdef _LP64\n@@ -10567,0 +10591,1 @@\n+#endif\n@@ -10616,0 +10641,19 @@\n+void Assembler::shrq(Address dst) {\n+  InstructionMark im(this);\n+  emit_int16(get_prefixq(dst), (unsigned char)0xD3);\n+  emit_operand(as_Register(5), dst);\n+}\n+\n+void Assembler::shrq(Address dst, int imm8) {\n+  InstructionMark im(this);\n+  assert(isShiftCount(imm8), \"illegal shift count\");\n+  if (imm8 == 1) {\n+    emit_int16(get_prefixq(dst), (unsigned char)0xD1);\n+    emit_operand(as_Register(5), dst);\n+  }\n+  else {\n+    emit_int16(get_prefixq(dst), (unsigned char)0xC1);\n+    emit_operand(as_Register(5), dst);\n+  }\n+}\n+\n","filename":"src\/hotspot\/cpu\/x86\/assembler_x86.cpp","additions":44,"deletions":0,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -1921,7 +1921,0 @@\n-#ifdef _LP64\n-  void salq(Register dst, int imm8);\n-  void salq(Register dst);\n-  void salq(Address dst, int imm8);\n-  void salq(Address dst);\n-#endif\n-\n@@ -1934,0 +1927,5 @@\n+  void salq(Register dst, int imm8);\n+  void salq(Register dst);\n+  void salq(Address dst, int imm8);\n+  void salq(Address dst);\n+\n@@ -1981,0 +1979,2 @@\n+  void shrl(Address dst);\n+  void shrl(Address dst, int imm8);\n@@ -1984,0 +1984,2 @@\n+  void shrq(Address dst);\n+  void shrq(Address dst, int imm8);\n","filename":"src\/hotspot\/cpu\/x86\/assembler_x86.hpp","additions":9,"deletions":7,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -8669,2 +8669,3 @@\n-  opcode(0xD1, 0x5); \/* D1 \/5 *\/\n-  ins_encode(REX_mem(dst), OpcP, RM_opc_mem(secondary, dst));\n+  ins_encode %{\n+    __ shrl($dst$$Address, $shift$$constant);\n+  %}\n@@ -8694,2 +8695,3 @@\n-  opcode(0xC1, 0x5); \/* C1 \/5 ib *\/\n-  ins_encode(REX_mem(dst), OpcP, RM_opc_mem(secondary, dst), Con8or32(shift));\n+  ins_encode %{\n+    __ shrl($dst$$Address, $shift$$constant);\n+  %}\n@@ -8718,2 +8720,3 @@\n-  opcode(0xD3, 0x5); \/* D3 \/5 *\/\n-  ins_encode(REX_mem(dst), OpcP, RM_opc_mem(secondary, dst));\n+  ins_encode %{\n+    __ shrl($dst$$Address);\n+  %}\n@@ -8900,2 +8903,3 @@\n-  opcode(0xD1, 0x5); \/* D1 \/5 *\/\n-  ins_encode(REX_mem_wide(dst), OpcP, RM_opc_mem(secondary, dst));\n+  ins_encode %{\n+    __ shrq($dst$$Address, $shift$$constant);\n+  %}\n@@ -8925,3 +8929,3 @@\n-  opcode(0xC1, 0x5); \/* C1 \/5 ib *\/\n-  ins_encode(REX_mem_wide(dst), OpcP,\n-             RM_opc_mem(secondary, dst), Con8or32(shift));\n+  ins_encode %{\n+    __ shrq($dst$$Address, $shift$$constant);\n+  %}\n@@ -8938,2 +8942,3 @@\n-  opcode(0xD3, 0x5); \/* D3 \/5 *\/\n-  ins_encode(REX_reg_wide(dst), OpcP, reg_opc(dst));\n+  ins_encode %{\n+    __ shrq($dst$$Register);\n+  %}\n@@ -8950,2 +8955,3 @@\n-  opcode(0xD3, 0x5); \/* D3 \/5 *\/\n-  ins_encode(REX_mem_wide(dst), OpcP, RM_opc_mem(secondary, dst));\n+  ins_encode %{\n+    __ shrq($dst$$Address);\n+  %}\n@@ -9137,2 +9143,3 @@\n-  opcode(0x0F, 0xB6);\n-  ins_encode(REX_reg_breg(dst, dst), OpcP, OpcS, reg_reg(dst, dst));\n+  ins_encode %{\n+    __ movzbl($dst$$Register, $dst$$Register);\n+  %}\n@@ -9148,2 +9155,3 @@\n-  opcode(0x0F, 0xB6);\n-  ins_encode(REX_reg_breg(dst, src), OpcP, OpcS, reg_reg(dst, src));\n+  ins_encode %{\n+    __ movzbl($dst$$Register, $src$$Register);\n+  %}\n@@ -9159,2 +9167,3 @@\n-  opcode(0x0F, 0xB7);\n-  ins_encode(REX_reg_reg(dst, dst), OpcP, OpcS, reg_reg(dst, dst));\n+  ins_encode %{\n+    __ movzwl($dst$$Register, $dst$$Register);\n+  %}\n@@ -9170,2 +9179,3 @@\n-  opcode(0x0F, 0xB7);\n-  ins_encode(REX_reg_reg(dst, src), OpcP, OpcS, reg_reg(dst, src));\n+  ins_encode %{\n+    __ movzwl($dst$$Register, $src$$Register);\n+  %}\n@@ -9182,2 +9192,3 @@\n-  opcode(0x81, 0x04); \/* Opcode 81 \/4 *\/\n-  ins_encode(OpcSErm(dst, src), Con8or32(src));\n+  ins_encode %{\n+    __ andl($dst$$Register, $src$$constant);\n+  %}\n@@ -9234,3 +9245,3 @@\n-  opcode(0x81, 0x4); \/* Opcode 81 \/4 id *\/\n-  ins_encode(REX_mem(dst), OpcSE(src),\n-             RM_opc_mem(secondary, dst), Con8or32(src));\n+  ins_encode %{\n+    __ andl($dst$$Address, $src$$constant);\n+  %}\n@@ -9550,2 +9561,3 @@\n-  opcode(0x0F, 0xB6);\n-  ins_encode(REX_reg_reg_wide(dst, dst), OpcP, OpcS, reg_reg(dst, dst));\n+  ins_encode %{\n+    __ movzbq($dst$$Register, $dst$$Register);\n+  %}\n@@ -9561,2 +9573,3 @@\n-  opcode(0x0F, 0xB7);\n-  ins_encode(REX_reg_reg_wide(dst, dst), OpcP, OpcS, reg_reg(dst, dst));\n+  ins_encode %{\n+    __ movzwq($dst$$Register, $dst$$Register);\n+  %}\n@@ -9573,2 +9586,3 @@\n-  opcode(0x81, 0x04); \/* Opcode 81 \/4 *\/\n-  ins_encode(OpcSErm_wide(dst, src), Con8or32(src));\n+  ins_encode %{\n+    __ andq($dst$$Register, $src$$constant);\n+  %}\n@@ -9613,3 +9627,3 @@\n-  opcode(0x81, 0x4); \/* Opcode 81 \/4 id *\/\n-  ins_encode(REX_mem_wide(dst), OpcSE(src),\n-             RM_opc_mem(secondary, dst), Con8or32(src));\n+  ins_encode %{\n+    __ andq($dst$$Address, $src$$constant);\n+  %}\n@@ -9786,2 +9800,3 @@\n-  opcode(0x81, 0x01); \/* Opcode 81 \/1 id *\/\n-  ins_encode(OpcSErm_wide(dst, src), Con8or32(src));\n+  ins_encode %{\n+    __ orq($dst$$Register, $src$$constant);\n+  %}\n@@ -9826,3 +9841,3 @@\n-  opcode(0x81, 0x1); \/* Opcode 81 \/1 id *\/\n-  ins_encode(REX_mem_wide(dst), OpcSE(src),\n-             RM_opc_mem(secondary, dst), Con8or32(src));\n+  ins_encode %{\n+    __ orq($dst$$Address, $src$$constant);\n+  %}\n","filename":"src\/hotspot\/cpu\/x86\/x86_64.ad","additions":57,"deletions":42,"binary":false,"changes":99,"status":"modified"}]}