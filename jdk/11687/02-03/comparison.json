{"files":[{"patch":"@@ -133,0 +133,6 @@\n+\n+    public static final String ABS_V = PREFIX + \"ABS_V\" + POSTFIX;\n+    static {\n+        beforeMatchingNameRegex(ABS_V, \"AbsV(B|S|I|L|F|D)\");\n+    }\n+\n@@ -148,0 +154,5 @@\n+    public static final String ADD_V = PREFIX + \"ADD_V\" + POSTFIX;\n+    static {\n+        beforeMatchingNameRegex(ADD_V, \"AddV(B|S|I|L|F|D)\");\n+    }\n+\n@@ -363,0 +374,5 @@\n+    public static final String DIV_V = PREFIX + \"DIV_V\" + POSTFIX;\n+    static {\n+        beforeMatchingNameRegex(DIV_V, \"DivV(F|D)\");\n+    }\n+\n@@ -390,0 +406,5 @@\n+    public static final String FMA_V = PREFIX + \"FMA_V\" + POSTFIX;\n+    static {\n+        beforeMatchingNameRegex(FMA_V, \"FmaV(F|D)\");\n+    }\n+\n@@ -591,0 +612,5 @@\n+    public static final String LSHIFT_V = PREFIX + \"LSHIFT_V\" + POSTFIX;\n+    static {\n+        beforeMatchingNameRegex(LSHIFT_V, \"LShiftV(B|S|I|L)\");\n+    }\n+\n@@ -661,0 +687,5 @@\n+    public static final String MUL_V = PREFIX + \"MUL_V\" + POSTFIX;\n+    static {\n+        beforeMatchingNameRegex(MUL_V, \"MulV(B|S|I|L|F|D)\");\n+    }\n+\n@@ -676,0 +707,5 @@\n+    public static final String NEG_V = PREFIX + \"NEG_V\" + POSTFIX;\n+    static {\n+        beforeMatchingNameRegex(NEG_V, \"NegV(F|D)\");\n+    }\n+\n@@ -712,0 +748,5 @@\n+    public static final String POPCOUNT_VI = PREFIX + \"POPCOUNT_VI\" + POSTFIX;\n+    static {\n+        superWordNodes(POPCOUNT_VI, \"PopCountVI\");\n+    }\n+\n@@ -745,0 +786,48 @@\n+    public static final String REPLICATE_B = PREFIX + \"REPLICATE_B\" + POSTFIX;\n+    static {\n+        String regex = START + \"ReplicateB\" + MID + END;\n+        IR_NODE_MAPPINGS.put(REPLICATE_B, new SinglePhaseRangeEntry(CompilePhase.PRINT_IDEAL, regex,\n+                                                                    CompilePhase.AFTER_CLOOPS,\n+                                                                    CompilePhase.BEFORE_MATCHING));\n+    }\n+\n+    public static final String REPLICATE_S = PREFIX + \"REPLICATE_S\" + POSTFIX;\n+    static {\n+        String regex = START + \"ReplicateS\" + MID + END;\n+        IR_NODE_MAPPINGS.put(REPLICATE_S, new SinglePhaseRangeEntry(CompilePhase.PRINT_IDEAL, regex,\n+                                                                    CompilePhase.AFTER_CLOOPS,\n+                                                                    CompilePhase.BEFORE_MATCHING));\n+    }\n+\n+    public static final String REPLICATE_I = PREFIX + \"REPLICATE_I\" + POSTFIX;\n+    static {\n+        String regex = START + \"ReplicateI\" + MID + END;\n+        IR_NODE_MAPPINGS.put(REPLICATE_I, new SinglePhaseRangeEntry(CompilePhase.PRINT_IDEAL, regex,\n+                                                                    CompilePhase.AFTER_CLOOPS,\n+                                                                    CompilePhase.BEFORE_MATCHING));\n+    }\n+\n+    public static final String REPLICATE_L = PREFIX + \"REPLICATE_L\" + POSTFIX;\n+    static {\n+        String regex = START + \"ReplicateL\" + MID + END;\n+        IR_NODE_MAPPINGS.put(REPLICATE_L, new SinglePhaseRangeEntry(CompilePhase.PRINT_IDEAL, regex,\n+                                                                    CompilePhase.AFTER_CLOOPS,\n+                                                                    CompilePhase.BEFORE_MATCHING));\n+    }\n+\n+    public static final String REPLICATE_F = PREFIX + \"REPLICATE_F\" + POSTFIX;\n+    static {\n+        String regex = START + \"ReplicateF\" + MID + END;\n+        IR_NODE_MAPPINGS.put(REPLICATE_F, new SinglePhaseRangeEntry(CompilePhase.PRINT_IDEAL, regex,\n+                                                                    CompilePhase.AFTER_CLOOPS,\n+                                                                    CompilePhase.BEFORE_MATCHING));\n+    }\n+\n+    public static final String REPLICATE_D = PREFIX + \"REPLICATE_D\" + POSTFIX;\n+    static {\n+        String regex = START + \"ReplicateD\" + MID + END;\n+        IR_NODE_MAPPINGS.put(REPLICATE_D, new SinglePhaseRangeEntry(CompilePhase.PRINT_IDEAL, regex,\n+                                                                    CompilePhase.AFTER_CLOOPS,\n+                                                                    CompilePhase.BEFORE_MATCHING));\n+    }\n+\n@@ -785,0 +874,15 @@\n+    public static final String ROTATE_LEFT_V = PREFIX + \"ROTATE_LEFT_V\" + POSTFIX;\n+    static {\n+        beforeMatchingNameRegex(ROTATE_LEFT_V, \"RotateLeftV\");\n+    }\n+\n+    public static final String ROTATE_RIGHT_V = PREFIX + \"ROTATE_RIGHT_V\" + POSTFIX;\n+    static {\n+        beforeMatchingNameRegex(ROTATE_RIGHT_V, \"RotateRightV\");\n+    }\n+\n+    public static final String ROUND_DOUBLE_MODE_V = PREFIX + \"ROUND_DOUBLE_MODE_V\" + POSTFIX;\n+    static {\n+        beforeMatchingNameRegex(ROUND_DOUBLE_MODE_V, \"RoundDoubleModeV\");\n+    }\n+\n@@ -810,0 +914,5 @@\n+    public static final String RSHIFT_V = PREFIX + \"RSHIFT_V\" + POSTFIX;\n+    static {\n+        beforeMatchingNameRegex(RSHIFT_V, \"RShiftV(B|S|I|L)\");\n+    }\n+\n@@ -831,0 +940,5 @@\n+    public static final String SQRT_V = PREFIX + \"SQRT_V\" + POSTFIX;\n+    static {\n+        beforeMatchingNameRegex(SQRT_V, \"SqrtV(F|D)\");\n+    }\n+\n@@ -967,0 +1081,5 @@\n+    public static final String SUB_V = PREFIX + \"SUB_V\" + POSTFIX;\n+    static {\n+        beforeMatchingNameRegex(SUB_V, \"SubV(B|S|I|L|F|D)\");\n+    }\n+\n@@ -1037,0 +1156,5 @@\n+    public static final String URSHIFT_V = PREFIX + \"URSHIFT_V\" + POSTFIX;\n+    static {\n+        beforeMatchingNameRegex(URSHIFT_V, \"URShiftV(B|S|I|L)\");\n+    }\n+\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/IRNode.java","additions":124,"deletions":0,"binary":false,"changes":124,"status":"modified"},{"patch":"@@ -78,1 +78,1 @@\n-    @IR(applyIfCPUFeatureOr = {\"asimd\", \"true\", \"avx2\", \"true\"},\n+    @IR(applyIfCPUFeatureOr = {\"asimd\", \"true\", \"sse\", \"true\"},\n@@ -89,1 +89,1 @@\n-    @IR(applyIfCPUFeatureOr = {\"asimd\", \"true\", \"avx2\", \"true\"},\n+    @IR(applyIfCPUFeatureOr = {\"asimd\", \"true\", \"sse\", \"true\"},\n@@ -100,1 +100,1 @@\n-    @IR(applyIfCPUFeatureOr = {\"asimd\", \"true\", \"avx2\", \"true\"},\n+    @IR(applyIfCPUFeatureOr = {\"asimd\", \"true\", \"sse\", \"true\"},\n@@ -111,1 +111,1 @@\n-    @IR(applyIfCPUFeatureOr = {\"asimd\", \"true\", \"avx2\", \"true\"},\n+    @IR(applyIfCPUFeatureOr = {\"asimd\", \"true\", \"sse\", \"true\"},\n@@ -122,1 +122,1 @@\n-    @IR(applyIfCPUFeatureOr = {\"asimd\", \"true\", \"avx2\", \"true\"},\n+    @IR(applyIfCPUFeatureOr = {\"asimd\", \"true\", \"sse\", \"true\"},\n@@ -133,1 +133,1 @@\n-    @IR(applyIfCPUFeatureOr = {\"asimd\", \"true\", \"avx2\", \"true\"},\n+    @IR(applyIfCPUFeatureOr = {\"asimd\", \"true\", \"sse\", \"true\"},\n@@ -144,1 +144,1 @@\n-    @IR(applyIfCPUFeatureOr = {\"asimd\", \"true\", \"avx2\", \"true\"},\n+    @IR(applyIfCPUFeatureOr = {\"asimd\", \"true\", \"sse\", \"true\"},\n@@ -156,1 +156,1 @@\n-    @IR(applyIfCPUFeatureOr = {\"asimd\", \"true\", \"avx2\", \"true\"},\n+    @IR(applyIfCPUFeatureOr = {\"asimd\", \"true\", \"sse\", \"true\"},\n@@ -168,1 +168,1 @@\n-    @IR(applyIfCPUFeatureOr = {\"asimd\", \"true\", \"avx2\", \"true\"},\n+    @IR(applyIfCPUFeatureOr = {\"asimd\", \"true\", \"sse\", \"true\"},\n@@ -181,1 +181,1 @@\n-    @IR(applyIfCPUFeatureOr = {\"asimd\", \"true\", \"avx2\", \"true\"},\n+    @IR(applyIfCPUFeatureOr = {\"asimd\", \"true\", \"sse\", \"true\"},\n@@ -195,1 +195,1 @@\n-    @IR(applyIfCPUFeatureOr = {\"asimd\", \"true\", \"avx2\", \"true\"},\n+    @IR(applyIfCPUFeatureOr = {\"asimd\", \"true\", \"sse\", \"true\"},\n@@ -206,1 +206,1 @@\n-    @IR(applyIfCPUFeatureOr = {\"asimd\", \"true\", \"avx2\", \"true\"},\n+    @IR(applyIfCPUFeatureOr = {\"asimd\", \"true\", \"sse\", \"true\"},\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorization\/runner\/ArrayCopyTest.java","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -60,1 +60,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.POPULATE_INDEX, \">0\"})\n@@ -71,1 +71,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.POPULATE_INDEX, \">0\"})\n@@ -82,1 +82,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.POPULATE_INDEX, \">0\"})\n@@ -93,1 +93,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.POPULATE_INDEX, \">0\"})\n@@ -113,1 +113,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.POPULATE_INDEX, \">0\"})\n@@ -124,1 +124,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.POPULATE_INDEX, \">0\"})\n@@ -137,1 +137,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.POPULATE_INDEX, \">0\"})\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorization\/runner\/ArrayIndexFillTest.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -68,1 +68,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.REPLICATE_B, \">0\"})\n@@ -79,1 +79,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.REPLICATE_S, \">0\"})\n@@ -90,1 +90,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.REPLICATE_S, \">0\"})\n@@ -101,1 +101,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.REPLICATE_I, \">0\"})\n@@ -112,1 +112,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.REPLICATE_L, \">0\"})\n@@ -123,1 +123,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.REPLICATE_F, \">0\"})\n@@ -134,1 +134,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.REPLICATE_D, \">0\"})\n@@ -146,1 +146,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.REPLICATE_L, \">0\"})\n@@ -157,1 +157,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.REPLICATE_L, \">0\"})\n@@ -168,1 +168,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.REPLICATE_L, \">0\"})\n@@ -179,1 +179,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.REPLICATE_I, \">0\"})\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorization\/runner\/ArrayInvariantFillTest.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -75,0 +75,2 @@\n+    @IR(applyIfCPUFeature = {\"avx512f\", \"true\"},\n+        counts = {IRNode.ROTATE_RIGHT_V, \">0\"})\n@@ -86,0 +88,2 @@\n+    @IR(applyIfCPUFeature = {\"avx512f\", \"true\"},\n+        counts = {IRNode.ROTATE_RIGHT_V, \">0\"})\n@@ -96,1 +100,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.RSHIFT_V, \">0\"})\n@@ -107,1 +111,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.RSHIFT_V, \">0\"})\n@@ -118,1 +122,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.RSHIFT_V, \">0\"})\n@@ -129,1 +133,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.RSHIFT_V, \">0\"})\n@@ -140,1 +144,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.LSHIFT_V, \">0\"})\n@@ -151,1 +155,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.URSHIFT_V, \">0\"})\n@@ -184,1 +188,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.RSHIFT_V, \">0\"})\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorization\/runner\/ArrayShiftOpTest.java","additions":11,"deletions":7,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -74,2 +74,4 @@\n-    @IR(applyIfCPUFeatureOr = {\"asimd\", \"true\", \"avx2\", \"true\"},\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+    @IR(applyIfCPUFeature = {\"asimd\", \"true\"},\n+        counts = {IRNode.AND_V, \">0\"})\n+    @IR(applyIfCPUFeature = {\"avx512vl\", \"true\"},\n+        counts = {IRNode.MACRO_LOGIC_V, \">0\"})\n@@ -86,1 +88,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.OR_V, \">0\"})\n@@ -97,1 +99,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.XOR_V, \">0\"})\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorization\/runner\/BasicBooleanOpTest.java","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -67,1 +67,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.SUB_V, \">0\"})\n@@ -78,1 +78,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.ABS_V, \">0\"})\n@@ -89,1 +89,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.ADD_V, \">0\"})\n@@ -100,1 +100,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.SUB_V, \">0\"})\n@@ -111,1 +111,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.MUL_V, \">0\"})\n@@ -122,1 +122,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.MUL_V, \">0\", IRNode.ADD_V, \">0\"})\n@@ -133,1 +133,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.MUL_V, \">0\", IRNode.SUB_V, \">0\"})\n@@ -145,1 +145,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.XOR_V, \">0\"})\n@@ -156,1 +156,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.AND_V, \">0\"})\n@@ -167,1 +167,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.OR_V, \">0\"})\n@@ -178,1 +178,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.XOR_V, \">0\"})\n@@ -190,1 +190,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.LSHIFT_V, \">0\"})\n@@ -201,1 +201,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.RSHIFT_V, \">0\"})\n@@ -212,1 +212,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.RSHIFT_V, \">0\"})\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorization\/runner\/BasicByteOpTest.java","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -70,1 +70,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.SUB_V, \">0\"})\n@@ -82,0 +82,1 @@\n+    @IR(failOn = {IRNode.ABS_V})\n@@ -92,1 +93,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.ADD_V, \">0\"})\n@@ -103,1 +104,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.SUB_V, \">0\"})\n@@ -114,1 +115,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.MUL_V, \">0\"})\n@@ -125,1 +126,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.MUL_V, \">0\", IRNode.ADD_V, \">0\"})\n@@ -136,1 +137,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.MUL_V, \">0\", IRNode.SUB_V, \">0\"})\n@@ -148,1 +149,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.XOR_V, \">0\"})\n@@ -159,1 +160,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.AND_V, \">0\"})\n@@ -170,1 +171,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.OR_V, \">0\"})\n@@ -181,1 +182,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.XOR_V, \">0\"})\n@@ -193,1 +194,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.LSHIFT_V, \">0\"})\n@@ -204,1 +205,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.URSHIFT_V, \">0\"})\n@@ -215,1 +216,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.URSHIFT_V, \">0\"})\n@@ -227,1 +228,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.REVERSE_BYTES_V, \">0\"})\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorization\/runner\/BasicCharOpTest.java","additions":15,"deletions":14,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -67,1 +67,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.NEG_V, \">0\"})\n@@ -78,1 +78,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.ABS_V, \">0\"})\n@@ -89,1 +89,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.SQRT_V, \">0\"})\n@@ -100,1 +100,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.ROUND_DOUBLE_MODE_V, \">0\"})\n@@ -111,1 +111,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.ROUND_DOUBLE_MODE_V, \">0\"})\n@@ -122,1 +122,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.ROUND_DOUBLE_MODE_V, \">0\"})\n@@ -133,1 +133,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.ADD_V, \">0\"})\n@@ -144,1 +144,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.SUB_V, \">0\"})\n@@ -155,1 +155,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.MUL_V, \">0\"})\n@@ -166,1 +166,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.DIV_V, \">0\"})\n@@ -177,1 +177,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.MAX_V, \">0\"})\n@@ -188,1 +188,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.MIN_V, \">0\"})\n@@ -199,1 +199,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.FMA_V, \">0\"})\n@@ -210,1 +210,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.FMA_V, \">0\"})\n@@ -221,1 +221,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.FMA_V, \">0\"})\n@@ -232,1 +232,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.FMA_V, \">0\"})\n@@ -243,1 +243,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.FMA_V, \">0\"})\n@@ -254,1 +254,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.FMA_V, \">0\"})\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorization\/runner\/BasicDoubleOpTest.java","additions":18,"deletions":18,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -67,1 +67,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.NEG_V, \">0\"})\n@@ -78,1 +78,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.ABS_V, \">0\"})\n@@ -89,1 +89,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.SQRT_V, \">0\"})\n@@ -100,1 +100,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.ADD_V, \">0\"})\n@@ -111,1 +111,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.SUB_V, \">0\"})\n@@ -122,1 +122,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.MUL_V, \">0\"})\n@@ -133,1 +133,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.DIV_V, \">0\"})\n@@ -144,1 +144,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.MAX_V, \">0\"})\n@@ -155,1 +155,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.MIN_V, \">0\"})\n@@ -166,1 +166,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.FMA_V, \">0\"})\n@@ -177,1 +177,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.FMA_V, \">0\"})\n@@ -188,1 +188,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.FMA_V, \">0\"})\n@@ -199,1 +199,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.FMA_V, \">0\"})\n@@ -210,1 +210,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.FMA_V, \">0\"})\n@@ -221,1 +221,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.FMA_V, \">0\"})\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorization\/runner\/BasicFloatOpTest.java","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -67,1 +67,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.SUB_V, \">0\"})\n@@ -78,1 +78,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.ABS_V, \">0\"})\n@@ -89,1 +89,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.ADD_V, \">0\"})\n@@ -100,1 +100,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.SUB_V, \">0\"})\n@@ -111,1 +111,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.MUL_V, \">0\"})\n@@ -122,1 +122,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.MUL_V, \">0\", IRNode.ADD_V, \">0\"})\n@@ -133,1 +133,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.MUL_V, \">0\", IRNode.SUB_V, \">0\"})\n@@ -144,1 +144,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.POPCOUNT_VI, \">0\"})\n@@ -156,1 +156,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.XOR_V, \">0\"})\n@@ -167,1 +167,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.AND_V, \">0\"})\n@@ -178,1 +178,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.OR_V, \">0\"})\n@@ -189,1 +189,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.XOR_V, \">0\"})\n@@ -201,1 +201,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.LSHIFT_V, \">0\"})\n@@ -212,1 +212,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.RSHIFT_V, \">0\"})\n@@ -223,1 +223,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.URSHIFT_V, \">0\"})\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorization\/runner\/BasicIntOpTest.java","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -67,1 +67,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.SUB_V, \">0\"})\n@@ -78,1 +78,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.ABS_V, \">0\"})\n@@ -89,1 +89,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.ADD_V, \">0\"})\n@@ -100,1 +100,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.SUB_V, \">0\"})\n@@ -111,1 +111,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.MUL_V, \">0\"})\n@@ -122,1 +122,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.MUL_V, \">0\", IRNode.ADD_V, \">0\"})\n@@ -133,1 +133,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.MUL_V, \">0\", IRNode.SUB_V, \">0\"})\n@@ -145,1 +145,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.XOR_V, \">0\"})\n@@ -156,1 +156,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.AND_V, \">0\"})\n@@ -167,1 +167,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.OR_V, \">0\"})\n@@ -178,1 +178,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.XOR_V, \">0\"})\n@@ -190,1 +190,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.LSHIFT_V, \">0\"})\n@@ -201,1 +201,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.RSHIFT_V, \">0\"})\n@@ -212,1 +212,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.URSHIFT_V, \">0\"})\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorization\/runner\/BasicLongOpTest.java","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -70,1 +70,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.SUB_V, \">0\"})\n@@ -81,1 +81,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.ABS_V, \">0\"})\n@@ -92,1 +92,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.ADD_V, \">0\"})\n@@ -103,1 +103,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.SUB_V, \">0\"})\n@@ -114,1 +114,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.MUL_V, \">0\"})\n@@ -125,1 +125,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.MUL_V, \">0\", IRNode.ADD_V, \">0\"})\n@@ -136,1 +136,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.MUL_V, \">0\", IRNode.SUB_V, \">0\"})\n@@ -148,1 +148,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.XOR_V, \">0\"})\n@@ -159,1 +159,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.AND_V, \">0\"})\n@@ -170,1 +170,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.OR_V, \">0\"})\n@@ -181,1 +181,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.XOR_V, \">0\"})\n@@ -193,1 +193,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.LSHIFT_V, \">0\"})\n@@ -204,1 +204,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.RSHIFT_V, \">0\"})\n@@ -240,1 +240,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.RSHIFT_V, \">0\"})\n@@ -252,1 +252,1 @@\n-        counts = {IRNode.STORE_VECTOR, \">0\"})\n+        counts = {IRNode.REVERSE_BYTES_V, \">0\"})\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorization\/runner\/BasicShortOpTest.java","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"}]}