{"files":[{"patch":"@@ -83,2 +83,2 @@\n-  \/\/ before we meet min_garbage. Then we add all candidates that fit with a garbage threshold before\n-  \/\/ we hit max_cset. When max_cset is hit, we terminate the cset selection. Note that in this scheme,\n+  \/\/ before we meet min_garbage. Then we add all candidates that fit with a garbage threshold.\n+  \/\/ If max_cset is hit during that phase, we terminate the cset selection. Note that in this scheme,\n@@ -119,0 +119,9 @@\n+    } else if (cur_garbage >= min_garbage) {\n+      \/\/ Min garbage condition satisfied, and the regions left would never meet\n+      \/\/ the garbage threshold, because we sorted by garbage. Can break here.\n+#ifdef ASSERT\n+      for (size_t c_idx = idx; c_idx < size; c_idx++) {\n+        assert(data[c_idx]._region->garbage() <= garbage_threshold, \"Sorting invariant\");\n+      }\n+#endif\n+      break;\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahAdaptiveHeuristics.cpp","additions":11,"deletions":2,"binary":false,"changes":13,"status":"modified"}]}