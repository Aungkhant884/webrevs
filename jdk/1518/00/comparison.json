{"files":[{"patch":"@@ -1374,1 +1374,2 @@\n-      STATIC_ASSERT(add_len == strlen(\"Index  out of bounds for length \"));    \\\n+      \/* Cannot use strlen() -- it's not constexpr. *\/                         \\\n+      STATIC_ASSERT(add_len == string_len(\"Index  out of bounds for length \"));\\\n","filename":"src\/hotspot\/share\/interpreter\/zero\/bytecodeInterpreter.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -42,10 +42,0 @@\n-  \/\/ Cannot use strlen() -- it's not constexpr.\n-  static constexpr size_t string_len(const char* s) {\n-    size_t len = 0;\n-    while (*s != 0) {\n-      len++;\n-      s++;\n-    }\n-    return len;\n-  }\n-\n","filename":"src\/hotspot\/share\/runtime\/flags\/jvmFlagLookup.hpp","additions":0,"deletions":10,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -1022,0 +1022,10 @@\n+\/\/ Provide a constexpr version of strlen()\n+constexpr size_t string_len(const char* s) {\n+  size_t len = 0;\n+  while (*s != 0) {\n+    len++;\n+    s++;\n+  }\n+  return len;\n+}\n+\n","filename":"src\/hotspot\/share\/utilities\/globalDefinitions.hpp","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"}]}