{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -232,1 +232,1 @@\n-        return new $type$((byte) -v.byteValue());\n+        return (byte) -v.byteValue();\n@@ -237,1 +237,1 @@\n-        return new $type$((short) -v.shortValue());\n+        return (short) -v.shortValue();\n@@ -242,1 +242,1 @@\n-        return new $type$(-v.intValue());\n+        return -v.intValue();\n@@ -247,1 +247,1 @@\n-        return new $type$(-v.longValue());\n+        return -v.longValue();\n@@ -287,1 +287,1 @@\n-        return new $type$(v);\n+        return (float) v;\n@@ -291,1 +291,1 @@\n-        return new $type$(-v.floatValue());\n+        return -v.floatValue();\n@@ -295,1 +295,1 @@\n-        return new $type$(v.floatValue() * (float) mul);\n+        return v.floatValue() * (float) mul;\n@@ -299,1 +299,1 @@\n-        return new $type$(1.0f \/ v.floatValue());\n+        return 1.0f \/ v.floatValue();\n@@ -322,1 +322,1 @@\n-        return new $type$(v);\n+        return v;\n@@ -326,1 +326,1 @@\n-        return new $type$(-v.doubleValue());\n+        return -v.doubleValue();\n@@ -330,1 +330,1 @@\n-        return new $type$(v.doubleValue() * mul);\n+        return v.doubleValue() * mul;\n@@ -334,1 +334,1 @@\n-        return new $type$(1.0 \/ v.doubleValue());\n+        return 1.0 \/ v.doubleValue();\n@@ -438,1 +438,1 @@\n-        test(\"%c\", \"i\", new Character('i'));\n+        test(\"%c\", \"i\", Character.valueOf('i'));\n@@ -496,1 +496,1 @@\n-        tryCatch(\"%#s\", FormatFlagsConversionMismatchException.class, null);\n+        tryCatch(\"%#s\", FormatFlagsConversionMismatchException.class, (Object)null);\n@@ -524,1 +524,0 @@\n-\n@@ -528,1 +527,12 @@\n-        $type$ minByte = new $type$(Byte.MIN_VALUE);\n+#if[Short]\n+        $type$ minByte = (short) Byte.MIN_VALUE;\n+#end[Short]\n+#if[Byte]\n+        $type$ minByte = Byte.MIN_VALUE;\n+#end[Byte]\n+#if[Integer]\n+        $type$ minByte = (int) Byte.MIN_VALUE;\n+#end[Integer]\n+#if[Long]\n+        $type$ minByte = (long) Byte.MIN_VALUE;\n+#end[Long]\n@@ -889,3 +899,3 @@\n-        $type$ one = new $type$(1.0f);\n-        $type$ ten = new $type$(10.0f);\n-        $type$ pi  = new $type$(Math.PI);\n+        $type$ one = 1.0f;\n+        $type$ ten = 10.0f;\n+        $type$ pi  = (float) Math.PI;\n@@ -909,3 +919,3 @@\n-        $type$ one = new $type$(1.0);\n-        $type$ ten = new $type$(10.0);\n-        $type$ pi  = new $type$(Math.PI);\n+        $type$ one = 1.0d;\n+        $type$ ten = 10.0d;\n+        $type$ pi  = (double) Math.PI;\n","filename":"test\/jdk\/java\/util\/Formatter\/Basic-X.java.template","additions":33,"deletions":23,"binary":false,"changes":56,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -438,1 +438,1 @@\n-        test(\"%c\", \"i\", new Character('i'));\n+        test(\"%c\", \"i\", Character.valueOf('i'));\n@@ -496,1 +496,1 @@\n-        tryCatch(\"%#s\", FormatFlagsConversionMismatchException.class, null);\n+        tryCatch(\"%#s\", FormatFlagsConversionMismatchException.class, (Object)null);\n@@ -854,0 +854,10 @@\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n","filename":"test\/jdk\/java\/util\/Formatter\/BasicBigDecimal.java","additions":13,"deletions":3,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -438,1 +438,1 @@\n-        test(\"%c\", \"i\", new Character('i'));\n+        test(\"%c\", \"i\", Character.valueOf('i'));\n@@ -496,1 +496,1 @@\n-        tryCatch(\"%#s\", FormatFlagsConversionMismatchException.class, null);\n+        tryCatch(\"%#s\", FormatFlagsConversionMismatchException.class, (Object)null);\n@@ -769,0 +769,10 @@\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n","filename":"test\/jdk\/java\/util\/Formatter\/BasicBigInteger.java","additions":13,"deletions":3,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -438,1 +438,1 @@\n-        test(\"%c\", \"i\", new Character('i'));\n+        test(\"%c\", \"i\", Character.valueOf('i'));\n@@ -496,1 +496,1 @@\n-        tryCatch(\"%#s\", FormatFlagsConversionMismatchException.class, null);\n+        tryCatch(\"%#s\", FormatFlagsConversionMismatchException.class, (Object)null);\n@@ -1093,0 +1093,10 @@\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n","filename":"test\/jdk\/java\/util\/Formatter\/BasicBoolean.java","additions":13,"deletions":3,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -438,1 +438,1 @@\n-        test(\"%c\", \"i\", new Character('i'));\n+        test(\"%c\", \"i\", Character.valueOf('i'));\n@@ -496,1 +496,1 @@\n-        tryCatch(\"%#s\", FormatFlagsConversionMismatchException.class, null);\n+        tryCatch(\"%#s\", FormatFlagsConversionMismatchException.class, (Object)null);\n@@ -1093,0 +1093,10 @@\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n","filename":"test\/jdk\/java\/util\/Formatter\/BasicBooleanObject.java","additions":13,"deletions":3,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -438,1 +438,1 @@\n-        test(\"%c\", \"i\", new Character('i'));\n+        test(\"%c\", \"i\", Character.valueOf('i'));\n@@ -496,1 +496,1 @@\n-        tryCatch(\"%#s\", FormatFlagsConversionMismatchException.class, null);\n+        tryCatch(\"%#s\", FormatFlagsConversionMismatchException.class, (Object)null);\n@@ -525,1 +525,0 @@\n-\n@@ -531,0 +530,11 @@\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n","filename":"test\/jdk\/java\/util\/Formatter\/BasicByte.java","additions":14,"deletions":4,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -232,1 +232,1 @@\n-        return new Byte((byte) -v.byteValue());\n+        return (byte) -v.byteValue();\n@@ -438,1 +438,1 @@\n-        test(\"%c\", \"i\", new Character('i'));\n+        test(\"%c\", \"i\", Character.valueOf('i'));\n@@ -496,1 +496,1 @@\n-        tryCatch(\"%#s\", FormatFlagsConversionMismatchException.class, null);\n+        tryCatch(\"%#s\", FormatFlagsConversionMismatchException.class, (Object)null);\n@@ -528,1 +528,11 @@\n-        Byte minByte = new Byte(Byte.MIN_VALUE);\n+\n+\n+\n+        Byte minByte = Byte.MIN_VALUE;\n+\n+\n+\n+\n+\n+\n+\n","filename":"test\/jdk\/java\/util\/Formatter\/BasicByteObject.java","additions":15,"deletions":5,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -438,1 +438,1 @@\n-        test(\"%c\", \"i\", new Character('i'));\n+        test(\"%c\", \"i\", Character.valueOf('i'));\n@@ -496,1 +496,1 @@\n-        tryCatch(\"%#s\", FormatFlagsConversionMismatchException.class, null);\n+        tryCatch(\"%#s\", FormatFlagsConversionMismatchException.class, (Object)null);\n@@ -1093,0 +1093,10 @@\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n","filename":"test\/jdk\/java\/util\/Formatter\/BasicChar.java","additions":13,"deletions":3,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -438,1 +438,1 @@\n-        test(\"%c\", \"i\", new Character('i'));\n+        test(\"%c\", \"i\", Character.valueOf('i'));\n@@ -496,1 +496,1 @@\n-        tryCatch(\"%#s\", FormatFlagsConversionMismatchException.class, null);\n+        tryCatch(\"%#s\", FormatFlagsConversionMismatchException.class, (Object)null);\n@@ -1093,0 +1093,10 @@\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n","filename":"test\/jdk\/java\/util\/Formatter\/BasicCharObject.java","additions":13,"deletions":3,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -438,1 +438,1 @@\n-        test(\"%c\", \"i\", new Character('i'));\n+        test(\"%c\", \"i\", Character.valueOf('i'));\n@@ -496,1 +496,1 @@\n-        tryCatch(\"%#s\", FormatFlagsConversionMismatchException.class, null);\n+        tryCatch(\"%#s\", FormatFlagsConversionMismatchException.class, (Object)null);\n@@ -1653,0 +1653,10 @@\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n@@ -1700,1 +1710,0 @@\n-\n","filename":"test\/jdk\/java\/util\/Formatter\/BasicDateTime.java","additions":13,"deletions":4,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -438,1 +438,1 @@\n-        test(\"%c\", \"i\", new Character('i'));\n+        test(\"%c\", \"i\", Character.valueOf('i'));\n@@ -496,1 +496,1 @@\n-        tryCatch(\"%#s\", FormatFlagsConversionMismatchException.class, null);\n+        tryCatch(\"%#s\", FormatFlagsConversionMismatchException.class, (Object)null);\n@@ -771,0 +771,10 @@\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n","filename":"test\/jdk\/java\/util\/Formatter\/BasicDouble.java","additions":13,"deletions":3,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -322,1 +322,1 @@\n-        return new Double(v);\n+        return v;\n@@ -326,1 +326,1 @@\n-        return new Double(-v.doubleValue());\n+        return -v.doubleValue();\n@@ -330,1 +330,1 @@\n-        return new Double(v.doubleValue() * mul);\n+        return v.doubleValue() * mul;\n@@ -334,1 +334,1 @@\n-        return new Double(1.0 \/ v.doubleValue());\n+        return 1.0 \/ v.doubleValue();\n@@ -438,1 +438,1 @@\n-        test(\"%c\", \"i\", new Character('i'));\n+        test(\"%c\", \"i\", Character.valueOf('i'));\n@@ -496,1 +496,1 @@\n-        tryCatch(\"%#s\", FormatFlagsConversionMismatchException.class, null);\n+        tryCatch(\"%#s\", FormatFlagsConversionMismatchException.class, (Object)null);\n@@ -895,0 +895,10 @@\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n@@ -909,3 +919,3 @@\n-        Double one = new Double(1.0);\n-        Double ten = new Double(10.0);\n-        Double pi  = new Double(Math.PI);\n+        Double one = 1.0d;\n+        Double ten = 10.0d;\n+        Double pi  = (double) Math.PI;\n","filename":"test\/jdk\/java\/util\/Formatter\/BasicDoubleObject.java","additions":20,"deletions":10,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -438,1 +438,1 @@\n-        test(\"%c\", \"i\", new Character('i'));\n+        test(\"%c\", \"i\", Character.valueOf('i'));\n@@ -496,1 +496,1 @@\n-        tryCatch(\"%#s\", FormatFlagsConversionMismatchException.class, null);\n+        tryCatch(\"%#s\", FormatFlagsConversionMismatchException.class, (Object)null);\n@@ -865,0 +865,10 @@\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n","filename":"test\/jdk\/java\/util\/Formatter\/BasicFloat.java","additions":13,"deletions":3,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -287,1 +287,1 @@\n-        return new Float(v);\n+        return (float) v;\n@@ -291,1 +291,1 @@\n-        return new Float(-v.floatValue());\n+        return -v.floatValue();\n@@ -295,1 +295,1 @@\n-        return new Float(v.floatValue() * (float) mul);\n+        return v.floatValue() * (float) mul;\n@@ -299,1 +299,1 @@\n-        return new Float(1.0f \/ v.floatValue());\n+        return 1.0f \/ v.floatValue();\n@@ -438,1 +438,1 @@\n-        test(\"%c\", \"i\", new Character('i'));\n+        test(\"%c\", \"i\", Character.valueOf('i'));\n@@ -496,1 +496,1 @@\n-        tryCatch(\"%#s\", FormatFlagsConversionMismatchException.class, null);\n+        tryCatch(\"%#s\", FormatFlagsConversionMismatchException.class, (Object)null);\n@@ -875,0 +875,10 @@\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n@@ -889,3 +899,3 @@\n-        Float one = new Float(1.0f);\n-        Float ten = new Float(10.0f);\n-        Float pi  = new Float(Math.PI);\n+        Float one = 1.0f;\n+        Float ten = 10.0f;\n+        Float pi  = (float) Math.PI;\n","filename":"test\/jdk\/java\/util\/Formatter\/BasicFloatObject.java","additions":20,"deletions":10,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -438,1 +438,1 @@\n-        test(\"%c\", \"i\", new Character('i'));\n+        test(\"%c\", \"i\", Character.valueOf('i'));\n@@ -496,1 +496,1 @@\n-        tryCatch(\"%#s\", FormatFlagsConversionMismatchException.class, null);\n+        tryCatch(\"%#s\", FormatFlagsConversionMismatchException.class, (Object)null);\n@@ -525,1 +525,0 @@\n-\n@@ -531,0 +530,11 @@\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n","filename":"test\/jdk\/java\/util\/Formatter\/BasicInt.java","additions":14,"deletions":4,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -242,1 +242,1 @@\n-        return new Integer(-v.intValue());\n+        return -v.intValue();\n@@ -438,1 +438,1 @@\n-        test(\"%c\", \"i\", new Character('i'));\n+        test(\"%c\", \"i\", Character.valueOf('i'));\n@@ -496,1 +496,1 @@\n-        tryCatch(\"%#s\", FormatFlagsConversionMismatchException.class, null);\n+        tryCatch(\"%#s\", FormatFlagsConversionMismatchException.class, (Object)null);\n@@ -528,1 +528,11 @@\n-        Integer minByte = new Integer(Byte.MIN_VALUE);\n+\n+\n+\n+\n+\n+\n+        Integer minByte = (int) Byte.MIN_VALUE;\n+\n+\n+\n+\n","filename":"test\/jdk\/java\/util\/Formatter\/BasicIntObject.java","additions":15,"deletions":5,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -438,1 +438,1 @@\n-        test(\"%c\", \"i\", new Character('i'));\n+        test(\"%c\", \"i\", Character.valueOf('i'));\n@@ -496,1 +496,1 @@\n-        tryCatch(\"%#s\", FormatFlagsConversionMismatchException.class, null);\n+        tryCatch(\"%#s\", FormatFlagsConversionMismatchException.class, (Object)null);\n@@ -525,1 +525,0 @@\n-\n@@ -531,0 +530,11 @@\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n","filename":"test\/jdk\/java\/util\/Formatter\/BasicLong.java","additions":14,"deletions":4,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -247,1 +247,1 @@\n-        return new Long(-v.longValue());\n+        return -v.longValue();\n@@ -438,1 +438,1 @@\n-        test(\"%c\", \"i\", new Character('i'));\n+        test(\"%c\", \"i\", Character.valueOf('i'));\n@@ -496,1 +496,1 @@\n-        tryCatch(\"%#s\", FormatFlagsConversionMismatchException.class, null);\n+        tryCatch(\"%#s\", FormatFlagsConversionMismatchException.class, (Object)null);\n@@ -528,1 +528,11 @@\n-        Long minByte = new Long(Byte.MIN_VALUE);\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+        Long minByte = (long) Byte.MIN_VALUE;\n+\n","filename":"test\/jdk\/java\/util\/Formatter\/BasicLongObject.java","additions":15,"deletions":5,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -438,1 +438,1 @@\n-        test(\"%c\", \"i\", new Character('i'));\n+        test(\"%c\", \"i\", Character.valueOf('i'));\n@@ -496,1 +496,1 @@\n-        tryCatch(\"%#s\", FormatFlagsConversionMismatchException.class, null);\n+        tryCatch(\"%#s\", FormatFlagsConversionMismatchException.class, (Object)null);\n@@ -525,1 +525,0 @@\n-\n@@ -531,0 +530,11 @@\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n","filename":"test\/jdk\/java\/util\/Formatter\/BasicShort.java","additions":14,"deletions":4,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -237,1 +237,1 @@\n-        return new Short((short) -v.shortValue());\n+        return (short) -v.shortValue();\n@@ -438,1 +438,1 @@\n-        test(\"%c\", \"i\", new Character('i'));\n+        test(\"%c\", \"i\", Character.valueOf('i'));\n@@ -496,1 +496,1 @@\n-        tryCatch(\"%#s\", FormatFlagsConversionMismatchException.class, null);\n+        tryCatch(\"%#s\", FormatFlagsConversionMismatchException.class, (Object)null);\n@@ -528,1 +528,11 @@\n-        Short minByte = new Short(Byte.MIN_VALUE);\n+        Short minByte = (short) Byte.MIN_VALUE;\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n","filename":"test\/jdk\/java\/util\/Formatter\/BasicShortObject.java","additions":15,"deletions":5,"binary":false,"changes":20,"status":"modified"}]}