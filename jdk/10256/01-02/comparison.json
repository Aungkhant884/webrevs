{"files":[{"patch":"@@ -203,1 +203,1 @@\n-void G1ConcurrentRefine::update_pending_cards_target(double logged_cards_scan_time_ms,\n+void G1ConcurrentRefine::update_pending_cards_target(double logged_cards_time_ms,\n@@ -208,1 +208,1 @@\n-  if ((processed_logged_cards < minimum) || (logged_cards_scan_time_ms == 0.0)) {\n+  if ((processed_logged_cards < minimum) || (logged_cards_time_ms == 0.0)) {\n@@ -215,1 +215,1 @@\n-  double rate = processed_logged_cards \/ logged_cards_scan_time_ms;\n+  double rate = processed_logged_cards \/ logged_cards_time_ms;\n@@ -229,1 +229,1 @@\n-void G1ConcurrentRefine::adjust_after_gc(double logged_cards_scan_time_ms,\n+void G1ConcurrentRefine::adjust_after_gc(double logged_cards_time_ms,\n@@ -234,1 +234,1 @@\n-  update_pending_cards_target(logged_cards_scan_time_ms,\n+  update_pending_cards_target(logged_cards_time_ms,\n@@ -258,1 +258,1 @@\n-static uint64_t compute_adjust_delay(double available_ms) {\n+static uint64_t compute_adjust_wait_time_ms(double available_ms) {\n@@ -266,2 +266,2 @@\n-    uint64_t delay = compute_adjust_delay(available_ms);\n-    return MAX2(delay, adjust_threads_period_ms());\n+    uint64_t wait_time_ms = compute_adjust_wait_time_ms(available_ms);\n+    return MAX2(wait_time_ms, adjust_threads_period_ms());\n@@ -298,1 +298,1 @@\n-      adjust_threads_needed(available_bytes);\n+      adjust_threads_wanted(available_bytes);\n@@ -312,1 +312,1 @@\n-void G1ConcurrentRefine::adjust_threads_needed(size_t available_bytes) {\n+void G1ConcurrentRefine::adjust_threads_wanted(size_t available_bytes) {\n@@ -322,2 +322,2 @@\n-  uint new_needed = _threads_needed.threads_needed();\n-  if (new_needed > _thread_control.max_num_threads()) {\n+  uint new_wanted = _threads_needed.threads_needed();\n+  if (new_wanted > _thread_control.max_num_threads()) {\n@@ -329,1 +329,1 @@\n-    new_needed = _thread_control.max_num_threads();\n+    new_wanted = _thread_control.max_num_threads();\n@@ -338,1 +338,1 @@\n-  Atomic::store(&_threads_wanted, new_needed);\n+  Atomic::store(&_threads_wanted, new_wanted);\n@@ -340,1 +340,1 @@\n-  log_debug(gc, refine)(\"Updating refinement threads: needed %u, cards: %zu, \"\n+  log_debug(gc, refine)(\"Updating refinement threads: wanted %u, cards: %zu, \"\n@@ -342,1 +342,1 @@\n-                        new_needed,\n+                        new_wanted,\n@@ -348,1 +348,1 @@\n-  for (uint i = MAX2(old_wanted, 1u); i < new_needed; ++i) {\n+  for (uint i = MAX2(old_wanted, 1u); i < new_wanted; ++i) {\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentRefine.cpp","additions":17,"deletions":17,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -146,1 +146,1 @@\n-  void adjust_threads_needed(size_t available_bytes);\n+  void adjust_threads_wanted(size_t available_bytes);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentRefine.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -54,1 +54,2 @@\n-  \/\/ The number of refinement threads needed.\n+  \/\/ Estimate of the number of active refinement threads needed to reach the\n+  \/\/ target before the next GC.\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentRefineThreadsNeeded.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -931,1 +931,1 @@\n-  double scan_logged_cards_time_goal_ms = _mmu_tracker->max_gc_time() * MILLIUNITS * G1RSetUpdatingPauseTimePercent \/ 100.0;\n+  double logged_cards_time_goal_ms = _mmu_tracker->max_gc_time() * MILLIUNITS * G1RSetUpdatingPauseTimePercent \/ 100.0;\n@@ -933,1 +933,1 @@\n-  if (scan_logged_cards_time_goal_ms < merge_hcc_time_ms) {\n+  if (logged_cards_time_goal_ms < merge_hcc_time_ms) {\n@@ -936,1 +936,1 @@\n-                                scan_logged_cards_time_goal_ms, merge_hcc_time_ms);\n+                                logged_cards_time_goal_ms, merge_hcc_time_ms);\n@@ -938,1 +938,1 @@\n-    scan_logged_cards_time_goal_ms = 0;\n+    logged_cards_time_goal_ms = 0;\n@@ -940,1 +940,1 @@\n-    scan_logged_cards_time_goal_ms -= merge_hcc_time_ms;\n+    logged_cards_time_goal_ms -= merge_hcc_time_ms;\n@@ -950,1 +950,1 @@\n-  bool exceeded_goal = scan_logged_cards_time_goal_ms < logged_cards_time_ms;\n+  bool exceeded_goal = logged_cards_time_goal_ms < logged_cards_time_ms;\n@@ -958,1 +958,1 @@\n-            scan_logged_cards_time_goal_ms,\n+            logged_cards_time_goal_ms,\n@@ -968,1 +968,1 @@\n-                      scan_logged_cards_time_goal_ms);\n+                      logged_cards_time_goal_ms);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Policy.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"}]}