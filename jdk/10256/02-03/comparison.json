{"files":[{"patch":"@@ -219,1 +219,1 @@\n-  \/\/ Add some hysterisis with previous values.\n+  \/\/ Add some hysteresis with previous values.\n@@ -234,0 +234,1 @@\n+\n@@ -240,1 +241,1 @@\n-    _dcqs.set_max_cards(_pending_cards_target);\n+    _dcqs.set_mutator_refinement_threshold(_pending_cards_target);\n@@ -246,1 +247,1 @@\n-    _dcqs.set_max_cards(SIZE_MAX);\n+    _dcqs.set_mutator_refinement_threshold(SIZE_MAX);\n@@ -339,2 +340,2 @@\n-  _dcqs.set_max_cards(mutator_threshold);\n-  log_debug(gc, refine)(\"Updating refinement threads: wanted %u, cards: %zu, \"\n+  _dcqs.set_mutator_refinement_threshold(mutator_threshold);\n+  log_debug(gc, refine)(\"Concurrent refinement: wanted %u, cards: %zu, \"\n@@ -353,1 +354,1 @@\n-      _dcqs.set_max_cards(_pending_cards_target);\n+      _dcqs.set_mutator_refinement_threshold(_pending_cards_target);\n@@ -370,1 +371,1 @@\n-      _dcqs.set_max_cards(_pending_cards_target);\n+      _dcqs.set_mutator_refinement_threshold(_pending_cards_target);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentRefine.cpp","additions":8,"deletions":7,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -198,1 +198,1 @@\n-  \/\/ Test whethre the thread designated by worker_id should be active.\n+  \/\/ Test whether the thread designated by worker_id should be active.\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentRefine.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -44,2 +44,1 @@\n-\/\/ several additional desirements we'd like to achieve while meeting that\n-\/\/ goal.\n+\/\/ several secondary goals we'd like to achieve while meeting that goal.\n@@ -78,2 +77,2 @@\n-  \/\/ are no incoming cards when time is short, because the controller activates\n-  \/\/ refinement by mutator threads when there to a GC, to stay on target even\n+  \/\/ are no incoming cards when time is short, because in that case the\n+  \/\/ controller activates refinement by mutator threads to stay on target even\n@@ -116,1 +115,1 @@\n-  \/\/ prediction machinary will warm up and we'll be able to get estimates.\n+  \/\/ prediction machinery will warm up and we'll be able to get estimates.\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentRefineThreadsNeeded.cpp","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -71,1 +71,1 @@\n-  _max_cards(SIZE_MAX),\n+  _mutator_refinement_threshold(SIZE_MAX),\n@@ -489,1 +489,1 @@\n-  if (Atomic::load(&_num_cards) <= Atomic::load(&_max_cards)) {\n+  if (Atomic::load(&_num_cards) <= Atomic::load(&_mutator_refinement_threshold)) {\n@@ -539,1 +539,1 @@\n-  set_max_cards(SIZE_MAX);\n+  set_mutator_refinement_threshold(SIZE_MAX);\n@@ -559,1 +559,1 @@\n-  set_max_cards(SIZE_MAX);\n+  set_mutator_refinement_threshold(SIZE_MAX);\n@@ -614,2 +614,2 @@\n-size_t G1DirtyCardQueueSet::max_cards() const {\n-  return Atomic::load(&_max_cards);\n+size_t G1DirtyCardQueueSet::mutator_refinement_threshold() const {\n+  return Atomic::load(&_mutator_refinement_threshold);\n@@ -618,2 +618,2 @@\n-void G1DirtyCardQueueSet::set_max_cards(size_t value) {\n-  Atomic::store(&_max_cards, value);\n+void G1DirtyCardQueueSet::set_mutator_refinement_threshold(size_t value) {\n+  Atomic::store(&_mutator_refinement_threshold, value);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1DirtyCardQueue.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -165,1 +165,1 @@\n-  volatile size_t _max_cards;\n+  volatile size_t _mutator_refinement_threshold;\n@@ -225,1 +225,2 @@\n-  \/\/ are more than max_cards cards in the completed buffers.  Updates stats.\n+  \/\/ are more than mutator_refinement_threshold cards in the completed buffers.\n+  \/\/ Updates stats.\n@@ -284,3 +285,2 @@\n-  \/\/ Threshold for mutator threads to also do refinement when there\n-  \/\/ are concurrent refinement threads.\n-  size_t max_cards() const;\n+  \/\/ Number of cards above which mutator threads should do refinement.\n+  size_t mutator_refinement_threshold() const;\n@@ -288,2 +288,2 @@\n-  \/\/ Set threshold for mutator threads to also do refinement.\n-  void set_max_cards(size_t value);\n+  \/\/ Set number of cards above which mutator threads should do refinement.\n+  void set_mutator_refinement_threshold(size_t value);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1DirtyCardQueue.hpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"}]}