{"files":[{"patch":"@@ -353,1 +353,1 @@\n-instruct vcvt2Lto2F(vecD dst, vecX src)\n+instruct vcvt2Lto2F(vecD dst, vecX src, vRegF tmp)\n@@ -357,2 +357,6 @@\n-  format %{ \"scvtfv  T2D, $dst, $src\\n\\t\"\n-            \"fcvtn   $dst, T2S, $dst, T2D\\t# convert 2L to 2F vector\"\n+  effect(TEMP_DEF dst, TEMP tmp);\n+  format %{ \"umov   rscratch1, $src, D, 0\\n\\t\"\n+            \"scvtfs $dst, rscratch1\\n\\t\"\n+            \"umov   rscratch1, $src, D, 1\\n\\t\"\n+            \"scvtfs $tmp, rscratch1\\n\\t\"\n+            \"ins    $dst, S, $tmp, 1, 0\\t# convert 2L to 2F vector\"\n@@ -361,2 +365,5 @@\n-    __ scvtfv(__ T2D, as_FloatRegister($dst$$reg), as_FloatRegister($src$$reg));\n-    __ fcvtn(as_FloatRegister($dst$$reg), __ T2S, as_FloatRegister($dst$$reg), __ T2D);\n+    __ umov(rscratch1, as_FloatRegister($src$$reg), __ D, 0);\n+    __ scvtfs(as_FloatRegister($dst$$reg), rscratch1);\n+    __ umov(rscratch1, as_FloatRegister($src$$reg), __ D, 1);\n+    __ scvtfs(as_FloatRegister($tmp$$reg), rscratch1);\n+    __ ins(as_FloatRegister($dst$$reg), __ S, as_FloatRegister($tmp$$reg), 1, 0);\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64_neon.ad","additions":12,"deletions":5,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -181,1 +181,1 @@\n-instruct vcvt2Lto2F(vecD dst, vecX src)\n+instruct vcvt2Lto2F(vecD dst, vecX src, vRegF tmp)\n@@ -185,2 +185,6 @@\n-  format %{ \"scvtfv  T2D, $dst, $src\\n\\t\"\n-            \"fcvtn   $dst, T2S, $dst, T2D\\t# convert 2L to 2F vector\"\n+  effect(TEMP_DEF dst, TEMP tmp);\n+  format %{ \"umov   rscratch1, $src, D, 0\\n\\t\"\n+            \"scvtfs $dst, rscratch1\\n\\t\"\n+            \"umov   rscratch1, $src, D, 1\\n\\t\"\n+            \"scvtfs $tmp, rscratch1\\n\\t\"\n+            \"ins    $dst, S, $tmp, 1, 0\\t# convert 2L to 2F vector\"\n@@ -189,2 +193,5 @@\n-    __ scvtfv(__ T2D, as_FloatRegister($dst$$reg), as_FloatRegister($src$$reg));\n-    __ fcvtn(as_FloatRegister($dst$$reg), __ T2S, as_FloatRegister($dst$$reg), __ T2D);\n+    __ umov(rscratch1, as_FloatRegister($src$$reg), __ D, 0);\n+    __ scvtfs(as_FloatRegister($dst$$reg), rscratch1);\n+    __ umov(rscratch1, as_FloatRegister($src$$reg), __ D, 1);\n+    __ scvtfs(as_FloatRegister($tmp$$reg), rscratch1);\n+    __ ins(as_FloatRegister($dst$$reg), __ S, as_FloatRegister($tmp$$reg), 1, 0);\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64_neon_ad.m4","additions":12,"deletions":5,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Arm Limited. All rights reserved.\n+ * Copyright (c) 2021, 2022, Arm Limited. All rights reserved.\n@@ -117,0 +117,1 @@\n+        0x561a524000000001L,\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorapi\/VectorCastShape128Test.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,0 +33,1 @@\n+ * @key randomness\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorapi\/reshape\/TestVectorCastAVX1.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,0 +33,1 @@\n+ * @key randomness\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorapi\/reshape\/TestVectorCastAVX2.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,0 +33,1 @@\n+ * @key randomness\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorapi\/reshape\/TestVectorCastAVX512.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,0 +33,1 @@\n+ * @key randomness\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorapi\/reshape\/TestVectorCastAVX512BW.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,0 +33,1 @@\n+ * @key randomness\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorapi\/reshape\/TestVectorCastAVX512DQ.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,0 +33,1 @@\n+ * @key randomness\n@@ -45,1 +46,1 @@\n-                \"-XX:+UseNeon\");\n+                \"-XX:UseSVE=0\");\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorapi\/reshape\/TestVectorCastNeon.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,0 +33,1 @@\n+ * @key randomness\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorapi\/reshape\/TestVectorCastSVE.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,0 +38,1 @@\n+ * @key randomness\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorapi\/reshape\/TestVectorReinterpret.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,0 +40,1 @@\n+import jdk.test.lib.Utils;\n@@ -108,1 +109,1 @@\n-        var random = RandomGenerator.getDefault();\n+        var random = Utils.getRandomInstance();\n@@ -222,1 +223,1 @@\n-        var random = RandomGenerator.getDefault();\n+        var random = Utils.getRandomInstance();\n@@ -252,1 +253,1 @@\n-        var random = RandomGenerator.getDefault();\n+        var random = Utils.getRandomInstance();\n@@ -281,1 +282,1 @@\n-        var random = RandomGenerator.getDefault();\n+        var random = Utils.getRandomInstance();\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorapi\/reshape\/utils\/VectorReshapeHelper.java","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"}]}