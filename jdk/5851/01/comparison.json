{"files":[{"patch":"@@ -88,1 +88,1 @@\n-    NOT_PRODUCT(_evac_failure_inject_counter(0) COMMA)\n+    EVAC_FAILURE_INJECTOR_ONLY(_evac_failure_inject_counter(0) COMMA)\n@@ -418,1 +418,1 @@\n-#ifndef PRODUCT\n+#if EVAC_FAILURE_INJECTOR\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ParScanThreadState.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -31,0 +31,2 @@\n+#include \"gc\/g1\/g1YoungGCEvacFailureInjector.hpp\"\n+#include \"gc\/g1\/g1_globals.hpp\"\n@@ -102,3 +104,2 @@\n-#ifndef PRODUCT\n-  size_t _evac_failure_inject_counter;\n-#endif\n+  EVAC_FAILURE_INJECTOR_ONLY(size_t _evac_failure_inject_counter;)\n+\n@@ -109,1 +110,1 @@\n-  bool inject_evacuation_failure() PRODUCT_RETURN_( return false; );\n+  bool inject_evacuation_failure() EVAC_FAILURE_INJECTOR_RETURN_( return false; );\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ParScanThreadState.hpp","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -31,1 +31,1 @@\n-#ifndef PRODUCT\n+#if EVAC_FAILURE_INJECTOR\n@@ -79,1 +79,1 @@\n-#endif \/\/ #ifndef PRODUCT\n+#endif \/\/ #if EVAC_FAILURE_INJECTOR\n","filename":"src\/hotspot\/share\/gc\/g1\/g1YoungGCEvacFailureInjector.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+#include \"gc\/g1\/g1_globals.hpp\"\n@@ -31,0 +32,10 @@\n+#if EVAC_FAILURE_INJECTOR\n+#define EVAC_FAILURE_INJECTOR_RETURN\n+#define EVAC_FAILURE_INJECTOR_RETURN_(code)\n+#define EVAC_FAILURE_INJECTOR_ONLY(code) code\n+#else\n+#define EVAC_FAILURE_INJECTOR_RETURN { return; }\n+#define EVAC_FAILURE_INJECTOR_RETURN_(code) { code }\n+#define EVAC_FAILURE_INJECTOR_ONLY(code)\n+#endif \/\/ EVAC_FAILURE_INJECTOR\n+\n@@ -38,1 +49,1 @@\n-\/\/ Available only in non-product builds.\n+\/\/ Available only when EVAC_FAILURE_INJECTOR is defined.\n@@ -40,1 +51,1 @@\n-#ifndef PRODUCT\n+#if EVAC_FAILURE_INJECTOR\n@@ -52,1 +63,1 @@\n-                                 bool mark_or_rebuild_in_progress) PRODUCT_RETURN_( return false; );\n+                                 bool mark_or_rebuild_in_progress) EVAC_FAILURE_INJECTOR_RETURN_( return false; );\n@@ -57,1 +68,1 @@\n-  void arm_if_needed() PRODUCT_RETURN;\n+  void arm_if_needed() EVAC_FAILURE_INJECTOR_RETURN;\n@@ -61,1 +72,1 @@\n-  bool evacuation_should_fail(size_t& counter) PRODUCT_RETURN_( return false; );\n+  bool evacuation_should_fail(size_t& counter) EVAC_FAILURE_INJECTOR_RETURN_( return false; );\n@@ -65,1 +76,1 @@\n-  void reset() PRODUCT_RETURN;\n+  void reset() EVAC_FAILURE_INJECTOR_RETURN;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1YoungGCEvacFailureInjector.hpp","additions":17,"deletions":6,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-#ifndef PRODUCT\n+#if EVAC_FAILURE_INJECTOR\n@@ -46,1 +46,1 @@\n-#endif  \/\/ #ifndef PRODUCT\n+#endif  \/\/ #if EVAC_FAILURE_INJECTOR\n","filename":"src\/hotspot\/share\/gc\/g1\/g1YoungGCEvacFailureInjector.inline.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -30,0 +30,56 @@\n+\/\/ Enable evacuation failure injector by default in non-product builds.\n+\n+#ifdef EVAC_FAILURE_INJECTOR\n+#error \"EVAC_FAILURE_INJECTOR already defined\"\n+#endif\n+#ifndef PRODUCT\n+#define EVAC_FAILURE_INJECTOR 1\n+#else\n+#define EVAC_FAILURE_INJECTOR 0\n+#endif\n+\n+#if EVAC_FAILURE_INJECTOR\n+#define GC_G1_EVACUATION_FAILURE_FLAGS(develop,                             \\\n+                                       develop_pd,                          \\\n+                                       product,                             \\\n+                                       product_pd,                          \\\n+                                       notproduct,                          \\\n+                                       range,                               \\\n+                                       constraint)                          \\\n+                                                                            \\\n+  product(bool, G1EvacuationFailureALot, false,                             \\\n+          \"Force use of evacuation failure handling during certain \"        \\\n+          \"evacuation pauses\")                                              \\\n+                                                                            \\\n+  product(uintx, G1EvacuationFailureALotCount, 1000,                        \\\n+          \"Number of successful evacuations between evacuation failures \"   \\\n+          \"occurring at object copying per thread\")                         \\\n+                                                                            \\\n+  product(uintx, G1EvacuationFailureALotInterval, 5,                        \\\n+          \"Total collections between forced triggering of evacuation \"      \\\n+          \"failures\")                                                       \\\n+                                                                            \\\n+  product(bool, G1EvacuationFailureALotDuringConcMark, true,                \\\n+          \"Force use of evacuation failure handling during evacuation \"     \\\n+          \"pauses when marking is in progress\")                             \\\n+                                                                            \\\n+  product(bool, G1EvacuationFailureALotDuringConcurrentStart, true,         \\\n+          \"Force use of evacuation failure handling during concurrent \"     \\\n+          \"start evacuation pauses\")                                        \\\n+                                                                            \\\n+  product(bool, G1EvacuationFailureALotDuringYoungGC, true,                 \\\n+          \"Force use of evacuation failure handling during young \"          \\\n+          \"evacuation pauses\")                                              \\\n+                                                                            \\\n+  product(bool, G1EvacuationFailureALotDuringMixedGC, true,                 \\\n+          \"Force use of evacuation failure handling during mixed \"          \\\n+          \"evacuation pauses\")\n+#else\n+#define GC_G1_EVACUATION_FAILURE_FLAGS(develop,                             \\\n+                                       develop_pd,                          \\\n+                                       product,                             \\\n+                                       product_pd,                          \\\n+                                       notproduct,                          \\\n+                                       range,                               \\\n+                                       constraint)\n+#endif\n@@ -272,28 +328,0 @@\n-  notproduct(bool, G1EvacuationFailureALot, false,                          \\\n-          \"Force use of evacuation failure handling during certain \"        \\\n-          \"evacuation pauses\")                                              \\\n-                                                                            \\\n-  develop(uintx, G1EvacuationFailureALotCount, 1000,                        \\\n-          \"Number of successful evacuations between evacuation failures \"   \\\n-          \"occurring at object copying per thread\")                         \\\n-                                                                            \\\n-  develop(uintx, G1EvacuationFailureALotInterval, 5,                        \\\n-          \"Total collections between forced triggering of evacuation \"      \\\n-          \"failures\")                                                       \\\n-                                                                            \\\n-  develop(bool, G1EvacuationFailureALotDuringConcMark, true,                \\\n-          \"Force use of evacuation failure handling during evacuation \"     \\\n-          \"pauses when marking is in progress\")                             \\\n-                                                                            \\\n-  develop(bool, G1EvacuationFailureALotDuringConcurrentStart, true,         \\\n-          \"Force use of evacuation failure handling during concurrent \"     \\\n-          \"start evacuation pauses\")                                        \\\n-                                                                            \\\n-  develop(bool, G1EvacuationFailureALotDuringYoungGC, true,                 \\\n-          \"Force use of evacuation failure handling during young \"          \\\n-          \"evacuation pauses\")                                              \\\n-                                                                            \\\n-  develop(bool, G1EvacuationFailureALotDuringMixedGC, true,                 \\\n-          \"Force use of evacuation failure handling during mixed \"          \\\n-          \"evacuation pauses\")                                              \\\n-                                                                            \\\n@@ -346,1 +374,9 @@\n-           section of the heap.\")\n+           section of the heap.\")                                           \\\n+                                                                            \\\n+  GC_G1_EVACUATION_FAILURE_FLAGS(develop,                                   \\\n+                    develop_pd,                                             \\\n+                    product,                                                \\\n+                    product_pd,                                             \\\n+                    notproduct,                                             \\\n+                    range,                                                  \\\n+                    constraint)\n","filename":"src\/hotspot\/share\/gc\/g1\/g1_globals.hpp","additions":65,"deletions":29,"binary":false,"changes":94,"status":"modified"}]}