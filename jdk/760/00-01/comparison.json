{"files":[{"patch":"@@ -1570,0 +1570,1 @@\n+    log_warning(codecache)(\"Failed to create %s for perf map\", fname);\n","filename":"src\/hotspot\/share\/code\/codeCache.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -590,1 +590,1 @@\n-    return \"Medium\";\n+    return \"Low\";\n","filename":"src\/hotspot\/share\/services\/diagnosticCommand.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -45,4 +45,3 @@\n-import java.io.FileInputStream;\n-import java.io.FileNotFoundException;\n-import java.util.Iterator;\n-import java.util.Scanner;\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Paths;\n@@ -58,1 +57,1 @@\n-    static Pattern outputPattern =\n+    static final Pattern OUTPUT_PATTERN =\n@@ -60,1 +59,1 @@\n-    static Pattern linePattern =\n+    static final Pattern LINE_PATTERN =\n@@ -66,1 +65,1 @@\n-        Matcher m = outputPattern.matcher(line);\n+        Matcher m = OUTPUT_PATTERN.matcher(line);\n@@ -68,1 +67,1 @@\n-        Assert.assertTrue(m.matches(), \"Did not print map file name\");\n+        Assert.assertTrue(m.matches(), \"Did not print map file name, line = \" + line);\n@@ -71,5 +70,4 @@\n-        try (Scanner in = new Scanner(new FileInputStream(m.group(1)))) {\n-            while (in.hasNextLine()) {\n-                line = in.nextLine();\n-                m = linePattern.matcher(line);\n-                Assert.assertTrue(m.matches(), \"Invalid file format: \" + line);\n+        try {\n+            for (String entry : Files.readAllLines(Paths.get(m.group(1)))) {\n+                m = LINE_PATTERN.matcher(entry);\n+                Assert.assertTrue(m.matches(), \"Invalid file format: \" + entry);\n@@ -77,1 +75,1 @@\n-        } catch (FileNotFoundException e) {\n+        } catch (IOException e) {\n","filename":"test\/hotspot\/jtreg\/serviceability\/dcmd\/compiler\/PerfMapTest.java","additions":12,"deletions":14,"binary":false,"changes":26,"status":"modified"}]}