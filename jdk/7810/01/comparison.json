{"files":[{"patch":"@@ -45,2 +45,0 @@\n-import java.security.interfaces.ECKey;\n-import java.security.interfaces.EdECKey;\n@@ -2021,1 +2019,1 @@\n-                    fullDisplayAlgName(privKey),\n+                    KeyUtil.fullDisplayAlgName(privKey),\n@@ -2032,1 +2030,1 @@\n-                    fullDisplayAlgName(privKey),\n+                    KeyUtil.fullDisplayAlgName(privKey),\n@@ -3563,14 +3561,0 @@\n-    private String fullDisplayAlgName(Key key) {\n-        String result = key.getAlgorithm();\n-        if (key instanceof ECKey) {\n-            ECParameterSpec paramSpec = ((ECKey) key).getParams();\n-            if (paramSpec instanceof NamedCurve) {\n-                NamedCurve nc = (NamedCurve)paramSpec;\n-                result += \" (\" + nc.getNameAndAliases()[0] + \")\";\n-            }\n-        } else if (key instanceof EdECKey) {\n-            result = ((EdECKey) key).getParams().getName();\n-        }\n-        return result;\n-    }\n-\n@@ -3580,1 +3564,1 @@\n-        String displayAlg = fullDisplayAlgName(key);\n+        String displayAlg = KeyUtil.fullDisplayAlgName(key);\n@@ -4949,1 +4933,1 @@\n-                            KeyUtil.getKeySize(key), fullDisplayAlgName(key))));\n+                            KeyUtil.getKeySize(key), KeyUtil.fullDisplayAlgName(key))));\n@@ -4955,1 +4939,1 @@\n-                        KeyUtil.getKeySize(key), fullDisplayAlgName(key))));\n+                        KeyUtil.getKeySize(key), KeyUtil.fullDisplayAlgName(key))));\n@@ -4976,1 +4960,1 @@\n-                    KeyUtil.getKeySize(key), fullDisplayAlgName(key))));\n+                    KeyUtil.getKeySize(key), KeyUtil.fullDisplayAlgName(key))));\n@@ -4981,1 +4965,1 @@\n-                    KeyUtil.getKeySize(key), fullDisplayAlgName(key))));\n+                    KeyUtil.getKeySize(key), KeyUtil.fullDisplayAlgName(key))));\n","filename":"src\/java.base\/share\/classes\/sun\/security\/tools\/keytool\/Main.java","additions":7,"deletions":23,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -193,0 +193,22 @@\n+    \/**\n+     * Returns the algorithm name of the given key object. If an EC key is\n+     * specified, returns the algorithm name and its named curve.\n+     *\n+     * @param key the key object, cannot be null\n+     * @return the algorithm name of the given key object, or return in the\n+     *       form of \"EC (named curve)\" if the given key object is an EC key\n+     *\/\n+    public static final String fullDisplayAlgName(Key key) {\n+        String result = key.getAlgorithm();\n+        if (key instanceof ECKey) {\n+            ECParameterSpec paramSpec = ((ECKey) key).getParams();\n+            if (paramSpec instanceof NamedCurve) {\n+                NamedCurve nc = (NamedCurve)paramSpec;\n+                result += \" (\" + nc.getNameAndAliases()[0] + \")\";\n+            }\n+        } else if (key instanceof EdECKey) {\n+            result = ((EdECKey) key).getParams().getName();\n+        }\n+        return result;\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/KeyUtil.java","additions":23,"deletions":1,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+import java.security.interfaces.ECKey;\n@@ -1247,1 +1248,1 @@\n-                        privateKey.getAlgorithm(), KeyUtil.getKeySize(privateKey)));\n+                        KeyUtil.fullDisplayAlgName(privateKey), KeyUtil.getKeySize(privateKey)));\n@@ -1253,1 +1254,1 @@\n-                        privateKey.getAlgorithm(), KeyUtil.getKeySize(privateKey)));\n+                        KeyUtil.fullDisplayAlgName(privateKey), KeyUtil.getKeySize(privateKey)));\n@@ -1277,1 +1278,1 @@\n-                        weakPublicKey.getAlgorithm(), KeyUtil.getKeySize(weakPublicKey)));\n+                        KeyUtil.fullDisplayAlgName(weakPublicKey), KeyUtil.getKeySize(weakPublicKey)));\n@@ -1454,1 +1455,6 @@\n-            return String.format(rb.getString(\"key.bit.disabled\"), kLen);\n+            if (key instanceof ECKey) {\n+                return String.format(rb.getString(\"key.bit.eccurve.disabled\"), kLen,\n+                        KeyUtil.fullDisplayAlgName(key));\n+            } else {\n+                return String.format(rb.getString(\"key.bit.disabled\"), kLen);\n+            }\n@@ -1466,1 +1472,6 @@\n-            return String.format(rb.getString(\"key.bit.weak\"), kLen);\n+            if (key instanceof ECKey) {\n+                return String.format(rb.getString(\"key.bit.eccurve.weak\"), kLen,\n+                        KeyUtil.fullDisplayAlgName(key));\n+            } else {\n+                return String.format(rb.getString(\"key.bit.weak\"), kLen);\n+            }\n@@ -1519,1 +1530,6 @@\n-            return String.format(rb.getString(\"key.bit.disabled\"), kLen);\n+            if (key instanceof ECKey) {\n+                return String.format(rb.getString(\"key.bit.eccurve.disabled\"), kLen,\n+                        KeyUtil.fullDisplayAlgName(key));\n+            } else {\n+                return String.format(rb.getString(\"key.bit.disabled\"), kLen);\n+            }\n@@ -1529,1 +1545,6 @@\n-            return String.format(rb.getString(\"key.bit.weak\"), kLen);\n+            if (key instanceof ECKey) {\n+                return String.format(rb.getString(\"key.bit.eccurve.weak\"), kLen,\n+                        KeyUtil.fullDisplayAlgName(key));\n+            } else {\n+                return String.format(rb.getString(\"key.bit.weak\"), kLen);\n+            }\n","filename":"src\/jdk.jartool\/share\/classes\/sun\/security\/tools\/jarsigner\/Main.java","additions":28,"deletions":7,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -184,0 +184,1 @@\n+        {\"key.bit.eccurve.weak\", \"%1$d-bit %2$s key (weak)\"},\n@@ -185,0 +186,1 @@\n+        {\"key.bit.eccurve.disabled\", \"%1$d-bit %2$s key (disabled)\"},\n","filename":"src\/jdk.jartool\/share\/classes\/sun\/security\/tools\/jarsigner\/Resources.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,100 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8282633\n+ * @summary jarsigner should display the named curve to better explain why\n+ *          an EC key is disabled or will be disabled.\n+ * @library \/test\/lib\n+ *\/\n+\n+import jdk.test.lib.SecurityTools;\n+import jdk.test.lib.process.OutputAnalyzer;\n+import jdk.test.lib.util.JarUtils;\n+\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+\n+public class DisableCurveTest {\n+    private static final String JAVA_SECURITY_FILE = \"java.security\";\n+\n+    public static void main(String[] args) throws Exception{\n+        SecurityTools.keytool(\"-keystore ks -storepass changeit \" +\n+                \"-genkeypair -keyalg EC -alias ca -dname CN=CA \" +\n+                \"-ext bc:c\")\n+                .shouldHaveExitValue(0);\n+\n+        JarUtils.createJarFile(Path.of(\"a.jar\"), Path.of(\".\"), Path.of(\"ks\"));\n+\n+        Files.writeString(Files.createFile(Paths.get(JAVA_SECURITY_FILE)),\n+                \"jdk.jar.disabledAlgorithms=secp256r1\\n\" +\n+                \"jdk.certpath.disabledAlgorithms=secp256r1\\n\");\n+\n+        SecurityTools.jarsigner(\"-keystore ks -storepass changeit \" +\n+                \"-signedjar signeda.jar -verbose \" +\n+                \"-J-Djava.security.properties=\" +\n+                JAVA_SECURITY_FILE +\n+                \" a.jar ca\")\n+                .shouldContain(\">>> Signer\")\n+                .shouldContain(\"Signature algorithm: SHA256withECDSA, 256-bit EC (secp256r1) key (disabled)\")\n+                .shouldContain(\"Warning:\")\n+                .shouldContain(\"The EC (secp256r1) signing key has a keysize of 256 which is considered a security risk and is disabled\")\n+                .shouldHaveExitValue(0);\n+\n+        SecurityTools.jarsigner(\"-verify signeda.jar \" +\n+                \"-J-Djava.security.properties=\" +\n+                JAVA_SECURITY_FILE +\n+                \" -keystore ks -storepass changeit -verbose -debug\")\n+                .shouldContain(\"- Signed by\")\n+                .shouldContain(\"Signature algorithm: SHA256withECDSA, 256-bit EC (secp256r1) key (disabled)\")\n+                .shouldContain(\"WARNING: The jar will be treated as unsigned\")\n+                .shouldHaveExitValue(0);\n+\n+        Files.deleteIfExists(Paths.get(JAVA_SECURITY_FILE));\n+        Files.writeString(Files.createFile(Paths.get(JAVA_SECURITY_FILE)),\n+                \"jdk.security.legacyAlgorithms=secp256r1\\n\");\n+\n+        SecurityTools.jarsigner(\"-keystore ks -storepass changeit \" +\n+                \"-signedjar signeda.jar -verbose \" +\n+                \"-J-Djava.security.properties=\" +\n+                JAVA_SECURITY_FILE +\n+                \" a.jar ca\")\n+                .shouldContain(\">>> Signer\")\n+                .shouldContain(\"Signature algorithm: SHA256withECDSA, 256-bit EC (secp256r1) key (weak)\")\n+                .shouldContain(\"Warning:\")\n+                .shouldContain(\"The EC (secp256r1) signing key has a keysize of 256 which is considered a security risk. This key size will be disabled in a future update\")\n+                .shouldHaveExitValue(0);\n+\n+        SecurityTools.jarsigner(\"-verify signeda.jar \" +\n+                \"-J-Djava.security.properties=\" +\n+                JAVA_SECURITY_FILE +\n+                \" -keystore ks -storepass changeit -verbose -debug\")\n+                .shouldContain(\"- Signed by\")\n+                .shouldContain(\"Signature algorithm: SHA256withECDSA, 256-bit EC (secp256r1) key (weak)\")\n+                .shouldContain(\"jar verified\")\n+                .shouldContain(\"The EC (secp256r1) signing key has a keysize of 256 which is considered a security risk. This key size will be disabled in a future update\")\n+                .shouldHaveExitValue(0);\n+    }\n+}\n","filename":"test\/jdk\/sun\/security\/tools\/jarsigner\/DisableCurveTest.java","additions":100,"deletions":0,"binary":false,"changes":100,"status":"added"}]}