{"files":[{"patch":"@@ -448,33 +448,0 @@\n-    static String fastUUID(long lsb, long msb) {\n-        if (COMPACT_STRINGS) {\n-            byte[] buf = new byte[36];\n-            formatUnsignedLong0(lsb,        4, buf, 24, 12);\n-            formatUnsignedLong0(lsb >>> 48, 4, buf, 19, 4);\n-            formatUnsignedLong0(msb,        4, buf, 14, 4);\n-            formatUnsignedLong0(msb >>> 16, 4, buf, 9,  4);\n-            formatUnsignedLong0(msb >>> 32, 4, buf, 0,  8);\n-\n-            buf[23] = '-';\n-            buf[18] = '-';\n-            buf[13] = '-';\n-            buf[8]  = '-';\n-\n-            return new String(buf, LATIN1);\n-        } else {\n-            byte[] buf = new byte[72];\n-\n-            formatUnsignedLong0UTF16(lsb,        4, buf, 24, 12);\n-            formatUnsignedLong0UTF16(lsb >>> 48, 4, buf, 19, 4);\n-            formatUnsignedLong0UTF16(msb,        4, buf, 14, 4);\n-            formatUnsignedLong0UTF16(msb >>> 16, 4, buf, 9,  4);\n-            formatUnsignedLong0UTF16(msb >>> 32, 4, buf, 0,  8);\n-\n-            StringUTF16.putChar(buf, 23, '-');\n-            StringUTF16.putChar(buf, 18, '-');\n-            StringUTF16.putChar(buf, 13, '-');\n-            StringUTF16.putChar(buf,  8, '-');\n-\n-            return new String(buf, UTF16);\n-        }\n-    }\n-\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Long.java","additions":0,"deletions":33,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -2398,3 +2398,0 @@\n-            public String fastUUID(long lsb, long msb) {\n-                return Long.fastUUID(lsb, msb);\n-            }\n","filename":"src\/java.base\/share\/classes\/java\/lang\/System.java","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -32,0 +32,2 @@\n+import static jdk.internal.digits.Hex256.hex256;\n+\n@@ -38,0 +40,45 @@\n+    \/**\n+     * Each element of the array represents the ascii encoded\n+     * hex relative to its index, for example:<p>\n+     * <pre>\n+     *       0 -> '00' -> ('0' << 8) | '0' -> 12336\n+     *       1 -> '01' -> ('0' << 8) | '1' -> 12337\n+     *       2 -> '02' -> ('0' << 8) | '2' -> 12338\n+     *\n+     *     ...\n+     *\n+     *      10 -> '0a' -> ('0' << 8) | 'a' -> 12385\n+     *      11 -> '0b' -> ('0' << 8) | 'b' -> 12386\n+     *      12 -> '0c' -> ('0' << 8) | 'b' -> 12387\n+     *\n+     *     ...\n+     *\n+     *      26 -> '1a' -> ('1' << 8) | 'a' -> 12641\n+     *      27 -> '1b' -> ('1' << 8) | 'b' -> 12642\n+     *      28 -> '1c' -> ('1' << 8) | 'c' -> 12643\n+     *\n+     *     ...\n+     *\n+     *     253 -> 'fd' -> ('f' << 8) | 'd' -> 26212\n+     *     254 -> 'fe' -> ('f' << 8) | 'e' -> 26213\n+     *     255 -> 'ff' -> ('f' << 8) | 'f' -> 26214\n+     * <\/pre>\n+     * <p>use like this:\n+     * <pre>\n+     *     int v = 254;\n+     *\n+     *     char[] chars = new char[2];\n+     *\n+     *     short i = DIGITS[v]; \/\/ 26213\n+     *\n+     *     chars[0] = (char) (byte) (i >> 8); \/\/ 'f'\n+     *     chars[1] = (char) (byte) i;        \/\/ 'e'\n+     * <\/pre>\n+     * In the byte [] encoded in LATIN1, it can be used combined with jdk.internal.util.ByteArray, such as:\n+     * <pre>\n+     *     int v = 254;\n+     *\n+     *     byte[] bytes = new byte[2];\n+     *     ByteArray.setShort(bytes, 0, DIGITS[v]);\n+     * <\/pre>\n+     *\/\n@@ -39,1 +86,1 @@\n-    private static final short[] DIGITS;\n+    static final short[] DIGITS;\n","filename":"src\/java.base\/share\/classes\/java\/util\/HexDigits.java","additions":48,"deletions":1,"binary":false,"changes":49,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,2 @@\n+import java.nio.charset.CharacterCodingException;\n+import java.nio.charset.StandardCharsets;\n@@ -32,0 +34,1 @@\n+import jdk.internal.util.ByteArray;\n@@ -466,1 +469,48 @@\n-        return jla.fastUUID(leastSigBits, mostSigBits);\n+        long lsb = leastSigBits;\n+        long msb = mostSigBits;\n+        short[] digits = HexDigits.DIGITS;\n+        byte[] buf = new byte[36];\n+        ByteArray.setLong(\n+                buf,\n+                0,\n+                ((long) digits[((int) (msb >> 56)) & 0xff] << 48)\n+                        | ((long) digits[((int) (msb >> 48)) & 0xff] << 32)\n+                        | (digits[((int) (msb >> 40)) & 0xff] << 16)\n+                        | digits[((int) (msb >> 32)) & 0xff]);\n+        buf[8] = '-';\n+        ByteArray.setInt(\n+                buf,\n+                9,\n+                (digits[(((int) msb) >> 24) & 0xff] << 16)\n+                        | digits[(((int) msb) >> 16) & 0xff]);\n+        buf[13] = '-';\n+        ByteArray.setInt(\n+                buf,\n+                14,\n+                (digits[(((int) msb) >> 8) & 0xff] << 16)\n+                        | digits[((int) msb) & 0xff]);\n+        buf[18] = '-';\n+        ByteArray.setInt(\n+                buf,\n+                19,\n+                (digits[(((int) (lsb >> 56))) & 0xff] << 16)\n+                        | digits[(((int) (lsb >> 48))) & 0xff]);\n+        buf[23] = '-';\n+        ByteArray.setLong(\n+                buf,\n+                24,\n+                ((long) digits[(((int) (lsb >> 40))) & 0xff] << 48)\n+                        | ((long) digits[((int) (lsb >> 32)) & 0xff] << 32)\n+                        | ((long) digits[(((int) lsb) >> 24) & 0xff] << 16)\n+                        | digits[(((int) lsb) >> 16) & 0xff]);\n+        ByteArray.setInt(\n+                buf,\n+                32,\n+                (digits[(((int) lsb) >> 8) & 0xff] << 16)\n+                        | digits[((int) lsb) & 0xff]);\n+\n+        try {\n+            return jla.newStringNoRepl(buf, StandardCharsets.ISO_8859_1);\n+        } catch (CharacterCodingException cce) {\n+            throw new AssertionError(cce);\n+        }\n","filename":"src\/java.base\/share\/classes\/java\/util\/UUID.java","additions":52,"deletions":2,"binary":false,"changes":54,"status":"modified"},{"patch":"@@ -179,5 +179,0 @@\n-    \/**\n-     * Invokes Long.fastUUID\n-     *\/\n-    String fastUUID(long lsb, long msb);\n-\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/access\/JavaLangAccess.java","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"}]}