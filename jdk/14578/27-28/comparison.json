{"files":[{"patch":"@@ -32,1 +32,1 @@\n-import jdk.internal.digits.Hex256;\n+import static jdk.internal.digits.Hex256.hex256;\n@@ -40,0 +40,48 @@\n+    \/**\n+     * Each element of the array represents the ascii encoded\n+     * hex relative to its index, for example:<p>\n+     * <pre>\n+     *       0 -> '00' -> ('0' << 8) | '0' -> 12336\n+     *       1 -> '01' -> ('0' << 8) | '1' -> 12337\n+     *       2 -> '02' -> ('0' << 8) | '2' -> 12338\n+     *\n+     *     ...\n+     *\n+     *      10 -> '0a' -> ('0' << 8) | 'a' -> 12385\n+     *      11 -> '0b' -> ('0' << 8) | 'b' -> 12386\n+     *      12 -> '0c' -> ('0' << 8) | 'b' -> 12387\n+     *\n+     *     ...\n+     *\n+     *      26 -> '1a' -> ('1' << 8) | 'a' -> 12641\n+     *      27 -> '1b' -> ('1' << 8) | 'b' -> 12642\n+     *      28 -> '1c' -> ('1' << 8) | 'c' -> 12643\n+     *\n+     *     ...\n+     *\n+     *     253 -> 'fd' -> ('f' << 8) | 'd' -> 26212\n+     *     254 -> 'fe' -> ('f' << 8) | 'e' -> 26213\n+     *     255 -> 'ff' -> ('f' << 8) | 'f' -> 26214\n+     * <\/pre>\n+     * <p>use like this:\n+     * <pre>\n+     *     int v = 254;\n+     *\n+     *     char[] chars = new char[2];\n+     *\n+     *     short i = DIGITS[v]; \/\/ 26213\n+     *\n+     *     chars[0] = (char) (byte) (i >> 8); \/\/ 'f'\n+     *     chars[1] = (char) (byte) i;        \/\/ 'e'\n+     * <\/pre>\n+     * In the byte [] encoded in LATIN1, it can be used combined with jdk.internal.util.ByteArray, such as:\n+     * <pre>\n+     *     int v = 254;\n+     *\n+     *     byte[] bytes = new byte[2];\n+     *     ByteArray.setShort(bytes, 0, DIGITS[v]);\n+     * <\/pre>\n+     *\/\n+    @Stable\n+    static final short[] DIGITS;\n+\n@@ -45,0 +93,15 @@\n+    static {\n+        short[] digits = new short[16 * 16];\n+\n+        for (int i = 0; i < 16; i++) {\n+            short hi = (short) ((i < 10 ? i + '0' : i - 10 + 'a') << 8);\n+\n+            for (int j = 0; j < 16; j++) {\n+                short lo = (short) (j < 10 ? j + '0' : j - 10 + 'a');\n+                digits[(i << 4) + j] = (short) (hi | lo);\n+            }\n+        }\n+\n+        DIGITS = digits;\n+    }\n+\n@@ -54,1 +117,0 @@\n-        short[] hex256 = Hex256.DIGITS;\n@@ -56,1 +118,1 @@\n-            int digits = hex256[(int) (value & 0xFF)];\n+            int digits = DIGITS[(int) (value & 0xFF)];\n@@ -62,1 +124,1 @@\n-        int digits = hex256[(int) (value & 0xFF)];\n+        int digits = DIGITS[(int) (value & 0xFF)];\n","filename":"src\/java.base\/share\/classes\/java\/util\/HexDigits.java","additions":66,"deletions":4,"binary":false,"changes":70,"status":"modified"},{"patch":"@@ -34,1 +34,0 @@\n-import jdk.internal.digits.Hex256;\n@@ -472,1 +471,1 @@\n-        short[] hex256 = Hex256.DIGITS;\n+        short[] digits = HexDigits.DIGITS;\n@@ -477,4 +476,4 @@\n-                ((long) hex256[((int) (msb >> 56)) & 0xff] << 48)\n-                        | ((long) hex256[((int) (msb >> 48)) & 0xff] << 32)\n-                        | (hex256[((int) (msb >> 40)) & 0xff] << 16)\n-                        | hex256[((int) (msb >> 32)) & 0xff]);\n+                ((long) digits[((int) (msb >> 56)) & 0xff] << 48)\n+                        | ((long) digits[((int) (msb >> 48)) & 0xff] << 32)\n+                        | (digits[((int) (msb >> 40)) & 0xff] << 16)\n+                        | digits[((int) (msb >> 32)) & 0xff]);\n@@ -485,2 +484,2 @@\n-                (hex256[(((int) msb) >> 24) & 0xff] << 16)\n-                        | hex256[(((int) msb) >> 16) & 0xff]);\n+                (digits[(((int) msb) >> 24) & 0xff] << 16)\n+                        | digits[(((int) msb) >> 16) & 0xff]);\n@@ -491,2 +490,2 @@\n-                (hex256[(((int) msb) >> 8) & 0xff] << 16)\n-                        | hex256[((int) msb) & 0xff]);\n+                (digits[(((int) msb) >> 8) & 0xff] << 16)\n+                        | digits[((int) msb) & 0xff]);\n@@ -497,2 +496,2 @@\n-                (hex256[(((int) (lsb >> 56))) & 0xff] << 16)\n-                        | hex256[(((int) (lsb >> 48))) & 0xff]);\n+                (digits[(((int) (lsb >> 56))) & 0xff] << 16)\n+                        | digits[(((int) (lsb >> 48))) & 0xff]);\n@@ -503,4 +502,4 @@\n-                ((long) hex256[(((int) (lsb >> 40))) & 0xff] << 48)\n-                        | ((long) hex256[((int) (lsb >> 32)) & 0xff] << 32)\n-                        | ((long) hex256[(((int) lsb) >> 24) & 0xff] << 16)\n-                        | hex256[(((int) lsb) >> 16) & 0xff]);\n+                ((long) digits[(((int) (lsb >> 40))) & 0xff] << 48)\n+                        | ((long) digits[((int) (lsb >> 32)) & 0xff] << 32)\n+                        | ((long) digits[(((int) lsb) >> 24) & 0xff] << 16)\n+                        | digits[(((int) lsb) >> 16) & 0xff]);\n@@ -510,2 +509,2 @@\n-                (hex256[(((int) lsb) >> 8) & 0xff] << 16)\n-                        | hex256[((int) lsb) & 0xff]);\n+                (digits[(((int) lsb) >> 8) & 0xff] << 16)\n+                        | digits[((int) lsb) & 0xff]);\n","filename":"src\/java.base\/share\/classes\/java\/util\/UUID.java","additions":17,"deletions":18,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -1,97 +0,0 @@\n-\/*\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package jdk.internal.digits;\n-\n-import jdk.internal.vm.annotation.Stable;\n-\n-\/**\n- * Provides a hexadecimal cache array of values from 0 to 255.\n- *\/\n-public final class Hex256 {\n-    private Hex256() {\n-    }\n-\n-    \/**\n-     * Each element of the array represents the ascii encoded\n-     * hex relative to its index, for example:<p>\n-     * <pre>\n-     *       0 -> '00' -> ('0' << 8) | '0' -> 12336\n-     *       1 -> '01' -> ('0' << 8) | '1' -> 12337\n-     *       2 -> '02' -> ('0' << 8) | '2' -> 12338\n-     *\n-     *     ...\n-     *\n-     *      10 -> '0a' -> ('0' << 8) | 'a' -> 12385\n-     *      11 -> '0b' -> ('0' << 8) | 'b' -> 12386\n-     *      12 -> '0c' -> ('0' << 8) | 'b' -> 12387\n-     *\n-     *     ...\n-     *\n-     *      26 -> '1a' -> ('1' << 8) | 'a' -> 12641\n-     *      27 -> '1b' -> ('1' << 8) | 'b' -> 12642\n-     *      28 -> '1c' -> ('1' << 8) | 'c' -> 12643\n-     *\n-     *     ...\n-     *\n-     *     253 -> 'fd' -> ('f' << 8) | 'd' -> 26212\n-     *     254 -> 'fe' -> ('f' << 8) | 'e' -> 26213\n-     *     255 -> 'ff' -> ('f' << 8) | 'f' -> 26214\n-     * <\/pre>\n-     * <p>use like this:\n-     * <pre>\n-     *     int v = 254;\n-     *\n-     *     char[] chars = new char[2];\n-     *\n-     *     short i = Hex256.DIGITS[v]; \/\/ 26213\n-     *\n-     *     chars[0] = (char) (byte) (i >> 8); \/\/ 'f'\n-     *     chars[1] = (char) (byte) i;        \/\/ 'e'\n-     * <\/pre>\n-     * In the byte [] encoded in LATIN1, it can be used combined with jdk.internal.util.ByteArray, such as:\n-     * <pre>\n-     *     int v = 254;\n-     *\n-     *     byte[] bytes = new byte[2];\n-     *     ByteArray.setShort(bytes, 0, Hex256.DIGITS[v]);\n-     * <\/pre>\n-     *\/\n-    @Stable\n-    public static final short[] DIGITS;\n-\n-    static {\n-        short[] digits = new short[16 * 16];\n-        for (int i = 0; i < 16; i++) {\n-            short hi = (short) ((i < 10 ? i + '0' : i - 10 + 'a') << 8);\n-            for (int j = 0; j < 16; j++) {\n-                short lo = (short) (j < 10 ? j + '0' : j - 10 + 'a');\n-                digits[(i << 4) + j] = (short) (hi | lo);\n-            }\n-        }\n-\n-        DIGITS = digits;\n-    }\n-}\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/digits\/Hex256.java","additions":0,"deletions":97,"binary":false,"changes":97,"status":"deleted"}]}