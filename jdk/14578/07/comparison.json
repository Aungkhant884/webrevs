{"files":[{"patch":"@@ -33,0 +33,1 @@\n+import java.nio.ByteOrder;\n@@ -449,0 +450,22 @@\n+        char[] hex256 = LongCache.HEX256;\n+\n+        char i0 = hex256[((int) (msb >> 56)) & 0xff];\n+        char i1 = hex256[((int) (msb >> 48)) & 0xff];\n+        char i2 = hex256[((int) (msb >> 40)) & 0xff];\n+        char i3 = hex256[((int) (msb >> 32)) & 0xff];\n+        char i4 = hex256[(((int) msb) >> 24) & 0xff];\n+        char i5 = hex256[(((int) msb) >> 16) & 0xff];\n+        char i6 = hex256[(((int) msb) >> 8) & 0xff];\n+        char i7 = hex256[((int) msb) & 0xff];\n+        char i8 = hex256[(((int) (lsb >> 56))) & 0xff];\n+        char i9 = hex256[(((int) (lsb >> 48))) & 0xff];\n+        char i10 = hex256[(((int) (lsb >> 40))) & 0xff];\n+        char i11 = hex256[((int) (lsb >> 32)) & 0xff];\n+        char i12 = hex256[(((int) lsb) >> 24) & 0xff];\n+        char i13 = hex256[(((int) lsb) >> 16) & 0xff];\n+        char i14 = hex256[(((int) lsb) >> 8) & 0xff];\n+        char i15 = hex256[((int) lsb) & 0xff];\n+\n+        final byte coder;\n+        final int charSize;\n+        final int off;\n@@ -450,13 +473,3 @@\n-            byte[] buf = new byte[36];\n-            formatUnsignedLong0(lsb,        4, buf, 24, 12);\n-            formatUnsignedLong0(lsb >>> 48, 4, buf, 19, 4);\n-            formatUnsignedLong0(msb,        4, buf, 14, 4);\n-            formatUnsignedLong0(msb >>> 16, 4, buf, 9,  4);\n-            formatUnsignedLong0(msb >>> 32, 4, buf, 0,  8);\n-\n-            buf[23] = '-';\n-            buf[18] = '-';\n-            buf[13] = '-';\n-            buf[8]  = '-';\n-\n-            return new String(buf, LATIN1);\n+            coder = LATIN1;\n+            charSize = 1;\n+            off = 0;\n@@ -464,14 +477,3 @@\n-            byte[] buf = new byte[72];\n-\n-            formatUnsignedLong0UTF16(lsb,        4, buf, 24, 12);\n-            formatUnsignedLong0UTF16(lsb >>> 48, 4, buf, 19, 4);\n-            formatUnsignedLong0UTF16(msb,        4, buf, 14, 4);\n-            formatUnsignedLong0UTF16(msb >>> 16, 4, buf, 9,  4);\n-            formatUnsignedLong0UTF16(msb >>> 32, 4, buf, 0,  8);\n-\n-            StringUTF16.putChar(buf, 23, '-');\n-            StringUTF16.putChar(buf, 18, '-');\n-            StringUTF16.putChar(buf, 13, '-');\n-            StringUTF16.putChar(buf,  8, '-');\n-\n-            return new String(buf, UTF16);\n+            coder = UTF16;\n+            charSize = 2;\n+            off = ByteOrder.nativeOrder() == ByteOrder.BIG_ENDIAN ? 1 : 0;\n@@ -479,0 +481,40 @@\n+        final byte[] buf = new byte[36 * charSize];\n+\n+        buf[off] = (byte) (i0 >> 8);\n+        buf[1 * charSize + off] = (byte) i0;\n+        buf[2 * charSize + off] = (byte) (i1 >> 8);\n+        buf[3 * charSize + off] = (byte) i1;\n+        buf[4 * charSize + off] = (byte) (i2 >> 8);\n+        buf[5 * charSize + off] = (byte) i2;\n+        buf[6 * charSize + off] = (byte) (i3 >> 8);\n+        buf[7 * charSize + off] = (byte) i3;\n+        buf[8 * charSize + off] = '-';\n+        buf[9 * charSize + off] = (byte) (i4 >> 8);\n+        buf[10 * charSize + off] = (byte) i4;\n+        buf[11 * charSize + off] = (byte) (i5 >> 8);\n+        buf[12 * charSize + off] = (byte) i5;\n+        buf[13 * charSize + off] = '-';\n+        buf[14 * charSize + off] = (byte) (i6 >> 8);\n+        buf[15 * charSize + off] = (byte) i6;\n+        buf[16 * charSize + off] = (byte) (i7 >> 8);\n+        buf[17 * charSize + off] = (byte) i7;\n+        buf[18 * charSize + off] = '-';\n+        buf[19 * charSize + off] = (byte) (i8 >> 8);\n+        buf[20 * charSize + off] = (byte) i8;\n+        buf[21 * charSize + off] = (byte) (i9 >> 8);\n+        buf[22 * charSize + off] = (byte) i9;\n+        buf[23 * charSize + off] = '-';\n+        buf[24 * charSize + off] = (byte) (i10 >> 8);\n+        buf[25 * charSize + off] = (byte) i10;\n+        buf[26 * charSize + off] = (byte) (i11 >> 8);\n+        buf[27 * charSize + off] = (byte) i11;\n+        buf[28 * charSize + off] = (byte) (i12 >> 8);\n+        buf[29 * charSize + off] = (byte) i12;\n+        buf[30 * charSize + off] = (byte) (i13 >> 8);\n+        buf[31 * charSize + off] = (byte) i13;\n+        buf[32 * charSize + off] = (byte) (i14 >> 8);\n+        buf[33 * charSize + off] = (byte) i14;\n+        buf[34 * charSize + off] = (byte) (i15 >> 8);\n+        buf[35 * charSize + off] = (byte) i15;\n+\n+        return new String(buf, coder);\n@@ -1167,0 +1209,3 @@\n+        @Stable\n+        static final char[] HEX256;\n+\n@@ -1181,0 +1226,8 @@\n+\n+            HEX256 = new char[256];\n+            for (int i = 0; i < 256; i++) {\n+                int hi = (i >> 4) & 15;\n+                int lo = i & 15;\n+                HEX256[i] = (char) (((hi < 10 ? '0' + hi : 'a' + hi - 10) << 8)\n+                        + (lo < 10 ? '0' + lo : 'a' + lo - 10));\n+            }\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Long.java","additions":80,"deletions":27,"binary":false,"changes":107,"status":"modified"}]}