{"files":[{"patch":"@@ -33,0 +33,1 @@\n+import java.nio.ByteOrder;\n@@ -37,0 +38,2 @@\n+import java.util.Arrays;\n+import jdk.internal.util.ByteArray;\n@@ -450,6 +453,1 @@\n-            byte[] buf = new byte[36];\n-            formatUnsignedLong0(lsb,        4, buf, 24, 12);\n-            formatUnsignedLong0(lsb >>> 48, 4, buf, 19, 4);\n-            formatUnsignedLong0(msb,        4, buf, 14, 4);\n-            formatUnsignedLong0(msb >>> 16, 4, buf, 9,  4);\n-            formatUnsignedLong0(msb >>> 32, 4, buf, 0,  8);\n+            char[] H256 = DigitCache.HEX256;\n@@ -457,3 +455,1 @@\n-            buf[23] = '-';\n-            buf[18] = '-';\n-            buf[13] = '-';\n+            byte[] buf = new byte[36];\n@@ -461,0 +457,3 @@\n+            buf[13] = '-';\n+            buf[18] = '-';\n+            buf[23] = '-';\n@@ -462,3 +461,39 @@\n-            return new String(buf, LATIN1);\n-        } else {\n-            byte[] buf = new byte[72];\n+            ByteArray.setLong(\n+                    buf,\n+                    0,\n+                    ((long) H256[((int) (msb >> 56)) & 0xff] << 48)\n+                            | ((long) H256[((int) (msb >> 48)) & 0xff] << 32)\n+                            | ((long) H256[((int) (msb >> 40)) & 0xff] << 16)\n+                            | H256[((int) (msb >> 32)) & 0xff]\n+            );\n+            ByteArray.setInt(\n+                    buf,\n+                    9,\n+                    (H256[(((int) msb) >> 24) & 0xff] << 16)\n+                            | H256[(((int) msb) >> 16) & 0xff]\n+            );\n+            ByteArray.setInt(\n+                    buf,\n+                    14,\n+                    (H256[(((int) msb) >> 8) & 0xff] << 16)\n+                            | H256[((int) msb) & 0xff]);\n+            ByteArray.setInt(\n+                    buf,\n+                    19,\n+                    (H256[(((int) (lsb >> 56))) & 0xff] << 16)\n+                            | H256[(((int) (lsb >> 48))) & 0xff]\n+            );\n+            ByteArray.setLong(\n+                    buf,\n+                    24,\n+                    ((long) H256[(((int) (lsb >> 40))) & 0xff] << 48)\n+                            | ((long) H256[((int) (lsb >> 32)) & 0xff] << 32)\n+                            | ((long) H256[(((int) lsb) >> 24) & 0xff] << 16)\n+                            | H256[(((int) lsb) >> 16) & 0xff]\n+            );\n+            ByteArray.setInt(\n+                    buf,\n+                    32,\n+                    (H256[(((int) lsb) >> 8) & 0xff] << 16)\n+                            | H256[((int) lsb) & 0xff]\n+            );\n@@ -466,5 +501,2 @@\n-            formatUnsignedLong0UTF16(lsb,        4, buf, 24, 12);\n-            formatUnsignedLong0UTF16(lsb >>> 48, 4, buf, 19, 4);\n-            formatUnsignedLong0UTF16(msb,        4, buf, 14, 4);\n-            formatUnsignedLong0UTF16(msb >>> 16, 4, buf, 9,  4);\n-            formatUnsignedLong0UTF16(msb >>> 32, 4, buf, 0,  8);\n+            return new String(buf, LATIN1);\n+        }\n@@ -472,4 +504,2 @@\n-            StringUTF16.putChar(buf, 23, '-');\n-            StringUTF16.putChar(buf, 18, '-');\n-            StringUTF16.putChar(buf, 13, '-');\n-            StringUTF16.putChar(buf,  8, '-');\n+        return fastUUIDUTF16(lsb, msb);\n+    }\n@@ -477,2 +507,61 @@\n-            return new String(buf, UTF16);\n-        }\n+    static String fastUUIDUTF16(long lsb, long msb) {\n+        char[] H256 = DigitCache.HEX256;\n+\n+        char i0 = H256[((int) (msb >> 56)) & 0xff];\n+        char i1 = H256[((int) (msb >> 48)) & 0xff];\n+        char i2 = H256[((int) (msb >> 40)) & 0xff];\n+        char i3 = H256[((int) (msb >> 32)) & 0xff];\n+        char i4 = H256[(((int) msb) >> 24) & 0xff];\n+        char i5 = H256[(((int) msb) >> 16) & 0xff];\n+        char i6 = H256[(((int) msb) >> 8) & 0xff];\n+        char i7 = H256[((int) msb) & 0xff];\n+        char i8 = H256[(((int) (lsb >> 56))) & 0xff];\n+        char i9 = H256[(((int) (lsb >> 48))) & 0xff];\n+        char i10 = H256[(((int) (lsb >> 40))) & 0xff];\n+        char i11 = H256[((int) (lsb >> 32)) & 0xff];\n+        char i12 = H256[(((int) lsb) >> 24) & 0xff];\n+        char i13 = H256[(((int) lsb) >> 16) & 0xff];\n+        char i14 = H256[(((int) lsb) >> 8) & 0xff];\n+        char i15 = H256[((int) lsb) & 0xff];\n+\n+        byte[] buf = new byte[72];\n+        int off = ByteOrder.nativeOrder() == ByteOrder.BIG_ENDIAN ? 1 : 0;\n+\n+        buf[0 + off] = (byte) (i0 >> 8);\n+        buf[2 + off] = (byte) i0;\n+        buf[4 + off] = (byte) (i1 >> 8);\n+        buf[6 + off] = (byte) i1;\n+        buf[8 + off] = (byte) (i2 >> 8);\n+        buf[10 + off] = (byte) i2;\n+        buf[12 + off] = (byte) (i3 >> 8);\n+        buf[14 + off] = (byte) i3;\n+        buf[16 + off] = '-';\n+        buf[18 + off] = (byte) (i4 >> 8);\n+        buf[20 + off] = (byte) i4;\n+        buf[22 + off] = (byte) (i5 >> 8);\n+        buf[24 + off] = (byte) i5;\n+        buf[26 + off] = '-';\n+        buf[28 + off] = (byte) (i6 >> 8);\n+        buf[30 + off] = (byte) i6;\n+        buf[32 + off] = (byte) (i7 >> 8);\n+        buf[34 + off] = (byte) i7;\n+        buf[36 + off] = '-';\n+        buf[38 + off] = (byte) (i8 >> 8);\n+        buf[40 + off] = (byte) i8;\n+        buf[42 + off] = (byte) (i9 >> 8);\n+        buf[44 + off] = (byte) i9;\n+        buf[46 + off] = '-';\n+        buf[48 + off] = (byte) (i10 >> 8);\n+        buf[50 + off] = (byte) i10;\n+        buf[52 + off] = (byte) (i11 >> 8);\n+        buf[54 + off] = (byte) i11;\n+        buf[56 + off] = (byte) (i12 >> 8);\n+        buf[58 + off] = (byte) i12;\n+        buf[60 + off] = (byte) (i13 >> 8);\n+        buf[62 + off] = (byte) i13;\n+        buf[64 + off] = (byte) (i14 >> 8);\n+        buf[66 + off] = (byte) i14;\n+        buf[68 + off] = (byte) (i15 >> 8);\n+        buf[70 + off] = (byte) i15;\n+\n+        return new String(buf, UTF16);\n@@ -1184,0 +1273,14 @@\n+    static final class DigitCache {\n+        @Stable\n+        static final char[] HEX256;\n+        static {\n+            HEX256 = new char[256];\n+            for (int i = 0; i < 256; i++) {\n+                int hi = (i >> 4) & 15;\n+                int lo = i & 15;\n+                HEX256[i] = (char) (((hi < 10 ? '0' + hi : 'a' + hi - 10) << 8)\n+                        + (lo < 10 ? '0' + lo : 'a' + lo - 10));\n+            }\n+        }\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Long.java","additions":126,"deletions":23,"binary":false,"changes":149,"status":"modified"}]}