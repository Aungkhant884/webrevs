{"files":[{"patch":"@@ -32,1 +32,1 @@\n-import jdk.internal.util.Hex256;\n+import jdk.internal.digits.Hex256;\n","filename":"src\/java.base\/share\/classes\/java\/util\/HexDigits.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,0 +34,1 @@\n+import jdk.internal.digits.Hex256;\n@@ -35,1 +36,0 @@\n-import jdk.internal.util.Hex256;\n@@ -479,1 +479,1 @@\n-                        | ((long) hex256[((int) (msb >> 40)) & 0xff] << 16)\n+                        | (hex256[((int) (msb >> 40)) & 0xff] << 16)\n","filename":"src\/java.base\/share\/classes\/java\/util\/UUID.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -0,0 +1,97 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.internal.digits;\n+\n+import jdk.internal.vm.annotation.Stable;\n+\n+\/**\n+ * Provides a hexadecimal cache array of values from 0 to 255.\n+ *\/\n+public final class Hex256 {\n+    private Hex256() {\n+    }\n+\n+    \/**\n+     * Each element of the array represents the ascii encoded\n+     * hex relative to its index, for example:<p>\n+     * <pre>\n+     *       0 -> '00' -> ('0' << 8) | '0' -> 12336\n+     *       1 -> '01' -> ('0' << 8) | '1' -> 12337\n+     *       2 -> '02' -> ('0' << 8) | '2' -> 12338\n+     *\n+     *     ...\n+     *\n+     *      10 -> '0a' -> ('0' << 8) | 'a' -> 12385\n+     *      11 -> '0b' -> ('0' << 8) | 'b' -> 12386\n+     *      12 -> '0c' -> ('0' << 8) | 'b' -> 12387\n+     *\n+     *     ...\n+     *\n+     *      26 -> '1a' -> ('1' << 8) | 'a' -> 12641\n+     *      27 -> '1b' -> ('1' << 8) | 'b' -> 12642\n+     *      28 -> '1c' -> ('1' << 8) | 'c' -> 12643\n+     *\n+     *     ...\n+     *\n+     *     253 -> 'fd' -> ('f' << 8) | 'd' -> 26212\n+     *     254 -> 'fe' -> ('f' << 8) | 'e' -> 26213\n+     *     255 -> 'ff' -> ('f' << 8) | 'f' -> 26214\n+     * <\/pre>\n+     * <p>use like this:\n+     * <pre>\n+     *     int v = 254;\n+     *\n+     *     char[] chars = new char[2];\n+     *\n+     *     short i = Hex256.DIGITS[v]; \/\/ 26213\n+     *\n+     *     chars[0] = (char) (byte) (i >> 8); \/\/ 'f'\n+     *     chars[1] = (char) (byte) i;        \/\/ 'e'\n+     * <\/pre>\n+     * In the byte [] encoded in LATIN1, it can be used combined with jdk.internal.util.ByteArray, such as:\n+     * <pre>\n+     *     int v = 254;\n+     *\n+     *     byte[] bytes = new byte[2];\n+     *     ByteArray.setShort(bytes, 0, Hex256.DIGITS[v]);\n+     * <\/pre>\n+     *\/\n+    @Stable\n+    public static final short[] DIGITS;\n+\n+    static {\n+        short[] digits = new short[16 * 16];\n+        for (int i = 0; i < 16; i++) {\n+            short hi = (short) ((i < 10 ? i + '0' : i - 10 + 'a') << 8);\n+            for (int j = 0; j < 16; j++) {\n+                short lo = (short) (j < 10 ? j + '0' : j - 10 + 'a');\n+                digits[(i << 4) + j] = (short) (hi | lo);\n+            }\n+        }\n+\n+        DIGITS = digits;\n+    }\n+}\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/digits\/Hex256.java","additions":97,"deletions":0,"binary":false,"changes":97,"status":"added"},{"patch":"@@ -1,52 +0,0 @@\n-\/*\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package jdk.internal.util;\n-\n-import jdk.internal.vm.annotation.Stable;\n-\n-\/**\n- * Provides a hexadecimal cache array of values from 0 to 255\n- *\/\n-public final class Hex256 {\n-    private Hex256() {\n-    }\n-\n-    @Stable\n-    public static final short[] DIGITS;\n-\n-    static {\n-        short[] digits = new short[16 * 16];\n-        for (int i = 0; i < 16; i++) {\n-            short hi = (short) ((i < 10 ? i + '0' : i - 10 + 'a') << 8);\n-            for (int j = 0; j < 16; j++) {\n-                short lo = (short) (j < 10 ? j + '0' : j - 10 + 'a');\n-                digits[(i << 4) + j] = (short) (hi | lo);\n-            }\n-        }\n-\n-        DIGITS = digits;\n-    }\n-}\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/util\/Hex256.java","additions":0,"deletions":52,"binary":false,"changes":52,"status":"deleted"}]}