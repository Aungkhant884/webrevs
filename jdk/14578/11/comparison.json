{"files":[{"patch":"@@ -33,0 +33,1 @@\n+import java.nio.ByteOrder;\n@@ -449,0 +450,19 @@\n+        char[] hex256 = DigitCache.HEX256;\n+\n+        char i0 = hex256[((int) (msb >> 56)) & 0xff];\n+        char i1 = hex256[((int) (msb >> 48)) & 0xff];\n+        char i2 = hex256[((int) (msb >> 40)) & 0xff];\n+        char i3 = hex256[((int) (msb >> 32)) & 0xff];\n+        char i4 = hex256[(((int) msb) >> 24) & 0xff];\n+        char i5 = hex256[(((int) msb) >> 16) & 0xff];\n+        char i6 = hex256[(((int) msb) >> 8) & 0xff];\n+        char i7 = hex256[((int) msb) & 0xff];\n+        char i8 = hex256[(((int) (lsb >> 56))) & 0xff];\n+        char i9 = hex256[(((int) (lsb >> 48))) & 0xff];\n+        char i10 = hex256[(((int) (lsb >> 40))) & 0xff];\n+        char i11 = hex256[((int) (lsb >> 32)) & 0xff];\n+        char i12 = hex256[(((int) lsb) >> 24) & 0xff];\n+        char i13 = hex256[(((int) lsb) >> 16) & 0xff];\n+        char i14 = hex256[(((int) lsb) >> 8) & 0xff];\n+        char i15 = hex256[((int) lsb) & 0xff];\n+\n@@ -451,5 +471,0 @@\n-            formatUnsignedLong0(lsb,        4, buf, 24, 12);\n-            formatUnsignedLong0(lsb >>> 48, 4, buf, 19, 4);\n-            formatUnsignedLong0(msb,        4, buf, 14, 4);\n-            formatUnsignedLong0(msb >>> 16, 4, buf, 9,  4);\n-            formatUnsignedLong0(msb >>> 32, 4, buf, 0,  8);\n@@ -457,2 +472,13 @@\n-            buf[23] = '-';\n-            buf[18] = '-';\n+            buf[0] = (byte) (i0 >> 8);\n+            buf[1] = (byte) i0;\n+            buf[2] = (byte) (i1 >> 8);\n+            buf[3] = (byte) i1;\n+            buf[4] = (byte) (i2 >> 8);\n+            buf[5] = (byte) i2;\n+            buf[6] = (byte) (i3 >> 8);\n+            buf[7] = (byte) i3;\n+            buf[8] = '-';\n+            buf[9] = (byte) (i4 >> 8);\n+            buf[10] = (byte) i4;\n+            buf[11] = (byte) (i5 >> 8);\n+            buf[12] = (byte) i5;\n@@ -460,1 +486,22 @@\n-            buf[8]  = '-';\n+            buf[14] = (byte) (i6 >> 8);\n+            buf[15] = (byte) i6;\n+            buf[16] = (byte) (i7 >> 8);\n+            buf[17] = (byte) i7;\n+            buf[18] = '-';\n+            buf[19] = (byte) (i8 >> 8);\n+            buf[20] = (byte) i8;\n+            buf[21] = (byte) (i9 >> 8);\n+            buf[22] = (byte) i9;\n+            buf[23] = '-';\n+            buf[24] = (byte) (i10 >> 8);\n+            buf[25] = (byte) i10;\n+            buf[26] = (byte) (i11 >> 8);\n+            buf[27] = (byte) i11;\n+            buf[28] = (byte) (i12 >> 8);\n+            buf[29] = (byte) i12;\n+            buf[30] = (byte) (i13 >> 8);\n+            buf[31] = (byte) i13;\n+            buf[32] = (byte) (i14 >> 8);\n+            buf[33] = (byte) i14;\n+            buf[34] = (byte) (i15 >> 8);\n+            buf[35] = (byte) i15;\n@@ -463,13 +510,1 @@\n-        } else {\n-            byte[] buf = new byte[72];\n-\n-            formatUnsignedLong0UTF16(lsb,        4, buf, 24, 12);\n-            formatUnsignedLong0UTF16(lsb >>> 48, 4, buf, 19, 4);\n-            formatUnsignedLong0UTF16(msb,        4, buf, 14, 4);\n-            formatUnsignedLong0UTF16(msb >>> 16, 4, buf, 9,  4);\n-            formatUnsignedLong0UTF16(msb >>> 32, 4, buf, 0,  8);\n-\n-            StringUTF16.putChar(buf, 23, '-');\n-            StringUTF16.putChar(buf, 18, '-');\n-            StringUTF16.putChar(buf, 13, '-');\n-            StringUTF16.putChar(buf,  8, '-');\n+        }\n@@ -477,1 +512,76 @@\n-            return new String(buf, UTF16);\n+        byte[] buf = new byte[72];\n+\n+        if (ByteOrder.nativeOrder() == ByteOrder.BIG_ENDIAN) {\n+            buf[1] = (byte) (i0 >> 8);\n+            buf[3] = (byte) i0;\n+            buf[5] = (byte) (i1 >> 8);\n+            buf[7] = (byte) i1;\n+            buf[9] = (byte) (i2 >> 8);\n+            buf[11] = (byte) i2;\n+            buf[13] = (byte) (i3 >> 8);\n+            buf[15] = (byte) i3;\n+            buf[17] = '-';\n+            buf[19] = (byte) (i4 >> 8);\n+            buf[21] = (byte) i4;\n+            buf[23] = (byte) (i5 >> 8);\n+            buf[25] = (byte) i5;\n+            buf[27] = '-';\n+            buf[29] = (byte) (i6 >> 8);\n+            buf[31] = (byte) i6;\n+            buf[33] = (byte) (i7 >> 8);\n+            buf[35] = (byte) i7;\n+            buf[37] = '-';\n+            buf[39] = (byte) (i8 >> 8);\n+            buf[41] = (byte) i8;\n+            buf[43] = (byte) (i9 >> 8);\n+            buf[45] = (byte) i9;\n+            buf[47] = '-';\n+            buf[49] = (byte) (i10 >> 8);\n+            buf[51] = (byte) i10;\n+            buf[53] = (byte) (i11 >> 8);\n+            buf[55] = (byte) i11;\n+            buf[57] = (byte) (i12 >> 8);\n+            buf[59] = (byte) i12;\n+            buf[61] = (byte) (i13 >> 8);\n+            buf[63] = (byte) i13;\n+            buf[65] = (byte) (i14 >> 8);\n+            buf[67] = (byte) i14;\n+            buf[69] = (byte) (i15 >> 8);\n+            buf[71] = (byte) i15;\n+        } else {\n+            buf[0] = (byte) (i0 >> 8);\n+            buf[2] = (byte) i0;\n+            buf[4] = (byte) (i1 >> 8);\n+            buf[6] = (byte) i1;\n+            buf[8] = (byte) (i2 >> 8);\n+            buf[10] = (byte) i2;\n+            buf[12] = (byte) (i3 >> 8);\n+            buf[14] = (byte) i3;\n+            buf[16] = '-';\n+            buf[18] = (byte) (i4 >> 8);\n+            buf[20] = (byte) i4;\n+            buf[22] = (byte) (i5 >> 8);\n+            buf[24] = (byte) i5;\n+            buf[26] = '-';\n+            buf[28] = (byte) (i6 >> 8);\n+            buf[30] = (byte) i6;\n+            buf[32] = (byte) (i7 >> 8);\n+            buf[34] = (byte) i7;\n+            buf[36] = '-';\n+            buf[38] = (byte) (i8 >> 8);\n+            buf[40] = (byte) i8;\n+            buf[42] = (byte) (i9 >> 8);\n+            buf[44] = (byte) i9;\n+            buf[46] = '-';\n+            buf[48] = (byte) (i10 >> 8);\n+            buf[50] = (byte) i10;\n+            buf[52] = (byte) (i11 >> 8);\n+            buf[54] = (byte) i11;\n+            buf[56] = (byte) (i12 >> 8);\n+            buf[58] = (byte) i12;\n+            buf[60] = (byte) (i13 >> 8);\n+            buf[62] = (byte) i13;\n+            buf[64] = (byte) (i14 >> 8);\n+            buf[66] = (byte) i14;\n+            buf[68] = (byte) (i15 >> 8);\n+            buf[70] = (byte) i15;\n@@ -479,0 +589,2 @@\n+\n+        return new String(buf, UTF16);\n@@ -1184,0 +1296,14 @@\n+    static final class DigitCache {\n+        @Stable\n+        static final char[] HEX256;\n+        static {\n+            HEX256 = new char[256];\n+            for (int i = 0; i < 256; i++) {\n+                int hi = (i >> 4) & 15;\n+                int lo = i & 15;\n+                HEX256[i] = (char) (((hi < 10 ? '0' + hi : 'a' + hi - 10) << 8)\n+                        + (lo < 10 ? '0' + lo : 'a' + lo - 10));\n+            }\n+        }\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Long.java","additions":148,"deletions":22,"binary":false,"changes":170,"status":"modified"}]}