{"files":[{"patch":"@@ -1088,1 +1088,1 @@\n-        if (!w.isOpaque()) {\n+        if (w != null && !w.isOpaque()) {\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/RepaintManager.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,105 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/* @test\n+ * @bug 8170794\n+ * @key headful\n+ * @summary Verifies iconifying internalframe after setting DesktopManager\n+ *          does not return NPE\n+ *  @run main TestDesktopManagerNPE\n+ *\/\n+\n+import java.awt.Dimension;\n+import java.awt.Robot;\n+import java.awt.Toolkit;\n+import javax.swing.DefaultDesktopManager;\n+import javax.swing.JInternalFrame;\n+import javax.swing.JDesktopPane;\n+import javax.swing.JFrame;\n+import javax.swing.JMenu;\n+import javax.swing.JMenuItem;\n+import javax.swing.JMenuBar;\n+import javax.swing.KeyStroke;\n+import javax.swing.SwingUtilities;\n+\n+public class TestDesktopManagerNPE {\n+\n+    static JDesktopPane desktop;\n+    static JInternalFrame internalFrame;\n+    static JFrame frame;\n+\n+    \/\/Create a new internal frame.\n+    protected static void createFrame() {\n+        internalFrame = new JInternalFrame();\n+        internalFrame.setSize(300, 300);\n+        internalFrame.setLocation(30, 30);\n+        internalFrame.setVisible(true); \/\/necessary as of 1.3\n+        desktop.add(internalFrame);\n+        try {\n+            internalFrame.setSelected(true);\n+        } catch (java.beans.PropertyVetoException e) {}\n+    }\n+\n+    \/**\n+     * Create the GUI and show it. For thread safety,\n+     * this method should be invoked from the\n+     * event-dispatching thread.\n+     *\/\n+    private static void createAndShowGUI() {\n+        JFrame.setDefaultLookAndFeelDecorated(true);\n+\n+        int inset = 50;\n+        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();\n+        frame = new JFrame(\"Test\");\n+        frame.setBounds(inset, inset,\n+                  screenSize.width - inset*2,\n+                  screenSize.height - inset*2);\n+\n+        \/\/Set up the GUI.\n+        desktop = new JDesktopPane(); \/\/a specialized layered pane\n+\n+        \/\/ If you add this line, iconification will fail\n+        desktop.setDesktopManager(new DefaultDesktopManager());\n+\n+        createFrame(); \/\/create first \"window\"\n+        frame.setContentPane(desktop);\n+        \/\/Display the window.\n+        frame.setVisible(true);\n+    }\n+\n+    public static void main(String[] args) throws Exception {\n+        try {\n+            SwingUtilities.invokeAndWait(() -> createAndShowGUI());\n+            Robot robot = new Robot();\n+            robot.delay(1000);\n+            internalFrame.setIcon(true);\n+            robot.delay(1000);\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JDesktopPane\/TestDesktopManagerNPE.java","additions":105,"deletions":0,"binary":false,"changes":105,"status":"added"}]}