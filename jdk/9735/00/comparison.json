{"files":[{"patch":"@@ -1274,0 +1274,16 @@\n+    bool should_clear_region(HeapRegion* hr) const {\n+      \/\/ The bitmap for young regions must obviously be clear as we never mark through them;\n+      \/\/ old regions are only in the collection set after the concurrent cycle completed,\n+      \/\/ so their bitmaps must also be clear except when the pause occurs during the\n+      \/\/ Concurrent Cleanup for Next Mark phase. Only at that point the region's bitmap may\n+      \/\/ contain marks while being in the collection set at the same time.\n+      \/\/\n+      \/\/ There is one exception: shutdown might have aborted the Concurrent Cleanup for Next\n+      \/\/ Mark phase midway, which might have also left stale marks in old generation regions.\n+      \/\/ There might actually have been scheduled multiple collections, but at that point we do\n+      \/\/ not care that much about performance and just do the work multiple times if needed.\n+      return (_g1h->collector_state()->clearing_bitmap() ||\n+              _g1h->concurrent_mark_is_terminating()) &&\n+              hr->is_old();\n+    }\n+\n@@ -1282,7 +1298,1 @@\n-      \/\/\n-      \/\/ A clear bitmap is obvious for young regions as we never mark through them;\n-      \/\/ old regions are only in the collection set after the concurrent cycle completed,\n-      \/\/ so their bitmaps must also be clear except when the pause occurs during the\n-      \/\/ concurrent bitmap clear. At that point the region's bitmap may contain marks\n-      \/\/ while being in the collection set at the same time.\n-      if (_g1h->collector_state()->clearing_bitmap() && hr->is_old()) {\n+      if (should_clear_region(hr)) {\n","filename":"src\/hotspot\/share\/gc\/g1\/g1RemSet.cpp","additions":17,"deletions":7,"binary":false,"changes":24,"status":"modified"}]}