{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,0 @@\n-#include \"dirent_md.h\"\n","filename":"src\/java.base\/windows\/native\/libjava\/WinNTFileSystem_md.c","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1,152 +0,0 @@\n-\/*\n- * Copyright (c) 1995, 2003, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/*\n- * Posix-compatible directory access routines\n- *\/\n-\n-#include <windows.h>\n-#include <direct.h>                    \/* For _getdrive() *\/\n-#include <errno.h>\n-#include <assert.h>\n-\n-#include \"dirent_md.h\"\n-\n-\n-\/* Caller must have already run dirname through JVM_NativePath, which removes\n-   duplicate slashes and converts all instances of '\/' into '\\\\'. *\/\n-\n-DIR *\n-opendir(const char *dirname)\n-{\n-    DIR *dirp = (DIR *)malloc(sizeof(DIR));\n-    DWORD fattr;\n-    char alt_dirname[4] = { 0, 0, 0, 0 };\n-\n-    if (dirp == 0) {\n-        errno = ENOMEM;\n-        return 0;\n-    }\n-\n-    \/*\n-     * Win32 accepts \"\\\" in its POSIX stat(), but refuses to treat it\n-     * as a directory in FindFirstFile().  We detect this case here and\n-     * prepend the current drive name.\n-     *\/\n-    if (dirname[1] == '\\0' && dirname[0] == '\\\\') {\n-        alt_dirname[0] = _getdrive() + 'A' - 1;\n-        alt_dirname[1] = ':';\n-        alt_dirname[2] = '\\\\';\n-        alt_dirname[3] = '\\0';\n-        dirname = alt_dirname;\n-    }\n-\n-    dirp->path = (char *)malloc(strlen(dirname) + 5);\n-    if (dirp->path == 0) {\n-        free(dirp);\n-        errno = ENOMEM;\n-        return 0;\n-    }\n-    strcpy(dirp->path, dirname);\n-\n-    fattr = GetFileAttributes(dirp->path);\n-    if (fattr == ((DWORD)-1)) {\n-        free(dirp->path);\n-        free(dirp);\n-        errno = ENOENT;\n-        return 0;\n-    } else if ((fattr & FILE_ATTRIBUTE_DIRECTORY) == 0) {\n-        free(dirp->path);\n-        free(dirp);\n-        errno = ENOTDIR;\n-        return 0;\n-    }\n-\n-    \/* Append \"*.*\", or possibly \"\\\\*.*\", to path *\/\n-    if (dirp->path[1] == ':'\n-        && (dirp->path[2] == '\\0'\n-            || (dirp->path[2] == '\\\\' && dirp->path[3] == '\\0'))) {\n-        \/* No '\\\\' needed for cases like \"Z:\" or \"Z:\\\" *\/\n-        strcat(dirp->path, \"*.*\");\n-    } else {\n-        strcat(dirp->path, \"\\\\*.*\");\n-    }\n-\n-    dirp->handle = FindFirstFile(dirp->path, &dirp->find_data);\n-    if (dirp->handle == INVALID_HANDLE_VALUE) {\n-        if (GetLastError() != ERROR_FILE_NOT_FOUND) {\n-            free(dirp->path);\n-            free(dirp);\n-            errno = EACCES;\n-            return 0;\n-        }\n-    }\n-    return dirp;\n-}\n-\n-struct dirent *\n-readdir(DIR *dirp)\n-{\n-    if (dirp->handle == INVALID_HANDLE_VALUE) {\n-        return 0;\n-    }\n-\n-    strcpy(dirp->dirent.d_name, dirp->find_data.cFileName);\n-\n-    if (!FindNextFile(dirp->handle, &dirp->find_data)) {\n-        if (GetLastError() == ERROR_INVALID_HANDLE) {\n-            errno = EBADF;\n-            return 0;\n-        }\n-        FindClose(dirp->handle);\n-        dirp->handle = INVALID_HANDLE_VALUE;\n-    }\n-\n-    return &dirp->dirent;\n-}\n-\n-int\n-closedir(DIR *dirp)\n-{\n-    if (dirp->handle != INVALID_HANDLE_VALUE) {\n-        if (!FindClose(dirp->handle)) {\n-            errno = EBADF;\n-            return -1;\n-        }\n-        dirp->handle = INVALID_HANDLE_VALUE;\n-    }\n-    free(dirp->path);\n-    free(dirp);\n-    return 0;\n-}\n-\n-void\n-rewinddir(DIR *dirp)\n-{\n-    if (dirp->handle != INVALID_HANDLE_VALUE) {\n-        FindClose(dirp->handle);\n-    }\n-    dirp->handle = FindFirstFile(dirp->path, &dirp->find_data);\n-}\n","filename":"src\/java.base\/windows\/native\/libjava\/dirent_md.c","additions":0,"deletions":152,"binary":false,"changes":152,"status":"deleted"},{"patch":"@@ -1,40 +0,0 @@\n-\/*\n- * Copyright (c) 1995, 1997, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/*\n- * Posix-compatible directory access routines\n- *\/\n-\n-#ifndef _WIN32_DIRENT_H_\n-#define _WIN32_DIRENT_H_\n-\n-#include \"jvm_md.h\"     \/* DIR actually defined in here *\/\n-\n-DIR *opendir(const char *dirname);\n-struct dirent *readdir(DIR *dirp);\n-int closedir(DIR *dirp);\n-void rewinddir(DIR *dirp);\n-\n-#endif\n","filename":"src\/java.base\/windows\/native\/libjava\/dirent_md.h","additions":0,"deletions":40,"binary":false,"changes":40,"status":"deleted"}]}