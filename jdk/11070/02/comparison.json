{"files":[{"patch":"@@ -381,0 +381,6 @@\n+        if (clazz == null) {\n+            throw new IllegalArgumentException(\n+                    \"No value class supported \" +\n+                            \" for attribute \" + oid +\n+                            \" constructing PKCS9Attribute\");\n+        }\n@@ -600,1 +606,1 @@\n-            throw new IOException(\"PKCS9 extended-certificate \" +\n+            throw new IllegalArgumentException(\"PKCS9 extended-certificate \" +\n@@ -604,1 +610,1 @@\n-            throw new IOException(\"PKCS9 IssuerAndSerialNumber \" +\n+            throw new IllegalArgumentException(\"PKCS9 IssuerAndSerialNumber \" +\n@@ -609,1 +615,1 @@\n-            throw new IOException(\"PKCS9 RSA DSI attributes \" +\n+            throw new IllegalArgumentException(\"PKCS9 RSA DSI attributes \" +\n@@ -613,1 +619,1 @@\n-            throw new IOException(\"PKCS9 attribute #13 not supported.\");\n+            throw new IllegalArgumentException(\"PKCS9 attribute #13 not supported.\");\n@@ -625,1 +631,1 @@\n-            throw new IOException(\"PKCS9 attribute #15 not supported.\");\n+            throw new IllegalArgumentException(\"PKCS9 attribute #15 not supported.\");\n@@ -629,4 +635,7 @@\n-            throw new IOException(\n-                \"PKCS9 SigningCertificate attribute not supported.\");\n-            \/\/ break unnecessary\n-\n+            {\n+                DerOutputStream temp2 = new DerOutputStream();\n+                SigningCertificateInfo info = (SigningCertificateInfo)value;\n+                temp2.writeBytes(info.toByteArray());\n+                temp.write(DerValue.tag_Set, temp2.toByteArray());\n+            }\n+            break;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/pkcs\/PKCS9Attribute.java","additions":18,"deletions":9,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -82,1 +82,1 @@\n-public class SigningCertificateInfo {\n+class SigningCertificateInfo {\n@@ -84,0 +84,1 @@\n+    private byte[] ber;\n@@ -86,1 +87,1 @@\n-    public SigningCertificateInfo(byte[] ber) throws IOException {\n+    SigningCertificateInfo(byte[] ber) throws IOException {\n@@ -88,0 +89,1 @@\n+        this.ber = ber;\n@@ -90,0 +92,5 @@\n+    byte[] toByteArray() {\n+        return ber;\n+    }\n+\n+    @Override\n@@ -102,1 +109,1 @@\n-    public void parse(byte[] bytes) throws IOException {\n+    private void parse(byte[] bytes) throws IOException {\n@@ -125,1 +132,0 @@\n-}\n@@ -127,1 +133,1 @@\n-class ESSCertId {\n+    static class ESSCertId {\n@@ -129,1 +135,1 @@\n-    private static volatile HexDumpEncoder hexDumper;\n+        private static volatile HexDumpEncoder hexDumper;\n@@ -131,3 +137,3 @@\n-    private final byte[] certHash;\n-    private final GeneralNames issuer;\n-    private final SerialNumber serialNumber;\n+        private final byte[] certHash;\n+        private final GeneralNames issuer;\n+        private final SerialNumber serialNumber;\n@@ -135,3 +141,3 @@\n-    ESSCertId(DerValue certId) throws IOException {\n-        \/\/ Parse certHash\n-        certHash = certId.data.getDerValue().toByteArray();\n+        ESSCertId(DerValue certId) throws IOException {\n+            \/\/ Parse certHash\n+            certHash = certId.data.getDerValue().toByteArray();\n@@ -139,10 +145,11 @@\n-        \/\/ Parse issuerSerial, if present\n-        if (certId.data.available() > 0) {\n-            DerValue issuerSerial = certId.data.getDerValue();\n-            \/\/ Parse issuer\n-            issuer = new GeneralNames(issuerSerial.data.getDerValue());\n-            \/\/ Parse serialNumber\n-            serialNumber = new SerialNumber(issuerSerial.data.getDerValue());\n-        } else {\n-            issuer = null;\n-            serialNumber = null;\n+            \/\/ Parse issuerSerial, if present\n+            if (certId.data.available() > 0) {\n+                DerValue issuerSerial = certId.data.getDerValue();\n+                \/\/ Parse issuer\n+                issuer = new GeneralNames(issuerSerial.data.getDerValue());\n+                \/\/ Parse serialNumber\n+                serialNumber = new SerialNumber(issuerSerial.data.getDerValue());\n+            } else {\n+                issuer = null;\n+                serialNumber = null;\n+            }\n@@ -150,1 +157,0 @@\n-    }\n@@ -152,10 +158,14 @@\n-    public String toString() {\n-        StringBuilder sb = new StringBuilder();\n-        sb.append(\"[\\n\\tCertificate hash (SHA-1):\\n\");\n-        if (hexDumper == null) {\n-            hexDumper = new HexDumpEncoder();\n-        }\n-        sb.append(hexDumper.encode(certHash));\n-        if (issuer != null && serialNumber != null) {\n-            sb.append(\"\\n\\tIssuer: \" + issuer + \"\\n\");\n-            sb.append(\"\\t\" + serialNumber);\n+        @Override\n+        public String toString() {\n+            StringBuilder sb = new StringBuilder();\n+            sb.append(\"[\\n\\tCertificate hash (SHA-1):\\n\");\n+            if (hexDumper == null) {\n+                hexDumper = new HexDumpEncoder();\n+            }\n+            sb.append(hexDumper.encode(certHash));\n+            if (issuer != null && serialNumber != null) {\n+                sb.append(\"\\n\\tIssuer: \" + issuer + \"\\n\");\n+                sb.append(\"\\t\" + serialNumber);\n+            }\n+            sb.append(\"\\n]\");\n+            return sb.toString();\n@@ -163,2 +173,0 @@\n-        sb.append(\"\\n]\");\n-        return sb.toString();\n","filename":"src\/java.base\/share\/classes\/sun\/security\/pkcs\/SigningCertificateInfo.java","additions":43,"deletions":35,"binary":false,"changes":78,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 8239950\n+ * @bug 8239950 8296736\n@@ -36,0 +36,1 @@\n+import sun.security.util.DerOutputStream;\n@@ -126,0 +127,3 @@\n+\n+                put(\"SigningCertificateInfo\",\n+                    \"3018060b2a864886f70d010910020c3109300730053003040100\");\n@@ -169,0 +173,5 @@\n+\n+                \/\/ Encoding is supported\n+                DerOutputStream dos = new DerOutputStream();\n+                p9Attr.encode(dos);\n+\n","filename":"test\/jdk\/sun\/security\/pkcs\/pkcs9\/PKCS9AttrTypeTests.java","additions":11,"deletions":2,"binary":false,"changes":13,"status":"modified"}]}