{"files":[{"patch":"@@ -359,1 +359,1 @@\n-      $1_FLAGS := $(BASIC_ASFLAGS) $$($1_BASE_ASFLAGS)\n+      $1_FLAGS := $(BASIC_ASFLAGS) $$($1_BASE_ASFLAGS) -DASSEMBLY_SRC_FILE='\"$$($1_REL_ASM_SRC)\"'\n@@ -361,0 +361,14 @@\n+\n+      # gcc assembly files must contain an appropriate relative .file\n+      # path for reproducible builds.\n+      ifeq ($(TOOLCHAIN_TYPE), gcc)\n+        # If no absolute paths allowed, work out relative source file path\n+        # for assembly .file substitution, otherwise use full file path\n+        ifeq ($(ALLOW_ABSOLUTE_PATHS_IN_OUTPUT), false)\n+          $1_REL_ASM_SRC := $$(call RelativePath, $$($1_FILE), $(WORKSPACE_ROOT))\n+        else\n+          $1_REL_ASM_SRC := $$($1_FILE)\n+        endif\n+        $1_FLAGS := $$($1_FLAGS) -DASSEMBLY_SRC_FILE='\"$$($1_REL_ASM_SRC)\"' \\\n+            -include $(TOPDIR)\/make\/data\/autoheaders\/assemblyprefix.h\n+      endif\n@@ -1152,13 +1166,0 @@\n-    # Debuginfo of ASM objects always embeds the absolute object path,\n-    # as ASM debuginfo paths do not get prefix mapped.\n-    # So for reproducible builds use relative paths to ensure a reproducible\n-    # debuginfo and libs, when creating debug symbols.\n-    ifeq ($$(ENABLE_REPRODUCIBLE_BUILD), true)\n-      ifeq ($(call isTargetOs, linux), true)\n-        ifeq ($$($1_COMPILE_WITH_DEBUG_SYMBOLS), true)\n-          $1_LINK_OBJS_RELATIVE := true\n-          $1_ALL_OBJS_RELATIVE := $$(patsubst $$(OUTPUTDIR)\/%, %, $$($1_ALL_OBJS))\n-        endif\n-      endif\n-    endif\n-\n","filename":"make\/common\/NativeCompilation.gmk","additions":15,"deletions":14,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -0,0 +1,27 @@\n+# \n+# Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+\n+        \/\/ ASSEMBLY_SRC_FILE gets replaced by relative or absolute file path\n+        \/\/ in NativeCompilation.gmk, this ensures reproducible .debuginfo\n+        .file ASSEMBLY_SRC_FILE\n+\n","filename":"make\/data\/autoheaders\/assemblyprefix.h","additions":27,"deletions":0,"binary":false,"changes":27,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -167,1 +167,1 @@\n-                } else if (fileName.endsWith(\".debuginfo\") || fileName.endsWith(\".pdb\")) {\n+                } else if (fileName.endsWith(\".pdb\")) {\n","filename":"test\/jdk\/build\/AbsPathsInImage.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}