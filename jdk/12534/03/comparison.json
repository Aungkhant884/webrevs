{"files":[{"patch":"@@ -112,1 +112,1 @@\n-        content.add(new GraphCloneCookie(viewer, graph));\n+        content.add(new NewGraphTabCookie(viewer, graph));\n@@ -145,1 +145,1 @@\n-                CloneGraphAction.findObject(CloneGraphAction.class, true),\n+                NewGraphTabAction.findObject(NewGraphTabAction.class, true),\n","filename":"src\/utils\/IdealGraphVisualizer\/Coordinator\/src\/main\/java\/com\/sun\/hotspot\/igv\/coordinator\/GraphNode.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1,89 +0,0 @@\n-\/*\n- * Copyright (c) 2013, 2015, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-package com.sun.hotspot.igv.coordinator.actions;\n-\n-import org.openide.nodes.Node;\n-import org.openide.util.HelpCtx;\n-import org.openide.util.actions.CookieAction;\n-\n-\/**\n- *\n- * @author Thomas Wuerthinger\n- *\/\n-public final class CloneGraphAction extends CookieAction {\n-\n-    @Override\n-    protected void performAction(Node[] activatedNodes) {\n-        GraphCloneCookie c = activatedNodes[0].getCookie(GraphCloneCookie.class);\n-        assert c != null;\n-        c.openClone();\n-    }\n-\n-    @Override\n-    protected int mode() {\n-        return CookieAction.MODE_EXACTLY_ONE;\n-    }\n-\n-    @Override\n-    protected boolean enable(Node[] activatedNodes) {\n-        boolean b = super.enable(activatedNodes);\n-        if (b) {\n-            assert activatedNodes.length == 1;\n-            GraphCloneCookie c = activatedNodes[0].getCookie(GraphCloneCookie.class);\n-            assert c != null;\n-            return true;\n-        }\n-\n-        return false;\n-    }\n-\n-    @Override\n-    public String getName() {\n-        return \"Open clone\";\n-    }\n-\n-    @Override\n-    protected Class<?>[] cookieClasses() {\n-        return new Class<?>[]{\n-            GraphCloneCookie.class\n-        };\n-    }\n-\n-    @Override\n-    protected String iconResource() {\n-        return \"com\/sun\/hotspot\/igv\/coordinator\/images\/graph.png\";\n-    }\n-\n-    @Override\n-    public HelpCtx getHelpCtx() {\n-        return HelpCtx.DEFAULT_HELP;\n-    }\n-\n-    @Override\n-    protected boolean asynchronous() {\n-        return false;\n-    }\n-}\n-\n","filename":"src\/utils\/IdealGraphVisualizer\/Coordinator\/src\/main\/java\/com\/sun\/hotspot\/igv\/coordinator\/actions\/CloneGraphAction.java","additions":0,"deletions":89,"binary":false,"changes":89,"status":"deleted"},{"patch":"@@ -1,43 +0,0 @@\n-\/*\n- * Copyright (c) 2013, 2015, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-package com.sun.hotspot.igv.coordinator.actions;\n-\n-import com.sun.hotspot.igv.data.InputGraph;\n-import com.sun.hotspot.igv.data.services.GraphViewer;\n-import org.openide.nodes.Node;\n-\n-public class GraphCloneCookie implements Node.Cookie {\n-\n-    private final GraphViewer viewer;\n-    private final InputGraph graph;\n-\n-    public GraphCloneCookie(GraphViewer viewer, InputGraph graph) {\n-        this.viewer = viewer;\n-        this.graph = graph;\n-    }\n-\n-    public void openClone() {\n-        viewer.view(graph, true);\n-    }\n-}\n","filename":"src\/utils\/IdealGraphVisualizer\/Coordinator\/src\/main\/java\/com\/sun\/hotspot\/igv\/coordinator\/actions\/GraphCloneCookie.java","additions":0,"deletions":43,"binary":false,"changes":43,"status":"deleted"},{"patch":"@@ -0,0 +1,89 @@\n+\/*\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+package com.sun.hotspot.igv.coordinator.actions;\n+\n+import org.openide.nodes.Node;\n+import org.openide.util.HelpCtx;\n+import org.openide.util.actions.CookieAction;\n+\n+\/**\n+ *\n+ * @author Thomas Wuerthinger\n+ *\/\n+public final class NewGraphTabAction extends CookieAction {\n+\n+    @Override\n+    protected void performAction(Node[] activatedNodes) {\n+        NewGraphTabCookie c = activatedNodes[0].getCookie(NewGraphTabCookie.class);\n+        assert c != null;\n+        c.openNewTab();\n+    }\n+\n+    @Override\n+    protected int mode() {\n+        return CookieAction.MODE_EXACTLY_ONE;\n+    }\n+\n+    @Override\n+    protected boolean enable(Node[] activatedNodes) {\n+        boolean b = super.enable(activatedNodes);\n+        if (b) {\n+            assert activatedNodes.length == 1;\n+            NewGraphTabCookie c = activatedNodes[0].getCookie(NewGraphTabCookie.class);\n+            assert c != null;\n+            return c.isActive();\n+        }\n+\n+        return false;\n+    }\n+\n+    @Override\n+    public String getName() {\n+        return \"Open in new tab\";\n+    }\n+\n+    @Override\n+    protected Class<?>[] cookieClasses() {\n+        return new Class<?>[]{\n+                NewGraphTabCookie.class\n+        };\n+    }\n+\n+    @Override\n+    protected String iconResource() {\n+        return \"com\/sun\/hotspot\/igv\/coordinator\/images\/graph.png\";\n+    }\n+\n+    @Override\n+    public HelpCtx getHelpCtx() {\n+        return HelpCtx.DEFAULT_HELP;\n+    }\n+\n+    @Override\n+    protected boolean asynchronous() {\n+        return false;\n+    }\n+}\n+\n","filename":"src\/utils\/IdealGraphVisualizer\/Coordinator\/src\/main\/java\/com\/sun\/hotspot\/igv\/coordinator\/actions\/NewGraphTabAction.java","additions":89,"deletions":0,"binary":false,"changes":89,"status":"added"},{"patch":"@@ -0,0 +1,48 @@\n+\/*\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+package com.sun.hotspot.igv.coordinator.actions;\n+\n+import com.sun.hotspot.igv.view.EditorTopComponent;\n+import com.sun.hotspot.igv.data.InputGraph;\n+import com.sun.hotspot.igv.data.services.GraphViewer;\n+import org.openide.nodes.Node;\n+\n+public class NewGraphTabCookie implements Node.Cookie {\n+\n+    private final GraphViewer viewer;\n+    private final InputGraph graph;\n+\n+    public NewGraphTabCookie(GraphViewer viewer, InputGraph graph) {\n+        this.viewer = viewer;\n+        this.graph = graph;\n+    }\n+\n+    public boolean isActive() {\n+        return EditorTopComponent.findEditorForGraph(graph) != null;\n+    }\n+\n+    public void openNewTab() {\n+        viewer.view(graph, true);\n+    }\n+}\n","filename":"src\/utils\/IdealGraphVisualizer\/Coordinator\/src\/main\/java\/com\/sun\/hotspot\/igv\/coordinator\/actions\/NewGraphTabCookie.java","additions":48,"deletions":0,"binary":false,"changes":48,"status":"added"},{"patch":"@@ -34,1 +34,1 @@\n-    void view(InputGraph graph, boolean clone);\n+    void view(InputGraph graph, boolean newTab);\n","filename":"src\/utils\/IdealGraphVisualizer\/Data\/src\/main\/java\/com\/sun\/hotspot\/igv\/data\/services\/GraphViewer.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -953,0 +953,6 @@\n+    @Override\n+    public void resetUndoRedoManager() {\n+        undoRedoManager = new UndoRedo.Manager();\n+        undoRedoManager.setLimit(UNDOREDO_LIMIT);\n+    }\n+\n@@ -955,2 +961,1 @@\n-            undoRedoManager = new UndoRedo.Manager();\n-            undoRedoManager.setLimit(UNDOREDO_LIMIT);\n+            resetUndoRedoManager();\n@@ -958,1 +963,0 @@\n-\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/DiagramScene.java","additions":8,"deletions":4,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,0 +33,1 @@\n+import com.sun.hotspot.igv.filter.FilterChainProvider;\n@@ -55,1 +56,0 @@\n-    private final FilterChain sequenceFilterChain;\n@@ -146,0 +146,3 @@\n+    public boolean getHideDuplicates() {\n+        return hideDuplicates;\n+    }\n@@ -147,6 +150,7 @@\n-    public DiagramViewModel(InputGraph graph, FilterChain filterChain, FilterChain sequenceFilterChain) {\n-        assert filterChain != null;\n-        assert sequenceFilterChain != null;\n-\n-        this.filterChain = filterChain;\n-        this.sequenceFilterChain = sequenceFilterChain;\n+    public DiagramViewModel(InputGraph graph) {\n+        FilterChainProvider provider = Lookup.getDefault().lookup(FilterChainProvider.class);\n+        if (provider == null) {\n+            filterChain = new FilterChain();\n+        } else {\n+            filterChain = provider.getFilterChain();\n+        }\n@@ -185,1 +189,0 @@\n-        sequenceFilterChain.getChangedEvent().addListener(filterChainChangedListener);\n@@ -433,1 +436,0 @@\n-        sequenceFilterChain.getChangedEvent().removeListener(filterChainChangedListener);\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/DiagramViewModel.java","additions":12,"deletions":10,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -73,0 +73,2 @@\n+    void resetUndoRedoManager();\n+\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/DiagramViewer.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -65,1 +65,1 @@\n-public final class EditorTopComponent extends TopComponent {\n+public final class EditorTopComponent extends TopComponent implements TopComponent.Cloneable {\n@@ -79,0 +79,4 @@\n+        this(new DiagramViewModel(graph));\n+    }\n+\n+    public EditorTopComponent(DiagramViewModel diagramViewModel) {\n@@ -83,10 +87,0 @@\n-        FilterChain filterChain;\n-        FilterChain sequence;\n-        FilterChainProvider provider = Lookup.getDefault().lookup(FilterChainProvider.class);\n-        if (provider == null) {\n-            filterChain = new FilterChain();\n-            sequence = new FilterChain();\n-        } else {\n-            filterChain = provider.getFilterChain();\n-            sequence = provider.getSequence();\n-        }\n@@ -123,1 +117,0 @@\n-        DiagramViewModel diagramViewModel = new DiagramViewModel(graph, filterChain, sequence);\n@@ -150,1 +143,1 @@\n-        diagramViewModel.getGraphChangedEvent().addListener(model -> graphChanged(model));\n+        diagramViewModel.getGraphChangedEvent().addListener(this::graphChanged);\n@@ -191,1 +184,1 @@\n-        seaLayoutButton.setSelected(Settings.get().getInt(Settings.DEFAULT_VIEW, Settings.DEFAULT_VIEW_DEFAULT) == Settings.DefaultView.SEA_OF_NODES);\n+        seaLayoutButton.setSelected(diagramViewModel.getShowSea());\n@@ -196,1 +189,1 @@\n-        blockLayoutButton.setSelected(Settings.get().getInt(Settings.DEFAULT_VIEW, Settings.DEFAULT_VIEW_DEFAULT) == Settings.DefaultView.CLUSTERED_SEA_OF_NODES);\n+        blockLayoutButton.setSelected(diagramViewModel.getShowBlocks());\n@@ -202,1 +195,1 @@\n-        cfgLayoutButton.setSelected(Settings.get().getInt(Settings.DEFAULT_VIEW, Settings.DEFAULT_VIEW_DEFAULT) == Settings.DefaultView.CONTROL_FLOW_GRAPH);\n+        cfgLayoutButton.setSelected(diagramViewModel.getShowCFG());\n@@ -207,4 +200,3 @@\n-        toolBar.add(new JToggleButton(new OverviewAction(centerPanel)));\n-        toolBar.add(new JToggleButton(new PredSuccAction()));\n-        toolBar.add(new JToggleButton(new ShowEmptyBlocksAction(cfgLayoutAction, true)));\n-        toolBar.add(new JToggleButton(new HideDuplicatesAction()));\n+        toolBar.add(new JToggleButton(new PredSuccAction(diagramViewModel.getShowNodeHull())));\n+        toolBar.add(new JToggleButton(new ShowEmptyBlocksAction(cfgLayoutAction, diagramViewModel.getShowEmptyBlocks())));\n+        toolBar.add(new JToggleButton(new HideDuplicatesAction(diagramViewModel.getHideDuplicates())));\n@@ -221,1 +213,0 @@\n-\n@@ -227,0 +218,1 @@\n+        toolBar.add(new JToggleButton(new OverviewAction(centerPanel)));\n@@ -395,0 +387,22 @@\n+    public void resetUndoRedo() {\n+        scene.resetUndoRedoManager();\n+    }\n+\n+    @Override\n+    public TopComponent cloneComponent() {\n+        DiagramViewModel model = new DiagramViewModel(getModel().getFirstGraph());\n+        if (getModel().getGraph().isDiffGraph()) {\n+            model.setPositions(getModel().getFirstPosition(), getModel().getSecondPosition());\n+        }\n+        model.setHiddenNodes(new HashSet<>(getModel().getHiddenNodes()));\n+        model.setShowCFG(getModel().getShowCFG());\n+        model.setShowSea(getModel().getShowSea());\n+        model.setShowBlocks(getModel().getShowBlocks());\n+        model.setShowNodeHull(getModel().getShowNodeHull());\n+        model.setShowEmptyBlocks(getModel().getShowEmptyBlocks());\n+        model.setHideDuplicates(getModel().getHideDuplicates());\n+        EditorTopComponent etc = new EditorTopComponent(model);\n+        etc.resetUndoRedo();\n+        return etc;\n+    }\n+\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/EditorTopComponent.java","additions":36,"deletions":22,"binary":false,"changes":58,"status":"modified"},{"patch":"@@ -56,2 +56,2 @@\n-    public void view(InputGraph graph, boolean clone) {\n-        if (!clone) {\n+    public void view(InputGraph graph, boolean newTab) {\n+        if (!newTab) {\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/GraphViewerImplementation.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,1 +39,1 @@\n-    public HideDuplicatesAction() {\n+    public HideDuplicatesAction(boolean selected) {\n@@ -41,1 +41,1 @@\n-        putValue(Action.SELECTED_KEY, false);\n+        putValue(Action.SELECTED_KEY, selected);\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/actions\/HideDuplicatesAction.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,2 +40,2 @@\n-    public PredSuccAction() {\n-        putValue(Action.SELECTED_KEY, true);\n+    public PredSuccAction(boolean selected) {\n+        putValue(Action.SELECTED_KEY, selected);\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/actions\/PredSuccAction.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}