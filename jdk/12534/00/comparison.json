{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -64,1 +64,1 @@\n-        return \"Open clone\";\n+        return \"Open in new tab\";\n","filename":"src\/utils\/IdealGraphVisualizer\/Coordinator\/src\/main\/java\/com\/sun\/hotspot\/igv\/coordinator\/actions\/CloneGraphAction.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -953,0 +953,6 @@\n+    @Override\n+    public void resetUndoRedoManager() {\n+        undoRedoManager = new UndoRedo.Manager();\n+        undoRedoManager.setLimit(UNDOREDO_LIMIT);\n+    }\n+\n@@ -955,2 +961,1 @@\n-            undoRedoManager = new UndoRedo.Manager();\n-            undoRedoManager.setLimit(UNDOREDO_LIMIT);\n+            resetUndoRedoManager();\n@@ -958,1 +963,0 @@\n-\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/DiagramScene.java","additions":7,"deletions":3,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -73,0 +73,2 @@\n+    void resetUndoRedoManager();\n+\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/DiagramViewer.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -65,1 +65,1 @@\n-public final class EditorTopComponent extends TopComponent {\n+public final class EditorTopComponent extends TopComponent implements TopComponent.Cloneable {\n@@ -395,0 +395,16 @@\n+    public void resetUndoRedo() {\n+        scene.resetUndoRedoManager();\n+    }\n+\n+    @Override\n+    public TopComponent cloneComponent() {\n+        EditorTopComponent etc = new EditorTopComponent(getModel().getFirstGraph());\n+        etc.getModel().setSelectedNodes(new HashSet<>(getModel().getSelectedNodes()));\n+        etc.getModel().setHiddenNodes(new HashSet<>(getModel().getHiddenNodes()));\n+        if (getModel().getGraph().isDiffGraph()) {\n+            etc.getModel().setPositions(getModel().getFirstPosition(), getModel().getSecondPosition());\n+        }\n+        etc.resetUndoRedo();\n+        return etc;\n+    }\n+\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/EditorTopComponent.java","additions":17,"deletions":1,"binary":false,"changes":18,"status":"modified"}]}