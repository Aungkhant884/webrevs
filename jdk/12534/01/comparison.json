{"files":[{"patch":"@@ -64,1 +64,1 @@\n-        return \"Open clone\";\n+        return \"Open in new tab\";\n","filename":"src\/utils\/IdealGraphVisualizer\/Coordinator\/src\/main\/java\/com\/sun\/hotspot\/igv\/coordinator\/actions\/CloneGraphAction.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -953,0 +953,6 @@\n+    @Override\n+    public void resetUndoRedoManager() {\n+        undoRedoManager = new UndoRedo.Manager();\n+        undoRedoManager.setLimit(UNDOREDO_LIMIT);\n+    }\n+\n@@ -955,2 +961,1 @@\n-            undoRedoManager = new UndoRedo.Manager();\n-            undoRedoManager.setLimit(UNDOREDO_LIMIT);\n+            resetUndoRedoManager();\n@@ -958,1 +963,0 @@\n-\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/DiagramScene.java","additions":7,"deletions":3,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+import com.sun.hotspot.igv.filter.FilterChainProvider;\n@@ -55,1 +56,0 @@\n-    private final FilterChain sequenceFilterChain;\n@@ -146,0 +146,3 @@\n+    public boolean getHideDuplicates() {\n+        return hideDuplicates;\n+    }\n@@ -147,6 +150,7 @@\n-    public DiagramViewModel(InputGraph graph, FilterChain filterChain, FilterChain sequenceFilterChain) {\n-        assert filterChain != null;\n-        assert sequenceFilterChain != null;\n-\n-        this.filterChain = filterChain;\n-        this.sequenceFilterChain = sequenceFilterChain;\n+    public DiagramViewModel(InputGraph graph) {\n+        FilterChainProvider provider = Lookup.getDefault().lookup(FilterChainProvider.class);\n+        if (provider == null) {\n+            filterChain = new FilterChain();\n+        } else {\n+            filterChain = provider.getFilterChain();\n+        }\n@@ -185,1 +189,0 @@\n-        sequenceFilterChain.getChangedEvent().addListener(filterChainChangedListener);\n@@ -433,1 +436,0 @@\n-        sequenceFilterChain.getChangedEvent().removeListener(filterChainChangedListener);\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/DiagramViewModel.java","additions":11,"deletions":9,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -73,0 +73,2 @@\n+    void resetUndoRedoManager();\n+\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/DiagramViewer.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -65,1 +65,1 @@\n-public final class EditorTopComponent extends TopComponent {\n+public final class EditorTopComponent extends TopComponent implements TopComponent.Cloneable {\n@@ -79,0 +79,4 @@\n+        this(new DiagramViewModel(graph));\n+    }\n+\n+    public EditorTopComponent(DiagramViewModel diagramViewModel) {\n@@ -83,10 +87,0 @@\n-        FilterChain filterChain;\n-        FilterChain sequence;\n-        FilterChainProvider provider = Lookup.getDefault().lookup(FilterChainProvider.class);\n-        if (provider == null) {\n-            filterChain = new FilterChain();\n-            sequence = new FilterChain();\n-        } else {\n-            filterChain = provider.getFilterChain();\n-            sequence = provider.getSequence();\n-        }\n@@ -123,1 +117,0 @@\n-        DiagramViewModel diagramViewModel = new DiagramViewModel(graph, filterChain, sequence);\n@@ -150,1 +143,1 @@\n-        diagramViewModel.getGraphChangedEvent().addListener(model -> graphChanged(model));\n+        diagramViewModel.getGraphChangedEvent().addListener(this::graphChanged);\n@@ -191,1 +184,1 @@\n-        seaLayoutButton.setSelected(Settings.get().getInt(Settings.DEFAULT_VIEW, Settings.DEFAULT_VIEW_DEFAULT) == Settings.DefaultView.SEA_OF_NODES);\n+        seaLayoutButton.setSelected(diagramViewModel.getShowSea());\n@@ -196,1 +189,1 @@\n-        blockLayoutButton.setSelected(Settings.get().getInt(Settings.DEFAULT_VIEW, Settings.DEFAULT_VIEW_DEFAULT) == Settings.DefaultView.CLUSTERED_SEA_OF_NODES);\n+        blockLayoutButton.setSelected(diagramViewModel.getShowBlocks());\n@@ -202,1 +195,1 @@\n-        cfgLayoutButton.setSelected(Settings.get().getInt(Settings.DEFAULT_VIEW, Settings.DEFAULT_VIEW_DEFAULT) == Settings.DefaultView.CONTROL_FLOW_GRAPH);\n+        cfgLayoutButton.setSelected(diagramViewModel.getShowCFG());\n@@ -207,4 +200,3 @@\n-        toolBar.add(new JToggleButton(new OverviewAction(centerPanel)));\n-        toolBar.add(new JToggleButton(new PredSuccAction()));\n-        toolBar.add(new JToggleButton(new ShowEmptyBlocksAction(cfgLayoutAction, true)));\n-        toolBar.add(new JToggleButton(new HideDuplicatesAction()));\n+        toolBar.add(new JToggleButton(new PredSuccAction(diagramViewModel.getShowNodeHull())));\n+        toolBar.add(new JToggleButton(new ShowEmptyBlocksAction(cfgLayoutAction, diagramViewModel.getShowEmptyBlocks())));\n+        toolBar.add(new JToggleButton(new HideDuplicatesAction(diagramViewModel.getHideDuplicates())));\n@@ -221,1 +213,0 @@\n-\n@@ -227,0 +218,1 @@\n+        toolBar.add(new JToggleButton(new OverviewAction(centerPanel)));\n@@ -395,0 +387,22 @@\n+    public void resetUndoRedo() {\n+        scene.resetUndoRedoManager();\n+    }\n+\n+    @Override\n+    public TopComponent cloneComponent() {\n+        DiagramViewModel model = new DiagramViewModel(getModel().getFirstGraph());\n+        if (getModel().getGraph().isDiffGraph()) {\n+            model.setPositions(getModel().getFirstPosition(), getModel().getSecondPosition());\n+        }\n+        model.setHiddenNodes(new HashSet<>(getModel().getHiddenNodes()));\n+        model.setShowCFG(getModel().getShowCFG());\n+        model.setShowSea(getModel().getShowSea());\n+        model.setShowBlocks(getModel().getShowBlocks());\n+        model.setShowNodeHull(getModel().getShowNodeHull());\n+        model.setShowEmptyBlocks(getModel().getShowEmptyBlocks());\n+        model.setHideDuplicates(getModel().getHideDuplicates());\n+        EditorTopComponent etc = new EditorTopComponent(model);\n+        etc.resetUndoRedo();\n+        return etc;\n+    }\n+\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/EditorTopComponent.java","additions":35,"deletions":21,"binary":false,"changes":56,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-    public HideDuplicatesAction() {\n+    public HideDuplicatesAction(boolean selected) {\n@@ -41,1 +41,1 @@\n-        putValue(Action.SELECTED_KEY, false);\n+        putValue(Action.SELECTED_KEY, selected);\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/actions\/HideDuplicatesAction.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -40,2 +40,2 @@\n-    public PredSuccAction() {\n-        putValue(Action.SELECTED_KEY, true);\n+    public PredSuccAction(boolean selected) {\n+        putValue(Action.SELECTED_KEY, selected);\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/actions\/PredSuccAction.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}