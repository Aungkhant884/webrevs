{"files":[{"patch":"@@ -456,0 +456,1 @@\n+# L10N: do not localize these words: warn info\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/standard.properties","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -168,0 +168,8 @@\n+    \/**\n+     * An enum of policies for handling modularity mismatches in external documentation.\n+     *\/\n+    public enum ModularityMismatchPolicy {\n+        info,\n+        warn\n+    }\n+\n@@ -170,1 +178,1 @@\n-     * True if warnings on external documentation with non-matching modularity should be omitted.\n+     * Describes how to handle external documentation with non-matching modularity.\n@@ -172,1 +180,1 @@\n-    private boolean linkModularityNoWarning = false;\n+    private ModularityMismatchPolicy linkModularityMismatch = ModularityMismatchPolicy.warn;\n@@ -417,2 +425,1 @@\n-                            case \"warn\" -> linkModularityNoWarning = false;\n-                            case \"info\" -> linkModularityNoWarning = true;\n+                            case \"warn\", \"info\" -> linkModularityMismatch = ModularityMismatchPolicy.valueOf(s);\n@@ -852,2 +859,1 @@\n-     * True if warnings on external documentation with non-matching modularity\n-     * should be omitted.\n+     * Describes how to handle external documentation with non-matching modularity.\n@@ -855,2 +861,2 @@\n-    public boolean linkModularityNoWarning() {\n-        return linkModularityNoWarning;\n+    public ModularityMismatchPolicy linkModularityMismatch() {\n+        return linkModularityMismatch;\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/BaseOptions.java","additions":14,"deletions":8,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -662,4 +662,3 @@\n-        if (configuration.getOptions().linkModularityNoWarning()) {\n-            configuration.getMessages().notice(key, arg);\n-        } else {\n-            configuration.getMessages().warning(key, arg);\n+        switch (configuration.getOptions().linkModularityMismatch()) {\n+            case info -> configuration.getMessages().notice(key, arg);\n+            case warn -> configuration.getMessages().warning(key, arg);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/Extern.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"}]}