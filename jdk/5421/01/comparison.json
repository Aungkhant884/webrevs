{"files":[{"patch":"@@ -26,0 +26,4 @@\n+import static org.testng.Assert.assertEquals;\n+import static org.testng.Assert.assertThrows;\n+import static org.testng.Assert.assertTrue;\n+\n@@ -42,0 +46,3 @@\n+import org.testng.annotations.DataProvider;\n+import org.testng.annotations.Test;\n+\n@@ -48,1 +55,1 @@\n- * @run main TransferTo\n+ * @run testng TransferTo\n@@ -62,9 +69,6 @@\n-    public static void main(String[] args) throws Exception {\n-        test(fileChannelInput(), fileChannelOutput());\n-        test(readableByteChannelInput(), defaultOutput());\n-    }\n-\n-    private static void test(InputStreamProvider inputStreamProvider, OutputStreamProvider outputStreamProvider)\n-            throws Exception {\n-        testNullPointerException(inputStreamProvider);\n-        testStreamContents(inputStreamProvider, outputStreamProvider);\n+    @DataProvider\n+    public static Object[][] streamCombinations() throws Exception {\n+        return new Object[][] {\n+            { fileChannelInput(), fileChannelOutput() },\n+            { readableByteChannelInput(), defaultOutput() }\n+        };\n@@ -73,12 +77,6 @@\n-    private static void testNullPointerException(InputStreamProvider inputStreamProvider) throws Exception {\n-        try (InputStream in = inputStreamProvider.input()) {\n-            assertThrowsNPE(() -> in.transferTo(null), \"out\");\n-        }\n-\n-        try (InputStream in = inputStreamProvider.input((byte) 1)) {\n-            assertThrowsNPE(() -> in.transferTo(null), \"out\");\n-        }\n-\n-        try (InputStream in = inputStreamProvider.input((byte) 1, (byte) 2)) {\n-            assertThrowsNPE(() -> in.transferTo(null), \"out\");\n-        }\n+    @Test(dataProvider = \"streamCombinations\")\n+    public void testNullPointerException(InputStreamProvider inputStreamProvider,\n+            OutputStreamProvider outputStreamProvider) throws Exception {\n+        assertThrows(NullPointerException.class, () -> inputStreamProvider.input().transferTo(null));\n+        assertThrows(NullPointerException.class, () -> inputStreamProvider.input((byte) 1).transferTo(null));\n+        assertThrows(NullPointerException.class, () -> inputStreamProvider.input((byte) 1, (byte) 2).transferTo(null));\n@@ -87,1 +85,2 @@\n-    private static void testStreamContents(InputStreamProvider inputStreamProvider,\n+    @Test(dataProvider = \"streamCombinations\")\n+    public void testStreamContents(InputStreamProvider inputStreamProvider,\n@@ -127,3 +126,1 @@\n-            if (reported != count)\n-                throw new AssertionError(\n-                        format(\"reported %d bytes but should report %d\", reported, count));\n+            assertEquals(reported, count, format(\"reported %d bytes but should report %d\", reported, count));\n@@ -132,3 +129,2 @@\n-            if (!Arrays.equals(inBytes, posIn, posIn + count, outBytes, posOut, posOut + count))\n-                throw new AssertionError(\n-                        format(\"inBytes.length=%d, outBytes.length=%d\", count, outBytes.length));\n+            assertTrue(Arrays.equals(inBytes, posIn, posIn + count, outBytes, posOut, posOut + count),\n+                format(\"inBytes.length=%d, outBytes.length=%d\", count, outBytes.length));\n@@ -201,27 +197,0 @@\n-    public interface Thrower {\n-        public void run() throws Throwable;\n-    }\n-\n-    public static void assertThrowsNPE(Thrower thrower, String message) {\n-        assertThrows(thrower, NullPointerException.class, message);\n-    }\n-\n-    public static <T extends Throwable> void assertThrows(Thrower thrower, Class<T> throwable, String message) {\n-        Throwable thrown;\n-        try {\n-            thrower.run();\n-            thrown = null;\n-        } catch (Throwable caught) {\n-            thrown = caught;\n-        }\n-\n-        if (!throwable.isInstance(thrown)) {\n-            String caught = thrown == null ? \"nothing\" : thrown.getClass().getCanonicalName();\n-            throw new AssertionError(format(\"Expected to catch %s, but caught %s\", throwable, caught), thrown);\n-        }\n-\n-        if (thrown != null && !message.equals(thrown.getMessage())) {\n-            throw new AssertionError(\n-                    format(\"Expected exception message to be '%s', but it's '%s'\", message, thrown.getMessage()));\n-        }\n-    }\n","filename":"test\/jdk\/java\/nio\/channels\/Channels\/TransferTo.java","additions":25,"deletions":56,"binary":false,"changes":81,"status":"modified"}]}