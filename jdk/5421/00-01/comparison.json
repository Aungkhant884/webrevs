{"files":[{"patch":"@@ -26,1 +26,3 @@\n-import static org.testng.Assert.fail;\n+import static org.testng.Assert.assertEquals;\n+import static org.testng.Assert.assertThrows;\n+import static org.testng.Assert.assertTrue;\n@@ -75,14 +77,2 @@\n-    @Test(dataProvider = \"streamCombinations\", expectedExceptions = NullPointerException.class)\n-    public void testNullPointerExceptionWithEmptyStream(InputStreamProvider inputStreamProvider,\n-            OutputStreamProvider outputStreamProvider) throws Exception {\n-        inputStreamProvider.input().transferTo(null);\n-    }\n-\n-    @Test(dataProvider = \"streamCombinations\", expectedExceptions = NullPointerException.class)\n-    public void testNullPointerExceptionWithSingleByteStream(InputStreamProvider inputStreamProvider,\n-            OutputStreamProvider outputStreamProvider) throws Exception {\n-        inputStreamProvider.input((byte) 1).transferTo(null);\n-    }\n-\n-    @Test(dataProvider = \"streamCombinations\", expectedExceptions = NullPointerException.class)\n-    public void testNullPointerExceptionWithTwoByteStream(InputStreamProvider inputStreamProvider,\n+    @Test(dataProvider = \"streamCombinations\")\n+    public void testNullPointerException(InputStreamProvider inputStreamProvider,\n@@ -90,1 +80,3 @@\n-        inputStreamProvider.input((byte) 1, (byte) 2).transferTo(null);\n+        assertThrows(NullPointerException.class, () -> inputStreamProvider.input().transferTo(null));\n+        assertThrows(NullPointerException.class, () -> inputStreamProvider.input((byte) 1).transferTo(null));\n+        assertThrows(NullPointerException.class, () -> inputStreamProvider.input((byte) 1, (byte) 2).transferTo(null));\n@@ -134,2 +126,1 @@\n-            if (reported != count)\n-                fail(format(\"reported %d bytes but should report %d\", reported, count));\n+            assertEquals(reported, count, format(\"reported %d bytes but should report %d\", reported, count));\n@@ -138,2 +129,2 @@\n-            if (!Arrays.equals(inBytes, posIn, posIn + count, outBytes, posOut, posOut + count))\n-                fail(format(\"inBytes.length=%d, outBytes.length=%d\", count, outBytes.length));\n+            assertTrue(Arrays.equals(inBytes, posIn, posIn + count, outBytes, posOut, posOut + count),\n+                format(\"inBytes.length=%d, outBytes.length=%d\", count, outBytes.length));\n","filename":"test\/jdk\/java\/nio\/channels\/Channels\/TransferTo.java","additions":11,"deletions":20,"binary":false,"changes":31,"status":"modified"}]}