{"files":[{"patch":"@@ -128,2 +128,2 @@\n-        PassFailJFrame.addTestFrame(frame);\n-        PassFailJFrame.positionTestFrame(frame, PassFailJFrame.Position.HORIZONTAL);\n+        PassFailJFrame.addTestWindow(frame);\n+        PassFailJFrame.positionTestWindow(frame, PassFailJFrame.Position.HORIZONTAL);\n","filename":"test\/jdk\/java\/awt\/print\/PrinterJob\/ImagePrinting\/ClippedImages.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -155,1 +155,1 @@\n-        PassFailJFrame.addTestFrame(f);\n+        PassFailJFrame.addTestWindow(f);\n@@ -158,1 +158,1 @@\n-        PassFailJFrame.positionTestFrame(f, PassFailJFrame.Position.HORIZONTAL);\n+        PassFailJFrame.positionTestWindow(f, PassFailJFrame.Position.HORIZONTAL);\n","filename":"test\/jdk\/java\/awt\/print\/PrinterJob\/PrintGlyphVectorTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -81,1 +81,1 @@\n-            PassFailJFrame.addTestFrame(frame);\n+            PassFailJFrame.addTestWindow(frame);\n@@ -84,1 +84,1 @@\n-            PassFailJFrame.positionTestFrame(frame,\n+            PassFailJFrame.positionTestWindow(frame,\n","filename":"test\/jdk\/java\/awt\/print\/PrinterJob\/PrintLatinCJKTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -26,1 +26,0 @@\n-import java.awt.Frame;\n@@ -28,0 +27,1 @@\n+import java.awt.Window;\n@@ -54,1 +54,1 @@\n-    private static final List<Frame> frameList = new ArrayList<>();\n+    private static final List<Window> windowList = new ArrayList<>();\n@@ -175,1 +175,1 @@\n-        frameList.add(frame);\n+        windowList.add(frame);\n@@ -204,1 +204,1 @@\n-        invokeAndWait(PassFailJFrame::disposeFrames);\n+        invokeAndWait(PassFailJFrame::disposeWindows);\n@@ -218,2 +218,2 @@\n-     * Dispose all the frame(s) i,e both the test instruction frame as\n-     * well as the frame that is added via addTestFrame(Frame frame)\n+     * Dispose all the window(s) i,e both the test instruction frame and\n+     * the window(s) that is added via addTestWindow(Window testWindow)\n@@ -221,3 +221,3 @@\n-    private static synchronized void disposeFrames() {\n-        for (Frame f : frameList) {\n-            f.dispose();\n+    private static synchronized void disposeWindows() {\n+        for (Window win : windowList) {\n+            win.dispose();\n@@ -260,2 +260,2 @@\n-     * Position the instruction frame with testFrame ( testcase created\n-     * frame) by the specified position\n+     * Position the instruction frame with testWindow (testcase created\n+     * window) by the specified position.\n@@ -263,1 +263,1 @@\n-     * testFrame\n+     * testWindow.\n@@ -265,1 +265,1 @@\n-     * @param testFrame test frame that the test is created\n+     * @param testWindow test window that the test is created\n@@ -267,3 +267,3 @@\n-     *                  instruction frame and test frame as arranged side by\n-     *                  side or VERTICAL ( both test instruction frame and\n-     *                  test frame as arranged up and down)\n+     *                  instruction frame and test window as arranged\n+     *                  side by side) or VERTICAL (both test instruction\n+     *                  frame and test window as arranged up and down)\n@@ -271,1 +271,1 @@\n-    public static void positionTestFrame(Frame testFrame, Position position) {\n+    public static void positionTestWindow(Window testWindow, Position position) {\n@@ -277,1 +277,1 @@\n-            testFrame.setLocation((frame.getLocation().x + frame.getWidth() + 5), frame.getY());\n+            testWindow.setLocation((frame.getLocation().x + frame.getWidth() + 5), frame.getY());\n@@ -282,1 +282,1 @@\n-            testFrame.setLocation(frame.getX(),\n+            testWindow.setLocation(frame.getX(),\n@@ -288,3 +288,3 @@\n-     * Add the testFrame to the frameList so that test instruction frame\n-     * and testFrame and any other frame used in this test is disposed\n-     * via disposeFrames()\n+     * Add the testWindow to the windowList so that test instruction frame\n+     * and testWindow and any other windows used in this test is disposed\n+     * via disposeWindows().\n@@ -292,1 +292,1 @@\n-     * @param testFrame testFrame that needs to be disposed\n+     * @param testWindow testWindow that needs to be disposed\n@@ -294,2 +294,2 @@\n-    public static synchronized void addTestFrame(Frame testFrame) {\n-        frameList.add(testFrame);\n+    public static synchronized void addTestWindow(Window testWindow) {\n+        windowList.add(testWindow);\n@@ -318,0 +318,2 @@\n+        testFailedReason = \"Failure Reason:\\n\" +\n+                           \"forceFail called\";\n@@ -321,1 +323,0 @@\n-\n","filename":"test\/jdk\/java\/awt\/regtesthelpers\/PassFailJFrame.java","additions":27,"deletions":26,"binary":false,"changes":53,"status":"modified"},{"patch":"@@ -71,2 +71,2 @@\n-                    PassFailJFrame.addTestFrame(testObj);\n-                    PassFailJFrame.positionTestFrame(testObj, PassFailJFrame.Position.HORIZONTAL);\n+                    PassFailJFrame.addTestWindow(testObj);\n+                    PassFailJFrame.positionTestWindow(testObj, PassFailJFrame.Position.HORIZONTAL);\n","filename":"test\/jdk\/javax\/swing\/JRadioButton\/bug4380543.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -70,2 +70,2 @@\n-            PassFailJFrame.addTestFrame(frame);\n-            PassFailJFrame.positionTestFrame(frame,\n+            PassFailJFrame.addTestWindow(frame);\n+            PassFailJFrame.positionTestWindow(frame,\n","filename":"test\/jdk\/javax\/swing\/JTabbedPane\/4209065\/bug4209065.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -71,1 +71,1 @@\n-        PassFailJFrame.addTestFrame(f);\n+        PassFailJFrame.addTestWindow(f);\n@@ -74,1 +74,1 @@\n-        PassFailJFrame.positionTestFrame(f, PassFailJFrame.Position.HORIZONTAL);\n+        PassFailJFrame.positionTestWindow(f, PassFailJFrame.Position.HORIZONTAL);\n","filename":"test\/jdk\/javax\/swing\/JTable\/PrintAllPagesTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -70,2 +70,2 @@\n-            PassFailJFrame.addTestFrame(frame);\n-            PassFailJFrame.positionTestFrame(frame,\n+            PassFailJFrame.addTestWindow(frame);\n+            PassFailJFrame.positionTestWindow(frame,\n","filename":"test\/jdk\/javax\/swing\/text\/html\/HtmlScriptTagParserTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}