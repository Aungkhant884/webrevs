{"files":[{"patch":"@@ -927,0 +927,1 @@\n+    <Field type=\"boolean\" name=\"usesDynamicNrOfCompilerThreads\" label=\"Uses Dynamic Number of Compiler Threads\" \/>\n","filename":"src\/hotspot\/share\/jfr\/metadata\/metadata.xml","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -575,0 +575,1 @@\n+  event.set_usesDynamicNrOfCompilerThreads(UseDynamicNumberOfCompilerThreads);\n","filename":"src\/hotspot\/share\/jfr\/periodic\/jfrPeriodic.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -55,0 +55,1 @@\n+            Events.assertField(event, \"usesDynamicNrOfCompilerThreads\");\n","filename":"test\/jdk\/jdk\/jfr\/event\/compiler\/TestCompilerConfig.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -101,1 +101,1 @@\n-            verifyValueDesscriptors(eventType.getFields(), types);\n+            verifyValueDescriptors(eventType.getFields(), types);\n@@ -119,1 +119,1 @@\n-    private static void verifyValueDesscriptors(List<ValueDescriptor> fields, Set<String> visitedTypes) {\n+    private static void verifyValueDescriptors(List<ValueDescriptor> fields, Set<String> visitedTypes) {\n@@ -123,1 +123,1 @@\n-                verifyValueDesscriptors(v.getFields(), visitedTypes);\n+                verifyValueDescriptors(v.getFields(), visitedTypes);\n","filename":"test\/jdk\/jdk\/jfr\/event\/metadata\/TestEventMetadata.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}