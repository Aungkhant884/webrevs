{"files":[{"patch":"@@ -97,0 +97,23 @@\n+\n+        \/\/ Test via JDK_JAVA_OPTIONS\n+        Map<String, String> env = new HashMap<>();\n+        String sysPropName = \"foo.bar\";\n+        \/\/ When pass \"-Dfoo.bar=<unicodestr>\" via the JDK_JAVA_OPTIONS environment variable,\n+        \/\/ we expect that system property value to be passed along to the main method with the\n+        \/\/ correct encoding\n+        \/\/ If <unicodestr> contains space or tab, it should beenclosed with double quotes.\n+        if (unicodeStr.contains(\" \") || unicodeStr.contains(\"\\t\")) {\n+            unicodeStr = \"\\\"\" + unicodeStr + \"\\\"\";\n+        }\n+        String jdkJavaOpts = \"-D\" + sysPropName + \"=\" + unicodeStr;\n+        env.put(\"JDK_JAVA_OPTIONS\", jdkJavaOpts);\n+        tr = doExec(env,javaCmd,\n+                \"-Dtest.src=\" + TEST_SOURCES_DIR.getAbsolutePath(),\n+                \"-Dtest.classes=\" + TEST_CLASSES_DIR.getAbsolutePath(),\n+                \"-cp\", TEST_CLASSES_DIR.getAbsolutePath(),\n+                \"I18NArgTest\", unicodeStr, hexValue, sysPropName);\n+        System.out.println(tr.testOutput);\n+        if (!tr.isOK()) {\n+            System.err.println(tr);\n+            throw new RuntimeException(\"test fails\");\n+        }\n@@ -114,0 +137,18 @@\n+        if (args.length == 3) {\n+            \/\/ verify the value of the system property matches the expected value\n+            String sysPropName = args[2];\n+            String sysPropVal = System.getProperty(sysPropName);\n+            if (sysPropVal == null) {\n+                throw new RuntimeException(\"Missing system property \" + sysPropName);\n+            }\n+            String sysPropHexVal = \"\";\n+            for (int i = 0; i < sysPropVal.length(); i++) {\n+                sysPropHexVal = sysPropHexVal.concat(Integer.toHexString(sysPropVal.charAt(i)));\n+            }\n+            System.out.println(\"System property \" + sysPropName + \" computed hex value: \"\n+                    + sysPropHexVal);\n+            if (!sysPropHexVal.contains(expected)) {\n+                throw new RuntimeException(\"Unexpected value in system property, expected \"\n+                        + expected + \", but got \" + sysPropHexVal);\n+            }\n+        }\n","filename":"test\/jdk\/tools\/launcher\/I18NArgTest.java","additions":41,"deletions":0,"binary":false,"changes":41,"status":"modified"}]}