{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,0 +34,2 @@\n+import java.util.HexFormat;\n+import java.nio.charset.StandardCharsets;\n@@ -69,7 +71,7 @@\n-        execTest(\"\\\"\" + unicodeStr + \"a\" + unicodeStr + \"\\\"\", hexValue + \"61\" + hexValue);\n-        execTest(\"\\\\\" + unicodeStr + \"a\" + unicodeStr + \"\\\\\", hexValue + \"61\" + hexValue);\n-        execTest(\" \" + unicodeStr + \"a\" + unicodeStr + \" \", hexValue + \"61\"+ hexValue);\n-        execTest(\"'\" + unicodeStr + \"a\" + unicodeStr + \"'\", hexValue + \"61\"+ hexValue);\n-        execTest(\"\\t\" + unicodeStr + \"a\" + unicodeStr + \"\\t\", hexValue + \"61\"+ hexValue);\n-        execTest(\"*\" + unicodeStr + \"a\" + unicodeStr + \"*\", hexValue + \"61\"+ hexValue);\n-        execTest(\"?\" + unicodeStr + \"a\" + unicodeStr + \"?\", hexValue + \"61\"+ hexValue);\n+        execTest(\"\\\"\" + unicodeStr + \"a\" + unicodeStr + \"\\\"\", hexValue + \"0061\" + hexValue);\n+        execTest(\"\\\\\" + unicodeStr + \"a\" + unicodeStr + \"\\\\\", hexValue + \"0061\" + hexValue);\n+        execTest(\" \" + unicodeStr + \"a\" + unicodeStr + \" \", hexValue + \"0061\"+ hexValue);\n+        execTest(\"'\" + unicodeStr + \"a\" + unicodeStr + \"'\", hexValue + \"0061\"+ hexValue);\n+        execTest(\"\\t\" + unicodeStr + \"a\" + unicodeStr + \"\\t\", hexValue + \"0061\"+ hexValue);\n+        execTest(\"*\" + unicodeStr + \"a\" + unicodeStr + \"*\", hexValue + \"0061\"+ hexValue);\n+        execTest(\"?\" + unicodeStr + \"a\" + unicodeStr + \"?\", hexValue + \"0061\"+ hexValue);\n@@ -77,7 +79,7 @@\n-        execTest(\"\\\"\" + unicodeStr + \"\\u00b1\" + unicodeStr + \"\\\"\", hexValue + \"b1\" + hexValue);\n-        execTest(\"\\\\\" + unicodeStr + \"\\u00b1\" + unicodeStr + \"\\\\\", hexValue + \"b1\" + hexValue);\n-        execTest(\" \" + unicodeStr + \"\\u00b1\" + unicodeStr + \" \", hexValue + \"b1\"+ hexValue);\n-        execTest(\"'\" + unicodeStr + \"\\u00b1\" + unicodeStr + \"'\", hexValue + \"b1\"+ hexValue);\n-        execTest(\"\\t\" + unicodeStr + \"\\u00b1\" + unicodeStr + \"\\t\", hexValue + \"b1\"+ hexValue);\n-        execTest(\"*\" + unicodeStr + \"\\u00b1\" + unicodeStr + \"*\", hexValue + \"b1\"+ hexValue);\n-        execTest(\"?\" + unicodeStr + \"\\u00b1\" + unicodeStr + \"?\", hexValue + \"b1\"+ hexValue);\n+        execTest(\"\\\"\" + unicodeStr + \"\\u00b1\" + unicodeStr + \"\\\"\", hexValue + \"00b1\" + hexValue);\n+        execTest(\"\\\\\" + unicodeStr + \"\\u00b1\" + unicodeStr + \"\\\\\", hexValue + \"00b1\" + hexValue);\n+        execTest(\" \" + unicodeStr + \"\\u00b1\" + unicodeStr + \" \", hexValue + \"00b1\"+ hexValue);\n+        execTest(\"'\" + unicodeStr + \"\\u00b1\" + unicodeStr + \"'\", hexValue + \"00b1\"+ hexValue);\n+        execTest(\"\\t\" + unicodeStr + \"\\u00b1\" + unicodeStr + \"\\t\", hexValue + \"00b1\"+ hexValue);\n+        execTest(\"*\" + unicodeStr + \"\\u00b1\" + unicodeStr + \"*\", hexValue + \"00b1\"+ hexValue);\n+        execTest(\"?\" + unicodeStr + \"\\u00b1\" + unicodeStr + \"?\", hexValue + \"00b1\"+ hexValue);\n@@ -100,6 +102,15 @@\n-        String cmd = \"-Dtest.src=\" + TEST_SOURCES_DIR.getAbsolutePath() +\n-                \" -Dtest.classes=\" + TEST_CLASSES_DIR.getAbsolutePath() +\n-                \" -cp \" + TEST_CLASSES_DIR.getAbsolutePath() +\n-                \" I18NArgTest \" + unicodeStr + \" \" + hexValue;\n-        env.put(\"JDK_JAVA_OPTIONS\", cmd);\n-        tr = doExec(env, javaCmd);\n+        String sysPropName = \"foo.bar\";\n+        \/\/ When pass \"-Dfoo.bar=<unicodestr>\" via the JDK_JAVA_OPTIONS environment variable,\n+        \/\/ we expect that system property value to be passed along to the main method with the\n+        \/\/ correct encoding\n+        \/\/ If <unicodestr> contains space or tab, it should be enclosed with double quotes.\n+        if (unicodeStr.contains(\" \") || unicodeStr.contains(\"\\t\")) {\n+            unicodeStr = \"\\\"\" + unicodeStr + \"\\\"\";\n+        }\n+        String jdkJavaOpts = \"-D\" + sysPropName + \"=\" + unicodeStr;\n+        env.put(\"JDK_JAVA_OPTIONS\", jdkJavaOpts);\n+        tr = doExec(env,javaCmd,\n+                \"-Dtest.src=\" + TEST_SOURCES_DIR.getAbsolutePath(),\n+                \"-Dtest.classes=\" + TEST_CLASSES_DIR.getAbsolutePath(),\n+                \"-cp\", TEST_CLASSES_DIR.getAbsolutePath(),\n+                \"I18NArgTest\", unicodeStr, hexValue, sysPropName);\n@@ -116,4 +127,1 @@\n-        String hexValue = \"\";\n-        for (int i = 0; i < input.length(); i++) {\n-            hexValue = hexValue.concat(Integer.toHexString((int)input.charAt(i)));\n-        }\n+        var hexValue = HexFormat.of().formatHex(input.getBytes(StandardCharsets.UTF_16));\n@@ -128,0 +136,15 @@\n+        if (args.length == 3) {\n+            \/\/ verify the value of the system property matches the expected value\n+            String sysPropName = args[2];\n+            String sysPropVal = System.getProperty(sysPropName);\n+            if (sysPropVal == null) {\n+                throw new RuntimeException(\"Missing system property \" + sysPropName);\n+            }\n+            var sysPropHexVal = HexFormat.of().formatHex(sysPropVal.getBytes(StandardCharsets.UTF_16));\n+            System.out.println(\"System property \" + sysPropName + \" computed hex value: \"\n+                    + sysPropHexVal);\n+            if (!sysPropHexVal.contains(expected)) {\n+                throw new RuntimeException(\"Unexpected value in system property, expected \"\n+                        + expected + \", but got \" + sysPropHexVal);\n+            }\n+        }\n@@ -129,1 +152,1 @@\n-}\n+}\n\\ No newline at end of file\n","filename":"test\/jdk\/tools\/launcher\/I18NArgTest.java","additions":49,"deletions":26,"binary":false,"changes":75,"status":"modified"}]}