{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,1 +33,3 @@\n-import javax.swing.event.*;\n+import javax.swing.event.EventListenerList;\n+import javax.swing.event.ListSelectionEvent;\n+import javax.swing.event.ListSelectionListener;\n@@ -337,1 +339,1 @@\n-        if (r == minIndex) {\n+        if (r == minIndex && minIndex < Integer.MAX_VALUE) {\n@@ -452,0 +454,4 @@\n+            \/\/ Prevent Integer overflow\n+            if (i == Integer.MAX_VALUE) {\n+                break;\n+            }\n@@ -643,0 +649,3 @@\n+     *\n+     * @throws IndexOutOfBoundsException if either {@code index}\n+     *          or {@code length} is negative\n@@ -646,0 +655,7 @@\n+        if (length < 0 || index < 0) {\n+            throw new IndexOutOfBoundsException(\"index or length is negative\");\n+        }\n+        if (index == Integer.MAX_VALUE || length == 0) {\n+            \/\/ Nothing to update\n+            return;\n+        }\n@@ -650,1 +666,3 @@\n-        int insMaxIndex = (insMinIndex + length) - 1;\n+        int insMaxIndex = (insMinIndex + length >= 0)\n+                          ? (insMinIndex + length) - 1\n+                          : Integer.MAX_VALUE;\n@@ -656,1 +674,1 @@\n-        for(int i = maxIndex; i >= insMinIndex; i--) {\n+        for(int i = Math.min(maxIndex, Integer.MAX_VALUE - length); i >= insMinIndex; i--) {\n@@ -664,1 +682,1 @@\n-        for(int i = insMinIndex; i <= insMaxIndex; i++) {\n+        for(int i = insMaxIndex; i >= insMinIndex; i--) {\n@@ -689,0 +707,2 @@\n+     *\n+     * @throws IndexOutOfBoundsException if either index is negative\n@@ -692,0 +712,4 @@\n+        if (index0 < 0 || index1 < 0) {\n+            throw new IndexOutOfBoundsException(\"index is negative\");\n+        }\n+\n@@ -694,0 +718,12 @@\n+\n+        if (rmMinIndex == 0 && rmMaxIndex == Integer.MAX_VALUE) {\n+            for (int i = Integer.MAX_VALUE; i >= 0; i--) {\n+                setState(i, false);\n+            }\n+\n+            if (this.anchorIndex != -1 || this.leadIndex != -1) {\n+                updateLeadAnchorIndices(-1, -1);\n+            }\n+            return;\n+        }\n+\n@@ -699,2 +735,4 @@\n-        for(int i = rmMinIndex; i <= maxIndex; i++) {\n-            setState(i, value.get(i + gapLength));\n+        for (int i = rmMinIndex; i >= 0 && i <= maxIndex; i++) {\n+            setState(i, (i <= Integer.MAX_VALUE - gapLength)\n+                        && (i + gapLength >= minIndex)\n+                        && value.get(i + gapLength));\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/DefaultListSelectionModel.java","additions":46,"deletions":8,"binary":false,"changes":54,"status":"modified"},{"patch":"@@ -0,0 +1,65 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\/*\n+ * @test\n+ * @bug 6187113\n+ * @summary  Verifies if\n+ *  DefaultListSelectionModel.removeIndexInterval(0, Integer.MAX_VALUE) fails\n+ * @run main TestDefListModelException\n+ *\/\n+import javax.swing.DefaultListSelectionModel;\n+\n+public class TestDefListModelException {\n+\n+    public static void main(String[] args) throws Exception {\n+        test1();\n+        test2();\n+        test3();\n+        test4();\n+    }\n+\n+    private static void test1() {\n+        DefaultListSelectionModel selectionModel = new DefaultListSelectionModel();\n+        selectionModel.setSelectionInterval(0, 1);\n+        selectionModel.removeIndexInterval(0, Integer.MAX_VALUE);\n+    }\n+\n+    private static void test2() {\n+        DefaultListSelectionModel selectionModel = new DefaultListSelectionModel();\n+        selectionModel.setSelectionInterval(Integer.MAX_VALUE - 1, Integer.MAX_VALUE);\n+        selectionModel.removeIndexInterval(0, 1);\n+    }\n+\n+    private static void test3() {\n+        DefaultListSelectionModel selectionModel = new DefaultListSelectionModel();\n+        selectionModel.setSelectionInterval(Integer.MAX_VALUE - 2, Integer.MAX_VALUE - 1);\n+        selectionModel.removeIndexInterval(0, Integer.MAX_VALUE - 1);\n+    }\n+\n+    private static void test4() {\n+        DefaultListSelectionModel selectionModel = new DefaultListSelectionModel();\n+        selectionModel.setSelectionInterval(Integer.MAX_VALUE - 1, Integer.MAX_VALUE);\n+        selectionModel.insertIndexInterval(Integer.MAX_VALUE - 1, Integer.MAX_VALUE, true);\n+    }\n+}\n+\n","filename":"test\/jdk\/javax\/swing\/TestDefListModelException.java","additions":65,"deletions":0,"binary":false,"changes":65,"status":"added"}]}