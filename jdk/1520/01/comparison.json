{"files":[{"patch":"@@ -72,0 +72,1 @@\n+    private final Instant creationTime;\n@@ -89,0 +90,2 @@\n+        this.creationTime = Instant.now();\n+        this.recording.setName(\"Recording Stream: \" + creationTime);\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/consumer\/RecordingStream.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -0,0 +1,58 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, NTT DATA.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.jfr.api.consumer.recordingstream;\n+\n+import jdk.jfr.consumer.RecordingStream;\n+import jdk.test.lib.jfr.EventNames;\n+\n+\/**\n+* @test\n+* @bug 8257424\n+* @summary Tests recording name for RecordingStrream\n+* @key jfr\n+* @requires vm.hasJFR\n+* @library \/test\/lib\n+* @run main\/othervm jdk.jfr.api.consumer.recordingstream.TestRecordingName\n+*\/\n+public class TestRecordingName {\n+\n+   public static void main(String... args) throws Exception {\n+       try (RecordingStream r = new RecordingStream()) {\n+           r.enable(EventNames.ActiveRecording);\n+           r.onEvent(e -> {\n+               System.out.println(e);\n+               String name = e.getString(\"name\");\n+               if (name.startsWith(\"Recording Stream: \")) {\n+                   r.close();\n+                   return;\n+               }\n+               System.err.println(\"Recording name not set, was \" + name + \", but expected \\\"Recording Stream: <Instant>\\\"\");\n+           });\n+           r.start();\n+       }\n+   }\n+}\n","filename":"test\/jdk\/jdk\/jfr\/api\/consumer\/recordingstream\/TestRecordingName.java","additions":58,"deletions":0,"binary":false,"changes":58,"status":"added"}]}