{"files":[{"patch":"@@ -43,0 +43,1 @@\n+#include <stdint.h>\n@@ -424,1 +425,1 @@\n-  \/\/ Missing test if instr is commutative and if we should swap. -32768 means same as ((-1)<<15)) , but the compiler doesn't like this anymore.\n+  \/\/ Missing test if instr is commutative and if we should swap.\n@@ -426,1 +427,1 @@\n-      (x->op() == Bytecodes::_lsub && right.value()->type()->as_LongConstant()->value() == -32768 ) ) {\n+      (x->op() == Bytecodes::_lsub && right.value()->type()->as_LongConstant()->value() == INT16_MIN) ) {\n@@ -478,1 +479,1 @@\n-  \/\/ Missing test if instr is commutative and if we should swap.  -32768 means same as ((-1)<<15)) , but the compiler doesn't like this anymore.\n+  \/\/ Missing test if instr is commutative and if we should swap.\n@@ -480,1 +481,1 @@\n-      (x->op() == Bytecodes::_isub && right.value()->type()->as_IntConstant()->value() == -32768) ) {\n+      (x->op() == Bytecodes::_isub && right.value()->type()->as_IntConstant()->value() == INT16_MIN) ) {\n","filename":"src\/hotspot\/cpu\/ppc\/c1_LIRGenerator_ppc.cpp","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -84,0 +84,3 @@\n+#ifdef AIX_XLC_GE_17\n+#include <alloca.h>\n+#endif\n@@ -464,1 +467,1 @@\n-      struct shmid_ds shm_buf = { {0,0,0,0,0,0,0,0},0,0,0,0,0,0,0,0,0,0,0,0,0,0 };\n+      struct shmid_ds shm_buf = { };\n@@ -675,3 +678,0 @@\n-#ifdef AIX_XLC_GE_17\n-#include \"alloca.h\"\n-#endif\n","filename":"src\/hotspot\/os\/aix\/os_aix.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}