{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -983,1 +983,5 @@\n-    THROW_MSG(vmSymbols::java_lang_NoSuchFieldError(), field->as_C_string());\n+    stringStream ss;\n+    ss.print(\"Class %s does not have member field '\", resolved_klass->external_name());\n+    sig->print_signature_as_external_field_type(&ss);\n+    ss.print(\" %s'\", field->as_C_string());\n+    THROW_MSG(vmSymbols::java_lang_NoSuchFieldError(), ss.as_string());\n","filename":"src\/hotspot\/share\/interpreter\/linkResolver.cpp","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -297,0 +297,18 @@\n+void Symbol::print_signature_as_external_field_type(outputStream *os) {\n+  SignatureStream ss(this, false);\n+  assert(!ss.is_done(), \"must have at least one element in field ref\");\n+  assert(!ss.at_return_type(), \"field ref cannot be a return type\");\n+\n+  if (ss.is_array()) {\n+    print_array(os, ss);\n+  } else if (ss.is_reference()) {\n+    print_class(os, ss);\n+  } else {\n+    os->print(\"%s\", type2name(ss.type()));\n+  }\n+#ifdef ASSERT\n+  ss.next();\n+  assert(ss.is_done(), \"must have at most one element in field ref\");\n+#endif\n+}\n+\n","filename":"src\/hotspot\/share\/oops\/symbol.cpp","additions":19,"deletions":1,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -278,0 +278,1 @@\n+  void print_signature_as_external_field_type(outputStream *os);\n","filename":"src\/hotspot\/share\/oops\/symbol.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -0,0 +1,49 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+public class NoSuchFieldArray {\n+    static char[] z;\n+    public NoSuchFieldArray() {\n+        z = new char[1];\n+    }\n+}\n+*\/\n+\n+super public class NoSuchFieldArray\n+\tversion 65:0\n+{\n+  \/\/ REMOVED static Field z:\"[C\";\n+\n+  public Method \"<init>\":\"()V\"\n+\tstack 1 locals 1\n+  {\n+\t\taload_0;\n+\t\tinvokespecial\tMethod java\/lang\/Object.\"<init>\":\"()V\";\n+\t\ticonst_1;\n+\t\tnewarray char;\n+\t\tputstatic\tField z:\"[C\";\n+\t\treturn;\n+  }\n+\n+} \/\/ end Class NoSuchFieldArray\n","filename":"test\/hotspot\/jtreg\/runtime\/linkResolver\/NoSuchFieldArray.jasm","additions":49,"deletions":0,"binary":false,"changes":49,"status":"added"},{"patch":"@@ -0,0 +1,50 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+public class NoSuchFieldMultiArray {\n+    static double[][] a;\n+    public NoSuchFieldMultiArray() {\n+        a = new double[1][1];\n+    }\n+}\n+*\/\n+\n+super public class NoSuchFieldMultiArray\n+\tversion 65:0\n+{\n+  \/\/ REMOVED static Field a:\"[[D\";\n+\n+  public Method \"<init>\":\"()V\"\n+\tstack 2 locals 1\n+  {\n+\t\taload_0;\n+\t\tinvokespecial\tMethod java\/lang\/Object.\"<init>\":\"()V\";\n+\t\ticonst_1;\n+\t\ticonst_1;\n+\t\tmultianewarray\tclass \"[[D\",  2;\n+\t\tputstatic\tField a:\"[[D\";\n+\t\treturn;\n+  }\n+\n+} \/\/ end Class NoSuchFieldMultiArray\n","filename":"test\/hotspot\/jtreg\/runtime\/linkResolver\/NoSuchFieldMultiArray.jasm","additions":50,"deletions":0,"binary":false,"changes":50,"status":"added"},{"patch":"@@ -0,0 +1,108 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8298065\n+ * @summary Test output of NoSuchFieldError when field signature does not match\n+ * @compile NoSuchFieldPrimitive.jasm NoSuchFieldReference.jasm\n+ * @compile NoSuchFieldArray.jasm NoSuchFieldMultiArray.jasm\n+ * @run main NoSuchFieldOutputTest\n+ *\/\n+\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+\n+\/\/ Tests the output text of NoSuchFieldError\n+public class NoSuchFieldOutputTest {\n+\n+  public static void main(java.lang.String[] unused) throws Exception {\n+    try {\n+      Class.forName(\"NoSuchFieldPrimitive\").newInstance();\n+    } catch (NoSuchFieldError nsfe) {\n+      testNoSuchFieldOutput(nsfe, \"primitive\");\n+    }\n+    try {\n+      Class.forName(\"NoSuchFieldReference\").newInstance();\n+    } catch (NoSuchFieldError nsfe) {\n+      testNoSuchFieldOutput(nsfe, \"reference\");\n+    }\n+    try {\n+      Class.forName(\"NoSuchFieldArray\").newInstance();\n+    } catch (NoSuchFieldError nsfe) {\n+      testNoSuchFieldOutput(nsfe, \"array\");\n+    }\n+    try {\n+      Class.forName(\"NoSuchFieldMultiArray\").newInstance();\n+    } catch (NoSuchFieldError nsfe) {\n+      testNoSuchFieldOutput(nsfe, \"multiArray\");\n+    }\n+  }\n+\n+  private static void testNoSuchFieldOutput(NoSuchFieldError nsfe, String testType) throws Exception {\n+    Pattern noSuchFieldPattern = Pattern.compile(\"Class (?<classname>[\\\\w\\\\d]+) does not have member field '(?<signature>[\\\\S]+) (?<varname>[\\\\w\\\\d]+)'\");\n+    String output = nsfe.getMessage();\n+    Matcher noSuchFieldMatcher = noSuchFieldPattern.matcher(output);\n+    if (noSuchFieldMatcher.matches()) {\n+      switch(testType) {\n+      case \"primitive\":\n+        checkOutputGroups(noSuchFieldMatcher, output, \"NoSuchFieldPrimitive\", \"int\", \"x\");\n+        break;\n+      case \"reference\":\n+        checkOutputGroups(noSuchFieldMatcher, output, \"NoSuchFieldReference\", \"TestClass\", \"y\");\n+        break;\n+      case \"array\":\n+        checkOutputGroups(noSuchFieldMatcher, output, \"NoSuchFieldArray\", \"char[]\", \"z\");\n+        break;\n+      case \"multiArray\":\n+        checkOutputGroups(noSuchFieldMatcher, output, \"NoSuchFieldMultiArray\", \"double[][]\", \"a\");\n+        break;\n+      default:\n+        throwTestException(\"No matching test\", output);\n+      }\n+    } else {\n+      throwTestException(\"Output format does not match\", output);\n+    }\n+    System.out.println(output);\n+  }\n+\n+  private static void checkOutputGroups(Matcher noSuchFieldMatcher, String output,\n+                                 String testClass, String testSig, String testVar) throws Exception {\n+    String classname = noSuchFieldMatcher.group(\"classname\");\n+    String signature = noSuchFieldMatcher.group(\"signature\");\n+    String varname   = noSuchFieldMatcher.group(\"varname\");\n+    if (!classname.equals(testClass)) {\n+      throwTestException(\"Failed to match class name\", output);\n+    }\n+    if (!signature.equals(testSig)) {\n+      throwTestException(\"Failed to match type signature\", output);\n+    }\n+    if (!varname.equals(testVar)) {\n+      throwTestException(\"Failed to match field name\", output);\n+    }\n+  }\n+\n+  private static void throwTestException(String reason, String output) throws Exception {\n+      throw new Exception(reason + \" . Stdout is :\\n\" + output);\n+  }\n+}\n","filename":"test\/hotspot\/jtreg\/runtime\/linkResolver\/NoSuchFieldOutputTest.java","additions":108,"deletions":0,"binary":false,"changes":108,"status":"added"},{"patch":"@@ -0,0 +1,48 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+public class NoSuchFieldPrimitive {\n+    \/\/ static int x;\n+    public NoSuchFieldPrimitive() {\n+       x = 123;\n+    }\n+}\n+*\/\n+\n+super public class NoSuchFieldPrimitive\n+\tversion 65:0\n+{\n+  \/\/ REMOVED static Field x:I;\n+\n+  public Method \"<init>\":\"()V\"\n+\tstack 1 locals 1\n+  {\n+\t\taload_0;\n+\t\tinvokespecial\tMethod java\/lang\/Object.\"<init>\":\"()V\";\n+\t\tbipush\t123;\n+\t\tputstatic\tField x:\"I\";\n+\t\treturn;\n+  }\n+\n+} \/\/ end Class NoSuchFieldPrimitive\n","filename":"test\/hotspot\/jtreg\/runtime\/linkResolver\/NoSuchFieldPrimitive.jasm","additions":48,"deletions":0,"binary":false,"changes":48,"status":"added"},{"patch":"@@ -0,0 +1,50 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+public class NoSuchFieldReference {\n+    static TestClass y;\n+    public NoSuchFieldReference() {\n+        y = new TestClass();\n+    }\n+}\n+*\/\n+\n+super public class NoSuchFieldReference\n+\tversion 65:0\n+{\n+  \/\/ REMOVED static Field y:\"LTestClass;\";\n+\n+  public Method \"<init>\":\"()V\"\n+\tstack 2 locals 1\n+  {\n+\t\taload_0;\n+\t\tinvokespecial\tMethod java\/lang\/Object.\"<init>\":\"()V\";\n+\t\tnew\tclass TestClass;\n+\t\tdup;\n+\t\tinvokespecial\tMethod TestClass.\"<init>\":\"()V\";\n+\t\tputstatic\tField y:\"LTestClass;\";\n+\t\treturn;\n+  }\n+\n+} \/\/ end Class NoSuchFieldReference\n","filename":"test\/hotspot\/jtreg\/runtime\/linkResolver\/NoSuchFieldReference.jasm","additions":50,"deletions":0,"binary":false,"changes":50,"status":"added"},{"patch":"@@ -0,0 +1,25 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/\/ Used as a reference type for a field in NoSuchFieldReference.jasm\n+public class TestClass {}\n","filename":"test\/hotspot\/jtreg\/runtime\/linkResolver\/TestClass.java","additions":25,"deletions":0,"binary":false,"changes":25,"status":"added"}]}