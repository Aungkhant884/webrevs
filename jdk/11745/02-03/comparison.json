{"files":[{"patch":"@@ -986,5 +986,0 @@\n-    \/*stringStream ss;\n-    ss.print(\"Class %s does not have field '\", resolved_klass->external_name());\n-    sig->print_as_signature_external_return_type(&ss);\n-    ss.print(\" %s'\", field->as_C_string());\n-    THROW_MSG(vmSymbols::java_lang_NoSuchFieldError(), ss.as_string());*\/\n@@ -996,1 +991,0 @@\n-                \/\/type2name(Signature::basic_type(sig->char_at(0)))\n","filename":"src\/hotspot\/share\/interpreter\/linkResolver.cpp","additions":0,"deletions":6,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -439,1 +439,5 @@\n-  if (basic_type(signature->char_at(0)) == T_OBJECT) {\n+  return field_type_string_impl(signature, 0);\n+}\n+\n+const char* Signature::field_type_string_impl(const Symbol* signature, int index) {\n+  if (basic_type(signature->char_at(index)) == T_OBJECT) {\n@@ -441,3 +445,1 @@\n-  } else if (basic_type(signature->char_at(0)) == T_ARRAY) {\n-    char* buf = NEW_RESOURCE_ARRAY(char, 64);\n-    buf[signature->utf8_length()] = '\\0';\n+  } else if (basic_type(signature->char_at(index)) == T_ARRAY) {\n@@ -445,0 +447,1 @@\n+    \/\/ Unravel and count array layers\n@@ -446,5 +449,3 @@\n-    if (basic_type(signature->char_at(i)) == T_OBJECT) {\n-      strcpy(buf, strip_envelope(signature)->as_C_string());\n-    } else {\n-      strcpy(buf, type2name(Signature::basic_type(signature->char_at(i))));\n-    }\n+    char* buf = NEW_RESOURCE_ARRAY(char, 64);\n+    strncpy(buf, field_type_string_impl(signature, i), 64);\n+    \/\/ Append array braces to type name\n@@ -452,1 +453,0 @@\n-      buf[strlen(buf)] = '\\0';\n@@ -454,0 +454,1 @@\n+      buf[strlen(buf)] = '\\0';\n@@ -456,2 +457,0 @@\n-  } else {\n-    return (char*)type2name(Signature::basic_type(signature->char_at(0)));\n@@ -459,0 +458,2 @@\n+  \/\/ If it is a primitive, grab its basic type and return\n+  return (char*)type2name(Signature::basic_type(signature->char_at(index)));\n","filename":"src\/hotspot\/share\/runtime\/signature.cpp","additions":13,"deletions":12,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -128,0 +128,1 @@\n+  static const char* field_type_string_impl(const Symbol* signature, int index);\n","filename":"src\/hotspot\/share\/runtime\/signature.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}