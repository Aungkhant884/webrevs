{"files":[{"patch":"@@ -975,1 +975,4 @@\n-    THROW_MSG(vmSymbols::java_lang_NoSuchFieldError(), field->as_C_string());\n+    THROW_MSG(vmSymbols::java_lang_NoSuchFieldError(),\n+        err_msg(\"No resolved class, field '%s %s'\",\n+                type2name(Signature::basic_type(sig->char_at(0))),\n+                field->as_C_string()));\n@@ -983,1 +986,11 @@\n-    THROW_MSG(vmSymbols::java_lang_NoSuchFieldError(), field->as_C_string());\n+    \/*stringStream ss;\n+    ss.print(\"Class %s does not have field '\", resolved_klass->external_name());\n+    sig->print_as_signature_external_return_type(&ss);\n+    ss.print(\" %s'\", field->as_C_string());\n+    THROW_MSG(vmSymbols::java_lang_NoSuchFieldError(), ss.as_string());*\/\n+    THROW_MSG(vmSymbols::java_lang_NoSuchFieldError(),\n+        err_msg(\"Class %s does not have field '%s %s'\",\n+                resolved_klass->external_name(),\n+                Signature::field_type_string(sig),\n+                field->as_C_string()));\n+                \/\/type2name(Signature::basic_type(sig->char_at(0)))\n","filename":"src\/hotspot\/share\/interpreter\/linkResolver.cpp","additions":15,"deletions":2,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -438,0 +438,23 @@\n+const char* Signature::field_type_string(const Symbol* signature) {\n+  if (basic_type(signature->char_at(0)) == T_OBJECT) {\n+    return strip_envelope(signature)->as_C_string();\n+  } else if (basic_type(signature->char_at(0)) == T_ARRAY) {\n+    char* buf = NEW_RESOURCE_ARRAY(char, 64);\n+    buf[signature->utf8_length()] = '\\0';\n+    int i;\n+    for (i = 0; i < signature->utf8_length() && signature->char_at(i) == JVM_SIGNATURE_ARRAY; i++);\n+    if (basic_type(signature->char_at(i)) == T_OBJECT) {\n+      strcpy(buf, strip_envelope(signature)->as_C_string());\n+    } else {\n+      strcpy(buf, type2name(Signature::basic_type(signature->char_at(i))));\n+    }\n+    for (int j = 0; j < i; j++) {\n+      buf[strlen(buf)] = '\\0';\n+      strncat(buf, \"[]\", strlen(buf));\n+    }\n+    return buf;\n+  } else {\n+    return (char*)type2name(Signature::basic_type(signature->char_at(0)));\n+  }\n+}\n+\n","filename":"src\/hotspot\/share\/runtime\/signature.cpp","additions":23,"deletions":0,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -128,0 +128,2 @@\n+  static const char* field_type_string(const Symbol* signature);\n+\n","filename":"src\/hotspot\/share\/runtime\/signature.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,33 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/* Base definition for compilation by javac. *\/\n+\/*public class FieldName {\n+  public static int x = 123;\n+}*\/\n+\n+public class FieldName {\n+  public static int x;\n+  public static char[] y;\n+  public static TestClass z;\n+}\n","filename":"test\/hotspot\/jtreg\/runtime\/linkResolver\/FieldName.java","additions":33,"deletions":0,"binary":false,"changes":33,"status":"added"},{"patch":"@@ -0,0 +1,16 @@\n+\n+super public class FieldName\n+\tversion 65:0\n+{\n+  public static Field y:\"[C\";\n+  public static Field z:\"LTestClass;\";\n+\n+  public Method \"<init>\":\"()V\"\n+\tstack 1 locals 1\n+  {\n+\t\taload_0;\n+\t\tinvokespecial\tMethod java\/lang\/Object.\"<init>\":\"()V\";\n+\t\treturn;\n+  }\n+\n+} \/\/ end Class FieldName\n","filename":"test\/hotspot\/jtreg\/runtime\/linkResolver\/FieldName1.jasm","additions":16,"deletions":0,"binary":false,"changes":16,"status":"added"},{"patch":"@@ -0,0 +1,16 @@\n+\n+super public class FieldName\n+\tversion 65:0\n+{\n+  public static Field x:I;\n+  public static Field z:\"LTestClass;\";\n+\n+  public Method \"<init>\":\"()V\"\n+\tstack 1 locals 1\n+  {\n+\t\taload_0;\n+\t\tinvokespecial\tMethod java\/lang\/Object.\"<init>\":\"()V\";\n+\t\treturn;\n+  }\n+\n+} \/\/ end Class FieldName\n","filename":"test\/hotspot\/jtreg\/runtime\/linkResolver\/FieldName2.jasm","additions":16,"deletions":0,"binary":false,"changes":16,"status":"added"},{"patch":"@@ -0,0 +1,16 @@\n+\n+super public class FieldName\n+\tversion 65:0\n+{\n+  public static Field x:I;\n+  public static Field y:\"[C\";\n+\n+  public Method \"<init>\":\"()V\"\n+\tstack 1 locals 1\n+  {\n+\t\taload_0;\n+\t\tinvokespecial\tMethod java\/lang\/Object.\"<init>\":\"()V\";\n+\t\treturn;\n+  }\n+\n+} \/\/ end Class FieldName\n","filename":"test\/hotspot\/jtreg\/runtime\/linkResolver\/FieldName3.jasm","additions":16,"deletions":0,"binary":false,"changes":16,"status":"added"},{"patch":"@@ -0,0 +1,83 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8298065\n+ * @summary Test output of NoSuchFieldError when field signature does not match\n+ * @compile NoSuchFieldOutputTest.java FieldName.java\n+ * @compile FieldName1.jasm\n+ * @run main NoSuchFieldOutputTest\n+ * @compile FieldName2.jasm\n+ * @run main NoSuchFieldOutputTest\n+ * @compile FieldName3.jasm\n+ * @run main NoSuchFieldOutputTest\n+ *\/\n+\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+\n+public class NoSuchFieldOutputTest {\n+\n+  public static void main(java.lang.String[] unused) throws Exception {\n+    try {\n+      FieldName fm = new FieldName();\n+      String s = \"\";\n+      Object x = FieldName.x;\n+      s = s + \"\\nx = \" + x;\n+      Object y = FieldName.y;\n+      s = s + \"\\ny = \" + y;\n+      Object z = FieldName.z;\n+      s = s + \"\\nz = \" + z;\n+      throwTestException(\"Did not throw NoSuchFieldError\", s);\n+    } catch (NoSuchFieldError nsfe) {\n+      testNoSuchFieldOutput(nsfe);\n+    }\n+  }\n+\n+  private static void testNoSuchFieldOutput(NoSuchFieldError nsfe) throws Exception {\n+    Pattern noSuchFieldPattern = Pattern.compile(\"Class (?<classname>[\\\\w\\\\d]+) does not have field '(?<signature>[\\\\S]+) (?<varname>[\\\\w\\\\d]+)'\");\n+    String output = nsfe.getMessage();\n+    Matcher noSuchFieldMatcher = noSuchFieldPattern.matcher(output);\n+    if (noSuchFieldMatcher.matches()) {\n+      String classname = noSuchFieldMatcher.group(\"classname\");\n+      String signature = noSuchFieldMatcher.group(\"signature\");\n+      String varname   = noSuchFieldMatcher.group(\"varname\");\n+      if (!classname.equals(\"FieldName\")) {\n+        throwTestException(\"Failed to match class name\", output);\n+      }\n+      if (!signature.equals(\"int\") && !signature.equals(\"char[]\") && !signature.equals(\"TestClass\")) {\n+        throwTestException(\"Failed to match type signature\", output);\n+      }\n+      if (!varname.equals(\"x\") && !varname.equals(\"y\") && !varname.equals(\"z\")) {\n+        throwTestException(\"Failed to match field name\", output);\n+      }\n+    } else {\n+      throwTestException(\"Output format does not match\", output);\n+    }\n+    System.out.println(output);\n+  }\n+  private static void throwTestException(String reason, String output) throws Exception {\n+      throw new Exception(reason + \" . Stdout is :\\n\" + output);\n+  }\n+}\n","filename":"test\/hotspot\/jtreg\/runtime\/linkResolver\/NoSuchFieldOutputTest.java","additions":83,"deletions":0,"binary":false,"changes":83,"status":"added"},{"patch":"@@ -0,0 +1,24 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+ public class TestClass {}\n","filename":"test\/hotspot\/jtreg\/runtime\/linkResolver\/TestClass.java","additions":24,"deletions":0,"binary":false,"changes":24,"status":"added"}]}