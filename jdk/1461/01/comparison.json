{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -68,4 +68,8 @@\n-     * This empty constructor automatically seeds the generator.  We attempt\n-     * to provide sufficient seed bytes to completely randomize the internal\n-     * state of the generator (20 bytes).  Note, however, that our seed\n-     * generation algorithm has not been thoroughly studied or widely deployed.\n+     * This empty constructor.\n+     * <p>\n+     * If the initial state has not been provided by the user via a setSeed()\n+     * call, on the first call to engineGetBytes this object will call the\n+     * SeedGenerator to provide sufficient seed bytes to completely randomize\n+     * the internal state of the generator (20 bytes).  Note that the old\n+     * threaded seed generation algorithm is provided only as a fallback, and\n+     * has not been thoroughly studied or widely deployed.\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/SecureRandom.java","additions":9,"deletions":5,"binary":false,"changes":14,"status":"modified"}]}