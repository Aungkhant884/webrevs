{"files":[{"patch":"@@ -121,0 +121,4 @@\n+    \/*\n+     * This method checks if a given Deflater and Inflater pair can correctly compress and decompress data.\n+     * checks were performed for this functionality using various input scenarios and ByteBuffer instances.\n+     *\/\n@@ -125,0 +129,3 @@\n+        byte[] out1, out2;\n+        int m = 0, n = 0;\n+        Inflater inf = new Inflater(nowrap);\n@@ -127,13 +134,0 @@\n-        int m = 0;\n-\n-        ByteArrayOutputStream baos = new ByteArrayOutputStream(len);\n-        while (!def.finished()) {\n-            int temp_counter = def.deflate(tempBuffer);\n-            m += temp_counter;\n-            baos.write(tempBuffer, 0, temp_counter);\n-        }\n-        byte[] out1 = baos.toByteArray();\n-        baos.reset();\n-        Inflater inf = new Inflater(nowrap);\n-        inf.setInput(out1, 0, m);\n-        int n = 0;\n@@ -141,13 +135,24 @@\n-        while (!inf.finished()) {\n-            int temp_counter = inf.inflate(tempBuffer);\n-            n += temp_counter;\n-            baos.write(tempBuffer, 0,  temp_counter);\n-        }\n-        byte[] out2 = baos.toByteArray();\n-        baos.close();\n-        if (n != len ||\n-            !Arrays.equals(Arrays.copyOf(in, len), Arrays.copyOf(out2, len)) ||\n-            inf.inflate(out2) != 0) {\n-            System.out.printf(\"m=%d, n=%d, len=%d, eq=%b%n\",\n-                              m, n, len, Arrays.equals(in, out2));\n-            throw new RuntimeException(\"De\/inflater failed:\" + def);\n+        try(ByteArrayOutputStream baos = new ByteArrayOutputStream(len)) {\n+            while (!def.finished()) {\n+                int temp_counter = def.deflate(tempBuffer);\n+                m += temp_counter;\n+                baos.write(tempBuffer, 0, temp_counter);\n+            }\n+            out1 = baos.toByteArray();\n+            baos.reset();\n+\n+            inf.setInput(out1, 0, m);\n+\n+            while (!inf.finished()) {\n+                int temp_counter = inf.inflate(tempBuffer);\n+                n += temp_counter;\n+                baos.write(tempBuffer, 0, temp_counter);\n+            }\n+            out2 = baos.toByteArray();\n+            if (n != len ||\n+                !Arrays.equals(Arrays.copyOf(in, len), Arrays.copyOf(out2, len)) ||\n+                inf.inflate(out2) != 0) {\n+                System.out.printf(\"m=%d, n=%d, len=%d, eq=%b%n\",\n+                                  m, n, len, Arrays.equals(in, out2));\n+                throw new RuntimeException(\"De\/inflater failed:\" + def);\n+            }\n","filename":"test\/jdk\/java\/util\/zip\/DeInflate.java","additions":31,"deletions":26,"binary":false,"changes":57,"status":"modified"}]}