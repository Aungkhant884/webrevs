{"files":[{"patch":"@@ -820,3 +820,14 @@\n-        conContext.closeInbound();\n-        if ((autoClose || !isLayered()) && !super.isInputShutdown()) {\n-            super.shutdownInput();\n+        \/\/ Is it ready to close inbound?\n+        \/\/\n+        \/\/ No need to throw exception if the initial handshake is not started.\n+        try {\n+            if (checkCloseNotify && !conContext.isInputCloseNotified &&\n+                (conContext.isNegotiated || conContext.handshakeContext != null)) {\n+            throw new SSLException(\n+                    \"closing inbound before receiving peer's close_notify\");\n+            }\n+        } finally {\n+            conContext.closeInbound();\n+            if ((autoClose || !isLayered()) && !super.isInputShutdown()) {\n+                super.shutdownInput();\n+            }\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SSLSocketImpl.java","additions":14,"deletions":3,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -152,1 +152,13 @@\n-            sslSocket.shutdownInput();\n+            try {\n+                sslSocket.shutdownInput();\n+            } catch (SSLException e) {\n+                if (!e.getMessage().contains\n+                        (\"closing inbound before receiving peer's close_notify\")) {\n+                    throw new RuntimeException(\"expected different exception message. \" +\n+                        e.getMessage());\n+                }\n+            }\n+            if (!sslSocket.getSession().isValid()) {\n+                throw new RuntimeException(\"expected session to remain valid\");\n+            }\n+\n","filename":"test\/jdk\/sun\/security\/ssl\/SSLSocketImpl\/SSLSocketCloseHang.java","additions":13,"deletions":1,"binary":false,"changes":14,"status":"modified"}]}