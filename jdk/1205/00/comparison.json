{"files":[{"patch":"@@ -811,10 +811,0 @@\n-        \/\/ Is it ready to close inbound?\n-        \/\/\n-        \/\/ No need to throw exception if the initial handshake is not started.\n-        if (checkCloseNotify && !conContext.isInputCloseNotified &&\n-            (conContext.isNegotiated || conContext.handshakeContext != null)) {\n-\n-            throw conContext.fatal(Alert.INTERNAL_ERROR,\n-                    \"closing inbound before receiving peer's close_notify\");\n-        }\n-\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SSLSocketImpl.java","additions":0,"deletions":10,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 8184328\n+ * @bug 8184328 8253368\n@@ -29,0 +29,1 @@\n+ * @run main\/othervm SSLSocketCloseHang shutdownInputTest\n@@ -75,0 +76,2 @@\n+    static boolean shutdownInputTest = false;\n+\n@@ -148,1 +151,8 @@\n-        sslSocket.close();\n+        if (shutdownInputTest) {\n+            sslSocket.shutdownInput();\n+        } else {\n+            sslSocket.close();\n+        }\n+\n+\n+\n@@ -182,0 +192,2 @@\n+        shutdownInputTest = args.length > 0 ? true : false;\n+\n","filename":"test\/jdk\/sun\/security\/ssl\/SSLSocketImpl\/SSLSocketCloseHang.java","additions":15,"deletions":3,"binary":false,"changes":18,"status":"modified"}]}