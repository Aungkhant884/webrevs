{"files":[{"patch":"@@ -953,1 +953,0 @@\n-\/\/ An alternate strategy is being investigated for this deferral of updating.\n@@ -968,1 +967,1 @@\n-\/\/ within them are evacuated to their destinations. These dependencies lead to\n+\/\/ within them are evacuated to their destinations.  These dependencies lead to\n@@ -970,1 +969,1 @@\n-\/\/ Shadow regions are utilized to address these region dependencies. The basic\n+\/\/ Shadow regions are utilized to address these region dependencies.  The basic\n@@ -972,1 +971,1 @@\n-\/\/ objects  and thus cannot serve as a destination momentarily, the GC thread\n+\/\/ objects and thus cannot serve as a destination momentarily, the GC thread\n@@ -974,1 +973,1 @@\n-\/\/ live objects into this shadow region. Live objects in the shadow region will\n+\/\/ live objects into this shadow region.  Live objects in the shadow region will\n@@ -978,2 +977,2 @@\n-\/\/ Haoyu Li, Mingyu Wu, Binyu Zang, and Haibo Chen. 2019. ScissorGC: scalable\n-\/\/ and efficient compaction for Java full garbage collection. In Proceedings of\n+\/\/ Haoyu Li, Mingyu Wu, Binyu Zang, and Haibo Chen.  2019.  ScissorGC: scalable\n+\/\/ and efficient compaction for Java full garbage collection.  In Proceedings of\n@@ -981,1 +980,1 @@\n-\/\/ Environments (VEE 2019). ACM, New York, NY, USA, 108-121. DOI:\n+\/\/ Environments (VEE 2019).  ACM, New York, NY, USA, 108-121.  DOI:\n","filename":"src\/hotspot\/share\/gc\/parallel\/psParallelCompact.hpp","additions":7,"deletions":8,"binary":false,"changes":15,"status":"modified"}]}