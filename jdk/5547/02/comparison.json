{"files":[{"patch":"@@ -19,1 +19,1 @@\n-\/.project\/\n+**.project**\n","filename":".gitignore","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1173,0 +1173,5 @@\n+\/\/ See 8273459.  Function for ensuring 64-byte alignment, intended for stubs only.\n+void MacroAssembler::align64() {\n+  align(64, (unsigned long long) pc());\n+}\n+\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86.cpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -197,0 +197,1 @@\n+  void align64();\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -4197,1 +4197,1 @@\n-    __ align(64);\n+    __ align64();\n@@ -4206,1 +4206,1 @@\n-    __ align(64);\n+    __ align64();\n@@ -4251,1 +4251,1 @@\n-    __ align(64);\n+    __ align64();\n@@ -4467,1 +4467,1 @@\n-    __ align(64);\n+    __ align64();\n@@ -5386,1 +5386,1 @@\n-    __ align(64, (unsigned long long)__ pc());\n+    __ align64();\n@@ -5446,1 +5446,1 @@\n-    __ align(64, (unsigned long long)__ pc());\n+    __ align64();\n@@ -5853,1 +5853,1 @@\n-    __ align(64, (unsigned long long) __ pc());\n+    __ align64();\n@@ -5870,1 +5870,1 @@\n-    __ align(64, (unsigned long long) __ pc());\n+    __ align64();\n@@ -5886,1 +5886,1 @@\n-    __ align(64, (unsigned long long) __ pc());\n+    __ align64();\n@@ -5903,1 +5903,1 @@\n-    __ align(64, (unsigned long long) __ pc());\n+    __ align64();\n@@ -5920,1 +5920,1 @@\n-    __ align(64, (unsigned long long) __ pc());\n+    __ align64();\n@@ -5937,1 +5937,1 @@\n-    __ align(64, (unsigned long long) __ pc());\n+    __ align64();\n@@ -5954,1 +5954,1 @@\n-    __ align(64, (unsigned long long) __ pc());\n+    __ align64();\n@@ -5971,1 +5971,1 @@\n-    __ align(64, (unsigned long long) __ pc());\n+    __ align64();\n","filename":"src\/hotspot\/cpu\/x86\/stubGenerator_x86_64.cpp","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"}]}