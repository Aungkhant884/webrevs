{"files":[{"patch":"@@ -40,0 +40,3 @@\n+    static PrintStream oldOut;\n+    static PrintStream oldErr;\n+\n@@ -57,2 +60,2 @@\n-            PrintStream oldOut = System.out;\n-            PrintStream oldErr = System.err;\n+            oldOut = System.out;\n+            oldErr = System.err;\n@@ -70,4 +73,0 @@\n-            \/\/ Restore streams, check results\n-            System.setOut(oldOut);\n-            System.setErr(oldErr);\n-\n@@ -75,0 +74,2 @@\n+                System.out.println(\"bout: \" + bout);\n+                System.out.println(\"berr: \" + berr);\n@@ -77,0 +78,4 @@\n+        } finally {\n+            \/\/ Restore streams, check results\n+            System.setOut(oldOut);\n+            System.setErr(oldErr);\n","filename":"test\/jdk\/javax\/swing\/BasicMenuUI\/bug4244616.java","additions":11,"deletions":6,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n-    static Font FONT = new Font(Font.MONOSPACED, Font.ITALIC, 24);\n+    static final Font FONT = new Font(Font.MONOSPACED, Font.ITALIC, 24);\n@@ -40,1 +40,1 @@\n-        MetalLookAndFeel.setCurrentTheme(new MetalTheme());\n+        MetalLookAndFeel.setCurrentTheme(new TestMetalTheme());\n@@ -48,1 +48,1 @@\n-    static class MetalTheme extends DefaultMetalTheme {\n+    static class TestMetalTheme extends DefaultMetalTheme {\n","filename":"test\/jdk\/javax\/swing\/LookAndFeel\/bug4306431.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -35,1 +35,0 @@\n-import java.awt.event.MouseEvent;\n@@ -44,0 +43,1 @@\n+import java.awt.event.MouseEvent;\n@@ -51,0 +51,3 @@\n+    static GraphicsEnvironment ge;\n+    static GraphicsDevice[] gs;\n+    static GraphicsConfiguration testGraphicsConfig;\n@@ -59,17 +62,1 @@\n-            SwingUtilities.invokeAndWait(() -> {\n-                GraphicsEnvironment ge = GraphicsEnvironment.\n-                        getLocalGraphicsEnvironment();\n-                GraphicsDevice[] gs = ge.getScreenDevices();\n-                GraphicsConfiguration testGraphics = null;\n-                for (int j = 0; j < gs.length; j++) {\n-                    GraphicsDevice gd = gs[j];\n-                    GraphicsConfiguration[] gc =\n-                            gd.getConfigurations();\n-                    for (int i = 0; i < gc.length; i++) {\n-                        insets = Toolkit.getDefaultToolkit().getScreenInsets(gc[i]);\n-                        if (insets.bottom != 0) {\n-                            testGraphics = gc[i];\n-                            break;\n-                        }\n-                    }\n-                }\n+            graphicsConfigHelper();\n@@ -77,1 +64,2 @@\n-                if (testGraphics == null) {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (testGraphicsConfig == null) {\n@@ -97,1 +85,1 @@\n-                bounds = testGraphics.getBounds();\n+                bounds = testGraphicsConfig.getBounds();\n@@ -110,2 +98,0 @@\n-            r.waitForIdle();\n-            r.delay(1000);\n@@ -125,4 +111,5 @@\n-    public static void test(Rectangle b, Insets i) {\n-        r.delay(500);\n-        ToolTipManager.sharedInstance().setLightWeightPopupEnabled(false);\n-        ToolTipManager.sharedInstance().setInitialDelay(100);\n+    public static void test(Rectangle b, Insets i) throws Exception {\n+        SwingUtilities.invokeAndWait(() -> {\n+            ToolTipManager.sharedInstance().setLightWeightPopupEnabled(false);\n+            ToolTipManager.sharedInstance().setInitialDelay(100);\n+        });\n@@ -130,1 +117,1 @@\n-        r.delay(2000);\n+        r.delay(500);\n@@ -133,3 +120,1 @@\n-            System.out.println(\"No owned windows for JFrame - no tooltip shown?\");\n-            passed = true;\n-            return;\n+            throw new RuntimeException(\"No owned windows for JFrame - no tooltip shown?\");\n@@ -140,4 +125,22 @@\n-        if (wy < (b.y + b.height - i.bottom)) {\n-            \/\/ Position is Ok!\n-            passed = true;\n-        }\n+        passed = wy < (b.y + b.height - i.bottom));\n+    }\n+\n+    public static void graphicsConfigHelper() throws Exception {\n+        SwingUtilities.invokeAndWait(() -> {\n+            ge = GraphicsEnvironment.getLocalGraphicsEnvironment();\n+            gs = ge.getScreenDevices();\n+            testGraphicsConfig = null;\n+\n+            for (int j = 0; j < gs.length; j++) {\n+                GraphicsDevice gd = gs[j];\n+                GraphicsConfiguration[] gc = gd.getConfigurations();\n+                for (int i = 0; i < gc.length; i++) {\n+                    insets = Toolkit.getDefaultToolkit().getScreenInsets(gc[i]);\n+                    if (insets.bottom != 0) {\n+                        testGraphicsConfig = gc[i];\n+                        break;\n+                    }\n+                }\n+            }\n+        });\n+\n","filename":"test\/jdk\/javax\/swing\/ToolTipManager\/bug5078214.java","additions":37,"deletions":34,"binary":false,"changes":71,"status":"modified"}]}