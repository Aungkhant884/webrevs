{"files":[{"patch":"@@ -4648,1 +4648,0 @@\n-\/\/------------------------------verify-----------------------------------------\n@@ -4653,1 +4652,1 @@\n-  bool fail = false;\n+  bool success = true;\n@@ -4658,1 +4657,1 @@\n-  fail |= verify_idom_and_nodes(C->root(), &phase_verify);\n+  success &= verify_idom_and_nodes(C->root(), &phase_verify);\n@@ -4661,1 +4660,1 @@\n-  fail |= _ltree_root->verify_tree(phase_verify._ltree_root);\n+  success &= _ltree_root->verify_tree(phase_verify._ltree_root);\n@@ -4663,1 +4662,1 @@\n-  assert(!fail, \"verify loops failed\");\n+  assert(success, \"VerifyLoopOptimizations failed\");\n@@ -4669,1 +4668,0 @@\n-\/\/------------------------------verify_idom_and_nodes-----------------------------\n@@ -4675,1 +4673,1 @@\n-  bool fail = false;\n+  bool success = true;\n@@ -4679,2 +4677,2 @@\n-    fail |= verify_idom(n, phase_verify);\n-    fail |= verify_nodes(n, phase_verify);\n+    success &= verify_idom(n, phase_verify);\n+    success &= verify_nodes(n, phase_verify);\n@@ -4688,1 +4686,1 @@\n-  return fail;\n+  return success;\n@@ -4691,1 +4689,0 @@\n-\/\/------------------------------verify_idom---------------------------------\n@@ -4696,1 +4693,1 @@\n-    return false; \/\/ pass\n+    return true; \/\/ pass\n@@ -4702,1 +4699,1 @@\n-    return true; \/\/ fail\n+    return false; \/\/ fail\n@@ -4723,1 +4720,1 @@\n-  return false; \/\/ pass\n+  return true; \/\/ pass\n@@ -4726,1 +4723,0 @@\n-\/\/------------------------------verify_nodes---------------------------------\n@@ -4742,1 +4738,1 @@\n-      return true; \/\/ fail\n+      return false; \/\/ fail\n@@ -4745,1 +4741,1 @@\n-    return false; \/\/ pass\n+    return true; \/\/ pass\n@@ -4751,1 +4747,1 @@\n-    return true; \/\/ fail\n+    return false; \/\/ fail\n@@ -4757,1 +4753,1 @@\n-    return true; \/\/ fail\n+    return false; \/\/ fail\n@@ -4786,1 +4782,1 @@\n-    return false; \/\/ pass\n+    return true; \/\/ pass\n@@ -4814,1 +4810,1 @@\n-    return false; \/\/ pass\n+    return true; \/\/ pass\n@@ -4818,2 +4814,7 @@\n-void IdealLoopTree::collect_children(GrowableArray<IdealLoopTree*> &children) const {\n-  children.clear();\n+int compare_tree(IdealLoopTree* const& a, IdealLoopTree* const& b) {\n+  assert(a != nullptr && b != nullptr, \"must be\");\n+  return a->_head->_idx - b->_head->_idx;\n+}\n+\n+GrowableArray<IdealLoopTree*> IdealLoopTree::collect_sorted_children() const {\n+  GrowableArray<IdealLoopTree*> children;\n@@ -4823,1 +4824,1 @@\n-    children.push(child);\n+    children.insert_sorted<&compare_tree>(child);\n@@ -4826,0 +4827,1 @@\n+  return children;\n@@ -4828,6 +4830,0 @@\n-int compare_tree(IdealLoopTree** a, IdealLoopTree** b) {\n-  assert((*a) != nullptr && (*b) != nullptr, \"must be\");\n-  return (*a)->_head->_idx - (*b)->_head->_idx;\n-}\n-\n-\/\/------------------------------verify_tree------------------------------------\n@@ -4842,6 +4838,2 @@\n-  GrowableArray<IdealLoopTree*> children;\n-  GrowableArray<IdealLoopTree*> children_verify;\n-  collect_children(children);\n-  loop_verify->collect_children(children_verify);\n-  children.sort(compare_tree);\n-  children_verify.sort(compare_tree);\n+  GrowableArray<IdealLoopTree*> children = collect_sorted_children();\n+  GrowableArray<IdealLoopTree*> children_verify = loop_verify->collect_sorted_children();\n@@ -4849,1 +4841,1 @@\n-  bool fail = false;\n+  bool success = true;\n@@ -4873,1 +4865,1 @@\n-      if (child_verify->_irreducible && Compile::current()->major_progress()) {\n+      if (child->_irreducible && Compile::current()->major_progress()) {\n@@ -4876,1 +4868,1 @@\n-        tty->print_cr(\"We have loop that verify does not have\");\n+        tty->print_cr(\"We have a loop that verify does not have\");\n@@ -4878,1 +4870,1 @@\n-        fail = true;\n+        success = false;\n@@ -4890,1 +4882,1 @@\n-        tty->print_cr(\"Verify has loop that we do not have\");\n+        tty->print_cr(\"Verify has a loop that we do not have\");\n@@ -4892,1 +4884,1 @@\n-        fail = true;\n+        success = false;\n@@ -4897,1 +4889,1 @@\n-      fail |= child->verify_tree(child_verify); \/\/ Recursion\n+      success &= child->verify_tree(child_verify); \/\/ Recursion\n@@ -4922,1 +4914,1 @@\n-    Node* loopexit = cl->loopexit(); \/\/ assert implied\n+    cl->loopexit(); \/\/ assert implied\n@@ -4974,1 +4966,1 @@\n-  return fail;\n+  return success;\n","filename":"src\/hotspot\/share\/opto\/loopnode.cpp","additions":37,"deletions":45,"binary":false,"changes":82,"status":"modified"},{"patch":"@@ -797,1 +797,1 @@\n-  void collect_children(GrowableArray<IdealLoopTree*> &children) const;\n+  GrowableArray<IdealLoopTree*> collect_sorted_children() const;\n","filename":"src\/hotspot\/share\/opto\/loopnode.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}