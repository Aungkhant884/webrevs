{"files":[{"patch":"@@ -1448,1 +1448,1 @@\n-        aaTextInfo = new HashMap<>(2);\n+        aaTextInfo = HashMap.newHashMap(2);\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/java\/swing\/plaf\/gtk\/GTKLookAndFeel.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -656,1 +656,1 @@\n-        Map<TextAttribute, Object> clone = new HashMap<>(basic.size());\n+        Map<TextAttribute, Object> clone = HashMap.newHashMap(basic.size());\n","filename":"src\/java.desktop\/share\/classes\/java\/beans\/MetaData.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -332,2 +332,2 @@\n-        Map<Long,DataFlavor> formatMap = new HashMap<>(flavors.length);\n-        Map<Long,DataFlavor> textPlainMap = new HashMap<>(flavors.length);\n+        Map<Long,DataFlavor> formatMap = HashMap.newHashMap(flavors.length);\n+        Map<Long,DataFlavor> textPlainMap = HashMap.newHashMap(flavors.length);\n@@ -337,2 +337,2 @@\n-        Map<Long, Integer> indexMap = new HashMap<>(flavors.length);\n-        Map<Long, Integer> textPlainIndexMap = new HashMap<>(flavors.length);\n+        Map<Long, Integer> indexMap = HashMap.newHashMap(flavors.length);\n+        Map<Long, Integer> textPlainIndexMap = HashMap.newHashMap(flavors.length);\n@@ -412,1 +412,1 @@\n-        Map<DataFlavor, Long> flavorMap = new HashMap<>(formats.length);\n+        Map<DataFlavor, Long> flavorMap = HashMap.newHashMap(formats.length);\n","filename":"src\/java.desktop\/share\/classes\/sun\/awt\/datatransfer\/DataTransferer.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -187,1 +187,1 @@\n-                    map = new HashMap<>(list.size());\n+                    map = HashMap.newHashMap(list.size());\n@@ -281,1 +281,1 @@\n-                    map = new HashMap<>(list.size());\n+                    map = HashMap.newHashMap(list.size());\n@@ -418,1 +418,1 @@\n-                    map = new HashMap<>(list.size());\n+                    map = HashMap.newHashMap(list.size());\n","filename":"src\/java.management\/share\/classes\/java\/lang\/management\/DefaultPlatformMBeanProvider.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -61,1 +61,1 @@\n-        Map<String, Long> result = new HashMap<>(numThreads);\n+        Map<String, Long> result = HashMap.newHashMap(numThreads);\n","filename":"src\/java.management\/share\/classes\/sun\/management\/HotspotThread.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -123,4 +123,4 @@\n-        vmFields     = new HashMap<>(vmFieldsInfo.length);\n-        vmConstants  = new HashMap<>(vmConstantsInfo.length);\n-        vmAddresses  = new HashMap<>(vmAddressesInfo.length);\n-        vmFlags      = new HashMap<>(vmFlagsInfo.length);\n+        vmFields     = HashMap.newHashMap(vmFieldsInfo.length);\n+        vmConstants  = HashMap.newHashMap(vmConstantsInfo.length);\n+        vmAddresses  = HashMap.newHashMap(vmAddressesInfo.length);\n+        vmFlags      = HashMap.newHashMap(vmFlagsInfo.length);\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk.vm.ci.hotspot\/src\/jdk\/vm\/ci\/hotspot\/HotSpotVMConfigStore.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -320,1 +320,1 @@\n-        Map<String, String> props = new HashMap<>(utf8Props + nonUtf8Props);\n+        Map<String, String> props = HashMap.newHashMap(utf8Props + nonUtf8Props);\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk.vm.ci.services\/src\/jdk\/vm\/ci\/services\/Services.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -81,1 +81,1 @@\n-            Map<String, ValueDescriptor> newCache = new LinkedHashMap<>(fields.size());\n+            Map<String, ValueDescriptor> newCache = LinkedHashMap.newLinkedHashMap(fields.size());\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/EventType.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -105,1 +105,1 @@\n-        Map<Long, EventType> previousSet = new HashMap<>(previous.size());\n+        Map<Long, EventType> previousSet = HashMap.newHashMap(previous.size());\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/consumer\/MetadataEvent.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -275,1 +275,1 @@\n-        Map<String, Type> typeMap = new HashMap<>(2 * types.size());\n+        Map<String, Type> typeMap = HashMap.newHashMap(2 * types.size());\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/MetadataLoader.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -83,1 +83,1 @@\n-        HashMap<String, Integer> lookup = new LinkedHashMap<>(stringPool.size());\n+        HashMap<String, Integer> lookup = LinkedHashMap.newLinkedHashMap(stringPool.size());\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/MetadataWriter.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -175,1 +175,1 @@\n-        Map<String, InternalSetting> map = new LinkedHashMap<>(activeSettings.size());\n+        Map<String, InternalSetting> map = LinkedHashMap.newLinkedHashMap(activeSettings.size());\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/SettingsManager.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -465,1 +465,1 @@\n-        HashMap<String, String> map = new HashMap<>(settings.size());\n+        HashMap<String, String> map = HashMap.newHashMap(settings.size());\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/Utils.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -76,1 +76,1 @@\n-            Map<String, String> map = new HashMap<>(values.size());\n+            Map<String, String> map = HashMap.newHashMap(values.size());\n","filename":"src\/jdk.management.jfr\/share\/classes\/jdk\/management\/jfr\/ConfigurationInfo.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -116,1 +116,1 @@\n-                    map = new HashMap<>(list.size());\n+                    map = HashMap.newHashMap(list.size());\n","filename":"src\/jdk.management\/share\/classes\/com\/sun\/management\/internal\/PlatformMBeanProviderImpl.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -88,1 +88,1 @@\n-        Map<InputNode, List<InputEdge>> result = new HashMap<>(getNodes().size());\n+        Map<InputNode, List<InputEdge>> result = HashMap.newHashMap(getNodes().size());\n@@ -110,1 +110,1 @@\n-        Map<InputNode, List<InputEdge>> result = new HashMap<>(getNodes().size());\n+        Map<InputNode, List<InputEdge>> result = HashMap.newHashMap(getNodes().size());\n","filename":"src\/utils\/IdealGraphVisualizer\/Data\/src\/main\/java\/com\/sun\/hotspot\/igv\/data\/InputGraph.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -58,1 +58,1 @@\n-        Map<Integer, InputNode> keyMapB = new HashMap<>(b.getNodes().size());\n+        Map<Integer, InputNode> keyMapB = HashMap.newHashMap(b.getNodes().size());\n@@ -111,1 +111,1 @@\n-        Map<InputBlock, InputBlock> blocksMap = new HashMap<>();\n+        Map<InputBlock, InputBlock> blocksMap = HashMap.newHashMap(a.getBlocks().size());\n@@ -154,1 +154,1 @@\n-        Map<InputNode, InputNode> inputNodeMap = new HashMap<>(pairs.size());\n+        Map<InputNode, InputNode> inputNodeMap = HashMap.newHashMap(pairs.size());\n","filename":"src\/utils\/IdealGraphVisualizer\/Difference\/src\/main\/java\/com\/sun\/hotspot\/igv\/difference\/Difference.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -49,3 +49,3 @@\n-        portLinks = new HashMap<>(links.size());\n-        inputPorts = new HashMap<>(links.size());\n-        outputPorts = new HashMap<>(links.size());\n+        portLinks = HashMap.newHashMap(links.size());\n+        inputPorts = HashMap.newHashMap(links.size());\n+        outputPorts = HashMap.newHashMap(links.size());\n","filename":"src\/utils\/IdealGraphVisualizer\/Layout\/src\/main\/java\/com\/sun\/hotspot\/igv\/layout\/LayoutGraph.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -255,1 +255,1 @@\n-            inputNodeToNode = new HashMap<>(graph.getNodes().size());\n+            inputNodeToNode = HashMap.newHashMap(graph.getNodes().size());\n@@ -519,1 +519,1 @@\n-        dominatorMap = new HashMap<>(graph.getBlocks().size());\n+        dominatorMap = HashMap.newHashMap(graph.getBlocks().size());\n@@ -617,1 +617,1 @@\n-        Map<Integer, List<InputEdge>> edgeMap = new HashMap<>(graph.getEdges().size());\n+        Map<Integer, List<InputEdge>> edgeMap = HashMap.newHashMap(graph.getEdges().size());\n","filename":"src\/utils\/IdealGraphVisualizer\/ServerCompiler\/src\/main\/java\/com\/sun\/hotspot\/igv\/servercompiler\/ServerCompilerScheduler.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -856,1 +856,1 @@\n-        Map<Point, List<Connection>> pointMap = new HashMap<>(connections.size());\n+        Map<Point, List<Connection>> pointMap = HashMap.newHashMap(connections.size());\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/DiagramScene.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}