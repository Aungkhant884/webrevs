{"files":[{"patch":"@@ -291,1 +291,1 @@\n-    static HashMap strcache = new HashMap(tscripts.length);\n+    static HashMap strcache = new HashMap((int) (Math.ceil(tscripts.length \/ 0.75)));\n","filename":"src\/demo\/share\/java2d\/J2DBench\/src\/j2dbench\/tests\/text\/TextTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -145,1 +145,1 @@\n-        HashMap<String, String> attrs = new HashMap<>(3);\n+        HashMap<String, String> attrs = HashMap.newHashMap(3);\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/SunJCE.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -100,1 +100,1 @@\n-        private static final Map<String, Attribute> instanceMap = new HashMap<>(7);\n+        private static final Map<String, Attribute> instanceMap = HashMap.newHashMap(7);\n","filename":"src\/java.base\/share\/classes\/java\/text\/AttributedCharacterIterator.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -878,1 +878,1 @@\n-        private static final Map<String, Field> instanceMap = new HashMap<>(18);\n+        private static final Map<String, Field> instanceMap = HashMap.newHashMap(18);\n","filename":"src\/java.base\/share\/classes\/java\/text\/DateFormat.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1242,1 +1242,1 @@\n-        private static final Map<String, Field> instanceMap = new HashMap<>(11);\n+        private static final Map<String, Field> instanceMap = HashMap.newHashMap(13);\n","filename":"src\/java.base\/share\/classes\/java\/text\/NumberFormat.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -117,1 +117,1 @@\n-        memberTypes = new HashMap<>(methods.length+1, 1.0f);\n+        memberTypes = HashMap.newHashMap(methods.length);\n@@ -119,1 +119,1 @@\n-        members = new HashMap<>(methods.length+1, 1.0f);\n+        members = HashMap.newHashMap(methods.length);\n","filename":"src\/java.base\/share\/classes\/sun\/reflect\/annotation\/AnnotationType.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -95,1 +95,1 @@\n-        HashMap<String, String> attrs = new HashMap<>(3);\n+        HashMap<String, String> attrs = HashMap.newHashMap(3);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/SunEntries.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -58,1 +58,1 @@\n-        HashMap<String, String> attrs = new HashMap<>(3);\n+        HashMap<String, String> attrs = HashMap.newHashMap(3);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/rsa\/SunRsaSignEntries.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -337,1 +337,1 @@\n-                extensions = new HashMap<>(1);\n+                extensions = HashMap.newHashMap(1);\n","filename":"src\/java.base\/share\/classes\/sun\/util\/locale\/InternalLocaleBuilder.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -71,1 +71,1 @@\n-        theEnvironment = new HashMap<>(environ.length\/2 + 3);\n+        theEnvironment = HashMap.newHashMap(environ.length);\n","filename":"src\/java.base\/unix\/classes\/java\/lang\/ProcessEnvironment.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -774,1 +774,1 @@\n-        Map<DataFlavor, String> retval = new HashMap<>(flavors.length, 1.0f);\n+        Map<DataFlavor, String> retval = HashMap.newHashMap(flavors.length);\n@@ -815,1 +815,1 @@\n-        Map<String, DataFlavor> retval = new HashMap<>(natives.length, 1.0f);\n+        Map<String, DataFlavor> retval = HashMap.newHashMap(natives.length);\n@@ -1062,1 +1062,1 @@\n-                cache = new HashMap<>(1);\n+                cache = HashMap.newHashMap(1);\n","filename":"src\/java.datatransfer\/share\/classes\/java\/awt\/datatransfer\/SystemFlavorMap.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -98,1 +98,1 @@\n-        Map<String, Boolean> tempMap = new HashMap<>(17);\n+        Map<String, Boolean> tempMap = HashMap.newHashMap(15);\n@@ -325,1 +325,1 @@\n-            Map<String, Integer> charsetsMap = new HashMap<>(8, 1.0f);\n+            Map<String, Integer> charsetsMap = HashMap.newHashMap(8);\n@@ -439,1 +439,1 @@\n-                Map<String, Integer> exactTypesMap = new HashMap<>(4, 1.0f);\n+                Map<String, Integer> exactTypesMap = HashMap.newHashMap(4);\n@@ -451,1 +451,1 @@\n-                Map<String, Integer> primaryTypesMap = new HashMap<>(1, 1.0f);\n+                Map<String, Integer> primaryTypesMap = HashMap.newHashMap(1);\n@@ -459,1 +459,1 @@\n-                Map<Class<?>, Integer> nonTextRepresentationsMap = new HashMap<>(3, 1.0f);\n+                Map<Class<?>, Integer> nonTextRepresentationsMap = HashMap.newHashMap(3);\n@@ -470,1 +470,1 @@\n-                Map<String, Integer> textTypesMap = new HashMap<>(16, 1.0f);\n+                Map<String, Integer> textTypesMap = HashMap.newHashMap(16);\n@@ -502,1 +502,1 @@\n-                Map<Class<?>, Integer> decodedTextRepresentationsMap = new HashMap<>(4, 1.0f);\n+                Map<Class<?>, Integer> decodedTextRepresentationsMap = HashMap.newHashMap(4);\n@@ -514,1 +514,1 @@\n-                Map<Class<?>, Integer> encodedTextRepresentationsMap = new HashMap<>(3, 1.0f);\n+                Map<Class<?>, Integer> encodedTextRepresentationsMap = HashMap.newHashMap(3);\n","filename":"src\/java.datatransfer\/share\/classes\/sun\/datatransfer\/DataFlavorUtil.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -117,3 +117,1 @@\n-    private static final\n-        HashMap<MBeanServer,ArrayNotificationBuffer> mbsToBuffer =\n-        new HashMap<MBeanServer,ArrayNotificationBuffer>(1);\n+    private static final HashMap<MBeanServer,ArrayNotificationBuffer> mbsToBuffer = HashMap.newHashMap(1);\n","filename":"src\/java.management\/share\/classes\/com\/sun\/jmx\/remote\/internal\/ArrayNotificationBuffer.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -320,1 +320,1 @@\n-            options = new HashMap<String, String>(1);\n+            options = HashMap.newHashMap(2);\n","filename":"src\/java.management\/share\/classes\/com\/sun\/jmx\/remote\/security\/JMXPluggableAuthenticator.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -187,1 +187,1 @@\n-                    map = new HashMap<>(list.size());\n+                    map = HashMap.newHashMap(list.size());\n@@ -281,1 +281,1 @@\n-                    map = new HashMap<>(list.size());\n+                    map = HashMap.newHashMap(list.size());\n@@ -418,1 +418,1 @@\n-                    map = new HashMap<>(list.size());\n+                    map = HashMap.newHashMap(list.size());\n","filename":"src\/java.management\/share\/classes\/java\/lang\/management\/DefaultPlatformMBeanProvider.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -230,1 +230,1 @@\n-         new HashMap<String,Class<?>>(8) ;\n+         HashMap.newHashMap(8) ;\n","filename":"src\/java.management\/share\/classes\/javax\/management\/loading\/MLet.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -61,1 +61,1 @@\n-        Map<String, Long> result = new HashMap<>(numThreads);\n+        Map<String, Long> result = HashMap.newHashMap(numThreads);\n","filename":"src\/java.management\/share\/classes\/sun\/management\/HotspotThread.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -78,1 +78,1 @@\n-            HashMap<String, String> attrs = new HashMap<>(2);\n+            HashMap<String, String> attrs = HashMap.newHashMap(2);\n","filename":"src\/java.naming\/share\/classes\/sun\/security\/provider\/certpath\/ldap\/JdkLDAP.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -144,1 +144,1 @@\n-        elements = new HashMap<Oid, GSSNameSpi>(1);\n+        elements = HashMap.newHashMap(1);\n@@ -182,1 +182,1 @@\n-                new HashMap<Oid, GSSNameSpi>(gssManager.getMechs().length);\n+                HashMap.newHashMap(gssManager.getMechs().length);\n","filename":"src\/java.security.jgss\/share\/classes\/sun\/security\/jgss\/GSSNameImpl.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -148,1 +148,1 @@\n-    private static final Map<String, Container> fEleAttrsMapG = new HashMap<>(29);\n+    private static final Map<String, Container> fEleAttrsMapG = HashMap.newHashMap(14);\n@@ -150,1 +150,1 @@\n-    private static final Map<String, Container> fEleAttrsMapL = new HashMap<>(79);\n+    private static final Map<String, Container> fEleAttrsMapL = HashMap.newHashMap(39);\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xerces\/internal\/impl\/xs\/traversers\/XSAttributeChecker.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -77,1 +77,1 @@\n-    private Map<Name, List<UnaryOperatorHelper>> unaryOperators = new HashMap<>(Tag.getNumberOfOperators());\n+    private Map<Name, List<UnaryOperatorHelper>> unaryOperators = new HashMap<>((int) Math.ceil(Tag.getNumberOfOperators() \/ 0.75));\n@@ -80,1 +80,1 @@\n-    private Map<Name, List<BinaryOperatorHelper>> binaryOperators = new HashMap<>(Tag.getNumberOfOperators());\n+    private Map<Name, List<BinaryOperatorHelper>> binaryOperators = new HashMap<>((int) Math.ceil(Tag.getNumberOfOperators() \/ 0.75));\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Operators.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -887,1 +887,1 @@\n-        Map<String, TypeElement> unmatchedAnnotations = new HashMap<>(annotationsPresent.size());\n+        Map<String, TypeElement> unmatchedAnnotations = new HashMap<>((int) Math.ceil(annotationsPresent.size() \/ 0.75));\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/processing\/JavacProcessingEnvironment.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -201,1 +201,1 @@\n-        HashMap<String, String> ATTRS = new HashMap<>(3);\n+        HashMap<String, String> ATTRS = HashMap.newHashMap(3);\n@@ -333,1 +333,1 @@\n-        HashMap<String, String> ATTRS = new HashMap<>(1);\n+        HashMap<String, String> ATTRS = HashMap.newHashMap(1);\n@@ -366,1 +366,1 @@\n-        HashMap<String, String> ATTRS = new HashMap<>(1);\n+        HashMap<String, String> ATTRS = HashMap.newHashMap(1);\n","filename":"src\/jdk.crypto.ec\/share\/classes\/sun\/security\/ec\/SunEC.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -157,1 +157,1 @@\n-                HashMap<String, String> srattrs = new HashMap<>(1);\n+                HashMap<String, String> srattrs = HashMap.newHashMap(1);\n@@ -174,1 +174,1 @@\n-                HashMap<String, String> attrs = new HashMap<>(1);\n+                HashMap<String, String> attrs = HashMap.newHashMap(1);\n","filename":"src\/jdk.crypto.mscapi\/windows\/classes\/sun\/security\/mscapi\/SunMSCAPI.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -65,1 +65,1 @@\n-    private static final Map<Class<?>, Class<?>> WRAPPERS = new HashMap<>( 13 );\n+    private static final Map<Class<?>, Class<?>> WRAPPERS = HashMap.newHashMap(9);\n","filename":"src\/jdk.internal.opt\/share\/classes\/jdk\/internal\/joptsimple\/internal\/Classes.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -123,4 +123,4 @@\n-        vmFields     = new HashMap<>(vmFieldsInfo.length);\n-        vmConstants  = new HashMap<>(vmConstantsInfo.length);\n-        vmAddresses  = new HashMap<>(vmAddressesInfo.length);\n-        vmFlags      = new HashMap<>(vmFlagsInfo.length);\n+        vmFields     = HashMap.newHashMap(vmFieldsInfo.length);\n+        vmConstants  = HashMap.newHashMap(vmConstantsInfo.length);\n+        vmAddresses  = HashMap.newHashMap(vmAddressesInfo.length);\n+        vmFlags      = HashMap.newHashMap(vmFlagsInfo.length);\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk.vm.ci.hotspot\/src\/jdk\/vm\/ci\/hotspot\/HotSpotVMConfigStore.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -320,1 +320,1 @@\n-        Map<String, String> props = new HashMap<>(utf8Props + nonUtf8Props);\n+        Map<String, String> props = HashMap.newHashMap(utf8Props + nonUtf8Props);\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk.vm.ci.services\/src\/jdk\/vm\/ci\/services\/Services.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -602,1 +602,1 @@\n-            new HashMap<ObjectName,MBeanInfo>(mbeans.size());\n+            HashMap.newHashMap(mbeans.size());\n","filename":"src\/jdk.jconsole\/share\/classes\/sun\/tools\/jconsole\/ProxyClient.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -428,1 +428,1 @@\n-            new HashMap<String, Object>(attrsInfo.length);\n+            HashMap.newHashMap(attrsInfo.length);\n@@ -430,1 +430,1 @@\n-            new HashMap<String, Object>(attrsInfo.length);\n+            HashMap.newHashMap(attrsInfo.length);\n@@ -432,1 +432,1 @@\n-            new HashMap<String, Object>(attrsInfo.length);\n+            HashMap.newHashMap(attrsInfo.length);\n","filename":"src\/jdk.jconsole\/share\/classes\/sun\/tools\/jconsole\/inspector\/XMBeanAttributes.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -214,1 +214,1 @@\n-            map = new HashMap<Field, Value>(size);\n+            map = HashMap.newHashMap(size);\n","filename":"src\/jdk.jdi\/share\/classes\/com\/sun\/tools\/jdi\/ObjectReferenceImpl.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -673,1 +673,1 @@\n-        Map<Field, Value> map = new HashMap<Field, Value>(size);\n+        Map<Field, Value> map = HashMap.newHashMap(size);\n","filename":"src\/jdk.jdi\/share\/classes\/com\/sun\/tools\/jdi\/ReferenceTypeImpl.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -170,1 +170,1 @@\n-            Map<String, LocalVariable> map = new HashMap<>(allVariables.size());\n+            Map<String, LocalVariable> map = HashMap.newHashMap(allVariables.size());\n@@ -259,1 +259,1 @@\n-        Map<LocalVariable, Value> map = new HashMap<>(count);\n+        Map<LocalVariable, Value> map = HashMap.newHashMap(count);\n","filename":"src\/jdk.jdi\/share\/classes\/com\/sun\/tools\/jdi\/StackFrameImpl.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -81,1 +81,1 @@\n-            Map<String, ValueDescriptor> newCache = new LinkedHashMap<>(fields.size());\n+            Map<String, ValueDescriptor> newCache = LinkedHashMap.newLinkedHashMap(fields.size());\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/EventType.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -105,1 +105,1 @@\n-        Map<Long, EventType> previousSet = new HashMap<>(previous.size());\n+        Map<Long, EventType> previousSet = HashMap.newHashMap(previous.size());\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/consumer\/MetadataEvent.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -275,1 +275,1 @@\n-        Map<String, Type> typeMap = new HashMap<>(2 * types.size());\n+        Map<String, Type> typeMap = HashMap.newHashMap(2 * types.size());\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/MetadataLoader.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -83,1 +83,1 @@\n-        HashMap<String, Integer> lookup = new LinkedHashMap<>(stringPool.size());\n+        HashMap<String, Integer> lookup = LinkedHashMap.newLinkedHashMap(stringPool.size());\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/MetadataWriter.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -175,1 +175,1 @@\n-        Map<String, InternalSetting> map = new LinkedHashMap<>(activeSettings.size());\n+        Map<String, InternalSetting> map = LinkedHashMap.newLinkedHashMap(activeSettings.size());\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/SettingsManager.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -465,1 +465,1 @@\n-        HashMap<String, String> map = new HashMap<>(settings.size());\n+        HashMap<String, String> map = HashMap.newHashMap(settings.size());\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/Utils.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -76,1 +76,1 @@\n-            Map<String, String> map = new HashMap<>(values.size());\n+            Map<String, String> map = HashMap.newHashMap(values.size());\n","filename":"src\/jdk.management.jfr\/share\/classes\/jdk\/management\/jfr\/ConfigurationInfo.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -319,1 +319,1 @@\n-        Map<String, String> options = new HashMap<>(10);\n+        Map<String, String> options = HashMap.newHashMap(7);\n","filename":"src\/jdk.management.jfr\/share\/classes\/jdk\/management\/jfr\/FlightRecorderMXBeanImpl.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -86,2 +86,2 @@\n-        this.usageBeforeGc = new HashMap<String, MemoryUsage>(poolNames.length);\n-        this.usageAfterGc = new HashMap<String, MemoryUsage>(poolNames.length);\n+        this.usageBeforeGc = HashMap.newHashMap(poolNames.length);\n+        this.usageAfterGc = HashMap.newHashMap(poolNames.length);\n","filename":"src\/jdk.management\/share\/classes\/com\/sun\/management\/GcInfo.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -116,1 +116,1 @@\n-                    map = new HashMap<>(list.size());\n+                    map = HashMap.newHashMap(list.size());\n","filename":"src\/jdk.management\/share\/classes\/com\/sun\/management\/internal\/PlatformMBeanProviderImpl.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -88,1 +88,1 @@\n-        Map<InputNode, List<InputEdge>> result = new HashMap<>(getNodes().size());\n+        Map<InputNode, List<InputEdge>> result = HashMap.newHashMap(getNodes().size());\n@@ -110,1 +110,1 @@\n-        Map<InputNode, List<InputEdge>> result = new HashMap<>(getNodes().size());\n+        Map<InputNode, List<InputEdge>> result = HashMap.newHashMap(getNodes().size());\n","filename":"src\/utils\/IdealGraphVisualizer\/Data\/src\/main\/java\/com\/sun\/hotspot\/igv\/data\/InputGraph.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -58,1 +58,1 @@\n-        Map<Integer, InputNode> keyMapB = new HashMap<>(b.getNodes().size());\n+        Map<Integer, InputNode> keyMapB = HashMap.newHashMap(b.getNodes().size());\n@@ -111,1 +111,1 @@\n-        Map<InputBlock, InputBlock> blocksMap = new HashMap<>();\n+        Map<InputBlock, InputBlock> blocksMap = HashMap.newHashMap(a.getBlocks().size());\n@@ -154,1 +154,1 @@\n-        Map<InputNode, InputNode> inputNodeMap = new HashMap<>(pairs.size());\n+        Map<InputNode, InputNode> inputNodeMap = HashMap.newHashMap(pairs.size());\n","filename":"src\/utils\/IdealGraphVisualizer\/Difference\/src\/main\/java\/com\/sun\/hotspot\/igv\/difference\/Difference.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -49,3 +49,3 @@\n-        portLinks = new HashMap<>(links.size());\n-        inputPorts = new HashMap<>(links.size());\n-        outputPorts = new HashMap<>(links.size());\n+        portLinks = HashMap.newHashMap(links.size());\n+        inputPorts = HashMap.newHashMap(links.size());\n+        outputPorts = HashMap.newHashMap(links.size());\n","filename":"src\/utils\/IdealGraphVisualizer\/Layout\/src\/main\/java\/com\/sun\/hotspot\/igv\/layout\/LayoutGraph.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -255,1 +255,1 @@\n-            inputNodeToNode = new HashMap<>(graph.getNodes().size());\n+            inputNodeToNode = HashMap.newHashMap(graph.getNodes().size());\n@@ -519,1 +519,1 @@\n-        dominatorMap = new HashMap<>(graph.getBlocks().size());\n+        dominatorMap = HashMap.newHashMap(graph.getBlocks().size());\n@@ -617,1 +617,1 @@\n-        Map<Integer, List<InputEdge>> edgeMap = new HashMap<>(graph.getEdges().size());\n+        Map<Integer, List<InputEdge>> edgeMap = HashMap.newHashMap(graph.getEdges().size());\n","filename":"src\/utils\/IdealGraphVisualizer\/ServerCompiler\/src\/main\/java\/com\/sun\/hotspot\/igv\/servercompiler\/ServerCompilerScheduler.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -694,1 +694,1 @@\n-            new HashMap<Figure, Integer>(figures.size());\n+            HashMap.newHashMap(figures.size());\n@@ -856,1 +856,1 @@\n-        Map<Point, List<Connection>> pointMap = new HashMap<>(connections.size());\n+        Map<Point, List<Connection>> pointMap = HashMap.newHashMap(connections.size());\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/DiagramScene.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -139,1 +139,1 @@\n-        Map<String, String> envToAdd = new HashMap<>(1);\n+        Map<String, String> envToAdd = HashMap.newHashMap(1);\n","filename":"test\/jdk\/java\/lang\/System\/MacEncoding\/TestFileEncoding.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -55,1 +55,1 @@\n-    private static final Map<Wrapper, Object> RANDOM_VALUES = new HashMap<>(9);\n+    private static final Map<Wrapper, Object> RANDOM_VALUES = HashMap.newHashMap(9);\n","filename":"test\/jdk\/java\/lang\/invoke\/ExplicitCastArgumentsTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -289,1 +289,1 @@\n-        Map<String, Object> clientEnv = new HashMap<>(1);\n+        Map<String, Object> clientEnv = HashMap.newHashMap(1);\n","filename":"test\/jdk\/javax\/management\/remote\/mandatory\/connection\/DefaultAgentFilterTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -55,1 +55,1 @@\n-        Map<String, Object> env = new HashMap<>(1);\n+        Map<String, Object> env = HashMap.newHashMap(1);\n@@ -106,1 +106,1 @@\n-        Map<String, Object> env = new HashMap<>(1);\n+        Map<String, Object> env = HashMap.newHashMap(1);\n","filename":"test\/jdk\/javax\/management\/remote\/mandatory\/connection\/NewRMIClientFilterTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -505,1 +505,1 @@\n-            Map<String, Object> env = new HashMap<>(1);\n+            Map<String, Object> env = HashMap.newHashMap(1);\n","filename":"test\/jdk\/javax\/management\/security\/HashedPasswordFileTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-        HashMap<String, String> mnemonics = new HashMap<>(8);\n+        HashMap<String, String> mnemonics = HashMap.newHashMap(8);\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/util\/stream\/tasks\/PhoneCode\/PhoneCodeProblem.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}