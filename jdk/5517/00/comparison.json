{"files":[{"patch":"@@ -32,0 +32,2 @@\n+import sun.font.FontManager;\n+import sun.font.CFontManager;\n@@ -51,0 +53,3 @@\n+    public static FontManager createFontManager() {\n+        return new CFontManager();\n+    }\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/awt\/PlatformGraphicsInfo.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -36,0 +36,1 @@\n+import sun.awt.PlatformGraphicsInfo;\n@@ -43,3 +44,0 @@\n- * You can alter the behaviour of the {@link #getInstance()} method by setting\n- * the {@code sun.font.fontmanager} property. For example:\n- * {@code sun.font.fontmanager=sun.awt.X11FontManager}\n@@ -52,11 +50,0 @@\n-    private static final String DEFAULT_CLASS;\n-    static {\n-        if (FontUtilities.isWindows) {\n-            DEFAULT_CLASS = \"sun.awt.Win32FontManager\";\n-        } else if (FontUtilities.isMacOSX) {\n-            DEFAULT_CLASS = \"sun.font.CFontManager\";\n-            } else {\n-            DEFAULT_CLASS = \"sun.awt.X11FontManager\";\n-            }\n-    }\n-\n@@ -71,2 +58,2 @@\n-        if (instance != null) {\n-            return instance;\n+        if (instance == null) {\n+            instance = PlatformGraphicsInfo.createFontManager();\n@@ -74,20 +61,0 @@\n-\n-        AccessController.doPrivileged(new PrivilegedAction<Object>() {\n-\n-            public Object run() {\n-                try {\n-                    String fmClassName =\n-                            System.getProperty(\"sun.font.fontmanager\",\n-                                               DEFAULT_CLASS);\n-                    ClassLoader cl = ClassLoader.getSystemClassLoader();\n-                    Class<?> fmClass = Class.forName(fmClassName, true, cl);\n-                    instance =\n-                       (FontManager) fmClass.getDeclaredConstructor().newInstance();\n-                } catch (ReflectiveOperationException ex) {\n-                    throw new InternalError(ex);\n-\n-                }\n-                return null;\n-            }\n-        });\n-\n","filename":"src\/java.desktop\/share\/classes\/sun\/font\/FontManagerFactory.java","additions":3,"deletions":36,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -32,0 +32,2 @@\n+import sun.font.FontManager;\n+import sun.awt.X11FontManager;\n@@ -43,0 +45,4 @@\n+    public static FontManager createFontManager() {\n+        return new X11FontManager();\n+    }\n+\n","filename":"src\/java.desktop\/unix\/classes\/sun\/awt\/PlatformGraphicsInfo.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -112,2 +112,0 @@\n-    jstring fmanager = NULL;\n-    jstring fmProp = NULL;\n@@ -129,3 +127,2 @@\n-     * The code below is responsible for:\n-     * 1. Loading appropriate awt library, i.e. libawt_xawt or libawt_headless\n-     * 2. Set the \"sun.font.fontmanager\" system property.\n+     * The code below is responsible for\n+     * loading appropriate awt library, i.e. libawt_xawt or libawt_headless\n@@ -134,3 +131,0 @@\n-    fmProp = (*env)->NewStringUTF(env, \"sun.font.fontmanager\");\n-    CHECK_EXCEPTION_FATAL(env, \"Could not allocate font manager property\");\n-\n@@ -138,1 +132,0 @@\n-        fmanager = (*env)->NewStringUTF(env, \"sun.font.CFontManager\");\n@@ -141,1 +134,0 @@\n-        fmanager = (*env)->NewStringUTF(env, \"sun.awt.X11FontManager\");\n@@ -144,8 +136,0 @@\n-    CHECK_EXCEPTION_FATAL(env, \"Could not allocate font manager name\");\n-\n-    if (fmanager && fmProp) {\n-        JNU_CallStaticMethodByName(env, NULL, \"java\/lang\/System\", \"setProperty\",\n-                                   \"(Ljava\/lang\/String;Ljava\/lang\/String;)Ljava\/lang\/String;\",\n-                                   fmProp, fmanager);\n-        CHECK_EXCEPTION_FATAL(env, \"Could not allocate set properties\");\n-    }\n@@ -164,8 +148,0 @@\n-    if (fmProp) {\n-        (*env)->DeleteLocalRef(env, fmProp);\n-    }\n-    if (fmanager) {\n-        (*env)->DeleteLocalRef(env, fmanager);\n-    }\n-\n-\n","filename":"src\/java.desktop\/unix\/native\/libawt\/awt\/awt_LoadLibrary.c","additions":2,"deletions":26,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -30,0 +30,2 @@\n+import sun.font.FontManager;\n+import sun.awt.Win32FontManager;\n@@ -41,0 +43,4 @@\n+    public static FontManager createFontManager() {\n+        return new Win32FontManager();\n+    }\n+\n","filename":"src\/java.desktop\/windows\/classes\/sun\/awt\/PlatformGraphicsInfo.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -0,0 +1,38 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test\n+ * @bug 8273581\n+ * @summary verify the \"sun.font.fontmanage\" system property is not set\n+ *\/\n+\n+public class CheckFontManagerSystemProperty {\n+\n+    public static void main(String[] args) {\n+        String tkProp = System.getProperty(\"sun.font.fontmanage\");\n+        if (tkProp != null) {\n+            throw new RuntimeException(\"tkProp = \" + tkProp);\n+        }\n+    }\n+}\n","filename":"test\/jdk\/sun\/awt\/font\/CheckFontManagerSystemProperty.java","additions":38,"deletions":0,"binary":false,"changes":38,"status":"added"}]}