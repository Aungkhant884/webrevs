{"files":[{"patch":"@@ -0,0 +1,134 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Robot;\n+import java.awt.event.KeyEvent;\n+import java.util.Arrays;\n+import java.util.List;\n+import javax.swing.JButton;\n+import javax.swing.JFrame;\n+import javax.swing.JPanel;\n+import javax.swing.SwingUtilities;\n+import javax.swing.UIManager;\n+import javax.swing.UnsupportedLookAndFeelException;\n+\n+\n+import static java.util.stream.Collectors.toList;\n+\n+\/*\n+ * @test\n+ * @key headful\n+ * @summary Check whether pressing <Space> key generates\n+ * ActionEvent on focused Button or not.\n+ * @run main SpaceKeyActivatesButton\n+ *\/\n+public class SpaceKeyActivatesButton {\n+    private static volatile boolean buttonPressed;\n+    private static JFrame frame;\n+    private static JButton focusedButton;\n+\n+    public static void main(String[] s) throws Exception {\n+        runTest();\n+    }\n+\n+    public static void runTest() throws Exception {\n+        Robot robot = new Robot();\n+        robot.setAutoDelay(100);\n+        robot.setAutoWaitForIdle(true);\n+        List<String> lafs = Arrays.stream(UIManager.getInstalledLookAndFeels())\n+                                  .map(laf -> laf.getClassName())\n+                                  .collect(toList());\n+        for (String laf : lafs) {\n+            try {\n+                buttonPressed = false;\n+                System.out.println(\"Testing L&F: \" + laf);\n+                SwingUtilities.invokeAndWait(() -> frame = new JFrame());\n+                robot.waitForIdle();\n+                SwingUtilities.invokeAndWait(() -> {\n+                    setLookAndFeel(laf);\n+                    createUI();\n+                });\n+                int waitCount = 0;\n+\n+                while (!isFocusOwner()) {\n+                    robot.delay(100);\n+                    waitCount++;\n+                    if (waitCount > 20) {\n+                        throw new RuntimeException(\"Test Failed, waited for long, \" +\n+                                \"but the button can't gain focus for L&F: \" + laf);\n+                    }\n+                }\n+\n+                robot.keyPress(KeyEvent.VK_SPACE);\n+                robot.keyRelease(KeyEvent.VK_SPACE);\n+\n+                if (buttonPressed) {\n+                    System.out.println(\"Test Passed for L&F: \" + laf);\n+                } else {\n+                    throw new RuntimeException(\"Test Failed, button not pressed for L&F: \" + laf);\n+                }\n+\n+            } finally {\n+                SwingUtilities.invokeAndWait(SpaceKeyActivatesButton::disposeFrame);\n+            }\n+        }\n+\n+    }\n+\n+    private static boolean isFocusOwner() {\n+        return focusedButton.isFocusOwner();\n+    }\n+\n+    private static void setLookAndFeel(String lafName) {\n+        try {\n+            UIManager.setLookAndFeel(lafName);\n+        } catch (UnsupportedLookAndFeelException ignored) {\n+            System.out.println(\"Ignoring Unsupported L&F: \" + lafName);\n+        } catch (ClassNotFoundException | InstantiationException\n+                | IllegalAccessException e) {\n+            throw new RuntimeException(e);\n+        }\n+    }\n+\n+    private static void createUI() {\n+        JPanel panel = new JPanel();\n+        panel.add(new JButton(\"Button1\"));\n+        focusedButton = new JButton(\"Button2\");\n+        focusedButton.addActionListener(e -> buttonPressed = true);\n+        panel.add(focusedButton);\n+\n+        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n+        frame.add(panel);\n+        frame.pack();\n+        frame.setLocationRelativeTo(null);\n+        frame.setVisible(true);\n+        focusedButton.requestFocusInWindow();\n+    }\n+\n+    private static void disposeFrame() {\n+        if (frame != null) {\n+            frame.dispose();\n+            frame = null;\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JButton\/SpaceKeyActivatesButton.java","additions":134,"deletions":0,"binary":false,"changes":134,"status":"added"}]}