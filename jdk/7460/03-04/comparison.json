{"files":[{"patch":"@@ -25,0 +25,2 @@\n+import java.awt.event.FocusAdapter;\n+import java.awt.event.FocusEvent;\n@@ -28,0 +30,2 @@\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.TimeUnit;\n@@ -36,0 +40,1 @@\n+\n@@ -51,0 +56,1 @@\n+    private static CountDownLatch buttonGainedFocusLatch;\n@@ -60,0 +66,1 @@\n+\n@@ -64,0 +71,1 @@\n+            buttonGainedFocusLatch = new CountDownLatch(1);\n@@ -81,8 +89,4 @@\n-                int waitCount = 0;\n-                while (!isFocusOwner()) {\n-                    robot.delay(100);\n-                    waitCount++;\n-                    if (waitCount > 20) {\n-                        throw new RuntimeException(\"Test Failed, waited for long, \" +\n-                                \"but the button can't gain focus for L&F: \" + laf);\n-                    }\n+                \/\/ Wait until the button2 gains focus.\n+                if (!buttonGainedFocusLatch.await(3, TimeUnit.SECONDS)) {\n+                    throw new RuntimeException(\"Test Failed, waited for long, \" +\n+                            \"but the button can't gain focus for L&F: \" + laf);\n@@ -107,6 +111,0 @@\n-    private static boolean isFocusOwner() throws Exception {\n-        AtomicBoolean isFocusOwner = new AtomicBoolean(false);\n-        SwingUtilities.invokeAndWait(() -> isFocusOwner.set(focusedButton.isFocusOwner()));\n-        return isFocusOwner.get();\n-    }\n-\n@@ -132,0 +130,6 @@\n+        focusedButton.addFocusListener(new FocusAdapter() {\n+            @Override\n+            public void focusGained(FocusEvent e) {\n+                buttonGainedFocusLatch.countDown();\n+            }\n+        });\n@@ -134,1 +138,1 @@\n-        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n+        frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);\n","filename":"test\/jdk\/javax\/swing\/JButton\/SpaceKeyActivatesButton.java","additions":19,"deletions":15,"binary":false,"changes":34,"status":"modified"}]}