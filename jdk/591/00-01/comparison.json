{"files":[{"patch":"@@ -116,1 +116,2 @@\n-  _stats->bucket_bytes    = _compact_buckets->size() * BytesPerWord;\n+  _stats->bucket_bytes    = align_up(_compact_buckets->size() * BytesPerWord,\n+                                     SharedSpaceObjectAlignment);\n@@ -118,1 +119,2 @@\n-  _stats->hashentry_bytes = _compact_entries->size() * BytesPerWord;\n+  _stats->hashentry_bytes = align_up(_compact_entries->size() * BytesPerWord,\n+                                     SharedSpaceObjectAlignment);\n","filename":"src\/hotspot\/share\/classfile\/compactHashtable.cpp","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -48,0 +48,1 @@\n+#include \"memory\/metaspaceShared.hpp\"\n@@ -1862,1 +1863,1 @@\n-      _shared_class_info_size += align_up(byte_size, BytesPerWord);\n+      _shared_class_info_size += align_up(byte_size, SharedSpaceObjectAlignment);\n@@ -1879,0 +1880,1 @@\n+    size_t bytesize = align_up(sizeof(RunTimeLambdaProxyClassInfo), SharedSpaceObjectAlignment);\n@@ -1880,1 +1882,1 @@\n-      (sizeof(RunTimeLambdaProxyClassInfo) * _dumptime_lambda_proxy_class_dictionary->_count) +\n+      (bytesize * _dumptime_lambda_proxy_class_dictionary->_count) +\n","filename":"src\/hotspot\/share\/classfile\/systemDictionaryShared.cpp","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -157,1 +157,1 @@\n-  _estimated_metsapceobj_bytes = 0;\n+  _estimated_metaspaceobj_bytes = 0;\n@@ -208,1 +208,2 @@\n-    _estimated_metsapceobj_bytes += BytesPerWord; \/\/ See RunTimeSharedClassInfo::get_for()\n+    \/\/ See RunTimeSharedClassInfo::get_for()\n+    _estimated_metaspaceobj_bytes += align_up(BytesPerWord, SharedSpaceObjectAlignment);\n@@ -217,1 +218,1 @@\n-  _estimated_metsapceobj_bytes += bytes;\n+  _estimated_metaspaceobj_bytes += align_up(bytes, SharedSpaceObjectAlignment);\n@@ -241,2 +242,2 @@\n-    \/\/ we iterate the MetsapceObjs in a deterministic order. It doesn't matter where\n-    \/\/ the MetsapceObjs are located originally, as they are copied sequentially into\n+    \/\/ we iterate the MetaspaceObjs in a deterministic order. It doesn't matter where\n+    \/\/ the MetaspaceObjs are located originally, as they are copied sequentially into\n","filename":"src\/hotspot\/share\/memory\/archiveBuilder.cpp","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -201,1 +201,1 @@\n-  size_t _estimated_metsapceobj_bytes;   \/\/ all archived MetsapceObj's.\n+  size_t _estimated_metaspaceobj_bytes;   \/\/ all archived MetaspaceObj's.\n","filename":"src\/hotspot\/share\/memory\/archiveBuilder.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -40,4 +40,0 @@\n-\/\/ Metaspace::allocate() requires that all blocks must be aligned with KlassAlignmentInBytes.\n-\/\/ We enforce the same alignment rule in blocks allocated from the shared space.\n-const int SharedSpaceObjectAlignment = KlassAlignmentInBytes;\n-\n","filename":"src\/hotspot\/share\/memory\/archiveUtils.cpp","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -204,1 +204,1 @@\n-    verify_estimate_size(_estimated_metsapceobj_bytes, \"MetaspaceObjs\");\n+    verify_estimate_size(_estimated_metaspaceobj_bytes, \"MetaspaceObjs\");\n@@ -253,3 +253,3 @@\n-  _estimated_hashtable_bytes = 0;\n-  _estimated_hashtable_bytes += SymbolTable::estimate_size_for_archive();\n-  _estimated_hashtable_bytes += SystemDictionaryShared::estimate_size_for_archive();\n+  size_t symbol_table_est = SymbolTable::estimate_size_for_archive();\n+  size_t dictionary_est = SystemDictionaryShared::estimate_size_for_archive();\n+  _estimated_hashtable_bytes = symbol_table_est + dictionary_est;\n@@ -261,1 +261,1 @@\n-  total += _estimated_metsapceobj_bytes;\n+  total += _estimated_metaspaceobj_bytes;\n@@ -268,0 +268,6 @@\n+  log_info(cds, dynamic)(\"_estimated_hashtable_bytes = \" SIZE_FORMAT \" + \" SIZE_FORMAT \" = \" SIZE_FORMAT,\n+                         symbol_table_est, dictionary_est, _estimated_hashtable_bytes);\n+  log_info(cds, dynamic)(\"_estimated_metaspaceobj_bytes = \" SIZE_FORMAT, _estimated_metaspaceobj_bytes);\n+  log_info(cds, dynamic)(\"_estimated_trampoline_bytes = \" SIZE_FORMAT, _estimated_trampoline_bytes);\n+  log_info(cds, dynamic)(\"total estimate bytes = \" SIZE_FORMAT, total);\n+\n@@ -351,1 +357,1 @@\n-  return total;\n+  return align_up(total, SharedSpaceObjectAlignment);\n","filename":"src\/hotspot\/share\/memory\/dynamicArchive.cpp","additions":12,"deletions":6,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -38,0 +38,4 @@\n+\/\/ Metaspace::allocate() requires that all blocks must be aligned with KlassAlignmentInBytes.\n+\/\/ We enforce the same alignment rule in blocks allocated from the shared space.\n+const int SharedSpaceObjectAlignment = KlassAlignmentInBytes;\n+\n@@ -233,1 +237,1 @@\n-    return align_up(byte_size, BytesPerWord);\n+    return align_up(byte_size, SharedSpaceObjectAlignment);\n","filename":"src\/hotspot\/share\/memory\/metaspaceShared.hpp","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"}]}