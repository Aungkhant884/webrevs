{"files":[{"patch":"@@ -279,34 +279,0 @@\n-static const char* read_string_field(oop argument, const char* field_name, TRAPS) {\n-  JavaValue result(T_OBJECT);\n-  JfrJavaArguments args(&result);\n-  args.set_klass(argument->klass());\n-  args.set_name(field_name);\n-  args.set_signature(\"Ljava\/lang\/String;\");\n-  args.set_receiver(argument);\n-  JfrJavaSupport::get_field(&args, THREAD);\n-  const oop string_oop = result.get_oop();\n-  return string_oop != NULL ? JfrJavaSupport::c_str(string_oop, (JavaThread*)THREAD, true) : NULL;\n-}\n-\n-static bool read_boolean_field(oop argument, const char* field_name, TRAPS) {\n-  JavaValue result(T_BOOLEAN);\n-  JfrJavaArguments args(&result);\n-  args.set_klass(argument->klass());\n-  args.set_name(field_name);\n-  args.set_signature(\"Z\");\n-  args.set_receiver(argument);\n-  JfrJavaSupport::get_field(&args, THREAD);\n-  return (result.get_jint() & 1) == 1;\n-}\n-\n-static DCmdArgumentInfo* create_info(oop argument, TRAPS) {\n-  return new DCmdArgumentInfo(\n-    read_string_field(argument, \"name\", THREAD),\n-    read_string_field(argument, \"description\", THREAD),\n-    read_string_field(argument, \"type\", THREAD),\n-    read_string_field(argument, \"defaultValue\", THREAD),\n-    read_boolean_field(argument, \"mandatory\", THREAD),\n-    true, \/\/ a DcmdFramework \"option\"\n-    read_boolean_field(argument, \"allowMultiple\", THREAD));\n-}\n-\n","filename":"src\/hotspot\/share\/jfr\/dcmd\/jfrDcmds.cpp","additions":0,"deletions":34,"binary":false,"changes":34,"status":"modified"}]}