{"files":[{"patch":"@@ -184,1 +184,1 @@\n-    lightweight_unlock(Roop, Rmark, slow_int);\n+    lightweight_unlock(Roop, Rmark, noreg, slow_int);\n","filename":"src\/hotspot\/cpu\/ppc\/c1_MacroAssembler_ppc.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1139,1 +1139,1 @@\n-      lightweight_unlock(object, header, slow_case);\n+      lightweight_unlock(object, header, tmp, slow_case);\n","filename":"src\/hotspot\/cpu\/ppc\/interp_masm_ppc_64.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2337,1 +2337,1 @@\n-    lightweight_unlock(oop, current_header, failure);\n+    lightweight_unlock(oop, current_header, \/* temp *\/ displaced_header, failure);\n@@ -4035,1 +4035,1 @@\n-void MacroAssembler::lightweight_unlock(Register obj, Register hdr, Label& slow) {\n+void MacroAssembler::lightweight_unlock(Register obj, Register hdr, Register t1, Label& slow) {\n@@ -4048,1 +4048,6 @@\n-  Register t1 = hdr; \/\/ Reuse in debug build.\n+#endif\n+\n+  Register temp = (t1 != noreg) ? t1 : hdr; \/\/ Reuse if no temp reg given.\n+  lwz(temp, in_bytes(JavaThread::lock_stack_top_offset()), R16_thread);\n+\n+#ifdef ASSERT\n@@ -4056,2 +4061,1 @@\n-    lwz(t1, in_bytes(JavaThread::lock_stack_top_offset()), R16_thread);\n-    cmplwi(CCR0, t1, LockStack::start_offset());\n+    cmplwi(CCR0, temp, LockStack::start_offset());\n@@ -4062,10 +4066,0 @@\n-  {\n-    \/\/ Check if the top of the lock-stack matches the unlocked object.\n-    Label tos_ok;\n-    addi(t1, t1, -oopSize);\n-    ldx(t1, t1, R16_thread);\n-    cmpd(CCR0, t1, obj);\n-    beq(CCR0, tos_ok);\n-    stop(\"Top of lock-stack does not match the unlocked object\");\n-    bind(tos_ok);\n-  }\n@@ -4074,0 +4068,6 @@\n+  \/\/ Check if the top of the lock-stack matches the unlocked object.\n+  addi(temp, temp, -oopSize);\n+  ldx(R0, temp, R16_thread);\n+  cmpd(CCR0, R0, obj);\n+  bne(CCR0, slow);\n+\n@@ -4078,3 +4078,5 @@\n-  Register t2 = hdr;\n-  lwz(t2, in_bytes(JavaThread::lock_stack_top_offset()), R16_thread);\n-  addi(t2, t2, -oopSize);\n+  if (temp == hdr) {\n+    \/\/ Need to reload if we killed it due to lack of registers.\n+    lwz(temp, in_bytes(JavaThread::lock_stack_top_offset()), R16_thread);\n+    addi(temp, temp, -oopSize);\n+  }\n@@ -4083,1 +4085,1 @@\n-  stdx(R0, t2, R16_thread);\n+  stdx(R0, temp, R16_thread);\n@@ -4085,1 +4087,1 @@\n-  stw(t2, in_bytes(JavaThread::lock_stack_top_offset()), R16_thread);\n+  stw(temp, in_bytes(JavaThread::lock_stack_top_offset()), R16_thread);\n","filename":"src\/hotspot\/cpu\/ppc\/macroAssembler_ppc.cpp","additions":22,"deletions":20,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -610,1 +610,1 @@\n-  void lightweight_unlock(Register obj, Register hdr, Label& slow);\n+  void lightweight_unlock(Register obj, Register hdr, Register t1, Label& slow);\n","filename":"src\/hotspot\/cpu\/ppc\/macroAssembler_ppc.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}