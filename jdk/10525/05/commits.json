[{"commit":{"message":"Alternative C + Arrays.copyOfRange()"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/io\/BufferedInputStream.java"}],"sha":"92ed32cd28dab1ef5a03c6a8b1e13fef04a52753"},{"commit":{"message":"No immediate buffer resize; in the rare case of read-past-EOF automatic buffer grow will happen anyways"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/io\/BufferedInputStream.java"}],"sha":"9c2f502c06083694deefe6a9d4c8ee4b77a92c68"},{"commit":{"message":"Prevent leaking and poisoning"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/io\/BufferedInputStream.java"}],"sha":"7350a5331f0bcd9c51f07d96261f0b1f26bd61d2"},{"commit":{"message":"Alternative B: Cleanup old buffer to allow GC, then set new same-size buffer to handle buffer poisoning"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/io\/BufferedInputStream.java"}],"sha":"edd9da5079bf0da8362ef708e80aa769112c07f7"},{"commit":{"message":"Checking explicitly -1 instead of < 0"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/io\/BufferedInputStream.java"}],"sha":"4ac5506bf2e9db984ec9d173632fed36dd99de2b"},{"commit":{"message":"draining buffer instead of falling back to super.transferTo"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/io\/BufferedInputStream.java"}],"sha":"53bfd3ea6885c889f7de7c314a52abb28b49b072"}]