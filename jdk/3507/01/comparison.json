{"files":[{"patch":"@@ -2404,0 +2404,5 @@\n+    case Op_VectorReinterpret:\n+      if (bit_size != 64 && bit_size != 128) {\n+        return false;\n+      }\n+      break;\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64.ad","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -1453,1 +1453,1 @@\n-      int num_elem_for_cast = MIN2(num_elem_from, Matcher::max_vector_size(elem_bt_to));\n+      int num_elem_for_cast = num_elem_from;\n@@ -1472,1 +1472,1 @@\n-      int num_elem_for_resize = MAX2(num_elem_to, Matcher::min_vector_size(elem_bt_from));\n+      int num_elem_for_resize = num_elem_to;\n","filename":"src\/hotspot\/share\/opto\/vectorIntrinsics.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -0,0 +1,75 @@\n+\/*\n+ * Copyright (c) 2021, Huawei Technologies Co. Ltd. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package compiler.vectorapi;\n+\n+import jdk.incubator.vector.IntVector;\n+import jdk.incubator.vector.ShortVector;\n+import jdk.incubator.vector.VectorSpecies;\n+\n+\n+\/*\n+ * @test\n+ * @bug 8265244\n+ * @modules jdk.incubator.vector\n+ * @run main\/othervm compiler.vectorapi.TestCast4STo2I\n+ *\/\n+\n+public class TestCast4STo2I {\n+    static final VectorSpecies<Short> SPECIESs = ShortVector.SPECIES_64;\n+    static final VectorSpecies<Integer> SPECIESi = IntVector.SPECIES_64;\n+\n+    static final int INVOC_COUNT = 50000;\n+    static final int SIZE = 64;\n+\n+    static short[] as = {46, 110, 117, 115, 32, 121, 109, 32, 101, 114,\n+                         97, 32, 111, 104, 119, 32, 117, 111, 121, 32,\n+                         115, 105, 32, 116, 105, 32, 100, 110, 65, 32,\n+                         46, 110, 117, 115, 32, 101, 104, 116, 32, 121,\n+                         98, 32, 121, 108, 110, 111, 32, 115, 101, 110,\n+                         105, 104, 115, 32, 114, 101, 116, 97, 119, 32,\n+                         101, 104, 84};\n+    static int[] ai =  {46, 103, 110, 97, 117, 72, 32, 71, 78, 65, 87,\n+                        32, 45, 45, 33, 117, 111, 121, 32, 103, 110,\n+                        105, 115, 115, 105, 77, 46, 117, 111, 121, 32,\n+                        111, 116, 32, 114, 101, 116, 116, 101, 108, 32,\n+                        100, 110, 111, 99, 101, 115, 32, 121, 109, 32,\n+                        115, 105, 32, 115, 105, 104, 116, 44, 121, 116,\n+                        101, 101, 119, 83};\n+\n+    static void testVectorCastS2I(short[] input, int[] output) {\n+        ShortVector sv = ShortVector.fromArray(SPECIESs, input, 0);\n+        IntVector iv = (IntVector) sv.castShape(SPECIESi, 0);\n+        iv.intoArray(output, 0);\n+    }\n+\n+    public static void main(String[] args) {\n+        for (int i = 0; i < INVOC_COUNT; i++) {\n+            testVectorCastS2I(as, ai);\n+        }\n+        for (int i = 0; i < SIZE; i++) {\n+            System.out.print(ai[i] + \", \");\n+        }\n+        System.out.println();\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorapi\/TestCast4STo2I.java","additions":75,"deletions":0,"binary":false,"changes":75,"status":"added"}]}