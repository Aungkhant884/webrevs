{"files":[{"patch":"@@ -455,2 +455,2 @@\n-     * a primitive, a String, a ClassDesc, an enum constant, or an array of\n-     * one of these.\n+     * a primitive, a wrapper of primitive, a String, a ClassDesc, an enum\n+     * constant, or an array of one of these.\n@@ -459,0 +459,3 @@\n+     * @throws IllegalArgumentException when the {@code value} parameter is not\n+     *         a primitive, a wrapper of primitive, a String, a ClassDesc,\n+     *         an enum constant, or an array of one of these.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/classfile\/AnnotationValue.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -98,1 +98,1 @@\n-                UnknownAttribute, BoundAttribute, UnboundAttribute {\n+                UnknownAttribute, BoundAttribute, UnboundAttribute, CustomAttribute {\n","filename":"src\/java.base\/share\/classes\/java\/lang\/classfile\/Attribute.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n- * Supports writing portions of a classfile to a growable buffer.   Method\n+ * Supports writing portions of a classfile to a growable buffer.   Methods\n","filename":"src\/java.base\/share\/classes\/java\/lang\/classfile\/BufWriter.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -54,2 +54,2 @@\n- * A {@link ClassFileElement} that can appear when traversing the elements\n- * of a {@link ClassModel} or be presented to a {@link ClassBuilder}.\n+ * A marker interface for elements that can appear when traversing\n+ * a {@link ClassModel} or be presented to a {@link ClassBuilder}.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/classfile\/ClassElement.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -482,1 +482,1 @@\n-    \/** 0 *\/\n+    \/** The integer value used to encode the NOP instruction. *\/\n@@ -485,1 +485,1 @@\n-    \/** 1 *\/\n+    \/** The integer value used to encode the ACONST_NULL instruction. *\/\n@@ -488,1 +488,1 @@\n-    \/** 2 *\/\n+    \/** The integer value used to encode the ICONST_M1 instruction. *\/\n@@ -491,1 +491,1 @@\n-    \/** 3 *\/\n+    \/** The integer value used to encode the ICONST_0 instruction. *\/\n@@ -494,1 +494,1 @@\n-    \/** 4 *\/\n+    \/** The integer value used to encode the ICONST_1 instruction. *\/\n@@ -497,1 +497,1 @@\n-    \/** 5 *\/\n+    \/** The integer value used to encode the ICONST_2 instruction. *\/\n@@ -500,1 +500,1 @@\n-    \/** 6 *\/\n+    \/** The integer value used to encode the ICONST_3 instruction. *\/\n@@ -503,1 +503,1 @@\n-    \/** 7 *\/\n+    \/** The integer value used to encode the ICONST_4 instruction. *\/\n@@ -506,1 +506,1 @@\n-    \/** 8 *\/\n+    \/** The integer value used to encode the ICONST_5 instruction. *\/\n@@ -509,1 +509,1 @@\n-    \/** 9 *\/\n+    \/** The integer value used to encode the LCONST_0 instruction. *\/\n@@ -512,1 +512,1 @@\n-    \/** 10 *\/\n+    \/** The integer value used to encode the LCONST_1 instruction. *\/\n@@ -515,1 +515,1 @@\n-    \/** 11 *\/\n+    \/** The integer value used to encode the FCONST_0 instruction. *\/\n@@ -518,1 +518,1 @@\n-    \/** 12 *\/\n+    \/** The integer value used to encode the FCONST_1 instruction. *\/\n@@ -521,1 +521,1 @@\n-    \/** 13 *\/\n+    \/** The integer value used to encode the FCONST_2 instruction. *\/\n@@ -524,1 +524,1 @@\n-    \/** 14 *\/\n+    \/** The integer value used to encode the DCONST_0 instruction. *\/\n@@ -527,1 +527,1 @@\n-    \/** 15 *\/\n+    \/** The integer value used to encode the DCONST_1 instruction. *\/\n@@ -530,1 +530,1 @@\n-    \/** 16 *\/\n+    \/** The integer value used to encode the BIPUSH instruction. *\/\n@@ -533,1 +533,1 @@\n-    \/** 17 *\/\n+    \/** The integer value used to encode the SIPUSH instruction. *\/\n@@ -536,1 +536,1 @@\n-    \/** 18 *\/\n+    \/** The integer value used to encode the LDC instruction. *\/\n@@ -539,1 +539,1 @@\n-    \/** 19 *\/\n+    \/** The integer value used to encode the LDC_W instruction. *\/\n@@ -542,1 +542,1 @@\n-    \/** 20 *\/\n+    \/** The integer value used to encode the LDC2_W instruction. *\/\n@@ -545,1 +545,1 @@\n-    \/** 21 *\/\n+    \/** The integer value used to encode the ILOAD instruction. *\/\n@@ -548,1 +548,1 @@\n-    \/** 22 *\/\n+    \/** The integer value used to encode the LLOAD instruction. *\/\n@@ -551,1 +551,1 @@\n-    \/** 23 *\/\n+    \/** The integer value used to encode the FLOAD instruction. *\/\n@@ -554,1 +554,1 @@\n-    \/** 24 *\/\n+    \/** The integer value used to encode the DLOAD instruction. *\/\n@@ -557,1 +557,1 @@\n-    \/** 25 *\/\n+    \/** The integer value used to encode the ALOAD instruction. *\/\n@@ -560,1 +560,1 @@\n-    \/** 26 *\/\n+    \/** The integer value used to encode the ILOAD_0 instruction. *\/\n@@ -563,1 +563,1 @@\n-    \/** 27 *\/\n+    \/** The integer value used to encode the ILOAD_1 instruction. *\/\n@@ -566,1 +566,1 @@\n-    \/** 28 *\/\n+    \/** The integer value used to encode the ILOAD_2 instruction. *\/\n@@ -569,1 +569,1 @@\n-    \/** 29 *\/\n+    \/** The integer value used to encode the ILOAD_3 instruction. *\/\n@@ -572,1 +572,1 @@\n-    \/** 30 *\/\n+    \/** The integer value used to encode the LLOAD_0 instruction. *\/\n@@ -575,1 +575,1 @@\n-    \/** 31 *\/\n+    \/** The integer value used to encode the LLOAD_1 instruction. *\/\n@@ -578,1 +578,1 @@\n-    \/** 32 *\/\n+    \/** The integer value used to encode the LLOAD_2 instruction. *\/\n@@ -581,1 +581,1 @@\n-    \/** 33 *\/\n+    \/** The integer value used to encode the LLOAD_3 instruction. *\/\n@@ -584,1 +584,1 @@\n-    \/** 34 *\/\n+    \/** The integer value used to encode the FLOAD_0 instruction. *\/\n@@ -587,1 +587,1 @@\n-    \/** 35 *\/\n+    \/** The integer value used to encode the FLOAD_1 instruction. *\/\n@@ -590,1 +590,1 @@\n-    \/** 36 *\/\n+    \/** The integer value used to encode the FLOAD_2 instruction. *\/\n@@ -593,1 +593,1 @@\n-    \/** 37 *\/\n+    \/** The integer value used to encode the FLOAD_3 instruction. *\/\n@@ -596,1 +596,1 @@\n-    \/** 38 *\/\n+    \/** The integer value used to encode the DLOAD_0 instruction. *\/\n@@ -599,1 +599,1 @@\n-    \/** 39 *\/\n+    \/** The integer value used to encode the DLOAD_1 instruction. *\/\n@@ -602,1 +602,1 @@\n-    \/** 40 *\/\n+    \/** The integer value used to encode the DLOAD_2 instruction. *\/\n@@ -605,1 +605,1 @@\n-    \/** 41 *\/\n+    \/** The integer value used to encode the DLOAD_3 instruction. *\/\n@@ -608,1 +608,1 @@\n-    \/** 42 *\/\n+    \/** The integer value used to encode the ALOAD_0 instruction. *\/\n@@ -611,1 +611,1 @@\n-    \/** 43 *\/\n+    \/** The integer value used to encode the ALOAD_1 instruction. *\/\n@@ -614,1 +614,1 @@\n-    \/** 44 *\/\n+    \/** The integer value used to encode the ALOAD_2 instruction. *\/\n@@ -617,1 +617,1 @@\n-    \/** 45 *\/\n+    \/** The integer value used to encode the ALOAD_3 instruction. *\/\n@@ -620,1 +620,1 @@\n-    \/** 46 *\/\n+    \/** The integer value used to encode the IALOAD instruction. *\/\n@@ -623,1 +623,1 @@\n-    \/** 47 *\/\n+    \/** The integer value used to encode the LALOAD instruction. *\/\n@@ -626,1 +626,1 @@\n-    \/** 48 *\/\n+    \/** The integer value used to encode the FALOAD instruction. *\/\n@@ -629,1 +629,1 @@\n-    \/** 49 *\/\n+    \/** The integer value used to encode the DALOAD instruction. *\/\n@@ -632,1 +632,1 @@\n-    \/** 50 *\/\n+    \/** The integer value used to encode the AALOAD instruction. *\/\n@@ -635,1 +635,1 @@\n-    \/** 51 *\/\n+    \/** The integer value used to encode the BALOAD instruction. *\/\n@@ -638,1 +638,1 @@\n-    \/** 52 *\/\n+    \/** The integer value used to encode the CALOAD instruction. *\/\n@@ -641,1 +641,1 @@\n-    \/** 53 *\/\n+    \/** The integer value used to encode the SALOAD instruction. *\/\n@@ -644,1 +644,1 @@\n-    \/** 54 *\/\n+    \/** The integer value used to encode the ISTORE instruction. *\/\n@@ -647,1 +647,1 @@\n-    \/** 55 *\/\n+    \/** The integer value used to encode the LSTORE instruction. *\/\n@@ -650,1 +650,1 @@\n-    \/** 56 *\/\n+    \/** The integer value used to encode the FSTORE instruction. *\/\n@@ -653,1 +653,1 @@\n-    \/** 57 *\/\n+    \/** The integer value used to encode the DSTORE instruction. *\/\n@@ -656,1 +656,1 @@\n-    \/** 58 *\/\n+    \/** The integer value used to encode the ASTORE instruction. *\/\n@@ -659,1 +659,1 @@\n-    \/** 59 *\/\n+    \/** The integer value used to encode the ISTORE_0 instruction. *\/\n@@ -662,1 +662,1 @@\n-    \/** 60 *\/\n+    \/** The integer value used to encode the ISTORE_1 instruction. *\/\n@@ -665,1 +665,1 @@\n-    \/** 61 *\/\n+    \/** The integer value used to encode the ISTORE_2 instruction. *\/\n@@ -668,1 +668,1 @@\n-    \/** 62 *\/\n+    \/** The integer value used to encode the ISTORE_3 instruction. *\/\n@@ -671,1 +671,1 @@\n-    \/** 63 *\/\n+    \/** The integer value used to encode the LSTORE_0 instruction. *\/\n@@ -674,1 +674,1 @@\n-    \/** 64 *\/\n+    \/** The integer value used to encode the LSTORE_1 instruction. *\/\n@@ -677,1 +677,1 @@\n-    \/** 65 *\/\n+    \/** The integer value used to encode the LSTORE_2 instruction. *\/\n@@ -680,1 +680,1 @@\n-    \/** 66 *\/\n+    \/** The integer value used to encode the LSTORE_3 instruction. *\/\n@@ -683,1 +683,1 @@\n-    \/** 67 *\/\n+    \/** The integer value used to encode the FSTORE_0 instruction. *\/\n@@ -686,1 +686,1 @@\n-    \/** 68 *\/\n+    \/** The integer value used to encode the FSTORE_1 instruction. *\/\n@@ -689,1 +689,1 @@\n-    \/** 69 *\/\n+    \/** The integer value used to encode the FSTORE_2 instruction. *\/\n@@ -692,1 +692,1 @@\n-    \/** 70 *\/\n+    \/** The integer value used to encode the FSTORE_3 instruction. *\/\n@@ -695,1 +695,1 @@\n-    \/** 71 *\/\n+    \/** The integer value used to encode the DSTORE_0 instruction. *\/\n@@ -698,1 +698,1 @@\n-    \/** 72 *\/\n+    \/** The integer value used to encode the DSTORE_1 instruction. *\/\n@@ -701,1 +701,1 @@\n-    \/** 73 *\/\n+    \/** The integer value used to encode the DSTORE_2 instruction. *\/\n@@ -704,1 +704,1 @@\n-    \/** 74 *\/\n+    \/** The integer value used to encode the DSTORE_3 instruction. *\/\n@@ -707,1 +707,1 @@\n-    \/** 75 *\/\n+    \/** The integer value used to encode the ASTORE_0 instruction. *\/\n@@ -710,1 +710,1 @@\n-    \/** 76 *\/\n+    \/** The integer value used to encode the ASTORE_1 instruction. *\/\n@@ -713,1 +713,1 @@\n-    \/** 77 *\/\n+    \/** The integer value used to encode the ASTORE_2 instruction. *\/\n@@ -716,1 +716,1 @@\n-    \/** 78 *\/\n+    \/** The integer value used to encode the ASTORE_3 instruction. *\/\n@@ -719,1 +719,1 @@\n-    \/** 79 *\/\n+    \/** The integer value used to encode the IASTORE instruction. *\/\n@@ -722,1 +722,1 @@\n-    \/** 80 *\/\n+    \/** The integer value used to encode the LASTORE instruction. *\/\n@@ -725,1 +725,1 @@\n-    \/** 81 *\/\n+    \/** The integer value used to encode the FASTORE instruction. *\/\n@@ -728,1 +728,1 @@\n-    \/** 82 *\/\n+    \/** The integer value used to encode the DASTORE instruction. *\/\n@@ -731,1 +731,1 @@\n-    \/** 83 *\/\n+    \/** The integer value used to encode the AASTORE instruction. *\/\n@@ -734,1 +734,1 @@\n-    \/** 84 *\/\n+    \/** The integer value used to encode the BASTORE instruction. *\/\n@@ -737,1 +737,1 @@\n-    \/** 85 *\/\n+    \/** The integer value used to encode the CASTORE instruction. *\/\n@@ -740,1 +740,1 @@\n-    \/** 86 *\/\n+    \/** The integer value used to encode the SASTORE instruction. *\/\n@@ -743,1 +743,1 @@\n-    \/** 87 *\/\n+    \/** The integer value used to encode the POP instruction. *\/\n@@ -746,1 +746,1 @@\n-    \/** 88 *\/\n+    \/** The integer value used to encode the POP2 instruction. *\/\n@@ -749,1 +749,1 @@\n-    \/** 89 *\/\n+    \/** The integer value used to encode the DUP instruction. *\/\n@@ -752,1 +752,1 @@\n-    \/** 90 *\/\n+    \/** The integer value used to encode the DUP_X1 instruction. *\/\n@@ -755,1 +755,1 @@\n-    \/** 91 *\/\n+    \/** The integer value used to encode the DUP_X2 instruction. *\/\n@@ -758,1 +758,1 @@\n-    \/** 92 *\/\n+    \/** The integer value used to encode the DUP2 instruction. *\/\n@@ -761,1 +761,1 @@\n-    \/** 93 *\/\n+    \/** The integer value used to encode the DUP2_X1 instruction. *\/\n@@ -764,1 +764,1 @@\n-    \/** 94 *\/\n+    \/** The integer value used to encode the DUP2_X2 instruction. *\/\n@@ -767,1 +767,1 @@\n-    \/** 95 *\/\n+    \/** The integer value used to encode the SWAP instruction. *\/\n@@ -770,1 +770,1 @@\n-    \/** 96 *\/\n+    \/** The integer value used to encode the IADD instruction. *\/\n@@ -773,1 +773,1 @@\n-    \/** 97 *\/\n+    \/** The integer value used to encode the LADD instruction. *\/\n@@ -776,1 +776,1 @@\n-    \/** 98 *\/\n+    \/** The integer value used to encode the FADD instruction. *\/\n@@ -779,1 +779,1 @@\n-    \/** 99 *\/\n+    \/** The integer value used to encode the DADD instruction. *\/\n@@ -782,1 +782,1 @@\n-    \/** 100 *\/\n+    \/** The integer value used to encode the ISUB instruction. *\/\n@@ -785,1 +785,1 @@\n-    \/** 101 *\/\n+    \/** The integer value used to encode the LSUB instruction. *\/\n@@ -788,1 +788,1 @@\n-    \/** 102 *\/\n+    \/** The integer value used to encode the FSUB instruction. *\/\n@@ -791,1 +791,1 @@\n-    \/** 103 *\/\n+    \/** The integer value used to encode the DSUB instruction. *\/\n@@ -794,1 +794,1 @@\n-    \/** 104 *\/\n+    \/** The integer value used to encode the IMUL instruction. *\/\n@@ -797,1 +797,1 @@\n-    \/** 105 *\/\n+    \/** The integer value used to encode the LMUL instruction. *\/\n@@ -800,1 +800,1 @@\n-    \/** 106 *\/\n+    \/** The integer value used to encode the FMUL instruction. *\/\n@@ -803,1 +803,1 @@\n-    \/** 107 *\/\n+    \/** The integer value used to encode the DMUL instruction. *\/\n@@ -806,1 +806,1 @@\n-    \/** 108 *\/\n+    \/** The integer value used to encode the IDIV instruction. *\/\n@@ -809,1 +809,1 @@\n-    \/** 109 *\/\n+    \/** The integer value used to encode the LDIV instruction. *\/\n@@ -812,1 +812,1 @@\n-    \/** 110 *\/\n+    \/** The integer value used to encode the FDIV instruction. *\/\n@@ -815,1 +815,1 @@\n-    \/** 111 *\/\n+    \/** The integer value used to encode the DDIV instruction. *\/\n@@ -818,1 +818,1 @@\n-    \/** 112 *\/\n+    \/** The integer value used to encode the IREM instruction. *\/\n@@ -821,1 +821,1 @@\n-    \/** 113 *\/\n+    \/** The integer value used to encode the LREM instruction. *\/\n@@ -824,1 +824,1 @@\n-    \/** 114 *\/\n+    \/** The integer value used to encode the FREM instruction. *\/\n@@ -827,1 +827,1 @@\n-    \/** 115 *\/\n+    \/** The integer value used to encode the DREM instruction. *\/\n@@ -830,1 +830,1 @@\n-    \/** 116 *\/\n+    \/** The integer value used to encode the INEG instruction. *\/\n@@ -833,1 +833,1 @@\n-    \/** 117 *\/\n+    \/** The integer value used to encode the LNEG instruction. *\/\n@@ -836,1 +836,1 @@\n-    \/** 118 *\/\n+    \/** The integer value used to encode the FNEG instruction. *\/\n@@ -839,1 +839,1 @@\n-    \/** 119 *\/\n+    \/** The integer value used to encode the DNEG instruction. *\/\n@@ -842,1 +842,1 @@\n-    \/** 120 *\/\n+    \/** The integer value used to encode the ISHL instruction. *\/\n@@ -845,1 +845,1 @@\n-    \/** 121 *\/\n+    \/** The integer value used to encode the LSHL instruction. *\/\n@@ -848,1 +848,1 @@\n-    \/** 122 *\/\n+    \/** The integer value used to encode the ISHR instruction. *\/\n@@ -851,1 +851,1 @@\n-    \/** 123 *\/\n+    \/** The integer value used to encode the LSHR instruction. *\/\n@@ -854,1 +854,1 @@\n-    \/** 124 *\/\n+    \/** The integer value used to encode the IUSHR instruction. *\/\n@@ -857,1 +857,1 @@\n-    \/** 125 *\/\n+    \/** The integer value used to encode the LUSHR instruction. *\/\n@@ -860,1 +860,1 @@\n-    \/** 126 *\/\n+    \/** The integer value used to encode the IAND instruction. *\/\n@@ -863,1 +863,1 @@\n-    \/** 127 *\/\n+    \/** The integer value used to encode the LAND instruction. *\/\n@@ -866,1 +866,1 @@\n-    \/** 128 *\/\n+    \/** The integer value used to encode the IOR instruction. *\/\n@@ -869,1 +869,1 @@\n-    \/** 129 *\/\n+    \/** The integer value used to encode the LOR instruction. *\/\n@@ -872,1 +872,1 @@\n-    \/** 130 *\/\n+    \/** The integer value used to encode the IXOR instruction. *\/\n@@ -875,1 +875,1 @@\n-    \/** 131 *\/\n+    \/** The integer value used to encode the LXOR instruction. *\/\n@@ -878,1 +878,1 @@\n-    \/** 132 *\/\n+    \/** The integer value used to encode the IINC instruction. *\/\n@@ -881,1 +881,1 @@\n-    \/** 133 *\/\n+    \/** The integer value used to encode the I2L instruction. *\/\n@@ -884,1 +884,1 @@\n-    \/** 134 *\/\n+    \/** The integer value used to encode the I2F instruction. *\/\n@@ -887,1 +887,1 @@\n-    \/** 135 *\/\n+    \/** The integer value used to encode the I2D instruction. *\/\n@@ -890,1 +890,1 @@\n-    \/** 136 *\/\n+    \/** The integer value used to encode the L2I instruction. *\/\n@@ -893,1 +893,1 @@\n-    \/** 137 *\/\n+    \/** The integer value used to encode the L2F instruction. *\/\n@@ -896,1 +896,1 @@\n-    \/** 138 *\/\n+    \/** The integer value used to encode the L2D instruction. *\/\n@@ -899,1 +899,1 @@\n-    \/** 139 *\/\n+    \/** The integer value used to encode the F2I instruction. *\/\n@@ -902,1 +902,1 @@\n-    \/** 140 *\/\n+    \/** The integer value used to encode the F2L instruction. *\/\n@@ -905,1 +905,1 @@\n-    \/** 141 *\/\n+    \/** The integer value used to encode the F2D instruction. *\/\n@@ -908,1 +908,1 @@\n-    \/** 142 *\/\n+    \/** The integer value used to encode the D2I instruction. *\/\n@@ -911,1 +911,1 @@\n-    \/** 143 *\/\n+    \/** The integer value used to encode the D2L instruction. *\/\n@@ -914,1 +914,1 @@\n-    \/** 144 *\/\n+    \/** The integer value used to encode the D2F instruction. *\/\n@@ -917,1 +917,1 @@\n-    \/** 145 *\/\n+    \/** The integer value used to encode the I2B instruction. *\/\n@@ -920,1 +920,1 @@\n-    \/** 146 *\/\n+    \/** The integer value used to encode the I2C instruction. *\/\n@@ -923,1 +923,1 @@\n-    \/** 147 *\/\n+    \/** The integer value used to encode the I2S instruction. *\/\n@@ -926,1 +926,1 @@\n-    \/** 148 *\/\n+    \/** The integer value used to encode the LCMP instruction. *\/\n@@ -929,1 +929,1 @@\n-    \/** 149 *\/\n+    \/** The integer value used to encode the FCMPL instruction. *\/\n@@ -932,1 +932,1 @@\n-    \/** 150 *\/\n+    \/** The integer value used to encode the FCMPG instruction. *\/\n@@ -935,1 +935,1 @@\n-    \/** 151 *\/\n+    \/** The integer value used to encode the DCMPL instruction. *\/\n@@ -938,1 +938,1 @@\n-    \/** 152 *\/\n+    \/** The integer value used to encode the DCMPG instruction. *\/\n@@ -941,1 +941,1 @@\n-    \/** 153 *\/\n+    \/** The integer value used to encode the IFEQ instruction. *\/\n@@ -944,1 +944,1 @@\n-    \/** 154 *\/\n+    \/** The integer value used to encode the IFNE instruction. *\/\n@@ -947,1 +947,1 @@\n-    \/** 155 *\/\n+    \/** The integer value used to encode the IFLT instruction. *\/\n@@ -950,1 +950,1 @@\n-    \/** 156 *\/\n+    \/** The integer value used to encode the IFGE instruction. *\/\n@@ -953,1 +953,1 @@\n-    \/** 157 *\/\n+    \/** The integer value used to encode the IFGT instruction. *\/\n@@ -956,1 +956,1 @@\n-    \/** 158 *\/\n+    \/** The integer value used to encode the IFLE instruction. *\/\n@@ -959,1 +959,1 @@\n-    \/** 159 *\/\n+    \/** The integer value used to encode the IF_ICMPEQ instruction. *\/\n@@ -962,1 +962,1 @@\n-    \/** 160 *\/\n+    \/** The integer value used to encode the IF_ICMPNE instruction. *\/\n@@ -965,1 +965,1 @@\n-    \/** 161 *\/\n+    \/** The integer value used to encode the IF_ICMPLT instruction. *\/\n@@ -968,1 +968,1 @@\n-    \/** 162 *\/\n+    \/** The integer value used to encode the IF_ICMPGE instruction. *\/\n@@ -971,1 +971,1 @@\n-    \/** 163 *\/\n+    \/** The integer value used to encode the IF_ICMPGT instruction. *\/\n@@ -974,1 +974,1 @@\n-    \/** 164 *\/\n+    \/** The integer value used to encode the IF_ICMPLE instruction. *\/\n@@ -977,1 +977,1 @@\n-    \/** 165 *\/\n+    \/** The integer value used to encode the IF_ACMPEQ instruction. *\/\n@@ -980,1 +980,1 @@\n-    \/** 166 *\/\n+    \/** The integer value used to encode the IF_ACMPNE instruction. *\/\n@@ -983,1 +983,1 @@\n-    \/** 167 *\/\n+    \/** The integer value used to encode the GOTO instruction. *\/\n@@ -986,1 +986,1 @@\n-    \/** 168 *\/\n+    \/** The integer value used to encode the JSR instruction. *\/\n@@ -989,1 +989,1 @@\n-    \/** 169 *\/\n+    \/** The integer value used to encode the RET instruction. *\/\n@@ -992,1 +992,1 @@\n-    \/** 170 *\/\n+    \/** The integer value used to encode the TABLESWITCH instruction. *\/\n@@ -995,1 +995,1 @@\n-    \/** 171 *\/\n+    \/** The integer value used to encode the LOOKUPSWITCH instruction. *\/\n@@ -998,1 +998,1 @@\n-    \/** 172 *\/\n+    \/** The integer value used to encode the IRETURN instruction. *\/\n@@ -1001,1 +1001,1 @@\n-    \/** 173 *\/\n+    \/** The integer value used to encode the LRETURN instruction. *\/\n@@ -1004,1 +1004,1 @@\n-    \/** 174 *\/\n+    \/** The integer value used to encode the FRETURN instruction. *\/\n@@ -1007,1 +1007,1 @@\n-    \/** 175 *\/\n+    \/** The integer value used to encode the DRETURN instruction. *\/\n@@ -1010,1 +1010,1 @@\n-    \/** 176 *\/\n+    \/** The integer value used to encode the ARETURN instruction. *\/\n@@ -1013,1 +1013,1 @@\n-    \/** 177 *\/\n+    \/** The integer value used to encode the RETURN instruction. *\/\n@@ -1016,1 +1016,1 @@\n-    \/** 178 *\/\n+    \/** The integer value used to encode the GETSTATIC instruction. *\/\n@@ -1019,1 +1019,1 @@\n-    \/** 179 *\/\n+    \/** The integer value used to encode the PUTSTATIC instruction. *\/\n@@ -1022,1 +1022,1 @@\n-    \/** 180 *\/\n+    \/** The integer value used to encode the GETFIELD instruction. *\/\n@@ -1025,1 +1025,1 @@\n-    \/** 181 *\/\n+    \/** The integer value used to encode the PUTFIELD instruction. *\/\n@@ -1028,1 +1028,1 @@\n-    \/** 182 *\/\n+    \/** The integer value used to encode the INVOKEVIRTUAL instruction. *\/\n@@ -1031,1 +1031,1 @@\n-    \/** 183 *\/\n+    \/** The integer value used to encode the INVOKESPECIAL instruction. *\/\n@@ -1034,1 +1034,1 @@\n-    \/** 184 *\/\n+    \/** The integer value used to encode the INVOKESTATIC instruction. *\/\n@@ -1037,1 +1037,1 @@\n-    \/** 185 *\/\n+    \/** The integer value used to encode the INVOKEINTERFACE instruction. *\/\n@@ -1040,1 +1040,1 @@\n-    \/** 186 *\/\n+    \/** The integer value used to encode the INVOKEDYNAMIC instruction. *\/\n@@ -1043,1 +1043,1 @@\n-    \/** 187 *\/\n+    \/** The integer value used to encode the NEW instruction. *\/\n@@ -1046,1 +1046,1 @@\n-    \/** 188 *\/\n+    \/** The integer value used to encode the NEWARRAY instruction. *\/\n@@ -1049,1 +1049,1 @@\n-    \/** 189 *\/\n+    \/** The integer value used to encode the ANEWARRAY instruction. *\/\n@@ -1052,1 +1052,1 @@\n-    \/** 190 *\/\n+    \/** The integer value used to encode the ARRAYLENGTH instruction. *\/\n@@ -1055,1 +1055,1 @@\n-    \/** 191 *\/\n+    \/** The integer value used to encode the ATHROW instruction. *\/\n@@ -1058,1 +1058,1 @@\n-    \/** 192 *\/\n+    \/** The integer value used to encode the CHECKCAST instruction. *\/\n@@ -1061,1 +1061,1 @@\n-    \/** 193 *\/\n+    \/** The integer value used to encode the INSTANCEOF instruction. *\/\n@@ -1064,1 +1064,1 @@\n-    \/** 194 *\/\n+    \/** The integer value used to encode the MONITORENTER instruction. *\/\n@@ -1067,1 +1067,1 @@\n-    \/** 195 *\/\n+    \/** The integer value used to encode the MONITOREXIT instruction. *\/\n@@ -1070,1 +1070,1 @@\n-    \/** 196 *\/\n+    \/** The integer value used to encode the WIDE instruction. *\/\n@@ -1073,1 +1073,1 @@\n-    \/** 197 *\/\n+    \/** The integer value used to encode the MULTIANEWARRAY instruction. *\/\n@@ -1076,1 +1076,1 @@\n-    \/** 198 *\/\n+    \/** The integer value used to encode the IFNULL instruction. *\/\n@@ -1079,1 +1079,1 @@\n-    \/** 199 *\/\n+    \/** The integer value used to encode the IFNONNULL instruction. *\/\n@@ -1082,1 +1082,1 @@\n-    \/** 200 *\/\n+    \/** The integer value used to encode the GOTO_W instruction. *\/\n@@ -1085,1 +1085,1 @@\n-    \/** 201 *\/\n+    \/** The integer value used to encode the JSR_W instruction. *\/\n@@ -1088,1 +1088,1 @@\n-    \/** 0x0001 *\/\n+    \/** The value of PUBLIC access and property modifier. *\/\n@@ -1091,1 +1091,1 @@\n-    \/** 0x0004 *\/\n+    \/** The value of PROTECTED access and property modifier. *\/\n@@ -1094,1 +1094,1 @@\n-    \/** 0x0002 *\/\n+    \/** The value of PRIVATE access and property modifier. *\/\n@@ -1097,1 +1097,1 @@\n-    \/** 0x0200 *\/\n+    \/** The value of INTERFACE access and property modifier. *\/\n@@ -1100,1 +1100,1 @@\n-    \/** 0x4000 *\/\n+    \/** The value of ENUM access and property modifier. *\/\n@@ -1103,1 +1103,1 @@\n-    \/** 0x2000 *\/\n+    \/** The value of ANNOTATION access and property modifier. *\/\n@@ -1106,1 +1106,1 @@\n-    \/** 0x0020 *\/\n+    \/** The value of SUPER access and property modifier. *\/\n@@ -1109,1 +1109,1 @@\n-    \/** 0x0400 *\/\n+    \/** The value of ABSTRACT access and property modifier. *\/\n@@ -1112,1 +1112,1 @@\n-    \/** 0x0040 *\/\n+    \/** The value of VOLATILE access and property modifier. *\/\n@@ -1115,1 +1115,1 @@\n-    \/** 0x0080 *\/\n+    \/** The value of TRANSIENT access and property modifier. *\/\n@@ -1118,1 +1118,1 @@\n-    \/** 0x1000 *\/\n+    \/** The value of SYNTHETIC access and property modifier. *\/\n@@ -1121,1 +1121,1 @@\n-    \/** 0x0008 *\/\n+    \/** The value of STATIC access and property modifier. *\/\n@@ -1124,1 +1124,1 @@\n-    \/** 0x0010 *\/\n+    \/** The value of FINAL access and property modifier. *\/\n@@ -1127,1 +1127,1 @@\n-    \/** 0x0020 *\/\n+    \/** The value of SYNCHRONIZED access and property modifier. *\/\n@@ -1130,1 +1130,1 @@\n-    \/** 0x0040 *\/\n+    \/** The value of BRIDGE access and property modifier. *\/\n@@ -1133,1 +1133,1 @@\n-    \/** 0x0080 *\/\n+    \/** The value of VARARGS access and property modifier. *\/\n@@ -1136,1 +1136,1 @@\n-    \/** 0x0100 *\/\n+    \/** The value of NATIVE access and property modifier. *\/\n@@ -1139,1 +1139,1 @@\n-    \/** 0x0800 *\/\n+    \/** The value of STRICT access and property modifier. *\/\n@@ -1142,1 +1142,1 @@\n-    \/** 0x8000 *\/\n+    \/** The value of MODULE access and property modifier. *\/\n@@ -1145,1 +1145,1 @@\n-    \/** 0x20 *\/\n+    \/** The value of OPEN access and property modifier. *\/\n@@ -1148,1 +1148,1 @@\n-    \/** 0x8000 *\/\n+    \/** The value of MANDATED access and property modifier. *\/\n@@ -1151,1 +1151,1 @@\n-    \/** 0x20 *\/\n+    \/** The value of TRANSITIVE access and property modifier. *\/\n@@ -1154,1 +1154,1 @@\n-    \/** 0x40 *\/\n+    \/** The value of STATIC_PHASE access and property modifier. *\/\n@@ -1157,1 +1157,1 @@\n-    \/** 0x0001 *\/\n+    \/** The value of STATEMENT {@link CharacterRangeInfo} kind. *\/\n@@ -1160,1 +1160,1 @@\n-    \/** 0x0002 *\/\n+    \/** The value of BLOCK {@link CharacterRangeInfo} kind. *\/\n@@ -1163,1 +1163,1 @@\n-    \/** 0x0004 *\/\n+    \/** The value of ASSIGNMENT {@link CharacterRangeInfo} kind. *\/\n@@ -1166,1 +1166,1 @@\n-    \/** 0x0008 *\/\n+    \/** The value of FLOW_CONTROLLER {@link CharacterRangeInfo} kind. *\/\n@@ -1169,1 +1169,1 @@\n-    \/** 0x0010 *\/\n+    \/** The value of FLOW_TARGET {@link CharacterRangeInfo} kind. *\/\n@@ -1172,1 +1172,1 @@\n-    \/** 0x0020 *\/\n+    \/** The value of INVOKE {@link CharacterRangeInfo} kind. *\/\n@@ -1175,1 +1175,1 @@\n-    \/** 0x0040 *\/\n+    \/** The value of CREATE {@link CharacterRangeInfo} kind. *\/\n@@ -1178,1 +1178,1 @@\n-    \/** 0x0080 *\/\n+    \/** The value of BRANCH_TRUE {@link CharacterRangeInfo} kind. *\/\n@@ -1181,1 +1181,1 @@\n-    \/** 0x0100 *\/\n+    \/** The value of BRANCH_FALSE {@link CharacterRangeInfo} kind. *\/\n@@ -1184,1 +1184,1 @@\n-    \/** 7 *\/\n+    \/** The value of constant pool tag CLASS. *\/\n@@ -1187,1 +1187,1 @@\n-    \/** 17 *\/\n+    \/** The value of constant pool tag CONSTANTDYNAMIC. *\/\n@@ -1190,1 +1190,1 @@\n-    \/** 6 *\/\n+    \/** The value of constant pool tag DOUBLE. *\/\n@@ -1193,1 +1193,1 @@\n-    \/** 9 *\/\n+    \/** The value of constant pool tag FIELDREF. *\/\n@@ -1196,1 +1196,1 @@\n-    \/** 4 *\/\n+    \/** The value of constant pool tag FLOAT. *\/\n@@ -1199,1 +1199,1 @@\n-    \/** 3 *\/\n+    \/** The value of constant pool tag INTEGER. *\/\n@@ -1202,1 +1202,1 @@\n-    \/** 11 *\/\n+    \/** The value of constant pool tag INTERFACEMETHODREF. *\/\n@@ -1205,1 +1205,1 @@\n-    \/** 18 *\/\n+    \/** The value of constant pool tag INVOKEDYNAMIC. *\/\n@@ -1208,1 +1208,1 @@\n-    \/** 5 *\/\n+    \/** The value of constant pool tag LONG. *\/\n@@ -1211,1 +1211,1 @@\n-    \/** 15 *\/\n+    \/** The value of constant pool tag METHODHANDLE. *\/\n@@ -1214,1 +1214,1 @@\n-    \/** 10 *\/\n+    \/** The value of constant pool tag METHODREF. *\/\n@@ -1217,1 +1217,1 @@\n-    \/** 16 *\/\n+    \/** The value of constant pool tag METHODTYPE. *\/\n@@ -1220,1 +1220,1 @@\n-    \/** 19 *\/\n+    \/** The value of constant pool tag MODULE. *\/\n@@ -1223,1 +1223,1 @@\n-    \/** 12 *\/\n+    \/** The value of constant pool tag NAMEANDTYPE. *\/\n@@ -1226,1 +1226,1 @@\n-    \/** 20 *\/\n+    \/** The value of constant pool tag PACKAGE. *\/\n@@ -1229,1 +1229,1 @@\n-    \/** 8 *\/\n+    \/** The value of constant pool tag STRING. *\/\n@@ -1232,1 +1232,1 @@\n-    \/** 2 *\/\n+    \/** The value of constant pool tag UNICODE. *\/\n@@ -1235,1 +1235,1 @@\n-    \/** 1 *\/\n+    \/** The value of constant pool tag UTF8. *\/\n@@ -1240,2 +1240,2 @@\n-    \/** 'B' *\/\n-    char AEV_BYTE = 'B';\n+    \/** The value of annotation element value type AEV_BYTE. *\/\n+    int AEV_BYTE = 'B';\n@@ -1243,2 +1243,2 @@\n-    \/** 'C' *\/\n-    char AEV_CHAR = 'C';\n+    \/** The value of annotation element value type AEV_CHAR. *\/\n+    int AEV_CHAR = 'C';\n@@ -1246,2 +1246,2 @@\n-    \/** 'D' *\/\n-    char AEV_DOUBLE = 'D';\n+    \/** The value of annotation element value type AEV_DOUBLE. *\/\n+    int AEV_DOUBLE = 'D';\n@@ -1249,2 +1249,2 @@\n-    \/** 'F' *\/\n-    char AEV_FLOAT = 'F';\n+    \/** The value of annotation element value type AEV_FLOAT. *\/\n+    int AEV_FLOAT = 'F';\n@@ -1252,2 +1252,2 @@\n-    \/** 'I' *\/\n-    char AEV_INT = 'I';\n+    \/** The value of annotation element value type AEV_INT. *\/\n+    int AEV_INT = 'I';\n@@ -1255,2 +1255,2 @@\n-    \/** 'J' *\/\n-    char AEV_LONG = 'J';\n+    \/** The value of annotation element value type AEV_LONG. *\/\n+    int AEV_LONG = 'J';\n@@ -1258,2 +1258,2 @@\n-    \/** 'S' *\/\n-    char AEV_SHORT = 'S';\n+    \/** The value of annotation element value type AEV_SHORT. *\/\n+    int AEV_SHORT = 'S';\n@@ -1261,2 +1261,2 @@\n-    \/** 'Z' *\/\n-    char AEV_BOOLEAN = 'Z';\n+    \/** The value of annotation element value type AEV_BOOLEAN. *\/\n+    int AEV_BOOLEAN = 'Z';\n@@ -1264,2 +1264,2 @@\n-    \/** 's' *\/\n-    char AEV_STRING = 's';\n+    \/** The value of annotation element value type AEV_STRING. *\/\n+    int AEV_STRING = 's';\n@@ -1267,2 +1267,2 @@\n-    \/** 'e' *\/\n-    char AEV_ENUM = 'e';\n+    \/** The value of annotation element value type AEV_ENUM. *\/\n+    int AEV_ENUM = 'e';\n@@ -1270,2 +1270,2 @@\n-    \/** 'c' *\/\n-    char AEV_CLASS = 'c';\n+    \/** The value of annotation element value type AEV_CLASS. *\/\n+    int AEV_CLASS = 'c';\n@@ -1273,2 +1273,2 @@\n-    \/** '@' *\/\n-    char AEV_ANNOTATION = '@';\n+    \/** The value of annotation element value type AEV_ANNOTATION. *\/\n+    int AEV_ANNOTATION = '@';\n@@ -1276,2 +1276,2 @@\n-    \/** '[' *\/\n-    char AEV_ARRAY = '[';\n+    \/** The value of annotation element value type AEV_ARRAY. *\/\n+    int AEV_ARRAY = '[';\n@@ -1281,1 +1281,1 @@\n-    \/** 0x00 *\/\n+    \/** The value of type annotation target type CLASS_TYPE_PARAMETER. *\/\n@@ -1284,1 +1284,1 @@\n-    \/** 0x01 *\/\n+    \/** The value of type annotation target type METHOD_TYPE_PARAMETER. *\/\n@@ -1287,1 +1287,1 @@\n-    \/** 0x10 *\/\n+    \/** The value of type annotation target type CLASS_EXTENDS. *\/\n@@ -1290,1 +1290,1 @@\n-    \/** 0x11 *\/\n+    \/** The value of type annotation target type CLASS_TYPE_PARAMETER_BOUND. *\/\n@@ -1293,1 +1293,1 @@\n-    \/** 0x12 *\/\n+    \/** The value of type annotation target type METHOD_TYPE_PARAMETER_BOUND. *\/\n@@ -1296,1 +1296,1 @@\n-    \/** 0x13 *\/\n+    \/** The value of type annotation target type FIELD. *\/\n@@ -1299,1 +1299,1 @@\n-    \/** 0x14 *\/\n+    \/** The value of type annotation target type METHOD_RETURN. *\/\n@@ -1302,1 +1302,1 @@\n-    \/** 0x15 *\/\n+    \/** The value of type annotation target type METHOD_RECEIVER. *\/\n@@ -1305,1 +1305,1 @@\n-    \/** 0x16 *\/\n+    \/** The value of type annotation target type METHOD_FORMAL_PARAMETER. *\/\n@@ -1308,1 +1308,1 @@\n-    \/** 0x17 *\/\n+    \/** The value of type annotation target type THROWS. *\/\n@@ -1311,1 +1311,1 @@\n-    \/** 0x40 *\/\n+    \/** The value of type annotation target type LOCAL_VARIABLE. *\/\n@@ -1314,1 +1314,1 @@\n-    \/** 0x41 *\/\n+    \/** The value of type annotation target type RESOURCE_VARIABLE. *\/\n@@ -1317,1 +1317,1 @@\n-    \/** 0x42 *\/\n+    \/** The value of type annotation target type EXCEPTION_PARAMETER. *\/\n@@ -1320,1 +1320,1 @@\n-    \/** 0x43 *\/\n+    \/** The value of type annotation target type INSTANCEOF. *\/\n@@ -1323,1 +1323,1 @@\n-    \/** 0x44 *\/\n+    \/** The value of type annotation target type NEW. *\/\n@@ -1326,1 +1326,1 @@\n-    \/** 0x45 *\/\n+    \/** The value of type annotation target type CONSTRUCTOR_REFERENCE. *\/\n@@ -1329,1 +1329,1 @@\n-    \/** 0x46 *\/\n+    \/** The value of type annotation target type METHOD_REFERENCE. *\/\n@@ -1332,1 +1332,1 @@\n-    \/** 0x47 *\/\n+    \/** The value of type annotation target type CAST. *\/\n@@ -1335,1 +1335,1 @@\n-    \/** 0x48 *\/\n+    \/** The value of type annotation target type CONSTRUCTOR_INVOCATION_TYPE_ARGUMENT. *\/\n@@ -1338,1 +1338,1 @@\n-    \/** 0x49 *\/\n+    \/** The value of type annotation target type METHOD_INVOCATION_TYPE_ARGUMENT. *\/\n@@ -1341,1 +1341,1 @@\n-    \/** 0x4A *\/\n+    \/** The value of type annotation target type CONSTRUCTOR_REFERENCE_TYPE_ARGUMENT. *\/\n@@ -1344,1 +1344,1 @@\n-    \/** 0x4B *\/\n+    \/** The value of type annotation target type METHOD_REFERENCE_TYPE_ARGUMENT. *\/\n@@ -1349,1 +1349,1 @@\n-    \/** 0 *\/\n+    \/** The value of verification type TOP. *\/\n@@ -1352,1 +1352,1 @@\n-    \/** 1 *\/\n+    \/** The value of verification type INTEGER. *\/\n@@ -1355,1 +1355,1 @@\n-    \/** 2 *\/\n+    \/** The value of verification type FLOAT. *\/\n@@ -1358,1 +1358,1 @@\n-    \/** 3 *\/\n+    \/** The value of verification type DOUBLE. *\/\n@@ -1361,1 +1361,1 @@\n-    \/** 4 *\/\n+    \/** The value of verification type LONG. *\/\n@@ -1364,1 +1364,1 @@\n-    \/** 5 *\/\n+    \/** The value of verification type NULL. *\/\n@@ -1367,1 +1367,1 @@\n-    \/** 6 *\/\n+    \/** The value of verification type UNINITIALIZED_THIS. *\/\n@@ -1370,1 +1370,1 @@\n-    \/** 7 *\/\n+    \/** The value of verification type OBJECT. *\/\n@@ -1373,1 +1373,1 @@\n-    \/** 8 *\/\n+    \/** The value of verification type UNINITIALIZED. *\/\n@@ -1376,1 +1376,1 @@\n-    \/** ACC_PUBLIC *\/\n+    \/** The value of default class access flags *\/\n@@ -1379,1 +1379,1 @@\n-    \/** 45 *\/\n+    \/** The class major version of JAVA_1. *\/\n@@ -1382,1 +1382,1 @@\n-    \/** 46 *\/\n+    \/** The class major version of JAVA_2. *\/\n@@ -1385,1 +1385,1 @@\n-    \/** 47 *\/\n+    \/** The class major version of JAVA_3. *\/\n@@ -1388,1 +1388,1 @@\n-    \/** 48 *\/\n+    \/** The class major version of JAVA_4. *\/\n@@ -1391,1 +1391,1 @@\n-    \/** 49 *\/\n+    \/** The class major version of JAVA_5. *\/\n@@ -1394,1 +1394,1 @@\n-    \/** 50 *\/\n+    \/** The class major version of JAVA_6. *\/\n@@ -1397,1 +1397,1 @@\n-    \/** 51 *\/\n+    \/** The class major version of JAVA_7. *\/\n@@ -1400,1 +1400,1 @@\n-    \/** 52 *\/\n+    \/** The class major version of JAVA_8. *\/\n@@ -1403,1 +1403,1 @@\n-    \/** 53 *\/\n+    \/** The class major version of JAVA_9. *\/\n@@ -1406,1 +1406,1 @@\n-    \/** 54 *\/\n+    \/** The class major version of JAVA_10. *\/\n@@ -1409,1 +1409,1 @@\n-    \/** 55 *\/\n+    \/** The class major version of JAVA_11. *\/\n@@ -1412,1 +1412,1 @@\n-    \/** 56 *\/\n+    \/** The class major version of JAVA_12. *\/\n@@ -1415,1 +1415,1 @@\n-    \/** 57 *\/\n+    \/** The class major version of JAVA_13. *\/\n@@ -1418,1 +1418,1 @@\n-    \/** 58 *\/\n+    \/** The class major version of JAVA_14. *\/\n@@ -1421,1 +1421,1 @@\n-    \/** 59 *\/\n+    \/** The class major version of JAVA_15. *\/\n@@ -1424,1 +1424,1 @@\n-    \/** 60 *\/\n+    \/** The class major version of JAVA_16. *\/\n@@ -1427,1 +1427,1 @@\n-    \/** 61 *\/\n+    \/** The class major version of JAVA_17. *\/\n@@ -1430,1 +1430,1 @@\n-    \/** 62 *\/\n+    \/** The class major version of JAVA_18. *\/\n@@ -1433,1 +1433,1 @@\n-    \/** 63 *\/\n+    \/** The class major version of JAVA_19. *\/\n@@ -1436,1 +1436,1 @@\n-    \/** 64 *\/\n+    \/** The class major version of JAVA_20. *\/\n@@ -1439,1 +1439,1 @@\n-    \/** 65 *\/\n+    \/** The class major version of JAVA_21. *\/\n@@ -1442,1 +1442,1 @@\n-    \/** 66 *\/\n+    \/** The class major version of JAVA_22. *\/\n","filename":"src\/java.base\/share\/classes\/java\/lang\/classfile\/ClassFile.java","additions":332,"deletions":332,"binary":false,"changes":664,"status":"modified"},{"patch":"@@ -33,2 +33,2 @@\n- * A {@link ClassFileElement} that can appear when traversing the elements\n- * of a {@link CodeModel} or be presented to a {@link CodeBuilder}.  Code elements\n+ * A marker interface for elements that can appear when traversing\n+ * a {@link CodeModel} or be presented to a {@link CodeBuilder}. Code elements\n","filename":"src\/java.base\/share\/classes\/java\/lang\/classfile\/CodeElement.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,1 +27,0 @@\n-import jdk.internal.classfile.impl.UnboundAttribute;\n@@ -40,1 +39,0 @@\n-@SuppressWarnings(\"exports\")\n@@ -42,2 +40,3 @@\n-        extends UnboundAttribute.CustomAttribute<T>\n-        implements CodeElement, ClassElement, MethodElement, FieldElement {\n+        implements Attribute<T>, CodeElement, ClassElement, MethodElement, FieldElement {\n+\n+    private final AttributeMapper<T> mapper;\n@@ -50,1 +49,22 @@\n-        super(mapper);\n+        this.mapper = mapper;\n+    }\n+\n+    @Override\n+    public final AttributeMapper<T> attributeMapper() {\n+        return mapper;\n+    }\n+\n+    @Override\n+    public final String attributeName() {\n+        return mapper.name();\n+    }\n+\n+    @Override\n+    @SuppressWarnings(\"unchecked\")\n+    public final void writeTo(BufWriter buf) {\n+        mapper.writeAttribute(buf, (T) this);\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return String.format(\"CustomAttribute[name=%s]\", mapper.name());\n","filename":"src\/java.base\/share\/classes\/java\/lang\/classfile\/CustomAttribute.java","additions":25,"deletions":5,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -39,2 +39,2 @@\n- * A {@link ClassFileElement} that can appear when traversing the elements\n- * of a {@link FieldModel} or be presented to a {@link FieldBuilder}.\n+ * A marker interface for elements that can appear when traversing\n+ * a {@link FieldModel} or be presented to a {@link FieldBuilder}.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/classfile\/FieldElement.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -43,2 +43,2 @@\n- * A {@link ClassFileElement} that can appear when traversing the elements\n- * of a {@link MethodModel} or be presented to a {@link MethodBuilder}.\n+ * A marker interface for elements that can appear when traversing\n+ * a {@link MethodModel} or be presented to a {@link MethodBuilder}.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/classfile\/MethodElement.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -39,0 +39,1 @@\n+import java.lang.classfile.CustomAttribute;\n@@ -77,1 +78,5 @@\n-        ((AbstractElement) element).writeTo(this);\n+        if (element instanceof AbstractElement ae) {\n+            ae.writeTo(this);\n+        } else {\n+            writeAttribute((CustomAttribute)element);\n+        }\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/DirectClassBuilder.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+import java.lang.classfile.CustomAttribute;\n@@ -58,1 +59,5 @@\n-        ((AbstractElement) element).writeTo(this);\n+        if (element instanceof AbstractElement ae) {\n+            ae.writeTo(this);\n+        } else {\n+            writeAttribute((CustomAttribute)element);\n+        }\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/DirectFieldBuilder.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -36,0 +36,1 @@\n+import java.lang.classfile.CustomAttribute;\n@@ -114,1 +115,5 @@\n-        ((AbstractElement) element).writeTo(this);\n+        if (element instanceof AbstractElement ae) {\n+            ae.writeTo(this);\n+        } else {\n+            writeAttribute((CustomAttribute)element);\n+        }\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/DirectMethodBuilder.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -937,9 +937,0 @@\n-\n-    public static abstract sealed class CustomAttribute<T extends CustomAttribute<T>>\n-            extends UnboundAttribute<T>\n-            permits java.lang.classfile.CustomAttribute {\n-\n-        public CustomAttribute(AttributeMapper<T> mapper) {\n-            super(mapper);\n-        }\n-    }\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/UnboundAttribute.java","additions":0,"deletions":9,"binary":false,"changes":9,"status":"modified"}]}