{"files":[{"patch":"@@ -107,10 +107,0 @@\n-    \/**\n-     * {@return The earliest classfile version for which this attribute is\n-     * applicable}\n-     *\n-     * @implSpec The default implementation returns {@link ClassFile#JAVA_1_VERSION}\n-     *\/\n-    default int validSince() {\n-        return ClassFile.JAVA_1_VERSION;\n-    }\n-\n","filename":"src\/java.base\/share\/classes\/java\/lang\/classfile\/AttributeMapper.java","additions":0,"deletions":10,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -212,1 +212,1 @@\n-            ANNOTATION_DEFAULT = new AbstractAttributeMapper<>(NAME_ANNOTATION_DEFAULT, ClassFile.JAVA_5_VERSION) {\n+            ANNOTATION_DEFAULT = new AbstractAttributeMapper<>(NAME_ANNOTATION_DEFAULT) {\n@@ -231,1 +231,1 @@\n-            BOOTSTRAP_METHODS = new AbstractAttributeMapper<>(NAME_BOOTSTRAP_METHODS, ClassFile.JAVA_17_VERSION) {\n+            BOOTSTRAP_METHODS = new AbstractAttributeMapper<>(NAME_BOOTSTRAP_METHODS) {\n@@ -250,1 +250,1 @@\n-            CHARACTER_RANGE_TABLE = new AbstractAttributeMapper<>(NAME_CHARACTER_RANGE_TABLE, true, ClassFile.JAVA_4_VERSION) {\n+            CHARACTER_RANGE_TABLE = new AbstractAttributeMapper<>(NAME_CHARACTER_RANGE_TABLE, true) {\n@@ -354,1 +354,1 @@\n-            ENCLOSING_METHOD = new AbstractAttributeMapper<>(NAME_ENCLOSING_METHOD, ClassFile.JAVA_5_VERSION) {\n+            ENCLOSING_METHOD = new AbstractAttributeMapper<>(NAME_ENCLOSING_METHOD) {\n@@ -470,1 +470,1 @@\n-            LOCAL_VARIABLE_TYPE_TABLE = new AbstractAttributeMapper<>(NAME_LOCAL_VARIABLE_TYPE_TABLE, true, ClassFile.JAVA_5_VERSION) {\n+            LOCAL_VARIABLE_TYPE_TABLE = new AbstractAttributeMapper<>(NAME_LOCAL_VARIABLE_TYPE_TABLE, true) {\n@@ -497,1 +497,1 @@\n-            METHOD_PARAMETERS = new AbstractAttributeMapper<>(NAME_METHOD_PARAMETERS, ClassFile.JAVA_8_VERSION) {\n+            METHOD_PARAMETERS = new AbstractAttributeMapper<>(NAME_METHOD_PARAMETERS) {\n@@ -521,1 +521,1 @@\n-            MODULE = new AbstractAttributeMapper<>(NAME_MODULE, ClassFile.JAVA_9_VERSION) {\n+            MODULE = new AbstractAttributeMapper<>(NAME_MODULE) {\n@@ -566,1 +566,1 @@\n-            MODULE_HASHES = new AbstractAttributeMapper<>(NAME_MODULE_HASHES, ClassFile.JAVA_9_VERSION) {\n+            MODULE_HASHES = new AbstractAttributeMapper<>(NAME_MODULE_HASHES) {\n@@ -592,1 +592,1 @@\n-            MODULE_MAIN_CLASS = new AbstractAttributeMapper<>(NAME_MODULE_MAIN_CLASS, ClassFile.JAVA_9_VERSION) {\n+            MODULE_MAIN_CLASS = new AbstractAttributeMapper<>(NAME_MODULE_MAIN_CLASS) {\n@@ -611,1 +611,1 @@\n-            MODULE_PACKAGES = new AbstractAttributeMapper<>(NAME_MODULE_PACKAGES, ClassFile.JAVA_9_VERSION) {\n+            MODULE_PACKAGES = new AbstractAttributeMapper<>(NAME_MODULE_PACKAGES) {\n@@ -630,1 +630,1 @@\n-            MODULE_RESOLUTION = new AbstractAttributeMapper<>(NAME_MODULE_RESOLUTION, ClassFile.JAVA_9_VERSION) {\n+            MODULE_RESOLUTION = new AbstractAttributeMapper<>(NAME_MODULE_RESOLUTION) {\n@@ -649,1 +649,1 @@\n-            MODULE_TARGET = new AbstractAttributeMapper<>(NAME_MODULE_TARGET, ClassFile.JAVA_9_VERSION) {\n+            MODULE_TARGET = new AbstractAttributeMapper<>(NAME_MODULE_TARGET) {\n@@ -668,1 +668,1 @@\n-            NEST_HOST = new AbstractAttributeMapper<>(NAME_NEST_HOST, ClassFile.JAVA_11_VERSION) {\n+            NEST_HOST = new AbstractAttributeMapper<>(NAME_NEST_HOST) {\n@@ -687,1 +687,1 @@\n-            NEST_MEMBERS = new AbstractAttributeMapper<>(NAME_NEST_MEMBERS, ClassFile.JAVA_11_VERSION) {\n+            NEST_MEMBERS = new AbstractAttributeMapper<>(NAME_NEST_MEMBERS) {\n@@ -706,1 +706,1 @@\n-            PERMITTED_SUBCLASSES = new AbstractAttributeMapper<>(NAME_PERMITTED_SUBCLASSES, ClassFile.JAVA_15_VERSION) {\n+            PERMITTED_SUBCLASSES = new AbstractAttributeMapper<>(NAME_PERMITTED_SUBCLASSES) {\n@@ -725,1 +725,1 @@\n-            RECORD = new AbstractAttributeMapper<>(NAME_RECORD, ClassFile.JAVA_16_VERSION) {\n+            RECORD = new AbstractAttributeMapper<>(NAME_RECORD) {\n@@ -750,1 +750,1 @@\n-            RUNTIME_INVISIBLE_ANNOTATIONS = new AbstractAttributeMapper<>(NAME_RUNTIME_INVISIBLE_ANNOTATIONS, ClassFile.JAVA_5_VERSION) {\n+            RUNTIME_INVISIBLE_ANNOTATIONS = new AbstractAttributeMapper<>(NAME_RUNTIME_INVISIBLE_ANNOTATIONS) {\n@@ -769,1 +769,1 @@\n-            RUNTIME_INVISIBLE_PARAMETER_ANNOTATIONS = new AbstractAttributeMapper<>(NAME_RUNTIME_INVISIBLE_PARAMETER_ANNOTATIONS, ClassFile.JAVA_5_VERSION) {\n+            RUNTIME_INVISIBLE_PARAMETER_ANNOTATIONS = new AbstractAttributeMapper<>(NAME_RUNTIME_INVISIBLE_PARAMETER_ANNOTATIONS) {\n@@ -791,1 +791,1 @@\n-            RUNTIME_INVISIBLE_TYPE_ANNOTATIONS = new AbstractAttributeMapper<>(NAME_RUNTIME_INVISIBLE_TYPE_ANNOTATIONS, ClassFile.JAVA_8_VERSION) {\n+            RUNTIME_INVISIBLE_TYPE_ANNOTATIONS = new AbstractAttributeMapper<>(NAME_RUNTIME_INVISIBLE_TYPE_ANNOTATIONS) {\n@@ -810,1 +810,1 @@\n-            RUNTIME_VISIBLE_ANNOTATIONS = new AbstractAttributeMapper<>(NAME_RUNTIME_VISIBLE_ANNOTATIONS, ClassFile.JAVA_5_VERSION) {\n+            RUNTIME_VISIBLE_ANNOTATIONS = new AbstractAttributeMapper<>(NAME_RUNTIME_VISIBLE_ANNOTATIONS) {\n@@ -829,1 +829,1 @@\n-            RUNTIME_VISIBLE_PARAMETER_ANNOTATIONS = new AbstractAttributeMapper<>(NAME_RUNTIME_VISIBLE_PARAMETER_ANNOTATIONS, ClassFile.JAVA_5_VERSION) {\n+            RUNTIME_VISIBLE_PARAMETER_ANNOTATIONS = new AbstractAttributeMapper<>(NAME_RUNTIME_VISIBLE_PARAMETER_ANNOTATIONS) {\n@@ -851,1 +851,1 @@\n-            RUNTIME_VISIBLE_TYPE_ANNOTATIONS = new AbstractAttributeMapper<>(NAME_RUNTIME_VISIBLE_TYPE_ANNOTATIONS, ClassFile.JAVA_8_VERSION) {\n+            RUNTIME_VISIBLE_TYPE_ANNOTATIONS = new AbstractAttributeMapper<>(NAME_RUNTIME_VISIBLE_TYPE_ANNOTATIONS) {\n@@ -870,1 +870,1 @@\n-            SIGNATURE = new AbstractAttributeMapper<>(NAME_SIGNATURE, ClassFile.JAVA_5_VERSION) {\n+            SIGNATURE = new AbstractAttributeMapper<>(NAME_SIGNATURE) {\n@@ -889,1 +889,1 @@\n-            SOURCE_DEBUG_EXTENSION = new AbstractAttributeMapper<>(NAME_SOURCE_DEBUG_EXTENSION, ClassFile.JAVA_5_VERSION) {\n+            SOURCE_DEBUG_EXTENSION = new AbstractAttributeMapper<>(NAME_SOURCE_DEBUG_EXTENSION) {\n@@ -946,1 +946,1 @@\n-            STACK_MAP_TABLE = new AbstractAttributeMapper<>(NAME_STACK_MAP_TABLE, ClassFile.JAVA_6_VERSION) {\n+            STACK_MAP_TABLE = new AbstractAttributeMapper<>(NAME_STACK_MAP_TABLE) {\n","filename":"src\/java.base\/share\/classes\/java\/lang\/classfile\/Attributes.java","additions":25,"deletions":25,"binary":false,"changes":50,"status":"modified"},{"patch":"@@ -45,0 +45,2 @@\n+ * <p>\n+ * The attribute was introduced in the Java SE Platform version 5.0.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/classfile\/attribute\/AnnotationDefaultAttribute.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -45,0 +45,2 @@\n+ * <p>\n+ * The attribute was introduced in the Java SE Platform version 7.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/classfile\/attribute\/BootstrapMethodsAttribute.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -51,0 +51,2 @@\n+ * <p>\n+ * The attribute was introduced in the Java SE Platform version 5.0.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/classfile\/attribute\/EnclosingMethodAttribute.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -44,0 +44,2 @@\n+ * <p>\n+ * The attribute was introduced in the Java SE Platform version 5.0.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/classfile\/attribute\/LocalVariableTypeTableAttribute.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -45,0 +45,2 @@\n+ * <p>\n+ * The attribute was introduced in the Java SE Platform version 8.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/classfile\/attribute\/MethodParametersAttribute.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -57,0 +57,2 @@\n+ * <p>\n+ * The attribute was introduced in the Java SE Platform version 9.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/classfile\/attribute\/ModuleAttribute.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -46,0 +46,2 @@\n+ * <p>\n+ * The attribute was introduced in the Java SE Platform version 9.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/classfile\/attribute\/ModuleMainClassAttribute.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -49,0 +49,2 @@\n+ * <p>\n+ * The attribute was introduced in the Java SE Platform version 9.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/classfile\/attribute\/ModulePackagesAttribute.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -46,0 +46,2 @@\n+ * <p>\n+ * The attribute was introduced in the Java SE Platform version 11.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/classfile\/attribute\/NestHostAttribute.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -48,0 +48,2 @@\n+ * <p>\n+ * The attribute was introduced in the Java SE Platform version 11.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/classfile\/attribute\/NestMembersAttribute.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -48,0 +48,2 @@\n+ * <p>\n+ * The attribute was introduced in the Java SE Platform version 17.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/classfile\/attribute\/PermittedSubclassesAttribute.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -45,0 +45,2 @@\n+ * <p>\n+ * The attribute was introduced in the Java SE Platform version 16.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/classfile\/attribute\/RecordAttribute.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -44,0 +44,2 @@\n+ * <p>\n+ * The attribute was introduced in the Java SE Platform version 5.0.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/classfile\/attribute\/RuntimeInvisibleAnnotationsAttribute.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -46,0 +46,2 @@\n+ * <p>\n+ * The attribute was introduced in the Java SE Platform version 5.0.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/classfile\/attribute\/RuntimeInvisibleParameterAnnotationsAttribute.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -50,0 +50,2 @@\n+ * <p>\n+ * The attribute was introduced in the Java SE Platform version 8.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/classfile\/attribute\/RuntimeInvisibleTypeAnnotationsAttribute.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -44,0 +44,2 @@\n+ * <p>\n+ * The attribute was introduced in the Java SE Platform version 5.0.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/classfile\/attribute\/RuntimeVisibleAnnotationsAttribute.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -46,0 +46,2 @@\n+ * <p>\n+ * The attribute was introduced in the Java SE Platform version 5.0.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/classfile\/attribute\/RuntimeVisibleParameterAnnotationsAttribute.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -50,0 +50,2 @@\n+ * <p>\n+ * The attribute was introduced in the Java SE Platform version 8.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/classfile\/attribute\/RuntimeVisibleTypeAnnotationsAttribute.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -51,0 +51,2 @@\n+ * <p>\n+ * The attribute was introduced in the Java SE Platform version 5.0.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/classfile\/attribute\/SignatureAttribute.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -42,0 +42,2 @@\n+ * <p>\n+ * The attribute was introduced in the Java SE Platform version 5.0.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/classfile\/attribute\/SourceDebugExtensionAttribute.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -43,0 +43,2 @@\n+ * <p>\n+ * The attribute was introduced in the Java SE Platform version 6.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/classfile\/attribute\/StackMapTableAttribute.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,2 +31,0 @@\n-import static java.lang.classfile.ClassFile.JAVA_1_VERSION;\n-\n@@ -38,1 +36,0 @@\n-    private final int majorVersion;\n@@ -48,11 +45,0 @@\n-        this(name, allowMultiple, JAVA_1_VERSION);\n-    }\n-\n-    public AbstractAttributeMapper(String name,\n-                                   int majorVersion) {\n-        this(name, false, majorVersion);\n-    }\n-\n-    public AbstractAttributeMapper(String name,\n-                                   boolean allowMultiple,\n-                                   int majorVersion) {\n@@ -61,1 +47,0 @@\n-        this.majorVersion = majorVersion;\n@@ -84,5 +69,0 @@\n-    @Override\n-    public int validSince() {\n-        return majorVersion;\n-    }\n-\n@@ -91,2 +71,2 @@\n-        return String.format(\"AttributeMapper[name=%s, allowMultiple=%b, validSince=%d]\",\n-                name, allowMultiple, majorVersion);\n+        return String.format(\"AttributeMapper[name=%s, allowMultiple=%b, stability=%s]\",\n+                name, allowMultiple, stability());\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/AbstractAttributeMapper.java","additions":2,"deletions":22,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -44,0 +44,1 @@\n+import java.lang.classfile.CustomAttribute;\n@@ -143,1 +144,5 @@\n-        ((AbstractElement) element).writeTo(this);\n+        if (element instanceof AbstractElement ae) {\n+            ae.writeTo(this);\n+        } else {\n+            writeAttribute((CustomAttribute)element);\n+        }\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/DirectCodeBuilder.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"}]}