{"files":[{"patch":"@@ -342,1 +342,7 @@\n-                            out.write(array, last, counter - last);\n+                            if(array[counter-1] == '\\r') {\n+                                out.write(array, last, counter - last - 1);\n+                            }\n+                            else\n+                            {\n+                                out.write(array, last, counter - last);\n+                            }\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/DefaultEditorKit.java","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -0,0 +1,168 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.Button;\n+import java.awt.Dialog;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+import java.awt.Panel;\n+import java.awt.TextArea;\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.TimeUnit;\n+import java.util.concurrent.atomic.AtomicReference;\n+\n+import javax.swing.border.EtchedBorder;\n+import javax.swing.JFrame;\n+import javax.swing.JTextPane;\n+import javax.swing.SwingUtilities;\n+import javax.swing.text.BadLocationException;\n+import javax.swing.text.Document;\n+\n+\/*\n+ * @test\n+ * @bug 8180276\n+ * @summary Verifies if getText method returns extra carriage return when\n+ *          mixed with methods of document.\n+ * @key headful\n+ * @run main\/manual ChangeStyleAndAppend\n+ *\/\n+\n+public class ChangeStyleAndAppend extends JFrame {\n+    static Dialog controlDialog;\n+    private AtomicReference<Boolean> testResult = new AtomicReference<>(false);\n+    static final CountDownLatch latch = new CountDownLatch(1);\n+    class MyJTextPane extends JTextPane {\n+        public void appendLine(String s) {\n+            try {\n+                Document doc = this.getDocument();\n+                doc.insertString(doc.getLength(), s + System.lineSeparator(), null);\n+            } catch(BadLocationException e) {\n+                System.err.println(e);\n+            }\n+        }\n+    }\n+\n+    void disposeUI() {\n+        controlDialog.dispose();\n+        this.dispose();\n+    }\n+    public ChangeStyleAndAppend() {\n+        initializeUI();\n+        instructionDialog();\n+    }\n+\n+    private void instructionDialog() {\n+\n+        controlDialog = new Dialog((JFrame)null, \"TextPaneTest\");\n+        String instructions =\n+                \"Verify if Extra space is present between each line in \" +\n+                        \"\\nfirst Text Pane.\" +\n+                        \"\\nIf Extra Space is present then press \\\"Fail\\\",\" +\n+                        \"\\notherwise press \\\"Pass\\\".\";\n+        TextArea messageArea = new TextArea(instructions, 6, 80, TextArea.SCROLLBARS_NONE);\n+        controlDialog.add(\"North\", messageArea);\n+\n+        Button passedButton = new Button(\"Pass\");\n+        passedButton.addActionListener(new ActionListener() {\n+            @Override\n+            public void actionPerformed(ActionEvent e) {\n+                testResult.set(true);\n+                latch.countDown();\n+            }\n+        });\n+\n+        Button failedButton = new Button(\"Fail\");\n+        failedButton.addActionListener(new ActionListener() {\n+            @Override\n+            public void actionPerformed(ActionEvent e) {\n+                testResult.set(false);\n+                latch.countDown();\n+            }\n+        });\n+\n+        Panel buttonPanel = new Panel();\n+        buttonPanel.add(\"West\",passedButton);\n+        buttonPanel.add(\"East\", failedButton);\n+        controlDialog.add(\"South\", buttonPanel);\n+\n+        controlDialog.setBounds(300, 0, 400, 200);\n+        controlDialog.setVisible(true);\n+\n+    }\n+\n+    private void initializeUI() {\n+\n+        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n+        setLayout(new BorderLayout());\n+        MyJTextPane pane0 = new MyJTextPane();\n+        pane0.appendLine(\"MyJTextPane using append() and then calling setText()\");\n+        pane0.appendLine(\"Second line. \");\n+        pane0.appendLine(\"Third line\");\n+        pane0.setText(pane0.getText() + \"At last\" + System.lineSeparator());\n+        pane0.setBorder(new EtchedBorder(EtchedBorder.RAISED));\n+\n+        add(pane0, BorderLayout.NORTH);\n+\n+        MyJTextPane pane = new MyJTextPane();\n+        pane.appendLine(\"MyJTextPane calling appendLine()\");\n+        pane.appendLine(\"Second line. \");\n+        pane.appendLine(\"Third line\");\n+        pane.appendLine(\"At last\");\n+        pane.setBorder(new EtchedBorder(EtchedBorder.RAISED));\n+        add(pane, BorderLayout.CENTER);\n+\n+        JTextPane pane2 = new JTextPane();\n+        pane2.setText(\"Normal JTextPane calling setText()\");\n+        pane2.setText(pane2.getText() + System.lineSeparator() + \"Second line. \");\n+        pane2.setText(pane2.getText() + System.lineSeparator() + \"Third line\");\n+        pane2.setText(pane2.getText() + System.lineSeparator() + \"At last\");\n+        pane2.setBorder(new EtchedBorder(EtchedBorder.RAISED));\n+        add(pane2, BorderLayout.SOUTH);\n+\n+        pack();\n+        setVisible(true);\n+    }\n+\n+    public static void main(String[] args) throws InterruptedException {\n+        final ChangeStyleAndAppend[] frame = new ChangeStyleAndAppend[1];\n+        SwingUtilities.invokeLater(new Runnable() {\n+            @Override\n+            public void run() {\n+                frame[0] = new ChangeStyleAndAppend();\n+            }\n+        });\n+        boolean status = latch.await(5, TimeUnit.MINUTES);\n+        if (!status) {\n+            System.out.println(\"Test timed out.\");\n+        }\n+\n+        frame[0].onCompletion(frame[0].testResult);\n+    }\n+    private void onCompletion(AtomicReference<Boolean> res) {\n+        disposeUI();\n+        if (res.toString() == \"false\") {\n+            throw new RuntimeException(\"Test Failed\");\n+        }\n+    }\n+}\n\\ No newline at end of file\n","filename":"test\/jdk\/javax\/swing\/JTextPane\/8180276\/ChangeStyleAndAppend.java","additions":168,"deletions":0,"binary":false,"changes":168,"status":"added"}]}