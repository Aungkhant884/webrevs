{"files":[{"patch":"@@ -47,1 +47,2 @@\n-public abstract class AbstractCalendar extends CalendarSystem {\n+public sealed abstract class AbstractCalendar extends CalendarSystem\n+        permits BaseCalendar {\n@@ -63,0 +64,1 @@\n+    @Override\n@@ -74,0 +76,1 @@\n+    @Override\n@@ -87,0 +90,1 @@\n+    @Override\n@@ -91,0 +95,1 @@\n+    @Override\n@@ -95,0 +100,1 @@\n+    @Override\n@@ -100,0 +106,1 @@\n+    @Override\n@@ -159,0 +166,1 @@\n+    @Override\n@@ -235,0 +243,1 @@\n+    @Override\n","filename":"src\/java.base\/share\/classes\/sun\/util\/calendar\/AbstractCalendar.java","additions":10,"deletions":1,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -39,1 +39,2 @@\n-public abstract class BaseCalendar extends AbstractCalendar {\n+public sealed abstract class BaseCalendar extends AbstractCalendar\n+        permits Gregorian, JulianCalendar, LocalGregorianCalendar {\n@@ -143,1 +144,2 @@\n-    public abstract static class Date extends CalendarDate {\n+    public sealed abstract static class Date extends CalendarDate\n+            permits Gregorian.Date, ImmutableGregorianDate, JulianCalendar.Date, LocalGregorianCalendar.Date {\n@@ -191,0 +193,1 @@\n+    @Override\n@@ -217,0 +220,1 @@\n+    @Override\n@@ -306,0 +310,1 @@\n+    @Override\n@@ -321,0 +326,1 @@\n+    @Override\n@@ -352,0 +358,1 @@\n+    @Override\n@@ -418,0 +425,1 @@\n+    @Override\n@@ -476,1 +484,1 @@\n-    public static final int getDayOfWeekFromFixedDate(long fixedDate) {\n+    public static int getDayOfWeekFromFixedDate(long fixedDate) {\n@@ -528,0 +536,1 @@\n+    @Override\n","filename":"src\/java.base\/share\/classes\/sun\/util\/calendar\/BaseCalendar.java","additions":12,"deletions":3,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -62,1 +62,2 @@\n-public abstract class CalendarDate implements Cloneable {\n+public sealed abstract class CalendarDate implements Cloneable\n+        permits BaseCalendar.Date {\n@@ -343,0 +344,1 @@\n+    @Override\n@@ -365,0 +367,1 @@\n+    @Override\n@@ -383,0 +386,1 @@\n+    @Override\n","filename":"src\/java.base\/share\/classes\/sun\/util\/calendar\/CalendarDate.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -68,1 +68,1 @@\n-public abstract class CalendarSystem {\n+public sealed abstract class CalendarSystem permits AbstractCalendar {\n","filename":"src\/java.base\/share\/classes\/sun\/util\/calendar\/CalendarSystem.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,4 @@\n-public class CalendarUtils {\n+public final class CalendarUtils {\n+\n+    \/\/ Utility class should not be instantiated\n+    private CalendarUtils() {}\n@@ -39,3 +42,3 @@\n-    public static final boolean isGregorianLeapYear(int gregorianYear) {\n-        return (((gregorianYear % 4) == 0)\n-                && (((gregorianYear % 100) != 0) || ((gregorianYear % 400) == 0)));\n+    public static boolean isGregorianLeapYear(int gregorianYear) {\n+        return (((gregorianYear % 4) == 0) && (((gregorianYear % 100) != 0)\n+                || ((gregorianYear % 400) == 0)));\n@@ -54,1 +57,1 @@\n-    public static final boolean isJulianLeapYear(int normalizedJulianYear) {\n+    public static boolean isJulianLeapYear(int normalizedJulianYear) {\n@@ -67,1 +70,1 @@\n-    public static final long floorDivide(long n, long d) {\n+    public static long floorDivide(long n, long d) {\n@@ -81,1 +84,1 @@\n-    public static final int floorDivide(int n, int d) {\n+    public static int floorDivide(int n, int d) {\n@@ -99,1 +102,1 @@\n-    public static final int floorDivide(int n, int d, int[] r) {\n+    public static int floorDivide(int n, int d, int[] r) {\n@@ -109,1 +112,1 @@\n-    public static final long mod(long x, long y) {\n+    public static long mod(long x, long y) {\n@@ -113,1 +116,1 @@\n-    public static final int mod(int x, int y) {\n+    public static int mod(int x, int y) {\n@@ -117,1 +120,1 @@\n-    public static final int amod(int x, int y) {\n+    public static int amod(int x, int y) {\n@@ -122,1 +125,1 @@\n-    public static final long amod(long x, long y) {\n+    public static long amod(long x, long y) {\n@@ -130,1 +133,1 @@\n-    public static final StringBuilder sprintf0d(StringBuilder sb, int value, int width) {\n+    public static StringBuilder sprintf0d(StringBuilder sb, int value, int width) {\n@@ -149,1 +152,1 @@\n-    public static final StringBuffer sprintf0d(StringBuffer sb, int value, int width) {\n+    public static StringBuffer sprintf0d(StringBuffer sb, int value, int width) {\n","filename":"src\/java.base\/share\/classes\/sun\/util\/calendar\/CalendarUtils.java","additions":17,"deletions":14,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2005, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n-public class Gregorian extends BaseCalendar {\n+public final class Gregorian extends BaseCalendar {\n@@ -39,2 +39,2 @@\n-    static class Date extends BaseCalendar.Date {\n-        protected Date() {\n+    static final class Date extends BaseCalendar.Date {\n+        Date() {\n@@ -44,1 +44,1 @@\n-        protected Date(TimeZone zone) {\n+        Date(TimeZone zone) {\n@@ -48,0 +48,1 @@\n+        @Override\n@@ -52,0 +53,1 @@\n+        @Override\n@@ -60,0 +62,1 @@\n+    @Override\n@@ -64,0 +67,1 @@\n+    @Override\n@@ -68,0 +72,1 @@\n+    @Override\n@@ -72,0 +77,1 @@\n+    @Override\n@@ -76,0 +82,1 @@\n+    @Override\n@@ -80,0 +87,1 @@\n+    @Override\n@@ -84,0 +92,1 @@\n+    @Override\n","filename":"src\/java.base\/share\/classes\/sun\/util\/calendar\/Gregorian.java","additions":14,"deletions":5,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+import java.util.Objects;\n@@ -30,1 +31,5 @@\n-class ImmutableGregorianDate extends BaseCalendar.Date {\n+\/*\n+ * This class is immutable, and thus any methods from the base classes\n+ * that can modify the state are overridden to throw an exception.\n+ *\/\n+final class ImmutableGregorianDate extends BaseCalendar.Date {\n@@ -34,4 +39,1 @@\n-        if (date == null) {\n-            throw new NullPointerException();\n-        }\n-        this.date = date;\n+        this.date = Objects.requireNonNull(date);\n@@ -40,0 +42,1 @@\n+    @Override\n@@ -44,0 +47,1 @@\n+    @Override\n@@ -48,0 +52,1 @@\n+    @Override\n@@ -52,0 +57,1 @@\n+    @Override\n@@ -56,0 +62,1 @@\n+    @Override\n@@ -60,0 +67,1 @@\n+    @Override\n@@ -64,0 +72,1 @@\n+    @Override\n@@ -68,0 +77,1 @@\n+    @Override\n@@ -72,0 +82,1 @@\n+    @Override\n@@ -76,0 +87,1 @@\n+    @Override\n@@ -80,0 +92,1 @@\n+    @Override\n@@ -84,0 +97,1 @@\n+    @Override\n@@ -88,0 +102,1 @@\n+    @Override\n@@ -92,0 +107,1 @@\n+    @Override\n@@ -96,0 +112,1 @@\n+    @Override\n@@ -100,0 +117,1 @@\n+    @Override\n@@ -104,0 +122,1 @@\n+    @Override\n@@ -108,0 +127,1 @@\n+    @Override\n@@ -112,0 +132,1 @@\n+    @Override\n@@ -116,0 +137,1 @@\n+    @Override\n@@ -120,0 +142,1 @@\n+    @Override\n@@ -124,0 +147,1 @@\n+    @Override\n@@ -128,0 +152,1 @@\n+    @Override\n@@ -132,0 +157,1 @@\n+    @Override\n@@ -136,0 +162,1 @@\n+    @Override\n@@ -140,0 +167,1 @@\n+    @Override\n@@ -144,0 +172,1 @@\n+    @Override\n@@ -148,0 +177,1 @@\n+    @Override\n@@ -152,0 +182,1 @@\n+    @Override\n@@ -156,0 +187,1 @@\n+    @Override\n@@ -160,0 +192,1 @@\n+    @Override\n@@ -164,0 +197,1 @@\n+    @Override\n@@ -168,1 +202,3 @@\n-        if (!(obj instanceof ImmutableGregorianDate)) {\n+        if (obj instanceof ImmutableGregorianDate igd) {\n+            return date.equals(igd.date);\n+        } else {\n@@ -171,1 +207,0 @@\n-        return date.equals(((ImmutableGregorianDate) obj).date);\n@@ -174,0 +209,1 @@\n+    @Override\n@@ -178,0 +214,1 @@\n+    @Override\n@@ -182,0 +219,1 @@\n+    @Override\n@@ -186,0 +224,1 @@\n+    @Override\n@@ -190,0 +229,1 @@\n+    @Override\n@@ -194,0 +234,1 @@\n+    @Override\n@@ -198,0 +239,1 @@\n+    @Override\n@@ -202,0 +244,1 @@\n+    @Override\n@@ -206,0 +249,1 @@\n+    @Override\n@@ -210,0 +254,1 @@\n+    @Override\n@@ -214,0 +259,1 @@\n+    @Override\n","filename":"src\/java.base\/share\/classes\/sun\/util\/calendar\/ImmutableGregorianDate.java","additions":53,"deletions":7,"binary":false,"changes":60,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2005, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-public class JulianCalendar extends BaseCalendar {\n+public final class JulianCalendar extends BaseCalendar {\n@@ -47,2 +47,2 @@\n-    private static class Date extends BaseCalendar.Date {\n-        protected Date() {\n+    static final class Date extends BaseCalendar.Date {\n+        Date() {\n@@ -53,1 +53,1 @@\n-        protected Date(TimeZone zone) {\n+        Date(TimeZone zone) {\n@@ -58,0 +58,1 @@\n+        @Override\n@@ -69,1 +70,1 @@\n-        protected void setKnownEra(Era era) {\n+        void setKnownEra(Era era) {\n@@ -73,0 +74,1 @@\n+        @Override\n@@ -84,0 +86,1 @@\n+        @Override\n@@ -94,0 +97,1 @@\n+        @Override\n@@ -117,0 +121,1 @@\n+    @Override\n@@ -121,0 +126,1 @@\n+    @Override\n@@ -125,0 +131,1 @@\n+    @Override\n@@ -129,0 +136,1 @@\n+    @Override\n@@ -133,0 +141,1 @@\n+    @Override\n@@ -137,0 +146,1 @@\n+    @Override\n@@ -141,0 +151,1 @@\n+    @Override\n@@ -148,0 +159,1 @@\n+    @Override\n@@ -185,0 +197,1 @@\n+    @Override\n@@ -219,0 +232,1 @@\n+    @Override\n@@ -220,2 +234,1 @@\n-        int year = (int) CalendarUtils.floorDivide(4 * (fixedDate - JULIAN_EPOCH) + 1464, 1461);\n-        return year;\n+        return (int) CalendarUtils.floorDivide(4 * (fixedDate - JULIAN_EPOCH) + 1464, 1461);\n@@ -224,0 +237,1 @@\n+    @Override\n@@ -225,4 +239,2 @@\n-        \/\/ TODO: should replace this with a faster calculation, such\n-        \/\/ as cache table lookup\n-        long fixedDate = getFixedDate(date);\n-        return getDayOfWeekFromFixedDate(fixedDate);\n+        \/\/ TODO: should replace with faster calculation, e.g. cache table lookup\n+        return getDayOfWeekFromFixedDate(getFixedDate(date));\n@@ -231,0 +243,1 @@\n+    @Override\n","filename":"src\/java.base\/share\/classes\/sun\/util\/calendar\/JulianCalendar.java","additions":25,"deletions":12,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-public class LocalGregorianCalendar extends BaseCalendar {\n+public final class LocalGregorianCalendar extends BaseCalendar {\n@@ -66,1 +66,2 @@\n-    public static class Date extends BaseCalendar.Date {\n+    \/\/ Used within java.time and java.util\n+    public static final class Date extends BaseCalendar.Date {\n@@ -68,1 +69,1 @@\n-        protected Date() {\n+        Date() {\n@@ -72,1 +73,1 @@\n-        protected Date(TimeZone zone) {\n+        Date(TimeZone zone) {\n","filename":"src\/java.base\/share\/classes\/sun\/util\/calendar\/LocalGregorianCalendar.java","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"}]}