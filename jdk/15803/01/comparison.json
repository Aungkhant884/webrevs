{"files":[{"patch":"@@ -1323,1 +1323,1 @@\n-            CalendarUtils.sprintf0d(buffer, num, width);\n+            buffer.append(String.format(Locale.ROOT, \"%0\"+ width +\"d\", num));\n@@ -1343,1 +1343,1 @@\n-            CalendarUtils.sprintf0d(buffer, value \/ 60, 2);\n+            buffer.append(String.format(Locale.ROOT, \"%0\"+ 2 +\"d\", value \/ 60));\n@@ -1351,1 +1351,1 @@\n-            CalendarUtils.sprintf0d(buffer, value % 60, 2);\n+            buffer.append(String.format(Locale.ROOT, \"%0\"+ 2 +\"d\", value % 60));\n","filename":"src\/java.base\/share\/classes\/java\/text\/SimpleDateFormat.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1038,5 +1038,4 @@\n-        CalendarUtils.sprintf0d(sb, date.getDayOfMonth(), 2).append(' '); \/\/ dd\n-\n-        CalendarUtils.sprintf0d(sb, date.getHours(), 2).append(':');   \/\/ HH\n-        CalendarUtils.sprintf0d(sb, date.getMinutes(), 2).append(':'); \/\/ mm\n-        CalendarUtils.sprintf0d(sb, date.getSeconds(), 2).append(' '); \/\/ ss\n+        sb.append(String.format(Locale.ROOT, \"%0\"+2+\"d\", date.getDayOfMonth())).append(' '); \/\/ dd\n+        sb.append(String.format(Locale.ROOT, \"%0\"+2+\"d\", date.getHours())).append(':'); \/\/ HH\n+        sb.append(String.format(Locale.ROOT, \"%0\"+2+\"d\", date.getMinutes())).append(':'); \/\/ mm\n+        sb.append(String.format(Locale.ROOT, \"%0\"+2+\"d\", date.getSeconds())).append(' '); \/\/ ss\n@@ -1058,1 +1057,1 @@\n-    private static final StringBuilder convertToAbbr(StringBuilder sb, String name) {\n+    private static StringBuilder convertToAbbr(StringBuilder sb, String name) {\n@@ -1125,1 +1124,1 @@\n-        CalendarUtils.sprintf0d(sb, date.getDayOfMonth(), 1).append(' '); \/\/ d\n+        sb.append(String.format(Locale.ROOT, \"%0\"+1+\"d\", date.getDayOfMonth())).append(' '); \/\/ d\n@@ -1128,3 +1127,4 @@\n-        CalendarUtils.sprintf0d(sb, date.getHours(), 2).append(':');      \/\/ HH\n-        CalendarUtils.sprintf0d(sb, date.getMinutes(), 2).append(':');    \/\/ mm\n-        CalendarUtils.sprintf0d(sb, date.getSeconds(), 2);                \/\/ ss\n+\n+        sb.append(String.format(Locale.ROOT, \"%0\"+2+\"d\", date.getHours())).append(':'); \/\/ HH\n+        sb.append(String.format(Locale.ROOT, \"%0\"+2+\"d\", date.getMinutes())).append(':'); \/\/ mm\n+        sb.append(String.format(Locale.ROOT, \"%0\"+2+\"d\", date.getSeconds())); \/\/ ss\n","filename":"src\/java.base\/share\/classes\/java\/util\/Date.java","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -47,1 +47,2 @@\n-public abstract class AbstractCalendar extends CalendarSystem {\n+public sealed abstract class AbstractCalendar extends CalendarSystem\n+        permits BaseCalendar {\n@@ -63,0 +64,1 @@\n+    @Override\n@@ -74,0 +76,1 @@\n+    @Override\n@@ -87,0 +90,1 @@\n+    @Override\n@@ -91,0 +95,1 @@\n+    @Override\n@@ -95,0 +100,1 @@\n+    @Override\n@@ -100,0 +106,1 @@\n+    @Override\n@@ -159,0 +166,1 @@\n+    @Override\n@@ -248,0 +256,1 @@\n+    @Override\n","filename":"src\/java.base\/share\/classes\/sun\/util\/calendar\/AbstractCalendar.java","additions":10,"deletions":1,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -39,1 +39,2 @@\n-public abstract class BaseCalendar extends AbstractCalendar {\n+public sealed abstract class BaseCalendar extends AbstractCalendar\n+        permits Gregorian, JulianCalendar, LocalGregorianCalendar {\n@@ -143,1 +144,2 @@\n-    public abstract static class Date extends CalendarDate {\n+    public sealed abstract static class Date extends CalendarDate\n+            permits Gregorian.Date, ImmutableGregorianDate, JulianCalendar.Date, LocalGregorianCalendar.Date {\n@@ -191,0 +193,1 @@\n+    @Override\n@@ -217,0 +220,1 @@\n+    @Override\n@@ -306,0 +310,1 @@\n+    @Override\n@@ -321,0 +326,1 @@\n+    @Override\n@@ -352,0 +358,1 @@\n+    @Override\n@@ -418,0 +425,1 @@\n+    @Override\n@@ -476,1 +484,1 @@\n-    public static final int getDayOfWeekFromFixedDate(long fixedDate) {\n+    public static int getDayOfWeekFromFixedDate(long fixedDate) {\n@@ -528,0 +536,1 @@\n+    @Override\n","filename":"src\/java.base\/share\/classes\/sun\/util\/calendar\/BaseCalendar.java","additions":12,"deletions":3,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -63,1 +63,2 @@\n-public abstract class CalendarDate implements Cloneable {\n+public sealed abstract class CalendarDate implements Cloneable\n+        permits BaseCalendar.Date {\n@@ -401,7 +402,7 @@\n-        CalendarUtils.sprintf0d(sb, year, 4).append('-');\n-        CalendarUtils.sprintf0d(sb, month, 2).append('-');\n-        CalendarUtils.sprintf0d(sb, dayOfMonth, 2).append('T');\n-        CalendarUtils.sprintf0d(sb, hours, 2).append(':');\n-        CalendarUtils.sprintf0d(sb, minutes, 2).append(':');\n-        CalendarUtils.sprintf0d(sb, seconds, 2).append('.');\n-        CalendarUtils.sprintf0d(sb, millis, 3);\n+        sb.append(String.format(Locale.ROOT, \"%0\"+4+\"d\", year)).append('-');\n+        sb.append(String.format(Locale.ROOT, \"%0\"+2+\"d\", month)).append('-');\n+        sb.append(String.format(Locale.ROOT, \"%0\"+2+\"d\", dayOfMonth)).append('T');\n+        sb.append(String.format(Locale.ROOT, \"%0\"+2+\"d\", hours)).append(':');\n+        sb.append(String.format(Locale.ROOT, \"%0\"+2+\"d\", minutes)).append(':');\n+        sb.append(String.format(Locale.ROOT, \"%0\"+2+\"d\", seconds)).append('.');\n+        sb.append(String.format(Locale.ROOT, \"%0\"+3+\"d\", millis));\n@@ -422,2 +423,2 @@\n-            CalendarUtils.sprintf0d(sb, offset \/ 60, 2);\n-            CalendarUtils.sprintf0d(sb, offset % 60, 2);\n+            sb.append(String.format(Locale.ROOT, \"%0\"+2+\"d\", offset \/ 60));\n+            sb.append(String.format(Locale.ROOT, \"%0\"+2+\"d\", offset % 60));\n","filename":"src\/java.base\/share\/classes\/sun\/util\/calendar\/CalendarDate.java","additions":11,"deletions":10,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -68,1 +68,1 @@\n-public abstract class CalendarSystem {\n+public sealed abstract class CalendarSystem permits AbstractCalendar {\n","filename":"src\/java.base\/share\/classes\/sun\/util\/calendar\/CalendarSystem.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,4 @@\n-public class CalendarUtils {\n+public final class CalendarUtils {\n+\n+    \/\/ Utility class should not be instantiated\n+    private CalendarUtils() {}\n@@ -39,3 +42,3 @@\n-    public static final boolean isGregorianLeapYear(int gregorianYear) {\n-        return (((gregorianYear % 4) == 0)\n-                && (((gregorianYear % 100) != 0) || ((gregorianYear % 400) == 0)));\n+    public static boolean isGregorianLeapYear(int gregorianYear) {\n+        return (((gregorianYear % 4) == 0) && (((gregorianYear % 100) != 0)\n+                || ((gregorianYear % 400) == 0)));\n@@ -54,1 +57,1 @@\n-    public static final boolean isJulianLeapYear(int normalizedJulianYear) {\n+    public static boolean isJulianLeapYear(int normalizedJulianYear) {\n@@ -67,1 +70,1 @@\n-    public static final long floorDivide(long n, long d) {\n+    public static long floorDivide(long n, long d) {\n@@ -81,1 +84,1 @@\n-    public static final int floorDivide(int n, int d) {\n+    public static int floorDivide(int n, int d) {\n@@ -99,1 +102,1 @@\n-    public static final int floorDivide(int n, int d, int[] r) {\n+    public static int floorDivide(int n, int d, int[] r) {\n@@ -109,1 +112,1 @@\n-    public static final long mod(long x, long y) {\n+    public static long mod(long x, long y) {\n@@ -113,1 +116,1 @@\n-    public static final int mod(int x, int y) {\n+    public static int mod(int x, int y) {\n@@ -117,1 +120,1 @@\n-    public static final int amod(int x, int y) {\n+    public static int amod(int x, int y) {\n@@ -122,1 +125,1 @@\n-    public static final long amod(long x, long y) {\n+    public static long amod(long x, long y) {\n@@ -126,41 +129,0 @@\n-\n-    \/**\n-     * Mimics sprintf(buf, \"%0*d\", decaimal, width).\n-     *\/\n-    public static final StringBuilder sprintf0d(StringBuilder sb, int value, int width) {\n-        long d = value;\n-        if (d < 0) {\n-            sb.append('-');\n-            d = -d;\n-            --width;\n-        }\n-        int n = 10;\n-        for (int i = 2; i < width; i++) {\n-            n *= 10;\n-        }\n-        for (int i = 1; i < width && d < n; i++) {\n-            sb.append('0');\n-            n \/= 10;\n-        }\n-        sb.append(d);\n-        return sb;\n-    }\n-\n-    public static final StringBuffer sprintf0d(StringBuffer sb, int value, int width) {\n-        long d = value;\n-        if (d < 0) {\n-            sb.append('-');\n-            d = -d;\n-            --width;\n-        }\n-        int n = 10;\n-        for (int i = 2; i < width; i++) {\n-            n *= 10;\n-        }\n-        for (int i = 1; i < width && d < n; i++) {\n-            sb.append('0');\n-            n \/= 10;\n-        }\n-        sb.append(d);\n-        return sb;\n-    }\n","filename":"src\/java.base\/share\/classes\/sun\/util\/calendar\/CalendarUtils.java","additions":15,"deletions":53,"binary":false,"changes":68,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2005, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n-public class Gregorian extends BaseCalendar {\n+public final class Gregorian extends BaseCalendar {\n@@ -39,2 +39,2 @@\n-    static class Date extends BaseCalendar.Date {\n-        protected Date() {\n+    static final class Date extends BaseCalendar.Date {\n+        Date() {\n@@ -44,1 +44,1 @@\n-        protected Date(TimeZone zone) {\n+        Date(TimeZone zone) {\n@@ -48,0 +48,1 @@\n+        @Override\n@@ -52,0 +53,1 @@\n+        @Override\n@@ -60,0 +62,1 @@\n+    @Override\n@@ -64,0 +67,1 @@\n+    @Override\n@@ -68,0 +72,1 @@\n+    @Override\n@@ -72,0 +77,1 @@\n+    @Override\n@@ -76,0 +82,1 @@\n+    @Override\n@@ -80,0 +87,1 @@\n+    @Override\n@@ -84,0 +92,1 @@\n+    @Override\n","filename":"src\/java.base\/share\/classes\/sun\/util\/calendar\/Gregorian.java","additions":14,"deletions":5,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+import java.util.Objects;\n@@ -31,1 +32,5 @@\n-class ImmutableGregorianDate extends BaseCalendar.Date {\n+\/*\n+ * This class is immutable, and thus any methods from the base classes\n+ * that can modify the state are overridden to throw an exception.\n+ *\/\n+final class ImmutableGregorianDate extends BaseCalendar.Date {\n@@ -35,4 +40,1 @@\n-        if (date == null) {\n-            throw new NullPointerException();\n-        }\n-        this.date = date;\n+        this.date = Objects.requireNonNull(date);\n@@ -41,0 +43,1 @@\n+    @Override\n@@ -45,0 +48,1 @@\n+    @Override\n@@ -49,0 +53,1 @@\n+    @Override\n@@ -53,0 +58,1 @@\n+    @Override\n@@ -57,0 +63,1 @@\n+    @Override\n@@ -61,0 +68,1 @@\n+    @Override\n@@ -65,0 +73,1 @@\n+    @Override\n@@ -69,0 +78,1 @@\n+    @Override\n@@ -73,0 +83,1 @@\n+    @Override\n@@ -77,0 +88,1 @@\n+    @Override\n@@ -81,0 +93,1 @@\n+    @Override\n@@ -85,0 +98,1 @@\n+    @Override\n@@ -89,0 +103,1 @@\n+    @Override\n@@ -93,0 +108,1 @@\n+    @Override\n@@ -97,0 +113,1 @@\n+    @Override\n@@ -101,0 +118,1 @@\n+    @Override\n@@ -105,0 +123,1 @@\n+    @Override\n@@ -109,0 +128,1 @@\n+    @Override\n@@ -113,0 +133,1 @@\n+    @Override\n@@ -117,0 +138,1 @@\n+    @Override\n@@ -121,0 +143,1 @@\n+    @Override\n@@ -125,0 +148,1 @@\n+    @Override\n@@ -129,0 +153,1 @@\n+    @Override\n@@ -133,0 +158,1 @@\n+    @Override\n@@ -137,0 +163,1 @@\n+    @Override\n@@ -141,0 +168,1 @@\n+    @Override\n@@ -145,0 +173,1 @@\n+    @Override\n@@ -149,0 +178,1 @@\n+    @Override\n@@ -153,0 +183,1 @@\n+    @Override\n@@ -157,0 +188,1 @@\n+    @Override\n@@ -161,0 +193,1 @@\n+    @Override\n@@ -165,0 +198,1 @@\n+    @Override\n@@ -169,0 +203,1 @@\n+    @Override\n@@ -173,0 +208,1 @@\n+    @Override\n@@ -183,0 +219,1 @@\n+    @Override\n@@ -187,0 +224,1 @@\n+    @Override\n@@ -191,0 +229,1 @@\n+    @Override\n@@ -195,0 +234,1 @@\n+    @Override\n@@ -199,0 +239,1 @@\n+    @Override\n@@ -203,0 +244,1 @@\n+    @Override\n@@ -207,0 +249,1 @@\n+    @Override\n@@ -211,0 +254,1 @@\n+    @Override\n@@ -215,0 +259,1 @@\n+    @Override\n@@ -219,0 +264,1 @@\n+    @Override\n@@ -223,0 +269,1 @@\n+    @Override\n","filename":"src\/java.base\/share\/classes\/sun\/util\/calendar\/ImmutableGregorianDate.java","additions":52,"deletions":5,"binary":false,"changes":57,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2005, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+import java.util.Locale;\n@@ -36,1 +37,1 @@\n-public class JulianCalendar extends BaseCalendar {\n+public final class JulianCalendar extends BaseCalendar {\n@@ -47,2 +48,2 @@\n-    private static class Date extends BaseCalendar.Date {\n-        protected Date() {\n+    static final class Date extends BaseCalendar.Date {\n+        Date() {\n@@ -53,1 +54,1 @@\n-        protected Date(TimeZone zone) {\n+        Date(TimeZone zone) {\n@@ -58,0 +59,1 @@\n+        @Override\n@@ -69,1 +71,1 @@\n-        protected void setKnownEra(Era era) {\n+        void setKnownEra(Era era) {\n@@ -73,0 +75,1 @@\n+        @Override\n@@ -84,0 +87,1 @@\n+        @Override\n@@ -94,0 +98,1 @@\n+        @Override\n@@ -106,2 +111,2 @@\n-            CalendarUtils.sprintf0d(sb, getMonth(), 2).append('-');\n-            CalendarUtils.sprintf0d(sb, getDayOfMonth(), 2);\n+            sb.append(String.format(Locale.ROOT, \"%0\"+2+\"d\", getMonth())).append('-');\n+            sb.append(String.format(Locale.ROOT, \"%0\"+2+\"d\", getDayOfMonth()));\n@@ -117,0 +122,1 @@\n+    @Override\n@@ -121,0 +127,1 @@\n+    @Override\n@@ -125,0 +132,1 @@\n+    @Override\n@@ -129,0 +137,1 @@\n+    @Override\n@@ -133,0 +142,1 @@\n+    @Override\n@@ -137,0 +147,1 @@\n+    @Override\n@@ -141,0 +152,1 @@\n+    @Override\n@@ -148,0 +160,1 @@\n+    @Override\n@@ -185,0 +198,1 @@\n+    @Override\n@@ -219,0 +233,1 @@\n+    @Override\n@@ -220,2 +235,1 @@\n-        int year = (int) CalendarUtils.floorDivide(4 * (fixedDate - JULIAN_EPOCH) + 1464, 1461);\n-        return year;\n+        return (int) CalendarUtils.floorDivide(4 * (fixedDate - JULIAN_EPOCH) + 1464, 1461);\n@@ -224,0 +238,1 @@\n+    @Override\n@@ -225,4 +240,2 @@\n-        \/\/ TODO: should replace this with a faster calculation, such\n-        \/\/ as cache table lookup\n-        long fixedDate = getFixedDate(date);\n-        return getDayOfWeekFromFixedDate(fixedDate);\n+        \/\/ TODO: should replace with faster calculation, e.g. cache table lookup\n+        return getDayOfWeekFromFixedDate(getFixedDate(date));\n@@ -231,0 +244,1 @@\n+    @Override\n","filename":"src\/java.base\/share\/classes\/sun\/util\/calendar\/JulianCalendar.java","additions":28,"deletions":14,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+import java.util.Locale;\n@@ -39,1 +40,1 @@\n-public class LocalGregorianCalendar extends BaseCalendar {\n+public final class LocalGregorianCalendar extends BaseCalendar {\n@@ -66,1 +67,2 @@\n-    public static class Date extends BaseCalendar.Date {\n+    \/\/ Used within java.time and java.util\n+    public static final class Date extends BaseCalendar.Date {\n@@ -68,1 +70,1 @@\n-        protected Date() {\n+        Date() {\n@@ -72,1 +74,1 @@\n-        protected Date(TimeZone zone) {\n+        Date(TimeZone zone) {\n@@ -134,2 +136,2 @@\n-            CalendarUtils.sprintf0d(sb, getMonth(), 2).append('.');\n-            CalendarUtils.sprintf0d(sb, getDayOfMonth(), 2);\n+            sb.append(String.format(Locale.ROOT, \"%0\"+2+\"d\", getMonth())).append('.');\n+            sb.append(String.format(Locale.ROOT, \"%0\"+2+\"d\", getDayOfMonth()));\n","filename":"src\/java.base\/share\/classes\/sun\/util\/calendar\/LocalGregorianCalendar.java","additions":8,"deletions":6,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+import java.util.Locale;\n@@ -375,3 +376,3 @@\n-        CalendarUtils.sprintf0d(sb, cal.get(YEAR), 4).append('-');\n-        CalendarUtils.sprintf0d(sb, cal.get(MONTH)+1, 2).append('-');\n-        CalendarUtils.sprintf0d(sb, cal.get(DAY_OF_MONTH), 2);\n+        sb.append(String.format(Locale.ROOT, \"%0\"+4+\"d\", cal.get(YEAR))).append('-');\n+        sb.append(String.format(Locale.ROOT, \"%0\"+2+\"d\", cal.get(MONTH)+1)).append('-');\n+        sb.append(String.format(Locale.ROOT, \"%0\"+2+\"d\", cal.get(DAY_OF_MONTH)));\n@@ -383,4 +384,4 @@\n-        CalendarUtils.sprintf0d(sb, cal.get(HOUR_OF_DAY), 2).append(':');\n-        CalendarUtils.sprintf0d(sb, cal.get(MINUTE), 2).append(':');\n-        CalendarUtils.sprintf0d(sb, cal.get(SECOND),2 ).append('.');\n-        CalendarUtils.sprintf0d(sb, cal.get(MILLISECOND), 3);\n+        sb.append(String.format(Locale.ROOT, \"%0\"+2+\"d\", cal.get(HOUR_OF_DAY))).append(':');\n+        sb.append(String.format(Locale.ROOT, \"%0\"+2+\"d\", cal.get(MINUTE))).append(':');\n+        sb.append(String.format(Locale.ROOT, \"%0\"+2+\"d\", cal.get(SECOND))).append('.');\n+        sb.append(String.format(Locale.ROOT, \"%0\"+3+\"d\", cal.get(MILLISECOND)));\n@@ -402,2 +403,2 @@\n-            CalendarUtils.sprintf0d(sb, offset \/ 60, 2);\n-            CalendarUtils.sprintf0d(sb, offset % 60, 2);\n+            sb.append(String.format(Locale.ROOT, \"%0\"+2+\"d\", offset \/ 60));\n+            sb.append(String.format(Locale.ROOT, \"%0\"+2+\"d\", offset % 60));\n","filename":"test\/jdk\/java\/util\/Calendar\/CalendarTestScripts\/CalendarAdapter.java","additions":11,"deletions":10,"binary":false,"changes":21,"status":"modified"}]}