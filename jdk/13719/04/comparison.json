{"files":[{"patch":"@@ -0,0 +1,79 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test\n+ * @bug 8292755\n+ * @summary InternalError seen while throwing undefined exception\n+ * @modules\n+ *     jdk.compiler\/com.sun.tools.javac.api\n+ *     jdk.compiler\/com.sun.tools.javac.main\n+ *     jdk.jshell\/jdk.internal.jshell.tool:open\n+ *     jdk.jshell\/jdk.internal.jshell.tool.resources:open\n+ *     jdk.jshell\/jdk.jshell:open\n+ * @library \/tools\/lib\n+ * @build toolbox.ToolBox toolbox.JarTask toolbox.JavacTask\n+ * @build Compiler UITesting\n+ * @build UndefinedClassTest\n+ * @run testng UndefinedClassTest\n+ *\/\n+\n+import org.testng.annotations.Test;\n+\n+@Test\n+public class UndefinedClassTest extends UITesting {\n+\n+    public UndefinedClassTest() {\n+        super(true);\n+    }\n+\n+    public void testUndefinedClassWithStaticAccess() throws Exception{\n+        String code = \"@FunctionalInterface\\n\" +\n+                \"interface RunnableWithThrowable {\\n\" +\n+                \" void run() throws Throwable;\\n\" +\n+                \"\\n\" +\n+                \" static RunnableWithThrowable getInstance() {\\n\" +\n+                \" return () -> { throw new NotExist(); };\\n\" +\n+                \" }\\n\" +\n+                \"}\";\n+        doRunTest((inputSink, out) -> {\n+            inputSink.write(code + \"\\n\");\n+            waitOutput(out, \"NotExist\");\n+        });\n+    }\n+\n+    public void testUndefinedClassWithDefaultAccess() throws Exception{\n+        String code = \"@FunctionalInterface\\n\" +\n+                \"interface RunnableWithThrowable {\\n\" +\n+                \" void run() throws Throwable;\\n\" +\n+                \"\\n\" +\n+                \" default RunnableWithThrowable getInstance() {\\n\" +\n+                \" return () -> { throw new NotExist(); };\\n\" +\n+                \" }\\n\" +\n+                \"}\";\n+        doRunTest((inputSink, out) -> {\n+            inputSink.write(code + \"\\n\");\n+            waitOutput(out, \"NotExist\");\n+        });\n+    }\n+}\n","filename":"test\/langtools\/jdk\/jshell\/UndefinedClassTest.java","additions":79,"deletions":0,"binary":false,"changes":79,"status":"added"}]}