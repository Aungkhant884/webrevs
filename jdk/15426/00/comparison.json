{"files":[{"patch":"@@ -64,0 +64,2 @@\n+    private static boolean loggedExitOrHalt = false;\n+\n@@ -148,0 +150,2 @@\n+        logRuntimeExitOrHalt(status, false);         \/\/ Log without holding the lock;\n+\n@@ -160,1 +164,1 @@\n-        logRuntimeExit(status);         \/\/ Log without holding the lock;\n+        logRuntimeExitOrHalt(status, true);         \/\/ Log without holding the lock;\n@@ -172,1 +176,1 @@\n-    \/* Locate the logger and log the Runtime.exit(status).\n+    \/* Locate the logger and log the Runtime.exit(status) or Runtime.halt(status).\n@@ -175,1 +179,3 @@\n-    private static void logRuntimeExit(int status) {\n+    private static void logRuntimeExitOrHalt(int status, boolean isExit) {\n+        if (loggedExitOrHalt) return;\n+        String method = isExit ? \"exit\" : \"halt\";\n@@ -179,2 +185,2 @@\n-                Throwable throwable = new Throwable(\"Runtime.exit(\" + status + \")\");\n-                log.log(System.Logger.Level.DEBUG, \"Runtime.exit() called with status: \" + status,\n+                Throwable throwable = new Throwable(\"Runtime.\" + method + \"(\" + status + \")\");\n+                log.log(System.Logger.Level.DEBUG, \"Runtime.\" + method + \"() called with status: \" + status,\n@@ -182,0 +188,1 @@\n+                loggedExitOrHalt = true;\n@@ -186,1 +193,1 @@\n-                System.err.println(\"Runtime.exit(\" + status + \") logging failed: \" +\n+                System.err.println(\"Runtime.\" + method + \"(\" + status + \") logging failed: \" +\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Shutdown.java","additions":13,"deletions":6,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -43,2 +43,2 @@\n- * @summary verify logging of call to System.exit or Runtime.exit.\n- * @run junit\/othervm RuntimeExitLogTest\n+ * @summary verify logging of call to Runtime.halt.\n+ * @run junit\/othervm RuntimeHaltLogTest\n@@ -47,1 +47,1 @@\n-public class RuntimeExitLogTest {\n+public class RuntimeHaltLogTest {\n@@ -55,1 +55,1 @@\n-     * Call System.exit() with the parameter (or zero if not supplied).\n+     * Call Runtime.halt() with the parameter (or zero if not supplied).\n@@ -63,1 +63,1 @@\n-        System.exit(status);\n+        Runtime.getRuntime().halt(status);\n@@ -75,1 +75,1 @@\n-                        \"Runtime.exit() called with status: 1\"),\n+                        \"Runtime.halt() called with status: 1\"),\n@@ -83,1 +83,1 @@\n-                        \"Runtime.exit() called with status: 3\"),\n+                        \"Runtime.halt() called with status: 3\"),\n@@ -90,1 +90,1 @@\n-                        \"Runtime.exit(5) logging failed: Exception in publish\")\n+                        \"Runtime.halt(5) logging failed: Exception in publish\")\n","filename":"test\/jdk\/java\/lang\/RuntimeTests\/RuntimeHaltLogTest.java","additions":8,"deletions":8,"binary":false,"changes":16,"previous_filename":"test\/jdk\/java\/lang\/RuntimeTests\/RuntimeExitLogTest.java","status":"copied"}]}