{"files":[{"patch":"@@ -189,1 +189,0 @@\n-java\/awt\/event\/KeyEvent\/KeyTyped\/CtrlASCII.java 8252713 linux-all\n","filename":"test\/jdk\/ProblemList.txt","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,2 +28,2 @@\n-  @summary ests that pressing of Ctrl+ascii mostly fires KEY_TYPED with a Unicode control symbols\n-  @run main CtrlASCII\n+  @summary Tests that pressing of Ctrl+ascii mostly fires KEY_TYPED with a Unicode control symbols\n+  @run main\/timeout=600 CtrlASCII\n@@ -32,3 +32,10 @@\n-import java.awt.*;\n-import java.awt.event.*;\n-import java.util.*;\n+import java.awt.AWTException;\n+import java.awt.BorderLayout;\n+import java.awt.Frame;\n+import java.awt.Point;\n+import java.awt.Robot;\n+import java.awt.TextField;\n+import java.awt.event.InputEvent;\n+import java.awt.event.KeyEvent;\n+import java.awt.event.KeyListener;\n+import java.util.HashMap;\n@@ -45,2 +52,1 @@\n-public class CtrlASCII extends Frame implements KeyListener\n-{\n+public class CtrlASCII extends Frame implements KeyListener {\n@@ -48,3 +54,3 @@\n-    static Hashtable<Character, Integer> keycharHash = new Hashtable<Character, Integer>();\n-    static boolean testFailed = false;\n-    \/\/Frame frame;\n+    static final HashMap<Character, Integer> KEYCHAR_MAP = new HashMap<>();\n+    static volatile boolean testFailed = false;\n+\n@@ -54,97 +60,63 @@\n-    static void fillHash( boolean isMSWindows ) {\n-        keycharHash.put(    (char)0x20         , KeyEvent.VK_SPACE        );                      \/*32,x20*\/ \/*' ' *\/\n-        keycharHash.put(    (char)0x21         , KeyEvent.VK_EXCLAMATION_MARK        );           \/*33,x21*\/ \/*'!' fr*\/\n-        keycharHash.put(    (char)0x22         , KeyEvent.VK_QUOTEDBL        );                   \/*34,x22*\/ \/*'\"' fr*\/\n-        keycharHash.put(    (char)0x23         , KeyEvent.VK_NUMBER_SIGN        );                \/*35,x23*\/ \/*'#' de*\/\n-        keycharHash.put(    (char)0x24         , KeyEvent.VK_DOLLAR        );                      \/*36,x24*\/ \/*'$', de_CH*\/\n-        \/\/keycharHash.put('%',                                  (char)0x25        );                                  \/*37,x25*\/ \/*no VK, cannot test*\/\n-        keycharHash.put(    (char)0x26    , KeyEvent.VK_AMPERSAND        );                  \/*38,x26*\/ \/*'&', fr*\/\n-        keycharHash.put(    (char)0x27    , KeyEvent.VK_QUOTE        );                      \/*39,x27*\/ \/*''', fr*\/\n-        keycharHash.put(    (char)0x28    , KeyEvent.VK_LEFT_PARENTHESIS        );           \/*40,x28*\/ \/*'(', fr*\/\n-        keycharHash.put(    (char)0x29    , KeyEvent.VK_RIGHT_PARENTHESIS        );           \/*41,x29*\/ \/*')', fr*\/\n-        keycharHash.put(    (char)0x2a    , KeyEvent.VK_ASTERISK        );                    \/*42,x2a*\/ \/*'*', fr*\/\n-        keycharHash.put(    (char)0x2b    , KeyEvent.VK_PLUS        );                        \/*43,x2b*\/ \/*'+', de*\/\n-        keycharHash.put(    (char)0x2c    , KeyEvent.VK_COMMA        );                       \/*44,x2c*\/  \/*','*\/\n-        keycharHash.put(    (char)0x2d    , KeyEvent.VK_MINUS        );                       \/*45,x2d*\/ \/*'-'*\/\n-        keycharHash.put(    (char)0x2e    , KeyEvent.VK_PERIOD        );                      \/*46,x2e*\/ \/*'.'*\/\n-        keycharHash.put(    (char)0x2f    , KeyEvent.VK_SLASH        );                       \/*47,x2f*\/ \/*'\/'*\/\n-        keycharHash.put(    (char)0x30    , KeyEvent.VK_0        );                           \/*48,x30*\/\n-        keycharHash.put(    (char)0x31    , KeyEvent.VK_1        );                           \/*49,x31*\/\n-        keycharHash.put(    (char)0x32    , KeyEvent.VK_2        );                           \/*50,x32*\/\n-        keycharHash.put(    (char)0x33    , KeyEvent.VK_3        );                           \/*51,x33*\/\n-        keycharHash.put(    (char)0x34    , KeyEvent.VK_4        );                           \/*52,x34*\/\n-        keycharHash.put(    (char)0x35    , KeyEvent.VK_5        );                           \/*53,x35*\/\n-        keycharHash.put(    (char)0x36    , KeyEvent.VK_6        );                           \/*54,x36*\/\n-        keycharHash.put(    (char)0x37    , KeyEvent.VK_7        );                           \/*55,x37*\/\n-        keycharHash.put(    (char)0x38    , KeyEvent.VK_8        );                           \/*56,x38*\/\n-        keycharHash.put(    (char)0x39    , KeyEvent.VK_9        );                           \/*57,x39*\/\n-        keycharHash.put(    (char)0x3a    , KeyEvent.VK_COLON        );                       \/*58,x3a*\/ \/*':', fr*\/\n-        keycharHash.put(    (char)0x3b    , KeyEvent.VK_SEMICOLON        );                   \/*59,x3b*\/ \/*';'*\/\n-        keycharHash.put(    (char)0x3c    , KeyEvent.VK_LESS        );                        \/*60,x3c*\/ \/*'<' us 102*\/\n-        keycharHash.put(    (char)0x3d    , KeyEvent.VK_EQUALS        );                      \/*61,x3d*\/\n-        keycharHash.put(    (char)0x3e    , KeyEvent.VK_GREATER        );                     \/*62,x3e*\/ \/*'>' ?????? where???*\/\n-            \/\/ Javadoc says: \"there is no keycode for the question mark because\n-            \/\/ there is no keyboard for which it appears on the primary layer.\"\n-            \/\/ Well, it's Lithuanian standard.\n-        \/\/keycharHash.put('?',                                 (char)0x3f        );                                   \/*63,x3f*\/ \/*no VK, cannot test*\/\n-        keycharHash.put(    (char)0x40   , KeyEvent.VK_AT        );                          \/*64,x40*\/ \/*'@' ?????? where???*\/\n-        keycharHash.put(    (char)0x1    , KeyEvent.VK_A        );                             \/*65,x41*\/\n-        keycharHash.put(    (char)0x2    , KeyEvent.VK_B        );                            \/*66,x42*\/\n-        keycharHash.put(    (char)0x3    , KeyEvent.VK_C        );                            \/*67,x43*\/\n-        keycharHash.put(    (char)0x4    , KeyEvent.VK_D        );                            \/*68,x44*\/\n-        keycharHash.put(    (char)0x5    , KeyEvent.VK_E        );                            \/*69,x45*\/\n-        keycharHash.put(    (char)0x6    , KeyEvent.VK_F        );                            \/*70,x46*\/\n-        keycharHash.put(    (char)0x7    , KeyEvent.VK_G        );                            \/*71,x47*\/\n-        keycharHash.put(    (char)0x8    , KeyEvent.VK_H        );                            \/*72,x48*\/\n-        keycharHash.put(    (char)0x9    , KeyEvent.VK_I        );                            \/*73,x49*\/\n-        keycharHash.put(    (char)0xa    , KeyEvent.VK_J        );                            \/*74,x4a*\/\n-        keycharHash.put(    (char)0xb    , KeyEvent.VK_K        );                            \/*75,x4b*\/\n-        keycharHash.put(    (char)0xc    , KeyEvent.VK_L        );                            \/*76,x4c*\/\n-        keycharHash.put(    (char)0xd    , KeyEvent.VK_M        );                            \/*77,x4d*\/\n-        keycharHash.put(    (char)0xe    , KeyEvent.VK_N        );                            \/*78,x4e*\/\n-        keycharHash.put(    (char)0xf    , KeyEvent.VK_O        );                            \/*79,x4f*\/\n-        keycharHash.put(    (char)0x10   , KeyEvent.VK_P        );                           \/*80,x50*\/\n-        keycharHash.put(    (char)0x11   , KeyEvent.VK_Q        );                           \/*81,x51*\/\n-        keycharHash.put(    (char)0x12   , KeyEvent.VK_R        );                           \/*82,x52*\/\n-        keycharHash.put(    (char)0x13   , KeyEvent.VK_S        );                           \/*83,x53*\/\n-        keycharHash.put(    (char)0x14   , KeyEvent.VK_T        );                           \/*84,x54*\/\n-        keycharHash.put(    (char)0x15   , KeyEvent.VK_U        );                           \/*85,x55*\/\n-        keycharHash.put(    (char)0x16   , KeyEvent.VK_V        );                           \/*86,x56*\/\n-        keycharHash.put(    (char)0x17   , KeyEvent.VK_W        );                           \/*87,x57*\/\n-        keycharHash.put(    (char)0x18   , KeyEvent.VK_X        );                           \/*88,x58*\/\n-        keycharHash.put(    (char)0x19   , KeyEvent.VK_Y        );                           \/*89,x59*\/\n-        keycharHash.put(    (char)0x1a   , KeyEvent.VK_Z        );                           \/*90,x5a*\/\n-\n-        keycharHash.put(    (char)0x1b   , KeyEvent.VK_OPEN_BRACKET        );             \/*91,x5b*\/ \/*'['*\/\n-        keycharHash.put(    (char)0x1c   , KeyEvent.VK_BACK_SLASH        );               \/*92,x5c*\/ \/*'\\'*\/\n-        keycharHash.put(    (char)0x1d   , KeyEvent.VK_CLOSE_BRACKET        );            \/*93,x5d*\/ \/*']'*\/\n-        keycharHash.put(    (char)0x5e   , KeyEvent.VK_CIRCUMFLEX        );               \/*94,x5e*\/  \/*'^' ?? nodead fr, de??*\/\n-        keycharHash.put(    (char)0x1f   , KeyEvent.VK_UNDERSCORE        );               \/*95,x5f*\/  \/*'_' fr*\/\n-        keycharHash.put(    (char)0x60   , KeyEvent.VK_BACK_QUOTE        );               \/*96,x60*\/\n-        \/********* Same as uppercase*\/\n-        \/\/keycharHash.put(  (char)0x1         , KeyEvent.VK_a        );\/*97,x61*\/\n-        \/\/keycharHash.put(  (char)0x2         , KeyEvent.VK_b        );\/*98,x62*\/\n-        \/\/keycharHash.put(  (char)0x3         , KeyEvent.VK_c        );\/*99,x63*\/\n-        \/\/keycharHash.put(  (char)0x4         , KeyEvent.VK_d        );\/*100,x64*\/\n-        \/\/keycharHash.put(  (char)0x5         , KeyEvent.VK_e        );\/*101,x65*\/\n-        \/\/keycharHash.put(  (char)0x6         , KeyEvent.VK_f        );\/*102,x66*\/\n-        \/\/keycharHash.put(  (char)0x7         , KeyEvent.VK_g        );\/*103,x67*\/\n-        \/\/keycharHash.put(  (char)0x8         , KeyEvent.VK_h        );\/*104,x68*\/\n-        \/\/keycharHash.put(  (char)0x9         , KeyEvent.VK_i        );\/*105,x69*\/\n-        \/\/keycharHash.put(  (char)0xa         , KeyEvent.VK_j        );\/*106,x6a*\/\n-        \/\/keycharHash.put(  (char)0xb         , KeyEvent.VK_k        );\/*107,x6b*\/\n-        \/\/keycharHash.put(  (char)0xc         , KeyEvent.VK_l        );\/*108,x6c*\/\n-        \/\/keycharHash.put(  (char)0xd         , KeyEvent.VK_m        );\/*109,x6d*\/\n-        \/\/keycharHash.put(  (char)0xe         , KeyEvent.VK_n        );\/*110,x6e*\/\n-        \/\/keycharHash.put(  (char)0xf         , KeyEvent.VK_o        );\/*111,x6f*\/\n-        \/\/keycharHash.put(  (char)0x10        , KeyEvent.VK_p        );\/*112,x70*\/\n-        \/\/keycharHash.put(  (char)0x11        , KeyEvent.VK_q        );\/*113,x71*\/\n-        \/\/keycharHash.put(  (char)0x12        , KeyEvent.VK_r        );\/*114,x72*\/\n-        \/\/keycharHash.put(  (char)0x13        , KeyEvent.VK_s        );\/*115,x73*\/\n-        \/\/keycharHash.put(  (char)0x14        , KeyEvent.VK_t        );\/*116,x74*\/\n-        \/\/keycharHash.put(  (char)0x15        , KeyEvent.VK_u        );\/*117,x75*\/\n-        \/\/keycharHash.put(  (char)0x16        , KeyEvent.VK_v        );\/*118,x76*\/\n-        \/\/keycharHash.put(  (char)0x17        , KeyEvent.VK_w        );\/*119,x77*\/\n-        \/\/keycharHash.put(  (char)0x18        , KeyEvent.VK_x        );\/*120,x78*\/\n-        \/\/keycharHash.put(  (char)0x19        , KeyEvent.VK_y        );\/*121,x79*\/\n-        \/\/keycharHash.put(  (char)0x1a        , KeyEvent.VK_z        );\/*122,x7a*\/\n+    static void fillHash() {\n+        KEYCHAR_MAP.put((char) 0x20, KeyEvent.VK_SPACE);             \/*32,x20*\/ \/*' ' *\/\n+        KEYCHAR_MAP.put((char) 0x21, KeyEvent.VK_EXCLAMATION_MARK);  \/*33,x21*\/ \/*'!' fr*\/\n+        KEYCHAR_MAP.put((char) 0x22, KeyEvent.VK_QUOTEDBL);          \/*34,x22*\/ \/*'\"' fr*\/\n+        KEYCHAR_MAP.put((char) 0x23, KeyEvent.VK_NUMBER_SIGN);       \/*35,x23*\/ \/*'#' de*\/\n+        KEYCHAR_MAP.put((char) 0x24, KeyEvent.VK_DOLLAR);            \/*36,x24*\/ \/*'$', de_CH*\/\n+        \/\/keycharHash.put('%', (char)0x25 );                         \/*37,x25*\/ \/*no VK, cannot test*\/\n+        KEYCHAR_MAP.put((char) 0x26, KeyEvent.VK_AMPERSAND);         \/*38,x26*\/ \/*'&', fr*\/\n+        KEYCHAR_MAP.put((char) 0x27, KeyEvent.VK_QUOTE);             \/*39,x27*\/ \/*''', fr*\/\n+        KEYCHAR_MAP.put((char) 0x28, KeyEvent.VK_LEFT_PARENTHESIS);  \/*40,x28*\/ \/*'(', fr*\/\n+        KEYCHAR_MAP.put((char) 0x29, KeyEvent.VK_RIGHT_PARENTHESIS); \/*41,x29*\/ \/*')', fr*\/\n+        KEYCHAR_MAP.put((char) 0x2a, KeyEvent.VK_ASTERISK);          \/*42,x2a*\/ \/*'*', fr*\/\n+        KEYCHAR_MAP.put((char) 0x2b, KeyEvent.VK_PLUS);              \/*43,x2b*\/ \/*'+', de*\/\n+        KEYCHAR_MAP.put((char) 0x2c, KeyEvent.VK_COMMA);             \/*44,x2c*\/  \/*','*\/\n+        KEYCHAR_MAP.put((char) 0x2d, KeyEvent.VK_MINUS);             \/*45,x2d*\/ \/*'-'*\/\n+        KEYCHAR_MAP.put((char) 0x2e, KeyEvent.VK_PERIOD);            \/*46,x2e*\/ \/*'.'*\/\n+        KEYCHAR_MAP.put((char) 0x2f, KeyEvent.VK_SLASH);             \/*47,x2f*\/ \/*'\/'*\/\n+        KEYCHAR_MAP.put((char) 0x30, KeyEvent.VK_0);                 \/*48,x30*\/\n+        KEYCHAR_MAP.put((char) 0x31, KeyEvent.VK_1);                 \/*49,x31*\/\n+        KEYCHAR_MAP.put((char) 0x32, KeyEvent.VK_2);                 \/*50,x32*\/\n+        KEYCHAR_MAP.put((char) 0x33, KeyEvent.VK_3);                 \/*51,x33*\/\n+        KEYCHAR_MAP.put((char) 0x34, KeyEvent.VK_4);                 \/*52,x34*\/\n+        KEYCHAR_MAP.put((char) 0x35, KeyEvent.VK_5);                 \/*53,x35*\/\n+        KEYCHAR_MAP.put((char) 0x36, KeyEvent.VK_6);                 \/*54,x36*\/\n+        KEYCHAR_MAP.put((char) 0x37, KeyEvent.VK_7);                 \/*55,x37*\/\n+        KEYCHAR_MAP.put((char) 0x38, KeyEvent.VK_8);                 \/*56,x38*\/\n+        KEYCHAR_MAP.put((char) 0x39, KeyEvent.VK_9);                 \/*57,x39*\/\n+        KEYCHAR_MAP.put((char) 0x3a, KeyEvent.VK_COLON);             \/*58,x3a*\/ \/*':', fr*\/\n+        KEYCHAR_MAP.put((char) 0x3b, KeyEvent.VK_SEMICOLON);         \/*59,x3b*\/ \/*';'*\/\n+        KEYCHAR_MAP.put((char) 0x3c, KeyEvent.VK_LESS);              \/*60,x3c*\/ \/*'<' us 102*\/\n+        KEYCHAR_MAP.put((char) 0x3d, KeyEvent.VK_EQUALS);            \/*61,x3d*\/\n+        KEYCHAR_MAP.put((char) 0x3e, KeyEvent.VK_GREATER);           \/*62,x3e*\/ \/*'>' ?????? where???*\/\n+        \/\/ Javadoc says: \"there is no keycode for the question mark because\n+        \/\/ there is no keyboard for which it appears on the primary layer.\"\n+        \/\/ Well, it's Lithuanian standard.\n+        \/\/keycharHash.put('?', (char)0x3f);                          \/*63,x3f*\/ \/*no VK, cannot test*\/\n+        KEYCHAR_MAP.put((char) 0x40, KeyEvent.VK_AT);                \/*64,x40*\/ \/*'@' ?????? where???*\/\n+        KEYCHAR_MAP.put((char) 0x1, KeyEvent.VK_A);                  \/*65,x41*\/\n+        KEYCHAR_MAP.put((char) 0x2, KeyEvent.VK_B);                  \/*66,x42*\/\n+        KEYCHAR_MAP.put((char) 0x3, KeyEvent.VK_C);                  \/*67,x43*\/\n+        KEYCHAR_MAP.put((char) 0x4, KeyEvent.VK_D);                  \/*68,x44*\/\n+        KEYCHAR_MAP.put((char) 0x5, KeyEvent.VK_E);                  \/*69,x45*\/\n+        KEYCHAR_MAP.put((char) 0x6, KeyEvent.VK_F);                  \/*70,x46*\/\n+        KEYCHAR_MAP.put((char) 0x7, KeyEvent.VK_G);                  \/*71,x47*\/\n+        KEYCHAR_MAP.put((char) 0x8, KeyEvent.VK_H);                  \/*72,x48*\/\n+        KEYCHAR_MAP.put((char) 0x9, KeyEvent.VK_I);                  \/*73,x49*\/\n+        KEYCHAR_MAP.put((char) 0xa, KeyEvent.VK_J);                  \/*74,x4a*\/\n+        KEYCHAR_MAP.put((char) 0xb, KeyEvent.VK_K);                  \/*75,x4b*\/\n+        KEYCHAR_MAP.put((char) 0xc, KeyEvent.VK_L);                  \/*76,x4c*\/\n+        KEYCHAR_MAP.put((char) 0xd, KeyEvent.VK_M);                  \/*77,x4d*\/\n+        KEYCHAR_MAP.put((char) 0xe, KeyEvent.VK_N);                  \/*78,x4e*\/\n+        KEYCHAR_MAP.put((char) 0xf, KeyEvent.VK_O);                  \/*79,x4f*\/\n+        KEYCHAR_MAP.put((char) 0x10, KeyEvent.VK_P);                 \/*80,x50*\/\n+        KEYCHAR_MAP.put((char) 0x11, KeyEvent.VK_Q);                 \/*81,x51*\/\n+        KEYCHAR_MAP.put((char) 0x12, KeyEvent.VK_R);                 \/*82,x52*\/\n+        KEYCHAR_MAP.put((char) 0x13, KeyEvent.VK_S);                 \/*83,x53*\/\n+        KEYCHAR_MAP.put((char) 0x14, KeyEvent.VK_T);                 \/*84,x54*\/\n+        KEYCHAR_MAP.put((char) 0x15, KeyEvent.VK_U);                 \/*85,x55*\/\n+        KEYCHAR_MAP.put((char) 0x16, KeyEvent.VK_V);                 \/*86,x56*\/\n+        KEYCHAR_MAP.put((char) 0x17, KeyEvent.VK_W);                 \/*87,x57*\/\n+        KEYCHAR_MAP.put((char) 0x18, KeyEvent.VK_X);                 \/*88,x58*\/\n+        KEYCHAR_MAP.put((char) 0x19, KeyEvent.VK_Y);                 \/*89,x59*\/\n+        KEYCHAR_MAP.put((char) 0x1a, KeyEvent.VK_Z);                 \/*90,x5a*\/\n@@ -152,4 +124,6 @@\n-        keycharHash.put(    (char)0x7b      , KeyEvent.VK_BRACELEFT        );             \/*123,x7b*\/ \/*'{' la (Latin American)*\/\n-        \/\/keycharHash.put(  (char)0x1c        , KeyEvent.VK_|        );                   \/*124,x7c*\/ \/* no VK, cannot test*\/\n-        keycharHash.put(    (char)0x7d      , KeyEvent.VK_BRACERIGHT        );            \/*125,x7d*\/ \/*'}' la *\/\n-        \/\/keycharHash.put(  (char)0x1e        , KeyEvent.VK_~        );                   \/*126,x7e*\/ \/* no VK, cannot test*\/\n+        KEYCHAR_MAP.put((char) 0x1b, KeyEvent.VK_OPEN_BRACKET);      \/*91,x5b*\/ \/*'['*\/\n+        KEYCHAR_MAP.put((char) 0x1c, KeyEvent.VK_BACK_SLASH);        \/*92,x5c*\/ \/*'\\'*\/\n+        KEYCHAR_MAP.put((char) 0x1d, KeyEvent.VK_CLOSE_BRACKET);     \/*93,x5d*\/ \/*']'*\/\n+        KEYCHAR_MAP.put((char) 0x5e, KeyEvent.VK_CIRCUMFLEX);        \/*94,x5e*\/  \/*'^' ?? nodead fr, de??*\/\n+        KEYCHAR_MAP.put((char) 0x1f, KeyEvent.VK_UNDERSCORE);        \/*95,x5f*\/  \/*'_' fr*\/\n+        KEYCHAR_MAP.put((char) 0x60, KeyEvent.VK_BACK_QUOTE);        \/*96,x60*\/\n@@ -157,0 +131,27 @@\n+        \/********* Same as uppercase*\/\n+        \/\/keycharHash.put((char)0x1, KeyEvent.VK_a);                 \/*97,x61*\/\n+        \/\/keycharHash.put((char)0x2, KeyEvent.VK_b);                 \/*98,x62*\/\n+        \/\/keycharHash.put((char)0x3, KeyEvent.VK_c);                 \/*99,x63*\/\n+        \/\/keycharHash.put((char)0x4, KeyEvent.VK_d);                 \/*100,x64*\/\n+        \/\/keycharHash.put((char)0x5, KeyEvent.VK_e);                 \/*101,x65*\/\n+        \/\/keycharHash.put((char)0x6, KeyEvent.VK_f);                 \/*102,x66*\/\n+        \/\/keycharHash.put((char)0x7, KeyEvent.VK_g);                 \/*103,x67*\/\n+        \/\/keycharHash.put((char)0x8, KeyEvent.VK_h);                 \/*104,x68*\/\n+        \/\/keycharHash.put((char)0x9, KeyEvent.VK_i);                 \/*105,x69*\/\n+        \/\/keycharHash.put((char)0xa, KeyEvent.VK_j);                 \/*106,x6a*\/\n+        \/\/keycharHash.put((char)0xb, KeyEvent.VK_k);                 \/*107,x6b*\/\n+        \/\/keycharHash.put((char)0xc, KeyEvent.VK_l);                 \/*108,x6c*\/\n+        \/\/keycharHash.put((char)0xd, KeyEvent.VK_m);                 \/*109,x6d*\/\n+        \/\/keycharHash.put((char)0xe, KeyEvent.VK_n);                 \/*110,x6e*\/\n+        \/\/keycharHash.put((char)0xf, KeyEvent.VK_o);                 \/*111,x6f*\/\n+        \/\/keycharHash.put((char)0x10, KeyEvent.VK_p);                \/*112,x70*\/\n+        \/\/keycharHash.put((char)0x11, KeyEvent.VK_q);                \/*113,x71*\/\n+        \/\/keycharHash.put((char)0x12, KeyEvent.VK_r);                \/*114,x72*\/\n+        \/\/keycharHash.put((char)0x13, KeyEvent.VK_s);                \/*115,x73*\/\n+        \/\/keycharHash.put((char)0x14, KeyEvent.VK_t);                \/*116,x74*\/\n+        \/\/keycharHash.put((char)0x15, KeyEvent.VK_u);                \/*117,x75*\/\n+        \/\/keycharHash.put((char)0x16, KeyEvent.VK_v);                \/*118,x76*\/\n+        \/\/keycharHash.put((char)0x17, KeyEvent.VK_w);                \/*119,x77*\/\n+        \/\/keycharHash.put((char)0x18, KeyEvent.VK_x);                \/*120,x78*\/\n+        \/\/keycharHash.put((char)0x19, KeyEvent.VK_y);                \/*121,x79*\/\n+        \/\/keycharHash.put((char)0x1a, KeyEvent.VK_z);                \/*122,x7a*\/\n@@ -158,0 +159,4 @@\n+        KEYCHAR_MAP.put((char) 0x7b, KeyEvent.VK_BRACELEFT);         \/*123,x7b*\/ \/*'{' la (Latin American)*\/\n+        \/\/keycharHash.put(char) 0x1c, KeyEvent.VK_|);                \/*124,x7c*\/ \/* no VK, cannot test*\/\n+        KEYCHAR_MAP.put((char) 0x7d, KeyEvent.VK_BRACERIGHT);        \/*125,x7d*\/ \/*'}' la *\/\n+        \/\/keycharHash.put((char) 0x1e, KeyEvent.VK_~);               \/*126,x7e*\/ \/* no VK, cannot test*\/\n@@ -159,1 +164,2 @@\n-    public static void main(String[] args) {\n+\n+    public static void main(String[] args) throws AWTException {\n@@ -165,4 +171,2 @@\n-    public void init()\n-    {\n-        fillHash( false );\n-        this.setLayout (new BorderLayout ());\n+    public void init() throws AWTException {\n+        fillHash();\n@@ -170,1 +174,3 @@\n-    }\/\/End  init()\n+        robot = new Robot();\n+        robot.setAutoWaitForIdle(true);\n+        robot.setAutoDelay(100);\n@@ -172,3 +178,3 @@\n-    public void start ()\n-    {\n-        setSize(400,300);\n+        setLayout(new BorderLayout());\n+\n+        setSize(400, 300);\n@@ -184,4 +190,2 @@\n-        try {\n-            robot = new Robot();\n-            robot.setAutoWaitForIdle(true);\n-            robot.setAutoDelay(100);\n+        robot.waitForIdle();\n+        robot.delay(1000);\n@@ -189,1 +193,2 @@\n-            robot.waitForIdle();\n+        this.requestFocus();\n+        tf.requestFocusInWindow();\n@@ -191,4 +196,2 @@\n-            \/\/ wait for focus, etc.  (Hack.)\n-            robot.delay(2000);\n-            this.requestFocus();\n-            tf.requestFocusInWindow();\n+        robot.waitForIdle();\n+    }\/\/End  init()\n@@ -196,0 +199,2 @@\n+    public void start() {\n+        try {\n@@ -197,5 +202,6 @@\n-            robot.mouseMove( pt.x+100, pt.y+100 );\n-            robot.delay(2000);\n-            robot.mousePress( InputEvent.BUTTON1_MASK );\n-            robot.mouseRelease( InputEvent.BUTTON1_MASK );\n-            Enumeration<Integer> enuElem = keycharHash.elements();\n+            robot.mouseMove(pt.x + 100, pt.y + 100);\n+            robot.delay(1000);\n+            robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+            robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+\n+            KEYCHAR_MAP.forEach((k, v) -> punchCtrlKey(v));\n@@ -203,5 +209,0 @@\n-            int kc;\n-            while( enuElem.hasMoreElements()) {\n-                kc = enuElem.nextElement();\n-                punchCtrlKey( robot, kc );\n-            }\n@@ -211,0 +212,2 @@\n+        } finally {\n+            dispose();\n@@ -212,1 +215,1 @@\n-        if( testFailed ) {\n+        if (testFailed) {\n@@ -218,2 +221,2 @@\n-    public void punchCtrlKey( Robot ro, int keyCode ) {\n-        ro.keyPress(KeyEvent.VK_CONTROL);\n+\n+    public void punchCtrlKey(int keyCode) {\n@@ -221,4 +224,11 @@\n-            ro.keyPress(keyCode);\n-            ro.keyRelease(keyCode);\n-        }catch(IllegalArgumentException iae) {\n-            System.err.println(\"skip probably invalid keyCode \"+keyCode);\n+            robot.keyPress(KeyEvent.VK_CONTROL);\n+            robot.keyPress(keyCode);\n+        } catch (IllegalArgumentException iae) {\n+            System.err.println(\"skip probably invalid keyCode \" + keyCode);\n+        } finally {\n+            try {\n+                robot.keyRelease(keyCode);\n+            } catch (IllegalArgumentException iae) {\n+                System.err.println(\"skip probably invalid keyCode \" + keyCode);\n+            }\n+            robot.keyRelease(KeyEvent.VK_CONTROL);\n@@ -226,2 +236,1 @@\n-        ro.keyRelease(KeyEvent.VK_CONTROL);\n-        ro.delay(200);\n+        robot.delay(200);\n@@ -229,2 +238,2 @@\n-    public void keyPressed(KeyEvent evt)\n-    {\n+\n+    public void keyPressed(KeyEvent evt) {\n@@ -234,2 +243,1 @@\n-    public void keyTyped(KeyEvent evt)\n-    {\n+    public void keyTyped(KeyEvent evt) {\n@@ -238,3 +246,2 @@\n-        if( !keycharHash.containsKey( keych ) ) {\n-            System.out.println(\"Unexpected keychar: \"+keych);\n-            System.out.println(\"Unexpected keychar: \"+keych);\n+        if (!KEYCHAR_MAP.containsKey(keych)) {\n+            System.out.println(\"Unexpected keychar: \" + keych);\n@@ -245,2 +252,1 @@\n-    public void keyReleased(KeyEvent evt)\n-    {\n+    public void keyReleased(KeyEvent evt) {\n@@ -250,12 +256,9 @@\n-    protected void printKey(KeyEvent evt)\n-    {\n-        switch(evt.getID())\n-        {\n-          case KeyEvent.KEY_TYPED:\n-          case KeyEvent.KEY_PRESSED:\n-          case KeyEvent.KEY_RELEASED:\n-            break;\n-          default:\n-            System.out.println(\"Other Event \");\n-            System.out.println(\"Other Event \");\n-            return;\n+    protected void printKey(KeyEvent evt) {\n+        switch (evt.getID()) {\n+            case KeyEvent.KEY_TYPED:\n+            case KeyEvent.KEY_PRESSED:\n+            case KeyEvent.KEY_RELEASED:\n+                break;\n+            default:\n+                System.out.println(\"Other Event \");\n+                return;\n@@ -263,2 +266,1 @@\n-        System.out.print(\" 0x\"+ Integer.toHexString(evt.getKeyChar()));\n-        System.out.println    (\" 0x\"+ Integer.toHexString(evt.getKeyChar()));\n+        System.out.println(\" 0x\" + Integer.toHexString(evt.getKeyChar()));\n","filename":"test\/jdk\/java\/awt\/event\/KeyEvent\/KeyTyped\/CtrlASCII.java","additions":174,"deletions":172,"binary":false,"changes":346,"status":"modified"}]}