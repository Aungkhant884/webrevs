[{"commit":{"message":"Merge branch 'master' into lazy-static-varhandle"},"files":[],"sha":"f414e8f81b98e9af545f4eb2cb119cb2c383e6c6"},{"commit":{"message":"Significantly improve Lazy VH initial call performance"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/IndirectVarHandle.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/LazyInitializingVarHandle.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/VarHandle.java"}],"sha":"a17e7436efa2dab69767eca6f832b7fef44dbdfb"},{"commit":{"message":"Rename asDirect to target"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/IndirectVarHandle.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/Invokers.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/LazyInitializingVarHandle.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/VarHandle.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/VarHandleGuards.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/VarHandles.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/X-VarHandle.java.template"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/X-VarHandleByteArrayView.java.template"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/X-VarHandleSegmentView.java.template"}],"sha":"066b0130a44158f83ec9e31318eb93b8c1754af3"},{"commit":{"message":"Merge branch 'master' into lazy-static-varhandle"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MethodHandles.java"}],"sha":"f44cdb4fb05ea97b200710005d1b1427547a955d"},{"commit":{"message":"Improve subsequent VH call performance, thanks exeboss"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/LazyInitializingVarHandle.java"}],"sha":"dc3e73e94a02900fbd01d4b0addb5cf64f1b170c"},{"commit":{"message":"Remove lazy init of MH, for all invocation of the Lazy VH needs this MH"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/LazyInitializingVarHandle.java"}],"sha":"0d44a0d3b15929edebc6960a8ef36f38a22ef6de"},{"commit":{"message":"Fix withBehavior and test"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/LazyInitializingVarHandle.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/VarHandles.java"},{"filename":"test\/jdk\/java\/lang\/invoke\/VarHandles\/LazyStaticTest.java"}],"sha":"e21733c185661fcdedad4de41c9feadcf1920aaa"},{"commit":{"message":"Merge branch 'master' into lazy-static-varhandle"},"files":[],"sha":"d5adf4131d1965dc42650ba9cf21f7a44253b3dd"},{"commit":{"message":"Compute base and offset right after linking, simplify code"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/IndirectVarHandle.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/LazyInitializingVarHandle.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/VarHandle.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/VarHandles.java"}],"sha":"27e18b7caadc59215e37a910b92f021f6f81dc54"},{"commit":{"message":"Merge branch 'master' into lazy-static-varhandle"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MethodHandles.java"}],"sha":"3c01d340c432b97beae9bf930e43806d9142e4f0"},{"commit":{"message":"Fix exact swap\n\nCo-authored-by: Mandy Chung <mandy.chung@oracle.com>"},"files":[],"sha":"d347ee7e765ef28895deea07cde15d3ee77ffe69"},{"commit":{"message":"Remove export for removed package"},"files":[{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/invoke\/LazyStaticColdStart.java"}],"sha":"6ed6b805cd17a312d4ce97e46db0db3a030b52c2"},{"commit":{"message":"Merge branch 'master' into lazy-static-varhandle"},"files":[],"sha":"e965365c95909db1773f6fe6df4068242a000458"},{"commit":{"message":"Test the creation performance of handles, lazy one indeed better"},"files":[{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/invoke\/LazyStaticColdStart.java"}],"sha":"eea7aa8425dd096f3efae48197a6f40883f9754e"},{"commit":{"message":"Merge branch 'master' into lazy-static-varhandle"},"files":[],"sha":"2dc7621527518a0fce15a69e222b77a678babd8d"},{"commit":{"message":"copyright year"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/IndirectVarHandle.java"},{"filename":"test\/jdk\/java\/lang\/invoke\/VarHandles\/VarHandleBaseTest.java"}],"sha":"4b3cfece8f500d98df9f08b0b8fa7b697fac0b50"},{"commit":{"message":"Benchmarks. lazy initialize is SLOW"},"files":[{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/invoke\/VarHandleLazyStaticInvocation.java"}],"sha":"ead6c94b4324db4da9b2340acf31c28c5f6d8467"},{"commit":{"message":"nuke meaningless overrides"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/IndirectVarHandle.java"}],"sha":"d44f52f943e680de8be13d5ac565aaea25aafc76"},{"commit":{"message":"make static field var handles lazy and fix NPE in isAccessModeSupported"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/IndirectVarHandle.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MethodHandles.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/VarHandle.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/VarHandles.java"},{"filename":"test\/jdk\/java\/lang\/invoke\/VarHandles\/LazyStaticTest.java"},{"filename":"test\/jdk\/java\/lang\/invoke\/VarHandles\/VarHandleBaseTest.java"}],"sha":"8bcfee96cef5fdd4143b67f78ba7be13305ac704"}]