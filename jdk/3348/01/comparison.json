{"files":[{"patch":"@@ -194,2 +194,7 @@\n-  ShenandoahMarkRefsClosure cl(q, _rp);\n-  _root_scanner.roots_do(&cl, worker_id);\n+  if (ShenandoahStringDedup::is_enabled()) {\n+    ShenandoahMarkRefsDedupClosure cl(q, _rp);\n+    _root_scanner.roots_do(&cl, worker_id);\n+  } else {\n+    ShenandoahMarkRefsClosure cl(q, _rp);\n+    _root_scanner.roots_do(&cl, worker_id);\n+  }\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentMark.cpp","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -44,5 +44,0 @@\n-ShenandoahInitMarkRootsClosure::ShenandoahInitMarkRootsClosure(ShenandoahObjToScanQueue* q) :\n-  _queue(q),\n-  _mark_context(ShenandoahHeap::heap()->marking_context()) {\n-}\n-\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahMark.cpp","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -34,15 +34,0 @@\n-class ShenandoahInitMarkRootsClosure : public OopClosure {\n-private:\n-  ShenandoahObjToScanQueue* const _queue;\n-  ShenandoahMarkingContext* const _mark_context;\n-\n-  template <class T>\n-  inline void do_oop_work(T* p);\n-\n-public:\n-  ShenandoahInitMarkRootsClosure(ShenandoahObjToScanQueue* q);\n-\n-  void do_oop(narrowOop* p) { do_oop_work(p); }\n-  void do_oop(oop* p)       { do_oop_work(p); }\n-};\n-\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahMark.hpp","additions":0,"deletions":15,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -42,5 +42,0 @@\n-template <class T>\n-void ShenandoahInitMarkRootsClosure::do_oop_work(T* p) {\n-  ShenandoahMark::mark_through_ref<T, NO_DEDUP>(p, _queue, _mark_context, false);\n-}\n-\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahMark.inline.hpp","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -36,0 +36,1 @@\n+#include \"gc\/shenandoah\/shenandoahStringDedup.hpp\"\n@@ -39,0 +40,28 @@\n+template <StringDedupMode STRING_DEDUP>\n+class ShenandoahInitMarkRootsClosure : public OopClosure {\n+private:\n+  ShenandoahObjToScanQueue* const _queue;\n+  ShenandoahMarkingContext* const _mark_context;\n+\n+  template <class T>\n+  inline void do_oop_work(T* p);\n+\n+public:\n+  ShenandoahInitMarkRootsClosure(ShenandoahObjToScanQueue* q);\n+\n+  void do_oop(narrowOop* p) { do_oop_work(p); }\n+  void do_oop(oop* p)       { do_oop_work(p); }\n+};\n+\n+template <StringDedupMode STRING_DEDUP>\n+ShenandoahInitMarkRootsClosure<STRING_DEDUP>::ShenandoahInitMarkRootsClosure(ShenandoahObjToScanQueue* q) :\n+  _queue(q),\n+  _mark_context(ShenandoahHeap::heap()->marking_context()) {\n+}\n+\n+template <StringDedupMode STRING_DEDUP>\n+template <class T>\n+void ShenandoahInitMarkRootsClosure<STRING_DEDUP>::do_oop_work(T* p) {\n+  ShenandoahMark::mark_through_ref<T, STRING_DEDUP>(p, _queue, _mark_context, false);\n+}\n+\n@@ -102,2 +131,7 @@\n-  ShenandoahInitMarkRootsClosure  init_mark(task_queues()->queue(worker_id));\n-  _root_scanner.roots_do(&init_mark, worker_id);\n+  if (ShenandoahStringDedup::is_enabled()) {\n+    ShenandoahInitMarkRootsClosure<ENQUEUE_DEDUP>  init_mark(task_queues()->queue(worker_id));\n+    _root_scanner.roots_do(&init_mark, worker_id);\n+  } else {\n+    ShenandoahInitMarkRootsClosure<NO_DEDUP>  init_mark(task_queues()->queue(worker_id));\n+    _root_scanner.roots_do(&init_mark, worker_id);\n+  }\n@@ -115,1 +149,0 @@\n-\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahSTWMark.cpp","additions":36,"deletions":3,"binary":false,"changes":39,"status":"modified"}]}