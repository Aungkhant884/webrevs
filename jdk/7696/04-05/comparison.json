{"files":[{"patch":"@@ -28,1 +28,0 @@\n-import jdk.internal.net.http.HttpConnection.HttpPublisher;\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/Http2Connection.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -45,0 +45,1 @@\n+import org.testng.annotations.BeforeMethod;\n@@ -62,1 +63,0 @@\n-import java.util.Objects;\n@@ -76,0 +76,2 @@\n+    static final String mainPromiseBody = \"Main Promise Body\";\n+    static final String mainResponseBody = \"Main Response Body\";\n@@ -80,1 +82,1 @@\n-    ConcurrentMap<HttpRequest, HttpRequest> resultMap = new ConcurrentHashMap<>();\n+    ConcurrentMap<HttpRequest, CompletableFuture<HttpResponse<String>>> pushPromiseMap = new ConcurrentHashMap<>();\n@@ -83,2 +85,1 @@\n-        acceptor.apply(s);\n-        resultMap.put(initial, pushRequest);\n+        pushPromiseMap.put(pushRequest, acceptor.apply(s));\n@@ -87,0 +88,5 @@\n+    @BeforeMethod\n+    public void beforeMethod() {\n+        pushPromiseMap = new ConcurrentHashMap<>();\n+    }\n+\n@@ -89,2 +95,0 @@\n-        resultMap = new ConcurrentHashMap<>();\n-\n@@ -92,1 +96,1 @@\n-        server.addHandler(new ServerPushHandler(\"Main Response Body\", \"\/promise\"), \"\/\");\n+        server.addHandler(new ServerPushHandler(), \"\/\");\n@@ -106,1 +110,2 @@\n-        resultMap = null;\n+        pushPromiseMap = null;\n+        server.stop();\n@@ -124,1 +129,1 @@\n-        cf.join();\n+        HttpResponse<String> resp = cf.join();\n@@ -127,1 +132,1 @@\n-        verify();\n+        verify(resp);\n@@ -143,1 +148,1 @@\n-        cf.join();\n+        HttpResponse<String> resp = cf.join();\n@@ -146,1 +151,1 @@\n-        verify();\n+        verify(resp);\n@@ -158,1 +163,1 @@\n-        cf.join();\n+        HttpResponse<String> resp = cf.join();\n@@ -161,1 +166,1 @@\n-        verify();\n+        verify(resp);\n@@ -164,2 +169,5 @@\n-    private void verify() {\n-        if (resultMap.size() > 1) {\n+    private void verify(HttpResponse<String> resp) {\n+        assertEquals(resp.statusCode(), 200);\n+        assertEquals(resp.body(), mainResponseBody);\n+        if (pushPromiseMap.size() > 1) {\n+            System.err.println(pushPromiseMap.entrySet());\n@@ -169,2 +177,2 @@\n-            for (HttpRequest r : resultMap.keySet()) {\n-                HttpRequest serverPushReq = resultMap.get(r);\n+            for (HttpRequest r : pushPromiseMap.keySet()) {\n+                HttpResponse<String> serverPushResp = pushPromiseMap.get(r).join();\n@@ -173,1 +181,4 @@\n-                assertEquals(testHeaders, serverPushReq.headers());\n+                assertEquals(testHeaders, r.headers());\n+                \/\/ Check status code and push promise body are as expected\n+                assertEquals(serverPushResp.statusCode(), 200);\n+                assertEquals(serverPushResp.body(), mainPromiseBody);\n@@ -260,11 +271,0 @@\n-        private final String mainResponseBody;\n-        private final String mainPromiseBody;\n-\n-        public ServerPushHandler(String mainResponseBody,\n-                                 String promise)\n-        {\n-            Objects.requireNonNull(promise);\n-            this.mainResponseBody = mainResponseBody;\n-            this.mainPromiseBody = \"Main Promise Body\";\n-        }\n-\n@@ -295,1 +295,1 @@\n-            InputStream is = new ByteArrayInputStream(\"Test_String\".getBytes(UTF_8));\n+            InputStream is = new ByteArrayInputStream(mainPromiseBody.getBytes(UTF_8));\n@@ -297,1 +297,1 @@\n-            map.put(\"x-promise\", List.of(mainPromiseBody));\n+            map.put(\"x-promise\", List.of(\"promise-header\"));\n","filename":"test\/jdk\/java\/net\/httpclient\/http2\/PushPromiseContinuation.java","additions":32,"deletions":32,"binary":false,"changes":64,"status":"modified"}]}