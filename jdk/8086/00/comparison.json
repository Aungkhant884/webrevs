{"files":[{"patch":"@@ -1,64 +0,0 @@\n-\/*\n- * Copyright (c) 2008, 2021, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package sun.nio.fs;\n-\n-import java.lang.reflect.*;\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n-\n-\/**\n- * Utility class for reflection.\n- *\/\n-\n-class Reflect {\n-    private Reflect() {}\n-\n-    @SuppressWarnings(\"removal\")\n-    private static void setAccessible(final AccessibleObject ao) {\n-        AccessController.doPrivileged(new PrivilegedAction<Object>() {\n-                @Override\n-                public Object run() {\n-                    ao.setAccessible(true);\n-                    return null;\n-                }});\n-    }\n-\n-    \/**\n-     * Lookup the field of a given class.\n-     *\/\n-    static Field lookupField(String className, String fieldName) {\n-        try {\n-            Class<?> cl = Class.forName(className);\n-            Field f = cl.getDeclaredField(fieldName);\n-            setAccessible(f);\n-            return f;\n-        } catch (ClassNotFoundException x) {\n-            throw new AssertionError(x);\n-        } catch (NoSuchFieldException x) {\n-            throw new AssertionError(x);\n-        }\n-    }\n-}\n","filename":"src\/java.base\/share\/classes\/sun\/nio\/fs\/Reflect.java","additions":0,"deletions":64,"binary":false,"changes":64,"status":"deleted"}]}