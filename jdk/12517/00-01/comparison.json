{"files":[{"patch":"@@ -159,1 +159,0 @@\n-     * @implNote\n@@ -165,3 +164,9 @@\n-        \/\/ Locate the logger without holding the lock;\n-        \/\/ the setup of the logger may be a heavyweight operation\n-        System.Logger log = System.getLogger(\"java.lang.Runtime\");\n+        System.Logger log = null;\n+        try {\n+            \/\/ Locate the logger without holding the lock;\n+            \/\/ the setup of the logger may be a heavyweight operation\n+            log = System.getLogger(\"java.lang.Runtime\");\n+        } catch (Throwable throwable) {\n+            \/\/ Exceptions from locating the Logger are printed but do not prevent exit\n+            System.err.println(\"Runtime.exit() log finder failed with: \" + throwable.getMessage());\n+        }\n@@ -172,1 +177,1 @@\n-            if (log.isLoggable(System.Logger.Level.DEBUG)) {\n+            if (log != null && log.isLoggable(System.Logger.Level.DEBUG)) {\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Shutdown.java","additions":10,"deletions":5,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -65,3 +65,11 @@\n-                Arguments.of(\"ExitLogging-FINE.properties\", 1, true),\n-                Arguments.of(\"ExitLogging-INFO.properties\", 2, false),\n-                Arguments.of(null, 3, false)\n+                \/\/ Logging enabled with level DEBUG\n+                Arguments.of(List.of(\"-Djava.util.logging.config.file=\" +\n+                        Path.of(TEST_SRC, \"ExitLogging-FINE.properties\").toString()), 1, true),\n+                \/\/ Logging disabled due to level\n+                Arguments.of(List.of(\"-Djava.util.logging.config.file=\" +\n+                        Path.of(TEST_SRC, \"ExitLogging-INFO.properties\").toString()), 2, false),\n+                \/\/ Console logger\n+                Arguments.of(List.of(\"--limit-modules\", \"java.base\",\n+                        \"-Djdk.system.logger.level=DEBUG\"), 3, true),\n+                \/\/ Console logger\n+                Arguments.of(List.of(), 4, false)\n@@ -79,1 +87,1 @@\n-    public void checkLogger(String logProps, int status, boolean shouldLog) {\n+    public void checkLogger(List<String> logProps, int status, boolean shouldLog) {\n@@ -85,3 +93,1 @@\n-        if (logProps != null) {\n-            cmd.add(\"-Djava.util.logging.config.file=\" + Path.of(TEST_SRC, logProps).toString());\n-        }\n+        cmd.addAll(logProps);\n","filename":"test\/jdk\/java\/lang\/runtime\/RuntimeExitLogTest.java","additions":13,"deletions":7,"binary":false,"changes":20,"status":"modified"}]}