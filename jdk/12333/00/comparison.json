{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -67,1 +67,1 @@\n-    if (addr == NULL || ret_sp == NULL ) {\n+    if (addr == nullptr || ret_sp == nullptr ) {\n@@ -75,1 +75,1 @@\n-      frame ret_frame2(ret_sp, NULL, addr);\n+      frame ret_frame2(ret_sp, nullptr, addr);\n","filename":"src\/hotspot\/os_cpu\/linux_aarch64\/javaThread_linux_aarch64.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -115,1 +115,1 @@\n-  if (uc != NULL) {\n+  if (uc != nullptr) {\n@@ -120,3 +120,3 @@\n-    epc = NULL;\n-    if (ret_sp) *ret_sp = (intptr_t *)NULL;\n-    if (ret_fp) *ret_fp = (intptr_t *)NULL;\n+    epc = nullptr;\n+    if (ret_sp) *ret_sp = (intptr_t *)nullptr;\n+    if (ret_fp) *ret_fp = (intptr_t *)nullptr;\n@@ -177,1 +177,1 @@\n-  if (info == NULL || info->si_code <= 0 || info->si_code == SI_NOINFO) {\n+  if (info == nullptr || info->si_code <= 0 || info->si_code == SI_NOINFO) {\n@@ -179,1 +179,1 @@\n-    info = NULL;\n+    info = nullptr;\n@@ -185,1 +185,1 @@\n-  address stub = NULL;\n+  address stub = nullptr;\n@@ -187,1 +187,1 @@\n-  address pc          = NULL;\n+  address pc          = nullptr;\n@@ -190,1 +190,1 @@\n-  if (info != NULL && uc != NULL && thread != NULL) {\n+  if (info != nullptr && uc != nullptr && thread != nullptr) {\n@@ -228,1 +228,1 @@\n-        CompiledMethod* nm = (cb != NULL) ? cb->as_compiled_method_or_null() : NULL;\n+        CompiledMethod* nm = (cb != nullptr) ? cb->as_compiled_method_or_null() : nullptr;\n@@ -230,1 +230,1 @@\n-        if ((nm != NULL && nm->has_unsafe_access()) || is_unsafe_arraycopy) {\n+        if ((nm != nullptr && nm->has_unsafe_access()) || is_unsafe_arraycopy) {\n@@ -251,1 +251,1 @@\n-        VMError::report_and_die(thread, uc, NULL, 0, msg, detail_msg, va_dummy);\n+        VMError::report_and_die(thread, uc, nullptr, 0, msg, detail_msg, va_dummy);\n@@ -293,1 +293,1 @@\n-  if (stub != NULL) {\n+  if (stub != nullptr) {\n@@ -295,1 +295,1 @@\n-    if (thread != NULL) thread->set_saved_exception_pc(pc);\n+    if (thread != nullptr) thread->set_saved_exception_pc(pc);\n@@ -334,1 +334,1 @@\n-  if (context == NULL) return;\n+  if (context == nullptr) return;\n@@ -346,1 +346,1 @@\n-  if (context == NULL) return;\n+  if (context == nullptr) return;\n@@ -363,1 +363,1 @@\n-  if (context == NULL) return;\n+  if (context == nullptr) return;\n","filename":"src\/hotspot\/os_cpu\/linux_aarch64\/os_linux_aarch64.cpp","additions":18,"deletions":18,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2006, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2006, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -160,3 +160,3 @@\n-    while (fgets(buf, sizeof (buf), f) != NULL) {\n-      if ((p = strchr(buf, ':')) != NULL) {\n-        long v = strtol(p+1, NULL, 0);\n+    while (fgets(buf, sizeof (buf), f) != nullptr) {\n+      if ((p = strchr(buf, ':')) != nullptr) {\n+        long v = strtol(p+1, nullptr, 0);\n@@ -184,1 +184,1 @@\n-  assert(buf != NULL, \"invalid argument\");\n+  assert(buf != nullptr, \"invalid argument\");\n@@ -214,1 +214,1 @@\n-    NULL\n+    nullptr\n@@ -217,1 +217,1 @@\n-  for (const char **fname = board_name_file_list; *fname != NULL; fname++) {\n+  for (const char **fname = board_name_file_list; *fname != nullptr; fname++) {\n","filename":"src\/hotspot\/os_cpu\/linux_aarch64\/vm_version_linux_aarch64.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"}]}