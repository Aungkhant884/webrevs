{"files":[{"patch":"@@ -2381,1 +2381,1 @@\n-  if (set_minimum_stack_sizes(PTHREAD_STACK_MIN) == JNI_ERR) {\n+  if (set_minimum_stack_sizes() == JNI_ERR) {\n","filename":"src\/hotspot\/os\/aix\/os_aix.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1983,1 +1983,1 @@\n-  if (set_minimum_stack_sizes(PTHREAD_STACK_MIN) == JNI_ERR) {\n+  if (set_minimum_stack_sizes() == JNI_ERR) {\n","filename":"src\/hotspot\/os\/bsd\/os_bsd.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -4486,1 +4486,1 @@\n-  if (set_minimum_stack_sizes(PTHREAD_STACK_MIN) == JNI_ERR) {\n+  if (set_minimum_stack_sizes() == JNI_ERR) {\n","filename":"src\/hotspot\/os\/linux\/os_linux.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -97,0 +97,3 @@\n+\/\/ Platform minimum stack allowed\n+size_t os::_os_min_stack_allowed = PTHREAD_STACK_MIN;\n+\n","filename":"src\/hotspot\/os\/posix\/os_posix.cpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -4257,0 +4257,5 @@\n+\/\/ If stack_commit_size is 0, windows will reserve the default size,\n+\/\/ but only commit a small portion of it.  This stack size is the size of this\n+\/\/ current thread but is larger than we need for Java threads.\n+\/\/ If -Xss is given to the launcher, it will pick 64K as default stack size and pass that.\n+size_t os::_os_min_stack_allowed = 64 * K;\n@@ -4282,6 +4287,0 @@\n-  \/\/ If stack_commit_size is 0, windows will reserve the default size,\n-  \/\/ but only commit a small portion of it.  This stack size is the size of this\n-  \/\/ current thread but is larger than we need for Java threads.\n-  \/\/ If -Xss is given to the launcher, it will pick 64K as default stack size and pass that.\n-  size_t minimum_stack_size = 64*K;\n-\n@@ -4289,1 +4288,1 @@\n-  if (set_minimum_stack_sizes(minimum_stack_size) == JNI_ERR) {\n+  if (set_minimum_stack_sizes(_plaform_minimum_stack_allowed) == JNI_ERR) {\n","filename":"src\/hotspot\/os\/windows\/os_windows.cpp","additions":6,"deletions":7,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2007,1 +2007,1 @@\n-jint os::set_minimum_stack_sizes(size_t os_min_stack_allowed) {\n+jint os::set_minimum_stack_sizes() {\n@@ -2014,1 +2014,1 @@\n-  _java_thread_min_stack_allowed = MAX2(_java_thread_min_stack_allowed, os_min_stack_allowed);\n+  _java_thread_min_stack_allowed = MAX2(_java_thread_min_stack_allowed, _os_min_stack_allowed);\n@@ -2038,1 +2038,1 @@\n-  _compiler_thread_min_stack_allowed = MAX2(_compiler_thread_min_stack_allowed, os_min_stack_allowed);\n+  _compiler_thread_min_stack_allowed = MAX2(_compiler_thread_min_stack_allowed, _os_min_stack_allowed);\n@@ -2050,1 +2050,1 @@\n-  _vm_internal_thread_min_stack_allowed = MAX2(_vm_internal_thread_min_stack_allowed, os_min_stack_allowed);\n+  _vm_internal_thread_min_stack_allowed = MAX2(_vm_internal_thread_min_stack_allowed, _os_min_stack_allowed);\n","filename":"src\/hotspot\/share\/runtime\/os.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -290,0 +290,1 @@\n+ private:\n@@ -299,0 +300,1 @@\n+  static size_t _os_min_stack_allowed;\n@@ -301,1 +303,1 @@\n-  static jint set_minimum_stack_sizes(size_t os_min_stack_allowed);\n+  static jint set_minimum_stack_sizes();\n@@ -303,0 +305,1 @@\n+ public:\n","filename":"src\/hotspot\/share\/runtime\/os.hpp","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"}]}