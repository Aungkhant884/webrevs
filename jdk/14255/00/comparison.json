{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -979,0 +979,1 @@\n+            \/\/ Retry if the privilege to create symbolic links is not held\n@@ -985,3 +986,9 @@\n-                } catch (WindowsException ignored) {\n-                    \/\/ Will fail with ERROR_INVALID_PARAMETER for Windows\n-                    \/\/ builds older than 14972.\n+                } catch (WindowsException y) {\n+                    \/\/ Throw an exception if and only if it is not due to symbolic link creation\n+                    \/\/ privilege not being held (ERROR_PRIVILEGE_NOT_HELD) nor the\n+                    \/\/ SYMBOLIC_LINK_FLAG_ALLOW_UNPRIVILEGED_CREATE flag not being recognized\n+                    \/\/ (ERROR_INVALID_PARAMETER). The latter will occur for Windows builds\n+                    \/\/ older than 14972.\n+                    int lastError = y.lastError();\n+                    if (lastError != ERROR_PRIVILEGE_NOT_HELD && lastError != ERROR_INVALID_PARAMETER)\n+                        throw y;\n","filename":"src\/java.base\/windows\/classes\/sun\/nio\/fs\/WindowsNativeDispatcher.java","additions":11,"deletions":4,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,1 +25,1 @@\n- * @bug 4313887 6838333 6863864\n+ * @bug 4313887 6838333 6863864 8307887\n@@ -51,0 +51,13 @@\n+        \/\/ Check for FileAlreadyExistsException. This must be done\n+        \/\/ before the check of whether symlinks are supported.\n+        Path pathLink = Files.createTempFile(\"link\", null);\n+        Path pathTarget = Files.createTempFile(\"target\", null);\n+        try {\n+            Files.createSymbolicLink(pathLink, pathTarget);\n+            throw new RuntimeException(\"Symbolic link created\");\n+        } catch (FileAlreadyExistsException expected) {\n+        } finally {\n+            Files.deleteIfExists(pathLink);\n+            Files.deleteIfExists(pathTarget);\n+        }\n+\n","filename":"test\/jdk\/java\/nio\/file\/Files\/Links.java","additions":15,"deletions":2,"binary":false,"changes":17,"status":"modified"}]}