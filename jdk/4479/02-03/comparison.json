{"files":[{"patch":"@@ -30,1 +30,0 @@\n-#include \"runtime\/os.hpp\"\n@@ -32,2 +31,1 @@\n-\/\/ RAII class which implements a lock using semaphore(1)\n-class SemaphoreLocker : public StackObj {\n+class AsyncLogLocker : public StackObj {\n@@ -35,1 +33,0 @@\n-  DEBUG_ONLY(intx _locking_thread_id;)\n@@ -38,5 +35,1 @@\n-  SemaphoreLocker(Semaphore* sem): _sem(sem)\n-  DEBUG_ONLY(COMMA _locking_thread_id(os::current_thread_id())) {\n-\n-    assert(sem != nullptr && sem->_value == 1,\n-          \"given semaphore must guarantee mutual exclusion!\");\n+  AsyncLogLocker(Semaphore* sem): _sem(sem) {\n@@ -46,2 +39,1 @@\n-  ~SemaphoreLocker() {\n-    DEBUG_ONLY(_locking_thread_id = -1);\n+  ~AsyncLogLocker() {\n@@ -50,6 +42,0 @@\n-\n-#ifdef ASSERT\n-  bool current_thread_has_lock() {\n-    return _locking_thread_id == os::current_thread_id();\n-  }\n-#endif\n@@ -76,1 +62,1 @@\n-    SemaphoreLocker locker(&_lock);\n+    AsyncLogLocker locker(&_lock);\n@@ -78,1 +64,0 @@\n-    assert(locker.current_thread_has_lock(), \"critical region is broken\");\n@@ -85,1 +70,1 @@\n-  SemaphoreLocker locker(&_lock);\n+  AsyncLogLocker locker(&_lock);\n@@ -91,2 +76,0 @@\n-\n-  assert(locker.current_thread_has_lock(), \"critical region is broken\");\n@@ -141,1 +124,1 @@\n-    SemaphoreLocker locker(&_lock);\n+    AsyncLogLocker locker(&_lock);\n@@ -148,1 +131,0 @@\n-    assert(locker.current_thread_has_lock(), \"critical region is broken\");\n","filename":"src\/hotspot\/share\/logging\/logAsyncWriter.cpp","additions":6,"deletions":24,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,2 +45,0 @@\n-  friend class SemaphoreLocker;\n-\n@@ -48,1 +46,0 @@\n-  DEBUG_ONLY(const uint _value;)\n@@ -53,1 +50,1 @@\n-  Semaphore(uint value = 0) : _impl(value) DEBUG_ONLY(COMMA _value(value)) {}\n+  Semaphore(uint value = 0) : _impl(value) {}\n","filename":"src\/hotspot\/share\/runtime\/semaphore.hpp","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"}]}