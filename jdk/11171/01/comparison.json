{"files":[{"patch":"@@ -181,0 +181,4 @@\n+            <file name=\"SeparatorOptions.instance\">\n+                <attr name=\"instanceClass\" stringvalue=\"javax.swing.JSeparator\"\/>\n+                <attr name=\"position\" intvalue=\"50\"\/>\n+            <\/file>\n","filename":"src\/utils\/IdealGraphVisualizer\/Coordinator\/src\/main\/resources\/com\/sun\/hotspot\/igv\/coordinator\/layer.xml","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -190,9 +190,11 @@\n-            Set<Integer> ids = coordinator.getHighlightedObjects();\n-            Set<Object> result = new HashSet<>();\n-            for (Figure figure : getModel().getDiagram().getFigures()) {\n-                if (ids.contains(figure.getInputNode().getId())) {\n-                    result.add(figure);\n-                }\n-                for (Slot slot : figure.getSlots()) {\n-                    if (!Collections.disjoint(slot.getSource().getSourceNodesAsSet(), ids)) {\n-                        result.add(slot);\n+            if (model.getGlobalSelection()) {\n+                Set<Integer> ids = coordinator.getHighlightedObjects();\n+                Set<Object> highlightedObjects = new HashSet<>();\n+                for (Figure figure : getModel().getDiagram().getFigures()) {\n+                    if (ids.contains(figure.getInputNode().getId())) {\n+                        highlightedObjects.add(figure);\n+                    }\n+                    for (Slot slot : figure.getSlots()) {\n+                        if (!Collections.disjoint(slot.getSource().getSourceNodesAsSet(), ids)) {\n+                            highlightedObjects.add(slot);\n+                        }\n@@ -201,0 +203,2 @@\n+                setHighlightedObjects(highlightedObjects);\n+                validateAll();\n@@ -202,2 +206,0 @@\n-            setHighlightedObjects(result);\n-            validateAll();\n@@ -210,5 +212,7 @@\n-            Set<Integer> ids = coordinator.getSelectedObjects();\n-            Set<Figure> figures = new HashSet<>();\n-            for (Figure figure : getModel().getDiagram().getFigures()) {\n-                if (ids.contains(figure.getInputNode().getId())) {\n-                    figures.add(figure);\n+            if (model.getGlobalSelection()) {\n+                Set<Integer> ids = coordinator.getSelectedObjects();\n+                Set<Figure> selectedFigures = new HashSet<>();\n+                for (Figure figure : getModel().getDiagram().getFigures()) {\n+                    if (ids.contains(figure.getInputNode().getId())) {\n+                        selectedFigures.add(figure);\n+                    }\n@@ -216,0 +220,3 @@\n+                setFigureSelection(selectedFigures);\n+                centerSelectedFigures();\n+                validateAll();\n@@ -217,3 +224,0 @@\n-            setFigureSelection(figures);\n-            centerSelectedFigures();\n-            validateAll();\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/DiagramScene.java","additions":23,"deletions":19,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -38,0 +38,1 @@\n+import com.sun.hotspot.igv.view.actions.GlobalSelectionAction;\n@@ -68,0 +69,1 @@\n+    private static  boolean globalSelection = false;\n@@ -75,0 +77,9 @@\n+    public boolean getGlobalSelection() {\n+        return globalSelection;\n+    }\n+\n+    public void setGlobalSelection(boolean enable) {\n+        globalSelection = enable;\n+        diagramChangedEvent.fire();\n+    }\n+\n@@ -142,0 +153,1 @@\n+        globalSelection = GlobalSelectionAction.get(GlobalSelectionAction.class).isSelected();\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/DiagramViewModel.java","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -78,1 +78,0 @@\n-\n@@ -226,0 +225,4 @@\n+\n+        JToggleButton globalSelectionButton = new JToggleButton(GlobalSelectionAction.get(GlobalSelectionAction.class));\n+        globalSelectionButton.setHideActionText(true);\n+        toolBar.add(globalSelectionButton);\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/EditorTopComponent.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -55,1 +55,1 @@\n-        return NbBundle.getMessage(NextDiagramAction.class, \"CTL_ExpandDiffAction\");\n+        return NbBundle.getMessage(ExpandDiffAction.class, \"CTL_ExpandDiffAction\");\n@@ -60,1 +60,1 @@\n-        return NbBundle.getMessage(NextDiagramAction.class, \"HINT_ExpandDiffAction\");\n+        return NbBundle.getMessage(ExpandDiffAction.class, \"HINT_ExpandDiffAction\");\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/actions\/ExpandDiffAction.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -57,1 +57,1 @@\n-        return NbBundle.getMessage(NextDiagramAction.class, \"HINT_ExtractAction\");\n+        return NbBundle.getMessage(ExtractAction.class, \"HINT_ExtractAction\");\n@@ -62,1 +62,1 @@\n-        return NbBundle.getMessage(NextDiagramAction.class, \"CTL_ExtractAction\");\n+        return NbBundle.getMessage(ExtractAction.class, \"CTL_ExtractAction\");\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/actions\/ExtractAction.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -0,0 +1,98 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+package com.sun.hotspot.igv.view.actions;\n+\n+import com.sun.hotspot.igv.view.EditorTopComponent;\n+import javax.swing.AbstractAction;\n+import javax.swing.Action;\n+import javax.swing.ImageIcon;\n+import javax.swing.SwingUtilities;\n+import org.openide.awt.ActionID;\n+import org.openide.awt.ActionReference;\n+import org.openide.awt.ActionReferences;\n+import org.openide.awt.ActionRegistration;\n+import org.openide.util.HelpCtx;\n+import org.openide.util.ImageUtilities;\n+import org.openide.util.NbBundle;\n+import org.openide.util.actions.CallableSystemAction;\n+\n+@ActionID(category = \"View\", id = \"com.sun.hotspot.igv.view.actions.GlobalSelectionAction\")\n+@ActionRegistration(displayName = \"#CTL_GlobalSelectionAction\")\n+@ActionReferences({\n+        @ActionReference(path = \"Menu\/Options\", position = 300),\n+        @ActionReference(path = \"Shortcuts\", name = \"D-L\")\n+})\n+@NbBundle.Messages({\n+        \"CTL_GlobalSelectionAction=Link selection globally\",\n+        \"HINT_GlobalSelectionAction=Link node selection globally\"\n+})\n+public final class GlobalSelectionAction extends CallableSystemAction {\n+\n+    private boolean isSelected;\n+\n+    public GlobalSelectionAction() {\n+        putValue(AbstractAction.SMALL_ICON, new ImageIcon(ImageUtilities.loadImage(iconResource())));\n+        putValue(Action.SHORT_DESCRIPTION, getDescription());\n+        putValue(SELECTED_KEY, false);\n+        isSelected = false;\n+    }\n+\n+    @Override\n+    public String getName() {\n+        return NbBundle.getMessage(GlobalSelectionAction.class, \"CTL_GlobalSelectionAction\");\n+    }\n+\n+    @Override\n+    public HelpCtx getHelpCtx() {\n+        return HelpCtx.DEFAULT_HELP;\n+    }\n+\n+    @Override\n+    public void performAction() {\n+        isSelected = !isSelected;\n+        putValue(SELECTED_KEY, isSelected);\n+        EditorTopComponent editor = EditorTopComponent.getActive();\n+        if (editor != null) {\n+            SwingUtilities.invokeLater(() -> editor.getModel().setGlobalSelection(isSelected));\n+        }\n+    }\n+\n+    public boolean isSelected() {\n+        return isSelected;\n+    }\n+\n+    private String getDescription() {\n+        return NbBundle.getMessage(GlobalSelectionAction.class, \"HINT_GlobalSelectionAction\");\n+    }\n+\n+    @Override\n+    protected boolean asynchronous() {\n+        return false;\n+    }\n+\n+    @Override\n+    public String iconResource() {\n+        return \"com\/sun\/hotspot\/igv\/view\/images\/chain.png\";\n+    }\n+}\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/actions\/GlobalSelectionAction.java","additions":98,"deletions":0,"binary":false,"changes":98,"status":"added"},{"patch":"@@ -59,1 +59,1 @@\n-        return NbBundle.getMessage(NextDiagramAction.class, \"CTL_HideAction\");\n+        return NbBundle.getMessage(HideAction.class, \"CTL_HideAction\");\n@@ -64,1 +64,1 @@\n-        return NbBundle.getMessage(NextDiagramAction.class, \"HINT_HideAction\");\n+        return NbBundle.getMessage(HideAction.class, \"HINT_HideAction\");\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/actions\/HideAction.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -57,1 +57,1 @@\n-        return NbBundle.getMessage(NextDiagramAction.class, \"CTL_PrevDiagramAction\");\n+        return NbBundle.getMessage(PrevDiagramAction.class, \"CTL_PrevDiagramAction\");\n@@ -62,1 +62,1 @@\n-        return NbBundle.getMessage(NextDiagramAction.class, \"HINT_PrevDiagramAction\");\n+        return NbBundle.getMessage(PrevDiagramAction.class, \"HINT_PrevDiagramAction\");\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/actions\/PrevDiagramAction.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -55,1 +55,1 @@\n-        return NbBundle.getMessage(NextDiagramAction.class, \"HINT_ReduceDiffAction\");\n+        return NbBundle.getMessage(ReduceDiffAction.class, \"HINT_ReduceDiffAction\");\n@@ -60,1 +60,1 @@\n-        return NbBundle.getMessage(NextDiagramAction.class, \"CTL_ReduceDiffAction\");\n+        return NbBundle.getMessage(ReduceDiffAction.class, \"CTL_ReduceDiffAction\");\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/actions\/ReduceDiffAction.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -58,1 +58,1 @@\n-        return NbBundle.getMessage(NextDiagramAction.class, \"HINT_ShowAllAction\");\n+        return NbBundle.getMessage(ShowAllAction.class, \"HINT_ShowAllAction\");\n@@ -63,1 +63,1 @@\n-        return NbBundle.getMessage(NextDiagramAction.class, \"CTL_ShowAllAction\");\n+        return NbBundle.getMessage(ShowAllAction.class, \"CTL_ShowAllAction\");\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/actions\/ShowAllAction.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -69,1 +69,1 @@\n-        return NbBundle.getMessage(NextDiagramAction.class, \"CTL_ZoomInAction\");\n+        return NbBundle.getMessage(ZoomInAction.class, \"CTL_ZoomInAction\");\n@@ -73,1 +73,1 @@\n-        return NbBundle.getMessage(NextDiagramAction.class, \"HINT_ZoomInAction\");\n+        return NbBundle.getMessage(ZoomInAction.class, \"HINT_ZoomInAction\");\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/actions\/ZoomInAction.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -68,1 +68,1 @@\n-        return NbBundle.getMessage(NextDiagramAction.class, \"CTL_ZoomOutAction\");\n+        return NbBundle.getMessage(ZoomOutAction.class, \"CTL_ZoomOutAction\");\n@@ -72,1 +72,1 @@\n-        return NbBundle.getMessage(NextDiagramAction.class, \"HINT_ZoomOutAction\");\n+        return NbBundle.getMessage(ZoomOutAction.class, \"HINT_ZoomOutAction\");\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/actions\/ZoomOutAction.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -64,1 +64,1 @@\n-        return NbBundle.getMessage(NextDiagramAction.class, \"CTL_ZoomResetAction\");\n+        return NbBundle.getMessage(ZoomResetAction.class, \"CTL_ZoomResetAction\");\n@@ -68,1 +68,1 @@\n-        return NbBundle.getMessage(NextDiagramAction.class, \"HINT_ZoomResetAction\");\n+        return NbBundle.getMessage(ZoomResetAction.class, \"HINT_ZoomResetAction\");\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/actions\/ZoomResetAction.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/resources\/com\/sun\/hotspot\/igv\/view\/images\/chain.png","binary":true,"status":"added"}]}