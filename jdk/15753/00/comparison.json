{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -674,2 +674,2 @@\n-    public OutputAnalyzer shouldMatchByLineFrom(String from, String pattern) {\n-        return shouldMatchByLine(from, null, pattern);\n+    public OutputAnalyzer shouldMatchByLineFrom(String fromPattern, String pattern) {\n+        return shouldMatchByLine(fromPattern, null, pattern);\n@@ -681,2 +681,2 @@\n-    public OutputAnalyzer shouldMatchByLineTo(String to, String pattern) {\n-        return shouldMatchByLine(null, to, pattern);\n+    public OutputAnalyzer shouldMatchByLineTo(String toPattern, String pattern) {\n+        return shouldMatchByLine(null, toPattern, pattern);\n@@ -690,6 +690,6 @@\n-     * @param from\n-     *            The line (excluded) from where output will be matched.\n-     *            Set {@code from} to null for matching from the first line.\n-     * @param to\n-     *            The line (excluded) until where output will be matched.\n-     *            Set {@code to} to null for matching until the last line.\n+     * @param fromPattern\n+     *            The pattern of line (excluded) from where output will be matched.\n+     *            Set {@code fromPattern} to null for matching from the first line.\n+     * @param toPattern\n+     *            The pattern of line (excluded) until where output will be matched.\n+     *            Set {@code toPattern} to null for matching until the last line.\n@@ -699,2 +699,2 @@\n-    public OutputAnalyzer shouldMatchByLine(String from, String to, String pattern) {\n-        return shouldMatchByLine(getOutput(), from, to, pattern);\n+    public OutputAnalyzer shouldMatchByLine(String fromPattern, String toPattern, String pattern) {\n+        return shouldMatchByLine(getOutput(), fromPattern, toPattern, pattern);\n@@ -708,6 +708,6 @@\n-     * @param from\n-     *            The line (excluded) from where stdout will be matched.\n-     *            Set {@code from} to null for matching from the first line.\n-     * @param to\n-     *            The line (excluded) until where stdout will be matched.\n-     *            Set {@code to} to null for matching until the last line.\n+     * @param fromPattern\n+     *            The pattern of line (excluded) from where stdout will be matched.\n+     *            Set {@code fromPattern} to null for matching from the first line.\n+     * @param toPattern\n+     *            The pattern of line (excluded) until where stdout will be matched.\n+     *            Set {@code toPattern} to null for matching until the last line.\n@@ -717,2 +717,2 @@\n-    public OutputAnalyzer stdoutShouldMatchByLine(String from, String to, String pattern) {\n-        return shouldMatchByLine(getStdout(), from, to, pattern);\n+    public OutputAnalyzer stdoutShouldMatchByLine(String fromPattern, String toPattern, String pattern) {\n+        return shouldMatchByLine(getStdout(), fromPattern, toPattern, pattern);\n@@ -721,1 +721,1 @@\n-    private OutputAnalyzer shouldMatchByLine(String buffer, String from, String to, String pattern) {\n+    private OutputAnalyzer shouldMatchByLine(String buffer, String fromPattern, String toPattern, String pattern) {\n@@ -725,2 +725,2 @@\n-        if (from != null) {\n-            fromIndex = indexOf(lines, from, 0) + 1; \/\/ + 1 -> apply 'pattern' to lines after 'from' match\n+        if (fromPattern != null) {\n+            fromIndex = indexOf(lines, fromPattern, 0) + 1; \/\/ + 1 -> apply 'pattern' to lines after 'from' match\n@@ -728,1 +728,1 @@\n-                    \"The line\/pattern '\" + from + \"' from where the output should match can not be found\");\n+                    \"The line matched with pattern '\" + fromPattern + \"' from where the output should match can not be found\");\n@@ -732,2 +732,2 @@\n-        if (to != null) {\n-            toIndex = indexOf(lines, to, fromIndex);\n+        if (toPattern != null) {\n+            toIndex = indexOf(lines, toPattern, fromIndex);\n@@ -735,1 +735,1 @@\n-                    \"The line\/pattern '\" + to + \"' until where the output should match can not be found\");\n+                    \"The line matched with pattern '\" + toPattern + \"' until where the output should match can not be found\");\n","filename":"test\/lib\/jdk\/test\/lib\/process\/OutputAnalyzer.java","additions":28,"deletions":28,"binary":false,"changes":56,"status":"modified"}]}