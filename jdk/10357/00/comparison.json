{"files":[{"patch":"@@ -33,0 +33,1 @@\n+import java.util.function.Function;\n@@ -221,8 +222,13 @@\n-        return pdcache.computeIfAbsent(key, unused -> {\n-            PermissionCollection perms\n-                    = SecureClassLoader.this.getPermissions(cs);\n-            ProtectionDomain pd = new ProtectionDomain(\n-                    cs, perms, SecureClassLoader.this, null);\n-            if (DebugHolder.debug != null) {\n-                DebugHolder.debug.println(\" getPermissions \" + pd);\n-                DebugHolder.debug.println(\"\");\n+        return pdcache.computeIfAbsent(key, new Function<>() {\n+            \/\/ Do not turn this into a lambda since it is executed during bootstrap\n+            @Override\n+            public ProtectionDomain apply(CodeSourceKey key) {\n+                PermissionCollection perms\n+                        = SecureClassLoader.this.getPermissions(key.cs);\n+                ProtectionDomain pd = new ProtectionDomain(\n+                        key.cs, perms, SecureClassLoader.this, null);\n+                if (DebugHolder.debug != null) {\n+                    DebugHolder.debug.println(\" getPermissions \" + pd);\n+                    DebugHolder.debug.println(\"\");\n+                }\n+                return pd;\n@@ -230,1 +236,0 @@\n-            return pd;\n","filename":"src\/java.base\/share\/classes\/java\/security\/SecureClassLoader.java","additions":14,"deletions":9,"binary":false,"changes":23,"status":"modified"}]}