{"files":[{"patch":"@@ -1747,1 +1747,1 @@\n-    jlong offset = field->offset();\n+    int offset = field->offset();\n@@ -1753,1 +1753,1 @@\n-void ReducedAllocationMergeNode::register_offset(jlong offset, Node* memory, bool override) {\n+void ReducedAllocationMergeNode::register_offset(int offset, Node* memory, bool override) {\n@@ -1756,2 +1756,2 @@\n-  if ((*_fields_and_memories)[(void*)offset] == NULL) {\n-    _fields_and_memories->Insert((void*)offset, (void*)(intptr_t)req());\n+  if ((*_fields_and_memories)[(void*)(intptr_t)offset] == NULL) {\n+    _fields_and_memories->Insert((void*)(intptr_t)offset, (void*)(intptr_t)req());\n@@ -1777,1 +1777,1 @@\n-  jlong offset = addp->in(AddPNode::Offset)->find_long_con(-1);\n+  int offset = addp->in(AddPNode::Offset)->find_intptr_t_con(-1);\n@@ -1805,1 +1805,1 @@\n-Node* ReducedAllocationMergeNode::memory_for(jlong offset, Node* base, uint previous_matches) const {\n+Node* ReducedAllocationMergeNode::memory_for(int offset, Node* base, uint previous_matches) const {\n@@ -1821,1 +1821,1 @@\n-void ReducedAllocationMergeNode::register_value_for_field(jlong offset, Node* base, Node* value, uint previous_matches) {\n+void ReducedAllocationMergeNode::register_value_for_field(int offset, Node* base, Node* value, uint previous_matches) {\n@@ -1829,1 +1829,1 @@\n-Node* ReducedAllocationMergeNode::make_load(Node* ctrl, Node* base, Node* mem, jlong offset, PhaseIterGVN* igvn) {\n+Node* ReducedAllocationMergeNode::make_load(Node* ctrl, Node* base, Node* mem, int offset, PhaseIterGVN* igvn) {\n@@ -1867,1 +1867,1 @@\n-Node* ReducedAllocationMergeNode::value_phi_for_field(jlong field, PhaseIterGVN* igvn) {\n+Node* ReducedAllocationMergeNode::value_phi_for_field(int field, PhaseIterGVN* igvn) {\n","filename":"src\/hotspot\/share\/opto\/callnode.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -1120,1 +1120,1 @@\n-  int field_idx(jlong offset) const {\n+  int field_idx(int offset) const {\n@@ -1122,1 +1122,1 @@\n-    return (intptr_t) (*_fields_and_memories)[(void*)offset];\n+    return (intptr_t) (*_fields_and_memories)[(void*)(intptr_t)offset];\n@@ -1139,2 +1139,2 @@\n-  bool needs_field(intptr_t offset) const {\n-    return (*_fields_and_memories)[(void*)offset] != NULL;\n+  bool needs_field(int offset) const {\n+    return (*_fields_and_memories)[(void*)(intptr_t)offset] != NULL;\n@@ -1145,1 +1145,1 @@\n-  void register_offset(jlong offset, Node* memory, bool override = false);\n+  void register_offset(int offset, Node* memory, bool override = false);\n@@ -1148,1 +1148,1 @@\n-  Node* memory_for(jlong field, Node* base, uint previous_matches) const;\n+  Node* memory_for(int field, Node* base, uint previous_matches) const;\n@@ -1150,1 +1150,1 @@\n-  void register_value_for_field(jlong field, Node* base, Node* value, uint previous_matches) ;\n+  void register_value_for_field(int field, Node* base, Node* value, uint previous_matches) ;\n@@ -1152,2 +1152,2 @@\n-  Node* make_load(Node* ctrl, Node* base, Node* mem, jlong offset, PhaseIterGVN* igvn);\n-  Node* value_phi_for_field(jlong field, PhaseIterGVN* igvn) ;\n+  Node* make_load(Node* ctrl, Node* base, Node* mem, int offset, PhaseIterGVN* igvn);\n+  Node* value_phi_for_field(int field, PhaseIterGVN* igvn) ;\n","filename":"src\/hotspot\/share\/opto\/callnode.hpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -613,1 +613,1 @@\n-      if (use->in(AddPNode::Offset)->find_long_con(-1) == -1) {\n+      if (use->in(AddPNode::Offset)->find_intptr_t_con(-1) == -1) {\n","filename":"src\/hotspot\/share\/opto\/escape.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1201,1 +1201,1 @@\n-  jlong offset = addp->in(AddPNode::Offset)->find_long_con(-1);\n+  int offset = (int)addp->in(AddPNode::Offset)->find_intptr_t_con(-1);\n@@ -1273,1 +1273,1 @@\n-        jlong offset = field->offset();\n+        int offset = field->offset();\n","filename":"src\/hotspot\/share\/opto\/macro.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}