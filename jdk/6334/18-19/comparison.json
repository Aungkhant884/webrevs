{"files":[{"patch":"@@ -274,1 +274,1 @@\n-    __ enter_subframe(); \/\/ barrier may call runtime\n+    __ enter(true); \/\/ barrier may call runtime\n","filename":"src\/hotspot\/cpu\/aarch64\/gc\/g1\/g1BarrierSetAssembler_aarch64.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -240,1 +240,1 @@\n-  __ enter_subframe();\n+  __ enter(true);\n@@ -362,1 +362,1 @@\n-    __ enter_subframe();\n+    __ enter(true);\n","filename":"src\/hotspot\/cpu\/aarch64\/gc\/shenandoah\/shenandoahBarrierSetAssembler_aarch64.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -81,1 +81,1 @@\n-  __ enter_subframe();\n+  __ enter(true);\n","filename":"src\/hotspot\/cpu\/aarch64\/gc\/z\/zBarrierSetAssembler_aarch64.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -5285,1 +5285,6 @@\n-void MacroAssembler::enter() {\n+void MacroAssembler::enter(bool strip_ret_addr) {\n+  if (strip_ret_addr) {\n+    \/\/ Addresses can only be signed once. If there are multiple nested frames being created\n+    \/\/ in the same function, then the return address needs stripping first.\n+    strip_return_address();\n+  }\n@@ -5291,8 +5296,0 @@\n-\/\/ Create an additional frame for a function.\n-void MacroAssembler::enter_subframe() {\n-  \/\/ Addresses can only be signed once, so strip it first. PAC safe because the value is not\n-  \/\/ coming from memory.\n-  strip_return_address();\n-  enter();\n-}\n-\n","filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.cpp","additions":6,"deletions":9,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -691,2 +691,1 @@\n-  void enter();\n-  void enter_subframe();\n+  void enter(bool strip_ret_addr = false);\n","filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.hpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"}]}