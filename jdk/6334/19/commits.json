[{"commit":{"message":"Merge enter_subframe into enter"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/gc\/g1\/g1BarrierSetAssembler_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/gc\/shenandoah\/shenandoahBarrierSetAssembler_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/gc\/z\/zBarrierSetAssembler_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.hpp"}],"sha":"f779513bddb43ebca78f0c999dee79931104521f"},{"commit":{"message":"Review fixups"},"files":[{"filename":"doc\/building.md"},{"filename":"src\/hotspot\/cpu\/aarch64\/assembler_aarch64.hpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/frame_aarch64.cpp"},{"filename":"src\/hotspot\/os_cpu\/linux_aarch64\/pauth_linux_aarch64.inline.hpp"}],"sha":"614a32625d231d26175b32f6e44454da3515209d"},{"commit":{"message":"Documentation updates"},"files":[{"filename":"doc\/building.md"},{"filename":"src\/java.base\/share\/man\/java.1"}],"sha":"d97883b50dfa88ef57fd69e613c486fff62a63e8"},{"commit":{"message":"Update copyrights to 2022"},"files":[{"filename":"make\/autoconf\/flags-cflags.m4"},{"filename":"make\/autoconf\/spec.gmk.in"},{"filename":"src\/hotspot\/cpu\/aarch64\/c1_Runtime1_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/frame_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/globals_aarch64.hpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/pauth_aarch64.hpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/sharedRuntime_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/vm_version_aarch64.hpp"},{"filename":"src\/hotspot\/os_cpu\/bsd_aarch64\/pauth_bsd_aarch64.inline.hpp"},{"filename":"src\/hotspot\/os_cpu\/linux_aarch64\/pauth_linux_aarch64.inline.hpp"},{"filename":"src\/hotspot\/os_cpu\/linux_aarch64\/threadLS_linux_aarch64.S"},{"filename":"src\/hotspot\/os_cpu\/windows_aarch64\/pauth_windows_aarch64.inline.hpp"},{"filename":"src\/hotspot\/share\/opto\/runtime.cpp"},{"filename":"src\/hotspot\/share\/runtime\/frame.cpp"},{"filename":"src\/hotspot\/share\/runtime\/sharedRuntime.cpp"},{"filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk.vm.ci.aarch64\/src\/jdk\/vm\/ci\/aarch64\/AArch64.java"}],"sha":"6255d4c8b712b345dd22d0abbd6c082e9314d6dd"},{"commit":{"message":"Change pac-ret defaults on non PAC machines"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/vm_version_aarch64.cpp"}],"sha":"78da1bd06139457827503cc22da15dd969620d40"},{"commit":{"message":"Fix up nits"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/globals_aarch64.hpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/vm_version_aarch64.cpp"},{"filename":"src\/hotspot\/share\/gc\/shared\/barrierSetNMethod.cpp"},{"filename":"src\/hotspot\/share\/opto\/runtime.cpp"},{"filename":"src\/hotspot\/share\/runtime\/frame.cpp"}],"sha":"b792561484c24131cd9fe7c65fc0f68540df8058"},{"commit":{"message":"Fix popframe failures"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/templateInterpreterGenerator_aarch64.cpp"}],"sha":"0b476542a3c70321708c3701fa3def5fa340007e"},{"commit":{"message":"Fix jvmci tests"},"files":[{"filename":"src\/hotspot\/share\/jvmci\/vmStructs_jvmci.cpp"},{"filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/jdk.vm.ci.code.test\/src\/jdk\/vm\/ci\/code\/test\/CodeInstallationTest.java"},{"filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/jdk.vm.ci.code.test\/src\/jdk\/vm\/ci\/code\/test\/TestHotSpotVMConfig.java"},{"filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/jdk.vm.ci.code.test\/src\/jdk\/vm\/ci\/code\/test\/aarch64\/AArch64TestAssembler.java"}],"sha":"147994211896c70b629116373cde53fbf38bd8fe"},{"commit":{"message":"Fix GC issues"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/gc\/g1\/g1BarrierSetAssembler_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/gc\/shenandoah\/shenandoahBarrierSetAssembler_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/gc\/z\/zBarrierSetAssembler_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.hpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/templateInterpreterGenerator_aarch64.cpp"},{"filename":"src\/hotspot\/share\/gc\/shared\/barrierSetNMethod.cpp"}],"sha":"83d216783561fc086b5cb0ae97f8b75b6a8e1b07"},{"commit":{"message":"Merge master"},"files":[{"filename":"make\/autoconf\/spec.gmk.in"},{"filename":"src\/hotspot\/cpu\/aarch64\/aarch64.ad"},{"filename":"src\/hotspot\/cpu\/aarch64\/assembler_aarch64.hpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.hpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/sharedRuntime_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/vm_version_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/vm_version_aarch64.hpp"},{"filename":"src\/hotspot\/os_cpu\/linux_aarch64\/vm_version_linux_aarch64.cpp"},{"filename":"src\/hotspot\/share\/opto\/runtime.cpp"},{"filename":"src\/hotspot\/share\/runtime\/frame.cpp"},{"filename":"test\/hotspot\/gtest\/aarch64\/aarch64-asmtest.py"},{"filename":"test\/hotspot\/gtest\/aarch64\/asmtest.out.h"}],"sha":"f6f80412e4d584e9001cf3d6918060f4ea059b7c"},{"commit":{"message":"Fix assembler for post-merge"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/assembler_aarch64.hpp"}],"sha":"3cc2c5ef3d9e7f1fdaadd9e7339044e7afeb5540"},{"commit":{"message":"Change UseROPProtection to UseBranchProtection\n\nChange-Id: I31c5e1bb5c285262f262459c13057a46221682f1\nCustomizedGitHooks: yes"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/aarch64.ad"},{"filename":"src\/hotspot\/cpu\/aarch64\/globals_aarch64.hpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/pauth_aarch64.hpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/vm_version_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/vm_version_aarch64.hpp"},{"filename":"src\/hotspot\/os_cpu\/linux_aarch64\/pauth_linux_aarch64.inline.hpp"}],"sha":"9c4f349843b1740b591e1dc5f4820d0cf981e17f"},{"commit":{"message":"Remove BSD\/Apple specific code"},"files":[{"filename":"src\/hotspot\/os_cpu\/bsd_aarch64\/pauth_bsd_aarch64.inline.hpp"}],"sha":"63f7515f0f0e7f2afad2792b6c711ae4bc7976df"},{"commit":{"message":"Default to building without branch-protection"},"files":[{"filename":"make\/autoconf\/flags-cflags.m4"}],"sha":"38c08ef5a0fecf481c9fefd0dfcb0fef6565bc97"},{"commit":{"message":"Fix up UseROPProtection flag"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/vm_version_aarch64.cpp"}],"sha":"995d8aa3f7bb27e5633748b9c210086dff51dac6"},{"commit":{"message":"Merge master"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/aarch64.ad"},{"filename":"src\/hotspot\/cpu\/aarch64\/assembler_aarch64.hpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/vm_version_aarch64.cpp"},{"filename":"src\/hotspot\/share\/opto\/runtime.cpp"},{"filename":"src\/hotspot\/share\/runtime\/sharedRuntime.cpp"},{"filename":"test\/hotspot\/gtest\/aarch64\/aarch64-asmtest.py"},{"filename":"test\/hotspot\/gtest\/aarch64\/asmtest.out.h"}],"sha":"280abc41356697a197147c8076de9998b80de803"},{"commit":{"message":"Merge master"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/aarch64.ad"},{"filename":"src\/hotspot\/cpu\/aarch64\/assembler_aarch64.hpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.hpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/sharedRuntime_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/vm_version_aarch64.cpp"},{"filename":"src\/hotspot\/share\/runtime\/sharedRuntime.cpp"},{"filename":"test\/hotspot\/gtest\/aarch64\/aarch64-asmtest.py"},{"filename":"test\/hotspot\/gtest\/aarch64\/asmtest.out.h"}],"sha":"deb17a566e2405eb98a1b23aec167bb7b2599f0f"},{"commit":{"message":"Rename pauth_authenticate_or_strip_return_address"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/frame_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/pauth_aarch64.hpp"}],"sha":"dbd6bda24f316865d54b334a7c1da569c0d562d0"},{"commit":{"message":"Fix windows aarch64 by restoring pauth file split"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/pauth_aarch64.hpp"},{"filename":"src\/hotspot\/os_cpu\/bsd_aarch64\/pauth_bsd_aarch64.inline.hpp"},{"filename":"src\/hotspot\/os_cpu\/linux_aarch64\/pauth_linux_aarch64.inline.hpp"},{"filename":"src\/hotspot\/os_cpu\/windows_aarch64\/pauth_windows_aarch64.inline.hpp"}],"sha":"6f501e6b638395304249252d73d824dc141368e2"},{"commit":{"message":"Don't keep LR live across restore_live_registers"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/c1_Runtime1_aarch64.cpp"}],"sha":"a810ea7541a315415a3906a3aaa14791b7225076"},{"commit":{"message":"Merge master"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/aarch64.ad"},{"filename":"src\/hotspot\/cpu\/aarch64\/globals_aarch64.hpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.hpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/vm_version_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/vm_version_aarch64.hpp"}],"sha":"2c27eb5e60c59ec4cd55e4d3805bde07d01ccb6e"},{"commit":{"message":"Document pauth functions && remove OS split"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/c1_Runtime1_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.hpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/pauth_aarch64.hpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/sharedRuntime_aarch64.cpp"},{"filename":"src\/hotspot\/os_cpu\/bsd_aarch64\/pauth_bsd_aarch64.inline.hpp"},{"filename":"src\/hotspot\/os_cpu\/linux_aarch64\/pauth_linux_aarch64.inline.hpp"},{"filename":"src\/hotspot\/os_cpu\/windows_aarch64\/pauth_windows_aarch64.inline.hpp"}],"sha":"25e624922afd9a9c229e2dbf2a7519a6c985daff"},{"commit":{"message":"Update UseROPProtection description"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/globals_aarch64.hpp"}],"sha":"cfad2fe2d44090016b690b6cac198f8985330257"},{"commit":{"message":"Simplify branch protection configure check"},"files":[{"filename":"make\/autoconf\/flags-cflags.m4"}],"sha":"29471d30f2f5b328eaef7c2e2042f65cfbfc698d"},{"commit":{"message":"8264130: PAC-RET protection for Linux\/AArch64\n\nPAC is an optional feature in AArch64 8.3 and is compulsory in v9. One\nof its uses is to protect against ROP based attacks. This is done by\nsigning the Link Register whenever it is stored on the stack, and\nauthenticating the value when it is loaded back from the stack. If an\nattacker were to try to change control flow by editing the stack then\nthe authentication check of the Link Register will fail, causing a\nsegfault when the function returns.\n\nOn a system with PAC enabled, it is expected that all applications will\nbe compiled with ROP protection. Fedora 33 and upwards already provide\nthis. By compiling for ARMv8.0, GCC and LLVM will only use the set of\nPAC instructions that exist in the NOP space - on hardware without PAC,\nthese instructions act as NOPs, allowing backward compatibility for\nnegligible performance cost (2 NOPs per non-leaf function).\n\nHardware is currently limited to the Apple M1 MacBooks. All testing has\nbeen done within a Fedora Docker image. A run of SpecJVM showed no\ndifference to that of noise - which was surprising.\n\nThe most important part of this patch is simply compiling using branch\nprotection provided by GCC\/LLVM. This protects all C++ code from being\nused in ROP attacks, removing all static ROP gadgets from use.\n\nThe remainder of the patch adds ROP protection to runtime generated\ncode, in both stubs and compiled Java code. Attacks here are much harder\nas ROP gadgets must be found dynamically at runtime. If\/when AOT\ncompilation is added to JDK, then all stubs and compiled Java will be\nsusceptible ROP gadgets being found by static analysis and therefore\npotentially as vulnerable as C++ code.\n\nThere are a number of places where the VM changes control flow by\nrewriting the stack or otherwise. I’ve done some analysis as to how\nthese could also be used for attacks (which I didn’t want to post here).\nThese areas can be protected ensuring the pointers to various stubs and\nentry points are stored in memory as signed pointers. These changes are\nsimple to make (they can be reduced to a type change in common code and\na few addition sign\/auth calls in the backend), but there a lot of them\nand the total code change is fairly large. I’m happy to provide a few\nwork in progress patches.\n\nIn order to match the security benefits of the Apple Arm64e ABI across\nthe whole of JDK, then all the changes mentioned above would be\nrequired."},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/aarch64.ad"},{"filename":"src\/hotspot\/cpu\/aarch64\/c1_Runtime1_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/frame_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.hpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/pauth_aarch64.hpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/sharedRuntime_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/templateInterpreterGenerator_aarch64.cpp"},{"filename":"src\/hotspot\/os_cpu\/bsd_aarch64\/pauth_bsd_aarch64.inline.hpp"},{"filename":"src\/hotspot\/os_cpu\/linux_aarch64\/pauth_linux_aarch64.inline.hpp"},{"filename":"src\/hotspot\/os_cpu\/linux_aarch64\/threadLS_linux_aarch64.S"},{"filename":"src\/hotspot\/os_cpu\/windows_aarch64\/pauth_windows_aarch64.inline.hpp"},{"filename":"src\/hotspot\/share\/opto\/runtime.cpp"},{"filename":"src\/hotspot\/share\/runtime\/frame.cpp"},{"filename":"src\/hotspot\/share\/runtime\/sharedRuntime.cpp"}],"sha":"e0e3f666d85f5b0414b200fb9288928a181875fb"},{"commit":{"message":"Add PAC assembly instructions"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/assembler_aarch64.hpp"},{"filename":"test\/hotspot\/gtest\/aarch64\/aarch64-asmtest.py"},{"filename":"test\/hotspot\/gtest\/aarch64\/asmtest.out.h"}],"sha":"2c7e2730470b6ae1a0b4f402335c68a7560d8ecf"},{"commit":{"message":"Add AArch64 ROP protection runtime flag"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/globals_aarch64.hpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/vm_version_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/vm_version_aarch64.hpp"},{"filename":"src\/hotspot\/os_cpu\/linux_aarch64\/vm_version_linux_aarch64.cpp"},{"filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk.vm.ci.aarch64\/src\/jdk\/vm\/ci\/aarch64\/AArch64.java"}],"sha":"66b05a68586064592fab7889fd2e9db795e96798"},{"commit":{"message":"Build with branch protection"},"files":[{"filename":"make\/autoconf\/flags-cflags.m4"},{"filename":"make\/autoconf\/spec.gmk.in"}],"sha":"9b05854c74ee0f6d1ad3fbf743f543bb67eed5f5"}]