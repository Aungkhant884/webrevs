{"files":[{"patch":"@@ -1372,2 +1372,2 @@\n-    \/\/ r29 is not allocatable when PreserveFramePointer or UseROPProtection is on\n-    if (PreserveFramePointer || UseROPProtection) {\n+    \/\/ r29 is not allocatable when PreserveFramePointer or ROP protection is on\n+    if (PreserveFramePointer || VM_Version::use_rop_protection()) {\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64.ad","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -122,2 +122,2 @@\n-  product(bool, UseROPProtection, false,                                \\\n-          \"Protect branches against ROP attacks.\")                      \\\n+  product(ccstr, UseBranchProtection, \"none\",                           \\\n+          \"Branch Protection to use: none,standard,pac-ret\")            \\\n","filename":"src\/hotspot\/cpu\/aarch64\/globals_aarch64.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -5289,1 +5289,1 @@\n-\/\/ If UseROPProtection is not set then these functions are no-ops.\n+\/\/ If ROP protection is not set then these functions are no-ops.\n@@ -5296,1 +5296,1 @@\n-  if (UseROPProtection) {\n+  if (VM_Version::use_rop_protection()) {\n@@ -5311,1 +5311,1 @@\n-  if (UseROPProtection) {\n+  if (VM_Version::use_rop_protection()) {\n@@ -5321,1 +5321,1 @@\n-  if (UseROPProtection) {\n+  if (VM_Version::use_rop_protection()) {\n@@ -5333,1 +5333,1 @@\n-  if (UseROPProtection) {\n+  if (VM_Version::use_rop_protection()) {\n@@ -5344,1 +5344,1 @@\n-  if (UseROPProtection) {\n+  if (VM_Version::use_rop_protection()) {\n@@ -5358,1 +5358,1 @@\n-  if (UseROPProtection) {\n+  if (VM_Version::use_rop_protection()) {\n","filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -77,1 +77,1 @@\n-  if (UseROPProtection) {\n+  if (VM_Version::use_rop_protection()) {\n","filename":"src\/hotspot\/cpu\/aarch64\/pauth_aarch64.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -48,0 +48,1 @@\n+bool VM_Version::_rop_protection;\n@@ -411,0 +412,5 @@\n+  if (UseBranchProtection == nullptr || strcmp(UseBranchProtection, \"none\") == 0) {\n+    _rop_protection = false;\n+  } else if (strcmp(UseBranchProtection, \"standard\") == 0) {\n+    _rop_protection = false;\n+    \/\/ Enable PAC if this code has been built with branch-protection and the CPU\/OS supports it.\n@@ -412,3 +418,2 @@\n-  if (_features & CPU_PACA) {\n-    if (FLAG_IS_DEFAULT(UseROPProtection)) {\n-      FLAG_SET_DEFAULT(UseROPProtection, true);\n+    if (_features & CPU_PACA) {\n+      _rop_protection = true;\n@@ -416,2 +421,5 @@\n-  } else {\n-    if (UseROPProtection) {\n+#endif\n+  } else if (strcmp(UseBranchProtection, \"pac-ret\") == 0) {\n+    _rop_protection = true;\n+#ifdef __ARM_FEATURE_PAC_DEFAULT\n+    if (!(_features & CPU_PACA)) {\n@@ -419,1 +427,0 @@\n-      FLAG_SET_DEFAULT(UseROPProtection, false);\n@@ -421,1 +428,0 @@\n-  }\n@@ -423,5 +429,1 @@\n-  \/\/ The VM has not been built with the branch protection flag.\n-  if (UseROPProtection) {\n-    warning(\"UseROPProtection specified, but not supported.\");\n-    FLAG_SET_DEFAULT(UseROPProtection, false);\n-  }\n+    warning(\"UseROPProtection specified, but not supported in the VM.\");\n@@ -429,0 +431,3 @@\n+  } else {\n+    vm_exit_during_initialization(err_msg(\"Unsupported UseBranchProtection: %s\", UseBranchProtection));\n+  }\n","filename":"src\/hotspot\/cpu\/aarch64\/vm_version_aarch64.cpp","additions":17,"deletions":12,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -48,0 +48,1 @@\n+  static bool _rop_protection;\n@@ -157,0 +158,2 @@\n+\n+  static bool use_rop_protection() { return _rop_protection; }\n","filename":"src\/hotspot\/cpu\/aarch64\/vm_version_aarch64.hpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -52,1 +52,1 @@\n-  if (UseROPProtection) {\n+  if (VM_Version::use_rop_protection()) {\n@@ -66,1 +66,1 @@\n-  if (UseROPProtection) {\n+  if (VM_Version::use_rop_protection()) {\n","filename":"src\/hotspot\/os_cpu\/linux_aarch64\/pauth_linux_aarch64.inline.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}