{"files":[{"patch":"@@ -31,16 +31,0 @@\n-inline bool pauth_ptr_is_raw(address ptr);\n-\n-#ifdef __APPLE__\n-#include <ptrauth.h>\n-#endif\n-\n-\/\/ Use only the PAC instructions in the NOP space. This ensures the binaries work on systems\n-\/\/ without PAC. Write these instructions using their alternate \"hint\" instructions to ensure older\n-\/\/ compilers can still be used. For Apple, instead use the recommended pauth interface.\n-#define XPACLRI   \"hint #0x7;\"\n-#define PACIA1716 \"hint #0x8;\"\n-#define AUTIA1716 \"hint #0xc;\"\n-\n-\/\/ Strip an address. Use with caution - only if there is no guaranteed way of authenticating the\n-\/\/ value.\n-\/\/\n@@ -48,7 +32,2 @@\n-#ifdef __APPLE__\n-  return ptrauth_strip(ptr, ptrauth_key_asib);\n-#else\n-  register address result __asm__(\"x30\") = ptr;\n-  asm (XPACLRI : \"+r\"(result));\n-  return result;\n-#endif\n+  \/\/ No PAC support in BSD as of yet.\n+  return ptr;\n@@ -57,2 +36,0 @@\n-\/\/ Sign a return value, using the given modifier.\n-\/\/\n@@ -60,12 +37,1 @@\n-  if (UseROPProtection) {\n-    \/\/ A pointer cannot be double signed.\n-    guarantee(pauth_ptr_is_raw(ret_addr), \"Return address is already signed\");\n-#ifdef __APPLE__\n-    ret_addr = ptrauth_sign_unauthenticated(ret_addr, ptrauth_key_asib, sp);\n-#else\n-    register address r17 __asm(\"r17\") = ret_addr;\n-    register address r16 __asm(\"r16\") = sp;\n-    asm volatile (PACIA1716 : \"+r\"(r17) : \"r\"(r16));\n-    ret_addr = r17;\n-#endif\n-  }\n+  \/\/ No PAC support in BSD as of yet.\n@@ -75,2 +41,0 @@\n-\/\/ Authenticate a return value, using the given modifier.\n-\/\/\n@@ -78,12 +42,1 @@\n-  if (UseROPProtection) {\n-#ifdef __APPLE__\n-    ret_addr = ptrauth_auth_data(ret_addr, ptrauth_key_asib, sp);\n-#else\n-    register address r17 __asm(\"r17\") = ret_addr;\n-    register address r16 __asm(\"r16\") = sp;\n-    asm volatile (AUTIA1716 : \"+r\"(r17) : \"r\"(r16));\n-    ret_addr = r17;\n-#endif\n-    \/\/ Ensure that the pointer authenticated.\n-    guarantee(pauth_ptr_is_raw(ret_addr), \"Return address did not authenticate\");\n-  }\n+  \/\/ No PAC support in BSD as of yet.\n@@ -93,4 +46,0 @@\n-#undef XPACLRI\n-#undef PACIA1716\n-#undef AUTIA1716\n-\n","filename":"src\/hotspot\/os_cpu\/bsd_aarch64\/pauth_bsd_aarch64.inline.hpp","additions":4,"deletions":55,"binary":false,"changes":59,"status":"modified"}]}