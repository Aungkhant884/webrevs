{"files":[{"patch":"@@ -141,3 +141,4 @@\n-must be provided. This requires compiler support (GCC 9.1.0+ or Clang 10+). The\n-resulting build can be run on both machines with and without support for branch\n-protection in hardware. This is only supported for Linux targets.\n+must be used. This option requires C++ compiler support (GCC 9.1.0+ or Clang\n+10+). The resulting build can be run on both machines with and without support\n+for branch protection in hardware. Branch Protection is only supported for\n+Linux targets.\n","filename":"doc\/building.md","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -1004,1 +1004,0 @@\n-  \/\/ PAC instructions\n@@ -1105,0 +1104,1 @@\n+\n@@ -1139,1 +1139,0 @@\n-  \/\/ PAC return instructions\n@@ -1150,1 +1149,0 @@\n-  \/\/ PAC branch instructions (with zero modifier)\n@@ -1163,1 +1161,0 @@\n-  \/\/ PAC branch instructions (with register modifier)\n@@ -1176,1 +1173,0 @@\n-\n","filename":"src\/hotspot\/cpu\/aarch64\/assembler_aarch64.hpp","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -273,0 +273,1 @@\n+  address pc_old = pauth_strip_verifiable(*pc_addr, (address)signing_sp);\n@@ -274,2 +275,6 @@\n-    tty->print_cr(\"patch_pc at address \" INTPTR_FORMAT \" [\" INTPTR_FORMAT \" -> \" INTPTR_FORMAT \"]\",\n-                  p2i(pc_addr), p2i(*pc_addr), p2i(signed_pc));\n+    tty->print(\"patch_pc at address \" INTPTR_FORMAT \" [\" INTPTR_FORMAT \" -> \" INTPTR_FORMAT \"]\",\n+                  p2i(pc_addr), p2i(pc_old), p2i(pc));\n+    if (VM_Version::use_rop_protection()) {\n+      tty->print(\" [signed \" INTPTR_FORMAT \" -> \" INTPTR_FORMAT \"]\", p2i(*pc_addr), p2i(signed_pc));\n+    }\n+    tty->print_cr(\"\");\n@@ -280,1 +285,0 @@\n-  address pc_old = pauth_strip_verifiable(*pc_addr, (address)signing_sp);\n","filename":"src\/hotspot\/cpu\/aarch64\/frame_aarch64.cpp","additions":7,"deletions":3,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -57,1 +57,1 @@\n-    asm volatile (PACIA1716 : \"+r\"(r17) : \"r\"(r16));\n+    asm (PACIA1716 : \"+r\"(r17) : \"r\"(r16));\n@@ -69,1 +69,1 @@\n-    asm volatile (AUTIA1716 : \"+r\"(r17) : \"r\"(r16));\n+    asm (AUTIA1716 : \"+r\"(r17) : \"r\"(r16));\n","filename":"src\/hotspot\/os_cpu\/linux_aarch64\/pauth_linux_aarch64.inline.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}