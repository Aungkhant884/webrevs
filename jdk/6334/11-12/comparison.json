{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -274,1 +274,1 @@\n-    __ enter(); \/\/ barrier may call runtime\n+    __ enter_subframe(); \/\/ barrier may call runtime\n","filename":"src\/hotspot\/cpu\/aarch64\/gc\/g1\/g1BarrierSetAssembler_aarch64.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Red Hat, Inc. All rights reserved.\n+ * Copyright (c) 2018, 2022, Red Hat, Inc. All rights reserved.\n@@ -240,1 +240,1 @@\n-  __ enter();\n+  __ enter_subframe();\n@@ -362,1 +362,1 @@\n-    __ enter();\n+    __ enter_subframe();\n","filename":"src\/hotspot\/cpu\/aarch64\/gc\/shenandoah\/shenandoahBarrierSetAssembler_aarch64.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -81,1 +81,1 @@\n-  __ enter();\n+  __ enter_subframe();\n","filename":"src\/hotspot\/cpu\/aarch64\/gc\/z\/zBarrierSetAssembler_aarch64.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1140,0 +1140,1 @@\n+  strip_return_address(); \/\/ This might happen within a stack frame.\n@@ -1171,0 +1172,1 @@\n+  strip_return_address(); \/\/ This might happen within a stack frame.\n@@ -5290,0 +5292,9 @@\n+\/\/ Create an additional frame for a function.\n+void MacroAssembler::enter_subframe()\n+{\n+  \/\/ Addresses can only be signed once, so strip it first. PAC safe because the value is not\n+  \/\/ coming from memory.\n+  strip_return_address();\n+  enter();\n+}\n+\n","filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.cpp","additions":11,"deletions":0,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -692,0 +692,1 @@\n+  void enter_subframe();\n","filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -801,1 +801,0 @@\n-  __ protect_return_address();\n@@ -836,0 +835,1 @@\n+  __ protect_return_address();\n","filename":"src\/hotspot\/cpu\/aarch64\/templateInterpreterGenerator_aarch64.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,0 +31,1 @@\n+#include \"runtime\/frame.inline.hpp\"\n@@ -57,0 +58,1 @@\n+  AARCH64_ONLY(return_address=pauth_strip_pointer(return_address));\n","filename":"src\/hotspot\/share\/gc\/shared\/barrierSetNMethod.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -741,0 +741,1 @@\n+  static_field(VM_Version, _rop_protection, bool)                       \\\n","filename":"src\/hotspot\/share\/jvmci\/vmStructs_jvmci.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,0 +57,1 @@\n+    protected final Architecture arch;\n@@ -64,1 +65,2 @@\n-        config = new TestHotSpotVMConfig(HotSpotJVMCIRuntime.runtime().getConfigStore());\n+        arch = codeCache.getTarget().arch;\n+        config = new TestHotSpotVMConfig(HotSpotJVMCIRuntime.runtime().getConfigStore(), arch);\n@@ -73,1 +75,0 @@\n-        Architecture arch = codeCache.getTarget().arch;\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/jdk.vm.ci.code.test\/src\/jdk\/vm\/ci\/code\/test\/CodeInstallationTest.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,0 +25,2 @@\n+import jdk.vm.ci.aarch64.AArch64;\n+import jdk.vm.ci.code.Architecture;\n@@ -30,1 +32,1 @@\n-    public TestHotSpotVMConfig(HotSpotVMConfigStore config) {\n+    public TestHotSpotVMConfig(HotSpotVMConfigStore config, Architecture arch) {\n@@ -32,0 +34,1 @@\n+        ropProtection = (arch instanceof AArch64) ? getFieldValue(\"VM_Version::_rop_protection\", Boolean.class) : false;\n@@ -51,0 +54,2 @@\n+\n+    public final boolean ropProtection;\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/jdk.vm.ci.code.test\/src\/jdk\/vm\/ci\/code\/test\/TestHotSpotVMConfig.java","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n- * Copyright (c) 2020, Arm Limited. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Arm Limited. All rights reserved.\n@@ -257,0 +257,3 @@\n+        if (config.ropProtection) {\n+            code.emitInt(0xdac103be);  \/\/ pacia x30, x29\n+        }\n@@ -472,0 +475,3 @@\n+        if (config.ropProtection) {\n+            code.emitInt(0xdac113be);  \/\/ autia x30, x29\n+        }\n@@ -480,0 +486,3 @@\n+        if (config.ropProtection) {\n+            code.emitInt(0xdac113be);  \/\/ autia x30, x29\n+        }\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/jdk.vm.ci.code.test\/src\/jdk\/vm\/ci\/code\/test\/aarch64\/AArch64TestAssembler.java","additions":11,"deletions":2,"binary":false,"changes":13,"status":"modified"}]}